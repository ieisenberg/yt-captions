[
  {
    "start": "0",
    "end": "81000"
  },
  {
    "text": "all right good morning everyone welcome to our talk we're excited to be at the first Q con China today to talk to you",
    "start": "2720",
    "end": "9320"
  },
  {
    "text": "about building containers faster with chip which is a containers builder we built for Java applications so who are",
    "start": "9320",
    "end": "18050"
  },
  {
    "text": "we where Java team out of Google New York we focus on developer tools my name",
    "start": "18050",
    "end": "24770"
  },
  {
    "text": "is Elle Pugh I'm cute and our team's current focuses on helping the Java",
    "start": "24770",
    "end": "30110"
  },
  {
    "text": "developer experience on kubernetes and talker",
    "start": "30110",
    "end": "34989"
  },
  {
    "text": "so many of you are already familiar with containers which allow you to say take your traditional monolithic job",
    "start": "36160",
    "end": "42530"
  },
  {
    "text": "application and slip into micro services to orchestrate while acting appreciation platform like kubernetes",
    "start": "42530",
    "end": "48500"
  },
  {
    "text": "and gala developers already familiar is billing jars containers are sort of same concept the idea behind jars the Tribune",
    "start": "48500",
    "end": "56119"
  },
  {
    "text": "of hot Java is very similar to the idea behind containers which is idea of write once run anywhere however building",
    "start": "56119",
    "end": "62359"
  },
  {
    "text": "containers for Java applications can be quite a confusing and tricky process to",
    "start": "62359",
    "end": "68420"
  },
  {
    "text": "see kind of out confusing and tricky that can be let's start off with a story",
    "start": "68420",
    "end": "73490"
  },
  {
    "text": "about a Java developer an experienced Java developer who's taking a stab at building a container image for their job",
    "start": "73490",
    "end": "80000"
  },
  {
    "text": "application all right so let's say I'm a Java developer and I'm building a website for pet click I want to",
    "start": "80000",
    "end": "86990"
  },
  {
    "start": "81000",
    "end": "425000"
  },
  {
    "text": "containerize my back-end my Java back-end and I want my container image to be on my registry at I love John io /",
    "start": "86990",
    "end": "93979"
  },
  {
    "text": "Pecola the gap so what I do first well I go I search Bill Java docker image or I",
    "start": "93979",
    "end": "100420"
  },
  {
    "text": "go by do I search goes yeah and Java it seems young and then I read the top you",
    "start": "100420",
    "end": "106220"
  },
  {
    "text": "toriel's and I'm able to write this docker file mmm okay so I run doctor build on this",
    "start": "106220",
    "end": "113780"
  },
  {
    "text": "well it takes a very long time to actually do the build so this is a pretty complex talker file there's a lot",
    "start": "113780",
    "end": "120380"
  },
  {
    "text": "going on here you have to looks like install some Python packages you accept",
    "start": "120380",
    "end": "125750"
  },
  {
    "text": "and install the accept license for and install the Oracle Java 8 JDK you",
    "start": "125750",
    "end": "131450"
  },
  {
    "text": "install maven you add your source code in you do your build inside your container and then you can tell you tell",
    "start": "131450",
    "end": "136760"
  },
  {
    "text": "your container how to run your application however doctors come a long way from this and there must be a",
    "start": "136760",
    "end": "142250"
  },
  {
    "text": "simpler way to do this okay so I read some more tutorials and I'm able to",
    "start": "142250",
    "end": "148190"
  },
  {
    "text": "write this much better doc file I'm using a well maintained base image on the dog hub the open JDK face image and",
    "start": "148190",
    "end": "154220"
  },
  {
    "text": "all I'm doing it is on copy my fat jar into my container image I say my entry point to run that fat charm so this is a",
    "start": "154220",
    "end": "161180"
  },
  {
    "text": "lot simpler a lot fewer layers a lot more readable yeah so this is great it is a lot easier to read for someone",
    "start": "161180",
    "end": "168020"
  },
  {
    "text": "looking at this it's very obvious what's happening however when I did this build on my machine I found out my",
    "start": "168020",
    "end": "173570"
  },
  {
    "text": "container image was 300 megabytes and that's really a lot for just simple java application okay so I do some searching",
    "start": "173570",
    "end": "181160"
  },
  {
    "text": "and I find that the open JDK base image is two hundred eighty four megabytes by itself which is huge making my time is",
    "start": "181160",
    "end": "188090"
  },
  {
    "text": "over three hundred megabytes so I do some more searching and I find that I",
    "start": "188090",
    "end": "193580"
  },
  {
    "text": "can use the Alpine Rose open JDK Alpine is a tiny execution which by itself is",
    "start": "193580",
    "end": "199160"
  },
  {
    "text": "only about four megabytes and also just using the GRU version so this beige snitch is only 82 megabytes making my",
    "start": "199160",
    "end": "205610"
  },
  {
    "text": "entire image a lot of smaller all right it seems that well I do the build it still takes a while to run so for those",
    "start": "205610",
    "end": "212540"
  },
  {
    "text": "of you familiar doing docker builds at the beginning you'll see a message like sending docker context to dr. demon and",
    "start": "212540",
    "end": "219260"
  },
  {
    "text": "what that means it's sending all the files you're dr. demon needs to do your docker build and in this case though",
    "start": "219260",
    "end": "224420"
  },
  {
    "text": "what the default case it's all the files in the directory where your docker file is and that could contain any number of",
    "start": "224420",
    "end": "229610"
  },
  {
    "text": "files including things you don't need at all in this case we only need our jar because that's the only thing we're",
    "start": "229610",
    "end": "236120"
  },
  {
    "text": "copying over and really we should take a look at doctor best practices to see if there's a way",
    "start": "236120",
    "end": "241700"
  },
  {
    "text": "to help us to help ourselves out dr. fogg best practices so I searched talked",
    "start": "241700",
    "end": "247340"
  },
  {
    "text": "about best practices and I find the official doctor best prices and that's a",
    "start": "247340",
    "end": "252500"
  },
  {
    "text": "lot of best practices in there I see something about a doctor northbound so I do tutorials on doc north files and I'm",
    "start": "252500",
    "end": "259430"
  },
  {
    "text": "able to write this dr. gore file it ignores everything in my product directory except for the fact jars I",
    "start": "259430",
    "end": "264860"
  },
  {
    "text": "wanna copy into liked image so now my pill runs a lot faster I do doctor",
    "start": "264860",
    "end": "270170"
  },
  {
    "text": "portion but it seems that if I just change a single line code it still takes a while to do the push so you remember",
    "start": "270170",
    "end": "277130"
  },
  {
    "text": "in our darker file we had a single line for our whole application so every time you change anything in your application",
    "start": "277130",
    "end": "282650"
  },
  {
    "text": "you have to rebuild the jar put it in your container and send that container over to container registry but docker",
    "start": "282650",
    "end": "287960"
  },
  {
    "text": "has a thing called layers and maybe there's a way we can split our application into separate layers so we",
    "start": "287960",
    "end": "293480"
  },
  {
    "text": "focus all our changes in a single layer okay dr. Larry so I do some toriel's I'm",
    "start": "293480",
    "end": "299030"
  },
  {
    "text": "dr. layering and I'm able to write this better docker file I stood my application to two layers one for my",
    "start": "299030",
    "end": "305270"
  },
  {
    "text": "dependency jars and one for my class files this way well I only changed my class files the only layer I need to",
    "start": "305270",
    "end": "311300"
  },
  {
    "text": "resend is the class layer and not that usually much larger our dependencies layer so now my build runs lot faster I",
    "start": "311300",
    "end": "318200"
  },
  {
    "text": "can do it or development I think we're good to go right yeah you can see the first line here that if we change a",
    "start": "318200",
    "end": "325370"
  },
  {
    "text": "dependency we have to run a special maven command to copy those dead dependencies into our target directory maybe we can orchestrate everything from",
    "start": "325370",
    "end": "333350"
  },
  {
    "text": "maven mmm okay so I do some more searching and I find that there's maven",
    "start": "333350",
    "end": "340250"
  },
  {
    "text": "plugin so I could use to define my dog a build with send my maven tommix no so I saw my dog fala I apply this maven",
    "start": "340250",
    "end": "347210"
  },
  {
    "text": "plug-in and I could run my dog a bill from maven I get to do all that develop in with native commands great I think",
    "start": "347210",
    "end": "353540"
  },
  {
    "text": "I'm good to go so that was a pretty long process to get from writing our first",
    "start": "353540",
    "end": "358880"
  },
  {
    "text": "very naive docker file to where at the end where we had a maven plugin you reduce the image size we removed all the",
    "start": "358880",
    "end": "366560"
  },
  {
    "text": "install commands by using a better base image we added a docker ignore file to limit the",
    "start": "366560",
    "end": "372690"
  },
  {
    "text": "initialization cost of the build and we split our application up into layers to improve incremental build times there's",
    "start": "372690",
    "end": "381030"
  },
  {
    "text": "a couple more issues with dr. wen that you have to be aware of when using dr. first of all you have to download and",
    "start": "381030",
    "end": "386340"
  },
  {
    "text": "install docker and then the order of your layers affects your cache hits you",
    "start": "386340",
    "end": "391770"
  },
  {
    "text": "can use multistage docker builds to separate the build part of your docker build from the container I mean from the",
    "start": "391770",
    "end": "399300"
  },
  {
    "text": "part that containerize your application there's other dock cache mechanisms and quirks that you might want to be aware of you truly want to understand your",
    "start": "399300",
    "end": "405599"
  },
  {
    "text": "docker build finally a problem we all have is you have to have elevated privileges or route to run the doctor",
    "start": "405599",
    "end": "412229"
  },
  {
    "text": "daemon if you're concerned about your docker build there's some tips and tricks by",
    "start": "412229",
    "end": "419410"
  },
  {
    "text": "our colleague Ray at this link here we'll hop this at the end but we're not oh I'm sorry",
    "start": "419410",
    "end": "425610"
  },
  {
    "text": "so when containerized is docker there's many steps that exist between your",
    "start": "425610",
    "end": "430930"
  },
  {
    "text": "project and your container image actually existing on your registry you have to build your jar you have to write",
    "start": "430930",
    "end": "435970"
  },
  {
    "text": "your dog file you have to send that along with your jar via the doctor client to dr. demon and a dog a demon",
    "start": "435970",
    "end": "441760"
  },
  {
    "text": "has to run a container or the Builder container image and then dr. push pushes it to a registry however well our Java",
    "start": "441760",
    "end": "448030"
  },
  {
    "text": "developers and we don't want to have to care about docker files the containerization process should be as",
    "start": "448030",
    "end": "453580"
  },
  {
    "text": "simple as have your project running some build and just having your carriage be on your registry so that's why we build",
    "start": "453580",
    "end": "461230"
  },
  {
    "text": "Jim we build chip as plug-ins for maven and Gradle that you can containerize an existing maven or greater project in two",
    "start": "461230",
    "end": "467830"
  },
  {
    "text": "easy steps just apply the plug-in and run your build alright do a live demo",
    "start": "467830",
    "end": "475860"
  },
  {
    "text": "the spring Peck lyric sample off of just off of github our just a clone it and",
    "start": "481350",
    "end": "488130"
  },
  {
    "text": "directly a containerized it with chip",
    "start": "488130",
    "end": "492240"
  },
  {
    "text": "this morning does particularly simple out you",
    "start": "494760",
    "end": "501580"
  },
  {
    "text": "interests",
    "start": "502330",
    "end": "505228"
  },
  {
    "text": "you run a server and serves up essentially a pet clinic with pets and",
    "start": "511229",
    "end": "517360"
  },
  {
    "text": "veterinarians all right so we got the the repo cloned",
    "start": "517360",
    "end": "523789"
  },
  {
    "text": "and all we're gonna do is we're gonna run trip directly on here so we're gonna fully qualify it so that even knows",
    "start": "523789",
    "end": "530960"
  },
  {
    "text": "where to find it I only use version although 1000 I'm gonna call the build goal I'm gonna say",
    "start": "530960",
    "end": "537680"
  },
  {
    "text": "where we want image to go and I'm going to use my talk about registry and I'm",
    "start": "537680",
    "end": "542839"
  },
  {
    "text": "gonna tell it to use a different base image than destroy list which is the default because I would cache to that",
    "start": "542839",
    "end": "548750"
  },
  {
    "text": "from here so I'm gonna use the open JDK image that we just talked about",
    "start": "548750",
    "end": "554230"
  },
  {
    "text": "so this is going to start the movement built it's gonna do a compilation of the",
    "start": "556910",
    "end": "561959"
  },
  {
    "text": "spring pellet click project and then after cap Alice I'll run the",
    "start": "561959",
    "end": "568129"
  },
  {
    "text": "trip maven plug-in to containerized that into a pyramid I'll be on my hub registry",
    "start": "568129",
    "end": "574209"
  },
  {
    "text": "once that finishes it's actually supposed to shut down my",
    "start": "574209",
    "end": "581230"
  },
  {
    "text": "doctor teaming to show that doesn't actually you're the doctor you do that but we're gonna actually take this image and I just website called play with",
    "start": "581230",
    "end": "589600"
  },
  {
    "text": "soccer calm you can go and launch an instance and just run docker images off",
    "start": "589600",
    "end": "597340"
  },
  {
    "text": "calm whilst our new instance",
    "start": "597340",
    "end": "603969"
  },
  {
    "text": "that's starting you",
    "start": "606930",
    "end": "613570"
  },
  {
    "text": "all right I'm gonna use my local document to run this so I'll pull this",
    "start": "613920",
    "end": "622188"
  },
  {
    "text": "and once that's pulled I just run it",
    "start": "626430",
    "end": "634230"
  },
  {
    "text": "for for 880 we have our picnic option that was containerized chip starting up",
    "start": "635740",
    "end": "641950"
  },
  {
    "text": "from the container that we just built now we can go say go to localhost 8080",
    "start": "641950",
    "end": "648530"
  },
  {
    "text": "and we have our application accessible cool",
    "start": "648530",
    "end": "655390"
  },
  {
    "text": "so in that demo you saw we took a project we did a jib build and we ended",
    "start": "657589",
    "end": "664290"
  },
  {
    "text": "up with a container image on the container registry we didn't we didn't need to use docker for this build and",
    "start": "664290",
    "end": "671759"
  },
  {
    "text": "that's what we want chip to be used primarily for however some of you might still have some docker infrastructure so",
    "start": "671759",
    "end": "678119"
  },
  {
    "text": "if you want to build to a docker demon jib gives you the option of building to that docker demon you can also export a",
    "start": "678119",
    "end": "683309"
  },
  {
    "text": "docker context which would be a docker file with all the accompanying application files and we'll export that",
    "start": "683309",
    "end": "689459"
  },
  {
    "text": "into a directory and you can run the docker built there yourself or you can inspect that directory to kind of see what's going on but if you want to",
    "start": "689459",
    "end": "695699"
  },
  {
    "text": "extend your configuration maybe it's a more advanced configuration you can set JVM flags for your application you can",
    "start": "695699",
    "end": "703350"
  },
  {
    "text": "set how chip chooses your credentials you can add labels to your container config you can environment variables you",
    "start": "703350",
    "end": "709739"
  },
  {
    "text": "can even add extra non application files that you want to be packaged with your application",
    "start": "709739",
    "end": "714980"
  },
  {
    "text": "all right so now we're gonna do another demo this time we're gonna act Aynor eyes a micro not a patient that's",
    "start": "714980",
    "end": "721440"
  },
  {
    "text": "partially in groovy and we're gonna containerize you the trip Gradle plugin",
    "start": "721440",
    "end": "727699"
  },
  {
    "text": "container I think directly to a darker demon yeah so instead of going to container registry as we did in",
    "start": "729740",
    "end": "738000"
  },
  {
    "text": "the previous demo",
    "start": "738000",
    "end": "740570"
  },
  {
    "text": "alright clone it and run ship docker build which I'll bill it directly to the",
    "start": "744139",
    "end": "751410"
  },
  {
    "text": "doctor Thema not running you",
    "start": "751410",
    "end": "755970"
  },
  {
    "text": "compiling my groobie and then I was running the trip Gradle plug-in scooter",
    "start": "757720",
    "end": "763360"
  },
  {
    "text": "eyes and we're done all right so we take this occasion we just show you running",
    "start": "763360",
    "end": "769420"
  },
  {
    "text": "it yeah expose for 880 again",
    "start": "769420",
    "end": "775050"
  },
  {
    "text": "one start it up we can just curl the application endpoints hello Oh see us",
    "start": "776380",
    "end": "781990"
  },
  {
    "text": "little girl back cool so of course jib can exteriorized other GBM language - sighs just Java",
    "start": "781990",
    "end": "790529"
  },
  {
    "start": "790000",
    "end": "825000"
  },
  {
    "text": "so in those two demos the jib containerization happened as part of your build and we really want you to",
    "start": "791480",
    "end": "797300"
  },
  {
    "text": "feel like a compiler for containers when normally using docker file it feels like",
    "start": "797300",
    "end": "802970"
  },
  {
    "text": "a script you pick where your image comes from what commands to run to install dependencies you can copy your",
    "start": "802970",
    "end": "809630"
  },
  {
    "text": "application files over or an application jar and maybe do your build on the container if you want and then you",
    "start": "809630",
    "end": "815390"
  },
  {
    "text": "configure the entry point that's because docker is a language agnostic general-purpose build tool but",
    "start": "815390",
    "end": "822320"
  },
  {
    "text": "it knows nothing about your job application but since jib is integrated into your",
    "start": "822320",
    "end": "828190"
  },
  {
    "start": "825000",
    "end": "835000"
  },
  {
    "text": "build system it can infer what it needs from maven and Gradle to do containerization as part of your build",
    "start": "828190",
    "end": "834550"
  },
  {
    "text": "and historically you've had code and your add a compiler and you use those two to create an executable for a",
    "start": "834550",
    "end": "842320"
  },
  {
    "start": "835000",
    "end": "870000"
  },
  {
    "text": "container Iser you would just want to do the same thing you want to take your java code and turn it into a container and that's kind of because we want to",
    "start": "842320",
    "end": "848740"
  },
  {
    "text": "consider containers as your executable unit of the cloud so we've already kind",
    "start": "848740",
    "end": "854290"
  },
  {
    "text": "of done this with jars you know you with Java you take your application files in your jar DUP and that can include your",
    "start": "854290",
    "end": "860830"
  },
  {
    "text": "dependencies in like a fat jar and similarly Jib acts on your java code in the same way it packages it up with its",
    "start": "860830",
    "end": "867100"
  },
  {
    "text": "dependencies and puts it in a container so let's talk about let's explore a",
    "start": "867100",
    "end": "872860"
  },
  {
    "start": "870000",
    "end": "895000"
  },
  {
    "text": "little how Jib works so when we went to an open ship we kept a few goals in mind",
    "start": "872860",
    "end": "877870"
  },
  {
    "text": "first we want you to be purely in Java so that you can run ship with nothing but just your maven or Gradle build",
    "start": "877870",
    "end": "883930"
  },
  {
    "text": "systems we also want it to be optimized for Java applications so you have fast",
    "start": "883930",
    "end": "888970"
  },
  {
    "text": "rebuilds and fast development iteration cycles and we also want you to be able to build images reproducibly so we",
    "start": "888970",
    "end": "896800"
  },
  {
    "start": "895000",
    "end": "910000"
  },
  {
    "text": "implemented you purely in Java so that I can run as plug-ins for maven and Gradle so with ship you don't need to install",
    "start": "896800",
    "end": "903520"
  },
  {
    "text": "docker or any Drupal just abroad docker demon and you're not running a container or to build a container so how do we",
    "start": "903520",
    "end": "909760"
  },
  {
    "text": "achieve this well first it helps to understand what a container image is a container image is just a directory of",
    "start": "909760",
    "end": "915820"
  },
  {
    "start": "910000",
    "end": "960000"
  },
  {
    "text": "files and in the docker image format this directory of files is slept in two layers each represented as tar balls and",
    "start": "915820",
    "end": "922480"
  },
  {
    "text": "these tar balls composed into actual file system for the container image and in this format there's also to continue",
    "start": "922480",
    "end": "928780"
  },
  {
    "text": "configuration include things such as entry point volume mounts house checks things for when you're actually running",
    "start": "928780",
    "end": "934930"
  },
  {
    "text": "the container so for example this is a container configuration yeah the check sums of the layers as well as here we",
    "start": "934930",
    "end": "941770"
  },
  {
    "text": "have an entry point set which is command that's run when the container images front and then this format there's also",
    "start": "941770",
    "end": "948220"
  },
  {
    "text": "manifest there's wraps everything out the layers and the container configuration this is example of manifest yet the",
    "start": "948220",
    "end": "955279"
  },
  {
    "text": "unique event ice inspires all the layers and the kateri configuration which are all our check sums",
    "start": "955279",
    "end": "960850"
  },
  {
    "start": "960000",
    "end": "1012000"
  },
  {
    "text": "and as by default the chip image is built on top of the dish realist Java  the Shoeless is a setup language",
    "start": "960850",
    "end": "967959"
  },
  {
    "text": "focused base images for languages such as Java Python go and these images don't",
    "start": "967959",
    "end": "974319"
  },
  {
    "text": "include anything but what just what is necessary for running your application so compare this to Alpine for example",
    "start": "974319",
    "end": "979899"
  },
  {
    "text": "which is a popular base image recommended eye talker Alpine is still a Linux distribution it's just a tiny",
    "start": "979899",
    "end": "985540"
  },
  {
    "text": "alien this choice on our hand doesn't include package managers shells or any",
    "start": "985540",
    "end": "991389"
  },
  {
    "text": "other unnecessary programs so this helps to improve security by reducing possible",
    "start": "991389",
    "end": "996430"
  },
  {
    "text": "attack surfaces helps keep your cut images as minimal as possible and this is really what a container should be it",
    "start": "996430",
    "end": "1002220"
  },
  {
    "text": "should be adjust your application and its runtime dependencies now if you want to learn more about this rules there's a",
    "start": "1002220",
    "end": "1007920"
  },
  {
    "text": "great talk that's linked to in the destroy spot story so speed so if we're",
    "start": "1007920",
    "end": "1015149"
  },
  {
    "text": "trying to replace your docker build with the Jib build we want jib to be faster or at least as fast as your previous",
    "start": "1015149",
    "end": "1021600"
  },
  {
    "text": "docker and to understand what's going on its first important to understand how",
    "start": "1021600",
    "end": "1026880"
  },
  {
    "text": "docker builds happen when you do a build it creates a container image with multiple layers in this case you have a",
    "start": "1026880",
    "end": "1033209"
  },
  {
    "text": "hundred megabyte layer and a 50 megabyte layer and when you do a docker push it pushes these layers to your remote",
    "start": "1033209",
    "end": "1038668"
  },
  {
    "text": "container registry and it'll send over a hundred megabyte layer sent over 50 megabyte layer but docker builds and",
    "start": "1038669",
    "end": "1046260"
  },
  {
    "text": "container edges are smart when you make a change to one layer let's say the 50 megabyte layer it already knows 100",
    "start": "1046260",
    "end": "1053220"
  },
  {
    "text": "megabyte layer exists and it's cached and it only needs to change or only is to send over the changed layers so in",
    "start": "1053220",
    "end": "1058770"
  },
  {
    "text": "this case the 50 megabyte layer but smart developers can take advantage of this and split their application into",
    "start": "1058770",
    "end": "1064830"
  },
  {
    "text": "multiple parts and they can focus their changes on the small layers that changed",
    "start": "1064830",
    "end": "1070169"
  },
  {
    "text": "the most so let's say here we have a 1 megabyte layer we change it it only needs to send up the change layer so the",
    "start": "1070169",
    "end": "1077039"
  },
  {
    "text": "amount of data going over the wire it's small and that improves your build times Jib takes advantage of this if you see",
    "start": "1077039",
    "end": "1084070"
  },
  {
    "text": "here this is a docker build that we would expect Java developers to use it",
    "start": "1084070",
    "end": "1089169"
  },
  {
    "text": "splits your application dependencies resources in classes so if you change a class file it only resends your classes",
    "start": "1089169",
    "end": "1097030"
  },
  {
    "text": "layer and for many job applications the dependencies and resources where it can",
    "start": "1097030",
    "end": "1102610"
  },
  {
    "text": "be pretty heavy Jib doesn't build that's like this except we don't use docker files",
    "start": "1102610",
    "end": "1108980"
  },
  {
    "text": "so there's other advantages of using jib when you container eyes with docker since it's general-purpose each layer",
    "start": "1108980",
    "end": "1115550"
  },
  {
    "start": "1109000",
    "end": "1141000"
  },
  {
    "text": "that's being built might have a dependency on the previous layer that was so building in docker has to happen",
    "start": "1115550",
    "end": "1122060"
  },
  {
    "text": "sequentially once all the layers are built all the pushes can happen in parallel and dr. takes advantage of that",
    "start": "1122060",
    "end": "1129920"
  },
  {
    "text": "but when your container izing with jibs since it's a highly controlled environment each layer is built",
    "start": "1129920",
    "end": "1135590"
  },
  {
    "text": "independently and pushed independently so you paralyze the whole process and you can reduce your total build time",
    "start": "1135590",
    "end": "1141520"
  },
  {
    "start": "1141000",
    "end": "1149000"
  },
  {
    "text": "since jib also splits your application into multiple layers you can take advantage of caching pretty easily",
    "start": "1141520",
    "end": "1146810"
  },
  {
    "text": "because it happens automatically for you here's a small kind of example of build",
    "start": "1146810",
    "end": "1154340"
  },
  {
    "start": "1149000",
    "end": "1225000"
  },
  {
    "text": "speed up that jib can provide you we have two projects here the orange one is built with jib just all default config",
    "start": "1154340",
    "end": "1160700"
  },
  {
    "text": "and the docker build happens it's pretty simple docker build with a single fat jar that contains your application and",
    "start": "1160700",
    "end": "1166910"
  },
  {
    "text": "its dependencies you see here the first builds are pretty similar they're both around 20 seconds that's because both",
    "start": "1166910",
    "end": "1173030"
  },
  {
    "text": "jib and docker have to push your whole application over to a remote registry and then when you rebuild without",
    "start": "1173030",
    "end": "1178100"
  },
  {
    "text": "changes they're both pretty fast as they basically go through the process of figuring out that nothing has changed so",
    "start": "1178100",
    "end": "1184250"
  },
  {
    "text": "no build needs to be done the real advantage of jib here is that when it automatically splits your",
    "start": "1184250",
    "end": "1191000"
  },
  {
    "text": "application up and you make a change into your classes files chip is only pushing your classes layer and you can",
    "start": "1191000",
    "end": "1198020"
  },
  {
    "text": "see here the difference between pushing a small layer and your whole application is between 5 and 15 seconds for a 20",
    "start": "1198020",
    "end": "1203810"
  },
  {
    "text": "megabyte application however when you get to a very large project or somewhat",
    "start": "1203810",
    "end": "1209870"
  },
  {
    "text": "large project 120 megabytes you can see rebuilding just your classes is still pretty fast whereas rebuilding and",
    "start": "1209870",
    "end": "1216260"
  },
  {
    "text": "pushing your whole application can take up to 35 seconds in this example and that means you're sitting around waiting",
    "start": "1216260",
    "end": "1222140"
  },
  {
    "text": "at your computer for your bill to complete so another benefit we get out of a",
    "start": "1222140",
    "end": "1228200"
  },
  {
    "start": "1225000",
    "end": "1258000"
  },
  {
    "text": "custom image builder like jib is the ability of build images reproducibly so what does reproducibility mean really",
    "start": "1228200",
    "end": "1235220"
  },
  {
    "text": "means that the same image same code always produces the same image so for example if you were making a change and",
    "start": "1235220",
    "end": "1241279"
  },
  {
    "text": "commit that to say your version control system that commit should produce the same image on your machine as your",
    "start": "1241279",
    "end": "1247129"
  },
  {
    "text": "teamates machine as a reproduction machine or CIC some and what this helps you do is reduce possible variations",
    "start": "1247129",
    "end": "1253399"
  },
  {
    "text": "that could occur in a production build now you can't reproduce in a local development build and how do we",
    "start": "1253399",
    "end": "1258860"
  },
  {
    "start": "1258000",
    "end": "1266000"
  },
  {
    "text": "guarantee reproduce play well we just wipe all the metadata because I could vary between builds such as time stamps",
    "start": "1258860",
    "end": "1263960"
  },
  {
    "text": "user IDs and groups so because jib is built into your build",
    "start": "1263960",
    "end": "1272000"
  },
  {
    "start": "1266000",
    "end": "1320000"
  },
  {
    "text": "system maven in Gradle there are other possibilities for a container compiler that we'd like to explore that are not",
    "start": "1272000",
    "end": "1277010"
  },
  {
    "text": "yet in JIT we can perhaps do smarter inferences like expose a port",
    "start": "1277010",
    "end": "1282350"
  },
  {
    "text": "automatically when we detect your application is listening on that port we can do other container optimizations for",
    "start": "1282350",
    "end": "1287600"
  },
  {
    "text": "memory and CPU based on your application we can try and organise your build into",
    "start": "1287600",
    "end": "1292760"
  },
  {
    "text": "logical groups of code that changed together so the layers are smaller and your bills are faster and then finally",
    "start": "1292760",
    "end": "1299690"
  },
  {
    "text": "we can try and take advantage of J Lincoln modules to produce a smaller container images for you by reducing the",
    "start": "1299690",
    "end": "1305840"
  },
  {
    "text": "size of your JRE and these are all tools for building the container we want to work on tools for running the container",
    "start": "1305840",
    "end": "1312350"
  },
  {
    "text": "now that your container is built and Q will now talk about some work we're doing on scaffold for the Java",
    "start": "1312350",
    "end": "1318410"
  },
  {
    "text": "development experience on kubernetes so we actually gave this talk back in May but since then we've made a lot of",
    "start": "1318410",
    "end": "1325100"
  },
  {
    "start": "1320000",
    "end": "1354000"
  },
  {
    "text": "progress and we've made a lot of integrations other tools and one is great rebuilt was integration was",
    "start": "1325100",
    "end": "1330650"
  },
  {
    "text": "scaffold also scaffold is a command-line tool for doing continuous small been on kubernetes",
    "start": "1330650",
    "end": "1336730"
  },
  {
    "text": "specifically it's for people to develop and iterate directly within a crew Nerys cluster so scalpel handles various",
    "start": "1336730",
    "end": "1344090"
  },
  {
    "text": "external workflow click billing Catan merges push them to a registry and deploying your application upon every",
    "start": "1344090",
    "end": "1350420"
  },
  {
    "text": "single change so it propagates that change to you're running cluster so let's take a look at the scaffold",
    "start": "1350420",
    "end": "1355910"
  },
  {
    "start": "1354000",
    "end": "1418000"
  },
  {
    "text": "development process so in this diagram you see there's stuff in blue which is usually your inputs like your code and",
    "start": "1355910",
    "end": "1362720"
  },
  {
    "text": "your community's config it goes through this whole process and you get an orange your application running on your cluster",
    "start": "1362720",
    "end": "1367970"
  },
  {
    "text": "and this development process is building your application container izing it",
    "start": "1367970",
    "end": "1373160"
  },
  {
    "text": "pushing it to remote registry and then if you've changed the version you need to update your kubernetes config to",
    "start": "1373160",
    "end": "1378560"
  },
  {
    "text": "correctly reference that version you then push this config to your container cluster or to sorry to your cluster and",
    "start": "1378560",
    "end": "1384830"
  },
  {
    "text": "then the cluster deploy some pods you can run some commands to tail logs or to",
    "start": "1384830",
    "end": "1390890"
  },
  {
    "text": "port forward so you can access your application from your computer and then",
    "start": "1390890",
    "end": "1396159"
  },
  {
    "text": "finally your application is up and running and you can evaluate it and every time you make a change you have to go through this whole process and",
    "start": "1396159",
    "end": "1402059"
  },
  {
    "text": "kubernetes is about removing all the stuff you don't care about and only concentrating on what you do care about",
    "start": "1402059",
    "end": "1407230"
  },
  {
    "text": "what we care about here is our code and our config and a running application and that's kind of where scaffold steps in",
    "start": "1407230",
    "end": "1413289"
  },
  {
    "text": "scaffold takes everything out of the middle sits there and does everything for you",
    "start": "1413289",
    "end": "1418520"
  },
  {
    "start": "1418000",
    "end": "1725000"
  },
  {
    "text": "all right let's do a live demo of using scaffold with chip as the Builder part",
    "start": "1418520",
    "end": "1425780"
  },
  {
    "text": "my demo folder I can find it again it gets in demos",
    "start": "1427080",
    "end": "1435900"
  },
  {
    "text": "yeah there we go alright so here we have a repost a directory set up with",
    "start": "1435900",
    "end": "1441300"
  },
  {
    "text": "scaffold and all that needs to be done to sub scaffold is to have a step out",
    "start": "1441300",
    "end": "1446550"
  },
  {
    "text": "diamo so you make this bigger so here the scaffold yeah mr. Pirie was one artifact just for the app that we have",
    "start": "1446550",
    "end": "1454140"
  },
  {
    "text": "as gonna can rise to a table registry and the content says the app is in the",
    "start": "1454140",
    "end": "1459450"
  },
  {
    "text": "app directory we have a configured with the chip rado builder to tell scalpel to",
    "start": "1459450",
    "end": "1464700"
  },
  {
    "text": "use Tripp Gradle plug-in traffic containerized application so application is just a simple jetty server and I'll",
    "start": "1464700",
    "end": "1471810"
  },
  {
    "text": "show you the code for it just one hello class that just serves a",
    "start": "1471810",
    "end": "1477240"
  },
  {
    "text": "page that says hello with some demo word that comes from a very memorable from",
    "start": "1477240",
    "end": "1484200"
  },
  {
    "text": "Shanghai so what we're gonna do is we're gonna just run scaffold dev and this guy",
    "start": "1484200",
    "end": "1490350"
  },
  {
    "text": "launched scaffold with the continuous development iteration cycle that manages and we're actually just using a local",
    "start": "1490350",
    "end": "1496830"
  },
  {
    "text": "kubernetes cluster on dr. Podesta",
    "start": "1496830",
    "end": "1501620"
  },
  {
    "text": "so this containerize there are application and the scalpel is gonna try to figure out you can measure ID for it",
    "start": "1501940",
    "end": "1507250"
  },
  {
    "text": "using the gate combat and image digest and then it's gonna try and redeploy the",
    "start": "1507250",
    "end": "1512350"
  },
  {
    "text": "crazy animal that we had to the cluster with the exact image that we just built",
    "start": "1512350",
    "end": "1518410"
  },
  {
    "text": "oh no she always handshake I know let's see if I've kissed",
    "start": "1518410",
    "end": "1527190"
  },
  {
    "text": "you stock up down",
    "start": "1531460",
    "end": "1537130"
  },
  {
    "text": "see if we can access docker hub",
    "start": "1537570",
    "end": "1540919"
  },
  {
    "text": "we cannot access docker hub see",
    "start": "1544240",
    "end": "1551040"
  },
  {
    "text": "okay we're going to do some so you can also have scaffold",
    "start": "1552360",
    "end": "1560480"
  },
  {
    "text": "okay we're gonna hot tell it's you actually desire dr. demon and let's see if it works because I about tried this",
    "start": "1561530",
    "end": "1568310"
  },
  {
    "text": "alright demo so we're gonna go and edit our scalpel yeah MO and I'm just gonna tell it to not push the image and we're",
    "start": "1568310",
    "end": "1577610"
  },
  {
    "text": "going to do a scalpel job again",
    "start": "1577610",
    "end": "1580720"
  },
  {
    "text": "still using a docker image",
    "start": "1586090",
    "end": "1591309"
  },
  {
    "text": "yeah second we go",
    "start": "1591590",
    "end": "1595059"
  },
  {
    "text": "I [Music] mr. VPN gonna carry over it oh it done",
    "start": "1597549",
    "end": "1604600"
  },
  {
    "text": "right it worked okay tacos back up probably alright so the server started",
    "start": "1604600",
    "end": "1610269"
  },
  {
    "text": "and we can go and hit the server localhost:8080",
    "start": "1610269",
    "end": "1615760"
  },
  {
    "text": "you see hello everyone from Rochelle hi so we're gonna say we want to make a",
    "start": "1615760",
    "end": "1621429"
  },
  {
    "text": "change come on change what says and actually I go back to the",
    "start": "1621429",
    "end": "1627570"
  },
  {
    "text": "and we're gonna change what it says app source in Java and instead of let's say",
    "start": "1629290",
    "end": "1637380"
  },
  {
    "text": "Shanghai we're gonna from from China",
    "start": "1637380",
    "end": "1644650"
  },
  {
    "text": "it's goodbye it's in the bottom right corner save that scalpel is gonna pick that up",
    "start": "1644650",
    "end": "1650310"
  },
  {
    "text": "automatically rika-chan ERISA application and REE propagate that change directly to our cabeza cluster",
    "start": "1650310",
    "end": "1658970"
  },
  {
    "text": "it's going to recoat arrives okay and then redeploy our application",
    "start": "1659940",
    "end": "1668120"
  },
  {
    "text": "and once that's up we can curl the application again okay hello everyone",
    "start": "1668120",
    "end": "1673550"
  },
  {
    "text": "from China now let's say we want to change that in volume I roll the demo word that we had so we go and edit our",
    "start": "1673550",
    "end": "1679190"
  },
  {
    "text": "currency MO and this is just a standard deployment and instead of everyone well",
    "start": "1679190",
    "end": "1686020"
  },
  {
    "text": "change it to hello the audience okay also another word for",
    "start": "1686020",
    "end": "1692780"
  },
  {
    "text": "everyone so we said that if scalpels got pick that up as notes that it's only needs to redeploy the criminals so it's",
    "start": "1692780",
    "end": "1699500"
  },
  {
    "text": "already back up and running so if it curl again you see a whole audience from China cool so that's show me scaffold of",
    "start": "1699500",
    "end": "1706280"
  },
  {
    "text": "course you can use multiple artifacts in most languages can mix mash Java was no",
    "start": "1706280",
    "end": "1711680"
  },
  {
    "text": "GS and other languages as well all right",
    "start": "1711680",
    "end": "1717549"
  },
  {
    "text": "see how much time we have oh we have time so something else",
    "start": "1719030",
    "end": "1727210"
  },
  {
    "start": "1725000",
    "end": "1767000"
  },
  {
    "text": "Andrea's a Java library for building containers College of a-kor and this is actually",
    "start": "1727210",
    "end": "1732899"
  },
  {
    "text": "the library that powers Jim maven plug-in ship Gradle plugin and we built and released that as its own library for",
    "start": "1732899",
    "end": "1738929"
  },
  {
    "text": "use in Java so how do you actually use this this example so it the first line",
    "start": "1738929",
    "end": "1745289"
  },
  {
    "text": "takes busybox and uses as a base image then we just so this example is actually key rising a hello world application and",
    "start": "1745289",
    "end": "1752159"
  },
  {
    "text": "the second layer just adds one layer with a shell script that says whole world to the root of the experiment and",
    "start": "1752159",
    "end": "1758669"
  },
  {
    "text": "then we're sending an entry point to run that shell script and telling it to containerize to our doctor daemon and",
    "start": "1758669",
    "end": "1764519"
  },
  {
    "text": "call it test trip Corp so actually let's show a demo of this Jim Court",
    "start": "1764519",
    "end": "1772190"
  },
  {
    "start": "1767000",
    "end": "1874000"
  },
  {
    "text": "another thing about scuffle is that it also cleans up your application when you exit from it",
    "start": "1779350",
    "end": "1785970"
  },
  {
    "text": "we go it's my temporary directory my downloads folder",
    "start": "1785970",
    "end": "1791179"
  },
  {
    "text": "calling this repo and then all I'm gonna do is I'm just gonna run it run the application with maven exec execute the",
    "start": "1791250",
    "end": "1800340"
  },
  {
    "text": "application my first show what the application actually is so source main",
    "start": "1800340",
    "end": "1807000"
  },
  {
    "text": "and it's just the same code we had in the slides",
    "start": "1807000",
    "end": "1811730"
  },
  {
    "text": "back again this could use the trip core library to",
    "start": "1812910",
    "end": "1819700"
  },
  {
    "text": "containerize our hello world container directly to our dr. demon",
    "start": "1819700",
    "end": "1825990"
  },
  {
    "text": "all right so it's done and we can just go and run it test your core was what we",
    "start": "1826010",
    "end": "1831170"
  },
  {
    "text": "called it oh my god hello world of course we can change that we can say change the shell script now we want to",
    "start": "1831170",
    "end": "1836810"
  },
  {
    "text": "add in and change world to Shanghai",
    "start": "1836810",
    "end": "1842530"
  },
  {
    "text": "and we can run it again and so we continue our application I want stun we",
    "start": "1842620",
    "end": "1850419"
  },
  {
    "text": "can run again I'll say well hi",
    "start": "1850419",
    "end": "1854008"
  },
  {
    "text": "and yeah so you can use this library to do whatever you want with building",
    "start": "1856580",
    "end": "1863990"
  },
  {
    "text": "containers in Java it's a general-purpose library for building containers it's not just for building Java containers",
    "start": "1863990",
    "end": "1871150"
  },
  {
    "text": "cool Silas trip core and of course there's many other things that we didn't cover",
    "start": "1871730",
    "end": "1876980"
  },
  {
    "start": "1874000",
    "end": "1912000"
  },
  {
    "text": "we are recently explosion oh 10 Oh with support for wars so you can take a war",
    "start": "1876980",
    "end": "1881990"
  },
  {
    "text": "project and just containerize it with ship with barely any configuration and we also pill integration was tentative",
    "start": "1881990",
    "end": "1888650"
  },
  {
    "text": "which is a neurological service modules for surveying inventing building and jib",
    "start": "1888650",
    "end": "1894230"
  },
  {
    "text": "is wanna build templates you can use there's also a third-party plug-in for the Scala pill tool as d plugin it's not",
    "start": "1894230",
    "end": "1901580"
  },
  {
    "text": "official pilot project but if you use a SBT you can use this plugin and we also have integration with chain hipster to",
    "start": "1901580",
    "end": "1908330"
  },
  {
    "text": "use jib for their server generator oh so what is the future hold at Google",
    "start": "1908330",
    "end": "1917040"
  },
  {
    "start": "1912000",
    "end": "1952000"
  },
  {
    "text": "we're getting the language teams together to bring jib to other languages so maybe in the future you can use a",
    "start": "1917040",
    "end": "1924809"
  },
  {
    "text": "style of builder like jib for note or C sharp or Ruby we want to work on more",
    "start": "1924809",
    "end": "1929850"
  },
  {
    "text": "scaffold integration maybe integrating debug directly into your scaffold process and finally we",
    "start": "1929850",
    "end": "1936180"
  },
  {
    "text": "want to see where people or we can take jib core is really letting the developer focus on writing their code and having",
    "start": "1936180",
    "end": "1943110"
  },
  {
    "text": "all the cluster related build and deploy be automatic and just disconnected from",
    "start": "1943110",
    "end": "1949950"
  },
  {
    "text": "the developer so that's our talk this is the github page for jib you can go there",
    "start": "1949950",
    "end": "1956100"
  },
  {
    "start": "1952000",
    "end": "1981000"
  },
  {
    "text": "for documentation or if you want to file an issue there's a couple links below for scaffold and destroy lists and some",
    "start": "1956100",
    "end": "1964710"
  },
  {
    "text": "docker build tips and tricks so we have a couple minutes for questions or",
    "start": "1964710",
    "end": "1971630"
  },
  {
    "text": "restaurant recommendations in Shanghai yeah",
    "start": "1971630",
    "end": "1979150"
  },
  {
    "text": "so there is a triple support base book it's just maven or Gradle plugins but",
    "start": "1980260",
    "end": "1986750"
  },
  {
    "start": "1981000",
    "end": "2021000"
  },
  {
    "text": "there's actually a basal rules rules a rule stalker I believe it's what's",
    "start": "1986750",
    "end": "1992270"
  },
  {
    "text": "called you find it on Google cloud platform org and it's rulest being used",
    "start": "1992270",
    "end": "1998000"
  },
  {
    "text": "to actually build document is in basal scaffold also supports basal out of the box so if you want to use scaffold with",
    "start": "1998000",
    "end": "2004300"
  },
  {
    "text": "basal you can cool okay well I'll probably also be at",
    "start": "2004300",
    "end": "2012020"
  },
  {
    "text": "the Google booths later if you have more questions supposed to be outside after this all right thank you yeah thanks",
    "start": "2012020",
    "end": "2019310"
  },
  {
    "text": "[Applause]",
    "start": "2019310",
    "end": "2023160"
  }
]