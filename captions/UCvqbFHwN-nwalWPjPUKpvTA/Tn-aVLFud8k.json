[
  {
    "start": "0",
    "end": "84000"
  },
  {
    "text": "wow works out of the box uh sorry for",
    "start": "4799",
    "end": "7919"
  },
  {
    "text": "being lost stock today",
    "start": "7919",
    "end": "10920"
  },
  {
    "text": "um I'm yours cromwinkle I work for Tech",
    "start": "10920",
    "end": "14160"
  },
  {
    "text": "Finance for over 10 years today is a",
    "start": "14160",
    "end": "16619"
  },
  {
    "text": "special day for me because I just turned",
    "start": "16619",
    "end": "18420"
  },
  {
    "text": "34.",
    "start": "18420",
    "end": "19619"
  },
  {
    "text": "I have no pictures of my hobbies because",
    "start": "19619",
    "end": "21300"
  },
  {
    "text": "I have no time I have four Sons also",
    "start": "21300",
    "end": "24720"
  },
  {
    "text": "so I have to make fun at work which I'm",
    "start": "24720",
    "end": "27380"
  },
  {
    "text": "gladly to to present today",
    "start": "27380",
    "end": "30260"
  },
  {
    "text": "what I find is a 40 year old futina",
    "start": "30260",
    "end": "33600"
  },
  {
    "text": "would call a fintech company it's a",
    "start": "33600",
    "end": "35399"
  },
  {
    "text": "Dutch company we operate globally we're",
    "start": "35399",
    "end": "38219"
  },
  {
    "text": "helping over 14 trillion Euros in Assets",
    "start": "38219",
    "end": "41879"
  },
  {
    "text": "in in making Financial investment",
    "start": "41879",
    "end": "43860"
  },
  {
    "text": "decisions",
    "start": "43860",
    "end": "45000"
  },
  {
    "text": "we serve our customers globally with a",
    "start": "45000",
    "end": "47700"
  },
  {
    "text": "lot of number crunching workloads",
    "start": "47700",
    "end": "50340"
  },
  {
    "text": "and for the past two years I've been",
    "start": "50340",
    "end": "52320"
  },
  {
    "text": "responsible for our native",
    "start": "52320",
    "end": "54059"
  },
  {
    "text": "transformation as a company and since I",
    "start": "54059",
    "end": "56340"
  },
  {
    "text": "have a background in HPC myself I really",
    "start": "56340",
    "end": "59280"
  },
  {
    "text": "liked uh",
    "start": "59280",
    "end": "62420"
  },
  {
    "text": "okay I will a freeze",
    "start": "64260",
    "end": "68400"
  },
  {
    "text": "I really liked onboarding our HPC",
    "start": "68400",
    "end": "71280"
  },
  {
    "text": "workloads and last year I was in",
    "start": "71280",
    "end": "73920"
  },
  {
    "text": "Valencia to to for inspiration I'm very",
    "start": "73920",
    "end": "77460"
  },
  {
    "text": "excited to share as a speaker now our",
    "start": "77460",
    "end": "80700"
  },
  {
    "text": "journey so far",
    "start": "80700",
    "end": "82740"
  },
  {
    "text": "so a bit of uh context",
    "start": "82740",
    "end": "86939"
  },
  {
    "start": "84000",
    "end": "168000"
  },
  {
    "text": "um we decided to do manage to overdo it",
    "start": "86939",
    "end": "89580"
  },
  {
    "text": "yourself so that's why managed",
    "start": "89580",
    "end": "91320"
  },
  {
    "text": "kubernetes we have different flavors of",
    "start": "91320",
    "end": "94560"
  },
  {
    "text": "course in the context of this talk it's",
    "start": "94560",
    "end": "96780"
  },
  {
    "text": "about managed openshift in both AWS and",
    "start": "96780",
    "end": "100079"
  },
  {
    "text": "azure",
    "start": "100079",
    "end": "102299"
  },
  {
    "text": "um",
    "start": "102299",
    "end": "102960"
  },
  {
    "text": "so the decommissioning of our on-prem",
    "start": "102960",
    "end": "105960"
  },
  {
    "text": "data center was a fact",
    "start": "105960",
    "end": "108320"
  },
  {
    "text": "a big challenge to to move our HPC",
    "start": "108320",
    "end": "111479"
  },
  {
    "text": "operations to this manage kubernetes",
    "start": "111479",
    "end": "113399"
  },
  {
    "text": "environments next that it need to be",
    "start": "113399",
    "end": "115560"
  },
  {
    "text": "managed we wanted also to to perform",
    "start": "115560",
    "end": "117659"
  },
  {
    "text": "well at least at bar as our bare metal",
    "start": "117659",
    "end": "119939"
  },
  {
    "text": "we want to scale",
    "start": "119939",
    "end": "122159"
  },
  {
    "text": "not only up but also down our workloads",
    "start": "122159",
    "end": "125100"
  },
  {
    "text": "are very picky in the financial industry",
    "start": "125100",
    "end": "127259"
  },
  {
    "text": "the beginning of the quarter end of the",
    "start": "127259",
    "end": "129179"
  },
  {
    "text": "year these are moments that our clients",
    "start": "129179",
    "end": "131400"
  },
  {
    "text": "needs thousands of CPUs and the rest of",
    "start": "131400",
    "end": "133500"
  },
  {
    "text": "the time they don't need it and they",
    "start": "133500",
    "end": "135480"
  },
  {
    "text": "don't want to pay for it also",
    "start": "135480",
    "end": "137459"
  },
  {
    "text": "concurrency a lot of talks today are",
    "start": "137459",
    "end": "140160"
  },
  {
    "text": "about scheduling uh yeah we try to get",
    "start": "140160",
    "end": "143400"
  },
  {
    "text": "rid of the scheduling problem as a whole",
    "start": "143400",
    "end": "146160"
  },
  {
    "text": "we want a hassle-free multi-tenancy I",
    "start": "146160",
    "end": "149640"
  },
  {
    "text": "will explain that later",
    "start": "149640",
    "end": "151500"
  },
  {
    "text": "Fender Independence is also very",
    "start": "151500",
    "end": "153239"
  },
  {
    "text": "important although we use manage",
    "start": "153239",
    "end": "154800"
  },
  {
    "text": "kubernetes we don't want to manage to",
    "start": "154800",
    "end": "156660"
  },
  {
    "text": "marry a hyperscaler also we don't want",
    "start": "156660",
    "end": "158700"
  },
  {
    "text": "to attach ourselves to one specific",
    "start": "158700",
    "end": "160379"
  },
  {
    "text": "kubernetes distribution so we want the a",
    "start": "160379",
    "end": "163080"
  },
  {
    "text": "kubernetes native solutions to run our",
    "start": "163080",
    "end": "165780"
  },
  {
    "text": "APC operations on",
    "start": "165780",
    "end": "168980"
  },
  {
    "start": "168000",
    "end": "255000"
  },
  {
    "text": "so high over how does it look like",
    "start": "169080",
    "end": "173640"
  },
  {
    "text": "what's under the new on the road which",
    "start": "173640",
    "end": "175500"
  },
  {
    "text": "hyper skater you use we don't we don't",
    "start": "175500",
    "end": "177780"
  },
  {
    "text": "care we want kubernetes and on top of",
    "start": "177780",
    "end": "180180"
  },
  {
    "text": "that we selected uh like Lego bricks we",
    "start": "180180",
    "end": "183720"
  },
  {
    "text": "assembled our framework we're very very",
    "start": "183720",
    "end": "185700"
  },
  {
    "text": "battle tested uh open source projects",
    "start": "185700",
    "end": "188879"
  },
  {
    "text": "Prometheus cada key native and it's a",
    "start": "188879",
    "end": "192420"
  },
  {
    "text": "queuing system we use the open source",
    "start": "192420",
    "end": "194580"
  },
  {
    "text": "active fq",
    "start": "194580",
    "end": "197360"
  },
  {
    "text": "um so these are all packaged in yamos so",
    "start": "197640",
    "end": "200400"
  },
  {
    "text": "how to configure them for our framework",
    "start": "200400",
    "end": "202019"
  },
  {
    "text": "is a few hundred lines of yamos we we",
    "start": "202019",
    "end": "204659"
  },
  {
    "text": "package them with customized Argo CD",
    "start": "204659",
    "end": "206760"
  },
  {
    "text": "ready in a repository I'll share later",
    "start": "206760",
    "end": "209340"
  },
  {
    "text": "on top of that we also templated how you",
    "start": "209340",
    "end": "213420"
  },
  {
    "text": "should Define your jobs and your and",
    "start": "213420",
    "end": "216060"
  },
  {
    "text": "your tasks these are just 300 lines of C",
    "start": "216060",
    "end": "219480"
  },
  {
    "text": "sharp so that's truly our contribution",
    "start": "219480",
    "end": "221400"
  },
  {
    "text": "it's really about how it the interface",
    "start": "221400",
    "end": "224760"
  },
  {
    "text": "with the rest under the hood",
    "start": "224760",
    "end": "226440"
  },
  {
    "text": "it isn't.net but you can easily do it in",
    "start": "226440",
    "end": "229980"
  },
  {
    "text": "Python asphalt so this is a very lean uh",
    "start": "229980",
    "end": "235560"
  },
  {
    "text": "setup",
    "start": "235560",
    "end": "237480"
  },
  {
    "text": "and our context is so in in our parts it",
    "start": "237480",
    "end": "240659"
  },
  {
    "text": "can be thousand slice of python that's",
    "start": "240659",
    "end": "243120"
  },
  {
    "text": "uh it's running but we also have fat",
    "start": "243120",
    "end": "244980"
  },
  {
    "text": "Bots like 600 000 lines of of C sharp in",
    "start": "244980",
    "end": "248940"
  },
  {
    "text": "one container it's all one process per",
    "start": "248940",
    "end": "251700"
  },
  {
    "text": "container context",
    "start": "251700",
    "end": "253980"
  },
  {
    "text": "so how does it look like",
    "start": "253980",
    "end": "256079"
  },
  {
    "start": "255000",
    "end": "358000"
  },
  {
    "text": "so from left to right",
    "start": "256079",
    "end": "257959"
  },
  {
    "text": "our users interact via rest API which is",
    "start": "257959",
    "end": "261660"
  },
  {
    "text": "key which is a",
    "start": "261660",
    "end": "264360"
  },
  {
    "text": "provisioned by keynative it's serverless",
    "start": "264360",
    "end": "266880"
  },
  {
    "text": "it's the HTTP traffic triggers awakes",
    "start": "266880",
    "end": "269580"
  },
  {
    "text": "the API the API is responsible for",
    "start": "269580",
    "end": "272699"
  },
  {
    "text": "putting a job on the job queue",
    "start": "272699",
    "end": "276000"
  },
  {
    "text": "Keda sees the job coming in the queue",
    "start": "276000",
    "end": "278820"
  },
  {
    "text": "and and creates a get a skilled job",
    "start": "278820",
    "end": "282540"
  },
  {
    "text": "and that's nice that it's in the queue",
    "start": "282540",
    "end": "284820"
  },
  {
    "text": "because if somehow the job is killed or",
    "start": "284820",
    "end": "286800"
  },
  {
    "text": "terminated as long as it's not",
    "start": "286800",
    "end": "289020"
  },
  {
    "text": "acknowledged on the Queue it will reboot",
    "start": "289020",
    "end": "291000"
  },
  {
    "text": "the job so it's very resilient in nature",
    "start": "291000",
    "end": "294240"
  },
  {
    "text": "the job is responsible for putting tasks",
    "start": "294240",
    "end": "296639"
  },
  {
    "text": "on the Queue which allows us also to to",
    "start": "296639",
    "end": "299340"
  },
  {
    "text": "do uh DAC workloads",
    "start": "299340",
    "end": "302940"
  },
  {
    "text": "if tasks are put on the Queue Kayden",
    "start": "302940",
    "end": "305880"
  },
  {
    "text": "knows how many posts it wants",
    "start": "305880",
    "end": "308660"
  },
  {
    "text": "to compute and these task Runners are",
    "start": "308660",
    "end": "311699"
  },
  {
    "text": "actually very stupid things they just",
    "start": "311699",
    "end": "314300"
  },
  {
    "text": "fetch from the queue execute acknowledge",
    "start": "314300",
    "end": "317580"
  },
  {
    "text": "task and repeat until the queue is empty",
    "start": "317580",
    "end": "321840"
  },
  {
    "text": "so we have a termination of X seconds",
    "start": "321840",
    "end": "323759"
  },
  {
    "text": "for after queue is empty and then these",
    "start": "323759",
    "end": "327419"
  },
  {
    "text": "task Runners will terminate themselves",
    "start": "327419",
    "end": "329699"
  },
  {
    "text": "and scale back to zero in fact all",
    "start": "329699",
    "end": "333840"
  },
  {
    "text": "elements here in the picture skill to",
    "start": "333840",
    "end": "335820"
  },
  {
    "text": "zero even the the queuing mechanism and",
    "start": "335820",
    "end": "339840"
  },
  {
    "text": "this is not only uh nice for cost",
    "start": "339840",
    "end": "342479"
  },
  {
    "text": "perspective but also very nice in in",
    "start": "342479",
    "end": "345539"
  },
  {
    "text": "tenancy in multi-tenancy context I can",
    "start": "345539",
    "end": "347880"
  },
  {
    "text": "make a name space per user I can make a",
    "start": "347880",
    "end": "349800"
  },
  {
    "text": "namespace per application",
    "start": "349800",
    "end": "353060"
  },
  {
    "text": "um",
    "start": "353699",
    "end": "354900"
  },
  {
    "text": "so so far uh scaling pulse",
    "start": "354900",
    "end": "358620"
  },
  {
    "start": "358000",
    "end": "413000"
  },
  {
    "text": "but the big question is if we can score",
    "start": "358620",
    "end": "361259"
  },
  {
    "text": "both scaling Bots is easy but how in a",
    "start": "361259",
    "end": "364199"
  },
  {
    "text": "managed context does the infrastructure",
    "start": "364199",
    "end": "366180"
  },
  {
    "text": "skills along",
    "start": "366180",
    "end": "368400"
  },
  {
    "text": "so in kubernetes context the cloud",
    "start": "368400",
    "end": "370560"
  },
  {
    "text": "controller manager is responsible for",
    "start": "370560",
    "end": "372300"
  },
  {
    "text": "this and Depends a bit on the",
    "start": "372300",
    "end": "373500"
  },
  {
    "text": "hyperscaler if it's an implementation",
    "start": "373500",
    "end": "376380"
  },
  {
    "text": "but some manage kubernetes providers",
    "start": "376380",
    "end": "380820"
  },
  {
    "text": "have machine sets node pools they have",
    "start": "380820",
    "end": "382860"
  },
  {
    "text": "all different names for it but in",
    "start": "382860",
    "end": "384780"
  },
  {
    "text": "essence VMS are Provisions automatically",
    "start": "384780",
    "end": "387419"
  },
  {
    "text": "based on pending pending quotes",
    "start": "387419",
    "end": "390240"
  },
  {
    "text": "and by means of tolerations and things",
    "start": "390240",
    "end": "393780"
  },
  {
    "text": "we can provision many flavors of",
    "start": "393780",
    "end": "396600"
  },
  {
    "text": "machines that with gpus without gpus",
    "start": "396600",
    "end": "398639"
  },
  {
    "text": "Intel AMD different memory architectures",
    "start": "398639",
    "end": "402360"
  },
  {
    "text": "and also these machine sets skill back",
    "start": "402360",
    "end": "404400"
  },
  {
    "text": "to zero which is very interesting",
    "start": "404400",
    "end": "406740"
  },
  {
    "text": "feature",
    "start": "406740",
    "end": "408120"
  },
  {
    "text": "so how does it work in practice so this",
    "start": "408120",
    "end": "410220"
  },
  {
    "text": "is nice in theory so how does it work in",
    "start": "410220",
    "end": "412080"
  },
  {
    "text": "practice",
    "start": "412080",
    "end": "413639"
  },
  {
    "start": "413000",
    "end": "519000"
  },
  {
    "text": "so this is kind of the conclusion",
    "start": "413639",
    "end": "415919"
  },
  {
    "text": "on on this question does this elicitis",
    "start": "415919",
    "end": "418919"
  },
  {
    "text": "elasticity promise of a cloud can you",
    "start": "418919",
    "end": "421380"
  },
  {
    "text": "monetize on that in HPC contacts",
    "start": "421380",
    "end": "424500"
  },
  {
    "text": "so these are empirical results but we",
    "start": "424500",
    "end": "427259"
  },
  {
    "text": "were able to spin up 1500 CPUs within 20",
    "start": "427259",
    "end": "430620"
  },
  {
    "text": "seconds up of the 20 minutes up and back",
    "start": "430620",
    "end": "434460"
  },
  {
    "text": "to zero",
    "start": "434460",
    "end": "436380"
  },
  {
    "text": "we also were able to do this in sport",
    "start": "436380",
    "end": "438600"
  },
  {
    "text": "instances on Azure which is nice because",
    "start": "438600",
    "end": "441060"
  },
  {
    "text": "it's 20 minutes of 50 ownership use only",
    "start": "441060",
    "end": "443340"
  },
  {
    "text": "costs us 6 Euros which is insanely cheap",
    "start": "443340",
    "end": "447360"
  },
  {
    "text": "it's skills to zero which is nice",
    "start": "447360",
    "end": "449220"
  },
  {
    "text": "although I have to say if you use these",
    "start": "449220",
    "end": "451620"
  },
  {
    "text": "open source project you want operators",
    "start": "451620",
    "end": "453599"
  },
  {
    "text": "to be there",
    "start": "453599",
    "end": "454800"
  },
  {
    "text": "which have controller so you pay the",
    "start": "454800",
    "end": "457440"
  },
  {
    "text": "price of them",
    "start": "457440",
    "end": "458940"
  },
  {
    "text": "node provisioning is an interesting",
    "start": "458940",
    "end": "461099"
  },
  {
    "text": "topic because it really relies on how",
    "start": "461099",
    "end": "463740"
  },
  {
    "text": "fast your hyperscaler can provision",
    "start": "463740",
    "end": "465539"
  },
  {
    "text": "these VMS and we tested both on Azure",
    "start": "465539",
    "end": "468060"
  },
  {
    "text": "and AWS it's roughly four minutes for a",
    "start": "468060",
    "end": "471419"
  },
  {
    "text": "note to come up regardless the VM family",
    "start": "471419",
    "end": "474419"
  },
  {
    "text": "and regardless the hour of the day we",
    "start": "474419",
    "end": "476580"
  },
  {
    "text": "thought okay maybe in business hours is",
    "start": "476580",
    "end": "478139"
  },
  {
    "text": "slower but it's not the case it's it's a",
    "start": "478139",
    "end": "480360"
  },
  {
    "text": "bit volatile though",
    "start": "480360",
    "end": "481979"
  },
  {
    "text": "in order for this to work you need a",
    "start": "481979",
    "end": "484020"
  },
  {
    "text": "very good machine set or no pool",
    "start": "484020",
    "end": "485520"
  },
  {
    "text": "implementation depends a bit on",
    "start": "485520",
    "end": "487139"
  },
  {
    "text": "hyperscaler how maturities are",
    "start": "487139",
    "end": "490319"
  },
  {
    "text": "regarding downsides yeah these many",
    "start": "490319",
    "end": "492840"
  },
  {
    "text": "kubernetes clusters come also with guard",
    "start": "492840",
    "end": "495000"
  },
  {
    "text": "rails so sometimes they have a limited",
    "start": "495000",
    "end": "497460"
  },
  {
    "text": "maximum amount of notes you can hit at a",
    "start": "497460",
    "end": "500220"
  },
  {
    "text": "certain point and also with Azure",
    "start": "500220",
    "end": "503060"
  },
  {
    "text": "we perceive that sometimes we get we ask",
    "start": "503060",
    "end": "506819"
  },
  {
    "text": "for a certain VM type and under the hood",
    "start": "506819",
    "end": "508680"
  },
  {
    "text": "we get different Hardware newer",
    "start": "508680",
    "end": "510240"
  },
  {
    "text": "generation hardware and that leads to to",
    "start": "510240",
    "end": "512580"
  },
  {
    "text": "unexpected results I know in in Abu West",
    "start": "512580",
    "end": "515099"
  },
  {
    "text": "this is more tightly coupled",
    "start": "515099",
    "end": "519060"
  },
  {
    "start": "519000",
    "end": "576000"
  },
  {
    "text": "so to conclude",
    "start": "519060",
    "end": "520800"
  },
  {
    "text": "where can you learn more so we run this",
    "start": "520800",
    "end": "523919"
  },
  {
    "text": "stuff in production with our products we",
    "start": "523919",
    "end": "528240"
  },
  {
    "text": "extracted kind of the bare minimum put",
    "start": "528240",
    "end": "531240"
  },
  {
    "text": "it in into GitHub I have a student now",
    "start": "531240",
    "end": "533820"
  },
  {
    "text": "that's working on the schlem interface",
    "start": "533820",
    "end": "535680"
  },
  {
    "text": "like this rest API part you want to talk",
    "start": "535680",
    "end": "538440"
  },
  {
    "text": "with the slurm language to it and and",
    "start": "538440",
    "end": "540660"
  },
  {
    "text": "see how you can offload your workload",
    "start": "540660",
    "end": "543120"
  },
  {
    "text": "there we want to track carbon footprint",
    "start": "543120",
    "end": "545339"
  },
  {
    "text": "in the in the workloads we",
    "start": "545339",
    "end": "549839"
  },
  {
    "text": "we run and furthermore another colleague",
    "start": "549839",
    "end": "553920"
  },
  {
    "text": "of mine recorded the demo where you see",
    "start": "553920",
    "end": "556200"
  },
  {
    "text": "this in in real life skating from zero",
    "start": "556200",
    "end": "558720"
  },
  {
    "text": "machines to many that's the YouTube QR",
    "start": "558720",
    "end": "561899"
  },
  {
    "text": "code",
    "start": "561899",
    "end": "563640"
  },
  {
    "text": "thank you all for listening and",
    "start": "563640",
    "end": "568100"
  },
  {
    "text": "hope you have a good conference",
    "start": "569399",
    "end": "572959"
  }
]