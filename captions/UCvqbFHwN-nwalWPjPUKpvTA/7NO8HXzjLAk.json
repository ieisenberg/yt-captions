[
  {
    "text": "good okay so my name is Kevin Connor I'm chief engineer with getup Cloud I'm also",
    "start": "1240",
    "end": "7240"
  },
  {
    "text": "a co-author on the second edition of kubernetes In Action along with Marco Lua hi um Manish ramaker I'm a software",
    "start": "7240",
    "end": "15160"
  },
  {
    "text": "engineer at Microsoft focusing on security um I'm a member of kuity SE go",
    "start": "15160",
    "end": "20640"
  },
  {
    "text": "maintainer of Secret store CSI driver from Seattle",
    "start": "20640",
    "end": "25760"
  },
  {
    "text": "Washington okay so here is the agenda for today uh we're going to talk briefly",
    "start": "27240",
    "end": "33399"
  },
  {
    "text": "about cell uh then we're going to introduce you to cell playground um basically a playground where you can",
    "start": "33399",
    "end": "39920"
  },
  {
    "text": "test out cell Expressions uh then we're going to give you a deep dive on validating admission policies mutating",
    "start": "39920",
    "end": "47199"
  },
  {
    "text": "admission policies and then basically show you uh the validating admission policies and mutating admission policies",
    "start": "47199",
    "end": "53719"
  },
  {
    "text": "in action okay so let's start with a brief overview of cell",
    "start": "53719",
    "end": "60800"
  },
  {
    "text": "so what is cell cell is common expression language it's an efficient",
    "start": "60800",
    "end": "65880"
  },
  {
    "text": "way to evaluate expressions especially for applications where performance is critical like kubernetes cell is",
    "start": "65880",
    "end": "72720"
  },
  {
    "text": "non-turing complete it avoids constructs like loops and recursions making it",
    "start": "72720",
    "end": "78159"
  },
  {
    "text": "predictable in terms of execution time this design ensures that cell can",
    "start": "78159",
    "end": "83240"
  },
  {
    "text": "evaluate expressions safely and quickly with no risk of running indefinitely U cell evalu expressions in",
    "start": "83240",
    "end": "90640"
  },
  {
    "text": "linear time and is optimized for Speed so it performs very well in production environments cell is built to be",
    "start": "90640",
    "end": "97880"
  },
  {
    "text": "embedded in applications providing an easy way to integrate policy checks",
    "start": "97880",
    "end": "103240"
  },
  {
    "text": "directly into your system without needing any additional dependencies this makes it versatile and useful across",
    "start": "103240",
    "end": "110360"
  },
  {
    "text": "various software environments cell also allows for extensibility through its",
    "start": "110360",
    "end": "115600"
  },
  {
    "text": "context meaning you can add custom functions or provide additional data the cell reference in",
    "start": "115600",
    "end": "122560"
  },
  {
    "text": "Expressions cell is designed to use minimal CPU and memory which is critical",
    "start": "122560",
    "end": "128520"
  },
  {
    "text": "in environments with limited resources this efficiency allows you to evaluate",
    "start": "128520",
    "end": "133560"
  },
  {
    "text": "expressions even in resource constraint environments like a kubernetes cluster",
    "start": "133560",
    "end": "138959"
  },
  {
    "text": "and on the screen here we have an example of what a cell expression might look like uh it's natural syntax and it",
    "start": "138959",
    "end": "145959"
  },
  {
    "text": "has dot accessors with ability to have macros or fun FS that the integrator",
    "start": "145959",
    "end": "153319"
  },
  {
    "text": "provides okay so the cell language has a straightforward syntax as we looked at in the previous slide uh cell was",
    "start": "155239",
    "end": "162720"
  },
  {
    "text": "designed to be embeded into applications so each cell program is an expression that evaluates to a single value and",
    "start": "162720",
    "end": "170200"
  },
  {
    "text": "then they're typically short on liners that can be easily inlined in kubernetes API objects um in addition to the cell",
    "start": "170200",
    "end": "178519"
  },
  {
    "text": "community libraries kubernetes also includes additional cell libraries uh",
    "start": "178519",
    "end": "184120"
  },
  {
    "text": "and then we have a list here to name a few so if you look at URL manipulation to make it easier and safer to process",
    "start": "184120",
    "end": "191319"
  },
  {
    "text": "URLs uh the kubernetes extension provides uh s URL function that you can",
    "start": "191319",
    "end": "196519"
  },
  {
    "text": "check if a string is a URL and then a URL accessor that you can convert a string to a URL and once you have the",
    "start": "196519",
    "end": "202959"
  },
  {
    "text": "URL object you have accesses like get host get scheme through which you can manipulate it uh then the next thing is",
    "start": "202959",
    "end": "211159"
  },
  {
    "text": "there is also a um function for getting quantity strings and then in addition to",
    "start": "211159",
    "end": "217480"
  },
  {
    "text": "that the there is regular expression libraries and then there is also an authorizer so in cell expressions in the",
    "start": "217480",
    "end": "225400"
  },
  {
    "text": "API you could use this authorizer to perform authorization checks for the principal of the request and this is",
    "start": "225400",
    "end": "232920"
  },
  {
    "text": "just a list of some of the ones that we know but beyond this there are other libraries that are actually supported",
    "start": "232920",
    "end": "240040"
  },
  {
    "text": "okay so before we get onto the mean of it uh I'm going to introduce you to cell playground uh this is an open- source",
    "start": "241680",
    "end": "247599"
  },
  {
    "text": "project which was created by the company I work for and the whole point of this was really to give people an opportunity",
    "start": "247599",
    "end": "255079"
  },
  {
    "text": "to play with cell but to do it in a safe place so this is what it looks like don't worry if you can't see that I'm",
    "start": "255079",
    "end": "261000"
  },
  {
    "text": "going to do a demo of it shortly and the link at the top the URL there is how you get access to it so if you want to give",
    "start": "261000",
    "end": "266960"
  },
  {
    "text": "it a go uh please do so it was designed to be a safe play",
    "start": "266960",
    "end": "272600"
  },
  {
    "text": "space for people to uh play around with cell to test cell Expressions to test",
    "start": "272600",
    "end": "278639"
  },
  {
    "text": "the integration with various kubernetes features it's you can you know you're not deploying into a cluster so there's",
    "start": "278639",
    "end": "284600"
  },
  {
    "text": "no risk of breaking anything it's a golang application which is compiled to wasm and then downloaded and run in the",
    "start": "284600",
    "end": "291560"
  },
  {
    "text": "browser so there's no uh exent so there's no backend service for this it's all local all your information stays",
    "start": "291560",
    "end": "297800"
  },
  {
    "text": "local and at the moment we support are the evaluations of plain cell Expressions the integration points with",
    "start": "297800",
    "end": "304960"
  },
  {
    "text": "web Hooks and also the integration points with validating admission policies okay so let's swap over so this",
    "start": "304960",
    "end": "313520"
  },
  {
    "text": "is cell playground so at the moment you can see",
    "start": "313520",
    "end": "318800"
  },
  {
    "text": "uh this the standard self expression uh mode that we have on the left hand side",
    "start": "318800",
    "end": "324360"
  },
  {
    "text": "here uh this is where the Expressions you can put the expression that you want to test top right here is the data that",
    "start": "324360",
    "end": "331199"
  },
  {
    "text": "gets fed into the expression when it gets evaluated and you get the output of the expression on the bottom right here",
    "start": "331199",
    "end": "337160"
  },
  {
    "text": "so if we just run that you can see this is very simple it's just a check of an overdraft says that we can uh withdraw",
    "start": "337160",
    "end": "344000"
  },
  {
    "text": "700 which is great uh but we also get an idea of the cost of the expression in the bottom right here if we change mode",
    "start": "344000",
    "end": "351000"
  },
  {
    "text": "and go to the validating emission policy which is what we're here to talk about it becomes slightly more complicated but",
    "start": "351000",
    "end": "358160"
  },
  {
    "text": "it's still following the same structure left hand side is the uh the uh",
    "start": "358160",
    "end": "363600"
  },
  {
    "text": "expression in this case it's a uh proper kubernetes resource so we have a validating admission policy here and",
    "start": "363600",
    "end": "370720"
  },
  {
    "text": "then the top right are the various inputs that the validation admission policy will get from the API server so",
    "start": "370720",
    "end": "378479"
  },
  {
    "text": "we run this and the output's slightly different it's a concertina output here we have a",
    "start": "378479",
    "end": "384880"
  },
  {
    "text": "single validation expression so we're only seeing one uh validation response but that evaluating to true if I go and",
    "start": "384880",
    "end": "391599"
  },
  {
    "text": "show something more complex like the variable one here we have four different",
    "start": "391599",
    "end": "396720"
  },
  {
    "text": "variables plus a validation expression that will show you the evaluation of each individual variable",
    "start": "396720",
    "end": "403759"
  },
  {
    "text": "as well so you can see how it gets evaluated within the context of the policy and we do that the same thing for",
    "start": "403759",
    "end": "411199"
  },
  {
    "text": "match conditions and also for the order annotations okay so that's a a quick",
    "start": "411199",
    "end": "419039"
  },
  {
    "text": "introduction to sell",
    "start": "419039",
    "end": "422400"
  },
  {
    "text": "playground okay so we looked at cell expressions and then we also looked at how you can use a cell playground to",
    "start": "434759",
    "end": "440960"
  },
  {
    "text": "validate cell Expressions uh so the next thing that we here to talk about the core of the talk is admission policies",
    "start": "440960",
    "end": "447360"
  },
  {
    "text": "and this one is specifically validating admission polic policies so first thing is validating admission policies are",
    "start": "447360",
    "end": "453680"
  },
  {
    "text": "designed to be an alternate for validating web hooks for many common use",
    "start": "453680",
    "end": "458759"
  },
  {
    "text": "cases unlike web hooks which require an external service these policies are",
    "start": "458759",
    "end": "464199"
  },
  {
    "text": "handled directly within the kubernetes API server making them more efficient and easier to manage since they run in",
    "start": "464199",
    "end": "470720"
  },
  {
    "text": "the cube API server they reduce the need for Network calls uh which means lower",
    "start": "470720",
    "end": "476199"
  },
  {
    "text": "latency and reliable policy enforcement as they are evaluated natively",
    "start": "476199",
    "end": "481599"
  },
  {
    "text": "validating admission policies use the common expression language to declare the validation rules of a policy each",
    "start": "481599",
    "end": "488680"
  },
  {
    "text": "validating admission policy consists of three components the first one being the validating admission policy that is the",
    "start": "488680",
    "end": "495720"
  },
  {
    "text": "actual policy definition where you specify the rules and the conditions that must be met and the second",
    "start": "495720",
    "end": "502800"
  },
  {
    "text": "component is validating admission policy binding this connects a policy to a",
    "start": "502800",
    "end": "508479"
  },
  {
    "text": "specific resource or namespace allowing you to Target policies of certain",
    "start": "508479",
    "end": "513560"
  },
  {
    "text": "workloads uh and then the third component is parameter resources these allow you to parameterize policies",
    "start": "513560",
    "end": "521000"
  },
  {
    "text": "enabling flexible reusable rules that can adjust based on different",
    "start": "521000",
    "end": "526200"
  },
  {
    "text": "inputs at least a validating admission policy and a binding needs to exist for",
    "start": "526200",
    "end": "532680"
  },
  {
    "text": "it to actually have any effect and then in terms of uh the validation action you",
    "start": "532680",
    "end": "539040"
  },
  {
    "text": "can BAS basically configure that to either deny war or audit requests uh deny if the validation fails the request",
    "start": "539040",
    "end": "546560"
  },
  {
    "text": "is going to be denied uh if you have War then basically the client gets a warning",
    "start": "546560",
    "end": "551760"
  },
  {
    "text": "that they're not allowed to do a particular action and then audit is in addition to the warning the validation",
    "start": "551760",
    "end": "557399"
  },
  {
    "text": "failure is also as part of audit and then deny and warn are not to be used",
    "start": "557399",
    "end": "563240"
  },
  {
    "text": "together because this combination needlessly duplicates the validation failure both in the API resp resp body",
    "start": "563240",
    "end": "569959"
  },
  {
    "text": "and the HTTP warning uh headers so with validating admission",
    "start": "569959",
    "end": "577560"
  },
  {
    "text": "policies cell expressions are Central to defining uh conditions variables um",
    "start": "577560",
    "end": "584800"
  },
  {
    "text": "message expression audit annotation and validations uh so if you look at match",
    "start": "584800",
    "end": "590200"
  },
  {
    "text": "conditions cell Expressions can Define match conditions to specify when a",
    "start": "590200",
    "end": "595560"
  },
  {
    "text": "policy should apply based on the attributes of the incoming request so this is in addition to match labels",
    "start": "595560",
    "end": "602000"
  },
  {
    "text": "namespace selector object selectors that you have in the binding then the next",
    "start": "602000",
    "end": "607120"
  },
  {
    "text": "one is variables so you can use cell to set variables that simplify complex",
    "start": "607120",
    "end": "612200"
  },
  {
    "text": "expressions and that can be reused as part of evaluation uh the",
    "start": "612200",
    "end": "617519"
  },
  {
    "text": "validations these are the core rules that get evaluated so cell Expressions validate whether a resource request",
    "start": "617519",
    "end": "624800"
  },
  {
    "text": "meets specific requirements and then you have audit annotations so cell can also",
    "start": "624800",
    "end": "630240"
  },
  {
    "text": "annotate the requests based on what decision is being made uh to track policy actions and violations and then",
    "start": "630240",
    "end": "637000"
  },
  {
    "text": "the last one being message expression so this is where you configure an expression so that uh the client gets",
    "start": "637000",
    "end": "643959"
  },
  {
    "text": "more detailed message if a violation exists and then in terms of what these",
    "start": "643959",
    "end": "650800"
  },
  {
    "text": "cell Expressions have access to uh they typically have access to the uh contents",
    "start": "650800",
    "end": "656000"
  },
  {
    "text": "of the admission request or response um or organized into cell variables and",
    "start": "656000",
    "end": "661160"
  },
  {
    "text": "here's a list of the cell variables that they have access to the first one is object so this is the object of the",
    "start": "661160",
    "end": "667600"
  },
  {
    "text": "incoming request and the value is null for delete and then the old object is",
    "start": "667600",
    "end": "673560"
  },
  {
    "text": "the existing object the value is null for create requests and then the request",
    "start": "673560",
    "end": "678639"
  },
  {
    "text": "is basically attributes of the admission request and the params is optional",
    "start": "678639",
    "end": "683839"
  },
  {
    "text": "parameters that you have configured that is used for uh evaluating the conditions",
    "start": "683839",
    "end": "689720"
  },
  {
    "text": "uh and then the namespace object is the kubernetes namespace object this value is set to null if it's if you're",
    "start": "689720",
    "end": "696279"
  },
  {
    "text": "evaluating a cluster scoped resource um and then the authorizer the cell authorizer uh this can be used to",
    "start": "696279",
    "end": "702600"
  },
  {
    "text": "perform authorization checks for the principle that the request is being made",
    "start": "702600",
    "end": "709040"
  },
  {
    "text": "for okay so now we know a little bit about validating admission policies we",
    "start": "709320",
    "end": "714399"
  },
  {
    "text": "know that they uh they're declarative we know that they run embedded within the",
    "start": "714399",
    "end": "720200"
  },
  {
    "text": "API server so there's no external network access required we know that they use cell for defining their",
    "start": "720200",
    "end": "727120"
  },
  {
    "text": "policies and the best exam best reason for using them as far as I'm concerned",
    "start": "727120",
    "end": "732279"
  },
  {
    "text": "is we don't need to use a web hook so anybody use web hops will know how that feels okay so we're going to take you on",
    "start": "732279",
    "end": "739120"
  },
  {
    "text": "a little journey of uh validating emission policies take you through a the",
    "start": "739120",
    "end": "745000"
  },
  {
    "text": "kind of Journey that you might experience if you were learning how to use it uh yourselves so the first thing",
    "start": "745000",
    "end": "750440"
  },
  {
    "text": "we're going to look at is really where do you start it's it's probably with something like this a very simple policy",
    "start": "750440",
    "end": "757040"
  },
  {
    "text": "uh this one here is uh it's matching for pods the create an update verbs on pods",
    "start": "757040",
    "end": "764240"
  },
  {
    "text": "and what it's trying to do is it's trying to prevent containers getting into your system that have requested",
    "start": "764240",
    "end": "769440"
  },
  {
    "text": "privileged access so the expression at the bottom here is fairly simple we have",
    "start": "769440",
    "end": "775120"
  },
  {
    "text": "a a has macro there which says uh that it's the expression uh sorry the",
    "start": "775120",
    "end": "780360"
  },
  {
    "text": "resource is going to be valid if it doesn't have a security context or if it doesn't have a privileged set or if the",
    "start": "780360",
    "end": "787519"
  },
  {
    "text": "privilege value is not true so that's it so we'll show this in",
    "start": "787519",
    "end": "793480"
  },
  {
    "text": "action",
    "start": "793480",
    "end": "796480"
  },
  {
    "text": "so I need to move that okay so this is the policy that we",
    "start": "800560",
    "end": "807360"
  },
  {
    "text": "showed on the slide just to show you that I'm going to to deploy the same",
    "start": "807360",
    "end": "812120"
  },
  {
    "text": "thing so that gets deployed the policy",
    "start": "812600",
    "end": "818160"
  },
  {
    "text": "binding uh can you read that that looks a bit small let me increase the size of that is that any better yep okay so this",
    "start": "818160",
    "end": "826560"
  },
  {
    "text": "is the policy binding what we're doing is we are uh matching on namespace",
    "start": "826560",
    "end": "832320"
  },
  {
    "text": "selector here with environment demo now the only name space in this cluster that we have that matches that is called demo",
    "start": "832320",
    "end": "838880"
  },
  {
    "text": "uh the policy name is deny privileged example so that's a policy that we previously defined and our validating",
    "start": "838880",
    "end": "845680"
  },
  {
    "text": "action is deny so if anybody tries to uh submit a request that contravenes this",
    "start": "845680",
    "end": "851560"
  },
  {
    "text": "policy then we're going to deny the uh request so we will apply that as",
    "start": "851560",
    "end": "856959"
  },
  {
    "text": "well so now we're going to test it out here is a simple pod it's just deploying",
    "start": "856959",
    "end": "864560"
  },
  {
    "text": "engine X so nice and easy and it's asking for privileged access so we will try it and see what we",
    "start": "864560",
    "end": "871000"
  },
  {
    "text": "get okay so that's what we wanted to see the request has failed uh we have a",
    "start": "871000",
    "end": "877240"
  },
  {
    "text": "message here which has come from our policy which says the port has at least one privileged container so that's great",
    "start": "877240",
    "end": "884480"
  },
  {
    "text": "but what happens when you start talking about controllers who are creating PS how does that work well let's give that",
    "start": "884480",
    "end": "891360"
  },
  {
    "text": "a try let's try it with the deployment C so the deployment as you can see is",
    "start": "891360",
    "end": "896720"
  },
  {
    "text": "essentially the same as the Pod it's just wrapped in within deployment uh structure itself so if we",
    "start": "896720",
    "end": "902399"
  },
  {
    "text": "run that we see that actually that succeeded now that's not what we wanted to see",
    "start": "902399",
    "end": "908320"
  },
  {
    "text": "what we wanted was for that to fail so let's go and take a look and see what we have here so we can see we",
    "start": "908320",
    "end": "915800"
  },
  {
    "text": "have a deployment and we can also see that we have a replica set let's take a look at the deployment first and see",
    "start": "915800",
    "end": "923000"
  },
  {
    "text": "what we get okay so if we scroll down",
    "start": "923000",
    "end": "929079"
  },
  {
    "text": "so the bottom we can see that okay there's a message there that says replica failed but there's nothing really of interest there so let's look",
    "start": "929079",
    "end": "935920"
  },
  {
    "text": "at the replica set and see what that says again down at the bottom we start",
    "start": "935920",
    "end": "941000"
  },
  {
    "text": "to see lots of error messages that are coming from our policy so the reason",
    "start": "941000",
    "end": "946160"
  },
  {
    "text": "this has happened is you know thanks to the good as asynchronicity of cometes and controllers the replica",
    "start": "946160",
    "end": "954079"
  },
  {
    "text": "controller is the client that's making the request so it's is creating the Pod",
    "start": "954079",
    "end": "960920"
  },
  {
    "text": "it's the one that gets the error message so it's logging in status so now we have to go back to the",
    "start": "960920",
    "end": "968040"
  },
  {
    "text": "drawing board wrong one sorry let me just go",
    "start": "968040",
    "end": "975759"
  },
  {
    "text": "back and I'll close that down so we're not going to use that again so now we have to go back to the drawing board and",
    "start": "975759",
    "end": "980959"
  },
  {
    "text": "we do a second version of it uh this one what we've done is we've extended the",
    "start": "980959",
    "end": "986800"
  },
  {
    "text": "resource rules that we're using so that we are are also looking at the other types that contain containers uh and",
    "start": "986800",
    "end": "994759"
  },
  {
    "text": "actually I know this is just I know we're not doing a net containers and a f roll stuff I'm trying to keep it simple but we're just looking at the the normal",
    "start": "994759",
    "end": "1001399"
  },
  {
    "text": "containers within the pods we are also having to extend see if this works wrong one so we",
    "start": "1001399",
    "end": "1009720"
  },
  {
    "text": "have that's not very good so we have got three validation rules now instead of uh",
    "start": "1009720",
    "end": "1015880"
  },
  {
    "text": "one the reason for this is because the ACT the structures of the resources are different right pods the containers are",
    "start": "1015880",
    "end": "1021560"
  },
  {
    "text": "based directly in the spec uh deployments Etc they have a template uh",
    "start": "1021560",
    "end": "1027798"
  },
  {
    "text": "which contains everything Chron job has a job template which which contains everything so we need to put guards",
    "start": "1027799",
    "end": "1033918"
  },
  {
    "text": "there to make sure that only the appropriate resource will evaluate that expression so let's give that a",
    "start": "1033919",
    "end": "1043640"
  },
  {
    "text": "try okay so this is the policy that we're using",
    "start": "1044600",
    "end": "1052200"
  },
  {
    "text": "just to show that it's sorry to show that it's the same one so we'll give that a go that's now",
    "start": "1052200",
    "end": "1062600"
  },
  {
    "text": "configured and we will go back and we will try the",
    "start": "1062600",
    "end": "1069200"
  },
  {
    "text": "deployment again okay so now we get the error message so that was what we wanted to see so when somebody is actually",
    "start": "1069200",
    "end": "1075840"
  },
  {
    "text": "creating the deployment they're the ones who see the error cuz that's where it makes sense now there are two real",
    "start": "1075840",
    "end": "1081600"
  },
  {
    "text": "issues with this if we go back to the policy and show that you know this is",
    "start": "1081600",
    "end": "1087360"
  },
  {
    "text": "quite a messy policy we are using the has macro all over the place uh we also",
    "start": "1087360",
    "end": "1094039"
  },
  {
    "text": "uh are duplicating duplicating a lot of code there must be some way to clear this this uh to clean this up an other",
    "start": "1094039",
    "end": "1100679"
  },
  {
    "text": "issue is that if you uh look at the policy",
    "start": "1100679",
    "end": "1107039"
  },
  {
    "text": "itself you will see that there are lots of errors that have",
    "start": "1107039",
    "end": "1112720"
  },
  {
    "text": "been created right down in the bottom of status so these are the errors now what",
    "start": "1112720",
    "end": "1118520"
  },
  {
    "text": "is happening here is that when we deploy our policy there's a CH a type checking stage that takes place this takes all",
    "start": "1118520",
    "end": "1125559"
  },
  {
    "text": "the resources that you've said that you're interested in and it will compare the structure with what you're executing",
    "start": "1125559",
    "end": "1131480"
  },
  {
    "text": "with the Expressions if there's a a mismatch then it creates an error message okay now we know that we have",
    "start": "1131480",
    "end": "1138919"
  },
  {
    "text": "different types with different structures we are expecting there to be mismatches because the expressions are not going to to handle everything uh but",
    "start": "1138919",
    "end": "1147320"
  },
  {
    "text": "the type Checker doesn't know that okay so it's creating all these errors for it so is there a way that we can deal with",
    "start": "1147320",
    "end": "1153520"
  },
  {
    "text": "this as well well as it turns out that there is",
    "start": "1153520",
    "end": "1159080"
  },
  {
    "text": "oops so there are two things that we can do first is to start using variables so",
    "start": "1159080",
    "end": "1165080"
  },
  {
    "text": "these are essentially sub Expressions which will be evaluated On Demand only if they're ever referenced and they will",
    "start": "1165080",
    "end": "1171400"
  },
  {
    "text": "be evaluated once and we can also use the optional operator which is the dot",
    "start": "1171400",
    "end": "1176720"
  },
  {
    "text": "question mark that you can see there now what the optional operator means does is",
    "start": "1176720",
    "end": "1182480"
  },
  {
    "text": "it it says that from this point onwards something could be missing right I know it could be missing I'm telling you it",
    "start": "1182480",
    "end": "1188200"
  },
  {
    "text": "might not be there and we have an opportunity to set up a default value which is what our value does so now we",
    "start": "1188200",
    "end": "1195600"
  },
  {
    "text": "have uh three Expressions at the sorry three variables at the top POD",
    "start": "1195600",
    "end": "1200760"
  },
  {
    "text": "containers workload containers and Chron job containers they are using the",
    "start": "1200760",
    "end": "1205840"
  },
  {
    "text": "optional operator to say if this exists then we will take the value of containers otherwise we'll just have an",
    "start": "1205840",
    "end": "1211120"
  },
  {
    "text": "empty list and just for uh ease of use we've created a fourth variable which",
    "start": "1211120",
    "end": "1217360"
  },
  {
    "text": "just con concatenates that all together right so now we end up with one expression which says there may or may",
    "start": "1217360",
    "end": "1223400"
  },
  {
    "text": "not be a security context with a privileged if there is make sure that it's not",
    "start": "1223400",
    "end": "1229400"
  },
  {
    "text": "okay so that's much uh simpler so let's try that out and see what happens with",
    "start": "1229400",
    "end": "1238399"
  },
  {
    "text": "that okay so this is the policy that we were just talking about I'll deploy that",
    "start": "1240240",
    "end": "1248159"
  },
  {
    "text": "instead okay and if we do a go back to the policies and describe",
    "start": "1248159",
    "end": "1255320"
  },
  {
    "text": "that we can see that uh this is there and it's clean there",
    "start": "1255320",
    "end": "1260960"
  },
  {
    "text": "are no errors there now really uh we we've kind of cheated a bit here because the reason there are no errors is",
    "start": "1260960",
    "end": "1267320"
  },
  {
    "text": "because we moved all the bits which would cause errors into variables and that doesn't get type checked so it's a",
    "start": "1267320",
    "end": "1273480"
  },
  {
    "text": "bit of a cheat but it works it's clean okay so that's that fit there",
    "start": "1273480",
    "end": "1280000"
  },
  {
    "text": "uh right so going back so the next thing you might move on to is okay you you",
    "start": "1280000",
    "end": "1286080"
  },
  {
    "text": "want to do something like uh restrict sorry you want to uh enforce a minimum number of replicas for example that's",
    "start": "1286080",
    "end": "1292039"
  },
  {
    "text": "the common example that you see uh this is something that you want to configure using parameters because you want the",
    "start": "1292039",
    "end": "1298559"
  },
  {
    "text": "ability to create uh so you want the ability to update that value but without re restart without recreating the policy",
    "start": "1298559",
    "end": "1305919"
  },
  {
    "text": "or updating the policy so you define a crd uh we have an example called demo",
    "start": "1305919",
    "end": "1313039"
  },
  {
    "text": "pram here which I'll show you the crd in a minute it's very simple and we use that within our expressions with params",
    "start": "1313039",
    "end": "1320559"
  },
  {
    "text": "dopc do replicas and use that just to enforce the policy The Binding that you see on the right hand side when you see",
    "start": "1320559",
    "end": "1328200"
  },
  {
    "text": "the param there what that is doing is it's binding the policy to a particular instance of that resource so that CR so",
    "start": "1328200",
    "end": "1335679"
  },
  {
    "text": "this one is in the namespace config and it has a name Min replicas so",
    "start": "1335679",
    "end": "1342080"
  },
  {
    "text": "let's give that a go as",
    "start": "1342080",
    "end": "1346039"
  },
  {
    "text": "well okay [Music]",
    "start": "1347159",
    "end": "1351799"
  },
  {
    "text": "sorry wrong one okay so this is the policy just to",
    "start": "1352799",
    "end": "1358600"
  },
  {
    "text": "show you that I'm doing the same policy we will apply that uh the policy binding the same",
    "start": "1358600",
    "end": "1367400"
  },
  {
    "text": "binding actually I for to do the crd so I'll do the crd first so this is the crd",
    "start": "1367400",
    "end": "1373480"
  },
  {
    "text": "it's very simple it has is a single integer and they're called replicas",
    "start": "1373480",
    "end": "1379000"
  },
  {
    "text": "so deploy that and the parameters we're going to use again this in namespace config has a",
    "start": "1379000",
    "end": "1386000"
  },
  {
    "text": "name in replicas has a replica value of three so we'll deploy",
    "start": "1386000",
    "end": "1392360"
  },
  {
    "text": "that and now we'll deploy the Bing okay so let's give this a go and see what",
    "start": "1392360",
    "end": "1397799"
  },
  {
    "text": "happens I'm just going to go down to the command line for this right",
    "start": "1397799",
    "end": "1402919"
  },
  {
    "text": "so I'm going to call it engine X cuz I'm going to deploy engine X",
    "start": "1403159",
    "end": "1409960"
  },
  {
    "text": "let's see what happens okay so we get an error message says deployment spec replicas are set to one but should be at",
    "start": "1410360",
    "end": "1415640"
  },
  {
    "text": "least three so the three is coming from our parameters that we' spe we've",
    "start": "1415640",
    "end": "1421278"
  },
  {
    "text": "specified we can try with three and we see that it gets created okay so that's",
    "start": "1421679",
    "end": "1428480"
  },
  {
    "text": "how to use a parameter",
    "start": "1428480",
    "end": "1432360"
  },
  {
    "text": "oops but that's not where we stop with parameters uh oops sorry I keep going back to the",
    "start": "1435240",
    "end": "1441200"
  },
  {
    "text": "hummingboard uh so now the next step would be okay well we can use parameters",
    "start": "1441200",
    "end": "1446720"
  },
  {
    "text": "but actually what we really want to do is we want to have different values of the parameter per namespace so how do we do this so you go back you do a bit of",
    "start": "1446720",
    "end": "1453919"
  },
  {
    "text": "research and you actually find that it's uh fairly easy to do this the only thing you need to do is change your binding so",
    "start": "1453919",
    "end": "1460840"
  },
  {
    "text": "that it does not specify the namespace within the param when API server sees that what it",
    "start": "1460840",
    "end": "1468120"
  },
  {
    "text": "will do is it will default the namespace to the same name space as the resource that's coming in right so if somebody's",
    "start": "1468120",
    "end": "1474600"
  },
  {
    "text": "creating it uh in test then it will use that parameter within the test namespace",
    "start": "1474600",
    "end": "1482880"
  },
  {
    "text": "if it's us if it's deploying into prod then it will do it will pull it from the prod namespace okay so we'll do",
    "start": "1482880",
    "end": "1491600"
  },
  {
    "text": "a show this in action as well",
    "start": "1491600",
    "end": "1499120"
  },
  {
    "text": "so this is the changed binding as you can see there's no name space there we",
    "start": "1499120",
    "end": "1504600"
  },
  {
    "text": "will apply that and now these are the parameters that we are going to deploy so again",
    "start": "1504600",
    "end": "1510799"
  },
  {
    "text": "test we have three replicas prod we have five replicas deploy",
    "start": "1510799",
    "end": "1517279"
  },
  {
    "text": "that okay so that deployed now if you go",
    "start": "1517279",
    "end": "1522720"
  },
  {
    "text": "back and try it with test we'll see that it's saying okay okay we should have at",
    "start": "1522720",
    "end": "1529000"
  },
  {
    "text": "least three and if we do it with prod",
    "start": "1529000",
    "end": "1535760"
  },
  {
    "text": "oops then now it's saying this should be at least five and you can take a look at",
    "start": "1535760",
    "end": "1541799"
  },
  {
    "text": "the oopss you use my say uh so the these are",
    "start": "1542320",
    "end": "1548120"
  },
  {
    "text": "the the uh parameters that we have defined in the name spaces that they're in okay so it's matching prod was five",
    "start": "1548120",
    "end": "1553679"
  },
  {
    "text": "test was three okay but that's not where you stop with parameters right so far we",
    "start": "1553679",
    "end": "1561440"
  },
  {
    "text": "have created policies and we've evaluated them against a single parameter right it doesn't matter",
    "start": "1561440",
    "end": "1566880"
  },
  {
    "text": "whether it's in the namespace that the resource is deploying in or whether it's in a config namespace of some kind you",
    "start": "1566880",
    "end": "1573200"
  },
  {
    "text": "can actually use many parameters right but they all have to there are some gutes right the first one is that you",
    "start": "1573200",
    "end": "1579279"
  },
  {
    "text": "are defining the type of the parameter within the policy itself so you're restricted to one type the second thing",
    "start": "1579279",
    "end": "1586600"
  },
  {
    "text": "is uh that you uh you define a selector which chooses the parameters the uh API",
    "start": "1586600",
    "end": "1593640"
  },
  {
    "text": "server will ident will will identify all the parameters that uh match your selector and for every single one it",
    "start": "1593640",
    "end": "1600399"
  },
  {
    "text": "finds it will execute your policy every combination of that policy",
    "start": "1600399",
    "end": "1605840"
  },
  {
    "text": "has to succeed for the admission to work right so here we're going to do",
    "start": "1605840",
    "end": "1611880"
  },
  {
    "text": "something which is actually uh may look a bit strange but it makes sense so we have a parameter kind we're actually",
    "start": "1611880",
    "end": "1618559"
  },
  {
    "text": "going to use pod disruption budget here but we're also going to have our",
    "start": "1618559",
    "end": "1624080"
  },
  {
    "text": "resource Rules match on pod disruption budgets right so when they get created or updated our object will be a pdb and",
    "start": "1624080",
    "end": "1632240"
  },
  {
    "text": "the parameter will be a pdb but the parameter will be every single pdb that's already in that namespace so we",
    "start": "1632240",
    "end": "1639080"
  },
  {
    "text": "can check to see whether the incoming one clashes in some way with the ones",
    "start": "1639080",
    "end": "1644799"
  },
  {
    "text": "that are already deployed so if we",
    "start": "1644799",
    "end": "1650120"
  },
  {
    "text": "go back to",
    "start": "1650120",
    "end": "1652880"
  },
  {
    "text": "this so this is the policy that we're going to use uh at the top here we have two",
    "start": "1657840",
    "end": "1666200"
  },
  {
    "text": "variables all those are really doing is making it easy so that we don't have to keep typing that again they're just",
    "start": "1666200",
    "end": "1671320"
  },
  {
    "text": "copying the uh the labels that we have right now we have an expression here",
    "start": "1671320",
    "end": "1678320"
  },
  {
    "text": "which is checking to see whether the pdb that's already deployed and the one that we're about to uh test against are the",
    "start": "1678320",
    "end": "1685360"
  },
  {
    "text": "same if it is then we just we we don't care because it's replacing what's there so they're not going to",
    "start": "1685360",
    "end": "1691279"
  },
  {
    "text": "clash the next two are just simple Expressions which check to see",
    "start": "1691279",
    "end": "1699120"
  },
  {
    "text": "whether the labels that are there the match labels which are in uh in this case in the incoming object if they are",
    "start": "1699120",
    "end": "1704799"
  },
  {
    "text": "a subset of the pdb so go through every single label check if it exists check if the values are the same if it do if if",
    "start": "1704799",
    "end": "1712159"
  },
  {
    "text": "that is true then it's obviously a subset and it's going to clash and the last one is the opposite direction in",
    "start": "1712159",
    "end": "1720679"
  },
  {
    "text": "this case for pdbs so if either of those are true then we know that we're going to have a clash and that's what the validating expressions are going to say",
    "start": "1720679",
    "end": "1728480"
  },
  {
    "text": "so let's deploy that we'll deploy The",
    "start": "1728480",
    "end": "1735120"
  },
  {
    "text": "Binding and we go and have a look at some pdbs so this one here is there's obviously nothing deployed at the moment",
    "start": "1735120",
    "end": "1741480"
  },
  {
    "text": "this one should succeed it's got labels of app being app one and service being service one so you apply that that",
    "start": "1741480",
    "end": "1750000"
  },
  {
    "text": "works pdb2 has app again app one but the service is service two so they're not",
    "start": "1750000",
    "end": "1757159"
  },
  {
    "text": "clashing deploy that one and that one works pdb 3 on the other hand has app of",
    "start": "1757159",
    "end": "1764840"
  },
  {
    "text": "app one and service from service one now we know that they clash with pdb1 because those are the only labels that",
    "start": "1764840",
    "end": "1770600"
  },
  {
    "text": "are deployed in in pdb1 uh but it also includes sub uh label in there as well so pdb1 is",
    "start": "1770600",
    "end": "1778679"
  },
  {
    "text": "a subset of this if we deploy that then we get an error message from",
    "start": "1778679",
    "end": "1785480"
  },
  {
    "text": "our policy which says the match labels in pdb1 match a subset of the match",
    "start": "1785480",
    "end": "1790760"
  },
  {
    "text": "labels in this pdb okay so that worked and then pdb 4 look at that all",
    "start": "1790760",
    "end": "1797600"
  },
  {
    "text": "it contains contains is that so it's a subset of the existing pdb1 and the existing pdb2 CU they were the only two",
    "start": "1797600",
    "end": "1803399"
  },
  {
    "text": "that successfully deployed and that's",
    "start": "1803399",
    "end": "1809640"
  },
  {
    "text": "oops and that's what we're getting back from our uh policy so match labels in",
    "start": "1809640",
    "end": "1815240"
  },
  {
    "text": "this pod disruption budget match a subset of match labels uh in pdb1 in this case it could have been pdb2 it",
    "start": "1815240",
    "end": "1822320"
  },
  {
    "text": "depends which one's evaluated first but this one is pdb one okay",
    "start": "1822320",
    "end": "1829559"
  },
  {
    "text": "so so the next thing I'm going to talk about uh is mutating admission policy so",
    "start": "1831200",
    "end": "1836760"
  },
  {
    "text": "this is something which has only just made it into the kubernetes code base it's going to be in 132 as an alpha",
    "start": "1836760",
    "end": "1844120"
  },
  {
    "text": "release uh whereas validating emission policies they first hit Alpha 126 there were beta 128 and then they G8 and",
    "start": "1844120",
    "end": "1852000"
  },
  {
    "text": "130 so mutating admission policies are to mutating web hooks what validating",
    "start": "1852000",
    "end": "1858000"
  },
  {
    "text": "emission policies are to validating web hooks they run in the API server uh they",
    "start": "1858000",
    "end": "1864000"
  },
  {
    "text": "have a policy a binding and resources parameter resources the same way as validating emission policy does uh but",
    "start": "1864000",
    "end": "1871320"
  },
  {
    "text": "we have a uh mutation section instead of a validation section and we can we can",
    "start": "1871320",
    "end": "1876919"
  },
  {
    "text": "create either serice side apply configurations or we can create Jon",
    "start": "1876919",
    "end": "1882279"
  },
  {
    "text": "patch configurations so let's take a look at those right this is an example",
    "start": "1882279",
    "end": "1888440"
  },
  {
    "text": "of the apply configurations so serice side apply I will go back to command",
    "start": "1888440",
    "end": "1897240"
  },
  {
    "text": "line okay so this is the policy now this policy is looking for pods which do not",
    "start": "1898480",
    "end": "1906000"
  },
  {
    "text": "have an apply hello label already set and if it finds one then it will just mutate the the uh pod to have it okay so",
    "start": "1906000",
    "end": "1914519"
  },
  {
    "text": "we will go and create that sorry uh apply it",
    "start": "1914519",
    "end": "1922320"
  },
  {
    "text": "first and apply The Binding",
    "start": "1922639",
    "end": "1927279"
  },
  {
    "text": "Okay so we've created a deployment we go back and have a look at the workloads",
    "start": "1948080",
    "end": "1954039"
  },
  {
    "text": "okay uh we have pause there I have let me just do that again",
    "start": "1954039",
    "end": "1960000"
  },
  {
    "text": "I've obviously left something running for",
    "start": "1960000",
    "end": "1963360"
  },
  {
    "text": "before okay okay so now if we take a look at",
    "start": "1967080",
    "end": "1974679"
  },
  {
    "text": "the Pod we can see that that label exists so that's come from the mutation that we did uh Json is",
    "start": "1974679",
    "end": "1983960"
  },
  {
    "text": "similar uh but it's a bit more it it has a bit more options for us because we can add values we can remove values replace",
    "start": "1983960",
    "end": "1991080"
  },
  {
    "text": "values copy values move values and also test values this is the same except as",
    "start": "1991080",
    "end": "1996519"
  },
  {
    "text": "looking for Jason hello instead sorry",
    "start": "1996519",
    "end": "2001840"
  },
  {
    "text": "so this is the same but it's looking for Json hello instead a label of Json hello but again it's doing a mutation and",
    "start": "2010720",
    "end": "2016760"
  },
  {
    "text": "adding the label if it doesn't find it so we can apply",
    "start": "2016760",
    "end": "2023080"
  },
  {
    "text": "this go back",
    "start": "2023080",
    "end": "2026559"
  },
  {
    "text": "to that create it again go back to look at the workloads",
    "start": "2029279",
    "end": "2036720"
  },
  {
    "text": "and take a look at the we can see now we have the label Json hello world so that's the Json patch",
    "start": "2036720",
    "end": "2042720"
  },
  {
    "text": "working and mutating it uh okay so that's it that's where we",
    "start": "2042720",
    "end": "2048240"
  },
  {
    "text": "are up to uh I don't know we've got 39 seconds left sorry I couldn't see the",
    "start": "2048240",
    "end": "2053638"
  },
  {
    "text": "clock from here on the podium it's a bit hard to see um so if there are any questions please ask them quickly uh if",
    "start": "2053639",
    "end": "2060679"
  },
  {
    "text": "not you can catch us at the end of this and ask questions it's a your choice",
    "start": "2060679",
    "end": "2067000"
  },
  {
    "text": "no questions is that good or bad oh we have a question do you want to come to the mic and ask the",
    "start": "2068359",
    "end": "2074118"
  },
  {
    "text": "question so I think we've all dealt with the downsides of validating admission",
    "start": "2077960",
    "end": "2083599"
  },
  {
    "text": "controllers uh or specifically validating admission and mutating web hooks right like that'll really get you",
    "start": "2083599",
    "end": "2091040"
  },
  {
    "text": "in trouble uh what are the downsides to implementing the same patterns using",
    "start": "2091040",
    "end": "2096118"
  },
  {
    "text": "cell and validating admission policies versus web",
    "start": "2096119",
    "end": "2101720"
  },
  {
    "text": "hooks uh so I I guess you're uh I mean there are some obvious advantages like",
    "start": "2101720",
    "end": "2107440"
  },
  {
    "text": "no network you don't need to worry about the service going down or anything uh but there are some constraints as well to it uh you can't make remote accesses",
    "start": "2107440",
    "end": "2115240"
  },
  {
    "text": "to anything from a policy uh admission policy so if you're if you need to do that for any reason then you um you you",
    "start": "2115240",
    "end": "2122560"
  },
  {
    "text": "you can't do that uh if you need if you depend on multiple different types then",
    "start": "2122560",
    "end": "2128880"
  },
  {
    "text": "there are additional steps that you have to do so the only real way to do that is to have a controller which monitors those types and then creates an",
    "start": "2128880",
    "end": "2135720"
  },
  {
    "text": "individual parameter crd Uh custom resource which then feeds into the policy so there's an extra step there of",
    "start": "2135720",
    "end": "2142000"
  },
  {
    "text": "creating a a controller to do that and obviously that can potentially get a bit unwieldy so those are the the real ones",
    "start": "2142000",
    "end": "2149400"
  },
  {
    "text": "I can think of you got any no performance impacts to the API server",
    "start": "2149400",
    "end": "2155119"
  },
  {
    "text": "overloading the API server and killing the API server as they're being each of these uh Expressions they all run with a",
    "start": "2155119",
    "end": "2165200"
  },
  {
    "text": "cost budget but uh until 132 uh when this this finally gets",
    "start": "2165200",
    "end": "2171960"
  },
  {
    "text": "enabled uh they actually forgot to add in the cost estimator for a lot of the extension functions that we use so it",
    "start": "2171960",
    "end": "2178040"
  },
  {
    "text": "went GA without the cost estimator uh they put it in as a deprecated feature",
    "start": "2178040",
    "end": "2184319"
  },
  {
    "text": "flag that feature flag uh will be turned on by default in 132 so now you'll be",
    "start": "2184319",
    "end": "2190599"
  },
  {
    "text": "constrained uh by resources because of that so you shouldn't uh do that you shouldn't overload the API Ser do you",
    "start": "2190599",
    "end": "2196720"
  },
  {
    "text": "know what the budget number is off hand say again do you know what the budget number is off hand uh not off the top of my head but I",
    "start": "2196720",
    "end": "2205079"
  },
  {
    "text": "think it's no I don't remember but we can check that thanks you're",
    "start": "2205079",
    "end": "2211960"
  },
  {
    "text": "welcome okay sorry somebody said something I M 10 million R and 100",
    "start": "2212920",
    "end": "2218599"
  },
  {
    "text": "million for the entire resource 10 million per Rule and 100 million for all the resources there you go thank you",
    "start": "2218599",
    "end": "2224640"
  },
  {
    "text": "very much um for the Json patch stuff uh can you use sell in writing the Json",
    "start": "2224640",
    "end": "2231599"
  },
  {
    "text": "patch or is the patch just static oh no it's a a cell expression so you can use it to generate it yeah you can create",
    "start": "2231599",
    "end": "2238560"
  },
  {
    "text": "whatever you want using cell yeah no",
    "start": "2238560",
    "end": "2245680"
  },
  {
    "text": "sorry just so it gets recorded and people can hear the question just quickly is there uh tools for doing unit",
    "start": "2246119",
    "end": "2253400"
  },
  {
    "text": "testing of your validating emissions policies so you can run them in CI and make sure that they're doing what they",
    "start": "2253400",
    "end": "2259200"
  },
  {
    "text": "should be doing not blocking things they should be allowing not allowing things they should be that is starting to come",
    "start": "2259200",
    "end": "2265599"
  },
  {
    "text": "through I do know of one which is called VAP Library if I remember rightly and",
    "start": "2265599",
    "end": "2270800"
  },
  {
    "text": "they do have some way of testing it as part of CI uh I haven't tried that",
    "start": "2270800",
    "end": "2276839"
  },
  {
    "text": "myself but you can certainly look at that and I know that within the C playground we're going to add that anyway as a capability so it may well be",
    "start": "2276839",
    "end": "2283240"
  },
  {
    "text": "that we'll have it in both thank you you're welcome what about exceptions what about exceptions what do",
    "start": "2283240",
    "end": "2290599"
  },
  {
    "text": "you mean by exceptions like um the privilege container example Q proxy I",
    "start": "2290599",
    "end": "2296880"
  },
  {
    "text": "don't want to block Q proxy oh you you can uh create whichever ex exceptions",
    "start": "2296880",
    "end": "2302760"
  },
  {
    "text": "you want really I mean if it's something to do with uh not wanting to apply it to resources",
    "start": "2302760",
    "end": "2310079"
  },
  {
    "text": "that coup system and when you set up the binding you can exclude it that way so you can see you set up the selector for",
    "start": "2310079",
    "end": "2316560"
  },
  {
    "text": "the name spaces or the resources to to match however you would normally do it so you can might be like a really really",
    "start": "2316560",
    "end": "2323040"
  },
  {
    "text": "long rule right so you could do it through the selectors right so you could do it Define it in The Binding but that",
    "start": "2323040",
    "end": "2328800"
  },
  {
    "text": "is where you can also do it through like match conditions right so you can basically use cell in match conditions",
    "start": "2328800",
    "end": "2334359"
  },
  {
    "text": "to say I want to exclude this particular thing like it gives you more granular control over which workloads within that",
    "start": "2334359",
    "end": "2342000"
  },
  {
    "text": "namespace you want this condition to match for and not do it for the others and the other advantage of that is that you can use things like authorizer so",
    "start": "2342000",
    "end": "2348400"
  },
  {
    "text": "you could actually base it on who's making the request as well so maybe you have some people who you would allow to",
    "start": "2348400",
    "end": "2353960"
  },
  {
    "text": "do that and some people who you wouldn't allow to do it so you can use authorizer to check whether they have permissions to do",
    "start": "2353960",
    "end": "2359640"
  },
  {
    "text": "that so based on the arback stuff any more questions",
    "start": "2359640",
    "end": "2367839"
  },
  {
    "text": "all right well hopefully you managed to get something out of this certainly Our intention but thank you very much for coming and thank you very much for",
    "start": "2367839",
    "end": "2373680"
  },
  {
    "text": "staying to the end thank you thank you very much",
    "start": "2373680",
    "end": "2378160"
  }
]