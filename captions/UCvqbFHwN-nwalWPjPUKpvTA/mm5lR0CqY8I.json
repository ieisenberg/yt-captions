[
  {
    "text": "hello everyone welcome to are your",
    "start": "120",
    "end": "2280"
  },
  {
    "text": "microservices truly scalable a framework",
    "start": "2280",
    "end": "5000"
  },
  {
    "text": "for unlocking the stateful back end my",
    "start": "5000",
    "end": "7439"
  },
  {
    "text": "name is Matthew penosa I a principal",
    "start": "7439",
    "end": "9200"
  },
  {
    "text": "Solutions engineer at uh pinap and tidy",
    "start": "9200",
    "end": "11719"
  },
  {
    "text": "B um a little bit about me I'm based in",
    "start": "11719",
    "end": "14799"
  },
  {
    "text": "Austin Texas I was originally born in uh",
    "start": "14799",
    "end": "17880"
  },
  {
    "text": "Eva Beach Hawaii and it's my job at tidb",
    "start": "17880",
    "end": "20840"
  },
  {
    "text": "to solution uh technical challenges at",
    "start": "20840",
    "end": "24000"
  },
  {
    "text": "scale for some of of our company's",
    "start": "24000",
    "end": "26119"
  },
  {
    "text": "largest customers and a fun fact about",
    "start": "26119",
    "end": "28560"
  },
  {
    "text": "me is I used to be a former streamer and",
    "start": "28560",
    "end": "30560"
  },
  {
    "text": "competitive DOTA two player all right so",
    "start": "30560",
    "end": "34000"
  },
  {
    "text": "jumping right in um the key focus of",
    "start": "34000",
    "end": "37079"
  },
  {
    "text": "this session is to discuss scaling",
    "start": "37079",
    "end": "39280"
  },
  {
    "text": "stateful backends in microservices with",
    "start": "39280",
    "end": "42360"
  },
  {
    "text": "a focus on the challenges that arise in",
    "start": "42360",
    "end": "46199"
  },
  {
    "text": "Data Systems as you scale and why this",
    "start": "46199",
    "end": "49480"
  },
  {
    "text": "matters is that application as",
    "start": "49480",
    "end": "51680"
  },
  {
    "text": "applications scale backing components",
    "start": "51680",
    "end": "53680"
  },
  {
    "text": "particularly data backing components",
    "start": "53680",
    "end": "55520"
  },
  {
    "text": "often struggle to keep up affecting the",
    "start": "55520",
    "end": "58760"
  },
  {
    "text": "uh agility and performance and data",
    "start": "58760",
    "end": "60559"
  },
  {
    "text": "Integrity of the greater application so",
    "start": "60559",
    "end": "63199"
  },
  {
    "text": "what you'll learn today is the impact of",
    "start": "63199",
    "end": "66159"
  },
  {
    "text": "scaling on Data Systems challenges of",
    "start": "66159",
    "end": "69159"
  },
  {
    "text": "maintaining data reliability as",
    "start": "69159",
    "end": "71159"
  },
  {
    "text": "performance uh and performance as system",
    "start": "71159",
    "end": "73200"
  },
  {
    "text": "grows and a framework for scaling your",
    "start": "73200",
    "end": "75680"
  },
  {
    "text": "stateful layer uh to avoid pitfalls as",
    "start": "75680",
    "end": "78799"
  },
  {
    "text": "you",
    "start": "78799",
    "end": "80320"
  },
  {
    "text": "scale so everyone's probably very",
    "start": "80320",
    "end": "82520"
  },
  {
    "text": "familiar with this architecture you know",
    "start": "82520",
    "end": "84960"
  },
  {
    "text": "you have uh you have an API Gateway you",
    "start": "84960",
    "end": "87360"
  },
  {
    "text": "have your microservices and Behind These",
    "start": "87360",
    "end": "89040"
  },
  {
    "text": "microservices po potentially you can",
    "start": "89040",
    "end": "90439"
  },
  {
    "text": "have it might have uh multiple databases",
    "start": "90439",
    "end": "92880"
  },
  {
    "text": "per microservice or uh a few shared",
    "start": "92880",
    "end": "95520"
  },
  {
    "text": "databases uh per",
    "start": "95520",
    "end": "97720"
  },
  {
    "text": "microservices now if you want to scale",
    "start": "97720",
    "end": "100759"
  },
  {
    "text": "out your stateless microservices it's",
    "start": "100759",
    "end": "103079"
  },
  {
    "text": "fairly straightforward um sure there's",
    "start": "103079",
    "end": "105560"
  },
  {
    "text": "some application developers be like no",
    "start": "105560",
    "end": "106880"
  },
  {
    "text": "it's not so straightforward but relative",
    "start": "106880",
    "end": "108600"
  },
  {
    "text": "to scaling the data side of things is",
    "start": "108600",
    "end": "110200"
  },
  {
    "text": "actually is relatively straightforward",
    "start": "110200",
    "end": "111640"
  },
  {
    "text": "you know you increase the the size of",
    "start": "111640",
    "end": "113079"
  },
  {
    "text": "your instances uh your mic vert",
    "start": "113079",
    "end": "115880"
  },
  {
    "text": "vertically scale your microservices you",
    "start": "115880",
    "end": "117320"
  },
  {
    "text": "can horizontally scale your",
    "start": "117320",
    "end": "118600"
  },
  {
    "text": "microservices and you don't have to",
    "start": "118600",
    "end": "120200"
  },
  {
    "text": "worry too much about uh data",
    "start": "120200",
    "end": "122719"
  },
  {
    "text": "Integrity but how do you scale your data",
    "start": "122719",
    "end": "126240"
  },
  {
    "text": "layer so there's various options for",
    "start": "126240",
    "end": "128679"
  },
  {
    "text": "this number one you can go with the old",
    "start": "128679",
    "end": "130399"
  },
  {
    "text": "school option which is sharding you know",
    "start": "130399",
    "end": "132560"
  },
  {
    "text": "dividing up uh uh the uh your database",
    "start": "132560",
    "end": "136760"
  },
  {
    "text": "into small pieces into different in",
    "start": "136760",
    "end": "138760"
  },
  {
    "text": "different instances and having them",
    "start": "138760",
    "end": "139720"
  },
  {
    "text": "shared um then you you could take the",
    "start": "139720",
    "end": "142319"
  },
  {
    "text": "nosql route which was the original uh",
    "start": "142319",
    "end": "145400"
  },
  {
    "text": "solution to the the sharding problem um",
    "start": "145400",
    "end": "149000"
  },
  {
    "text": "and that that potentially be a key Value",
    "start": "149000",
    "end": "150599"
  },
  {
    "text": "Store a column family store a graph",
    "start": "150599",
    "end": "152280"
  },
  {
    "text": "store document store or you can do",
    "start": "152280",
    "end": "154360"
  },
  {
    "text": "primary secondary replication um or even",
    "start": "154360",
    "end": "157760"
  },
  {
    "text": "uh going full regalia and doing a",
    "start": "157760",
    "end": "159800"
  },
  {
    "text": "complete read write uh separation to the",
    "start": "159800",
    "end": "162360"
  },
  {
    "text": "scale further than",
    "start": "162360",
    "end": "163680"
  },
  {
    "text": "that but this is what you don't want",
    "start": "163680",
    "end": "166800"
  },
  {
    "text": "your data layer to to look like behind",
    "start": "166800",
    "end": "168959"
  },
  {
    "text": "your microservice when you're combining",
    "start": "168959",
    "end": "170519"
  },
  {
    "text": "all of these different solutions you",
    "start": "170519",
    "end": "172120"
  },
  {
    "text": "have your microservice and it's going",
    "start": "172120",
    "end": "173480"
  },
  {
    "text": "into hundreds of different instances",
    "start": "173480",
    "end": "176319"
  },
  {
    "text": "over here is my SQL this could this",
    "start": "176319",
    "end": "177760"
  },
  {
    "text": "could be any database um where you have",
    "start": "177760",
    "end": "179519"
  },
  {
    "text": "different reads and writes going to",
    "start": "179519",
    "end": "180959"
  },
  {
    "text": "different databases and your writes",
    "start": "180959",
    "end": "182480"
  },
  {
    "text": "going and all these in different",
    "start": "182480",
    "end": "183640"
  },
  {
    "text": "instances are all managed independently",
    "start": "183640",
    "end": "185760"
  },
  {
    "text": "not as a single entity so this is what",
    "start": "185760",
    "end": "187560"
  },
  {
    "text": "what you really don't want uh to",
    "start": "187560",
    "end": "190760"
  },
  {
    "text": "see so categories of databases to",
    "start": "190760",
    "end": "194680"
  },
  {
    "text": "consider um as a backend for a",
    "start": "194680",
    "end": "196879"
  },
  {
    "text": "microservice you know uh there are three",
    "start": "196879",
    "end": "199480"
  },
  {
    "text": "major categories of databases first of",
    "start": "199480",
    "end": "203120"
  },
  {
    "text": "all you have your relational databases",
    "start": "203120",
    "end": "205599"
  },
  {
    "text": "uh which you know you probably be very",
    "start": "205599",
    "end": "207120"
  },
  {
    "text": "familiar with your postgress your MySQL",
    "start": "207120",
    "end": "209799"
  },
  {
    "text": "and the key traits of these databases is",
    "start": "209799",
    "end": "212159"
  },
  {
    "text": "they maintain acid uh they full acid",
    "start": "212159",
    "end": "215599"
  },
  {
    "text": "transactions uh they support full SQL",
    "start": "215599",
    "end": "218200"
  },
  {
    "text": "syntax um they support uh data Integrity",
    "start": "218200",
    "end": "221439"
  },
  {
    "text": "but as you scale the big problem is is",
    "start": "221439",
    "end": "224239"
  },
  {
    "text": "that you're going to run into that",
    "start": "224239",
    "end": "225280"
  },
  {
    "text": "operational complexity that I showed you",
    "start": "225280",
    "end": "227319"
  },
  {
    "text": "on that previous slide and then you have",
    "start": "227319",
    "end": "229360"
  },
  {
    "text": "your nosql databases which were created",
    "start": "229360",
    "end": "231920"
  },
  {
    "text": "to solve the problems uh Pally the",
    "start": "231920",
    "end": "234400"
  },
  {
    "text": "scalability problems of these relational",
    "start": "234400",
    "end": "237560"
  },
  {
    "text": "databases and with these databases like",
    "start": "237560",
    "end": "239959"
  },
  {
    "text": "hbas and and Cassandra and um you",
    "start": "239959",
    "end": "243640"
  },
  {
    "text": "get the higher scalability you get the",
    "start": "243640",
    "end": "246200"
  },
  {
    "text": "flexible schemas you get higher",
    "start": "246200",
    "end": "248640"
  },
  {
    "text": "reliability um but you get limited query",
    "start": "248640",
    "end": "251760"
  },
  {
    "text": "capability and you get limited uh schema",
    "start": "251760",
    "end": "254640"
  },
  {
    "text": "enforcement um and that's where this",
    "start": "254640",
    "end": "257799"
  },
  {
    "text": "third category of databases comes in",
    "start": "257799",
    "end": "259840"
  },
  {
    "text": "which would be distributed SQL and so",
    "start": "259840",
    "end": "261720"
  },
  {
    "text": "over here I have tidy B you know which",
    "start": "261720",
    "end": "263040"
  },
  {
    "text": "company I work for uh but there also in",
    "start": "263040",
    "end": "264800"
  },
  {
    "text": "this category you'd have your spanner",
    "start": "264800",
    "end": "266320"
  },
  {
    "text": "you have you have your cockroach and you",
    "start": "266320",
    "end": "267560"
  },
  {
    "text": "have your yugabyte and this new category",
    "start": "267560",
    "end": "270199"
  },
  {
    "text": "of database uh essentially combines a",
    "start": "270199",
    "end": "272919"
  },
  {
    "text": "lot of the traits between relational",
    "start": "272919",
    "end": "275120"
  },
  {
    "text": "databases and nosql databases um giving",
    "start": "275120",
    "end": "277960"
  },
  {
    "text": "you the scalability and reliability of",
    "start": "277960",
    "end": "280240"
  },
  {
    "text": "no SQL with a similar uh with a similar",
    "start": "280240",
    "end": "284479"
  },
  {
    "text": "functionality um of your relational",
    "start": "284479",
    "end": "286960"
  },
  {
    "text": "databases including your asset",
    "start": "286960",
    "end": "288360"
  },
  {
    "text": "transaction support your full SQL",
    "start": "288360",
    "end": "290360"
  },
  {
    "text": "support as well as guaranteed data",
    "start": "290360",
    "end": "294120"
  },
  {
    "text": "Integrity so here's an alternative way",
    "start": "294120",
    "end": "297840"
  },
  {
    "text": "of structuring your microservices where",
    "start": "297840",
    "end": "299759"
  },
  {
    "text": "you have a a giant system or you have a",
    "start": "299759",
    "end": "303440"
  },
  {
    "text": "uh your internal systems where all these",
    "start": "303440",
    "end": "305160"
  },
  {
    "text": "different microservices that are all",
    "start": "305160",
    "end": "306840"
  },
  {
    "text": "going to a single source of Truth um",
    "start": "306840",
    "end": "310520"
  },
  {
    "text": "that can provide um a source of of data",
    "start": "310520",
    "end": "313639"
  },
  {
    "text": "for for your individual",
    "start": "313639",
    "end": "316720"
  },
  {
    "text": "microservices now when it comes to",
    "start": "316720",
    "end": "319400"
  },
  {
    "text": "selecting a database scalability is King",
    "start": "319400",
    "end": "323680"
  },
  {
    "text": "scalability is the fle is is flexibility",
    "start": "323680",
    "end": "326400"
  },
  {
    "text": "it is the flexibility to expand your",
    "start": "326400",
    "end": "329199"
  },
  {
    "text": "application to make changes to your",
    "start": "329199",
    "end": "331080"
  },
  {
    "text": "application um if you're data if you're",
    "start": "331080",
    "end": "333160"
  },
  {
    "text": "at you know have 500 terab of data and",
    "start": "333160",
    "end": "336360"
  },
  {
    "text": "you can't make any changes to it that's",
    "start": "336360",
    "end": "338039"
  },
  {
    "text": "really not a tenable scalable Sol uh",
    "start": "338039",
    "end": "340919"
  },
  {
    "text": "solution same thing with performance you",
    "start": "340919",
    "end": "343240"
  },
  {
    "text": "know if you cannot maintain a consistent",
    "start": "343240",
    "end": "345080"
  },
  {
    "text": "performance if you cannot adapt to uh",
    "start": "345080",
    "end": "347280"
  },
  {
    "text": "varying conditions also get once again",
    "start": "347280",
    "end": "349800"
  },
  {
    "text": "not a scalable system if your system is",
    "start": "349800",
    "end": "352360"
  },
  {
    "text": "not reliable if it cannot um uh scale",
    "start": "352360",
    "end": "355319"
  },
  {
    "text": "out or respond to a failure and let's",
    "start": "355319",
    "end": "358880"
  },
  {
    "text": "say in in uh availability Zone that's",
    "start": "358880",
    "end": "361479"
  },
  {
    "text": "also going to be uh be Downstream of",
    "start": "361479",
    "end": "363960"
  },
  {
    "text": "scalability and finally um operability",
    "start": "363960",
    "end": "367400"
  },
  {
    "text": "if um all it takes is a thousand",
    "start": "367400",
    "end": "369759"
  },
  {
    "text": "Engineers to scale your system that's uh",
    "start": "369759",
    "end": "373160"
  },
  {
    "text": "a fundamentally non-scalable",
    "start": "373160",
    "end": "375919"
  },
  {
    "text": "system what you don't want to see and I",
    "start": "375919",
    "end": "379120"
  },
  {
    "text": "do see this at some companies is their",
    "start": "379120",
    "end": "380880"
  },
  {
    "text": "solution to scaling out their their Data",
    "start": "380880",
    "end": "382919"
  },
  {
    "text": "Systems is the amount of Engineers to",
    "start": "382919",
    "end": "385720"
  },
  {
    "text": "required to manage the database um go up",
    "start": "385720",
    "end": "388880"
  },
  {
    "text": "linearly you",
    "start": "388880",
    "end": "390720"
  },
  {
    "text": "scale and that's not something that I",
    "start": "390720",
    "end": "393520"
  },
  {
    "text": "think uh anyone",
    "start": "393520",
    "end": "395759"
  },
  {
    "text": "wants so the fundamental principle of",
    "start": "395759",
    "end": "399280"
  },
  {
    "text": "scalability is the ability to expand",
    "start": "399280",
    "end": "402080"
  },
  {
    "text": "from zero to many without any design",
    "start": "402080",
    "end": "405680"
  },
  {
    "text": "changes this is an um pretty close to",
    "start": "405680",
    "end": "408759"
  },
  {
    "text": "Ideal state but the north star of",
    "start": "408759",
    "end": "412199"
  },
  {
    "text": "scalability whether this is possible or",
    "start": "412199",
    "end": "414319"
  },
  {
    "text": "not this is what we want to be striving",
    "start": "414319",
    "end": "415960"
  },
  {
    "text": "for should be that any scaling event uh",
    "start": "415960",
    "end": "419120"
  },
  {
    "text": "would sacrifice only one thing cost so",
    "start": "419120",
    "end": "422199"
  },
  {
    "text": "if you go from one to a th000 or 1 to a",
    "start": "422199",
    "end": "425039"
  },
  {
    "text": "million the only thing that you're",
    "start": "425039",
    "end": "426240"
  },
  {
    "text": "paying for is is cost without actually",
    "start": "426240",
    "end": "429120"
  },
  {
    "text": "having to maintain uh or make any",
    "start": "429120",
    "end": "431400"
  },
  {
    "text": "application changes now is this",
    "start": "431400",
    "end": "433599"
  },
  {
    "text": "realistic right now maybe we'll see uh",
    "start": "433599",
    "end": "437160"
  },
  {
    "text": "but this is what we should actually be",
    "start": "437160",
    "end": "438400"
  },
  {
    "text": "shooting for when we are uh constructing",
    "start": "438400",
    "end": "440440"
  },
  {
    "text": "our our",
    "start": "440440",
    "end": "442000"
  },
  {
    "text": "systems so why is this so difficult",
    "start": "442000",
    "end": "445360"
  },
  {
    "text": "right as you add uh more users you add",
    "start": "445360",
    "end": "450160"
  },
  {
    "text": "more tenants uh you build new features",
    "start": "450160",
    "end": "454280"
  },
  {
    "text": "um there's more and you have you add",
    "start": "454280",
    "end": "456080"
  },
  {
    "text": "another data pipeline to your",
    "start": "456080",
    "end": "458160"
  },
  {
    "text": "application you collect more data uh as",
    "start": "458160",
    "end": "460639"
  },
  {
    "text": "you expand and as you grow and you scale",
    "start": "460639",
    "end": "463120"
  },
  {
    "text": "up um that causes a",
    "start": "463120",
    "end": "467000"
  },
  {
    "text": "cascading uh uh uh amount of challenges",
    "start": "467000",
    "end": "470560"
  },
  {
    "text": "that that need to be dealt with number",
    "start": "470560",
    "end": "472520"
  },
  {
    "text": "one you need more connections you need",
    "start": "472520",
    "end": "475039"
  },
  {
    "text": "more more connections you need more",
    "start": "475039",
    "end": "477039"
  },
  {
    "text": "requests uh which result in more metad",
    "start": "477039",
    "end": "479560"
  },
  {
    "text": "data to manage um there'll be more data",
    "start": "479560",
    "end": "482720"
  },
  {
    "text": "stored uh which means more data to scan",
    "start": "482720",
    "end": "485120"
  },
  {
    "text": "more data to process more data to",
    "start": "485120",
    "end": "487039"
  },
  {
    "text": "reorganize more data to move it it means",
    "start": "487039",
    "end": "489599"
  },
  {
    "text": "there's more challenges on your CDC and",
    "start": "489599",
    "end": "491360"
  },
  {
    "text": "your streaming pipelines um everything",
    "start": "491360",
    "end": "494080"
  },
  {
    "text": "is down the complications are are go",
    "start": "494080",
    "end": "497199"
  },
  {
    "text": "heavily Downstream um as you scale",
    "start": "497199",
    "end": "499960"
  },
  {
    "text": "up so without a truly scaling database",
    "start": "499960",
    "end": "505400"
  },
  {
    "text": "um your durations are going to be going",
    "start": "505400",
    "end": "507400"
  },
  {
    "text": "up uh or might be going up EXP itially",
    "start": "507400",
    "end": "510560"
  },
  {
    "text": "um as you as you add more more node and",
    "start": "510560",
    "end": "513159"
  },
  {
    "text": "shards what you want to be looking for",
    "start": "513159",
    "end": "515560"
  },
  {
    "text": "is that the duration of your operations",
    "start": "515560",
    "end": "518680"
  },
  {
    "text": "should be as close to Flat as possible",
    "start": "518680",
    "end": "523440"
  },
  {
    "text": "while and excuse me um and then when you",
    "start": "523440",
    "end": "527800"
  },
  {
    "text": "have when you're dealing with scale you",
    "start": "527800",
    "end": "529519"
  },
  {
    "text": "want to make sure as you're expanding",
    "start": "529519",
    "end": "531360"
  },
  {
    "text": "out nodes and shards that you're",
    "start": "531360",
    "end": "533720"
  },
  {
    "text": "actually that that system can actually",
    "start": "533720",
    "end": "535519"
  },
  {
    "text": "just go up linearly with the uh",
    "start": "535519",
    "end": "537959"
  },
  {
    "text": "increases in throughput as well as",
    "start": "537959",
    "end": "539959"
  },
  {
    "text": "increases in data size without having to",
    "start": "539959",
    "end": "543440"
  },
  {
    "text": "continuously add more and more and more",
    "start": "543440",
    "end": "545480"
  },
  {
    "text": "shards uh to handle less and less",
    "start": "545480",
    "end": "550079"
  },
  {
    "text": "scale so the nor this is ation nor star",
    "start": "550079",
    "end": "553839"
  },
  {
    "text": "of or scalability uh so these are the",
    "start": "553839",
    "end": "557120"
  },
  {
    "text": "kind of things that we want to be",
    "start": "557120",
    "end": "558720"
  },
  {
    "text": "looking for when we're analyzing our",
    "start": "558720",
    "end": "561279"
  },
  {
    "text": "databases for uh uh large scale",
    "start": "561279",
    "end": "564880"
  },
  {
    "text": "applications number one we want our",
    "start": "564880",
    "end": "566240"
  },
  {
    "text": "query latency our ad index duration we",
    "start": "566240",
    "end": "568040"
  },
  {
    "text": "disaster recovery time Shard fail over",
    "start": "568040",
    "end": "570040"
  },
  {
    "text": "time we don't want these to be dependent",
    "start": "570040",
    "end": "572240"
  },
  {
    "text": "upon our degree of scale the amount of",
    "start": "572240",
    "end": "574760"
  },
  {
    "text": "nodes the amount of shards in our system",
    "start": "574760",
    "end": "576839"
  },
  {
    "text": "and we want our throughput and our",
    "start": "576839",
    "end": "578440"
  },
  {
    "text": "tendency to be the scale as linear as",
    "start": "578440",
    "end": "583440"
  },
  {
    "text": "possible so some of the key dimensions",
    "start": "583440",
    "end": "585800"
  },
  {
    "text": "of scalability that we need to be",
    "start": "585800",
    "end": "587160"
  },
  {
    "text": "looking at when we're making these",
    "start": "587160",
    "end": "588720"
  },
  {
    "text": "decisions is number one we want to be",
    "start": "588720",
    "end": "590440"
  },
  {
    "text": "looking at throughput data but data",
    "start": "590440",
    "end": "591959"
  },
  {
    "text": "volume in and out see if we can if uh",
    "start": "591959",
    "end": "594680"
  },
  {
    "text": "your database system and your data",
    "start": "594680",
    "end": "596399"
  },
  {
    "text": "layers can handle this write latency",
    "start": "596399",
    "end": "598680"
  },
  {
    "text": "read latency",
    "start": "598680",
    "end": "600160"
  },
  {
    "text": "uh ddl dur duration which is uh I think",
    "start": "600160",
    "end": "604399"
  },
  {
    "text": "often overlooked but is is extremely",
    "start": "604399",
    "end": "606760"
  },
  {
    "text": "important at scale because there's a lot",
    "start": "606760",
    "end": "609079"
  },
  {
    "text": "of companies that run into these",
    "start": "609079",
    "end": "610519"
  },
  {
    "text": "situations where um yeah their",
    "start": "610519",
    "end": "612839"
  },
  {
    "text": "throughputs fine their read latency is",
    "start": "612839",
    "end": "615519"
  },
  {
    "text": "uh is fine the right latency is fine but",
    "start": "615519",
    "end": "617640"
  },
  {
    "text": "when they want to make a change to their",
    "start": "617640",
    "end": "618720"
  },
  {
    "text": "application or a change to their schema",
    "start": "618720",
    "end": "620720"
  },
  {
    "text": "that is all of a sudden a two-month",
    "start": "620720",
    "end": "624079"
  },
  {
    "text": "operation um backup and restore speed uh",
    "start": "624079",
    "end": "627120"
  },
  {
    "text": "import speed change feed throughput",
    "start": "627120",
    "end": "631320"
  },
  {
    "text": "so this is a graph comparing uh",
    "start": "631560",
    "end": "634720"
  },
  {
    "text": "scalability I would have liked to put a",
    "start": "634720",
    "end": "636440"
  },
  {
    "text": "lot more databases onto this but um",
    "start": "636440",
    "end": "638839"
  },
  {
    "text": "unfortunately having a dozen databases",
    "start": "638839",
    "end": "640360"
  },
  {
    "text": "on a little graph like this is not very",
    "start": "640360",
    "end": "641680"
  },
  {
    "text": "readable so I chose three three popular",
    "start": "641680",
    "end": "643560"
  },
  {
    "text": "ones uh here we have tidy B cockroach",
    "start": "643560",
    "end": "645920"
  },
  {
    "text": "and Aurora so this this graph describes",
    "start": "645920",
    "end": "650360"
  },
  {
    "text": "how close each one of these databases is",
    "start": "650360",
    "end": "653160"
  },
  {
    "text": "to the north star of scalability that we",
    "start": "653160",
    "end": "655519"
  },
  {
    "text": "just talked about so we have Aurora here",
    "start": "655519",
    "end": "657600"
  },
  {
    "text": "which probably very familiar with and",
    "start": "657600",
    "end": "659399"
  },
  {
    "text": "where Aurora's um uh strengths are going",
    "start": "659399",
    "end": "661680"
  },
  {
    "text": "to be are going to be focused on you",
    "start": "661680",
    "end": "663639"
  },
  {
    "text": "know the number of number of objects",
    "start": "663639",
    "end": "665519"
  },
  {
    "text": "that can handle its tency it's it's data",
    "start": "665519",
    "end": "667600"
  },
  {
    "text": "load loading uh the tooling around it uh",
    "start": "667600",
    "end": "671000"
  },
  {
    "text": "as well as the stability of latency",
    "start": "671000",
    "end": "673240"
  },
  {
    "text": "which comes from it inherently being a",
    "start": "673240",
    "end": "675800"
  },
  {
    "text": "single writer um excuse me a single",
    "start": "675800",
    "end": "679480"
  },
  {
    "text": "writer uh data store and then you have",
    "start": "679480",
    "end": "681839"
  },
  {
    "text": "your cockroach uh DB which is of course",
    "start": "681839",
    "end": "684360"
  },
  {
    "text": "going to be very strong in the global",
    "start": "684360",
    "end": "686600"
  },
  {
    "text": "dist",
    "start": "686600",
    "end": "687560"
  },
  {
    "text": "distribution uh side of things as well",
    "start": "687560",
    "end": "690000"
  },
  {
    "text": "as The Shard fail over time it's be very",
    "start": "690000",
    "end": "692720"
  },
  {
    "text": "very stable um as well as data loading",
    "start": "692720",
    "end": "695720"
  },
  {
    "text": "and it's going to be generally pretty",
    "start": "695720",
    "end": "697040"
  },
  {
    "text": "good at quite a few things and then we",
    "start": "697040",
    "end": "699120"
  },
  {
    "text": "have tidy B over here which is really",
    "start": "699120",
    "end": "701639"
  },
  {
    "text": "going to shine in the uh request and",
    "start": "701639",
    "end": "705680"
  },
  {
    "text": "data throughput as well as a number of",
    "start": "705680",
    "end": "707360"
  },
  {
    "text": "different workloads it can handle and as",
    "start": "707360",
    "end": "709639"
  },
  {
    "text": "well as generally be very strong kind of",
    "start": "709639",
    "end": "712079"
  },
  {
    "text": "around the edge it's particularly in its",
    "start": "712079",
    "end": "714680"
  },
  {
    "text": "ability to perform ddl uh at scale",
    "start": "714680",
    "end": "717920"
  },
  {
    "text": "linearly",
    "start": "717920",
    "end": "720079"
  },
  {
    "text": "okay so let's talk a little bit about",
    "start": "720079",
    "end": "721720"
  },
  {
    "text": "how tidy B",
    "start": "721720",
    "end": "723399"
  },
  {
    "text": "scales so tidy B's architecture is built",
    "start": "723399",
    "end": "726959"
  },
  {
    "text": "from the ground up to scale number one",
    "start": "726959",
    "end": "729480"
  },
  {
    "text": "it has a distributed storage layer which",
    "start": "729480",
    "end": "731839"
  },
  {
    "text": "we which we call um our TA V nodes and",
    "start": "731839",
    "end": "734959"
  },
  {
    "text": "these tyv nodes perform Auto uh and",
    "start": "734959",
    "end": "738000"
  },
  {
    "text": "transparent uh data sharting and what's",
    "start": "738000",
    "end": "740560"
  },
  {
    "text": "great about it is they can all be scaled",
    "start": "740560",
    "end": "742160"
  },
  {
    "text": "out uh scaled out linearly or",
    "start": "742160",
    "end": "745399"
  },
  {
    "text": "horizontally to achieve a linear growth",
    "start": "745399",
    "end": "748079"
  },
  {
    "text": "in in in scale",
    "start": "748079",
    "end": "749839"
  },
  {
    "text": "um we also have a a stateless uh SQL",
    "start": "749839",
    "end": "753199"
  },
  {
    "text": "layer which we call our tidy Bean nodes",
    "start": "753199",
    "end": "755440"
  },
  {
    "text": "and this layer is responsible for uh SQL",
    "start": "755440",
    "end": "758839"
  },
  {
    "text": "processing as well as Distributing",
    "start": "758839",
    "end": "761360"
  },
  {
    "text": "Computing and what's great about the",
    "start": "761360",
    "end": "763600"
  },
  {
    "text": "separation here of your storage and",
    "start": "763600",
    "end": "766040"
  },
  {
    "text": "compute is that you can scale out uh",
    "start": "766040",
    "end": "768880"
  },
  {
    "text": "each linearly as you need them or",
    "start": "768880",
    "end": "770959"
  },
  {
    "text": "horizontally as you need them and we",
    "start": "770959",
    "end": "772639"
  },
  {
    "text": "have our cluster management uh PD noes",
    "start": "772639",
    "end": "774639"
  },
  {
    "text": "which uh handle data placement data",
    "start": "774639",
    "end": "777079"
  },
  {
    "text": "safety and workload balance uh they also",
    "start": "777079",
    "end": "779199"
  },
  {
    "text": "manage the the metadata of the",
    "start": "779199",
    "end": "782279"
  },
  {
    "text": "cluster and this entire system is built",
    "start": "782279",
    "end": "785120"
  },
  {
    "text": "for scalability and high availability",
    "start": "785120",
    "end": "788000"
  },
  {
    "text": "with every single node having a failover",
    "start": "788000",
    "end": "790839"
  },
  {
    "text": "node ready in case of a outage and it's",
    "start": "790839",
    "end": "794920"
  },
  {
    "text": "also Auto healing which makes uh",
    "start": "794920",
    "end": "797160"
  },
  {
    "text": "operating the system at scale uh very",
    "start": "797160",
    "end": "800279"
  },
  {
    "text": "very",
    "start": "800279",
    "end": "801920"
  },
  {
    "text": "convenient so how is the data actually",
    "start": "801920",
    "end": "805320"
  },
  {
    "text": "mapped around and scaled out so the SQL",
    "start": "805320",
    "end": "807959"
  },
  {
    "text": "data is mapped to uh key value data and",
    "start": "807959",
    "end": "811800"
  },
  {
    "text": "this key value data is split into small",
    "start": "811800",
    "end": "814360"
  },
  {
    "text": "chunks which they 96 megabytes by",
    "start": "814360",
    "end": "817320"
  },
  {
    "text": "default and what we can do with these",
    "start": "817320",
    "end": "819160"
  },
  {
    "text": "individual chunks is we can place them",
    "start": "819160",
    "end": "821519"
  },
  {
    "text": "across different Ty KB nodes and right",
    "start": "821519",
    "end": "823959"
  },
  {
    "text": "now we have four but this could be",
    "start": "823959",
    "end": "825480"
  },
  {
    "text": "hundreds of different TYB nodes and you",
    "start": "825480",
    "end": "827480"
  },
  {
    "text": "can take these little pieces of data and",
    "start": "827480",
    "end": "829120"
  },
  {
    "text": "spread them out evenly as to not uh",
    "start": "829120",
    "end": "832480"
  },
  {
    "text": "overtax any individual uh instance and",
    "start": "832480",
    "end": "836920"
  },
  {
    "text": "the way asset is maintained with these",
    "start": "836920",
    "end": "839800"
  },
  {
    "text": "replicas is we uh we use the rack",
    "start": "839800",
    "end": "842560"
  },
  {
    "text": "consensus protocol to uh essentially",
    "start": "842560",
    "end": "845920"
  },
  {
    "text": "have a voting system for the different",
    "start": "845920",
    "end": "848320"
  },
  {
    "text": "replicas to vote on what uh um uh",
    "start": "848320",
    "end": "852680"
  },
  {
    "text": "version of the data is",
    "start": "852680",
    "end": "855240"
  },
  {
    "text": "correct and distributed computing and",
    "start": "855240",
    "end": "857639"
  },
  {
    "text": "query execution so in order to be able",
    "start": "857639",
    "end": "860079"
  },
  {
    "text": "to perform queries uh at scale across",
    "start": "860079",
    "end": "863800"
  },
  {
    "text": "large systems we need to make sure we're",
    "start": "863800",
    "end": "865800"
  },
  {
    "text": "utilizing all of the the power of our",
    "start": "865800",
    "end": "868240"
  },
  {
    "text": "systems so we talked about the",
    "start": "868240",
    "end": "869920"
  },
  {
    "text": "separation of compute and storage",
    "start": "869920",
    "end": "873959"
  },
  {
    "text": "and uh distributed computing and query",
    "start": "873959",
    "end": "876480"
  },
  {
    "text": "execution allows um the tidb or the tidb",
    "start": "876480",
    "end": "881279"
  },
  {
    "text": "cluster to divide up processes among the",
    "start": "881279",
    "end": "884720"
  },
  {
    "text": "storage nodes so for example over here",
    "start": "884720",
    "end": "886959"
  },
  {
    "text": "we have a count uh um we have we have a",
    "start": "886959",
    "end": "890720"
  },
  {
    "text": "a count here and we can divide up the",
    "start": "890720",
    "end": "893720"
  },
  {
    "text": "count process among the individual taib",
    "start": "893720",
    "end": "896240"
  },
  {
    "text": "nodes who will execute a portion of of",
    "start": "896240",
    "end": "899399"
  },
  {
    "text": "the uh query plan and then bring it uh",
    "start": "899399",
    "end": "902360"
  },
  {
    "text": "back towards the Tidy B node for a final",
    "start": "902360",
    "end": "905759"
  },
  {
    "text": "uh uh",
    "start": "905759",
    "end": "908199"
  },
  {
    "text": "aggregation and scaling out with tidb is",
    "start": "908320",
    "end": "910920"
  },
  {
    "text": "also very easy because if you need more",
    "start": "910920",
    "end": "913560"
  },
  {
    "text": "throughput you need more storage all you",
    "start": "913560",
    "end": "915360"
  },
  {
    "text": "have to do is add a node rather than",
    "start": "915360",
    "end": "917720"
  },
  {
    "text": "engage in any complex uh sharding",
    "start": "917720",
    "end": "921959"
  },
  {
    "text": "logic okay and this is a um example of",
    "start": "921959",
    "end": "926279"
  },
  {
    "text": "actually like um how tidb actually",
    "start": "926279",
    "end": "928560"
  },
  {
    "text": "performs performs when you're scal when",
    "start": "928560",
    "end": "930680"
  },
  {
    "text": "you're scaling so this is a a test that",
    "start": "930680",
    "end": "932360"
  },
  {
    "text": "LinkedIn performed where they did a uh 2",
    "start": "932360",
    "end": "935399"
  },
  {
    "text": "million read operations on 30 plus uh",
    "start": "935399",
    "end": "938519"
  },
  {
    "text": "tikb noes and as you can see to with tid",
    "start": "938519",
    "end": "942519"
  },
  {
    "text": "the with tid's performance here it's",
    "start": "942519",
    "end": "944720"
  },
  {
    "text": "pretty close to that linear scalability",
    "start": "944720",
    "end": "948040"
  },
  {
    "text": "that we're looking",
    "start": "948040",
    "end": "950959"
  },
  {
    "text": "for and this is also another test from",
    "start": "951160",
    "end": "954480"
  },
  {
    "text": "another one of our customers is flip",
    "start": "954480",
    "end": "956399"
  },
  {
    "text": "cart and they were able to uh",
    "start": "956399",
    "end": "960560"
  },
  {
    "text": "to get up to a million QPS on tidb with",
    "start": "960560",
    "end": "965399"
  },
  {
    "text": "4.82 milliseconds P95 uh for read",
    "start": "965399",
    "end": "969240"
  },
  {
    "text": "operations and 123,000 WR operations per",
    "start": "969240",
    "end": "972120"
  },
  {
    "text": "second at 6.1 milliseconds uh P95 and",
    "start": "972120",
    "end": "975800"
  },
  {
    "text": "another added benefit actually is the",
    "start": "975800",
    "end": "977519"
  },
  {
    "text": "the way we store the data uh because of",
    "start": "977519",
    "end": "980920"
  },
  {
    "text": "uh we we use B trees to store the data",
    "start": "980920",
    "end": "982720"
  },
  {
    "text": "which actually results in typically",
    "start": "982720",
    "end": "985560"
  },
  {
    "text": "around an 80% decrease in your data",
    "start": "985560",
    "end": "988079"
  },
  {
    "text": "footprint as compared to my SQL",
    "start": "988079",
    "end": "991199"
  },
  {
    "text": "requiring which means you required uh",
    "start": "991199",
    "end": "993319"
  },
  {
    "text": "you require much much less um uh storage",
    "start": "993319",
    "end": "997319"
  },
  {
    "text": "as you scale",
    "start": "997319",
    "end": "998480"
  },
  {
    "text": "up okay and with that thank you any",
    "start": "998480",
    "end": "1004040"
  },
  {
    "text": "questions cool thank",
    "start": "1008079",
    "end": "1013120"
  },
  {
    "text": "[Applause]",
    "start": "1013190",
    "end": "1015449"
  }
]