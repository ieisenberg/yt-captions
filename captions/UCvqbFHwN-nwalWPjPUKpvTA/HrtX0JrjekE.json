[
  {
    "text": "welcome everyone hope you're enjoying cubec so far so yeah welcome to the talk on zero downtime migration um of State",
    "start": "160",
    "end": "6640"
  },
  {
    "text": "full VMS in kubernetes it's quite a lot of for so let's get into it yeah so first of all a little bit of me I'm phas",
    "start": "6640",
    "end": "12559"
  },
  {
    "text": "I work at LPS currently on like virtualization stuff so um I regularly post about on social media if you guys",
    "start": "12559",
    "end": "17560"
  },
  {
    "text": "are interested but yeah let's get right into right into it so first of all we got to think about what VMS actually are",
    "start": "17560",
    "end": "23800"
  },
  {
    "text": "or how they are being seen in in the container age you might say CU a lot of people's first like uh thought when here",
    "start": "23800",
    "end": "30240"
  },
  {
    "text": "VMS isn't actually necessarily something positive most people would probably like especially if they're used to containers",
    "start": "30240",
    "end": "35440"
  },
  {
    "text": "and kubernetes probably used to like having pretty high overheads them being like fairly like resource intensive in",
    "start": "35440",
    "end": "40840"
  },
  {
    "text": "comparison also them being like fairly slow to start usually VMS especially cold starts take quite well because it's",
    "start": "40840",
    "end": "46760"
  },
  {
    "text": "need to Bo a whole kernel so um and there's also like a lot of projects that provide these kinds of things for",
    "start": "46760",
    "end": "52680"
  },
  {
    "text": "example KVM is basically what everything is built on at this point right it's the cural API to do virtualization but there are also layers of interaction on top of",
    "start": "52680",
    "end": "59120"
  },
  {
    "text": "it for example we've got Li which is fairly common and if you've worked for example with the virtual machine manager",
    "start": "59120",
    "end": "64360"
  },
  {
    "text": "on Linux desktop you probably used to that Tech already and of course there's other other Solutions such as for",
    "start": "64360",
    "end": "69640"
  },
  {
    "text": "example Kimu that is able to um also serve for most virtualization needs but all of",
    "start": "69640",
    "end": "76240"
  },
  {
    "text": "these um are kind of like an old solution they've been around for quite a while and um while some of them are",
    "start": "76240",
    "end": "81600"
  },
  {
    "text": "really useful like for example kbm some of them are slowly starting to show their age and if containers are so great",
    "start": "81600",
    "end": "88200"
  },
  {
    "text": "and VMS are still around then the question of course is why are VMS still around why are people still building",
    "start": "88200",
    "end": "93560"
  },
  {
    "text": "things on Virtual machines cu the chances even if you're running a container if that container is going to be running in a public Cloud probably",
    "start": "93560",
    "end": "99640"
  },
  {
    "text": "doesn't run directly metal runs on a virtual machine for one reason or another so you may be wondering why is",
    "start": "99640",
    "end": "104759"
  },
  {
    "text": "that why are people still using virtual machines and in our minds the reason for that is is that well for cattle type of",
    "start": "104759",
    "end": "111439"
  },
  {
    "text": "workloads like something that's stateless mostly containers a pots and the communties context are really really",
    "start": "111439",
    "end": "117640"
  },
  {
    "text": "useful but a lot of systems are are pets and a lot of systems cannot really not be pets like Game servers for example um",
    "start": "117640",
    "end": "124520"
  },
  {
    "text": "and for those it's just not the right L right layer of exraction so what we we're asking ourselves how would a",
    "start": "124520",
    "end": "130479"
  },
  {
    "text": "container of stateful applications look like what would the what would be the um equivalent of a container for virtual",
    "start": "130479",
    "end": "136160"
  },
  {
    "text": "machine essentially and of course such a thing would have to be pretty fast right you want to be able to have very small",
    "start": "136160",
    "end": "141519"
  },
  {
    "text": "image sizes kind of like how well Docker images are necessarily small all of the time but you can cach layers and so on",
    "start": "141519",
    "end": "146920"
  },
  {
    "text": "you want to have those features you want to have a really low overhead preferably we don't want those to be um comparable",
    "start": "146920",
    "end": "152720"
  },
  {
    "text": "to a virtual machine you want them to be more like containers where it's like milliseconds or W modals or it's",
    "start": "152720",
    "end": "158000"
  },
  {
    "text": "microseconds to start them and of course we also want them yeah as we just said a faster start they really need to be",
    "start": "158000",
    "end": "163440"
  },
  {
    "text": "performant they really need to be able to like resume really quickly also networking support is definitely an",
    "start": "163440",
    "end": "168480"
  },
  {
    "text": "issue if anyone has worked with for example like Kemo trying to just get like one port open into the virtual",
    "start": "168480",
    "end": "174360"
  },
  {
    "text": "machine from the outside especially if you're in kubernetes or something it's going to be a hassle whereas if talk or kubernetes in this case Cas you've got",
    "start": "174360",
    "end": "180519"
  },
  {
    "text": "ports you've got all of these abstraction layers that are super useful but they aren't really in Virtual machines today so good networking",
    "start": "180519",
    "end": "187200"
  },
  {
    "text": "support would be important and they should also be easy to build and distribute I want to have a Docker image",
    "start": "187200",
    "end": "192280"
  },
  {
    "text": "of virtual machines I want to have a good developer primitive that you can use for it and also of course you want",
    "start": "192280",
    "end": "197480"
  },
  {
    "text": "them to be easy to scale the biggest benefit of a status application is if you need more capacity you just spin a parall instances for State full",
    "start": "197480",
    "end": "203959"
  },
  {
    "text": "application that approach just straight up doesn't work because well if you have state you can't just spin a parel things because they going to be out of sync so",
    "start": "203959",
    "end": "210000"
  },
  {
    "text": "this is something that a container of stateful applications in our minds must be able to do so now we probably",
    "start": "210000",
    "end": "215599"
  },
  {
    "text": "wondering what if this thing existed what could we do so we have a few hypothetical for example we could do",
    "start": "215599",
    "end": "220879"
  },
  {
    "text": "some really cool stuff around deployment on debugging deploying an application in a stateful context here would simply",
    "start": "220879",
    "end": "226439"
  },
  {
    "text": "mean well you just move the running application to a server that's your entire deployment you want to debug it locally all right you just move the",
    "start": "226439",
    "end": "232040"
  },
  {
    "text": "server back to your local system that's how that thing should work that's how you'll be able to do it with containers what about uh what if you want to move",
    "start": "232040",
    "end": "237840"
  },
  {
    "text": "between Cloud providers well this such a hypothetical construct you'd be able to move from on Prem to like gcp and then",
    "start": "237840",
    "end": "244519"
  },
  {
    "text": "it turns out okay next day GC to AWS sorry and it turns out next day gcp is cheaper so you just move the container",
    "start": "244519",
    "end": "250680"
  },
  {
    "text": "over to gcp with no downtime that would be great the asure offers a simpler rate that's also cool and eventually you find",
    "start": "250680",
    "end": "256160"
  },
  {
    "text": "out okay Energy prices have dropped you're able to resume it on your local system there you go you've just moved it back that would be a really really cool",
    "start": "256160",
    "end": "261799"
  },
  {
    "text": "feature to have and similarly so since we're talking about State fold applications here if you were able to do stuff like for example and if I know",
    "start": "261799",
    "end": "268680"
  },
  {
    "text": "everyone here is talking about AI so I thought I might as well but for example if you've got a very expensive a very computationally expensive workload like",
    "start": "268680",
    "end": "275199"
  },
  {
    "text": "let's say for example an llm or really any bch process running and you want to scale that up to a larger system well",
    "start": "275199",
    "end": "280479"
  },
  {
    "text": "with a stateful container system you can just move that to a different thing without downtime and this really works for any kind of application as long as",
    "start": "280479",
    "end": "287199"
  },
  {
    "text": "there has Network transparency involved for example I have a phone here that runs Mainland Linux on it and this also",
    "start": "287199",
    "end": "292639"
  },
  {
    "text": "does it so you would be able and both of them use the same display protocol and so on um you would be able to just move",
    "start": "292639",
    "end": "298560"
  },
  {
    "text": "a a application from your phone to your laptop maybe you guys know from Avatar there's this scene where they like move",
    "start": "298560",
    "end": "303720"
  },
  {
    "text": "an application from your phone to like a bigger computer you can just like take the Bally like take the app with you on",
    "start": "303720",
    "end": "309400"
  },
  {
    "text": "your phone and resume it anywhere well that would be imposs if we had such an abstraction layer right and this would",
    "start": "309400",
    "end": "314560"
  },
  {
    "text": "work across like across different devices within some constraints of course but for example if you had Linux",
    "start": "314560",
    "end": "320080"
  },
  {
    "text": "all of them that would work and of course probably the most useful use case here in a cloud context would be to move",
    "start": "320080",
    "end": "325680"
  },
  {
    "text": "Services closer closer to users so like while you have a CDN for stess applications or Edge functions or",
    "start": "325680",
    "end": "330919"
  },
  {
    "text": "something that doesn't work for say full applications you can't just move them closer to your user and if you can would be extremely expensive but if such a",
    "start": "330919",
    "end": "337319"
  },
  {
    "text": "system you would be able to do it so you're probably wondering like this is all like this is like science fiction",
    "start": "337319",
    "end": "343520"
  },
  {
    "text": "movie stuff right like this would be kind of cool if it existed but it doesn't and it's impossible right so the",
    "start": "343520",
    "end": "350520"
  },
  {
    "text": "thing is um we are actually going to have a demo later I want you guys to download Minecraft if you can and this",
    "start": "350520",
    "end": "356199"
  },
  {
    "text": "is going to sound super random but if you have a computer available um if if you don't mind this download from minecraft.net version 1.12.2 there's",
    "start": "356199",
    "end": "362520"
  },
  {
    "text": "going to be a demo with it later so um yeah exactly so but before we do that",
    "start": "362520",
    "end": "367919"
  },
  {
    "text": "let's get started and ask ourself the question why this doesn't exist yet like it seems like one of those things like it would be super useful why doesn't it",
    "start": "367919",
    "end": "373680"
  },
  {
    "text": "exist already and from our understanding of it at least lot of it has got to do with like data type risor system these",
    "start": "373680",
    "end": "379400"
  },
  {
    "text": "things have been around for decades and as such they have accumulated Craft um and it's kind of hard to use life",
    "start": "379400",
    "end": "384880"
  },
  {
    "text": "migration in particular the thing that allows you to move from A to B is extremely complicated it's a whole you need to set up and a process you need to",
    "start": "384880",
    "end": "391160"
  },
  {
    "text": "optimize for or you're going to risk um it's also very risky there's a risk involved in moving it that if it breaks you might not be able to resume it again",
    "start": "391160",
    "end": "398800"
  },
  {
    "text": "also the fast startup times Well VMS you need to actually stream and you need to have the entire virtual machine locally",
    "start": "398800",
    "end": "404160"
  },
  {
    "text": "available before you're able to um be able to resume it so like you can't stream in like res mod for example right",
    "start": "404160",
    "end": "410120"
  },
  {
    "text": "um you're able to just like use intiate streaming that doesn't work for a virtual machine today so this is definitely a bigger problem also if you",
    "start": "410120",
    "end": "416360"
  },
  {
    "text": "move from A to B like that example where I uh I showed like moving from for example like Frankfurt to New York well",
    "start": "416360",
    "end": "422520"
  },
  {
    "text": "you could do that yeah but your connections would break you'd have a different IP address and even if you say like any cast You' still have that issue",
    "start": "422520",
    "end": "428440"
  },
  {
    "text": "You' still have connections breaking during the migration so it's not Sero downtime also packaging is a bit of a",
    "start": "428440",
    "end": "434000"
  },
  {
    "text": "it's it's just a mess like trying there's no Docker file of virtual machines at the moment at least not in",
    "start": "434000",
    "end": "439240"
  },
  {
    "text": "any mod reincarnation and it's also like it generally speaking doesn't integrate that well with modern orchestrators we",
    "start": "439240",
    "end": "444919"
  },
  {
    "text": "coupon here right so um if you want to have this kind of stuff instead of kubernetes um there are few Solutions like kuber for example um but most of",
    "start": "444919",
    "end": "452160"
  },
  {
    "text": "them they take existing technology and Port it over to kubernetes it's not like something that was developed uh well",
    "start": "452160",
    "end": "458360"
  },
  {
    "text": "before after actually existed and kind of fixed the orchestration issues for us so you might be wondering with one of",
    "start": "458360",
    "end": "464000"
  },
  {
    "text": "these things why did how did we actually still do it um so before I start with that I'm going to give you a very short",
    "start": "464000",
    "end": "469759"
  },
  {
    "text": "overview of existing life migration Tech so this is the thing that actually or techniques in this case that actually make it possible there's two separate",
    "start": "469759",
    "end": "476680"
  },
  {
    "text": "ones the biggest or the the first one is going to be pre-copy migration so in this case what you do is you um while",
    "start": "476680",
    "end": "481919"
  },
  {
    "text": "the VM is running on the source node the one you're migrating from um you just you do it in rounds you try to like",
    "start": "481919",
    "end": "487280"
  },
  {
    "text": "amortise the cost of moving it by by continuously checking for changes and just copying it over to the remote house",
    "start": "487280",
    "end": "493199"
  },
  {
    "text": "until the difference is small enough then you resume it that's one way of doing it the other way is um post copy",
    "start": "493199",
    "end": "498919"
  },
  {
    "text": "migration and what you do here is you just stop the VM on the source out that's going to Le to downtime obviously",
    "start": "498919",
    "end": "504280"
  },
  {
    "text": "same as in the case of uh of uh pre-copy migration and you're then going to to",
    "start": "504280",
    "end": "509319"
  },
  {
    "text": "page and the changes over the network from the remote and as you can probably imagine that's an extremely expensive operation maybe less so on your own data",
    "start": "509319",
    "end": "515760"
  },
  {
    "text": "center but doing this P continents is going to lead to a lot of problems so um but if you take look at",
    "start": "515760",
    "end": "522200"
  },
  {
    "text": "these two things and we kind of combine them we get like something that more or less resembles a remote memory solution",
    "start": "522200",
    "end": "527760"
  },
  {
    "text": "and that's something we have ideas on how you could solve this kind of issues um but there are even if there are these",
    "start": "527760",
    "end": "534320"
  },
  {
    "text": "options they are typically very very application specific like if you've got a life migration protocol that's probably going to be Kimo's life",
    "start": "534320",
    "end": "540440"
  },
  {
    "text": "migration protocol or it's going to be vmware's life migration protocol all of which are very useful but they aren't",
    "start": "540440",
    "end": "545720"
  },
  {
    "text": "really adaptable to other use cases they are also extremely latency sensitive most of these things are designed you",
    "start": "545720",
    "end": "550920"
  },
  {
    "text": "move from one data center with like maybe a millisecond maximum of latency they don't work over the public internet",
    "start": "550920",
    "end": "556279"
  },
  {
    "text": "and they definitely don't work securely over the public internet and also they depend on specific transports like RDMA",
    "start": "556279",
    "end": "562360"
  },
  {
    "text": "or something you can't just swap out the transport layer if you want to and if you just want one extra feature in such a system like for example signal re",
    "start": "562360",
    "end": "568760"
  },
  {
    "text": "application um that uh it's uh that it should like do something after resuming or before",
    "start": "568760",
    "end": "575040"
  },
  {
    "text": "suspending it's really really hard to do that these Protocols are not designed to be extensible by Design so one of these",
    "start": "575040",
    "end": "580640"
  },
  {
    "text": "more Universal approaches to remote memory if you look at this as a remote memory issue is user fault IFD user F",
    "start": "580640",
    "end": "585959"
  },
  {
    "text": "IFD is a kernel API that allows you to essentially stream in um memory as you're accessing it kind of allowing you",
    "start": "585959",
    "end": "591320"
  },
  {
    "text": "to do the post copy migration and we actually even tried this out we built an open source library for goang it's called user ofd go very simple bindings",
    "start": "591320",
    "end": "598720"
  },
  {
    "text": "and if you you can probably imagine the interface you expose such a res as is just an IOD reader ad which is probably",
    "start": "598720",
    "end": "604200"
  },
  {
    "text": "what everyone's ever go is really really worked with and um what that does allow",
    "start": "604200",
    "end": "609519"
  },
  {
    "text": "you to do is you can just register a um a resource you map it essentially to you",
    "start": "609519",
    "end": "614600"
  },
  {
    "text": "register it on a bite slice and then when you access an indidual bite in that b slice you will fetch it in from the",
    "start": "614600",
    "end": "620160"
  },
  {
    "text": "remote so this is like one API that allows you to do it but as you can see from this interface this is only for",
    "start": "620160",
    "end": "625240"
  },
  {
    "text": "reading it's only for streaming and changes right so that memory region you cannot track this is where we first of all try to use",
    "start": "625240",
    "end": "631399"
  },
  {
    "text": "filebase synchronization because you know you can represent memory as a uh a file with M for example and you then",
    "start": "631399",
    "end": "637079"
  },
  {
    "text": "able to continuously pull that file for changes you're going to be able to basically an RN type of protocol and um",
    "start": "637079",
    "end": "642399"
  },
  {
    "text": "so what we tried for example was to use what Min has developed I the highway hash for example very very fast hashing",
    "start": "642399",
    "end": "647519"
  },
  {
    "text": "algorithm so you just like hash every single Chun you send them to the remote you ask for data chunks and then you",
    "start": "647519",
    "end": "652720"
  },
  {
    "text": "only synchronize what actually happens this would be this would be a way of implementing of implementing uh well",
    "start": "652720",
    "end": "658440"
  },
  {
    "text": "pre-copy which would be kind of useful now if we look at um and on the same",
    "start": "658440",
    "end": "663760"
  },
  {
    "text": "time shiff who our founder is right here in the front he was working on something completely different he was actually",
    "start": "663760",
    "end": "668920"
  },
  {
    "text": "working with crfs which is a way to access or S to stream in containers using a fuse and this is a kind of",
    "start": "668920",
    "end": "675360"
  },
  {
    "text": "useful problem but you might be wondering like how does this relate to using me doing memory migration so Shi",
    "start": "675360",
    "end": "681760"
  },
  {
    "text": "came up with this thing called magic block devices they are essentially a um essentially a obstruction layer on top",
    "start": "681760",
    "end": "686959"
  },
  {
    "text": "of NBD in this use case which is a similar thing to crfs except they're able to kind of like combine both of the",
    "start": "686959",
    "end": "693040"
  },
  {
    "text": "pre and post copy migration Thing by doing background push and pull and background synchronization which is kind of useful and while of course we can't",
    "start": "693040",
    "end": "700079"
  },
  {
    "text": "directly use this techology there's one component here that's quite interesting which is the NBD protocol and the NBD",
    "start": "700079",
    "end": "706240"
  },
  {
    "text": "protocol um well is conceptually very simple but um yeah so we thought like",
    "start": "706240",
    "end": "711959"
  },
  {
    "text": "okay this might be our like interface that we're able to do that we're able to track changes with so we went ahead and",
    "start": "711959",
    "end": "718120"
  },
  {
    "text": "just build an open nvd Library this is also open source of course um and that essentially allows you to write a write",
    "start": "718120",
    "end": "723639"
  },
  {
    "text": "a network Pro device in Golding without having to use any SE which is quite useful um and the biggest benefit though",
    "start": "723639",
    "end": "730200"
  },
  {
    "text": "if I compare it to the uh to use fa of earlier is well here we can actually trct the rights and if we're able to",
    "start": "730200",
    "end": "736839"
  },
  {
    "text": "track the rights we are able to do both pre and post copy migration with this with this anology and um yeah the",
    "start": "736839",
    "end": "744360"
  },
  {
    "text": "biggest problem here is that um well NBD is also designed for or Lan at least in",
    "start": "744360",
    "end": "750040"
  },
  {
    "text": "most of the cases you won't be seeing or using um like nvd over the public I mean you can there just TS support but you",
    "start": "750040",
    "end": "756320"
  },
  {
    "text": "probably aren't doing it so the biggest question here is well this would allow us to basically access any kind of remote resource we can represent um",
    "start": "756320",
    "end": "763360"
  },
  {
    "text": "using the network but it's not necessarily optimized to use um to work in high rtt scenarios like for example",
    "start": "763360",
    "end": "769240"
  },
  {
    "text": "moving between continents so this is where remap comes in which is thing I mentioned in the description of the talk",
    "start": "769240",
    "end": "775279"
  },
  {
    "text": "and this is our it's like a universal resource Mountain migration solution so it tries to fix that like fragmentation",
    "start": "775279",
    "end": "780399"
  },
  {
    "text": "in between different current ways of doing this it's called just remote map it does more than that but that's",
    "start": "780399",
    "end": "785839"
  },
  {
    "text": "basically it and actually this is part of a research paper I will be linking earlier so this is all all completely open now what REM does for you is",
    "start": "785839",
    "end": "792920"
  },
  {
    "text": "actually a lot of things first of all it it's completely language independent you can migrate and or Mount any remote",
    "start": "792920",
    "end": "798399"
  },
  {
    "text": "memory region with this using rust goang JavaScript it really doesn't matter it's completely depend of language and it",
    "start": "798399",
    "end": "803680"
  },
  {
    "text": "also handles that like background pull issue I mentioned earlier so it's able to pull it in the background um and this",
    "start": "803680",
    "end": "809360"
  },
  {
    "text": "also works for example doing like an inial initialization phase so you don't need to worry about um don't need to worry about the initialization overhead",
    "start": "809360",
    "end": "815519"
  },
  {
    "text": "of such a technology um it also also contains hooks you can use to extend the entire protocol with so you're able like",
    "start": "815519",
    "end": "821480"
  },
  {
    "text": "that thing I mentioned you just need to do one one additional thing before you resume or before you respond uh before",
    "start": "821480",
    "end": "826720"
  },
  {
    "text": "you before you suspend it you can do this using this library and we also have support for pull priority eristics Shi mentioned I",
    "start": "826720",
    "end": "834320"
  },
  {
    "text": "mentioned that shi worked on the MBD protocol for example if you had like a remote um if you had like a remote X4",
    "start": "834320",
    "end": "840160"
  },
  {
    "text": "file system there's super blocks on there and you kind of know where those are by providing a p priority realti to",
    "start": "840160",
    "end": "845279"
  },
  {
    "text": "remap you're able to essentially pull those super blocks first and you're able to access it much much more quickly than you would be by just fetching it",
    "start": "845279",
    "end": "851360"
  },
  {
    "text": "directly on demand we also can do work on analysis so we're able to find out",
    "start": "851360",
    "end": "856680"
  },
  {
    "text": "when changes happen to the m region because we can track both reads and rights to it and then optimize for the",
    "start": "856680",
    "end": "862639"
  },
  {
    "text": "for the perfect point to um to minimize latency of the migration which is really quite",
    "start": "862639",
    "end": "867680"
  },
  {
    "text": "useful and similar you saw this supports both mounts and migrations so what this",
    "start": "867680",
    "end": "872800"
  },
  {
    "text": "allows us to do is we're able to use this single disunified API to um both mount a remote resource and to mate it",
    "start": "872800",
    "end": "879160"
  },
  {
    "text": "around it's one Library it's a completely unified system and also of course this defines Network protocol",
    "start": "879160",
    "end": "884519"
  },
  {
    "text": "although it doesn't depend on any specific Network protocol um it's able to use different ones um but yeah it",
    "start": "884519",
    "end": "890480"
  },
  {
    "text": "defines some semantics for the network protocol there um and so also it allows you to do caching um and that's quite",
    "start": "890480",
    "end": "897680"
  },
  {
    "text": "useful so for example you're able to like if you do writes you're able to um you're able to just catch them locally",
    "start": "897680",
    "end": "903399"
  },
  {
    "text": "before you write them back and things like that which is quite useful um and also the migration protocol as I",
    "start": "903399",
    "end": "908440"
  },
  {
    "text": "mentioned it's independent of the transport layer but it does provide you some semantics for example there are two phases during the migration there we",
    "start": "908440",
    "end": "914120"
  },
  {
    "text": "were able to like recover from one of them we are able to basically split the pulling the pulling the chunks to the",
    "start": "914120",
    "end": "919240"
  },
  {
    "text": "remote machine and all of that stuff like for you and then we have a very very short amount where you would usually I'm going to talk why it's not",
    "start": "919240",
    "end": "925199"
  },
  {
    "text": "the case would usually have downtime um during the immigration it's like critical face and this protocol is very",
    "start": "925199",
    "end": "930720"
  },
  {
    "text": "very simple to use those who have ever worked with torren will know of this terminology but for example we just call",
    "start": "930720",
    "end": "935959"
  },
  {
    "text": "it the cedar this is the thing if you call that seed on a resource that we Mig that you use remap for you're able to B",
    "start": "935959",
    "end": "942600"
  },
  {
    "text": "expose this to be migrated from then you can use a leer to then connect to this remote resource and finally you call",
    "start": "942600",
    "end": "948399"
  },
  {
    "text": "finalize when it has reached a level where of um of local availability that you're comfortable with so this is like",
    "start": "948399",
    "end": "955079"
  },
  {
    "text": "an extremely generic protocol that works really for every kind of um kind of migration scenario for any kind of",
    "start": "955079",
    "end": "960839"
  },
  {
    "text": "resource so you may be wondering well this is using NBD this is a network block device it's nothing to do with",
    "start": "960839",
    "end": "966079"
  },
  {
    "text": "memory this must be slow Well turns out that's actually not the case at all we compared this hats on to user fall ofd",
    "start": "966079",
    "end": "972560"
  },
  {
    "text": "both of them are implemented and go so we think it's fair in this case and as you can see there's some more spread as you could probably imagine and this is",
    "start": "972560",
    "end": "978680"
  },
  {
    "text": "running on Z milliseconds rtt um but it's fairly comparable in terms of latency now where it really gets",
    "start": "978680",
    "end": "984079"
  },
  {
    "text": "interesting is if you migrate over RT because we are able to do the background push and pull that we wouldn't be able",
    "start": "984079",
    "end": "990519"
  },
  {
    "text": "to do for example user fa because you couldn't track the rights to the memory region so you wouldn't be able to do it",
    "start": "990519",
    "end": "995759"
  },
  {
    "text": "and here we are able to essentially by using current background PSE to just like completely you just don't care",
    "start": "995759",
    "end": "1000800"
  },
  {
    "text": "about the rgt which is super useful for migration this is the latency story but the throughput story is really where it",
    "start": "1000800",
    "end": "1006920"
  },
  {
    "text": "shes so this is much much faster than user Ford even though it's in user space",
    "start": "1006920",
    "end": "1012199"
  },
  {
    "text": "like we're able like userd from our testing was able to get like a half gigabyte per second so you which is",
    "start": "1012199",
    "end": "1018040"
  },
  {
    "text": "quite fast need a very very fast nworting to saturate that capacity but when it comes to migrating with um well",
    "start": "1018040",
    "end": "1024199"
  },
  {
    "text": "this remap solution we're able to do like three gigabytes per second which is really a lot faster even though it's",
    "start": "1024199",
    "end": "1030120"
  },
  {
    "text": "completely in user space and doesn't require anything in the kernel so this was was quite helpful and of course the",
    "start": "1030120",
    "end": "1035720"
  },
  {
    "text": "same thing applies over RT because you've got a cach layer because you've got locking and everything uh supported",
    "start": "1035720",
    "end": "1040760"
  },
  {
    "text": "as part of the protocol you're able to do really really interesting things and you're able to much much more gradually decrease the throughput of a migration",
    "start": "1040760",
    "end": "1047400"
  },
  {
    "text": "when it's happening over a Lar RT and of course the rights very similar story you don't need to do the rights to the remote region you can do the local one",
    "start": "1047400",
    "end": "1053640"
  },
  {
    "text": "and sink it back uh safely and without having to worry about concurrency issues so instead of your right dropping",
    "start": "1053640",
    "end": "1059919"
  },
  {
    "text": "immediately down to basc Z you're able to just keep it locally and you don't have to worry about that kind of these",
    "start": "1059919",
    "end": "1065160"
  },
  {
    "text": "kind of problems so um now You' Be Wondering okay this is a very generic migration solution now how do we use",
    "start": "1065160",
    "end": "1070600"
  },
  {
    "text": "this for a hypervisor and what we were trying to do actually was use firecracker here but I must stress this",
    "start": "1070600",
    "end": "1075960"
  },
  {
    "text": "is not like a firecracker integration thing this is very generic this can work with Kimo this can work with you to-do list it doesn't really matter you can",
    "start": "1075960",
    "end": "1082400"
  },
  {
    "text": "make with any kind of resource we just use firecracker because it's very simple and actually we have an open source fork or firecracker over here um that uh that",
    "start": "1082400",
    "end": "1089679"
  },
  {
    "text": "you can use that actually as support for this and the changes we needed to do to use this technology instead of firecracker because it's language",
    "start": "1089679",
    "end": "1095360"
  },
  {
    "text": "independent is very minimal essentially it boils down to this you just you just resume a snapshot and pass the map the",
    "start": "1095360",
    "end": "1102240"
  },
  {
    "text": "map shared flag the entire change of to this to this to to fer is 184 L and it",
    "start": "1102240",
    "end": "1107440"
  },
  {
    "text": "can suddenly live migrate which was quite quite quite interesting now this is the fire cracker integration story",
    "start": "1107440",
    "end": "1113280"
  },
  {
    "text": "which is quite interesting but when it comes to actually um using this you probably don't want to work with fire",
    "start": "1113280",
    "end": "1118559"
  },
  {
    "text": "recer directly rather you want to use a you want to use a um an orchestration",
    "start": "1118559",
    "end": "1123840"
  },
  {
    "text": "framework or something or or something and this is where architect comes in architect uses these two tools and",
    "start": "1123840",
    "end": "1129120"
  },
  {
    "text": "essentially um orchestrates them with REM and firer and it contains different tooling it contains for example well",
    "start": "1129120",
    "end": "1134919"
  },
  {
    "text": "this is Ros of course it contains different tooling for example it contains a packager this is this is solving the the uh the docker file",
    "start": "1134919",
    "end": "1141799"
  },
  {
    "text": "equivalent I mentioned earlier this allows you to package a virtual machine into something that is equivalent of an oci image um we also have a registry",
    "start": "1141799",
    "end": "1149000"
  },
  {
    "text": "this allows you to serve these images just like a Docker registry or an oci registry would allow you to do we also",
    "start": "1149000",
    "end": "1154280"
  },
  {
    "text": "have a control plane and this control plane is able to do some some optimizations around rtt that will that",
    "start": "1154280",
    "end": "1160760"
  },
  {
    "text": "integrates deeply with this sration thing that we're able to essentially we are only limited by light speed for",
    "start": "1160760",
    "end": "1166120"
  },
  {
    "text": "these kind of solutions so we don't need to worry about you don't need to worry about um don't need to worry about integration or calling rest API or",
    "start": "1166120",
    "end": "1172320"
  },
  {
    "text": "something it's all very very tightly integrated and actually the API we provide of this is extremely simple like this is the entire this is the entire",
    "start": "1172320",
    "end": "1178799"
  },
  {
    "text": "example for the entire API you've got one get request you've got one post endpoint and you've got one delete endo",
    "start": "1178799",
    "end": "1185159"
  },
  {
    "text": "and that's it that's all you need to launch any any applications of machine to list the ones you have running and to migrate them from A to B so this is much",
    "start": "1185159",
    "end": "1192080"
  },
  {
    "text": "much easier than to have to do the manual migration thing when need to like open up ports on the firewall most of",
    "start": "1192080",
    "end": "1197200"
  },
  {
    "text": "the cases when you need to like um initiate a a process of migrating it and",
    "start": "1197200",
    "end": "1202320"
  },
  {
    "text": "of course we're at coupon here right so we've got an operator for all of this the is operator and what this essentially does is it connects the um",
    "start": "1202320",
    "end": "1209080"
  },
  {
    "text": "it connects this migration technology with kubernetes and the way it does this is actually quite simple so we have a crd it's called an instance that you can",
    "start": "1209080",
    "end": "1216000"
  },
  {
    "text": "just specify a package that's the thing that the registry serves and a Noe that you would like the thing to run on and",
    "start": "1216000",
    "end": "1221640"
  },
  {
    "text": "then you can just CP control apply and that's running a virtual machine you want to move it from a top you just change that one string and the VM is",
    "start": "1221640",
    "end": "1227559"
  },
  {
    "text": "migrated without any kind of downtime and similarly so if you want to delete the virtual machine or if you want to watch for events and so on it's all very",
    "start": "1227559",
    "end": "1234080"
  },
  {
    "text": "closely integrated with the way that the operators work the actual networking is a very interesting story so for the VM",
    "start": "1234080",
    "end": "1240400"
  },
  {
    "text": "network interfaces we've built a custom a custom net based solution that allows you to um that From dvm's perspective",
    "start": "1240400",
    "end": "1247520"
  },
  {
    "text": "make sure that when it's being migrated from A to B there's not going to be any kind of like visible difference to it",
    "start": "1247520",
    "end": "1253559"
  },
  {
    "text": "have the same Mac address going to have the same the same thing and uses Network names spaces to do this and this solves",
    "start": "1253559",
    "end": "1259320"
  },
  {
    "text": "one part of the puzzle this solves the part of the puzzle where we um where we move DVM and DVM needs to have the same",
    "start": "1259320",
    "end": "1266720"
  },
  {
    "text": "worldview essentially but if we want to have the other problem which is well we move from A to B well that's going to",
    "start": "1266720",
    "end": "1273600"
  },
  {
    "text": "mean that our server is going to have a physically separate IP address and this is where another lpse project we've been",
    "start": "1273600",
    "end": "1279039"
  },
  {
    "text": "working on called link uh comes into play and this is essentially a new networking primitive and what this",
    "start": "1279039",
    "end": "1284760"
  },
  {
    "text": "allows you to do is um well a lot of things but among but probably the most important thing is that it fixes this",
    "start": "1284760",
    "end": "1291200"
  },
  {
    "text": "problem where you have different IP addresses and it's not just a proxy so yeah um so if you take a look at what it",
    "start": "1291200",
    "end": "1297360"
  },
  {
    "text": "actually does well first of all it's completely independent of your network topology this works whether we running it recrating it from like within land",
    "start": "1297360",
    "end": "1303640"
  },
  {
    "text": "whether you depending this on your workstation or you have this inside of a data center it's completely independent it doesn't require like um any kind of",
    "start": "1303640",
    "end": "1309720"
  },
  {
    "text": "public IP on the notes and also of course it works behind Fireball so this fixes a lot of the issues we have around",
    "start": "1309720",
    "end": "1315360"
  },
  {
    "text": "complexities with migration then know it's also no longer require public IP address so you can just save the IP addresses you don't need them anymore",
    "start": "1315360",
    "end": "1321440"
  },
  {
    "text": "that's quite useful and it also handles TLS encryption now of course it doesn't work only with TLs but in case you're using it that's one of the things we can",
    "start": "1321440",
    "end": "1327960"
  },
  {
    "text": "do with it and we're also able this is the most important part since this is about life migration we're able to keep",
    "start": "1327960",
    "end": "1333799"
  },
  {
    "text": "the connection as the life so even if you're migrating during the migration there will not be any visible downtime",
    "start": "1333799",
    "end": "1338960"
  },
  {
    "text": "to you as the user if you're sending data if you're like copying a file or whatever into a server and you migrated it from A to B that copy process",
    "start": "1338960",
    "end": "1345799"
  },
  {
    "text": "continues while DVM is being migrated so there's literally zero downtime from an IND user perspective and from the VM",
    "start": "1345799",
    "end": "1351640"
  },
  {
    "text": "perspective as well so that's quite useful and of course similarly to the control plane this integrates very",
    "start": "1351640",
    "end": "1356760"
  },
  {
    "text": "tightly with architect so we are able to like just save a lot of rtts that you would usually have with such a deployment which keeps migration times",
    "start": "1356760",
    "end": "1363200"
  },
  {
    "text": "down and I won't be able to talk too much about link today um but if you want to know about more about this just go to",
    "start": "1363200",
    "end": "1369400"
  },
  {
    "text": "lopol app.io and um there's a there's an a a field just enter an email in and we'll be sure to contact you when it's",
    "start": "1369400",
    "end": "1375360"
  },
  {
    "text": "ready but of course now I've explained at least in a very short fashion what this is actually um about but that's the",
    "start": "1375360",
    "end": "1381559"
  },
  {
    "text": "question like does this actually work in order to show you this I have prepared a little demo so we're going to take redus",
    "start": "1381559",
    "end": "1387240"
  },
  {
    "text": "or actually we're going to use a an application to measure Rus latency and we're going to have a we're going to",
    "start": "1387240",
    "end": "1392360"
  },
  {
    "text": "have a r server running inside of Frankfurt which is well across the ocean in this case and what we're going to be",
    "start": "1392360",
    "end": "1397480"
  },
  {
    "text": "doing is just going to be moving this uh this uh V server all the way over to New York City and then I mean we're in",
    "start": "1397480",
    "end": "1403400"
  },
  {
    "text": "Chicago right so we're just going to be moving it over to Chicago and we can move it back if we want to so so this is",
    "start": "1403400",
    "end": "1408960"
  },
  {
    "text": "a very very long distance like we're talking like like 10,000 km here this is not where you would usually be able to",
    "start": "1408960",
    "end": "1414400"
  },
  {
    "text": "life mate virtual machines so yeah let's uh let's get right into it actually put",
    "start": "1414400",
    "end": "1419480"
  },
  {
    "text": "this mic up here still",
    "start": "1419480",
    "end": "1424360"
  },
  {
    "text": "works demo all right it's a little bit hard to hold the mic while I'm I'm okay so essentially what I'm going to do here",
    "start": "1427360",
    "end": "1434039"
  },
  {
    "text": "is we have this crd and this is actually from Minecraft let me switch over to uh to and this is currently running inside",
    "start": "1434039",
    "end": "1439320"
  },
  {
    "text": "of Frankfurt so if you take a look over here you'll be able to see that uh this is currently running on",
    "start": "1439320",
    "end": "1445200"
  },
  {
    "text": "kubernetes let me see so this is currently running and you can as you can see you can use the normal control watch command you're already used to and this",
    "start": "1445200",
    "end": "1451320"
  },
  {
    "text": "is running on Frankfurt on the not Frankford and these worker notes they are just um they are just the uh just a",
    "start": "1451320",
    "end": "1457760"
  },
  {
    "text": "community's note name if you run coup control get note you would get the same result so if I run a little latency test over here going to take out of time I'm",
    "start": "1457760",
    "end": "1465320"
  },
  {
    "text": "connected to a mobile hotspot here by the way so if you see this this is this is uh this is the latency you need to",
    "start": "1465320",
    "end": "1471039"
  },
  {
    "text": "remove like 50 me milliseconds at least from this to get the actual latency this is currently this is Cy the um the",
    "start": "1471039",
    "end": "1476600"
  },
  {
    "text": "latency we get and again this is using a persistent connection we're not creating a new connection for every get and said",
    "start": "1476600",
    "end": "1482399"
  },
  {
    "text": "request we've um we actually just reusing the connection so now what I'm going to do is I'm just going to go in",
    "start": "1482399",
    "end": "1487880"
  },
  {
    "text": "here and I'm going to change this note",
    "start": "1487880",
    "end": "1491840"
  },
  {
    "text": "name and for example now we're going to be moving into New York City and usually this again this it's a very complicated",
    "start": "1493679",
    "end": "1498720"
  },
  {
    "text": "process but here we just C control apply it will take a second and as you can see we're currently migrating it's in the",
    "start": "1498720",
    "end": "1504159"
  },
  {
    "text": "migrating state right um and we can jump um over here I'm not completely sure what's",
    "start": "1504159",
    "end": "1513559"
  },
  {
    "text": "happening did I apply it it's",
    "start": "1513559",
    "end": "1520039"
  },
  {
    "text": "unchanged yeah this is the thing when you do live demos right let me just let me just uh try and move it over to um",
    "start": "1520039",
    "end": "1526640"
  },
  {
    "text": "over to a different instance one second I'll try and move it to",
    "start": "1526640",
    "end": "1532000"
  },
  {
    "text": "Chicago all right let's see whether this works otherwise it's not a problem I'll just delete the VM and start in again",
    "start": "1536440",
    "end": "1542279"
  },
  {
    "text": "one second okay here we go now we don't have to VM anymore not completely sure what's",
    "start": "1542279",
    "end": "1548960"
  },
  {
    "text": "going on I'm just going to be migrating again this is over a mobile hotspot so I'll just uh actually I just I recorded",
    "start": "1548960",
    "end": "1554159"
  },
  {
    "text": "this on a video right before we started to talk so I think I'm just going to try it over the video um where is",
    "start": "1554159",
    "end": "1560600"
  },
  {
    "text": "it right over here this is why you always have a",
    "start": "1560600",
    "end": "1565840"
  },
  {
    "text": "fallback plan in case things go wrong okay so for example over here we have a we virtual machine and we just applied",
    "start": "1565840",
    "end": "1571159"
  },
  {
    "text": "this this is change and what you will see is there will be a short latency Spike and now we actually this migrates",
    "start": "1571159",
    "end": "1576240"
  },
  {
    "text": "from uh from New York City to Frankfurt but as you can see there's a short latency Spike but that's a the connection state stays completely",
    "start": "1576240",
    "end": "1582399"
  },
  {
    "text": "connected during the entire demo which is quite useful and now if we go back and we change our no to for example uh",
    "start": "1582399",
    "end": "1588960"
  },
  {
    "text": "Frankfurt over here which again is moving in the in the other direction and we switch back to our latency graph it's",
    "start": "1588960",
    "end": "1594919"
  },
  {
    "text": "migrating you can see the chain you can see the pull process all the way down there in the bottom and as you can see as see migration is happening that uh",
    "start": "1594919",
    "end": "1601360"
  },
  {
    "text": "that uh latency is not changing whatsoever so um this going to take a bit of time again we're jumping over the",
    "start": "1601360",
    "end": "1606559"
  },
  {
    "text": "Atlantic Ocean here so you're going to have some problems with n connectivity so um as you can see here it's going to",
    "start": "1606559",
    "end": "1611960"
  },
  {
    "text": "just resume and there we go now that the m has moved physically from Chicago in this case all the way over to Frankfurt",
    "start": "1611960",
    "end": "1618840"
  },
  {
    "text": "and as you can see there's of course a there's of course an increase in latency usually of course as I want to show you in the demo you would do this the other",
    "start": "1618840",
    "end": "1624919"
  },
  {
    "text": "way around you would move this virtual machine from um from for example Frankfurt closer to us right now and the",
    "start": "1624919",
    "end": "1630039"
  },
  {
    "text": "down there's like again there's like no downtime here so this is the most important part about this and actually",
    "start": "1630039",
    "end": "1635120"
  },
  {
    "text": "here we are now in Frankfurt if I move it back which you should see in just a second you can see that there is some pull progress and again this is going to",
    "start": "1635120",
    "end": "1641720"
  },
  {
    "text": "take like 10 seconds or something but it's without any relevance because there's no downtime to you at this point",
    "start": "1641720",
    "end": "1647320"
  },
  {
    "text": "just take about 4 seconds I guess it's currently in flight and Landing zone so",
    "start": "1647320",
    "end": "1652399"
  },
  {
    "text": "um here we go and now you can see the very like visible latency drop that you get so if you move this virtual machine",
    "start": "1652399",
    "end": "1657520"
  },
  {
    "text": "I'm just going to it's already passed and so if you do this you're able to suddenly move your applications closer to users you could for example like if",
    "start": "1657520",
    "end": "1664440"
  },
  {
    "text": "like if uh if for example the um the what is it called the time zone for",
    "start": "1664440",
    "end": "1669640"
  },
  {
    "text": "example changes and and people are going to sleep in Europe and not over here in the US then you would have the you would be able to move the virtu machine closer",
    "start": "1669640",
    "end": "1676720"
  },
  {
    "text": "and actually I'm hoping the second demo works but so okay one second um I'll",
    "start": "1676720",
    "end": "1682279"
  },
  {
    "text": "moving this back okay so this is a protocol that we control technically speaking we could",
    "start": "1682279",
    "end": "1688640"
  },
  {
    "text": "AFF fake this right this is a red server we're running get and set commands um over it what if we use something that we do not control what if we use for",
    "start": "1688640",
    "end": "1694960"
  },
  {
    "text": "example a Minecraft server well we're going to do the same thing actually I'm probably going to skip the Frankfurt server but other than that um we can run",
    "start": "1694960",
    "end": "1701240"
  },
  {
    "text": "this this virtual machine and we're able to move this uh thing even though we don't know the protocol even though we",
    "start": "1701240",
    "end": "1706679"
  },
  {
    "text": "don't control the protocol we CH can't change it going to move it over to New York City and then we're just going to move it over to Chicago so this is going",
    "start": "1706679",
    "end": "1712880"
  },
  {
    "text": "to allow us for some very very interesting interesting use cases um and again this is where I mentioned earlier",
    "start": "1712880",
    "end": "1718039"
  },
  {
    "text": "if you installed Minecraft that would be the perfect time to join so this is actually publicly accessible under this domain we've got um we've got 20 users",
    "start": "1718039",
    "end": "1725640"
  },
  {
    "text": "maximum so we don't accidentally DS our infrastructure over here so first come first surfed but yeah and it's important",
    "start": "1725640",
    "end": "1731200"
  },
  {
    "text": "we don't only pick this version because we have a server running for this specific version of course this would work with any newer version as well but",
    "start": "1731200",
    "end": "1737080"
  },
  {
    "text": "in case those are interested um just just feel free to join and I'll I'll try it on my end and we'll",
    "start": "1737080",
    "end": "1742960"
  },
  {
    "text": "see so again let's take a look at the external um instance so over here you can see we've got the um we've got the",
    "start": "1743840",
    "end": "1749840"
  },
  {
    "text": "uh the Minecraft instance the Minecraft crd and we're going to spin this up in New York city so I'm just going to um run coup control",
    "start": "1749840",
    "end": "1756760"
  },
  {
    "text": "apply all right and I'm hoping we going to see the",
    "start": "1764320",
    "end": "1769320"
  },
  {
    "text": "over here actually I think what's happening over here I just I lost the internet connection on this computer like if I press enter here it's not doing anything so try would you mind",
    "start": "1770240",
    "end": "1777159"
  },
  {
    "text": "checking your Hotpot please something seems to be wrong or I may have connected yeah I connected to the momic Wi-Fi so what happened here was I I I",
    "start": "1777159",
    "end": "1783640"
  },
  {
    "text": "set up these terminals earlier they're running T-Max thanks and um so we're just going to have to reconnect to that Hotpot one second",
    "start": "1783640",
    "end": "1791360"
  },
  {
    "text": "please yeah this is the thing when you're on the puppet demo over over a conference Wi-Fi there's going to be",
    "start": "1795200",
    "end": "1800240"
  },
  {
    "text": "some issues here um is it",
    "start": "1800240",
    "end": "1805360"
  },
  {
    "text": "loading perfect perfect so we can see some people are able to join I'll be I'll be hopefully under those people in just a second TR did you start it it's",
    "start": "1805720",
    "end": "1814480"
  },
  {
    "text": "not showing up I'll just toggle it for a",
    "start": "1814480",
    "end": "1819120"
  },
  {
    "text": "second okay here we go/ phone okay now I'm going to have to kill these connections one",
    "start": "1822320",
    "end": "1829480"
  },
  {
    "text": "second all right here we go so sorry about that okay here we go so currently we've got the virtual machine running and now as you can see this is on the",
    "start": "1851039",
    "end": "1857000"
  },
  {
    "text": "New York New York City server and if people have joined I will also join in just a second right over here and um",
    "start": "1857000",
    "end": "1863399"
  },
  {
    "text": "let's see okay here we go and currently have a few people connected which is pretty",
    "start": "1863399",
    "end": "1868679"
  },
  {
    "text": "cool so this is working now um just feel free to play around with the server and while is is happening while you guys are",
    "start": "1868679",
    "end": "1874039"
  },
  {
    "text": "connected to the server I will just be moving this to New York City or actually to Chicago we're already in New York",
    "start": "1874039",
    "end": "1880320"
  },
  {
    "text": "City all right so here we are we started it and now you should see the pull progress",
    "start": "1886159",
    "end": "1892679"
  },
  {
    "text": "there we go it's not pulling and again if I'm like just playing here I can like destroy blocks or anything like while the migration is running and you will",
    "start": "1892679",
    "end": "1899200"
  },
  {
    "text": "actually I can't do them here because I'm near the spawn area but here we go so the virtual machine just migrated people were connected to the virtual",
    "start": "1899200",
    "end": "1904919"
  },
  {
    "text": "machine we changed things we changed the um we changed everything we're able to connect to it back so now we can do the same thing and I'll jump back over to",
    "start": "1904919",
    "end": "1911200"
  },
  {
    "text": "the um sorry over here and I'm just going to move it back to New York City",
    "start": "1911200",
    "end": "1919159"
  },
  {
    "text": "oops all right so we're just going to move it back and what you will be able to see in yeah there we go something's",
    "start": "1923200",
    "end": "1929760"
  },
  {
    "text": "wrong with my network connect it takes a little bit longer than usually but here we go so you can see that virtual machine is being migrated right now",
    "start": "1929760",
    "end": "1934960"
  },
  {
    "text": "while I'm playing the server and again this is with an application that we do not control so like we can just remove blocks here and you can see there's like",
    "start": "1934960",
    "end": "1940639"
  },
  {
    "text": "no latency drops even if you were like poking in a block for example to remove it during that SLE break thanks",
    "start": "1940639",
    "end": "1948010"
  },
  {
    "text": "[Music]",
    "start": "1948010",
    "end": "1951099"
  },
  {
    "text": "right thanks a lot and as you by the way the the numbers you see down here with the resumption times it's actually faster than this in reality this is",
    "start": "1954120",
    "end": "1959519"
  },
  {
    "text": "including an rtt to the server and back story it's a little bit faster than this in reality so yeah um I'll be sure to do",
    "start": "1959519",
    "end": "1965399"
  },
  {
    "text": "the r demo later if you guys are interested hopefully this time we working hot spot but yeah okay so again now that we have this",
    "start": "1965399",
    "end": "1972840"
  },
  {
    "text": "compute unit we can we can move it around at least assuming we have an internet connection on our workstation and guess we're able to do all of the",
    "start": "1972840",
    "end": "1978440"
  },
  {
    "text": "things I mentioned earlier we able to just deploy an application by just literally physically moving it into the cloud again these were different servers",
    "start": "1978440",
    "end": "1985039"
  },
  {
    "text": "they it by equinex this is like a public cloud service we can just use and we can do the entire thing we mentioned earlier",
    "start": "1985039",
    "end": "1990840"
  },
  {
    "text": "the thing about moving between Cloud providers actually we would moving against we moving between Cloud providers already we're moving across",
    "start": "1990840",
    "end": "1996320"
  },
  {
    "text": "the ocean with these servers so um yeah that's a solve problem if you see the if you see that the rate for an AWS server",
    "start": "1996320",
    "end": "2002960"
  },
  {
    "text": "for example change you can just move to gcp with no issues this I should mention also works with nested virtualization",
    "start": "2002960",
    "end": "2009200"
  },
  {
    "text": "reasons why you should be using this maybe but it's possible you could even move this between different like public CL providers if they have nested virtualization support so that's quite",
    "start": "2009200",
    "end": "2015840"
  },
  {
    "text": "useful that thing well we just ran a Minecraft server I guess that's fixed so we can move a running application while it's Computing between things that also",
    "start": "2015840",
    "end": "2022639"
  },
  {
    "text": "works and the desktop demo um same same thing as long as it's Network transparent you're able to migrate it",
    "start": "2022639",
    "end": "2027919"
  },
  {
    "text": "from A to B without issues that Avatar thing where you move an application from your phone to your computer is suddenly",
    "start": "2027919",
    "end": "2033240"
  },
  {
    "text": "possible and of course moving the stateful services closer to the user well that's what we just did with that MRA demo for example and again if",
    "start": "2033240",
    "end": "2039279"
  },
  {
    "text": "anyone's interested I can demo the reddest thing later this now that we have an internet connection that actually does this so yeah if you guys",
    "start": "2039279",
    "end": "2045200"
  },
  {
    "text": "are more interested in some more information on this there's an entire research paper on this it's 130 pages that just goes into every single detail",
    "start": "2045200",
    "end": "2051480"
  },
  {
    "text": "you could possibly imagine about this and it's all open up over GitHub it's been peer reviewed I think a month ago at this point and so if you're",
    "start": "2051480",
    "end": "2057480"
  },
  {
    "text": "interested in this just feel free to check it out and all of the benchmarks by the way I mentioned with the like latency and so on all open source so",
    "start": "2057480",
    "end": "2063358"
  },
  {
    "text": "yeah and not just the paper itself is open source the library remap well that's open source um of course there's",
    "start": "2063359",
    "end": "2068520"
  },
  {
    "text": "as well the NBD server is also also open source so if you want just want to use an NBD server or build parts of this also possible architect the actual",
    "start": "2068520",
    "end": "2075480"
  },
  {
    "text": "migration the orchestrator is also open source on the lolab getup account and the fire for that we mentioned although",
    "start": "2075480",
    "end": "2081878"
  },
  {
    "text": "it's again it's very minimal is also open source so yeah and of course um",
    "start": "2081879",
    "end": "2087000"
  },
  {
    "text": "again uh just come talk to us we're going to be moving all around the conference actually there three people right here in front that in case you has",
    "start": "2087000",
    "end": "2092599"
  },
  {
    "text": "interested um you can just talk to you about it um we wear hats so you'll Lely be able to find pretty quickly so um",
    "start": "2092599",
    "end": "2098920"
  },
  {
    "text": "yeah and again if you want to find out on social media that's my information and also if you want more information",
    "start": "2098920",
    "end": "2104200"
  },
  {
    "text": "feel free to join the LPS Discord at lups .io Discord and that I thank",
    "start": "2104200",
    "end": "2110000"
  },
  {
    "text": "you",
    "start": "2110000",
    "end": "2113000"
  }
]