[
  {
    "text": "all right welcome welcome thanks for coming for this session my name is Baron",
    "start": "0",
    "end": "7340"
  },
  {
    "text": "Morgan here so I I currently am a founder of a startup I used to work at",
    "start": "7340",
    "end": "13500"
  },
  {
    "text": "Google and helped incubate some open projects like GRDC and missed you I'm",
    "start": "13500",
    "end": "19439"
  },
  {
    "text": "Morgan MacLean I work at Google I'm the product manager for open census as well as a number of our stackdriver products",
    "start": "19439",
    "end": "25699"
  },
  {
    "text": "so we're here today to talk about two highly related topics open census which",
    "start": "25699",
    "end": "32189"
  },
  {
    "text": "is a tracing and application metrics framework that we publish from Google and it's open source and then also sto",
    "start": "32189",
    "end": "38489"
  },
  {
    "text": "and envoy and what we're going to focus on is the convergence between these so being able to apply tracing and metrics",
    "start": "38489",
    "end": "45750"
  },
  {
    "text": "and and gathered other types of signals from applications that are running inside of envoy we're gonna start with a",
    "start": "45750",
    "end": "52140"
  },
  {
    "text": "bit of a basic background on service development so if you've been to other",
    "start": "52140",
    "end": "58829"
  },
  {
    "text": "tracing talks before you've probably heard this part but hopefully you'll still have a few insightful things so as",
    "start": "58829",
    "end": "65580"
  },
  {
    "text": "everybody is very aware of the world is moving from large monolithic code bases to more highly distributed systems to",
    "start": "65580",
    "end": "72750"
  },
  {
    "text": "commonly the term micro services is used to describe this and so we wanted to",
    "start": "72750",
    "end": "78060"
  },
  {
    "text": "give you an example just to really sort of make it really apparent why distributed tracing is so powerful and",
    "start": "78060",
    "end": "84270"
  },
  {
    "text": "why it's not just a technology that while useful of companies like Google and Facebook and other really big firms while it's useful there it's actually",
    "start": "84270",
    "end": "91049"
  },
  {
    "text": "really essential for everyone else so if we look at a sort of older style of monolithic application where you have",
    "start": "91049",
    "end": "96930"
  },
  {
    "text": "perhaps the you know a fairly small organizations codebase you might even have like a single app that's running",
    "start": "96930",
    "end": "102979"
  },
  {
    "text": "right and so when a client request comes in and hits one of your api's it calls a",
    "start": "102979",
    "end": "108689"
  },
  {
    "text": "bunch of functions maybe then a database guys call them response gets sent back to the person who called in and that's",
    "start": "108689",
    "end": "114420"
  },
  {
    "text": "you know useful and we historically have had many many tools that allow developers to inspect this whether it's",
    "start": "114420",
    "end": "120210"
  },
  {
    "text": "you know traditional debuggers running your application in a test environment doing just plain old static code",
    "start": "120210",
    "end": "126060"
  },
  {
    "text": "analysis and your ID of choice logging system level metrics etc and these are things that you know the",
    "start": "126060",
    "end": "131280"
  },
  {
    "text": "whole industry is pretty used to I think you know most developers probably almost everybody here know that if you show up",
    "start": "131280",
    "end": "137070"
  },
  {
    "text": "to a job at a new company and they don't use like basic things like whether it be like source control or like a creative",
    "start": "137070",
    "end": "143310"
  },
  {
    "text": "logs or things like that you should you know probably walk out the door and people understand us but as we move into",
    "start": "143310",
    "end": "150650"
  },
  {
    "text": "the wild wild world of micro services there haven't historically been the same",
    "start": "150650",
    "end": "156660"
  },
  {
    "text": "kind of tools available right and so if we think of distributed tracing which allows you to track a request as it hops",
    "start": "156660",
    "end": "162660"
  },
  {
    "text": "across multiple systems this isn't just useful for latency analysis like it is at companies like Google and others who",
    "start": "162660",
    "end": "169380"
  },
  {
    "text": "care very deeply about their latency this is actually how you understand how your app works in some ways in addition",
    "start": "169380",
    "end": "174420"
  },
  {
    "text": "to the latency benefits it's almost like looking at a stack trace right and without a distributed trace with micro",
    "start": "174420",
    "end": "179640"
  },
  {
    "text": "services it's almost like trying to debug a problem without even having access to a stack trace in a traditional",
    "start": "179640",
    "end": "184650"
  },
  {
    "text": "environment which like no one would want to be in that world and you know",
    "start": "184650",
    "end": "190320"
  },
  {
    "text": "distributed tracings up there with you know other technologies like profiling and debugging that while they had a you",
    "start": "190320",
    "end": "196709"
  },
  {
    "text": "know ton of applications and uses in your traditional model if the code bases we need to take a different approach",
    "start": "196709",
    "end": "202470"
  },
  {
    "text": "when it comes to micro services and this is what open census aims to target so",
    "start": "202470",
    "end": "210090"
  },
  {
    "text": "double-clicking on distributed tracing this is a screen shot of Zipkin that i'm sure many people are pretty familiar",
    "start": "210090",
    "end": "215790"
  },
  {
    "text": "with at this point but it's a open source distributed tracing backend along with its own tracers distributed tracing",
    "start": "215790",
    "end": "223530"
  },
  {
    "text": "gives us a number of things it gives us the topology of our application so you understand which services call which",
    "start": "223530",
    "end": "228570"
  },
  {
    "text": "others for a given request it gives you a review into how those requests are handled and a rough view of how much",
    "start": "228570",
    "end": "235350"
  },
  {
    "text": "time is spent on each component of the request and it lets you understand where the system is performing poorly where",
    "start": "235350",
    "end": "242880"
  },
  {
    "text": "errors are occurring and also gives you correlation for other signals so one really common thing with distributed",
    "start": "242880",
    "end": "249120"
  },
  {
    "text": "traces is embedding those trace IDs and any logs that you collect so that you can see all the logs associate of a certain requests and distributed tracing",
    "start": "249120",
    "end": "256200"
  },
  {
    "text": "makes that much more easy and automatic than it would be just doing that on your own open census also provides app level",
    "start": "256200",
    "end": "262560"
  },
  {
    "text": "metrics which includes you know latency metrics RPC stats at every level of the sack as well as",
    "start": "262560",
    "end": "268199"
  },
  {
    "text": "custom metrics so I've given you a bit of background a distributed tracing and",
    "start": "268199",
    "end": "273569"
  },
  {
    "text": "and again like those of you who are already familiar probably bored to tears already but it's not necessarily an easy",
    "start": "273569",
    "end": "280680"
  },
  {
    "text": "problem to solve and this is where open census really comes in so ideally you want traces and stats to be",
    "start": "280680",
    "end": "287039"
  },
  {
    "text": "automatically collected for every request that gets routed through each of your microservices this is actually not",
    "start": "287039",
    "end": "293699"
  },
  {
    "text": "that simple I think men single men just had a talk on open tracing which which is targeting the same sort of set of",
    "start": "293699",
    "end": "298919"
  },
  {
    "text": "challenges and the reason you see projects like these is that for distributed tracing you need to have",
    "start": "298919",
    "end": "304370"
  },
  {
    "text": "plugins or insights into every single web framework RPC framework storage",
    "start": "304370",
    "end": "309930"
  },
  {
    "text": "client library AP API client library basically every single thing that can interact with or generate rpcs to get",
    "start": "309930",
    "end": "317039"
  },
  {
    "text": "that data out automatically you can do this yourself as a developer but it's a royal pain and most companies and most",
    "start": "317039",
    "end": "322770"
  },
  {
    "text": "developers won't bother so we need a better way of making this automatic there's also a conversation around",
    "start": "322770",
    "end": "329460"
  },
  {
    "text": "whether libraries so like things that you link to your app versus agents that sit and like do monkey patching or",
    "start": "329460",
    "end": "335490"
  },
  {
    "text": "something else to get this data out which of those is more useful agents can be very slick you run them in the",
    "start": "335490",
    "end": "341370"
  },
  {
    "text": "background they automatically directed your app there are some challenges of that which is why open census is distributed as a set of libraries the",
    "start": "341370",
    "end": "348449"
  },
  {
    "text": "biggest just being that we want to provide an API to developers but also that they can it can be managed through source control so if you want to add",
    "start": "348449",
    "end": "355680"
  },
  {
    "text": "open census to your app if you want to update the version of it or so on you just do that through source control make",
    "start": "355680",
    "end": "361020"
  },
  {
    "text": "a new deployment you don't have to mess around if anything in the images that you're using so what does open census",
    "start": "361020",
    "end": "370409"
  },
  {
    "text": "really provide it wasn't obvious open census is a single set of libraries for",
    "start": "370409",
    "end": "376370"
  },
  {
    "text": "metrics and traces so it's I think that's one key sort of takeaway it does",
    "start": "376370",
    "end": "383069"
  },
  {
    "text": "both it's not just tracing and it intends to be holistic in terms of",
    "start": "383069",
    "end": "388430"
  },
  {
    "text": "correlating with logs and profile over time so what is it today it's a set of libraries in few languages",
    "start": "388430",
    "end": "396240"
  },
  {
    "text": "the bold ones are where you have metrics and tracing available the rest are coming it already has",
    "start": "396240",
    "end": "404850"
  },
  {
    "text": "integrations with webinar PC frameworks so GRP see for example the plumbing is",
    "start": "404850",
    "end": "411930"
  },
  {
    "text": "already built in with open census spring and some of those integrations with",
    "start": "411930",
    "end": "419490"
  },
  {
    "text": "other frameworks is coming a lot of the client libraries so a lot of Google",
    "start": "419490",
    "end": "425850"
  },
  {
    "text": "client libraries are being instrumented with open census what does that really mean so if you're a user let's say you use",
    "start": "425850",
    "end": "434180"
  },
  {
    "text": "you know data store library from from Google cloud then you would have",
    "start": "434180",
    "end": "440960"
  },
  {
    "text": "Plumbing's for open census already built in such that when you are using it as part of your set of micro services you",
    "start": "440960",
    "end": "448020"
  },
  {
    "text": "get metrics and distributed tracing in a back-end of choice already there without",
    "start": "448020",
    "end": "454020"
  },
  {
    "text": "you needing to do work to instrument that and there's more integrations with of open census libraries happening so I",
    "start": "454020",
    "end": "460860"
  },
  {
    "text": "think is is the one that's already done and there's more that community is",
    "start": "460860",
    "end": "466650"
  },
  {
    "text": "doing in terms of integrating more libraries we're focusing pretty heavily on these integrations right now because",
    "start": "466650",
    "end": "472590"
  },
  {
    "text": "it's really important to get data from sources like or I think we just launched a memcached and a whole bunch",
    "start": "472590",
    "end": "478410"
  },
  {
    "text": "of others we have a pretty big team right now that's just getting focused on building these integrations so as a",
    "start": "478410",
    "end": "486000"
  },
  {
    "text": "developer you get these libraries and you'll get api's for interacting with some concepts that exist in open census",
    "start": "486000",
    "end": "494210"
  },
  {
    "text": "so there's a few concepts of trace spans and tags and we will touch upon some so",
    "start": "494210",
    "end": "502710"
  },
  {
    "text": "just you know span is an individual sort of call there's a parent-child",
    "start": "502710",
    "end": "508500"
  },
  {
    "text": "relationship between a set of spans so let's say a request comes in from a user it goes through a bunch of services",
    "start": "508500",
    "end": "516289"
  },
  {
    "text": "there's a parent span and then a child span if it's calling five other services that's like five other spans and they",
    "start": "516289",
    "end": "523140"
  },
  {
    "text": "collectively form a trace I mean these are basic yeah in this image it's each of the lines that you see in the sitting",
    "start": "523140",
    "end": "528300"
  },
  {
    "text": "screenshot trace con these are basic tracing concepts and there's API is for",
    "start": "528300",
    "end": "533700"
  },
  {
    "text": "interacting them in open census as a developer the",
    "start": "533700",
    "end": "539089"
  },
  {
    "text": "one other concept here is exporters so when you have these metrics you want to",
    "start": "539089",
    "end": "545220"
  },
  {
    "text": "get them in to export them into a system of choice so that is another set of",
    "start": "545220",
    "end": "551010"
  },
  {
    "text": "integrations happening with open census so stackdriver yeah we support driver",
    "start": "551010",
    "end": "557870"
  },
  {
    "text": "Prometheus for stats Zipkin for traces Yaeger for traces signal FX for stats",
    "start": "557870",
    "end": "566839"
  },
  {
    "text": "there's a big list that's on the website there's number more that's the ones I can sort of name off my head but the the kind of the the nice thing",
    "start": "566839",
    "end": "573180"
  },
  {
    "text": "about open census is that all of these things are baked into like the main library that you download so when you link open census to your app you choose",
    "start": "573180",
    "end": "580290"
  },
  {
    "text": "the exporter that you want to use it will automatically gather as many traces bans and stats as possible",
    "start": "580290",
    "end": "585480"
  },
  {
    "text": "and it will send those to your back-end of choice you can also use multiple so we suspect like a really common use case",
    "start": "585480",
    "end": "592170"
  },
  {
    "text": "we'll be using Prometheus for stats and then Zipkin or Jager for tracing but if you want to go use every single exporter",
    "start": "592170",
    "end": "598529"
  },
  {
    "text": "under the sutton you are absolutely able to do that this is important for some companies where you had different teams that have used different tracing or",
    "start": "598529",
    "end": "604890"
  },
  {
    "text": "stats backends and you can continue to support that scenario foe consensus all",
    "start": "604890",
    "end": "612720"
  },
  {
    "text": "right so one other very useful concept that exists with open census and it's",
    "start": "612720",
    "end": "618360"
  },
  {
    "text": "common at you know places like Google for any service developer to basically",
    "start": "618360",
    "end": "623519"
  },
  {
    "text": "go to a service URL and say slash Tracy or / VAR z or slash RPC Z and that's of",
    "start": "623519",
    "end": "631760"
  },
  {
    "text": "extremely extremely useful concept to be able to go to any service and get a",
    "start": "631760",
    "end": "639300"
  },
  {
    "text": "pretty standardized set of real time unsampled metrics so you are having some",
    "start": "639300",
    "end": "645449"
  },
  {
    "text": "problems this actually the your first behavior is okay let me check the /r PCC",
    "start": "645449",
    "end": "650610"
  },
  {
    "text": "page and look at the list of what was the last you know few are PCs what were",
    "start": "650610",
    "end": "657120"
  },
  {
    "text": "their latency times what were the error samples and you can you can actually click on these to get to the individual",
    "start": "657120",
    "end": "664380"
  },
  {
    "text": "requests and you can look at the trace IDs and span ID for every request for that was generated",
    "start": "664380",
    "end": "670620"
  },
  {
    "text": "for every incoming request right so again extremely useful concept which is",
    "start": "670620",
    "end": "676680"
  },
  {
    "text": "built in with as part of open census so that the open census client libraries",
    "start": "676680",
    "end": "681720"
  },
  {
    "text": "each host it's optional but they host these pages they have a little web server built it and so you can go there",
    "start": "681720",
    "end": "687930"
  },
  {
    "text": "and get just a firehose view of all the spans and stats that are going through a system traces are generally sampled",
    "start": "687930",
    "end": "694230"
  },
  {
    "text": "often that like a very low percentage like 1% or fewer this gives you data to everything that doesn't even get sent to",
    "start": "694230",
    "end": "699540"
  },
  {
    "text": "your back-end so if you're debugging a critical production issue the EZ pages are incredibly useful and this is built",
    "start": "699540",
    "end": "704730"
  },
  {
    "text": "into open census cool one more very",
    "start": "704730",
    "end": "710820"
  },
  {
    "text": "useful concept and open census is tags so imagine again you're doing the",
    "start": "710820",
    "end": "717390"
  },
  {
    "text": "analysis but you say ok I want to focus on I want to get a subset of latency or",
    "start": "717390",
    "end": "723480"
  },
  {
    "text": "some other metric or set of traces for a subset of requests which is only client",
    "start": "723480",
    "end": "730080"
  },
  {
    "text": "equal to Android or only for user agent call requests that happened or forgiven",
    "start": "730080",
    "end": "735210"
  },
  {
    "text": "IP is and so on so you can add tags which is basically dimensions in your",
    "start": "735210",
    "end": "741870"
  },
  {
    "text": "open send in your code and you can basically define your own dimensions and get your metrics by those dimensions so",
    "start": "741870",
    "end": "749850"
  },
  {
    "text": "if you define tag equal to client let's say you know mobile client then you can",
    "start": "749850",
    "end": "755280"
  },
  {
    "text": "get your metrics by mobile client right so then use metrics and traces or any",
    "start": "755280",
    "end": "760860"
  },
  {
    "text": "other telemetry yeah and so yes this is a great way so that you can sift through",
    "start": "760860",
    "end": "765870"
  },
  {
    "text": "data on your back-end so I can talk",
    "start": "765870",
    "end": "770940"
  },
  {
    "text": "about this so this does seem like a somewhat self-serving best slide but I can explain",
    "start": "770940",
    "end": "776520"
  },
  {
    "text": "so at Google and other not just Google but other large web services companies we've been using these technologies for",
    "start": "776520",
    "end": "782550"
  },
  {
    "text": "a long time these are basically how we've we've been able to manage reliability and performance at extreme",
    "start": "782550",
    "end": "787770"
  },
  {
    "text": "scale and how we've been able to reduce our root cause analysis time for errors",
    "start": "787770",
    "end": "792930"
  },
  {
    "text": "and keep our latency very low and so at Google a lot of these technologies have being built in so I mentioned earlier",
    "start": "792930",
    "end": "799260"
  },
  {
    "text": "that collecting distributed traces on your own can be quite difficult and at Google it's not mostly because the various",
    "start": "799260",
    "end": "806610"
  },
  {
    "text": "frameworks and technologies that we use inside of the company have these concepts of tracing built in in fact for",
    "start": "806610",
    "end": "812220"
  },
  {
    "text": "most Google services as a developer you don't have to do any extra work to get traces and so this sort of fits with the",
    "start": "812220",
    "end": "818430"
  },
  {
    "text": "theme of things that you've seen generally from Google and other vendors of releasing the same platform components that they've that have made",
    "start": "818430",
    "end": "824910"
  },
  {
    "text": "themselves successful open source through bodies like the CNC F or others right so like a Google like the the",
    "start": "824910",
    "end": "832200"
  },
  {
    "text": "things that allow us to get tracing automatically include not so much board which is this turn eliza's kubernetes",
    "start": "832200",
    "end": "837680"
  },
  {
    "text": "but the internal variants we have of what are effectively a steel envoy and then G RPC right so at Google for",
    "start": "837680",
    "end": "846300"
  },
  {
    "text": "example our equivalent to G RPC internally is called stubby stubby effectively just collects traces",
    "start": "846300",
    "end": "852510"
  },
  {
    "text": "automatically so if you write a service even if you've done no extra effort you can get distributed traces and those",
    "start": "852510",
    "end": "858270"
  },
  {
    "text": "automatic application level metrics from your service in part by open sourcing",
    "start": "858270",
    "end": "863310"
  },
  {
    "text": "open census which is kind of boring Lee just called census inside of Google we were a little less creative with the name we are trying to expose this same",
    "start": "863310",
    "end": "872880"
  },
  {
    "text": "technology to developers everywhere obviously we have you know an offering in the market with stackdriver but to be",
    "start": "872880",
    "end": "879840"
  },
  {
    "text": "blunt like open like stackdriver is not the reason we're open sourcing open census it's actually funded from an entirely different division in the",
    "start": "879840",
    "end": "885510"
  },
  {
    "text": "company it is mostly just so weak our own customers can be more successful on GCP but also so that customers who call",
    "start": "885510",
    "end": "894750"
  },
  {
    "text": "in to our api's and want to get traces and metrics or or have problems with those api's of a way of getting it and",
    "start": "894750",
    "end": "900540"
  },
  {
    "text": "so we're trying to externalise this throughout the industry so that getting traces and metrics becomes really ubiquitous so that you know when we are",
    "start": "900540",
    "end": "907620"
  },
  {
    "text": "debugging a customer issue or even other cloud vendors or other api vendors you're debugging customer issues they can do it much more effectively all",
    "start": "907620",
    "end": "917520"
  },
  {
    "text": "right talk to us about another piece so just a caveat I mean these these are a",
    "start": "917520",
    "end": "925170"
  },
  {
    "text": "little bit forward-looking a lot of this is not done but planned so",
    "start": "925170",
    "end": "932010"
  },
  {
    "text": "I believe people I mean there's been a ton of talks around sto so we don't we",
    "start": "932010",
    "end": "937500"
  },
  {
    "text": "don't need a introduction to that but if you do we use them together and we think",
    "start": "937500",
    "end": "943649"
  },
  {
    "text": "the two together are very useful so and why is that so one is you want to",
    "start": "943649",
    "end": "949769"
  },
  {
    "text": "integrate you can get your open census libraries integrated into let's say new things you're developing or languages",
    "start": "949769",
    "end": "956310"
  },
  {
    "text": "that are supported but what about others and we think having a sidecar model which is to allows with envoy is",
    "start": "956310",
    "end": "962550"
  },
  {
    "text": "actually a very useful one when you want to have everything instrumented in your",
    "start": "962550",
    "end": "967589"
  },
  {
    "text": "system which is and the whole point of tracing is that everything is instrumented so you can go into it so",
    "start": "967589",
    "end": "976370"
  },
  {
    "text": "when you when you do have envoys sitting next to services or sidecars we you",
    "start": "976370",
    "end": "982920"
  },
  {
    "text": "would imagine like this configuration for envoy stats for what needs should be",
    "start": "982920",
    "end": "988709"
  },
  {
    "text": "measured so whatever the metrics are so you need latency error count those are",
    "start": "988709",
    "end": "994130"
  },
  {
    "text": "configured as part of sto configuration which drives on by configuration you can",
    "start": "994130",
    "end": "999750"
  },
  {
    "text": "get application level as well as on roi level tracing into an ex back end of choice through exporters so notice that",
    "start": "999750",
    "end": "1007190"
  },
  {
    "text": "you can get in process application level metrics and tracing through a library",
    "start": "1007190",
    "end": "1012800"
  },
  {
    "text": "approach whereas for you know in Envoy that's a little bit trickier to do that",
    "start": "1012800",
    "end": "1018310"
  },
  {
    "text": "there's so you can get both in a world that you have open sensor libraries and",
    "start": "1018310",
    "end": "1023570"
  },
  {
    "text": "envoys the other piece that exists in is tier for those of you familiar with this to you has a piece called mixer which is",
    "start": "1023570",
    "end": "1029780"
  },
  {
    "text": "an aggregation point which is basically also the policy injection point and you",
    "start": "1029780",
    "end": "1035839"
  },
  {
    "text": "can imagine something like an open census adapter to mixer to enable sort",
    "start": "1035839",
    "end": "1043188"
  },
  {
    "text": "of the exporters to be you know twenty basically your backends so let's say you",
    "start": "1043189",
    "end": "1049100"
  },
  {
    "text": "use Zipkin or Jager those can be integrated through a mixer adapter mixer",
    "start": "1049100",
    "end": "1056660"
  },
  {
    "text": "basically is a central service for those familiar with this do and basically every envoy which is",
    "start": "1056660",
    "end": "1063740"
  },
  {
    "text": "sitting next to every service can report metrics to mixer which can write to the",
    "start": "1063740",
    "end": "1069399"
  },
  {
    "text": "opens through open census adapter to the tracing back noise that has a couple of",
    "start": "1069399",
    "end": "1074510"
  },
  {
    "text": "benefits so when you're using mixer when it's aggregating your traces and metrics with open census it's nice because the",
    "start": "1074510",
    "end": "1082130"
  },
  {
    "text": "exporters are configured in mixers so it's you know you configure it once effectively but also all of each of your",
    "start": "1082130",
    "end": "1087769"
  },
  {
    "text": "notes isn't sending data directly to your back-end they're sending them to your mixer right so you don't necessarily need those nodes connected",
    "start": "1087769",
    "end": "1093620"
  },
  {
    "text": "to the internet if you're using a back-end that's hosted somewhere else which can be nice for security depending on how your applications laid out and",
    "start": "1093620",
    "end": "1101630"
  },
  {
    "text": "you're also decentralizing a lot of traffic through one place longer-term it's also going to let us do probably",
    "start": "1101630",
    "end": "1107870"
  },
  {
    "text": "some pretty interesting things where for example we might do like subsampling on the mixer so you'll collect more traces",
    "start": "1107870",
    "end": "1113960"
  },
  {
    "text": "from each nodes tend into the mixer we might pick and choose which ones are more interesting to then get sent to your back-end for our archival purposes",
    "start": "1113960",
    "end": "1119870"
  },
  {
    "text": "and so it opens up a number of really cool possibilities once we're sending this data to the mixer aggregating it",
    "start": "1119870",
    "end": "1125960"
  },
  {
    "text": "they're working on it there and then sending it to back-end yeah and and you",
    "start": "1125960",
    "end": "1132679"
  },
  {
    "text": "could do aggregation and other kinds of sort of post-processing at the mixer",
    "start": "1132679",
    "end": "1139700"
  },
  {
    "text": "layer and then the other thing which is in in sto you application it's not fully",
    "start": "1139700",
    "end": "1145549"
  },
  {
    "text": "automatic like the application does have to forward headers for every request to",
    "start": "1145549",
    "end": "1150980"
  },
  {
    "text": "Envoy but in a world of open census libraries they could do that job instead",
    "start": "1150980",
    "end": "1156950"
  },
  {
    "text": "of you doing their job so that's another sort of ease-of-use things when they're",
    "start": "1156950",
    "end": "1163429"
  },
  {
    "text": "integrated so the question you should be asking is okay so I thought envoy",
    "start": "1163429",
    "end": "1171049"
  },
  {
    "text": "provides this so why do I need why do I need these two together so there's I",
    "start": "1171049",
    "end": "1179090"
  },
  {
    "text": "mean there's a few things that are obvious which is a bunch of features so you know features which open sensor",
    "start": "1179090",
    "end": "1184340"
  },
  {
    "text": "Springs which is the /z pages which is the ability to create custom tags those",
    "start": "1184340",
    "end": "1191960"
  },
  {
    "text": "are just features that don't exist without open census right the other is",
    "start": "1191960",
    "end": "1198040"
  },
  {
    "text": "correlation so a big value in tracing is being able to correlate that for a given",
    "start": "1198040",
    "end": "1204200"
  },
  {
    "text": "request what were the spans that were what does",
    "start": "1204200",
    "end": "1209360"
  },
  {
    "text": "it trace context and what are the spans that were created and correlating that and seeing latency for every hop and",
    "start": "1209360",
    "end": "1215720"
  },
  {
    "text": "that correlation is something that you would have to do yourself in the absence",
    "start": "1215720",
    "end": "1220790"
  },
  {
    "text": "of an open census library also a lot of the automatic spans that we spoke about",
    "start": "1220790",
    "end": "1227360"
  },
  {
    "text": "when you're using client libraries where open census agent is integrated you would have to sort of you would not get",
    "start": "1227360",
    "end": "1234200"
  },
  {
    "text": "that in a world that there is no open census right so you can use so if you",
    "start": "1234200",
    "end": "1242480"
  },
  {
    "text": "integrate with open census you get app level instrumentation and tracing whereas for additional spans you can use",
    "start": "1242480",
    "end": "1250670"
  },
  {
    "text": "the built-in 1y tracer so it would look something like this and again this is",
    "start": "1250670",
    "end": "1257030"
  },
  {
    "text": "not done but planned to be done you would have an open census library",
    "start": "1257030",
    "end": "1263450"
  },
  {
    "text": "integrated with your actual code probably have on low end sitting next to it if it's part of this do and each of",
    "start": "1263450",
    "end": "1272120"
  },
  {
    "text": "them can be sending metrics and trace data to the back end that you've",
    "start": "1272120",
    "end": "1277790"
  },
  {
    "text": "configured it could be the interesting thing is it could be through mixer or even direct yeah yeah my understanding",
    "start": "1277790",
    "end": "1284780"
  },
  {
    "text": "is that this actually works today's there's a demo we did in February for HTTP but if you're using G RPC we still",
    "start": "1284780",
    "end": "1290510"
  },
  {
    "text": "need to fix that and we're making some pretty big investments into estion on voice support for open census over the coming months I mean just wanted to show",
    "start": "1290510",
    "end": "1301900"
  },
  {
    "text": "what it looks like to make it a little bit real so if you do use open census so",
    "start": "1301900",
    "end": "1310370"
  },
  {
    "text": "there's a so this is a simple hello world code for using open census go",
    "start": "1310370",
    "end": "1318290"
  },
  {
    "text": "library so notice you just all you're doing is just basically using the open",
    "start": "1318290",
    "end": "1325220"
  },
  {
    "text": "census your PC library you are right and exporter so there's a concept of",
    "start": "1325220",
    "end": "1330669"
  },
  {
    "text": "exporter with open census which is where do I want my metrics and traces to be exported so you register them in this",
    "start": "1330669",
    "end": "1337450"
  },
  {
    "text": "case Prometheus exporter is being registered for metrics and stackdriver exporter is",
    "start": "1337450",
    "end": "1344679"
  },
  {
    "text": "being registered for trace so it's a simple API call to do that and then there's a bunch of predefined metrics so",
    "start": "1344679",
    "end": "1353350"
  },
  {
    "text": "you say okay for open census I want in my view metrics I want round trip",
    "start": "1353350",
    "end": "1360880"
  },
  {
    "text": "latency PU and I want error count for you right and those should be registered and that's about it",
    "start": "1360880",
    "end": "1366970"
  },
  {
    "text": "right there's if there's a whole bunch of others that you could and this is the",
    "start": "1366970",
    "end": "1371980"
  },
  {
    "text": "one that gives you the Z pages so there's a basically starts up a simple",
    "start": "1371980",
    "end": "1377679"
  },
  {
    "text": "HTTP server which can show the /zi HTML page that we were showing in the slides",
    "start": "1377679",
    "end": "1383770"
  },
  {
    "text": "before so that's basically simple open",
    "start": "1383770",
    "end": "1389200"
  },
  {
    "text": "senses go library into a hollow word code okay so when you do that you",
    "start": "1389200",
    "end": "1396970"
  },
  {
    "text": "actually and in this case we registered to stack driver for phrase and metrics",
    "start": "1396970",
    "end": "1405730"
  },
  {
    "text": "just for this demo okay yes so we did both sigh driver all right yeah so if",
    "start": "1405730",
    "end": "1410830"
  },
  {
    "text": "you go look at metrics so you get basically without you doing anything you",
    "start": "1410830",
    "end": "1417429"
  },
  {
    "text": "do get 50 you know P 50 P 99 in sort of latency this is just hello say hello",
    "start": "1417429",
    "end": "1424899"
  },
  {
    "text": "method G RPC method on client and server so and if your this is just randomized",
    "start": "1424899",
    "end": "1432309"
  },
  {
    "text": "on sort of request sizes that's why these it's all over the place but these",
    "start": "1432309",
    "end": "1437559"
  },
  {
    "text": "are graphs you can get sort of without you doing any work and in this case and",
    "start": "1437559",
    "end": "1443289"
  },
  {
    "text": "it could you could get it in the backend that you desire so including error count",
    "start": "1443289",
    "end": "1450130"
  },
  {
    "text": "round-trip latency which we registered in our code the question response bytes and of course counts and all of these",
    "start": "1450130",
    "end": "1457299"
  },
  {
    "text": "metrics you see here these are automatically captured by open sentence you don't have to like write code and if I these these are ones that open since its",
    "start": "1457299",
    "end": "1462580"
  },
  {
    "text": "pulls in you of course have AP is to go and define your own metrics and send custom metrics right so that's metrics",
    "start": "1462580",
    "end": "1473020"
  },
  {
    "text": "and then you can looking at tracing so",
    "start": "1473020",
    "end": "1478260"
  },
  {
    "text": "this is a we registered stackdriver trace so this is looking at a bunch of",
    "start": "1478260",
    "end": "1486570"
  },
  {
    "text": "tracings so you have your first this is your actual trace with a sort of one",
    "start": "1486570",
    "end": "1492790"
  },
  {
    "text": "span just you sent hello world it took so many milliseconds so many bytes and",
    "start": "1492790",
    "end": "1499120"
  },
  {
    "text": "it received and what so often this is you know in a complicated call flow",
    "start": "1499120",
    "end": "1504850"
  },
  {
    "text": "graph this is becomes an extremely useful tool to say which service which",
    "start": "1504850",
    "end": "1511510"
  },
  {
    "text": "method in that service took how much time and where is the bottleneck so it's it becomes a very very useful tool in in",
    "start": "1511510",
    "end": "1520000"
  },
  {
    "text": "complicated scenarios also when you have you can go look at any given specific",
    "start": "1520000",
    "end": "1526360"
  },
  {
    "text": "requests at a given time you can look at simple things like how many RPC is what",
    "start": "1526360",
    "end": "1533200"
  },
  {
    "text": "duration it was and this is coming from open senses co-agent",
    "start": "1533200",
    "end": "1538200"
  },
  {
    "text": "anything to add here would back the presentation all right",
    "start": "1539640",
    "end": "1546510"
  },
  {
    "text": "so this cord is available and github at that link if you want to play with it",
    "start": "1548430",
    "end": "1554730"
  },
  {
    "text": "yourself so we we have a lot of things",
    "start": "1554730",
    "end": "1561180"
  },
  {
    "text": "that are coming forth both for open census as well as open census with sto so we we look at sort of the title of",
    "start": "1561180",
    "end": "1568830"
  },
  {
    "text": "this talk is do an open census and the things that are focused on that we're completing our support for envoy and",
    "start": "1568830",
    "end": "1574260"
  },
  {
    "text": "then we're gonna be making some pretty big investments into new features that'll be accomplished by the mixer so",
    "start": "1574260",
    "end": "1579420"
  },
  {
    "text": "that's the aggregation and and perhaps like subsampling another things that i talked about earlier when I talked when",
    "start": "1579420",
    "end": "1585840"
  },
  {
    "text": "we think about just open census on its own which includes open census and on boy but just the open census really",
    "start": "1585840",
    "end": "1591000"
  },
  {
    "text": "running in any environment we have a lot in the pipeline the first is just more integrations so right now we have you",
    "start": "1591000",
    "end": "1597930"
  },
  {
    "text": "know Mike MongoDB and a number of other databases we're building integrations for various web frameworks we've I think",
    "start": "1597930",
    "end": "1603630"
  },
  {
    "text": "we already shipped G RPC but for spraying and and you know other other web frameworks across various languages",
    "start": "1603630",
    "end": "1610140"
  },
  {
    "text": "so you can get those automatic traces and perform correlations completely autonomously next we're also finishing",
    "start": "1610140",
    "end": "1617010"
  },
  {
    "text": "our library support across all eight languages so right now we have tracing and metric support for c++ go and java",
    "start": "1617010",
    "end": "1623490"
  },
  {
    "text": "we have tracing only support for Python PHP and Ruby I think and we're adding",
    "start": "1623490",
    "end": "1629790"
  },
  {
    "text": "we're gonna be building support for dotnet and nodejs there's also some community contributed",
    "start": "1629790",
    "end": "1635520"
  },
  {
    "text": "libraries so I think we actually technically support like Erlang for example and that's just a large",
    "start": "1635520",
    "end": "1641160"
  },
  {
    "text": "community contribution next we're longer-term we're gonna be focusing on client-side instrumentation",
    "start": "1641160",
    "end": "1647760"
  },
  {
    "text": "for mobile and web apps so today most distributed tracing solutions focus on back-end tracing so tracing requests as",
    "start": "1647760",
    "end": "1655050"
  },
  {
    "text": "they hop between your micro services but that doesn't actually give you a good visualization of client-side latency or",
    "start": "1655050",
    "end": "1660500"
  },
  {
    "text": "like the causes of the latency of your customers are experiencing for example if you get a customer who complains that",
    "start": "1660500",
    "end": "1666300"
  },
  {
    "text": "your website is slow and you know it's just not fast enough it might be that they're just on a really slow internet connection in which case there's not",
    "start": "1666300",
    "end": "1672090"
  },
  {
    "text": "much you can do about that so by building in support for mobile apps web apps desktop apps you'll be able to get",
    "start": "1672090",
    "end": "1678510"
  },
  {
    "text": "traces that actually start with the the client request next is something we're calling more",
    "start": "1678510",
    "end": "1683890"
  },
  {
    "text": "intelligence handling so traces these days are generally sampled somewhat randomly so sometimes it's percentage",
    "start": "1683890",
    "end": "1691090"
  },
  {
    "text": "based where the your application might just sample like 1% of traces or something like that really what you want",
    "start": "1691090",
    "end": "1697240"
  },
  {
    "text": "for just super trace sampling is to sample requests that are interesting either those that are slow those that",
    "start": "1697240",
    "end": "1702400"
  },
  {
    "text": "have errors or those that are correlated with some other interesting event and so we're making investments into features",
    "start": "1702400",
    "end": "1708430"
  },
  {
    "text": "that we call like retroactive tracing or deferred sampling to be able to capture traces or perform that sampling decision",
    "start": "1708430",
    "end": "1714070"
  },
  {
    "text": "partway down the stack so you can still get a full trace but you might your traces might be skewed towards higher",
    "start": "1714070",
    "end": "1720130"
  },
  {
    "text": "latency requests a requests with errors which is really really powerful if you're not as familiar of tracing it",
    "start": "1720130",
    "end": "1726340"
  },
  {
    "text": "might sound like not that compelling but generally most of the traces that you",
    "start": "1726340",
    "end": "1731860"
  },
  {
    "text": "view in basically any tracing system aren't that useful because they're describing the average customer request so useful for understanding topology but",
    "start": "1731860",
    "end": "1738160"
  },
  {
    "text": "not for chasing down the root cause of an issue with more intelligent sampling more the higher percent of your traces",
    "start": "1738160",
    "end": "1743950"
  },
  {
    "text": "will actually be interesting and actionable finally our big long-term ambition for open census is it for it to",
    "start": "1743950",
    "end": "1750520"
  },
  {
    "text": "be the library that you use to capture like basically all of your applications telemetry today we do traces and metrics",
    "start": "1750520",
    "end": "1758350"
  },
  {
    "text": "and tags longer-term we're looking at other types of telemetry whether those be logs profiles errors anything else",
    "start": "1758350",
    "end": "1765460"
  },
  {
    "text": "and we'll be adding those into open census as we go forward I think that's",
    "start": "1765460",
    "end": "1770500"
  },
  {
    "text": "it so if anybody has any questions we're up here and we can we can answer those I",
    "start": "1770500",
    "end": "1776890"
  },
  {
    "text": "think we still have some time left five minutes yeah so we can do five minutes of questions on stage and then we can do",
    "start": "1776890",
    "end": "1782380"
  },
  {
    "text": "questions in person after that",
    "start": "1782380",
    "end": "1785670"
  },
  {
    "text": "like middleboxes say fireballs or something yeah yeah and and so the",
    "start": "1796630",
    "end": "1805690"
  },
  {
    "text": "question was how do we do tracing if there's something else that you don't own that's in the way it's like a firewall and just to clarify you mean",
    "start": "1805690",
    "end": "1812110"
  },
  {
    "text": "how do we make sure there's a complete trace or are you more interested in getting metadata out of that component",
    "start": "1812110",
    "end": "1817980"
  },
  {
    "text": "yeah yeah so there's there's a number of things that we're doing so just to",
    "start": "1824610",
    "end": "1831970"
  },
  {
    "text": "ensure that the trace is complete there's the trace context working group which we actually kicked off about a",
    "start": "1831970",
    "end": "1837160"
  },
  {
    "text": "year ago just to make sure that like any third party services don't strip any trace headers though in terms of getting",
    "start": "1837160",
    "end": "1842260"
  },
  {
    "text": "metadata out of that there's a few different opportunities that we're",
    "start": "1842260",
    "end": "1848140"
  },
  {
    "text": "looking at in terms of maybe propagating some kind of metadata along for the context that would at least give you",
    "start": "1848140",
    "end": "1854020"
  },
  {
    "text": "like the network time versus like the compute time for example beyond that",
    "start": "1854020",
    "end": "1860040"
  },
  {
    "text": "we've been sort of ping-ponging around the idea of like sort of standardized API is for tracing that could send data",
    "start": "1860040",
    "end": "1865300"
  },
  {
    "text": "like sort of Web API is they can send data to a back-end but we don't have anything that we're like working on like",
    "start": "1865300",
    "end": "1870850"
  },
  {
    "text": "right now for that it's a pretty tricky problem especially when you're dealing with so many different vendors of different appliances there's a reason",
    "start": "1870850",
    "end": "1880120"
  },
  {
    "text": "like no one's really done",
    "start": "1880120",
    "end": "1882690"
  },
  {
    "text": "yeah yes I think in the industry that is in general a gap between application",
    "start": "1888660",
    "end": "1896970"
  },
  {
    "text": "performance measurement and like network monitoring like the two have never really met in useful ways as and they",
    "start": "1896970",
    "end": "1903700"
  },
  {
    "text": "should but I think as you see adoption of like open census through other cloud vendors which is something we're working",
    "start": "1903700",
    "end": "1909760"
  },
  {
    "text": "on at least when you're in their environment you might get more metadata back because they control that but in",
    "start": "1909760",
    "end": "1915160"
  },
  {
    "text": "terms of like embedding this support into like third party like switches from I don't know Cisco or someone that's a",
    "start": "1915160",
    "end": "1921190"
  },
  {
    "text": "whole separate conversation yeah hopefully yes yeah right right we can",
    "start": "1921190",
    "end": "1929280"
  },
  {
    "text": "talk more about yeah that's an interesting any other questions that we could answer ah ha yeah",
    "start": "1929280",
    "end": "1939350"
  },
  {
    "text": "yeah yes so the question was about resource",
    "start": "1946350",
    "end": "1952740"
  },
  {
    "text": "consumption for open census and just in general capturing telemetry so in general the the resource consumption of",
    "start": "1952740",
    "end": "1959580"
  },
  {
    "text": "open census is effectively zero or negligible this is part of the reason that we sample traces for example if you",
    "start": "1959580",
    "end": "1965700"
  },
  {
    "text": "don't sample traces that becomes you know like the resource consumption becomes more obvious and more measurable",
    "start": "1965700",
    "end": "1972500"
  },
  {
    "text": "but no like in general open census as well as just you know speaking just from from Google and stackdriver any of our",
    "start": "1972500",
    "end": "1978720"
  },
  {
    "text": "telemetry collection technology aims to be like basically no impact frankly",
    "start": "1978720",
    "end": "1985169"
  },
  {
    "text": "technologies like this aren't necessarily that useful if they're going to start running up your bill or making",
    "start": "1985169",
    "end": "1991590"
  },
  {
    "text": "your application perform more slowly right like the goal of these is that you can run them in production safely with no impact and like for reference like",
    "start": "1991590",
    "end": "1999659"
  },
  {
    "text": "internally at Google we like this stuff is all there and it's running and we get both minimal impact from it and also",
    "start": "1999659",
    "end": "2005510"
  },
  {
    "text": "that the value we extract is huge so it's definitely port it's obviously not zero but yeah but",
    "start": "2005510",
    "end": "2012679"
  },
  {
    "text": "it's yeah but the point is value trumps whatever resource utilization consumption and corresponding bill yeah",
    "start": "2012679",
    "end": "2024730"
  },
  {
    "text": "that's a good question yes so open tracing defines an API for",
    "start": "2025870",
    "end": "2030919"
  },
  {
    "text": "collecting traces from and there's a community around that open census defines of course an API for tracing",
    "start": "2030919",
    "end": "2036710"
  },
  {
    "text": "metrics and other other telemetry and also has the implementation the API is for open census and open tracing while",
    "start": "2036710",
    "end": "2043309"
  },
  {
    "text": "similar are not identical as many people often point out I believe we had a pull request from the community that added",
    "start": "2043309",
    "end": "2050240"
  },
  {
    "text": "Civ not changed the existing open census API but added support for open tracing as well I think we either accepted that",
    "start": "2050240",
    "end": "2056330"
  },
  {
    "text": "or we're about to so while the API is at the moment you know we've had a lot of conversations with ban in the open",
    "start": "2056330",
    "end": "2062300"
  },
  {
    "text": "tracing community at the moment it doesn't seem like the api's are going to converge but we do have compatibility",
    "start": "2062300",
    "end": "2067339"
  },
  {
    "text": "for it and if it's I I don't know if the pull request is like done or not but",
    "start": "2067339",
    "end": "2072858"
  },
  {
    "text": "it's in review and it's gonna happen all",
    "start": "2072859",
    "end": "2080030"
  },
  {
    "text": "right all right I think we're done thank you very much for coming thank you",
    "start": "2080030",
    "end": "2085300"
  }
]