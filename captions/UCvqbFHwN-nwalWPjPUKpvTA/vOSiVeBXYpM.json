[
  {
    "start": "0",
    "end": "138000"
  },
  {
    "text": "Welcome to our talk conference",
    "start": "40",
    "end": "1280"
  },
  {
    "text": "multicloud journey to pitfalls and",
    "start": "1280",
    "end": "3919"
  },
  {
    "text": "Lessons Learned uh this is Nisha my name",
    "start": "3919",
    "end": "7160"
  },
  {
    "text": "is ivaro we both work at confluent as",
    "start": "7160",
    "end": "9599"
  },
  {
    "text": "software engineers in what's internally",
    "start": "9599",
    "end": "11360"
  },
  {
    "text": "called the platform",
    "start": "11360",
    "end": "13719"
  },
  {
    "text": "team today we're going to talk about our",
    "start": "13719",
    "end": "17160"
  },
  {
    "text": "migration to celum we're going to start",
    "start": "17160",
    "end": "19920"
  },
  {
    "text": "with giving a bit of background about",
    "start": "19920",
    "end": "21600"
  },
  {
    "text": "conflent um and our usage of celium we",
    "start": "21600",
    "end": "24320"
  },
  {
    "text": "will talk about the migration process as",
    "start": "24320",
    "end": "26320"
  },
  {
    "text": "such um about the issues we encountered",
    "start": "26320",
    "end": "28920"
  },
  {
    "text": "along the way and leave with our",
    "start": "28920",
    "end": "32238"
  },
  {
    "text": "conclusion to give some background what",
    "start": "32239",
    "end": "34399"
  },
  {
    "text": "does confluent even do so generally",
    "start": "34399",
    "end": "36399"
  },
  {
    "text": "speaking we offer products related to",
    "start": "36399",
    "end": "38160"
  },
  {
    "text": "data streaming and data stream",
    "start": "38160",
    "end": "39800"
  },
  {
    "text": "processing um a big part of that is",
    "start": "39800",
    "end": "42079"
  },
  {
    "text": "conflent cloud which is basically a",
    "start": "42079",
    "end": "43719"
  },
  {
    "text": "managed version of all of these this",
    "start": "43719",
    "end": "45719"
  },
  {
    "text": "includes things like C link and connect",
    "start": "45719",
    "end": "49039"
  },
  {
    "text": "and this is available on AWS Aza and gcp",
    "start": "49039",
    "end": "51640"
  },
  {
    "text": "in 91 regions total um why does any any",
    "start": "51640",
    "end": "55960"
  },
  {
    "text": "of this matter so the um what this means",
    "start": "55960",
    "end": "60440"
  },
  {
    "text": "is we have to manage a ton of",
    "start": "60440",
    "end": "61800"
  },
  {
    "text": "infrastructure because we have to be not",
    "start": "61800",
    "end": "63480"
  },
  {
    "text": "only in the same Cloud but also in the",
    "start": "63480",
    "end": "64960"
  },
  {
    "text": "same region as our",
    "start": "64960",
    "end": "66360"
  },
  {
    "text": "customers because otherwise the",
    "start": "66360",
    "end": "68080"
  },
  {
    "text": "economics of the whole thing just don't",
    "start": "68080",
    "end": "70119"
  },
  {
    "text": "work out um because all the clouds have",
    "start": "70119",
    "end": "72320"
  },
  {
    "text": "data transfer fees um yeah and this",
    "start": "72320",
    "end": "74560"
  },
  {
    "text": "entails we have a ton of infrastructure",
    "start": "74560",
    "end": "76000"
  },
  {
    "text": "and specifically we have a ton of qu",
    "start": "76000",
    "end": "77920"
  },
  {
    "text": "clusters um because we have to have a",
    "start": "77920",
    "end": "79960"
  },
  {
    "text": "presence in all of",
    "start": "79960",
    "end": "82880"
  },
  {
    "text": "these so why did we decide to use serum",
    "start": "82960",
    "end": "86479"
  },
  {
    "text": "so the primary motivation from our",
    "start": "86479",
    "end": "88479"
  },
  {
    "text": "perspective it's a CU feature features",
    "start": "88479",
    "end": "90680"
  },
  {
    "text": "and most notably the transparent",
    "start": "90680",
    "end": "92200"
  },
  {
    "text": "encryption and we are user of that we",
    "start": "92200",
    "end": "94520"
  },
  {
    "text": "are very heavy user of the DNS based",
    "start": "94520",
    "end": "96240"
  },
  {
    "text": "Network policy we use them basically",
    "start": "96240",
    "end": "98520"
  },
  {
    "text": "everywhere the observability from Hubble",
    "start": "98520",
    "end": "101040"
  },
  {
    "text": "helps up a",
    "start": "101040",
    "end": "102200"
  },
  {
    "text": "lot um and the other point is",
    "start": "102200",
    "end": "104159"
  },
  {
    "text": "consistency so as I said um we using a",
    "start": "104159",
    "end": "107200"
  },
  {
    "text": "lot it helps us to kind of abstract the",
    "start": "107200",
    "end": "108960"
  },
  {
    "text": "clouds away um and prior to using we",
    "start": "108960",
    "end": "112159"
  },
  {
    "text": "basically had whatever the cloud natives",
    "start": "112159",
    "end": "115479"
  },
  {
    "text": "um the cloud providers uh Native cni I",
    "start": "115479",
    "end": "119159"
  },
  {
    "text": "offered",
    "start": "119159",
    "end": "120520"
  },
  {
    "text": "with we basically have the",
    "start": "120520",
    "end": "122159"
  },
  {
    "text": "possibility to offer uh the same",
    "start": "122159",
    "end": "124079"
  },
  {
    "text": "features everywhere and lastly we have",
    "start": "124079",
    "end": "126399"
  },
  {
    "text": "ton of infrastructure and we're going to",
    "start": "126399",
    "end": "128479"
  },
  {
    "text": "run into some interesting issues as we",
    "start": "128479",
    "end": "130200"
  },
  {
    "text": "will see later so it's extremely",
    "start": "130200",
    "end": "132000"
  },
  {
    "text": "reassuring to know that we have support",
    "start": "132000",
    "end": "134200"
  },
  {
    "text": "and access to subject mattera experts if",
    "start": "134200",
    "end": "136519"
  },
  {
    "text": "you need",
    "start": "136519",
    "end": "138360"
  },
  {
    "start": "138000",
    "end": "375000"
  },
  {
    "text": "this um yeah so how we enabled uh selum",
    "start": "138360",
    "end": "142400"
  },
  {
    "text": "across most of our fleet was by doing a",
    "start": "142400",
    "end": "144519"
  },
  {
    "text": "migration uh and as Alvaro said it was",
    "start": "144519",
    "end": "147239"
  },
  {
    "text": "migrating from the default cni that",
    "start": "147239",
    "end": "148920"
  },
  {
    "text": "these clusters were already using to use",
    "start": "148920",
    "end": "150800"
  },
  {
    "text": "celium instead uh and these are",
    "start": "150800",
    "end": "153000"
  },
  {
    "text": "production clusters serving live traffic",
    "start": "153000",
    "end": "155239"
  },
  {
    "text": "and you know they have stateful uh",
    "start": "155239",
    "end": "156599"
  },
  {
    "text": "workloads on them um and we are trying",
    "start": "156599",
    "end": "159159"
  },
  {
    "text": "to replace the cni which is a very",
    "start": "159159",
    "end": "160920"
  },
  {
    "text": "low-level component and maybe can be",
    "start": "160920",
    "end": "162959"
  },
  {
    "text": "risky so the simplest and cleanest way",
    "start": "162959",
    "end": "165959"
  },
  {
    "text": "we thought to do this was by bringing up",
    "start": "165959",
    "end": "168159"
  },
  {
    "text": "new nodes with the new cni which is",
    "start": "168159",
    "end": "170040"
  },
  {
    "text": "celium instead of uh you know changing",
    "start": "170040",
    "end": "172680"
  },
  {
    "text": "something on the existing nodes so let's",
    "start": "172680",
    "end": "174920"
  },
  {
    "text": "look at this in a little more detail",
    "start": "174920",
    "end": "176760"
  },
  {
    "text": "starting with AWS uh so if you uh create",
    "start": "176760",
    "end": "179840"
  },
  {
    "text": "create eks cluster you get the AWS VPC",
    "start": "179840",
    "end": "183040"
  },
  {
    "text": "cni installed by default and it deploys",
    "start": "183040",
    "end": "185239"
  },
  {
    "text": "this AWS node demon Set uh on all the",
    "start": "185239",
    "end": "188280"
  },
  {
    "text": "nodes and the first step of the",
    "start": "188280",
    "end": "190159"
  },
  {
    "text": "migration was that we patched this uh",
    "start": "190159",
    "end": "192680"
  },
  {
    "text": "Damon set to have an affinity such that",
    "start": "192680",
    "end": "195640"
  },
  {
    "text": "it doesn't run on nodes having the cni",
    "start": "195640",
    "end": "198519"
  },
  {
    "text": "equals celium label so it runs on all",
    "start": "198519",
    "end": "200799"
  },
  {
    "text": "nodes except those having the label and",
    "start": "200799",
    "end": "203440"
  },
  {
    "text": "then we just bring up new nodes having",
    "start": "203440",
    "end": "205200"
  },
  {
    "text": "that cni equals cium label along with a",
    "start": "205200",
    "end": "207319"
  },
  {
    "text": "no execute taint uh this node remains",
    "start": "207319",
    "end": "210239"
  },
  {
    "text": "not ready until celium is done",
    "start": "210239",
    "end": "212080"
  },
  {
    "text": "configuring it and this is so that",
    "start": "212080",
    "end": "214400"
  },
  {
    "text": "workloads don't get scheduled on it",
    "start": "214400",
    "end": "216400"
  },
  {
    "text": "until then and then we just install",
    "start": "216400",
    "end": "218879"
  },
  {
    "text": "celium uh this time to the celium agent",
    "start": "218879",
    "end": "221319"
  },
  {
    "text": "we say uh we give it the Affinity that",
    "start": "221319",
    "end": "223640"
  },
  {
    "text": "it should be scheduled only on the cni",
    "start": "223640",
    "end": "225599"
  },
  {
    "text": "equal celium nodes uh and after that",
    "start": "225599",
    "end": "228840"
  },
  {
    "text": "it's just a matter of migrating our",
    "start": "228840",
    "end": "231879"
  },
  {
    "text": "application pods to those nodes and we",
    "start": "231879",
    "end": "234040"
  },
  {
    "text": "do this by cordoning the old nodes and",
    "start": "234040",
    "end": "236159"
  },
  {
    "text": "evicting the pods one by one so one",
    "start": "236159",
    "end": "238840"
  },
  {
    "text": "thing to note at this point the cluster",
    "start": "238840",
    "end": "240959"
  },
  {
    "text": "is in a mixed state where some nodes are",
    "start": "240959",
    "end": "242840"
  },
  {
    "text": "being managed by celium but some by AWS",
    "start": "242840",
    "end": "246040"
  },
  {
    "text": "and this still works in terms of routing",
    "start": "246040",
    "end": "248079"
  },
  {
    "text": "and network connectivity because at the",
    "start": "248079",
    "end": "249640"
  },
  {
    "text": "end of the day they are both using uh",
    "start": "249640",
    "end": "252040"
  },
  {
    "text": "Native",
    "start": "252040",
    "end": "253519"
  },
  {
    "text": "routing uh after that at the end of the",
    "start": "253519",
    "end": "256079"
  },
  {
    "text": "migration we just delete the old nodes",
    "start": "256079",
    "end": "258040"
  },
  {
    "text": "and then uh eventually the VPC cni from",
    "start": "258040",
    "end": "260320"
  },
  {
    "text": "the cluster at this point cni is sorry",
    "start": "260320",
    "end": "263120"
  },
  {
    "text": "celium is the exclusive uh cni in the",
    "start": "263120",
    "end": "267360"
  },
  {
    "text": "cluster um on gcp uh our clusters use",
    "start": "267360",
    "end": "271240"
  },
  {
    "text": "gke data plane V1 uh it's worth",
    "start": "271240",
    "end": "274039"
  },
  {
    "text": "mentioning that GK data plane V2",
    "start": "274039",
    "end": "276240"
  },
  {
    "text": "clusters actually do is implemented uh",
    "start": "276240",
    "end": "279520"
  },
  {
    "text": "using celium under the hood um so the",
    "start": "279520",
    "end": "282280"
  },
  {
    "text": "migration on gcp for us was very similar",
    "start": "282280",
    "end": "285320"
  },
  {
    "text": "as adws with one difference which is",
    "start": "285320",
    "end": "288080"
  },
  {
    "text": "that the default gke cni is always",
    "start": "288080",
    "end": "290720"
  },
  {
    "text": "present on the nodes so it cannot really",
    "start": "290720",
    "end": "293000"
  },
  {
    "text": "be uninstalled and the way celum then",
    "start": "293000",
    "end": "295160"
  },
  {
    "text": "takes over is by becoming the exclusive",
    "start": "295160",
    "end": "297880"
  },
  {
    "text": "cni there's a Helm value for that",
    "start": "297880",
    "end": "300360"
  },
  {
    "text": "um and it takes over the ATC cni ND",
    "start": "300360",
    "end": "303080"
  },
  {
    "text": "directory basically uh another kvr here",
    "start": "303080",
    "end": "306360"
  },
  {
    "text": "was that uh on gke WE inherit this net D",
    "start": "306360",
    "end": "310240"
  },
  {
    "text": "Damon Set uh it comes with certain",
    "start": "310240",
    "end": "312960"
  },
  {
    "text": "features of gke such as workload",
    "start": "312960",
    "end": "314600"
  },
  {
    "text": "identity Etc and uh it implements some",
    "start": "314600",
    "end": "317759"
  },
  {
    "text": "networking features and can sometimes",
    "start": "317759",
    "end": "319479"
  },
  {
    "text": "conflict with csum as we'll see in a",
    "start": "319479",
    "end": "321840"
  },
  {
    "text": "little",
    "start": "321840",
    "end": "323000"
  },
  {
    "text": "bit on Azure there is a multi-step uh",
    "start": "323000",
    "end": "326720"
  },
  {
    "text": "kind of complex migration path but it is",
    "start": "326720",
    "end": "328639"
  },
  {
    "text": "officially supported",
    "start": "328639",
    "end": "330240"
  },
  {
    "text": "uh so you start out in the Azure cni or",
    "start": "330240",
    "end": "332840"
  },
  {
    "text": "cubet uh mode and then you go to Azure",
    "start": "332840",
    "end": "335400"
  },
  {
    "text": "cni overlay uh then to Azure cni powered",
    "start": "335400",
    "end": "338120"
  },
  {
    "text": "by celium and then optionally to celium",
    "start": "338120",
    "end": "340479"
  },
  {
    "text": "Enterprise from the Azure Marketplace uh",
    "start": "340479",
    "end": "343000"
  },
  {
    "text": "two things here at the end of this",
    "start": "343000",
    "end": "344759"
  },
  {
    "text": "migration you will always end up with",
    "start": "344759",
    "end": "346560"
  },
  {
    "text": "celium in overlay mode because you have",
    "start": "346560",
    "end": "348759"
  },
  {
    "text": "to go through this overlay step and the",
    "start": "348759",
    "end": "351240"
  },
  {
    "text": "other thing is that uh in this other",
    "start": "351240",
    "end": "354199"
  },
  {
    "text": "step uh Azure C powered by celium celium",
    "start": "354199",
    "end": "357039"
  },
  {
    "text": "is not really configurable so if you do",
    "start": "357039",
    "end": "359400"
  },
  {
    "text": "want to to configure it uh the helm",
    "start": "359400",
    "end": "361160"
  },
  {
    "text": "values you have to go to the Enterprise",
    "start": "361160",
    "end": "363800"
  },
  {
    "text": "um and at confluent we didn't end up",
    "start": "363800",
    "end": "366120"
  },
  {
    "text": "actually implementing this path because",
    "start": "366120",
    "end": "367440"
  },
  {
    "text": "it involves multiple node Replacements",
    "start": "367440",
    "end": "369280"
  },
  {
    "text": "and it's a bit complex but we do install",
    "start": "369280",
    "end": "371639"
  },
  {
    "text": "celum on new Azure clusters by",
    "start": "371639",
    "end": "374240"
  },
  {
    "text": "default cool okay let's get to the fun",
    "start": "374240",
    "end": "378000"
  },
  {
    "start": "375000",
    "end": "562000"
  },
  {
    "text": "stuff namely the issues we encountered",
    "start": "378000",
    "end": "379919"
  },
  {
    "text": "along the way so the first one I'm going",
    "start": "379919",
    "end": "382080"
  },
  {
    "text": "to talk about is specific to AWS and",
    "start": "382080",
    "end": "384440"
  },
  {
    "text": "reverse path",
    "start": "384440",
    "end": "385800"
  },
  {
    "text": "filtering so in order to understand this",
    "start": "385800",
    "end": "388120"
  },
  {
    "text": "you have to have some basic",
    "start": "388120",
    "end": "389800"
  },
  {
    "text": "understanding on how networking AWS",
    "start": "389800",
    "end": "392000"
  },
  {
    "text": "works specifically when using an",
    "start": "392000",
    "end": "393319"
  },
  {
    "text": "internet gateway so basically the",
    "start": "393319",
    "end": "395639"
  },
  {
    "text": "instance gets a network interface",
    "start": "395639",
    "end": "397319"
  },
  {
    "text": "attached and this network interface has",
    "start": "397319",
    "end": "399000"
  },
  {
    "text": "both a private and a public IP address",
    "start": "399000",
    "end": "401479"
  },
  {
    "text": "and then the insert itself it only sees",
    "start": "401479",
    "end": "403080"
  },
  {
    "text": "the private IP address and uses that to",
    "start": "403080",
    "end": "406280"
  },
  {
    "text": "uh reach the internet gateway which then",
    "start": "406280",
    "end": "408039"
  },
  {
    "text": "looks up the public IP um and uses that",
    "start": "408039",
    "end": "411039"
  },
  {
    "text": "to actually send the traffic off to the",
    "start": "411039",
    "end": "413319"
  },
  {
    "text": "internet enum's job of course is to give",
    "start": "413319",
    "end": "416160"
  },
  {
    "text": "every port its own IP address so what it",
    "start": "416160",
    "end": "418160"
  },
  {
    "text": "does is it simply adds additional IP",
    "start": "418160",
    "end": "420479"
  },
  {
    "text": "addresses to this existing network",
    "start": "420479",
    "end": "422280"
  },
  {
    "text": "interface that works great the problem",
    "start": "422280",
    "end": "424919"
  },
  {
    "text": "however is that these network interfaces",
    "start": "424919",
    "end": "426960"
  },
  {
    "text": "have a limit in terms of how many IP",
    "start": "426960",
    "end": "428800"
  },
  {
    "text": "addresses can be allocated so at some",
    "start": "428800",
    "end": "431120"
  },
  {
    "text": "point it has to add a second interface",
    "start": "431120",
    "end": "432960"
  },
  {
    "text": "and then allocate more IP addresses on",
    "start": "432960",
    "end": "434720"
  },
  {
    "text": "the second interface but all these",
    "start": "434720",
    "end": "437199"
  },
  {
    "text": "sports are of course supposed to be able",
    "start": "437199",
    "end": "439120"
  },
  {
    "text": "to reach the internet so in order to",
    "start": "439120",
    "end": "441039"
  },
  {
    "text": "make that happen um there are some rules",
    "start": "441039",
    "end": "443639"
  },
  {
    "text": "that basically specify that all traffic",
    "start": "443639",
    "end": "446440"
  },
  {
    "text": "that has a destination outside of the",
    "start": "446440",
    "end": "448319"
  },
  {
    "text": "VPC of this class",
    "start": "448319",
    "end": "450319"
  },
  {
    "text": "um goes out of the primary interface um",
    "start": "450319",
    "end": "453160"
  },
  {
    "text": "and gets masqueraded which then enables",
    "start": "453160",
    "end": "455080"
  },
  {
    "text": "internet connectivity for all of the",
    "start": "455080",
    "end": "456879"
  },
  {
    "text": "ports which works great um until you try",
    "start": "456879",
    "end": "460160"
  },
  {
    "text": "to reach a PO from a p at VPC um so what",
    "start": "460160",
    "end": "463240"
  },
  {
    "text": "happens in that case is that the traffic",
    "start": "463240",
    "end": "465919"
  },
  {
    "text": "if it hits a pot that's on that has its",
    "start": "465919",
    "end": "468639"
  },
  {
    "text": "IP address on a secondary interface um",
    "start": "468639",
    "end": "471000"
  },
  {
    "text": "it will go into the secondary interface",
    "start": "471000",
    "end": "473240"
  },
  {
    "text": "but then the routing rules on the Node",
    "start": "473240",
    "end": "475080"
  },
  {
    "text": "they specify that the response has to go",
    "start": "475080",
    "end": "477039"
  },
  {
    "text": "out of the primary interface um because",
    "start": "477039",
    "end": "479840"
  },
  {
    "text": "the destination is outside of the VPC of",
    "start": "479840",
    "end": "482039"
  },
  {
    "text": "the qu cluster and the problem with that",
    "start": "482039",
    "end": "484560"
  },
  {
    "text": "in turn is that this doesn't actually",
    "start": "484560",
    "end": "486800"
  },
  {
    "text": "work because Linux has this thing called",
    "start": "486800",
    "end": "488560"
  },
  {
    "text": "the reverse path filter and it basically",
    "start": "488560",
    "end": "491680"
  },
  {
    "text": "has some rules that specify that if the",
    "start": "491680",
    "end": "494440"
  },
  {
    "text": "response to a package would go out of a",
    "start": "494440",
    "end": "497159"
  },
  {
    "text": "different interface than it initially",
    "start": "497159",
    "end": "499360"
  },
  {
    "text": "came in then it will just get whopped so",
    "start": "499360",
    "end": "501800"
  },
  {
    "text": "this doesn't work and even if you",
    "start": "501800",
    "end": "503479"
  },
  {
    "text": "disable the reverse path filter in Linux",
    "start": "503479",
    "end": "505599"
  },
  {
    "text": "M AWS itself has a similar check where",
    "start": "505599",
    "end": "508440"
  },
  {
    "text": "they validate that The Source IP address",
    "start": "508440",
    "end": "510879"
  },
  {
    "text": "of a package is actually um Associated",
    "start": "510879",
    "end": "514599"
  },
  {
    "text": "to the interface the package is leaving",
    "start": "514599",
    "end": "516240"
  },
  {
    "text": "from which wouldn't be the case here so",
    "start": "516240",
    "end": "518200"
  },
  {
    "text": "all of this just doesn't work um as a",
    "start": "518200",
    "end": "520959"
  },
  {
    "text": "workaround we ended up using a notep pod",
    "start": "520959",
    "end": "522800"
  },
  {
    "text": "service um and basically have the uh",
    "start": "522800",
    "end": "525560"
  },
  {
    "text": "workload in the pvpc look up the notep",
    "start": "525560",
    "end": "528880"
  },
  {
    "text": "um and the AP address of the note and",
    "start": "528880",
    "end": "530320"
  },
  {
    "text": "then use the tool to to reach this",
    "start": "530320",
    "end": "532560"
  },
  {
    "text": "workload generally speaking this works",
    "start": "532560",
    "end": "534760"
  },
  {
    "text": "just fine but obviously it's more",
    "start": "534760",
    "end": "536160"
  },
  {
    "text": "complicated and has a drawback that the",
    "start": "536160",
    "end": "538200"
  },
  {
    "text": "heal signal gets diluted from the",
    "start": "538200",
    "end": "539760"
  },
  {
    "text": "outside perspective because the node",
    "start": "539760",
    "end": "541760"
  },
  {
    "text": "becomes one end point no matter how many",
    "start": "541760",
    "end": "543600"
  },
  {
    "text": "parts are on it so for example the node",
    "start": "543600",
    "end": "545800"
  },
  {
    "text": "has two pods one of which has a problem",
    "start": "545800",
    "end": "547560"
  },
  {
    "text": "doesn't accept any connections the other",
    "start": "547560",
    "end": "549000"
  },
  {
    "text": "one is just fine the way this looks from",
    "start": "549000",
    "end": "551160"
  },
  {
    "text": "the outside is that there 50% error",
    "start": "551160",
    "end": "553600"
  },
  {
    "text": "right trying to establish a connection",
    "start": "553600",
    "end": "555200"
  },
  {
    "text": "to this node um and the outside from the",
    "start": "555200",
    "end": "557880"
  },
  {
    "text": "outside is not possible to differentiate",
    "start": "557880",
    "end": "559760"
  },
  {
    "text": "um one part from the",
    "start": "559760",
    "end": "562040"
  },
  {
    "start": "562000",
    "end": "785000"
  },
  {
    "text": "other okay uh let's jump right into our",
    "start": "562040",
    "end": "564720"
  },
  {
    "text": "next issue this is on gcp this time uh",
    "start": "564720",
    "end": "567800"
  },
  {
    "text": "so we have clusters where we use celium",
    "start": "567800",
    "end": "570079"
  },
  {
    "text": "fqdn based policies um so basically uh",
    "start": "570079",
    "end": "573600"
  },
  {
    "text": "we use a default deny Eris policy where",
    "start": "573600",
    "end": "576240"
  },
  {
    "text": "we uh allow traffic only to internal",
    "start": "576240",
    "end": "578959"
  },
  {
    "text": "domains outside of the cluster but all",
    "start": "578959",
    "end": "581040"
  },
  {
    "text": "traffic within the cluster is allowed",
    "start": "581040",
    "end": "583079"
  },
  {
    "text": "including to cube DNS uh and what we",
    "start": "583079",
    "end": "585519"
  },
  {
    "text": "noticed was that this was this policy",
    "start": "585519",
    "end": "587440"
  },
  {
    "text": "was breaking all DNS within the cluster",
    "start": "587440",
    "end": "590440"
  },
  {
    "text": "um so yeah packets were reaching the",
    "start": "590440",
    "end": "593000"
  },
  {
    "text": "cube DN SPS but not coming back and uh",
    "start": "593000",
    "end": "595800"
  },
  {
    "text": "we used Hubble to observe uh in more",
    "start": "595800",
    "end": "598560"
  },
  {
    "text": "detail what flows looked like and this",
    "start": "598560",
    "end": "601360"
  },
  {
    "text": "showed a strange thing which is that uh",
    "start": "601360",
    "end": "603600"
  },
  {
    "text": "packets on the cube DNS pod side were",
    "start": "603600",
    "end": "606519"
  },
  {
    "text": "not just getting denied by the policy",
    "start": "606519",
    "end": "608720"
  },
  {
    "text": "they were simply getting dropped or",
    "start": "608720",
    "end": "610440"
  },
  {
    "text": "disappearing",
    "start": "610440",
    "end": "611600"
  },
  {
    "text": "somewhere um the way cium implements the",
    "start": "611600",
    "end": "614360"
  },
  {
    "text": "fqdn based policies uh is by deploying a",
    "start": "614360",
    "end": "618279"
  },
  {
    "text": "DNS proxy to all nodes so this proxy",
    "start": "618279",
    "end": "621360"
  },
  {
    "text": "essentially uh intercepts all ESS",
    "start": "621360",
    "end": "623760"
  },
  {
    "text": "traffic from pods uh when a DNS request",
    "start": "623760",
    "end": "626200"
  },
  {
    "text": "is sent and then uh Records the IPS that",
    "start": "626200",
    "end": "628880"
  },
  {
    "text": "it that that are uh received in response",
    "start": "628880",
    "end": "631519"
  },
  {
    "text": "and stores this in a cache on the Node",
    "start": "631519",
    "end": "634279"
  },
  {
    "text": "this is how celium knows uh to restrict",
    "start": "634279",
    "end": "636680"
  },
  {
    "text": "traffic to certain domains versus not uh",
    "start": "636680",
    "end": "639760"
  },
  {
    "text": "and there's a separate policy uh for",
    "start": "639760",
    "end": "642399"
  },
  {
    "text": "what traffic can be intercepted by this",
    "start": "642399",
    "end": "644480"
  },
  {
    "text": "DNS proxy the part I've highlighted so",
    "start": "644480",
    "end": "646920"
  },
  {
    "text": "in our case we uh allow it to intercept",
    "start": "646920",
    "end": "648920"
  },
  {
    "text": "all DNS traffic and uh we noticed that",
    "start": "648920",
    "end": "652040"
  },
  {
    "text": "when we removed this section from the",
    "start": "652040",
    "end": "653519"
  },
  {
    "text": "policy DNS was working again uh so which",
    "start": "653519",
    "end": "656680"
  },
  {
    "text": "led us to conclude that DNS breaks only",
    "start": "656680",
    "end": "659360"
  },
  {
    "text": "been intercepted by celium DNS",
    "start": "659360",
    "end": "661839"
  },
  {
    "text": "proxy after this uh our friends at isent",
    "start": "661839",
    "end": "664959"
  },
  {
    "text": "actually helped us get to the bottom of",
    "start": "664959",
    "end": "667279"
  },
  {
    "text": "what was happening uh on a good cluster",
    "start": "667279",
    "end": "669680"
  },
  {
    "text": "versus a bad cluster setup the the only",
    "start": "669680",
    "end": "672360"
  },
  {
    "text": "difference that we found was on a node a",
    "start": "672360",
    "end": "674800"
  },
  {
    "text": "bad cluster node had this uh cctl",
    "start": "674800",
    "end": "677880"
  },
  {
    "text": "setting called Source valid Mark set to",
    "start": "677880",
    "end": "680079"
  },
  {
    "text": "one versus a good one didn't um so what",
    "start": "680079",
    "end": "683399"
  },
  {
    "text": "is this setting anyway um so it is a",
    "start": "683399",
    "end": "686160"
  },
  {
    "text": "Linux networking configuration setting",
    "start": "686160",
    "end": "688680"
  },
  {
    "text": "uh it's a source and also a source",
    "start": "688680",
    "end": "690519"
  },
  {
    "text": "address validation mechanism for the",
    "start": "690519",
    "end": "692920"
  },
  {
    "text": "packet uh essentially whenever this is",
    "start": "692920",
    "end": "695279"
  },
  {
    "text": "enabled on the Kernel the kernel",
    "start": "695279",
    "end": "697200"
  },
  {
    "text": "performs additional checks based on the",
    "start": "697200",
    "end": "699279"
  },
  {
    "text": "source IP address of a packet and also",
    "start": "699279",
    "end": "701560"
  },
  {
    "text": "looks at some uh marks in the packet",
    "start": "701560",
    "end": "703440"
  },
  {
    "text": "header to determine if this is being",
    "start": "703440",
    "end": "706120"
  },
  {
    "text": "asymmetrically routed or not so if this",
    "start": "706120",
    "end": "708399"
  },
  {
    "text": "is set asymmetric routing scenarios are",
    "start": "708399",
    "end": "711399"
  },
  {
    "text": "completely disabled and whenever traffic",
    "start": "711399",
    "end": "714120"
  },
  {
    "text": "was going through the celium DNS proxy",
    "start": "714120",
    "end": "716200"
  },
  {
    "text": "the colonel was considering these DNS",
    "start": "716200",
    "end": "717880"
  },
  {
    "text": "packets invalid and just dropping oping",
    "start": "717880",
    "end": "720240"
  },
  {
    "text": "them um so we set this value to zero",
    "start": "720240",
    "end": "723160"
  },
  {
    "text": "manually on a node just to check and",
    "start": "723160",
    "end": "725360"
  },
  {
    "text": "voila DNS actually started working with",
    "start": "725360",
    "end": "727760"
  },
  {
    "text": "the original policy completely unchanged",
    "start": "727760",
    "end": "730399"
  },
  {
    "text": "until it was getting set Again by",
    "start": "730399",
    "end": "732279"
  },
  {
    "text": "something else in the cluster so uh we",
    "start": "732279",
    "end": "735320"
  },
  {
    "text": "had to figure out which process in the",
    "start": "735320",
    "end": "737000"
  },
  {
    "text": "cluster is continually setting this to",
    "start": "737000",
    "end": "738920"
  },
  {
    "text": "one and uh tetragon and Falco are",
    "start": "738920",
    "end": "741959"
  },
  {
    "text": "actually the perfect tools to discover",
    "start": "741959",
    "end": "743959"
  },
  {
    "text": "something like this since we already had",
    "start": "743959",
    "end": "745800"
  },
  {
    "text": "Falco deployed on our clusters we ended",
    "start": "745800",
    "end": "747720"
  },
  {
    "text": "up putting a Falco policy in there to",
    "start": "747720",
    "end": "750480"
  },
  {
    "text": "say to log whenever a process was",
    "start": "750480",
    "end": "752639"
  },
  {
    "text": "changing the value of this setting and",
    "start": "752639",
    "end": "755399"
  },
  {
    "text": "it turned out to be gk's net D process",
    "start": "755399",
    "end": "758199"
  },
  {
    "text": "uh I remember earlier how I said netd",
    "start": "758199",
    "end": "760560"
  },
  {
    "text": "sometimes interferes with celium uh you",
    "start": "760560",
    "end": "762519"
  },
  {
    "text": "can see how it's setting the source",
    "start": "762519",
    "end": "764000"
  },
  {
    "text": "valid Mark here so finally this was",
    "start": "764000",
    "end": "766760"
  },
  {
    "text": "traced to a GK feature node as inter",
    "start": "766760",
    "end": "768720"
  },
  {
    "text": "node visibility and we just ended up",
    "start": "768720",
    "end": "770839"
  },
  {
    "text": "disabling that in favor of uh fqdn",
    "start": "770839",
    "end": "773639"
  },
  {
    "text": "based policies uh this is also suggested",
    "start": "773639",
    "end": "775800"
  },
  {
    "text": "as a road map item for celium to Monitor",
    "start": "775800",
    "end": "778160"
  },
  {
    "text": "and War on when ever the value of this",
    "start": "778160",
    "end": "780440"
  },
  {
    "text": "setting is uh not what it",
    "start": "780440",
    "end": "784760"
  },
  {
    "text": "expects",
    "start": "784760",
    "end": "787600"
  },
  {
    "start": "785000",
    "end": "933000"
  },
  {
    "text": "oops okay the second issue I'm going to",
    "start": "787600",
    "end": "789920"
  },
  {
    "text": "talk about specific to H gcp and to P",
    "start": "789920",
    "end": "792600"
  },
  {
    "text": "IPs over there so as nimisha mentioned",
    "start": "792600",
    "end": "796519"
  },
  {
    "text": "initially the basic idea as to how we do",
    "start": "796519",
    "end": "799079"
  },
  {
    "text": "this migration is that we let new nodes",
    "start": "799079",
    "end": "801519"
  },
  {
    "text": "come up with and not come up with",
    "start": "801519",
    "end": "803680"
  },
  {
    "text": "whatever is the default on the",
    "start": "803680",
    "end": "805040"
  },
  {
    "text": "respective Cloud the problem however on",
    "start": "805040",
    "end": "807440"
  },
  {
    "text": "gcp specifically is that this is not",
    "start": "807440",
    "end": "809800"
  },
  {
    "text": "possible because gcp has a cni that's",
    "start": "809800",
    "end": "812519"
  },
  {
    "text": "embedded in the node image so when a",
    "start": "812519",
    "end": "814360"
  },
  {
    "text": "node comes up it always already has a",
    "start": "814360",
    "end": "816800"
  },
  {
    "text": "cni ey and what this can lead to is this",
    "start": "816800",
    "end": "820800"
  },
  {
    "text": "situation here so what you can see there",
    "start": "820800",
    "end": "822639"
  },
  {
    "text": "are two pots both of them have the same",
    "start": "822639",
    "end": "825079"
  },
  {
    "text": "IP address and one of them will not have",
    "start": "825079",
    "end": "827079"
  },
  {
    "text": "working network",
    "start": "827079",
    "end": "828440"
  },
  {
    "text": "connectivity and why does this happen so",
    "start": "828440",
    "end": "832600"
  },
  {
    "text": "because the nodes have the cni embedded",
    "start": "832600",
    "end": "835040"
  },
  {
    "text": "on the image they can just become ready",
    "start": "835040",
    "end": "837320"
  },
  {
    "text": "um on Startup before the ium agent uh is",
    "start": "837320",
    "end": "840759"
  },
  {
    "text": "actually scheduled and running there",
    "start": "840759",
    "end": "842920"
  },
  {
    "text": "which means the gcp cni will allocate an",
    "start": "842920",
    "end": "845199"
  },
  {
    "text": "IP address cium will not know anything",
    "start": "845199",
    "end": "847279"
  },
  {
    "text": "about it and it will happily hand out",
    "start": "847279",
    "end": "849120"
  },
  {
    "text": "the same address IP address again to",
    "start": "849120",
    "end": "851079"
  },
  {
    "text": "another pot and which then will not have",
    "start": "851079",
    "end": "853160"
  },
  {
    "text": "a working network uh",
    "start": "853160",
    "end": "855480"
  },
  {
    "text": "connectivity this cannot happen on any",
    "start": "855480",
    "end": "857480"
  },
  {
    "text": "of the other clouds because they don't",
    "start": "857480",
    "end": "859320"
  },
  {
    "text": "have this default cni that's always",
    "start": "859320",
    "end": "861120"
  },
  {
    "text": "there and this implicitly prevents any",
    "start": "861120",
    "end": "863320"
  },
  {
    "text": "pot that doesn't have house networking",
    "start": "863320",
    "end": "865240"
  },
  {
    "text": "from running before cium is up um and",
    "start": "865240",
    "end": "868360"
  },
  {
    "text": "the obvious solution to that seems to be",
    "start": "868360",
    "end": "869920"
  },
  {
    "text": "to use a Tain to basically prevent any",
    "start": "869920",
    "end": "872320"
  },
  {
    "text": "pot from running before the cium agent",
    "start": "872320",
    "end": "874279"
  },
  {
    "text": "does and for the most part that actually",
    "start": "874279",
    "end": "876199"
  },
  {
    "text": "works well the problem is that we have a",
    "start": "876199",
    "end": "878079"
  },
  {
    "text": "number of demon sets related to things",
    "start": "878079",
    "end": "880120"
  },
  {
    "text": "like metric and lock collection and",
    "start": "880120",
    "end": "882120"
  },
  {
    "text": "security and these demon sets have to",
    "start": "882120",
    "end": "884680"
  },
  {
    "text": "run on all nodes no matter what and in",
    "start": "884680",
    "end": "887440"
  },
  {
    "text": "order to make that happen we configure",
    "start": "887440",
    "end": "888880"
  },
  {
    "text": "them to tolerate all tains the reason",
    "start": "888880",
    "end": "891759"
  },
  {
    "text": "for that is that KES basically has two",
    "start": "891759",
    "end": "893440"
  },
  {
    "text": "ways on as to how you can tolerate H you",
    "start": "893440",
    "end": "895560"
  },
  {
    "text": "can either say you tolerate absolutely",
    "start": "895560",
    "end": "897720"
  },
  {
    "text": "everything or you enumerate every single",
    "start": "897720",
    "end": "899600"
  },
  {
    "text": "Tain you want to tolerate and and the",
    "start": "899600",
    "end": "901800"
  },
  {
    "text": "problem is as I said we have a ton of",
    "start": "901800",
    "end": "903560"
  },
  {
    "text": "clusters with very diverse configuration",
    "start": "903560",
    "end": "906480"
  },
  {
    "text": "so basically maintaining a list that has",
    "start": "906480",
    "end": "908880"
  },
  {
    "text": "all the Ts that might occur anywhere is",
    "start": "908880",
    "end": "911759"
  },
  {
    "text": "not realistic for us so instead we just",
    "start": "911759",
    "end": "913880"
  },
  {
    "text": "tolerate all of them the ideal case of",
    "start": "913880",
    "end": "916440"
  },
  {
    "text": "we tolerate everything except this one",
    "start": "916440",
    "end": "918399"
  },
  {
    "text": "is unfortunately something that the qu",
    "start": "918399",
    "end": "919920"
  },
  {
    "text": "API does not",
    "start": "919920",
    "end": "921440"
  },
  {
    "text": "support um so on top of a Tain what we",
    "start": "921440",
    "end": "924839"
  },
  {
    "text": "have is a controller that deletes pods",
    "start": "924839",
    "end": "927959"
  },
  {
    "text": "that got their I was before the celium",
    "start": "927959",
    "end": "930079"
  },
  {
    "text": "agent was up to work around this",
    "start": "930079",
    "end": "933440"
  },
  {
    "start": "933000",
    "end": "1079000"
  },
  {
    "text": "issue let's talk a little bit about",
    "start": "933440",
    "end": "935600"
  },
  {
    "text": "misconfiguration as well um issues",
    "start": "935600",
    "end": "937959"
  },
  {
    "text": "arising out of misconfiguration are more",
    "start": "937959",
    "end": "940319"
  },
  {
    "text": "common than you might think uh as of",
    "start": "940319",
    "end": "942240"
  },
  {
    "text": "October celium had over 800 configurable",
    "start": "942240",
    "end": "945160"
  },
  {
    "text": "Helm values and these values can vary a",
    "start": "945160",
    "end": "947720"
  },
  {
    "text": "lot based on your networking setup your",
    "start": "947720",
    "end": "949399"
  },
  {
    "text": "cloud provider as well as if you want to",
    "start": "949399",
    "end": "951480"
  },
  {
    "text": "enable certain features or not uh just",
    "start": "951480",
    "end": "954000"
  },
  {
    "text": "to give a small example of this uh we",
    "start": "954000",
    "end": "956040"
  },
  {
    "text": "were using Hubble metrics flows to world",
    "start": "956040",
    "end": "958680"
  },
  {
    "text": "to to monitor all the traffic going out",
    "start": "958680",
    "end": "960720"
  },
  {
    "text": "from pods uh and we noticed that the",
    "start": "960720",
    "end": "963319"
  },
  {
    "text": "cardinality of this metric was just",
    "start": "963319",
    "end": "965040"
  },
  {
    "text": "exploding and the reason was that the",
    "start": "965040",
    "end": "967639"
  },
  {
    "text": "metrics associated with deleted pods uh",
    "start": "967639",
    "end": "970639"
  },
  {
    "text": "were not getting cleaned up so we had to",
    "start": "970639",
    "end": "972880"
  },
  {
    "text": "kind of dig through some uh issues and",
    "start": "972880",
    "end": "975240"
  },
  {
    "text": "PRS in the celium repo and we discovered",
    "start": "975240",
    "end": "977880"
  },
  {
    "text": "that there is a a solution implemented",
    "start": "977880",
    "end": "980519"
  },
  {
    "text": "for this but you can only uh Avail it if",
    "start": "980519",
    "end": "982839"
  },
  {
    "text": "you set a certain set of labels on that",
    "start": "982839",
    "end": "985360"
  },
  {
    "text": "metric um so enabling that label started",
    "start": "985360",
    "end": "989000"
  },
  {
    "text": "uh you know the the cleanup mechanism",
    "start": "989000",
    "end": "990800"
  },
  {
    "text": "started kicking in after that um let's",
    "start": "990800",
    "end": "994160"
  },
  {
    "text": "take a small detour to talk about",
    "start": "994160",
    "end": "995800"
  },
  {
    "text": "transparent encryption uh so",
    "start": "995800",
    "end": "998560"
  },
  {
    "text": "understandably there's a network",
    "start": "998560",
    "end": "999600"
  },
  {
    "text": "overhead associated with encrypting All",
    "start": "999600",
    "end": "1001720"
  },
  {
    "text": "pod tood traffic uh and in our case we",
    "start": "1001720",
    "end": "1004600"
  },
  {
    "text": "used V guard to encrypt traffic and we",
    "start": "1004600",
    "end": "1006839"
  },
  {
    "text": "ran some bet uh Network Benchmark tests",
    "start": "1006839",
    "end": "1009519"
  },
  {
    "text": "on all three clouds to show the",
    "start": "1009519",
    "end": "1011480"
  },
  {
    "text": "performance uh the left bar on all",
    "start": "1011480",
    "end": "1013480"
  },
  {
    "text": "clouds is the native routing uh",
    "start": "1013480",
    "end": "1015440"
  },
  {
    "text": "performance with for TCP stream and the",
    "start": "1015440",
    "end": "1017639"
  },
  {
    "text": "right side is s with vard and the",
    "start": "1017639",
    "end": "1020680"
  },
  {
    "text": "performance drops drop occurs because",
    "start": "1020680",
    "end": "1022560"
  },
  {
    "text": "vard has to establish an encapsulation",
    "start": "1022560",
    "end": "1025199"
  },
  {
    "text": "tunnel over uh UDP to actually encrypt",
    "start": "1025199",
    "end": "1028438"
  },
  {
    "text": "these packets uh and in one of our",
    "start": "1028439",
    "end": "1030720"
  },
  {
    "text": "clusters we noticed that uh the network",
    "start": "1030720",
    "end": "1033400"
  },
  {
    "text": "throughput was way higher than we uh",
    "start": "1033400",
    "end": "1035520"
  },
  {
    "text": "were used to so that led us to suspect",
    "start": "1035520",
    "end": "1037839"
  },
  {
    "text": "that encryption wasn't actually",
    "start": "1037839",
    "end": "1039438"
  },
  {
    "text": "happening u a TCP dump on the Node",
    "start": "1039439",
    "end": "1043360"
  },
  {
    "text": "actually confirmed this because no",
    "start": "1043360",
    "end": "1045678"
  },
  {
    "text": "packets were flowing through this wire",
    "start": "1045679",
    "end": "1047438"
  },
  {
    "text": "guard interface which they generally",
    "start": "1047439",
    "end": "1048960"
  },
  {
    "text": "would if encryption was actually",
    "start": "1048960",
    "end": "1050480"
  },
  {
    "text": "happening and this was traced down to an",
    "start": "1050480",
    "end": "1052840"
  },
  {
    "text": "incorrect Helm value for the native",
    "start": "1052840",
    "end": "1054480"
  },
  {
    "text": "routing cider uh so what happened was",
    "start": "1054480",
    "end": "1057080"
  },
  {
    "text": "our test pods had IPS outside of this",
    "start": "1057080",
    "end": "1059640"
  },
  {
    "text": "cider um and what the cider should be",
    "start": "1059640",
    "end": "1062280"
  },
  {
    "text": "set to is all the uh pod IP address",
    "start": "1062280",
    "end": "1065760"
  },
  {
    "text": "space uh possible and if the IP is",
    "start": "1065760",
    "end": "1069080"
  },
  {
    "text": "outside the side orium will snat this",
    "start": "1069080",
    "end": "1071440"
  },
  {
    "text": "traffic as the node traffic uh so this",
    "start": "1071440",
    "end": "1073960"
  },
  {
    "text": "actually can bypass encryption and more",
    "start": "1073960",
    "end": "1075919"
  },
  {
    "text": "importantly Network policy enforcement",
    "start": "1075919",
    "end": "1077919"
  },
  {
    "text": "too",
    "start": "1077919",
    "end": "1080280"
  },
  {
    "start": "1079000",
    "end": "1259000"
  },
  {
    "text": "okay the last issue I'm going to talk",
    "start": "1080280",
    "end": "1081880"
  },
  {
    "text": "about is specific to ASA to make the",
    "start": "1081880",
    "end": "1083640"
  },
  {
    "text": "bound with all three clouds um and",
    "start": "1083640",
    "end": "1086360"
  },
  {
    "text": "specific to as host ports uh so what",
    "start": "1086360",
    "end": "1089480"
  },
  {
    "text": "happened we at some point upgraded a",
    "start": "1089480",
    "end": "1091440"
  },
  {
    "text": "number of uh our clusters so that they",
    "start": "1091440",
    "end": "1094200"
  },
  {
    "text": "had a new version and all notes got",
    "start": "1094200",
    "end": "1096360"
  },
  {
    "text": "replaced along the way and we noticed",
    "start": "1096360",
    "end": "1100159"
  },
  {
    "text": "that the number of workloads that make",
    "start": "1100159",
    "end": "1102200"
  },
  {
    "text": "themselves available externally through",
    "start": "1102200",
    "end": "1103960"
  },
  {
    "text": "a host Port were not actually reachable",
    "start": "1103960",
    "end": "1107080"
  },
  {
    "text": "and this was not really deterministic in",
    "start": "1107080",
    "end": "1108919"
  },
  {
    "text": "it happened for some but not all of them",
    "start": "1108919",
    "end": "1111200"
  },
  {
    "text": "and we also relatively quickly noticed",
    "start": "1111200",
    "end": "1113159"
  },
  {
    "text": "that just restarting the cium agent um",
    "start": "1113159",
    "end": "1115640"
  },
  {
    "text": "resolves the issue but at this point we",
    "start": "1115640",
    "end": "1117240"
  },
  {
    "text": "didn't know why it was happening um we",
    "start": "1117240",
    "end": "1120080"
  },
  {
    "text": "eventually run into this um what you can",
    "start": "1120080",
    "end": "1123080"
  },
  {
    "text": "see here is the IP tables preting chain",
    "start": "1123080",
    "end": "1127000"
  },
  {
    "text": "um it's the same in both of the",
    "start": "1127000",
    "end": "1129159"
  },
  {
    "text": "screenshots the only thing that's",
    "start": "1129159",
    "end": "1130919"
  },
  {
    "text": "different is the order of the rules in",
    "start": "1130919",
    "end": "1133039"
  },
  {
    "text": "there so in the top screenshot there's",
    "start": "1133039",
    "end": "1134840"
  },
  {
    "text": "first a cube Services rules then the",
    "start": "1134840",
    "end": "1136720"
  },
  {
    "text": "cium one in the bottom one the other way",
    "start": "1136720",
    "end": "1139640"
  },
  {
    "text": "round and the bottom one is from uh node",
    "start": "1139640",
    "end": "1143480"
  },
  {
    "text": "where the connectivity works just fine",
    "start": "1143480",
    "end": "1145200"
  },
  {
    "text": "the top one from one where it",
    "start": "1145200",
    "end": "1146960"
  },
  {
    "text": "doesn't um so somehow this this gets",
    "start": "1146960",
    "end": "1150640"
  },
  {
    "text": "mingled up and is not deterministic but",
    "start": "1150640",
    "end": "1153280"
  },
  {
    "text": "why is this inter un happening um so",
    "start": "1153280",
    "end": "1156440"
  },
  {
    "text": "what eventually the folks at is",
    "start": "1156440",
    "end": "1157880"
  },
  {
    "text": "surveillant actually figured out is that",
    "start": "1157880",
    "end": "1160799"
  },
  {
    "text": "if in aure AKs you have pots in the cube",
    "start": "1160799",
    "end": "1164039"
  },
  {
    "text": "system name space they get this qu",
    "start": "1164039",
    "end": "1166840"
  },
  {
    "text": "service host environment variable",
    "start": "1166840",
    "end": "1169039"
  },
  {
    "text": "injected and this environment variable",
    "start": "1169039",
    "end": "1171280"
  },
  {
    "text": "is used by the various sdks um that try",
    "start": "1171280",
    "end": "1174320"
  },
  {
    "text": "to reize API server to figure out the",
    "start": "1174320",
    "end": "1176559"
  },
  {
    "text": "address to use for that um and what you",
    "start": "1176559",
    "end": "1179520"
  },
  {
    "text": "can see here on the two screenshots on",
    "start": "1179520",
    "end": "1181280"
  },
  {
    "text": "the side is on the top um there is the",
    "start": "1181280",
    "end": "1183960"
  },
  {
    "text": "result of printing this variable from a",
    "start": "1183960",
    "end": "1185880"
  },
  {
    "text": "pod in AKs in the cube system namespace",
    "start": "1185880",
    "end": "1188080"
  },
  {
    "text": "and on the bottom it's been doing the",
    "start": "1188080",
    "end": "1190320"
  },
  {
    "text": "same um on any other Po in a different",
    "start": "1190320",
    "end": "1192880"
  },
  {
    "text": "namespace or on a different",
    "start": "1192880",
    "end": "1194640"
  },
  {
    "text": "Cloud um in the bottom one which is the",
    "start": "1194640",
    "end": "1198120"
  },
  {
    "text": "default what you can see is an IP",
    "start": "1198120",
    "end": "1200320"
  },
  {
    "text": "address this IP address is a virtual IP",
    "start": "1200320",
    "end": "1203039"
  },
  {
    "text": "that's um managed by qoxy um and this is",
    "start": "1203039",
    "end": "1206400"
  },
  {
    "text": "basically the explanation as to why all",
    "start": "1206400",
    "end": "1208360"
  },
  {
    "text": "of this is happening so the celium agent",
    "start": "1208360",
    "end": "1212480"
  },
  {
    "text": "needs to reach API server to fetch its",
    "start": "1212480",
    "end": "1215360"
  },
  {
    "text": "configuration and if it's using the",
    "start": "1215360",
    "end": "1217440"
  },
  {
    "text": "default approach of using the cxy",
    "start": "1217440",
    "end": "1219360"
  },
  {
    "text": "virtual AP then it's impossible for the",
    "start": "1219360",
    "end": "1221320"
  },
  {
    "text": "celium agent to come up before cxy did",
    "start": "1221320",
    "end": "1223720"
  },
  {
    "text": "come up um and both cxy and celium Pen",
    "start": "1223720",
    "end": "1227400"
  },
  {
    "text": "the wul so whoever starts last kind of",
    "start": "1227400",
    "end": "1229640"
  },
  {
    "text": "winds um and as I introduced this",
    "start": "1229640",
    "end": "1232240"
  },
  {
    "text": "injection of this environment variable",
    "start": "1232240",
    "end": "1233960"
  },
  {
    "text": "and basically short circuiting a c proxy",
    "start": "1233960",
    "end": "1236799"
  },
  {
    "text": "presumably is a reliability measure um",
    "start": "1236799",
    "end": "1239919"
  },
  {
    "text": "but ironically it does the opposite in",
    "start": "1239919",
    "end": "1243320"
  },
  {
    "text": "this particular scenario and that it",
    "start": "1243320",
    "end": "1244840"
  },
  {
    "text": "makes the startup",
    "start": "1244840",
    "end": "1246360"
  },
  {
    "text": "indeterministic um and allows cium to",
    "start": "1246360",
    "end": "1248559"
  },
  {
    "text": "start first in which case certain things",
    "start": "1248559",
    "end": "1250400"
  },
  {
    "text": "will not work and the work around we",
    "start": "1250400",
    "end": "1252440"
  },
  {
    "text": "ended up with is to just block the",
    "start": "1252440",
    "end": "1254039"
  },
  {
    "text": "startup um of celium until the qoxy",
    "start": "1254039",
    "end": "1256600"
  },
  {
    "text": "rules we need exist and yeah and should",
    "start": "1256600",
    "end": "1258640"
  },
  {
    "text": "the ordering",
    "start": "1258640",
    "end": "1260039"
  },
  {
    "start": "1259000",
    "end": "1419000"
  },
  {
    "text": "again uh to wrap things up despite all",
    "start": "1260039",
    "end": "1262880"
  },
  {
    "text": "the issues we talked about just now we",
    "start": "1262880",
    "end": "1264880"
  },
  {
    "text": "actually successfully migrated several",
    "start": "1264880",
    "end": "1266640"
  },
  {
    "text": "of our production clusters to use celium",
    "start": "1266640",
    "end": "1269039"
  },
  {
    "text": "and celium is becoming our go-to tool",
    "start": "1269039",
    "end": "1270919"
  },
  {
    "text": "for securing cluster workloads uh",
    "start": "1270919",
    "end": "1273720"
  },
  {
    "text": "despite all the testing we do uh in",
    "start": "1273720",
    "end": "1276000"
  },
  {
    "text": "pre-production environments networking",
    "start": "1276000",
    "end": "1278320"
  },
  {
    "text": "uh in in a high churn environment can be",
    "start": "1278320",
    "end": "1279960"
  },
  {
    "text": "really difficult uh so uh we actually",
    "start": "1279960",
    "end": "1283080"
  },
  {
    "text": "discovered some issues only in",
    "start": "1283080",
    "end": "1284440"
  },
  {
    "text": "production uh but what makes things",
    "start": "1284440",
    "end": "1286640"
  },
  {
    "text": "really easy for us as end users is that",
    "start": "1286640",
    "end": "1288720"
  },
  {
    "text": "the has a great community and some",
    "start": "1288720",
    "end": "1290760"
  },
  {
    "text": "amazing tooling uh so that makes it",
    "start": "1290760",
    "end": "1292919"
  },
  {
    "text": "super accessible and welcoming for us so",
    "start": "1292919",
    "end": "1295520"
  },
  {
    "text": "thank you to the community uh and thank",
    "start": "1295520",
    "end": "1297520"
  },
  {
    "text": "you to ISO valent and also thank you all",
    "start": "1297520",
    "end": "1299240"
  },
  {
    "text": "for attending the talk uh if you want",
    "start": "1299240",
    "end": "1301520"
  },
  {
    "text": "more clarity on anything we talked about",
    "start": "1301520",
    "end": "1303279"
  },
  {
    "text": "you can find us after the talk U we'll",
    "start": "1303279",
    "end": "1305240"
  },
  {
    "text": "be around uh for the rest of the",
    "start": "1305240",
    "end": "1306840"
  },
  {
    "text": "conference so yeah",
    "start": "1306840",
    "end": "1309630"
  },
  {
    "text": "[Applause]",
    "start": "1309630",
    "end": "1316480"
  },
  {
    "text": "thanks I think we have like one and",
    "start": "1316480",
    "end": "1318799"
  },
  {
    "text": "minutes for",
    "start": "1318799",
    "end": "1321200"
  },
  {
    "text": "questions",
    "start": "1321480",
    "end": "1324039"
  },
  {
    "text": "what",
    "start": "1324039",
    "end": "1326120"
  },
  {
    "text": "okay we didn't realize there was time",
    "start": "1326120",
    "end": "1328480"
  },
  {
    "text": "allocated for questions but seems like",
    "start": "1328480",
    "end": "1330640"
  },
  {
    "text": "there is so does anyone have anything",
    "start": "1330640",
    "end": "1332400"
  },
  {
    "text": "they'd like to",
    "start": "1332400",
    "end": "1334919"
  },
  {
    "text": "ask it was probably uh too much at once",
    "start": "1336720",
    "end": "1342559"
  },
  {
    "text": "hi uh you mentioned on Azure that you",
    "start": "1349240",
    "end": "1352520"
  },
  {
    "text": "cannot configure uh the standard celium",
    "start": "1352520",
    "end": "1355120"
  },
  {
    "text": "offering and you have to upgrade to",
    "start": "1355120",
    "end": "1357159"
  },
  {
    "text": "Enterprise did you find that as a",
    "start": "1357159",
    "end": "1359279"
  },
  {
    "text": "complete blocker to trying or using uh",
    "start": "1359279",
    "end": "1362799"
  },
  {
    "text": "their their free version of",
    "start": "1362799",
    "end": "1365840"
  },
  {
    "text": "celum uh we do use Enterprise on our all",
    "start": "1365840",
    "end": "1369840"
  },
  {
    "text": "all our clusters so it wasn't a blocker",
    "start": "1369840",
    "end": "1372320"
  },
  {
    "text": "because of that uh but yeah you I think",
    "start": "1372320",
    "end": "1375120"
  },
  {
    "text": "for now cannot configure the celium helm",
    "start": "1375120",
    "end": "1378000"
  },
  {
    "text": "value spefic specifically uh on using",
    "start": "1378000",
    "end": "1380600"
  },
  {
    "text": "the open source version okay thank",
    "start": "1380600",
    "end": "1384360"
  },
  {
    "text": "you hello cool uh we'll wrap up then",
    "start": "1394760",
    "end": "1398640"
  },
  {
    "text": "thanks oh sorry so when you had split",
    "start": "1398640",
    "end": "1402240"
  },
  {
    "text": "nodes for a while that had both an old",
    "start": "1402240",
    "end": "1404520"
  },
  {
    "text": "cni and ayum did you disable network",
    "start": "1404520",
    "end": "1407240"
  },
  {
    "text": "policy enforcement or were you ble to",
    "start": "1407240",
    "end": "1408760"
  },
  {
    "text": "work with network policy enforcement",
    "start": "1408760",
    "end": "1410120"
  },
  {
    "text": "only working on some notes uh yeah we",
    "start": "1410120",
    "end": "1412600"
  },
  {
    "text": "did not have Network policies at that",
    "start": "1412600",
    "end": "1414360"
  },
  {
    "text": "time so I think Network policies would",
    "start": "1414360",
    "end": "1416159"
  },
  {
    "text": "not work reliably in that state",
    "start": "1416159",
    "end": "1420960"
  }
]