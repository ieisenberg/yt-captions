[
  {
    "text": "hello welcome to the session of standardized application at global scale my name is lee john from alibaba and my",
    "start": "80",
    "end": "7680"
  },
  {
    "text": "co-speaker jared comes from alba so i will start from what problems we are facing",
    "start": "7680",
    "end": "13840"
  },
  {
    "text": "and how we substitute phase o and the crosstalk so the whole story began since 2018 when",
    "start": "13840",
    "end": "21199"
  },
  {
    "text": "the team in alibaba started to build one of the largest kubernetes clusters in the world",
    "start": "21199",
    "end": "27119"
  },
  {
    "text": "the goal is to serve the developers and operators throughout the company and support its double lab and sales",
    "start": "27119",
    "end": "33680"
  },
  {
    "text": "festival which is huge the outcome is pretty good they even",
    "start": "33680",
    "end": "38879"
  },
  {
    "text": "published the awesome blog which attracted a lot of attentions and it gave a lot of confidence to the",
    "start": "38879",
    "end": "44800"
  },
  {
    "text": "community because they proved that kubernetes works for super large scale",
    "start": "44800",
    "end": "49840"
  },
  {
    "text": "but feedback from our users however are unexpected they even ask us",
    "start": "49840",
    "end": "56160"
  },
  {
    "text": "why why we want to force them move to a new infrastructure system which clearly brought no value from",
    "start": "56160",
    "end": "62719"
  },
  {
    "text": "their perspective so what's the problem here we finally",
    "start": "62719",
    "end": "68720"
  },
  {
    "text": "noticed there's a huge gap between what our users expected and what we provided in our kubernetes",
    "start": "68720",
    "end": "75280"
  },
  {
    "text": "cluster first of all api and primitives with our users workers own our code",
    "start": "75280",
    "end": "82560"
  },
  {
    "text": "application and ci cd pipelines but if you look at one or kubernetes cluster",
    "start": "82560",
    "end": "88400"
  },
  {
    "text": "what it provides are workloads like department stable set container level parameters like sidecar",
    "start": "88400",
    "end": "95360"
  },
  {
    "text": "ports and infrastructure details like network policy extra the second",
    "start": "95360",
    "end": "100640"
  },
  {
    "text": "issue is the levels of abstraction for example for application operators in our company",
    "start": "100640",
    "end": "106799"
  },
  {
    "text": "they are working on policies like how to do all the scaling how to do automatic progress route but",
    "start": "106799",
    "end": "113360"
  },
  {
    "text": "what that would be exposed to them however are cooperative service linguists permissive and eastern virtual",
    "start": "113360",
    "end": "120719"
  },
  {
    "text": "service yes as coordinated experts like us it's straightforward to assemble them into",
    "start": "120719",
    "end": "127280"
  },
  {
    "text": "route strategy or other scheduling products but these primitives don't make any sense from application",
    "start": "127280",
    "end": "134400"
  },
  {
    "text": "operators perspective the last issue is actually the worst one",
    "start": "134400",
    "end": "139840"
  },
  {
    "text": "it is a user interface as powerful builders we think kubernetes we think kubernetes",
    "start": "139840",
    "end": "146400"
  },
  {
    "text": "declarative api is very powerful and extensible but our users definitely don't agree",
    "start": "146400",
    "end": "152400"
  },
  {
    "text": "with them they want to work with human readable interfaces like",
    "start": "152400",
    "end": "157440"
  },
  {
    "text": "dashboard command line tool or infrastructure of code writing yaml files however are like",
    "start": "157440",
    "end": "164160"
  },
  {
    "text": "writing assembly language from their perspective and no one wants to do that",
    "start": "164160",
    "end": "170400"
  },
  {
    "text": "we soon realized that these issues are not only problems in our company they exist in the community for quite a",
    "start": "170400",
    "end": "176959"
  },
  {
    "text": "long time that's why we begin to build modern application platforms for users yes they are user-facing platforms",
    "start": "176959",
    "end": "185599"
  },
  {
    "text": "they're user-friendly and what's more important is they're all fully based on kubernetes",
    "start": "185599",
    "end": "191120"
  },
  {
    "text": "extensibility crds and operators i mean so do they solve our problem well",
    "start": "191120",
    "end": "199040"
  },
  {
    "text": "kind of our users stop complaining about our kubernetes anymore",
    "start": "199040",
    "end": "204159"
  },
  {
    "text": "since now they have application platforms or even service platforms which which are all great but they didn't show",
    "start": "204159",
    "end": "212560"
  },
  {
    "text": "happiness at all since now they have too many platforms this is because at big company the",
    "start": "212560",
    "end": "219360"
  },
  {
    "text": "requirements from our users are highly diverse for example some applications are stable",
    "start": "219360",
    "end": "224959"
  },
  {
    "text": "workloads so we need to build them insteadable application platform which with value scanning policies for example",
    "start": "224959",
    "end": "231840"
  },
  {
    "text": "or canary role strategies however there are also many applications or stateless",
    "start": "231840",
    "end": "238480"
  },
  {
    "text": "they use deployment and workload flagger to route an hpa for autoscaling",
    "start": "238480",
    "end": "245120"
  },
  {
    "text": "and some other apps they just prefer to go to service stuff then we have to use kinetic to serve",
    "start": "245120",
    "end": "251439"
  },
  {
    "text": "them see although all these platforms have unique checks",
    "start": "251439",
    "end": "256880"
  },
  {
    "text": "they also share on their comments for example all of them requires less script service",
    "start": "256880",
    "end": "264240"
  },
  {
    "text": "but as apple builders we have to implement this functionality in different forms again and again since",
    "start": "264240",
    "end": "270479"
  },
  {
    "text": "every platform speaks different apis we are creating more fragmentations more",
    "start": "270479",
    "end": "276880"
  },
  {
    "text": "silos and more closed systems with in-house crds this doesn't feel good",
    "start": "276880",
    "end": "285440"
  },
  {
    "text": "so we stop here and begin to rethink what we've done in the last whole year especially we're",
    "start": "285600",
    "end": "292560"
  },
  {
    "text": "trying to build application label platforms for our users we want to make sure they are user",
    "start": "292560",
    "end": "297919"
  },
  {
    "text": "friendly so we adopted various ecosystem tools and define our own abstractions and we will",
    "start": "297919",
    "end": "304560"
  },
  {
    "text": "it works we also want to make sure that platforms are extensible this is an essential value",
    "start": "304560",
    "end": "311600"
  },
  {
    "text": "brought by companies right so we support different kinds of workloads different forms of operational",
    "start": "311600",
    "end": "318320"
  },
  {
    "text": "capabilities and strategies and that's also why we build different platforms to focus on different",
    "start": "318320",
    "end": "324080"
  },
  {
    "text": "scenarios this also works but what's messed up",
    "start": "324080",
    "end": "329600"
  },
  {
    "text": "here is all of these platforms became stylus",
    "start": "329600",
    "end": "334800"
  },
  {
    "text": "this actually raised a new challenge for us can we build them in a standard approach",
    "start": "334800",
    "end": "342240"
  },
  {
    "text": "these rethinkings finally work hard at the standard to build application platforms which name open application",
    "start": "342479",
    "end": "348320"
  },
  {
    "text": "model own and we open source this work based collaboration on microsoft last year",
    "start": "348320",
    "end": "354639"
  },
  {
    "text": "essentially own defined four application label primitives for kubernetes",
    "start": "354639",
    "end": "360240"
  },
  {
    "text": "near standardized approach firstly components it's all about what workloads you want",
    "start": "360240",
    "end": "366000"
  },
  {
    "text": "to define in most cases they are correct deployment but it can also be like functions",
    "start": "366000",
    "end": "371520"
  },
  {
    "text": "or your own companies operators the second concept is shapes which are",
    "start": "371520",
    "end": "377600"
  },
  {
    "text": "you to define how to operate the workloads auto scaling rollout traffic etc",
    "start": "377600",
    "end": "383759"
  },
  {
    "text": "are all perfect examples of chips some of them are provided out of the box by",
    "start": "383759",
    "end": "388800"
  },
  {
    "text": "kubernetes but most of them come from the ecosystem with crds and operators",
    "start": "388800",
    "end": "394800"
  },
  {
    "text": "this is also where attractions mostly happen if you want to make your users likes better",
    "start": "394800",
    "end": "400960"
  },
  {
    "text": "the third concept is application configuration this is a yaml file to explicitly by",
    "start": "400960",
    "end": "406319"
  },
  {
    "text": "chase to certain components so you clearly know the topology of your app instead of tracking them by labels or",
    "start": "406319",
    "end": "413919"
  },
  {
    "text": "other unstructured approaches the last but most important the definitions",
    "start": "413919",
    "end": "420479"
  },
  {
    "text": "not used to adjust the crd or any kubernetes api resource as workload or change",
    "start": "420479",
    "end": "425840"
  },
  {
    "text": "we will talk about this in detail soon so all of these concepts are defined by",
    "start": "425840",
    "end": "431520"
  },
  {
    "text": "kubernetes api resource model for example component is essentially a template object for your workload",
    "start": "431520",
    "end": "438160"
  },
  {
    "text": "and is versionized if the developer modifies this component yama file for example",
    "start": "438160",
    "end": "443840"
  },
  {
    "text": "it will generate a new revision of the deployment in your class which is immutable note that the",
    "start": "443840",
    "end": "450880"
  },
  {
    "text": "workload section in the component the armor file is fully pluggable so you're free to define any label of",
    "start": "450880",
    "end": "457599"
  },
  {
    "text": "your abstractions in components here kubernetes department or connective service it's all depends on you",
    "start": "457599",
    "end": "465599"
  },
  {
    "text": "for change and application configurations there are kubernetes api resources available the application",
    "start": "465599",
    "end": "472080"
  },
  {
    "text": "configuration in this example it referenced the two components the front end and the radius and this by",
    "start": "472080",
    "end": "479759"
  },
  {
    "text": "support old scanner and epa gateway are changed for the front end component",
    "start": "479759",
    "end": "485840"
  },
  {
    "text": "so this application configuration could be used as a self-contained application",
    "start": "485840",
    "end": "491039"
  },
  {
    "text": "definition file which includes every dependency and operational capability your workloads",
    "start": "491039",
    "end": "496720"
  },
  {
    "text": "need to run the last one definition this is very",
    "start": "496720",
    "end": "502240"
  },
  {
    "text": "interesting because for a platform it's important for you to figure out which complex api or crd",
    "start": "502240",
    "end": "508639"
  },
  {
    "text": "is the capability we want to expose to our users this means for the other api and crds",
    "start": "508639",
    "end": "515680"
  },
  {
    "text": "they are system level apis and we don't want to leak them to our users that's why we need to adjust the crd or",
    "start": "515680",
    "end": "522159"
  },
  {
    "text": "kubernetes api resource at workloads or trace and expose them to users they will",
    "start": "522159",
    "end": "528000"
  },
  {
    "text": "become the user-facing api for our platform which over platform speak",
    "start": "528000",
    "end": "534000"
  },
  {
    "text": "you can see here the point is everything is extensible because if the users need another workload or",
    "start": "534000",
    "end": "540000"
  },
  {
    "text": "trade for example what we need to do is simply install the kubernetes crd and the controller",
    "start": "540000",
    "end": "546320"
  },
  {
    "text": "and register it as a new capability the platform support either as a workload or addition",
    "start": "546320",
    "end": "554000"
  },
  {
    "text": "in this example i demoed how we register each commercial service as the traffic management chain in our",
    "start": "554000",
    "end": "560839"
  },
  {
    "text": "platform we also define that if conflicts means another service mesh",
    "start": "560839",
    "end": "566240"
  },
  {
    "text": "so the operators cannot make a mistake in the future today with the help of oh things are",
    "start": "566240",
    "end": "574000"
  },
  {
    "text": "getting much better in alibaba because we now have unified model layer for all application platforms in our company",
    "start": "574000",
    "end": "581839"
  },
  {
    "text": "all of the platforms speak apis such as component and application configuration with their",
    "start": "581839",
    "end": "587680"
  },
  {
    "text": "unique workloads and to serve different scenarios and what's more important is for the",
    "start": "587680",
    "end": "594320"
  },
  {
    "text": "common workloads and chase that we don't need to reinvent those wheels anymore",
    "start": "594320",
    "end": "599519"
  },
  {
    "text": "all these platforms now share a common pool of capabilities so the platform builders",
    "start": "599519",
    "end": "605760"
  },
  {
    "text": "just pick what they want and assemble them into their own platforms it's so easy and neat",
    "start": "605760",
    "end": "614000"
  },
  {
    "text": "besides as a building block for creating standard platforms oh also enabled us to dispute software",
    "start": "614160",
    "end": "621279"
  },
  {
    "text": "at global scale with collaboration of crosstalk project this is really important",
    "start": "621279",
    "end": "626959"
  },
  {
    "text": "now i will let my friend jarrod take from here so he's going ahead jared",
    "start": "626959",
    "end": "633519"
  },
  {
    "text": "all right thank you harry for showing us a little bit more about the standard application model and uh",
    "start": "634079",
    "end": "640480"
  },
  {
    "text": "ohm and how we can use that to describe applications um so one of the interesting things about real life applications is",
    "start": "640480",
    "end": "647680"
  },
  {
    "text": "often they don't just live in a single place right it's pretty common for applications to",
    "start": "647680",
    "end": "653519"
  },
  {
    "text": "be spread out or the components of them to be spread out across different regions and zones different",
    "start": "653519",
    "end": "659920"
  },
  {
    "text": "clusters and maybe even entire cloud providers as well there's a number of reasons you might want to do",
    "start": "659920",
    "end": "665440"
  },
  {
    "text": "this um probably the most popular around availability in resiliency where if one region goes",
    "start": "665440",
    "end": "671680"
  },
  {
    "text": "down or one cloud provider is down your application running in multiple areas there makes it more",
    "start": "671680",
    "end": "678800"
  },
  {
    "text": "resilient to those outages uh because there's still parts of your application that are running and accessible right",
    "start": "678800",
    "end": "684399"
  },
  {
    "text": "cost is another reason too where certain services may be cheaper in other cloud providers",
    "start": "684399",
    "end": "690079"
  },
  {
    "text": "so you know choosing the cheapest ones from the cheapest clouds can reduce your overall operational",
    "start": "690079",
    "end": "695920"
  },
  {
    "text": "costs um and then another one is for new or unique services say amazon",
    "start": "695920",
    "end": "701440"
  },
  {
    "text": "comes out with a brand new aiml service or something like that you want to take advantage of it",
    "start": "701440",
    "end": "707680"
  },
  {
    "text": "you might have your application running across multiple cloud providers in order to use the latest and greatest",
    "start": "707680",
    "end": "713839"
  },
  {
    "text": "services that make sense for your business of course that does come with some",
    "start": "713839",
    "end": "719440"
  },
  {
    "text": "challenges though um and as with anything you really have to know uh what are you building",
    "start": "719440",
    "end": "725920"
  },
  {
    "text": "an act of intention there because if you just want to start putting an application in you know",
    "start": "725920",
    "end": "731440"
  },
  {
    "text": "different regions of different places use a bunch of different services without actually knowing what you're",
    "start": "731440",
    "end": "736560"
  },
  {
    "text": "trying to solve you're not going to end up in a good place with that so understand what you're building",
    "start": "736560",
    "end": "741680"
  },
  {
    "text": "but also understand the infrastructure needs of your application understand you know where you need to",
    "start": "741680",
    "end": "748399"
  },
  {
    "text": "reduce latency or what services need to be accessible to what components in your application",
    "start": "748399",
    "end": "753839"
  },
  {
    "text": "and you have to factor all that in when you have the components running in various places around the globe right um when you start using a lot of",
    "start": "753839",
    "end": "760720"
  },
  {
    "text": "different cloud providers or different platforms you're going to run into some complexity there with every cloud writer having",
    "start": "760720",
    "end": "766639"
  },
  {
    "text": "their own dashboard their own console their own cli tools etc um and",
    "start": "766639",
    "end": "772000"
  },
  {
    "text": "then different skill sets as well so you kind of have to think about how much complexity do you want to",
    "start": "772000",
    "end": "777279"
  },
  {
    "text": "take on um in order to um you know get the benefits out of being able to find multiple",
    "start": "777279",
    "end": "783600"
  },
  {
    "text": "places sometimes you might not even need to hire uh for new skill sets to be able to",
    "start": "783600",
    "end": "789279"
  },
  {
    "text": "match what your application needs and where it needs to needs to run then of course all the operational stuff",
    "start": "789279",
    "end": "795920"
  },
  {
    "text": "that comes along with the application that gets a little more complicated too when you're running in multiple places you want to be able to monitor it",
    "start": "795920",
    "end": "802399"
  },
  {
    "text": "manage it make sure the policy is applied all that operational stuff running across a lot of different areas becomes",
    "start": "802399",
    "end": "809040"
  },
  {
    "text": "more complicated so one solution here that we believe to",
    "start": "809040",
    "end": "815360"
  },
  {
    "text": "be pretty efficient is a control plane solution um you know we've seen control",
    "start": "815360",
    "end": "821760"
  },
  {
    "text": "planes before for kubernetes itself right kubernetes is a control plane um that is able to run",
    "start": "821760",
    "end": "829120"
  },
  {
    "text": "a bunch of components like pods let's say across a series or set of nodes um so you can",
    "start": "829120",
    "end": "836079"
  },
  {
    "text": "think of the same thing for a control plane that is running and managing a global",
    "start": "836079",
    "end": "842480"
  },
  {
    "text": "application so outside of the scope of just one cluster you can have a centralized control plane",
    "start": "842480",
    "end": "848639"
  },
  {
    "text": "that puts all of our decision making and our orchestration and scheduling etc",
    "start": "848639",
    "end": "853680"
  },
  {
    "text": "into a single centralized place with a single api to access it as well so you put that",
    "start": "853680",
    "end": "860480"
  },
  {
    "text": "logic and the complexity into the control plane to manage this global application and deployment and infrastructure for us",
    "start": "860480",
    "end": "866800"
  },
  {
    "text": "and it can greatly simplify the burdens that we put on ourselves as",
    "start": "866800",
    "end": "872800"
  },
  {
    "text": "humans right so one particular control plane that",
    "start": "872800",
    "end": "879440"
  },
  {
    "text": "meets this description here is a open source project it's called cross and so it is a cncf sandbox project now",
    "start": "879440",
    "end": "887680"
  },
  {
    "text": "uh just recently as in the last month but it is a open source control plane it",
    "start": "887680",
    "end": "893279"
  },
  {
    "text": "is really focused on being able to provision infrastructure",
    "start": "893279",
    "end": "898880"
  },
  {
    "text": "and get it ready for the applications and be able to connect everything together so that applications have everything",
    "start": "898880",
    "end": "905360"
  },
  {
    "text": "they need to be running and successful and so there's three main parts to the design and feature set here for",
    "start": "905360",
    "end": "913680"
  },
  {
    "text": "cross plane the first one is to be able to provision infrastructure itself uh you can use that do that",
    "start": "913680",
    "end": "919279"
  },
  {
    "text": "declaratively using the kubernetes api like with cube control you can bring up you know amazon rds",
    "start": "919279",
    "end": "926079"
  },
  {
    "text": "database or google cloud sql or whatever you want directly using the greatest api but more power here actually comes in uh",
    "start": "926079",
    "end": "934320"
  },
  {
    "text": "ability to be able to create your own uh infrastructure api without writing any code so you can",
    "start": "934320",
    "end": "939920"
  },
  {
    "text": "build your own um brand new declarative api that kind of captures",
    "start": "939920",
    "end": "945440"
  },
  {
    "text": "what it means to be an application or a set of infrastructure in your",
    "start": "945440",
    "end": "951440"
  },
  {
    "text": "organization we'll get into more details on that but essentially you know capturing the configuration policy best practices",
    "start": "951440",
    "end": "958959"
  },
  {
    "text": "and putting that all behind a api that your applications can self-service on demand use to get the",
    "start": "958959",
    "end": "965600"
  },
  {
    "text": "infrastructure that they need and then the third feature area here is around running and deploying",
    "start": "965600",
    "end": "970880"
  },
  {
    "text": "applications to use that infrastructure that we're bringing up so crossplane is the um",
    "start": "970880",
    "end": "978800"
  },
  {
    "text": "open application model implementation for kubernetes so we see a big tie in here with",
    "start": "978800",
    "end": "984959"
  },
  {
    "text": "crossband as a control plane and ohm for having a standard",
    "start": "984959",
    "end": "990079"
  },
  {
    "text": "uh normalized way of declaring our applications so as we've been talking about the",
    "start": "990079",
    "end": "997040"
  },
  {
    "text": "standardized applications they'll need infrastructure at some point with you know databases or buckets some networking primitives all",
    "start": "997040",
    "end": "1003600"
  },
  {
    "text": "that sort of stuff and this control plane api that we've been talking about um is a perfect place",
    "start": "1003600",
    "end": "1008800"
  },
  {
    "text": "a a centralized place to do the provisioning and getting the infrastructure set up for",
    "start": "1008800",
    "end": "1014720"
  },
  {
    "text": "our standardized apps to consume and so a little bit more details",
    "start": "1014720",
    "end": "1020000"
  },
  {
    "text": "about this api this infrastructure api that we've been talking about so when you have the ability",
    "start": "1020000",
    "end": "1025280"
  },
  {
    "text": "to define your own api your own infrastructure api you can put all of the important details",
    "start": "1025280",
    "end": "1034798"
  },
  {
    "text": "of what it means to be let's say a postgres database in your organization what policy what",
    "start": "1034799",
    "end": "1040000"
  },
  {
    "text": "configuration you want all this complexity uh around the standard or best practices",
    "start": "1040000",
    "end": "1046319"
  },
  {
    "text": "ways to do infrastructure for your organization you can capture that and encode that in this api here so that",
    "start": "1046319",
    "end": "1053440"
  },
  {
    "text": "when uh applications want to consume infrastructure they have this easy to use api",
    "start": "1053440",
    "end": "1059440"
  },
  {
    "text": "and it's a safe uh secure way of getting infrastructure on demand for the applications that need it but",
    "start": "1059440",
    "end": "1067200"
  },
  {
    "text": "making sure that it's aligned with the policy and configuration and best practices that is important to your organization",
    "start": "1067200",
    "end": "1076000"
  },
  {
    "text": "in the last slide here we have a diagram of what this looks like",
    "start": "1076160",
    "end": "1081280"
  },
  {
    "text": "for a centralized control plane providing an infrastructure api to global applications so we see in the",
    "start": "1081280",
    "end": "1089280"
  },
  {
    "text": "blue box here the cross building control plane and this infrastructure api that you have designed and",
    "start": "1089280",
    "end": "1095039"
  },
  {
    "text": "declared there so the control plane is you know spanning we could think of",
    "start": "1095039",
    "end": "1100799"
  },
  {
    "text": "it as spanning across multiple cloud providers so it has connections to them and",
    "start": "1100799",
    "end": "1106320"
  },
  {
    "text": "can bring up when needed or provision infrastructure in any of the cloud providers that you have it pointing at",
    "start": "1106320",
    "end": "1112320"
  },
  {
    "text": "and then this infrastructure api that you have declared will be published to all the various",
    "start": "1112320",
    "end": "1119600"
  },
  {
    "text": "clusters where you want to be running your applications so this is a bit of a new design",
    "start": "1119600",
    "end": "1125360"
  },
  {
    "text": "here for the cross screen project where we have this uh application operator running inside each",
    "start": "1125360",
    "end": "1130720"
  },
  {
    "text": "one of the clusters that you want to be running your applications and where those applications will need some",
    "start": "1130720",
    "end": "1137280"
  },
  {
    "text": "infrastructure so basically you can think about it as the application uh needs something like a",
    "start": "1137280",
    "end": "1143919"
  },
  {
    "text": "database and it will look at the api the infrastructure api that you have",
    "start": "1143919",
    "end": "1149280"
  },
  {
    "text": "published and declaratively state hey i need a database from this infrastructure api and it will",
    "start": "1149280",
    "end": "1157600"
  },
  {
    "text": "that request will be sent off to the centralized control plane where your infrastructure api lives and",
    "start": "1157600",
    "end": "1164000"
  },
  {
    "text": "it will turn that simple request of okay i need a database and it will turn that into well what does a database mean",
    "start": "1164000",
    "end": "1170400"
  },
  {
    "text": "for my organization and all the policy all the configuration best practices all that stuff",
    "start": "1170400",
    "end": "1175600"
  },
  {
    "text": "will be enforced when the actual database gets provisioned in one of the cloud",
    "start": "1175600",
    "end": "1181919"
  },
  {
    "text": "providers there so that's a bit of a picture of it and let's actually see it all in action now",
    "start": "1181919",
    "end": "1187440"
  },
  {
    "text": "with a demo in this demo we're going to walk through",
    "start": "1187440",
    "end": "1192480"
  },
  {
    "text": "how to build a global control plane api uh and use that api to provision infrastructure and",
    "start": "1192480",
    "end": "1200559"
  },
  {
    "text": "deploy standardized applications uh all in a global context so let's go ahead and get started on",
    "start": "1200559",
    "end": "1207039"
  },
  {
    "text": "that back at the command line here so just want to get you up to speed on what i already have set up",
    "start": "1207039",
    "end": "1212880"
  },
  {
    "text": "basically all i have set up is the global control plane itself so i've got",
    "start": "1212880",
    "end": "1218000"
  },
  {
    "text": "crossplane installed uh crossband's little package manager uh some support for ohm and for alibaba",
    "start": "1218000",
    "end": "1224960"
  },
  {
    "text": "and that's basically it i haven't defined my infrastructure api yet i don't have any applications running",
    "start": "1224960",
    "end": "1230080"
  },
  {
    "text": "so let's go ahead and start defining the infrastructure api as the very first",
    "start": "1230080",
    "end": "1235520"
  },
  {
    "text": "step so i'm going to need to do three things here to basically define and publish my api",
    "start": "1235520",
    "end": "1243760"
  },
  {
    "text": "so let's start with the infrastructure definition that i'm going to create basically i am saying uh or start as the",
    "start": "1243760",
    "end": "1251360"
  },
  {
    "text": "first step of starting to define my infrastructure api i'm going to say um okay one type that you can",
    "start": "1251360",
    "end": "1259600"
  },
  {
    "text": "create from my infrastructure api is going to be postgres and i'm going to provide a schema of",
    "start": "1259600",
    "end": "1266559"
  },
  {
    "text": "things that you're allowed to set things that you can configure when you're asking for postgres when an",
    "start": "1266559",
    "end": "1271760"
  },
  {
    "text": "application is requesting postgres basically all we're putting in here is the uh amount of storage",
    "start": "1271760",
    "end": "1277919"
  },
  {
    "text": "the size of the database so an application can say i need 100 gigabyte postgres and that's really all that they get to",
    "start": "1277919",
    "end": "1283919"
  },
  {
    "text": "say um the next phase is publishing this api so",
    "start": "1283919",
    "end": "1288960"
  },
  {
    "text": "just an infrastructure publication object that will ensure that this api is published to",
    "start": "1288960",
    "end": "1295120"
  },
  {
    "text": "the application clusters where the actual containers and pods etc that have the",
    "start": "1295120",
    "end": "1301360"
  },
  {
    "text": "application logic will be running the ones that need this infrastructure and then the final part",
    "start": "1301360",
    "end": "1306960"
  },
  {
    "text": "of the infrastructure api that i'm creating is that we've defined postgres as part",
    "start": "1306960",
    "end": "1312720"
  },
  {
    "text": "of the api but we haven't really said what it means underneath so in this particular infrastructure api",
    "start": "1312720",
    "end": "1318559"
  },
  {
    "text": "that i'm building as the infrastructure owner i'm going to say that when an application requests",
    "start": "1318559",
    "end": "1324720"
  },
  {
    "text": "postgres um what they're actually going to get is an alibaba cloud",
    "start": "1324720",
    "end": "1329840"
  },
  {
    "text": "rds instance for postgres and then remember how we said that a application",
    "start": "1329840",
    "end": "1336720"
  },
  {
    "text": "developer they just get to say how big the storage amount of storage for it but me as the infrastructure owner",
    "start": "1336720",
    "end": "1344880"
  },
  {
    "text": "gets to say a lot more than that i'm gonna specify all the configuration the policy the best practices all that",
    "start": "1344880",
    "end": "1350320"
  },
  {
    "text": "sort of stuff is what i have control over and it's underneath the api line right it's not exposed to the user",
    "start": "1350320",
    "end": "1357440"
  },
  {
    "text": "and they don't get to control that sort of stuff so i have some more details uh configuration and policy etc",
    "start": "1357440",
    "end": "1363600"
  },
  {
    "text": "about this postgres instance that an application can request and that basically is what makes up my",
    "start": "1363600",
    "end": "1370320"
  },
  {
    "text": "infrastructure api my custom infrastructure api that i am publishing and providing",
    "start": "1370320",
    "end": "1376559"
  },
  {
    "text": "for applications in my organization so when they request postgres they can just say how big it is",
    "start": "1376559",
    "end": "1381919"
  },
  {
    "text": "but then all of my important policy will be applied to it underneath okay so those are the three things that",
    "start": "1381919",
    "end": "1389120"
  },
  {
    "text": "we need to create so i'm going to go ahead and just use my cheat sheet here to copy and paste them",
    "start": "1389120",
    "end": "1396960"
  },
  {
    "text": "into the command prompt and so we're creating our infrastructure definition we're publishing it and we're giving the",
    "start": "1396960",
    "end": "1402720"
  },
  {
    "text": "specific alibaba composition composition uh for that postgres",
    "start": "1402720",
    "end": "1407840"
  },
  {
    "text": "api that we're defining all right so the infrastructure api is now published",
    "start": "1407840",
    "end": "1414640"
  },
  {
    "text": "and defined and ready so let's move on to a totally different role so so far i've been the infrastructure",
    "start": "1414640",
    "end": "1421520"
  },
  {
    "text": "owner i've been defining and creating and publishing this infrastructure api for my applications my application teams",
    "start": "1421520",
    "end": "1429679"
  },
  {
    "text": "but i haven't actually um done anything with the application yet",
    "start": "1429679",
    "end": "1434880"
  },
  {
    "text": "so now i'm going to switch roles to be an application developer i have you know i'm spending my time writing code",
    "start": "1434880",
    "end": "1441520"
  },
  {
    "text": "i'm creating container images that contain my code and so for me uh in this application",
    "start": "1441520",
    "end": "1447360"
  },
  {
    "text": "that i'm writing i'm just going to define a set of components for it right it's",
    "start": "1447360",
    "end": "1452640"
  },
  {
    "text": "you know what makes up my application is a postgres database right so i need",
    "start": "1452640",
    "end": "1458960"
  },
  {
    "text": "postgres i have a requirement uh in my application for postgres and then i have a number of containers",
    "start": "1458960",
    "end": "1465919"
  },
  {
    "text": "uh that i want to run to to access the postgres database um to show some uh flights",
    "start": "1465919",
    "end": "1473039"
  },
  {
    "text": "that are currently running uh some earthquake information from the database",
    "start": "1473039",
    "end": "1478240"
  },
  {
    "text": "um you know just a couple other components like showing weather as well uh and a ui for it all so that is",
    "start": "1478240",
    "end": "1484960"
  },
  {
    "text": "uh all the components that make up my application you know i'm the application developer here and this is what i produce",
    "start": "1484960",
    "end": "1491360"
  },
  {
    "text": "so let's go ahead and create those too so i'm going to go ahead and apply my",
    "start": "1491360",
    "end": "1498960"
  },
  {
    "text": "application components and those are all now all created and",
    "start": "1498960",
    "end": "1505279"
  },
  {
    "text": "then let's go on to the final phase here of we've seen two roles so far we've seen",
    "start": "1505279",
    "end": "1510799"
  },
  {
    "text": "the infrastructure owner who defines the infrastructure api we've seen the application developer who defines the components that make up",
    "start": "1510799",
    "end": "1516880"
  },
  {
    "text": "their application and now this third persona or this role it is the application operator who's in",
    "start": "1516880",
    "end": "1523200"
  },
  {
    "text": "charge of actually putting the application components together in a uh you know a way at run time that makes",
    "start": "1523200",
    "end": "1529679"
  },
  {
    "text": "sense so uh there's a couple of traits that we're going to apply to the components that our application",
    "start": "1529679",
    "end": "1537440"
  },
  {
    "text": "developer created so we're going to apply a scalar trait",
    "start": "1537440",
    "end": "1543039"
  },
  {
    "text": "so that you know the various some of the components of the application are gonna run with the higher replica count",
    "start": "1543039",
    "end": "1548080"
  },
  {
    "text": "so we're gonna scale those up for them and uh we're also going to specify some",
    "start": "1548080",
    "end": "1554960"
  },
  {
    "text": "information about um where the data can be picked up from so you know the application developer said",
    "start": "1554960",
    "end": "1561840"
  },
  {
    "text": "they need postgres that came from the infrastructure api that we created and we're going to tie it all together",
    "start": "1561840",
    "end": "1567760"
  },
  {
    "text": "here so let's go ahead and create this application configuration as well",
    "start": "1567760",
    "end": "1574158"
  },
  {
    "text": "okay and once this runs here this basically kicks everything off so this starts the process of uh you",
    "start": "1575679",
    "end": "1582799"
  },
  {
    "text": "know we've modeled all this stuff with the open application model and then crossplane is going to take those uh general",
    "start": "1582799",
    "end": "1589679"
  },
  {
    "text": "ways of describing the application uh like components and workloads and traits and things like",
    "start": "1589679",
    "end": "1595440"
  },
  {
    "text": "that that we've talked about and that's going to start turning those into real primitives uh that can actually run and deploy and",
    "start": "1595440",
    "end": "1602799"
  },
  {
    "text": "use um sorry to you know run the application itself and uh you know provision the",
    "start": "1602799",
    "end": "1609360"
  },
  {
    "text": "infrastructure from the infrastructure api and kind of get everything up and running all together",
    "start": "1609360",
    "end": "1614960"
  },
  {
    "text": "so we should start seeing this come together let's uh take a quick look of you know what's",
    "start": "1614960",
    "end": "1620559"
  },
  {
    "text": "actually running right now um this is a small command i don't think i needed to copy paste that one but i",
    "start": "1620559",
    "end": "1626080"
  },
  {
    "text": "did from my cheat sheet so basically we can see that we have a",
    "start": "1626080",
    "end": "1631120"
  },
  {
    "text": "number of our containers are now up and running and the data api one is not ready yet",
    "start": "1631120",
    "end": "1637279"
  },
  {
    "text": "so this is the one that wants to talk to postgres and uh most likely postgres isn't quite",
    "start": "1637279",
    "end": "1642399"
  },
  {
    "text": "ready yet because it does take a while to spin up in alibaba cloud and you know on demand bring",
    "start": "1642399",
    "end": "1648000"
  },
  {
    "text": "a brand new database in the cloud like manage database in alibaba cloud up and",
    "start": "1648000",
    "end": "1653760"
  },
  {
    "text": "running so let's get a little more details about um that alibaba rds instance um it's in the",
    "start": "1653760",
    "end": "1660880"
  },
  {
    "text": "creating state so we're going to need to wait for it to finish creating and then the rest of our application",
    "start": "1660880",
    "end": "1667039"
  },
  {
    "text": "we'll be able to pick it up and start talking to it and the rest of the application will just start working",
    "start": "1667039",
    "end": "1673279"
  },
  {
    "text": "so let's go ahead and wait for that just a second okay let's check in on the database",
    "start": "1673279",
    "end": "1679919"
  },
  {
    "text": "instance and it looks like it's now ready and in the running state so if the alibaba cloud database",
    "start": "1679919",
    "end": "1687520"
  },
  {
    "text": "instance is up and running then we should check on our application pods that are running in gke and they",
    "start": "1687520",
    "end": "1694480"
  },
  {
    "text": "are all now running and the data api is able to connect that alibaba uh postgres",
    "start": "1694480",
    "end": "1700240"
  },
  {
    "text": "and so everything looks like it's up and running and so now let's try to get into the",
    "start": "1700240",
    "end": "1707120"
  },
  {
    "text": "uh the ui for this application let's look at the load balancer uh for my gke cluster and let's go ahead",
    "start": "1707120",
    "end": "1714480"
  },
  {
    "text": "and go to that and find uh the dashboard here basically",
    "start": "1714480",
    "end": "1719679"
  },
  {
    "text": "so the application that i brought up is up and running it's talking to the database it's got uh data from postgres",
    "start": "1719679",
    "end": "1727279"
  },
  {
    "text": "and so we can start looking at you know in this application some of the data that was uh captured for us and held in our alibaba",
    "start": "1727279",
    "end": "1734240"
  },
  {
    "text": "postgres database so we can see various flights that are up and running right now",
    "start": "1734240",
    "end": "1739279"
  },
  {
    "text": "uh we can see the latest earthquake information you know this is all real time that's uh picked up for various",
    "start": "1739279",
    "end": "1744559"
  },
  {
    "text": "services and stored in our postgres um oh that's a big earthquake up near",
    "start": "1744559",
    "end": "1749760"
  },
  {
    "text": "alaska or sorry british columbia that's um hopefully that's nothing to be concerned about and you know various weather and",
    "start": "1749760",
    "end": "1756080"
  },
  {
    "text": "stuff too so basically um everything looks to be up and running",
    "start": "1756080",
    "end": "1761360"
  },
  {
    "text": "which is great uh so let's try to wrap all this up here so",
    "start": "1761360",
    "end": "1766960"
  },
  {
    "text": "basically we did three different things where we defined an infrastructure api",
    "start": "1766960",
    "end": "1774080"
  },
  {
    "text": "uh for my applications to consume we gave them some knobs to configure such",
    "start": "1774080",
    "end": "1779360"
  },
  {
    "text": "as the size of it but we published it for them uh you know as part of that infrastructure api i",
    "start": "1779360",
    "end": "1784720"
  },
  {
    "text": "specified what does it mean to be postgresql it means in my environment that i'm going to pick up that database",
    "start": "1784720",
    "end": "1790960"
  },
  {
    "text": "from alibaba it's going to have this particular configuration and policy and then my application developers to",
    "start": "1790960",
    "end": "1798000"
  },
  {
    "text": "find all the components for their application uh the fact that they need postgres um you know how big they want that postgres",
    "start": "1798000",
    "end": "1805120"
  },
  {
    "text": "um and then the application operator took the components of the application",
    "start": "1805120",
    "end": "1811360"
  },
  {
    "text": "and specified some traits for them to make them more scaled",
    "start": "1811360",
    "end": "1816960"
  },
  {
    "text": "put everything together in gke so that we ended up with a live service that's up and running and",
    "start": "1816960",
    "end": "1824799"
  },
  {
    "text": "running in gke but we've got infrastructure provisioned from our custom declarative",
    "start": "1824799",
    "end": "1832159"
  },
  {
    "text": "infrastructure api and our global control plane that resulted in infrastructure like the",
    "start": "1832159",
    "end": "1837679"
  },
  {
    "text": "database the postgres instance being provisioned in alibaba so all these things got put together",
    "start": "1837679",
    "end": "1843360"
  },
  {
    "text": "with a standard way to define our applications a global control plane with an api to",
    "start": "1843360",
    "end": "1849440"
  },
  {
    "text": "safely on demand self-service consume infrastructure in a way that has been uh you know",
    "start": "1849440",
    "end": "1855600"
  },
  {
    "text": "blessed and codified all the best practices and policy and configuration that our infrastructure owners",
    "start": "1855600",
    "end": "1861279"
  },
  {
    "text": "feel is important and brought all this together in a very standardized way uh at a global scale so let's head back",
    "start": "1861279",
    "end": "1868559"
  },
  {
    "text": "to our slides real quick to finish this all off so basically you know ohm uh is",
    "start": "1868559",
    "end": "1876080"
  },
  {
    "text": "an open source spec a you know cross planes an open source project as well um so we have communities around",
    "start": "1876080",
    "end": "1882159"
  },
  {
    "text": "those and we love everyone to get involved happy to jump in and help you get started here's some uh helpful links on where to",
    "start": "1882159",
    "end": "1889360"
  },
  {
    "text": "find the quick start documentation we're active on twitter and slack and everything so uh you know if you want to learn more",
    "start": "1889360",
    "end": "1896799"
  },
  {
    "text": "contribute uh open issues anything like that we are a happy community and we're growing and we'd love to have you",
    "start": "1896799",
    "end": "1903840"
  },
  {
    "text": "so i think that pretty much wraps everything up and uh harry and i will be here to answer a couple of questions",
    "start": "1903840",
    "end": "1910399"
  },
  {
    "text": "um at the end of this recording but otherwise thank you very much for attending and we're uh happy to share this information with",
    "start": "1910399",
    "end": "1916640"
  },
  {
    "text": "you today",
    "start": "1916640",
    "end": "1919760"
  }
]