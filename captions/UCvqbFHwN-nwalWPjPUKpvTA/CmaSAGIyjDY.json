[
  {
    "text": "welcome all of you of course to to you know in this room to",
    "start": "0",
    "end": "6600"
  },
  {
    "text": "yeah today we are going to give the you know like the the what's new in chaos match",
    "start": "6600",
    "end": "13500"
  },
  {
    "text": "and uh also I want to share a little bit history about cashmere you know this",
    "start": "13500",
    "end": "19199"
  },
  {
    "text": "drone is the maintenance check of maintain a chart of cash mesh but",
    "start": "19199",
    "end": "24840"
  },
  {
    "text": "technically I'm not a maintainer I would say but I'm the kind of like the creator",
    "start": "24840",
    "end": "30060"
  },
  {
    "text": "of cast mesh and I would say Carousel smash is uh is a project that",
    "start": "30060",
    "end": "38219"
  },
  {
    "text": "is created by the accident yeah so um first of all I want to do a really",
    "start": "38219",
    "end": "44940"
  },
  {
    "text": "quick survey who is uh any of you are using cast mesh in production you can",
    "start": "44940",
    "end": "50820"
  },
  {
    "text": "raise your hand only one I know one okay cool I would say I can see the great",
    "start": "50820",
    "end": "58079"
  },
  {
    "text": "potential of this this open source project so um",
    "start": "58079",
    "end": "63480"
  },
  {
    "text": "actually uh before introducing you know the newest update of our cash mesh I",
    "start": "63480",
    "end": "70439"
  },
  {
    "text": "want to give a little bit about the history about chaos mesh well um you",
    "start": "70439",
    "end": "76799"
  },
  {
    "text": "know we are come from the the company called pin cap which is the a distributed database company we are",
    "start": "76799",
    "end": "83159"
  },
  {
    "text": "seven years ago we started to started to build a uh you know open source version",
    "start": "83159",
    "end": "89640"
  },
  {
    "text": "of Google spanner which is which is idb uh it is highly distributed massive",
    "start": "89640",
    "end": "96479"
  },
  {
    "text": "scale distributed system and provide the full feature stickers so that means it's super complicated disability system so",
    "start": "96479",
    "end": "105140"
  },
  {
    "text": "that's uh it's really hard to build but I think the even harder problem is that",
    "start": "105140",
    "end": "111780"
  },
  {
    "text": "how to test the the you know a distributed system like this I think it",
    "start": "111780",
    "end": "118439"
  },
  {
    "text": "is even harder than you know to build a you know distributed database in internally I I have a calculate the the",
    "start": "118439",
    "end": "127920"
  },
  {
    "text": "code the of the hour you know like unit test and the test case I I think the the",
    "start": "127920",
    "end": "134879"
  },
  {
    "text": "the the line of code of our you know integration test or test case is like 10",
    "start": "134879",
    "end": "140879"
  },
  {
    "text": "times larger than the actual code base of our database so that's",
    "start": "140879",
    "end": "145920"
  },
  {
    "text": "um that's what we said the how to test the distributed system is really really hard and a good way to test the you know",
    "start": "145920",
    "end": "154500"
  },
  {
    "text": "distributed system is um actually you know deletes your your",
    "start": "154500",
    "end": "159720"
  },
  {
    "text": "file in uh in your in your disk uh I I bet some of you may may know this uh TV",
    "start": "159720",
    "end": "167940"
  },
  {
    "text": "show like Silicon Valley and uh it is uh accidentally accidentally deletes the",
    "start": "167940",
    "end": "175980"
  },
  {
    "text": "the the file that um I think that's a good way maybe that's a good way to test the",
    "start": "175980",
    "end": "183080"
  },
  {
    "text": "distribute assistant and another you know very interesting",
    "start": "183080",
    "end": "188160"
  },
  {
    "text": "you know uh Speech is given by",
    "start": "188160",
    "end": "193400"
  },
  {
    "text": "Foundation DB and in 2014 in this in",
    "start": "193400",
    "end": "198540"
  },
  {
    "text": "exchange Loop this um this talk is actually really really good and this talk is long before that",
    "start": "198540",
    "end": "206099"
  },
  {
    "text": "Netflix introducing the idea about you know chaos engineering so uh it's like",
    "start": "206099",
    "end": "213840"
  },
  {
    "text": "I think uh eight years ago and before we even create a pin cap and I I I watched",
    "start": "213840",
    "end": "223260"
  },
  {
    "text": "that that uh that talk I sing I learned a lot from this this talk because uh in",
    "start": "223260",
    "end": "229440"
  },
  {
    "text": "this talk uh this guy introducing the very interesting concept means uh",
    "start": "229440",
    "end": "234840"
  },
  {
    "text": "deterministic simulation for the you know uh for the discrete assistant so that guy is basically want to build the",
    "start": "234840",
    "end": "242420"
  },
  {
    "text": "uh you know deterministic uh Simulator for all of",
    "start": "242420",
    "end": "248400"
  },
  {
    "text": "the uh to emulate all of the uh complicated status of your your system",
    "start": "248400",
    "end": "256139"
  },
  {
    "text": "and to reproduce the the bug uh 100 uh",
    "start": "256139",
    "end": "261959"
  },
  {
    "text": "reproduce the the the bug but I think uh okay",
    "start": "261959",
    "end": "269479"
  },
  {
    "text": "I think it's not a um the deterministic testing for the you",
    "start": "271020",
    "end": "276840"
  },
  {
    "text": "know large-scale distributed system is not that um realistic so but on the other hand I",
    "start": "276840",
    "end": "285360"
  },
  {
    "text": "think increase the the probability of reproducing bug by you know inject the",
    "start": "285360",
    "end": "291900"
  },
  {
    "text": "failure to the the uh the system is is",
    "start": "291900",
    "end": "297060"
  },
  {
    "text": "doable and so we are not going to create 100 reproduce rate for for your system",
    "start": "297060",
    "end": "304620"
  },
  {
    "text": "just like unit test I think unit test is not um unit tests are not looking for you",
    "start": "304620",
    "end": "311880"
  },
  {
    "text": "know a lot of you know Pro box in uh",
    "start": "311880",
    "end": "317040"
  },
  {
    "text": "complicated distributed system but I think the fourth injection which is like chaos engineering is uh more uh",
    "start": "317040",
    "end": "325560"
  },
  {
    "text": "reasonable way to you know create a high quality system on",
    "start": "325560",
    "end": "331560"
  },
  {
    "text": "a high quality system in the distributed world so that's the beginning of",
    "start": "331560",
    "end": "339240"
  },
  {
    "text": "um and we take a look at do the research on a lot of you know like for injection Frameworks and open source projects and",
    "start": "339240",
    "end": "346620"
  },
  {
    "text": "we found that it's really hard to you know orchestrating all of this uh afford",
    "start": "346620",
    "end": "352560"
  },
  {
    "text": "injection tools together to create the experiment uh for you know like your",
    "start": "352560",
    "end": "358380"
  },
  {
    "text": "your orchestrating this this kind of two and also you can see the uh namazu you",
    "start": "358380",
    "end": "364680"
  },
  {
    "text": "can see Jepsen and it is uh but all of these two are totally separated and it's",
    "start": "364680",
    "end": "370860"
  },
  {
    "text": "really hard to use so and in the early days of of pink hat uh",
    "start": "370860",
    "end": "379080"
  },
  {
    "text": "the the database company uh at the very beginning we we create uh the internal",
    "start": "379080",
    "end": "384720"
  },
  {
    "text": "project we we called sharinger if you're familiar with uh quantum physics you",
    "start": "384720",
    "end": "390120"
  },
  {
    "text": "know what I mean about this name uh it's basically create a container based for",
    "start": "390120",
    "end": "395400"
  },
  {
    "text": "the injection system for you know uh for for our database",
    "start": "395400",
    "end": "400620"
  },
  {
    "text": "so it is only designed for for for for tidy B but I think that's the you know",
    "start": "400620",
    "end": "407580"
  },
  {
    "text": "uh and then we open source this this project at changing the name as the cash mesh that's the beginning of cash mesh",
    "start": "407580",
    "end": "415259"
  },
  {
    "text": "so that's the original screenshot of uh scherdinger but you know uh cashmesh",
    "start": "415259",
    "end": "423240"
  },
  {
    "text": "have have a very more fancier you know uh dashboard and UI compares to this",
    "start": "423240",
    "end": "428280"
  },
  {
    "text": "project so this is a little bit history and we",
    "start": "428280",
    "end": "433440"
  },
  {
    "text": "created this project in 2018 we open source that adds uh 2019 the last day of",
    "start": "433440",
    "end": "443160"
  },
  {
    "text": "2019. and then become this year uh because Mash become uh have become in",
    "start": "443160",
    "end": "449639"
  },
  {
    "text": "the the incubating project uh in in cncf so yeah that's a little bit background",
    "start": "449639",
    "end": "456800"
  },
  {
    "text": "about cast mesh and",
    "start": "456800",
    "end": "462860"
  },
  {
    "text": "okay the the the next part I will hand over to",
    "start": "463080",
    "end": "468319"
  },
  {
    "text": "in the following slides and an assert one is multi-kubernetes",
    "start": "550080",
    "end": "556740"
  },
  {
    "text": "support which allow users to launch chaos workflow on multi-cluster using",
    "start": "556740",
    "end": "562740"
  },
  {
    "text": "one Global controller okay so the first feature I would like",
    "start": "562740",
    "end": "567839"
  },
  {
    "text": "to talk about is the Azure chaos so SN M imply this feature allows us to",
    "start": "567839",
    "end": "573899"
  },
  {
    "text": "run Chaos workloads on top of the Azure clouds so before 2.4 we have already",
    "start": "573899",
    "end": "579480"
  },
  {
    "text": "support gcp chaos in AWS chaos we have already received the Manning positive",
    "start": "579480",
    "end": "584580"
  },
  {
    "text": "feedback from a community so very naturally we wanted to extend the cloud provider feature sets by implementing",
    "start": "584580",
    "end": "591720"
  },
  {
    "text": "this Azure chaos so the underlying idea of the Azure",
    "start": "591720",
    "end": "596880"
  },
  {
    "text": "chaos is very similar to gcp chaos and AWS chaos which authenticated the chaos",
    "start": "596880",
    "end": "602279"
  },
  {
    "text": "mesh controller manager to access the control to access and control Azure",
    "start": "602279",
    "end": "607320"
  },
  {
    "text": "Cloud resource under the user's account some simple Azure some simple chaos actions we provided our Virtual Machine",
    "start": "607320",
    "end": "614700"
  },
  {
    "text": "Stop which allow user to stop specific virtual machine instance so nowadays we",
    "start": "614700",
    "end": "619860"
  },
  {
    "text": "know the public cloud provider provide very reliable service but some unexpected instance can still happen",
    "start": "619860",
    "end": "626100"
  },
  {
    "text": "sometimes like the whole rack of servers May temporarily out of use due to fire",
    "start": "626100",
    "end": "631680"
  },
  {
    "text": "or power outage and a VM stop can help us to simulate this situation",
    "start": "631680",
    "end": "636720"
  },
  {
    "text": "and the next next one is VM restart this one is a slightly different between a slightly different because sometimes the",
    "start": "636720",
    "end": "643320"
  },
  {
    "text": "virtual machine may keep restarting during a period of time because of Hardware issue or resource scheduling",
    "start": "643320",
    "end": "649019"
  },
  {
    "text": "problem this Behavior can add extra pressure to distribute system that require coordination between peer nodes",
    "start": "649019",
    "end": "657240"
  },
  {
    "text": "for example if you are using Thai KV as the backend storage if a server keep restarting you will have a peer keep",
    "start": "657240",
    "end": "664140"
  },
  {
    "text": "leaving and rejoin a network which will add extra synchronization overheads to",
    "start": "664140",
    "end": "669779"
  },
  {
    "text": "the whole system the third one is the disk detaching detaching most of the virtual machine",
    "start": "669779",
    "end": "674880"
  },
  {
    "text": "instance on the cloud nowadays are using a Unified Remote storage like EBS or Azure block storage and the list",
    "start": "674880",
    "end": "682320"
  },
  {
    "text": "operation can help us to simulate the case of remote storage temporarily unavailable",
    "start": "682320",
    "end": "688500"
  },
  {
    "text": "um here is a brief example of how could you use the Azure Azure chaos first the user need to put the authentication",
    "start": "688500",
    "end": "694920"
  },
  {
    "text": "information into a kubernetes secret here is cloud key secret and apply this",
    "start": "694920",
    "end": "700440"
  },
  {
    "text": "to the kubernetes cluster then we can Define Azure chaos workloads which will",
    "start": "700440",
    "end": "705959"
  },
  {
    "text": "point to the secret we just created and the defined action we wanted to take here is the VM restart finally we apply",
    "start": "705959",
    "end": "714240"
  },
  {
    "text": "this workload to the Azure to the kubernetes and in the chaos mesh controller will load it and authenticate",
    "start": "714240",
    "end": "720120"
  },
  {
    "text": "in a perceived action the second feature I wanted to introduce",
    "start": "720120",
    "end": "725760"
  },
  {
    "text": "is the block chaos in early years of kubernetes most of users are using kubernetes to build status application",
    "start": "725760",
    "end": "732540"
  },
  {
    "text": "but nowadays we are seeing increasing demand of building stable application on top of kubernetes so for stable",
    "start": "732540",
    "end": "739620"
  },
  {
    "text": "application what's the top priority it is saving the date correctly and",
    "start": "739620",
    "end": "744899"
  },
  {
    "text": "efficiently therefore staple and high performance storage is very critical and",
    "start": "744899",
    "end": "750779"
  },
  {
    "text": "ensuring application can still provide servers with temporarily i o performers degradation is even more critical",
    "start": "750779",
    "end": "758160"
  },
  {
    "text": "to least to to this end we Implement block chaos um you may be a little bit curious",
    "start": "758160",
    "end": "763620"
  },
  {
    "text": "because before 2.4 we actually have an i o related chaos workload called IO chaos",
    "start": "763620",
    "end": "768959"
  },
  {
    "text": "which can also be used to simulate the scenario of unexpected i o latency on",
    "start": "768959",
    "end": "774300"
  },
  {
    "text": "block device then why we introduce a new i o related feature",
    "start": "774300",
    "end": "779339"
  },
  {
    "text": "the i o chaos work works well in most of the case but it may come with a side",
    "start": "779339",
    "end": "785040"
  },
  {
    "text": "effect when simulating a case of accessing huge amount of files to implement the io chaos we run a chaos",
    "start": "785040",
    "end": "792360"
  },
  {
    "text": "sidecar container inside the target Parts using p-trace to replace the file descriptor of the target process and",
    "start": "792360",
    "end": "799260"
  },
  {
    "text": "then take control of the file descriptor by adding extra latency to the i o operation this mechanism works well in",
    "start": "799260",
    "end": "806040"
  },
  {
    "text": "most of the case but if the process is opening huge amount of BIOS like thousands or tens of thousands file then",
    "start": "806040",
    "end": "813420"
  },
  {
    "text": "the P trays will post the target process and that is some side effects side",
    "start": "813420",
    "end": "820200"
  },
  {
    "text": "effect we don't want to import so to better simulate the i o chaos scenario without importing side effect we",
    "start": "820200",
    "end": "827160"
  },
  {
    "text": "implement the block chaos in version 2.4 so Blockhouse simulate the case of extra",
    "start": "827160",
    "end": "833100"
  },
  {
    "text": "i o latency on block device by implementing a kernel i o scheduler and offering two key features first is the i",
    "start": "833100",
    "end": "840959"
  },
  {
    "text": "o delay which allow users to specify the latency of the block device and on the",
    "start": "840959",
    "end": "846000"
  },
  {
    "text": "second one which is currently under intensive development is the limit i o Ops",
    "start": "846000",
    "end": "851519"
  },
  {
    "text": "which allow user to specify the iops of the block device so how does block chaos work internally",
    "start": "851519",
    "end": "858320"
  },
  {
    "text": "First We Take a look at how a normal i o request will be handled on Computing",
    "start": "858320",
    "end": "863700"
  },
  {
    "text": "nodes after the application sending a read or write requested to the file system the file system will then send",
    "start": "863700",
    "end": "869940"
  },
  {
    "text": "the corresponding block i o requested to the kernel request the queue elevator so this request queue elevator contains",
    "start": "869940",
    "end": "877200"
  },
  {
    "text": "multiple i o scheduler from the kernel and then a block i o request will go",
    "start": "877200",
    "end": "883079"
  },
  {
    "text": "through all kernel i o scheduler be sent to the hardware request queue passed to the driver insert it into the nbmeq",
    "start": "883079",
    "end": "891120"
  },
  {
    "text": "which is the short of non-volatile Memory Express and finally be right into the disk as I mentioned we implement the",
    "start": "891120",
    "end": "898620"
  },
  {
    "text": "kernel i o scheduler called ioem which will be added into the request queue elevator so when a block IO reach the",
    "start": "898620",
    "end": "906240"
  },
  {
    "text": "ioem instead of passing it to the next scheduler the ioem will hold it for a specific",
    "start": "906240",
    "end": "913440"
  },
  {
    "text": "time and then pass it to the next i o scheduler which simulates iOS latency",
    "start": "913440",
    "end": "919320"
  },
  {
    "text": "scenario so here is a brief example of how it works we start with the right request",
    "start": "919320",
    "end": "925079"
  },
  {
    "text": "chaos is cool to the specific block sector and ioem scheduler capture the",
    "start": "925079",
    "end": "931320"
  },
  {
    "text": "request hold it for three millisecond and the password to the hardware queue compared to the iok US these features",
    "start": "931320",
    "end": "937740"
  },
  {
    "text": "simulate the i o throughput decreasing in a more natural way without posing the process",
    "start": "937740",
    "end": "943980"
  },
  {
    "text": "the third feature I would like to talk about is physical machine chaos if you are familiar with chaos mesh then you",
    "start": "943980",
    "end": "950940"
  },
  {
    "text": "may probably know that chaos mesh are usually used as a kubernetes plugin which allow users to launch chaos",
    "start": "950940",
    "end": "957240"
  },
  {
    "text": "experiments along with Target kubernetes workloads but lyric some Legacy workloads that",
    "start": "957240",
    "end": "963779"
  },
  {
    "text": "just cannot be run in container and cannot be easily migrated to container or kubernetes environment so some users",
    "start": "963779",
    "end": "971040"
  },
  {
    "text": "may need to manage your hybrid cluster consisting of notes managing my by kubernetes running containers nodes",
    "start": "971040",
    "end": "978600"
  },
  {
    "text": "managed by hypervisor running virtual machine and the nodes managed by themselves as a physical nodes",
    "start": "978600",
    "end": "985620"
  },
  {
    "text": "to better support this case we implement the physical machine chaos which extend the chaos mesh framework from kubernetes",
    "start": "985620",
    "end": "992820"
  },
  {
    "text": "to physical nodes or virtual machines to use the physical machine chaos we",
    "start": "992820",
    "end": "998160"
  },
  {
    "text": "need to first set up chaos D on each virtual on each physical machine",
    "start": "998160",
    "end": "1003620"
  },
  {
    "text": "klst is a demon process receiving commands from a central chaos controller in a kubernetes and launching across",
    "start": "1003620",
    "end": "1010880"
  },
  {
    "text": "rounding chaos experiments KLC can be run as a row command or assistant service on a Target physical machine",
    "start": "1010880",
    "end": "1018220"
  },
  {
    "text": "some common action of physical machine chaos are simulating a process flow like",
    "start": "1018220",
    "end": "1023839"
  },
  {
    "text": "process Interruption simulate Network flow like network drop or throating or",
    "start": "1023839",
    "end": "1029660"
  },
  {
    "text": "network bandwidth simulating host default like host the shutting down and",
    "start": "1029660",
    "end": "1034819"
  },
  {
    "text": "it also provides some application or runtime specific features like jvm chaos or radius chaos",
    "start": "1034819",
    "end": "1042199"
  },
  {
    "text": "so those are some new chaos workloads you can try out in the next I would like to talk about some three generic",
    "start": "1042199",
    "end": "1048438"
  },
  {
    "text": "features we added to the chaos match framework since 2.4 so the first generic features I would",
    "start": "1048439",
    "end": "1055160"
  },
  {
    "text": "like to discuss is the status check in workflow so to get the best results when running",
    "start": "1055160",
    "end": "1061160"
  },
  {
    "text": "chaos workflow we sometimes launch the chaos workflow in a real production environment along with the real",
    "start": "1061160",
    "end": "1068000"
  },
  {
    "text": "application of workloads however sometimes this application or workloads are so critical that we don't want it to",
    "start": "1068000",
    "end": "1074059"
  },
  {
    "text": "break them to ensure this we introduce this feature which will keep checking the status of",
    "start": "1074059",
    "end": "1079400"
  },
  {
    "text": "the application or workloads through the status endpoints or external monitoring system and automatically stop the chaos",
    "start": "1079400",
    "end": "1086960"
  },
  {
    "text": "workflow if they find out that the application or workload is unhealthy",
    "start": "1086960",
    "end": "1092480"
  },
  {
    "text": "here is a brief example a status check templates you can use to start a status check the deadline field to specify that",
    "start": "1092480",
    "end": "1100220"
  },
  {
    "text": "this node will be executed for a maximum of 20 seconds",
    "start": "1100220",
    "end": "1105500"
  },
  {
    "text": "the mode field specified that this node will execute status check continuously",
    "start": "1105500",
    "end": "1110840"
  },
  {
    "text": "it will try to pull the defined URLs through the HTTP protocol and it will",
    "start": "1110840",
    "end": "1116240"
  },
  {
    "text": "automatically avoid chaos workflow if the return code is not 200.",
    "start": "1116240",
    "end": "1121580"
  },
  {
    "text": "we are currently only support HTTP protocol but in the future we plan to support other methods like monitoring",
    "start": "1121580",
    "end": "1128179"
  },
  {
    "text": "from Memphis metrics and use the alert manager like mechanism to automatically",
    "start": "1128179",
    "end": "1133340"
  },
  {
    "text": "stop and restart the work chaos workload we also improve we also improve the web",
    "start": "1133340",
    "end": "1140780"
  },
  {
    "text": "workflow web UI to faciliate the process of defining a chaos workflow",
    "start": "1140780",
    "end": "1146120"
  },
  {
    "text": "I believe most of you are like me like you have years of experience of using",
    "start": "1146120",
    "end": "1151160"
  },
  {
    "text": "kubernetes and quite comfortable of writing yaml people say kubernetes engineer or yamo engineer but if we try",
    "start": "1151160",
    "end": "1158360"
  },
  {
    "text": "to define a large chaos workflow including multiple stage then which can easily",
    "start": "1158360",
    "end": "1164660"
  },
  {
    "text": "lead to hundreds lines of yaml file and I believe writing hundreds lines of yaml file can easily get lost",
    "start": "1164660",
    "end": "1172039"
  },
  {
    "text": "um so we add a new drag and a drop feature to help users to define a workflow more easily we record a short",
    "start": "1172039",
    "end": "1178340"
  },
  {
    "text": "demo let me play it",
    "start": "1178340",
    "end": "1181659"
  },
  {
    "text": "okay so first we need to decide what kind of experiments we wanted to run here we",
    "start": "1183799",
    "end": "1190820"
  },
  {
    "text": "choose the serial we name it set a deadline then we will have a blank workspace",
    "start": "1190820",
    "end": "1197900"
  },
  {
    "text": "and we can drag and drop this action we wanted to run in the workspace we Define the namespace and all other related",
    "start": "1197900",
    "end": "1204860"
  },
  {
    "text": "fields and then we click the submit button and then zombie the workflow Button as",
    "start": "1204860",
    "end": "1212299"
  },
  {
    "text": "we can see that the system will generate chaos experiment yamo in the backhand so feel free to try out this feature I",
    "start": "1212299",
    "end": "1219020"
  },
  {
    "text": "personally love this feature and I like it so last but not least let's talk about",
    "start": "1219020",
    "end": "1224840"
  },
  {
    "text": "multi-cluster support for chaos mesh so we keep receiving requests from",
    "start": "1224840",
    "end": "1230179"
  },
  {
    "text": "Community users that they are wondering about if chaos mesh can support running chaos experiments across multiple",
    "start": "1230179",
    "end": "1237020"
  },
  {
    "text": "kubernetes clusters so just one single Global Entry I think this is a very reasonable",
    "start": "1237020",
    "end": "1242960"
  },
  {
    "text": "request considering that many users are building large distributed systems or SAS platform that need to be deployed",
    "start": "1242960",
    "end": "1250400"
  },
  {
    "text": "across multiple kubernetes clusters located in different geographical regions",
    "start": "1250400",
    "end": "1255559"
  },
  {
    "text": "and sometimes they wanted to run a global-wide chaos experiments like maybe",
    "start": "1255559",
    "end": "1260740"
  },
  {
    "text": "simulate the apocalypse situation so launching chaos mesh experiments on",
    "start": "1260740",
    "end": "1267500"
  },
  {
    "text": "each kubernetes cluster separately is very inconvenient as you need to log in",
    "start": "1267500",
    "end": "1272600"
  },
  {
    "text": "different clusters set up chaos mesh framework on each of them run chaos mesh workflow and keep your eyes on multiple",
    "start": "1272600",
    "end": "1279620"
  },
  {
    "text": "chaos mesh dashboard to monitoring all the cluster",
    "start": "1279620",
    "end": "1284780"
  },
  {
    "text": "so to release the burden of managing multiple cluster we developed the multi-cluster chaos chaos mesh support",
    "start": "1284780",
    "end": "1291280"
  },
  {
    "text": "or you can call it a chaos Federation the basic idea is we're connecting",
    "start": "1291280",
    "end": "1296659"
  },
  {
    "text": "multiple kubernetes cluster on a chaos mesh level we will still need to set up chaos match",
    "start": "1296659",
    "end": "1302240"
  },
  {
    "text": "controller on each cluster but we don't need to do it manually for each of them",
    "start": "1302240",
    "end": "1308059"
  },
  {
    "text": "be more specifically we will assign a row to each chaos match controller",
    "start": "1308059",
    "end": "1313940"
  },
  {
    "text": "we will have a central controller which will be assigned as the row coordinator and we will assign an agent row to for",
    "start": "1313940",
    "end": "1322039"
  },
  {
    "text": "all other chaos mesh controllers so when setting up the environment we only need to set up the coordinator",
    "start": "1322039",
    "end": "1329179"
  },
  {
    "text": "once and then register each member cluster to this coordinator by applying",
    "start": "1329179",
    "end": "1335299"
  },
  {
    "text": "a yaml file like this so we will first encode the member cluster that could be",
    "start": "1335299",
    "end": "1340760"
  },
  {
    "text": "configured into a secret here like cluster blah blah could be config apply the yaml file the",
    "start": "1340760",
    "end": "1348320"
  },
  {
    "text": "coordinator will load it could be configured from the secret and be able to access the remote member cluster then",
    "start": "1348320",
    "end": "1354860"
  },
  {
    "text": "the coordinator will set up the agent chaos mesh controller on each member cluster now agent controller is just a",
    "start": "1354860",
    "end": "1362299"
  },
  {
    "text": "normal chaos mesh controller that identified itself as an agent",
    "start": "1362299",
    "end": "1368600"
  },
  {
    "text": "once we successful successfully set up the environment and build up the connection between a coordinator and",
    "start": "1368600",
    "end": "1375500"
  },
  {
    "text": "agents the rest of the steps are very straightforward we Define the chaos mesh",
    "start": "1375500",
    "end": "1380840"
  },
  {
    "text": "experiment as user weighs only two different first we need to specify in",
    "start": "1380840",
    "end": "1386000"
  },
  {
    "text": "the Target remote cluster and submitting the experiment to the",
    "start": "1386000",
    "end": "1391100"
  },
  {
    "text": "coordinator instead of the agent here is a simple yaml as we can see it is just",
    "start": "1391100",
    "end": "1396919"
  },
  {
    "text": "like a normal chaos mesh yaml file with one actual field remote cluster",
    "start": "1396919",
    "end": "1402440"
  },
  {
    "text": "once the workflow is submitted to the coordinator it will then create the workflow on a Target cluster and the",
    "start": "1402440",
    "end": "1409640"
  },
  {
    "text": "syncing the workflows data is back to itself using this users can control and observe chaos mesh experiments across",
    "start": "1409640",
    "end": "1417020"
  },
  {
    "text": "multiple kubernetes clusters using one Central controller in the dashboard",
    "start": "1417020",
    "end": "1422720"
  },
  {
    "text": "okay so that's all the major features I would like to cover in today's talk so",
    "start": "1422720",
    "end": "1428120"
  },
  {
    "text": "for the future plan there are several things on our roadmap first though we wanted to improve the usability of the",
    "start": "1428120",
    "end": "1435140"
  },
  {
    "text": "system we wanted to add more inspection sorry",
    "start": "1435140",
    "end": "1440360"
  },
  {
    "text": "inspection and the reports and we also wanted to improve the debuggability of",
    "start": "1440360",
    "end": "1445940"
  },
  {
    "text": "the system like adding more reach obserability results and we wanted to support more status",
    "start": "1445940",
    "end": "1452480"
  },
  {
    "text": "check types as I just mentioned like Prometheus and day dogs and we wanted to develop a new framework",
    "start": "1452480",
    "end": "1460340"
  },
  {
    "text": "that is cool because we wanted to allow user to extend chaos mesh framework themselves by defining their own chaos",
    "start": "1460340",
    "end": "1466820"
  },
  {
    "text": "mesh workflow and of course is what is currently under development is we are constructing a",
    "start": "1466820",
    "end": "1473419"
  },
  {
    "text": "Global Hub that allows user to upload their cool chaos workflow and share with all the people",
    "start": "1473419",
    "end": "1479840"
  },
  {
    "text": "around the world okay so that's it for today's talk thank you so much any",
    "start": "1479840",
    "end": "1486020"
  },
  {
    "text": "questions in the comments [Applause]",
    "start": "1486020",
    "end": "1496329"
  },
  {
    "text": "yes uh",
    "start": "1499700",
    "end": "1504220"
  },
  {
    "text": "yeah so I was curious uh how would uh you handle a case where of injecting a",
    "start": "1511640",
    "end": "1517039"
  },
  {
    "text": "fault leads to the unavailability of the cluster itself",
    "start": "1517039",
    "end": "1522140"
  },
  {
    "text": "okay so your question is you're curious if the injecting folds will lead to the",
    "start": "1522140",
    "end": "1527720"
  },
  {
    "text": "cluster itself right like do we have any specific case like what kind of injection are you thinking",
    "start": "1527720",
    "end": "1534140"
  },
  {
    "text": "about so yeah so I'm working on like stress testing uh so I was thinking is",
    "start": "1534140",
    "end": "1539659"
  },
  {
    "text": "like where I'm creating a lot of resources and seeing if it basically slows down the API server or the API",
    "start": "1539659",
    "end": "1545960"
  },
  {
    "text": "server goes down or something like that okay okay so I think in most of case if we are",
    "start": "1545960",
    "end": "1553100"
  },
  {
    "text": "just use the chaos mesh then since we are running container right so the things mostly is just injecting to The",
    "start": "1553100",
    "end": "1559400"
  },
  {
    "text": "Container so it will not leak to the physical machine but in other cases as I just mentioned we have a physical",
    "start": "1559400",
    "end": "1564860"
  },
  {
    "text": "machine chaos so that one you need to be careful so if you inject something to",
    "start": "1564860",
    "end": "1570320"
  },
  {
    "text": "the physical machine then that may be something yeah",
    "start": "1570320",
    "end": "1575360"
  },
  {
    "text": "I think uh cashmere is",
    "start": "1575360",
    "end": "1579640"
  },
  {
    "text": "um only running on the test environment uh sometimes we are not going to use",
    "start": "1585740",
    "end": "1592640"
  },
  {
    "text": "this tool for the production system very easily mess up the housings yeah so",
    "start": "1592640",
    "end": "1598820"
  },
  {
    "text": "okay wow",
    "start": "1598820",
    "end": "1601778"
  },
  {
    "text": "I haven't used Keras mesh that much but I just have a basic question so how do",
    "start": "1605659",
    "end": "1611900"
  },
  {
    "text": "you so kubernetes has got is all these horizontal power scalar and a video scalars right",
    "start": "1611900",
    "end": "1620360"
  },
  {
    "text": "so how how do you actually deal with the scaling and then start the scheduler and then",
    "start": "1620360",
    "end": "1627260"
  },
  {
    "text": "replica sets from actually thinking that it's actually failure and then going in a loop that while you're actually",
    "start": "1627260",
    "end": "1633919"
  },
  {
    "text": "bringing down some of these parts okay",
    "start": "1633919",
    "end": "1639020"
  },
  {
    "text": "uh your question is about how to decide is this a bug or",
    "start": "1639020",
    "end": "1645500"
  },
  {
    "text": "I mean how do you keep the scaling in control while you're doing the chaos testing",
    "start": "1645500",
    "end": "1652820"
  },
  {
    "text": "um actually we have a customized controller in uh cast mesh cast mesh have uh you know we",
    "start": "1652820",
    "end": "1660799"
  },
  {
    "text": "will build the the the the crd and also have a customized controller provided by",
    "start": "1660799",
    "end": "1667039"
  },
  {
    "text": "by customer itself it will inject into the kubernetes runtime so this",
    "start": "1667039",
    "end": "1673340"
  },
  {
    "text": "controller will follow the the status running the",
    "start": "1673340",
    "end": "1678500"
  },
  {
    "text": "um the the chaos experiments yeah okay",
    "start": "1678500",
    "end": "1685900"
  },
  {
    "text": "so my question is uh what if chaos mesh like chaos controller itself crashed",
    "start": "1687159",
    "end": "1695120"
  },
  {
    "text": "during the Ford injection and uh as a result it felt like cleaning up the",
    "start": "1695120",
    "end": "1701980"
  },
  {
    "text": "uh the couch injection process yes yes",
    "start": "1701980",
    "end": "1707679"
  },
  {
    "text": "I think so your concern is what about the chaos controller itself crashed during around",
    "start": "1708620",
    "end": "1715460"
  },
  {
    "text": "time right so chaos controller normally you are deployed as a container right so if you it's Crash you definitely will",
    "start": "1715460",
    "end": "1723080"
  },
  {
    "text": "want to restart it right and we have a crd to record the status of each chaos workflow so after you restart you still",
    "start": "1723080",
    "end": "1729799"
  },
  {
    "text": "read the latest status from the crd and you can recover in the resume your workflow yeah",
    "start": "1729799",
    "end": "1735320"
  },
  {
    "text": "yeah and uh what if like the chaos demand that running on each node fail to",
    "start": "1735320",
    "end": "1740679"
  },
  {
    "text": "like like revert the chaos injectors to",
    "start": "1740679",
    "end": "1746059"
  },
  {
    "text": "the station before because I actually we experienced that once and the team that",
    "start": "1746059",
    "end": "1753380"
  },
  {
    "text": "carried out the experiment padding for for a while before we manually recover",
    "start": "1753380",
    "end": "1758720"
  },
  {
    "text": "everything yeah so yeah maybe I think that's about",
    "start": "1758720",
    "end": "1763778"
  },
  {
    "text": "is that a is that an answer that's a bug is that an answer maybe yeah but I I yeah but I'd like to",
    "start": "1766220",
    "end": "1774620"
  },
  {
    "text": "clarify like most of the time it works perfectly yeah",
    "start": "1774620",
    "end": "1779899"
  },
  {
    "text": "then we need to fix the bug okay uh I will probably like try to",
    "start": "1779899",
    "end": "1785600"
  },
  {
    "text": "collect Ive yeah that'll be great great thank",
    "start": "1785600",
    "end": "1791419"
  },
  {
    "text": "you",
    "start": "1791419",
    "end": "1793658"
  },
  {
    "text": "so in case of chaos toolkit we have uh a a section to check the steady state",
    "start": "1798620",
    "end": "1805820"
  },
  {
    "text": "right there's a status check is equivalent of it or what is the status check in chaos mesh",
    "start": "1805820",
    "end": "1812480"
  },
  {
    "text": "actually is for so yeah so your question is what is status",
    "start": "1812480",
    "end": "1819140"
  },
  {
    "text": "check used for right so sometimes when you're doing Chaos mesh you you may want to add stress to a large cluster right",
    "start": "1819140",
    "end": "1825860"
  },
  {
    "text": "so sometimes I mean as I just mentioned we don't want it to run it in production",
    "start": "1825860",
    "end": "1831020"
  },
  {
    "text": "environment but sometimes maybe we wanted to run it in production environment but we don't want to break",
    "start": "1831020",
    "end": "1836539"
  },
  {
    "text": "the actual application or workloads they are very critical so we have this status check to keep",
    "start": "1836539",
    "end": "1842840"
  },
  {
    "text": "checking the application and the workloads if we found this application or state or workloads are unhealthy then",
    "start": "1842840",
    "end": "1849620"
  },
  {
    "text": "we will automatically abort the chaos mesh workflow and then you know we will",
    "start": "1849620",
    "end": "1855320"
  },
  {
    "text": "dump all this data and then the SRE team will come back and investigate and then",
    "start": "1855320",
    "end": "1860419"
  },
  {
    "text": "we can know the limitation of this whole system in the cluster I will use a example to explain that for example if",
    "start": "1860419",
    "end": "1868399"
  },
  {
    "text": "you are running the database distributed database the unit text the testing is",
    "start": "1868399",
    "end": "1874940"
  },
  {
    "text": "like keep a stable workload and you will have the QPS and",
    "start": "1874940",
    "end": "1881120"
  },
  {
    "text": "TPS status and then you do the following Junction because you you you know the",
    "start": "1881120",
    "end": "1887720"
  },
  {
    "text": "system will be automatically recovered but if the the system after the fourth",
    "start": "1887720",
    "end": "1894320"
  },
  {
    "text": "injection they are not recovered you will know hey this is something wrong with your your system",
    "start": "1894320",
    "end": "1901220"
  },
  {
    "text": "so the check is to make sure the system is behavior right got it so just to avoid the chaos",
    "start": "1901220",
    "end": "1908059"
  },
  {
    "text": "testing just in case if things goes uh on the wrong side yeah okay",
    "start": "1908059",
    "end": "1914240"
  },
  {
    "text": "I think that Center will have a question yeah",
    "start": "1914240",
    "end": "1919700"
  },
  {
    "text": "um so istio has uh like fault injection already built into it how does it work",
    "start": "1920600",
    "end": "1925760"
  },
  {
    "text": "with this Geo is it something you would use instead of the istio fault injection or does it work with it or",
    "start": "1925760",
    "end": "1931899"
  },
  {
    "text": "can't repeat the question so istio has like its own fault injections where you",
    "start": "1932240",
    "end": "1938360"
  },
  {
    "text": "can inject latency and failures and stuff so would this work would you use this instead of the istio fault",
    "start": "1938360",
    "end": "1943520"
  },
  {
    "text": "injection or with it or yeah I think the two systems can work together they are the couple right they",
    "start": "1943520",
    "end": "1949760"
  },
  {
    "text": "are not but you need to make sure you know understand make sure that this this",
    "start": "1949760",
    "end": "1955220"
  },
  {
    "text": "behavior is caused by istio boat injection this Behavior or this unexpected situation is caused by chaos",
    "start": "1955220",
    "end": "1962059"
  },
  {
    "text": "mesh yeah Maybe uh maybe you can create",
    "start": "1962059",
    "end": "1969260"
  },
  {
    "text": "uh chaos type into Cash crash it is called is to chaos something like that",
    "start": "1969260",
    "end": "1977840"
  },
  {
    "text": "at least yeah it's doable okay that's cool I didn't know you still itself can do the full injection that's",
    "start": "1977840",
    "end": "1984799"
  },
  {
    "text": "really cool I'll check it out later yeah okay okay I guess that's all thank you",
    "start": "1984799",
    "end": "1994000"
  }
]