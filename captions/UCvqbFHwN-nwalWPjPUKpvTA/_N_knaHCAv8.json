[
  {
    "start": "0",
    "end": "53000"
  },
  {
    "text": "hi everyone thank you for joining my name is itai shakuri and i work for aqua security on open",
    "start": "0",
    "end": "6160"
  },
  {
    "text": "source security related projects mostly for the cloud native ecosystem",
    "start": "6160",
    "end": "11280"
  },
  {
    "text": "lately i've been working on a project that is a system tracing tool and its integration into",
    "start": "11280",
    "end": "17600"
  },
  {
    "text": "a dynamic image scanning product and i wanted to share with you first of all uh the concept of dynamic",
    "start": "17600",
    "end": "24400"
  },
  {
    "text": "image scanning the way that we perceive it and also the relationship between this",
    "start": "24400",
    "end": "29519"
  },
  {
    "text": "and other concepts that you are familiar with maybe you're using today and also i",
    "start": "29519",
    "end": "35120"
  },
  {
    "text": "wanted to talk about system tracing and how important it is for dynamic image scanning and how we can leverage",
    "start": "35120",
    "end": "41520"
  },
  {
    "text": "that so to start the discussion i would like to first uh discuss what we have today with",
    "start": "41520",
    "end": "49039"
  },
  {
    "text": "container scanning so i'm going to look at trivia which is a popular",
    "start": "49039",
    "end": "54719"
  },
  {
    "start": "53000",
    "end": "53000"
  },
  {
    "text": "open source container scanning tool full disclaimer it's being built by my team in aqua but",
    "start": "54719",
    "end": "60960"
  },
  {
    "text": "this is just an example for any container scanning tool most of them work the same way",
    "start": "60960",
    "end": "66960"
  },
  {
    "text": "so here i'm asking trivi to scan this image it's drupal image which is a popular content management system",
    "start": "66960",
    "end": "73119"
  },
  {
    "text": "trivia will discover that this image is based from alpine and because of that it",
    "start": "73119",
    "end": "80720"
  },
  {
    "text": "will look for alpine packages that were installed using apk and then it will understand that",
    "start": "80720",
    "end": "86400"
  },
  {
    "text": "this image was the software is using php so it will also look for a composer",
    "start": "86400",
    "end": "92240"
  },
  {
    "text": "um a software installed using composer and similarly there are some javascript",
    "start": "92240",
    "end": "98000"
  },
  {
    "text": "components in there so 3d will also look at the yarn file that it found in order to",
    "start": "98000",
    "end": "103119"
  },
  {
    "text": "obtain the list of software uh relating to javascript the goal here is to compile a list of",
    "start": "103119",
    "end": "108960"
  },
  {
    "text": "install software within the compo within the container and most importantly the versions because in the next step we're",
    "start": "108960",
    "end": "116560"
  },
  {
    "text": "going to compare this list with the database of known vulnerabilities this is the other piece",
    "start": "116560",
    "end": "122399"
  },
  {
    "start": "120000",
    "end": "120000"
  },
  {
    "text": "of any container scanning tool for trivia because it's open source and we build the",
    "start": "122399",
    "end": "128560"
  },
  {
    "text": "database itself in github and we store actually the database inside of github it's very easy to go ahead and see what",
    "start": "128560",
    "end": "134800"
  },
  {
    "text": "we're doing there so just for example we aggregate vulnerability information",
    "start": "134800",
    "end": "140239"
  },
  {
    "text": "from different sources for example nvd which is a great comprehensive database of",
    "start": "140239",
    "end": "146560"
  },
  {
    "text": "vulnerabilities we also consider different advisories and lists",
    "start": "146560",
    "end": "152400"
  },
  {
    "text": "that publish their own security advisories and vulnerabilities we even go as far as looking inside of",
    "start": "152400",
    "end": "159599"
  },
  {
    "text": "the code of some projects that we are interested in in this case you see an example from alpine if",
    "start": "159599",
    "end": "167280"
  },
  {
    "text": "we know that we can parse some security vulnerabilities from these sources there",
    "start": "167280",
    "end": "172959"
  },
  {
    "text": "are many other different sources that goes into the tree database but the result is just a simple database",
    "start": "172959",
    "end": "179360"
  },
  {
    "text": "of vulnerabilities and the affected",
    "start": "179360",
    "end": "184720"
  },
  {
    "text": "software and then we can go ahead and cross reference the list of vulnerabilities with the list of the",
    "start": "184720",
    "end": "191440"
  },
  {
    "text": "software that we found inside of the container and we see here that law dash which is a javascript dependency library",
    "start": "191440",
    "end": "198319"
  },
  {
    "text": "has a high severity vulnerability because of the 417-15 version that we were using",
    "start": "198319",
    "end": "205440"
  },
  {
    "text": "so great this is this is a very useful thing that any static image scanning tool can uh",
    "start": "205440",
    "end": "212400"
  },
  {
    "text": "can give us discovering known vulnerabilities what else what else can we learn by",
    "start": "212400",
    "end": "219040"
  },
  {
    "text": "statically scanning the image so another another thing is misconfigurations",
    "start": "219040",
    "end": "225120"
  },
  {
    "text": "unlike vulnerabilities where vulnerabilities are basically bugs in the software in the dependencies that",
    "start": "225120",
    "end": "231680"
  },
  {
    "text": "needs to be fixed upstream misconfiguration is not about bugs it's mostly about",
    "start": "231680",
    "end": "238000"
  },
  {
    "text": "improper usage of the software and if we look out there we see a lot of",
    "start": "238000",
    "end": "243439"
  },
  {
    "text": "examples for misconfigured container images that we could have detected just by",
    "start": "243439",
    "end": "248560"
  },
  {
    "start": "245000",
    "end": "245000"
  },
  {
    "text": "scanning the image for example people using the default settings for the software",
    "start": "248560",
    "end": "254720"
  },
  {
    "text": "and wasn't adapting it for uh production people uh leaving a lot of unnecessarily",
    "start": "254720",
    "end": "260880"
  },
  {
    "text": "open ports uh tls settings which were incorrectly configured people even use uh sorry people even",
    "start": "260880",
    "end": "267919"
  },
  {
    "text": "forget their passwords and the keys inside of the code inside of the containers",
    "start": "267919",
    "end": "273520"
  },
  {
    "text": "so these are all examples for things that we could easily have discovered",
    "start": "273520",
    "end": "279280"
  },
  {
    "text": "just by looking at the container image itself",
    "start": "279280",
    "end": "284400"
  },
  {
    "text": "so vulnerabilities misconfigurations what else can we understand just by",
    "start": "284479",
    "end": "290960"
  },
  {
    "text": "analyzing the image at rest so another thing",
    "start": "290960",
    "end": "296080"
  },
  {
    "text": "is a malware we can uh the container itself is just a bunch of files right so we can take",
    "start": "296080",
    "end": "302720"
  },
  {
    "text": "any number of files from within the container and use the traditional anti-malware",
    "start": "302720",
    "end": "307759"
  },
  {
    "text": "tools in order to identify those files and see if any of them appears to",
    "start": "307759",
    "end": "313199"
  },
  {
    "text": "be malicious these are all examples for the benefits of static image scanning just by looking",
    "start": "313199",
    "end": "320800"
  },
  {
    "text": "at the image at rest we can learn a lot about what this container is up to",
    "start": "320800",
    "end": "329520"
  },
  {
    "text": "so what do you think if you're scanning containers today is this satisfactory to you do you feel secure",
    "start": "331199",
    "end": "337680"
  },
  {
    "text": "after you scan your container images so my my claim here is that you shouldn't be",
    "start": "337680",
    "end": "344080"
  },
  {
    "text": "because there is an entire category of risks that simply cannot be detected using static",
    "start": "344080",
    "end": "351280"
  },
  {
    "text": "image scanning and one example for that",
    "start": "351280",
    "end": "357039"
  },
  {
    "text": "is uh evasive malware that we have observed in the while so this is an example for an image",
    "start": "357039",
    "end": "364639"
  },
  {
    "text": "in docker hub that passed all of the scans it has no known",
    "start": "364639",
    "end": "369759"
  },
  {
    "text": "vulnerabilities no misconfigurations no known malware but when you run it you see the entry",
    "start": "369759",
    "end": "376240"
  },
  {
    "text": "point here on the right there is an encoded base64 encoded string here that is essentially a",
    "start": "376240",
    "end": "383680"
  },
  {
    "text": "malware encoded as uh his characters and only at runtime the script will",
    "start": "383680",
    "end": "390800"
  },
  {
    "text": "uh unpack this and run it so if you were to scan this script you",
    "start": "390800",
    "end": "397039"
  },
  {
    "text": "know it's it's a string it's a weird string but it's not necessarily malicious not a lot of static scanning tools will",
    "start": "397039",
    "end": "403520"
  },
  {
    "text": "be able to understand what's going on here but when you run the image it's very easy to see",
    "start": "403520",
    "end": "409199"
  },
  {
    "text": "that it is actually executing a malware and this is not a made up example",
    "start": "409199",
    "end": "416880"
  },
  {
    "start": "416000",
    "end": "416000"
  },
  {
    "text": "our research team has recently uncovered a big operation of the group that has used uh and abused",
    "start": "416880",
    "end": "424639"
  },
  {
    "text": "docker hub in order to distribute malware in seemingly legitimate containers where",
    "start": "424639",
    "end": "430000"
  },
  {
    "text": "the end goal was to run crypto mining tools on your servers um and",
    "start": "430000",
    "end": "436960"
  },
  {
    "text": "my point here you can go ahead and read the blog post if you want but my point here is that this is real",
    "start": "436960",
    "end": "442080"
  },
  {
    "text": "this happens and the fact that we are trusting dockerhub in this case",
    "start": "442080",
    "end": "448000"
  },
  {
    "text": "dockerhub has no fault here they're just storing files but the fact that we are trusting the",
    "start": "448000",
    "end": "454720"
  },
  {
    "text": "source here blindly is an open door there's a actually an entire category of",
    "start": "454720",
    "end": "461759"
  },
  {
    "text": "uh of the risks here that is called supply chain attacks",
    "start": "461759",
    "end": "466879"
  },
  {
    "start": "466000",
    "end": "466000"
  },
  {
    "text": "and this is where uh the hackers will not even target your your servers they will not try to hack",
    "start": "466879",
    "end": "473520"
  },
  {
    "text": "you directly instead they will target your supply chain that you already trust",
    "start": "473520",
    "end": "479440"
  },
  {
    "text": "think about where you store your source code today think about where you build and test",
    "start": "479440",
    "end": "487440"
  },
  {
    "text": "and produce artifacts your cicd pipeline think about where you store artifacts today and how you deliver",
    "start": "487440",
    "end": "494879"
  },
  {
    "text": "those artifacts into production each each and every one of those chain in the links is a point of",
    "start": "494879",
    "end": "501599"
  },
  {
    "text": "interest to the attacker because if they compromise one of them",
    "start": "501599",
    "end": "506720"
  },
  {
    "text": "most likely their malware will be able to find its way into your servers because you already trust this pipeline",
    "start": "506720",
    "end": "514959"
  },
  {
    "text": "so to summarize static image scanning can tell us a lot",
    "start": "516240",
    "end": "522800"
  },
  {
    "start": "518000",
    "end": "518000"
  },
  {
    "text": "about the container and it's very important to scan our containers we learn about the known vulnerabilities",
    "start": "522800",
    "end": "529600"
  },
  {
    "text": "we learn about misconfigurations maybe and maybe even about malware inside of the container",
    "start": "529600",
    "end": "536240"
  },
  {
    "text": "but there's also an entire category of risks that we were overlooking",
    "start": "536240",
    "end": "543279"
  },
  {
    "text": "we've discussed evasive malware there's also unknown vulnerabilities there's also",
    "start": "543279",
    "end": "550880"
  },
  {
    "text": "more sophisticated attacks that are harder to scan for my point is that the image itself",
    "start": "550880",
    "end": "558240"
  },
  {
    "text": "at rest can also can only tell us so much about what the container will do at",
    "start": "558240",
    "end": "564240"
  },
  {
    "text": "runtime and the best way to understand what the container will do at runtime is to run it and this is where",
    "start": "564240",
    "end": "572959"
  },
  {
    "text": "system tracing also enters the the picture because",
    "start": "572959",
    "end": "579360"
  },
  {
    "text": "system tracing allows us to understand what's happening from the operating system point of view",
    "start": "579360",
    "end": "584560"
  },
  {
    "text": "this is something that the malware the software that's running inside of the container",
    "start": "584560",
    "end": "589760"
  },
  {
    "text": "cannot simply evade or escape so i would like to show you now a quick",
    "start": "589760",
    "end": "596560"
  },
  {
    "text": "demonstration of what it means to detect a malicious behavior using system",
    "start": "596560",
    "end": "602839"
  },
  {
    "text": "tracing all right so we will start",
    "start": "602839",
    "end": "611440"
  },
  {
    "text": "by looking at an example for a script similar to the one that uh",
    "start": "611440",
    "end": "619680"
  },
  {
    "text": "i showed you in the slides and uh you see here the the very long basics before encoded string",
    "start": "619680",
    "end": "627920"
  },
  {
    "text": "and in the end there is a there's a command to decode it and to make it an executable and to",
    "start": "627920",
    "end": "634079"
  },
  {
    "text": "execute it and then just as a disguise show that something something else is happening",
    "start": "634079",
    "end": "640160"
  },
  {
    "text": "if we run this this is called evasive script we see",
    "start": "640160",
    "end": "646720"
  },
  {
    "text": "hello world this is being printed by the malware and we see i'm good which is the",
    "start": "646720",
    "end": "653530"
  },
  {
    "text": "[Music] the disguise of the script",
    "start": "653530",
    "end": "658959"
  },
  {
    "text": "now if the malware didn't uh naturally print hello world to us how would we able",
    "start": "659200",
    "end": "664320"
  },
  {
    "text": "how would we be able to understand that this script had it hides another executable we could read",
    "start": "664320",
    "end": "671360"
  },
  {
    "text": "it yeah but if this wasn't a script if this was an executable maybe even an obfuscated",
    "start": "671360",
    "end": "678640"
  },
  {
    "text": "executable that's harder to manually analyze then would be in",
    "start": "678640",
    "end": "684160"
  },
  {
    "text": "some kind of trouble so um this is where tracing comes in i'm going to use a very",
    "start": "684160",
    "end": "690800"
  },
  {
    "text": "popular tool that's called s trace this is uh a very common linux toolbox kind of tool",
    "start": "690800",
    "end": "698240"
  },
  {
    "text": "uh it allows us to trace system calls from the operating system point of view",
    "start": "698240",
    "end": "703519"
  },
  {
    "text": "and i'm going to run the the same uh script except i'm prefixing it with",
    "start": "703519",
    "end": "710560"
  },
  {
    "text": "the command s trace i also want to tell it exactly what to trace so i will say trace",
    "start": "710560",
    "end": "718480"
  },
  {
    "text": "equals exactly e exactly e is the name of the system called that's being used to ask the operating system to",
    "start": "718480",
    "end": "725120"
  },
  {
    "text": "execute something if we do that we see the same result here hello world and good um in",
    "start": "725120",
    "end": "732800"
  },
  {
    "text": "the output but also we see all of the exactly ee calls and",
    "start": "732800",
    "end": "738560"
  },
  {
    "text": "we see here that this file was executed and again this",
    "start": "738560",
    "end": "745360"
  },
  {
    "text": "time it was a script so we know that it was in there but think about a different case where this was",
    "start": "745360",
    "end": "752079"
  },
  {
    "text": "a uh a binary where it wasn't so easy to understand what's going on in there",
    "start": "752079",
    "end": "759839"
  },
  {
    "text": "actually let's take a look at an example like this so here i have another example",
    "start": "760800",
    "end": "769360"
  },
  {
    "text": "it's the same hello world application that was the malware this time",
    "start": "769360",
    "end": "776000"
  },
  {
    "text": "this is the manual itself this time i am hiding it within this hello world dot",
    "start": "777440",
    "end": "784839"
  },
  {
    "text": "text it's it feels similar to this to the previous example where we",
    "start": "784839",
    "end": "791200"
  },
  {
    "text": "uh we reheat it within a script but this time it will not be that easy to discover it",
    "start": "791200",
    "end": "798240"
  },
  {
    "text": "first of all this is a binary so if we look at the binary itself yeah",
    "start": "798240",
    "end": "806399"
  },
  {
    "text": "nothing really readable for us here it's just binary data this is one thing second of all if we",
    "start": "806399",
    "end": "813600"
  },
  {
    "text": "trace it using the same x-trace command and we ask it to",
    "start": "813600",
    "end": "820480"
  },
  {
    "text": "trace exactly remember that in the previous example",
    "start": "820480",
    "end": "827040"
  },
  {
    "text": "we saw that the script was started",
    "start": "827040",
    "end": "833360"
  },
  {
    "text": "and then other processes started and then explicitly the malware itself had started",
    "start": "833360",
    "end": "841040"
  },
  {
    "text": "and this time i'm going to see a different result i",
    "start": "841040",
    "end": "846720"
  },
  {
    "text": "only see the execution of the of the host of the of the",
    "start": "846720",
    "end": "853199"
  },
  {
    "text": "wrapping binary there is no exact ve malware here even though we know because we see the",
    "start": "853199",
    "end": "859120"
  },
  {
    "text": "output that hello world was invoked and this is not hello world",
    "start": "859120",
    "end": "866320"
  },
  {
    "text": "so how can we still detect it so this is where behavioral",
    "start": "866399",
    "end": "873600"
  },
  {
    "text": "analysis comes into the picture so far we we've seen an example for how tracing",
    "start": "873600",
    "end": "880240"
  },
  {
    "text": "can help us understand what's going on so we can yeah we can look for exactly e and so on but in this case we need",
    "start": "880240",
    "end": "886399"
  },
  {
    "text": "something more powerful we need to learn about the behavioral pattern of this of this technique and then we",
    "start": "886399",
    "end": "894160"
  },
  {
    "text": "can detect it so i'm going to add a few um",
    "start": "894160",
    "end": "901199"
  },
  {
    "text": "events to trace here not only exactly here i want to look also at",
    "start": "901199",
    "end": "906240"
  },
  {
    "text": "map and and protect these two system calls are used to",
    "start": "906240",
    "end": "913600"
  },
  {
    "text": "allocate memory uh manage its uh permissions uh basically to manage memory for the",
    "start": "913600",
    "end": "919360"
  },
  {
    "text": "process and i do this because i know that the packed version",
    "start": "919360",
    "end": "924399"
  },
  {
    "text": "is using um is using this technique in order to hide the",
    "start": "924399",
    "end": "929920"
  },
  {
    "text": "embedded binary so this time we see the same exact v of the hello world that pack this is the",
    "start": "929920",
    "end": "935839"
  },
  {
    "text": "entry point we still don't see any other exactly e for the",
    "start": "935839",
    "end": "941279"
  },
  {
    "text": "embedded malware but we do see a suspicious pattern here we see that that the process has",
    "start": "941279",
    "end": "947600"
  },
  {
    "text": "allocated um has allocated a memory region and it has actually made it executable",
    "start": "947600",
    "end": "955759"
  },
  {
    "text": "as we can see here this is necessary for it to execute the binary data that it writes",
    "start": "955759",
    "end": "961040"
  },
  {
    "text": "into this memory region and if we compare this to the trace",
    "start": "961040",
    "end": "966480"
  },
  {
    "text": "of the regular hello world we see that it is very very",
    "start": "966480",
    "end": "974480"
  },
  {
    "text": "different here we see just exactly it and here we see a whole load of suspicious activity",
    "start": "974480",
    "end": "983839"
  },
  {
    "text": "okay so this was about how we can",
    "start": "984000",
    "end": "988720"
  },
  {
    "text": "how we can understand what the software do to our art that we",
    "start": "989120",
    "end": "994480"
  },
  {
    "text": "are running is doing by observing its behavioral patterns",
    "start": "994480",
    "end": "999519"
  },
  {
    "text": "we have done it manually this time but soon we will see how we can also use",
    "start": "999519",
    "end": "1005519"
  },
  {
    "text": "more sophisticated tools to help us in this analysis",
    "start": "1005519",
    "end": "1010720"
  },
  {
    "text": "all right so let's move back to the slides",
    "start": "1010720",
    "end": "1015279"
  },
  {
    "text": "okay so we have seen how we can use system tracing you know",
    "start": "1021360",
    "end": "1026959"
  },
  {
    "text": "to understand the software that's running in the containers uh maybe some of you think this",
    "start": "1026959",
    "end": "1032240"
  },
  {
    "text": "sounds familiar maybe it rings a bell uh we have been using similar techniques",
    "start": "1032240",
    "end": "1039199"
  },
  {
    "text": "in production to uh to prevent from certain things to happen",
    "start": "1039199",
    "end": "1044798"
  },
  {
    "text": "onto alert this is often called runtime security or random protection",
    "start": "1044799",
    "end": "1050559"
  },
  {
    "text": "it's nothing new right uh there's a lot of mature solutions in the market for runtime security",
    "start": "1050559",
    "end": "1056799"
  },
  {
    "text": "and what it means is that we are going to monitor everything that happens in production",
    "start": "1056799",
    "end": "1061840"
  },
  {
    "text": "we are going to analyze this stream of events and we are going",
    "start": "1061840",
    "end": "1067280"
  },
  {
    "text": "to look for suspicious patterns and if we if we find something then we were going to alert or we can",
    "start": "1067280",
    "end": "1073360"
  },
  {
    "text": "even block it from ever happening um again this is not new the company that i",
    "start": "1073360",
    "end": "1080000"
  },
  {
    "text": "work for is one of the leading vendors in this space so there's there's a mature market for",
    "start": "1080000",
    "end": "1086720"
  },
  {
    "text": "these kind of solutions but my argument here is that if we are",
    "start": "1086720",
    "end": "1092640"
  },
  {
    "text": "dealing with malware and trying to assess the containers won't be won't it be",
    "start": "1092640",
    "end": "1099039"
  },
  {
    "text": "even better to make this assessment earlier in the pipeline why are we waiting for the containers to be running",
    "start": "1099039",
    "end": "1104960"
  },
  {
    "text": "in production in order to observe their behavior in other words what i'm saying here is",
    "start": "1104960",
    "end": "1111440"
  },
  {
    "start": "1111000",
    "end": "1111000"
  },
  {
    "text": "let's shift left and use the the same techniques or technology that",
    "start": "1111440",
    "end": "1117760"
  },
  {
    "text": "we have been using for random security but use it earlier in the pipeline",
    "start": "1117760",
    "end": "1124000"
  },
  {
    "text": "when we build the container where we test it and so on now this is not simply taking the same",
    "start": "1124000",
    "end": "1131200"
  },
  {
    "text": "product and running it in a different place because there are different constraints here we can actually tailor the product",
    "start": "1131200",
    "end": "1138320"
  },
  {
    "text": "to fit the to fit its new place in the pipeline",
    "start": "1138320",
    "end": "1143679"
  },
  {
    "text": "in the in the pre-production environment and this is what we call dynamic",
    "start": "1143679",
    "end": "1148720"
  },
  {
    "text": "scanning so this solution will now also run the containers inside of an",
    "start": "1148720",
    "end": "1154559"
  },
  {
    "text": "ephemera sandbox right because we are not running the containers in production anymore we need to run them somewhere else",
    "start": "1154559",
    "end": "1161039"
  },
  {
    "text": "and these are untrusted software so in ephemeral sandbox sound like good",
    "start": "1161039",
    "end": "1166480"
  },
  {
    "text": "solution we can also use more comprehensive tracing when we do it in this stage i will",
    "start": "1166480",
    "end": "1173679"
  },
  {
    "text": "explain this point very soon and we can also automate this into into a",
    "start": "1173679",
    "end": "1181600"
  },
  {
    "text": "a solution that we can integrate into existing processes think that uh whenever you do a pull",
    "start": "1181600",
    "end": "1186640"
  },
  {
    "text": "request you can now spin up in ephemeral sandbox run the container in there",
    "start": "1186640",
    "end": "1192240"
  },
  {
    "text": "it is heavily heavily instrumented and you have all of the same heuristics that you've used for",
    "start": "1192240",
    "end": "1197520"
  },
  {
    "text": "random security but even more uh this time and you are able to flag this container",
    "start": "1197520",
    "end": "1203919"
  },
  {
    "text": "as suspicious or safe before it reaches production actually before it reaches",
    "start": "1203919",
    "end": "1209520"
  },
  {
    "text": "even your container registry and i want to emphasize the fact that",
    "start": "1209520",
    "end": "1214720"
  },
  {
    "text": "this is not the same as runtime security because it is quite similar but not the same there are different",
    "start": "1214720",
    "end": "1222559"
  },
  {
    "start": "1215000",
    "end": "1215000"
  },
  {
    "text": "constraints here and we need to even leverage these different contract different",
    "start": "1222559",
    "end": "1228159"
  },
  {
    "text": "constraints in order to build a solution that is tailored for this new place",
    "start": "1228159",
    "end": "1234080"
  },
  {
    "text": "in random security in production we always aspire to minimize the",
    "start": "1234080",
    "end": "1239520"
  },
  {
    "text": "overhead of everything that that we add there",
    "start": "1239520",
    "end": "1244799"
  },
  {
    "text": "but in dynamic scanning there is not there's no such requirement these are",
    "start": "1244799",
    "end": "1250000"
  },
  {
    "text": "ad hoc environments that we spin up just for the sake of uh testing the containers we can turn on",
    "start": "1250000",
    "end": "1256159"
  },
  {
    "text": "the verbosity to the maximum we don't really care we can even collect",
    "start": "1256159",
    "end": "1261360"
  },
  {
    "text": "more kinds of information for example we can run a tcp dump while we're at it why not we can collect",
    "start": "1261360",
    "end": "1268880"
  },
  {
    "text": "a lot more information in higher fidelity and the more data we",
    "start": "1268880",
    "end": "1274320"
  },
  {
    "text": "have the better decisions we can make and so this is just one example for uh",
    "start": "1274320",
    "end": "1279600"
  },
  {
    "text": "why the constraints are different and why the the resulting product might look different another example is",
    "start": "1279600",
    "end": "1286000"
  },
  {
    "text": "that in production we have to make quick decisions this makes sense right because",
    "start": "1286000",
    "end": "1291840"
  },
  {
    "text": "the runtime protection solution is in the critical path we don't want to delay uh too much",
    "start": "1291840",
    "end": "1299840"
  },
  {
    "text": "the the decision-making process but with dynamic scanning we don't have this con this constraints",
    "start": "1299840",
    "end": "1306240"
  },
  {
    "text": "we can take as long as we need to in order to make decisions we can use",
    "start": "1306240",
    "end": "1311760"
  },
  {
    "text": "uh more complicated algorithms to to test or to make the decisions we can even defer the decisions",
    "start": "1311760",
    "end": "1318720"
  },
  {
    "text": "so we can see that if something specific happens we can flag this",
    "start": "1318720",
    "end": "1323760"
  },
  {
    "text": "container for someone else some security researcher to take a deeper look at later on this is a privilege that we",
    "start": "1323760",
    "end": "1330720"
  },
  {
    "text": "have with dynamic scanning and we don't have this with front-end security another example for the differences is",
    "start": "1330720",
    "end": "1337520"
  },
  {
    "text": "that in production the stakes are much much higher everything is high impact but with",
    "start": "1337520",
    "end": "1345360"
  },
  {
    "text": "dynamic scanning this is a fake environment it's not real uh customer data so we can actually let",
    "start": "1345360",
    "end": "1354640"
  },
  {
    "text": "the malware run to completion and do what it wanted to do maybe we will learn something about it",
    "start": "1354640",
    "end": "1360799"
  },
  {
    "text": "that we that we couldn't have because we had to stop it short in production so my point here is just",
    "start": "1360799",
    "end": "1368559"
  },
  {
    "text": "to explain why dynamic scanning is not runtime security yes it is using",
    "start": "1368559",
    "end": "1375280"
  },
  {
    "text": "system tracing it is using even similar terminology or technologies but because the constraints",
    "start": "1375280",
    "end": "1382480"
  },
  {
    "text": "are different we can build two different products that each one of them leverages the uh the constraints to its",
    "start": "1382480",
    "end": "1390000"
  },
  {
    "text": "own benefit",
    "start": "1390000",
    "end": "1392880"
  },
  {
    "start": "1395000",
    "end": "1395000"
  },
  {
    "text": "all right so now i want to explain what i meant earlier when i said advanced tracing so in the",
    "start": "1395280",
    "end": "1402159"
  },
  {
    "text": "demo that we saw earlier i used s trace a very popular and very effective tool to trace",
    "start": "1402159",
    "end": "1410080"
  },
  {
    "text": "the system calls that a process makes but we cannot speak about system tracing",
    "start": "1410080",
    "end": "1416960"
  },
  {
    "text": "today without mentioning ebpf and this is not going to be an introduction to ebpf",
    "start": "1416960",
    "end": "1423840"
  },
  {
    "text": "there are other uh sessions that cover that but i think the tbpf is such a",
    "start": "1423840",
    "end": "1431360"
  },
  {
    "text": "an impactful and critical component that affects system tracing today",
    "start": "1431360",
    "end": "1437760"
  },
  {
    "text": "that we need to mention it so ebpf is just a subsystem in the linux",
    "start": "1437760",
    "end": "1443440"
  },
  {
    "text": "kernel that allows you to run your own code within the linux canon and",
    "start": "1443440",
    "end": "1449200"
  },
  {
    "text": "this is very unique because if you wanted to do something similar to that before ebpf you had to",
    "start": "1449200",
    "end": "1455919"
  },
  {
    "text": "maybe build a kernel module and load it so that means that the code that you",
    "start": "1455919",
    "end": "1461120"
  },
  {
    "text": "write this kernel model is essentially at the same level as the",
    "start": "1461120",
    "end": "1467039"
  },
  {
    "text": "kernel it has the same privileges it has the same blast radius and when we talk about",
    "start": "1467039",
    "end": "1473679"
  },
  {
    "text": "security products it is um not so easy to convince",
    "start": "1473679",
    "end": "1479679"
  },
  {
    "text": "a security-minded customer to run some arbitrary kernel module and",
    "start": "1479679",
    "end": "1485279"
  },
  {
    "text": "basically load it into their production environment which means that it can do everything that it wants to do",
    "start": "1485279",
    "end": "1491440"
  },
  {
    "text": "ebpf allows us to load our programs into the kernel in a safe way in an isolated way",
    "start": "1491440",
    "end": "1496480"
  },
  {
    "text": "so that means that the the risk is lower and it also has a lot of different kinds",
    "start": "1496480",
    "end": "1502640"
  },
  {
    "text": "of integrations one of them is tracing so we can do everything that we wanted to do with",
    "start": "1502640",
    "end": "1508159"
  },
  {
    "text": "tracing even more than asteroids and i'm going to show it very soon in a safe way in a more",
    "start": "1508159",
    "end": "1515760"
  },
  {
    "text": "performant in in a more performant way and this is really why the ebpf is so important today uh by the way",
    "start": "1515760",
    "end": "1523120"
  },
  {
    "text": "the name edpf um doesn't really make sense today uh",
    "start": "1523120",
    "end": "1528240"
  },
  {
    "text": "it carries a lot of uh legacy with it it originated as a packet filter utility",
    "start": "1528240",
    "end": "1534799"
  },
  {
    "text": "to to filter the packets in the kernel and then it was related to berkeley's uh bsd and",
    "start": "1534799",
    "end": "1541039"
  },
  {
    "text": "then it was extended to to do more than this this is why it's called extended",
    "start": "1541039",
    "end": "1546960"
  },
  {
    "text": "extended berkeley packet filter ebpf not a lot of uh",
    "start": "1546960",
    "end": "1552640"
  },
  {
    "text": "not not a very meaningful name today but still this is the name and the technology itself is amazing",
    "start": "1552640",
    "end": "1558480"
  },
  {
    "text": "um so in a high level what it means is that the application is going to run somewhere on the stack in user space",
    "start": "1558480",
    "end": "1565120"
  },
  {
    "text": "in a container it's going it's going to make a system call at some point or another because",
    "start": "1565120",
    "end": "1570480"
  },
  {
    "text": "every resource that it needs to work with a network called if right into a file",
    "start": "1570480",
    "end": "1578240"
  },
  {
    "text": "everything has to go through the operating system and this is where we're at because we",
    "start": "1578240",
    "end": "1584480"
  },
  {
    "text": "have injected our ebpf probes into the kernel we will be waiting there",
    "start": "1584480",
    "end": "1589760"
  },
  {
    "text": "and intercepting those requests from the applications and at this point of interception we can",
    "start": "1589760",
    "end": "1597120"
  },
  {
    "text": "do a lot of interesting things so this is a very very high level",
    "start": "1597120",
    "end": "1604240"
  },
  {
    "text": "explanation of what ebpf means for us and this is what we are using for our",
    "start": "1604240",
    "end": "1609840"
  },
  {
    "text": "container scanning tool we've actually took this work and open source it",
    "start": "1609840",
    "end": "1615840"
  },
  {
    "text": "and we have a project on github that is called tracy and",
    "start": "1615840",
    "end": "1622690"
  },
  {
    "start": "1616000",
    "end": "1616000"
  },
  {
    "text": "[Music] this is basically the engine behind our commercial offering container",
    "start": "1622690",
    "end": "1630559"
  },
  {
    "text": "scanning tools so it is completely open source under a permissive license apache 2.",
    "start": "1630559",
    "end": "1637440"
  },
  {
    "text": "we have external contributors and it is uh it is very interesting uh",
    "start": "1637440",
    "end": "1643520"
  },
  {
    "text": "project for you to look at if you are interested in ebtf or system tracing",
    "start": "1643520",
    "end": "1648799"
  },
  {
    "text": "what's special about this project besides the fact that it provides similar functionality to s",
    "start": "1648799",
    "end": "1654720"
  },
  {
    "text": "trace but it is safer and a lot more performant",
    "start": "1654720",
    "end": "1659760"
  },
  {
    "text": "by the way what's interesting about it is that it it was built for security so when we",
    "start": "1659760",
    "end": "1666840"
  },
  {
    "text": "instrument a function in the kernel we can not only",
    "start": "1666840",
    "end": "1672559"
  },
  {
    "text": "uh report it like asterisk does we can we can do a lot of more",
    "start": "1672559",
    "end": "1678799"
  },
  {
    "text": "interesting things with it that i'm going to show in a second and we can also trace other things",
    "start": "1678799",
    "end": "1684399"
  },
  {
    "text": "besides system cost this is something very unique we can also instrument",
    "start": "1684399",
    "end": "1690880"
  },
  {
    "text": "just arbitrary functions within the kernel that we're interested in and this",
    "start": "1690880",
    "end": "1696480"
  },
  {
    "text": "produces a much higher quality of data for us to analyze in order to detect behavioral",
    "start": "1696480",
    "end": "1704960"
  },
  {
    "text": "patterns all right so what we're going to do now",
    "start": "1704960",
    "end": "1712559"
  },
  {
    "text": "is to take a look at tracy and see how it can help us solve a few issues some of them we have",
    "start": "1712559",
    "end": "1719679"
  },
  {
    "text": "already started to discuss previously",
    "start": "1719679",
    "end": "1725840"
  },
  {
    "text": "right",
    "start": "1731120",
    "end": "1733440"
  },
  {
    "text": "so you remember that packed binary that we have looked at previously using s trace",
    "start": "1736960",
    "end": "1744799"
  },
  {
    "text": "we were able to manually detect that it was using stress i want to first of all show you how it is done using tracy so",
    "start": "1744799",
    "end": "1752559"
  },
  {
    "text": "i'm going to run tracy",
    "start": "1752559",
    "end": "1757039"
  },
  {
    "text": "let's do this",
    "start": "1758000",
    "end": "1767840"
  },
  {
    "text": "all right so this is tracy and there's a lot of options here i'm not going to cover them all i'm just at this point trying to reach",
    "start": "1770399",
    "end": "1777600"
  },
  {
    "text": "the same result as we have done with s trace so i'm telling it to trace exact",
    "start": "1777600",
    "end": "1783440"
  },
  {
    "text": "to the e i'm telling it to trace emma and i'm telling you to trace",
    "start": "1783440",
    "end": "1792000"
  },
  {
    "text": "and protect right and i'm also going to prepare",
    "start": "1792000",
    "end": "1799120"
  },
  {
    "text": "to run my hello world the pact version let's",
    "start": "1799120",
    "end": "1806320"
  },
  {
    "text": "start tracy is now registering the the ebtf probes and we can now run",
    "start": "1806320",
    "end": "1814320"
  },
  {
    "text": "the binary and we see a very similar output to what we have seen before we see exactly",
    "start": "1814320",
    "end": "1822080"
  },
  {
    "text": "for the entry point we see the m-up and then protect",
    "start": "1822080",
    "end": "1827760"
  },
  {
    "text": "system calls we see that the arguments to these calls in this case that someone requested a",
    "start": "1828799",
    "end": "1835200"
  },
  {
    "text": "executable memory region so far pretty similar to space",
    "start": "1835200",
    "end": "1840960"
  },
  {
    "text": "now i'm going to do the same but to turn on this very interesting flag that's called",
    "start": "1840960",
    "end": "1846720"
  },
  {
    "text": "security events security events",
    "start": "1846720",
    "end": "1853600"
  },
  {
    "text": "and oh sorry how did i miss you security alerts my",
    "start": "1856159",
    "end": "1862840"
  },
  {
    "text": "dad i'm going to run the same packed executable",
    "start": "1862840",
    "end": "1868000"
  },
  {
    "text": "and this time almost the same output but this time you can see here that",
    "start": "1868000",
    "end": "1875600"
  },
  {
    "text": "we have a new kind of alerts here mem prot alert and this is basically",
    "start": "1875600",
    "end": "1882559"
  },
  {
    "text": "tracy telling us hey we've noticed that the protection of this memory region has changed to",
    "start": "1882559",
    "end": "1888480"
  },
  {
    "text": "executable this is a notable um event this is not raw data this was",
    "start": "1888480",
    "end": "1894480"
  },
  {
    "text": "not collected from the operating system this is security insight that tracy is adding on top of the raw",
    "start": "1894480",
    "end": "1900559"
  },
  {
    "text": "data eventually you can see here a state machine that is tracking the behavioral pattern and it results in",
    "start": "1900559",
    "end": "1908480"
  },
  {
    "text": "this final alert that protection change to executable which is",
    "start": "1908480",
    "end": "1914720"
  },
  {
    "text": "a trigger point that you can react to so this is very cool tracy is not only",
    "start": "1914720",
    "end": "1919840"
  },
  {
    "text": "surfacing raw data it is actually producing security",
    "start": "1919840",
    "end": "1925440"
  },
  {
    "text": "insights but you know tracy can do something even better it can actually collect",
    "start": "1925440",
    "end": "1931039"
  },
  {
    "text": "the evidence for the security incident in this case the embedded binary that",
    "start": "1931039",
    "end": "1937440"
  },
  {
    "text": "was run from memory it can actually capture this memory uh region into a file that you can later",
    "start": "1937440",
    "end": "1945760"
  },
  {
    "text": "go on and investigate this is super cool so i'm going to run the same i will tell tracy to capture",
    "start": "1945760",
    "end": "1953679"
  },
  {
    "text": "uh memory files and i'm going to tell it to clear the output directory before he",
    "start": "1953679",
    "end": "1959120"
  },
  {
    "text": "does that so run this again and run the back version again",
    "start": "1959120",
    "end": "1967279"
  },
  {
    "text": "almost the same output except this time where we see the this uh alert from tracy we also see",
    "start": "1967279",
    "end": "1975039"
  },
  {
    "text": "that saving data to this file this is the addition",
    "start": "1975039",
    "end": "1980640"
  },
  {
    "text": "and we can take a look at this file here uh if we look at",
    "start": "1980640",
    "end": "1987200"
  },
  {
    "text": "temp tracy this is by default the output directory where tracy saves stuff we can see that",
    "start": "1987519",
    "end": "1994320"
  },
  {
    "text": "we have this same file here and this file the contents of this file this is",
    "start": "1994320",
    "end": "2000320"
  },
  {
    "text": "not a memory dump this is not the entire 16 gigabyte of memory this is the",
    "start": "2000320",
    "end": "2006080"
  },
  {
    "text": "precise memory region that triggered this alert so if we take a look",
    "start": "2006080",
    "end": "2014159"
  },
  {
    "text": "inside of this file",
    "start": "2014159",
    "end": "2019840"
  },
  {
    "text": "so it's under this directory this is the name so this is the binary data it's not",
    "start": "2021519",
    "end": "2027360"
  },
  {
    "text": "readable for us but this is the same binary data that you would find if you",
    "start": "2027360",
    "end": "2033039"
  },
  {
    "text": "if you were to take a look at the original embedded binary which is",
    "start": "2033039",
    "end": "2040000"
  },
  {
    "text": "the hello world binary it's basically the same binary data and you can take",
    "start": "2040000",
    "end": "2046720"
  },
  {
    "text": "this evidence and analyze it investigate it and so on all right so some very cool",
    "start": "2046720",
    "end": "2054398"
  },
  {
    "text": "stuff here with tracy and by the way this is what i",
    "start": "2054399",
    "end": "2059599"
  },
  {
    "text": "meant earlier when i said how um ebpf is such a game changer",
    "start": "2059599",
    "end": "2065679"
  },
  {
    "text": "for us or for anyone who is doing uh system tracing today because this is actually running our own",
    "start": "2065679",
    "end": "2072398"
  },
  {
    "text": "programs in the kernel at the point of interception we can do all of this very cool stuff we can track",
    "start": "2072399",
    "end": "2080638"
  },
  {
    "text": "this state machine of uh of behavioral pattern within the kernel we can copy bits of information",
    "start": "2080639",
    "end": "2089679"
  },
  {
    "text": "uh into the um into the user space just to save it aside we can do a lot of other",
    "start": "2089679",
    "end": "2095919"
  },
  {
    "text": "cool stuff and uh we actually have a lot of interesting things",
    "start": "2095919",
    "end": "2101680"
  },
  {
    "text": "for anyone who is interested in system tracing we've seen the a capture option with the",
    "start": "2101680",
    "end": "2108800"
  },
  {
    "text": "mem option but we have like capturing of executed files",
    "start": "2108800",
    "end": "2113839"
  },
  {
    "text": "capturing of written files we have the security alerts that we discussed we have events which are not only system",
    "start": "2113839",
    "end": "2121599"
  },
  {
    "text": "calls we also support tracing arbitrary kernel functions we have container tracing specifically",
    "start": "2121599",
    "end": "2129440"
  },
  {
    "text": "so a lot of uh very interesting capabilities here for a system tracing tool that is",
    "start": "2129440",
    "end": "2137160"
  },
  {
    "text": "security-minded and tracy is built in the open",
    "start": "2137160",
    "end": "2143280"
  },
  {
    "text": "and we welcome you to participate and tell us what you think",
    "start": "2143280",
    "end": "2148480"
  },
  {
    "text": "and and tracy i remind you is the engine for our dynamic scanning solution and this session was about",
    "start": "2148560",
    "end": "2154960"
  },
  {
    "text": "dynamic scanning of containers so i hope now maybe it all starting to",
    "start": "2154960",
    "end": "2163280"
  },
  {
    "text": "tie together for you how static scanning",
    "start": "2163280",
    "end": "2168320"
  },
  {
    "text": "relates to dynamic scanning which relates to runtime security and how system tracing is enabling",
    "start": "2168320",
    "end": "2177119"
  },
  {
    "start": "2171000",
    "end": "2171000"
  },
  {
    "text": "this dynamic scanning technology i think one of my goals here today was to",
    "start": "2177119",
    "end": "2182560"
  },
  {
    "text": "explain why dynamic scanning is distinct from static scanning and from",
    "start": "2182560",
    "end": "2190320"
  },
  {
    "text": "runtime security even though it draws similar characteristics in some ways",
    "start": "2190320",
    "end": "2196560"
  },
  {
    "text": "similar technology to random security or similar requirements such as static scanning",
    "start": "2196560",
    "end": "2203119"
  },
  {
    "text": "but still it is a piece of its own and i hope that you find this",
    "start": "2203119",
    "end": "2210640"
  },
  {
    "text": "idea interesting if you do then you can start to explore dynamic",
    "start": "2210640",
    "end": "2216160"
  },
  {
    "text": "scanning of your images as well",
    "start": "2216160",
    "end": "2219440"
  },
  {
    "text": "so thank you everyone this has been great fun i think we have a few more minutes for",
    "start": "2221280",
    "end": "2227920"
  },
  {
    "text": "questions if you don't make it this time you can reach out to me personally over at twitter i'm at itaisk",
    "start": "2227920",
    "end": "2235200"
  },
  {
    "text": "and i wish you a truthful rest of the conference",
    "start": "2235200",
    "end": "2243200"
  }
]