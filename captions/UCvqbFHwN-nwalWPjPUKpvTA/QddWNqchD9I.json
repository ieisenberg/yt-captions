[
  {
    "start": "0",
    "end": "158000"
  },
  {
    "text": "all right welcome everyone uh to the talk beyond namespaces virtual clusters are the future of",
    "start": "399",
    "end": "7200"
  },
  {
    "text": "multi-tenancy i'm lucas and i'm the ceo of loft labs",
    "start": "7200",
    "end": "12400"
  },
  {
    "text": "in i'm based in san francisco but originally from germany so you know excuse the funny accent",
    "start": "12400",
    "end": "20320"
  },
  {
    "text": "together with my team we're working on some really exciting uh things in the kubernetes space our commercial product",
    "start": "20320",
    "end": "26240"
  },
  {
    "text": "loft essentially enables large companies you know to provide self-service",
    "start": "26240",
    "end": "32398"
  },
  {
    "text": "isolated name spaces to a large number of engineers really like an internal",
    "start": "32399",
    "end": "38399"
  },
  {
    "text": "provisioning platform for kubernetes so we really care a lot about",
    "start": "38399",
    "end": "43840"
  },
  {
    "text": "multi-tenancy about user experience developer experience and about self-service",
    "start": "43840",
    "end": "50719"
  },
  {
    "text": "and because we care so much about these topics we're also heavily involved in open source we're working on four different open",
    "start": "50719",
    "end": "56879"
  },
  {
    "text": "source projects our oldest project is called devspace it's a developer tool",
    "start": "56879",
    "end": "62000"
  },
  {
    "text": "for kubernetes and it's essentially a replacement for docker compose that is designed to be you know for kubernetes",
    "start": "62000",
    "end": "69840"
  },
  {
    "text": "that you you know can you know streamline your workflow with kubernetes the same way as you can do with docker",
    "start": "69840",
    "end": "75040"
  },
  {
    "text": "compose with your local docker daemon but now you can also do that with a remote kubernetes cluster",
    "start": "75040",
    "end": "80720"
  },
  {
    "text": "we're also working on kiosk which is a multi-tenancy extension for kubernetes and and on js policy which is a policy",
    "start": "80720",
    "end": "88000"
  },
  {
    "text": "engine that allows you to write policies in javascript or typescript making it much easier you know to write these",
    "start": "88000",
    "end": "94720"
  },
  {
    "text": "policies and maintain them over a long period of time even with someone you know in the company leaves that you know",
    "start": "94720",
    "end": "101280"
  },
  {
    "text": "was the ricoh expert um writing policies beforehand and one of the projects that we're",
    "start": "101280",
    "end": "107680"
  },
  {
    "text": "working on uh is v-cluster and that's what we're actually going to talk about uh today",
    "start": "107680",
    "end": "113600"
  },
  {
    "text": "it's a really really exciting project around virtual communities clusters",
    "start": "113600",
    "end": "118799"
  },
  {
    "text": "so let's dive in beyond namespaces virtual clusters are the future of",
    "start": "118799",
    "end": "124399"
  },
  {
    "text": "multi-tenancy gosh that's a pretty heavyweight title right i don't even know where you are",
    "start": "124399",
    "end": "130080"
  },
  {
    "text": "you know where you're attending this session the future of multi-tenancy wow",
    "start": "130080",
    "end": "135280"
  },
  {
    "text": "what is that right uh virtual clusters never heard of that um you're probably all here because the",
    "start": "135280",
    "end": "141920"
  },
  {
    "text": "first part right beyond namespaces right you know namespaces yeah i got this",
    "start": "141920",
    "end": "147360"
  },
  {
    "text": "right um i think everybody attending kubecon probably knows what a namespace is but do you really know what a",
    "start": "147360",
    "end": "153680"
  },
  {
    "text": "namespace if we actually ask google what is a kubernetes namespace i mean",
    "start": "153680",
    "end": "159840"
  },
  {
    "start": "158000",
    "end": "158000"
  },
  {
    "text": "you know google came up with kubernetes after all right so let's just take a look",
    "start": "159840",
    "end": "165040"
  },
  {
    "text": "and if we go to the kubernetes documentation it reads their kubernetes supports",
    "start": "165040",
    "end": "170160"
  },
  {
    "text": "multiple virtual clusters backed by the same physical cluster these virtual clusters are called name",
    "start": "170160",
    "end": "177519"
  },
  {
    "text": "spaces so namespaces are virtual clusters then we don't even need this talk right",
    "start": "177519",
    "end": "184560"
  },
  {
    "text": "it's built in kubernetes you all know about it uh i guess we're done here right if you ask me uh this is pretty outdated",
    "start": "184560",
    "end": "193200"
  },
  {
    "text": "um namespaces are not clusters so they are not virtual",
    "start": "193200",
    "end": "198319"
  },
  {
    "text": "clusters namespaces and that's also part of the documentation provide a scope for names",
    "start": "198319",
    "end": "205599"
  },
  {
    "text": "in kubernetes right for your pods etc names of resources need to be unique",
    "start": "205599",
    "end": "211760"
  },
  {
    "text": "within a namespace but not unique across namespaces right so i can have two",
    "start": "211760",
    "end": "217360"
  },
  {
    "text": "deployments called database and they live in two different name spaces and i don't have any naming",
    "start": "217360",
    "end": "223200"
  },
  {
    "text": "collisions right that's great that's what namespaces do and that's about it right they don't do",
    "start": "223200",
    "end": "228879"
  },
  {
    "text": "a lot more but as we all know a kubernetes cluster is much more than just you know naming objects",
    "start": "228879",
    "end": "234879"
  },
  {
    "text": "so what is a cluster not all objects are in a namespace there",
    "start": "234879",
    "end": "240000"
  },
  {
    "text": "are a lot of cluster-wide resources they include nodes persistent volumes and even namespaces",
    "start": "240000",
    "end": "246959"
  },
  {
    "text": "themselves right namespace is a cluster-wide resource",
    "start": "246959",
    "end": "252000"
  },
  {
    "text": "if you actually want to check out which resources are cluster-wide and which ones are name-spaced uh you can actually",
    "start": "252000",
    "end": "257519"
  },
  {
    "text": "ask qctl right you can run cubectl api resources and you can either use the flag namespace true or namespace fault",
    "start": "257519",
    "end": "265680"
  },
  {
    "text": "to get the respective resources and kubernetes will tell you all the resources in your cluster that are available",
    "start": "265680",
    "end": "272560"
  },
  {
    "start": "271000",
    "end": "271000"
  },
  {
    "text": "hands up if you're a kubernetes contributor there's a couple",
    "start": "272560",
    "end": "278000"
  },
  {
    "text": "yeah a couple more so this slide is not for you because we heard earlier",
    "start": "278000",
    "end": "284160"
  },
  {
    "text": "you know stephen augustus in his keynote was talking about we need help with uh",
    "start": "284160",
    "end": "289280"
  },
  {
    "text": "documentation and kubernetes that docs page that i was showing earlier in particular you know that",
    "start": "289280",
    "end": "294880"
  },
  {
    "text": "sentence about virtual clusters is over five years old it hasn't been touched",
    "start": "294880",
    "end": "300000"
  },
  {
    "text": "pretty much since the inception of kubernetes right um and we you know really a lot of people need",
    "start": "300000",
    "end": "306720"
  },
  {
    "text": "to you know get involved to actually you know maintain this vast set of knowledge that we're building in the you know",
    "start": "306720",
    "end": "313039"
  },
  {
    "text": "kubernetes documentation so after this talk everyone should know the differences between namespace and",
    "start": "313039",
    "end": "319280"
  },
  {
    "text": "virtual clusters and should be able to fix this and whoever is a first-time contributor",
    "start": "319280",
    "end": "324479"
  },
  {
    "text": "to the documentation uh fixes this uh will get some kind of a little surprise present for me um so pay close attention",
    "start": "324479",
    "end": "332320"
  },
  {
    "text": "to this talk and hopefully you know there's an edit uh page button directly on the docs page right just google",
    "start": "332320",
    "end": "338639"
  },
  {
    "text": "kubernetes namespace head to the docs open that pull request on github well let's get back to the topic",
    "start": "338639",
    "end": "345039"
  },
  {
    "start": "343000",
    "end": "343000"
  },
  {
    "text": "multi-tenancy why are you even here why should you care well in my opinion spinning up thousands of",
    "start": "345039",
    "end": "351919"
  },
  {
    "text": "single tenant kubernetes clusters is a really terrible idea because it's very very costly",
    "start": "351919",
    "end": "358880"
  },
  {
    "text": "and it's very very hard to manage just imagine you're spinning up a kubernetes cluster for a thousand engineers right",
    "start": "358880",
    "end": "366000"
  },
  {
    "text": "and they're spread across like you know 200 teams you're going to end up with 200 clusters per team or even a thousand",
    "start": "366000",
    "end": "372720"
  },
  {
    "text": "clusters if you provision one for each individual user and none of these clusters really is going to scale down to zero and then you",
    "start": "372720",
    "end": "379759"
  },
  {
    "text": "got to maintain things like ingers controller cert manager prometheus metrics all of these things right in all",
    "start": "379759",
    "end": "386319"
  },
  {
    "text": "of these clusters that's a lot of work and it's really really hard to keep in sync and what",
    "start": "386319",
    "end": "391520"
  },
  {
    "text": "happens if someone breaks a cluster throwing away a cluster recreating that",
    "start": "391520",
    "end": "396639"
  },
  {
    "text": "typically you know the user the actual engineer who you know wants to just",
    "start": "396639",
    "end": "401759"
  },
  {
    "text": "connect this kubernetes cluster to the cicd pipeline or just do some you know pre-production development work there",
    "start": "401759",
    "end": "407600"
  },
  {
    "text": "doesn't have the permission to destroy a cluster and recreate it it's pretty tough so what about namespaces can't we use",
    "start": "407600",
    "end": "415039"
  },
  {
    "text": "multi-tenancy create shared clusters and essentially separate things by namespaces right that's the alternative",
    "start": "415039",
    "end": "421440"
  },
  {
    "text": "and a lot of people are doing that today if we're comparing those two approaches",
    "start": "421440",
    "end": "426479"
  },
  {
    "text": "we see that um you know name spaces have a lot of advantages they're much cheaper",
    "start": "426479",
    "end": "431919"
  },
  {
    "text": "it is much easier to share resources like for example you know shared english controller for all our tenants in this",
    "start": "431919",
    "end": "437680"
  },
  {
    "text": "shared cluster but a lot of other things are really problematic like isolation of tenants right as we",
    "start": "437680",
    "end": "444880"
  },
  {
    "text": "saw earlier a virtual cluster is essentially you know just a naming strategy right a scope for our names",
    "start": "444880",
    "end": "452080"
  },
  {
    "text": "that's about the isolation level that a namespace provides so we need to add a lot of things like network policies our",
    "start": "452080",
    "end": "457919"
  },
  {
    "text": "bag right we need to really lock these name spaces down so our tenants can't",
    "start": "457919",
    "end": "463199"
  },
  {
    "text": "get out of there and actually you know bring the cluster down or harm another tenant uh etc and that's a lot of work",
    "start": "463199",
    "end": "470160"
  },
  {
    "text": "and if we're doing it well then we're restricting that that very same tenant",
    "start": "470160",
    "end": "475520"
  },
  {
    "text": "that now cannot do certain things right so let's say there's a team in the organization that needs five namespaces",
    "start": "475520",
    "end": "481919"
  },
  {
    "text": "and needs to do you know things across five namespaces but you set up network policies in each",
    "start": "481919",
    "end": "487599"
  },
  {
    "text": "namespace to lock the traffic down to that particular namespace now you've got to make exceptions for that team and",
    "start": "487599",
    "end": "494160"
  },
  {
    "text": "who's going to clean up these exceptions later on right it's a pretty big mess when you're using",
    "start": "494160",
    "end": "499360"
  },
  {
    "text": "namespace-based multi-tenancy so if we're comparing those two approaches you know separate clusters",
    "start": "499360",
    "end": "505759"
  },
  {
    "text": "for each tenant versus multi-tenant uh clusters and separate name spaces for each tenant inside these uh",
    "start": "505759",
    "end": "512959"
  },
  {
    "text": "multi-tenancy clusters then we see you know that the benefits and the downsides are kind of like",
    "start": "512959",
    "end": "518640"
  },
  {
    "text": "opposite on both sides right um a lot of times you know we see we see problems like that can't we just get the",
    "start": "518640",
    "end": "525360"
  },
  {
    "text": "best of both worlds that's what we're trying with virtual cluster and with our implementation",
    "start": "525360",
    "end": "531040"
  },
  {
    "text": "v-cluster v-cluster is an open source project you can access it on vcluster.com you can find it on github",
    "start": "531040",
    "end": "537680"
  },
  {
    "text": "and it tries to be a multi-tenancy solution um for kubernetes that is you know",
    "start": "537680",
    "end": "544000"
  },
  {
    "text": "beyond namespaces it is more extensive than what a namespace offers but at the",
    "start": "544000",
    "end": "549519"
  },
  {
    "text": "same time it is as lightweight as a namespace so let's take a look at what that means",
    "start": "549519",
    "end": "555680"
  },
  {
    "start": "554000",
    "end": "554000"
  },
  {
    "text": "what do i mean when i talk about virtual clusters for me a virtual cluster is a control",
    "start": "555680",
    "end": "561279"
  },
  {
    "text": "plane that runs inside another kubernetes cluster what is the control plane well",
    "start": "561279",
    "end": "568000"
  },
  {
    "text": "there's an api server kubernetes api server there's a data store where our you know",
    "start": "568000",
    "end": "573600"
  },
  {
    "text": "name spaces pods et cetera are stored in that's typically at cd then we have a",
    "start": "573600",
    "end": "578880"
  },
  {
    "text": "controller manager which controls our replica numbers if i create a deployment with you know five replicas you know",
    "start": "578880",
    "end": "585600"
  },
  {
    "text": "someone's going to create these five parts that's what the controller manager does and then there's the scheduler which",
    "start": "585600",
    "end": "591279"
  },
  {
    "text": "then takes these parts and assigns them to nodes to actually you know where the people it starts these containers for us",
    "start": "591279",
    "end": "598000"
  },
  {
    "text": "um and then we have the workloads on top of these control planes and typically you know we want to create a namespace",
    "start": "598000",
    "end": "604320"
  },
  {
    "text": "we want to create some pods in there we want to create a couple of other namespaces um",
    "start": "604320",
    "end": "609680"
  },
  {
    "text": "and then what we always do is we talk to this api server right that's our gateway to",
    "start": "609680",
    "end": "616240"
  },
  {
    "text": "kubernetes that's our you know single source of proof in a way right um",
    "start": "616240",
    "end": "621760"
  },
  {
    "text": "so for thinking about virtual clusters that run on top of another cluster and we have the capability to spin up workloads",
    "start": "621760",
    "end": "629120"
  },
  {
    "text": "inside name spaces then why not create a control plane that runs as a pod",
    "start": "629120",
    "end": "635920"
  },
  {
    "text": "inside a namespace of our cluster that's what a virtual cluster is",
    "start": "635920",
    "end": "640959"
  },
  {
    "text": "that means we have an api server and potentially a couple of other components and it really depends on you know your",
    "start": "640959",
    "end": "647120"
  },
  {
    "text": "you know attitude towards virtual clusters and your you know how you technically want to implement this but you're certainly going to need some kind",
    "start": "647120",
    "end": "653440"
  },
  {
    "text": "of entry point that you talk to um so now we're not talking to that api server of our real cluster anymore we're",
    "start": "653440",
    "end": "659920"
  },
  {
    "text": "talking to this api server up here so when i run a cube ctrl command i talk to a pod right",
    "start": "659920",
    "end": "665600"
  },
  {
    "text": "that runs a separate api server so let's take a look at how this actually",
    "start": "665600",
    "end": "671760"
  },
  {
    "start": "668000",
    "end": "668000"
  },
  {
    "text": "works um i recorded this demo and will create a name space in you know a local let's",
    "start": "671760",
    "end": "678959"
  },
  {
    "text": "say mini cube cluster uh we call it hostname space because it's supposed to host our virtual cluster um and then",
    "start": "678959",
    "end": "685839"
  },
  {
    "text": "we're using vcluster cli which is a very lightweight binary to create a virtual cluster we call it vc1 and we tell it",
    "start": "685839",
    "end": "693680"
  },
  {
    "text": "created in host namespace right the solar name space we see that v-cluster under the hood",
    "start": "693680",
    "end": "699519"
  },
  {
    "text": "executes a helm command but you don't even need that you could just run cubesat apply or create a",
    "start": "699519",
    "end": "704640"
  },
  {
    "text": "customization out of it right but for ease of use you know just you know running helm under the hood pulls a",
    "start": "704640",
    "end": "710320"
  },
  {
    "text": "chart deploys it to your cluster and then we run recluster connect vc1",
    "start": "710320",
    "end": "715360"
  },
  {
    "text": "and specify our namespace again um and what this does and you see that here",
    "start": "715360",
    "end": "720639"
  },
  {
    "text": "in the output it actually starts our cube ctl port forward to now connect to",
    "start": "720639",
    "end": "725839"
  },
  {
    "text": "this api server right and the second thing that it does uh and that's why the you know cli is pretty handy to get",
    "start": "725839",
    "end": "732720"
  },
  {
    "text": "started with virtual clusters over just you know using cube ctl it also creates a cube config file",
    "start": "732720",
    "end": "739279"
  },
  {
    "text": "in our current working directory so we split the terminal here and i'm exporting the cube config environment",
    "start": "739279",
    "end": "746240"
  },
  {
    "text": "variable so that all my cube ctrl commands now point to that virtual api",
    "start": "746240",
    "end": "751440"
  },
  {
    "text": "server and not to my real clusters api server so any cube ctrl command i'm running now is inside the virtual",
    "start": "751440",
    "end": "758240"
  },
  {
    "text": "cluster so let's you know just list all namespaces and we'll see there's a couple of namespaces in there",
    "start": "758240",
    "end": "764959"
  },
  {
    "text": "like cubesystem and default and they've been created 51 seconds ago when we started that virtual",
    "start": "764959",
    "end": "771839"
  },
  {
    "text": "we can also list parts in the cube system name space and we may not even have the permission",
    "start": "771839",
    "end": "778320"
  },
  {
    "text": "to do that in the underlying cluster we're not admin in the underlying cluster we just have access to a",
    "start": "778320",
    "end": "783519"
  },
  {
    "text": "namespace and now we're admin in this virtual cluster that means we can also create namespaces in that virtual cluster",
    "start": "783519",
    "end": "790880"
  },
  {
    "text": "solving you know our problem with network policies i can now do things across 10 namespaces although i just",
    "start": "790880",
    "end": "796079"
  },
  {
    "text": "have access to one namespace in the underlying cluster and of course i can you know schedule",
    "start": "796079",
    "end": "801360"
  },
  {
    "text": "workloads and that's actually the tricky part right creating a namespace is just an entry in you know lcd or data store",
    "start": "801360",
    "end": "809200"
  },
  {
    "text": "but what happens if i you know create a deployment nginx in this case i set the replica number",
    "start": "809200",
    "end": "816000"
  },
  {
    "text": "the two and i schedule that in our newly created virtual namespace ns1",
    "start": "816000",
    "end": "821120"
  },
  {
    "text": "if we list the parts for this deployments a second later we see that they actually",
    "start": "821120",
    "end": "827839"
  },
  {
    "text": "get scheduled um the first part is still creating",
    "start": "827839",
    "end": "834240"
  },
  {
    "text": "and the second one is already running but where is it running right that's a question and i'm gonna dive a little bit",
    "start": "834240",
    "end": "840720"
  },
  {
    "text": "into this we'll see you know both of them are running now our virtual cluster seems to function like a regular",
    "start": "840720",
    "end": "846079"
  },
  {
    "text": "communities cluster and that's really the goal with virtual clusters so let's recap",
    "start": "846079",
    "end": "852320"
  },
  {
    "start": "849000",
    "end": "849000"
  },
  {
    "text": "of what happened here uh you know from an architecture perspective we created this hostname space in our regular",
    "start": "852320",
    "end": "858480"
  },
  {
    "text": "kubernetes cluster and then we deployed a virtual cluster with the v-cluster cli for ease of use",
    "start": "858480",
    "end": "865440"
  },
  {
    "text": "right a virtual cluster has mainly two components it has a stateful set we call",
    "start": "865440",
    "end": "872880"
  },
  {
    "text": "that vc1 just like the virtual cluster we created and it has a service",
    "start": "872880",
    "end": "878000"
  },
  {
    "text": "the stateful set um essentially you know creates a pod it has replica number one",
    "start": "878000",
    "end": "883040"
  },
  {
    "text": "in this case and inside this pod is really where our virtual cluster lives now",
    "start": "883040",
    "end": "890000"
  },
  {
    "text": "we have two containers in this virtual cluster the first container is a control plane it has an api server as we talked",
    "start": "890000",
    "end": "897040"
  },
  {
    "text": "about earlier that's definitely what we need to you know do any kind of cube ctl interaction and it has a separate",
    "start": "897040",
    "end": "903199"
  },
  {
    "text": "controller manager and it has a separate data store as well so it has a separate state from the",
    "start": "903199",
    "end": "909839"
  },
  {
    "text": "underlying cluster to store our pods namespaces and everything we do inside the virtual cluster",
    "start": "909839",
    "end": "915279"
  },
  {
    "text": "and then the third component is the so-called sinker and that is what is replacing the",
    "start": "915279",
    "end": "921519"
  },
  {
    "text": "scheduler you may have noticed you know control plane is incomplete the schedule is missing instead we're going to have",
    "start": "921519",
    "end": "927600"
  },
  {
    "text": "the syncer and we're going to talk about this in a second next part of the demo was essentially",
    "start": "927600",
    "end": "934240"
  },
  {
    "text": "running v-cluster connect which establishes this port forwarding connection through this v-cluster",
    "start": "934240",
    "end": "940320"
  },
  {
    "text": "service so that we can now talk to our vcluster api server and",
    "start": "940320",
    "end": "945519"
  },
  {
    "text": "this api server is ub cluster is a certified kubernetes distribution it just recently became a certified distro",
    "start": "945519",
    "end": "952639"
  },
  {
    "text": "it's a very new project we just launched it in q1 uh this year and very recently",
    "start": "952639",
    "end": "957839"
  },
  {
    "text": "became certified that means this api server that we're talking to is a hundred percent you know compliant uh",
    "start": "957839",
    "end": "964959"
  },
  {
    "text": "with all the you know conformance tests that we have in kubernetes and it behaves one-to-one like a regular",
    "start": "964959",
    "end": "970639"
  },
  {
    "text": "kubernetes cluster you won't be able to tell the difference except you know i guess after this talk you should be able",
    "start": "970639",
    "end": "976000"
  },
  {
    "text": "you know to know some tricks on how to find out uh if it's actually a virtual cluster",
    "start": "976000",
    "end": "981360"
  },
  {
    "text": "um so let's get rid of our underlying cluster and just focus on the virtual cluster for a second let's get rid of",
    "start": "981360",
    "end": "987120"
  },
  {
    "text": "this underlying control plane um the first thing i ran in this demo was creating a namespace",
    "start": "987120",
    "end": "993440"
  },
  {
    "text": "all right right that's an entry in our data store by default uh vcluster is using sqlite",
    "start": "993440",
    "end": "999600"
  },
  {
    "text": "because it's a very very lightweight data store and by default we're using k3ss api server which supports sqlite as",
    "start": "999600",
    "end": "1007199"
  },
  {
    "text": "a storage backend but you can also use you know postgres or even lcd if you",
    "start": "1007199",
    "end": "1012480"
  },
  {
    "text": "need you know full-blown virtual cluster and you know we're currently working with k3s but we're also working on you",
    "start": "1012480",
    "end": "1019519"
  },
  {
    "text": "know making real kubernetes api server work with vcluster as well is one of our next steps",
    "start": "1019519",
    "end": "1025600"
  },
  {
    "text": "so we're creating a namespace so that creates an entry in our data store",
    "start": "1025600",
    "end": "1030798"
  },
  {
    "text": "and then the next thing we saw in the demo was creating a deployment with replica number two right",
    "start": "1030799",
    "end": "1037520"
  },
  {
    "start": "1031000",
    "end": "1031000"
  },
  {
    "text": "so we have another entry in our data store that's it right that's all we're doing with the api server",
    "start": "1037520",
    "end": "1042720"
  },
  {
    "text": "and then the controller manager part of our virtual control plane sees that new entry right gets notified it's listening",
    "start": "1042720",
    "end": "1049440"
  },
  {
    "text": "on these objects and sees okay replica number was two i create two parts what does that mean well it just",
    "start": "1049440",
    "end": "1056320"
  },
  {
    "text": "writes two more objects into our data store so we have four objects in our separate virtual cluster state now we",
    "start": "1056320",
    "end": "1063360"
  },
  {
    "text": "have a namespace we have a deployment and we have two parts that you know are owned by this",
    "start": "1063360",
    "end": "1068799"
  },
  {
    "text": "deployment um and you know in the beginning these parts are just you know they're",
    "start": "1068799",
    "end": "1075120"
  },
  {
    "text": "waiting to be scheduled right they're nothing more than just an entry in a data store and now that's part of the",
    "start": "1075120",
    "end": "1080640"
  },
  {
    "text": "scheduler to actually schedule these pods to nodes but in a virtual cluster instead of the",
    "start": "1080640",
    "end": "1086240"
  },
  {
    "text": "scheduler with the syncer and that's actually what makes it really truly virtual what this thinker does is",
    "start": "1086240",
    "end": "1093120"
  },
  {
    "text": "it copies the parts from within that data store that we have inside the virtual cluster to the underlying host",
    "start": "1093120",
    "end": "1100880"
  },
  {
    "text": "name space so that the host clusters scheduler can now schedule these parts right",
    "start": "1100880",
    "end": "1107120"
  },
  {
    "text": "that means all the restrictions we have in terms of network policies what we have in terms of",
    "start": "1107120",
    "end": "1112799"
  },
  {
    "text": "you know our bank anything we have in terms of service accounts being mounted",
    "start": "1112799",
    "end": "1117919"
  },
  {
    "text": "into these into these you know parts and all these things can be restricted by the underlying cluster",
    "start": "1117919",
    "end": "1125039"
  },
  {
    "text": "you can have regular mission control right everything is still enforced but only at the pot level the deployment",
    "start": "1125039",
    "end": "1130960"
  },
  {
    "text": "doesn't exist inside the underlying cluster only the parts and because we can obviously create",
    "start": "1130960",
    "end": "1137520"
  },
  {
    "text": "multiple namespaces in our virtual cluster uh you know what about naming conflicts right um we were just talking",
    "start": "1137520",
    "end": "1144400"
  },
  {
    "start": "1138000",
    "end": "1138000"
  },
  {
    "text": "about that earlier namespace you know being the scope for names how do we solve that well what the synchro does uh",
    "start": "1144400",
    "end": "1150640"
  },
  {
    "text": "when it sinks from multiple name spaces down to a single namespace in the in the host cluster",
    "start": "1150640",
    "end": "1156320"
  },
  {
    "text": "it actually renames these parts and it adds a suffix with the virtual",
    "start": "1156320",
    "end": "1161840"
  },
  {
    "text": "namespace in this case ns1 for both of these parts and even with the name of the virtual cluster",
    "start": "1161840",
    "end": "1167600"
  },
  {
    "text": "because we could have just like three stateful sets with a virtual cluster inside the same host namespace right",
    "start": "1167600",
    "end": "1173919"
  },
  {
    "text": "so we need those two suffixes and it's really important to understand",
    "start": "1173919",
    "end": "1179520"
  },
  {
    "start": "1177000",
    "end": "1177000"
  },
  {
    "text": "that synchro only sings a minority of things right very very few things mainly",
    "start": "1179520",
    "end": "1184880"
  },
  {
    "text": "pods so synchro sings only low level resources that includes pods plus everything that",
    "start": "1184880",
    "end": "1192080"
  },
  {
    "text": "parts need to start right so we typically take a look at that part in the syncing process and we see hey it",
    "start": "1192080",
    "end": "1197679"
  },
  {
    "text": "has a config map that is mounted so we'll sync that config map as well but the other 5 000 config maps don't need",
    "start": "1197679",
    "end": "1203440"
  },
  {
    "text": "to be mounted um same for secrets of course and same for persistent volumes",
    "start": "1203440",
    "end": "1209230"
  },
  {
    "text": "[Music] we also think services to make service-based communication possible",
    "start": "1209230",
    "end": "1216720"
  },
  {
    "text": "and there's two optional resources which are also really basic",
    "start": "1216720",
    "end": "1221760"
  },
  {
    "text": "resources in kubernetes and that's ingresses we added that because there's a lot of need for like",
    "start": "1221760",
    "end": "1227120"
  },
  {
    "text": "shared ingress controller across different virtual clusters right so this is actually by default on in vcluster",
    "start": "1227120",
    "end": "1233280"
  },
  {
    "text": "but you can disable it with a flag pretty easily and then the question is yeah what are",
    "start": "1233280",
    "end": "1238799"
  },
  {
    "text": "the nodes inside the network cluster right what if i run keep cd i get nodes that's actually up to you as",
    "start": "1238799",
    "end": "1244159"
  },
  {
    "text": "configurable because synchro syncs in both directions it doesn't just parts",
    "start": "1244159",
    "end": "1249679"
  },
  {
    "text": "down it also sinks the status up that's why we saw earlier you know one of these",
    "start": "1249679",
    "end": "1255520"
  },
  {
    "text": "parts was container creating and the other part was already running right and we saw that inside the virtual",
    "start": "1255520",
    "end": "1261520"
  },
  {
    "text": "cluster although that state actually lives in the underlying cluster because that's where these parts are being",
    "start": "1261520",
    "end": "1267039"
  },
  {
    "text": "scheduled and it's really important to understand that those are only you know very very",
    "start": "1267039",
    "end": "1272480"
  },
  {
    "text": "very few resources in our communities cluster all higher level objects are not being synchronized only very basic",
    "start": "1272480",
    "end": "1279280"
  },
  {
    "text": "resources are being synchronized and high-level resources include everything that is replica controlled right",
    "start": "1279280",
    "end": "1285440"
  },
  {
    "text": "um deployments stateful sets daemon sets all these you know secrets and conflict",
    "start": "1285440",
    "end": "1290640"
  },
  {
    "text": "maps which have nothing to do with pause where we just store some kind of state um",
    "start": "1290640",
    "end": "1295840"
  },
  {
    "text": "service accounts jobs you know a lot of these things are not synced and most importantly",
    "start": "1295840",
    "end": "1302000"
  },
  {
    "text": "crds and the custom resources that we create from them and that actually creates a really",
    "start": "1302000",
    "end": "1307919"
  },
  {
    "text": "interesting possibility if you want to install a helm chart today you know any kind of machine learning framework it",
    "start": "1307919",
    "end": "1314240"
  },
  {
    "text": "there's a very high probability that you will need to add crds to your cluster",
    "start": "1314240",
    "end": "1319919"
  },
  {
    "text": "but if you're not cluster admin you can't do that because crds are cost or wide resources but in your v cluster you",
    "start": "1319919",
    "end": "1327039"
  },
  {
    "text": "can do that and the great thing is we're shifting left right we're shifting uh",
    "start": "1327039",
    "end": "1332559"
  },
  {
    "text": "this permission and also the responsibility for these crds to the application specific teams that actually",
    "start": "1332559",
    "end": "1339200"
  },
  {
    "text": "care to work with these customer resources and that's really great for it teams",
    "start": "1339200",
    "end": "1344799"
  },
  {
    "text": "because the underlying clusters can be pretty dumb you know they need to they don't need",
    "start": "1344799",
    "end": "1350080"
  },
  {
    "text": "any crds right they may need to add an ingress controller there and some basic monitoring for these parts that we're",
    "start": "1350080",
    "end": "1355120"
  },
  {
    "text": "scheduling and obviously some network policies right but we don't need anything specific to applications we are",
    "start": "1355120",
    "end": "1361520"
  },
  {
    "text": "not going to run into any conflicts with crds either right two teams can have two versions of crds and run side by side in",
    "start": "1361520",
    "end": "1368880"
  },
  {
    "text": "the same host cluster but within two virtual clusters very very interesting so the vast majority of resources",
    "start": "1368880",
    "end": "1376480"
  },
  {
    "text": "uh exists only in the scope of our virtual cluster so what about part networking and dns",
    "start": "1376480",
    "end": "1383200"
  },
  {
    "start": "1380000",
    "end": "1380000"
  },
  {
    "text": "well part-to-part communication is given right parts are actually running in the underlying cluster so they can",
    "start": "1383200",
    "end": "1388400"
  },
  {
    "text": "communicate vip just as they can in a normal cluster pod to service communication as we heard",
    "start": "1388400",
    "end": "1394000"
  },
  {
    "text": "earlier we by default sync services and we do you know wire them up to the actual right parts right so that works",
    "start": "1394000",
    "end": "1401440"
  },
  {
    "text": "out of the box as well because the sinker takes care of this and what about",
    "start": "1401440",
    "end": "1407120"
  },
  {
    "text": "cluster or v-cluster internal dns well as you may have seen earlier when we",
    "start": "1407120",
    "end": "1412320"
  },
  {
    "text": "listed the cube system the parts in the cube system name space within our v cluster there was one part already",
    "start": "1412320",
    "end": "1417840"
  },
  {
    "text": "running and um that was core dns so v-cluster by default has in its cube",
    "start": "1417840",
    "end": "1424240"
  },
  {
    "text": "system name space accordions deployment and that one creates a part that part is being synced",
    "start": "1424240",
    "end": "1429600"
  },
  {
    "text": "down to the host cluster right that means we have a part and also a service for dns down there in our host",
    "start": "1429600",
    "end": "1435520"
  },
  {
    "text": "name space which now is managing our dns that means when the syncer synchronizes",
    "start": "1435520",
    "end": "1441279"
  },
  {
    "text": "down to the host cluster the only thing we need to do is modify this the part spec and point it to that dns service",
    "start": "1441279",
    "end": "1448320"
  },
  {
    "text": "instead of the regular you know cluster wide dns service and then you know dns",
    "start": "1448320",
    "end": "1453520"
  },
  {
    "text": "based communication uh and resolution name resolution works as well",
    "start": "1453520",
    "end": "1459039"
  },
  {
    "text": "and then as i mentioned earlier you know ingress's sync is pretty interesting as well to even you know get more",
    "start": "1459039",
    "end": "1464159"
  },
  {
    "text": "capabilities out of this so now let's get to a very interesting question what happens when i run cube",
    "start": "1464159",
    "end": "1470240"
  },
  {
    "text": "ctrl get nodes inside a virtual cluster well it's like always an it right it depends",
    "start": "1470240",
    "end": "1477840"
  },
  {
    "text": "there are multiple options here the first option that's the default option is fake nodes and they're dynamic",
    "start": "1477840",
    "end": "1484080"
  },
  {
    "text": "that means what we do is we let the schedule of the underlying cluster schedule our parts and then we",
    "start": "1484080",
    "end": "1490400"
  },
  {
    "text": "see which nodes do they end up on and those nodes we add in our data store",
    "start": "1490400",
    "end": "1495760"
  },
  {
    "text": "because a node is just an entry in our data store right inside the virtual cluster and we tell this virtual cluster",
    "start": "1495760",
    "end": "1501440"
  },
  {
    "text": "this node exists and then we fake it right in a way that we rewrite the name we rewrite you know",
    "start": "1501440",
    "end": "1508880"
  },
  {
    "text": "certain things in this node specification to make it obscure for the user what this node is about but the node for the",
    "start": "1508880",
    "end": "1516080"
  },
  {
    "text": "user virtually exists there's also the option to not do that you know obfuscation and just have the",
    "start": "1516080",
    "end": "1522799"
  },
  {
    "text": "plane node being synchronized into the cluster we can also enable a flag that will",
    "start": "1522799",
    "end": "1528240"
  },
  {
    "text": "synchronize all nodes from the underlying cluster if we want to see our tenants have our tenants see all",
    "start": "1528240",
    "end": "1534320"
  },
  {
    "text": "nodes in the host cluster or we can add a label selector for our nodes and essentially enforce our parts doing the",
    "start": "1534320",
    "end": "1541919"
  },
  {
    "text": "sync process right to automatically you know get that node selector so that",
    "start": "1541919",
    "end": "1547679"
  },
  {
    "text": "you know a certain v cluster can only use certain nodes and only can see certain nodes inside the cluster um",
    "start": "1547679",
    "end": "1554559"
  },
  {
    "text": "and you know all of this is configurable we are pretty you know straightforward flags that you can pass to the you know",
    "start": "1554559",
    "end": "1559679"
  },
  {
    "text": "synchro container um what else is possible virtual clusters it's very very exciting uh because",
    "start": "1559679",
    "end": "1566240"
  },
  {
    "text": "there's a lot of you know things that you can do with it uh one thing you can do is also run cube ctl inside these",
    "start": "1566240",
    "end": "1572720"
  },
  {
    "text": "parts which is very exciting because when you're thinking about it this is a part that actually runs in the host",
    "start": "1572720",
    "end": "1578080"
  },
  {
    "text": "cluster right so if i run cube ct out there but i started this part from within the",
    "start": "1578080",
    "end": "1583440"
  },
  {
    "text": "virtual cluster so it'd be odd if i run cubesat and i talked to you know with a service account being mounted i talked",
    "start": "1583440",
    "end": "1588559"
  },
  {
    "text": "to the host cluster um so that's why we actually changed this environment variable in kubernetes",
    "start": "1588559",
    "end": "1594559"
  },
  {
    "text": "so that when you use the in-cluster config for cube ctl it talks to the virtual clusters api server instead of",
    "start": "1594559",
    "end": "1601600"
  },
  {
    "text": "to the real uh you know underlying host api server um so we get the true you",
    "start": "1601600",
    "end": "1606640"
  },
  {
    "text": "know cluster experience even when running cubes detail inside a pod we can expose virtual cluster api",
    "start": "1606640",
    "end": "1614320"
  },
  {
    "text": "servers it's just a service in kubernetes right so we can add a load balancer to it type load balancer or we",
    "start": "1614320",
    "end": "1619600"
  },
  {
    "text": "can put an ingress controller in front of it and make it available to outside of the cluster not just via",
    "start": "1619600",
    "end": "1626159"
  },
  {
    "text": "port forwarding there's a couple of things upcoming which are really exciting as well",
    "start": "1626159",
    "end": "1631600"
  },
  {
    "text": "making network policies work you know if you're creating a network policy inside of your virtual namespaces",
    "start": "1631600",
    "end": "1639600"
  },
  {
    "text": "and that has a namespace selector that's a little tricky right because you may not have the same namespace in the",
    "start": "1639600",
    "end": "1646080"
  },
  {
    "text": "underlying cluster but we can also do that with you know changing things during the sync process",
    "start": "1646080",
    "end": "1652080"
  },
  {
    "text": "and we're actually working on that right now you know a couple of weeks away from making this work",
    "start": "1652080",
    "end": "1657440"
  },
  {
    "text": "pot disruption budgets is another hot topic that we're working on and non-root bee clusters right now k3s runs as rude",
    "start": "1657440",
    "end": "1667039"
  },
  {
    "text": "and they have the option uh i think they recently released the option to run k3s",
    "start": "1667039",
    "end": "1672080"
  },
  {
    "text": "uh as non-root um and that will be possible with v-cluster as well it's one of the you know most important steps in",
    "start": "1672080",
    "end": "1678720"
  },
  {
    "text": "making v-cluster very very resilient and isolated um and a nested virtual cluster is",
    "start": "1678720",
    "end": "1684880"
  },
  {
    "text": "something very interesting right you could now talk to this virtual api server and run vcluster create again",
    "start": "1684880",
    "end": "1691760"
  },
  {
    "text": "right create a stateful set they create a service and connect to this virtual right um",
    "start": "1691760",
    "end": "1696960"
  },
  {
    "text": "you can see it you can go pretty crazy about this and uh rich boris which works with me at loft labs uh he's also",
    "start": "1696960",
    "end": "1703440"
  },
  {
    "text": "attending this talk if you want to chat with him later uh he made a pretty great video about you know it's called v",
    "start": "1703440",
    "end": "1708880"
  },
  {
    "text": "cluster inception nesting virtual clusters uh you should check definitely check it out",
    "start": "1708880",
    "end": "1714000"
  },
  {
    "start": "1713000",
    "end": "1713000"
  },
  {
    "text": "there are a lot of use cases for virtual clusters uh you can create them for ephemerals the icd environments any kind",
    "start": "1714000",
    "end": "1720159"
  },
  {
    "text": "of you know integration end-to-end acceptance tests you can spin up preview environments per pull requests and get",
    "start": "1720159",
    "end": "1726559"
  },
  {
    "text": "an entire kubernetes cluster you can even have different versions of kubernetes being tested in ucicd now",
    "start": "1726559",
    "end": "1733679"
  },
  {
    "text": "on the same kubernetes cluster right because that api server you can enable alpha and betaflex is independent of",
    "start": "1733679",
    "end": "1740159"
  },
  {
    "text": "your underlying cluster the only thing your underlying cluster needs to do is you know creating pods creating services",
    "start": "1740159",
    "end": "1746559"
  },
  {
    "text": "right very basic things right i guess if the pod spec changes with a future version right there maybe some income",
    "start": "1746559",
    "end": "1753200"
  },
  {
    "text": "compatibilities but you know that the pot spec is having a breaking change in the future",
    "start": "1753200",
    "end": "1758320"
  },
  {
    "text": "you know that probably we vape more problematic on other edges than virtual clusters",
    "start": "1758320",
    "end": "1764159"
  },
  {
    "text": "um you can spin up these remote development environments let your engineers directly work with kubernetes so instead of",
    "start": "1764159",
    "end": "1770320"
  },
  {
    "text": "having them maintain their pet mini cube clusters or docker desktop have them just spin up virtual clusters right uh",
    "start": "1770320",
    "end": "1776799"
  },
  {
    "text": "their throwaway they can create one they create another one for different project right",
    "start": "1776799",
    "end": "1781840"
  },
  {
    "text": "that's actually what we do with our commercial project so with loft engineers are exactly doing",
    "start": "1781840",
    "end": "1788000"
  },
  {
    "text": "that right they're spinning up these virtual clusters and name spaces before we open sourced vcluster virtual cluster",
    "start": "1788000",
    "end": "1793679"
  },
  {
    "text": "was for about six months already part of our commercial offering so we already have companies working uh",
    "start": "1793679",
    "end": "1800320"
  },
  {
    "text": "with this technology and essentially providing these deaf environments to the engineers and dropping the local host",
    "start": "1800320",
    "end": "1805520"
  },
  {
    "text": "environment entirely and what we do as well is we put those environments to sleep uh when engineers are not working",
    "start": "1805520",
    "end": "1812000"
  },
  {
    "text": "with them right so automatically pausing these virtual clusters uh purging all the workloads and automatically spinning",
    "start": "1812000",
    "end": "1818159"
  },
  {
    "text": "them up again when new cube ctl requests come in so that you know when your engineers leave the office at 8 pm",
    "start": "1818159",
    "end": "1824960"
  },
  {
    "text": "uh everything turns off 30 minutes later because they're not working again or they're shifting between their virtual clusters but they're only really working",
    "start": "1824960",
    "end": "1831039"
  },
  {
    "text": "with one at a time and we really want to make you know virtual clusters cattle in a way and",
    "start": "1831039",
    "end": "1837120"
  },
  {
    "text": "make them disposable right and you want the engineer not to have to treat their you know pet localhost cluster as they",
    "start": "1837120",
    "end": "1843760"
  },
  {
    "text": "do it today um we see a lot of experimentation you know where you really need a lot of compute workload m-i-l-i um",
    "start": "1843760",
    "end": "1851760"
  },
  {
    "text": "mlai workloads um we see cluster simulations as well it's a very interesting concept adding",
    "start": "1851760",
    "end": "1857760"
  },
  {
    "text": "fake notes to the cluster and things like that right uh there are you know so many things that you can do like have",
    "start": "1857760",
    "end": "1863200"
  },
  {
    "text": "like 10 virtual nodes mapped to the same underlying physical node right all of",
    "start": "1863200",
    "end": "1868880"
  },
  {
    "text": "these things are possible even virtual clusters spanning across different kubernetes clusters right",
    "start": "1868880",
    "end": "1874559"
  },
  {
    "text": "there's so many creative ideas of what you can do with this and you can really make multi-tenancy more resilient um",
    "start": "1874559",
    "end": "1881120"
  },
  {
    "text": "wink ring you know where that's kind of like the name of the conference um and you can do things like sales demos",
    "start": "1881120",
    "end": "1887679"
  },
  {
    "text": "and higher level things as well with these virtual clusters so how to get started i hope you all you",
    "start": "1887679",
    "end": "1893039"
  },
  {
    "text": "know got excited about virtual clusters and we try to make it as easy as possible get started with them um you",
    "start": "1893039",
    "end": "1898559"
  },
  {
    "text": "can essentially just download the you know vcluster cli and run vcluster create and we cluster connect in any",
    "start": "1898559",
    "end": "1904399"
  },
  {
    "text": "pretty much any kubernetes cluster you can head to the documentation for more detailed getting started guide",
    "start": "1904399",
    "end": "1912080"
  },
  {
    "text": "source code is available on github if you want to dive a little deeper if you want to open issues",
    "start": "1912080",
    "end": "1917279"
  },
  {
    "text": "we also have a vcluster website with some information you can follow loftlabs on twitter uh we",
    "start": "1917279",
    "end": "1923840"
  },
  {
    "text": "regularly you know post blog posts about virtualcluster and you know shoot them out on twitter um",
    "start": "1923840",
    "end": "1929919"
  },
  {
    "start": "1929000",
    "end": "1929000"
  },
  {
    "text": "and definitely if you have any questions reach out right that's why we're all going to a conference we want this",
    "start": "1929919",
    "end": "1935360"
  },
  {
    "text": "interaction and i'm so glad that we have you know this this personal hybrid format again right where we can really",
    "start": "1935360",
    "end": "1940960"
  },
  {
    "text": "connect to each other um so if you have any questions either ask now uh or join",
    "start": "1940960",
    "end": "1946960"
  },
  {
    "text": "us on slack um reach out via twitter come by the booth i'm gonna be at the",
    "start": "1946960",
    "end": "1952159"
  },
  {
    "text": "booth right after this talk uh we're when you're entering the exhibit hall to the right uh close to the project",
    "start": "1952159",
    "end": "1958720"
  },
  {
    "text": "maintainer area both numbers su-49 we have a couple of uh pretty nice swag uh",
    "start": "1958720",
    "end": "1964960"
  },
  {
    "text": "and i specially want to point out we have cubecompose cards um they look like this",
    "start": "1964960",
    "end": "1970960"
  },
  {
    "text": "and you know they're really meant to be sent out to your colleagues who cannot be here in person",
    "start": "1970960",
    "end": "1976720"
  },
  {
    "text": "so feel free to grab one and just you know send it out to whoever cannot be here in person and uh since we're a startup and we're",
    "start": "1976720",
    "end": "1983279"
  },
  {
    "text": "working on really exciting technology and a lot of different you know open source projects as you've seen on the first slide um we're also hiring so if",
    "start": "1983279",
    "end": "1990480"
  },
  {
    "text": "you want to work with my really brilliant uh cto uh definitely check out our careers page or you know approach",
    "start": "1990480",
    "end": "1997760"
  },
  {
    "text": "any member of our team reach out to us and you know see if we can uh work together and i",
    "start": "1997760",
    "end": "2004960"
  },
  {
    "text": "think we have about like two minutes left for questions so if you have any questions right now um just raise your",
    "start": "2004960",
    "end": "2011919"
  },
  {
    "text": "hand happy to answer them thank you",
    "start": "2011919",
    "end": "2018039"
  }
]