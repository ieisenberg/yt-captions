[
  {
    "text": "so you know last couple of months the couple of someone like there was this",
    "start": "920",
    "end": "7080"
  },
  {
    "text": "news about docker hub which is a most popular repository of container images getting hacked and a plenty of data was",
    "start": "7080",
    "end": "16049"
  },
  {
    "text": "compromised and that if this kind of situation arises in another history",
    "start": "16049",
    "end": "22740"
  },
  {
    "text": "which is popular regularly what could happen is an attacker can change the",
    "start": "22740",
    "end": "29810"
  },
  {
    "text": "images that you trust well down where that you download and you may end up",
    "start": "29810",
    "end": "35309"
  },
  {
    "text": "downloading the images that you're that are actually compromised so and this",
    "start": "35309",
    "end": "40770"
  },
  {
    "text": "this does not mean that it only happens in the case of docker hub you could have one registry and this could happen in",
    "start": "40770",
    "end": "48680"
  },
  {
    "text": "anyone's case so but you you might argue",
    "start": "48680",
    "end": "53760"
  },
  {
    "text": "that there are ways to prevent that if anyone gets let's say an access to your",
    "start": "53760",
    "end": "59520"
  },
  {
    "text": "registry you could have a docker node tree or a port it is set up in a way that even if your server gets",
    "start": "59520",
    "end": "67140"
  },
  {
    "text": "compromised your sign images will not match and you still can't protect yourself in such scenario however you if",
    "start": "67140",
    "end": "76770"
  },
  {
    "text": "you registry holds images which have a sensitive content in it it does not",
    "start": "76770",
    "end": "83430"
  },
  {
    "text": "prevent you prevent it from the core getting compromised in that sense let's",
    "start": "83430",
    "end": "93180"
  },
  {
    "text": "see how we can envision our envision a scenario where we can mitigate such",
    "start": "93180",
    "end": "99570"
  },
  {
    "text": "attacks so all what we are looking for here is we have we we need to be able to",
    "start": "99570",
    "end": "105119"
  },
  {
    "text": "create container images where we should be able to during the build process we",
    "start": "105119",
    "end": "110189"
  },
  {
    "text": "should be able to encrypt them and then upload it to the registry and then decrypt them while you run them using sa",
    "start": "110189",
    "end": "118020"
  },
  {
    "text": "kubernetes that way the advantage of that process is you do not depend on",
    "start": "118020",
    "end": "125479"
  },
  {
    "text": "registry being highly privileged so as I",
    "start": "125479",
    "end": "131400"
  },
  {
    "text": "was talking so if you start if you about image encrypting your docker images you do not need to have extremely",
    "start": "131400",
    "end": "139590"
  },
  {
    "text": "high privilege registry that means you do not have to trust your administrator either malicious or are the intentional",
    "start": "139590",
    "end": "147260"
  },
  {
    "text": "compromises of the registry as well as it brings in image confidentially so you",
    "start": "147260",
    "end": "152549"
  },
  {
    "text": "you can have extremely confidential algorithms like say you might have a",
    "start": "152549",
    "end": "158519"
  },
  {
    "text": "tree intention for model for example which you do not want to be exposed to the outside world you can argue that you",
    "start": "158519",
    "end": "166560"
  },
  {
    "text": "know you can keep the registry password protected but even in that case the administrator all the or the where the",
    "start": "166560",
    "end": "173129"
  },
  {
    "text": "registries hosted storing the data has access to the contents of the store so",
    "start": "173129",
    "end": "179280"
  },
  {
    "text": "and and once you bring in encryption it it allows you to do a lot of interesting",
    "start": "179280",
    "end": "185760"
  },
  {
    "text": "stuff like for example you can sign the continuing images with target systems",
    "start": "185760",
    "end": "191599"
  },
  {
    "text": "public key in such a way that you can enforce that the content images that I",
    "start": "191599",
    "end": "198030"
  },
  {
    "text": "am building will run only in specific Geographics geographies for example you",
    "start": "198030",
    "end": "203639"
  },
  {
    "text": "can say image a particular image will only run inside the European unity European Union's Java borders so let's",
    "start": "203639",
    "end": "212910"
  },
  {
    "text": "see how we can envision this now the I would like to tell you that the work has",
    "start": "212910",
    "end": "218819"
  },
  {
    "text": "been happening all the way from OCI spec and kubernetes and anything in between",
    "start": "218819",
    "end": "223889"
  },
  {
    "text": "and we are we are talking to all these communities and the final output that",
    "start": "223889",
    "end": "230549"
  },
  {
    "text": "you may say when everything falls in line may or may not actually order lap",
    "start": "230549",
    "end": "235620"
  },
  {
    "text": "with what I am saying right now but it will be very similar to this so let's see how we will be able to encrypt the",
    "start": "235620",
    "end": "243230"
  },
  {
    "text": "container image so you have a darker build command let's imagine and you",
    "start": "243230",
    "end": "248280"
  },
  {
    "text": "should be able to pass a public key so I let's say I want to be able to create a container image in such a way that only",
    "start": "248280",
    "end": "254370"
  },
  {
    "text": "Brandon should be able to run it so I take his public key during that Aqil build process I should be able to take",
    "start": "254370",
    "end": "261180"
  },
  {
    "text": "his public key encrypted and then this this encrypted key I will push it to the registry",
    "start": "261180",
    "end": "266830"
  },
  {
    "text": "once inside the registry it would gets interesting how you gonna use it or",
    "start": "266830",
    "end": "272949"
  },
  {
    "text": "consume it within the context of kubernetes so we all know kubernetes has this concept of secrets right cubrir is",
    "start": "272949",
    "end": "281020"
  },
  {
    "text": "secret is it's a way to store sensitive data within the within the confines of Cooperman kubernetes so and there's a",
    "start": "281020",
    "end": "289150"
  },
  {
    "text": "very particular type of secret called image pool secret this secret is used for fetching the images that are behind",
    "start": "289150",
    "end": "298090"
  },
  {
    "text": "the username password in the registry so we thought that we have a very similar",
    "start": "298090",
    "end": "303280"
  },
  {
    "text": "use case here where instead of pulling the image we want to decrypt the image on the host right so we started modeling",
    "start": "303280",
    "end": "310419"
  },
  {
    "text": "are the secret that holds the the private keys required to decrypt the",
    "start": "310419",
    "end": "315639"
  },
  {
    "text": "images and we are calling them image decrypt secret for this work we already",
    "start": "315639",
    "end": "321099"
  },
  {
    "text": "have submitted KP in his under discussion as I mentioned we already talking to OCS spec there is a PR in",
    "start": "321099",
    "end": "327310"
  },
  {
    "text": "continuity to support it because you need to have this support all the way throughout the stack so once you have",
    "start": "327310",
    "end": "333430"
  },
  {
    "text": "this secret what the flow will look like I know if there's a request by the user",
    "start": "333430",
    "end": "338620"
  },
  {
    "text": "to create a encrypted part the image secret image decrypt secret will",
    "start": "338620",
    "end": "344380"
  },
  {
    "text": "basically provide the keys required and the part will create it with the keys",
    "start": "344380",
    "end": "349419"
  },
  {
    "text": "that are required and those keys will be pushed down to the kubernetes worker node and then the worker node the",
    "start": "349419",
    "end": "356380"
  },
  {
    "text": "cubelet will receive those keys that will be passed to CRI from CRI to continuity and the continuity bill while",
    "start": "356380",
    "end": "362229"
  },
  {
    "text": "pulling the image will also decrypt the image and then it follows the standard continuity workflow let me quickly show",
    "start": "362229",
    "end": "370930"
  },
  {
    "text": "a demo",
    "start": "370930",
    "end": "373560"
  },
  {
    "text": "hey yeah this is stage so let me just",
    "start": "383680",
    "end": "389259"
  },
  {
    "text": "say clear and then let me go to container D so although I talked about",
    "start": "389259",
    "end": "394930"
  },
  {
    "text": "docker will to begin with we started playing with container D directly because that was easier to deal with and",
    "start": "394930",
    "end": "401620"
  },
  {
    "text": "Lockard build end of the day we'll end up working something similar so let me",
    "start": "401620",
    "end": "407440"
  },
  {
    "text": "see as you can see you only have one image right now nginx and then on the on",
    "start": "407440",
    "end": "413680"
  },
  {
    "text": "this system I have a sample GP GK keeper and I'm gonna use that to encrypt the",
    "start": "413680",
    "end": "420010"
  },
  {
    "text": "image first so what I'm going to do is I'm going to say take this image encrypted take this engine X image and",
    "start": "420010",
    "end": "426250"
  },
  {
    "text": "encrypt it with the the key that I'm asking to so it's gonna encrypt that image then twist it and you have this",
    "start": "426250",
    "end": "442270"
  },
  {
    "text": "encrypted image how so just to understand things better we added a",
    "start": "442270",
    "end": "447460"
  },
  {
    "text": "small command in continuity which helps you to see the images so LS zoom out a",
    "start": "447460",
    "end": "454630"
  },
  {
    "text": "little bit yeah so you see that is the image here which",
    "start": "454630",
    "end": "461440"
  },
  {
    "text": "says encryption and recipients none so this is what you'll see for a regular the container image right now that",
    "start": "461440",
    "end": "467830"
  },
  {
    "text": "everyone is used to but if you try to use the layer info against the encrypted",
    "start": "467830",
    "end": "474220"
  },
  {
    "text": "image you have a GPG and the target system target recipients address so it",
    "start": "474220",
    "end": "481870"
  },
  {
    "text": "basically means that this image can only be decrypted with this target key that",
    "start": "481870",
    "end": "486970"
  },
  {
    "text": "is showing let me just clear this let me just push the team we lost it you have",
    "start": "486970",
    "end": "494680"
  },
  {
    "text": "it let me just push the image to the local register",
    "start": "494680",
    "end": "499470"
  },
  {
    "text": "and now I'm gonna change it and this is the standard cumin in secret it's a it's",
    "start": "504100",
    "end": "509930"
  },
  {
    "text": "it's a default open that we have here and then now what happens the the image",
    "start": "509930",
    "end": "516800"
  },
  {
    "text": "that we just encrypted if we try to deploy it let's say you you are running this register you upload it to the public registry I encrypted image and",
    "start": "516800",
    "end": "523459"
  },
  {
    "text": "someone tries to download and run it so let's see how it reacts to that so I do not have the private key at this point",
    "start": "523459",
    "end": "528589"
  },
  {
    "text": "and I'm trying to run an encrypted image just for a second yeah so I got an error",
    "start": "528589",
    "end": "538940"
  },
  {
    "text": "let's see what the error is as you can see you are not authorized to run this",
    "start": "538940",
    "end": "547399"
  },
  {
    "text": "image and the missing private key is needed for decryption so think of it",
    "start": "547399",
    "end": "552680"
  },
  {
    "text": "this way that if you had an encrypted image you know in a public repository by",
    "start": "552680",
    "end": "559040"
  },
  {
    "text": "password or not if someone tries to run that image without having the private",
    "start": "559040",
    "end": "564050"
  },
  {
    "text": "keys or without having the target system that is encrypted for you will you are",
    "start": "564050",
    "end": "570020"
  },
  {
    "text": "supposed to get yeah so yeah so without",
    "start": "570020",
    "end": "577760"
  },
  {
    "text": "so we we are you will get this error so let's see how we can run an encrypted",
    "start": "577760",
    "end": "583940"
  },
  {
    "text": "image I will just delete this part okay",
    "start": "583940",
    "end": "590500"
  },
  {
    "text": "remember that key that keeper that I had I had already extracted the private key",
    "start": "590500",
    "end": "597380"
  },
  {
    "text": "required from this GEB keeper and I have",
    "start": "597380",
    "end": "602709"
  },
  {
    "text": "added converted into base64 and I'll",
    "start": "602709",
    "end": "608450"
  },
  {
    "text": "create a secret so this is a secret that we are introducing the kubernetes so I'm saying create a new secret type of image",
    "start": "608450",
    "end": "615170"
  },
  {
    "text": "decrypt with this private key so when you get a secret there you go now you",
    "start": "615170",
    "end": "620930"
  },
  {
    "text": "have a key secret let's let's go deeper than that yeah so it holds the depletion",
    "start": "620930",
    "end": "628040"
  },
  {
    "text": "decryption key that the base64 key that we had",
    "start": "628040",
    "end": "634290"
  },
  {
    "text": "and you get parts let's see so we will",
    "start": "634290",
    "end": "640290"
  },
  {
    "text": "modify our body ml slightly so instead of having this when you want to run this",
    "start": "640290",
    "end": "646109"
  },
  {
    "text": "engine engine s encrypted image will have to provide the pre key that that",
    "start": "646109",
    "end": "651329"
  },
  {
    "text": "kubernetes should pass down to the worker node so I will say image D clip secrets name key secret the key secret",
    "start": "651329",
    "end": "657239"
  },
  {
    "text": "is the one which we just created let's try to create this part get part and it",
    "start": "657239",
    "end": "669720"
  },
  {
    "text": "works so the earlier when I try to run this image we are without without the",
    "start": "669720",
    "end": "675660"
  },
  {
    "text": "secret you remember you've got an error saying you do not have you're not authorized to run this image but now I",
    "start": "675660",
    "end": "680879"
  },
  {
    "text": "am able to because I associated this part with the right secret and that secret was passed to connect you blade",
    "start": "680879",
    "end": "686819"
  },
  {
    "text": "and cubelet pass to CRI and see how I eventually gave it to continuity and that continuity was able to extract the",
    "start": "686819",
    "end": "693179"
  },
  {
    "text": "not only extra entire image but able to decrypt as well let's delete this",
    "start": "693179",
    "end": "700489"
  },
  {
    "text": "however those who know those of us know how to use the secrets little in an",
    "start": "700489",
    "end": "707160"
  },
  {
    "text": "elegant way we know that we can use service accounts in kubernetes to pass secrets so we plan to support service",
    "start": "707160",
    "end": "714899"
  },
  {
    "text": "accounts for image decrypt secrets as well so let's see how we can achieve that so we will first patch a service",
    "start": "714899",
    "end": "720449"
  },
  {
    "text": "account with the secret that we already created and will say describe the",
    "start": "720449",
    "end": "727259"
  },
  {
    "text": "service account and if you see this is a new new thing that we're trying add here so now this service account has the",
    "start": "727259",
    "end": "734309"
  },
  {
    "text": "image the decrypt secret so that means every part that gets created with this service account will also have an access",
    "start": "734309",
    "end": "739919"
  },
  {
    "text": "to the secret ok now this time if you",
    "start": "739919",
    "end": "746279"
  },
  {
    "text": "see I am trying to start the same part or deploy the same part but without any",
    "start": "746279",
    "end": "752429"
  },
  {
    "text": "image decrypt secrets and this time I do not have to have because this part is going to access the default service",
    "start": "752429",
    "end": "758039"
  },
  {
    "text": "account so let's see how it works create",
    "start": "758039",
    "end": "765350"
  },
  {
    "text": "and it's working right so I think that that's that's completes my demo okay and",
    "start": "765540",
    "end": "772300"
  },
  {
    "text": "I jump back to the so if you want to if you want to thank Mandan so if you want",
    "start": "772300",
    "end": "778839"
  },
  {
    "text": "to know more understand more about the work going on please visit these links",
    "start": "778839",
    "end": "785399"
  },
  {
    "text": "we have a like a very good and detailed discussion going on all topics and we",
    "start": "785399",
    "end": "791410"
  },
  {
    "text": "hope to get this mod ready soon and with that I will dive deeper in that and I'll",
    "start": "791410",
    "end": "799510"
  },
  {
    "text": "hand it over to Brandon all right thanks our show",
    "start": "799510",
    "end": "804630"
  },
  {
    "text": "so what nothing yes sir so so what's up a little bit about this",
    "start": "804630",
    "end": "812680"
  },
  {
    "text": "well our design in the encryptor contain images and how it relates to",
    "start": "812680",
    "end": "818709"
  },
  {
    "text": "deduplication because you know the conventional knowledge is whenever you have encryption you're going to suffer",
    "start": "818709",
    "end": "824560"
  },
  {
    "text": "in terms of deduplication because you can every time you encrypt something is going to be different right but in the",
    "start": "824560",
    "end": "830800"
  },
  {
    "text": "process of designing this video so consider that this is one of the reasons why people I containers it's a their deduplication the layering and we're",
    "start": "830800",
    "end": "838750"
  },
  {
    "text": "going to show that in the way that we design it deduplication is not necessary",
    "start": "838750",
    "end": "843899"
  },
  {
    "text": "thrown away once you have encryption so I'm gonna go through a deep dive I'm",
    "start": "843899",
    "end": "850240"
  },
  {
    "text": "gonna start with a little bit of crypto background so just bear with me a little bit so we're gonna go through a short",
    "start": "850240",
    "end": "858579"
  },
  {
    "text": "primary encryption so so we're using two kinds of encryption we're using",
    "start": "858579",
    "end": "863709"
  },
  {
    "text": "symmetric encryption and asymmetric encryption so for those that may not be",
    "start": "863709",
    "end": "868899"
  },
  {
    "text": "as familiar of encryption what symmetric encryption is is you have a piece of plaintext so a message you",
    "start": "868899",
    "end": "876550"
  },
  {
    "text": "wanna encrypt and you have a key which is a symmetric key now in symmetric",
    "start": "876550",
    "end": "882730"
  },
  {
    "text": "encryption the key that you use to perform the encryption and decryption is the same so this is good because this is",
    "start": "882730",
    "end": "891430"
  },
  {
    "text": "Jen as a mission encryption is generally really fast is good for really large lots of data",
    "start": "891430",
    "end": "897610"
  },
  {
    "text": "unfortunately the issue with symmetry encryption is sharing this this key over",
    "start": "897610",
    "end": "903579"
  },
  {
    "text": "here proves difficult right so we also",
    "start": "903579",
    "end": "909040"
  },
  {
    "text": "introduced asymmetric encryption so asymmetric encryption has pretty much the same setup as then still have been",
    "start": "909040",
    "end": "915010"
  },
  {
    "text": "one key you have a key pass so you have the public and private key pair and so",
    "start": "915010",
    "end": "920170"
  },
  {
    "text": "in this case to encrypt the message you will use the public key and encrypt the",
    "start": "920170",
    "end": "925690"
  },
  {
    "text": "message will be decrypted by the private key so the great thing about asymmetric",
    "start": "925690",
    "end": "930760"
  },
  {
    "text": "encryption is the public key as the name suggests can be public so this makes",
    "start": "930760",
    "end": "937470"
  },
  {
    "text": "being able to authorize and create the image to someone ought to be able to share keys it will be much simpler",
    "start": "937470",
    "end": "947410"
  },
  {
    "text": "unfortunately it's so so what we do is very like most type of anchors the",
    "start": "947410",
    "end": "954820"
  },
  {
    "text": "messages everything about encrypted email and things like that well kind of following the same kind of design",
    "start": "954820",
    "end": "960250"
  },
  {
    "text": "concepts so what we're doing is we're taking symmetric encryption and",
    "start": "960250",
    "end": "965560"
  },
  {
    "text": "asymmetric encryption and getting both the best of both worlds so this will may",
    "start": "965560",
    "end": "970720"
  },
  {
    "text": "be familiar we have our favorite people in crypto Bob and Alice and so in this",
    "start": "970720",
    "end": "976540"
  },
  {
    "text": "case Bob wants to send an encrypted image status now we haven't forgotten about the duplication we're getting that",
    "start": "976540",
    "end": "982420"
  },
  {
    "text": "soon all right so Bob does a bill and what it does is",
    "start": "982420",
    "end": "988209"
  },
  {
    "text": "it generates the symmetric key and this symmetric key is used to encrypt the image so now we have an encrypted image",
    "start": "988209",
    "end": "995320"
  },
  {
    "text": "and what we want to do is we want to say that this is image I want to encrypt for",
    "start": "995320",
    "end": "1001050"
  },
  {
    "text": "Alice right so we somehow have to get that yellow symmetric key over to others and the way",
    "start": "1001050",
    "end": "1008850"
  },
  {
    "text": "we do this is to take editors public key and create what we call a brad key so",
    "start": "1008850",
    "end": "1014040"
  },
  {
    "text": "this red key you can think about as a message that contains the symmetric key",
    "start": "1014040",
    "end": "1019260"
  },
  {
    "text": "as well as all the cryptographic metadata required to understand how to decrypt the image so this rap key can",
    "start": "1019260",
    "end": "1028199"
  },
  {
    "text": "only be decrypted by others what Bob does to expose an image is to",
    "start": "1028199",
    "end": "1033870"
  },
  {
    "text": "upload these two things into the registry so on Alice's side to be able",
    "start": "1033870",
    "end": "1042959"
  },
  {
    "text": "to decrypt the image is pretty much the opposite of what we saw earlier right she takes the rap key that only she can",
    "start": "1042959",
    "end": "1049080"
  },
  {
    "text": "open and decrypt it with her own private key which only she has access to and from that she gets the symmetric key as",
    "start": "1049080",
    "end": "1057390"
  },
  {
    "text": "well as the parameters to perform the decryption and she successfully decrypts",
    "start": "1057390",
    "end": "1062550"
  },
  {
    "text": "image so how does this relate to what",
    "start": "1062550",
    "end": "1070110"
  },
  {
    "text": "the images actually look like so if we dive deep into what changes we are",
    "start": "1070110",
    "end": "1076650"
  },
  {
    "text": "looking at in the OCI spec so to start off with what we have here is what the",
    "start": "1076650",
    "end": "1083070"
  },
  {
    "text": "oh she is back looks image right looks like today right so the image back at",
    "start": "1083070",
    "end": "1088080"
  },
  {
    "text": "least in here you see the manifest is really some metadata about the image",
    "start": "1088080",
    "end": "1093570"
  },
  {
    "text": "itself and each layer is basically a blob of a collection of house and in",
    "start": "1093570",
    "end": "1100140"
  },
  {
    "text": "this case the files are just tada right so it's a blob that is represented by the SHA so what we're doing in the",
    "start": "1100140",
    "end": "1108000"
  },
  {
    "text": "design decision that we've made is to perform encryption on the layer level so",
    "start": "1108000",
    "end": "1113520"
  },
  {
    "text": "in this case on top of performing the time the gzip of the collection of files",
    "start": "1113520",
    "end": "1119070"
  },
  {
    "text": "we're doing the additional step in generating the symmetric key and performing the encryption on every layer",
    "start": "1119070",
    "end": "1126530"
  },
  {
    "text": "so the changes here to the spec are pretty straightforward one is we've added a new media type so we've added",
    "start": "1126530",
    "end": "1133560"
  },
  {
    "text": "the Plus ENC media type standing from abbreviated for encryption and what this",
    "start": "1133560",
    "end": "1140070"
  },
  {
    "text": "means it tells the runtime that this image is encrypted and it's gonna try and equipped it and we've also added",
    "start": "1140070",
    "end": "1147140"
  },
  {
    "text": "additional field and the annotations here called the keys and what these keys are the rap keys that we saw earlier",
    "start": "1147140",
    "end": "1155640"
  },
  {
    "text": "so the keys here could be a rap key for edits I repeat for Bob and so on",
    "start": "1155640",
    "end": "1163340"
  },
  {
    "text": "so one interesting thing so now we're back to this application right so the",
    "start": "1165030",
    "end": "1171160"
  },
  {
    "text": "the general thought of this is that by doing encryption on the layers we are",
    "start": "1171160",
    "end": "1176710"
  },
  {
    "text": "able to take advantage of a lot of container like design behaviors right so",
    "start": "1176710",
    "end": "1184960"
  },
  {
    "text": "generally if you have a container your container made a couple layers so you have like the operating system you have",
    "start": "1184960",
    "end": "1190330"
  },
  {
    "text": "the middleware like Python and then usually if you have a sensitive piece of code it's a very small a very small",
    "start": "1190330",
    "end": "1198700"
  },
  {
    "text": "piece of code and maybe like trading algorithm or maybe your machine learning model or something right and so what it",
    "start": "1198700",
    "end": "1206890"
  },
  {
    "text": "means when we do encryption on the layers is that we can benefit from this because the bottom layers which end up",
    "start": "1206890",
    "end": "1213880"
  },
  {
    "text": "being the larger layers actually don't have to be encrypted at all and so this these days can still be",
    "start": "1213880",
    "end": "1221470"
  },
  {
    "text": "shared you know you can encrypt just the topmost layer for a couple of images so",
    "start": "1221470",
    "end": "1229330"
  },
  {
    "text": "that's one the second thing which is why we talked a little bit about how we",
    "start": "1229330",
    "end": "1234460"
  },
  {
    "text": "ended up doing the crypto is that let's say I want to encrypt an image for",
    "start": "1234460",
    "end": "1239560"
  },
  {
    "text": "myself on and creamish for our show and you know 500 people right so",
    "start": "1239560",
    "end": "1246910"
  },
  {
    "text": "traditionally what what you would do is you know I would increase once for her Shorewood and create one for myself and",
    "start": "1246910",
    "end": "1253690"
  },
  {
    "text": "create one for you five other people but if if we look at this bag we can see",
    "start": "1253690",
    "end": "1259120"
  },
  {
    "text": "here that the way we've done it is we split up the actual and crept up blob separate from the wrap key itself so",
    "start": "1259120",
    "end": "1267640"
  },
  {
    "text": "what this means is that if I want to create and clip the image from multiple people I can have the same encrypted",
    "start": "1267640",
    "end": "1273520"
  },
  {
    "text": "blob and just upload five different wrap keys for the five different people so in",
    "start": "1273520",
    "end": "1279490"
  },
  {
    "text": "this way if I want to be able to give authorization to additional parties to decrypt my image I can do so without",
    "start": "1279490",
    "end": "1286000"
  },
  {
    "text": "actually changing the hash of the blob in the registry",
    "start": "1286000",
    "end": "1290610"
  },
  {
    "text": "all right so this is what that is currently ongoing I think it's how I",
    "start": "1294240",
    "end": "1300670"
  },
  {
    "text": "mentioned before this is something that we started off in the OCI spec and it's",
    "start": "1300670",
    "end": "1307330"
  },
  {
    "text": "made its way and through the entire stack between OCI and I'll contain at the cupola and so on",
    "start": "1307330",
    "end": "1314760"
  },
  {
    "text": "so one thing is which by still trying to get this we have a PR open for the OSI I",
    "start": "1314760",
    "end": "1321040"
  },
  {
    "text": "suspect and you know if you have any views or you know if you like this",
    "start": "1321040",
    "end": "1326290"
  },
  {
    "text": "feature do definitely chime in on that we have ongoing work like the KP that we",
    "start": "1326290",
    "end": "1332559"
  },
  {
    "text": "just showed we're also looking to integrate this to basically everything within the sec so the build tools and",
    "start": "1332559",
    "end": "1339669"
  },
  {
    "text": "cRIO support as well and finally one thing that we are looking at also in the",
    "start": "1339669",
    "end": "1346450"
  },
  {
    "text": "long term is when we're talking about this encryption stuff when we one",
    "start": "1346450",
    "end": "1351870"
  },
  {
    "text": "features like your execution geofencing execution we want to really be able to",
    "start": "1351870",
    "end": "1359650"
  },
  {
    "text": "tie this to crypto cryptographic keys that we have higher surance on so this",
    "start": "1359650",
    "end": "1366520"
  },
  {
    "text": "would be you know how to interface with TPMS although interface with HSM is",
    "start": "1366520",
    "end": "1371679"
  },
  {
    "text": "there Phipps compliance within my cryptid libraries within the entire process so that is something that is",
    "start": "1371679",
    "end": "1378610"
  },
  {
    "text": "still that is still in the pipeline all",
    "start": "1378610",
    "end": "1384820"
  },
  {
    "text": "right so yeah that's all we had for today so yeah do feel free to add any",
    "start": "1384820",
    "end": "1390640"
  },
  {
    "text": "questions",
    "start": "1390640",
    "end": "1393179"
  },
  {
    "text": "[Applause]",
    "start": "1396810",
    "end": "1404230"
  },
  {
    "text": "okay it might be a stupid one but my question is we are solving one problem",
    "start": "1407910",
    "end": "1413710"
  },
  {
    "text": "but how do we how do we manage those keys what's the plan to manage are we",
    "start": "1413710",
    "end": "1418930"
  },
  {
    "text": "integrating it with any key world solutions or what kind of solutions they are integrating it with so right now the",
    "start": "1418930",
    "end": "1427380"
  },
  {
    "text": "way that we've set this up is that the key management solutions are not",
    "start": "1427380",
    "end": "1434220"
  },
  {
    "text": "necessarily tied to the technology so you can still be able to bootstrap your",
    "start": "1434220",
    "end": "1439480"
  },
  {
    "text": "keys through any key management solution that you have but with features that you",
    "start": "1439480",
    "end": "1445270"
  },
  {
    "text": "talking about so so you could use I bought all key protect or as your key",
    "start": "1445270",
    "end": "1450820"
  },
  {
    "text": "key key fob but when you talk about being able to tie it more tightly with",
    "start": "1450820",
    "end": "1457960"
  },
  {
    "text": "the keys and this comes into I think one of this here is like key management key",
    "start": "1457960",
    "end": "1463570"
  },
  {
    "text": "wrapping services so some key management systems actually allow you to perform key wrapping and unwrapping at the",
    "start": "1463570",
    "end": "1470020"
  },
  {
    "text": "server so the key never actually leaves the key management service so in that sense that is still a bit of work there",
    "start": "1470020",
    "end": "1477010"
  },
  {
    "text": "do you have a very tightly integrated solution but right now the way that we",
    "start": "1477010",
    "end": "1482440"
  },
  {
    "text": "have it is that we still rely on the external process for that we do have so",
    "start": "1482440",
    "end": "1490570"
  },
  {
    "text": "there are two models of this right one one of the models that we just saw is",
    "start": "1490570",
    "end": "1495580"
  },
  {
    "text": "that you're taking a secret and you're putting it in the kubernetes secrets right so you will manage that secret the",
    "start": "1495580",
    "end": "1501880"
  },
  {
    "text": "same way you manage your image poo secret there is another model that we have looked at and we have some",
    "start": "1501880",
    "end": "1508060"
  },
  {
    "text": "prototypes on which is really my key management and authorization is tied to",
    "start": "1508060",
    "end": "1514300"
  },
  {
    "text": "the host so in this case what we're doing is we have a prototype that actually injects this in the runtime so",
    "start": "1514300",
    "end": "1521650"
  },
  {
    "text": "there's validation within a key management service to the node so it does attestation the node to ensure the",
    "start": "1521650",
    "end": "1528470"
  },
  {
    "text": "it's authorized to obtain a key and this you know ties back to rule of trust like TPM or something and for that we did a",
    "start": "1528470",
    "end": "1536000"
  },
  {
    "text": "verdict he should've run time so couple of autos yeah yeah and to add into his",
    "start": "1536000",
    "end": "1541450"
  },
  {
    "text": "you you can use kms services with existing kubernetes tickets and this is",
    "start": "1541450",
    "end": "1549020"
  },
  {
    "text": "another type of secret so if you can tie up your kubernetes to your key service",
    "start": "1549020",
    "end": "1554630"
  },
  {
    "text": "provider all your keys get instead of they staying in a master they they get pushed to the your choice of key key kms",
    "start": "1554630",
    "end": "1563230"
  },
  {
    "text": "so similarly this is not any different this is just another type of secret so this will transparently get get attached",
    "start": "1563230",
    "end": "1569690"
  },
  {
    "text": "to the kms thank you can we decide which",
    "start": "1569690",
    "end": "1576350"
  },
  {
    "text": "level of leery has to be encrypted and you know which does not need encryption do you mean can you selectively do in",
    "start": "1576350",
    "end": "1583549"
  },
  {
    "text": " tional yeah you can okay it doesn't have to be the topmost it can be anything in between I know how much more resource do",
    "start": "1583549",
    "end": "1594679"
  },
  {
    "text": "you need deal with the encryption and decryption images or maybe the",
    "start": "1594679",
    "end": "1601070"
  },
  {
    "text": "percentage so I talked about overhead right during encryption description of",
    "start": "1601070",
    "end": "1608120"
  },
  {
    "text": "the image and how much more resource you need so this is something that we haven't measured in the wall but",
    "start": "1608120",
    "end": "1614179"
  },
  {
    "text": "theoretically it shouldn't take up that much resource so the way that we've with",
    "start": "1614179",
    "end": "1621049"
  },
  {
    "text": "the implementation that we have uses a streaming type cipher so in terms of the",
    "start": "1621049",
    "end": "1627230"
  },
  {
    "text": "encryption process it's part of the pipeline so although they can be like it's the latency is very minimal but the",
    "start": "1627230",
    "end": "1633740"
  },
  {
    "text": "band which is still gonna be about the same yeah maybe if you deploy them more",
    "start": "1633740",
    "end": "1640429"
  },
  {
    "text": "images that depends on it so we'll be using more resource to to deploy it",
    "start": "1640429",
    "end": "1646010"
  },
  {
    "text": "right yeah but you need to do this only",
    "start": "1646010",
    "end": "1651770"
  },
  {
    "text": "once when the first time image comes in because the continuity will extract it all in a runtime will extract it and keep it on a host so it's not something",
    "start": "1651770",
    "end": "1658700"
  },
  {
    "text": "which gonna get executed get Connecticut every time you run the container this is only first time the",
    "start": "1658700",
    "end": "1665310"
  },
  {
    "text": "images has to be pulled on the host and second thing is the way we have implemented is we next time there is a",
    "start": "1665310",
    "end": "1672650"
  },
  {
    "text": "request to request comes to deploy our encrypted image we do not download again",
    "start": "1672650",
    "end": "1678180"
  },
  {
    "text": "a week we can check against the existing extracted image and we call it image",
    "start": "1678180",
    "end": "1683520"
  },
  {
    "text": "authorization yeah so if you so there are two concerns one is like the latency concern which I don't think we're that",
    "start": "1683520",
    "end": "1690180"
  },
  {
    "text": "worried about because the pool latency is still a lot more than decryption latency totally the other resource",
    "start": "1690180",
    "end": "1696510"
  },
  {
    "text": "concern you may be worried about is maybe you know how much actual computation this and that's why I like",
    "start": "1696510",
    "end": "1703560"
  },
  {
    "text": "in our design we a bulk of the encryption is symmetric encryption which isn't really that it's pretty efficient",
    "start": "1703560",
    "end": "1712430"
  },
  {
    "text": "yeah thank you have one question is that",
    "start": "1712430",
    "end": "1723380"
  },
  {
    "text": "suppose you have this encrypted image and you put it in our registry how are",
    "start": "1723380",
    "end": "1729090"
  },
  {
    "text": "tools like I'm vulnerable T scanning going to work if you just encrypted that's a good question so we actually we",
    "start": "1729090",
    "end": "1735990"
  },
  {
    "text": "would have thought this slide so they have two ways to do it right well actually that tree ways to do it so so",
    "start": "1735990",
    "end": "1745650"
  },
  {
    "text": "there are two main ways that we kind of recommend one of which is you could",
    "start": "1745650",
    "end": "1753450"
  },
  {
    "text": "actually so you know when you saw the rap Keys earlier you know I create the right key forever secretary for our show",
    "start": "1753450",
    "end": "1759660"
  },
  {
    "text": "so what you can do in the creation of the devil pipeline is that you can say that if I trust a certain service for",
    "start": "1759660",
    "end": "1765780"
  },
  {
    "text": "example I have a vulnerability scanning service right so I say this vulnerability scanning service has a",
    "start": "1765780",
    "end": "1770970"
  },
  {
    "text": "particular keypad so I can say that I'm gonna encrypt a rap key for this service",
    "start": "1770970",
    "end": "1776850"
  },
  {
    "text": "so if I trust the service a service suppose that image should be able to decrypt it the other way to do it is",
    "start": "1776850",
    "end": "1783300"
  },
  {
    "text": "we're trying to see whether people are setting to move the power of the T scans",
    "start": "1783300",
    "end": "1788460"
  },
  {
    "text": "before I to go to the registry which there",
    "start": "1788460",
    "end": "1793880"
  },
  {
    "text": "advantages and disadvantages like it's true though yeah but no matter both ways we have models that what would be able",
    "start": "1793880",
    "end": "1800270"
  },
  {
    "text": "to do solve the issue",
    "start": "1800270",
    "end": "1805630"
  },
  {
    "text": "just a quick question so it's the let's say I'm going to encrypt the image twice",
    "start": "1820770",
    "end": "1828010"
  },
  {
    "text": "is it going to generate the same symmetric key or difference in magic key yes okay so if you're going to generate",
    "start": "1828010",
    "end": "1837100"
  },
  {
    "text": "the same image twice it's gonna be a different symmetric key even for the",
    "start": "1837100",
    "end": "1844570"
  },
  {
    "text": "same user so okay so what what you can do so let me so what we do in this is",
    "start": "1844570",
    "end": "1854620"
  },
  {
    "text": "that generally when you encrypt the image you when you create the right keys",
    "start": "1854620",
    "end": "1860320"
  },
  {
    "text": "you're gonna create one for yourself so if you're gonna be able to if you want",
    "start": "1860320",
    "end": "1865600"
  },
  {
    "text": "to add a recipient let's say you want to add a new recipient you don't have to re-encrypt the image basically what",
    "start": "1865600",
    "end": "1871090"
  },
  {
    "text": "you're gonna say is I want to add this recipient so what it's going to do is it's going to decrypt your own wrap key",
    "start": "1871090",
    "end": "1876370"
  },
  {
    "text": "and then rewrap a right key for the new person so if it detects that the layer is the same I don't think we I don't",
    "start": "1876370",
    "end": "1883900"
  },
  {
    "text": "think we do probably to the extent of figuring out that the day is the same and doing it but if you have knowledge",
    "start": "1883900",
    "end": "1890710"
  },
  {
    "text": "of that you can specifically say I just want to rewrap the key okay so just",
    "start": "1890710",
    "end": "1896650"
  },
  {
    "text": "following questions so is there any exploration for the for the key for the recce the exploration for the key yeah",
    "start": "1896650",
    "end": "1906250"
  },
  {
    "text": "so I think that's something that's gonna defer refer to the key management",
    "start": "1906250",
    "end": "1913630"
  },
  {
    "text": "solutions so yeah that would be have to include the process of your DevOps",
    "start": "1913630",
    "end": "1918850"
  },
  {
    "text": "pipeline yeah thanks more questions all",
    "start": "1918850",
    "end": "1930070"
  },
  {
    "text": "right thank you very much [Applause]",
    "start": "1930070",
    "end": "1936869"
  }
]