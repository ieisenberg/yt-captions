[
  {
    "text": "hello everyone welcome thank you so much",
    "start": "80",
    "end": "2879"
  },
  {
    "text": "for coming uh and thank you so much to",
    "start": "2879",
    "end": "5520"
  },
  {
    "text": "the organizers for putting on this",
    "start": "5520",
    "end": "7120"
  },
  {
    "text": "incredible conference i hope everyone",
    "start": "7120",
    "end": "8800"
  },
  {
    "text": "has enjoyed",
    "start": "8800",
    "end": "10120"
  },
  {
    "text": "themselves um today our talk is called C",
    "start": "10120",
    "end": "15040"
  },
  {
    "text": "A L L I N G now I'm calling",
    "start": "15040",
    "end": "18600"
  },
  {
    "text": "you calling you now and if you're not",
    "start": "18600",
    "end": "21840"
  },
  {
    "text": "lucky enough to be a '9s pop fan that is",
    "start": "21840",
    "end": "26320"
  },
  {
    "text": "a lyric from a song from Aqua's debut",
    "start": "26320",
    "end": "29359"
  },
  {
    "text": "album Aquarium where the song is about a",
    "start": "29359",
    "end": "33920"
  },
  {
    "text": "lover who's trying to connect with their",
    "start": "33920",
    "end": "36520"
  },
  {
    "text": "love and they're trying to call and",
    "start": "36520",
    "end": "39360"
  },
  {
    "text": "they're just getting a busy signal so",
    "start": "39360",
    "end": "40879"
  },
  {
    "text": "they're calling to an operator and",
    "start": "40879",
    "end": "42640"
  },
  {
    "text": "saying \"Hey can you please connect me?\"",
    "start": "42640",
    "end": "44719"
  },
  {
    "text": "Um today we're going to tell a story",
    "start": "44719",
    "end": "46800"
  },
  {
    "text": "about some pods running in Kubernetes",
    "start": "46800",
    "end": "49200"
  },
  {
    "text": "that were crushing a little too hard on",
    "start": "49200",
    "end": "51200"
  },
  {
    "text": "the Kubernetes API um I'm Terara Tori",
    "start": "51200",
    "end": "54640"
  },
  {
    "text": "i'm a staff software engineer at Grafana",
    "start": "54640",
    "end": "56559"
  },
  {
    "text": "Labs and I'm joined today by my",
    "start": "56559",
    "end": "57840"
  },
  {
    "text": "co-presenter Mario Matias uh also staff",
    "start": "57840",
    "end": "61039"
  },
  {
    "text": "software engineer at Graphfana Labs",
    "start": "61039",
    "end": "65198"
  },
  {
    "text": "so today you're going to learn a little",
    "start": "65199",
    "end": "67680"
  },
  {
    "text": "bit about EVPF we're just going to go",
    "start": "67680",
    "end": "70159"
  },
  {
    "text": "into the basics of eBPF if you want to",
    "start": "70159",
    "end": "72479"
  },
  {
    "text": "know more and the nitty-gritty details",
    "start": "72479",
    "end": "74720"
  },
  {
    "text": "Mario has a talk just after this in this",
    "start": "74720",
    "end": "76960"
  },
  {
    "text": "auditorium that you should definitely",
    "start": "76960",
    "end": "78479"
  },
  {
    "text": "come and check out uh we're going to",
    "start": "78479",
    "end": "80960"
  },
  {
    "text": "talk about how in in enriching",
    "start": "80960",
    "end": "84600"
  },
  {
    "text": "Kuberneting eBPF data we broke the",
    "start": "84600",
    "end": "87759"
  },
  {
    "text": "Kubernetes API uh how we uh why we",
    "start": "87759",
    "end": "92240"
  },
  {
    "text": "needed to enrich that data and what we",
    "start": "92240",
    "end": "94000"
  },
  {
    "text": "do to to to do that in BA and then how",
    "start": "94000",
    "end": "96799"
  },
  {
    "text": "we ended up scaling that uh enrichment",
    "start": "96799",
    "end": "99439"
  },
  {
    "text": "process",
    "start": "99439",
    "end": "101439"
  },
  {
    "text": "so uh oh uh before I go on uh can I get",
    "start": "101439",
    "end": "106479"
  },
  {
    "text": "a show of hands who here is familiar",
    "start": "106479",
    "end": "108640"
  },
  {
    "text": "with",
    "start": "108640",
    "end": "110439"
  },
  {
    "text": "EVPF okay so about half the people um",
    "start": "110439",
    "end": "114399"
  },
  {
    "text": "who has written an ebpf",
    "start": "114399",
    "end": "116600"
  },
  {
    "text": "program okay fewer hands and who has",
    "start": "116600",
    "end": "120159"
  },
  {
    "text": "deployed that ebpf program into",
    "start": "120159",
    "end": "122719"
  },
  {
    "text": "production in Kubernetes okay awesome",
    "start": "122719",
    "end": "125840"
  },
  {
    "text": "thank you um so before I go on I need to",
    "start": "125840",
    "end": "129119"
  },
  {
    "text": "set the stage and start and tell you a",
    "start": "129119",
    "end": "131360"
  },
  {
    "text": "little bit about",
    "start": "131360",
    "end": "133239"
  },
  {
    "text": "ebpf so ebpf if you don't know it",
    "start": "133239",
    "end": "136800"
  },
  {
    "text": "enables safe and efficient extension of",
    "start": "136800",
    "end": "139440"
  },
  {
    "text": "the Linux kernel now you might say we",
    "start": "139440",
    "end": "142080"
  },
  {
    "text": "already have kernel modules why do we",
    "start": "142080",
    "end": "144879"
  },
  {
    "text": "need ebpf well if you've ever run a",
    "start": "144879",
    "end": "147680"
  },
  {
    "text": "kernel module you know that if the",
    "start": "147680",
    "end": "149280"
  },
  {
    "text": "kernel module crashes crashes the whole",
    "start": "149280",
    "end": "151920"
  },
  {
    "text": "system everything goes down um what ebpf",
    "start": "151920",
    "end": "156160"
  },
  {
    "text": "does is it introduces a virtual machine",
    "start": "156160",
    "end": "158080"
  },
  {
    "text": "the ebpf virtual machine and that",
    "start": "158080",
    "end": "160879"
  },
  {
    "text": "enforces uh halting as well as a few",
    "start": "160879",
    "end": "163519"
  },
  {
    "text": "other safety properties that enables you",
    "start": "163519",
    "end": "165760"
  },
  {
    "text": "to run these kernel modu these kernel",
    "start": "165760",
    "end": "167920"
  },
  {
    "text": "extensions in a safe way um now the for",
    "start": "167920",
    "end": "172400"
  },
  {
    "text": "I think a lot of people when they think",
    "start": "172400",
    "end": "173920"
  },
  {
    "text": "of ebpf they think it's sort of a a new",
    "start": "173920",
    "end": "176319"
  },
  {
    "text": "fangled technology um but actually the",
    "start": "176319",
    "end": "179440"
  },
  {
    "text": "stuff that we're talking about was added",
    "start": "179440",
    "end": "181040"
  },
  {
    "text": "to the Linux kernel in 2015 by Daniel",
    "start": "181040",
    "end": "183519"
  },
  {
    "text": "Borman we're talking about the TC egress",
    "start": "183519",
    "end": "186640"
  },
  {
    "text": "ingress hooks and that is what allows us",
    "start": "186640",
    "end": "190080"
  },
  {
    "text": "to snoop on network traffic lets us get",
    "start": "190080",
    "end": "192640"
  },
  {
    "text": "our grubby little paws on all those",
    "start": "192640",
    "end": "194800"
  },
  {
    "text": "network calls so that we can construct",
    "start": "194800",
    "end": "197200"
  },
  {
    "text": "these amazing service graphs that we use",
    "start": "197200",
    "end": "199120"
  },
  {
    "text": "in other products um but kernel data by",
    "start": "199120",
    "end": "203120"
  },
  {
    "text": "itself especially in Kubernetes is",
    "start": "203120",
    "end": "205360"
  },
  {
    "text": "really not that useful um when if any",
    "start": "205360",
    "end": "208800"
  },
  {
    "text": "anyone who's sed into a container knows",
    "start": "208800",
    "end": "211680"
  },
  {
    "text": "that if it all all it has is cat and sh",
    "start": "211680",
    "end": "215120"
  },
  {
    "text": "it's it's really annoying to go into",
    "start": "215120",
    "end": "216879"
  },
  {
    "text": "slprock and look at every single detail",
    "start": "216879",
    "end": "219599"
  },
  {
    "text": "about every container and especially",
    "start": "219599",
    "end": "221760"
  },
  {
    "text": "when you're doing this at scale across",
    "start": "221760",
    "end": "223440"
  },
  {
    "text": "an entire fleet of machines it gets very",
    "start": "223440",
    "end": "226599"
  },
  {
    "text": "tedious so as I said kernel data is raw",
    "start": "226599",
    "end": "230640"
  },
  {
    "text": "right and in in Kubernetes every single",
    "start": "230640",
    "end": "233440"
  },
  {
    "text": "node in a standard deployment has its",
    "start": "233440",
    "end": "236319"
  },
  {
    "text": "own kernel and that kernel that kernel",
    "start": "236319",
    "end": "239360"
  },
  {
    "text": "data is giving you information about the",
    "start": "239360",
    "end": "240959"
  },
  {
    "text": "source port source IP destination port",
    "start": "240959",
    "end": "243519"
  },
  {
    "text": "destination IP but that's not what we",
    "start": "243519",
    "end": "246239"
  },
  {
    "text": "care about in Kubernetes right in",
    "start": "246239",
    "end": "248400"
  },
  {
    "text": "Kubernetes we care about Kubernetes",
    "start": "248400",
    "end": "250560"
  },
  {
    "text": "objects like services and pods nodes so",
    "start": "250560",
    "end": "255200"
  },
  {
    "text": "how can we take this raw data and turn",
    "start": "255200",
    "end": "259359"
  },
  {
    "text": "it into something that is actually",
    "start": "259359",
    "end": "261359"
  },
  {
    "text": "useful for humans that care about",
    "start": "261359",
    "end": "264520"
  },
  {
    "text": "Kubernetes well um as I mentioned every",
    "start": "264520",
    "end": "268479"
  },
  {
    "text": "node has a kernel kubernetes has a",
    "start": "268479",
    "end": "271680"
  },
  {
    "text": "construct called a Damon set that allows",
    "start": "271680",
    "end": "273919"
  },
  {
    "text": "you to run one pod per node so that",
    "start": "273919",
    "end": "277280"
  },
  {
    "text": "effectively gives you one pod per kernel",
    "start": "277280",
    "end": "280400"
  },
  {
    "text": "so that's how we solved kind of the",
    "start": "280400",
    "end": "282160"
  },
  {
    "text": "first problem of running ebpf in",
    "start": "282160",
    "end": "284320"
  },
  {
    "text": "kubernetes is um we we have now one pod",
    "start": "284320",
    "end": "289840"
  },
  {
    "text": "running on every kernel and so we can",
    "start": "289840",
    "end": "292080"
  },
  {
    "text": "gather that information um still we need",
    "start": "292080",
    "end": "295759"
  },
  {
    "text": "to get this metadata because we want pod",
    "start": "295759",
    "end": "298240"
  },
  {
    "text": "IPs are constantly changing we need to",
    "start": "298240",
    "end": "300720"
  },
  {
    "text": "know about pods and services so that we",
    "start": "300720",
    "end": "303120"
  },
  {
    "text": "can provide useful information to people",
    "start": "303120",
    "end": "305199"
  },
  {
    "text": "kubernetes has this incredible API which",
    "start": "305199",
    "end": "308000"
  },
  {
    "text": "is arguably what makes Kubernetes so",
    "start": "308000",
    "end": "310320"
  },
  {
    "text": "powerful right you can set the state in",
    "start": "310320",
    "end": "313440"
  },
  {
    "text": "that API and Kubernetes will just go and",
    "start": "313440",
    "end": "316400"
  },
  {
    "text": "reconcile your system such that what",
    "start": "316400",
    "end": "319360"
  },
  {
    "text": "you've what you've represented in the",
    "start": "319360",
    "end": "320960"
  },
  {
    "text": "API becomes reality um and so we thought",
    "start": "320960",
    "end": "326080"
  },
  {
    "text": "well there's this very tempting API that",
    "start": "326080",
    "end": "329440"
  },
  {
    "text": "knows everything about everything that's",
    "start": "329440",
    "end": "331120"
  },
  {
    "text": "happening in the cluster why don't we",
    "start": "331120",
    "end": "332560"
  },
  {
    "text": "just ask that and so why don't we just",
    "start": "332560",
    "end": "335039"
  },
  {
    "text": "have every single Damon or every single",
    "start": "335039",
    "end": "337280"
  },
  {
    "text": "pod in the Damon set ask the Kubernetes",
    "start": "337280",
    "end": "340639"
  },
  {
    "text": "API what could go wrong",
    "start": "340639",
    "end": "344320"
  },
  {
    "text": "right thank you Terra",
    "start": "344520",
    "end": "347520"
  },
  {
    "text": "uh so uh BA is built using a pipeline",
    "start": "347520",
    "end": "354600"
  },
  {
    "text": "architecture in which data is extracted",
    "start": "354600",
    "end": "358560"
  },
  {
    "text": "in early stages is joined is transformed",
    "start": "358560",
    "end": "362960"
  },
  {
    "text": "in in other stages",
    "start": "362960",
    "end": "365880"
  },
  {
    "text": "uh in in one of those stages we want to",
    "start": "365880",
    "end": "369919"
  },
  {
    "text": "decorate metrics with Kubernetes",
    "start": "369919",
    "end": "371919"
  },
  {
    "text": "metadata to make those metrics more",
    "start": "371919",
    "end": "374720"
  },
  {
    "text": "meaningful for the final user we might",
    "start": "374720",
    "end": "377680"
  },
  {
    "text": "have for example for network level",
    "start": "377680",
    "end": "379600"
  },
  {
    "text": "metrics",
    "start": "379600",
    "end": "381199"
  },
  {
    "text": "uh source and destination IPs of all the",
    "start": "381199",
    "end": "384160"
  },
  {
    "text": "pots that you are connected from the",
    "start": "384160",
    "end": "386639"
  },
  {
    "text": "EVPF side we have access uh to the",
    "start": "386639",
    "end": "390800"
  },
  {
    "text": "system level metrics at the network",
    "start": "390800",
    "end": "393280"
  },
  {
    "text": "packages or row row",
    "start": "393280",
    "end": "396520"
  },
  {
    "text": "connections and from EVPF we can see",
    "start": "396520",
    "end": "399360"
  },
  {
    "text": "source and destination",
    "start": "399360",
    "end": "401880"
  },
  {
    "text": "IPs but uh for the final user those",
    "start": "401880",
    "end": "407400"
  },
  {
    "text": "metrics are not usually so meaningful",
    "start": "407400",
    "end": "410800"
  },
  {
    "text": "because we don't really me memorize or",
    "start": "410800",
    "end": "414639"
  },
  {
    "text": "we don't have a mental map of wipes IP",
    "start": "414639",
    "end": "418319"
  },
  {
    "text": "piece belong to to which node so we want",
    "start": "418319",
    "end": "420720"
  },
  {
    "text": "to decorate those metrics in a given",
    "start": "420720",
    "end": "423039"
  },
  {
    "text": "stage with Kubernetes metadata this is",
    "start": "423039",
    "end": "426880"
  },
  {
    "text": "pot name spaces",
    "start": "426880",
    "end": "430160"
  },
  {
    "text": "uh other levels and so on so in one of",
    "start": "430160",
    "end": "434400"
  },
  {
    "text": "those stages of the BA",
    "start": "434400",
    "end": "437160"
  },
  {
    "text": "pipeline we get metrics decorated with",
    "start": "437160",
    "end": "441280"
  },
  {
    "text": "source and destinations IPs and we send",
    "start": "441280",
    "end": "444960"
  },
  {
    "text": "out metrics decorated with Kubernetes",
    "start": "444960",
    "end": "447080"
  },
  {
    "text": "metadata this Kubernetes metadata is",
    "start": "447080",
    "end": "450360"
  },
  {
    "text": "acquired using a Go library ba is mostly",
    "start": "450360",
    "end": "454400"
  },
  {
    "text": "written in Go uh there is a Go library",
    "start": "454400",
    "end": "458160"
  },
  {
    "text": "named Kubernetes informers",
    "start": "458160",
    "end": "461360"
  },
  {
    "text": "this library connects to the cube API",
    "start": "461360",
    "end": "465199"
  },
  {
    "text": "and on one side it retrieves a whole",
    "start": "465199",
    "end": "468479"
  },
  {
    "text": "snapshot of your cluster i I means all",
    "start": "468479",
    "end": "471520"
  },
  {
    "text": "the parts of your cluster nodes",
    "start": "471520",
    "end": "474039"
  },
  {
    "text": "services names metadata IP addresses and",
    "start": "474039",
    "end": "477759"
  },
  {
    "text": "so on and also it watches for any update",
    "start": "477759",
    "end": "481919"
  },
  {
    "text": "into into your Kubernetes cluster this",
    "start": "481919",
    "end": "485400"
  },
  {
    "text": "is a new pot is created a pot has",
    "start": "485400",
    "end": "488879"
  },
  {
    "text": "changed the IP address or has new IP",
    "start": "488879",
    "end": "491599"
  },
  {
    "text": "addresses a pot is destroyed so giving",
    "start": "491599",
    "end": "495039"
  },
  {
    "text": "as input this constant flow of",
    "start": "495039",
    "end": "498000"
  },
  {
    "text": "Kubernetes object BA uh maintains an",
    "start": "498000",
    "end": "502960"
  },
  {
    "text": "inmemory map that for each IP address",
    "start": "502960",
    "end": "507280"
  },
  {
    "text": "also other other it it can also use",
    "start": "507280",
    "end": "510879"
  },
  {
    "text": "other keys like container ID P ID and so",
    "start": "510879",
    "end": "513360"
  },
  {
    "text": "on for other kind of metrics but",
    "start": "513360",
    "end": "515200"
  },
  {
    "text": "basically we maintain an accessible map",
    "start": "515200",
    "end": "518080"
  },
  {
    "text": "for a given IP which Kubernetes object",
    "start": "518080",
    "end": "522080"
  },
  {
    "text": "it belongs to so in that pipeline stage",
    "start": "522080",
    "end": "525600"
  },
  {
    "text": "we can provide extra information that",
    "start": "525600",
    "end": "529360"
  },
  {
    "text": "might be meaningful for the for the",
    "start": "529360",
    "end": "532240"
  },
  {
    "text": "final",
    "start": "532240",
    "end": "534279"
  },
  {
    "text": "user uh BA runs one as Terra said one",
    "start": "534279",
    "end": "539360"
  },
  {
    "text": "instance on each on each node uh and",
    "start": "539360",
    "end": "544160"
  },
  {
    "text": "that works that worked pretty pretty",
    "start": "544160",
    "end": "547399"
  },
  {
    "text": "good at",
    "start": "547399",
    "end": "549240"
  },
  {
    "text": "first until we deployed in production in",
    "start": "549240",
    "end": "553920"
  },
  {
    "text": "a large",
    "start": "553920",
    "end": "555080"
  },
  {
    "text": "cluster uh we already had BA deployed in",
    "start": "555080",
    "end": "558320"
  },
  {
    "text": "production nobody complained everything",
    "start": "558320",
    "end": "560480"
  },
  {
    "text": "was okay but one day they thought hey so",
    "start": "560480",
    "end": "563760"
  },
  {
    "text": "we deployed and happily we say okay",
    "start": "563760",
    "end": "566080"
  },
  {
    "text": "let's go home uh but someone else",
    "start": "566080",
    "end": "569519"
  },
  {
    "text": "someone else say this cluster is not",
    "start": "569519",
    "end": "572000"
  },
  {
    "text": "working is",
    "start": "572000",
    "end": "573560"
  },
  {
    "text": "is whatever is happening is is not",
    "start": "573560",
    "end": "576880"
  },
  {
    "text": "working and that is because we passed",
    "start": "576880",
    "end": "579800"
  },
  {
    "text": "from the Kubernetes API server uh went",
    "start": "579800",
    "end": "584279"
  },
  {
    "text": "from t few ten of requests per second to",
    "start": "584279",
    "end": "589279"
  },
  {
    "text": "more than two million requests per",
    "start": "589279",
    "end": "591519"
  },
  {
    "text": "second also",
    "start": "591519",
    "end": "594200"
  },
  {
    "text": "the also the error rates of those API",
    "start": "594200",
    "end": "598160"
  },
  {
    "text": "requests went from zero to uh 10,000 and",
    "start": "598160",
    "end": "603000"
  },
  {
    "text": "uh",
    "start": "603000",
    "end": "605160"
  },
  {
    "text": "and yeah we we also even lost the some",
    "start": "605160",
    "end": "608640"
  },
  {
    "text": "metrics because that start working that",
    "start": "608640",
    "end": "610480"
  },
  {
    "text": "cow said that not only in not only the",
    "start": "610480",
    "end": "614480"
  },
  {
    "text": "decoration of metadata stop working in",
    "start": "614480",
    "end": "616560"
  },
  {
    "text": "bail but also some other uh kubernetes",
    "start": "616560",
    "end": "620880"
  },
  {
    "text": "objects were not properly reconciled so",
    "start": "620880",
    "end": "623600"
  },
  {
    "text": "basically we took down the the cluster",
    "start": "623600",
    "end": "625839"
  },
  {
    "text": "with with",
    "start": "625839",
    "end": "628040"
  },
  {
    "text": "BA some users also report it but we I",
    "start": "628040",
    "end": "633360"
  },
  {
    "text": "have to be honest we ignore them uh say",
    "start": "633360",
    "end": "636240"
  },
  {
    "text": "okay maybe maybe you are doing some",
    "start": "636240",
    "end": "639040"
  },
  {
    "text": "something weird they even provide some",
    "start": "639040",
    "end": "643120"
  },
  {
    "text": "some public they shared in our GitHub uh",
    "start": "643120",
    "end": "646720"
  },
  {
    "text": "request some memory information actually",
    "start": "646720",
    "end": "650160"
  },
  {
    "text": "uh enabling BA in their cluster doubled",
    "start": "650160",
    "end": "653920"
  },
  {
    "text": "the memory consumption of the cube",
    "start": "653920",
    "end": "657160"
  },
  {
    "text": "API so we said",
    "start": "657160",
    "end": "659959"
  },
  {
    "text": "okay our early users are complaining we",
    "start": "659959",
    "end": "664720"
  },
  {
    "text": "cannot deploy it internally so we need",
    "start": "664720",
    "end": "666560"
  },
  {
    "text": "to do something",
    "start": "666560",
    "end": "668640"
  },
  {
    "text": "what was happening behind the scenes uh",
    "start": "668640",
    "end": "672200"
  },
  {
    "text": "BA is runs as a demo set this is we have",
    "start": "672200",
    "end": "676160"
  },
  {
    "text": "one BA on each node and uh to to get",
    "start": "676160",
    "end": "680800"
  },
  {
    "text": "metadata from the Kubernetes objects it",
    "start": "680800",
    "end": "684320"
  },
  {
    "text": "contacts to the cubelet that exposes a",
    "start": "684320",
    "end": "687040"
  },
  {
    "text": "local endpoint in which we can ask for",
    "start": "687040",
    "end": "691279"
  },
  {
    "text": "uh in that case both nodes and services",
    "start": "691279",
    "end": "693920"
  },
  {
    "text": "which is anything that can have an IP we",
    "start": "693920",
    "end": "696399"
  },
  {
    "text": "want it but the cubelet only maintains",
    "start": "696399",
    "end": "700240"
  },
  {
    "text": "local information about the ports no uh",
    "start": "700240",
    "end": "704720"
  },
  {
    "text": "about the ports especially uh but since",
    "start": "704720",
    "end": "708640"
  },
  {
    "text": "we are tracking network metrics we also",
    "start": "708640",
    "end": "711200"
  },
  {
    "text": "want to know the source IP which is",
    "start": "711200",
    "end": "713040"
  },
  {
    "text": "local but the destination IP we also",
    "start": "713040",
    "end": "715519"
  },
  {
    "text": "want to know for external port so we",
    "start": "715519",
    "end": "717680"
  },
  {
    "text": "need each bail instance need to maintain",
    "start": "717680",
    "end": "720079"
  },
  {
    "text": "a snapshot of the whole cluster so when",
    "start": "720079",
    "end": "723200"
  },
  {
    "text": "BA this informer's API contacts the",
    "start": "723200",
    "end": "726160"
  },
  {
    "text": "local",
    "start": "726160",
    "end": "727000"
  },
  {
    "text": "cublet each local",
    "start": "727000",
    "end": "729320"
  },
  {
    "text": "cublet this is a simplification so it's",
    "start": "729320",
    "end": "733440"
  },
  {
    "text": "probably I mean it's might be more",
    "start": "733440",
    "end": "735600"
  },
  {
    "text": "complex but just to understand each",
    "start": "735600",
    "end": "737200"
  },
  {
    "text": "cublet sends a request to the cube API",
    "start": "737200",
    "end": "740320"
  },
  {
    "text": "and for each request request the cube",
    "start": "740320",
    "end": "743040"
  },
  {
    "text": "API sends back a request for the other",
    "start": "743040",
    "end": "746480"
  },
  {
    "text": "cublets so if we have three nodes when",
    "start": "746480",
    "end": "749360"
  },
  {
    "text": "then when this cubelet sends a a",
    "start": "749360",
    "end": "752639"
  },
  {
    "text": "subscribe cube API will send it to the",
    "start": "752639",
    "end": "755279"
  },
  {
    "text": "other port so it will each node will",
    "start": "755279",
    "end": "757920"
  },
  {
    "text": "receive two more in that case only three",
    "start": "757920",
    "end": "760560"
  },
  {
    "text": "nodes to two",
    "start": "760560",
    "end": "762839"
  },
  {
    "text": "more two more requests just to send the",
    "start": "762839",
    "end": "766800"
  },
  {
    "text": "pod information to share the the local",
    "start": "766800",
    "end": "769360"
  },
  {
    "text": "pod information with the other with the",
    "start": "769360",
    "end": "772240"
  },
  {
    "text": "other nodes for few nodes that's okay",
    "start": "772240",
    "end": "776399"
  },
  {
    "text": "but this this cube API is handling uh a",
    "start": "776399",
    "end": "781839"
  },
  {
    "text": "number of sub of of subscriptions uh",
    "start": "781839",
    "end": "784880"
  },
  {
    "text": "with a an order of complexity of power",
    "start": "784880",
    "end": "787279"
  },
  {
    "text": "of two it's fine for it's fine for few",
    "start": "787279",
    "end": "790160"
  },
  {
    "text": "nodes but given uh when you reach a",
    "start": "790160",
    "end": "793680"
  },
  {
    "text": "critical number then uh memory CPU uh is",
    "start": "793680",
    "end": "798720"
  },
  {
    "text": "is too high you take down the cluster",
    "start": "798720",
    "end": "803639"
  },
  {
    "text": "So uh we were discussing how can we fix",
    "start": "803720",
    "end": "807680"
  },
  {
    "text": "this because uh not decorating our",
    "start": "807680",
    "end": "811440"
  },
  {
    "text": "metrics with Kubernetes metadata was not",
    "start": "811440",
    "end": "813839"
  },
  {
    "text": "an option because the the",
    "start": "813839",
    "end": "816320"
  },
  {
    "text": "instrumentation will become mostly",
    "start": "816320",
    "end": "818560"
  },
  {
    "text": "useless in that case so first we thought",
    "start": "818560",
    "end": "822880"
  },
  {
    "text": "about replacing the subscription model",
    "start": "822880",
    "end": "825279"
  },
  {
    "text": "just by individual requests because even",
    "start": "825279",
    "end": "828320"
  },
  {
    "text": "at the end if we if we store a snapshot",
    "start": "828320",
    "end": "831279"
  },
  {
    "text": "of the of all of all all all the pots we",
    "start": "831279",
    "end": "835360"
  },
  {
    "text": "don't really need or we we mostly bail",
    "start": "835360",
    "end": "838480"
  },
  {
    "text": "mostly manage information from all the",
    "start": "838480",
    "end": "841120"
  },
  {
    "text": "all the pots so what if you we just ask",
    "start": "841120",
    "end": "844079"
  },
  {
    "text": "it won't work well because the the API",
    "start": "844079",
    "end": "847120"
  },
  {
    "text": "is not well designed it to efficiently",
    "start": "847120",
    "end": "849360"
  },
  {
    "text": "query by IP but just by name and also",
    "start": "849360",
    "end": "852560"
  },
  {
    "text": "even during the during the deployments",
    "start": "852560",
    "end": "855279"
  },
  {
    "text": "the initial uh at the initialization of",
    "start": "855279",
    "end": "857680"
  },
  {
    "text": "each instance the cube API will get",
    "start": "857680",
    "end": "859680"
  },
  {
    "text": "anyway a stampede of requests we were",
    "start": "859680",
    "end": "862959"
  },
  {
    "text": "thinking about okay why does just we",
    "start": "862959",
    "end": "866000"
  },
  {
    "text": "don't get uh the information from the",
    "start": "866000",
    "end": "869519"
  },
  {
    "text": "local information from the cullet API",
    "start": "869519",
    "end": "871920"
  },
  {
    "text": "which is somewhat undocumented it's not",
    "start": "871920",
    "end": "874880"
  },
  {
    "text": "so much uh designed for the final user",
    "start": "874880",
    "end": "878639"
  },
  {
    "text": "but for internal",
    "start": "878639",
    "end": "881639"
  },
  {
    "text": "behavior but we don't get global objects",
    "start": "881639",
    "end": "885519"
  },
  {
    "text": "to it uh I mean we can only get uh local",
    "start": "885519",
    "end": "890199"
  },
  {
    "text": "pots so we were thinking on clustering",
    "start": "890199",
    "end": "894399"
  },
  {
    "text": "this this creating a clustering a",
    "start": "894399",
    "end": "896560"
  },
  {
    "text": "cluster catch but that we we will get",
    "start": "896560",
    "end": "899839"
  },
  {
    "text": "ending up getting similar",
    "start": "899839",
    "end": "901720"
  },
  {
    "text": "problem with a gossip protocol to share",
    "start": "901720",
    "end": "904480"
  },
  {
    "text": "metadata uh we will add some network",
    "start": "904480",
    "end": "908320"
  },
  {
    "text": "traffic and",
    "start": "908320",
    "end": "910279"
  },
  {
    "text": "complexity so we decide to move to a",
    "start": "910279",
    "end": "913360"
  },
  {
    "text": "centralized cache deployment so instead",
    "start": "913360",
    "end": "916880"
  },
  {
    "text": "of integrating this informer's code on",
    "start": "916880",
    "end": "920240"
  },
  {
    "text": "each bail instance which run as a demo",
    "start": "920240",
    "end": "923040"
  },
  {
    "text": "set we will create an external",
    "start": "923040",
    "end": "926199"
  },
  {
    "text": "pot that",
    "start": "926199",
    "end": "928720"
  },
  {
    "text": "uh the it's is deployed few it deploys",
    "start": "928720",
    "end": "931680"
  },
  {
    "text": "few few replicas it can be one replica",
    "start": "931680",
    "end": "934399"
  },
  {
    "text": "two replicas I don't know it depends on",
    "start": "934399",
    "end": "936720"
  },
  {
    "text": "on the size of your",
    "start": "936720",
    "end": "938120"
  },
  {
    "text": "cluster and this uh cache pod will",
    "start": "938120",
    "end": "941760"
  },
  {
    "text": "implement the go informers code to",
    "start": "941760",
    "end": "944959"
  },
  {
    "text": "subscribe subscribe to the Kubernetes",
    "start": "944959",
    "end": "946399"
  },
  {
    "text": "API from free instances and get a",
    "start": "946399",
    "end": "949759"
  },
  {
    "text": "complete snapshot of all the pot",
    "start": "949759",
    "end": "952880"
  },
  {
    "text": "metadata which is later shared with each",
    "start": "952880",
    "end": "956079"
  },
  {
    "text": "bail instance that connects to this",
    "start": "956079",
    "end": "958560"
  },
  {
    "text": "catch service at the end what we have is",
    "start": "958560",
    "end": "961839"
  },
  {
    "text": "a two-level cache even if we say",
    "start": "961839",
    "end": "965759"
  },
  {
    "text": "centralized cache it can be distributed",
    "start": "965759",
    "end": "967839"
  },
  {
    "text": "because you can have multiple instances",
    "start": "967839",
    "end": "970240"
  },
  {
    "text": "and then",
    "start": "970240",
    "end": "971720"
  },
  {
    "text": "the each bail will be will connect to",
    "start": "971720",
    "end": "974959"
  },
  {
    "text": "different instances uh using some load",
    "start": "974959",
    "end": "977800"
  },
  {
    "text": "balancing so this catch instance pot",
    "start": "977800",
    "end": "981120"
  },
  {
    "text": "connects to the cube API gets all the",
    "start": "981120",
    "end": "984000"
  },
  {
    "text": "informant metadata if you request for a",
    "start": "984000",
    "end": "987120"
  },
  {
    "text": "pod metadata for example you will see a",
    "start": "987120",
    "end": "989920"
  },
  {
    "text": "big JAML file or a big JSON file with a",
    "start": "989920",
    "end": "992880"
  },
  {
    "text": "lot of",
    "start": "992880",
    "end": "993720"
  },
  {
    "text": "metadata that actually we don't really",
    "start": "993720",
    "end": "996800"
  },
  {
    "text": "we don't really need all that metadata",
    "start": "996800",
    "end": "998880"
  },
  {
    "text": "so that cache instance just stores the",
    "start": "998880",
    "end": "1002320"
  },
  {
    "text": "minimal needed snapshot of of the",
    "start": "1002320",
    "end": "1005759"
  },
  {
    "text": "required Kubernetes object that is name",
    "start": "1005759",
    "end": "1007839"
  },
  {
    "text": "name space kind the owner and some",
    "start": "1007839",
    "end": "1011360"
  },
  {
    "text": "labels and annotations which is the",
    "start": "1011360",
    "end": "1013120"
  },
  {
    "text": "metadata we really care for for",
    "start": "1013120",
    "end": "1015880"
  },
  {
    "text": "decorating metrics and bail is connected",
    "start": "1015880",
    "end": "1020240"
  },
  {
    "text": "to that uh cache instance using a",
    "start": "1020240",
    "end": "1025360"
  },
  {
    "text": "minimal protobuff definition uh via a",
    "start": "1025360",
    "end": "1029199"
  },
  {
    "text": "gRPC stream so the the network and the",
    "start": "1029199",
    "end": "1034160"
  },
  {
    "text": "resources required for the for",
    "start": "1034160",
    "end": "1036160"
  },
  {
    "text": "transferring all this information from",
    "start": "1036160",
    "end": "1038240"
  },
  {
    "text": "the cache to bail is is much lower and",
    "start": "1038240",
    "end": "1041839"
  },
  {
    "text": "at the end bay also once receives the",
    "start": "1041839",
    "end": "1046160"
  },
  {
    "text": "information it it's it keeps updated an",
    "start": "1046160",
    "end": "1049480"
  },
  {
    "text": "internal an internal database mapping",
    "start": "1049480",
    "end": "1053840"
  },
  {
    "text": "IPs container ids qualified names to to",
    "start": "1053840",
    "end": "1057600"
  },
  {
    "text": "the metadata object",
    "start": "1057600",
    "end": "1061520"
  },
  {
    "text": "decentralized cache is a storage list we",
    "start": "1061520",
    "end": "1063840"
  },
  {
    "text": "wanted to make it as easy to maintain as",
    "start": "1063840",
    "end": "1068400"
  },
  {
    "text": "possible so we didn't want it to require",
    "start": "1068400",
    "end": "1072350"
  },
  {
    "text": "[Music]",
    "start": "1072350",
    "end": "1073640"
  },
  {
    "text": "um a storage system we didn't want it to",
    "start": "1073640",
    "end": "1077360"
  },
  {
    "text": "require some extra communication like a",
    "start": "1077360",
    "end": "1080240"
  },
  {
    "text": "message queue it's just plain gRPC that",
    "start": "1080240",
    "end": "1083679"
  },
  {
    "text": "means that if by some reason this pot uh",
    "start": "1083679",
    "end": "1087400"
  },
  {
    "text": "crashes maybe a back or maybe it gets",
    "start": "1087400",
    "end": "1091919"
  },
  {
    "text": "too many resources and and gets all",
    "start": "1091919",
    "end": "1095440"
  },
  {
    "text": "killed",
    "start": "1095440",
    "end": "1097240"
  },
  {
    "text": "uh while when this when a pot restarts",
    "start": "1097240",
    "end": "1101520"
  },
  {
    "text": "the cache pot restarts another pot will",
    "start": "1101520",
    "end": "1104559"
  },
  {
    "text": "be will be started will get a new will",
    "start": "1104559",
    "end": "1107919"
  },
  {
    "text": "reload the snapshot and BA will connect",
    "start": "1107919",
    "end": "1110799"
  },
  {
    "text": "to that new pot in that time BA will",
    "start": "1110799",
    "end": "1114480"
  },
  {
    "text": "still maintain its local copy of the",
    "start": "1114480",
    "end": "1117120"
  },
  {
    "text": "metadata so BA will miss some updates",
    "start": "1117120",
    "end": "1121280"
  },
  {
    "text": "but most of the metrics it gets uh and",
    "start": "1121280",
    "end": "1125039"
  },
  {
    "text": "needs to to decorate baila will find uh",
    "start": "1125039",
    "end": "1128559"
  },
  {
    "text": "the the metadata for most of those",
    "start": "1128559",
    "end": "1131200"
  },
  {
    "text": "metrics given that this cache pod",
    "start": "1131200",
    "end": "1133440"
  },
  {
    "text": "instance takes few seconds to to to",
    "start": "1133440",
    "end": "1137679"
  },
  {
    "text": "restart",
    "start": "1137679",
    "end": "1140679"
  },
  {
    "text": "so some issues that we ran into with",
    "start": "1141320",
    "end": "1144320"
  },
  {
    "text": "this approach the centralized cache",
    "start": "1144320",
    "end": "1146320"
  },
  {
    "text": "solved the primary problem but as we",
    "start": "1146320",
    "end": "1147919"
  },
  {
    "text": "know in tech everything is a trade-off",
    "start": "1147919",
    "end": "1150559"
  },
  {
    "text": "um the main reason why we really",
    "start": "1150559",
    "end": "1153039"
  },
  {
    "text": "evaluated a number of options was we",
    "start": "1153039",
    "end": "1155840"
  },
  {
    "text": "didn't want to introduce another",
    "start": "1155840",
    "end": "1157840"
  },
  {
    "text": "component for our users to manage",
    "start": "1157840",
    "end": "1160320"
  },
  {
    "text": "everything that you run in Kubernetes",
    "start": "1160320",
    "end": "1162320"
  },
  {
    "text": "adds toil you got to upgrade it you got",
    "start": "1162320",
    "end": "1164720"
  },
  {
    "text": "to check the resource utilization um and",
    "start": "1164720",
    "end": "1168640"
  },
  {
    "text": "in this also uh the the resource",
    "start": "1168640",
    "end": "1171440"
  },
  {
    "text": "utilization especially during startup",
    "start": "1171440",
    "end": "1173360"
  },
  {
    "text": "because the cache is empty when the pods",
    "start": "1173360",
    "end": "1175919"
  },
  {
    "text": "first start it has to refresh its brain",
    "start": "1175919",
    "end": "1178799"
  },
  {
    "text": "about everything that's happening inside",
    "start": "1178799",
    "end": "1180799"
  },
  {
    "text": "the cluster because the caches maintain",
    "start": "1180799",
    "end": "1183200"
  },
  {
    "text": "a state of of everything that's going on",
    "start": "1183200",
    "end": "1185919"
  },
  {
    "text": "and so during startup there's this kind",
    "start": "1185919",
    "end": "1188320"
  },
  {
    "text": "of uh",
    "start": "1188320",
    "end": "1190120"
  },
  {
    "text": "thundering like storm of requests that",
    "start": "1190120",
    "end": "1192640"
  },
  {
    "text": "it makes to the Kubernetes API to get",
    "start": "1192640",
    "end": "1194720"
  },
  {
    "text": "information about everything whole bunch",
    "start": "1194720",
    "end": "1196720"
  },
  {
    "text": "of des serialization that needs to",
    "start": "1196720",
    "end": "1198559"
  },
  {
    "text": "happen there and then also serialization",
    "start": "1198559",
    "end": "1200720"
  },
  {
    "text": "that happens when the Damon set requests",
    "start": "1200720",
    "end": "1203200"
  },
  {
    "text": "uh information from the cache um and so",
    "start": "1203200",
    "end": "1207679"
  },
  {
    "text": "you can see here for the first minute or",
    "start": "1207679",
    "end": "1210720"
  },
  {
    "text": "so when the cache is starting resource",
    "start": "1210720",
    "end": "1214080"
  },
  {
    "text": "utilization is almost double the steady",
    "start": "1214080",
    "end": "1216000"
  },
  {
    "text": "state so that's a very important thing",
    "start": "1216000",
    "end": "1218000"
  },
  {
    "text": "make sure you're leaving headroom when",
    "start": "1218000",
    "end": "1220160"
  },
  {
    "text": "you're deploying this cache that's",
    "start": "1220160",
    "end": "1221679"
  },
  {
    "text": "something you got to think about there",
    "start": "1221679",
    "end": "1224039"
  },
  {
    "text": "um and so when you're setting your",
    "start": "1224039",
    "end": "1226559"
  },
  {
    "text": "request and limits obviously in the pod",
    "start": "1226559",
    "end": "1228880"
  },
  {
    "text": "um and uh we can see here the uh",
    "start": "1228880",
    "end": "1232720"
  },
  {
    "text": "Kubernetes app showing that yeah the the",
    "start": "1232720",
    "end": "1235360"
  },
  {
    "text": "resource utilization is is uh twice what",
    "start": "1235360",
    "end": "1238640"
  },
  {
    "text": "it would be normally uh this here we",
    "start": "1238640",
    "end": "1241440"
  },
  {
    "text": "have some uh Pyroscope profiles showing",
    "start": "1241440",
    "end": "1244960"
  },
  {
    "text": "uh this is how we kind of dove into what",
    "start": "1244960",
    "end": "1247520"
  },
  {
    "text": "was causing the space and time",
    "start": "1247520",
    "end": "1250240"
  },
  {
    "text": "complexity and we found that it was",
    "start": "1250240",
    "end": "1251919"
  },
  {
    "text": "mostly from from d serialization uh and",
    "start": "1251919",
    "end": "1255039"
  },
  {
    "text": "that's what was was causing a lot of uh",
    "start": "1255039",
    "end": "1258480"
  },
  {
    "text": "memory utilization on startup so um we",
    "start": "1258480",
    "end": "1263520"
  },
  {
    "text": "we solved that by just storing uh as",
    "start": "1263520",
    "end": "1266320"
  },
  {
    "text": "Mario mentioned just storing the",
    "start": "1266320",
    "end": "1269200"
  },
  {
    "text": "specific information that is necessary",
    "start": "1269200",
    "end": "1272400"
  },
  {
    "text": "not the whole Kubernetes object but just",
    "start": "1272400",
    "end": "1274640"
  },
  {
    "text": "the stuff that you've configured that",
    "start": "1274640",
    "end": "1276159"
  },
  {
    "text": "you want to have decorated um and",
    "start": "1276159",
    "end": "1279600"
  },
  {
    "text": "another thing that we did too was on the",
    "start": "1279600",
    "end": "1282480"
  },
  {
    "text": "uh client side we changed that to be a",
    "start": "1282480",
    "end": "1284640"
  },
  {
    "text": "gRPC subscription so that way it's",
    "start": "1284640",
    "end": "1286960"
  },
  {
    "text": "binary and the binary encodings uh",
    "start": "1286960",
    "end": "1289600"
  },
  {
    "text": "reduce the memory uh utilization of of",
    "start": "1289600",
    "end": "1292559"
  },
  {
    "text": "serialization to those those requests",
    "start": "1292559",
    "end": "1296679"
  },
  {
    "text": "um so I think in summary here the",
    "start": "1296679",
    "end": "1300559"
  },
  {
    "text": "Kubernetes API can handle a lot but like",
    "start": "1300559",
    "end": "1304240"
  },
  {
    "text": "everything in life it has",
    "start": "1304240",
    "end": "1306200"
  },
  {
    "text": "limits and our solution was to introduce",
    "start": "1306200",
    "end": "1309600"
  },
  {
    "text": "a centralized cache as as we've kind of",
    "start": "1309600",
    "end": "1312679"
  },
  {
    "text": "described and I think like a general",
    "start": "1312679",
    "end": "1315280"
  },
  {
    "text": "takeaway that you could look at here is",
    "start": "1315280",
    "end": "1318080"
  },
  {
    "text": "anytime you're deploying a Damon set",
    "start": "1318080",
    "end": "1320320"
  },
  {
    "text": "into Kubernetes you really need to think",
    "start": "1320320",
    "end": "1322320"
  },
  {
    "text": "about performance and when you're doing",
    "start": "1322320",
    "end": "1324640"
  },
  {
    "text": "that capacity planning It's not just the",
    "start": "1324640",
    "end": "1326880"
  },
  {
    "text": "time and space complexity of the",
    "start": "1326880",
    "end": "1328960"
  },
  {
    "text": "algorithms in that specific deployment",
    "start": "1328960",
    "end": "1331760"
  },
  {
    "text": "but you also need to think about the",
    "start": "1331760",
    "end": "1333440"
  },
  {
    "text": "downstream impact on the various",
    "start": "1333440",
    "end": "1336080"
  },
  {
    "text": "components like the Kubernetes API uh",
    "start": "1336080",
    "end": "1339200"
  },
  {
    "text": "and think about you know how is this",
    "start": "1339200",
    "end": "1341520"
  },
  {
    "text": "going to how is this going to affect us",
    "start": "1341520",
    "end": "1345370"
  },
  {
    "text": "[Music]",
    "start": "1345370",
    "end": "1346679"
  },
  {
    "text": "um that's the talk thank you so much",
    "start": "1346679",
    "end": "1350960"
  },
  {
    "text": "does anyone have any questions",
    "start": "1350960",
    "end": "1354919"
  },
  {
    "text": "okay uh thank you for all your work huge",
    "start": "1367200",
    "end": "1369840"
  },
  {
    "text": "fan um Baylor took one of our open shift",
    "start": "1369840",
    "end": "1373039"
  },
  {
    "text": "clusters down too um when did you",
    "start": "1373039",
    "end": "1375360"
  },
  {
    "text": "introduce this change we started using",
    "start": "1375360",
    "end": "1377280"
  },
  {
    "text": "with Baylor 2.0 I think m uh this this",
    "start": "1377280",
    "end": "1382320"
  },
  {
    "text": "was I think this change uh was before",
    "start": "1382320",
    "end": "1385919"
  },
  {
    "text": "was released in BA 2.9 I 1.9 or 2.0 but",
    "start": "1385919",
    "end": "1389919"
  },
  {
    "text": "you need to en enable it uh on purpose",
    "start": "1389919",
    "end": "1393120"
  },
  {
    "text": "so by default BA will still run in in",
    "start": "1393120",
    "end": "1396880"
  },
  {
    "text": "the old mode but uh if you are for",
    "start": "1396880",
    "end": "1399440"
  },
  {
    "text": "example using the Helm chart uh there is",
    "start": "1399440",
    "end": "1402880"
  },
  {
    "text": "an option uh that is bail catch your",
    "start": "1402880",
    "end": "1407600"
  },
  {
    "text": "instances or so on that if if that if",
    "start": "1407600",
    "end": "1410960"
  },
  {
    "text": "that number provided is different than",
    "start": "1410960",
    "end": "1413280"
  },
  {
    "text": "zero it will",
    "start": "1413280",
    "end": "1414679"
  },
  {
    "text": "automatically deploy that cache instance",
    "start": "1414679",
    "end": "1417840"
  },
  {
    "text": "and configure BA to connect to it thank",
    "start": "1417840",
    "end": "1420799"
  },
  {
    "text": "you",
    "start": "1420799",
    "end": "1423440"
  },
  {
    "text": "yeah okay in the meanwhile if there is",
    "start": "1427240",
    "end": "1429919"
  },
  {
    "text": "another question uh this cache is is an",
    "start": "1429919",
    "end": "1433120"
  },
  {
    "text": "independent component we designing it",
    "start": "1433120",
    "end": "1435520"
  },
  {
    "text": "for BA but I think it covers some use",
    "start": "1435520",
    "end": "1439280"
  },
  {
    "text": "cases from other teams that I' I've met",
    "start": "1439280",
    "end": "1443039"
  },
  {
    "text": "here other people having the same",
    "start": "1443039",
    "end": "1444559"
  },
  {
    "text": "problem with informers and and and API",
    "start": "1444559",
    "end": "1448880"
  },
  {
    "text": "starvation so it's it's it's an open",
    "start": "1448880",
    "end": "1451279"
  },
  {
    "text": "service with a an open protocol with",
    "start": "1451279",
    "end": "1454520"
  },
  {
    "text": "libraries so it it can be also useful in",
    "start": "1454520",
    "end": "1457919"
  },
  {
    "text": "addition to baila even if you are not",
    "start": "1457919",
    "end": "1459760"
  },
  {
    "text": "using it for baila for",
    "start": "1459760",
    "end": "1463360"
  },
  {
    "text": "you okay so thank you for your attention",
    "start": "1467880",
    "end": "1473039"
  },
  {
    "text": "thank you so much",
    "start": "1473039",
    "end": "1476559"
  }
]