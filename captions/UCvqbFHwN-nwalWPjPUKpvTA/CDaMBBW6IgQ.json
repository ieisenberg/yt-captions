[
  {
    "text": "okay thank you everyone and Welcome to",
    "start": "960",
    "end": "3360"
  },
  {
    "text": "our talk on API server only clusters for",
    "start": "3360",
    "end": "7080"
  },
  {
    "text": "fun and hopefully for some profit",
    "start": "7080",
    "end": "9780"
  },
  {
    "text": "so to introduce us my name is Matt",
    "start": "9780",
    "end": "11760"
  },
  {
    "text": "Turner I'm a software engineer at",
    "start": "11760",
    "end": "13200"
  },
  {
    "text": "tetrate and we have my esteemed",
    "start": "13200",
    "end": "15780"
  },
  {
    "text": "inestinable",
    "start": "15780",
    "end": "17460"
  },
  {
    "text": "colleague uh head of platform former",
    "start": "17460",
    "end": "20699"
  },
  {
    "text": "istio maintainer software engineer very",
    "start": "20699",
    "end": "22920"
  },
  {
    "text": "embarrassed person Liam White",
    "start": "22920",
    "end": "24779"
  },
  {
    "text": "so yeah we both work at tetrate which is",
    "start": "24779",
    "end": "27000"
  },
  {
    "text": "a company that uses service mesh to do",
    "start": "27000",
    "end": "29340"
  },
  {
    "text": "identity based application micro",
    "start": "29340",
    "end": "30900"
  },
  {
    "text": "segmentation uh sort of Enterprise scale",
    "start": "30900",
    "end": "33420"
  },
  {
    "text": "so for high Insurance environments",
    "start": "33420",
    "end": "36000"
  },
  {
    "text": "um dealing with the organizational and",
    "start": "36000",
    "end": "38760"
  },
  {
    "text": "Technical scaling problems that you'll",
    "start": "38760",
    "end": "40140"
  },
  {
    "text": "have trying to do hybrid cloud",
    "start": "40140",
    "end": "41340"
  },
  {
    "text": "multi-region and xero Trust at Large",
    "start": "41340",
    "end": "43980"
  },
  {
    "text": "Scale so we know I guess a fair amount",
    "start": "43980",
    "end": "46200"
  },
  {
    "text": "about istio and kubernetes and we've uh",
    "start": "46200",
    "end": "48780"
  },
  {
    "text": "hopefully got an interesting talk for",
    "start": "48780",
    "end": "49920"
  },
  {
    "text": "you today based on those Tech",
    "start": "49920",
    "end": "53059"
  },
  {
    "text": "so let's remind ourselves first how a",
    "start": "54120",
    "end": "56039"
  },
  {
    "text": "kubernetes cluster hangs together uh",
    "start": "56039",
    "end": "57600"
  },
  {
    "text": "apologies to the kubernetes experts in",
    "start": "57600",
    "end": "59460"
  },
  {
    "text": "the room I see some some literal",
    "start": "59460",
    "end": "60600"
  },
  {
    "text": "Upstream uh contributors in the audience",
    "start": "60600",
    "end": "62699"
  },
  {
    "text": "but I need to do this to get us all",
    "start": "62699",
    "end": "64680"
  },
  {
    "text": "speaking the same language and this is",
    "start": "64680",
    "end": "65939"
  },
  {
    "text": "maybe a mental model that not everybody",
    "start": "65939",
    "end": "67619"
  },
  {
    "text": "has so this is uh I guess this is a",
    "start": "67619",
    "end": "71159"
  },
  {
    "text": "diagram of a classic kubernetes cluster",
    "start": "71159",
    "end": "73560"
  },
  {
    "text": "exploded with all the components of the",
    "start": "73560",
    "end": "75600"
  },
  {
    "text": "control plane for folks who've not seen",
    "start": "75600",
    "end": "76799"
  },
  {
    "text": "them before so let's just run through an",
    "start": "76799",
    "end": "78900"
  },
  {
    "text": "example right so if I submit a",
    "start": "78900",
    "end": "80400"
  },
  {
    "text": "deployment",
    "start": "80400",
    "end": "81299"
  },
  {
    "text": "I write some yaml because it's",
    "start": "81299",
    "end": "83040"
  },
  {
    "text": "kubernetes that's what we do and I",
    "start": "83040",
    "end": "85200"
  },
  {
    "text": "submit that yaml file into the cluster",
    "start": "85200",
    "end": "87900"
  },
  {
    "text": "via the API",
    "start": "87900",
    "end": "90479"
  },
  {
    "text": "so first of all we hit the API server",
    "start": "90479",
    "end": "92460"
  },
  {
    "text": "right the thing that serves the API and",
    "start": "92460",
    "end": "94439"
  },
  {
    "text": "our request is authenticated you know",
    "start": "94439",
    "end": "96119"
  },
  {
    "text": "are you a user of this cluster can you",
    "start": "96119",
    "end": "97680"
  },
  {
    "text": "prove it",
    "start": "97680",
    "end": "98820"
  },
  {
    "text": "then it's validated in some other ways",
    "start": "98820",
    "end": "101460"
  },
  {
    "text": "uh some authenticate some authorization",
    "start": "101460",
    "end": "103560"
  },
  {
    "text": "sorry happens you know okay I know who",
    "start": "103560",
    "end": "105240"
  },
  {
    "text": "you are now do you have permission to",
    "start": "105240",
    "end": "106860"
  },
  {
    "text": "create new deployments and then",
    "start": "106860",
    "end": "109439"
  },
  {
    "text": "eventually this deployment is is",
    "start": "109439",
    "end": "111420"
  },
  {
    "text": "serialized and written to the database",
    "start": "111420",
    "end": "113579"
  },
  {
    "text": "and at this point there's kind of a",
    "start": "113579",
    "end": "114960"
  },
  {
    "text": "pause there's no more synchronous",
    "start": "114960",
    "end": "116460"
  },
  {
    "text": "actions that take place this resources",
    "start": "116460",
    "end": "118560"
  },
  {
    "text": "you know at rest in the database it's",
    "start": "118560",
    "end": "120540"
  },
  {
    "text": "stored persistently it's actually",
    "start": "120540",
    "end": "121979"
  },
  {
    "text": "encoded us some protobufs and it sort of",
    "start": "121979",
    "end": "123720"
  },
  {
    "text": "sits there",
    "start": "123720",
    "end": "125040"
  },
  {
    "text": "now at this point the deployment",
    "start": "125040",
    "end": "126479"
  },
  {
    "text": "controller which is a piece of code this",
    "start": "126479",
    "end": "128819"
  },
  {
    "text": "has a watch on that type of resource in",
    "start": "128819",
    "end": "130739"
  },
  {
    "text": "the database and it wakes up and it",
    "start": "130739",
    "end": "132780"
  },
  {
    "text": "processes it now I'm using controller in",
    "start": "132780",
    "end": "135239"
  },
  {
    "text": "this case as a kind of abstract term I",
    "start": "135239",
    "end": "137819"
  },
  {
    "text": "mean like a particular Loop of code that",
    "start": "137819",
    "end": "139620"
  },
  {
    "text": "runs and processes this kind of resource",
    "start": "139620",
    "end": "141840"
  },
  {
    "text": "uh physically this Loop of code is in",
    "start": "141840",
    "end": "144239"
  },
  {
    "text": "the controller manager component",
    "start": "144239",
    "end": "145680"
  },
  {
    "text": "alongside a lot of other Loops of code",
    "start": "145680",
    "end": "147480"
  },
  {
    "text": "uh Liam's going to talk a little bit",
    "start": "147480",
    "end": "148920"
  },
  {
    "text": "more about what we actually mean by by",
    "start": "148920",
    "end": "150720"
  },
  {
    "text": "controller later",
    "start": "150720",
    "end": "152160"
  },
  {
    "text": "so like all controllers the deployment",
    "start": "152160",
    "end": "153780"
  },
  {
    "text": "controller you know reconciles its input",
    "start": "153780",
    "end": "155640"
  },
  {
    "text": "so it takes its input which is this",
    "start": "155640",
    "end": "157140"
  },
  {
    "text": "deployment resource and it reconciles it",
    "start": "157140",
    "end": "159300"
  },
  {
    "text": "with the state of the world so in this",
    "start": "159300",
    "end": "160920"
  },
  {
    "text": "case what it's going to do is it's going",
    "start": "160920",
    "end": "162300"
  },
  {
    "text": "to make a new replica set resource and",
    "start": "162300",
    "end": "164459"
  },
  {
    "text": "add that back into the API server now",
    "start": "164459",
    "end": "166860"
  },
  {
    "text": "that goes in the front door just like",
    "start": "166860",
    "end": "168599"
  },
  {
    "text": "your cubectal command or anything else",
    "start": "168599",
    "end": "171660"
  },
  {
    "text": "would do so this goes through the API",
    "start": "171660",
    "end": "173700"
  },
  {
    "text": "server through the same set of",
    "start": "173700",
    "end": "174900"
  },
  {
    "text": "verifications and authentication and",
    "start": "174900",
    "end": "177000"
  },
  {
    "text": "authorization that anything else does",
    "start": "177000",
    "end": "178560"
  },
  {
    "text": "it's the same path so once it's",
    "start": "178560",
    "end": "180360"
  },
  {
    "text": "traversed the API server if it's okay",
    "start": "180360",
    "end": "182099"
  },
  {
    "text": "then it'll go and again sit in the",
    "start": "182099",
    "end": "184560"
  },
  {
    "text": "database",
    "start": "184560",
    "end": "186060"
  },
  {
    "text": "so we have another controller the",
    "start": "186060",
    "end": "187440"
  },
  {
    "text": "replica set controller physically in the",
    "start": "187440",
    "end": "189599"
  },
  {
    "text": "controller manager but a separate Loop",
    "start": "189599",
    "end": "190980"
  },
  {
    "text": "of code that wakes up reconciles the",
    "start": "190980",
    "end": "193920"
  },
  {
    "text": "replica set to a pod which is again fed",
    "start": "193920",
    "end": "196080"
  },
  {
    "text": "back into the system",
    "start": "196080",
    "end": "197459"
  },
  {
    "text": "now this pod so let's node name the",
    "start": "197459",
    "end": "199620"
  },
  {
    "text": "field that I've shown there so this part",
    "start": "199620",
    "end": "201000"
  },
  {
    "text": "has a its node name field set to nil",
    "start": "201000",
    "end": "203040"
  },
  {
    "text": "because the replica set controller knows",
    "start": "203040",
    "end": "205319"
  },
  {
    "text": "that it wants a pod running but it",
    "start": "205319",
    "end": "207060"
  },
  {
    "text": "doesn't care where like that's that's",
    "start": "207060",
    "end": "208440"
  },
  {
    "text": "not actually its job so it just says hey",
    "start": "208440",
    "end": "210300"
  },
  {
    "text": "I've got no opinion on that and go do it",
    "start": "210300",
    "end": "212879"
  },
  {
    "text": "so",
    "start": "212879",
    "end": "214260"
  },
  {
    "text": "depends at the scheduler now the",
    "start": "214260",
    "end": "215760"
  },
  {
    "text": "scheduler is another controller it",
    "start": "215760",
    "end": "217980"
  },
  {
    "text": "actually physically runs separately for",
    "start": "217980",
    "end": "219720"
  },
  {
    "text": "reasons and it has a watch on pods uh",
    "start": "219720",
    "end": "222720"
  },
  {
    "text": "specifically pods so sorry so the Pod",
    "start": "222720",
    "end": "224459"
  },
  {
    "text": "gets you know sat in the database with",
    "start": "224459",
    "end": "226140"
  },
  {
    "text": "its nil node name field the scheduler",
    "start": "226140",
    "end": "228000"
  },
  {
    "text": "wakes up and processes it because it's",
    "start": "228000",
    "end": "229319"
  },
  {
    "text": "got a watch on pods specifically with a",
    "start": "229319",
    "end": "231840"
  },
  {
    "text": "nil node name field it does some logic",
    "start": "231840",
    "end": "234599"
  },
  {
    "text": "to work out you know where to place them",
    "start": "234599",
    "end": "235920"
  },
  {
    "text": "what that no Nation be and its",
    "start": "235920",
    "end": "237840"
  },
  {
    "text": "reconciliation is to put the Pod you",
    "start": "237840",
    "end": "240000"
  },
  {
    "text": "know back in the system with that node",
    "start": "240000",
    "end": "242099"
  },
  {
    "text": "chosen with that node name feel filled",
    "start": "242099",
    "end": "243720"
  },
  {
    "text": "out",
    "start": "243720",
    "end": "244560"
  },
  {
    "text": "um so this isn't a new resource in this",
    "start": "244560",
    "end": "246060"
  },
  {
    "text": "case this is a patch an update to one",
    "start": "246060",
    "end": "247560"
  },
  {
    "text": "but it's it's still reconciliation",
    "start": "247560",
    "end": "249659"
  },
  {
    "text": "so when this is back in the database",
    "start": "249659",
    "end": "252180"
  },
  {
    "text": "it's a rest again yet another controller",
    "start": "252180",
    "end": "254280"
  },
  {
    "text": "kicks in this one is the cubelet so the",
    "start": "254280",
    "end": "257160"
  },
  {
    "text": "cubelet wakes up and picks this thing up",
    "start": "257160",
    "end": "258660"
  },
  {
    "text": "and as I say the cubelet is if you look",
    "start": "258660",
    "end": "260459"
  },
  {
    "text": "at it that way I control it too it",
    "start": "260459",
    "end": "262680"
  },
  {
    "text": "reconciles pods scheduled pods you know",
    "start": "262680",
    "end": "265020"
  },
  {
    "text": "with a with a non-nil node name field",
    "start": "265020",
    "end": "266580"
  },
  {
    "text": "into containers running on uh the",
    "start": "266580",
    "end": "269460"
  },
  {
    "text": "cubelets working node so in this case",
    "start": "269460",
    "end": "271620"
  },
  {
    "text": "the cubelet on this node has a watch for",
    "start": "271620",
    "end": "273660"
  },
  {
    "text": "pods with the no-name field set to node",
    "start": "273660",
    "end": "275280"
  },
  {
    "text": "one picks it up and reconciles it into",
    "start": "275280",
    "end": "278040"
  },
  {
    "text": "actual running containers",
    "start": "278040",
    "end": "280139"
  },
  {
    "text": "so just to get that pod running we saw",
    "start": "280139",
    "end": "282000"
  },
  {
    "text": "four controllers reconciling things one",
    "start": "282000",
    "end": "283800"
  },
  {
    "text": "after another actually feeding into each",
    "start": "283800",
    "end": "285419"
  },
  {
    "text": "other there's also the endpoint",
    "start": "285419",
    "end": "286979"
  },
  {
    "text": "controller that reconcile Services into",
    "start": "286979",
    "end": "288840"
  },
  {
    "text": "endpoint resources uh and Q proxy can be",
    "start": "288840",
    "end": "291900"
  },
  {
    "text": "thought of as a controller that",
    "start": "291900",
    "end": "292919"
  },
  {
    "text": "reconciles those endpoint resources into",
    "start": "292919",
    "end": "294840"
  },
  {
    "text": "iptables rules so that's another two",
    "start": "294840",
    "end": "297060"
  },
  {
    "text": "controllers just to enable the sort of",
    "start": "297060",
    "end": "298740"
  },
  {
    "text": "basic yeah deploy a workload and make it",
    "start": "298740",
    "end": "300900"
  },
  {
    "text": "accessible kind of functionality so this",
    "start": "300900",
    "end": "302940"
  },
  {
    "text": "is this is how I personally like to",
    "start": "302940",
    "end": "304259"
  },
  {
    "text": "reason about kubernetes you know if you",
    "start": "304259",
    "end": "305759"
  },
  {
    "text": "if this is new to you you take nothing",
    "start": "305759",
    "end": "307199"
  },
  {
    "text": "else away from this talk that's that's",
    "start": "307199",
    "end": "308460"
  },
  {
    "text": "hopefully a useful model it really helps",
    "start": "308460",
    "end": "310320"
  },
  {
    "text": "when when things get stuck and when",
    "start": "310320",
    "end": "311880"
  },
  {
    "text": "you're trying to debug the system",
    "start": "311880",
    "end": "313740"
  },
  {
    "text": "so apart from that database and the API",
    "start": "313740",
    "end": "316620"
  },
  {
    "text": "server that's kind of brokering access",
    "start": "316620",
    "end": "318060"
  },
  {
    "text": "to it like being a front end to it I",
    "start": "318060",
    "end": "319919"
  },
  {
    "text": "would say that everything is a",
    "start": "319919",
    "end": "321000"
  },
  {
    "text": "controller right so there's one",
    "start": "321000",
    "end": "322800"
  },
  {
    "text": "controller per type of resource and they",
    "start": "322800",
    "end": "325740"
  },
  {
    "text": "reconcile those resources into other",
    "start": "325740",
    "end": "327180"
  },
  {
    "text": "types of things maybe other resources or",
    "start": "327180",
    "end": "329759"
  },
  {
    "text": "maybe external things right maybe",
    "start": "329759",
    "end": "331259"
  },
  {
    "text": "containers uh on nodes maybe IP chains",
    "start": "331259",
    "end": "334199"
  },
  {
    "text": "this is the beauty of kubernetes this is",
    "start": "334199",
    "end": "336360"
  },
  {
    "text": "what makes it asynchronous and",
    "start": "336360",
    "end": "337440"
  },
  {
    "text": "declarative there's actually nothing to",
    "start": "337440",
    "end": "339479"
  },
  {
    "text": "stop you interacting with any of these",
    "start": "339479",
    "end": "340800"
  },
  {
    "text": "resources at any level by the way so you",
    "start": "340800",
    "end": "342419"
  },
  {
    "text": "can deploy like a pre-schedule pod with",
    "start": "342419",
    "end": "344580"
  },
  {
    "text": "the node name field set you can deploy",
    "start": "344580",
    "end": "346020"
  },
  {
    "text": "your own endpoints uh and it'll it'll",
    "start": "346020",
    "end": "348240"
  },
  {
    "text": "just work it's uh it's what you know",
    "start": "348240",
    "end": "350100"
  },
  {
    "text": "it's one of the things the cka actually",
    "start": "350100",
    "end": "351479"
  },
  {
    "text": "tests you on but you normally use those",
    "start": "351479",
    "end": "353520"
  },
  {
    "text": "higher levels of abstraction",
    "start": "353520",
    "end": "355080"
  },
  {
    "text": "but controllers aren't you know they're",
    "start": "355080",
    "end": "357180"
  },
  {
    "text": "very powerful here uh they but they",
    "start": "357180",
    "end": "359039"
  },
  {
    "text": "certainly weren't invented by kubernetes",
    "start": "359039",
    "end": "360240"
  },
  {
    "text": "they're not just a kubernetes thing so",
    "start": "360240",
    "end": "361860"
  },
  {
    "text": "they're just going to talk uh in more",
    "start": "361860",
    "end": "363180"
  },
  {
    "text": "general terms about controllers as we",
    "start": "363180",
    "end": "366240"
  },
  {
    "text": "look to stretch this pattern a little",
    "start": "366240",
    "end": "369740"
  },
  {
    "text": "okay",
    "start": "373139",
    "end": "374520"
  },
  {
    "text": "she's probably speaking something like",
    "start": "374520",
    "end": "375600"
  },
  {
    "text": "that huh so some of you uh may be aware",
    "start": "375600",
    "end": "378120"
  },
  {
    "text": "that kubernetes uh let's let's go",
    "start": "378120",
    "end": "380039"
  },
  {
    "text": "borrowed the concept of uh controllers",
    "start": "380039",
    "end": "382680"
  },
  {
    "text": "and more specifically control loops from",
    "start": "382680",
    "end": "385199"
  },
  {
    "text": "industrial Control Systems so unless you",
    "start": "385199",
    "end": "387960"
  },
  {
    "text": "live in a cabin in the woods uh you come",
    "start": "387960",
    "end": "390060"
  },
  {
    "text": "into contact with several control loops",
    "start": "390060",
    "end": "391979"
  },
  {
    "text": "every day",
    "start": "391979",
    "end": "392880"
  },
  {
    "text": "so there's one controlling the",
    "start": "392880",
    "end": "395160"
  },
  {
    "text": "temperature in this room most likely and",
    "start": "395160",
    "end": "397199"
  },
  {
    "text": "uh one is actually keeping me alive so",
    "start": "397199",
    "end": "399780"
  },
  {
    "text": "this is an insulin pump for those",
    "start": "399780",
    "end": "401699"
  },
  {
    "text": "unfamiliar with the endocrine system in",
    "start": "401699",
    "end": "404039"
  },
  {
    "text": "your body which is the system that this",
    "start": "404039",
    "end": "405900"
  },
  {
    "text": "manages our bodies have to maintain a",
    "start": "405900",
    "end": "408660"
  },
  {
    "text": "certain uh range of glucose in the",
    "start": "408660",
    "end": "411060"
  },
  {
    "text": "bloodstream if that goes too low the",
    "start": "411060",
    "end": "414060"
  },
  {
    "text": "brain doesn't have enough energy to or",
    "start": "414060",
    "end": "415800"
  },
  {
    "text": "fuel to actually do anything and you can",
    "start": "415800",
    "end": "418080"
  },
  {
    "text": "probably guess what happens if that",
    "start": "418080",
    "end": "419639"
  },
  {
    "text": "happens and if it goes too high it",
    "start": "419639",
    "end": "421979"
  },
  {
    "text": "basically damages your internal organs",
    "start": "421979",
    "end": "423840"
  },
  {
    "text": "and that's kind of what type 2 diabetes",
    "start": "423840",
    "end": "425819"
  },
  {
    "text": "is that's why you get some of those side",
    "start": "425819",
    "end": "428100"
  },
  {
    "text": "effects so the side effects are things",
    "start": "428100",
    "end": "429840"
  },
  {
    "text": "like blindness uh weakened immune system",
    "start": "429840",
    "end": "432479"
  },
  {
    "text": "and eventually you know it leads to the",
    "start": "432479",
    "end": "435240"
  },
  {
    "text": "same outcome as going too low",
    "start": "435240",
    "end": "438660"
  },
  {
    "text": "so I have type 1 diabetes which",
    "start": "438660",
    "end": "440819"
  },
  {
    "text": "basically means my immune system attacks",
    "start": "440819",
    "end": "442919"
  },
  {
    "text": "my pancreas and so my body is unable to",
    "start": "442919",
    "end": "446340"
  },
  {
    "text": "produce insulin to lower my blood sugar",
    "start": "446340",
    "end": "448680"
  },
  {
    "text": "so instead I have the insulin pump which",
    "start": "448680",
    "end": "451319"
  },
  {
    "text": "is a control Loop",
    "start": "451319",
    "end": "454520"
  },
  {
    "text": "so",
    "start": "455699",
    "end": "456840"
  },
  {
    "text": "it has a pumping mechanism which is you",
    "start": "456840",
    "end": "459599"
  },
  {
    "text": "know the thing actually working on this",
    "start": "459599",
    "end": "461340"
  },
  {
    "text": "device that the kind of like core",
    "start": "461340",
    "end": "463259"
  },
  {
    "text": "process that it does it doses the",
    "start": "463259",
    "end": "465479"
  },
  {
    "text": "insulin it is the system element in this",
    "start": "465479",
    "end": "468060"
  },
  {
    "text": "diagram",
    "start": "468060",
    "end": "468960"
  },
  {
    "text": "it has the controller running on the",
    "start": "468960",
    "end": "471120"
  },
  {
    "text": "pump which is the algorithm basically",
    "start": "471120",
    "end": "473699"
  },
  {
    "text": "that identifies when my blood sugar is",
    "start": "473699",
    "end": "475380"
  },
  {
    "text": "out of range and then adjust my insulin",
    "start": "475380",
    "end": "478259"
  },
  {
    "text": "dose based on that and then finally if I",
    "start": "478259",
    "end": "481560"
  },
  {
    "text": "can get access to it I have a sensor on",
    "start": "481560",
    "end": "483720"
  },
  {
    "text": "the back of my arm here and that",
    "start": "483720",
    "end": "485940"
  },
  {
    "text": "communicates with the pump and access",
    "start": "485940",
    "end": "487380"
  },
  {
    "text": "the sensor in this control Loop",
    "start": "487380",
    "end": "490500"
  },
  {
    "text": "um",
    "start": "490500",
    "end": "491160"
  },
  {
    "text": "and actually the pattern this pattern of",
    "start": "491160",
    "end": "493620"
  },
  {
    "text": "sensor controller and system is so",
    "start": "493620",
    "end": "495840"
  },
  {
    "text": "common that the different parts of this",
    "start": "495840",
    "end": "497520"
  },
  {
    "text": "particular control Loop are actually",
    "start": "497520",
    "end": "499319"
  },
  {
    "text": "regulated based on this model so the FDA",
    "start": "499319",
    "end": "502020"
  },
  {
    "text": "which is the pharmaceutical regulations",
    "start": "502020",
    "end": "504840"
  },
  {
    "text": "body in the U.S explicitly gets medical",
    "start": "504840",
    "end": "507720"
  },
  {
    "text": "companies to approve each of these boxes",
    "start": "507720",
    "end": "510780"
  },
  {
    "text": "individually so in my Loop the sensor is",
    "start": "510780",
    "end": "514500"
  },
  {
    "text": "developed by a company called Dexcom and",
    "start": "514500",
    "end": "516539"
  },
  {
    "text": "then the pump is developed and the",
    "start": "516539",
    "end": "518039"
  },
  {
    "text": "algorithm actually is developed by a",
    "start": "518039",
    "end": "519360"
  },
  {
    "text": "company called tandem but when they go",
    "start": "519360",
    "end": "521099"
  },
  {
    "text": "through FDA regulation they have to go",
    "start": "521099",
    "end": "522659"
  },
  {
    "text": "through it twice for each of those",
    "start": "522659",
    "end": "523800"
  },
  {
    "text": "different things",
    "start": "523800",
    "end": "525540"
  },
  {
    "text": "and we can actually go even further and",
    "start": "525540",
    "end": "527820"
  },
  {
    "text": "say that this pattern occurs in nature",
    "start": "527820",
    "end": "529620"
  },
  {
    "text": "right because all of this external stuff",
    "start": "529620",
    "end": "532080"
  },
  {
    "text": "I have keeping me alive everyone in this",
    "start": "532080",
    "end": "534360"
  },
  {
    "text": "room has it internally right thanks to",
    "start": "534360",
    "end": "536820"
  },
  {
    "text": "millions of years of evolution they've",
    "start": "536820",
    "end": "538680"
  },
  {
    "text": "eventually ended up with a sort of",
    "start": "538680",
    "end": "540959"
  },
  {
    "text": "control Loop that manages this kind of",
    "start": "540959",
    "end": "543360"
  },
  {
    "text": "automatically for you",
    "start": "543360",
    "end": "546320"
  },
  {
    "text": "um and all of this is kind of to make",
    "start": "546540",
    "end": "548940"
  },
  {
    "text": "the point that these patterns are well",
    "start": "548940",
    "end": "550500"
  },
  {
    "text": "known they're widely used and they're",
    "start": "550500",
    "end": "552240"
  },
  {
    "text": "not unique to kubernetes and given it",
    "start": "552240",
    "end": "554459"
  },
  {
    "text": "given that they occur naturally in",
    "start": "554459",
    "end": "556500"
  },
  {
    "text": "nature by Revolution you could maybe",
    "start": "556500",
    "end": "558839"
  },
  {
    "text": "even argue that that actually is",
    "start": "558839",
    "end": "560220"
  },
  {
    "text": "actually a universal pattern it's not",
    "start": "560220",
    "end": "562140"
  },
  {
    "text": "just like an engineering thing",
    "start": "562140",
    "end": "564120"
  },
  {
    "text": "so if we go back to our deployment",
    "start": "564120",
    "end": "566220"
  },
  {
    "text": "example",
    "start": "566220",
    "end": "567600"
  },
  {
    "text": "um the in in our case the sensor well",
    "start": "567600",
    "end": "570120"
  },
  {
    "text": "the sensor is the API server you can",
    "start": "570120",
    "end": "572399"
  },
  {
    "text": "kind of argue semantics there uh the",
    "start": "572399",
    "end": "574440"
  },
  {
    "text": "controller is obviously the deployment",
    "start": "574440",
    "end": "575820"
  },
  {
    "text": "controller there's a reason their names",
    "start": "575820",
    "end": "577500"
  },
  {
    "text": "controllers and the system is kind of",
    "start": "577500",
    "end": "579899"
  },
  {
    "text": "the combination of the replica set",
    "start": "579899",
    "end": "581580"
  },
  {
    "text": "controller the Kubler the Pod controller",
    "start": "581580",
    "end": "583860"
  },
  {
    "text": "the nodes basically everything that's",
    "start": "583860",
    "end": "585839"
  },
  {
    "text": "responsible for making sure that that",
    "start": "585839",
    "end": "588120"
  },
  {
    "text": "container ends up actually getting run",
    "start": "588120",
    "end": "590760"
  },
  {
    "text": "and the nice thing about kubernetes is",
    "start": "590760",
    "end": "592980"
  },
  {
    "text": "that early on the community realized",
    "start": "592980",
    "end": "595140"
  },
  {
    "text": "that if they can make this pattern",
    "start": "595140",
    "end": "597720"
  },
  {
    "text": "extensible if they can make make it so",
    "start": "597720",
    "end": "600180"
  },
  {
    "text": "that anyone can use it then",
    "start": "600180",
    "end": "603240"
  },
  {
    "text": "basically anyone can write code that",
    "start": "603240",
    "end": "605339"
  },
  {
    "text": "will leverage this framework and that's",
    "start": "605339",
    "end": "606839"
  },
  {
    "text": "kind of the origin story for crds and",
    "start": "606839",
    "end": "609360"
  },
  {
    "text": "one example of a project that leverages",
    "start": "609360",
    "end": "611399"
  },
  {
    "text": "this extensibility in particular is",
    "start": "611399",
    "end": "613920"
  },
  {
    "text": "istio",
    "start": "613920",
    "end": "615720"
  },
  {
    "text": "so when the idea of that would",
    "start": "615720",
    "end": "617940"
  },
  {
    "text": "eventually become istio was being formed",
    "start": "617940",
    "end": "619800"
  },
  {
    "text": "there was some discussion uh about",
    "start": "619800",
    "end": "622620"
  },
  {
    "text": "whether or not it should be in the core",
    "start": "622620",
    "end": "624180"
  },
  {
    "text": "kubernetes project whether it should be",
    "start": "624180",
    "end": "625800"
  },
  {
    "text": "at separate projects but because",
    "start": "625800",
    "end": "627480"
  },
  {
    "text": "kubernetes had already done the work to",
    "start": "627480",
    "end": "629760"
  },
  {
    "text": "externalize this control Loop framework",
    "start": "629760",
    "end": "632180"
  },
  {
    "text": "it was much easier for it to kind of act",
    "start": "632180",
    "end": "634620"
  },
  {
    "text": "as a standalone project",
    "start": "634620",
    "end": "637080"
  },
  {
    "text": "istio is built using the same controller",
    "start": "637080",
    "end": "639660"
  },
  {
    "text": "kind of pattern as my insulin pump but",
    "start": "639660",
    "end": "642240"
  },
  {
    "text": "istio actually isn't a closed loop like",
    "start": "642240",
    "end": "644399"
  },
  {
    "text": "my insulin pump is so in a closed loop",
    "start": "644399",
    "end": "647220"
  },
  {
    "text": "feedback is for a lack of a better term",
    "start": "647220",
    "end": "649620"
  },
  {
    "text": "fed back as an input into the system",
    "start": "649620",
    "end": "651600"
  },
  {
    "text": "whereas in istio input is solely from",
    "start": "651600",
    "end": "655380"
  },
  {
    "text": "the API server",
    "start": "655380",
    "end": "657300"
  },
  {
    "text": "so it watches the API server for",
    "start": "657300",
    "end": "659940"
  },
  {
    "text": "endpoints and services and obviously all",
    "start": "659940",
    "end": "662459"
  },
  {
    "text": "the istiocrs so virtual service",
    "start": "662459",
    "end": "664880"
  },
  {
    "text": "destination rule that type of stuff and",
    "start": "664880",
    "end": "667620"
  },
  {
    "text": "then it configures a fleet of envoys",
    "start": "667620",
    "end": "669480"
  },
  {
    "text": "based on that information so it's still",
    "start": "669480",
    "end": "672120"
  },
  {
    "text": "it's still that same control loop it's",
    "start": "672120",
    "end": "673680"
  },
  {
    "text": "just open not closed",
    "start": "673680",
    "end": "676920"
  },
  {
    "text": "and the reason that it's open is because",
    "start": "676920",
    "end": "678660"
  },
  {
    "text": "those envoys never feed back into the",
    "start": "678660",
    "end": "680760"
  },
  {
    "text": "state of the system right so they don't",
    "start": "680760",
    "end": "682380"
  },
  {
    "text": "impact endpoints they don't Impact",
    "start": "682380",
    "end": "684000"
  },
  {
    "text": "Services right they respond on those",
    "start": "684000",
    "end": "686339"
  },
  {
    "text": "addresses but they don't actually uh",
    "start": "686339",
    "end": "688440"
  },
  {
    "text": "there's no kind of like full circle",
    "start": "688440",
    "end": "689880"
  },
  {
    "text": "sneaking as tail type thing",
    "start": "689880",
    "end": "692940"
  },
  {
    "text": "and istio but istio is just one example",
    "start": "692940",
    "end": "694980"
  },
  {
    "text": "of a controller right there are smaller",
    "start": "694980",
    "end": "696720"
  },
  {
    "text": "more Scopes custom controllers like cert",
    "start": "696720",
    "end": "698820"
  },
  {
    "text": "manager and external DNS or there are",
    "start": "698820",
    "end": "702120"
  },
  {
    "text": "larger ones like uh cross plane which",
    "start": "702120",
    "end": "704519"
  },
  {
    "text": "allows you to kind of provision all of",
    "start": "704519",
    "end": "706500"
  },
  {
    "text": "your Cloud infrastructure using uh using",
    "start": "706500",
    "end": "709620"
  },
  {
    "text": "that same control Loop framework which",
    "start": "709620",
    "end": "711899"
  },
  {
    "text": "brings us back to Matt who is going to",
    "start": "711899",
    "end": "713820"
  },
  {
    "text": "discuss just how far we can push this",
    "start": "713820",
    "end": "715740"
  },
  {
    "text": "patenting Coupe",
    "start": "715740",
    "end": "717660"
  },
  {
    "text": "thanks so this only one of these is on",
    "start": "717660",
    "end": "720660"
  },
  {
    "text": "so this was the the original idea",
    "start": "720660",
    "end": "722220"
  },
  {
    "text": "actually I was using cross plane you",
    "start": "722220",
    "end": "723480"
  },
  {
    "text": "know I'm a big fan and I was just using",
    "start": "723480",
    "end": "725519"
  },
  {
    "text": "it to spin up a cloud cluster quite a",
    "start": "725519",
    "end": "727140"
  },
  {
    "text": "quite a simple use case but for folks",
    "start": "727140",
    "end": "729420"
  },
  {
    "text": "who haven't used it like unlike",
    "start": "729420",
    "end": "730440"
  },
  {
    "text": "terraform or palumi you actually need a",
    "start": "730440",
    "end": "732600"
  },
  {
    "text": "cross a cluster to run cross-plate in",
    "start": "732600",
    "end": "734820"
  },
  {
    "text": "right so I had I had a bootstrap problem",
    "start": "734820",
    "end": "736560"
  },
  {
    "text": "I had a cluster zero problem so like all",
    "start": "736560",
    "end": "738839"
  },
  {
    "text": "good Engineers I wrote A bash script",
    "start": "738839",
    "end": "740459"
  },
  {
    "text": "right and this thing spun up kind and it",
    "start": "740459",
    "end": "742920"
  },
  {
    "text": "installed crossplane into my kind",
    "start": "742920",
    "end": "744360"
  },
  {
    "text": "cluster and then it deployed the",
    "start": "744360",
    "end": "746339"
  },
  {
    "text": "cross-plane CRS custom resources to",
    "start": "746339",
    "end": "749100"
  },
  {
    "text": "specify that cloud cluster that I",
    "start": "749100",
    "end": "750660"
  },
  {
    "text": "actually wanted and to bring it up and",
    "start": "750660",
    "end": "752160"
  },
  {
    "text": "it waited for the cloud cluster to come",
    "start": "752160",
    "end": "753540"
  },
  {
    "text": "up and then it tore down kind with",
    "start": "753540",
    "end": "755339"
  },
  {
    "text": "cross-plane inside it",
    "start": "755339",
    "end": "757560"
  },
  {
    "text": "that's a quite heavy takes quite a long",
    "start": "757560",
    "end": "759959"
  },
  {
    "text": "time it uses quite a lot of ram you know",
    "start": "759959",
    "end": "761760"
  },
  {
    "text": "Cloud clusters can take a while to come",
    "start": "761760",
    "end": "763620"
  },
  {
    "text": "up mentioning no provider names",
    "start": "763620",
    "end": "766079"
  },
  {
    "text": "um so obviously I wanted to play stanji",
    "start": "766079",
    "end": "767459"
  },
  {
    "text": "value but it just kept like paging steam",
    "start": "767459",
    "end": "769560"
  },
  {
    "text": "out to disk because it was using all the",
    "start": "769560",
    "end": "770820"
  },
  {
    "text": "ram it was very annoying and I thought",
    "start": "770820",
    "end": "772860"
  },
  {
    "text": "this probably isn't the best way to do",
    "start": "772860",
    "end": "774240"
  },
  {
    "text": "this and I was looking at you know the",
    "start": "774240",
    "end": "775380"
  },
  {
    "text": "sort of kind I was having to use to do",
    "start": "775380",
    "end": "776940"
  },
  {
    "text": "this and thinking I actually don't need",
    "start": "776940",
    "end": "778680"
  },
  {
    "text": "all of these components do I can I just",
    "start": "778680",
    "end": "782220"
  },
  {
    "text": "sort of go build myself an API server",
    "start": "782220",
    "end": "784500"
  },
  {
    "text": "and then you know run dot slash API",
    "start": "784500",
    "end": "786720"
  },
  {
    "text": "server locally and then dot slash",
    "start": "786720",
    "end": "788160"
  },
  {
    "text": "control plane and connect to that do I",
    "start": "788160",
    "end": "789899"
  },
  {
    "text": "really need any of these other",
    "start": "789899",
    "end": "790680"
  },
  {
    "text": "components",
    "start": "790680",
    "end": "792180"
  },
  {
    "text": "this didn't admittedly that experiment",
    "start": "792180",
    "end": "794579"
  },
  {
    "text": "kind of stopped there this this doesn't",
    "start": "794579",
    "end": "796139"
  },
  {
    "text": "really work for cross-plane uh you've",
    "start": "796139",
    "end": "798000"
  },
  {
    "text": "got some fairly big issues like",
    "start": "798000",
    "end": "799320"
  },
  {
    "text": "cross-plane doesn't do everything in the",
    "start": "799320",
    "end": "802139"
  },
  {
    "text": "sort of in the cross-playing Pod that",
    "start": "802139",
    "end": "803760"
  },
  {
    "text": "you initially deploy it actually spawns",
    "start": "803760",
    "end": "805860"
  },
  {
    "text": "worker pods to do those actual",
    "start": "805860",
    "end": "807360"
  },
  {
    "text": "reconciliations so it'll support one to",
    "start": "807360",
    "end": "809100"
  },
  {
    "text": "talk to AWS one to talk to gcp",
    "start": "809100",
    "end": "811980"
  },
  {
    "text": "um",
    "start": "811980",
    "end": "812579"
  },
  {
    "text": "so in order to deploy those parts you",
    "start": "812579",
    "end": "814380"
  },
  {
    "text": "basically kind of do need a whole",
    "start": "814380",
    "end": "815639"
  },
  {
    "text": "kubernetes system that that's sort of",
    "start": "815639",
    "end": "816899"
  },
  {
    "text": "what it's for",
    "start": "816899",
    "end": "818160"
  },
  {
    "text": "but at tetrate you know we do a lot of",
    "start": "818160",
    "end": "819959"
  },
  {
    "text": "work with istio and Envoy um so I was",
    "start": "819959",
    "end": "822060"
  },
  {
    "text": "sort of talking to my co-workers about",
    "start": "822060",
    "end": "823320"
  },
  {
    "text": "this idea and we wondered if we could uh",
    "start": "823320",
    "end": "825899"
  },
  {
    "text": "apply it to the istio control plane",
    "start": "825899",
    "end": "827579"
  },
  {
    "text": "instead because importantly istio",
    "start": "827579",
    "end": "829560"
  },
  {
    "text": "doesn't spawn its own child workloads it",
    "start": "829560",
    "end": "831779"
  },
  {
    "text": "manages envoys uh so that idea kind of",
    "start": "831779",
    "end": "834540"
  },
  {
    "text": "goes like this now we've now you know",
    "start": "834540",
    "end": "836700"
  },
  {
    "text": "now we've got our mental model",
    "start": "836700",
    "end": "838440"
  },
  {
    "text": "so in this diagram I've got another pod",
    "start": "838440",
    "end": "840060"
  },
  {
    "text": "running down here the only difference is",
    "start": "840060",
    "end": "842639"
  },
  {
    "text": "this one is an operator right you can",
    "start": "842639",
    "end": "844139"
  },
  {
    "text": "see it talking to the API server so so",
    "start": "844139",
    "end": "846300"
  },
  {
    "text": "this is a controller too that's what the",
    "start": "846300",
    "end": "847800"
  },
  {
    "text": "operator pattern is",
    "start": "847800",
    "end": "849600"
  },
  {
    "text": "um and",
    "start": "849600",
    "end": "851579"
  },
  {
    "text": "what am I saying oh yeah uh all of the",
    "start": "851579",
    "end": "853740"
  },
  {
    "text": "so what are the controllers in the in",
    "start": "853740",
    "end": "855180"
  },
  {
    "text": "the control plane that we discussed",
    "start": "855180",
    "end": "856200"
  },
  {
    "text": "before in the controller manager and in",
    "start": "856200",
    "end": "857880"
  },
  {
    "text": "the scheduler they handle built-in",
    "start": "857880",
    "end": "859740"
  },
  {
    "text": "resources built-in types like deployment",
    "start": "859740",
    "end": "861600"
  },
  {
    "text": "and replica set these are like first",
    "start": "861600",
    "end": "863519"
  },
  {
    "text": "party operators if you like so this",
    "start": "863519",
    "end": "865500"
  },
  {
    "text": "thing is just a third-party operator",
    "start": "865500",
    "end": "866820"
  },
  {
    "text": "that handles third-party resources",
    "start": "866820",
    "end": "869100"
  },
  {
    "text": "um anybody old enough to remember that",
    "start": "869100",
    "end": "870480"
  },
  {
    "text": "you know tpr third-party resource type",
    "start": "870480",
    "end": "872399"
  },
  {
    "text": "these things are now defined by by crds",
    "start": "872399",
    "end": "875459"
  },
  {
    "text": "right which is just a replacement for",
    "start": "875459",
    "end": "876899"
  },
  {
    "text": "that",
    "start": "876899",
    "end": "877980"
  },
  {
    "text": "um so it's not magic it just makes calls",
    "start": "877980",
    "end": "879839"
  },
  {
    "text": "to the API server which is always",
    "start": "879839",
    "end": "881579"
  },
  {
    "text": "accessible to all pods through the",
    "start": "881579",
    "end": "883260"
  },
  {
    "text": "service called kubernetes",
    "start": "883260",
    "end": "884880"
  },
  {
    "text": "client go is actually going to do most",
    "start": "884880",
    "end": "886440"
  },
  {
    "text": "of the work and you just write the",
    "start": "886440",
    "end": "888300"
  },
  {
    "text": "reconciliation business logic",
    "start": "888300",
    "end": "891540"
  },
  {
    "text": "um now this one you know reads from the",
    "start": "891540",
    "end": "893100"
  },
  {
    "text": "API server it does actually feedback",
    "start": "893100",
    "end": "894480"
  },
  {
    "text": "into it again so like Liam says this is",
    "start": "894480",
    "end": "896339"
  },
  {
    "text": "sort of a closed loop controller it",
    "start": "896339",
    "end": "897899"
  },
  {
    "text": "makes more resources in the in the same",
    "start": "897899",
    "end": "899639"
  },
  {
    "text": "system so this is maybe cert manager or",
    "start": "899639",
    "end": "901920"
  },
  {
    "text": "something",
    "start": "901920",
    "end": "903540"
  },
  {
    "text": "but this one for example is istio this",
    "start": "903540",
    "end": "905519"
  },
  {
    "text": "is open loop so this reads from the API",
    "start": "905519",
    "end": "907139"
  },
  {
    "text": "server it processes those SEO CRS but",
    "start": "907139",
    "end": "910380"
  },
  {
    "text": "it's output the world that it affects is",
    "start": "910380",
    "end": "912120"
  },
  {
    "text": "the sidecar proxies now those don't",
    "start": "912120",
    "end": "914160"
  },
  {
    "text": "those could even be properties that are",
    "start": "914160",
    "end": "916019"
  },
  {
    "text": "on VMS through the istio's mesh",
    "start": "916019",
    "end": "917940"
  },
  {
    "text": "expansion feature so they could be",
    "start": "917940",
    "end": "919199"
  },
  {
    "text": "completely outside of the cluster",
    "start": "919199",
    "end": "921360"
  },
  {
    "text": "so if this is what I'm doing you know",
    "start": "921360",
    "end": "922920"
  },
  {
    "text": "reading from submitting CRS through the",
    "start": "922920",
    "end": "924600"
  },
  {
    "text": "API server into the database and then",
    "start": "924600",
    "end": "926279"
  },
  {
    "text": "reading through the API server out of",
    "start": "926279",
    "end": "928199"
  },
  {
    "text": "the database into this operator pod and",
    "start": "928199",
    "end": "930180"
  },
  {
    "text": "affecting envoys well",
    "start": "930180",
    "end": "932699"
  },
  {
    "text": "do I need a controller manager because",
    "start": "932699",
    "end": "934680"
  },
  {
    "text": "I'm not reconciling resources you know",
    "start": "934680",
    "end": "936300"
  },
  {
    "text": "in the database I've not got that closed",
    "start": "936300",
    "end": "938459"
  },
  {
    "text": "loop I'm not reconciling resources back",
    "start": "938459",
    "end": "942060"
  },
  {
    "text": "into the API server because I'm not",
    "start": "942060",
    "end": "943320"
  },
  {
    "text": "ultimately trying to make containers on",
    "start": "943320",
    "end": "944820"
  },
  {
    "text": "a node",
    "start": "944820",
    "end": "945839"
  },
  {
    "text": "so I don't really need the controller",
    "start": "945839",
    "end": "947459"
  },
  {
    "text": "manager because I don't need the deploy",
    "start": "947459",
    "end": "948839"
  },
  {
    "text": "I don't need to sign deployments into",
    "start": "948839",
    "end": "950160"
  },
  {
    "text": "replica sets into pods",
    "start": "950160",
    "end": "952680"
  },
  {
    "text": "if I've got no pods I don't need to",
    "start": "952680",
    "end": "954300"
  },
  {
    "text": "schedule them right I don't need that",
    "start": "954300",
    "end": "955500"
  },
  {
    "text": "scheduler because I'm not going to have",
    "start": "955500",
    "end": "956880"
  },
  {
    "text": "any pod resources I don't want to assign",
    "start": "956880",
    "end": "958500"
  },
  {
    "text": "any to nodes",
    "start": "958500",
    "end": "960120"
  },
  {
    "text": "so if I've not got resources that I'm",
    "start": "960120",
    "end": "961860"
  },
  {
    "text": "assigning to nodes do I actually need",
    "start": "961860",
    "end": "963600"
  },
  {
    "text": "the cubelet because that's the sort of",
    "start": "963600",
    "end": "965459"
  },
  {
    "text": "container controller right that",
    "start": "965459",
    "end": "966779"
  },
  {
    "text": "reconciles pods into containers so maybe",
    "start": "966779",
    "end": "969240"
  },
  {
    "text": "I don't need that either",
    "start": "969240",
    "end": "970860"
  },
  {
    "text": "and then if I don't have any running",
    "start": "970860",
    "end": "972000"
  },
  {
    "text": "pods I'm not going to need Q proxy",
    "start": "972000",
    "end": "973920"
  },
  {
    "text": "either because that reconciles into uh",
    "start": "973920",
    "end": "976620"
  },
  {
    "text": "you know iptables rules to do the the in",
    "start": "976620",
    "end": "979139"
  },
  {
    "text": "cluster Network VIPs technically if you",
    "start": "979139",
    "end": "982199"
  },
  {
    "text": "want to be technical it only does the",
    "start": "982199",
    "end": "983579"
  },
  {
    "text": "sort of load balancing VIPs the sort of",
    "start": "983579",
    "end": "985079"
  },
  {
    "text": "flat overlay Network for the whole",
    "start": "985079",
    "end": "986940"
  },
  {
    "text": "cluster is made by cni components which",
    "start": "986940",
    "end": "988800"
  },
  {
    "text": "are a lower level they're not shown",
    "start": "988800",
    "end": "991019"
  },
  {
    "text": "um but they're you know they also are",
    "start": "991019",
    "end": "993060"
  },
  {
    "text": "probably not needed here either",
    "start": "993060",
    "end": "995279"
  },
  {
    "text": "so if you look at this picture it now",
    "start": "995279",
    "end": "996720"
  },
  {
    "text": "looks pretty simple but we do still have",
    "start": "996720",
    "end": "998579"
  },
  {
    "text": "a bunch of features here this API server",
    "start": "998579",
    "end": "1000199"
  },
  {
    "text": "is very feature-rich we've still got a",
    "start": "1000199",
    "end": "1002839"
  },
  {
    "text": "production grade HTTP server right we've",
    "start": "1002839",
    "end": "1004759"
  },
  {
    "text": "still got the authentication layer we've",
    "start": "1004759",
    "end": "1006620"
  },
  {
    "text": "still got the authorization this is all",
    "start": "1006620",
    "end": "1008540"
  },
  {
    "text": "in the API server by the way we've still",
    "start": "1008540",
    "end": "1010519"
  },
  {
    "text": "got built-in emission control with that",
    "start": "1010519",
    "end": "1012199"
  },
  {
    "text": "you can sort of program to guarantee",
    "start": "1012199",
    "end": "1014120"
  },
  {
    "text": "certain",
    "start": "1014120",
    "end": "1015079"
  },
  {
    "text": "um features of the of the resources you",
    "start": "1015079",
    "end": "1017120"
  },
  {
    "text": "apply we've got the hookable admission",
    "start": "1017120",
    "end": "1018920"
  },
  {
    "text": "control so you're mutating and",
    "start": "1018920",
    "end": "1020360"
  },
  {
    "text": "validating web hooker Mission Control",
    "start": "1020360",
    "end": "1021920"
  },
  {
    "text": "we've got a API service versioning",
    "start": "1021920",
    "end": "1024380"
  },
  {
    "text": "support where it can mangle versions you",
    "start": "1024380",
    "end": "1026058"
  },
  {
    "text": "know upgrade and downgrade versions",
    "start": "1026059",
    "end": "1027199"
  },
  {
    "text": "based on rules you give it we've got its",
    "start": "1027199",
    "end": "1029900"
  },
  {
    "text": "defaulting support so you can apply",
    "start": "1029900",
    "end": "1031220"
  },
  {
    "text": "partial resources and you can do",
    "start": "1031220",
    "end": "1034000"
  },
  {
    "text": "three-way merges server side applies",
    "start": "1034000",
    "end": "1036199"
  },
  {
    "text": "we've got a serialization layer you know",
    "start": "1036199",
    "end": "1038298"
  },
  {
    "text": "and then a database driver for the",
    "start": "1038299",
    "end": "1040160"
  },
  {
    "text": "persistent storage in etcd so we've got",
    "start": "1040160",
    "end": "1042140"
  },
  {
    "text": "a lot of stuff and if you look at these",
    "start": "1042140",
    "end": "1043400"
  },
  {
    "text": "pictures if you think about the model",
    "start": "1043400",
    "end": "1044418"
  },
  {
    "text": "we've actually still got a controller",
    "start": "1044419",
    "end": "1046280"
  },
  {
    "text": "we've still got I'm going to use the",
    "start": "1046280",
    "end": "1048079"
  },
  {
    "text": "laser pointer for this we've still got a",
    "start": "1048079",
    "end": "1049520"
  },
  {
    "text": "controller we've still got sensors we've",
    "start": "1049520",
    "end": "1051500"
  },
  {
    "text": "still got systems",
    "start": "1051500",
    "end": "1054220"
  },
  {
    "text": "so is this sufficient to do to do what I",
    "start": "1054559",
    "end": "1056600"
  },
  {
    "text": "was talking about",
    "start": "1056600",
    "end": "1057559"
  },
  {
    "text": "so the first big question is well how do",
    "start": "1057559",
    "end": "1059179"
  },
  {
    "text": "we run this operator right because",
    "start": "1059179",
    "end": "1060500"
  },
  {
    "text": "without cubelet or cube proxy this blue",
    "start": "1060500",
    "end": "1062660"
  },
  {
    "text": "box is is just a computer it's it's not",
    "start": "1062660",
    "end": "1065059"
  },
  {
    "text": "a node with a capital N so I can't",
    "start": "1065059",
    "end": "1067220"
  },
  {
    "text": "submit a pod resource and have this",
    "start": "1067220",
    "end": "1068960"
  },
  {
    "text": "thing run",
    "start": "1068960",
    "end": "1070280"
  },
  {
    "text": "um so I need to I need to find some way",
    "start": "1070280",
    "end": "1071900"
  },
  {
    "text": "to run it I could use a cubelet with",
    "start": "1071900",
    "end": "1074179"
  },
  {
    "text": "static manifests",
    "start": "1074179",
    "end": "1076160"
  },
  {
    "text": "um but without Q proxy you know it can't",
    "start": "1076160",
    "end": "1078260"
  },
  {
    "text": "just get to the API server by asking for",
    "start": "1078260",
    "end": "1080059"
  },
  {
    "text": "kubernetes like it's not going to be",
    "start": "1080059",
    "end": "1081500"
  },
  {
    "text": "that convenient we don't really have a",
    "start": "1081500",
    "end": "1082940"
  },
  {
    "text": "cluster here",
    "start": "1082940",
    "end": "1084559"
  },
  {
    "text": "um so you're better off just using",
    "start": "1084559",
    "end": "1085940"
  },
  {
    "text": "system D or Docker or whatever and you",
    "start": "1085940",
    "end": "1087919"
  },
  {
    "text": "know doing your own load balancing and",
    "start": "1087919",
    "end": "1089179"
  },
  {
    "text": "IPS as I say this is a theoretical",
    "start": "1089179",
    "end": "1091100"
  },
  {
    "text": "minimum like this isn't this isn't easy",
    "start": "1091100",
    "end": "1093740"
  },
  {
    "text": "um but it's an interesting thing to",
    "start": "1093740",
    "end": "1094760"
  },
  {
    "text": "reason about there are a few other",
    "start": "1094760",
    "end": "1096679"
  },
  {
    "text": "things that won't work if you do want to",
    "start": "1096679",
    "end": "1099020"
  },
  {
    "text": "um mutating or validating webhook which",
    "start": "1099020",
    "end": "1101000"
  },
  {
    "text": "is something that istio relies on quite",
    "start": "1101000",
    "end": "1102320"
  },
  {
    "text": "a lot you would need certs for that so",
    "start": "1102320",
    "end": "1104840"
  },
  {
    "text": "so that this pod",
    "start": "1104840",
    "end": "1106340"
  },
  {
    "text": "um if this is going to register itself",
    "start": "1106340",
    "end": "1107480"
  },
  {
    "text": "as a web hook the API 7 needs to be able",
    "start": "1107480",
    "end": "1109880"
  },
  {
    "text": "to call it in a secure fashion it needs",
    "start": "1109880",
    "end": "1111799"
  },
  {
    "text": "certs you'd normally use cert manager",
    "start": "1111799",
    "end": "1113360"
  },
  {
    "text": "for that where are you going to run",
    "start": "1113360",
    "end": "1114440"
  },
  {
    "text": "search manager how cert manager going to",
    "start": "1114440",
    "end": "1116299"
  },
  {
    "text": "do its thing",
    "start": "1116299",
    "end": "1117679"
  },
  {
    "text": "um and the other big issue is service",
    "start": "1117679",
    "end": "1118940"
  },
  {
    "text": "accounts so while the service account is",
    "start": "1118940",
    "end": "1120799"
  },
  {
    "text": "a resource it's just an API server SCD",
    "start": "1120799",
    "end": "1123679"
  },
  {
    "text": "thing the tokens for them are reconciled",
    "start": "1123679",
    "end": "1126980"
  },
  {
    "text": "they're made by a loop in the controller",
    "start": "1126980",
    "end": "1128419"
  },
  {
    "text": "manager and they're made available to",
    "start": "1128419",
    "end": "1130039"
  },
  {
    "text": "The Operators because they're mounted",
    "start": "1130039",
    "end": "1131240"
  },
  {
    "text": "into pods we don't have any pods this",
    "start": "1131240",
    "end": "1133039"
  },
  {
    "text": "isn't really a pod so none of this is",
    "start": "1133039",
    "end": "1134780"
  },
  {
    "text": "going to happen it's you know you could",
    "start": "1134780",
    "end": "1136220"
  },
  {
    "text": "mint it yourself but it's not so easy",
    "start": "1136220",
    "end": "1139160"
  },
  {
    "text": "but what you could do maybe for the for",
    "start": "1139160",
    "end": "1141020"
  },
  {
    "text": "the token thing is you could turn off",
    "start": "1141020",
    "end": "1142580"
  },
  {
    "text": "security right you don't need a service",
    "start": "1142580",
    "end": "1144440"
  },
  {
    "text": "account token if you don't have rbac or",
    "start": "1144440",
    "end": "1146360"
  },
  {
    "text": "or a back if you if you've disabled all",
    "start": "1146360",
    "end": "1148220"
  },
  {
    "text": "of the uh authorization layers in the",
    "start": "1148220",
    "end": "1151039"
  },
  {
    "text": "API server that might sound crazy and if",
    "start": "1151039",
    "end": "1153799"
  },
  {
    "text": "your API server is exposed to the",
    "start": "1153799",
    "end": "1155120"
  },
  {
    "text": "internet it is but for a small embedded",
    "start": "1155120",
    "end": "1157460"
  },
  {
    "text": "system right with no maybe no network",
    "start": "1157460",
    "end": "1159200"
  },
  {
    "text": "access at all maybe it's not that crazy",
    "start": "1159200",
    "end": "1161299"
  },
  {
    "text": "and that as I say was the original idea",
    "start": "1161299",
    "end": "1162860"
  },
  {
    "text": "that prompted this was the idea was",
    "start": "1162860",
    "end": "1164960"
  },
  {
    "text": "bundling an operator something like a",
    "start": "1164960",
    "end": "1166520"
  },
  {
    "text": "cross plane or an sdod with just the API",
    "start": "1166520",
    "end": "1169820"
  },
  {
    "text": "server and a database almost acting as",
    "start": "1169820",
    "end": "1171559"
  },
  {
    "text": "libraries in a very small self-contained",
    "start": "1171559",
    "end": "1173840"
  },
  {
    "text": "unit maybe I run them all in one system",
    "start": "1173840",
    "end": "1175700"
  },
  {
    "text": "D slice or something like just a just to",
    "start": "1175700",
    "end": "1178580"
  },
  {
    "text": "absolutely pair down the resource uses",
    "start": "1178580",
    "end": "1180980"
  },
  {
    "text": "and the complexity of what I need to to",
    "start": "1180980",
    "end": "1182480"
  },
  {
    "text": "get my my bootstrap",
    "start": "1182480",
    "end": "1184520"
  },
  {
    "text": "um so as I say theoretical minimum",
    "start": "1184520",
    "end": "1185900"
  },
  {
    "text": "hopefully an interesting thing for folks",
    "start": "1185900",
    "end": "1187640"
  },
  {
    "text": "to go and think about I think it is",
    "start": "1187640",
    "end": "1188960"
  },
  {
    "text": "possible to build it I admit I didn't",
    "start": "1188960",
    "end": "1190340"
  },
  {
    "text": "I'd be interested to get tweets from",
    "start": "1190340",
    "end": "1192200"
  },
  {
    "text": "anybody who who goes and when does it",
    "start": "1192200",
    "end": "1193760"
  },
  {
    "text": "but Liam's not going to talk about a",
    "start": "1193760",
    "end": "1195260"
  },
  {
    "text": "slightly less extreme version that he",
    "start": "1195260",
    "end": "1197299"
  },
  {
    "text": "actually did build that does make a lot",
    "start": "1197299",
    "end": "1199700"
  },
  {
    "text": "of sense and offers us a kind of a",
    "start": "1199700",
    "end": "1201860"
  },
  {
    "text": "serverless istio",
    "start": "1201860",
    "end": "1204760"
  },
  {
    "text": "okay so like Matt said one place we can",
    "start": "1207980",
    "end": "1210919"
  },
  {
    "text": "use this minimal API server control Loop",
    "start": "1210919",
    "end": "1213320"
  },
  {
    "text": "is what's known as a remote istio",
    "start": "1213320",
    "end": "1216020"
  },
  {
    "text": "control plane so this architecture",
    "start": "1216020",
    "end": "1218419"
  },
  {
    "text": "diagrams just from the sdoi docs but",
    "start": "1218419",
    "end": "1220700"
  },
  {
    "text": "basically it's in the remote",
    "start": "1220700",
    "end": "1223220"
  },
  {
    "text": "architecture model istio can manage the",
    "start": "1223220",
    "end": "1225440"
  },
  {
    "text": "networking of multiple clusters and VMS",
    "start": "1225440",
    "end": "1227600"
  },
  {
    "text": "either on premise in the cloud doesn't",
    "start": "1227600",
    "end": "1229580"
  },
  {
    "text": "matter from from a central location",
    "start": "1229580",
    "end": "1233600"
  },
  {
    "text": "now to run the control plane like this",
    "start": "1233600",
    "end": "1235460"
  },
  {
    "text": "requires an API server to get the",
    "start": "1235460",
    "end": "1237620"
  },
  {
    "text": "desired State and something to run the",
    "start": "1237620",
    "end": "1240260"
  },
  {
    "text": "istio controller process itself now",
    "start": "1240260",
    "end": "1242660"
  },
  {
    "text": "thanks to Cloud providers getting an API",
    "start": "1242660",
    "end": "1244640"
  },
  {
    "text": "server nowadays is a relatively painless",
    "start": "1244640",
    "end": "1246860"
  },
  {
    "text": "experience although some are less",
    "start": "1246860",
    "end": "1249080"
  },
  {
    "text": "painless than others in our prototype we",
    "start": "1249080",
    "end": "1251960"
  },
  {
    "text": "use gke but any compliant kubernetes",
    "start": "1251960",
    "end": "1254419"
  },
  {
    "text": "works I mostly use that for because gke",
    "start": "1254419",
    "end": "1257299"
  },
  {
    "text": "cluster has been up really quickly and",
    "start": "1257299",
    "end": "1258679"
  },
  {
    "text": "the feedback loops much better",
    "start": "1258679",
    "end": "1261080"
  },
  {
    "text": "um",
    "start": "1261080",
    "end": "1261860"
  },
  {
    "text": "but next we need to run sdod we don't",
    "start": "1261860",
    "end": "1264679"
  },
  {
    "text": "have to deal with provisioning nodes so",
    "start": "1264679",
    "end": "1266660"
  },
  {
    "text": "let's go with serverless workloads and",
    "start": "1266660",
    "end": "1269179"
  },
  {
    "text": "then all we have to do is ask for pots",
    "start": "1269179",
    "end": "1271820"
  },
  {
    "text": "on gcp this is autopilot on AWS this is",
    "start": "1271820",
    "end": "1275240"
  },
  {
    "text": "fargate on Azure they're virtual nodes",
    "start": "1275240",
    "end": "1277340"
  },
  {
    "text": "it uses the virtual couplet project",
    "start": "1277340",
    "end": "1279919"
  },
  {
    "text": "under the covers I believe though",
    "start": "1279919",
    "end": "1282020"
  },
  {
    "text": "um it which which have a cloud provider",
    "start": "1282020",
    "end": "1283580"
  },
  {
    "text": "you use here the key is that we've gone",
    "start": "1283580",
    "end": "1285620"
  },
  {
    "text": "up a level in the abstraction and we've",
    "start": "1285620",
    "end": "1287960"
  },
  {
    "text": "reduced our maintenance burden because",
    "start": "1287960",
    "end": "1289460"
  },
  {
    "text": "we don't actually have to manage nodes",
    "start": "1289460",
    "end": "1291320"
  },
  {
    "text": "in this scenario we have to manage you",
    "start": "1291320",
    "end": "1293419"
  },
  {
    "text": "know container image vulnerabilities",
    "start": "1293419",
    "end": "1294799"
  },
  {
    "text": "sure",
    "start": "1294799",
    "end": "1296059"
  },
  {
    "text": "um but you know you don't have to",
    "start": "1296059",
    "end": "1297200"
  },
  {
    "text": "upgrade nodes you'd have to worry about",
    "start": "1297200",
    "end": "1298400"
  },
  {
    "text": "that side of things",
    "start": "1298400",
    "end": "1300260"
  },
  {
    "text": "and by the way there's actually nothing",
    "start": "1300260",
    "end": "1301820"
  },
  {
    "text": "that requires us to run sdod inside of",
    "start": "1301820",
    "end": "1304760"
  },
  {
    "text": "kubernetes in this scenario right we",
    "start": "1304760",
    "end": "1307220"
  },
  {
    "text": "could run it on a VM somewhere",
    "start": "1307220",
    "end": "1309320"
  },
  {
    "text": "um and have it read remotely from our",
    "start": "1309320",
    "end": "1311179"
  },
  {
    "text": "API server using that same service",
    "start": "1311179",
    "end": "1312919"
  },
  {
    "text": "account token thing",
    "start": "1312919",
    "end": "1314539"
  },
  {
    "text": "because remember our API is just",
    "start": "1314539",
    "end": "1317000"
  },
  {
    "text": "operating as a database and control Loop",
    "start": "1317000",
    "end": "1319039"
  },
  {
    "text": "framework it just happens to have a side",
    "start": "1319039",
    "end": "1321020"
  },
  {
    "text": "gig as a container orchestrator",
    "start": "1321020",
    "end": "1324700"
  },
  {
    "text": "so next we need to run sdod",
    "start": "1324799",
    "end": "1327620"
  },
  {
    "text": "but no sorry I'm going back to the same",
    "start": "1327620",
    "end": "1329659"
  },
  {
    "text": "thing the next problem we have to solve",
    "start": "1329659",
    "end": "1331580"
  },
  {
    "text": "is how do our workloads reach sdod to",
    "start": "1331580",
    "end": "1334700"
  },
  {
    "text": "receive their networking configuration",
    "start": "1334700",
    "end": "1336260"
  },
  {
    "text": "so to solve this istio recommends you",
    "start": "1336260",
    "end": "1339260"
  },
  {
    "text": "deploys an East-West Gateway that",
    "start": "1339260",
    "end": "1341960"
  },
  {
    "text": "enables Envoy anywhere in our",
    "start": "1341960",
    "end": "1344059"
  },
  {
    "text": "infrastructure to actually connect to",
    "start": "1344059",
    "end": "1345559"
  },
  {
    "text": "istod so it doesn't matter if it's on a",
    "start": "1345559",
    "end": "1347960"
  },
  {
    "text": "different VM somewhere else or another",
    "start": "1347960",
    "end": "1349940"
  },
  {
    "text": "Cube cluster all that matters is you",
    "start": "1349940",
    "end": "1352400"
  },
  {
    "text": "have if you have that L3 reachability",
    "start": "1352400",
    "end": "1354740"
  },
  {
    "text": "right and then istio istio D is",
    "start": "1354740",
    "end": "1357679"
  },
  {
    "text": "responsible for managing the security of",
    "start": "1357679",
    "end": "1359299"
  },
  {
    "text": "that once you have that reachability",
    "start": "1359299",
    "end": "1362720"
  },
  {
    "text": "so this Gateway is also run as a",
    "start": "1362720",
    "end": "1364940"
  },
  {
    "text": "serverless pod because it's a Gateway",
    "start": "1364940",
    "end": "1366559"
  },
  {
    "text": "not a sidecar we don't need to do the IP",
    "start": "1366559",
    "end": "1368840"
  },
  {
    "text": "tables redirect so we can do this on",
    "start": "1368840",
    "end": "1371539"
  },
  {
    "text": "serverless still we don't have to worry",
    "start": "1371539",
    "end": "1373039"
  },
  {
    "text": "about notes and what we've effectively",
    "start": "1373039",
    "end": "1375740"
  },
  {
    "text": "built in this scenario is a very",
    "start": "1375740",
    "end": "1377720"
  },
  {
    "text": "rudimentary istio as a service offering",
    "start": "1377720",
    "end": "1380780"
  },
  {
    "text": "right we yes we have to make sure istio",
    "start": "1380780",
    "end": "1384140"
  },
  {
    "text": "is deployed it's scaled correctly you",
    "start": "1384140",
    "end": "1386539"
  },
  {
    "text": "know upgrades are handled correctly and",
    "start": "1386539",
    "end": "1388640"
  },
  {
    "text": "and high availability but we've reduced",
    "start": "1388640",
    "end": "1391100"
  },
  {
    "text": "our maintenance burden to only include",
    "start": "1391100",
    "end": "1392659"
  },
  {
    "text": "things at the abstraction level we",
    "start": "1392659",
    "end": "1394039"
  },
  {
    "text": "actually care about in this scenario",
    "start": "1394039",
    "end": "1396080"
  },
  {
    "text": "right which is this was definitely a win",
    "start": "1396080",
    "end": "1398240"
  },
  {
    "text": "as anyone who's had to upgrade nodes",
    "start": "1398240",
    "end": "1400340"
  },
  {
    "text": "recently will uh attest to",
    "start": "1400340",
    "end": "1402980"
  },
  {
    "text": "so",
    "start": "1402980",
    "end": "1403880"
  },
  {
    "text": "this remote architecture in istio is",
    "start": "1403880",
    "end": "1406220"
  },
  {
    "text": "actually being used by several users in",
    "start": "1406220",
    "end": "1407780"
  },
  {
    "text": "production so I highly recommend you go",
    "start": "1407780",
    "end": "1410059"
  },
  {
    "text": "to this link on the left Airbnb",
    "start": "1410059",
    "end": "1411799"
  },
  {
    "text": "basically did a talk talking about the",
    "start": "1411799",
    "end": "1413480"
  },
  {
    "text": "remote sdod architecture",
    "start": "1413480",
    "end": "1416780"
  },
  {
    "text": "um they use their architecture to bridge",
    "start": "1416780",
    "end": "1418159"
  },
  {
    "text": "VM and Coop they use a fully Cloud",
    "start": "1418159",
    "end": "1420559"
  },
  {
    "text": "environment but again it's semantics",
    "start": "1420559",
    "end": "1422659"
  },
  {
    "text": "where it's run doesn't really matter to",
    "start": "1422659",
    "end": "1424580"
  },
  {
    "text": "istio although I don't think they're",
    "start": "1424580",
    "end": "1426380"
  },
  {
    "text": "using kind of the serverless cube",
    "start": "1426380",
    "end": "1428960"
  },
  {
    "text": "compute stuff but in the talk they",
    "start": "1428960",
    "end": "1431000"
  },
  {
    "text": "discussed kind of how they migrated from",
    "start": "1431000",
    "end": "1432740"
  },
  {
    "text": "their existing zookeeper-based service",
    "start": "1432740",
    "end": "1434960"
  },
  {
    "text": "Discovery system to kind of an istio as",
    "start": "1434960",
    "end": "1437539"
  },
  {
    "text": "a service that they that their platform",
    "start": "1437539",
    "end": "1439100"
  },
  {
    "text": "team runs in their own Central cluster",
    "start": "1439100",
    "end": "1441980"
  },
  {
    "text": "and on the right there I you'll find the",
    "start": "1441980",
    "end": "1444140"
  },
  {
    "text": "code base of the kind of very hacky",
    "start": "1444140",
    "end": "1445880"
  },
  {
    "text": "proof of concept I've put together that",
    "start": "1445880",
    "end": "1447500"
  },
  {
    "text": "kind of demonstrates this so that this",
    "start": "1447500",
    "end": "1449600"
  },
  {
    "text": "kind of serverless history as a service",
    "start": "1449600",
    "end": "1450919"
  },
  {
    "text": "in gke",
    "start": "1450919",
    "end": "1452299"
  },
  {
    "text": "um and we built it using uh yeah the",
    "start": "1452299",
    "end": "1455419"
  },
  {
    "text": "code's there it's built using palumi so",
    "start": "1455419",
    "end": "1456919"
  },
  {
    "text": "it's typescript but anyone who's",
    "start": "1456919",
    "end": "1458419"
  },
  {
    "text": "familiar with terraform we'll see kind",
    "start": "1458419",
    "end": "1460039"
  },
  {
    "text": "of uh what what we're kind of doing",
    "start": "1460039",
    "end": "1462380"
  },
  {
    "text": "there",
    "start": "1462380",
    "end": "1464620"
  },
  {
    "text": "so this pattern also applies to",
    "start": "1465500",
    "end": "1467720"
  },
  {
    "text": "something like cross-plane right it",
    "start": "1467720",
    "end": "1469940"
  },
  {
    "text": "doesn't have to be sdo in Matt's example",
    "start": "1469940",
    "end": "1471679"
  },
  {
    "text": "like Matt's example a platform team can",
    "start": "1471679",
    "end": "1473960"
  },
  {
    "text": "basically build an entire platform as a",
    "start": "1473960",
    "end": "1475760"
  },
  {
    "text": "service offering as a service using this",
    "start": "1475760",
    "end": "1478340"
  },
  {
    "text": "same pattern it doesn't you know they",
    "start": "1478340",
    "end": "1481760"
  },
  {
    "text": "the there's nothing within cross plain",
    "start": "1481760",
    "end": "1484100"
  },
  {
    "text": "that I know of in the architecture that",
    "start": "1484100",
    "end": "1485659"
  },
  {
    "text": "needs it to actually have a physical a",
    "start": "1485659",
    "end": "1487460"
  },
  {
    "text": "pod on a physical node you could run",
    "start": "1487460",
    "end": "1489200"
  },
  {
    "text": "this serverless as well",
    "start": "1489200",
    "end": "1491419"
  },
  {
    "text": "and get Ops leverages the same model",
    "start": "1491419",
    "end": "1493580"
  },
  {
    "text": "with tools like Argo and flux right it's",
    "start": "1493580",
    "end": "1495440"
  },
  {
    "text": "that same control Loop pattern and both",
    "start": "1495440",
    "end": "1497900"
  },
  {
    "text": "of these tools again can be used to",
    "start": "1497900",
    "end": "1499700"
  },
  {
    "text": "build Platformers or service things but",
    "start": "1499700",
    "end": "1501740"
  },
  {
    "text": "scope to deploying and upgrading",
    "start": "1501740",
    "end": "1503179"
  },
  {
    "text": "workloads in kubernetes instead of",
    "start": "1503179",
    "end": "1504799"
  },
  {
    "text": "something like cross plane that does",
    "start": "1504799",
    "end": "1506299"
  },
  {
    "text": "your entire Cloud infrastructure",
    "start": "1506299",
    "end": "1509419"
  },
  {
    "text": "Okay Hand you back over to Matt",
    "start": "1509419",
    "end": "1512559"
  },
  {
    "text": "thanks so yeah are we uh recap how the",
    "start": "1514100",
    "end": "1517580"
  },
  {
    "text": "control plane works or maybe re-line it",
    "start": "1517580",
    "end": "1519320"
  },
  {
    "text": "for the first time I think we then sort",
    "start": "1519320",
    "end": "1521240"
  },
  {
    "text": "of introduced the idea of using the",
    "start": "1521240",
    "end": "1522559"
  },
  {
    "text": "minimum possible parts of it and uh as I",
    "start": "1522559",
    "end": "1525200"
  },
  {
    "text": "say maybe a bit of a thought experiment",
    "start": "1525200",
    "end": "1526760"
  },
  {
    "text": "at the moment I personally not built it",
    "start": "1526760",
    "end": "1528500"
  },
  {
    "text": "but I I think it's possible it just",
    "start": "1528500",
    "end": "1531380"
  },
  {
    "text": "didn't fit my my use case at the time",
    "start": "1531380",
    "end": "1532940"
  },
  {
    "text": "but yeah Liam showed uh something",
    "start": "1532940",
    "end": "1534740"
  },
  {
    "text": "slightly less extreme that did come off",
    "start": "1534740",
    "end": "1536240"
  },
  {
    "text": "the back of that that we have built that",
    "start": "1536240",
    "end": "1537620"
  },
  {
    "text": "does work for us it's um you know when",
    "start": "1537620",
    "end": "1540200"
  },
  {
    "text": "you're getting that managed cloud",
    "start": "1540200",
    "end": "1541640"
  },
  {
    "text": "provider control plane you will have a",
    "start": "1541640",
    "end": "1543860"
  },
  {
    "text": "scheduler and a controller manager",
    "start": "1543860",
    "end": "1545299"
  },
  {
    "text": "sitting there there their CPUs are",
    "start": "1545299",
    "end": "1547460"
  },
  {
    "text": "basically idle because we're not calling",
    "start": "1547460",
    "end": "1548539"
  },
  {
    "text": "on them but you know they do exist uh",
    "start": "1548539",
    "end": "1550400"
  },
  {
    "text": "but like Liam says we're dealing we",
    "start": "1550400",
    "end": "1552020"
  },
  {
    "text": "don't have a maintenance classroom at",
    "start": "1552020",
    "end": "1553400"
  },
  {
    "text": "the level of abstraction that we want",
    "start": "1553400",
    "end": "1555500"
  },
  {
    "text": "um so hopefully this talk you know we've",
    "start": "1555500",
    "end": "1556880"
  },
  {
    "text": "taught you something and inspire you to",
    "start": "1556880",
    "end": "1558320"
  },
  {
    "text": "take away that pattern uh maybe even",
    "start": "1558320",
    "end": "1560779"
  },
  {
    "text": "build the totally extreme one if you do",
    "start": "1560779",
    "end": "1562279"
  },
  {
    "text": "let us know",
    "start": "1562279",
    "end": "1564020"
  },
  {
    "text": "um so yeah thank you all for coming if",
    "start": "1564020",
    "end": "1565940"
  },
  {
    "text": "there's any questions we'd be happy to",
    "start": "1565940",
    "end": "1567320"
  },
  {
    "text": "take them",
    "start": "1567320",
    "end": "1569679"
  },
  {
    "text": "thank you",
    "start": "1573039",
    "end": "1576039"
  }
]