[
  {
    "text": "all right so let's get started and uh well this um i remember the last",
    "start": "80",
    "end": "6640"
  },
  {
    "text": "in-person meeting i i've been to in north america was uh the wasm summit at google campus so",
    "start": "6640",
    "end": "13679"
  },
  {
    "text": "you know and this is the first the post um panama conference in person conference at camp",
    "start": "13679",
    "end": "19680"
  },
  {
    "text": "you know i went to asia in the middle and attended a bunch of conferences but this is the first one in the uh",
    "start": "19680",
    "end": "25840"
  },
  {
    "text": "in the us that's so glad to be back and i got finally i see everyone face to face",
    "start": "25840",
    "end": "32480"
  },
  {
    "text": "well so let's dive right into it what we are talking about in the and and the first",
    "start": "32480",
    "end": "37840"
  },
  {
    "text": "is why you know why do we need um [Music] you know manage why do we need to manage",
    "start": "37840",
    "end": "44399"
  },
  {
    "text": "webassembly in kubernetes tools and this is a um a",
    "start": "44399",
    "end": "49680"
  },
  {
    "text": "picture i i often use for um you know i like to use this i didn't draw that ibm open risk",
    "start": "49680",
    "end": "56399"
  },
  {
    "text": "draw it and they talk about the evolution of you know cloud or server-side technologies right you know",
    "start": "56399",
    "end": "62160"
  },
  {
    "text": "so it comes start from bare metal and i you know i still remember the days when",
    "start": "62160",
    "end": "67360"
  },
  {
    "text": "data centers have you know your own dedicated servers you know you you do the iris scan or do the fingerprint scan",
    "start": "67360",
    "end": "73119"
  },
  {
    "text": "go there and you can actually find where your software is on those servers that provides you know um",
    "start": "73119",
    "end": "79280"
  },
  {
    "text": "use hardware to isolate software right it's provide the level of abstraction and then the virtual machine come along",
    "start": "79280",
    "end": "84799"
  },
  {
    "text": "it becomes cloud and become containers and now we are at the um at the new age of deploying functions",
    "start": "84799",
    "end": "92880"
  },
  {
    "text": "you know um to me i think you know um as rob had said and liam had said",
    "start": "92880",
    "end": "99200"
  },
  {
    "text": "earlier you know you know earlier today that this represents a new level of abstraction you know it's the",
    "start": "99200",
    "end": "105600"
  },
  {
    "text": "abstraction the the separation from infrastructure called to the business logic code which is something that",
    "start": "105600",
    "end": "111520"
  },
  {
    "text": "people on the server side on the back end has always strived to right you know so i i think to have to have the",
    "start": "111520",
    "end": "117360"
  },
  {
    "text": "infrastructure completely abstracted away and for developers to only write functions is one of the",
    "start": "117360",
    "end": "122799"
  },
  {
    "text": "major step forward so i think this is um [Music] you know one of them you know one of the",
    "start": "122799",
    "end": "129119"
  },
  {
    "text": "big um the context of my talk right you know so uh so what happened this this",
    "start": "129119",
    "end": "136879"
  },
  {
    "text": "mask and said serverless why do we do serverless is we want to make servers great again right you know so i have",
    "start": "136879",
    "end": "143200"
  },
  {
    "text": "this here and if you guys want it i have quite a few you know so it's uh",
    "start": "143200",
    "end": "148560"
  },
  {
    "text": "so everyone wants to go and get it that's um so we want to do serverless",
    "start": "148560",
    "end": "154000"
  },
  {
    "text": "you know the reason we want to serve less is to is to make server-side programming or back-end programming easier however",
    "start": "154000",
    "end": "160480"
  },
  {
    "text": "there are still dark cloud on the horizon so to speak is that to say you know people say you know uh today most",
    "start": "160480",
    "end": "167440"
  },
  {
    "text": "serverless functions of or functional service functions are implemented using what we call micro vm",
    "start": "167440",
    "end": "174720"
  },
  {
    "text": "or darker light containers right you know so you are essentially running the the function",
    "start": "174720",
    "end": "180560"
  },
  {
    "text": "inside of an inside application container and just to think about um the work you have to",
    "start": "180560",
    "end": "186239"
  },
  {
    "text": "go through to run a function say the function is 10 20 line of javascript",
    "start": "186239",
    "end": "191440"
  },
  {
    "text": "code you have to start backer or the micro vm and start opening system unit",
    "start": "191440",
    "end": "196560"
  },
  {
    "text": "start node.js and run 10 lines of code and then shut it all down right you know that's uh it's not a very effective way",
    "start": "196560",
    "end": "203280"
  },
  {
    "text": "of using system resources and uh um so here are two graphs you know again those are not mine those are",
    "start": "203280",
    "end": "209680"
  },
  {
    "text": "you know people have done the measurements um you know when datadog presented this graph to say half of",
    "start": "209680",
    "end": "215040"
  },
  {
    "text": "lambda functions finish less than 800 milliseconds uh my reaction is really half of the laminar functions",
    "start": "215040",
    "end": "221120"
  },
  {
    "text": "took more than 800 milliseconds you know that's uh it seems very long you know it seems you know 0.00 seconds you know",
    "start": "221120",
    "end": "227200"
  },
  {
    "text": "that's uh if you if you are into the uh you know jam stack application paradigm you know that's that sort of thing you'd",
    "start": "227200",
    "end": "232879"
  },
  {
    "text": "think you know each webpage would have 10 20 different microservices on the back end and it's like you know if each",
    "start": "232879",
    "end": "238159"
  },
  {
    "text": "one of them take us take a second it's a it's a very long time so even with what",
    "start": "238159",
    "end": "243519"
  },
  {
    "text": "we call mega cloud in in super sized data centers we are still you know um",
    "start": "243519",
    "end": "249840"
  },
  {
    "text": "you know facing the problem of cold start and things like that and that's spells problem for",
    "start": "249840",
    "end": "255599"
  },
  {
    "text": "having the serverless paradigm available everywhere in you know um on the network's edge and on each devices you",
    "start": "255599",
    "end": "262720"
  },
  {
    "text": "know so um even in today's mega data center we we have problems so you know that's um",
    "start": "262720",
    "end": "269199"
  },
  {
    "text": "so we want to we want so what we want is a is a lighter application container or",
    "start": "269199",
    "end": "274800"
  },
  {
    "text": "something that is uh that is significantly smaller and faster than dark than docker like application",
    "start": "274800",
    "end": "280320"
  },
  {
    "text": "containers to run those lightweight functions so we don't have to go through",
    "start": "280320",
    "end": "285600"
  },
  {
    "text": "all the process of starting docker starting operating system start node.js and run everything right",
    "start": "285600",
    "end": "292240"
  },
  {
    "text": "so maybe the answer is webassembly you know that's that's why we are here that's why we have a cloud native wasn't it right",
    "start": "292240",
    "end": "298160"
  },
  {
    "text": "you know could web assembly become um a container you know so at the time",
    "start": "298160",
    "end": "304320"
  },
  {
    "text": "there's um there's talk on the internet to say maybe webassembly gonna be replacing docker or become next docker",
    "start": "304320",
    "end": "310479"
  },
  {
    "text": "but it's probably not you know because web assembly as of today or maybe for a long time wouldn't provide the same kind",
    "start": "310479",
    "end": "316880"
  },
  {
    "text": "of developer experience that docker would give you which is give your operating system and you can do whatever you want in there however um",
    "start": "316880",
    "end": "324720"
  },
  {
    "text": "what we think is more likely to happen is to have web assembly running side by side with docker so you would have a",
    "start": "324720",
    "end": "330960"
  },
  {
    "text": "for lack of a better word a service mesh or something like that right you know that's uh is something controlled by um",
    "start": "330960",
    "end": "337039"
  },
  {
    "text": "it's something that is managed by the kubernetes or you know some other framework and it can start darker for",
    "start": "337039",
    "end": "344080"
  },
  {
    "text": "some workload and it can start a web assembly for some other workload it depends on what kind",
    "start": "344080",
    "end": "350160"
  },
  {
    "text": "of workload you have and where do you want to deploy it so this is the main focus of the talk is to use web assembly",
    "start": "350160",
    "end": "356560"
  },
  {
    "text": "as a container use web assembly itself as a container but not to replace docker but to go where docker cannot go or",
    "start": "356560",
    "end": "363440"
  },
  {
    "text": "darker is too heavy to go right so so i want to tell you a little bit about",
    "start": "363440",
    "end": "369600"
  },
  {
    "text": "what you know you know that's uh um you know what is a framework or what is a",
    "start": "369600",
    "end": "374639"
  },
  {
    "text": "tool you know this is a shameless plug for for the project i'm involved in you know it's called wasm edge right you",
    "start": "374639",
    "end": "380720"
  },
  {
    "text": "know that's a web it's a web assembly runtime that is optimized for hyper uh",
    "start": "380720",
    "end": "386720"
  },
  {
    "text": "uh you know uh cloud native applications and uh i wanna talk a little bit about",
    "start": "386720",
    "end": "392160"
  },
  {
    "text": "why it makes watermage such a good fit for for microservices or or or as a",
    "start": "392160",
    "end": "399440"
  },
  {
    "text": "serverless container so one of the one of the key features it has it has rlvm ao based aot so it's one of the fastest",
    "start": "399440",
    "end": "406639"
  },
  {
    "text": "i wouldn't say it's the fastest because you know there are different workloads different vms has different characteristics but in a lot of",
    "start": "406639",
    "end": "413120"
  },
  {
    "text": "benchmarks we come up top you know so it's one of the fastest web assembly vms on the market with aot compilation",
    "start": "413120",
    "end": "418960"
  },
  {
    "text": "and we do custom extensions because you know when you talk about things like you want to",
    "start": "418960",
    "end": "424240"
  },
  {
    "text": "run it as a microservice you need networking capabilities inside the inside of the vm so to have network",
    "start": "424240",
    "end": "430639"
  },
  {
    "text": "socket support is a must-have to have asynchronous pulling is a must-have although webassembly doesn't have",
    "start": "430639",
    "end": "437680"
  },
  {
    "text": "materials thread yet but you know so does javascript javascript doesn't have money through it either right you know",
    "start": "437680",
    "end": "442720"
  },
  {
    "text": "so but javascript supports asynchronous as we already experienced from node.js find out that that is",
    "start": "442720",
    "end": "449120"
  },
  {
    "text": "you know appropriate for a lot of use cases so have a synchronous porting and have things like you know uh",
    "start": "449120",
    "end": "454880"
  },
  {
    "text": "ai inference like a quad to tensorflow and to have database connectors and things of that nature and one of the",
    "start": "454880",
    "end": "461120"
  },
  {
    "text": "other things that we put a lot of focus on is to provide um first-class javascript support you",
    "start": "461120",
    "end": "467120"
  },
  {
    "text": "know i think we are reaching our consensus from multiple talks today you know from uh from the shopify talk and",
    "start": "467120",
    "end": "473520"
  },
  {
    "text": "the you you know it's that we want to compile the javascript runtime into webassembly and then run",
    "start": "473520",
    "end": "480000"
  },
  {
    "text": "javascript inside that runtime and people keep asking why you know why do you do that don't you know this isn't",
    "start": "480000",
    "end": "485840"
  },
  {
    "text": "javascript already runs in some kind of runtime you know using node.js and v8 design for that",
    "start": "485840",
    "end": "491440"
  },
  {
    "text": "yes it is you can run in v8 but the v8 is never designed as a container right v8 if you you you don't run v8 naked you",
    "start": "491440",
    "end": "498479"
  },
  {
    "text": "run we get inside docker so the the role of web assembly is webassembly plus a",
    "start": "498479",
    "end": "503919"
  },
  {
    "text": "javascript runtime replaces the docker plus operating system plus node.js plus",
    "start": "503919",
    "end": "509280"
  },
  {
    "text": "v8 right you know so that's uh and uh by having a lightweight javascript implementation",
    "start": "509280",
    "end": "515120"
  },
  {
    "text": "by the way the work we have done so far is also based on quickjs because qks is easy to understand javascript",
    "start": "515120",
    "end": "521120"
  },
  {
    "text": "implementation we can provide ways for web assembly to supplement the javascript meaning that we could have",
    "start": "521120",
    "end": "526800"
  },
  {
    "text": "javascript apis but implemented in rust right you know so you so in your javascript application you",
    "start": "526800",
    "end": "533440"
  },
  {
    "text": "may want to do something like image processing but instead of you know you know using",
    "start": "533440",
    "end": "539200"
  },
  {
    "text": "interpreted javascript to process the image you could have a rust function on the back end to provide this",
    "start": "539200",
    "end": "544399"
  },
  {
    "text": "functionality pretty much the same way you use c plus plus functions to to extend v8 right",
    "start": "544399",
    "end": "550399"
  },
  {
    "text": "so you know so so we um so once image provides a lot of your you know those uh javascript support we um",
    "start": "550399",
    "end": "557200"
  },
  {
    "text": "i'm going to give you a link later in the talk you know to talk about those and then there's management features which is um the the",
    "start": "557200",
    "end": "564480"
  },
  {
    "text": "focus of the remainder of the talk is that we made wasm edge oci compliance uh runtime meaning that it can",
    "start": "564480",
    "end": "571920"
  },
  {
    "text": "it's um it can be managed by systemd and the uh c group fs you know meaning at",
    "start": "571920",
    "end": "577440"
  },
  {
    "text": "the process level you can allocate resources to it and there was also an excellent question earlier you know",
    "start": "577440",
    "end": "582800"
  },
  {
    "text": "today is to do we have finally um you know more finely grained um you know",
    "start": "582800",
    "end": "588080"
  },
  {
    "text": "resource allocation for web assembly runtime because webassembly long time are lighter so you may not want to um",
    "start": "588080",
    "end": "593279"
  },
  {
    "text": "you know just provide um you know resources as a process level you may want to provide resources at a threat",
    "start": "593279",
    "end": "599600"
  },
  {
    "text": "level right you know this is a page we borrowed from the blockchain people which is what they call gas meters right",
    "start": "599600",
    "end": "606000"
  },
  {
    "text": "you know that's uh essentially you give each web assembly up code or instruction a gas value and then say when you start",
    "start": "606000",
    "end": "612640"
  },
  {
    "text": "this vm i would allocate say a million gas and then for you know then it computes um um how many instructions it",
    "start": "612640",
    "end": "620240"
  },
  {
    "text": "went through after you exhausted all the gas it stops right you know so you can even get people to pay you based on gas",
    "start": "620240",
    "end": "626399"
  },
  {
    "text": "they can pre-buy those gas as credits and then you know and they use that you know this um",
    "start": "626399",
    "end": "633839"
  },
  {
    "text": "we have this um we have this gas support built into our our c api go api and the",
    "start": "634079",
    "end": "639200"
  },
  {
    "text": "rust api i believe quantum time also have it you know it's uh if you look into the rust api they",
    "start": "639200",
    "end": "646000"
  },
  {
    "text": "actually have something called i forgot the name they didn't call it gas but",
    "start": "646000",
    "end": "652000"
  },
  {
    "text": "but it's a very similar concept so those are some of the um unique features that what i what i would say that made what",
    "start": "652000",
    "end": "659519"
  },
  {
    "text": "midwasm edge you know um appropriate vm for cloud native applications",
    "start": "659519",
    "end": "666000"
  },
  {
    "text": "where i skip the use cases so we can go right to how you know how we do that how we make",
    "start": "666000",
    "end": "672079"
  },
  {
    "text": "a webassembly workload run side by side with docker workload in kubernetes cluster right",
    "start": "672079",
    "end": "678320"
  },
  {
    "text": "we have three approaches and some you know i would be focus i would mostly focus on number one because this uh",
    "start": "678320",
    "end": "684160"
  },
  {
    "text": "because this approach that we took the the other two approach approaches is is one that you have heard from the end",
    "start": "684160",
    "end": "690480"
  },
  {
    "text": "group they have a webassembly runtime that manages i think the last time they told me it's 500 000 machines 500 000",
    "start": "690480",
    "end": "698399"
  },
  {
    "text": "machines in their data center right you know that's um and they use container dcm and then there's uh um",
    "start": "698399",
    "end": "705040"
  },
  {
    "text": "the excellent work microsoft have done with crossland you know but the way we did it is that we have also",
    "start": "705040",
    "end": "711120"
  },
  {
    "text": "we made our entire runtime compliant with oci so what does it mean so what does what",
    "start": "711120",
    "end": "716399"
  },
  {
    "text": "is oci compliant runtime so this is i think you know all of you are very familiar with this graph right you know",
    "start": "716399",
    "end": "722639"
  },
  {
    "text": "that you have docker and kubernetes at the top and then you have a container runtime",
    "start": "722639",
    "end": "728240"
  },
  {
    "text": "interface cri and underneath that you have different runtimes and uh",
    "start": "728240",
    "end": "733760"
  },
  {
    "text": "it all goes down to um a couple of you know a container runtimes called run c",
    "start": "733760",
    "end": "739279"
  },
  {
    "text": "typically run ccron you know that's uh um and from those from those binary",
    "start": "739279",
    "end": "744320"
  },
  {
    "text": "applications actually start the container right it's this approach is actually not",
    "start": "744320",
    "end": "750560"
  },
  {
    "text": "unique to us you know a lot of people have done it you know so there's wrong c which is a goal-based container runtimes",
    "start": "750560",
    "end": "756160"
  },
  {
    "text": "code means wrong container and then there's c wrong it means c based run you know c based container runtime and",
    "start": "756160",
    "end": "762959"
  },
  {
    "text": "there's wrong e you know it's a sgx based you know um a zero knowledge proof you know trusted",
    "start": "762959",
    "end": "770320"
  },
  {
    "text": "computing environment uh container around time and then there's cut around time there's guys are there surroundings",
    "start": "770320",
    "end": "775839"
  },
  {
    "text": "see you know they're sponsored those you know so so so people have um you know um as a community has innovated to um to",
    "start": "775839",
    "end": "783120"
  },
  {
    "text": "change those long time buyers to change those runtimes to make some run different workloads right you know so so",
    "start": "783120",
    "end": "788800"
  },
  {
    "text": "some of them uh application containers some of them are not and wrong application containers in different places",
    "start": "788800",
    "end": "794160"
  },
  {
    "text": "so the work that we have done is to um is to fork serum and uh",
    "start": "794160",
    "end": "799880"
  },
  {
    "text": "[Music] we you know and we're trying to merge it up upstream",
    "start": "799880",
    "end": "804959"
  },
  {
    "text": "but but still in the process of that right you know so um so the work on our side is mostly a da it's uh we call this",
    "start": "804959",
    "end": "811040"
  },
  {
    "text": "tool zero w and there's a github link there so it's uh it's based on sera but",
    "start": "811040",
    "end": "817279"
  },
  {
    "text": "it's uh it has some logic in it to detect whether we are running a docker container or we",
    "start": "817279",
    "end": "823680"
  },
  {
    "text": "are running a web assembly image if it's a web assembly image it's loads or just",
    "start": "823680",
    "end": "828800"
  },
  {
    "text": "use the oci interface to to load the web assembly image and then run it right so it's zero on w means based on zero",
    "start": "828800",
    "end": "836160"
  },
  {
    "text": "but runs webassembly right you know so it's uh um like i said it utilizes the",
    "start": "836160",
    "end": "842320"
  },
  {
    "text": "the the crio and kubernetes extends extensible architecture you know",
    "start": "842320",
    "end": "847519"
  },
  {
    "text": "kubernetes and crio are both set up to allow you to add your own custom runtimes so instead of",
    "start": "847519",
    "end": "854079"
  },
  {
    "text": "using serum we replace the serum binary with our with our build here that allows",
    "start": "854079",
    "end": "860240"
  },
  {
    "text": "you know that's um because this this is the dropping serum replacement it runs",
    "start": "860240",
    "end": "867600"
  },
  {
    "text": "darker containers just like crown does and this also runs web assembly so it allows us to run docker and web assembly",
    "start": "867839",
    "end": "874160"
  },
  {
    "text": "side by side in the same in the same cluster environment and",
    "start": "874160",
    "end": "880000"
  },
  {
    "text": "then up from that you know you have you know um you would be able to um you know store",
    "start": "880320",
    "end": "886240"
  },
  {
    "text": "web uh wasn't files web assembly files directly in docker hub so it's with all the docker schematics would work you can",
    "start": "886240",
    "end": "892639"
  },
  {
    "text": "pull the image and then you can start and you can run right you know so so that's and it uh supports resource",
    "start": "892639",
    "end": "898720"
  },
  {
    "text": "allocations through um c group fs and the system d",
    "start": "898720",
    "end": "904560"
  },
  {
    "text": "um there is a there's a video um which i don't think we should um play it",
    "start": "904720",
    "end": "910160"
  },
  {
    "text": "here but um you know it it goes through the whole process because as we know anything related to",
    "start": "910160",
    "end": "915600"
  },
  {
    "text": "docker and kubernetes take a long time to demo you know that's uh you know you have to show you know download this download that you know and",
    "start": "915600",
    "end": "922800"
  },
  {
    "text": "resolve this conflict and that so you know but i i walk through the the main",
    "start": "922800",
    "end": "927920"
  },
  {
    "text": "steps here so um from the first part you can see this is uh",
    "start": "927920",
    "end": "932959"
  },
  {
    "text": "this is to create a docker image the docker image has no operating system it just has a web assembly file that is",
    "start": "932959",
    "end": "939120"
  },
  {
    "text": "the oci compliance so to the so to speak oci compliant web assembly application that's been packaged in",
    "start": "939120",
    "end": "945120"
  },
  {
    "text": "the container format and it can be stored and pulled from the docker hub right so we publish to to",
    "start": "945120",
    "end": "952079"
  },
  {
    "text": "to docker hub and then we use the crio command line tool it's cri cri ctl and",
    "start": "952079",
    "end": "960560"
  },
  {
    "text": "we can pull that from the well before we get to this step we have",
    "start": "960560",
    "end": "966320"
  },
  {
    "text": "already replaced the serum binary in the cr in our cio",
    "start": "966320",
    "end": "972399"
  },
  {
    "text": "installation with our build of the serum w binary right you know so so there's a slash being slash zero and we replace",
    "start": "972399",
    "end": "979839"
  },
  {
    "text": "that binary with the binary that we have built um you know to make it be to make it aware of the different type of you",
    "start": "979839",
    "end": "986399"
  },
  {
    "text": "know content container images right so we can just do things the way that you normally would",
    "start": "986399",
    "end": "993040"
  },
  {
    "text": "do with stock images you can pull them and uh you can run them you can create a part and they can you",
    "start": "993040",
    "end": "999519"
  },
  {
    "text": "can run them and it would just uh you know start the container it would run that web assembly application that",
    "start": "999519",
    "end": "1005040"
  },
  {
    "text": "webassembly application happens to be a um a washi application that they read something from the command line and then",
    "start": "1005040",
    "end": "1011360"
  },
  {
    "text": "generate some output print out through the command line and you can see all the results in the logs right you know so so",
    "start": "1011360",
    "end": "1017120"
  },
  {
    "text": "that's uh that's a easy way to test it right you know so that's um",
    "start": "1017120",
    "end": "1023600"
  },
  {
    "text": "with that modification for the sierra you can um you can try it with docker images and you can try to use web",
    "start": "1023600",
    "end": "1029199"
  },
  {
    "text": "assembly images and both of them work right so now we go to the next step we want to",
    "start": "1029199",
    "end": "1034959"
  },
  {
    "text": "build um you know we want to use this modified cio to build a kubernetes cluster",
    "start": "1034959",
    "end": "1040880"
  },
  {
    "text": "however in order to do that we need a webassembly application that is long running meaning that we need a",
    "start": "1040880",
    "end": "1047438"
  },
  {
    "text": "webassembly application that's in itself act as a microservice there's no docker",
    "start": "1047439",
    "end": "1052720"
  },
  {
    "text": "around it there's no docker or another host application around it that web assembly application when you start it",
    "start": "1052720",
    "end": "1059440"
  },
  {
    "text": "should um listen to the network and respond to the network that requires us to support the wazzy socket",
    "start": "1059440",
    "end": "1067600"
  },
  {
    "text": "specification and the wazi socket specification as i understand it has been fairly slow so you know",
    "start": "1067600",
    "end": "1074000"
  },
  {
    "text": "different teams have come up with different ways to do it you know that's uh that's what we did as well that's gross",
    "start": "1074000",
    "end": "1080480"
  },
  {
    "text": "out of necessity that's because we uh because we need to have this run in the kubernetes environment so we we we we must have a",
    "start": "1080480",
    "end": "1088559"
  },
  {
    "text": "um you know a micro service that can listen to the http network so we have so i'm going to",
    "start": "1088559",
    "end": "1095440"
  },
  {
    "text": "demonstrate two ways to do that the first is just to use uh to use our rust api and uh because this is not a w3c",
    "start": "1095440",
    "end": "1104400"
  },
  {
    "text": "standard so it's uh so we can't just you know use the standard rust api to",
    "start": "1104400",
    "end": "1109600"
  },
  {
    "text": "create network connection or socket yet we have to um as you can see uh we have to import uh wasn't edge while the",
    "start": "1109600",
    "end": "1116240"
  },
  {
    "text": "socket for the tcp listeners and tcp stream and you know things of that nature but once you have it the the the",
    "start": "1116240",
    "end": "1122640"
  },
  {
    "text": "main application becomes fairly simple you know you um this looks just like you know uh how would",
    "start": "1122640",
    "end": "1129120"
  },
  {
    "text": "you write uh uh a web server in rust right you know that's uh um you know you open the port and then you say listen",
    "start": "1129120",
    "end": "1135039"
  },
  {
    "text": "listen for it and the the the um the function that doesn't work is is called",
    "start": "1135039",
    "end": "1141120"
  },
  {
    "text": "handle client and uh the code is here you know this",
    "start": "1141120",
    "end": "1147280"
  },
  {
    "text": "the screenshot is the entire application you know this entire app you can just have this much",
    "start": "1147280",
    "end": "1152400"
  },
  {
    "text": "code right you know so if you look at the the handle client it basically",
    "start": "1152400",
    "end": "1158000"
  },
  {
    "text": "you know gets the input http and the",
    "start": "1158000",
    "end": "1163760"
  },
  {
    "text": "pass out you know decode it and pass out different elements from it and then it generates a",
    "start": "1163760",
    "end": "1170000"
  },
  {
    "text": "response and this response is basically just to echo back the the body right you know so if the the post request has a",
    "start": "1170000",
    "end": "1176880"
  },
  {
    "text": "body and then you know um from the command lines which from the command line that you're on the",
    "start": "1176880",
    "end": "1182480"
  },
  {
    "text": "server you don't just echo back to combat it would just just it'll just echo the back so that's",
    "start": "1182480",
    "end": "1190080"
  },
  {
    "text": "a very simple rust rust-based um http http server that runs inside wasmage and",
    "start": "1190080",
    "end": "1196400"
  },
  {
    "text": "that allows uh we that allows us to have a long-running was image",
    "start": "1196400",
    "end": "1201600"
  },
  {
    "text": "instance that can be managed by kubernetes can be started by our modified version of zero right zero w",
    "start": "1201600",
    "end": "1208320"
  },
  {
    "text": "and then the second way to do that it's probably what um most people would do and as i think we",
    "start": "1208320",
    "end": "1214000"
  },
  {
    "text": "heard it again again today that people want to use javascript right especially java developers and especially web",
    "start": "1214000",
    "end": "1219360"
  },
  {
    "text": "developers they want to use javascript so the way we did is that in our in the in the javascript runtime",
    "start": "1219360",
    "end": "1226400"
  },
  {
    "text": "that runs inside wasmage we uh we we used",
    "start": "1226400",
    "end": "1232240"
  },
  {
    "text": "um like i just said we can use rust to implement javascript apis so meaning that we can define a javascript api that",
    "start": "1232240",
    "end": "1239600"
  },
  {
    "text": "is available to javascript developers but when when the javascript program calls it it actually causes underlying",
    "start": "1239600",
    "end": "1245120"
  },
  {
    "text": "rust program to execute it and all inside was a match right you know so taking that um",
    "start": "1245120",
    "end": "1251679"
  },
  {
    "text": "you know rust-based sdk we can make it into",
    "start": "1251679",
    "end": "1257520"
  },
  {
    "text": "a javascript api called http server so this",
    "start": "1257520",
    "end": "1264240"
  },
  {
    "text": "so all the all the raster code becomes this couple lines of javascript code and uh so it's just a starter",
    "start": "1264240",
    "end": "1272080"
  },
  {
    "text": "http server and then you know and",
    "start": "1272080",
    "end": "1277280"
  },
  {
    "text": "for the sake of simplicity i'm i'm i'm showing it as a as a blocking example right you know so it's",
    "start": "1277280",
    "end": "1282880"
  },
  {
    "text": "just the infinite loop it keeps getting the request and once you get the request it's spread out the body and the",
    "start": "1282880",
    "end": "1289280"
  },
  {
    "text": "um it's um in uh um [Music]",
    "start": "1289280",
    "end": "1295200"
  },
  {
    "text": "yeah so um but i also said there's uh there's another uh there's another work",
    "start": "1295200",
    "end": "1301280"
  },
  {
    "text": "that we did with wazi is to support asynchronous supporting so we can do that",
    "start": "1301280",
    "end": "1307120"
  },
  {
    "text": "in a way that is asynchronous both using um javascript async or using rust",
    "start": "1307120",
    "end": "1312320"
  },
  {
    "text": "futures so both of those are supported as well but you know here we",
    "start": "1312320",
    "end": "1317360"
  },
  {
    "text": "are we are um you know um shooting a very simple javascript example that's only i would say",
    "start": "1317360",
    "end": "1325440"
  },
  {
    "text": "less than 10 likes of code 20 lines and 10 lines of code you know that's uh and it's uh",
    "start": "1325440",
    "end": "1332480"
  },
  {
    "text": "it starts a container as you know it's this experience goes very similar to",
    "start": "1332480",
    "end": "1338559"
  },
  {
    "text": "it strongly reminds me of the old days of java right you know that's when you have a jvm you use jvm to do application",
    "start": "1338559",
    "end": "1343760"
  },
  {
    "text": "server you do exactly this right you know that's uh but you know that's uh um well you",
    "start": "1343760",
    "end": "1349760"
  },
  {
    "text": "you know i think this is what uh enterprise software demands you know that's uh um so we are we're evolving",
    "start": "1349760",
    "end": "1355120"
  },
  {
    "text": "toward that stage at the web assembly as well so",
    "start": "1355120",
    "end": "1359960"
  },
  {
    "text": "so on kubernetes um once we have the crio set up and the um the c run in crl",
    "start": "1360240",
    "end": "1366400"
  },
  {
    "text": "setup and also the um",
    "start": "1366400",
    "end": "1371520"
  },
  {
    "text": "the web watson edge-based micro services that's the long-running setup we can now",
    "start": "1371520",
    "end": "1377280"
  },
  {
    "text": "set up kubernetes and it's a it becomes really simple you know you just um in a standard kubernetes setup you can",
    "start": "1377280",
    "end": "1383440"
  },
  {
    "text": "pass the argument set container runtime right you put container runtime as a remote and then put it in pointing to",
    "start": "1383440",
    "end": "1389679"
  },
  {
    "text": "cio or in minicube you know that's probably easier to do you just say you know container run have crio and then it",
    "start": "1389679",
    "end": "1396880"
  },
  {
    "text": "would uh find the the crl the modified crl runtime on the on",
    "start": "1396880",
    "end": "1403280"
  },
  {
    "text": "the pod machine and then start it and then use that to go to docker hub or to",
    "start": "1403280",
    "end": "1408559"
  },
  {
    "text": "go to a image repository to get the webassembly image and run it right",
    "start": "1408559",
    "end": "1414480"
  },
  {
    "text": "okay so there are a couple of um real world use cases and you know because i spent a",
    "start": "1414480",
    "end": "1420240"
  },
  {
    "text": "lot of time in asia you know that's um most of the use cases are actually from from you know internet providers in",
    "start": "1420240",
    "end": "1428720"
  },
  {
    "text": "from internet providers in china so you know they are leveraging like cdn network to do distributed computing so",
    "start": "1428720",
    "end": "1434880"
  },
  {
    "text": "for instance you know there's uh um there are distributed cdn networks where they put um you know those setup boxes",
    "start": "1434880",
    "end": "1441279"
  },
  {
    "text": "into people's homes and then they did pre-distribute tonight's movies onto those uh onto those boxes and then um",
    "start": "1441279",
    "end": "1448720"
  },
  {
    "text": "you know because for each neighborhood you know um the movies you're gonna watch are probably just",
    "start": "1448720",
    "end": "1454320"
  },
  {
    "text": "that three or four you know that's so so so they would predict that and put that all that and put that on the box right",
    "start": "1454320",
    "end": "1459840"
  },
  {
    "text": "you know and from those boxes they can they can act as a distributed cdn and serve a lot of clients but that box",
    "start": "1459840",
    "end": "1466720"
  },
  {
    "text": "essentially only has a has a cell phone chip in it it's uh it has a um arm7 chip",
    "start": "1466720",
    "end": "1472400"
  },
  {
    "text": "in it so so um before weber simulator used to run docker on it and this uh",
    "start": "1472400",
    "end": "1477600"
  },
  {
    "text": "this device can run for dockers and they serve four big big enterprise customers you know something of something of land",
    "start": "1477600",
    "end": "1484000"
  },
  {
    "text": "land nature right so now they can with web assembly they can run a lot more so so you know so there are cd and network",
    "start": "1484000",
    "end": "1489520"
  },
  {
    "text": "testing and there's um you know there are other you know cloud providers that does sidecar runtime you know that's",
    "start": "1489520",
    "end": "1496320"
  },
  {
    "text": "managed by kubernetes and doing service mesh using using the works that we have done",
    "start": "1496320",
    "end": "1502799"
  },
  {
    "text": "so well so then the first approach is our approach right",
    "start": "1502799",
    "end": "1507919"
  },
  {
    "text": "and then the second approach really is runwas maps as container dcms that's what one of the previous talk has you",
    "start": "1507919",
    "end": "1514480"
  },
  {
    "text": "know has talked about right you know there's uh um you know that's uh ali and uh uh and and financial stuff so i'll",
    "start": "1514480",
    "end": "1521520"
  },
  {
    "text": "skip over that and then the third approach which i thought also was very very interesting is the crossland",
    "start": "1521520",
    "end": "1526720"
  },
  {
    "text": "approach obviously we have experts here you know people who have developed that you know so",
    "start": "1526720",
    "end": "1532880"
  },
  {
    "text": "i wouldn't assume ignorance you know that's uh so if you have questions about crossland you um",
    "start": "1532880",
    "end": "1538240"
  },
  {
    "text": "go you can ask the experts so beyond kubernetes you know that's um so we now",
    "start": "1538240",
    "end": "1544960"
  },
  {
    "text": "have uh a way to run um what i would say",
    "start": "1544960",
    "end": "1550000"
  },
  {
    "text": "wasn't workload in a docker-like fashion in a kubernetes-like cluster you know that's",
    "start": "1550000",
    "end": "1556000"
  },
  {
    "text": "uh so beyond the regular kubernetes what are the other use cases there are obviously there are quite a few",
    "start": "1556000",
    "end": "1562559"
  },
  {
    "text": "kubernetes variations for edge computing and i think the um",
    "start": "1562559",
    "end": "1568559"
  },
  {
    "text": "all three the there's four the top three are owning cncfs today you know those are all what they call kubernetes for",
    "start": "1568559",
    "end": "1575200"
  },
  {
    "text": "the edge right cube edge super edge opening up and uh you know and then there's coop sphere which is a",
    "start": "1575200",
    "end": "1582400"
  },
  {
    "text": "private cloud kubernetes deployment and they they're integrating with data microsoft dapper and they are also um",
    "start": "1582400",
    "end": "1588640"
  },
  {
    "text": "you know having their own function as a service you know so there's lots of innovations around this area you know",
    "start": "1588640",
    "end": "1593679"
  },
  {
    "text": "that's that's that that goes slightly out of the regular kubernetes but still use the same",
    "start": "1593679",
    "end": "1599679"
  },
  {
    "text": "oci infrastructure so that's one of the areas that that we thought our approach",
    "start": "1599679",
    "end": "1605200"
  },
  {
    "text": "could be really interesting because that's because underneath of them they all use cira or wrong c you know now we change that to",
    "start": "1605200",
    "end": "1611919"
  },
  {
    "text": "zero w and then of course there are um you know",
    "start": "1611919",
    "end": "1617039"
  },
  {
    "text": "um a service mesh in service mesh there are two strong use cases one is just to use",
    "start": "1617039",
    "end": "1624000"
  },
  {
    "text": "um the web assembly runtime of the web assembly application as a site application you know so the web assembly",
    "start": "1624000",
    "end": "1630240"
  },
  {
    "text": "provides micro services itself right you know so uh we have examples that we have done with with dapper you know that's uh",
    "start": "1630240",
    "end": "1636960"
  },
  {
    "text": "um you know um there's a there's case study published that on on info cue and you can look at that and uh um you know",
    "start": "1636960",
    "end": "1644399"
  },
  {
    "text": "there's multiple ways to do it how to integrate that into the side car right you know that's you can have a host application that use sidecar",
    "start": "1644399",
    "end": "1650960"
  },
  {
    "text": "sdk or you have you know um what's the match application running by itself and then of course",
    "start": "1650960",
    "end": "1657039"
  },
  {
    "text": "there are you know there's um active collaboration that we want to pursue are you know those",
    "start": "1657039",
    "end": "1662559"
  },
  {
    "text": "side car runtimes that's managed by kubernetes you know natively managed by coordinators like linker d right you",
    "start": "1662559",
    "end": "1668159"
  },
  {
    "text": "know those are the things that we are um you know we are very actively looking at try to integrate yeah",
    "start": "1668159",
    "end": "1674320"
  },
  {
    "text": "then on service mesh there's uh other side of the story which is uh um um which is a the the traffic proxy",
    "start": "1674320",
    "end": "1682640"
  },
  {
    "text": "you know so um in the service mesh you have you have those side cars but then you have proxies to direct traffic to the side",
    "start": "1682640",
    "end": "1689760"
  },
  {
    "text": "cars right and there is a growing trend i think start from one way is to have is",
    "start": "1689760",
    "end": "1694880"
  },
  {
    "text": "to make a web assembly into a scripting language for the um for the proxy uh replacing lua right you",
    "start": "1694880",
    "end": "1701520"
  },
  {
    "text": "know that's uh so um onware has a standard it's called um you know proxy awesome and then it's",
    "start": "1701520",
    "end": "1708159"
  },
  {
    "text": "being adopted by you know a bunch of other guys so so this is also a very interesting area",
    "start": "1708159",
    "end": "1714240"
  },
  {
    "text": "that that that we find you know that's um it's a it's not directly related kubernetes but",
    "start": "1714240",
    "end": "1720320"
  },
  {
    "text": "it's tangentially related right then of course you know um as early as",
    "start": "1720320",
    "end": "1726000"
  },
  {
    "text": "speakers has also spoke to you know there's uh there's also a growing need to run webassembly directly on devices",
    "start": "1726000",
    "end": "1732559"
  },
  {
    "text": "um that's um you know that's where uh web assembly become really interesting because",
    "start": "1732559",
    "end": "1738159"
  },
  {
    "text": "there's different implementation web assemblies they all have different characteristics some of them are really small that's um like the earlier talk",
    "start": "1738159",
    "end": "1744880"
  },
  {
    "text": "talking about running web assembly on camera right you know but uh for larger systems um that's",
    "start": "1744880",
    "end": "1751679"
  },
  {
    "text": "increasingly popular for instance autonomous cars or smart factories that's um they all have not regular",
    "start": "1751679",
    "end": "1758960"
  },
  {
    "text": "linux but real-time linux operating systems and they all need containers i think wind river um you know the vx",
    "start": "1758960",
    "end": "1765520"
  },
  {
    "text": "works guys um published something called vxworks containers",
    "start": "1765520",
    "end": "1771120"
  },
  {
    "text": "i think a couple months ago and uh they were talking about using container technology in fighter jets",
    "start": "1771120",
    "end": "1777679"
  },
  {
    "text": "right i have seen toyota using containers in their um using docker containers in",
    "start": "1777679",
    "end": "1783679"
  },
  {
    "text": "their next generation cars just think about it using darker in cars you know",
    "start": "1783679",
    "end": "1788880"
  },
  {
    "text": "that's the docker controlling something as vital as autonomous driving right you know that's uh you know in my opinion",
    "start": "1788880",
    "end": "1794799"
  },
  {
    "text": "this is a this is a it's not a good fit you know there's much better fit which is you know that's um to have a to have",
    "start": "1794799",
    "end": "1801760"
  },
  {
    "text": "a much more abstract and uh and lighter runtime the based on web assembly so so",
    "start": "1801760",
    "end": "1807440"
  },
  {
    "text": "so um on that ground we we work with a project also linux foundation project called cell 4 and",
    "start": "1807440",
    "end": "1814000"
  },
  {
    "text": "that's that's a formally verified real-time",
    "start": "1814000",
    "end": "1819360"
  },
  {
    "text": "micro kernel system and it's uh i think it's been adopted by quite a few you",
    "start": "1819360",
    "end": "1824640"
  },
  {
    "text": "know autonomous driving companies and uh you know um electric car companies cell phone is",
    "start": "1824640",
    "end": "1830480"
  },
  {
    "text": "based in australia and uh um you know its users almost a lot of them are in asia and the u.s military as well they",
    "start": "1830480",
    "end": "1837840"
  },
  {
    "text": "have to put it on the on on the drones and you know things like that so you know so um",
    "start": "1837840",
    "end": "1843520"
  },
  {
    "text": "that is another potential you okay",
    "start": "1843520",
    "end": "1849039"
  },
  {
    "text": "okay this is another this is another use case you know that's uh um so so um",
    "start": "1849039",
    "end": "1855440"
  },
  {
    "text": "not directly related to kubernetes but that's also something um when you run it in in a real-time operating system you",
    "start": "1855440",
    "end": "1861919"
  },
  {
    "text": "also need orchestration solution and is kubernetes going to be or a modified version of kubernetes or",
    "start": "1861919",
    "end": "1868000"
  },
  {
    "text": "something else would be part of the would be part of the solution it's also something that's that that we are very",
    "start": "1868000",
    "end": "1873760"
  },
  {
    "text": "interested in exploring um yeah so then",
    "start": "1873760",
    "end": "1879919"
  },
  {
    "text": "i think i pretty much covered that you know that's um then there's data-driven orchestration you know meaning that you",
    "start": "1879919",
    "end": "1884960"
  },
  {
    "text": "know we are not um thinking about computer instances but thinking about a flow of data you know",
    "start": "1884960",
    "end": "1890640"
  },
  {
    "text": "when data comes in we want to react to it you know like conor just said right you do a uh create a reactive framework",
    "start": "1890640",
    "end": "1896799"
  },
  {
    "text": "and then you know um and and then web assembly becomes uh becomes a reactor or becomes a",
    "start": "1896799",
    "end": "1902480"
  },
  {
    "text": "reactive function in that framework maybe that's the way you know maybe that's the orchestrating solution",
    "start": "1902480",
    "end": "1908159"
  },
  {
    "text": "for a lot of those applications so yeah that's um i think i'm",
    "start": "1908159",
    "end": "1913600"
  },
  {
    "text": "right on time so if there's any questions",
    "start": "1913600",
    "end": "1919640"
  },
  {
    "text": "hi everybody so we're back here are there any questions before we move on to the lightning talk",
    "start": "1921679",
    "end": "1928399"
  },
  {
    "text": "yeah go ahead uh you mentioned that the c-run w",
    "start": "1928399",
    "end": "1934880"
  },
  {
    "text": "um where is that at upstream um is there a",
    "start": "1934880",
    "end": "1940080"
  },
  {
    "text": "pr that's being worked and you just kind of shed some more light on that yeah the upstream is zero so um we",
    "start": "1940080",
    "end": "1948240"
  },
  {
    "text": "want to merge back to to to zero however as you might imagine it needs convincing",
    "start": "1948240",
    "end": "1953519"
  },
  {
    "text": "right you know because you know we need to tell that we need to tell the crm developers why you need to support web assembly",
    "start": "1953519",
    "end": "1959840"
  },
  {
    "text": "right so and uh we are trying to talk to them try",
    "start": "1959840",
    "end": "1964880"
  },
  {
    "text": "to you know that's why we come to meetings like this right you know try to try to get consensus",
    "start": "1964880",
    "end": "1971840"
  },
  {
    "text": "make sure that's on uh so uh we're gonna go ahead and have oscar come",
    "start": "1975519",
    "end": "1980640"
  },
  {
    "text": "up but while we do that go so oscar go ahead while we do that while we're here let's ask one or two more questions um",
    "start": "1980640",
    "end": "1987440"
  },
  {
    "text": "on the virtual stream you may get cut off i'm not really sure but uh so there was another question",
    "start": "1987440",
    "end": "1992640"
  },
  {
    "text": "over here yeah i'm curious what is the approach that a developer",
    "start": "1992640",
    "end": "1997919"
  },
  {
    "text": "would take to take advantage of some of the custom web assembly extensions",
    "start": "1997919",
    "end": "2004440"
  },
  {
    "text": "right so the question is um how would the developer take advantage of the custom extensions that we break into",
    "start": "2005679",
    "end": "2011840"
  },
  {
    "text": "watson edge so um for all the extensions that we have we",
    "start": "2011840",
    "end": "2016880"
  },
  {
    "text": "must first have a rust sdk then we we attempt to have a javascript sdk as well",
    "start": "2016880",
    "end": "2022159"
  },
  {
    "text": "so for developers um you know that's in a way it breaks the",
    "start": "2022159",
    "end": "2027519"
  },
  {
    "text": "compa compatibility with rust with webassembly because you know once they use our roster sdk to uh to build",
    "start": "2027519",
    "end": "2034000"
  },
  {
    "text": "application and compile into rust it would not work uh another runtime because the runtime doesn't have the",
    "start": "2034000",
    "end": "2039440"
  },
  {
    "text": "host functions but that's that's also why we are here that's we want to standardize it right you know",
    "start": "2039440",
    "end": "2044880"
  },
  {
    "text": "that's uh yeah okay well thank you very much uh go ahead and unplug and we'll",
    "start": "2044880",
    "end": "2052878"
  }
]