[
  {
    "text": "hello welcome so uh my name's uh Alex kop I'm",
    "start": "399",
    "end": "6600"
  },
  {
    "text": "an architect at akami and co-chair of uh the storage tag for the",
    "start": "6600",
    "end": "12400"
  },
  {
    "text": "cncf um and I'm here with my two co-chairs uh Shing and Rafaela do you",
    "start": "12400",
    "end": "17880"
  },
  {
    "text": "want to quickly introduce yourself hello everyone I'm shingy I work at a vml in the clown native 3 team also a co-chair",
    "start": "17880",
    "end": "26199"
  },
  {
    "text": "of tech storage and my name is Rafa P I am an",
    "start": "26199",
    "end": "31359"
  },
  {
    "text": "architect at rat so we're here today to talk about the storage tag but also a little bit",
    "start": "31359",
    "end": "37719"
  },
  {
    "text": "about the storage landscape in the cncf um about 350 people signed up for",
    "start": "37719",
    "end": "44840"
  },
  {
    "text": "this but there's obviously not 350 people here so we're going to tell you how exciting storage is and hopefully",
    "start": "44840",
    "end": "50239"
  },
  {
    "text": "you can tell everybody else too um so just a little bit about what we're covering today we're going to talk",
    "start": "50239",
    "end": "56359"
  },
  {
    "text": "a little bit about the tag how you can help and uh join in the commun Community what is cloud native storage and some of",
    "start": "56359",
    "end": "62559"
  },
  {
    "text": "the documents um and point you to some links that provide uh additional information uh about the work that we've",
    "start": "62559",
    "end": "68840"
  },
  {
    "text": "been doing so first off the cncf um has",
    "start": "68840",
    "end": "75240"
  },
  {
    "text": "been expanding uh the the the roles effectively to allow it to scale to the",
    "start": "75240",
    "end": "80759"
  },
  {
    "text": "large number of projects that have been uh coming in and joining the cncf um and so the tags or the technical advisory",
    "start": "80759",
    "end": "87560"
  },
  {
    "text": "groups um are here to to to help provide um uh subject matter expertise in this",
    "start": "87560",
    "end": "93759"
  },
  {
    "text": "case for the storage space uh to to the cncf talk we have meetings um every",
    "start": "93759",
    "end": "100600"
  },
  {
    "text": "second and fourth Wednesday of the month all the meetings are open um and on every slide where we have",
    "start": "100600",
    "end": "108320"
  },
  {
    "text": "some links please uh take a quick pick of the QR code and that'll take you to to the repo that we're talking",
    "start": "108320",
    "end": "115079"
  },
  {
    "text": "about um so who are we well you've met the co-chairs we're we're up here on State we also have um a number of uh",
    "start": "115079",
    "end": "123079"
  },
  {
    "text": "tech leads that help with that that that work with with us and with the rest of the community as well as um some to",
    "start": "123079",
    "end": "130759"
  },
  {
    "text": "liazon whose for storage is Nikita and and Matt Farina um in our",
    "start": "130759",
    "end": "136879"
  },
  {
    "text": "case um so what do we do the the the main idea for creating the tags was to",
    "start": "136879",
    "end": "143239"
  },
  {
    "text": "be able to to scale what the cncf uh is capable of as we increase the large",
    "start": "143239",
    "end": "149160"
  },
  {
    "text": "number of projects within the environment so what we're what we're what we're here to do is uh",
    "start": "149160",
    "end": "156120"
  },
  {
    "text": "effectively create um content and uh white papers Etc to help uh provide",
    "start": "156120",
    "end": "163560"
  },
  {
    "text": "guidance to the community as to the ecosystem and how to best uh use storage",
    "start": "163560",
    "end": "169239"
  },
  {
    "text": "we also have a very important role where we review um projects within the cncf",
    "start": "169239",
    "end": "174519"
  },
  {
    "text": "and guide them through the sandbox uh incubation and and graduation stages you",
    "start": "174519",
    "end": "180000"
  },
  {
    "text": "you'll have seen some of the graduated projects in the keynote this morning uh and of course we we we work with the",
    "start": "180000",
    "end": "185920"
  },
  {
    "text": "user community and and provide that subject matter expertise so wanted to quickly touch on some of",
    "start": "185920",
    "end": "193120"
  },
  {
    "text": "the cncf projects which um we've been working with and and which have been going through the process so starting",
    "start": "193120",
    "end": "199799"
  },
  {
    "text": "with with incubation we have uh dragonfly which is which is a peer-to-peer registry Cubs um a large",
    "start": "199799",
    "end": "208159"
  },
  {
    "text": "scale um shared file system system and Longhorn that provides a distributed uh block and and file system capability",
    "start": "208159",
    "end": "215560"
  },
  {
    "text": "running in kubernetes and we also have a large number of graduated projects that",
    "start": "215560",
    "end": "220920"
  },
  {
    "text": "that that fit under the storage umbrella of course you'll all have heard of etcd which is the strong consistency key",
    "start": "220920",
    "end": "227319"
  },
  {
    "text": "value store which most uh which which all kubernetes uh um uh clusters depend",
    "start": "227319",
    "end": "232959"
  },
  {
    "text": "on but we also have uh really interesting scaleout uh key value stores and databases like tikv and Fess as well",
    "start": "232959",
    "end": "241720"
  },
  {
    "text": "as Rook which falls into the operator umbrella and and Jing is going to be talking a little bit more about",
    "start": "241720",
    "end": "247640"
  },
  {
    "text": "operators in a minute um and Rook uh acts as an operator for seph so providing uh file",
    "start": "247640",
    "end": "254879"
  },
  {
    "text": "system uh block and Object Store and we also have Harbor which is um which is a",
    "start": "254879",
    "end": "260680"
  },
  {
    "text": "uh container registry project um for uh for for deploying your own private",
    "start": "260680",
    "end": "266080"
  },
  {
    "text": "container Registries so a little bit about the different categorizations of",
    "start": "266080",
    "end": "271639"
  },
  {
    "text": "of the projects and and and and how you need to think about these so there are a large number of projects that come in as",
    "start": "271639",
    "end": "278800"
  },
  {
    "text": "sandbox sand sandbox projects have a fairly low bar to entry and and the idea",
    "start": "278800",
    "end": "284759"
  },
  {
    "text": "is for them to join the cncf so that we can um help grow them help evaluate experiments help build the community and",
    "start": "284759",
    "end": "291960"
  },
  {
    "text": "and also you know figure out uh their their IP policies um uh within within",
    "start": "291960",
    "end": "297160"
  },
  {
    "text": "the community and as we progress as as the project get gains traction they go",
    "start": "297160",
    "end": "302759"
  },
  {
    "text": "to incubation stage so incubation is actually uh despite the name it's it's",
    "start": "302759",
    "end": "308080"
  },
  {
    "text": "where a lot of the due diligence happens so at incubation stage we um figure out",
    "start": "308080",
    "end": "314160"
  },
  {
    "text": "uh real life use cases the tag and the TOC interview um real life end users that",
    "start": "314160",
    "end": "320800"
  },
  {
    "text": "are using the project um and we and we therefore get you know a healthy level of validation",
    "start": "320800",
    "end": "327639"
  },
  {
    "text": "that the project is doing what is St is actually being used in production and is and is a certain level of maturity and",
    "start": "327639",
    "end": "334759"
  },
  {
    "text": "stability um and then finally we have uh graduation and and graduation is up is",
    "start": "334759",
    "end": "340960"
  },
  {
    "text": "is is like a final step where we have um additional governance controls in terms",
    "start": "340960",
    "end": "346960"
  },
  {
    "text": "of the the maintainers and the number of maintainers from different organizations but we also uh but the cncf also um pays",
    "start": "346960",
    "end": "355280"
  },
  {
    "text": "for independent security Audits and and and gets those and any any security issues that are identified fixed before",
    "start": "355280",
    "end": "363199"
  },
  {
    "text": "before it gets that graduation stage so so graduation means it's being um",
    "start": "363199",
    "end": "369280"
  },
  {
    "text": "verified and validated in use in production in a number of large organizations and has a nice solid road",
    "start": "369280",
    "end": "375199"
  },
  {
    "text": "map with with a with a healthy maintainer base and a healthy governance so we're here to talk about C",
    "start": "375199",
    "end": "381599"
  },
  {
    "text": "of storage and why we should think about this so I'll go out there and maybe step",
    "start": "381599",
    "end": "389080"
  },
  {
    "text": "on a line and say there is no such thing as a status architecture right um at the",
    "start": "389080",
    "end": "394360"
  },
  {
    "text": "end of the day every application is going to store States somewhere and whether it's um services within",
    "start": "394360",
    "end": "401800"
  },
  {
    "text": "kubernetes where you're storing States or Services outside of kubernetes those",
    "start": "401800",
    "end": "407120"
  },
  {
    "text": "need to be managed and orchestrated uh in in in our environment and and the and",
    "start": "407120",
    "end": "412520"
  },
  {
    "text": "and the reason that this is important is because all of the benefits as as as",
    "start": "412520",
    "end": "417840"
  },
  {
    "text": "Enterprises and organizations go through their Cloud native um road map and their Cloud native Journey where they adopt uh",
    "start": "417840",
    "end": "425039"
  },
  {
    "text": "containers and they adopt uh orchestrators like kubernetes the next step is obviously to take advantage of",
    "start": "425039",
    "end": "431080"
  },
  {
    "text": "all of those benefits like the automatic healing and automatic failover and and",
    "start": "431080",
    "end": "436319"
  },
  {
    "text": "and the performance and scaling capabilities and apply that to saful workloads too and at this stage we have",
    "start": "436319",
    "end": "443479"
  },
  {
    "text": "a very broad ecosystem that supports uh Cloud native storage um CSI support uh",
    "start": "443479",
    "end": "449160"
  },
  {
    "text": "and cozy support in in in kubernetes and we have a lot of operators for databases",
    "start": "449160",
    "end": "455599"
  },
  {
    "text": "message cues and almost every other thing you can think of and it's important to recognize that when we talk",
    "start": "455599",
    "end": "461120"
  },
  {
    "text": "about ctive storage we're not just talking about you know volumes and file systems and block and and object but",
    "start": "461120",
    "end": "467199"
  },
  {
    "text": "we're also talking about key value stores and and and databases and that sort of thing",
    "start": "467199",
    "end": "473039"
  },
  {
    "text": "too so in order to kind of demystify and detangle this this environment we put",
    "start": "473039",
    "end": "479080"
  },
  {
    "text": "together together the cncf storage white paper again there's a QR code there that will take you to the link um and in the",
    "start": "479080",
    "end": "485560"
  },
  {
    "text": "white paper we try to go about things by by by explaining the the attributes of a",
    "start": "485560",
    "end": "492240"
  },
  {
    "text": "storage system and the various layers that that form the topology of that system but also defining how the data",
    "start": "492240",
    "end": "500280"
  },
  {
    "text": "access parts and the control plane work in the kubernetes environment so some of the storage",
    "start": "500280",
    "end": "507080"
  },
  {
    "text": "attributes that we focus on or or the key ones that we focus on in the white paper are are are these five here so",
    "start": "507080",
    "end": "512680"
  },
  {
    "text": "availability scalability performance consistency and durability almost every",
    "start": "512680",
    "end": "517800"
  },
  {
    "text": "storage system aspect can be linked into one of these attributes and it's important to understand these attributes",
    "start": "517800",
    "end": "523279"
  },
  {
    "text": "in terms of how it relates to your application because each of those attributes can be measured across a",
    "start": "523279",
    "end": "528959"
  },
  {
    "text": "number of different criteria so for example when we talk about performance some applications need to do lots of",
    "start": "528959",
    "end": "535440"
  },
  {
    "text": "operations per second some applications need to do um some some applications are more throughput focused and other",
    "start": "535440",
    "end": "541360"
  },
  {
    "text": "applications might be very latency focused for example and the same goes for things like availability where the",
    "start": "541360",
    "end": "546959"
  },
  {
    "text": "ability to fail over and moving uh data between nodes and the amount of redundancy and data protection is also",
    "start": "546959",
    "end": "553000"
  },
  {
    "text": "critical to your application but of course each of these things um are compromises against each other right so",
    "start": "553000",
    "end": "560000"
  },
  {
    "text": "um the higher um consistency uh commitments or higher consistency",
    "start": "560000",
    "end": "565399"
  },
  {
    "text": "guarantees will affect performance and scalability concerns may also affect",
    "start": "565399",
    "end": "571279"
  },
  {
    "text": "aspects of availability or performance or consistency so these these things kind of all interrelate and they also",
    "start": "571279",
    "end": "578120"
  },
  {
    "text": "interrelate with with all of the layers and I'm not going to sort of read through every single one of these layers",
    "start": "578120",
    "end": "583279"
  },
  {
    "text": "mostly because I just want you to focus on the fact that most storage systems today um are actually built using a",
    "start": "583279",
    "end": "591079"
  },
  {
    "text": "number of different layers and that is also key to understanding the attributes of the storage so for example you might",
    "start": "591079",
    "end": "597880"
  },
  {
    "text": "have a file system that is built on top of an object store so for example we we now have uh A",
    "start": "597880",
    "end": "604680"
  },
  {
    "text": "system that has the shared attributes and the scaling attributes of a shared file system but it also has the scaling",
    "start": "604680",
    "end": "610279"
  },
  {
    "text": "and the latency and the uh other attributes of an object store that that underpin that",
    "start": "610279",
    "end": "616160"
  },
  {
    "text": "system um and why this matters is kind of evident if you look at a couple of",
    "start": "616160",
    "end": "621640"
  },
  {
    "text": "sort of use cases or examples um out of the many that that that we see in in the",
    "start": "621640",
    "end": "626760"
  },
  {
    "text": "storage world so I'll just pick on a couple these to give you those examples like in the case of hyperconverged for",
    "start": "626760",
    "end": "633360"
  },
  {
    "text": "example we look at the availability attributes and we see that we're merging the fault domains and change management",
    "start": "633360",
    "end": "639720"
  },
  {
    "text": "domains between compute and storage so now compute failures can relate to",
    "start": "639720",
    "end": "645880"
  },
  {
    "text": "storage failures and and vice versa but obviously we also see um an impact on",
    "start": "645880",
    "end": "652040"
  },
  {
    "text": "the performance attributes in terms of the shared network between the uh between the storage and the compute and",
    "start": "652040",
    "end": "658120"
  },
  {
    "text": "when we look at block volume so you know think about things like uh EBS for example which is an obvious uh use case",
    "start": "658120",
    "end": "665320"
  },
  {
    "text": "here that everybody will be familiar with the main idea here is to disaggregate the storage from the",
    "start": "665320",
    "end": "672920"
  },
  {
    "text": "compute um and therefore when we look at this we need to see how easy is it to",
    "start": "672920",
    "end": "678160"
  },
  {
    "text": "connect those volumes to the to the compute nodes and and move them around",
    "start": "678160",
    "end": "683600"
  },
  {
    "text": "when we look at availability concerns but also you know we look at this from a performance point of so typically these",
    "start": "683600",
    "end": "690079"
  },
  {
    "text": "sort of volumes might have the lowest latency but they also need good connectivity between the storage nodes",
    "start": "690079",
    "end": "695320"
  },
  {
    "text": "and the compute nodes similarly um shared file systems",
    "start": "695320",
    "end": "700760"
  },
  {
    "text": "can now be used by multiple nodes at the same time but using AER file system",
    "start": "700760",
    "end": "706519"
  },
  {
    "text": "across multiple nodes at the same time leads to challenges with consistency and how you deal with cache coherency and",
    "start": "706519",
    "end": "712079"
  },
  {
    "text": "distributed locks for example um and obviously we also talked about those layers and and and and the fact that",
    "start": "712079",
    "end": "718519"
  },
  {
    "text": "that you know know the underlying layers for these file systems can also depend can also affect the attributes and and finally something",
    "start": "718519",
    "end": "725000"
  },
  {
    "text": "like object stores which are very appealing from a scale point of view almost infinite for capacity and and",
    "start": "725000",
    "end": "732079"
  },
  {
    "text": "throughput um but typically you know suffering from higher latency than than say a file system or a block store um",
    "start": "732079",
    "end": "739360"
  },
  {
    "text": "and and in this environment uh request per second is often the the the bottle NE you kind of needs to to uh",
    "start": "739360",
    "end": "747199"
  },
  {
    "text": "determine so I'll pause here and hand over to Jane who's going to talk a",
    "start": "747199",
    "end": "752639"
  },
  {
    "text": "little bit about um the data on kubernetes white paper thanks",
    "start": "752639",
    "end": "758079"
  },
  {
    "text": "Alex according to the 2022 survey by data on kues community more and more",
    "start": "758079",
    "end": "764079"
  },
  {
    "text": "data workloads are moving to kues as shown here there are different types of",
    "start": "764079",
    "end": "769360"
  },
  {
    "text": "workloads uh database workloads have the highest percentage followed by analytics",
    "start": "769360",
    "end": "775079"
  },
  {
    "text": "and machine learning we also have streaming messaging and cscd and the underline storage used by",
    "start": "775079",
    "end": "782920"
  },
  {
    "text": "this data workloads could be blog file or object storage sa workloads move to kubernetes",
    "start": "782920",
    "end": "791240"
  },
  {
    "text": "to take the advantage of kubernetes self-healing ability uh agile deployment",
    "start": "791240",
    "end": "797440"
  },
  {
    "text": "pability and",
    "start": "797440",
    "end": "800880"
  },
  {
    "text": "scalability we are collaborating with uh data on kues community on a white paper",
    "start": "802639",
    "end": "809320"
  },
  {
    "text": "to describe the patterns of running data on kubernetes the paper is complete and it",
    "start": "809320",
    "end": "815360"
  },
  {
    "text": "has been in review in the paper we are uh describing",
    "start": "815360",
    "end": "820760"
  },
  {
    "text": "the attributes of a storage system and how they affect running data on",
    "start": "820760",
    "end": "826560"
  },
  {
    "text": "kubernetes uh we compared running data inside versus outside of kubernetes and",
    "start": "826560",
    "end": "832600"
  },
  {
    "text": "we describe the common kubernetes features and patterns being used when running data on kubernetes",
    "start": "832600",
    "end": "839720"
  },
  {
    "text": "and in the first version of the paper we are focusing on databases uh although the things we talk",
    "start": "839720",
    "end": "846560"
  },
  {
    "text": "about will apply to other type of workloads as",
    "start": "846560",
    "end": "852199"
  },
  {
    "text": "well storage system has attributes as described in our landscape white",
    "start": "853360",
    "end": "859079"
  },
  {
    "text": "paper uh for clown native databases the type of backin store used the number of",
    "start": "859079",
    "end": "865440"
  },
  {
    "text": "replicas all will have an impact on the attribute such as availability uh and",
    "start": "865440",
    "end": "872040"
  },
  {
    "text": "durability a cloud native database typically uh uses Shing to facilitate",
    "start": "872040",
    "end": "877959"
  },
  {
    "text": "horizontal scaling for example Vitas is a graduated cncf project uh it has a",
    "start": "877959",
    "end": "885519"
  },
  {
    "text": "buil-in shing feature to facilitate uh horizontal scaling of the MySQL",
    "start": "885519",
    "end": "892839"
  },
  {
    "text": "databases and here we also have uh observability and elasticity in a cloud native environment",
    "start": "892839",
    "end": "900560"
  },
  {
    "text": "typically there are lots of microservices running in a distributed fashion so if something happened it is",
    "start": "900560",
    "end": "908360"
  },
  {
    "text": "hard to uh find out exactly which component is causing the problem so it",
    "start": "908360",
    "end": "914600"
  },
  {
    "text": "is even more important to have a comprehensive observability system built in so that we can detect problem early",
    "start": "914600",
    "end": "922360"
  },
  {
    "text": "and prevent failure from happening and elasticity refers to the",
    "start": "922360",
    "end": "928360"
  },
  {
    "text": "ab to scale up and down quickly this is the OnDemand infrastructure where you",
    "start": "928360",
    "end": "934639"
  },
  {
    "text": "can release resources when they are no longer needed this also refers to the",
    "start": "934639",
    "end": "940199"
  },
  {
    "text": "tearing uh story tearing where you can move your data across different tiers",
    "start": "940199",
    "end": "946279"
  },
  {
    "text": "depending on how often they are accessed and for Dr Rafel we'll talk",
    "start": "946279",
    "end": "953319"
  },
  {
    "text": "about that in detail later there are options to run data",
    "start": "953319",
    "end": "960399"
  },
  {
    "text": "inside versus outside of kubernetes managing databases without",
    "start": "960399",
    "end": "966120"
  },
  {
    "text": "proper automation is not a pattern that is recommended so that means we have mainly two Alternatives we can use manag",
    "start": "966120",
    "end": "974279"
  },
  {
    "text": "databased Services provided by most Cloud providers or we can run data",
    "start": "974279",
    "end": "980480"
  },
  {
    "text": "inside kubernetes and that is typically facilitated by an operator an operator",
    "start": "980480",
    "end": "988040"
  },
  {
    "text": "uses uh the declarative API of kubernetes and reconciles the desired",
    "start": "988040",
    "end": "993800"
  },
  {
    "text": "State versus the actual State an operator can automate day two operations",
    "start": "993800",
    "end": "1000920"
  },
  {
    "text": "such as backup and restore upgrade migration operator can also leverage",
    "start": "1000920",
    "end": "1006920"
  },
  {
    "text": "third party tools like U promas and grafana for monitoring and so",
    "start": "1006920",
    "end": "1015319"
  },
  {
    "text": "on so here we have a uh kubernetes operator that deploys and manages a",
    "start": "1016120",
    "end": "1022759"
  },
  {
    "text": "database cluster and the database cluster is typically uh defined in a",
    "start": "1022759",
    "end": "1028438"
  },
  {
    "text": "customer resource CR uh that describe what type of a cluster user wants that's",
    "start": "1028439",
    "end": "1035199"
  },
  {
    "text": "the desired State and the operator reconciles the desired State defined in",
    "start": "1035199",
    "end": "1041000"
  },
  {
    "text": "the CR spec uh against the actual state of the",
    "start": "1041000",
    "end": "1046520"
  },
  {
    "text": "cluster so here the database cluster uh is running as a SOS set with three",
    "start": "1046520",
    "end": "1053039"
  },
  {
    "text": "replicas each replica has a pod that uses a persistent volume to store data",
    "start": "1053039",
    "end": "1059840"
  },
  {
    "text": "the persistent volume is provisioned by using a CSI driver a CSI container",
    "start": "1059840",
    "end": "1065600"
  },
  {
    "text": "storage interface that defines common interfaces for a storage vendor to write",
    "start": "1065600",
    "end": "1071679"
  },
  {
    "text": "a plug-in so that the underlying storage can be consumed by containers running in",
    "start": "1071679",
    "end": "1077880"
  },
  {
    "text": "kuat and the other container orchestration",
    "start": "1077880",
    "end": "1083480"
  },
  {
    "text": "systems according to the do survey uh an organization typically uses more than",
    "start": "1085480",
    "end": "1091960"
  },
  {
    "text": "one operator as showing in the operator Hub I have a screenshot here there are",
    "start": "1091960",
    "end": "1097840"
  },
  {
    "text": "more than 300 operators among them more than 40 are database",
    "start": "1097840",
    "end": "1104120"
  },
  {
    "text": "operators and there are uh two cncf graduated project listed there the etcd",
    "start": "1104120",
    "end": "1110640"
  },
  {
    "text": "and vas there are nine postare SQL operators",
    "start": "1110640",
    "end": "1115760"
  },
  {
    "text": "including clown Nat PG Cloud PG is an open- Source operator that manages a",
    "start": "1115760",
    "end": "1122400"
  },
  {
    "text": "postgress SQL database running in a primary standby architecture in",
    "start": "1122400",
    "end": "1130120"
  },
  {
    "text": "coronates uh although uh operators are widely used when running data on kubernetes there are a lot of challenges",
    "start": "1130120",
    "end": "1137360"
  },
  {
    "text": "including lack of standard that's why the do community is working on a",
    "start": "1137360",
    "end": "1143440"
  },
  {
    "text": "operator feature metrix trying to define a standardized and vendor neutral",
    "start": "1143440",
    "end": "1150080"
  },
  {
    "text": "feature Matrix for The Operators so that it will be easier for user to choose an",
    "start": "1150080",
    "end": "1159120"
  },
  {
    "text": "operator when running data in Coates there are lots of uh common patterns and",
    "start": "1160240",
    "end": "1165280"
  },
  {
    "text": "features used we already talked about the operator and",
    "start": "1165280",
    "end": "1170600"
  },
  {
    "text": "CSI topology we scheduling is also a common used feature uh you can Define",
    "start": "1170600",
    "end": "1177720"
  },
  {
    "text": "node labels where the key is the topology key and the kubernetes scheduler can use that to spread the",
    "start": "1177720",
    "end": "1185039"
  },
  {
    "text": "paths across different failure domains and together with the topology where",
    "start": "1185039",
    "end": "1190360"
  },
  {
    "text": "Dynamic provisioning your position volumes can be provisioned to the F domains where your parts are scheduled",
    "start": "1190360",
    "end": "1197880"
  },
  {
    "text": "to so that's all I want to cover for the uh the white paper let me hand it over to",
    "start": "1197880",
    "end": "1207840"
  },
  {
    "text": "Alex it's not like we didn't rehearse this okay so um I'm just going to spend",
    "start": "1211320",
    "end": "1217320"
  },
  {
    "text": "a couple of minutes um to focus on uh one of the white papers that we've been working on which we're we're hoping to",
    "start": "1217320",
    "end": "1223600"
  },
  {
    "text": "finalize it's been it's it's had an extended review period um one of the",
    "start": "1223600",
    "end": "1229280"
  },
  {
    "text": "things we looked at when we were looking at the the different attributes in our uh original storage white paper was lots",
    "start": "1229280",
    "end": "1236120"
  },
  {
    "text": "of questions came up around performance performance seems to be one of the one of those things that that people find",
    "start": "1236120",
    "end": "1241919"
  },
  {
    "text": "difficult to understand and actually when we started putting this white paper together to to Define some of the",
    "start": "1241919",
    "end": "1247919"
  },
  {
    "text": "concepts for how you measure uh performance and how you Benchmark things like volumes and databases the the",
    "start": "1247919",
    "end": "1254440"
  },
  {
    "text": "common recurring team was actually it's it's so easy to to to to get things wrong and and and so easy to um to to uh",
    "start": "1254440",
    "end": "1263720"
  },
  {
    "text": "to be challenged when you when you're doing these sort of benchmarking that that a large part of the document is is trying to deter is trying to define",
    "start": "1263720",
    "end": "1270039"
  },
  {
    "text": "those best practices that that are used uh during performance and and what we look at is trying to trying to match",
    "start": "1270039",
    "end": "1277679"
  },
  {
    "text": "some of the some of the things that that actually matter when when we're looking at this so differentiating for example",
    "start": "1277679",
    "end": "1284480"
  },
  {
    "text": "between um the operations per second versus the true put which which",
    "start": "1284480",
    "end": "1289760"
  },
  {
    "text": "different storage systems are are are often optimized differently for those for those two specific uh criteria so",
    "start": "1289760",
    "end": "1296679"
  },
  {
    "text": "for example if you want to do lots of transactions in your app then you might want uh to have lots of operations per",
    "start": "1296679",
    "end": "1302679"
  },
  {
    "text": "second but if you want to do say you know analytics or or machine learning for example you probably need to focus",
    "start": "1302679",
    "end": "1308960"
  },
  {
    "text": "on on throughput type options um and of course as we talked about with the layers things like the topology and the",
    "start": "1308960",
    "end": "1316039"
  },
  {
    "text": "way that uh data protection like replicas or eraser coding is implemented the data reduction like like compression",
    "start": "1316039",
    "end": "1322679"
  },
  {
    "text": "and encryption that matters but ultimately in most of the discussions um",
    "start": "1322679",
    "end": "1328480"
  },
  {
    "text": "people need to see the need to measure the latency more than almost anything else like that is often the biggest",
    "start": "1328480",
    "end": "1335039"
  },
  {
    "text": "determinant between um between the the the performance benchmarking and and this kind of leads to how you build out",
    "start": "1335039",
    "end": "1342200"
  },
  {
    "text": "and scale out the concurrency in these systems both in terms of you know the cues through individual um apis or or or",
    "start": "1342200",
    "end": "1349880"
  },
  {
    "text": "volumes Etc but also like how many clients and how many back ends that the systems can scale to and of course one",
    "start": "1349880",
    "end": "1358039"
  },
  {
    "text": "of the biggest gutches is that in systems with lots of different layers caching happens everywhere all the way",
    "start": "1358039",
    "end": "1365279"
  },
  {
    "text": "from you know the physical media uh to um the the the operating system to the",
    "start": "1365279",
    "end": "1371840"
  },
  {
    "text": "file systems and and and everything in between and and therefore always be very",
    "start": "1371840",
    "end": "1377039"
  },
  {
    "text": "very critical when your you're looking at the numbers and make sure you you we understand what we're actually me",
    "start": "1377039",
    "end": "1382960"
  },
  {
    "text": "measuring because the number of times we've seen you know benchmark results being um being published in blogs and",
    "start": "1382960",
    "end": "1389720"
  },
  {
    "text": "things like that which which are obviously incorrect because they're they're talking about um uh crazy levels",
    "start": "1389720",
    "end": "1396760"
  },
  {
    "text": "of performance that the hardware that they're running the performance test on can't actually deliver so so they're",
    "start": "1396760",
    "end": "1402120"
  },
  {
    "text": "obviously testing the cache or the speed of memory in those cases uh and this is",
    "start": "1402120",
    "end": "1407159"
  },
  {
    "text": "really important to to understand but the biggest single most important takeaway is almost all of the published",
    "start": "1407159",
    "end": "1414600"
  },
  {
    "text": "results are very hard to uh make use of for your own levels of applications",
    "start": "1414600",
    "end": "1420600"
  },
  {
    "text": "especially with microservices where we have um a large number of dependencies",
    "start": "1420600",
    "end": "1426080"
  },
  {
    "text": "within a system where everything needs to work together so the the best way the",
    "start": "1426080",
    "end": "1431480"
  },
  {
    "text": "the best single takeaway here is to run your own tests in your own environment with your own applications and if if",
    "start": "1431480",
    "end": "1437960"
  },
  {
    "text": "you're trying to do apples to apples comparisons between different providers run those apples to apples comparisons",
    "start": "1437960",
    "end": "1443120"
  },
  {
    "text": "in in those same environments because um network comput uh and and everything",
    "start": "1443120",
    "end": "1448799"
  },
  {
    "text": "else kind of factors in on those tests so I'll pause over there and hand over to rafhael who's going to Dazzle you",
    "start": "1448799",
    "end": "1455799"
  },
  {
    "text": "with Cloud native Disaster Recovery thank you Alex okay Disaster Recovery my favorite",
    "start": "1455799",
    "end": "1463679"
  },
  {
    "text": "topic uh before we delve into the uh white paper I wanted to show show you these slides which uh",
    "start": "1463679",
    "end": "1470440"
  },
  {
    "text": "represents um the four archetypes that you can um organize your Disaster",
    "start": "1470440",
    "end": "1476480"
  },
  {
    "text": "Recovery strategies around um the reality is much more complex than these",
    "start": "1476480",
    "end": "1482159"
  },
  {
    "text": "four diagrams obviously because in your data centers you have multiple applications they can be used in",
    "start": "1482159",
    "end": "1488159"
  },
  {
    "text": "different Disaster Recovery strategies they can be dependent on each other so the reality is much more complex but if",
    "start": "1488159",
    "end": "1494440"
  },
  {
    "text": "we want to reduce it to attractable you you know uh level of complexity these",
    "start": "1494440",
    "end": "1500679"
  },
  {
    "text": "are the four things these are the four patterns that you can use for disaster recovery and from left to right they",
    "start": "1500679",
    "end": "1507960"
  },
  {
    "text": "yields they yield um better and better performance in terms of the two",
    "start": "1507960",
    "end": "1515200"
  },
  {
    "text": "key metrics for Disaster Recovery which are recovery time objective and Recovery",
    "start": "1515200",
    "end": "1520919"
  },
  {
    "text": "uh Point objective so we have um backa restore we have volume replication that",
    "start": "1520919",
    "end": "1526559"
  },
  {
    "text": "could be synchronous and the synchron we have transaction level replication where the software the the",
    "start": "1526559",
    "end": "1533760"
  },
  {
    "text": "stateful software is organized with a master and U slave or primary and",
    "start": "1533760",
    "end": "1540240"
  },
  {
    "text": "secondary and then finally we have um fully distributed workloads and so if",
    "start": "1540240",
    "end": "1545960"
  },
  {
    "text": "you look at the line at the top the first three methodologies are active",
    "start": "1545960",
    "end": "1551399"
  },
  {
    "text": "passive the last one is active active it's it's the only active active one and",
    "start": "1551399",
    "end": "1556799"
  },
  {
    "text": "this is what we focus on in the white paper this this last one is what we call",
    "start": "1556799",
    "end": "1561880"
  },
  {
    "text": "Cloud native Disaster Recovery approach and the other thing I try to",
    "start": "1561880",
    "end": "1567320"
  },
  {
    "text": "represent in this slide is uh the capabilities that you need to uh have",
    "start": "1567320",
    "end": "1573520"
  },
  {
    "text": "available if you want to enable these strategies so if you think about",
    "start": "1573520",
    "end": "1579919"
  },
  {
    "text": "yourself as a platform engineering that engineer that is trying to decide which capability to have in the platform in",
    "start": "1579919",
    "end": "1585840"
  },
  {
    "text": "order to let the developers or whoever are your customers uh build their application and run their application",
    "start": "1585840",
    "end": "1592200"
  },
  {
    "text": "depending which of these strategies you want to support I try to show the main",
    "start": "1592200",
    "end": "1597360"
  },
  {
    "text": "capabilities um that you need it's interesting that the first two",
    "start": "1597360",
    "end": "1602760"
  },
  {
    "text": "require storage they're very storage focused require storage capabilities like volume replication and backup and",
    "start": "1602760",
    "end": "1609120"
  },
  {
    "text": "store but then as as we move to the right we need more networking capabilities and we need some",
    "start": "1609120",
    "end": "1616120"
  },
  {
    "text": "capabilities also in the software in the in the stateful workload as opposed to just relying on this on the",
    "start": "1616120",
    "end": "1623279"
  },
  {
    "text": "volumes and everywhere we need a global balancer um so I try",
    "start": "1623279",
    "end": "1630799"
  },
  {
    "text": "to looking to to to find software and open source project",
    "start": "1630799",
    "end": "1637240"
  },
  {
    "text": "but also um project that you have to pay for commercial commercial products that",
    "start": "1637240",
    "end": "1642480"
  },
  {
    "text": "you could use in your platform to build those capabilities so I'm not going to go over of them but um I just wanted to",
    "start": "1642480",
    "end": "1650919"
  },
  {
    "text": "point out here that there is this one called yugabyte if you were yesterday at",
    "start": "1650919",
    "end": "1656320"
  },
  {
    "text": "the distributed SQL um um distributed SQL um meeting I think it was there at",
    "start": "1656320",
    "end": "1664640"
  },
  {
    "text": "the Mariot just across the street they were the the the one organizing it and they were showing exactly this type of",
    "start": "1664640",
    "end": "1672159"
  },
  {
    "text": "architecture and they were showing demos with this type of active active architecture",
    "start": "1672159",
    "end": "1678120"
  },
  {
    "text": "okay um so what do we have in the white paper well first we Define this concept",
    "start": "1678120",
    "end": "1683519"
  },
  {
    "text": "of cloud native Disaster Recovery uh which is essentially this the active",
    "start": "1683519",
    "end": "1688760"
  },
  {
    "text": "active diagram that we just saw um so I'm not going to go over the",
    "start": "1688760",
    "end": "1694799"
  },
  {
    "text": "slide all of these slide because we don't have a lot of time but let's focus on just the last two lines uh who who is the the disaster",
    "start": "1694799",
    "end": "1702960"
  },
  {
    "text": "recovery owner process owner in traditional Dr",
    "start": "1702960",
    "end": "1708480"
  },
  {
    "text": "in theory it's the business uh unit or the business um application team uh but",
    "start": "1708480",
    "end": "1715440"
  },
  {
    "text": "because they own the business continuity plan but normally they turn to the storage team and they ask what what",
    "start": "1715440",
    "end": "1721120"
  },
  {
    "text": "level of Dr can you give me and then they adopt whatever is available but in in this new Cloud native Dr they pick",
    "start": "1721120",
    "end": "1728679"
  },
  {
    "text": "the middleware software so they are the owner of the disaster recovery um strategy and the last uh line is is more",
    "start": "1728679",
    "end": "1736760"
  },
  {
    "text": "about not noticing that as we move toward active active we need to focus more on the networking capability to",
    "start": "1736760",
    "end": "1743840"
  },
  {
    "text": "enable this is toest communication between um between the instances of our",
    "start": "1743840",
    "end": "1750760"
  },
  {
    "text": "um state for workload and then the global balancer if and then other thing that we",
    "start": "1750760",
    "end": "1758159"
  },
  {
    "text": "do in this white paper is that we look at the cap theorem this theorem you know",
    "start": "1758159",
    "end": "1763519"
  },
  {
    "text": "there aren't many theorems in it uh so it's it's important to know the few the",
    "start": "1763519",
    "end": "1769720"
  },
  {
    "text": "few that exist and the the this theorem is about um describing the um how",
    "start": "1769720",
    "end": "1777279"
  },
  {
    "text": "distributed workloads uh can work it's about organizing organizing out the the",
    "start": "1777279",
    "end": "1782760"
  },
  {
    "text": "possible behavior of distributed workload uh is and in particular it says",
    "start": "1782760",
    "end": "1788159"
  },
  {
    "text": "that if if we want to distributed workload so workloads that is U tolerant",
    "start": "1788159",
    "end": "1793559"
  },
  {
    "text": "to netork partitioning you can only have it to be either consistent or available",
    "start": "1793559",
    "end": "1799039"
  },
  {
    "text": "but it cannot be both so you have to make a choice when you design your your software and then if if we look at",
    "start": "1799039",
    "end": "1806720"
  },
  {
    "text": "um this how this new generation of software that was built on top of the or",
    "start": "1806720",
    "end": "1812000"
  },
  {
    "text": "or that was built with the knowledge of the cap theum they they look all similar they are organized with replicas for a",
    "start": "1812000",
    "end": "1820080"
  },
  {
    "text": "high availabilities and organizing partitions and and the partition data",
    "start": "1820080",
    "end": "1825200"
  },
  {
    "text": "for this for having the ability of scale um almost indefinitely and so they need",
    "start": "1825200",
    "end": "1830320"
  },
  {
    "text": "a coordination layer to organ to coordinate the replicas and the partitions and um you can you can learn",
    "start": "1830320",
    "end": "1838080"
  },
  {
    "text": "a lot about the behavior of this kind of software just by studying how the coordination layer works and what are",
    "start": "1838080",
    "end": "1845799"
  },
  {
    "text": "the protocols that are used um um to to do this",
    "start": "1845799",
    "end": "1851919"
  },
  {
    "text": "cordination and so we did some research uh we took a bunch of these new New",
    "start": "1851919",
    "end": "1857960"
  },
  {
    "text": "Generation middleware that was that are built with the cap theum in mind and we looked at the uh coordination protocol",
    "start": "1857960",
    "end": "1866320"
  },
  {
    "text": "for replicas and for shards or for partitions so you can you can take a look at this there are probably new ones",
    "start": "1866320",
    "end": "1873360"
  },
  {
    "text": "here that now are not in the table and then we have some reference",
    "start": "1873360",
    "end": "1878480"
  },
  {
    "text": "architecture for how to build this kind of um this kind of Disaster Recovery",
    "start": "1878480",
    "end": "1885240"
  },
  {
    "text": "strategies with uh strongly consistent workloads so these are the one that pick",
    "start": "1885240",
    "end": "1890960"
  },
  {
    "text": "a consistency in the cap theorem and then also with eventually consistent workloads these are the one that pick",
    "start": "1890960",
    "end": "1898279"
  },
  {
    "text": "availability so here I have an I have a diagram of the uh strongly consistent",
    "start": "1898279",
    "end": "1904480"
  },
  {
    "text": "one okay and in this when you do this deployment for which you need three",
    "start": "1904480",
    "end": "1910399"
  },
  {
    "text": "failure domains because of the Quorum so at least two must be up so and this is",
    "start": "1910399",
    "end": "1918880"
  },
  {
    "text": "anyway when you do this kind of deployments if you lose one data center or one Cloud region everything will keep",
    "start": "1918880",
    "end": "1925799"
  },
  {
    "text": "working okay um you know the global balance will need to redirect the connections but beyond that um",
    "start": "1925799",
    "end": "1933559"
  },
  {
    "text": "everything keeps keeps working you have zero RTO or very very close to zero RTO",
    "start": "1933559",
    "end": "1938720"
  },
  {
    "text": "and you have exactly zero RPO um yesterday by the way they gave",
    "start": "1938720",
    "end": "1944519"
  },
  {
    "text": "some examples some real use case with very large deployment uh across North America you different region in North",
    "start": "1944519",
    "end": "1951559"
  },
  {
    "text": "America it was it was very interesting uh so these are the things",
    "start": "1951559",
    "end": "1956799"
  },
  {
    "text": "that we have in the white paper um I'm going to stop here to leave some time",
    "start": "1956799",
    "end": "1961880"
  },
  {
    "text": "for questions and give the word back to you so with that we finish um our talk",
    "start": "1961880",
    "end": "1969960"
  },
  {
    "text": "um I'm just going to put out a a final call out we'd really love to um have you",
    "start": "1969960",
    "end": "1976639"
  },
  {
    "text": "help us review the documents work with us help work with the tag it's also a great way to find out about projects and",
    "start": "1976639",
    "end": "1984440"
  },
  {
    "text": "um projects often uh present at our tag sessions so it's a it's a great way to",
    "start": "1984440",
    "end": "1990559"
  },
  {
    "text": "find out about some of the latest things which are happening not just in in this in you know the plain storage space but",
    "start": "1990559",
    "end": "1996240"
  },
  {
    "text": "also for things like databases operators key value stores Etc um and we're also",
    "start": "1996240",
    "end": "2001679"
  },
  {
    "text": "always on the lookout for uh people who want to actually contribute in a more formal Manner and and and either become",
    "start": "2001679",
    "end": "2007120"
  },
  {
    "text": "Tech lead or or or work with the with the tag to help with um the papers that",
    "start": "2007120",
    "end": "2012440"
  },
  {
    "text": "we're working on or or reviewing projects Etc going forward so please do reach out we're available on uh on the",
    "start": "2012440",
    "end": "2019480"
  },
  {
    "text": "uh cncf slack um and with that I will pause for a couple of minutes where we have some time for",
    "start": "2019480",
    "end": "2027000"
  },
  {
    "text": "questions okay then so thank you all for coming and uh and hope to see you",
    "start": "2034639",
    "end": "2041960"
  },
  {
    "text": "[Music] soon",
    "start": "2042410",
    "end": "2046840"
  }
]