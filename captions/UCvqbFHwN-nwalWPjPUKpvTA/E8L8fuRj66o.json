[
  {
    "start": "0",
    "end": "20000"
  },
  {
    "text": "okay uh so thank you everyone for coming",
    "start": "320",
    "end": "2399"
  },
  {
    "text": "to the session um asarch mentioned we",
    "start": "2399",
    "end": "5080"
  },
  {
    "text": "wanted to walk through um a new feature",
    "start": "5080",
    "end": "8480"
  },
  {
    "text": "that helps Thanos not only become faster",
    "start": "8480",
    "end": "11200"
  },
  {
    "text": "at quer execution but also helps us with",
    "start": "11200",
    "end": "14599"
  },
  {
    "text": "uh just general interoperability with",
    "start": "14599",
    "end": "17000"
  },
  {
    "text": "the rest of the",
    "start": "17000",
    "end": "19000"
  },
  {
    "text": "ecosystem um just briefly Short Round of",
    "start": "19000",
    "end": "21840"
  },
  {
    "start": "20000",
    "end": "40000"
  },
  {
    "text": "intros my name is Phillip um I am a",
    "start": "21840",
    "end": "24080"
  },
  {
    "text": "production engineer at Shopify I work on",
    "start": "24080",
    "end": "26119"
  },
  {
    "text": "everything related to metrics uh on our",
    "start": "26119",
    "end": "28080"
  },
  {
    "text": "metric stack I've also been a maintainer",
    "start": "28080",
    "end": "30519"
  },
  {
    "text": "for a couple years now and I'm currently",
    "start": "30519",
    "end": "33040"
  },
  {
    "text": "based in in Germany in Munich um and we",
    "start": "33040",
    "end": "36120"
  },
  {
    "text": "also have Max today with",
    "start": "36120",
    "end": "39719"
  },
  {
    "text": "us hello everybody my name is uh Mahmud",
    "start": "39719",
    "end": "42640"
  },
  {
    "start": "40000",
    "end": "64000"
  },
  {
    "text": "Amin I also go by Max um I'm very",
    "start": "42640",
    "end": "45680"
  },
  {
    "text": "excited to be here this is actually my",
    "start": "45680",
    "end": "47399"
  },
  {
    "text": "first ever uh talk at a conference um a",
    "start": "47399",
    "end": "50360"
  },
  {
    "text": "little bit about me I'm a software",
    "start": "50360",
    "end": "51640"
  },
  {
    "text": "engineer at Google uh I was an open",
    "start": "51640",
    "end": "54199"
  },
  {
    "text": "source mentor on a couple of projects",
    "start": "54199",
    "end": "56440"
  },
  {
    "text": "you can find me at GitHub at Max and",
    "start": "56440",
    "end": "58000"
  },
  {
    "text": "means and I'm based out of New York",
    "start": "58000",
    "end": "61239"
  },
  {
    "text": "all right um so I just wanted to kind of",
    "start": "61239",
    "end": "65119"
  },
  {
    "start": "64000",
    "end": "106000"
  },
  {
    "text": "build a bit of context for people that",
    "start": "65119",
    "end": "67680"
  },
  {
    "text": "maybe have missed the first couple of",
    "start": "67680",
    "end": "69680"
  },
  {
    "text": "talks or not very familiar with Thanos",
    "start": "69680",
    "end": "72799"
  },
  {
    "text": "so by now I would expect everyone to or",
    "start": "72799",
    "end": "75200"
  },
  {
    "text": "maybe most people to be familiar with",
    "start": "75200",
    "end": "76840"
  },
  {
    "text": "pritus which is this Standalone",
    "start": "76840",
    "end": "79200"
  },
  {
    "text": "monitoring server that we drop close to",
    "start": "79200",
    "end": "81840"
  },
  {
    "text": "Applications uh pritus then scrapes",
    "start": "81840",
    "end": "84280"
  },
  {
    "text": "applications directly stores that data",
    "start": "84280",
    "end": "86000"
  },
  {
    "text": "on disk and has a very flexible and",
    "start": "86000",
    "end": "89079"
  },
  {
    "text": "interesting quer language which called",
    "start": "89079",
    "end": "90240"
  },
  {
    "text": "promql which is going to be important",
    "start": "90240",
    "end": "92479"
  },
  {
    "text": "for uh what we're going to be talking",
    "start": "92479",
    "end": "94079"
  },
  {
    "text": "about",
    "start": "94079",
    "end": "95360"
  },
  {
    "text": "today and so prit this kind of shines at",
    "start": "95360",
    "end": "98159"
  },
  {
    "text": "this use case where we have to monit or",
    "start": "98159",
    "end": "100720"
  },
  {
    "text": "we want to monitor a single environment",
    "start": "100720",
    "end": "102960"
  },
  {
    "text": "um the problem um we typically see with",
    "start": "102960",
    "end": "106799"
  },
  {
    "text": "prit is that when we go beyond an En a",
    "start": "106799",
    "end": "110040"
  },
  {
    "text": "single environment as we've seen couple",
    "start": "110040",
    "end": "112439"
  },
  {
    "text": "of times today it becomes hard to um",
    "start": "112439",
    "end": "116479"
  },
  {
    "text": "kind of deploy these pritus instances",
    "start": "116479",
    "end": "118479"
  },
  {
    "text": "but also get hard to have a global",
    "start": "118479",
    "end": "121039"
  },
  {
    "text": "overview of the data becomes hard to",
    "start": "121039",
    "end": "123200"
  },
  {
    "text": "retain that data for a long time and so",
    "start": "123200",
    "end": "125159"
  },
  {
    "text": "on um so for me gets kind of",
    "start": "125159",
    "end": "127520"
  },
  {
    "text": "intentionally left this Gap never",
    "start": "127520",
    "end": "129520"
  },
  {
    "text": "intended to solve this",
    "start": "129520",
    "end": "131080"
  },
  {
    "text": "problem and for this reason we have",
    "start": "131080",
    "end": "134400"
  },
  {
    "start": "132000",
    "end": "177000"
  },
  {
    "text": "multiple projects today um many open",
    "start": "134400",
    "end": "137920"
  },
  {
    "text": "source projects um trying to kind of",
    "start": "137920",
    "end": "141319"
  },
  {
    "text": "solve this problem of having a highly",
    "start": "141319",
    "end": "143599"
  },
  {
    "text": "available um setup of peritos that",
    "start": "143599",
    "end": "146120"
  },
  {
    "text": "allows us to also retain data for a long",
    "start": "146120",
    "end": "148040"
  },
  {
    "text": "time so Thanos obviously being one of",
    "start": "148040",
    "end": "150120"
  },
  {
    "text": "them but we also have in the same space",
    "start": "150120",
    "end": "152640"
  },
  {
    "text": "cortex mimir Victoria metric um and",
    "start": "152640",
    "end": "155840"
  },
  {
    "text": "what's also very exciting and",
    "start": "155840",
    "end": "157560"
  },
  {
    "text": "interesting is that if we take a look at",
    "start": "157560",
    "end": "159319"
  },
  {
    "text": "the big three Cloud providers all of",
    "start": "159319",
    "end": "161519"
  },
  {
    "text": "them have a managed pritus offering",
    "start": "161519",
    "end": "165360"
  },
  {
    "text": "today so we can send data to all three",
    "start": "165360",
    "end": "168319"
  },
  {
    "text": "Cloud providers via remote right and all",
    "start": "168319",
    "end": "171080"
  },
  {
    "text": "of them allow us to also query that data",
    "start": "171080",
    "end": "173280"
  },
  {
    "text": "using promql",
    "start": "173280",
    "end": "175239"
  },
  {
    "text": "and so even though this is a good",
    "start": "175239",
    "end": "178680"
  },
  {
    "start": "177000",
    "end": "261000"
  },
  {
    "text": "development for the ecosystem this is",
    "start": "178680",
    "end": "180519"
  },
  {
    "text": "you know it's very nice to see uh",
    "start": "180519",
    "end": "182920"
  },
  {
    "text": "various competing Solutions um I would",
    "start": "182920",
    "end": "185640"
  },
  {
    "text": "say it also creates a bit of a",
    "start": "185640",
    "end": "187840"
  },
  {
    "text": "fragmentation um where we kind of have",
    "start": "187840",
    "end": "190599"
  },
  {
    "text": "to commit to one solution fully and it's",
    "start": "190599",
    "end": "194360"
  },
  {
    "text": "hard to use multiple Solutions in a",
    "start": "194360",
    "end": "196640"
  },
  {
    "text": "single system at the same time so what I",
    "start": "196640",
    "end": "199280"
  },
  {
    "text": "mean by that is we typically don't hear",
    "start": "199280",
    "end": "201640"
  },
  {
    "text": "people use like both Thanos and cortex",
    "start": "201640",
    "end": "204760"
  },
  {
    "text": "or tunos in the mirror uh as part of the",
    "start": "204760",
    "end": "207599"
  },
  {
    "text": "same solution today and um it kind of",
    "start": "207599",
    "end": "210519"
  },
  {
    "text": "puts us in a bad spot where we have to",
    "start": "210519",
    "end": "212680"
  },
  {
    "text": "fragment our",
    "start": "212680",
    "end": "214360"
  },
  {
    "text": "data in addition to that um Cloud",
    "start": "214360",
    "end": "217239"
  },
  {
    "text": "providers for example will give you some",
    "start": "217239",
    "end": "219120"
  },
  {
    "text": "metrics for free um if you use Google",
    "start": "219120",
    "end": "221879"
  },
  {
    "text": "cloud or Amazon you will get metrics for",
    "start": "221879",
    "end": "225239"
  },
  {
    "text": "their services and you might even be",
    "start": "225239",
    "end": "227519"
  },
  {
    "text": "able to query those metrics with promql",
    "start": "227519",
    "end": "229159"
  },
  {
    "text": "but as soon as you want to combine the",
    "start": "229159",
    "end": "231599"
  },
  {
    "text": "metrics with some local data that you",
    "start": "231599",
    "end": "233599"
  },
  {
    "text": "have in pritus or Thanos it's going to",
    "start": "233599",
    "end": "235920"
  },
  {
    "text": "be hard to put the data in a single",
    "start": "235920",
    "end": "238560"
  },
  {
    "text": "query um so we still have to like",
    "start": "238560",
    "end": "241760"
  },
  {
    "text": "maintain two sorry two different systems",
    "start": "241760",
    "end": "243760"
  },
  {
    "text": "at the same time and so what we would",
    "start": "243760",
    "end": "246519"
  },
  {
    "text": "ultimately want um is to be able to",
    "start": "246519",
    "end": "249319"
  },
  {
    "text": "consolidate data across all of the",
    "start": "249319",
    "end": "251200"
  },
  {
    "text": "systems using promql because all of them",
    "start": "251200",
    "end": "255680"
  },
  {
    "text": "um as a matter of fact support",
    "start": "255680",
    "end": "258639"
  },
  {
    "text": "from and so and Thanos if we take a look",
    "start": "258639",
    "end": "262759"
  },
  {
    "start": "261000",
    "end": "299000"
  },
  {
    "text": "at how Thanos Works Thanos already does",
    "start": "262759",
    "end": "264639"
  },
  {
    "text": "Federation at some level so Thanos the",
    "start": "264639",
    "end": "267759"
  },
  {
    "text": "Thanos querer can can query multiple",
    "start": "267759",
    "end": "270600"
  },
  {
    "text": "data stores multiple store apis uh it",
    "start": "270600",
    "end": "274080"
  },
  {
    "text": "can carry forit through the side car um",
    "start": "274080",
    "end": "276680"
  },
  {
    "text": "can get data from object storage to the",
    "start": "276680",
    "end": "278440"
  },
  {
    "text": "store Gateway and so on so then the",
    "start": "278440",
    "end": "280680"
  },
  {
    "text": "question is is solving this problem just",
    "start": "280680",
    "end": "283600"
  },
  {
    "text": "a matter of",
    "start": "283600",
    "end": "285240"
  },
  {
    "text": "implementing a custom store component",
    "start": "285240",
    "end": "288080"
  },
  {
    "text": "that's going to act as a proxy to the",
    "start": "288080",
    "end": "290680"
  },
  {
    "text": "various systems that we want to",
    "start": "290680",
    "end": "292880"
  },
  {
    "text": "quer now that is a kind of um possible",
    "start": "292880",
    "end": "297880"
  },
  {
    "text": "solution um so the way that we execute",
    "start": "297880",
    "end": "301160"
  },
  {
    "start": "299000",
    "end": "331000"
  },
  {
    "text": "queries today is we would take for",
    "start": "301160",
    "end": "303039"
  },
  {
    "text": "example this particular expression um as",
    "start": "303039",
    "end": "306639"
  },
  {
    "text": "an example we break it down into what we",
    "start": "306639",
    "end": "309360"
  },
  {
    "text": "call query fragments um the query",
    "start": "309360",
    "end": "312520"
  },
  {
    "text": "execution flows from top to bottom and",
    "start": "312520",
    "end": "315280"
  },
  {
    "text": "then so the sum oper operations going to",
    "start": "315280",
    "end": "317880"
  },
  {
    "text": "ask data from the rate which ask data",
    "start": "317880",
    "end": "319759"
  },
  {
    "text": "from the selector and once we get to the",
    "start": "319759",
    "end": "322560"
  },
  {
    "text": "selector we kind of have to Fan out to",
    "start": "322560",
    "end": "325039"
  },
  {
    "text": "all of these different store components",
    "start": "325039",
    "end": "326840"
  },
  {
    "text": "that we're connected to um unfortunately",
    "start": "326840",
    "end": "330880"
  },
  {
    "text": "what we typically see is that in this",
    "start": "330880",
    "end": "333720"
  },
  {
    "text": "process the actual data retrieval part",
    "start": "333720",
    "end": "336880"
  },
  {
    "text": "is the most expensive part of the query",
    "start": "336880",
    "end": "339560"
  },
  {
    "text": "um as I think Colin mentioned latency",
    "start": "339560",
    "end": "342280"
  },
  {
    "text": "can be a pretty big bottleneck there but",
    "start": "342280",
    "end": "345440"
  },
  {
    "text": "um it's also the fact that Thanos cannot",
    "start": "345440",
    "end": "347600"
  },
  {
    "text": "execute queries in a multi threaded way",
    "start": "347600",
    "end": "350240"
  },
  {
    "text": "we can use multiple cores to execute",
    "start": "350240",
    "end": "352039"
  },
  {
    "text": "queries so we have much more",
    "start": "352039",
    "end": "354160"
  },
  {
    "text": "opportunities to shrink this blue bar uh",
    "start": "354160",
    "end": "357600"
  },
  {
    "text": "whereas for the green green bar we don't",
    "start": "357600",
    "end": "359160"
  },
  {
    "text": "have that many any",
    "start": "359160",
    "end": "360919"
  },
  {
    "text": "options um so this is how typically how",
    "start": "360919",
    "end": "363840"
  },
  {
    "start": "362000",
    "end": "408000"
  },
  {
    "text": "we visualize time series data and as",
    "start": "363840",
    "end": "366759"
  },
  {
    "text": "this data set grows vertically which",
    "start": "366759",
    "end": "369039"
  },
  {
    "text": "means as we add cardinality or",
    "start": "369039",
    "end": "370759"
  },
  {
    "text": "horizontally as we extend the range um",
    "start": "370759",
    "end": "373520"
  },
  {
    "text": "that green bar is also going to",
    "start": "373520",
    "end": "375720"
  },
  {
    "text": "extend but there's also another problem",
    "start": "375720",
    "end": "378160"
  },
  {
    "text": "which is certain Cloud providers are not",
    "start": "378160",
    "end": "380000"
  },
  {
    "text": "going to give you data in the format",
    "start": "380000",
    "end": "381880"
  },
  {
    "text": "that the querer expects um a lot of this",
    "start": "381880",
    "end": "384360"
  },
  {
    "text": "data is kind of locked behind in the",
    "start": "384360",
    "end": "387080"
  },
  {
    "text": "cloud um and this is not a problem that",
    "start": "387080",
    "end": "390039"
  },
  {
    "text": "we can just solve",
    "start": "390039",
    "end": "392479"
  },
  {
    "text": "engineering um so to conclude writing",
    "start": "392479",
    "end": "395840"
  },
  {
    "text": "kind of a custom store component is a",
    "start": "395840",
    "end": "398319"
  },
  {
    "text": "possibility but um I would say it's not",
    "start": "398319",
    "end": "401599"
  },
  {
    "text": "a very practical",
    "start": "401599",
    "end": "403680"
  },
  {
    "text": "solution so before we take a look at",
    "start": "403680",
    "end": "406400"
  },
  {
    "text": "what is a good solution um I wanted to",
    "start": "406400",
    "end": "409599"
  },
  {
    "start": "408000",
    "end": "421000"
  },
  {
    "text": "talk about a very exciting feature",
    "start": "409599",
    "end": "412520"
  },
  {
    "text": "that's um just merged and made available",
    "start": "412520",
    "end": "415599"
  },
  {
    "text": "on the main branch will be coming up in",
    "start": "415599",
    "end": "417280"
  },
  {
    "text": "the next release um and as the name says",
    "start": "417280",
    "end": "421000"
  },
  {
    "start": "421000",
    "end": "527000"
  },
  {
    "text": "um distributed query execution allows us",
    "start": "421000",
    "end": "423919"
  },
  {
    "text": "to execute queries not only using",
    "start": "423919",
    "end": "426319"
  },
  {
    "text": "multiple cores but also using multiple",
    "start": "426319",
    "end": "429039"
  },
  {
    "text": "machines at the same time so we can use",
    "start": "429039",
    "end": "431520"
  },
  {
    "text": "multiple machines to execute a single",
    "start": "431520",
    "end": "435160"
  },
  {
    "text": "query and what we have here is a setup",
    "start": "435160",
    "end": "439319"
  },
  {
    "text": "where we have a physical partitioning of",
    "start": "439319",
    "end": "441720"
  },
  {
    "text": "the data so we have you know this can be",
    "start": "441720",
    "end": "445039"
  },
  {
    "text": "an example of one region running pretus",
    "start": "445039",
    "end": "447599"
  },
  {
    "text": "store Gateway in another region running",
    "start": "447599",
    "end": "450199"
  },
  {
    "text": "the same setup both of which have",
    "start": "450199",
    "end": "452199"
  },
  {
    "text": "queriers connected um we would just",
    "start": "452199",
    "end": "454919"
  },
  {
    "text": "connect them using the standard flags",
    "start": "454919",
    "end": "456840"
  },
  {
    "text": "that we use",
    "start": "456840",
    "end": "457759"
  },
  {
    "text": "today and now um up to now I would say",
    "start": "457759",
    "end": "462680"
  },
  {
    "text": "if we connected the third querer on the",
    "start": "462680",
    "end": "464479"
  },
  {
    "text": "top that querer would have to request",
    "start": "464479",
    "end": "466479"
  },
  {
    "text": "raw data from all of the downstream",
    "start": "466479",
    "end": "470120"
  },
  {
    "text": "stores uh with distributed execution um",
    "start": "470120",
    "end": "473720"
  },
  {
    "text": "we can tell that querier to actually",
    "start": "473720",
    "end": "476080"
  },
  {
    "text": "decompose queries into separate fra",
    "start": "476080",
    "end": "479680"
  },
  {
    "text": "ments delegate those fragments to the",
    "start": "479680",
    "end": "482319"
  },
  {
    "text": "lower level queriers which are actually",
    "start": "482319",
    "end": "484280"
  },
  {
    "text": "going to do the work uh not only faster",
    "start": "484280",
    "end": "487199"
  },
  {
    "text": "because they're working on a small",
    "start": "487199",
    "end": "489000"
  },
  {
    "text": "smaller data set but they're also closer",
    "start": "489000",
    "end": "491080"
  },
  {
    "text": "to the actual data they're going to kind",
    "start": "491080",
    "end": "493639"
  },
  {
    "text": "of crunch this agregation only their on",
    "start": "493639",
    "end": "496120"
  },
  {
    "text": "on their part return upwards a uh the",
    "start": "496120",
    "end": "500120"
  },
  {
    "text": "result of that aggregation and that",
    "start": "500120",
    "end": "501560"
  },
  {
    "text": "aggregation will be then completed uh by",
    "start": "501560",
    "end": "504240"
  },
  {
    "text": "the Ruth quer so very similar to kind of",
    "start": "504240",
    "end": "506560"
  },
  {
    "text": "a map reduce",
    "start": "506560",
    "end": "508199"
  },
  {
    "text": "framework and we can um the the reason",
    "start": "508199",
    "end": "511199"
  },
  {
    "text": "why this is so powerful is because most",
    "start": "511199",
    "end": "512800"
  },
  {
    "text": "aggregations in promql today can be",
    "start": "512800",
    "end": "514839"
  },
  {
    "text": "broken down in fact in this way even",
    "start": "514839",
    "end": "517120"
  },
  {
    "text": "something as expensive as top K can be",
    "start": "517120",
    "end": "520159"
  },
  {
    "text": "done as a top K over top k um account",
    "start": "520159",
    "end": "523560"
  },
  {
    "text": "can be done as a sum of accounts and so",
    "start": "523560",
    "end": "526519"
  },
  {
    "text": "on uh we can also use this mechanism or",
    "start": "526519",
    "end": "529800"
  },
  {
    "start": "527000",
    "end": "578000"
  },
  {
    "text": "this technique if you have a logical",
    "start": "529800",
    "end": "531880"
  },
  {
    "text": "partitioning of the data so with the",
    "start": "531880",
    "end": "533959"
  },
  {
    "text": "Thanos receiver uh we can have a",
    "start": "533959",
    "end": "536600"
  },
  {
    "text": "multitenant setup so the receiver can",
    "start": "536600",
    "end": "539040"
  },
  {
    "text": "accept data from multiple clusters for",
    "start": "539040",
    "end": "541839"
  },
  {
    "text": "example it's going to store the it's",
    "start": "541839",
    "end": "543480"
  },
  {
    "text": "going to assign each cluster its own",
    "start": "543480",
    "end": "545839"
  },
  {
    "text": "label and then uh we can connect let's",
    "start": "545839",
    "end": "548720"
  },
  {
    "text": "say a querier on the left hand side and",
    "start": "548720",
    "end": "550560"
  },
  {
    "text": "ask it to only query data whose external",
    "start": "550560",
    "end": "554440"
  },
  {
    "text": "label cluster starts with East um on the",
    "start": "554440",
    "end": "557760"
  },
  {
    "text": "right hand side we can do the same with",
    "start": "557760",
    "end": "559600"
  },
  {
    "text": "this querer we can ask it to query data",
    "start": "559600",
    "end": "561839"
  },
  {
    "text": "whose cluster label starts with West and",
    "start": "561839",
    "end": "564519"
  },
  {
    "text": "then uh we can connect this distributor",
    "start": "564519",
    "end": "566880"
  },
  {
    "text": "querer on the top that's going to start",
    "start": "566880",
    "end": "568839"
  },
  {
    "text": "delegating queries um to these lower",
    "start": "568839",
    "end": "571959"
  },
  {
    "text": "level queriers that only work on a",
    "start": "571959",
    "end": "573680"
  },
  {
    "text": "subset of the",
    "start": "573680",
    "end": "575800"
  },
  {
    "text": "date so just to kind of illustrate the",
    "start": "575800",
    "end": "579279"
  },
  {
    "start": "578000",
    "end": "616000"
  },
  {
    "text": "the kind of the impact of this feature",
    "start": "579279",
    "end": "581760"
  },
  {
    "text": "internally in our team we track uh five",
    "start": "581760",
    "end": "584320"
  },
  {
    "text": "or six queries that we run constantly uh",
    "start": "584320",
    "end": "587320"
  },
  {
    "text": "we track them as sis basically and this",
    "start": "587320",
    "end": "591040"
  },
  {
    "text": "kind of graph tries to visualize what",
    "start": "591040",
    "end": "592880"
  },
  {
    "text": "has happened to the latencies of those",
    "start": "592880",
    "end": "594440"
  },
  {
    "text": "queries once we've moved to distributed",
    "start": "594440",
    "end": "596839"
  },
  {
    "text": "execution uh which is also kind of",
    "start": "596839",
    "end": "598920"
  },
  {
    "text": "expected right so since we are able to",
    "start": "598920",
    "end": "601600"
  },
  {
    "text": "evaluate queries closer to the data and",
    "start": "601600",
    "end": "604160"
  },
  {
    "text": "also partition them across machines the",
    "start": "604160",
    "end": "606880"
  },
  {
    "text": "latency for certain queries could",
    "start": "606880",
    "end": "608440"
  },
  {
    "text": "dropped um in some cases even up to 10",
    "start": "608440",
    "end": "612279"
  },
  {
    "text": "times um so with that being said um I'm",
    "start": "612279",
    "end": "616560"
  },
  {
    "start": "616000",
    "end": "650000"
  },
  {
    "text": "going to hand it off to Max now to tell",
    "start": "616560",
    "end": "618959"
  },
  {
    "text": "us how using this feature we can kind of",
    "start": "618959",
    "end": "622079"
  },
  {
    "text": "get to this interoperability story that",
    "start": "622079",
    "end": "625360"
  },
  {
    "text": "we initially talked",
    "start": "625360",
    "end": "628320"
  },
  {
    "text": "about",
    "start": "628320",
    "end": "631320"
  },
  {
    "text": "all right so uh now we reached the part",
    "start": "634399",
    "end": "636800"
  },
  {
    "text": "of our talk where we talk about",
    "start": "636800",
    "end": "638480"
  },
  {
    "text": "connecting uh Thanos queer to our",
    "start": "638480",
    "end": "640959"
  },
  {
    "text": "external components or as our title of",
    "start": "640959",
    "end": "644000"
  },
  {
    "text": "our talk says um connecting uh Thanos to",
    "start": "644000",
    "end": "647399"
  },
  {
    "text": "the outer",
    "start": "647399",
    "end": "648360"
  },
  {
    "text": "men",
    "start": "648360",
    "end": "649880"
  },
  {
    "text": "so Philip highlighted all the advantages",
    "start": "649880",
    "end": "652760"
  },
  {
    "start": "650000",
    "end": "689000"
  },
  {
    "text": "of distributed queries and it allows you",
    "start": "652760",
    "end": "655720"
  },
  {
    "text": "to have a much more scalable Thanos",
    "start": "655720",
    "end": "658240"
  },
  {
    "text": "architecture so uh so what's next so",
    "start": "658240",
    "end": "661760"
  },
  {
    "text": "this presents us an opportunity to do",
    "start": "661760",
    "end": "663600"
  },
  {
    "text": "something amazing because there's a lot",
    "start": "663600",
    "end": "665600"
  },
  {
    "text": "of data sources out there that have",
    "start": "665600",
    "end": "667920"
  },
  {
    "text": "promql support so what if we leverage",
    "start": "667920",
    "end": "670839"
  },
  {
    "text": "the existing Thanos querier engine and",
    "start": "670839",
    "end": "673600"
  },
  {
    "text": "apply it to other data sources this",
    "start": "673600",
    "end": "675839"
  },
  {
    "text": "would mean you could theoretically query",
    "start": "675839",
    "end": "678240"
  },
  {
    "text": "all of these data sources with your",
    "start": "678240",
    "end": "680480"
  },
  {
    "text": "Thanos querer and you could view them in",
    "start": "680480",
    "end": "682839"
  },
  {
    "text": "a single view uh revolutionizing how you",
    "start": "682839",
    "end": "685959"
  },
  {
    "text": "view your",
    "start": "685959",
    "end": "688240"
  },
  {
    "text": "metrics so uh one of these uh data",
    "start": "688240",
    "end": "691639"
  },
  {
    "start": "689000",
    "end": "721000"
  },
  {
    "text": "sources that we'll focus on is uh Google",
    "start": "691639",
    "end": "693959"
  },
  {
    "text": "Cloud manage service for Prometheus or",
    "start": "693959",
    "end": "696279"
  },
  {
    "text": "GMP for",
    "start": "696279",
    "end": "697480"
  },
  {
    "text": "short so a quick overview of GMP it's",
    "start": "697480",
    "end": "700399"
  },
  {
    "text": "just a uh managed Prometheus experience",
    "start": "700399",
    "end": "702839"
  },
  {
    "text": "it deploys your Prometheus instances and",
    "start": "702839",
    "end": "704839"
  },
  {
    "text": "it scales with it and uh it just injects",
    "start": "704839",
    "end": "707920"
  },
  {
    "text": "your metrics and stores it in Cloud",
    "start": "707920",
    "end": "709480"
  },
  {
    "text": "Monarch but the thing we care about the",
    "start": "709480",
    "end": "711800"
  },
  {
    "text": "best part is it allows you to query all",
    "start": "711800",
    "end": "714120"
  },
  {
    "text": "your metrics via Global prom endpoint",
    "start": "714120",
    "end": "716760"
  },
  {
    "text": "which is exactly what we're looking for",
    "start": "716760",
    "end": "718160"
  },
  {
    "text": "in this case",
    "start": "718160",
    "end": "721240"
  },
  {
    "start": "721000",
    "end": "756000"
  },
  {
    "text": "so yeah that's why we built a Thanos",
    "start": "722320",
    "end": "724399"
  },
  {
    "text": "promk connector as the name suggests it",
    "start": "724399",
    "end": "727480"
  },
  {
    "text": "connects Thanos querier to a promql",
    "start": "727480",
    "end": "730279"
  },
  {
    "text": "endpoint and uh it just lives in the",
    "start": "730279",
    "end": "732760"
  },
  {
    "text": "middle between your Thanos querier and a",
    "start": "732760",
    "end": "735519"
  },
  {
    "text": "prom endpoint and it converts requests",
    "start": "735519",
    "end": "739399"
  },
  {
    "text": "between the two and um it's open source",
    "start": "739399",
    "end": "742519"
  },
  {
    "text": "it's a couple hundred lines of codes",
    "start": "742519",
    "end": "744000"
  },
  {
    "text": "very lightweight so uh feel free to um",
    "start": "744000",
    "end": "747959"
  },
  {
    "text": "test it out and play with it make it",
    "start": "747959",
    "end": "750160"
  },
  {
    "text": "your own add new features to it",
    "start": "750160",
    "end": "753120"
  },
  {
    "text": "contributions are",
    "start": "753120",
    "end": "755360"
  },
  {
    "text": "welcome so uh what is required to use it",
    "start": "755360",
    "end": "758880"
  },
  {
    "start": "756000",
    "end": "767000"
  },
  {
    "text": "you just need a promql endpoint to point",
    "start": "758880",
    "end": "761120"
  },
  {
    "text": "it at and maybe you need some off",
    "start": "761120",
    "end": "765680"
  },
  {
    "text": "credentials so uh in gmp's case for",
    "start": "766519",
    "end": "770480"
  },
  {
    "start": "767000",
    "end": "787000"
  },
  {
    "text": "Google Cloud you just need um your",
    "start": "770480",
    "end": "773360"
  },
  {
    "text": "project ID and your service account",
    "start": "773360",
    "end": "776720"
  },
  {
    "text": "key and you could just plug that into",
    "start": "776720",
    "end": "780079"
  },
  {
    "text": "your Docker compose if you already use",
    "start": "780079",
    "end": "781600"
  },
  {
    "text": "that and it should just start working",
    "start": "781600",
    "end": "783480"
  },
  {
    "text": "immediately with all your other",
    "start": "783480",
    "end": "786639"
  },
  {
    "start": "787000",
    "end": "823000"
  },
  {
    "text": "quers so uh this is the view Philip",
    "start": "787519",
    "end": "790160"
  },
  {
    "text": "shared distributed queries and all their",
    "start": "790160",
    "end": "793040"
  },
  {
    "text": "advantages of pushing them",
    "start": "793040",
    "end": "794920"
  },
  {
    "text": "down and now you can add another data",
    "start": "794920",
    "end": "799199"
  },
  {
    "text": "source for for example GMP and you",
    "start": "799199",
    "end": "803480"
  },
  {
    "text": "could delegate all your metrics to it",
    "start": "803480",
    "end": "806839"
  },
  {
    "text": "and uh the prom K connector isew viewed",
    "start": "806839",
    "end": "809399"
  },
  {
    "text": "by the querier the same way if used",
    "start": "809399",
    "end": "811199"
  },
  {
    "text": "every other querier and uh your promql",
    "start": "811199",
    "end": "814600"
  },
  {
    "text": "queries will be distributed to it the",
    "start": "814600",
    "end": "817199"
  },
  {
    "text": "same exact way and you get the results",
    "start": "817199",
    "end": "820160"
  },
  {
    "text": "in a single",
    "start": "820160",
    "end": "822920"
  },
  {
    "start": "823000",
    "end": "1066000"
  },
  {
    "text": "view all right let me show you guys the",
    "start": "823160",
    "end": "827680"
  },
  {
    "text": "demo let me just mirror my",
    "start": "833800",
    "end": "837680"
  },
  {
    "text": "display",
    "start": "838040",
    "end": "841040"
  },
  {
    "text": "perfect",
    "start": "844000",
    "end": "846199"
  },
  {
    "text": "oops here we go so the first thing I'm",
    "start": "846199",
    "end": "849399"
  },
  {
    "text": "going to show you guys is actually",
    "start": "849399",
    "end": "851000"
  },
  {
    "text": "Google Cloud I'm going to show you guys",
    "start": "851000",
    "end": "852720"
  },
  {
    "text": "a metric in Google Cloud that you can",
    "start": "852720",
    "end": "855160"
  },
  {
    "text": "only View in Google cloud and this is a",
    "start": "855160",
    "end": "858560"
  },
  {
    "text": "Google Cloud Storage so you see this",
    "start": "858560",
    "end": "861399"
  },
  {
    "text": "metric it's just a bunch of buckets it",
    "start": "861399",
    "end": "864120"
  },
  {
    "text": "has like an S",
    "start": "864120",
    "end": "865639"
  },
  {
    "text": "shape um as you can see it's like 100 56",
    "start": "865639",
    "end": "869720"
  },
  {
    "text": "megabytes so you can copy that same",
    "start": "869720",
    "end": "872519"
  },
  {
    "text": "query and you can put it in your",
    "start": "872519",
    "end": "875839"
  },
  {
    "text": "Thanos",
    "start": "875839",
    "end": "878839"
  },
  {
    "text": "query and",
    "start": "879720",
    "end": "883000"
  },
  {
    "text": "then let's extend the date I think I put",
    "start": "883240",
    "end": "886440"
  },
  {
    "text": "two days on the Google Cloud yeah so you",
    "start": "886440",
    "end": "888880"
  },
  {
    "text": "have the same s shape and",
    "start": "888880",
    "end": "892399"
  },
  {
    "text": "15657 so for the first time ever you can",
    "start": "892399",
    "end": "895680"
  },
  {
    "text": "see your Google Cloud metrics in Thanos",
    "start": "895680",
    "end": "898680"
  },
  {
    "text": "Square",
    "start": "898680",
    "end": "900959"
  },
  {
    "text": "all right let's talk about the next",
    "start": "900959",
    "end": "903759"
  },
  {
    "text": "thing which is the the flow I just",
    "start": "903759",
    "end": "907240"
  },
  {
    "text": "showed you so here you could see like um",
    "start": "907240",
    "end": "909920"
  },
  {
    "text": "AR Thanos quer is connected to two",
    "start": "909920",
    "end": "912560"
  },
  {
    "text": "different",
    "start": "912560",
    "end": "914279"
  },
  {
    "text": "Prometheus and also over here you can",
    "start": "914279",
    "end": "916519"
  },
  {
    "text": "see it's connected to our GMP querier so",
    "start": "916519",
    "end": "919560"
  },
  {
    "text": "you could query all three at the same",
    "start": "919560",
    "end": "921560"
  },
  {
    "text": "time so let's query for example",
    "start": "921560",
    "end": "926240"
  },
  {
    "text": "up so you can see I have one g P cluster",
    "start": "926240",
    "end": "930800"
  },
  {
    "text": "and one two prometheus's so let's let's",
    "start": "930800",
    "end": "935880"
  },
  {
    "text": "just sum it up",
    "start": "935880",
    "end": "937360"
  },
  {
    "text": "by",
    "start": "937360",
    "end": "940360"
  },
  {
    "text": "cluster so yeah you could see all three",
    "start": "941839",
    "end": "945600"
  },
  {
    "text": "so you're connected to a remote endpoint",
    "start": "945600",
    "end": "948720"
  },
  {
    "text": "for GMP and then you have two local",
    "start": "948720",
    "end": "950440"
  },
  {
    "text": "Prometheus instances let's look at a",
    "start": "950440",
    "end": "952759"
  },
  {
    "text": "more interesting uh metric let's look at",
    "start": "952759",
    "end": "956959"
  },
  {
    "text": "uh HTTP requests",
    "start": "956959",
    "end": "960920"
  },
  {
    "text": "and uh let's look at our",
    "start": "962480",
    "end": "965560"
  },
  {
    "text": "rate and let's uh Sumit by",
    "start": "967319",
    "end": "974240"
  },
  {
    "text": "cluster so yeah oops you could see all",
    "start": "978279",
    "end": "983560"
  },
  {
    "text": "your HTTP requests from all your",
    "start": "983560",
    "end": "987639"
  },
  {
    "text": "clusters and uh the cool part is you can",
    "start": "987639",
    "end": "990880"
  },
  {
    "text": "actually remove by cluster right",
    "start": "990880",
    "end": "993079"
  },
  {
    "text": "here and you can have a global view of",
    "start": "993079",
    "end": "996880"
  },
  {
    "text": "what all your HTP requests look like",
    "start": "996880",
    "end": "998959"
  },
  {
    "text": "across all your",
    "start": "998959",
    "end": "1000199"
  },
  {
    "text": "servers",
    "start": "1000199",
    "end": "1001800"
  },
  {
    "text": "um and then you could use that to",
    "start": "1001800",
    "end": "1005040"
  },
  {
    "text": "analyze like for example like error",
    "start": "1005040",
    "end": "1007519"
  },
  {
    "text": "codes to see which servers are giving",
    "start": "1007519",
    "end": "1009519"
  },
  {
    "text": "you error codes from a high level",
    "start": "1009519",
    "end": "1011240"
  },
  {
    "text": "overview so next thing I want to show",
    "start": "1011240",
    "end": "1013160"
  },
  {
    "text": "you guys is this explain tab so you can",
    "start": "1013160",
    "end": "1016319"
  },
  {
    "text": "click the explain and it shows you how",
    "start": "1016319",
    "end": "1019199"
  },
  {
    "text": "queries are delegated so you can see um",
    "start": "1019199",
    "end": "1022839"
  },
  {
    "text": "there are three different queries that",
    "start": "1022839",
    "end": "1024038"
  },
  {
    "text": "were delegated two to our local",
    "start": "1024039",
    "end": "1025720"
  },
  {
    "text": "Prometheus clusters and one to our GMP",
    "start": "1025720",
    "end": "1028319"
  },
  {
    "text": "endpoint in Google cloud and uh",
    "start": "1028319",
    "end": "1031160"
  },
  {
    "text": "obviously in the future some",
    "start": "1031160",
    "end": "1032199"
  },
  {
    "text": "improvements will be to replace remote x",
    "start": "1032199",
    "end": "1035520"
  },
  {
    "text": "with uh exactly the remote endpoint it",
    "start": "1035520",
    "end": "1037480"
  },
  {
    "text": "was sent",
    "start": "1037480",
    "end": "1038480"
  },
  {
    "text": "to the next thing you can do is you can",
    "start": "1038480",
    "end": "1041000"
  },
  {
    "text": "click",
    "start": "1041000",
    "end": "1043079"
  },
  {
    "text": "analyze and it shows you like how long",
    "start": "1043079",
    "end": "1045520"
  },
  {
    "text": "each of your queries",
    "start": "1045520",
    "end": "1047120"
  },
  {
    "text": "took so you can use it as a like an SRE",
    "start": "1047120",
    "end": "1050240"
  },
  {
    "text": "for top down view to see like which",
    "start": "1050240",
    "end": "1052640"
  },
  {
    "text": "remote endpoints that you have are kind",
    "start": "1052640",
    "end": "1054520"
  },
  {
    "text": "of struggling are not performing as",
    "start": "1054520",
    "end": "1059080"
  },
  {
    "text": "expected yeah that's it for the",
    "start": "1059960",
    "end": "1062360"
  },
  {
    "text": "demo let me show you guys the",
    "start": "1062360",
    "end": "1066000"
  },
  {
    "start": "1066000",
    "end": "1108000"
  },
  {
    "text": "conclusion all right so yeah now we",
    "start": "1066000",
    "end": "1069240"
  },
  {
    "text": "reached the end of our talk um real",
    "start": "1069240",
    "end": "1071240"
  },
  {
    "text": "quick I'm going to summarize everything",
    "start": "1071240",
    "end": "1073120"
  },
  {
    "text": "we went over so you can create all your",
    "start": "1073120",
    "end": "1075520"
  },
  {
    "text": "data in a uniform",
    "start": "1075520",
    "end": "1077120"
  },
  {
    "text": "way like you have like a global view of",
    "start": "1077120",
    "end": "1079799"
  },
  {
    "text": "all your data from all your different",
    "start": "1079799",
    "end": "1081480"
  },
  {
    "text": "instances data sources you have more",
    "start": "1081480",
    "end": "1083960"
  },
  {
    "text": "control over your data and this is",
    "start": "1083960",
    "end": "1086320"
  },
  {
    "text": "available to use today so feel free to",
    "start": "1086320",
    "end": "1088080"
  },
  {
    "text": "try it out and test it let us know if",
    "start": "1088080",
    "end": "1090480"
  },
  {
    "text": "you find any uh bugs and uh feel free to",
    "start": "1090480",
    "end": "1093520"
  },
  {
    "text": "contribute to it and uh as the image",
    "start": "1093520",
    "end": "1095799"
  },
  {
    "text": "here alludes this could be the future of",
    "start": "1095799",
    "end": "1098520"
  },
  {
    "text": "Thanos career you can have many",
    "start": "1098520",
    "end": "1100799"
  },
  {
    "text": "different data",
    "start": "1100799",
    "end": "1102200"
  },
  {
    "text": "sources you could use many different",
    "start": "1102200",
    "end": "1104120"
  },
  {
    "text": "data sources and be like a data source",
    "start": "1104120",
    "end": "1105919"
  },
  {
    "text": "agnostic for",
    "start": "1105919",
    "end": "1107159"
  },
  {
    "text": "example uh thank you guys for coming to",
    "start": "1107159",
    "end": "1109480"
  },
  {
    "start": "1108000",
    "end": "1404000"
  },
  {
    "text": "our talk we really appreciate um if you",
    "start": "1109480",
    "end": "1112200"
  },
  {
    "text": "have any questions let us know feel free",
    "start": "1112200",
    "end": "1113960"
  },
  {
    "text": "to stop us in the hallway if you have",
    "start": "1113960",
    "end": "1115960"
  },
  {
    "text": "any questions thank",
    "start": "1115960",
    "end": "1119600"
  },
  {
    "text": "you I think we should have time for a",
    "start": "1122480",
    "end": "1124480"
  },
  {
    "text": "few",
    "start": "1124480",
    "end": "1126559"
  },
  {
    "text": "questions I might have missed this but",
    "start": "1126559",
    "end": "1128919"
  },
  {
    "text": "is there a external label uh setable for",
    "start": "1128919",
    "end": "1132280"
  },
  {
    "text": "these uh other endpoints that you can",
    "start": "1132280",
    "end": "1134960"
  },
  {
    "text": "control fan",
    "start": "1134960",
    "end": "1136960"
  },
  {
    "text": "out um",
    "start": "1136960",
    "end": "1139799"
  },
  {
    "text": "yeah so we in the connector I think",
    "start": "1139799",
    "end": "1142799"
  },
  {
    "text": "we'll want to add external labels so",
    "start": "1142799",
    "end": "1145559"
  },
  {
    "text": "that you can as you mentioned control",
    "start": "1145559",
    "end": "1147039"
  },
  {
    "text": "fan out and also in the distributed",
    "start": "1147039",
    "end": "1149360"
  },
  {
    "text": "query mode we already take into account",
    "start": "1149360",
    "end": "1151280"
  },
  {
    "text": "external labels so that will also work",
    "start": "1151280",
    "end": "1154919"
  },
  {
    "text": "yeah thank you for presentation um so",
    "start": "1155240",
    "end": "1159640"
  },
  {
    "text": "there's a a similar old project called",
    "start": "1159640",
    "end": "1162320"
  },
  {
    "text": "promy and I was thinking a bunch about",
    "start": "1162320",
    "end": "1164679"
  },
  {
    "text": "this problem so uh while you were",
    "start": "1164679",
    "end": "1167640"
  },
  {
    "text": "migrating to the distributed mode uh I",
    "start": "1167640",
    "end": "1170520"
  },
  {
    "text": "know we have a bunch of tests but maybe",
    "start": "1170520",
    "end": "1172440"
  },
  {
    "text": "you did some extra correctness tests or",
    "start": "1172440",
    "end": "1176080"
  },
  {
    "text": "how to call them whether the results",
    "start": "1176080",
    "end": "1178360"
  },
  {
    "text": "still return the correct response or not",
    "start": "1178360",
    "end": "1181679"
  },
  {
    "text": "like with distributed mode and with it",
    "start": "1181679",
    "end": "1184320"
  },
  {
    "text": "turned",
    "start": "1184320",
    "end": "1185679"
  },
  {
    "text": "off um yeah so obviously in the",
    "start": "1185679",
    "end": "1188880"
  },
  {
    "text": "beginning there were some um I would say",
    "start": "1188880",
    "end": "1191840"
  },
  {
    "text": "subtle issues subtle bugs but by now we",
    "start": "1191840",
    "end": "1194559"
  },
  {
    "text": "kind of use it in production for a long",
    "start": "1194559",
    "end": "1196679"
  },
  {
    "text": "time um we have haven't seen any any",
    "start": "1196679",
    "end": "1200520"
  },
  {
    "text": "problems today I think we should have",
    "start": "1200520",
    "end": "1202840"
  },
  {
    "text": "kind of squashed out even the most",
    "start": "1202840",
    "end": "1205039"
  },
  {
    "text": "complicated bugs but obviously there can",
    "start": "1205039",
    "end": "1207159"
  },
  {
    "text": "always be you know something that we",
    "start": "1207159",
    "end": "1208840"
  },
  {
    "text": "haven't taken into account um so this is",
    "start": "1208840",
    "end": "1211360"
  },
  {
    "text": "why in the in the UI you can choose",
    "start": "1211360",
    "end": "1213200"
  },
  {
    "text": "between like the pritus and tanos engine",
    "start": "1213200",
    "end": "1214960"
  },
  {
    "text": "and if you suspect that a query is not",
    "start": "1214960",
    "end": "1216559"
  },
  {
    "text": "showing you what you want you can try it",
    "start": "1216559",
    "end": "1218760"
  },
  {
    "text": "out with a prit engine which is going to",
    "start": "1218760",
    "end": "1220520"
  },
  {
    "text": "do the the standard fan",
    "start": "1220520",
    "end": "1223600"
  },
  {
    "text": "out amazing okay we have another",
    "start": "1223600",
    "end": "1227640"
  },
  {
    "text": "question",
    "start": "1227640",
    "end": "1230000"
  },
  {
    "text": "thank you for for the presentation uh is",
    "start": "1230000",
    "end": "1232440"
  },
  {
    "text": "it possible to avoid that service",
    "start": "1232440",
    "end": "1234200"
  },
  {
    "text": "account key file I mean using to connect",
    "start": "1234200",
    "end": "1237240"
  },
  {
    "text": "to gcp using work Cloud identi for",
    "start": "1237240",
    "end": "1241559"
  },
  {
    "text": "example maybe you should know the answer",
    "start": "1244400",
    "end": "1246400"
  },
  {
    "text": "to this so is your question is is it",
    "start": "1246400",
    "end": "1248799"
  },
  {
    "text": "possible to avoid using a service",
    "start": "1248799",
    "end": "1250320"
  },
  {
    "text": "account to query Google Cloud",
    "start": "1250320",
    "end": "1253440"
  },
  {
    "text": "uh service account",
    "start": "1253440",
    "end": "1256200"
  },
  {
    "text": "uh key key file that just",
    "start": "1256200",
    "end": "1259240"
  },
  {
    "text": "someone uh yeah I think you need for I",
    "start": "1259240",
    "end": "1262520"
  },
  {
    "text": "think as far as I know you need a key",
    "start": "1262520",
    "end": "1264120"
  },
  {
    "text": "file for Google",
    "start": "1264120",
    "end": "1265640"
  },
  {
    "text": "Cloud but uh if you're using other data",
    "start": "1265640",
    "end": "1268960"
  },
  {
    "text": "sources you can it yeah I I want to",
    "start": "1268960",
    "end": "1271480"
  },
  {
    "text": "avoid using for example work Cloud",
    "start": "1271480",
    "end": "1275760"
  },
  {
    "text": "identity can you repeat for example open",
    "start": "1275760",
    "end": "1278320"
  },
  {
    "text": "engine okay I can answer this yeah so",
    "start": "1278320",
    "end": "1280760"
  },
  {
    "text": "essentially there is this way of like",
    "start": "1280760",
    "end": "1282039"
  },
  {
    "text": "work identity where you just if deploy",
    "start": "1282039",
    "end": "1284320"
  },
  {
    "text": "for example Thanos from ql connector in",
    "start": "1284320",
    "end": "1286640"
  },
  {
    "text": "Google cloud like on gke there a way to",
    "start": "1286640",
    "end": "1289320"
  },
  {
    "text": "automatically",
    "start": "1289320",
    "end": "1290960"
  },
  {
    "text": "authenticate um with this default kind",
    "start": "1290960",
    "end": "1293360"
  },
  {
    "text": "of uh yeah like permission to write to",
    "start": "1293360",
    "end": "1295880"
  },
  {
    "text": "metrix so it's like open source you know",
    "start": "1295880",
    "end": "1298799"
  },
  {
    "text": "a simple proxy right now so it's not",
    "start": "1298799",
    "end": "1300559"
  },
  {
    "text": "possible now but we might contribute it",
    "start": "1300559",
    "end": "1303000"
  },
  {
    "text": "so please feel free to add the issue on",
    "start": "1303000",
    "end": "1304760"
  },
  {
    "text": "top of this project that you want that",
    "start": "1304760",
    "end": "1307200"
  },
  {
    "text": "and we can definitely do that for Google",
    "start": "1307200",
    "end": "1309720"
  },
  {
    "text": "but we want to have this proxy also",
    "start": "1309720",
    "end": "1311400"
  },
  {
    "text": "available for other Cloud providers",
    "start": "1311400",
    "end": "1313000"
  },
  {
    "text": "right to use and to connect Thanos to",
    "start": "1313000",
    "end": "1314600"
  },
  {
    "text": "multiple things so also we'll probably I",
    "start": "1314600",
    "end": "1316679"
  },
  {
    "text": "mean we'll for sure accept contributions",
    "start": "1316679",
    "end": "1319000"
  },
  {
    "text": "to add authorizations for those uh",
    "start": "1319000",
    "end": "1321600"
  },
  {
    "text": "vendors as well so it's a good question",
    "start": "1321600",
    "end": "1323400"
  },
  {
    "text": "like yeah it can be more",
    "start": "1323400",
    "end": "1325000"
  },
  {
    "text": "automatic maybe last",
    "start": "1325000",
    "end": "1328600"
  },
  {
    "text": "question you talk about a lot of",
    "start": "1329440",
    "end": "1331360"
  },
  {
    "text": "operations that are sort of homomorphic",
    "start": "1331360",
    "end": "1333720"
  },
  {
    "text": "you can express a sum as a sum of sums",
    "start": "1333720",
    "end": "1337760"
  },
  {
    "text": "what happens to operations where you",
    "start": "1337760",
    "end": "1339400"
  },
  {
    "text": "can't do that like an average can't be",
    "start": "1339400",
    "end": "1341400"
  },
  {
    "text": "expressed as an average of an",
    "start": "1341400",
    "end": "1343760"
  },
  {
    "text": "average um so there's the the average we",
    "start": "1343760",
    "end": "1347440"
  },
  {
    "text": "transform that into the sum of count um",
    "start": "1347440",
    "end": "1350720"
  },
  {
    "text": "so the sum is done globally the count is",
    "start": "1350720",
    "end": "1352520"
  },
  {
    "text": "done globally and then we divide those",
    "start": "1352520",
    "end": "1354880"
  },
  {
    "text": "the only operation where we cannot do it",
    "start": "1354880",
    "end": "1356679"
  },
  {
    "text": "is quantile um because for quantile you",
    "start": "1356679",
    "end": "1359200"
  },
  {
    "text": "need to get the data in one central",
    "start": "1359200",
    "end": "1360799"
  },
  {
    "text": "place and yeah there we have to kind of",
    "start": "1360799",
    "end": "1364000"
  },
  {
    "text": "pay the cost of still kind of",
    "start": "1364000",
    "end": "1365559"
  },
  {
    "text": "centralizing data but um if you apply an",
    "start": "1365559",
    "end": "1369960"
  },
  {
    "text": "aggregation before applying quantile",
    "start": "1369960",
    "end": "1371840"
  },
  {
    "text": "then that aggregation is going to get",
    "start": "1371840",
    "end": "1373120"
  },
  {
    "text": "distributed so if you do a quantel over",
    "start": "1373120",
    "end": "1375600"
  },
  {
    "text": "a sum then the sum will get distributed",
    "start": "1375600",
    "end": "1377799"
  },
  {
    "text": "and the quantel with that",
    "start": "1377799",
    "end": "1380960"
  },
  {
    "text": "centrally nice you want to catch us",
    "start": "1381440",
    "end": "1383799"
  },
  {
    "text": "right on on some on some BS yeah so I",
    "start": "1383799",
    "end": "1386799"
  },
  {
    "text": "think it's part of this promql engine",
    "start": "1386799",
    "end": "1389080"
  },
  {
    "text": "work where you kind of like really con",
    "start": "1389080",
    "end": "1391559"
  },
  {
    "text": "deconstruct the query into st3 and yeah",
    "start": "1391559",
    "end": "1394760"
  },
  {
    "text": "we thought about those edge cases so",
    "start": "1394760",
    "end": "1396240"
  },
  {
    "text": "it's it's a good question okay thank you",
    "start": "1396240",
    "end": "1399000"
  },
  {
    "text": "so much for",
    "start": "1399000",
    "end": "1400530"
  },
  {
    "text": "[Applause]",
    "start": "1400530",
    "end": "1403720"
  },
  {
    "text": "speakers",
    "start": "1403720",
    "end": "1406720"
  }
]