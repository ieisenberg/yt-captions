[
  {
    "start": "0",
    "end": "42000"
  },
  {
    "text": "hello everyone my name is urkira",
    "start": "1280",
    "end": "4560"
  },
  {
    "text": "i am senior specialist stamp for",
    "start": "4560",
    "end": "6879"
  },
  {
    "text": "containers",
    "start": "6879",
    "end": "9120"
  },
  {
    "text": "in here in aws today",
    "start": "9120",
    "end": "12240"
  },
  {
    "text": "with my colleague wesley we will talk",
    "start": "12240",
    "end": "14320"
  },
  {
    "text": "about scaling aspect of land bit",
    "start": "14320",
    "end": "16720"
  },
  {
    "text": "and provide you more insight around",
    "start": "16720",
    "end": "21039"
  },
  {
    "text": "it based on our experience",
    "start": "21039",
    "end": "25119"
  },
  {
    "text": "here is our agenda we'll consider",
    "start": "25199",
    "end": "27279"
  },
  {
    "text": "scaling consideration",
    "start": "27279",
    "end": "28800"
  },
  {
    "text": "scaling best practices and we will",
    "start": "28800",
    "end": "31840"
  },
  {
    "text": "mention we will discuss the worker",
    "start": "31840",
    "end": "33760"
  },
  {
    "text": "concept with",
    "start": "33760",
    "end": "34880"
  },
  {
    "text": "a bit and we will present some",
    "start": "34880",
    "end": "36880"
  },
  {
    "text": "benchmarking uh",
    "start": "36880",
    "end": "39680"
  },
  {
    "text": "statistics",
    "start": "39680",
    "end": "42320"
  },
  {
    "start": "42000",
    "end": "127000"
  },
  {
    "text": "so to start with while we are we talked",
    "start": "42879",
    "end": "46079"
  },
  {
    "text": "with",
    "start": "46079",
    "end": "46800"
  },
  {
    "text": "uh when we are talking scaling of your",
    "start": "46800",
    "end": "49920"
  },
  {
    "text": "log the pipeline you need to",
    "start": "49920",
    "end": "54160"
  },
  {
    "text": "you need to consider three main focus",
    "start": "54160",
    "end": "56879"
  },
  {
    "text": "areas",
    "start": "56879",
    "end": "59760"
  },
  {
    "text": "for particularly you need to consider",
    "start": "59760",
    "end": "63359"
  },
  {
    "text": "your source capabilities which means the",
    "start": "63359",
    "end": "66799"
  },
  {
    "text": "total cp and memory capacity of your",
    "start": "66799",
    "end": "70000"
  },
  {
    "text": "worker node",
    "start": "70000",
    "end": "71119"
  },
  {
    "text": "the drupal network throughput that your",
    "start": "71119",
    "end": "72960"
  },
  {
    "text": "work could not have",
    "start": "72960",
    "end": "74479"
  },
  {
    "text": "and second you need to consider that",
    "start": "74479",
    "end": "76560"
  },
  {
    "text": "your destination capabilities what is",
    "start": "76560",
    "end": "78720"
  },
  {
    "text": "the ingestion rate",
    "start": "78720",
    "end": "80159"
  },
  {
    "text": "that your destination can consume",
    "start": "80159",
    "end": "83840"
  },
  {
    "text": "this destination can be guinnesses they",
    "start": "83840",
    "end": "86240"
  },
  {
    "text": "just stream club watch logs or any other",
    "start": "86240",
    "end": "88799"
  },
  {
    "text": "uh destination but you need to",
    "start": "88799",
    "end": "90960"
  },
  {
    "text": "understand the throttling",
    "start": "90960",
    "end": "92320"
  },
  {
    "text": "and registration rate of your",
    "start": "92320",
    "end": "95520"
  },
  {
    "text": "destination this has the",
    "start": "95520",
    "end": "97840"
  },
  {
    "text": "direct impact on you throughput and",
    "start": "97840",
    "end": "100320"
  },
  {
    "text": "performance of",
    "start": "100320",
    "end": "101200"
  },
  {
    "text": "your log delivery pipeline and then you",
    "start": "101200",
    "end": "104880"
  },
  {
    "text": "need to",
    "start": "104880",
    "end": "106799"
  },
  {
    "text": "consider the performance and the",
    "start": "106799",
    "end": "110479"
  },
  {
    "text": "performance and actual throughput of",
    "start": "110479",
    "end": "112880"
  },
  {
    "text": "your pipe",
    "start": "112880",
    "end": "113600"
  },
  {
    "text": "which is different demon in this case so",
    "start": "113600",
    "end": "116159"
  },
  {
    "text": "you need to understand",
    "start": "116159",
    "end": "117360"
  },
  {
    "text": "flan bit fully you need to uh",
    "start": "117360",
    "end": "120960"
  },
  {
    "text": "optimize the this configuration and you",
    "start": "120960",
    "end": "124079"
  },
  {
    "text": "need to actively monitor your pipeline",
    "start": "124079",
    "end": "128000"
  },
  {
    "start": "127000",
    "end": "309000"
  },
  {
    "text": "and another aspect while you are talking",
    "start": "128000",
    "end": "131039"
  },
  {
    "text": "about scaling",
    "start": "131039",
    "end": "132400"
  },
  {
    "text": "is you need to choose the right filter",
    "start": "132400",
    "end": "134800"
  },
  {
    "text": "and understand",
    "start": "134800",
    "end": "135680"
  },
  {
    "text": "its characteristic and this is the way",
    "start": "135680",
    "end": "138239"
  },
  {
    "text": "really",
    "start": "138239",
    "end": "140640"
  },
  {
    "text": "vital when we are talking about scaling",
    "start": "140840",
    "end": "144480"
  },
  {
    "text": "let's take an example of uh take varnish",
    "start": "144480",
    "end": "147760"
  },
  {
    "text": "filter as an example and as you know one",
    "start": "147760",
    "end": "150720"
  },
  {
    "text": "of the characteristics of this",
    "start": "150720",
    "end": "152000"
  },
  {
    "text": "combination filter",
    "start": "152000",
    "end": "153840"
  },
  {
    "text": "is for each port",
    "start": "153840",
    "end": "157680"
  },
  {
    "text": "it creates this api endpoint to get some",
    "start": "157680",
    "end": "160800"
  },
  {
    "text": "extra metadata uh to enrich your logs",
    "start": "160800",
    "end": "164959"
  },
  {
    "text": "and this metadata",
    "start": "164959",
    "end": "166239"
  },
  {
    "text": "protect these labels and annotation",
    "start": "166239",
    "end": "169840"
  },
  {
    "text": "however this the",
    "start": "169840",
    "end": "173360"
  },
  {
    "text": "this stuff to enrich your logs",
    "start": "173360",
    "end": "176640"
  },
  {
    "text": "and creating api endpoint to get this",
    "start": "176640",
    "end": "179280"
  },
  {
    "text": "metadata",
    "start": "179280",
    "end": "180159"
  },
  {
    "text": "about your logs and where",
    "start": "180159",
    "end": "183840"
  },
  {
    "text": "it uh attempt to provide more",
    "start": "183840",
    "end": "187519"
  },
  {
    "text": "put more context to your logs it just",
    "start": "187519",
    "end": "190959"
  },
  {
    "text": "it add additional work on your api",
    "start": "190959",
    "end": "194080"
  },
  {
    "text": "endpoint which may",
    "start": "194080",
    "end": "197360"
  },
  {
    "text": "impact your performance and scale",
    "start": "197360",
    "end": "200800"
  },
  {
    "text": "of your uh log dev",
    "start": "200800",
    "end": "203840"
  },
  {
    "text": "log delivery pipeline and here",
    "start": "203840",
    "end": "207360"
  },
  {
    "text": "this is the default behavior and one",
    "start": "207360",
    "end": "209680"
  },
  {
    "text": "thing i want to call out",
    "start": "209680",
    "end": "210959"
  },
  {
    "text": "there is a me proposal",
    "start": "210959",
    "end": "215519"
  },
  {
    "text": "for that and within this conference",
    "start": "215840",
    "end": "218560"
  },
  {
    "text": "series there is",
    "start": "218560",
    "end": "219519"
  },
  {
    "text": "a lightening tool called scaling the",
    "start": "219519",
    "end": "222319"
  },
  {
    "text": "philanthropic combination filter invader",
    "start": "222319",
    "end": "224400"
  },
  {
    "text": "large cluster",
    "start": "224400",
    "end": "225680"
  },
  {
    "text": "and the our colleagues there take",
    "start": "225680",
    "end": "227760"
  },
  {
    "text": "different approach",
    "start": "227760",
    "end": "229120"
  },
  {
    "text": "to get this similar metadata information",
    "start": "229120",
    "end": "232560"
  },
  {
    "text": "rather than from uh directly api",
    "start": "232560",
    "end": "236239"
  },
  {
    "text": "endpoint they tend to rely on the",
    "start": "236239",
    "end": "238720"
  },
  {
    "text": "cubelet",
    "start": "238720",
    "end": "239599"
  },
  {
    "text": "to obtain those information which",
    "start": "239599",
    "end": "243040"
  },
  {
    "text": "uh reduced to load on the api service",
    "start": "243040",
    "end": "246480"
  },
  {
    "text": "and is really interesting to watch",
    "start": "246480",
    "end": "248400"
  },
  {
    "text": "if you didn't watch it yet",
    "start": "248400",
    "end": "253439"
  },
  {
    "text": "and another thing you need to consider",
    "start": "253439",
    "end": "256400"
  },
  {
    "text": "is",
    "start": "256400",
    "end": "257040"
  },
  {
    "text": "you whenever possible you need to",
    "start": "257040",
    "end": "259359"
  },
  {
    "text": "offload your workload",
    "start": "259359",
    "end": "262079"
  },
  {
    "text": "uh to the source and you need to apply",
    "start": "262079",
    "end": "265520"
  },
  {
    "text": "filtering",
    "start": "265520",
    "end": "266560"
  },
  {
    "text": "how you can do the filtering you can",
    "start": "266560",
    "end": "269919"
  },
  {
    "text": "uh use friendly filters so in",
    "start": "269919",
    "end": "273040"
  },
  {
    "text": "a successful log delivery pipeline you",
    "start": "273040",
    "end": "276160"
  },
  {
    "text": "need to",
    "start": "276160",
    "end": "276800"
  },
  {
    "text": "only ship the logs or information data",
    "start": "276800",
    "end": "280639"
  },
  {
    "text": "that really adds value for your business",
    "start": "280639",
    "end": "283840"
  },
  {
    "text": "and there is no point to stream a log",
    "start": "283840",
    "end": "287440"
  },
  {
    "text": "that doesn't have any business value",
    "start": "287440",
    "end": "291040"
  },
  {
    "text": "so you can use finance filters to filter",
    "start": "291040",
    "end": "293919"
  },
  {
    "text": "the",
    "start": "293919",
    "end": "295840"
  },
  {
    "text": "your locks at source level",
    "start": "295840",
    "end": "298880"
  },
  {
    "text": "flat bit has a data stream feature which",
    "start": "298880",
    "end": "302160"
  },
  {
    "text": "can be also used to filter and process",
    "start": "302160",
    "end": "305680"
  },
  {
    "text": "your data",
    "start": "305680",
    "end": "307120"
  },
  {
    "text": "and log as source",
    "start": "307120",
    "end": "310880"
  },
  {
    "start": "309000",
    "end": "525000"
  },
  {
    "text": "and when we come to the scaling best",
    "start": "310880",
    "end": "312800"
  },
  {
    "text": "practices",
    "start": "312800",
    "end": "314240"
  },
  {
    "text": "first thing as mentioned you need to",
    "start": "314240",
    "end": "317120"
  },
  {
    "text": "understand",
    "start": "317120",
    "end": "317759"
  },
  {
    "text": "your uh the the behavior of your",
    "start": "317759",
    "end": "321440"
  },
  {
    "text": "uh the behavior of your filter and",
    "start": "321440",
    "end": "324639"
  },
  {
    "text": "plugins that you are using",
    "start": "324639",
    "end": "326400"
  },
  {
    "text": "and here we mentioned the kubernetes",
    "start": "326400",
    "end": "330560"
  },
  {
    "text": "filter generate an extra a lot on your",
    "start": "330560",
    "end": "333120"
  },
  {
    "text": "api service you need to know this",
    "start": "333120",
    "end": "334880"
  },
  {
    "text": "and moreover by default it happened",
    "start": "334880",
    "end": "338720"
  },
  {
    "text": "put labels and annotation to do your uh",
    "start": "338720",
    "end": "341759"
  },
  {
    "text": "log recourse to add as a context",
    "start": "341759",
    "end": "345360"
  },
  {
    "text": "and here in case the",
    "start": "345360",
    "end": "348720"
  },
  {
    "text": "most of time this labels and annotation",
    "start": "348720",
    "end": "352240"
  },
  {
    "text": "doesn't have any uh business value it is",
    "start": "352240",
    "end": "355039"
  },
  {
    "text": "more",
    "start": "355039",
    "end": "355680"
  },
  {
    "text": "than the specific thing so but it adds",
    "start": "355680",
    "end": "358880"
  },
  {
    "text": "an extra lot on your uh logging delivery",
    "start": "358880",
    "end": "362240"
  },
  {
    "text": "pipeline",
    "start": "362240",
    "end": "362960"
  },
  {
    "text": "so you can consider to disable them",
    "start": "362960",
    "end": "365759"
  },
  {
    "text": "whenever possible",
    "start": "365759",
    "end": "366960"
  },
  {
    "text": "as seen below and",
    "start": "366960",
    "end": "370639"
  },
  {
    "text": "the third thing that you can do is you",
    "start": "370639",
    "end": "372240"
  },
  {
    "text": "can use the memory buffer",
    "start": "372240",
    "end": "374240"
  },
  {
    "text": "the limit option in large cluster which",
    "start": "374240",
    "end": "377360"
  },
  {
    "text": "is",
    "start": "377360",
    "end": "378000"
  },
  {
    "text": "disabled by default and",
    "start": "378000",
    "end": "380200"
  },
  {
    "text": "[Music]",
    "start": "380200",
    "end": "382080"
  },
  {
    "text": "here uh based on our testing",
    "start": "382080",
    "end": "385600"
  },
  {
    "text": "and what we recommend to set it",
    "start": "385600",
    "end": "388560"
  },
  {
    "text": "somewhere",
    "start": "388560",
    "end": "389199"
  },
  {
    "text": "between 50 megabytes to 100 megabytes",
    "start": "389199",
    "end": "392800"
  },
  {
    "text": "based on the workload",
    "start": "392800",
    "end": "394319"
  },
  {
    "text": "and there is a nice article called back",
    "start": "394319",
    "end": "397120"
  },
  {
    "text": "pressure",
    "start": "397120",
    "end": "397759"
  },
  {
    "text": "in the student documentation which",
    "start": "397759",
    "end": "400160"
  },
  {
    "text": "really uh",
    "start": "400160",
    "end": "401600"
  },
  {
    "text": "explained this in detail and help you to",
    "start": "401600",
    "end": "404720"
  },
  {
    "text": "uh determine the right way for that",
    "start": "404720",
    "end": "408240"
  },
  {
    "text": "and",
    "start": "408240",
    "end": "410479"
  },
  {
    "text": "along with memory buffer limit you can",
    "start": "411440",
    "end": "414000"
  },
  {
    "text": "also",
    "start": "414000",
    "end": "414639"
  },
  {
    "text": "uh enable file system buffering and this",
    "start": "414639",
    "end": "417840"
  },
  {
    "text": "will also have little",
    "start": "417840",
    "end": "419280"
  },
  {
    "text": "level or large scale",
    "start": "419280",
    "end": "422400"
  },
  {
    "text": "and will ensure the data and log",
    "start": "422400",
    "end": "426080"
  },
  {
    "text": "integrity",
    "start": "426080",
    "end": "427360"
  },
  {
    "text": "in case your log destination is not able",
    "start": "427360",
    "end": "430160"
  },
  {
    "text": "to cope",
    "start": "430160",
    "end": "431120"
  },
  {
    "text": "with the load or there's any",
    "start": "431120",
    "end": "434960"
  },
  {
    "text": "technical problem there on destination",
    "start": "434960",
    "end": "437199"
  },
  {
    "text": "site",
    "start": "437199",
    "end": "438720"
  },
  {
    "text": "and for cloud watch uh locks",
    "start": "438720",
    "end": "441840"
  },
  {
    "text": "we recommend to use the hyper one cloud",
    "start": "441840",
    "end": "443919"
  },
  {
    "text": "watch log plugin called cloudwatch",
    "start": "443919",
    "end": "445919"
  },
  {
    "text": "underscore logs",
    "start": "445919",
    "end": "447440"
  },
  {
    "text": "and based on this information we",
    "start": "447440",
    "end": "449280"
  },
  {
    "text": "mentioned we have a",
    "start": "449280",
    "end": "450960"
  },
  {
    "text": "optimized full and configuration in our",
    "start": "450960",
    "end": "453639"
  },
  {
    "text": "container inside",
    "start": "453639",
    "end": "455440"
  },
  {
    "text": "uh page so i recommend you to review",
    "start": "455440",
    "end": "458639"
  },
  {
    "text": "this configuration",
    "start": "458639",
    "end": "460080"
  },
  {
    "text": "and try to make your friend with",
    "start": "460080",
    "end": "462840"
  },
  {
    "text": "configuration as close",
    "start": "462840",
    "end": "464720"
  },
  {
    "text": "as possible to the configuration we",
    "start": "464720",
    "end": "466800"
  },
  {
    "text": "share",
    "start": "466800",
    "end": "467840"
  },
  {
    "text": "under the containery site uh",
    "start": "467840",
    "end": "470160"
  },
  {
    "text": "documentation",
    "start": "470160",
    "end": "472639"
  },
  {
    "text": "and last best practices that i want to",
    "start": "472639",
    "end": "476160"
  },
  {
    "text": "recommend",
    "start": "476160",
    "end": "476879"
  },
  {
    "text": "is a monitoring hell of your log",
    "start": "476879",
    "end": "480080"
  },
  {
    "text": "delivery",
    "start": "480080",
    "end": "481039"
  },
  {
    "text": "mechanism this is really important about",
    "start": "481039",
    "end": "484479"
  },
  {
    "text": "an ignored aspect front bit has a",
    "start": "484479",
    "end": "488000"
  },
  {
    "text": "built-in http server com",
    "start": "488000",
    "end": "490479"
  },
  {
    "text": "comes with it and you can enable this in",
    "start": "490479",
    "end": "493759"
  },
  {
    "text": "your for the end co",
    "start": "493759",
    "end": "495039"
  },
  {
    "text": "config film bit configuration as you see",
    "start": "495039",
    "end": "497919"
  },
  {
    "text": "here",
    "start": "497919",
    "end": "498800"
  },
  {
    "text": "and then you can use a really nice graph",
    "start": "498800",
    "end": "501440"
  },
  {
    "text": "on a dashboard",
    "start": "501440",
    "end": "502800"
  },
  {
    "text": "where it will tell you the how to",
    "start": "502800",
    "end": "505919"
  },
  {
    "text": "provide you more",
    "start": "505919",
    "end": "508639"
  },
  {
    "text": "now i am handing over to my uh",
    "start": "508639",
    "end": "511919"
  },
  {
    "text": "colleague wesley who will uh talk about",
    "start": "511919",
    "end": "515760"
  },
  {
    "text": "worker concept and how worker concept",
    "start": "515760",
    "end": "520000"
  },
  {
    "text": "helps with scaling aspect of",
    "start": "520000",
    "end": "523839"
  },
  {
    "text": "food",
    "start": "523839",
    "end": "526080"
  },
  {
    "start": "525000",
    "end": "695000"
  },
  {
    "text": "okay hello everyone i'm",
    "start": "527680",
    "end": "530959"
  },
  {
    "text": "wesley i am um",
    "start": "530959",
    "end": "534080"
  },
  {
    "text": "one of the co-maintainers of fluid bit",
    "start": "534080",
    "end": "536080"
  },
  {
    "text": "i've contributed a lot of code to it",
    "start": "536080",
    "end": "537839"
  },
  {
    "text": "uh for uh aws uh plugins",
    "start": "537839",
    "end": "541519"
  },
  {
    "text": "um so i'm gonna explain how concurrency",
    "start": "541519",
    "end": "543600"
  },
  {
    "text": "works in fluent bit",
    "start": "543600",
    "end": "544959"
  },
  {
    "text": "which is important for understanding um",
    "start": "544959",
    "end": "547519"
  },
  {
    "text": "scaling",
    "start": "547519",
    "end": "548160"
  },
  {
    "text": "with fluent bit and the new worker",
    "start": "548160",
    "end": "551040"
  },
  {
    "text": "feature that was introduced",
    "start": "551040",
    "end": "553040"
  },
  {
    "text": "so um prior to workers",
    "start": "553040",
    "end": "556080"
  },
  {
    "text": "this is how concurrency worked in flint",
    "start": "556080",
    "end": "558080"
  },
  {
    "text": "bit flintbit uses a model called",
    "start": "558080",
    "end": "560839"
  },
  {
    "text": "co-routines co-routine i believe is",
    "start": "560839",
    "end": "563920"
  },
  {
    "text": "short for cooperative",
    "start": "563920",
    "end": "565760"
  },
  {
    "text": "routine basically",
    "start": "565760",
    "end": "569279"
  },
  {
    "text": "technically fluent bit has multiple like",
    "start": "569279",
    "end": "572560"
  },
  {
    "text": "p threads in use but",
    "start": "572560",
    "end": "575760"
  },
  {
    "text": "before workers without or without",
    "start": "575760",
    "end": "577760"
  },
  {
    "text": "workers um only a single thread is",
    "start": "577760",
    "end": "580000"
  },
  {
    "text": "active at a time",
    "start": "580000",
    "end": "581360"
  },
  {
    "text": "and threads cooperatively pass execution",
    "start": "581360",
    "end": "584880"
  },
  {
    "text": "between",
    "start": "584880",
    "end": "585440"
  },
  {
    "text": "each other um so what happens is you can",
    "start": "585440",
    "end": "588880"
  },
  {
    "text": "think of this like so there's like the",
    "start": "588880",
    "end": "590560"
  },
  {
    "text": "fluent bit core",
    "start": "590560",
    "end": "591760"
  },
  {
    "text": "engine um it gets some task",
    "start": "591760",
    "end": "594959"
  },
  {
    "text": "like let's say there's some chunk of",
    "start": "594959",
    "end": "596640"
  },
  {
    "text": "data that needs to be sent to an uh",
    "start": "596640",
    "end": "599200"
  },
  {
    "text": "um sent to an output destination",
    "start": "599200",
    "end": "602240"
  },
  {
    "text": "so then what it will do is it will",
    "start": "602240",
    "end": "604480"
  },
  {
    "text": "invoke a",
    "start": "604480",
    "end": "605680"
  },
  {
    "text": "co-routine for the output that runs the",
    "start": "605680",
    "end": "608399"
  },
  {
    "text": "output code",
    "start": "608399",
    "end": "609519"
  },
  {
    "text": "um pass execution to it which means",
    "start": "609519",
    "end": "612560"
  },
  {
    "text": "the engine thread basically uh moves",
    "start": "612560",
    "end": "615360"
  },
  {
    "text": "execution to the co routine so now only",
    "start": "615360",
    "end": "617440"
  },
  {
    "text": "the co",
    "start": "617440",
    "end": "617839"
  },
  {
    "text": "routine is is active co routine performs",
    "start": "617839",
    "end": "620880"
  },
  {
    "text": "some work",
    "start": "620880",
    "end": "621760"
  },
  {
    "text": "when it hits a network i o call um",
    "start": "621760",
    "end": "625200"
  },
  {
    "text": "rather than blocking on that call and",
    "start": "625200",
    "end": "628160"
  },
  {
    "text": "and you know",
    "start": "628160",
    "end": "628959"
  },
  {
    "text": "blocking into all execution instead it",
    "start": "628959",
    "end": "631680"
  },
  {
    "text": "will make the network call but then",
    "start": "631680",
    "end": "633519"
  },
  {
    "text": "it will pass execution and yield",
    "start": "633519",
    "end": "637440"
  },
  {
    "text": "back to the engine which will then",
    "start": "637440",
    "end": "640800"
  },
  {
    "text": "take control and it can then run other",
    "start": "640800",
    "end": "643360"
  },
  {
    "text": "co-routines to complete other tasks",
    "start": "643360",
    "end": "646560"
  },
  {
    "text": "and when the network when the",
    "start": "646560",
    "end": "650399"
  },
  {
    "text": "kernel notifies the engine that the",
    "start": "650399",
    "end": "652640"
  },
  {
    "text": "network call has completed",
    "start": "652640",
    "end": "654640"
  },
  {
    "text": "then the co-routine can be unpaused",
    "start": "654640",
    "end": "658560"
  },
  {
    "text": "it can it basically it will be sleeping",
    "start": "658560",
    "end": "660800"
  },
  {
    "text": "and it can be",
    "start": "660800",
    "end": "662000"
  },
  {
    "text": "um activated again so",
    "start": "662000",
    "end": "665760"
  },
  {
    "text": "um the way it essentially worked is is",
    "start": "665760",
    "end": "667920"
  },
  {
    "text": "works is that there is concurrency and",
    "start": "667920",
    "end": "669920"
  },
  {
    "text": "in some sense there's multiple threads",
    "start": "669920",
    "end": "671519"
  },
  {
    "text": "but only one of them",
    "start": "671519",
    "end": "672959"
  },
  {
    "text": "is active at a time and they're",
    "start": "672959",
    "end": "676240"
  },
  {
    "text": "cooperatively and intelligently",
    "start": "676240",
    "end": "678399"
  },
  {
    "text": "basically turning themselves on or off",
    "start": "678399",
    "end": "681680"
  },
  {
    "text": "so that network i o calls basically",
    "start": "681680",
    "end": "686160"
  },
  {
    "text": "don't ever slow down the execution of",
    "start": "686160",
    "end": "690000"
  },
  {
    "text": "the problem of the program",
    "start": "690000",
    "end": "691839"
  },
  {
    "text": "essentially it's just to do asynchronous",
    "start": "691839",
    "end": "694000"
  },
  {
    "text": "network i o",
    "start": "694000",
    "end": "696320"
  },
  {
    "start": "695000",
    "end": "767000"
  },
  {
    "text": "um but then now in fluent bit",
    "start": "696320",
    "end": "699760"
  },
  {
    "text": "as of 1.7 we have the 1.7 series we have",
    "start": "699760",
    "end": "704959"
  },
  {
    "text": "multi-workers so with workers um",
    "start": "704959",
    "end": "708320"
  },
  {
    "text": "you can increase you you can have",
    "start": "708320",
    "end": "711760"
  },
  {
    "text": "multiple threads active at a time",
    "start": "711760",
    "end": "714880"
  },
  {
    "text": "and basically the simple story is that",
    "start": "714880",
    "end": "717760"
  },
  {
    "text": "workers",
    "start": "717760",
    "end": "718800"
  },
  {
    "text": "uh are just dedicated threads uh for",
    "start": "718800",
    "end": "721440"
  },
  {
    "text": "outputs",
    "start": "721440",
    "end": "722160"
  },
  {
    "text": "so here we have an example here um with",
    "start": "722160",
    "end": "724639"
  },
  {
    "text": "an output",
    "start": "724639",
    "end": "725519"
  },
  {
    "text": "you put workers one that enables a",
    "start": "725519",
    "end": "727600"
  },
  {
    "text": "single dedicated thread just for that",
    "start": "727600",
    "end": "729760"
  },
  {
    "text": "output",
    "start": "729760",
    "end": "730720"
  },
  {
    "text": "um workers still actually have",
    "start": "730720",
    "end": "733839"
  },
  {
    "text": "can have co routines inside of them um",
    "start": "733839",
    "end": "737120"
  },
  {
    "text": "which means you're still doing um a like",
    "start": "737120",
    "end": "740320"
  },
  {
    "text": "non-blocking network i o",
    "start": "740320",
    "end": "742240"
  },
  {
    "text": "to make things efficient and fast it's",
    "start": "742240",
    "end": "745120"
  },
  {
    "text": "just that now",
    "start": "745120",
    "end": "746079"
  },
  {
    "text": "the co routines for the output um are",
    "start": "746079",
    "end": "748880"
  },
  {
    "text": "all happening in the context of a",
    "start": "748880",
    "end": "750639"
  },
  {
    "text": "a single um or an extra",
    "start": "750639",
    "end": "754000"
  },
  {
    "text": "dedicated thread just for that output",
    "start": "754000",
    "end": "756079"
  },
  {
    "text": "and of course you can enable more than",
    "start": "756079",
    "end": "757760"
  },
  {
    "text": "one",
    "start": "757760",
    "end": "758000"
  },
  {
    "text": "worker if you want um but i think in",
    "start": "758000",
    "end": "760000"
  },
  {
    "text": "most situations probably",
    "start": "760000",
    "end": "761760"
  },
  {
    "text": "folks throughput needs can be satisfied",
    "start": "761760",
    "end": "764800"
  },
  {
    "text": "with a single",
    "start": "764800",
    "end": "765920"
  },
  {
    "text": "dedicated thread um now so",
    "start": "765920",
    "end": "769760"
  },
  {
    "start": "767000",
    "end": "998000"
  },
  {
    "text": "how how how is uh how are concurrency",
    "start": "769760",
    "end": "773200"
  },
  {
    "text": "and workers implemented",
    "start": "773200",
    "end": "774720"
  },
  {
    "text": "in the actual code and the plugins um",
    "start": "774720",
    "end": "777760"
  },
  {
    "text": "so basically all plugins have a flush",
    "start": "777760",
    "end": "781200"
  },
  {
    "text": "callback function that they must",
    "start": "781200",
    "end": "784000"
  },
  {
    "text": "implement",
    "start": "784000",
    "end": "784800"
  },
  {
    "text": "which is called",
    "start": "784800",
    "end": "788240"
  },
  {
    "text": "when they are need to be given logs that",
    "start": "788240",
    "end": "790480"
  },
  {
    "text": "then they can send",
    "start": "790480",
    "end": "791760"
  },
  {
    "text": "and basically in order to have currency",
    "start": "791760",
    "end": "794800"
  },
  {
    "text": "the calls to this function must be fully",
    "start": "794800",
    "end": "797200"
  },
  {
    "text": "independent",
    "start": "797200",
    "end": "798320"
  },
  {
    "text": "basically it can't be storing state um",
    "start": "798320",
    "end": "801120"
  },
  {
    "text": "there is",
    "start": "801120",
    "end": "801680"
  },
  {
    "text": "a context object that",
    "start": "801680",
    "end": "804720"
  },
  {
    "text": "basically this function can have that",
    "start": "804720",
    "end": "806880"
  },
  {
    "text": "allows it to store state in between",
    "start": "806880",
    "end": "809279"
  },
  {
    "text": "between different calls but if you are",
    "start": "809279",
    "end": "811040"
  },
  {
    "text": "storing state in your output",
    "start": "811040",
    "end": "812959"
  },
  {
    "text": "plug-in then that prevents you from",
    "start": "812959",
    "end": "814560"
  },
  {
    "text": "being able to uh have concurrency",
    "start": "814560",
    "end": "817519"
  },
  {
    "text": "um because it you know it means that",
    "start": "817519",
    "end": "819440"
  },
  {
    "text": "basically the engine can't independently",
    "start": "819440",
    "end": "822560"
  },
  {
    "text": "have you send multiple chunks at the",
    "start": "822560",
    "end": "824240"
  },
  {
    "text": "same time um",
    "start": "824240",
    "end": "826560"
  },
  {
    "text": "also another key thing in this kind of",
    "start": "826560",
    "end": "829040"
  },
  {
    "text": "follows from",
    "start": "829040",
    "end": "830000"
  },
  {
    "text": "from that one is that you can't have",
    "start": "830000",
    "end": "831920"
  },
  {
    "text": "your api can't have any sort of guaran",
    "start": "831920",
    "end": "834079"
  },
  {
    "text": "require ordering um where calls must be",
    "start": "834079",
    "end": "837120"
  },
  {
    "text": "made you know in some sort of",
    "start": "837120",
    "end": "838399"
  },
  {
    "text": "like order in a series um because",
    "start": "838399",
    "end": "841040"
  },
  {
    "text": "there's no guarantee",
    "start": "841040",
    "end": "842560"
  },
  {
    "text": "that that will happen when you're when",
    "start": "842560",
    "end": "844000"
  },
  {
    "text": "you're running currently because",
    "start": "844000",
    "end": "846560"
  },
  {
    "text": "one co routine might be you know",
    "start": "846560",
    "end": "848240"
  },
  {
    "text": "performing a network call and",
    "start": "848240",
    "end": "849920"
  },
  {
    "text": "we'll be sleeping and then another",
    "start": "849920",
    "end": "851440"
  },
  {
    "text": "another co routine might start sending",
    "start": "851440",
    "end": "853680"
  },
  {
    "text": "um before the network call for the first",
    "start": "853680",
    "end": "855920"
  },
  {
    "text": "sleeping co routine might finish",
    "start": "855920",
    "end": "859120"
  },
  {
    "text": "so that is one issue uh with workers",
    "start": "859120",
    "end": "862399"
  },
  {
    "text": "basically almost any plug-in i think",
    "start": "862399",
    "end": "866240"
  },
  {
    "text": "should be able to support",
    "start": "866240",
    "end": "867760"
  },
  {
    "text": "pretty much any plug-in should build",
    "start": "867760",
    "end": "869199"
  },
  {
    "text": "output should build to support",
    "start": "869199",
    "end": "871279"
  },
  {
    "text": "workers with only minor",
    "start": "871279",
    "end": "875760"
  },
  {
    "text": "code changes concurrency support",
    "start": "875839",
    "end": "878800"
  },
  {
    "text": "interestingly is actually not needed in",
    "start": "878800",
    "end": "880880"
  },
  {
    "text": "order to support",
    "start": "880880",
    "end": "882639"
  },
  {
    "text": "a single worker the ability to have",
    "start": "882639",
    "end": "884800"
  },
  {
    "text": "users configure a single worker so the",
    "start": "884800",
    "end": "886480"
  },
  {
    "text": "reason for that is that",
    "start": "886480",
    "end": "887839"
  },
  {
    "text": "basically workers are a dedicated thread",
    "start": "887839",
    "end": "890399"
  },
  {
    "text": "um",
    "start": "890399",
    "end": "891600"
  },
  {
    "text": "even if your output is like synchronous",
    "start": "891600",
    "end": "893839"
  },
  {
    "text": "and it's not doing and it's basically",
    "start": "893839",
    "end": "895680"
  },
  {
    "text": "doing blocking",
    "start": "895680",
    "end": "896800"
  },
  {
    "text": "network i o instead of non-blocking um",
    "start": "896800",
    "end": "900160"
  },
  {
    "text": "co-routine network i o you could still",
    "start": "900160",
    "end": "902880"
  },
  {
    "text": "have a dedicated thread",
    "start": "902880",
    "end": "904320"
  },
  {
    "text": "and then just do all of those",
    "start": "904320",
    "end": "905600"
  },
  {
    "text": "synchronous calls in the dedicated",
    "start": "905600",
    "end": "907839"
  },
  {
    "text": "thread so basically workers",
    "start": "907839",
    "end": "909360"
  },
  {
    "text": "can still help now if you want to let",
    "start": "909360",
    "end": "912079"
  },
  {
    "text": "your users enable",
    "start": "912079",
    "end": "913360"
  },
  {
    "text": "multiple workers in the output then you",
    "start": "913360",
    "end": "915680"
  },
  {
    "text": "also need to support concurrency because",
    "start": "915680",
    "end": "917600"
  },
  {
    "text": "if you have multiple workers then that's",
    "start": "917600",
    "end": "920000"
  },
  {
    "text": "you can think of that as kind of",
    "start": "920000",
    "end": "921040"
  },
  {
    "text": "equivalent to at least having",
    "start": "921040",
    "end": "923440"
  },
  {
    "text": "co routines except for now it's",
    "start": "923440",
    "end": "924880"
  },
  {
    "text": "processed on multiple",
    "start": "924880",
    "end": "926639"
  },
  {
    "text": "uh threads um interestingly as a side",
    "start": "926639",
    "end": "930320"
  },
  {
    "text": "note if folks are familiar with",
    "start": "930320",
    "end": "932480"
  },
  {
    "text": "goaling and like go routines multiple",
    "start": "932480",
    "end": "935440"
  },
  {
    "text": "workers which means multiple threads",
    "start": "935440",
    "end": "937680"
  },
  {
    "text": "and then the co-routines operating",
    "start": "937680",
    "end": "939600"
  },
  {
    "text": "inside them i",
    "start": "939600",
    "end": "940800"
  },
  {
    "text": "i'm pretty sure like fundamentally in",
    "start": "940800",
    "end": "942959"
  },
  {
    "text": "terms of the programming",
    "start": "942959",
    "end": "944399"
  },
  {
    "text": "model it's a lot like it's kind of a lot",
    "start": "944399",
    "end": "946639"
  },
  {
    "text": "like the go scheduler running uh go",
    "start": "946639",
    "end": "949040"
  },
  {
    "text": "routines",
    "start": "949040",
    "end": "950240"
  },
  {
    "text": "um onto actual real threads um anyway so",
    "start": "950240",
    "end": "954320"
  },
  {
    "text": "this is just looking some more at the",
    "start": "954320",
    "end": "955600"
  },
  {
    "text": "code how do you enable a concurrency in",
    "start": "955600",
    "end": "957600"
  },
  {
    "text": "workers",
    "start": "957600",
    "end": "958480"
  },
  {
    "text": "so um if if you had an output that you",
    "start": "958480",
    "end": "961120"
  },
  {
    "text": "maintained for flint bit",
    "start": "961120",
    "end": "962560"
  },
  {
    "text": "so concurrency is enabled by default for",
    "start": "962560",
    "end": "965279"
  },
  {
    "text": "all outputs",
    "start": "965279",
    "end": "966160"
  },
  {
    "text": "you can turn it off with this a little",
    "start": "966160",
    "end": "968480"
  },
  {
    "text": "line of code there",
    "start": "968480",
    "end": "969680"
  },
  {
    "text": "i wrote a whole developer guide that",
    "start": "969680",
    "end": "971279"
  },
  {
    "text": "explains this actually a little bit more",
    "start": "971279",
    "end": "972880"
  },
  {
    "text": "if you want to",
    "start": "972880",
    "end": "973600"
  },
  {
    "text": "really understand what this is doing",
    "start": "973600",
    "end": "975600"
  },
  {
    "text": "here but there's basically and",
    "start": "975600",
    "end": "977680"
  },
  {
    "text": "there's this thing called an upstream",
    "start": "977680",
    "end": "979199"
  },
  {
    "text": "influent bit which is a",
    "start": "979199",
    "end": "981199"
  },
  {
    "text": "core networking concept representing um",
    "start": "981199",
    "end": "984560"
  },
  {
    "text": "uh basically an endpoint that you're",
    "start": "984560",
    "end": "986639"
  },
  {
    "text": "connecting to",
    "start": "986639",
    "end": "987600"
  },
  {
    "text": "and you can disable asynchronous calls",
    "start": "987600",
    "end": "990720"
  },
  {
    "text": "which will disable concurrency um and",
    "start": "990720",
    "end": "993199"
  },
  {
    "text": "then there's this other call that you",
    "start": "993199",
    "end": "994399"
  },
  {
    "text": "have to make which will then allow",
    "start": "994399",
    "end": "995839"
  },
  {
    "text": "people to configure workers if they want",
    "start": "995839",
    "end": "998639"
  },
  {
    "text": "um okay so then talking some more about",
    "start": "998639",
    "end": "1001839"
  },
  {
    "text": "uh worker and concurrency support in the",
    "start": "1001839",
    "end": "1004560"
  },
  {
    "text": "plug-ins that i maintain so i maintain",
    "start": "1004560",
    "end": "1007040"
  },
  {
    "text": "the aws plug-ins influent bit and there",
    "start": "1007040",
    "end": "1009519"
  },
  {
    "text": "are four",
    "start": "1009519",
    "end": "1010079"
  },
  {
    "text": "of them there's s3 cloudwatch kinesis",
    "start": "1010079",
    "end": "1012880"
  },
  {
    "text": "streams and kinesis firehose",
    "start": "1012880",
    "end": "1016399"
  },
  {
    "start": "1016000",
    "end": "1074000"
  },
  {
    "text": "so basically",
    "start": "1017040",
    "end": "1021519"
  },
  {
    "text": "support for workers and concurrency",
    "start": "1022160",
    "end": "1024160"
  },
  {
    "text": "varies",
    "start": "1024160",
    "end": "1025600"
  },
  {
    "text": "so when we're talking about concurrency",
    "start": "1025600",
    "end": "1029199"
  },
  {
    "text": "support",
    "start": "1029199",
    "end": "1031120"
  },
  {
    "text": "that's supported basically the kinesis",
    "start": "1031120",
    "end": "1033520"
  },
  {
    "text": "streams and kinesis fire hose plug-ins",
    "start": "1033520",
    "end": "1036000"
  },
  {
    "text": "they support everything they support any",
    "start": "1036000",
    "end": "1037760"
  },
  {
    "text": "number of workers and they also support",
    "start": "1037760",
    "end": "1039438"
  },
  {
    "text": "concurrency",
    "start": "1039439",
    "end": "1040720"
  },
  {
    "text": "um the s3 plugin can support concurrency",
    "start": "1040720",
    "end": "1044240"
  },
  {
    "text": "and multiple workers but only if you're",
    "start": "1044240",
    "end": "1046720"
  },
  {
    "text": "enabling put object and i'll show that",
    "start": "1046720",
    "end": "1048960"
  },
  {
    "text": "as the api that it uses to upload",
    "start": "1048960",
    "end": "1050880"
  },
  {
    "text": "s3 and i'll show that in a moment",
    "start": "1050880",
    "end": "1054640"
  },
  {
    "text": "and then there is cloudwatch logs",
    "start": "1055919",
    "end": "1059440"
  },
  {
    "text": "which doesn't support concurrency",
    "start": "1059440",
    "end": "1061600"
  },
  {
    "text": "unfortunately but it can support a",
    "start": "1061600",
    "end": "1063600"
  },
  {
    "text": "single worker",
    "start": "1063600",
    "end": "1065520"
  },
  {
    "text": "because as i noted any output basically",
    "start": "1065520",
    "end": "1067520"
  },
  {
    "text": "can support a single",
    "start": "1067520",
    "end": "1069120"
  },
  {
    "text": "uh worker which is a dedicated thread",
    "start": "1069120",
    "end": "1071440"
  },
  {
    "text": "that then operations can happen in",
    "start": "1071440",
    "end": "1073039"
  },
  {
    "text": "synchronously",
    "start": "1073039",
    "end": "1075039"
  },
  {
    "start": "1074000",
    "end": "1204000"
  },
  {
    "text": "so here's just some example uh output",
    "start": "1075039",
    "end": "1078080"
  },
  {
    "text": "definitions to show what that what what",
    "start": "1078080",
    "end": "1080080"
  },
  {
    "text": "this all looks like i'm emitting uh some",
    "start": "1080080",
    "end": "1082640"
  },
  {
    "text": "of the",
    "start": "1082640",
    "end": "1083120"
  },
  {
    "text": "required fields that you have to",
    "start": "1083120",
    "end": "1084400"
  },
  {
    "text": "configure for these outputs um",
    "start": "1084400",
    "end": "1086640"
  },
  {
    "text": "you can see in kinesis streams or",
    "start": "1086640",
    "end": "1088160"
  },
  {
    "text": "kinesis firehose you can enable any",
    "start": "1088160",
    "end": "1089840"
  },
  {
    "text": "number of workers that you want",
    "start": "1089840",
    "end": "1091600"
  },
  {
    "text": "um in s3 with the default multi-part",
    "start": "1091600",
    "end": "1095200"
  },
  {
    "text": "upload mode",
    "start": "1095200",
    "end": "1096240"
  },
  {
    "text": "which um can only be enabled uh",
    "start": "1096240",
    "end": "1099440"
  },
  {
    "text": "if you which only happens if you if you",
    "start": "1099440",
    "end": "1102080"
  },
  {
    "text": "have a",
    "start": "1102080",
    "end": "1102880"
  },
  {
    "text": "file size that's uh above i think 12",
    "start": "1102880",
    "end": "1105600"
  },
  {
    "text": "megabytes",
    "start": "1105600",
    "end": "1107840"
  },
  {
    "text": "but anyway you can enable a single",
    "start": "1107840",
    "end": "1109440"
  },
  {
    "text": "worker this will be",
    "start": "1109440",
    "end": "1111039"
  },
  {
    "text": "um synchronous calls",
    "start": "1111039",
    "end": "1115759"
  },
  {
    "text": "but happening in a dedicated thread the",
    "start": "1116000",
    "end": "1118240"
  },
  {
    "text": "reason why",
    "start": "1118240",
    "end": "1119200"
  },
  {
    "text": "s3 multi-part is non-concurrent is",
    "start": "1119200",
    "end": "1122160"
  },
  {
    "text": "because",
    "start": "1122160",
    "end": "1122720"
  },
  {
    "text": "the multi-part uploads are a series of",
    "start": "1122720",
    "end": "1124559"
  },
  {
    "text": "calls and they require storing state",
    "start": "1124559",
    "end": "1127200"
  },
  {
    "text": "basically so they're the plug-in is not",
    "start": "1127200",
    "end": "1129120"
  },
  {
    "text": "stateless um this is something that i've",
    "start": "1129120",
    "end": "1131280"
  },
  {
    "text": "thought about",
    "start": "1131280",
    "end": "1132000"
  },
  {
    "text": "probably there there probably is a way",
    "start": "1132000",
    "end": "1134640"
  },
  {
    "text": "to",
    "start": "1134640",
    "end": "1135280"
  },
  {
    "text": "allow it to to work with multiple",
    "start": "1135280",
    "end": "1138880"
  },
  {
    "text": "threads but",
    "start": "1138880",
    "end": "1140480"
  },
  {
    "text": "i need to rewrite the code and think a",
    "start": "1140480",
    "end": "1143200"
  },
  {
    "text": "little bit more about that",
    "start": "1143200",
    "end": "1144960"
  },
  {
    "text": "anyway so then s3 was put object mode so",
    "start": "1144960",
    "end": "1148000"
  },
  {
    "text": "put object mode",
    "start": "1148000",
    "end": "1149120"
  },
  {
    "text": "is an api where you're you just send an",
    "start": "1149120",
    "end": "1151360"
  },
  {
    "text": "object in a single request",
    "start": "1151360",
    "end": "1153039"
  },
  {
    "text": "and so that can be done concurrently",
    "start": "1153039",
    "end": "1154720"
  },
  {
    "text": "which means you can enable any number of",
    "start": "1154720",
    "end": "1156799"
  },
  {
    "text": "workers and it's fine",
    "start": "1156799",
    "end": "1159280"
  },
  {
    "text": "and then finally up here at the top we",
    "start": "1159280",
    "end": "1161360"
  },
  {
    "text": "have cloudwatch",
    "start": "1161360",
    "end": "1163200"
  },
  {
    "text": "unfortunately it doesn't support",
    "start": "1163200",
    "end": "1164720"
  },
  {
    "text": "concurrency the reason is because",
    "start": "1164720",
    "end": "1166880"
  },
  {
    "text": "um there's this thing concept of a",
    "start": "1166880",
    "end": "1168480"
  },
  {
    "text": "sequence token in the put log events api",
    "start": "1168480",
    "end": "1171120"
  },
  {
    "text": "which basically means um it kind of",
    "start": "1171120",
    "end": "1173600"
  },
  {
    "text": "basically means that um",
    "start": "1173600",
    "end": "1175200"
  },
  {
    "text": "calls to the api have to be ordered",
    "start": "1175200",
    "end": "1178559"
  },
  {
    "text": "where something obtained from the output",
    "start": "1178559",
    "end": "1180480"
  },
  {
    "text": "of a previous call must be",
    "start": "1180480",
    "end": "1182320"
  },
  {
    "text": "sent in your next call so this means you",
    "start": "1182320",
    "end": "1185600"
  },
  {
    "text": "have no concurrency you can only enable",
    "start": "1185600",
    "end": "1187520"
  },
  {
    "text": "one worker",
    "start": "1187520",
    "end": "1188960"
  },
  {
    "text": "as a dedicated thread for the output and",
    "start": "1188960",
    "end": "1191760"
  },
  {
    "text": "which it will run synchronously in",
    "start": "1191760",
    "end": "1194880"
  },
  {
    "text": "in a moment uger's going to show some",
    "start": "1194880",
    "end": "1196720"
  },
  {
    "text": "benchmarking results",
    "start": "1196720",
    "end": "1198080"
  },
  {
    "text": "surprisingly despite the fact that",
    "start": "1198080",
    "end": "1199440"
  },
  {
    "text": "there's no concurrency",
    "start": "1199440",
    "end": "1201360"
  },
  {
    "text": "it actually still performs pretty well",
    "start": "1201360",
    "end": "1204840"
  },
  {
    "start": "1204000",
    "end": "1229000"
  },
  {
    "text": "um anyway so wrapping up",
    "start": "1204840",
    "end": "1207360"
  },
  {
    "text": "um concurrency and worker support",
    "start": "1207360",
    "end": "1210960"
  },
  {
    "text": "so these are like the unsolved remaining",
    "start": "1210960",
    "end": "1213440"
  },
  {
    "text": "problems",
    "start": "1213440",
    "end": "1214320"
  },
  {
    "text": "um for the fluent bit community and",
    "start": "1214320",
    "end": "1216640"
  },
  {
    "text": "fluid core to",
    "start": "1216640",
    "end": "1219440"
  },
  {
    "text": "anyway now i will turn it back over to",
    "start": "1219440",
    "end": "1221360"
  },
  {
    "text": "uger who will go over",
    "start": "1221360",
    "end": "1223039"
  },
  {
    "text": "some uh uh benchmarking results",
    "start": "1223039",
    "end": "1226559"
  },
  {
    "text": "uh for fluid bit with workers",
    "start": "1226559",
    "end": "1230080"
  },
  {
    "text": "thank you basically for your insight",
    "start": "1230080",
    "end": "1232000"
  },
  {
    "text": "around uh",
    "start": "1232000",
    "end": "1234000"
  },
  {
    "text": "workers and concurrency now i will",
    "start": "1234000",
    "end": "1236880"
  },
  {
    "text": "provide",
    "start": "1236880",
    "end": "1237520"
  },
  {
    "text": "some more insight how different",
    "start": "1237520",
    "end": "1240480"
  },
  {
    "text": "destination",
    "start": "1240480",
    "end": "1242400"
  },
  {
    "text": "and log delivery pipelines performs",
    "start": "1242400",
    "end": "1246880"
  },
  {
    "text": "with and without workers enabled and",
    "start": "1246880",
    "end": "1250000"
  },
  {
    "text": "particularly in this session we will",
    "start": "1250000",
    "end": "1251520"
  },
  {
    "text": "consider amazon cloud watch logs",
    "start": "1251520",
    "end": "1253919"
  },
  {
    "text": "and i was like this data stream as a",
    "start": "1253919",
    "end": "1256240"
  },
  {
    "text": "destination",
    "start": "1256240",
    "end": "1257280"
  },
  {
    "text": "and here you see the details of our",
    "start": "1257280",
    "end": "1259679"
  },
  {
    "text": "benchmarking setup",
    "start": "1259679",
    "end": "1261679"
  },
  {
    "text": "and we will start with a",
    "start": "1261679",
    "end": "1264720"
  },
  {
    "text": "workload on cloudwatch logs so imagine",
    "start": "1264720",
    "end": "1268000"
  },
  {
    "text": "you have a production environment we",
    "start": "1268000",
    "end": "1270240"
  },
  {
    "text": "generate",
    "start": "1270240",
    "end": "1271120"
  },
  {
    "text": "around 8500 locks per second",
    "start": "1271120",
    "end": "1274640"
  },
  {
    "text": "and this is without worker enabled and",
    "start": "1274640",
    "end": "1278720"
  },
  {
    "text": "keeping all other variables uh more or",
    "start": "1278720",
    "end": "1281440"
  },
  {
    "text": "less the same",
    "start": "1281440",
    "end": "1282400"
  },
  {
    "text": "and by just enabling the",
    "start": "1282400",
    "end": "1285840"
  },
  {
    "text": "worker on your flan bit configuration",
    "start": "1285840",
    "end": "1289440"
  },
  {
    "text": "we see an increased",
    "start": "1289440",
    "end": "1292480"
  },
  {
    "text": "throughput in terms of of processing",
    "start": "1292480",
    "end": "1295440"
  },
  {
    "text": "rate",
    "start": "1295440",
    "end": "1296159"
  },
  {
    "text": "of land bet and as we see",
    "start": "1296159",
    "end": "1299600"
  },
  {
    "text": "here enabling worker nodes",
    "start": "1299600",
    "end": "1302880"
  },
  {
    "text": "and by keeping all the other variables",
    "start": "1302880",
    "end": "1306110"
  },
  {
    "text": "[Music]",
    "start": "1306110",
    "end": "1307600"
  },
  {
    "text": "stable has really measured impact and",
    "start": "1307600",
    "end": "1310480"
  },
  {
    "text": "improve the log processing",
    "start": "1310480",
    "end": "1312880"
  },
  {
    "text": "performance dramatically",
    "start": "1312880",
    "end": "1318080"
  },
  {
    "text": "and when we look to the uh",
    "start": "1318080",
    "end": "1321919"
  },
  {
    "text": "the locks delivered internal",
    "start": "1321919",
    "end": "1324960"
  },
  {
    "text": "or lock deliver internal network",
    "start": "1324960",
    "end": "1327919"
  },
  {
    "text": "performance",
    "start": "1327919",
    "end": "1329200"
  },
  {
    "text": "and here uh the similar workload",
    "start": "1329200",
    "end": "1333200"
  },
  {
    "text": "generate",
    "start": "1333200",
    "end": "1333919"
  },
  {
    "text": "used to generate two megabytes per",
    "start": "1333919",
    "end": "1335840"
  },
  {
    "text": "second locks",
    "start": "1335840",
    "end": "1337280"
  },
  {
    "text": "and streamed the capacitor",
    "start": "1337280",
    "end": "1340400"
  },
  {
    "text": "uh this was the capacitor pipe",
    "start": "1340400",
    "end": "1343440"
  },
  {
    "text": "and parallel to increase in the",
    "start": "1343440",
    "end": "1347840"
  },
  {
    "text": "number of locks there's pro number of",
    "start": "1348159",
    "end": "1351280"
  },
  {
    "text": "locks that have",
    "start": "1351280",
    "end": "1352480"
  },
  {
    "text": "processed in previous slide and after",
    "start": "1352480",
    "end": "1356000"
  },
  {
    "text": "enabling the workload the delivery",
    "start": "1356000",
    "end": "1359200"
  },
  {
    "text": "throughput",
    "start": "1359200",
    "end": "1360159"
  },
  {
    "text": "internal networking also increased as we",
    "start": "1360159",
    "end": "1363280"
  },
  {
    "text": "see",
    "start": "1363280",
    "end": "1363760"
  },
  {
    "text": "here so",
    "start": "1363760",
    "end": "1366880"
  },
  {
    "text": "one thing additional video is like we",
    "start": "1366880",
    "end": "1369280"
  },
  {
    "text": "wanted to",
    "start": "1369280",
    "end": "1370400"
  },
  {
    "text": "see the impact of the work enabling",
    "start": "1370400",
    "end": "1373600"
  },
  {
    "text": "vulcan",
    "start": "1373600",
    "end": "1374400"
  },
  {
    "text": "or our resource consumption and",
    "start": "1374400",
    "end": "1379520"
  },
  {
    "text": "and how the how it uh what are the extra",
    "start": "1379760",
    "end": "1383919"
  },
  {
    "text": "load it brings internal cpu",
    "start": "1383919",
    "end": "1387200"
  },
  {
    "text": "and memory to do our cluster so here",
    "start": "1387200",
    "end": "1389840"
  },
  {
    "text": "just number",
    "start": "1389840",
    "end": "1390799"
  },
  {
    "text": "when we we get while we test the",
    "start": "1390799",
    "end": "1394480"
  },
  {
    "text": "a flat bit",
    "start": "1394480",
    "end": "1398080"
  },
  {
    "text": "with without worker",
    "start": "1398080",
    "end": "1401520"
  },
  {
    "text": "uh for with uh one thousand",
    "start": "1401520",
    "end": "1404720"
  },
  {
    "text": "and five thousand uh blocks per second",
    "start": "1404720",
    "end": "1407919"
  },
  {
    "text": "and the cpn memory uh",
    "start": "1407919",
    "end": "1410960"
  },
  {
    "text": "values we capture on the affiliate bit",
    "start": "1410960",
    "end": "1414240"
  },
  {
    "text": "uh ports that's a stream log",
    "start": "1414240",
    "end": "1418720"
  },
  {
    "text": "and when we",
    "start": "1418720",
    "end": "1421760"
  },
  {
    "text": "have the similar workload when we enable",
    "start": "1421760",
    "end": "1424480"
  },
  {
    "text": "the workload",
    "start": "1424480",
    "end": "1425520"
  },
  {
    "text": "what we we see is the memory",
    "start": "1425520",
    "end": "1428840"
  },
  {
    "text": "utilization is more or less the same",
    "start": "1428840",
    "end": "1432400"
  },
  {
    "text": "and there is no any increase",
    "start": "1432400",
    "end": "1436320"
  },
  {
    "text": "and the cpu utilization increased",
    "start": "1436320",
    "end": "1439600"
  },
  {
    "text": "slightly and when we look at the same",
    "start": "1439600",
    "end": "1443520"
  },
  {
    "text": "figures",
    "start": "1443520",
    "end": "1444240"
  },
  {
    "text": "at 5000 locks per second with vocal",
    "start": "1444240",
    "end": "1447200"
  },
  {
    "text": "enabled",
    "start": "1447200",
    "end": "1448240"
  },
  {
    "text": "we see an increase on",
    "start": "1448240",
    "end": "1452080"
  },
  {
    "text": "cpu utilization and",
    "start": "1452080",
    "end": "1455360"
  },
  {
    "text": "whereas the memory utilization more or",
    "start": "1455360",
    "end": "1458400"
  },
  {
    "text": "less stay stable",
    "start": "1458400",
    "end": "1460080"
  },
  {
    "text": "so this means",
    "start": "1460080",
    "end": "1463200"
  },
  {
    "text": "enabling vulcan have an",
    "start": "1463200",
    "end": "1466480"
  },
  {
    "text": "addition has a minimal impact on the",
    "start": "1466480",
    "end": "1469520"
  },
  {
    "text": "resource comp",
    "start": "1469520",
    "end": "1470559"
  },
  {
    "text": "option and where",
    "start": "1470559",
    "end": "1474000"
  },
  {
    "text": "the memory utilization at port level",
    "start": "1474000",
    "end": "1477679"
  },
  {
    "text": "remained more or less more or less",
    "start": "1477679",
    "end": "1480159"
  },
  {
    "text": "stable",
    "start": "1480159",
    "end": "1481120"
  },
  {
    "text": "and it caused an increased cpu",
    "start": "1481120",
    "end": "1483520"
  },
  {
    "text": "utilization",
    "start": "1483520",
    "end": "1485600"
  },
  {
    "text": "and now when we benchmark the",
    "start": "1485600",
    "end": "1488799"
  },
  {
    "text": "uh guinness data stream",
    "start": "1488799",
    "end": "1492960"
  },
  {
    "text": "so we built a pipeline locative",
    "start": "1492960",
    "end": "1497520"
  },
  {
    "text": "pipeline including data stream where you",
    "start": "1497520",
    "end": "1500559"
  },
  {
    "text": "use the",
    "start": "1500559",
    "end": "1502080"
  },
  {
    "text": "firehouse to stream the data to the s3",
    "start": "1502080",
    "end": "1506080"
  },
  {
    "text": "so log generated through the",
    "start": "1506080",
    "end": "1509120"
  },
  {
    "text": "data stream the data firehouse",
    "start": "1509120",
    "end": "1512240"
  },
  {
    "text": "ship into the s3 and here the view",
    "start": "1512240",
    "end": "1515520"
  },
  {
    "text": "on ews console and",
    "start": "1515520",
    "end": "1519279"
  },
  {
    "text": "here imagine we have this setup running",
    "start": "1519279",
    "end": "1522400"
  },
  {
    "text": "and in our production",
    "start": "1522400",
    "end": "1524080"
  },
  {
    "text": "we generate around 4 000 locks per",
    "start": "1524080",
    "end": "1526880"
  },
  {
    "text": "second",
    "start": "1526880",
    "end": "1528000"
  },
  {
    "text": "and then keeping all other variables the",
    "start": "1528000",
    "end": "1530640"
  },
  {
    "text": "same",
    "start": "1530640",
    "end": "1531440"
  },
  {
    "text": "by just enabling the workload we see",
    "start": "1531440",
    "end": "1535120"
  },
  {
    "text": "that our process incoming process rate",
    "start": "1535120",
    "end": "1539039"
  },
  {
    "text": "increased dramatically and",
    "start": "1539039",
    "end": "1542080"
  },
  {
    "text": "when we look to increase in terms of",
    "start": "1542080",
    "end": "1545039"
  },
  {
    "text": "networking",
    "start": "1545039",
    "end": "1546080"
  },
  {
    "text": "throughput and we will experience the",
    "start": "1546080",
    "end": "1549039"
  },
  {
    "text": "same",
    "start": "1549039",
    "end": "1550400"
  },
  {
    "text": "where parallel to processing increase in",
    "start": "1550400",
    "end": "1554080"
  },
  {
    "text": "processing rate",
    "start": "1554080",
    "end": "1555360"
  },
  {
    "text": "of the locks our throughput also",
    "start": "1555360",
    "end": "1557360"
  },
  {
    "text": "increased and one thing here",
    "start": "1557360",
    "end": "1559520"
  },
  {
    "text": "these numbers are not the mag",
    "start": "1559520",
    "end": "1562559"
  },
  {
    "text": "max throughput limits of the setup is",
    "start": "1562559",
    "end": "1565919"
  },
  {
    "text": "just",
    "start": "1565919",
    "end": "1566400"
  },
  {
    "text": "how a worker can impact your uh",
    "start": "1566400",
    "end": "1571600"
  },
  {
    "text": "block delivery performance by just",
    "start": "1571600",
    "end": "1574559"
  },
  {
    "text": "enabling",
    "start": "1574559",
    "end": "1575760"
  },
  {
    "text": "them rather than the maximum capacity of",
    "start": "1575760",
    "end": "1579200"
  },
  {
    "text": "the limits",
    "start": "1579200",
    "end": "1580400"
  },
  {
    "text": "and with kinesis data stream you also",
    "start": "1580400",
    "end": "1582880"
  },
  {
    "text": "need to think about",
    "start": "1582880",
    "end": "1584080"
  },
  {
    "text": "the number of shards that you have",
    "start": "1584080",
    "end": "1587520"
  },
  {
    "text": "and the throttling at kinesis level as",
    "start": "1587520",
    "end": "1590480"
  },
  {
    "text": "well this also contributes",
    "start": "1590480",
    "end": "1592159"
  },
  {
    "text": "to the platform most of your block",
    "start": "1592159",
    "end": "1593919"
  },
  {
    "text": "delivery pipeline",
    "start": "1593919",
    "end": "1598960"
  }
]