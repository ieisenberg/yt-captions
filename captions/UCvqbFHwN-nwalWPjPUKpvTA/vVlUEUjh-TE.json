[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "what everyone thank you very much for coming my name is Luis Paulin and I work",
    "start": "210",
    "end": "6750"
  },
  {
    "text": "at Port works today we'll be talking about securing your gr PC applications",
    "start": "6750",
    "end": "12269"
  },
  {
    "text": "okay a little bit about me first I say",
    "start": "12269",
    "end": "18180"
  },
  {
    "text": "my name is Louise already I'm a CNC I've taken technical lead",
    "start": "18180",
    "end": "23519"
  },
  {
    "text": "I'm also been participating in kubernetes since I think 1.4 I remember",
    "start": "23519",
    "end": "30390"
  },
  {
    "text": "going to Q Khan in London and I was much much smaller spite of the size of just this side right",
    "start": "30390",
    "end": "36870"
  },
  {
    "text": "I'm also been participating CSI since its inception and before the working at",
    "start": "36870",
    "end": "43680"
  },
  {
    "text": "port works I worked at core OS and I read storage and actually that picture you see right there that's from big hero",
    "start": "43680",
    "end": "49590"
  },
  {
    "text": "6 my sister sent me that picture and she said I think you're in the movie and so that kind of looks like me a little bit",
    "start": "49590",
    "end": "55860"
  },
  {
    "text": "probably a few years ago when I had more hair though so anyways alright so a little bit of",
    "start": "55860",
    "end": "63149"
  },
  {
    "start": "60000",
    "end": "114000"
  },
  {
    "text": "history before we go ahead and talk about authentication authorization why is it that we started this project at",
    "start": "63149",
    "end": "70020"
  },
  {
    "text": "port works one of the things that we had to do was first our customers were asking for a method to integrate the",
    "start": "70020",
    "end": "77130"
  },
  {
    "text": "libraries of port works and control system into their their applications and",
    "start": "77130",
    "end": "83340"
  },
  {
    "text": "how they manage users so what we did first we created G RPC SDK and that",
    "start": "83340",
    "end": "89100"
  },
  {
    "text": "worked well and then after that they said well we want to also have certain applications have certain rights and we",
    "start": "89100",
    "end": "94979"
  },
  {
    "text": "also want certain users to be able to access certain volumes and not others so that started creating what we're going",
    "start": "94979",
    "end": "101880"
  },
  {
    "text": "to talk about here so this talk is specifically on our experience on how we",
    "start": "101880",
    "end": "107430"
  },
  {
    "text": "were able to achieve this through authentication authorization in G RPC ok",
    "start": "107430",
    "end": "114930"
  },
  {
    "text": "so what is authentication authentication is when a system is trying to find out",
    "start": "114930",
    "end": "123390"
  },
  {
    "text": "who you are or who the color is determining that person who they say",
    "start": "123390",
    "end": "129300"
  },
  {
    "text": "they are is true and then they authorize that or that that recolor to determine if",
    "start": "129300",
    "end": "136590"
  },
  {
    "text": "there are requesting they can go ahead and actually do okay so let's first talk",
    "start": "136590",
    "end": "144450"
  },
  {
    "start": "142000",
    "end": "193000"
  },
  {
    "text": "about authentication anybody know what this is",
    "start": "144450",
    "end": "150920"
  },
  {
    "text": "sneakers that's right yes that movie came out about ninety-two I think and",
    "start": "150920",
    "end": "157670"
  },
  {
    "text": "you can see how important security was even then they made a movie about it's",
    "start": "157670",
    "end": "162900"
  },
  {
    "text": "actually pretty fun movies but watch it but in this movie the way that authentication was done was by the voice",
    "start": "162900",
    "end": "169620"
  },
  {
    "text": "of the person they had to say these words and then they will have a voice recognition system and it will allow",
    "start": "169620",
    "end": "175470"
  },
  {
    "text": "them to go in the point of the movie is that they record the person with an audio tape a very analog audio tape they",
    "start": "175470",
    "end": "182010"
  },
  {
    "text": "record every single word that the person said to put them all together and then playback and then can get in stable to",
    "start": "182010",
    "end": "188130"
  },
  {
    "text": "achieve that so security is very important even for a long time now so",
    "start": "188130",
    "end": "194489"
  },
  {
    "start": "193000",
    "end": "245000"
  },
  {
    "text": "when we started this project we said okay we understand that we need password management we understand we need a",
    "start": "194489",
    "end": "200850"
  },
  {
    "text": "method for us to determine who the user is okay so what we started going into we",
    "start": "200850",
    "end": "206489"
  },
  {
    "text": "started going into the libraries and go seed started checking out other projects",
    "start": "206489",
    "end": "212430"
  },
  {
    "text": "that we had security models so I looked at bcrypt and I look how be correct is",
    "start": "212430",
    "end": "219120"
  },
  {
    "text": "able to store passwords and may be able to manage passwords and so on so I called a friend of mine",
    "start": "219120",
    "end": "224609"
  },
  {
    "text": "Cole his name is Erik Chang he is a friend of mine from Korres he now works",
    "start": "224609",
    "end": "229709"
  },
  {
    "text": "at Google he used to be a cig off lead so I said I have this idea for authentication and authorization what do",
    "start": "229709",
    "end": "235859"
  },
  {
    "text": "you think it uses bcrypt it uses passwords and all this is pretty nice you log in saves your passwords or",
    "start": "235859",
    "end": "241799"
  },
  {
    "text": "something that you know where he said no no no don't do that",
    "start": "241799",
    "end": "249840"
  },
  {
    "start": "245000",
    "end": "313000"
  },
  {
    "text": "you do not want to do password management you don't ever want to think about doing password management strike",
    "start": "249840",
    "end": "257130"
  },
  {
    "text": "that from your mind okay the only thing you should be doing is verifying a token",
    "start": "257130",
    "end": "262890"
  },
  {
    "text": "that's the only thing and this is the way he said you should do it like kubernetes that's what they",
    "start": "262890",
    "end": "269280"
  },
  {
    "text": "do right something else creates tokens you get your token to kubernetes for an",
    "start": "269280",
    "end": "275550"
  },
  {
    "text": "API call in combination can then verify you should do exactly the same thing okay and actually I want to thank Eric",
    "start": "275550",
    "end": "282930"
  },
  {
    "text": "because we have brought this model over to some of our customers and they have a",
    "start": "282930",
    "end": "288600"
  },
  {
    "text": "huge audit sheet of things to how you do password management things like that and the really nice thing about it is that",
    "start": "288600",
    "end": "294750"
  },
  {
    "text": "most of them we say does not apply does not apply does not apply why because I'm do password management",
    "start": "294750",
    "end": "300840"
  },
  {
    "text": "all we do is verification of tokens how long do you hold the password does not apply where the astoria password does",
    "start": "300840",
    "end": "306090"
  },
  {
    "text": "not apply right as long as you get a token we verified then we throw it away all right okay so how do we actually get",
    "start": "306090",
    "end": "316560"
  },
  {
    "text": "to do this verification of tokens in G RPC we chose two models I mean that's",
    "start": "316560",
    "end": "322980"
  },
  {
    "text": "really one model using the g-o-p kouddous JSON web token I hope most",
    "start": "322980",
    "end": "328800"
  },
  {
    "text": "everybody knows what JSON web token is very good okay so then what we need to",
    "start": "328800",
    "end": "334920"
  },
  {
    "text": "do is also make sure that applications",
    "start": "334920",
    "end": "340110"
  },
  {
    "text": "can generate tokens for G RPC we call that a trusted issuer so let's talk",
    "start": "340110",
    "end": "345630"
  },
  {
    "start": "344000",
    "end": "394000"
  },
  {
    "text": "about gwt's first for those who are new to this it's just a bunch it's a large",
    "start": "345630",
    "end": "351900"
  },
  {
    "text": "string okay a token it's just a large string divided into three parts and that's what adjacent we're talking is",
    "start": "351900",
    "end": "357000"
  },
  {
    "text": "the three parts are the header describes the token itself the claims the most important part describes the user groups",
    "start": "357000",
    "end": "364650"
  },
  {
    "text": "roles whatever you want it's just a whole bunch of JSON blob you can put whatever you want in there and then",
    "start": "364650",
    "end": "369680"
  },
  {
    "text": "there is a signature the signature is the contract between the token issuer",
    "start": "369680",
    "end": "376200"
  },
  {
    "text": "and the word friar the contract where you need a certain method to go ahead",
    "start": "376200",
    "end": "381720"
  },
  {
    "text": "and verify that the token is correct and it hasn't been tampered with so once your token gets out put into some large",
    "start": "381720",
    "end": "388440"
  },
  {
    "text": "blob of text it is immutable okay all",
    "start": "388440",
    "end": "393990"
  },
  {
    "text": "right so we understand now where the token is it's just three parts of string somebody",
    "start": "393990",
    "end": "400170"
  },
  {
    "start": "394000",
    "end": "474000"
  },
  {
    "text": "it has the claims it has a signature well how do you generate the token",
    "start": "400170",
    "end": "406440"
  },
  {
    "text": "there's actually a couple of models that we actually use for our implementation one is that you can use the normal JW te",
    "start": "406440",
    "end": "413740"
  },
  {
    "text": "libraries for many languages to go ahead and generate a token as long as you share the they're both the verifier and",
    "start": "413740",
    "end": "421090"
  },
  {
    "text": "the generator of tokens have to have a method to to determine either one is to",
    "start": "421090",
    "end": "426370"
  },
  {
    "text": "do a shared secret right we have one secret to generate the signature and then you have a secret in the verifier",
    "start": "426370",
    "end": "431980"
  },
  {
    "text": "that make sure that that signature is correct you can also do a public key private key model where you had the",
    "start": "431980",
    "end": "437770"
  },
  {
    "text": "private key being able to generate tokens and you have the public key to be able to verify and then there's another",
    "start": "437770",
    "end": "445060"
  },
  {
    "text": "that's again that's up to you the in in our model it will talk to our customers",
    "start": "445060",
    "end": "450070"
  },
  {
    "text": "we let them have the freedom to be able to generate all these tokens in any way they want python script or whatever but",
    "start": "450070",
    "end": "458140"
  },
  {
    "text": "then there's another model called Open ID Connect Oh IDC oo i DC is a standard",
    "start": "458140",
    "end": "464190"
  },
  {
    "text": "that allows your system to connect to two out of which help can manage",
    "start": "464190",
    "end": "471790"
  },
  {
    "text": "thousands of users so I'll go into all I see in a second but let's talk about how",
    "start": "471790",
    "end": "477700"
  },
  {
    "start": "474000",
    "end": "547000"
  },
  {
    "text": "generating the token works so here's just a little bit of pseudocode and you",
    "start": "477700",
    "end": "483220"
  },
  {
    "text": "can see from here that in the claims again the JSON map you can store things",
    "start": "483220",
    "end": "488620"
  },
  {
    "text": "like the sub the sub according to the standard is a unique identifier for your user",
    "start": "488620",
    "end": "495000"
  },
  {
    "text": "we got the ISS which means the issuer so when the token gets to the verifier the",
    "start": "495000",
    "end": "500410"
  },
  {
    "text": "other side the tote the verifier checks the issuer and says do I trust this",
    "start": "500410",
    "end": "506530"
  },
  {
    "text": "issuer or not so you can just have anyone generate a token you can only have the token come from those who you",
    "start": "506530",
    "end": "512830"
  },
  {
    "text": "trust okay then there's more information about the color like the email name and tongue",
    "start": "512830",
    "end": "517990"
  },
  {
    "text": "sometime and then there's expiration date and the issue that time for this",
    "start": "517990",
    "end": "523209"
  },
  {
    "text": "which is a little Sukkot and now as I'm gonna start showing a lot of go line code",
    "start": "523209",
    "end": "528430"
  },
  {
    "text": "just get ready and I don't want you to start like reading through it right now",
    "start": "528430",
    "end": "533650"
  },
  {
    "text": "every one of these has a link at the bottom and you can click on that link and actually shows you our open source",
    "start": "533650",
    "end": "541960"
  },
  {
    "text": "code that we actually use in Port works to do this so you can see real examples",
    "start": "541960",
    "end": "547260"
  },
  {
    "start": "547000",
    "end": "602000"
  },
  {
    "text": "so open ID connect again it's a service you can use this service to be able to",
    "start": "547260",
    "end": "553090"
  },
  {
    "text": "connect between your G RPC service and something like Active Directory or LDAP",
    "start": "553090",
    "end": "558330"
  },
  {
    "text": "for example one of the ones that we tried and works really well is Key Club by Red Hat and Dex by core OS for",
    "start": "558330",
    "end": "567520"
  },
  {
    "text": "example in key cloak you can map different sections of an LDAP like roles",
    "start": "567520",
    "end": "573820"
  },
  {
    "text": "and groups to what port which is looking for ok you can also have users kylo can have",
    "start": "573820",
    "end": "581590"
  },
  {
    "text": "its own therapies for users if you have just maybe a few hundred but if you have thousands of users and you want to track",
    "start": "581590",
    "end": "587320"
  },
  {
    "text": "them you can you can connect it to an LDAP system then there's also service on",
    "start": "587320",
    "end": "593080"
  },
  {
    "text": "the cloud like Octonauts zero and then another o or there are IDC compliant systems in Google and AWS and Azure and",
    "start": "593080",
    "end": "600010"
  },
  {
    "text": "others like that so alright so we understand kind of the big picture of",
    "start": "600010",
    "end": "606570"
  },
  {
    "text": "Santa keishon how does it actually work implemented in going so if you've done",
    "start": "606570",
    "end": "614230"
  },
  {
    "text": "JWT tokens in rest is a lot like that for the client where the token goes into",
    "start": "614230",
    "end": "623560"
  },
  {
    "text": "the metadata of the call in a rest call it goes into the headers which again is",
    "start": "623560",
    "end": "629230"
  },
  {
    "text": "the metadata of the call and in goal-line there is a sorry in G RPC goes into the section called metadata that",
    "start": "629230",
    "end": "635350"
  },
  {
    "text": "you can access through goal aligning IEP is or here's a example how to do it in",
    "start": "635350",
    "end": "640510"
  },
  {
    "text": "Python and in there you store the authorization bearer token okay so it's",
    "start": "640510",
    "end": "647290"
  },
  {
    "text": "pretty simple it's not much to do in the in a client if you don't want to do this for example for each one of your calls",
    "start": "647290",
    "end": "653140"
  },
  {
    "text": "you can start the token in the context every single time and go long you can also do something it's called",
    "start": "653140",
    "end": "658150"
  },
  {
    "text": "interceptors and interceptors allow you to catch your calls going out and then",
    "start": "658150",
    "end": "666510"
  },
  {
    "text": "insert the context every time now let's talk about the service side that was a",
    "start": "666510",
    "end": "671550"
  },
  {
    "text": "client it's pretty simple it's done the server side is a little more complicated and this is really one of the reasons",
    "start": "671550",
    "end": "679620"
  },
  {
    "text": "why I wanted to do this talk there's very little information about this out on the internet and I wanted to kind of just put it all together like a little",
    "start": "679620",
    "end": "686550"
  },
  {
    "text": "compiled program and then send it out to you so the way it works is that we're",
    "start": "686550",
    "end": "693300"
  },
  {
    "text": "going to use technology called interceptors which you've used OpenStack Swift or Python whiskey server you have",
    "start": "693300",
    "end": "700350"
  },
  {
    "text": "these filters that doing a pipeline and they pass environment to each other if",
    "start": "700350",
    "end": "706560"
  },
  {
    "text": "you write if you written Windows device drivers they have the stack you can send from one to the next and the next and so",
    "start": "706560",
    "end": "712680"
  },
  {
    "text": "on and stack so in the same ways how Interceptor works so here's a very",
    "start": "712680",
    "end": "719130"
  },
  {
    "start": "717000",
    "end": "772000"
  },
  {
    "text": "simple interceptor for the server side if every interceptor has that same",
    "start": "719130",
    "end": "725870"
  },
  {
    "text": "function are a set of arguments in this",
    "start": "725870",
    "end": "731370"
  },
  {
    "text": "example we take the context and we insert into it some value some key value",
    "start": "731370",
    "end": "738270"
  },
  {
    "text": "and then what we do here also is in this",
    "start": "738270",
    "end": "743280"
  },
  {
    "text": "example this is specifically for going we are also past the actual G RPC",
    "start": "743280",
    "end": "749010"
  },
  {
    "text": "function as being accessed in the function in folder full method and when this value here we get to print it out",
    "start": "749010",
    "end": "755550"
  },
  {
    "text": "and then we go ahead and call the next handler with the new context that we",
    "start": "755550",
    "end": "761340"
  },
  {
    "text": "have adjusted so the next handler now has that some key some data information",
    "start": "761340",
    "end": "766950"
  },
  {
    "text": "in the context so it's just a generic interceptor now let's now start focusing",
    "start": "766950",
    "end": "773580"
  },
  {
    "start": "772000",
    "end": "820000"
  },
  {
    "text": "on our authentication interceptor so G RPC has these golden libraries our",
    "start": "773580",
    "end": "780360"
  },
  {
    "text": "helper libraries to be able for you to do authentication of JWT tokens the way",
    "start": "780360",
    "end": "787500"
  },
  {
    "text": "you set it up is that when you set up an AG RPC server you have to do the",
    "start": "787500",
    "end": "793110"
  },
  {
    "text": "following to be able to stack all your inter scepters in order so in that order is",
    "start": "793110",
    "end": "798660"
  },
  {
    "text": "how the server is gonna call your interceptors so you want your authentication most likely to be first",
    "start": "798660",
    "end": "804119"
  },
  {
    "text": "so that way you can authenticate the call and then set up the context for the next calls in this example here we just",
    "start": "804119",
    "end": "811259"
  },
  {
    "text": "have the simple interceptor just as like a logger and then we have this wrapper",
    "start": "811259",
    "end": "816679"
  },
  {
    "text": "around the our off call which is here this is a helper function that comes",
    "start": "816679",
    "end": "823980"
  },
  {
    "text": "with going in the gr PC a library and this helper function gets automatically",
    "start": "823980",
    "end": "830100"
  },
  {
    "text": "just the context and from it we get call another helper function to extract out the token out of the call out of the",
    "start": "830100",
    "end": "836790"
  },
  {
    "text": "metadata once we extract the token out of the metadata we just call some verify",
    "start": "836790",
    "end": "841889"
  },
  {
    "text": "token function whatever you have for your system there is a lot of goaling",
    "start": "841889",
    "end": "849209"
  },
  {
    "text": "libraries to be able to do this we use the adjacent with T going libraries to do this so this is how you implement it",
    "start": "849209",
    "end": "857040"
  },
  {
    "text": "in your way alright so here's the library that we use is JWT - go and we",
    "start": "857040",
    "end": "865170"
  },
  {
    "start": "859000",
    "end": "892000"
  },
  {
    "text": "again I have lots of examples once you use you see these slides these lights are on my golang on my github repo",
    "start": "865170",
    "end": "873929"
  },
  {
    "text": "actually and then we also have a very a way of verification with already seen",
    "start": "873929",
    "end": "880709"
  },
  {
    "text": "how is it that we set it up you have to have our DC client to be able to know where to connect to and things like that",
    "start": "880709",
    "end": "886649"
  },
  {
    "text": "the ODC model is sometimes a little bit simpler it depends on on the deployment",
    "start": "886649",
    "end": "892429"
  },
  {
    "start": "892000",
    "end": "943000"
  },
  {
    "text": "alright so we talked about authentication now let's talk about",
    "start": "892429",
    "end": "897869"
  },
  {
    "text": "authorization this part was a little bit more complicated because in",
    "start": "897869",
    "end": "904910"
  },
  {
    "text": "authentication we had a lot of helper functions being able to from the growing",
    "start": "904910",
    "end": "910379"
  },
  {
    "text": "library function for G RPC to help us with this but for our back we had to kind of come up with something and again",
    "start": "910379",
    "end": "916589"
  },
  {
    "text": "this is how we implemented the the methods it's an example you may look at",
    "start": "916589",
    "end": "922739"
  },
  {
    "text": "this and adjust it to your models but I just wanted to give you a start on the way we did it",
    "start": "922739",
    "end": "928710"
  },
  {
    "text": "so we have an art back model for our our",
    "start": "928710",
    "end": "934320"
  },
  {
    "text": "open stores SDK which is a gr PC SDK and everybody here hopefully understands the",
    "start": "934320",
    "end": "940740"
  },
  {
    "text": "kubernetes model right the kubernetes are back model is based on verbs like get list patch right and so on but we",
    "start": "940740",
    "end": "950010"
  },
  {
    "start": "943000",
    "end": "971000"
  },
  {
    "text": "needed to do something like this for gr PC but gr PC doesn't have the same verbs right those are those are HTTP verbs so",
    "start": "950010",
    "end": "959279"
  },
  {
    "text": "here's an example we have a G RPC service called route guide and then it",
    "start": "959279",
    "end": "964649"
  },
  {
    "text": "has two RPC functions get feature and list features okay so what we did was we",
    "start": "964649",
    "end": "974029"
  },
  {
    "start": "971000",
    "end": "1032000"
  },
  {
    "text": "wanted to look kind of like kubernetes and we wanted to make it simple for our",
    "start": "974029",
    "end": "980670"
  },
  {
    "text": "users to be able to do this so what we did was we we looked at this strings that the functions are called",
    "start": "980670",
    "end": "987360"
  },
  {
    "text": "and we say okay this is what I would like it to be like right I want a role a key the name of the role there's these",
    "start": "987360",
    "end": "993810"
  },
  {
    "text": "rules and then inside it has two sections or a an array of these two",
    "start": "993810",
    "end": "1001490"
  },
  {
    "text": "sections and they are services and api's right so in this example in this one",
    "start": "1001490",
    "end": "1009680"
  },
  {
    "text": "role that I have here there's a service that is allowed for this one color called route guide an in route guide the",
    "start": "1009680",
    "end": "1017140"
  },
  {
    "text": "only API that's allowed is get feature so according to this rule list features",
    "start": "1017140",
    "end": "1024678"
  },
  {
    "text": "is not allowed so if somebody was in this role and tried to call this features it will be the knight so let's",
    "start": "1024679",
    "end": "1032360"
  },
  {
    "start": "1032000",
    "end": "1216000"
  },
  {
    "text": "figure out how we actually do that in golang so the way it works it's all",
    "start": "1032360",
    "end": "1039020"
  },
  {
    "text": "based on the Interceptor passing in the info dot full method that has the entire",
    "start": "1039020",
    "end": "1046640"
  },
  {
    "text": "path for your G RPC call all you have to do is kind of clean off all the the",
    "start": "1046640",
    "end": "1053720"
  },
  {
    "text": "slashes and the things inside like open source API that comes from the generation of the of the go long files",
    "start": "1053720",
    "end": "1061520"
  },
  {
    "text": "from the protocol buffers justtake remove that and you're left with the service and the",
    "start": "1061520",
    "end": "1066830"
  },
  {
    "text": "api and now with that information you can go ahead and verify that the color",
    "start": "1066830",
    "end": "1072800"
  },
  {
    "text": "is allowed to do make that call or not all right here's for example a more",
    "start": "1072800",
    "end": "1078380"
  },
  {
    "text": "specific example how to do this and go line and make a roll but again it's the same style as you can see here we have a",
    "start": "1078380",
    "end": "1085250"
  },
  {
    "text": "different set of function we have a roll and we have two API calls this one's specific what the storage SDK where we",
    "start": "1085250",
    "end": "1092570"
  },
  {
    "text": "have two services so we're saying and you can call the volume service and the cluster service and the api's star",
    "start": "1092570",
    "end": "1100850"
  },
  {
    "text": "meaning what all the functions in those two services okay so when somebody use",
    "start": "1100850",
    "end": "1106580"
  },
  {
    "text": "it uses this role they're only allowed to make those calls if they try to make another call like a node or something",
    "start": "1106580",
    "end": "1113360"
  },
  {
    "text": "like that they will not be allowed to all right so how do we do this in go",
    "start": "1113360",
    "end": "1120290"
  },
  {
    "text": "long again how do we actually implement it the very first thing is that we need to find out information about the color",
    "start": "1120290",
    "end": "1129320"
  },
  {
    "text": "and we do that by going to the context and extracting out the information that was placed there by the authentic",
    "start": "1129320",
    "end": "1137000"
  },
  {
    "text": "authentic ater interceptor okay so the Authenticator interceptor was called",
    "start": "1137000",
    "end": "1142910"
  },
  {
    "text": "first it makes sure that the token was okay it put extracted information of the",
    "start": "1142910",
    "end": "1148190"
  },
  {
    "text": "token saved at all in the context now the next call comes in extracts information out of the context again I",
    "start": "1148190",
    "end": "1154670"
  },
  {
    "text": "see oh this is Louise right he's trying to make this call and then it goes ahead and calls the verify for Louise and it",
    "start": "1154670",
    "end": "1163520"
  },
  {
    "text": "says to make sure that this call is a loud or not okay and that's how we do",
    "start": "1163520",
    "end": "1171520"
  },
  {
    "text": "our back support in Ag RPC now here's another really cool thing I",
    "start": "1171520",
    "end": "1177320"
  },
  {
    "text": "was doing debugging for for this called isn't interceptor specifically and I",
    "start": "1177320",
    "end": "1182390"
  },
  {
    "text": "created something I didn't even mean to create right I wasn't even planning on doing this I created an auto log I",
    "start": "1182390",
    "end": "1188050"
  },
  {
    "text": "didn't even plan on doing that it just happened right I was tracking every",
    "start": "1188050",
    "end": "1193310"
  },
  {
    "text": "single call that came through every user and I was logging it right I was",
    "start": "1193310",
    "end": "1198529"
  },
  {
    "text": "logging you feel successful as long if it's not successful now we have methods to track each one of these right we can",
    "start": "1198529",
    "end": "1205789"
  },
  {
    "text": "actually take all these logs everywhere and put them in a in a panel we can actually do the audit log to determine",
    "start": "1205789",
    "end": "1210889"
  },
  {
    "text": "if we have somebody maliciously coming in looking attacking right okay so",
    "start": "1210889",
    "end": "1218929"
  },
  {
    "start": "1216000",
    "end": "1249000"
  },
  {
    "text": "that's authentication that's authorization but some of our customers",
    "start": "1218929",
    "end": "1223940"
  },
  {
    "text": "also said will we liked your PC that's great but we still want to use rest said okay",
    "start": "1223940",
    "end": "1231399"
  },
  {
    "text": "so what do we do we use there's a service out there that is called a GRS",
    "start": "1231399",
    "end": "1237350"
  },
  {
    "text": "PC gateway and this is really nice because and I highly encourage you to",
    "start": "1237350",
    "end": "1242600"
  },
  {
    "text": "stop running rest services and start writing G RPC versus services with the G RPC gateway also what the way works is",
    "start": "1242600",
    "end": "1250100"
  },
  {
    "start": "1249000",
    "end": "1299000"
  },
  {
    "text": "on your G RPC service you define the path okay and then what happens is that",
    "start": "1250100",
    "end": "1257380"
  },
  {
    "text": "when you deploy your application your service you start up a rest service",
    "start": "1257380",
    "end": "1264200"
  },
  {
    "text": "that's generated for you by the G RPC gateway you start this gateway it takes in the rest call automatically changes",
    "start": "1264200",
    "end": "1270830"
  },
  {
    "text": "it to a G RPC call and it calls your function you didn't have to do you need to write a single line of code to be",
    "start": "1270830",
    "end": "1277010"
  },
  {
    "text": "able to support rest okay the really nice thing about it too is that eight supports authentication it takes the",
    "start": "1277010",
    "end": "1284029"
  },
  {
    "text": "authentication headers from rest where they're supposed to be and then grabs them and puts them into the metadata for",
    "start": "1284029",
    "end": "1290029"
  },
  {
    "text": "G RPC and it makes the call ahead so now you have support for authentication authorization in rest and G RPC and",
    "start": "1290029",
    "end": "1296299"
  },
  {
    "text": "whatever model your customer wants to use alright so I have 15 minutes that's",
    "start": "1296299",
    "end": "1305840"
  },
  {
    "start": "1299000",
    "end": "1344000"
  },
  {
    "text": "pretty good I have a live demo",
    "start": "1305840",
    "end": "1310090"
  },
  {
    "text": "there we go all right so all right so on",
    "start": "1319570",
    "end": "1326029"
  },
  {
    "text": "this system I have let's make sure I have the Internet anybody can see that",
    "start": "1326029",
    "end": "1331490"
  },
  {
    "text": "okay I could make it bigger so I have",
    "start": "1331490",
    "end": "1337640"
  },
  {
    "text": "four nodes and are running one fifteen five okay actually I didn't show you",
    "start": "1337640",
    "end": "1343909"
  },
  {
    "text": "this slide here let me talk about this life first and I'll show you the demo so what we wanted to do in this demo is",
    "start": "1343909",
    "end": "1351070"
  },
  {
    "start": "1344000",
    "end": "1736000"
  },
  {
    "text": "some of our customers - they wanted a simple way they don't want to use or IDC they just wanted to secure the",
    "start": "1351070",
    "end": "1357649"
  },
  {
    "text": "communication between kubernetes and our storage system they wanted to make sure",
    "start": "1357649",
    "end": "1362779"
  },
  {
    "text": "that that kubernetes doesn't have the entire our back they want a specific article kubernetes and they wanted",
    "start": "1362779",
    "end": "1369440"
  },
  {
    "text": "administration tokens to be run only on the command line so that means is that",
    "start": "1369440",
    "end": "1375639"
  },
  {
    "text": "the customer is leveraging the kubernetes authentication model for",
    "start": "1375639",
    "end": "1381019"
  },
  {
    "text": "other users wants to get authenticated to actually create a volume they go",
    "start": "1381019",
    "end": "1386659"
  },
  {
    "text": "ahead and use a storage class and then the kubernetes can send the command to",
    "start": "1386659",
    "end": "1391940"
  },
  {
    "text": "to our storage system and that gets authenticated so we only trust kubernetes in this model okay what we do",
    "start": "1391940",
    "end": "1400250"
  },
  {
    "text": "- is our secrets that we use to generate tokens are stored in kubernetes itself",
    "start": "1400250",
    "end": "1405470"
  },
  {
    "text": "and the tokens that are generated are also stored in kubernetes itself ok and",
    "start": "1405470",
    "end": "1412399"
  },
  {
    "text": "i'll show you what that means so the very first thing is i'll show you is the",
    "start": "1412399",
    "end": "1419149"
  },
  {
    "text": "secrets so KN is my alias for cube system Q Caudill - and the cube system",
    "start": "1419149",
    "end": "1426500"
  },
  {
    "text": "that has too much to type I just add care so if you want to check you say",
    "start": "1426500",
    "end": "1431960"
  },
  {
    "text": "capacities that's all the queue proxy and things like that so if I type get secrets and I just just",
    "start": "1431960",
    "end": "1442519"
  },
  {
    "text": "go up for px you see here that I have a section called px keys px Keys is the",
    "start": "1442519",
    "end": "1449690"
  },
  {
    "text": "shared key that are used for the token Authority and a token verified to determine if the",
    "start": "1449690",
    "end": "1456980"
  },
  {
    "text": "tokens are coming it's okay so what we do with that is I can go to",
    "start": "1456980",
    "end": "1463430"
  },
  {
    "text": "refresh tokens I can show your hustle that works let me show you the the",
    "start": "1463430",
    "end": "1470270"
  },
  {
    "text": "information that this is specific to my little tiny program that creates user so",
    "start": "1470270",
    "end": "1477020"
  },
  {
    "text": "you can create your own way your own token generator but if I say here is a",
    "start": "1477020",
    "end": "1483500"
  },
  {
    "text": "cat admin here's the administrator llamo",
    "start": "1483500",
    "end": "1489350"
  },
  {
    "text": "I said the name this the subject the email the roles and the group group star",
    "start": "1489350",
    "end": "1496190"
  },
  {
    "text": "specific to port works meaning you are can use any any volume any resource",
    "start": "1496190",
    "end": "1503000"
  },
  {
    "text": "doesn't matter okay so this is the admin the storage admin if I do this for",
    "start": "1503000",
    "end": "1509750"
  },
  {
    "text": "kubernetes then we look at the information that we have here for kubernetes and so on so I have a little",
    "start": "1509750",
    "end": "1518620"
  },
  {
    "text": "refresh Keys okay and we're gonna just",
    "start": "1518620",
    "end": "1524660"
  },
  {
    "text": "run this one line here for the often just to show you run this first so we're",
    "start": "1524660",
    "end": "1532220"
  },
  {
    "text": "gonna get the secret that's on the on kubernetes itself I gonna say echo",
    "start": "1532220",
    "end": "1537320"
  },
  {
    "text": "secret it's not recorded right that's good so that's the secret that's being",
    "start": "1537320",
    "end": "1543230"
  },
  {
    "text": "used to generate tokens and we're gonna generate it a token just for fun gonna",
    "start": "1543230",
    "end": "1549890"
  },
  {
    "text": "give it a seven day token and that's a token right there that's how it looks",
    "start": "1549890",
    "end": "1556280"
  },
  {
    "text": "like okay if you wanna see what it's inside a token we can go to here let me",
    "start": "1556280",
    "end": "1565070"
  },
  {
    "text": "just get out of this and go to JWT the IO and paste it here and then you can",
    "start": "1565070",
    "end": "1574520"
  },
  {
    "text": "verify that your token information is correct see here's the admin is on role system",
    "start": "1574520",
    "end": "1579620"
  },
  {
    "text": "admin and so on this is a good way to verify what's inside your token all right let's go back here alright so",
    "start": "1579620",
    "end": "1589009"
  },
  {
    "text": "the next thing that this little program does is that it inserted the tokens in",
    "start": "1589009",
    "end": "1595549"
  },
  {
    "text": "different namespaces now when I show you",
    "start": "1595549",
    "end": "1600970"
  },
  {
    "text": "the cpsc I have a storage class and is",
    "start": "1600970",
    "end": "1608179"
  },
  {
    "text": "this how it works the stores class we first this stores class specifically we",
    "start": "1608179",
    "end": "1613519"
  },
  {
    "text": "first with specific token and the token is the kubernetes user token right so that way anyone that uses the stores",
    "start": "1613519",
    "end": "1620029"
  },
  {
    "text": "class uses that token so every so so",
    "start": "1620029",
    "end": "1625070"
  },
  {
    "text": "that's fine now what if we wanted to have two tenants separately now we're",
    "start": "1625070",
    "end": "1633049"
  },
  {
    "text": "not gonna discuss how do you do that networking and things like that we're just talking about the storage system",
    "start": "1633049",
    "end": "1638960"
  },
  {
    "text": "and how you do different volumes for each so what I did here is I have two",
    "start": "1638960",
    "end": "1644720"
  },
  {
    "text": "namespaces one called tenant one and one called ten and two and then I go ahead",
    "start": "1644720",
    "end": "1650720"
  },
  {
    "text": "and create a secret in each and each one of those has a token for each one of",
    "start": "1650720",
    "end": "1656330"
  },
  {
    "text": "those tenants okay so when I look now at",
    "start": "1656330",
    "end": "1661690"
  },
  {
    "text": "the source class for the tenants you can see and again this is all based on CSI",
    "start": "1661690",
    "end": "1667970"
  },
  {
    "text": "you can see now that the namespace is the namespace of the PVC that's very",
    "start": "1667970",
    "end": "1674899"
  },
  {
    "text": "important so what happens is that if I'm calling from tenant one then I request a",
    "start": "1674899",
    "end": "1681529"
  },
  {
    "text": "PVC with this storage class it's going to go to my namespace and look for the",
    "start": "1681529",
    "end": "1686989"
  },
  {
    "text": "token that defines me as tenant one okay if I do the same thing for ten and two",
    "start": "1686989",
    "end": "1692149"
  },
  {
    "text": "it's gonna go through their namespace and find the secret for them and use that to make your calls into the open",
    "start": "1692149",
    "end": "1699139"
  },
  {
    "text": "source sdk so how is why is that important that is very important because",
    "start": "1699139",
    "end": "1705379"
  },
  {
    "text": "what happens is that if at any point in time any other tenants because malicious and tries to get the accident data of",
    "start": "1705379",
    "end": "1712399"
  },
  {
    "text": "another a tenant it will not be possible because the API will protect them all right so you have protection from",
    "start": "1712399",
    "end": "1719230"
  },
  {
    "text": "kubernetes at your level visa namespaces and then you got protection now from the storage system itself okay let's go back",
    "start": "1719230",
    "end": "1729370"
  },
  {
    "text": "to the slides here we go so a couple of",
    "start": "1729370",
    "end": "1738309"
  },
  {
    "start": "1736000",
    "end": "1821000"
  },
  {
    "text": "last things now we have just a few minutes left how is it that we generate",
    "start": "1738309",
    "end": "1744580"
  },
  {
    "text": "documentation there is some really cool programs out there like there are generators just like you have protocol",
    "start": "1744580",
    "end": "1750010"
  },
  {
    "text": "buffer generators for different languages they just output in that language is one for markdown so you can",
    "start": "1750010",
    "end": "1756279"
  },
  {
    "text": "actually go through your entire protocol buffers file and generate all the documentation and lastly is I recommend",
    "start": "1756279",
    "end": "1765610"
  },
  {
    "text": "you guys do this if you have protocol buffers files is that you version them we have a link here how is it that we go",
    "start": "1765610",
    "end": "1772899"
  },
  {
    "text": "ahead and do that in our system but that makes it that the file itself is versioned and then you can use that",
    "start": "1772899",
    "end": "1779529"
  },
  {
    "text": "information at an important time for example for the client to request the version information for the from the",
    "start": "1779529",
    "end": "1785080"
  },
  {
    "text": "server that way you can check for any situations what they're not matching",
    "start": "1785080",
    "end": "1791399"
  },
  {
    "text": "alright that's all I have again the slides are right there on my",
    "start": "1791399",
    "end": "1796419"
  },
  {
    "text": "github and I have just about five",
    "start": "1796419",
    "end": "1801639"
  },
  {
    "text": "minutes for questions if not we can I'll be out in the back if you wanna meet with me and if you have any more",
    "start": "1801639",
    "end": "1808779"
  },
  {
    "text": "questions then I got some socks to give out all right everybody's ready for",
    "start": "1808779",
    "end": "1813940"
  },
  {
    "text": "socks thank you",
    "start": "1813940",
    "end": "1818220"
  },
  {
    "text": "all right",
    "start": "1819790",
    "end": "1822970"
  }
]