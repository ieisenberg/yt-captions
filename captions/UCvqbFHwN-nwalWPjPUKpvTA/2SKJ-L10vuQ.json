[
  {
    "start": "0",
    "end": "204000"
  },
  {
    "text": "perfect so let's get started uh before we jump into the the meat and potatoes of this whole talk",
    "start": "80",
    "end": "5440"
  },
  {
    "text": "uh we wanted to walk through just a little bit of a story um a story about configuration and something that you you might have",
    "start": "5440",
    "end": "11679"
  },
  {
    "text": "experienced i would assume that you have um but you might you might have been uh born in the new age and not have to",
    "start": "11679",
    "end": "17680"
  },
  {
    "text": "experience this so we're going to talk through it anyways so meet bob bob's an sre at acme corp",
    "start": "17680",
    "end": "25439"
  },
  {
    "text": "and he's one of those sres that manages a handful of servers too many servers that uh it's somewhat",
    "start": "25439",
    "end": "31679"
  },
  {
    "text": "difficult to manage but he could still do it by hand and bob's on call because he's he's one of a",
    "start": "31679",
    "end": "37840"
  },
  {
    "text": "few people on his team and so he's on call one night and he gets paged and this is something",
    "start": "37840",
    "end": "43600"
  },
  {
    "text": "i assume we've all experienced and so he starts to check out what's going on and he notices that",
    "start": "43600",
    "end": "49840"
  },
  {
    "text": "a server restarted and when it restarted it started operating incorrectly and so he's not sure what's going on but",
    "start": "49840",
    "end": "56000"
  },
  {
    "text": "he can he can see that there's alerts happening and so he starts to look into it so",
    "start": "56000",
    "end": "61120"
  },
  {
    "text": "first line of action as of of course he goes and sshs into the server and notices it's on fire",
    "start": "61120",
    "end": "67520"
  },
  {
    "text": "and uh starts debugging a little bit and notices that it's the nginx configuration file so",
    "start": "67520",
    "end": "73360"
  },
  {
    "text": "somehow that this this configuration file was set up wrong so he opens up a vim",
    "start": "73360",
    "end": "78640"
  },
  {
    "text": "session now unfortunately for all the emacs uh users in the group uh vim bob is a hardcore vim user",
    "start": "78640",
    "end": "86799"
  },
  {
    "text": "and he's gonna he's gonna get on and get in there start changing everything that he needs to change and once he figures everything out he",
    "start": "86799",
    "end": "93360"
  },
  {
    "text": "saves he quits the file and then he goes and reloads nginx",
    "start": "93360",
    "end": "98479"
  },
  {
    "text": "and as you'd hopefully expect when somebody was to reload nginx the server comes back fine and",
    "start": "98479",
    "end": "104640"
  },
  {
    "text": "everything's good to go so yeah now we're here",
    "start": "104640",
    "end": "110000"
  },
  {
    "text": "24 hours later and at acme i'd like to introduce you to somebody named carol",
    "start": "110000",
    "end": "115439"
  },
  {
    "text": "carol is a dev and she's been working on an awesome feature and this feature",
    "start": "115439",
    "end": "122719"
  },
  {
    "text": "needs to be deployed it requires a feature flag to be configured in a newer version of the config",
    "start": "122719",
    "end": "129200"
  },
  {
    "text": "and so she's got everything code reviewed she's super excited about it it's going to add value",
    "start": "129200",
    "end": "134400"
  },
  {
    "text": "for the experimental user base that's just a subsection of all of the people that acne serves",
    "start": "134400",
    "end": "141120"
  },
  {
    "text": "and she hits the deploy button with the approval to start the imperative",
    "start": "141120",
    "end": "146160"
  },
  {
    "text": "bash script that jenkins uses to orchestrate the rolling update of the nginx config",
    "start": "146160",
    "end": "152239"
  },
  {
    "text": "and things are going good she's watching the metrics things are rolling out all green and",
    "start": "152239",
    "end": "157599"
  },
  {
    "text": "suddenly the patch logic inside of that bash script it's just not having it with the newer version of",
    "start": "157599",
    "end": "163760"
  },
  {
    "text": "the config that was changed by bob in his incident response",
    "start": "163760",
    "end": "169680"
  },
  {
    "text": "and suddenly carol's seeing 502s and 400s in downstream services because the",
    "start": "169680",
    "end": "175519"
  },
  {
    "text": "feature flag is not enabled globally for a long enough period of time for the feature to do its rollout",
    "start": "175519",
    "end": "181440"
  },
  {
    "text": "and now the servers are in this inconsistent state we have configuration drift which is this",
    "start": "181440",
    "end": "187120"
  },
  {
    "text": "problem that was supposed to be solved with systems like puppet and chef now we have mechanisms to deal with this",
    "start": "187120",
    "end": "196080"
  },
  {
    "text": "kind of issue and in kubernetes land uh we just take different approaches we have different",
    "start": "196080",
    "end": "202080"
  },
  {
    "text": "mechanisms chris could you teach us a little bit about why kubernetes api machinery starts to solve",
    "start": "202080",
    "end": "208799"
  },
  {
    "start": "204000",
    "end": "204000"
  },
  {
    "text": "this problem and what the basic mechanisms are yeah absolutely so uh you're probably",
    "start": "208799",
    "end": "216239"
  },
  {
    "text": "all familiar with what we're looking at here the deployment yaml it's just kubernetes",
    "start": "216239",
    "end": "221280"
  },
  {
    "text": "um and realistically because at this day and age we should all just call ourselves yaml engineers this should be",
    "start": "221280",
    "end": "226879"
  },
  {
    "text": "very familiar but if it's not we're going to dive into the the nuts and bolts of how this thing works",
    "start": "226879",
    "end": "231920"
  },
  {
    "text": "so",
    "start": "231920",
    "end": "234159"
  },
  {
    "text": "one of the biggest important things about this is that every kubernetes yaml file is actually versioned and it has a",
    "start": "237439",
    "end": "244799"
  },
  {
    "text": "version schema that defines it and you can see this up at the top of this file denoted by the gvk or the group",
    "start": "244799",
    "end": "252319"
  },
  {
    "text": "version kind and what's really interesting and nice about these things",
    "start": "252319",
    "end": "257519"
  },
  {
    "text": "is they can be kind of annoying because of how terse they are and how much you have to write and the fact that we all have to deal",
    "start": "257519",
    "end": "263680"
  },
  {
    "text": "with this day in and day out but they define exactly what the state of the world is supposed to be",
    "start": "263680",
    "end": "269759"
  },
  {
    "text": "and this is where the the the declarative nature of kubernetes and kubernetes style apis",
    "start": "269759",
    "end": "275040"
  },
  {
    "text": "uh gets really nice and when you go back into it and you really look at that that gvk",
    "start": "275040",
    "end": "280880"
  },
  {
    "text": "you start to realize that this actually provides us some really good benefits so if we if we",
    "start": "280880",
    "end": "285919"
  },
  {
    "text": "debug this a little bit we can see that the group in this instance for deployments is actually apps and the",
    "start": "285919",
    "end": "292320"
  },
  {
    "text": "version is that v1 that v1 tag and then underneath each one of those versions that can be defined",
    "start": "292320",
    "end": "298800"
  },
  {
    "text": "and there can be any number of these that that are needed to to get to a stable state uh we have kinds represented and so",
    "start": "298800",
    "end": "305919"
  },
  {
    "text": "under apps we have things like daemon sets as well and deployments when you start to talk about more",
    "start": "305919",
    "end": "311600"
  },
  {
    "text": "the the lower level core objects you have things like pods that are just under the v1 api",
    "start": "311600",
    "end": "316800"
  },
  {
    "text": "technically the group is called core but you don't have to write it and so it gives us this ability to do",
    "start": "316800",
    "end": "322240"
  },
  {
    "text": "things like provide version uh stability guarantees so if i have a",
    "start": "322240",
    "end": "328479"
  },
  {
    "start": "323000",
    "end": "323000"
  },
  {
    "text": "cluster and i know in my cluster i have version one and v one beta one if i supply v one beta one i know it's",
    "start": "328479",
    "end": "335600"
  },
  {
    "text": "gonna work because that that api is already exposed and i can expect that my schema for that that i'm using that",
    "start": "335600",
    "end": "342720"
  },
  {
    "text": "is a valid schema will satisfy what kubernetes expects to be passed into it",
    "start": "342720",
    "end": "348320"
  },
  {
    "text": "and what's really cool here is we have these structured schemas and we're able to take these and really start to think",
    "start": "348320",
    "end": "354160"
  },
  {
    "text": "about them from a machine level and a human level i as a person can go and write this",
    "start": "354160",
    "end": "359199"
  },
  {
    "text": "manifest file it does might take me a little bit i might have to go and look at stack overflow to grab",
    "start": "359199",
    "end": "364479"
  },
  {
    "text": "the the actual schema because i don't remember them always off the top of my my head but at the same time i can build",
    "start": "364479",
    "end": "371039"
  },
  {
    "text": "tools to actually work with these things so you see this in the common tooling that we have today that everybody works with",
    "start": "371039",
    "end": "377680"
  },
  {
    "text": "whether you're just creating a cluster and you're just using cube cuddle or if you're starting to be a little bit",
    "start": "377680",
    "end": "383039"
  },
  {
    "text": "more advanced and work with templating and packaging of your applications using things like",
    "start": "383039",
    "end": "388080"
  },
  {
    "text": "customize or even further beyond that into the whole plethora of other",
    "start": "388080",
    "end": "393759"
  },
  {
    "text": "third-party tools that work with this things like helm and pollumi and cdk there's so many tools out there",
    "start": "393759",
    "end": "400639"
  },
  {
    "text": "these days that can use this version schema to provide kubernetes a standard api",
    "start": "400639",
    "end": "409840"
  },
  {
    "start": "409000",
    "end": "409000"
  },
  {
    "text": "yeah this is a a really great benefit when we get to actually work with these",
    "start": "410560",
    "end": "415919"
  },
  {
    "text": "apis right so say you have kubernetes or use you're using these kubernetes native tools now you can provide configuration",
    "start": "415919",
    "end": "422240"
  },
  {
    "text": "and these apis they promise you stability they promise you versioning you get the benefits of validation",
    "start": "422240",
    "end": "428639"
  },
  {
    "text": "defaulting and conversions between these apis using common tooling but if you're just running your own",
    "start": "428639",
    "end": "435199"
  },
  {
    "text": "workloads or unfortunately i mean we have to run a lot of other people's workloads they're just these unix style programs",
    "start": "435199",
    "end": "442160"
  },
  {
    "text": "right you invoke them and then you give them arbitrary strings it just so happens that",
    "start": "442160",
    "end": "447440"
  },
  {
    "text": "we've used flags for so long that every major programming language now has parsers for",
    "start": "447440",
    "end": "452560"
  },
  {
    "text": "flags but it doesn't have to be that way like the fact that we have hyphen hyphen versus slash slash",
    "start": "452560",
    "end": "458960"
  },
  {
    "text": "or backslash like you know is common in windows uh command line tools it's arbitrary",
    "start": "458960",
    "end": "464800"
  },
  {
    "text": "there's actually parsers that need to be built into your component into your programs that work with these flags",
    "start": "464800",
    "end": "471759"
  },
  {
    "text": "but those flags are config right that's how you indirect that's how you change the way that your programs behave",
    "start": "471759",
    "end": "477599"
  },
  {
    "text": "and say you're running a lot of programs right because we've got these custom parsers and we",
    "start": "477599",
    "end": "484639"
  },
  {
    "text": "are able to work with convenient small deployments but say you're running kubernetes right this",
    "start": "484639",
    "end": "491599"
  },
  {
    "start": "488000",
    "end": "488000"
  },
  {
    "text": "is an example of a smaller kubernetes cluster there's you know five scds here there's",
    "start": "491599",
    "end": "497840"
  },
  {
    "text": "a couple of kubelets running for various nodes as well as coupe proxy you've got the api server in a redundant",
    "start": "497840",
    "end": "506160"
  },
  {
    "text": "deployment and then you have all of the controller managers and your own web hooks and operators to",
    "start": "506160",
    "end": "512399"
  },
  {
    "text": "support your configuration of the cluster this is a lot of different components even if you're not running kubernetes",
    "start": "512399",
    "end": "518320"
  },
  {
    "text": "say you're in an environment like bob and carol where you were managing your own servers the reality is that in order",
    "start": "518320",
    "end": "524159"
  },
  {
    "text": "to run modern businesses these days we happen to have gotten ourselves into a world of managing",
    "start": "524159",
    "end": "530000"
  },
  {
    "text": "multi-program distributed cloud deployments and when you're doing things with flags",
    "start": "530000",
    "end": "536720"
  },
  {
    "text": "it can be hard to make promises across changes to your program let's consider",
    "start": "536720",
    "end": "542720"
  },
  {
    "text": "the kublet this is one component one instance of it on a single node inside of that kubernetes cluster we",
    "start": "542720",
    "end": "548880"
  },
  {
    "text": "were just talking about there's a wall of configuration here in the form of flags because the kubelet",
    "start": "548880",
    "end": "554320"
  },
  {
    "text": "literally has like 150 options or something like that and each one of those flags uh some of",
    "start": "554320",
    "end": "559440"
  },
  {
    "text": "them are common deliberate some of them you can pass multiple versions of the flags and it builds into a collection",
    "start": "559440",
    "end": "564560"
  },
  {
    "text": "some are accepting integers but the raw type of flags is a string and so there's parsers that",
    "start": "564560",
    "end": "570880"
  },
  {
    "text": "have to be built into the kublet and the kublet is the authority on those things so then if you want custom tooling",
    "start": "570880",
    "end": "578560"
  },
  {
    "start": "577000",
    "end": "577000"
  },
  {
    "text": "right to be built around this harder configuration problem it becomes quite clumsy to work with",
    "start": "578560",
    "end": "584880"
  },
  {
    "text": "what really is a public api that's represented by these flags right tools understand these structures",
    "start": "584880",
    "end": "591120"
  },
  {
    "text": "you've got to what import the parsers from the kubelet into your config management tool and the fact of the matter is that this",
    "start": "591120",
    "end": "597839"
  },
  {
    "text": "is just something that's very brittle and it's not very fun to deal with either this is not easy to look at if",
    "start": "597839",
    "end": "603440"
  },
  {
    "text": "you're an operator trying to understand the difference between some node pools of your kubelet deployments and this is true as well",
    "start": "603440",
    "end": "609519"
  },
  {
    "text": "for any of the workloads that you might be building yourself and so the kubernetes solution that",
    "start": "609519",
    "end": "615200"
  },
  {
    "text": "we've been playing with in more recent versions of the releases is to support what's called component",
    "start": "615200",
    "end": "621760"
  },
  {
    "text": "config here we have an example of the kubelet configuration just the very beginning of that api",
    "start": "621760",
    "end": "627040"
  },
  {
    "text": "that would be equivalent to the flag set that we were looking at before and this allows us to use kubernetes",
    "start": "627040",
    "end": "632720"
  },
  {
    "text": "style apis groups versions and kinds uh in we've talked about how humans like to read and",
    "start": "632720",
    "end": "638880"
  },
  {
    "text": "author these because yaml is a better format than a bunch of strings on one line",
    "start": "638880",
    "end": "644079"
  },
  {
    "text": "and tools like them because it's a good serialization format and it",
    "start": "644079",
    "end": "649839"
  },
  {
    "text": "gives us types and versioning so that we can do formal patching and munging of config as",
    "start": "649839",
    "end": "657040"
  },
  {
    "text": "well as the fact that it's a version schema which just helps everybody right and so that that enables tools to",
    "start": "657040",
    "end": "663839"
  },
  {
    "text": "build ecosystems that rely on that version being supported inside of the kubelet for",
    "start": "663839",
    "end": "669120"
  },
  {
    "text": "a specific period of time and then it also lets people pick their own strategy for upgrading",
    "start": "669120",
    "end": "676399"
  },
  {
    "text": "and so we've got kubelet we've got component config right the",
    "start": "676399",
    "end": "681680"
  },
  {
    "text": "fact that you can load a kubernetes api owned by the component that needs to be configured directly from a file",
    "start": "681680",
    "end": "688959"
  },
  {
    "text": "but then we want to get out of this world of where components are out of sync with their configs",
    "start": "688959",
    "end": "695279"
  },
  {
    "text": "and so you need some sort of controller they're all there isn't always a controller that's taking care of you and so in the kubelet we've been running",
    "start": "695279",
    "end": "701440"
  },
  {
    "text": "an experiment called dynamic configuration what dynamic kubelet config will do is you tell the kubelet",
    "start": "701440",
    "end": "707519"
  },
  {
    "text": "hey in the api server that you can connect to there's a config map that's holding your config it's holding",
    "start": "707519",
    "end": "714160"
  },
  {
    "text": "all of the data in a raw format that you can then load in and validate and default and convert",
    "start": "714160",
    "end": "719920"
  },
  {
    "text": "yourself and this means that we are using the kubelet's controller",
    "start": "719920",
    "end": "725760"
  },
  {
    "text": "to also reload its own config and change the way that it behaves so this is a pattern that's uh quite",
    "start": "725760",
    "end": "731519"
  },
  {
    "text": "useful but um we",
    "start": "731519",
    "end": "737040"
  },
  {
    "start": "734000",
    "end": "734000"
  },
  {
    "text": "need some way to do that conversion right this is this kind of creates a problem",
    "start": "737040",
    "end": "743120"
  },
  {
    "text": "so if the api server isn't what owns the kubelet config api",
    "start": "743120",
    "end": "748560"
  },
  {
    "text": "then we don't get the benefits of all the machinery that's built inside of the api server there's",
    "start": "748560",
    "end": "754240"
  },
  {
    "text": "conversions defaulting and validation that's normally provided as those apis are defined and registered",
    "start": "754240",
    "end": "760560"
  },
  {
    "text": "inside of what would normally be hosted in kubernetes but now we don't get that luxury",
    "start": "760560",
    "end": "767600"
  },
  {
    "text": "so since the kubelet is written in go what we can do is we can import the same",
    "start": "767600",
    "end": "773600"
  },
  {
    "text": "libraries that are necessary to do that api machinery inside of the api server and we can use",
    "start": "773600",
    "end": "778720"
  },
  {
    "text": "some of those same functions inside of our kubelet's config implementation this allows us to support the alpha and",
    "start": "778720",
    "end": "786480"
  },
  {
    "text": "beta versions of the kublet configuration concurrently with a single version of the kubelet we",
    "start": "786480",
    "end": "792160"
  },
  {
    "text": "do this through an internal hub type so at the top of this diagram you see this is apps internal deployment",
    "start": "792160",
    "end": "798560"
  },
  {
    "text": "but imagine having a kublet configuration be the internal type and then you have these bi-directional",
    "start": "798560",
    "end": "804800"
  },
  {
    "text": "function pairs each one of these lines or these spokes in the diagram connecting to the hub allows us to then",
    "start": "804800",
    "end": "810480"
  },
  {
    "text": "get from v1 alpha 1 to the internal type or v1 alpha one through the hub type to the v1 beta1 version so you",
    "start": "810480",
    "end": "817839"
  },
  {
    "text": "can build tooling around these apis by importing the go native library and uh now",
    "start": "817839",
    "end": "824000"
  },
  {
    "text": "it's fantastic that we have these internal types that we can use",
    "start": "824000",
    "end": "831360"
  },
  {
    "text": "go native libraries and api machinery to extend our tools our actual programs",
    "start": "831360",
    "end": "837600"
  },
  {
    "text": "that need to run but in a world of controllers and operators",
    "start": "837600",
    "end": "843040"
  },
  {
    "text": "we actually have the luxury of the api server chris would you tell us a little bit about crds yeah",
    "start": "843040",
    "end": "849760"
  },
  {
    "text": "so as lee's calling them crds they're also represented as custom resource definitions and you've",
    "start": "849760",
    "end": "855680"
  },
  {
    "text": "probably heard this term uh it's gotten a lot of buzz in the last uh year or so it originally spawned from a",
    "start": "855680",
    "end": "862720"
  },
  {
    "text": "feature called tprs or third party resources and it's been around for a bit in",
    "start": "862720",
    "end": "867760"
  },
  {
    "text": "kubernetes but when you start to actually dive into it it's not that complex if you understand",
    "start": "867760",
    "end": "873040"
  },
  {
    "text": "what a kubernetes style api is and so in in this example you can see that we have",
    "start": "873040",
    "end": "878079"
  },
  {
    "text": "an api version and a kind and that api version being api extensions kates dot io v1 so it's a stable api",
    "start": "878079",
    "end": "886000"
  },
  {
    "text": "and it has a kind of custom resource definition and as we kind of like dive into these things you start to realize what it",
    "start": "886000",
    "end": "892560"
  },
  {
    "text": "really is doing so it is allowing us to take a kubernetes api server",
    "start": "892560",
    "end": "897680"
  },
  {
    "text": "just the raw api server no extra servers no extra pods that are actually having to serve",
    "start": "897680",
    "end": "903600"
  },
  {
    "text": "direct request and it allows us to dynamically create apis against that that control plane so in",
    "start": "903600",
    "end": "911440"
  },
  {
    "text": "this example uh we're defining out in the under the spec field where you define a group of github.go.hind.dev",
    "start": "911440",
    "end": "918959"
  },
  {
    "text": "and then under it we actually define uh some kinds so we have the kind of repository we",
    "start": "918959",
    "end": "924320"
  },
  {
    "text": "defined the list kind so that kubernetes knows how to parse these these attributes uh and then we define the singular and",
    "start": "924320",
    "end": "930800"
  },
  {
    "text": "plural version so that it understands the the the way that these things are structured and how how people might",
    "start": "930800",
    "end": "936079"
  },
  {
    "text": "address them and then the last thing in here you're defining a version and so this is taking a yaml manifest and saying i want",
    "start": "936079",
    "end": "943680"
  },
  {
    "text": "to tell kubernetes that i'm going to give it this new object and it again doesn't",
    "start": "943680",
    "end": "949199"
  },
  {
    "text": "need an extra server doesn't need anything special it's just a yaml manifest and then kubernetes starts to do some special",
    "start": "949199",
    "end": "955600"
  },
  {
    "text": "magic with it so chris you're saying that if i just",
    "start": "955600",
    "end": "961279"
  },
  {
    "start": "959000",
    "end": "959000"
  },
  {
    "text": "give kubernetes a crd then i can specify a type of object and it will create an api for me",
    "start": "961279",
    "end": "967600"
  },
  {
    "text": "and give me all the benefits of the kubernetes api server for free absolutely which is what's so cool about",
    "start": "967600",
    "end": "974000"
  },
  {
    "text": "these things and i think that they're probably one of my favorite features realistically in kubernetes i spend way too much time doing these as",
    "start": "974000",
    "end": "980079"
  },
  {
    "text": "you can see this example is about creating github repositories like who thinks of who who wants to go and manage github",
    "start": "980079",
    "end": "987040"
  },
  {
    "text": "using kubernetes it's it's a weird experience and uh and more like an experiment for me to do but as you can see here we're",
    "start": "987040",
    "end": "993440"
  },
  {
    "text": "taking uh cube cuddle and saying get with an uh an output of yaml and we're calling against repositories",
    "start": "993440",
    "end": "1000000"
  },
  {
    "text": "this resource that is not in every kubernetes cluster it's non-standard it kind of doesn't make any",
    "start": "1000000",
    "end": "1005600"
  },
  {
    "text": "sense but it's fun to play with and now i can say uh i'm to create a repository sample",
    "start": "1005600",
    "end": "1011279"
  },
  {
    "text": "and under it when you really look at this object you can see everything that's going on behind the scenes i have my gvk defined",
    "start": "1011279",
    "end": "1017360"
  },
  {
    "text": "that we defined using that kubernetes manifest before the actual crd manifest and so it's github.go.gov v1 alpha1",
    "start": "1017360",
    "end": "1025600"
  },
  {
    "text": "again from that last slide when we should show the version getting exposed and the kind is now repository",
    "start": "1025600",
    "end": "1031280"
  },
  {
    "text": "so i can define these things create as many of these as i want cubecut will apply them and kubernetes",
    "start": "1031280",
    "end": "1036720"
  },
  {
    "text": "is going to go and dynamically create these endpoints exactly what lee was asking about creating these endpoints um that you see",
    "start": "1036720",
    "end": "1043360"
  },
  {
    "text": "under the self link under metadata so it's going to be slash apis the group the version the actual kind of",
    "start": "1043360",
    "end": "1050720"
  },
  {
    "text": "resource and then the repository the actual name of the resource that it's fetching and so it dynamically creates these",
    "start": "1050720",
    "end": "1056240"
  },
  {
    "text": "things and allows kubernetes to store those resources for you",
    "start": "1056240",
    "end": "1061679"
  },
  {
    "text": "so what about the other benefits then i mean it's like we can declare the schema of our data like do i get validation and",
    "start": "1061679",
    "end": "1069679"
  },
  {
    "text": "like what's the value of versions if i can't convert between things yeah the kubernetes community has",
    "start": "1069679",
    "end": "1075679"
  },
  {
    "text": "thought of it all i mean we've got we've got ways to do all of these things so at the actual yamo level you can define",
    "start": "1075679",
    "end": "1082320"
  },
  {
    "start": "1079000",
    "end": "1079000"
  },
  {
    "text": "the schema per version and so as you can see here we're using open api v3 schema",
    "start": "1082320",
    "end": "1088080"
  },
  {
    "text": "and say for instance under this we have a spec attribute and under that there's a it expects there to be a home page and i",
    "start": "1088080",
    "end": "1094720"
  },
  {
    "text": "i don't want to get requests that are that are rejected from from github so i have a pattern match on",
    "start": "1094720",
    "end": "1100559"
  },
  {
    "text": "that uh attribute i'm always going to make sure that it matches a a true url",
    "start": "1100559",
    "end": "1105760"
  },
  {
    "text": "so it's going to have to have www or it's going to have to have http or https and then whatever else follows after that so i",
    "start": "1105760",
    "end": "1112160"
  },
  {
    "text": "know that i can pre-validate in essence before i send off to another endpoint and even beyond that i can do",
    "start": "1112160",
    "end": "1118640"
  },
  {
    "text": "things like matching based on the type so i can expect an integer i can expect a string i can create these complex structures",
    "start": "1118640",
    "end": "1125919"
  },
  {
    "text": "and as lee was asking about the the versioning and all of that stuff these are per version as you can see",
    "start": "1125919",
    "end": "1131039"
  },
  {
    "text": "across the top and also on the next slide where we define out those versions so now i can go through and say",
    "start": "1131039",
    "end": "1137120"
  },
  {
    "text": "i'm going to define a v1 alpha 1 i'm going to serve it and we'll go into what these fields mean in a second",
    "start": "1137120",
    "end": "1142400"
  },
  {
    "text": "and i'm going to store that v1 alpha 1. then i'm going to define a v1 beta 1 i'm going to serve it and then i'm also",
    "start": "1142400",
    "end": "1148559"
  },
  {
    "text": "going to define a v1 and serve that one true as well so now i have this uh this structure where",
    "start": "1148559",
    "end": "1154799"
  },
  {
    "text": "uh in the in the comments there is actually where you define that schema that we just talked about and so now i have uh three different",
    "start": "1154799",
    "end": "1162080"
  },
  {
    "text": "versions all exposed at the kubernetes control plane i didn't create a web server i didn't create anything i didn't set any",
    "start": "1162080",
    "end": "1168400"
  },
  {
    "text": "up any proxy or anything like that it's just purely exposed and anytime i make a request to v1",
    "start": "1168400",
    "end": "1174320"
  },
  {
    "text": "it's going to it's going to try and actually serve that request and fulfill that request now this is",
    "start": "1174320",
    "end": "1181039"
  },
  {
    "text": "where we get into the weird space now when when lee was talking about api machinery conversions and how that works",
    "start": "1181039",
    "end": "1186400"
  },
  {
    "text": "in uh in component config we have something similar in this space but we do it a little bit differently",
    "start": "1186400",
    "end": "1191919"
  },
  {
    "text": "because now we're on the on the back end so we can't uh just do it client-side so we actually",
    "start": "1191919",
    "end": "1197840"
  },
  {
    "start": "1196000",
    "end": "1196000"
  },
  {
    "text": "define a conversion strategy for these and so you in this example we're using the web hook conversion strategy",
    "start": "1197840",
    "end": "1203840"
  },
  {
    "text": "you can actually uh you define the versions that you want to convert between so when this api server gets a v1 or a v1",
    "start": "1203840",
    "end": "1211200"
  },
  {
    "text": "beta 1 it's going to know to take that object and lob it over to this web server that we're exposing you",
    "start": "1211200",
    "end": "1217520"
  },
  {
    "text": "can hit configure the mutual tls between the api server and that and that web hook server",
    "start": "1217520",
    "end": "1222640"
  },
  {
    "text": "you define the path you want to request upon and it sends you a a just a standard object that you can",
    "start": "1222640",
    "end": "1228159"
  },
  {
    "text": "parse validate convert into whatever you need and then pass it back to the api server",
    "start": "1228159",
    "end": "1233760"
  },
  {
    "text": "now how this all works behind the scenes is is continuing to be slightly different but still the same notion at the end of",
    "start": "1233760",
    "end": "1240559"
  },
  {
    "text": "the day if you notice back in the in the versions slide i talked about served and stored",
    "start": "1240559",
    "end": "1247440"
  },
  {
    "text": "in that example i was using i was serving all the api so that anybody could supply a v1 alpha 1 v1 beta 1 or",
    "start": "1247440",
    "end": "1253840"
  },
  {
    "text": "v1 and i need to actually go and convert those to store into that v1 alpha 1 which is what i",
    "start": "1253840",
    "end": "1260000"
  },
  {
    "text": "defined which is what i told kubernetes to make the schema and fcd about so to do that behind the scenes the web",
    "start": "1260000",
    "end": "1267440"
  },
  {
    "start": "1265000",
    "end": "1265000"
  },
  {
    "text": "hook is is in essence taking in uh and converting and treating that v1 alpha one",
    "start": "1267440",
    "end": "1273120"
  },
  {
    "text": "as the hub type that we defined earlier so when you do this you define and this",
    "start": "1273120",
    "end": "1278559"
  },
  {
    "text": "is following the patterns that we've developed within qbuilder these days and so this is a form of a form of those",
    "start": "1278559",
    "end": "1284720"
  },
  {
    "text": "api machinery but instead you define a convert to and a convert from instead of having a handful of",
    "start": "1284720",
    "end": "1290320"
  },
  {
    "text": "auto-generated functions from api machinery so this is saying i want to convert",
    "start": "1290320",
    "end": "1296000"
  },
  {
    "text": "my v1 beta 1 to my v1 alpha 1 and if i wanted to convert back because i expected to get a v1 beta1",
    "start": "1296000",
    "end": "1302240"
  },
  {
    "text": "object back i can convert that back through before passing that back to the user and same goes for the v1 alpha one",
    "start": "1302240",
    "end": "1309919"
  },
  {
    "text": "and what's kind of interesting here is like as you're starting to realize we can tell kubernetes that we want to store any type of object",
    "start": "1309919",
    "end": "1317200"
  },
  {
    "text": "i created a repository here it's nothing to do with kubernetes but it doesn't really do me any good",
    "start": "1317200",
    "end": "1322880"
  },
  {
    "text": "when you really start to just realize that this is just being treated as a data store so lee can you talk a little bit about",
    "start": "1322880",
    "end": "1328320"
  },
  {
    "start": "1328000",
    "end": "1328000"
  },
  {
    "text": "controllers and how those work yeah i'd love to so uh controllers are the exciting idea of kubernetes in my",
    "start": "1328320",
    "end": "1335200"
  },
  {
    "text": "opinion right um and the value of a controller succinctly is that it allows us to take",
    "start": "1335200",
    "end": "1342400"
  },
  {
    "text": "that declared data and then build a level triggered system around what it declares so that we can get",
    "start": "1342400",
    "end": "1349120"
  },
  {
    "text": "reliable convergence behavior i say level triggered which is different than if you've ever heard of an",
    "start": "1349120",
    "end": "1354559"
  },
  {
    "text": "edge triggered system uh which uses events or changes in values translated",
    "start": "1354559",
    "end": "1361120"
  },
  {
    "text": "as events to cause controllers to operate on those changes where in a level triggered system it's",
    "start": "1361120",
    "end": "1367919"
  },
  {
    "text": "different you see this a lot in pole based workflows like puppet and chef where they're constantly looking at the",
    "start": "1367919",
    "end": "1373600"
  },
  {
    "text": "current state of what is declared and desired and what is actually there",
    "start": "1373600",
    "end": "1378720"
  },
  {
    "text": "now in a level triggered system since you're always aware of where you want to be and where you are you can",
    "start": "1378720",
    "end": "1385440"
  },
  {
    "text": "reliably compute what needs to be done to get you to the desired state and what makes kubernetes controllers",
    "start": "1385440",
    "end": "1392559"
  },
  {
    "text": "more fun than what we've had in previous systems is that the kubernetes api server",
    "start": "1392559",
    "end": "1398960"
  },
  {
    "text": "exposes this thing called the watch the watch is enabled by the consistent data store",
    "start": "1398960",
    "end": "1405520"
  },
  {
    "text": "of xcd and it's got some machinery in there that gives us a stream of events with some guarantees",
    "start": "1405520",
    "end": "1411360"
  },
  {
    "text": "and so without fcd you don't kind of have the basic mechanisms to be able to",
    "start": "1411360",
    "end": "1417360"
  },
  {
    "text": "build edge triggered reconciliation in a level triggered system right and so uh because of the machinery",
    "start": "1417360",
    "end": "1425919"
  },
  {
    "text": "and the mechanisms available in the api server combined with what fcd gives us as a",
    "start": "1425919",
    "end": "1431840"
  },
  {
    "text": "data store we can get much more rapid reconciliation from our reliable controllers and so when you",
    "start": "1431840",
    "end": "1438720"
  },
  {
    "text": "combine that technical solution of a controller with the fact that we can extend",
    "start": "1438720",
    "end": "1443840"
  },
  {
    "text": "the kubernetes api with custom resources this allows us to build our own controllers that allow us to model",
    "start": "1443840",
    "end": "1450720"
  },
  {
    "text": "declarative control of what would normally be really error-prone and require people to be involved",
    "start": "1450720",
    "end": "1455919"
  },
  {
    "text": "and i think that that's super exciting so controllers they're the big idea but you might have heard the hot term of",
    "start": "1455919",
    "end": "1463440"
  },
  {
    "text": "operators right chris can you help me understand what's the distinction here",
    "start": "1463440",
    "end": "1468559"
  },
  {
    "text": "yeah well besides being an awesome buzzword uh these days it's there's there's some",
    "start": "1468559",
    "end": "1473760"
  },
  {
    "text": "meat behind this so what a what an actual operator is meant to be is it something that takes that that control loop theory and",
    "start": "1473760",
    "end": "1480880"
  },
  {
    "text": "the way that we're building kubernetes and it tries to take non-standard tooling to bring them into",
    "start": "1480880",
    "end": "1486960"
  },
  {
    "text": "that world so you can you've probably experienced things like um there's a there's an etcd operator out",
    "start": "1486960",
    "end": "1493039"
  },
  {
    "text": "there for example and so that that is taking a complex tool chain and trying to make it so that",
    "start": "1493039",
    "end": "1498799"
  },
  {
    "text": "it is an automated system that can be leveraged by kubernetes can you take and say i want an scd",
    "start": "1498799",
    "end": "1505760"
  },
  {
    "text": "instance and it's going to deploy those resources into your cluster maybe outside of your cluster wherever it needs to",
    "start": "1505760",
    "end": "1511279"
  },
  {
    "text": "to function and convert them into this this system of reconciling to a desired state and so as",
    "start": "1511279",
    "end": "1518480"
  },
  {
    "text": "you can kind of imagine these are all or a lot of these systems are built off of uh older style apis and this is just",
    "start": "1518480",
    "end": "1524400"
  },
  {
    "text": "bringing it into the new world taking getting rid of those are trying to to hide i guess more or",
    "start": "1524400",
    "end": "1529440"
  },
  {
    "text": "less the imperative systems that are under the hood but this is the unfortunate thing about",
    "start": "1529440",
    "end": "1535360"
  },
  {
    "text": "this is their applications in themselves which means there's more for you to manage",
    "start": "1535360",
    "end": "1540880"
  },
  {
    "text": "which means bob's got more work to do or somebody's got more work to do to actually make these things work",
    "start": "1540880",
    "end": "1546240"
  },
  {
    "text": "and to keep them up and keep them stable and keep them configured and so that's kind of where where this whole thing starts to connect back",
    "start": "1546240",
    "end": "1553039"
  },
  {
    "text": "together these operators are going to cause a lot of overhead you need that config to be managed",
    "start": "1553039",
    "end": "1558159"
  },
  {
    "text": "and you also need to make sure that you're not leaking the abstractions uh of what's really uh going on under",
    "start": "1558159",
    "end": "1564000"
  },
  {
    "text": "the hood and making sure that you define a solid api that that follows those declarative patterns",
    "start": "1564000",
    "end": "1569279"
  },
  {
    "text": "and this is where we bring back in the notion of okay these probably are going to be be",
    "start": "1569279",
    "end": "1575520"
  },
  {
    "text": "created out of the box with things like flags so we're back to this this world that",
    "start": "1575520",
    "end": "1581279"
  },
  {
    "text": "seems a little problematic right uh we talked about how flags you know as you're trying to maintain the",
    "start": "1581279",
    "end": "1586640"
  },
  {
    "text": "configuration of a component can become a little bit difficult to maintain guarantees for you know especially if",
    "start": "1586640",
    "end": "1592720"
  },
  {
    "text": "you're writing an operator and you're trying to distribute that to other teams that are deploying and getting value out of the new apis that",
    "start": "1592720",
    "end": "1599279"
  },
  {
    "text": "you are controlling uh you want to be able to give somebody a guarantee that the way that the",
    "start": "1599279",
    "end": "1604880"
  },
  {
    "text": "operator is configured to work uh is going to function next year right",
    "start": "1604880",
    "end": "1609919"
  },
  {
    "text": "and so maybe instead of using flags we could adopt the kubernetes native solution right",
    "start": "1609919",
    "end": "1615039"
  },
  {
    "start": "1612000",
    "end": "1612000"
  },
  {
    "text": "what we're doing in the actual components inside of kubernetes can we use component config",
    "start": "1615039",
    "end": "1620960"
  },
  {
    "text": "inside of operators right so in this diagram we have a deployment a deployment is",
    "start": "1620960",
    "end": "1627279"
  },
  {
    "text": "facilitated in kubernetes because of other control loops that are running in the cluster we have the controller manager which is",
    "start": "1627279",
    "end": "1634080"
  },
  {
    "text": "actually operating the deployment struct and then creating pods we have the coupe scheduler which is assigning those pods",
    "start": "1634080",
    "end": "1639600"
  },
  {
    "text": "to nodes we have the kubelet watching for pods to end up on its node and then actually schedule it with the config maps and",
    "start": "1639600",
    "end": "1646480"
  },
  {
    "text": "secrets and volume mounts and all that properly configured so the pod runs in the way that we specify",
    "start": "1646480",
    "end": "1652000"
  },
  {
    "text": "right so we have these control loops taking care of us if we put a component uh config in the data field of a config",
    "start": "1652000",
    "end": "1658240"
  },
  {
    "text": "map and then project that volume out into the operator container inside of our",
    "start": "1658240",
    "end": "1663279"
  },
  {
    "text": "deployment then we will end up with pods that have that data on the file system that gives the operator freedom to then",
    "start": "1663279",
    "end": "1671039"
  },
  {
    "text": "import api machinery and own the api of the component config",
    "start": "1671039",
    "end": "1676480"
  },
  {
    "text": "a dynamic version of this example involves a little bit of different machinery here what we would do is we would modify",
    "start": "1676480",
    "end": "1682559"
  },
  {
    "start": "1677000",
    "end": "1677000"
  },
  {
    "text": "the operator's control loop to actually keep a watch with the api server for its component config from a data field",
    "start": "1682559",
    "end": "1688240"
  },
  {
    "text": "this could also be driven by a secret instead of a config map and so instead of relying on the",
    "start": "1688240",
    "end": "1694640"
  },
  {
    "text": "controllers that are inside of the cluster say we want to deploy the operator externally from the cluster uh but still get this dynamic component",
    "start": "1694640",
    "end": "1701679"
  },
  {
    "text": "config reload uh this would be the analogy to the dynamic",
    "start": "1701679",
    "end": "1706720"
  },
  {
    "text": "config experiment that we've been running uh but directly built into the operator's controller to change the way that it",
    "start": "1706720",
    "end": "1712799"
  },
  {
    "text": "behaves and so this is how we can use component config and the existing examples and",
    "start": "1712799",
    "end": "1721039"
  },
  {
    "text": "um kind of like history that's already been established there for the technical implementation of using kubernetes apis",
    "start": "1721039",
    "end": "1728399"
  },
  {
    "text": "to give promises for configuration for our controllers themselves bootstrapping",
    "start": "1728399",
    "end": "1733679"
  },
  {
    "text": "them actually running them and getting them to connect to an api server do leader collection between themselves",
    "start": "1733679",
    "end": "1739120"
  },
  {
    "text": "configure auth and mutual tls but there is an even more interesting",
    "start": "1739120",
    "end": "1744240"
  },
  {
    "text": "world beyond component config beyond just bootstrapping the controllers and getting them to update in a consistent",
    "start": "1744240",
    "end": "1749760"
  },
  {
    "text": "way and that has to do with then using custom resources in the control loop to",
    "start": "1749760",
    "end": "1755279"
  },
  {
    "start": "1752000",
    "end": "1752000"
  },
  {
    "text": "change behavior chris can you tell us about it yeah absolutely i'd love to",
    "start": "1755279",
    "end": "1760320"
  },
  {
    "text": "again crds are like are my bread and butter these days i i love the the thoughts that you can do with these things and so taking",
    "start": "1760320",
    "end": "1766559"
  },
  {
    "text": "taking uh custom resources and and trying to fit this into a model of managing configuration and dynamic",
    "start": "1766559",
    "end": "1772720"
  },
  {
    "text": "configuration is pretty fantastic because you have informers that are built in as long as you're using the client go",
    "start": "1772720",
    "end": "1778480"
  },
  {
    "text": "libraries and all that you have informers that you can set watches on and you can say anytime",
    "start": "1778480",
    "end": "1783840"
  },
  {
    "text": "this config cr changes or anytime a new config cr gets added",
    "start": "1783840",
    "end": "1789279"
  },
  {
    "text": "i can load that in and i can dynamically reconfigure my my controller or my operator and so",
    "start": "1789279",
    "end": "1794960"
  },
  {
    "text": "you see this actually being done in a lot of a lot of places already and this is trying to really bring up",
    "start": "1794960",
    "end": "1801440"
  },
  {
    "text": "this as a pattern and make sure that people know that we can get some really good benefits out of it so for example um this is actually",
    "start": "1801440",
    "end": "1807760"
  },
  {
    "text": "currently being implemented directly into controller runtime and it'll be coming out i believe in the next release",
    "start": "1807760",
    "end": "1813760"
  },
  {
    "start": "1808000",
    "end": "1808000"
  },
  {
    "text": "in the next couple months and that allows us to automatically have those version schemas directly with any controller runtime",
    "start": "1813760",
    "end": "1820399"
  },
  {
    "text": "based project and so when this gets released that'll end up in operator sdk it'll end up in cube builder and you'll be able to",
    "start": "1820399",
    "end": "1827279"
  },
  {
    "text": "create operators that are already using these or create controllers that are already using these configuration files but then we can we",
    "start": "1827279",
    "end": "1834000"
  },
  {
    "text": "can munch new worlds into it to do uh that that run time level configuration",
    "start": "1834000",
    "end": "1839679"
  },
  {
    "text": "so uh we can do things like configuring um the the way that storage classes work",
    "start": "1839679",
    "end": "1845520"
  },
  {
    "text": "in kubernetes for example how would you select a different storage class and we can build those methodologies into",
    "start": "1845520",
    "end": "1851279"
  },
  {
    "text": "this pattern lee do you want to talk about cert manager and contour",
    "start": "1851279",
    "end": "1856480"
  },
  {
    "text": "yeah cert manager and contour have some great prior art on this they're some of the earliest and most",
    "start": "1856480",
    "end": "1863039"
  },
  {
    "text": "successful controllers and operators uh in the ecosystem and cert manager has",
    "start": "1863039",
    "end": "1868399"
  },
  {
    "text": "this idea of an acme issuer and so if you have these namespaced issuers or cluster issuers",
    "start": "1868399",
    "end": "1876240"
  },
  {
    "text": "then you are able to then pair those up with the certificate objects that ultimately need to be certified by",
    "start": "1876240",
    "end": "1882399"
  },
  {
    "text": "the issuer that's running and this is an example of cert manager providing",
    "start": "1882399",
    "end": "1887840"
  },
  {
    "text": "a multiple uh instance of configuration api that then changes",
    "start": "1887840",
    "end": "1894159"
  },
  {
    "text": "the way that the control loop treats other resources in the same cluster and then we get to contour which is my",
    "start": "1894159",
    "end": "1902559"
  },
  {
    "text": "favorite um they invented this idea of namespace delegation i'd really like to chat with who came up",
    "start": "1902559",
    "end": "1908480"
  },
  {
    "text": "with this but i saw a great talk by josh russo a couple years ago talking about this",
    "start": "1908480",
    "end": "1913760"
  },
  {
    "text": "idea we also used this idea of namespace delegation inside of flux's helm",
    "start": "1913760",
    "end": "1920399"
  },
  {
    "text": "operator and so this is a it's a very powerful pattern that allows you to use a custom resource",
    "start": "1920399",
    "end": "1927279"
  },
  {
    "text": "of one type in a parents or administrative name space",
    "start": "1927279",
    "end": "1932399"
  },
  {
    "text": "and with the way that you declare that custom resource in that administrative namespace you can change",
    "start": "1932399",
    "end": "1938480"
  },
  {
    "text": "the way that the controller reacts to and behaves on custom resources of another type",
    "start": "1938480",
    "end": "1943840"
  },
  {
    "text": "in the target namespace and so the way that they use this in contour is with their old ingress route api you",
    "start": "1943840",
    "end": "1951200"
  },
  {
    "text": "could do ingress route delegation which would allow you to administer the way that subdomains were treated in",
    "start": "1951200",
    "end": "1957279"
  },
  {
    "text": "other name spaces to restrict tenants and then in flux with helm operator",
    "start": "1957279",
    "end": "1963279"
  },
  {
    "text": "we have a helm release delegation which allows you to declare helm releases in one namespace that ultimately end up",
    "start": "1963279",
    "end": "1969919"
  },
  {
    "text": "deployed in another namespace so great pattern there just one other example would be that if",
    "start": "1969919",
    "end": "1975840"
  },
  {
    "text": "you were to say create a configuration resource for your operator you could add a flag to turn it off without actually",
    "start": "1975840",
    "end": "1982320"
  },
  {
    "text": "disabling or scaling down the deployment that backs it and that is a very powerful debugging",
    "start": "1982320",
    "end": "1987440"
  },
  {
    "text": "thing that you could put in you also see this with ignore annotations and that kind of thing but creating formal apis around that so",
    "start": "1987440",
    "end": "1994399"
  },
  {
    "text": "people can depend on the version uh so that you know the you always have a reliable way to turn off your operator",
    "start": "1994399",
    "end": "2000320"
  },
  {
    "text": "for the years to come that it's supposed to be delivering value to you is something to consider when building",
    "start": "2000320",
    "end": "2005840"
  },
  {
    "text": "your own controllers so um great examples from the real world and ultimately i think that when you",
    "start": "2005840",
    "end": "2013919"
  },
  {
    "text": "combine the mechanisms with controllers in the kubernetes world we can get away from this config",
    "start": "2013919",
    "end": "2019519"
  },
  {
    "text": "drift problem right chris absolutely and you can kind of see this i mean if we if we really start to look",
    "start": "2019519",
    "end": "2025200"
  },
  {
    "text": "at it the new world of this is going to allow dynamic configuration to be passed directly to your operators the",
    "start": "2025200",
    "end": "2030559"
  },
  {
    "text": "control loop is gonna go and go and configure everything uh for you and so this world of a",
    "start": "2030559",
    "end": "2036240"
  },
  {
    "text": "a server that's out of sync is just not gonna happen so realistically if we look at carol's example again",
    "start": "2036240",
    "end": "2042240"
  },
  {
    "text": "she's gonna deploy it's gonna active actively reconcile and eventually get to their correct state",
    "start": "2042240",
    "end": "2049839"
  },
  {
    "text": "so again thank you so much for coming to our talk uh i'm chris hyde i'm lee and uh please get in touch with",
    "start": "2050560",
    "end": "2058320"
  },
  {
    "text": "us or got time we're open for questions thank you",
    "start": "2058320",
    "end": "2064638"
  },
  {
    "text": "[Music]",
    "start": "2068000",
    "end": "2071129"
  },
  {
    "text": "if anybody has any questions we're here to help out uh i see one question in there uh we'll",
    "start": "2073119",
    "end": "2078720"
  },
  {
    "text": "make sure and get our slides posted to sketch so that you can actually download these",
    "start": "2078720",
    "end": "2084560"
  },
  {
    "text": "thanks for pointing that out [Music]",
    "start": "2085599",
    "end": "2091510"
  },
  {
    "text": "cool we don't have any further questions in i just want to shout out a great live tweets adding more context",
    "start": "2099200",
    "end": "2105760"
  },
  {
    "text": "and a good place to discuss on twitter from rich and then feel free to bring any",
    "start": "2105760",
    "end": "2112880"
  },
  {
    "text": "more topics about just in general extending kubernetes but we can talk about component config",
    "start": "2112880",
    "end": "2118800"
  },
  {
    "text": "and that kind of thing in the slack channel as well",
    "start": "2118800",
    "end": "2123119"
  },
  {
    "text": "thanks lee for the compliment uh i appreciate you tuning in",
    "start": "2124720",
    "end": "2130800"
  }
]