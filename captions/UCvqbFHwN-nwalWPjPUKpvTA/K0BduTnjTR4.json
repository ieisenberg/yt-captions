[
  {
    "text": "all right so thanks everybody for",
    "start": "240",
    "end": "2200"
  },
  {
    "text": "showing up I'm Richard from the grpc",
    "start": "2200",
    "end": "4279"
  },
  {
    "text": "project and this lightning talk is going",
    "start": "4279",
    "end": "6160"
  },
  {
    "text": "to be a little bit different today I'm",
    "start": "6160",
    "end": "7399"
  },
  {
    "text": "going to talk about the grpc well-known",
    "start": "7399",
    "end": "10880"
  },
  {
    "text": "protos um so the grpc well-known protos",
    "start": "10880",
    "end": "13920"
  },
  {
    "text": "uh you can sort of think of them as a",
    "start": "13920",
    "end": "15759"
  },
  {
    "text": "standard library for grpc these are a",
    "start": "15759",
    "end": "18880"
  },
  {
    "text": "collection of uh pre-written services",
    "start": "18880",
    "end": "22240"
  },
  {
    "text": "that uh we maintain as the grpc project",
    "start": "22240",
    "end": "25279"
  },
  {
    "text": "that you can pre-install onto your",
    "start": "25279",
    "end": "27439"
  },
  {
    "text": "servers so they are um well-known",
    "start": "27439",
    "end": "29519"
  },
  {
    "text": "implement ations of the services that",
    "start": "29519",
    "end": "32000"
  },
  {
    "text": "we've already written so you can see",
    "start": "32000",
    "end": "33480"
  },
  {
    "text": "here in blue um we have health checking",
    "start": "33480",
    "end": "35640"
  },
  {
    "text": "and reflection added in addition to the",
    "start": "35640",
    "end": "37680"
  },
  {
    "text": "application defined services that you're",
    "start": "37680",
    "end": "39840"
  },
  {
    "text": "writing for your own",
    "start": "39840",
    "end": "42160"
  },
  {
    "text": "servers um so the first one that I'll",
    "start": "42160",
    "end": "44160"
  },
  {
    "text": "talk about is Health checking um health",
    "start": "44160",
    "end": "46440"
  },
  {
    "text": "cheing is well within rest there is not",
    "start": "46440",
    "end": "49360"
  },
  {
    "text": "a standardized protocol here uh which is",
    "start": "49360",
    "end": "51600"
  },
  {
    "text": "why within uh kubernetes um Health",
    "start": "51600",
    "end": "54480"
  },
  {
    "text": "checking uh um configuration you have to",
    "start": "54480",
    "end": "57960"
  },
  {
    "text": "write uh path and other conf",
    "start": "57960",
    "end": "59960"
  },
  {
    "text": "configuration that you may want to Plum",
    "start": "59960",
    "end": "61480"
  },
  {
    "text": "into your server um this is actually",
    "start": "61480",
    "end": "64040"
  },
  {
    "text": "grpc has a standardized Health checking",
    "start": "64040",
    "end": "66799"
  },
  {
    "text": "protocol um which is integrated directly",
    "start": "66799",
    "end": "68960"
  },
  {
    "text": "with kubernetes so that you can put um",
    "start": "68960",
    "end": "71200"
  },
  {
    "text": "aliveness check and it will speak the",
    "start": "71200",
    "end": "73360"
  },
  {
    "text": "grpc health checking protocol um this is",
    "start": "73360",
    "end": "76479"
  },
  {
    "text": "the first time you're going to see GB",
    "start": "76479",
    "end": "77640"
  },
  {
    "text": "grpc debug in this talk but this is a",
    "start": "77640",
    "end": "79560"
  },
  {
    "text": "CLI that exposes Health checking",
    "start": "79560",
    "end": "82479"
  },
  {
    "text": "functionality um so that you can uh act",
    "start": "82479",
    "end": "85720"
  },
  {
    "text": "as a client to grpc health",
    "start": "85720",
    "end": "88360"
  },
  {
    "text": "checking um in addition to that we have",
    "start": "88360",
    "end": "90520"
  },
  {
    "text": "something that's very grpc specific",
    "start": "90520",
    "end": "92439"
  },
  {
    "text": "which is reflection um if you've used a",
    "start": "92439",
    "end": "95000"
  },
  {
    "text": "tool like curl before um you're probably",
    "start": "95000",
    "end": "97040"
  },
  {
    "text": "used to being able to type in some Json",
    "start": "97040",
    "end": "99680"
  },
  {
    "text": "and it gets sent across the wire and",
    "start": "99680",
    "end": "101360"
  },
  {
    "text": "it's all human readable the whole way",
    "start": "101360",
    "end": "103040"
  },
  {
    "text": "but a big part of the value proposition",
    "start": "103040",
    "end": "104960"
  },
  {
    "text": "of grpc is that it is fast because of",
    "start": "104960",
    "end": "108079"
  },
  {
    "text": "its use of protocol buffers which are",
    "start": "108079",
    "end": "110600"
  },
  {
    "text": "binary on The Wire that means that they",
    "start": "110600",
    "end": "112840"
  },
  {
    "text": "are um not human readable and they're",
    "start": "112840",
    "end": "114960"
  },
  {
    "text": "not even machine readable if you do not",
    "start": "114960",
    "end": "117240"
  },
  {
    "text": "have a copy of the API schema and so so",
    "start": "117240",
    "end": "120000"
  },
  {
    "text": "you have to have that on your file",
    "start": "120000",
    "end": "121240"
  },
  {
    "text": "system it's difficult to get together so",
    "start": "121240",
    "end": "123520"
  },
  {
    "text": "there's this uh protocol called",
    "start": "123520",
    "end": "124960"
  },
  {
    "text": "reflection which enables you to download",
    "start": "124960",
    "end": "127920"
  },
  {
    "text": "that API directly from the server it",
    "start": "127920",
    "end": "129840"
  },
  {
    "text": "will tell you what the protocol is the",
    "start": "129840",
    "end": "131879"
  },
  {
    "text": "client can then um take a Json encoded",
    "start": "131879",
    "end": "135120"
  },
  {
    "text": "uh request get a protuff response and",
    "start": "135120",
    "end": "137879"
  },
  {
    "text": "translate it back into Json for the user",
    "start": "137879",
    "end": "139760"
  },
  {
    "text": "all human readable um so we will provide",
    "start": "139760",
    "end": "142160"
  },
  {
    "text": "you an implementation of the reflection",
    "start": "142160",
    "end": "144080"
  },
  {
    "text": "server that you can simply install on",
    "start": "144080",
    "end": "145920"
  },
  {
    "text": "your",
    "start": "145920",
    "end": "147000"
  },
  {
    "text": "server um moving on to the debugging p",
    "start": "147000",
    "end": "150200"
  },
  {
    "text": "here um we provide a service called",
    "start": "150200",
    "end": "152280"
  },
  {
    "text": "Channel z um so Channel Z gives you",
    "start": "152280",
    "end": "155120"
  },
  {
    "text": "detailed information about the um",
    "start": "155120",
    "end": "157239"
  },
  {
    "text": "channels servers and even sockets that",
    "start": "157239",
    "end": "159800"
  },
  {
    "text": "you have present within both your",
    "start": "159800",
    "end": "161040"
  },
  {
    "text": "clients and your servers um so you can",
    "start": "161040",
    "end": "163879"
  },
  {
    "text": "see here we have several different grpc",
    "start": "163879",
    "end": "165680"
  },
  {
    "text": "clients and Service uh servers um and",
    "start": "165680",
    "end": "168000"
  },
  {
    "text": "those are exposed uh with Channel Z",
    "start": "168000",
    "end": "169959"
  },
  {
    "text": "installed on them and on the far left",
    "start": "169959",
    "end": "171760"
  },
  {
    "text": "there you can see an example of just a",
    "start": "171760",
    "end": "173879"
  },
  {
    "text": "client that actually exposes um a",
    "start": "173879",
    "end": "176519"
  },
  {
    "text": "channel Z endpoint um now if you do have",
    "start": "176519",
    "end": "179239"
  },
  {
    "text": "things that um you know don't want to",
    "start": "179239",
    "end": "181239"
  },
  {
    "text": "expose this detailed debugging",
    "start": "181239",
    "end": "182760"
  },
  {
    "text": "information then you may want to uh",
    "start": "182760",
    "end": "184840"
  },
  {
    "text": "limit this to Simply Local Host um and",
    "start": "184840",
    "end": "189200"
  },
  {
    "text": "that is going to mean that you'll want",
    "start": "189200",
    "end": "191120"
  },
  {
    "text": "to C cuddle EXA into your pods in order",
    "start": "191120",
    "end": "193319"
  },
  {
    "text": "to get that information but then people",
    "start": "193319",
    "end": "195200"
  },
  {
    "text": "externally won't be able to get access",
    "start": "195200",
    "end": "196680"
  },
  {
    "text": "to that so again you can use grbc debug",
    "start": "196680",
    "end": "199400"
  },
  {
    "text": "as the default client here um then we've",
    "start": "199400",
    "end": "202799"
  },
  {
    "text": "got csda so this is the client status",
    "start": "202799",
    "end": "205599"
  },
  {
    "text": "Discovery service a portion of XDS so",
    "start": "205599",
    "end": "208519"
  },
  {
    "text": "for those of you who aren't amiliar we",
    "start": "208519",
    "end": "210680"
  },
  {
    "text": "have this um offering called proxyless",
    "start": "210680",
    "end": "212959"
  },
  {
    "text": "service mesh grpc implements most of the",
    "start": "212959",
    "end": "216000"
  },
  {
    "text": "functionality of um the envoy proxy so",
    "start": "216000",
    "end": "219319"
  },
  {
    "text": "you can plug it into a service match",
    "start": "219319",
    "end": "221400"
  },
  {
    "text": "like ISO and it will get all of the",
    "start": "221400",
    "end": "224319"
  },
  {
    "text": "basic traffic management functionality",
    "start": "224319",
    "end": "226000"
  },
  {
    "text": "that you're used to there um this gets",
    "start": "226000",
    "end": "228080"
  },
  {
    "text": "even more complicated to debug than a",
    "start": "228080",
    "end": "229680"
  },
  {
    "text": "standard grpc system and so you may want",
    "start": "229680",
    "end": "232280"
  },
  {
    "text": "to install csds to uh get access to all",
    "start": "232280",
    "end": "234840"
  },
  {
    "text": "of the service mesh configuration that",
    "start": "234840",
    "end": "236959"
  },
  {
    "text": "exist in that system and again you can",
    "start": "236959",
    "end": "238599"
  },
  {
    "text": "use gpcb bug to get access to that so",
    "start": "238599",
    "end": "242400"
  },
  {
    "text": "thank you for uh sticking with me on a",
    "start": "242400",
    "end": "244200"
  },
  {
    "text": "worldwind tour of uh grpc features there",
    "start": "244200",
    "end": "247239"
  },
  {
    "text": "are tons of ways to get involved with",
    "start": "247239",
    "end": "248599"
  },
  {
    "text": "the grpc project uh listed here um we",
    "start": "248599",
    "end": "251920"
  },
  {
    "text": "have a grpc maintainer talk happening uh",
    "start": "251920",
    "end": "254280"
  },
  {
    "text": "later on today at I think 3:45 and I am",
    "start": "254280",
    "end": "257120"
  },
  {
    "text": "very happy to announce that there is",
    "start": "257120",
    "end": "258560"
  },
  {
    "text": "going to be a grpc comp uh in India in",
    "start": "258560",
    "end": "261680"
  },
  {
    "text": "2025 so I'll help you see you all there",
    "start": "261680",
    "end": "264280"
  },
  {
    "text": "next year all right thank you very much",
    "start": "264280",
    "end": "269199"
  }
]