[
  {
    "start": "0",
    "end": "23000"
  },
  {
    "text": "thank you everyone thanks for coming my",
    "start": "30",
    "end": "3899"
  },
  {
    "text": "name is Aaron levy I'm a software",
    "start": "3899",
    "end": "5580"
  },
  {
    "text": "engineer at core OS and today I want to",
    "start": "5580",
    "end": "7859"
  },
  {
    "text": "talk about writing a custom kubernetes",
    "start": "7859",
    "end": "9840"
  },
  {
    "text": "controller so first I want to talk about",
    "start": "9840",
    "end": "13530"
  },
  {
    "text": "what exactly is a controller whoa we're",
    "start": "13530",
    "end": "18000"
  },
  {
    "text": "going to go back a little bit so a",
    "start": "18000",
    "end": "22350"
  },
  {
    "text": "controller is ultimately a active",
    "start": "22350",
    "end": "24660"
  },
  {
    "start": "23000",
    "end": "23000"
  },
  {
    "text": "reconciliation process so in simplest",
    "start": "24660",
    "end": "27359"
  },
  {
    "text": "sense we want to look at the desired",
    "start": "27359",
    "end": "28859"
  },
  {
    "text": "state of your cluster the actual state",
    "start": "28859",
    "end": "31289"
  },
  {
    "text": "of your cluster and then you're going to",
    "start": "31289",
    "end": "32610"
  },
  {
    "text": "make changes so that those come in to in",
    "start": "32610",
    "end": "34440"
  },
  {
    "text": "the Union and so in pseudocode this",
    "start": "34440",
    "end": "37710"
  },
  {
    "text": "would look something like a loop that",
    "start": "37710",
    "end": "39300"
  },
  {
    "text": "just constantly is getting the desired",
    "start": "39300",
    "end": "40680"
  },
  {
    "text": "state getting the current state and then",
    "start": "40680",
    "end": "42570"
  },
  {
    "text": "making the changes to bring those into",
    "start": "42570",
    "end": "43980"
  },
  {
    "text": "sync inside of kubernetes the canonical",
    "start": "43980",
    "end": "47309"
  },
  {
    "text": "example of this would be the kubernetes",
    "start": "47309",
    "end": "49289"
  },
  {
    "text": "controller manager which inside of it it",
    "start": "49289",
    "end": "51030"
  },
  {
    "text": "has a whole bunch of different kinds of",
    "start": "51030",
    "end": "53309"
  },
  {
    "text": "controllers there's the deployment",
    "start": "53309",
    "end": "54660"
  },
  {
    "text": "controller daemon node service endpoint",
    "start": "54660",
    "end": "56699"
  },
  {
    "text": "many others and they're kind of all",
    "start": "56699",
    "end": "58800"
  },
  {
    "text": "doing this act of reconciliation loop",
    "start": "58800",
    "end": "60660"
  },
  {
    "text": "internally culture applications outside",
    "start": "60660",
    "end": "63840"
  },
  {
    "text": "of of the controller manager follow the",
    "start": "63840",
    "end": "66390"
  },
  {
    "text": "same pattern like cube DNS is watching",
    "start": "66390",
    "end": "68850"
  },
  {
    "text": "services and pods that are being created",
    "start": "68850",
    "end": "70650"
  },
  {
    "text": "and destroyed in the cluster and then",
    "start": "70650",
    "end": "72060"
  },
  {
    "text": "updating DNS records based on that other",
    "start": "72060",
    "end": "74880"
  },
  {
    "text": "tools like flannel is going to watch the",
    "start": "74880",
    "end": "77850"
  },
  {
    "text": "network cider that gets assigned to pods",
    "start": "77850",
    "end": "80040"
  },
  {
    "text": "and then it's going to translate that",
    "start": "80040",
    "end": "81330"
  },
  {
    "text": "into network settings on the nodes",
    "start": "81330",
    "end": "83070"
  },
  {
    "text": "themselves or even things like SPD",
    "start": "83070",
    "end": "85920"
  },
  {
    "text": "operator Prometheus operator these are",
    "start": "85920",
    "end": "88380"
  },
  {
    "text": "going to create entirely new concepts",
    "start": "88380",
    "end": "90869"
  },
  {
    "text": "inside of the cluster like a net CD",
    "start": "90869",
    "end": "92400"
  },
  {
    "text": "cluster and then it's going to take that",
    "start": "92400",
    "end": "94140"
  },
  {
    "text": "that third party resource object and",
    "start": "94140",
    "end": "96689"
  },
  {
    "text": "then it's going to translate that into",
    "start": "96689",
    "end": "98100"
  },
  {
    "text": "your desired state and constantly doing",
    "start": "98100",
    "end": "100110"
  },
  {
    "text": "the same resolution loop so it's kind of",
    "start": "100110",
    "end": "102420"
  },
  {
    "text": "this pattern is used all over kubernetes",
    "start": "102420",
    "end": "104960"
  },
  {
    "text": "so how can we you know building new",
    "start": "104960",
    "end": "107759"
  },
  {
    "start": "105000",
    "end": "105000"
  },
  {
    "text": "custom controllers use these main things",
    "start": "107759",
    "end": "110250"
  },
  {
    "text": "are that you're able to extend the",
    "start": "110250",
    "end": "111990"
  },
  {
    "text": "functionality of your cluster of",
    "start": "111990",
    "end": "113610"
  },
  {
    "text": "existing objects so you could add new",
    "start": "113610",
    "end": "115770"
  },
  {
    "text": "information like new annotations new",
    "start": "115770",
    "end": "117750"
  },
  {
    "text": "labels and then act off of those and",
    "start": "117750",
    "end": "119310"
  },
  {
    "text": "build a new functionality you could add",
    "start": "119310",
    "end": "121259"
  },
  {
    "text": "entirely new concepts that don't",
    "start": "121259",
    "end": "123149"
  },
  {
    "text": "actually exist in the core of kubernetes",
    "start": "123149",
    "end": "125009"
  },
  {
    "text": "itself like I mentioned the sed operator",
    "start": "125009",
    "end": "126960"
  },
  {
    "text": "the idea of being able to unlike just",
    "start": "126960",
    "end": "129929"
  },
  {
    "text": "create a cluster from you know you",
    "start": "129929",
    "end": "131670"
  },
  {
    "text": "create an object you say I want to",
    "start": "131670",
    "end": "133050"
  },
  {
    "text": "three-note it",
    "start": "133050",
    "end": "133740"
  },
  {
    "text": "a cluster that's not something that's",
    "start": "133740",
    "end": "135270"
  },
  {
    "text": "built in the kubernetes core but it's",
    "start": "135270",
    "end": "136920"
  },
  {
    "text": "something that you're able to build on",
    "start": "136920",
    "end": "138000"
  },
  {
    "text": "top of you can automate administrations",
    "start": "138000",
    "end": "140430"
  },
  {
    "text": "of normal tasks you could wholesale",
    "start": "140430",
    "end": "142380"
  },
  {
    "text": "replace existing components you could",
    "start": "142380",
    "end": "145200"
  },
  {
    "text": "have maybe you know you have specific",
    "start": "145200",
    "end": "147210"
  },
  {
    "text": "needs the tube proxy doesn't doesn't",
    "start": "147210",
    "end": "148890"
  },
  {
    "text": "address and so you could write your own",
    "start": "148890",
    "end": "150870"
  },
  {
    "text": "kind of proxy that follows the same loop",
    "start": "150870",
    "end": "152760"
  },
  {
    "text": "and you can do all of this without",
    "start": "152760",
    "end": "154050"
  },
  {
    "text": "actually modifying the core kubernetes",
    "start": "154050",
    "end": "156120"
  },
  {
    "text": "codebase so it's actually pretty",
    "start": "156120",
    "end": "157650"
  },
  {
    "text": "powerful and pretty extensible so I want",
    "start": "157650",
    "end": "160830"
  },
  {
    "start": "160000",
    "end": "160000"
  },
  {
    "text": "to talk about building an example and",
    "start": "160830",
    "end": "162240"
  },
  {
    "text": "the example I'm going to walk through is",
    "start": "162240",
    "end": "164220"
  },
  {
    "text": "building a node reboot operator not sure",
    "start": "164220",
    "end": "167040"
  },
  {
    "text": "how useful this actually is but I think",
    "start": "167040",
    "end": "168630"
  },
  {
    "text": "it touches on excusing a few concepts",
    "start": "168630",
    "end": "170880"
  },
  {
    "text": "that are make discussing that's pretty",
    "start": "170880",
    "end": "172770"
  },
  {
    "text": "easy so this this operator would allow",
    "start": "172770",
    "end": "175680"
  },
  {
    "text": "an administrator to trigger a node",
    "start": "175680",
    "end": "178440"
  },
  {
    "text": "reboot just by a cube CTL so you're not",
    "start": "178440",
    "end": "180210"
  },
  {
    "text": "having to SSH into the box you can just",
    "start": "180210",
    "end": "182070"
  },
  {
    "text": "do it via kubernetes directly and then",
    "start": "182070",
    "end": "184410"
  },
  {
    "text": "also support rolling updates across the",
    "start": "184410",
    "end": "186390"
  },
  {
    "text": "cluster so this is just a hypothetical",
    "start": "186390",
    "end": "187650"
  },
  {
    "text": "thing that we can talk about it's fairly",
    "start": "187650",
    "end": "190380"
  },
  {
    "text": "easy to build so the operator itself is",
    "start": "190380",
    "end": "193800"
  },
  {
    "text": "going to be composed of a couple",
    "start": "193800",
    "end": "194790"
  },
  {
    "text": "components it's going to be a reboot",
    "start": "194790",
    "end": "196350"
  },
  {
    "text": "agent this is going to run on all nodes",
    "start": "196350",
    "end": "198330"
  },
  {
    "text": "there's going to be a reboot controller",
    "start": "198330",
    "end": "199890"
  },
  {
    "text": "and this is a single instance and then",
    "start": "199890",
    "end": "202140"
  },
  {
    "text": "they're going to communicate their",
    "start": "202140",
    "end": "203310"
  },
  {
    "text": "actual and their desired State through",
    "start": "203310",
    "end": "205710"
  },
  {
    "text": "annotations so reboot now reboot in",
    "start": "205710",
    "end": "207780"
  },
  {
    "text": "progress or reboot needed so the just a",
    "start": "207780",
    "end": "211500"
  },
  {
    "text": "general architecture we have our reboot",
    "start": "211500",
    "end": "213930"
  },
  {
    "text": "controller three nodes each of the nodes",
    "start": "213930",
    "end": "216030"
  },
  {
    "text": "are running the reboot agent and then we",
    "start": "216030",
    "end": "217740"
  },
  {
    "text": "have our state of it needs a reboot",
    "start": "217740",
    "end": "219420"
  },
  {
    "text": "it's rebooting now or it's ready so we",
    "start": "219420",
    "end": "222750"
  },
  {
    "text": "would say let's annotate all our nodes",
    "start": "222750",
    "end": "224190"
  },
  {
    "text": "and say okay well they all need a reboot",
    "start": "224190",
    "end": "225900"
  },
  {
    "text": "we're just going to roll a reboot across",
    "start": "225900",
    "end": "228090"
  },
  {
    "text": "the cluster and our reboot controller is",
    "start": "228090",
    "end": "230490"
  },
  {
    "text": "going to look at the cluster and it's",
    "start": "230490",
    "end": "231600"
  },
  {
    "text": "going to look at the current state and",
    "start": "231600",
    "end": "232560"
  },
  {
    "text": "say well I'm allowed to have a maximum",
    "start": "232560",
    "end": "234990"
  },
  {
    "text": "number of unavailable nodes of one and",
    "start": "234990",
    "end": "236790"
  },
  {
    "text": "currently they're all available so we're",
    "start": "236790",
    "end": "238980"
  },
  {
    "text": "safe to actually reboot a node so we'll",
    "start": "238980",
    "end": "240870"
  },
  {
    "text": "go ahead and reboot that but then we",
    "start": "240870",
    "end": "242220"
  },
  {
    "text": "stop because the maximum number of",
    "start": "242220",
    "end": "244380"
  },
  {
    "text": "unavailable nodes has been reached so we",
    "start": "244380",
    "end": "246450"
  },
  {
    "text": "wait that node comes up it's now safe",
    "start": "246450",
    "end": "248460"
  },
  {
    "text": "again to reboot the next node we read",
    "start": "248460",
    "end": "250230"
  },
  {
    "text": "that and on and so we're able the",
    "start": "250230",
    "end": "252270"
  },
  {
    "text": "controller is just a simple it's just",
    "start": "252270",
    "end": "254550"
  },
  {
    "text": "coordinating the reboost across the",
    "start": "254550",
    "end": "255810"
  },
  {
    "text": "cluster in a very simple way so the way",
    "start": "255810",
    "end": "258570"
  },
  {
    "text": "that we're going to build this is that",
    "start": "258570",
    "end": "260519"
  },
  {
    "text": "we're going to have the agent is going",
    "start": "260520",
    "end": "262470"
  },
  {
    "text": "to be a daemon set and it's going to run",
    "start": "262470",
    "end": "264479"
  },
  {
    "text": "a pod on on",
    "start": "264479",
    "end": "265730"
  },
  {
    "text": "the note in the cluster and it's only",
    "start": "265730",
    "end": "268040"
  },
  {
    "text": "job is really to watch for an annotation",
    "start": "268040",
    "end": "270230"
  },
  {
    "text": "on the notes own note object so it's",
    "start": "270230",
    "end": "272090"
  },
  {
    "text": "going to watch for an annotation that",
    "start": "272090",
    "end": "273320"
  },
  {
    "text": "says reboot now when it sees that it's",
    "start": "273320",
    "end": "275780"
  },
  {
    "text": "going to add a new annotation that says",
    "start": "275780",
    "end": "277220"
  },
  {
    "text": "reboots in progress it will remove the",
    "start": "277220",
    "end": "279950"
  },
  {
    "text": "reboot now and then reboot the node so",
    "start": "279950",
    "end": "281780"
  },
  {
    "text": "it's core logic is actually pretty",
    "start": "281780",
    "end": "283400"
  },
  {
    "text": "simple on the reboot controller we're",
    "start": "283400",
    "end": "286160"
  },
  {
    "text": "going to deploy as a deployment object",
    "start": "286160",
    "end": "288230"
  },
  {
    "text": "we're gonna have a replica of one and",
    "start": "288230",
    "end": "289970"
  },
  {
    "text": "I'll come back to that in a bit and it",
    "start": "289970",
    "end": "291890"
  },
  {
    "text": "watches all the nodes and it looks at",
    "start": "291890",
    "end": "293780"
  },
  {
    "text": "all the nodes and determines which ones",
    "start": "293780",
    "end": "295520"
  },
  {
    "text": "have reboot needed annotations and then",
    "start": "295520",
    "end": "297830"
  },
  {
    "text": "based on that it's going to check how",
    "start": "297830",
    "end": "299600"
  },
  {
    "text": "many nodes are unavailable and then if",
    "start": "299600",
    "end": "301910"
  },
  {
    "text": "you're still below that threshold it'll",
    "start": "301910",
    "end": "303680"
  },
  {
    "text": "start updating one of those nodes at a",
    "start": "303680",
    "end": "305300"
  },
  {
    "text": "time so the core building blocks of",
    "start": "305300",
    "end": "309020"
  },
  {
    "start": "307000",
    "end": "307000"
  },
  {
    "text": "actually writing a controller in this",
    "start": "309020",
    "end": "311570"
  },
  {
    "text": "case are going to be creating the",
    "start": "311570",
    "end": "312890"
  },
  {
    "text": "kubernetes client so that you can",
    "start": "312890",
    "end": "314480"
  },
  {
    "text": "interact securely with the API server",
    "start": "314480",
    "end": "316580"
  },
  {
    "text": "we're going to use an object called an",
    "start": "316580",
    "end": "319010"
  },
  {
    "text": "informer and this handles object caching",
    "start": "319010",
    "end": "321500"
  },
  {
    "text": "and handling for us how many people here",
    "start": "321500",
    "end": "324020"
  },
  {
    "text": "show of hands are familiar with",
    "start": "324020",
    "end": "325580"
  },
  {
    "text": "informers okay I'll be going into a bit",
    "start": "325580",
    "end": "328670"
  },
  {
    "text": "cool so and then we're going to be",
    "start": "328670",
    "end": "331250"
  },
  {
    "text": "communicating our desire or actual state",
    "start": "331250",
    "end": "333170"
  },
  {
    "text": "of the cluster by annotations on the",
    "start": "333170",
    "end": "335060"
  },
  {
    "text": "node object so I have a functional",
    "start": "335060",
    "end": "338240"
  },
  {
    "text": "example of this so sometimes dense code",
    "start": "338240",
    "end": "340940"
  },
  {
    "text": "is hard to do a presentation on so",
    "start": "340940",
    "end": "343510"
  },
  {
    "text": "github Aaron Levie",
    "start": "343510",
    "end": "345200"
  },
  {
    "text": "cube controller - demo so it's basically",
    "start": "345200",
    "end": "348740"
  },
  {
    "text": "the same exact thing we're talking about",
    "start": "348740",
    "end": "350210"
  },
  {
    "text": "some of this code has to be pseudocode",
    "start": "350210",
    "end": "351680"
  },
  {
    "text": "or a bridge but that just has the full",
    "start": "351680",
    "end": "354920"
  },
  {
    "text": "example and then these are following",
    "start": "354920",
    "end": "356840"
  },
  {
    "text": "some general upstream patterns but",
    "start": "356840",
    "end": "358850"
  },
  {
    "text": "there's no singular right way of writing",
    "start": "358850",
    "end": "360740"
  },
  {
    "text": "controllers there's many different ways",
    "start": "360740",
    "end": "362540"
  },
  {
    "text": "of doing it we're just going to kind of",
    "start": "362540",
    "end": "364730"
  },
  {
    "text": "follow an easy path and take advantage",
    "start": "364730",
    "end": "366200"
  },
  {
    "text": "of a lot of client library stuff that's",
    "start": "366200",
    "end": "368660"
  },
  {
    "text": "already done the hard work for us so the",
    "start": "368660",
    "end": "371960"
  },
  {
    "text": "the library itself that we're going to",
    "start": "371960",
    "end": "373310"
  },
  {
    "text": "use is the client go library and so this",
    "start": "373310",
    "end": "375950"
  },
  {
    "text": "is under the kubernetes organization and",
    "start": "375950",
    "end": "378500"
  },
  {
    "text": "then one thing to note is that",
    "start": "378500",
    "end": "380030"
  },
  {
    "text": "versioning is important with this so v2",
    "start": "380030",
    "end": "383150"
  },
  {
    "text": "is currently recommended and v3 the pr2",
    "start": "383150",
    "end": "386450"
  },
  {
    "text": "update it was this morning and so v2 is",
    "start": "386450",
    "end": "389660"
  },
  {
    "text": "targeted against 1/5 but it can work",
    "start": "389660",
    "end": "391910"
  },
  {
    "text": "against one six clusters there's just",
    "start": "391910",
    "end": "393440"
  },
  {
    "text": "some new objects that it may not know",
    "start": "393440",
    "end": "395090"
  },
  {
    "text": "about and then v3 should come soon but",
    "start": "395090",
    "end": "397280"
  },
  {
    "text": "all of these examples are using v2",
    "start": "397280",
    "end": "399260"
  },
  {
    "text": "and then I'll update the the demo",
    "start": "399260",
    "end": "401270"
  },
  {
    "text": "repository",
    "start": "401270",
    "end": "402320"
  },
  {
    "text": "when v3 comes out to keep up with that",
    "start": "402320",
    "end": "404980"
  },
  {
    "text": "so the first thing we're going to build",
    "start": "404980",
    "end": "406790"
  },
  {
    "text": "is the reboot agent so the first thing",
    "start": "406790",
    "end": "409640"
  },
  {
    "start": "408000",
    "end": "408000"
  },
  {
    "text": "we want to do is we need to determine",
    "start": "409640",
    "end": "411470"
  },
  {
    "text": "ourself so the reason for this is that",
    "start": "411470",
    "end": "414140"
  },
  {
    "text": "when we're running the agent on every",
    "start": "414140",
    "end": "415640"
  },
  {
    "text": "node we don't want to have to create a",
    "start": "415640",
    "end": "417020"
  },
  {
    "text": "special pod for each node and say this",
    "start": "417020",
    "end": "418970"
  },
  {
    "text": "is pod one that knows it's on node one",
    "start": "418970",
    "end": "421460"
  },
  {
    "text": "we want to create cattle not pets and so",
    "start": "421460",
    "end": "424490"
  },
  {
    "text": "we need some way of determining",
    "start": "424490",
    "end": "425600"
  },
  {
    "text": "ourselves and the way to do this in this",
    "start": "425600",
    "end": "428000"
  },
  {
    "text": "case is we're going to use the downward",
    "start": "428000",
    "end": "429470"
  },
  {
    "text": "API so if you see that end section in",
    "start": "429470",
    "end": "432260"
  },
  {
    "text": "the in the in the pod spec what we're",
    "start": "432260",
    "end": "435200"
  },
  {
    "text": "going to be doing is we're populating an",
    "start": "435200",
    "end": "437150"
  },
  {
    "text": "environment variable called no name and",
    "start": "437150",
    "end": "439070"
  },
  {
    "text": "we're getting its value from a field",
    "start": "439070",
    "end": "440420"
  },
  {
    "text": "reference and the field that it's",
    "start": "440420",
    "end": "442190"
  },
  {
    "text": "referencing is the spec dot node name so",
    "start": "442190",
    "end": "445130"
  },
  {
    "text": "when the we're able to create a",
    "start": "445130",
    "end": "447080"
  },
  {
    "text": "deployment and this pot is going to be",
    "start": "447080",
    "end": "448760"
  },
  {
    "text": "run on a bunch of different nodes and at",
    "start": "448760",
    "end": "450320"
  },
  {
    "text": "runtime when the couplet runs that pod",
    "start": "450320",
    "end": "452330"
  },
  {
    "text": "it's going to inject that environment",
    "start": "452330",
    "end": "455270"
  },
  {
    "text": "variable with the correct information",
    "start": "455270",
    "end": "456380"
  },
  {
    "text": "and then we as as the authors of this",
    "start": "456380",
    "end": "458990"
  },
  {
    "text": "controller can consume it in a couple",
    "start": "458990",
    "end": "460850"
  },
  {
    "text": "different ways one way would just be to",
    "start": "460850",
    "end": "462560"
  },
  {
    "text": "in our code get that environment",
    "start": "462560",
    "end": "464480"
  },
  {
    "text": "variable and then use it so now we know",
    "start": "464480",
    "end": "466190"
  },
  {
    "text": "who we are and we can get information",
    "start": "466190",
    "end": "467630"
  },
  {
    "text": "about ourselves or another option is we",
    "start": "467630",
    "end": "470030"
  },
  {
    "text": "could just actually pass it in as a flag",
    "start": "470030",
    "end": "471770"
  },
  {
    "text": "is in part of the pod spec and this is",
    "start": "471770",
    "end": "475430"
  },
  {
    "text": "useful if maybe you don't have control",
    "start": "475430",
    "end": "477440"
  },
  {
    "text": "over how the application you're you're",
    "start": "477440",
    "end": "479420"
  },
  {
    "text": "interfacing with might need to get that",
    "start": "479420",
    "end": "481190"
  },
  {
    "text": "information in our case we're just going",
    "start": "481190",
    "end": "483320"
  },
  {
    "text": "to pull it directly from the the",
    "start": "483320",
    "end": "484970"
  },
  {
    "text": "environment so now that we've determined",
    "start": "484970",
    "end": "487850"
  },
  {
    "start": "487000",
    "end": "487000"
  },
  {
    "text": "ourselves the next thing we need to do",
    "start": "487850",
    "end": "489890"
  },
  {
    "text": "is create a client so that we can speak",
    "start": "489890",
    "end": "491840"
  },
  {
    "text": "securely to the API server and there's",
    "start": "491840",
    "end": "494000"
  },
  {
    "text": "two main things that I that I want to",
    "start": "494000",
    "end": "495620"
  },
  {
    "text": "touch on here so the middle if block",
    "start": "495620",
    "end": "497380"
  },
  {
    "text": "we're creating a config a client config",
    "start": "497380",
    "end": "500120"
  },
  {
    "text": "in two different ways one is the in",
    "start": "500120",
    "end": "501830"
  },
  {
    "text": "cluster config and another is creating a",
    "start": "501830",
    "end": "503810"
  },
  {
    "text": "config using a reference coop config",
    "start": "503810",
    "end": "506570"
  },
  {
    "text": "file the in cluster configure going to",
    "start": "506570",
    "end": "509870"
  },
  {
    "text": "be using when you launch a pod in the",
    "start": "509870",
    "end": "511940"
  },
  {
    "text": "cluster it's going to get a service",
    "start": "511940",
    "end": "513740"
  },
  {
    "text": "account injected into it automatically",
    "start": "513740",
    "end": "516469"
  },
  {
    "text": "and that's going to have all of the",
    "start": "516470",
    "end": "517700"
  },
  {
    "text": "information you need to be able to",
    "start": "517700",
    "end": "519050"
  },
  {
    "text": "securely contact the API server it's",
    "start": "519050",
    "end": "520880"
  },
  {
    "text": "going to inherit any permissions that",
    "start": "520880",
    "end": "522349"
  },
  {
    "text": "you gave that service account generally",
    "start": "522349",
    "end": "524090"
  },
  {
    "text": "that's just the right way of allowing",
    "start": "524090",
    "end": "525740"
  },
  {
    "text": "your pod if it's in the cluster to",
    "start": "525740",
    "end": "527330"
  },
  {
    "text": "contact the API server but when I've",
    "start": "527330",
    "end": "529460"
  },
  {
    "text": "been developing controllers the",
    "start": "529460",
    "end": "532670"
  },
  {
    "text": "it can be kind of problematic to have to",
    "start": "532670",
    "end": "535540"
  },
  {
    "text": "compile your binary put it into a",
    "start": "535540",
    "end": "537740"
  },
  {
    "text": "container and put it into a pod and then",
    "start": "537740",
    "end": "539450"
  },
  {
    "text": "deploy it in the cluster just to test it",
    "start": "539450",
    "end": "540950"
  },
  {
    "text": "and so I found that just allowing the",
    "start": "540950",
    "end": "543590"
  },
  {
    "text": "option of providing a tube config makes",
    "start": "543590",
    "end": "545570"
  },
  {
    "text": "it much easier to just quickly develop",
    "start": "545570",
    "end": "547490"
  },
  {
    "text": "because you compile the binary point it",
    "start": "547490",
    "end": "549080"
  },
  {
    "text": "at a local coop config and that can",
    "start": "549080",
    "end": "551030"
  },
  {
    "text": "reference any cluster anywhere because",
    "start": "551030",
    "end": "552680"
  },
  {
    "text": "ultimately all of these controllers are",
    "start": "552680",
    "end": "555140"
  },
  {
    "text": "just clients of vapi all of the internal",
    "start": "555140",
    "end": "557390"
  },
  {
    "text": "ones all of these external ones they're",
    "start": "557390",
    "end": "559160"
  },
  {
    "text": "just clients of the API so if it's",
    "start": "559160",
    "end": "560690"
  },
  {
    "text": "running locally while you're developing",
    "start": "560690",
    "end": "561740"
  },
  {
    "text": "it's going to behave the same more or",
    "start": "561740",
    "end": "564170"
  },
  {
    "text": "less as if it was in the cluster and",
    "start": "564170",
    "end": "567020"
  },
  {
    "text": "then once you've created the config you",
    "start": "567020",
    "end": "568490"
  },
  {
    "text": "just there's a new config method and it",
    "start": "568490",
    "end": "571220"
  },
  {
    "text": "gives you back a kubernetes client so at",
    "start": "571220",
    "end": "573470"
  },
  {
    "text": "this point we have enough information we",
    "start": "573470",
    "end": "575300"
  },
  {
    "text": "can securely contact the API we know who",
    "start": "575300",
    "end": "577310"
  },
  {
    "text": "we are",
    "start": "577310",
    "end": "577760"
  },
  {
    "text": "we could write a simple loop maybe our",
    "start": "577760",
    "end": "580760"
  },
  {
    "text": "controller is the node information",
    "start": "580760",
    "end": "582500"
  },
  {
    "text": "printing controller and so we have we",
    "start": "582500",
    "end": "585290"
  },
  {
    "text": "print out the the labels that are on our",
    "start": "585290",
    "end": "587510"
  },
  {
    "text": "own node and we print out the number of",
    "start": "587510",
    "end": "589370"
  },
  {
    "text": "nodes that exist so pretty pretty",
    "start": "589370",
    "end": "590900"
  },
  {
    "text": "straightforward to do this you can the",
    "start": "590900",
    "end": "592400"
  },
  {
    "text": "client is actually pretty intuitive",
    "start": "592400",
    "end": "593720"
  },
  {
    "text": "pretty easy to use but those kinds of",
    "start": "593720",
    "end": "597530"
  },
  {
    "start": "596000",
    "end": "596000"
  },
  {
    "text": "operations if you're constantly saying",
    "start": "597530",
    "end": "599180"
  },
  {
    "text": "go to the API server and give me back",
    "start": "599180",
    "end": "600830"
  },
  {
    "text": "all of these objects it can actually",
    "start": "600830",
    "end": "602600"
  },
  {
    "text": "become pretty expensive you're",
    "start": "602600",
    "end": "604130"
  },
  {
    "text": "extracting information out of that CD",
    "start": "604130",
    "end": "606760"
  },
  {
    "text": "deserializing it possibly doing",
    "start": "606760",
    "end": "609610"
  },
  {
    "text": "server-side filtering of it realized",
    "start": "609610",
    "end": "612050"
  },
  {
    "text": "it's sending it to the client",
    "start": "612050",
    "end": "613220"
  },
  {
    "text": "deserializing it again so you know for",
    "start": "613220",
    "end": "616430"
  },
  {
    "text": "doing these kind of get and list",
    "start": "616430",
    "end": "617630"
  },
  {
    "text": "operations a lot of times in code what",
    "start": "617630",
    "end": "619940"
  },
  {
    "text": "we're going to end up doing is we need",
    "start": "619940",
    "end": "621110"
  },
  {
    "text": "to build a cache and the other option is",
    "start": "621110",
    "end": "623300"
  },
  {
    "text": "that you know we may not want to have to",
    "start": "623300",
    "end": "626270"
  },
  {
    "text": "pull the API and say well what's the",
    "start": "626270",
    "end": "628610"
  },
  {
    "text": "full state of all the nodes in the",
    "start": "628610",
    "end": "629750"
  },
  {
    "text": "cluster every 10 second and over and",
    "start": "629750",
    "end": "631580"
  },
  {
    "text": "over again and so in this case we just",
    "start": "631580",
    "end": "633110"
  },
  {
    "text": "want to be notified has a node been",
    "start": "633110",
    "end": "634550"
  },
  {
    "text": "added has it been deleted has it been",
    "start": "634550",
    "end": "636200"
  },
  {
    "text": "updated and so that's building and",
    "start": "636200",
    "end": "638150"
  },
  {
    "text": "watches and in this case we already get",
    "start": "638150",
    "end": "640400"
  },
  {
    "text": "this from something called an informer",
    "start": "640400",
    "end": "642920"
  },
  {
    "text": "and so a simple overview of it you know",
    "start": "642920",
    "end": "647090"
  },
  {
    "start": "644000",
    "end": "644000"
  },
  {
    "text": "calling new and former and I'll go over",
    "start": "647090",
    "end": "648740"
  },
  {
    "text": "each of these in more depth but you're",
    "start": "648740",
    "end": "650660"
  },
  {
    "text": "going to provide it a lip swatch object",
    "start": "650660",
    "end": "652430"
  },
  {
    "text": "the type of objects that you care about",
    "start": "652430",
    "end": "654080"
  },
  {
    "text": "operating on in this case we're going to",
    "start": "654080",
    "end": "655550"
  },
  {
    "text": "care about nodes a resync period and",
    "start": "655550",
    "end": "658010"
  },
  {
    "text": "event handler functions so the first one",
    "start": "658010",
    "end": "661130"
  },
  {
    "text": "I'm going to go over is the list watch",
    "start": "661130",
    "end": "662240"
  },
  {
    "text": "object so let's start here at the the",
    "start": "662240",
    "end": "665420"
  },
  {
    "text": "return statement",
    "start": "665420",
    "end": "666710"
  },
  {
    "text": "so if you see here we're still using the",
    "start": "666710",
    "end": "668450"
  },
  {
    "text": "client like we did before we're saying",
    "start": "668450",
    "end": "670370"
  },
  {
    "text": "we want to get the nodes and we want to",
    "start": "670370",
    "end": "671930"
  },
  {
    "text": "list them but in this case we're talking",
    "start": "671930",
    "end": "673820"
  },
  {
    "text": "about our agent and our agent only cares",
    "start": "673820",
    "end": "676010"
  },
  {
    "text": "about itself it doesn't care about",
    "start": "676010",
    "end": "677210"
  },
  {
    "text": "anything else any other nodes in the",
    "start": "677210",
    "end": "678770"
  },
  {
    "text": "cluster so we want to filter this down",
    "start": "678770",
    "end": "680240"
  },
  {
    "text": "to only show us updates about our own",
    "start": "680240",
    "end": "682640"
  },
  {
    "text": "node so we see at the top there we're",
    "start": "682640",
    "end": "684980"
  },
  {
    "text": "creating a field selector that says we",
    "start": "684980",
    "end": "687470"
  },
  {
    "text": "only care if the metadata and the name",
    "start": "687470",
    "end": "689480"
  },
  {
    "text": "of that actual pod or of that that node",
    "start": "689480",
    "end": "691880"
  },
  {
    "text": "actually matches matches ourself so then",
    "start": "691880",
    "end": "695930"
  },
  {
    "text": "we use that selector when we're passing",
    "start": "695930",
    "end": "698210"
  },
  {
    "text": "that into the list function and the",
    "start": "698210",
    "end": "699530"
  },
  {
    "text": "watch function and so that just allows",
    "start": "699530",
    "end": "700970"
  },
  {
    "text": "you to restrict the set of information",
    "start": "700970",
    "end": "703040"
  },
  {
    "text": "that you're actually operating on this",
    "start": "703040",
    "end": "704870"
  },
  {
    "text": "could be labels this could be field this",
    "start": "704870",
    "end": "706790"
  },
  {
    "text": "could be all kinds of information so",
    "start": "706790",
    "end": "708410"
  },
  {
    "text": "it's pretty flexible in how you can",
    "start": "708410",
    "end": "710270"
  },
  {
    "text": "portion out what you actually want to",
    "start": "710270",
    "end": "711710"
  },
  {
    "text": "work on the other big part of this are",
    "start": "711710",
    "end": "714920"
  },
  {
    "text": "the resource event handler functions and",
    "start": "714920",
    "end": "716930"
  },
  {
    "text": "so these will trigger as objects are",
    "start": "716930",
    "end": "719600"
  },
  {
    "text": "coming through the informer so add",
    "start": "719600",
    "end": "721610"
  },
  {
    "text": "update or delete and you can see the the",
    "start": "721610",
    "end": "724010"
  },
  {
    "text": "function signatures there a quick",
    "start": "724010",
    "end": "726820"
  },
  {
    "text": "example at the bottom is maybe every",
    "start": "726820",
    "end": "729080"
  },
  {
    "text": "time a node was added we want to print",
    "start": "729080",
    "end": "730730"
  },
  {
    "text": "out its name in the log and so in this",
    "start": "730730",
    "end": "733160"
  },
  {
    "text": "case you are just essentially taking the",
    "start": "733160",
    "end": "735410"
  },
  {
    "text": "node object and then printing its name",
    "start": "735410",
    "end": "737120"
  },
  {
    "text": "and that's just coming in from the",
    "start": "737120",
    "end": "738470"
  },
  {
    "text": "informer itself and you could just tie",
    "start": "738470",
    "end": "740000"
  },
  {
    "text": "this into as the add the add function in",
    "start": "740000",
    "end": "742580"
  },
  {
    "text": "the resource handler",
    "start": "742580",
    "end": "745360"
  },
  {
    "text": "so the other part is the resync period",
    "start": "745730",
    "end": "748340"
  },
  {
    "text": "and this is this is important towards",
    "start": "748340",
    "end": "750260"
  },
  {
    "text": "that kind of constant rethinking of",
    "start": "750260",
    "end": "752270"
  },
  {
    "text": "current versus desired state what this",
    "start": "752270",
    "end": "754790"
  },
  {
    "text": "means is that at that interval it's",
    "start": "754790",
    "end": "756530"
  },
  {
    "text": "going to riku all of the objects that",
    "start": "756530",
    "end": "758600"
  },
  {
    "text": "you have in your cache and fire the",
    "start": "758600",
    "end": "760760"
  },
  {
    "text": "update function over again and so what",
    "start": "760760",
    "end": "762920"
  },
  {
    "text": "this allows you to easily tie into is",
    "start": "762920",
    "end": "764750"
  },
  {
    "text": "maybe you've missed you know some kind",
    "start": "764750",
    "end": "767180"
  },
  {
    "text": "of some kind of event adds leaves or",
    "start": "767180",
    "end": "769910"
  },
  {
    "text": "like you know maybe you were trying to",
    "start": "769910",
    "end": "772760"
  },
  {
    "text": "perform something and it actually failed",
    "start": "772760",
    "end": "774500"
  },
  {
    "text": "and you weren't actually able to do that",
    "start": "774500",
    "end": "776390"
  },
  {
    "text": "update what this means is that maybe you",
    "start": "776390",
    "end": "778520"
  },
  {
    "text": "set it to every 30 seconds I just want",
    "start": "778520",
    "end": "780620"
  },
  {
    "text": "to go through all the objects again and",
    "start": "780620",
    "end": "782300"
  },
  {
    "text": "recheck the state and so that's a way",
    "start": "782300",
    "end": "784400"
  },
  {
    "text": "that you can just constantly be in this",
    "start": "784400",
    "end": "785720"
  },
  {
    "text": "loop of like okay everything is still",
    "start": "785720",
    "end": "787130"
  },
  {
    "text": "good I don't have to like make sure that",
    "start": "787130",
    "end": "788750"
  },
  {
    "text": "everything has has successfully gone",
    "start": "788750",
    "end": "790730"
  },
  {
    "text": "through because I know that I'm just",
    "start": "790730",
    "end": "791690"
  },
  {
    "text": "going to check it again soon so given if",
    "start": "791690",
    "end": "795410"
  },
  {
    "text": "we were to pass in those things that we",
    "start": "795410",
    "end": "796880"
  },
  {
    "text": "just that we just talked about into the",
    "start": "796880",
    "end": "799160"
  },
  {
    "text": "new Informer what",
    "start": "799160",
    "end": "800209"
  },
  {
    "text": "we would get back is a store and a",
    "start": "800209",
    "end": "801920"
  },
  {
    "text": "controller and one of the things we're",
    "start": "801920",
    "end": "804439"
  },
  {
    "text": "going to do is just as a helper there",
    "start": "804439",
    "end": "806569"
  },
  {
    "text": "are the store to node list or store to",
    "start": "806569",
    "end": "808879"
  },
  {
    "text": "pod Lister this just makes takes away",
    "start": "808879",
    "end": "811009"
  },
  {
    "text": "some boilerplate of doing type",
    "start": "811009",
    "end": "812929"
  },
  {
    "text": "conversions so we just use that because",
    "start": "812929",
    "end": "815089"
  },
  {
    "text": "it makes listing everything out of out",
    "start": "815089",
    "end": "816889"
  },
  {
    "text": "of the cash easy and then we tell the",
    "start": "816889",
    "end": "819319"
  },
  {
    "text": "controller we want it to start and what",
    "start": "819319",
    "end": "820910"
  },
  {
    "text": "that means is it's going to reach out to",
    "start": "820910",
    "end": "822679"
  },
  {
    "text": "the API service or populating the local",
    "start": "822679",
    "end": "824629"
  },
  {
    "text": "cache and then start triggering these",
    "start": "824629",
    "end": "826249"
  },
  {
    "text": "update functions and then we can use the",
    "start": "826249",
    "end": "828439"
  },
  {
    "text": "cache normally by saying you know list",
    "start": "828439",
    "end": "830179"
  },
  {
    "text": "or get and it's just going to pull from",
    "start": "830179",
    "end": "831889"
  },
  {
    "text": "our local state so given that",
    "start": "831889",
    "end": "834889"
  },
  {
    "start": "833000",
    "end": "833000"
  },
  {
    "text": "information we can actually start",
    "start": "834889",
    "end": "837019"
  },
  {
    "text": "building this controllers so the first",
    "start": "837019",
    "end": "839059"
  },
  {
    "text": "is the agents itself so what we're going",
    "start": "839059",
    "end": "842629"
  },
  {
    "text": "to tie in to is that that update",
    "start": "842629",
    "end": "845660"
  },
  {
    "text": "function in the informer itself because",
    "start": "845660",
    "end": "847790"
  },
  {
    "text": "we don't care when nodes get deleted",
    "start": "847790",
    "end": "849230"
  },
  {
    "text": "because if they're deleted we don't care",
    "start": "849230",
    "end": "850550"
  },
  {
    "text": "about rebooting them and when nodes are",
    "start": "850550",
    "end": "852470"
  },
  {
    "text": "added we don't really just want to try",
    "start": "852470",
    "end": "854360"
  },
  {
    "text": "and reboot them immediately so we're",
    "start": "854360",
    "end": "855709"
  },
  {
    "text": "only going to tie into the update",
    "start": "855709",
    "end": "856850"
  },
  {
    "text": "function and really it's only job is to",
    "start": "856850",
    "end": "859639"
  },
  {
    "text": "look does it have the annotation that",
    "start": "859639",
    "end": "861559"
  },
  {
    "text": "says reboot now and if it does have that",
    "start": "861559",
    "end": "863929"
  },
  {
    "text": "annotation that means it should reboot",
    "start": "863929",
    "end": "865369"
  },
  {
    "text": "and so we're going to first just get rid",
    "start": "865369",
    "end": "867019"
  },
  {
    "text": "of that annotation we don't need it",
    "start": "867019",
    "end": "868429"
  },
  {
    "text": "anymore",
    "start": "868429",
    "end": "868939"
  },
  {
    "text": "then we're going to update that in the",
    "start": "868939",
    "end": "870410"
  },
  {
    "text": "API server so that that's reflected and",
    "start": "870410",
    "end": "872299"
  },
  {
    "text": "then we're going to reboot the node and",
    "start": "872299",
    "end": "874369"
  },
  {
    "text": "so the the client logic is essentially",
    "start": "874369",
    "end": "876559"
  },
  {
    "text": "you know get self determined Who I am",
    "start": "876559",
    "end": "878839"
  },
  {
    "text": "create a client and then we're going to",
    "start": "878839",
    "end": "881269"
  },
  {
    "text": "create an informer and so pretend that",
    "start": "881269",
    "end": "883910"
  },
  {
    "text": "this took self took the the update",
    "start": "883910",
    "end": "886549"
  },
  {
    "text": "function and then inserted that into the",
    "start": "886549",
    "end": "888709"
  },
  {
    "text": "informer we talked about and then we",
    "start": "888709",
    "end": "890299"
  },
  {
    "text": "tell the controller to run and we're",
    "start": "890299",
    "end": "892459"
  },
  {
    "text": "just going to start getting those update",
    "start": "892459",
    "end": "894319"
  },
  {
    "text": "functions are automatically triggered",
    "start": "894319",
    "end": "895610"
  },
  {
    "text": "it's going to walk through this logic",
    "start": "895610",
    "end": "896749"
  },
  {
    "text": "and then it will reboot your note for",
    "start": "896749",
    "end": "898399"
  },
  {
    "text": "you just by adding an annotation so the",
    "start": "898399",
    "end": "900019"
  },
  {
    "text": "note object so then the next piece would",
    "start": "900019",
    "end": "903470"
  },
  {
    "start": "903000",
    "end": "903000"
  },
  {
    "text": "be the reboot controller itself and this",
    "start": "903470",
    "end": "909259"
  },
  {
    "text": "what we actually care about is is tying",
    "start": "909259",
    "end": "911660"
  },
  {
    "text": "into all three add update and delete",
    "start": "911660",
    "end": "913999"
  },
  {
    "text": "because it's possible that maybe the",
    "start": "913999",
    "end": "916160"
  },
  {
    "text": "maximum number of available notes has",
    "start": "916160",
    "end": "917869"
  },
  {
    "text": "changed if we added new nodes to our",
    "start": "917869",
    "end": "919699"
  },
  {
    "text": "clusters and maybe we can reboot more of",
    "start": "919699",
    "end": "921619"
  },
  {
    "text": "them now it's safe to actually reboot so",
    "start": "921619",
    "end": "923839"
  },
  {
    "text": "we're going to write a handler function",
    "start": "923839",
    "end": "925639"
  },
  {
    "text": "that can be used for add delete and then",
    "start": "925639",
    "end": "928370"
  },
  {
    "text": "update we only care about the new copy",
    "start": "928370",
    "end": "931129"
  },
  {
    "text": "of the object we don't care about the",
    "start": "931129",
    "end": "932809"
  },
  {
    "text": "old so we ignore it and",
    "start": "932809",
    "end": "934070"
  },
  {
    "text": "we just passed a new object directly on",
    "start": "934070",
    "end": "936700"
  },
  {
    "text": "so to go over that handler function what",
    "start": "936700",
    "end": "941630"
  },
  {
    "text": "we're going to do is the first thing is",
    "start": "941630",
    "end": "943250"
  },
  {
    "text": "if the reboot needed annotation exists",
    "start": "943250",
    "end": "946370"
  },
  {
    "text": "so this was that first step that we saw",
    "start": "946370",
    "end": "947930"
  },
  {
    "text": "where we just sprayed across the cluster",
    "start": "947930",
    "end": "949460"
  },
  {
    "text": "and said every node we want to we want",
    "start": "949460",
    "end": "951200"
  },
  {
    "text": "to reboot every node in the cluster but",
    "start": "951200",
    "end": "952760"
  },
  {
    "text": "we don't want to have to coordinate it",
    "start": "952760",
    "end": "953900"
  },
  {
    "text": "we just want to say that should happen",
    "start": "953900",
    "end": "955400"
  },
  {
    "text": "and then let this controller coordinate",
    "start": "955400",
    "end": "957590"
  },
  {
    "text": "that action for us and do it safely so",
    "start": "957590",
    "end": "959360"
  },
  {
    "text": "we just check well this node changed in",
    "start": "959360",
    "end": "962330"
  },
  {
    "text": "some way this node object changed does",
    "start": "962330",
    "end": "964310"
  },
  {
    "text": "it have that reboot needed annotation if",
    "start": "964310",
    "end": "966590"
  },
  {
    "text": "it doesn't then just move on we don't",
    "start": "966590",
    "end": "968510"
  },
  {
    "text": "care about this update at all the next",
    "start": "968510",
    "end": "970880"
  },
  {
    "text": "step would be if it does have that",
    "start": "970880",
    "end": "972560"
  },
  {
    "text": "annotation we know it needs to reboot",
    "start": "972560",
    "end": "974000"
  },
  {
    "text": "but we need to determine is it actually",
    "start": "974000",
    "end": "975560"
  },
  {
    "text": "safe to do so and so we're going to get",
    "start": "975560",
    "end": "978080"
  },
  {
    "text": "the number of unavailable nodes and",
    "start": "978080",
    "end": "980120"
  },
  {
    "text": "we're going to pair that events our",
    "start": "980120",
    "end": "981560"
  },
  {
    "text": "configurable of the max number and if",
    "start": "981560",
    "end": "983930"
  },
  {
    "text": "we're over that limit then we're just",
    "start": "983930",
    "end": "985130"
  },
  {
    "text": "going to return we're going to ignore",
    "start": "985130",
    "end": "986420"
  },
  {
    "text": "this because we're know based on the",
    "start": "986420",
    "end": "988370"
  },
  {
    "text": "recent period we're going to come back",
    "start": "988370",
    "end": "989690"
  },
  {
    "text": "later and we're going to check this node",
    "start": "989690",
    "end": "990980"
  },
  {
    "text": "again so we're not super worried that",
    "start": "990980",
    "end": "992780"
  },
  {
    "text": "we're just ignoring it for now we know",
    "start": "992780",
    "end": "994220"
  },
  {
    "text": "it needs to be rebooted later we'll",
    "start": "994220",
    "end": "995840"
  },
  {
    "text": "figure it out so that constant just",
    "start": "995840",
    "end": "997700"
  },
  {
    "text": "reconciliation mode but if we get to",
    "start": "997700",
    "end": "1000550"
  },
  {
    "text": "this point it's safe to reboot a node so",
    "start": "1000550",
    "end": "1003160"
  },
  {
    "text": "we can delete the reboot needed",
    "start": "1003160",
    "end": "1004480"
  },
  {
    "text": "annotation we add the reboot now",
    "start": "1004480",
    "end": "1006670"
  },
  {
    "text": "annotation and this is what ultimately",
    "start": "1006670",
    "end": "1008560"
  },
  {
    "text": "will coordinate with the with the agents",
    "start": "1008560",
    "end": "1010900"
  },
  {
    "text": "itself and then we update the object in",
    "start": "1010900",
    "end": "1013870"
  },
  {
    "text": "the API and then the agent will see this",
    "start": "1013870",
    "end": "1015760"
  },
  {
    "text": "change and that will reboot the node so",
    "start": "1015760",
    "end": "1018640"
  },
  {
    "text": "the pretty simple logic between the two",
    "start": "1018640",
    "end": "1020470"
  },
  {
    "text": "and we didn't even really have to write",
    "start": "1020470",
    "end": "1022330"
  },
  {
    "text": "that much code at all all of the client",
    "start": "1022330",
    "end": "1024280"
  },
  {
    "text": "logic is kind of handled for us the",
    "start": "1024280",
    "end": "1025810"
  },
  {
    "text": "Informer's handling local caching and",
    "start": "1025810",
    "end": "1027850"
  },
  {
    "text": "and bubbling up of events I do want to",
    "start": "1027850",
    "end": "1031750"
  },
  {
    "text": "touch on the get unavailable function",
    "start": "1031750",
    "end": "1033819"
  },
  {
    "text": "because this this touches on how to use",
    "start": "1033820",
    "end": "1035860"
  },
  {
    "text": "the cache as well so how I showed before",
    "start": "1035860",
    "end": "1038709"
  },
  {
    "text": "when you are using the client to list",
    "start": "1038709",
    "end": "1040600"
  },
  {
    "text": "all the nodes in the cluster what does",
    "start": "1040600",
    "end": "1043420"
  },
  {
    "text": "what this could happen is that you know",
    "start": "1043420",
    "end": "1045670"
  },
  {
    "text": "we're getting this update we're getting",
    "start": "1045670",
    "end": "1047470"
  },
  {
    "text": "this update event and it says okay it's",
    "start": "1047470",
    "end": "1049690"
  },
  {
    "text": "got a reboot now annotation but then",
    "start": "1049690",
    "end": "1051700"
  },
  {
    "text": "every time you see that you're going to",
    "start": "1051700",
    "end": "1053320"
  },
  {
    "text": "say well then give me every node in the",
    "start": "1053320",
    "end": "1054940"
  },
  {
    "text": "cluster so I can determine whether it's",
    "start": "1054940",
    "end": "1056530"
  },
  {
    "text": "safe to reboot or not and that could be",
    "start": "1056530",
    "end": "1058420"
  },
  {
    "text": "an expensive operation if you're going",
    "start": "1058420",
    "end": "1059950"
  },
  {
    "text": "to the API every time instead because",
    "start": "1059950",
    "end": "1062440"
  },
  {
    "text": "our Informer gives us both those events",
    "start": "1062440",
    "end": "1064090"
  },
  {
    "text": "as well as",
    "start": "1064090",
    "end": "1065990"
  },
  {
    "text": "the local cash we use ask the local cash",
    "start": "1065990",
    "end": "1068390"
  },
  {
    "text": "so we get the event and then we get that",
    "start": "1068390",
    "end": "1070250"
  },
  {
    "text": "node store and we say node store list",
    "start": "1070250",
    "end": "1072559"
  },
  {
    "text": "and then we just get all of the nodes",
    "start": "1072559",
    "end": "1074210"
  },
  {
    "text": "and it's not an expensive operation",
    "start": "1074210",
    "end": "1075950"
  },
  {
    "text": "so it's cheap for us to say just go",
    "start": "1075950",
    "end": "1077660"
  },
  {
    "text": "relook at the state over and over again",
    "start": "1077660",
    "end": "1079429"
  },
  {
    "text": "and we know that the Informer has kept",
    "start": "1079429",
    "end": "1081200"
  },
  {
    "text": "it up-to-date for us so in this case we",
    "start": "1081200",
    "end": "1083540"
  },
  {
    "text": "just get them all and then we determine",
    "start": "1083540",
    "end": "1084770"
  },
  {
    "text": "is the node rebooting or is the node in",
    "start": "1084770",
    "end": "1087170"
  },
  {
    "text": "a not ready state we should add it to",
    "start": "1087170",
    "end": "1088970"
  },
  {
    "text": "this count of unavailable nodes so even",
    "start": "1088970",
    "end": "1093710"
  },
  {
    "text": "though those those examples seem pretty",
    "start": "1093710",
    "end": "1096920"
  },
  {
    "text": "simple we did do some things that we",
    "start": "1096920",
    "end": "1098240"
  },
  {
    "text": "probably shouldn't have done and so I",
    "start": "1098240",
    "end": "1099500"
  },
  {
    "text": "want to touch on those one is you",
    "start": "1099500",
    "end": "1101990"
  },
  {
    "text": "shouldn't actually modify cash objects",
    "start": "1101990",
    "end": "1103820"
  },
  {
    "text": "and I was doing this and those examples",
    "start": "1103820",
    "end": "1105710"
  },
  {
    "text": "for brevity but this is an example of",
    "start": "1105710",
    "end": "1107809"
  },
  {
    "text": "something we did we were getting an",
    "start": "1107809",
    "end": "1109460"
  },
  {
    "text": "object from the cache and then we were",
    "start": "1109460",
    "end": "1111410"
  },
  {
    "text": "mutating it we were changing the",
    "start": "1111410",
    "end": "1113210"
  },
  {
    "text": "annotation and then we were updating it",
    "start": "1113210",
    "end": "1115370"
  },
  {
    "text": "in the API but if that update call fails",
    "start": "1115370",
    "end": "1117559"
  },
  {
    "text": "then our cache is now incorrect until it",
    "start": "1117559",
    "end": "1121220"
  },
  {
    "text": "gets resync",
    "start": "1121220",
    "end": "1122030"
  },
  {
    "text": "a lot another common pattern here is",
    "start": "1122030",
    "end": "1124220"
  },
  {
    "text": "that you might have multiple routines",
    "start": "1124220",
    "end": "1126559"
  },
  {
    "text": "that are all operating on the cache at",
    "start": "1126559",
    "end": "1128030"
  },
  {
    "text": "the same time so you've just invalidated",
    "start": "1128030",
    "end": "1130010"
  },
  {
    "text": "the cache for other routines that may be",
    "start": "1130010",
    "end": "1131900"
  },
  {
    "text": "expecting to operate off of that object",
    "start": "1131900",
    "end": "1133490"
  },
  {
    "text": "so the solution to this is fairly",
    "start": "1133490",
    "end": "1135980"
  },
  {
    "text": "straightforward it's use API scheme copy",
    "start": "1135980",
    "end": "1138910"
  },
  {
    "start": "1137000",
    "end": "1137000"
  },
  {
    "text": "again this kind of takes care of these",
    "start": "1138910",
    "end": "1141170"
  },
  {
    "text": "difficulties for us but it's just if you",
    "start": "1141170",
    "end": "1143690"
  },
  {
    "text": "need to make any kind of changes to",
    "start": "1143690",
    "end": "1145070"
  },
  {
    "text": "objects that you've pulled from the",
    "start": "1145070",
    "end": "1146390"
  },
  {
    "text": "cache treat them as read-only make a",
    "start": "1146390",
    "end": "1148370"
  },
  {
    "text": "copy of them and then just make your",
    "start": "1148370",
    "end": "1150530"
  },
  {
    "text": "modifications against that another big",
    "start": "1150530",
    "end": "1153980"
  },
  {
    "start": "1153000",
    "end": "1153000"
  },
  {
    "text": "thing to note is that you really",
    "start": "1153980",
    "end": "1155750"
  },
  {
    "text": "shouldn't do for the most time for the",
    "start": "1155750",
    "end": "1158450"
  },
  {
    "text": "most part any kind of operations until",
    "start": "1158450",
    "end": "1160309"
  },
  {
    "text": "you've determined that your cache is",
    "start": "1160309",
    "end": "1161600"
  },
  {
    "text": "actually synced completely and so",
    "start": "1161600",
    "end": "1163720"
  },
  {
    "text": "imagine that we we started our",
    "start": "1163720",
    "end": "1166100"
  },
  {
    "text": "controller and then we immediately look",
    "start": "1166100",
    "end": "1167750"
  },
  {
    "text": "how many nodes are in an unavailable",
    "start": "1167750",
    "end": "1169640"
  },
  {
    "text": "state but maybe we've only half-filled",
    "start": "1169640",
    "end": "1171890"
  },
  {
    "text": "our cache and we don't actually have a",
    "start": "1171890",
    "end": "1173330"
  },
  {
    "text": "full view of the world so this is",
    "start": "1173330",
    "end": "1175070"
  },
  {
    "text": "relatively easy to check once you start",
    "start": "1175070",
    "end": "1176900"
  },
  {
    "text": "your controller you can ask it has it",
    "start": "1176900",
    "end": "1178700"
  },
  {
    "text": "synced yet and then just don't start any",
    "start": "1178700",
    "end": "1180920"
  },
  {
    "text": "of your processing until that happened",
    "start": "1180920",
    "end": "1182480"
  },
  {
    "text": "but it's just a common pattern to follow",
    "start": "1182480",
    "end": "1184040"
  },
  {
    "text": "or something to be aware of that you",
    "start": "1184040",
    "end": "1185809"
  },
  {
    "text": "could start up your program and it can",
    "start": "1185809",
    "end": "1187130"
  },
  {
    "text": "make some bad decisions based on a",
    "start": "1187130",
    "end": "1188690"
  },
  {
    "text": "partial cache state some of the other",
    "start": "1188690",
    "end": "1192800"
  },
  {
    "text": "things that I want to go over some",
    "start": "1192800",
    "end": "1194690"
  },
  {
    "text": "helpful tools that you know we didn't",
    "start": "1194690",
    "end": "1196970"
  },
  {
    "text": "actually use",
    "start": "1196970",
    "end": "1198370"
  },
  {
    "text": "so leader election work use third-party",
    "start": "1198370",
    "end": "1201460"
  },
  {
    "text": "resources and shared informers so we go",
    "start": "1201460",
    "end": "1204490"
  },
  {
    "text": "over each of those so leader election I",
    "start": "1204490",
    "end": "1206980"
  },
  {
    "text": "didn't use because it's not in the",
    "start": "1206980",
    "end": "1208390"
  },
  {
    "text": "client go library yet there's an open",
    "start": "1208390",
    "end": "1210760"
  },
  {
    "text": "issue about that it can be vendor",
    "start": "1210760",
    "end": "1213130"
  },
  {
    "text": "directly from the kubernetes repository",
    "start": "1213130",
    "end": "1214809"
  },
  {
    "text": "but that does mean that your vendor in a",
    "start": "1214809",
    "end": "1216309"
  },
  {
    "text": "whole lot more code but it is a really",
    "start": "1216309",
    "end": "1218740"
  },
  {
    "text": "useful construct so in the scheduling",
    "start": "1218740",
    "end": "1221140"
  },
  {
    "text": "the controller manager for example these",
    "start": "1221140",
    "end": "1222850"
  },
  {
    "text": "are both leader elected components and",
    "start": "1222850",
    "end": "1225100"
  },
  {
    "text": "you can actually copy the the code out",
    "start": "1225100",
    "end": "1227140"
  },
  {
    "text": "of those if you want a reference example",
    "start": "1227140",
    "end": "1229380"
  },
  {
    "text": "but so you can run multiple copies have",
    "start": "1229380",
    "end": "1232149"
  },
  {
    "text": "have hots payers running and that you",
    "start": "1232149",
    "end": "1233860"
  },
  {
    "text": "know that they're their leader elected",
    "start": "1233860",
    "end": "1235149"
  },
  {
    "text": "so in our case for the reboot controller",
    "start": "1235149",
    "end": "1237399"
  },
  {
    "text": "when we set replicas equals one that's",
    "start": "1237399",
    "end": "1239529"
  },
  {
    "text": "because we don't want them fighting over",
    "start": "1239529",
    "end": "1241000"
  },
  {
    "text": "the decision of how many nodes to reboot",
    "start": "1241000",
    "end": "1242559"
  },
  {
    "text": "you could get into two bad situations so",
    "start": "1242559",
    "end": "1245020"
  },
  {
    "text": "leader election would be one method of",
    "start": "1245020",
    "end": "1246700"
  },
  {
    "text": "protecting against that another is work",
    "start": "1246700",
    "end": "1249669"
  },
  {
    "text": "use so these are not in client go v2 but",
    "start": "1249669",
    "end": "1252700"
  },
  {
    "text": "they are and they they should be in v3",
    "start": "1252700",
    "end": "1254860"
  },
  {
    "text": "pretty soon and these just allow you to",
    "start": "1254860",
    "end": "1257350"
  },
  {
    "text": "easily parallel eyes processing they",
    "start": "1257350",
    "end": "1260140"
  },
  {
    "text": "have nice cue types like rate limiting",
    "start": "1260140",
    "end": "1261880"
  },
  {
    "text": "so if you get in a hot loop of trying to",
    "start": "1261880",
    "end": "1263590"
  },
  {
    "text": "do some action on an event and it fails",
    "start": "1263590",
    "end": "1265350"
  },
  {
    "text": "it's going to take care of backing off",
    "start": "1265350",
    "end": "1267730"
  },
  {
    "text": "riku event for you you can also just",
    "start": "1267730",
    "end": "1270730"
  },
  {
    "text": "simple things like collapsing multiple",
    "start": "1270730",
    "end": "1272260"
  },
  {
    "text": "updates into the same into the same work",
    "start": "1272260",
    "end": "1275200"
  },
  {
    "text": "item and so the reboot controller can",
    "start": "1275200",
    "end": "1276820"
  },
  {
    "text": "MIT take advantage of this maybe the",
    "start": "1276820",
    "end": "1278140"
  },
  {
    "text": "note has been updated multiple times but",
    "start": "1278140",
    "end": "1280360"
  },
  {
    "text": "we only want to pop that off once and",
    "start": "1280360",
    "end": "1282179"
  },
  {
    "text": "take action on it and then the other",
    "start": "1282179",
    "end": "1284500"
  },
  {
    "text": "thing with with the work uses that",
    "start": "1284500",
    "end": "1286390"
  },
  {
    "text": "pattern where you need to wait for your",
    "start": "1286390",
    "end": "1288789"
  },
  {
    "text": "seeing your your cash flows thing it",
    "start": "1288789",
    "end": "1290890"
  },
  {
    "text": "just makes that pattern super easy",
    "start": "1290890",
    "end": "1292240"
  },
  {
    "text": "because your event handlers are all",
    "start": "1292240",
    "end": "1293890"
  },
  {
    "text": "essentially just pushing onto a work",
    "start": "1293890",
    "end": "1295419"
  },
  {
    "text": "queue and then you're spinning up",
    "start": "1295419",
    "end": "1296860"
  },
  {
    "text": "workers that are now just consuming off",
    "start": "1296860",
    "end": "1298450"
  },
  {
    "text": "of that queue so you just don't start",
    "start": "1298450",
    "end": "1299890"
  },
  {
    "text": "them until you said okay my cash is",
    "start": "1299890",
    "end": "1302080"
  },
  {
    "text": "synced even though these events are",
    "start": "1302080",
    "end": "1303789"
  },
  {
    "text": "filing and filling up the queue now I",
    "start": "1303789",
    "end": "1305440"
  },
  {
    "text": "can start popping them off and",
    "start": "1305440",
    "end": "1306789"
  },
  {
    "text": "processing third-party resources this",
    "start": "1306789",
    "end": "1310539"
  },
  {
    "start": "1308000",
    "end": "1308000"
  },
  {
    "text": "actually is a presentation unto itself",
    "start": "1310539",
    "end": "1314380"
  },
  {
    "text": "but it's a really important topic if",
    "start": "1314380",
    "end": "1317110"
  },
  {
    "text": "you're unfamiliar essentially what they",
    "start": "1317110",
    "end": "1318760"
  },
  {
    "text": "allow you to do is dynamically create",
    "start": "1318760",
    "end": "1320770"
  },
  {
    "text": "new objects in in the API and so this",
    "start": "1320770",
    "end": "1324580"
  },
  {
    "text": "can be really powerful because in our",
    "start": "1324580",
    "end": "1326830"
  },
  {
    "text": "controller what we did was we were",
    "start": "1326830",
    "end": "1329110"
  },
  {
    "text": "adding annotations to nodes because that",
    "start": "1329110",
    "end": "1330850"
  },
  {
    "text": "fits the model we're talking",
    "start": "1330850",
    "end": "1332200"
  },
  {
    "text": "about rebooting nodes so adding an",
    "start": "1332200",
    "end": "1333669"
  },
  {
    "text": "annotation to a node kind of makes sense",
    "start": "1333669",
    "end": "1335440"
  },
  {
    "text": "but maybe the action that you want to",
    "start": "1335440",
    "end": "1337600"
  },
  {
    "text": "take doesn't have anything to do with",
    "start": "1337600",
    "end": "1339340"
  },
  {
    "text": "nodes or an existing object so",
    "start": "1339340",
    "end": "1341289"
  },
  {
    "text": "third-party resources you can create an",
    "start": "1341289",
    "end": "1342909"
  },
  {
    "text": "entirely new object and so an example of",
    "start": "1342909",
    "end": "1345850"
  },
  {
    "text": "this is the sed operator what it does is",
    "start": "1345850",
    "end": "1348700"
  },
  {
    "text": "there's a new third-party resource",
    "start": "1348700",
    "end": "1350260"
  },
  {
    "text": "object called a TD cluster and you can",
    "start": "1350260",
    "end": "1352539"
  },
  {
    "text": "stamp out new sed clusters and it has a",
    "start": "1352539",
    "end": "1354789"
  },
  {
    "text": "data type where you can say you know the",
    "start": "1354789",
    "end": "1357130"
  },
  {
    "text": "number of replicas that I want are three",
    "start": "1357130",
    "end": "1358809"
  },
  {
    "text": "and the version is X and then it's going",
    "start": "1358809",
    "end": "1361120"
  },
  {
    "text": "to take that object and then use that to",
    "start": "1361120",
    "end": "1363130"
  },
  {
    "text": "then start up a cluster but there was no",
    "start": "1363130",
    "end": "1364840"
  },
  {
    "text": "existing you know objects it would be",
    "start": "1364840",
    "end": "1366909"
  },
  {
    "text": "well that liked to be used to well",
    "start": "1366909",
    "end": "1368380"
  },
  {
    "text": "describe that need so this is a really",
    "start": "1368380",
    "end": "1370990"
  },
  {
    "text": "powerful thing in terms of like our",
    "start": "1370990",
    "end": "1373269"
  },
  {
    "text": "reboot controller something that we",
    "start": "1373269",
    "end": "1375159"
  },
  {
    "text": "could do is you know maybe adding reboot",
    "start": "1375159",
    "end": "1377919"
  },
  {
    "text": "groups third party resource and so you",
    "start": "1377919",
    "end": "1380260"
  },
  {
    "text": "could define new groups maybe by label",
    "start": "1380260",
    "end": "1382779"
  },
  {
    "text": "selectors of this is my master group and",
    "start": "1382779",
    "end": "1385539"
  },
  {
    "text": "I want them to only reboot based on I",
    "start": "1385539",
    "end": "1388210"
  },
  {
    "text": "only want one node to be down at a time",
    "start": "1388210",
    "end": "1390010"
  },
  {
    "text": "but my workers I don't care if there's",
    "start": "1390010",
    "end": "1391480"
  },
  {
    "text": "three nodes down at a time something of",
    "start": "1391480",
    "end": "1393220"
  },
  {
    "text": "that sort",
    "start": "1393220",
    "end": "1395580"
  },
  {
    "text": "another thing are the shared informers",
    "start": "1395799",
    "end": "1399039"
  },
  {
    "text": "so what this means is that when we're",
    "start": "1399039",
    "end": "1402100"
  },
  {
    "text": "stamping out these informers are",
    "start": "1402100",
    "end": "1403389"
  },
  {
    "text": "creating a local cache for that one",
    "start": "1403389",
    "end": "1407649"
  },
  {
    "text": "Informer and so you're saying this is a",
    "start": "1407649",
    "end": "1409690"
  },
  {
    "text": "set of objects that I care about I care",
    "start": "1409690",
    "end": "1411220"
  },
  {
    "text": "about this set of nodes and you're going",
    "start": "1411220",
    "end": "1412720"
  },
  {
    "text": "to create a cache for that set of nodes",
    "start": "1412720",
    "end": "1414880"
  },
  {
    "text": "but what can end up happening is that",
    "start": "1414880",
    "end": "1416649"
  },
  {
    "text": "maybe you care about a whole bunch of",
    "start": "1416649",
    "end": "1418570"
  },
  {
    "text": "different set of nodes but they may be",
    "start": "1418570",
    "end": "1419919"
  },
  {
    "text": "overlapping sets in this case a shared",
    "start": "1419919",
    "end": "1423010"
  },
  {
    "text": "Informer means that it has a single",
    "start": "1423010",
    "end": "1424419"
  },
  {
    "text": "shared cache amongst all the informers",
    "start": "1424419",
    "end": "1426730"
  },
  {
    "text": "but then you can stamp out new informers",
    "start": "1426730",
    "end": "1428889"
  },
  {
    "text": "that maybe this one only cares about one",
    "start": "1428889",
    "end": "1430450"
  },
  {
    "text": "node and this cares about all the nodes",
    "start": "1430450",
    "end": "1432340"
  },
  {
    "text": "but you're not duplicating that so it's",
    "start": "1432340",
    "end": "1434080"
  },
  {
    "text": "a much lower memory overhead this is a",
    "start": "1434080",
    "end": "1436090"
  },
  {
    "text": "common pattern found in coop controller",
    "start": "1436090",
    "end": "1438279"
  },
  {
    "text": "manager because it had so many internal",
    "start": "1438279",
    "end": "1440320"
  },
  {
    "text": "controllers but one of the things that I",
    "start": "1440320",
    "end": "1443590"
  },
  {
    "text": "found is that I don't actually end up",
    "start": "1443590",
    "end": "1445659"
  },
  {
    "text": "using this in practice because most of",
    "start": "1445659",
    "end": "1447279"
  },
  {
    "text": "the time what I'm writing is going to be",
    "start": "1447279",
    "end": "1449350"
  },
  {
    "text": "a single task controller like in this",
    "start": "1449350",
    "end": "1451419"
  },
  {
    "text": "case the the controller that we go over",
    "start": "1451419",
    "end": "1453549"
  },
  {
    "text": "is that I just care about one node or I",
    "start": "1453549",
    "end": "1455919"
  },
  {
    "text": "care about all nodes and those are the",
    "start": "1455919",
    "end": "1457269"
  },
  {
    "text": "only things that I'm watching so it",
    "start": "1457269",
    "end": "1458710"
  },
  {
    "text": "wouldn't help very much in this case and",
    "start": "1458710",
    "end": "1460539"
  },
  {
    "text": "it's also good to note that there is",
    "start": "1460539",
    "end": "1461980"
  },
  {
    "text": "some slightly different behavior of",
    "start": "1461980",
    "end": "1464440"
  },
  {
    "text": "shared informers but it's",
    "start": "1464440",
    "end": "1465940"
  },
  {
    "text": "fairly well-documented so in general if",
    "start": "1465940",
    "end": "1470290"
  },
  {
    "start": "1468000",
    "end": "1468000"
  },
  {
    "text": "you are going to try and write some some",
    "start": "1470290",
    "end": "1472990"
  },
  {
    "text": "custom controllers some helpful",
    "start": "1472990",
    "end": "1474340"
  },
  {
    "text": "resources under the community repository",
    "start": "1474340",
    "end": "1477520"
  },
  {
    "text": "there is a controllers document that",
    "start": "1477520",
    "end": "1481150"
  },
  {
    "text": "describes a lot of the stuff that I'm",
    "start": "1481150",
    "end": "1482380"
  },
  {
    "text": "talking about best practices things you",
    "start": "1482380",
    "end": "1484540"
  },
  {
    "text": "should do things you shouldn't do",
    "start": "1484540",
    "end": "1486210"
  },
  {
    "text": "there's also in terms of there's some",
    "start": "1486210",
    "end": "1489280"
  },
  {
    "text": "design principles about control logic",
    "start": "1489280",
    "end": "1491010"
  },
  {
    "text": "just these are these are internal things",
    "start": "1491010",
    "end": "1493720"
  },
  {
    "text": "for kubernetes itself but they're very",
    "start": "1493720",
    "end": "1495820"
  },
  {
    "text": "good patterns to follow so they're good",
    "start": "1495820",
    "end": "1497470"
  },
  {
    "text": "things to take a look at when if you",
    "start": "1497470",
    "end": "1500860"
  },
  {
    "text": "want like reference examples under the",
    "start": "1500860",
    "end": "1502480"
  },
  {
    "text": "kubernetes repository package controller",
    "start": "1502480",
    "end": "1504490"
  },
  {
    "text": "just have pretty much every internal",
    "start": "1504490",
    "end": "1506620"
  },
  {
    "text": "controller code in there and so there's",
    "start": "1506620",
    "end": "1508360"
  },
  {
    "text": "a lot of good examples that you can you",
    "start": "1508360",
    "end": "1509740"
  },
  {
    "text": "for use for reference the first time I",
    "start": "1509740",
    "end": "1511750"
  },
  {
    "text": "was writing this kind of pattern I just",
    "start": "1511750",
    "end": "1513550"
  },
  {
    "text": "looked at how Kubb dns did that how did",
    "start": "1513550",
    "end": "1515890"
  },
  {
    "text": "it create a client how did it ask the",
    "start": "1515890",
    "end": "1517600"
  },
  {
    "text": "API server for services how did it keep",
    "start": "1517600",
    "end": "1519520"
  },
  {
    "text": "them updated so same kind of thing you",
    "start": "1519520",
    "end": "1521890"
  },
  {
    "text": "can just follow these patterns pretty",
    "start": "1521890",
    "end": "1523240"
  },
  {
    "text": "easily the client go repository itself",
    "start": "1523240",
    "end": "1525910"
  },
  {
    "text": "has a lot of good examples it shows in",
    "start": "1525910",
    "end": "1528460"
  },
  {
    "text": "the examples directory there's how to",
    "start": "1528460",
    "end": "1529690"
  },
  {
    "text": "interact with third-party resources how",
    "start": "1529690",
    "end": "1531670"
  },
  {
    "text": "to create different kinds of clients as",
    "start": "1531670",
    "end": "1534130"
  },
  {
    "text": "I said before the tube controller demo",
    "start": "1534130",
    "end": "1536110"
  },
  {
    "text": "there's a functional copy of this in in",
    "start": "1536110",
    "end": "1538720"
  },
  {
    "text": "that repository and then also I'm",
    "start": "1538720",
    "end": "1541420"
  },
  {
    "text": "talking about using client go but it",
    "start": "1541420",
    "end": "1543400"
  },
  {
    "text": "just isn't restricted to just using go",
    "start": "1543400",
    "end": "1545830"
  },
  {
    "text": "I wanted to link to another operator",
    "start": "1545830",
    "end": "1548110"
  },
  {
    "text": "that is based on Python and so that",
    "start": "1548110",
    "end": "1550240"
  },
  {
    "text": "might be another example you could look",
    "start": "1550240",
    "end": "1551620"
  },
  {
    "text": "at using a different language to kind of",
    "start": "1551620",
    "end": "1553060"
  },
  {
    "text": "follow the same pattern watch the API",
    "start": "1553060",
    "end": "1554770"
  },
  {
    "text": "and and take action on it",
    "start": "1554770",
    "end": "1557760"
  },
  {
    "text": "so yeah thanks",
    "start": "1557760",
    "end": "1561720"
  }
]