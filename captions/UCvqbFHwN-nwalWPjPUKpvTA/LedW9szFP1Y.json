[
  {
    "start": "0",
    "end": "52000"
  },
  {
    "text": "hello everybody and welcome to the cloud",
    "start": "0",
    "end": "3840"
  },
  {
    "text": "provider aws update and roadmap",
    "start": "3840",
    "end": "6960"
  },
  {
    "text": "at kubecon europe 2021",
    "start": "6960",
    "end": "11519"
  },
  {
    "text": "we'll start off going through the agenda",
    "start": "14559",
    "end": "16480"
  },
  {
    "text": "that we have for today",
    "start": "16480",
    "end": "18160"
  },
  {
    "text": "uh so first i'll be talking",
    "start": "18160",
    "end": "21520"
  },
  {
    "text": "through the background of the cloud",
    "start": "21520",
    "end": "24080"
  },
  {
    "text": "provider extraction migration",
    "start": "24080",
    "end": "26720"
  },
  {
    "text": "um and the status",
    "start": "26720",
    "end": "30000"
  },
  {
    "text": "of the cloud controller manager then",
    "start": "30000",
    "end": "33440"
  },
  {
    "text": "nicole will be talking about the cloud",
    "start": "33440",
    "end": "36160"
  },
  {
    "text": "provider v2",
    "start": "36160",
    "end": "37200"
  },
  {
    "text": "effort uh after that a burke will touch",
    "start": "37200",
    "end": "40399"
  },
  {
    "text": "on the credential provider",
    "start": "40399",
    "end": "42399"
  },
  {
    "text": "and finally yang yang will uh",
    "start": "42399",
    "end": "45680"
  },
  {
    "text": "give us a little bit of information",
    "start": "45680",
    "end": "46960"
  },
  {
    "text": "about the aws load balancer controller",
    "start": "46960",
    "end": "48719"
  },
  {
    "text": "and the roadmap there",
    "start": "48719",
    "end": "51760"
  },
  {
    "text": "so let's get started um okay so",
    "start": "51840",
    "end": "55840"
  },
  {
    "start": "52000",
    "end": "323000"
  },
  {
    "text": "um so to touch on the background of the",
    "start": "55840",
    "end": "59120"
  },
  {
    "text": "cloud provider",
    "start": "59120",
    "end": "60640"
  },
  {
    "text": "extraction effort this is something",
    "start": "60640",
    "end": "62800"
  },
  {
    "text": "that's been going on for quite some time",
    "start": "62800",
    "end": "64478"
  },
  {
    "text": "in the community",
    "start": "64479",
    "end": "66400"
  },
  {
    "text": "uh the original implementation in",
    "start": "66400",
    "end": "69439"
  },
  {
    "text": "kubernetes",
    "start": "69439",
    "end": "70479"
  },
  {
    "text": "uh had a go interface called the cloud",
    "start": "70479",
    "end": "73600"
  },
  {
    "text": "provider interface that was",
    "start": "73600",
    "end": "75520"
  },
  {
    "text": "built into kubernetes along with the",
    "start": "75520",
    "end": "78000"
  },
  {
    "text": "each",
    "start": "78000",
    "end": "78560"
  },
  {
    "text": "cloud provider's implementation so",
    "start": "78560",
    "end": "82320"
  },
  {
    "text": "the initial versions of every cloud",
    "start": "82320",
    "end": "84159"
  },
  {
    "text": "provider was actually compiled into all",
    "start": "84159",
    "end": "86080"
  },
  {
    "text": "to each binary but the community quickly",
    "start": "86080",
    "end": "89439"
  },
  {
    "text": "realized that this was",
    "start": "89439",
    "end": "91840"
  },
  {
    "text": "already causing and just going to",
    "start": "91840",
    "end": "94320"
  },
  {
    "text": "continue to cause significant bloat",
    "start": "94320",
    "end": "96560"
  },
  {
    "text": "as more cloud providers were added um",
    "start": "96560",
    "end": "100560"
  },
  {
    "text": "and the the maintenance effort was just",
    "start": "100560",
    "end": "103439"
  },
  {
    "text": "going to be too",
    "start": "103439",
    "end": "104320"
  },
  {
    "text": "great um so the the effort was started",
    "start": "104320",
    "end": "108079"
  },
  {
    "text": "to extract",
    "start": "108079",
    "end": "109520"
  },
  {
    "text": "all of the cloud provider specific code",
    "start": "109520",
    "end": "112399"
  },
  {
    "text": "um",
    "start": "112399",
    "end": "113040"
  },
  {
    "text": "so that's like each cloud provider's sdk",
    "start": "113040",
    "end": "116000"
  },
  {
    "text": "and",
    "start": "116000",
    "end": "116479"
  },
  {
    "text": "uh any logic that is specific to a cloud",
    "start": "116479",
    "end": "119040"
  },
  {
    "text": "provider",
    "start": "119040",
    "end": "119840"
  },
  {
    "text": "would be broken out into separate",
    "start": "119840",
    "end": "122719"
  },
  {
    "text": "repositories",
    "start": "122719",
    "end": "124159"
  },
  {
    "text": "um and compiled into separate binaries",
    "start": "124159",
    "end": "127520"
  },
  {
    "text": "not using the main build system so",
    "start": "127520",
    "end": "130720"
  },
  {
    "text": "this really this began a multi-year",
    "start": "130720",
    "end": "132560"
  },
  {
    "text": "effort",
    "start": "132560",
    "end": "134560"
  },
  {
    "text": "to extract all the code and",
    "start": "134560",
    "end": "138080"
  },
  {
    "text": "that's still going on today",
    "start": "138080",
    "end": "142720"
  },
  {
    "text": "um so i just wanted to",
    "start": "142720",
    "end": "146080"
  },
  {
    "text": "quickly go over each of the components",
    "start": "146080",
    "end": "149920"
  },
  {
    "text": "that had cloud provider code or have",
    "start": "149920",
    "end": "151920"
  },
  {
    "text": "cloud provider code and",
    "start": "151920",
    "end": "153360"
  },
  {
    "text": "the extraction effort related to those",
    "start": "153360",
    "end": "157680"
  },
  {
    "text": "so first uh the the cube controller",
    "start": "157680",
    "end": "160879"
  },
  {
    "text": "manager",
    "start": "160879",
    "end": "162239"
  },
  {
    "text": "there was some cloud provider related",
    "start": "162239",
    "end": "165120"
  },
  {
    "text": "code",
    "start": "165120",
    "end": "165599"
  },
  {
    "text": "in four of the controllers",
    "start": "165599",
    "end": "169200"
  },
  {
    "text": "that would become the cloud controller",
    "start": "169200",
    "end": "171760"
  },
  {
    "text": "manager",
    "start": "171760",
    "end": "172879"
  },
  {
    "text": "that includes the node the node",
    "start": "172879",
    "end": "174720"
  },
  {
    "text": "lifecycle the service",
    "start": "174720",
    "end": "176400"
  },
  {
    "text": "and the route controllers and we'll talk",
    "start": "176400",
    "end": "178560"
  },
  {
    "text": "about those in a little bit more detail",
    "start": "178560",
    "end": "180800"
  },
  {
    "text": "a little bit later and then there was",
    "start": "180800",
    "end": "183840"
  },
  {
    "text": "also the the volume uh control loops",
    "start": "183840",
    "end": "188480"
  },
  {
    "text": "and those um are being replaced by the",
    "start": "188480",
    "end": "192239"
  },
  {
    "text": "csi",
    "start": "192239",
    "end": "193120"
  },
  {
    "text": "driver effort so for aws that",
    "start": "193120",
    "end": "196480"
  },
  {
    "text": "would be the ebs cs csi driver",
    "start": "196480",
    "end": "199840"
  },
  {
    "text": "or the uh fsx csi driver",
    "start": "199840",
    "end": "204879"
  },
  {
    "text": "and another component",
    "start": "204879",
    "end": "208159"
  },
  {
    "text": "is cubelet cubelet has a couple areas of",
    "start": "208159",
    "end": "210959"
  },
  {
    "text": "quad provider code",
    "start": "210959",
    "end": "212799"
  },
  {
    "text": "one of which is the docker image",
    "start": "212799",
    "end": "214720"
  },
  {
    "text": "credential provider",
    "start": "214720",
    "end": "216239"
  },
  {
    "text": "so this was some code that was built",
    "start": "216239",
    "end": "218799"
  },
  {
    "text": "into",
    "start": "218799",
    "end": "219840"
  },
  {
    "text": "cubelet and four common container",
    "start": "219840",
    "end": "222959"
  },
  {
    "text": "registries like ecr",
    "start": "222959",
    "end": "225519"
  },
  {
    "text": "there was a package there that would",
    "start": "225519",
    "end": "228080"
  },
  {
    "text": "provide the",
    "start": "228080",
    "end": "229120"
  },
  {
    "text": "the docker image credentials when",
    "start": "229120",
    "end": "231599"
  },
  {
    "text": "cubelet was doing a pull image",
    "start": "231599",
    "end": "234319"
  },
  {
    "text": "and that is being replaced by a external",
    "start": "234319",
    "end": "237599"
  },
  {
    "text": "binary that cubelet will exec",
    "start": "237599",
    "end": "241599"
  },
  {
    "text": "it's very similar logic it's just",
    "start": "241599",
    "end": "244879"
  },
  {
    "text": "outside of cubelet cubelet execs it",
    "start": "244879",
    "end": "247120"
  },
  {
    "text": "during pull image and",
    "start": "247120",
    "end": "248959"
  },
  {
    "text": "gets the credentials back",
    "start": "248959",
    "end": "255840"
  },
  {
    "text": "uh additionally um the other area of",
    "start": "255920",
    "end": "260000"
  },
  {
    "text": "code in cubelet",
    "start": "260000",
    "end": "261600"
  },
  {
    "text": "was fetching node addresses which is",
    "start": "261600",
    "end": "264560"
  },
  {
    "text": "being replaced",
    "start": "264560",
    "end": "265840"
  },
  {
    "text": "in the cloud controller manager and the",
    "start": "265840",
    "end": "267919"
  },
  {
    "text": "node controller",
    "start": "267919",
    "end": "270639"
  },
  {
    "text": "a couple other areas that are worth",
    "start": "270720",
    "end": "272800"
  },
  {
    "text": "mentioning is the",
    "start": "272800",
    "end": "274160"
  },
  {
    "text": "api server had the capability to do ssh",
    "start": "274160",
    "end": "277280"
  },
  {
    "text": "tunnels",
    "start": "277280",
    "end": "278720"
  },
  {
    "text": "but this was so this was",
    "start": "278720",
    "end": "282560"
  },
  {
    "text": "related to cloud provider code because",
    "start": "282560",
    "end": "284160"
  },
  {
    "text": "the api server had some",
    "start": "284160",
    "end": "286320"
  },
  {
    "text": "flags that it took uh that enabled ssh",
    "start": "286320",
    "end": "289840"
  },
  {
    "text": "tunnels only on",
    "start": "289840",
    "end": "292000"
  },
  {
    "text": "gcp and so that effort is being replaced",
    "start": "292000",
    "end": "295199"
  },
  {
    "text": "by the",
    "start": "295199",
    "end": "296160"
  },
  {
    "text": "network proxy effort and",
    "start": "296160",
    "end": "299600"
  },
  {
    "text": "finally the cube api server",
    "start": "299600",
    "end": "302880"
  },
  {
    "text": "initially had a persistent volume",
    "start": "302880",
    "end": "307120"
  },
  {
    "text": "mutating web hook and",
    "start": "307120",
    "end": "310160"
  },
  {
    "text": "persistent volume labeling mutating web",
    "start": "310160",
    "end": "312479"
  },
  {
    "text": "hook and that is being replaced by",
    "start": "312479",
    "end": "314320"
  },
  {
    "text": "or that was already replaced by the",
    "start": "314320",
    "end": "315759"
  },
  {
    "text": "persistent volume controller",
    "start": "315759",
    "end": "317520"
  },
  {
    "text": "so all the cloud code was removed from",
    "start": "317520",
    "end": "321120"
  },
  {
    "text": "that",
    "start": "322840",
    "end": "324800"
  },
  {
    "start": "323000",
    "end": "442000"
  },
  {
    "text": "um so i wanted to give a timeline",
    "start": "324800",
    "end": "328720"
  },
  {
    "text": "from aws's standpoint but this is these",
    "start": "328720",
    "end": "331520"
  },
  {
    "text": "are estimates and they're",
    "start": "331520",
    "end": "333120"
  },
  {
    "text": "this is only this is only going to be",
    "start": "333120",
    "end": "335120"
  },
  {
    "text": "true if everything goes perfectly so um",
    "start": "335120",
    "end": "338160"
  },
  {
    "text": "it's",
    "start": "338160",
    "end": "338880"
  },
  {
    "text": "relatively unlikely to look exactly like",
    "start": "338880",
    "end": "341280"
  },
  {
    "text": "this",
    "start": "341280",
    "end": "342400"
  },
  {
    "text": "but this gives an idea of what like the",
    "start": "342400",
    "end": "344320"
  },
  {
    "text": "order that in which things have to",
    "start": "344320",
    "end": "346400"
  },
  {
    "text": "happen",
    "start": "346400",
    "end": "347520"
  },
  {
    "text": "um and what the earliest possible dates",
    "start": "347520",
    "end": "350400"
  },
  {
    "text": "for some of these would be",
    "start": "350400",
    "end": "352160"
  },
  {
    "text": "so you can see",
    "start": "352160",
    "end": "355360"
  },
  {
    "text": "for the features the first is the aha",
    "start": "355360",
    "end": "358000"
  },
  {
    "text": "migration framework",
    "start": "358000",
    "end": "359199"
  },
  {
    "text": "this is something that is uh it was",
    "start": "359199",
    "end": "362479"
  },
  {
    "text": "actually it just was merged",
    "start": "362479",
    "end": "364960"
  },
  {
    "text": "in 121 in alpha state",
    "start": "364960",
    "end": "368080"
  },
  {
    "text": "and um this allows",
    "start": "368080",
    "end": "371600"
  },
  {
    "text": "aj clusters to migrate from just running",
    "start": "371600",
    "end": "374560"
  },
  {
    "text": "the cube controller manager",
    "start": "374560",
    "end": "376400"
  },
  {
    "text": "to running both the cube controller",
    "start": "376400",
    "end": "378080"
  },
  {
    "text": "manager",
    "start": "378080",
    "end": "379440"
  },
  {
    "text": "and the cloud controller manager using a",
    "start": "379440",
    "end": "382080"
  },
  {
    "text": "migration lock",
    "start": "382080",
    "end": "383840"
  },
  {
    "text": "um so the plan for this is to go beta in",
    "start": "383840",
    "end": "386800"
  },
  {
    "text": "122",
    "start": "386800",
    "end": "388880"
  },
  {
    "text": "then we have the credential provider",
    "start": "388880",
    "end": "390400"
  },
  {
    "text": "framework this was alpha",
    "start": "390400",
    "end": "392800"
  },
  {
    "text": "in 120 and",
    "start": "392800",
    "end": "395919"
  },
  {
    "text": "along with the aws ecr credential",
    "start": "395919",
    "end": "398800"
  },
  {
    "text": "provider",
    "start": "398800",
    "end": "399520"
  },
  {
    "text": "that was alpha recently actually i think",
    "start": "399520",
    "end": "402960"
  },
  {
    "text": "it was",
    "start": "402960",
    "end": "403360"
  },
  {
    "text": "kind of in between 120 and 121",
    "start": "403360",
    "end": "407199"
  },
  {
    "text": "so ideally both of those along with the",
    "start": "407199",
    "end": "410400"
  },
  {
    "text": "adobe slide controller manager",
    "start": "410400",
    "end": "412000"
  },
  {
    "text": "would be beta in 122",
    "start": "412000",
    "end": "415919"
  },
  {
    "text": "which would allow all of them to go ga",
    "start": "415919",
    "end": "419039"
  },
  {
    "text": "and 123",
    "start": "419039",
    "end": "420960"
  },
  {
    "text": "and what all this means is that the",
    "start": "420960",
    "end": "422560"
  },
  {
    "text": "earliest according to",
    "start": "422560",
    "end": "424880"
  },
  {
    "text": "you know like aws uh cloud provider",
    "start": "424880",
    "end": "428160"
  },
  {
    "text": "timeline the earliest possible date for",
    "start": "428160",
    "end": "431120"
  },
  {
    "text": "the",
    "start": "431120",
    "end": "431599"
  },
  {
    "text": "entry code removal is 124 but",
    "start": "431599",
    "end": "435120"
  },
  {
    "text": "that will probably be later just because",
    "start": "435120",
    "end": "437039"
  },
  {
    "text": "of other dependencies",
    "start": "437039",
    "end": "440000"
  },
  {
    "start": "442000",
    "end": "586000"
  },
  {
    "text": "so in terms of the aws cloud controller",
    "start": "444560",
    "end": "447039"
  },
  {
    "text": "manager specifically",
    "start": "447039",
    "end": "450800"
  },
  {
    "text": "the upstream features are no longer",
    "start": "450800",
    "end": "452400"
  },
  {
    "text": "being accepted pull requests are limited",
    "start": "452400",
    "end": "454800"
  },
  {
    "text": "to bug fixes",
    "start": "454800",
    "end": "456160"
  },
  {
    "text": "so if you are opening a feature pull",
    "start": "456160",
    "end": "458560"
  },
  {
    "text": "request you should open it on the cloud",
    "start": "458560",
    "end": "460880"
  },
  {
    "text": "provider aws repository where",
    "start": "460880",
    "end": "463440"
  },
  {
    "text": "we've duplicated the v1 provider code",
    "start": "463440",
    "end": "465840"
  },
  {
    "text": "there",
    "start": "465840",
    "end": "467599"
  },
  {
    "text": "we currently have alpha builds for the",
    "start": "467599",
    "end": "470879"
  },
  {
    "text": "cloud",
    "start": "470879",
    "end": "471440"
  },
  {
    "text": "the cloud controller manager and we're",
    "start": "471440",
    "end": "474080"
  },
  {
    "text": "working on beta right now",
    "start": "474080",
    "end": "477039"
  },
  {
    "text": "and um if you do want to go check it out",
    "start": "477039",
    "end": "480560"
  },
  {
    "text": "um there's some uh",
    "start": "480560",
    "end": "483599"
  },
  {
    "text": "a couple different ways you can install",
    "start": "483599",
    "end": "485039"
  },
  {
    "text": "it on a cluster uh if you",
    "start": "485039",
    "end": "487360"
  },
  {
    "text": "are if you use cops you can um",
    "start": "487360",
    "end": "491039"
  },
  {
    "text": "configure it in the cops config the cops",
    "start": "491039",
    "end": "493360"
  },
  {
    "text": "cluster config",
    "start": "493360",
    "end": "495120"
  },
  {
    "text": "to uh use the external uh",
    "start": "495120",
    "end": "498160"
  },
  {
    "text": "cloud provider and there's also a helm",
    "start": "498160",
    "end": "500800"
  },
  {
    "text": "chart provided in the repository",
    "start": "500800",
    "end": "502879"
  },
  {
    "text": "as well as just some yaml files that you",
    "start": "502879",
    "end": "505199"
  },
  {
    "text": "can use to install",
    "start": "505199",
    "end": "506000"
  },
  {
    "text": "it",
    "start": "506000",
    "end": "508160"
  },
  {
    "text": "so what are the responsibilities of the",
    "start": "511440",
    "end": "513760"
  },
  {
    "text": "aws cloud controller manager",
    "start": "513760",
    "end": "517279"
  },
  {
    "text": "for us it's the node the node lifecycle",
    "start": "517279",
    "end": "520320"
  },
  {
    "text": "the route and the service controllers",
    "start": "520320",
    "end": "522959"
  },
  {
    "text": "the node controller",
    "start": "522959",
    "end": "524320"
  },
  {
    "text": "is responsible for updating node status",
    "start": "524320",
    "end": "526720"
  },
  {
    "text": "and node addresses",
    "start": "526720",
    "end": "528480"
  },
  {
    "text": "the node lifecycle controller acts on",
    "start": "528480",
    "end": "531120"
  },
  {
    "text": "node events",
    "start": "531120",
    "end": "532160"
  },
  {
    "text": "so you might have a node deletion",
    "start": "532160",
    "end": "535440"
  },
  {
    "text": "where you actually need to go and delete",
    "start": "535440",
    "end": "536800"
  },
  {
    "text": "the node object that would",
    "start": "536800",
    "end": "538800"
  },
  {
    "text": "fall under the node lifecycle controller",
    "start": "538800",
    "end": "541519"
  },
  {
    "text": "then the service controller",
    "start": "541519",
    "end": "544320"
  },
  {
    "text": "simply manages cloud load balancers",
    "start": "544320",
    "end": "547360"
  },
  {
    "text": "for load balance service services",
    "start": "547360",
    "end": "550640"
  },
  {
    "text": "and currently it it",
    "start": "550640",
    "end": "553760"
  },
  {
    "text": "handles elbs and it has some",
    "start": "553760",
    "end": "557519"
  },
  {
    "text": "nlb code but we're talking about moving",
    "start": "557519",
    "end": "561040"
  },
  {
    "text": "the",
    "start": "561040",
    "end": "561360"
  },
  {
    "text": "lb code to the aws",
    "start": "561360",
    "end": "564480"
  },
  {
    "text": "load balancer controller which yang yang",
    "start": "564480",
    "end": "566560"
  },
  {
    "text": "will talk about later",
    "start": "566560",
    "end": "568640"
  },
  {
    "text": "and then the route controller",
    "start": "568640",
    "end": "572080"
  },
  {
    "text": "manages a cloud route table if you have",
    "start": "572080",
    "end": "575200"
  },
  {
    "text": "nodes that are using one if your nodes",
    "start": "575200",
    "end": "578080"
  },
  {
    "text": "are set up with one sider",
    "start": "578080",
    "end": "579760"
  },
  {
    "text": "uh one pod set or per node",
    "start": "579760",
    "end": "583279"
  },
  {
    "start": "586000",
    "end": "964000"
  },
  {
    "text": "um with that i i'm sorry with that i'll",
    "start": "588240",
    "end": "591360"
  },
  {
    "text": "hand it off",
    "start": "591360",
    "end": "591920"
  },
  {
    "text": "over to nicole to talk about cloud",
    "start": "591920",
    "end": "593920"
  },
  {
    "text": "provider v2",
    "start": "593920",
    "end": "596640"
  },
  {
    "text": "so um hey i'm nicole from vmware",
    "start": "596640",
    "end": "600000"
  },
  {
    "text": "i will talk about some updates on the",
    "start": "600000",
    "end": "602720"
  },
  {
    "text": "current aws cloud provider",
    "start": "602720",
    "end": "605040"
  },
  {
    "text": "v2 implementation we will continue to",
    "start": "605040",
    "end": "608320"
  },
  {
    "text": "support the existing aws cloud provider",
    "start": "608320",
    "end": "611760"
  },
  {
    "text": "in out of trade mode this new version",
    "start": "611760",
    "end": "615519"
  },
  {
    "text": "will address many new issues and",
    "start": "615519",
    "end": "618640"
  },
  {
    "text": "gaps in the current v1 provider",
    "start": "618640",
    "end": "621600"
  },
  {
    "text": "implementation",
    "start": "621600",
    "end": "623279"
  },
  {
    "text": "um so for example we are looking into",
    "start": "623279",
    "end": "626880"
  },
  {
    "text": "allowing node names that announce the",
    "start": "626880",
    "end": "629680"
  },
  {
    "text": "private dns",
    "start": "629680",
    "end": "631120"
  },
  {
    "text": "of the ec2 instance for now",
    "start": "631120",
    "end": "634399"
  },
  {
    "text": "aws cloud provider forces the node name",
    "start": "634399",
    "end": "637360"
  },
  {
    "text": "to be the same as",
    "start": "637360",
    "end": "638480"
  },
  {
    "text": "aws private dns name",
    "start": "638480",
    "end": "642079"
  },
  {
    "text": "for example this leads to the node being",
    "start": "642079",
    "end": "644399"
  },
  {
    "text": "removed if",
    "start": "644399",
    "end": "645279"
  },
  {
    "text": "a different node's name is used so it",
    "start": "645279",
    "end": "648399"
  },
  {
    "text": "should be",
    "start": "648399",
    "end": "649200"
  },
  {
    "text": "allowed to use any name as the node's",
    "start": "649200",
    "end": "651680"
  },
  {
    "text": "name",
    "start": "651680",
    "end": "652399"
  },
  {
    "text": "more descriptive nodes names are",
    "start": "652399",
    "end": "654640"
  },
  {
    "text": "generally",
    "start": "654640",
    "end": "655920"
  },
  {
    "text": "helpful and useful currently load",
    "start": "655920",
    "end": "659040"
  },
  {
    "text": "balancer can only be created",
    "start": "659040",
    "end": "661200"
  },
  {
    "text": "with a machine generating them giving",
    "start": "661200",
    "end": "663600"
  },
  {
    "text": "load balancers",
    "start": "663600",
    "end": "665440"
  },
  {
    "text": "easy to rate names while greatly enhance",
    "start": "665440",
    "end": "668560"
  },
  {
    "text": "the",
    "start": "668560",
    "end": "668959"
  },
  {
    "text": "user experience of kubernetes on aw",
    "start": "668959",
    "end": "672839"
  },
  {
    "text": "aws we also consider",
    "start": "672839",
    "end": "675680"
  },
  {
    "text": "adding something to the service",
    "start": "675680",
    "end": "677760"
  },
  {
    "text": "annotations",
    "start": "677760",
    "end": "678800"
  },
  {
    "text": "and allow users to directly manage this",
    "start": "678800",
    "end": "683279"
  },
  {
    "text": "so a new v2 implementation",
    "start": "683279",
    "end": "686320"
  },
  {
    "text": "will try to address these limitations",
    "start": "686320",
    "end": "689440"
  },
  {
    "text": "also we need this since the v1 legacy",
    "start": "689440",
    "end": "691839"
  },
  {
    "text": "implementation is going to be removed",
    "start": "691839",
    "end": "693680"
  },
  {
    "text": "soon",
    "start": "693680",
    "end": "694959"
  },
  {
    "text": "v2 implementation is in alpha state and",
    "start": "694959",
    "end": "698240"
  },
  {
    "text": "after the launch it will be supported",
    "start": "698240",
    "end": "701120"
  },
  {
    "text": "for",
    "start": "701120",
    "end": "701440"
  },
  {
    "text": "new clusters",
    "start": "701440",
    "end": "704240"
  },
  {
    "text": "so to develop cloud provider",
    "start": "706240",
    "end": "708640"
  },
  {
    "text": "implementation",
    "start": "708640",
    "end": "709600"
  },
  {
    "text": "we need to implement a few common",
    "start": "709600",
    "end": "711760"
  },
  {
    "text": "interfaces",
    "start": "711760",
    "end": "712959"
  },
  {
    "text": "like instances load balancer in zones",
    "start": "712959",
    "end": "716240"
  },
  {
    "text": "so for example the instances and zones",
    "start": "716240",
    "end": "718959"
  },
  {
    "text": "interface methods",
    "start": "718959",
    "end": "720240"
  },
  {
    "text": "will be called from the node and",
    "start": "720240",
    "end": "721920"
  },
  {
    "text": "lifecycle controllers",
    "start": "721920",
    "end": "723839"
  },
  {
    "text": "the load balancer interface methods will",
    "start": "723839",
    "end": "725839"
  },
  {
    "text": "be called from the service controller",
    "start": "725839",
    "end": "728399"
  },
  {
    "text": "for instances we have an initial",
    "start": "728399",
    "end": "731200"
  },
  {
    "text": "implementation",
    "start": "731200",
    "end": "732240"
  },
  {
    "text": "of instances v2 interface um",
    "start": "732240",
    "end": "735680"
  },
  {
    "text": "instances v2 is an implementation",
    "start": "735680",
    "end": "738959"
  },
  {
    "text": "for instances and should only be",
    "start": "738959",
    "end": "742399"
  },
  {
    "text": "implemented by external cloud providers",
    "start": "742399",
    "end": "745760"
  },
  {
    "text": "implementing instances with you is",
    "start": "745760",
    "end": "748320"
  },
  {
    "text": "behaviorally identical to instances",
    "start": "748320",
    "end": "751279"
  },
  {
    "text": "but is optimized to significantly",
    "start": "751279",
    "end": "754320"
  },
  {
    "text": "reduce api course to the cloud provider",
    "start": "754320",
    "end": "757680"
  },
  {
    "text": "when registering and sticking nodes",
    "start": "757680",
    "end": "761600"
  },
  {
    "text": "for example we have implemented in the",
    "start": "761600",
    "end": "764079"
  },
  {
    "text": "interface methods like",
    "start": "764079",
    "end": "765440"
  },
  {
    "text": "whether to check whether the instance is",
    "start": "765440",
    "end": "768480"
  },
  {
    "text": "exists or is shut down where we",
    "start": "768480",
    "end": "772000"
  },
  {
    "text": "use the node's name or provider id files",
    "start": "772000",
    "end": "775360"
  },
  {
    "text": "to find the node in the cloud provider",
    "start": "775360",
    "end": "779760"
  },
  {
    "text": "as i mentioned before we are looking",
    "start": "779760",
    "end": "781600"
  },
  {
    "text": "into allowing node names that are",
    "start": "781600",
    "end": "783760"
  },
  {
    "text": "not the private dns of the ec2 instance",
    "start": "783760",
    "end": "787920"
  },
  {
    "text": "in the near future we will support",
    "start": "787920",
    "end": "790240"
  },
  {
    "text": "node's naming policy",
    "start": "790240",
    "end": "791920"
  },
  {
    "text": "other than private dns names",
    "start": "791920",
    "end": "795200"
  },
  {
    "text": "implementation of this interface will",
    "start": "795200",
    "end": "797839"
  },
  {
    "text": "disable",
    "start": "797839",
    "end": "798560"
  },
  {
    "text": "course to zones interface so zones will",
    "start": "798560",
    "end": "802079"
  },
  {
    "text": "be",
    "start": "802079",
    "end": "802480"
  },
  {
    "text": "uh is deprecated in favor of retrieving",
    "start": "802480",
    "end": "806560"
  },
  {
    "text": "zones or region information from",
    "start": "806560",
    "end": "808720"
  },
  {
    "text": "instances v2",
    "start": "808720",
    "end": "810639"
  },
  {
    "text": "this interface will not be called if",
    "start": "810639",
    "end": "812560"
  },
  {
    "text": "instances v2 is",
    "start": "812560",
    "end": "814079"
  },
  {
    "text": "enabled the existing dom's interface",
    "start": "814079",
    "end": "817760"
  },
  {
    "text": "was mainly created for the class to",
    "start": "817760",
    "end": "820959"
  },
  {
    "text": "interface with the local metadata server",
    "start": "820959",
    "end": "823920"
  },
  {
    "text": "to fetch a nodes dom and region",
    "start": "823920",
    "end": "827680"
  },
  {
    "text": "with external cloud providers it makes",
    "start": "827680",
    "end": "830000"
  },
  {
    "text": "more sense for",
    "start": "830000",
    "end": "830959"
  },
  {
    "text": "the zone or region logic to be coupled",
    "start": "830959",
    "end": "833760"
  },
  {
    "text": "to the instances interface",
    "start": "833760",
    "end": "836639"
  },
  {
    "text": "after kubernetes version 1.20",
    "start": "836639",
    "end": "839760"
  },
  {
    "text": "song and region information should be",
    "start": "839760",
    "end": "842240"
  },
  {
    "text": "added",
    "start": "842240",
    "end": "842880"
  },
  {
    "text": "in the instance metadata type we are",
    "start": "842880",
    "end": "845760"
  },
  {
    "text": "using",
    "start": "845760",
    "end": "846320"
  },
  {
    "text": "as part of the new instances v2",
    "start": "846320",
    "end": "848800"
  },
  {
    "text": "interface",
    "start": "848800",
    "end": "849600"
  },
  {
    "text": "in the cloud provider so in most cases",
    "start": "849600",
    "end": "853199"
  },
  {
    "text": "the zone origin information is contained",
    "start": "853199",
    "end": "856240"
  },
  {
    "text": "in the gate gets instance api core of a",
    "start": "856240",
    "end": "859199"
  },
  {
    "text": "cloud provider this change",
    "start": "859199",
    "end": "861199"
  },
  {
    "text": "will reduce the extra core for zone or",
    "start": "861199",
    "end": "864240"
  },
  {
    "text": "region",
    "start": "864240",
    "end": "864880"
  },
  {
    "text": "in the cloud provider so for",
    "start": "864880",
    "end": "868240"
  },
  {
    "text": "load balancer we have an initial pass",
    "start": "868240",
    "end": "871839"
  },
  {
    "text": "of the advanced interface that is",
    "start": "871839",
    "end": "874959"
  },
  {
    "text": "currently working in progress",
    "start": "874959",
    "end": "877519"
  },
  {
    "text": "there are some key issues all we need to",
    "start": "877519",
    "end": "880320"
  },
  {
    "text": "address",
    "start": "880320",
    "end": "881120"
  },
  {
    "text": "so like first right now load balancer",
    "start": "881120",
    "end": "884959"
  },
  {
    "text": "can",
    "start": "884959",
    "end": "885360"
  },
  {
    "text": "only be created with the machine",
    "start": "885360",
    "end": "886959"
  },
  {
    "text": "generated names making it very hard to",
    "start": "886959",
    "end": "890240"
  },
  {
    "text": "distinguish in aws if multiple advances",
    "start": "890240",
    "end": "894480"
  },
  {
    "text": "have been created within your accounts",
    "start": "894480",
    "end": "896399"
  },
  {
    "text": "account",
    "start": "896399",
    "end": "897920"
  },
  {
    "text": "also the default load balancer name for",
    "start": "897920",
    "end": "900639"
  },
  {
    "text": "the cloud provider",
    "start": "900639",
    "end": "901920"
  },
  {
    "text": "from the cloud provider package which is",
    "start": "901920",
    "end": "904480"
  },
  {
    "text": "currently in use",
    "start": "904480",
    "end": "905600"
  },
  {
    "text": "have been deprecated in this replacement",
    "start": "905600",
    "end": "909040"
  },
  {
    "text": "giving load balancers iterate names well",
    "start": "909040",
    "end": "912320"
  },
  {
    "text": "greatly enhance the user experience",
    "start": "912320",
    "end": "914480"
  },
  {
    "text": "it would be nice if we could pick a",
    "start": "914480",
    "end": "916959"
  },
  {
    "text": "template",
    "start": "916959",
    "end": "917600"
  },
  {
    "text": "to use for naming for example a",
    "start": "917600",
    "end": "920480"
  },
  {
    "text": "combination of",
    "start": "920480",
    "end": "921839"
  },
  {
    "text": "cluster name and service name mines work",
    "start": "921839",
    "end": "924720"
  },
  {
    "text": "well",
    "start": "924720",
    "end": "925600"
  },
  {
    "text": "and prefixing the loot bencher name with",
    "start": "925600",
    "end": "928639"
  },
  {
    "text": "some meaningful name like the",
    "start": "928639",
    "end": "930959"
  },
  {
    "text": "environments",
    "start": "930959",
    "end": "931839"
  },
  {
    "text": "the app stack etc will be",
    "start": "931839",
    "end": "935199"
  },
  {
    "text": "very much helpful",
    "start": "935199",
    "end": "938240"
  },
  {
    "text": "and we also consider adding something to",
    "start": "938240",
    "end": "940639"
  },
  {
    "text": "the service annotations and",
    "start": "940639",
    "end": "942480"
  },
  {
    "text": "allow users to manage this um",
    "start": "942480",
    "end": "945920"
  },
  {
    "text": "another thing we are looking into is we",
    "start": "945920",
    "end": "948480"
  },
  {
    "text": "should build",
    "start": "948480",
    "end": "949519"
  },
  {
    "text": "more expressive apis for the balancer",
    "start": "949519",
    "end": "952399"
  },
  {
    "text": "configuration",
    "start": "952399",
    "end": "953360"
  },
  {
    "text": "options right now it's an explosion of",
    "start": "953360",
    "end": "956639"
  },
  {
    "text": "annotations that are really hard to",
    "start": "956639",
    "end": "959680"
  },
  {
    "text": "comprehend",
    "start": "959680",
    "end": "962240"
  },
  {
    "start": "964000",
    "end": "1110000"
  },
  {
    "text": "so up i'll pass to book",
    "start": "964320",
    "end": "967440"
  },
  {
    "text": "to talk about credential provider",
    "start": "967440",
    "end": "971920"
  },
  {
    "text": "nicole my name is iberic and i am a soft",
    "start": "972000",
    "end": "974959"
  },
  {
    "text": "manager here at aws",
    "start": "974959",
    "end": "976480"
  },
  {
    "text": "working on eks and i am going to talk",
    "start": "976480",
    "end": "979440"
  },
  {
    "text": "about the production provider extraction",
    "start": "979440",
    "end": "981360"
  },
  {
    "text": "effort it provides some context",
    "start": "981360",
    "end": "983519"
  },
  {
    "text": "and then briefly explain what it",
    "start": "983519",
    "end": "985199"
  },
  {
    "text": "actually means for the cluster operators",
    "start": "985199",
    "end": "988240"
  },
  {
    "text": "so far we have been mostly talking about",
    "start": "988240",
    "end": "990800"
  },
  {
    "text": "the responsibilities of the control",
    "start": "990800",
    "end": "992639"
  },
  {
    "text": "plane",
    "start": "992639",
    "end": "993519"
  },
  {
    "text": "but as nick mentioned it also includes",
    "start": "993519",
    "end": "996240"
  },
  {
    "text": "some cloud-specific",
    "start": "996240",
    "end": "997440"
  },
  {
    "text": "code i'll be talking only one of those",
    "start": "997440",
    "end": "1001360"
  },
  {
    "text": "specific cases workflow that runs",
    "start": "1001360",
    "end": "1003519"
  },
  {
    "text": "specific code",
    "start": "1003519",
    "end": "1005360"
  },
  {
    "text": "and that is patching image credentials",
    "start": "1005360",
    "end": "1008399"
  },
  {
    "text": "for non-public registries uh whenever",
    "start": "1008399",
    "end": "1011759"
  },
  {
    "text": "cuba needs an image from a non-public",
    "start": "1011759",
    "end": "1013680"
  },
  {
    "text": "registry",
    "start": "1013680",
    "end": "1014720"
  },
  {
    "text": "it somehow has to fetch the credentials",
    "start": "1014720",
    "end": "1017360"
  },
  {
    "text": "so it can actually get that image",
    "start": "1017360",
    "end": "1019839"
  },
  {
    "text": "and currently shubha does this itself",
    "start": "1019839",
    "end": "1023360"
  },
  {
    "text": "and as you can imagine",
    "start": "1023360",
    "end": "1024959"
  },
  {
    "text": "each registry has different apis",
    "start": "1024959",
    "end": "1027038"
  },
  {
    "text": "different expectations",
    "start": "1027039",
    "end": "1028400"
  },
  {
    "text": "and cubelet has specific code for each",
    "start": "1028400",
    "end": "1030480"
  },
  {
    "text": "different registry",
    "start": "1030480",
    "end": "1031678"
  },
  {
    "text": "to face those credentials and that is",
    "start": "1031679",
    "end": "1034798"
  },
  {
    "text": "actually what",
    "start": "1034799",
    "end": "1036160"
  },
  {
    "text": "is actually not what we want at this",
    "start": "1036160",
    "end": "1038240"
  },
  {
    "text": "point because we're extracting class",
    "start": "1038240",
    "end": "1040000"
  },
  {
    "text": "specific code",
    "start": "1040000",
    "end": "1041839"
  },
  {
    "text": "so somehow we have to get rid of this",
    "start": "1041839",
    "end": "1044000"
  },
  {
    "text": "responsibility",
    "start": "1044000",
    "end": "1045360"
  },
  {
    "text": "and in order to remove this",
    "start": "1045360",
    "end": "1046720"
  },
  {
    "text": "responsibility from the tablet",
    "start": "1046720",
    "end": "1049200"
  },
  {
    "text": "a new cap was proposed and this step",
    "start": "1049200",
    "end": "1052160"
  },
  {
    "text": "basically",
    "start": "1052160",
    "end": "1052960"
  },
  {
    "text": "proposes a new plugin-based approach",
    "start": "1052960",
    "end": "1056720"
  },
  {
    "text": "where giblet basically talks to these",
    "start": "1056720",
    "end": "1060880"
  },
  {
    "text": "standard binary audience",
    "start": "1060880",
    "end": "1064000"
  },
  {
    "text": "to effect sequences for itself",
    "start": "1064000",
    "end": "1068160"
  },
  {
    "text": "so how it happens is basically these",
    "start": "1068160",
    "end": "1070799"
  },
  {
    "text": "plugins",
    "start": "1070799",
    "end": "1071520"
  },
  {
    "text": "are nothing but external binary running",
    "start": "1071520",
    "end": "1074799"
  },
  {
    "text": "along with your cube on your nodes and",
    "start": "1074799",
    "end": "1077679"
  },
  {
    "text": "whenever",
    "start": "1077679",
    "end": "1078559"
  },
  {
    "text": "cublet needs credentials to fetch an",
    "start": "1078559",
    "end": "1080640"
  },
  {
    "text": "image it will basically",
    "start": "1080640",
    "end": "1082799"
  },
  {
    "text": "communicate via startup output",
    "start": "1082799",
    "end": "1086320"
  },
  {
    "text": "and then ask this binary to fetch the",
    "start": "1086320",
    "end": "1089520"
  },
  {
    "text": "credentials for yourself",
    "start": "1089520",
    "end": "1090960"
  },
  {
    "text": "they use welfare json it's version and",
    "start": "1090960",
    "end": "1093679"
  },
  {
    "text": "serialized",
    "start": "1093679",
    "end": "1094559"
  },
  {
    "text": "but again everything is happening",
    "start": "1094559",
    "end": "1097120"
  },
  {
    "text": "through",
    "start": "1097120",
    "end": "1097840"
  },
  {
    "text": "sound input output i strongly suggest",
    "start": "1097840",
    "end": "1100720"
  },
  {
    "text": "reading cap",
    "start": "1100720",
    "end": "1101919"
  },
  {
    "text": "if you like to learn more it's very",
    "start": "1101919",
    "end": "1103919"
  },
  {
    "text": "relative written",
    "start": "1103919",
    "end": "1104960"
  },
  {
    "text": "and it explains how this all connects",
    "start": "1104960",
    "end": "1108320"
  },
  {
    "text": "and next like this",
    "start": "1108320",
    "end": "1111279"
  },
  {
    "start": "1110000",
    "end": "1237000"
  },
  {
    "text": "so okay it's not going to fetch these",
    "start": "1111440",
    "end": "1114240"
  },
  {
    "text": "credentials for us anymore",
    "start": "1114240",
    "end": "1116080"
  },
  {
    "text": "but what does it mean for us do we have",
    "start": "1116080",
    "end": "1118240"
  },
  {
    "text": "to do anything",
    "start": "1118240",
    "end": "1119760"
  },
  {
    "text": "the answer is yes it means cluster",
    "start": "1119760",
    "end": "1122799"
  },
  {
    "text": "operators will have to configure a",
    "start": "1122799",
    "end": "1124720"
  },
  {
    "text": "cubelet",
    "start": "1124720",
    "end": "1125360"
  },
  {
    "text": "so it knows what plugin to use for what",
    "start": "1125360",
    "end": "1128240"
  },
  {
    "text": "image",
    "start": "1128240",
    "end": "1129440"
  },
  {
    "text": "obviously initially cublet will have no",
    "start": "1129440",
    "end": "1132480"
  },
  {
    "text": "idea about",
    "start": "1132480",
    "end": "1134160"
  },
  {
    "text": "for what image musical what kind of",
    "start": "1134160",
    "end": "1136559"
  },
  {
    "text": "binary",
    "start": "1136559",
    "end": "1137520"
  },
  {
    "text": "so in order to achieve this there are",
    "start": "1137520",
    "end": "1139520"
  },
  {
    "text": "two new flags you have to pass the",
    "start": "1139520",
    "end": "1141360"
  },
  {
    "text": "cubelet",
    "start": "1141360",
    "end": "1142320"
  },
  {
    "text": "so the first one here used on the screen",
    "start": "1142320",
    "end": "1144559"
  },
  {
    "text": "is basically",
    "start": "1144559",
    "end": "1146400"
  },
  {
    "text": "the location of the binaries and i mean",
    "start": "1146400",
    "end": "1149600"
  },
  {
    "text": "plugins and this is where this is a",
    "start": "1149600",
    "end": "1152640"
  },
  {
    "text": "folder where your binaries are located",
    "start": "1152640",
    "end": "1154559"
  },
  {
    "text": "and this is where the cube is going to",
    "start": "1154559",
    "end": "1155840"
  },
  {
    "text": "be looking for these binaries",
    "start": "1155840",
    "end": "1157760"
  },
  {
    "text": "and the second one is a pretty important",
    "start": "1157760",
    "end": "1160160"
  },
  {
    "text": "one",
    "start": "1160160",
    "end": "1161039"
  },
  {
    "text": "uh it is the config file you pass to",
    "start": "1161039",
    "end": "1163440"
  },
  {
    "text": "cuba",
    "start": "1163440",
    "end": "1164240"
  },
  {
    "text": "and this conflict file will calculate",
    "start": "1164240",
    "end": "1166880"
  },
  {
    "text": "which binary to use",
    "start": "1166880",
    "end": "1168400"
  },
  {
    "text": "for what kind of images it is basically",
    "start": "1168400",
    "end": "1171919"
  },
  {
    "text": "a list of",
    "start": "1171919",
    "end": "1172799"
  },
  {
    "text": "regular expression cloud provider name",
    "start": "1172799",
    "end": "1176480"
  },
  {
    "text": "pairs and provider name here is the name",
    "start": "1176480",
    "end": "1178720"
  },
  {
    "text": "of the",
    "start": "1178720",
    "end": "1180000"
  },
  {
    "text": "mindlead and cubelet basically whenever",
    "start": "1180000",
    "end": "1182960"
  },
  {
    "text": "there's a match with particular",
    "start": "1182960",
    "end": "1184240"
  },
  {
    "text": "explanation",
    "start": "1184240",
    "end": "1184880"
  },
  {
    "text": "you'll use the given binary professional",
    "start": "1184880",
    "end": "1187600"
  },
  {
    "text": "images",
    "start": "1187600",
    "end": "1188320"
  },
  {
    "text": "that being said it has to be in a very",
    "start": "1188320",
    "end": "1190480"
  },
  {
    "text": "specific format",
    "start": "1190480",
    "end": "1191600"
  },
  {
    "text": "and you can read the cap to learn about",
    "start": "1191600",
    "end": "1193760"
  },
  {
    "text": "this format",
    "start": "1193760",
    "end": "1195440"
  },
  {
    "text": "for specific aws users we already have",
    "start": "1195440",
    "end": "1198480"
  },
  {
    "text": "the ecr plugin implemented",
    "start": "1198480",
    "end": "1200240"
  },
  {
    "text": "and ready you can see it i mean on our",
    "start": "1200240",
    "end": "1203120"
  },
  {
    "text": "repository",
    "start": "1203120",
    "end": "1204960"
  },
  {
    "text": "we are not shipping it with the cloud",
    "start": "1204960",
    "end": "1206320"
  },
  {
    "text": "provider yet uh but we are planning to",
    "start": "1206320",
    "end": "1208880"
  },
  {
    "text": "ship it",
    "start": "1208880",
    "end": "1209679"
  },
  {
    "text": "in the future and we also have more",
    "start": "1209679",
    "end": "1212880"
  },
  {
    "text": "detailed examples",
    "start": "1212880",
    "end": "1214159"
  },
  {
    "text": "and install introductions insert",
    "start": "1214159",
    "end": "1216240"
  },
  {
    "text": "instructions",
    "start": "1216240",
    "end": "1217280"
  },
  {
    "text": "on the documentation and we also have a",
    "start": "1217280",
    "end": "1220640"
  },
  {
    "text": "more important we also have an example",
    "start": "1220640",
    "end": "1222320"
  },
  {
    "text": "config you can just",
    "start": "1222320",
    "end": "1223679"
  },
  {
    "text": "use so basically your pcr",
    "start": "1223679",
    "end": "1227280"
  },
  {
    "text": "uh logic just keeps out of the box",
    "start": "1227280",
    "end": "1230559"
  },
  {
    "text": "and with that i'm going to give it to",
    "start": "1230559",
    "end": "1232400"
  },
  {
    "text": "you to talk about the",
    "start": "1232400",
    "end": "1234159"
  },
  {
    "text": "controller",
    "start": "1234159",
    "end": "1236720"
  },
  {
    "start": "1237000",
    "end": "1289000"
  },
  {
    "text": "you're muted hanging",
    "start": "1244320",
    "end": "1247279"
  },
  {
    "text": "so i'm young from amazon ets team so",
    "start": "1247520",
    "end": "1250000"
  },
  {
    "text": "today i will talk about",
    "start": "1250000",
    "end": "1251600"
  },
  {
    "text": "amazon adventure controller uh it's a",
    "start": "1251600",
    "end": "1254799"
  },
  {
    "text": "controller to help manage gymnastics",
    "start": "1254799",
    "end": "1256960"
  },
  {
    "text": "advancers for kubernetes cancer",
    "start": "1256960",
    "end": "1259679"
  },
  {
    "text": "which satisfies kubernetes inwards",
    "start": "1259679",
    "end": "1262159"
  },
  {
    "text": "resources by",
    "start": "1262159",
    "end": "1263280"
  },
  {
    "text": "provisioning application advances and",
    "start": "1263280",
    "end": "1266559"
  },
  {
    "text": "satisfying kubernetes services resources",
    "start": "1266559",
    "end": "1269600"
  },
  {
    "text": "by provisioning network advisors",
    "start": "1269600",
    "end": "1272240"
  },
  {
    "text": "for me is known as aws alb invest",
    "start": "1272240",
    "end": "1275760"
  },
  {
    "text": "controller",
    "start": "1275760",
    "end": "1277120"
  },
  {
    "text": "we did a rewrite and",
    "start": "1277120",
    "end": "1280400"
  },
  {
    "text": "rebranded to be elapsed from the banner",
    "start": "1280400",
    "end": "1282640"
  },
  {
    "text": "controller",
    "start": "1282640",
    "end": "1283840"
  },
  {
    "text": "in october last year so",
    "start": "1283840",
    "end": "1290320"
  },
  {
    "start": "1289000",
    "end": "1392000"
  },
  {
    "text": "i'll talk about supporting country so",
    "start": "1290320",
    "end": "1292559"
  },
  {
    "text": "currently with ingress",
    "start": "1292559",
    "end": "1293919"
  },
  {
    "text": "resources and application advancer",
    "start": "1293919",
    "end": "1297039"
  },
  {
    "text": "we support insert mode and ip mode",
    "start": "1297039",
    "end": "1300559"
  },
  {
    "text": "for instance mode the node will be",
    "start": "1300559",
    "end": "1303120"
  },
  {
    "text": "registered targets",
    "start": "1303120",
    "end": "1304400"
  },
  {
    "text": "traffic will reach the node code for",
    "start": "1304400",
    "end": "1306720"
  },
  {
    "text": "your service",
    "start": "1306720",
    "end": "1307520"
  },
  {
    "text": "and pro proxy to your containers",
    "start": "1307520",
    "end": "1311039"
  },
  {
    "text": "and for ip modes traffic will reach your",
    "start": "1311039",
    "end": "1314480"
  },
  {
    "text": "containers",
    "start": "1314480",
    "end": "1315440"
  },
  {
    "text": "directly where",
    "start": "1315440",
    "end": "1318480"
  },
  {
    "text": "but you are seeing i must be using",
    "start": "1318480",
    "end": "1322799"
  },
  {
    "text": "amazon's vpc and we also support a",
    "start": "1322799",
    "end": "1326559"
  },
  {
    "text": "feature called ingress groups",
    "start": "1326559",
    "end": "1328400"
  },
  {
    "text": "which allows users to specify",
    "start": "1328400",
    "end": "1333200"
  },
  {
    "text": "a set of ingresses to be supported by a",
    "start": "1333200",
    "end": "1336159"
  },
  {
    "text": "single application advancer which can",
    "start": "1336159",
    "end": "1338720"
  },
  {
    "text": "help customers to saving cost for",
    "start": "1338720",
    "end": "1341679"
  },
  {
    "text": "services",
    "start": "1341679",
    "end": "1342320"
  },
  {
    "text": "resources with networking advances",
    "start": "1342320",
    "end": "1345760"
  },
  {
    "text": "with currently we only support ipmo",
    "start": "1345760",
    "end": "1348400"
  },
  {
    "text": "which is targeting the content across",
    "start": "1348400",
    "end": "1350080"
  },
  {
    "text": "directly",
    "start": "1350080",
    "end": "1350799"
  },
  {
    "text": "and we provide a compatible api with the",
    "start": "1350799",
    "end": "1353919"
  },
  {
    "text": "entry service and ob support",
    "start": "1353919",
    "end": "1357600"
  },
  {
    "text": "along with these two features we also",
    "start": "1357600",
    "end": "1360640"
  },
  {
    "text": "support a new theory called target group",
    "start": "1360640",
    "end": "1362720"
  },
  {
    "text": "binding",
    "start": "1362720",
    "end": "1364000"
  },
  {
    "text": "which exposes applications with a",
    "start": "1364000",
    "end": "1367360"
  },
  {
    "text": "existing target group like aob technical",
    "start": "1367360",
    "end": "1369919"
  },
  {
    "text": "or an arbitrage",
    "start": "1369919",
    "end": "1371360"
  },
  {
    "text": "so this allows users to bring their own",
    "start": "1371360",
    "end": "1374720"
  },
  {
    "text": "advancer and tag groups",
    "start": "1374720",
    "end": "1376720"
  },
  {
    "text": "and just net the kubernetes manage the",
    "start": "1376720",
    "end": "1379679"
  },
  {
    "text": "targets",
    "start": "1379679",
    "end": "1380400"
  },
  {
    "text": "inside hyperboost so customers can use",
    "start": "1380400",
    "end": "1382559"
  },
  {
    "text": "external tools like",
    "start": "1382559",
    "end": "1383840"
  },
  {
    "text": "confirmation cdk or terraform to manage",
    "start": "1383840",
    "end": "1386880"
  },
  {
    "text": "maintain an advanced",
    "start": "1386880",
    "end": "1388240"
  },
  {
    "text": "infrastructure",
    "start": "1388240",
    "end": "1391120"
  },
  {
    "start": "1392000",
    "end": "1600000"
  },
  {
    "text": "so what's coming next so we will release",
    "start": "1394000",
    "end": "1396720"
  },
  {
    "text": "a",
    "start": "1396720",
    "end": "1397360"
  },
  {
    "text": "new version shortly the new version will",
    "start": "1397360",
    "end": "1400960"
  },
  {
    "text": "include support",
    "start": "1400960",
    "end": "1402080"
  },
  {
    "text": "for lb instance mode which will be",
    "start": "1402080",
    "end": "1405360"
  },
  {
    "text": "similar to what we have in the entry",
    "start": "1405360",
    "end": "1408320"
  },
  {
    "text": "controller",
    "start": "1408320",
    "end": "1409200"
  },
  {
    "text": "after this feature is released we",
    "start": "1409200",
    "end": "1411120"
  },
  {
    "text": "recommend to using adapting the bezel",
    "start": "1411120",
    "end": "1413200"
  },
  {
    "text": "controllers to",
    "start": "1413200",
    "end": "1414799"
  },
  {
    "text": "manage the energy for your public",
    "start": "1414799",
    "end": "1416799"
  },
  {
    "text": "service which",
    "start": "1416799",
    "end": "1418320"
  },
  {
    "text": "is more flexible and we will support",
    "start": "1418320",
    "end": "1422640"
  },
  {
    "text": "new nlp features more",
    "start": "1422640",
    "end": "1426720"
  },
  {
    "text": "up to date and it also addresses some",
    "start": "1426720",
    "end": "1430799"
  },
  {
    "text": "technical implications",
    "start": "1430799",
    "end": "1432159"
  },
  {
    "text": "in the existing cloud provider",
    "start": "1432159",
    "end": "1435919"
  },
  {
    "text": "and what we will also support static",
    "start": "1435919",
    "end": "1438480"
  },
  {
    "text": "support user to specify state",
    "start": "1438480",
    "end": "1440480"
  },
  {
    "text": "ips for analytics and we will",
    "start": "1440480",
    "end": "1443600"
  },
  {
    "text": "also add a support called node selectors",
    "start": "1443600",
    "end": "1446320"
  },
  {
    "text": "for instance mode which allows you to",
    "start": "1446320",
    "end": "1448559"
  },
  {
    "text": "specify the set of nodes used as",
    "start": "1448559",
    "end": "1452960"
  },
  {
    "text": "the backend for your service so",
    "start": "1452960",
    "end": "1456159"
  },
  {
    "text": "you can use the labels network to match",
    "start": "1456159",
    "end": "1458400"
  },
  {
    "text": "the nodes",
    "start": "1458400",
    "end": "1459200"
  },
  {
    "text": "this feature will be supported for both",
    "start": "1459200",
    "end": "1461520"
  },
  {
    "text": "invest and service",
    "start": "1461520",
    "end": "1463120"
  },
  {
    "text": "and our target binding crd",
    "start": "1463120",
    "end": "1466799"
  },
  {
    "text": "for english we will add a new crd called",
    "start": "1466799",
    "end": "1470080"
  },
  {
    "text": "ingress class parameters so",
    "start": "1470080",
    "end": "1473520"
  },
  {
    "text": "is for ingress class support added from",
    "start": "1473520",
    "end": "1476799"
  },
  {
    "text": "kubernetes 118",
    "start": "1476799",
    "end": "1478480"
  },
  {
    "text": "where you can specify a ingress class",
    "start": "1478480",
    "end": "1481200"
  },
  {
    "text": "for your invoices",
    "start": "1481200",
    "end": "1482400"
  },
  {
    "text": "which contains additional settings and",
    "start": "1482400",
    "end": "1484799"
  },
  {
    "text": "along with the ingresscast",
    "start": "1484799",
    "end": "1486720"
  },
  {
    "text": "you can specify controller specific",
    "start": "1486720",
    "end": "1489679"
  },
  {
    "text": "settings",
    "start": "1489679",
    "end": "1490559"
  },
  {
    "text": "using ingress class parameters we",
    "start": "1490559",
    "end": "1493120"
  },
  {
    "text": "introduced",
    "start": "1493120",
    "end": "1494240"
  },
  {
    "text": "so inside english parameters",
    "start": "1494240",
    "end": "1496919"
  },
  {
    "text": "administrator",
    "start": "1496919",
    "end": "1498400"
  },
  {
    "text": "can set up additional restrictions",
    "start": "1498400",
    "end": "1501520"
  },
  {
    "text": "on the the aob settings",
    "start": "1501520",
    "end": "1504640"
  },
  {
    "text": "such as whether the aob should be public",
    "start": "1504640",
    "end": "1507600"
  },
  {
    "text": "or not",
    "start": "1507600",
    "end": "1509360"
  },
  {
    "text": "and also sends like ingress grouping or",
    "start": "1509360",
    "end": "1512320"
  },
  {
    "text": "ip address types",
    "start": "1512320",
    "end": "1514720"
  },
  {
    "text": "also for ingress we will add support for",
    "start": "1514720",
    "end": "1517600"
  },
  {
    "text": "the",
    "start": "1517600",
    "end": "1518159"
  },
  {
    "text": "new path type added",
    "start": "1518159",
    "end": "1522000"
  },
  {
    "text": "from kubernetes 118 and we also offer a",
    "start": "1522000",
    "end": "1525760"
  },
  {
    "text": "feature",
    "start": "1525760",
    "end": "1526480"
  },
  {
    "text": "to simplify the excess of reduction",
    "start": "1526480",
    "end": "1528960"
  },
  {
    "text": "configuration for ingresses",
    "start": "1528960",
    "end": "1530880"
  },
  {
    "text": "which customer can use a single occasion",
    "start": "1530880",
    "end": "1533200"
  },
  {
    "text": "to",
    "start": "1533200",
    "end": "1534960"
  },
  {
    "text": "configure the aob to redirect",
    "start": "1534960",
    "end": "1538159"
  },
  {
    "text": "all http traffic to https",
    "start": "1538159",
    "end": "1542080"
  },
  {
    "text": "that's what the new features coming for",
    "start": "1542080",
    "end": "1545039"
  },
  {
    "text": "it is",
    "start": "1545039",
    "end": "1545600"
  },
  {
    "text": "better controller and hand over to me",
    "start": "1545600",
    "end": "1551120"
  },
  {
    "text": "okay so yeah with that wraps up our",
    "start": "1552400",
    "end": "1555520"
  },
  {
    "text": "presentation on the cloud provider aws",
    "start": "1555520",
    "end": "1560400"
  },
  {
    "text": "so we have some links here",
    "start": "1560400",
    "end": "1564400"
  },
  {
    "text": "you can see the cloud fighter aws",
    "start": "1564400",
    "end": "1566640"
  },
  {
    "text": "repository",
    "start": "1566640",
    "end": "1568320"
  },
  {
    "text": "load away load bouncer controller",
    "start": "1568320",
    "end": "1569919"
  },
  {
    "text": "repository um",
    "start": "1569919",
    "end": "1571840"
  },
  {
    "text": "the first link is to the documentation",
    "start": "1571840",
    "end": "1574000"
  },
  {
    "text": "for uh",
    "start": "1574000",
    "end": "1574960"
  },
  {
    "text": "the cloud controller manager and any",
    "start": "1574960",
    "end": "1578159"
  },
  {
    "text": "questions that you have",
    "start": "1578159",
    "end": "1579600"
  },
  {
    "text": "we would be happy to answer either",
    "start": "1579600",
    "end": "1583200"
  },
  {
    "text": "now or ons you can always find us on",
    "start": "1583200",
    "end": "1586400"
  },
  {
    "text": "kubernetes slack we have our slack",
    "start": "1586400",
    "end": "1588799"
  },
  {
    "text": "usernames",
    "start": "1588799",
    "end": "1590480"
  },
  {
    "text": "linked down below so thank you very much",
    "start": "1590480",
    "end": "1593200"
  },
  {
    "text": "appreciate you attending the talk",
    "start": "1593200",
    "end": "1599840"
  },
  {
    "text": "you",
    "start": "1599840",
    "end": "1601919"
  }
]