[
  {
    "text": "all right hello everyone uh it's great to be here at kubecon and cloudnativecon china 2021.",
    "start": "1360",
    "end": "9519"
  },
  {
    "text": "uh today we're going to take a deep dive into open policy agents and i'm anders i work as a developer",
    "start": "9519",
    "end": "16640"
  },
  {
    "text": "advocate at styra the creators of the open policy agent project",
    "start": "16640",
    "end": "21840"
  },
  {
    "text": "i have a pretty long background in software development where i work mainly in identity systems",
    "start": "21840",
    "end": "29359"
  },
  {
    "text": "i have about three years now uh of experience working with oppa",
    "start": "29359",
    "end": "35680"
  },
  {
    "text": "and before i worked at styra i worked at another company where we integrated oppa in large production",
    "start": "35680",
    "end": "41760"
  },
  {
    "text": "clusters primarily for authorization when i don't work with oppa i am",
    "start": "41760",
    "end": "48239"
  },
  {
    "text": "interested in cooking food and football so what's problem are we trying to solve",
    "start": "48239",
    "end": "55360"
  },
  {
    "text": "here what's the challenge i'd say it's this it's really to manage policy in",
    "start": "55360",
    "end": "60800"
  },
  {
    "text": "increasingly distributed complex and heterogeneous systems",
    "start": "60800",
    "end": "66159"
  },
  {
    "text": "we have of course applications and the programming languages and the application frameworks",
    "start": "66159",
    "end": "72640"
  },
  {
    "text": "we have our deployment targets and our infrastructure we have our cloud providers and cloud",
    "start": "72640",
    "end": "79360"
  },
  {
    "text": "environments and we have data sources and of course",
    "start": "79360",
    "end": "84799"
  },
  {
    "text": "there's way more than we can list on a single page like this but but really the",
    "start": "84799",
    "end": "90560"
  },
  {
    "text": "challenge is to try and manage policy in this complex environment",
    "start": "90560",
    "end": "97280"
  },
  {
    "text": "and the goal is to unify policy enforcement because policy is already in",
    "start": "97280",
    "end": "102479"
  },
  {
    "text": "all these places most of these deal with authorization to some extent",
    "start": "102479",
    "end": "107680"
  },
  {
    "text": "or they deal with other types of policies but they all do it in their own unique way so the goal of oppa is to",
    "start": "107680",
    "end": "114560"
  },
  {
    "text": "unify the way we can do that and unify policy enforcement across the whole stack",
    "start": "114560",
    "end": "121040"
  },
  {
    "text": "so that's really what oppa is and",
    "start": "121040",
    "end": "126960"
  },
  {
    "text": "oppa is an open source general purpose policy engine and as of february this year",
    "start": "126960",
    "end": "133760"
  },
  {
    "text": "it's a graduated cncf project oppa offers a unified tool set and a",
    "start": "133760",
    "end": "139920"
  },
  {
    "text": "unified framework for working with policy across the stack",
    "start": "139920",
    "end": "145120"
  },
  {
    "text": "open the couple's policy from application logic so sort of in the same way that a database decouples storage",
    "start": "145120",
    "end": "152800"
  },
  {
    "text": "from your application and moves that into the database you can think of oppa uh",
    "start": "152800",
    "end": "158239"
  },
  {
    "text": "in the same way but for policies opa separates policy decision which is",
    "start": "158239",
    "end": "164640"
  },
  {
    "text": "what oppa does from enforcement so your your application so oppa makes the",
    "start": "164640",
    "end": "170160"
  },
  {
    "text": "decisions but it's still up to your applications to enforce them",
    "start": "170160",
    "end": "175519"
  },
  {
    "text": "policies they're written in a declarative language called rego which we will look into",
    "start": "175519",
    "end": "180640"
  },
  {
    "text": "later and since oppa is a general purpose policy engine",
    "start": "180640",
    "end": "186319"
  },
  {
    "text": "we have seen use cases ranging from uh kubernetes admission control app",
    "start": "186319",
    "end": "191360"
  },
  {
    "text": "authorization infrastructure policies data sources uh build and deployment",
    "start": "191360",
    "end": "196800"
  },
  {
    "text": "pipelines and many many more so oppa as an open source project have",
    "start": "196800",
    "end": "204799"
  },
  {
    "text": "more than 200 contributors we have more than 50",
    "start": "204799",
    "end": "209840"
  },
  {
    "text": "integrations listed in our ecosystem pages almost 6 000 github stores 5000 slack",
    "start": "209840",
    "end": "217599"
  },
  {
    "text": "users and more than 100 million docker image pulls so it's a really popular way of",
    "start": "217599",
    "end": "225360"
  },
  {
    "text": "of dealing with policy the ecosystem includes not just oppa the core project but also interesting",
    "start": "225360",
    "end": "233760"
  },
  {
    "text": "projects such as comp test for testing configuration files or stores or",
    "start": "233760",
    "end": "238959"
  },
  {
    "text": "basically files or static resources you have gatekeeper for uh kubernetes",
    "start": "238959",
    "end": "244319"
  },
  {
    "text": "admission control uh vs code and idea editor plugins so",
    "start": "244319",
    "end": "249760"
  },
  {
    "text": "it's a large vibrant ecosystem and a vibrant community",
    "start": "249760",
    "end": "255760"
  },
  {
    "text": "but of course it's not just a hobbyist project but oppa is actually used in production at some of the largest",
    "start": "255760",
    "end": "261680"
  },
  {
    "text": "enterprises and some of the largest organization in the world",
    "start": "261680",
    "end": "266800"
  },
  {
    "text": "and to sum it up uh what oppa is about i kind of love this",
    "start": "267600",
    "end": "273360"
  },
  {
    "text": "quote from kelsey hightower saying the open policy agent project is super dope",
    "start": "273360",
    "end": "278800"
  },
  {
    "text": "i finally have a framework that helps me translate written security policies into executable code for every layer of",
    "start": "278800",
    "end": "285759"
  },
  {
    "text": "the stack so i think that's pretty much what oppa is about so how does it work then",
    "start": "285759",
    "end": "294240"
  },
  {
    "text": "the answer to the question can largely be uh answered in the policy decision model",
    "start": "294240",
    "end": "302160"
  },
  {
    "text": "which means that we have a service and when we say service that could basically be anything it",
    "start": "302160",
    "end": "308479"
  },
  {
    "text": "could be an application a microservice it could be a database an",
    "start": "308479",
    "end": "313680"
  },
  {
    "text": "api gateway like kong or it could be a linux pa module it",
    "start": "313680",
    "end": "319039"
  },
  {
    "text": "doesn't really matter but anything that services a request",
    "start": "319039",
    "end": "324240"
  },
  {
    "text": "so when the request uh comes into that service rather than trying to decide should that",
    "start": "324240",
    "end": "330880"
  },
  {
    "text": "be allowed or not the service turns to oppa and asks a policy query",
    "start": "330880",
    "end": "337600"
  },
  {
    "text": "and open and based on the policy it has been provided and",
    "start": "337600",
    "end": "342880"
  },
  {
    "text": "possibly data from the outside world that makes a policy decision",
    "start": "342880",
    "end": "348080"
  },
  {
    "text": "and returns that to the service so it's kind of like an oracle that you have next to you where you can ask",
    "start": "348080",
    "end": "354560"
  },
  {
    "text": "should we allow this should we should this or that uh is this or that doable or not and oppa",
    "start": "354560",
    "end": "361520"
  },
  {
    "text": "will answer so that's the policy decision model and and since uh it works with just json",
    "start": "361520",
    "end": "370080"
  },
  {
    "text": "any input is just json and the output is also just json so any service",
    "start": "370080",
    "end": "375600"
  },
  {
    "text": "that can handle json can pretty much integrate with opa and that's one of the secrets behind the",
    "start": "375600",
    "end": "382080"
  },
  {
    "text": "general whites so like generally applicable",
    "start": "382080",
    "end": "387520"
  },
  {
    "text": "in terms of deployment opel runs as a lightweight self-contained server binary it's",
    "start": "387520",
    "end": "394560"
  },
  {
    "text": "ideally deployed as close to your service as possible and that's also a reason why it's so",
    "start": "394560",
    "end": "400080"
  },
  {
    "text": "lightweight so rather than having like one node but to service all of your applications you deploy one of but per",
    "start": "400080",
    "end": "407840"
  },
  {
    "text": "application or even one op-up per replica of your application and you want them as close to your",
    "start": "407840",
    "end": "414720"
  },
  {
    "text": "service as possible and this is normally to minimize latency since you're going to ask a lot of questions to open you",
    "start": "414720",
    "end": "420639"
  },
  {
    "text": "want you want oppa to be hosted as close to your service as possible",
    "start": "420639",
    "end": "425680"
  },
  {
    "text": "so this is normally on the same host running as a demon or possibly",
    "start": "425680",
    "end": "430800"
  },
  {
    "text": "as a sidecar container in kubernetes and most applications communicate with",
    "start": "430800",
    "end": "437599"
  },
  {
    "text": "the opa server to its rest api so that's how you ask these policy queries",
    "start": "437599",
    "end": "444560"
  },
  {
    "text": "but if you have a go application you could also import opa and use that as a go library since oppa is also written in",
    "start": "444560",
    "end": "451599"
  },
  {
    "text": "go there's an envoy istio integration as well if you if you are",
    "start": "451599",
    "end": "457599"
  },
  {
    "text": "using that and finally you can even compile your policies into web assembly so you can",
    "start": "457599",
    "end": "464400"
  },
  {
    "text": "run policy decisions anywhere where you can run web assembly",
    "start": "464400",
    "end": "471680"
  },
  {
    "text": "so policies they are written in a declarative high-level language",
    "start": "474000",
    "end": "479919"
  },
  {
    "text": "called rego and just as a normal policy or a real",
    "start": "479919",
    "end": "485520"
  },
  {
    "text": "world policy uh a policy in oppa or rego consists of",
    "start": "485520",
    "end": "490960"
  },
  {
    "text": "any number of rules that's basically what a policy is when we evaluate a rule",
    "start": "490960",
    "end": "498000"
  },
  {
    "text": "it commonly returns a boolean value like true or false are we allowed or not",
    "start": "498000",
    "end": "504000"
  },
  {
    "text": "but it could also return any type available in json like strings lists nested objects",
    "start": "504000",
    "end": "510479"
  },
  {
    "text": "a pretty common pattern is uh if you deny something you might also want to return a reason and say you can't do",
    "start": "510479",
    "end": "517039"
  },
  {
    "text": "this because you don't have the admin role for example",
    "start": "517039",
    "end": "523360"
  },
  {
    "text": "so rego includes over 150 built-in functions uh and these are in a",
    "start": "523680",
    "end": "530720"
  },
  {
    "text": "tailor-made to work for the purpose of policy evaluation so things like json",
    "start": "530720",
    "end": "536000"
  },
  {
    "text": "web tokens which might carry user identities and roles date and time",
    "start": "536000",
    "end": "542320"
  },
  {
    "text": "ip address ranges math etc policy testing is easy uh since oppa",
    "start": "542320",
    "end": "550320"
  },
  {
    "text": "provides a unit test framework so policy is code so of course you should be able",
    "start": "550320",
    "end": "555839"
  },
  {
    "text": "to test policy just as any other code it's a well-documented project the uh",
    "start": "555839",
    "end": "562800"
  },
  {
    "text": "the docs are are great i recommend checking them out and there's also a playground available",
    "start": "562800",
    "end": "569600"
  },
  {
    "text": "so you can test things without even running or having oppa on your local machine and it's also a great way to",
    "start": "569600",
    "end": "576640"
  },
  {
    "text": "kind of share snippets between friends or colleagues who are also",
    "start": "576640",
    "end": "581680"
  },
  {
    "text": "working with rego so policy is one of the",
    "start": "581680",
    "end": "588839"
  },
  {
    "text": "uh components required for a policy decision but policy commonly needs data as well",
    "start": "588839",
    "end": "596480"
  },
  {
    "text": "and oppa offers several ways to provide policies with data",
    "start": "596480",
    "end": "601839"
  },
  {
    "text": "and one of them i think we already touched on and that's as part of the the input query so when you ask oppa a",
    "start": "601839",
    "end": "609279"
  },
  {
    "text": "question you might also provide some data with that question so you say i have a user",
    "start": "609279",
    "end": "614320"
  },
  {
    "text": "here trying to access this or that endpoint with these uh roles should that be",
    "start": "614320",
    "end": "620720"
  },
  {
    "text": "allowed or not and oppa can then make a decision based on that",
    "start": "620720",
    "end": "626000"
  },
  {
    "text": "again you can also provide json web tokens that's a very common way now of having like id tokens or access tokens",
    "start": "626000",
    "end": "633040"
  },
  {
    "text": "which carry user identity or client identity",
    "start": "633040",
    "end": "638880"
  },
  {
    "text": "since opa exposes a rest api you can also push data inside of opa so that",
    "start": "638880",
    "end": "643920"
  },
  {
    "text": "data will be available for subsequent requests and there's also a bundle api which is",
    "start": "643920",
    "end": "650399"
  },
  {
    "text": "kind of the opposite to pushing data but rather having oppa periodically go to remote",
    "start": "650399",
    "end": "656560"
  },
  {
    "text": "endpoints and pull data finally there's an http send function",
    "start": "656560",
    "end": "662560"
  },
  {
    "text": "it's a built-in function which allows you to kind of add policy evaluation time from",
    "start": "662560",
    "end": "668079"
  },
  {
    "text": "inside your policy go out and fetch data at that very instant",
    "start": "668079",
    "end": "675480"
  },
  {
    "text": "okay so uh oppa and kubernetes this is obviously kubecon and cloud native",
    "start": "676000",
    "end": "681040"
  },
  {
    "text": "accounts so how does opa and kubernetes fit in",
    "start": "681040",
    "end": "686640"
  },
  {
    "text": "and before we uh gonna approach oppa we might want to remind ourselves how",
    "start": "687440",
    "end": "692800"
  },
  {
    "text": "the kubernetes api works and how a user uh interacts with the kubernetes api",
    "start": "692800",
    "end": "699680"
  },
  {
    "text": "so a user might do something like keep cdl apply to to deploy a resource",
    "start": "699680",
    "end": "706000"
  },
  {
    "text": "but before that resource is deployed or really persisted in the",
    "start": "706000",
    "end": "711920"
  },
  {
    "text": "kubernetes database normally at cd it first passes a series of modules",
    "start": "711920",
    "end": "718560"
  },
  {
    "text": "so first off the user needs to authenticate and after that",
    "start": "718560",
    "end": "723680"
  },
  {
    "text": "the request will pass authorization is the user allowed to deploy this resource",
    "start": "723680",
    "end": "728959"
  },
  {
    "text": "and after that the the request enters the mutating admission controller",
    "start": "728959",
    "end": "735519"
  },
  {
    "text": "where we might modify the actual resource about to be deployed and finally",
    "start": "735519",
    "end": "741200"
  },
  {
    "text": "the resource is validated by the validating admission controller",
    "start": "741200",
    "end": "746720"
  },
  {
    "text": "these modules are chainable meaning you can have any number of authentication modules offer station modules or",
    "start": "746720",
    "end": "753360"
  },
  {
    "text": "mutating or validating admission controllers and of course kubernetes comes with a a",
    "start": "753360",
    "end": "759600"
  },
  {
    "text": "bunch of of all these modules built in such as like the open id connect module",
    "start": "759600",
    "end": "766079"
  },
  {
    "text": "for authentication are back of course for authorization and a bunch of modules for doing",
    "start": "766079",
    "end": "772959"
  },
  {
    "text": "admission control as well both mutating ones and validating ones",
    "start": "772959",
    "end": "778880"
  },
  {
    "text": "but what's even more interesting at least from an oppa perspective are",
    "start": "779440",
    "end": "785279"
  },
  {
    "text": "is the option to use web hooks meaning that rather than using one of these built-in modules",
    "start": "785279",
    "end": "791120"
  },
  {
    "text": "we can reach out to an external service and ask that for advice",
    "start": "791120",
    "end": "798000"
  },
  {
    "text": "and of course reaching out to an external service for advice or a decision that's what oppa does",
    "start": "798000",
    "end": "804639"
  },
  {
    "text": "so for both authorization mutating and validating admission controller you",
    "start": "804639",
    "end": "810560"
  },
  {
    "text": "can configure a web hook to reach out to oppa for a decision",
    "start": "810560",
    "end": "817120"
  },
  {
    "text": "let's zoom in into one of these cases which would be the validating admission controller",
    "start": "818000",
    "end": "824800"
  },
  {
    "text": "and why the validating one well it's by far the most popular module",
    "start": "824880",
    "end": "830480"
  },
  {
    "text": "to extend or the most popular web hook to use",
    "start": "830480",
    "end": "835519"
  },
  {
    "text": "and the reason that is it's because it allows us to build policy-based guardrails around our clusters",
    "start": "835600",
    "end": "843440"
  },
  {
    "text": "meaning what we can do and can't do so some common policies uh that are that",
    "start": "843440",
    "end": "849920"
  },
  {
    "text": "we can enforce include the use of only an internal docker registry",
    "start": "849920",
    "end": "857040"
  },
  {
    "text": "and other type of image constraints we might not want to use like the latest tag but also always have a",
    "start": "857040",
    "end": "864399"
  },
  {
    "text": "specific version for example uh requiring labels or annotations on",
    "start": "864399",
    "end": "871040"
  },
  {
    "text": "resources you might say that any any resource deployed must have must",
    "start": "871040",
    "end": "877040"
  },
  {
    "text": "belong to a team and that must be clearly marked in a label or an annotation",
    "start": "877040",
    "end": "883440"
  },
  {
    "text": "it could be a call center it could be a department could be many things",
    "start": "883440",
    "end": "888800"
  },
  {
    "text": "ingress or host path uniqueness that's another common uh thing you you might",
    "start": "888800",
    "end": "894880"
  },
  {
    "text": "want to enforce so that if you have an ingress deployed and and that one",
    "start": "894880",
    "end": "900720"
  },
  {
    "text": "is deployed to a specific host or path you can't deploy another ingress uh",
    "start": "900720",
    "end": "907440"
  },
  {
    "text": "resource to override that or to conflict so you check uh",
    "start": "907440",
    "end": "912880"
  },
  {
    "text": "what what ingresses are currently deployed and then you compared compare that",
    "start": "912880",
    "end": "918160"
  },
  {
    "text": "to one that is about to be deployed you might want to enforce tls for",
    "start": "918160",
    "end": "923680"
  },
  {
    "text": "services might want to add an eye some attributes like",
    "start": "923680",
    "end": "928880"
  },
  {
    "text": "host path volume amounts you might want to put resource uh",
    "start": "928880",
    "end": "934800"
  },
  {
    "text": "or limits on resource allocation pod security policies are which are",
    "start": "934800",
    "end": "940560"
  },
  {
    "text": "replaced now by things like open and other uh validating",
    "start": "940560",
    "end": "945600"
  },
  {
    "text": "admission controllers uh and you might want to do some",
    "start": "945600",
    "end": "952560"
  },
  {
    "text": "even more like outdoor stuff like deny modifications maybe you don't want to allow deploys on fridays or only when",
    "start": "952560",
    "end": "960240"
  },
  {
    "text": "people are on call and so on and so forth really anything",
    "start": "960240",
    "end": "966320"
  },
  {
    "text": "so validating admission controller when we talk about like admission controllers it's almost almost always the the",
    "start": "966320",
    "end": "972959"
  },
  {
    "text": "validating one we mean the mutating one is is certainly useful for",
    "start": "972959",
    "end": "978639"
  },
  {
    "text": "to some extent but it doesn't really build these guardrails that's what the validating admission controller does it",
    "start": "978639",
    "end": "985519"
  },
  {
    "text": "provides us a safety net around our kubernetes clusters",
    "start": "985519",
    "end": "991519"
  },
  {
    "text": "so with that uh let's look into what uh rhaego policy",
    "start": "991920",
    "end": "997920"
  },
  {
    "text": "offering and policy testing might look like and also uh",
    "start": "997920",
    "end": "1003120"
  },
  {
    "text": "how we could deploy uh oppa and ray and use rego for kubernetes validating admission",
    "start": "1003120",
    "end": "1011199"
  },
  {
    "text": "control and how we can use rego policies to build these type of guardrails",
    "start": "1011199",
    "end": "1018560"
  },
  {
    "text": "okay so for the demo part here we're gonna do two things we're gonna look at some",
    "start": "1018560",
    "end": "1024000"
  },
  {
    "text": "simple rego policy offering and testing and we're gonna uh take a look at an example of how we can use regal rules to",
    "start": "1024000",
    "end": "1032079"
  },
  {
    "text": "to make uh to enforce our policy in a kubernetes admission",
    "start": "1032079",
    "end": "1037280"
  },
  {
    "text": "control scenario first off let's consider a scenario where we have",
    "start": "1037280",
    "end": "1042720"
  },
  {
    "text": "a service that queries oppa for a policy decision and in this case we want to know can the",
    "start": "1042720",
    "end": "1049360"
  },
  {
    "text": "user access an endpoint or not and the rules we're going to work with",
    "start": "1049360",
    "end": "1054720"
  },
  {
    "text": "here is that anyone can access the paths here",
    "start": "1054720",
    "end": "1060799"
  },
  {
    "text": "that are part of our data source remember that policies are both",
    "start": "1060799",
    "end": "1066400"
  },
  {
    "text": "policy and their data so if we have a path inside of our data",
    "start": "1066400",
    "end": "1071679"
  },
  {
    "text": "source here called public paths uh and corresponding to the the path",
    "start": "1071679",
    "end": "1077840"
  },
  {
    "text": "provided in the input and that the request method is get we don't want anyone to to write or modify these",
    "start": "1077840",
    "end": "1084880"
  },
  {
    "text": "resources but anyone should be able to read public resources but if",
    "start": "1084880",
    "end": "1090160"
  },
  {
    "text": "the path is not in here we're going to require the user to have the admin role",
    "start": "1090160",
    "end": "1096960"
  },
  {
    "text": "so let's get started i'm going to start here creating a policy file",
    "start": "1096960",
    "end": "1103440"
  },
  {
    "text": "i'm going to put it in a package all policies have a package it's sort of like a module or a namespace or",
    "start": "1103440",
    "end": "1110640"
  },
  {
    "text": "or what have you so i'm just going to call this policy but you can name it whatever you want",
    "start": "1110640",
    "end": "1117120"
  },
  {
    "text": "and when it comes to naming we're going to create our first rule and rules always have a name but the names",
    "start": "1117120",
    "end": "1124720"
  },
  {
    "text": "don't have a meaning to oppa we call them allow or deny warn and so on but",
    "start": "1124720",
    "end": "1130720"
  },
  {
    "text": "it's really just a convention the way where the way rules work and",
    "start": "1130720",
    "end": "1136240"
  },
  {
    "text": "rule evaluation works is if all the conditions inside of the body the body is what we have inside of the",
    "start": "1136240",
    "end": "1143280"
  },
  {
    "text": "curly bracket so if all the conditions here are true like this",
    "start": "1143280",
    "end": "1148720"
  },
  {
    "text": "then the allow rule is true so if you were to write this in another programming language you might say",
    "start": "1148720",
    "end": "1154480"
  },
  {
    "text": "something like if this and this and after each line you'd say",
    "start": "1154480",
    "end": "1161280"
  },
  {
    "text": "and so all the lines are evaluated in order and",
    "start": "1161280",
    "end": "1166640"
  },
  {
    "text": "all of them need to be true in order for the allow rule to be true",
    "start": "1166640",
    "end": "1171760"
  },
  {
    "text": "and when i say to be true that's just the default we could actually specify",
    "start": "1171760",
    "end": "1177600"
  },
  {
    "text": "a return value like this if we want to return a string we could return a complex object or a list or whatever",
    "start": "1177600",
    "end": "1186000"
  },
  {
    "text": "but of course we just don't want to compare constants here what we want to do here is we want to use data from the",
    "start": "1186000",
    "end": "1191120"
  },
  {
    "text": "input specifically the request method and the request path so let's start there okay and to",
    "start": "1191120",
    "end": "1198240"
  },
  {
    "text": "reference values from the input you just say input so input request",
    "start": "1198240",
    "end": "1204799"
  },
  {
    "text": "method is equal to get so this is our first assertion if this one is true",
    "start": "1204799",
    "end": "1211039"
  },
  {
    "text": "we're gonna move on to the next line if this is not true allow is gonna be",
    "start": "1211039",
    "end": "1216080"
  },
  {
    "text": "not true but not true in rego is by default undefined so what we want might want to",
    "start": "1216080",
    "end": "1222159"
  },
  {
    "text": "do here is we might want to say that by default allow should return false and not just an empty response",
    "start": "1222159",
    "end": "1230159"
  },
  {
    "text": "and the next line we want to see that the request path",
    "start": "1230159",
    "end": "1236559"
  },
  {
    "text": "and in this case we can't just do a direct comparison because we have a lot of values or we have a few values",
    "start": "1236559",
    "end": "1242559"
  },
  {
    "text": "here so we have a few paths and if one of these are equal to",
    "start": "1242559",
    "end": "1248720"
  },
  {
    "text": "to the and the way we reference here that is just like with input but instead",
    "start": "1248720",
    "end": "1254400"
  },
  {
    "text": "we say data so data public paths and again if one of these",
    "start": "1254400",
    "end": "1260080"
  },
  {
    "text": "is equal to the path in the input we allow it the way we iterate over these",
    "start": "1260080",
    "end": "1266000"
  },
  {
    "text": "is is like this we add square brackets and if we are interested in uh the index we",
    "start": "1266000",
    "end": "1273200"
  },
  {
    "text": "could we could declare a variable for that but in this case we aren't",
    "start": "1273200",
    "end": "1278480"
  },
  {
    "text": "uh new though in oppa version 34 is that we can use uh future",
    "start": "1278480",
    "end": "1284640"
  },
  {
    "text": "oh sorry we can import the in keyword keywords it",
    "start": "1284640",
    "end": "1291600"
  },
  {
    "text": "which makes this uh a little nicer to the eye instead of iterating over these",
    "start": "1291600",
    "end": "1296799"
  },
  {
    "text": "we we just want to check for membership so we can say if the input request path",
    "start": "1296799",
    "end": "1303679"
  },
  {
    "text": "is in data public paths then this should be allowed",
    "start": "1303679",
    "end": "1310159"
  },
  {
    "text": "so how would we test this now we have an input object here we're trying to make a get request to the",
    "start": "1310159",
    "end": "1316159"
  },
  {
    "text": "public endpoint our rule doesn't check for the user but it doesn't have to because we say anyone",
    "start": "1316159",
    "end": "1323520"
  },
  {
    "text": "can access the public path since uh it's in the list of allowed public paths",
    "start": "1323520",
    "end": "1330400"
  },
  {
    "text": "so one way we could test this now is by using opa-eval i already prepared that some here so we",
    "start": "1330400",
    "end": "1337520"
  },
  {
    "text": "have opa-eval and we provided the policy we provide a data file we provide the",
    "start": "1337520",
    "end": "1342640"
  },
  {
    "text": "input and we query the data policy allow rule",
    "start": "1342640",
    "end": "1348240"
  },
  {
    "text": "and we can see that yes indeed we are allowed and if we change something here in the",
    "start": "1348240",
    "end": "1354720"
  },
  {
    "text": "input let's try and access the admin endpoint and we",
    "start": "1354720",
    "end": "1361840"
  },
  {
    "text": "created for that we can see that oppa changed the decision to false we're no longer allowed which makes sense",
    "start": "1361840",
    "end": "1370000"
  },
  {
    "text": "however querying manually like this isn't really ideal uh",
    "start": "1370000",
    "end": "1375840"
  },
  {
    "text": "oppa and rego is policy as code after all so we want to use best practices known from any other",
    "start": "1375840",
    "end": "1382480"
  },
  {
    "text": "language and code in in other contexts so what we want to do here is we want to",
    "start": "1382480",
    "end": "1387760"
  },
  {
    "text": "write a unit test so i'm going to go ahead and i'm going to create a new file",
    "start": "1387760",
    "end": "1393840"
  },
  {
    "text": "i'm going to call it policy test regal",
    "start": "1393840",
    "end": "1399679"
  },
  {
    "text": "put up in the same package and unit tests are just regular rule",
    "start": "1399679",
    "end": "1405520"
  },
  {
    "text": "they just their name just start with tests so i'm going to say deny or",
    "start": "1405520",
    "end": "1411840"
  },
  {
    "text": "allow if public path",
    "start": "1411840",
    "end": "1416960"
  },
  {
    "text": "and the weight test works i'm not going to evaluate the allow rule from from here",
    "start": "1416960",
    "end": "1423760"
  },
  {
    "text": "and the way it works is since i can't provide like the input file here i'm going to have to mock it the way i mock",
    "start": "1423760",
    "end": "1430640"
  },
  {
    "text": "things here is i say with input ass and then i can provide the",
    "start": "1430640",
    "end": "1435919"
  },
  {
    "text": "input so in this case i had a request",
    "start": "1435919",
    "end": "1441039"
  },
  {
    "text": "and the method was a get one and the path was",
    "start": "1441039",
    "end": "1446960"
  },
  {
    "text": "public so i think this should work the allow rule here should evaluate to true given",
    "start": "1446960",
    "end": "1453440"
  },
  {
    "text": "uh an input like this so let's try it out so rather than running oppa eval we can now run oppa",
    "start": "1453440",
    "end": "1461279"
  },
  {
    "text": "test and we can see that indeed that actually works",
    "start": "1461279",
    "end": "1466799"
  },
  {
    "text": "so let's add a negative test as well so we're gonna say",
    "start": "1466799",
    "end": "1472559"
  },
  {
    "text": "uh test and we're gonna say that deny that we're not allowed",
    "start": "1472559",
    "end": "1478000"
  },
  {
    "text": "if not public path so if we change the path here now to admin or",
    "start": "1478000",
    "end": "1484400"
  },
  {
    "text": "really anything which isn't listed in in the public paths we're going to have to change this to not allow",
    "start": "1484400",
    "end": "1491600"
  },
  {
    "text": "and we run the tests here again we can see that now we have two passing",
    "start": "1491600",
    "end": "1497120"
  },
  {
    "text": "tests so that's great we can start to build some confidence in",
    "start": "1497120",
    "end": "1502159"
  },
  {
    "text": "our in our policy and this is of course a very simple rule",
    "start": "1502159",
    "end": "1507440"
  },
  {
    "text": "uh so we had one more condition to to to take into consideration we wanted an",
    "start": "1507440",
    "end": "1513120"
  },
  {
    "text": "admin user to be able to add to access any path really",
    "start": "1513120",
    "end": "1518480"
  },
  {
    "text": "so the way we can do that is we simply add another rule we call this allow as well",
    "start": "1518480",
    "end": "1524159"
  },
  {
    "text": "and the way it works if you have many rules with the same name oppa is going to evaluate them and if one of them is",
    "start": "1524159",
    "end": "1530400"
  },
  {
    "text": "true then the rule itself is true so any of these conditions can be true and then",
    "start": "1530400",
    "end": "1536559"
  },
  {
    "text": "the allow rule is true so in this case we had a user and the",
    "start": "1536559",
    "end": "1541919"
  },
  {
    "text": "user had roles and we can iterate over them again but",
    "start": "1541919",
    "end": "1547679"
  },
  {
    "text": "since we have this new in construct we can simply do this if admin",
    "start": "1547679",
    "end": "1554080"
  },
  {
    "text": "is in the list of user roles allow should also be true and we can",
    "start": "1554080",
    "end": "1560880"
  },
  {
    "text": "stop there we don't really need to uh test uh the method",
    "start": "1560880",
    "end": "1566400"
  },
  {
    "text": "the path or anything because we say the admin should be able to access anything but of course we will might want to add",
    "start": "1566400",
    "end": "1573760"
  },
  {
    "text": "more conditions in a real scenario allow",
    "start": "1573760",
    "end": "1579360"
  },
  {
    "text": "if admin and i'm just gonna say allow here",
    "start": "1579520",
    "end": "1585039"
  },
  {
    "text": "with input pass and i'm gonna copy this here",
    "start": "1585039",
    "end": "1593200"
  },
  {
    "text": "just change",
    "start": "1593279",
    "end": "1596760"
  },
  {
    "text": "and we're gonna add the user rules",
    "start": "1598880",
    "end": "1605120"
  },
  {
    "text": "and we're gonna have the admiral here and i'm actually gonna change the method just for fun here uh to see that the",
    "start": "1605120",
    "end": "1612480"
  },
  {
    "text": "admin can even delete the admin endpoint it might be a bit too much but anyway it's",
    "start": "1612480",
    "end": "1619679"
  },
  {
    "text": "it's a fun test so let's see if that works yeah the admin can do that so that",
    "start": "1619679",
    "end": "1625200"
  },
  {
    "text": "makes sense so that would be some a really simple rego policy with",
    "start": "1625200",
    "end": "1631360"
  },
  {
    "text": "two rules one to allow anyone to read from public paths and the admin to do",
    "start": "1631360",
    "end": "1637360"
  },
  {
    "text": "pretty much anything so if we hop over here to the kubernetes folder",
    "start": "1637360",
    "end": "1644240"
  },
  {
    "text": "and take a quick look at how rules might look like for kubernetes admission",
    "start": "1644240",
    "end": "1649520"
  },
  {
    "text": "control it could be something like this the input in this co in this case is of",
    "start": "1649520",
    "end": "1655360"
  },
  {
    "text": "course the uh admission review object so the api server",
    "start": "1655360",
    "end": "1660480"
  },
  {
    "text": "sends uh the resource about to be persisted in fcd to oppa",
    "start": "1660480",
    "end": "1666399"
  },
  {
    "text": "and oppa uh reviews that and then makes a decision and in this case we named the",
    "start": "1666399",
    "end": "1672720"
  },
  {
    "text": "rule deny and rather than returning just true we return a string",
    "start": "1672720",
    "end": "1679279"
  },
  {
    "text": "uh with a reason if we choose to deny something the user likely wants to know",
    "start": "1679279",
    "end": "1684799"
  },
  {
    "text": "why so in this case we have a rule which says deny because you cannot create resources in the",
    "start": "1684799",
    "end": "1691679"
  },
  {
    "text": "default namespace so if you try and update or create anything in the default namespace",
    "start": "1691679",
    "end": "1698240"
  },
  {
    "text": "we're going to deny if we uh try and",
    "start": "1698240",
    "end": "1703919"
  },
  {
    "text": "deploy or to deploy a deployment and that does not have a",
    "start": "1703919",
    "end": "1710880"
  },
  {
    "text": "a team label that's an example we used before i'm sure uh so if if we don't have a team label",
    "start": "1710880",
    "end": "1718720"
  },
  {
    "text": "present in a deployment we're gonna deny it as well and here's another thing we could also",
    "start": "1718720",
    "end": "1725039"
  },
  {
    "text": "just choose to one so in this case if we try and deploy a deployment",
    "start": "1725039",
    "end": "1731200"
  },
  {
    "text": "and the number of replicas specified here is uh less than two",
    "start": "1731200",
    "end": "1736880"
  },
  {
    "text": "then we can we can simply just send a warning it's fine but",
    "start": "1736880",
    "end": "1741919"
  },
  {
    "text": "we recommend you to to deploy with at least two uh replicas",
    "start": "1741919",
    "end": "1748640"
  },
  {
    "text": "so let's try that out uh and prepared here uh deployment of",
    "start": "1748640",
    "end": "1754399"
  },
  {
    "text": "engine x uh which yeah it looks fine but we can try and",
    "start": "1754399",
    "end": "1759840"
  },
  {
    "text": "deploy that now and we see what's happened so i'm gonna cd into that",
    "start": "1759840",
    "end": "1765200"
  },
  {
    "text": "and i'm gonna say cube cdl apply",
    "start": "1765200",
    "end": "1770320"
  },
  {
    "text": "resources engine x so now the kubernetes api server",
    "start": "1770640",
    "end": "1777520"
  },
  {
    "text": "received that request and it forwarded that to oppa and oppa of course we had two policy",
    "start": "1777520",
    "end": "1784000"
  },
  {
    "text": "violations here one of them is it's just a warning so if this wouldn't fail but we would just",
    "start": "1784000",
    "end": "1790640"
  },
  {
    "text": "print a warning and that was the one we saw minimum of two replicas recommended but one of them is an error so this",
    "start": "1790640",
    "end": "1797039"
  },
  {
    "text": "resource was actually not deployed because we require",
    "start": "1797039",
    "end": "1802320"
  },
  {
    "text": "a team label to be present on any resource so let's see if we can fix that we're",
    "start": "1802320",
    "end": "1808080"
  },
  {
    "text": "gonna say team team oppa",
    "start": "1808080",
    "end": "1813200"
  },
  {
    "text": "and we might as well fix the warnings while we're at it",
    "start": "1813200",
    "end": "1818640"
  },
  {
    "text": "so i'm gonna try and do that uh so let's see if we now can apply it yeah",
    "start": "1818640",
    "end": "1825840"
  },
  {
    "text": "that worked so so this is what we mean when we say that we build guardrails we",
    "start": "1825840",
    "end": "1832399"
  },
  {
    "text": "add rules to uh oh sorry we had rules",
    "start": "1832399",
    "end": "1838720"
  },
  {
    "text": "that determine what we want and what we want want to allow inside of our clusters",
    "start": "1838720",
    "end": "1844480"
  },
  {
    "text": "and using a policy engine like oppa we can be",
    "start": "1844480",
    "end": "1850000"
  },
  {
    "text": "exactly as specific and detailed as we want so",
    "start": "1850000",
    "end": "1855760"
  },
  {
    "text": "that's all very well how do we get started",
    "start": "1855760",
    "end": "1861039"
  },
  {
    "text": "my suggestion when you start looking into oppa and rego it's always to start small",
    "start": "1861120",
    "end": "1867840"
  },
  {
    "text": "kind of like we did in in the demo start simple just add a couple of rules a couple of",
    "start": "1867840",
    "end": "1873519"
  },
  {
    "text": "tests and and go from there build confidence in your policy",
    "start": "1873519",
    "end": "1879360"
  },
  {
    "text": "and again the open documentation is a fantastic resource so make sure to use that",
    "start": "1879360",
    "end": "1884399"
  },
  {
    "text": "get a feel for the basics and the built-ins and work your way from there",
    "start": "1884399",
    "end": "1892000"
  },
  {
    "text": "and and another thing i i think is a good idea is to kind of start",
    "start": "1892000",
    "end": "1897760"
  },
  {
    "text": "where you stand like look at the applications that you have close to you and that you have previous",
    "start": "1897760",
    "end": "1903200"
  },
  {
    "text": "experience with and try and identify what policies are already present and whether we can",
    "start": "1903200",
    "end": "1910720"
  },
  {
    "text": "extract some of those uh to oppa because once we can do that you can start to delegate the responsibility for",
    "start": "1910720",
    "end": "1918559"
  },
  {
    "text": "policy decisions to open and again you can start small maybe just take a single",
    "start": "1918559",
    "end": "1924000"
  },
  {
    "text": "endpoint uh a single user or something like that and start to for for that end point you",
    "start": "1924000",
    "end": "1931679"
  },
  {
    "text": "delegate the decision to oppa so you deploy that and you build experience",
    "start": "1931679",
    "end": "1939360"
  },
  {
    "text": "and once we have something like that up and running we can start to scale up oppa offers",
    "start": "1939760",
    "end": "1946880"
  },
  {
    "text": "a bunch of features for for management such as like decision logging",
    "start": "1946880",
    "end": "1952399"
  },
  {
    "text": "the bundle servers for storing policies externally and so on",
    "start": "1952399",
    "end": "1958080"
  },
  {
    "text": "there's the styra academy which is a great resource for learning rego it's a free resource",
    "start": "1958080",
    "end": "1964559"
  },
  {
    "text": "and there's the styrodas which is a control plane for managing oppa at scale",
    "start": "1964559",
    "end": "1970000"
  },
  {
    "text": "and there's a free edition which you can try out finally i think you should join the oppa",
    "start": "1970000",
    "end": "1976320"
  },
  {
    "text": "slack community there's over 5000 oppa users and it's a great place to ask",
    "start": "1976320",
    "end": "1981840"
  },
  {
    "text": "questions questions discussions and anything that goes on in the opa community",
    "start": "1981840",
    "end": "1989120"
  },
  {
    "text": "so with that i say thank you and uh i'd be happy to answer your questions after",
    "start": "1989120",
    "end": "1995279"
  },
  {
    "text": "so thanks everyone",
    "start": "1995279",
    "end": "1999039"
  }
]