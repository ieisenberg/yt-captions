[
  {
    "start": "0",
    "end": "42000"
  },
  {
    "text": "I'm been furries I lead the developer experience team on open shift from Red",
    "start": "79",
    "end": "5190"
  },
  {
    "text": "Hat and so we contribute the s2i project as well as the build functionality on",
    "start": "5190",
    "end": "11400"
  },
  {
    "text": "open shift and this is matt moore as your mic off",
    "start": "11400",
    "end": "17510"
  },
  {
    "text": "testing yeah so I'm I'm Matt Moore I work in container tools at Google and",
    "start": "17510",
    "end": "23060"
  },
  {
    "text": "you know I sort of have my fingers and a lot of pies including container builds",
    "start": "23060",
    "end": "28230"
  },
  {
    "text": "container registry and so on just quick",
    "start": "28230",
    "end": "33600"
  },
  {
    "text": "poll how many people were at our session the intro session yesterday good we",
    "start": "33600",
    "end": "39210"
  },
  {
    "text": "didn't scare too many people away all right so today we're gonna be following up on that and talking about how to take",
    "start": "39210",
    "end": "45180"
  },
  {
    "start": "42000",
    "end": "75000"
  },
  {
    "text": "those technologies that we discussed yesterday all the different build tools how do you build images and talk about",
    "start": "45180",
    "end": "50640"
  },
  {
    "text": "what it would mean to bring them to a kubernetes cluster so we're gonna go",
    "start": "50640",
    "end": "56730"
  },
  {
    "text": "through kind of what are the options today that exist and then we're gonna talk through some proposals about where",
    "start": "56730",
    "end": "63420"
  },
  {
    "text": "we see the space going in the future and then open the floor for discussion get some thoughts from you guys as well",
    "start": "63420",
    "end": "69000"
  },
  {
    "text": "about what you think you'd like to see and build capabilities on kubernetes so",
    "start": "69000",
    "end": "76200"
  },
  {
    "start": "75000",
    "end": "206000"
  },
  {
    "text": "today one of your options and this is probably what most people are doing today if you're even doing image builds",
    "start": "76200",
    "end": "82740"
  },
  {
    "text": "on cluster at all a lot of people are probably doing their image builds off the cluster but if you're doing a non",
    "start": "82740",
    "end": "88530"
  },
  {
    "text": "cluster then you're probably running a privileged pod which if you watch loses",
    "start": "88530",
    "end": "93720"
  },
  {
    "text": "session this morning you know why not to do that but you're running a foolish pod you're mounting the docker socket into",
    "start": "93720",
    "end": "100020"
  },
  {
    "text": "that privileged pod and then you're invoking docker build with your doctor file you're also obviously mounting all",
    "start": "100020",
    "end": "105960"
  },
  {
    "text": "your build content into that pod or injecting it and then you push the resulting image up to your registry and",
    "start": "105960",
    "end": "112110"
  },
  {
    "text": "tada you have built an image in a very insecure way so what's good well you can",
    "start": "112110",
    "end": "118079"
  },
  {
    "text": "do that today on any cluster doesn't require anything you don't have out of the box as long as you have a doctor",
    "start": "118079",
    "end": "125219"
  },
  {
    "text": "daemon available so with things like cryo you might be starting to run clusters where you don't have a docker",
    "start": "125219",
    "end": "130709"
  },
  {
    "text": "daemon on your host nodes and so that's enemy limitation and as far as using this",
    "start": "130709",
    "end": "135990"
  },
  {
    "text": "approach and you get really great layer sharing and reuse again we talked some",
    "start": "135990",
    "end": "141180"
  },
  {
    "text": "about this yesterday but because you're building effectively on the host machine all the layers that you built during",
    "start": "141180",
    "end": "148110"
  },
  {
    "text": "that docker build process are going to be in that local storage and so if you come back later and do another build on",
    "start": "148110",
    "end": "153600"
  },
  {
    "text": "that machine all those layers are available in the cache and get reused to get good build performance as a result",
    "start": "153600",
    "end": "159690"
  },
  {
    "text": "of that bad part is see losses discussion this morning I think she",
    "start": "159690",
    "end": "165480"
  },
  {
    "text": "covered everything that I was going to say about this but it's your your opening up your host essentially to",
    "start": "165480",
    "end": "171030"
  },
  {
    "text": "anybody who can create those pods to do anything they want on that host machine so if you're running a development",
    "start": "171030",
    "end": "176070"
  },
  {
    "text": "cluster or you trust everybody who's running on that cluster both trust them not to be malicious and trust them not to do something dumb then it's okay but",
    "start": "176070",
    "end": "183989"
  },
  {
    "text": "if you want to do a multi-tenant environment then it's not gonna work for you and it also means that developers",
    "start": "183989",
    "end": "190290"
  },
  {
    "text": "need to learn docker files not necessarily worst thing in the world but again from our discussion yesterday if",
    "start": "190290",
    "end": "196410"
  },
  {
    "text": "you want to insulate your developers from docker files let them just work in source code then this approach doesn't",
    "start": "196410",
    "end": "202200"
  },
  {
    "text": "give you that abstraction so the other",
    "start": "202200",
    "end": "208440"
  },
  {
    "start": "206000",
    "end": "341000"
  },
  {
    "text": "option today and I apologize if this feels a little bit like a product plug but there is it's going to lead to where",
    "start": "208440",
    "end": "214530"
  },
  {
    "text": "do we go as a community in this space so there is the open ship build API so you have to be running an open ship cluster",
    "start": "214530",
    "end": "220350"
  },
  {
    "text": "but it is an API resource defined according to the kubernetes spec that",
    "start": "220350",
    "end": "226530"
  },
  {
    "text": "lets you define a build you want to run on the cluster and there is a controller that recognizes you've created this",
    "start": "226530",
    "end": "233340"
  },
  {
    "text": "build API object and creates a privilege pod on the user's behalf but that the user does not actually have direct",
    "start": "233340",
    "end": "239640"
  },
  {
    "text": "control over so the operations that are performed within that privilege pod are",
    "start": "239640",
    "end": "245030"
  },
  {
    "text": "completely controlled by the build object nothing that the user is able to control so it's going to be safe logic",
    "start": "245030",
    "end": "253440"
  },
  {
    "text": "that's either going to do the s2i build or a docker build but without again user injection of their own logic in that",
    "start": "253440",
    "end": "260430"
  },
  {
    "text": "privileged environment so it's nice that it's a first-class API for a new build",
    "start": "260430",
    "end": "266460"
  },
  {
    "text": "so you can use your client commands to query the list of builds they show up as resources just",
    "start": "266460",
    "end": "272310"
  },
  {
    "text": "like pods or deployments or anything else you can create the build you can watch the state of them you can view",
    "start": "272310",
    "end": "278100"
  },
  {
    "text": "their logs all that looks just like working with any other kubernetes resource and users don't get access to",
    "start": "278100",
    "end": "286200"
  },
  {
    "text": "the previous pods they don't need access through pods they also don't get access to the docker daemon and if you're using",
    "start": "286200",
    "end": "291900"
  },
  {
    "text": "us to I builds you don't even need a docker file so you've abstracted that away and because it is effectively still",
    "start": "291900",
    "end": "298140"
  },
  {
    "text": "doing that docker build on hosts you're getting that layer reuse as long as your build lands on the same node again or a",
    "start": "298140",
    "end": "304110"
  },
  {
    "text": "future build what's bad it's still using privileged pods so if there is a",
    "start": "304110",
    "end": "309810"
  },
  {
    "text": "vulnerability it could be an exposure for the cluster and it is an open shift",
    "start": "309810",
    "end": "315360"
  },
  {
    "text": "specific feature of the API and the controller that make all this work do not exist on kubernetes today and then",
    "start": "315360",
    "end": "322590"
  },
  {
    "text": "it also still requires the doctor daemon both s2i and the docker build approach are interacting with the docker Damon so",
    "start": "322590",
    "end": "328890"
  },
  {
    "text": "if you're trying to use cryo and you want to get rid of the docker name entirely you can't you can move to cryo",
    "start": "328890",
    "end": "334170"
  },
  {
    "text": "but you still have to also have a docker daemon running on your hosts in parallel",
    "start": "334170",
    "end": "340520"
  },
  {
    "start": "341000",
    "end": "476000"
  },
  {
    "text": "so what does this API look like again just sort of setting the table for the",
    "start": "342230",
    "end": "347760"
  },
  {
    "text": "future of a build API in general we provide an input for your git repository",
    "start": "347760",
    "end": "353400"
  },
  {
    "text": "for your source code you can provide input from other images so if you have an image that contains some dependent",
    "start": "353400",
    "end": "359070"
  },
  {
    "text": "jars or some drivers we can pull down that image extract the content from that and provide it as another input that the",
    "start": "359070",
    "end": "365760"
  },
  {
    "text": "build will consume secrets kubernetes secrets can be provides content so if",
    "start": "365760",
    "end": "370830"
  },
  {
    "text": "you have a secret that you need to access a maven repository or something you can make that available to your",
    "start": "370830",
    "end": "375930"
  },
  {
    "text": "build through the kubernetes secrets API you can provide your own environment variables for proxy settings or",
    "start": "375930",
    "end": "382320"
  },
  {
    "text": "configuration inputs and then you can",
    "start": "382320",
    "end": "388260"
  },
  {
    "text": "also do secrets for accessing the input so there's secrets that are inputs to the build itself and there are secrets",
    "start": "388260",
    "end": "394380"
  },
  {
    "text": "for cloning your source so if you have a specific secret to access your git repository or a secret to pull down",
    "start": "394380",
    "end": "401159"
  },
  {
    "text": "the images that you're getting content from you can supply those as well when these builds get scheduled we offer",
    "start": "401159",
    "end": "408089"
  },
  {
    "text": "serial and parallel scheduling by default at serial you know if you you define what we call build config and",
    "start": "408089",
    "end": "413339"
  },
  {
    "text": "then each time you trigger that build you'll get a build object will run one at a time until they're all done or you",
    "start": "413339",
    "end": "418919"
  },
  {
    "text": "can run them all in parallel and you can configure the resources because these things all run in pods how many",
    "start": "418919",
    "end": "425699"
  },
  {
    "text": "resources just like any other pot you want that build to be able to consume and you can trigger your builds via web",
    "start": "425699",
    "end": "432360"
  },
  {
    "text": "hooks both you know github git git lab etc web hooks also a generic web hook and also on image change so if your base",
    "start": "432360",
    "end": "441029"
  },
  {
    "text": "image that your build is going off of changes we can automatically trigger a",
    "start": "441029",
    "end": "446429"
  },
  {
    "text": "build so if there's a security vulnerability and rel and your images based on rel you get the new rel image",
    "start": "446429",
    "end": "452579"
  },
  {
    "text": "will rebuild your application image on top of it without you looking at anything and same thing if you're",
    "start": "452579",
    "end": "459569"
  },
  {
    "text": "getting content from other images that can also trigger your build to rerun and then finally where do you want to push",
    "start": "459569",
    "end": "467099"
  },
  {
    "text": "your application image when you're done so your your output target any registry you want to push to and if necessary a",
    "start": "467099",
    "end": "473039"
  },
  {
    "text": "secret that enables you to push there wouldn't be a kubernetes presentation",
    "start": "473039",
    "end": "480539"
  },
  {
    "start": "476000",
    "end": "562000"
  },
  {
    "text": "without some yeah Mille so here is an example of the build config API expect",
    "start": "480539",
    "end": "486990"
  },
  {
    "text": "out and you can basically just see the various inputs that I discussed there is more than what is seen here but you can",
    "start": "486990",
    "end": "494009"
  },
  {
    "text": "see here we've got the run policy as serial we've got a github trigger so that when your github repository changes",
    "start": "494009",
    "end": "501059"
  },
  {
    "text": "we will trigger a build here we also have an image change trigger so that if",
    "start": "501059",
    "end": "506069"
  },
  {
    "text": "the base image changes we'll run a build we've got our git source repository my app slash Ruby we also have a git ref so",
    "start": "506069",
    "end": "513779"
  },
  {
    "text": "we're actually going to build a specific branch of that repository we've got our git source secrets so that we can",
    "start": "513779",
    "end": "519360"
  },
  {
    "text": "actually clone that repo in case it's private and then as far as on the on the",
    "start": "519360",
    "end": "525779"
  },
  {
    "text": "other side we've got these strategy so this is where we decided we're using s2i are we using docker are we going to use something else and so here we're using",
    "start": "525779",
    "end": "533100"
  },
  {
    "text": "the s2i strategy so strategy and we're saying the Builder image is going to be this rui 2.4 and",
    "start": "533100",
    "end": "540060"
  },
  {
    "text": "you see it says image stream tag that's a abstraction that OpenShift wraps around access to images but basically",
    "start": "540060",
    "end": "546389"
  },
  {
    "text": "you can think of you're saying I want to use the Ruby version 2.4 tag and then",
    "start": "546389",
    "end": "551730"
  },
  {
    "text": "lastly we have the output target again wrapped with an image stream but basically saying this is the image that we're gonna push out when this build",
    "start": "551730",
    "end": "558120"
  },
  {
    "text": "finishes so that's the OpenShift build",
    "start": "558120",
    "end": "566249"
  },
  {
    "start": "562000",
    "end": "635000"
  },
  {
    "text": "API the another technology that I just",
    "start": "566249",
    "end": "571470"
  },
  {
    "text": "recently became familiar with is a and I'm not affiliated with this project but is the container builder interface",
    "start": "571470",
    "end": "577410"
  },
  {
    "text": "project and this is one of the first attempts to define a CR D for builds on",
    "start": "577410",
    "end": "584249"
  },
  {
    "text": "kubernetes so it attempts to actually abstract a few of the different build technologies it lets you define a build",
    "start": "584249",
    "end": "591540"
  },
  {
    "text": "configuration in a custom resource and provide wrappers and plugins so that you",
    "start": "591540",
    "end": "597540"
  },
  {
    "text": "can do a docker based build build get billed or Conoco I think those are the",
    "start": "597540",
    "end": "603420"
  },
  {
    "text": "four it covers today but it's intended to be a very pluggable system where if you have other ways to build images in",
    "start": "603420",
    "end": "608519"
  },
  {
    "text": "the future it would be able to wrap those as well again runs those on the",
    "start": "608519",
    "end": "613559"
  },
  {
    "text": "kubernetes cluster it's got all the same security problems as I mentioned at the beginning in the sense of needing access",
    "start": "613559",
    "end": "620250"
  },
  {
    "text": "to the docker socket and then as far as its inputs you can provide the context",
    "start": "620250",
    "end": "626850"
  },
  {
    "text": "for your docker build from either a git repo or a kubernetes config map",
    "start": "626850",
    "end": "633110"
  },
  {
    "start": "635000",
    "end": "711000"
  },
  {
    "text": "so another CRD worth calling out that I I know some projects are using for build",
    "start": "635779",
    "end": "643110"
  },
  {
    "text": "is the agro proj workflow CRD this",
    "start": "643110",
    "end": "648269"
  },
  {
    "text": "example is largely lifted from one of the sample amell's in their repo but you",
    "start": "648269",
    "end": "655980"
  },
  {
    "text": "can see that it's basically launching a darker and darker sidecar and there's a",
    "start": "655980",
    "end": "662160"
  },
  {
    "text": "little script in here that actually will run a docker file based build against it you know again this it's this is not",
    "start": "662160",
    "end": "669679"
  },
  {
    "text": "necessarily purpose-built for builds it I think it's intended to be sort of a broad workflow solution and build is you",
    "start": "669679",
    "end": "678769"
  },
  {
    "text": "know one one of the types of workloads people have used this for because you know it can do dockerfile builds on",
    "start": "678769",
    "end": "686629"
  },
  {
    "text": "cluster but it you know it certainly an",
    "start": "686629",
    "end": "694399"
  },
  {
    "text": "examples like this it's prone to some of the security problems that you know we've been talking about because you can",
    "start": "694399",
    "end": "699619"
  },
  {
    "text": "see it's running a privileged sidecar and interacting with that docker demon of basically directly through this",
    "start": "699619",
    "end": "706579"
  },
  {
    "text": "inline shell script here this is",
    "start": "706579",
    "end": "713359"
  },
  {
    "start": "711000",
    "end": "862000"
  },
  {
    "text": "actually not a kubernetes on Cluster build but what we've been using for",
    "start": "713359",
    "end": "720139"
  },
  {
    "text": "Google container builder if you squint and look at it there are a lot of parallels to it and today because of a",
    "start": "720139",
    "end": "726049"
  },
  {
    "text": "lot of the security complications with running on cluster builds we're actually using VM sandboxes to execute each",
    "start": "726049",
    "end": "733879"
  },
  {
    "text": "individual build part of the reason recently we've been releasing projects",
    "start": "733879",
    "end": "740209"
  },
  {
    "text": "like Conoco is to try and move in a direction where you know these individual steps which are actually",
    "start": "740209",
    "end": "745669"
  },
  {
    "text": "containers that run over some build context can be made more secure because",
    "start": "745669",
    "end": "751029"
  },
  {
    "text": "the API as it exists today is basically giving you the daemon socket from the",
    "start": "751029",
    "end": "757610"
  },
  {
    "text": "host and say go to town right do do your whatever you do normally docker billdocker push and whatnot because",
    "start": "757610",
    "end": "766069"
  },
  {
    "text": "we've sort of given given up and said okay well it the container boundaries",
    "start": "766069",
    "end": "773689"
  },
  {
    "text": "not just not secure if we need to hand out a docker daemon socket you know we",
    "start": "773689",
    "end": "779059"
  },
  {
    "text": "need to assume the user owns the host and I've played around with it and it's",
    "start": "779059",
    "end": "784100"
  },
  {
    "text": "actually really easy to do the kinds of things Liz does in her demo but what's",
    "start": "784100",
    "end": "790669"
  },
  {
    "text": "really nice about this model is you can you can plug virtually any builder you",
    "start": "790669",
    "end": "797389"
  },
  {
    "text": "want into it right you can you can build and publish it Kocher image either publicly or to GCR",
    "start": "797389",
    "end": "803180"
  },
  {
    "text": "and the VM is authenticated with your project that would host the image and so",
    "start": "803180",
    "end": "809780"
  },
  {
    "text": "you can pull down the Builder container and execute it in the build context to do nearly arbitrary things but we would",
    "start": "809780",
    "end": "817250"
  },
  {
    "text": "like to move towards a model where we model some of the privileged aspects like kubernetes does today and can block",
    "start": "817250",
    "end": "824960"
  },
  {
    "text": "some of the privileged access which really the one the one use case I can think of where we mainly use it today is",
    "start": "824960",
    "end": "831740"
  },
  {
    "text": "docker file builds that go through the docker daemon and so it seems silly to have this privileged exception for just",
    "start": "831740",
    "end": "839210"
  },
  {
    "text": "that one use case and so with things like you know Konica which we talked",
    "start": "839210",
    "end": "844580"
  },
  {
    "text": "about yesterday it would be great to try and replace that and move to a world",
    "start": "844580",
    "end": "849950"
  },
  {
    "text": "where we could run these in an unprivileged setting and it would be great if we could do that on cluster and",
    "start": "849950",
    "end": "856250"
  },
  {
    "text": "shed this vm overhead so you know we",
    "start": "856250",
    "end": "867050"
  },
  {
    "start": "862000",
    "end": "939000"
  },
  {
    "text": "talked about a bunch of methods i don't want to clean this as exhaustive but you",
    "start": "867050",
    "end": "872060"
  },
  {
    "text": "know one of the things sort of squinting and looking at this a lot of them feel",
    "start": "872060",
    "end": "877880"
  },
  {
    "text": "like they have common elements emerging right you know all of them had to find",
    "start": "877880",
    "end": "884690"
  },
  {
    "text": "some sort of source you know get seems to be pretty popular one or more steps",
    "start": "884690",
    "end": "891470"
  },
  {
    "text": "on sort of how to build that source context and I think a relatively common",
    "start": "891470",
    "end": "898880"
  },
  {
    "text": "pattern is expressing that how in terms of sort of a builder container abstraction and then oftentimes volumes",
    "start": "898880",
    "end": "909080"
  },
  {
    "text": "are useful I didn't show it on the container builder one it really don't",
    "start": "909080",
    "end": "914150"
  },
  {
    "text": "because it's not kubernetes you don't have all of those options so it gives you basically empty dirt but having",
    "start": "914150",
    "end": "920089"
  },
  {
    "text": "access to powerful volumes is actually really interesting and then you know",
    "start": "920089",
    "end": "926050"
  },
  {
    "text": "modeling outputs and authentication with resources that are you know like source",
    "start": "926050",
    "end": "931640"
  },
  {
    "text": "and whatnot are all sort of part of this right yeah so what we are",
    "start": "931640",
    "end": "943500"
  },
  {
    "start": "939000",
    "end": "1005000"
  },
  {
    "text": "hoping to have a discussion about here then is you know with what we've seen",
    "start": "943500",
    "end": "948959"
  },
  {
    "text": "the landscape come up with so far and we're starting to see more in the community around these tools what are",
    "start": "948959",
    "end": "956009"
  },
  {
    "text": "your experiences with what you're doing with builds what do you see in these API is that's good what do you see maybe",
    "start": "956009",
    "end": "962130"
  },
  {
    "text": "that's bad or missing you know we think as as mattre said you know input content",
    "start": "962130",
    "end": "968759"
  },
  {
    "text": "is certainly a key part of any API pushing the image seems like it's going to be a key part and the mechanism",
    "start": "968759",
    "end": "975899"
  },
  {
    "text": "itself between yesterday and today we've covered a lot of different techniques for building images both dockerfile based ones ones that don't aren't based",
    "start": "975899",
    "end": "982889"
  },
  {
    "text": "on docker file ones that are based on docker Damons ones that aren't based on docker Damon's seems likely that we're",
    "start": "982889",
    "end": "989970"
  },
  {
    "text": "not going to pick one of those so probably kind of like the direction the CVI interface is going in to some",
    "start": "989970",
    "end": "995699"
  },
  {
    "text": "extent the open shift API is probably needs to be a pluggable system as well is at least what what we are thinking so",
    "start": "995699",
    "end": "1007389"
  },
  {
    "start": "1005000",
    "end": "1027000"
  },
  {
    "text": "questions or experience that you'd like to share with what you've done building images either off cluster or on cluster",
    "start": "1007389",
    "end": "1014930"
  },
  {
    "text": "or directions you're thinking about going hi I'm Artie he rose to the author",
    "start": "1014930",
    "end": "1029600"
  },
  {
    "text": "of the CD I sent to her I work great and this is not question and just just",
    "start": "1029600",
    "end": "1036880"
  },
  {
    "text": "expresso and CBI currently only supports Turk of our best builders but I'm also",
    "start": "1036880",
    "end": "1044058"
  },
  {
    "text": "trying to implement other languages such as basil or associate image or Google's",
    "start": "1044059",
    "end": "1053090"
  },
  {
    "text": "kalbi dot yml or anything so maybe if we",
    "start": "1053090",
    "end": "1060200"
  },
  {
    "text": "can add many language C's to CBI interface maybe we can use CBI as",
    "start": "1060200",
    "end": "1066840"
  },
  {
    "text": "the point to hoser your proposal cool yeah I guess it'll all unfair but",
    "start": "1066840",
    "end": "1084360"
  },
  {
    "text": "because you won't have known this before you wrote the slides but do you think that the G Weiser stuff that was",
    "start": "1084360",
    "end": "1090179"
  },
  {
    "text": "released this week from Google around having sandbox kernels you know actually",
    "start": "1090179",
    "end": "1096090"
  },
  {
    "text": "restricting that what that docker Keeton kernel can actually do will actually go",
    "start": "1096090",
    "end": "1101279"
  },
  {
    "text": "some way towards solving those security issues that we've been talking about earlier so I'll give the short answer",
    "start": "1101279",
    "end": "1106409"
  },
  {
    "text": "and then I'll let Matt give the long answer so yeah I think it can I have only read through the blog post on it",
    "start": "1106409",
    "end": "1113100"
  },
  {
    "text": "but it definitely seems like an exciting technology that would make things like you know today there are build systems",
    "start": "1113100",
    "end": "1119460"
  },
  {
    "text": "that spin up a VM so that they can do builds on cluster or effectively on cluster in a in a safe way and of course",
    "start": "1119460",
    "end": "1126600"
  },
  {
    "text": "they lose the caching reuse but they get that security and the idea of a lightweight way to do that sounds",
    "start": "1126600",
    "end": "1133169"
  },
  {
    "text": "awesome and yeah so I think as we see how that project involves there's",
    "start": "1133169",
    "end": "1138210"
  },
  {
    "text": "definitely a place for it I knew about it yes we certainly thought about it you",
    "start": "1138210",
    "end": "1150299"
  },
  {
    "text": "know as I mentioned yesterday one of the I think really interesting things about",
    "start": "1150299",
    "end": "1156830"
  },
  {
    "text": "G Weiser and one of the considerations when we were thinking about Konica was running it in that context and so you",
    "start": "1157460",
    "end": "1167220"
  },
  {
    "text": "know if you wanted to so one of the interesting things from this morning and you know from some of the examples is a",
    "start": "1167220",
    "end": "1173760"
  },
  {
    "text": "typical way of getting access to the daemon socket is to use the host path to",
    "start": "1173760",
    "end": "1179580"
  },
  {
    "text": "access the host UNIX socket that you used to speak to the doc or demon as",
    "start": "1179580",
    "end": "1185190"
  },
  {
    "text": "been pointed out if you're using something like G visor to do isolation on your cluster that might not be there",
    "start": "1185190",
    "end": "1191250"
  },
  {
    "text": "cRIO is the same way right so having the",
    "start": "1191250",
    "end": "1196260"
  },
  {
    "text": "capacity to do these in a daemon 'less way with something like Conoco build IMG potentially are interesting I don't",
    "start": "1196260",
    "end": "1206289"
  },
  {
    "text": "know I don't know what the current",
    "start": "1206289",
    "end": "1214179"
  },
  {
    "text": "limits are on gee visor in terms of running that set of things under it is",
    "start": "1214179",
    "end": "1221080"
  },
  {
    "text": "but it's one of the reasons that you know we we pursued Conoco is to run it",
    "start": "1221080",
    "end": "1228940"
  },
  {
    "text": "in context like that to get dockerfile builds in context where there isn't a",
    "start": "1228940",
    "end": "1235119"
  },
  {
    "text": "demon so my question is you mentioned",
    "start": "1235119",
    "end": "1249519"
  },
  {
    "start": "1245000",
    "end": "1309000"
  },
  {
    "text": "that you would like to roll the VMS out exclude them from the picture because of",
    "start": "1249519",
    "end": "1255789"
  },
  {
    "text": "the overhead but maybe that's not what's always preferable in some cases the",
    "start": "1255789",
    "end": "1262600"
  },
  {
    "text": "users may want the reservation that the VMS provide and there are several",
    "start": "1262600",
    "end": "1268149"
  },
  {
    "text": "projects that support running VMs on kubernetes clusters including Red Hat",
    "start": "1268149",
    "end": "1273190"
  },
  {
    "text": "scoobert and got the containers and vert",
    "start": "1273190",
    "end": "1278470"
  },
  {
    "text": "led project that I am working on the",
    "start": "1278470",
    "end": "1283690"
  },
  {
    "text": "latter one just makes it possible to run usual VM images as their pods and maybe",
    "start": "1283690",
    "end": "1292379"
  },
  {
    "text": "will something be considered along the lines of using some of their projects to",
    "start": "1292379",
    "end": "1302159"
  },
  {
    "text": "provide desolation that may be needed by some users so I don't I don't know that",
    "start": "1302159",
    "end": "1311950"
  },
  {
    "start": "1309000",
    "end": "1364000"
  },
  {
    "text": "this sentiment was necessarily that using VMs as the isolation technology at",
    "start": "1311950",
    "end": "1317950"
  },
  {
    "text": "the the pod level was the problem I think the certain systems use sort of",
    "start": "1317950",
    "end": "1324490"
  },
  {
    "text": "single-use VMs to isolate the darker daemon that is or the container runtime",
    "start": "1324490",
    "end": "1330970"
  },
  {
    "text": "that's performing the build and I think some of the patterns we've seen are problematic even even in those",
    "start": "1330970",
    "end": "1338340"
  },
  {
    "text": "environments right because if you're using something like cata containers which runs a light weight VM to isolate",
    "start": "1338340",
    "end": "1343890"
  },
  {
    "text": "your pod your pod is reaching out to the host and interacting with a privileged process on the host you might might as",
    "start": "1343890",
    "end": "1351270"
  },
  {
    "text": "well not have put that pod in a cotta container to start right because you you",
    "start": "1351270",
    "end": "1357090"
  },
  {
    "text": "now own the host pretty much does that does that answer your question docker",
    "start": "1357090",
    "end": "1367800"
  },
  {
    "start": "1364000",
    "end": "1401000"
  },
  {
    "text": "diamond that their forms they built itself inside the VM that's yeah so",
    "start": "1367800",
    "end": "1375030"
  },
  {
    "text": "you're talking about like in the example where you launch something like a darker",
    "start": "1375030",
    "end": "1380460"
  },
  {
    "text": "and darker sidecar launch that in a cotta container",
    "start": "1380460",
    "end": "1385890"
  },
  {
    "text": "as a sidecar and do the build against that I think that's I don't know it's",
    "start": "1385890",
    "end": "1394200"
  },
  {
    "text": "certainly a possibility I don't know if who's tried it but I think it's it's a",
    "start": "1394200",
    "end": "1403170"
  },
  {
    "start": "1401000",
    "end": "1456000"
  },
  {
    "text": "possibility what I've seen so far from at least just watching the community there seems to be a lot more interest in",
    "start": "1403170",
    "end": "1409680"
  },
  {
    "text": "finding a way to do proved unprivileged docker builds through things like Conoco",
    "start": "1409680",
    "end": "1417320"
  },
  {
    "text": "so which is just gonna be lighter weight than having to spin up a vm each time so",
    "start": "1417320",
    "end": "1422880"
  },
  {
    "text": "is it a possibility it certainly it gives you great isolation and I think it's got a lot of benefits there but if",
    "start": "1422880",
    "end": "1429690"
  },
  {
    "text": "we can get to the point of actually being able to do unprivileged docker builds first I think that's preferable",
    "start": "1429690",
    "end": "1435240"
  },
  {
    "text": "from a lightweight efficiency perspective if you if you're looking",
    "start": "1435240",
    "end": "1441300"
  },
  {
    "text": "closely to and the example that's spun up the doctor and docker sidecar had like a little loop where it was waiting",
    "start": "1441300",
    "end": "1447540"
  },
  {
    "text": "for the doctor daemon to be ready to which I thought was sort of funny I think this man had a question",
    "start": "1447540",
    "end": "1455990"
  },
  {
    "start": "1456000",
    "end": "1548000"
  },
  {
    "text": "hi just a one small question about this source - I built does this open shift",
    "start": "1456400",
    "end": "1465169"
  },
  {
    "text": "internal registry required for this source - image builds sorry is the open",
    "start": "1465169",
    "end": "1471799"
  },
  {
    "text": "shipped internal registry which is complete it comes which comes with open",
    "start": "1471799",
    "end": "1477770"
  },
  {
    "text": "shift does it required the build source - image no source - image needs",
    "start": "1477770",
    "end": "1483429"
  },
  {
    "text": "basically I'll see if I go through there's four things he's a darker socket because it has to",
    "start": "1483429",
    "end": "1488990"
  },
  {
    "text": "be able to launch containers it needs the Builder image and it can pull that builder image from any registry it",
    "start": "1488990",
    "end": "1495260"
  },
  {
    "text": "doesn't have I mean if you're running on open shift it's probably coming from the internal registry but it doesn't have to and then it needs your source code from",
    "start": "1495260",
    "end": "1504140"
  },
  {
    "text": "somewhere and then it needs somewhere to push the resulting image which again on open shift will probably be your internal registry but it does not have",
    "start": "1504140",
    "end": "1510500"
  },
  {
    "text": "to be no yeah so and there is there is also a command line version of s2 I if",
    "start": "1510500",
    "end": "1516980"
  },
  {
    "text": "you just want to build on your machine where you don't even have open shift you just do as - I build tell us your source",
    "start": "1516980",
    "end": "1523610"
  },
  {
    "text": "repo your builder image and the output image it doesn't push it anywhere it just builds it locally and then you can",
    "start": "1523610",
    "end": "1528830"
  },
  {
    "text": "dock or push it yourself I in the spirit of composability I'm kind of surprised",
    "start": "1528830",
    "end": "1534919"
  },
  {
    "text": "here but this focus on source right there are lots of build pipelines that already take source and produce binaries",
    "start": "1534919",
    "end": "1541940"
  },
  {
    "text": "seems to be the reigning step to take the binaries and produce the image I",
    "start": "1541940",
    "end": "1548440"
  },
  {
    "start": "1548000",
    "end": "1616000"
  },
  {
    "text": "think there's a I think in that case I",
    "start": "1548590",
    "end": "1554210"
  },
  {
    "text": "think the what a lot of these models do is they have a source that is a binary",
    "start": "1554210",
    "end": "1559309"
  },
  {
    "text": "input I mean one one of the options that for instance container builder supports",
    "start": "1559309",
    "end": "1566450"
  },
  {
    "text": "is getting the source context from Google Cloud storage and versus a git",
    "start": "1566450",
    "end": "1573140"
  },
  {
    "text": "repo I know that openshift supports a lot yeah I think that's a great point",
    "start": "1573140",
    "end": "1578299"
  },
  {
    "text": "I'm the image inputs that I referred to earlier in the build API that's sort of that concept with the idea of maybe you",
    "start": "1578299",
    "end": "1585530"
  },
  {
    "text": "earlier built some source into a set of jars that you baked into an image and now you're doing",
    "start": "1585530",
    "end": "1590960"
  },
  {
    "text": "another build where you're gonna just take those jars out and put them into a runtime image that's lightweight so",
    "start": "1590960",
    "end": "1597379"
  },
  {
    "text": "that's certainly one way and source also probably just an overused term it it really is build inputs frequently get",
    "start": "1597379",
    "end": "1605480"
  },
  {
    "text": "source not necessarily yeah could you",
    "start": "1605480",
    "end": "1617499"
  },
  {
    "start": "1616000",
    "end": "1645000"
  },
  {
    "text": "quickly summarize the reasons why we won't do need the talker daemon",
    "start": "1617499",
    "end": "1625039"
  },
  {
    "text": "besides the run statement or if you want to do something like that you don't you",
    "start": "1625039",
    "end": "1640070"
  },
  {
    "text": "said quickly so if I don't have run",
    "start": "1640070",
    "end": "1647989"
  },
  {
    "start": "1645000",
    "end": "1753000"
  },
  {
    "text": "statements and I just want to copy my go binary into the into the image I'm good",
    "start": "1647989",
    "end": "1656888"
  },
  {
    "text": "all you met yeah yeah I mean if you don't have run statement in your docker file they started growing the docker",
    "start": "1657369",
    "end": "1666590"
  },
  {
    "text": "file syntax again so this may be dated but basically every every directive in",
    "start": "1666590",
    "end": "1671989"
  },
  {
    "text": "it amounts to things like add and copy which will modify the file system and pretty much everything else is some sort",
    "start": "1671989",
    "end": "1679940"
  },
  {
    "text": "of metadata change exposing ports declaring volumes the user etc so if you",
    "start": "1679940",
    "end": "1688279"
  },
  {
    "text": "you know know how to use tar you can construct the file system elements and",
    "start": "1688279",
    "end": "1694730"
  },
  {
    "text": "then the rest is a little bit of JSON manipulation there's a variety of libraries that can do this and so run",
    "start": "1694730",
    "end": "1701539"
  },
  {
    "text": "run makes everything trickier because",
    "start": "1701539",
    "end": "1706759"
  },
  {
    "text": "run is executed by sorry there's a weird echo over there run is executed by",
    "start": "1706759",
    "end": "1714879"
  },
  {
    "text": "activating the container up to that point entering it executing that command",
    "start": "1714879",
    "end": "1720740"
  },
  {
    "text": "and then snapshotting it right so if you don't have run you don't need to launch and snapshot containers and so you can do it",
    "start": "1720740",
    "end": "1727960"
  },
  {
    "text": "without a docker daemon but isn't don't",
    "start": "1727960",
    "end": "1739190"
  },
  {
    "text": "we have the ability with whatever container runtime we're using to launch the container X Q step and then snapshot",
    "start": "1739190",
    "end": "1745790"
  },
  {
    "text": "it without docker doing it for us who says we have a container runtime so it",
    "start": "1745790",
    "end": "1754760"
  },
  {
    "start": "1753000",
    "end": "1873000"
  },
  {
    "text": "one at one of the things you can do if you construct things this way is effectively from a Chromebook or OS X",
    "start": "1754760",
    "end": "1761900"
  },
  {
    "text": "not running a VM in order to run a docker daemon is effectively",
    "start": "1761900",
    "end": "1768920"
  },
  {
    "text": "cross-compile your go binary and slap it on the image right you because you're",
    "start": "1768920",
    "end": "1774350"
  },
  {
    "text": "not activating the container you don't need to do that it actually makes",
    "start": "1774350",
    "end": "1779960"
  },
  {
    "text": "situations like producing fat images in from a single environment with a single",
    "start": "1779960",
    "end": "1785480"
  },
  {
    "text": "tool tractable because a container an",
    "start": "1785480",
    "end": "1798560"
  },
  {
    "text": "isolated container - we're in the business of running containers",
    "start": "1798560",
    "end": "1804530"
  },
  {
    "text": "typically on orchestrators right I think three of the things we talked about",
    "start": "1804530",
    "end": "1810380"
  },
  {
    "text": "yesterday were build a IMG and Conoco none of that none of those use a daemon",
    "start": "1810380",
    "end": "1816550"
  },
  {
    "text": "bilder and IMG are effectively activating containers I think more or",
    "start": "1816550",
    "end": "1821750"
  },
  {
    "text": "less directly the run C please correct me and Conoco expects some sort of",
    "start": "1821750",
    "end": "1829460"
  },
  {
    "text": "Orchestrator to put it in an empty container and then it basically emulates the docker file evaluation from by",
    "start": "1829460",
    "end": "1835850"
  },
  {
    "text": "downloading the file system contents run by executing the command in that context",
    "start": "1835850",
    "end": "1842080"
  },
  {
    "text": "and then manually snapshotting it itself",
    "start": "1842080",
    "end": "1847780"
  },
  {
    "text": "so yes I think to execute run write like",
    "start": "1847780",
    "end": "1853220"
  },
  {
    "text": "you more or less me some way of running the container because of how it is imperative Lee",
    "start": "1853220",
    "end": "1860629"
  },
  {
    "text": "built but doing that through the darker",
    "start": "1860629",
    "end": "1866029"
  },
  {
    "text": "demon traditionally means over exposing yourself to get at that sort of limited",
    "start": "1866029",
    "end": "1871820"
  },
  {
    "text": "functionality I think there's another yeah so there's another aspect of us",
    "start": "1871820",
    "end": "1878029"
  },
  {
    "start": "1873000",
    "end": "1946000"
  },
  {
    "text": "which is in an ideal world you know kubernetes already perfectly capable of",
    "start": "1878029",
    "end": "1883909"
  },
  {
    "text": "running containers for you right why are we jumping through all these hoops to run a container in a safe way when in",
    "start": "1883909",
    "end": "1889820"
  },
  {
    "text": "theory kubernetes is already running container safely right the technical obstacle to that today is yes I could",
    "start": "1889820",
    "end": "1897470"
  },
  {
    "text": "start up a kubernetes container from my base image and I could exact in and run all my docker file commands there's no",
    "start": "1897470",
    "end": "1904789"
  },
  {
    "text": "way to commit that container or push it sure so that's kind of the blocker to a",
    "start": "1904789",
    "end": "1913100"
  },
  {
    "text": "build system based on that if there were an API that allowed you to commit a run",
    "start": "1913100",
    "end": "1918440"
  },
  {
    "text": "in kubernetes pod and get that image ID and push that image then that would be",
    "start": "1918440",
    "end": "1924590"
  },
  {
    "text": "another approach to this but that's not a possibility today and you couldn't tweak the metadata right kubernetes will",
    "start": "1924590",
    "end": "1932419"
  },
  {
    "text": "start it it may start it with some metadata but that I don't think would be committed to the final image",
    "start": "1932419",
    "end": "1937580"
  },
  {
    "text": "yeah you would you would actually need a community API that says commit this pod and by the way also tweak all this metadata about it",
    "start": "1937580",
    "end": "1945398"
  },
  {
    "text": "so my question is more for the audience so I'm I'm curious how many people think docker file base builds is important for",
    "start": "1947389",
    "end": "1954110"
  },
  {
    "text": "their future usage like is it a part of the experience what they already have in tech debt as a critical or meaning if",
    "start": "1954110",
    "end": "1964309"
  },
  {
    "text": "you didn't have docker files in your life",
    "start": "1964309",
    "end": "1967960"
  },
  {
    "text": "sample size of one hey I'd argue run I'd",
    "start": "1975650",
    "end": "1994230"
  },
  {
    "text": "argue runs not declared but so I'm from a service provider so I've got customers",
    "start": "1994230",
    "end": "2001310"
  },
  {
    "start": "1998000",
    "end": "2088000"
  },
  {
    "text": "are gonna want docker files as long as there are people that want docker files me to you that's and and that's part of",
    "start": "2001310",
    "end": "2009620"
  },
  {
    "text": "the reason for projects like build a Conoco right like we recognize I the",
    "start": "2009620",
    "end": "2014960"
  },
  {
    "text": "custom I don't want to speak for you guys but we recognized the customer need and you know this this also goes to why",
    "start": "2014960",
    "end": "2021320"
  },
  {
    "text": "GCB the container builder was basically like well we got a support docker files",
    "start": "2021320",
    "end": "2027020"
  },
  {
    "text": "and if we've got to support talker files until something better comes along we have to do things a certain way and now",
    "start": "2027020",
    "end": "2034910"
  },
  {
    "text": "that some of those better things are coming along we want to consider ways of reevaluating that and so I recognize the",
    "start": "2034910",
    "end": "2044870"
  },
  {
    "text": "need for it but you know I'm I'm",
    "start": "2044870",
    "end": "2051250"
  },
  {
    "text": "personally very interested in pursuing better ways of building images that you",
    "start": "2051250",
    "end": "2056960"
  },
  {
    "text": "know don't need that and advocating for",
    "start": "2056960",
    "end": "2062810"
  },
  {
    "text": "better ways that you know don't need that and I'm really happy that",
    "start": "2062810",
    "end": "2068408"
  },
  {
    "text": "approaches have emerged that make docker file based builds better but I also you",
    "start": "2068409",
    "end": "2075980"
  },
  {
    "text": "know I have a higher bar than that I think we're actually out of time um we",
    "start": "2075980",
    "end": "2081830"
  },
  {
    "text": "were encouraged to one more minute are you guys to jump us in the hall if we run out of time yeah I would just say",
    "start": "2081830",
    "end": "2089450"
  },
  {
    "text": "that I think that when it comes to large platforms where you're running",
    "start": "2089450",
    "end": "2095000"
  },
  {
    "text": "kubernetes or openshift really at that end you don't care what spelling it right as long as it's compliant and it",
    "start": "2095000",
    "end": "2102560"
  },
  {
    "text": "works and everything's great so the best and most efficient way whether that's darker today are some other technology",
    "start": "2102560",
    "end": "2109080"
  },
  {
    "text": "like builder tomorrow's one thing it's really only becomes a doctor fight only becomes something that might be",
    "start": "2109080",
    "end": "2115170"
  },
  {
    "text": "important to developers on laptops who are learning about this technology and",
    "start": "2115170",
    "end": "2120270"
  },
  {
    "text": "stuff like that but but once you get into a scalable environment it really",
    "start": "2120270",
    "end": "2125430"
  },
  {
    "text": "doesn't matter as long as the containers are compliant and run in an efficient",
    "start": "2125430",
    "end": "2131220"
  },
  {
    "text": "way and are built in an efficient way I think we're at a time yeah he's gonna",
    "start": "2131220",
    "end": "2138090"
  },
  {
    "text": "ultimately be around and I feel thank you thank you everyone [Applause]",
    "start": "2138090",
    "end": "2145280"
  }
]