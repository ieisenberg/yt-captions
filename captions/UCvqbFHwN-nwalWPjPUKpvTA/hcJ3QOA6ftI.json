[
  {
    "text": "hey good morning good afternoon good",
    "start": "240",
    "end": "2280"
  },
  {
    "text": "evening wherever you're joining us from",
    "start": "2280",
    "end": "4319"
  },
  {
    "text": "welcome to kubecon 2022",
    "start": "4319",
    "end": "8639"
  },
  {
    "text": "my name is Raj Vada Raju Enterprise",
    "start": "8639",
    "end": "11040"
  },
  {
    "text": "architect with FIS and here with me",
    "start": "11040",
    "end": "13380"
  },
  {
    "text": "nilanjan Mana",
    "start": "13380",
    "end": "15120"
  },
  {
    "text": "I'll let you introduce yourself",
    "start": "15120",
    "end": "17820"
  },
  {
    "text": "hey everyone Thanks for attending this",
    "start": "17820",
    "end": "20100"
  },
  {
    "text": "session",
    "start": "20100",
    "end": "21140"
  },
  {
    "text": "a software engineer at hardness and a",
    "start": "21140",
    "end": "23880"
  },
  {
    "text": "core contributor to the cncf litmus",
    "start": "23880",
    "end": "25980"
  },
  {
    "text": "chaos project where I'm responsible for",
    "start": "25980",
    "end": "28260"
  },
  {
    "text": "developing chaos experiments for various",
    "start": "28260",
    "end": "30180"
  },
  {
    "text": "types of failure scenarios and the",
    "start": "30180",
    "end": "32220"
  },
  {
    "text": "requisite tools required for injecting",
    "start": "32220",
    "end": "34680"
  },
  {
    "text": "chaos into various environments I'm",
    "start": "34680",
    "end": "37079"
  },
  {
    "text": "really excited to be here with all of",
    "start": "37079",
    "end": "39059"
  },
  {
    "text": "you over to you Raj",
    "start": "39059",
    "end": "41160"
  },
  {
    "text": "all right so today we are going to talk",
    "start": "41160",
    "end": "43620"
  },
  {
    "text": "about chaos engineering applied to the",
    "start": "43620",
    "end": "45480"
  },
  {
    "text": "fintech domain before we jumping into",
    "start": "45480",
    "end": "48420"
  },
  {
    "text": "cassinating let's spend some time on",
    "start": "48420",
    "end": "50340"
  },
  {
    "text": "fintech domain what it is",
    "start": "50340",
    "end": "52680"
  },
  {
    "text": "here goes a problem statement",
    "start": "52680",
    "end": "54739"
  },
  {
    "text": "non-banking services companies would",
    "start": "54739",
    "end": "56879"
  },
  {
    "text": "like to offer banking services and",
    "start": "56879",
    "end": "59879"
  },
  {
    "text": "products",
    "start": "59879",
    "end": "61199"
  },
  {
    "text": "example could be a cab company such as",
    "start": "61199",
    "end": "63780"
  },
  {
    "text": "Uber which provides digital platform",
    "start": "63780",
    "end": "66720"
  },
  {
    "text": "tools drivers and passengers would like",
    "start": "66720",
    "end": "69659"
  },
  {
    "text": "to offer auto loan",
    "start": "69659",
    "end": "71640"
  },
  {
    "text": "why would they do that and for obvious",
    "start": "71640",
    "end": "74100"
  },
  {
    "text": "reasons they want to increase their",
    "start": "74100",
    "end": "76439"
  },
  {
    "text": "revenue streams and also they want to",
    "start": "76439",
    "end": "78900"
  },
  {
    "text": "serve their loyal customers make them",
    "start": "78900",
    "end": "81299"
  },
  {
    "text": "happy by providing some competitive you",
    "start": "81299",
    "end": "84659"
  },
  {
    "text": "know interest rates",
    "start": "84659",
    "end": "86880"
  },
  {
    "text": "so",
    "start": "86880",
    "end": "88740"
  },
  {
    "text": "if so why they have to look at some",
    "start": "88740",
    "end": "91080"
  },
  {
    "text": "fintech providers why can't they do",
    "start": "91080",
    "end": "93000"
  },
  {
    "text": "themselves again for some obviously just",
    "start": "93000",
    "end": "95700"
  },
  {
    "text": "you know",
    "start": "95700",
    "end": "97020"
  },
  {
    "text": "Ubers primary business is not banking a",
    "start": "97020",
    "end": "100979"
  },
  {
    "text": "b",
    "start": "100979",
    "end": "102659"
  },
  {
    "text": "they don't have banking because of that",
    "start": "102659",
    "end": "104759"
  },
  {
    "text": "they don't have banking ecosystem and uh",
    "start": "104759",
    "end": "108360"
  },
  {
    "text": "they don't have banking license",
    "start": "108360",
    "end": "111479"
  },
  {
    "text": "and they had to go through even they do",
    "start": "111479",
    "end": "113460"
  },
  {
    "text": "they would go through a lot of",
    "start": "113460",
    "end": "114979"
  },
  {
    "text": "complaints and regulations of banking",
    "start": "114979",
    "end": "118200"
  },
  {
    "text": "sector which is too much for them this",
    "start": "118200",
    "end": "120780"
  },
  {
    "text": "is where FIS would help",
    "start": "120780",
    "end": "124740"
  },
  {
    "text": "the fintech companies are pretty",
    "start": "124740",
    "end": "126840"
  },
  {
    "text": "consumers where it exposes banking",
    "start": "126840",
    "end": "129599"
  },
  {
    "text": "services in the form of apis and these",
    "start": "129599",
    "end": "132360"
  },
  {
    "text": "fintech consumers consume those apis and",
    "start": "132360",
    "end": "135540"
  },
  {
    "text": "build some Innovative products provide",
    "start": "135540",
    "end": "138720"
  },
  {
    "text": "great customer experience to their end",
    "start": "138720",
    "end": "140760"
  },
  {
    "text": "users is a win-win for everyone",
    "start": "140760",
    "end": "144860"
  },
  {
    "text": "so how does a typical fintech technical",
    "start": "145860",
    "end": "149220"
  },
  {
    "text": "architecture look like it it would be",
    "start": "149220",
    "end": "151800"
  },
  {
    "text": "something on these lines",
    "start": "151800",
    "end": "154739"
  },
  {
    "text": "here I want to kind of convey a couple",
    "start": "154739",
    "end": "157140"
  },
  {
    "text": "of things one the complexity of the",
    "start": "157140",
    "end": "159420"
  },
  {
    "text": "architecture and introduce chaos",
    "start": "159420",
    "end": "161340"
  },
  {
    "text": "engineering",
    "start": "161340",
    "end": "163560"
  },
  {
    "text": "so the complexity of this architecture",
    "start": "163560",
    "end": "165420"
  },
  {
    "text": "is not intentional",
    "start": "165420",
    "end": "167099"
  },
  {
    "text": "it is evolved over the period of time",
    "start": "167099",
    "end": "169019"
  },
  {
    "text": "just like any other organization",
    "start": "169019",
    "end": "171780"
  },
  {
    "text": "FIS architecture is also evolved",
    "start": "171780",
    "end": "176160"
  },
  {
    "text": "for the last three decades or so if I",
    "start": "176160",
    "end": "179519"
  },
  {
    "text": "see Building Products in the financial",
    "start": "179519",
    "end": "180959"
  },
  {
    "text": "services it build uh it's its products",
    "start": "180959",
    "end": "185700"
  },
  {
    "text": "on all sorts of Technologies like",
    "start": "185700",
    "end": "188519"
  },
  {
    "text": "Mainframe Windows based web applications",
    "start": "188519",
    "end": "192239"
  },
  {
    "text": "it evolved right now we are in the",
    "start": "192239",
    "end": "195900"
  },
  {
    "text": "Cloud native Computing era the",
    "start": "195900",
    "end": "199080"
  },
  {
    "text": "architectures built on",
    "start": "199080",
    "end": "200420"
  },
  {
    "text": "microservices-based architecture and API",
    "start": "200420",
    "end": "203700"
  },
  {
    "text": "gateways Kafka",
    "start": "203700",
    "end": "205800"
  },
  {
    "text": "and everything in in between",
    "start": "205800",
    "end": "208980"
  },
  {
    "text": "but this modern architecture need to",
    "start": "208980",
    "end": "211680"
  },
  {
    "text": "integrate with Legacy architecture",
    "start": "211680",
    "end": "213420"
  },
  {
    "text": "because you still have certain",
    "start": "213420",
    "end": "215459"
  },
  {
    "text": "capabilities provided by Legacy",
    "start": "215459",
    "end": "218220"
  },
  {
    "text": "architecture",
    "start": "218220",
    "end": "219599"
  },
  {
    "text": "while uh FIS is going through its",
    "start": "219599",
    "end": "223440"
  },
  {
    "text": "digital transformation phase",
    "start": "223440",
    "end": "226620"
  },
  {
    "text": "so",
    "start": "226620",
    "end": "228420"
  },
  {
    "text": "in this context",
    "start": "228420",
    "end": "231000"
  },
  {
    "text": "you have to understand or this is a",
    "start": "231000",
    "end": "234659"
  },
  {
    "text": "classic distributed systems architecture",
    "start": "234659",
    "end": "237180"
  },
  {
    "text": "uh",
    "start": "237180",
    "end": "239640"
  },
  {
    "text": "out there and distributed systems are a",
    "start": "239640",
    "end": "242459"
  },
  {
    "text": "picture",
    "start": "242459",
    "end": "243659"
  },
  {
    "text": "brings its own challenges the challenges",
    "start": "243659",
    "end": "247140"
  },
  {
    "text": "around resiliency",
    "start": "247140",
    "end": "249420"
  },
  {
    "text": "where things could go wrong in anywhere",
    "start": "249420",
    "end": "253439"
  },
  {
    "text": "in the system what do I mean by things",
    "start": "253439",
    "end": "255720"
  },
  {
    "text": "could go wrong like you know there could",
    "start": "255720",
    "end": "258120"
  },
  {
    "text": "be a network partition that could happen",
    "start": "258120",
    "end": "260040"
  },
  {
    "text": "between the systems there could be a",
    "start": "260040",
    "end": "262320"
  },
  {
    "text": "service disruption there could be a",
    "start": "262320",
    "end": "265380"
  },
  {
    "text": "fault that could be happening",
    "start": "265380",
    "end": "268320"
  },
  {
    "text": "this is where chaos engineering",
    "start": "268320",
    "end": "270360"
  },
  {
    "text": "discipline could help identify those",
    "start": "270360",
    "end": "273780"
  },
  {
    "text": "issues and",
    "start": "273780",
    "end": "276440"
  },
  {
    "text": "resolve them thus providing Superior",
    "start": "276440",
    "end": "280259"
  },
  {
    "text": "customer experience",
    "start": "280259",
    "end": "281699"
  },
  {
    "text": "so what is chaos engineering I mean it's",
    "start": "281699",
    "end": "283800"
  },
  {
    "text": "a disciplinary practice experimenting on",
    "start": "283800",
    "end": "286320"
  },
  {
    "text": "a system in order to find how resilient",
    "start": "286320",
    "end": "288840"
  },
  {
    "text": "it is meaning whether the application",
    "start": "288840",
    "end": "292320"
  },
  {
    "text": "can withstand with the turbulent",
    "start": "292320",
    "end": "294720"
  },
  {
    "text": "or faulty conditions",
    "start": "294720",
    "end": "297240"
  },
  {
    "text": "you know what time what what do I mean",
    "start": "297240",
    "end": "299820"
  },
  {
    "text": "by that let's work with an example the",
    "start": "299820",
    "end": "303000"
  },
  {
    "text": "example could be",
    "start": "303000",
    "end": "305180"
  },
  {
    "text": "uh there could be a network latency",
    "start": "305180",
    "end": "308639"
  },
  {
    "text": "are are generally latency between two",
    "start": "308639",
    "end": "311639"
  },
  {
    "text": "microservices in your in your stack",
    "start": "311639",
    "end": "316820"
  },
  {
    "text": "and what if if the if the if there's a",
    "start": "317220",
    "end": "320820"
  },
  {
    "text": "latency on the downstream system how the",
    "start": "320820",
    "end": "323039"
  },
  {
    "text": "Upstream system is impacted right",
    "start": "323039",
    "end": "326520"
  },
  {
    "text": "you don't understand how resilient your",
    "start": "326520",
    "end": "328199"
  },
  {
    "text": "application is and overall stack is",
    "start": "328199",
    "end": "332220"
  },
  {
    "text": "just like any other engineering practice",
    "start": "332220",
    "end": "335180"
  },
  {
    "text": "chaos engineering practice as you know",
    "start": "335180",
    "end": "338160"
  },
  {
    "text": "three pillars depicted here you have",
    "start": "338160",
    "end": "340919"
  },
  {
    "text": "people you have process and you have",
    "start": "340919",
    "end": "342720"
  },
  {
    "text": "ecosystem",
    "start": "342720",
    "end": "343800"
  },
  {
    "text": "so next few minutes I'm gonna double",
    "start": "343800",
    "end": "345780"
  },
  {
    "text": "click on ecosystem and a little bit of",
    "start": "345780",
    "end": "347880"
  },
  {
    "text": "one process",
    "start": "347880",
    "end": "348900"
  },
  {
    "text": "and explain to you what the journey that",
    "start": "348900",
    "end": "352259"
  },
  {
    "text": "FIS went through and the third process",
    "start": "352259",
    "end": "354840"
  },
  {
    "text": "that we went through and how we put",
    "start": "354840",
    "end": "356580"
  },
  {
    "text": "together this uh ecosystem because it's",
    "start": "356580",
    "end": "360240"
  },
  {
    "text": "not just a chaos tool that's good enough",
    "start": "360240",
    "end": "362520"
  },
  {
    "text": "to implement chaos engineering practice",
    "start": "362520",
    "end": "364380"
  },
  {
    "text": "but you need to Envision and think about",
    "start": "364380",
    "end": "367620"
  },
  {
    "text": "um",
    "start": "367620",
    "end": "368960"
  },
  {
    "text": "uh ecosystem",
    "start": "368960",
    "end": "371699"
  },
  {
    "text": "so here is the the ecosystem that we",
    "start": "371699",
    "end": "374520"
  },
  {
    "text": "have put together",
    "start": "374520",
    "end": "377400"
  },
  {
    "text": "why we have done this",
    "start": "377400",
    "end": "381199"
  },
  {
    "text": "one we want to",
    "start": "381800",
    "end": "385879"
  },
  {
    "text": "find the toil",
    "start": "386759",
    "end": "389639"
  },
  {
    "text": "within the within the chaos engineering",
    "start": "389639",
    "end": "392639"
  },
  {
    "text": "practice",
    "start": "392639",
    "end": "393900"
  },
  {
    "text": "and automate it and make it reputable",
    "start": "393900",
    "end": "396900"
  },
  {
    "text": "process",
    "start": "396900",
    "end": "398460"
  },
  {
    "text": "and second we need to scale it",
    "start": "398460",
    "end": "402419"
  },
  {
    "text": "so why we need to scale it we need to",
    "start": "402419",
    "end": "405240"
  },
  {
    "text": "scale it because",
    "start": "405240",
    "end": "407340"
  },
  {
    "text": "organizations like FIS has",
    "start": "407340",
    "end": "410520"
  },
  {
    "text": "multiple hundred products and we need to",
    "start": "410520",
    "end": "413699"
  },
  {
    "text": "find build an ecosystem and tools and",
    "start": "413699",
    "end": "417960"
  },
  {
    "text": "the processes",
    "start": "417960",
    "end": "419639"
  },
  {
    "text": "so that we and we build this",
    "start": "419639",
    "end": "422160"
  },
  {
    "text": "consistently",
    "start": "422160",
    "end": "424199"
  },
  {
    "text": "and in a reputable way so that",
    "start": "424199",
    "end": "428280"
  },
  {
    "text": "we can apply this across multiple uh",
    "start": "428280",
    "end": "432660"
  },
  {
    "text": "multiple products that's how we scale it",
    "start": "432660",
    "end": "435539"
  },
  {
    "text": "and second we want to uh automate it so",
    "start": "435539",
    "end": "439860"
  },
  {
    "text": "that we can Implement chaos engineering",
    "start": "439860",
    "end": "442940"
  },
  {
    "text": "for every release that's going into",
    "start": "442940",
    "end": "445560"
  },
  {
    "text": "production uh because chaos itself",
    "start": "445560",
    "end": "448800"
  },
  {
    "text": "brings in some additional work so we",
    "start": "448800",
    "end": "451620"
  },
  {
    "text": "want to identify the toil around that",
    "start": "451620",
    "end": "453479"
  },
  {
    "text": "automated so that it is easy consistent",
    "start": "453479",
    "end": "457380"
  },
  {
    "text": "and repeatable process uh for for the",
    "start": "457380",
    "end": "460319"
  },
  {
    "text": "application or application teams so as",
    "start": "460319",
    "end": "462960"
  },
  {
    "text": "you can see there are four or five",
    "start": "462960",
    "end": "465060"
  },
  {
    "text": "pieces in this ecosystem one on the top",
    "start": "465060",
    "end": "467520"
  },
  {
    "text": "you see a CD pipeline you have",
    "start": "467520",
    "end": "469319"
  },
  {
    "text": "application",
    "start": "469319",
    "end": "470479"
  },
  {
    "text": "uh under test here you have a load",
    "start": "470479",
    "end": "473759"
  },
  {
    "text": "generators you have a APM tools and uh",
    "start": "473759",
    "end": "479520"
  },
  {
    "text": "you have Castle itself plus the captain",
    "start": "479520",
    "end": "482400"
  },
  {
    "text": "so I'm going to talk about this each one",
    "start": "482400",
    "end": "485220"
  },
  {
    "text": "of them",
    "start": "485220",
    "end": "486180"
  },
  {
    "text": "um here",
    "start": "486180",
    "end": "488759"
  },
  {
    "text": "so when you're executing a uh",
    "start": "488759",
    "end": "493440"
  },
  {
    "text": "precursor to the chaos test is a",
    "start": "493639",
    "end": "497819"
  },
  {
    "text": "generating load",
    "start": "497819",
    "end": "500099"
  },
  {
    "text": "on an application under test and put it",
    "start": "500099",
    "end": "503280"
  },
  {
    "text": "through some load why we want to do that",
    "start": "503280",
    "end": "506520"
  },
  {
    "text": "because most of the issues that happen",
    "start": "506520",
    "end": "509460"
  },
  {
    "text": "in production",
    "start": "509460",
    "end": "511440"
  },
  {
    "text": "happen under load that's why we want to",
    "start": "511440",
    "end": "514979"
  },
  {
    "text": "generate some load and the application",
    "start": "514979",
    "end": "517080"
  },
  {
    "text": "that we are injecting chaos into that's",
    "start": "517080",
    "end": "520680"
  },
  {
    "text": "where the load generators would help",
    "start": "520680",
    "end": "523020"
  },
  {
    "text": "okay that's great you have the load",
    "start": "523020",
    "end": "525540"
  },
  {
    "text": "generator generating the load on the",
    "start": "525540",
    "end": "527459"
  },
  {
    "text": "application and you have chaos tool",
    "start": "527459",
    "end": "530100"
  },
  {
    "text": "injecting chaos through its agent into",
    "start": "530100",
    "end": "532680"
  },
  {
    "text": "the application but we want to monitor",
    "start": "532680",
    "end": "536339"
  },
  {
    "text": "the health of the application when we",
    "start": "536339",
    "end": "538260"
  },
  {
    "text": "are injecting the the chaos what do we",
    "start": "538260",
    "end": "540779"
  },
  {
    "text": "want to monitor you have several metrics",
    "start": "540779",
    "end": "544380"
  },
  {
    "text": "up and down the stack right you have a",
    "start": "544380",
    "end": "547200"
  },
  {
    "text": "matrix at the application Level your",
    "start": "547200",
    "end": "548700"
  },
  {
    "text": "Matrix at the process level and your",
    "start": "548700",
    "end": "551279"
  },
  {
    "text": "Matrix are the host level such as you",
    "start": "551279",
    "end": "554100"
  },
  {
    "text": "know response time throughput error rate",
    "start": "554100",
    "end": "557519"
  },
  {
    "text": "at the application Level your process",
    "start": "557519",
    "end": "559800"
  },
  {
    "text": "CPU process memory utilization if it's a",
    "start": "559800",
    "end": "563580"
  },
  {
    "text": "Java jvm based application or JBoss you",
    "start": "563580",
    "end": "566700"
  },
  {
    "text": "have thread pool connection pools you",
    "start": "566700",
    "end": "568740"
  },
  {
    "text": "have jvm level metrics such as garbage",
    "start": "568740",
    "end": "570600"
  },
  {
    "text": "collection and all and your host level",
    "start": "570600",
    "end": "572760"
  },
  {
    "text": "host CPU memory and network i o and disk",
    "start": "572760",
    "end": "576600"
  },
  {
    "text": "IO type of metrics that we want to",
    "start": "576600",
    "end": "579180"
  },
  {
    "text": "monitor right",
    "start": "579180",
    "end": "582320"
  },
  {
    "text": "in order to monitor those metrics you",
    "start": "582660",
    "end": "584940"
  },
  {
    "text": "need tools like",
    "start": "584940",
    "end": "586459"
  },
  {
    "text": "dynatrase Splunk and Prometheus so that",
    "start": "586459",
    "end": "589860"
  },
  {
    "text": "that's why they are critical part of",
    "start": "589860",
    "end": "591600"
  },
  {
    "text": "this ecosystem",
    "start": "591600",
    "end": "593399"
  },
  {
    "text": "now",
    "start": "593399",
    "end": "594600"
  },
  {
    "text": "these tools are out there they are",
    "start": "594600",
    "end": "597300"
  },
  {
    "text": "collecting the metrics",
    "start": "597300",
    "end": "600480"
  },
  {
    "text": "and you are executing a chaos",
    "start": "600480",
    "end": "602959"
  },
  {
    "text": "experiment and you want to measure the",
    "start": "602959",
    "end": "605279"
  },
  {
    "text": "chaos experiment right",
    "start": "605279",
    "end": "607800"
  },
  {
    "text": "meaning when you introduce certain",
    "start": "607800",
    "end": "609360"
  },
  {
    "text": "Network latency you expect say two",
    "start": "609360",
    "end": "612360"
  },
  {
    "text": "percent errors but you are seeing a 10",
    "start": "612360",
    "end": "615480"
  },
  {
    "text": "percent errors today you do that",
    "start": "615480",
    "end": "617940"
  },
  {
    "text": "evaluation manually without any",
    "start": "617940",
    "end": "620820"
  },
  {
    "text": "automation right but with the with the",
    "start": "620820",
    "end": "623640"
  },
  {
    "text": "tools such as Captain",
    "start": "623640",
    "end": "626519"
  },
  {
    "text": "which helps with automating these",
    "start": "626519",
    "end": "629279"
  },
  {
    "text": "evaluations where you define your slis",
    "start": "629279",
    "end": "633360"
  },
  {
    "text": "in this case an example that I just",
    "start": "633360",
    "end": "635880"
  },
  {
    "text": "mentioned error rate",
    "start": "635880",
    "end": "637800"
  },
  {
    "text": "and SLO which is not more than like you",
    "start": "637800",
    "end": "641820"
  },
  {
    "text": "know 10 percent right you define that",
    "start": "641820",
    "end": "645300"
  },
  {
    "text": "you qualify that in a yaml file and you",
    "start": "645300",
    "end": "648360"
  },
  {
    "text": "put it in in the in the bit bucket",
    "start": "648360",
    "end": "650820"
  },
  {
    "text": "pretty much like some sort of a github's",
    "start": "650820",
    "end": "652860"
  },
  {
    "text": "model here",
    "start": "652860",
    "end": "655019"
  },
  {
    "text": "and",
    "start": "655019",
    "end": "656579"
  },
  {
    "text": "you integrate Captain with the APN tools",
    "start": "656579",
    "end": "659640"
  },
  {
    "text": "down below",
    "start": "659640",
    "end": "660959"
  },
  {
    "text": "now when you execute a chaos test",
    "start": "660959",
    "end": "663899"
  },
  {
    "text": "you tell Captain hey Captain I executed",
    "start": "663899",
    "end": "667019"
  },
  {
    "text": "this chaos test for this period go",
    "start": "667019",
    "end": "669779"
  },
  {
    "text": "evaluate for this five minutes or this",
    "start": "669779",
    "end": "672959"
  },
  {
    "text": "10 minutes",
    "start": "672959",
    "end": "674100"
  },
  {
    "text": "and then it goes pulls that uh slice",
    "start": "674100",
    "end": "676920"
  },
  {
    "text": "slos pulls the metrics from the Dyna",
    "start": "676920",
    "end": "680459"
  },
  {
    "text": "Trace evaluate and give you gives you",
    "start": "680459",
    "end": "682740"
  },
  {
    "text": "hey you know for this test",
    "start": "682740",
    "end": "685680"
  },
  {
    "text": "you you said you wanted a",
    "start": "685680",
    "end": "689040"
  },
  {
    "text": "10 10 error rate is acceptable because",
    "start": "689040",
    "end": "692220"
  },
  {
    "text": "you introduce chaos but",
    "start": "692220",
    "end": "694920"
  },
  {
    "text": "I saw like a 30 percent error rate that",
    "start": "694920",
    "end": "697920"
  },
  {
    "text": "means your chaos just failed then you",
    "start": "697920",
    "end": "700380"
  },
  {
    "text": "further dig into it to understand why",
    "start": "700380",
    "end": "702360"
  },
  {
    "text": "that uh why why there are so many errors",
    "start": "702360",
    "end": "705720"
  },
  {
    "text": "whether you're introducing a latency in",
    "start": "705720",
    "end": "708779"
  },
  {
    "text": "one API caused errors in other API",
    "start": "708779",
    "end": "710880"
  },
  {
    "text": "there's further uh evaluation uh",
    "start": "710880",
    "end": "714180"
  },
  {
    "text": "triaging that you have to do",
    "start": "714180",
    "end": "716519"
  },
  {
    "text": "so but what Captain can help you with is",
    "start": "716519",
    "end": "720120"
  },
  {
    "text": "can help you with avail automating that",
    "start": "720120",
    "end": "722519"
  },
  {
    "text": "evaluation process that's a one toil",
    "start": "722519",
    "end": "725579"
  },
  {
    "text": "that you have uh that is eliminated",
    "start": "725579",
    "end": "729839"
  },
  {
    "text": "now this is all good and if you want to",
    "start": "729839",
    "end": "731700"
  },
  {
    "text": "automate this further",
    "start": "731700",
    "end": "733579"
  },
  {
    "text": "uh that's where it says CI CD",
    "start": "733579",
    "end": "737519"
  },
  {
    "text": "would help you what cacd can help you is",
    "start": "737519",
    "end": "740160"
  },
  {
    "text": "help you defining a workflow around",
    "start": "740160",
    "end": "743360"
  },
  {
    "text": "chaos engineering ecosystem and uh",
    "start": "743360",
    "end": "748320"
  },
  {
    "text": "help you trigger sellout generator",
    "start": "748320",
    "end": "753060"
  },
  {
    "text": "through the through Jenkins cicd",
    "start": "753060",
    "end": "755459"
  },
  {
    "text": "Pipeline and then trigger chaos",
    "start": "755459",
    "end": "757640"
  },
  {
    "text": "experiments and finally trigger",
    "start": "757640",
    "end": "759899"
  },
  {
    "text": "evaluations that will talk to Captain",
    "start": "759899",
    "end": "762360"
  },
  {
    "text": "which will give you a Boolean value like",
    "start": "762360",
    "end": "765300"
  },
  {
    "text": "pass or fail",
    "start": "765300",
    "end": "767100"
  },
  {
    "text": "using which you can make a decision",
    "start": "767100",
    "end": "768720"
  },
  {
    "text": "whether you move this software to the",
    "start": "768720",
    "end": "771300"
  },
  {
    "text": "next",
    "start": "771300",
    "end": "772920"
  },
  {
    "text": "environment or production or wherever",
    "start": "772920",
    "end": "776100"
  },
  {
    "text": "you want to or not",
    "start": "776100",
    "end": "777720"
  },
  {
    "text": "so this is the kind of ecosystem that we",
    "start": "777720",
    "end": "779940"
  },
  {
    "text": "have built to a",
    "start": "779940",
    "end": "782720"
  },
  {
    "text": "automate uh the toil be uh scale this",
    "start": "782720",
    "end": "789120"
  },
  {
    "text": "across the board by consistently uh and",
    "start": "789120",
    "end": "792959"
  },
  {
    "text": "repeated uh consistently implementing",
    "start": "792959",
    "end": "795660"
  },
  {
    "text": "this in a repeated manner",
    "start": "795660",
    "end": "799639"
  },
  {
    "text": "so now the floor I'm heading the floor",
    "start": "802320",
    "end": "804899"
  },
  {
    "text": "to",
    "start": "804899",
    "end": "806660"
  },
  {
    "text": "nilanjun who's going to spend some time",
    "start": "806660",
    "end": "809220"
  },
  {
    "text": "on chaos engineering uh or sorry I would",
    "start": "809220",
    "end": "813540"
  },
  {
    "text": "say litmus chaos tool itself nilanjan",
    "start": "813540",
    "end": "817800"
  },
  {
    "text": "floor is yours litmus is a tool set to",
    "start": "817800",
    "end": "820380"
  },
  {
    "text": "do Cloud native chaos engineering it",
    "start": "820380",
    "end": "822600"
  },
  {
    "text": "helps both developers and sres to",
    "start": "822600",
    "end": "824579"
  },
  {
    "text": "automate the chaos experiments at",
    "start": "824579",
    "end": "826139"
  },
  {
    "text": "different stages within the devops",
    "start": "826139",
    "end": "827760"
  },
  {
    "text": "pipeline like development during CI CD",
    "start": "827760",
    "end": "830639"
  },
  {
    "text": "and in production which leads to",
    "start": "830639",
    "end": "833100"
  },
  {
    "text": "increased resiliency of the system",
    "start": "833100",
    "end": "835800"
  },
  {
    "text": "it adopts a kubernetes native approach",
    "start": "835800",
    "end": "838320"
  },
  {
    "text": "to define the chaos intent in a",
    "start": "838320",
    "end": "840240"
  },
  {
    "text": "declarative manner via custom resources",
    "start": "840240",
    "end": "842279"
  },
  {
    "text": "it uses the operator pattern and relies",
    "start": "842279",
    "end": "844800"
  },
  {
    "text": "on custom resource definitions to define",
    "start": "844800",
    "end": "847139"
  },
  {
    "text": "the experiments on top of that Fitness",
    "start": "847139",
    "end": "850200"
  },
  {
    "text": "provides chaos into dashboard where one",
    "start": "850200",
    "end": "852720"
  },
  {
    "text": "can orchestrate and visualize the",
    "start": "852720",
    "end": "854279"
  },
  {
    "text": "results and metrics of the conducted",
    "start": "854279",
    "end": "855899"
  },
  {
    "text": "chaos experiments as well as litmus API",
    "start": "855899",
    "end": "859260"
  },
  {
    "text": "for programmatically injecting and",
    "start": "859260",
    "end": "861120"
  },
  {
    "text": "managing the chaos",
    "start": "861120",
    "end": "862680"
  },
  {
    "text": "from a top level litmus chaos uses CRS",
    "start": "862680",
    "end": "866040"
  },
  {
    "text": "to define the chaos intent and manages",
    "start": "866040",
    "end": "868320"
  },
  {
    "text": "the chaos orchestration via operators",
    "start": "868320",
    "end": "871200"
  },
  {
    "text": "there are different CRS such as chaos",
    "start": "871200",
    "end": "873420"
  },
  {
    "text": "experiment chaos engine and Chaos result",
    "start": "873420",
    "end": "876120"
  },
  {
    "text": "while a key also operator that",
    "start": "876120",
    "end": "878519"
  },
  {
    "text": "reconciles the chaos engine CR",
    "start": "878519",
    "end": "881040"
  },
  {
    "text": "in the course of a chaos experiment",
    "start": "881040",
    "end": "882959"
  },
  {
    "text": "execution given that a service account",
    "start": "882959",
    "end": "885839"
  },
  {
    "text": "with sufficient R back permissions for",
    "start": "885839",
    "end": "888060"
  },
  {
    "text": "the experiment has been already defined",
    "start": "888060",
    "end": "890639"
  },
  {
    "text": "one needs to define the chaos experiment",
    "start": "890639",
    "end": "893160"
  },
  {
    "text": "CR manifest for specifying low level",
    "start": "893160",
    "end": "896220"
  },
  {
    "text": "experiment attributes such as experiment",
    "start": "896220",
    "end": "898800"
  },
  {
    "text": "tunables container images",
    "start": "898800",
    "end": "901320"
  },
  {
    "text": "Etc and the chaos Engine That Binds the",
    "start": "901320",
    "end": "905399"
  },
  {
    "text": "experiment with an application instance",
    "start": "905399",
    "end": "907440"
  },
  {
    "text": "as well as defines how to perform the",
    "start": "907440",
    "end": "910019"
  },
  {
    "text": "chaos experiment in terms of mounting",
    "start": "910019",
    "end": "912779"
  },
  {
    "text": "volumes for the experiment parts or",
    "start": "912779",
    "end": "915240"
  },
  {
    "text": "overriding experiment tunables",
    "start": "915240",
    "end": "917639"
  },
  {
    "text": "retaining or deleting experiment Parts",
    "start": "917639",
    "end": "920160"
  },
  {
    "text": "post the chaos and so on",
    "start": "920160",
    "end": "922560"
  },
  {
    "text": "upon the creation of both these",
    "start": "922560",
    "end": "924540"
  },
  {
    "text": "resources chaos operator reconciles the",
    "start": "924540",
    "end": "927120"
  },
  {
    "text": "chaos engine CR to create the chaos",
    "start": "927120",
    "end": "929160"
  },
  {
    "text": "Runner which consumes secure's",
    "start": "929160",
    "end": "931800"
  },
  {
    "text": "experiment CR data for experiment",
    "start": "931800",
    "end": "934740"
  },
  {
    "text": "creation and then creates the kubernetes",
    "start": "934740",
    "end": "938160"
  },
  {
    "text": "jobs which creates the requisite",
    "start": "938160",
    "end": "941100"
  },
  {
    "text": "experiment parts for running the",
    "start": "941100",
    "end": "942899"
  },
  {
    "text": "experiment logic in the end the job also",
    "start": "942899",
    "end": "946139"
  },
  {
    "text": "updates the kiosk result CR which",
    "start": "946139",
    "end": "948540"
  },
  {
    "text": "summarizes the result of experiment runs",
    "start": "948540",
    "end": "951060"
  },
  {
    "text": "as well as updates the kiosk engine to",
    "start": "951060",
    "end": "953880"
  },
  {
    "text": "bring the chaos execution to an end",
    "start": "953880",
    "end": "956279"
  },
  {
    "text": "you can schedule chaos experiments to",
    "start": "956279",
    "end": "959040"
  },
  {
    "text": "run them later export metrics of the",
    "start": "959040",
    "end": "961980"
  },
  {
    "text": "experiments via Prometheus exporter and",
    "start": "961980",
    "end": "964860"
  },
  {
    "text": "get chaos execution events from chaos",
    "start": "964860",
    "end": "967920"
  },
  {
    "text": "engine and Chaos results during the",
    "start": "967920",
    "end": "969959"
  },
  {
    "text": "various phases of execution",
    "start": "969959",
    "end": "972839"
  },
  {
    "text": "the unique value proposition offered by",
    "start": "972839",
    "end": "975420"
  },
  {
    "text": "litmus includes first of all being Cloud",
    "start": "975420",
    "end": "977940"
  },
  {
    "text": "native chaos experiments that allow you",
    "start": "977940",
    "end": "980399"
  },
  {
    "text": "to validate your entire application",
    "start": "980399",
    "end": "982199"
  },
  {
    "text": "stack beat Cloud native kubernetes",
    "start": "982199",
    "end": "984540"
  },
  {
    "text": "resources or Cloud infrastructure or",
    "start": "984540",
    "end": "986880"
  },
  {
    "text": "even Legacy infrastructure with the",
    "start": "986880",
    "end": "988980"
  },
  {
    "text": "broad range of experiments that it that",
    "start": "988980",
    "end": "991199"
  },
  {
    "text": "is offered by litmus second being least",
    "start": "991199",
    "end": "994440"
  },
  {
    "text": "privileged principle chaos injection",
    "start": "994440",
    "end": "996779"
  },
  {
    "text": "which allows for chaos Engineering in",
    "start": "996779",
    "end": "999360"
  },
  {
    "text": "security sensitive environments using",
    "start": "999360",
    "end": "1001339"
  },
  {
    "text": "granular R back over individual",
    "start": "1001339",
    "end": "1003800"
  },
  {
    "text": "experiments and use of just-in-time",
    "start": "1003800",
    "end": "1005959"
  },
  {
    "text": "execution of privileged containers that",
    "start": "1005959",
    "end": "1008600"
  },
  {
    "text": "limit the abuse and misuse of Target",
    "start": "1008600",
    "end": "1011240"
  },
  {
    "text": "environments",
    "start": "1011240",
    "end": "1012680"
  },
  {
    "text": "thirdly it provides declarative",
    "start": "1012680",
    "end": "1014779"
  },
  {
    "text": "pre-checks and hypothesis validation",
    "start": "1014779",
    "end": "1017240"
  },
  {
    "text": "which is leveraged using litmus proofs",
    "start": "1017240",
    "end": "1020660"
  },
  {
    "text": "which can be used for validating",
    "start": "1020660",
    "end": "1022720"
  },
  {
    "text": "experiments steady state conditions with",
    "start": "1022720",
    "end": "1025220"
  },
  {
    "text": "less to no programmatic intervention in",
    "start": "1025220",
    "end": "1027678"
  },
  {
    "text": "a simple and declarative manner",
    "start": "1027679",
    "end": "1030020"
  },
  {
    "text": "for fourth we have conditional Auto",
    "start": "1030020",
    "end": "1032178"
  },
  {
    "text": "stopping of chaos injection which is one",
    "start": "1032179",
    "end": "1034640"
  },
  {
    "text": "of the features of the litmus probes",
    "start": "1034640",
    "end": "1036199"
  },
  {
    "text": "where the failure of the probe condition",
    "start": "1036199",
    "end": "1038298"
  },
  {
    "text": "check leads to the safer bot of the",
    "start": "1038299",
    "end": "1040880"
  },
  {
    "text": "chaos experiment which prevents any harm",
    "start": "1040880",
    "end": "1043220"
  },
  {
    "text": "to the Target resources",
    "start": "1043220",
    "end": "1045620"
  },
  {
    "text": "fifth it provides custom chaos recovery",
    "start": "1045620",
    "end": "1048500"
  },
  {
    "text": "actions and it can be defined as a part",
    "start": "1048500",
    "end": "1051320"
  },
  {
    "text": "of the chaos scenario in a declarative",
    "start": "1051320",
    "end": "1053720"
  },
  {
    "text": "manner to introduce custom chaos",
    "start": "1053720",
    "end": "1055940"
  },
  {
    "text": "recovery steps that can execute",
    "start": "1055940",
    "end": "1057799"
  },
  {
    "text": "conditionally",
    "start": "1057799",
    "end": "1059120"
  },
  {
    "text": "sixth it provides declarative custom",
    "start": "1059120",
    "end": "1061760"
  },
  {
    "text": "tasks which AIDS at partly running the",
    "start": "1061760",
    "end": "1065059"
  },
  {
    "text": "tasks that simulate real life conditions",
    "start": "1065059",
    "end": "1067340"
  },
  {
    "text": "for the chaos execution so for an",
    "start": "1067340",
    "end": "1069500"
  },
  {
    "text": "example running a load generator to",
    "start": "1069500",
    "end": "1071720"
  },
  {
    "text": "simulate a network traffic is what we",
    "start": "1071720",
    "end": "1073700"
  },
  {
    "text": "can do here finally the last one",
    "start": "1073700",
    "end": "1076100"
  },
  {
    "text": "quantification of system resiliency by",
    "start": "1076100",
    "end": "1079160"
  },
  {
    "text": "use of weighted experiments and probe",
    "start": "1079160",
    "end": "1081500"
  },
  {
    "text": "success criteria to quantify the result",
    "start": "1081500",
    "end": "1084380"
  },
  {
    "text": "of your system as a metric score",
    "start": "1084380",
    "end": "1087679"
  },
  {
    "text": "now let us take a look at how some of",
    "start": "1087679",
    "end": "1090200"
  },
  {
    "text": "the litmus chaos experiments can be",
    "start": "1090200",
    "end": "1092000"
  },
  {
    "text": "leveraged in real life situations to",
    "start": "1092000",
    "end": "1094039"
  },
  {
    "text": "evaluate system resiliency thank you",
    "start": "1094039",
    "end": "1096320"
  },
  {
    "text": "nilanjan uh",
    "start": "1096320",
    "end": "1099279"
  },
  {
    "text": "uh thanks for that that nice overview on",
    "start": "1099380",
    "end": "1102380"
  },
  {
    "text": "litmus",
    "start": "1102380",
    "end": "1103640"
  },
  {
    "text": "tool",
    "start": "1103640",
    "end": "1105080"
  },
  {
    "text": "so let's dive a little bit deep into the",
    "start": "1105080",
    "end": "1107480"
  },
  {
    "text": "experiments that litmus chaos provides",
    "start": "1107480",
    "end": "1110660"
  },
  {
    "text": "here I want to kind of focus on how do",
    "start": "1110660",
    "end": "1112760"
  },
  {
    "text": "you measure the experiment right just",
    "start": "1112760",
    "end": "1115520"
  },
  {
    "text": "like",
    "start": "1115520",
    "end": "1116360"
  },
  {
    "text": "uh any test you want litmus test or",
    "start": "1116360",
    "end": "1120020"
  },
  {
    "text": "litmus experiment to be measured",
    "start": "1120020",
    "end": "1122840"
  },
  {
    "text": "litmus offers wide variety of",
    "start": "1122840",
    "end": "1124760"
  },
  {
    "text": "experiments here I took three",
    "start": "1124760",
    "end": "1126260"
  },
  {
    "text": "experiments as a sample and I want to",
    "start": "1126260",
    "end": "1128000"
  },
  {
    "text": "introduce how we measured",
    "start": "1128000",
    "end": "1130580"
  },
  {
    "text": "when we execute this experiment for",
    "start": "1130580",
    "end": "1133160"
  },
  {
    "text": "example",
    "start": "1133160",
    "end": "1134480"
  },
  {
    "text": "when we execute pod HTTP latency we",
    "start": "1134480",
    "end": "1137840"
  },
  {
    "text": "measured uh third pool connection pool",
    "start": "1137840",
    "end": "1141140"
  },
  {
    "text": "utilization error rate and throughput Y",
    "start": "1141140",
    "end": "1143720"
  },
  {
    "text": "so again back to that microservice A and",
    "start": "1143720",
    "end": "1146900"
  },
  {
    "text": "microservice B example if you introduce",
    "start": "1146900",
    "end": "1148940"
  },
  {
    "text": "latency between A and B we want to",
    "start": "1148940",
    "end": "1151460"
  },
  {
    "text": "understand how is impacted the resources",
    "start": "1151460",
    "end": "1153860"
  },
  {
    "text": "on a is impacted",
    "start": "1153860",
    "end": "1155840"
  },
  {
    "text": "pod memory hack if you introduce a",
    "start": "1155840",
    "end": "1158900"
  },
  {
    "text": "memory saturation type of event and a",
    "start": "1158900",
    "end": "1161000"
  },
  {
    "text": "micro services are kubernetes",
    "start": "1161000",
    "end": "1163299"
  },
  {
    "text": "architecture the part is killed with",
    "start": "1163299",
    "end": "1166700"
  },
  {
    "text": "umkill event we want to understand",
    "start": "1166700",
    "end": "1169460"
  },
  {
    "text": "whether that the APM systems are alerted",
    "start": "1169460",
    "end": "1173299"
  },
  {
    "text": "because of that event",
    "start": "1173299",
    "end": "1175220"
  },
  {
    "text": "is a service response time of apis of",
    "start": "1175220",
    "end": "1179660"
  },
  {
    "text": "the exposure on that part",
    "start": "1179660",
    "end": "1181700"
  },
  {
    "text": "and as well as",
    "start": "1181700",
    "end": "1183980"
  },
  {
    "text": "does",
    "start": "1183980",
    "end": "1186020"
  },
  {
    "text": "the part memory hog on a particular part",
    "start": "1186020",
    "end": "1189200"
  },
  {
    "text": "or a boom kill event of a particular",
    "start": "1189200",
    "end": "1191660"
  },
  {
    "text": "part caused any wider impact right",
    "start": "1191660",
    "end": "1194900"
  },
  {
    "text": "that's how it helps you with the broader",
    "start": "1194900",
    "end": "1197600"
  },
  {
    "text": "stability uh resiliency issue and",
    "start": "1197600",
    "end": "1200900"
  },
  {
    "text": "understanding the stability resiliency",
    "start": "1200900",
    "end": "1202520"
  },
  {
    "text": "of your application",
    "start": "1202520",
    "end": "1204380"
  },
  {
    "text": "HTTP status code so if you want to",
    "start": "1204380",
    "end": "1206480"
  },
  {
    "text": "inject 500 errors on a microservice",
    "start": "1206480",
    "end": "1209840"
  },
  {
    "text": "running on a part in a say a call",
    "start": "1209840",
    "end": "1212360"
  },
  {
    "text": "creation workflow right",
    "start": "1212360",
    "end": "1214880"
  },
  {
    "text": "what you want to understand is when you",
    "start": "1214880",
    "end": "1217280"
  },
  {
    "text": "introduce 500 how it impacts your",
    "start": "1217280",
    "end": "1220580"
  },
  {
    "text": "business metrics such as account",
    "start": "1220580",
    "end": "1222080"
  },
  {
    "text": "creation rate how resilient your overall",
    "start": "1222080",
    "end": "1225559"
  },
  {
    "text": "application stack is how it's impacting",
    "start": "1225559",
    "end": "1228440"
  },
  {
    "text": "your your business metrics",
    "start": "1228440",
    "end": "1232360"
  },
  {
    "text": "foreign so earlier I talked about",
    "start": "1232960",
    "end": "1235640"
  },
  {
    "text": "Captain doing a chaos Evolution so how",
    "start": "1235640",
    "end": "1238580"
  },
  {
    "text": "about the example of a chaos Evolution",
    "start": "1238580",
    "end": "1240520"
  },
  {
    "text": "here the way we envision chaos Evolution",
    "start": "1240520",
    "end": "1244400"
  },
  {
    "text": "as a kind of three-phase manner your",
    "start": "1244400",
    "end": "1246860"
  },
  {
    "text": "pre-phase Precast phase during chaos",
    "start": "1246860",
    "end": "1250460"
  },
  {
    "text": "phase and post chaos phase",
    "start": "1250460",
    "end": "1252559"
  },
  {
    "text": "PKS phase you can think of a",
    "start": "1252559",
    "end": "1256220"
  },
  {
    "text": "like a",
    "start": "1256220",
    "end": "1258440"
  },
  {
    "text": "steady state",
    "start": "1258440",
    "end": "1261159"
  },
  {
    "text": "during the steady state you may Define",
    "start": "1261620",
    "end": "1265280"
  },
  {
    "text": "the metrics that you want to measure and",
    "start": "1265280",
    "end": "1268039"
  },
  {
    "text": "you you define the thresholds example",
    "start": "1268039",
    "end": "1270500"
  },
  {
    "text": "you want to measure throughput",
    "start": "1270500",
    "end": "1273320"
  },
  {
    "text": "error rate response time CPU memory",
    "start": "1273320",
    "end": "1276200"
  },
  {
    "text": "connection pool utilization third pull",
    "start": "1276200",
    "end": "1278299"
  },
  {
    "text": "utilization say for example for",
    "start": "1278299",
    "end": "1281059"
  },
  {
    "text": "response time you want three seconds",
    "start": "1281059",
    "end": "1282980"
  },
  {
    "text": "through put 100 transaction per second",
    "start": "1282980",
    "end": "1285460"
  },
  {
    "text": "less than two percent and now we",
    "start": "1285460",
    "end": "1288080"
  },
  {
    "text": "executed the test study State five",
    "start": "1288080",
    "end": "1290659"
  },
  {
    "text": "minutes as depicted here right you give",
    "start": "1290659",
    "end": "1293240"
  },
  {
    "text": "the captain saying hey Captain here is",
    "start": "1293240",
    "end": "1295760"
  },
  {
    "text": "my SLL SLI definition",
    "start": "1295760",
    "end": "1298400"
  },
  {
    "text": "and here's my five minute window I",
    "start": "1298400",
    "end": "1300380"
  },
  {
    "text": "executed the test go evaluate it the",
    "start": "1300380",
    "end": "1303020"
  },
  {
    "text": "captains comes back saying that it's all",
    "start": "1303020",
    "end": "1305480"
  },
  {
    "text": "looking good green steady state is good",
    "start": "1305480",
    "end": "1307760"
  },
  {
    "text": "now you introduced chaos example and",
    "start": "1307760",
    "end": "1311720"
  },
  {
    "text": "network latency now typically when you",
    "start": "1311720",
    "end": "1314659"
  },
  {
    "text": "introduce latency the throughput will go",
    "start": "1314659",
    "end": "1317000"
  },
  {
    "text": "down the error rate will go up but your",
    "start": "1317000",
    "end": "1320120"
  },
  {
    "text": "hypothesis is there are error rate could",
    "start": "1320120",
    "end": "1322400"
  },
  {
    "text": "be impacted only one API where you",
    "start": "1322400",
    "end": "1324320"
  },
  {
    "text": "introduce the latency and it could uh",
    "start": "1324320",
    "end": "1326960"
  },
  {
    "text": "you know cause maybe five percent error",
    "start": "1326960",
    "end": "1329360"
  },
  {
    "text": "rate",
    "start": "1329360",
    "end": "1330620"
  },
  {
    "text": "you feed that your slis that you want",
    "start": "1330620",
    "end": "1334400"
  },
  {
    "text": "evaluate and their objectives are",
    "start": "1334400",
    "end": "1337159"
  },
  {
    "text": "thresholds again in the CML file and",
    "start": "1337159",
    "end": "1340100"
  },
  {
    "text": "feed it to Captain",
    "start": "1340100",
    "end": "1341600"
  },
  {
    "text": "and kept until kept and hey Captain I",
    "start": "1341600",
    "end": "1344780"
  },
  {
    "text": "executed this chaos this is my chaos",
    "start": "1344780",
    "end": "1347659"
  },
  {
    "text": "phase is between 10th minute and 15th",
    "start": "1347659",
    "end": "1349640"
  },
  {
    "text": "minute and here is my uh SLI SLR",
    "start": "1349640",
    "end": "1353659"
  },
  {
    "text": "definition for this go evaluate Captain",
    "start": "1353659",
    "end": "1357320"
  },
  {
    "text": "would evaluate and comes back to you",
    "start": "1357320",
    "end": "1359179"
  },
  {
    "text": "whether it is passed or fail if it's",
    "start": "1359179",
    "end": "1361640"
  },
  {
    "text": "between the bounds it's a pass if it's",
    "start": "1361640",
    "end": "1364400"
  },
  {
    "text": "outside the bound is fail that's that",
    "start": "1364400",
    "end": "1366799"
  },
  {
    "text": "leads to further investigation and that",
    "start": "1366799",
    "end": "1369200"
  },
  {
    "text": "will help you find why there are more",
    "start": "1369200",
    "end": "1371720"
  },
  {
    "text": "errors right or any other issues why the",
    "start": "1371720",
    "end": "1374480"
  },
  {
    "text": "connection pool utilization uh you know",
    "start": "1374480",
    "end": "1377720"
  },
  {
    "text": "went up during the chaos but it's",
    "start": "1377720",
    "end": "1380000"
  },
  {
    "text": "saturated you're expecting it to go out",
    "start": "1380000",
    "end": "1381919"
  },
  {
    "text": "to maybe 50 but it may went up to 100",
    "start": "1381919",
    "end": "1384980"
  },
  {
    "text": "right a CPU you're expecting to go up",
    "start": "1384980",
    "end": "1388100"
  },
  {
    "text": "like five percent but it went up to 50",
    "start": "1388100",
    "end": "1390380"
  },
  {
    "text": "percent so those are the things that",
    "start": "1390380",
    "end": "1393020"
  },
  {
    "text": "Captain can automatically evaluate and",
    "start": "1393020",
    "end": "1395480"
  },
  {
    "text": "give you kind of some sort of a heat map",
    "start": "1395480",
    "end": "1398179"
  },
  {
    "text": "and pass fail",
    "start": "1398179",
    "end": "1400520"
  },
  {
    "text": "result and post chaos what you need to",
    "start": "1400520",
    "end": "1404659"
  },
  {
    "text": "do is which is you define your metrics",
    "start": "1404659",
    "end": "1408740"
  },
  {
    "text": "very similar to your study State the",
    "start": "1408740",
    "end": "1411020"
  },
  {
    "text": "post phase is more of a recovery phase",
    "start": "1411020",
    "end": "1412520"
  },
  {
    "text": "right where you remove your experiment",
    "start": "1412520",
    "end": "1414799"
  },
  {
    "text": "at the 15th minute and 15 to 20 minutes",
    "start": "1414799",
    "end": "1417980"
  },
  {
    "text": "you want to understand the application",
    "start": "1417980",
    "end": "1420820"
  },
  {
    "text": "metrics are back to normal right so then",
    "start": "1420820",
    "end": "1424100"
  },
  {
    "text": "your slis slos",
    "start": "1424100",
    "end": "1426200"
  },
  {
    "text": "are very similar to what you have in",
    "start": "1426200",
    "end": "1428179"
  },
  {
    "text": "study State and then you give the",
    "start": "1428179",
    "end": "1430039"
  },
  {
    "text": "captain saying hey Captain go X go",
    "start": "1430039",
    "end": "1432320"
  },
  {
    "text": "evaluate my post phase uh these are my",
    "start": "1432320",
    "end": "1435140"
  },
  {
    "text": "slos",
    "start": "1435140",
    "end": "1436179"
  },
  {
    "text": "slis and evaluated and kept in evalues",
    "start": "1436179",
    "end": "1439880"
  },
  {
    "text": "and comes back it's all looking within",
    "start": "1439880",
    "end": "1441799"
  },
  {
    "text": "the bonds pass otherwise it Market fail",
    "start": "1441799",
    "end": "1445640"
  },
  {
    "text": "so that's the kind of a power the",
    "start": "1445640",
    "end": "1448039"
  },
  {
    "text": "automation that Captain brings you in",
    "start": "1448039",
    "end": "1450740"
  },
  {
    "text": "evaluating your chaos experiment",
    "start": "1450740",
    "end": "1454100"
  },
  {
    "text": "so finally I I conclude this talk here",
    "start": "1454100",
    "end": "1456740"
  },
  {
    "text": "finally I will leave uh uh this session",
    "start": "1456740",
    "end": "1459500"
  },
  {
    "text": "with a thought that usually the chaos in",
    "start": "1459500",
    "end": "1462500"
  },
  {
    "text": "leading is looked at either more of a",
    "start": "1462500",
    "end": "1464059"
  },
  {
    "text": "SRE problem but it can help you validate",
    "start": "1464059",
    "end": "1467780"
  },
  {
    "text": "your architecture and also helps you",
    "start": "1467780",
    "end": "1470120"
  },
  {
    "text": "with the uh you know measuring business",
    "start": "1470120",
    "end": "1472640"
  },
  {
    "text": "metrics thus uh help the business teams",
    "start": "1472640",
    "end": "1475900"
  },
  {
    "text": "ultimately providing greater customer",
    "start": "1475900",
    "end": "1478039"
  },
  {
    "text": "experience than product quality and also",
    "start": "1478039",
    "end": "1481840"
  },
  {
    "text": "validation obviously it helps with the",
    "start": "1481840",
    "end": "1484640"
  },
  {
    "text": "stability we intend to detect and mean",
    "start": "1484640",
    "end": "1486919"
  },
  {
    "text": "time to resolve type of issues uh that",
    "start": "1486919",
    "end": "1490940"
  },
  {
    "text": "helps with SRE",
    "start": "1490940",
    "end": "1492440"
  },
  {
    "text": "with that I open the floor for a q a",
    "start": "1492440",
    "end": "1495620"
  },
  {
    "text": "thank you very much",
    "start": "1495620",
    "end": "1498820"
  }
]