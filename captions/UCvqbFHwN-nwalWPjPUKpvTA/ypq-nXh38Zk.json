[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "hello and welcome to this session log",
    "start": "640",
    "end": "3120"
  },
  {
    "text": "support and open telemetry",
    "start": "3120",
    "end": "6000"
  },
  {
    "text": "what is open telemetry openslimetry is",
    "start": "6000",
    "end": "9040"
  },
  {
    "text": "all about making robust portable",
    "start": "9040",
    "end": "10800"
  },
  {
    "text": "telemetry data",
    "start": "10800",
    "end": "11920"
  },
  {
    "text": "a feature of cloud-native software that",
    "start": "11920",
    "end": "14799"
  },
  {
    "text": "means the goal is to provide a set of",
    "start": "14799",
    "end": "16400"
  },
  {
    "text": "apis libraries agents and collector",
    "start": "16400",
    "end": "18720"
  },
  {
    "text": "technology",
    "start": "18720",
    "end": "19600"
  },
  {
    "text": "that's bundled automatically and",
    "start": "19600",
    "end": "21119"
  },
  {
    "text": "available so that you can easily",
    "start": "21119",
    "end": "22960"
  },
  {
    "text": "generate",
    "start": "22960",
    "end": "23519"
  },
  {
    "text": "emit and collect the telemetry data that",
    "start": "23519",
    "end": "25439"
  },
  {
    "text": "you need in order to observe your",
    "start": "25439",
    "end": "28840"
  },
  {
    "text": "systems open telemetry is a very active",
    "start": "28840",
    "end": "31679"
  },
  {
    "text": "project",
    "start": "31679",
    "end": "32398"
  },
  {
    "text": "in fact it's the second most active",
    "start": "32399",
    "end": "34399"
  },
  {
    "text": "project in cncf behind only kubernetes",
    "start": "34399",
    "end": "37200"
  },
  {
    "text": "and this is according to cncf dev sets",
    "start": "37200",
    "end": "40960"
  },
  {
    "text": "the project is seeing a lot of momentum",
    "start": "40960",
    "end": "42879"
  },
  {
    "text": "with many people contributing and",
    "start": "42879",
    "end": "44559"
  },
  {
    "text": "adopting the technology",
    "start": "44559",
    "end": "46239"
  },
  {
    "text": "from cloud providers and end users to",
    "start": "46239",
    "end": "48640"
  },
  {
    "text": "vendors and other open source projects",
    "start": "48640",
    "end": "51520"
  },
  {
    "text": "you can learn all about it and the links",
    "start": "51520",
    "end": "53920"
  },
  {
    "text": "provided below telemetry is really",
    "start": "53920",
    "end": "58800"
  },
  {
    "text": "focused today around three primary",
    "start": "58800",
    "end": "60879"
  },
  {
    "text": "signals",
    "start": "60879",
    "end": "61440"
  },
  {
    "text": "traces metrics and logs and each are in",
    "start": "61440",
    "end": "64320"
  },
  {
    "text": "a different phase of maturity",
    "start": "64320",
    "end": "66479"
  },
  {
    "text": "traces recently reached the stable",
    "start": "66479",
    "end": "68400"
  },
  {
    "text": "milestone with three major languages",
    "start": "68400",
    "end": "70640"
  },
  {
    "text": "providing support",
    "start": "70640",
    "end": "72080"
  },
  {
    "text": "two more right on the way and the rest",
    "start": "72080",
    "end": "74799"
  },
  {
    "text": "planned later this year",
    "start": "74799",
    "end": "76640"
  },
  {
    "text": "metrics is currently in beta but the",
    "start": "76640",
    "end": "78400"
  },
  {
    "text": "goal is to offer a stable data model",
    "start": "78400",
    "end": "80560"
  },
  {
    "text": "here",
    "start": "80560",
    "end": "80880"
  },
  {
    "text": "in the next couple of months and then",
    "start": "80880",
    "end": "83360"
  },
  {
    "text": "instrumentation libraries will start",
    "start": "83360",
    "end": "84799"
  },
  {
    "text": "adopting the data model",
    "start": "84799",
    "end": "86479"
  },
  {
    "text": "and logs is currently in alpha the goal",
    "start": "86479",
    "end": "89759"
  },
  {
    "text": "is that traces and metrics will be",
    "start": "89759",
    "end": "91280"
  },
  {
    "text": "stable across all major languages later",
    "start": "91280",
    "end": "93439"
  },
  {
    "text": "this year",
    "start": "93439",
    "end": "94159"
  },
  {
    "text": "and logs will at least reach the beta",
    "start": "94159",
    "end": "98560"
  },
  {
    "text": "milestone hi",
    "start": "98840",
    "end": "100400"
  },
  {
    "text": "my name is steve flanders i'm a director",
    "start": "100400",
    "end": "102320"
  },
  {
    "text": "of engineering at splunk and actively",
    "start": "102320",
    "end": "104240"
  },
  {
    "text": "involved in the open telemetry project",
    "start": "104240",
    "end": "106159"
  },
  {
    "text": "including the collector and website",
    "start": "106159",
    "end": "108640"
  },
  {
    "text": "i'm also a member of the cncf sig",
    "start": "108640",
    "end": "110560"
  },
  {
    "text": "observability",
    "start": "110560",
    "end": "112079"
  },
  {
    "text": "i've been working in the open telemetry",
    "start": "112079",
    "end": "113680"
  },
  {
    "text": "space since its inception",
    "start": "113680",
    "end": "115280"
  },
  {
    "text": "and previously on the open census",
    "start": "115280",
    "end": "116880"
  },
  {
    "text": "project",
    "start": "116880",
    "end": "118320"
  },
  {
    "text": "i've also been in the observability",
    "start": "118320",
    "end": "119759"
  },
  {
    "text": "space now for over a decade",
    "start": "119759",
    "end": "122159"
  },
  {
    "text": "prior to splunk i was at an omniscient",
    "start": "122159",
    "end": "124320"
  },
  {
    "text": "that was acquired by splunk about a year",
    "start": "124320",
    "end": "125840"
  },
  {
    "text": "and a half ago",
    "start": "125840",
    "end": "127200"
  },
  {
    "text": "working in the distributed tracing space",
    "start": "127200",
    "end": "129360"
  },
  {
    "text": "and prior to that",
    "start": "129360",
    "end": "130399"
  },
  {
    "text": "i was working in the logging space at",
    "start": "130399",
    "end": "132239"
  },
  {
    "text": "vmware",
    "start": "132239",
    "end": "133520"
  },
  {
    "text": "if you're interested in learning more",
    "start": "133520",
    "end": "134560"
  },
  {
    "text": "about me take a look at the social media",
    "start": "134560",
    "end": "136560"
  },
  {
    "text": "links",
    "start": "136560",
    "end": "138879"
  },
  {
    "text": "i want to start by kind of walking",
    "start": "139440",
    "end": "140959"
  },
  {
    "text": "through the major components of open",
    "start": "140959",
    "end": "142640"
  },
  {
    "text": "telemetry",
    "start": "142640",
    "end": "143520"
  },
  {
    "text": "and then overlaying how logs plays into",
    "start": "143520",
    "end": "146239"
  },
  {
    "text": "it",
    "start": "146239",
    "end": "148400"
  },
  {
    "text": "open telemetry is about cloud native",
    "start": "148640",
    "end": "150560"
  },
  {
    "text": "telemetry",
    "start": "150560",
    "end": "151680"
  },
  {
    "text": "if you've heard of observability you've",
    "start": "151680",
    "end": "153200"
  },
  {
    "text": "probably heard of the three pillars of",
    "start": "153200",
    "end": "154800"
  },
  {
    "text": "observability which are represented as",
    "start": "154800",
    "end": "156640"
  },
  {
    "text": "verticals here",
    "start": "156640",
    "end": "157519"
  },
  {
    "text": "traces metrics and logs these",
    "start": "157519",
    "end": "160560"
  },
  {
    "text": "signals or data sources are full of rich",
    "start": "160560",
    "end": "163440"
  },
  {
    "text": "information",
    "start": "163440",
    "end": "164560"
  },
  {
    "text": "but the way in which they're implemented",
    "start": "164560",
    "end": "166400"
  },
  {
    "text": "is actually many layers deep",
    "start": "166400",
    "end": "168640"
  },
  {
    "text": "for each of these you need some sort of",
    "start": "168640",
    "end": "170160"
  },
  {
    "text": "instrumentation api that is used to",
    "start": "170160",
    "end": "172400"
  },
  {
    "text": "actually generate and emit the telemetry",
    "start": "172400",
    "end": "174000"
  },
  {
    "text": "data that you care about",
    "start": "174000",
    "end": "175599"
  },
  {
    "text": "you need an implementation of this api",
    "start": "175599",
    "end": "177680"
  },
  {
    "text": "typically known as instrumentation",
    "start": "177680",
    "end": "179200"
  },
  {
    "text": "libraries or client libraries",
    "start": "179200",
    "end": "181440"
  },
  {
    "text": "then you need the data infrastructure to",
    "start": "181440",
    "end": "183200"
  },
  {
    "text": "get the agent tree so you can collect",
    "start": "183200",
    "end": "185040"
  },
  {
    "text": "this data",
    "start": "185040",
    "end": "185680"
  },
  {
    "text": "process it and then export it to",
    "start": "185680",
    "end": "187360"
  },
  {
    "text": "whatever backend you want to",
    "start": "187360",
    "end": "190000"
  },
  {
    "text": "on top of all of this you have a variety",
    "start": "190000",
    "end": "191599"
  },
  {
    "text": "of different interrupt formats in the",
    "start": "191599",
    "end": "193120"
  },
  {
    "text": "case of spans we're talking about",
    "start": "193120",
    "end": "194720"
  },
  {
    "text": "context propagation",
    "start": "194720",
    "end": "196000"
  },
  {
    "text": "but if you're just talking about",
    "start": "196000",
    "end": "197239"
  },
  {
    "text": "transferring data over the network then",
    "start": "197239",
    "end": "199760"
  },
  {
    "text": "there are different wire formats that",
    "start": "199760",
    "end": "201280"
  },
  {
    "text": "are used as well",
    "start": "201280",
    "end": "203599"
  },
  {
    "text": "all of this is what the open telemetry",
    "start": "203599",
    "end": "205599"
  },
  {
    "text": "project is hoping to",
    "start": "205599",
    "end": "207680"
  },
  {
    "text": "standardize and allow for broad adoption",
    "start": "207680",
    "end": "211280"
  },
  {
    "text": "and popular open source libraries and",
    "start": "211280",
    "end": "213680"
  },
  {
    "text": "frameworks",
    "start": "213680",
    "end": "214959"
  },
  {
    "text": "the focus has been primarily on traces",
    "start": "214959",
    "end": "218080"
  },
  {
    "text": "metrics very close behind and logs are",
    "start": "218080",
    "end": "220720"
  },
  {
    "text": "being planned",
    "start": "220720",
    "end": "221599"
  },
  {
    "text": "at this time where open symmetry draws",
    "start": "221599",
    "end": "224480"
  },
  {
    "text": "the line is that it doesn't actually",
    "start": "224480",
    "end": "225599"
  },
  {
    "text": "provide",
    "start": "225599",
    "end": "226239"
  },
  {
    "text": "a back end instead it is a open source",
    "start": "226239",
    "end": "229840"
  },
  {
    "text": "and vendor agnostic",
    "start": "229840",
    "end": "231040"
  },
  {
    "text": "technology so it plugs into a variety of",
    "start": "231040",
    "end": "233519"
  },
  {
    "text": "different backends",
    "start": "233519",
    "end": "234799"
  },
  {
    "text": "thus the end user can decide where they",
    "start": "234799",
    "end": "236560"
  },
  {
    "text": "want to send their data giving them full",
    "start": "236560",
    "end": "238400"
  },
  {
    "text": "control of it",
    "start": "238400",
    "end": "241360"
  },
  {
    "start": "240000",
    "end": "240000"
  },
  {
    "text": "open telemetry consists of three major",
    "start": "241360",
    "end": "243840"
  },
  {
    "text": "components",
    "start": "243840",
    "end": "244879"
  },
  {
    "text": "there's the specification that is",
    "start": "244879",
    "end": "246400"
  },
  {
    "text": "foundational to everything that open",
    "start": "246400",
    "end": "247920"
  },
  {
    "text": "telemetry does",
    "start": "247920",
    "end": "249280"
  },
  {
    "text": "this is where the api sdk and data",
    "start": "249280",
    "end": "251840"
  },
  {
    "text": "pieces are fully defined",
    "start": "251840",
    "end": "254560"
  },
  {
    "text": "then instrumentation libraries in the",
    "start": "254560",
    "end": "256400"
  },
  {
    "text": "collector build on top of the",
    "start": "256400",
    "end": "258079"
  },
  {
    "text": "specification",
    "start": "258079",
    "end": "259919"
  },
  {
    "text": "instrumentation libraries are a language",
    "start": "259919",
    "end": "261919"
  },
  {
    "text": "specific way",
    "start": "261919",
    "end": "262960"
  },
  {
    "text": "in order to generate and emit the",
    "start": "262960",
    "end": "264880"
  },
  {
    "text": "telemetry signals that you care about",
    "start": "264880",
    "end": "267280"
  },
  {
    "text": "the goal is to provide a single client",
    "start": "267280",
    "end": "268960"
  },
  {
    "text": "library per language",
    "start": "268960",
    "end": "271040"
  },
  {
    "text": "the collector is a single binary that",
    "start": "271040",
    "end": "272800"
  },
  {
    "text": "can be deployed in a variety of",
    "start": "272800",
    "end": "274160"
  },
  {
    "text": "different form factors including as an",
    "start": "274160",
    "end": "275840"
  },
  {
    "text": "agent",
    "start": "275840",
    "end": "276479"
  },
  {
    "text": "or as a gateway it serves to receive",
    "start": "276479",
    "end": "279840"
  },
  {
    "text": "process and export data in a vendor",
    "start": "279840",
    "end": "282240"
  },
  {
    "text": "agnostic way",
    "start": "282240",
    "end": "284080"
  },
  {
    "text": "let's drill into each of these",
    "start": "284080",
    "end": "285120"
  },
  {
    "text": "components",
    "start": "285120",
    "end": "287600"
  },
  {
    "text": "the specification is organized into what",
    "start": "287600",
    "end": "289680"
  },
  {
    "text": "open telemetry calls signals",
    "start": "289680",
    "end": "291520"
  },
  {
    "text": "these are things like traces metrics and",
    "start": "291520",
    "end": "293520"
  },
  {
    "text": "logs there are other signals too but for",
    "start": "293520",
    "end": "295919"
  },
  {
    "text": "the purposes of this talk we'll just",
    "start": "295919",
    "end": "297360"
  },
  {
    "text": "focus on the different data sources",
    "start": "297360",
    "end": "299199"
  },
  {
    "text": "themselves",
    "start": "299199",
    "end": "300639"
  },
  {
    "text": "for each of these signals you have a",
    "start": "300639",
    "end": "302400"
  },
  {
    "text": "data model an instrumentation api",
    "start": "302400",
    "end": "305039"
  },
  {
    "text": "so you can actually generate this",
    "start": "305039",
    "end": "307120"
  },
  {
    "text": "instrumentation and code",
    "start": "307120",
    "end": "308720"
  },
  {
    "text": "an sdk so you can process and export",
    "start": "308720",
    "end": "311039"
  },
  {
    "text": "that data",
    "start": "311039",
    "end": "312400"
  },
  {
    "text": "collector support so you have an agent",
    "start": "312400",
    "end": "314639"
  },
  {
    "text": "or standalone loan gateway that you can",
    "start": "314639",
    "end": "316800"
  },
  {
    "text": "use",
    "start": "316800",
    "end": "318000"
  },
  {
    "text": "there are core packages which are part",
    "start": "318000",
    "end": "320160"
  },
  {
    "text": "of the open source community with",
    "start": "320160",
    "end": "321600"
  },
  {
    "text": "popular things being",
    "start": "321600",
    "end": "322880"
  },
  {
    "text": "provided out of the box like jaeger",
    "start": "322880",
    "end": "325120"
  },
  {
    "text": "zipkin",
    "start": "325120",
    "end": "325919"
  },
  {
    "text": "and prometheus and then there are",
    "start": "325919",
    "end": "327520"
  },
  {
    "text": "contrib packages which",
    "start": "327520",
    "end": "329039"
  },
  {
    "text": "may not be as applicable to all end",
    "start": "329039",
    "end": "331039"
  },
  {
    "text": "users but do also provide",
    "start": "331039",
    "end": "333360"
  },
  {
    "text": "support this is where things like vendor",
    "start": "333360",
    "end": "336000"
  },
  {
    "text": "exporters can also exist",
    "start": "336000",
    "end": "338720"
  },
  {
    "text": "context is a key concept of open",
    "start": "338720",
    "end": "340800"
  },
  {
    "text": "telemetry with the idea being that",
    "start": "340800",
    "end": "342240"
  },
  {
    "text": "regardless of signal you have",
    "start": "342240",
    "end": "344000"
  },
  {
    "text": "context and you can actually stitch all",
    "start": "344000",
    "end": "346000"
  },
  {
    "text": "the telemetry data together",
    "start": "346000",
    "end": "348240"
  },
  {
    "text": "resources is another foundational piece",
    "start": "348240",
    "end": "350320"
  },
  {
    "text": "of open telemetry",
    "start": "350320",
    "end": "351600"
  },
  {
    "text": "with the idea being that these different",
    "start": "351600",
    "end": "353199"
  },
  {
    "text": "signals come from unique objects in your",
    "start": "353199",
    "end": "355280"
  },
  {
    "text": "environment",
    "start": "355280",
    "end": "356319"
  },
  {
    "text": "but being able to actually understand",
    "start": "356319",
    "end": "357759"
  },
  {
    "text": "what that is like what pod",
    "start": "357759",
    "end": "359520"
  },
  {
    "text": "maybe what container what cloud provider",
    "start": "359520",
    "end": "362560"
  },
  {
    "text": "these things run in that's where",
    "start": "362560",
    "end": "364639"
  },
  {
    "text": "resources come in",
    "start": "364639",
    "end": "365759"
  },
  {
    "text": "the idea is regardless of the signal you",
    "start": "365759",
    "end": "368639"
  },
  {
    "text": "have a normalized way of understanding",
    "start": "368639",
    "end": "370720"
  },
  {
    "text": "what that object is",
    "start": "370720",
    "end": "372240"
  },
  {
    "text": "and this also allows some efficiencies",
    "start": "372240",
    "end": "374000"
  },
  {
    "text": "from a wire transfer perspective because",
    "start": "374000",
    "end": "376479"
  },
  {
    "text": "you can batch based on resources",
    "start": "376479",
    "end": "379039"
  },
  {
    "text": "and then finally semantic conventions",
    "start": "379039",
    "end": "380880"
  },
  {
    "text": "which you can think of as like an open",
    "start": "380880",
    "end": "382479"
  },
  {
    "text": "standard way",
    "start": "382479",
    "end": "383360"
  },
  {
    "text": "of consistently defining metadata this",
    "start": "383360",
    "end": "385759"
  },
  {
    "text": "is where i can define like how a",
    "start": "385759",
    "end": "387600"
  },
  {
    "text": "database is represented or an http",
    "start": "387600",
    "end": "389759"
  },
  {
    "text": "outgoing request for example now",
    "start": "389759",
    "end": "394560"
  },
  {
    "text": "there is today a log data model that is",
    "start": "394560",
    "end": "397759"
  },
  {
    "text": "in the experimental stage within open",
    "start": "397759",
    "end": "399840"
  },
  {
    "text": "telemetry",
    "start": "399840",
    "end": "401199"
  },
  {
    "text": "that log data model defines a record",
    "start": "401199",
    "end": "404400"
  },
  {
    "text": "with several fields each of these fields",
    "start": "404400",
    "end": "407520"
  },
  {
    "text": "are optional",
    "start": "407520",
    "end": "409440"
  },
  {
    "text": "as you look at these fields some of them",
    "start": "409440",
    "end": "411440"
  },
  {
    "text": "may be pretty common to you like if",
    "start": "411440",
    "end": "413520"
  },
  {
    "text": "you're familiar with logging or syslog",
    "start": "413520",
    "end": "415520"
  },
  {
    "text": "for example things like a timestamp",
    "start": "415520",
    "end": "417280"
  },
  {
    "text": "pretty common severity is pretty well",
    "start": "417280",
    "end": "419520"
  },
  {
    "text": "known whether it's like an info",
    "start": "419520",
    "end": "421120"
  },
  {
    "text": "warning or error message and then body",
    "start": "421120",
    "end": "423680"
  },
  {
    "text": "sometimes it's referred to as message in",
    "start": "423680",
    "end": "425440"
  },
  {
    "text": "the case of syslog",
    "start": "425440",
    "end": "426800"
  },
  {
    "text": "these are pretty common fields that you",
    "start": "426800",
    "end": "428720"
  },
  {
    "text": "might see or",
    "start": "428720",
    "end": "430160"
  },
  {
    "text": "at least understand the concepts in open",
    "start": "430160",
    "end": "433280"
  },
  {
    "text": "telemetry we can reset",
    "start": "433280",
    "end": "434720"
  },
  {
    "text": "represent this in a structured json",
    "start": "434720",
    "end": "437440"
  },
  {
    "text": "payload",
    "start": "437440",
    "end": "438080"
  },
  {
    "text": "like the following in this example we",
    "start": "438080",
    "end": "440400"
  },
  {
    "text": "have a timestamp",
    "start": "440400",
    "end": "441440"
  },
  {
    "text": "and then a body of a message with nested",
    "start": "441440",
    "end": "443919"
  },
  {
    "text": "key value pairs",
    "start": "443919",
    "end": "445759"
  },
  {
    "text": "we could even extend this slightly by",
    "start": "445759",
    "end": "447599"
  },
  {
    "text": "adding severity information",
    "start": "447599",
    "end": "449680"
  },
  {
    "text": "again each of these fields are optional",
    "start": "449680",
    "end": "452000"
  },
  {
    "text": "so what you specify is up to the",
    "start": "452000",
    "end": "453919"
  },
  {
    "text": "implementation",
    "start": "453919",
    "end": "455039"
  },
  {
    "text": "that's generating this particular",
    "start": "455039",
    "end": "456560"
  },
  {
    "text": "message",
    "start": "456560",
    "end": "458960"
  },
  {
    "text": "beyond the standard fields that you may",
    "start": "459440",
    "end": "461520"
  },
  {
    "text": "recognize there are also some additional",
    "start": "461520",
    "end": "463440"
  },
  {
    "text": "fields many of which",
    "start": "463440",
    "end": "464720"
  },
  {
    "text": "are related to open symmetry in some way",
    "start": "464720",
    "end": "467919"
  },
  {
    "text": "for example you have resources and",
    "start": "467919",
    "end": "469599"
  },
  {
    "text": "attributes these are core concepts in",
    "start": "469599",
    "end": "472160"
  },
  {
    "text": "open telemetry",
    "start": "472160",
    "end": "473360"
  },
  {
    "text": "i already talked a little bit about",
    "start": "473360",
    "end": "474879"
  },
  {
    "text": "resources attributes are very similar",
    "start": "474879",
    "end": "477440"
  },
  {
    "text": "you can think of them also as key value",
    "start": "477440",
    "end": "479840"
  },
  {
    "text": "pairs",
    "start": "479840",
    "end": "480479"
  },
  {
    "text": "but instead of being applied generically",
    "start": "480479",
    "end": "483039"
  },
  {
    "text": "to an object that's the limit",
    "start": "483039",
    "end": "485199"
  },
  {
    "text": "that's generating the signal you would",
    "start": "485199",
    "end": "487680"
  },
  {
    "text": "instead add attributes to specific",
    "start": "487680",
    "end": "490000"
  },
  {
    "text": "signal events so each individual log",
    "start": "490000",
    "end": "492560"
  },
  {
    "text": "message for example could have different",
    "start": "492560",
    "end": "494240"
  },
  {
    "text": "attributes attached to it",
    "start": "494240",
    "end": "496879"
  },
  {
    "text": "beyond this there are trace context",
    "start": "496879",
    "end": "498879"
  },
  {
    "text": "fields that can also be specified",
    "start": "498879",
    "end": "500720"
  },
  {
    "text": "things like the trace id and the span id",
    "start": "500720",
    "end": "503280"
  },
  {
    "text": "now you may be wondering",
    "start": "503280",
    "end": "504560"
  },
  {
    "text": "why span information or trace",
    "start": "504560",
    "end": "506479"
  },
  {
    "text": "information would be added to logs",
    "start": "506479",
    "end": "508639"
  },
  {
    "text": "and this goes back to context the idea",
    "start": "508639",
    "end": "511440"
  },
  {
    "text": "here is that if i have distributed",
    "start": "511440",
    "end": "513200"
  },
  {
    "text": "tracing in my environment and i have",
    "start": "513200",
    "end": "514800"
  },
  {
    "text": "logging",
    "start": "514800",
    "end": "515440"
  },
  {
    "text": "i could technically go from a trace to",
    "start": "515440",
    "end": "517839"
  },
  {
    "text": "its associated logs",
    "start": "517839",
    "end": "519440"
  },
  {
    "text": "or from a log to its associated trace",
    "start": "519440",
    "end": "522320"
  },
  {
    "text": "all by this context",
    "start": "522320",
    "end": "525519"
  },
  {
    "text": "let's take a look at an example of this",
    "start": "525519",
    "end": "529040"
  },
  {
    "text": "in this example you can see that the",
    "start": "529040",
    "end": "530880"
  },
  {
    "text": "trace id and span id",
    "start": "530880",
    "end": "532480"
  },
  {
    "text": "has been injected into this structured",
    "start": "532480",
    "end": "535200"
  },
  {
    "text": "json payload",
    "start": "535200",
    "end": "536640"
  },
  {
    "text": "this is what allows me to do the core",
    "start": "536640",
    "end": "538560"
  },
  {
    "text": "context that i need in order to",
    "start": "538560",
    "end": "540959"
  },
  {
    "text": "go between signals",
    "start": "540959",
    "end": "544000"
  },
  {
    "text": "here's an example of a resource where we",
    "start": "544000",
    "end": "545760"
  },
  {
    "text": "have this service name",
    "start": "545760",
    "end": "547040"
  },
  {
    "text": "and version of a particular resource but",
    "start": "547040",
    "end": "550080"
  },
  {
    "text": "also the kubernetes pod uuid",
    "start": "550080",
    "end": "552959"
  },
  {
    "text": "this could have additional metadata as",
    "start": "552959",
    "end": "554959"
  },
  {
    "text": "well for example maybe the cloud",
    "start": "554959",
    "end": "556480"
  },
  {
    "text": "provider if this was deployed into a",
    "start": "556480",
    "end": "558399"
  },
  {
    "text": "public cloud",
    "start": "558399",
    "end": "560720"
  },
  {
    "text": "and then we have attributes the key",
    "start": "560720",
    "end": "562320"
  },
  {
    "text": "value pairs that are specific to",
    "start": "562320",
    "end": "564320"
  },
  {
    "text": "this particular signal message that is",
    "start": "564320",
    "end": "566320"
  },
  {
    "text": "being sent",
    "start": "566320",
    "end": "567440"
  },
  {
    "text": "here is where you could define things",
    "start": "567440",
    "end": "569279"
  },
  {
    "text": "like semantic conventions for example",
    "start": "569279",
    "end": "571279"
  },
  {
    "text": "you can see the http status code",
    "start": "571279",
    "end": "573760"
  },
  {
    "text": "key and a value of 500.",
    "start": "573760",
    "end": "577680"
  },
  {
    "text": "one final thing to note about this",
    "start": "577680",
    "end": "578959"
  },
  {
    "text": "payload is you may notice that it has a",
    "start": "578959",
    "end": "580880"
  },
  {
    "text": "timestamp and it has a severity field",
    "start": "580880",
    "end": "583440"
  },
  {
    "text": "but the body also contains the timestamp",
    "start": "583440",
    "end": "585920"
  },
  {
    "text": "and the severity",
    "start": "585920",
    "end": "587360"
  },
  {
    "text": "now this could be parsed out and added",
    "start": "587360",
    "end": "589360"
  },
  {
    "text": "as metadata",
    "start": "589360",
    "end": "590480"
  },
  {
    "text": "to the structure json payload or it",
    "start": "590480",
    "end": "592720"
  },
  {
    "text": "could be added",
    "start": "592720",
    "end": "593600"
  },
  {
    "text": "supplementally being passed from one",
    "start": "593600",
    "end": "595680"
  },
  {
    "text": "collector to another",
    "start": "595680",
    "end": "597360"
  },
  {
    "text": "so there's no requirement that this data",
    "start": "597360",
    "end": "599680"
  },
  {
    "text": "actually match what's in the body",
    "start": "599680",
    "end": "601519"
  },
  {
    "text": "you don't even have to parse that data",
    "start": "601519",
    "end": "603200"
  },
  {
    "text": "if you do not want to",
    "start": "603200",
    "end": "606079"
  },
  {
    "start": "606000",
    "end": "606000"
  },
  {
    "text": "now this log data model is very flexible",
    "start": "607680",
    "end": "611440"
  },
  {
    "text": "it supports many fields that can be",
    "start": "611440",
    "end": "615040"
  },
  {
    "text": "defined but none of them are required",
    "start": "615040",
    "end": "618000"
  },
  {
    "text": "why",
    "start": "618000",
    "end": "618720"
  },
  {
    "text": "the primary reason is because open",
    "start": "618720",
    "end": "620800"
  },
  {
    "text": "telemetry is an open source and vendor",
    "start": "620800",
    "end": "622800"
  },
  {
    "text": "agnostic solution",
    "start": "622800",
    "end": "624399"
  },
  {
    "text": "as a result it needs to have the ability",
    "start": "624399",
    "end": "626560"
  },
  {
    "text": "to convert from",
    "start": "626560",
    "end": "628079"
  },
  {
    "text": "and to different formats with the log",
    "start": "628079",
    "end": "631200"
  },
  {
    "text": "data model and its",
    "start": "631200",
    "end": "632240"
  },
  {
    "text": "current incarnation it supports a",
    "start": "632240",
    "end": "634399"
  },
  {
    "text": "variety of different open standards as",
    "start": "634399",
    "end": "636480"
  },
  {
    "text": "well as vendor standards",
    "start": "636480",
    "end": "638399"
  },
  {
    "text": "for example you may be familiar with the",
    "start": "638399",
    "end": "640240"
  },
  {
    "text": "apache http",
    "start": "640240",
    "end": "641519"
  },
  {
    "text": "server log model or the elastic common",
    "start": "641519",
    "end": "644160"
  },
  {
    "text": "schema",
    "start": "644160",
    "end": "645279"
  },
  {
    "text": "in the case of vendors you may be",
    "start": "645279",
    "end": "646720"
  },
  {
    "text": "familiar with amazon cloudtrail",
    "start": "646720",
    "end": "648560"
  },
  {
    "text": "or windows event viewer all of these",
    "start": "648560",
    "end": "651360"
  },
  {
    "text": "different formats could be supported",
    "start": "651360",
    "end": "653600"
  },
  {
    "text": "by the open telemetry log data model",
    "start": "653600",
    "end": "657519"
  },
  {
    "text": "so in summary an open telemetry log",
    "start": "657519",
    "end": "660240"
  },
  {
    "text": "record",
    "start": "660240",
    "end": "661040"
  },
  {
    "text": "is what you might refer to as a log or",
    "start": "661040",
    "end": "663519"
  },
  {
    "text": "an event",
    "start": "663519",
    "end": "664640"
  },
  {
    "text": "an important thing to note here is that",
    "start": "664640",
    "end": "666160"
  },
  {
    "text": "open symmetry does not actually",
    "start": "666160",
    "end": "667519"
  },
  {
    "text": "distinguish between",
    "start": "667519",
    "end": "668640"
  },
  {
    "text": "logs and events today though it could in",
    "start": "668640",
    "end": "670880"
  },
  {
    "text": "the future",
    "start": "670880",
    "end": "672079"
  },
  {
    "text": "now this log record is really just a",
    "start": "672079",
    "end": "674079"
  },
  {
    "text": "structured json payload",
    "start": "674079",
    "end": "676480"
  },
  {
    "text": "its definition is made up of one of more",
    "start": "676480",
    "end": "678320"
  },
  {
    "text": "fields all of which are optional",
    "start": "678320",
    "end": "680399"
  },
  {
    "text": "and context is supported not just for",
    "start": "680399",
    "end": "682399"
  },
  {
    "text": "open telemetry but for other popular",
    "start": "682399",
    "end": "684399"
  },
  {
    "text": "open standards including w3c trace",
    "start": "684399",
    "end": "686839"
  },
  {
    "text": "context",
    "start": "686839",
    "end": "688000"
  },
  {
    "text": "there is a notion of error semantics",
    "start": "688000",
    "end": "690079"
  },
  {
    "text": "that are that's provided so you can",
    "start": "690079",
    "end": "692000"
  },
  {
    "text": "denote errors within",
    "start": "692000",
    "end": "693279"
  },
  {
    "text": "your structured log messages and you can",
    "start": "693279",
    "end": "695920"
  },
  {
    "text": "convert",
    "start": "695920",
    "end": "696480"
  },
  {
    "text": "from and to a variety of popular formats",
    "start": "696480",
    "end": "700079"
  },
  {
    "text": "now this log message that's being",
    "start": "700079",
    "end": "702800"
  },
  {
    "text": "generated log record",
    "start": "702800",
    "end": "704240"
  },
  {
    "text": "uh can be actually be embedded in spans",
    "start": "704240",
    "end": "706399"
  },
  {
    "text": "for example there's a notion of span",
    "start": "706399",
    "end": "708000"
  },
  {
    "text": "events for which",
    "start": "708000",
    "end": "709120"
  },
  {
    "text": "the log record could actually be",
    "start": "709120",
    "end": "710800"
  },
  {
    "text": "attached or it could be standalone which",
    "start": "710800",
    "end": "713040"
  },
  {
    "text": "is a little bit more traditional",
    "start": "713040",
    "end": "714480"
  },
  {
    "text": "especially in non-tracing environments",
    "start": "714480",
    "end": "718240"
  },
  {
    "text": "the key thing to note is that logging is",
    "start": "718240",
    "end": "720720"
  },
  {
    "text": "still experimental in open telemetry",
    "start": "720720",
    "end": "722959"
  },
  {
    "text": "so changes to the data model could",
    "start": "722959",
    "end": "724800"
  },
  {
    "text": "happen in the future",
    "start": "724800",
    "end": "727760"
  },
  {
    "start": "728000",
    "end": "728000"
  },
  {
    "text": "next let's talk a little bit about",
    "start": "728399",
    "end": "729760"
  },
  {
    "text": "instrumentation libraries",
    "start": "729760",
    "end": "731440"
  },
  {
    "text": "as i mentioned this is a language",
    "start": "731440",
    "end": "733040"
  },
  {
    "text": "agnostic way to instrument your",
    "start": "733040",
    "end": "735200"
  },
  {
    "text": "application so there's an",
    "start": "735200",
    "end": "736399"
  },
  {
    "text": "instrumentation library per language",
    "start": "736399",
    "end": "738320"
  },
  {
    "text": "provided",
    "start": "738320",
    "end": "739600"
  },
  {
    "text": "within that instrumentation library",
    "start": "739600",
    "end": "741279"
  },
  {
    "text": "there's an api that is used to actually",
    "start": "741279",
    "end": "743600"
  },
  {
    "text": "generate",
    "start": "743600",
    "end": "744160"
  },
  {
    "text": "the telemetry data that you care about",
    "start": "744160",
    "end": "746399"
  },
  {
    "text": "an sdk that is used to process and",
    "start": "746399",
    "end": "748240"
  },
  {
    "text": "export that data",
    "start": "748240",
    "end": "749680"
  },
  {
    "text": "and then all the other core",
    "start": "749680",
    "end": "751200"
  },
  {
    "text": "specification concepts that i discussed",
    "start": "751200",
    "end": "753279"
  },
  {
    "text": "earlier",
    "start": "753279",
    "end": "753839"
  },
  {
    "text": "including resources semantic conventions",
    "start": "753839",
    "end": "756000"
  },
  {
    "text": "and the like",
    "start": "756000",
    "end": "756880"
  },
  {
    "text": "are all also supported in the",
    "start": "756880",
    "end": "758560"
  },
  {
    "text": "instrumentation libraries",
    "start": "758560",
    "end": "760800"
  },
  {
    "text": "so how does logging play in",
    "start": "760800",
    "end": "764160"
  },
  {
    "text": "logging is still quite early when it",
    "start": "764160",
    "end": "765680"
  },
  {
    "text": "comes to instrumentation libraries",
    "start": "765680",
    "end": "767600"
  },
  {
    "text": "in open telemetry but there's some",
    "start": "767600",
    "end": "769519"
  },
  {
    "text": "amount of reference architecture",
    "start": "769519",
    "end": "771120"
  },
  {
    "text": "or reference implementation provided",
    "start": "771120",
    "end": "773040"
  },
  {
    "text": "with java today",
    "start": "773040",
    "end": "774800"
  },
  {
    "text": "first you can take a look at how you",
    "start": "774800",
    "end": "776880"
  },
  {
    "text": "could potentially",
    "start": "776880",
    "end": "777920"
  },
  {
    "text": "manually instrument your app for logging",
    "start": "777920",
    "end": "780880"
  },
  {
    "text": "using the sdk",
    "start": "780880",
    "end": "782079"
  },
  {
    "text": "extension provided in the open telemetry",
    "start": "782079",
    "end": "784240"
  },
  {
    "text": "java project",
    "start": "784240",
    "end": "786160"
  },
  {
    "text": "if you're looking for automatic",
    "start": "786160",
    "end": "787600"
  },
  {
    "text": "instrumentation then",
    "start": "787600",
    "end": "789200"
  },
  {
    "text": "the java instrumentation repository",
    "start": "789200",
    "end": "791760"
  },
  {
    "text": "offers a logger",
    "start": "791760",
    "end": "792959"
  },
  {
    "text": "mdc that logger mdc offers the ability",
    "start": "792959",
    "end": "796480"
  },
  {
    "text": "of entering",
    "start": "796480",
    "end": "797279"
  },
  {
    "text": "in things like the trace id span id and",
    "start": "797279",
    "end": "800000"
  },
  {
    "text": "trace flags",
    "start": "800000",
    "end": "801200"
  },
  {
    "text": "you may remember these were fields that",
    "start": "801200",
    "end": "803600"
  },
  {
    "text": "were part of the trace context defined",
    "start": "803600",
    "end": "805760"
  },
  {
    "text": "in the log data model so from an",
    "start": "805760",
    "end": "808959"
  },
  {
    "text": "automatic perspective you can get some",
    "start": "808959",
    "end": "810720"
  },
  {
    "text": "pretty good visibility",
    "start": "810720",
    "end": "812000"
  },
  {
    "text": "in context to go between traces and logs",
    "start": "812000",
    "end": "814959"
  },
  {
    "text": "today",
    "start": "814959",
    "end": "815920"
  },
  {
    "text": "but it's still early when it comes to",
    "start": "815920",
    "end": "817440"
  },
  {
    "text": "manual instrumentation",
    "start": "817440",
    "end": "820720"
  },
  {
    "text": "java is one example of where automatic",
    "start": "821519",
    "end": "824160"
  },
  {
    "text": "trace injection happens into logs",
    "start": "824160",
    "end": "826639"
  },
  {
    "text": "python also has an implementation of",
    "start": "826639",
    "end": "828720"
  },
  {
    "text": "this and you're going to see",
    "start": "828720",
    "end": "829920"
  },
  {
    "text": "other languages adopting it and as well",
    "start": "829920",
    "end": "833440"
  },
  {
    "text": "it's still being considered whether or",
    "start": "833440",
    "end": "835440"
  },
  {
    "text": "not manual log instrumentation and",
    "start": "835440",
    "end": "837519"
  },
  {
    "text": "instrumentation libraries for logs will",
    "start": "837519",
    "end": "839360"
  },
  {
    "text": "be provided in open telemetry",
    "start": "839360",
    "end": "841760"
  },
  {
    "text": "but first a stable data model needs to",
    "start": "841760",
    "end": "844480"
  },
  {
    "text": "be",
    "start": "844480",
    "end": "844880"
  },
  {
    "text": "agreed upon because the instrumentation",
    "start": "844880",
    "end": "847839"
  },
  {
    "text": "libraries need to depend on that data",
    "start": "847839",
    "end": "850160"
  },
  {
    "text": "model",
    "start": "850160",
    "end": "851040"
  },
  {
    "text": "and until the data model is actually",
    "start": "851040",
    "end": "852800"
  },
  {
    "text": "stable taking a dependency at least on",
    "start": "852800",
    "end": "854800"
  },
  {
    "text": "the manual log instrumentation",
    "start": "854800",
    "end": "856880"
  },
  {
    "text": "is not advised at this time though using",
    "start": "856880",
    "end": "859839"
  },
  {
    "text": "automatic trace ingestion",
    "start": "859839",
    "end": "861440"
  },
  {
    "text": "injection is perfectly fine because",
    "start": "861440",
    "end": "863199"
  },
  {
    "text": "changing those conventions is pretty",
    "start": "863199",
    "end": "864959"
  },
  {
    "text": "easy going forward",
    "start": "864959",
    "end": "866720"
  },
  {
    "text": "now you might be wondering why logs are",
    "start": "866720",
    "end": "868720"
  },
  {
    "text": "not ready in open symmetry yet",
    "start": "868720",
    "end": "870880"
  },
  {
    "text": "you might recall earlier that there are",
    "start": "870880",
    "end": "873760"
  },
  {
    "text": "different",
    "start": "873760",
    "end": "874320"
  },
  {
    "text": "signals traces metrics and logs to date",
    "start": "874320",
    "end": "877279"
  },
  {
    "text": "traces and metrics have been the primary",
    "start": "877279",
    "end": "879120"
  },
  {
    "text": "focus",
    "start": "879120",
    "end": "879680"
  },
  {
    "text": "but logs is quickly starting to pick up",
    "start": "879680",
    "end": "882079"
  },
  {
    "text": "momentum in the open telemetry project",
    "start": "882079",
    "end": "884000"
  },
  {
    "text": "especially with the announcement of the",
    "start": "884000",
    "end": "885839"
  },
  {
    "text": "stable release for traces",
    "start": "885839",
    "end": "888000"
  },
  {
    "text": "of course prs are welcome so if you're",
    "start": "888000",
    "end": "889920"
  },
  {
    "text": "interested in getting involved",
    "start": "889920",
    "end": "892000"
  },
  {
    "text": "please do",
    "start": "892000",
    "end": "894560"
  },
  {
    "text": "now let's talk about the collector the",
    "start": "895279",
    "end": "897040"
  },
  {
    "text": "collector is a component that's",
    "start": "897040",
    "end": "898639"
  },
  {
    "text": "configured",
    "start": "898639",
    "end": "900399"
  },
  {
    "text": "via pipelines each of these pipelines is",
    "start": "900399",
    "end": "903040"
  },
  {
    "text": "made up of one or more receivers",
    "start": "903040",
    "end": "905120"
  },
  {
    "text": "a way to get data into the collector",
    "start": "905120",
    "end": "907519"
  },
  {
    "text": "these can be push or pull-based",
    "start": "907519",
    "end": "909440"
  },
  {
    "text": "processors what you want to do with the",
    "start": "909440",
    "end": "911199"
  },
  {
    "text": "data as it's passing through the",
    "start": "911199",
    "end": "913279"
  },
  {
    "text": "collector",
    "start": "913279",
    "end": "914079"
  },
  {
    "text": "and then exporters again these can be",
    "start": "914079",
    "end": "916079"
  },
  {
    "text": "push or pull base in order to send the",
    "start": "916079",
    "end": "918000"
  },
  {
    "text": "data to the destination or destinations",
    "start": "918000",
    "end": "919920"
  },
  {
    "text": "of your choice",
    "start": "919920",
    "end": "921440"
  },
  {
    "text": "the collector offers a few key features",
    "start": "921440",
    "end": "923839"
  },
  {
    "text": "one of the biggest is that it can",
    "start": "923839",
    "end": "925120"
  },
  {
    "text": "actually",
    "start": "925120",
    "end": "925600"
  },
  {
    "text": "translate from one format like the",
    "start": "925600",
    "end": "927440"
  },
  {
    "text": "format it receives into",
    "start": "927440",
    "end": "929279"
  },
  {
    "text": "into a different format the format that",
    "start": "929279",
    "end": "930880"
  },
  {
    "text": "it exports out of",
    "start": "930880",
    "end": "932720"
  },
  {
    "text": "this is powerful because it provides a",
    "start": "932720",
    "end": "934639"
  },
  {
    "text": "vendor agnostic solution",
    "start": "934639",
    "end": "937360"
  },
  {
    "text": "the collector can also do things like",
    "start": "937360",
    "end": "939279"
  },
  {
    "text": "crud operations",
    "start": "939279",
    "end": "940480"
  },
  {
    "text": "on metadata this is powerful for things",
    "start": "940480",
    "end": "943600"
  },
  {
    "text": "like pii reduction",
    "start": "943600",
    "end": "945120"
  },
  {
    "text": "or maybe even enhancing the telemetry",
    "start": "945120",
    "end": "947680"
  },
  {
    "text": "data that is passing through the",
    "start": "947680",
    "end": "948880"
  },
  {
    "text": "collector",
    "start": "948880",
    "end": "950079"
  },
  {
    "text": "and again the core concepts like you saw",
    "start": "950079",
    "end": "952000"
  },
  {
    "text": "in the specification like resources",
    "start": "952000",
    "end": "953839"
  },
  {
    "text": "are natively supported in the collector",
    "start": "953839",
    "end": "957680"
  },
  {
    "text": "at a very high level here's a reference",
    "start": "957680",
    "end": "959759"
  },
  {
    "text": "architecture of how",
    "start": "959759",
    "end": "961120"
  },
  {
    "text": "open telemetry could be deployed it's",
    "start": "961120",
    "end": "963600"
  },
  {
    "text": "pretty common to deploy",
    "start": "963600",
    "end": "964959"
  },
  {
    "text": "at least the open telemetry collector",
    "start": "964959",
    "end": "967120"
  },
  {
    "text": "running as an agent on each of the hosts",
    "start": "967120",
    "end": "968959"
  },
  {
    "text": "within an environment",
    "start": "968959",
    "end": "970399"
  },
  {
    "text": "and then the open telemetry",
    "start": "970399",
    "end": "971759"
  },
  {
    "text": "instrumentation library these are",
    "start": "971759",
    "end": "973519"
  },
  {
    "text": "language specific",
    "start": "973519",
    "end": "974959"
  },
  {
    "text": "on the associate applications in this",
    "start": "974959",
    "end": "977920"
  },
  {
    "text": "configuration",
    "start": "977920",
    "end": "978959"
  },
  {
    "text": "the instrumentation library out of the",
    "start": "978959",
    "end": "980480"
  },
  {
    "text": "box is configured to send data to the",
    "start": "980480",
    "end": "982399"
  },
  {
    "text": "open telemetry collector running as an",
    "start": "982399",
    "end": "984000"
  },
  {
    "text": "agent",
    "start": "984000",
    "end": "984639"
  },
  {
    "text": "and that agent can be configured via",
    "start": "984639",
    "end": "986560"
  },
  {
    "text": "yaml to send data to the backend or back",
    "start": "986560",
    "end": "988720"
  },
  {
    "text": "ends of your choice",
    "start": "988720",
    "end": "990399"
  },
  {
    "text": "you could also deploy the open symmetry",
    "start": "990399",
    "end": "992240"
  },
  {
    "text": "collector as a standalone service or",
    "start": "992240",
    "end": "994160"
  },
  {
    "text": "gateway as well",
    "start": "994160",
    "end": "995440"
  },
  {
    "text": "depending on the use cases of your",
    "start": "995440",
    "end": "997360"
  },
  {
    "text": "environment",
    "start": "997360",
    "end": "998639"
  },
  {
    "text": "one of the things open symmetry tries to",
    "start": "998639",
    "end": "1001120"
  },
  {
    "text": "do is to provide an end-to-end reference",
    "start": "1001120",
    "end": "1003120"
  },
  {
    "text": "implementation",
    "start": "1003120",
    "end": "1004160"
  },
  {
    "text": "and flexibility and choice at every",
    "start": "1004160",
    "end": "1006160"
  },
  {
    "text": "stage",
    "start": "1006160",
    "end": "1007199"
  },
  {
    "text": "if you want to have your instrumentation",
    "start": "1007199",
    "end": "1008880"
  },
  {
    "text": "sending directly to the back end and",
    "start": "1008880",
    "end": "1010240"
  },
  {
    "text": "bypass the collector you could",
    "start": "1010240",
    "end": "1012160"
  },
  {
    "text": "if you wanted to deploy the collector",
    "start": "1012160",
    "end": "1013600"
  },
  {
    "text": "and use a different instrumentation",
    "start": "1013600",
    "end": "1015360"
  },
  {
    "text": "library",
    "start": "1015360",
    "end": "1016000"
  },
  {
    "text": "like jaeger or zipkin you could again",
    "start": "1016000",
    "end": "1018639"
  },
  {
    "text": "these choices make it very easy to plug",
    "start": "1018639",
    "end": "1020880"
  },
  {
    "text": "and play regardless of the environment",
    "start": "1020880",
    "end": "1022880"
  },
  {
    "text": "that open",
    "start": "1022880",
    "end": "1023600"
  },
  {
    "text": "telemetry is deployed in",
    "start": "1023600",
    "end": "1026880"
  },
  {
    "text": "if we drill a little bit into the",
    "start": "1027520",
    "end": "1029120"
  },
  {
    "text": "architecture of the open symmetry",
    "start": "1029120",
    "end": "1030480"
  },
  {
    "text": "collector itself",
    "start": "1030480",
    "end": "1031520"
  },
  {
    "text": "you might remember the concepts of",
    "start": "1031520",
    "end": "1033120"
  },
  {
    "text": "receivers processors and exporters",
    "start": "1033120",
    "end": "1035600"
  },
  {
    "text": "those are pretty foundational to the",
    "start": "1035600",
    "end": "1037120"
  },
  {
    "text": "open telemetry collector",
    "start": "1037120",
    "end": "1038798"
  },
  {
    "text": "now you actually stitch these different",
    "start": "1038799",
    "end": "1040720"
  },
  {
    "text": "components together",
    "start": "1040720",
    "end": "1041918"
  },
  {
    "text": "through what are called pipelines here",
    "start": "1041919",
    "end": "1044160"
  },
  {
    "text": "they're represented in different colors",
    "start": "1044160",
    "end": "1046000"
  },
  {
    "text": "for example you can see an orange",
    "start": "1046000",
    "end": "1047918"
  },
  {
    "text": "pipeline defined",
    "start": "1047919",
    "end": "1049120"
  },
  {
    "text": "where otop otop is actually the protocol",
    "start": "1049120",
    "end": "1052320"
  },
  {
    "text": "that open telemetry supports out of the",
    "start": "1052320",
    "end": "1054160"
  },
  {
    "text": "box",
    "start": "1054160",
    "end": "1055120"
  },
  {
    "text": "so open symmetry is being received in so",
    "start": "1055120",
    "end": "1057200"
  },
  {
    "text": "maybe this is coming in from an",
    "start": "1057200",
    "end": "1058480"
  },
  {
    "text": "instrumentation library for example",
    "start": "1058480",
    "end": "1060559"
  },
  {
    "text": "it's going through a batch processor an",
    "start": "1060559",
    "end": "1062400"
  },
  {
    "text": "attributes processor and it's being",
    "start": "1062400",
    "end": "1064000"
  },
  {
    "text": "exported in jager",
    "start": "1064000",
    "end": "1065679"
  },
  {
    "text": "as you may remember the collector can",
    "start": "1065679",
    "end": "1067600"
  },
  {
    "text": "receive in one format but export in",
    "start": "1067600",
    "end": "1069679"
  },
  {
    "text": "another making it a vendor agnostic",
    "start": "1069679",
    "end": "1071440"
  },
  {
    "text": "solution",
    "start": "1071440",
    "end": "1072720"
  },
  {
    "text": "the green line represents a second",
    "start": "1072720",
    "end": "1074400"
  },
  {
    "text": "pipeline here again otop",
    "start": "1074400",
    "end": "1076160"
  },
  {
    "text": "data is being received this time it's",
    "start": "1076160",
    "end": "1077760"
  },
  {
    "text": "going through a batch and a filter",
    "start": "1077760",
    "end": "1079280"
  },
  {
    "text": "processor",
    "start": "1079280",
    "end": "1080160"
  },
  {
    "text": "and it's exporting to two different",
    "start": "1080160",
    "end": "1081919"
  },
  {
    "text": "destinations otlp",
    "start": "1081919",
    "end": "1083679"
  },
  {
    "text": "and prometheus and parallel this also",
    "start": "1083679",
    "end": "1086480"
  },
  {
    "text": "provides flexibility in choice depending",
    "start": "1086480",
    "end": "1088480"
  },
  {
    "text": "on your requirements",
    "start": "1088480",
    "end": "1091360"
  },
  {
    "start": "1091000",
    "end": "1091000"
  },
  {
    "text": "as we look at log collection in open",
    "start": "1092160",
    "end": "1094559"
  },
  {
    "text": "telemetry this is probably the most",
    "start": "1094559",
    "end": "1096240"
  },
  {
    "text": "mature",
    "start": "1096240",
    "end": "1096960"
  },
  {
    "text": "aspect today the open telemetry",
    "start": "1096960",
    "end": "1099280"
  },
  {
    "text": "collector supports a variety of",
    "start": "1099280",
    "end": "1100960"
  },
  {
    "text": "different components that are logging",
    "start": "1100960",
    "end": "1102480"
  },
  {
    "text": "specific",
    "start": "1102480",
    "end": "1103600"
  },
  {
    "text": "for example from a receiving perspective",
    "start": "1103600",
    "end": "1105760"
  },
  {
    "text": "there is a file log receiver which",
    "start": "1105760",
    "end": "1108000"
  },
  {
    "text": "supports tail logging so for example you",
    "start": "1108000",
    "end": "1110799"
  },
  {
    "text": "can point it at a log file and it's able",
    "start": "1110799",
    "end": "1112880"
  },
  {
    "text": "to pick up changes that are written to",
    "start": "1112880",
    "end": "1114720"
  },
  {
    "text": "that log file",
    "start": "1114720",
    "end": "1116559"
  },
  {
    "text": "in addition the collector offers native",
    "start": "1116559",
    "end": "1118640"
  },
  {
    "text": "support for fluent forward",
    "start": "1118640",
    "end": "1120320"
  },
  {
    "text": "thus fluent d and fluent bit agents",
    "start": "1120320",
    "end": "1123520"
  },
  {
    "text": "can send data to the collector and the",
    "start": "1123520",
    "end": "1125760"
  },
  {
    "text": "collector can process and export that",
    "start": "1125760",
    "end": "1127679"
  },
  {
    "text": "data out",
    "start": "1127679",
    "end": "1129520"
  },
  {
    "text": "from a processing perspective you have",
    "start": "1129520",
    "end": "1131280"
  },
  {
    "text": "the ability of",
    "start": "1131280",
    "end": "1132720"
  },
  {
    "text": "you doing crud operations on attributes",
    "start": "1132720",
    "end": "1135679"
  },
  {
    "text": "batching the data",
    "start": "1135679",
    "end": "1136799"
  },
  {
    "text": "and supporting resources all key",
    "start": "1136799",
    "end": "1139039"
  },
  {
    "text": "concepts of the specification",
    "start": "1139039",
    "end": "1141360"
  },
  {
    "text": "and a variety of different exporters",
    "start": "1141360",
    "end": "1143360"
  },
  {
    "text": "some open source",
    "start": "1143360",
    "end": "1144480"
  },
  {
    "text": "and some vendor specific are available",
    "start": "1144480",
    "end": "1146559"
  },
  {
    "text": "today and more will be added in the",
    "start": "1146559",
    "end": "1148840"
  },
  {
    "text": "future",
    "start": "1148840",
    "end": "1151520"
  },
  {
    "text": "i would be remiss if i didn't point out",
    "start": "1151520",
    "end": "1153200"
  },
  {
    "text": "that recently there was a donation by",
    "start": "1153200",
    "end": "1155360"
  },
  {
    "text": "observe iq",
    "start": "1155360",
    "end": "1156400"
  },
  {
    "text": "of the stanza logging agent to open",
    "start": "1156400",
    "end": "1159200"
  },
  {
    "text": "telemetry",
    "start": "1159200",
    "end": "1159919"
  },
  {
    "text": "you can read more about it on the github",
    "start": "1159919",
    "end": "1162080"
  },
  {
    "text": "issue linked above",
    "start": "1162080",
    "end": "1164000"
  },
  {
    "text": "now stanza is being fully integrated",
    "start": "1164000",
    "end": "1166240"
  },
  {
    "text": "into the open symmetry collector",
    "start": "1166240",
    "end": "1168240"
  },
  {
    "text": "and things like the file log receiver",
    "start": "1168240",
    "end": "1170400"
  },
  {
    "text": "which support tailing capabilities",
    "start": "1170400",
    "end": "1172720"
  },
  {
    "text": "that was part of stanza but it's one of",
    "start": "1172720",
    "end": "1175440"
  },
  {
    "text": "many parts of stanza",
    "start": "1175440",
    "end": "1177039"
  },
  {
    "text": "for example there's journal d syslog tcp",
    "start": "1177039",
    "end": "1179840"
  },
  {
    "text": "udp windows event log support filtering",
    "start": "1179840",
    "end": "1182400"
  },
  {
    "text": "parsing and more",
    "start": "1182400",
    "end": "1183760"
  },
  {
    "text": "all of these capabilities are natively",
    "start": "1183760",
    "end": "1185760"
  },
  {
    "text": "being added to the open telemetry",
    "start": "1185760",
    "end": "1187440"
  },
  {
    "text": "collector",
    "start": "1187440",
    "end": "1188320"
  },
  {
    "text": "so it'll have more logging support in",
    "start": "1188320",
    "end": "1190480"
  },
  {
    "text": "the future",
    "start": "1190480",
    "end": "1191600"
  },
  {
    "text": "in addition there are a variety of",
    "start": "1191600",
    "end": "1192960"
  },
  {
    "text": "additional destinations which will be",
    "start": "1192960",
    "end": "1194559"
  },
  {
    "text": "supporting logs in the future",
    "start": "1194559",
    "end": "1198159"
  },
  {
    "text": "with that i'd like to turn over to a",
    "start": "1198960",
    "end": "1200799"
  },
  {
    "text": "quick demo to show you how you could get",
    "start": "1200799",
    "end": "1202720"
  },
  {
    "text": "started at least with the collection",
    "start": "1202720",
    "end": "1204559"
  },
  {
    "text": "aspect in open telemetry",
    "start": "1204559",
    "end": "1207760"
  },
  {
    "text": "at a high level what we'll have is an",
    "start": "1207760",
    "end": "1209600"
  },
  {
    "text": "open telemetry collector that is",
    "start": "1209600",
    "end": "1211280"
  },
  {
    "text": "configured to receive",
    "start": "1211280",
    "end": "1212799"
  },
  {
    "text": "fluent forward data i will deploy fluent",
    "start": "1212799",
    "end": "1216240"
  },
  {
    "text": "bit",
    "start": "1216240",
    "end": "1216640"
  },
  {
    "text": "which will be configured to collect",
    "start": "1216640",
    "end": "1219120"
  },
  {
    "text": "docker events",
    "start": "1219120",
    "end": "1220080"
  },
  {
    "text": "and send it to the open telemetry",
    "start": "1220080",
    "end": "1221440"
  },
  {
    "text": "collector and i'll have the open",
    "start": "1221440",
    "end": "1223440"
  },
  {
    "text": "telemetry collector",
    "start": "1223440",
    "end": "1225120"
  },
  {
    "text": "send that data to two different",
    "start": "1225120",
    "end": "1226559"
  },
  {
    "text": "destinations one being a logging backend",
    "start": "1226559",
    "end": "1229280"
  },
  {
    "text": "and the other one being to standard out",
    "start": "1229280",
    "end": "1231760"
  },
  {
    "text": "the collector will also be configured to",
    "start": "1231760",
    "end": "1234080"
  },
  {
    "text": "add attribute and resource information",
    "start": "1234080",
    "end": "1236320"
  },
  {
    "text": "basically enriching the fluent",
    "start": "1236320",
    "end": "1238480"
  },
  {
    "text": "bit docker events that are being passed",
    "start": "1238480",
    "end": "1240559"
  },
  {
    "text": "through the open telemetry collector",
    "start": "1240559",
    "end": "1243200"
  },
  {
    "text": "let's go ahead and try this out",
    "start": "1243200",
    "end": "1246720"
  },
  {
    "text": "so first i will start a docker container",
    "start": "1246720",
    "end": "1250640"
  },
  {
    "text": "that is running fluent bit",
    "start": "1250640",
    "end": "1252400"
  },
  {
    "text": "so this is just stock fluent bits the",
    "start": "1252400",
    "end": "1254400"
  },
  {
    "text": "one of the latest versions",
    "start": "1254400",
    "end": "1256000"
  },
  {
    "text": "it's configured with an input of the",
    "start": "1256000",
    "end": "1258080"
  },
  {
    "text": "docker events",
    "start": "1258080",
    "end": "1259440"
  },
  {
    "text": "input module and for an output",
    "start": "1259440",
    "end": "1261520"
  },
  {
    "text": "perspective it will send data to",
    "start": "1261520",
    "end": "1264080"
  },
  {
    "text": "a port 8006 on a different docker",
    "start": "1264080",
    "end": "1267440"
  },
  {
    "text": "container",
    "start": "1267440",
    "end": "1268640"
  },
  {
    "text": "so we'll go ahead and start that",
    "start": "1268640",
    "end": "1270559"
  },
  {
    "text": "container",
    "start": "1270559",
    "end": "1271840"
  },
  {
    "text": "now i haven't actually started the open",
    "start": "1271840",
    "end": "1273760"
  },
  {
    "text": "symmetry collector yet so as this starts",
    "start": "1273760",
    "end": "1276159"
  },
  {
    "text": "analyzing data it will not be able to",
    "start": "1276159",
    "end": "1277919"
  },
  {
    "text": "send the data and it will start throwing",
    "start": "1277919",
    "end": "1279760"
  },
  {
    "text": "errors",
    "start": "1279760",
    "end": "1281280"
  },
  {
    "text": "while that gets fired up on the other",
    "start": "1281280",
    "end": "1283520"
  },
  {
    "text": "end here i have an open telemetry",
    "start": "1283520",
    "end": "1285760"
  },
  {
    "text": "collector",
    "start": "1285760",
    "end": "1286480"
  },
  {
    "text": "yaml file so in this yml file we will",
    "start": "1286480",
    "end": "1289919"
  },
  {
    "text": "enable the",
    "start": "1289919",
    "end": "1290799"
  },
  {
    "text": "fluent forward receiver so that's the",
    "start": "1290799",
    "end": "1292960"
  },
  {
    "text": "port 8006",
    "start": "1292960",
    "end": "1294400"
  },
  {
    "text": "that you saw with fluent bit so we'll be",
    "start": "1294400",
    "end": "1297360"
  },
  {
    "text": "receiving that data in natively",
    "start": "1297360",
    "end": "1299679"
  },
  {
    "text": "we'll go ahead and configure an",
    "start": "1299679",
    "end": "1300880"
  },
  {
    "text": "attributes processor so we're just going",
    "start": "1300880",
    "end": "1302640"
  },
  {
    "text": "to insert",
    "start": "1302640",
    "end": "1303440"
  },
  {
    "text": "a single key value pair here that key is",
    "start": "1303440",
    "end": "1306080"
  },
  {
    "text": "called foo",
    "start": "1306080",
    "end": "1306960"
  },
  {
    "text": "with a value of bar we will also",
    "start": "1306960",
    "end": "1309520"
  },
  {
    "text": "configure",
    "start": "1309520",
    "end": "1310240"
  },
  {
    "text": "resource detection so we can add a",
    "start": "1310240",
    "end": "1312720"
  },
  {
    "text": "system information",
    "start": "1312720",
    "end": "1314000"
  },
  {
    "text": "to the data that's passing through and",
    "start": "1314000",
    "end": "1317039"
  },
  {
    "text": "we're going to send that data out",
    "start": "1317039",
    "end": "1318640"
  },
  {
    "text": "to logging locally as well as a splunk",
    "start": "1318640",
    "end": "1322400"
  },
  {
    "text": "heck exporter",
    "start": "1322400",
    "end": "1323840"
  },
  {
    "text": "i was hoping to show off elasticsearch",
    "start": "1323840",
    "end": "1326159"
  },
  {
    "text": "but unfortunately that exporter does not",
    "start": "1326159",
    "end": "1328720"
  },
  {
    "text": "fully support logs yet it'll be added",
    "start": "1328720",
    "end": "1331360"
  },
  {
    "text": "here soon",
    "start": "1331360",
    "end": "1332000"
  },
  {
    "text": "and then it'll be easy enough to demo",
    "start": "1332000",
    "end": "1333840"
  },
  {
    "text": "here uh",
    "start": "1333840",
    "end": "1335679"
  },
  {
    "text": "then we just define a pipeline that says",
    "start": "1335679",
    "end": "1338080"
  },
  {
    "text": "receive fluid forward",
    "start": "1338080",
    "end": "1339360"
  },
  {
    "text": "in go ahead and add attributes and",
    "start": "1339360",
    "end": "1342159"
  },
  {
    "text": "resource detection detection processors",
    "start": "1342159",
    "end": "1344720"
  },
  {
    "text": "and then export that data out here to",
    "start": "1344720",
    "end": "1347039"
  },
  {
    "text": "two destinations in parallel",
    "start": "1347039",
    "end": "1350640"
  },
  {
    "text": "with that i will go ahead and start the",
    "start": "1350640",
    "end": "1352720"
  },
  {
    "text": "container this is the container of the",
    "start": "1352720",
    "end": "1355120"
  },
  {
    "text": "open telemetry contrib repository",
    "start": "1355120",
    "end": "1357760"
  },
  {
    "text": "and it's using the yaml file that i just",
    "start": "1357760",
    "end": "1360159"
  },
  {
    "text": "built and exposing port 8006",
    "start": "1360159",
    "end": "1364720"
  },
  {
    "text": "this collector will go ahead and get",
    "start": "1364799",
    "end": "1366799"
  },
  {
    "text": "started and then",
    "start": "1366799",
    "end": "1368480"
  },
  {
    "text": "you can see that the error message will",
    "start": "1368480",
    "end": "1370720"
  },
  {
    "text": "go away and data is",
    "start": "1370720",
    "end": "1372080"
  },
  {
    "text": "already coming into the open telemetry",
    "start": "1372080",
    "end": "1374400"
  },
  {
    "text": "collector",
    "start": "1374400",
    "end": "1375440"
  },
  {
    "text": "so we can take a look at one of these",
    "start": "1375440",
    "end": "1378320"
  },
  {
    "text": "log events",
    "start": "1378320",
    "end": "1379919"
  },
  {
    "text": "so for example we can see there's a log",
    "start": "1379919",
    "end": "1382159"
  },
  {
    "text": "event coming in",
    "start": "1382159",
    "end": "1383039"
  },
  {
    "text": "where resource information is being",
    "start": "1383039",
    "end": "1384720"
  },
  {
    "text": "added the host name",
    "start": "1384720",
    "end": "1386159"
  },
  {
    "text": "here's my hostname and then the os type",
    "start": "1386159",
    "end": "1388640"
  },
  {
    "text": "which is linux",
    "start": "1388640",
    "end": "1390320"
  },
  {
    "text": "then we get a timestamp for that",
    "start": "1390320",
    "end": "1393360"
  },
  {
    "text": "event the severity is not set nor",
    "start": "1393360",
    "end": "1396400"
  },
  {
    "text": "is the short name the body this body is",
    "start": "1396400",
    "end": "1399200"
  },
  {
    "text": "coming from fluent bit itself and then",
    "start": "1399200",
    "end": "1402720"
  },
  {
    "text": "beyond that there are attributes like",
    "start": "1402720",
    "end": "1404799"
  },
  {
    "text": "for example the fluent tag is being set",
    "start": "1404799",
    "end": "1406960"
  },
  {
    "text": "so you can see it's collecting docker",
    "start": "1406960",
    "end": "1408559"
  },
  {
    "text": "events",
    "start": "1408559",
    "end": "1409360"
  },
  {
    "text": "and you may recall the foo bar attribute",
    "start": "1409360",
    "end": "1411919"
  },
  {
    "text": "in the open telemetry collector",
    "start": "1411919",
    "end": "1414000"
  },
  {
    "text": "so what we can see here is that we have",
    "start": "1414000",
    "end": "1415679"
  },
  {
    "text": "a mix of fluent bit data coming",
    "start": "1415679",
    "end": "1418320"
  },
  {
    "text": "through the um open symmetry collector",
    "start": "1418320",
    "end": "1421760"
  },
  {
    "text": "and then we have resource labels and",
    "start": "1421760",
    "end": "1424559"
  },
  {
    "text": "attributes that are being added",
    "start": "1424559",
    "end": "1426240"
  },
  {
    "text": "by the open telemetry collector itself",
    "start": "1426240",
    "end": "1429440"
  },
  {
    "text": "now that data is being passed into",
    "start": "1429440",
    "end": "1432640"
  },
  {
    "text": "a different destination as well being",
    "start": "1432640",
    "end": "1435279"
  },
  {
    "text": "the",
    "start": "1435279",
    "end": "1437520"
  },
  {
    "text": "splunk heck destination and if we go",
    "start": "1437600",
    "end": "1440320"
  },
  {
    "text": "ahead and look at the data coming in",
    "start": "1440320",
    "end": "1442720"
  },
  {
    "text": "we can see for example here is a payload",
    "start": "1442720",
    "end": "1446240"
  },
  {
    "text": "that payload has for example metadata",
    "start": "1446240",
    "end": "1449679"
  },
  {
    "text": "including the foo bar attributes that we",
    "start": "1449679",
    "end": "1453360"
  },
  {
    "text": "saw",
    "start": "1453360",
    "end": "1453679"
  },
  {
    "text": "earlier you can see the fluent tag the",
    "start": "1453679",
    "end": "1456799"
  },
  {
    "text": "docker events and a bunch of other rich",
    "start": "1456799",
    "end": "1459120"
  },
  {
    "text": "metadata that's extracted from that",
    "start": "1459120",
    "end": "1460799"
  },
  {
    "text": "payload",
    "start": "1460799",
    "end": "1461919"
  },
  {
    "text": "again this same behavior would be",
    "start": "1461919",
    "end": "1463760"
  },
  {
    "text": "applicable no matter which destination",
    "start": "1463760",
    "end": "1465600"
  },
  {
    "text": "you send the data to",
    "start": "1465600",
    "end": "1467200"
  },
  {
    "text": "uh and it's very easy to change the",
    "start": "1467200",
    "end": "1469039"
  },
  {
    "text": "configuration of the collector just by",
    "start": "1469039",
    "end": "1471120"
  },
  {
    "text": "editing the yaml file",
    "start": "1471120",
    "end": "1473200"
  },
  {
    "text": "so very quick and easy to get started",
    "start": "1473200",
    "end": "1475520"
  },
  {
    "text": "this supports",
    "start": "1475520",
    "end": "1476559"
  },
  {
    "text": "popular open source things including",
    "start": "1476559",
    "end": "1478960"
  },
  {
    "text": "fluent bit and fluentd",
    "start": "1478960",
    "end": "1481200"
  },
  {
    "text": "native log support is being added to the",
    "start": "1481200",
    "end": "1483200"
  },
  {
    "text": "collector and from an instrumentation",
    "start": "1483200",
    "end": "1485360"
  },
  {
    "text": "perspective",
    "start": "1485360",
    "end": "1486159"
  },
  {
    "text": "there are options available today",
    "start": "1486159",
    "end": "1490159"
  },
  {
    "text": "with that i'd say please do check out",
    "start": "1490480",
    "end": "1493360"
  },
  {
    "text": "our special interest groups",
    "start": "1493360",
    "end": "1494880"
  },
  {
    "text": "there's a variety of these that are",
    "start": "1494880",
    "end": "1496400"
  },
  {
    "text": "defined some are language specific for",
    "start": "1496400",
    "end": "1499039"
  },
  {
    "text": "instrumentation",
    "start": "1499039",
    "end": "1500080"
  },
  {
    "text": "some are specification specific the",
    "start": "1500080",
    "end": "1502159"
  },
  {
    "text": "collector has",
    "start": "1502159",
    "end": "1503200"
  },
  {
    "text": "a special interest group as well it's a",
    "start": "1503200",
    "end": "1505520"
  },
  {
    "text": "great way to get involved in the open",
    "start": "1505520",
    "end": "1507440"
  },
  {
    "text": "telemetry community",
    "start": "1507440",
    "end": "1509039"
  },
  {
    "text": "definitely join the conversation each of",
    "start": "1509039",
    "end": "1511360"
  },
  {
    "text": "these special interest groups has their",
    "start": "1511360",
    "end": "1513200"
  },
  {
    "text": "own github project",
    "start": "1513200",
    "end": "1514400"
  },
  {
    "text": "and github discussions is leveraged in",
    "start": "1514400",
    "end": "1517360"
  },
  {
    "text": "addition the open telemetry group",
    "start": "1517360",
    "end": "1519360"
  },
  {
    "text": "is on the cncf slack which is cloud",
    "start": "1519360",
    "end": "1522240"
  },
  {
    "text": "hyphen",
    "start": "1522240",
    "end": "1523400"
  },
  {
    "text": "native.slack.com and of course pr is",
    "start": "1523400",
    "end": "1526480"
  },
  {
    "text": "welcome and everyone is welcome to join",
    "start": "1526480",
    "end": "1528640"
  },
  {
    "text": "the",
    "start": "1528640",
    "end": "1529120"
  },
  {
    "text": "community so take a look at the github",
    "start": "1529120",
    "end": "1531440"
  },
  {
    "text": "issues",
    "start": "1531440",
    "end": "1532320"
  },
  {
    "text": "many are labeled with either good first",
    "start": "1532320",
    "end": "1534640"
  },
  {
    "text": "issue or help",
    "start": "1534640",
    "end": "1535840"
  },
  {
    "text": "wanted labels which makes it pretty easy",
    "start": "1535840",
    "end": "1537919"
  },
  {
    "text": "to get started",
    "start": "1537919",
    "end": "1538960"
  },
  {
    "text": "or of course you can join a special",
    "start": "1538960",
    "end": "1540559"
  },
  {
    "text": "interest group and ask how",
    "start": "1540559",
    "end": "1542000"
  },
  {
    "text": "you can get involved and with that",
    "start": "1542000",
    "end": "1545679"
  },
  {
    "text": "thank you so much as you can see open",
    "start": "1545679",
    "end": "1548240"
  },
  {
    "text": "telemetry is moving quickly to provide",
    "start": "1548240",
    "end": "1550480"
  },
  {
    "text": "cloud native observability the goal is",
    "start": "1550480",
    "end": "1552960"
  },
  {
    "text": "to really help",
    "start": "1552960",
    "end": "1553760"
  },
  {
    "text": "standardize and make it really easy to",
    "start": "1553760",
    "end": "1556080"
  },
  {
    "text": "get instrumentation regardless of the",
    "start": "1556080",
    "end": "1558240"
  },
  {
    "text": "different signals",
    "start": "1558240",
    "end": "1559440"
  },
  {
    "text": "and collect and process that data in an",
    "start": "1559440",
    "end": "1562240"
  },
  {
    "text": "efficient",
    "start": "1562240",
    "end": "1563120"
  },
  {
    "text": "vendor agnostic way today there",
    "start": "1563120",
    "end": "1566159"
  },
  {
    "text": "is rich support for traces that is",
    "start": "1566159",
    "end": "1568559"
  },
  {
    "text": "already stable in languages",
    "start": "1568559",
    "end": "1570240"
  },
  {
    "text": "including java and python.net",
    "start": "1570240",
    "end": "1574000"
  },
  {
    "text": "other languages including javascript and",
    "start": "1574000",
    "end": "1576159"
  },
  {
    "text": "go are planning to be stable",
    "start": "1576159",
    "end": "1578159"
  },
  {
    "text": "very soon here the metrics data model is",
    "start": "1578159",
    "end": "1581039"
  },
  {
    "text": "in",
    "start": "1581039",
    "end": "1581440"
  },
  {
    "text": "the final passes of reaching its stable",
    "start": "1581440",
    "end": "1584400"
  },
  {
    "text": "milestone",
    "start": "1584400",
    "end": "1585279"
  },
  {
    "text": "at which point instrumentation libraries",
    "start": "1585279",
    "end": "1587520"
  },
  {
    "text": "will start picking up and",
    "start": "1587520",
    "end": "1588799"
  },
  {
    "text": "implementing that data model and from a",
    "start": "1588799",
    "end": "1591200"
  },
  {
    "text": "logging perspective",
    "start": "1591200",
    "end": "1592400"
  },
  {
    "text": "the log data model is still experimental",
    "start": "1592400",
    "end": "1595279"
  },
  {
    "text": "but is actively",
    "start": "1595279",
    "end": "1596400"
  },
  {
    "text": "picking up attraction and the goal will",
    "start": "1596400",
    "end": "1598480"
  },
  {
    "text": "be to get that into",
    "start": "1598480",
    "end": "1600159"
  },
  {
    "text": "a more mature state uh later on this",
    "start": "1600159",
    "end": "1602480"
  },
  {
    "text": "year",
    "start": "1602480",
    "end": "1603200"
  },
  {
    "text": "with addition a decision around what",
    "start": "1603200",
    "end": "1605679"
  },
  {
    "text": "will happen from an instrumentation",
    "start": "1605679",
    "end": "1607600"
  },
  {
    "text": "library perspective",
    "start": "1607600",
    "end": "1609120"
  },
  {
    "text": "at a minimum you can expect to see more",
    "start": "1609120",
    "end": "1611919"
  },
  {
    "text": "trace injection into logs across",
    "start": "1611919",
    "end": "1614320"
  },
  {
    "text": "languages and the collector will offer",
    "start": "1614320",
    "end": "1617440"
  },
  {
    "text": "native support for logging in fact it",
    "start": "1617440",
    "end": "1619840"
  },
  {
    "text": "already offers",
    "start": "1619840",
    "end": "1621200"
  },
  {
    "text": "some pretty broad support for it today",
    "start": "1621200",
    "end": "1624080"
  },
  {
    "text": "and has already been tested at scale for",
    "start": "1624080",
    "end": "1626080"
  },
  {
    "text": "both tracing",
    "start": "1626080",
    "end": "1627039"
  },
  {
    "text": "and metrics the initial performance",
    "start": "1627039",
    "end": "1629520"
  },
  {
    "text": "numbers for",
    "start": "1629520",
    "end": "1630559"
  },
  {
    "text": "logging look very promising and will be",
    "start": "1630559",
    "end": "1633279"
  },
  {
    "text": "available",
    "start": "1633279",
    "end": "1633919"
  },
  {
    "text": "and published here soon with that thank",
    "start": "1633919",
    "end": "1636720"
  },
  {
    "text": "you so much and i hope you take a look",
    "start": "1636720",
    "end": "1638480"
  },
  {
    "text": "at the open symmetry project",
    "start": "1638480",
    "end": "1640000"
  },
  {
    "text": "and i hope to see you involved in the",
    "start": "1640000",
    "end": "1641919"
  },
  {
    "text": "project as well",
    "start": "1641919",
    "end": "1643120"
  },
  {
    "text": "thanks so much",
    "start": "1643120",
    "end": "1646320"
  }
]