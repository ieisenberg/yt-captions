[
  {
    "text": "so today um this talk is specifically about cultural shifts and how you can leverage chaos in platform engineering",
    "start": "80",
    "end": "6399"
  },
  {
    "text": "which is something we wanted to tap in uh me and Raj unfortunately Raj could not be here because of some issues but",
    "start": "6399",
    "end": "14160"
  },
  {
    "text": "um rest assure uh he has provided a demo recording of a few like a 5 minute",
    "start": "14160",
    "end": "21160"
  },
  {
    "text": "recording so he'll be talking and going in depth about the architecture how he's using it and stuff like that so we'll",
    "start": "21160",
    "end": "26760"
  },
  {
    "text": "see all the good stuff but let's jump right into it so a little bit about me I'm a senior",
    "start": "26760",
    "end": "32680"
  },
  {
    "text": "software engineer at harness and also a maintainer at the project called litmas which is the cncf incubating project and",
    "start": "32680",
    "end": "38440"
  },
  {
    "text": "Raj is a senior Enterprise architect at FIS and he has more than 20 plus years of experience so definitely somebody uh",
    "start": "38440",
    "end": "44760"
  },
  {
    "text": "you would want to listen to now moving on uh the agenda of this",
    "start": "44760",
    "end": "50039"
  },
  {
    "text": "stock so we be uh of course you guys are platform Engineers so I'm not here talking about the basics of platform",
    "start": "50039",
    "end": "55600"
  },
  {
    "text": "engineering uh but we'll be covering the core components of IDP uh talking a bit about the cognitive problem which is why",
    "start": "55600",
    "end": "61960"
  },
  {
    "text": "we are introducing chaos engineering the what and why the chaos first principles and then we'll see how we can introduce",
    "start": "61960",
    "end": "68720"
  },
  {
    "text": "the chaos in a Hands-On demo and talk about the vision and the tools that are in the market that you can use of course the tools are just U you know U an",
    "start": "68720",
    "end": "76640"
  },
  {
    "text": "abstract view of things you can integrate your own tools it's not vendor specific or tool specific but yeah and",
    "start": "76640",
    "end": "83200"
  },
  {
    "text": "then we are going to execute chaos observe the impact on a gra dashboard hopefully if the Democrats are happy",
    "start": "83200",
    "end": "90520"
  },
  {
    "text": "now let's talk about the problems uh the cloud native era has on all of us right",
    "start": "90520",
    "end": "95600"
  },
  {
    "text": "so we are basically running our uh we have we have shifted from a legacy a",
    "start": "95600",
    "end": "100640"
  },
  {
    "text": "very simple architecture to something as complicated as Cloud native so our devop score scany self-service they are policy",
    "start": "100640",
    "end": "107600"
  },
  {
    "text": "driven we have zero trust environment so so much problem so much extra overhead has come into our manufacuring of a",
    "start": "107600",
    "end": "114640"
  },
  {
    "text": "single software which used to be so simple and has so many components so this leads to something we call the",
    "start": "114640",
    "end": "120079"
  },
  {
    "text": "devops problem which is you shipping your uh containers you",
    "start": "120079",
    "end": "126759"
  },
  {
    "text": "shipping your applications 10 times faster and for that to manage everything we introduce something like platform engineering to have everything in a",
    "start": "126759",
    "end": "132760"
  },
  {
    "text": "single uh layer right so the core components of an IDP these are all these",
    "start": "132760",
    "end": "137879"
  },
  {
    "text": "are some of the high level uh components that I've mentioned which is the application configuration management the",
    "start": "137879",
    "end": "143959"
  },
  {
    "text": "infrastructure orchestration uh the environment deployment and Ro based access control so these are the basic pillars that you might have in your IDP",
    "start": "143959",
    "end": "151040"
  },
  {
    "text": "and based on this you might be extending it to uh you know doing individual things on a higher level on a on a",
    "start": "151040",
    "end": "156920"
  },
  {
    "text": "granular level for each of these core components so this is something we are already familiar with when it comes to",
    "start": "156920",
    "end": "162400"
  },
  {
    "text": "platform engineering uh but what we are not is how we can wrap this entire scenario in the form of a chaos",
    "start": "162400",
    "end": "168920"
  },
  {
    "text": "engineering uh uh deliver delivery model so the cloud native problem like I",
    "start": "168920",
    "end": "174159"
  },
  {
    "text": "mentioned we from Legacy devops we are moving into a cloud native devops and we are shipping not every water but every",
    "start": "174159",
    "end": "180440"
  },
  {
    "text": "week which results in 10 times of more microservices being shipped 10 times faster and you know thousands of",
    "start": "180440",
    "end": "186360"
  },
  {
    "text": "different environments it's very easy to miss out on exactly uh each and individual layers so you might not be",
    "start": "186360",
    "end": "192640"
  },
  {
    "text": "able to test everything you might miss out here and there and that might be the reason of your outage right so it's if",
    "start": "192640",
    "end": "198280"
  },
  {
    "text": "you see the pyramid so you have your application you have the other layers like your Kafka your application",
    "start": "198280",
    "end": "203319"
  },
  {
    "text": "and then you have the cloud Ned service layer the kuties layer the platform layer so not everything is tested we",
    "start": "203319",
    "end": "209519"
  },
  {
    "text": "should but we don't get enough time so the solution to this or let me",
    "start": "209519",
    "end": "215080"
  },
  {
    "text": "actually tell you why we even need this so it's down times right we hate down times we don't want down times uh This",
    "start": "215080",
    "end": "221080"
  },
  {
    "text": "Is What It causes uh to our customers to the people to our users and we definitely hatte it so these are some",
    "start": "221080",
    "end": "228120"
  },
  {
    "text": "examples of course I don't want to be harsh but these are some real examples so we have loss of customer confidence",
    "start": "228120",
    "end": "233360"
  },
  {
    "text": "some damage to Integrity Lack of self like loss of self employe confidence and yada y a lot of things but this is",
    "start": "233360",
    "end": "240560"
  },
  {
    "text": "something we definitely don't want to do and down times are something we want to avoid which is why we want to introduce",
    "start": "240560",
    "end": "246040"
  },
  {
    "text": "G engineering now what is it I'm sure you guys have heard of it it's a practice we do to deliberately uh break",
    "start": "246040",
    "end": "252000"
  },
  {
    "text": "our systems uh typically in production doesn't have to be in production but something we do to ensure that it can",
    "start": "252000",
    "end": "258000"
  },
  {
    "text": "withstand uh unexpected disruptions so you see this model right of chaos engineering what we are saying is this",
    "start": "258000",
    "end": "263639"
  },
  {
    "text": "is the core principle we want to test some we want to select the chaos experiments to test our applications we",
    "start": "263639",
    "end": "269160"
  },
  {
    "text": "want to run a set of targeted experiments observe the impact uh use the learnings to make our application",
    "start": "269160",
    "end": "274960"
  },
  {
    "text": "more resilient and then select the systems back to test and this is the loop right so 1 2 3 4 5 this is a cycle",
    "start": "274960",
    "end": "280880"
  },
  {
    "text": "we keep on doing and these are the core principles of chaos engineering now what is the chaos first principle so this",
    "start": "280880",
    "end": "286720"
  },
  {
    "text": "talk is about the chaos first principle right because we might or might not be doing Chaos engineering we are definitely doing platform engineering so",
    "start": "286720",
    "end": "293440"
  },
  {
    "text": "what is this principle it's a principle in in the rap in the context of platform",
    "start": "293440",
    "end": "299680"
  },
  {
    "text": "engineering which Advocates that you go chaos first rather than you know um being afraid of it what might happen to",
    "start": "299680",
    "end": "306280"
  },
  {
    "text": "my system should I even break my production should I even do it it's costly and so many uh things right to",
    "start": "306280",
    "end": "312080"
  },
  {
    "text": "not actually go ahead and proactively do it so this principle Advocates that uh",
    "start": "312080",
    "end": "317199"
  },
  {
    "text": "you design your system with the expectation that failure is a fundamental cause and that is bound to happen so we want to deliberately",
    "start": "317199",
    "end": "324080"
  },
  {
    "text": "introduce chaos and disrupt the platform infrastructure to proactively identify the weaknesses",
    "start": "324080",
    "end": "330160"
  },
  {
    "text": "now this we are coming back to the platform engineering uh layer again once again the core components of the IDP now",
    "start": "330160",
    "end": "336319"
  },
  {
    "text": "chaos engineering could be introduced in every single uh segment of uh every single component of platform engineering",
    "start": "336319",
    "end": "342199"
  },
  {
    "text": "for role based Access Control you can check for uh who has permissions of doing what kind of chaos you can check",
    "start": "342199",
    "end": "348680"
  },
  {
    "text": "for uh your application configuration this is of course the most common use case of checking your application configuration you can also check if your",
    "start": "348680",
    "end": "355240"
  },
  {
    "text": "environment variables that you're passing as a part of the platform are actually uh going or not if there's some disruption there if there's like a",
    "start": "355240",
    "end": "362639"
  },
  {
    "text": "missing end which can break your system of course there infrastructure you can Target your VMS bare Metals uh",
    "start": "362639",
    "end": "367960"
  },
  {
    "text": "kubernetes uh execution layer things like that and you can also control your deployment so in each and every way or",
    "start": "367960",
    "end": "374240"
  },
  {
    "text": "each and every pipeline of uh platform engineering you can introduce scos so this is the idea I wanted to",
    "start": "374240",
    "end": "380479"
  },
  {
    "text": "show now how it plays a paval role so chaos Engineering in the context of",
    "start": "380479",
    "end": "385680"
  },
  {
    "text": "platform engineering has three main uh pillars which is capacity planning and scale so by doing this you can",
    "start": "385680",
    "end": "391360"
  },
  {
    "text": "understand uh you can introduce the control chaos and understand what is the max you can go uh till what point uh you",
    "start": "391360",
    "end": "398039"
  },
  {
    "text": "you you can expect failure uh what is how how far how further you can stretch it and also this General uh it's a",
    "start": "398039",
    "end": "405120"
  },
  {
    "text": "general idea that you are shifting your system to towards resiliency by adopting this chaos first principle so by doing",
    "start": "405120",
    "end": "411240"
  },
  {
    "text": "this you naturally Embrace failure as a part of your system rather than being afraid that oh I had an outage what do I",
    "start": "411240",
    "end": "416360"
  },
  {
    "text": "do so uh the last is continuous Improvement so this from a mindset of continuous Improvement within your teams",
    "start": "416360",
    "end": "422240"
  },
  {
    "text": "rather than being scared uh the day it happens and you're running in a you know SE zero so",
    "start": "422240",
    "end": "428680"
  },
  {
    "text": "yeah awesome now these are some of the tools we'll be using uh this is of course just for demo you don't have to",
    "start": "428680",
    "end": "434479"
  },
  {
    "text": "use it if you have your own service on tool go ahead and use it uh but yeah the two tools we'll be using is backstage",
    "start": "434479",
    "end": "439800"
  },
  {
    "text": "and litmus so backstage is an open platform for building developer portal as you might have already known there",
    "start": "439800",
    "end": "445199"
  },
  {
    "text": "was a backstage con yesterday as well uh but yeah litmus Kos is the other uh platform which is a cncf incubating",
    "start": "445199",
    "end": "450479"
  },
  {
    "text": "project and litmus chos is actually open source both backstages also open source and uh you can use them combined to",
    "start": "450479",
    "end": "457879"
  },
  {
    "text": "reconcile the idea that I just talked about by the way this is a just an example you can also use other tools and",
    "start": "457879",
    "end": "465919"
  },
  {
    "text": "also use open apis if you have but yeah that's the idea cool now let's actually",
    "start": "465919",
    "end": "471280"
  },
  {
    "text": "hear from Raj hello everyone my name is Raj vaju",
    "start": "471280",
    "end": "477000"
  },
  {
    "text": "I'm in AR with FIS uh sorry I did not join you in person uh I had some family",
    "start": "477000",
    "end": "485520"
  },
  {
    "text": "commitments so I did not join I want to share some some of my thoughts what",
    "start": "485520",
    "end": "490639"
  },
  {
    "text": "should uh hope you having a great U session at Europe good luck s with your",
    "start": "490639",
    "end": "499520"
  },
  {
    "text": "your presentation on this topic so the couple of topics that I want of thoughts",
    "start": "499520",
    "end": "504840"
  },
  {
    "text": "that I want to share is the the the vision that we have at FIS on how do we",
    "start": "504840",
    "end": "510000"
  },
  {
    "text": "integrate chaos in uh into platform engineering uh as you can see on the",
    "start": "510000",
    "end": "515719"
  },
  {
    "text": "screen right there are four pillars that we can you know imagine or",
    "start": "515719",
    "end": "521518"
  },
  {
    "text": "envisioning uh one is Define and execute chaos experiment which is very basic and foundational uh in the sense that uh you",
    "start": "521519",
    "end": "528839"
  },
  {
    "text": "want to Define and you want to Define your chaos experiments that fit your",
    "start": "528839",
    "end": "534320"
  },
  {
    "text": "needs and uh execute them probably manually right right the key thing is",
    "start": "534320",
    "end": "540880"
  },
  {
    "text": "you need to identify appropriate scenarios what what fits your application needs uh in our case you",
    "start": "540880",
    "end": "548120"
  },
  {
    "text": "know we have wide variety of applications Cloud native Legacy applications applications of the",
    "start": "548120",
    "end": "553399"
  },
  {
    "text": "workflows running on Linux platform Windows uh and Mainframe Etc so what and",
    "start": "553399",
    "end": "560800"
  },
  {
    "text": "different kind of uh banking applications that we have so we it's important to you know Define and execute",
    "start": "560800",
    "end": "566800"
  },
  {
    "text": "uh mainly definition of those experiments and the Second Step In the Journey that we envisioning",
    "start": "566800",
    "end": "573839"
  },
  {
    "text": "is you want to offer this chaos as a service uh so that it will become selfs",
    "start": "573839",
    "end": "580920"
  },
  {
    "text": "serviceable easy to enable disable uh for your applications or platforms and",
    "start": "580920",
    "end": "587000"
  },
  {
    "text": "the third step is once you have that you know level of automation or enabled",
    "start": "587000",
    "end": "592399"
  },
  {
    "text": "chaos as a service you want to repeat this chaos engineering uh in",
    "start": "592399",
    "end": "599399"
  },
  {
    "text": "regular intervals right more or less you want to make it a repeatable process how do you do that you want our our idea is",
    "start": "599399",
    "end": "605720"
  },
  {
    "text": "to integrate uh chos into cicd platform",
    "start": "605720",
    "end": "611240"
  },
  {
    "text": "uh so that with a push of a button we should be able to uh we should be able to kind of uh execute uh chaos",
    "start": "611240",
    "end": "620279"
  },
  {
    "text": "experiments so we have we want to essentially make repal process and automated so that's a goal of that that",
    "start": "620279",
    "end": "627480"
  },
  {
    "text": "tile the the goal of that step in in the journey which is integrate into cicd systems",
    "start": "627480",
    "end": "634959"
  },
  {
    "text": "then the fourth pillar which is kind of underlying uh important pillar that we think is enabling appropriate",
    "start": "634959",
    "end": "643560"
  },
  {
    "text": "observability and uh make the chaos evaluation automated right so without",
    "start": "643560",
    "end": "650160"
  },
  {
    "text": "observability you you cannot kind of clearly measure whether you're a chaos",
    "start": "650160",
    "end": "656000"
  },
  {
    "text": "experiment whether success or failure and also that evaluation that you do uh",
    "start": "656000",
    "end": "662399"
  },
  {
    "text": "that that needs to be automated so that you remove the toil of the manual effort that involved in in chaos engineering so",
    "start": "662399",
    "end": "669120"
  },
  {
    "text": "that you can scale chaos engineering across Organization for you know",
    "start": "669120",
    "end": "675040"
  },
  {
    "text": "hundreds of applications which is which is the case with uh with applic which is",
    "start": "675040",
    "end": "680639"
  },
  {
    "text": "the case with FIS right it could be hundreds of applications under s components within the applications uh",
    "start": "680639",
    "end": "687040"
  },
  {
    "text": "that's kind of the larger scale that we uh I'm talking here so this is the",
    "start": "687040",
    "end": "692519"
  },
  {
    "text": "vision uh that we have and what we have done is we put together a blueprint",
    "start": "692519",
    "end": "698160"
  },
  {
    "text": "architecture to realize this Vision so that's presented here what I have got",
    "start": "698160",
    "end": "703600"
  },
  {
    "text": "here is uh there are five six components that is depicted in this blueprint",
    "start": "703600",
    "end": "710839"
  },
  {
    "text": "architecture or ecosystem the top you can see we have a cicd pipeline uh which",
    "start": "710839",
    "end": "716360"
  },
  {
    "text": "we envision with the pushup a button you should be able to trigger the load uh you should be able to trigger the chaos",
    "start": "716360",
    "end": "722399"
  },
  {
    "text": "experiment and then you should be able to evaluate uh the those chaos experiment whether the chaos that you",
    "start": "722399",
    "end": "728519"
  },
  {
    "text": "just conducted uh whether it's success or or not and uh neoload on the top left uh",
    "start": "728519",
    "end": "737120"
  },
  {
    "text": "you can see neol Lo RJ meter which is a load generator tools are integral part of this ecosystem because several times",
    "start": "737120",
    "end": "744600"
  },
  {
    "text": "the resilience issue that you face in production environments they happen under loan load and what we want to do",
    "start": "744600",
    "end": "750959"
  },
  {
    "text": "is is we want to simulate that type of uh Behavior Uh in in in pre-production",
    "start": "750959",
    "end": "757480"
  },
  {
    "text": "environment using the load generator such as neol load and jmeter and inject chaos experiments while applications",
    "start": "757480",
    "end": "764839"
  },
  {
    "text": "under load so that you understand uh the the resiliency of the of the",
    "start": "764839",
    "end": "770440"
  },
  {
    "text": "application and uh you have on the bottom you can see the observability tools which are again are the integral",
    "start": "770440",
    "end": "776480"
  },
  {
    "text": "part of uh this ecosystem you have datra plunk Prometheus currently that that's",
    "start": "776480",
    "end": "782800"
  },
  {
    "text": "what we support or we there may be other tools that that may come along the way",
    "start": "782800",
    "end": "788279"
  },
  {
    "text": "on the right side you have the litmos which is a chaos engineering uh tool that we have in the",
    "start": "788279",
    "end": "795959"
  },
  {
    "text": "toolbox and we have a Chaos Blade also that we are using in in some scenarios",
    "start": "795959",
    "end": "801079"
  },
  {
    "text": "but litmas is a kind of a primary Tool uh litmus is our chaos engine tool where through which exposes apis H through",
    "start": "801079",
    "end": "808760"
  },
  {
    "text": "which we inject uh the chaos experiment into the application Target app which is depicted",
    "start": "808760",
    "end": "814320"
  },
  {
    "text": "on the bottom left corner on the screen and we use kepon kep is a cncf",
    "start": "814320",
    "end": "820839"
  },
  {
    "text": "project uh to evaluate this experiment the way we are envisioning is we have a",
    "start": "820839",
    "end": "827279"
  },
  {
    "text": "a pre-os phase during chaos phase and post chaos phase and we have hypothesis",
    "start": "827279",
    "end": "832680"
  },
  {
    "text": "for each phase that we feed into cap uh in the form of sis and slos uh so",
    "start": "832680",
    "end": "840000"
  },
  {
    "text": "that once we conduct the chaos experiment we ask Captain hey Captain go",
    "start": "840000",
    "end": "845720"
  },
  {
    "text": "ahead here is my 5 minutes I is my pre- chaos period the 5 minute I injected chaos and five last other five minutes",
    "start": "845720",
    "end": "853639"
  },
  {
    "text": "is like my recovery period right think of a 15 minute low test scenario right then I tell Captain these are my time",
    "start": "853639",
    "end": "860040"
  },
  {
    "text": "periods and here is my SL SLS definitions on how the resources or",
    "start": "860040",
    "end": "866519"
  },
  {
    "text": "other things should look like such as such as signals error rate response time",
    "start": "866519",
    "end": "871839"
  },
  {
    "text": "or throughput and things like that go evaluate it right and then Captain goes talks to the the downstream",
    "start": "871839",
    "end": "877959"
  },
  {
    "text": "observability tools pulls the metrics and gives me a a pass fail scenario or a",
    "start": "877959",
    "end": "883639"
  },
  {
    "text": "pass fail Boolean value and that I can bake into my cicd pipeline which is depicted on the top making the decision",
    "start": "883639",
    "end": "890600"
  },
  {
    "text": "whether whether a particular application was success in terms of chaos",
    "start": "890600",
    "end": "896199"
  },
  {
    "text": "engineering practice and is it ready to deploy to the next next place right so we want to automate uh this end to end",
    "start": "896199",
    "end": "903199"
  },
  {
    "text": "life cycle so that chaos engineering can be a repeatable uh repeatable process we",
    "start": "903199",
    "end": "909639"
  },
  {
    "text": "have most of these pieces together in environment but we don't have that even",
    "start": "909639",
    "end": "914720"
  },
  {
    "text": "that that n n pipeline built yet which are we are in the process of building that we will we are of very close to",
    "start": "914720",
    "end": "920839"
  },
  {
    "text": "building one and and kind of repeat that pipeline across hundreds of applications",
    "start": "920839",
    "end": "927560"
  },
  {
    "text": "excuse me that we have uh within FIS with that thank you thanks for the opportunity thanks for listening to me",
    "start": "927560",
    "end": "933000"
  },
  {
    "text": "hopefully uh this is helpful thank you awesome hello everyone my name",
    "start": "933000",
    "end": "942800"
  },
  {
    "text": "is okay let me move on one second guys",
    "start": "946480",
    "end": "951519"
  },
  {
    "text": "hey cool uh I don't want to do a demo without crediting the guys who are awesome so uh this is U Nam Park this is",
    "start": "951519",
    "end": "958720"
  },
  {
    "text": "um he's been a contributor with us from LFX and he's been great so Nam if you're",
    "start": "958720",
    "end": "964079"
  },
  {
    "text": "watching this so uh namu has been uh good at uh backstage particularly for",
    "start": "964079",
    "end": "971240"
  },
  {
    "text": "litmas because backstage uh is a platform which we were planning to integrate with so that we can enable",
    "start": "971240",
    "end": "977279"
  },
  {
    "text": "this observability or like uh you know a platform engineering site to it so he has been uh proactive in suggesting",
    "start": "977279",
    "end": "982519"
  },
  {
    "text": "backstage plug-in gmas it's already published and U you can go to this backstage plug-in issue link or you can",
    "start": "982519",
    "end": "989440"
  },
  {
    "text": "hit get up and you should see it there cool so what we have to do now is before",
    "start": "989440",
    "end": "995560"
  },
  {
    "text": "jumping in these are the three uh important uh what do you say",
    "start": "995560",
    "end": "1001399"
  },
  {
    "text": "configurations of Backstage that we need to add so in this case in the app config yaml which is the top left so the app",
    "start": "1001399",
    "end": "1007720"
  },
  {
    "text": "config yaml is where you add your litmus UI Ur definitely after deploying it and then you have uh the lus Au token which",
    "start": "1007720",
    "end": "1013720"
  },
  {
    "text": "you need to add in order to in order for back stitch to figure out that this is the product you're using and on the",
    "start": "1013720",
    "end": "1019600"
  },
  {
    "text": "right you have the entities yaml this is where you can add your entities of litmus that you can use to visualize and",
    "start": "1019600",
    "end": "1025798"
  },
  {
    "text": "see things so you you're seeing a kind of a gif but I'll show you this live but yeah these are the two main things you",
    "start": "1025799",
    "end": "1031520"
  },
  {
    "text": "need to do in order to actually uh use backstage and lmus now let me come",
    "start": "1031520",
    "end": "1037839"
  },
  {
    "text": "over to Backstage which is here and once you do",
    "start": "1037839",
    "end": "1043720"
  },
  {
    "text": "that you should see something like this you have a backstage litmus demo of course my Company catalog is a generic",
    "start": "1043720",
    "end": "1049240"
  },
  {
    "text": "thing it's your company it's your uh R and then you can add the litmus component to it now once you do that you",
    "start": "1049240",
    "end": "1054679"
  },
  {
    "text": "will see something like this this is the overview uh of the of the platform you're integrating so in this case it's",
    "start": "1054679",
    "end": "1060360"
  },
  {
    "text": "litmas uh it's just a bare minimum so you can of course extend it to as many things you want it to you can add your",
    "start": "1060360",
    "end": "1065679"
  },
  {
    "text": "owners the systems the tags and uh things you want to connect it with now right now I have litmus deployed already",
    "start": "1065679",
    "end": "1071080"
  },
  {
    "text": "so you see there are things like kosub the infras how many infras are connected the experiments and if a get Ops is on",
    "start": "1071080",
    "end": "1076799"
  },
  {
    "text": "or not and you have some subers sub components if you want to introduce those but the interesting part is you see this litmus uh tag right this litmus",
    "start": "1076799",
    "end": "1084919"
  },
  {
    "text": "uh tab specifically so in here you will get all the uh Dev information so things like the experiment docks the API docks",
    "start": "1084919",
    "end": "1090600"
  },
  {
    "text": "the chaos subub the community things about the community uh if you have more than one Hub you will get it here you can see the environments uh in which",
    "start": "1090600",
    "end": "1097159"
  },
  {
    "text": "your chaos infra is connected to and at the bottom you will see all the experiments that it run as a part of your litmus pipelines so this is",
    "start": "1097159",
    "end": "1105120"
  },
  {
    "text": "straight out of litmus but you are seeing it all in the backstage platform itself so you can see uh how many",
    "start": "1105120",
    "end": "1110520"
  },
  {
    "text": "experiment ran what was the resident score of it who ran it executed how many uh how many hours ago or minutes ago so",
    "start": "1110520",
    "end": "1116480"
  },
  {
    "text": "everything that's uh litmus related would be uh shown to you in a single place without actually having you having",
    "start": "1116480",
    "end": "1123559"
  },
  {
    "text": "to go and out of the platform into it here so you can even run it from here if you click the Run uh experiment it'll",
    "start": "1123559",
    "end": "1129520"
  },
  {
    "text": "actually be live and you you can see the pipeline but yeah I think with this you",
    "start": "1129520",
    "end": "1135080"
  },
  {
    "text": "can also go to the uh rmas execution directly and you can see uh what went wrong or what went right what was the",
    "start": "1135080",
    "end": "1141440"
  },
  {
    "text": "log what was the probes and things like that cool so what we have for the demo today is actually this application",
    "start": "1141440",
    "end": "1147919"
  },
  {
    "text": "called uh online boutique app by Google Cloud platform so this is the architecture uh it has uh it's is a demo",
    "start": "1147919",
    "end": "1154400"
  },
  {
    "text": "microservice application by the way but uh we are mainly targeting the card service which at the bottom right above",
    "start": "1154400",
    "end": "1159720"
  },
  {
    "text": "the red cash so it has uh it looks something like this it's a Live card",
    "start": "1159720",
    "end": "1166240"
  },
  {
    "text": "application you can add your uh products you can add to cart and there should be added to the cart you can do checkout so",
    "start": "1166240",
    "end": "1172720"
  },
  {
    "text": "this is just a simple micros service application now what we want to disrupt right today right now is the scart",
    "start": "1172720",
    "end": "1178400"
  },
  {
    "text": "service so how it typically looks like is something like",
    "start": "1178400",
    "end": "1184320"
  },
  {
    "text": "this so this is our uh Boutique application services that are running in here I have the cart service which has a",
    "start": "1184320",
    "end": "1190720"
  },
  {
    "text": "specific label called app equal to cart Service attached to the deployment so I want to Target this specific pod with",
    "start": "1190720",
    "end": "1197520"
  },
  {
    "text": "the lab with the label so that it goes down and our application is actually uh down in chaos so this it's a very",
    "start": "1197520",
    "end": "1203480"
  },
  {
    "text": "straightforward example but you can of course elevate it further and use your own use case add your own use case",
    "start": "1203480",
    "end": "1208679"
  },
  {
    "text": "create your own hypothesis so these are all the components of litmas once you deploy litmus you will have for",
    "start": "1208679",
    "end": "1213919"
  },
  {
    "text": "high availability you would have your uh front end the graphql the authentication and then you have event tracker operator",
    "start": "1213919",
    "end": "1219679"
  },
  {
    "text": "chos exporter and controller so the event tracker is used for giops exporter is used if you want to export your own",
    "start": "1219679",
    "end": "1225520"
  },
  {
    "text": "metrics then you have operator which you can use to operators actually the guy who is using uh injecting chaos via",
    "start": "1225520",
    "end": "1231320"
  },
  {
    "text": "chaos Runner it's checking for if your application uh labels targets are actually present or not things like that",
    "start": "1231320",
    "end": "1236679"
  },
  {
    "text": "so it does all the good stuff cool uh with that we also have monitoring setup right now with Prometheus and grafana",
    "start": "1236679",
    "end": "1243000"
  },
  {
    "text": "this is optional you can choose not to do it uh but we provide it um out of the box so if you install it uh we have a",
    "start": "1243000",
    "end": "1249240"
  },
  {
    "text": "utility uh already in Theo so you can uh if you install it it should be available so the repo looks something like this so",
    "start": "1249240",
    "end": "1257200"
  },
  {
    "text": "it's github.com lmus chos SL litmus uh there are other umbrella projects in the litmus chaos project itself but uh this",
    "start": "1257200",
    "end": "1263360"
  },
  {
    "text": "is the main one uh so if you go down you can see this chaos Center and there's a monitoring so monitoring is where the",
    "start": "1263360",
    "end": "1268720"
  },
  {
    "text": "Gana is there and Chaos Center is where you will find all the information regarding uh installation so you have",
    "start": "1268720",
    "end": "1274039"
  },
  {
    "text": "the vietnami and you have the Manifest which you can use you can also do it via Helm it's it's possible so uh",
    "start": "1274039",
    "end": "1280120"
  },
  {
    "text": "you can go to the dogs MUSC iio to see all this all of this but yeah let me just jump right into the demo",
    "start": "1280120",
    "end": "1289919"
  },
  {
    "text": "Okay cool so uh before we move into doing one of the part deletes this is the API uh setting where you can",
    "start": "1289919",
    "end": "1296279"
  },
  {
    "text": "generate an API token uh from litmas and then you can use this token in backstage to uh connect it uh but yeah if you go",
    "start": "1296279",
    "end": "1302600"
  },
  {
    "text": "to the application or the account settings you can use this new token and generate one token and use it at Backstage now let me jump over to LMA so",
    "start": "1302600",
    "end": "1309960"
  },
  {
    "text": "this is what we have this is exactly what we saw at the backstage platform 2 now what I want to do is inject chaos",
    "start": "1309960",
    "end": "1316400"
  },
  {
    "text": "let me create a new chaos call it card",
    "start": "1316400",
    "end": "1321919"
  },
  {
    "text": "disrupt I'll be selecting my infrastructure in which case this is the chos infra which I have already connected and because of this infra you",
    "start": "1322720",
    "end": "1328960"
  },
  {
    "text": "are actually able to see the you know you saw the workf for controller the subscriber uh the uh operator things",
    "start": "1328960",
    "end": "1334559"
  },
  {
    "text": "like that so all of the all of the dependencies actually come up when you install infra now I want to select the",
    "start": "1334559",
    "end": "1341200"
  },
  {
    "text": "blank canvas and I want to apply uh the individual fault that I want so in here you can see a list of faults right you",
    "start": "1341200",
    "end": "1347400"
  },
  {
    "text": "have awss or gcp kubernetes so I'm going to just select the kubernetes one uh by the way these faults are completely open",
    "start": "1347400",
    "end": "1353159"
  },
  {
    "text": "source and also the repositor is free it's chaos Hub you can go to hub.io to find this I'm just going to use p delete",
    "start": "1353159",
    "end": "1359799"
  },
  {
    "text": "to keep it simple to Target it I'm going to use a type of deployment with the name space of Boutique where my",
    "start": "1359799",
    "end": "1365039"
  },
  {
    "text": "application lies and the uh the label is app equal to card service like I mentioned you can tune the F to make it",
    "start": "1365039",
    "end": "1373320"
  },
  {
    "text": "let's say a little bit longer um we can see the result I've already run it so won't really matter but in the probes",
    "start": "1373320",
    "end": "1381279"
  },
  {
    "text": "this is an important section uh like an important thing we have added with 3.0 which is resilience probes so this is uh",
    "start": "1381279",
    "end": "1387360"
  },
  {
    "text": "like a pluggable check that you want to inject in your chaos uh but not as an optional parameter but rather than",
    "start": "1387360",
    "end": "1393400"
  },
  {
    "text": "rather important like a like create it as a global instance and use it anywhere",
    "start": "1393400",
    "end": "1398679"
  },
  {
    "text": "in your experiments it's not like you are using a fault or you're using an experiment it's optional you can go ahead and add a proe but rather it's",
    "start": "1398679",
    "end": "1404880"
  },
  {
    "text": "necessary because we want to Target or we want to achieve a uh pluggable checks in such a case that it makes sense",
    "start": "1404880",
    "end": "1411159"
  },
  {
    "text": "rather than you know just have probes for the sake of it so in this probes it's an HTTP probe it's just doing it's",
    "start": "1411159",
    "end": "1416360"
  },
  {
    "text": "just checking for the URL and it's checking if it's healthy or not so this URL is the URL of the online boutique",
    "start": "1416360",
    "end": "1421440"
  },
  {
    "text": "store uh you can also change it to the fqd and Link of the Serv you're you know disrupting or anything so it's really",
    "start": "1421440",
    "end": "1427640"
  },
  {
    "text": "extensible and this is kind of a principle that we want to Advocate that it's a resilience Pro first approach you",
    "start": "1427640",
    "end": "1433200"
  },
  {
    "text": "create it first and then you can uh add it to any and uh as many experiments you would like so let me add this uh these",
    "start": "1433200",
    "end": "1440600"
  },
  {
    "text": "are the different modes of adding so it's start of test end of test edges both the check will happen both before",
    "start": "1440600",
    "end": "1446039"
  },
  {
    "text": "and after continuous on Kos so I'm just going to do s I'll apply and I'll save",
    "start": "1446039",
    "end": "1451559"
  },
  {
    "text": "so once I save I will click on run and the experiment should start running now",
    "start": "1451559",
    "end": "1457039"
  },
  {
    "text": "let me go back to the terminal so here you would see uh some",
    "start": "1457039",
    "end": "1463760"
  },
  {
    "text": "chaos uh operations already spinning up so in this case okay let me just move it",
    "start": "1463760",
    "end": "1469720"
  },
  {
    "text": "aside so you guys can see it clearly yeah so you would see the logs of your uh of the application execution on the",
    "start": "1469720",
    "end": "1475960"
  },
  {
    "text": "right and then you can see the terminal here right so it it's it's uh it actually spawned up this guy card",
    "start": "1475960",
    "end": "1481799"
  },
  {
    "text": "disruption and we are targeting this which is card service which is running for 152 minutes we'll soon see it go",
    "start": "1481799",
    "end": "1488840"
  },
  {
    "text": "down because that's the disruption of the hypothesis we planned to do now once it goes down our wellin functional",
    "start": "1488840",
    "end": "1495520"
  },
  {
    "text": "application would unfortunately not work so that is the outage we are uh planning to do so this could be anything this",
    "start": "1495520",
    "end": "1502120"
  },
  {
    "text": "could be a different kind of scenario for your case you can inject latency in",
    "start": "1502120",
    "end": "1507200"
  },
  {
    "text": "a platform engineering scenario you can induce uh latency in your database you can induce uh disruption in your uh",
    "start": "1507200",
    "end": "1514120"
  },
  {
    "text": "infras so things like that things which are specific to your use cases you can do it via this application as you can",
    "start": "1514120",
    "end": "1519480"
  },
  {
    "text": "see terminated and restarted for in like this 4 seconds 7 Seconds now if I go and",
    "start": "1519480",
    "end": "1525159"
  },
  {
    "text": "reload it should not work and that's that chaos happened so you can't really do anything this is a disruption that we",
    "start": "1525159",
    "end": "1531799"
  },
  {
    "text": "simulated now this is safe because you're doing it on your own not an actual production environment that is",
    "start": "1531799",
    "end": "1536960"
  },
  {
    "text": "down right so now you can take your time figure out what went wrong look into it um see the solution and then once you",
    "start": "1536960",
    "end": "1544000"
  },
  {
    "text": "are ready with the solution deploy it back and check again so this is the power of chaos engineering and it is",
    "start": "1544000",
    "end": "1549640"
  },
  {
    "text": "doubled with the combination of platform and Chaos engineering because you're doing everything in a single uh run",
    "start": "1549640",
    "end": "1555880"
  },
  {
    "text": "awesome so that's the demo let me show you how the final thing would look like because it would take a bit of time to",
    "start": "1555880",
    "end": "1562440"
  },
  {
    "text": "run but you can see the same thing would look something like this so you would get a verdict from the Argo controller",
    "start": "1562440",
    "end": "1570960"
  },
  {
    "text": "and from the chaos results here it would say that your url there responded with the actual code 200 but expected was",
    "start": "1570960",
    "end": "1576640"
  },
  {
    "text": "also 200 so it passed uh and in case the combination of our fault and the probe success percent uh results or accounts",
    "start": "1576640",
    "end": "1583399"
  },
  {
    "text": "to our resilience score so you would uh of course get a resilience score at the end of your experiments you can see this",
    "start": "1583399",
    "end": "1588559"
  },
  {
    "text": "is 100% because everything was successful Pro was also successful but if not then you would compute that",
    "start": "1588559",
    "end": "1593919"
  },
  {
    "text": "accordingly and U give you a residance score so yeah that's it that's all about",
    "start": "1593919",
    "end": "1599960"
  },
  {
    "text": "the demo uh one last thing is this uh monitoring setup so you can see that the",
    "start": "1599960",
    "end": "1606120"
  },
  {
    "text": "Let me refresh that once because we are just doing some chaos and we should see some annotations",
    "start": "1606120",
    "end": "1613240"
  },
  {
    "text": "oh all right oh all right so you can see some",
    "start": "1613240",
    "end": "1618720"
  },
  {
    "text": "annotations coming right up on the right side it's just starting up because we are still doing it but I ran a few and",
    "start": "1618720",
    "end": "1624080"
  },
  {
    "text": "you can already see the historic data of that so you would see that the card QPS and everything goes down we have",
    "start": "1624080",
    "end": "1629360"
  },
  {
    "text": "annotation so it's always useful to see this kind of uh data when you're monitoring it so that you can exactly",
    "start": "1629360",
    "end": "1636120"
  },
  {
    "text": "see what is wrong and you can also use the Prometheus probe in this case to scrip the metrics and then do something out of it in the pr promethus concept",
    "start": "1636120",
    "end": "1642960"
  },
  {
    "text": "with the prom query of course so yeah that's all about the demo let me jump back and talk about the Future",
    "start": "1642960",
    "end": "1652320"
  },
  {
    "text": "Vision cool so what's uh what's the road map for us on the you know in the future",
    "start": "1654600",
    "end": "1661360"
  },
  {
    "text": "so what are we planning so there are four pillars to the road map that we are actually looking forward to in terms of",
    "start": "1661360",
    "end": "1666799"
  },
  {
    "text": "um open source contribution and how we are envisioning it in the long run one is the maturity model we have to define",
    "start": "1666799",
    "end": "1672480"
  },
  {
    "text": "the maturity model for chaos engineering and platform engineering context of course there's the maturity model for chaos engineering but it's not U there",
    "start": "1672480",
    "end": "1679640"
  },
  {
    "text": "for chaos in platform it's a relatively newer concept which uh a lot of us has to accept first in order to go ahead and",
    "start": "1679640",
    "end": "1686360"
  },
  {
    "text": "start doing it second is the industry standards so we have to as a community contribute to the development of",
    "start": "1686360",
    "end": "1691919"
  },
  {
    "text": "Industry standards on uh fostering a chaos platform chaos first principle platform and of course have to make",
    "start": "1691919",
    "end": "1699880"
  },
  {
    "text": "people understand this is important and it is something we should adopt third is defining C rails this is an interesting",
    "start": "1699880",
    "end": "1705279"
  },
  {
    "text": "point because often times we question the uh permission requirements or the r back requirements for chaos like anybody",
    "start": "1705279",
    "end": "1711799"
  },
  {
    "text": "could go and you know break something how who is stopping you so this is where we need to define guard Reals in chaos",
    "start": "1711799",
    "end": "1717200"
  },
  {
    "text": "and ensure that it's safe and compliant and not everybody has the right permissions to do everything so you need to give a provide a safe environment",
    "start": "1717200",
    "end": "1724799"
  },
  {
    "text": "either through a different uh you know staging environment or in the production give certain rback or certain context to",
    "start": "1724799",
    "end": "1730799"
  },
  {
    "text": "some specific developers to be able to do it so this is something we need to you know uh create and uh make a",
    "start": "1730799",
    "end": "1738480"
  },
  {
    "text": "different solution out there for so it's open to the community and then we have a budgeting problem right because chaos is",
    "start": "1738480",
    "end": "1745320"
  },
  {
    "text": "very expensive of course if you're doing a hog or a you know CPU hog memory hog node drain so it's there's to toil in",
    "start": "1745320",
    "end": "1753200"
  },
  {
    "text": "your uh infra so your infra with overload uh spiking your chaos resource consumption and your budget so it's a",
    "start": "1753200",
    "end": "1759760"
  },
  {
    "text": "definitely an expensive thing to do so we need to uh be more Mindful and approach this as a framework rather than",
    "start": "1759760",
    "end": "1765200"
  },
  {
    "text": "you know an expensive uh experiment exploration so yeah that's about it from",
    "start": "1765200",
    "end": "1770840"
  },
  {
    "text": "my side thank you guys for joining in and listening to the talk uh you guys can scan the QR and leave some feedback",
    "start": "1770840",
    "end": "1777200"
  },
  {
    "text": "thank you so [Applause]",
    "start": "1777200",
    "end": "1782460"
  },
  {
    "text": "much awesome uh I'm open to taking questions but before that I also have one of the maintainers of litmus with me",
    "start": "1784799",
    "end": "1790480"
  },
  {
    "text": "so I just like to introduce sham to join me and we both both can take q&as",
    "start": "1790480",
    "end": "1797039"
  },
  {
    "text": "sh cool would you guys have any questions",
    "start": "1797039",
    "end": "1803600"
  },
  {
    "text": "we are",
    "start": "1803600",
    "end": "1805960"
  },
  {
    "text": "here if not it's fine I mean I don't mind we",
    "start": "1810399",
    "end": "1818600"
  },
  {
    "text": "do hello I've got a question over on your right where where are you on right hello okay hi uh you showed the Lima",
    "start": "1819080",
    "end": "1827039"
  },
  {
    "text": "stuff running kind of part of a cicd pipeline and so you had what I'm guessing is like an existing environment",
    "start": "1827039",
    "end": "1833720"
  },
  {
    "text": "set up where the application would be deployed and then you run all the stuff in um how effic at least that's my",
    "start": "1833720",
    "end": "1842120"
  },
  {
    "text": "understanding how efficient do you find that is that affecting like lead times of how much stuff gets through cicd if",
    "start": "1842120",
    "end": "1848519"
  },
  {
    "text": "stuff fails chaos do you still deploy it and then just be like this isn't",
    "start": "1848519",
    "end": "1853960"
  },
  {
    "text": "massively resist resilient but it'll be fine kind of what's the attitude and and",
    "start": "1853960",
    "end": "1859559"
  },
  {
    "text": "and setup around that so first thing it's not actually the cicd pipeline we have made it look like it's a cicd",
    "start": "1859559",
    "end": "1865639"
  },
  {
    "text": "pipeline but it's not it's actually uh your control plane so you're deploying components to your plane and then you're actually executing chaos in there so you",
    "start": "1865639",
    "end": "1872120"
  },
  {
    "text": "have your Dynamic execution plane you can choose which cluster you want to run it against but the idea here is uh once",
    "start": "1872120",
    "end": "1878360"
  },
  {
    "text": "you have a use case right you want to go for it and see the result with the chaos result CR that you get it might not be",
    "start": "1878360",
    "end": "1885240"
  },
  {
    "text": "you know it might give you the exact log or the exact F scenario that that you planned out and you might say that this isn't very effective so you might need",
    "start": "1885240",
    "end": "1891720"
  },
  {
    "text": "to change it to something else so you generally do B lead is a very simple example to be honest but uh you generally do things like uh node level",
    "start": "1891720",
    "end": "1899039"
  },
  {
    "text": "disruption or something that might actually go wrong like in case of tremendous load like Raj mentioned we he",
    "start": "1899039",
    "end": "1904960"
  },
  {
    "text": "used a j meter or like you know a load testing tool on top to simulate the exact kind of behavior so luses apis are",
    "start": "1904960",
    "end": "1911720"
  },
  {
    "text": "completely open so you can use the API as well as your own architecture and then plan it out accordingly so that way",
    "start": "1911720",
    "end": "1917320"
  },
  {
    "text": "it's more meanful for the individual use case yeah yeah do you sorry you probably",
    "start": "1917320",
    "end": "1923039"
  },
  {
    "text": "have okay do you test in production or do you stick it on test environments so",
    "start": "1923039",
    "end": "1928799"
  },
  {
    "text": "okay so that's interesting we do test in uh not in production we have it in production we done it as game days but",
    "start": "1928799",
    "end": "1934360"
  },
  {
    "text": "we test in preprod generally that's the safest that we think it is because um you know you definitely can break stuff",
    "start": "1934360",
    "end": "1940919"
  },
  {
    "text": "in production but you know cool I probably have more questions about litus but I recede my time sure go ahead uh",
    "start": "1940919",
    "end": "1949240"
  },
  {
    "text": "thank you for the talk uh how do you recognize the experiment in your traces uh in the you mean the",
    "start": "1949240",
    "end": "1955919"
  },
  {
    "text": "observability side yeah so",
    "start": "1955919",
    "end": "1962360"
  },
  {
    "text": "maybe yeah but how can you U distinguish if it was your experiment or a real",
    "start": "1972399",
    "end": "1978480"
  },
  {
    "text": "failure can you um I mean you want to specifically",
    "start": "1978480",
    "end": "1985000"
  },
  {
    "text": "see who ran it who ran the experiment in the trace is that it or you want to just see the result or what went wrong in the",
    "start": "1985000",
    "end": "1992240"
  },
  {
    "text": "experiment through the trace now let's say by the end of the month if you look at all the failures",
    "start": "1992240",
    "end": "1997760"
  },
  {
    "text": "and some of them were your experiments and some of them were real failers so",
    "start": "1997760",
    "end": "2003880"
  },
  {
    "text": "can you find that in traces yeah um yes we do have a general availability pipeline here at the top but yeah you",
    "start": "2003880",
    "end": "2009799"
  },
  {
    "text": "can customize it you have a not this the pro success perc but I mean in this",
    "start": "2009799",
    "end": "2015360"
  },
  {
    "text": "dashboard it's not shown but yeah you generally have you have to create your graffer dashboard such that you can actually count the number of you know",
    "start": "2015360",
    "end": "2021320"
  },
  {
    "text": "failures and you should not keep it the same as your um production I mean your production should have a different",
    "start": "2021320",
    "end": "2027039"
  },
  {
    "text": "dashboard definitely and the platform production no you definitely can do it",
    "start": "2027039",
    "end": "2033200"
  },
  {
    "text": "on production but a pre-product generally a replica of your production so you can definitely try it there and you can break production that's on you",
    "start": "2033200",
    "end": "2040200"
  },
  {
    "text": "uh but you can replicate the gra dashboard in there so this is more of a testing dashboard where you're seeing testing data from chaos from litmus not",
    "start": "2040200",
    "end": "2046760"
  },
  {
    "text": "the production dashboard than sure yeah hi hi I have a question is it",
    "start": "2046760",
    "end": "2054079"
  },
  {
    "text": "possible to declare these tests uh using yaml yes it definitely is so um and",
    "start": "2054079",
    "end": "2063118"
  },
  {
    "text": "litmas where we actually edit or you know where we do the blank canvas",
    "start": "2063119",
    "end": "2068398"
  },
  {
    "text": "uh the entire yaml is visible to you so you can edit your yaml and declare it as much you know with the granular details",
    "start": "2068399",
    "end": "2074040"
  },
  {
    "text": "that you want so the entire yaml is visible to you also if you want to create your own experiments you can do",
    "start": "2074040",
    "end": "2079878"
  },
  {
    "text": "that via the litmus SDK so it will help you bootstrap and get started and you can create your own uh and also for the",
    "start": "2079879",
    "end": "2087040"
  },
  {
    "text": "Hub the chaos sub where you can see all these faults right uh these are also declarative so you can take this faults",
    "start": "2087040",
    "end": "2092280"
  },
  {
    "text": "and you can create U your own thing not here but yeah these are just some",
    "start": "2092280",
    "end": "2097320"
  },
  {
    "text": "templat that we have but of course you can pick these templates as well and extend upon it use the SDK to make it",
    "start": "2097320",
    "end": "2102480"
  },
  {
    "text": "more declarative right and can you lock down the UI so that users don't create things from there and only through for",
    "start": "2102480",
    "end": "2109920"
  },
  {
    "text": "example flux or Argo for that use case what we what you can do there are two things you can of",
    "start": "2109920",
    "end": "2115760"
  },
  {
    "text": "course use the rback capabilities of litmus in Project setup uh members so",
    "start": "2115760",
    "end": "2121119"
  },
  {
    "text": "you can give your uh members permission or access to what kind of control they would want the second is you can",
    "start": "2121119",
    "end": "2126760"
  },
  {
    "text": "actually use the lias apis so that that way you can only give specific people um access or permission to do those tests",
    "start": "2126760",
    "end": "2134240"
  },
  {
    "text": "but we can't really lock down the UI because it's an admin panel uh but you can give uh access to whoever wants with",
    "start": "2134240",
    "end": "2140119"
  },
  {
    "text": "what level of granular details that's nice um when it comes to rbac and end users yeah as a cluster",
    "start": "2140119",
    "end": "2148359"
  },
  {
    "text": "admin I want my end users to have limited accessibility so namespaced",
    "start": "2148359",
    "end": "2153440"
  },
  {
    "text": "access and so I would expect uh some sort of service account impersonation to",
    "start": "2153440",
    "end": "2160640"
  },
  {
    "text": "uh to be in place is that planned or what implementation are you thinking of",
    "start": "2160640",
    "end": "2166640"
  },
  {
    "text": "to make this more multi-tenant so to speak I sh can answer",
    "start": "2166640",
    "end": "2172520"
  },
  {
    "text": "that can can you repeat your question yeah so if we have tenants in a cluster",
    "start": "2172760",
    "end": "2179640"
  },
  {
    "text": "we need to make sure that even if litmus is running with cluster admin",
    "start": "2179640",
    "end": "2185079"
  },
  {
    "text": "permissions let's say uh it itself when running test for a specific user or",
    "start": "2185079",
    "end": "2192200"
  },
  {
    "text": "tenant so to speak it should be limited to that tenants permission set yeah so",
    "start": "2192200",
    "end": "2198560"
  },
  {
    "text": "we uh like in the yl itself we have an option to provide the service account so if the service account which is binded",
    "start": "2198560",
    "end": "2205079"
  },
  {
    "text": "to that user uh can you show Shan yeah so if you will use that service account",
    "start": "2205079",
    "end": "2210160"
  },
  {
    "text": "which is does not have those permission then uh it will use only it will like you know it will not run that experiment",
    "start": "2210160",
    "end": "2216000"
  },
  {
    "text": "if that user does not have that permission okay uh because what I'm thinking of is even if like a user could perhaps",
    "start": "2216000",
    "end": "2223920"
  },
  {
    "text": "reference a service account that they should not be able to use um so is",
    "start": "2223920",
    "end": "2231000"
  },
  {
    "text": "it is it uh possible to restrict this service count to a specific name",
    "start": "2231000",
    "end": "2238040"
  },
  {
    "text": "space um yes so I mean this is a good requirement we can uh like an add a",
    "start": "2238040",
    "end": "2243200"
  },
  {
    "text": "validation the UI itself so if uh one user does not have permission Mission then I mean we will allow only the",
    "start": "2243200",
    "end": "2250599"
  },
  {
    "text": "specific users because we have the user management as well so we allow only those users we can white Whit list the",
    "start": "2250599",
    "end": "2257720"
  },
  {
    "text": "name space as well for a specific user so that we can add in a future road map but right now we do not have there yeah",
    "start": "2257720",
    "end": "2264800"
  },
  {
    "text": "yeah it's just some ideas that come to my mind and another idea like what this lady mentioned here about the status and",
    "start": "2264800",
    "end": "2272160"
  },
  {
    "text": "identifying whenever you have had an outage uh what I'm looking at is for example kerno which returns a result of",
    "start": "2272160",
    "end": "2280839"
  },
  {
    "text": "scans that it has performed um same with tecton it gives you a pipeline run so a",
    "start": "2280839",
    "end": "2287480"
  },
  {
    "text": "specific run of a pipeline as a crd so you see what has run which which parameters and when it ran uh so it's in",
    "start": "2287480",
    "end": "2294880"
  },
  {
    "text": "a similar fashion to implement everything using crds could be um of inspiration to look",
    "start": "2294880",
    "end": "2302079"
  },
  {
    "text": "at these patterns of design yeah we also have crd called chaos result so there you will see the all reports and",
    "start": "2302079",
    "end": "2309280"
  },
  {
    "text": "everything you you will see the target details and the historical data as well thank you yeah and in the if you see the",
    "start": "2309280",
    "end": "2315760"
  },
  {
    "text": "grafana dashboard as well there is a annotations so uh if there is some variation in the uh data then you can",
    "start": "2315760",
    "end": "2322440"
  },
  {
    "text": "see I mean can you show so in that anot annotations in that reason it means this",
    "start": "2322440",
    "end": "2329160"
  },
  {
    "text": "spike is because of the chaos so if there is no annotation it means it is not during the chaos okay so it is some",
    "start": "2329160",
    "end": "2335160"
  },
  {
    "text": "natural chaos or something cool thank you thanks yeah but these are great additions we definitely look into it",
    "start": "2335160",
    "end": "2342040"
  },
  {
    "text": "also what she mentioned about the grafana right we can also add a plugin built in something so it's easier yeah",
    "start": "2342040",
    "end": "2347119"
  },
  {
    "text": "cool uh we are a little out of time I would like to wrap up but we can definitely discuss uh off offline yeah",
    "start": "2347119",
    "end": "2354119"
  },
  {
    "text": "thank you thank you guys so much for the talk",
    "start": "2354119",
    "end": "2359599"
  }
]