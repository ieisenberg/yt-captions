[
  {
    "text": "just as expectations is a sort of 101 level talk okay we're not going to go super deep into some of the patterns",
    "start": "240",
    "end": "6420"
  },
  {
    "text": "we're not going to go super deep into some of the config but hopefully you walk away with a good understanding of resilience good understanding of",
    "start": "6420",
    "end": "12240"
  },
  {
    "text": "reliability and then you've got some tips and tricks that you can use with Linker D and with Emissary Ingress as",
    "start": "12240",
    "end": "17640"
  },
  {
    "text": "well and also a good understanding of what each of these things actually brings to the table what rate limits can",
    "start": "17640",
    "end": "23400"
  },
  {
    "text": "accomplish what Retros accomplish Etc et cetera perfect I'm Daniel this is Flynn we have worked",
    "start": "23400",
    "end": "30779"
  },
  {
    "text": "together for five plus years there were different companies and communities and so forth they're very active in the open source Community love to get involved in",
    "start": "30779",
    "end": "37559"
  },
  {
    "text": "the twitters you can jump on our respective slacks engage with us as well you know don't you feel free to come up just the end of the talk but don't worry",
    "start": "37559",
    "end": "43800"
  },
  {
    "text": "you can always engage this online as well I'm always happy to chat afterwards it's also worth pointing out for those",
    "start": "43800",
    "end": "49320"
  },
  {
    "text": "of you who might know me from the past the uh that at buoyant that is not a typo I am at brilliant now not an",
    "start": "49320",
    "end": "55199"
  },
  {
    "text": "ambassador fantastic so resilience when I always like to think about the you know why are",
    "start": "55199",
    "end": "61620"
  },
  {
    "text": "we doing this stuff right I'm a technologist you know Java programmed by heart and by background um but I always like to think why are we",
    "start": "61620",
    "end": "67799"
  },
  {
    "text": "thinking about a thing why should we care about reliability why should we care about resilience right the user",
    "start": "67799",
    "end": "73619"
  },
  {
    "text": "wants that reliable end-to-end experience but they don't really want to know about the the details right they",
    "start": "73619",
    "end": "79619"
  },
  {
    "text": "just want the web app to work they want to get a good you know good user experience right",
    "start": "79619",
    "end": "84900"
  },
  {
    "text": "you've got to handle north south and East-West traffic when you're",
    "start": "84900",
    "end": "89939"
  },
  {
    "text": "dealing with microservices back in my Java monolith days North South traffic coming from the user to the monolith",
    "start": "89939",
    "end": "95820"
  },
  {
    "text": "Happy Days right as we've split up to microservices I started to get Ruby but it'd go all these other things suddenly",
    "start": "95820",
    "end": "102000"
  },
  {
    "text": "I was implementing libraries to manage all the comms between the services we've pulled that out things like",
    "start": "102000",
    "end": "108180"
  },
  {
    "text": "observability security and resilience within the application now can be done",
    "start": "108180",
    "end": "113700"
  },
  {
    "text": "via a service mesh East-West so gotta think now north south east west as we'll",
    "start": "113700",
    "end": "119220"
  },
  {
    "text": "demonstrate as Lynn will demonstrate the patterns do differ whether you're at the edge or",
    "start": "119220",
    "end": "124920"
  },
  {
    "text": "within the mesh so some little gotchas little takeaways will go through there and despite what you're hearing at the",
    "start": "124920",
    "end": "130020"
  },
  {
    "text": "conference devops is not dead right um and self-service is required is my",
    "start": "130020",
    "end": "135540"
  },
  {
    "text": "pitch right and as a developer I've been an operator too right but I want to be able to do my work without interacting",
    "start": "135540",
    "end": "141780"
  },
  {
    "text": "with unnecessary tickets you know jira all this kind of stuff right I just want to do my work basically whether I'm",
    "start": "141780",
    "end": "148200"
  },
  {
    "text": "devil or Ops probably also worth pointing out that north south and east west have different patterns but they",
    "start": "148200",
    "end": "154800"
  },
  {
    "text": "are all required you don't get to just go oh I've got a resilience up at my north south level I'll just ignore East",
    "start": "154800",
    "end": "160440"
  },
  {
    "text": "West that does not work you have to think about it all the way through perfect seven perfectly if you have not",
    "start": "160440",
    "end": "165900"
  },
  {
    "text": "bumped in this book by Mike Nygaard it is amazing check it out pragmatic programmers um he goes into resilience patterns like",
    "start": "165900",
    "end": "173160"
  },
  {
    "text": "our standard design patterns right um second edition of the book is out now I learned so much from the first edition",
    "start": "173160",
    "end": "179519"
  },
  {
    "text": "it was like 10 years ago and it's been updated with microservices with Cloud",
    "start": "179519",
    "end": "184680"
  },
  {
    "text": "um in mind although it is a technology agnostic book it goes through retries",
    "start": "184680",
    "end": "189780"
  },
  {
    "text": "timeouts rate limits which we're going to cover today with Edge sorry the Emissary Ingress and with Linker D it",
    "start": "189780",
    "end": "196260"
  },
  {
    "text": "also goes through things like bulkheads if you think in the kubernetes land that's like your quotas your resource",
    "start": "196260",
    "end": "201959"
  },
  {
    "text": "quotas right you don't want things overwhelming or consuming too many resources circuit breakers you can do",
    "start": "201959",
    "end": "207720"
  },
  {
    "text": "like in the mesh that you can do in terms of like say Envoy update a little work on Envoy there is a mesh sort of or",
    "start": "207720",
    "end": "213840"
  },
  {
    "text": "proxy level circuit breaking and if you're from the Java world and I'm sure other worlds as well there's application",
    "start": "213840",
    "end": "219300"
  },
  {
    "text": "Level circuit breaking things like histrix from the Netflix stack I did a lot of work with history 6. spring have",
    "start": "219300",
    "end": "224760"
  },
  {
    "text": "got a very similar pattern we're not going to cover bulkheads and circuit breakers today but like it's been said",
    "start": "224760",
    "end": "230280"
  },
  {
    "text": "they are an important thing in the toolbox this is kind of a 101 talk but do bear in mind there's other patterns",
    "start": "230280",
    "end": "235680"
  },
  {
    "text": "out there excellent uh quick intro to Emissary Ingress it is an open source cncf",
    "start": "235680",
    "end": "243060"
  },
  {
    "text": "project incubation level if you haven't heard of it do check out you know the website the GitHub site and pop along",
    "start": "243060",
    "end": "249299"
  },
  {
    "text": "with active slack Channel as well it's all about getting your user traffic into your backend Services it is an edge",
    "start": "249299",
    "end": "256859"
  },
  {
    "text": "Gateway API Gateway call it what you will but the main thing is about getting that user traffic into the back end",
    "start": "256859",
    "end": "263759"
  },
  {
    "text": "why did option thing like you have been coding on it for since Inception you were the lead engineer right since 2017.",
    "start": "263759",
    "end": "270720"
  },
  {
    "text": "yeah so it's battle tested right that's one of the things like you know there's many Serene dresses out there but this is Battle tested it's used massive scale",
    "start": "270720",
    "end": "277320"
  },
  {
    "text": "at various different companies and it's Envoy powered under the hood so we all know in love Envoy and we've wrapped",
    "start": "277320",
    "end": "283199"
  },
  {
    "text": "that on top with the north-south use case in mind if you think about the primary role of",
    "start": "283199",
    "end": "289139"
  },
  {
    "text": "an Ingress of an API Gateway it is literally mapping from we've got Jane in this sample quote to a relevant back-end",
    "start": "289139",
    "end": "296340"
  },
  {
    "text": "service right we've also got Mark here going through to backend service from a security perspective we might",
    "start": "296340",
    "end": "302820"
  },
  {
    "text": "want to stop that we might have some auth in place right that has to stop that happening or the X might actually",
    "start": "302820",
    "end": "308040"
  },
  {
    "text": "represent something breaking within the application right and that's where you need observability rate limiting to",
    "start": "308040",
    "end": "314160"
  },
  {
    "text": "Links app development Focus we're mainly focusing on the middle two today the rate limiting and the resilience with",
    "start": "314160",
    "end": "320340"
  },
  {
    "text": "the app development sort of mindset as well but this is the role of on Ingress you're getting that user traffic front",
    "start": "320340",
    "end": "326039"
  },
  {
    "text": "to back terms of configurations this you know if",
    "start": "326039",
    "end": "331680"
  },
  {
    "text": "you configured any kind of proxy before any kind of API Gateway this should not be a big sort of change for you this is",
    "start": "331680",
    "end": "337979"
  },
  {
    "text": "our custom resource mapping route back-end service you can also go fancy you can do Canary",
    "start": "337979",
    "end": "343860"
  },
  {
    "text": "with weights 10 of traffic you can also add timeouts which we're going to cover right and you can go even deeper with",
    "start": "343860",
    "end": "350940"
  },
  {
    "text": "labels which we'll use for rate limiting which I'll explain a bit later you also need to set up things like The",
    "start": "350940",
    "end": "357000"
  },
  {
    "text": "Listener right listening to Ports you're going to be setting up the host probably some TLS and so forth as well and of",
    "start": "357000",
    "end": "362940"
  },
  {
    "text": "course you want to set up the rate limit service which we'll walk you through later and all of this you'll notice is",
    "start": "362940",
    "end": "368880"
  },
  {
    "text": "by a kubernetes yaml custom resources right whatever your pipeline is git Ops or CI pipeline CD pipeline you can push",
    "start": "368880",
    "end": "376320"
  },
  {
    "text": "your like deployments your services down that you can push this config down that as well which is what I love about this",
    "start": "376320",
    "end": "381960"
  },
  {
    "text": "kind of both from the Linker D and Emissary perspective it's kubernetes native which is which is great",
    "start": "381960",
    "end": "388319"
  },
  {
    "text": "just having to think about it right but there is different personas at work here Jane are Ops our Dev Persona and Julian",
    "start": "388319",
    "end": "395100"
  },
  {
    "text": "are Ops Persona you can split the workloads right and that the operator sets the guard rails that's the defaults",
    "start": "395100",
    "end": "401280"
  },
  {
    "text": "and then me as a developer I go in and do my day-to-day work without needing to constantly bug them so think about this",
    "start": "401280",
    "end": "407039"
  },
  {
    "text": "you know there's often ability of security be observability be it in our case resilience the two personas working",
    "start": "407039",
    "end": "413100"
  },
  {
    "text": "hand in hand but there's often different ways of configuring the tools which we'll show a bit today as well",
    "start": "413100",
    "end": "420680"
  },
  {
    "text": "it's always interesting to hear Daniel do that one rather than me doing that one dance nice job",
    "start": "421039",
    "end": "427639"
  },
  {
    "text": "so uh this is the LinkedIn shock and all slide lots of logos and numbers and things",
    "start": "427639",
    "end": "433560"
  },
  {
    "text": "like that this is the real takeaway link reducer service mesh it's all about mediating monitoring and adapting the",
    "start": "433560",
    "end": "441539"
  },
  {
    "text": "East-West traffic from service to service Lincoln's purpose in life is to give you what you need to create highly",
    "start": "441539",
    "end": "447539"
  },
  {
    "text": "secure reliable observable Cloud native applications and to make those tools available free of charge",
    "start": "447539",
    "end": "454259"
  },
  {
    "text": "um all of the logos back there thought that this was a good idea all the people starring the GitHub repo thought that",
    "start": "454259",
    "end": "459660"
  },
  {
    "text": "was a good idea I'd also like to point out we are currently the only cncf graduated service mesh where that means",
    "start": "459660",
    "end": "466139"
  },
  {
    "text": "that we are considered as mature as kubernetes itself is um",
    "start": "466139",
    "end": "471300"
  },
  {
    "text": "Emissary and Emissary Ingress and Lincoln work out really nicely together from linkerty's perspective Emissary is",
    "start": "471300",
    "end": "479460"
  },
  {
    "text": "just another workload in the mesh From emissary's perspective Linker D is just another chunk of the kubernetes",
    "start": "479460",
    "end": "485880"
  },
  {
    "text": "networking layer so you can literally just stick the two of them in the same",
    "start": "485880",
    "end": "491039"
  },
  {
    "text": "cluster and they start working together which is really lovely awesome I think oh yes sorry I should point out",
    "start": "491039",
    "end": "500220"
  },
  {
    "text": "the way lingerty works is by injecting these proxies next to each of the services and then having it arranging",
    "start": "500220",
    "end": "506580"
  },
  {
    "text": "things so that kubernetes will route all of the traffic Services service through the proxies there's also a control plane that keeps",
    "start": "506580",
    "end": "513180"
  },
  {
    "text": "track of what the proxies are supposed to be doing and that's really kind of all there is to it I think you were going to talk",
    "start": "513180",
    "end": "519839"
  },
  {
    "text": "about the demo architecture so we now dive into some code Flynn's going to be doing some live coding so I hope the",
    "start": "519839",
    "end": "525060"
  },
  {
    "text": "demo gods are with us but just to set this up this is the very simple architecture we set up just to provide a",
    "start": "525060",
    "end": "530640"
  },
  {
    "text": "realistic kind of use case right we have our faces GUI talking through Emissary",
    "start": "530640",
    "end": "535740"
  },
  {
    "text": "actually let me back up sorry apologies just in terms of it I'll go the other way the smiley service is responsible",
    "start": "535740",
    "end": "542700"
  },
  {
    "text": "for sending back Smileys okay deep in our core graph the color service is",
    "start": "542700",
    "end": "548160"
  },
  {
    "text": "responsible for sending back colors the face service Aggregates these together",
    "start": "548160",
    "end": "553500"
  },
  {
    "text": "so you get green smiley face right when everything is working well that's what we get",
    "start": "553500",
    "end": "558839"
  },
  {
    "text": "in theory we should see lots of this in the browser and we do the demo yeah and then going back in again you",
    "start": "558839",
    "end": "566100"
  },
  {
    "text": "imagine we're calling through our faces GUI it's a single page web app through Emissary into the back end and you'll",
    "start": "566100",
    "end": "573240"
  },
  {
    "text": "notice then there is lots of lovely linkies our Lobster from Linker d uh acting as a sidecar next to the services",
    "start": "573240",
    "end": "580200"
  },
  {
    "text": "that's the service mesh part so I think back to you this is what you",
    "start": "580200",
    "end": "585959"
  },
  {
    "text": "should always see when we're running this demo lots and lots of smiley faces and a green background",
    "start": "585959",
    "end": "592620"
  },
  {
    "text": "this is not what we're going to see at the start let me just be clear about that",
    "start": "592620",
    "end": "597959"
  },
  {
    "text": "um there are a lot of different things that you might see the cursing face when the smiley service is broken you can see",
    "start": "597959",
    "end": "603540"
  },
  {
    "text": "a gray background when the color service is broken you can see the exploding head if the faces application is a face of",
    "start": "603540",
    "end": "611399"
  },
  {
    "text": "surface itself just has been completely overwhelmed you can see this sort of thing for timeouts one of the things",
    "start": "611399",
    "end": "617580"
  },
  {
    "text": "that was deeply fascinating about this was we have three services and I legit even though I'm the one who",
    "start": "617580",
    "end": "625140"
  },
  {
    "text": "wrote all three of these things and put the whole thing together there were points where I had to use all of the",
    "start": "625140",
    "end": "631260"
  },
  {
    "text": "tools both on the Emissary side and the Lincoln side to figure out what was going on in my own demo even with just",
    "start": "631260",
    "end": "636720"
  },
  {
    "text": "three applications this stuff gets very very complex very quickly which is what we're going to",
    "start": "636720",
    "end": "642000"
  },
  {
    "text": "look at now uh oh yes one other thing the web app is actually willing to show",
    "start": "642000",
    "end": "648660"
  },
  {
    "text": "the user old data if the services are responding for our purposes in the demo you'll see that little counter ticking",
    "start": "648660",
    "end": "655079"
  },
  {
    "text": "up when it has had something that's a little confusing but decided it's okay I can keep showing this data it'll be all",
    "start": "655079",
    "end": "660300"
  },
  {
    "text": "right all right let's see if the Democracy with us",
    "start": "660300",
    "end": "667079"
  },
  {
    "text": "um I'm not actually going to show the installation of Emissary and linkerty",
    "start": "667079",
    "end": "673140"
  },
  {
    "text": "and all that we have this we have a cluster running it's actually in this case it's a k3d cluster running on this",
    "start": "673140",
    "end": "679019"
  },
  {
    "text": "laptop could be anything doesn't really matter we've got our single page web operating here",
    "start": "679019",
    "end": "685860"
  },
  {
    "text": "we would like to see a grid of smiley faces on green backgrounds and you will",
    "start": "685860",
    "end": "691800"
  },
  {
    "text": "notice that we are not in fact seeing that places where you see the cell just",
    "start": "691800",
    "end": "697560"
  },
  {
    "text": "vanish are because something just took way too long and the web app gave up the red background is where we couldn't even",
    "start": "697560",
    "end": "704399"
  },
  {
    "text": "talk to the face service so I guess let's go ahead and get started here",
    "start": "704399",
    "end": "711380"
  },
  {
    "text": "the first thing we can do is we can see if we can get rid of that bit with the frowny face on the red",
    "start": "711660",
    "end": "717779"
  },
  {
    "text": "background we're going to do that by telling Emissary to do retries automatically if an error comes back",
    "start": "717779",
    "end": "724140"
  },
  {
    "text": "from the face service so the lines in green there we're adding a retry policy to the mapping for the",
    "start": "724140",
    "end": "730680"
  },
  {
    "text": "face service so that we're basically telling Emissary if you get any 5xx response retry it",
    "start": "730680",
    "end": "737579"
  },
  {
    "text": "only retry it once but retry it now let's go ahead and apply that one",
    "start": "737579",
    "end": "744240"
  },
  {
    "text": "um we are telling Emissary to only retry once just because that makes it a little",
    "start": "744240",
    "end": "749640"
  },
  {
    "text": "bit simpler to reason about what's going on we don't necessarily expect that that will get rid of all of these errors",
    "start": "749640",
    "end": "755880"
  },
  {
    "text": "because we only get one retry it's possible to you know get a failure retry and then immediately get another failure",
    "start": "755880",
    "end": "761579"
  },
  {
    "text": "but you can already see from applying this we have a lot fewer of those simply",
    "start": "761579",
    "end": "766740"
  },
  {
    "text": "by telling Emissary go ahead and do the retry also notice we haven't changed anything at all in the application",
    "start": "766740",
    "end": "773459"
  },
  {
    "text": "all we have changed is a bit in our in our API Gateway",
    "start": "773459",
    "end": "779399"
  },
  {
    "text": "so let's see if we can get rid of the cursing face from the smiley service we'll do exactly the same thing we'll",
    "start": "779399",
    "end": "785579"
  },
  {
    "text": "tell Emissary to do a retry um any guesses as to what should happen here anybody",
    "start": "785579",
    "end": "793339"
  },
  {
    "text": "all right let's do that differently raise your hand if you think this will work nobody",
    "start": "793620",
    "end": "799800"
  },
  {
    "text": "okay raise your hand if you think it won't work",
    "start": "799800",
    "end": "804839"
  },
  {
    "text": "oh let's find out",
    "start": "804839",
    "end": "810600"
  },
  {
    "text": "um in point of fact it does not work it has absolutely no",
    "start": "810600",
    "end": "816660"
  },
  {
    "text": "effect and the reason for this is the call from the face service to the smiley service if you remember the way the app",
    "start": "816660",
    "end": "822300"
  },
  {
    "text": "was put together it doesn't go through Emissary at all it happens past Emissary",
    "start": "822300",
    "end": "827339"
  },
  {
    "text": "Emissary has no ability to affect this so instead we will tell linkerty to",
    "start": "827339",
    "end": "832380"
  },
  {
    "text": "retry that things are a little bit different in terms of the configuration on the",
    "start": "832380",
    "end": "837779"
  },
  {
    "text": "Emissary side sorry about that uh on the Emissary side we had to tell it right sorry on a 5xx and you get to do one",
    "start": "837779",
    "end": "845279"
  },
  {
    "text": "retry and on the Linker D side we just say yeah yeah this is rechriable um there you can control this more we",
    "start": "845279",
    "end": "852600"
  },
  {
    "text": "don't need to in this case that basically is telling Linker D yeah any of the five x axes will retry Linker D",
    "start": "852600",
    "end": "859019"
  },
  {
    "text": "has a concept of a retry budget where it will just keep retrying until you go",
    "start": "859019",
    "end": "864720"
  },
  {
    "text": "over the retry budget by default I believe that's 20 as long as not more than 20 percent of the traffic is coming",
    "start": "864720",
    "end": "870720"
  },
  {
    "text": "from retries Lincoln will keep retrying uh you can tune that but often you don't",
    "start": "870720",
    "end": "875940"
  },
  {
    "text": "really need to and you can see from applying that that hey look now we're getting a bunch of smiley faces and no cursing no cursing is good",
    "start": "875940",
    "end": "883680"
  },
  {
    "text": "we can repeat the same thing and see if we can make the gray colors go away",
    "start": "883680",
    "end": "888680"
  },
  {
    "text": "and yeah the answer is they go away from retrying things you'll also notice every",
    "start": "892560",
    "end": "897899"
  },
  {
    "text": "so often we still see that red background because again Emissary is only doing one retry we could go through",
    "start": "897899",
    "end": "903660"
  },
  {
    "text": "and play with a number of retries we could tell that this area is okay to do two retries we could tell it five you",
    "start": "903660",
    "end": "908940"
  },
  {
    "text": "know whatever um some of them will probably always be able to sneak through a little bit and",
    "start": "908940",
    "end": "914760"
  },
  {
    "text": "so that's a thing to be aware of we still have a bunch of cases where",
    "start": "914760",
    "end": "920459"
  },
  {
    "text": "things are taking too long and the cell is just fading off so let's go through and do some timeouts",
    "start": "920459",
    "end": "927360"
  },
  {
    "text": "here we're going to do timeouts from the other direction retry as we started at the top of the call graph and worked our",
    "start": "927360",
    "end": "932639"
  },
  {
    "text": "way down just to demonstrate that you can do this the other direction with timeouts we're",
    "start": "932639",
    "end": "937680"
  },
  {
    "text": "going to start deep in the call graph and then work our way back up the other thing that's worth pointing out here is adding timeouts is not",
    "start": "937680",
    "end": "946079"
  },
  {
    "text": "really about protecting your services adding timeouts is about giving your client the ability to do something when",
    "start": "946079",
    "end": "952560"
  },
  {
    "text": "it takes too long and making it easy for the client it's giving your client some agency to decide to decide what to do",
    "start": "952560",
    "end": "959040"
  },
  {
    "text": "in this particular case if the face service can't talk to the color service it'll start showing it as",
    "start": "959040",
    "end": "964500"
  },
  {
    "text": "a pink background because it took too long so we see some pink backgrounds here we also see that there are already",
    "start": "964500",
    "end": "969720"
  },
  {
    "text": "fewer cells Vanishing because now there's less stuff taking too long",
    "start": "969720",
    "end": "975660"
  },
  {
    "text": "we can do exactly the same thing for the smiley service where we'll see the sleeping face if",
    "start": "975660",
    "end": "982320"
  },
  {
    "text": "things start taking too long and even at this point we don't really see any more of those cells just",
    "start": "982320",
    "end": "988199"
  },
  {
    "text": "Vanishing and staying vanished we can of course do the same thing at",
    "start": "988199",
    "end": "994620"
  },
  {
    "text": "the Emissary layer so we can just tell Emissary hey whatever's",
    "start": "994620",
    "end": "1000320"
  },
  {
    "text": "going on deep in the call graph there if it takes you too long to hear back from the face service just go and give up on",
    "start": "1000320",
    "end": "1007459"
  },
  {
    "text": "that and in this particular case this is where we'll start seeing those",
    "start": "1007459",
    "end": "1013519"
  },
  {
    "text": "counters appear where everywhere there the GUI has decided I'm going to go ahead and I'm going to show some old",
    "start": "1013519",
    "end": "1019279"
  },
  {
    "text": "data here that that counter is really just there for demos did you also notice the one up",
    "start": "1019279",
    "end": "1025339"
  },
  {
    "text": "there in the upper sorry some of these where you'll see the sleeping face that's sort of grayed out that's where",
    "start": "1025339",
    "end": "1030438"
  },
  {
    "text": "the client has just decided all right is this this is taking too long in general anyway",
    "start": "1030439",
    "end": "1035780"
  },
  {
    "text": "but the point here is that the client the web app now has the",
    "start": "1035780",
    "end": "1041360"
  },
  {
    "text": "ability to decide what to do when things take too long rather than just stalling",
    "start": "1041360",
    "end": "1046819"
  },
  {
    "text": "and giving the user something weird and confusing from the user's point of view",
    "start": "1046819",
    "end": "1053840"
  },
  {
    "text": "that leaves us with rate limits and we will let Daniel talk about rate limiting yeah",
    "start": "1053840",
    "end": "1060820"
  },
  {
    "text": "so well all right well I'll say one more thing here um",
    "start": "1061940",
    "end": "1067220"
  },
  {
    "text": "imagine if you will that one of your developers has deployed something where suddenly your service gets a lot slower",
    "start": "1067220",
    "end": "1073460"
  },
  {
    "text": "somewhere around on the call graph um so we've just done that we've just modified this deployment and you'll",
    "start": "1073460",
    "end": "1080240"
  },
  {
    "text": "probably see a bunch of red pop up here as the deployment recycles but now it",
    "start": "1080240",
    "end": "1085460"
  },
  {
    "text": "will start exploding if things get hammered too much like that",
    "start": "1085460",
    "end": "1091820"
  },
  {
    "text": "face and then it is the next bit of him for the show yes go ahead yeah perfect",
    "start": "1091820",
    "end": "1097179"
  },
  {
    "text": "so the rate limiting looks a little bit different than perhaps you might expect with a Time ax and the retries it's like",
    "start": "1097179",
    "end": "1102799"
  },
  {
    "text": "pretty self-explanatory correct but with the the way we've exposed the",
    "start": "1102799",
    "end": "1108200"
  },
  {
    "text": "functionality in the rate limits is based on the original lift rate limiter so lift is in the company we all",
    "start": "1108200",
    "end": "1113840"
  },
  {
    "text": "probably jump to lift to get here right um the way they expose their rate limited was very much based on labels",
    "start": "1113840",
    "end": "1120140"
  },
  {
    "text": "the idea being you could apply a bunch of labels to a mapping that data then",
    "start": "1120140",
    "end": "1125419"
  },
  {
    "text": "gets passed down to the rate limiter service that we created or there is about the Box options too and with that",
    "start": "1125419",
    "end": "1132140"
  },
  {
    "text": "data being passed down through you can make rate limiting decisions so I've got some quite basic examples here I think",
    "start": "1132140",
    "end": "1137840"
  },
  {
    "text": "I've just used a generic key right yeah but you can passport and by default properties such as the remote IP the",
    "start": "1137840",
    "end": "1144220"
  },
  {
    "text": "source and destination a bunch of useful information gets passed down through and",
    "start": "1144220",
    "end": "1149240"
  },
  {
    "text": "you can say hey I want a rate limit based on this IP I want to rate them up based on these headers being injected",
    "start": "1149240",
    "end": "1155900"
  },
  {
    "text": "for example very customizable do advise you to check out the MSO docs because it",
    "start": "1155900",
    "end": "1161000"
  },
  {
    "text": "is quite rich and when I say Rich can mean complicated sometimes right but it's not when you take a pause and go",
    "start": "1161000",
    "end": "1166940"
  },
  {
    "text": "through it but it isn't quite as perhaps obvious as what Flynn's already shown with the retries and the timeouts so",
    "start": "1166940",
    "end": "1172520"
  },
  {
    "text": "this is why I make down making Daniel talk about the rate levels yes thanks then appreciate it anytime yeah the the",
    "start": "1172520",
    "end": "1178280"
  },
  {
    "text": "good thing is I've got a sample Redlands app that I wrote in some go there is an old Java one I wrote back and still out",
    "start": "1178280",
    "end": "1184400"
  },
  {
    "text": "there on the interwebs as well and we'll show we can show the code at the end but we've put the link in there pop along to",
    "start": "1184400",
    "end": "1189919"
  },
  {
    "text": "the repo you can see I've actually used um honeycomb honeycomb.ios leaky bucket",
    "start": "1189919",
    "end": "1195320"
  },
  {
    "text": "algorithm so very simple go service there's an API protobuf API you have to implement for the rate limit set rate",
    "start": "1195320",
    "end": "1201679"
  },
  {
    "text": "limited service so I generated my stubs from that used honeycomb's leaky bucket which I think was eight RPS in the end",
    "start": "1201679",
    "end": "1208100"
  },
  {
    "text": "of film we did didn't we yeah and and if you read carefully on the previous screen here you would have noticed that",
    "start": "1208100",
    "end": "1214400"
  },
  {
    "text": "the environment variable we set on the fish service has it blow up at eight and a half requests per second so doing",
    "start": "1214400",
    "end": "1221419"
  },
  {
    "text": "setting it let me again eight per second should give us should give us some relief fingers crossed so um",
    "start": "1221419",
    "end": "1227179"
  },
  {
    "text": "everything's highly customizable like you see you can look at the labels being passed in you can look at the headers and make those rate limiting decisions",
    "start": "1227179",
    "end": "1233480"
  },
  {
    "text": "and I'm happy to drop by the booth later on happy to walk you through and some of the options like there for the rate limiting but without further Ado let's",
    "start": "1233480",
    "end": "1240020"
  },
  {
    "text": "and I give this a try and we should see a lot less explosions",
    "start": "1240020",
    "end": "1247100"
  },
  {
    "text": "now the nature of this you know we have to go through and refresh all these cells right so they're not going to",
    "start": "1247100",
    "end": "1253460"
  },
  {
    "text": "vanish immediately but if we give it a few seconds we should see the exploding heads go away",
    "start": "1253460",
    "end": "1259039"
  },
  {
    "text": "that is always good when the general works right it's always nice fantastic",
    "start": "1259039",
    "end": "1265220"
  },
  {
    "text": "the last thing that we should point out here oh by the way sorry there are two last things we should point out one is",
    "start": "1265220",
    "end": "1272240"
  },
  {
    "text": "if we turn off the counters then that gives a better example of if you had an end user who was using this an SBA like",
    "start": "1272240",
    "end": "1279980"
  },
  {
    "text": "this this would be more of the thing that they would see where okay every so often",
    "start": "1279980",
    "end": "1285740"
  },
  {
    "text": "they'll get a delay but for the most part they're just going to see smiley faces on green backgrounds which is what they're supposed to see",
    "start": "1285740",
    "end": "1293240"
  },
  {
    "text": "so we have here an application that's composed of honestly some pretty badly",
    "start": "1293240",
    "end": "1300140"
  },
  {
    "text": "behaving microservices these are terrible um but we've been able to use Emissary",
    "start": "1300140",
    "end": "1305960"
  },
  {
    "text": "Ingress and linkerty to mitigate some of the terribleness here and overall give the user an experience that can actually",
    "start": "1305960",
    "end": "1313580"
  },
  {
    "text": "be pretty good without having to go mess with the code of the application and you know we did this in what 10 minutes yep",
    "start": "1313580",
    "end": "1320600"
  },
  {
    "text": "you know just going through and tweaking things obviously",
    "start": "1320600",
    "end": "1325700"
  },
  {
    "text": "you're not actually going to fix this without fixing the application code which we will not show you here that's a",
    "start": "1325700",
    "end": "1332240"
  },
  {
    "text": "little bit outside the scope of Emissary but the point here is that even before you fix the application code there's an",
    "start": "1332240",
    "end": "1338600"
  },
  {
    "text": "enormous amount of stuff you can do to mitigate the effects of badly behaving code and give your users a better",
    "start": "1338600",
    "end": "1344000"
  },
  {
    "text": "experience particularly on that note we talked earlier about the different personas right I've definitely worked in",
    "start": "1344000",
    "end": "1349880"
  },
  {
    "text": "an Ops Persona where it was hard to get some of the developers to engage and that's another problem that that is devops right to work on that kind of",
    "start": "1349880",
    "end": "1356059"
  },
  {
    "text": "thing but at the same time I had a limited set of tools available to me to me as a platform engineer as an operator",
    "start": "1356059",
    "end": "1362480"
  },
  {
    "text": "and it got me 80 of the way there right there was a couple of super old you know really janky kind of Heritage apps and I",
    "start": "1362480",
    "end": "1369740"
  },
  {
    "text": "could protect them in a bubble somewhat to Flynn's Point clients then calling could interact for the most part with",
    "start": "1369740",
    "end": "1375500"
  },
  {
    "text": "those as though they were reliable you know please do document these things right in terms of you know here be dragons kind of thing right and ideally",
    "start": "1375500",
    "end": "1381980"
  },
  {
    "text": "fix it to Flynn's point but this but super old service we just no one went there which couldn't fix it right so we",
    "start": "1381980",
    "end": "1387140"
  },
  {
    "text": "protect it in a bubble with retries rate limits and timeouts and as an operator that was a good set of tools in my",
    "start": "1387140",
    "end": "1392659"
  },
  {
    "text": "toolbox then I went and chat to developers what can we do to actually make this service you know more more reliable right",
    "start": "1392659",
    "end": "1399020"
  },
  {
    "text": "and if anybody's curious these apps the services down in the mesh are actually hard-coded to fail 20 of the time which",
    "start": "1399020",
    "end": "1406760"
  },
  {
    "text": "is just God off in terms of it's a terrible",
    "start": "1406760",
    "end": "1412520"
  },
  {
    "text": "terrible application and they're also hard-coded to do things like something",
    "start": "1412520",
    "end": "1417679"
  },
  {
    "text": "like half the time they take longer than a second to respond so terrible metrics down there at the application Level but",
    "start": "1417679",
    "end": "1424400"
  },
  {
    "text": "we're still able to deliver a decent user user experience just by messing",
    "start": "1424400",
    "end": "1429679"
  },
  {
    "text": "with things in the API Gateway ad in the service mesh so please do not take this",
    "start": "1429679",
    "end": "1436760"
  },
  {
    "text": "as any endorsement of a 20 failure rate being acceptable or anything like that",
    "start": "1436760",
    "end": "1442640"
  },
  {
    "text": "but yeah any uh final wrap up",
    "start": "1442640",
    "end": "1449620"
  },
  {
    "text": "do we have more on the slides yeah just a final bit of conclusion there we go we do we do",
    "start": "1449960",
    "end": "1455960"
  },
  {
    "text": "so just coming to the full circle right hopefully you've taken away from this that users want the Reliable Software",
    "start": "1455960",
    "end": "1461059"
  },
  {
    "text": "they don't necessarily care about the internal details that's our jobs right as developers as QA as platform",
    "start": "1461059",
    "end": "1466700"
  },
  {
    "text": "engineers you do need to think about this end to end but you need to like",
    "start": "1466700",
    "end": "1472640"
  },
  {
    "text": "ideally start with the services but in reality you're probably going to be looking at communications right like",
    "start": "1472640",
    "end": "1477740"
  },
  {
    "text": "we've talked about you want to fix things if they're broken but it's a nice tool to have in your toolbox and these",
    "start": "1477740",
    "end": "1483200"
  },
  {
    "text": "Cloud native Communications the north south east west think about the whole thing right it's very tempting like if",
    "start": "1483200",
    "end": "1489679"
  },
  {
    "text": "you're really into your meshes just to try and solve everything in the mesh if you're really into Arabia Gateway just",
    "start": "1489679",
    "end": "1494720"
  },
  {
    "text": "solve everything there but you know something like Mr ingas something like link a d together hopefully you've seen",
    "start": "1494720",
    "end": "1500240"
  },
  {
    "text": "that give you a lot more options right there is a few dragons we didn't perhaps touch on about timeouts you can it's",
    "start": "1500240",
    "end": "1505700"
  },
  {
    "text": "very easy to measure some of the time out sometimes with like timeouts at The Edge versus timeouts in the in the in the mesh as well talk about that",
    "start": "1505700",
    "end": "1512900"
  },
  {
    "text": "afterwards if anybody wants to know some of the Dragons we ran into while we're doing this there were a lot of them but",
    "start": "1512900",
    "end": "1518659"
  },
  {
    "text": "for the most part I really do like the combination of the two separate things Ingress Gateway and the mesh gives me",
    "start": "1518659",
    "end": "1524539"
  },
  {
    "text": "the options right the combination is very powerful love it and the mix you know Flynn said it perfectly at the end",
    "start": "1524539",
    "end": "1530240"
  },
  {
    "text": "right a mix of retries Timex and rate limits does genuinely go a long way I've seen some folks get a bit too into the",
    "start": "1530240",
    "end": "1536419"
  },
  {
    "text": "circuit breakers too early because they're kind of the hotness right taking the Java world back a few years ago everyone was loving histrix and at the",
    "start": "1536419",
    "end": "1542960"
  },
  {
    "text": "application Level it gives you more options again we're at the kind of wire level here right we're at the you know service service comms level",
    "start": "1542960",
    "end": "1549919"
  },
  {
    "text": "um but honestly retries timeouts rate limits I'm a big fan of keeping it simple yeah",
    "start": "1549919",
    "end": "1556600"
  },
  {
    "text": "um and make sure your solution is developer focused and self-service that's why you know build on the tools that are out there right I've seen some",
    "start": "1556640",
    "end": "1562400"
  },
  {
    "text": "folks try to actually hack all this into libraries um and you know that can work but I'm a",
    "start": "1562400",
    "end": "1567620"
  },
  {
    "text": "big fan of like hey some other folks have already done this stuff as an open source project there's a cncf project",
    "start": "1567620",
    "end": "1572860"
  },
  {
    "text": "contribute get involved and contributions can be docs because definitely Emissary",
    "start": "1572860",
    "end": "1578200"
  },
  {
    "text": "we love going to contributions right but it can be code as well so rather than Do",
    "start": "1578200",
    "end": "1583220"
  },
  {
    "text": "Your Own Thing rather than try and push it in you know super Ops Focus or super Dev focused um think about that um you know",
    "start": "1583220",
    "end": "1589400"
  },
  {
    "text": "end-to-end experience developer focused self-service and the cncf tools are all about that kubernetes cloud native is",
    "start": "1589400",
    "end": "1595760"
  },
  {
    "text": "all about declarative self-service config one thing we didn't put on the slide that occurs to me we probably should",
    "start": "1595760",
    "end": "1601880"
  },
  {
    "text": "have is just another note about the fact that remember the app we were demonstrating is very very simple",
    "start": "1601880",
    "end": "1608480"
  },
  {
    "text": "and shows some extremely complex behaviors as you start looking at how those different things interact with",
    "start": "1608480",
    "end": "1613940"
  },
  {
    "text": "each other so we didn't really talk about it much in this slide we didn't talk much about",
    "start": "1613940",
    "end": "1619039"
  },
  {
    "text": "the observability and debugging part but there are a lot of tools to help with that as well and it can be very very",
    "start": "1619039",
    "end": "1626779"
  },
  {
    "text": "helpful to think about this from the beginning of your developing your app rather than waiting until things are",
    "start": "1626779",
    "end": "1632299"
  },
  {
    "text": "going wrong yeah 100 final slide uh references there",
    "start": "1632299",
    "end": "1637400"
  },
  {
    "text": "the main demo you can find or was that updated what oops yeah we'll need to update it'll pay no attention to the top link",
    "start": "1637400",
    "end": "1644799"
  },
  {
    "text": "update uh and then my rate limiting service is below as well which I moved into the Ambassador Labs repo uh",
    "start": "1644799",
    "end": "1650779"
  },
  {
    "text": "hopefully self-exclamatory we've tried to document it as good as we can um but always happy to take questions on our slack or find me on the cncf slack as",
    "start": "1650779",
    "end": "1657980"
  },
  {
    "text": "well and we also have the docs for Linker D and the docs for MSO Ingress as well do let us you know know how you get",
    "start": "1657980",
    "end": "1663500"
  },
  {
    "text": "on with these things we love feedback we love PR's in the docs as well if you spot something that's a bit um incorrect",
    "start": "1663500",
    "end": "1668779"
  },
  {
    "text": "or or not super obvious and we always both both projects very much appreciate uh Docs",
    "start": "1668779",
    "end": "1674240"
  },
  {
    "text": "there we go now there's uh now there's nothing to hide on the slide and I think if everyone's taking their",
    "start": "1674240",
    "end": "1680539"
  },
  {
    "text": "pictures I saw folks with a few cameras it's great we have a few minutes of questions if anyone might check",
    "start": "1680539",
    "end": "1686299"
  },
  {
    "text": "anything out I think Mike might be roving thank you oh yeah just wander up afterwards but",
    "start": "1686299",
    "end": "1691940"
  },
  {
    "text": "always happy to take questions now",
    "start": "1691940",
    "end": "1695259"
  },
  {
    "text": "so we saw your demo where you uh came to your initial values for some of these things and an incident situation is it",
    "start": "1697100",
    "end": "1704779"
  },
  {
    "text": "appropriate to proactively change some of them",
    "start": "1704779",
    "end": "1710260"
  },
  {
    "text": "uh initial values sorry which ones like for example uh your your timeout that",
    "start": "1710260",
    "end": "1715460"
  },
  {
    "text": "you initially came to 250 million oh yeah um I am not gonna lie the timeout values",
    "start": "1715460",
    "end": "1722539"
  },
  {
    "text": "that we showed in this demo have gone through probably a dozen different iterations",
    "start": "1722539",
    "end": "1728779"
  },
  {
    "text": "well Daniel and I played with things it uh it took a while to find combinations",
    "start": "1728779",
    "end": "1734059"
  },
  {
    "text": "that gave really good results and the that's another case where",
    "start": "1734059",
    "end": "1740000"
  },
  {
    "text": "the observability part plays a huge role in this one where we'd go change something and then look at the demo and",
    "start": "1740000",
    "end": "1745700"
  },
  {
    "text": "go huh that's funny that's not quite what we expected to happen and then we'd go through and poke around through",
    "start": "1745700",
    "end": "1751460"
  },
  {
    "text": "emissary's logs and the Linker D dashboards and things like that and realize what was going on and then iterate and just keep going so yeah 100",
    "start": "1751460",
    "end": "1758140"
  },
  {
    "text": "there's there's a very iterative process on all this stuff",
    "start": "1758140",
    "end": "1763779"
  },
  {
    "text": "this is like watching a tennis match guiding a room yeah",
    "start": "1768740",
    "end": "1774080"
  },
  {
    "text": "any other questions at all if if not oh perfect yeah in the retry policy is",
    "start": "1774080",
    "end": "1779480"
  },
  {
    "text": "there some way to do like a back off so it doesn't retry immediately or oh",
    "start": "1779480",
    "end": "1785240"
  },
  {
    "text": "um yeah yeah um I'm gonna have to go look that up yeah to be candid um",
    "start": "1785240",
    "end": "1793100"
  },
  {
    "text": "if I remember right I believe that there is but I'm gonna have to go look that up",
    "start": "1793100",
    "end": "1798500"
  },
  {
    "text": "okay we we kind of deliberately uh deliberately didn't want to get too",
    "start": "1798500",
    "end": "1804080"
  },
  {
    "text": "deep into that for this one because we'd run out of time if we did it's an excellent question though thank you yeah",
    "start": "1804080",
    "end": "1810140"
  },
  {
    "text": "that's exactly the same and the folks that price haven't bumps in this you've got microservices and you're doing like lots of retries and things it's very",
    "start": "1810140",
    "end": "1816200"
  },
  {
    "text": "easy to get what's called a Thundering Herd uh something we talked about showing and",
    "start": "1816200",
    "end": "1821240"
  },
  {
    "text": "ended up deciding we didn't have time for if you look at the lincolnvis dashboard when the demo app is running",
    "start": "1821240",
    "end": "1827840"
  },
  {
    "text": "in the first place I wonder if I can show a bit of that",
    "start": "1827840",
    "end": "1833000"
  },
  {
    "text": "um I need to go reset everything here but",
    "start": "1833000",
    "end": "1839120"
  },
  {
    "text": "um so if you look at the viz dashboard it will show you how many requests per second are",
    "start": "1839120",
    "end": "1844460"
  },
  {
    "text": "happening to a given you know a given service and when we start this off",
    "start": "1844460",
    "end": "1850220"
  },
  {
    "text": "with this particular demo it hovers right around eight per second because there are 16 cells in each cell",
    "start": "1850220",
    "end": "1855980"
  },
  {
    "text": "refreshes every two seconds as soon as you turn on retries that",
    "start": "1855980",
    "end": "1861020"
  },
  {
    "text": "number goes to 9.6 because 20 of them immediately get retried because of the failure rate so",
    "start": "1861020",
    "end": "1867320"
  },
  {
    "text": "um yeah it's it is really interesting to watch how some of these effects or how",
    "start": "1867320",
    "end": "1873140"
  },
  {
    "text": "some of these changes have differing effects on what happens to the services retries and rate limits and timeouts and",
    "start": "1873140",
    "end": "1881360"
  },
  {
    "text": "such tends to increase the amount of load on your service not decrease it",
    "start": "1881360",
    "end": "1887240"
  },
  {
    "text": "yeah but again it gives your user a better experience and so overall it's a good trade-off to make yeah and Mike",
    "start": "1887240",
    "end": "1894620"
  },
  {
    "text": "nuggets book that we put out um it released it it's a fantastic from that perspective as well talks about thundering herds it talks about um",
    "start": "1894620",
    "end": "1900559"
  },
  {
    "text": "resonance in the application you've got to think about some of these things I've definitely worked on systems where retries have actually taken down the",
    "start": "1900559",
    "end": "1906799"
  },
  {
    "text": "system yeah because it just like overloads and you get this Thundering Herd so that is a good good question good shout um do check out their book",
    "start": "1906799",
    "end": "1913460"
  },
  {
    "text": "it's fantastic to educate you about that no questions all right hello guys uh thank you for this presentation uh I'm",
    "start": "1913460",
    "end": "1919760"
  },
  {
    "text": "wondering uh because when you look at the presentation like the focus you can clearly select it's uh towards the end",
    "start": "1919760",
    "end": "1926419"
  },
  {
    "text": "user but I'm wondering when it comes to our service to service communication",
    "start": "1926419",
    "end": "1931600"
  },
  {
    "text": "have you tried it if so what are the do's and the don'ts",
    "start": "1931600",
    "end": "1938120"
  },
  {
    "text": "so I was exactly sorry first question um I'm asking when it comes to service to service communication yeah so what",
    "start": "1938120",
    "end": "1945260"
  },
  {
    "text": "should I do or should I should not do uh what should you yeah do or not do it",
    "start": "1945260",
    "end": "1950659"
  },
  {
    "text": "yeah exactly so I think all like probably prefixed the conversation for the answer by saying oh I always",
    "start": "1950659",
    "end": "1956600"
  },
  {
    "text": "recommend thinking about the end to end right I mean when I was doing more platform work I was just like hey service to service like it's really",
    "start": "1956600",
    "end": "1962720"
  },
  {
    "text": "really you know important but it's always think about that goal the end user right because I've actually seen folks do like timeouts and stuff in the",
    "start": "1962720",
    "end": "1968360"
  },
  {
    "text": "service mesh that were completely ignored by Ingress because the Ingress was too tight on the timeouts things like that so always think about um",
    "start": "1968360",
    "end": "1974120"
  },
  {
    "text": "end-to-end but probably plenty probably have better answers in terms of service to service do's and don'ts",
    "start": "1974120",
    "end": "1979580"
  },
  {
    "text": "or I can actually I think your answer was pretty good um nobody runs kubernetes just for the sake",
    "start": "1979580",
    "end": "1985700"
  },
  {
    "text": "of running kubernetes everybody runs kubernetes because there's something they want to accomplish for their end user and so starting out by thinking",
    "start": "1985700",
    "end": "1993320"
  },
  {
    "text": "about okay how is this going to play out for the end user is the critical bit um",
    "start": "1993320",
    "end": "1998539"
  },
  {
    "text": "I don't know that there are any hard and fast rules in terms of what to do for service to service",
    "start": "1998539",
    "end": "2004899"
  },
  {
    "text": "um the way that we've been approaching it as we were working through this is all",
    "start": "2004899",
    "end": "2010480"
  },
  {
    "text": "about thinking about how it's supposed to look to the end user watching this web app",
    "start": "2010480",
    "end": "2015700"
  },
  {
    "text": "and then you know okay well we know that this bit is slow what can we do about",
    "start": "2015700",
    "end": "2021700"
  },
  {
    "text": "this bit down here oh wait a minute if we make this bit time out like this we still have this problem that this bit behind it is too slow so maybe we can",
    "start": "2021700",
    "end": "2028600"
  },
  {
    "text": "start there and focus on that bit you know right again it's very iterative it's a lot of",
    "start": "2028600",
    "end": "2036100"
  },
  {
    "text": "watching and observing and tweaking but pretty much always starting out from the",
    "start": "2036100",
    "end": "2042340"
  },
  {
    "text": "perspective of thinking about the end user is I think the way to go",
    "start": "2042340",
    "end": "2048460"
  },
  {
    "text": "one final comment I had on that as well as if something looks too complicated it probably probably is because I've",
    "start": "2048460",
    "end": "2054878"
  },
  {
    "text": "definitely done that where I've put all these like things around the edge to protect my services and I was like you know what I think I should fix this service right yeah broken",
    "start": "2054879",
    "end": "2061980"
  },
  {
    "text": "ultimately again you know no amount of stuff you can do in the",
    "start": "2061980",
    "end": "2068080"
  },
  {
    "text": "Ingress or the service mesh is going to 100 compensate for a service that's terrible like these are so ultimately",
    "start": "2068080",
    "end": "2076000"
  },
  {
    "text": "you have to fix a service anybody else I think we're like it's 30",
    "start": "2076000",
    "end": "2081398"
  },
  {
    "text": "seconds left so it's like a super fast question really quick question no oh wait I guess we do okay",
    "start": "2081399",
    "end": "2088179"
  },
  {
    "text": "thanks for the for the insights I have a question would be helpful to have some",
    "start": "2088179",
    "end": "2093339"
  },
  {
    "text": "sort of tools to run or simulate traffic to be able to fix out the right mixture",
    "start": "2093339",
    "end": "2099220"
  },
  {
    "text": "of those parameters you've been playing with or maybe we can throw AI at it later in in the future to be able to to",
    "start": "2099220",
    "end": "2106060"
  },
  {
    "text": "adjust all those parameters automatically for us fantastic question and that's I reckon there's a whole talk",
    "start": "2106060",
    "end": "2111760"
  },
  {
    "text": "we could do on the answer because it's a great load testing soap testing synthetic monitoring definitely look at",
    "start": "2111760",
    "end": "2117400"
  },
  {
    "text": "those kind of things great question yeah um",
    "start": "2117400",
    "end": "2122460"
  },
  {
    "text": "so much room yeah for tooling around all this but we should have mentioned that that's actually really good chat in",
    "start": "2122460",
    "end": "2127599"
  },
  {
    "text": "terms of like we talk about experimentation we talk about iteration but having like a firm kind of a benchmarking situation is is well worth",
    "start": "2127599",
    "end": "2134859"
  },
  {
    "text": "really helpful yeah yeah absolutely come find us if you need more",
    "start": "2134859",
    "end": "2142030"
  },
  {
    "text": "[Applause]",
    "start": "2142030",
    "end": "2145780"
  }
]