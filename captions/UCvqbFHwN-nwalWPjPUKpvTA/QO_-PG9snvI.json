[
  {
    "start": "0",
    "end": "62000"
  },
  {
    "text": "uh thanks everyone for attending our talk on Cross plain and Argo CD my name",
    "start": "120",
    "end": "6600"
  },
  {
    "text": "is Jesse suan I'm one of the co-creators of the Argo project and co-founder of a company called Acuity which offers fully",
    "start": "6600",
    "end": "13799"
  },
  {
    "text": "managed Argo CD in the cloud and speaking with me today is Victor who you",
    "start": "13799",
    "end": "18840"
  },
  {
    "text": "probably already know from his very popular YouTube channel yeah so my name is Victor I work for a",
    "start": "18840",
    "end": "25800"
  },
  {
    "text": "band a company behind cross plain and uh this is a bit difficult subject because",
    "start": "25800",
    "end": "32099"
  },
  {
    "text": "we're talking about tips and trips how many of you are using Crosman today the rest of you might have trouble to",
    "start": "32099",
    "end": "38219"
  },
  {
    "text": "follow up this is going into into All the Troubles that this guy was facing with crosswind anyways so let me give",
    "start": "38219",
    "end": "44640"
  },
  {
    "text": "you a very quick introduction very very quick introduction into um in into Cross Point right and uh I'm",
    "start": "44640",
    "end": "51600"
  },
  {
    "text": "gonna show it in a way from from the point of uh view of History right uh at",
    "start": "51600",
    "end": "57000"
  },
  {
    "text": "the very beginning uh we got confirmations uh",
    "start": "57000",
    "end": "62480"
  },
  {
    "start": "62000",
    "end": "62000"
  },
  {
    "text": "management tools Chef puppet ansible you know all those things some of you are probably using our civil steel and they",
    "start": "62660",
    "end": "69060"
  },
  {
    "text": "were all based on the idea that things are mutable right I know that they can",
    "start": "69060",
    "end": "75000"
  },
  {
    "text": "do immutable things but based on mutable principles uh you can call that the first generation what later on became",
    "start": "75000",
    "end": "81659"
  },
  {
    "text": "infrastructures code uh and they were they were mostly based",
    "start": "81659",
    "end": "87060"
  },
  {
    "text": "for bare metal you know real servers you know before virtual machines and before",
    "start": "87060",
    "end": "92220"
  },
  {
    "text": "cloud and all those things and then we got into the second generation of such tools that we called that second",
    "start": "92220",
    "end": "98400"
  },
  {
    "text": "generation infrastructure is called it's called bit terraform pollummy cloud",
    "start": "98400",
    "end": "104220"
  },
  {
    "text": "formation all the good stuff that many of you are probably using right now what is happening right now",
    "start": "104220",
    "end": "110880"
  },
  {
    "text": "uh with the with the emerges of kubernetes is that we are moving into the next phase and that that next phase",
    "start": "110880",
    "end": "117780"
  },
  {
    "text": "is using kubernetes as a control plane right using kubernetes with all the good things that we we all",
    "start": "117780",
    "end": "124380"
  },
  {
    "text": "how many of you are not using kubernetes okay I'm just checking uh with all the",
    "start": "124380",
    "end": "130679"
  },
  {
    "text": "good things and all the things you like right now extensible apis custom resource definitions Drive detection",
    "start": "130679",
    "end": "136220"
  },
  {
    "text": "reconciliation and all the all the stuff that we like right and the whole idea is",
    "start": "136220",
    "end": "141300"
  },
  {
    "text": "that uh thinking of kubernetes is something that runs containers is wrong right that that",
    "start": "141300",
    "end": "147780"
  },
  {
    "text": "containers are just one of the implementations of kubernetes scheduler and we have many many many others and",
    "start": "147780",
    "end": "153540"
  },
  {
    "text": "one of those others is cross play so what we're trying to do with crossplay can be uh described",
    "start": "153540",
    "end": "160280"
  },
  {
    "text": "uh through two main areas right one area would be one-to-one matching between",
    "start": "160280",
    "end": "166879"
  },
  {
    "text": "resources in kubernetes or custom resource definitions and something on the other end right so if you need if if",
    "start": "166879",
    "end": "174000"
  },
  {
    "text": "on the other end you have easy to instances in AWS then you have a custom resource that you can apply in your",
    "start": "174000",
    "end": "179400"
  },
  {
    "text": "kubernetes and use all the good things that we like with kubernetes to manage the ec2 instance or whatever else that",
    "start": "179400",
    "end": "185220"
  },
  {
    "text": "is right ordering pizzas it's up to you I mean depends on the providers now the second and equally important or more",
    "start": "185220",
    "end": "191879"
  },
  {
    "text": "important part about cross planning is the ability to create compositions right compositions are a way for you to create",
    "start": "191879",
    "end": "198540"
  },
  {
    "text": "your own custom resource definitions with controllers that Define what something means to you right what does",
    "start": "198540",
    "end": "205260"
  },
  {
    "text": "it mean to you to have a cluster to have an application to have a database right",
    "start": "205260",
    "end": "211500"
  },
  {
    "text": "what does it involve and as such when you combine all those things you can expose through those custom resources",
    "start": "211500",
    "end": "219019"
  },
  {
    "text": "you know work your operational knowledge to everybody else in your company but as",
    "start": "219019",
    "end": "224819"
  },
  {
    "text": "effectively we are through compositions enabling you uh to create your own internal developer",
    "start": "224819",
    "end": "232500"
  },
  {
    "start": "229000",
    "end": "229000"
  },
  {
    "text": "platforms and provide services to application developers testers or",
    "start": "232500",
    "end": "237780"
  },
  {
    "text": "whomever else is working with you right instead of waiting for somebody to open a Geo",
    "start": "237780",
    "end": "244080"
  },
  {
    "text": "ticket right I'll ask how many of you like jira tickets okay cool cool good audience uh",
    "start": "244080",
    "end": "251879"
  },
  {
    "text": "with that in mind I'm going to leave it to Jesse because he's been working with",
    "start": "251879",
    "end": "257639"
  },
  {
    "text": "cross plane in Largo for a while and has some really good insights yeah thanks Victor",
    "start": "257639",
    "end": "264419"
  },
  {
    "text": "um so today I'll be covering how Acuity uses cross plane and some lessons and",
    "start": "264419",
    "end": "269940"
  },
  {
    "text": "learnings based on our experience with it so let me start by explaining like",
    "start": "269940",
    "end": "275759"
  },
  {
    "text": "why we chose crossplay so the main reason we wanted cross-plane was we wanted to manage our infrastructure the",
    "start": "275759",
    "end": "283020"
  },
  {
    "text": "same way that we manage our applications and that's using things like Argo CD in in githubs so we wanted to apply the",
    "start": "283020",
    "end": "290580"
  },
  {
    "text": "same tooling the practices and processes to our infrastructure especially when we",
    "start": "290580",
    "end": "296639"
  },
  {
    "text": "want to encourage a you know these devops based workflows",
    "start": "296639",
    "end": "302100"
  },
  {
    "text": "so these days the the line between your infrastructure and your applications are getting more and more blurry and so",
    "start": "302100",
    "end": "309540"
  },
  {
    "text": "there's a lot of this coordination that needs to happen between your Cloud resources and your kubernetes resources",
    "start": "309540",
    "end": "315300"
  },
  {
    "text": "and the best example of this is things like IAM so Amazon has irsa and and",
    "start": "315300",
    "end": "322320"
  },
  {
    "text": "Google has something called workload identities and even though you know we're a small",
    "start": "322320",
    "end": "328259"
  },
  {
    "text": "team and we don't really have like a separate you know platform engineering team we still wanted to provide this",
    "start": "328259",
    "end": "335400"
  },
  {
    "text": "simple interface to developers to basically lay the groundwork for scaling",
    "start": "335400",
    "end": "340919"
  },
  {
    "text": "up providing standardized self-service infrastructure and just exposing a much",
    "start": "340919",
    "end": "348060"
  },
  {
    "text": "more simpler set of knobs and this enables us to treat our infrastructure more like cattle so not it's not like a",
    "start": "348060",
    "end": "355500"
  },
  {
    "text": "big deal to you know create more and more of these things so cross pane enables just you know treating these",
    "start": "355500",
    "end": "361919"
  },
  {
    "text": "things like like cattle so these are the type of resources that",
    "start": "361919",
    "end": "369000"
  },
  {
    "text": "we deployed today using cross plane where primarily AWS shop and we only use",
    "start": "369000",
    "end": "375600"
  },
  {
    "text": "three cross plane providers the AWS provider Helm provider and the",
    "start": "375600",
    "end": "380699"
  },
  {
    "text": "kubernetes provider we do have a presence on gcp but it's quite small and",
    "start": "380699",
    "end": "385919"
  },
  {
    "text": "currently they're not managed by cross plane but I think in the future that could change and will be you know pretty",
    "start": "385919",
    "end": "393479"
  },
  {
    "text": "prepared to use cross plane for both managing gcp stuff as well as AWS",
    "start": "393479",
    "end": "400160"
  },
  {
    "text": "so probably the most powerful feature that you want to be using cross brain for is",
    "start": "400860",
    "end": "406560"
  },
  {
    "text": "its ability to compose resources into higher level resources what they call",
    "start": "406560",
    "end": "412020"
  },
  {
    "text": "compositions and here are some of the compositions that we created for our own",
    "start": "412020",
    "end": "418620"
  },
  {
    "text": "internal purposes and so we started with upbounds reference architecture so they publish a",
    "start": "418620",
    "end": "426360"
  },
  {
    "text": "bunch of reference implementations for AWS or gcp Azure and then we tweaked it",
    "start": "426360",
    "end": "433080"
  },
  {
    "text": "a bunch of things to kind of suit our own needs for example we we changed it to run in three availability zones",
    "start": "433080",
    "end": "438900"
  },
  {
    "text": "instead of two we enabled KMS Secrets encryption we added the AWS add-ons and",
    "start": "438900",
    "end": "445979"
  },
  {
    "text": "then we also did something created our own add-ons which I'll explain",
    "start": "445979",
    "end": "451220"
  },
  {
    "text": "in a little bit but if you're looking to get started I highly suggest using those reference implementations as",
    "start": "451220",
    "end": "458220"
  },
  {
    "text": "a good starting point on modeling your your compositions",
    "start": "458220",
    "end": "463860"
  },
  {
    "text": "um and also there's this you'll see this one composition up there called the irsa",
    "start": "463860",
    "end": "470120"
  },
  {
    "text": "composition and that's specifically to handle uh I am roles and policies",
    "start": "470120",
    "end": "476400"
  },
  {
    "text": "associated with kubernetes service accounts so now I'll get to why that's needed in a bit",
    "start": "476400",
    "end": "484159"
  },
  {
    "text": "so and along with those compute and networking compositions we also have",
    "start": "484380",
    "end": "489900"
  },
  {
    "text": "this concept of a add-on composition for kubernetes clusters here I'm showing six",
    "start": "489900",
    "end": "496259"
  },
  {
    "text": "such add-ons and each add-on is different from the other so well so one",
    "start": "496259",
    "end": "502740"
  },
  {
    "text": "example is um you know the one will require different policies and so their uh their",
    "start": "502740",
    "end": "510840"
  },
  {
    "text": "policy manifest will be different some is installed using Helm the others are",
    "start": "510840",
    "end": "516260"
  },
  {
    "text": "just installed through raw kubernetes manifest and so um you can see which of these lower",
    "start": "516260",
    "end": "525000"
  },
  {
    "text": "level objects are composed into this higher level composition",
    "start": "525000",
    "end": "530760"
  },
  {
    "text": "and so just to give you an idea of what one of the add-ons looks like here's the spec for our Carpenter add-on if you're",
    "start": "531060",
    "end": "538560"
  },
  {
    "text": "not familiar with Carpenter it's um it's basically a better version of cluster autoscaler primarily for AWS",
    "start": "538560",
    "end": "546779"
  },
  {
    "text": "but so in this spec you can see we just exposed a few of the carpenter",
    "start": "546779",
    "end": "552660"
  },
  {
    "text": "parameters that we're interested in um and if so looking at this example this cluster will want to use spot",
    "start": "552660",
    "end": "559500"
  },
  {
    "text": "instances and it wants to only use these four instant classes and it will have",
    "start": "559500",
    "end": "566040"
  },
  {
    "text": "like a Max Auto scaling of 100 vcpus so all of these values will get passed all",
    "start": "566040",
    "end": "573240"
  },
  {
    "text": "the way down to the carpenter you know config map or provide provisioner but",
    "start": "573240",
    "end": "579360"
  },
  {
    "text": "how that happens is is abstracted away from the user deploying this",
    "start": "579360",
    "end": "586399"
  },
  {
    "text": "and this this is just an illustration of how this nesting of composition works so",
    "start": "587279",
    "end": "594120"
  },
  {
    "text": "you can see here we have this top level eks composition and then inside that you",
    "start": "594120",
    "end": "600000"
  },
  {
    "text": "have you know things your normal managed resources like cluster and node groups the way they see provider but then you",
    "start": "600000",
    "end": "606120"
  },
  {
    "text": "can include your your own self-written compositions like my Carpenter add-on",
    "start": "606120",
    "end": "612360"
  },
  {
    "text": "that's composed of like a Helm release and instance profile provisioner and in that thing encompasses another",
    "start": "612360",
    "end": "620459"
  },
  {
    "text": "um composition we wrote the irsa one and inside that is your your policy your",
    "start": "620459",
    "end": "625740"
  },
  {
    "text": "role and your role policy attachment",
    "start": "625740",
    "end": "629660"
  },
  {
    "text": "um so let's uh talk about when I think probably one of my biggest annoyances",
    "start": "631500",
    "end": "636540"
  },
  {
    "text": "about how privileges are handled in AWS so AWS has this feature where you can",
    "start": "636540",
    "end": "642540"
  },
  {
    "text": "give your pods IAM privileges um without using long-lived static credentials and",
    "start": "642540",
    "end": "648480"
  },
  {
    "text": "they call it irsa I guess called IAM roles for service accounts Google has their own version of it called workload",
    "start": "648480",
    "end": "654839"
  },
  {
    "text": "identity and they they work basically the same way um so the way it works is you have your",
    "start": "654839",
    "end": "660839"
  },
  {
    "text": "you know your normal I am policy and your IM role and they're like attached to each other and to give I am",
    "start": "660839",
    "end": "667920"
  },
  {
    "text": "privileges to the Pod it has to go through an oidc provider which you uh",
    "start": "667920",
    "end": "673640"
  },
  {
    "text": "you to create along with your cluster then you need to reference this oidc",
    "start": "673640",
    "end": "679980"
  },
  {
    "text": "provider in like two different places in that IAM role and then you have your service account",
    "start": "679980",
    "end": "686720"
  },
  {
    "text": "the service account is the one that you want to give privileges to your cloud and This Server account has to have an",
    "start": "686720",
    "end": "694260"
  },
  {
    "text": "annotation um which references the Arn of the uh I am",
    "start": "694260",
    "end": "702300"
  },
  {
    "text": "World which we want to impersonate and then that I am role once should then",
    "start": "702300",
    "end": "707820"
  },
  {
    "text": "have a reference back to the surface account so this bi-directional trust is established",
    "start": "707820",
    "end": "714300"
  },
  {
    "text": "um so this this is a really pain to manage but um uh we use cross plane to",
    "start": "714300",
    "end": "721019"
  },
  {
    "text": "kind of help coordinate and manage all these references",
    "start": "721019",
    "end": "726240"
  },
  {
    "start": "725000",
    "end": "725000"
  },
  {
    "text": "so to simplify things we we have another this composition which we call an irsa",
    "start": "726240",
    "end": "732120"
  },
  {
    "text": "and this RSA resource accepts all of those previous things that I talked",
    "start": "732120",
    "end": "737579"
  },
  {
    "text": "about as inputs so like what service account name you want to give permissions to the",
    "start": "737579",
    "end": "744660"
  },
  {
    "text": "namespace it lives in the oidc of the cluster um that that's that namespace and",
    "start": "744660",
    "end": "751680"
  },
  {
    "text": "surface accounts is and then the I am policy the um uh permissions uh that it",
    "start": "751680",
    "end": "759440"
  },
  {
    "text": "wants and so what the irsa object does is uh it then it creates the underlying",
    "start": "759440",
    "end": "765000"
  },
  {
    "text": "AWS managed Resources with all of those references and back references in place",
    "start": "765000",
    "end": "770160"
  },
  {
    "text": "where they need to be and so the end result is that we just have to create this one irsa object and then the",
    "start": "770160",
    "end": "776940"
  },
  {
    "text": "composition kind of takes care of all these child resources and cross-referencing",
    "start": "776940",
    "end": "782660"
  },
  {
    "start": "783000",
    "end": "783000"
  },
  {
    "text": "um so this slide is just showing the fact that we also use cross plane to",
    "start": "784320",
    "end": "789480"
  },
  {
    "text": "deploy managed resources directly and managed resources are kind of like the lowest level",
    "start": "789480",
    "end": "795500"
  },
  {
    "text": "provider resources that have have like a one-to-one mapping with the cloud",
    "start": "795500",
    "end": "802200"
  },
  {
    "text": "provider so there's going to be a lot of times where you just want to create you know Cloud resources not tied to any",
    "start": "802200",
    "end": "810000"
  },
  {
    "text": "other objects in our case we want to create you know Route 53 entries or",
    "start": "810000",
    "end": "815459"
  },
  {
    "text": "um uh routes Transit gateways or maybe we just want to create a like a bespoke",
    "start": "815459",
    "end": "821100"
  },
  {
    "text": "I am role to give to one of our services",
    "start": "821100",
    "end": "826220"
  },
  {
    "text": "and uh so this the example that we use it for is uh let's say you have you",
    "start": "826320",
    "end": "832620"
  },
  {
    "text": "create two VPC networks in our case like so eks VPC and then a database VPC and",
    "start": "832620",
    "end": "838620"
  },
  {
    "text": "then later on we want to connect those two so then we'll use cross plane to deploy a Transit Gateway and then the",
    "start": "838620",
    "end": "843839"
  },
  {
    "text": "attachments to connect those two vpcs",
    "start": "843839",
    "end": "848240"
  },
  {
    "start": "849000",
    "end": "849000"
  },
  {
    "text": "um so you might be wondering okay where does Argo CD come into the picture so far I've been talking about add-ons and",
    "start": "849959",
    "end": "855839"
  },
  {
    "text": "and how we use cross plane to install those but what about Argo CD and the answer is we actually use both",
    "start": "855839",
    "end": "862320"
  },
  {
    "text": "so and there's some trade-offs that you should understand when you decide you",
    "start": "862320",
    "end": "867959"
  },
  {
    "text": "want crossblink to install uh something through a Helm chart or you when you want Argo CD to do something",
    "start": "867959",
    "end": "874200"
  },
  {
    "text": "so the advantages of using cross-plane to to have like an add-on installed as",
    "start": "874200",
    "end": "881040"
  },
  {
    "text": "part of a cluster object is that you know everything is handled in that composition so you just basically apply",
    "start": "881040",
    "end": "887880"
  },
  {
    "text": "that one top level eks object and then 20 minutes later you have a fully functional cluster it has all the",
    "start": "887880",
    "end": "894360"
  },
  {
    "text": "add-ons it needs and it's ready to use out of the gate and this includes things",
    "start": "894360",
    "end": "899760"
  },
  {
    "text": "like I am privileges to the the controllers that need it",
    "start": "899760",
    "end": "906480"
  },
  {
    "text": "um but um the flip side is that these add-on versions are are more cumbersome to",
    "start": "906480",
    "end": "913740"
  },
  {
    "text": "manage so they're they're tied to your eks composition that you wrote and so let's say tomorrow you want to upgrade",
    "start": "913740",
    "end": "919920"
  },
  {
    "text": "AWS load balancer you have to kind of modify your composition to get the new",
    "start": "919920",
    "end": "925079"
  },
  {
    "text": "helmetry version and then publish that that new composition and so uh the the",
    "start": "925079",
    "end": "932160"
  },
  {
    "text": "upgrade process of that island is much more uh tedious also if it's part of that composition it",
    "start": "932160",
    "end": "939480"
  },
  {
    "text": "also means that like all the Clusters that are created from that composition they all get the same version and so you",
    "start": "939480",
    "end": "946500"
  },
  {
    "text": "don't have that flexibility of you know maybe picking different versions for different clusters they they're all kind",
    "start": "946500",
    "end": "952680"
  },
  {
    "text": "of tied to what you chose in in your composition on the rocd side the best benefit you",
    "start": "952680",
    "end": "960060"
  },
  {
    "text": "get is you can use a git Ops based workflow for for managing your add-on so",
    "start": "960060",
    "end": "965160"
  },
  {
    "text": "this means you can control the versions for different environments you use you",
    "start": "965160",
    "end": "970199"
  },
  {
    "text": "know gear dots to modify the config map used by those add-ons",
    "start": "970199",
    "end": "975680"
  },
  {
    "text": "and unlike a composition you actually get to choose like which add-ons get to",
    "start": "975680",
    "end": "982320"
  },
  {
    "text": "be deployed in the cluster so with the composition you basically deciding like you know these end add-ons",
    "start": "982320",
    "end": "990240"
  },
  {
    "text": "are part of it and there's no way to kind of turn off and on it's just like um it's an all or nothing kind of",
    "start": "990240",
    "end": "995880"
  },
  {
    "text": "decision um some of the drawbacks of you know Argos",
    "start": "995880",
    "end": "1001040"
  },
  {
    "text": "CD using to deploy is it can't do this coordination of in referencing passing",
    "start": "1001040",
    "end": "1009139"
  },
  {
    "text": "of like IAM to other resources so um that's one limitation of Largo CD and",
    "start": "1009139",
    "end": "1017120"
  },
  {
    "text": "second if you're using rcd to manage your add-ons it's going to be",
    "start": "1017120",
    "end": "1023000"
  },
  {
    "text": "like the second step you know you create your cluster first and then followed by you know",
    "start": "1023000",
    "end": "1029240"
  },
  {
    "text": "installing some cluster add-on",
    "start": "1029240",
    "end": "1034240"
  },
  {
    "text": "so so we I mentioned we use both and so we",
    "start": "1035240",
    "end": "1040579"
  },
  {
    "text": "decide a different strategy depending on the type of add-on and so there's three",
    "start": "1040579",
    "end": "1046520"
  },
  {
    "text": "different kinds what the first is what they call like critical elements these are atoms they are kind of essential for",
    "start": "1046520",
    "end": "1053660"
  },
  {
    "text": "a cluster to function for example without Auto scaling you can't even",
    "start": "1053660",
    "end": "1059059"
  },
  {
    "text": "probably install more add-ons because the cluster doesn't have capacity to automatically scale up as you you know",
    "start": "1059059",
    "end": "1065000"
  },
  {
    "text": "throw more pods up at it um and so for these critical audience we",
    "start": "1065000",
    "end": "1070880"
  },
  {
    "text": "basically bundle it as part of the um the eks composition that we wrote and they and",
    "start": "1070880",
    "end": "1076760"
  },
  {
    "text": "we consider it just you know part of the distribution um so next uh is what they call the I am",
    "start": "1076760",
    "end": "1084200"
  },
  {
    "text": "only add-ons and so these add-on Tire ones that need some coordination with",
    "start": "1084200",
    "end": "1089720"
  },
  {
    "text": "AWS resources namely IAM um and they need to do that that whole",
    "start": "1089720",
    "end": "1096200"
  },
  {
    "text": "cross-referencing stuff that I showed in that previous slide and these are also things I consider optional like I don't",
    "start": "1096200",
    "end": "1103039"
  },
  {
    "text": "need certain manager in every cluster or um and or external DNS right so uh so",
    "start": "1103039",
    "end": "1112039"
  },
  {
    "text": "what we do with this is that we use cross plane to install just the IM",
    "start": "1112039",
    "end": "1117620"
  },
  {
    "text": "portions of it and if we do want the actual controller running in the cluster we'll follow it up by um uh in using",
    "start": "1117620",
    "end": "1125299"
  },
  {
    "text": "Argo CD and install it and then by then the um you know the services account is already pre-created for them and and we",
    "start": "1125299",
    "end": "1133940"
  },
  {
    "text": "don't have to deploy uh do anything in the cloud",
    "start": "1133940",
    "end": "1140000"
  },
  {
    "text": "and finally we have the the other stuff and so these items have no dependency to",
    "start": "1140000",
    "end": "1145520"
  },
  {
    "text": "AWS and and we just treat them kind of like normal applications fully managed by Argo CD",
    "start": "1145520",
    "end": "1153080"
  },
  {
    "text": "here are some examples of some add-ons in each category and currently the only",
    "start": "1153080",
    "end": "1158720"
  },
  {
    "text": "three that we consider critical um and that belong in every cluster our Carpenter for auto scaling the AWS load",
    "start": "1158720",
    "end": "1166700"
  },
  {
    "text": "bouncer controller and external secret so every cluster that we provision will",
    "start": "1166700",
    "end": "1172340"
  },
  {
    "text": "get those three as a default um and then we have these add-ons which",
    "start": "1172340",
    "end": "1177559"
  },
  {
    "text": "maybe the cluster will you know might need and so for those like the external",
    "start": "1177559",
    "end": "1183980"
  },
  {
    "text": "external DNS uh certain manager ADOT those all kind of require some AWS",
    "start": "1183980",
    "end": "1189919"
  },
  {
    "text": "privilege and so um we'll kind of pre-create those policies for them but not not the actual",
    "start": "1189919",
    "end": "1196700"
  },
  {
    "text": "um uh the workload objects because that is followed that is handled by Argo CD",
    "start": "1196700",
    "end": "1203240"
  },
  {
    "text": "and then finally that last column are the example of cluster add-ons which have no tie-in to AWS and can be managed",
    "start": "1203240",
    "end": "1210320"
  },
  {
    "text": "like a normal kubernetes application uh next I want to talk about what we",
    "start": "1210320",
    "end": "1217520"
  },
  {
    "text": "feel is a best practice for using cross plane one issue you might face is that when you release a new composition or",
    "start": "1217520",
    "end": "1223820"
  },
  {
    "text": "update a provider it could be risky because you know when you're updating those things all instances of that",
    "start": "1223820",
    "end": "1230900"
  },
  {
    "text": "composition get updated at the same time and so it could mean that you break all your clusters at the same time so what",
    "start": "1230900",
    "end": "1238340"
  },
  {
    "text": "we do is we run multiple cross planes one per environment so test stage prod",
    "start": "1238340",
    "end": "1243740"
  },
  {
    "text": "and then we progressively promote a composition through the environments",
    "start": "1243740",
    "end": "1249080"
  },
  {
    "text": "it's just so we can control the blast radius if something goes wrong",
    "start": "1249080",
    "end": "1254419"
  },
  {
    "text": "and here's an illustration of this so here we have three those three environments so our AWS accounts and you",
    "start": "1254419",
    "end": "1261799"
  },
  {
    "text": "can see a there's a cross plane in each account to manage the infrastructure of that account and when we roll out a new",
    "start": "1261799",
    "end": "1268160"
  },
  {
    "text": "version of our composition uh then it first goes to test and staged in prod",
    "start": "1268160",
    "end": "1273580"
  },
  {
    "text": "and meanwhile Argo CD is deploying to all the Clusters that you",
    "start": "1273580",
    "end": "1279980"
  },
  {
    "text": "see in this picture okay um so I'll go over some kind of",
    "start": "1279980",
    "end": "1287000"
  },
  {
    "text": "tips and tricks uh specifically with using Argo CD and cross-plane because there's definitely some things you",
    "start": "1287000",
    "end": "1293659"
  },
  {
    "text": "should turn on and off when you're using Argo CD in Crosspoint so probably the most important tip I can",
    "start": "1293659",
    "end": "1301280"
  },
  {
    "start": "1298000",
    "end": "1298000"
  },
  {
    "text": "give is is this Argo CD feature called annotation tracking which is not the",
    "start": "1301280",
    "end": "1307039"
  },
  {
    "text": "default by the way it probably will be the default in the future but as of now it's not done",
    "start": "1307039",
    "end": "1313100"
  },
  {
    "text": "um so if you've been using our CD and cross plain one thing you might know this is that",
    "start": "1313100",
    "end": "1319220"
  },
  {
    "text": "um Argosy has a is pruning feature and it wants to delete resources which think it",
    "start": "1319220",
    "end": "1325039"
  },
  {
    "text": "um you know are no longer managed and get and it does it by seeing the live object and looking at a label and says",
    "start": "1325039",
    "end": "1331580"
  },
  {
    "text": "oh that label was tied to this application but it's missing from git therefore I should prune it the thing is",
    "start": "1331580",
    "end": "1338840"
  },
  {
    "text": "cross plane kind of carries over that label that you apply in your um",
    "start": "1338840",
    "end": "1345260"
  },
  {
    "text": "your your claims resource to the com composite resource which is is kind of",
    "start": "1345260",
    "end": "1350900"
  },
  {
    "text": "like a child of the the claim and so because of that if you're using label-based tracking Argosy turns around",
    "start": "1350900",
    "end": "1357980"
  },
  {
    "text": "oh I'd better go delete it it must be something they removed from git so what annotation based tracking does",
    "start": "1357980",
    "end": "1365299"
  },
  {
    "text": "is we we instead of labeling it with a simple name we annotate it with a lot of",
    "start": "1365299",
    "end": "1370580"
  },
  {
    "text": "metadata and based on that metadata we can we understand if something was a",
    "start": "1370580",
    "end": "1378140"
  },
  {
    "text": "label or annotation was just carried over from some parent object and we will decide not to prune it so",
    "start": "1378140",
    "end": "1385880"
  },
  {
    "text": "this is a feature you definitely want to turn on even if you're not using cross-plane this is a better way um to",
    "start": "1385880",
    "end": "1392960"
  },
  {
    "text": "use Argo CD and it will be the default in the future",
    "start": "1392960",
    "end": "1398059"
  },
  {
    "text": "I'm sure yeah you want to speak you said I said next",
    "start": "1398059",
    "end": "1404840"
  },
  {
    "text": "week oh next week okay",
    "start": "1404840",
    "end": "1410360"
  },
  {
    "start": "1410000",
    "end": "1410000"
  },
  {
    "text": "um where are we okay so I have some performance tricks um one thing to know about cross-plane is",
    "start": "1410360",
    "end": "1417140"
  },
  {
    "text": "it it can install like hundreds of crds and you're probably not going to be using most of them the problem that",
    "start": "1417140",
    "end": "1425059"
  },
  {
    "text": "happens is argosity wants to list and watch those uh",
    "start": "1425059",
    "end": "1430220"
  },
  {
    "text": "those resources even if you're not using them because you might be using them and it needs to discover them so this causes",
    "start": "1430220",
    "end": "1438380"
  },
  {
    "text": "um you know a lot of memory pressure on both the car app control of Vargo CD as well as the Kirby's API server and this",
    "start": "1438380",
    "end": "1445039"
  },
  {
    "start": "1445000",
    "end": "1445000"
  },
  {
    "text": "is just kind of an illustration of you know what's happening so Argosy has a feature called resource",
    "start": "1445039",
    "end": "1451340"
  },
  {
    "text": "exclusions and the idea is that you can basically tell Argosy to to pretend like",
    "start": "1451340",
    "end": "1457760"
  },
  {
    "text": "these resources don't exist and how this helps is that if they if Argos he",
    "start": "1457760",
    "end": "1463700"
  },
  {
    "text": "doesn't know they exist they won't actually monitor those and which lowers",
    "start": "1463700",
    "end": "1468860"
  },
  {
    "text": "the number of connections and pressure to the controller",
    "start": "1468860",
    "end": "1473559"
  },
  {
    "text": "um another use of resource exclusions and this kind of improves the usability",
    "start": "1474919",
    "end": "1480559"
  },
  {
    "text": "of the user interface is something called",
    "start": "1480559",
    "end": "1485600"
  },
  {
    "text": "um Crosslink has this object called a provider config usage and for the most part it's an implementation detail of",
    "start": "1485600",
    "end": "1492080"
  },
  {
    "text": "cross plan you don't you don't ever manage those objects and you probably shouldn't ever care that they exist but",
    "start": "1492080",
    "end": "1498559"
  },
  {
    "text": "the problem is they actually show up in the Argo CD UI because they they're they're always Children of the low level",
    "start": "1498559",
    "end": "1506900"
  },
  {
    "text": "of managed resource and so one thing to kind of just declutter the",
    "start": "1506900",
    "end": "1511940"
  },
  {
    "text": "Argo CD UI is just to also ignore these type of resources and then you'll basically reduce your your resource Tree",
    "start": "1511940",
    "end": "1518780"
  },
  {
    "text": "by one whole level foreign",
    "start": "1518780",
    "end": "1524679"
  },
  {
    "text": "with high number of crds is it makes something called API Discovery pretty",
    "start": "1524679",
    "end": "1531260"
  },
  {
    "text": "slow so you might actually notice this from like Cube CTL itself so keep keep CTO has to kind of ask kubernetes about",
    "start": "1531260",
    "end": "1537799"
  },
  {
    "text": "like hey what do you what kind of crds do you have in the system if you have hundreds of these things it's actually",
    "start": "1537799",
    "end": "1543100"
  },
  {
    "text": "can get slow Argosy does the same Discovery but right",
    "start": "1543100",
    "end": "1549020"
  },
  {
    "text": "now there's like this bug or performance problem which makes it inefficient so",
    "start": "1549020",
    "end": "1555020"
  },
  {
    "text": "you can work around this problem by just bumping up the QPS which we're currently",
    "start": "1555020",
    "end": "1560419"
  },
  {
    "text": "getting throttled on to the controller and this should be a temporary workaround that you don't need in the",
    "start": "1560419",
    "end": "1567080"
  },
  {
    "text": "future um health checks okay so",
    "start": "1567080",
    "end": "1573080"
  },
  {
    "start": "1570000",
    "end": "1570000"
  },
  {
    "text": "if um if you don't know cross plane has very",
    "start": "1573080",
    "end": "1579039"
  },
  {
    "text": "homogeneous statuses for all of the resources it creates so they all get",
    "start": "1579039",
    "end": "1584720"
  },
  {
    "text": "this condition like is the resource synced or is it ready",
    "start": "1584720",
    "end": "1590620"
  },
  {
    "text": "and so it's Argo City has this feature which lets you write a snippet of Lua",
    "start": "1590620",
    "end": "1597140"
  },
  {
    "text": "script and evaluate the the object to see if there's any return if it's",
    "start": "1597140",
    "end": "1604760"
  },
  {
    "text": "healthy or degraded or progressing and so here's this a simple resource health",
    "start": "1604760",
    "end": "1610520"
  },
  {
    "text": "check that you can write for that DB instance that I showed in the previous slide and this as you can see it just",
    "start": "1610520",
    "end": "1617059"
  },
  {
    "text": "iterates the conditions see if it's not synced and then if it isn't ill",
    "start": "1617059",
    "end": "1622400"
  },
  {
    "text": "show cause the resource to show up as degraded and then you can see in this little screenshot it will actually get",
    "start": "1622400",
    "end": "1628220"
  },
  {
    "text": "surfaced to the Argo CD UI and you can quickly identify problems in your",
    "start": "1628220",
    "end": "1633620"
  },
  {
    "text": "cross-plane resources and get a lot better visibility",
    "start": "1633620",
    "end": "1638380"
  },
  {
    "text": "okay some challenges we faced um one thing is if you want cross plane",
    "start": "1638659",
    "end": "1645799"
  },
  {
    "start": "1642000",
    "end": "1642000"
  },
  {
    "text": "to adopt existing resources it could be challenging especially for AWS",
    "start": "1645799",
    "end": "1653260"
  },
  {
    "text": "and this is because AWS has this this Behavior where it just",
    "start": "1653260",
    "end": "1658640"
  },
  {
    "text": "generates like random IDs for for some things like VPC subnets and crd groups",
    "start": "1658640",
    "end": "1665299"
  },
  {
    "text": "um and cross-plane when when you recreate",
    "start": "1665299",
    "end": "1671419"
  },
  {
    "text": "um a resource let's say you wanted to take over existing one or maybe you're just moving your um",
    "start": "1671419",
    "end": "1678200"
  },
  {
    "text": "you know migrating to a different cross-plane cluster so when you apply it a second time it doesn't know that existing one already exists and it",
    "start": "1678200",
    "end": "1685760"
  },
  {
    "text": "should adopt it so now you're left with like two vpcs there's um you know ways",
    "start": "1685760",
    "end": "1691159"
  },
  {
    "text": "around this you can annotate your resources in with an external name so that you can take it over but this kind",
    "start": "1691159",
    "end": "1698480"
  },
  {
    "text": "of breaks the whole you know give Ops user experience because now you're kind of incorporating IDs in your",
    "start": "1698480",
    "end": "1705039"
  },
  {
    "text": "manifest when you you didn't have to originally",
    "start": "1705039",
    "end": "1710120"
  },
  {
    "text": "um but one tip you should practice is I recommend this um to use",
    "start": "1710120",
    "end": "1715880"
  },
  {
    "text": "formulated names for your composite XR resources um and instead of using",
    "start": "1715880",
    "end": "1721159"
  },
  {
    "text": "relying on generate name for it and that way your AWS resources get kind of human",
    "start": "1721159",
    "end": "1727039"
  },
  {
    "text": "readable names um some things I I",
    "start": "1727039",
    "end": "1733700"
  },
  {
    "text": "um limitations in the cross plane but I think they're you know being worked on they'll be addressed in the future",
    "start": "1733700",
    "end": "1739159"
  },
  {
    "text": "as of now a composition um you can't conditionally create",
    "start": "1739159",
    "end": "1744200"
  },
  {
    "text": "resources depending on like um like input parameters so for example for us like I would love the ability to",
    "start": "1744200",
    "end": "1751940"
  },
  {
    "text": "enable or disable a cluster add-on based on like some true false values in the",
    "start": "1751940",
    "end": "1757580"
  },
  {
    "text": "parameters another example is like we might have a Dev version of a database that has more",
    "start": "1757580",
    "end": "1764260"
  },
  {
    "text": "instances versus a prod instance so today we resort to scripting and code",
    "start": "1764260",
    "end": "1770299"
  },
  {
    "text": "generation to kind of um to create two versions of the composition that are are slightly",
    "start": "1770299",
    "end": "1776120"
  },
  {
    "text": "different and another limitation is uh we cross",
    "start": "1776120",
    "end": "1783320"
  },
  {
    "text": "between doesn't have a ability to reference another resource and get status",
    "start": "1783320",
    "end": "1789260"
  },
  {
    "text": "information to feed into the input of the current resource so if you're currently working all within the same",
    "start": "1789260",
    "end": "1795740"
  },
  {
    "text": "composition it's fine because it's um uh all the references happen in the same",
    "start": "1795740",
    "end": "1801380"
  },
  {
    "text": "yaml but if you want to kind of a more Loosely coupled uh process so maybe you have an",
    "start": "1801380",
    "end": "1809179"
  },
  {
    "text": "eks Network another ecos Network and you want to attach them today what you have",
    "start": "1809179",
    "end": "1814760"
  },
  {
    "text": "to do is copy the VPC ID paste it into that Transit gateway to",
    "start": "1814760",
    "end": "1820039"
  },
  {
    "text": "connect them and and then and then now they're connected so it would be great if we could have",
    "start": "1820039",
    "end": "1825740"
  },
  {
    "text": "something where I can just reference those other two things rather than copying around Amazon IDs",
    "start": "1825740",
    "end": "1833559"
  },
  {
    "text": "um so so far we've been running cross-plane for the better part of a year and it's been working great for us",
    "start": "1835039",
    "end": "1841520"
  },
  {
    "text": "these are improvements that um we want to make internally these are not things",
    "start": "1841520",
    "end": "1847520"
  },
  {
    "text": "about cross-plane So currently are we ran like an eqs dedicated eks",
    "start": "1847520",
    "end": "1853340"
  },
  {
    "text": "cluster as a cross-plane control plane and so the more environments we have like then it becomes more expensive",
    "start": "1853340",
    "end": "1859940"
  },
  {
    "text": "because you're kind of dedicating an eks cluster for this so",
    "start": "1859940",
    "end": "1864980"
  },
  {
    "text": "um it should be possible right I know it's possible to just run cross-plane in you know smaller cluster like a like a",
    "start": "1864980",
    "end": "1872539"
  },
  {
    "text": "k3s cluster which in that k3s cluster can run in in a real eks cluster and so",
    "start": "1872539",
    "end": "1878779"
  },
  {
    "text": "now we can reduce our footprint to just one eks instead of like three or four",
    "start": "1878779",
    "end": "1885520"
  },
  {
    "text": "okay um so that's our uh kind of our learnings and experience with cross",
    "start": "1885679",
    "end": "1891559"
  },
  {
    "text": "plain so I think we have some more time for questions a few minutes for questions yes about cross plane or Argo",
    "start": "1891559",
    "end": "1898580"
  },
  {
    "text": "CD yeah or anything else we have time for a couple of questions you can put your hands up I see one there",
    "start": "1898580",
    "end": "1905200"
  },
  {
    "text": "with a composition uh revision arriving soon in Cross plain do you think you're",
    "start": "1910399",
    "end": "1916820"
  },
  {
    "text": "gonna keep a separate instance of cross plane to test between environments",
    "start": "1916820",
    "end": "1923740"
  },
  {
    "text": "with composition revision arriving cross-plane soon it's a feature flag today do you think you're going to keep",
    "start": "1923919",
    "end": "1930200"
  },
  {
    "text": "the multiple instance of cross brain to Stage to test for each environment or you're gonna have all I'm not sure yet",
    "start": "1930200",
    "end": "1937820"
  },
  {
    "text": "it's too early for me to reveal uh still going left to right",
    "start": "1937820",
    "end": "1945020"
  },
  {
    "text": "ask me again in a couple of weeks",
    "start": "1945020",
    "end": "1948640"
  },
  {
    "text": "thank you please come to the front if there are",
    "start": "1951980",
    "end": "1957679"
  },
  {
    "text": "more questions I think it's pretty difficult to hear so everybody else hello should we thank our speakers thank you thank you",
    "start": "1957679",
    "end": "1965500"
  }
]