[
  {
    "text": "thank you so uh here's the deal I",
    "start": "3040",
    "end": "5600"
  },
  {
    "text": "submitted this as a lightning talk and",
    "start": "5600",
    "end": "7120"
  },
  {
    "text": "got it accepted as a lightning talk but",
    "start": "7120",
    "end": "8800"
  },
  {
    "text": "about halfway through preparing I",
    "start": "8800",
    "end": "10080"
  },
  {
    "text": "realized it's totally not a lightning",
    "start": "10080",
    "end": "11759"
  },
  {
    "text": "talk and should have been a full-size",
    "start": "11759",
    "end": "13040"
  },
  {
    "text": "talk uh but I'm here now it's too late",
    "start": "13040",
    "end": "16278"
  },
  {
    "text": "to turn back so I'm just going to talk",
    "start": "16279",
    "end": "18160"
  },
  {
    "text": "really",
    "start": "18160",
    "end": "19119"
  },
  {
    "text": "fast uh writing logs to a file is the",
    "start": "19119",
    "end": "21720"
  },
  {
    "text": "easiest form of observability we have",
    "start": "21720",
    "end": "23240"
  },
  {
    "text": "and the oldest form of observability and",
    "start": "23240",
    "end": "25279"
  },
  {
    "text": "the reason is that it's really easy to",
    "start": "25279",
    "end": "27119"
  },
  {
    "text": "understand as a human being we write",
    "start": "27119",
    "end": "28400"
  },
  {
    "text": "notes on a paper it's a pretty logical",
    "start": "28400",
    "end": "30480"
  },
  {
    "text": "follow that an application writes its",
    "start": "30480",
    "end": "32040"
  },
  {
    "text": "notes on a log file we can all",
    "start": "32040",
    "end": "33680"
  },
  {
    "text": "understand that now collecting logs from",
    "start": "33680",
    "end": "35440"
  },
  {
    "text": "those files absolutely not easy don't",
    "start": "35440",
    "end": "38200"
  },
  {
    "text": "recommend implementing this yourself if",
    "start": "38200",
    "end": "39520"
  },
  {
    "text": "you don't have to but fluent bit did and",
    "start": "39520",
    "end": "42000"
  },
  {
    "text": "I'm going to talk about how fluent bit",
    "start": "42000",
    "end": "43200"
  },
  {
    "text": "did it uh that's me I work at Google on",
    "start": "43200",
    "end": "45640"
  },
  {
    "text": "observability stuff uh everybody in this",
    "start": "45640",
    "end": "47960"
  },
  {
    "text": "room probably knows what fluent bit is",
    "start": "47960",
    "end": "50000"
  },
  {
    "text": "uh but my mom watches these talks and",
    "start": "50000",
    "end": "51719"
  },
  {
    "text": "she doesn't uh observability data",
    "start": "51719",
    "end": "54160"
  },
  {
    "text": "collector uh fluent bit is an",
    "start": "54160",
    "end": "55640"
  },
  {
    "text": "observability data collector that runs",
    "start": "55640",
    "end": "57800"
  },
  {
    "text": "uh and collects logs metrics and traces",
    "start": "57800",
    "end": "59960"
  },
  {
    "text": "you can run it as a Gateway something",
    "start": "59960",
    "end": "61399"
  },
  {
    "text": "external that you send data to or you",
    "start": "61399",
    "end": "63359"
  },
  {
    "text": "can run it as an agent directly",
    "start": "63359",
    "end": "65080"
  },
  {
    "text": "alongside the things that you're",
    "start": "65080",
    "end": "66119"
  },
  {
    "text": "collecting and we're going to be mostly",
    "start": "66119",
    "end": "67200"
  },
  {
    "text": "talking about that second mode you're",
    "start": "67200",
    "end": "68759"
  },
  {
    "text": "running it as an agent because you're",
    "start": "68759",
    "end": "69960"
  },
  {
    "text": "reading logs directly off of your",
    "start": "69960",
    "end": "71520"
  },
  {
    "text": "machine a file on your machine um this",
    "start": "71520",
    "end": "74240"
  },
  {
    "text": "is a diagram that I drew for the full",
    "start": "74240",
    "end": "76119"
  },
  {
    "text": "fluent bit engine back when I had the",
    "start": "76119",
    "end": "77600"
  },
  {
    "text": "luxury of 40 minutes to do an internal",
    "start": "77600",
    "end": "79280"
  },
  {
    "text": "talk at work um I only have time to talk",
    "start": "79280",
    "end": "81920"
  },
  {
    "text": "about these things so I'm not talking",
    "start": "81920",
    "end": "83119"
  },
  {
    "text": "about anything else down the fluent bit",
    "start": "83119",
    "end": "84680"
  },
  {
    "text": "pipeline that's a whole other topic in",
    "start": "84680",
    "end": "85840"
  },
  {
    "text": "itself I'm only talking about fluent bit",
    "start": "85840",
    "end": "87600"
  },
  {
    "text": "retrieving data directly from log files",
    "start": "87600",
    "end": "89560"
  },
  {
    "text": "right now a file log collection solution",
    "start": "89560",
    "end": "91560"
  },
  {
    "text": "in my eyes has four major problems it",
    "start": "91560",
    "end": "93240"
  },
  {
    "text": "needs to solve and I'm sort of mon",
    "start": "93240",
    "end": "95520"
  },
  {
    "text": "modeling this talk around those four",
    "start": "95520",
    "end": "97240"
  },
  {
    "text": "pillars and that's discovering files to",
    "start": "97240",
    "end": "99280"
  },
  {
    "text": "read data from uh detecting changes on",
    "start": "99280",
    "end": "101600"
  },
  {
    "text": "those files seeing that there's data to",
    "start": "101600",
    "end": "103280"
  },
  {
    "text": "be read uh actually reading the data",
    "start": "103280",
    "end": "105360"
  },
  {
    "text": "from those files and handling file",
    "start": "105360",
    "end": "107960"
  },
  {
    "text": "rotations file Discovery probably the",
    "start": "107960",
    "end": "110479"
  },
  {
    "text": "easiest section um you might start with",
    "start": "110479",
    "end": "112680"
  },
  {
    "text": "a list of paths that the user wants to",
    "start": "112680",
    "end": "114799"
  },
  {
    "text": "monitor these can be relative or",
    "start": "114799",
    "end": "116079"
  },
  {
    "text": "absolute paths to specific files or uh",
    "start": "116079",
    "end": "118759"
  },
  {
    "text": "wild cards and these are in libc glob",
    "start": "118759",
    "end": "121360"
  },
  {
    "text": "format uh I think they manually",
    "start": "121360",
    "end": "123119"
  },
  {
    "text": "reimplement it for Windows but for the",
    "start": "123119",
    "end": "124880"
  },
  {
    "text": "most part It's relatively the same thing",
    "start": "124880",
    "end": "126759"
  },
  {
    "text": "uh once flu it's run through all these",
    "start": "126759",
    "end": "128679"
  },
  {
    "text": "it will have a list of file paths that",
    "start": "128679",
    "end": "130840"
  },
  {
    "text": "it's going to be collecting from but",
    "start": "130840",
    "end": "132440"
  },
  {
    "text": "this is not enough information we need",
    "start": "132440",
    "end": "134000"
  },
  {
    "text": "to get information for each specific",
    "start": "134000",
    "end": "135640"
  },
  {
    "text": "file so what we're doing is we're going",
    "start": "135640",
    "end": "137200"
  },
  {
    "text": "to call use the stats call to get",
    "start": "137200",
    "end": "139519"
  },
  {
    "text": "information about that file which I'll",
    "start": "139519",
    "end": "141319"
  },
  {
    "text": "talk about in the next slide but we're",
    "start": "141319",
    "end": "142879"
  },
  {
    "text": "also going to make sure that it is a",
    "start": "142879",
    "end": "144599"
  },
  {
    "text": "regular file because on Linux devices",
    "start": "144599",
    "end": "147200"
  },
  {
    "text": "and folders are also files but we don't",
    "start": "147200",
    "end": "148920"
  },
  {
    "text": "want to be trying to logs from them uh",
    "start": "148920",
    "end": "151319"
  },
  {
    "text": "we use the opis call to get a file",
    "start": "151319",
    "end": "152879"
  },
  {
    "text": "descriptor we record information that we",
    "start": "152879",
    "end": "154959"
  },
  {
    "text": "care about from stat and from other",
    "start": "154959",
    "end": "156480"
  },
  {
    "text": "stuff that we can determine from the",
    "start": "156480",
    "end": "157959"
  },
  {
    "text": "file configuration and we store that uh",
    "start": "157959",
    "end": "161480"
  },
  {
    "text": "in a fluent bit specific struct for the",
    "start": "161480",
    "end": "164599"
  },
  {
    "text": "file information that it needs to know",
    "start": "164599",
    "end": "166519"
  },
  {
    "text": "for tracking progress in the files and",
    "start": "166519",
    "end": "168680"
  },
  {
    "text": "we'll save those things in a local file",
    "start": "168680",
    "end": "170959"
  },
  {
    "text": "list this is a hash table that I'll talk",
    "start": "170959",
    "end": "172400"
  },
  {
    "text": "about in the next slide and optionally",
    "start": "172400",
    "end": "174200"
  },
  {
    "text": "you can store that in a sqlite DV uh",
    "start": "174200",
    "end": "176840"
  },
  {
    "text": "that will allow you to track your",
    "start": "176840",
    "end": "178200"
  },
  {
    "text": "progress on on certain files across",
    "start": "178200",
    "end": "180280"
  },
  {
    "text": "fluent bit crashes uh the information",
    "start": "180280",
    "end": "182879"
  },
  {
    "text": "stored for each file we have a file",
    "start": "182879",
    "end": "184200"
  },
  {
    "text": "descriptor that we're going to be using",
    "start": "184200",
    "end": "185480"
  },
  {
    "text": "to read data from later we have an inode",
    "start": "185480",
    "end": "187640"
  },
  {
    "text": "number this becomes important when we're",
    "start": "187640",
    "end": "188959"
  },
  {
    "text": "talking about detecting rotations uh we",
    "start": "188959",
    "end": "191040"
  },
  {
    "text": "have certain info from stat that we need",
    "start": "191040",
    "end": "193200"
  },
  {
    "text": "to detect changes um we get a hash key",
    "start": "193200",
    "end": "197120"
  },
  {
    "text": "for the lookup in the local file table",
    "start": "197120",
    "end": "199360"
  },
  {
    "text": "the Lo local lookup is based on the",
    "start": "199360",
    "end": "201720"
  },
  {
    "text": "device number and the Ione number",
    "start": "201720",
    "end": "203400"
  },
  {
    "text": "notably not the name of the file again",
    "start": "203400",
    "end": "205799"
  },
  {
    "text": "when we get to rotations that'll be",
    "start": "205799",
    "end": "207159"
  },
  {
    "text": "important uh the current file position",
    "start": "207159",
    "end": "209159"
  },
  {
    "text": "and offset now this is a bit of a janky",
    "start": "209159",
    "end": "212400"
  },
  {
    "text": "setup because the local file struct has",
    "start": "212400",
    "end": "215200"
  },
  {
    "text": "the position that it remembers it being",
    "start": "215200",
    "end": "216720"
  },
  {
    "text": "at but also it has to constantly lseek",
    "start": "216720",
    "end": "219640"
  },
  {
    "text": "the file to the position that it's",
    "start": "219640",
    "end": "221439"
  },
  {
    "text": "recently read um we also have a local",
    "start": "221439",
    "end": "224599"
  },
  {
    "text": "data buffer for each individual file",
    "start": "224599",
    "end": "226280"
  },
  {
    "text": "that we're tracking it gets a local data",
    "start": "226280",
    "end": "228799"
  },
  {
    "text": "buffer to store data into when it's",
    "start": "228799",
    "end": "230280"
  },
  {
    "text": "reading data that starts with the",
    "start": "230280",
    "end": "232079"
  },
  {
    "text": "initial size of the buffer chunk size",
    "start": "232079",
    "end": "233760"
  },
  {
    "text": "config on the tail plugin um and you can",
    "start": "233760",
    "end": "236239"
  },
  {
    "text": "also configure the tail plugin to do",
    "start": "236239",
    "end": "239120"
  },
  {
    "text": "parsing or multi-line parsing directly",
    "start": "239120",
    "end": "241879"
  },
  {
    "text": "on reading from file you can also",
    "start": "241879",
    "end": "243879"
  },
  {
    "text": "configure it to do as a filter plugin",
    "start": "243879",
    "end": "245599"
  },
  {
    "text": "but that's a separate process you can",
    "start": "245599",
    "end": "247040"
  },
  {
    "text": "instead configure it to happen directly",
    "start": "247040",
    "end": "248560"
  },
  {
    "text": "off of the file and that will deal with",
    "start": "248560",
    "end": "250480"
  },
  {
    "text": "the pro the context from that at that",
    "start": "250480",
    "end": "251920"
  },
  {
    "text": "this point in the pipeline detecting",
    "start": "251920",
    "end": "253640"
  },
  {
    "text": "changes fluent bit has two strategies",
    "start": "253640",
    "end": "255920"
  },
  {
    "text": "for detecting changes the first one is",
    "start": "255920",
    "end": "257680"
  },
  {
    "text": "polling this ends up being the default",
    "start": "257680",
    "end": "259519"
  },
  {
    "text": "on non-linux systems uh and the polling",
    "start": "259519",
    "end": "262479"
  },
  {
    "text": "is the sort of simple way that you would",
    "start": "262479",
    "end": "264160"
  },
  {
    "text": "expect this would work every 250",
    "start": "264160",
    "end": "265479"
  },
  {
    "text": "milliseconds you pull the file and see",
    "start": "265479",
    "end": "266840"
  },
  {
    "text": "if there's any new data that comparison",
    "start": "266840",
    "end": "268680"
  },
  {
    "text": "is whether the size is different than",
    "start": "268680",
    "end": "270440"
  },
  {
    "text": "what we have recorded or whether the",
    "start": "270440",
    "end": "272160"
  },
  {
    "text": "modified time is different than what we",
    "start": "272160",
    "end": "273560"
  },
  {
    "text": "have recorded and then every 2 and 1",
    "start": "273560",
    "end": "275199"
  },
  {
    "text": "half seconds we do a more extensive",
    "start": "275199",
    "end": "277160"
  },
  {
    "text": "check to detect file",
    "start": "277160",
    "end": "279800"
  },
  {
    "text": "rotations the I notify version is the",
    "start": "279800",
    "end": "282759"
  },
  {
    "text": "default on Linux um you can make polling",
    "start": "282759",
    "end": "285400"
  },
  {
    "text": "work on Linux 2 you can configure it to",
    "start": "285400",
    "end": "286840"
  },
  {
    "text": "do that but default isign notify this is",
    "start": "286840",
    "end": "288880"
  },
  {
    "text": "a Linux Subspace system that is built",
    "start": "288880",
    "end": "290800"
  },
  {
    "text": "for detecting changes from files uh you",
    "start": "290800",
    "end": "293680"
  },
  {
    "text": "create an I notify instance you get a",
    "start": "293680",
    "end": "295639"
  },
  {
    "text": "file descriptor and on that file",
    "start": "295639",
    "end": "297320"
  },
  {
    "text": "descriptor you can read different events",
    "start": "297320",
    "end": "300280"
  },
  {
    "text": "for an iode that you're watching and you",
    "start": "300280",
    "end": "302360"
  },
  {
    "text": "can add a watcher for every IE that you",
    "start": "302360",
    "end": "304240"
  },
  {
    "text": "care about and what fluent bit will",
    "start": "304240",
    "end": "305520"
  },
  {
    "text": "receive is events like in in modify",
    "start": "305520",
    "end": "309560"
  },
  {
    "text": "saying that this inode was modified or I",
    "start": "309560",
    "end": "311560"
  },
  {
    "text": "in move self meaning like this had a",
    "start": "311560",
    "end": "313440"
  },
  {
    "text": "move operation on it or there's a few",
    "start": "313440",
    "end": "315479"
  },
  {
    "text": "other op options but those are the main",
    "start": "315479",
    "end": "317080"
  },
  {
    "text": "ones that fluent bit cares about uh so",
    "start": "317080",
    "end": "318880"
  },
  {
    "text": "what the tail plug-in does in this case",
    "start": "318880",
    "end": "320600"
  },
  {
    "text": "it will create an I notify instance it",
    "start": "320600",
    "end": "322280"
  },
  {
    "text": "will add a watcher for every file that",
    "start": "322280",
    "end": "323840"
  },
  {
    "text": "it's tracking it will uh read file read",
    "start": "323840",
    "end": "327199"
  },
  {
    "text": "the file that correlates to the events",
    "start": "327199",
    "end": "329319"
  },
  {
    "text": "that it receives on the I notify",
    "start": "329319",
    "end": "331600"
  },
  {
    "text": "instance uh and every 2 and 1 half",
    "start": "331600",
    "end": "333960"
  },
  {
    "text": "seconds it will still do a sort of",
    "start": "333960",
    "end": "336160"
  },
  {
    "text": "separate from I notify check for if",
    "start": "336160",
    "end": "338800"
  },
  {
    "text": "there's any pending bites that haven't",
    "start": "338800",
    "end": "340080"
  },
  {
    "text": "been caught at the at the current moment",
    "start": "340080",
    "end": "342400"
  },
  {
    "text": "uh and that's a diagram that I drew that",
    "start": "342400",
    "end": "344720"
  },
  {
    "text": "maybe I should have just had show up on",
    "start": "344720",
    "end": "346000"
  },
  {
    "text": "the slide earlier um reading data from",
    "start": "346000",
    "end": "348960"
  },
  {
    "text": "the files um let's say we have detected",
    "start": "348960",
    "end": "352120"
  },
  {
    "text": "that there's change in a file and we",
    "start": "352120",
    "end": "353440"
  },
  {
    "text": "need to read data from it and our offset",
    "start": "353440",
    "end": "355319"
  },
  {
    "text": "is here that means we have this much",
    "start": "355319",
    "end": "357600"
  },
  {
    "text": "data that we need to read off the file",
    "start": "357600",
    "end": "359160"
  },
  {
    "text": "we will try to to read that into the",
    "start": "359160",
    "end": "360560"
  },
  {
    "text": "file's local buffer now there may or may",
    "start": "360560",
    "end": "362880"
  },
  {
    "text": "not be enough room if there is not",
    "start": "362880",
    "end": "364639"
  },
  {
    "text": "enough room in the buffer we will",
    "start": "364639",
    "end": "366280"
  },
  {
    "text": "allocate another buffer chunk size worth",
    "start": "366280",
    "end": "369000"
  },
  {
    "text": "onto that buffer to try and make more",
    "start": "369000",
    "end": "370759"
  },
  {
    "text": "room for it and that goes up to a buffer",
    "start": "370759",
    "end": "372960"
  },
  {
    "text": "Max size you want to set a buffer Max",
    "start": "372960",
    "end": "375039"
  },
  {
    "text": "size to make sure that your you know",
    "start": "375039",
    "end": "376840"
  },
  {
    "text": "your own local memory isn't constantly",
    "start": "376840",
    "end": "379039"
  },
  {
    "text": "going up and up because these are you",
    "start": "379039",
    "end": "380599"
  },
  {
    "text": "know allocated on the Heap of the",
    "start": "380599",
    "end": "382280"
  },
  {
    "text": "program you read that data into the",
    "start": "382280",
    "end": "384440"
  },
  {
    "text": "buffer and we update our stored file",
    "start": "384440",
    "end": "388039"
  },
  {
    "text": "position offset and we also lseek the",
    "start": "388039",
    "end": "389680"
  },
  {
    "text": "file to wherever we just read processing",
    "start": "389680",
    "end": "392919"
  },
  {
    "text": "data um the data is processed one line",
    "start": "392919",
    "end": "395960"
  },
  {
    "text": "at a time so from the buffer fluent bit",
    "start": "395960",
    "end": "398639"
  },
  {
    "text": "will be reading until it receives a new",
    "start": "398639",
    "end": "400560"
  },
  {
    "text": "line character and that's when it will",
    "start": "400560",
    "end": "401919"
  },
  {
    "text": "move on to the next step the log will",
    "start": "401919",
    "end": "403680"
  },
  {
    "text": "eventually be structured in fluent bit's",
    "start": "403680",
    "end": "405240"
  },
  {
    "text": "internal message pack format you might",
    "start": "405240",
    "end": "407000"
  },
  {
    "text": "be familiar with message pack in other",
    "start": "407000",
    "end": "408720"
  },
  {
    "text": "scenarios but it's uh basically a format",
    "start": "408720",
    "end": "411880"
  },
  {
    "text": "that is kind of like a binary version of",
    "start": "411880",
    "end": "414000"
  },
  {
    "text": "Json you can represent most Json objects",
    "start": "414000",
    "end": "416319"
  },
  {
    "text": "as message pack as well but it's much",
    "start": "416319",
    "end": "417759"
  },
  {
    "text": "more compact because it's a binary",
    "start": "417759",
    "end": "419160"
  },
  {
    "text": "encoding",
    "start": "419160",
    "end": "420160"
  },
  {
    "text": "uh so if we just have a simple log line",
    "start": "420160",
    "end": "421479"
  },
  {
    "text": "like this and no parsing it's just going",
    "start": "421479",
    "end": "423199"
  },
  {
    "text": "to go straight into a message pack",
    "start": "423199",
    "end": "424840"
  },
  {
    "text": "object with one key You by default it's",
    "start": "424840",
    "end": "427240"
  },
  {
    "text": "called log but you can change that key",
    "start": "427240",
    "end": "428800"
  },
  {
    "text": "and the and the value will be the",
    "start": "428800",
    "end": "430400"
  },
  {
    "text": "contents of the log um if you are",
    "start": "430400",
    "end": "432759"
  },
  {
    "text": "configuring basic parsing like Json um",
    "start": "432759",
    "end": "435199"
  },
  {
    "text": "we will actually send it through a Json",
    "start": "435199",
    "end": "436680"
  },
  {
    "text": "parser and the resulting message pack",
    "start": "436680",
    "end": "439039"
  },
  {
    "text": "will have the same structure as the Json",
    "start": "439039",
    "end": "440639"
  },
  {
    "text": "we just",
    "start": "440639",
    "end": "442319"
  },
  {
    "text": "read uh and finally if you have",
    "start": "442319",
    "end": "444199"
  },
  {
    "text": "multi-line parsing it's a bit more",
    "start": "444199",
    "end": "445479"
  },
  {
    "text": "complicated uh as we read a line from",
    "start": "445479",
    "end": "447800"
  },
  {
    "text": "the buffer the multi-line context will",
    "start": "447800",
    "end": "449520"
  },
  {
    "text": "tell us whether uh it's expecting more",
    "start": "449520",
    "end": "451160"
  },
  {
    "text": "lines or not so like if you're detecting",
    "start": "451160",
    "end": "452720"
  },
  {
    "text": "Java exceptions as a common multi-line",
    "start": "452720",
    "end": "454720"
  },
  {
    "text": "example and it's detected this is the",
    "start": "454720",
    "end": "456280"
  },
  {
    "text": "first line of a Java exception and",
    "start": "456280",
    "end": "457960"
  },
  {
    "text": "expecting more it'll refer back saying",
    "start": "457960",
    "end": "460400"
  },
  {
    "text": "we need more lines and it'll go on to",
    "start": "460400",
    "end": "461840"
  },
  {
    "text": "the next line or it'll deci it'll say",
    "start": "461840",
    "end": "463680"
  },
  {
    "text": "that it's finished and you'll get in the",
    "start": "463680",
    "end": "465720"
  },
  {
    "text": "end a log with all the lines uh that you",
    "start": "465720",
    "end": "469440"
  },
  {
    "text": "care about directly in one message pack",
    "start": "469440",
    "end": "471199"
  },
  {
    "text": "object rotations oh my God I'm I'm",
    "start": "471199",
    "end": "473759"
  },
  {
    "text": "making good time uh fluent bit is",
    "start": "473759",
    "end": "476520"
  },
  {
    "text": "resilient to two rotation strategies one",
    "start": "476520",
    "end": "479680"
  },
  {
    "text": "of them is copy truncate the other one",
    "start": "479680",
    "end": "481240"
  },
  {
    "text": "is move this is in log rotate parlament",
    "start": "481240",
    "end": "483280"
  },
  {
    "text": "but I'm going to explain what they what",
    "start": "483280",
    "end": "484360"
  },
  {
    "text": "they are copy truncate you start with a",
    "start": "484360",
    "end": "486560"
  },
  {
    "text": "log when it's ready to be rotated you",
    "start": "486560",
    "end": "488919"
  },
  {
    "text": "make a copy of it with a new name and",
    "start": "488919",
    "end": "491199"
  },
  {
    "text": "then you truncate the data from the",
    "start": "491199",
    "end": "492800"
  },
  {
    "text": "original file uh fluent bit can detect",
    "start": "492800",
    "end": "495520"
  },
  {
    "text": "the truncation if it sees that the",
    "start": "495520",
    "end": "498000"
  },
  {
    "text": "offset that it has tracked is greater",
    "start": "498000",
    "end": "500319"
  },
  {
    "text": "than the entire size of the file then it",
    "start": "500319",
    "end": "502240"
  },
  {
    "text": "follows that you must have been",
    "start": "502240",
    "end": "503319"
  },
  {
    "text": "truncated and you reset yourself um but",
    "start": "503319",
    "end": "505720"
  },
  {
    "text": "there's no way for fluent bit to ever",
    "start": "505720",
    "end": "507360"
  },
  {
    "text": "find the rotated file the cop makes a",
    "start": "507360",
    "end": "510159"
  },
  {
    "text": "new iode and unless you have configured",
    "start": "510159",
    "end": "513039"
  },
  {
    "text": "fluent bit to see the rotated path which",
    "start": "513039",
    "end": "515719"
  },
  {
    "text": "you should not do because then you'll",
    "start": "515719",
    "end": "517080"
  },
  {
    "text": "just keep on blowing up uh flit has no",
    "start": "517080",
    "end": "519159"
  },
  {
    "text": "way to discover that and if there are",
    "start": "519159",
    "end": "520479"
  },
  {
    "text": "any log lines from that file that",
    "start": "520479",
    "end": "522399"
  },
  {
    "text": "haven't yet been processed flit has no",
    "start": "522399",
    "end": "524120"
  },
  {
    "text": "way to ever find them move is the other",
    "start": "524120",
    "end": "526720"
  },
  {
    "text": "common strategy starting with a log you",
    "start": "526720",
    "end": "529360"
  },
  {
    "text": "will when it's ready to be rotated move",
    "start": "529360",
    "end": "531560"
  },
  {
    "text": "it to the New Path rather than copy that",
    "start": "531560",
    "end": "534080"
  },
  {
    "text": "means this is the same iode but it has",
    "start": "534080",
    "end": "536200"
  },
  {
    "text": "been moved and you create a new file in",
    "start": "536200",
    "end": "539200"
  },
  {
    "text": "place place with the original name uh",
    "start": "539200",
    "end": "541399"
  },
  {
    "text": "and that's a new iode fluent bit",
    "start": "541399",
    "end": "543480"
  },
  {
    "text": "actually can remember that iode it will",
    "start": "543480",
    "end": "545720"
  },
  {
    "text": "detect the rotation by seeing that the",
    "start": "545720",
    "end": "547720"
  },
  {
    "text": "name of the file has changed uh but",
    "start": "547720",
    "end": "549839"
  },
  {
    "text": "because it remembers the iode and",
    "start": "549839",
    "end": "551680"
  },
  {
    "text": "presumably the device of that file",
    "start": "551680",
    "end": "553040"
  },
  {
    "text": "hasn't changed it can still remember the",
    "start": "553040",
    "end": "554519"
  },
  {
    "text": "file and it will keep it around for",
    "start": "554519",
    "end": "556279"
  },
  {
    "text": "rotate wait seconds that's a",
    "start": "556279",
    "end": "558079"
  },
  {
    "text": "configuration on the tail plugin which",
    "start": "558079",
    "end": "559399"
  },
  {
    "text": "is 60 seconds by default I think um so",
    "start": "559399",
    "end": "562600"
  },
  {
    "text": "for another minute it will keep trying",
    "start": "562600",
    "end": "563920"
  },
  {
    "text": "to read any log lines that it hasn't",
    "start": "563920",
    "end": "565560"
  },
  {
    "text": "seen from that file or if for some",
    "start": "565560",
    "end": "567760"
  },
  {
    "text": "reason you add lines to your rotated",
    "start": "567760",
    "end": "569800"
  },
  {
    "text": "file those will show up too um after it",
    "start": "569800",
    "end": "572040"
  },
  {
    "text": "detects a rotation fluent bit will go",
    "start": "572040",
    "end": "573760"
  },
  {
    "text": "through a process to redetect what I'm I",
    "start": "573760",
    "end": "577640"
  },
  {
    "text": "consider like the canonic file like this",
    "start": "577640",
    "end": "579480"
  },
  {
    "text": "is the original file that we're tracking",
    "start": "579480",
    "end": "581160"
  },
  {
    "text": "this is the new iode that represents",
    "start": "581160",
    "end": "582959"
  },
  {
    "text": "this file that we're tracking",
    "start": "582959",
    "end": "585600"
  },
  {
    "text": "done 20 seconds",
    "start": "585600",
    "end": "589920"
  }
]