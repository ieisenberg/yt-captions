[
  {
    "text": "for those who don't know me my name is Steve Flanders I am a senior director of engineering at Splunk which was recently",
    "start": "120",
    "end": "5240"
  },
  {
    "text": "acquired by Cisco so I'm not sure which one I'm supposed to say uh but I still call myself a splunker uh I've been",
    "start": "5240",
    "end": "10759"
  },
  {
    "text": "involved with the open census which is kind of the precursor project to to open symmetry uh there was open sensus and",
    "start": "10759",
    "end": "16400"
  },
  {
    "text": "open tracing uh and now open symetry since the the very beginning uh been involved in the observability space for",
    "start": "16400",
    "end": "22880"
  },
  {
    "text": "over a decade now I was at VMware working on a logging product I joined as",
    "start": "22880",
    "end": "28240"
  },
  {
    "text": "part of a founding team uh at company called omnition that Splunk acquired it's now the Splunk APM product uh and",
    "start": "28240",
    "end": "34640"
  },
  {
    "text": "at Splunk I've been responsible for the Splunk infrastructure monitoring product which was the signal effects acquisition",
    "start": "34640",
    "end": "40120"
  },
  {
    "text": "uh so I've been working with traces metrics and logs uh for a very long time and then very recently in fact last week",
    "start": "40120",
    "end": "46000"
  },
  {
    "text": "I released a book called mastering open Symmetry and observability uh hopefully you will uh take a look at",
    "start": "46000",
    "end": "52559"
  },
  {
    "text": "it so let's start quick with a a poll I mean I think we're at cubec con so I",
    "start": "52559",
    "end": "57800"
  },
  {
    "text": "think there's going to be a lot of hands here but how many people have heard of open simetry okay great how many people are using open",
    "start": "57800",
    "end": "64040"
  },
  {
    "text": "slimmetry how many people are using open slimmetry in production oh wow I love it we've come a",
    "start": "64040",
    "end": "70159"
  },
  {
    "text": "long way uh so many people in fact earlier I was having some conversations with some folks that were talking about the collector uh which I thought was",
    "start": "70159",
    "end": "76520"
  },
  {
    "text": "great right so I'm going to start with a little bit of basics who has not used the open open elry before anyone here we",
    "start": "76520",
    "end": "83600"
  },
  {
    "text": "go yeah there's a few hands that that's expected so I'm going to start with a quick introduction of the project but I'm going to spend most of my time today",
    "start": "83600",
    "end": "90040"
  },
  {
    "text": "talking about one specific component and that is called The Collector uh so let's start at a very high level what is open",
    "start": "90040",
    "end": "96000"
  },
  {
    "text": "Telemetry basically it is an open standard uh that makes it possible to generate collect and process Telemetry",
    "start": "96000",
    "end": "103439"
  },
  {
    "text": "data uh you might have heard of the three pillars of observability traces metrics and logs open symmetry provides",
    "start": "103439",
    "end": "109479"
  },
  {
    "text": "a standard for that but it supports even more than those three pillars right you have things like client instrumentation",
    "start": "109479",
    "end": "115759"
  },
  {
    "text": "or profiling synthetic data and the like uh so the project is really focus focused on all Telemetry data that you",
    "start": "115759",
    "end": "121680"
  },
  {
    "text": "would care about in your environment whether that's within an application maybe an end user device like a browser",
    "start": "121680",
    "end": "127439"
  },
  {
    "text": "or a mobile device uh any language that you care about all of that would be covered but open simetry does not",
    "start": "127439",
    "end": "134959"
  },
  {
    "text": "provide a backend for that data instead it is vendor agnostic and allows you to",
    "start": "134959",
    "end": "140360"
  },
  {
    "text": "send that data wherever you want whether that's an open source project your own home Brown uh home BR home constructed",
    "start": "140360",
    "end": "146519"
  },
  {
    "text": "item uh or like a vendor for example cloud provider or or some service provider something to that extent but",
    "start": "146519",
    "end": "152519"
  },
  {
    "text": "very very flexible now how it does this is first it defines a standard that's called the specification the",
    "start": "152519",
    "end": "159200"
  },
  {
    "text": "specification basically defines the rules of like what must happen What should happen What could happen in terms",
    "start": "159200",
    "end": "164599"
  },
  {
    "text": "of generating this simetry data for any signal that it supports signal is the term that they use for this simetry data",
    "start": "164599",
    "end": "171319"
  },
  {
    "text": "so a metric is a signal Trace is a signal log is a signal there's different types of them uh and then the project",
    "start": "171319",
    "end": "177760"
  },
  {
    "text": "enables like context and correlation across these different signal types and there's a lot of value in that now you",
    "start": "177760",
    "end": "184319"
  },
  {
    "text": "may be wondering like well why does this matter why would you need a a standard for this because prior there wasn't one",
    "start": "184319",
    "end": "190400"
  },
  {
    "text": "and so basically any backend that you use would provide its own instrumentation uh and that may or may",
    "start": "190400",
    "end": "195560"
  },
  {
    "text": "not have the capabilities or the Integrations that you care about there security aspects operational concerns",
    "start": "195560",
    "end": "201360"
  },
  {
    "text": "and changing it especially from a customer end user perspective was very very difficult now you can instrument or",
    "start": "201360",
    "end": "208159"
  },
  {
    "text": "add data collection components from open Petry and you can use that across vendors across open source tools that",
    "start": "208159",
    "end": "213959"
  },
  {
    "text": "you have uh which makes it very very powerful so on top of this specification there's basically two reference",
    "start": "213959",
    "end": "219519"
  },
  {
    "text": "implementations there are what known as uh instrumentation libraries these actually go within your your code itself",
    "start": "219519",
    "end": "226000"
  },
  {
    "text": "uh you can do that through things like automatic instrumentation or manual instrumentation uh and then you have",
    "start": "226000",
    "end": "231040"
  },
  {
    "text": "basically a collector component you can think of it like an agent or a Gateway or a pipeline that basically exists that",
    "start": "231040",
    "end": "237400"
  },
  {
    "text": "will receive this Telemetry data processing in some way and then send it wherever you want it to go uh I could",
    "start": "237400",
    "end": "243640"
  },
  {
    "text": "spend all day just talking about the project there's really a lot to it but as I mentioned I'm going to focus a lot",
    "start": "243640",
    "end": "248799"
  },
  {
    "text": "on this data collection part today now why does open symmetry matter",
    "start": "248799",
    "end": "253959"
  },
  {
    "text": "well first kind of it has an open standard that's great because now we have kind of one way of doing things one",
    "start": "253959",
    "end": "259639"
  },
  {
    "text": "kind of terminology that we can follow uh but it also provides the ability of kind of being vendor agnostic so you're",
    "start": "259639",
    "end": "265600"
  },
  {
    "text": "no longer tied to a particular vendor when you're using uh instrumentation or data collection pie pieces uh this gives",
    "start": "265600",
    "end": "271280"
  },
  {
    "text": "you kind of data portability and data control you choose what to do with your Telemetry data you choose how much to",
    "start": "271280",
    "end": "277320"
  },
  {
    "text": "generate you choose where to send it you have full control of it now and that's",
    "start": "277320",
    "end": "282440"
  },
  {
    "text": "very very powerful so if you want to have a data Lake locally if you want to run like open source tools within your environment you can if you want to send",
    "start": "282440",
    "end": "288960"
  },
  {
    "text": "that to some like managed provider or a SAS solution you can if you want to send them to both like a local and ands as",
    "start": "288960",
    "end": "294759"
  },
  {
    "text": "you can uh it's very very powerful from a end user perspective to help you achieve observability",
    "start": "294759",
    "end": "300199"
  },
  {
    "text": "now of course we're at cucon so open symmetry is part of the cncf but it's actually a very active project in fact",
    "start": "300199",
    "end": "306080"
  },
  {
    "text": "it's the second most active one in all of cncf behind only kubernetes uh and this I actually think shows that it's a",
    "start": "306080",
    "end": "312720"
  },
  {
    "text": "real problem that needs to be solved and the community is great it has a very large ecosystem uh and you see",
    "start": "312720",
    "end": "318960"
  },
  {
    "text": "collaboration across vendors Cloud providers and end users which I think is amazing right because working together",
    "start": "318960",
    "end": "325400"
  },
  {
    "text": "that's how you get the best observability uh possibility at the end of the day and what you will see is that",
    "start": "325400",
    "end": "330639"
  },
  {
    "text": "basically every major vendor or cloud provider supports and contributes to open cementry today uh and many end",
    "start": "330639",
    "end": "336280"
  },
  {
    "text": "users have already either contributed or adopted it as well in their environments uh and again it's really for this",
    "start": "336280",
    "end": "342120"
  },
  {
    "text": "flexibility that it provides now you can have one way of doing it uh and it supports other Open Standards that are",
    "start": "342120",
    "end": "348039"
  },
  {
    "text": "out there right so it's meant to be flexible and extensible as the observability market kind of grows and",
    "start": "348039",
    "end": "353319"
  },
  {
    "text": "evolves so will the open symmetry project along with it all right so I mention mention most",
    "start": "353319",
    "end": "360199"
  },
  {
    "text": "this talk is on the collector so that's it for kind of introductory information what is the collector basically it's a",
    "start": "360199",
    "end": "365479"
  },
  {
    "text": "binary that exists that allows you to receive process and export data visually",
    "start": "365479",
    "end": "370560"
  },
  {
    "text": "kind of internally it looks something like this it's not a complete picture it's kind of a simplification of it uh",
    "start": "370560",
    "end": "376000"
  },
  {
    "text": "but you have this notion of basically receiving data kind of getting it into the collector and there's different ways",
    "start": "376000",
    "end": "381319"
  },
  {
    "text": "to do this you can kind of use push or pull mechanisms for example if you're familiar with Prometheus you would",
    "start": "381319",
    "end": "386440"
  },
  {
    "text": "usually scrape an endpoint to get metric data that would be kind of a pull mechanism versus if you've used",
    "start": "386440",
    "end": "392319"
  },
  {
    "text": "distributed tracing before it's often that the application will push the trace data to an agent or to an endpoint that",
    "start": "392319",
    "end": "398520"
  },
  {
    "text": "would be a push mechanism now once you receive this data you may actually want to do something with it just generating",
    "start": "398520",
    "end": "404680"
  },
  {
    "text": "it may not be sufficient for example maybe you want to process it in some way you want to filter what is actually sent",
    "start": "404680",
    "end": "411039"
  },
  {
    "text": "to an endpoint you want to redact sensitive information that might exist in there maybe you want to do some sort",
    "start": "411039",
    "end": "416280"
  },
  {
    "text": "of aggregation or sampling or what have you all of that happens within the internals of The Collector itself and",
    "start": "416280",
    "end": "422440"
  },
  {
    "text": "then eventually you want to export it you want to send it to some destination The Collector is usually not the final",
    "start": "422440",
    "end": "427560"
  },
  {
    "text": "spot for it um you could persist it to a dis if you wanted to but that's not all that valuable because at the end of the",
    "start": "427560",
    "end": "433240"
  },
  {
    "text": "day you want to actually query that data you want to get like dashboards and kind of visualizations or alerts from it and",
    "start": "433240",
    "end": "438879"
  },
  {
    "text": "again open Telemetry doesn't provide a a backend instead it plugs into available backends that are in the market",
    "start": "438879",
    "end": "445560"
  },
  {
    "text": "today all right now in terms of reference architectures there's two primary ways to deploy The Collector",
    "start": "445560",
    "end": "450720"
  },
  {
    "text": "today uh the modes are called Agent mode which basically means it runs as close to the application as possible that",
    "start": "450720",
    "end": "457080"
  },
  {
    "text": "might be a binary along with your application that might be a sidecar could be a Damon set in that it runs on",
    "start": "457080",
    "end": "462840"
  },
  {
    "text": "like every single host in kubernetes for example but basically it's very close to the app itself the benefits of this mode",
    "start": "462840",
    "end": "469400"
  },
  {
    "text": "are that you're basically offloading responsibility from the application as quickly as possible you have it generate",
    "start": "469400",
    "end": "474720"
  },
  {
    "text": "the Telemetry data but you don't have it do any of the processing now the benefits of that are kind of twofold one",
    "start": "474720",
    "end": "480280"
  },
  {
    "text": "is you're not introducing additional load within your application that consumes more CPU memory kind of resources in general and second you can",
    "start": "480280",
    "end": "487919"
  },
  {
    "text": "now have the The Collector which is a single binary handle all the processing in a generic way otherwise you have to",
    "start": "487919",
    "end": "494159"
  },
  {
    "text": "have those processing capabilities in every single language that you have in your environment because the application",
    "start": "494159",
    "end": "499240"
  },
  {
    "text": "instrumentation is going to be language specific at the end of the day uh so's some nuances to that in terms of",
    "start": "499240",
    "end": "504520"
  },
  {
    "text": "configuration or even knowing like language specific uh semantic conventions now the other way that you",
    "start": "504520",
    "end": "510039"
  },
  {
    "text": "can deploy The Collector is as a Gateway or or as a service this basically would sit in some sort of network boundary",
    "start": "510039",
    "end": "516719"
  },
  {
    "text": "maybe this is like a data center or region or realm or whatever your terminology is uh and in this mode it's",
    "start": "516719",
    "end": "523080"
  },
  {
    "text": "usually clustered so you have more than one instance of The Collector and you have usually a load balancer in front of",
    "start": "523080",
    "end": "528519"
  },
  {
    "text": "it so you can support uh a whole bunch of load coming in in agent mode you have one instance it runs right alongside the",
    "start": "528519",
    "end": "535959"
  },
  {
    "text": "application uh so if you're doing like um uh a Damon set you're going to have one per host you would not cluster it in",
    "start": "535959",
    "end": "542399"
  },
  {
    "text": "that in that way because it's using certain ports on that host you would have Port conflicts it doesn't actually",
    "start": "542399",
    "end": "547600"
  },
  {
    "text": "work uh in Gateway mode you have to have a cluster of these or you usually have a cluster of these because you want to have things like high availability uh or",
    "start": "547600",
    "end": "554560"
  },
  {
    "text": "maybe you're supporting a large number of applications or host in your environment so just the pure scale of it requires more than one instance uh both",
    "start": "554560",
    "end": "562240"
  },
  {
    "text": "the agent and The Collector can send data wherever you want it to so you don't have to use like both here you",
    "start": "562240",
    "end": "568480"
  },
  {
    "text": "don't you can choose either one and at the end of the day everything in hotel is optional so you can also choose not to use the collector uh if you wanted to",
    "start": "568480",
    "end": "575399"
  },
  {
    "text": "you can actually have the application the hotel library for example send directly to a back end if if that is uh",
    "start": "575399",
    "end": "580880"
  },
  {
    "text": "if that solves your business needs at the end of the day um so really flexibility and choice every step of the way depending on your requirements uh",
    "start": "580880",
    "end": "587720"
  },
  {
    "text": "personally I think the collector is kind of a great component because it offloads a lot of responsibilities and kind of can get you into a vendor agnostic State",
    "start": "587720",
    "end": "594640"
  },
  {
    "text": "a lot faster uh you don't don't even have to change your uh application instrumentation if you're already",
    "start": "594640",
    "end": "599880"
  },
  {
    "text": "instrumented your apps let's say it's not otel based as long as it's a format that the otel collector can receive it",
    "start": "599880",
    "end": "605600"
  },
  {
    "text": "will handle all the translations for you so you could receive in one format let's say you receive in Prometheus format and",
    "start": "605600",
    "end": "611640"
  },
  {
    "text": "you can export in a different format so if you want to send an OTL for example which is open telemetries protocol all",
    "start": "611640",
    "end": "617720"
  },
  {
    "text": "those translations happen within the collector automatically that's what makes it vendor agnostic at the end of the",
    "start": "617720",
    "end": "623839"
  },
  {
    "text": "day uh now there's a couple specific things I want to drill into this will become more relevant as we get into the",
    "start": "623839",
    "end": "629079"
  },
  {
    "text": "to the the demo but I mentioned it's a single binary that binary is written in go uh it's a compiled language so the",
    "start": "629079",
    "end": "634720"
  },
  {
    "text": "good news is it supports like major operating systems and you can just pull down that binary if you want to use it",
    "start": "634720",
    "end": "639959"
  },
  {
    "text": "there are other ways you could deploy as well I mean we're at cubec con right I'm sure lots of you are using Docker",
    "start": "639959",
    "end": "645160"
  },
  {
    "text": "containers or some sort of container engine uh you may even be using kubernetes all of that is fully",
    "start": "645160",
    "end": "650320"
  },
  {
    "text": "supported right open simetry is kind of borne into the cloud native error which is great so it has native support for",
    "start": "650320",
    "end": "655920"
  },
  {
    "text": "all these different environments uh and there is packaging for this built into the to open Telemetry community so if",
    "start": "655920",
    "end": "661760"
  },
  {
    "text": "you look at the documentation you'll find that there's Docker images that you can readily pull down uh and they they",
    "start": "661760",
    "end": "667440"
  },
  {
    "text": "are usually customized for what you're using so in the case of like kubernetes what you'll see soon is that there's",
    "start": "667440",
    "end": "672839"
  },
  {
    "text": "actually packaging where it only pulls in the components necessary to support kubernetes you could add more if you",
    "start": "672839",
    "end": "678040"
  },
  {
    "text": "wanted to uh but the goal is like to to give you native support for it easily uh and again everything is extensible so if",
    "start": "678040",
    "end": "684240"
  },
  {
    "text": "you want to write your own packaging it's actually possible to do that as well now there one uh notion in open",
    "start": "684240",
    "end": "690680"
  },
  {
    "text": "symmetry that you may have heard of it's called distributions uh open symmetry natively has three basically three",
    "start": "690680",
    "end": "697360"
  },
  {
    "text": "primary types of distributions for The Collector today uh but anyone can have a distribution of open slimmetry if they",
    "start": "697360",
    "end": "703200"
  },
  {
    "text": "want to that could be an end user that could be a vendor that could be another open source project um so the project",
    "start": "703200",
    "end": "708480"
  },
  {
    "text": "itself has three uh they're typically called core contrib and kubernetes or KES uh core basically has the core",
    "start": "708480",
    "end": "715760"
  },
  {
    "text": "capabilities that are required to use it with just pure uh so for example I mentioned that open",
    "start": "715760",
    "end": "721320"
  },
  {
    "text": "Telemetry has its own protocol called OTL as a result The Collector has an OTP",
    "start": "721320",
    "end": "726519"
  },
  {
    "text": "receiver and an OTL exporter because that's necessary for the project that would be in the core repository because",
    "start": "726519",
    "end": "732279"
  },
  {
    "text": "it's core to the open Telemetry project contrib is where everything that's not core to the project or maybe is a little",
    "start": "732279",
    "end": "738399"
  },
  {
    "text": "bit more Nuance maybe it's only applicable to a subset of environments it would live in contrib so if you have",
    "start": "738399",
    "end": "743760"
  },
  {
    "text": "something let's say I want to send data to an endpoint like Zipkin or joerger that's going to be in the Tri repository",
    "start": "743760",
    "end": "750240"
  },
  {
    "text": "it's not core to open simmetry but it is a capability that some amount of end users are going to care about and want",
    "start": "750240",
    "end": "756040"
  },
  {
    "text": "at the end of the day now the the reason why I'm mentioning core versus contrib is because that'll be necessary to",
    "start": "756040",
    "end": "761959"
  },
  {
    "text": "actually configure The Collector coming up that's why I want to make sure to cover it and the case of kubernetes",
    "start": "761959",
    "end": "767000"
  },
  {
    "text": "again as I mentioned this just packages the applicable components the receivers processors exporters that you need to",
    "start": "767000",
    "end": "773279"
  },
  {
    "text": "support a kubernetes environment uh now there is a tool available called OCB which allows you to build your own",
    "start": "773279",
    "end": "779639"
  },
  {
    "text": "distribution so if there are like certain components you want to pull out of contrib you don't want every single",
    "start": "779639",
    "end": "784760"
  },
  {
    "text": "component that exists in contrib you only want a subset you can actually build a manifest file and create your own distributions and what you will see",
    "start": "784760",
    "end": "791600"
  },
  {
    "text": "is that a lot of cloud providers and vendors and open source projects had their own distributions too right so a",
    "start": "791600",
    "end": "797800"
  },
  {
    "text": "distribution is not a fork so if a distribution is done right it's basically pulling in the open citry",
    "start": "797800",
    "end": "803360"
  },
  {
    "text": "components that are necessary in order to support a specific environment most uh vendors today have their own",
    "start": "803360",
    "end": "810079"
  },
  {
    "text": "distribution usually they're only pulling in the components that are relevant to them maybe they have their own for example vendor specific exporter",
    "start": "810079",
    "end": "817079"
  },
  {
    "text": "that would be in their distribution if you're not using that vendor you don't need that exporter um many vendors are",
    "start": "817079",
    "end": "822880"
  },
  {
    "text": "actually moving to the open simetry format so hopefully in the future it'll all just be native OTL uh but not all",
    "start": "822880",
    "end": "828519"
  },
  {
    "text": "are there today uh so that's one particular example or maybe there's some like specific thing that a vendor",
    "start": "828519",
    "end": "834160"
  },
  {
    "text": "supports that's not applicable to other environments or what have you maybe that could be in a distribution as well",
    "start": "834160",
    "end": "839600"
  },
  {
    "text": "um ideally distributions should not be custom and that they contain things that are not eventually going to make it into",
    "start": "839600",
    "end": "845079"
  },
  {
    "text": "the open simetry project because that would be vendor lock in again right it doesn't actually preclude the the",
    "start": "845079",
    "end": "850920"
  },
  {
    "text": "problem of hey I've instrumented one so I have one data collector and now I can collect everything so ideally it should",
    "start": "850920",
    "end": "856639"
  },
  {
    "text": "be the same config that otel provides uh and it's possible maybe uh some some third party has developed something that",
    "start": "856639",
    "end": "863079"
  },
  {
    "text": "they haven't been able to get Upstream yet maybe they temporarily have that in distribution but longterm everything",
    "start": "863079",
    "end": "868440"
  },
  {
    "text": "within a distri bution should be available in Upstream all right so let's talk a",
    "start": "868440",
    "end": "873680"
  },
  {
    "text": "little bit about open symmetry configuration and I've mentioned several of these already right but there's basically five major components to The",
    "start": "873680",
    "end": "880639"
  },
  {
    "text": "Collector receivers getting data in processors we talked about those exporters there's two more uh so one is",
    "start": "880639",
    "end": "886959"
  },
  {
    "text": "called extensions these are usually things that do not touch the Telemetry",
    "start": "886959",
    "end": "892000"
  },
  {
    "text": "data themselves but provide some sort of capability that you might want so for",
    "start": "892000",
    "end": "897399"
  },
  {
    "text": "example if you want to have like health check capabilities for The Collector that's an extension uh but extensions",
    "start": "897399",
    "end": "903519"
  },
  {
    "text": "can actually enrich things like receivers and exporters let's say I want to have some way of like authenticating",
    "start": "903519",
    "end": "909079"
  },
  {
    "text": "a receiver or an exporter that would live it as an extension let's say I want to have things like service discovery",
    "start": "909079",
    "end": "914839"
  },
  {
    "text": "that would be an extension and so that extension could be called by a receiver or an exporter but an extension itself",
    "start": "914839",
    "end": "920800"
  },
  {
    "text": "doesn't typically touch the Telemetry data it provides some additional capabilities on top of it and then the",
    "start": "920800",
    "end": "926720"
  },
  {
    "text": "newest type of component is what's known as a connector a connector is unique in that it is both a receiver and an",
    "start": "926720",
    "end": "933120"
  },
  {
    "text": "exporter uh and so what a connector does is uh in open symmetry you build what are called pipelines so I Define like",
    "start": "933120",
    "end": "940160"
  },
  {
    "text": "receivers how I get data in uh processors what I want to do with that data exporters how I get that data out",
    "start": "940160",
    "end": "946160"
  },
  {
    "text": "that would be a pipeline I can have multiple of these pipelines but after I run that flow let's say I get to the exporter step maybe I want to reprocess",
    "start": "946160",
    "end": "953639"
  },
  {
    "text": "it again I want to do something else with the data that's where a connector comes in so for example let's say",
    "start": "953639",
    "end": "959079"
  },
  {
    "text": "process something and I get some Metric out the other end that I care about and I want to do something with that metric",
    "start": "959079",
    "end": "964639"
  },
  {
    "text": "I could create a connector that says okay I'm going to export into the connector and I'm going to reprocess it in a new receiver which is the same",
    "start": "964639",
    "end": "970519"
  },
  {
    "text": "connector and I'm going to do a different thing with that output at the end of the day um so there's a bunch of different use cases for this but it's a",
    "start": "970519",
    "end": "976399"
  },
  {
    "text": "little bit more advanced I'm not going to talk too much about it but you should know that that is available components as well how was The otel Collector",
    "start": "976399",
    "end": "983759"
  },
  {
    "text": "configured yaml how many people like yaml oh wow a lot how many people people",
    "start": "983759",
    "end": "989120"
  },
  {
    "text": "don't like yaml yeah I'm with all of you I've never liked yaml uh so everything's yaml Bas you're in kubernetes",
    "start": "989120",
    "end": "995880"
  },
  {
    "text": "everything's yaml based so I mean you're going to be very very familiar with it at the end of the day uh but the nice",
    "start": "995880",
    "end": "1000959"
  },
  {
    "text": "thing is if you understand the components and the structure of the collector you kind of understand how the configuration of yaml works right so",
    "start": "1000959",
    "end": "1007639"
  },
  {
    "text": "like every component I mentioned that's a top level construct in the yaml config you can see receivers here right you can",
    "start": "1007639",
    "end": "1013519"
  },
  {
    "text": "see processors exporters very very simple and then for every single receiver a receiver has a name for",
    "start": "1013519",
    "end": "1019639"
  },
  {
    "text": "example you can see a host metrics receiver here and then every single component can have some amount of configuration and of course that is",
    "start": "1019639",
    "end": "1026240"
  },
  {
    "text": "documented somewhere so you need to go find that documentation but then you you specify the right amount of configuration for it and that component",
    "start": "1026240",
    "end": "1032918"
  },
  {
    "text": "will work now there's a couple things to note about the collector configuration",
    "start": "1032919",
    "end": "1037959"
  },
  {
    "text": "specifically uh it's really a two-step process so step one is you must Define",
    "start": "1037959",
    "end": "1044520"
  },
  {
    "text": "the components that you want to use and configure them the way that you want them to be configured so if you want receivers processors",
    "start": "1044520",
    "end": "1051080"
  },
  {
    "text": "exporters you have to have a section for those and you must properly configure it but just putting it in the config just",
    "start": "1051080",
    "end": "1057160"
  },
  {
    "text": "this top level that you can see highlighted here that does not enable it it has only defined it and configured it",
    "start": "1057160",
    "end": "1063840"
  },
  {
    "text": "to enable it you must add it to a service pipeline that's the second step so you can see at the bottom here it",
    "start": "1063840",
    "end": "1070000"
  },
  {
    "text": "says Service pipelines those pipelines are to imetry specific so you can see metrics and traces listed here but logs",
    "start": "1070000",
    "end": "1076799"
  },
  {
    "text": "and other other data types would also show up and then for metrics you can see it defines which receivers it's going to",
    "start": "1076799",
    "end": "1082440"
  },
  {
    "text": "call and clearly this receiver must support metrics otherwise the config would fail and then exporters but you",
    "start": "1082440",
    "end": "1088080"
  },
  {
    "text": "have to specify the ones that you want so configuration here is really a two-step process if you only Define it",
    "start": "1088080",
    "end": "1094400"
  },
  {
    "text": "uh if you define it outside of a service pipeline like let's say I had uh this host metrics receiver up here but it",
    "start": "1094400",
    "end": "1099840"
  },
  {
    "text": "wasn't listed in any of these pipelines it's kind of useless it's not actually doing anything it's just in the config",
    "start": "1099840",
    "end": "1106039"
  },
  {
    "text": "so note that you have to do kind of both parts now how do I find all these configuration options get Hub readme",
    "start": "1106039",
    "end": "1112520"
  },
  {
    "text": "pages so going back to this core versus contrib thing let's say that I care",
    "start": "1112520",
    "end": "1117799"
  },
  {
    "text": "about a specific receiver config I would have to know whether it's in the core repository or the contrib here I'm in",
    "start": "1117799",
    "end": "1124080"
  },
  {
    "text": "contrib I'd have to go to whatever component I care about here I'm in receivers maybe you want processors or",
    "start": "1124080",
    "end": "1129840"
  },
  {
    "text": "exporters and then I'd have to go find the config or the component that I'm trying to configure in that component so",
    "start": "1129840",
    "end": "1136400"
  },
  {
    "text": "here I'm looking at the OTL receiver there's a readme file and that readme file has a configuration with yaml",
    "start": "1136400",
    "end": "1142240"
  },
  {
    "text": "examples on what's required to get started and all the configuration options that exist there so this is a",
    "start": "1142240",
    "end": "1148080"
  },
  {
    "text": "great reference to make sure that you're configuring it properly at the end of the day you will have to check to see if it's in core or cont trip now once you",
    "start": "1148080",
    "end": "1155360"
  },
  {
    "text": "know the configuration you have to specify that to The Collector at the end of the day uh The Collector is binary so",
    "start": "1155360",
    "end": "1161080"
  },
  {
    "text": "here you can see uh multiple different examples one is taking the otel co binary and passing a config flag and I",
    "start": "1161080",
    "end": "1168320"
  },
  {
    "text": "pass a ammo file and you can actually pass more than one and you can actually combine these so it can get very complicated depending on how you want to",
    "start": "1168320",
    "end": "1174360"
  },
  {
    "text": "do this uh those config files could be statically defined or dynamically generated for example you can pass",
    "start": "1174360",
    "end": "1180559"
  },
  {
    "text": "environmental variables into the Amo file if you want to uh and there is something in open symmetry that makes it",
    "start": "1180559",
    "end": "1186760"
  },
  {
    "text": "a little bit more SQL like uh it's called the open symmetry transformation language or OTL uh and this is another",
    "start": "1186760",
    "end": "1193679"
  },
  {
    "text": "way of specifying configuration uh a lot of OTL is still in the alpha state so I'm not going to talk too much about it",
    "start": "1193679",
    "end": "1199799"
  },
  {
    "text": "but I do think it's a very cool project and something to take a look at and I think in the future many of the processors if not the entire otel config",
    "start": "1199799",
    "end": "1206720"
  },
  {
    "text": "will be based on OTL so stay tuned for more information regarding that all right so let's do a quick demo",
    "start": "1206720",
    "end": "1213880"
  },
  {
    "text": "on how to kind of get this working uh for an environment so I have downloaded the binary to my system I'm on uh an OSX",
    "start": "1213880",
    "end": "1222000"
  },
  {
    "text": "system here so I have Darwin arm 64 and uh in here it basically just has the uh",
    "start": "1222000",
    "end": "1227840"
  },
  {
    "text": "contrib reposit so I'm not using core I'm using contrib because it has a lot more cool components and so if I just",
    "start": "1227840",
    "end": "1232919"
  },
  {
    "text": "want to run this I would just say start the the binary right now it's not going to work because by default there is no",
    "start": "1232919",
    "end": "1239520"
  },
  {
    "text": "config that I specified to it so it doesn't start it basically says you need to provide a configuration so uh let's",
    "start": "1239520",
    "end": "1245799"
  },
  {
    "text": "go ahead and build something so as I mentioned we have to have components that we care about so I'm going to want",
    "start": "1245799",
    "end": "1252120"
  },
  {
    "text": "receivers I can say OTP again open simetry protocol and I can say host",
    "start": "1252120",
    "end": "1257200"
  },
  {
    "text": "metrics let's use that as an example and host metrics has this notion of scrapers scrapers are things like CPU memory dis",
    "start": "1257200",
    "end": "1264559"
  },
  {
    "text": "things that I care about and let's say I want to enable the memory scraper so very very basic configuration here and",
    "start": "1264559",
    "end": "1270840"
  },
  {
    "text": "then I will Define exporters and to make it very very simple uh I'm going to use the debug exporter which basically logs",
    "start": "1270840",
    "end": "1277559"
  },
  {
    "text": "the output to the console uh so I'm not actually sending it anywhere specific but of course you could send this to Jer",
    "start": "1277559",
    "end": "1283279"
  },
  {
    "text": "Prometheus or elastic or whatever you care about any back end uh all those configurations are going to be kind of",
    "start": "1283279",
    "end": "1289159"
  },
  {
    "text": "specific to your environment now all I need to specify is receivers and exporters processors are technically",
    "start": "1289159",
    "end": "1294960"
  },
  {
    "text": "optional so this is a valid config at the end of the day but I have only uh defined them and configured them I still",
    "start": "1294960",
    "end": "1301520"
  },
  {
    "text": "have to build my service pipelines uh and so here let's say I want to have a metric one and I have to again Define",
    "start": "1301520",
    "end": "1308799"
  },
  {
    "text": "the order in which I want these to happen so I'm going to say let's enable the host metric receiver and let's uh",
    "start": "1308799",
    "end": "1315120"
  },
  {
    "text": "send that data to the debug exporter so I mean very very basic config at the at",
    "start": "1315120",
    "end": "1320880"
  },
  {
    "text": "the end of the day here I'm not actually doing anything with the data I'm just taking it in and I'm sending it back out",
    "start": "1320880",
    "end": "1325960"
  },
  {
    "text": "on the other end now uh first question might be is this config valid answer is",
    "start": "1325960",
    "end": "1331840"
  },
  {
    "text": "actually no but um you don't know when you're typing in yaml but it turns out that open symmetry has this validate uh",
    "start": "1331840",
    "end": "1338880"
  },
  {
    "text": "command which is pretty cool so basically it will validate the config file that you have uh and make sure that",
    "start": "1338880",
    "end": "1344520"
  },
  {
    "text": "it is actually uh containing what you what you you need so here it's going to",
    "start": "1344520",
    "end": "1349679"
  },
  {
    "text": "come back and say this is not valid right I I looked at this and it says",
    "start": "1349679",
    "end": "1355279"
  },
  {
    "text": "that the exporter is an invalid key for the service pipeline metrics okay so",
    "start": "1355279",
    "end": "1360360"
  },
  {
    "text": "that's because it's exporters plural matters here I have a syntax error now",
    "start": "1360360",
    "end": "1365880"
  },
  {
    "text": "the reason why I'm showing you this validate command is because I don't see a lot of people use it uh if you were to",
    "start": "1365880",
    "end": "1370960"
  },
  {
    "text": "push this to production and you don't run the validate commands The Collector didn't start as you saw right that means",
    "start": "1370960",
    "end": "1376760"
  },
  {
    "text": "it crashed well let's say you had a working collector config you made a modification you push that to production",
    "start": "1376760",
    "end": "1382440"
  },
  {
    "text": "you don't run the validate command you would bring down the collector and you'd start losing Telemetry data it's not",
    "start": "1382440",
    "end": "1388240"
  },
  {
    "text": "great right so you should always validate before you actually deploy this otherwise you'll run into problems okay",
    "start": "1388240",
    "end": "1394039"
  },
  {
    "text": "so we fixed the first typo now it's saying hey there's something wrong with the OTL Receiver right it says that it",
    "start": "1394039",
    "end": "1399600"
  },
  {
    "text": "needs to specify some sort of protocol well maybe it's my first time using the OTP receiver so I know nothing about it",
    "start": "1399600",
    "end": "1406640"
  },
  {
    "text": "so let's go ahead and go find the uh open simetry receiver so I'm in the core",
    "start": "1406640",
    "end": "1412320"
  },
  {
    "text": "repository receivers OTL there's a read me it says well if you define an OTL",
    "start": "1412320",
    "end": "1417960"
  },
  {
    "text": "receiver you must Define protocols and you can choose grpc or HTTP or both well",
    "start": "1417960",
    "end": "1423200"
  },
  {
    "text": "I didn't do that so again I have an invalid configuration so if things are not working on your collector go check",
    "start": "1423200",
    "end": "1429279"
  },
  {
    "text": "the readme files they're very very helpful uh if you see a documentation problem in the readme please file an issue or submit a a PR to kind of fix it",
    "start": "1429279",
    "end": "1436600"
  },
  {
    "text": "uh but the readme file is a great way to see if you're doing things correctly so I can say protocols here and I could",
    "start": "1436600",
    "end": "1443039"
  },
  {
    "text": "protocols and I could say something like HTTP and now let's run it one more time and see if we are valid and no error",
    "start": "1443039",
    "end": "1450400"
  },
  {
    "text": "this time great I at least have a valid config now it's valid but remember I",
    "start": "1450400",
    "end": "1455640"
  },
  {
    "text": "have OTL defined here I didn't Define it in a pipeline OTP is not actually being enabled so it's kind of useless but it",
    "start": "1455640",
    "end": "1462120"
  },
  {
    "text": "is Val config like The Collector will start it's not going to crash on me uh so we have kind of our first step so",
    "start": "1462120",
    "end": "1467840"
  },
  {
    "text": "let's go ahead and run this I can say run it with the config file and now it will start and it is actually logging",
    "start": "1467840",
    "end": "1474440"
  },
  {
    "text": "information that is very very relevant for example it tells you what is actually being configured in these info messages and if something was wrong it",
    "start": "1474440",
    "end": "1481559"
  },
  {
    "text": "would actually show warnings and errors in the logs so I highly recommend that you look at the logs as well this is a",
    "start": "1481559",
    "end": "1486880"
  },
  {
    "text": "great way to see if things are working as you expect at the end of the day now the most important line is actually this",
    "start": "1486880",
    "end": "1492640"
  },
  {
    "text": "last one which basically says hey I actually collected some metrics and uh three data points actually and I sent it",
    "start": "1492640",
    "end": "1499200"
  },
  {
    "text": "to the debug exporter now you can't actually see that here because it's not being it's just being summarized as to",
    "start": "1499200",
    "end": "1504640"
  },
  {
    "text": "what's being generated let's make this a little bit easier to to see so we can say uh",
    "start": "1504640",
    "end": "1511320"
  },
  {
    "text": "verbosity debug and just rerun this and then oop unknown metrics verocity oh",
    "start": "1511320",
    "end": "1519440"
  },
  {
    "text": "details yes my bad details see this is why you need to go check the config",
    "start": "1519440",
    "end": "1526320"
  },
  {
    "text": "uh go and so so now that summarized line becomes an actual output that I can read",
    "start": "1526320",
    "end": "1533080"
  },
  {
    "text": "so I configured the metric scraper for memory and you can see it created symmetrics for me used free and inactive",
    "start": "1533080",
    "end": "1540559"
  },
  {
    "text": "and you can see the value of those data points as well so if I were to send this to Prometheus it should receive this",
    "start": "1540559",
    "end": "1546760"
  },
  {
    "text": "data or if I expose a Prometheus endpoint it could be scraped by a Prometheus server so again very easy to",
    "start": "1546760",
    "end": "1551840"
  },
  {
    "text": "get started but this is pretty basic right like no one's probably going to have just one receiver one exporter at",
    "start": "1551840",
    "end": "1557600"
  },
  {
    "text": "the very least you're going to have processors so let's talk about processors because they're kind of uh important and unique here so first",
    "start": "1557600",
    "end": "1565600"
  },
  {
    "text": "there's something known as the batch processor and second there's one called the memory limiter uh I'm going to call",
    "start": "1565600",
    "end": "1571200"
  },
  {
    "text": "these out explicitly because uh it's a little bit buried in the documentation if you look you go to the colle I'm open",
    "start": "1571200",
    "end": "1578039"
  },
  {
    "text": "symmetry iio docs collector if you go to the configuration it will tell you how to like configure so you can see passing",
    "start": "1578039",
    "end": "1583840"
  },
  {
    "text": "the config flag it's showing you different ways of passing environmental variables it tells you about receivers",
    "start": "1583840",
    "end": "1589080"
  },
  {
    "text": "processors and exporters we can go to processors and there's a link here that says processors are optional although",
    "start": "1589080",
    "end": "1595360"
  },
  {
    "text": "some are recommended that's interesting let's click that and it tells you actually that you should have the memory",
    "start": "1595360",
    "end": "1600600"
  },
  {
    "text": "limiter first and the batch close to the end and some other specific ones in between well you have to manually",
    "start": "1600600",
    "end": "1607679"
  },
  {
    "text": "configure this so if you didn't read the documentation you might not be aware of this but by default open symmetry",
    "start": "1607679",
    "end": "1612960"
  },
  {
    "text": "doesn't batch so every single like Telemetry thing that's being generated will just export immediately well well",
    "start": "1612960",
    "end": "1618360"
  },
  {
    "text": "at scale that's not ideal you kind of want to batch this stuff up it compresses very very well you want to resour uh limit some of the resource use",
    "start": "1618360",
    "end": "1624840"
  },
  {
    "text": "or network connections that you're making the memory limiter is actually also very important if you don't configure the memory limiter then the",
    "start": "1624840",
    "end": "1630799"
  },
  {
    "text": "collector can eventually consume all the memory and then crash because it's out of memory so setting the limiter in place is very important for production",
    "start": "1630799",
    "end": "1637159"
  },
  {
    "text": "environments otherwise Again The Collector could be in some sort of Crash Loop State and you'll be dropping Telemetry data so I highly recommend",
    "start": "1637159",
    "end": "1643279"
  },
  {
    "text": "configuring both uh the batch processor actually has a default config that's pretty sane so you don't typically have",
    "start": "1643279",
    "end": "1648679"
  },
  {
    "text": "to specify more options um in the case of the memory limiter you have to",
    "start": "1648679",
    "end": "1654000"
  },
  {
    "text": "specify how often you want it to check maybe like 5 Seconds uh and you need to specify at least some sort of limit so",
    "start": "1654000",
    "end": "1660120"
  },
  {
    "text": "I'm going to specify like a 400 megabyte limit and then again that's only to find it and configured it if I want it to",
    "start": "1660120",
    "end": "1666720"
  },
  {
    "text": "actually be enabled I have to put it into a pipeline so I would have to say memory limiter because it recommends",
    "start": "1666720",
    "end": "1672679"
  },
  {
    "text": "putting that first and then batch so that actually brings up another excellent point which is",
    "start": "1672679",
    "end": "1678799"
  },
  {
    "text": "processors that list is executed in the order in which you define it so the memory limiter is being run first the",
    "start": "1678799",
    "end": "1686200"
  },
  {
    "text": "batch processor is being run second if I switch the order it happens in this the different order so the processors are",
    "start": "1686200",
    "end": "1692960"
  },
  {
    "text": "the only ones with the order that you define it in the configuration matter it's not true for receivers or exporters",
    "start": "1692960",
    "end": "1698159"
  },
  {
    "text": "it's only true for processors uh so keep that in mind so okay did that uh First",
    "start": "1698159",
    "end": "1703600"
  },
  {
    "text": "Step should be validate the config let's make sure it's actually valid there's no errors great then I can just rerun it",
    "start": "1703600",
    "end": "1710120"
  },
  {
    "text": "and this is the exact same test I didn't actually change the Telemetry data so the output is going to be the same other than the values and the time stamps have",
    "start": "1710120",
    "end": "1715919"
  },
  {
    "text": "changed but like it's behaving the exact same way but now I have a more production like config I'm configuring",
    "start": "1715919",
    "end": "1722320"
  },
  {
    "text": "things that are recommended by the openet project one final thing let's add one more that's actually a little bit",
    "start": "1722320",
    "end": "1727880"
  },
  {
    "text": "more interesting I'm going to add the resource detector uh I'm going to probably forget",
    "start": "1727880",
    "end": "1734399"
  },
  {
    "text": "the config here uh detectors and system so this is going to check the",
    "start": "1734399",
    "end": "1741120"
  },
  {
    "text": "system uh and attempt to add more metadata I hope it is called resource detector I'm going to find out in a",
    "start": "1741120",
    "end": "1747240"
  },
  {
    "text": "second uh and I want to add it between these two so resource",
    "start": "1747240",
    "end": "1752440"
  },
  {
    "text": "detector and let's see how I did in terms of configuration nope uh resource",
    "start": "1752440",
    "end": "1758919"
  },
  {
    "text": "detector processors what's it called I forgot what is",
    "start": "1758919",
    "end": "1765279"
  },
  {
    "text": "it detector one yeah resource",
    "start": "1765279",
    "end": "1772840"
  },
  {
    "text": "detect oh oh thank you oh it's just a typo thanks pretty close still doesn't like",
    "start": "1772840",
    "end": "1780360"
  },
  {
    "text": "me resource detector thank you thank you resource",
    "start": "1780360",
    "end": "1787600"
  },
  {
    "text": "detection so close it's been a long day no",
    "start": "1787600",
    "end": "1793399"
  },
  {
    "text": "underscore really no not no on score okay I tested this before and I've",
    "start": "1793760",
    "end": "1799360"
  },
  {
    "text": "already forgotten so this is why checking the documentation is important and hey thanks folks uh config",
    "start": "1799360",
    "end": "1809039"
  },
  {
    "text": "so this is only going to do one thing it's going to still generate the used free and inactive but if you scroll up",
    "start": "1809039",
    "end": "1816080"
  },
  {
    "text": "you're actually going to see that it now contains some more metadata that it didn't contain any before that metadata is the host name and the OS type of my",
    "start": "1816080",
    "end": "1822840"
  },
  {
    "text": "system now the resource detection processor can do a lot more than this it's a very basic example uh and it can",
    "start": "1822840",
    "end": "1828640"
  },
  {
    "text": "hook into things like kubernetes or your Docker a Damon set or anything like that and collect that metadata too um but",
    "start": "1828640",
    "end": "1834720"
  },
  {
    "text": "this is enriching this limitary data and honestly this is very important because that's how you do problem isolation and",
    "start": "1834720",
    "end": "1839840"
  },
  {
    "text": "kind of root cause detection at the end of the day you want to know why memory is high or where exactly in your environment it's happening that's where",
    "start": "1839840",
    "end": "1846080"
  },
  {
    "text": "things like resource detection can be helpful uh now a final example would be like showing you how to do like crud",
    "start": "1846080",
    "end": "1851559"
  },
  {
    "text": "metadata operations create remove update delete type things uh you can do that to any of the metadata that's attached here",
    "start": "1851559",
    "end": "1857679"
  },
  {
    "text": "for example if there was some like personally identifying information or something that you didn't want to like send to a backend to an exporter you",
    "start": "1857679",
    "end": "1863880"
  },
  {
    "text": "could actually Reda that information or hash it uh if you wanted to enrich this from The Collector let's say I want to add a tag for everything that comes",
    "start": "1863880",
    "end": "1870320"
  },
  {
    "text": "through the collector you can do that as well through processors uh so again pretty easy to get started but you have",
    "start": "1870320",
    "end": "1876639"
  },
  {
    "text": "to know that syntax and even I made a mistake here live right like you have to check the readmes for this the otel",
    "start": "1876639",
    "end": "1882480"
  },
  {
    "text": "documentation I think is pretty rich so definitely take a look they have different examples to kind of get you started but all those receivers",
    "start": "1882480",
    "end": "1888440"
  },
  {
    "text": "processors exporters they're in the GitHub repo today they are not fully up on the on the doc site hopefully that",
    "start": "1888440",
    "end": "1893679"
  },
  {
    "text": "will be fixed at some point here very very soon okay so uh wrapping up",
    "start": "1893679",
    "end": "1900519"
  },
  {
    "text": "here I have a link to kind of everything that I kind of showed here so you can kind of review this afterwards I'll share the links on the on the schedule",
    "start": "1900519",
    "end": "1907519"
  },
  {
    "text": "site so you can kind of see it and then finally uh thanks so much hopefully you found this kind of useful uh hopefully",
    "start": "1907519",
    "end": "1913039"
  },
  {
    "text": "you'll take a look at the book I actually have a few copies so we can do that for like people that have questions uh there's a promo code if for people",
    "start": "1913039",
    "end": "1919600"
  },
  {
    "text": "that go to cucon if you're interested so thank you very [Applause]",
    "start": "1919600",
    "end": "1926480"
  },
  {
    "text": "much and I have a couple couple minutes for questions if you could use the microphones it would be",
    "start": "1926480",
    "end": "1934240"
  },
  {
    "text": "great hello hey um so from the some of the other talks that we heard is like if",
    "start": "1937159",
    "end": "1943480"
  },
  {
    "text": "you want to get metrics at the full resolution while sampling traces we need to run a layered collector is that what",
    "start": "1943480",
    "end": "1950639"
  },
  {
    "text": "you would recommend where we need to run like collector in multiple layers if you want to preserve metrics while just",
    "start": "1950639",
    "end": "1957840"
  },
  {
    "text": "sampling traces so so you're sampling traces but you want all the metrics is that correct yeah with 100% fertility",
    "start": "1957840",
    "end": "1963320"
  },
  {
    "text": "yeah yeah so there there is a connector for this that will give you the the the red metrics out of the the data uh and",
    "start": "1963320",
    "end": "1969679"
  },
  {
    "text": "then if you're using something like tail sampling you'll have to use like a a routing you you have to Route the every",
    "start": "1969679",
    "end": "1974880"
  },
  {
    "text": "single trace within every span within the same trace the same collector instance so if you're using the",
    "start": "1974880",
    "end": "1979919"
  },
  {
    "text": "collector and agent mode it actually has a way of routing to the dynamically based on the trace ID to the same",
    "start": "1979919",
    "end": "1985639"
  },
  {
    "text": "instance you have to enable that in agent mode and then within the collector you have to enable the connector that would actually do the metrics for you if",
    "start": "1985639",
    "end": "1992000"
  },
  {
    "text": "you wanted to you could separate the metrics and the traces into different collector clusters um that's really only",
    "start": "1992000",
    "end": "1998120"
  },
  {
    "text": "necessary at high scale or if you really care about one Telemetry type over the other and you don't want to have Noisy",
    "start": "1998120",
    "end": "2003679"
  },
  {
    "text": "Neighbor problems uh for Simplicity sake I would say doing it in the same col instance is probably fine for most use",
    "start": "2003679",
    "end": "2009880"
  },
  {
    "text": "cases uh but at massive scale or for some Corner cases you may need to break that out thanks",
    "start": "2009880",
    "end": "2018760"
  },
  {
    "text": "yes so a stupid question uh is there any uh is there any ways to debug uh the",
    "start": "2018760",
    "end": "2026240"
  },
  {
    "text": "like processor logic other than like using the debug exporter uh so what I",
    "start": "2026240",
    "end": "2031519"
  },
  {
    "text": "faced was like when I tried to configure uh T to spam Matrix con",
    "start": "2031519",
    "end": "2038639"
  },
  {
    "text": "I wrote a completely like incorrect OTL and didn't export anything and need to",
    "start": "2038639",
    "end": "2043919"
  },
  {
    "text": "figure out and I couldn't figure out why it's wrong by just checking the debug exporters y so yeah so you're asking",
    "start": "2043919",
    "end": "2051398"
  },
  {
    "text": "like hey I want to make sure this thing is working properly how do I see more of the internals it depends on which part you care about uh so for example if you",
    "start": "2051399",
    "end": "2058358"
  },
  {
    "text": "care more about like how the pipelines are constructed there's a Z pages extension and it'll actually show you the pipelines live there's actually a",
    "start": "2058359",
    "end": "2065040"
  },
  {
    "text": "CLA wide way to actually see the pipeline to to make make sure it's like looking the way that you think that it is um there are even sites like otel",
    "start": "2065040",
    "end": "2071720"
  },
  {
    "text": "bin. where you can take a yl file and upload it and it will visually show you",
    "start": "2071720",
    "end": "2076878"
  },
  {
    "text": "what your configuration looks like U so if that's your problem there are ways to do it but if it is like hey I've",
    "start": "2076879",
    "end": "2082280"
  },
  {
    "text": "configured it a certain way and I'm not seeing the output that I expect or like the data is being dropped somewhere the",
    "start": "2082280",
    "end": "2087520"
  },
  {
    "text": "de debug Explorer is one of the easiest ways I'd say um there was another one I'm not sure if it's still there called",
    "start": "2087520",
    "end": "2093040"
  },
  {
    "text": "the tap exporter and there was a way of tapping a pipeline to see data between it I'm not sure if that's still there uh",
    "start": "2093040",
    "end": "2099119"
  },
  {
    "text": "but personally I use the debug exporter often when I'm having issues like that all thank you yep go ahead hi I have a",
    "start": "2099119",
    "end": "2106880"
  },
  {
    "text": "uh question about uh large scale use cases of open Telemetry oftentimes it's advised in monitoring systems to push",
    "start": "2106880",
    "end": "2113839"
  },
  {
    "text": "aggregations to the edge as much as possible yep um are there either any stateful or stateless aggregation",
    "start": "2113839",
    "end": "2121119"
  },
  {
    "text": "capabilities currently in the collector and are there plans to add those sorts of capabilities in the future yeah yeah",
    "start": "2121119",
    "end": "2127440"
  },
  {
    "text": "uh so we actually having this some of this conversation earlier so I talked a lot about the yaml config of The",
    "start": "2127440",
    "end": "2133400"
  },
  {
    "text": "Collector but not necessarily the operational aspects of it uh in general my recommendation would be if you can",
    "start": "2133400",
    "end": "2139040"
  },
  {
    "text": "run the collector stat less it's in your best interest it's way easier you can just add another instance behind the",
    "start": "2139040",
    "end": "2144560"
  },
  {
    "text": "load balancer it scales linearly life is good but of course there are use cases where that's not possible you're doing",
    "start": "2144560",
    "end": "2150640"
  },
  {
    "text": "tailbase sampling it's really not possible because you have to make sure all the spans for a trace end up on the same collector instance that's stateful",
    "start": "2150640",
    "end": "2157119"
  },
  {
    "text": "at the end of the day uh there are stateful aspects of The Collector for example there's a there's storage uh exporters that you can",
    "start": "2157119",
    "end": "2164040"
  },
  {
    "text": "configure uh or processors that you can configure and those are stateful at the end of the day so one use case might be",
    "start": "2164040",
    "end": "2169880"
  },
  {
    "text": "I want to make sure that I don't drop Telemetry data so if the collector like restarts or something I need to retry",
    "start": "2169880",
    "end": "2175200"
  },
  {
    "text": "that data you could use the storage extension here to like store that data locally and have it basically checkpoint",
    "start": "2175200",
    "end": "2180400"
  },
  {
    "text": "pick it back up when the collector comes back online and then export it back out you were talking about aggregation there",
    "start": "2180400",
    "end": "2185560"
  },
  {
    "text": "are aggregation use cases where that's also necessary at the end of the day if you're doing like histogram or certain like Dynamic things where you want to",
    "start": "2185560",
    "end": "2191400"
  },
  {
    "text": "aggregate things up before you send it out um where possible I would say do it in memory because if you lose it it's",
    "start": "2191400",
    "end": "2197240"
  },
  {
    "text": "probably not the end of the world uh but for some use cases like logs or like compliant environments losing that data",
    "start": "2197240",
    "end": "2203480"
  },
  {
    "text": "is a compliance violation you would have to use something stateful on the collector uh to make it work but yes",
    "start": "2203480",
    "end": "2208920"
  },
  {
    "text": "there are definitely stateful aspects that you can configure if you can avoid it I would say avoid it if you think something is missing please file an",
    "start": "2208920",
    "end": "2215880"
  },
  {
    "text": "enhancement request and just say hey I need this capability the community is very very active and can definitely help you with that as",
    "start": "2215880",
    "end": "2222560"
  },
  {
    "text": "well yes all right uh yeah this isn't really a configuration question per se but just kind of the rationale behind",
    "start": "2222560",
    "end": "2228839"
  },
  {
    "text": "using otel versus other tooling um my company were already using fluent bit and Prometheus to get logs and metrics",
    "start": "2228839",
    "end": "2235240"
  },
  {
    "text": "from everything yeah um we've had some internal meetings about whether to start using otel um but it it's kind of",
    "start": "2235240",
    "end": "2241319"
  },
  {
    "text": "confusing talking to some of the senior devs trying to figure out why adding one more tool to what we're already doing or",
    "start": "2241319",
    "end": "2246920"
  },
  {
    "text": "or what would be advantages of votel over some of the other stuff we're already using so look if if what you",
    "start": "2246920",
    "end": "2251960"
  },
  {
    "text": "have is working and it meets your business requirements there's no reason to change right so if you're happy with fluent bit and Prometheus fine no",
    "start": "2251960",
    "end": "2258720"
  },
  {
    "text": "problem right so it depends I would say on what are your use cases and what are you trying to solve for one use case",
    "start": "2258720",
    "end": "2264000"
  },
  {
    "text": "that otel can help with is being vendor agnostic so let's say you want to switch off of Prometheus or for whatever reason",
    "start": "2264000",
    "end": "2269440"
  },
  {
    "text": "you want to switch off of fluent bit if you have otel you can now point it to something else if you wanted to don't have that requirements don't change",
    "start": "2269440",
    "end": "2276640"
  },
  {
    "text": "right it's fine uh so it really comes down to what are you trying to solve I would say if you're using a vendor's proprietary instrumentation or data",
    "start": "2276640",
    "end": "2282960"
  },
  {
    "text": "collection there's a lot of value to moving to something like Hotel because now you're not locked into that vendor if you want to send the data somewhere",
    "start": "2282960",
    "end": "2288640"
  },
  {
    "text": "else you easily can if you want to switch vendors you can easily do it you're talking about open source tooling",
    "start": "2288640",
    "end": "2294160"
  },
  {
    "text": "otel supports fluent bits like they they natively integrate you can have fluent bits sent to the collector if you want so like there's no need to replace",
    "start": "2294160",
    "end": "2300880"
  },
  {
    "text": "what's already working in your environments if there's some value you get out of otel that you might not be getting from fluent bits maybe that",
    "start": "2300880",
    "end": "2306640"
  },
  {
    "text": "could be a reason for you if that's not the case keep going you're already using open source tooling so I don't want to",
    "start": "2306640",
    "end": "2312440"
  },
  {
    "text": "get into like a religious war on which open source tool to work they're all great right like if it's meeting your use cases and you're not locked into a",
    "start": "2312440",
    "end": "2319040"
  },
  {
    "text": "vendor solution maybe there's not a lot of value being provided we're at time so uh I'm happy",
    "start": "2319040",
    "end": "2325560"
  },
  {
    "text": "to take additional questions I can follow people out but I think I'm going to get kicked out so thank you so much",
    "start": "2325560",
    "end": "2331040"
  },
  {
    "text": "[Applause]",
    "start": "2331040",
    "end": "2333400"
  }
]