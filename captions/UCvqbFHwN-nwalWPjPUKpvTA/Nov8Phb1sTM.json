[
  {
    "start": "0",
    "end": "32000"
  },
  {
    "text": "hello everyone welcome to the cluster api provider aws project update",
    "start": "0",
    "end": "5839"
  },
  {
    "text": "i am sada sawaj i'm a software engineer at vmware tons of team i am one of the maintainers of cluster",
    "start": "5839",
    "end": "12480"
  },
  {
    "text": "api provider aws project i've been working on this project",
    "start": "12480",
    "end": "17760"
  },
  {
    "text": "over a year now hello everyone my name is richard case i'm a tech lead at weaveworks i'm",
    "start": "17760",
    "end": "23519"
  },
  {
    "text": "currently working on bare metal cluster api based products and solutions for weedworks and also a cluster api",
    "start": "23519",
    "end": "30400"
  },
  {
    "text": "provider aws maintainer and this is our agenda for today we will",
    "start": "30400",
    "end": "37840"
  },
  {
    "start": "32000",
    "end": "65000"
  },
  {
    "text": "give you an overview of cluster api capy and cluster api provider aws",
    "start": "37840",
    "end": "43440"
  },
  {
    "text": "kappa they are both c-cluster life cycle sub-projects uh then we are gonna mention about some",
    "start": "43440",
    "end": "50079"
  },
  {
    "text": "uh new features in kappa and do a quick demo um to give you an",
    "start": "50079",
    "end": "55280"
  },
  {
    "text": "idea about how all this works together then we will talk about our roadmap and last we will mention",
    "start": "55280",
    "end": "61680"
  },
  {
    "text": "how you can get involved as a contributor",
    "start": "61680",
    "end": "66000"
  },
  {
    "text": "so what's cluster api and what does it do for us kubernetes lifecycle management is",
    "start": "67840",
    "end": "75200"
  },
  {
    "text": "complicated with day one and day two operations and cluster api brings",
    "start": "75200",
    "end": "80320"
  },
  {
    "text": "kubernetes style declarative apis to simplify this management it manages kubernetes clusters again by",
    "start": "80320",
    "end": "88159"
  },
  {
    "text": "kubernetes clusters and you see the cluster api logo on the right uh it is a reference to tartus all the",
    "start": "88159",
    "end": "94880"
  },
  {
    "text": "way down because we are using kubernetes clusters to manage kubernetes",
    "start": "94880",
    "end": "100640"
  },
  {
    "text": "in general cappy brings some automation to the management of the clusters in terms of creation",
    "start": "100640",
    "end": "106320"
  },
  {
    "text": "scaling repair upgrades and deletion",
    "start": "106320",
    "end": "111119"
  },
  {
    "start": "110000",
    "end": "179000"
  },
  {
    "text": "you can create your current clusters on either on-prem data centers or cloud",
    "start": "112560",
    "end": "119040"
  },
  {
    "text": "providers and each infrastructure provider has its own way of provisioning resources",
    "start": "119040",
    "end": "124719"
  },
  {
    "text": "uh like virtual machines load balancers etc and cluster api is infrastructure",
    "start": "124719",
    "end": "130640"
  },
  {
    "text": "agnostic itself to support these various infrastructure providers",
    "start": "130640",
    "end": "135840"
  },
  {
    "text": "it acts as a building block and provides interface for providers so that",
    "start": "135840",
    "end": "141360"
  },
  {
    "text": "providers can implement these contracts and gets plugged into cluster api so that",
    "start": "141360",
    "end": "146959"
  },
  {
    "text": "users can provision clusters on them currently we have provider",
    "start": "146959",
    "end": "152760"
  },
  {
    "text": "implementations for all the logos you see on screen like aws",
    "start": "152760",
    "end": "159280"
  },
  {
    "text": "azure vsphere and if you if you want to see the whole list you can check",
    "start": "159280",
    "end": "165200"
  },
  {
    "text": "the link below if you do not find your provider in the list you can always build your own provider",
    "start": "165200",
    "end": "172400"
  },
  {
    "text": "there's a section in the cluster api book that shows the contracts for adding a new provider",
    "start": "172400",
    "end": "179040"
  },
  {
    "start": "179000",
    "end": "341000"
  },
  {
    "text": "and i'm gonna uh no next slide please yeah uh and a",
    "start": "179040",
    "end": "185120"
  },
  {
    "text": "cappy has lots of cool features if you want to know more in detail uh there's a deep dive",
    "start": "185120",
    "end": "190800"
  },
  {
    "text": "session on friday i suggest you you see that session if you wanna know more",
    "start": "190800",
    "end": "196080"
  },
  {
    "text": "and now i'm handing over to rich to talk about uh cluster api architecture details",
    "start": "196080",
    "end": "201519"
  },
  {
    "text": "so this diagram represents that the high level architecture of how cluster api works there are three main",
    "start": "201519",
    "end": "207680"
  },
  {
    "text": "portions to it on the left hand side we have the the clusters definition as yaml in the",
    "start": "207680",
    "end": "213200"
  },
  {
    "text": "middle portion we we have the management cluster and on the right hand side we have the resulting",
    "start": "213200",
    "end": "218560"
  },
  {
    "text": "clusters that are created or the tenant clusters so everything starts with a definition of a cluster",
    "start": "218560",
    "end": "224400"
  },
  {
    "text": "and this is created using the ammo this is essentially like you were to declare the the",
    "start": "224400",
    "end": "229519"
  },
  {
    "text": "applications that run within kubernetes but for your cluster the actual yaml was made up of a number",
    "start": "229519",
    "end": "235760"
  },
  {
    "text": "of different kinds and on the left hand side you can see a color-coded diagram that represents this",
    "start": "235760",
    "end": "242319"
  },
  {
    "text": "so the purple is kinds that are uh provided to us by cluster api as an",
    "start": "242319",
    "end": "248400"
  },
  {
    "text": "upstream project and then the pink and the orange are implemented by our providers so",
    "start": "248400",
    "end": "255920"
  },
  {
    "text": "essentially you have to start with that you have to create your your your cluster and its definition as yaml",
    "start": "255920",
    "end": "262720"
  },
  {
    "text": "this is applied then to a management cluster so this is a core concept to cluster api you have to have a management cluster",
    "start": "262720",
    "end": "270000"
  },
  {
    "text": "where you apply these definitions into the role of the management cluster then is to to",
    "start": "270000",
    "end": "276160"
  },
  {
    "text": "run the controllers from the various providers and from cluster api as well and provision",
    "start": "276160",
    "end": "283280"
  },
  {
    "text": "the clusters the tenant clusters on the right hand side so essentially this is this is a two-step process so the first step is it",
    "start": "283280",
    "end": "290960"
  },
  {
    "text": "provisions the infrastructure in the target environment so whether that is creating as your vms",
    "start": "290960",
    "end": "296880"
  },
  {
    "text": "or within aws creating vpcs and ec2 instances so the provider will need to to",
    "start": "296880",
    "end": "303280"
  },
  {
    "text": "provision that infrastructure first for kubernetes to run on then a bootstrap provider is is used then to",
    "start": "303280",
    "end": "310639"
  },
  {
    "text": "to bootstrap kubernetes on that infrastructure and create the cluster for you",
    "start": "310639",
    "end": "316800"
  },
  {
    "text": "so you can see within the management cluster you can see the color coded representations of the various",
    "start": "316800",
    "end": "322240"
  },
  {
    "text": "controllers for the different providers and also cluster api itself when a cluster is provisioned",
    "start": "322240",
    "end": "328960"
  },
  {
    "text": "essentially it will also store a cube config for that cluster",
    "start": "328960",
    "end": "334240"
  },
  {
    "text": "within the management cluster and you can then use that to connect to to the newly created cluster",
    "start": "334240",
    "end": "341520"
  },
  {
    "start": "341000",
    "end": "406000"
  },
  {
    "text": "so what is kappa first and foremost kappa is an infrastructure provider what",
    "start": "342240",
    "end": "348400"
  },
  {
    "text": "that means is it will provision the aws infrastructure that is required to write a kubernetes cluster within aws",
    "start": "348400",
    "end": "357840"
  },
  {
    "text": "it provisions the infrastructure in an opinionated way so you don't have to specify",
    "start": "357840",
    "end": "362880"
  },
  {
    "text": "every every aspect of the infrastructure you can just let the provider take that opinionated",
    "start": "362880",
    "end": "369039"
  },
  {
    "text": "view on what infrastructure it should create obviously that doesn't fit everyone's",
    "start": "369039",
    "end": "374080"
  },
  {
    "text": "needs so you can bring your own infrastructure so you can provision your infrastructure advice some other means like terraform",
    "start": "374080",
    "end": "380479"
  },
  {
    "text": "or cross plane and and plug in the details of that into the kappa manifests",
    "start": "380479",
    "end": "386319"
  },
  {
    "text": "when creating clusters with with kappa you can create two types of clusters essentially it's one we call unmanaged and that is a",
    "start": "386319",
    "end": "393840"
  },
  {
    "text": "basically easy to instant space with and cube adm bootstrapped and more recently you can create what we",
    "start": "393840",
    "end": "400560"
  },
  {
    "text": "call managed clusters which are essentially eks clusters under the cover",
    "start": "400560",
    "end": "406160"
  },
  {
    "start": "406000",
    "end": "487000"
  },
  {
    "text": "so going back to the diagram we saw previously so what i've taken here is essentially the representation again with the purple",
    "start": "406960",
    "end": "414319"
  },
  {
    "text": "representing the the cluster api resource kind and overlaid that with",
    "start": "414319",
    "end": "419599"
  },
  {
    "text": "the the kappa resource guys now this doesn't show every single resource kind that you you can use within kappa",
    "start": "419599",
    "end": "426240"
  },
  {
    "text": "but it shows you as representation main things to note here is uh on the",
    "start": "426240",
    "end": "432560"
  },
  {
    "text": "left hand side all clusters are provisioned with a set of credentials this will be covered a bit later on within the talk",
    "start": "432560",
    "end": "439919"
  },
  {
    "text": "then when we come to the cluster we we have an aws cluster representation one thing to note here is when you're",
    "start": "439919",
    "end": "446639"
  },
  {
    "text": "using a managed cluster the aws management control plane represents the infrastructure and",
    "start": "446639",
    "end": "451840"
  },
  {
    "text": "the control plane which is which is slightly different to an unmanaged cluster if you look towards the bottom of the",
    "start": "451840",
    "end": "457599"
  },
  {
    "text": "diagram you see representations for the actual worker nodes in this diagram we have machines and",
    "start": "457599",
    "end": "463520"
  },
  {
    "text": "machine force but there might also be machine deployments and what you can see from this is within",
    "start": "463520",
    "end": "468560"
  },
  {
    "text": "kappa the resource kinds are advised machine aws machine port and aws",
    "start": "468560",
    "end": "473759"
  },
  {
    "text": "managed machine ball and you'll see for managed clusters that sits across all of this is a",
    "start": "473759",
    "end": "480400"
  },
  {
    "text": "bootstrap type and this is essentially for from managed clusters this is called eks config",
    "start": "480400",
    "end": "487759"
  },
  {
    "text": "yeah um and um now i'm gonna mention about a command line utility called",
    "start": "490720",
    "end": "496240"
  },
  {
    "text": "cluster aws adm uh that we publish with our releases uh",
    "start": "496240",
    "end": "501440"
  },
  {
    "text": "it has some help helper functions for kpa for example cluster aws adm bootstrap",
    "start": "501440",
    "end": "508000"
  },
  {
    "text": "command manages uh identity and access management objects like roles policies and these are used by",
    "start": "508000",
    "end": "515680"
  },
  {
    "text": "clusters and kappa controllers also after every kubernetes release we build and publish",
    "start": "515680",
    "end": "521919"
  },
  {
    "text": "aws images amis using another kubernetes sub project called uh image",
    "start": "521919",
    "end": "527200"
  },
  {
    "text": "builder and these mis comes with packages um that's needed to the node by default",
    "start": "527200",
    "end": "535200"
  },
  {
    "text": "when you create a kubernetes cluster with a specific version kappa picks the right image",
    "start": "535200",
    "end": "540880"
  },
  {
    "text": "depending on the version um from from an aws account and to list",
    "start": "540880",
    "end": "548480"
  },
  {
    "text": "all available amis for specific kubernetes versions and os distributions you can use cluster aws adm",
    "start": "548480",
    "end": "555760"
  },
  {
    "text": "minus command as a side note by the way we also support custom mis created by",
    "start": "555760",
    "end": "562080"
  },
  {
    "text": "users on the kappa manage eks site we have cluster aws",
    "start": "562080",
    "end": "568240"
  },
  {
    "text": "adm eks command to list available and installed addons",
    "start": "568240",
    "end": "577839"
  },
  {
    "start": "574000",
    "end": "708000"
  },
  {
    "text": "yeah so uh let's talk about some new features uh of kappa so in general we release",
    "start": "577839",
    "end": "584720"
  },
  {
    "text": "minor releases uh every six months or so and a petrol is almost every month we are currently at",
    "start": "584720",
    "end": "592640"
  },
  {
    "text": "version 0.6 release which was released last september and i'm going to mention about some new",
    "start": "592640",
    "end": "599040"
  },
  {
    "text": "features in 0-6 release which is common for both managed and",
    "start": "599040",
    "end": "604399"
  },
  {
    "text": "unmanaged clusters the first one is multi-tenancy previously kappa controller used to use",
    "start": "604399",
    "end": "611120"
  },
  {
    "text": "same set of credentials it is initialized with to reconcile all all all the workload",
    "start": "611120",
    "end": "619440"
  },
  {
    "text": "clusters and this was not suitable for especially large organizations",
    "start": "619440",
    "end": "625360"
  },
  {
    "text": "where they would prefer to run their management cluster in a management aws",
    "start": "625360",
    "end": "632320"
  },
  {
    "text": "account and each team has their own aws accounts to run their workload clusters",
    "start": "632320",
    "end": "638480"
  },
  {
    "text": "so we introduce a multi-tenant support with this release keppa can now do a an im role assumption",
    "start": "638480",
    "end": "646000"
  },
  {
    "text": "at runtime on a per cluster basis and each workload cluster can pick and choose a",
    "start": "646000",
    "end": "652399"
  },
  {
    "text": "different principle to be used during reconciliation of that cluster",
    "start": "652399",
    "end": "657600"
  },
  {
    "text": "and you see the crds we introduced uh to support multi-tenancy uh",
    "start": "657600",
    "end": "664480"
  },
  {
    "text": "different kind of uh principles controller principle role principle and static principle",
    "start": "664480",
    "end": "669519"
  },
  {
    "text": "also we have a new controller for backward compact compatibility for the existing clusters",
    "start": "669519",
    "end": "676320"
  },
  {
    "text": "because we need to create a controller principle to make the previous clusters work",
    "start": "676320",
    "end": "684320"
  },
  {
    "text": "content work and the next feature is aws machine pools so we added this feature",
    "start": "684320",
    "end": "690399"
  },
  {
    "text": "with this release and it is responsible for creating and managing",
    "start": "690399",
    "end": "695519"
  },
  {
    "text": "aws auto scaling groups using a launch template so users don't have to manage individual",
    "start": "695519",
    "end": "702079"
  },
  {
    "text": "meshes so let's continue with our demo",
    "start": "702079",
    "end": "709279"
  },
  {
    "text": "all right so uh before even creating our management cluster with capy and kappa",
    "start": "709279",
    "end": "714639"
  },
  {
    "text": "controllers we need to create some im resources and we use cluster iws adm for this",
    "start": "714639",
    "end": "722639"
  },
  {
    "text": "we create as you see here a cloud formation stack with all the necessary",
    "start": "722639",
    "end": "729839"
  },
  {
    "text": "roles instance profiles and policies and these resources can be",
    "start": "729839",
    "end": "736320"
  },
  {
    "text": "customized by passing a config file to class aws idea",
    "start": "736320",
    "end": "744880"
  },
  {
    "text": "uh instamore i'm going to show the use case where management cluster is running on a",
    "start": "744880",
    "end": "750880"
  },
  {
    "text": "management aws account and a team has a different account that",
    "start": "750880",
    "end": "756000"
  },
  {
    "text": "wants to boost strap a workload cluster using a workplace role so on the left",
    "start": "756000",
    "end": "761760"
  },
  {
    "text": "here you see and i created a management role uh this role will be used to bootstrap our",
    "start": "761760",
    "end": "768800"
  },
  {
    "text": "management cluster so our capital controllers will use this raw",
    "start": "768800",
    "end": "774160"
  },
  {
    "text": "uh you see this management role has the necessary permissions to manage",
    "start": "774160",
    "end": "780320"
  },
  {
    "text": "aws resources for our clusters like ec2 elb etc on the on the right hand side do you",
    "start": "780320",
    "end": "788160"
  },
  {
    "text": "see the workload rod this is the workload aws cluster",
    "start": "788160",
    "end": "794800"
  },
  {
    "text": "uh sorry the workload aws account i create the workload role here",
    "start": "794800",
    "end": "803040"
  },
  {
    "text": "which can be assumed by the management role",
    "start": "803120",
    "end": "808240"
  },
  {
    "text": "on my management aws account it also has the necessary permissions to",
    "start": "808240",
    "end": "813600"
  },
  {
    "text": "reconcile the resources necessary for an aws cluster",
    "start": "813600",
    "end": "819120"
  },
  {
    "text": "here you see let's see how we represent these roles",
    "start": "819120",
    "end": "825680"
  },
  {
    "text": "in our workload cluster manifest this is a simplified version of the workload cluster",
    "start": "825680",
    "end": "831519"
  },
  {
    "text": "you see a controller principle here which which represents the principle our",
    "start": "831519",
    "end": "836560"
  },
  {
    "text": "management cluster is bootstrapped with in our case this is the management role",
    "start": "836560",
    "end": "841600"
  },
  {
    "text": "in our management account and then this role principle represents the",
    "start": "841600",
    "end": "846959"
  },
  {
    "text": "workload role on our aws account we also provide details",
    "start": "846959",
    "end": "853920"
  },
  {
    "text": "um about how this role will be assumed with source principle",
    "start": "853920",
    "end": "860000"
  },
  {
    "text": "for our case we want a management role to assume this workload role so we added this controller principle as",
    "start": "860000",
    "end": "866720"
  },
  {
    "text": "source principle ref here so for the sake of time i already created our management",
    "start": "866720",
    "end": "873680"
  },
  {
    "text": "cluster and a workload cluster let's see in what",
    "start": "873680",
    "end": "881360"
  },
  {
    "text": "controllers are manageable cluster has",
    "start": "881360",
    "end": "886160"
  },
  {
    "text": "so these are the oh these are all the kappa and cap controllers in their own name spaces you see here",
    "start": "889839",
    "end": "899120"
  },
  {
    "text": "let's check out our cluster objects we have a cappy cluster that referred to the",
    "start": "899120",
    "end": "905199"
  },
  {
    "text": "infrastructure providers cluster object which is aws cluster for us and here in the aws",
    "start": "905199",
    "end": "912560"
  },
  {
    "text": "cluster object we specify inverse structure specific things such as networking",
    "start": "912560",
    "end": "919279"
  },
  {
    "text": "and also we provide a principal graph here this this principle graph will be used",
    "start": "919279",
    "end": "925760"
  },
  {
    "text": "to create infrastructure resources for this aws cluster let's take a a quick look at the",
    "start": "925760",
    "end": "932160"
  },
  {
    "text": "resources created by kappa forever plot cluster so here you",
    "start": "932160",
    "end": "937519"
  },
  {
    "text": "see a vpc created for the demo cluster and when we check our sumness we",
    "start": "937519",
    "end": "945199"
  },
  {
    "text": "kept our controller created a public and private subnet private must control place and work",
    "start": "945199",
    "end": "952079"
  },
  {
    "text": "models are located in the prior subnet and load balancer is located in the public subnet",
    "start": "952079",
    "end": "958240"
  },
  {
    "text": "and but these are all configurable we create some road route table rules net gateways security",
    "start": "958240",
    "end": "964720"
  },
  {
    "text": "groups etc and if we go to our ec2 dashboard we see",
    "start": "964720",
    "end": "971519"
  },
  {
    "text": "the api server that that came up on the public subnet",
    "start": "971519",
    "end": "978079"
  },
  {
    "text": "with let's check the instance with our single control plane instance so",
    "start": "978079",
    "end": "985199"
  },
  {
    "text": "when we check our running instances this is our control plane workload control plane instance",
    "start": "985199",
    "end": "993360"
  },
  {
    "text": "we also have security groups created for this workload cluster",
    "start": "993360",
    "end": "999279"
  },
  {
    "text": "here i'd like to show one final thing in our",
    "start": "999279",
    "end": "1006320"
  },
  {
    "text": "yaml file which is meshing pools so you see this is the cluster api",
    "start": "1006320",
    "end": "1011839"
  },
  {
    "text": "construct formation pools which refers to aws machine pool and here aws has machine pool has",
    "start": "1011839",
    "end": "1021519"
  },
  {
    "text": "details about how we want to create our launch templates for auto",
    "start": "1021519",
    "end": "1027839"
  },
  {
    "text": "scaling groups if we go back to our console so this is the machine pool created by",
    "start": "1027839",
    "end": "1034880"
  },
  {
    "text": "kappa controller with this launch template",
    "start": "1034880",
    "end": "1040079"
  },
  {
    "text": "with the specific instance type we provided",
    "start": "1040079",
    "end": "1045120"
  },
  {
    "text": "and the key pair name etc and when we check again our easy ec2",
    "start": "1045120",
    "end": "1051600"
  },
  {
    "text": "instances this is the single instance because we we set the desired instance to one in",
    "start": "1051600",
    "end": "1059039"
  },
  {
    "text": "our machine pool specifications this finalizes our demo",
    "start": "1059039",
    "end": "1066799"
  },
  {
    "start": "1063000",
    "end": "1153000"
  },
  {
    "text": "and here are some more features that become available with 0.6 release first one is",
    "start": "1066799",
    "end": "1074799"
  },
  {
    "text": "we added support for using spot instances incubate in its clusters support instances are non-reliable ecito",
    "start": "1074799",
    "end": "1082880"
  },
  {
    "text": "instance types that that are cheaper and more suitable for fault tolerant",
    "start": "1082880",
    "end": "1090320"
  },
  {
    "text": "workloads the second one is we started watching for easy to instant state changes",
    "start": "1090320",
    "end": "1096880"
  },
  {
    "text": "uh using uh event bridge and simple q services previously when there's a ec2 state",
    "start": "1096880",
    "end": "1103760"
  },
  {
    "text": "change kappa was not detecting it until the next reconcile which could take up to 10 minutes",
    "start": "1103760",
    "end": "1110080"
  },
  {
    "text": "now when a change is detected it triggers a aws measure reconcile",
    "start": "1110080",
    "end": "1116320"
  },
  {
    "text": "also in this release we added support for dedicated instances which are basically ec2 instances that",
    "start": "1116320",
    "end": "1122799"
  },
  {
    "text": "run on hardwares that are occupied by a single tenant",
    "start": "1122799",
    "end": "1128400"
  },
  {
    "text": "also we added aws request throttler logic because aws structures api requests for",
    "start": "1128400",
    "end": "1134559"
  },
  {
    "text": "every aws account on the par region basis and we added a logic to stop our service",
    "start": "1134559",
    "end": "1141520"
  },
  {
    "text": "request when we detect aws starts threatening us and now i will um which will mention",
    "start": "1141520",
    "end": "1149600"
  },
  {
    "text": "about new features in eks so on the under-managed side of the",
    "start": "1149600",
    "end": "1155039"
  },
  {
    "text": "provider uk support is new in the 0.6 release",
    "start": "1155039",
    "end": "1160400"
  },
  {
    "text": "so this is still marked as experimental and you actually have to enable it explicitly via the eks feature",
    "start": "1160400",
    "end": "1167280"
  },
  {
    "text": "flag so there's two main crds that you need to create a cluster eks cluster first one",
    "start": "1167280",
    "end": "1174960"
  },
  {
    "text": "is aws managed control plane so when you create a unmanaged cluster you you have a",
    "start": "1174960",
    "end": "1181360"
  },
  {
    "text": "aws cluster and you have a cube adm control plane within the managed side of",
    "start": "1181360",
    "end": "1188000"
  },
  {
    "text": "the provider you only have the aws managed control plane it acts as both",
    "start": "1188000",
    "end": "1193280"
  },
  {
    "text": "the cluster and the bootstrap provider combined into one",
    "start": "1193280",
    "end": "1199360"
  },
  {
    "text": "for the work of those within the eks cluster we support three types of worker nodes essentially machines which are ec2 based",
    "start": "1199360",
    "end": "1207200"
  },
  {
    "text": "instances and these are individual machines so you individually declare the machines you want to add to the cluster",
    "start": "1207200",
    "end": "1213600"
  },
  {
    "text": "and from a declaration point of view you use the cappy machine kind and the aws machine kind when",
    "start": "1213600",
    "end": "1221280"
  },
  {
    "text": "you're when you're declaring these so def has already mentioned about machine pools machine pools can be",
    "start": "1221280",
    "end": "1227600"
  },
  {
    "text": "used within an eks cluster and these again are essentially ec2 auto scaling",
    "start": "1227600",
    "end": "1233360"
  },
  {
    "text": "groups uh from a eks point of view you have to use the the machine pool",
    "start": "1233360",
    "end": "1239440"
  },
  {
    "text": "cavity declaration and also the aws machine form but in the eks side we also have another",
    "start": "1239440",
    "end": "1246240"
  },
  {
    "text": "variant of the machine force and these are called managed machine balls if you if you're aware of a vks and",
    "start": "1246240",
    "end": "1252799"
  },
  {
    "text": "using case normally these get represented within as eks node groups essentially",
    "start": "1252799",
    "end": "1259200"
  },
  {
    "text": "to use these you need to use again i think the cappy machine pool but then there's a different kind from a",
    "start": "1259200",
    "end": "1264960"
  },
  {
    "text": "capital point of view and that is at the aws managed machine pool if you want to use either either variant",
    "start": "1264960",
    "end": "1271440"
  },
  {
    "text": "of the of the machine pool you must make sure that you enable the machine call feature flag and you can use all three of these",
    "start": "1271440",
    "end": "1278720"
  },
  {
    "text": "uh within an eks cluster so you can mix and match and have different types of work in those within an eks cluster you just need to",
    "start": "1278720",
    "end": "1285440"
  },
  {
    "text": "to create the declarations and reference the the managed control plane",
    "start": "1285440",
    "end": "1291840"
  },
  {
    "start": "1292000",
    "end": "1403000"
  },
  {
    "text": "so we also support per cluster iim role creation uh by default when you when you use a",
    "start": "1292640",
    "end": "1299360"
  },
  {
    "text": "cluster aws adm it will create some default roles for use with the control plane and the",
    "start": "1299360",
    "end": "1304880"
  },
  {
    "text": "worker nodes that may not be suitable for your fuel type of scenario so you can enable viral feature flag that there is",
    "start": "1304880",
    "end": "1312640"
  },
  {
    "text": "iron roll creation and then there's iron rolls per cluster and within that cluster you'll have an",
    "start": "1312640",
    "end": "1318159"
  },
  {
    "text": "iron roll for the control plane and the worker nodes so that's something to be aware of also",
    "start": "1318159",
    "end": "1324080"
  },
  {
    "text": "if you use the eks you you'll be aware of uh the way that you authenticate and authorize",
    "start": "1324080",
    "end": "1329600"
  },
  {
    "text": "into the into the cluster and that's using iam authenticator so the aws managed control plane allows",
    "start": "1329600",
    "end": "1335679"
  },
  {
    "text": "you to declaratively map users and roles uh that will result in the the config",
    "start": "1335679",
    "end": "1340880"
  },
  {
    "text": "the required configuration changes within the cluster for aws im authenticator",
    "start": "1340880",
    "end": "1346080"
  },
  {
    "text": "we also recently added support for eks add-ons there's only one animal present which is the vpc cni uh but this",
    "start": "1346080",
    "end": "1353600"
  },
  {
    "text": "enable allows you to declare what add-ons you want within a cluster and then also upgrade the versions of those",
    "start": "1353600",
    "end": "1360640"
  },
  {
    "text": "add-ons in a declarative manner we've also added support for file gate profiles well this is in 0.65",
    "start": "1360640",
    "end": "1368720"
  },
  {
    "text": "and this allows you essentially to attach the file gate profile to your cluster and then",
    "start": "1368720",
    "end": "1374000"
  },
  {
    "text": "effectively run specific pods within that filegate profile at the bottom of",
    "start": "1374000",
    "end": "1380640"
  },
  {
    "text": "this screen you'll see that they uh how you install uh the the capital",
    "start": "1380640",
    "end": "1386159"
  },
  {
    "text": "provider into your management cluster a few things to note we've talked about feature flags quite a lot",
    "start": "1386159",
    "end": "1392159"
  },
  {
    "text": "there is convention about how you can enable those feature flags via environment variables and in the bottom",
    "start": "1392159",
    "end": "1398480"
  },
  {
    "text": "of the screen you'll see some examples of that",
    "start": "1398480",
    "end": "1403760"
  },
  {
    "start": "1403000",
    "end": "1497000"
  },
  {
    "text": "so what is the actual what does the album look like from a managed point of view from the eks cluster point of view so here's two",
    "start": "1403760",
    "end": "1410080"
  },
  {
    "text": "examples on the left-hand side in the box uh a you see an example of the aws managed control plane",
    "start": "1410080",
    "end": "1416240"
  },
  {
    "text": "so this represents the cluster and the bootstrap like i mentioned before i want to point out a few things here",
    "start": "1416240",
    "end": "1423520"
  },
  {
    "text": "firstly we have that that principal ref so a link to the credentials that are going to be used when provisioning this",
    "start": "1423520",
    "end": "1429919"
  },
  {
    "text": "cluster so which accounts and you know which user etc we specify which version",
    "start": "1429919",
    "end": "1435120"
  },
  {
    "text": "number we want to use within the cluster and then as i mentioned just previously",
    "start": "1435120",
    "end": "1441360"
  },
  {
    "text": "we have this section for add-ons so this is where you declare what add-ons you want within that cluster and the",
    "start": "1441360",
    "end": "1446559"
  },
  {
    "text": "specific version numbers and this is where you would edit this area if you wanted to upgrade",
    "start": "1446559",
    "end": "1452400"
  },
  {
    "text": "to a new version of the add-on and finally within within this this",
    "start": "1452400",
    "end": "1458000"
  },
  {
    "text": "example you can see that i'm mapping a role i'm going to map in uh the administrator access iam role to",
    "start": "1458000",
    "end": "1465039"
  },
  {
    "text": "to the system masters uh role within uh kubernetes group within kubernetes",
    "start": "1465039",
    "end": "1470720"
  },
  {
    "text": "so this is where you do that declarative configuration of awsim authenticator",
    "start": "1470720",
    "end": "1475840"
  },
  {
    "text": "on the right hand side you'll see an example of a aws management machine more so this is very similar to what sid f showed in",
    "start": "1475840",
    "end": "1482480"
  },
  {
    "text": "the demo but this is just for for the managed machine ball side of things and you can see it's",
    "start": "1482480",
    "end": "1487760"
  },
  {
    "text": "very simple you know we're only switching to two properties here the min and the max size of that of that machine full",
    "start": "1487760",
    "end": "1493600"
  },
  {
    "text": "size so what does the roadmap look like for",
    "start": "1493600",
    "end": "1499200"
  },
  {
    "start": "1497000",
    "end": "1552000"
  },
  {
    "text": "for kappa so we essentially have two versions of capra present so we have the 0.6",
    "start": "1499200",
    "end": "1506080"
  },
  {
    "text": "release version and this maps to the the cappy v1 alpha 3 version and you should consider this the",
    "start": "1506080",
    "end": "1512880"
  },
  {
    "text": "stable option um so so use this first especially for any production like",
    "start": "1512880",
    "end": "1518000"
  },
  {
    "text": "in scenarios we're also currently working on 0.7 and this is compatible with",
    "start": "1518000",
    "end": "1525279"
  },
  {
    "text": "with cappy v1 alpha 4. focus really with this is on stability and",
    "start": "1525279",
    "end": "1532159"
  },
  {
    "text": "ux changes in the api that are eventually going to lead to the beta release or the beta graduation of",
    "start": "1532159",
    "end": "1538320"
  },
  {
    "text": "cappy and kappa when talking about these two versions you should note that we are",
    "start": "1538320",
    "end": "1544559"
  },
  {
    "text": "only going to backport bug fixes and security uh vulnerabilities from",
    "start": "1544559",
    "end": "1550159"
  },
  {
    "text": "0.7 to 0.6 uh yeah so uh we are still working on clarifying",
    "start": "1550159",
    "end": "1556240"
  },
  {
    "start": "1552000",
    "end": "1681000"
  },
  {
    "text": "the features that will be in for v07 release",
    "start": "1556240",
    "end": "1561279"
  },
  {
    "text": "uh we will continue to focus on improving stability that's for sure uh but these are",
    "start": "1561279",
    "end": "1569120"
  },
  {
    "text": "some of the features that are coming up uh we for the unmanaged site we plan to extend",
    "start": "1569120",
    "end": "1574640"
  },
  {
    "text": "our uh spot instances apart by uh also supporting amazon easy to finish and",
    "start": "1574640",
    "end": "1580080"
  },
  {
    "text": "scott flix also we will verify you using a gpu is",
    "start": "1580080",
    "end": "1585200"
  },
  {
    "text": "easy to instance type as workload nodes so for that we will uh probably add",
    "start": "1585200",
    "end": "1590640"
  },
  {
    "text": "conformance test that uses mdigp operator which is",
    "start": "1590640",
    "end": "1595679"
  },
  {
    "text": "basically responsible for installing necessary drivers for kubernetes gpu",
    "start": "1595679",
    "end": "1601039"
  },
  {
    "text": "support and finally we will add ignitions apart and start supporting ignition format",
    "start": "1601039",
    "end": "1609200"
  },
  {
    "text": "for our bootstrap data instead of only using a cloud in it to run our bootstrap",
    "start": "1609200",
    "end": "1615840"
  },
  {
    "text": "script during uh instance initiation that's all on the unmatched slide so on",
    "start": "1615840",
    "end": "1622400"
  },
  {
    "text": "the managed side we we're focusing on three main areas so the first area is to implement the oidc",
    "start": "1622400",
    "end": "1628799"
  },
  {
    "text": "provider association so this feature was recently introduced into eks so we're implementing that",
    "start": "1628799",
    "end": "1634720"
  },
  {
    "text": "so that we get to the point of having feature parity within eks we're looking at a change in the way",
    "start": "1634720",
    "end": "1640559"
  },
  {
    "text": "that we we handle launch templates within the managed side uh currently we",
    "start": "1640559",
    "end": "1646080"
  },
  {
    "text": "we generate a default launch template but we don't actually allow you or to to to configure all of the options",
    "start": "1646080",
    "end": "1652399"
  },
  {
    "text": "within a launched effect so this this will be coming along from an api point of view we are going",
    "start": "1652399",
    "end": "1658640"
  },
  {
    "text": "to refactor the aws managed control plane and essentially deprecate the aws",
    "start": "1658640",
    "end": "1663760"
  },
  {
    "text": "managed cluster so currently the aliens measure control",
    "start": "1663760",
    "end": "1668960"
  },
  {
    "text": "plane has grown organically a bit in all honesty and we're going to change it and refactor it so there's a bit more",
    "start": "1668960",
    "end": "1674320"
  },
  {
    "text": "structure to it so it's obvious when you use it you know what options you should be using",
    "start": "1674320",
    "end": "1682240"
  },
  {
    "start": "1681000",
    "end": "1751000"
  },
  {
    "text": "so how do i get started so first and foremost uh try cappy and copper",
    "start": "1682240",
    "end": "1689760"
  },
  {
    "text": "cappy is a project creates a quick start guide and within that quickscop guide you can choose follow through and",
    "start": "1689760",
    "end": "1696399"
  },
  {
    "text": "choose which provider you want to use and to get you from the point of creating your management cluster to creating your",
    "start": "1696399",
    "end": "1702320"
  },
  {
    "text": "first tenant cluster once you've done that you can then look at the kappa specific book that we",
    "start": "1702320",
    "end": "1708640"
  },
  {
    "text": "publish this has various topics that are specific to capital that will be useful",
    "start": "1708640",
    "end": "1714399"
  },
  {
    "text": "like different scenarios how to contribute you know our release cycle and stuff like that",
    "start": "1714399",
    "end": "1720320"
  },
  {
    "text": "then if you're still still interested come and look at the code come look at our repo um it sits within the kubernetes sig org",
    "start": "1720320",
    "end": "1726640"
  },
  {
    "text": "everything within github and so you can come and take a look at the issues the releases and the code",
    "start": "1726640",
    "end": "1733039"
  },
  {
    "text": "we also have our own channel within the kubernetes slack called cluster cluster-api-aws",
    "start": "1733039",
    "end": "1739760"
  },
  {
    "text": "and we also have office hours that you can attend and listen to where we discuss issues and the roadmap these are",
    "start": "1739760",
    "end": "1746559"
  },
  {
    "text": "bi-weekly on a monday at 10 a.m pacific time or 6 p.m utc so how can i contribute so there's a",
    "start": "1746559",
    "end": "1754159"
  },
  {
    "start": "1751000",
    "end": "1841000"
  },
  {
    "text": "number of ways you can contribute it's not all about coding so the first way do you have writing skills so",
    "start": "1754159",
    "end": "1760480"
  },
  {
    "text": "every project needs documentation you know the quick start guides you know architecture diagrams and so on",
    "start": "1760480",
    "end": "1766399"
  },
  {
    "text": "you know for the project to be successful we need good documentation so if you have those skills you know we've really",
    "start": "1766399",
    "end": "1771760"
  },
  {
    "text": "welcomed you to come and come and join the project do you have product skills you know can you translate",
    "start": "1771760",
    "end": "1777360"
  },
  {
    "text": "actual real-world scenarios into requirements and issues that need to be implemented within kappa",
    "start": "1777360",
    "end": "1783360"
  },
  {
    "text": "so how do you help with with prioritization with when we're planning a new release",
    "start": "1783360",
    "end": "1789039"
  },
  {
    "text": "these skills are really really important to make sure that we deliver on what users want",
    "start": "1789039",
    "end": "1794640"
  },
  {
    "text": "do you have coding skills um you know it's not all about actually cutting code",
    "start": "1794640",
    "end": "1799679"
  },
  {
    "text": "you know we need people to review pull requests we need people to investigate issues and",
    "start": "1799679",
    "end": "1805120"
  },
  {
    "text": "try and recreate them and create really useful tickets for us if you want to code this is great you",
    "start": "1805120",
    "end": "1811679"
  },
  {
    "text": "know we need more people to code and you can look at the issues and see the ones that are tagged as a good first",
    "start": "1811679",
    "end": "1817760"
  },
  {
    "text": "issue or help wanted that's a great place to start we also you know require people to to",
    "start": "1817760",
    "end": "1824799"
  },
  {
    "text": "improve our test coverage uh whether that is the unit test or the end-to-end tests",
    "start": "1824799",
    "end": "1830640"
  },
  {
    "text": "you know you know there's lots and lots of other ways you can help with this project you know just come along and get",
    "start": "1830640",
    "end": "1837039"
  },
  {
    "text": "involved thank you all for attending",
    "start": "1837039",
    "end": "1843440"
  }
]