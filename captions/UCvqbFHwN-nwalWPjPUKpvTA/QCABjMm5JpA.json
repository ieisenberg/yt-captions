[
  {
    "text": "uh hello everyone my name is Philip kuznetsov and I will be presenting a",
    "start": "60",
    "end": "5220"
  },
  {
    "text": "root causing incidents without redeploying prod",
    "start": "5220",
    "end": "9559"
  },
  {
    "text": "a little bit about me I am a software engineer at New Relic where I spend most of my time building pixie",
    "start": "10260",
    "end": "17940"
  },
  {
    "text": "um let's just jump right into it so here's the situation imagine we're working at",
    "start": "17940",
    "end": "25320"
  },
  {
    "text": "an e-commerce company called online boutique we're selling a bunch of hip trendy items and things have been",
    "start": "25320",
    "end": "31920"
  },
  {
    "text": "chugging on chugging along pretty well recently we've had no problems code is shipping",
    "start": "31920",
    "end": "39180"
  },
  {
    "text": "everything's great until today the front-end service is panicking",
    "start": "39180",
    "end": "44760"
  },
  {
    "text": "something is happening there that we don't really know what's going on we what's worse is we haven't released",
    "start": "44760",
    "end": "51420"
  },
  {
    "text": "code to the front-end service in weeks so there's no way that any changes in the front-end service are responsible",
    "start": "51420",
    "end": "57719"
  },
  {
    "text": "this is a classic problem in microservices you have dependency trees across multiple different services that",
    "start": "57719",
    "end": "64260"
  },
  {
    "text": "when one thing changes in one service causes a break in another service",
    "start": "64260",
    "end": "70759"
  },
  {
    "text": "so one thing we did change recently which we highly suspect is the problem uh we recently added this new product",
    "start": "71700",
    "end": "77880"
  },
  {
    "text": "item called uh sticker a simple online boutique sticker and we don't know why",
    "start": "77880",
    "end": "83280"
  },
  {
    "text": "this is causing us any problems the search",
    "start": "83280",
    "end": "89420"
  },
  {
    "text": "so we're looking at the logs and we see this one log with the Panic that says one of the specified money values is",
    "start": "90479",
    "end": "96119"
  },
  {
    "text": "invalid it's a bit weird when our money values is weird Okay we keep seeing this",
    "start": "96119",
    "end": "101880"
  },
  {
    "text": "error and it keeps getting returned by this sum function",
    "start": "101880",
    "end": "108060"
  },
  {
    "text": "um before I dive a little bit deeper into what the sum function is you should understand why we need to have a sum function in the first place why don't we",
    "start": "108060",
    "end": "114119"
  },
  {
    "text": "just add these together the way money is represented inside of our service let me jump ahead it's uh split up into the",
    "start": "114119",
    "end": "121979"
  },
  {
    "text": "units section and a nano section the units is the values before the decimal point the Nanos are the values after the",
    "start": "121979",
    "end": "128520"
  },
  {
    "text": "decimal point but represented as Nano units so a billion Nano units are one",
    "start": "128520",
    "end": "133920"
  },
  {
    "text": "unit unfortunately whenever we see this error from the sum function",
    "start": "133920",
    "end": "140160"
  },
  {
    "text": "we don't know what value is actually invalid it's it's like what is actually causing this problem",
    "start": "140160",
    "end": "147379"
  },
  {
    "text": "a valid money type as I mentioned before is one that uh has matching signs",
    "start": "147480",
    "end": "153360"
  },
  {
    "text": "between the units and the Nanos so both positive or both negative and that the value that the Nanos are in absolute",
    "start": "153360",
    "end": "160680"
  },
  {
    "text": "value less than a billion for some reason some value showing up through our system",
    "start": "160680",
    "end": "166819"
  },
  {
    "text": "is not matching one of these conditions or both of these conditions",
    "start": "166819",
    "end": "173060"
  },
  {
    "text": "unfortunately it's not that easy to tell what happened in our environment like",
    "start": "173879",
    "end": "179040"
  },
  {
    "text": "ideally we just go and add a log in here and just print it out but in many different environments",
    "start": "179040",
    "end": "184140"
  },
  {
    "text": "especially production environments that's not really an option we might try to reproduce this locally",
    "start": "184140",
    "end": "190980"
  },
  {
    "text": "but sometimes a bug doesn't really appear locally it's hard to reproduce and again we're searching for that root cause here",
    "start": "190980",
    "end": "197879"
  },
  {
    "text": "sometimes deploying to probably just takes too long there is a situation where you might just go and add this log in and hope that you kind of discover",
    "start": "197879",
    "end": "204180"
  },
  {
    "text": "what's going wrong I guess the severity of this incident is rather low so it",
    "start": "204180",
    "end": "209220"
  },
  {
    "text": "would be okay to go and add this log in but that also brings in its own risks as well",
    "start": "209220",
    "end": "214980"
  },
  {
    "text": "so maybe while we're adding this uh this log in we sneak in some code that",
    "start": "214980",
    "end": "220860"
  },
  {
    "text": "actually breaks things such as uh some buggy code or something like that and then often for many of our",
    "start": "220860",
    "end": "227819"
  },
  {
    "text": "production environments we have to comply by certain rules and deploying a product production willy-nilly",
    "start": "227819",
    "end": "233220"
  },
  {
    "text": "especially adding just logs or something like that is really kind of out of compliance and something we don't want to do",
    "start": "233220",
    "end": "239760"
  },
  {
    "text": "if only there was another way I wonder where that way is going to come okay so I'm going to show you",
    "start": "239760",
    "end": "246900"
  },
  {
    "text": "BPF Trace is a great tool that's going to help us add these logs in production",
    "start": "246900",
    "end": "252420"
  },
  {
    "text": "BPF Trace is a way to get kernel level visibility inside of your running",
    "start": "252420",
    "end": "258419"
  },
  {
    "text": "applications as it mentions here it's also a high level tracing language for the Linux",
    "start": "258419",
    "end": "264540"
  },
  {
    "text": "ebpf and ebpf is really just a way to run sandbox programs inside of your kernel",
    "start": "264540",
    "end": "271620"
  },
  {
    "text": "sandbox being something that guarantees Safety and Security for your executing",
    "start": "271620",
    "end": "277199"
  },
  {
    "text": "programs specifically ebpf was designed to allow kernel developers and actually people",
    "start": "277199",
    "end": "283800"
  },
  {
    "text": "who are not just kernel developers to extend the capabilities of the kernel and get access to the high quality data",
    "start": "283800",
    "end": "291479"
  },
  {
    "text": "as well as the privileged context that the kernel provides the basic of the basics of",
    "start": "291479",
    "end": "299840"
  },
  {
    "text": "ebpf and I guess BPF Trace as a result are for us we're going to add this probe",
    "start": "299840",
    "end": "306180"
  },
  {
    "text": "called the u-probe and that's going to intercept the running program run the evpf program and then that ebpf",
    "start": "306180",
    "end": "313199"
  },
  {
    "text": "program is going to ship the data out that we want to collect so in our case the arguments to this is valid function",
    "start": "313199",
    "end": "318660"
  },
  {
    "text": "you can think of this analogous as analogous to a debugger a specifically a",
    "start": "318660",
    "end": "324360"
  },
  {
    "text": "break point in a debugger the break point you add the breakpoint to your code your code runs until that",
    "start": "324360",
    "end": "329699"
  },
  {
    "text": "breakpoint pauses you can go poke around the variables get data whatever you want and then when you want you resume the",
    "start": "329699",
    "end": "335880"
  },
  {
    "text": "execution and it continues onwards so BPF trace and ebpf are very similar in",
    "start": "335880",
    "end": "341400"
  },
  {
    "text": "that regard instead of you poking around though we have a program that specifies the poking around I guess",
    "start": "341400",
    "end": "348800"
  },
  {
    "text": "so here's an example of a you probe oh sorry a BPF Trace script specifically on this is valid function that we want to",
    "start": "348960",
    "end": "354780"
  },
  {
    "text": "go and add a log to um we specify the type of probe u-probe",
    "start": "354780",
    "end": "360360"
  },
  {
    "text": "we specify where we want to go collect this data on the symbol and then we have this uh body of the function which goes",
    "start": "360360",
    "end": "366660"
  },
  {
    "text": "and figures out how to grab this data that we want and then we print it out",
    "start": "366660",
    "end": "372240"
  },
  {
    "text": "now typically when you deploy BPF Trace you go SSH into a node and you run this",
    "start": "372240",
    "end": "378840"
  },
  {
    "text": "BPF Trace script with a BPF Trace CLI um but in a kubernetes environment where",
    "start": "378840",
    "end": "386400"
  },
  {
    "text": "you have many nodes this can be really difficult or at least just tedious you",
    "start": "386400",
    "end": "391620"
  },
  {
    "text": "have to go and find this specific node that is running the specific pod that you want to go Trace you have to find the binary path for that specific pods",
    "start": "391620",
    "end": "399120"
  },
  {
    "text": "server that you're running specify that and then you can deploy your BPF Trace probe",
    "start": "399120",
    "end": "405600"
  },
  {
    "text": "at Pixi what we've been working on recently is making this process a lot easier instead of specifying SSH into your",
    "start": "405600",
    "end": "413460"
  },
  {
    "text": "specific cluster your specific node and finding that specific binary that you want to instrument instead what we want",
    "start": "413460",
    "end": "420120"
  },
  {
    "text": "to provide or what we have provided is a way to specify a set of PODS that you",
    "start": "420120",
    "end": "425639"
  },
  {
    "text": "want to attach to you can specify the labels inside of your pod that",
    "start": "425639",
    "end": "431280"
  },
  {
    "text": "uh specify which pod you want to attach to and you specify the namespace and then uh Pixie will take care of the rest",
    "start": "431280",
    "end": "438060"
  },
  {
    "text": "of adding BPF that BPF Trace probe program that you want onto that specific",
    "start": "438060",
    "end": "443819"
  },
  {
    "text": "pod so together BPF trace and pixie makes it easy to add print statements in your",
    "start": "443819",
    "end": "450120"
  },
  {
    "text": "production kubernetes environment all right let's try a demo",
    "start": "450120",
    "end": "457460"
  },
  {
    "text": "actually before I do that so this is online boutique you can see",
    "start": "458880",
    "end": "464639"
  },
  {
    "text": "um kind of what's going on here it's just e-commerce site and then what I'm going to do is I'm going to add this BPF",
    "start": "464639",
    "end": "471419"
  },
  {
    "text": "Trace program to go and check our is valid call",
    "start": "471419",
    "end": "476460"
  },
  {
    "text": "and so I'll show you that actually before I do that",
    "start": "476460",
    "end": "482340"
  },
  {
    "text": "here's the data we get out so if you remember that structure I mentioned earlier that split up the float value",
    "start": "482340",
    "end": "487740"
  },
  {
    "text": "for money into two different integer values we have our units value here we have our Nano Nanos values here and so",
    "start": "487740",
    "end": "494039"
  },
  {
    "text": "you can see actually right at the top here we have 99 items up here so that is the sticker so that looks good that",
    "start": "494039",
    "end": "499919"
  },
  {
    "text": "means actually when we put in the 99 item things are working so probably is not just from that like entry point so",
    "start": "499919",
    "end": "507000"
  },
  {
    "text": "something in our code is probably manipulating it to cause some problems and okay so I have to go trigger the",
    "start": "507000",
    "end": "513419"
  },
  {
    "text": "error and so here's what happens when you go and try to add the sticker to your cart",
    "start": "513419",
    "end": "519060"
  },
  {
    "text": "you add it and there's a crash so you just see an error runtime Panic no fun no stickers for us",
    "start": "519060",
    "end": "526860"
  },
  {
    "text": "um but now what we can see if we run this again we can see that we have this really",
    "start": "526860",
    "end": "532080"
  },
  {
    "text": "weird representation hold on let me make this a little bigger um let me run it again looks better",
    "start": "532080",
    "end": "538740"
  },
  {
    "text": "we have this really weird representation we have units and Nanos that are not aligned in their sign",
    "start": "538740",
    "end": "545640"
  },
  {
    "text": "um and is valid is throwing an error or returning that this is not valid and then we see an error out in our locks",
    "start": "545640",
    "end": "554220"
  },
  {
    "text": "so this is really bad but what's really good is this actually gives us a big clue onto what's happening now I",
    "start": "554220",
    "end": "560160"
  },
  {
    "text": "mentioned that Nanos are um one billion Nanos are equal to one unit so if you convert this negative 10",
    "start": "560160",
    "end": "567180"
  },
  {
    "text": "million into units that's negative one cent so you have one minus one here one",
    "start": "567180",
    "end": "572459"
  },
  {
    "text": "minus one dollar minus one cent that's 99 cents so I think",
    "start": "572459",
    "end": "577680"
  },
  {
    "text": "I have a better idea on what's actually happening here this 99 value is entering",
    "start": "577680",
    "end": "583140"
  },
  {
    "text": "into some of our sum functions and it's being converted in a really wrong way",
    "start": "583140",
    "end": "589260"
  },
  {
    "text": "um I'm trying to think of where we actually call this but maybe I won't show you that actually",
    "start": "589260",
    "end": "594480"
  },
  {
    "text": "um so in our sum function we call sum a number of times I'm going to skip ahead a little bit here so I've seen that sum",
    "start": "594480",
    "end": "600660"
  },
  {
    "text": "is called a number of times one time it sees a zero and the next time uh and one sorry one of the arguments is a zero",
    "start": "600660",
    "end": "606480"
  },
  {
    "text": "value the next argument is that 99 value that we've added and then when I was digging into this earlier I noticed that",
    "start": "606480",
    "end": "613500"
  },
  {
    "text": "this condition right here which is basically another validity check after we've summed values together this",
    "start": "613500",
    "end": "618779"
  },
  {
    "text": "validity check is actually incorrect when the units value is",
    "start": "618779",
    "end": "624959"
  },
  {
    "text": "um zero but the Nano's value is greater than zero we actually don't pass into",
    "start": "624959",
    "end": "630000"
  },
  {
    "text": "this if statement here even though that value which would be 0 and 99 Cents would actually be correct so we're",
    "start": "630000",
    "end": "637380"
  },
  {
    "text": "missing this statement and then we end up down here and so here is where we can we increment",
    "start": "637380",
    "end": "642660"
  },
  {
    "text": "the unit so one becomes zero sorry zero becomes one and then Nanos gets shifted over to this",
    "start": "642660",
    "end": "648480"
  },
  {
    "text": "negative 10 million",
    "start": "648480",
    "end": "651380"
  },
  {
    "text": "so um here's that script again",
    "start": "657120",
    "end": "663320"
  },
  {
    "text": "takeaways we're able to insert some logs into our running kubernetes pod and",
    "start": "664019",
    "end": "670680"
  },
  {
    "text": "we're able to determine the root cause of this tricky incident by just seeing some of these logs come out and just",
    "start": "670680",
    "end": "676920"
  },
  {
    "text": "give us like a little bit more visibility that otherwise would have taken a long time or taken a lot of effort to get",
    "start": "676920",
    "end": "683720"
  },
  {
    "text": "there's a lot to learn about these tools I've shown you one example of where BPF Trace can be used",
    "start": "684560",
    "end": "690620"
  },
  {
    "text": "so specifically we're using a u-probe but there are many opportunity which stands for user space probe but there",
    "start": "690620",
    "end": "697200"
  },
  {
    "text": "are other places where you can probe as well so such as the kernel a bunch of static Trace points that kernel",
    "start": "697200",
    "end": "703260"
  },
  {
    "text": "developers added as well as Library developers have added and uh",
    "start": "703260",
    "end": "709380"
  },
  {
    "text": "there's just many great tools that have been already listed out here that you can go try today",
    "start": "709380",
    "end": "715680"
  },
  {
    "text": "um on top of that I talked a little bit about pixel you've showed you a little bit of Pixie uh and showing you how you",
    "start": "715680",
    "end": "721079"
  },
  {
    "text": "can kind of combine the tools together to get a nice kubernetes experience with BPF Trace",
    "start": "721079",
    "end": "728720"
  },
  {
    "text": "the evpf landscape is pretty interesting the ebpf application landscape is pretty",
    "start": "729120",
    "end": "734579"
  },
  {
    "text": "interesting there's a lot of great tools from networking to observability to security and you should also check these",
    "start": "734579",
    "end": "740640"
  },
  {
    "text": "out as well they give you this like nice access to this kernel level visibility that evpf",
    "start": "740640",
    "end": "747180"
  },
  {
    "text": "gives you and add a bunch of great features on top of that",
    "start": "747180",
    "end": "752600"
  },
  {
    "text": "um and finally there's a bunch of Great Links on learning how to write BPF Trace in a bunch of different contexts today I",
    "start": "753839",
    "end": "759959"
  },
  {
    "text": "showed you some go code which has some challenges without there's some challenges with writing BPF Trace with",
    "start": "759959",
    "end": "766079"
  },
  {
    "text": "go but it is completely over um something you can overcome and it's it's",
    "start": "766079",
    "end": "771120"
  },
  {
    "text": "very valuable once you have this tool in your tool set",
    "start": "771120",
    "end": "776120"
  },
  {
    "text": "um I guess with that uh I'll be at the pixie booth in the project Pavilion",
    "start": "776579",
    "end": "782940"
  },
  {
    "text": "um and you can come and talk to us talk to me and my colleagues more about what",
    "start": "782940",
    "end": "788339"
  },
  {
    "text": "pixie does what BPF Trace does and uh I think that's that's all",
    "start": "788339",
    "end": "795800"
  },
  {
    "text": "thank you [Applause]",
    "start": "796139",
    "end": "805079"
  },
  {
    "text": "questions just raise your hand",
    "start": "805079",
    "end": "810139"
  },
  {
    "text": "I was just hoping you could uh go back to your um yeah your stack Trace code slide",
    "start": "811500",
    "end": "818519"
  },
  {
    "text": "um sorry the stack trace or the uh this this one I can also show it in the application if",
    "start": "818519",
    "end": "825420"
  },
  {
    "text": "you want in pixie sure yeah",
    "start": "825420",
    "end": "828980"
  },
  {
    "text": "let me that's it thank you okay",
    "start": "831120",
    "end": "837320"
  },
  {
    "text": "um so do you have to run a pixie agent on every node and how privileged does it need to be within the cluster yeah I",
    "start": "841440",
    "end": "847740"
  },
  {
    "text": "think you need um I think you need the I forget the exact names for them but yeah you need pretty high privileges to run pixie and",
    "start": "847740",
    "end": "854820"
  },
  {
    "text": "you need to run a um you we have a Dame Insight so you need to run a pod in every single node of",
    "start": "854820",
    "end": "860639"
  },
  {
    "text": "your cluster are there any security risks associated with that like can you see that being",
    "start": "860639",
    "end": "865800"
  },
  {
    "text": "abused as an attack Vector uh it's always possible I guess",
    "start": "865800",
    "end": "871800"
  },
  {
    "text": "um but we we try to provide um some guarantees for Access Control and everything like that and you can",
    "start": "871800",
    "end": "877500"
  },
  {
    "text": "continue you can keep you can host pixie entirely inside of your own cluster um so that everything is maintained",
    "start": "877500",
    "end": "883980"
  },
  {
    "text": "within that cluster yeah",
    "start": "883980",
    "end": "887480"
  },
  {
    "text": "what should I keep in mind to get my or to leave my applications uh debuggable or you know um I see that you have some",
    "start": "897720",
    "end": "905040"
  },
  {
    "text": "symbols there like with the variable names yeah and when I'm producing a production quality binary I typically",
    "start": "905040",
    "end": "912180"
  },
  {
    "text": "strip the debug signals and you know the symbols the organizations so what should I take care of uh to not",
    "start": "912180",
    "end": "920399"
  },
  {
    "text": "um what should my future me um wish that my future my current me",
    "start": "920399",
    "end": "925860"
  },
  {
    "text": "would do you know oh oh with the symbols and everything like that yeah I mean I think we recommend you keep symbols",
    "start": "925860",
    "end": "932339"
  },
  {
    "text": "around to make it yeah that's I think that's the biggest thing as well as dwarf info is typically helpful",
    "start": "932339",
    "end": "938639"
  },
  {
    "text": "um I actually don't know the exact difference between the two but it's uh I yeah I think having those two around is",
    "start": "938639",
    "end": "944579"
  },
  {
    "text": "very helpful for integrating with like a tool like BPF trace and what about for",
    "start": "944579",
    "end": "949920"
  },
  {
    "text": "other Technologies so if I want to do something similar for Java yeah is that",
    "start": "949920",
    "end": "955500"
  },
  {
    "text": "that easy or um what else is required for I I know Java is a bit more challenging",
    "start": "955500",
    "end": "961800"
  },
  {
    "text": "um there is some benefit there's some benefits that the uh programs are jitted",
    "start": "961800",
    "end": "967920"
  },
  {
    "text": "as well but I don't know actually the details on what you need to do for Java we have actually implemented a separate",
    "start": "967920",
    "end": "974940"
  },
  {
    "text": "feature not not the BPF Trace feature but a profiling feature in Java and so",
    "start": "974940",
    "end": "980339"
  },
  {
    "text": "um there's an option to go look at our commits there and I we have a slack Channel you can go and talk to us on pixie on how we did that and maybe",
    "start": "980339",
    "end": "987180"
  },
  {
    "text": "that'll help you with figuring out the BPF trace on Java or something like that wonderful thank you",
    "start": "987180",
    "end": "993620"
  },
  {
    "text": "oh okay",
    "start": "996839",
    "end": "999620"
  },
  {
    "text": "we have a lot of time for for questions",
    "start": "1002660",
    "end": "1006519"
  },
  {
    "text": "oh thanks um this might be a totally insane request but could we see sort of what uh",
    "start": "1008540",
    "end": "1013820"
  },
  {
    "text": "like a BPF trace on the Node would look like for contrast with yeah um I can try that out uh",
    "start": "1013820",
    "end": "1021259"
  },
  {
    "text": "the okay well yeah the hard thing is I have to go and",
    "start": "1021259",
    "end": "1027438"
  },
  {
    "text": "find that binary so I mentioned it was hard oh it didn't lie",
    "start": "1027439",
    "end": "1033160"
  },
  {
    "text": "um let me see I think there's a easy way for me to grab this data so",
    "start": "1033380",
    "end": "1039220"
  },
  {
    "text": "um process stats um",
    "start": "1052340",
    "end": "1059020"
  },
  {
    "text": "I guess I'll I think this is going to take too long um I'll just show you what the rough idea would be",
    "start": "1059419",
    "end": "1065419"
  },
  {
    "text": "so um let me just copy this part out",
    "start": "1065419",
    "end": "1070960"
  },
  {
    "text": "so we have this u-prote here and Pixi doesn't require this but let's say vanilla BPF Trace does you would",
    "start": "1072679",
    "end": "1078260"
  },
  {
    "text": "typically add like path to app um path basically and then",
    "start": "1078260",
    "end": "1084740"
  },
  {
    "text": "um you would have to go SSH into your node make sure BPF Trace is installed and",
    "start": "1084740",
    "end": "1091700"
  },
  {
    "text": "then go and add this then run the script basically so I guess yeah I'd be running that",
    "start": "1091700",
    "end": "1098120"
  },
  {
    "text": "um I'll just save it um is valid.bt",
    "start": "1098120",
    "end": "1105980"
  },
  {
    "text": "I can do it on this like Dev machine I just it just won't create any data",
    "start": "1106100",
    "end": "1111640"
  },
  {
    "text": "so um",
    "start": "1136640",
    "end": "1140200"
  },
  {
    "text": "oh man okay I thought this would be easy uh",
    "start": "1157700",
    "end": "1164900"
  },
  {
    "text": "uh okay well let's before we do that I'll just show you how to run the BPF Trace script first so",
    "start": "1164900",
    "end": "1171880"
  },
  {
    "text": "this is a approximation let's see is valid.bt",
    "start": "1171980",
    "end": "1177740"
  },
  {
    "text": "so you'd run something like that I actually have to adjust it so that it is",
    "start": "1177740",
    "end": "1183580"
  },
  {
    "text": "um",
    "start": "1184640",
    "end": "1186760"
  },
  {
    "text": "trays",
    "start": "1192980",
    "end": "1195980"
  },
  {
    "text": "okay so that's attached now and then if I can get the front end service running",
    "start": "1207919",
    "end": "1212960"
  },
  {
    "text": "then it should work um in the meantime I could take another question I guess",
    "start": "1212960",
    "end": "1218980"
  },
  {
    "text": "how long does the trace oh thank you",
    "start": "1219860",
    "end": "1225679"
  },
  {
    "text": "how long will the trace that's injected last uh we set a TTL for pixie but if",
    "start": "1225679",
    "end": "1232460"
  },
  {
    "text": "you notice here actually when I was doing it locally it just runs until you control C it so that's how you say like",
    "start": "1232460",
    "end": "1238520"
  },
  {
    "text": "send it a signal yeah so if the if the Pod crash loops and restarts will we get",
    "start": "1238520",
    "end": "1244039"
  },
  {
    "text": "injected again yeah so we're I think that's the next thing we're working on for this particular feature is just",
    "start": "1244039",
    "end": "1249559"
  },
  {
    "text": "making sure it comes back on um so we just released this feature like I think we're actually releasing it on",
    "start": "1249559",
    "end": "1254900"
  },
  {
    "text": "Tuesday so follow us on slack and we'll update you on that but um it's coming out soon",
    "start": "1254900",
    "end": "1260539"
  },
  {
    "text": "perfect nope",
    "start": "1260539",
    "end": "1265640"
  },
  {
    "text": "oh but sorry sorry to that point about releasing it we have a k-probe feature already we're just supporting user space",
    "start": "1265640",
    "end": "1271880"
  },
  {
    "text": "probes uh with this selector thing yeah on Tuesday",
    "start": "1271880",
    "end": "1277660"
  },
  {
    "text": "um to your demon said Can can you start the demon set after you've found this an",
    "start": "1280400",
    "end": "1287059"
  },
  {
    "text": "issue and you want to debug so does it not runs all the time on the cluster yeah you can you could deploy the Damon",
    "start": "1287059",
    "end": "1293179"
  },
  {
    "text": "set um after you've uh run into the issue it's not requiring it doesn't require",
    "start": "1293179",
    "end": "1298820"
  },
  {
    "text": "you to go and uh run it continuously so if you want to add it afterwards you can totally do that and we've made our",
    "start": "1298820",
    "end": "1305120"
  },
  {
    "text": "deploy process pretty fast so you can deploy and get data within I think three",
    "start": "1305120",
    "end": "1310460"
  },
  {
    "text": "or so minutes and or deploy and let's say deploy pixie and get uh BPF Trace",
    "start": "1310460",
    "end": "1317120"
  },
  {
    "text": "data in three minutes plus the time it takes to write the ppf trace script yeah this is yes this can address a lot of",
    "start": "1317120",
    "end": "1323659"
  },
  {
    "text": "security concerns because if it's normally not installed yeah and then you",
    "start": "1323659",
    "end": "1328820"
  },
  {
    "text": "install it only for the time that you needed for debugging yeah because it would be made in production they're easy",
    "start": "1328820",
    "end": "1335659"
  },
  {
    "text": "very easy sorry say that one more time so if you only installed it for a short",
    "start": "1335659",
    "end": "1341840"
  },
  {
    "text": "debugging time yeah in production to figure out a serious problem yeah it's",
    "start": "1341840",
    "end": "1347179"
  },
  {
    "text": "it's it's something very good because then the security guys are much happier",
    "start": "1347179",
    "end": "1353440"
  },
  {
    "text": "right right all the time yeah yeah because you can delete it and make sure it does like somebody doesn't see it as",
    "start": "1353440",
    "end": "1359780"
  },
  {
    "text": "an opportunity yeah",
    "start": "1359780",
    "end": "1363039"
  },
  {
    "text": "do we need to make any changes to running pods for uh Bixby to be able to",
    "start": "1369940",
    "end": "1375799"
  },
  {
    "text": "observe it or pixie um as long as your pods have symbols uh",
    "start": "1375799",
    "end": "1381020"
  },
  {
    "text": "both Pixi and BPF Trace should work and there might be a few more caveats um on on that as well it's in our docs",
    "start": "1381020",
    "end": "1387200"
  },
  {
    "text": "but I know that symbols are important and to some degree dwarf info is helpful but I don't think actually dwarf info is",
    "start": "1387200",
    "end": "1394220"
  },
  {
    "text": "a hard requirement so yeah oh and to be clear if you're running go or something like that your symbol",
    "start": "1394220",
    "end": "1400460"
  },
  {
    "text": "should already be included if you just use the default build",
    "start": "1400460",
    "end": "1406000"
  },
  {
    "text": "oh I think up here",
    "start": "1407000",
    "end": "1410440"
  },
  {
    "text": "yeah really just kind of a follow-up on the simple thing yeah I was just wondering if there is a way to use like",
    "start": "1417980",
    "end": "1423260"
  },
  {
    "text": "an external you know symbol store so you don't have to embed them in your production images but you can have them",
    "start": "1423260",
    "end": "1429799"
  },
  {
    "text": "available somehow for your learning purposes we we have not designed",
    "start": "1429799",
    "end": "1434900"
  },
  {
    "text": "anything like that before but we've we've thought about it and I think that's like a really cool idea so it",
    "start": "1434900",
    "end": "1441080"
  },
  {
    "text": "might be something so actually we have Pete back here he's uh he's somebody who works closely on this and he can he can",
    "start": "1441080",
    "end": "1447200"
  },
  {
    "text": "talk to you about this afterwards oh I think there's a question back there",
    "start": "1447200",
    "end": "1454539"
  },
  {
    "text": "sorry routing people",
    "start": "1457700",
    "end": "1462039"
  },
  {
    "text": "hey uh so if I understand it correctly if you have access to the like pixie",
    "start": "1464659",
    "end": "1470539"
  },
  {
    "text": "agent uh or at least that UI you can run like any code you want",
    "start": "1470539",
    "end": "1476360"
  },
  {
    "text": "um I guess I was just curious how you control access to the to those agents",
    "start": "1476360",
    "end": "1481820"
  },
  {
    "text": "and like search it or what what I guess yeah what's the security stuff for that",
    "start": "1481820",
    "end": "1487640"
  },
  {
    "text": "yeah there's there's a few different options um so there is this data collection side where",
    "start": "1487640",
    "end": "1495440"
  },
  {
    "text": "we offer the ability to redact key pii containing information so you can run in",
    "start": "1495440",
    "end": "1501919"
  },
  {
    "text": "restricted mode with regards to BPF Trace specifically we have uh adding",
    "start": "1501919",
    "end": "1507980"
  },
  {
    "text": "more access controls on the roadmap so I think a temporary solution for say like getting the observability power of Pixie",
    "start": "1507980",
    "end": "1515419"
  },
  {
    "text": "while um we are working on the access control side of things you can go and pipe that",
    "start": "1515419",
    "end": "1522440"
  },
  {
    "text": "data into some open Telemetry collector and use create a view on that side basically so I guess you can pipe that",
    "start": "1522440",
    "end": "1530299"
  },
  {
    "text": "data to an open Telemetry collector send it to Prometheus and then use Prometheus views or something like that or a",
    "start": "1530299",
    "end": "1535880"
  },
  {
    "text": "grafana or some other tool like that and that way you can get that data and",
    "start": "1535880",
    "end": "1541039"
  },
  {
    "text": "everything like that while preserving the permission layer I guess um you can also just remove certain",
    "start": "1541039",
    "end": "1546500"
  },
  {
    "text": "users I guess from your system you can hide certain users or prevent certain users from signing up so",
    "start": "1546500",
    "end": "1554799"
  },
  {
    "text": "okay I can respond about symbol stores we are um I'm also on the pixie team so",
    "start": "1565120",
    "end": "1570860"
  },
  {
    "text": "kind of uh back to the question about that we are aware that there are already existing simple storage Technologies and",
    "start": "1570860",
    "end": "1577100"
  },
  {
    "text": "we are that is not on the roadmap yet but it would be a really really neat thing to enable both",
    "start": "1577100",
    "end": "1583880"
  },
  {
    "text": "for BPF trace and also for the profiler and in general it's it would be super",
    "start": "1583880",
    "end": "1588980"
  },
  {
    "text": "useful I can see that so should anybody you know join us on slack and want to",
    "start": "1588980",
    "end": "1596299"
  },
  {
    "text": "discuss simple stores where we are absolutely you know interested and looking to find",
    "start": "1596299",
    "end": "1602600"
  },
  {
    "text": "the capacity and somehow you know improve along that dimension",
    "start": "1602600",
    "end": "1609400"
  },
  {
    "text": "no one knows okay oh uh oh there are some questions",
    "start": "1612559",
    "end": "1617900"
  },
  {
    "text": "over there okay uh by the way we have T-shirts at the door I think is that true Michelle",
    "start": "1617900",
    "end": "1623840"
  },
  {
    "text": "yeah if people want t-shirts yeah feel free to grab them",
    "start": "1623840",
    "end": "1630460"
  },
  {
    "text": "uh can you explain a little bit how you target uh what you want to instrument because here on the probe is it gonna",
    "start": "1630980",
    "end": "1637760"
  },
  {
    "text": "probe all the methods that have that name or your pixie smart enough to use",
    "start": "1637760",
    "end": "1642919"
  },
  {
    "text": "labels to get official pods and within the pods maybe a container as well yeah",
    "start": "1642919",
    "end": "1649159"
  },
  {
    "text": "yeah so um we have this full symbol name first of all so I guess it's a little bit more",
    "start": "1649159",
    "end": "1654559"
  },
  {
    "text": "specific but uh yeah you can specify the exact pods that you want to attach to",
    "start": "1654559",
    "end": "1660140"
  },
  {
    "text": "there is this label selector down here we have our label name and then the label value so app is equal to front end",
    "start": "1660140",
    "end": "1665900"
  },
  {
    "text": "so it's only attaching to the front-end service that was having the issue but uh we actually we have this code in a lot",
    "start": "1665900",
    "end": "1671900"
  },
  {
    "text": "of the other services as well but we wanted to ignore those because those Services were not having that same problem",
    "start": "1671900",
    "end": "1678679"
  },
  {
    "text": "okay the other hand on the other side",
    "start": "1678679",
    "end": "1684140"
  },
  {
    "text": "yeah we still have five minutes of time right here folks who is living please",
    "start": "1684140",
    "end": "1689240"
  },
  {
    "text": "just leave quite okay",
    "start": "1689240",
    "end": "1692200"
  },
  {
    "text": "foreign penalty in having that as part of you",
    "start": "1698720",
    "end": "1706400"
  },
  {
    "text": "know kubernetes demo set or processing kubernetes instead of having that as as a a byte code waving or something like",
    "start": "1706400",
    "end": "1714080"
  },
  {
    "text": "that as part of my build process you're saying you like insert an agent or something into your code so instead",
    "start": "1714080",
    "end": "1720559"
  },
  {
    "text": "of running instead of having that been applied to a running pod um use those The Sims script to apply",
    "start": "1720559",
    "end": "1727159"
  },
  {
    "text": "during my build pipeline so that those are injected you know into the binary",
    "start": "1727159",
    "end": "1732320"
  },
  {
    "text": "itself before I run it I've we've never done a like toe for toe comparison between the two",
    "start": "1732320",
    "end": "1739039"
  },
  {
    "text": "um as far as I'm aware um but I imagine you can continually optimize say the bytecode injection and",
    "start": "1739039",
    "end": "1745279"
  },
  {
    "text": "stuff like that but the same way you can continually optimize the ebpf injection",
    "start": "1745279",
    "end": "1750320"
  },
  {
    "text": "um but at the end of the day you're kind of doing the same operation so I imagine that the performance is comparable right",
    "start": "1750320",
    "end": "1757520"
  },
  {
    "text": "so I don't have the great answers to that unfortunately that's good so um",
    "start": "1757520",
    "end": "1762559"
  },
  {
    "text": "just to be clear then you are doing that process once only you're not doing that continuously or not reapplying or",
    "start": "1762559",
    "end": "1770000"
  },
  {
    "text": "applying the same waving to the byte code continuously right I mean when you",
    "start": "1770000",
    "end": "1776000"
  },
  {
    "text": "click run it does only once and oh yeah it it deploys only once and then it's",
    "start": "1776000",
    "end": "1781100"
  },
  {
    "text": "kept around for the TTL that you specify down here yeah yeah uh and then he does another",
    "start": "1781100",
    "end": "1788299"
  },
  {
    "text": "um another processing of the Pod or the binary to remove the the the probes yeah",
    "start": "1788299",
    "end": "1793960"
  },
  {
    "text": "it uh we are like manager service you can call it that um we'll go and uh remove the the",
    "start": "1793960",
    "end": "1801740"
  },
  {
    "text": "approach that's running okay",
    "start": "1801740",
    "end": "1805360"
  },
  {
    "text": "I think it's done all right thank you all again uh thanks for the great questions",
    "start": "1811760",
    "end": "1817240"
  }
]