[
  {
    "text": "okay we're going to go ahead and get started thanks for being here uh this session is called demystifying service",
    "start": "719",
    "end": "7279"
  },
  {
    "text": "mesh separating hype from reality I'm not sure it's really even that mystical",
    "start": "7279",
    "end": "12320"
  },
  {
    "text": "uh chat GPT just does a really good job at inventing uh catchy titles uh in fact",
    "start": "12320",
    "end": "17960"
  },
  {
    "text": "there's quite a few other demystifying sessions even a few at this exact time slot so apparently that's a catchy term",
    "start": "17960",
    "end": "25359"
  },
  {
    "text": "to use uh so we'll get started with the introductions my name is Brian Redman I'm a product manager on the AKs team at",
    "start": "25359",
    "end": "32000"
  },
  {
    "text": "Azure I've been at Microsoft for 23 uh Blissful years uh and I've worked with",
    "start": "32000",
    "end": "37840"
  },
  {
    "text": "AKs since the early days of it I'm a huge fan of it and proud to be uh working on the team with Ally yeah my",
    "start": "37840",
    "end": "44120"
  },
  {
    "text": "name is Ally Ford and I'm a product manager as well with AKs um I've been on the team for two years about um so not",
    "start": "44120",
    "end": "50440"
  },
  {
    "text": "as long but uh definitely have enjoyed my time there um so today we're going to be talking about what is a service mesh",
    "start": "50440",
    "end": "56680"
  },
  {
    "text": "we're going to look at some different service mesh technology options as well as deep dive into some of the",
    "start": "56680",
    "end": "62160"
  },
  {
    "text": "service mesh features um Brian's going to do some demos there which you guys will really like and then we'll have",
    "start": "62160",
    "end": "67600"
  },
  {
    "text": "some time for questions at the end one quick thing I would add too remember this is the novice track and so",
    "start": "67600",
    "end": "74400"
  },
  {
    "text": "we're g to focus on this from from very much a beginner so if you're an expert with service mesh no problem you",
    "start": "74400",
    "end": "79720"
  },
  {
    "text": "hopefully you still learn something but this is definitely focused on I don't know what this is and I want to learn everything that I can",
    "start": "79720",
    "end": "86840"
  },
  {
    "text": "so all right so going from uh the basics what is a service mesh so a service mesh",
    "start": "86840",
    "end": "92680"
  },
  {
    "text": "is essentially a dedicated infrastructure layer for facilitating service to service communication between",
    "start": "92680",
    "end": "98439"
  },
  {
    "text": "services or microservices using a proxy we're going to see an architecture later where you'll be able to see all that um",
    "start": "98439",
    "end": "104479"
  },
  {
    "text": "but really we want to focus on the service to service part so that service to service communication is essentially",
    "start": "104479",
    "end": "110119"
  },
  {
    "text": "what makes a distributed application possible um routing that communication both within and across application",
    "start": "110119",
    "end": "116439"
  },
  {
    "text": "clusters becomes increasingly complex as you have more and more microservices or services and you can add a service mesh",
    "start": "116439",
    "end": "123159"
  },
  {
    "text": "to your application to add capabilities for security observability and traffic management um those are kind of the",
    "start": "123159",
    "end": "128720"
  },
  {
    "text": "three pillars that we'll see later and um all of that without having to add anything uh to your application",
    "start": "128720",
    "end": "136640"
  },
  {
    "text": "code and that part is really important because that's essentially how people did it before we had service meshes so",
    "start": "137319",
    "end": "142920"
  },
  {
    "text": "before service meshes we had to uh embed all the logic for common red Ty operations in the application code",
    "start": "142920",
    "end": "150360"
  },
  {
    "text": "um with all of that and then having to do it in multiple uh programming languages uh increasing micro or",
    "start": "150360",
    "end": "157640"
  },
  {
    "text": "increasing uh microservices uh as you go um essentially this process was entirely",
    "start": "157640",
    "end": "163800"
  },
  {
    "text": "uh too time consuming really difficult and overall had a lot of limitations as well so with uh service mesh we have a",
    "start": "163800",
    "end": "170519"
  },
  {
    "text": "single framework for dealing with the traffic across those micro services and we can do it outside of the application",
    "start": "170519",
    "end": "178760"
  },
  {
    "text": "code like I mentioned we have those three pillars here so Service uh security",
    "start": "178760",
    "end": "185480"
  },
  {
    "text": "observability and then traffic management when we're looking at uh security this can be like encryption",
    "start": "185480",
    "end": "191519"
  },
  {
    "text": "protocols there's uh authentication authorization things like who can access",
    "start": "191519",
    "end": "196879"
  },
  {
    "text": "and then uh which Services can talk to each other um so those are different Security Options there's also uh",
    "start": "196879",
    "end": "203519"
  },
  {
    "text": "observability which is essentially you can um gain uh insights into how the traffic is flowing and and then traffic",
    "start": "203519",
    "end": "210519"
  },
  {
    "text": "management which is actually controlling the traffic um and there's options like traffic limits shifting traffic",
    "start": "210519",
    "end": "216040"
  },
  {
    "text": "mirroring traffic things like that we'll dive deeper into some different features in all these areas in a little bit um",
    "start": "216040",
    "end": "222439"
  },
  {
    "text": "but that's kind of the overall landscape of the value that service mesh",
    "start": "222439",
    "end": "227840"
  },
  {
    "text": "offers uh like I mentioned we're going to take a look at the architecture here um so this is an example service mesh",
    "start": "228680",
    "end": "235159"
  },
  {
    "text": "architecture we have the two Services service a and service B and you can see the green area there is the mesh traffic",
    "start": "235159",
    "end": "243159"
  },
  {
    "text": "um and the flow of traffic you can see it's going through the proxies um to the services so the services aren't directly",
    "start": "243159",
    "end": "249239"
  },
  {
    "text": "connected it's through those proxies um the data plane is at the uh pod level",
    "start": "249239",
    "end": "254360"
  },
  {
    "text": "that we have there um and then we have the control plane at the bottom um at the cluster level which includes stod um",
    "start": "254360",
    "end": "261519"
  },
  {
    "text": "in this case it's the sto service mesh which is one of the technology options that you can choose from um and uh",
    "start": "261519",
    "end": "268280"
  },
  {
    "text": "Brian's going to take a deeper dive into some of the other options that we do have as well okay awesome yeah so the some of",
    "start": "268280",
    "end": "276360"
  },
  {
    "text": "the choices that you can make there's kind of I would say three most commonly uh chosen sort of platforms we hear a",
    "start": "276360",
    "end": "282280"
  },
  {
    "text": "lot about ISO um probably one of the kind of the the early Solutions in this",
    "start": "282280",
    "end": "287680"
  },
  {
    "text": "Linker D is one of my favorites uh the buoyant uh company actually uh kind of",
    "start": "287680",
    "end": "292880"
  },
  {
    "text": "maintains that uh that's another technology option as well as Hashi Corp has console connect in general those",
    "start": "292880",
    "end": "300039"
  },
  {
    "text": "three typically have mostly the same kinds of features obviously they have a lot of different things that they all do",
    "start": "300039",
    "end": "306240"
  },
  {
    "text": "um but if you're just kind of getting new to this they probably all have the core sets of features that that Ali",
    "start": "306240",
    "end": "311280"
  },
  {
    "text": "described um some of the other Technologies like Kong mesh might have started as an API Gateway and then uh",
    "start": "311280",
    "end": "318240"
  },
  {
    "text": "became a little bit more like a service mesh people layered in kind of different uh components of this to have service",
    "start": "318240",
    "end": "323400"
  },
  {
    "text": "mesh technology all of these are fairly popular companies choose these for various different reasons my advice",
    "start": "323400",
    "end": "330000"
  },
  {
    "text": "would be look closely at their requirements don't just use the one you hear the most about look into how how",
    "start": "330000",
    "end": "335120"
  },
  {
    "text": "what they actually are offering and how it fits well with what you're doing because in many cases you'll see all the different things we can do with this you",
    "start": "335120",
    "end": "341080"
  },
  {
    "text": "may only use a fraction of that and you don't want to kind of go too far into using something that you're not going to",
    "start": "341080",
    "end": "346440"
  },
  {
    "text": "really take advantage of so let's Deep dive into some of these features that we're talking about um",
    "start": "346440",
    "end": "353039"
  },
  {
    "text": "when I'm doing uh some demos around some of these I'm going to use this demo application so it's just a simple pet",
    "start": "353039",
    "end": "358680"
  },
  {
    "text": "store with a series of microservices you see there's an order service there we're going to do some interesting analysis",
    "start": "358680",
    "end": "365639"
  },
  {
    "text": "there traffic shifting and observability around it so this is actually out on GitHub you can grab this sample and run",
    "start": "365639",
    "end": "372039"
  },
  {
    "text": "it it's just pure kubernetes runs on any kind of environment so think about this diagram kind of as we go we're going to",
    "start": "372039",
    "end": "378520"
  },
  {
    "text": "mesh it uh live and do all that kind of stuff uh with that application so the",
    "start": "378520",
    "end": "384000"
  },
  {
    "text": "first thing you got to got to think about when you're installing service smesh you install that that control plane that Ally described and then I",
    "start": "384000",
    "end": "389960"
  },
  {
    "text": "actually need to mesh my actual application I need to install these side cars that sit alongside every uh every",
    "start": "389960",
    "end": "396520"
  },
  {
    "text": "service in my application and there's a few ways to do that uh I can manually do it of course they typically you're going",
    "start": "396520",
    "end": "402360"
  },
  {
    "text": "to have a CLI tool that allows you to manually mesh the application more likely you're going to see uh labeling",
    "start": "402360",
    "end": "409759"
  },
  {
    "text": "uh the name space or some of the components of it and having some sort of Auto injection capability so that as you",
    "start": "409759",
    "end": "415680"
  },
  {
    "text": "start installing things even future changes to it they're always going to get m and have that side car there for",
    "start": "415680",
    "end": "421160"
  },
  {
    "text": "the application so that's typically recommended in what most companies do um you can configure that side car so",
    "start": "421160",
    "end": "428400"
  },
  {
    "text": "obviously when you first install one of these you just label the namespace and it gets injected well maybe you want to lower the memory and CPU resources or",
    "start": "428400",
    "end": "435960"
  },
  {
    "text": "any other kind of configuration options that are exposed typically you can configure that and that's something to",
    "start": "435960",
    "end": "441639"
  },
  {
    "text": "important to look into in case you want to really control uh more than kind of the defaults and I think that's always",
    "start": "441639",
    "end": "447360"
  },
  {
    "text": "important uh to do that kind of thing um it's also important to think about strategy when you upgrade uh the",
    "start": "447360",
    "end": "454440"
  },
  {
    "text": "components in the cluster you're obviously upgrading things like kubernetes over time you're going to upgrade your service smash control plane",
    "start": "454440",
    "end": "461039"
  },
  {
    "text": "and then you're going to have to upgrade uh the proxy or the sidecar um these different Service smesh Solutions allow",
    "start": "461039",
    "end": "467400"
  },
  {
    "text": "you to do that in different ways you know maybe I want to upgrade particular name spaces in a controlled way and",
    "start": "467400",
    "end": "472479"
  },
  {
    "text": "actually decide when they get upgraded and so that can actually be done and you'll see that when I kind of do this",
    "start": "472479",
    "end": "477919"
  },
  {
    "text": "demo next all right so what we're going to do is we're going to uh just do one of these",
    "start": "477919",
    "end": "486280"
  },
  {
    "text": "Auto injections but I want to show you kind of a few things about about how this is done so I have I have a",
    "start": "486280",
    "end": "492560"
  },
  {
    "text": "kubernetes cluster here I have service mesh already installed so in this case I used ISO and you can see I I just did a",
    "start": "492560",
    "end": "499919"
  },
  {
    "text": "look at the the iso system namespace and I have two pods running in it this is the control plane in the io case almost",
    "start": "499919",
    "end": "506599"
  },
  {
    "text": "everything is just in this ISO pod uh doing all the work for me it does the auto injection uh it does the distri",
    "start": "506599",
    "end": "513919"
  },
  {
    "text": "distribution of rules and things like that to the sidecar um so I have two of them just for redundancy sake um but if",
    "start": "513919",
    "end": "520919"
  },
  {
    "text": "I was going to manually install uh I actually can run this inject and you can see I just pointed at a deployment and",
    "start": "520919",
    "end": "526880"
  },
  {
    "text": "it'll actually output the deployment that will install the side car this could be handy if you just kind of want",
    "start": "526880",
    "end": "532680"
  },
  {
    "text": "to experiment a little bit um but again not typically how it would be installed in more of a production scenario so the",
    "start": "532680",
    "end": "540600"
  },
  {
    "text": "other thing we can do of course is auto injection and this is actually done with web hooks so kubernetes supports",
    "start": "540600",
    "end": "545839"
  },
  {
    "text": "something called uh mutating web hook configuration it just rolls off the",
    "start": "545839",
    "end": "551040"
  },
  {
    "text": "tongue doesn't it um but what you can do there is have sort of match expressions",
    "start": "551040",
    "end": "556320"
  },
  {
    "text": "and if kubernetes sees these particular things and what you're deploying it will actually go and call in this case the",
    "start": "556320",
    "end": "562720"
  },
  {
    "text": "inject command on the stop pod and it's looking for particular labels I've",
    "start": "562720",
    "end": "567800"
  },
  {
    "text": "highlighted here this is a revision label or an sto injection label and actually in this case is looking for two",
    "start": "567800",
    "end": "573640"
  },
  {
    "text": "different labels uh and it'll actually if labeled properly call that inject command and everything gets injected and",
    "start": "573640",
    "end": "580399"
  },
  {
    "text": "this is what it actually looks like uh so I'll add a namespace here and then I'll just label it just like I mentioned",
    "start": "580399",
    "end": "587800"
  },
  {
    "text": "um and then we'll take a look at what that label looks",
    "start": "587800",
    "end": "592000"
  },
  {
    "text": "like so again this is where I'm talking about the upgrades it's not just enabled or disabled I've actually labeled it",
    "start": "594360",
    "end": "600640"
  },
  {
    "text": "with a particular version and this allows me to actually ensure that I have some level of control over that and so",
    "start": "600640",
    "end": "606519"
  },
  {
    "text": "now that we have a namespace and it's labeled we're just going to install our app I just have everything in one big yaml file we run a deploy of a bunch of",
    "start": "606519",
    "end": "613640"
  },
  {
    "text": "deployments and services and when we take a look at the cluster we now have a mesh and so you can see the zero out of",
    "start": "613640",
    "end": "620360"
  },
  {
    "text": "two containers in each pod that's because I have my my particular",
    "start": "620360",
    "end": "625560"
  },
  {
    "text": "container and the side car there and just to kind of show you what this looks like we're going to do a describe on one",
    "start": "625560",
    "end": "631040"
  },
  {
    "text": "of these pods and just kind of show you where all this uh is in the in the Pod configuration so we'll take a look at",
    "start": "631040",
    "end": "637600"
  },
  {
    "text": "the order Service uh and the list of containers that are in it um and you can see when we go up we see containers the",
    "start": "637600",
    "end": "644079"
  },
  {
    "text": "first container is the order service this is my code and my application you could see typical version one of this",
    "start": "644079",
    "end": "650920"
  },
  {
    "text": "particular application but I scroll down now is when I see that second container in my pot and this is the actual sto",
    "start": "650920",
    "end": "657600"
  },
  {
    "text": "proxy it's the other half uh the service mesh that's running on every pod uh in the application all",
    "start": "657600",
    "end": "664320"
  },
  {
    "text": "right and when we actually go and take a look at my pods now we can see everything's running we got two out of two ready everything is working we",
    "start": "664320",
    "end": "671120"
  },
  {
    "text": "should just go test our app and so I'll just port forward to the front end the website front end of this uh port 8080",
    "start": "671120",
    "end": "678880"
  },
  {
    "text": "and then we'll actually just make sure it works it's a recorded demo we know it's going to work I would have",
    "start": "678880",
    "end": "684839"
  },
  {
    "text": "re-recorded I don't really like doing recorded demos but it feels right in this case so um but this is just a",
    "start": "684839",
    "end": "692240"
  },
  {
    "text": "simplistic little pet store we'll add a couple of their items to our cart go check out uh and it will end up working",
    "start": "692240",
    "end": "699440"
  },
  {
    "text": "as I said all right the next piece that I want to talk",
    "start": "699440",
    "end": "706600"
  },
  {
    "text": "about as service mesh features is ingress and ESS not necessarily always a part of a service mesh solution but if",
    "start": "706600",
    "end": "713360"
  },
  {
    "text": "we're going to be routing traffic in and out of the cluster to our application we're going to want to use something like Ingress we have a lot of choices",
    "start": "713360",
    "end": "719839"
  },
  {
    "text": "there as well but if I'm using a service mesh and it offers an Ingress controller it might be a great thing to take",
    "start": "719839",
    "end": "725360"
  },
  {
    "text": "advantage of because it ends up also being a part of the mesh and can provide uh observability metrics and things like",
    "start": "725360",
    "end": "731600"
  },
  {
    "text": "that and use the same routing rule configuration that I'm using within the cluster and so ISO offers an Ingress",
    "start": "731600",
    "end": "737880"
  },
  {
    "text": "Gateway um it actually offers both an internal and an external one and can also help with egis traffic typically",
    "start": "737880",
    "end": "745040"
  },
  {
    "text": "these things sit behind a load balancer regardless of where where you're running it and let's take a look at that",
    "start": "745040",
    "end": "750560"
  },
  {
    "text": "configuration here so if we take a look at my my",
    "start": "750560",
    "end": "756240"
  },
  {
    "text": "application I have a set of PODS and services nothing's exposed to the Internet so no no public IPS for any of",
    "start": "756240",
    "end": "761959"
  },
  {
    "text": "these Services we're basically going to take this storefront uh and go and expose that to the internet just to see",
    "start": "761959",
    "end": "768959"
  },
  {
    "text": "you can see these the the the um gateways at the top there those are the sto components that are actually acting",
    "start": "768959",
    "end": "775240"
  },
  {
    "text": "as that Gateway and you can see I have a public IP uh for that external Gateway",
    "start": "775240",
    "end": "781079"
  },
  {
    "text": "and if we take a look at my DNS setup I have my own I just used my own DNS here and mapped it to that uh that IP address",
    "start": "781079",
    "end": "788760"
  },
  {
    "text": "if we go to that name the traffic will end up on that that Ingress Gateway now we haven't configured the Gateway and so",
    "start": "788760",
    "end": "795240"
  },
  {
    "text": "if we hit it right now it wouldn't really do anything so we'll jump over to vs code and take a look at this Ingress",
    "start": "795240",
    "end": "800800"
  },
  {
    "text": "configuration and the typical default kubernetes Engish configuration looks a little different in the in the iso case",
    "start": "800800",
    "end": "807839"
  },
  {
    "text": "you use a combination of a Gateway and a virtual service so you can see in this case the Gateway actually Maps my host",
    "start": "807839",
    "end": "814320"
  },
  {
    "text": "name and what Cort it's running on uh and and configures that part of the the equation and then the virtual service",
    "start": "814320",
    "end": "820760"
  },
  {
    "text": "handles matching what routing rules are being used uh and Maps it to the actual",
    "start": "820760",
    "end": "825880"
  },
  {
    "text": "storefront pod so that it knows hey if I see this URL prefix uh I'll map that to",
    "start": "825880",
    "end": "831320"
  },
  {
    "text": "this particular pod and then you can see it knows about the Gateway and the two are are connected together in that",
    "start": "831320",
    "end": "836759"
  },
  {
    "text": "fashion so if we apply this camel file we should end up having a working uh a",
    "start": "836759",
    "end": "842040"
  },
  {
    "text": "working application with a real DNS name and again spoiler alert it works uh",
    "start": "842040",
    "end": "848880"
  },
  {
    "text": "not shocking so uh I create those two uh two pieces we go to the browser uh and",
    "start": "848880",
    "end": "854480"
  },
  {
    "text": "hit the same website you'll notice as well that it's not secure up in the top left you can kind of see there's no SSL",
    "start": "854480",
    "end": "861120"
  },
  {
    "text": "that's easily configured I just did kind of the simplistic scenario here but it's easy to add certificates uh and have the",
    "start": "861120",
    "end": "867160"
  },
  {
    "text": "SSL part of this in place",
    "start": "867160",
    "end": "870680"
  },
  {
    "text": "the next piece of this is service to service encryption in my opinion this is probably the most common reason",
    "start": "874320",
    "end": "879800"
  },
  {
    "text": "companies turn to service mesh is they want to be able to encrypt traffic encrypt traffic within the cluster it's",
    "start": "879800",
    "end": "886199"
  },
  {
    "text": "often a uh compliance requirement or something like that um and that's something you can can obviously do and",
    "start": "886199",
    "end": "892279"
  },
  {
    "text": "like Ali mentioned you're sharing a bunch of configuration files and end up in a difficult scenario the service mesh",
    "start": "892279",
    "end": "897880"
  },
  {
    "text": "you just get it fore free um that's a pretty powerful thing it's important to note this isn't the magic uh security",
    "start": "897880",
    "end": "904360"
  },
  {
    "text": "solution to take care of everything if we hack into your cluster and we get cluster admin rights on it I pretty much",
    "start": "904360",
    "end": "911040"
  },
  {
    "text": "have access to everything I need to decrypt the traffic and so you think about security and and compliance we",
    "start": "911040",
    "end": "916600"
  },
  {
    "text": "it's a defense in depth type strategy it's one part of an of a strategy for",
    "start": "916600",
    "end": "921759"
  },
  {
    "text": "security and not all parts of it that's something important to remember um obviously when it goes outside of the",
    "start": "921759",
    "end": "928079"
  },
  {
    "text": "mesh everything is done in plain text and so if you're communicating there you got to use something else SSL TLS",
    "start": "928079",
    "end": "933920"
  },
  {
    "text": "whatever it may be uh to make sure that that traffic is also encrypted um the demo for this one is",
    "start": "933920",
    "end": "940880"
  },
  {
    "text": "Allie's going to go over to her computer over here and she's going to hack into the cluster and put a sniffer on it and",
    "start": "940880",
    "end": "945920"
  },
  {
    "text": "see if she can unencrypt the traffic um no we're not going to do that uh you",
    "start": "945920",
    "end": "951120"
  },
  {
    "text": "just got to trust that it works and it does um it would be fun sorry um the",
    "start": "951120",
    "end": "959240"
  },
  {
    "text": "next biggest reason you might turn to service mesh is around observability there's obviously all kinds of different",
    "start": "959240",
    "end": "964360"
  },
  {
    "text": "monitoring tools up up in the uh XO upstairs there's a large number of companies with Tools around monitoring",
    "start": "964360",
    "end": "970880"
  },
  {
    "text": "and observability service mesh digs deeper into the solution and allows me to see a lot of details about servico",
    "start": "970880",
    "end": "977319"
  },
  {
    "text": "service communication I can know how my order service communicates with my product service but not just the service",
    "start": "977319",
    "end": "983759"
  },
  {
    "text": "even down to the API path I can say okay when it calls for products we actually",
    "start": "983759",
    "end": "989120"
  },
  {
    "text": "see latency versus when it maybe calls for the shopping cart you start to get a lot more insights into what's actually",
    "start": "989120",
    "end": "995519"
  },
  {
    "text": "happening in my application um I want to see things like you know uh bandwidth",
    "start": "995519",
    "end": "1000800"
  },
  {
    "text": "distributed tracing access logs we get all of this stuff just right out of the box with all of these Solutions and they",
    "start": "1000800",
    "end": "1007399"
  },
  {
    "text": "all typically work with a Prometheus type Solution that's pretty much everywhere is is what's going to be used",
    "start": "1007399",
    "end": "1013040"
  },
  {
    "text": "as the data store and then grafana sits in front of it for dashboards and I'll just show you kind kind of an example of",
    "start": "1013040",
    "end": "1019360"
  },
  {
    "text": "this as well what this typically looks like um this is a grafana dashboard this",
    "start": "1019360",
    "end": "1025520"
  },
  {
    "text": "is the iso workload dashboard so this just comes out of the box with sto we",
    "start": "1025520",
    "end": "1030558"
  },
  {
    "text": "get some basic information on how this services or this deployment or workload is performing uh from a latency",
    "start": "1030559",
    "end": "1037199"
  },
  {
    "text": "standpoint and I can get all the way down to picking pairs of services and see things like request per second",
    "start": "1037199",
    "end": "1043438"
  },
  {
    "text": "failure rates you can actually see on the left here there's something happened somewhere in the last few hours if I was",
    "start": "1043439",
    "end": "1049720"
  },
  {
    "text": "looking at this even if I don't know a whole lot about what this dashboard means looks like something happened a",
    "start": "1049720",
    "end": "1055160"
  },
  {
    "text": "few hours ago I actually ran a load test and pummeled this application with a very large amount of traffic to see what",
    "start": "1055160",
    "end": "1061799"
  },
  {
    "text": "would happen and it broke the application and we're going to actually see why um but this kind of dashboard",
    "start": "1061799",
    "end": "1067440"
  },
  {
    "text": "allows me to go in and take a look at things I'm actually in the service dashboard here and I've focused just on the iso service and I see a whole bunch",
    "start": "1067440",
    "end": "1074880"
  },
  {
    "text": "of 500 500 errors here that occurred during that so a whole bunch of failures occurred I didn't even get alerted so",
    "start": "1074880",
    "end": "1081960"
  },
  {
    "text": "I'm wondering kind of what's going on um and we actually can take one of these charts and expand it and take a a closer",
    "start": "1081960",
    "end": "1087840"
  },
  {
    "text": "look at what's going on so this is a little bit about response time for this particular application and this is",
    "start": "1087840",
    "end": "1093039"
  },
  {
    "text": "obviously the window where we saw the issue and this is where that load test ran we take a closer look we can see",
    "start": "1093039",
    "end": "1099720"
  },
  {
    "text": "that even the the best case scenario for our customers they got very poor response time and this is actually super",
    "start": "1099720",
    "end": "1106840"
  },
  {
    "text": "useful I can understand what's going on I might have seen an alert if I was just monitoring the kubernetes cluster I",
    "start": "1106840",
    "end": "1112000"
  },
  {
    "text": "might have seen CPU or memory or things like that but if I actually take a look at the workload in the cluster I'll see",
    "start": "1112000",
    "end": "1117919"
  },
  {
    "text": "that a bunch of the services had restarts a similar time ago a bunch of failures occurred there were memory",
    "start": "1117919",
    "end": "1124039"
  },
  {
    "text": "kills and all kinds of failures it was very fun um but what you might notice is",
    "start": "1124039",
    "end": "1130000"
  },
  {
    "text": "the rabbit mq component that the order service calls there's only one pot and",
    "start": "1130000",
    "end": "1135120"
  },
  {
    "text": "it doesn't really matter what I scaled out on the order service that rabbit mq pod with a very little bit of memory uh",
    "start": "1135120",
    "end": "1141640"
  },
  {
    "text": "ends up failing and falling apart and that's where I can actually go and now add things like Auto scaling and scale",
    "start": "1141640",
    "end": "1147520"
  },
  {
    "text": "that out to make sure that doesn't happen in the",
    "start": "1147520",
    "end": "1151320"
  },
  {
    "text": "future another thing we can do from observability standpoint is something called distributed tracing obviously",
    "start": "1155600",
    "end": "1161840"
  },
  {
    "text": "when you're calling you're working with this application you're calling a series of services and we're monitoring the",
    "start": "1161840",
    "end": "1166919"
  },
  {
    "text": "order service and the product service service and the traffic between them from a customer standpoint I just",
    "start": "1166919",
    "end": "1172120"
  },
  {
    "text": "checked out of my my uh my order on the shopping cart I went through a whole bunch of services and really what we",
    "start": "1172120",
    "end": "1178960"
  },
  {
    "text": "need to do is be able to track the customer experience through this distributed set of microservices and",
    "start": "1178960",
    "end": "1184480"
  },
  {
    "text": "that's what distributed tracing does for us and the service mesh takes care of the hard part in connecting all of those",
    "start": "1184480",
    "end": "1190679"
  },
  {
    "text": "calls into a single thing called a span and they're typically labeled by the service mesh and we go to these various",
    "start": "1190679",
    "end": "1197200"
  },
  {
    "text": "tools things like Z zkin um y uh Jagger and so forth and we can actually see",
    "start": "1197200",
    "end": "1203240"
  },
  {
    "text": "okay their experience was maybe 3 seconds but the bulk of it occurred in a",
    "start": "1203240",
    "end": "1208280"
  },
  {
    "text": "particular service and now we can dig deep and understand okay the customer experience was slow but it turned out it was just this one piece of that and it's",
    "start": "1208280",
    "end": "1215679"
  },
  {
    "text": "super helpful for troubleshooting and understanding what's happening uh in a cluster in an",
    "start": "1215679",
    "end": "1221600"
  },
  {
    "text": "environment so let's talk about traffic management um I really think it's really cool that we can do traffic management",
    "start": "1222679",
    "end": "1229000"
  },
  {
    "text": "with the service mesh it makes me think a little bit of uh being in a city and we've got stop lights stop signs oneway",
    "start": "1229000",
    "end": "1235840"
  },
  {
    "text": "streets all kinds of things that control traffic and if we just pop into that City and say okay for a while these",
    "start": "1235840",
    "end": "1241640"
  },
  {
    "text": "streets are going to reverse Direction uh it it might cause a problem just changing the sign and controlling",
    "start": "1241640",
    "end": "1247880"
  },
  {
    "text": "the traffic could actually lead to all kinds of issues so I bring this up because you really have to understand",
    "start": "1247880",
    "end": "1253080"
  },
  {
    "text": "what you're doing and ensure that these rules actually fit uh and can consistently be applied by a team of",
    "start": "1253080",
    "end": "1258919"
  },
  {
    "text": "people working on things um you're changing a bit of the behavior the default behavior of an environment and",
    "start": "1258919",
    "end": "1265039"
  },
  {
    "text": "so there's a lot of good places to use this and maybe some bad places to do it um certainly deployment strategies",
    "start": "1265039",
    "end": "1270919"
  },
  {
    "text": "things like good old you know blue green testing uh Canary testing I'll show you kind of an example of that here I can do",
    "start": "1270919",
    "end": "1277720"
  },
  {
    "text": "AB testing or traffic mirroring and I can actually collect all the transactions into a separate place and",
    "start": "1277720",
    "end": "1283760"
  },
  {
    "text": "do analysis kind of separately I can also do request time Ms",
    "start": "1283760",
    "end": "1289240"
  },
  {
    "text": "um and I can sort of gracefully handle situations where something's running a really long time you can again build",
    "start": "1289240",
    "end": "1295240"
  },
  {
    "text": "that into your code or you can just tell the service mesh when a timeout occurs take this action and collect in this",
    "start": "1295240",
    "end": "1301400"
  },
  {
    "text": "place uh circuit breaking you know the the the service mesh is really smart about load balancing and there's all",
    "start": "1301400",
    "end": "1307200"
  },
  {
    "text": "kinds of interesting things these Technologies can do um I essentially can say okay look I I know we're just",
    "start": "1307200",
    "end": "1312840"
  },
  {
    "text": "spreading traffic across these but this one isn't responding really well it's not responding at all let's actually",
    "start": "1312840",
    "end": "1318159"
  },
  {
    "text": "take it out of the mix temporarily I heard today up at the up at the uh Expo that uh Linker D is actually adding some",
    "start": "1318159",
    "end": "1326400"
  },
  {
    "text": "um cost efficiency to how it's doing routing between different components and if you're in say uh availability zones",
    "start": "1326400",
    "end": "1334080"
  },
  {
    "text": "it's actually going to understand that a little better and maybe not send traffic across the availability zone until it",
    "start": "1334080",
    "end": "1339760"
  },
  {
    "text": "has to uh which sounds super cool so all kinds of things like that that I can do",
    "start": "1339760",
    "end": "1344880"
  },
  {
    "text": "uh using service mesh let's take a look at what this EX it looks like this demo",
    "start": "1344880",
    "end": "1350120"
  },
  {
    "text": "is kind of fun so we take a look at the application you can see I actually have two versions of the order service in my",
    "start": "1350120",
    "end": "1356559"
  },
  {
    "text": "cluster um so just two different deployments uh slightly labeled differently and then I have a service",
    "start": "1356559",
    "end": "1362760"
  },
  {
    "text": "called order service that points to both of them and it just points to the order service label and we I'll go in to the",
    "start": "1362760",
    "end": "1369360"
  },
  {
    "text": "deployment here and show you kind of what it looks like um but I'm not using anything with with really ISO routing at",
    "start": "1369360",
    "end": "1374880"
  },
  {
    "text": "this point it's just standard kubernetes you can see each of these apps has a label for the app and the version and so",
    "start": "1374880",
    "end": "1382559"
  },
  {
    "text": "if I just point my service at the app one it's just going to randomly hit version one and version two all right if",
    "start": "1382559",
    "end": "1389240"
  },
  {
    "text": "we go in I'm going to go run a little test here in the bottom of my terminal window and I'm just going to Loop and",
    "start": "1389240",
    "end": "1394520"
  },
  {
    "text": "just curl the uh Health end point on this order service which actually returns uh the the version of the pot",
    "start": "1394520",
    "end": "1401520"
  },
  {
    "text": "and you'll see as soon as I do this it will just be version one version two and it's basically even spread but just",
    "start": "1401520",
    "end": "1408120"
  },
  {
    "text": "round Rin all right so what we want to do is actually go in and take advantage of the tra traffic shifting capability",
    "start": "1408120",
    "end": "1414960"
  },
  {
    "text": "in this case an ISO and I'll show you what that configuration looks like we'll pop over to vs code uh and take a",
    "start": "1414960",
    "end": "1422960"
  },
  {
    "text": "look so sto uses a couple different ways of doing this it uses that virtual Service uh thing that we talked about a",
    "start": "1424679",
    "end": "1431679"
  },
  {
    "text": "bit which I'll show you but the first thing you do is actually create what's called uh a uh destination rule this is",
    "start": "1431679",
    "end": "1438200"
  },
  {
    "text": "where I Define the subsets of traffic for my application and this might look a little redundant I've already labeled my",
    "start": "1438200",
    "end": "1444720"
  },
  {
    "text": "app V1 and now I've made a subset that points to that label um for this simple scenario I probably didn't need these",
    "start": "1444720",
    "end": "1450679"
  },
  {
    "text": "this type of thing but that's just that's how esto has implemented it but it does allow for much more complex",
    "start": "1450679",
    "end": "1456159"
  },
  {
    "text": "scenarios there's a good reason for this but in this scenario you might feel a bit redundant about it um but I'm going",
    "start": "1456159",
    "end": "1462320"
  },
  {
    "text": "to create a virtual service and notice that in my case here I'm going to say in the order service send everything to V1",
    "start": "1462320",
    "end": "1468039"
  },
  {
    "text": "and so my first example here is let's actually make sure everything's going to the version that we want and so we apply",
    "start": "1468039",
    "end": "1473799"
  },
  {
    "text": "both those uh configurations to the cluster we should see the traffic mix at the bottom be all V1 uh and again we",
    "start": "1473799",
    "end": "1481480"
  },
  {
    "text": "know that it will be uh so we've actually controlled the traffic and now we're using our tra our service mesh to",
    "start": "1481480",
    "end": "1487320"
  },
  {
    "text": "control the traffic let's actually go in and do a canary deployment in this case we're going to deploy a little bit of",
    "start": "1487320",
    "end": "1493039"
  },
  {
    "text": "the traffic say 20% over to version two and just add that rule to the cluster",
    "start": "1493039",
    "end": "1498360"
  },
  {
    "text": "and see what see if it actually does uh what we're hoping and so it's a slightly different",
    "start": "1498360",
    "end": "1503760"
  },
  {
    "text": "uh version of the same uh virtual service and notice now we're referencing both subsets and we're saying hey send",
    "start": "1503760",
    "end": "1510240"
  },
  {
    "text": "80% of the traffic to V1 20% to V2 um and so when we appli this we should",
    "start": "1510240",
    "end": "1516480"
  },
  {
    "text": "actually see immediately fairly immediately the the the traffic shift uh",
    "start": "1516480",
    "end": "1522200"
  },
  {
    "text": "a little bit over to version two since we've been just hitting version one and you'll see that kind of start there at",
    "start": "1522200",
    "end": "1527399"
  },
  {
    "text": "the bottom obviously from here if I was doing a canary deploy I might go 30% 40% and",
    "start": "1527399",
    "end": "1535279"
  },
  {
    "text": "eventually completely shift it backwards and I'll just switch it to be backwards and B 2080 and then when I apply that",
    "start": "1535279",
    "end": "1542559"
  },
  {
    "text": "obviously it'll all start switching essentially mostly over to V2 now this might be you you look at",
    "start": "1542559",
    "end": "1550919"
  },
  {
    "text": "this you might think okay am I just manually applying these things how am I delivering all these different configurations for how I'm shifting",
    "start": "1550919",
    "end": "1556960"
  },
  {
    "text": "traffic if I was was doing a canary deploy unlikely I would be sitting there applying it and going to look at my",
    "start": "1556960",
    "end": "1562640"
  },
  {
    "text": "grafana dashboard and then applying it again maybe someone would do it but probably not the ideal",
    "start": "1562640",
    "end": "1570120"
  },
  {
    "text": "way so this is a very cool technology something that you can learn about here uh here at the conference uh called",
    "start": "1570799",
    "end": "1577279"
  },
  {
    "text": "Flagger and Flagger essentially does that that I just described but does it in an intelligent automated way so in",
    "start": "1577279",
    "end": "1583679"
  },
  {
    "text": "this case I tell Flagger hey these are my services that I want to deploy drop basically a crd called Canary I",
    "start": "1583679",
    "end": "1591279"
  },
  {
    "text": "configure it with things like here's my Prometheus instance where you can look at metrics here's the metric you should",
    "start": "1591279",
    "end": "1596799"
  },
  {
    "text": "look look at here's how aggressive I want my canary roll out to be maybe I want it to sit there uh and run for days",
    "start": "1596799",
    "end": "1604320"
  },
  {
    "text": "or hours at a time before you roll to the next one and be real slow about it or maybe I want to be aggressive",
    "start": "1604320",
    "end": "1609919"
  },
  {
    "text": "basically that Canary uh resource and Flagger lets me control all of that you you drop that configuration into the",
    "start": "1609919",
    "end": "1616039"
  },
  {
    "text": "cluster probably via a cicd pipeline get Ops whatever technology of choice and",
    "start": "1616039",
    "end": "1622039"
  },
  {
    "text": "then Flagger will kick and start to do that deployment for me and progress through it uh we're not doing a demo of",
    "start": "1622039",
    "end": "1627840"
  },
  {
    "text": "this uh I've done it before actually at a previous cucon uh it works very well uh it works basically with the majority",
    "start": "1627840",
    "end": "1634200"
  },
  {
    "text": "of the service mesh Solutions we saw earlier uh been around for a bit and uh is pretty cool for for doing this kind",
    "start": "1634200",
    "end": "1640679"
  },
  {
    "text": "of deployment I don't know where we're at",
    "start": "1640679",
    "end": "1646360"
  },
  {
    "text": "on timing because my clock there is a a little less than 10 um so going to",
    "start": "1646360",
    "end": "1652960"
  },
  {
    "text": "the summary kind of some things that we wanted you guys to take away from this uh so first obviously the definition of",
    "start": "1652960",
    "end": "1658559"
  },
  {
    "text": "service mesh we went way deeper than just that but um it does make distributed systems Easier by fa",
    "start": "1658559",
    "end": "1664600"
  },
  {
    "text": "facilitating that service to service communication um there's a wide range of options that you can choose from in this",
    "start": "1664600",
    "end": "1671360"
  },
  {
    "text": "case we used ISO um but there's a lot of different options that you can pick from uh focus on your requirements so make",
    "start": "1671360",
    "end": "1677559"
  },
  {
    "text": "make sure that you understand how complicated you want your service mesh to be um and you can kind of go from",
    "start": "1677559",
    "end": "1683360"
  },
  {
    "text": "there uh when deciding uh use carefully Brian had a lot of warnings in there but",
    "start": "1683360",
    "end": "1689320"
  },
  {
    "text": "uh basically like if you're you know setting up your security that's not all the security you need if you're doing uh",
    "start": "1689320",
    "end": "1695159"
  },
  {
    "text": "traffic uh management um you need to make sure that if you're changing things that you know the impact of that um",
    "start": "1695159",
    "end": "1701080"
  },
  {
    "text": "service meshes are pretty complicated so if you are making large changes then um",
    "start": "1701080",
    "end": "1706120"
  },
  {
    "text": "you can break your application as well so just be careful um when you're making changes and setting up your service mesh",
    "start": "1706120",
    "end": "1713559"
  },
  {
    "text": "um and lastly we talked about Flagger but there's also other um interesting new technology um one example is sidecar",
    "start": "1713559",
    "end": "1721240"
  },
  {
    "text": "list so the example we showed a sidecar today but um there's also sidecar list options um one example is ISO ambient um",
    "start": "1721240",
    "end": "1729039"
  },
  {
    "text": "but that's just something to keep an eye out in the world of service",
    "start": "1729039",
    "end": "1733760"
  },
  {
    "text": "mesh awesome yeah so we definitely have time for questions and we just ask you to go up to the microphone if you do",
    "start": "1734279",
    "end": "1740760"
  },
  {
    "text": "have a question um happy to take a few",
    "start": "1740760",
    "end": "1745919"
  },
  {
    "text": "[Applause]",
    "start": "1747230",
    "end": "1750499"
  },
  {
    "text": "though um thank you um all of this looks really cool and I see you making these",
    "start": "1752880",
    "end": "1758440"
  },
  {
    "text": "wonderful runtime changes I work for a bank I can't possibly imagine that working in production is all of this for",
    "start": "1758440",
    "end": "1765080"
  },
  {
    "text": "lower environments or do people really do that live broad systems how does that all work I mean it's a good question",
    "start": "1765080",
    "end": "1772120"
  },
  {
    "text": "honestly like I I think that um yes companies definitely are um but it's the",
    "start": "1772120",
    "end": "1777200"
  },
  {
    "text": "kind of thing again we say be careful for a good reason because you you you do have to understand kind of the",
    "start": "1777200",
    "end": "1782600"
  },
  {
    "text": "implication of it like you can break the service mesh and thus break your application uh typically companies have",
    "start": "1782600",
    "end": "1788760"
  },
  {
    "text": "to certify these things at a bank you'd have to make sure that it meets all the requirements of the bank I definitely",
    "start": "1788760",
    "end": "1794640"
  },
  {
    "text": "work with financial institutions that use this kind of technology but again I still consider it an advanced topic and",
    "start": "1794640",
    "end": "1800880"
  },
  {
    "text": "and I think this room kind of proves that it is this is the really a beginner session on service mesh a lot of people",
    "start": "1800880",
    "end": "1807360"
  },
  {
    "text": "are here as much as it's been around for a while it also is still fairly new to a lot of",
    "start": "1807360",
    "end": "1813720"
  },
  {
    "text": "people excellent presentation thank you um two quick questions does service mesh",
    "start": "1813720",
    "end": "1819399"
  },
  {
    "text": "work across multiple uh clusters that's a great question yeah it",
    "start": "1819399",
    "end": "1825600"
  },
  {
    "text": "does dep it does depend on the technolog all they're all doing something in this space all of them have kind of",
    "start": "1825600",
    "end": "1831200"
  },
  {
    "text": "multicluster mesh Solutions um still somewhat fairly new but but absolutely",
    "start": "1831200",
    "end": "1836720"
  },
  {
    "text": "in fact you there's a lot you can do to kind of either mesh traffic just share the mesh configuration across them like",
    "start": "1836720",
    "end": "1843000"
  },
  {
    "text": "some of those traffic shifting rules that can understand what's going on in the other cluster uh collect",
    "start": "1843000",
    "end": "1848600"
  },
  {
    "text": "observability to data together and things like that so yeah there's absolutely a ton of that and they all do it a little bit differently of course",
    "start": "1848600",
    "end": "1855639"
  },
  {
    "text": "okay and can you do traffic shaping across multiple clusters for instance least uh least outstanding request",
    "start": "1855639",
    "end": "1862519"
  },
  {
    "text": "connections across clusters I'm not sure honestly I I I bet",
    "start": "1862519",
    "end": "1868360"
  },
  {
    "text": "you can I don't know if you you know everything but um I I suspect you can but it may again depend on you know ISO",
    "start": "1868360",
    "end": "1875480"
  },
  {
    "text": "might offer it in a very similar way but they might not have done traffic shifting so it's something to to",
    "start": "1875480",
    "end": "1880919"
  },
  {
    "text": "investigate but I don't necessarily know yeah interesting question I'm uh wondering about what",
    "start": "1880919",
    "end": "1888240"
  },
  {
    "text": "ends up leaking into your actual application conf fig as a result of",
    "start": "1888240",
    "end": "1893600"
  },
  {
    "text": "using the service me you obviously have some dependencies that are I guess",
    "start": "1893600",
    "end": "1900240"
  },
  {
    "text": "implicitly encoded in either code or configuration right in your app and so now you insert service mesh and uh how",
    "start": "1900240",
    "end": "1908720"
  },
  {
    "text": "does that change my apps U engagement as as it tries to reach its",
    "start": "1908720",
    "end": "1916159"
  },
  {
    "text": "dependency yeah do you want to I mean go for it yeah I I mean there's the beauty of it is that we don't impact the",
    "start": "1916159",
    "end": "1922559"
  },
  {
    "text": "developer that they the developer is just going to push their code and a and a container is going to be created and",
    "start": "1922559",
    "end": "1928080"
  },
  {
    "text": "then when it shows up in the cluster and it's meshed we don't necessarily have the developer doesn't have to know anything about it there's definitely no",
    "start": "1928080",
    "end": "1934480"
  },
  {
    "text": "dependencies within the the code or even the container it does affect the the yaml configuration of course but again",
    "start": "1934480",
    "end": "1941960"
  },
  {
    "text": "we're using that auto injection I mean that person doesn't even need to know in the Manifest that we're creating",
    "start": "1941960",
    "end": "1948120"
  },
  {
    "text": "um there there possibly are some things that that you know are non-native kind of kubernetes things that someone could",
    "start": "1948120",
    "end": "1953679"
  },
  {
    "text": "do that might get broken by something like this but that's kind of the beauty of it I you know I get I can turn on TLS",
    "start": "1953679",
    "end": "1960240"
  },
  {
    "text": "in a cluster and I don't even need to tell the development team that we're doing it as an Sr I can I can start to",
    "start": "1960240",
    "end": "1965440"
  },
  {
    "text": "do all this if you get a little crazy with traffic shifting and traffic rules you probably could affect the",
    "start": "1965440",
    "end": "1971639"
  },
  {
    "text": "architecture of the app and thus the developer would be greatly affected but yeah that's kind of the beauty of it and",
    "start": "1971639",
    "end": "1977679"
  },
  {
    "text": "just using a kubernetes service address for instance either Nam spaced or within the",
    "start": "1977679",
    "end": "1984000"
  },
  {
    "text": "same name space that will be implicitly routed uh via the the the mesh and the",
    "start": "1984000",
    "end": "1991480"
  },
  {
    "text": "injected proxies yeah absolutely again when you start adding virtual Services is where you're essentially overriding",
    "start": "1991480",
    "end": "1997679"
  },
  {
    "text": "that and that's where things can change yeah which is the goal yeah hey so you actually mentioned uh",
    "start": "1997679",
    "end": "2005559"
  },
  {
    "text": "console as a tool um I remember using console five or six years ago as a uh",
    "start": "2005559",
    "end": "2012000"
  },
  {
    "text": "service Discovery tool for a project in conjunction with other hash cor Services um could you mind explaining to us the",
    "start": "2012000",
    "end": "2018639"
  },
  {
    "text": "difference between service Discovery and service mesh or are they pretty much the same thing no that's a great that's a",
    "start": "2018639",
    "end": "2025000"
  },
  {
    "text": "great Point there's a lot the history of this you know some companies started with something different and eventually",
    "start": "2025000",
    "end": "2030639"
  },
  {
    "text": "ended up there and some might have started with service me so console at you're right console was a service Discovery tool it is a service discover",
    "start": "2030639",
    "end": "2037120"
  },
  {
    "text": "tool it's very good at that and I think at one point they realized some some part of their service mesh is service",
    "start": "2037120",
    "end": "2043080"
  },
  {
    "text": "Discovery so they've got that work already done that's add the proxy and add some of that capability uh which is",
    "start": "2043080",
    "end": "2049320"
  },
  {
    "text": "what they've been doing since it came out which is at least three or four years ago time flies um so at this point",
    "start": "2049320",
    "end": "2055520"
  },
  {
    "text": "it's console connect that offers the service mesh part but it works in conjunction with console's typical",
    "start": "2055520",
    "end": "2061560"
  },
  {
    "text": "functionality uh which is pretty Broad and pretty powerful it's almost like a Proto service mesh",
    "start": "2061560",
    "end": "2067960"
  },
  {
    "text": "I mean you could say that yeah and again they each kind of took a different path I mentioned Kong but that was an API Gateway and then it kind of turned it",
    "start": "2067960",
    "end": "2074358"
  },
  {
    "text": "into a being more of a service mesh and so each of these Technologies kind of offers a little something different like",
    "start": "2074359",
    "end": "2080118"
  },
  {
    "text": "ISO wouldn't be called an API Gateway but it has an inish Gateway so again they all little nuances and that's why",
    "start": "2080119",
    "end": "2086079"
  },
  {
    "text": "you really want to look at them close when you're trying to decide which one yeah got it thanks",
    "start": "2086079",
    "end": "2093200"
  },
  {
    "text": "sure yeah thanks for the nois uh session so I have no question uh how what's a",
    "start": "2093200",
    "end": "2099320"
  },
  {
    "text": "mental model to think about these right for example when you do traffic management all of this happens at site",
    "start": "2099320",
    "end": "2105720"
  },
  {
    "text": "card but it is a centralized algorithm running somewhere but there's no centralized entity doing this so how do",
    "start": "2105720",
    "end": "2112599"
  },
  {
    "text": "we think about that uh it can't happen on control plane that's one the second is how does service match fit within the",
    "start": "2112599",
    "end": "2120040"
  },
  {
    "text": "broader category of cnis ebpf all of them have some overlap so how do we",
    "start": "2120040",
    "end": "2125640"
  },
  {
    "text": "distinguish between what can do what yeah yeah I mean the the the the first",
    "start": "2125640",
    "end": "2131280"
  },
  {
    "text": "part of it um I guess is more um I'm I'm I'm layer I'm layering in these rules uh",
    "start": "2131280",
    "end": "2138040"
  },
  {
    "text": "um trying to think of how to answer that question um yeah I I I think that when you think",
    "start": "2138040",
    "end": "2144359"
  },
  {
    "text": "of it it's it's it's not you know in some cases I do have the ability to override what the kubernetes cluster is",
    "start": "2144359",
    "end": "2149880"
  },
  {
    "text": "doing say you know with virtual services and so forth um but I you know I think the the thing that ends up being",
    "start": "2149880",
    "end": "2155760"
  },
  {
    "text": "challenging is what you know what you've implemented so a lot of them do offer visualization so you can actually see",
    "start": "2155760",
    "end": "2162240"
  },
  {
    "text": "like if I've set one of those Canary 8020 rules it'll actually show it to me visually and show me that the traffic is",
    "start": "2162240",
    "end": "2168680"
  },
  {
    "text": "occurring that way and that helps you not necessarily maybe end up affecting how it's working sort of normally but it",
    "start": "2168680",
    "end": "2174800"
  },
  {
    "text": "is very separate from the cni that this is a different layer of the",
    "start": "2174800",
    "end": "2179760"
  },
  {
    "text": "communication hi thank you for the talk uh I just following up on that question so like for example if load balancing is",
    "start": "2182040",
    "end": "2188319"
  },
  {
    "text": "happening is this happening at the ESS of a pod so like 8020 splits and every like such traffic management decisions",
    "start": "2188319",
    "end": "2195400"
  },
  {
    "text": "is it happening at the ESS or like there's some Central controller yeah the the what ends up happen the is the sto",
    "start": "2195400",
    "end": "2203079"
  },
  {
    "text": "uh control plane um configures the proxies so they they they I don't know",
    "start": "2203079",
    "end": "2208119"
  },
  {
    "text": "if it's push or pull frankly but when you drop those configurations and those are ISO crds that we were showing the",
    "start": "2208119",
    "end": "2214280"
  },
  {
    "text": "control plane then configures the proxy to to have them understand it and you saw it happens basically immediately um",
    "start": "2214280",
    "end": "2221319"
  },
  {
    "text": "so that's why that component is there the central configuration is the control plane and the proxies actually implement",
    "start": "2221319",
    "end": "2227000"
  },
  {
    "text": "it I see so my second question was uh what are the downsides of service",
    "start": "2227000",
    "end": "2232319"
  },
  {
    "text": "measures in terms of uh overheads in CPU and latencies request latencies it gets that gets asked every",
    "start": "2232319",
    "end": "2239359"
  },
  {
    "text": "single time and I mean there there officially yes there is overhead but it's super lightweight these proxies are",
    "start": "2239359",
    "end": "2245079"
  },
  {
    "text": "very efficient I mean the Linker d1's written in Rust I mean it's it seems like it's barely there um but it's valid",
    "start": "2245079",
    "end": "2252240"
  },
  {
    "text": "to make sure and test and ensure that hey I do have to account for even a slight percentage of increase of",
    "start": "2252240",
    "end": "2258119"
  },
  {
    "text": "overhead I thank you we'll do one last question and then we could certainly",
    "start": "2258119",
    "end": "2263440"
  },
  {
    "text": "chat outside of the so I had a question about something you said at the beginning of your talk and that was you",
    "start": "2263440",
    "end": "2270200"
  },
  {
    "text": "in a traditional Legacy Network you have a lot of different apps that do and Implement a lot of Legacy discovery or",
    "start": "2270200",
    "end": "2277119"
  },
  {
    "text": "Legacy code so how do you or how have you advised uh people that are moving to",
    "start": "2277119",
    "end": "2283920"
  },
  {
    "text": "service mesh to consider that problem space where you may have a library",
    "start": "2283920",
    "end": "2290160"
  },
  {
    "text": "that's very opinionated about how to find things and you want to add Envoy or",
    "start": "2290160",
    "end": "2296040"
  },
  {
    "text": "whatever your your favorite sidecar is and say hey um it'd be great if you use",
    "start": "2296040",
    "end": "2301319"
  },
  {
    "text": "that and we didn't fight over the settings yeah I mean some of that just",
    "start": "2301319",
    "end": "2306760"
  },
  {
    "text": "comes down to it may not even be related to service smesh but when I'm bringing like a maybe a legacy application to be",
    "start": "2306760",
    "end": "2313200"
  },
  {
    "text": "Cloud native there's a lot of things I have to consider you know I might have been doing things way differently when",
    "start": "2313200",
    "end": "2318839"
  },
  {
    "text": "it was like a monolith on a VM but when you come to kubernetes there's no sense you know doing it maybe that old way",
    "start": "2318839",
    "end": "2325599"
  },
  {
    "text": "when the cluster does so much of that for you and that's probably similar with with sto so in some ways it's probably",
    "start": "2325599",
    "end": "2332480"
  },
  {
    "text": "easier to do a little refactoring of the application and try to adapt it to that that new infrastructure if if not then I",
    "start": "2332480",
    "end": "2339640"
  },
  {
    "text": "think I'd be careful with my service mesh because if if you're dealing with something that's maybe not typical then you might you know the behavior might",
    "start": "2339640",
    "end": "2346280"
  },
  {
    "text": "not be typical as well thank you sure thank you well thanks everybody really",
    "start": "2346280",
    "end": "2351760"
  },
  {
    "text": "appreciate having you here [Applause] yeah",
    "start": "2351760",
    "end": "2359480"
  }
]