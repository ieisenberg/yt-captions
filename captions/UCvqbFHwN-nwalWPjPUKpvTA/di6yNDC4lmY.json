[
  {
    "start": "0",
    "end": "110000"
  },
  {
    "text": "all right we're going to ahead and get started I'd like to thank you everyone",
    "start": "1830",
    "end": "12370"
  },
  {
    "text": "who's who is generous today welcome today CNCs webinar multiple",
    "start": "12370",
    "end": "19199"
  },
  {
    "text": "governance with with the less I'm pulsing noise since their ambassador and",
    "start": "19199",
    "end": "26099"
  },
  {
    "text": "cloud specialist at Oracle I'll be moderating today's webinar you would",
    "start": "26099",
    "end": "33100"
  },
  {
    "text": "like to welcome our presenter today mud Madhuri ute founder LLL to before",
    "start": "33100",
    "end": "42250"
  },
  {
    "text": "getting started just a few key very items do deserve an hour we are not able",
    "start": "42250",
    "end": "48219"
  },
  {
    "text": "to talk as an attendee there is a QA box at the bottom of your screen please feel",
    "start": "48219",
    "end": "55660"
  },
  {
    "text": "free to drop your question there and you will get to us Millia we can at them",
    "start": "55660",
    "end": "62910"
  },
  {
    "text": "this is an official webinar of ciencia and as such is subject to the CSS code",
    "start": "62910",
    "end": "70600"
  },
  {
    "text": "of conduct please do not have anything that to the chat or questions that could",
    "start": "70600",
    "end": "77950"
  },
  {
    "text": "be hellish obstacles of that code of conduct basically please be respectful",
    "start": "77950",
    "end": "84280"
  },
  {
    "text": "of all your fellow sports content presenters please ask note that the",
    "start": "84280",
    "end": "91180"
  },
  {
    "text": "recording and slides will be posted later to the CSS webinar page ad rather",
    "start": "91180",
    "end": "97270"
  },
  {
    "text": "than Lou CNC for you is less webinars but that I'll hand it over to Matt early",
    "start": "97270",
    "end": "105130"
  },
  {
    "text": "to pick up today's presentation web camera Mallory Paolo",
    "start": "105130",
    "end": "111280"
  },
  {
    "start": "110000",
    "end": "181000"
  },
  {
    "text": "thank you all for joining this session on hybrid and multi-cloud kubernetes with no less we will be talking about",
    "start": "111280",
    "end": "118420"
  },
  {
    "text": "the definition of multi-cloud and hybrid cloud communities and go over a couple",
    "start": "118420",
    "end": "124329"
  },
  {
    "text": "of use cases where you could find multichart kubernetes to be your compelling fit for your workloads and",
    "start": "124329",
    "end": "132270"
  },
  {
    "text": "define no less communities walk through the implementation some of",
    "start": "132270",
    "end": "137680"
  },
  {
    "text": "the implementation details of knodel s and how it satisfies some of the requirements of multi-cloud and hybrid",
    "start": "137680",
    "end": "144940"
  },
  {
    "text": "cloud kubernetes use cases will go through a live demo of using Nautilus",
    "start": "144940",
    "end": "151300"
  },
  {
    "text": "communities to achieve multi-cloud kubernetes and walk through some of the caveats and work-in-progress items for",
    "start": "151300",
    "end": "159580"
  },
  {
    "text": "multi cloud kubernetes takeaways references and Bill have Q&A at the end",
    "start": "159580",
    "end": "165790"
  },
  {
    "text": "we'll also have a short Q&A after the demo to answer any questions and if we",
    "start": "165790",
    "end": "170890"
  },
  {
    "text": "have any questions unanswered we will include it in a FAQ section before",
    "start": "170890",
    "end": "176470"
  },
  {
    "text": "uploading the slide deck and recording to CN CF website by end of the day",
    "start": "176470",
    "end": "181920"
  },
  {
    "start": "181000",
    "end": "236000"
  },
  {
    "text": "multi-cloud communities is defined as a scenario where your control plane for",
    "start": "181920",
    "end": "187810"
  },
  {
    "text": "your kubernetes cluster is running on cloud provider a and a subset of the",
    "start": "187810",
    "end": "193269"
  },
  {
    "text": "parts that are deployed through the control plane are running on a different cloud provider B for example your cloud",
    "start": "193269",
    "end": "200530"
  },
  {
    "text": "provider a could be AWS and your cloud provider B could be assured a subset of",
    "start": "200530",
    "end": "207160"
  },
  {
    "text": "multi-cloud kubernetes hybrid cloud kubernetes where one of your cloud",
    "start": "207160",
    "end": "212440"
  },
  {
    "text": "providers for example cloud provider a could be on-premise so you could have your own on premise kubernetes running",
    "start": "212440",
    "end": "219670"
  },
  {
    "text": "on vSphere clustered in on-premise data center your control plane is running on",
    "start": "219670",
    "end": "225130"
  },
  {
    "text": "on-premise data center and a subset of the parts that are dispatched through",
    "start": "225130",
    "end": "230230"
  },
  {
    "text": "the control plane could be shipped to AWS or asher or a different public cloud",
    "start": "230230",
    "end": "235329"
  },
  {
    "text": "provider why would you want to implement or want such a situation",
    "start": "235329",
    "end": "242769"
  },
  {
    "start": "236000",
    "end": "314000"
  },
  {
    "text": "take for example you have an on-premise kubernetes cluster that is running on",
    "start": "242769",
    "end": "248640"
  },
  {
    "text": "vSphere in an on-premise data center and you have on premise parts that are",
    "start": "248640",
    "end": "254230"
  },
  {
    "text": "deployed to essentially BMS that are running on ESX servers you might want to",
    "start": "254230",
    "end": "260260"
  },
  {
    "text": "stretch this kubernetes cluster across multiple cloud providers beyond on-premise data center you might want to",
    "start": "260260",
    "end": "267729"
  },
  {
    "text": "ships some parts to AWS or ship some parts to a at the same time you might not",
    "start": "267729",
    "end": "274990"
  },
  {
    "text": "want to go ahead and deploy control plane on AWS or agile and maintain",
    "start": "274990",
    "end": "281500"
  },
  {
    "text": "monitor and update the characteristics of the control plane you might not have the resources time or the interest to",
    "start": "281500",
    "end": "288550"
  },
  {
    "text": "maintain this plethora and hundreds of control planes across various public cloud providers when you actually have a",
    "start": "288550",
    "end": "295389"
  },
  {
    "text": "working control plane that you're happy managing on your on-premise data center this allows you to focus on your core",
    "start": "295389",
    "end": "303039"
  },
  {
    "text": "business instead of curating pet compute on each of the cloud providers and",
    "start": "303039",
    "end": "308560"
  },
  {
    "text": "you're also avoiding the proliferation of control planes across various cloud providers one of the use cases is",
    "start": "308560",
    "end": "316180"
  },
  {
    "start": "314000",
    "end": "439000"
  },
  {
    "text": "wanting to burst during peak workload let's say that you have your kubernetes",
    "start": "316180",
    "end": "321639"
  },
  {
    "text": "master that is deploying thousand parts to ten work on ODEs on on premise data",
    "start": "321639",
    "end": "326919"
  },
  {
    "text": "center you've done your capacity calculation and you figured out that in",
    "start": "326919",
    "end": "332020"
  },
  {
    "text": "order to run your stable state thousand pod workload you need ten worker nodes",
    "start": "332020",
    "end": "337990"
  },
  {
    "text": "on your on-premise data center you've raised your purchase orders and configured your cluster and everything",
    "start": "337990",
    "end": "343810"
  },
  {
    "text": "is working fine on the on-premise data center kubernetes cluster let's say",
    "start": "343810",
    "end": "349330"
  },
  {
    "text": "Black Friday comes around and you're a peak workload spikes from thousand parts",
    "start": "349330",
    "end": "354699"
  },
  {
    "text": "to 2,000 parts now you don't have the time to go and race purchase orders to",
    "start": "354699",
    "end": "361089"
  },
  {
    "text": "procure the additional worker nodes to stick in into this communities master in",
    "start": "361089",
    "end": "366370"
  },
  {
    "text": "order to be able to take on this burst workload it would be nice if you can burst the thousand extra parts to a",
    "start": "366370",
    "end": "373539"
  },
  {
    "text": "cloud provider like AWS or Azure or any other cloud provider to take on this",
    "start": "373539",
    "end": "379750"
  },
  {
    "text": "extra workload that's coming in during Black Friday and once Black Friday",
    "start": "379750",
    "end": "385300"
  },
  {
    "text": "passes when you're back to regular operations your 10 worker nodes on your",
    "start": "385300",
    "end": "391210"
  },
  {
    "text": "on-premise data center are sufficient to run your thousand parts so you would want to get back your footprint to",
    "start": "391210",
    "end": "398110"
  },
  {
    "text": "entirely on on-premise data centers so this is one of the use cases where it would be nice to be able to",
    "start": "398110",
    "end": "404830"
  },
  {
    "text": "achieve a hybrid cloud or a multi cloud scenario that is driven through a single kubernetes master another use case is if",
    "start": "404830",
    "end": "412960"
  },
  {
    "text": "your running machine learning workloads where you have your data that's residing on a public cloud provider but you don't",
    "start": "412960",
    "end": "420070"
  },
  {
    "text": "want to set up a kubernetes control plane across multiple public cloud providers it would be good to be able to",
    "start": "420070",
    "end": "427270"
  },
  {
    "text": "drive the machine learning work Lord learning phase through the master that's",
    "start": "427270",
    "end": "432340"
  },
  {
    "text": "residing on your existing cloud provider which could be an on-premise data center",
    "start": "432340",
    "end": "438720"
  },
  {
    "text": "how are the way what are the ways in which we can achieve such multi-cloud",
    "start": "438720",
    "end": "443950"
  },
  {
    "start": "439000",
    "end": "588000"
  },
  {
    "text": "kubernetes without having to initiate a proliferation of control planes that are",
    "start": "443950",
    "end": "449620"
  },
  {
    "text": "spread across multiple cloud providers nodelist communities is one such way of",
    "start": "449620",
    "end": "455200"
  },
  {
    "text": "achieving multi-cloud kubernetes Nola's communities essentially presents a",
    "start": "455200",
    "end": "460630"
  },
  {
    "text": "virtual worker node into an existing kubernetes control plane the virtual",
    "start": "460630",
    "end": "465670"
  },
  {
    "text": "work a node is advertising very large capacity that's available for placement",
    "start": "465670",
    "end": "471160"
  },
  {
    "text": "of pods to the control plane but in actuality it trance on there is it",
    "start": "471160",
    "end": "476980"
  },
  {
    "text": "consumes very small capacity the virtual worker node can be dropped on any",
    "start": "476980",
    "end": "482020"
  },
  {
    "text": "existing control plane like for example your on-premise data centers existing kubernetes plane can be configured to",
    "start": "482020",
    "end": "489669"
  },
  {
    "text": "run the virtual work a node the virtual worker node when it presents this very large capacity to the control plane if a",
    "start": "489669",
    "end": "496930"
  },
  {
    "text": "pod comes in to the control plane and is scheduled on the virtual work a node the",
    "start": "496930",
    "end": "502150"
  },
  {
    "text": "virtual worker node under the covers looks at the pods resource requirements amount of CPU V CPU memory storage",
    "start": "502150",
    "end": "510100"
  },
  {
    "text": "routes network ups etc and provisions just-in-time cost-effective compute for",
    "start": "510100",
    "end": "516370"
  },
  {
    "text": "your pod on the cloud provider that it has configured to run the pods on so the",
    "start": "516370",
    "end": "523120"
  },
  {
    "text": "just-in-time provision if you've configured to run on AWS for example the",
    "start": "523120",
    "end": "528880"
  },
  {
    "text": "just-in-time provisioning on-demand instance a spot instance or a fire gate",
    "start": "528880",
    "end": "534339"
  },
  {
    "text": "launch type the types can be either set manually or you could ask the word should work in order",
    "start": "534339",
    "end": "540880"
  },
  {
    "text": "to pick the right launch type based on your resource requirements and your SLS the virtual worker node provisions the",
    "start": "540880",
    "end": "548500"
  },
  {
    "text": "just-in-time compute nodes for your pod and your part is dispatched over to the",
    "start": "548500",
    "end": "553740"
  },
  {
    "text": "just-in-time provision compute node as long as the pod is running to the",
    "start": "553740",
    "end": "559000"
  },
  {
    "text": "control plane it appears as though the pod is running on the virtual worker node and the pod functions like a",
    "start": "559000",
    "end": "566410"
  },
  {
    "text": "regular pod and once the pod terminates the underlying compute node is",
    "start": "566410",
    "end": "571630"
  },
  {
    "text": "automatically terminated by the virtual work and also think of compute nodes",
    "start": "571630",
    "end": "576640"
  },
  {
    "text": "that come up and disappear on various cloud providers based on your pod life lifecycle rather than an always-on",
    "start": "576640",
    "end": "584260"
  },
  {
    "text": "statically provisioned compute node that's hand curated by you the virtual work a node in actuality under the",
    "start": "584260",
    "end": "591400"
  },
  {
    "start": "588000",
    "end": "662000"
  },
  {
    "text": "Commerce is not a real worker node it's simply a pod that can be scheduled on",
    "start": "591400",
    "end": "596770"
  },
  {
    "text": "any of the existing worker nodes that are currently being managed by your control plane the pend runs a virtual",
    "start": "596770",
    "end": "603820"
  },
  {
    "text": "cubelet and cloud instance provided container virtual cubelet is a CNC F",
    "start": "603820",
    "end": "609130"
  },
  {
    "text": "project and cloud instance provider is an open source project from a low tool and the virtual cubelet and flower",
    "start": "609130",
    "end": "615970"
  },
  {
    "text": "instance provide a container is speeking cubelet api and it tells the api server",
    "start": "615970",
    "end": "623080"
  },
  {
    "text": "that it advertises to the api server that hey api server I'm a worker node I",
    "start": "623080",
    "end": "628150"
  },
  {
    "text": "speak hewlett api and i have this very large capacity that's available to me",
    "start": "628150",
    "end": "633220"
  },
  {
    "text": "for scheduling and the very large capacity that is advertised is configured through a config map so you",
    "start": "633220",
    "end": "639220"
  },
  {
    "text": "could say that I have thousands of V CPUs terabytes of memory hundreds of GPU",
    "start": "639220",
    "end": "645520"
  },
  {
    "text": "devices etc so there is no it can easily be dropped on any existing kubernetes",
    "start": "645520",
    "end": "652209"
  },
  {
    "text": "control plane because it's simply a pod that runs as part of the deployment that",
    "start": "652209",
    "end": "657700"
  },
  {
    "text": "can be deployed on on any existing kubernetes cluster so if you think about",
    "start": "657700",
    "end": "663010"
  },
  {
    "start": "662000",
    "end": "748000"
  },
  {
    "text": "what are the main differences between a vennila kubernetes control plane and the node les supercharged",
    "start": "663010",
    "end": "670269"
  },
  {
    "text": "the vanilla kubernetes control plane is depicted in the top half of this slide",
    "start": "670269",
    "end": "675339"
  },
  {
    "text": "where you think of your worker nodes as large bins that have static capacity and",
    "start": "675339",
    "end": "681040"
  },
  {
    "text": "your pods are balls of different sizes that are being stuffed into these large bins let's say a small pod has one BCP",
    "start": "681040",
    "end": "690130"
  },
  {
    "text": "one gig of ram a medium pod has two recipients two big ceramic cetera so you have quite a bit of wasted resources",
    "start": "690130",
    "end": "697060"
  },
  {
    "text": "because essentially you're doing bin packing and the optimal bin packing is",
    "start": "697060",
    "end": "702399"
  },
  {
    "text": "only possible if all of your parts are homogeneous types and your thoughts are",
    "start": "702399",
    "end": "709180"
  },
  {
    "text": "running for a predictable constant amount of time with nodelist when you're supercharging your control",
    "start": "709180",
    "end": "715420"
  },
  {
    "text": "plane with node less what you see is one large which will work a node which is",
    "start": "715420",
    "end": "720610"
  },
  {
    "text": "presenting very large capacity to the control plane and the large worker node",
    "start": "720610",
    "end": "725980"
  },
  {
    "text": "is doing bin selection instead of bin packing there you're getting the right sized bin that's provisioned just in",
    "start": "725980",
    "end": "733120"
  },
  {
    "text": "time for each ball so a small bin small ball gets a small bin a medium sized",
    "start": "733120",
    "end": "739060"
  },
  {
    "text": "ball gets a medium-sized bin etc and once the pods terminate the underlying bin is tossed automatically so let's go",
    "start": "739060",
    "end": "749380"
  },
  {
    "start": "748000",
    "end": "800000"
  },
  {
    "text": "ahead and see how this actually works I had a mini cube on my macbook that is",
    "start": "749380",
    "end": "755500"
  },
  {
    "text": "running a kubernetes master and I have a virtual worker node that is provisioned on two deployed on to the kubernetes",
    "start": "755500",
    "end": "762490"
  },
  {
    "text": "master and I've configured the virtual worker node to ship parts to AWS for the",
    "start": "762490",
    "end": "768339"
  },
  {
    "text": "sake of the demo I will create an engine X deployment with one part that's scheduled on the mini cube and it will",
    "start": "768339",
    "end": "775959"
  },
  {
    "text": "get shipped via virtual worker node to AWS and I will scale the deployment from",
    "start": "775959",
    "end": "781690"
  },
  {
    "text": "one part to three parts and we should be able to see that the extra two parts",
    "start": "781690",
    "end": "787480"
  },
  {
    "text": "come in come up in parallel so you're not scaling up one worker node at a time you're scaling up in a much more agile",
    "start": "787480",
    "end": "795250"
  },
  {
    "text": "fashion in parallel for scaling up compute for your parts and once I delete",
    "start": "795250",
    "end": "801670"
  },
  {
    "text": "the engine X deployment should see that the footprint on AWS is back to zero and once we have done with",
    "start": "801670",
    "end": "808990"
  },
  {
    "text": "the demo bill pause for Q&A so that any questions about the demo can be answered right away so here I have my mini cube",
    "start": "808990",
    "end": "826290"
  },
  {
    "text": "that's running on my macbook and i have the one master node and i have the",
    "start": "826710",
    "end": "835090"
  },
  {
    "text": "virtual work a node which is called virtual cubelet if i look at virtual",
    "start": "835090",
    "end": "841210"
  },
  {
    "text": "hewlett working on and look at the",
    "start": "841210",
    "end": "848050"
  },
  {
    "text": "available capacity it says that it's it has 20 D CPUs 512 weeks of RAM and 240",
    "start": "848050",
    "end": "855550"
  },
  {
    "text": "limit that is available to be scheduled on this virtual work a node if I look at",
    "start": "855550",
    "end": "860950"
  },
  {
    "text": "the if I look at the parts that are",
    "start": "860950",
    "end": "867940"
  },
  {
    "start": "866000",
    "end": "922000"
  },
  {
    "text": "running in cube system namespace we see the virtual cubelet part that is running so this corresponds to virtual cube like",
    "start": "867940",
    "end": "876340"
  },
  {
    "text": "part that is deployed on the mini cube cluster and the virtual worker node is",
    "start": "876340",
    "end": "883360"
  },
  {
    "text": "this virtual cubelet pod is running virtual cube let cloud instance provide a container that is telling the api",
    "start": "883360",
    "end": "890140"
  },
  {
    "text": "server for many cube that hey I have 23 CPUs and five twelve weeks of RAM that",
    "start": "890140",
    "end": "896920"
  },
  {
    "text": "are available for for scheduling parts and I can run up to 200 parts and the",
    "start": "896920",
    "end": "903250"
  },
  {
    "text": "configuration for the number of resources that are available to be scheduled on the virtual cubelet node it",
    "start": "903250",
    "end": "910750"
  },
  {
    "text": "comes through config map so you can configure GPU devices and other devices as well if you want to expand the",
    "start": "910750",
    "end": "918490"
  },
  {
    "text": "capacity of the virtual of the virtual work on over so let's look at a sample engine X deployment as a workload I have",
    "start": "918490",
    "end": "928180"
  },
  {
    "text": "the nginx deployment that sets app to nginx and I want to schedule one",
    "start": "928180",
    "end": "934120"
  },
  {
    "text": "replicas the mode selector for this replica is said to watch in cubelet and I would",
    "start": "934120",
    "end": "941480"
  },
  {
    "text": "want one visible and two gigs of ram that needs to be provisioned for the",
    "start": "941480",
    "end": "947630"
  },
  {
    "text": "engine export so let's go ahead and create nginx deployment",
    "start": "947630",
    "end": "957950"
  },
  {
    "text": "and while we had while the air deployment is being created if we look at the virtual cubelet config map we",
    "start": "957950",
    "end": "967040"
  },
  {
    "text": "should see that we have the cloud provider that is configured to ship parts too and we also see the CPU and",
    "start": "967040",
    "end": "976700"
  },
  {
    "text": "memory and apart limit configurations that are set for the as the advertised",
    "start": "976700",
    "end": "982640"
  },
  {
    "text": "capacity for the virtual cube light mode so if we look at what's happening under",
    "start": "982640",
    "end": "988730"
  },
  {
    "text": "the covers the engine X the one replica",
    "start": "988730",
    "end": "995270"
  },
  {
    "text": "for the nginx deployment would be scheduled on to the virtual working on because this is the only worker node",
    "start": "995270",
    "end": "1001720"
  },
  {
    "text": "that's available for the control plane and it has enough capacity to take on one V CPU and two weeks of RAM our",
    "start": "1001720",
    "end": "1008500"
  },
  {
    "text": "resource requirements for the nginx replicas the virtual worker node is scheduled to is configured via the",
    "start": "1008500",
    "end": "1015850"
  },
  {
    "text": "config map to ship parts to AWS so the virtual worker node can look at the",
    "start": "1015850",
    "end": "1022230"
  },
  {
    "text": "Internet's replicas resource requirements and it will provision just-in-time compute for your pod for",
    "start": "1022230",
    "end": "1030339"
  },
  {
    "text": "your nginx replicas and once the computers provisioned the nginx pod is",
    "start": "1030339",
    "end": "1036250"
  },
  {
    "text": "dispatched over to the just-in-time provisioning node the just-in-time",
    "start": "1036250",
    "end": "1041740"
  },
  {
    "text": "provisioning note can be of various flavors it can be on-demand Spotify Gate",
    "start": "1041740",
    "end": "1047500"
  },
  {
    "text": "you can specify by a annotation to your deployment which compute launch type you",
    "start": "1047500",
    "end": "1054040"
  },
  {
    "text": "have a preference for or you could let the virtual work a node pick the right compute launch type for your pod",
    "start": "1054040",
    "end": "1060630"
  },
  {
    "text": "automatically once the part once the compute node is provisioned the pod is",
    "start": "1060630",
    "end": "1066310"
  },
  {
    "text": "dispatched over to the compute node if your application has strict startup time",
    "start": "1066310",
    "end": "1072280"
  },
  {
    "text": "requirements like for example if you have strict SLA of 5 seconds between the",
    "start": "1072280",
    "end": "1077620"
  },
  {
    "text": "time you say create nginx deployment and the pod needs to respond to inch and external requests you can also specify a",
    "start": "1077620",
    "end": "1085150"
  },
  {
    "text": "number of set count of 3 warmed instances that are available to dispatch",
    "start": "1085150",
    "end": "1090610"
  },
  {
    "text": "your parts to the white capri one instances enable you to do is they'll cut down the instant",
    "start": "1090610",
    "end": "1096670"
  },
  {
    "text": "startup time which varies from cloud provider to cloud provider and also it",
    "start": "1096670",
    "end": "1101920"
  },
  {
    "text": "varies based on the computer launch types labor you pick on a given cloud",
    "start": "1101920",
    "end": "1107320"
  },
  {
    "text": "provider so if you would rather not wait for let's say a minute and a half for an",
    "start": "1107320",
    "end": "1112390"
  },
  {
    "text": "easy to on-demand instance to come up in order to dispatch your point you can specify the count of let's say five",
    "start": "1112390",
    "end": "1120340"
  },
  {
    "text": "number of on-demand instances of type C for dot large that would enable you to",
    "start": "1120340",
    "end": "1126700"
  },
  {
    "text": "cut down on instance startup time at the cost of having to spend a little extra",
    "start": "1126700",
    "end": "1132880"
  },
  {
    "text": "for the preborn instance launch types so once the instances are provisioned the engineers replica is dispatched over",
    "start": "1132880",
    "end": "1140440"
  },
  {
    "text": "to the instance and to the control plane it will look like the nginx replica is running on the virtual worker node so",
    "start": "1140440",
    "end": "1148050"
  },
  {
    "start": "1148000",
    "end": "1232000"
  },
  {
    "text": "let's look at the nginx replicas in my AWS console",
    "start": "1148050",
    "end": "1155309"
  },
  {
    "text": "and it's running in a t 3 small instance type which is the the best fit instance",
    "start": "1157210",
    "end": "1164230"
  },
  {
    "text": "type that honors the 1d CPU and two heaps of RAM resource requests for the nginx replicas and the tags of the",
    "start": "1164230",
    "end": "1173320"
  },
  {
    "text": "instances that provision just in time reflect the labels so the nginx",
    "start": "1173320",
    "end": "1179799"
  },
  {
    "text": "deployment had apps set to nginx as a label so that label appears as a",
    "start": "1179799",
    "end": "1185020"
  },
  {
    "text": "tag so it's very easy to do accounting and monitoring of the resources that are belonging to a certain kubernetes",
    "start": "1185020",
    "end": "1191500"
  },
  {
    "text": "cluster that are being dispatched in various cloud providers there is also the name tag of the of the virtual",
    "start": "1191500",
    "end": "1199029"
  },
  {
    "text": "worker node and the namespace in which it is running and the controller ID for the virtual work a node so yeah you can",
    "start": "1199029",
    "end": "1205809"
  },
  {
    "text": "easily perform accounting tasks as well in this case because I did not specify",
    "start": "1205809",
    "end": "1211330"
  },
  {
    "text": "any affinity for a certain launch type what we get is that in fact Oh on demand",
    "start": "1211330",
    "end": "1216850"
  },
  {
    "text": "instance let's go down and see we should see that it's running on regular on",
    "start": "1216850",
    "end": "1222909"
  },
  {
    "text": "demand instance it's a normal on demand instance that is running the nginx",
    "start": "1222909",
    "end": "1230559"
  },
  {
    "text": "replicas so if I go ahead and scale the deployment let's get the diplomas first",
    "start": "1230559",
    "end": "1239970"
  },
  {
    "start": "1232000",
    "end": "1327000"
  },
  {
    "text": "if I scale the deployment for nginx from",
    "start": "1239970",
    "end": "1245080"
  },
  {
    "text": "one replicar to three",
    "start": "1245080",
    "end": "1248490"
  },
  {
    "text": "what's happening under the covers is we would get the the two extra compute",
    "start": "1251270",
    "end": "1258390"
  },
  {
    "text": "launch types for the two new engine exports they are provision in parallel",
    "start": "1258390",
    "end": "1264540"
  },
  {
    "text": "so you're a scale-up time the time it would take for you to scale up to unexpected bursts in your birth load is",
    "start": "1264540",
    "end": "1271260"
  },
  {
    "text": "the time it would take for provisioning a single cloud computer instance because they're the scallops are happening in",
    "start": "1271260",
    "end": "1277620"
  },
  {
    "text": "parallel the two new cloud instances will be provisioned again just in time",
    "start": "1277620",
    "end": "1282630"
  },
  {
    "text": "or you can set up a set of p1 instances so you can cut down on instance startup",
    "start": "1282630",
    "end": "1288090"
  },
  {
    "text": "time and the two new parts should come up once the underlying compute launch types are provisioned and the behavior",
    "start": "1288090",
    "end": "1296760"
  },
  {
    "text": "is exactly the same whether you're shipping from on on-premise data center",
    "start": "1296760",
    "end": "1302730"
  },
  {
    "text": "to AWS or if you're shipping from let's say AWS to assured or a shortage ECT or",
    "start": "1302730",
    "end": "1309360"
  },
  {
    "text": "any other cloud providers essentially what we are trying to achieve here is to",
    "start": "1309360",
    "end": "1314880"
  },
  {
    "text": "realize our on-premise communities control main being able to automatically",
    "start": "1314880",
    "end": "1320669"
  },
  {
    "text": "ship pods to AWS or Rajaraja city or any other trial providers let's go back and",
    "start": "1320669",
    "end": "1327179"
  },
  {
    "start": "1327000",
    "end": "1392000"
  },
  {
    "text": "see whether our to all the three parts are up and running and our three parts",
    "start": "1327179",
    "end": "1332429"
  },
  {
    "text": "are up and running let's get the deployment three out of three are ready so if we go ahead and delete the",
    "start": "1332429",
    "end": "1340530"
  },
  {
    "text": "deployment",
    "start": "1340530",
    "end": "1343190"
  },
  {
    "text": "the three parts are terminated the underlying compute launch type will automatically be terminated so if I go",
    "start": "1349929",
    "end": "1356590"
  },
  {
    "text": "back to the to my ec2 console and look",
    "start": "1356590",
    "end": "1361929"
  },
  {
    "text": "at the instance that is out here refresh the page",
    "start": "1361929",
    "end": "1368720"
  },
  {
    "text": "the instance is being shut down so once your parts are terminated because your",
    "start": "1368720",
    "end": "1375720"
  },
  {
    "text": "your burst capacity is no longer required the underlying computer launch type is automatically terminated so you",
    "start": "1375720",
    "end": "1383309"
  },
  {
    "text": "get back to being 100% on your cloud provider a if it's zero computer",
    "start": "1383309",
    "end": "1389610"
  },
  {
    "text": "footprint on the other cloud provider let's verify that we are back to running",
    "start": "1389610",
    "end": "1400860"
  },
  {
    "start": "1392000",
    "end": "1433000"
  },
  {
    "text": "center pods so this is a very simple demo of shipping workloads from the",
    "start": "1400860",
    "end": "1406860"
  },
  {
    "text": "kubernetes control name that is running on a mini cube on my mark book out to",
    "start": "1406860",
    "end": "1412260"
  },
  {
    "text": "AWS and the behavior would look exactly the same if you would want to ship from",
    "start": "1412260",
    "end": "1417919"
  },
  {
    "text": "mini cube planning on line to a shirt or any other cloud provider as well some of",
    "start": "1417919",
    "end": "1424140"
  },
  {
    "text": "the caveats for the Nautilus ecosystem as of now",
    "start": "1424140",
    "end": "1429830"
  },
  {
    "start": "1433000",
    "end": "1536000"
  },
  {
    "text": "persistent warning support for the parts that are running on the cloud provider B",
    "start": "1433070",
    "end": "1438840"
  },
  {
    "text": "which is the Florence la provider is not yet supported it's working progress and demon suits support also would need to",
    "start": "1438840",
    "end": "1446549"
  },
  {
    "text": "be added to no less eco system because currently the implementation and the interpretation of teaming set assumes",
    "start": "1446549",
    "end": "1453029"
  },
  {
    "text": "that the demon said parts are running on every single worker node will have to be in green and this is the result of demon",
    "start": "1453029",
    "end": "1460379"
  },
  {
    "text": "sect's kind of evolving from an era their on-premise data centers for the default and you wanted to have the demon",
    "start": "1460379",
    "end": "1468450"
  },
  {
    "text": "set pod running on these very large worker nodes will have to reinterpret it in the context of nor less has to put",
    "start": "1468450",
    "end": "1475230"
  },
  {
    "text": "the demon said part really need to run on the virtual work a node or does it need to run on each of the cells that",
    "start": "1475230",
    "end": "1482730"
  },
  {
    "text": "the that the parts are being dispatched by other what you working on as far as supported cloud providers are",
    "start": "1482730",
    "end": "1489960"
  },
  {
    "text": "concerned multi cloud via node less and virtual cubelet and Kip is",
    "start": "1489960",
    "end": "1495539"
  },
  {
    "text": "functional on AWS and GC keeps beta on assured if there is interest in consuming any other child provider",
    "start": "1495539",
    "end": "1502080"
  },
  {
    "text": "please let us know and we'd love to add support for any cloud provider that you are interested in I'm going to pause",
    "start": "1502080",
    "end": "1509249"
  },
  {
    "text": "here for questions to see if the demo makes sense and if they were if there",
    "start": "1509249",
    "end": "1514440"
  },
  {
    "text": "are any open questions and hand it over to follow hi Marie was summarized very",
    "start": "1514440",
    "end": "1521399"
  },
  {
    "text": "perceived as I want to learn more I want to fast right we have some questions",
    "start": "1521399",
    "end": "1527299"
  },
  {
    "text": "Manish Kumar actually this homework no a separated component in governance",
    "start": "1527299",
    "end": "1535309"
  },
  {
    "text": "and virtual worker node is a deployment with a single part that runs on that's",
    "start": "1535309",
    "end": "1542669"
  },
  {
    "text": "deployed via the control plane so it is it's simply another workload that runs",
    "start": "1542669",
    "end": "1548940"
  },
  {
    "text": "in your kubernetes cluster does that answer the question let me go",
    "start": "1548940",
    "end": "1554070"
  },
  {
    "text": "back to the",
    "start": "1554070",
    "end": "1557118"
  },
  {
    "text": "let me look through the deployment for",
    "start": "1563620",
    "end": "1569890"
  },
  {
    "text": "so what will work a Nord is simply a deployment with one replica and the word",
    "start": "1569890",
    "end": "1576440"
  },
  {
    "text": "the replica is running virtual cubelet that is built with provided it's running",
    "start": "1576440",
    "end": "1583700"
  },
  {
    "text": "virtual cubelet that is using kit provided under the covers and this",
    "start": "1583700",
    "end": "1589460"
  },
  {
    "text": "container essentially is speaking cubelet api so it talks to the connects",
    "start": "1589460",
    "end": "1595070"
  },
  {
    "text": "back to the api server and it advertises itself as a worker so it's simply a part",
    "start": "1595070",
    "end": "1600680"
  },
  {
    "text": "that can be scheduled on any of your existing kubernetes control planes so",
    "start": "1600680",
    "end": "1605810"
  },
  {
    "text": "it's not any separate component that needs to be explicitly configured in",
    "start": "1605810",
    "end": "1611390"
  },
  {
    "text": "your kubernetes cluster so you can deploy it for example let's say can deploy it on and on an on premise",
    "start": "1611390",
    "end": "1617600"
  },
  {
    "text": "kubernetes control plane you can deploy you can create the deployment on an EPS",
    "start": "1617600",
    "end": "1623720"
  },
  {
    "text": "cluster or a gke cluster etc does that make sense Monisha there is a second part of",
    "start": "1623720",
    "end": "1634630"
  },
  {
    "text": "yesterday yeah the second part of my question was how to provision a realtor",
    "start": "1634840",
    "end": "1644720"
  },
  {
    "text": "worth No and attach suitable expose new awesomes all right right the plan yeah",
    "start": "1644720",
    "end": "1653180"
  },
  {
    "start": "1653000",
    "end": "1732000"
  },
  {
    "text": "it is simply a deployment if you would like to try it out there is there simple",
    "start": "1653180",
    "end": "1660410"
  },
  {
    "text": "deployment scripts that are available in the Kip repo the repo is linked in the",
    "start": "1660410",
    "end": "1666560"
  },
  {
    "text": "slide deck that will be uploaded to CN CF site by the end of the day the deploy",
    "start": "1666560",
    "end": "1672070"
  },
  {
    "text": "directory inside Kip gives you a couple of options for deploying a simple",
    "start": "1672070",
    "end": "1677090"
  },
  {
    "text": "kubernetes cluster with on AWS so GCP orbit VPN for on-premise for bursting",
    "start": "1677090",
    "end": "1683780"
  },
  {
    "text": "from on-premise to AWS for example if you want a simple set up to try it out",
    "start": "1683780",
    "end": "1689570"
  },
  {
    "text": "you can use any of the terraform scripts or if you would like to deploy it on an existing kubernetes",
    "start": "1689570",
    "end": "1696920"
  },
  {
    "text": "cluster you can use the manifest scripts inside the manifest skip directory I",
    "start": "1696920",
    "end": "1702680"
  },
  {
    "text": "will link all of these in the slide deck that's uploaded that will be uploaded to the CNCs site",
    "start": "1702680",
    "end": "1710950"
  },
  {
    "text": "we have moral question just a minute please",
    "start": "1712010",
    "end": "1717150"
  },
  {
    "text": "from Sergei Bolger pinata sorry Sergei I don't know if it's said",
    "start": "1717150",
    "end": "1725100"
  },
  {
    "text": "correct what is the secured citta for cloud provider communication yeah",
    "start": "1725100",
    "end": "1733140"
  },
  {
    "text": "so we default to VPN or Direct Connect or whatever is your preferred method for",
    "start": "1733140",
    "end": "1739850"
  },
  {
    "text": "securing the communication between the virtual work a node that's running on",
    "start": "1739850",
    "end": "1746760"
  },
  {
    "text": "cloud provider a and the virtual work a node that's and the parts that are running on chart provider B you can also",
    "start": "1746760",
    "end": "1753660"
  },
  {
    "text": "try out a simple set up with a VPN VPN is one of the basic ways of securing the",
    "start": "1753660",
    "end": "1761490"
  },
  {
    "text": "communication between your provider a and char provider B if you'd like to see",
    "start": "1761490",
    "end": "1767280"
  },
  {
    "text": "how that works the scripts for that and the documentation for that is under",
    "start": "1767280",
    "end": "1773010"
  },
  {
    "text": "tariff on VPN directly in the people so",
    "start": "1773010",
    "end": "1780840"
  },
  {
    "text": "here is for example it's creating a V PC with a VPN gateway for a WI so you can",
    "start": "1780840",
    "end": "1787700"
  },
  {
    "text": "default to VPN or Direct Connect or if depends on your cloud provider a and",
    "start": "1787700",
    "end": "1793620"
  },
  {
    "text": "shelter Y the B if you have strict requirements for a certain kind of security link between cloud provider a",
    "start": "1793620",
    "end": "1800940"
  },
  {
    "text": "and sha provider B please file an issue on the key people and we'd happy to we'd be happy to see how that would work",
    "start": "1800940",
    "end": "1809180"
  },
  {
    "text": "so I suppose that we use or always as",
    "start": "1810790",
    "end": "1815920"
  },
  {
    "text": "just a compliment for understanding the security provisioning is about they are",
    "start": "1815920",
    "end": "1825170"
  },
  {
    "text": "assuming that you are in the same network because we PNE create the same network right right yeah okay okay thank",
    "start": "1825170",
    "end": "1837370"
  },
  {
    "text": "question is from other key does this",
    "start": "1837370",
    "end": "1843260"
  },
  {
    "text": "mean there is one part per node was",
    "start": "1843260",
    "end": "1852500"
  },
  {
    "text": "there anything else to the question power node so we kind of look at cloud",
    "start": "1852500",
    "end": "1868130"
  },
  {
    "start": "1864000",
    "end": "1974000"
  },
  {
    "text": "compute from the one of the fundamental concepts of no less is we look at cloud",
    "start": "1868130",
    "end": "1873830"
  },
  {
    "text": "compute as something that is needed for pods rather than disjoint entity that is",
    "start": "1873830",
    "end": "1879950"
  },
  {
    "text": "provision six months or nine months ahead of time and waiting to run pods so",
    "start": "1879950",
    "end": "1885340"
  },
  {
    "text": "based on the pod lifecycle compute instances come up again one of the",
    "start": "1885340",
    "end": "1891260"
  },
  {
    "text": "fundamental premises of node less is there is one compute launch type per pod the compute launch type could be of any",
    "start": "1891260",
    "end": "1898309"
  },
  {
    "text": "of the flavors that are available from the cloud provider so it could be and on",
    "start": "1898309",
    "end": "1904220"
  },
  {
    "text": "AWS for example your computer launch type could be an on-demand instance it could be as for instance or it could be",
    "start": "1904220",
    "end": "1910370"
  },
  {
    "text": "a fire gate what we believe is that as consumers of parts you shouldn't be",
    "start": "1910370",
    "end": "1916490"
  },
  {
    "text": "worried about hand curating compute launch types on each of the cloud providers and trying to keep list of",
    "start": "1916490",
    "end": "1923660"
  },
  {
    "text": "what are the hundred something different types of on-demand instances versus spot pricing in versus what's the latest and",
    "start": "1923660",
    "end": "1931190"
  },
  {
    "text": "greatest on forget etc so we make it very easy for you to consume the right",
    "start": "1931190",
    "end": "1936290"
  },
  {
    "text": "compute launch type for your pod based on the pods SLS and resource requirements so having one",
    "start": "1936290",
    "end": "1943580"
  },
  {
    "text": "compute launch type but worldwide is kind of false along those lines of being",
    "start": "1943580",
    "end": "1950300"
  },
  {
    "text": "able to honor our goals of being able to manage the compute needs of a pod on a",
    "start": "1950300",
    "end": "1957200"
  },
  {
    "text": "point by point basis does that answer your question others no question more",
    "start": "1957200",
    "end": "1963320"
  },
  {
    "text": "Thank You Marie awesome so let's go ahead and look at some of the takeaways",
    "start": "1963320",
    "end": "1974530"
  },
  {
    "start": "1974000",
    "end": "2087000"
  },
  {
    "text": "increasing adoption of kubernetes on various cloud platforms is leading to",
    "start": "1974680",
    "end": "1979970"
  },
  {
    "text": "proliferation of control planes and a lot of heterogeneous clusters spread across various cloud providers it leads",
    "start": "1979970",
    "end": "1987650"
  },
  {
    "text": "to a huge amount of operational overhead and also based it spend there is no need",
    "start": "1987650",
    "end": "1992840"
  },
  {
    "text": "for you to create a thousand different control planes for each control plane running a hundred parts each just",
    "start": "1992840",
    "end": "1999860"
  },
  {
    "text": "because you want to try out a new cloud provider and you do not have you would",
    "start": "1999860",
    "end": "2005470"
  },
  {
    "text": "rather expand your existing control plane across various cloud providers then hand curate these control planes on",
    "start": "2005470",
    "end": "2013870"
  },
  {
    "text": "various cloud providers multi-cloud kubernetes is an idea where we are",
    "start": "2013870",
    "end": "2019000"
  },
  {
    "text": "looking to simplify operations of kubernetes clusters or across various cloud providers by reducing",
    "start": "2019000",
    "end": "2025660"
  },
  {
    "text": "proliferation of control planes it hugely simplifies multi-cloud capacity",
    "start": "2025660",
    "end": "2031510"
  },
  {
    "text": "planning because you don't have to worry about hand curating maintaining monitoring your cluster auto-scaling",
    "start": "2031510",
    "end": "2037600"
  },
  {
    "text": "knobs for your worker nodes and worried about how to scale down work and also have to worry about there is a newer",
    "start": "2037600",
    "end": "2045700"
  },
  {
    "text": "better cheaper cloud provider in the market how do I adopt this cloud provider you know in a very quick and",
    "start": "2045700",
    "end": "2052600"
  },
  {
    "text": "agile fashion without having to provision control planes across various cloud providers analyst communities is",
    "start": "2052600",
    "end": "2058960"
  },
  {
    "text": "one way of achieving multi-cloud communities are no less kubernetes uses the two open source projects",
    "start": "2058960",
    "end": "2065860"
  },
  {
    "text": "virtual cumulate which is a ciencia project and Kip which is an open source project from immortal and both of them",
    "start": "2065860",
    "end": "2072970"
  },
  {
    "text": "provide a low friction path towards achieving multi-cloud communities everything spoken in this slide deck and",
    "start": "2072970",
    "end": "2080638"
  },
  {
    "text": "demonstrated in the demo on all of that is doable with the open source versions",
    "start": "2080639",
    "end": "2086398"
  },
  {
    "text": "if you are curious to try no less check out the repo",
    "start": "2086399",
    "end": "2092710"
  },
  {
    "start": "2087000",
    "end": "2120000"
  },
  {
    "text": "there are provisioning scripts as mentioned earlier while answering the Q&A questions there's that there are",
    "start": "2092710",
    "end": "2099340"
  },
  {
    "text": "provisioning scripts for deploying a terraform environment for VP using VPN",
    "start": "2099340",
    "end": "2105190"
  },
  {
    "text": "and for GCC as well check out the virtual cubelet project which is the CN",
    "start": "2105190",
    "end": "2110410"
  },
  {
    "text": "CF project and check out Kip there's a ton of node less reading materials on",
    "start": "2110410",
    "end": "2115660"
  },
  {
    "text": "the local blog on medium check them out if you are interested as well if you",
    "start": "2115660",
    "end": "2120970"
  },
  {
    "start": "2120000",
    "end": "2134000"
  },
  {
    "text": "have questions please feel free to write to me or file an issue on the Kip repo we hang out on virtual cubelet channel",
    "start": "2120970",
    "end": "2127900"
  },
  {
    "text": "on kubernetes slack or feel free to pop in and ask any questions that you might have as well but thanks a much to",
    "start": "2127900",
    "end": "2135550"
  },
  {
    "start": "2134000",
    "end": "2282000"
  },
  {
    "text": "alertly engineering Brandon Cox will Moshe neighbor hi and John Roman are for helping put together most of the code",
    "start": "2135550",
    "end": "2143109"
  },
  {
    "text": "base and the scripts that were demonstrated in the session DITA Bhatia",
    "start": "2143109",
    "end": "2148210"
  },
  {
    "text": "and Goff from worship cubelet team and CN CF marketing team thank you so much",
    "start": "2148210",
    "end": "2153790"
  },
  {
    "text": "for setting up this webinar and making it such a smooth process and thanks to audience money Sergey oddish for your",
    "start": "2153790",
    "end": "2160510"
  },
  {
    "text": "questions if you have any further questions please feel free to ask them now we will we will include the",
    "start": "2160510",
    "end": "2167619"
  },
  {
    "text": "responses to any unanswered questions in a FAQ section in the slide deck that will be uploaded along with the",
    "start": "2167619",
    "end": "2174160"
  },
  {
    "text": "recording to CN CF website by the end of today mother is having more truth versus",
    "start": "2174160",
    "end": "2184270"
  },
  {
    "text": "I think that we have time to sit yes",
    "start": "2184270",
    "end": "2189790"
  },
  {
    "text": "yeah please yeah sure from Manish Kumar again thank you manage",
    "start": "2189790",
    "end": "2195190"
  },
  {
    "text": "for questions again I can in case us Direct Connect communication to cloud",
    "start": "2195190",
    "end": "2201340"
  },
  {
    "text": "provider where I will be storing cloud providers secrets this is these similar",
    "start": "2201340",
    "end": "2207880"
  },
  {
    "text": "the way with four six four deployments the cloud providers secrets",
    "start": "2207880",
    "end": "2215700"
  },
  {
    "text": "as in the cloud provider credentials for the accounts the VPC and security groups",
    "start": "2215700",
    "end": "2222599"
  },
  {
    "text": "that you would want to consume on cloud provider all of them are coming in through the config map and secrets",
    "start": "2222599",
    "end": "2230220"
  },
  {
    "text": "configured on your original kubernetes control planes so all of that will be will be stored on the control plane that",
    "start": "2230220",
    "end": "2237690"
  },
  {
    "text": "is the main control plane that is driving the scheduling of the pods if if",
    "start": "2237690",
    "end": "2243960"
  },
  {
    "text": "this if my understanding of the secrets is incorrect manish please let me know if there are any other secrets that you",
    "start": "2243960",
    "end": "2250740"
  },
  {
    "text": "are talking about he got it he got it",
    "start": "2250740",
    "end": "2260690"
  },
  {
    "text": "okay Thank You Daniel Jason asked can",
    "start": "2260690",
    "end": "2269849"
  },
  {
    "text": "you have multiple virtual pods where difficult visual parts can be",
    "start": "2269849",
    "end": "2275930"
  },
  {
    "text": "method methods to different Pro Publica providers yes for sure yeah so that is",
    "start": "2275930",
    "end": "2284369"
  },
  {
    "start": "2282000",
    "end": "2320000"
  },
  {
    "text": "the one of the main motivations for developing nodelist",
    "start": "2284369",
    "end": "2289470"
  },
  {
    "text": "is that we would want you to be achieve something like this where you have a",
    "start": "2289470",
    "end": "2295170"
  },
  {
    "text": "single cloud control plane and you have some thoughts running gone say aw is",
    "start": "2295170",
    "end": "2300569"
  },
  {
    "text": "some thoughts on on-prem some parts and azure some parts on TCP or maybe all cloud in the future so you can have",
    "start": "2300569",
    "end": "2308010"
  },
  {
    "text": "multiple virtual cubelets that are dispatching parts to various cloud providers so you have one one cloud",
    "start": "2308010",
    "end": "2316799"
  },
  {
    "text": "provider that's configured for virtual work and let me show you a picture so",
    "start": "2316799",
    "end": "2322289"
  },
  {
    "start": "2320000",
    "end": "2448000"
  },
  {
    "text": "you have one a cloud provider that's configured per virtual work a node and",
    "start": "2322289",
    "end": "2327299"
  },
  {
    "text": "you can run multiple what should work on ORS because at the end of the day they're simply pods so you can run",
    "start": "2327299",
    "end": "2333809"
  },
  {
    "text": "multiple virtual worker nodes that are that are dispatching parts to various",
    "start": "2333809",
    "end": "2339420"
  },
  {
    "text": "cloud providers a subset of that question is you can Ranma we'll work a nodes that are dispatching",
    "start": "2339420",
    "end": "2345120"
  },
  {
    "text": "parts to multiple availability zones within a within a given region if you",
    "start": "2345120",
    "end": "2350430"
  },
  {
    "text": "want to do multi reach my TAC fell over H a scenario as well so the the base",
    "start": "2350430",
    "end": "2357720"
  },
  {
    "text": "unit for a virtual worker node is a single region is a single zone in a single region for a single cloud",
    "start": "2357720",
    "end": "2363900"
  },
  {
    "text": "provider the virtual worker node is a very lightweight pod so you can run as many parts as you want to ship to",
    "start": "2363900",
    "end": "2370410"
  },
  {
    "text": "various cloud providers various regions etc does that make sense",
    "start": "2370410",
    "end": "2376670"
  },
  {
    "text": "Marie from this question we can we can",
    "start": "2379910",
    "end": "2387740"
  },
  {
    "text": "give some preferable from a cloud",
    "start": "2387740",
    "end": "2393840"
  },
  {
    "text": "provider like what something like which one is more expensive than others so I",
    "start": "2393840",
    "end": "2402060"
  },
  {
    "text": "will shoot some more more CP something there something like this we can shoot",
    "start": "2402060",
    "end": "2408720"
  },
  {
    "text": "this or give you sorry is that the end",
    "start": "2408720",
    "end": "2416700"
  },
  {
    "text": "of the question question yes yeah it's",
    "start": "2416700",
    "end": "2422850"
  },
  {
    "text": "my question because sorry but do you have more questions from any track",
    "start": "2422850",
    "end": "2429960"
  },
  {
    "text": "tragic and tragic that is the ranchers",
    "start": "2429960",
    "end": "2436380"
  },
  {
    "text": "key free F low footprint lightweight",
    "start": "2436380",
    "end": "2441650"
  },
  {
    "text": "optimizes for our erm support Nova's little coaster",
    "start": "2441650",
    "end": "2448340"
  },
  {
    "text": "let me address the first question I couldn't hear the second one clearly so I might request you to repeat it so the",
    "start": "2448340",
    "end": "2455220"
  },
  {
    "text": "for the first question yes you can set affinity for a certain cloud provider which is which is something that can be",
    "start": "2455220",
    "end": "2463740"
  },
  {
    "text": "configured from your kubernetes control plane itself so if you have let's say one virtual queue black for AWS and one",
    "start": "2463740",
    "end": "2471600"
  },
  {
    "text": "virtual cube-like for Ashes they simply appear as nodes worker nodes to the kubernetes",
    "start": "2471600",
    "end": "2477700"
  },
  {
    "text": "control plane so we can enable you to define policies as to just having an",
    "start": "2477700",
    "end": "2485440"
  },
  {
    "text": "affinity for a part to a certain worker node based on metric SLA metrics like",
    "start": "2485440",
    "end": "2491020"
  },
  {
    "text": "cost or provisioning times or any other constraints that you might have like for example what is the cheapest cloud",
    "start": "2491020",
    "end": "2498100"
  },
  {
    "text": "provider at the moment for running my GPU workloads so you can express these",
    "start": "2498100",
    "end": "2503380"
  },
  {
    "text": "essays as node constraints on via the kubernetes control plane and that will",
    "start": "2503380",
    "end": "2510520"
  },
  {
    "text": "drive the dispatching of the parts to the worker nodes that are associated with each cloud provider so that's",
    "start": "2510520",
    "end": "2517930"
  },
  {
    "text": "something that is a very compelling use case for no less because being able to",
    "start": "2517930",
    "end": "2523720"
  },
  {
    "text": "switch between various cloud providers via a single control plane in a programmatic policy driven Bay is",
    "start": "2523720",
    "end": "2531280"
  },
  {
    "text": "something that's super useful for you to again enable you to focus on your business instead of curating pad compute",
    "start": "2531280",
    "end": "2537760"
  },
  {
    "text": "on each cloud provider Paulo could you please repeat the question about Rancher",
    "start": "2537760",
    "end": "2543610"
  },
  {
    "text": "I didn't catch it completely yes those renters TR t3s that is Eliza for EE RM",
    "start": "2543610",
    "end": "2555780"
  },
  {
    "text": "support no as long as you talk concepts",
    "start": "2555780",
    "end": "2560940"
  },
  {
    "text": "the question C key has tr3 support this",
    "start": "2560940",
    "end": "2566260"
  },
  {
    "text": "concept of Nova and key are three I haven't unfamiliar with Rancher but I'm",
    "start": "2566260",
    "end": "2573490"
  },
  {
    "text": "not familiar with the product ER three so let me look it up and I will respond",
    "start": "2573490",
    "end": "2579310"
  },
  {
    "text": "to it as part of FAQ in the slide deck but Rancher itself since it is managing",
    "start": "2579310",
    "end": "2585550"
  },
  {
    "text": "kubernetes control planes any kubernetes control plane can be supercharged to",
    "start": "2585550",
    "end": "2591580"
  },
  {
    "text": "notice because the virtual work a node is simply a pod that is dispatched to",
    "start": "2591580",
    "end": "2596620"
  },
  {
    "text": "the control plane so you should be able to run what you work a node on any",
    "start": "2596620",
    "end": "2602260"
  },
  {
    "text": "rancher managed control plane itself let me look at key s3 and update address",
    "start": "2602260",
    "end": "2609220"
  },
  {
    "text": "go into the specific details of the question in the slide deck as a follow up okay excellent no we don't have more",
    "start": "2609220",
    "end": "2618609"
  },
  {
    "text": "questions I want to thank you so much very wise to have some great",
    "start": "2618609",
    "end": "2623770"
  },
  {
    "text": "presentation we learn a lot you have much more to learn and use with this",
    "start": "2623770",
    "end": "2629830"
  },
  {
    "text": "very very cool thank you so much all right and that is all the questions",
    "start": "2629830",
    "end": "2634990"
  },
  {
    "text": "[Music] everyone the webinar record in as wise",
    "start": "2634990",
    "end": "2640210"
  },
  {
    "text": "will be violated today we are looking for our to see you at the future CF",
    "start": "2640210",
    "end": "2647200"
  },
  {
    "text": "Magna have a birthday in this state bye-bye thank you",
    "start": "2647200",
    "end": "2655080"
  }
]