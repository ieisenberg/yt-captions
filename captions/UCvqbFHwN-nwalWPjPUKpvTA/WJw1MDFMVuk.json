[
  {
    "text": "hey kubecon uh happy to be here uh let's dive into our presentation today",
    "start": "80",
    "end": "6240"
  },
  {
    "text": "we're talking about managing applications in production and specifically using home",
    "start": "6240",
    "end": "11759"
  },
  {
    "text": "versus ytt and cap to do so i am chaterupa i work at vmware um",
    "start": "11759",
    "end": "19119"
  },
  {
    "text": "and i have been working on deployment and packaging um for a few years now uh previously",
    "start": "19119",
    "end": "26160"
  },
  {
    "text": "working uh related to cloud foundry and now on kubernetes that's a picture of me in glasgow back when traveling",
    "start": "26160",
    "end": "33200"
  },
  {
    "text": "internationally was still a thing and i'm dmitry i also work with rupa",
    "start": "33200",
    "end": "39360"
  },
  {
    "text": "on deployment group i've been bouncing around in vm and container",
    "start": "39360",
    "end": "46160"
  },
  {
    "text": "orchestration for a while uh happy to be here",
    "start": "46160",
    "end": "51200"
  },
  {
    "text": "so in today's talk we'll cover a few things we'll talk about what we really value in deployment tools and what we're",
    "start": "51520",
    "end": "57680"
  },
  {
    "text": "looking for there we'll see how a deployment workflow goes on kubernetes what are some",
    "start": "57680",
    "end": "65040"
  },
  {
    "text": "challenges we faced with hum in regards to this deployment workflow",
    "start": "65040",
    "end": "70320"
  },
  {
    "text": "and then finally we'll talk about some insights we've learned from deploying in production at various",
    "start": "70320",
    "end": "76320"
  },
  {
    "text": "scales um and talk about why we built ytt and cap based on our experience managing",
    "start": "76320",
    "end": "82960"
  },
  {
    "text": "these applications in production so what do we really want from",
    "start": "82960",
    "end": "88000"
  },
  {
    "text": "deployment tools well from our experience um both with large-scale",
    "start": "88000",
    "end": "93840"
  },
  {
    "text": "production applications and smaller scale these are really the things that we've come to value so first",
    "start": "93840",
    "end": "100000"
  },
  {
    "text": "is safety we want to be able to catch mistakes before they happen and especially so in",
    "start": "100000",
    "end": "106720"
  },
  {
    "text": "production we want reliability from our tools so we want it to be predictable we want to",
    "start": "106720",
    "end": "111920"
  },
  {
    "text": "know what is going to happen is what we expect to happen",
    "start": "111920",
    "end": "117200"
  },
  {
    "text": "we want transparency so we want to know what's going on with the tool what's going on with our deployments while it's going on",
    "start": "117200",
    "end": "123759"
  },
  {
    "text": "and this kind of flows into the next point of debuggability because we can use that information",
    "start": "123759",
    "end": "130319"
  },
  {
    "text": "to fix things when things inevitably go wrong and then finally we want speed so we",
    "start": "130319",
    "end": "136959"
  },
  {
    "text": "don't want the tools to be slow we want to keep those fast feedback loops so that we can make changes",
    "start": "136959",
    "end": "143840"
  },
  {
    "text": "once we have these things ultimately we want the deployment tool to be boring",
    "start": "145680",
    "end": "150879"
  },
  {
    "text": "we want it to get out of our way so that we can go about and do the things we actually set out to do",
    "start": "150879",
    "end": "157840"
  },
  {
    "text": "so helm is widely used in the community today and so we looked",
    "start": "158800",
    "end": "165760"
  },
  {
    "text": "at home because we saw lots of people having good experiences with it and",
    "start": "165760",
    "end": "172959"
  },
  {
    "text": "we used it to deploy third-party software we wanted the same thing to deploy our own applications we wanted",
    "start": "172959",
    "end": "179280"
  },
  {
    "text": "the same tools and workflows however when we started using home we faced various challenges",
    "start": "179280",
    "end": "184720"
  },
  {
    "text": "some due to the design choices that are made by hub and some concrete bugs that we encountered",
    "start": "184720",
    "end": "189920"
  },
  {
    "text": "and we'll discuss both of these categories in this talk and describe why hum wasn't the right",
    "start": "189920",
    "end": "195200"
  },
  {
    "text": "choice for us let's talk a little bit about the end-to-end deployment workflow",
    "start": "195200",
    "end": "201360"
  },
  {
    "text": "now in our experience this can really be broken down into these four discrete steps",
    "start": "201360",
    "end": "206400"
  },
  {
    "text": "and thinking about each of these as cooked kind of smaller jobs to be done such as",
    "start": "206400",
    "end": "211840"
  },
  {
    "text": "authoring configuration then taking that configuration and packaging and distributing it",
    "start": "211840",
    "end": "217599"
  },
  {
    "text": "then consuming that configuration customizing it to your environment and then finally deploying it",
    "start": "217599",
    "end": "223519"
  },
  {
    "text": "and thinking about this in each of these steps makes it so that it's more transparent and we know what's going on",
    "start": "223519",
    "end": "229200"
  },
  {
    "text": "in each step and it's safer so we can catch mistakes as they happen in every step",
    "start": "229200",
    "end": "234239"
  },
  {
    "text": "rather than learning at the very end that something went awry",
    "start": "234239",
    "end": "240319"
  },
  {
    "text": "a helpful terminology that we found that we'll use throughout this presentation is thinking about the configuration",
    "start": "240319",
    "end": "246080"
  },
  {
    "text": "author and configuration consumer and for third-party software the author and consumer are different right so",
    "start": "246080",
    "end": "252080"
  },
  {
    "text": "we're consuming software that that is written by someone else however for software that we write and",
    "start": "252080",
    "end": "257359"
  },
  {
    "text": "deploy to production ourselves we play both of these roles and ideally we would like the tools and workflows to",
    "start": "257359",
    "end": "263280"
  },
  {
    "text": "be the same for both configuration authors and consumers and if we can think about these things",
    "start": "263280",
    "end": "269360"
  },
  {
    "text": "uh you know these four steps a separate jobs to be done then we kind of started wondering can we",
    "start": "269360",
    "end": "274400"
  },
  {
    "text": "create clean api boundaries between these so that consumers can pick and choose tools of their",
    "start": "274400",
    "end": "281040"
  },
  {
    "text": "choice for each of these pieces and we'll discuss this approach more in this talk but first let's get",
    "start": "281040",
    "end": "288720"
  },
  {
    "text": "started with uh authoring configuration so the main problem we're trying to solve",
    "start": "288720",
    "end": "294320"
  },
  {
    "text": "is we want to be able to provide some mechanism such as a template to allow users",
    "start": "294320",
    "end": "300240"
  },
  {
    "text": "deploying software to customize it to their needs",
    "start": "300240",
    "end": "305360"
  },
  {
    "text": "now most templating tools out there including home uh are based on text templating and",
    "start": "305520",
    "end": "312000"
  },
  {
    "text": "here's an example that you know is is using how many will look very familiar to many of you in the audience",
    "start": "312000",
    "end": "318800"
  },
  {
    "text": "one drawback with text templating and and in this example is that i have to constantly think about",
    "start": "318800",
    "end": "325199"
  },
  {
    "text": "constructing my own yamo and that is error prone so to have a safer tool",
    "start": "325199",
    "end": "331680"
  },
  {
    "text": "i'd like stronger guarantees that whatever i write always produces valid yamo and i don't have to worry about",
    "start": "331680",
    "end": "338320"
  },
  {
    "text": "the right indentation and coding values for vmware escaping i'd like the tool to be able to take on",
    "start": "338320",
    "end": "343520"
  },
  {
    "text": "those problems for me another drawback with this approach here is that if you think about configuration",
    "start": "343520",
    "end": "349440"
  },
  {
    "text": "knobs validations whatever else while also making sure that i'm constructing valid yamo",
    "start": "349440",
    "end": "355039"
  },
  {
    "text": "and intuitively i want to think about the data and its structure separately and then think about",
    "start": "355039",
    "end": "361440"
  },
  {
    "text": "serializing to yaml as a separate or a final step",
    "start": "361440",
    "end": "367520"
  },
  {
    "text": "now in this example we're doing the same thing as what you saw above or before but with ytt and you'll notice",
    "start": "367520",
    "end": "373919"
  },
  {
    "text": "that i'm writing white valid yaml the entire time so i can focus on",
    "start": "373919",
    "end": "379199"
  },
  {
    "text": "the values that i'm templating instead of thinking of constructing that yaml uh and then the data values uh pod",
    "start": "379199",
    "end": "385840"
  },
  {
    "text": "annotations here is provided by a configuration consumer and it's associated with a particular",
    "start": "385840",
    "end": "391759"
  },
  {
    "text": "yaml node by ytt",
    "start": "391759",
    "end": "395840"
  },
  {
    "text": "now let's see an example that highlights the advantage of using data structures instead of text",
    "start": "397520",
    "end": "403680"
  },
  {
    "text": "in this example we want to build a config mac with a host port and a lowercase output name uh notice in the config",
    "start": "403680",
    "end": "411039"
  },
  {
    "text": "function at arrow1 i'm returning a map containing these key value pairs not",
    "start": "411039",
    "end": "417759"
  },
  {
    "text": "text this then enables me later to serialize this map to json when converting or when",
    "start": "417759",
    "end": "423680"
  },
  {
    "text": "inserting it into the config map at arrow 3. since this is a simple",
    "start": "423680",
    "end": "429280"
  },
  {
    "text": "example i'm just directly taking this map and converting it to json",
    "start": "429280",
    "end": "435199"
  },
  {
    "text": "but you can imagine performing other more complex operations on the map too the key point being that since it's a",
    "start": "435199",
    "end": "441360"
  },
  {
    "text": "map i can modify it and transform it and take advantage of that structure instead of treating it as text",
    "start": "441360",
    "end": "447599"
  },
  {
    "text": "note that you don't always have to manually serialize all data structures next to arrow 2 you'll see i'm using the",
    "start": "447599",
    "end": "454240"
  },
  {
    "text": "output of the labels function and ytt will serialize the output of this function to yaml for you",
    "start": "454240",
    "end": "462000"
  },
  {
    "text": "taking this concept of using functions and thinking data structures a little bit further uh we realized that actually templating",
    "start": "463440",
    "end": "470000"
  },
  {
    "text": "can be viewed as one big function there are some parameters on which the templates run and there is a resulting",
    "start": "470000",
    "end": "476400"
  },
  {
    "text": "structure you can either modify the structure further or if you're done",
    "start": "476400",
    "end": "481680"
  },
  {
    "text": "you can serialize it to yaml and then get the rendered configuration to make things easier for the",
    "start": "481680",
    "end": "487280"
  },
  {
    "text": "configuration consumer we have found it useful to have parameters or data values follow",
    "start": "487280",
    "end": "493199"
  },
  {
    "text": "a particular schema now in our templating adventures one",
    "start": "493199",
    "end": "498800"
  },
  {
    "text": "thing we encountered often is that we were in situations where we wanted to install open source software or install",
    "start": "498800",
    "end": "504560"
  },
  {
    "text": "third party software in this case we wanted to install a cni called calico the instructions on calico's website",
    "start": "504560",
    "end": "511440"
  },
  {
    "text": "mentioned downloading calico type type configuration yaml file and then changing the number of replicas based on",
    "start": "511440",
    "end": "518080"
  },
  {
    "text": "your environment and i could use customize overlay to do this",
    "start": "518080",
    "end": "523680"
  },
  {
    "text": "but i wanted something which we could do within this templating tool and following the paradigm that we shared",
    "start": "523680",
    "end": "530399"
  },
  {
    "text": "before and this is why ytt overlays are helpful overlays with ytt provide you with a way",
    "start": "530399",
    "end": "536720"
  },
  {
    "text": "to patch existing yaml um and so you'll see on arrow one we get the",
    "start": "536720",
    "end": "542720"
  },
  {
    "text": "calico typha yamo and then we apply the yamo",
    "start": "542720",
    "end": "548800"
  },
  {
    "text": "uh or apply the overlay on arrow two and then finally an arrow three you'll",
    "start": "548800",
    "end": "554160"
  },
  {
    "text": "see there's the change replicas which is the over labor appliance the chain replicas has also been generated",
    "start": "554160",
    "end": "559680"
  },
  {
    "text": "within um ytt",
    "start": "559680",
    "end": "563839"
  },
  {
    "text": "so now let's talk a little bit about the execution environment of those functions that we're running prioritizing safety",
    "start": "565279",
    "end": "572240"
  },
  {
    "text": "we wanted to make sure that the environment did not have access to entropy network disk the osa environment or time",
    "start": "572240",
    "end": "579279"
  },
  {
    "text": "this way the execution environment is always the same and ytt is reliable as a tool it also makes ytt",
    "start": "579279",
    "end": "587279"
  },
  {
    "text": "stateless now uh you may wonder if you don't have access to these things that means you",
    "start": "587279",
    "end": "592640"
  },
  {
    "text": "cannot use uh you cannot generate secrets on client-side or generate random strings",
    "start": "592640",
    "end": "598800"
  },
  {
    "text": "and that's true um we recommend generating secrets and storing any other state on the cluster",
    "start": "598800",
    "end": "604000"
  },
  {
    "text": "itself and this is what all of this looks like",
    "start": "604000",
    "end": "610480"
  },
  {
    "text": "in action so if you were to use ytt um you could have your templates",
    "start": "610480",
    "end": "615600"
  },
  {
    "text": "in a config directory or any other directory of your choice and then apply values to it and then ytt would",
    "start": "615600",
    "end": "621040"
  },
  {
    "text": "render the yaml for you which you can then use with the deployment tool of your choice in this case we're using kukaro",
    "start": "621040",
    "end": "629120"
  },
  {
    "text": "so let's talk about packaging and distribution now that we've figured out how to write our configuration",
    "start": "631040",
    "end": "638480"
  },
  {
    "text": "so what is a bundle uh there is no formal definition of a bundle uh as far as we know however",
    "start": "639040",
    "end": "647040"
  },
  {
    "text": "the way we look at it is uh there needs to be some kind of a bond between",
    "start": "647040",
    "end": "653360"
  },
  {
    "text": "a set of configuration and a set of images that that configuration uses now as all",
    "start": "653360",
    "end": "659440"
  },
  {
    "text": "of you know helm includes packaging component in its in its tool uh people distribute charts",
    "start": "659440",
    "end": "667120"
  },
  {
    "text": "over helm repositories uh you know i think it's uh it's a tgz that",
    "start": "667120",
    "end": "672959"
  },
  {
    "text": "gets put in the server somewhere more recently though helm has been encouraging people to use",
    "start": "672959",
    "end": "679519"
  },
  {
    "text": "registry as the storage uh for helm charts right so what you do is",
    "start": "679519",
    "end": "684959"
  },
  {
    "text": "you take the the helm chart you run the command with helm",
    "start": "684959",
    "end": "690240"
  },
  {
    "text": "and that helm chart suddenly becomes an image inside that registry right and ultimately somebody else can pull it down and uh",
    "start": "690240",
    "end": "696720"
  },
  {
    "text": "and use it right um now helm itself does not actually care about what",
    "start": "696720",
    "end": "702000"
  },
  {
    "text": "images you're using within the configuration right so it's really just the top part of",
    "start": "702000",
    "end": "709200"
  },
  {
    "text": "what helm is doing it's dealing only with the configuration image for our own use cases we actually need",
    "start": "709200",
    "end": "717440"
  },
  {
    "text": "something more specific because you know in a lot of our environments we need to",
    "start": "717440",
    "end": "723440"
  },
  {
    "text": "bring down the images that are being used by the configuration into customer registries uh",
    "start": "723440",
    "end": "730720"
  },
  {
    "text": "to support cases like firewalled environments or air-gapped environments we need effectively a way to keep track",
    "start": "730720",
    "end": "736800"
  },
  {
    "text": "of what are these app images that are being referenced by the configuration and so we we see bundle as",
    "start": "736800",
    "end": "743519"
  },
  {
    "text": "one thing that combines the two together uh what's also important is that we want to retain",
    "start": "743519",
    "end": "749600"
  },
  {
    "text": "uh for the bundle image uh the same digest throughout that way the customer is absolutely sure that they're",
    "start": "749600",
    "end": "755519"
  },
  {
    "text": "installing the software that they originally wanted to install even after it gets copied between various",
    "start": "755519",
    "end": "761920"
  },
  {
    "text": "registries so how does this look well this looks",
    "start": "761920",
    "end": "767839"
  },
  {
    "text": "something like image package push with a set of files uh this could be any set of files could be ytt templates",
    "start": "767839",
    "end": "774079"
  },
  {
    "text": "plain yaml maybe even a helm chart source and ultimately it's image package pool",
    "start": "774079",
    "end": "779120"
  },
  {
    "text": "uh from you know a different location to download the bundle",
    "start": "779120",
    "end": "784399"
  },
  {
    "text": "and maybe in between those two commands you do end up using image package copy command to transfer the bundle from one",
    "start": "784399",
    "end": "791040"
  },
  {
    "text": "repository to another well now that we're done with packaging",
    "start": "791040",
    "end": "796399"
  },
  {
    "text": "and distribution um customizing configuration is our next",
    "start": "796399",
    "end": "801519"
  },
  {
    "text": "step in our journey we've seen out there a lot of helm chart",
    "start": "801519",
    "end": "808240"
  },
  {
    "text": "authors run into a problem that we call api mirroring over time",
    "start": "808240",
    "end": "816000"
  },
  {
    "text": "consumers of the charts request to have various configuration knobs be added to",
    "start": "816000",
    "end": "821279"
  },
  {
    "text": "the helm charts and that becomes a big problem for the authors right because",
    "start": "821279",
    "end": "827600"
  },
  {
    "text": "various users may need to have various use cases satisfied and ultimately the",
    "start": "827600",
    "end": "833040"
  },
  {
    "text": "set of values uh the template values grows maybe even to thousands of options",
    "start": "833040",
    "end": "839600"
  },
  {
    "text": "that's not something that we like and we don't think that's a scalable approach so",
    "start": "839600",
    "end": "844800"
  },
  {
    "text": "let's let's throw that out ideally the way we look at solving this problem",
    "start": "844800",
    "end": "849839"
  },
  {
    "text": "is saying that there is a percentage of configuration that's very common to everyone right and",
    "start": "849839",
    "end": "855519"
  },
  {
    "text": "that should be passed in as values to the templates right so helm values or ytt data values",
    "start": "855519",
    "end": "861360"
  },
  {
    "text": "once the template's done its job and returns the data structure back to us we should be able to use a tool like",
    "start": "861360",
    "end": "868639"
  },
  {
    "text": "customize or ytt overlay to apply certain set of changes",
    "start": "868639",
    "end": "874639"
  },
  {
    "text": "to that yaml and finally spear out the ammo for the following steps ytt overlays is",
    "start": "874639",
    "end": "881279"
  },
  {
    "text": "a feature of itt so it's convenient to have the various uh functionality that you can do",
    "start": "881279",
    "end": "888560"
  },
  {
    "text": "in your templates to be also done within the overlays so we think combining the templating and overlaying",
    "start": "888560",
    "end": "895440"
  },
  {
    "text": "approach is one tool is a very flexible and effective approach",
    "start": "895440",
    "end": "901040"
  },
  {
    "text": "so this how overlay typically looks like it has a part about describing how to find a particular yaml document to",
    "start": "901040",
    "end": "906560"
  },
  {
    "text": "modify within a stream of documents so in this case it will find the single deployment",
    "start": "906560",
    "end": "911839"
  },
  {
    "text": "did you will raise an error if it finds more or less you can tweak those settings of course",
    "start": "911839",
    "end": "917120"
  },
  {
    "text": "and then it has a second uh separate section that defines what actually to change within that yaml",
    "start": "917120",
    "end": "924639"
  },
  {
    "text": "deployment within the yaml document that's been found and in this case we're setting a priority class name too",
    "start": "924639",
    "end": "931759"
  },
  {
    "text": "important so here's maybe a more complicated example we needed for our dev",
    "start": "931759",
    "end": "937360"
  },
  {
    "text": "environments to shrink their footprint so we wanted to say find any of the deployment",
    "start": "937360",
    "end": "943519"
  },
  {
    "text": "demon sets stateful sets if if they have init containers go ahead",
    "start": "943519",
    "end": "949120"
  },
  {
    "text": "and for each one of those containers remove the resources section and remove the liveliness probe resources",
    "start": "949120",
    "end": "955199"
  },
  {
    "text": "readiness probe and so on and so forth so we have to cut this overlay short for this slide",
    "start": "955199",
    "end": "961120"
  },
  {
    "text": "very convenient and so this is how it ends up to be looking on a command line you combine you extend that ytt",
    "start": "961120",
    "end": "969040"
  },
  {
    "text": "invocation to include additional files and those files may include overlays",
    "start": "969040",
    "end": "974880"
  },
  {
    "text": "and so you're able to specify your templates your data values your overlays all in one command",
    "start": "974880",
    "end": "982560"
  },
  {
    "text": "so that's uh that's it for customizing configuration let's take a look at deploying um",
    "start": "982560",
    "end": "990320"
  },
  {
    "text": "deploying step ultimately boils down to taking configuration and putting it into",
    "start": "990320",
    "end": "995519"
  },
  {
    "text": "a cluster we've had some challenges uh doing deploys",
    "start": "995519",
    "end": "1002240"
  },
  {
    "text": "in a repeatable manner we've faced various errors and various cases that were",
    "start": "1002240",
    "end": "1008560"
  },
  {
    "text": "surprised by but of course we also had successes and",
    "start": "1008560",
    "end": "1013920"
  },
  {
    "text": "so this is one of the examples uh example errors that we've seen sometimes occur",
    "start": "1013920",
    "end": "1019040"
  },
  {
    "text": "that was pretty hard to debug we've also had somewhat of a lack of confidence",
    "start": "1019040",
    "end": "1024959"
  },
  {
    "text": "about the operations that will take place because helm was not quite transparent about the",
    "start": "1024959",
    "end": "1030319"
  },
  {
    "text": "changes that i was going to make to the cluster and even if there were options to uh you",
    "start": "1030319",
    "end": "1035438"
  },
  {
    "text": "know tweak how the deploy would happen it was still not quite clear if this uh tweak like a force flag would",
    "start": "1035439",
    "end": "1041678"
  },
  {
    "text": "actually have some unintended consequences so we thought well there's got to be a",
    "start": "1041679",
    "end": "1048079"
  },
  {
    "text": "more lightweight way to make us comfortable do the deploys",
    "start": "1048079",
    "end": "1053440"
  },
  {
    "text": "uh and so we wanted to write a tool uh that really focuses on safety reliability and transparency",
    "start": "1053440",
    "end": "1061760"
  },
  {
    "text": "and so how do we actually see deploying to kubernetes work well we wanted to build up on a basic",
    "start": "1061840",
    "end": "1068000"
  },
  {
    "text": "kubernetes concept of labels right uh a collection of resources that has the same label",
    "start": "1068000",
    "end": "1073840"
  },
  {
    "text": "uh we see it as a kubernetes application uh nothing else really on top of that",
    "start": "1073840",
    "end": "1080640"
  },
  {
    "text": "and of course over time as you want as you changing your application some resources will be removed some",
    "start": "1080640",
    "end": "1086640"
  },
  {
    "text": "updated some created uh maybe tweaked in other ways and so we wanted that to happen",
    "start": "1086640",
    "end": "1093200"
  },
  {
    "text": "for all of our applications consistently so let's actually jump into a demo and",
    "start": "1093200",
    "end": "1099520"
  },
  {
    "text": "take a look at how is it actually possible with this tool that we've made",
    "start": "1099520",
    "end": "1105840"
  },
  {
    "text": "so here i'm going to type in capital s to list the applications on my cluster",
    "start": "1105840",
    "end": "1113039"
  },
  {
    "text": "this cluster does not have currently any applications so let's actually add one",
    "start": "1113039",
    "end": "1118480"
  },
  {
    "text": "we're going to call it app and we're going to give it an initial yaml",
    "start": "1118480",
    "end": "1124960"
  },
  {
    "text": "and so what we see on the screen over here is that cap will tell us before doing any kind of a change to the",
    "start": "1124960",
    "end": "1130720"
  },
  {
    "text": "cluster uh what's actually going to happen we're going to create a deployment",
    "start": "1130720",
    "end": "1136080"
  },
  {
    "text": "we're going to create a service and then we're also going to wait for those resources to reconcile so let's press",
    "start": "1136080",
    "end": "1142880"
  },
  {
    "text": "yes now at the same time let's take a look at that configuration configuration is very simple it's just a basic service",
    "start": "1142880",
    "end": "1149039"
  },
  {
    "text": "and a basic deployment we do have this environment variable that we call hello message that has a particular value",
    "start": "1149039",
    "end": "1155919"
  },
  {
    "text": "we're using an existing docker image so nothing out of ordinary so a few seconds later cap tells us",
    "start": "1155919",
    "end": "1163200"
  },
  {
    "text": "the deployment has reconciled right so at some point it saw that the container was creating the pod eventually became ready and",
    "start": "1163200",
    "end": "1171360"
  },
  {
    "text": "cap succeeded over here right so this notion of having a",
    "start": "1171360",
    "end": "1178559"
  },
  {
    "text": "clear log of what's happening to your cluster uh while it's happening is very",
    "start": "1178559",
    "end": "1184240"
  },
  {
    "text": "appealing to us uh a summary of the changes that's about to happen before they happen",
    "start": "1184240",
    "end": "1190000"
  },
  {
    "text": "also increases our confidence that we're actually making a good change uh and also even a convenient tiny",
    "start": "1190000",
    "end": "1196720"
  },
  {
    "text": "little line over here that tells us which cluster we're targeting gives us even uh gives us a little bit",
    "start": "1196720",
    "end": "1203280"
  },
  {
    "text": "of a boost of yes we're actually doing the right thing we're not deleting production cluster maybe when",
    "start": "1203280",
    "end": "1209360"
  },
  {
    "text": "we're when we meant to update a staging environment so let's actually take a look at this",
    "start": "1209360",
    "end": "1214720"
  },
  {
    "text": "application it is it is if you notice here six resources",
    "start": "1214720",
    "end": "1222240"
  },
  {
    "text": "even though we only deployed two resources right so cap has capability based on those labels to actually track some of the",
    "start": "1222240",
    "end": "1228400"
  },
  {
    "text": "resources that cluster creates right as you can see over here the owner uh the owner column specifies cap and",
    "start": "1228400",
    "end": "1235200"
  },
  {
    "text": "cluster as different owners for different resources so we cap only created deployment and service",
    "start": "1235200",
    "end": "1240320"
  },
  {
    "text": "uh so that's somewhat convenient we can now even see it in the tree view where some of the ownership references",
    "start": "1240320",
    "end": "1246640"
  },
  {
    "text": "are being accounted for and so deployment owns a replica set owns a pod",
    "start": "1246640",
    "end": "1252799"
  },
  {
    "text": "and even for some of you who don't use some of the other external logging tools it might be",
    "start": "1252880",
    "end": "1259600"
  },
  {
    "text": "useful to be able to just say cap logs dash f dash eight app and actually see a live log from all of the pods within",
    "start": "1259600",
    "end": "1266080"
  },
  {
    "text": "that application of course you can also use other tools because uh the pods are labeled",
    "start": "1266080",
    "end": "1271520"
  },
  {
    "text": "uh you can use the other tools to to track the logs uh in bulk um so let's uh go ahead on",
    "start": "1271520",
    "end": "1279280"
  },
  {
    "text": "the second step over here and apply a change to the application that's ultimately where we're here for",
    "start": "1279280",
    "end": "1285039"
  },
  {
    "text": "uh so i will go and throw in this dash c flag uh it will show the changes that it's about",
    "start": "1285039",
    "end": "1290080"
  },
  {
    "text": "to make has a nice colorful diff it's telling us that we're going to create a new service",
    "start": "1290080",
    "end": "1296159"
  },
  {
    "text": "uh the service got renamed from simple app to simple app node we're actually changing a deployment a",
    "start": "1296159",
    "end": "1301280"
  },
  {
    "text": "little bit we have a value being switched to a config map reference we have a config map that",
    "start": "1301280",
    "end": "1307520"
  },
  {
    "text": "we're going to reference and then finally we have uh the",
    "start": "1307520",
    "end": "1312799"
  },
  {
    "text": "the deleted service so let's go ahead and apply that and again we'll see the progressive log",
    "start": "1312799",
    "end": "1319840"
  },
  {
    "text": "all right so before we jump into the next file over here let's take a look",
    "start": "1321679",
    "end": "1326720"
  },
  {
    "text": "over here for a second so we have the config map and we have the config map reference now some software cannot",
    "start": "1326720",
    "end": "1332720"
  },
  {
    "text": "reload configuration off of disk as it's running now even in some cases that might not be a good idea because you may",
    "start": "1332720",
    "end": "1338240"
  },
  {
    "text": "not want to apply that configuration to the entire set of pods that you might be running for your service right",
    "start": "1338240",
    "end": "1344400"
  },
  {
    "text": "and so we have this feature in cap called uh versioned resources really it makes the",
    "start": "1344400",
    "end": "1350559"
  },
  {
    "text": "resource immutable so any change to the config map will turn to be a new resource so let's",
    "start": "1350559",
    "end": "1356720"
  },
  {
    "text": "actually apply that and let's see what happens um so we'll see in our summary that we're creating a",
    "start": "1356720",
    "end": "1363039"
  },
  {
    "text": "new config map that has a suffix version one and we're also deleting the old config map and we also",
    "start": "1363039",
    "end": "1369200"
  },
  {
    "text": "have a change in the deployment because cap realizes that that config map is being referenced so it will update that reference",
    "start": "1369200",
    "end": "1376320"
  },
  {
    "text": "so that update will go ahead and complete and just to prove that this feature works",
    "start": "1376320",
    "end": "1383679"
  },
  {
    "text": "when we change the config map it shows you that hey we're going to create a new config map",
    "start": "1383679",
    "end": "1389360"
  },
  {
    "text": "with version two that's the change from the previous version right and then the version will be also",
    "start": "1389360",
    "end": "1395600"
  },
  {
    "text": "used in the deployment correctly as well let's go ahead and apply that and we'll see that we'll see that the",
    "start": "1395600",
    "end": "1402720"
  },
  {
    "text": "deployment kicks off now in helm uh this functionality really uh is up to the user of templates",
    "start": "1402720",
    "end": "1411600"
  },
  {
    "text": "the template arter has to do a little bit of manual bookkeeping they",
    "start": "1411600",
    "end": "1417840"
  },
  {
    "text": "have to let's say run the content of a config map through a digest and add that",
    "start": "1417840",
    "end": "1423200"
  },
  {
    "text": "configure that annotation onto the pod uh we think that a first class support for this kind of a",
    "start": "1423200",
    "end": "1429520"
  },
  {
    "text": "feature is uh more in line uh with with how we use uh somewhere tooling here um so let's uh",
    "start": "1429520",
    "end": "1438240"
  },
  {
    "text": "go ahead and um so i've made an update to be yaml right and so what is in 3a",
    "start": "1438240",
    "end": "1446559"
  },
  {
    "text": "in 3a we're adding a new resource a job it's a dummy little job that's",
    "start": "1446559",
    "end": "1452400"
  },
  {
    "text": "supposedly called does the db upgrade that's not of course happening in real life all we're doing",
    "start": "1452400",
    "end": "1458720"
  },
  {
    "text": "is sleeping for five seconds so let's go ahead and do that so we'll say 3a",
    "start": "1458720",
    "end": "1464799"
  },
  {
    "text": "we'll get our nice summary over here and then we'll apply that do note that",
    "start": "1464799",
    "end": "1470480"
  },
  {
    "text": "immediately we actually see logs from this job in line within the deploy progress that",
    "start": "1470480",
    "end": "1475600"
  },
  {
    "text": "again goes back to the transparency of what's happening in the deploy right and this is because of the little annotation that we added",
    "start": "1475600",
    "end": "1482000"
  },
  {
    "text": "over here telling cap hey please show this logs uh in line so okay we have this job now it's doing",
    "start": "1482000",
    "end": "1489120"
  },
  {
    "text": "a database migration let's go ahead and actually apply a change to it and we're going to change",
    "start": "1489120",
    "end": "1494720"
  },
  {
    "text": "just a tiny little bit over here we're going to change the job to say from done to finished",
    "start": "1494720",
    "end": "1500480"
  },
  {
    "text": "let's go ahead and see what happens oof so a big error this error is coming",
    "start": "1500480",
    "end": "1506000"
  },
  {
    "text": "directly from kubernetes api uh we actually want to format it uh in a",
    "start": "1506000",
    "end": "1511200"
  },
  {
    "text": "better way right we we try to pull out individual pieces in the list of the error",
    "start": "1511200",
    "end": "1516320"
  },
  {
    "text": "uh reasons and one of the reasons why i can actually see this is that we have spec template and spec",
    "start": "1516320",
    "end": "1521679"
  },
  {
    "text": "template field is immutable right so we cannot change it so this is one of the interesting things about kubernetes some resources may",
    "start": "1521679",
    "end": "1528960"
  },
  {
    "text": "decide that something is not allowed to be changed right and there potentially some other way to to cope with that",
    "start": "1528960",
    "end": "1535679"
  },
  {
    "text": "maybe to recreate a resource uh for port disruption budget for example before kubernetes 115 that was",
    "start": "1535679",
    "end": "1542640"
  },
  {
    "text": "the case couldn't update it had to delete create so we actually have a feature that we",
    "start": "1542640",
    "end": "1548640"
  },
  {
    "text": "think is more uh is more resilient to production usage we think",
    "start": "1548640",
    "end": "1557039"
  },
  {
    "text": "that a user should have to annotate a particular resource and state that it is",
    "start": "1557039",
    "end": "1562640"
  },
  {
    "text": "safe to recreate so this is somewhat of a different decision point compared to just adding a four slack for all of the resource",
    "start": "1562640",
    "end": "1569360"
  },
  {
    "text": "potentially right because who knows maybe some resources will fail with an error and they may have to get recreated if the",
    "start": "1569360",
    "end": "1576240"
  },
  {
    "text": "resource for whatever reason is invalid so let's go ahead and apply that yamo with our annotations and note that",
    "start": "1576240",
    "end": "1582559"
  },
  {
    "text": "actually cap tells us that hey there's a possibility that this will be replaced",
    "start": "1582559",
    "end": "1587760"
  },
  {
    "text": "and so we see our log again we see that job is successfully updated really",
    "start": "1587760",
    "end": "1593200"
  },
  {
    "text": "recreated in this case and it finishes great all right so we've got",
    "start": "1593200",
    "end": "1599039"
  },
  {
    "text": "uh we've got one more example over here so we have this job but the problem is",
    "start": "1599039",
    "end": "1607279"
  },
  {
    "text": "job is running at the same time as the deployment being updated right",
    "start": "1607279",
    "end": "1612400"
  },
  {
    "text": "now for some applications that's perfectly okay some applications though may want to actually do a db",
    "start": "1612400",
    "end": "1617600"
  },
  {
    "text": "migration before the application let's say starts right now there's various ways how to deal with this kind",
    "start": "1617600",
    "end": "1622880"
  },
  {
    "text": "of thing you may create a unique container but we think a more first-class feature",
    "start": "1622880",
    "end": "1628640"
  },
  {
    "text": "is deserved in this case so what we're doing here actually is we're annotating job to",
    "start": "1628640",
    "end": "1635760"
  },
  {
    "text": "be able to be scheduled as an update before the deployment and the deployment",
    "start": "1635760",
    "end": "1640960"
  },
  {
    "text": "is also annotated to say hey i am the deployment right now this is not specific to jobs and deployments",
    "start": "1640960",
    "end": "1646000"
  },
  {
    "text": "this could be applied to any resources so let's go ahead and actually try that out so we'll",
    "start": "1646000",
    "end": "1651360"
  },
  {
    "text": "we'll see what the diff is here so one we're changing config map which will trigger the deploy",
    "start": "1651360",
    "end": "1656480"
  },
  {
    "text": "uh and as you can see over here deploy is changing we're also changing the job so it will",
    "start": "1656480",
    "end": "1661760"
  },
  {
    "text": "actually run so let's see what happens so as you can see we got a job running",
    "start": "1661760",
    "end": "1666880"
  },
  {
    "text": "over here we've got some logs coming out we're waiting we're waiting for it to succeed okay it",
    "start": "1666880",
    "end": "1672799"
  },
  {
    "text": "succeeded and then finally after it succeeded we actually have a deployment update running and then it finishes",
    "start": "1672799",
    "end": "1679520"
  },
  {
    "text": "so the ordering here is really not a special feature to cap it is quite similar to namespace and crd",
    "start": "1679520",
    "end": "1687120"
  },
  {
    "text": "features uh within cap ordering of those uh it's the same system cab just exposes",
    "start": "1687120",
    "end": "1693440"
  },
  {
    "text": "and lets you use it yourself we don't treat crds for example any different from any other resource so",
    "start": "1693440",
    "end": "1699679"
  },
  {
    "text": "happy to deploy it and as an example if we take a real out there app",
    "start": "1699679",
    "end": "1707039"
  },
  {
    "text": "assert manager we can actually see how it all works out uh so here's a few resources there's a",
    "start": "1707039",
    "end": "1712399"
  },
  {
    "text": "single yaml file you don't have to split your cds or whatnot and you just let it go and cap will go ahead and deploy uh",
    "start": "1712399",
    "end": "1720399"
  },
  {
    "text": "cert manager and uh in a second or two all the pods should come up and the",
    "start": "1720399",
    "end": "1727120"
  },
  {
    "text": "cap will tell you insert manager is installed there it is all right so let's switch",
    "start": "1727120",
    "end": "1735360"
  },
  {
    "text": "back to our presentation so with the clean api boundaries and",
    "start": "1735360",
    "end": "1741760"
  },
  {
    "text": "small building blocks uh this is all beginning to to look good but ultimately",
    "start": "1741760",
    "end": "1746799"
  },
  {
    "text": "we said the goal of good deployment tools is to make it boring to get out of your way",
    "start": "1746799",
    "end": "1752960"
  },
  {
    "text": "and how can we get there how can we create a simple deployment experience we'll see some examples here so this is",
    "start": "1752960",
    "end": "1759840"
  },
  {
    "text": "uh some client-side deployment examples if you're using clis and in the first example we use ytt for",
    "start": "1759840",
    "end": "1766640"
  },
  {
    "text": "templating and then um cutoff for for deploying it in the second example we use all of the",
    "start": "1766640",
    "end": "1773360"
  },
  {
    "text": "tools that we've showcased here so we use image package to pull down a bundle and then use ytt to",
    "start": "1773360",
    "end": "1780480"
  },
  {
    "text": "template it with the appropriate data values and then use cap to deploy and then in the final example we",
    "start": "1780480",
    "end": "1786640"
  },
  {
    "text": "continue to use home to template maybe some third-party software that is shipped with home templates",
    "start": "1786640",
    "end": "1792159"
  },
  {
    "text": "and then use cap to deploy and so with this you can kind of see how as we've talked about before it",
    "start": "1792159",
    "end": "1797919"
  },
  {
    "text": "really allows you to break down that deployment into these different pieces uh giving you a little bit more",
    "start": "1797919",
    "end": "1804720"
  },
  {
    "text": "uh visibility into what's going on at each piece",
    "start": "1804720",
    "end": "1809840"
  },
  {
    "text": "and cli based experience as i showed before is is helpful but really what we want is for this to",
    "start": "1811120",
    "end": "1818080"
  },
  {
    "text": "happen behind the scenes almost in a boring way so ideally you want this happening on",
    "start": "1818080",
    "end": "1824000"
  },
  {
    "text": "your cluster you want some kind of continuous delivery mechanism especially",
    "start": "1824000",
    "end": "1829279"
  },
  {
    "text": "if you're running in production and that's exactly what we have with this tool called cap controller",
    "start": "1829279",
    "end": "1834880"
  },
  {
    "text": "so cap controller provides an app crd and that's what's here on the screen and it tells you very clearly the three",
    "start": "1834880",
    "end": "1842880"
  },
  {
    "text": "various things it's doing so what is it going to use for the fetch stage what strategy is it going to use and it",
    "start": "1842880",
    "end": "1848720"
  },
  {
    "text": "supports various strategies what is it going to use to template and again",
    "start": "1848720",
    "end": "1853919"
  },
  {
    "text": "different strategies there and then finally what is it going to use to deploy in this case cap so in the fetch stage right with various",
    "start": "1853919",
    "end": "1861120"
  },
  {
    "text": "strategies here we can either use image package to get a bundle we could use home fetch to go fetch some",
    "start": "1861120",
    "end": "1867679"
  },
  {
    "text": "home charts uh or you can use uh back it with a git repo and so this is where you can kind of use",
    "start": "1867679",
    "end": "1874159"
  },
  {
    "text": "it to do githubs like workflow and any changes to the exit repo",
    "start": "1874159",
    "end": "1879519"
  },
  {
    "text": "cap controller will watch on and make changes appropriately similarly for the template we're using",
    "start": "1879519",
    "end": "1886000"
  },
  {
    "text": "ytt templates here but you could also use home tablet",
    "start": "1886000",
    "end": "1892640"
  },
  {
    "text": "so what's next with these tools uh if what we presented here these ideas they",
    "start": "1892640",
    "end": "1898080"
  },
  {
    "text": "resonated with you uh you can learn more on k14s io",
    "start": "1898080",
    "end": "1903120"
  },
  {
    "text": "uh try to use cap or ytt on get ytt i o get capio we are always available",
    "start": "1903120",
    "end": "1910559"
  },
  {
    "text": "and chatty on the k14s slack channel on kubernetes so come talk with us share share how you",
    "start": "1910559",
    "end": "1916480"
  },
  {
    "text": "template and deploy today all of these projects that we shared are open source and the rest of the k-14s",
    "start": "1916480",
    "end": "1923200"
  },
  {
    "text": "tooling is open source as well and we uh welcome contributions to any of these projects uh and we love",
    "start": "1923200",
    "end": "1929919"
  },
  {
    "text": "hearing uh how you use these tools uh it really makes us happy so to come chat with us we hope you found",
    "start": "1929919",
    "end": "1936799"
  },
  {
    "text": "this talk valuable and thank you for your time",
    "start": "1936799",
    "end": "1941840"
  }
]