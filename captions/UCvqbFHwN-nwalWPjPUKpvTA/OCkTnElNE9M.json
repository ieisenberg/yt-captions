[
  {
    "text": "so hey everyone i am okan uh i work on",
    "start": "80",
    "end": "3760"
  },
  {
    "text": "identity solutions for vmware tanzu uh i",
    "start": "3760",
    "end": "7359"
  },
  {
    "text": "have worked on kubernetes for over five",
    "start": "7359",
    "end": "9519"
  },
  {
    "text": "years now and i have been co-chair for",
    "start": "9519",
    "end": "11519"
  },
  {
    "text": "cigot for over three years",
    "start": "11519",
    "end": "14480"
  },
  {
    "text": "and i'm margot crawford um i'm",
    "start": "14480",
    "end": "16800"
  },
  {
    "text": "an engineer for vmware tanza as well",
    "start": "16800",
    "end": "18640"
  },
  {
    "text": "working on pinniped which it simplifies",
    "start": "18640",
    "end": "20480"
  },
  {
    "text": "the kubernetes auth experience after",
    "start": "20480",
    "end": "22640"
  },
  {
    "text": "working on pinniped i've learned a lot",
    "start": "22640",
    "end": "23920"
  },
  {
    "text": "more about the features and shortcomings",
    "start": "23920",
    "end": "25359"
  },
  {
    "text": "of built-in kubernetes all so i'm",
    "start": "25359",
    "end": "26800"
  },
  {
    "text": "excited to share some of those learnings",
    "start": "26800",
    "end": "29679"
  },
  {
    "text": "cool",
    "start": "29679",
    "end": "30960"
  },
  {
    "text": "so in this talk we're going to talk",
    "start": "30960",
    "end": "32960"
  },
  {
    "text": "about some of the capabilities of",
    "start": "32960",
    "end": "35120"
  },
  {
    "text": "kubernetes auth today and some of the",
    "start": "35120",
    "end": "36719"
  },
  {
    "text": "limitations",
    "start": "36719",
    "end": "38399"
  },
  {
    "text": "then we'll look at some workarounds that",
    "start": "38399",
    "end": "40079"
  },
  {
    "text": "we did to work around some of the",
    "start": "40079",
    "end": "41760"
  },
  {
    "text": "limitations",
    "start": "41760",
    "end": "43120"
  },
  {
    "text": "and then at the end we're going to try",
    "start": "43120",
    "end": "44160"
  },
  {
    "text": "to look forward and see what we could do",
    "start": "44160",
    "end": "45760"
  },
  {
    "text": "in the future to make things a little",
    "start": "45760",
    "end": "47120"
  },
  {
    "text": "better",
    "start": "47120",
    "end": "48960"
  },
  {
    "text": "so let's say you want to configure auth",
    "start": "48960",
    "end": "51039"
  },
  {
    "text": "in your kubernetes environment right",
    "start": "51039",
    "end": "52480"
  },
  {
    "text": "seems like a pretty simple",
    "start": "52480",
    "end": "53680"
  },
  {
    "text": "straightforward ask",
    "start": "53680",
    "end": "56559"
  },
  {
    "text": "so",
    "start": "56960",
    "end": "57680"
  },
  {
    "text": "let's look at the cloud providers right",
    "start": "57680",
    "end": "59120"
  },
  {
    "text": "because this is generally the entry",
    "start": "59120",
    "end": "60960"
  },
  {
    "text": "point for most kubernetes users because",
    "start": "60960",
    "end": "63199"
  },
  {
    "text": "the reality is managing your own",
    "start": "63199",
    "end": "64559"
  },
  {
    "text": "kubernetes infrastructure is hard",
    "start": "64559",
    "end": "67840"
  },
  {
    "text": "kubernetes does not handle that part of",
    "start": "67840",
    "end": "69840"
  },
  {
    "text": "the problem",
    "start": "69840",
    "end": "71840"
  },
  {
    "text": "right so if you're using",
    "start": "71840",
    "end": "73439"
  },
  {
    "text": "gcp you're probably used to using the g",
    "start": "73439",
    "end": "75439"
  },
  {
    "text": "cloud cli",
    "start": "75439",
    "end": "77200"
  },
  {
    "text": "if you're using azure you're used to",
    "start": "77200",
    "end": "78880"
  },
  {
    "text": "using their cli",
    "start": "78880",
    "end": "81520"
  },
  {
    "text": "and if you're using eks you know you're",
    "start": "81520",
    "end": "83759"
  },
  {
    "text": "used to their cli right so each of these",
    "start": "83759",
    "end": "85840"
  },
  {
    "text": "platforms has their own integrated im",
    "start": "85840",
    "end": "88080"
  },
  {
    "text": "solution right and this is totally fine",
    "start": "88080",
    "end": "90560"
  },
  {
    "text": "if you're all in on a single platform",
    "start": "90560",
    "end": "92880"
  },
  {
    "text": "right but what if you're not",
    "start": "92880",
    "end": "95439"
  },
  {
    "text": "right what if you want to use a",
    "start": "95439",
    "end": "97200"
  },
  {
    "text": "different identity provider",
    "start": "97200",
    "end": "99119"
  },
  {
    "text": "right so",
    "start": "99119",
    "end": "100560"
  },
  {
    "text": "traditional enterprises tend to have",
    "start": "100560",
    "end": "102079"
  },
  {
    "text": "corporate active directory with their",
    "start": "102079",
    "end": "103920"
  },
  {
    "text": "user identity right",
    "start": "103920",
    "end": "106079"
  },
  {
    "text": "and it's likely that they want to",
    "start": "106079",
    "end": "107280"
  },
  {
    "text": "continue to use that identity in their",
    "start": "107280",
    "end": "108960"
  },
  {
    "text": "kubernetes clusters right",
    "start": "108960",
    "end": "112079"
  },
  {
    "text": "you tend to have a pretty high",
    "start": "112079",
    "end": "113759"
  },
  {
    "text": "investment in your identity",
    "start": "113759",
    "end": "116079"
  },
  {
    "text": "infrastructure and it's pretty",
    "start": "116079",
    "end": "117280"
  },
  {
    "text": "unreasonable to ask people to change",
    "start": "117280",
    "end": "118880"
  },
  {
    "text": "that",
    "start": "118880",
    "end": "120159"
  },
  {
    "text": "right",
    "start": "120159",
    "end": "120960"
  },
  {
    "text": "and enterprises want the flexibility to",
    "start": "120960",
    "end": "123040"
  },
  {
    "text": "use any cloud provider right after all",
    "start": "123040",
    "end": "125520"
  },
  {
    "text": "kubernetes is meant to offer workload",
    "start": "125520",
    "end": "127759"
  },
  {
    "text": "flexibility and mobility across",
    "start": "127759",
    "end": "130080"
  },
  {
    "text": "the cloud platforms right but",
    "start": "130080",
    "end": "132720"
  },
  {
    "text": "having a unified picture of your",
    "start": "132720",
    "end": "134080"
  },
  {
    "text": "identity across the cloud providers is",
    "start": "134080",
    "end": "136239"
  },
  {
    "text": "an important piece of that mobility",
    "start": "136239",
    "end": "140080"
  },
  {
    "text": "so if you're trying to figure out how to",
    "start": "141520",
    "end": "142959"
  },
  {
    "text": "authenticate with something other than",
    "start": "142959",
    "end": "144560"
  },
  {
    "text": "built-in cloud provider auth you might",
    "start": "144560",
    "end": "146000"
  },
  {
    "text": "find that kubernetes oidc ident",
    "start": "146000",
    "end": "148319"
  },
  {
    "text": "authentication is a nice option openid",
    "start": "148319",
    "end": "150879"
  },
  {
    "text": "connect or oidc is a pretty common",
    "start": "150879",
    "end": "152800"
  },
  {
    "text": "protocol for authenticating with an",
    "start": "152800",
    "end": "154239"
  },
  {
    "text": "external identity provider it's an",
    "start": "154239",
    "end": "156239"
  },
  {
    "text": "extension of oauth 2.0",
    "start": "156239",
    "end": "158319"
  },
  {
    "text": "you can configure your kubernetes",
    "start": "158319",
    "end": "159760"
  },
  {
    "text": "cluster so that when you run coupe",
    "start": "159760",
    "end": "161040"
  },
  {
    "text": "cuddle commands you can just include",
    "start": "161040",
    "end": "162720"
  },
  {
    "text": "your id token and the claims in the",
    "start": "162720",
    "end": "164560"
  },
  {
    "text": "token will map to kubernetes username",
    "start": "164560",
    "end": "166560"
  },
  {
    "text": "and groups",
    "start": "166560",
    "end": "168959"
  },
  {
    "text": "unfortunately this doesn't work in a lot",
    "start": "169200",
    "end": "171200"
  },
  {
    "text": "of cases for a few reasons a big one is",
    "start": "171200",
    "end": "173840"
  },
  {
    "text": "that it requires configuring the api",
    "start": "173840",
    "end": "175680"
  },
  {
    "text": "server if you're self-hosting this is",
    "start": "175680",
    "end": "177760"
  },
  {
    "text": "something you can do by setting a few",
    "start": "177760",
    "end": "179200"
  },
  {
    "text": "flags but a lot of kubernetes users",
    "start": "179200",
    "end": "181680"
  },
  {
    "text": "don't have that option available because",
    "start": "181680",
    "end": "183200"
  },
  {
    "text": "they're using a cloud provider",
    "start": "183200",
    "end": "184239"
  },
  {
    "text": "distribution and they aren't allowed to",
    "start": "184239",
    "end": "185760"
  },
  {
    "text": "set api server flags at all",
    "start": "185760",
    "end": "188080"
  },
  {
    "text": "in contrast admission web hooks can be",
    "start": "188080",
    "end": "189920"
  },
  {
    "text": "configured dynamically so something like",
    "start": "189920",
    "end": "191840"
  },
  {
    "text": "opa gatekeeper can be deployed by any",
    "start": "191840",
    "end": "194000"
  },
  {
    "text": "cluster administrator at runtime in a",
    "start": "194000",
    "end": "196239"
  },
  {
    "text": "cluster agnostic way that doesn't differ",
    "start": "196239",
    "end": "198319"
  },
  {
    "text": "between cloud providers and self-hosted",
    "start": "198319",
    "end": "201040"
  },
  {
    "text": "so configuring the api server makes this",
    "start": "201040",
    "end": "203680"
  },
  {
    "text": "option impossible on gke and aks but eks",
    "start": "203680",
    "end": "207440"
  },
  {
    "text": "actually does have the option of",
    "start": "207440",
    "end": "208799"
  },
  {
    "text": "configuring oidc using their own",
    "start": "208799",
    "end": "210720"
  },
  {
    "text": "proprietary api it's not a bad option if",
    "start": "210720",
    "end": "213200"
  },
  {
    "text": "you're using eks clusters and you have",
    "start": "213200",
    "end": "215680"
  },
  {
    "text": "an oidc at any provider",
    "start": "215680",
    "end": "218159"
  },
  {
    "text": "but if you're configuring the api server",
    "start": "218159",
    "end": "220400"
  },
  {
    "text": "even if you can do that you still won't",
    "start": "220400",
    "end": "222560"
  },
  {
    "text": "have the option to update your",
    "start": "222560",
    "end": "223760"
  },
  {
    "text": "configuration at runtime for example if",
    "start": "223760",
    "end": "226239"
  },
  {
    "text": "you want to rotate oidc client",
    "start": "226239",
    "end": "228000"
  },
  {
    "text": "credentials without taking down the",
    "start": "228000",
    "end": "229200"
  },
  {
    "text": "cluster",
    "start": "229200",
    "end": "230640"
  },
  {
    "text": "and of course if you're using an",
    "start": "230640",
    "end": "231920"
  },
  {
    "text": "identity provider that doesn't support",
    "start": "231920",
    "end": "233439"
  },
  {
    "text": "oidc like active directory or ldap",
    "start": "233439",
    "end": "235920"
  },
  {
    "text": "you're out of luck",
    "start": "235920",
    "end": "237200"
  },
  {
    "text": "not to mention this is just a building",
    "start": "237200",
    "end": "238799"
  },
  {
    "text": "block kubernetes doesn't help your users",
    "start": "238799",
    "end": "241200"
  },
  {
    "text": "get jot tokens it just validates them",
    "start": "241200",
    "end": "244959"
  },
  {
    "text": "kubernetes has",
    "start": "244959",
    "end": "246159"
  },
  {
    "text": "a bunch of extension points for",
    "start": "246159",
    "end": "247439"
  },
  {
    "text": "authentication so let's go through a few",
    "start": "247439",
    "end": "249599"
  },
  {
    "text": "more",
    "start": "249599",
    "end": "250400"
  },
  {
    "text": "starting with those that require api",
    "start": "250400",
    "end": "252080"
  },
  {
    "text": "server configuration we've got odc like",
    "start": "252080",
    "end": "255040"
  },
  {
    "text": "we talked about on the previous slide it",
    "start": "255040",
    "end": "257040"
  },
  {
    "text": "works great if you have an idc compliant",
    "start": "257040",
    "end": "259120"
  },
  {
    "text": "at any provider to work with",
    "start": "259120",
    "end": "261040"
  },
  {
    "text": "another option is to create an",
    "start": "261040",
    "end": "262479"
  },
  {
    "text": "authentication web hook when a user",
    "start": "262479",
    "end": "264639"
  },
  {
    "text": "provides a token to the api server",
    "start": "264639",
    "end": "267199"
  },
  {
    "text": "the webhook will call out to an external",
    "start": "267199",
    "end": "269040"
  },
  {
    "text": "service to authenticate it this is very",
    "start": "269040",
    "end": "271199"
  },
  {
    "text": "flexible but it requires you to write",
    "start": "271199",
    "end": "273040"
  },
  {
    "text": "code and be responsible for that web",
    "start": "273040",
    "end": "274560"
  },
  {
    "text": "hook",
    "start": "274560",
    "end": "275440"
  },
  {
    "text": "there are a couple other options that",
    "start": "275440",
    "end": "277440"
  },
  {
    "text": "are typically enabled by default with",
    "start": "277440",
    "end": "279199"
  },
  {
    "text": "common tools used to deploy kubernetes",
    "start": "279199",
    "end": "281440"
  },
  {
    "text": "like cube adm and most cloud providers",
    "start": "281440",
    "end": "284080"
  },
  {
    "text": "one is certificates you can generate",
    "start": "284080",
    "end": "286160"
  },
  {
    "text": "client search for users based on the",
    "start": "286160",
    "end": "288320"
  },
  {
    "text": "cluster ca one problem with this",
    "start": "288320",
    "end": "290479"
  },
  {
    "text": "approach is that certificates aren't",
    "start": "290479",
    "end": "291759"
  },
  {
    "text": "revocable but we'll talk more about that",
    "start": "291759",
    "end": "293759"
  },
  {
    "text": "later",
    "start": "293759",
    "end": "294720"
  },
  {
    "text": "service account tokens are another",
    "start": "294720",
    "end": "296240"
  },
  {
    "text": "option but as the name implies they",
    "start": "296240",
    "end": "298320"
  },
  {
    "text": "aren't meant to work with humans they're",
    "start": "298320",
    "end": "299840"
  },
  {
    "text": "for service accounts",
    "start": "299840",
    "end": "302720"
  },
  {
    "text": "so let's talk about what we would expect",
    "start": "303919",
    "end": "305600"
  },
  {
    "text": "end users to need right so if we look at",
    "start": "305600",
    "end": "307520"
  },
  {
    "text": "the bottom of the slide we can see a",
    "start": "307520",
    "end": "309120"
  },
  {
    "text": "cube ctl command and i would venture to",
    "start": "309120",
    "end": "311520"
  },
  {
    "text": "say that many kubernetes users expect",
    "start": "311520",
    "end": "314560"
  },
  {
    "text": "something like this if they're trying to",
    "start": "314560",
    "end": "316240"
  },
  {
    "text": "configure active directory in their",
    "start": "316240",
    "end": "317440"
  },
  {
    "text": "environment right it's a custom",
    "start": "317440",
    "end": "318800"
  },
  {
    "text": "resource-based api and then you can use",
    "start": "318800",
    "end": "321199"
  },
  {
    "text": "standard kubectl commands to try to",
    "start": "321199",
    "end": "323120"
  },
  {
    "text": "understand the api structure and what",
    "start": "323120",
    "end": "325520"
  },
  {
    "text": "configuration options are available to",
    "start": "325520",
    "end": "327440"
  },
  {
    "text": "them",
    "start": "327440",
    "end": "328800"
  },
  {
    "text": "right",
    "start": "328800",
    "end": "331039"
  },
  {
    "text": "so at the highest level right they want",
    "start": "331280",
    "end": "332960"
  },
  {
    "text": "to bring their own identity to",
    "start": "332960",
    "end": "334400"
  },
  {
    "text": "kubernetes",
    "start": "334400",
    "end": "335600"
  },
  {
    "text": "right",
    "start": "335600",
    "end": "336639"
  },
  {
    "text": "and there it doesn't matter where that",
    "start": "336639",
    "end": "338639"
  },
  {
    "text": "identity comes from it might be active",
    "start": "338639",
    "end": "340000"
  },
  {
    "text": "directory might be github right they",
    "start": "340000",
    "end": "341600"
  },
  {
    "text": "want to be able to use any identity",
    "start": "341600",
    "end": "343280"
  },
  {
    "text": "provider that they have available to",
    "start": "343280",
    "end": "344639"
  },
  {
    "text": "them they want to be able to do this",
    "start": "344639",
    "end": "346479"
  },
  {
    "text": "even if they didn't um",
    "start": "346479",
    "end": "348639"
  },
  {
    "text": "stand up the infrastructure themselves",
    "start": "348639",
    "end": "350080"
  },
  {
    "text": "right in the cloud provider environments",
    "start": "350080",
    "end": "351440"
  },
  {
    "text": "as a for example",
    "start": "351440",
    "end": "353360"
  },
  {
    "text": "right they want to have a consistent",
    "start": "353360",
    "end": "354800"
  },
  {
    "text": "identity across all environments so if",
    "start": "354800",
    "end": "356960"
  },
  {
    "text": "you're very familiar with active",
    "start": "356960",
    "end": "358160"
  },
  {
    "text": "directory you might be very used to",
    "start": "358160",
    "end": "359600"
  },
  {
    "text": "using like user principle name as the",
    "start": "359600",
    "end": "362000"
  },
  {
    "text": "username attribute in your kubernetes",
    "start": "362000",
    "end": "364080"
  },
  {
    "text": "are back rules",
    "start": "364080",
    "end": "365680"
  },
  {
    "text": "or perhaps you're ultra paranoid and you",
    "start": "365680",
    "end": "367680"
  },
  {
    "text": "want to use optic good but either way",
    "start": "367680",
    "end": "369680"
  },
  {
    "text": "you're used to a particular way of",
    "start": "369680",
    "end": "371199"
  },
  {
    "text": "asserting identity across your",
    "start": "371199",
    "end": "372479"
  },
  {
    "text": "infrastructure and you want to keep",
    "start": "372479",
    "end": "373680"
  },
  {
    "text": "doing that",
    "start": "373680",
    "end": "376160"
  },
  {
    "text": "so as we saw in the bottom of the slide",
    "start": "378240",
    "end": "381360"
  },
  {
    "text": "all right you want to make this stuff",
    "start": "381360",
    "end": "383120"
  },
  {
    "text": "easy for people right they should be",
    "start": "383120",
    "end": "384720"
  },
  {
    "text": "able to understand it in the same way",
    "start": "384720",
    "end": "386080"
  },
  {
    "text": "they understand everything else in",
    "start": "386080",
    "end": "387199"
  },
  {
    "text": "kubernetes right so a custom resource",
    "start": "387199",
    "end": "389840"
  },
  {
    "text": "api is really ideal for that and you",
    "start": "389840",
    "end": "392160"
  },
  {
    "text": "know you want it to be a high order api",
    "start": "392160",
    "end": "394080"
  },
  {
    "text": "right we're not we're not talking about",
    "start": "394080",
    "end": "395199"
  },
  {
    "text": "web hooks we're not talking about tokens",
    "start": "395199",
    "end": "396800"
  },
  {
    "text": "right we're talking about identity",
    "start": "396800",
    "end": "398080"
  },
  {
    "text": "providers because that's what people",
    "start": "398080",
    "end": "399520"
  },
  {
    "text": "understand",
    "start": "399520",
    "end": "402000"
  },
  {
    "text": "right and you want to keep all this",
    "start": "402319",
    "end": "403600"
  },
  {
    "text": "stuff as safe as possible right so you",
    "start": "403600",
    "end": "405440"
  },
  {
    "text": "want to limit the negative effects of an",
    "start": "405440",
    "end": "408160"
  },
  {
    "text": "individual cluster compromise right so",
    "start": "408160",
    "end": "409919"
  },
  {
    "text": "what that means from the perspective of",
    "start": "409919",
    "end": "411759"
  },
  {
    "text": "an end user is there's no credentials",
    "start": "411759",
    "end": "414160"
  },
  {
    "text": "that are being sent to clusters that can",
    "start": "414160",
    "end": "415599"
  },
  {
    "text": "then be replayed across clusters as a",
    "start": "415599",
    "end": "417599"
  },
  {
    "text": "for example",
    "start": "417599",
    "end": "419919"
  },
  {
    "text": "right so if we step back and then",
    "start": "419919",
    "end": "421919"
  },
  {
    "text": "instead look at what do the implementers",
    "start": "421919",
    "end": "424240"
  },
  {
    "text": "need right so margo and i are the",
    "start": "424240",
    "end": "426240"
  },
  {
    "text": "pinniped authors along with some others",
    "start": "426240",
    "end": "428080"
  },
  {
    "text": "at vmware so what do we need to solve",
    "start": "428080",
    "end": "430479"
  },
  {
    "text": "these problems for folks",
    "start": "430479",
    "end": "432319"
  },
  {
    "text": "okay and it really comes down to a",
    "start": "432319",
    "end": "433840"
  },
  {
    "text": "pretty simple requirement right we need",
    "start": "433840",
    "end": "435360"
  },
  {
    "text": "some way at runtime to assert identity",
    "start": "435360",
    "end": "438000"
  },
  {
    "text": "on a kubernetes cluster regardless of",
    "start": "438000",
    "end": "440560"
  },
  {
    "text": "how the infrastructure was brought up",
    "start": "440560",
    "end": "443280"
  },
  {
    "text": "right",
    "start": "443280",
    "end": "444800"
  },
  {
    "text": "so the extension point that we need to",
    "start": "444800",
    "end": "447039"
  },
  {
    "text": "integrate with has to be something",
    "start": "447039",
    "end": "448319"
  },
  {
    "text": "that's always enabled doesn't have any",
    "start": "448319",
    "end": "450960"
  },
  {
    "text": "configuration it behaves exactly the",
    "start": "450960",
    "end": "453360"
  },
  {
    "text": "same way on every kubernetes",
    "start": "453360",
    "end": "455120"
  },
  {
    "text": "distribution",
    "start": "455120",
    "end": "456479"
  },
  {
    "text": "and probably most importantly it has to",
    "start": "456479",
    "end": "458639"
  },
  {
    "text": "be safe for this purpose it has to be",
    "start": "458639",
    "end": "460639"
  },
  {
    "text": "designed and built for this purpose",
    "start": "460639",
    "end": "464840"
  },
  {
    "text": "so that takes us to work around number",
    "start": "464960",
    "end": "467360"
  },
  {
    "text": "one that we implemented",
    "start": "467360",
    "end": "470080"
  },
  {
    "text": "uh so a little background x 509 client",
    "start": "470080",
    "end": "473199"
  },
  {
    "text": "certificate off is enabled on most",
    "start": "473199",
    "end": "475360"
  },
  {
    "text": "kubernetes distributions with the",
    "start": "475360",
    "end": "477280"
  },
  {
    "text": "exception of eks there's an api for",
    "start": "477280",
    "end": "479680"
  },
  {
    "text": "signing those client certificates called",
    "start": "479680",
    "end": "481360"
  },
  {
    "text": "the certificate signing request it's got",
    "start": "481360",
    "end": "483440"
  },
  {
    "text": "a few problems though a big one is that",
    "start": "483440",
    "end": "485520"
  },
  {
    "text": "up until kubernetes 122",
    "start": "485520",
    "end": "487919"
  },
  {
    "text": "when mo added the expiration seconds",
    "start": "487919",
    "end": "489919"
  },
  {
    "text": "configuration option there was no way to",
    "start": "489919",
    "end": "491759"
  },
  {
    "text": "configure the length of certificates and",
    "start": "491759",
    "end": "493840"
  },
  {
    "text": "the default lifetime was one year and",
    "start": "493840",
    "end": "496080"
  },
  {
    "text": "the certs aren't revocable usually when",
    "start": "496080",
    "end": "498080"
  },
  {
    "text": "you can't revoke a cert you'd want to",
    "start": "498080",
    "end": "499360"
  },
  {
    "text": "keep the lifetime as short as possible",
    "start": "499360",
    "end": "501360"
  },
  {
    "text": "so that if users shouldn't have access",
    "start": "501360",
    "end": "502960"
  },
  {
    "text": "anymore their client will expire quickly",
    "start": "502960",
    "end": "505199"
  },
  {
    "text": "and when they ask for another one",
    "start": "505199",
    "end": "506800"
  },
  {
    "text": "they'll be denied",
    "start": "506800",
    "end": "508160"
  },
  {
    "text": "the rose workaround for when you want to",
    "start": "508160",
    "end": "509599"
  },
  {
    "text": "revoke a cert is to rotate the whole ca",
    "start": "509599",
    "end": "511840"
  },
  {
    "text": "which is not ideal and breaks a lot of",
    "start": "511840",
    "end": "513360"
  },
  {
    "text": "things",
    "start": "513360",
    "end": "514240"
  },
  {
    "text": "you can always go around the certificate",
    "start": "514240",
    "end": "515680"
  },
  {
    "text": "signing request api but it requires",
    "start": "515680",
    "end": "517760"
  },
  {
    "text": "saving the cluster signing key pair",
    "start": "517760",
    "end": "519039"
  },
  {
    "text": "somewhere and issuing search base off of",
    "start": "519039",
    "end": "520640"
  },
  {
    "text": "it",
    "start": "520640",
    "end": "521599"
  },
  {
    "text": "uh what we did uh is we steal your keys",
    "start": "521599",
    "end": "525120"
  },
  {
    "text": "from",
    "start": "525120",
    "end": "526000"
  },
  {
    "text": "inside your cluster and use them to mint",
    "start": "526000",
    "end": "527920"
  },
  {
    "text": "shortlist certificates whenever we want",
    "start": "527920",
    "end": "531040"
  },
  {
    "text": "so this only works if you have access to",
    "start": "531040",
    "end": "533040"
  },
  {
    "text": "the kubernetes control plane which often",
    "start": "533040",
    "end": "534640"
  },
  {
    "text": "isn't the case on cloud-hosted",
    "start": "534640",
    "end": "536160"
  },
  {
    "text": "kubernetes distributions but if we do",
    "start": "536160",
    "end": "538480"
  },
  {
    "text": "have that access we can we can look at",
    "start": "538480",
    "end": "540640"
  },
  {
    "text": "the cube controller manager pods which",
    "start": "540640",
    "end": "542800"
  },
  {
    "text": "are part of the control plane in charge",
    "start": "542800",
    "end": "544640"
  },
  {
    "text": "of the certificate signing request",
    "start": "544640",
    "end": "546000"
  },
  {
    "text": "controller along with some other",
    "start": "546000",
    "end": "547360"
  },
  {
    "text": "controllers and we can see which",
    "start": "547360",
    "end": "549040"
  },
  {
    "text": "arguments the daemon was called with",
    "start": "549040",
    "end": "550720"
  },
  {
    "text": "this tells us the path to the signing",
    "start": "550720",
    "end": "552399"
  },
  {
    "text": "key so we can grab it from the volume",
    "start": "552399",
    "end": "554560"
  },
  {
    "text": "mounted to the cube controller manager",
    "start": "554560",
    "end": "557279"
  },
  {
    "text": "let's walk through how this works using",
    "start": "557279",
    "end": "558720"
  },
  {
    "text": "piniped",
    "start": "558720",
    "end": "560240"
  },
  {
    "text": "when you deploy your cluster it's",
    "start": "560240",
    "end": "561839"
  },
  {
    "text": "created with at least one cube",
    "start": "561839",
    "end": "563120"
  },
  {
    "text": "controller manager pod that pod has some",
    "start": "563120",
    "end": "565440"
  },
  {
    "text": "volumes mounted including one that",
    "start": "565440",
    "end": "567519"
  },
  {
    "text": "includes the cluster signing key pair in",
    "start": "567519",
    "end": "569279"
  },
  {
    "text": "this case the one called kate starts",
    "start": "569279",
    "end": "570720"
  },
  {
    "text": "highlighted in blue",
    "start": "570720",
    "end": "572240"
  },
  {
    "text": "a user can deploy piniped or anything",
    "start": "572240",
    "end": "574160"
  },
  {
    "text": "else using the same trick the piniped",
    "start": "574160",
    "end": "576399"
  },
  {
    "text": "pod will read the metadata of the cube",
    "start": "576399",
    "end": "578320"
  },
  {
    "text": "controller manager to find the path to",
    "start": "578320",
    "end": "580399"
  },
  {
    "text": "the cluster signing key",
    "start": "580399",
    "end": "582480"
  },
  {
    "text": "then piniped launches a privileged pod",
    "start": "582480",
    "end": "584720"
  },
  {
    "text": "called the cubestart agent and copies",
    "start": "584720",
    "end": "587360"
  },
  {
    "text": "over the cubecontroller manager's",
    "start": "587360",
    "end": "589200"
  },
  {
    "text": "volumes it also passes the path to the",
    "start": "589200",
    "end": "591440"
  },
  {
    "text": "key pair as environment variables",
    "start": "591440",
    "end": "593680"
  },
  {
    "text": "pinpad can then ask the cube's third",
    "start": "593680",
    "end": "595360"
  },
  {
    "text": "agent for the key pair which the",
    "start": "595360",
    "end": "596880"
  },
  {
    "text": "cubestart agent reads from its volumes",
    "start": "596880",
    "end": "599680"
  },
  {
    "text": "and stored in memory",
    "start": "599680",
    "end": "601600"
  },
  {
    "text": "so when a user asks pinped for a",
    "start": "601600",
    "end": "603360"
  },
  {
    "text": "certificate",
    "start": "603360",
    "end": "604640"
  },
  {
    "text": "we can do our own authentication checks",
    "start": "604640",
    "end": "606880"
  },
  {
    "text": "then use the key pair to mint",
    "start": "606880",
    "end": "608480"
  },
  {
    "text": "certificates of any duration we want",
    "start": "608480",
    "end": "612240"
  },
  {
    "text": "so as margo mentioned",
    "start": "614160",
    "end": "616800"
  },
  {
    "text": "the cubestart agent-based approach",
    "start": "616800",
    "end": "618640"
  },
  {
    "text": "doesn't work in the cloud provider",
    "start": "618640",
    "end": "620399"
  },
  {
    "text": "environments right those are not",
    "start": "620399",
    "end": "621600"
  },
  {
    "text": "self-hosted environments the kubernetes",
    "start": "621600",
    "end": "623360"
  },
  {
    "text": "control plane isn't available through",
    "start": "623360",
    "end": "625040"
  },
  {
    "text": "the kubernetes api right",
    "start": "625040",
    "end": "628160"
  },
  {
    "text": "so we need a different way to handle",
    "start": "628160",
    "end": "630320"
  },
  {
    "text": "those environments right those are quite",
    "start": "630320",
    "end": "631680"
  },
  {
    "text": "critical to us",
    "start": "631680",
    "end": "633680"
  },
  {
    "text": "so i've tried to make this like a happy",
    "start": "633680",
    "end": "636160"
  },
  {
    "text": "rant instead of an angry rant we'll see",
    "start": "636160",
    "end": "637760"
  },
  {
    "text": "how this goes",
    "start": "637760",
    "end": "638880"
  },
  {
    "text": "um",
    "start": "638880",
    "end": "640560"
  },
  {
    "text": "so",
    "start": "640560",
    "end": "641600"
  },
  {
    "text": "i'm pretty sure many folks are familiar",
    "start": "641600",
    "end": "643680"
  },
  {
    "text": "with",
    "start": "643680",
    "end": "644880"
  },
  {
    "text": "impersonation through uh",
    "start": "644880",
    "end": "647040"
  },
  {
    "text": "cube ctl so you can see the command on",
    "start": "647040",
    "end": "649200"
  },
  {
    "text": "the bottom of the screen uh you know",
    "start": "649200",
    "end": "651120"
  },
  {
    "text": "someone's trying to get pods but they",
    "start": "651120",
    "end": "652959"
  },
  {
    "text": "want to run this command as a different",
    "start": "652959",
    "end": "654720"
  },
  {
    "text": "identity",
    "start": "654720",
    "end": "655760"
  },
  {
    "text": "and then the curl command right under",
    "start": "655760",
    "end": "657200"
  },
  {
    "text": "that sort of describes what is actually",
    "start": "657200",
    "end": "659279"
  },
  {
    "text": "happening right so you're authenticating",
    "start": "659279",
    "end": "661440"
  },
  {
    "text": "as some identity and then you're asking",
    "start": "661440",
    "end": "664720"
  },
  {
    "text": "the api server hey i want to act as some",
    "start": "664720",
    "end": "666560"
  },
  {
    "text": "other identity do some authorization",
    "start": "666560",
    "end": "668720"
  },
  {
    "text": "checks and let me act as that other",
    "start": "668720",
    "end": "670079"
  },
  {
    "text": "identity instead",
    "start": "670079",
    "end": "672640"
  },
  {
    "text": "all right so this was originally built",
    "start": "672640",
    "end": "674079"
  },
  {
    "text": "in openshift",
    "start": "674079",
    "end": "675360"
  },
  {
    "text": "um",
    "start": "675360",
    "end": "676399"
  },
  {
    "text": "and when it was upstreamed it actually",
    "start": "676399",
    "end": "677920"
  },
  {
    "text": "lost some functionality so openshift has",
    "start": "677920",
    "end": "679839"
  },
  {
    "text": "a very strong concept of groups so back",
    "start": "679839",
    "end": "682480"
  },
  {
    "text": "in those days when you impersonated a",
    "start": "682480",
    "end": "684560"
  },
  {
    "text": "user identity it would automatically",
    "start": "684560",
    "end": "685920"
  },
  {
    "text": "impersonate all the groups that a user",
    "start": "685920",
    "end": "687440"
  },
  {
    "text": "belong to",
    "start": "687440",
    "end": "688640"
  },
  {
    "text": "that got lost when we upstream that",
    "start": "688640",
    "end": "690560"
  },
  {
    "text": "years ago",
    "start": "690560",
    "end": "693040"
  },
  {
    "text": "it's built with a pretty simple",
    "start": "694240",
    "end": "696560"
  },
  {
    "text": "server-side implementation",
    "start": "696560",
    "end": "698480"
  },
  {
    "text": "where",
    "start": "698480",
    "end": "699279"
  },
  {
    "text": "the incoming request is processed",
    "start": "699279",
    "end": "702640"
  },
  {
    "text": "when the client sends these headers",
    "start": "702640",
    "end": "705120"
  },
  {
    "text": "the api server is effectively saying all",
    "start": "705120",
    "end": "706880"
  },
  {
    "text": "right you're you're authenticated as",
    "start": "706880",
    "end": "708640"
  },
  {
    "text": "margo but you're trying to impersonate",
    "start": "708640",
    "end": "710160"
  },
  {
    "text": "mo i'm going to do some extra",
    "start": "710160",
    "end": "711519"
  },
  {
    "text": "authorization checks to assert that",
    "start": "711519",
    "end": "713279"
  },
  {
    "text": "margo is allowed to do this action and",
    "start": "713279",
    "end": "715519"
  },
  {
    "text": "if so i'm going to basically overwrite",
    "start": "715519",
    "end": "717200"
  },
  {
    "text": "the user information on the request and",
    "start": "717200",
    "end": "719760"
  },
  {
    "text": "the rest of the request will run as if",
    "start": "719760",
    "end": "721440"
  },
  {
    "text": "moe had run the command himself",
    "start": "721440",
    "end": "724800"
  },
  {
    "text": "right and most critically and",
    "start": "724800",
    "end": "726560"
  },
  {
    "text": "importantly for us impersonation has no",
    "start": "726560",
    "end": "728800"
  },
  {
    "text": "configuration options and it's always",
    "start": "728800",
    "end": "730720"
  },
  {
    "text": "enabled in every environment",
    "start": "730720",
    "end": "734079"
  },
  {
    "text": "so let's walk through some use cases for",
    "start": "734639",
    "end": "736000"
  },
  {
    "text": "impersonation",
    "start": "736000",
    "end": "737279"
  },
  {
    "text": "uh",
    "start": "737279",
    "end": "738560"
  },
  {
    "text": "if you guys are familiar with like",
    "start": "738560",
    "end": "740160"
  },
  {
    "text": "modern",
    "start": "740160",
    "end": "741120"
  },
  {
    "text": "i.t principles you know you no longer",
    "start": "741120",
    "end": "742959"
  },
  {
    "text": "run as a privileged user on like your",
    "start": "742959",
    "end": "745200"
  },
  {
    "text": "windows machine you tend to run as a",
    "start": "745200",
    "end": "746880"
  },
  {
    "text": "limited user and",
    "start": "746880",
    "end": "749120"
  },
  {
    "text": "whenever you try to perform a privileged",
    "start": "749120",
    "end": "751200"
  },
  {
    "text": "action",
    "start": "751200",
    "end": "752240"
  },
  {
    "text": "you elevate yourself either with",
    "start": "752240",
    "end": "753680"
  },
  {
    "text": "something like sudo or",
    "start": "753680",
    "end": "755600"
  },
  {
    "text": "forget uacc whatever windows calls their",
    "start": "755600",
    "end": "757600"
  },
  {
    "text": "thing",
    "start": "757600",
    "end": "759200"
  },
  {
    "text": "you can do the same kind of flow with",
    "start": "759200",
    "end": "760639"
  },
  {
    "text": "kubernetes right you can be a cluster",
    "start": "760639",
    "end": "762399"
  },
  {
    "text": "admin style user that purposely limits",
    "start": "762399",
    "end": "764959"
  },
  {
    "text": "their own access in the normal",
    "start": "764959",
    "end": "766880"
  },
  {
    "text": "day-to-day operations but then they have",
    "start": "766880",
    "end": "768880"
  },
  {
    "text": "the capability to impersonate a root",
    "start": "768880",
    "end": "770800"
  },
  {
    "text": "level identity to grant themselves extra",
    "start": "770800",
    "end": "773120"
  },
  {
    "text": "permissions that's one common use case",
    "start": "773120",
    "end": "774959"
  },
  {
    "text": "for impersonation",
    "start": "774959",
    "end": "776720"
  },
  {
    "text": "another one",
    "start": "776720",
    "end": "778079"
  },
  {
    "text": "is the i want to validate access use",
    "start": "778079",
    "end": "780320"
  },
  {
    "text": "case so",
    "start": "780320",
    "end": "781760"
  },
  {
    "text": "you can imagine you're a cluster admin",
    "start": "781760",
    "end": "783200"
  },
  {
    "text": "user and you want to make sure that mo",
    "start": "783200",
    "end": "785440"
  },
  {
    "text": "can't perform some action or you just",
    "start": "785440",
    "end": "787279"
  },
  {
    "text": "impersonate mo and try to do the action",
    "start": "787279",
    "end": "789760"
  },
  {
    "text": "perhaps it's a dry run or something and",
    "start": "789760",
    "end": "791120"
  },
  {
    "text": "you'll be able to see if he is or is not",
    "start": "791120",
    "end": "792800"
  },
  {
    "text": "able to do that action",
    "start": "792800",
    "end": "795600"
  },
  {
    "text": "so how can we abuse this",
    "start": "795600",
    "end": "798160"
  },
  {
    "text": "we'll see",
    "start": "798160",
    "end": "799680"
  },
  {
    "text": "so let's walk through this example uh",
    "start": "799680",
    "end": "802079"
  },
  {
    "text": "let's pretend you have like a magic box",
    "start": "802079",
    "end": "804160"
  },
  {
    "text": "and the box can do something",
    "start": "804160",
    "end": "806240"
  },
  {
    "text": "and there's a user trying to get pods",
    "start": "806240",
    "end": "808480"
  },
  {
    "text": "and you happen to know that",
    "start": "808480",
    "end": "810079"
  },
  {
    "text": "impersonation is a thing and you are",
    "start": "810079",
    "end": "811760"
  },
  {
    "text": "ready to abuse it to the maximum of your",
    "start": "811760",
    "end": "813519"
  },
  {
    "text": "capabilities",
    "start": "813519",
    "end": "815200"
  },
  {
    "text": "so",
    "start": "815200",
    "end": "816000"
  },
  {
    "text": "what does the magic have to be for",
    "start": "816000",
    "end": "818560"
  },
  {
    "text": "you to figure out what you need to do",
    "start": "818560",
    "end": "819760"
  },
  {
    "text": "with impersonation",
    "start": "819760",
    "end": "821519"
  },
  {
    "text": "well generally speaking",
    "start": "821519",
    "end": "823040"
  },
  {
    "text": "that has to effectively be",
    "start": "823040",
    "end": "824240"
  },
  {
    "text": "authentication right you have to know",
    "start": "824240",
    "end": "826959"
  },
  {
    "text": "who is trying to make a request before",
    "start": "826959",
    "end": "828880"
  },
  {
    "text": "you can impersonate them right so",
    "start": "828880",
    "end": "832320"
  },
  {
    "text": "once you have that once you've",
    "start": "832320",
    "end": "833839"
  },
  {
    "text": "authenticated the user now you know what",
    "start": "833839",
    "end": "835680"
  },
  {
    "text": "headers to say",
    "start": "835680",
    "end": "837360"
  },
  {
    "text": "but",
    "start": "837360",
    "end": "838399"
  },
  {
    "text": "you yourself need some identity to do",
    "start": "838399",
    "end": "840320"
  },
  {
    "text": "the impersonation",
    "start": "840320",
    "end": "841680"
  },
  {
    "text": "and since you didn't know who was going",
    "start": "841680",
    "end": "843199"
  },
  {
    "text": "to show up",
    "start": "843199",
    "end": "844320"
  },
  {
    "text": "you basically have to be able to",
    "start": "844320",
    "end": "845839"
  },
  {
    "text": "impersonate any identity so what you're",
    "start": "845839",
    "end": "848160"
  },
  {
    "text": "talking about is some root level",
    "start": "848160",
    "end": "850560"
  },
  {
    "text": "account that can impersonate all other",
    "start": "850560",
    "end": "852480"
  },
  {
    "text": "users in the system whether they exist",
    "start": "852480",
    "end": "854240"
  },
  {
    "text": "or not",
    "start": "854240",
    "end": "855440"
  },
  {
    "text": "right this will start making you nervous",
    "start": "855440",
    "end": "859360"
  },
  {
    "text": "so now we have sort of the building",
    "start": "859360",
    "end": "861120"
  },
  {
    "text": "blocks of",
    "start": "861120",
    "end": "862720"
  },
  {
    "text": "like an impersonation proxy",
    "start": "862720",
    "end": "864800"
  },
  {
    "text": "now if we step back what is the user",
    "start": "864800",
    "end": "866959"
  },
  {
    "text": "seeing in all this well",
    "start": "866959",
    "end": "869600"
  },
  {
    "text": "everything behind the magic box is",
    "start": "869600",
    "end": "871279"
  },
  {
    "text": "completely opaque to them they have no",
    "start": "871279",
    "end": "872639"
  },
  {
    "text": "idea that any of this exists from their",
    "start": "872639",
    "end": "874480"
  },
  {
    "text": "perspective they're talking to the",
    "start": "874480",
    "end": "875920"
  },
  {
    "text": "kubernetes api",
    "start": "875920",
    "end": "877440"
  },
  {
    "text": "just the difference is we've lied to",
    "start": "877440",
    "end": "879120"
  },
  {
    "text": "them right we've told them that the",
    "start": "879120",
    "end": "880399"
  },
  {
    "text": "kubernetes api server is over here just",
    "start": "880399",
    "end": "882240"
  },
  {
    "text": "ignore the real one over there right",
    "start": "882240",
    "end": "885440"
  },
  {
    "text": "so like if we walk through a full",
    "start": "885440",
    "end": "886800"
  },
  {
    "text": "example you have a user they're trying",
    "start": "886800",
    "end": "889360"
  },
  {
    "text": "to get pods they go to your reverse",
    "start": "889360",
    "end": "891360"
  },
  {
    "text": "proxy which authenticates them using",
    "start": "891360",
    "end": "893120"
  },
  {
    "text": "whatever means they want to authenticate",
    "start": "893120",
    "end": "895279"
  },
  {
    "text": "and then it turns around and",
    "start": "895279",
    "end": "896560"
  },
  {
    "text": "impersonates them on the back end to the",
    "start": "896560",
    "end": "898079"
  },
  {
    "text": "real api server using its own root",
    "start": "898079",
    "end": "900320"
  },
  {
    "text": "credentials while setting the",
    "start": "900320",
    "end": "901680"
  },
  {
    "text": "impersonation headers",
    "start": "901680",
    "end": "904399"
  },
  {
    "text": "so",
    "start": "904399",
    "end": "905600"
  },
  {
    "text": "in text",
    "start": "905600",
    "end": "906880"
  },
  {
    "text": "you're going to lie to the user and tell",
    "start": "906880",
    "end": "908639"
  },
  {
    "text": "them the url and ca bundle of the api",
    "start": "908639",
    "end": "911199"
  },
  {
    "text": "server is the impersonation proxy",
    "start": "911199",
    "end": "915279"
  },
  {
    "text": "they're going to send all of their",
    "start": "917279",
    "end": "918480"
  },
  {
    "text": "traffic to the impersonation proxy",
    "start": "918480",
    "end": "920320"
  },
  {
    "text": "instead of the api server",
    "start": "920320",
    "end": "923040"
  },
  {
    "text": "and the proxy will authenticate them",
    "start": "923040",
    "end": "924560"
  },
  {
    "text": "however it wants and then it's going to",
    "start": "924560",
    "end": "926480"
  },
  {
    "text": "reverse proxy that back to the api",
    "start": "926480",
    "end": "928399"
  },
  {
    "text": "server with the appropriate",
    "start": "928399",
    "end": "929279"
  },
  {
    "text": "impersonation headers and authorization",
    "start": "929279",
    "end": "930959"
  },
  {
    "text": "header set",
    "start": "930959",
    "end": "933120"
  },
  {
    "text": "all right so what can go wrong or sorry",
    "start": "933120",
    "end": "936160"
  },
  {
    "text": "what is wrong with this approach well",
    "start": "936160",
    "end": "938800"
  },
  {
    "text": "there's a lot of things uh first of all",
    "start": "938800",
    "end": "940800"
  },
  {
    "text": "you're sending your traffic to the wrong",
    "start": "940800",
    "end": "942480"
  },
  {
    "text": "place right so every time you type in",
    "start": "942480",
    "end": "944639"
  },
  {
    "text": "like cube ctl get secrets",
    "start": "944639",
    "end": "947120"
  },
  {
    "text": "all of the plain text of those secrets",
    "start": "947120",
    "end": "949279"
  },
  {
    "text": "is flowing through this proxy",
    "start": "949279",
    "end": "951920"
  },
  {
    "text": "right so",
    "start": "951920",
    "end": "954240"
  },
  {
    "text": "you have basically made another root",
    "start": "954240",
    "end": "955759"
  },
  {
    "text": "level component in your infrastructure",
    "start": "955759",
    "end": "957519"
  },
  {
    "text": "right",
    "start": "957519",
    "end": "959680"
  },
  {
    "text": "and",
    "start": "959680",
    "end": "960480"
  },
  {
    "text": "this proxy now has to fully scale with",
    "start": "960480",
    "end": "962480"
  },
  {
    "text": "all of the traffic that you push to it",
    "start": "962480",
    "end": "964000"
  },
  {
    "text": "so",
    "start": "964000",
    "end": "964959"
  },
  {
    "text": "previously you had one api server and",
    "start": "964959",
    "end": "966560"
  },
  {
    "text": "now you effectively have two",
    "start": "966560",
    "end": "968480"
  },
  {
    "text": "right because it has to linearly scale",
    "start": "968480",
    "end": "970240"
  },
  {
    "text": "with all the traffic that's being flown",
    "start": "970240",
    "end": "971839"
  },
  {
    "text": "through it",
    "start": "971839",
    "end": "973759"
  },
  {
    "text": "right",
    "start": "973759",
    "end": "975199"
  },
  {
    "text": "also there's there's no way to prevent",
    "start": "975199",
    "end": "977519"
  },
  {
    "text": "the user from like trying to access the",
    "start": "977519",
    "end": "980079"
  },
  {
    "text": "real api server right the kubernetes are",
    "start": "980079",
    "end": "982240"
  },
  {
    "text": "default those services available in",
    "start": "982240",
    "end": "983759"
  },
  {
    "text": "every pod right so if they happen to try",
    "start": "983759",
    "end": "986639"
  },
  {
    "text": "to authenticate to the real api server",
    "start": "986639",
    "end": "989279"
  },
  {
    "text": "it won't work because only your magic",
    "start": "989279",
    "end": "991440"
  },
  {
    "text": "proxy understands whatever credentials",
    "start": "991440",
    "end": "993199"
  },
  {
    "text": "it issued the api server will uh very",
    "start": "993199",
    "end": "996079"
  },
  {
    "text": "happily reply with unauthorized which is",
    "start": "996079",
    "end": "998320"
  },
  {
    "text": "a misnomer but it's an incredibly",
    "start": "998320",
    "end": "999600"
  },
  {
    "text": "infuriating error message as a user",
    "start": "999600",
    "end": "1002399"
  },
  {
    "text": "um",
    "start": "1002399",
    "end": "1004160"
  },
  {
    "text": "uh",
    "start": "1004160",
    "end": "1005279"
  },
  {
    "text": "as an i.t security person you should",
    "start": "1005279",
    "end": "1007600"
  },
  {
    "text": "probably freak out when someone tells",
    "start": "1007600",
    "end": "1009040"
  },
  {
    "text": "you that there is an identity on the",
    "start": "1009040",
    "end": "1010320"
  },
  {
    "text": "system that is allowed to impersonate",
    "start": "1010320",
    "end": "1011680"
  },
  {
    "text": "all other identities",
    "start": "1011680",
    "end": "1013440"
  },
  {
    "text": "because that's awful it's just asking",
    "start": "1013440",
    "end": "1016000"
  },
  {
    "text": "for something to go wrong",
    "start": "1016000",
    "end": "1018320"
  },
  {
    "text": "and",
    "start": "1018320",
    "end": "1019279"
  },
  {
    "text": "as i mentioned the impersonation",
    "start": "1019279",
    "end": "1021120"
  },
  {
    "text": "implementation was never designed for",
    "start": "1021120",
    "end": "1023360"
  },
  {
    "text": "this use case right it was designed for",
    "start": "1023360",
    "end": "1024798"
  },
  {
    "text": "the things i showed earlier",
    "start": "1024799",
    "end": "1026720"
  },
  {
    "text": "um so imagine you're someone who's using",
    "start": "1026720",
    "end": "1029438"
  },
  {
    "text": "active directory",
    "start": "1029439",
    "end": "1031038"
  },
  {
    "text": "and you're in like 100 groups or maybe",
    "start": "1031039",
    "end": "1033038"
  },
  {
    "text": "more realistically even a thousand",
    "start": "1033039",
    "end": "1034400"
  },
  {
    "text": "groups",
    "start": "1034400",
    "end": "1035280"
  },
  {
    "text": "when you turn around and do that reverse",
    "start": "1035280",
    "end": "1037600"
  },
  {
    "text": "proxy to the api server",
    "start": "1037600",
    "end": "1039839"
  },
  {
    "text": "in the inline request the api server is",
    "start": "1039839",
    "end": "1042640"
  },
  {
    "text": "going to linearly validate that that",
    "start": "1042640",
    "end": "1044880"
  },
  {
    "text": "super user service account is allowed to",
    "start": "1044880",
    "end": "1046720"
  },
  {
    "text": "impersonate individually each one of",
    "start": "1046720",
    "end": "1048240"
  },
  {
    "text": "those groups now those are very fast",
    "start": "1048240",
    "end": "1050480"
  },
  {
    "text": "checks but it's not something that you",
    "start": "1050480",
    "end": "1051919"
  },
  {
    "text": "want to sit there and do in the middle",
    "start": "1051919",
    "end": "1053840"
  },
  {
    "text": "of a request it's just not it's just not",
    "start": "1053840",
    "end": "1056320"
  },
  {
    "text": "the same approach",
    "start": "1056320",
    "end": "1058400"
  },
  {
    "text": "and",
    "start": "1058400",
    "end": "1059520"
  },
  {
    "text": "probably most importantly is",
    "start": "1059520",
    "end": "1061760"
  },
  {
    "text": "impersonation is a first class",
    "start": "1061760",
    "end": "1063679"
  },
  {
    "text": "functionality of the kubernetes api it's",
    "start": "1063679",
    "end": "1065840"
  },
  {
    "text": "built into cube ctl",
    "start": "1065840",
    "end": "1068160"
  },
  {
    "text": "and",
    "start": "1068160",
    "end": "1069200"
  },
  {
    "text": "you have created a big problem for your",
    "start": "1069200",
    "end": "1070559"
  },
  {
    "text": "users right now",
    "start": "1070559",
    "end": "1071919"
  },
  {
    "text": "how are they going to use impersonation",
    "start": "1071919",
    "end": "1074320"
  },
  {
    "text": "if you're abusing it on the back end",
    "start": "1074320",
    "end": "1076559"
  },
  {
    "text": "right impersonation doesn't nest",
    "start": "1076559",
    "end": "1078799"
  },
  {
    "text": "you have to come up with some other",
    "start": "1078799",
    "end": "1080640"
  },
  {
    "text": "strategy to allow users to keep using",
    "start": "1080640",
    "end": "1082480"
  },
  {
    "text": "that functionality while you're trying",
    "start": "1082480",
    "end": "1084240"
  },
  {
    "text": "to use it on the back end",
    "start": "1084240",
    "end": "1087200"
  },
  {
    "text": "so let's talk about how we implemented",
    "start": "1087200",
    "end": "1088799"
  },
  {
    "text": "some of this",
    "start": "1088799",
    "end": "1089919"
  },
  {
    "text": "so the",
    "start": "1089919",
    "end": "1091919"
  },
  {
    "text": "business logic of our impersonation",
    "start": "1091919",
    "end": "1093440"
  },
  {
    "text": "proxy uses or abuses for a better term",
    "start": "1093440",
    "end": "1097440"
  },
  {
    "text": "the",
    "start": "1097440",
    "end": "1098240"
  },
  {
    "text": "api server aggregation code from the",
    "start": "1098240",
    "end": "1099919"
  },
  {
    "text": "kubernetes standard or kubernetes code",
    "start": "1099919",
    "end": "1103840"
  },
  {
    "text": "if you ignore like comments and imports",
    "start": "1103840",
    "end": "1105679"
  },
  {
    "text": "and that kind of stuff it actually is",
    "start": "1105679",
    "end": "1107600"
  },
  {
    "text": "very tight it comes down to under 500",
    "start": "1107600",
    "end": "1109760"
  },
  {
    "text": "lines of incredibly dense encrypted code",
    "start": "1109760",
    "end": "1111919"
  },
  {
    "text": "but it is",
    "start": "1111919",
    "end": "1113200"
  },
  {
    "text": "it's not that much code",
    "start": "1113200",
    "end": "1115440"
  },
  {
    "text": "uh",
    "start": "1115440",
    "end": "1116880"
  },
  {
    "text": "one of the things that we did because we",
    "start": "1116880",
    "end": "1118640"
  },
  {
    "text": "didn't want to lose the ability to",
    "start": "1118640",
    "end": "1120240"
  },
  {
    "text": "handle impersonation on like the front",
    "start": "1120240",
    "end": "1122240"
  },
  {
    "text": "end",
    "start": "1122240",
    "end": "1123280"
  },
  {
    "text": "is we perform the same authorization",
    "start": "1123280",
    "end": "1124960"
  },
  {
    "text": "checks that the api server does when you",
    "start": "1124960",
    "end": "1127120"
  },
  {
    "text": "try to impersonate something",
    "start": "1127120",
    "end": "1129039"
  },
  {
    "text": "but we wanted to make sure that in the",
    "start": "1129039",
    "end": "1130320"
  },
  {
    "text": "kubernetes audit log you could always",
    "start": "1130320",
    "end": "1132160"
  },
  {
    "text": "see all three actors that perform this",
    "start": "1132160",
    "end": "1134080"
  },
  {
    "text": "request right so obviously this our",
    "start": "1134080",
    "end": "1136720"
  },
  {
    "text": "service account is the one making the",
    "start": "1136720",
    "end": "1138080"
  },
  {
    "text": "request the identity that you",
    "start": "1138080",
    "end": "1140000"
  },
  {
    "text": "impersonated is the one that the request",
    "start": "1140000",
    "end": "1141679"
  },
  {
    "text": "will be run as and then in the user info",
    "start": "1141679",
    "end": "1144559"
  },
  {
    "text": "of the request and a particular key we",
    "start": "1144559",
    "end": "1147120"
  },
  {
    "text": "insert the information of the user that",
    "start": "1147120",
    "end": "1149520"
  },
  {
    "text": "made the request to us so if you ever",
    "start": "1149520",
    "end": "1152080"
  },
  {
    "text": "look at the kubernetes audit log all",
    "start": "1152080",
    "end": "1153760"
  },
  {
    "text": "three actors are maintained within that",
    "start": "1153760",
    "end": "1155840"
  },
  {
    "text": "log",
    "start": "1155840",
    "end": "1158080"
  },
  {
    "text": "margo added the ability to do uid",
    "start": "1159440",
    "end": "1161760"
  },
  {
    "text": "impersonation",
    "start": "1161760",
    "end": "1163440"
  },
  {
    "text": "in 122 but that's very very recent and",
    "start": "1163440",
    "end": "1165919"
  },
  {
    "text": "bleeding edge",
    "start": "1165919",
    "end": "1167760"
  },
  {
    "text": "and one of the core things that we",
    "start": "1167760",
    "end": "1169280"
  },
  {
    "text": "wanted to maintain is one we don't want",
    "start": "1169280",
    "end": "1171280"
  },
  {
    "text": "you to lose any functionality if you're",
    "start": "1171280",
    "end": "1172799"
  },
  {
    "text": "using our proxy but also we want to make",
    "start": "1172799",
    "end": "1175440"
  },
  {
    "text": "sure that no information is ever lost",
    "start": "1175440",
    "end": "1177360"
  },
  {
    "text": "through this layer so service accounts",
    "start": "1177360",
    "end": "1179280"
  },
  {
    "text": "happen to always have uids in their user",
    "start": "1179280",
    "end": "1181440"
  },
  {
    "text": "info",
    "start": "1181440",
    "end": "1182559"
  },
  {
    "text": "so if you try to impersonate a service",
    "start": "1182559",
    "end": "1183919"
  },
  {
    "text": "account that information would get lost",
    "start": "1183919",
    "end": "1186080"
  },
  {
    "text": "so",
    "start": "1186080",
    "end": "1187200"
  },
  {
    "text": "in this particular case we would pass",
    "start": "1187200",
    "end": "1188960"
  },
  {
    "text": "through the tokens for the service",
    "start": "1188960",
    "end": "1190080"
  },
  {
    "text": "account maybe one day we won't have to",
    "start": "1190080",
    "end": "1191919"
  },
  {
    "text": "do that when everyone is on 122 and",
    "start": "1191919",
    "end": "1193840"
  },
  {
    "text": "greater",
    "start": "1193840",
    "end": "1196000"
  },
  {
    "text": "so",
    "start": "1196000",
    "end": "1197840"
  },
  {
    "text": "i'm sure everyone's familiar with cube",
    "start": "1197840",
    "end": "1199600"
  },
  {
    "text": "ctl exec and port forward and all of",
    "start": "1199600",
    "end": "1201280"
  },
  {
    "text": "those things those are incredibly",
    "start": "1201280",
    "end": "1202720"
  },
  {
    "text": "important to the kubernetes developer",
    "start": "1202720",
    "end": "1204320"
  },
  {
    "text": "experience and we wanted to make sure",
    "start": "1204320",
    "end": "1205760"
  },
  {
    "text": "all of that stuff was also maintained",
    "start": "1205760",
    "end": "1208320"
  },
  {
    "text": "so we fully support speedy and",
    "start": "1208320",
    "end": "1210240"
  },
  {
    "text": "websockets and all that stuff through",
    "start": "1210240",
    "end": "1211760"
  },
  {
    "text": "our proxy",
    "start": "1211760",
    "end": "1213440"
  },
  {
    "text": "this is one of the few places that where",
    "start": "1213440",
    "end": "1214880"
  },
  {
    "text": "we diverse from kubernetes we don't use",
    "start": "1214880",
    "end": "1217919"
  },
  {
    "text": "the kubernetes code to do this stuff",
    "start": "1217919",
    "end": "1220080"
  },
  {
    "text": "because it happens to be the code that",
    "start": "1220080",
    "end": "1221679"
  },
  {
    "text": "had the most critical cve in the history",
    "start": "1221679",
    "end": "1223440"
  },
  {
    "text": "of the kubernetes project so we just",
    "start": "1223440",
    "end": "1225360"
  },
  {
    "text": "decided that it was better to heavily",
    "start": "1225360",
    "end": "1227120"
  },
  {
    "text": "rely on the standard library instead of",
    "start": "1227120",
    "end": "1228960"
  },
  {
    "text": "what kubernetes does in this place",
    "start": "1228960",
    "end": "1232320"
  },
  {
    "text": "and of course watches are super critical",
    "start": "1233440",
    "end": "1235280"
  },
  {
    "text": "to the kubernetes experience so we made",
    "start": "1235280",
    "end": "1236880"
  },
  {
    "text": "sure those still work",
    "start": "1236880",
    "end": "1239679"
  },
  {
    "text": "so",
    "start": "1239919",
    "end": "1241039"
  },
  {
    "text": "after all of that does anyone think",
    "start": "1241039",
    "end": "1243679"
  },
  {
    "text": "they can write a correct",
    "start": "1243679",
    "end": "1245840"
  },
  {
    "text": "safe performant and otherwise perfect",
    "start": "1245840",
    "end": "1248720"
  },
  {
    "text": "impersonation proxy",
    "start": "1248720",
    "end": "1251840"
  },
  {
    "text": "but i'm going to say no no you cannot",
    "start": "1252000",
    "end": "1254640"
  },
  {
    "text": "and i have proof that you can't",
    "start": "1254640",
    "end": "1257840"
  },
  {
    "text": "so i went hunting right",
    "start": "1257840",
    "end": "1259760"
  },
  {
    "text": "and there's this really cool project",
    "start": "1259760",
    "end": "1261520"
  },
  {
    "text": "called hema",
    "start": "1261520",
    "end": "1262960"
  },
  {
    "text": "that builds a bunch of higher order",
    "start": "1262960",
    "end": "1264400"
  },
  {
    "text": "functionality on top of kubernetes like",
    "start": "1264400",
    "end": "1266799"
  },
  {
    "text": "functions and serverless and all the",
    "start": "1266799",
    "end": "1268159"
  },
  {
    "text": "cool stuff microservice stuff",
    "start": "1268159",
    "end": "1270480"
  },
  {
    "text": "and for another reason they're using",
    "start": "1270480",
    "end": "1271600"
  },
  {
    "text": "impersonation proxy",
    "start": "1271600",
    "end": "1273280"
  },
  {
    "text": "and they forgot to validate some inputs",
    "start": "1273280",
    "end": "1275760"
  },
  {
    "text": "it didn't work out so well for them",
    "start": "1275760",
    "end": "1278240"
  },
  {
    "text": "if you don't know about chemo i'm pretty",
    "start": "1278240",
    "end": "1279520"
  },
  {
    "text": "sure you probably know about mesosphere",
    "start": "1279520",
    "end": "1282480"
  },
  {
    "text": "and hopefully you updated last month",
    "start": "1282480",
    "end": "1285440"
  },
  {
    "text": "because they also forgot to sanitize",
    "start": "1285440",
    "end": "1287039"
  },
  {
    "text": "some inputs",
    "start": "1287039",
    "end": "1289200"
  },
  {
    "text": "and",
    "start": "1289200",
    "end": "1290400"
  },
  {
    "text": "the underlying proxy code they use from",
    "start": "1290400",
    "end": "1292559"
  },
  {
    "text": "a company called traffic by the way",
    "start": "1292559",
    "end": "1294000"
  },
  {
    "text": "these guys are amazing they had the most",
    "start": "1294000",
    "end": "1295600"
  },
  {
    "text": "phenomenal security response i've seen",
    "start": "1295600",
    "end": "1297120"
  },
  {
    "text": "from a company in a very long time",
    "start": "1297120",
    "end": "1299520"
  },
  {
    "text": "for them it was a pretty trivial low",
    "start": "1299520",
    "end": "1301760"
  },
  {
    "text": "value cve and as they clearly state in",
    "start": "1301760",
    "end": "1304240"
  },
  {
    "text": "their disclosure that the expectation of",
    "start": "1304240",
    "end": "1306480"
  },
  {
    "text": "such an issue is very unlikely because",
    "start": "1306480",
    "end": "1308799"
  },
  {
    "text": "it requires that the removal of a header",
    "start": "1308799",
    "end": "1310559"
  },
  {
    "text": "would lead to a privilege escalation",
    "start": "1310559",
    "end": "1312320"
  },
  {
    "text": "what just so happens that if you remove",
    "start": "1312320",
    "end": "1314000"
  },
  {
    "text": "impersonation headers you get a",
    "start": "1314000",
    "end": "1315440"
  },
  {
    "text": "privilege escalation",
    "start": "1315440",
    "end": "1318480"
  },
  {
    "text": "all right if you don't know anything",
    "start": "1318480",
    "end": "1320000"
  },
  {
    "text": "about those companies i'm really willing",
    "start": "1320000",
    "end": "1321520"
  },
  {
    "text": "to bet you know about rancher and they",
    "start": "1321520",
    "end": "1323520"
  },
  {
    "text": "also got this wrong",
    "start": "1323520",
    "end": "1325280"
  },
  {
    "text": "right",
    "start": "1325280",
    "end": "1327280"
  },
  {
    "text": "so",
    "start": "1327280",
    "end": "1328080"
  },
  {
    "text": "if we walk through the severity of this",
    "start": "1328080",
    "end": "1330320"
  },
  {
    "text": "right we can kind of ignore the network",
    "start": "1330320",
    "end": "1331919"
  },
  {
    "text": "bit everything on kubernetes is",
    "start": "1331919",
    "end": "1333440"
  },
  {
    "text": "networked it's not really significant",
    "start": "1333440",
    "end": "1335760"
  },
  {
    "text": "the complexity of these attacks is",
    "start": "1335760",
    "end": "1337120"
  },
  {
    "text": "incredibly trivial you're setting some",
    "start": "1337120",
    "end": "1338480"
  },
  {
    "text": "headers on the request",
    "start": "1338480",
    "end": "1340240"
  },
  {
    "text": "uh in terms of privilege there's no",
    "start": "1340240",
    "end": "1341919"
  },
  {
    "text": "actual privilege requirement you just",
    "start": "1341919",
    "end": "1343200"
  },
  {
    "text": "have to authenticate so it's like the",
    "start": "1343200",
    "end": "1344880"
  },
  {
    "text": "lowest possible privilege",
    "start": "1344880",
    "end": "1347440"
  },
  {
    "text": "and there's no user interaction",
    "start": "1347440",
    "end": "1349440"
  },
  {
    "text": "right you're just attacking the network",
    "start": "1349440",
    "end": "1350960"
  },
  {
    "text": "proxy directly",
    "start": "1350960",
    "end": "1352400"
  },
  {
    "text": "so the only thing really left is the",
    "start": "1352400",
    "end": "1354240"
  },
  {
    "text": "actual severity of these issues and it",
    "start": "1354240",
    "end": "1356400"
  },
  {
    "text": "just so happens in all of these cases",
    "start": "1356400",
    "end": "1358320"
  },
  {
    "text": "all the ones i described earlier",
    "start": "1358320",
    "end": "1360559"
  },
  {
    "text": "every single one of them led to a",
    "start": "1360559",
    "end": "1363120"
  },
  {
    "text": "completely unprivileged user becoming",
    "start": "1363120",
    "end": "1365520"
  },
  {
    "text": "full cluster admin on the environment",
    "start": "1365520",
    "end": "1367919"
  },
  {
    "text": "right so if we think about this in the",
    "start": "1367919",
    "end": "1370240"
  },
  {
    "text": "recent trends of ransomware i can tell",
    "start": "1370240",
    "end": "1372000"
  },
  {
    "text": "you that you have no confidentiality the",
    "start": "1372000",
    "end": "1374240"
  },
  {
    "text": "ransomware will export all of your data",
    "start": "1374240",
    "end": "1376080"
  },
  {
    "text": "off your cluster to some s3 bucket",
    "start": "1376080",
    "end": "1377840"
  },
  {
    "text": "somewhere",
    "start": "1377840",
    "end": "1378799"
  },
  {
    "text": "right you will have no integrity because",
    "start": "1378799",
    "end": "1380480"
  },
  {
    "text": "it's going to encrypt all your data",
    "start": "1380480",
    "end": "1382240"
  },
  {
    "text": "and you will have no availability",
    "start": "1382240",
    "end": "1383600"
  },
  {
    "text": "because all your data is encrypted and",
    "start": "1383600",
    "end": "1384880"
  },
  {
    "text": "also your infra is running bitcoin",
    "start": "1384880",
    "end": "1386400"
  },
  {
    "text": "miners or something right so the only",
    "start": "1386400",
    "end": "1388400"
  },
  {
    "text": "thing actually left is did you have a",
    "start": "1388400",
    "end": "1390960"
  },
  {
    "text": "scope change well i don't know maybe it",
    "start": "1390960",
    "end": "1393280"
  },
  {
    "text": "got access to other cloud credentials",
    "start": "1393280",
    "end": "1395039"
  },
  {
    "text": "and then your whole infra is destroyed",
    "start": "1395039",
    "end": "1396480"
  },
  {
    "text": "or whatever so maybe you did so you're",
    "start": "1396480",
    "end": "1398400"
  },
  {
    "text": "either talking about a high or a",
    "start": "1398400",
    "end": "1399840"
  },
  {
    "text": "critical like",
    "start": "1399840",
    "end": "1401440"
  },
  {
    "text": "either way your day is ruined",
    "start": "1401440",
    "end": "1404400"
  },
  {
    "text": "right",
    "start": "1404400",
    "end": "1405520"
  },
  {
    "text": "so",
    "start": "1405520",
    "end": "1406799"
  },
  {
    "text": "we",
    "start": "1406799",
    "end": "1407760"
  },
  {
    "text": "were always very nervous about building",
    "start": "1407760",
    "end": "1409600"
  },
  {
    "text": "this so we had always",
    "start": "1409600",
    "end": "1413200"
  },
  {
    "text": "designed this stuff with a bunch of",
    "start": "1413200",
    "end": "1414480"
  },
  {
    "text": "security thoughts in mind so we always",
    "start": "1414480",
    "end": "1416799"
  },
  {
    "text": "set all the standard security headers",
    "start": "1416799",
    "end": "1418320"
  },
  {
    "text": "that you want to set to make sure",
    "start": "1418320",
    "end": "1419600"
  },
  {
    "text": "everything is safe",
    "start": "1419600",
    "end": "1421679"
  },
  {
    "text": "right",
    "start": "1421679",
    "end": "1422480"
  },
  {
    "text": "um",
    "start": "1422480",
    "end": "1424559"
  },
  {
    "text": "we always did every input validation we",
    "start": "1424559",
    "end": "1426960"
  },
  {
    "text": "could think of like to pedantic levels",
    "start": "1426960",
    "end": "1431440"
  },
  {
    "text": "okay if we thought for any reason that",
    "start": "1431440",
    "end": "1433679"
  },
  {
    "text": "we weren't going to exactly impersonate",
    "start": "1433679",
    "end": "1435600"
  },
  {
    "text": "your identity bit for bit even if there",
    "start": "1435600",
    "end": "1437919"
  },
  {
    "text": "was like a slight case difference or",
    "start": "1437919",
    "end": "1439360"
  },
  {
    "text": "something we just failed at requests for",
    "start": "1439360",
    "end": "1440640"
  },
  {
    "text": "like whatever we'd rather not do",
    "start": "1440640",
    "end": "1442240"
  },
  {
    "text": "anything than accidentally do something",
    "start": "1442240",
    "end": "1443600"
  },
  {
    "text": "wrong",
    "start": "1443600",
    "end": "1445760"
  },
  {
    "text": "right but after learning of all these",
    "start": "1445760",
    "end": "1447840"
  },
  {
    "text": "issues in our ecosystem",
    "start": "1447840",
    "end": "1449760"
  },
  {
    "text": "we took some further steps to harden our",
    "start": "1449760",
    "end": "1451360"
  },
  {
    "text": "implementation just in case that we had",
    "start": "1451360",
    "end": "1453520"
  },
  {
    "text": "some mistake that was unknown to us",
    "start": "1453520",
    "end": "1455039"
  },
  {
    "text": "today",
    "start": "1455039",
    "end": "1456480"
  },
  {
    "text": "so if you happen to use azure kubernetes",
    "start": "1456480",
    "end": "1458480"
  },
  {
    "text": "service they're the main cloud provider",
    "start": "1458480",
    "end": "1460080"
  },
  {
    "text": "that disables anonymous authentication",
    "start": "1460080",
    "end": "1462559"
  },
  {
    "text": "so if you run our proxy against their",
    "start": "1462559",
    "end": "1464720"
  },
  {
    "text": "api servers it will automatically detect",
    "start": "1464720",
    "end": "1467039"
  },
  {
    "text": "this case and honor that configuration",
    "start": "1467039",
    "end": "1468880"
  },
  {
    "text": "for you",
    "start": "1468880",
    "end": "1470159"
  },
  {
    "text": "we happen to have one api that's a",
    "start": "1470159",
    "end": "1472080"
  },
  {
    "text": "pre-login api",
    "start": "1472080",
    "end": "1473600"
  },
  {
    "text": "so that one is passed through but",
    "start": "1473600",
    "end": "1474799"
  },
  {
    "text": "otherwise everything else is",
    "start": "1474799",
    "end": "1476640"
  },
  {
    "text": "rejected as you would expect in those",
    "start": "1476640",
    "end": "1478080"
  },
  {
    "text": "environments",
    "start": "1478080",
    "end": "1480080"
  },
  {
    "text": "we use a distinct service account to",
    "start": "1480080",
    "end": "1481600"
  },
  {
    "text": "handle this impersonation stuff so all",
    "start": "1481600",
    "end": "1483919"
  },
  {
    "text": "it can do is impersonate so if you",
    "start": "1483919",
    "end": "1485360"
  },
  {
    "text": "manage to make us drop our headers",
    "start": "1485360",
    "end": "1488480"
  },
  {
    "text": "the requests will run as a user with no",
    "start": "1488480",
    "end": "1490720"
  },
  {
    "text": "permissions",
    "start": "1490720",
    "end": "1491840"
  },
  {
    "text": "so at least that's okay",
    "start": "1491840",
    "end": "1494080"
  },
  {
    "text": "now of course if you somehow manage to",
    "start": "1494080",
    "end": "1495440"
  },
  {
    "text": "trick us into running the wrong headers",
    "start": "1495440",
    "end": "1496880"
  },
  {
    "text": "then everything is",
    "start": "1496880",
    "end": "1499039"
  },
  {
    "text": "sort of over anyway",
    "start": "1499039",
    "end": "1501039"
  },
  {
    "text": "probably the most critical thing we do",
    "start": "1501039",
    "end": "1503039"
  },
  {
    "text": "is we no longer rely on the api server",
    "start": "1503039",
    "end": "1505360"
  },
  {
    "text": "to perform authorization checks for us",
    "start": "1505360",
    "end": "1506960"
  },
  {
    "text": "we pre-authorize every request using the",
    "start": "1506960",
    "end": "1508880"
  },
  {
    "text": "subject access review api just to make",
    "start": "1508880",
    "end": "1511200"
  },
  {
    "text": "sure that",
    "start": "1511200",
    "end": "1513520"
  },
  {
    "text": "you're at least authorized to do the",
    "start": "1513520",
    "end": "1515039"
  },
  {
    "text": "thing we fully rely on the api server to",
    "start": "1515039",
    "end": "1517279"
  },
  {
    "text": "perform all the admission checks that we",
    "start": "1517279",
    "end": "1518720"
  },
  {
    "text": "needed to do but on like read requests",
    "start": "1518720",
    "end": "1520880"
  },
  {
    "text": "and stuff",
    "start": "1520880",
    "end": "1521760"
  },
  {
    "text": "uh if we don't think you can make the",
    "start": "1521760",
    "end": "1523039"
  },
  {
    "text": "request we're not going to reverse proxy",
    "start": "1523039",
    "end": "1524559"
  },
  {
    "text": "at all",
    "start": "1524559",
    "end": "1526799"
  },
  {
    "text": "so uh looking forward uh we're hoping",
    "start": "1527520",
    "end": "1530559"
  },
  {
    "text": "that one day these workarounds that we",
    "start": "1530559",
    "end": "1532080"
  },
  {
    "text": "built are going to become obsolete",
    "start": "1532080",
    "end": "1534799"
  },
  {
    "text": "uh the ball is already rolling for",
    "start": "1534799",
    "end": "1536880"
  },
  {
    "text": "certificates so moe added",
    "start": "1536880",
    "end": "1539840"
  },
  {
    "text": "expiration seconds to the certificate",
    "start": "1539840",
    "end": "1541600"
  },
  {
    "text": "signing request api",
    "start": "1541600",
    "end": "1543600"
  },
  {
    "text": "which means that we won't need our",
    "start": "1543600",
    "end": "1545200"
  },
  {
    "text": "cluster signing key stealing hack work",
    "start": "1545200",
    "end": "1547440"
  },
  {
    "text": "around since we can request any like as",
    "start": "1547440",
    "end": "1549760"
  },
  {
    "text": "short as 10 minutes",
    "start": "1549760",
    "end": "1551600"
  },
  {
    "text": "this only came out in 122 though which",
    "start": "1551600",
    "end": "1553760"
  },
  {
    "text": "is super recent so it'll be a while",
    "start": "1553760",
    "end": "1556320"
  },
  {
    "text": "before it has widespread adoption",
    "start": "1556320",
    "end": "1558720"
  },
  {
    "text": "and even then it won't work on eks",
    "start": "1558720",
    "end": "1562240"
  },
  {
    "text": "and of course it isn't a full solution",
    "start": "1562240",
    "end": "1564480"
  },
  {
    "text": "even with a short-lived certificate you",
    "start": "1564480",
    "end": "1566400"
  },
  {
    "text": "still need tools built around it for",
    "start": "1566400",
    "end": "1568000"
  },
  {
    "text": "logging in with your identity provider",
    "start": "1568000",
    "end": "1569919"
  },
  {
    "text": "and refreshing certificates when they",
    "start": "1569919",
    "end": "1571440"
  },
  {
    "text": "expire these are all things that",
    "start": "1571440",
    "end": "1573279"
  },
  {
    "text": "pinniped does and that you would need to",
    "start": "1573279",
    "end": "1575200"
  },
  {
    "text": "do if you were implementing your own",
    "start": "1575200",
    "end": "1576960"
  },
  {
    "text": "solution with short-lived certificates",
    "start": "1576960",
    "end": "1580480"
  },
  {
    "text": "so over a year ago i had proposed the",
    "start": "1582480",
    "end": "1584720"
  },
  {
    "text": "ability to have dynamic authentication",
    "start": "1584720",
    "end": "1587120"
  },
  {
    "text": "configuration in the kubernetes api",
    "start": "1587120",
    "end": "1589440"
  },
  {
    "text": "so that kept was rejected under",
    "start": "1589440",
    "end": "1592000"
  },
  {
    "text": "the belief that",
    "start": "1592000",
    "end": "1593679"
  },
  {
    "text": "it proposed a cluster configuration api",
    "start": "1593679",
    "end": "1596080"
  },
  {
    "text": "and not something that should be built",
    "start": "1596080",
    "end": "1597600"
  },
  {
    "text": "into the kubernetes api server",
    "start": "1597600",
    "end": "1599760"
  },
  {
    "text": "or set in a different way the",
    "start": "1599760",
    "end": "1601600"
  },
  {
    "text": "configuration belong to the cluster",
    "start": "1601600",
    "end": "1603919"
  },
  {
    "text": "operator persona and not the cluster",
    "start": "1603919",
    "end": "1606080"
  },
  {
    "text": "admin persona",
    "start": "1606080",
    "end": "1607520"
  },
  {
    "text": "of course i disagree with this because i",
    "start": "1607520",
    "end": "1608799"
  },
  {
    "text": "wouldn't written the kep otherwise",
    "start": "1608799",
    "end": "1610960"
  },
  {
    "text": "but i feel like there's probably some",
    "start": "1610960",
    "end": "1612640"
  },
  {
    "text": "middle ground where we can try to find",
    "start": "1612640",
    "end": "1614159"
  },
  {
    "text": "the good parts of impersonation without",
    "start": "1614159",
    "end": "1616320"
  },
  {
    "text": "all the bad so no proxies no privilege",
    "start": "1616320",
    "end": "1618640"
  },
  {
    "text": "escalation no fail open behavior uh so",
    "start": "1618640",
    "end": "1621600"
  },
  {
    "text": "you know you could imagine",
    "start": "1621600",
    "end": "1623360"
  },
  {
    "text": "maybe some token based api that gives",
    "start": "1623360",
    "end": "1626159"
  },
  {
    "text": "you identities from the cluster or",
    "start": "1626159",
    "end": "1627520"
  },
  {
    "text": "something that either you set the token",
    "start": "1627520",
    "end": "1629520"
  },
  {
    "text": "or you don't but you can't",
    "start": "1629520",
    "end": "1631200"
  },
  {
    "text": "can't break out of the bounds of some",
    "start": "1631200",
    "end": "1632880"
  },
  {
    "text": "signed assertion of identity",
    "start": "1632880",
    "end": "1635279"
  },
  {
    "text": "as a for example",
    "start": "1635279",
    "end": "1638080"
  },
  {
    "text": "uh so to summarize uh built-in",
    "start": "1638960",
    "end": "1641600"
  },
  {
    "text": "kubernetes auth is super flexible but",
    "start": "1641600",
    "end": "1644240"
  },
  {
    "text": "it's hard to configure and it's mostly",
    "start": "1644240",
    "end": "1646240"
  },
  {
    "text": "not possible to configure it at runtime",
    "start": "1646240",
    "end": "1648559"
  },
  {
    "text": "we built some cool workarounds to get",
    "start": "1648559",
    "end": "1650399"
  },
  {
    "text": "around the paint points we saw by",
    "start": "1650399",
    "end": "1651840"
  },
  {
    "text": "acquiring the cluster signing key pair",
    "start": "1651840",
    "end": "1653760"
  },
  {
    "text": "from the control plane so we could mint",
    "start": "1653760",
    "end": "1656320"
  },
  {
    "text": "short-lived certificates with it and by",
    "start": "1656320",
    "end": "1658240"
  },
  {
    "text": "writing an impersonation proxy",
    "start": "1658240",
    "end": "1660480"
  },
  {
    "text": "and we're still working towards making",
    "start": "1660480",
    "end": "1662000"
  },
  {
    "text": "our workarounds unnecessary",
    "start": "1662000",
    "end": "1664159"
  },
  {
    "text": "we believe that off shouldn't be",
    "start": "1664159",
    "end": "1665360"
  },
  {
    "text": "considered part of your infrastructure",
    "start": "1665360",
    "end": "1666799"
  },
  {
    "text": "config under the control of the cluster",
    "start": "1666799",
    "end": "1668399"
  },
  {
    "text": "operator hp standard kubernetes",
    "start": "1668399",
    "end": "1670399"
  },
  {
    "text": "configuration under the control of the",
    "start": "1670399",
    "end": "1672240"
  },
  {
    "text": "cluster admin having it be",
    "start": "1672240",
    "end": "1673760"
  },
  {
    "text": "infrastructure config makes it hard to",
    "start": "1673760",
    "end": "1675919"
  },
  {
    "text": "have unified identity across kubernetes",
    "start": "1675919",
    "end": "1678159"
  },
  {
    "text": "distributions",
    "start": "1678159",
    "end": "1679679"
  },
  {
    "text": "piniped uses a series of workarounds but",
    "start": "1679679",
    "end": "1681679"
  },
  {
    "text": "we don't consider them to be the safest",
    "start": "1681679",
    "end": "1683120"
  },
  {
    "text": "approach to solve these problems and we",
    "start": "1683120",
    "end": "1684640"
  },
  {
    "text": "think changes need to be made to quark",
    "start": "1684640",
    "end": "1686000"
  },
  {
    "text": "kubernetes so it's easier and safer to",
    "start": "1686000",
    "end": "1687840"
  },
  {
    "text": "build we trust the cluster admin with",
    "start": "1687840",
    "end": "1689919"
  },
  {
    "text": "near complete control over authorization",
    "start": "1689919",
    "end": "1691760"
  },
  {
    "text": "with kubernetes are back in admission",
    "start": "1691760",
    "end": "1693279"
  },
  {
    "text": "web hooks at run time so we should",
    "start": "1693279",
    "end": "1695200"
  },
  {
    "text": "extend that same trust to authorization",
    "start": "1695200",
    "end": "1697200"
  },
  {
    "text": "as well authentication",
    "start": "1697200",
    "end": "1699200"
  },
  {
    "text": "yes yes authentication",
    "start": "1699200",
    "end": "1702720"
  },
  {
    "text": "if you're interested in learning more",
    "start": "1703440",
    "end": "1704480"
  },
  {
    "text": "about pinniped we implement the",
    "start": "1704480",
    "end": "1705919"
  },
  {
    "text": "workarounds we talked about today and a",
    "start": "1705919",
    "end": "1708159"
  },
  {
    "text": "full logging experience that lets you",
    "start": "1708159",
    "end": "1709600"
  },
  {
    "text": "integrate with odc ldap and active",
    "start": "1709600",
    "end": "1711840"
  },
  {
    "text": "directory identity providers you can",
    "start": "1711840",
    "end": "1713840"
  },
  {
    "text": "read our source code to see how we did",
    "start": "1713840",
    "end": "1715120"
  },
  {
    "text": "it on github",
    "start": "1715120",
    "end": "1716320"
  },
  {
    "text": "you can also find",
    "start": "1716320",
    "end": "1717520"
  },
  {
    "text": "us at piniped.gov and we're active on",
    "start": "1717520",
    "end": "1719919"
  },
  {
    "text": "the pin bed channel in kubernetes slack",
    "start": "1719919",
    "end": "1722799"
  },
  {
    "text": "where an apache2 licensed open source",
    "start": "1722799",
    "end": "1724640"
  },
  {
    "text": "project for anyone interested",
    "start": "1724640",
    "end": "1726640"
  },
  {
    "text": "so",
    "start": "1726640",
    "end": "1727919"
  },
  {
    "text": "thanks for coming",
    "start": "1727919",
    "end": "1731320"
  },
  {
    "text": "[Applause]",
    "start": "1731500",
    "end": "1736750"
  }
]