[
  {
    "text": "let's get started hi everyone Welcome to our session on securing outgoing",
    "start": "80",
    "end": "5560"
  },
  {
    "text": "traffic so let's take a deep breathe and just have fun so just a bit of introduction about",
    "start": "5560",
    "end": "13400"
  },
  {
    "text": "ourselves my name is Ed I'm a software engineer working on working at Airbnb on",
    "start": "13400",
    "end": "18520"
  },
  {
    "text": "the cloud infer team so you might have guessed I am a cat person I love I love",
    "start": "18520",
    "end": "24119"
  },
  {
    "text": "cats I have three lovely cats and my hobbies in ler time includes basketball",
    "start": "24119",
    "end": "29439"
  },
  {
    "text": "dancing singing and I actually try a lot of different things and here together",
    "start": "29439",
    "end": "34879"
  },
  {
    "text": "with me is my uh dear teammate a yeah hi everyone my name is akitt and",
    "start": "34879",
    "end": "43399"
  },
  {
    "text": "along with Ed I'm a sov engineer at the cloud infrastructure team at Airbnb and",
    "start": "43399",
    "end": "49399"
  },
  {
    "text": "U I'm a hiking Enthusiast and almost everything outdoors including biking",
    "start": "49399",
    "end": "55079"
  },
  {
    "text": "paddle boarding Etc and you can see the in the photo we have the Mighty mount",
    "start": "55079",
    "end": "60840"
  },
  {
    "text": "rer in my back and yeah just like my hike up this mountain the igis Gateway",
    "start": "60840",
    "end": "66799"
  },
  {
    "text": "Journey was hard but very rewarding for me and I'm really excited to share it",
    "start": "66799",
    "end": "71960"
  },
  {
    "text": "with you today cool so let's jump into the topic we have today so we will go by",
    "start": "71960",
    "end": "79240"
  },
  {
    "text": "what is egress why do you need a egress and how in the how section I will firstly talk from a high level",
    "start": "79240",
    "end": "85520"
  },
  {
    "text": "perspective on several architectures and then uh choices and then AKA will take a",
    "start": "85520",
    "end": "90920"
  },
  {
    "text": "deep dive into one specific solution that we chose using Envoy cool let's just quickly go through",
    "start": "90920",
    "end": "97320"
  },
  {
    "text": "what is e Gateway by definition an EG Gateway is a mechanism that manages and outbound",
    "start": "97320",
    "end": "104759"
  },
  {
    "text": "traffic to access the comp Network it's a pair of concept with",
    "start": "104759",
    "end": "109880"
  },
  {
    "text": "Ingress and then which the Ingress just take the inbound traffic so egress is just the opposite direction of that",
    "start": "109880",
    "end": "116399"
  },
  {
    "text": "which taking care of the traffic leaving your network and that Concept in mind",
    "start": "116399",
    "end": "121439"
  },
  {
    "text": "internet equ Skateway is basically an e that manages traffic going to inter a",
    "start": "121439",
    "end": "127159"
  },
  {
    "text": "public internet that's what we call it internet eway sorry internet e Gateway",
    "start": "127159",
    "end": "133319"
  },
  {
    "text": "and so now can you think of any examples of egress in",
    "start": "133319",
    "end": "138680"
  },
  {
    "text": "general yeah there are actually many so controlling egress traffic isn't something new or specific to Cloud it's",
    "start": "138840",
    "end": "146319"
  },
  {
    "text": "actually quite a fundamental TCH step and there are many technology exist to help with that for example you may have",
    "start": "146319",
    "end": "153120"
  },
  {
    "text": "heard of BNS firewall AWS net Gateway or even some open source project like n",
    "start": "153120",
    "end": "159080"
  },
  {
    "text": "voice with proy all of these are erress or can be used as an erress but just",
    "start": "159080",
    "end": "165000"
  },
  {
    "text": "operating at different level of net Network stack for example some provide lower uh level support like IP based",
    "start": "165000",
    "end": "172640"
  },
  {
    "text": "control where others provide more L7 control and htd host and each of them",
    "start": "172640",
    "end": "179640"
  },
  {
    "text": "have Pro cons so h a holistic ER solution often combines various of",
    "start": "179640",
    "end": "185920"
  },
  {
    "text": "control for example we can both have an erass for fine grain application Level",
    "start": "185920",
    "end": "191640"
  },
  {
    "text": "control and then we can also add a firewall for the lower NW level control",
    "start": "191640",
    "end": "196920"
  },
  {
    "text": "to provide a well-rounded security solution and today we are going to mainly focus on the ESS control at the",
    "start": "196920",
    "end": "204519"
  },
  {
    "text": "application Level okay so the next question is why",
    "start": "204519",
    "end": "209560"
  },
  {
    "text": "do we need an internet e Skateway the first reason on top of our",
    "start": "209560",
    "end": "214680"
  },
  {
    "text": "minds is security so usually when people think about like network security we",
    "start": "214680",
    "end": "220159"
  },
  {
    "text": "will emphasize on the Ingress side a lot however it turns out securing the",
    "start": "220159",
    "end": "225519"
  },
  {
    "text": "traffic leing your system is also very important for example if we encounter",
    "start": "225519",
    "end": "230959"
  },
  {
    "text": "some vulnerability issues like La for you don't want attackers to easily execute sensitive data to some malicious",
    "start": "230959",
    "end": "237959"
  },
  {
    "text": "websites right so if you want to protect your company data for this situation it's time to really think about adding",
    "start": "237959",
    "end": "244120"
  },
  {
    "text": "more control on the EG side as well so therefore to follow the best practice of",
    "start": "244120",
    "end": "249720"
  },
  {
    "text": "Defense inexs we will have multiple layers of assess control from traffic entering to Leading our system so not",
    "start": "249720",
    "end": "256320"
  },
  {
    "text": "only Ingress we build up erress Gateway which will help us prevent any upur access to the public internet thus avoid",
    "start": "256320",
    "end": "263639"
  },
  {
    "text": "data execution when the zero is happen and secondly monitoring is also a",
    "start": "263639",
    "end": "270280"
  },
  {
    "text": "big plus with the growth in AI area and the emergence of large language models",
    "start": "270280",
    "end": "275600"
  },
  {
    "text": "usage I bet there is an escalating demand for calling external AIS sorry",
    "start": "275600",
    "end": "281160"
  },
  {
    "text": "apis this days so having something to audit and attribute cost associated with",
    "start": "281160",
    "end": "286639"
  },
  {
    "text": "such activities become more and more crucial and we think logs those logs",
    "start": "286639",
    "end": "291919"
  },
  {
    "text": "metrics provided by an eway is going to be very helpful for that cool now let's uh have",
    "start": "291919",
    "end": "300240"
  },
  {
    "text": "as we have know what's E erass why do we need an erass let's just talk about some high level architecture choices and see",
    "start": "300240",
    "end": "307520"
  },
  {
    "text": "how we make the final decision Sor oh yeah final decision um just to set up the",
    "start": "307520",
    "end": "313560"
  },
  {
    "text": "background a bit for everyone there are some facts about Airbnb Services firstly",
    "start": "313560",
    "end": "318720"
  },
  {
    "text": "Airbnb has full adoption with e proxy for inter service communication uh e",
    "start": "318720",
    "end": "324160"
  },
  {
    "text": "process is basically also just running on top of NY so you can think of this NY process as well and secondly to",
    "start": "324160",
    "end": "330240"
  },
  {
    "text": "understand your our use cases we find out the majority of our outgoing traffic is using",
    "start": "330240",
    "end": "336880"
  },
  {
    "text": "HDs and also we have some requirements for this egress for example we want to",
    "start": "336880",
    "end": "341960"
  },
  {
    "text": "make the migration of this uh internet traffic to egress Gateway as trans transparent as possible specifically we",
    "start": "341960",
    "end": "349240"
  },
  {
    "text": "want to minimize the changes required in application codes also when service",
    "start": "349240",
    "end": "354400"
  },
  {
    "text": "owners they try to on board this erress we want the toil for them is minimum",
    "start": "354400",
    "end": "361479"
  },
  {
    "text": "cool uh so after some rounds of exploration uh yeah exploration we",
    "start": "361479",
    "end": "366639"
  },
  {
    "text": "consider this m three types of e architecture and here we also want to give a big shout out to Liam Li and his",
    "start": "366639",
    "end": "373680"
  },
  {
    "text": "folks at LIF because we got a lot of help from or inspiration from his blog",
    "start": "373680",
    "end": "378720"
  },
  {
    "text": "post and the talk and later I will introduce each of them one by one but",
    "start": "378720",
    "end": "385080"
  },
  {
    "text": "firstly I also want to just po three questions for each of typ of the e we we",
    "start": "385080",
    "end": "390120"
  },
  {
    "text": "want to think about how do we route inter internet traffic from the client to the egress secondly when the traffic",
    "start": "390120",
    "end": "397639"
  },
  {
    "text": "arrive at ESS how does the ESS know that which is the destination it want to further rout to and lastly is the",
    "start": "397639",
    "end": "405160"
  },
  {
    "text": "payload endtoend encrypted between the client and the destination I think that will help us uh memorize this uh uh",
    "start": "405160",
    "end": "413080"
  },
  {
    "text": "different ures B so now let's take the take a look at the first type of erress",
    "start": "413080",
    "end": "418680"
  },
  {
    "text": "we call it EXP HTP connect erress so in this type of erress we simply will just",
    "start": "418680",
    "end": "424919"
  },
  {
    "text": "use connect method in HT protocol to let the client send the request through the erress and then further to the",
    "start": "424919",
    "end": "431319"
  },
  {
    "text": "destination uh server and connect is just a standard H method provided by the",
    "start": "431319",
    "end": "437400"
  },
  {
    "text": "web ecosystem which provide us the native support for ring traffic proy so",
    "start": "437400",
    "end": "443160"
  },
  {
    "text": "to answer the three questions I just posed yeah firstly we just R back",
    "start": "443160",
    "end": "449639"
  },
  {
    "text": "instructing the client to send a connect request to the destination the destination URL will be in the connect",
    "start": "449639",
    "end": "456759"
  },
  {
    "text": "uh request and yeah because we explicit specify the host name of the erress and",
    "start": "456759",
    "end": "461919"
  },
  {
    "text": "in a like a environment variable things so that will tell the traffic to firstly",
    "start": "461919",
    "end": "467680"
  },
  {
    "text": "Proxes through uh Gateway and then to Final Destination and how does the uh e",
    "start": "467680",
    "end": "474759"
  },
  {
    "text": "Gateway know about the destination is actually in the initial connect request",
    "start": "474759",
    "end": "479800"
  },
  {
    "text": "uh the Gateway will just when when the traffic arrives at the erress the egress will just get a destination from it and",
    "start": "479800",
    "end": "486680"
  },
  {
    "text": "then it will further establish a TCP connection to the destination so once the initial connect happens successfully",
    "start": "486680",
    "end": "493879"
  },
  {
    "text": "uh HP connect tunnel will be established between the client and the destination so the client will just",
    "start": "493879",
    "end": "501360"
  },
  {
    "text": "directly do TRS handshake with the destination so the payload is actually end to endend",
    "start": "501360",
    "end": "506680"
  },
  {
    "text": "encrypted to summarize this type uh the like the yeah the properties of this egress a bit so this type of erress is",
    "start": "506680",
    "end": "514120"
  },
  {
    "text": "powerful because connect method can support various of protocols running on top of it like HTP htps and SFTP and so",
    "start": "514120",
    "end": "523080"
  },
  {
    "text": "on and with this architecture all the routing logic is native handled by",
    "start": "523080",
    "end": "528720"
  },
  {
    "text": "connect method so we don't need to end it up and imple Implement any Lo routing logic by ourselves however the migration",
    "start": "528720",
    "end": "536959"
  },
  {
    "text": "won't be transparent because we need need to modify the call sites in all of the client codes to in to kind of",
    "start": "536959",
    "end": "544000"
  },
  {
    "text": "instruct them or construct the uh connect requests to the egress so the migration is not transparent and also",
    "start": "544000",
    "end": "552480"
  },
  {
    "text": "this uh and also because it require you to uh change the application codes and",
    "start": "552480",
    "end": "558240"
  },
  {
    "text": "all these clients might be running or using like all these clients might be using different ATT Frameworks and",
    "start": "558240",
    "end": "565320"
  },
  {
    "text": "different programming languages so we need to migrant them Case by case",
    "start": "565320",
    "end": "571360"
  },
  {
    "text": "so and lastly only L for observability like TCP bites and connection level metrics are available for this EGR",
    "start": "571519",
    "end": "578560"
  },
  {
    "text": "Gateway because the payload is end to end encrypted might",
    "start": "578560",
    "end": "586640"
  },
  {
    "text": "just okay now let's take a look that second type we consider which is called transparent erress for",
    "start": "593839",
    "end": "600640"
  },
  {
    "text": "HDs we call it transparent because unlike the connect method we saw before",
    "start": "600640",
    "end": "606120"
  },
  {
    "text": "the client doesn't need to know about the erress it just delegate to a client proxy which is e proxy in our case to",
    "start": "606120",
    "end": "613120"
  },
  {
    "text": "handle the routing transparently so how does it route at",
    "start": "613120",
    "end": "618680"
  },
  {
    "text": "the client side we capture the traffic using IP tables and redirect it to the client proxy that's running alongside",
    "start": "618680",
    "end": "625200"
  },
  {
    "text": "the application when the client proxy received this traffic it will first further route based on um catch all",
    "start": "625200",
    "end": "632000"
  },
  {
    "text": "route through we add which map just basically map all the internet traffic to a part uh on P 43 to the erress",
    "start": "632000",
    "end": "641000"
  },
  {
    "text": "Gateway and then the client proxy will just originate outer TS which is e MTS",
    "start": "641000",
    "end": "646959"
  },
  {
    "text": "in our case wrap the original request inside and follow D together to the erress",
    "start": "646959",
    "end": "653320"
  },
  {
    "text": "Gateway so when the traffic arrives at the erass Gateway the Gateway will terminate the outer TS so that it can",
    "start": "653320",
    "end": "660760"
  },
  {
    "text": "inspect the inner https request however we don't actually decrypt the inner htps",
    "start": "660760",
    "end": "667079"
  },
  {
    "text": "request instead we just need to look at the server name indication AKA Sni from",
    "start": "667079",
    "end": "672399"
  },
  {
    "text": "the client Hello message to know about the original destination after egress",
    "start": "672399",
    "end": "677480"
  },
  {
    "text": "knows about this destination from the sn9 it will then just establish a TCP connection and forward the request to",
    "start": "677480",
    "end": "684440"
  },
  {
    "text": "the destination after this connection is established successfully then similarly",
    "start": "684440",
    "end": "689720"
  },
  {
    "text": "the client will also just do directly TS handshake with the destination so the payload is end is also end to endend",
    "start": "689720",
    "end": "695880"
  },
  {
    "text": "encrypted in this case so just also to summarize this bit",
    "start": "695880",
    "end": "701440"
  },
  {
    "text": "a bit so this type of erass only support htps traffic because we need that as an",
    "start": "701440",
    "end": "706519"
  },
  {
    "text": "I uh indicator and the routing logic is kind of simple because we only just need",
    "start": "706519",
    "end": "711600"
  },
  {
    "text": "to add a catch out catch all rule in the uh client process and it doesn't we doesn't need",
    "start": "711600",
    "end": "718560"
  },
  {
    "text": "to touch the application codes everywhere so the migration is uh",
    "start": "718560",
    "end": "723839"
  },
  {
    "text": "transparent because Airbnb service just as I mentioned before a service have been running with an inter uh sorry East",
    "start": "723839",
    "end": "730920"
  },
  {
    "text": "steel proxy so we only need to make the change in the proxy and lastly likewise",
    "start": "730920",
    "end": "736360"
  },
  {
    "text": "only alha level of observa is available same reason yeah lastly we also consider",
    "start": "736360",
    "end": "743000"
  },
  {
    "text": "a variation of transparent erress which is just instead of https we support HT",
    "start": "743000",
    "end": "749639"
  },
  {
    "text": "PL tax HTP request so in this case we also just use the client proxy to",
    "start": "749639",
    "end": "756000"
  },
  {
    "text": "capture the traffic uh however the difference is that we cannot use uh",
    "start": "756000",
    "end": "762199"
  },
  {
    "text": "catch all routing because the default port for HTTP is also used by many",
    "start": "762199",
    "end": "768079"
  },
  {
    "text": "internal services in Airbnb so we want to we don't want to conflict with those",
    "start": "768079",
    "end": "773160"
  },
  {
    "text": "interservice traffic so in order to Route we we have to maintain some sort of per domain routes which map each",
    "start": "773160",
    "end": "780279"
  },
  {
    "text": "domain and then route them to the ER Gateway and then similarly after the",
    "start": "780279",
    "end": "786839"
  },
  {
    "text": "request arrives at egress the egress Gateway will just terminate alter TS originate by the climent proxy and then",
    "start": "786839",
    "end": "793360"
  },
  {
    "text": "the egress will just get the destination information by looking at a host header because that is plain text HP is",
    "start": "793360",
    "end": "800440"
  },
  {
    "text": "unencrypted and after that the egress will just establish the T htbs connection and do TS handshake with the",
    "start": "800440",
    "end": "807560"
  },
  {
    "text": "destination on behalf of of the client so in this case it's clearly that the",
    "start": "807560",
    "end": "812720"
  },
  {
    "text": "payload is not enter encrypted so just to summarize this type",
    "start": "812720",
    "end": "819160"
  },
  {
    "text": "a bit as well it only supports HT protocol and there will be some sort of",
    "start": "819160",
    "end": "826279"
  },
  {
    "text": "extra toil for the service owner to Reg register each domain for routing migration is not transparent why because",
    "start": "826279",
    "end": "834040"
  },
  {
    "text": "as I mentioned before Airbnb a lot of majority the majority traffic of uh use",
    "start": "834040",
    "end": "839440"
  },
  {
    "text": "case is HDS so in order to migrate to this erress that require us to downgrade all the existing costs to use PL tax HTP",
    "start": "839440",
    "end": "847519"
  },
  {
    "text": "so that's not transparent you need to touch the application codes um though this approach is only",
    "start": "847519",
    "end": "854639"
  },
  {
    "text": "the one among three that provides us l7s observability as the egress could",
    "start": "854639",
    "end": "860839"
  },
  {
    "text": "inspect the original payload but this is actually a double edge sword because that means if it would be riskier if",
    "start": "860839",
    "end": "867600"
  },
  {
    "text": "this type of egress is compromised so considering the balance",
    "start": "867600",
    "end": "873680"
  },
  {
    "text": "of easy migration and usage uh use case coverage our final decision is to adopt",
    "start": "873680",
    "end": "879959"
  },
  {
    "text": "a hybrid approach which contains two stages the first stage is building up",
    "start": "879959",
    "end": "885839"
  },
  {
    "text": "the transparent erress for htps we just mentioned before and then migrate all the internet traffic on P stre to it so",
    "start": "885839",
    "end": "892839"
  },
  {
    "text": "that we will quickly gain full observability and control uh on the majority of our outgoing traffic",
    "start": "892839",
    "end": "900440"
  },
  {
    "text": "and at the second stage we will build up the HT connect erress and then migrate remain non htps traffic to it so that's",
    "start": "900440",
    "end": "908360"
  },
  {
    "text": "it and in today's talk we will focus on the first type of this first type of",
    "start": "908360",
    "end": "914040"
  },
  {
    "text": "erass transparent for HDs request and now I will hand over to Akita to help us",
    "start": "914040",
    "end": "920120"
  },
  {
    "text": "make a deep dive thanks Ed for walking us through",
    "start": "920120",
    "end": "925199"
  },
  {
    "text": "the various approaches we considered now I will walk I will help us take a deep dive into one of into the transparent",
    "start": "925199",
    "end": "931880"
  },
  {
    "text": "egress for https some of these you might have already caught a glimpse from Ed's description and we'll take a look at",
    "start": "931880",
    "end": "938680"
  },
  {
    "text": "them um in more depth now so before that let's step back let's",
    "start": "938680",
    "end": "945319"
  },
  {
    "text": "think about what are the key functions that an egis Gateway needs to perform the first one you might have guessed it",
    "start": "945319",
    "end": "952319"
  },
  {
    "text": "already that's the routing so the egress Gateway needs to know to be able to",
    "start": "952319",
    "end": "957680"
  },
  {
    "text": "Route the traffic it needs to know that what is the host uh that the client is trying to connect to so uh and if you",
    "start": "957680",
    "end": "965639"
  },
  {
    "text": "remember in the transparent eras for hdps the DLS origination happens at the",
    "start": "965639",
    "end": "971279"
  },
  {
    "text": "client you can see that the client is sending hdps so that means the Eris Gateway cannot look at Host level uh",
    "start": "971279",
    "end": "978759"
  },
  {
    "text": "detail like hgdp header level details like the host header so what is the solution now uh",
    "start": "978759",
    "end": "986800"
  },
  {
    "text": "yeah so the solution is simple simple if you remember the basics of a TS",
    "start": "986800",
    "end": "991880"
  },
  {
    "text": "handshake once the initial connection establishment happens the client sends",
    "start": "991880",
    "end": "997279"
  },
  {
    "text": "the First Data packet which is the client hello it is in this client hello where the key to our solution lies and",
    "start": "997279",
    "end": "1004000"
  },
  {
    "text": "that is the Sni or the server name indication and this Sni is not encrypted",
    "start": "1004000",
    "end": "1009600"
  },
  {
    "text": "so it can be inspected by the gateway to know which destination the client is trying to connect to great and now",
    "start": "1009600",
    "end": "1018480"
  },
  {
    "text": "second function and my favorite one is the rback or role based Access Control",
    "start": "1018480",
    "end": "1024400"
  },
  {
    "text": "to understand it simply think about when you enter your company or organization",
    "start": "1024400",
    "end": "1029760"
  },
  {
    "text": "you are assigned an ID card now based on this ID this ID card acts as acts like",
    "start": "1029760",
    "end": "1035438"
  },
  {
    "text": "your identity right and based on that identity you are uh allowed access to",
    "start": "1035439",
    "end": "1041120"
  },
  {
    "text": "certain resources while you are denied access to the others similarly at the egis Gateway a",
    "start": "1041120",
    "end": "1048280"
  },
  {
    "text": "role based Access Control means that the egis Gateway uh that the egis Gateway",
    "start": "1048280",
    "end": "1054240"
  },
  {
    "text": "allows certain clients to access a fixed set of domains and in this case you can",
    "start": "1054240",
    "end": "1059480"
  },
  {
    "text": "see that the client a is allowed access to a.com and example.com but the client",
    "start": "1059480",
    "end": "1064679"
  },
  {
    "text": "B is allowed access to b.com if the ESS Gateway receives any request which is",
    "start": "1064679",
    "end": "1070160"
  },
  {
    "text": "not in this allow list it will deny it this is the feature which unlocks the",
    "start": "1070160",
    "end": "1075280"
  },
  {
    "text": "defense in depth uh security model that we talked about and this is what makes our outbound traffic secure we will look",
    "start": "1075280",
    "end": "1083400"
  },
  {
    "text": "at how ESS Gateway implements the rbag so understanding the key functions",
    "start": "1083400",
    "end": "1090240"
  },
  {
    "text": "let's Tiptoe Through the life of a request as it starts at the client goes through the Gateway and reaches its",
    "start": "1090240",
    "end": "1096600"
  },
  {
    "text": "final destination so here you can see on my left we have a client which has a",
    "start": "1096600",
    "end": "1103840"
  },
  {
    "text": "application which is trying to access some Internet domain on the right we have a Gateway which will act as a proxy",
    "start": "1103840",
    "end": "1110919"
  },
  {
    "text": "for this traffic to reach the internet now there are two key fun two",
    "start": "1110919",
    "end": "1116679"
  },
  {
    "text": "key pieces of technology which lighten up our Eis Gateway the first is Envoy so",
    "start": "1116679",
    "end": "1123919"
  },
  {
    "text": "in as Ed mentioned before at Airbnb we have full adoption of is esto and which",
    "start": "1123919",
    "end": "1130480"
  },
  {
    "text": "means that we have Ono proxies running on all our services these onvoy proxies are the ones which uh enable our ESS",
    "start": "1130480",
    "end": "1138039"
  },
  {
    "text": "Gateway functional it on the client these onway proxies capture the outbound",
    "start": "1138039",
    "end": "1143280"
  },
  {
    "text": "traffic which originates from the client on Port 443 based on the catchall route",
    "start": "1143280",
    "end": "1148840"
  },
  {
    "text": "that we saw before and we also have the enway proxy running on the Gateway on the right and this onway proxy is the",
    "start": "1148840",
    "end": "1156080"
  },
  {
    "text": "one which performs the routing and the arbag that we saw about before and now I",
    "start": "1156080",
    "end": "1162000"
  },
  {
    "text": "would like to ask a question how many of you have worked with network proxies before used them before or configured",
    "start": "1162000",
    "end": "1168280"
  },
  {
    "text": "them before nice so now you might be thinking on network proxies are quite simple right",
    "start": "1168280",
    "end": "1174960"
  },
  {
    "text": "you provide them some configuration and they know how to operate based on that configuration but in a kubernetes system",
    "start": "1174960",
    "end": "1182320"
  },
  {
    "text": "they might not know how to discover uh the the other services so the question",
    "start": "1182320",
    "end": "1187919"
  },
  {
    "text": "comes that how does the envoy running on the client know where the Eris gateways",
    "start": "1187919",
    "end": "1193720"
  },
  {
    "text": "if the IPS are Dynamic how does it discover them and here my friends is the",
    "start": "1193720",
    "end": "1200159"
  },
  {
    "text": "magician and that is the mesh control plane as we show saw as we have talked",
    "start": "1200159",
    "end": "1205799"
  },
  {
    "text": "about before we have esto running in our kubernetes clusters and the mesh control",
    "start": "1205799",
    "end": "1211840"
  },
  {
    "text": "plane which is called esto in our case is the one which enables this uh service",
    "start": "1211840",
    "end": "1217600"
  },
  {
    "text": "Discovery so specifically for the client the mesh control plane uh does",
    "start": "1217600",
    "end": "1224360"
  },
  {
    "text": "two things first it uh the mesh control plane does two things first it enables",
    "start": "1224360",
    "end": "1231400"
  },
  {
    "text": "the service Discovery so that client can know what is the what is the end points of the Gateway and second it configures",
    "start": "1231400",
    "end": "1239679"
  },
  {
    "text": "certificates if you remember back to my uh id id example the the the mesh",
    "start": "1239679",
    "end": "1245919"
  },
  {
    "text": "control plane provides the certificates to the client and all services in our mesh these certificates are the identity",
    "start": "1245919",
    "end": "1253520"
  },
  {
    "text": "that these Services can use to interact with other services in the mesh including the Gateway",
    "start": "1253520",
    "end": "1259159"
  },
  {
    "text": "we will look at how these certificates are used later and similarly on the Gateway site",
    "start": "1259159",
    "end": "1266799"
  },
  {
    "text": "uh the mesh control plane configures the certificates and also enables the rules for routing an rback that we saw before",
    "start": "1266799",
    "end": "1275279"
  },
  {
    "text": "so now our setup is complete and uh now when the CL application sends the",
    "start": "1275279",
    "end": "1281520"
  },
  {
    "text": "request to uh the internet the onvoy proxy running on the client captures",
    "start": "1281520",
    "end": "1286640"
  },
  {
    "text": "this traffic and sends it to the the Gateway uh after service Discovery one",
    "start": "1286640",
    "end": "1292240"
  },
  {
    "text": "thing to note about this traffic is that the client side onway proxy uh wraps",
    "start": "1292240",
    "end": "1297320"
  },
  {
    "text": "this traffic around in another layer of TLS uh and performs Mutual TLS with the gateway to keep the interm traffic",
    "start": "1297320",
    "end": "1304640"
  },
  {
    "text": "secure to zoom in on this traffic you can see on the right that uh we have the",
    "start": "1304640",
    "end": "1310360"
  },
  {
    "text": "there's two layer of encryption one is the one the yellow one which is added by the client and another purple one which",
    "start": "1310360",
    "end": "1316919"
  },
  {
    "text": "is added by the client proxy and once this data reaches the Gateway",
    "start": "1316919",
    "end": "1322320"
  },
  {
    "text": "the onvoy proxy on the ESS Gateway terminates the outer layer of TLS and",
    "start": "1322320",
    "end": "1327679"
  },
  {
    "text": "sends the actual data originated from the client to the Internet so with that half of our battle",
    "start": "1327679",
    "end": "1335279"
  },
  {
    "text": "is one the data orig the data originating from the client has reached",
    "start": "1335279",
    "end": "1341400"
  },
  {
    "text": "the Gateway now and now we look at the final piece of the puzzle which is how",
    "start": "1341400",
    "end": "1346679"
  },
  {
    "text": "does the ESS Gateway work so um before to understand the Gateway a",
    "start": "1346679",
    "end": "1353400"
  },
  {
    "text": "little bit better we'll take a look at some of the envoy Basics I know many of you might be quite Experts of onoy by",
    "start": "1353400",
    "end": "1361159"
  },
  {
    "text": "while some of you might be just starting so I'll try my best to uh give a very basic overview which might be helpful to",
    "start": "1361159",
    "end": "1369039"
  },
  {
    "text": "us so at a at its very core envo is a simple Network proxy uh as you can see",
    "start": "1369039",
    "end": "1375159"
  },
  {
    "text": "on the left it binds to some ports and uh captures data incoming on that port",
    "start": "1375159",
    "end": "1381559"
  },
  {
    "text": "and on the right you can see that there's something happens within Envoy and then the data is sent to the",
    "start": "1381559",
    "end": "1388559"
  },
  {
    "text": "destination and now there are two uh let us look at what happens within this",
    "start": "1388559",
    "end": "1393679"
  },
  {
    "text": "white box I'm sorry this is not a black box it's a white box so the first part of this white box",
    "start": "1393679",
    "end": "1401760"
  },
  {
    "text": "is the listener as the name suggests a listener is the one which listens for",
    "start": "1401760",
    "end": "1407080"
  },
  {
    "text": "data so it bind itself to certain ports and listens to data incoming on that",
    "start": "1407080",
    "end": "1412279"
  },
  {
    "text": "port and listener is the one which performs a lot of functions that you",
    "start": "1412279",
    "end": "1417679"
  },
  {
    "text": "might be hearing about Envoy like the rback or the rate limiting and within the listener we have",
    "start": "1417679",
    "end": "1425120"
  },
  {
    "text": "few fundamental uh building blocks which are called filters and you can think of filters as Legos and they are the one",
    "start": "1425120",
    "end": "1432240"
  },
  {
    "text": "which build up a listener and uh are and are chained together to perform the functions of a listener",
    "start": "1432240",
    "end": "1439000"
  },
  {
    "text": "So within the filters there are two types of filters and uh there is lot of details about it but I will uh summarize",
    "start": "1439000",
    "end": "1446520"
  },
  {
    "text": "it in a short form so the listener the first type of listener filters is the",
    "start": "1446520",
    "end": "1451840"
  },
  {
    "text": "listener filters these filters are the one which execute when onward is just accepting the connection and they",
    "start": "1451840",
    "end": "1458039"
  },
  {
    "text": "perform some basic processing on the connection and then uh The Listener",
    "start": "1458039",
    "end": "1463400"
  },
  {
    "text": "filters mainly are they they are needed to Aid the network filters and so the",
    "start": "1463400",
    "end": "1469960"
  },
  {
    "text": "next Once the data passes through the listener filters SSL handshake happens",
    "start": "1469960",
    "end": "1475320"
  },
  {
    "text": "through the TLs transport socket and then the the the uh unencrypted data",
    "start": "1475320",
    "end": "1481559"
  },
  {
    "text": "after the outer TLS termination is available to the network filters the network filters are the most powerful",
    "start": "1481559",
    "end": "1488320"
  },
  {
    "text": "one parts of a listener so for example the are back or the rate limiting all",
    "start": "1488320",
    "end": "1494120"
  },
  {
    "text": "are provided with the help of network filters a lot of functions we will look at today are examples of network",
    "start": "1494120",
    "end": "1501000"
  },
  {
    "text": "filters and then once the listener has done its work it hands it it hands over",
    "start": "1501000",
    "end": "1506720"
  },
  {
    "text": "to uh the cluster subsystem cluster represents everything related to the",
    "start": "1506720",
    "end": "1511760"
  },
  {
    "text": "destination so and it's a logical grouping of destination end points so with that now we are ready to",
    "start": "1511760",
    "end": "1520480"
  },
  {
    "text": "uh look at the Gateway architecture and we started our exploration of the Gateway by uh a great blog uh from from",
    "start": "1520480",
    "end": "1528440"
  },
  {
    "text": "the folks at IBM and I have linked it below you definitely recommend to read it so uh we started with that and this",
    "start": "1528440",
    "end": "1537840"
  },
  {
    "text": "blog talked about developing a Gateway through a two listener model so we have",
    "start": "1537840",
    "end": "1544000"
  },
  {
    "text": "a mesh listener an internal listener and a dynamic forward proxy cluster we will",
    "start": "1544000",
    "end": "1549880"
  },
  {
    "text": "look at each of them in more detail now so uh the first listener which is",
    "start": "1549880",
    "end": "1557399"
  },
  {
    "text": "the mes mes listener uh it's its main job as you can read from it from its",
    "start": "1557399",
    "end": "1562440"
  },
  {
    "text": "name is to is to read incoming connections from the service mesh so",
    "start": "1562440",
    "end": "1567960"
  },
  {
    "text": "when it and if you remember the two layers of TLS we had this mesh listener is the one which receives this two",
    "start": "1567960",
    "end": "1574520"
  },
  {
    "text": "layers of TLS and terminates the outer TLS and during that process if you",
    "start": "1574520",
    "end": "1579960"
  },
  {
    "text": "remember the ID card the certificate we talked about this mesh listener is the one which looks at the identity",
    "start": "1579960",
    "end": "1586200"
  },
  {
    "text": "presented by the client and extracts it so that the rest of the envoy can Pro can use it so in our case the ID is a",
    "start": "1586200",
    "end": "1594600"
  },
  {
    "text": "spiffy identifier highlighted in the red which and you can see it has a it represents the client a this ID is",
    "start": "1594600",
    "end": "1601679"
  },
  {
    "text": "important we will use it for our back and then once the mesh listener has done",
    "start": "1601679",
    "end": "1607080"
  },
  {
    "text": "its work it forwards the request to the internal listener now the internal",
    "start": "1607080",
    "end": "1612200"
  },
  {
    "text": "listener is a router and do you remember what did we need for routing yes the Sni",
    "start": "1612200",
    "end": "1619840"
  },
  {
    "text": "so the internal listener extracts the Sni through a filter called a TLS inspector which is a listener filter and",
    "start": "1619840",
    "end": "1627840"
  },
  {
    "text": "once the Sni is available our life is simple we are able to through a",
    "start": "1627840",
    "end": "1633039"
  },
  {
    "text": "combination of filters and the dynamic forward proxy cluster we are able to forward this request uh this data to the",
    "start": "1633039",
    "end": "1639840"
  },
  {
    "text": "destination end point and the Sni Dynamic forward proxy list filter and the cluster are really",
    "start": "1639840",
    "end": "1647240"
  },
  {
    "text": "important why because they allow us that we don't have to register each of the",
    "start": "1647240",
    "end": "1653279"
  },
  {
    "text": "domains like example.com a.com two Envoy the uh the endpoint resolution can",
    "start": "1653279",
    "end": "1659880"
  },
  {
    "text": "happen dynamically so that our Gateway Envoy configuration is as simple as",
    "start": "1659880",
    "end": "1665519"
  },
  {
    "text": "possible so with that yay our first function the routing was working but my",
    "start": "1665519",
    "end": "1673760"
  },
  {
    "text": "friends has any engineering project ever worked in the first go",
    "start": "1673760",
    "end": "1679760"
  },
  {
    "text": "unfortunately not so if you remember out of the two pieces the the what was the",
    "start": "1679760",
    "end": "1686159"
  },
  {
    "text": "second piece it was the arback so with this architecture the arback was not",
    "start": "1686159",
    "end": "1692159"
  },
  {
    "text": "working so and we can take a few look at few of the reasons why the first reason",
    "start": "1692159",
    "end": "1698279"
  },
  {
    "text": "if you go back to the allow list you can see that to be able to perform rback you need to look at the client identity and",
    "start": "1698279",
    "end": "1705600"
  },
  {
    "text": "the Upstream server name both in at one shot you cannot look at them at different points uh in the filter chain",
    "start": "1705600",
    "end": "1713120"
  },
  {
    "text": "and make a complete rback decision so with the two listener system",
    "start": "1713120",
    "end": "1718480"
  },
  {
    "text": "the client identity is present in the first listener the Sni is present in the second so the rback filter inserted in",
    "start": "1718480",
    "end": "1726200"
  },
  {
    "text": "either of the places cannot do a complete rback we also explored some strategies around context propagation",
    "start": "1726200",
    "end": "1733480"
  },
  {
    "text": "between the listeners but that also didn't work for us and",
    "start": "1733480",
    "end": "1738880"
  },
  {
    "text": "uh another strategy we tried was to insert the TLs inspector in the shift",
    "start": "1738880",
    "end": "1745120"
  },
  {
    "text": "the TLs inspector basically to the first listener and can you guess that if if",
    "start": "1745120",
    "end": "1751120"
  },
  {
    "text": "the TLs inspector is inserted in the first listener can it look at the Sni and I have some hints for you if you can",
    "start": "1751120",
    "end": "1758200"
  },
  {
    "text": "see the purple box and the yellow box the Sni is deep within that yellow box",
    "start": "1758200",
    "end": "1763360"
  },
  {
    "text": "and it has that outer layer of encryption so as you might have already",
    "start": "1763360",
    "end": "1768919"
  },
  {
    "text": "guessed the TLs inspector in the first listener cannot get the Sni because when",
    "start": "1768919",
    "end": "1774880"
  },
  {
    "text": "it reads the Sni uh when it reads the payload in the first listener the mtls",
    "start": "1774880",
    "end": "1780120"
  },
  {
    "text": "the outer TLS has not been terminated yet so this uh this led to a problem for",
    "start": "1780120",
    "end": "1786720"
  },
  {
    "text": "us and uh after many and during this we had to read a lot of onoy code do a lot",
    "start": "1786720",
    "end": "1793399"
  },
  {
    "text": "of debugging and uh during that debugging we realized there is more a",
    "start": "1793399",
    "end": "1798480"
  },
  {
    "text": "more fundamental problem at play here which is that to listener my friends is",
    "start": "1798480",
    "end": "1804480"
  },
  {
    "text": "really really really really hard to debug you can see here I have the logs",
    "start": "1804480",
    "end": "1809880"
  },
  {
    "text": "from two uh from the first listener and the second listener and as the data",
    "start": "1809880",
    "end": "1814919"
  },
  {
    "text": "flows across listener the connection ID of that connection changes and I have to",
    "start": "1814919",
    "end": "1820399"
  },
  {
    "text": "go through I have to go through the logs and try to correlate various connection IDs and for our system we have uh a con",
    "start": "1820399",
    "end": "1828559"
  },
  {
    "text": "we have a high concurrency at the Gateway a uh and also we have a high Qs being served by the Gateway so trying to",
    "start": "1828559",
    "end": "1835519"
  },
  {
    "text": "correlate such a huge amount of logs was a real nightmare so with that we uh finally",
    "start": "1835519",
    "end": "1843120"
  },
  {
    "text": "came to the conclusion that we need to have a simplified system and and with",
    "start": "1843120",
    "end": "1848840"
  },
  {
    "text": "many many tions later and a lot of help from the op Source Community we were able to come up with a final",
    "start": "1848840",
    "end": "1855880"
  },
  {
    "text": "solution so our final solution you can see is a simplified version of the more",
    "start": "1855880",
    "end": "1861720"
  },
  {
    "text": "complex one you can see we have familiar components the rback filter the dynamic",
    "start": "1861720",
    "end": "1867440"
  },
  {
    "text": "forward proxy the dynamic forward proxy cluster Etc and now we have combined",
    "start": "1867440",
    "end": "1873600"
  },
  {
    "text": "everything all the scattered information and the scattered filters into a single listener and you might be thinking how",
    "start": "1873600",
    "end": "1881279"
  },
  {
    "text": "how we could do that and that is with the help of a new filter we implemented called the network Sni inspector this",
    "start": "1881279",
    "end": "1888120"
  },
  {
    "text": "filter deres heavily from the TLs inspector that we saw before with the difference that it can execute at the",
    "start": "1888120",
    "end": "1894880"
  },
  {
    "text": "network filter chain level and it can look at the payload after the outer TLS has been terminated and SSL handshake",
    "start": "1894880",
    "end": "1902200"
  },
  {
    "text": "has completed so now the network Sni inspector is able to extract the Sni in",
    "start": "1902200",
    "end": "1908480"
  },
  {
    "text": "the first listener and with that the Sni and the client identity are both",
    "start": "1908480",
    "end": "1914760"
  },
  {
    "text": "available at together in the first listener and uh inserting the rback",
    "start": "1914760",
    "end": "1920440"
  },
  {
    "text": "filter now we can compare the Sni and the client identity against our allow",
    "start": "1920440",
    "end": "1925720"
  },
  {
    "text": "list and in this case you can see that the client identity and the based on the",
    "start": "1925720",
    "end": "1931200"
  },
  {
    "text": "allow list this connection is allowed and the data passes through and the moment we had been waiting for was when",
    "start": "1931200",
    "end": "1938880"
  },
  {
    "text": "we were able to close a connection friends so you can see that if there is a connection which is not allowed as per",
    "start": "1938880",
    "end": "1946440"
  },
  {
    "text": "the allow list it will be closed by the arback filter this protects any unexpected connections from happening to",
    "start": "1946440",
    "end": "1952760"
  },
  {
    "text": "the internet and protects our data and with that uh we uh the our",
    "start": "1952760",
    "end": "1960240"
  },
  {
    "text": "exploration of the Eris Gateway concluded and uh yeah we are really thankful to the open source Community",
    "start": "1960240",
    "end": "1967039"
  },
  {
    "text": "for helping us with that and as you walk out the door today I would like you to",
    "start": "1967039",
    "end": "1972679"
  },
  {
    "text": "think about a few things first I would like you to explore what is the level",
    "start": "1972679",
    "end": "1978320"
  },
  {
    "text": "controls you have within your organization are they fine grained enough and provide a complete uh",
    "start": "1978320",
    "end": "1984399"
  },
  {
    "text": "security for you and do you need a Eis Gateway and if you decide to go down",
    "start": "1984399",
    "end": "1990279"
  },
  {
    "text": "that road Envoy is a fun and Powerful technology for you to explore except the",
    "start": "1990279",
    "end": "1995559"
  },
  {
    "text": "debugging sometimes so with that uh we would love",
    "start": "1995559",
    "end": "2002480"
  },
  {
    "text": "to take any questions and this is the QR code for the feedback for a session please help us to provide any feedback",
    "start": "2002480",
    "end": "2009240"
  },
  {
    "text": "you have uh thank",
    "start": "2009240",
    "end": "2013158"
  },
  {
    "text": "[Applause] you and take you can uh come up to the",
    "start": "2015710",
    "end": "2022559"
  },
  {
    "text": "mic please I had uh two small questions um",
    "start": "2022559",
    "end": "2029440"
  },
  {
    "text": "why are you double encrypting your traffic in your service mesh like the",
    "start": "2029440",
    "end": "2035760"
  },
  {
    "text": "application is running htps and then you're using transparent mtls",
    "start": "2035760",
    "end": "2042399"
  },
  {
    "text": "mhm why we have double TS in the yeah Place essentially it seems like that",
    "start": "2042960",
    "end": "2050240"
  },
  {
    "text": "caused more problems than it solved where you had to reimplement your filter",
    "start": "2050240",
    "end": "2056158"
  },
  {
    "text": "chains to inspect post I I guess it's because in like for all our services we",
    "start": "2056159",
    "end": "2063720"
  },
  {
    "text": "just have mtrs enabled for like everything so yeah that's the set that's",
    "start": "2063720",
    "end": "2069398"
  },
  {
    "text": "a security model we follow that the intermet traffic uh all the interm",
    "start": "2069399",
    "end": "2074720"
  },
  {
    "text": "traffic is has a extra TS layer so that if there is any compromise still like",
    "start": "2074720",
    "end": "2080560"
  },
  {
    "text": "only the server which is receiving the traffic can decrypt it yeah that Mak I",
    "start": "2080560",
    "end": "2085760"
  },
  {
    "text": "think there's no specific reason just yeah like",
    "start": "2085760",
    "end": "2090800"
  },
  {
    "text": "that hi this is a really uh great session um thank you was um so like",
    "start": "2092800",
    "end": "2100359"
  },
  {
    "text": "organizations when they typically use an eager strategy they like also need",
    "start": "2100359",
    "end": "2105560"
  },
  {
    "text": "things like um like firewalls or kind of like other like cloud provider tools to",
    "start": "2105560",
    "end": "2112200"
  },
  {
    "text": "um like restrict outbound traffic so um I was just curious how Airbnb handles",
    "start": "2112200",
    "end": "2117880"
  },
  {
    "text": "that like is that aspect handled by a different team or uh did you also need",
    "start": "2117880",
    "end": "2123960"
  },
  {
    "text": "to uh focus on those other aspects of like Eris management we actually collaborate and then other",
    "start": "2123960",
    "end": "2130079"
  },
  {
    "text": "things we handle like other layers yeah yeah we do have like firewalls so like so this one as Ed had mentioned like we",
    "start": "2130079",
    "end": "2138280"
  },
  {
    "text": "already have some controls at different levels of the network so this adds a more fine grain control but there's",
    "start": "2138280",
    "end": "2143800"
  },
  {
    "text": "other controls like firewall already at Place yeah thank you great session uh",
    "start": "2143800",
    "end": "2151040"
  },
  {
    "text": "question on writing your own Envoy filter how difficult was it how long did it take and probably more importantly",
    "start": "2151040",
    "end": "2157240"
  },
  {
    "text": "how did you you test and verify that um it wasn't going to cause you problems um",
    "start": "2157240",
    "end": "2163599"
  },
  {
    "text": "yeah I can answer that so I think for me the challenge was that I had to like",
    "start": "2163599",
    "end": "2169520"
  },
  {
    "text": "just first before writing a filter myself it was it was difficult to learn how Envoy like how the filter chain",
    "start": "2169520",
    "end": "2175960"
  },
  {
    "text": "actually works because if you know Envoy is a event driven uh code so it's not",
    "start": "2175960",
    "end": "2181319"
  },
  {
    "text": "obvious that line a line b line C doesn't follow like that so just uh took me it it I started with few days of just",
    "start": "2181319",
    "end": "2188880"
  },
  {
    "text": "reading through Envoy code and Performing some experiments leading through the logs and then once that was",
    "start": "2188880",
    "end": "2194359"
  },
  {
    "text": "done the filter was quite easy actually and there are very good blogs about how um like what are the Event Systems that",
    "start": "2194359",
    "end": "2202440"
  },
  {
    "text": "propagate in Envoy so we I can share those offline and those was really helpful and once you understand how the",
    "start": "2202440",
    "end": "2208760"
  },
  {
    "text": "filter chain Works writing a new filter is the easier part I would say yeah cool I think we can just take one last",
    "start": "2208760",
    "end": "2214920"
  },
  {
    "text": "question and the session has end yeah go go ahead uh the the security of the",
    "start": "2214920",
    "end": "2220000"
  },
  {
    "text": "egress filtering appears to be based entirely on Sni inspection do you have any worry about Sni uh and host header",
    "start": "2220000",
    "end": "2228000"
  },
  {
    "text": "mismatch uh yeah yeah we we do have so that's why we need the second stage of",
    "start": "2228000",
    "end": "2233720"
  },
  {
    "text": "HTP connect proxy to handle the cases that is not handled by the first",
    "start": "2233720",
    "end": "2239839"
  },
  {
    "text": "transparent eress are you but you said sometimes both were in place in different items like was that like",
    "start": "2239839",
    "end": "2246400"
  },
  {
    "text": "servers that were known to be to support domain fronting you switch to HTP connect",
    "start": "2246400",
    "end": "2252240"
  },
  {
    "text": "or that's yeah uh that's not Yeah so basically uh I think one of the concerns",
    "start": "2252240",
    "end": "2259440"
  },
  {
    "text": "we have for the future is that there is an effort to encrypt the Sni at the like encrypted client hello is also upcoming",
    "start": "2259440",
    "end": "2266760"
  },
  {
    "text": "so yeah the as Ed said like we wanted to uh often in engineering you want to get",
    "start": "2266760",
    "end": "2272359"
  },
  {
    "text": "started with something to get the maximum coverage so we started with this Sni based approach and like in future",
    "start": "2272359",
    "end": "2278640"
  },
  {
    "text": "once we have the HB connect and we have a good good observability over our traffic we will be like using the HB",
    "start": "2278640",
    "end": "2285000"
  },
  {
    "text": "connect to solve those worries so yeah your long-term plan is to move entirely to conect yes cool cool thanks everyone",
    "start": "2285000",
    "end": "2291800"
  },
  {
    "text": "thanks everyone and who we didn't say",
    "start": "2291800",
    "end": "2296880"
  }
]