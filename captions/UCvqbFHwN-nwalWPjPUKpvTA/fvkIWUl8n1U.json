[
  {
    "start": "0",
    "end": "138000"
  },
  {
    "text": "hello thank you for joining me for this webinar on how to enable powerful connectivity",
    "start": "0",
    "end": "5279"
  },
  {
    "text": "between eight sources and kubernetes backend my name is the olabad i am the",
    "start": "5279",
    "end": "10639"
  },
  {
    "text": "co-founder and the cto of cuban q why we are here as many of you already",
    "start": "10639",
    "end": "15759"
  },
  {
    "text": "know that kubernetes has become the de facto standard for deploying container-based workloads",
    "start": "15759",
    "end": "21199"
  },
  {
    "text": "it's so popular and fully featured that kubernetes has evolved to allow clusters",
    "start": "21199",
    "end": "27279"
  },
  {
    "text": "to exist on across multiple clouds and even to run on edge computing devices even small one",
    "start": "27279",
    "end": "34000"
  },
  {
    "text": "but kubernetes isn't inherently aware of location it's like an abstraction layer on top some kind of",
    "start": "34000",
    "end": "40239"
  },
  {
    "text": "computing resources or some kind of architectural distribution hence the complexity",
    "start": "40239",
    "end": "46160"
  },
  {
    "text": "the complexity of building a connected stable reliable data transfer from edge",
    "start": "46160",
    "end": "52160"
  },
  {
    "text": "to back end become a very significant channel for most of development teams what i mean is that sometimes when you",
    "start": "52160",
    "end": "59760"
  },
  {
    "text": "are develop a system on your back end with a lot of powerful",
    "start": "59760",
    "end": "64878"
  },
  {
    "text": "resources like network and cpu and memory this is not the case once you need to",
    "start": "64879",
    "end": "70799"
  },
  {
    "text": "connect to some kind of edge devices that the resources characteristics are not the same as uh",
    "start": "70799",
    "end": "78240"
  },
  {
    "text": "in your local network so one of the uh one of the enablers to do such",
    "start": "78240",
    "end": "84320"
  },
  {
    "text": "architecture is using a messaging platform that's sitting on top of kubernetes",
    "start": "84320",
    "end": "89520"
  },
  {
    "text": "as is enabling to do communication and hierarchy connectivity between all the components in your",
    "start": "89520",
    "end": "95439"
  },
  {
    "text": "architecture what we're going to learn first of all i'm going to introduce you the cuban queue messaging",
    "start": "95439",
    "end": "101200"
  },
  {
    "text": "framework we will dive in into each component what is each component is doing",
    "start": "101200",
    "end": "107280"
  },
  {
    "text": "and how the ca they are interconnected between each of them to form a very high scalable edge",
    "start": "107280",
    "end": "113920"
  },
  {
    "text": "back-end connectivity also we will look on a use case a live demo of how to",
    "start": "113920",
    "end": "121360"
  },
  {
    "text": "move data between edge device to s3 and here what we're going to do is going",
    "start": "121360",
    "end": "126640"
  },
  {
    "text": "to show how we using all the cuban queue messaging components to move files that's sitting",
    "start": "126640",
    "end": "133440"
  },
  {
    "text": "on remote location and copying to an s3 buckets okay so",
    "start": "133440",
    "end": "140000"
  },
  {
    "start": "138000",
    "end": "240000"
  },
  {
    "text": "qmq platform components has four main components the first of all is the",
    "start": "140000",
    "end": "146080"
  },
  {
    "text": "main component this is that and qb cluster this is an enterprise-grade message broker and",
    "start": "146080",
    "end": "152080"
  },
  {
    "text": "message queue it's very scalable natively to kubernetes it's highly available and very secure on",
    "start": "152080",
    "end": "159280"
  },
  {
    "text": "top of it we have three components that together are forming the ecosystem of cubic loop platform the",
    "start": "159280",
    "end": "166720"
  },
  {
    "text": "first one is cubic you targets is a container based targets a connector that allows",
    "start": "166720",
    "end": "173599"
  },
  {
    "text": "connecting to about 1775 different services from cuban queue",
    "start": "173599",
    "end": "178720"
  },
  {
    "text": "to them services like databases cache other messaging system file system",
    "start": "178720",
    "end": "184560"
  },
  {
    "text": "storage such things the second component is chemical sources this is actually the",
    "start": "184560",
    "end": "191280"
  },
  {
    "text": "other side of uh of cuban queue targets this is allowed to ingest data into human hue we will use this",
    "start": "191280",
    "end": "199200"
  },
  {
    "text": "as one of the examples in the use case it's allowed to bring data into qmq and then spread it between",
    "start": "199200",
    "end": "205680"
  },
  {
    "text": "other services or even used to different connectors like human kill target qmq bridges",
    "start": "205680",
    "end": "212000"
  },
  {
    "text": "is more the interconnectivity between cube mq clusters",
    "start": "212000",
    "end": "217200"
  },
  {
    "text": "it's enabled to transfer data between one chemical cluster to another one or",
    "start": "217200",
    "end": "223280"
  },
  {
    "text": "to replicate or to aggregate or to do any kind of transformation between",
    "start": "223280",
    "end": "228480"
  },
  {
    "text": "20kmp cluster is also enabled to do cross clouds or cross availability",
    "start": "228480",
    "end": "235439"
  },
  {
    "text": "zones or something like that data between two two or even more cubicle cluster",
    "start": "235439",
    "end": "241200"
  },
  {
    "start": "240000",
    "end": "681000"
  },
  {
    "text": "we start by a little bit discussed about what is keeping queue message broker what is the main features",
    "start": "241200",
    "end": "246640"
  },
  {
    "text": "and later on we see some features that will help us in our use case first of all cuban queue",
    "start": "246640",
    "end": "252560"
  },
  {
    "text": "is deployed within operator for full life cycle operation this is very important because",
    "start": "252560",
    "end": "258239"
  },
  {
    "text": "you will you want to have the ability to do a live roll-up of upgrades as day two",
    "start": "258239",
    "end": "265520"
  },
  {
    "text": "operations so it's the problem with operator uh it's very fast it's written in goal is small",
    "start": "265520",
    "end": "272880"
  },
  {
    "text": "lightweight docker container it supports actually two main messaging families the asynchronous",
    "start": "272880",
    "end": "278720"
  },
  {
    "text": "one and the synchronous one in the asynchronous one uh we're talking about uh durability",
    "start": "278720",
    "end": "285919"
  },
  {
    "text": "fifa cubase is like send and forget type of messaging type with a publish",
    "start": "285919",
    "end": "292080"
  },
  {
    "text": "subscribe event this is also a secret asynchronous messaging platform and we have also pops",
    "start": "292080",
    "end": "298080"
  },
  {
    "text": "up with persistent means that instead of uh like in any memory website for event",
    "start": "298080",
    "end": "303520"
  },
  {
    "text": "or something like that we have and we have uh probably subscribed with some persistent",
    "start": "303520",
    "end": "309360"
  },
  {
    "text": "and we called event star and in the family of synchronous messaging we have the rpc",
    "start": "309360",
    "end": "314720"
  },
  {
    "text": "commanded query messaging patterns one of the main features of qmq is the transport",
    "start": "314720",
    "end": "321120"
  },
  {
    "text": "layer qmq support grpc and rest and websocket transport layer with tls",
    "start": "321120",
    "end": "328479"
  },
  {
    "text": "and support for both rpc and stream mode this is very important we discuss about",
    "start": "328479",
    "end": "334000"
  },
  {
    "text": "how why it's so important supporting streaming in kubernetes messaging system",
    "start": "334000",
    "end": "340320"
  },
  {
    "text": "mainly when we working with a very low bandwidth devices like in edge location also",
    "start": "340320",
    "end": "347600"
  },
  {
    "text": "chemicals support um access control utilization and authentication we have multicasting and smart routing",
    "start": "347600",
    "end": "354880"
  },
  {
    "text": "we will touch on a little bit later and one of the key",
    "start": "354880",
    "end": "360000"
  },
  {
    "text": "features of cuban queue is almost no need for messaging configuration needed",
    "start": "360000",
    "end": "366000"
  },
  {
    "text": "no need to set cues exchanges nothing actually you are setting it up sending a message and that's it cubano",
    "start": "366000",
    "end": "373199"
  },
  {
    "text": "has uh uh support for dot net java python go and load sdk this is sit on top of glpc protobuf",
    "start": "373199",
    "end": "381280"
  },
  {
    "text": "and also of course we have rest interface interface for other framework that don't have the support for grpc let's",
    "start": "381280",
    "end": "388880"
  },
  {
    "text": "talk about the queue messaging pattern the key messaging pattern is very similar to",
    "start": "388880",
    "end": "394479"
  },
  {
    "text": "if you familiar with the amazon sqs it's a fifo based order a preserved message queue exactly",
    "start": "394479",
    "end": "401680"
  },
  {
    "text": "one uh massive delivery guarantee cassette batch and receiving has expiration level of",
    "start": "401680",
    "end": "408960"
  },
  {
    "text": "messaging you can set delay to processing messaging you have we have",
    "start": "408960",
    "end": "414080"
  },
  {
    "text": "that letter cues long pawning streaming of skills in out we have peak messaging means that you",
    "start": "414080",
    "end": "420800"
  },
  {
    "text": "can look on the on the queue see what kind of message you are waiting for processing and then you can",
    "start": "420800",
    "end": "426000"
  },
  {
    "text": "decide what what you want to do you can do all you can do change your message",
    "start": "426000",
    "end": "432800"
  },
  {
    "text": "message visibility reject messages you can specific ack messages you can resend",
    "start": "432800",
    "end": "438800"
  },
  {
    "text": "messaging to different to different cue also pull and push modes depend on your architecture",
    "start": "438800",
    "end": "444880"
  },
  {
    "text": "in the events pop sub messaging pattern it's a it's a real-time messaging button very",
    "start": "444880",
    "end": "450639"
  },
  {
    "text": "very fast when i say very fast we're talking about millions of millions of messaging per second this is in memory",
    "start": "450639",
    "end": "457199"
  },
  {
    "text": "has some consumer group support with a wildcard support has load balancing between",
    "start": "457199",
    "end": "463120"
  },
  {
    "text": "tumors suppose it's only one semester delivery guarantee means that if you didn't consume the message is",
    "start": "463120",
    "end": "469199"
  },
  {
    "text": "lost as i said wildcat petitions and it's not persistent the event store it's like the",
    "start": "469199",
    "end": "475840"
  },
  {
    "text": "events though the events messaging button but it's now it's persistent means that every",
    "start": "475840",
    "end": "481599"
  },
  {
    "text": "message is proceeded to some kind of a storage in cuban queue you can define pvc or you",
    "start": "481599",
    "end": "488479"
  },
  {
    "text": "could want to use the m4 file system that provided a container the same",
    "start": "488479",
    "end": "493599"
  },
  {
    "text": "like the event in memory support at least one message delivery guarantee means that you can",
    "start": "493599",
    "end": "498960"
  },
  {
    "text": "replay the message if you want later on observing support you can do you can",
    "start": "498960",
    "end": "505039"
  },
  {
    "text": "connect and ask for messaging starting from the last message that was sent",
    "start": "505039",
    "end": "510639"
  },
  {
    "text": "or the first from the actually the queue support message sequence timestamp time",
    "start": "510639",
    "end": "516719"
  },
  {
    "text": "duration you can play according to what you want to do the rpc query and command message",
    "start": "516719",
    "end": "523518"
  },
  {
    "text": "patterns is the synchronous part of human view connectivity mode it's mainly for connection to",
    "start": "523519",
    "end": "531040"
  },
  {
    "text": "[Music] a real time like a database if you have a command or you have a query that you",
    "start": "531040",
    "end": "537279"
  },
  {
    "text": "want to send a message to a database and return some kind of query back with the data it support two actually",
    "start": "537279",
    "end": "543760"
  },
  {
    "text": "two sub message pattern what one we call command the second",
    "start": "543760",
    "end": "549120"
  },
  {
    "text": "called query command it's like a web book you're sending um a message to some kind of service and",
    "start": "549120",
    "end": "554480"
  },
  {
    "text": "you get a message back if it's work or not if not what is there the query is",
    "start": "554480",
    "end": "559680"
  },
  {
    "text": "more sending to a database getting back a data pack so together this gives you full view of qmq",
    "start": "559680",
    "end": "566560"
  },
  {
    "text": "messaging capabilities what is the advantage using cubone q over other solutions first of",
    "start": "566560",
    "end": "571839"
  },
  {
    "text": "all it was designed and optimized to work on kubernetes with seamless integration with",
    "start": "571839",
    "end": "577279"
  },
  {
    "text": "other kubernetes components this means metrics this means working with the service mesh this means",
    "start": "577279",
    "end": "584000"
  },
  {
    "text": "that you can run everywhere you can run on a cloud can run on-prem it can run on each device it can run with",
    "start": "584000",
    "end": "592320"
  },
  {
    "text": "in cluster together it can be run standalone you can run on even a drone supporting",
    "start": "592320",
    "end": "599120"
  },
  {
    "text": "from arm 7 64 to very high and powerful workloads on",
    "start": "599120",
    "end": "606160"
  },
  {
    "text": "very powerful cpus and memory has all the messaging pattern run anywhere very low recall resource cpu uh we have tested",
    "start": "606160",
    "end": "615120"
  },
  {
    "text": "the docker content is about 40 meg so it's it's very very small you can you can develop and build the",
    "start": "615120",
    "end": "621920"
  },
  {
    "text": "complete architecture with cube and q other components like target bridges and sources we will see them down in",
    "start": "621920",
    "end": "627839"
  },
  {
    "text": "in our demo and discuss it about it now it's enterprise already out of the box no need for",
    "start": "627839",
    "end": "634079"
  },
  {
    "text": "dedicated persistent volume it's again depends on your usage of your messaging patterns",
    "start": "634079",
    "end": "639360"
  },
  {
    "text": "and i would like to say the importance of grpc interface it's more performance",
    "start": "639360",
    "end": "645120"
  },
  {
    "text": "less latency it's a it's a unified api and one of the biggest advantage",
    "start": "645120",
    "end": "651680"
  },
  {
    "text": "that is that in when you're using kubernetes and using messaging the opening and the close connection all",
    "start": "651680",
    "end": "658560"
  },
  {
    "text": "the time is very highly cost this means that using qmq",
    "start": "658560",
    "end": "663920"
  },
  {
    "text": "with the streaming capabilities you are open once and you can stream data",
    "start": "663920",
    "end": "670079"
  },
  {
    "text": "as much as you you want this this gives you low latency and also less but consume less of",
    "start": "670079",
    "end": "676079"
  },
  {
    "text": "resources to handle such transfer data between endpoints okay let's see the first connector of",
    "start": "676079",
    "end": "684160"
  },
  {
    "text": "qbmq messaging framework the first one is the cubic feel targets cubicle targets enable and allows to",
    "start": "684160",
    "end": "692079"
  },
  {
    "text": "build the message-based microservice architecture on kubernetes with minimal efforts and without",
    "start": "692079",
    "end": "697839"
  },
  {
    "text": "developing connectivity interface between cubing queue method broker and external system such",
    "start": "697839",
    "end": "703120"
  },
  {
    "text": "database cache messaging and rest based api when you're building a micro services based on messaging",
    "start": "703120",
    "end": "710880"
  },
  {
    "text": "platform you need the intel connectivity between other services for example you have an api and you have",
    "start": "710880",
    "end": "718959"
  },
  {
    "text": "a database that need to get information from this uh database into api or we want to save the",
    "start": "718959",
    "end": "726079"
  },
  {
    "text": "some data on cache or we want to say we want to take the data and do some kind of a",
    "start": "726079",
    "end": "733040"
  },
  {
    "text": "queuing in order to process later human crew targets give you this ability to connect uh",
    "start": "733040",
    "end": "741360"
  },
  {
    "text": "cubemq to other services human queue targets is an open source",
    "start": "741360",
    "end": "747040"
  },
  {
    "text": "project that has with ctm gita and you can log in see and and what you can see is that the",
    "start": "747040",
    "end": "754399"
  },
  {
    "text": "wide area of support of services we have about 80 different connectors",
    "start": "754399",
    "end": "760000"
  },
  {
    "text": "for this container we can see we have cache redis memcache resort cards some spools",
    "start": "760000",
    "end": "765680"
  },
  {
    "text": "database like postgres and my sequel",
    "start": "765680",
    "end": "770839"
  },
  {
    "text": "cassandra and also we have messaging la kafka and rapid mq and other mqtt and also we",
    "start": "770839",
    "end": "778560"
  },
  {
    "text": "have a basic support for we have a support for basing services in the",
    "start": "778560",
    "end": "785279"
  },
  {
    "text": "clouds in lacking gcp we have all the cache there um in aws you can see a large",
    "start": "785279",
    "end": "791839"
  },
  {
    "text": "service that we were supporting from stores that all the database all the messaging storage",
    "start": "791839",
    "end": "796959"
  },
  {
    "text": "and also in azure so so the next thing we're going to discuss is human fuel sources human q",
    "start": "796959",
    "end": "803360"
  },
  {
    "text": "sources is the actually the other side of qbq targets it's allowed to ingest data",
    "start": "803360",
    "end": "810880"
  },
  {
    "text": "inside into a cuban queue and enable you to for example form some",
    "start": "810880",
    "end": "817120"
  },
  {
    "text": "kind of uh ingesting component inside to your back end it supports other messaging",
    "start": "817120",
    "end": "824000"
  },
  {
    "text": "components like property people also like a file storage and we see it",
    "start": "824000",
    "end": "829360"
  },
  {
    "text": "later on in our demo how it works it's um mainly working together with tmq targets",
    "start": "829360",
    "end": "835279"
  },
  {
    "text": "and more for also for if you want to migrate and old services like if you",
    "start": "835279",
    "end": "840880"
  },
  {
    "text": "have services in rabbit mq and want to move to kubernetes and you want to have to",
    "start": "840880",
    "end": "846880"
  },
  {
    "text": "to still have connectivity to a rabbit in your outside of kubernetes so you can use",
    "start": "846880",
    "end": "852320"
  },
  {
    "text": "the sources and the targets from that support rabbiting queue in order to form some kind of migration",
    "start": "852320",
    "end": "858480"
  },
  {
    "text": "paths for them human queue source is also an open source project you can look it into the github",
    "start": "858480",
    "end": "865680"
  },
  {
    "text": "and here we we have all the sources that we support um from the from http like uh we have like an api",
    "start": "865680",
    "end": "873760"
  },
  {
    "text": "gateway this is a very interesting connector we you you can put human fuel sources as",
    "start": "873760",
    "end": "879199"
  },
  {
    "text": "an api gateway in front of your user and you can uh absorb data inside",
    "start": "879199",
    "end": "885920"
  },
  {
    "text": "and it you can place it on a queue or to process later it's like an api gateway for messaging",
    "start": "885920",
    "end": "892480"
  },
  {
    "text": "capability we have almost all the available one like kafka and ibm mq activemq storage for file",
    "start": "892480",
    "end": "900000"
  },
  {
    "text": "system other as we have in the targets we have also support for the web type of sources like in amazon and",
    "start": "900000",
    "end": "907199"
  },
  {
    "text": "azure and gcp to conclude the ecosystem components of cubemq",
    "start": "907199",
    "end": "914480"
  },
  {
    "start": "910000",
    "end": "1022000"
  },
  {
    "text": "i want to discuss about the bridge connector the bridge connector allowed to connect",
    "start": "914480",
    "end": "920240"
  },
  {
    "text": "allows to connect between human-q clusters there's several connectivity and i will show you in in a",
    "start": "920240",
    "end": "926720"
  },
  {
    "text": "second in in the github repository but the main idea is that you",
    "start": "926720",
    "end": "932160"
  },
  {
    "text": "will the ability to interconnect between qpmq clusters no matter where they are if it's on",
    "start": "932160",
    "end": "939440"
  },
  {
    "text": "other regions other availability zones other uh in the cloud or in your on-prem",
    "start": "939440",
    "end": "946720"
  },
  {
    "text": "it depends on and how you want to connect between them back to github cuban cube bridge is also",
    "start": "946720",
    "end": "952160"
  },
  {
    "text": "an open source project that we have about four topologies one is the bridge is",
    "start": "952160",
    "end": "958000"
  },
  {
    "text": "one to one connectivity between clusters means that i can connect from",
    "start": "958000",
    "end": "963279"
  },
  {
    "text": "cluster a to cluster b we have replication means that you we have a way that you a data in one cluster can",
    "start": "963279",
    "end": "971519"
  },
  {
    "text": "replicate the same data to different cluster this is very appealing to if you have some kind of ingestion of analytics or many many",
    "start": "971519",
    "end": "979199"
  },
  {
    "text": "of uh forms of flow streams of data that you want to consume in in several kubernetes in cubicle",
    "start": "979199",
    "end": "986639"
  },
  {
    "text": "clusters and we have some aggregation means that you can collect many collect a lot of data from many in",
    "start": "986639",
    "end": "994240"
  },
  {
    "text": "your cluster and send it to another cluster and what we call a transform that it's like a mix",
    "start": "994240",
    "end": "1000480"
  },
  {
    "text": "between replication and aggregation uh together this concludes the cuban queue platform",
    "start": "1000480",
    "end": "1006480"
  },
  {
    "text": "component description and in this point i would like to show you a use case of using",
    "start": "1006480",
    "end": "1014399"
  },
  {
    "text": "cuban queue and the component how to move data between edge and s3",
    "start": "1014399",
    "end": "1020639"
  },
  {
    "text": "buckets in aws the use case that i'm going to show you is taking from one of our",
    "start": "1020639",
    "end": "1027120"
  },
  {
    "text": "clients that is multinational technology company he has a hundred of remote edge location",
    "start": "1027120",
    "end": "1035280"
  },
  {
    "text": "that sending in daily basis hundreds of gigabytes of files that need",
    "start": "1035280",
    "end": "1042160"
  },
  {
    "text": "to be uploaded to s3 for some research the research is done by other",
    "start": "1042160",
    "end": "1048880"
  },
  {
    "text": "services that digesting this file and producing some outputs sending back to the clients with some",
    "start": "1048880",
    "end": "1057200"
  },
  {
    "text": "information they are currently using ibm and q because they are on the vm",
    "start": "1057200",
    "end": "1064400"
  },
  {
    "text": "type world and when they want to move they want they are currently moving to",
    "start": "1064400",
    "end": "1069440"
  },
  {
    "text": "uh kubernetes and they need a solution that will be container based and it will be more robust and uh much faster than what they",
    "start": "1069440",
    "end": "1076720"
  },
  {
    "text": "have today they have also a cloud and on-prem solution that needs to be",
    "start": "1076720",
    "end": "1082799"
  },
  {
    "text": "support which means that it's not only from edge to aws it's also for bridging between",
    "start": "1082799",
    "end": "1090240"
  },
  {
    "text": "two location of on-prem and a cloud i'm going to divide the demo to four",
    "start": "1090240",
    "end": "1096320"
  },
  {
    "text": "step before going to start the steps uh i'm going to talk about briefly we're going to use",
    "start": "1096320",
    "end": "1102960"
  },
  {
    "text": "the cuban queue built-in deploy building tool this is an online building tool that will help us to configure all the components",
    "start": "1102960",
    "end": "1110000"
  },
  {
    "text": "and to deploy them very quickly to a kubernetes cluster so we're going to use this tool to",
    "start": "1110000",
    "end": "1116640"
  },
  {
    "text": "follow configuration and for the steps i'm going to do like this in step one we're going to",
    "start": "1116640",
    "end": "1123120"
  },
  {
    "text": "deploy a cuban queue cluster on a remote kubernetes cluster on gcp google cloud",
    "start": "1123120",
    "end": "1128799"
  },
  {
    "text": "platform we're going to add a cube mq targets that from one end will be connected to",
    "start": "1128799",
    "end": "1134480"
  },
  {
    "text": "the local cuban queue cluster and on the other side it would be send and save files on the s3 buckets on aws",
    "start": "1134480",
    "end": "1144799"
  },
  {
    "text": "the second one the second step will be deploying we could we will create a kubernetes",
    "start": "1144799",
    "end": "1150720"
  },
  {
    "text": "cluster with k3 d daemon for k3s and then we're going to deploy",
    "start": "1150720",
    "end": "1158160"
  },
  {
    "text": "a cubing queue cluster on this kubernetes cluster we're going to add a bridge that",
    "start": "1158160",
    "end": "1164559"
  },
  {
    "text": "connects between the local one q and q cluster 2 to the remote one that's sitting on gcp",
    "start": "1164559",
    "end": "1171280"
  },
  {
    "text": "the third step will be configuration of cubic you sources",
    "start": "1171280",
    "end": "1177679"
  },
  {
    "text": "this will be a standalone cuban queue sources application that from one hand will be listening to",
    "start": "1177679",
    "end": "1184960"
  },
  {
    "text": "the local local files that we will send put there later on some files and on the",
    "start": "1184960",
    "end": "1192559"
  },
  {
    "text": "other side will send the files that he is listening and take from this file folder to a queue",
    "start": "1192559",
    "end": "1200080"
  },
  {
    "text": "in qmq that will be later on will be sent to the s3",
    "start": "1200080",
    "end": "1207840"
  },
  {
    "text": "on the remote side step four will be moving some files so let's",
    "start": "1207840",
    "end": "1214799"
  },
  {
    "text": "do it step one in step one we're going to create a",
    "start": "1214799",
    "end": "1220960"
  },
  {
    "start": "1217000",
    "end": "1599000"
  },
  {
    "text": "cuban queue cluster on a remote kubernetes cluster in this case we're going to",
    "start": "1220960",
    "end": "1226880"
  },
  {
    "text": "deploy on gcp for this i'm going to use our build and deploy tool as we can see",
    "start": "1226880",
    "end": "1234080"
  },
  {
    "text": "here this is the cuban cube built-in deploy management console this is a web application this",
    "start": "1234080",
    "end": "1240720"
  },
  {
    "text": "application allows you to configure all the qmq components and be able with cube ctl command line",
    "start": "1240720",
    "end": "1249039"
  },
  {
    "text": "to deploy yaml files into kubernetes cluster and then you can create your architecture as you",
    "start": "1249039",
    "end": "1256640"
  },
  {
    "text": "desired so step one is creating cuban queue cluster on gcp",
    "start": "1256640",
    "end": "1262559"
  },
  {
    "text": "kubernetes cluster and also adding cuban queue targets that points to s3",
    "start": "1262559",
    "end": "1269919"
  },
  {
    "text": "buckets that will take files from a specific topic or channel",
    "start": "1269919",
    "end": "1275440"
  },
  {
    "text": "we call going to call it s3 and save it as a file on aws s3 so",
    "start": "1275440",
    "end": "1283760"
  },
  {
    "text": "let's start by creating cuban queue cluster",
    "start": "1283760",
    "end": "1289120"
  },
  {
    "text": "clicking on uh get cluster we're going to add and here we're going to create a",
    "start": "1289840",
    "end": "1297120"
  },
  {
    "text": "put cuban key with a demo cuban queue namespace demo",
    "start": "1297120",
    "end": "1302240"
  },
  {
    "text": "very important is that we're going to expose the cuban queue cluster",
    "start": "1302240",
    "end": "1308799"
  },
  {
    "text": "outside in order that the bridge in step 2 and step 3 will be able to connect directly",
    "start": "1308799",
    "end": "1315919"
  },
  {
    "text": "to to the cuban queue cluster that's running on gcp we're going to put",
    "start": "1315919",
    "end": "1322320"
  },
  {
    "text": "the grpc interface with load balancer that's it and do save and we're going to",
    "start": "1322320",
    "end": "1330640"
  },
  {
    "text": "do a deploy here when i do click on deploy i can get the manifest and here i get two",
    "start": "1330640",
    "end": "1338400"
  },
  {
    "text": "manifests that i can play with one is the initialization of",
    "start": "1338400",
    "end": "1343600"
  },
  {
    "text": "all cuban queue clds and definition uh all blacks everything and the second",
    "start": "1343600",
    "end": "1350960"
  },
  {
    "text": "one is the the the yama that that is representing the cuban queue cluster",
    "start": "1350960",
    "end": "1357120"
  },
  {
    "text": "so i'm going to start within it i can click it and go to there um",
    "start": "1357120",
    "end": "1363520"
  },
  {
    "text": "now console this one",
    "start": "1363520",
    "end": "1369280"
  },
  {
    "text": "okay so it's already since i already did it before it didn't just it didn't",
    "start": "1372159",
    "end": "1378880"
  },
  {
    "text": "change anything now i'm going to use this one click one and",
    "start": "1378880",
    "end": "1388640"
  },
  {
    "text": "and here we can see that he created qbl cluster on the cuban queue demo",
    "start": "1388640",
    "end": "1395840"
  },
  {
    "text": "namespace we can see what is the status queue",
    "start": "1395840",
    "end": "1403840"
  },
  {
    "text": "ctl get parts",
    "start": "1403840",
    "end": "1408960"
  },
  {
    "text": "keeping queue demo",
    "start": "1409360",
    "end": "1414240"
  },
  {
    "text": "see that everything is up and running you see also the operator another thing i want to do is to get the",
    "start": "1415600",
    "end": "1421520"
  },
  {
    "text": "ip address of the load balancer that gcp created for for me so we're going to do with",
    "start": "1421520",
    "end": "1428840"
  },
  {
    "text": "services svcs [Music]",
    "start": "1428840",
    "end": "1436320"
  },
  {
    "text": "demo and we can see that we need to take this ip address and save",
    "start": "1436320",
    "end": "1443039"
  },
  {
    "text": "it for later use now the next step is to",
    "start": "1443039",
    "end": "1451520"
  },
  {
    "text": "create the targets so here what we're going to do we're",
    "start": "1451520",
    "end": "1456640"
  },
  {
    "text": "going to deploy um the cuban queue targets container into",
    "start": "1456640",
    "end": "1462080"
  },
  {
    "text": "the same namespace that's running cuban queue cluster and here we're going to select a connector from",
    "start": "1462080",
    "end": "1468640"
  },
  {
    "text": "s3 type then we can see that we have here and here we have two sides what we call",
    "start": "1468640",
    "end": "1476799"
  },
  {
    "text": "the soul side and the target side the sound side is from where you're taking",
    "start": "1476799",
    "end": "1482159"
  },
  {
    "text": "the information to be um running on s3 target side",
    "start": "1482159",
    "end": "1489679"
  },
  {
    "text": "so from here we're going to select the queue and here we're going to select that",
    "start": "1489679",
    "end": "1496000"
  },
  {
    "text": "grpc service others here is giving you cluster grpc cuban cuban cuban queue but here is qmq",
    "start": "1496000",
    "end": "1505120"
  },
  {
    "text": "demo this this is the namespace and the channel is s3 here i'm going to",
    "start": "1505120",
    "end": "1513039"
  },
  {
    "text": "put the aws aws keys",
    "start": "1513039",
    "end": "1521520"
  },
  {
    "text": "and all the information and then do save here are getting uh the information of",
    "start": "1521760",
    "end": "1528400"
  },
  {
    "text": "targets of course i can add more more targets if i want but here you can do the manifest but what i want",
    "start": "1528400",
    "end": "1536720"
  },
  {
    "text": "that it will run on the namespace so i'm setting the namespace demo",
    "start": "1536720",
    "end": "1544880"
  },
  {
    "text": "getting the manifest the same again",
    "start": "1544880",
    "end": "1550080"
  },
  {
    "text": "and here i'm going to copy paste and run",
    "start": "1551600",
    "end": "1558240"
  },
  {
    "text": "created we can see if i want the parts that",
    "start": "1559039",
    "end": "1565440"
  },
  {
    "text": "got targets created okay another cool tool is keep mq ctr this is",
    "start": "1565440",
    "end": "1572080"
  },
  {
    "text": "the command line of cuban queue we can even uh look into the container",
    "start": "1572080",
    "end": "1577840"
  },
  {
    "text": "with the logs we can do q mq ctl get cons logs",
    "start": "1577840",
    "end": "1587520"
  },
  {
    "text": "you will select which one and we're going to use this one and you can see that it's already",
    "start": "1587520",
    "end": "1593039"
  },
  {
    "text": "initialized so this concludes step one in step two we're going to create",
    "start": "1593039",
    "end": "1602640"
  },
  {
    "start": "1599000",
    "end": "1659000"
  },
  {
    "text": "a cube it could first a kubernetes cluster on a local machine like an on edge device we're going to use k3d as",
    "start": "1602640",
    "end": "1613039"
  },
  {
    "text": "the kubernetes distribution this is a daemon for k3s for windows then",
    "start": "1613039",
    "end": "1620000"
  },
  {
    "text": "we're going to deploy a cube mq cluster inside this",
    "start": "1620000",
    "end": "1625200"
  },
  {
    "text": "kubernetes cluster on the edge then we're going to create",
    "start": "1625200",
    "end": "1632000"
  },
  {
    "text": "a bridge between the local cubemq cluster that's sitting on the head side",
    "start": "1632000",
    "end": "1638960"
  },
  {
    "text": "and pointed to the remote kubernetes clutter that's sitting on gcp that we configured in step",
    "start": "1638960",
    "end": "1646960"
  },
  {
    "text": "one so what we're going to do first we're going to create a cluster for the edge with",
    "start": "1646960",
    "end": "1654960"
  },
  {
    "text": "k3d okay 3d cluster",
    "start": "1654960",
    "end": "1661679"
  },
  {
    "start": "1659000",
    "end": "1709000"
  },
  {
    "text": "create going to create a cluster",
    "start": "1661679",
    "end": "1668960"
  },
  {
    "text": "okay that sees that everything is up and",
    "start": "1668960",
    "end": "1673679"
  },
  {
    "text": "[Music]",
    "start": "1675410",
    "end": "1680840"
  },
  {
    "text": "running see it's running let's see that",
    "start": "1680840",
    "end": "1686960"
  },
  {
    "text": "everything is up and running from two parts",
    "start": "1686960",
    "end": "1696710"
  },
  {
    "text": "[Music] i did the mistake so let's do this one",
    "start": "1696710",
    "end": "1704559"
  },
  {
    "text": "let's see that everything is running so now we're going to run to",
    "start": "1704559",
    "end": "1711679"
  },
  {
    "start": "1709000",
    "end": "1784000"
  },
  {
    "text": "again okay our build build deploy tool here we're going to create a cluster",
    "start": "1711679",
    "end": "1717600"
  },
  {
    "text": "here i can delete one and then i will create a simple cluster and with the default keyboard queue",
    "start": "1717600",
    "end": "1723919"
  },
  {
    "text": "namespace to save deploy",
    "start": "1723919",
    "end": "1729440"
  },
  {
    "text": "and here since we're starting fresh so i'm going to use the init",
    "start": "1729440",
    "end": "1739840"
  },
  {
    "text": "then we can do this",
    "start": "1740559",
    "end": "1745360"
  },
  {
    "text": "in order to see that everything is up and running you can do cube mq",
    "start": "1749679",
    "end": "1755120"
  },
  {
    "text": "ctl get cluster that everything is up and running still",
    "start": "1756320",
    "end": "1764159"
  },
  {
    "text": "still not ready this means that it's still downloading all the images cube cpl",
    "start": "1764159",
    "end": "1773440"
  },
  {
    "text": "fonts [Music]",
    "start": "1773440",
    "end": "1778859"
  },
  {
    "text": "up and running all of them you can see here 343 and now",
    "start": "1779360",
    "end": "1787200"
  },
  {
    "start": "1784000",
    "end": "1939000"
  },
  {
    "text": "we will add a bridge a keeping queue bridges and the role of this bridge is to bridge",
    "start": "1787200",
    "end": "1794240"
  },
  {
    "text": "between the local cuban curriculus that is sitting on our local edge kubernetes cluster",
    "start": "1794240",
    "end": "1801679"
  },
  {
    "text": "to the gcp kubernetes cluster with the qbmq cluster that's sitting",
    "start": "1801679",
    "end": "1808000"
  },
  {
    "text": "there in order to do this we will add a bridge in this menu",
    "start": "1808000",
    "end": "1813279"
  },
  {
    "text": "cuban cube readers we will add a bridge we'll call it bridge yes tree",
    "start": "1813279",
    "end": "1820960"
  },
  {
    "text": "and now here the source because we are running locally so the source will be connected to the local cubing queue cluster",
    "start": "1820960",
    "end": "1828080"
  },
  {
    "text": "which is the cubing queue cluster that's on the edge and kubernetes cluster the",
    "start": "1828080",
    "end": "1835360"
  },
  {
    "text": "k3t we will select q we will select s3",
    "start": "1835360",
    "end": "1842080"
  },
  {
    "text": "and here the target would be the remote one the cube in q1 that's sitting on gcp and here we're",
    "start": "1842080",
    "end": "1847600"
  },
  {
    "text": "going to use the the address that we recorded",
    "start": "1847600",
    "end": "1854159"
  },
  {
    "text": "before with the load balancer that we exposed in this",
    "start": "1854159",
    "end": "1859279"
  },
  {
    "text": "cuban queue and this will be this one with this ip address second",
    "start": "1859279",
    "end": "1866960"
  },
  {
    "text": "[Music] and here when we're going to do",
    "start": "1867730",
    "end": "1873039"
  },
  {
    "text": "save and we see we have a bridge form local keyboard cluster to a remote",
    "start": "1873039",
    "end": "1879519"
  },
  {
    "text": "one let's do a deploy we will have another",
    "start": "1879519",
    "end": "1888720"
  },
  {
    "text": "manifest and we going to copy paste",
    "start": "1888960",
    "end": "1896399"
  },
  {
    "text": "here and it was created in order to see this we can do cube",
    "start": "1896399",
    "end": "1902159"
  },
  {
    "text": "ctl get bonds",
    "start": "1902159",
    "end": "1907840"
  },
  {
    "text": "[Music] bonds",
    "start": "1913880",
    "end": "1921840"
  },
  {
    "text": "running also we can see if we want to get the cube mq ctl",
    "start": "1923360",
    "end": "1929519"
  },
  {
    "text": "we get logs you can see that we have here and you see that on one hand",
    "start": "1929519",
    "end": "1936640"
  },
  {
    "text": "he connected to the local one and the telecom",
    "start": "1936640",
    "end": "1942000"
  },
  {
    "start": "1939000",
    "end": "2247000"
  },
  {
    "text": "now we could go to the third step the third step is",
    "start": "1942000",
    "end": "1948799"
  },
  {
    "text": "breaking the cuban queue sources as a standalone application this in this uh in this",
    "start": "1948799",
    "end": "1955840"
  },
  {
    "text": "case is a windows one for one hand this cuboq sources will listen to a local",
    "start": "1955840",
    "end": "1961600"
  },
  {
    "text": "folder that we're going to set up and we'll send the messages that the files that",
    "start": "1961600",
    "end": "1969600"
  },
  {
    "text": "in this folder to the local cubing queue cluster that's sitting on the edge",
    "start": "1969600",
    "end": "1974840"
  },
  {
    "text": "device here we're going to do it in two sub steps one is creating",
    "start": "1974840",
    "end": "1980640"
  },
  {
    "text": "the yaml file for the given view sources for the configuration and also we're",
    "start": "1980640",
    "end": "1987120"
  },
  {
    "text": "going to expose the cuban queue cluster that's running locally to the port that",
    "start": "1987120",
    "end": "1994640"
  },
  {
    "text": "the keeping queue sources will be able to connect to so we will start again by",
    "start": "1994640",
    "end": "2002000"
  },
  {
    "text": "let's put this one click with sources here here we're going to add a source that it's a file system",
    "start": "2002000",
    "end": "2008960"
  },
  {
    "text": "source file system source and here we're going to have this setting the setting here",
    "start": "2008960",
    "end": "2016720"
  },
  {
    "text": "will be what will be the source folder names means that what is the local one here we're going",
    "start": "2016720",
    "end": "2023519"
  },
  {
    "text": "to use the e demo s3 to this file sorry to this folder we're going to",
    "start": "2023519",
    "end": "2032159"
  },
  {
    "text": "uh upload an image and then this is what we want to see on the s3 buckets we're going to",
    "start": "2032159",
    "end": "2039279"
  },
  {
    "text": "set the buckets this is the bucket's name and we can see here this is currently empty this is the",
    "start": "2039279",
    "end": "2046320"
  },
  {
    "text": "buckets on puberty targets nothing is here",
    "start": "2046320",
    "end": "2053919"
  },
  {
    "text": "and the targets here will be a local one so we're going to do",
    "start": "2054240",
    "end": "2059440"
  },
  {
    "text": "this one and also a local host again this is because we are running it",
    "start": "2059440",
    "end": "2065118"
  },
  {
    "text": "as a standalone application it's not running on a container this is another advantage of",
    "start": "2065119",
    "end": "2071919"
  },
  {
    "text": "cubic connectors that can run also as a connector and also as a windows or linux or any kind of",
    "start": "2071919",
    "end": "2078480"
  },
  {
    "text": "other um other file in architecture",
    "start": "2078480",
    "end": "2085200"
  },
  {
    "text": "types here test three save and wait to deploy",
    "start": "2085200",
    "end": "2093358"
  },
  {
    "text": "now since we are not running on kubernetes we need only the read only the",
    "start": "2093359",
    "end": "2102720"
  },
  {
    "text": "the url of the configuration here we're going to use",
    "start": "2102720",
    "end": "2109359"
  },
  {
    "text": "going to the folder of cuban queue some resources sorry",
    "start": "2109359",
    "end": "2119359"
  },
  {
    "text": "um cd sources and we're going to run giving queue",
    "start": "2119520",
    "end": "2126240"
  },
  {
    "text": "sources and get here we're going to take only this one",
    "start": "2126240",
    "end": "2134560"
  },
  {
    "text": "but before we're going to run it i'm going to do some poll folding cuban queue ctl send cluster",
    "start": "2134560",
    "end": "2142839"
  },
  {
    "text": "proxy you will go do for all the ports and here we're going",
    "start": "2142839",
    "end": "2148480"
  },
  {
    "text": "to run it and it's going to start running it will try to connect to uh to keep mq and here we it's connected",
    "start": "2148480",
    "end": "2156400"
  },
  {
    "text": "and running so this is step three step four is a simple one let's move",
    "start": "2156400",
    "end": "2164079"
  },
  {
    "text": "put some files on this folder and then what we're going to see is that after a",
    "start": "2164079",
    "end": "2169280"
  },
  {
    "text": "couple seconds it all the file will be disappeared because they're going to be moved actually to going to send",
    "start": "2169280",
    "end": "2175680"
  },
  {
    "text": "will be sent to cuban queue local one and then through the bridge to the remote one on gcp then to the",
    "start": "2175680",
    "end": "2183200"
  },
  {
    "text": "targets and from the targets will be saved to s3 buckets so let's do this",
    "start": "2183200",
    "end": "2190160"
  },
  {
    "text": "i'm going to put some files there with some some images",
    "start": "2190160",
    "end": "2196800"
  },
  {
    "text": "of five images so each one to five",
    "start": "2196800",
    "end": "2202000"
  },
  {
    "text": "meg and then we can see here after a couple times it was disappeared",
    "start": "2202000",
    "end": "2209599"
  },
  {
    "text": "and we can see here if it's we have a problem and let's see on the s3",
    "start": "2209599",
    "end": "2215599"
  },
  {
    "text": "if it was sent and here they are all of them since",
    "start": "2215599",
    "end": "2223760"
  },
  {
    "text": "all the files that running on was in my ads device now are on the s3",
    "start": "2223760",
    "end": "2231440"
  },
  {
    "text": "buckets this concludes our demo if you would like to try qrq you can head to",
    "start": "2231440",
    "end": "2237000"
  },
  {
    "text": "kimkill.io quickstart this is also conclude our webinar thank",
    "start": "2237000",
    "end": "2242960"
  },
  {
    "text": "you for watching and hope to see you soon again thank you",
    "start": "2242960",
    "end": "2249359"
  }
]