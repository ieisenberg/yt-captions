[
  {
    "text": "good afternoon this is the talk on the deep dive for platinum bull pecs",
    "start": "60",
    "end": "5450"
  },
  {
    "text": "my name is Terrence Lee I go by on 0-2 on Twitter I work at platform as a",
    "start": "5450",
    "end": "11160"
  },
  {
    "text": "service company called Heroku and if you missed or remember the talk from",
    "start": "11160",
    "end": "16680"
  },
  {
    "text": "yesterday this was the bill pack API where so as a Bill pack author you need to implement these two executables",
    "start": "16680",
    "end": "23369"
  },
  {
    "text": "detect and build and then the platform provides basic analysis and exports and",
    "start": "23369",
    "end": "28890"
  },
  {
    "text": "so with detect this is the part where the bill pack will just write code that",
    "start": "28890",
    "end": "35250"
  },
  {
    "text": "will decide if it should run kind of creates a build plan that codifies the",
    "start": "35250",
    "end": "40440"
  },
  {
    "text": "bull facts that need to be run and in the bill phase this is kind of the meat of the bill pack that actually goes",
    "start": "40440",
    "end": "46079"
  },
  {
    "text": "ahead and creates the different OCI layers that will be in your resulting image at the end as well as a bunch of",
    "start": "46079",
    "end": "51930"
  },
  {
    "text": "metadata that gets associated with it and so with export this is where the platform actually goes and constructs",
    "start": "51930",
    "end": "58079"
  },
  {
    "text": "the image that you can use at the end and then basically on a subsequent build",
    "start": "58079",
    "end": "63480"
  },
  {
    "text": "like a non first run the analysis will go ahead and pull down the different OCI layers that may be needed on that build",
    "start": "63480",
    "end": "71180"
  },
  {
    "text": "and so just a quick overview of the various components if you go to our",
    "start": "71180",
    "end": "76710"
  },
  {
    "text": "build pack github org you'll see a bunch of different repos and these are kind of the most important ones I think if",
    "start": "76710",
    "end": "83850"
  },
  {
    "text": "you're going to be looking into this project so pack is the one I think we direct most people to first to kind of",
    "start": "83850",
    "end": "90299"
  },
  {
    "text": "get started it's basically the local experience that you can download as a CLI and kind of go ahead and take a nap",
    "start": "90299",
    "end": "97350"
  },
  {
    "text": "and actually build an image out of that with the various images and it's really",
    "start": "97350",
    "end": "103200"
  },
  {
    "text": "just like the best starting point if you're just wanting to learn more about boat packs we have the K native",
    "start": "103200",
    "end": "109409"
  },
  {
    "text": "integration so there's templates that we've done for Canyon build Jason Cole helped us do a teknon",
    "start": "109409",
    "end": "116700"
  },
  {
    "text": "template as well so that's a part of the project and we want to keep maintaining",
    "start": "116700",
    "end": "122579"
  },
  {
    "text": "basically integration with K native there is a lifecycle repo that basically",
    "start": "122579",
    "end": "130050"
  },
  {
    "text": "is the main thing that you'll you - as a platform like implement that",
    "start": "130050",
    "end": "135940"
  },
  {
    "text": "implements the bill pack API via through spec we'll mention this further on talked first things would bill pack is",
    "start": "135940",
    "end": "142480"
  },
  {
    "text": "kind of the main goal anguish bonding that we provide so a lot of the bill packs that we have implemented as climate bill packs actually a written go",
    "start": "142480",
    "end": "149470"
  },
  {
    "text": "and they just used the liberal Pat to kind of make that easier we have a spec",
    "start": "149470",
    "end": "156310"
  },
  {
    "text": "which is just the formal specification of the bill pack API and then the RFC's as a basic place where you can propose",
    "start": "156310",
    "end": "163090"
  },
  {
    "text": "substantial changes to the project and so with that we're going to dive into",
    "start": "163090",
    "end": "168310"
  },
  {
    "text": "kind of the main part of the presentation so I'm gonna go and talk about basically how we've implemented",
    "start": "168310",
    "end": "174190"
  },
  {
    "text": "the Heroku bill packed set of things and then Stephens going to talk about cloud foundry so to kick this off I was",
    "start": "174190",
    "end": "181390"
  },
  {
    "text": "talking about pack so here's an example of running a pack builds and then we're passing in basically the local builder",
    "start": "181390",
    "end": "187150"
  },
  {
    "text": "images or the program builder image and it contains all the bill packs that we used to run it and in this thing that",
    "start": "187150",
    "end": "193930"
  },
  {
    "text": "we're running it's building against a spring boot application and so one of the things is that this application doesn't specify any like double pack",
    "start": "193930",
    "end": "201280"
  },
  {
    "text": "specific configuration the bill pack can detect that it is a java application and basically go through and basically",
    "start": "201280",
    "end": "208930"
  },
  {
    "text": "install the jdk run maven kind of get that thing running and then at the end you get this docker image that you can",
    "start": "208930",
    "end": "214989"
  },
  {
    "text": "run with docker on it's really just another OCI image that you can use all the existing tools that you really know",
    "start": "214989",
    "end": "220420"
  },
  {
    "text": "and love today with it so I was mentioning this builder image that we use AC as part of pack and so the",
    "start": "220420",
    "end": "228040"
  },
  {
    "text": "Builder images are a way that we use to kind of they are a assignment that bassy contains the build packs that you're",
    "start": "228040",
    "end": "234819"
  },
  {
    "text": "going that are gonna be made available when you run pack build or really anything as kind of a containable format",
    "start": "234819",
    "end": "240760"
  },
  {
    "text": "they're includes the lifecycle that actually goes ahead and does the build and the life cycles also use to",
    "start": "240760",
    "end": "246639"
  },
  {
    "text": "basically launch the application when you actually run it with like a docker run and so to construct a builder image",
    "start": "246639",
    "end": "255329"
  },
  {
    "text": "there is a build a lot on that basically describes the kind of things that go into it so you're gonna list kind of the",
    "start": "255329",
    "end": "261640"
  },
  {
    "text": "build packs there and then as well as as a stack and when we talk about a stack it's broken up into two parts there's a build image",
    "start": "261640",
    "end": "268780"
  },
  {
    "text": "that's used as the context for actually building images and then the run image that when you actually do that docker run my kind of the base image that's",
    "start": "268780",
    "end": "275440"
  },
  {
    "text": "being used where the application sits on top of so kind of stepping through that",
    "start": "275440",
    "end": "280630"
  },
  {
    "text": "with the building on Tom all you just have to name your stack so in the Hoecker case we have a stack called for",
    "start": "280630",
    "end": "286900"
  },
  {
    "text": "creatine and then here we're basically as strings pointing to two different docker images that we've built and we'll",
    "start": "286900",
    "end": "293140"
  },
  {
    "text": "go into like how these images were built and so this is all built on top of far",
    "start": "293140",
    "end": "298660"
  },
  {
    "text": "our builder images a rotating stack which we maintain as part of a product and production it's built on top of",
    "start": "298660",
    "end": "305680"
  },
  {
    "text": "bassy Bionic and then here links to both the source code of how that stuff's constructed as well as kind of the",
    "start": "305680",
    "end": "311170"
  },
  {
    "text": "packages if you're interested in digging into it more they're not super important for the rest of this talk but so we at",
    "start": "311170",
    "end": "316840"
  },
  {
    "text": "broeckel provide basically two docker images that anyone can kind of go and fetch and use as part of the product",
    "start": "316840",
    "end": "323430"
  },
  {
    "text": "unrelated to kind of the planetvale PACs project and basically in our build image",
    "start": "323430",
    "end": "329260"
  },
  {
    "text": "we have development headers that basically we don't make it available in a run image because they aren't really needed but you might need them for poly",
    "start": "329260",
    "end": "335770"
  },
  {
    "text": "native extensions and other things like that so to go ahead and construct those images that I referenced in the Builder",
    "start": "335770",
    "end": "343300"
  },
  {
    "text": "tunnel we basically inherit from the that Viroqua build image we need to",
    "start": "343300",
    "end": "349240"
  },
  {
    "text": "provide basically create a user that will be used to kind of do all that stuff as well as basically set some",
    "start": "349240",
    "end": "355120"
  },
  {
    "text": "stack information and kind of the label so the build pack knows what stack it's",
    "start": "355120",
    "end": "360910"
  },
  {
    "text": "actually running with and then the run image is going to look really similar and the only difference here is that the",
    "start": "360910",
    "end": "366580"
  },
  {
    "text": "run image uses the run image down here from on the for creatine stack side and not the build image and so with that if",
    "start": "366580",
    "end": "373360"
  },
  {
    "text": "you dr. bill both of those doctor files we have two images that the builder Tom will can reference now and so the kind",
    "start": "373360",
    "end": "380680"
  },
  {
    "text": "of the next section is going to be all the build packs that you want to have available that when we do the when we",
    "start": "380680",
    "end": "387430"
  },
  {
    "text": "create that builder that will actually be available in that OCI image so in this case there's a bunch of bill packs",
    "start": "387430",
    "end": "393850"
  },
  {
    "text": "in here I haven't written in code but there's example what that looks like you need to basically specify the idea of the bill",
    "start": "393850",
    "end": "399800"
  },
  {
    "text": "pack as well as well as where you can actually get that bill pack so in this case I have a Ruby in a proc file one",
    "start": "399800",
    "end": "405560"
  },
  {
    "text": "and then once you've lists all the bill packs you can then basically build groups of bill packs being run together",
    "start": "405560",
    "end": "411350"
  },
  {
    "text": "as a single kind of change so we have a Ruby bill pack and then after reveal packets run the proc cloudbuilt pack",
    "start": "411350",
    "end": "417680"
  },
  {
    "text": "will get wrong and one things that you can do is you can set bill packs is optional so if the detect fails on proc",
    "start": "417680",
    "end": "424400"
  },
  {
    "text": "file the bill will still succeed and so we'll have the resulting image but if the rubyville pack for instance failed",
    "start": "424400",
    "end": "430070"
  },
  {
    "text": "since its required it will actually kind of fail to build and proceed to the next",
    "start": "430070",
    "end": "435710"
  },
  {
    "text": "group and so with all that stuff we have a complete - builder dot tunnel that we",
    "start": "435710",
    "end": "441380"
  },
  {
    "text": "can use to use pack and run the create builder command and it goes ahead and like I was saying adds all the bill",
    "start": "441380",
    "end": "446630"
  },
  {
    "text": "packs it's gonna inject the lifecycle binary that we use for the building and launching it's gonna validate that we",
    "start": "446630",
    "end": "452870"
  },
  {
    "text": "actually have that user so I won't want you to kind of create a builder image without that stuff validates the GOPAC",
    "start": "452870",
    "end": "458660"
  },
  {
    "text": "on the stack creates all the directors you need and basically kind of sets everything up so you don't have to do",
    "start": "458660",
    "end": "465350"
  },
  {
    "text": "that inside of your own stack images that you're linked that you're linked to in your builder tunnel and so once we",
    "start": "465350",
    "end": "472040"
  },
  {
    "text": "have that so these are kind of the docker images that we've created as part of our Builder image so this is builder",
    "start": "472040",
    "end": "478940"
  },
  {
    "text": "image for okay build packs 18 is the one that you're gonna pass to the - builder flag when you run pack build and then",
    "start": "478940",
    "end": "484790"
  },
  {
    "text": "it's gonna reference these two other ones that we've walked through and with that we have here all the build packs",
    "start": "484790",
    "end": "491240"
  },
  {
    "text": "that we actually have as part of the Pirozhki builder image so we've written to cloud native go pack specific ones to",
    "start": "491240",
    "end": "496730"
  },
  {
    "text": "the Ruby and Java ones and then as part of kind of the platform we really have a bunch of other existing bill packs and",
    "start": "496730",
    "end": "503600"
  },
  {
    "text": "we've written basically a shim that allows us to run those v2a build packs",
    "start": "503600",
    "end": "509500"
  },
  {
    "text": "inside of the v3 launcher and kind of have them all run together so that's node Python PHP go and so I'm",
    "start": "509500",
    "end": "519140"
  },
  {
    "text": "gonna walk through kind of the Ruby one we've had different goals and designs",
    "start": "519140",
    "end": "524240"
  },
  {
    "text": "behind the kind of Cloud Foundry stuff so you can kind of get a contrast of like what it's like to build a bill pack",
    "start": "524240",
    "end": "530450"
  },
  {
    "text": "from two different perspectives so with the Ruby bill pack we had design goals as a company to the",
    "start": "530450",
    "end": "536960"
  },
  {
    "text": "basic maintainer who maintains this stuff per language and there's like the",
    "start": "536960",
    "end": "543140"
  },
  {
    "text": "v2 bill packs are not going away anytime soon for us in production we have a bunch of customers that are using them so you want to basically have a bill",
    "start": "543140",
    "end": "550130"
  },
  {
    "text": "pack repo that basically supported both v2 and v3 versus just a net new v3 bill",
    "start": "550130",
    "end": "556130"
  },
  {
    "text": "packs and we apply patches we don't have to apply them across like two different repos so you'll see kind of the",
    "start": "556130",
    "end": "562610"
  },
  {
    "text": "different design decisions we've made to kind of hit some of those goals so the",
    "start": "562610",
    "end": "568190"
  },
  {
    "text": "proko bill pack has par detect basically all it does is it's gonna check that a gem file exists because that's kind of the main defensive management system in",
    "start": "568190",
    "end": "574490"
  },
  {
    "text": "Ruby and if it does it passes it doesn't actually write like a build plan or",
    "start": "574490",
    "end": "579740"
  },
  {
    "text": "anything and you don't need to do stuff that you don't want to do as part of",
    "start": "579740",
    "end": "584780"
  },
  {
    "text": "that so you can do pretty simple stuff and so as part detect we actually just have code there to basically check a",
    "start": "584780",
    "end": "591050"
  },
  {
    "text": "form v2 mode or v3 mode so we do kind of a bunch of this stuff to just make it so",
    "start": "591050",
    "end": "596690"
  },
  {
    "text": "we can run the v2 and v3 next to each other with the same code base and then",
    "start": "596690",
    "end": "603500"
  },
  {
    "text": "as part of build we're gonna go through and create a bunch of different layers in the Ruby case we're gonna create a",
    "start": "603500",
    "end": "608990"
  },
  {
    "text": "ruby layer and so this goes in a specific directory under the layers folder specific to our bill pack that's",
    "start": "608990",
    "end": "614990"
  },
  {
    "text": "made available to us we're gonna set environment variable the path thing so basically can execute and so basically",
    "start": "614990",
    "end": "622730"
  },
  {
    "text": "at runtime when we launch any Ruby process it knows where the binary is as well as if there is a Bill pack that",
    "start": "622730",
    "end": "629300"
  },
  {
    "text": "depends on Ruby kind of down the line it also has access to the read binary we're gonna set some metadata which is",
    "start": "629300",
    "end": "635840"
  },
  {
    "text": "kind of a cloud looking thing of the Ruby version as well as the stack so we know basically when you pull this layer",
    "start": "635840",
    "end": "641750"
  },
  {
    "text": "down in the future if we need to rebuild it so for on if we on a new stack you obviously want to replace the binary",
    "start": "641750",
    "end": "648020"
  },
  {
    "text": "with a Ruby minor that's actually built for that stack kind of the next major layer is kind of",
    "start": "648020",
    "end": "654720"
  },
  {
    "text": "the dependencies which are rubygems so again similar we're gonna put that in a different layer which is in a different",
    "start": "654720",
    "end": "660479"
  },
  {
    "text": "directory and then we're just going to set time the environment variable so when we boot the Ruby app it knows where",
    "start": "660479",
    "end": "666959"
  },
  {
    "text": "to actually find that stuff and then again metadata stuff so we know when to",
    "start": "666959",
    "end": "671970"
  },
  {
    "text": "actually basically build this layer if we need to and seems gonna kind of go",
    "start": "671970",
    "end": "678029"
  },
  {
    "text": "how all that stuff gets constructor an image so we don't go through this twice gonna kind of move along and so this",
    "start": "678029",
    "end": "684029"
  },
  {
    "text": "kind of builds kind of the first part the Ruby part and so we're going to talk about this proc file build pack as this",
    "start": "684029",
    "end": "690269"
  },
  {
    "text": "optional pack that we're building and so the Heroku clan native go pack profile",
    "start": "690269",
    "end": "695579"
  },
  {
    "text": "build pack is really just a compatibility bill pack so this is kind of an example of like how you can build really small functionality to kind of",
    "start": "695579",
    "end": "702089"
  },
  {
    "text": "extend things that you want even though like a route build packs a pretty massive bill pack this prompt about one",
    "start": "702089",
    "end": "707729"
  },
  {
    "text": "is under 100 lines of mostly bash and so",
    "start": "707729",
    "end": "712759"
  },
  {
    "text": "if you're not familiar profiles away on karoku to basically specify the process",
    "start": "712759",
    "end": "718049"
  },
  {
    "text": "type that you want to launch and kind of have that be able to be launched and so it's pretty simple you just specify the",
    "start": "718049",
    "end": "723809"
  },
  {
    "text": "name of the process type have a call and then kind of command you want to run and so in our Ruby case this is what it",
    "start": "723809",
    "end": "729629"
  },
  {
    "text": "looks like to build up a rails app and so inside of the cloud native build pack",
    "start": "729629",
    "end": "735029"
  },
  {
    "text": "spec we have a launch tom all that has different things you can specify in it but one of them is a group of processes",
    "start": "735029",
    "end": "740399"
  },
  {
    "text": "and so all this proc file build pack is going to do it's going to parse that proc file and it's just going to write out I launched Omelas par that build",
    "start": "740399",
    "end": "746939"
  },
  {
    "text": "process so when launcher boots up it knows of the different processes that you can actually launch and so with that",
    "start": "746939",
    "end": "754799"
  },
  {
    "text": "previous proc file all does is basically replaces strings and kind of does validation around that and that's kind",
    "start": "754799",
    "end": "760049"
  },
  {
    "text": "of again this allows us to basically support anything that people are doing today on our platform and actually turn",
    "start": "760049",
    "end": "766919"
  },
  {
    "text": "that into a plan named Bill pack image and so with that Stephens now going to",
    "start": "766919",
    "end": "772889"
  },
  {
    "text": "talk about hey yeah so I'm Steven I work",
    "start": "772889",
    "end": "782039"
  },
  {
    "text": "at pivotal on things related to cloud foundry and kate's and today I'm gonna talk about",
    "start": "782039",
    "end": "787399"
  },
  {
    "text": "sort of the primary goal we had for rewriting the Cloud Foundry build packs on top of this new API is really",
    "start": "787399",
    "end": "793610"
  },
  {
    "text": "modularity and transparency that we wanted to break down the build packs into kind of composable pieces that each",
    "start": "793610",
    "end": "799670"
  },
  {
    "text": "did know one thing and that kind of cloud native build packs v3 API provides",
    "start": "799670",
    "end": "805360"
  },
  {
    "text": "some nice functionality for letting you break down build packs into smaller parts than the previous build pack and",
    "start": "805360",
    "end": "811009"
  },
  {
    "text": "invitations did you can kind of contrast this you know on the Heroku side I think the initial approach was more of you",
    "start": "811009",
    "end": "818180"
  },
  {
    "text": "know build one build pack that's responsible for a lot of things and that's a fine way to build a build pack too on our side we wanted to break it",
    "start": "818180",
    "end": "824779"
  },
  {
    "text": "down more and use some of the sort of progressive complexity that you can use within the API so if you look at our you",
    "start": "824779",
    "end": "830509"
  },
  {
    "text": "know previous nodejs build pack for v2 it's kind of one big monolithic thing the new nodejs build pack for v3 is kind",
    "start": "830509",
    "end": "838970"
  },
  {
    "text": "of three build max it's a node engine build pack a yarn build pack and an NPM build back and so during the detection",
    "start": "838970",
    "end": "845269"
  },
  {
    "text": "phase you can kind of express this as two groups the engine build pack you know with the module installed the",
    "start": "845269",
    "end": "851300"
  },
  {
    "text": "process by yarn or the engine build pack and the modules installed in the process by NPM and so it was a kind of a",
    "start": "851300",
    "end": "858709"
  },
  {
    "text": "reminder build pack detection is sort of this mechanism for selecting you know what build packs might apply to your",
    "start": "858709",
    "end": "864170"
  },
  {
    "text": "application and also selecting the tools and dependencies that go into your application that the second two things are kind of new in the v3 API the",
    "start": "864170",
    "end": "871069"
  },
  {
    "text": "detection process is actually that that whole initial part is also responsible for coming up with a plan for what's",
    "start": "871069",
    "end": "876649"
  },
  {
    "text": "going to happen during the build called the build plan and so to kind of run through what this looks like with Cloud",
    "start": "876649",
    "end": "881899"
  },
  {
    "text": "Foundry we have the nodejs build pack engine build pack running first and it says hey you know I just do one thing I",
    "start": "881899",
    "end": "888350"
  },
  {
    "text": "don't understand package.json because that's an NPM you know configuration file or your own configuration file and",
    "start": "888350",
    "end": "893600"
  },
  {
    "text": "so my job is just I'm gonna provide the nodejs engine itself if another build",
    "start": "893600",
    "end": "899360"
  },
  {
    "text": "pack asks for it and I'm gonna pass because who knows might if nobody else asked for it then that's great I'm not",
    "start": "899360",
    "end": "904459"
  },
  {
    "text": "gonna do anything the yarn build pack runs and fails immediately because there's no yarn lock here so move on to",
    "start": "904459",
    "end": "909649"
  },
  {
    "text": "the next week so that group doesn't happen we move on to the next group so they note engine build pack runs",
    "start": "909649",
    "end": "915900"
  },
  {
    "text": "again same thing okay we're good and then the npm build pack runs and it reads package.json because that's npm",
    "start": "915900",
    "end": "922440"
  },
  {
    "text": "configuration and it says oh I found this node engine version so I know we need to install node j s10 31 and I'm",
    "start": "922440",
    "end": "928710"
  },
  {
    "text": "going to add that build plan for the node JS build pack and so that group is",
    "start": "928710",
    "end": "933720"
  },
  {
    "text": "selected we have a build plan and we proceed to the build phase and so at this point and just as a reminder the",
    "start": "933720",
    "end": "940410"
  },
  {
    "text": "build phase is kind of a it's an unprivileged so it runs an unprivileged containers and produces reproducible",
    "start": "940410",
    "end": "945480"
  },
  {
    "text": "images and it constructs these image in these images incrementally just by",
    "start": "945480",
    "end": "950760"
  },
  {
    "text": "generating new layers that don't need to change from the previous build it doesn't even need to download old layers kind of it's very different from the",
    "start": "950760",
    "end": "956550"
  },
  {
    "text": "docker file model sort of designed to be as efficient as possible given that we can you know kind of put code upfront on",
    "start": "956550",
    "end": "962430"
  },
  {
    "text": "the build back side and so to kind of run through that build process the build",
    "start": "962430",
    "end": "967680"
  },
  {
    "text": "plan is fed into the node.js engine build pack which kind of claims that entry and it creates these you know",
    "start": "967680",
    "end": "975060"
  },
  {
    "text": "creates a node.js layer that has you know nodejs in it and sets up the environment a little bit for things to",
    "start": "975060",
    "end": "981570"
  },
  {
    "text": "be able to use it it if you look at these layer paths here it's kind of interesting you know the reason we can",
    "start": "981570",
    "end": "987750"
  },
  {
    "text": "kind of incremental e update layers regardless of what order they're in is because there's sort of a tight contract",
    "start": "987750",
    "end": "993300"
  },
  {
    "text": "for where they live and at the same time it writes that layer it writes a metadata about what what's in the layers",
    "start": "993300",
    "end": "1000380"
  },
  {
    "text": "so that later it can look back at that and say oh you know the remote image and the registry it already has this layer I",
    "start": "1000380",
    "end": "1005390"
  },
  {
    "text": "don't need to rebuild it if it needs to and then the NPM build pec runs and it doesn't get the build plan because the",
    "start": "1005390",
    "end": "1013100"
  },
  {
    "text": "entry was claimed by the node.js build pack if you had many more build packs you have it's sort of more entries passed along and when the npm bobba hug",
    "start": "1013100",
    "end": "1020300"
  },
  {
    "text": "runs and generates node modules layer kind of wood you know path set up sort",
    "start": "1020300",
    "end": "1026360"
  },
  {
    "text": "of so that you have modules and a node path exported separately and then it writes metadata that in this case is the",
    "start": "1026360",
    "end": "1032480"
  },
  {
    "text": "shoc 256 some of the package JSON locks so that it can tell hey your package block didn't change i'm not going to",
    "start": "1032480",
    "end": "1038829"
  },
  {
    "text": "regenerate the modules time and so then all these components",
    "start": "1038829",
    "end": "1044379"
  },
  {
    "text": "that were generated are kind of combined together to create no CI image so you have the layers and the application",
    "start": "1044379",
    "end": "1050100"
  },
  {
    "text": "layer you know being stored as filesystem layers in the image and then you have the metadata and the build",
    "start": "1050100",
    "end": "1056679"
  },
  {
    "text": "plans stored in the image metadata and that's that's the final OCI image that gets generated it's more than two layers it's just kind of grouping everything",
    "start": "1056679",
    "end": "1063100"
  },
  {
    "text": "together there and then on a rebuild you know say the build happens again you",
    "start": "1063100",
    "end": "1068980"
  },
  {
    "text": "might not need to regenerate that nodejs layer you may just need to rebuild the node modules so doesn't you know a",
    "start": "1068980",
    "end": "1076690"
  },
  {
    "text": "question we get and kind of as we were building it style we realize might be a problem is I'm decomposing build packs",
    "start": "1076690",
    "end": "1082659"
  },
  {
    "text": "into smaller groups makes distributing them and kind of interacting with them a challenge so if you have all these",
    "start": "1082659",
    "end": "1087970"
  },
  {
    "text": "groups like for our Python build pack where it's even more complicated you",
    "start": "1087970",
    "end": "1093279"
  },
  {
    "text": "know we support all these different kinds of package managers how would you say I want to put an APM agent you know",
    "start": "1093279",
    "end": "1098289"
  },
  {
    "text": "before every single one of those that seems like a lot of extra configuration might be good too we had an abstraction",
    "start": "1098289",
    "end": "1103929"
  },
  {
    "text": "to represent these groups of build packs and so that abstraction is the distribution specification which there's",
    "start": "1103929",
    "end": "1110139"
  },
  {
    "text": "an RFC out for right now that should come up in the next version for kind of defining these build modules as groups",
    "start": "1110139",
    "end": "1115960"
  },
  {
    "text": "of build packs so kind of coming from that Python configuration we kind of",
    "start": "1115960",
    "end": "1121570"
  },
  {
    "text": "simplify it into runtime build pack a package managers met a build pack that",
    "start": "1121570",
    "end": "1126669"
  },
  {
    "text": "references those other build packs and a condor build pack is kind of kind of doesn't something and altogether that",
    "start": "1126669",
    "end": "1132129"
  },
  {
    "text": "can be represented by a Python ecosystem build pack and so if you want to you know have your APM agent or security",
    "start": "1132129",
    "end": "1137169"
  },
  {
    "text": "scan or build pack or whatever run around that you just say yep this runs before that you're done and so you know",
    "start": "1137169",
    "end": "1144190"
  },
  {
    "text": "same with node for the configuration you saw before you know J s engine package",
    "start": "1144190",
    "end": "1149529"
  },
  {
    "text": "managers or just the node J s ecosystem build pack you don't have to read this tamil here but to kind of give you a",
    "start": "1149529",
    "end": "1155830"
  },
  {
    "text": "sense of what that looks like underneath each kind of modular build pack can have its own little piece of configuration",
    "start": "1155830",
    "end": "1161109"
  },
  {
    "text": "that says this is my version here's some metadata about my build pack and then you can define these sort of meta build",
    "start": "1161109",
    "end": "1166539"
  },
  {
    "text": "packs on the right-hand side of the diagram or Tamil that kind of define you know",
    "start": "1166539",
    "end": "1173929"
  },
  {
    "text": "build packs that are composed of other bill packs the highlighted one at the bottom is the ecosystem bill back and so",
    "start": "1173929",
    "end": "1181309"
  },
  {
    "text": "I think the the next sort of really significant part of this new distribution specification is kind of",
    "start": "1181309",
    "end": "1187640"
  },
  {
    "text": "the ability to dynamically construct builders automatically and this kind of starts with a file format that's just",
    "start": "1187640",
    "end": "1194750"
  },
  {
    "text": "you know each build pack represented as an individual layer with the constituent build taxes symboliks inside of that",
    "start": "1194750",
    "end": "1201260"
  },
  {
    "text": "layer it's kind of a non runnable OCI image or it can be exported to a dot C and B file but it's just an exported OCI",
    "start": "1201260",
    "end": "1207980"
  },
  {
    "text": "and there's that you can kind of you know transfer places if you don't have a registry available and then you can take",
    "start": "1207980",
    "end": "1213140"
  },
  {
    "text": "this and then put it on top of a stack that all the build packs support to get a builder image and you can do that you",
    "start": "1213140",
    "end": "1218600"
  },
  {
    "text": "can actually do this whole process dynamically on a registry where you just update the registry meditate create a new manifest dynamically on the registry",
    "start": "1218600",
    "end": "1224600"
  },
  {
    "text": "that points to the existing layers so it's just like it's very easy to dynamically generate a builder on the",
    "start": "1224600",
    "end": "1230660"
  },
  {
    "text": "registry that supports the build packs you want to support and this is a way you can support a large platform with many many build packs so users could",
    "start": "1230660",
    "end": "1238640"
  },
  {
    "text": "build kind of whatever stack they want whatever whatever build packs they want but also have predefined configurations",
    "start": "1238640",
    "end": "1244580"
  },
  {
    "text": "that an operator can set up that an operator could also easily generate to you know allow a group of developers to",
    "start": "1244580",
    "end": "1251270"
  },
  {
    "text": "use particular language technologies and so I'm going to turn it to organ transfer the roadmap Thanks",
    "start": "1251270",
    "end": "1258110"
  },
  {
    "text": "so Steven talked about the destruction RFC which is kind of the next big thing",
    "start": "1258110",
    "end": "1264860"
  },
  {
    "text": "that we've been talking a bunch about since our summit two months ago and as he alluded as well with the OPAC",
    "start": "1264860",
    "end": "1270950"
  },
  {
    "text": "registry we have not built that yet but the hope is to have a central place where people can register build packs as",
    "start": "1270950",
    "end": "1277850"
  },
  {
    "text": "well as I think the kind of very attractive thing is the dynamic generation of basic builder images since",
    "start": "1277850",
    "end": "1284660"
  },
  {
    "text": "those all that information will be there and a lot of it will just be quickly just writing that metadata file so we",
    "start": "1284660",
    "end": "1291620"
  },
  {
    "text": "don't have to basically rebuild all these images in addition to that we're looking to basically remove dependencies",
    "start": "1291620",
    "end": "1298429"
  },
  {
    "text": "on things that it takes to run build packs we can support Basie scratch or smaller images for cases where people care about",
    "start": "1298429",
    "end": "1306659"
  },
  {
    "text": "that we want to add support in our specification for Windows containers as",
    "start": "1306659",
    "end": "1312210"
  },
  {
    "text": "well kind the next big thing that kind of adds a lot of more functionality is",
    "start": "1312210",
    "end": "1318480"
  },
  {
    "text": "mixin support and so what we mean by this is kind of a contract for how to extend stack images to support",
    "start": "1318480",
    "end": "1326159"
  },
  {
    "text": "additional packages so right now with bill packs you kinda have to specify what stacks you support",
    "start": "1326159",
    "end": "1332220"
  },
  {
    "text": "so with mix-ins this will allow you to basically add additional packages but still have those bill packs be able to",
    "start": "1332220",
    "end": "1338460"
  },
  {
    "text": "run on kind of different configurations of that stacked image and finally like",
    "start": "1338460",
    "end": "1345750"
  },
  {
    "text": "in-line bill packs this is the concept of being able to like inside of your",
    "start": "1345750",
    "end": "1351049"
  },
  {
    "text": "project or application that is not a bill pack repo but like this is what using to the source while you're running",
    "start": "1351049",
    "end": "1358230"
  },
  {
    "text": "your bill packs against to actually be able to specify inline bill packs so if you have like something smaller or a",
    "start": "1358230",
    "end": "1364890"
  },
  {
    "text": "piece of thing that's only specific to your particular project you can have a",
    "start": "1364890",
    "end": "1370320"
  },
  {
    "text": "bill path that just lives as part of that source code as part of your build pipeline and then potentially if it",
    "start": "1370320",
    "end": "1375720"
  },
  {
    "text": "grows and you start using it you can extract it but not having to basically I think one of the limitations stay of the",
    "start": "1375720",
    "end": "1381450"
  },
  {
    "text": "current non cloud native Bill pack ecosystem is that it's kind of a pain to want to extend that system because you",
    "start": "1381450",
    "end": "1387299"
  },
  {
    "text": "have to create a whole new repo with all this other stuff so good support around inline bill packs and kind of minimizing",
    "start": "1387299",
    "end": "1393720"
  },
  {
    "text": "the amount of files and things you actually need to write to make that happen we have a bunch of other stuff in",
    "start": "1393720",
    "end": "1399059"
  },
  {
    "text": "the roadmap but these are kind of the high level things I thought was worth talking about and so in dishes that",
    "start": "1399059",
    "end": "1405899"
  },
  {
    "text": "we've been working with various projects and providers for basically integrating",
    "start": "1405899",
    "end": "1411120"
  },
  {
    "text": "bill packs with their systems obviously Steve and I have worked at cloud for having Heroku so working on platform",
    "start": "1411120",
    "end": "1417809"
  },
  {
    "text": "integrations there we have the template that we talked about 4k native Tecton riff is a functions as a service on top",
    "start": "1417809",
    "end": "1427710"
  },
  {
    "text": "of K native and they basically are built on top of bill packs for kind of",
    "start": "1427710",
    "end": "1433310"
  },
  {
    "text": "constructing images and so they use the C and B v3 like the bill pack v3 Cloud",
    "start": "1433310",
    "end": "1440510"
  },
  {
    "text": "Foundry bill packs as well as they have their own set of basically function bill packs that allows them to not have to",
    "start": "1440510",
    "end": "1447290"
  },
  {
    "text": "duplicate that functionality that I write exist as part of the Cloud Foundry bill packs but then extend it by turning",
    "start": "1447290",
    "end": "1452960"
  },
  {
    "text": "those things into basically faz images that they could run inside riff Doku is a project that basically allows",
    "start": "1452960",
    "end": "1460190"
  },
  {
    "text": "you to have a pass in a single machine more or less and so they may have a work",
    "start": "1460190",
    "end": "1466340"
  },
  {
    "text": "wish docker image but they were at the GOPAC summit a two months ago and so we're talking to them about what it",
    "start": "1466340",
    "end": "1472550"
  },
  {
    "text": "would look like to basically move from the current v2 a bill pack support they have to a the v3 continent build pack",
    "start": "1472550",
    "end": "1479390"
  },
  {
    "text": "model draft was also represented at the summit that we had and potentially",
    "start": "1479390",
    "end": "1485810"
  },
  {
    "text": "talking about bill paxton how they think stand the current template support that they're doing with docker files and",
    "start": "1485810",
    "end": "1492280"
  },
  {
    "text": "maybe some of you in the room are also involved with various open source projects or things in your company",
    "start": "1492280",
    "end": "1497540"
  },
  {
    "text": "whether that's a public product or an internal thing but we'd be happy to talk",
    "start": "1497540",
    "end": "1502940"
  },
  {
    "text": "to you about how you can integrate bill packs with your platform so either come",
    "start": "1502940",
    "end": "1509180"
  },
  {
    "text": "talk to us after the talk or we have a slack that you can join where that's where we actually coordinate and talk",
    "start": "1509180",
    "end": "1516200"
  },
  {
    "text": "about things across our various companies and then we also have a mailing lists that's provided by this CNC F and so if you haven't checked it",
    "start": "1516200",
    "end": "1525080"
  },
  {
    "text": "out definitely the easiest way like I've said before is to use the pax Eli which if you go to github.com slash gill-pack",
    "start": "1525080",
    "end": "1532160"
  },
  {
    "text": "slash pack under releases you just go download it or if you're on a Mac and I think brew install it if you had support",
    "start": "1532160",
    "end": "1538070"
  },
  {
    "text": "for that so you'll have access to the Builder images and pill packs that we've talked about through this talk to",
    "start": "1538070",
    "end": "1543650"
  },
  {
    "text": "actually kind of bootstrap and see what that looks like so you're not starting from nothing and then all that stuff is",
    "start": "1543650",
    "end": "1549110"
  },
  {
    "text": "based on top of ionic today so with that I will open it up for questions anything",
    "start": "1549110",
    "end": "1556100"
  },
  {
    "text": "was confusing today there was two kind of in-depth watch the intro talk to it should be on YouTube after the",
    "start": "1556100",
    "end": "1563380"
  },
  {
    "text": "cool any questions",
    "start": "1563600",
    "end": "1567169"
  },
  {
    "text": "what the silence permeate for a few minutes here we go back there",
    "start": "1577370",
    "end": "1582100"
  },
  {
    "text": "yeah so we dynamically construct your our review question oh yeah sorry to repeat the question you know how do we",
    "start": "1597509",
    "end": "1604299"
  },
  {
    "text": "construct layers with for instance like how do we construct the layer that has the Ruby runtime and in it and you know",
    "start": "1604299",
    "end": "1610509"
  },
  {
    "text": "to build that with CI image and so part of the you know kind of an really interesting part of a project is that we",
    "start": "1610509",
    "end": "1616330"
  },
  {
    "text": "are kind of creating OCI images using kind of our own tooling and a Google",
    "start": "1616330",
    "end": "1621460"
  },
  {
    "text": "library called go container registry so we can generate OCI images directly on a",
    "start": "1621460",
    "end": "1626529"
  },
  {
    "text": "registry without a doctor daemon without you know any capabilities or privileges",
    "start": "1626529",
    "end": "1631570"
  },
  {
    "text": "needed without anything like builder or Conoco just by constructing layers manually and you know as you know TG",
    "start": "1631570",
    "end": "1639129"
  },
  {
    "text": "sees which are distressed with layers are and exporting them out to the registry or to the local doctor daemon if you want to kind of use a docker",
    "start": "1639129",
    "end": "1645460"
  },
  {
    "text": "Damon with it and so so the Ruby build pack would generate that layer in a",
    "start": "1645460",
    "end": "1651249"
  },
  {
    "text": "directory kind of like in an easy way without the full pads and then it would the kind of build pack lifecycle takes",
    "start": "1651249",
    "end": "1657940"
  },
  {
    "text": "care of wrapping it up into a layer and sending it off so you don't have to implement the talking to the register yourself if you're in building a build",
    "start": "1657940",
    "end": "1663669"
  },
  {
    "text": "pack that makes sense",
    "start": "1663669",
    "end": "1667258"
  },
  {
    "text": "yeah so the Cloud Foundry bill PACs support fully offline builds by",
    "start": "1684650",
    "end": "1690690"
  },
  {
    "text": "including like we have kind of two versions of each bill pack one that's packaged to include all of its like to",
    "start": "1690690",
    "end": "1696720"
  },
  {
    "text": "the last patch versions of all the supported lines of every dependency they're like a gigabyte each maybe so",
    "start": "1696720",
    "end": "1703170"
  },
  {
    "text": "you can build completely offline and unprivileged containers and all that stuff in a you know isolated environment with all the security stuff you want the",
    "start": "1703170",
    "end": "1710340"
  },
  {
    "text": "Heroku build pack support a lot more versions of things but they download them from kind of known as three buckets",
    "start": "1710340",
    "end": "1715770"
  },
  {
    "text": "that are provided by Heroku correct me if I'm wrong yeah I mean we have the",
    "start": "1715770",
    "end": "1720810"
  },
  {
    "text": "only thing we really have been they're like the binaries like the actual Ruby runtimes we build as well as like both",
    "start": "1720810",
    "end": "1728040"
  },
  {
    "text": "bundler and other things that are kind of dependent on it when you're actually doing bundle install the fetch libraries",
    "start": "1728040",
    "end": "1733650"
  },
  {
    "text": "we hit literally what the gem file tells us to hit so most of times that's gonna",
    "start": "1733650",
    "end": "1739380"
  },
  {
    "text": "be Ruby gems but I mean if you had a private server that you had like in our private spaces product for instance if",
    "start": "1739380",
    "end": "1745590"
  },
  {
    "text": "you had a thing that you could just want to hit that thing you could specify that inner jump I'll build pet could also",
    "start": "1745590",
    "end": "1752460"
  },
  {
    "text": "build everything from source during the build process if I really wanted to but because of that sort of approved stack model we have you don't have to and your",
    "start": "1752460",
    "end": "1758520"
  },
  {
    "text": "builds can be much faster you don't have to worry about building everything you know during the build process for each a",
    "start": "1758520",
    "end": "1763880"
  },
  {
    "text": "cool awesome question",
    "start": "1763880",
    "end": "1767930"
  },
  {
    "text": "so the question is how easy is it to swap out the operating system layers I think they're it's like do you mean like",
    "start": "1776780",
    "end": "1784170"
  },
  {
    "text": "swap out go into with Santos or like swap atubu into with a new ABI compatible security patch version of",
    "start": "1784170",
    "end": "1790380"
  },
  {
    "text": "good you got it so the the specification and the tooling doesn't have a",
    "start": "1790380",
    "end": "1795450"
  },
  {
    "text": "preference of one two or Sun toss or whatever but the build packs individually support operating system",
    "start": "1795450",
    "end": "1801660"
  },
  {
    "text": "layers because the binaries are built on top of those operating system layers so in the case of pro goon Cloud Foundry we",
    "start": "1801660",
    "end": "1807000"
  },
  {
    "text": "do but you Bionic and xenial I think yeah we do buy on video yeah and so so",
    "start": "1807000",
    "end": "1814560"
  },
  {
    "text": "right now if you're using these particular build packs then you know you're you use Ubuntu but if you make",
    "start": "1814560",
    "end": "1820080"
  },
  {
    "text": "your own on top of sent us that you were create the contract is defined agnostic of all that stuff that make sense yeah",
    "start": "1820080",
    "end": "1826080"
  },
  {
    "text": "and then and then when we're talking about support for scratch images it's mostly there's some stuff that is",
    "start": "1826080",
    "end": "1831630"
  },
  {
    "text": "dependent on like with the profile D and other things as part of the specification that kind of requires a",
    "start": "1831630",
    "end": "1837240"
  },
  {
    "text": "POSIX tile environment but yeah I mean there's nothing hard-coded that forces",
    "start": "1837240",
    "end": "1843000"
  },
  {
    "text": "you to use a particular flavor of Linux or anything that is really entirely up to the fill packs that are written",
    "start": "1843000",
    "end": "1849210"
  },
  {
    "text": "against them right so like the for global packs we just build them in the context that we assume that stuff is on",
    "start": "1849210",
    "end": "1854550"
  },
  {
    "text": "the stack image the pill pack author has access to those binaries your tools but I mean you could easily write to build",
    "start": "1854550",
    "end": "1861420"
  },
  {
    "text": "packs that are limited to or extended with whatever you need there we even one",
    "start": "1861420",
    "end": "1869340"
  },
  {
    "text": "dependency away in the spec from supporting scratch images also so you can have no operating system layers if",
    "start": "1869340",
    "end": "1875460"
  },
  {
    "text": "you want to hopefully in the next version - any other questions",
    "start": "1875460",
    "end": "1884210"
  },
  {
    "text": "it's not at the time okay",
    "start": "1884500",
    "end": "1890200"
  },
  {
    "text": "yeah so mix-ins are a contract for defining kind of base images that have",
    "start": "1892120",
    "end": "1897440"
  },
  {
    "text": "more stuff than the build pack kind of intends to know about so that you can say like I have my you know CF official",
    "start": "1897440",
    "end": "1906350"
  },
  {
    "text": "Bionic stack that has a few dependencies on it but for my application I'm gonna create a version that has these extra",
    "start": "1906350",
    "end": "1912200"
  },
  {
    "text": "image processing related packages and it'll still work with the CF build packs and that's kind of the first step",
    "start": "1912200",
    "end": "1917440"
  },
  {
    "text": "eventually we'd like to do sort of more automated support for you know my app means these OS packages just make sure",
    "start": "1917440",
    "end": "1922549"
  },
  {
    "text": "they're there but you know it's because we're trying to preserve this sort of ABI compatibility contract between the",
    "start": "1922549",
    "end": "1928460"
  },
  {
    "text": "application layers and the operating system layers so you can swap the operating system out without rebuilding it the you know that makes it adds",
    "start": "1928460",
    "end": "1936860"
  },
  {
    "text": "challenges to adding those operating system packages because they have to come in with those stack layers initially there's no you know good",
    "start": "1936860",
    "end": "1942320"
  },
  {
    "text": "contract for installing them it's a",
    "start": "1942320",
    "end": "1951590"
  },
  {
    "text": "great question we don't think because operating system packages can run arbitrary code when they get installed",
    "start": "1951590",
    "end": "1956809"
  },
  {
    "text": "in many cases you know we've been through a lot of iterations of is it possible to layer eyes all the packages",
    "start": "1956809",
    "end": "1962870"
  },
  {
    "text": "you know be able to install them but we don't think you can do it safely you know that we can come up with some bad",
    "start": "1962870",
    "end": "1968900"
  },
  {
    "text": "security scenarios where you install this packages in the wrong order and you're missing a user or you know user",
    "start": "1968900",
    "end": "1974390"
  },
  {
    "text": "doesn't have a password or something so you know currently plan is you'll be",
    "start": "1974390",
    "end": "1981320"
  },
  {
    "text": "able to extend a stack and in general you'll have to use a docker file to install additional packages or other tooling to extend the image with",
    "start": "1981320",
    "end": "1987410"
  },
  {
    "text": "additional packages using the package manager that makes sense",
    "start": "1987410",
    "end": "1995140"
  },
  {
    "text": "any other questions",
    "start": "1999330",
    "end": "2002809"
  },
  {
    "text": "all right thanks everybody yeah thank you [Applause]",
    "start": "2007340",
    "end": "2013989"
  }
]