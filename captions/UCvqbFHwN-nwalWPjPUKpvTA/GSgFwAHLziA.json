[
  {
    "text": "hi everyone my name is ivan sim",
    "start": "1520",
    "end": "4240"
  },
  {
    "text": "i'm an open source software engineer at",
    "start": "4240",
    "end": "6000"
  },
  {
    "text": "casten",
    "start": "6000",
    "end": "7120"
  },
  {
    "text": "today i'd like to share with you an open",
    "start": "7120",
    "end": "8960"
  },
  {
    "text": "source project by casting canister",
    "start": "8960",
    "end": "11920"
  },
  {
    "text": "canister is a software that you can",
    "start": "11920",
    "end": "13599"
  },
  {
    "text": "install on your kubernetes clusters",
    "start": "13599",
    "end": "15839"
  },
  {
    "text": "and use it to protect data persisted by",
    "start": "15839",
    "end": "19039"
  },
  {
    "text": "your stateful applications",
    "start": "19039",
    "end": "22320"
  },
  {
    "text": "we're going to start off with an",
    "start": "22560",
    "end": "24320"
  },
  {
    "text": "introduction into what is data",
    "start": "24320",
    "end": "26080"
  },
  {
    "text": "protection",
    "start": "26080",
    "end": "27760"
  },
  {
    "text": "then we're going to take a look at",
    "start": "27760",
    "end": "29119"
  },
  {
    "text": "canister and what canister can do for",
    "start": "29119",
    "end": "31279"
  },
  {
    "text": "you",
    "start": "31279",
    "end": "32558"
  },
  {
    "text": "then we're going to dive straight into",
    "start": "32559",
    "end": "34320"
  },
  {
    "text": "demo",
    "start": "34320",
    "end": "35760"
  },
  {
    "text": "and after the demo i will be sharing",
    "start": "35760",
    "end": "37840"
  },
  {
    "text": "some project opportunities that some of",
    "start": "37840",
    "end": "39840"
  },
  {
    "text": "you might find interesting and relevant",
    "start": "39840",
    "end": "43520"
  },
  {
    "text": "some of you may be familiar with the",
    "start": "43760",
    "end": "45680"
  },
  {
    "text": "data protection working group",
    "start": "45680",
    "end": "48160"
  },
  {
    "text": "networking group is part of the",
    "start": "48160",
    "end": "49440"
  },
  {
    "text": "kubernetes m6 storage",
    "start": "49440",
    "end": "52000"
  },
  {
    "text": "last year the group published a white",
    "start": "52000",
    "end": "53600"
  },
  {
    "text": "paper on data protection workflow",
    "start": "53600",
    "end": "56320"
  },
  {
    "text": "in the paper the group defines data",
    "start": "56320",
    "end": "58960"
  },
  {
    "text": "protection workflow as a process to",
    "start": "58960",
    "end": "61120"
  },
  {
    "text": "protect valuable data and configuration",
    "start": "61120",
    "end": "64000"
  },
  {
    "text": "of stateful applications running on",
    "start": "64000",
    "end": "65680"
  },
  {
    "text": "kubernetes",
    "start": "65680",
    "end": "67920"
  },
  {
    "text": "now the result of the workflow is",
    "start": "67920",
    "end": "70720"
  },
  {
    "text": "typically something called a backup",
    "start": "70720",
    "end": "73760"
  },
  {
    "text": "a backup is an artifact that you can use",
    "start": "73760",
    "end": "76799"
  },
  {
    "text": "to restore your stateful applications",
    "start": "76799",
    "end": "79360"
  },
  {
    "text": "back to the state or the checkpoint",
    "start": "79360",
    "end": "81680"
  },
  {
    "text": "defined by the backup",
    "start": "81680",
    "end": "84560"
  },
  {
    "text": "the paper goes into more details with",
    "start": "84560",
    "end": "86640"
  },
  {
    "text": "examples on why",
    "start": "86640",
    "end": "88479"
  },
  {
    "text": "data protection is important and",
    "start": "88479",
    "end": "90159"
  },
  {
    "text": "necessary for kubernetes",
    "start": "90159",
    "end": "93280"
  },
  {
    "text": "so if data protection is something that",
    "start": "93280",
    "end": "94880"
  },
  {
    "text": "you think about a lot i encourage you to",
    "start": "94880",
    "end": "98000"
  },
  {
    "text": "take a look at the white paper",
    "start": "98000",
    "end": "101680"
  },
  {
    "text": "so i talked about data protection today",
    "start": "101680",
    "end": "103439"
  },
  {
    "text": "why bother in 2021",
    "start": "103439",
    "end": "106159"
  },
  {
    "text": "cncf survey reported that 64.69",
    "start": "106159",
    "end": "110399"
  },
  {
    "text": "of the respondents said that they are",
    "start": "110399",
    "end": "112840"
  },
  {
    "text": "currently running stateful applications",
    "start": "112840",
    "end": "115600"
  },
  {
    "text": "in containers in production kubernetes",
    "start": "115600",
    "end": "118960"
  },
  {
    "text": "considering the number of organizations",
    "start": "118960",
    "end": "120799"
  },
  {
    "text": "running kubernetes in production today",
    "start": "120799",
    "end": "123200"
  },
  {
    "text": "this is not a small number",
    "start": "123200",
    "end": "125439"
  },
  {
    "text": "now if you're part of the 64.69",
    "start": "125439",
    "end": "128560"
  },
  {
    "text": "you may have noticed that the data",
    "start": "128560",
    "end": "130319"
  },
  {
    "text": "protection architecture",
    "start": "130319",
    "end": "132160"
  },
  {
    "text": "specifically toolings and solutions",
    "start": "132160",
    "end": "134239"
  },
  {
    "text": "around backing and restoring data",
    "start": "134239",
    "end": "137040"
  },
  {
    "text": "hasn't been keeping in place with the",
    "start": "137040",
    "end": "138720"
  },
  {
    "text": "rest of the cloud native ecosystem",
    "start": "138720",
    "end": "141680"
  },
  {
    "text": "and we want to change that",
    "start": "141680",
    "end": "144239"
  },
  {
    "text": "the third reason why we want to talk",
    "start": "144239",
    "end": "146080"
  },
  {
    "text": "about data protection today is as we all",
    "start": "146080",
    "end": "148959"
  },
  {
    "text": "know kubernetes provide a set of common",
    "start": "148959",
    "end": "151200"
  },
  {
    "text": "apis",
    "start": "151200",
    "end": "152480"
  },
  {
    "text": "for development operation and security",
    "start": "152480",
    "end": "155120"
  },
  {
    "text": "teams to manage resources and enforce",
    "start": "155120",
    "end": "157760"
  },
  {
    "text": "policy efficiently",
    "start": "157760",
    "end": "159760"
  },
  {
    "text": "we believe that their protection tools",
    "start": "159760",
    "end": "162239"
  },
  {
    "text": "and solutions shouldn't be managed",
    "start": "162239",
    "end": "164560"
  },
  {
    "text": "differently they should all be part of",
    "start": "164560",
    "end": "166640"
  },
  {
    "text": "the cloud-native ecosystem",
    "start": "166640",
    "end": "170280"
  },
  {
    "text": "we have chances to talk to many of our",
    "start": "171360",
    "end": "173040"
  },
  {
    "text": "users to try to understand their pain",
    "start": "173040",
    "end": "176160"
  },
  {
    "text": "points around snapchatting and backing",
    "start": "176160",
    "end": "178720"
  },
  {
    "text": "up data",
    "start": "178720",
    "end": "180480"
  },
  {
    "text": "the one theme that always comes back",
    "start": "180480",
    "end": "182800"
  },
  {
    "text": "revolves around the different",
    "start": "182800",
    "end": "184400"
  },
  {
    "text": "requirements the different flavors and",
    "start": "184400",
    "end": "186720"
  },
  {
    "text": "the different varieties of strategies",
    "start": "186720",
    "end": "188879"
  },
  {
    "text": "and mechanisms to capture snapshots",
    "start": "188879",
    "end": "191440"
  },
  {
    "text": "backups and data dumps",
    "start": "191440",
    "end": "194239"
  },
  {
    "text": "for example if you have someone who",
    "start": "194239",
    "end": "195519"
  },
  {
    "text": "works closely with cloud provider api",
    "start": "195519",
    "end": "198159"
  },
  {
    "text": "you may already have scripts that",
    "start": "198159",
    "end": "201360"
  },
  {
    "text": "capture snapshots of your virtual",
    "start": "201360",
    "end": "204400"
  },
  {
    "text": "volumes",
    "start": "204400",
    "end": "205920"
  },
  {
    "text": "that's great but snapshots captured at",
    "start": "205920",
    "end": "208239"
  },
  {
    "text": "that volumes offers only",
    "start": "208239",
    "end": "211200"
  },
  {
    "text": "crash consistent",
    "start": "211200",
    "end": "212799"
  },
  {
    "text": "backup",
    "start": "212799",
    "end": "214640"
  },
  {
    "text": "in other words only data that has been",
    "start": "214640",
    "end": "216640"
  },
  {
    "text": "returned to",
    "start": "216640",
    "end": "218319"
  },
  {
    "text": "this",
    "start": "218319",
    "end": "219200"
  },
  {
    "text": "is included in the snapshot in memory",
    "start": "219200",
    "end": "221599"
  },
  {
    "text": "data pending transactions they are not",
    "start": "221599",
    "end": "224560"
  },
  {
    "text": "included as part of the snapshot",
    "start": "224560",
    "end": "227840"
  },
  {
    "text": "if you are someone who works closely",
    "start": "227840",
    "end": "229440"
  },
  {
    "text": "with data services and databases you may",
    "start": "229440",
    "end": "232239"
  },
  {
    "text": "already have custom pre and post some",
    "start": "232239",
    "end": "235200"
  },
  {
    "text": "hooks",
    "start": "235200",
    "end": "236319"
  },
  {
    "text": "that are run prior to the snapshot",
    "start": "236319",
    "end": "238799"
  },
  {
    "text": "operation",
    "start": "238799",
    "end": "241040"
  },
  {
    "text": "going further down the stack you might",
    "start": "241040",
    "end": "242640"
  },
  {
    "text": "depends on specific",
    "start": "242640",
    "end": "245040"
  },
  {
    "text": "database utility tools such as mysql dom",
    "start": "245040",
    "end": "248239"
  },
  {
    "text": "or pg dom or monkey dumb",
    "start": "248239",
    "end": "250319"
  },
  {
    "text": "to capture data dump off your databases",
    "start": "250319",
    "end": "254560"
  },
  {
    "text": "and all of these tools require direct",
    "start": "254560",
    "end": "256720"
  },
  {
    "text": "access into the container",
    "start": "256720",
    "end": "258880"
  },
  {
    "text": "where the database processes around",
    "start": "258880",
    "end": "262400"
  },
  {
    "text": "what about the application as a whole",
    "start": "262400",
    "end": "264639"
  },
  {
    "text": "the configurations and the secrets that",
    "start": "264639",
    "end": "266639"
  },
  {
    "text": "your micro services may depend on that",
    "start": "266639",
    "end": "269040"
  },
  {
    "text": "are not part of your databases",
    "start": "269040",
    "end": "272560"
  },
  {
    "text": "so overall",
    "start": "272560",
    "end": "274080"
  },
  {
    "text": "there are way too many",
    "start": "274080",
    "end": "275680"
  },
  {
    "text": "options and way too many moving parts",
    "start": "275680",
    "end": "278479"
  },
  {
    "text": "now if you imagine yourself being the",
    "start": "278479",
    "end": "280080"
  },
  {
    "text": "baristas it's like trying to have to",
    "start": "280080",
    "end": "282479"
  },
  {
    "text": "manage and remember all these different",
    "start": "282479",
    "end": "284800"
  },
  {
    "text": "recipes and ingredients that you are",
    "start": "284800",
    "end": "287680"
  },
  {
    "text": "required to put together the different",
    "start": "287680",
    "end": "290240"
  },
  {
    "text": "coffee types that your customers may ask",
    "start": "290240",
    "end": "292800"
  },
  {
    "text": "of you",
    "start": "292800",
    "end": "295960"
  },
  {
    "text": "this is where we hope canister can fit",
    "start": "296080",
    "end": "298400"
  },
  {
    "text": "in we are hoping that canister",
    "start": "298400",
    "end": "300800"
  },
  {
    "text": "be can bring some order and coherence",
    "start": "300800",
    "end": "304320"
  },
  {
    "text": "into your data protection strategy",
    "start": "304320",
    "end": "308160"
  },
  {
    "text": "cancer is an open source project by",
    "start": "308160",
    "end": "310400"
  },
  {
    "text": "casting as i mentioned earlier it is",
    "start": "310400",
    "end": "312880"
  },
  {
    "text": "implemented as a kubernetes controller",
    "start": "312880",
    "end": "315840"
  },
  {
    "text": "it exposes a set of cohesive apis in the",
    "start": "315840",
    "end": "318880"
  },
  {
    "text": "form of custom resource definitions",
    "start": "318880",
    "end": "321919"
  },
  {
    "text": "and users use this api to define and",
    "start": "321919",
    "end": "325120"
  },
  {
    "text": "curate data protection workflows",
    "start": "325120",
    "end": "328080"
  },
  {
    "text": "canister is also extensible",
    "start": "328080",
    "end": "330560"
  },
  {
    "text": "we have community members who have been",
    "start": "330560",
    "end": "332560"
  },
  {
    "text": "publishing and sharing",
    "start": "332560",
    "end": "334240"
  },
  {
    "text": "the blueprints of all their data sources",
    "start": "334240",
    "end": "337680"
  },
  {
    "text": "as well as extending chemistry with",
    "start": "337680",
    "end": "340000"
  },
  {
    "text": "custom canister functions",
    "start": "340000",
    "end": "342160"
  },
  {
    "text": "so terminologies like blueprints and",
    "start": "342160",
    "end": "344639"
  },
  {
    "text": "canister functions they will become",
    "start": "344639",
    "end": "346320"
  },
  {
    "text": "clearer",
    "start": "346320",
    "end": "347360"
  },
  {
    "text": "during the demo",
    "start": "347360",
    "end": "350159"
  },
  {
    "text": "cancer exposed three main apis at the",
    "start": "350320",
    "end": "353199"
  },
  {
    "text": "highest level we have blueprint",
    "start": "353199",
    "end": "355759"
  },
  {
    "text": "blueprint is a template of collection of",
    "start": "355759",
    "end": "358400"
  },
  {
    "text": "instructions",
    "start": "358400",
    "end": "359840"
  },
  {
    "text": "it tells the controller of canister how",
    "start": "359840",
    "end": "363039"
  },
  {
    "text": "to perform specific actions on specific",
    "start": "363039",
    "end": "366639"
  },
  {
    "text": "application",
    "start": "366639",
    "end": "368080"
  },
  {
    "text": "for example i can have a blueprint that",
    "start": "368080",
    "end": "370960"
  },
  {
    "text": "contains and defines backup and restore",
    "start": "370960",
    "end": "373840"
  },
  {
    "text": "actions for my postgresql",
    "start": "373840",
    "end": "376240"
  },
  {
    "text": "i can have another blueprint for my",
    "start": "376240",
    "end": "378400"
  },
  {
    "text": "mongodb another blueprint for my",
    "start": "378400",
    "end": "380800"
  },
  {
    "text": "cassandra services",
    "start": "380800",
    "end": "384478"
  },
  {
    "text": "the second api is action set we can all",
    "start": "384720",
    "end": "387600"
  },
  {
    "text": "think of action set as this runtime",
    "start": "387600",
    "end": "390319"
  },
  {
    "text": "trigger",
    "start": "390319",
    "end": "391280"
  },
  {
    "text": "execution point or entry point that",
    "start": "391280",
    "end": "394080"
  },
  {
    "text": "tells chemistry",
    "start": "394080",
    "end": "395440"
  },
  {
    "text": "to go find a specific blueprint and",
    "start": "395440",
    "end": "398080"
  },
  {
    "text": "execute a specific action within the",
    "start": "398080",
    "end": "400160"
  },
  {
    "text": "blueprint",
    "start": "400160",
    "end": "401280"
  },
  {
    "text": "and supplying the function with a set of",
    "start": "401280",
    "end": "403520"
  },
  {
    "text": "input parameters",
    "start": "403520",
    "end": "406400"
  },
  {
    "text": "the last api is profile profile",
    "start": "406400",
    "end": "409199"
  },
  {
    "text": "abstracts away the details around",
    "start": "409199",
    "end": "411599"
  },
  {
    "text": "interacting with remote repository",
    "start": "411599",
    "end": "414960"
  },
  {
    "text": "specifically used to store backup",
    "start": "414960",
    "end": "416880"
  },
  {
    "text": "artifacts",
    "start": "416880",
    "end": "418400"
  },
  {
    "text": "some of you may be familiar with the 321",
    "start": "418400",
    "end": "420720"
  },
  {
    "text": "data backup rules",
    "start": "420720",
    "end": "422720"
  },
  {
    "text": "where one of the rules says that",
    "start": "422720",
    "end": "424720"
  },
  {
    "text": "at least one copy of your backup should",
    "start": "424720",
    "end": "427120"
  },
  {
    "text": "be exported to a remote location",
    "start": "427120",
    "end": "429919"
  },
  {
    "text": "profile abstracts away the details of",
    "start": "429919",
    "end": "433039"
  },
  {
    "text": "working with those remote repositories",
    "start": "433039",
    "end": "437319"
  },
  {
    "text": "so let's go straight into the demo",
    "start": "437360",
    "end": "439919"
  },
  {
    "text": "we will be using an eks cluster",
    "start": "439919",
    "end": "442720"
  },
  {
    "text": "i have pre-installed a postgres",
    "start": "442720",
    "end": "445199"
  },
  {
    "text": "database on the cluster",
    "start": "445199",
    "end": "448080"
  },
  {
    "text": "and the pod has a pvc and a pv attached",
    "start": "448080",
    "end": "451360"
  },
  {
    "text": "to it and it's backed by an actual ebs",
    "start": "451360",
    "end": "454080"
  },
  {
    "text": "volume",
    "start": "454080",
    "end": "455440"
  },
  {
    "text": "on the right side of this diagram you",
    "start": "455440",
    "end": "457520"
  },
  {
    "text": "see that during the demo i'll be using",
    "start": "457520",
    "end": "459520"
  },
  {
    "text": "canister to manage the csi volume",
    "start": "459520",
    "end": "461840"
  },
  {
    "text": "snapshot and volume stationary content",
    "start": "461840",
    "end": "464160"
  },
  {
    "text": "resources",
    "start": "464160",
    "end": "465680"
  },
  {
    "text": "to",
    "start": "465680",
    "end": "466720"
  },
  {
    "text": "create and manage the actual ebs",
    "start": "466720",
    "end": "469599"
  },
  {
    "text": "snapshots",
    "start": "469599",
    "end": "472240"
  },
  {
    "text": "the flow of the demo is pretty simple",
    "start": "472319",
    "end": "474240"
  },
  {
    "text": "we're going to start off with",
    "start": "474240",
    "end": "476080"
  },
  {
    "text": "using a tool called cubester",
    "start": "476080",
    "end": "478400"
  },
  {
    "text": "to discover and verify our volume",
    "start": "478400",
    "end": "480560"
  },
  {
    "text": "provisioners and the different csi",
    "start": "480560",
    "end": "483039"
  },
  {
    "text": "storage solutions on our cluster",
    "start": "483039",
    "end": "486319"
  },
  {
    "text": "then we're going to go ahead and deploy",
    "start": "486319",
    "end": "488080"
  },
  {
    "text": "our postgres blueprint",
    "start": "488080",
    "end": "490400"
  },
  {
    "text": "and from there we'll dive into specific",
    "start": "490400",
    "end": "492800"
  },
  {
    "text": "individual actions",
    "start": "492800",
    "end": "494879"
  },
  {
    "text": "that first of all creates a volume",
    "start": "494879",
    "end": "497199"
  },
  {
    "text": "snapshot",
    "start": "497199",
    "end": "498319"
  },
  {
    "text": "for my postgres database",
    "start": "498319",
    "end": "500479"
  },
  {
    "text": "and then invoke the ebs api to list all",
    "start": "500479",
    "end": "503599"
  },
  {
    "text": "the snapshots",
    "start": "503599",
    "end": "505599"
  },
  {
    "text": "then finally to restore",
    "start": "505599",
    "end": "508639"
  },
  {
    "text": "the",
    "start": "508639",
    "end": "509360"
  },
  {
    "text": "volume snapshot to a new pvc",
    "start": "509360",
    "end": "513360"
  },
  {
    "text": "so let's switch over to my terminal",
    "start": "516479",
    "end": "521320"
  },
  {
    "text": "so in this demo i'll be using a script",
    "start": "521839",
    "end": "523760"
  },
  {
    "text": "to automate the typing",
    "start": "523760",
    "end": "526399"
  },
  {
    "text": "otherwise we are targeting a real",
    "start": "526399",
    "end": "529360"
  },
  {
    "text": "live eks cluster",
    "start": "529360",
    "end": "532240"
  },
  {
    "text": "so the first command i want to run is to",
    "start": "532240",
    "end": "534000"
  },
  {
    "text": "use cube cuddle to confirm that i am",
    "start": "534000",
    "end": "536560"
  },
  {
    "text": "indeed working with the right",
    "start": "536560",
    "end": "538399"
  },
  {
    "text": "eks cluster",
    "start": "538399",
    "end": "540160"
  },
  {
    "text": "so great",
    "start": "540160",
    "end": "541360"
  },
  {
    "text": "so now we're going to use cubester",
    "start": "541360",
    "end": "544080"
  },
  {
    "text": "to discover and verify the volume",
    "start": "544080",
    "end": "546000"
  },
  {
    "text": "provisions and the csi solutions on our",
    "start": "546000",
    "end": "548720"
  },
  {
    "text": "clusters",
    "start": "548720",
    "end": "550240"
  },
  {
    "text": "keepster is another open source project",
    "start": "550240",
    "end": "552160"
  },
  {
    "text": "by casting",
    "start": "552160",
    "end": "554160"
  },
  {
    "text": "and as some of you know kubernetes come",
    "start": "554160",
    "end": "556320"
  },
  {
    "text": "with a collection of entry volume",
    "start": "556320",
    "end": "558480"
  },
  {
    "text": "provisioner",
    "start": "558480",
    "end": "560800"
  },
  {
    "text": "in parallel there's also a collection of",
    "start": "560800",
    "end": "563440"
  },
  {
    "text": "out of three csr driver",
    "start": "563440",
    "end": "566000"
  },
  {
    "text": "so cubester was able to discover that",
    "start": "566000",
    "end": "569360"
  },
  {
    "text": "my cluster has an ebscsi driver",
    "start": "569360",
    "end": "572240"
  },
  {
    "text": "installed",
    "start": "572240",
    "end": "573760"
  },
  {
    "text": "it also provides some helpful commands",
    "start": "573760",
    "end": "576000"
  },
  {
    "text": "to allow me to run subsequent checks to",
    "start": "576000",
    "end": "578800"
  },
  {
    "text": "confirm that my csi driver is indeed",
    "start": "578800",
    "end": "581600"
  },
  {
    "text": "healthy and working correctly",
    "start": "581600",
    "end": "583760"
  },
  {
    "text": "keeps to also discovers that there is an",
    "start": "583760",
    "end": "586320"
  },
  {
    "text": "entry ebs",
    "start": "586320",
    "end": "588399"
  },
  {
    "text": "volume provision it comes",
    "start": "588399",
    "end": "591040"
  },
  {
    "text": "with um with my kubernetes cluster",
    "start": "591040",
    "end": "594959"
  },
  {
    "text": "so for the rest of this demo",
    "start": "594959",
    "end": "597279"
  },
  {
    "text": "we will be using",
    "start": "597279",
    "end": "598800"
  },
  {
    "text": "the ebs csi driver",
    "start": "598800",
    "end": "601600"
  },
  {
    "text": "to create volume snapshot and to restore",
    "start": "601600",
    "end": "604320"
  },
  {
    "text": "the data",
    "start": "604320",
    "end": "606720"
  },
  {
    "text": "as i mentioned earlier i have a postgres",
    "start": "606720",
    "end": "608640"
  },
  {
    "text": "database installed",
    "start": "608640",
    "end": "610160"
  },
  {
    "text": "so let's make sure it is up and running",
    "start": "610160",
    "end": "613519"
  },
  {
    "text": "this postgres database is also preceded",
    "start": "613519",
    "end": "616320"
  },
  {
    "text": "with some test data and this is the data",
    "start": "616320",
    "end": "618880"
  },
  {
    "text": "that we will be snapshotting and",
    "start": "618880",
    "end": "620240"
  },
  {
    "text": "restoring",
    "start": "620240",
    "end": "622399"
  },
  {
    "text": "in the rest of this demo",
    "start": "622399",
    "end": "625600"
  },
  {
    "text": "so in my database i have a table called",
    "start": "625600",
    "end": "627680"
  },
  {
    "text": "sessions",
    "start": "627680",
    "end": "629120"
  },
  {
    "text": "and within sessions i have three",
    "start": "629120",
    "end": "632000"
  },
  {
    "text": "rows of data",
    "start": "632000",
    "end": "633360"
  },
  {
    "text": "great",
    "start": "633360",
    "end": "634480"
  },
  {
    "text": "so now let's go ahead and install",
    "start": "634480",
    "end": "636480"
  },
  {
    "text": "canister on my eks cluster",
    "start": "636480",
    "end": "640399"
  },
  {
    "text": "so installing cancer is very",
    "start": "642240",
    "end": "644320"
  },
  {
    "text": "straightforward we use helm",
    "start": "644320",
    "end": "647200"
  },
  {
    "text": "so helm install",
    "start": "647200",
    "end": "648880"
  },
  {
    "text": "is the command that we use",
    "start": "648880",
    "end": "652160"
  },
  {
    "text": "and conversely upgrade and help",
    "start": "653200",
    "end": "655120"
  },
  {
    "text": "uninstall",
    "start": "655120",
    "end": "657200"
  },
  {
    "text": "is all you need to manage",
    "start": "657200",
    "end": "659360"
  },
  {
    "text": "canister",
    "start": "659360",
    "end": "661839"
  },
  {
    "text": "let's take a look at our controller pot",
    "start": "664800",
    "end": "669120"
  },
  {
    "text": "great it's healthy up and up and running",
    "start": "669120",
    "end": "671839"
  },
  {
    "text": "as you can see it doesn't take long for",
    "start": "671839",
    "end": "673839"
  },
  {
    "text": "the canister operator to be ready",
    "start": "673839",
    "end": "678399"
  },
  {
    "text": "just let's go ahead and deploy our",
    "start": "680240",
    "end": "682480"
  },
  {
    "text": "postgres blueprint",
    "start": "682480",
    "end": "684720"
  },
  {
    "text": "so up to now we haven't had a chance to",
    "start": "684720",
    "end": "686800"
  },
  {
    "text": "look at what the blueprint is",
    "start": "686800",
    "end": "689920"
  },
  {
    "text": "and we're going to do that right now",
    "start": "689920",
    "end": "691920"
  },
  {
    "text": "fair warning there'll be quite a bit of",
    "start": "691920",
    "end": "693519"
  },
  {
    "text": "ammo",
    "start": "693519",
    "end": "695440"
  },
  {
    "text": "so we our postgres blueprint is called",
    "start": "695440",
    "end": "697440"
  },
  {
    "text": "csi snapshots",
    "start": "697440",
    "end": "700160"
  },
  {
    "text": "and inside this blueprint we have three",
    "start": "700160",
    "end": "703519"
  },
  {
    "text": "main actions",
    "start": "703519",
    "end": "706320"
  },
  {
    "text": "the first action we're gonna look at is",
    "start": "707120",
    "end": "709360"
  },
  {
    "text": "called create snapshot",
    "start": "709360",
    "end": "713040"
  },
  {
    "text": "so a blueprint has a number of actions",
    "start": "715279",
    "end": "718959"
  },
  {
    "text": "and each action has",
    "start": "718959",
    "end": "720880"
  },
  {
    "text": "a number of um",
    "start": "720880",
    "end": "722639"
  },
  {
    "text": "faces",
    "start": "722639",
    "end": "723839"
  },
  {
    "text": "what we're seeing here what we're seeing",
    "start": "723839",
    "end": "725440"
  },
  {
    "text": "here is that the crease snapshot action",
    "start": "725440",
    "end": "728800"
  },
  {
    "text": "is made out of two faces",
    "start": "728800",
    "end": "731040"
  },
  {
    "text": "the first phase basically says",
    "start": "731040",
    "end": "733519"
  },
  {
    "text": "before creating the snapshot",
    "start": "733519",
    "end": "736160"
  },
  {
    "text": "set",
    "start": "736160",
    "end": "737120"
  },
  {
    "text": "the database to read only mode",
    "start": "737120",
    "end": "739760"
  },
  {
    "text": "and once the database is in the",
    "start": "739760",
    "end": "741120"
  },
  {
    "text": "read-only mode",
    "start": "741120",
    "end": "742720"
  },
  {
    "text": "card is built in create csi snapshot",
    "start": "742720",
    "end": "745920"
  },
  {
    "text": "function",
    "start": "745920",
    "end": "747680"
  },
  {
    "text": "this is what we call a canister function",
    "start": "747680",
    "end": "750399"
  },
  {
    "text": "it is backed by some go code",
    "start": "750399",
    "end": "753440"
  },
  {
    "text": "and behind the scene it just relies on",
    "start": "753440",
    "end": "756240"
  },
  {
    "text": "the client go sdk to make like a http",
    "start": "756240",
    "end": "759600"
  },
  {
    "text": "request to the kubernetes csi volume",
    "start": "759600",
    "end": "762560"
  },
  {
    "text": "snapshot endpoint",
    "start": "762560",
    "end": "765440"
  },
  {
    "text": "in addition to faces we also recently",
    "start": "766160",
    "end": "768560"
  },
  {
    "text": "added something called",
    "start": "768560",
    "end": "770399"
  },
  {
    "text": "a differ face",
    "start": "770399",
    "end": "772160"
  },
  {
    "text": "you can think of a different phase as",
    "start": "772160",
    "end": "774160"
  },
  {
    "text": "that always run",
    "start": "774160",
    "end": "776000"
  },
  {
    "text": "final phase",
    "start": "776000",
    "end": "777760"
  },
  {
    "text": "so regardless of what happened to",
    "start": "777760",
    "end": "779920"
  },
  {
    "text": "previous phases",
    "start": "779920",
    "end": "781360"
  },
  {
    "text": "this phase will always be run at the end",
    "start": "781360",
    "end": "783360"
  },
  {
    "text": "if you're familiar with go",
    "start": "783360",
    "end": "785279"
  },
  {
    "text": "this is very similar to the goal um",
    "start": "785279",
    "end": "788240"
  },
  {
    "text": "deferred statement",
    "start": "788240",
    "end": "790480"
  },
  {
    "text": "so this deeper phase says whatever",
    "start": "790480",
    "end": "793120"
  },
  {
    "text": "happens previously",
    "start": "793120",
    "end": "795200"
  },
  {
    "text": "always reset the database back to read",
    "start": "795200",
    "end": "797040"
  },
  {
    "text": "write mode so put things back to where",
    "start": "797040",
    "end": "799040"
  },
  {
    "text": "we found how we found it before",
    "start": "799040",
    "end": "802560"
  },
  {
    "text": "now the next action i want to show",
    "start": "804399",
    "end": "808000"
  },
  {
    "text": "in the same blueprint is the restore",
    "start": "808000",
    "end": "810399"
  },
  {
    "text": "snapshot action",
    "start": "810399",
    "end": "814200"
  },
  {
    "text": "you'll see that the restore snapshot",
    "start": "814800",
    "end": "817200"
  },
  {
    "text": "action is actually a lot simpler it has",
    "start": "817200",
    "end": "819680"
  },
  {
    "text": "only one face",
    "start": "819680",
    "end": "821120"
  },
  {
    "text": "and it relax relies on this restore csi",
    "start": "821120",
    "end": "824160"
  },
  {
    "text": "snapshot canister function",
    "start": "824160",
    "end": "827040"
  },
  {
    "text": "it is expecting a number of input",
    "start": "827040",
    "end": "829199"
  },
  {
    "text": "parameters",
    "start": "829199",
    "end": "830560"
  },
  {
    "text": "so later i'll show how we can use",
    "start": "830560",
    "end": "833360"
  },
  {
    "text": "uh the output from the create snapshot",
    "start": "833360",
    "end": "836320"
  },
  {
    "text": "action",
    "start": "836320",
    "end": "837519"
  },
  {
    "text": "and feed that into",
    "start": "837519",
    "end": "839600"
  },
  {
    "text": "the restore snapshot action as input",
    "start": "839600",
    "end": "842639"
  },
  {
    "text": "parameters",
    "start": "842639",
    "end": "845279"
  },
  {
    "text": "the final action that we want to look at",
    "start": "851519",
    "end": "855040"
  },
  {
    "text": "is called the describe snapshot",
    "start": "855040",
    "end": "858800"
  },
  {
    "text": "so in this",
    "start": "858800",
    "end": "860720"
  },
  {
    "text": "phase in this action i'm actually using",
    "start": "860720",
    "end": "863040"
  },
  {
    "text": "the aws cli",
    "start": "863040",
    "end": "865040"
  },
  {
    "text": "to",
    "start": "865040",
    "end": "866240"
  },
  {
    "text": "communicate with the aws ec2 endpoint",
    "start": "866240",
    "end": "870079"
  },
  {
    "text": "and assets to list a set of snapshots",
    "start": "870079",
    "end": "872800"
  },
  {
    "text": "that have just been created",
    "start": "872800",
    "end": "875360"
  },
  {
    "text": "the point of this action is to show that",
    "start": "875360",
    "end": "877920"
  },
  {
    "text": "canister work well with kubernetes api",
    "start": "877920",
    "end": "881519"
  },
  {
    "text": "it also works really well with remote",
    "start": "881519",
    "end": "883360"
  },
  {
    "text": "cloud provider api",
    "start": "883360",
    "end": "885440"
  },
  {
    "text": "as long as the proper secrets and",
    "start": "885440",
    "end": "887199"
  },
  {
    "text": "credentials are provided",
    "start": "887199",
    "end": "890639"
  },
  {
    "text": "so let's go ahead and create an action",
    "start": "892560",
    "end": "894880"
  },
  {
    "text": "set",
    "start": "894880",
    "end": "897880"
  },
  {
    "text": "so as i mentioned earlier an action set",
    "start": "899360",
    "end": "901600"
  },
  {
    "text": "is that",
    "start": "901600",
    "end": "902959"
  },
  {
    "text": "run time execution trigger point or",
    "start": "902959",
    "end": "905440"
  },
  {
    "text": "entry point",
    "start": "905440",
    "end": "906800"
  },
  {
    "text": "this is what",
    "start": "906800",
    "end": "908160"
  },
  {
    "text": "the yamo of the",
    "start": "908160",
    "end": "910480"
  },
  {
    "text": "create snapshot action set looks like",
    "start": "910480",
    "end": "912880"
  },
  {
    "text": "it's basically provide information on",
    "start": "912880",
    "end": "915440"
  },
  {
    "text": "what action",
    "start": "915440",
    "end": "916880"
  },
  {
    "text": "to run and where the blueprint is",
    "start": "916880",
    "end": "919760"
  },
  {
    "text": "and then also a set of input parameters",
    "start": "919760",
    "end": "922000"
  },
  {
    "text": "that will be fed",
    "start": "922000",
    "end": "923760"
  },
  {
    "text": "into the canister function",
    "start": "923760",
    "end": "927839"
  },
  {
    "text": "i'm going to go ahead and use cubecardo",
    "start": "930000",
    "end": "931839"
  },
  {
    "text": "to create",
    "start": "931839",
    "end": "934160"
  },
  {
    "text": "this action set",
    "start": "934160",
    "end": "936879"
  },
  {
    "text": "now we're gonna watch the csi volume",
    "start": "938959",
    "end": "941600"
  },
  {
    "text": "snapshot and volume snatch our content",
    "start": "941600",
    "end": "943600"
  },
  {
    "text": "resources being created",
    "start": "943600",
    "end": "945600"
  },
  {
    "text": "so by simply creating",
    "start": "945600",
    "end": "947839"
  },
  {
    "text": "an action set for the create snapshot",
    "start": "947839",
    "end": "950399"
  },
  {
    "text": "action",
    "start": "950399",
    "end": "951600"
  },
  {
    "text": "we can see that how canister is able to",
    "start": "951600",
    "end": "953839"
  },
  {
    "text": "talk to the volume snapshot",
    "start": "953839",
    "end": "956320"
  },
  {
    "text": "apis",
    "start": "956320",
    "end": "958959"
  },
  {
    "text": "so",
    "start": "959040",
    "end": "959759"
  },
  {
    "text": "and create the resources um accordingly",
    "start": "959759",
    "end": "963759"
  },
  {
    "text": "so it looks like our volume snapshot",
    "start": "963759",
    "end": "966639"
  },
  {
    "text": "resources and volume station content is",
    "start": "966639",
    "end": "968800"
  },
  {
    "text": "ready",
    "start": "968800",
    "end": "971120"
  },
  {
    "text": "so kubernetes thinks that",
    "start": "974320",
    "end": "976639"
  },
  {
    "text": "our snapshots aren't really",
    "start": "976639",
    "end": "978320"
  },
  {
    "text": "is it",
    "start": "978320",
    "end": "980639"
  },
  {
    "text": "really so what we're going to do next is",
    "start": "980839",
    "end": "983440"
  },
  {
    "text": "to utilize to describe snapshot",
    "start": "983440",
    "end": "986959"
  },
  {
    "text": "action",
    "start": "986959",
    "end": "988079"
  },
  {
    "text": "and use it to call the aws",
    "start": "988079",
    "end": "991120"
  },
  {
    "text": "api to confirm that",
    "start": "991120",
    "end": "993360"
  },
  {
    "text": "we indeed have the eps snapshots created",
    "start": "993360",
    "end": "996079"
  },
  {
    "text": "in the",
    "start": "996079",
    "end": "997360"
  },
  {
    "text": "in the cloud",
    "start": "997360",
    "end": "1000160"
  },
  {
    "text": "so what we did here was that we parse",
    "start": "1000720",
    "end": "1005040"
  },
  {
    "text": "the status up resource",
    "start": "1005040",
    "end": "1007199"
  },
  {
    "text": "of the describe snapshot action for",
    "start": "1007199",
    "end": "1010320"
  },
  {
    "text": "information that was returned from the",
    "start": "1010320",
    "end": "1013360"
  },
  {
    "text": "aws",
    "start": "1013360",
    "end": "1014800"
  },
  {
    "text": "ebs api",
    "start": "1014800",
    "end": "1016639"
  },
  {
    "text": "as you can see we get information around",
    "start": "1016639",
    "end": "1018800"
  },
  {
    "text": "the actual snapshot id and the volume id",
    "start": "1018800",
    "end": "1022160"
  },
  {
    "text": "so",
    "start": "1022160",
    "end": "1022839"
  },
  {
    "text": "great our ebs snapshots are truly",
    "start": "1022839",
    "end": "1025520"
  },
  {
    "text": "created",
    "start": "1025520",
    "end": "1027919"
  },
  {
    "text": "and the last",
    "start": "1031039",
    "end": "1032880"
  },
  {
    "text": "stage of this demo is to really take",
    "start": "1032880",
    "end": "1035678"
  },
  {
    "text": "that newly created csi snapshot and",
    "start": "1035679",
    "end": "1038880"
  },
  {
    "text": "restore it",
    "start": "1038880",
    "end": "1041120"
  },
  {
    "text": "to a new postgres",
    "start": "1041120",
    "end": "1043760"
  },
  {
    "text": "database",
    "start": "1043760",
    "end": "1045520"
  },
  {
    "text": "we'll be using a tool called can ctl",
    "start": "1045520",
    "end": "1048799"
  },
  {
    "text": "so instead of creating the restore",
    "start": "1048799",
    "end": "1051840"
  },
  {
    "text": "action set yamo as some static gamble",
    "start": "1051840",
    "end": "1055840"
  },
  {
    "text": "we actually use a tool called can ctl",
    "start": "1055840",
    "end": "1059520"
  },
  {
    "text": "to read the output",
    "start": "1059520",
    "end": "1061679"
  },
  {
    "text": "from",
    "start": "1061679",
    "end": "1062640"
  },
  {
    "text": "the previous create snapshot action set",
    "start": "1062640",
    "end": "1066480"
  },
  {
    "text": "and pipe that into keep cuddle",
    "start": "1066480",
    "end": "1069760"
  },
  {
    "text": "and use that to create our restore",
    "start": "1069760",
    "end": "1072799"
  },
  {
    "text": "action set resource",
    "start": "1072799",
    "end": "1075520"
  },
  {
    "text": "so as you can see with that action set",
    "start": "1075520",
    "end": "1078240"
  },
  {
    "text": "being applied",
    "start": "1078240",
    "end": "1079679"
  },
  {
    "text": "we now have a new",
    "start": "1079679",
    "end": "1082000"
  },
  {
    "text": "pvc",
    "start": "1082000",
    "end": "1083440"
  },
  {
    "text": "restore to the same",
    "start": "1083440",
    "end": "1085440"
  },
  {
    "text": "namespace that my original postgres",
    "start": "1085440",
    "end": "1087760"
  },
  {
    "text": "database is running in",
    "start": "1087760",
    "end": "1089679"
  },
  {
    "text": "the status of this pvc will remain",
    "start": "1089679",
    "end": "1091840"
  },
  {
    "text": "pending",
    "start": "1091840",
    "end": "1092880"
  },
  {
    "text": "because by default the storage class",
    "start": "1092880",
    "end": "1095360"
  },
  {
    "text": "that we are using",
    "start": "1095360",
    "end": "1096799"
  },
  {
    "text": "has the binding policy set to wait for a",
    "start": "1096799",
    "end": "1099200"
  },
  {
    "text": "first consumer in other words the pv",
    "start": "1099200",
    "end": "1102320"
  },
  {
    "text": "will not be bounded to the pvc",
    "start": "1102320",
    "end": "1105039"
  },
  {
    "text": "until and",
    "start": "1105039",
    "end": "1106640"
  },
  {
    "text": "part an application is actually",
    "start": "1106640",
    "end": "1109440"
  },
  {
    "text": "available and start consuming the pvc",
    "start": "1109440",
    "end": "1113759"
  },
  {
    "text": "so the rest of this demo is really to",
    "start": "1115200",
    "end": "1117760"
  },
  {
    "text": "just install a new",
    "start": "1117760",
    "end": "1119760"
  },
  {
    "text": "postgres database owned and managed by",
    "start": "1119760",
    "end": "1122400"
  },
  {
    "text": "another stateful set workload",
    "start": "1122400",
    "end": "1126000"
  },
  {
    "text": "and",
    "start": "1126000",
    "end": "1127840"
  },
  {
    "text": "until they come to the stateful set to",
    "start": "1127840",
    "end": "1130080"
  },
  {
    "text": "pick up like the restore",
    "start": "1130080",
    "end": "1133760"
  },
  {
    "text": "pvc instead of creating a new one",
    "start": "1134000",
    "end": "1138320"
  },
  {
    "text": "so this will take a couple seconds for",
    "start": "1145039",
    "end": "1149200"
  },
  {
    "text": "the new postgres part to be ready the",
    "start": "1149200",
    "end": "1152000"
  },
  {
    "text": "first part here is the original part",
    "start": "1152000",
    "end": "1154160"
  },
  {
    "text": "where we captured the snapshot form",
    "start": "1154160",
    "end": "1157600"
  },
  {
    "text": "and the second part here as you can tell",
    "start": "1157600",
    "end": "1160400"
  },
  {
    "text": "is the restore",
    "start": "1160400",
    "end": "1162160"
  },
  {
    "text": "postgres",
    "start": "1162160",
    "end": "1163280"
  },
  {
    "text": "part",
    "start": "1163280",
    "end": "1165280"
  },
  {
    "text": "okay it looks like it's ready",
    "start": "1165280",
    "end": "1168400"
  },
  {
    "text": "and the final command that we're going",
    "start": "1168480",
    "end": "1169760"
  },
  {
    "text": "to run is really just to use couple",
    "start": "1169760",
    "end": "1171919"
  },
  {
    "text": "exact",
    "start": "1171919",
    "end": "1173120"
  },
  {
    "text": "and exact into",
    "start": "1173120",
    "end": "1175039"
  },
  {
    "text": "the restore postgrad database and make",
    "start": "1175039",
    "end": "1177360"
  },
  {
    "text": "sure our sessions table",
    "start": "1177360",
    "end": "1179760"
  },
  {
    "text": "have been restored with the three",
    "start": "1179760",
    "end": "1182400"
  },
  {
    "text": "test data",
    "start": "1182400",
    "end": "1183600"
  },
  {
    "text": "rows we have inserted earlier",
    "start": "1183600",
    "end": "1187039"
  },
  {
    "text": "and there it is",
    "start": "1187039",
    "end": "1190600"
  },
  {
    "text": "and with that we have reached the end of",
    "start": "1193120",
    "end": "1195440"
  },
  {
    "text": "our demo",
    "start": "1195440",
    "end": "1198000"
  },
  {
    "text": "as i mentioned earlier canister",
    "start": "1204000",
    "end": "1206559"
  },
  {
    "text": "is an open source project",
    "start": "1206559",
    "end": "1209360"
  },
  {
    "text": "if backup and restore",
    "start": "1209360",
    "end": "1211679"
  },
  {
    "text": "is something that you have to deal with",
    "start": "1211679",
    "end": "1213440"
  },
  {
    "text": "a lot i encourage you to check out",
    "start": "1213440",
    "end": "1215200"
  },
  {
    "text": "canister",
    "start": "1215200",
    "end": "1216320"
  },
  {
    "text": "source code is on github",
    "start": "1216320",
    "end": "1218799"
  },
  {
    "text": "feel free to join us on slack i'm always",
    "start": "1218799",
    "end": "1221280"
  },
  {
    "text": "there answering questions and talking to",
    "start": "1221280",
    "end": "1224400"
  },
  {
    "text": "you about your use case",
    "start": "1224400",
    "end": "1226559"
  },
  {
    "text": "join our community meeting we meet we",
    "start": "1226559",
    "end": "1228720"
  },
  {
    "text": "meet every other thursdays like 16 hour",
    "start": "1228720",
    "end": "1230799"
  },
  {
    "text": "utc",
    "start": "1230799",
    "end": "1232240"
  },
  {
    "text": "we have some exciting roadmap coming up",
    "start": "1232240",
    "end": "1234720"
  },
  {
    "text": "and feedback and contributions are most",
    "start": "1234720",
    "end": "1236799"
  },
  {
    "text": "welcome",
    "start": "1236799",
    "end": "1237760"
  },
  {
    "text": "thank you so much for your time",
    "start": "1237760",
    "end": "1240400"
  },
  {
    "text": "cheers",
    "start": "1240400",
    "end": "1243400"
  }
]