[
  {
    "start": "0",
    "end": "243000"
  },
  {
    "text": "hi this is non-destructive forensics debugging kubernetes services without",
    "start": "80",
    "end": "5120"
  },
  {
    "text": "disturbing state um if you have any questions throughout this presentation go ahead and",
    "start": "5120",
    "end": "10320"
  },
  {
    "text": "type them in the box below and we'll do a q a at the end",
    "start": "10320",
    "end": "17760"
  },
  {
    "text": "uh so i want to start with this kind of ubiquitous tweet uh which says we replaced our",
    "start": "17760",
    "end": "24320"
  },
  {
    "text": "monolith with microservices so that every outage could be more like a murder mystery from honest update i really like this",
    "start": "24320",
    "end": "31920"
  },
  {
    "text": "quote i think it is very apt because when you're debugging outages you know",
    "start": "31920",
    "end": "38559"
  },
  {
    "text": "you have to do a lot of the same things as in a murder mystery you have to collect clues and evidence",
    "start": "38559",
    "end": "43600"
  },
  {
    "text": "you have to consider the suspects and you have to kind of mentally reconstruct the series of",
    "start": "43600",
    "end": "49840"
  },
  {
    "text": "events that you think happened so my name is alex i work at a company",
    "start": "49840",
    "end": "57840"
  },
  {
    "text": "called buoyant and i am a maintainer of the lingerity project",
    "start": "57840",
    "end": "62879"
  },
  {
    "text": "i also really like board games and i really like debugging microservice murder mysteries",
    "start": "62879",
    "end": "72080"
  },
  {
    "text": "uh so to give you a little bit of context um i wanted to talk about what link rd is so link rd is an open source",
    "start": "72080",
    "end": "79840"
  },
  {
    "text": "service mesh it's part of the cncf as an incubating project it's got open governance of course",
    "start": "79840",
    "end": "84880"
  },
  {
    "text": "because it's part of cncf and it's ultralight security first written go and rest and if you're not",
    "start": "84880",
    "end": "90479"
  },
  {
    "text": "familiar with what a service mesh is the basic idea is that we run",
    "start": "90479",
    "end": "95520"
  },
  {
    "text": "a sidecar proxy container inside each one of your pods and this sidecar proxy is",
    "start": "95520",
    "end": "103040"
  },
  {
    "text": "responsible for intercepting all traffic that goes in or out of the pod",
    "start": "103040",
    "end": "108880"
  },
  {
    "text": "and proxying it along and then also doing some kind of interesting stuff with it so that includes recording metrics about",
    "start": "108880",
    "end": "115920"
  },
  {
    "text": "that traffic uh doing intelligent load balancing um and so on and so forth uh adding",
    "start": "115920",
    "end": "122079"
  },
  {
    "text": "security mtls automatically and what's kind of cool about this is that it's totally",
    "start": "122079",
    "end": "128319"
  },
  {
    "text": "transparent to the application the application doesn't know that this is happening it's all kind of layered on um",
    "start": "128319",
    "end": "134959"
  },
  {
    "text": "but the thing is that since these proxies are handling all the traffic going through the network it's really",
    "start": "134959",
    "end": "142000"
  },
  {
    "text": "really important that they don't have any bugs or at least that they don't have any bugs that's going to interfere in any way with the traffic",
    "start": "142000",
    "end": "147760"
  },
  {
    "text": "they're proxying so one of the most interesting things",
    "start": "147760",
    "end": "153840"
  },
  {
    "text": "that i get to do is i get to investigate bug reports um and this is",
    "start": "153840",
    "end": "161120"
  },
  {
    "text": "kind of fun because it means i get to do these kind of investigations and and do this kind of murder mystery thing",
    "start": "161120",
    "end": "166560"
  },
  {
    "text": "and try and figure out what went wrong",
    "start": "166560",
    "end": "171840"
  },
  {
    "text": "uh so i want to start just by talking about what what is this detective work and what does it entail and why is it",
    "start": "172720",
    "end": "178319"
  },
  {
    "text": "difficult um and then go through some of the tools that i use to do these investigations so",
    "start": "178319",
    "end": "185599"
  },
  {
    "text": "i wanted to talk about a feature linker which lets us tap into",
    "start": "185599",
    "end": "192879"
  },
  {
    "text": "live",
    "start": "196840",
    "end": "199840"
  },
  {
    "text": "into a uh node in your cluster to get an even better look at what's going on and in",
    "start": "204560",
    "end": "210640"
  },
  {
    "text": "order to talk about that we kind of have to talk about what what is a pod uh anyway and and",
    "start": "210640",
    "end": "215760"
  },
  {
    "text": "what happens when we kind of peel back of the layers of abstraction look at what's really going on um and then finally i want to talk about",
    "start": "215760",
    "end": "222879"
  },
  {
    "text": "a feature that's coming up in kubernetes where this alpha right now called ephemeral containers",
    "start": "222879",
    "end": "228879"
  },
  {
    "text": "so when you get a bug report uh probably the first thing you're going to want to do is you're going to want to reproduce",
    "start": "231360",
    "end": "236720"
  },
  {
    "text": "it if you can reproduce that bug it's going to be much easier to solve than if you can't",
    "start": "236720",
    "end": "243760"
  },
  {
    "start": "243000",
    "end": "243000"
  },
  {
    "text": "but sometimes this is really difficult some bugs are very very difficult to reproduce",
    "start": "244159",
    "end": "249599"
  },
  {
    "text": "because they may only happen in certain environments they might only happen at certain scales or at certain load levels or",
    "start": "249599",
    "end": "256320"
  },
  {
    "text": "after a certain you know amount of time has elapsed or when some other you know set of conditions",
    "start": "256320",
    "end": "262000"
  },
  {
    "text": "has been met and you don't necessarily know what those conditions are so this can be very frustrating",
    "start": "262000",
    "end": "267280"
  },
  {
    "text": "especially when you get a bug report that says you know this thing happens but i can't tell you when or i can't tell you why",
    "start": "267280",
    "end": "272479"
  },
  {
    "text": "uh and you have to kind of figure it out on your own so sometimes the best you can do really",
    "start": "272479",
    "end": "279120"
  },
  {
    "text": "is to replicate uh the you know what's in the bug report as as closely as you can replicate that",
    "start": "279120",
    "end": "285360"
  },
  {
    "text": "environment to the best of your ability um and then just let it run and you know keep your eye on it and hope",
    "start": "285360",
    "end": "291680"
  },
  {
    "text": "that you trigger the bug and if you're lucky then eventually the bug will happen",
    "start": "291680",
    "end": "298160"
  },
  {
    "text": "and so when when this happens and you have triggered this bug that you've been trying so hard to reproduce",
    "start": "299440",
    "end": "304800"
  },
  {
    "text": "you want to gather absolutely as much data as you possibly can and you don't want to kind of squander",
    "start": "304800",
    "end": "311360"
  },
  {
    "text": "that state that you've gotten yourself into so you want to collect you know logs you want to collect metrics you",
    "start": "311360",
    "end": "317039"
  },
  {
    "text": "want to collect you know everything you possibly can about that's about that state you're in you want to look at the",
    "start": "317039",
    "end": "322639"
  },
  {
    "text": "network state the state of the sockets you want to do a traffic capture if you can get a traffic capture you want to get kind of",
    "start": "322639",
    "end": "328400"
  },
  {
    "text": "as much data as as possible and you want to avoid disturbing that state because then you're going to",
    "start": "328400",
    "end": "334400"
  },
  {
    "text": "basically have to start over if you end up restarting the process or restarting the pod or interrupting any",
    "start": "334400",
    "end": "339759"
  },
  {
    "text": "of those connections you may kind of lose that that state you're in you have to start over and",
    "start": "339759",
    "end": "345440"
  },
  {
    "text": "reproduce the bug come from scratch and if for these bugs that are very difficult to reproduce if you don't have a reliable way of doing",
    "start": "345440",
    "end": "351120"
  },
  {
    "text": "that that can be very very painful and time consuming so in other words you want to collect",
    "start": "351120",
    "end": "356639"
  },
  {
    "text": "data without disturbing the scene of the crime and so i call this non-destructive",
    "start": "356639",
    "end": "362720"
  },
  {
    "text": "forensics um and for this talk i want to really",
    "start": "364840",
    "end": "370720"
  },
  {
    "text": "focus on bugs that have to do with service to service communication",
    "start": "370720",
    "end": "375840"
  },
  {
    "text": "and the primary reason for this is because this is where i have the most experience you know i work on linker d liquidity",
    "start": "375840",
    "end": "382080"
  },
  {
    "text": "proxies network traffic so almost all of the bugs that i investigate have to do with communication between services and",
    "start": "382080",
    "end": "388880"
  },
  {
    "text": "some at some level um but i think it's more than that i think communication between services is",
    "start": "388880",
    "end": "395440"
  },
  {
    "text": "really what is essential to microservices you know if you don't have services communicating or if there's nothing",
    "start": "395440",
    "end": "401360"
  },
  {
    "text": "going wrong with that communication then it's really kind of no more interesting than",
    "start": "401360",
    "end": "407039"
  },
  {
    "text": "than single services or monoliths so i think looking at service service communication really captures something that's",
    "start": "407039",
    "end": "413360"
  },
  {
    "text": "essential about microservices another reason is i think these are just",
    "start": "413360",
    "end": "418479"
  },
  {
    "text": "really hard to debug we don't necessarily have a lot of tools or at least we're not",
    "start": "418479",
    "end": "423520"
  },
  {
    "text": "necessarily used to using the tools for debugging service to service communication",
    "start": "423520",
    "end": "429360"
  },
  {
    "text": "and you know it's just more complex you have many different moving pieces they're all running concurrently so you",
    "start": "429360",
    "end": "434880"
  },
  {
    "text": "have a high degree of parallelism there's a lot of opportunity for race conditions network connections",
    "start": "434880",
    "end": "440240"
  },
  {
    "text": "are uh not totally reliable so there's failures that can happen not only within the services but also between them",
    "start": "440240",
    "end": "447360"
  },
  {
    "text": "so there's just a lot going on a lot that can go wrong and so debugging these types of problems",
    "start": "447360",
    "end": "452800"
  },
  {
    "text": "can be really difficult and finally the other reason why i think it's really interesting to look at",
    "start": "452800",
    "end": "458880"
  },
  {
    "text": "service to service communication is that it kind of allows us to treat each service as a black box",
    "start": "458880",
    "end": "464879"
  },
  {
    "text": "just looking at its communication we kind of see both its inputs and its outputs and and that lets us help or that helps",
    "start": "464879",
    "end": "472639"
  },
  {
    "text": "us narrow down our list of suspects and kind of figure out which service is behaving and which is",
    "start": "472639",
    "end": "478639"
  },
  {
    "text": "not without needing to look inside it and i think that's a really powerful technique for for kind of narrowing down",
    "start": "478639",
    "end": "485280"
  },
  {
    "text": "the scope of our investigation",
    "start": "485280",
    "end": "493840"
  },
  {
    "text": "so i think about every service as having a contract in other words a",
    "start": "493919",
    "end": "499599"
  },
  {
    "text": "set of behaviors that it needs to uh that it needs to do or a set of rules that it needs to obey",
    "start": "499599",
    "end": "506240"
  },
  {
    "text": "and sometimes this is explicit you might have some formalized api specification that exactly spells out",
    "start": "506240",
    "end": "513039"
  },
  {
    "text": "what your service is supposed to do but more commonly i think it's kind of implicit as",
    "start": "513039",
    "end": "518640"
  },
  {
    "text": "someone who has designed this system you just have it in your mind what the correct behavior for each service is and how they're",
    "start": "518640",
    "end": "524640"
  },
  {
    "text": "supposed to coordinate and work together and get along and uh",
    "start": "524640",
    "end": "530160"
  },
  {
    "text": "and so in other words you know what constitutes correct behavior and the idea behind microservices is",
    "start": "530160",
    "end": "537440"
  },
  {
    "text": "that you have all these services each with their own individual contracts and if they're all doing the right thing then the service",
    "start": "537440",
    "end": "543120"
  },
  {
    "text": "the service architecture as a whole does the right thing and if that means that if the service",
    "start": "543120",
    "end": "549680"
  },
  {
    "text": "architecture as a whole is not working that means some individual or at least one individual service is not satisfying its",
    "start": "549680",
    "end": "556080"
  },
  {
    "text": "contract it's doing something wrong and like i alluded to earlier we can look at",
    "start": "556080",
    "end": "562080"
  },
  {
    "text": "the communication between services in order to kind of identify",
    "start": "562080",
    "end": "567200"
  },
  {
    "text": "uh which service is not fulfilling their contract you know treating them as a black box which is not doing the right thing",
    "start": "567200",
    "end": "573760"
  },
  {
    "text": "and it's also worth noting that these contracts exist at multiple levels so you may have",
    "start": "573760",
    "end": "580320"
  },
  {
    "text": "application level contracts which say things like if my service gets a request for a",
    "start": "580320",
    "end": "586000"
  },
  {
    "text": "certain type of record then it's going to return it or if i get a new user creation",
    "start": "586000",
    "end": "593279"
  },
  {
    "text": "request then i'm going to write a row into the user's database but there's also network level contracts",
    "start": "593279",
    "end": "600240"
  },
  {
    "text": "which say things like if i get a tcp packet i need to acknowledge it",
    "start": "600240",
    "end": "606560"
  },
  {
    "text": "and so in order for your service to behave correctly it has to obey its contracts kind of at every level",
    "start": "606720",
    "end": "613680"
  },
  {
    "text": "uh so the first feature i wanted to talk about or the first tool uh in your toolkit or in my toolkit uh is",
    "start": "617040",
    "end": "623200"
  },
  {
    "text": "called linkery tab uh and this is a feature of linkedin that lets you tap into",
    "start": "623200",
    "end": "629519"
  },
  {
    "start": "625000",
    "end": "625000"
  },
  {
    "text": "http streams so remember i was describing linkedin earlier and i said that it runs a sidecar proxy inside every one",
    "start": "629519",
    "end": "637680"
  },
  {
    "text": "of your pods that intercepts all of the in-going and outgoing traffic one kind of powerful thing you get from",
    "start": "637680",
    "end": "644720"
  },
  {
    "text": "this is that you can now kind of connect to any proxy and say hey tell me about the traffic",
    "start": "644720",
    "end": "649760"
  },
  {
    "text": "that that's flowing through you you know describe it to me uh let me tap into it as if i was like doing a wiretap",
    "start": "649760",
    "end": "657680"
  },
  {
    "text": "and this is really powerful because you know it lets us see this data in transit it lets us see it in real",
    "start": "657839",
    "end": "663920"
  },
  {
    "text": "time as it's moving and so we can look at requests and responses as they flow",
    "start": "663920",
    "end": "669600"
  },
  {
    "text": "through the system in real time and authorization for this is controlled",
    "start": "669600",
    "end": "674800"
  },
  {
    "text": "with our back i think that's really important um that means that you can set up our back rules that specify",
    "start": "674800",
    "end": "680320"
  },
  {
    "text": "you know which users or which accounts are allowed to tap into which resources you don't have just you know cart cart",
    "start": "680320",
    "end": "685920"
  },
  {
    "text": "launch access uh so here's what that kind of looks",
    "start": "685920",
    "end": "691360"
  },
  {
    "text": "like using the linker dcli you can say something like liquidity tap you can give it a namespace and a",
    "start": "691360",
    "end": "696800"
  },
  {
    "text": "resource and it will just spit out a stream of events that describe the requests and",
    "start": "696800",
    "end": "702240"
  },
  {
    "text": "the responses that that proxy is seeing so in this case i'm just showing three events that that showed up",
    "start": "702240",
    "end": "709120"
  },
  {
    "text": "right away we've got a request a response and an end so the end means that the response has",
    "start": "709120",
    "end": "714800"
  },
  {
    "text": "has finished has completed and you can see that there's just a ton of really cool metadata in here",
    "start": "714800",
    "end": "721279"
  },
  {
    "text": "so for example we can see the source of that request we can know the ip import that it came from and also the destination where it's going to",
    "start": "721279",
    "end": "728959"
  },
  {
    "text": "uh we can see other http metadata like the path here so in this case this request looks based on its path",
    "start": "728959",
    "end": "735040"
  },
  {
    "text": "like it's a grpc request uh we can see stuff in the response",
    "start": "735040",
    "end": "740240"
  },
  {
    "text": "there's the status code and the latency and then we can see trailers uh in when",
    "start": "740240",
    "end": "747120"
  },
  {
    "text": "the response has completed so this was a grpc uh status okay trailer we can see how",
    "start": "747120",
    "end": "752240"
  },
  {
    "text": "long it was streaming for and how many bytes were in the response so tons of really",
    "start": "752240",
    "end": "757440"
  },
  {
    "text": "really uh cool metadata um oh and the other thing that i wanted",
    "start": "757440",
    "end": "764320"
  },
  {
    "text": "to say about this is that uh you can of course this is maybe a little difficult for humans to",
    "start": "764320",
    "end": "769920"
  },
  {
    "text": "to consume but you can also pipe this into other text processing tools to make it uh to kind of filter down to what you",
    "start": "769920",
    "end": "776320"
  },
  {
    "text": "want to see so you can pipe this into grappler awk or do whatever you want um and it also supports json format if you",
    "start": "776320",
    "end": "782800"
  },
  {
    "text": "wanted to treat this a little more programmatically",
    "start": "782800",
    "end": "787839"
  },
  {
    "text": "but since it's a little difficult for humans just to eyeball to see with their own eyeballs this is",
    "start": "788639",
    "end": "794079"
  },
  {
    "text": "also available in the linkerity dashboard so here's kind of that same data but but in the the web",
    "start": "794079",
    "end": "800800"
  },
  {
    "text": "dashboard um and you can see here we've rolled things up by their path so everything",
    "start": "800800",
    "end": "806320"
  },
  {
    "text": "all those requests that have the same path uh get rolled up together until we can get account of how many requests",
    "start": "806320",
    "end": "811440"
  },
  {
    "text": "there were and we can also calculate success rate based on the http response status code",
    "start": "811440",
    "end": "819199"
  },
  {
    "text": "so that's a really cool way of getting a view of that data at a glance",
    "start": "819199",
    "end": "825199"
  },
  {
    "text": "and this is really powerful for for seeing which requests are happening between which services and how long are they taking and are they successful",
    "start": "825199",
    "end": "831279"
  },
  {
    "text": "and are they or are they not successful and you just get a lot of high level data about that communication very very",
    "start": "831279",
    "end": "838000"
  },
  {
    "text": "quickly and very very easily um so like i said this is like super",
    "start": "838000",
    "end": "844720"
  },
  {
    "text": "super convenient you know it's one cli command and you just get all this data basically for free um",
    "start": "844720",
    "end": "851519"
  },
  {
    "text": "and it's very rich in the amount of metadata you get and it has this very nice property that",
    "start": "851519",
    "end": "858160"
  },
  {
    "text": "we care very much about that is non-destructive i didn't have to restart anything i didn't have to you know add log lines to any program",
    "start": "858160",
    "end": "865199"
  },
  {
    "text": "and recompile them i was just able to directly tap into that existing http stream",
    "start": "865199",
    "end": "871839"
  },
  {
    "text": "now the downside here is that of course this requires that you already have linguity running so if you don't already",
    "start": "872480",
    "end": "878480"
  },
  {
    "text": "have linker d installed in your cluster and in your pods then it's not non-destructive anymore you",
    "start": "878480",
    "end": "884959"
  },
  {
    "text": "would have to restart those pods to add the proxy so it's kind of only non-destructive if you already have it there",
    "start": "884959",
    "end": "892560"
  },
  {
    "text": "the other thing is that we were only able to see metadata we weren't able to see what was actually in",
    "start": "893040",
    "end": "898959"
  },
  {
    "text": "those request or response bodies that's coming in a future release of",
    "start": "898959",
    "end": "905199"
  },
  {
    "text": "liquidity it's on the roadmap it's something that i'm very very excited about because being able to see exactly what was in those messages",
    "start": "905199",
    "end": "912399"
  },
  {
    "text": "in those requests and responses i think would just take this to the next level you'd be able to do a lot more",
    "start": "912399",
    "end": "917600"
  },
  {
    "text": "uh debugging if you were able to see you know exactly what are the contents of these requests and responses and are they",
    "start": "917600",
    "end": "923440"
  },
  {
    "text": "correct so that's something i'm really really excited about um and the other big big drawback here",
    "start": "923440",
    "end": "930720"
  },
  {
    "text": "is that this is http only grpc is also hdb uh and that kind of means two things",
    "start": "930720",
    "end": "939120"
  },
  {
    "text": "you know first of all it means that if you have traffic that is some other protocol like um you know my",
    "start": "939120",
    "end": "944639"
  },
  {
    "text": "sequel or redis or something else um this isn't going to work you're not going to be able to use this tool",
    "start": "944639",
    "end": "950880"
  },
  {
    "text": "but i think the other thing that this means is that even if your traffic is http you're only getting",
    "start": "950880",
    "end": "956800"
  },
  {
    "text": "http level data about it you know in those events you're not seeing anything about",
    "start": "956800",
    "end": "962480"
  },
  {
    "text": "individual frames you're not seeing anything about individual connections or individual packets um it's all at the http layer so if your",
    "start": "962480",
    "end": "970000"
  },
  {
    "text": "problem that you're debugging uh goes below there and is more complicated and you need to dig a little",
    "start": "970000",
    "end": "976160"
  },
  {
    "text": "deeper that's kind of where tap stops and you can't get anything lower level out of it",
    "start": "976160",
    "end": "983839"
  },
  {
    "text": "so tap is always kind of my first line of defense is always the first tool i turn to because it's just so",
    "start": "984320",
    "end": "991199"
  },
  {
    "text": "convenient and gives you so much data so quickly but often i find i need to dig a little deeper and kind of",
    "start": "991199",
    "end": "998000"
  },
  {
    "text": "drill down to the next to the next level um and so that brings us to debug",
    "start": "998000",
    "end": "1003920"
  },
  {
    "text": "sidecars so it turns out there already exists a lot of really really powerful tools for",
    "start": "1003920",
    "end": "1010320"
  },
  {
    "start": "1005000",
    "end": "1005000"
  },
  {
    "text": "doing network debugging um some of my favorites i've listed here netstat and ss for looking at the state of",
    "start": "1010320",
    "end": "1017759"
  },
  {
    "text": "sockets on a system tcp dump wireshark and t-shark for grabbing",
    "start": "1017759",
    "end": "1023360"
  },
  {
    "text": "live captures of traffic digg for doing dns",
    "start": "1023360",
    "end": "1028720"
  },
  {
    "text": "queries and then curl and nghttp for doing http queries",
    "start": "1028720",
    "end": "1034720"
  },
  {
    "text": "and these are super super powerful tools um but they might not exist in the",
    "start": "1036720",
    "end": "1041760"
  },
  {
    "text": "container that you're debugging so ideally what you would want to do is you would want to",
    "start": "1041760",
    "end": "1047438"
  },
  {
    "text": "use exact to shell into a running container and use these tools to see what's going on but those tools",
    "start": "1047439",
    "end": "1055360"
  },
  {
    "text": "might not exist in the container in fact your container might not even have a shell so this is where you can use what's",
    "start": "1055360",
    "end": "1062080"
  },
  {
    "text": "called a debug sidecar and a debug sidecar is just another container that has all of these tools",
    "start": "1062080",
    "end": "1068160"
  },
  {
    "text": "that you would want it's got a shell it's got all these powerful networking tools installed into it and you run that debug",
    "start": "1068160",
    "end": "1074640"
  },
  {
    "text": "container inside the pod the same pod as the container you want to debug and because",
    "start": "1074640",
    "end": "1080240"
  },
  {
    "text": "they're both running in the same pod they're going to share a network namespace and what that means is that",
    "start": "1080240",
    "end": "1086400"
  },
  {
    "text": "you know they'll both share an ip address they'll be able to talk to each other on localhost and critically they'll be able to see",
    "start": "1086400",
    "end": "1092880"
  },
  {
    "text": "each other's network traffic as if they were on the same host on the same you know",
    "start": "1092880",
    "end": "1098799"
  },
  {
    "text": "network so this is a diagram of kind of what",
    "start": "1098799",
    "end": "1104559"
  },
  {
    "text": "that looks like so here we have one pod it's called the application container which has got all these connections",
    "start": "1104559",
    "end": "1110080"
  },
  {
    "text": "to it that's doing whatever it's doing that we want to debug and then we have the debug container",
    "start": "1110080",
    "end": "1115520"
  },
  {
    "text": "which is a separate container running in the same pod and that debug container's got all of the the fancy network tools that we want",
    "start": "1115520",
    "end": "1122240"
  },
  {
    "text": "and we can use coop control exec to run a shell inside that debug container",
    "start": "1122240",
    "end": "1127919"
  },
  {
    "text": "and then use all those tools to to see what's going on in the application container",
    "start": "1127919",
    "end": "1134880"
  },
  {
    "text": "um and so linkerity has a command that makes this really easy uh we can do liquidity inject and we can",
    "start": "1135520",
    "end": "1141280"
  },
  {
    "text": "use the enable debug sidecar flag and what that will do is it will just add a",
    "start": "1141280",
    "end": "1147440"
  },
  {
    "text": "sidecar container to to whatever workload you specify that has all of these you know debugging",
    "start": "1147440",
    "end": "1153520"
  },
  {
    "text": "tools um and then it's just a matter of exacting uh here's coop control exec into that debug",
    "start": "1153520",
    "end": "1160799"
  },
  {
    "text": "container which gets you a shell into that container and then you can run tcp dump or netstat or whatever tools",
    "start": "1160799",
    "end": "1167120"
  },
  {
    "text": "and kind of debug away",
    "start": "1167120",
    "end": "1171200"
  },
  {
    "text": "uh so this is really great i use this a lot because you get basically any low-level",
    "start": "1174400",
    "end": "1181120"
  },
  {
    "text": "network debugging tool you could possibly want you know anything you can put in a debug",
    "start": "1181120",
    "end": "1186400"
  },
  {
    "text": "container you can get um the other nice thing about this is it doesn't require linkerity",
    "start": "1186400",
    "end": "1193200"
  },
  {
    "text": "i just show you a command a linkerity command that lets you very easily add a debug sidecar container",
    "start": "1193200",
    "end": "1198559"
  },
  {
    "text": "but this is not necessary you could just add that sidecar container to the manifest manually",
    "start": "1198559",
    "end": "1204640"
  },
  {
    "text": "you could even roll your own debug sidecar container that has you know whatever tools uh you want uh so that's totally up to",
    "start": "1204640",
    "end": "1211679"
  },
  {
    "text": "you um the big downside here is that uh",
    "start": "1211679",
    "end": "1217200"
  },
  {
    "text": "it's it's destructive you can't add a container to a running pod you have to restart the pod in order to",
    "start": "1217200",
    "end": "1224480"
  },
  {
    "text": "add a new container to it and so this violates kind of our big thing that we wanted we can't",
    "start": "1224480",
    "end": "1230960"
  },
  {
    "text": "we can't we have to disturb the crime scene in order to add this debug container so this is kind of not going",
    "start": "1230960",
    "end": "1236320"
  },
  {
    "text": "to necessarily work for us so this brings us to direct node access",
    "start": "1236320",
    "end": "1244000"
  },
  {
    "start": "1243000",
    "end": "1243000"
  },
  {
    "text": "so if we want to use all these powerful debugging tools but we don't want to restart the pod",
    "start": "1244000",
    "end": "1249039"
  },
  {
    "text": "well what if we just ssh directly onto the node in kubernetes that's running the pod",
    "start": "1249039",
    "end": "1255520"
  },
  {
    "text": "so here's that diagram i had before we've got the application container and the debug container running inside the pod",
    "start": "1255520",
    "end": "1261120"
  },
  {
    "text": "but we know pods don't exist in a vacuum they are run on nodes so here we have a node with three pods",
    "start": "1261120",
    "end": "1268480"
  },
  {
    "text": "on it um but this diagram isn't totally accurate either because pods don't actually exist um",
    "start": "1268480",
    "end": "1276799"
  },
  {
    "text": "here's what it might kind of more realistically look like you've got the node and then you've got the container runtime on that node and it's running a",
    "start": "1276799",
    "end": "1282559"
  },
  {
    "text": "bunch of containers and you see there's no reference to pods anywhere here in this picture",
    "start": "1282559",
    "end": "1288880"
  },
  {
    "text": "and that's because a pod basically is just a network namespace uh at least for our purposes",
    "start": "1288880",
    "end": "1294799"
  },
  {
    "text": "so you'll see that some of the containers are different colors that means that they're running in different network name spaces that correspond to their pods and you",
    "start": "1294799",
    "end": "1301919"
  },
  {
    "text": "know like i said earlier a network namespace basically just means that all of those containers share an ip address they can",
    "start": "1301919",
    "end": "1307840"
  },
  {
    "text": "talk to each other on localhost and they can kind of see each other's traffic as if that was one",
    "start": "1307840",
    "end": "1313039"
  },
  {
    "text": "network entity and so if we just ssh onto the node we're not going to be in the right",
    "start": "1313039",
    "end": "1319280"
  },
  {
    "text": "network namespace to debug one of these containers we're just going to be kind of at the node level and what we really want is",
    "start": "1319280",
    "end": "1326080"
  },
  {
    "text": "some way to enter into the network namespace of the pod that we care about in order to to debug it",
    "start": "1326080",
    "end": "1333760"
  },
  {
    "text": "and it turns out there's a command that does exactly that it's called ns enter and it lets us execute commands in a",
    "start": "1333760",
    "end": "1339919"
  },
  {
    "text": "given network namespace so all you have to do is give it a process id of a process that you want to",
    "start": "1339919",
    "end": "1345679"
  },
  {
    "text": "debug and then it lets you execute a command in the network name space of that process",
    "start": "1345679",
    "end": "1352799"
  },
  {
    "text": "so here's how i would typically use that this is me after sshing into a gke node in my gke cluster",
    "start": "1353039",
    "end": "1360880"
  },
  {
    "text": "i start running docker ps which lists all the containers that are running on that node i look for the one that i want and i",
    "start": "1360880",
    "end": "1367200"
  },
  {
    "text": "note its container id then i can use a command called docker inspect to get",
    "start": "1367200",
    "end": "1372960"
  },
  {
    "text": "the process id of that container and then i can use ns enter to run whatever command i want",
    "start": "1372960",
    "end": "1378799"
  },
  {
    "text": "uh in the network namespace of that container so in this case i run tcp dump and i get you know a traffic dump of what's going",
    "start": "1378799",
    "end": "1385120"
  },
  {
    "text": "on there uh so this is really really cool um we",
    "start": "1385120",
    "end": "1390720"
  },
  {
    "text": "get all of our low-level tools we can use tcb dump or netstat or whatever we want it's totally non-destructive i didn't",
    "start": "1390720",
    "end": "1396960"
  },
  {
    "text": "have to restart anything or interrupt anything to do it um but it did require sshing directly onto",
    "start": "1396960",
    "end": "1404240"
  },
  {
    "text": "the node and so this is something you may or may not have access to depending on how your kubernetes cluster is administered",
    "start": "1404240",
    "end": "1410400"
  },
  {
    "text": "um and it is a little bit you know uh complex i had to ssh onto the node i had to get a",
    "start": "1410400",
    "end": "1416320"
  },
  {
    "text": "pid i had to you know figure out the network name space and kind of jump through these hoops in order to do it",
    "start": "1416320",
    "end": "1423360"
  },
  {
    "text": "so the last technique i want to talk about is ephemeral containers and the this is a new feature uh it was",
    "start": "1424799",
    "end": "1431360"
  },
  {
    "start": "1427000",
    "end": "1427000"
  },
  {
    "text": "introduced in alpha and kubernetes 116. um and this is basically all",
    "start": "1431360",
    "end": "1437520"
  },
  {
    "text": "all we ever wanted this lets us run add a container to a running pod without restarting it",
    "start": "1437520",
    "end": "1442720"
  },
  {
    "text": "this is kind of what we've been hoping for all along this is the best of all worlds we get all of those powerful low-level tools it's easy to use it's",
    "start": "1442720",
    "end": "1448799"
  },
  {
    "text": "non-destructive all we have to do is take that debug sidecar and just add",
    "start": "1448799",
    "end": "1454720"
  },
  {
    "text": "it to whatever container we want without restarting it and that's fantastic",
    "start": "1454720",
    "end": "1461200"
  },
  {
    "text": "so i haven't really had a lot of chance to play with this yet it's currently in alpha i'm really looking forward to it stabilizing so i can use it more because",
    "start": "1461200",
    "end": "1468799"
  },
  {
    "text": "you know it's just good to be so so great to to be able to add these containers so",
    "start": "1468799",
    "end": "1474640"
  },
  {
    "text": "easily and without disturbing the crime scene um and you can see there's a command of how",
    "start": "1474640",
    "end": "1480400"
  },
  {
    "text": "you might use it um basically you just give it a pod and a container image and it'll add that container image to that",
    "start": "1480400",
    "end": "1486159"
  },
  {
    "text": "pod it's it's really that simple",
    "start": "1486159",
    "end": "1489760"
  },
  {
    "text": "uh so in summary uh network debugging is is hard but a lot of good tools exist if",
    "start": "1491600",
    "end": "1497679"
  },
  {
    "text": "you if you know about them um lingerie tap is always kind of my first line of defense uh just because anytime",
    "start": "1497679",
    "end": "1505360"
  },
  {
    "text": "i'm using linkery it's just very available and it's very convenient and gives you a lot of data very quickly about what's going on at a",
    "start": "1505360",
    "end": "1511440"
  },
  {
    "text": "high level so for digging deeper uh i use debug sidecars",
    "start": "1511440",
    "end": "1516720"
  },
  {
    "text": "and these are really good if you're you are planning ahead if you know in advance that you're going to need them you can",
    "start": "1516720",
    "end": "1522320"
  },
  {
    "text": "add them when you create the pod and then is there collecting data the whole time or is there available for you to use you",
    "start": "1522320",
    "end": "1527840"
  },
  {
    "text": "don't need to restart it when when you trigger the bug but if you don't plan ahead and you don't know you need it in advance it",
    "start": "1527840",
    "end": "1533919"
  },
  {
    "text": "won't be there or if you're kind of debugging something that happens in the wild",
    "start": "1533919",
    "end": "1539120"
  },
  {
    "text": "you won't necessarily have that debug sidecar and so you have to fall back to doing something like ssh directly into",
    "start": "1539120",
    "end": "1544720"
  },
  {
    "text": "the node uh and using ns enter to to look inside the network name space of the pod and",
    "start": "1544720",
    "end": "1550000"
  },
  {
    "text": "see what's going on but hopefully in the future as ephemeral containers stabilize we'll be able to",
    "start": "1550000",
    "end": "1555520"
  },
  {
    "text": "use that instead and that will be a lot easier and we won't have to worry about planning ahead as much and we'll just",
    "start": "1555520",
    "end": "1560960"
  },
  {
    "text": "always have that available so that's uh something something to look",
    "start": "1560960",
    "end": "1566000"
  },
  {
    "text": "forward to so that's all i had to talk about today",
    "start": "1566000",
    "end": "1572480"
  },
  {
    "text": "i hope that you learned some you know new techniques that that might help you in your own",
    "start": "1572480",
    "end": "1577600"
  },
  {
    "text": "debugging uh or at the very least maybe you learned something about the way that pods and network namespaces work when",
    "start": "1577600",
    "end": "1583039"
  },
  {
    "text": "you can appeal back the the illusion um so thank you for attending thank you for",
    "start": "1583039",
    "end": "1589120"
  },
  {
    "text": "listening um and like i said i work on linker d we're a growing project we love",
    "start": "1589120",
    "end": "1594559"
  },
  {
    "text": "contributions from the community and people getting involved and joining us so uh please find us on slack or",
    "start": "1594559",
    "end": "1601200"
  },
  {
    "text": "github and and come participate it's a really awesome project",
    "start": "1601200",
    "end": "1606640"
  },
  {
    "text": "thanks and that concludes my presentation",
    "start": "1606640",
    "end": "1613840"
  },
  {
    "text": "all right um thanks for watching everyone i think it's time for some q and a's there's",
    "start": "1619520",
    "end": "1624799"
  },
  {
    "text": "already some great questions in here so i'll go ahead and get started",
    "start": "1624799",
    "end": "1629840"
  },
  {
    "text": "so there's one question here from deepak which says how do you avoid not disturbing",
    "start": "1629840",
    "end": "1635679"
  },
  {
    "text": "environment in production where you must restore the environment while you can continue the deep dive into post-mortem um",
    "start": "1635679",
    "end": "1643120"
  },
  {
    "text": "yes that's a really tricky question and i think that depends uh a lot on kind of the specifics of the scenario you know how critical is that",
    "start": "1643120",
    "end": "1649600"
  },
  {
    "text": "that you get back up and running you know quickly and so i think all i can really say is that you",
    "start": "1649600",
    "end": "1656000"
  },
  {
    "text": "want to just gather as much data as you can you know wow while the system's in that",
    "start": "1656000",
    "end": "1661120"
  },
  {
    "text": "state um so that you have that data kind of available to you when you go to reproduce this in like a",
    "start": "1661120",
    "end": "1668080"
  },
  {
    "text": "staging environment or a test environment so the more information you can gather you know from uh",
    "start": "1668080",
    "end": "1673200"
  },
  {
    "text": "you know these tools if you have them available like tcp dump or or you know picking up the logs and the",
    "start": "1673200",
    "end": "1678559"
  },
  {
    "text": "metrics uh that's to help you more accurately reproduce that scenario in a controlled",
    "start": "1678559",
    "end": "1685120"
  },
  {
    "text": "environment",
    "start": "1685120",
    "end": "1687600"
  },
  {
    "text": "guy asks how can you correlate messages using tap so that's a great question so when we",
    "start": "1691440",
    "end": "1697360"
  },
  {
    "text": "were looking at that uh linker d tap stream we were just seeing the communication kind of between two",
    "start": "1697360",
    "end": "1702559"
  },
  {
    "text": "services um and so often you know that doesn't exist in a vacuum you know one request",
    "start": "1702559",
    "end": "1708640"
  },
  {
    "text": "will trigger a service to send it to another service which will send a request to another service and so on",
    "start": "1708640",
    "end": "1713840"
  },
  {
    "text": "um and that's where a tool like distributed tracing is really helpful because you can kind of follow a",
    "start": "1713840",
    "end": "1719200"
  },
  {
    "text": "request as it travels through the system and see all the things that branch off of it and everything that it triggers",
    "start": "1719200",
    "end": "1725840"
  },
  {
    "text": "so distributed tracing really is the right tool for that job um tap itself doesn't really have a way to",
    "start": "1725840",
    "end": "1731600"
  },
  {
    "text": "let you correlate these requests um but i usually don't use it in that way i usually look at",
    "start": "1731600",
    "end": "1736799"
  },
  {
    "text": "you know a single specific service look at its inputs and look at its outputs using tap",
    "start": "1736799",
    "end": "1741919"
  },
  {
    "text": "and try to figure out you know whether the requests and responses that it's sending uh are correct rather than trying to",
    "start": "1741919",
    "end": "1748399"
  },
  {
    "text": "like trace through the whole system because i'm usually trying to narrow down the investigation",
    "start": "1748399",
    "end": "1753679"
  },
  {
    "text": "at that point",
    "start": "1753679",
    "end": "1756240"
  },
  {
    "text": "uh camilo asks together with the message bodies are you planning features related to use it to replay flows to run",
    "start": "1758799",
    "end": "1765840"
  },
  {
    "text": "simulations to reproduce bugs yeah this is this is great this is really cool um",
    "start": "1765840",
    "end": "1771279"
  },
  {
    "text": "so the idea here is that you know once uh linkery tap is able to emit not just metadata but",
    "start": "1771279",
    "end": "1777440"
  },
  {
    "text": "full request and response bodies theoretically we could record those",
    "start": "1777440",
    "end": "1782480"
  },
  {
    "text": "bodies and then replay them so in order like basically do like a recording of some traffic and then replay it at a later",
    "start": "1782480",
    "end": "1788799"
  },
  {
    "text": "time to reproduce a bug or to you know use it as part of some kind of",
    "start": "1788799",
    "end": "1794799"
  },
  {
    "text": "integration test suite and yeah uh that's definitely been something that's on my mind i think that would be really really cool",
    "start": "1794799",
    "end": "1801039"
  },
  {
    "text": "and definitely something that will be possible once once bodies are supported um yeah so for sure",
    "start": "1801039",
    "end": "1809840"
  },
  {
    "text": "um let's see uh jan asks how much history is being kept so with linkedin tap uh there's no",
    "start": "1810880",
    "end": "1816799"
  },
  {
    "text": "history being kept it's all kind of just live data and it's just streamed out to you know either to the web dashboard",
    "start": "1816799",
    "end": "1822559"
  },
  {
    "text": "or to the cli um and so at that point it's up to you whether you just kind of want to",
    "start": "1822559",
    "end": "1827679"
  },
  {
    "text": "you know consume it live or whether you want to you know pipe it off into some kind of storage and and you know store it somewhere to",
    "start": "1827679",
    "end": "1834320"
  },
  {
    "text": "review it later it's kind of up to you as the consumer of that data it's not you know automatically stored anywhere it's just totally",
    "start": "1834320",
    "end": "1840720"
  },
  {
    "text": "live data",
    "start": "1840720",
    "end": "1843278"
  },
  {
    "text": "uh let's see there's a question here from armin uh who asks how does the debug sidecar work with",
    "start": "1849120",
    "end": "1854159"
  },
  {
    "text": "non-privileged pods or containers um the answer is that it doesn't uh you definitely do need elevated privilege",
    "start": "1854159",
    "end": "1860720"
  },
  {
    "text": "privileges to run these kind of uh network debugging tools so that's i guess another downside that",
    "start": "1860720",
    "end": "1868000"
  },
  {
    "text": "i didn't really talk about or other restrictions that you do need kind of elevated access to",
    "start": "1868000",
    "end": "1873360"
  },
  {
    "text": "to run these network level tools",
    "start": "1873360",
    "end": "1879840"
  },
  {
    "text": "uh let's see uh ma asks if it's possible to get a copy of",
    "start": "1886399",
    "end": "1891440"
  },
  {
    "text": "the slides i think the slides are linked uh in shed ins in sketch sheds",
    "start": "1891440",
    "end": "1896799"
  },
  {
    "text": "um so if you go to the uh the page for this talk you should be",
    "start": "1896799",
    "end": "1902640"
  },
  {
    "text": "able to download the slides there",
    "start": "1902640",
    "end": "1907840"
  },
  {
    "text": "uh there's a question here from blase asks whether uh ephemeral containers resolve",
    "start": "1911279",
    "end": "1917440"
  },
  {
    "text": "the requirement and yes uh they do uh that's kind of the great thing about ephemeral containers",
    "start": "1917440",
    "end": "1923440"
  },
  {
    "text": "is that they resolve the requirement of needing to restart the font so that's kind of what we've been after this whole time",
    "start": "1923440",
    "end": "1928799"
  },
  {
    "text": "and so uh i'm really excited to to play some more with ephemeral containers as they stabilize",
    "start": "1928799",
    "end": "1934799"
  },
  {
    "text": "they'll just make using debug sidecar so much easier because you don't need to kind of plan in advance you don't need",
    "start": "1934799",
    "end": "1939919"
  },
  {
    "text": "to have the foresight that you need to you know add this container before before the problem",
    "start": "1939919",
    "end": "1945760"
  },
  {
    "text": "comes up",
    "start": "1945760",
    "end": "1949840"
  },
  {
    "text": "all right i think that's uh i think that's most of the questions i'm going to be on in the slack uh so if",
    "start": "1955200",
    "end": "1961840"
  },
  {
    "text": "you have more questions that i didn't answer here or if you think of something or if you just want to come say hi",
    "start": "1961840",
    "end": "1966880"
  },
  {
    "text": "i'll be hanging out in the slack for for a little while so please come by say hello and and i'm happy to chat more about",
    "start": "1966880",
    "end": "1973279"
  },
  {
    "text": "non-forensic or sorry non-destructive forensics",
    "start": "1973279",
    "end": "1977840"
  }
]