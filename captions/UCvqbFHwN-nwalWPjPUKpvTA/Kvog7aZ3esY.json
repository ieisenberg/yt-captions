[
  {
    "start": "0",
    "end": "18000"
  },
  {
    "text": "hello my name is carlos sanchez and i'm",
    "start": "160",
    "end": "2639"
  },
  {
    "text": "here to talk to you about dedicated",
    "start": "2639",
    "end": "4480"
  },
  {
    "text": "infrastructure",
    "start": "4480",
    "end": "5520"
  },
  {
    "text": "in a multi-tenant world i work",
    "start": "5520",
    "end": "8639"
  },
  {
    "text": "at adobe and i'm going to talk to you",
    "start": "8639",
    "end": "12080"
  },
  {
    "text": "about some of the things we are building",
    "start": "12080",
    "end": "15679"
  },
  {
    "text": "there in one of the services i'm a cloud",
    "start": "15679",
    "end": "19279"
  },
  {
    "text": "engineer",
    "start": "19279",
    "end": "20320"
  },
  {
    "text": "at the adobe experience manager cloud",
    "start": "20320",
    "end": "22720"
  },
  {
    "text": "service",
    "start": "22720",
    "end": "23600"
  },
  {
    "text": "and i'm a long time open source",
    "start": "23600",
    "end": "26240"
  },
  {
    "text": "contributor",
    "start": "26240",
    "end": "27199"
  },
  {
    "text": "i started the jenkins kubernetes plugin",
    "start": "27199",
    "end": "30480"
  },
  {
    "text": "that allow you to run jenkins agents on",
    "start": "30480",
    "end": "33040"
  },
  {
    "text": "kubernetes",
    "start": "33040",
    "end": "34239"
  },
  {
    "text": "but i've been a long time contributor at",
    "start": "34239",
    "end": "37040"
  },
  {
    "text": "other projects like",
    "start": "37040",
    "end": "38160"
  },
  {
    "text": "apache maven puppet and a few other",
    "start": "38160",
    "end": "41120"
  },
  {
    "text": "things",
    "start": "41120",
    "end": "41840"
  },
  {
    "text": "just so you know i'm gonna do a brief",
    "start": "41840",
    "end": "44960"
  },
  {
    "start": "42000",
    "end": "92000"
  },
  {
    "text": "introduction on what adopt experience",
    "start": "44960",
    "end": "47120"
  },
  {
    "text": "manager is",
    "start": "47120",
    "end": "48480"
  },
  {
    "text": "this is a content management system um",
    "start": "48480",
    "end": "51760"
  },
  {
    "text": "that does digital asset management",
    "start": "51760",
    "end": "54719"
  },
  {
    "text": "digital enrollment",
    "start": "54719",
    "end": "56000"
  },
  {
    "text": "forms and it's used by many fortune 100",
    "start": "56000",
    "end": "59840"
  },
  {
    "text": "companies this is the product that i",
    "start": "59840",
    "end": "61600"
  },
  {
    "text": "work on",
    "start": "61600",
    "end": "62399"
  },
  {
    "text": "at adobe and my team",
    "start": "62399",
    "end": "65439"
  },
  {
    "text": "it's um from a technical point of view",
    "start": "65439",
    "end": "67600"
  },
  {
    "text": "it's an existing distributed",
    "start": "67600",
    "end": "69200"
  },
  {
    "text": "java osgi application that uses",
    "start": "69200",
    "end": "72400"
  },
  {
    "text": "a lot of open source components from the",
    "start": "72400",
    "end": "74799"
  },
  {
    "text": "apache software foundation",
    "start": "74799",
    "end": "77119"
  },
  {
    "text": "it also has a huge market for extension",
    "start": "77119",
    "end": "80640"
  },
  {
    "text": "developers that write modules that run",
    "start": "80640",
    "end": "84240"
  },
  {
    "text": "in process on adobe experience manager",
    "start": "84240",
    "end": "87439"
  },
  {
    "text": "and this is important uh you'll see",
    "start": "87439",
    "end": "90720"
  },
  {
    "text": "later we are running",
    "start": "90720",
    "end": "94159"
  },
  {
    "start": "92000",
    "end": "104000"
  },
  {
    "text": "a adobe experience manager cloud on",
    "start": "94159",
    "end": "96560"
  },
  {
    "text": "kubernetes",
    "start": "96560",
    "end": "97759"
  },
  {
    "text": "and this has been launched",
    "start": "97759",
    "end": "101840"
  },
  {
    "text": "over a year ago and this is all running",
    "start": "101840",
    "end": "105280"
  },
  {
    "text": "on asia",
    "start": "105280",
    "end": "106240"
  },
  {
    "text": "we have more than 14 clusters right now",
    "start": "106240",
    "end": "109600"
  },
  {
    "text": "and growing multiple regions united",
    "start": "109600",
    "end": "112880"
  },
  {
    "text": "states europe australia japan",
    "start": "112880",
    "end": "115040"
  },
  {
    "text": "and wikipedi more and",
    "start": "115040",
    "end": "118479"
  },
  {
    "text": "also something to note is that adobe has",
    "start": "118479",
    "end": "120880"
  },
  {
    "text": "a dedicated team managing clustering",
    "start": "120880",
    "end": "122799"
  },
  {
    "text": "clusters for multiple products so we are",
    "start": "122799",
    "end": "126320"
  },
  {
    "text": "one of the customers of this other theme",
    "start": "126320",
    "end": "128879"
  },
  {
    "text": "so we get the clusters",
    "start": "128879",
    "end": "130800"
  },
  {
    "text": "and this uh defines what we can do",
    "start": "130800",
    "end": "134239"
  },
  {
    "text": "in the clusters right so we don't have",
    "start": "134239",
    "end": "136480"
  },
  {
    "text": "full access to",
    "start": "136480",
    "end": "137680"
  },
  {
    "text": "to the kubernetes clusters important",
    "start": "137680",
    "end": "140000"
  },
  {
    "start": "139000",
    "end": "157000"
  },
  {
    "text": "thing customers can run their own code",
    "start": "140000",
    "end": "142319"
  },
  {
    "text": "we have limited cluster permissions for",
    "start": "142319",
    "end": "145280"
  },
  {
    "text": "security",
    "start": "145280",
    "end": "146720"
  },
  {
    "text": "and another requirement is that traffic",
    "start": "146720",
    "end": "148720"
  },
  {
    "text": "leaving the the classes must be",
    "start": "148720",
    "end": "150879"
  },
  {
    "text": "encrypted for for compliance",
    "start": "150879",
    "end": "154640"
  },
  {
    "text": "so again it's going to be uh interesting",
    "start": "154640",
    "end": "158000"
  },
  {
    "start": "157000",
    "end": "172000"
  },
  {
    "text": "later on as",
    "start": "158000",
    "end": "158879"
  },
  {
    "text": "as i explained what we built we use",
    "start": "158879",
    "end": "161920"
  },
  {
    "text": "namespaces to provide scopes so the new",
    "start": "161920",
    "end": "165360"
  },
  {
    "text": "spaces increments give us",
    "start": "165360",
    "end": "167120"
  },
  {
    "text": "network isolation quartus permissions",
    "start": "167120",
    "end": "171200"
  },
  {
    "text": "and if you want to know more details",
    "start": "171200",
    "end": "174560"
  },
  {
    "text": "on what our kubernetes setup you can",
    "start": "174560",
    "end": "177200"
  },
  {
    "text": "watch my kubecon",
    "start": "177200",
    "end": "178480"
  },
  {
    "text": "2020 talk and you'll find there",
    "start": "178480",
    "end": "182159"
  },
  {
    "text": "that i went over all the things that we",
    "start": "182159",
    "end": "185680"
  },
  {
    "text": "have built on top of kubernetes to to",
    "start": "185680",
    "end": "187920"
  },
  {
    "text": "support the am",
    "start": "187920",
    "end": "189440"
  },
  {
    "text": "and this talk is gonna just focus on the",
    "start": "189440",
    "end": "192560"
  },
  {
    "text": "on what we are doing with with envoy",
    "start": "192560",
    "end": "195680"
  },
  {
    "start": "195000",
    "end": "291000"
  },
  {
    "text": "the requirement we got from customers is",
    "start": "195680",
    "end": "198000"
  },
  {
    "text": "that they wanted to have",
    "start": "198000",
    "end": "199599"
  },
  {
    "text": "a dedicated infrastructure a dedicated",
    "start": "199599",
    "end": "202560"
  },
  {
    "text": "infrastructure",
    "start": "202560",
    "end": "203920"
  },
  {
    "text": "boiled down to dedicated aggress ips",
    "start": "203920",
    "end": "207599"
  },
  {
    "text": "so traffic going out of the cluster",
    "start": "207599",
    "end": "210799"
  },
  {
    "text": "they wanted to have a specific ip that",
    "start": "210799",
    "end": "213360"
  },
  {
    "text": "is not shared",
    "start": "213360",
    "end": "214239"
  },
  {
    "text": "across other customers for multiple",
    "start": "214239",
    "end": "217920"
  },
  {
    "text": "reasons",
    "start": "217920",
    "end": "218879"
  },
  {
    "text": "for instance getting rate limited",
    "start": "218879",
    "end": "222959"
  },
  {
    "text": "when hitting different api servers",
    "start": "222959",
    "end": "226640"
  },
  {
    "text": "maybe filtering at the network level in",
    "start": "226640",
    "end": "229760"
  },
  {
    "text": "some firewalls",
    "start": "229760",
    "end": "231440"
  },
  {
    "text": "or whatever there's there's a few",
    "start": "231440",
    "end": "233280"
  },
  {
    "text": "reasons to do that",
    "start": "233280",
    "end": "235519"
  },
  {
    "text": "and they also are interested in having",
    "start": "235519",
    "end": "238560"
  },
  {
    "text": "private connections to their data",
    "start": "238560",
    "end": "240799"
  },
  {
    "text": "centers or other cloud services",
    "start": "240799",
    "end": "243680"
  },
  {
    "text": "things like virtual networking network",
    "start": "243680",
    "end": "246640"
  },
  {
    "text": "peering",
    "start": "246640",
    "end": "248319"
  },
  {
    "text": "private link express route direct",
    "start": "248319",
    "end": "250959"
  },
  {
    "text": "connect all these services that cloud",
    "start": "250959",
    "end": "252720"
  },
  {
    "text": "providers",
    "start": "252720",
    "end": "253439"
  },
  {
    "text": "offers offers customers",
    "start": "253439",
    "end": "256799"
  },
  {
    "text": "to to set up their virtual networking",
    "start": "256799",
    "end": "259919"
  },
  {
    "text": "across",
    "start": "259919",
    "end": "260560"
  },
  {
    "text": "across multiple locations and vpn",
    "start": "260560",
    "end": "264560"
  },
  {
    "text": "another one whether they want people to",
    "start": "264560",
    "end": "267919"
  },
  {
    "text": "access",
    "start": "267919",
    "end": "268560"
  },
  {
    "text": "the service through vpn only or connect",
    "start": "268560",
    "end": "272080"
  },
  {
    "text": "to",
    "start": "272080",
    "end": "273199"
  },
  {
    "text": "their internal systems through some vpn",
    "start": "273199",
    "end": "276560"
  },
  {
    "text": "so this came as a requirement",
    "start": "276560",
    "end": "280000"
  },
  {
    "text": "sort of and we came",
    "start": "280000",
    "end": "283440"
  },
  {
    "text": "and and worked on iteratively",
    "start": "283440",
    "end": "287680"
  },
  {
    "text": "on how to how to best support this",
    "start": "287680",
    "end": "291840"
  },
  {
    "start": "291000",
    "end": "311000"
  },
  {
    "text": "the first version we built was running",
    "start": "291840",
    "end": "294800"
  },
  {
    "text": "squid proxies",
    "start": "294800",
    "end": "296240"
  },
  {
    "text": "in virtual machines that",
    "start": "296240",
    "end": "299280"
  },
  {
    "text": "were connected to the internet and these",
    "start": "299280",
    "end": "301199"
  },
  {
    "text": "virtual machines would give",
    "start": "301199",
    "end": "303120"
  },
  {
    "text": "traffic going through the squid servers",
    "start": "303120",
    "end": "305600"
  },
  {
    "text": "their",
    "start": "305600",
    "end": "306240"
  },
  {
    "text": "own and dedicated ip address so how that",
    "start": "306240",
    "end": "310240"
  },
  {
    "text": "looked like um we have",
    "start": "310240",
    "end": "313280"
  },
  {
    "start": "311000",
    "end": "511000"
  },
  {
    "text": "kubernetes on one side we have bots",
    "start": "313280",
    "end": "315680"
  },
  {
    "text": "running",
    "start": "315680",
    "end": "316880"
  },
  {
    "text": "adobe experience manager inside the",
    "start": "316880",
    "end": "318720"
  },
  {
    "text": "kubernetes cluster",
    "start": "318720",
    "end": "320479"
  },
  {
    "text": "traffic is going out through the",
    "start": "320479",
    "end": "325360"
  },
  {
    "text": "through the load balancer of the cluster",
    "start": "325360",
    "end": "328160"
  },
  {
    "text": "and this traffic",
    "start": "328160",
    "end": "329440"
  },
  {
    "text": "goes into a",
    "start": "329440",
    "end": "332639"
  },
  {
    "text": "virtual network where we run multiple",
    "start": "332639",
    "end": "336320"
  },
  {
    "text": "squid vms skill sets how to scale sets",
    "start": "336320",
    "end": "340639"
  },
  {
    "text": "one for each customer one for each",
    "start": "340639",
    "end": "342880"
  },
  {
    "text": "tenant",
    "start": "342880",
    "end": "345039"
  },
  {
    "text": "so the traffic goes from the cluster",
    "start": "345039",
    "end": "347759"
  },
  {
    "text": "into the",
    "start": "347759",
    "end": "349600"
  },
  {
    "text": "virtual machine squid servers",
    "start": "349600",
    "end": "352639"
  },
  {
    "text": "and then it goes out",
    "start": "352639",
    "end": "356000"
  },
  {
    "text": "of the load balancer in front of the",
    "start": "356000",
    "end": "360160"
  },
  {
    "text": "squid machines the load balancer is both",
    "start": "360160",
    "end": "364479"
  },
  {
    "text": "for incoming traffic to the squid and",
    "start": "364479",
    "end": "367600"
  },
  {
    "text": "uh outgoing traffic so that load",
    "start": "367600",
    "end": "370479"
  },
  {
    "text": "balancers",
    "start": "370479",
    "end": "371440"
  },
  {
    "text": "uh has uh has a private not a private a",
    "start": "371440",
    "end": "374960"
  },
  {
    "text": "public dedicated ip",
    "start": "374960",
    "end": "377520"
  },
  {
    "text": "for that uh auto scale set of virtual",
    "start": "377520",
    "end": "380800"
  },
  {
    "text": "machines",
    "start": "380800",
    "end": "381520"
  },
  {
    "text": "so we run out the skill set uh because",
    "start": "381520",
    "end": "384720"
  },
  {
    "text": "we don't want to have just one squid",
    "start": "384720",
    "end": "386720"
  },
  {
    "text": "server",
    "start": "386720",
    "end": "387680"
  },
  {
    "text": "and when it goes down or whatever",
    "start": "387680",
    "end": "389520"
  },
  {
    "text": "happens or if we want to run upgrades",
    "start": "389520",
    "end": "391759"
  },
  {
    "text": "obviously we want more than one running",
    "start": "391759",
    "end": "394160"
  },
  {
    "text": "and we want it to automatically scale on",
    "start": "394160",
    "end": "396960"
  },
  {
    "text": "demand if there's a lot of",
    "start": "396960",
    "end": "399360"
  },
  {
    "text": "traffic so again traffic going",
    "start": "399360",
    "end": "403039"
  },
  {
    "text": "coming from kubernetes",
    "start": "403039",
    "end": "406080"
  },
  {
    "text": "into a load balancer that is in front of",
    "start": "406080",
    "end": "410080"
  },
  {
    "text": "a squid servers",
    "start": "410080",
    "end": "411280"
  },
  {
    "text": "with vms and then from there it goes out",
    "start": "411280",
    "end": "414639"
  },
  {
    "text": "to the internet through the load",
    "start": "414639",
    "end": "416000"
  },
  {
    "text": "balancer that has",
    "start": "416000",
    "end": "417039"
  },
  {
    "text": "a dedicated ip address",
    "start": "417039",
    "end": "421039"
  },
  {
    "text": "so that's what gives it the load",
    "start": "421039",
    "end": "422960"
  },
  {
    "text": "balancer is what gives it",
    "start": "422960",
    "end": "424400"
  },
  {
    "text": "the dedicated ip and there's a skill set",
    "start": "424400",
    "end": "428080"
  },
  {
    "text": "for each tenant",
    "start": "428080",
    "end": "431039"
  },
  {
    "text": "the java virtual machines are configured",
    "start": "432160",
    "end": "435440"
  },
  {
    "text": "with the squid as an http proxy",
    "start": "435440",
    "end": "438080"
  },
  {
    "text": "and this becomes transparent for the",
    "start": "438080",
    "end": "440880"
  },
  {
    "text": "customer",
    "start": "440880",
    "end": "442080"
  },
  {
    "text": "adobe experience manager i mentioned",
    "start": "442080",
    "end": "443840"
  },
  {
    "text": "before it's a java application",
    "start": "443840",
    "end": "445680"
  },
  {
    "text": "you set some system properties and then",
    "start": "445680",
    "end": "448639"
  },
  {
    "text": "every connection that goes out to the",
    "start": "448639",
    "end": "450479"
  },
  {
    "text": "internet",
    "start": "450479",
    "end": "451840"
  },
  {
    "text": "is going to use that proxy so all the",
    "start": "451840",
    "end": "454720"
  },
  {
    "text": "traffic is going",
    "start": "454720",
    "end": "455919"
  },
  {
    "text": "transparently into the squid vms",
    "start": "455919",
    "end": "459680"
  },
  {
    "text": "and then out to the to the internet",
    "start": "459680",
    "end": "464000"
  },
  {
    "text": "we use kubernetes network policies to",
    "start": "464000",
    "end": "466800"
  },
  {
    "text": "prevent one tenant to access",
    "start": "466800",
    "end": "469360"
  },
  {
    "text": "a squid proxy from a different tenant so",
    "start": "469360",
    "end": "472400"
  },
  {
    "text": "that's how we limit",
    "start": "472400",
    "end": "476240"
  },
  {
    "text": "or prevent that one tenant uses the",
    "start": "476240",
    "end": "478960"
  },
  {
    "text": "dedicated ip of",
    "start": "478960",
    "end": "480319"
  },
  {
    "text": "another tenant",
    "start": "480319",
    "end": "483120"
  },
  {
    "text": "and as i mentioned",
    "start": "484319",
    "end": "487520"
  },
  {
    "text": "each tenant gets auto skill set and",
    "start": "487520",
    "end": "490800"
  },
  {
    "text": "their own load balancer with the with a",
    "start": "490800",
    "end": "493120"
  },
  {
    "text": "dedicated ip",
    "start": "493120",
    "end": "495919"
  },
  {
    "text": "all the virtual machines run into a",
    "start": "495919",
    "end": "498560"
  },
  {
    "text": "virtual network that is paired to the",
    "start": "498560",
    "end": "500160"
  },
  {
    "text": "kubernetes cluster",
    "start": "500160",
    "end": "501440"
  },
  {
    "text": "virtual network and so this gives a",
    "start": "501440",
    "end": "505199"
  },
  {
    "text": "high speed low latency private",
    "start": "505199",
    "end": "507919"
  },
  {
    "text": "connections between both",
    "start": "507919",
    "end": "509919"
  },
  {
    "text": "virtual networks what is good about this",
    "start": "509919",
    "end": "513680"
  },
  {
    "start": "511000",
    "end": "528000"
  },
  {
    "text": "solution",
    "start": "513680",
    "end": "514399"
  },
  {
    "text": "it's a simple and transparent jvm",
    "start": "514399",
    "end": "517599"
  },
  {
    "text": "configuration",
    "start": "517599",
    "end": "519039"
  },
  {
    "text": "using the system properties that java",
    "start": "519039",
    "end": "521360"
  },
  {
    "text": "supports",
    "start": "521360",
    "end": "522719"
  },
  {
    "text": "and the v-net bearing the virtual",
    "start": "522719",
    "end": "524480"
  },
  {
    "text": "network period makes the traffic all the",
    "start": "524480",
    "end": "526320"
  },
  {
    "text": "traffic",
    "start": "526320",
    "end": "526800"
  },
  {
    "text": "private on the other hand",
    "start": "526800",
    "end": "531600"
  },
  {
    "start": "528000",
    "end": "606000"
  },
  {
    "text": "we have some issues like proxy",
    "start": "531600",
    "end": "534080"
  },
  {
    "text": "authentication",
    "start": "534080",
    "end": "535040"
  },
  {
    "text": "authorization is not really well",
    "start": "535040",
    "end": "537040"
  },
  {
    "text": "supported",
    "start": "537040",
    "end": "538240"
  },
  {
    "text": "on java or other or squid",
    "start": "538240",
    "end": "542320"
  },
  {
    "text": "so we need to use network policies to",
    "start": "542320",
    "end": "546000"
  },
  {
    "text": "to prevent one tenant traffic going",
    "start": "546000",
    "end": "548880"
  },
  {
    "text": "throughout different tenants uh",
    "start": "548880",
    "end": "551120"
  },
  {
    "text": "squids squid vms and this complicates a",
    "start": "551120",
    "end": "554640"
  },
  {
    "text": "bit the setup",
    "start": "554640",
    "end": "556399"
  },
  {
    "text": "it only works for http and hps protocols",
    "start": "556399",
    "end": "560320"
  },
  {
    "text": "and if uh if somebody by mistake were to",
    "start": "560320",
    "end": "564240"
  },
  {
    "text": "use http",
    "start": "564240",
    "end": "565360"
  },
  {
    "text": "protocol uh the traffic would not",
    "start": "565360",
    "end": "567760"
  },
  {
    "text": "encrypt it",
    "start": "567760",
    "end": "568720"
  },
  {
    "text": "but this is kind of a problem in general",
    "start": "568720",
    "end": "571839"
  },
  {
    "text": "that you don't want",
    "start": "571839",
    "end": "573680"
  },
  {
    "text": "i mean people should not be using http",
    "start": "573680",
    "end": "577279"
  },
  {
    "text": "and it doesn't support other use cases",
    "start": "577279",
    "end": "579839"
  },
  {
    "text": "like",
    "start": "579839",
    "end": "580560"
  },
  {
    "text": "virtual private network or private",
    "start": "580560",
    "end": "582480"
  },
  {
    "text": "connections",
    "start": "582480",
    "end": "584560"
  },
  {
    "text": "because it's uh everything is running on",
    "start": "584560",
    "end": "588160"
  },
  {
    "text": "on the same virtual network all the",
    "start": "588160",
    "end": "590080"
  },
  {
    "text": "proxies all the vms are running on the",
    "start": "590080",
    "end": "591839"
  },
  {
    "text": "same virtual network",
    "start": "591839",
    "end": "593360"
  },
  {
    "text": "because that makes it easy to do the",
    "start": "593360",
    "end": "595200"
  },
  {
    "text": "peering to the kubernetes network",
    "start": "595200",
    "end": "597440"
  },
  {
    "text": "but in turn makes it",
    "start": "597440",
    "end": "600560"
  },
  {
    "text": "hard impossible to do other other use",
    "start": "600560",
    "end": "603040"
  },
  {
    "text": "cases",
    "start": "603040",
    "end": "605839"
  },
  {
    "start": "606000",
    "end": "629000"
  },
  {
    "text": "so we came up with a second iteration",
    "start": "606800",
    "end": "611200"
  },
  {
    "text": "using envoy so we it's a very similar",
    "start": "611200",
    "end": "614880"
  },
  {
    "text": "architecture",
    "start": "614880",
    "end": "616160"
  },
  {
    "text": "but we are running envoy on the virtual",
    "start": "616160",
    "end": "619040"
  },
  {
    "text": "machines",
    "start": "619040",
    "end": "620560"
  },
  {
    "text": "and also running envoy as both side",
    "start": "620560",
    "end": "622880"
  },
  {
    "text": "cards to",
    "start": "622880",
    "end": "623760"
  },
  {
    "text": "other experience manager pods",
    "start": "623760",
    "end": "627839"
  },
  {
    "text": "containers so",
    "start": "627839",
    "end": "630959"
  },
  {
    "start": "629000",
    "end": "952000"
  },
  {
    "text": "the architecture is similar we have on",
    "start": "630959",
    "end": "634560"
  },
  {
    "text": "one hand the coronarius prox kubernetes",
    "start": "634560",
    "end": "637440"
  },
  {
    "text": "cluster",
    "start": "637440",
    "end": "638640"
  },
  {
    "text": "on the other hand we get we have a",
    "start": "638640",
    "end": "640959"
  },
  {
    "text": "virtual network",
    "start": "640959",
    "end": "642640"
  },
  {
    "text": "and in this time we give one virtual",
    "start": "642640",
    "end": "645200"
  },
  {
    "text": "network for each tenant",
    "start": "645200",
    "end": "647040"
  },
  {
    "text": "a dedicated virtual network for each",
    "start": "647040",
    "end": "648959"
  },
  {
    "text": "tenant",
    "start": "648959",
    "end": "650800"
  },
  {
    "text": "we have a virtual machine iot skill set",
    "start": "650800",
    "end": "653600"
  },
  {
    "text": "as before",
    "start": "653600",
    "end": "654480"
  },
  {
    "text": "but this time running envoy for the same",
    "start": "654480",
    "end": "657120"
  },
  {
    "text": "reasons i mean we don't want",
    "start": "657120",
    "end": "659279"
  },
  {
    "text": "one vm to go down and this this also",
    "start": "659279",
    "end": "661920"
  },
  {
    "text": "runs across",
    "start": "661920",
    "end": "663200"
  },
  {
    "text": "multiple availability sounds and",
    "start": "663200",
    "end": "667839"
  },
  {
    "text": "it can auto-scale if there's a lot of",
    "start": "668000",
    "end": "670079"
  },
  {
    "text": "traffic",
    "start": "670079",
    "end": "672560"
  },
  {
    "text": "having one v-net uh for each customer",
    "start": "673120",
    "end": "676480"
  },
  {
    "text": "allows us to also",
    "start": "676480",
    "end": "677920"
  },
  {
    "text": "uh have more",
    "start": "677920",
    "end": "682000"
  },
  {
    "text": "open opportunities to grow the the",
    "start": "682160",
    "end": "684800"
  },
  {
    "text": "architecture and support more use cases",
    "start": "684800",
    "end": "688079"
  },
  {
    "text": "so each tenon gets the virtual network",
    "start": "688079",
    "end": "690800"
  },
  {
    "text": "an auto scale set",
    "start": "690800",
    "end": "692240"
  },
  {
    "text": "and load balancers",
    "start": "692240",
    "end": "695760"
  },
  {
    "text": "on the on the right hand side",
    "start": "697200",
    "end": "700320"
  },
  {
    "text": "what you can see is that the virtual",
    "start": "700320",
    "end": "701920"
  },
  {
    "text": "network can be privately connected to",
    "start": "701920",
    "end": "703680"
  },
  {
    "text": "the customer network",
    "start": "703680",
    "end": "705360"
  },
  {
    "text": "so cloud providers allow you to",
    "start": "705360",
    "end": "708640"
  },
  {
    "text": "have v-net peering allow you to have",
    "start": "708640",
    "end": "712240"
  },
  {
    "text": "vpn or any of the private link",
    "start": "712240",
    "end": "716000"
  },
  {
    "text": "express routes all these things at the",
    "start": "716000",
    "end": "718240"
  },
  {
    "text": "virtual network level",
    "start": "718240",
    "end": "720240"
  },
  {
    "text": "so you could you can do it as a service",
    "start": "720240",
    "end": "723920"
  },
  {
    "text": "you can just",
    "start": "723920",
    "end": "724720"
  },
  {
    "text": "tell azure iws google",
    "start": "724720",
    "end": "728800"
  },
  {
    "text": "connect this virtual network to",
    "start": "728800",
    "end": "731200"
  },
  {
    "text": "something else that the customer already",
    "start": "731200",
    "end": "733200"
  },
  {
    "text": "has",
    "start": "733200",
    "end": "734480"
  },
  {
    "text": "and so this allows us to have all these",
    "start": "734480",
    "end": "737279"
  },
  {
    "text": "other use cases that in the previous",
    "start": "737279",
    "end": "739360"
  },
  {
    "text": "iteration we didn't have",
    "start": "739360",
    "end": "744240"
  },
  {
    "text": "the load balancer in front of the",
    "start": "744240",
    "end": "746480"
  },
  {
    "text": "virtual machines",
    "start": "746480",
    "end": "747760"
  },
  {
    "text": "uh as before gives the a dedicated",
    "start": "747760",
    "end": "751120"
  },
  {
    "text": "public egress ip",
    "start": "751120",
    "end": "753040"
  },
  {
    "text": "to the traffic going out of envoy",
    "start": "753040",
    "end": "756320"
  },
  {
    "text": "so once the traffic is on the virtual",
    "start": "756320",
    "end": "758320"
  },
  {
    "text": "machines it can go out to the internet",
    "start": "758320",
    "end": "760639"
  },
  {
    "text": "with a own dedicated ip something that",
    "start": "760639",
    "end": "762959"
  },
  {
    "text": "we already had in the previous version",
    "start": "762959",
    "end": "764880"
  },
  {
    "text": "but we still support put support",
    "start": "764880",
    "end": "769600"
  },
  {
    "text": "we have a private load balancer that is",
    "start": "770800",
    "end": "773440"
  },
  {
    "text": "connected",
    "start": "773440",
    "end": "774480"
  },
  {
    "text": "uh also to the customer side",
    "start": "774480",
    "end": "778560"
  },
  {
    "text": "network so this load balancer",
    "start": "778560",
    "end": "781600"
  },
  {
    "text": "all the traffic coming in from envoy",
    "start": "781600",
    "end": "784079"
  },
  {
    "text": "into the customer network",
    "start": "784079",
    "end": "785680"
  },
  {
    "text": "with whatever of the connectivity",
    "start": "785680",
    "end": "788480"
  },
  {
    "text": "options that the cloud provider has",
    "start": "788480",
    "end": "791040"
  },
  {
    "text": "this would give all the traffic a",
    "start": "791040",
    "end": "792720"
  },
  {
    "text": "dedicated private equals ip",
    "start": "792720",
    "end": "796000"
  },
  {
    "text": "so on the previous load balancer we",
    "start": "796000",
    "end": "799120"
  },
  {
    "text": "would get a public ap",
    "start": "799120",
    "end": "800560"
  },
  {
    "text": "of all the traffic going into into the",
    "start": "800560",
    "end": "802959"
  },
  {
    "text": "internet",
    "start": "802959",
    "end": "804079"
  },
  {
    "text": "and on this case uh we would get a",
    "start": "804079",
    "end": "807360"
  },
  {
    "text": "private",
    "start": "807360",
    "end": "808160"
  },
  {
    "text": "ip dedicated private ip for to all the",
    "start": "808160",
    "end": "810880"
  },
  {
    "text": "traffic going into the customers network",
    "start": "810880",
    "end": "812880"
  },
  {
    "text": "private network",
    "start": "812880",
    "end": "815839"
  },
  {
    "text": "the jvm is configured",
    "start": "817200",
    "end": "820240"
  },
  {
    "text": "as before with http proxy",
    "start": "820240",
    "end": "823920"
  },
  {
    "text": "in but this case instead of pointing to",
    "start": "823920",
    "end": "826240"
  },
  {
    "text": "the vms",
    "start": "826240",
    "end": "827040"
  },
  {
    "text": "is pointing to the to the envoy sidecar",
    "start": "827040",
    "end": "830720"
  },
  {
    "text": "running in the same pod so the am",
    "start": "830720",
    "end": "833519"
  },
  {
    "text": "container the adobe experience monitor",
    "start": "833519",
    "end": "835279"
  },
  {
    "text": "java container",
    "start": "835279",
    "end": "837440"
  },
  {
    "text": "uses the localhost",
    "start": "837440",
    "end": "840720"
  },
  {
    "text": "envoy sidecar as a proxy",
    "start": "840720",
    "end": "843760"
  },
  {
    "text": "for for the transparent forward",
    "start": "843760",
    "end": "847600"
  },
  {
    "text": "then the traffic from that",
    "start": "848560",
    "end": "851920"
  },
  {
    "text": "envoy the sidecar envoy to the ember",
    "start": "851920",
    "end": "854560"
  },
  {
    "text": "running on vms",
    "start": "854560",
    "end": "856399"
  },
  {
    "text": "we do a http 2 tunnel for all the",
    "start": "856399",
    "end": "859839"
  },
  {
    "text": "traffic",
    "start": "859839",
    "end": "861040"
  },
  {
    "text": "that is encrypted and authenticated with",
    "start": "861040",
    "end": "863920"
  },
  {
    "text": "a",
    "start": "863920",
    "end": "864639"
  },
  {
    "text": "mutual tls so this allows us to do",
    "start": "864639",
    "end": "869199"
  },
  {
    "text": "full encryption from the pod to the",
    "start": "869199",
    "end": "872480"
  },
  {
    "text": "virtual machines running envoy on the",
    "start": "872480",
    "end": "876000"
  },
  {
    "text": "on the scale sets",
    "start": "876000",
    "end": "879040"
  },
  {
    "text": "so what's good about this solution",
    "start": "880399",
    "end": "884959"
  },
  {
    "text": "we have the same pro as",
    "start": "884959",
    "end": "888079"
  },
  {
    "text": "transparent configuration on the java",
    "start": "888079",
    "end": "891199"
  },
  {
    "text": "virtual machine using http proxy system",
    "start": "891199",
    "end": "894320"
  },
  {
    "text": "properties",
    "start": "894320",
    "end": "894959"
  },
  {
    "text": "so that part is transparent to the",
    "start": "894959",
    "end": "897279"
  },
  {
    "text": "customer",
    "start": "897279",
    "end": "899279"
  },
  {
    "text": "we support any protocol",
    "start": "899279",
    "end": "902639"
  },
  {
    "text": "not just http http is very easy because",
    "start": "902639",
    "end": "906079"
  },
  {
    "text": "on the headers envoy can inspect that",
    "start": "906079",
    "end": "909519"
  },
  {
    "text": "and know where the traffic is going",
    "start": "909519",
    "end": "912000"
  },
  {
    "text": "but for any other protocol we can",
    "start": "912000",
    "end": "914079"
  },
  {
    "text": "support it by adding envoy listeners",
    "start": "914079",
    "end": "916560"
  },
  {
    "text": "in different ports in the sidecar",
    "start": "916560",
    "end": "920320"
  },
  {
    "text": "container so the traffic from those",
    "start": "920320",
    "end": "923040"
  },
  {
    "text": "different ports",
    "start": "923040",
    "end": "924160"
  },
  {
    "text": "can be routed to the correct destination",
    "start": "924160",
    "end": "929040"
  },
  {
    "text": "all the traffic going out of the pod",
    "start": "929120",
    "end": "931680"
  },
  {
    "text": "into",
    "start": "931680",
    "end": "932560"
  },
  {
    "text": "envoy into the outside of the cluster",
    "start": "932560",
    "end": "935759"
  },
  {
    "text": "is encrypted so",
    "start": "935759",
    "end": "939040"
  },
  {
    "text": "we if there's any mistake by the",
    "start": "939040",
    "end": "941759"
  },
  {
    "text": "customer",
    "start": "941759",
    "end": "942639"
  },
  {
    "text": "or something that",
    "start": "942639",
    "end": "946079"
  },
  {
    "text": "that is not encrypted this makes it",
    "start": "946079",
    "end": "948639"
  },
  {
    "text": "automatically encrypted",
    "start": "948639",
    "end": "951920"
  },
  {
    "text": "the virtual network dedicated vehicle",
    "start": "953120",
    "end": "956000"
  },
  {
    "text": "network per",
    "start": "956000",
    "end": "957040"
  },
  {
    "text": "tenant allows configuration of multiple",
    "start": "957040",
    "end": "960079"
  },
  {
    "text": "options",
    "start": "960079",
    "end": "960800"
  },
  {
    "text": "on the on the service level of the cloud",
    "start": "960800",
    "end": "964399"
  },
  {
    "text": "provider",
    "start": "964399",
    "end": "965839"
  },
  {
    "text": "vpn private connections express route",
    "start": "965839",
    "end": "969120"
  },
  {
    "text": "private link",
    "start": "969120",
    "end": "970079"
  },
  {
    "text": "all that and is just a matter of",
    "start": "970079",
    "end": "972959"
  },
  {
    "text": "configuration",
    "start": "972959",
    "end": "973920"
  },
  {
    "text": "on the on the service of the cloud",
    "start": "973920",
    "end": "976399"
  },
  {
    "text": "service",
    "start": "976399",
    "end": "977920"
  },
  {
    "text": "mutual tls prevents unauthorized",
    "start": "977920",
    "end": "980160"
  },
  {
    "text": "connections",
    "start": "980160",
    "end": "981199"
  },
  {
    "text": "and like one tenant connecting to a",
    "start": "981199",
    "end": "983680"
  },
  {
    "text": "different tenant",
    "start": "983680",
    "end": "985040"
  },
  {
    "text": "envoy virtual machines so something that",
    "start": "985040",
    "end": "987680"
  },
  {
    "text": "we were doing before with",
    "start": "987680",
    "end": "989920"
  },
  {
    "text": "network policies we can do it now just",
    "start": "989920",
    "end": "992079"
  },
  {
    "text": "using certificates",
    "start": "992079",
    "end": "993600"
  },
  {
    "text": "and it's much simpler to to manage and",
    "start": "993600",
    "end": "997680"
  },
  {
    "text": "more secure",
    "start": "997680",
    "end": "1000480"
  },
  {
    "start": "1000000",
    "end": "1071000"
  },
  {
    "text": "there are some drawbacks like",
    "start": "1001360",
    "end": "1004959"
  },
  {
    "text": "vpn and private connections like require",
    "start": "1004959",
    "end": "1009040"
  },
  {
    "text": "that the v-net has a non-overlapping",
    "start": "1009040",
    "end": "1012399"
  },
  {
    "text": "ip range with a customer private network",
    "start": "1012399",
    "end": "1015120"
  },
  {
    "text": "so",
    "start": "1015120",
    "end": "1015839"
  },
  {
    "text": "requires some interaction with the",
    "start": "1015839",
    "end": "1017839"
  },
  {
    "text": "customer to know",
    "start": "1017839",
    "end": "1019519"
  },
  {
    "text": "what are their range of ips and",
    "start": "1019519",
    "end": "1023120"
  },
  {
    "text": "the certificate management may becomes a",
    "start": "1023120",
    "end": "1026160"
  },
  {
    "text": "bit complex",
    "start": "1026160",
    "end": "1027120"
  },
  {
    "text": "because we need one set of certificates",
    "start": "1027120",
    "end": "1030000"
  },
  {
    "text": "for each tenant",
    "start": "1030000",
    "end": "1031600"
  },
  {
    "text": "for both the sidecars and the virtual",
    "start": "1031600",
    "end": "1033839"
  },
  {
    "text": "machines",
    "start": "1033839",
    "end": "1035120"
  },
  {
    "text": "so we have a certificate authority",
    "start": "1035120",
    "end": "1039520"
  },
  {
    "text": "and we emit certificates for each tenant",
    "start": "1039520",
    "end": "1043918"
  },
  {
    "text": "and then uh we we have to",
    "start": "1043919",
    "end": "1048720"
  },
  {
    "text": "emit uh for the sidecar for the vms and",
    "start": "1048720",
    "end": "1051600"
  },
  {
    "text": "the different",
    "start": "1051600",
    "end": "1052000"
  },
  {
    "text": "vms and all the pods and so on and then",
    "start": "1052000",
    "end": "1054960"
  },
  {
    "text": "we have to rotate them",
    "start": "1054960",
    "end": "1056640"
  },
  {
    "text": "handle expiration all these things and",
    "start": "1056640",
    "end": "1059679"
  },
  {
    "text": "that kind of becomes a bit",
    "start": "1059679",
    "end": "1063200"
  },
  {
    "text": "complicated",
    "start": "1064840",
    "end": "1066160"
  },
  {
    "text": "how did we configure all this with envoy",
    "start": "1066160",
    "end": "1071200"
  },
  {
    "start": "1071000",
    "end": "1248000"
  },
  {
    "text": "envy is very powerful um so",
    "start": "1071600",
    "end": "1074960"
  },
  {
    "text": "what we did is uh look at the features",
    "start": "1074960",
    "end": "1078240"
  },
  {
    "text": "supported",
    "start": "1078240",
    "end": "1079200"
  },
  {
    "text": "and we built this solution that",
    "start": "1079200",
    "end": "1082559"
  },
  {
    "text": "on one hand you have the invoice sidecar",
    "start": "1082559",
    "end": "1085200"
  },
  {
    "text": "running on the pod",
    "start": "1085200",
    "end": "1087039"
  },
  {
    "text": "and on the other hand you have the envoy",
    "start": "1087039",
    "end": "1089760"
  },
  {
    "text": "running on the",
    "start": "1089760",
    "end": "1090640"
  },
  {
    "text": "on the virtual machine so from the",
    "start": "1090640",
    "end": "1093919"
  },
  {
    "text": "container running",
    "start": "1093919",
    "end": "1095440"
  },
  {
    "text": "adobe experience manager we have",
    "start": "1095440",
    "end": "1098799"
  },
  {
    "text": "http traffic that goes into the envoy",
    "start": "1098799",
    "end": "1102240"
  },
  {
    "text": "sidecar",
    "start": "1102240",
    "end": "1102880"
  },
  {
    "text": "as a using it as a proxy so using the",
    "start": "1102880",
    "end": "1105840"
  },
  {
    "text": "connect",
    "start": "1105840",
    "end": "1106840"
  },
  {
    "text": "header and this is one listener using",
    "start": "1106840",
    "end": "1110080"
  },
  {
    "text": "tcp proxy filter envoy tcp proxy filter",
    "start": "1110080",
    "end": "1113679"
  },
  {
    "text": "both http https and http connect",
    "start": "1113679",
    "end": "1117600"
  },
  {
    "text": "give some void destination so",
    "start": "1117600",
    "end": "1121039"
  },
  {
    "text": "all the traffic going into the",
    "start": "1121039",
    "end": "1124240"
  },
  {
    "text": "sidecar through this listener um",
    "start": "1124240",
    "end": "1127520"
  },
  {
    "text": "envoy is gonna encrypt it and tunnel it",
    "start": "1127520",
    "end": "1131520"
  },
  {
    "text": "uh on tcp over http 2",
    "start": "1131520",
    "end": "1135120"
  },
  {
    "text": "and uh using mtls and it goes to the",
    "start": "1135120",
    "end": "1138880"
  },
  {
    "text": "envelope running on dvm",
    "start": "1138880",
    "end": "1142000"
  },
  {
    "text": "the invoice running on the vm examines",
    "start": "1142000",
    "end": "1144160"
  },
  {
    "text": "the the connect header",
    "start": "1144160",
    "end": "1146240"
  },
  {
    "text": "and then sends the traffic to the",
    "start": "1146240",
    "end": "1148480"
  },
  {
    "text": "internet through a dedicated",
    "start": "1148480",
    "end": "1150000"
  },
  {
    "text": "public ap for that tenant or to the",
    "start": "1150000",
    "end": "1153840"
  },
  {
    "text": "private network if that's the case",
    "start": "1153840",
    "end": "1157679"
  },
  {
    "text": "through the dedicated private app",
    "start": "1157679",
    "end": "1165200"
  },
  {
    "text": "for other ports that are not http",
    "start": "1165200",
    "end": "1168240"
  },
  {
    "text": "we have one listener for each port",
    "start": "1168240",
    "end": "1171760"
  },
  {
    "text": "and the destination we have to hard code",
    "start": "1171760",
    "end": "1174480"
  },
  {
    "text": "it",
    "start": "1174480",
    "end": "1174799"
  },
  {
    "text": "into the envoy configuration on the",
    "start": "1174799",
    "end": "1177200"
  },
  {
    "text": "tunneling config",
    "start": "1177200",
    "end": "1178480"
  },
  {
    "text": "part so this tells",
    "start": "1178480",
    "end": "1182320"
  },
  {
    "text": "we have a set of rules basically if",
    "start": "1182320",
    "end": "1186320"
  },
  {
    "text": "if traffic is coming on port 10 000",
    "start": "1186320",
    "end": "1189679"
  },
  {
    "text": "and then send it to smtp.example.com",
    "start": "1189679",
    "end": "1194320"
  },
  {
    "text": "port25 and if traffic comes to mysql",
    "start": "1194320",
    "end": "1198240"
  },
  {
    "text": "to report whatever 1001",
    "start": "1198240",
    "end": "1201520"
  },
  {
    "text": "send it to mysql.example.com",
    "start": "1201520",
    "end": "1204640"
  },
  {
    "text": "and then on the other hand the invoice",
    "start": "1204640",
    "end": "1206400"
  },
  {
    "text": "running on the vm then",
    "start": "1206400",
    "end": "1207760"
  },
  {
    "text": "knows what to do with that and sends the",
    "start": "1207760",
    "end": "1210159"
  },
  {
    "text": "traffic",
    "start": "1210159",
    "end": "1210799"
  },
  {
    "text": "to the right place through the right",
    "start": "1210799",
    "end": "1214639"
  },
  {
    "text": "interfaces",
    "start": "1218840",
    "end": "1220320"
  },
  {
    "text": "on the envoy configuration we have uh",
    "start": "1220320",
    "end": "1224080"
  },
  {
    "text": "also the cluster configuration and",
    "start": "1224080",
    "end": "1228000"
  },
  {
    "text": "on the pod side on the sidecar we have",
    "start": "1228000",
    "end": "1231679"
  },
  {
    "text": "just a pointing",
    "start": "1231679",
    "end": "1234720"
  },
  {
    "text": "we just point to the envoy running on",
    "start": "1234720",
    "end": "1237360"
  },
  {
    "text": "the vms to the load balancer in front of",
    "start": "1237360",
    "end": "1239440"
  },
  {
    "text": "the invoice running on the vms",
    "start": "1239440",
    "end": "1241520"
  },
  {
    "text": "and we configure the tls transport",
    "start": "1241520",
    "end": "1244400"
  },
  {
    "text": "socket to do the",
    "start": "1244400",
    "end": "1245760"
  },
  {
    "text": "mutual tls",
    "start": "1245760",
    "end": "1249200"
  },
  {
    "start": "1248000",
    "end": "1296000"
  },
  {
    "text": "so some examples",
    "start": "1249200",
    "end": "1252720"
  },
  {
    "text": "some code examples the listener",
    "start": "1252720",
    "end": "1256400"
  },
  {
    "text": "for the proxy you can do it",
    "start": "1256400",
    "end": "1259600"
  },
  {
    "text": "like this it's listening on port 3128",
    "start": "1259600",
    "end": "1263600"
  },
  {
    "text": "and the filters is just tcp",
    "start": "1263600",
    "end": "1266640"
  },
  {
    "text": "proxy and pointing to cluster cluster",
    "start": "1266640",
    "end": "1269840"
  },
  {
    "text": "underscore",
    "start": "1269840",
    "end": "1270480"
  },
  {
    "text": "zero",
    "start": "1270480",
    "end": "1272880"
  },
  {
    "text": "other ports not http",
    "start": "1274400",
    "end": "1277919"
  },
  {
    "text": "you can do the same thing but just in",
    "start": "1277919",
    "end": "1280480"
  },
  {
    "text": "the tunnel and config",
    "start": "1280480",
    "end": "1281840"
  },
  {
    "text": "just put the hostname of the destination",
    "start": "1281840",
    "end": "1284960"
  },
  {
    "text": "so any traffic coming through this",
    "start": "1284960",
    "end": "1286880"
  },
  {
    "text": "listener is going to",
    "start": "1286880",
    "end": "1288480"
  },
  {
    "text": "end in in that hostname that you are",
    "start": "1288480",
    "end": "1291360"
  },
  {
    "text": "setting that you can put the hostname",
    "start": "1291360",
    "end": "1292960"
  },
  {
    "text": "on the port",
    "start": "1292960",
    "end": "1295520"
  },
  {
    "start": "1296000",
    "end": "1323000"
  },
  {
    "text": "on the invoice sidecar the cluster",
    "start": "1296960",
    "end": "1298880"
  },
  {
    "text": "configuration",
    "start": "1298880",
    "end": "1300080"
  },
  {
    "text": "it's uh just pointing on the lbn",
    "start": "1300080",
    "end": "1304240"
  },
  {
    "text": "points were just saying what where the",
    "start": "1304240",
    "end": "1306640"
  },
  {
    "text": "envoy",
    "start": "1306640",
    "end": "1307919"
  },
  {
    "text": "vm load balancer is listening in this",
    "start": "1307919",
    "end": "1310880"
  },
  {
    "text": "case it would be envoys",
    "start": "1310880",
    "end": "1312320"
  },
  {
    "text": "underscore vm and por 443 for instance",
    "start": "1312320",
    "end": "1316320"
  },
  {
    "text": "and this would go to that load balancer",
    "start": "1316320",
    "end": "1318799"
  },
  {
    "text": "and that",
    "start": "1318799",
    "end": "1319520"
  },
  {
    "text": "load balancer would send the traffic to",
    "start": "1319520",
    "end": "1322080"
  },
  {
    "text": "to envoy",
    "start": "1322080",
    "end": "1323600"
  },
  {
    "start": "1323000",
    "end": "1359000"
  },
  {
    "text": "and the transport circuit configuration",
    "start": "1323600",
    "end": "1326000"
  },
  {
    "text": "this is where all the",
    "start": "1326000",
    "end": "1327679"
  },
  {
    "text": "mtls is happening and",
    "start": "1327679",
    "end": "1331039"
  },
  {
    "text": "you set what's the certificate and the",
    "start": "1331039",
    "end": "1334240"
  },
  {
    "text": "private key",
    "start": "1334240",
    "end": "1335200"
  },
  {
    "text": "of that envoy",
    "start": "1335200",
    "end": "1338400"
  },
  {
    "text": "and the trusted cas so",
    "start": "1338400",
    "end": "1341440"
  },
  {
    "text": "as long as both",
    "start": "1341440",
    "end": "1344640"
  },
  {
    "text": "both sides have a certificate trusted",
    "start": "1344640",
    "end": "1347360"
  },
  {
    "text": "with that ca",
    "start": "1347360",
    "end": "1348799"
  },
  {
    "text": "and boy can can connect to that and",
    "start": "1348799",
    "end": "1351919"
  },
  {
    "text": "envoy will present envoy on the sidecar",
    "start": "1351919",
    "end": "1354799"
  },
  {
    "text": "will present",
    "start": "1354799",
    "end": "1355600"
  },
  {
    "text": "its own certificate to the other side",
    "start": "1355600",
    "end": "1359120"
  },
  {
    "start": "1359000",
    "end": "1377000"
  },
  {
    "text": "now on the vm side",
    "start": "1359120",
    "end": "1362480"
  },
  {
    "text": "uh we have one http connection manager",
    "start": "1362480",
    "end": "1365520"
  },
  {
    "text": "listener",
    "start": "1365520",
    "end": "1366559"
  },
  {
    "text": "that has the connect upgrade and",
    "start": "1366559",
    "end": "1369679"
  },
  {
    "text": "uh takes all the traffic coming through",
    "start": "1369679",
    "end": "1372960"
  },
  {
    "text": "through this one port and one port only",
    "start": "1372960",
    "end": "1375360"
  },
  {
    "text": "we don't need more than one",
    "start": "1375360",
    "end": "1377360"
  },
  {
    "start": "1377000",
    "end": "1393000"
  },
  {
    "text": "and on the clusters we just configure a",
    "start": "1377360",
    "end": "1380960"
  },
  {
    "text": "dynamic forward proxy",
    "start": "1380960",
    "end": "1382960"
  },
  {
    "text": "and then this is uh this",
    "start": "1382960",
    "end": "1386159"
  },
  {
    "text": "handles all the connections all the oh",
    "start": "1386159",
    "end": "1388559"
  },
  {
    "text": "sorry all the destinations",
    "start": "1388559",
    "end": "1390559"
  },
  {
    "text": "for all the traffic we don't have to",
    "start": "1390559",
    "end": "1392080"
  },
  {
    "text": "have more than one cluster",
    "start": "1392080",
    "end": "1394080"
  },
  {
    "start": "1393000",
    "end": "1404000"
  },
  {
    "text": "the listener side so listening on port",
    "start": "1394080",
    "end": "1396559"
  },
  {
    "text": "443",
    "start": "1396559",
    "end": "1398000"
  },
  {
    "text": "and the connection manager http",
    "start": "1398000",
    "end": "1400159"
  },
  {
    "text": "connection manager",
    "start": "1400159",
    "end": "1402720"
  },
  {
    "text": "filter and then what it does",
    "start": "1402720",
    "end": "1405840"
  },
  {
    "start": "1404000",
    "end": "1476000"
  },
  {
    "text": "is the d-max",
    "start": "1405840",
    "end": "1409520"
  },
  {
    "text": "the multipliers the all the traffic",
    "start": "1409520",
    "end": "1412480"
  },
  {
    "text": "coming through",
    "start": "1412480",
    "end": "1413200"
  },
  {
    "text": "through the tunnel so this is",
    "start": "1413200",
    "end": "1415280"
  },
  {
    "text": "configuration that you can find in the",
    "start": "1415280",
    "end": "1417120"
  },
  {
    "text": "envoy examples",
    "start": "1417120",
    "end": "1418799"
  },
  {
    "text": "uh basically it's telling uh the upgrade",
    "start": "1418799",
    "end": "1422000"
  },
  {
    "text": "is connect so everything",
    "start": "1422000",
    "end": "1426320"
  },
  {
    "text": "that is coming through there send it to",
    "start": "1426320",
    "end": "1429279"
  },
  {
    "text": "the destination set on the connect",
    "start": "1429279",
    "end": "1431200"
  },
  {
    "text": "headers",
    "start": "1431200",
    "end": "1433600"
  },
  {
    "text": "and just a small detail that if you want",
    "start": "1433600",
    "end": "1436480"
  },
  {
    "text": "to",
    "start": "1436480",
    "end": "1436960"
  },
  {
    "text": "use uh this is a proxy with http",
    "start": "1436960",
    "end": "1440960"
  },
  {
    "text": "not http with https the other",
    "start": "1440960",
    "end": "1444159"
  },
  {
    "text": "the first route just is enough uh the",
    "start": "1444159",
    "end": "1447039"
  },
  {
    "text": "route that",
    "start": "1447039",
    "end": "1447600"
  },
  {
    "text": "matches on the connect um",
    "start": "1447600",
    "end": "1450640"
  },
  {
    "text": "but if you have traffic coming in",
    "start": "1450640",
    "end": "1452320"
  },
  {
    "text": "through h uh using http",
    "start": "1452320",
    "end": "1454640"
  },
  {
    "text": "and not https sorry not coming but",
    "start": "1454640",
    "end": "1457360"
  },
  {
    "text": "encapsulated that were originally for",
    "start": "1457360",
    "end": "1459600"
  },
  {
    "text": "http",
    "start": "1459600",
    "end": "1461279"
  },
  {
    "text": "you need the second rule that matches",
    "start": "1461279",
    "end": "1463360"
  },
  {
    "text": "the slash",
    "start": "1463360",
    "end": "1464320"
  },
  {
    "text": "and sends it to the to the same cluster",
    "start": "1464320",
    "end": "1467120"
  },
  {
    "text": "so this is just a small detail so",
    "start": "1467120",
    "end": "1469600"
  },
  {
    "text": "you just need to this one these two",
    "start": "1469600",
    "end": "1471919"
  },
  {
    "text": "routes",
    "start": "1471919",
    "end": "1473120"
  },
  {
    "text": "to match both http and https",
    "start": "1473120",
    "end": "1476159"
  },
  {
    "text": "the filters is just the router with",
    "start": "1476159",
    "end": "1479840"
  },
  {
    "text": "allow connection allow connect on http 2",
    "start": "1479840",
    "end": "1483039"
  },
  {
    "text": "protocols",
    "start": "1483039",
    "end": "1484240"
  },
  {
    "text": "and the upgrade type connect just to",
    "start": "1484240",
    "end": "1487039"
  },
  {
    "text": "handle all the traffic that is coming",
    "start": "1487039",
    "end": "1488559"
  },
  {
    "text": "through the tunnel",
    "start": "1488559",
    "end": "1489360"
  },
  {
    "text": "and on the transport circuit this is the",
    "start": "1489360",
    "end": "1491679"
  },
  {
    "text": "other side of the mtls",
    "start": "1491679",
    "end": "1493520"
  },
  {
    "text": "uh connection connectivity and",
    "start": "1493520",
    "end": "1496559"
  },
  {
    "text": "and security so same as before",
    "start": "1496559",
    "end": "1500320"
  },
  {
    "text": "we set the envoy certificate",
    "start": "1500320",
    "end": "1503520"
  },
  {
    "text": "public key and the trusted certificate",
    "start": "1503520",
    "end": "1506799"
  },
  {
    "text": "authority and a",
    "start": "1506799",
    "end": "1510640"
  },
  {
    "text": "small detail here is that we say",
    "start": "1510640",
    "end": "1513760"
  },
  {
    "text": "much subject alternative names to a",
    "start": "1513760",
    "end": "1516799"
  },
  {
    "text": "specific",
    "start": "1516799",
    "end": "1517600"
  },
  {
    "text": "subject alternative name so",
    "start": "1517600",
    "end": "1521279"
  },
  {
    "text": "only certificates that have this",
    "start": "1521279",
    "end": "1524320"
  },
  {
    "text": "sun in this case envoy sidecar can",
    "start": "1524320",
    "end": "1527279"
  },
  {
    "text": "connect to this envoy",
    "start": "1527279",
    "end": "1529360"
  },
  {
    "text": "and this is where it's defined",
    "start": "1529360",
    "end": "1532799"
  },
  {
    "text": "which tenants can connect to this envoy",
    "start": "1532799",
    "end": "1535440"
  },
  {
    "text": "so you can",
    "start": "1535440",
    "end": "1536240"
  },
  {
    "text": "have certificates with different sounds",
    "start": "1536240",
    "end": "1541120"
  },
  {
    "text": "and each uh each song can only talk to",
    "start": "1541120",
    "end": "1546240"
  },
  {
    "text": "its counterpart envoy in the vm so each",
    "start": "1546240",
    "end": "1549520"
  },
  {
    "text": "set of envoys has their own",
    "start": "1549520",
    "end": "1552640"
  },
  {
    "text": "line here their own match subject",
    "start": "1552640",
    "end": "1555520"
  },
  {
    "text": "alternative name",
    "start": "1555520",
    "end": "1557279"
  },
  {
    "text": "and then envoys on the side cars",
    "start": "1557279",
    "end": "1561600"
  },
  {
    "text": "have different certificates for",
    "start": "1561600",
    "end": "1563520"
  },
  {
    "text": "different tenants different sounds",
    "start": "1563520",
    "end": "1565440"
  },
  {
    "text": "different subject alternative names for",
    "start": "1565440",
    "end": "1567039"
  },
  {
    "text": "different tenants and this is what",
    "start": "1567039",
    "end": "1569200"
  },
  {
    "text": "validates that is not receiving",
    "start": "1569200",
    "end": "1571679"
  },
  {
    "text": "connections",
    "start": "1571679",
    "end": "1572480"
  },
  {
    "text": "from somebody else on the cluster side",
    "start": "1572480",
    "end": "1576400"
  },
  {
    "start": "1574000",
    "end": "1592000"
  },
  {
    "text": "is just a simple dynamic forward proxy",
    "start": "1576400",
    "end": "1578960"
  },
  {
    "text": "so we don't have to define",
    "start": "1578960",
    "end": "1580799"
  },
  {
    "text": "uh what are the destinations it will",
    "start": "1580799",
    "end": "1583919"
  },
  {
    "text": "figure it out based on the",
    "start": "1583919",
    "end": "1585679"
  },
  {
    "text": "on the dns name and that will",
    "start": "1585679",
    "end": "1588799"
  },
  {
    "text": "uh just forward all the traffic",
    "start": "1588799",
    "end": "1592559"
  },
  {
    "start": "1592000",
    "end": "1615000"
  },
  {
    "text": "some resources if you want to check",
    "start": "1592559",
    "end": "1595440"
  },
  {
    "text": "examples",
    "start": "1595440",
    "end": "1596400"
  },
  {
    "text": "on the envoy proxy.io uh documentation",
    "start": "1596400",
    "end": "1599919"
  },
  {
    "text": "site",
    "start": "1599919",
    "end": "1600559"
  },
  {
    "text": "yeah you can read about the http",
    "start": "1600559",
    "end": "1602720"
  },
  {
    "text": "upgrades where it explains how to do all",
    "start": "1602720",
    "end": "1604799"
  },
  {
    "text": "this tunneling thing",
    "start": "1604799",
    "end": "1606640"
  },
  {
    "text": "tls and double proxy is what allo",
    "start": "1606640",
    "end": "1609600"
  },
  {
    "text": "explains",
    "start": "1609600",
    "end": "1610799"
  },
  {
    "text": "how to do the mtls authentication",
    "start": "1610799",
    "end": "1613039"
  },
  {
    "text": "between",
    "start": "1613039",
    "end": "1614080"
  },
  {
    "text": "to envoy proxies some advice",
    "start": "1614080",
    "end": "1617520"
  },
  {
    "start": "1615000",
    "end": "1695000"
  },
  {
    "text": "let's say about debugging on on",
    "start": "1617520",
    "end": "1620799"
  },
  {
    "text": "cases like this the tls connection",
    "start": "1620799",
    "end": "1623760"
  },
  {
    "text": "errors",
    "start": "1623760",
    "end": "1624880"
  },
  {
    "text": "only show up in the connection component",
    "start": "1624880",
    "end": "1626960"
  },
  {
    "text": "the backlogs",
    "start": "1626960",
    "end": "1628320"
  },
  {
    "text": "so from the client point of view you",
    "start": "1628320",
    "end": "1631360"
  },
  {
    "text": "only see that the connection is dropped",
    "start": "1631360",
    "end": "1633679"
  },
  {
    "text": "or the connection is not established",
    "start": "1633679",
    "end": "1636640"
  },
  {
    "text": "and sorry the connection is closed",
    "start": "1636640",
    "end": "1640000"
  },
  {
    "text": "and you have to go and look into the",
    "start": "1640000",
    "end": "1643679"
  },
  {
    "text": "debug logs debug logs for the",
    "start": "1643679",
    "end": "1647039"
  },
  {
    "text": "disk connection component then",
    "start": "1647039",
    "end": "1650559"
  },
  {
    "text": "you will see things like if the",
    "start": "1650559",
    "end": "1653760"
  },
  {
    "text": "certificate subject alternative name",
    "start": "1653760",
    "end": "1655840"
  },
  {
    "text": "doesn't match",
    "start": "1655840",
    "end": "1657679"
  },
  {
    "text": "the one that the envoy in the vm is",
    "start": "1657679",
    "end": "1660240"
  },
  {
    "text": "expecting on the other side",
    "start": "1660240",
    "end": "1662480"
  },
  {
    "text": "you will see things like certificate",
    "start": "1662480",
    "end": "1664640"
  },
  {
    "text": "verify failed",
    "start": "1664640",
    "end": "1666559"
  },
  {
    "text": "on the virtual machine side so this is",
    "start": "1666559",
    "end": "1668640"
  },
  {
    "text": "where you can see",
    "start": "1668640",
    "end": "1669919"
  },
  {
    "text": "okay why is the connection being closed",
    "start": "1669919",
    "end": "1672640"
  },
  {
    "text": "you can go to the",
    "start": "1672640",
    "end": "1673840"
  },
  {
    "text": "vm side and if you see this or on the",
    "start": "1673840",
    "end": "1677360"
  },
  {
    "text": "sidecar side you would see something",
    "start": "1677360",
    "end": "1679279"
  },
  {
    "text": "like",
    "start": "1679279",
    "end": "1680240"
  },
  {
    "text": "alert certificate unknown and then you",
    "start": "1680240",
    "end": "1683120"
  },
  {
    "text": "would know",
    "start": "1683120",
    "end": "1684000"
  },
  {
    "text": "uh okay i made a mistake on the",
    "start": "1684000",
    "end": "1686799"
  },
  {
    "text": "configuration or something like that",
    "start": "1686799",
    "end": "1688880"
  },
  {
    "text": "otherwise envoy is not gonna give you a",
    "start": "1688880",
    "end": "1691279"
  },
  {
    "text": "lot of information",
    "start": "1691279",
    "end": "1692799"
  },
  {
    "text": "and in the default uh login levels so",
    "start": "1692799",
    "end": "1696000"
  },
  {
    "start": "1695000",
    "end": "1776000"
  },
  {
    "text": "that's it i hope you like it",
    "start": "1696000",
    "end": "1699919"
  },
  {
    "text": "so if you are uh looking to do something",
    "start": "1699919",
    "end": "1703039"
  },
  {
    "text": "like this having dedicated",
    "start": "1703039",
    "end": "1704399"
  },
  {
    "text": "infrastructure",
    "start": "1704399",
    "end": "1705840"
  },
  {
    "text": "in your kubernetes clusters that are",
    "start": "1705840",
    "end": "1708720"
  },
  {
    "text": "like shared across multiple",
    "start": "1708720",
    "end": "1710080"
  },
  {
    "text": "tenants envoy is a very nice solution",
    "start": "1710080",
    "end": "1714000"
  },
  {
    "text": "to the networking side things and",
    "start": "1714000",
    "end": "1717440"
  },
  {
    "text": "uh for us it allows us to do this",
    "start": "1717440",
    "end": "1721360"
  },
  {
    "text": "uh whole dedicated",
    "start": "1721360",
    "end": "1724960"
  },
  {
    "text": "eyepiece dedicated",
    "start": "1724960",
    "end": "1728720"
  },
  {
    "text": "virtual network connections dedicated uh",
    "start": "1728720",
    "end": "1732559"
  },
  {
    "text": "like private link express routes vpn",
    "start": "1732559",
    "end": "1735840"
  },
  {
    "text": "all these things are",
    "start": "1735840",
    "end": "1739200"
  },
  {
    "text": "basically are put together",
    "start": "1739200",
    "end": "1742240"
  },
  {
    "text": "thanks to envoy allowing us to do",
    "start": "1742240",
    "end": "1745360"
  },
  {
    "text": "this encryption end-to-end",
    "start": "1745360",
    "end": "1749120"
  },
  {
    "text": "and routing of the networking and",
    "start": "1749120",
    "end": "1752559"
  },
  {
    "text": "dedicating infrastructure to to each",
    "start": "1752559",
    "end": "1756000"
  },
  {
    "text": "specific tenant so it's a it's a very",
    "start": "1756000",
    "end": "1759600"
  },
  {
    "text": "interesting project",
    "start": "1759600",
    "end": "1761120"
  },
  {
    "text": "uh we i've liked it a lot so far",
    "start": "1761120",
    "end": "1764320"
  },
  {
    "text": "and i hope you get some ideas from",
    "start": "1764320",
    "end": "1767440"
  },
  {
    "text": "from this talk thank you and you can",
    "start": "1767440",
    "end": "1770559"
  },
  {
    "text": "find me on twitter",
    "start": "1770559",
    "end": "1771919"
  },
  {
    "text": "at csunchef thank you have a good day",
    "start": "1771919",
    "end": "1778639"
  }
]