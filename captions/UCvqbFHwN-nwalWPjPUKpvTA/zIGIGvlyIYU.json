[
  {
    "text": "in this three-part demo we'll cover some",
    "start": "399",
    "end": "2720"
  },
  {
    "text": "key enterprise capabilities",
    "start": "2720",
    "end": "4720"
  },
  {
    "text": "of the dell emc storage and data",
    "start": "4720",
    "end": "6799"
  },
  {
    "text": "protection solutions",
    "start": "6799",
    "end": "8240"
  },
  {
    "text": "for kubernetes workloads",
    "start": "8240",
    "end": "12240"
  },
  {
    "text": "in software development it is always a",
    "start": "12639",
    "end": "14880"
  },
  {
    "text": "good idea to have test cases",
    "start": "14880",
    "end": "16720"
  },
  {
    "text": "that are realistic in this demo video we",
    "start": "16720",
    "end": "19279"
  },
  {
    "text": "are going to take a look",
    "start": "19279",
    "end": "20320"
  },
  {
    "text": "at how you can take the copy of",
    "start": "20320",
    "end": "22480"
  },
  {
    "text": "production data of a containerized",
    "start": "22480",
    "end": "24320"
  },
  {
    "text": "application",
    "start": "24320",
    "end": "25439"
  },
  {
    "text": "and use it to spin up a test or a dev",
    "start": "25439",
    "end": "28480"
  },
  {
    "text": "instance of the application",
    "start": "28480",
    "end": "30080"
  },
  {
    "text": "so that the application can be tested",
    "start": "30080",
    "end": "32078"
  },
  {
    "text": "with the latest production data",
    "start": "32079",
    "end": "35040"
  },
  {
    "text": "the storage platform here is powermax",
    "start": "35040",
    "end": "37120"
  },
  {
    "text": "with the container storage interface",
    "start": "37120",
    "end": "39680"
  },
  {
    "text": "kubernetes is the container",
    "start": "39680",
    "end": "41440"
  },
  {
    "text": "orchestration platform",
    "start": "41440",
    "end": "42879"
  },
  {
    "text": "and we are using gitlab for the devops",
    "start": "42879",
    "end": "45600"
  },
  {
    "text": "automation",
    "start": "45600",
    "end": "48160"
  },
  {
    "text": "here is a sample application that we",
    "start": "49520",
    "end": "51600"
  },
  {
    "text": "forked from github",
    "start": "51600",
    "end": "53360"
  },
  {
    "text": "it is a bare bones web app to manage a",
    "start": "53360",
    "end": "56079"
  },
  {
    "text": "list of to-do items",
    "start": "56079",
    "end": "57440"
  },
  {
    "text": "with sqlite as the backend database to",
    "start": "57440",
    "end": "60000"
  },
  {
    "text": "store the to-do item information",
    "start": "60000",
    "end": "63440"
  },
  {
    "text": "and here is where the magic is happening",
    "start": "63440",
    "end": "66000"
  },
  {
    "text": "this is the persistent storage claim",
    "start": "66000",
    "end": "68640"
  },
  {
    "text": "for the sql lite part that is part of",
    "start": "68640",
    "end": "71439"
  },
  {
    "text": "the to-do application",
    "start": "71439",
    "end": "73040"
  },
  {
    "text": "here we are actually using a tag",
    "start": "73040",
    "end": "75040"
  },
  {
    "text": "variable of the application instance",
    "start": "75040",
    "end": "77280"
  },
  {
    "text": "to dynamically allocate the right",
    "start": "77280",
    "end": "79680"
  },
  {
    "text": "storage volume",
    "start": "79680",
    "end": "81200"
  },
  {
    "text": "if the tag indicates that its production",
    "start": "81200",
    "end": "83680"
  },
  {
    "text": "instance",
    "start": "83680",
    "end": "84479"
  },
  {
    "text": "then a claim against the production",
    "start": "84479",
    "end": "86640"
  },
  {
    "text": "volume of the storage class",
    "start": "86640",
    "end": "88479"
  },
  {
    "text": "sc and in a little while uh we'll",
    "start": "88479",
    "end": "92159"
  },
  {
    "text": "see how to pass power max as the value",
    "start": "92159",
    "end": "95200"
  },
  {
    "text": "for",
    "start": "95200",
    "end": "95600"
  },
  {
    "text": "sc if it's not a production instance",
    "start": "95600",
    "end": "98640"
  },
  {
    "text": "then a snapshot of the production volume",
    "start": "98640",
    "end": "100960"
  },
  {
    "text": "is used instead",
    "start": "100960",
    "end": "102640"
  },
  {
    "text": "if the snapshot pv doesn't exist",
    "start": "102640",
    "end": "105200"
  },
  {
    "text": "kubernetes creates a snapshot of the",
    "start": "105200",
    "end": "107439"
  },
  {
    "text": "production",
    "start": "107439",
    "end": "108320"
  },
  {
    "text": "persistent volume and then uses it",
    "start": "108320",
    "end": "111680"
  },
  {
    "text": "this way every non-production instance",
    "start": "111680",
    "end": "114079"
  },
  {
    "text": "will have its own persistent volume",
    "start": "114079",
    "end": "116399"
  },
  {
    "text": "that is actually the latest copy of the",
    "start": "116399",
    "end": "119040"
  },
  {
    "text": "production data",
    "start": "119040",
    "end": "120560"
  },
  {
    "text": "and here is the yaml for the snapshot",
    "start": "120560",
    "end": "123200"
  },
  {
    "text": "definition",
    "start": "123200",
    "end": "124079"
  },
  {
    "text": "the storage class that will be used here",
    "start": "124079",
    "end": "126479"
  },
  {
    "text": "will be",
    "start": "126479",
    "end": "127200"
  },
  {
    "text": "max dash snap class of course",
    "start": "127200",
    "end": "130479"
  },
  {
    "text": "sc is the variable here and we'll see",
    "start": "130479",
    "end": "132800"
  },
  {
    "text": "how to pass",
    "start": "132800",
    "end": "133920"
  },
  {
    "text": "power max for the variable sc",
    "start": "133920",
    "end": "137920"
  },
  {
    "text": "let's see this in action here is the",
    "start": "137920",
    "end": "140560"
  },
  {
    "text": "production version of the app",
    "start": "140560",
    "end": "142480"
  },
  {
    "text": "let me add a few items that are in fact",
    "start": "142480",
    "end": "144959"
  },
  {
    "text": "a must in today's world",
    "start": "144959",
    "end": "148239"
  },
  {
    "text": "now let's pin up a dev version of this",
    "start": "150400",
    "end": "152640"
  },
  {
    "text": "application to do some changes to the",
    "start": "152640",
    "end": "154560"
  },
  {
    "text": "app",
    "start": "154560",
    "end": "155760"
  },
  {
    "text": "before we do that a quick check on pvcs",
    "start": "155760",
    "end": "159200"
  },
  {
    "text": "and pvs in the namespace",
    "start": "159200",
    "end": "161200"
  },
  {
    "text": "you can see the persistent volume claim",
    "start": "161200",
    "end": "163599"
  },
  {
    "text": "and the persistent volume for the",
    "start": "163599",
    "end": "164959"
  },
  {
    "text": "production instance",
    "start": "164959",
    "end": "166319"
  },
  {
    "text": "and there are no snapshot volumes here",
    "start": "166319",
    "end": "169680"
  },
  {
    "text": "cool now i create a new branch called",
    "start": "169680",
    "end": "171920"
  },
  {
    "text": "colors",
    "start": "171920",
    "end": "172800"
  },
  {
    "text": "and the change i'm going to make is to",
    "start": "172800",
    "end": "174640"
  },
  {
    "text": "change the color of the title",
    "start": "174640",
    "end": "176800"
  },
  {
    "text": "on the web page",
    "start": "176800",
    "end": "179680"
  },
  {
    "text": "i can do a quick div to make sure",
    "start": "182319",
    "end": "185360"
  },
  {
    "text": "and then commit and push the change",
    "start": "185360",
    "end": "189280"
  },
  {
    "text": "this creates a new pipeline in gitlab",
    "start": "189280",
    "end": "192480"
  },
  {
    "text": "let me navigate to the build",
    "start": "192480",
    "end": "199840"
  },
  {
    "text": "and here is the helm command for the",
    "start": "199840",
    "end": "202080"
  },
  {
    "text": "application deployment",
    "start": "202080",
    "end": "203519"
  },
  {
    "text": "in kubernetes where we set things like",
    "start": "203519",
    "end": "206799"
  },
  {
    "text": "a unique namespace for the instance and",
    "start": "206799",
    "end": "210000"
  },
  {
    "text": "passing relevant variables",
    "start": "210000",
    "end": "211680"
  },
  {
    "text": "of course the variable sc which stands",
    "start": "211680",
    "end": "213920"
  },
  {
    "text": "for storage class",
    "start": "213920",
    "end": "215360"
  },
  {
    "text": "is being set to powermax",
    "start": "215360",
    "end": "218879"
  },
  {
    "text": "the build and deployment are completed",
    "start": "218879",
    "end": "221120"
  },
  {
    "text": "and here",
    "start": "221120",
    "end": "221920"
  },
  {
    "text": "we can see that the color of the title",
    "start": "221920",
    "end": "223840"
  },
  {
    "text": "has been changed",
    "start": "223840",
    "end": "225280"
  },
  {
    "text": "and if you notice the data is the latest",
    "start": "225280",
    "end": "228239"
  },
  {
    "text": "production data",
    "start": "228239",
    "end": "229280"
  },
  {
    "text": "since it's a snapshot of the production",
    "start": "229280",
    "end": "231040"
  },
  {
    "text": "volume",
    "start": "231040",
    "end": "233439"
  },
  {
    "text": "now we can go back and check to see that",
    "start": "234720",
    "end": "238159"
  },
  {
    "text": "a new snapshot volume is created",
    "start": "238159",
    "end": "240720"
  },
  {
    "text": "and we can also see the corresponding",
    "start": "240720",
    "end": "242959"
  },
  {
    "text": "persistent volume and volume claim",
    "start": "242959",
    "end": "245519"
  },
  {
    "text": "in addition to the production objects",
    "start": "245519",
    "end": "249439"
  },
  {
    "text": "i can also check the unisphere",
    "start": "252720",
    "end": "254319"
  },
  {
    "text": "environment to see that the snapshot has",
    "start": "254319",
    "end": "256639"
  },
  {
    "text": "been created",
    "start": "256639",
    "end": "257759"
  },
  {
    "text": "as part of the deployment within the",
    "start": "257759",
    "end": "260880"
  },
  {
    "text": "same storage group",
    "start": "260880",
    "end": "269840"
  },
  {
    "text": "this same workflow can be used for any",
    "start": "270560",
    "end": "272960"
  },
  {
    "text": "of the dell emc storage platforms listed",
    "start": "272960",
    "end": "275280"
  },
  {
    "text": "here",
    "start": "275280",
    "end": "276320"
  },
  {
    "text": "these are basically the respective",
    "start": "276320",
    "end": "278240"
  },
  {
    "text": "snapshot storage classes",
    "start": "278240",
    "end": "280080"
  },
  {
    "text": "for each of the platforms",
    "start": "280080",
    "end": "283840"
  },
  {
    "text": "in the second demo we'll see how dell",
    "start": "293120",
    "end": "295120"
  },
  {
    "text": "emc power store",
    "start": "295120",
    "end": "296560"
  },
  {
    "text": "can be used to deploy containerized",
    "start": "296560",
    "end": "298479"
  },
  {
    "text": "applications on vmware's",
    "start": "298479",
    "end": "300479"
  },
  {
    "text": "tanzu kubernetes grid",
    "start": "300479",
    "end": "304240"
  },
  {
    "text": "here we click on create a new namespace",
    "start": "307520",
    "end": "310720"
  },
  {
    "text": "we select our wcp cluster and specify",
    "start": "310720",
    "end": "314080"
  },
  {
    "text": "the name",
    "start": "314080",
    "end": "314720"
  },
  {
    "text": "and then just click create we can see",
    "start": "314720",
    "end": "318479"
  },
  {
    "text": "that the namespace creation completed",
    "start": "318479",
    "end": "320080"
  },
  {
    "text": "successfully and the kubernetes status",
    "start": "320080",
    "end": "322800"
  },
  {
    "text": "is active at this point",
    "start": "322800",
    "end": "326080"
  },
  {
    "text": "i'm adding the dell emc powerster",
    "start": "326080",
    "end": "328000"
  },
  {
    "text": "storage policy i just created to our",
    "start": "328000",
    "end": "330080"
  },
  {
    "text": "namespace",
    "start": "330080",
    "end": "331199"
  },
  {
    "text": "this will allow me to create the tkg",
    "start": "331199",
    "end": "334320"
  },
  {
    "text": "persistent volumes",
    "start": "334320",
    "end": "335840"
  },
  {
    "text": "on my dell emc parse store vivo data",
    "start": "335840",
    "end": "338320"
  },
  {
    "text": "store",
    "start": "338320",
    "end": "340639"
  },
  {
    "text": "next i'm logging in to my v3 kubernetes",
    "start": "340960",
    "end": "345919"
  },
  {
    "text": "using the kubectl command i'm",
    "start": "345919",
    "end": "348400"
  },
  {
    "text": "authenticating",
    "start": "348400",
    "end": "349600"
  },
  {
    "text": "with the administrator at vsphere local",
    "start": "349600",
    "end": "351919"
  },
  {
    "text": "user",
    "start": "351919",
    "end": "354240"
  },
  {
    "text": "then i am switching to the new namespace",
    "start": "354560",
    "end": "357520"
  },
  {
    "text": "i just created",
    "start": "357520",
    "end": "358960"
  },
  {
    "text": "using the kubectl config use context",
    "start": "358960",
    "end": "361600"
  },
  {
    "text": "command",
    "start": "361600",
    "end": "364000"
  },
  {
    "text": "by running ctl get sc",
    "start": "364160",
    "end": "367280"
  },
  {
    "text": "we can see the firestore policy this",
    "start": "367280",
    "end": "370800"
  },
  {
    "text": "appears as a storage class within the",
    "start": "370800",
    "end": "373120"
  },
  {
    "text": "namespace",
    "start": "373120",
    "end": "375759"
  },
  {
    "text": "as you can see i'm using this storage",
    "start": "377600",
    "end": "379919"
  },
  {
    "text": "class in my manifest file",
    "start": "379919",
    "end": "382000"
  },
  {
    "text": "of my tkg cluster this storage class",
    "start": "382000",
    "end": "385600"
  },
  {
    "text": "is used for both the control plane and",
    "start": "385600",
    "end": "388000"
  },
  {
    "text": "the worker nodes",
    "start": "388000",
    "end": "389360"
  },
  {
    "text": "you can also see the namespace and the",
    "start": "389360",
    "end": "391600"
  },
  {
    "text": "tkg name",
    "start": "391600",
    "end": "394160"
  },
  {
    "text": "now i'm just going to create it so now",
    "start": "394160",
    "end": "397520"
  },
  {
    "text": "we can go back to the vsphere ui",
    "start": "397520",
    "end": "399759"
  },
  {
    "text": "and see what's actually happening in our",
    "start": "399759",
    "end": "402319"
  },
  {
    "text": "namespace",
    "start": "402319",
    "end": "404880"
  },
  {
    "text": "we can see that the new tkg cluster has",
    "start": "406880",
    "end": "410080"
  },
  {
    "text": "been created",
    "start": "410080",
    "end": "411280"
  },
  {
    "text": "and the control plane vm has been built",
    "start": "411280",
    "end": "414160"
  },
  {
    "text": "out",
    "start": "414160",
    "end": "414720"
  },
  {
    "text": "but hasn't been powered on yet i'll",
    "start": "414720",
    "end": "417520"
  },
  {
    "text": "speed things a little bit",
    "start": "417520",
    "end": "419280"
  },
  {
    "text": "as this process takes about 10 minutes",
    "start": "419280",
    "end": "421440"
  },
  {
    "text": "to complete",
    "start": "421440",
    "end": "423840"
  },
  {
    "text": "by navigating to nsxt we can see",
    "start": "429199",
    "end": "432800"
  },
  {
    "text": "that a tier 1 gateway is being created",
    "start": "432800",
    "end": "435360"
  },
  {
    "text": "for the namespace",
    "start": "435360",
    "end": "436800"
  },
  {
    "text": "as well as a new load balancer",
    "start": "436800",
    "end": "440478"
  },
  {
    "text": "now let's connect to our power store",
    "start": "441520",
    "end": "444080"
  },
  {
    "text": "cluster",
    "start": "444080",
    "end": "444880"
  },
  {
    "text": "and navigate to the vivos tab",
    "start": "444880",
    "end": "450400"
  },
  {
    "text": "here you can see that we have multiple",
    "start": "450400",
    "end": "452800"
  },
  {
    "text": "vehicles",
    "start": "452800",
    "end": "453599"
  },
  {
    "text": "and each of them belongs to a particular",
    "start": "453599",
    "end": "456080"
  },
  {
    "text": "tkg vm",
    "start": "456080",
    "end": "458400"
  },
  {
    "text": "the type of evolves provisioned depends",
    "start": "458400",
    "end": "461199"
  },
  {
    "text": "on the type of data",
    "start": "461199",
    "end": "463039"
  },
  {
    "text": "that is being stored config vivo",
    "start": "463039",
    "end": "466479"
  },
  {
    "text": "stores standard vm configuration data",
    "start": "466479",
    "end": "469280"
  },
  {
    "text": "such as vmx",
    "start": "469280",
    "end": "470720"
  },
  {
    "text": "log and nvram files",
    "start": "470720",
    "end": "474240"
  },
  {
    "text": "data vehicles store data such as vmdks",
    "start": "474240",
    "end": "478720"
  },
  {
    "text": "snapshots and clones swap vivo",
    "start": "478720",
    "end": "483280"
  },
  {
    "text": "stores a copy of the vm memory pages",
    "start": "483280",
    "end": "486319"
  },
  {
    "text": "when the vm is powered on",
    "start": "486319",
    "end": "490000"
  },
  {
    "text": "now let's log in to the guest tkg",
    "start": "490400",
    "end": "493360"
  },
  {
    "text": "cluster i just created",
    "start": "493360",
    "end": "495039"
  },
  {
    "text": "by specifying the tenzu kubernetes",
    "start": "495039",
    "end": "497360"
  },
  {
    "text": "cluster name",
    "start": "497360",
    "end": "498400"
  },
  {
    "text": "and namespace",
    "start": "498400",
    "end": "501280"
  },
  {
    "text": "we can also take a look at the nodes to",
    "start": "503120",
    "end": "505360"
  },
  {
    "text": "make sure",
    "start": "505360",
    "end": "506240"
  },
  {
    "text": "we are in the right context here",
    "start": "506240",
    "end": "509599"
  },
  {
    "text": "we can see the single control plane node",
    "start": "509599",
    "end": "512240"
  },
  {
    "text": "and the three worker nodes",
    "start": "512240",
    "end": "515518"
  },
  {
    "text": "now let's create a stateful application",
    "start": "515839",
    "end": "518959"
  },
  {
    "text": "inside the tkg cluster for the purpose",
    "start": "518959",
    "end": "522320"
  },
  {
    "text": "of this demo",
    "start": "522320",
    "end": "523279"
  },
  {
    "text": "i am deploying an application called",
    "start": "523279",
    "end": "525120"
  },
  {
    "text": "yoga by db",
    "start": "525120",
    "end": "526480"
  },
  {
    "text": "which consists of 3 master nodes and 3",
    "start": "526480",
    "end": "529440"
  },
  {
    "text": "worker nodes",
    "start": "529440",
    "end": "530720"
  },
  {
    "text": "each has a persistent volume claim which",
    "start": "530720",
    "end": "533680"
  },
  {
    "text": "will represent",
    "start": "533680",
    "end": "534720"
  },
  {
    "text": "a single virtual volume",
    "start": "534720",
    "end": "538240"
  },
  {
    "text": "we can see that within a few seconds all",
    "start": "539360",
    "end": "542399"
  },
  {
    "text": "pods are up and running",
    "start": "542399",
    "end": "544480"
  },
  {
    "text": "we can access the application ui by",
    "start": "544480",
    "end": "546880"
  },
  {
    "text": "navigating to the service address",
    "start": "546880",
    "end": "548720"
  },
  {
    "text": "and specify the application port",
    "start": "548720",
    "end": "552560"
  },
  {
    "text": "persistent storage is presented through",
    "start": "554080",
    "end": "556880"
  },
  {
    "text": "the vmware csi driver",
    "start": "556880",
    "end": "558720"
  },
  {
    "text": "called cns cns uses existing storage",
    "start": "558720",
    "end": "562560"
  },
  {
    "text": "options",
    "start": "562560",
    "end": "563120"
  },
  {
    "text": "for storage provisioning in a new way",
    "start": "563120",
    "end": "565600"
  },
  {
    "text": "first",
    "start": "565600",
    "end": "566320"
  },
  {
    "text": "it is based on storage policies as we",
    "start": "566320",
    "end": "568720"
  },
  {
    "text": "saw before",
    "start": "568720",
    "end": "569680"
  },
  {
    "text": "and furthermore it uses first class",
    "start": "569680",
    "end": "572240"
  },
  {
    "text": "disks",
    "start": "572240",
    "end": "572800"
  },
  {
    "text": "instead of standard disks dell emc power",
    "start": "572800",
    "end": "576640"
  },
  {
    "text": "protect data manager",
    "start": "576640",
    "end": "578160"
  },
  {
    "text": "and power protect dd series appliances",
    "start": "578160",
    "end": "581040"
  },
  {
    "text": "are the industry leading data protection",
    "start": "581040",
    "end": "583120"
  },
  {
    "text": "software and purpose-built",
    "start": "583120",
    "end": "584880"
  },
  {
    "text": "hardware you can deploy power protect",
    "start": "584880",
    "end": "587440"
  },
  {
    "text": "data manager capabilities",
    "start": "587440",
    "end": "589360"
  },
  {
    "text": "for your kubernetes environment to",
    "start": "589360",
    "end": "591680"
  },
  {
    "text": "protect",
    "start": "591680",
    "end": "592480"
  },
  {
    "text": "complete applications with the benefits",
    "start": "592480",
    "end": "594880"
  },
  {
    "text": "of application consistency",
    "start": "594880",
    "end": "596800"
  },
  {
    "text": "and the most efficient data reduction",
    "start": "596800",
    "end": "599680"
  },
  {
    "text": "you can do this both",
    "start": "599680",
    "end": "600959"
  },
  {
    "text": "for on premises as well as for a public",
    "start": "600959",
    "end": "603920"
  },
  {
    "text": "cloud deployment",
    "start": "603920",
    "end": "605040"
  },
  {
    "text": "of kubernetes",
    "start": "605040",
    "end": "607920"
  },
  {
    "text": "for this demo we have chosen a",
    "start": "608480",
    "end": "610160"
  },
  {
    "text": "kubernetes deployment in aws",
    "start": "610160",
    "end": "612720"
  },
  {
    "text": "to show the data protection and",
    "start": "612720",
    "end": "614399"
  },
  {
    "text": "management workflows",
    "start": "614399",
    "end": "616720"
  },
  {
    "text": "our sample application is a my sequel",
    "start": "616720",
    "end": "619120"
  },
  {
    "text": "namespace",
    "start": "619120",
    "end": "620240"
  },
  {
    "text": "for a wordpress blog",
    "start": "620240",
    "end": "623680"
  },
  {
    "text": "let's take a quick look at the app",
    "start": "623680",
    "end": "625519"
  },
  {
    "text": "namespace that we are protecting",
    "start": "625519",
    "end": "627600"
  },
  {
    "text": "and you can see the details of the parts",
    "start": "627600",
    "end": "629839"
  },
  {
    "text": "pvcs config maps etc",
    "start": "629839",
    "end": "632079"
  },
  {
    "text": "for the application",
    "start": "632079",
    "end": "635120"
  },
  {
    "text": "to enable application consistency we",
    "start": "641279",
    "end": "643920"
  },
  {
    "text": "introduced the concept of",
    "start": "643920",
    "end": "645519"
  },
  {
    "text": "application templates we are already",
    "start": "645519",
    "end": "648160"
  },
  {
    "text": "shipping templates for mysql and mongodb",
    "start": "648160",
    "end": "651040"
  },
  {
    "text": "and more will be added in the future and",
    "start": "651040",
    "end": "653279"
  },
  {
    "text": "you can also modify these or create new",
    "start": "653279",
    "end": "655440"
  },
  {
    "text": "ones yourself",
    "start": "655440",
    "end": "656640"
  },
  {
    "text": "based on the requirements of your",
    "start": "656640",
    "end": "658839"
  },
  {
    "text": "database",
    "start": "658839",
    "end": "660000"
  },
  {
    "text": "in the application template yaml file",
    "start": "660000",
    "end": "662240"
  },
  {
    "text": "the required calls for queries in the",
    "start": "662240",
    "end": "664000"
  },
  {
    "text": "database",
    "start": "664000",
    "end": "664959"
  },
  {
    "text": "are under pre-hooked section and the",
    "start": "664959",
    "end": "667040"
  },
  {
    "text": "unquizzing calls",
    "start": "667040",
    "end": "668560"
  },
  {
    "text": "are under the post hook section the nice",
    "start": "668560",
    "end": "671760"
  },
  {
    "text": "thing about these templates is that they",
    "start": "671760",
    "end": "674160"
  },
  {
    "text": "run",
    "start": "674160",
    "end": "674480"
  },
  {
    "text": "agentless meaning the hooks do not",
    "start": "674480",
    "end": "676399"
  },
  {
    "text": "require any agent to be pushed onto the",
    "start": "676399",
    "end": "678560"
  },
  {
    "text": "production cluster",
    "start": "678560",
    "end": "679839"
  },
  {
    "text": "to make these questing and unquestion",
    "start": "679839",
    "end": "682320"
  },
  {
    "text": "calls",
    "start": "682320",
    "end": "683760"
  },
  {
    "text": "to use this template for our application",
    "start": "683760",
    "end": "686079"
  },
  {
    "text": "we'll also make sure that we are using",
    "start": "686079",
    "end": "688160"
  },
  {
    "text": "the right application",
    "start": "688160",
    "end": "689680"
  },
  {
    "text": "label",
    "start": "689680",
    "end": "692079"
  },
  {
    "text": "now let's create an app consistent",
    "start": "694640",
    "end": "696480"
  },
  {
    "text": "protection plan for this mysql",
    "start": "696480",
    "end": "698640"
  },
  {
    "text": "application",
    "start": "698640",
    "end": "699920"
  },
  {
    "text": "we'll go to the power protect data",
    "start": "699920",
    "end": "701440"
  },
  {
    "text": "manager ui and create a protection",
    "start": "701440",
    "end": "704000"
  },
  {
    "text": "policy",
    "start": "704000",
    "end": "704800"
  },
  {
    "text": "for the app using the policy wizard",
    "start": "704800",
    "end": "716399"
  },
  {
    "text": "select kubernetes for application type",
    "start": "716399",
    "end": "720480"
  },
  {
    "text": "leave the default crash consistent",
    "start": "722720",
    "end": "724560"
  },
  {
    "text": "option since the application consistency",
    "start": "724560",
    "end": "726800"
  },
  {
    "text": "is coming",
    "start": "726800",
    "end": "727519"
  },
  {
    "text": "from the template yaml file that we",
    "start": "727519",
    "end": "729519"
  },
  {
    "text": "already assigned to the application",
    "start": "729519",
    "end": "731600"
  },
  {
    "text": "using the appropriate label",
    "start": "731600",
    "end": "735600"
  },
  {
    "text": "here we select the mysql app that we",
    "start": "735600",
    "end": "738079"
  },
  {
    "text": "want the policy to apply",
    "start": "738079",
    "end": "745839"
  },
  {
    "text": "under schedule we specify the backup",
    "start": "746639",
    "end": "749440"
  },
  {
    "text": "frequency",
    "start": "749440",
    "end": "750240"
  },
  {
    "text": "and retention policies",
    "start": "750240",
    "end": "759839"
  },
  {
    "text": "now let us go ahead and initiate a",
    "start": "762079",
    "end": "764079"
  },
  {
    "text": "backup in the",
    "start": "764079",
    "end": "765519"
  },
  {
    "text": "backup now wizard using the policy we",
    "start": "765519",
    "end": "768320"
  },
  {
    "text": "just created",
    "start": "768320",
    "end": "773839"
  },
  {
    "text": "once the job is done we can check the",
    "start": "783440",
    "end": "785920"
  },
  {
    "text": "new copy",
    "start": "785920",
    "end": "786880"
  },
  {
    "text": "of the application created on the data",
    "start": "786880",
    "end": "789600"
  },
  {
    "text": "domain target",
    "start": "789600",
    "end": "792399"
  },
  {
    "text": "now let us see how we can use this copy",
    "start": "795200",
    "end": "797440"
  },
  {
    "text": "of the application deployment",
    "start": "797440",
    "end": "799279"
  },
  {
    "text": "to spin it up on an entirely new",
    "start": "799279",
    "end": "801680"
  },
  {
    "text": "kubernetes cluster",
    "start": "801680",
    "end": "803440"
  },
  {
    "text": "let me go back to the data manager ui",
    "start": "803440",
    "end": "805839"
  },
  {
    "text": "and initiate a restore",
    "start": "805839",
    "end": "807920"
  },
  {
    "text": "using the asset restore wizard",
    "start": "807920",
    "end": "811920"
  },
  {
    "text": "you select the cluster to restore the",
    "start": "811920",
    "end": "813680"
  },
  {
    "text": "app to and here",
    "start": "813680",
    "end": "815440"
  },
  {
    "text": "i'm selecting the cluster called target",
    "start": "815440",
    "end": "817760"
  },
  {
    "text": "for the app",
    "start": "817760",
    "end": "818639"
  },
  {
    "text": "to be restored",
    "start": "818639",
    "end": "821519"
  },
  {
    "text": "and here i'm selecting the entire",
    "start": "826639",
    "end": "828480"
  },
  {
    "text": "application to be restored and not just",
    "start": "828480",
    "end": "830240"
  },
  {
    "text": "the database pvcs",
    "start": "830240",
    "end": "833199"
  },
  {
    "text": "you can restore to one of the namespaces",
    "start": "833199",
    "end": "835279"
  },
  {
    "text": "that are already available on the",
    "start": "835279",
    "end": "836959"
  },
  {
    "text": "cluster",
    "start": "836959",
    "end": "837760"
  },
  {
    "text": "or can specify a new namespace",
    "start": "837760",
    "end": "840880"
  },
  {
    "text": "for the restored app",
    "start": "840880",
    "end": "844320"
  },
  {
    "text": "pvcs is already included for restore",
    "start": "846720",
    "end": "850320"
  },
  {
    "text": "i continue and on the summary tab you",
    "start": "850320",
    "end": "853360"
  },
  {
    "text": "can check",
    "start": "853360",
    "end": "854320"
  },
  {
    "text": "the details and hit the restore button",
    "start": "854320",
    "end": "871839"
  },
  {
    "text": "once the restore job is done we can go",
    "start": "873680",
    "end": "876320"
  },
  {
    "text": "back to the command line",
    "start": "876320",
    "end": "877600"
  },
  {
    "text": "of this new cluster and check the newly",
    "start": "877600",
    "end": "879920"
  },
  {
    "text": "created namespace",
    "start": "879920",
    "end": "881519"
  },
  {
    "text": "and all the objects of the application's",
    "start": "881519",
    "end": "884160"
  },
  {
    "text": "stateful set",
    "start": "884160",
    "end": "885680"
  },
  {
    "text": "the parts pvcs config maps etc",
    "start": "885680",
    "end": "889680"
  },
  {
    "text": "thank you for watching",
    "start": "889680",
    "end": "899839"
  },
  {
    "text": "you",
    "start": "900720",
    "end": "902800"
  }
]