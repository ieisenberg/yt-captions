[
  {
    "start": "0",
    "end": "11000"
  },
  {
    "text": "hello everyone thanks for joining us",
    "start": "1620",
    "end": "3899"
  },
  {
    "text": "today I am Charles software engineer at",
    "start": "3899",
    "end": "6420"
  },
  {
    "text": "pinkap today I'm going to talk about the",
    "start": "6420",
    "end": "9360"
  },
  {
    "text": "evolution of Thai KB",
    "start": "9360",
    "end": "11820"
  },
  {
    "start": "11000",
    "end": "11000"
  },
  {
    "text": "the talk will be divided into four",
    "start": "11820",
    "end": "13860"
  },
  {
    "text": "sections",
    "start": "13860",
    "end": "15120"
  },
  {
    "text": "first we will briefly introduce the",
    "start": "15120",
    "end": "17699"
  },
  {
    "text": "history of Thai KV and summarize the",
    "start": "17699",
    "end": "20160"
  },
  {
    "text": "major requirements for cloud native key",
    "start": "20160",
    "end": "22320"
  },
  {
    "text": "Value Store",
    "start": "22320",
    "end": "23520"
  },
  {
    "text": "then I will give a high level",
    "start": "23520",
    "end": "25560"
  },
  {
    "text": "introduction to the overall architecture",
    "start": "25560",
    "end": "28019"
  },
  {
    "text": "of the Thai KB which can help you to",
    "start": "28019",
    "end": "30660"
  },
  {
    "text": "better understand the rest of the talk",
    "start": "30660",
    "end": "33180"
  },
  {
    "text": "after that I will elaborate how thake we",
    "start": "33180",
    "end": "36660"
  },
  {
    "text": "meet the requirements we mentioned in",
    "start": "36660",
    "end": "38579"
  },
  {
    "text": "the first part",
    "start": "38579",
    "end": "39840"
  },
  {
    "text": "and finally I will introduce how we",
    "start": "39840",
    "end": "42420"
  },
  {
    "text": "adapt ikv to the modern Cloud",
    "start": "42420",
    "end": "44340"
  },
  {
    "text": "infrastructure and why it can be solid",
    "start": "44340",
    "end": "46920"
  },
  {
    "text": "building block not only for cloud native",
    "start": "46920",
    "end": "49440"
  },
  {
    "text": "database but also for other higher level",
    "start": "49440",
    "end": "52379"
  },
  {
    "text": "cloud servers",
    "start": "52379",
    "end": "54719"
  },
  {
    "text": "OK let's get started first why we wanted",
    "start": "54719",
    "end": "58140"
  },
  {
    "text": "to build Thai KV at the first place",
    "start": "58140",
    "end": "60140"
  },
  {
    "text": "there are so many key values store out",
    "start": "60140",
    "end": "63059"
  },
  {
    "text": "there while it does not fit for our case",
    "start": "63059",
    "end": "65700"
  },
  {
    "text": "and what are some requirements for a",
    "start": "65700",
    "end": "68700"
  },
  {
    "text": "cloud native key Value Store",
    "start": "68700",
    "end": "71180"
  },
  {
    "start": "71000",
    "end": "71000"
  },
  {
    "text": "then we have to talk a little bit",
    "start": "71180",
    "end": "73979"
  },
  {
    "text": "history of Tidy B the cloud native",
    "start": "73979",
    "end": "76619"
  },
  {
    "text": "database support both oltp and olap",
    "start": "76619",
    "end": "79500"
  },
  {
    "text": "workloads back in 2015 when we build up",
    "start": "79500",
    "end": "83340"
  },
  {
    "text": "the first version of Thai DB we build it",
    "start": "83340",
    "end": "86220"
  },
  {
    "text": "up on hbase and hdfs",
    "start": "86220",
    "end": "89340"
  },
  {
    "text": "if you have ever dealed with the hadoops",
    "start": "89340",
    "end": "92100"
  },
  {
    "text": "of the wear Stacks you may have the same",
    "start": "92100",
    "end": "94439"
  },
  {
    "text": "feeling that they are not easy to work",
    "start": "94439",
    "end": "96720"
  },
  {
    "text": "with in addition as we want to develop a",
    "start": "96720",
    "end": "100200"
  },
  {
    "text": "database support distributed transaction",
    "start": "100200",
    "end": "102560"
  },
  {
    "text": "then we have to add distributed",
    "start": "102560",
    "end": "105420"
  },
  {
    "text": "transaction support on top of the hbase",
    "start": "105420",
    "end": "108000"
  },
  {
    "text": "which cause poor performers and high",
    "start": "108000",
    "end": "110579"
  },
  {
    "text": "operation costs",
    "start": "110579",
    "end": "113360"
  },
  {
    "text": "after suffering enough we finally",
    "start": "113360",
    "end": "116640"
  },
  {
    "text": "designed to build our own storage Engine",
    "start": "116640",
    "end": "118799"
  },
  {
    "text": "with following requirements first it",
    "start": "118799",
    "end": "122340"
  },
  {
    "text": "must be able to leverage in modern Cloud",
    "start": "122340",
    "end": "124439"
  },
  {
    "text": "infrastructure to easily scale out like",
    "start": "124439",
    "end": "127079"
  },
  {
    "text": "other nosql system",
    "start": "127079",
    "end": "129060"
  },
  {
    "text": "second it should support high",
    "start": "129060",
    "end": "131280"
  },
  {
    "text": "performance i o",
    "start": "131280",
    "end": "133140"
  },
  {
    "text": "third it should support distributed",
    "start": "133140",
    "end": "135780"
  },
  {
    "text": "transaction inherently",
    "start": "135780",
    "end": "137760"
  },
  {
    "text": "force it should use modern data",
    "start": "137760",
    "end": "140340"
  },
  {
    "text": "replication protocol which we choose to",
    "start": "140340",
    "end": "142500"
  },
  {
    "text": "wrap the protocol",
    "start": "142500",
    "end": "143819"
  },
  {
    "text": "fifths we want to make sure it is easy",
    "start": "143819",
    "end": "146580"
  },
  {
    "text": "to maintain so it must use a clean",
    "start": "146580",
    "end": "148860"
  },
  {
    "text": "architecture and last but not least it",
    "start": "148860",
    "end": "151739"
  },
  {
    "text": "should be easy to use anyone who use the",
    "start": "151739",
    "end": "154860"
  },
  {
    "text": "other key value store should be able to",
    "start": "154860",
    "end": "157020"
  },
  {
    "text": "pick it up very quickly",
    "start": "157020",
    "end": "159540"
  },
  {
    "text": "so from day one we designed to develop a",
    "start": "159540",
    "end": "162480"
  },
  {
    "text": "storage engine that can be solid",
    "start": "162480",
    "end": "164700"
  },
  {
    "text": "building block for other distribute",
    "start": "164700",
    "end": "166920"
  },
  {
    "text": "system and really help people out",
    "start": "166920",
    "end": "169560"
  },
  {
    "text": "and on this principle can be applied to",
    "start": "169560",
    "end": "172080"
  },
  {
    "text": "all software from the Ping cap community",
    "start": "172080",
    "end": "176180"
  },
  {
    "start": "175000",
    "end": "175000"
  },
  {
    "text": "in general we can divide the",
    "start": "176180",
    "end": "178500"
  },
  {
    "text": "aforementioned requirements into four",
    "start": "178500",
    "end": "180540"
  },
  {
    "text": "categories",
    "start": "180540",
    "end": "181800"
  },
  {
    "text": "which is to say the cloud native storage",
    "start": "181800",
    "end": "184379"
  },
  {
    "text": "engine we wanted to build should first",
    "start": "184379",
    "end": "187260"
  },
  {
    "text": "be highly scalable a large data",
    "start": "187260",
    "end": "190260"
  },
  {
    "text": "processing platform built on top of it",
    "start": "190260",
    "end": "192480"
  },
  {
    "text": "may need to store tens of millions of",
    "start": "192480",
    "end": "195000"
  },
  {
    "text": "entries and hundreds terabytes of data",
    "start": "195000",
    "end": "197879"
  },
  {
    "text": "which requires the back-end key value",
    "start": "197879",
    "end": "200159"
  },
  {
    "text": "store to be highly scalable",
    "start": "200159",
    "end": "202620"
  },
  {
    "text": "second ensure data consistency",
    "start": "202620",
    "end": "205739"
  },
  {
    "text": "as we mentioned before we want to build",
    "start": "205739",
    "end": "208500"
  },
  {
    "text": "storage engines supporting distributed",
    "start": "208500",
    "end": "210780"
  },
  {
    "text": "transaction inherently and they use",
    "start": "210780",
    "end": "213180"
  },
  {
    "text": "modern data consensus protocol",
    "start": "213180",
    "end": "216060"
  },
  {
    "text": "third support high performance i o if we",
    "start": "216060",
    "end": "219720"
  },
  {
    "text": "have hundreds of clients try to read or",
    "start": "219720",
    "end": "222480"
  },
  {
    "text": "write the storage at each end time it",
    "start": "222480",
    "end": "225180"
  },
  {
    "text": "would be critical that they can get a",
    "start": "225180",
    "end": "227280"
  },
  {
    "text": "response within a short time",
    "start": "227280",
    "end": "229379"
  },
  {
    "text": "and of course be extremely reliable a",
    "start": "229379",
    "end": "232799"
  },
  {
    "text": "key value store is usually played as the",
    "start": "232799",
    "end": "235140"
  },
  {
    "text": "brand of the host system",
    "start": "235140",
    "end": "237000"
  },
  {
    "text": "the failure of the data storage can",
    "start": "237000",
    "end": "239700"
  },
  {
    "text": "result in losing control of the whole",
    "start": "239700",
    "end": "241739"
  },
  {
    "text": "system which is intolerable",
    "start": "241739",
    "end": "244440"
  },
  {
    "text": "next I will try to elaborate how Thai KV",
    "start": "244440",
    "end": "247739"
  },
  {
    "text": "meets all these requirements",
    "start": "247739",
    "end": "250319"
  },
  {
    "text": "but before that let me briefly introduce",
    "start": "250319",
    "end": "253500"
  },
  {
    "text": "the overall system architecture of Thai",
    "start": "253500",
    "end": "255900"
  },
  {
    "text": "KB from high level and hopefully it can",
    "start": "255900",
    "end": "259260"
  },
  {
    "text": "help you to better understand the rest",
    "start": "259260",
    "end": "261120"
  },
  {
    "text": "of this talk",
    "start": "261120",
    "end": "262919"
  },
  {
    "start": "262000",
    "end": "262000"
  },
  {
    "text": "a tech AV cluster looks like this",
    "start": "262919",
    "end": "266460"
  },
  {
    "text": "the KV nodes are on the button you can",
    "start": "266460",
    "end": "269820"
  },
  {
    "text": "have as many as you like but we usually",
    "start": "269820",
    "end": "272580"
  },
  {
    "text": "suggest to have at least three",
    "start": "272580",
    "end": "275040"
  },
  {
    "text": "we split the data into regions I know",
    "start": "275040",
    "end": "278100"
  },
  {
    "text": "the name is confusing but you can just",
    "start": "278100",
    "end": "280800"
  },
  {
    "text": "treat a region as a subset of the data",
    "start": "280800",
    "end": "284220"
  },
  {
    "text": "as shown in the graph we split the",
    "start": "284220",
    "end": "286979"
  },
  {
    "text": "complete data set into five subsets",
    "start": "286979",
    "end": "289259"
  },
  {
    "text": "which are five regions each region",
    "start": "289259",
    "end": "292380"
  },
  {
    "text": "contains multiple replicas which are",
    "start": "292380",
    "end": "294900"
  },
  {
    "text": "spread across different High KV nodes in",
    "start": "294900",
    "end": "297960"
  },
  {
    "text": "most of the cases three replicas should",
    "start": "297960",
    "end": "300540"
  },
  {
    "text": "be enough",
    "start": "300540",
    "end": "301680"
  },
  {
    "text": "on the top we have the Thai KV client",
    "start": "301680",
    "end": "304320"
  },
  {
    "text": "communicating with the high KV cluster",
    "start": "304320",
    "end": "306840"
  },
  {
    "text": "through the grpc protocol",
    "start": "306840",
    "end": "309180"
  },
  {
    "text": "and on the top right we have the",
    "start": "309180",
    "end": "311160"
  },
  {
    "text": "placement driver which is the scheduler",
    "start": "311160",
    "end": "313560"
  },
  {
    "text": "of the Thai KV cluster",
    "start": "313560",
    "end": "315720"
  },
  {
    "text": "the placement driver has three major",
    "start": "315720",
    "end": "317940"
  },
  {
    "text": "Jobs first generate Global monolithic",
    "start": "317940",
    "end": "321419"
  },
  {
    "text": "and a unique timestamps for the",
    "start": "321419",
    "end": "323820"
  },
  {
    "text": "transaction which can also refer as Tso",
    "start": "323820",
    "end": "328560"
  },
  {
    "text": "sometimes people like to use the term",
    "start": "328560",
    "end": "330720"
  },
  {
    "text": "timestamp Oracle but I think it is a",
    "start": "330720",
    "end": "333600"
  },
  {
    "text": "confusing term so let's stick with Tso",
    "start": "333600",
    "end": "337139"
  },
  {
    "text": "second manage all date region across",
    "start": "337139",
    "end": "339960"
  },
  {
    "text": "Thai KB nodes like rebalancing regions",
    "start": "339960",
    "end": "342600"
  },
  {
    "text": "migrate region from offline nodes to",
    "start": "342600",
    "end": "345000"
  },
  {
    "text": "active nodes",
    "start": "345000",
    "end": "346500"
  },
  {
    "text": "third as placement drivers towards",
    "start": "346500",
    "end": "348840"
  },
  {
    "text": "metadata of all regions it will also be",
    "start": "348840",
    "end": "351900"
  },
  {
    "text": "responsible for routing read and write",
    "start": "351900",
    "end": "354300"
  },
  {
    "text": "request from client to correct the node",
    "start": "354300",
    "end": "358440"
  },
  {
    "start": "357000",
    "end": "357000"
  },
  {
    "text": "OK we have seen how takibi looks like on",
    "start": "358440",
    "end": "361979"
  },
  {
    "text": "cluster level next let's have a look at",
    "start": "361979",
    "end": "365039"
  },
  {
    "text": "how thaikov implemented internally from",
    "start": "365039",
    "end": "367979"
  },
  {
    "text": "the node level",
    "start": "367979",
    "end": "369600"
  },
  {
    "text": "each take heavy node can be divided into",
    "start": "369600",
    "end": "372240"
  },
  {
    "text": "four layers",
    "start": "372240",
    "end": "373800"
  },
  {
    "text": "from button up we have storage engine",
    "start": "373800",
    "end": "376800"
  },
  {
    "text": "layer which is a low level local key",
    "start": "376800",
    "end": "379740"
  },
  {
    "text": "value store and we choose to use the",
    "start": "379740",
    "end": "382380"
  },
  {
    "text": "rocksdb",
    "start": "382380",
    "end": "383699"
  },
  {
    "text": "we leverage this layer to persist the",
    "start": "383699",
    "end": "386220"
  },
  {
    "text": "data into the local file system",
    "start": "386220",
    "end": "389039"
  },
  {
    "text": "we did not Implement a local key Value",
    "start": "389039",
    "end": "391500"
  },
  {
    "text": "Store from scratch as implementing and",
    "start": "391500",
    "end": "394919"
  },
  {
    "text": "high performance local key Value Store",
    "start": "394919",
    "end": "397319"
  },
  {
    "text": "requires a lot of efforts and roxdb has",
    "start": "397319",
    "end": "401520"
  },
  {
    "text": "been proven to be reliable with",
    "start": "401520",
    "end": "403680"
  },
  {
    "text": "predictable performers in production by",
    "start": "403680",
    "end": "406440"
  },
  {
    "text": "Manning date management system",
    "start": "406440",
    "end": "409139"
  },
  {
    "text": "one level up we have the consensus layer",
    "start": "409139",
    "end": "412020"
  },
  {
    "text": "this layer presents the abstraction",
    "start": "412020",
    "end": "414479"
  },
  {
    "text": "representing multiple replicas which",
    "start": "414479",
    "end": "417240"
  },
  {
    "text": "allow upper layer to feel like they are",
    "start": "417240",
    "end": "419940"
  },
  {
    "text": "dealing with one piece of data instead",
    "start": "419940",
    "end": "422220"
  },
  {
    "text": "of multiple replicas like etcd we use",
    "start": "422220",
    "end": "425639"
  },
  {
    "text": "Raptor consensus protocol to ensure the",
    "start": "425639",
    "end": "428460"
  },
  {
    "text": "data consistency between replicas across",
    "start": "428460",
    "end": "431220"
  },
  {
    "text": "multiple type KV nodes but different",
    "start": "431220",
    "end": "433560"
  },
  {
    "text": "from egcd we use multiraptor group",
    "start": "433560",
    "end": "436139"
  },
  {
    "text": "instead of single router group to",
    "start": "436139",
    "end": "438240"
  },
  {
    "text": "improve the scalability and I O",
    "start": "438240",
    "end": "440759"
  },
  {
    "text": "throughputs which we will cover in the",
    "start": "440759",
    "end": "442979"
  },
  {
    "text": "following slides",
    "start": "442979",
    "end": "444780"
  },
  {
    "text": "on the top of the consensus layer we",
    "start": "444780",
    "end": "447660"
  },
  {
    "text": "have the transaction layer we use the",
    "start": "447660",
    "end": "450360"
  },
  {
    "text": "multiversion concurrency control mvcc to",
    "start": "450360",
    "end": "453720"
  },
  {
    "text": "implement the Google percolator protocol",
    "start": "453720",
    "end": "456240"
  },
  {
    "text": "which can meet transaction using",
    "start": "456240",
    "end": "458580"
  },
  {
    "text": "two-phase commit algorithm",
    "start": "458580",
    "end": "460680"
  },
  {
    "text": "a lot of database terms right if you",
    "start": "460680",
    "end": "463319"
  },
  {
    "text": "feel like it is a little bit too much",
    "start": "463319",
    "end": "465539"
  },
  {
    "text": "that's normal it is not easy for",
    "start": "465539",
    "end": "468300"
  },
  {
    "text": "database experts as well and from my",
    "start": "468300",
    "end": "471240"
  },
  {
    "text": "opinion the distributed transaction is",
    "start": "471240",
    "end": "473940"
  },
  {
    "text": "one of the hardest part to understand in",
    "start": "473940",
    "end": "476520"
  },
  {
    "text": "database management system but",
    "start": "476520",
    "end": "478740"
  },
  {
    "text": "fortunately Pi KV has already",
    "start": "478740",
    "end": "481080"
  },
  {
    "text": "implemented and we can simply rely on it",
    "start": "481080",
    "end": "484860"
  },
  {
    "text": "on the top we have the key value API",
    "start": "484860",
    "end": "487560"
  },
  {
    "text": "layer which is responsible for handling",
    "start": "487560",
    "end": "490500"
  },
  {
    "text": "requests sent from client",
    "start": "490500",
    "end": "492960"
  },
  {
    "text": "the API is quite generic",
    "start": "492960",
    "end": "495360"
  },
  {
    "text": "get put delete scan",
    "start": "495360",
    "end": "498599"
  },
  {
    "text": "Etc if you have ever used any other key",
    "start": "498599",
    "end": "502199"
  },
  {
    "text": "value store before then I believe you",
    "start": "502199",
    "end": "504720"
  },
  {
    "text": "can pick it up very quickly",
    "start": "504720",
    "end": "507180"
  },
  {
    "text": "so now we have enough background and I",
    "start": "507180",
    "end": "510599"
  },
  {
    "text": "can start explaining how Thai KV",
    "start": "510599",
    "end": "512880"
  },
  {
    "text": "addressed the requirements we mentioned",
    "start": "512880",
    "end": "514860"
  },
  {
    "text": "before",
    "start": "514860",
    "end": "516300"
  },
  {
    "start": "515000",
    "end": "515000"
  },
  {
    "text": "first let's try to find out is Thai KV",
    "start": "516300",
    "end": "519599"
  },
  {
    "text": "highly scalable",
    "start": "519599",
    "end": "520979"
  },
  {
    "text": "in Thai KV we divide large data sets",
    "start": "520979",
    "end": "523620"
  },
  {
    "text": "into small regions which each region",
    "start": "523620",
    "end": "526020"
  },
  {
    "text": "containing several replicas making up",
    "start": "526020",
    "end": "528420"
  },
  {
    "text": "their own Raptor group",
    "start": "528420",
    "end": "530279"
  },
  {
    "text": "the number of replicas may change",
    "start": "530279",
    "end": "532620"
  },
  {
    "text": "depends on how Thai KV nodes are spread",
    "start": "532620",
    "end": "535320"
  },
  {
    "text": "geographically",
    "start": "535320",
    "end": "536880"
  },
  {
    "text": "but in most of the cases each single",
    "start": "536880",
    "end": "539640"
  },
  {
    "text": "Target node does not need to store the",
    "start": "539640",
    "end": "542399"
  },
  {
    "text": "full copy of the data that is to say",
    "start": "542399",
    "end": "544920"
  },
  {
    "text": "Thai KV is horizontal scalable when",
    "start": "544920",
    "end": "548640"
  },
  {
    "text": "volume of data is increasing we can",
    "start": "548640",
    "end": "551399"
  },
  {
    "text": "simply scale out the Thai KV cluster by",
    "start": "551399",
    "end": "554100"
  },
  {
    "text": "adding more nodes",
    "start": "554100",
    "end": "556620"
  },
  {
    "text": "you may be curious if each node does not",
    "start": "556620",
    "end": "559560"
  },
  {
    "text": "have a complete copy of data then how",
    "start": "559560",
    "end": "562680"
  },
  {
    "text": "can we tell which node should we access",
    "start": "562680",
    "end": "564839"
  },
  {
    "text": "if we want to read or write certain",
    "start": "564839",
    "end": "567480"
  },
  {
    "text": "entries",
    "start": "567480",
    "end": "568680"
  },
  {
    "text": "if you remember we have a central",
    "start": "568680",
    "end": "571260"
  },
  {
    "text": "component called placement driver which",
    "start": "571260",
    "end": "574380"
  },
  {
    "text": "will act as a scheduler of the Thai KV",
    "start": "574380",
    "end": "576839"
  },
  {
    "text": "cluster",
    "start": "576839",
    "end": "577860"
  },
  {
    "text": "as replicas of each region making up",
    "start": "577860",
    "end": "580560"
  },
  {
    "text": "their own raft group the leaders of each",
    "start": "580560",
    "end": "583440"
  },
  {
    "text": "group will hold the complete information",
    "start": "583440",
    "end": "585480"
  },
  {
    "text": "of the region like the number of active",
    "start": "585480",
    "end": "588959"
  },
  {
    "text": "replicas the topology of the replicas",
    "start": "588959",
    "end": "592019"
  },
  {
    "text": "Etc",
    "start": "592019",
    "end": "592920"
  },
  {
    "text": "and a leader of each group will send",
    "start": "592920",
    "end": "595380"
  },
  {
    "text": "harpit to the placement driver",
    "start": "595380",
    "end": "597120"
  },
  {
    "text": "periodically including all this",
    "start": "597120",
    "end": "599940"
  },
  {
    "text": "information",
    "start": "599940",
    "end": "601200"
  },
  {
    "text": "then when a Thai KV cluster service can",
    "start": "601200",
    "end": "604440"
  },
  {
    "text": "service and request it from the client",
    "start": "604440",
    "end": "607620"
  },
  {
    "text": "it will first Theory the placement",
    "start": "607620",
    "end": "610140"
  },
  {
    "text": "driver get a Target note and then route",
    "start": "610140",
    "end": "613080"
  },
  {
    "text": "the request to the node the placement",
    "start": "613080",
    "end": "615959"
  },
  {
    "text": "driver also support users to create",
    "start": "615959",
    "end": "618300"
  },
  {
    "text": "highly customized configurations like",
    "start": "618300",
    "end": "621600"
  },
  {
    "text": "maximum number of replicas in each",
    "start": "621600",
    "end": "623820"
  },
  {
    "text": "region how can we rebalance the leaders",
    "start": "623820",
    "end": "626700"
  },
  {
    "text": "across nodes and in the scheduling",
    "start": "626700",
    "end": "628920"
  },
  {
    "text": "throughputs because too much data",
    "start": "628920",
    "end": "631260"
  },
  {
    "text": "balancing and migration may affect the",
    "start": "631260",
    "end": "633480"
  },
  {
    "text": "performance of online servers",
    "start": "633480",
    "end": "636360"
  },
  {
    "text": "to sign up by breaking up the data into",
    "start": "636360",
    "end": "639420"
  },
  {
    "text": "partition and the spread replicas of the",
    "start": "639420",
    "end": "642420"
  },
  {
    "text": "partition across nodes a tech AV cluster",
    "start": "642420",
    "end": "645540"
  },
  {
    "text": "can be easily scaled out to hundreds of",
    "start": "645540",
    "end": "648000"
  },
  {
    "text": "nodes here are two large real world type",
    "start": "648000",
    "end": "651120"
  },
  {
    "text": "AV clusters",
    "start": "651120",
    "end": "652620"
  },
  {
    "text": "the left is one of our user streets it",
    "start": "652620",
    "end": "656160"
  },
  {
    "text": "is a Thai DB cluster backed by a large",
    "start": "656160",
    "end": "658740"
  },
  {
    "text": "Thai KV cluster consists of 168 nodes",
    "start": "658740",
    "end": "662700"
  },
  {
    "text": "with 1820 billion rows in the 318",
    "start": "662700",
    "end": "667320"
  },
  {
    "text": "terabytes of data which need to support",
    "start": "667320",
    "end": "670019"
  },
  {
    "text": "100 million reads and 87 000 writes per",
    "start": "670019",
    "end": "673740"
  },
  {
    "text": "second",
    "start": "673740",
    "end": "674940"
  },
  {
    "text": "the users of it is the largest one but",
    "start": "674940",
    "end": "678060"
  },
  {
    "text": "soon we had a larger one which consists",
    "start": "678060",
    "end": "680940"
  },
  {
    "text": "of 212 nodes and can hold up to 827",
    "start": "680940",
    "end": "684899"
  },
  {
    "text": "terabytes of data we have not tried yet",
    "start": "684899",
    "end": "687600"
  },
  {
    "text": "but we did not experience any pressure",
    "start": "687600",
    "end": "690060"
  },
  {
    "text": "with this cluster so I believe we can",
    "start": "690060",
    "end": "692760"
  },
  {
    "text": "actually grow larger",
    "start": "692760",
    "end": "695160"
  },
  {
    "start": "694000",
    "end": "694000"
  },
  {
    "text": "okay",
    "start": "695160",
    "end": "696660"
  },
  {
    "text": "now we map the scalability requirement",
    "start": "696660",
    "end": "699140"
  },
  {
    "text": "next we need to ensure the data",
    "start": "699140",
    "end": "701880"
  },
  {
    "text": "consistency",
    "start": "701880",
    "end": "703140"
  },
  {
    "text": "when we are talking about the data",
    "start": "703140",
    "end": "705540"
  },
  {
    "text": "consistency of a distributed database or",
    "start": "705540",
    "end": "708480"
  },
  {
    "text": "data storage we usually need to achieve",
    "start": "708480",
    "end": "711120"
  },
  {
    "text": "two goals one is isolating transaction",
    "start": "711120",
    "end": "714420"
  },
  {
    "text": "from each other",
    "start": "714420",
    "end": "715920"
  },
  {
    "text": "another is keep the data consistent",
    "start": "715920",
    "end": "718320"
  },
  {
    "text": "between replicas",
    "start": "718320",
    "end": "720120"
  },
  {
    "text": "these are two complicated topics was a",
    "start": "720120",
    "end": "723360"
  },
  {
    "text": "whole session to discuss and we do not",
    "start": "723360",
    "end": "725880"
  },
  {
    "text": "have time to do that today so let's try",
    "start": "725880",
    "end": "728760"
  },
  {
    "text": "to make it a simple",
    "start": "728760",
    "end": "730140"
  },
  {
    "text": "in short transaction is an operation",
    "start": "730140",
    "end": "733079"
  },
  {
    "text": "unit containing multiple operations for",
    "start": "733079",
    "end": "735959"
  },
  {
    "text": "example you may want to read an entry",
    "start": "735959",
    "end": "738420"
  },
  {
    "text": "and update it depends on the existing",
    "start": "738420",
    "end": "741000"
  },
  {
    "text": "value this involves one read operation",
    "start": "741000",
    "end": "743700"
  },
  {
    "text": "and one right operation another",
    "start": "743700",
    "end": "746160"
  },
  {
    "text": "isolation between transaction means two",
    "start": "746160",
    "end": "748980"
  },
  {
    "text": "transactions will not interfere with",
    "start": "748980",
    "end": "751019"
  },
  {
    "text": "each other",
    "start": "751019",
    "end": "752160"
  },
  {
    "text": "and meanwhile we have multiple replicas",
    "start": "752160",
    "end": "754920"
  },
  {
    "text": "for each date partition so we need to",
    "start": "754920",
    "end": "757980"
  },
  {
    "text": "make sure the contents of each replicas",
    "start": "757980",
    "end": "760680"
  },
  {
    "text": "is consistent with each other",
    "start": "760680",
    "end": "763500"
  },
  {
    "text": "as we can see in the graph the left",
    "start": "763500",
    "end": "765899"
  },
  {
    "text": "subtree contains different transaction",
    "start": "765899",
    "end": "767940"
  },
  {
    "text": "isolation level and the right substrate",
    "start": "767940",
    "end": "771060"
  },
  {
    "text": "contains all the local object",
    "start": "771060",
    "end": "772940"
  },
  {
    "text": "consistency model if you still remember",
    "start": "772940",
    "end": "776100"
  },
  {
    "text": "Thai KV internally contains four layers",
    "start": "776100",
    "end": "780060"
  },
  {
    "text": "in the middle two layers are the",
    "start": "780060",
    "end": "782459"
  },
  {
    "text": "transaction layer and in the consensus",
    "start": "782459",
    "end": "784500"
  },
  {
    "text": "layer and then a transaction layer",
    "start": "784500",
    "end": "786839"
  },
  {
    "text": "ensure two things one is the snapshot",
    "start": "786839",
    "end": "790139"
  },
  {
    "text": "isolation which means we create an",
    "start": "790139",
    "end": "793079"
  },
  {
    "text": "independent consistent snapshot of the",
    "start": "793079",
    "end": "795899"
  },
  {
    "text": "database for each transaction its change",
    "start": "795899",
    "end": "798839"
  },
  {
    "text": "are visible only to that transaction",
    "start": "798839",
    "end": "801480"
  },
  {
    "text": "until commit time",
    "start": "801480",
    "end": "803220"
  },
  {
    "text": "this allows us to handle transaction",
    "start": "803220",
    "end": "805760"
  },
  {
    "text": "concurrently if they are not interfere",
    "start": "805760",
    "end": "808440"
  },
  {
    "text": "with each other",
    "start": "808440",
    "end": "809820"
  },
  {
    "text": "another is derivatable read which means",
    "start": "809820",
    "end": "813120"
  },
  {
    "text": "any data read cannot change if the",
    "start": "813120",
    "end": "816120"
  },
  {
    "text": "transaction reads the same data again it",
    "start": "816120",
    "end": "819180"
  },
  {
    "text": "will find a previously read data in",
    "start": "819180",
    "end": "821399"
  },
  {
    "text": "place unchanged also for the consensus",
    "start": "821399",
    "end": "824519"
  },
  {
    "text": "layer we use the rafter consensus",
    "start": "824519",
    "end": "826680"
  },
  {
    "text": "protocol type KV ensures strong",
    "start": "826680",
    "end": "829200"
  },
  {
    "text": "consistency which is also known as the",
    "start": "829200",
    "end": "832139"
  },
  {
    "text": "linear realizability among replicas of",
    "start": "832139",
    "end": "834540"
  },
  {
    "text": "each object",
    "start": "834540",
    "end": "836899"
  },
  {
    "start": "836000",
    "end": "836000"
  },
  {
    "text": "the next requirement we need to meet is",
    "start": "836899",
    "end": "840360"
  },
  {
    "text": "the high performance i o",
    "start": "840360",
    "end": "842459"
  },
  {
    "text": "wanna read as we use the multiversion",
    "start": "842459",
    "end": "845579"
  },
  {
    "text": "concurrency control to implement",
    "start": "845579",
    "end": "847500"
  },
  {
    "text": "two-phase commit which means reversion",
    "start": "847500",
    "end": "850200"
  },
  {
    "text": "in each key value pair and create",
    "start": "850200",
    "end": "852600"
  },
  {
    "text": "isolation snapshot for each single read",
    "start": "852600",
    "end": "855480"
  },
  {
    "text": "and write",
    "start": "855480",
    "end": "856620"
  },
  {
    "text": "which prevents a read request from being",
    "start": "856620",
    "end": "859380"
  },
  {
    "text": "blocked if there is an ongoing ride on a",
    "start": "859380",
    "end": "862380"
  },
  {
    "text": "send entry we also apply many other",
    "start": "862380",
    "end": "865560"
  },
  {
    "text": "optimization approach for example we",
    "start": "865560",
    "end": "868740"
  },
  {
    "text": "support follower reads that allow us to",
    "start": "868740",
    "end": "871500"
  },
  {
    "text": "spread the read workload across all",
    "start": "871500",
    "end": "873660"
  },
  {
    "text": "replicas",
    "start": "873660",
    "end": "874860"
  },
  {
    "text": "or we prioritize small reads to prevent",
    "start": "874860",
    "end": "878519"
  },
  {
    "text": "the overall throughputs from being",
    "start": "878519",
    "end": "880620"
  },
  {
    "text": "affected by several large reads",
    "start": "880620",
    "end": "883079"
  },
  {
    "text": "from the rights since we divide data",
    "start": "883079",
    "end": "885540"
  },
  {
    "text": "into partition with replicas of each",
    "start": "885540",
    "end": "888240"
  },
  {
    "text": "partition make up their own raft group",
    "start": "888240",
    "end": "890420"
  },
  {
    "text": "then write a request on key value pairs",
    "start": "890420",
    "end": "893699"
  },
  {
    "text": "belonging to different partition can be",
    "start": "893699",
    "end": "896220"
  },
  {
    "text": "handled concurrently",
    "start": "896220",
    "end": "897959"
  },
  {
    "text": "we also try to optimize the right",
    "start": "897959",
    "end": "900120"
  },
  {
    "text": "performance on a local storage engine",
    "start": "900120",
    "end": "902399"
  },
  {
    "text": "level by developing a roxdb plugin",
    "start": "902399",
    "end": "905459"
  },
  {
    "text": "called Titan even though rocksdb",
    "start": "905459",
    "end": "908579"
  },
  {
    "text": "provides good and predictable performers",
    "start": "908579",
    "end": "911100"
  },
  {
    "text": "it may still suffer from right",
    "start": "911100",
    "end": "913320"
  },
  {
    "text": "amplification as it is in a log",
    "start": "913320",
    "end": "916079"
  },
  {
    "text": "structure merge chain internally",
    "start": "916079",
    "end": "919079"
  },
  {
    "text": "basically each time when we update or",
    "start": "919079",
    "end": "921839"
  },
  {
    "text": "delete key value pair the rocksdb will",
    "start": "921839",
    "end": "924899"
  },
  {
    "text": "append the operation to the end of the",
    "start": "924899",
    "end": "926940"
  },
  {
    "text": "log file instead of updated",
    "start": "926940",
    "end": "929220"
  },
  {
    "text": "and will periodically compact this files",
    "start": "929220",
    "end": "932639"
  },
  {
    "text": "to remove the Redundant key value pairs",
    "start": "932639",
    "end": "934920"
  },
  {
    "text": "which will cause the right amplification",
    "start": "934920",
    "end": "937980"
  },
  {
    "text": "Titan avoid this by storing a large",
    "start": "937980",
    "end": "940500"
  },
  {
    "text": "value outside of the rocksdb",
    "start": "940500",
    "end": "943079"
  },
  {
    "text": "and the phone scan since we do the range",
    "start": "943079",
    "end": "945720"
  },
  {
    "text": "based sharding that divide data into",
    "start": "945720",
    "end": "948180"
  },
  {
    "text": "continuous range determined by the short",
    "start": "948180",
    "end": "950940"
  },
  {
    "text": "key scanning Keys sharing same prefix",
    "start": "950940",
    "end": "953820"
  },
  {
    "text": "can be very efficient since they are",
    "start": "953820",
    "end": "956639"
  },
  {
    "text": "usually located in a handful of regions",
    "start": "956639",
    "end": "960120"
  },
  {
    "text": "besides all these we also apply some",
    "start": "960120",
    "end": "963060"
  },
  {
    "text": "configurable optimization feature like",
    "start": "963060",
    "end": "966060"
  },
  {
    "text": "we can enable the low base splitting on",
    "start": "966060",
    "end": "968639"
  },
  {
    "text": "placement driver which will split the",
    "start": "968639",
    "end": "971100"
  },
  {
    "text": "hot region if it receive a lot of read",
    "start": "971100",
    "end": "973980"
  },
  {
    "text": "write requests",
    "start": "973980",
    "end": "976199"
  },
  {
    "start": "976000",
    "end": "976000"
  },
  {
    "text": "last but not least we need to make sure",
    "start": "976199",
    "end": "979139"
  },
  {
    "text": "the Thai KV is reliable otherwise all",
    "start": "979139",
    "end": "982560"
  },
  {
    "text": "the aforementioned Advantage will be",
    "start": "982560",
    "end": "984660"
  },
  {
    "text": "minimalist we usually recommend users to",
    "start": "984660",
    "end": "988079"
  },
  {
    "text": "use at least the three Target nodes and",
    "start": "988079",
    "end": "991620"
  },
  {
    "text": "the three replicas for each partition",
    "start": "991620",
    "end": "994260"
  },
  {
    "text": "by default we will spread replica across",
    "start": "994260",
    "end": "997079"
  },
  {
    "text": "nodes",
    "start": "997079",
    "end": "998100"
  },
  {
    "text": "therefore we can tolerate the filter of",
    "start": "998100",
    "end": "1001220"
  },
  {
    "text": "some of the nodes",
    "start": "1001220",
    "end": "1002779"
  },
  {
    "text": "if you plan to deploy Thai KV on public",
    "start": "1002779",
    "end": "1005300"
  },
  {
    "text": "Cloud you can also spread Thai KB nodes",
    "start": "1005300",
    "end": "1008000"
  },
  {
    "text": "across multiple available zooms and on",
    "start": "1008000",
    "end": "1011060"
  },
  {
    "text": "the placement driver will place a",
    "start": "1011060",
    "end": "1013100"
  },
  {
    "text": "complete copy of data in each Dom",
    "start": "1013100",
    "end": "1015620"
  },
  {
    "text": "if we lost the sum of the nodes",
    "start": "1015620",
    "end": "1017959"
  },
  {
    "text": "placement driver will automatically",
    "start": "1017959",
    "end": "1020300"
  },
  {
    "text": "rebalance the replicas and the leaders",
    "start": "1020300",
    "end": "1022699"
  },
  {
    "text": "to make sure the total number of",
    "start": "1022699",
    "end": "1024438"
  },
  {
    "text": "replicas is unchanged",
    "start": "1024439",
    "end": "1026720"
  },
  {
    "text": "besides that we also provide tools that",
    "start": "1026720",
    "end": "1029900"
  },
  {
    "text": "can help users to recover the cluster",
    "start": "1029900",
    "end": "1032480"
  },
  {
    "text": "from disaster",
    "start": "1032480",
    "end": "1034520"
  },
  {
    "text": "in addition we also make sure that the",
    "start": "1034520",
    "end": "1037280"
  },
  {
    "text": "Thai KV is well tested we run regression",
    "start": "1037280",
    "end": "1040400"
  },
  {
    "text": "tests frequently to ensure the new",
    "start": "1040400",
    "end": "1043100"
  },
  {
    "text": "feature is Backward Compatible",
    "start": "1043100",
    "end": "1045558"
  },
  {
    "text": "and will not break the historical",
    "start": "1045559",
    "end": "1048020"
  },
  {
    "text": "version",
    "start": "1048020",
    "end": "1048980"
  },
  {
    "text": "we also run large multi-day performers",
    "start": "1048980",
    "end": "1051799"
  },
  {
    "text": "tests that use real-world data to ensure",
    "start": "1051799",
    "end": "1054860"
  },
  {
    "text": "the performance is predictable",
    "start": "1054860",
    "end": "1057200"
  },
  {
    "text": "since many users adopt height KV as the",
    "start": "1057200",
    "end": "1060080"
  },
  {
    "text": "backhand storage engine to build their",
    "start": "1060080",
    "end": "1062480"
  },
  {
    "text": "own software as a service products",
    "start": "1062480",
    "end": "1065480"
  },
  {
    "text": "predictable performers is critical to",
    "start": "1065480",
    "end": "1068179"
  },
  {
    "text": "make service level agreements for higher",
    "start": "1068179",
    "end": "1071240"
  },
  {
    "text": "level servers",
    "start": "1071240",
    "end": "1072860"
  },
  {
    "text": "if you are familiar with Japan",
    "start": "1072860",
    "end": "1074840"
  },
  {
    "text": "organizations they run tests on various",
    "start": "1074840",
    "end": "1078140"
  },
  {
    "text": "distributed systems to validate the",
    "start": "1078140",
    "end": "1080960"
  },
  {
    "text": "different consensus",
    "start": "1080960",
    "end": "1082640"
  },
  {
    "text": "clan we also run a range of Jepson tools",
    "start": "1082640",
    "end": "1086120"
  },
  {
    "text": "on Thai KV to ensure we deliver the",
    "start": "1086120",
    "end": "1089360"
  },
  {
    "text": "transaction promise we have made",
    "start": "1089360",
    "end": "1092000"
  },
  {
    "text": "we do chaos engineering with chaos mesh",
    "start": "1092000",
    "end": "1095059"
  },
  {
    "text": "if you are not familiar with chaos mesh",
    "start": "1095059",
    "end": "1097340"
  },
  {
    "text": "chaos mesh is another project initiated",
    "start": "1097340",
    "end": "1100160"
  },
  {
    "text": "by pin cap",
    "start": "1100160",
    "end": "1101600"
  },
  {
    "text": "and has been donated to cncf as an",
    "start": "1101600",
    "end": "1104600"
  },
  {
    "text": "incubating project",
    "start": "1104600",
    "end": "1106460"
  },
  {
    "text": "it allowed us to simulate unexpected",
    "start": "1106460",
    "end": "1109340"
  },
  {
    "text": "situations like note going down or",
    "start": "1109340",
    "end": "1112160"
  },
  {
    "text": "network bricks and so forth",
    "start": "1112160",
    "end": "1115240"
  },
  {
    "text": "as we can see takeavi is a highly",
    "start": "1115240",
    "end": "1118760"
  },
  {
    "text": "scalable distributed key value store",
    "start": "1118760",
    "end": "1120620"
  },
  {
    "text": "with high performance i o and high",
    "start": "1120620",
    "end": "1123200"
  },
  {
    "text": "reliability",
    "start": "1123200",
    "end": "1124580"
  },
  {
    "text": "it works pretty well in an on-premise",
    "start": "1124580",
    "end": "1127220"
  },
  {
    "text": "environment however we are seeing an",
    "start": "1127220",
    "end": "1130280"
  },
  {
    "text": "ever-growing demand of deploying Thai KV",
    "start": "1130280",
    "end": "1133039"
  },
  {
    "text": "on a public cloud",
    "start": "1133039",
    "end": "1134539"
  },
  {
    "text": "the public Cloud infrastructure is very",
    "start": "1134539",
    "end": "1137120"
  },
  {
    "text": "different from the on-premise",
    "start": "1137120",
    "end": "1138860"
  },
  {
    "text": "infrastructure",
    "start": "1138860",
    "end": "1140179"
  },
  {
    "text": "then how can we ensure that take V",
    "start": "1140179",
    "end": "1143299"
  },
  {
    "text": "running on the popular Cloud can still",
    "start": "1143299",
    "end": "1145340"
  },
  {
    "text": "provide reliable performers",
    "start": "1145340",
    "end": "1148660"
  },
  {
    "text": "nowadays most the public Cloud vendors",
    "start": "1148660",
    "end": "1151520"
  },
  {
    "text": "provide virtualized disk",
    "start": "1151520",
    "end": "1153860"
  },
  {
    "text": "those disks can be mounted to a local",
    "start": "1153860",
    "end": "1156559"
  },
  {
    "text": "file system and the lay appear like a",
    "start": "1156559",
    "end": "1159500"
  },
  {
    "text": "local disk as well",
    "start": "1159500",
    "end": "1161179"
  },
  {
    "text": "but internally they are forwarding i o",
    "start": "1161179",
    "end": "1164419"
  },
  {
    "text": "to multiple remote disk that are",
    "start": "1164419",
    "end": "1166760"
  },
  {
    "text": "potentially shared by multiple users",
    "start": "1166760",
    "end": "1169700"
  },
  {
    "text": "AWS EBS for example will replicate any",
    "start": "1169700",
    "end": "1174020"
  },
  {
    "text": "right IO to three different locations",
    "start": "1174020",
    "end": "1177320"
  },
  {
    "text": "this internal complexity can be a real",
    "start": "1177320",
    "end": "1180620"
  },
  {
    "text": "problem for our system",
    "start": "1180620",
    "end": "1182419"
  },
  {
    "text": "because the latency of starter is",
    "start": "1182419",
    "end": "1185360"
  },
  {
    "text": "obviously higher limit local disk also",
    "start": "1185360",
    "end": "1188660"
  },
  {
    "text": "since you are sharing Hardware with",
    "start": "1188660",
    "end": "1191419"
  },
  {
    "text": "other people anything that you use will",
    "start": "1191419",
    "end": "1194419"
  },
  {
    "text": "be charged",
    "start": "1194419",
    "end": "1195620"
  },
  {
    "text": "that include these cabinets and iops",
    "start": "1195620",
    "end": "1199340"
  },
  {
    "text": "finally we should all know the cloud",
    "start": "1199340",
    "end": "1201980"
  },
  {
    "text": "infrastructure are not always as",
    "start": "1201980",
    "end": "1204440"
  },
  {
    "text": "reliable as they claim it to be",
    "start": "1204440",
    "end": "1207740"
  },
  {
    "text": "service decoration will be relatively",
    "start": "1207740",
    "end": "1210440"
  },
  {
    "text": "frequent and it should be considered in",
    "start": "1210440",
    "end": "1213200"
  },
  {
    "text": "system design",
    "start": "1213200",
    "end": "1214940"
  },
  {
    "start": "1214000",
    "end": "1214000"
  },
  {
    "text": "ideally we want the large Kai KV cluster",
    "start": "1214940",
    "end": "1218900"
  },
  {
    "text": "to behave similar to a traditional",
    "start": "1218900",
    "end": "1221240"
  },
  {
    "text": "database relational database system but",
    "start": "1221240",
    "end": "1224419"
  },
  {
    "text": "unfortunately it's actually hard to",
    "start": "1224419",
    "end": "1227179"
  },
  {
    "text": "accomplish that on cloud storage",
    "start": "1227179",
    "end": "1229940"
  },
  {
    "text": "first we want to build a scalable",
    "start": "1229940",
    "end": "1232340"
  },
  {
    "text": "service but scale means more fails",
    "start": "1232340",
    "end": "1235880"
  },
  {
    "text": "to be more specific we want we are",
    "start": "1235880",
    "end": "1238640"
  },
  {
    "text": "worried that as a system it's storage",
    "start": "1238640",
    "end": "1241100"
  },
  {
    "text": "Hardware performance is very likely to",
    "start": "1241100",
    "end": "1243679"
  },
  {
    "text": "degrade",
    "start": "1243679",
    "end": "1245059"
  },
  {
    "text": "the cost is problem two because every",
    "start": "1245059",
    "end": "1248419"
  },
  {
    "text": "storage operation is charged by the",
    "start": "1248419",
    "end": "1251059"
  },
  {
    "text": "cloud vendors",
    "start": "1251059",
    "end": "1252380"
  },
  {
    "text": "the user now have more reason to care",
    "start": "1252380",
    "end": "1255380"
  },
  {
    "text": "about exactly how and why our citizen is",
    "start": "1255380",
    "end": "1258620"
  },
  {
    "text": "using those resources and by that I mean",
    "start": "1258620",
    "end": "1262100"
  },
  {
    "text": "read and write amplification which is",
    "start": "1262100",
    "end": "1264919"
  },
  {
    "text": "the amount of i o the system needs to",
    "start": "1264919",
    "end": "1267559"
  },
  {
    "text": "send before finishing one user request",
    "start": "1267559",
    "end": "1270620"
  },
  {
    "text": "here is a simple graph to demonstrate",
    "start": "1270620",
    "end": "1273320"
  },
  {
    "text": "our systems runtime usage of i o",
    "start": "1273320",
    "end": "1275900"
  },
  {
    "text": "resources",
    "start": "1275900",
    "end": "1277280"
  },
  {
    "text": "over time the user rights are very",
    "start": "1277280",
    "end": "1279919"
  },
  {
    "text": "stable as you can see from the yellow",
    "start": "1279919",
    "end": "1282559"
  },
  {
    "text": "bar here",
    "start": "1282559",
    "end": "1283880"
  },
  {
    "text": "but there are Amplified multiple times",
    "start": "1283880",
    "end": "1286700"
  },
  {
    "text": "because of background rights that",
    "start": "1286700",
    "end": "1290120"
  },
  {
    "text": "includes compaction as Thai KV use",
    "start": "1290120",
    "end": "1292880"
  },
  {
    "text": "rocksdb internally and the garbage",
    "start": "1292880",
    "end": "1295700"
  },
  {
    "text": "collection in addition to that large",
    "start": "1295700",
    "end": "1298760"
  },
  {
    "text": "events incur extra iOS that are usually",
    "start": "1298760",
    "end": "1302240"
  },
  {
    "text": "not predictable",
    "start": "1302240",
    "end": "1304340"
  },
  {
    "text": "from this graph we can see the most",
    "start": "1304340",
    "end": "1306740"
  },
  {
    "text": "straightforward way to reduce cost and",
    "start": "1306740",
    "end": "1309500"
  },
  {
    "text": "improve scalability is to keep i o usage",
    "start": "1309500",
    "end": "1312620"
  },
  {
    "text": "Under The Watermark at all time",
    "start": "1312620",
    "end": "1316159"
  },
  {
    "text": "for that we introduced two new features",
    "start": "1316159",
    "end": "1320120"
  },
  {
    "text": "first is the new raft engine it is a new",
    "start": "1320120",
    "end": "1324140"
  },
  {
    "text": "log store for Thai KV that is written in",
    "start": "1324140",
    "end": "1327080"
  },
  {
    "text": "Rust",
    "start": "1327080",
    "end": "1328280"
  },
  {
    "text": "for those who don't know we previously",
    "start": "1328280",
    "end": "1331100"
  },
  {
    "text": "use roxdb to store all transaction logs",
    "start": "1331100",
    "end": "1334820"
  },
  {
    "text": "it is not the optimal choice but it is a",
    "start": "1334820",
    "end": "1339020"
  },
  {
    "text": "decent solution at the early stage",
    "start": "1339020",
    "end": "1341559"
  },
  {
    "text": "and right now we want to replace it and",
    "start": "1341559",
    "end": "1344720"
  },
  {
    "text": "improve it the primary goal here is to",
    "start": "1344720",
    "end": "1348020"
  },
  {
    "text": "write less lamb of rocks DB",
    "start": "1348020",
    "end": "1350600"
  },
  {
    "text": "consequently we can reduce IO cost and",
    "start": "1350600",
    "end": "1353900"
  },
  {
    "text": "reduce the possibility of heating",
    "start": "1353900",
    "end": "1356179"
  },
  {
    "text": "storage performance limits and this new",
    "start": "1356179",
    "end": "1359120"
  },
  {
    "text": "raft engine can also help us to improve",
    "start": "1359120",
    "end": "1362299"
  },
  {
    "text": "the performance which is under",
    "start": "1362299",
    "end": "1364460"
  },
  {
    "text": "development and we are really hoping",
    "start": "1364460",
    "end": "1367039"
  },
  {
    "text": "more contributors can join us to improve",
    "start": "1367039",
    "end": "1369679"
  },
  {
    "text": "it in the future",
    "start": "1369679",
    "end": "1371960"
  },
  {
    "text": "now let's talk about how we accomplish",
    "start": "1371960",
    "end": "1375080"
  },
  {
    "text": "the primary goal rough engine maintains",
    "start": "1375080",
    "end": "1378679"
  },
  {
    "text": "an in-memory index of all log entries",
    "start": "1378679",
    "end": "1382400"
  },
  {
    "text": "the reason we do that is not to improve",
    "start": "1382400",
    "end": "1385400"
  },
  {
    "text": "read performers is actually about",
    "start": "1385400",
    "end": "1388100"
  },
  {
    "text": "reducing the background work",
    "start": "1388100",
    "end": "1390740"
  },
  {
    "text": "in roxdb compaction is needed to keep",
    "start": "1390740",
    "end": "1394220"
  },
  {
    "text": "all data stored and the cleanup deleted",
    "start": "1394220",
    "end": "1397520"
  },
  {
    "text": "the data but in rough engine we don't",
    "start": "1397520",
    "end": "1400820"
  },
  {
    "text": "need to sort anything in the garbage",
    "start": "1400820",
    "end": "1403940"
  },
  {
    "text": "collection doesn't need to read out",
    "start": "1403940",
    "end": "1406419"
  },
  {
    "text": "obsolete data because we have a map of",
    "start": "1406419",
    "end": "1410360"
  },
  {
    "text": "all active data in memory",
    "start": "1410360",
    "end": "1412820"
  },
  {
    "text": "then rough the engine further reduce the",
    "start": "1412820",
    "end": "1415580"
  },
  {
    "text": "foreground iOS by a comp by compression",
    "start": "1415580",
    "end": "1419539"
  },
  {
    "text": "all log entries are compressed with rz4",
    "start": "1419539",
    "end": "1423440"
  },
  {
    "text": "before they are writing mainly with",
    "start": "1423440",
    "end": "1426200"
  },
  {
    "text": "those two techniques we are able to",
    "start": "1426200",
    "end": "1429140"
  },
  {
    "text": "reduce 30 percent of all server right",
    "start": "1429140",
    "end": "1431840"
  },
  {
    "text": "iOS",
    "start": "1431840",
    "end": "1433940"
  },
  {
    "start": "1433000",
    "end": "1433000"
  },
  {
    "text": "the second feature I would like to talk",
    "start": "1433940",
    "end": "1436280"
  },
  {
    "text": "about is called priority i o scheduling",
    "start": "1436280",
    "end": "1440299"
  },
  {
    "text": "it's not a new thing matting system",
    "start": "1440299",
    "end": "1442760"
  },
  {
    "text": "already has it",
    "start": "1442760",
    "end": "1444380"
  },
  {
    "text": "what we manage it to do is to add this",
    "start": "1444380",
    "end": "1447559"
  },
  {
    "text": "functionality without introducing major",
    "start": "1447559",
    "end": "1449960"
  },
  {
    "text": "change of architecture",
    "start": "1449960",
    "end": "1452000"
  },
  {
    "text": "that means we did not change the",
    "start": "1452000",
    "end": "1454520"
  },
  {
    "text": "internal tasking system",
    "start": "1454520",
    "end": "1456679"
  },
  {
    "text": "no addition i o cuning is required with",
    "start": "1456679",
    "end": "1460100"
  },
  {
    "text": "no extra overheads",
    "start": "1460100",
    "end": "1462380"
  },
  {
    "text": "we trace the character rights or system",
    "start": "1462380",
    "end": "1465260"
  },
  {
    "text": "i o into three different priorities",
    "start": "1465260",
    "end": "1468980"
  },
  {
    "text": "let's use priority a priority B and the",
    "start": "1468980",
    "end": "1472159"
  },
  {
    "text": "priority C here",
    "start": "1472159",
    "end": "1473900"
  },
  {
    "text": "during the execution we periodically",
    "start": "1473900",
    "end": "1476539"
  },
  {
    "text": "assign individual i o limits to those",
    "start": "1476539",
    "end": "1479960"
  },
  {
    "text": "priorities at the beginning the i o",
    "start": "1479960",
    "end": "1482900"
  },
  {
    "text": "limits are high all iOS runways no",
    "start": "1482900",
    "end": "1486440"
  },
  {
    "text": "restrictions eventually",
    "start": "1486440",
    "end": "1489080"
  },
  {
    "text": "here at approach 2 the i o usage access",
    "start": "1489080",
    "end": "1493480"
  },
  {
    "text": "a free data mined Global limits",
    "start": "1493480",
    "end": "1496940"
  },
  {
    "text": "that is what we call an overflow",
    "start": "1496940",
    "end": "1500059"
  },
  {
    "text": "after the Overflow we adjusted the i o",
    "start": "1500059",
    "end": "1503240"
  },
  {
    "text": "limits to lower the priority to make",
    "start": "1503240",
    "end": "1506240"
  },
  {
    "text": "sure that in the next approach system",
    "start": "1506240",
    "end": "1508940"
  },
  {
    "text": "will not use so much I O resource",
    "start": "1508940",
    "end": "1512419"
  },
  {
    "text": "the algorithm is heuristic and not",
    "start": "1512419",
    "end": "1515000"
  },
  {
    "text": "perfect but it works pretty well in",
    "start": "1515000",
    "end": "1517820"
  },
  {
    "text": "practice",
    "start": "1517820",
    "end": "1519620"
  },
  {
    "text": "here we conducted a test to simulate",
    "start": "1519620",
    "end": "1523039"
  },
  {
    "text": "large events during online workload in",
    "start": "1523039",
    "end": "1526640"
  },
  {
    "text": "this test a large table is imported",
    "start": "1526640",
    "end": "1529400"
  },
  {
    "text": "while a tpcc workload is running",
    "start": "1529400",
    "end": "1532760"
  },
  {
    "text": "after applying i o scheduling as you can",
    "start": "1532760",
    "end": "1536659"
  },
  {
    "text": "see on the left hand the system",
    "start": "1536659",
    "end": "1538820"
  },
  {
    "text": "performance is much more stable than",
    "start": "1538820",
    "end": "1541340"
  },
  {
    "text": "before meanwhile there are several new",
    "start": "1541340",
    "end": "1544520"
  },
  {
    "text": "cloud based feature under intensively",
    "start": "1544520",
    "end": "1548120"
  },
  {
    "text": "development",
    "start": "1548120",
    "end": "1549200"
  },
  {
    "text": "like CPU limiting that is designed for",
    "start": "1549200",
    "end": "1552440"
  },
  {
    "text": "environment with limit resource",
    "start": "1552440",
    "end": "1555500"
  },
  {
    "text": "rough to witness that reduce replication",
    "start": "1555500",
    "end": "1558679"
  },
  {
    "text": "cost using write only nodes to replicate",
    "start": "1558679",
    "end": "1561860"
  },
  {
    "text": "transaction log without readable data",
    "start": "1561860",
    "end": "1564980"
  },
  {
    "text": "in the future we want Thai KD to further",
    "start": "1564980",
    "end": "1568039"
  },
  {
    "text": "adapt to Cloud hardware and we truly",
    "start": "1568039",
    "end": "1571520"
  },
  {
    "text": "hope Community users can benefit from",
    "start": "1571520",
    "end": "1574159"
  },
  {
    "text": "our works",
    "start": "1574159",
    "end": "1576440"
  },
  {
    "text": "that's all for today's talk if you are",
    "start": "1576440",
    "end": "1579200"
  },
  {
    "text": "interested in Thai KV feel free to try",
    "start": "1579200",
    "end": "1581480"
  },
  {
    "text": "it out or join our community slack",
    "start": "1581480",
    "end": "1584240"
  },
  {
    "text": "Channel",
    "start": "1584240",
    "end": "1584960"
  },
  {
    "text": "if you have any questions or comments",
    "start": "1584960",
    "end": "1587120"
  },
  {
    "text": "please shoot me an email thanks",
    "start": "1587120",
    "end": "1591340"
  }
]