[
  {
    "start": "0",
    "end": "87000"
  },
  {
    "text": "hey everyone how's everyone doing all right we can go ahead and get started",
    "start": "30",
    "end": "5609"
  },
  {
    "text": "just want to make sure he stayed on time my name is Amy and I'm system software engineer at VMware via the hefty our",
    "start": "5609",
    "end": "12179"
  },
  {
    "text": "position and my name is Aaron Metzl I'm a director of product management at VMware and I also came through the hefty",
    "start": "12179",
    "end": "18900"
  },
  {
    "text": "Oh acquisition so today we're going to be talking about namespaces and how to",
    "start": "18900",
    "end": "24240"
  },
  {
    "text": "make the you know best use of namespaces to get the best use out of your kubernetes clusters you know there's not",
    "start": "24240",
    "end": "31199"
  },
  {
    "text": "really any consensus today on how to use namespaces and you know this can lead to",
    "start": "31199",
    "end": "37440"
  },
  {
    "text": "vulnerable applications and it can lead to some really inefficient use of cluster resources so you know as the",
    "start": "37440",
    "end": "46020"
  },
  {
    "text": "number of teams and clusters and namespaces grows this can become a really big problem and it's really",
    "start": "46020",
    "end": "51870"
  },
  {
    "text": "difficult to maintain any kind of coherence across your organization so",
    "start": "51870",
    "end": "56969"
  },
  {
    "text": "today we're gonna start with some examples from some organizations and how",
    "start": "56969",
    "end": "62070"
  },
  {
    "text": "they use namespaces we're going to talk about some policies that you can think through and where you should apply those",
    "start": "62070",
    "end": "68670"
  },
  {
    "text": "whether it's at the cluster level or the namespace level and then finally we're gonna talk through some concepts that",
    "start": "68670",
    "end": "75270"
  },
  {
    "text": "you can consider as your organization scales awesome let's get started so the title of our talk is sharing is caring",
    "start": "75270",
    "end": "81540"
  },
  {
    "text": "the kubernetes cluster namespaces and you hopefully you liked our carebears so",
    "start": "81540",
    "end": "88080"
  },
  {
    "start": "87000",
    "end": "87000"
  },
  {
    "text": "what exactly is a namespace according to the official criminais documentation currently supports multiple virtual",
    "start": "88080",
    "end": "94320"
  },
  {
    "text": "clusters backed by the same physical cluster these virtual clusters are called two namespaces so let's go ahead",
    "start": "94320",
    "end": "100829"
  },
  {
    "text": "and break down this definition physical cluster that's definitely a very tangible idea right so clusters come",
    "start": "100829",
    "end": "107729"
  },
  {
    "text": "with a lot of baggage you can upgrade and downgrade at the cubelet control plane and worker nodes that backup the",
    "start": "107729",
    "end": "114270"
  },
  {
    "text": "cluster and there's fancy ways you can deploy cluster you can provision notes for that cluster there's a whole thing a",
    "start": "114270",
    "end": "120930"
  },
  {
    "text": "cluster has a whole lifecycle that you can manage in fact there's a say group that I currently work on internally that",
    "start": "120930",
    "end": "127170"
  },
  {
    "text": "targets that that upstream team so just trust me when I say that cluster lifecycle management is for",
    "start": "127170",
    "end": "132870"
  },
  {
    "text": "hard so a virtual cluster namespaces don't exactly need to concern themselves",
    "start": "132870",
    "end": "138360"
  },
  {
    "text": "with these details and namespaces are a great way to logically split up your cluster now why exactly would you want",
    "start": "138360",
    "end": "145830"
  },
  {
    "text": "to split up your cluster more practically you organize your workloads and group them together you don't",
    "start": "145830",
    "end": "151980"
  },
  {
    "text": "actually need to conflate your workload groupings with the physical cluster so for instance let's say you're working on",
    "start": "151980",
    "end": "157500"
  },
  {
    "text": "an e-commerce website and you wanted to isolate your shopping cart micro service from your customer analytics micro-service you should be able to do",
    "start": "157500",
    "end": "164910"
  },
  {
    "text": "that via namespaces right rather than going through the whole process of like creating two entirely separate clusters",
    "start": "164910",
    "end": "171410"
  },
  {
    "text": "so when I originally tweeted that Aaron and I were going to present this talk Nick Young who at the time worked at",
    "start": "171410",
    "end": "176819"
  },
  {
    "text": "Atlassian responded with this tweet so he actually now works at VMware and I thought it was pretty funny and it's",
    "start": "176819",
    "end": "182489"
  },
  {
    "text": "been spectacular so he said remind me to tell you a funny story sometime about the time we",
    "start": "182489",
    "end": "187859"
  },
  {
    "text": "accidentally created 80,000 namespaces so what actually happened was they had a production cluster that was constantly",
    "start": "187859",
    "end": "194730"
  },
  {
    "text": "deleting creating and creating namespaces and they made a change that caused cascading deletions to fail so",
    "start": "194730",
    "end": "200880"
  },
  {
    "text": "the reason those deletions failed was because they added an encore resource through the aggregated API server and",
    "start": "200880",
    "end": "207389"
  },
  {
    "text": "this is a known Korean ladies issue like based off of some kubernetes versions",
    "start": "207389",
    "end": "212970"
  },
  {
    "text": "that causes garbage collection to fail and they ended up needing to clean up an STD database that hid its 2.1 gigabyte",
    "start": "212970",
    "end": "219930"
  },
  {
    "text": "limit so I thought it was just like a pretty funny example we can take away",
    "start": "219930",
    "end": "225540"
  },
  {
    "text": "from so Aaron can you go ahead and break down how some organizations use namespaces sure so yeah there's really",
    "start": "225540",
    "end": "232440"
  },
  {
    "start": "231000",
    "end": "231000"
  },
  {
    "text": "two common ways that organizations tend to map their people structure to their",
    "start": "232440",
    "end": "238019"
  },
  {
    "text": "infrastructure so the first one is one team per cluster so in this case the",
    "start": "238019",
    "end": "243629"
  },
  {
    "text": "cluster is likely to be potentially provision and managed by the development",
    "start": "243629",
    "end": "249000"
  },
  {
    "text": "team that's using it you know there may or may not be a central operations team and this can start to look like shadow",
    "start": "249000",
    "end": "255389"
  },
  {
    "text": "IT and it's very common for a development environments so what are some of the pros and cons of this model",
    "start": "255389",
    "end": "261709"
  },
  {
    "text": "one Pro is really the simplicity in terms of the self service of an for structure so the teams that are",
    "start": "261710",
    "end": "268169"
  },
  {
    "text": "using the clusters are creating the clusters in the environment that's best for that given application the other Pro",
    "start": "268169",
    "end": "277440"
  },
  {
    "text": "about this is you really don't have to worry as much about security risks so when you have one team and one application for cluster you don't have",
    "start": "277440",
    "end": "284580"
  },
  {
    "text": "to necessarily worry about different teams stepping on each other's toes within a given cluster in terms of the",
    "start": "284580",
    "end": "290430"
  },
  {
    "text": "downsides of this approach one team per cluster is really that it can be very",
    "start": "290430",
    "end": "295470"
  },
  {
    "text": "inefficient so it's really difficult to get the best utilization out of your clusters when you have a small team",
    "start": "295470",
    "end": "301380"
  },
  {
    "text": "basically spinning up resources it's also becomes really difficult to",
    "start": "301380",
    "end": "306630"
  },
  {
    "text": "maintain coherence especially as the number of clusters grows so you can",
    "start": "306630",
    "end": "312180"
  },
  {
    "text": "think about you know like managing policy across clusters it becomes very difficult when you have all these teams",
    "start": "312180",
    "end": "317310"
  },
  {
    "text": "creating their own clusters so we'll talk a little bit about more about that later",
    "start": "317310",
    "end": "323190"
  },
  {
    "start": "323000",
    "end": "323000"
  },
  {
    "text": "and then as organizations grow you'll be more likely to see something that looks like this scenario so this is you know",
    "start": "323190",
    "end": "329819"
  },
  {
    "text": "where you basically have multiple teams sharing clusters and thus creating",
    "start": "329819",
    "end": "335009"
  },
  {
    "text": "namespaces this doesn't necessarily mean you have these like massive clusters and",
    "start": "335009",
    "end": "341009"
  },
  {
    "text": "you have everybody sharing a Devon prod cluster just like that's literally on the slide but it you know you could",
    "start": "341009",
    "end": "347159"
  },
  {
    "text": "still have many many clusters across your organization so why would you want to share your cluster across teams the",
    "start": "347159",
    "end": "355380"
  },
  {
    "text": "first is really a separation of concerns so you can have a central operator team that's really focused on managing the",
    "start": "355380",
    "end": "363150"
  },
  {
    "text": "lifecycle of clusters the policies against the clusters and then the development team can really live in the",
    "start": "363150",
    "end": "369180"
  },
  {
    "text": "land of the namespace and so it provides some you know a lot more freedom or they",
    "start": "369180",
    "end": "374550"
  },
  {
    "text": "don't necessarily need to worry as much about the underlying infrastructure another benefit of this just like was a",
    "start": "374550",
    "end": "382680"
  },
  {
    "text": "con of the previous approach the pro here is the cost effectiveness so as you have teams sharing clusters it's much",
    "start": "382680",
    "end": "389430"
  },
  {
    "text": "easier to get much higher utilization out of those clusters and in the save costs and then finally in terms of speed",
    "start": "389430",
    "end": "395370"
  },
  {
    "text": "so if your development team you're getting started on new application you want to get access to resources as",
    "start": "395370",
    "end": "401930"
  },
  {
    "text": "quickly as possible so far the way that the moment teams have done that is basically just by go often go on gke and",
    "start": "401930",
    "end": "408199"
  },
  {
    "text": "create their own cluster right but in this model you can also do that where you have a shared set of infrastructure that development teams can access",
    "start": "408199",
    "end": "415130"
  },
  {
    "text": "provides them a way to move much more quickly but there's definitely some downsides with approach the biggest one",
    "start": "415130",
    "end": "422539"
  },
  {
    "text": "being that it's really difficult to make sure that you have the right security posture in your namespaces so that teams",
    "start": "422539",
    "end": "428750"
  },
  {
    "text": "don't run into each other and applications create issues and other applications and other namespaces and",
    "start": "428750",
    "end": "435710"
  },
  {
    "text": "then on the flip side like if you actually do have these controls set it",
    "start": "435710",
    "end": "440870"
  },
  {
    "text": "then becomes very difficult for development teams to have the right level of self service and speed to move",
    "start": "440870",
    "end": "447889"
  },
  {
    "text": "quickly so for the rest of this presentation we're gonna be talking mostly about this use case too and we're",
    "start": "447889",
    "end": "454789"
  },
  {
    "text": "gonna walk through how you can think about utilizing namespaces and applying policies to these clusters thanks sorry",
    "start": "454789",
    "end": "463220"
  },
  {
    "start": "461000",
    "end": "461000"
  },
  {
    "text": "thanks Aaron so sharing clusters can definitely get pretty complicated pretty",
    "start": "463220",
    "end": "468260"
  },
  {
    "text": "quickly and let's revisit why we wanted to share clusters by creating namespaces",
    "start": "468260",
    "end": "473599"
  },
  {
    "text": "on the shared physical cluster in the first place remember again that namespaces allow us to abstract away the",
    "start": "473599",
    "end": "479479"
  },
  {
    "text": "workloads from the physical cluster so that the developer doesn't need to worry about the cluster lifecycle and in order",
    "start": "479479",
    "end": "486830"
  },
  {
    "text": "to split up the cluster to draw boundaries there's some characteristics",
    "start": "486830",
    "end": "492020"
  },
  {
    "text": "from a physical cluster that we need to duplicate in order to do this so for instance we need to be able to control",
    "start": "492020",
    "end": "499010"
  },
  {
    "text": "who is able to use each virtual cluster so this includes like what permissions",
    "start": "499010",
    "end": "505430"
  },
  {
    "text": "people have in each virtual cluster and we also need to be able to freely change the membership of these permissions for",
    "start": "505430",
    "end": "511250"
  },
  {
    "text": "each virtual cluster so this is under the topic of our back another",
    "start": "511250",
    "end": "516529"
  },
  {
    "text": "characteristic is that we need to be able to limit the amount of physical resources the physical cluster is able",
    "start": "516529",
    "end": "523070"
  },
  {
    "text": "to use so this is under the topic of resource control and finally we need to",
    "start": "523070",
    "end": "528800"
  },
  {
    "text": "be able to control the kind of traffic that comes if you're clustered and also the kind of",
    "start": "528800",
    "end": "534900"
  },
  {
    "text": "permissions that your workloads have running so this is a pretty broad third topic which is application security so",
    "start": "534900",
    "end": "543120"
  },
  {
    "text": "because you are sharing the same physical resource and network your namespace exists in a very low trust",
    "start": "543120",
    "end": "548880"
  },
  {
    "text": "environment so these boundaries are definitely very necessary for an acceptable degree of isolation and these",
    "start": "548880",
    "end": "556110"
  },
  {
    "text": "boundaries again are achieved through kubernetes policy objects which we'll go into more detail in a second so before",
    "start": "556110",
    "end": "564930"
  },
  {
    "text": "we go into more detail about policies and things like that we figured why not give some examples of how some of our",
    "start": "564930",
    "end": "571020"
  },
  {
    "text": "actual customers are using namespaces today so these are actual examples that we've anonymized from some fortune 500",
    "start": "571020",
    "end": "577200"
  },
  {
    "text": "company through like talking to or actual customers so it's pretty awesome so the first example is creating",
    "start": "577200",
    "end": "584880"
  },
  {
    "text": "namespaces per team so in this example one customer has like let's say two",
    "start": "584880",
    "end": "590490"
  },
  {
    "text": "namespaces per team they have some kubernetes yeah Mel and a github repository and don't really manipulate",
    "start": "590490",
    "end": "596520"
  },
  {
    "text": "their namespaces particularly often and they also offered admin rights for that entire namespace in our second example",
    "start": "596520",
    "end": "605960"
  },
  {
    "text": "this company created namespaces per team per environment so for instance an",
    "start": "605960",
    "end": "612540"
  },
  {
    "text": "example namespace would be like named Stacy one - team one - eks - dev so they",
    "start": "612540",
    "end": "621150"
  },
  {
    "text": "actually built an API to automate creating these namespaces and they also",
    "start": "621150",
    "end": "626280"
  },
  {
    "text": "have a template iPod security policies network policies along with other kubernetes",
    "start": "626280",
    "end": "631290"
  },
  {
    "text": "policies so for this example though their developers don't actually have a",
    "start": "631290",
    "end": "636390"
  },
  {
    "text": "concrete way to create new namespaces for a third example which is a more",
    "start": "636390",
    "end": "641430"
  },
  {
    "text": "mixed namespace per team example they some of their teams have like each name",
    "start": "641430",
    "end": "648150"
  },
  {
    "text": "stays can have many applications some teams have a separate namespace per application they apply they use github",
    "start": "648150",
    "end": "657060"
  },
  {
    "text": "sorry they use git operations on namespace definitions and they also collect information on who",
    "start": "657060",
    "end": "664319"
  },
  {
    "text": "administrative contacts are quota sizes and they collect this all in a github repository on top of that they have a",
    "start": "664319",
    "end": "672119"
  },
  {
    "text": "application that goes out and discovers repositories and collates definitions",
    "start": "672119",
    "end": "677339"
  },
  {
    "text": "and they compile it all into a held chart which is pushed out by continuous",
    "start": "677339",
    "end": "682410"
  },
  {
    "text": "delivery to their clusters so this process sets up their namespaces are",
    "start": "682410",
    "end": "687449"
  },
  {
    "text": "back policies quotas default limits and requests and for a final example this",
    "start": "687449",
    "end": "694949"
  },
  {
    "text": "company they created a namespace per application or category of application so they are Prometheus and elasticsearch",
    "start": "694949",
    "end": "703589"
  },
  {
    "text": "instances where each in their own namespaces and all of their namespaces were created by the platform operator",
    "start": "703589",
    "end": "709529"
  },
  {
    "text": "they weren't yet at a stage in their company where individual developer teams",
    "start": "709529",
    "end": "714689"
  },
  {
    "text": "were able to have their own namespaces though okay so what are the comps some",
    "start": "714689",
    "end": "721109"
  },
  {
    "start": "718000",
    "end": "718000"
  },
  {
    "text": "of the common characteristics between all these examples that amy was sharing these are really three examples for how",
    "start": "721109",
    "end": "727679"
  },
  {
    "text": "you might structure your organization against namespaces and I'll talk through some of the pros and cons of each of",
    "start": "727679",
    "end": "733230"
  },
  {
    "text": "them so the first one is basically a namespace per team the benefit of this",
    "start": "733230",
    "end": "739889"
  },
  {
    "text": "approach is it really provides you know self management and a autonomy by delegating certain responsibilities to",
    "start": "739889",
    "end": "747269"
  },
  {
    "text": "the team that's developing against the namespace in terms of cons there's not too many this is actually like a pretty",
    "start": "747269",
    "end": "753329"
  },
  {
    "text": "sane approach the second major way to structure your clusters is by creating",
    "start": "753329",
    "end": "760619"
  },
  {
    "text": "one namespace per application this actually starts to look just a lot like namespace per team the difference is as",
    "start": "760619",
    "end": "767669"
  },
  {
    "text": "by specifying the application as the unit you can more you know create more",
    "start": "767669",
    "end": "774239"
  },
  {
    "text": "refinement in terms of the policies that you apply to a given namespace that are aligned with the application the",
    "start": "774239",
    "end": "780329"
  },
  {
    "text": "specific application needs and then the third is namespace for environment so",
    "start": "780329",
    "end": "785369"
  },
  {
    "text": "this is more common when you look at smaller teams and it's essentially a way",
    "start": "785369",
    "end": "790410"
  },
  {
    "text": "to get more use out of a smaller fewer number of clusters so basically",
    "start": "790410",
    "end": "797329"
  },
  {
    "text": "each namespace is logically discrete and the development teams can work with it within this basically isolated",
    "start": "797329",
    "end": "803930"
  },
  {
    "text": "development namespace the benefit of this as well is that the naming of software components can be maintained",
    "start": "803930",
    "end": "810800"
  },
  {
    "text": "without collision across these different environments there are some cons with",
    "start": "810800",
    "end": "816500"
  },
  {
    "text": "this model so a lot of the policies that will talk through for namespaces should",
    "start": "816500",
    "end": "821750"
  },
  {
    "text": "in this case should really be set at the cluster level so it's really difficult to achieve the right security posture by",
    "start": "821750",
    "end": "829519"
  },
  {
    "text": "setting these kinds of policies in the namespace level also if you do follow this model it's really still best to",
    "start": "829519",
    "end": "836750"
  },
  {
    "text": "create basically a development namespace and a test namespace etc by applications",
    "start": "836750",
    "end": "843860"
  },
  {
    "text": "so instead of having one development namespace you'd have like a you know",
    "start": "843860",
    "end": "848899"
  },
  {
    "text": "project a development namespace a project B development namespace etc okay",
    "start": "848899",
    "end": "856910"
  },
  {
    "start": "855000",
    "end": "855000"
  },
  {
    "text": "so how do we actually start thinking about how to set the right controls at",
    "start": "856910",
    "end": "862010"
  },
  {
    "text": "either the cluster level or the namespace level so as mentioned in the previous discussion of creating a",
    "start": "862010",
    "end": "868160"
  },
  {
    "text": "namespace per environment there are certain controls that are much better set at the cluster level versus the",
    "start": "868160",
    "end": "875269"
  },
  {
    "text": "namespace level so in a shared cluster environment the cluster is really kind of the land of the operator right so",
    "start": "875269",
    "end": "882380"
  },
  {
    "text": "some of the policies that the operator is going to want to set in this case are",
    "start": "882380",
    "end": "887680"
  },
  {
    "text": "things like cluster access you know who's allowed to do what in the cluster and you really only want to think about",
    "start": "887680",
    "end": "894050"
  },
  {
    "text": "providing cluster access to somebody who needs access to the entire cluster or somebody who needs more like",
    "start": "894050",
    "end": "900019"
  },
  {
    "text": "administrative controls over the cluster the second is infrastructure security so",
    "start": "900019",
    "end": "906649"
  },
  {
    "text": "this is you know really defining like what the boundaries of the cluster itself need to look like an example is",
    "start": "906649",
    "end": "912890"
  },
  {
    "text": "pod security policies right so you can set basically the weather clusters are",
    "start": "912890",
    "end": "918680"
  },
  {
    "text": "allowed to access privileged pods cluster quota",
    "start": "918680",
    "end": "924109"
  },
  {
    "text": "basically how big can the cluster be right so setting some definitions around that that's usually done at the",
    "start": "924109",
    "end": "930959"
  },
  {
    "text": "underlined infrastructure level and then finally cluster configuration so should",
    "start": "930959",
    "end": "936449"
  },
  {
    "text": "this should all my clusters be H a should they always have Prometheus installed these are some of the things",
    "start": "936449",
    "end": "942089"
  },
  {
    "text": "that you want to think about at the at the cluster level so then moving on to the namespace so again in a shared",
    "start": "942089",
    "end": "948329"
  },
  {
    "text": "cluster environment namespace is really the land of the application or the development team so again here thinking",
    "start": "948329",
    "end": "955799"
  },
  {
    "text": "about namespace access via our back so what can developers do with them within",
    "start": "955799",
    "end": "961889"
  },
  {
    "text": "this namespace application security is similar which is basically based on the",
    "start": "961889",
    "end": "967379"
  },
  {
    "text": "needs of the application what are some of the policies that you should be thinking about for the namespace and amy is going to go into that and a lot",
    "start": "967379",
    "end": "973679"
  },
  {
    "text": "greater depth and namespace quota as well so you know how much resources",
    "start": "973679",
    "end": "978959"
  },
  {
    "text": "should development teams be able to use so that they don't step on each other's toes and Amy's gonna spend a lot more",
    "start": "978959",
    "end": "984959"
  },
  {
    "text": "time on that as well finally namespace configuration so are there certain characteristics of",
    "start": "984959",
    "end": "990619"
  },
  {
    "text": "namespaces that you want to enforce across your clusters an example is labels right so I want to make sure that",
    "start": "990619",
    "end": "996959"
  },
  {
    "text": "this you know namespace is in this in this cluster always have labels applied to these resources awesome so let's go",
    "start": "996959",
    "end": "1005779"
  },
  {
    "start": "1004000",
    "end": "1004000"
  },
  {
    "text": "ahead and tie the topics erin discovered with more specific recommendations so before I start I just want to say we're",
    "start": "1005779",
    "end": "1012559"
  },
  {
    "text": "not here to be prescriptive or offer like like like prescriptive recommendations these are more just like",
    "start": "1012559",
    "end": "1018799"
  },
  {
    "text": "things you can think about and apply them to what works for your we're gonna put your organization so how do you",
    "start": "1018799",
    "end": "1026839"
  },
  {
    "text": "configure your namespaces to meet your security and compliance right requirements these are a set of key",
    "start": "1026839",
    "end": "1033409"
  },
  {
    "text": "policy types that you should consider for your namespaces so under the topic of cluster and namespace access the main",
    "start": "1033409",
    "end": "1040730"
  },
  {
    "text": "thing you should be thinking about our art is our back so you can go ahead and",
    "start": "1040730",
    "end": "1046129"
  },
  {
    "text": "enable user and workload access to you either the cluster through cluster roll bindings or to namespaces through",
    "start": "1046129",
    "end": "1052970"
  },
  {
    "text": "regular roll bindings so access control is apparently the highest priority policy",
    "start": "1052970",
    "end": "1058330"
  },
  {
    "text": "that you need to configure from the start so common general roles include",
    "start": "1058330",
    "end": "1063429"
  },
  {
    "text": "admin edit and view the admin role these roles are all pretty self-explanatory",
    "start": "1063429",
    "end": "1068470"
  },
  {
    "text": "but I'll keep on going to more detail so the admin role it allows read and write",
    "start": "1068470",
    "end": "1073539"
  },
  {
    "text": "access to most resources the namespace including the ability to create roles and role bindings within the namespace",
    "start": "1073539",
    "end": "1079450"
  },
  {
    "text": "it does not however allow you to write access to resource coda or to the",
    "start": "1079450",
    "end": "1084549"
  },
  {
    "text": "namespace itself so you should probably use the admin role relatively sparingly",
    "start": "1084549",
    "end": "1090370"
  },
  {
    "text": "and you should only use it for the applicator operator or DevOps type of",
    "start": "1090370",
    "end": "1096490"
  },
  {
    "text": "persona because they are responsible for providing access and maintaining your security controls but like most",
    "start": "1096490",
    "end": "1103900"
  },
  {
    "text": "organizations and giving this role to everyone so maybe it's something to pay",
    "start": "1103900",
    "end": "1109270"
  },
  {
    "text": "more attention to and be careful of the second role is read and write",
    "start": "1109270",
    "end": "1114700"
  },
  {
    "text": "permissions this allows access to most objects in a namespace and it doesn't allow viewing or modifying roles or role",
    "start": "1114700",
    "end": "1120610"
  },
  {
    "text": "bindings and finally for read-only permissions it allows access to see most objects in the namespace and it does not",
    "start": "1120610",
    "end": "1127510"
  },
  {
    "text": "allow being roles or role bindings it also does not allow being secrets under",
    "start": "1127510",
    "end": "1136450"
  },
  {
    "text": "the topic of infrastructure and application security there's a few",
    "start": "1136450",
    "end": "1141549"
  },
  {
    "text": "different roles that you can a few different policies that you can think about and the three are pod security",
    "start": "1141549",
    "end": "1147970"
  },
  {
    "text": "policies network policies and image policies for pod security policies",
    "start": "1147970",
    "end": "1154240"
  },
  {
    "text": "kubernetes by default allows anything capable of creating a pod to run a fairly privileged container",
    "start": "1154240",
    "end": "1161740"
  },
  {
    "text": "that can compromise a system which is not good obviously so what exactly is a",
    "start": "1161740",
    "end": "1166870"
  },
  {
    "text": "pod security policy it is an urban oddities API object that declaratively defines what users and service accounts",
    "start": "1166870",
    "end": "1174549"
  },
  {
    "text": "are allowed to create within their clusters so this protects clusters from privileged pods by ensuring the",
    "start": "1174549",
    "end": "1180880"
  },
  {
    "text": "requester is allowed to create the pod as configured the policies are enabled",
    "start": "1180880",
    "end": "1187330"
  },
  {
    "text": "by an admission controller the cube controller man your modifications as well as our back",
    "start": "1187330",
    "end": "1192639"
  },
  {
    "text": "additions for more details about this though you should definitely check out the community's kubernetes documentation",
    "start": "1192639",
    "end": "1197710"
  },
  {
    "text": "it's definitely adequate and more detail than we can go into for this 30-minute talk so the main thing I wanted to cover",
    "start": "1197710",
    "end": "1206019"
  },
  {
    "text": "for pod security policies are these two main concepts which is the the first",
    "start": "1206019",
    "end": "1213039"
  },
  {
    "text": "concept is defining a default policy which provides restrictive access so",
    "start": "1213039",
    "end": "1219190"
  },
  {
    "text": "this ensures that your pods can't be created with privileged settings such as using the hosts network and you should",
    "start": "1219190",
    "end": "1226059"
  },
  {
    "text": "absolutely start by creating this restrictive policy that will act as a default for you to fall back on to the",
    "start": "1226059",
    "end": "1232299"
  },
  {
    "text": "second is creating the concepts of an elevated permissive policy so what this",
    "start": "1232299",
    "end": "1237519"
  },
  {
    "text": "allows is for privileged settings to use to be used for certain pods so for",
    "start": "1237519",
    "end": "1243370"
  },
  {
    "text": "instance you can probably assign this pod security policy for things created than cube system namespace so while",
    "start": "1243370",
    "end": "1250929"
  },
  {
    "text": "restrictive access is like enough for most pod creations a permissive policy",
    "start": "1250929",
    "end": "1257440"
  },
  {
    "text": "is needed for pods that require elevated access so for instance again in the cube",
    "start": "1257440",
    "end": "1262480"
  },
  {
    "text": "proxy example it needs the host network to be enabled on the topic of network",
    "start": "1262480",
    "end": "1271360"
  },
  {
    "text": "policies they are used to configure how groups of pods are allowed to communicate with each other and with",
    "start": "1271360",
    "end": "1277330"
  },
  {
    "text": "other network points which is again pretty self-explanatory network policies so in other words it creates firewalls",
    "start": "1277330",
    "end": "1284259"
  },
  {
    "text": "between pods running in a kubernetes cluster so there's there's three general",
    "start": "1284259",
    "end": "1289720"
  },
  {
    "text": "network policy strategies the first is default deny so for this all traffic",
    "start": "1289720",
    "end": "1295600"
  },
  {
    "text": "will be dropped unless you set a policy to allow your traffic through for the second you can allow traffic through",
    "start": "1295600",
    "end": "1302620"
  },
  {
    "text": "based on like general characteristics so for instance allow all traffic to an application from namespace X or allow",
    "start": "1302620",
    "end": "1310629"
  },
  {
    "text": "traffic from external clients so these are pretty broad characteristics and finally another strategy is allowing",
    "start": "1310629",
    "end": "1318820"
  },
  {
    "text": "traffic based on labels so for instance let's say you assign the label to date",
    "start": "1318820",
    "end": "1323920"
  },
  {
    "text": "based service and then you sign another label to application you can create a rule that says everything in this",
    "start": "1323920",
    "end": "1330250"
  },
  {
    "text": "application can talk to you anything with this specific database label and",
    "start": "1330250",
    "end": "1336330"
  },
  {
    "text": "the third one is is pretty short and sweet so for image policies it just",
    "start": "1336330",
    "end": "1341830"
  },
  {
    "text": "allows you to specify certain registries you can pull your images from so obviously if you pull your images from",
    "start": "1341830",
    "end": "1348040"
  },
  {
    "text": "an edge trust untrusted registry that can cause bad things within your",
    "start": "1348040",
    "end": "1353170"
  },
  {
    "text": "production cluster under the topic of",
    "start": "1353170",
    "end": "1358930"
  },
  {
    "text": "cluster and names taste configuration you can mostly focus on label policies so you can create certain policies to",
    "start": "1358930",
    "end": "1365740"
  },
  {
    "text": "require specific resources to have a label what labels allow you to do is to be",
    "start": "1365740",
    "end": "1371440"
  },
  {
    "text": "able to filter resources understand your resource by some specific attribute or identify resources for your policy",
    "start": "1371440",
    "end": "1379150"
  },
  {
    "text": "application so for instance here are some examples you can define things like all clusters must have labels XY and Z",
    "start": "1379150",
    "end": "1386260"
  },
  {
    "text": "or all kubernetes objects must have a owner label and finally you can say",
    "start": "1386260",
    "end": "1392500"
  },
  {
    "text": "something like I want all related service foreign applications you have the same label",
    "start": "1392500",
    "end": "1399000"
  },
  {
    "start": "1401000",
    "end": "1401000"
  },
  {
    "text": "and this is on the topic of cluster size and namespace quota so remember the",
    "start": "1404280",
    "end": "1409740"
  },
  {
    "text": "point of all these policies are to divide up visible clusters into namespaces in doing so operators need to",
    "start": "1409740",
    "end": "1416280"
  },
  {
    "text": "be able to divide and limit the resources each namespace is allowed to use so this ensures that each team can",
    "start": "1416280",
    "end": "1424320"
  },
  {
    "text": "get their fair share of resources they also need a degree of security to protect the resources from the physical",
    "start": "1424320",
    "end": "1430950"
  },
  {
    "text": "cluster from being depleted by misconfigured workload so for instance a misconfigured job can cause a cluster to",
    "start": "1430950",
    "end": "1437340"
  },
  {
    "text": "crash by causing a stream string of job creations before each job is able to",
    "start": "1437340",
    "end": "1442800"
  },
  {
    "text": "successfully terminate and release the source resources so you definitely want some level of constraint there to make",
    "start": "1442800",
    "end": "1448350"
  },
  {
    "text": "sure that your cluster is not completely just like depleted of of all its resources so the kubernetes object we",
    "start": "1448350",
    "end": "1457770"
  },
  {
    "text": "can use to divide up these physical the physical clusters resources is resource quota so this provides constraints that",
    "start": "1457770",
    "end": "1464970"
  },
  {
    "text": "limit aggregate resource consumption per namespace it can limit the quality of",
    "start": "1464970",
    "end": "1470460"
  },
  {
    "text": "quantity of your objects I think that can be created in a namespace by type as well as a total amount of compute",
    "start": "1470460",
    "end": "1476940"
  },
  {
    "text": "resources that may be consumed by resources that project so how exactly do",
    "start": "1476940",
    "end": "1482040"
  },
  {
    "text": "you use resource quota so what you should do is have your administrator create a resource quota per namespace",
    "start": "1482040",
    "end": "1488540"
  },
  {
    "text": "users can create resources such as pods and services in the namespace and then",
    "start": "1488540",
    "end": "1493890"
  },
  {
    "text": "the quota system will track usage to ensure that it does not exceed hard resource limits defined the different",
    "start": "1493890",
    "end": "1500490"
  },
  {
    "text": "types of quotas are CPU limits CPU requests memory limits and requests object and total object counts towards",
    "start": "1500490",
    "end": "1506640"
  },
  {
    "text": "request these are all things that you can definitely check out in more detail in the communities documentation so",
    "start": "1506640",
    "end": "1512460"
  },
  {
    "text": "putting this all together examples of policies that can be created using nice aces and quotas are in a cluster with a",
    "start": "1512460",
    "end": "1519600"
  },
  {
    "text": "capacity of 64 gigabytes of RAM and 32 cores let team a use 20 gigabytes and 10",
    "start": "1519600",
    "end": "1525600"
  },
  {
    "text": "cores and then let team B use 40 gigabytes and 20 cores and holds 4 gigabytes and 2 cores in reserve for",
    "start": "1525600",
    "end": "1532500"
  },
  {
    "text": "future allocation so I talk a lot of a lot of detail about policies",
    "start": "1532500",
    "end": "1538930"
  },
  {
    "start": "1534000",
    "end": "1534000"
  },
  {
    "text": "which again is something that you should go into more detail about and the community's documentation but how",
    "start": "1538930",
    "end": "1544330"
  },
  {
    "text": "exactly do you enforce individual policies across clusters and that's",
    "start": "1544330",
    "end": "1549760"
  },
  {
    "text": "where admission controllers come in and mission controllers they what they do is",
    "start": "1549760",
    "end": "1555820"
  },
  {
    "text": "the intercept requests to the kubernetes api server after the request is authenticated and authorized as you can",
    "start": "1555820",
    "end": "1561400"
  },
  {
    "text": "see in this very broad photo there's two main kinds of admission controllers the",
    "start": "1561400",
    "end": "1566830"
  },
  {
    "text": "first is mutating so what this allows you to do is change kubernetes objects before they're persisted to SED as",
    "start": "1566830",
    "end": "1573760"
  },
  {
    "text": "they're coming in so for instance you can say something like change pods with X characteristics to always have the",
    "start": "1573760",
    "end": "1580300"
  },
  {
    "text": "label app : demo the second kind of admission controller is validating and",
    "start": "1580300",
    "end": "1586420"
  },
  {
    "text": "mission controllers so what they do is they reject and accept kubernetes objects so remember how we were talking",
    "start": "1586420",
    "end": "1592930"
  },
  {
    "text": "about pod security policies they actually needed mission controllers to be enabled to be able to use pod",
    "start": "1592930",
    "end": "1598330"
  },
  {
    "text": "security policies so a related example is you can say something like deployments that do not need this",
    "start": "1598330",
    "end": "1605410"
  },
  {
    "text": "specific pod security policy are rejected from your cluster ok so now",
    "start": "1605410",
    "end": "1613390"
  },
  {
    "text": "that we've reviewed some of those key policies that you want to apply to the cluster or namespace level let's discuss",
    "start": "1613390",
    "end": "1620560"
  },
  {
    "text": "a little bit about how the needs of your organization are going to change as you grow so starting with a small team this",
    "start": "1620560",
    "end": "1627490"
  },
  {
    "text": "team is likely working on say 5 to 10 micro services they're very likely to just deploy all the services into the",
    "start": "1627490",
    "end": "1634720"
  },
  {
    "text": "default namespace then you're moving to a rapidly growing or medium-size team",
    "start": "1634720",
    "end": "1639970"
  },
  {
    "text": "here you're likely to have you know 10 or more micro services you're starting to split a team into smaller teams and",
    "start": "1639970",
    "end": "1647770"
  },
  {
    "text": "while everyone might know how like the complete system works that's becoming harder and harder to coordinate so you",
    "start": "1647770",
    "end": "1653980"
  },
  {
    "text": "know in this case like it's trying to spin up the entire stack on on your develop machines is going to be more and",
    "start": "1653980",
    "end": "1659740"
  },
  {
    "text": "more difficult and it's necessary at this point to use multiple clusters or and or multiple namespaces and then",
    "start": "1659740",
    "end": "1667270"
  },
  {
    "text": "moving to a large company basically not everyone knows who everyone else is you know",
    "start": "1667270",
    "end": "1672500"
  },
  {
    "text": "teams are working on features that other teams don't even know about in this case you definitely want to have multiple",
    "start": "1672500",
    "end": "1678320"
  },
  {
    "text": "clusters and multiple namespaces and then finally moving to the enterprise you have like groups that don't even",
    "start": "1678320",
    "end": "1684950"
  },
  {
    "text": "know that other groups exist in this case you're gonna be much more likely to have many many clusters and many many",
    "start": "1684950",
    "end": "1692210"
  },
  {
    "text": "namespaces so as you move to this",
    "start": "1692210",
    "end": "1697880"
  },
  {
    "start": "1695000",
    "end": "1695000"
  },
  {
    "text": "enterprise scale things can get super complicated like very quickly so oftentimes what you end up having happen",
    "start": "1697880",
    "end": "1705380"
  },
  {
    "text": "is the individual development teams go off and create their own clusters right so everybody's seen this it can get",
    "start": "1705380",
    "end": "1712070"
  },
  {
    "text": "really challenging and it can get really out of control quickly and there's a few challenges with this right so first is",
    "start": "1712070",
    "end": "1718280"
  },
  {
    "text": "like operators don't necessarily have the control that they need so they don't",
    "start": "1718280",
    "end": "1723980"
  },
  {
    "text": "have the control over policies in terms of what these clusters look like and they don't have control to ensure that",
    "start": "1723980",
    "end": "1730400"
  },
  {
    "text": "resources are being used efficiently the second major problem is CIOs and IT managers they don't have visibility into",
    "start": "1730400",
    "end": "1737720"
  },
  {
    "text": "this system right so they can't actually say whether compliance needs are being met they can't say whether they're using",
    "start": "1737720",
    "end": "1744170"
  },
  {
    "text": "their resources and and money effectively so to close out this talk",
    "start": "1744170",
    "end": "1749720"
  },
  {
    "text": "we're going to present a few ideas for how to think about structuring your organization against your infrastructure",
    "start": "1749720",
    "end": "1755480"
  },
  {
    "text": "as your organization grows and at VMware we're doing a lot of work in this area I",
    "start": "1755480",
    "end": "1760790"
  },
  {
    "text": "think Joe bata has a really great analogy here that he's been using which is basically you know that kubernetes",
    "start": "1760790",
    "end": "1767270"
  },
  {
    "text": "allowed us to move beyond thinking about individual nodes right but now we",
    "start": "1767270",
    "end": "1772670"
  },
  {
    "text": "actually need to move beyond thinking about individual clusters and treat our entire resources as a fleet of resources",
    "start": "1772670",
    "end": "1782290"
  },
  {
    "start": "1782000",
    "end": "1782000"
  },
  {
    "text": "but when we scale there's some concerns that we need to address so in large",
    "start": "1782410",
    "end": "1787880"
  },
  {
    "text": "organizations there's usually two primary personas you have developers on",
    "start": "1787880",
    "end": "1793280"
  },
  {
    "text": "the one hand and operators on the other hand developers obviously are responsible for developing applications",
    "start": "1793280",
    "end": "1800500"
  },
  {
    "text": "operators are responsible for maintaining the security posture ensuring that resources",
    "start": "1800500",
    "end": "1806840"
  },
  {
    "text": "are being used efficiently and these two teams really have some competing priorities so developers want",
    "start": "1806840",
    "end": "1813320"
  },
  {
    "text": "self-service they want to move as quickly as possible operators want control and they want to",
    "start": "1813320",
    "end": "1818510"
  },
  {
    "text": "ensure they have control over that environment and this balance between these two groups is really difficult to",
    "start": "1818510",
    "end": "1824420"
  },
  {
    "text": "achieve and in addition to that a lot of times the interaction between these two",
    "start": "1824420",
    "end": "1830090"
  },
  {
    "text": "groups is through tickets so there's basically two two goals that we're",
    "start": "1830090",
    "end": "1835610"
  },
  {
    "text": "trying to solve one is provide development teams self-service access to",
    "start": "1835610",
    "end": "1841940"
  },
  {
    "text": "infrastructure that's not ticket driven and second provide operators the control they need over over things like security",
    "start": "1841940",
    "end": "1849160"
  },
  {
    "text": "compliance and resources usage so here's",
    "start": "1849160",
    "end": "1854180"
  },
  {
    "text": "one model that we're thinking about looking that we're looking at it VMware for how to do this so the first step is",
    "start": "1854180",
    "end": "1860720"
  },
  {
    "text": "really to create groupings of clusters so this is really to set a set",
    "start": "1860720",
    "end": "1866810"
  },
  {
    "text": "consistency once you start growing to a very large number of clusters create groupings and then you can apply that a",
    "start": "1866810",
    "end": "1873230"
  },
  {
    "text": "lot of the cluster level policies that we talked about earlier the second step",
    "start": "1873230",
    "end": "1878930"
  },
  {
    "text": "then is to enable sharing of these clusters through basically groupings of",
    "start": "1878930",
    "end": "1884420"
  },
  {
    "text": "namespaces so we do this by basically creating these flexible groupings across",
    "start": "1884420",
    "end": "1890120"
  },
  {
    "text": "clusters and these groupings you can think of as using them for like distinct development projects where you want to",
    "start": "1890120",
    "end": "1897530"
  },
  {
    "text": "give a common set of users access to the namespaces across clusters and you want",
    "start": "1897530",
    "end": "1903590"
  },
  {
    "text": "to set a common set of name space policies across these namespaces which lives across clusters and one way that",
    "start": "1903590",
    "end": "1911270"
  },
  {
    "text": "these groupings can be achieved is through labels so the truth is there's really not one true hierarchy so you",
    "start": "1911270",
    "end": "1918290"
  },
  {
    "text": "know based on the needs of your organization these groupings may look a little bit different but you know what",
    "start": "1918290",
    "end": "1924920"
  },
  {
    "text": "something that we're trying to avoid is creating very very strict hierarchy that tends to be pretty common in this",
    "start": "1924920",
    "end": "1931040"
  },
  {
    "text": "industry so implementation wise though like what does scale",
    "start": "1931040",
    "end": "1936460"
  },
  {
    "start": "1933000",
    "end": "1933000"
  },
  {
    "text": "actually mean in terms of managing your namespaces in relation to your organization and workloads so what it",
    "start": "1936460",
    "end": "1942790"
  },
  {
    "text": "actually boils down to is consistency and managing your kubernetes policy objects we already talked about how to",
    "start": "1942790",
    "end": "1948370"
  },
  {
    "text": "enforce individual policies with admission controllers we also need something that manages consistency",
    "start": "1948370",
    "end": "1954310"
  },
  {
    "text": "consistency in interaction between policies so for instance you need to be",
    "start": "1954310",
    "end": "1960820"
  },
  {
    "text": "able to consistently make decisions like can pods and cluster one namespace a",
    "start": "1960820",
    "end": "1966130"
  },
  {
    "text": "have privilege pod security policies you also need to be able to move quickly and",
    "start": "1966130",
    "end": "1971680"
  },
  {
    "text": "change quickly as well and you also need to be able to enforce these decisions",
    "start": "1971680",
    "end": "1977590"
  },
  {
    "text": "across clusters without needing to manually trace or edit some like massive decision tree so open policy agents",
    "start": "1977590",
    "end": "1985900"
  },
  {
    "text": "kubernetes plugin is one way to make policy changes on a cluster without writing a bunch of custom logic and its",
    "start": "1985900",
    "end": "1992260"
  },
  {
    "text": "OPA for short so OPA is a CN CF hosted sandbox project",
    "start": "1992260",
    "end": "1997300"
  },
  {
    "text": "it's a general-purpose policy engine and it can be quickly used across the stack",
    "start": "1997300",
    "end": "2002570"
  },
  {
    "text": "so why do we recommend using a policy engine policy enabled services allow",
    "start": "2002570",
    "end": "2008250"
  },
  {
    "text": "policies to be specified declaratively and updated at any time without recompiling or deploying your",
    "start": "2008250",
    "end": "2014040"
  },
  {
    "text": "applications policies are also enforced automatically so this is super valuable",
    "start": "2014040",
    "end": "2020310"
  },
  {
    "text": "when decisions need to may be made very quickly they also make deployments more",
    "start": "2020310",
    "end": "2027090"
  },
  {
    "text": "adaptable to changing business requirements and approve improve the ability to discover violations and",
    "start": "2027090",
    "end": "2033030"
  },
  {
    "text": "conflicts they also increase the consensus consistency of policy compliant clients and mitigate the risk",
    "start": "2033030",
    "end": "2039900"
  },
  {
    "text": "of human error so like the point of this entire talk is",
    "start": "2039900",
    "end": "2046530"
  },
  {
    "text": "that speed and software development is on the basis of competition organizations need their developers to",
    "start": "2046530",
    "end": "2053520"
  },
  {
    "text": "be able to move as quickly as possible by having access to infrastructure on demand but on the other hand operators",
    "start": "2053520",
    "end": "2060360"
  },
  {
    "text": "are balancing this battle where they need to be able to get keep the infrastructure to ensure that security",
    "start": "2060360",
    "end": "2065730"
  },
  {
    "text": "and compiling client's needs are met so what we hope that you got from this talk is that you",
    "start": "2065730",
    "end": "2072120"
  },
  {
    "text": "can leave with the knowledge to start your or to model your organization against your kubernetes infrastructure based on the size stage and specific",
    "start": "2072120",
    "end": "2079800"
  },
  {
    "text": "needs of your organization thank you so much for coming to Aaron and i's talk thank you we hope you had every time",
    "start": "2079800",
    "end": "2085800"
  },
  {
    "text": "thank you [Applause]",
    "start": "2085800",
    "end": "2092088"
  }
]