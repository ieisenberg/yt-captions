[
  {
    "text": "okay up next we've got a love letter to isolation uh with Kelly Shortridge uh Kelly is a senior principal engineer at",
    "start": "680",
    "end": "6879"
  },
  {
    "text": "fley and Lead uh author of security chaos engineering please join me in welcoming her to the stage thank you",
    "start": "6879",
    "end": "13639"
  },
  {
    "text": "very much thank you so much for having me um",
    "start": "13639",
    "end": "18960"
  },
  {
    "text": "and welcome to a love letter to isolation I know that this is probably the first Love Letter you've seen at",
    "start": "18960",
    "end": "24720"
  },
  {
    "text": "like a nerd conference so uh get excited it really is just me like expressing my profuse affection for the technology",
    "start": "24720",
    "end": "31599"
  },
  {
    "text": "that is isolation obviously tying it so I actually think isolation is kind of",
    "start": "31599",
    "end": "36960"
  },
  {
    "text": "the unsung hero of modern Computing I think without it we actually couldn't build many of the systems that we depend",
    "start": "36960",
    "end": "42760"
  },
  {
    "text": "on today it's really a core design element for how we sustain resilience against",
    "start": "42760",
    "end": "48520"
  },
  {
    "text": "failures whether that's you know the performance variety that you care about on the sere side or whether that's cyber attacks as",
    "start": "48520",
    "end": "54719"
  },
  {
    "text": "well but I really think we don't actually love isolation the way that we should I think we take it for granted I",
    "start": "54719",
    "end": "61600"
  },
  {
    "text": "think we often Overlook it when we're thinking about software security and security architecture we just don't",
    "start": "61600",
    "end": "66920"
  },
  {
    "text": "invest in it as much as we should I think isolation deserves more than this like they're a high value",
    "start": "66920",
    "end": "72799"
  },
  {
    "text": "partner we got to like invest more effort right I also think our machines deserve more than this too so this is",
    "start": "72799",
    "end": "79280"
  },
  {
    "text": "all about how do we deepen our relationship with isolation how do we harness its potential and Computing as",
    "start": "79280",
    "end": "84439"
  },
  {
    "text": "much as we can this is why this talk is a love letter to isolation truly",
    "start": "84439",
    "end": "89960"
  },
  {
    "text": "appreciate it for the the gift that it is for software resilience and security it's kind of a love letter you know to",
    "start": "89960",
    "end": "95479"
  },
  {
    "text": "usher in this next big step this this big milestone in our relationship and I think that big milestone is grab",
    "start": "95479",
    "end": "102159"
  },
  {
    "text": "assembly and especially the component model so let's start our love letter",
    "start": "102159",
    "end": "108640"
  },
  {
    "text": "with an Ode to isolation importance in complex systems no matter whether it's software",
    "start": "108640",
    "end": "114960"
  },
  {
    "text": "otherwise so not everyone realizes this but life actually literally emerged due",
    "start": "114960",
    "end": "120159"
  },
  {
    "text": "to isolation like all life relies on a membrane a membrane partially severing",
    "start": "120159",
    "end": "125560"
  },
  {
    "text": "the organism or living being from its environment so I love the quote by biophysicist Harold morwitz who said the",
    "start": "125560",
    "end": "132319"
  },
  {
    "text": "necessity of thermodynamically isolating a subsystem is an irreducible condition of",
    "start": "132319",
    "end": "137760"
  },
  {
    "text": "Life isolation really represents a selective barrier that ideally lets good things in and keeps bad things out from",
    "start": "137760",
    "end": "144280"
  },
  {
    "text": "the external World reduces the contagion effect which with Co we're all very familiar with that now when failure one",
    "start": "144280",
    "end": "150879"
  },
  {
    "text": "thing Cascades to the rest of the system right and in nature we often see that this partial isolation is very layered",
    "start": "150879",
    "end": "157680"
  },
  {
    "text": "that exists in both the micro and the macro world and I like to think nature was actually the original architect of",
    "start": "157680",
    "end": "164200"
  },
  {
    "text": "nested isolation well well well before we conceived the",
    "start": "164200",
    "end": "169360"
  },
  {
    "text": "transistor so we've observed isolation across literally every scale in biology right like from proteins and genes to",
    "start": "169360",
    "end": "175280"
  },
  {
    "text": "cells to organs to ecosystems and so much again depends on a component separate itself to some degree from its",
    "start": "175280",
    "end": "181640"
  },
  {
    "text": "external surroundings and other components so like we have skulls here that protect our brain from its external",
    "start": "181640",
    "end": "187239"
  },
  {
    "text": "environments and even other components within our body rate like the blood brain barrier then our brain cells have",
    "start": "187239",
    "end": "192840"
  },
  {
    "text": "their own isolation too also things like axotal lizards geckos iguanas if you don't know they",
    "start": "192840",
    "end": "198799"
  },
  {
    "text": "can regrow their limbs if they fall off again it's just showing how like this isolation means that one component if it",
    "start": "198799",
    "end": "205000"
  },
  {
    "text": "fails it doesn't Cascade to the rest of the system and it enables adaptation",
    "start": "205000",
    "end": "210439"
  },
  {
    "text": "we even see this in other areas of Technology like Humanity's relationship with nature so as Dutch elm disease",
    "start": "210439",
    "end": "216920"
  },
  {
    "text": "ravaged North America and also elsewhere Alberta which is a province in Canada actually decided to isolate its Elm",
    "start": "216920",
    "end": "223840"
  },
  {
    "text": "forests from the outside world it means today it actually has the largest population of elm trees in the whole",
    "start": "223840",
    "end": "231239"
  },
  {
    "text": "world and for thousands of years humans have grown crops with imposed isolation to ensure their resilience of failures",
    "start": "231239",
    "end": "237640"
  },
  {
    "text": "so like this picture here a beautiful Orchard very low res jpeg uh it shows",
    "start": "237640",
    "end": "244239"
  },
  {
    "text": "the orchard system of the John we National Historic Site and here what's interesting is they actually planted the crops as modular units of species blocks",
    "start": "244239",
    "end": "252079"
  },
  {
    "text": "so it means they're not even just more efficient for things like irrigation but it's building resilience into the system",
    "start": "252079",
    "end": "257919"
  },
  {
    "text": "like ensuring that L Frost damage doesn't actually affect um the rest of the crops but it doesn't Cascade",
    "start": "257919",
    "end": "265280"
  },
  {
    "text": "everywhere and speaking modularity like again this Orchard really reflects that modular architecture right and that's a",
    "start": "265280",
    "end": "271560"
  },
  {
    "text": "really nice segue to talk about modularity here is a kind of macro category isolation is really the",
    "start": "271560",
    "end": "277720"
  },
  {
    "text": "modularity superpower right when you hear modularity for like systems architecture think about isolations like",
    "start": "277720",
    "end": "283120"
  },
  {
    "text": "the superpower to turbocharge it now modularity is a system property reflecting the degree to which system",
    "start": "283120",
    "end": "289639"
  },
  {
    "text": "components which are usually pretty densely connected in a network can be decoupled into separate",
    "start": "289639",
    "end": "295199"
  },
  {
    "text": "clusters for a more formal definition modular in complex systems is a property that allow allows structurally or",
    "start": "295199",
    "end": "300360"
  },
  {
    "text": "functionally distinct parts to retain autonomy during a period of stress and allows for easier recovery from loss so",
    "start": "300360",
    "end": "307400"
  },
  {
    "text": "what we see in biological systems is that modularity directly enhances evolvability because modularity keeps",
    "start": "307400",
    "end": "313240"
  },
  {
    "text": "systems adaptable like again the world is constantly changing around us right so having decoupled components that can",
    "start": "313240",
    "end": "319080"
  },
  {
    "text": "change independently keeps the system flexible enough to keep up with an Ever Changing",
    "start": "319080",
    "end": "325319"
  },
  {
    "text": "environment unless components can fail independently you don't really have modularity in the resilient sense you",
    "start": "325319",
    "end": "331840"
  },
  {
    "text": "maybe could have it in like an organizational sense where you can like split up how you organize the system and build it but with respect to failures",
    "start": "331840",
    "end": "338759"
  },
  {
    "text": "and tolerating those failures you don't really have modularity unless you're designing for it and software modularity",
    "start": "338759",
    "end": "344479"
  },
  {
    "text": "doesn't emerge naturally like it does in biological evolution right this is why we often see those like all Hands-On",
    "start": "344479",
    "end": "351280"
  },
  {
    "text": "deck kind of incidents that affect the whole company right because we don't have this modularity so modularity it enables iter",
    "start": "351280",
    "end": "358919"
  },
  {
    "text": "Edge evolution which again us the ability to make like small quick changes just like we want to do in like devops and agile World rather than investing in",
    "start": "358919",
    "end": "365639"
  },
  {
    "text": "like a bunch of big bang changes at once right so you can think of modularity the ability for the system to almost like",
    "start": "365639",
    "end": "371240"
  },
  {
    "text": "save a bunch of its work and still change just like little by little and this is possible because",
    "start": "371240",
    "end": "377000"
  },
  {
    "text": "module modules allow for basic encapsulation and separation of concerns which is going to be really important",
    "start": "377000",
    "end": "382080"
  },
  {
    "text": "when we start talking about the component model we can change one module without changing all of the others and",
    "start": "382080",
    "end": "388120"
  },
  {
    "text": "this also creates a local bound upon which we can introduce isolation and this allows us to break",
    "start": "388120",
    "end": "394120"
  },
  {
    "text": "things down into smaller components which means when done right modularity minimizes incident impact because it",
    "start": "394120",
    "end": "400080"
  },
  {
    "text": "keeps everything separate right if your system's architecture isn't modular failures and small components can",
    "start": "400080",
    "end": "405840"
  },
  {
    "text": "snowball or Avalanche into very large impacts and lead to those cascading failures how many of you have heard uh",
    "start": "405840",
    "end": "413520"
  },
  {
    "text": "the asops Fable maybe for when you were a kid of the Oak and the reads anyone",
    "start": "413520",
    "end": "420560"
  },
  {
    "text": "you Thank You Tristan you have so in it uh the oak is actually kind of mean the",
    "start": "420560",
    "end": "425919"
  },
  {
    "text": "oak mocks the reads because you know they don't stay Mighty and upright right they don't resist the wind like the oak",
    "start": "425919",
    "end": "432080"
  },
  {
    "text": "does the oak thinks they're like a big deal the reads reply though the winds do not harm us we bow before them and so we",
    "start": "432080",
    "end": "438639"
  },
  {
    "text": "do not break but you and your pride and your strength have so far resisted their blows but the end is coming I don't want",
    "start": "438639",
    "end": "445879"
  },
  {
    "text": "us to spoil it for you if you decide to read it but you can guess what happens the hurricane comes right like who",
    "start": "445879",
    "end": "451160"
  },
  {
    "text": "survives this is a fundamental lesson about resilience right we can't prevent",
    "start": "451160",
    "end": "456440"
  },
  {
    "text": "failure from happening we can prepare for it we can use strategies like modularity to remain adaptive to make",
    "start": "456440",
    "end": "462919"
  },
  {
    "text": "sure we can recover gracely from failure we can bend like the Reed Humanity has",
    "start": "462919",
    "end": "467960"
  },
  {
    "text": "understood this for a while in other areas of Technology like I don't know if anyone else is from New York City but I",
    "start": "467960",
    "end": "473560"
  },
  {
    "text": "worked in this huge skyscraper in midtown east and whenever there is a lot of wind like during Hurricane Sandy many",
    "start": "473560",
    "end": "480520"
  },
  {
    "text": "years ago it would just like shake like crazy it was very unsettling to be in but that's actually by Design it's",
    "start": "480520",
    "end": "486520"
  },
  {
    "text": "resilient by Design right we don't really have this in software though right when Real World",
    "start": "486520",
    "end": "492800"
  },
  {
    "text": "Systems Bend most of our software systems actually break and Software System parts are actually quite brittle",
    "start": "492800",
    "end": "498639"
  },
  {
    "text": "they can crack easily and software just isn't as forgiving to like crashes and exceptions",
    "start": "498639",
    "end": "503680"
  },
  {
    "text": "and attacks that's why isolation has been kind of the fundamental driver of",
    "start": "503680",
    "end": "509319"
  },
  {
    "text": "the major improvements to software resilience in fact I actually think isolation is a really great example of",
    "start": "509319",
    "end": "515399"
  },
  {
    "text": "just how lucky we are to work with computers right I look um I research a lot about again other complex systems",
    "start": "515399",
    "end": "522120"
  },
  {
    "text": "domains and let me tell you like we can isolate failures um to handle unexpected",
    "start": "522120",
    "end": "527560"
  },
  {
    "text": "interactions but you can't do that in most physical systems like talk to someone working in a nuclear reactor",
    "start": "527560",
    "end": "532640"
  },
  {
    "text": "like a Petr chemical plant or a mine they just can't do it but we can so I",
    "start": "532640",
    "end": "537880"
  },
  {
    "text": "think we need to leverage this blessing to its greatest effect again this is we need to give this some love right",
    "start": "537880",
    "end": "543800"
  },
  {
    "text": "because we have a unique opportunity now I also like to think true love means you know your lover",
    "start": "543800",
    "end": "549440"
  },
  {
    "text": "better than anyone else including all the wors and whatever so I say this with love that software isolation is kind of",
    "start": "549440",
    "end": "554920"
  },
  {
    "text": "the weaker but cheaper and more flexible cousin of physical isolation again I think that isolation",
    "start": "554920",
    "end": "561760"
  },
  {
    "text": "is a core kind of part of what makes computers usable our systems have really like",
    "start": "561760",
    "end": "567279"
  },
  {
    "text": "blossomed because we've used isolation like anyone remember the blue screen of death from Windows it doesn't really",
    "start": "567279",
    "end": "572800"
  },
  {
    "text": "happen as much anymore I see some dods right uh that was like win32 programs like stomping all over the kernel like",
    "start": "572800",
    "end": "579600"
  },
  {
    "text": "we don't tolerate programs that behave like this right especially if they're in production so we're especially today",
    "start": "579600",
    "end": "585000"
  },
  {
    "text": "like in production we have such complicated software systems right we need confidence that failures won't",
    "start": "585000",
    "end": "590079"
  },
  {
    "text": "Cascade especially in like a multi-tenant environment whether that's due to like malicious tenants or just like the normal crash of",
    "start": "590079",
    "end": "597320"
  },
  {
    "text": "computers so isolation allows us to wrap specific software components in a membrane right it's a form of almost",
    "start": "597320",
    "end": "603240"
  },
  {
    "text": "like decentralized response to failures because resilience is then spread across the population just like each cell has a",
    "start": "603240",
    "end": "609440"
  },
  {
    "text": "membrane Ur that when something goes wrong in one component its effects don't like leak out to the other",
    "start": "609440",
    "end": "615760"
  },
  {
    "text": "components but adding in each kind of like layer or dimension of isolation is",
    "start": "615760",
    "end": "621000"
  },
  {
    "text": "a really hard fought battle most of the time some of it's actually social so like Windows 98 to Windows XP that was a",
    "start": "621000",
    "end": "626399"
  },
  {
    "text": "great upheaval in software for sure multiuser was a great upheaval sight isolation another great upheaval collo",
    "start": "626399",
    "end": "632880"
  },
  {
    "text": "to Cloud another great upheaval with each way we got more effective isolation through greater flexibility and ease of",
    "start": "632880",
    "end": "639240"
  },
  {
    "text": "use and each W made software more reliable and expanded its",
    "start": "639240",
    "end": "644279"
  },
  {
    "text": "capabilities so process isolation is one example like the invention of processes they're great well depends if you think",
    "start": "644279",
    "end": "650920"
  },
  {
    "text": "computers are a mistake but mostly they're great right it lets us perform compound tasks or more than one task at a time with a computer but they came",
    "start": "650920",
    "end": "658079"
  },
  {
    "text": "with the hazard that if one process failed then it could disrupt the others or corrupt the others process isolation",
    "start": "658079",
    "end": "663920"
  },
  {
    "text": "fixed that right Computing is much more resilient to Broken programs as a result like if your Excel crashes it doesn't",
    "start": "663920",
    "end": "670320"
  },
  {
    "text": "mean that word crashes either but process isolation does incur costs which we're going to talk about especially",
    "start": "670320",
    "end": "676000"
  },
  {
    "text": "overhead when processes have to talk to each other over a network right like RPC then there's user isolation so that",
    "start": "676000",
    "end": "683399"
  },
  {
    "text": "meant multiple people could share a computer in a way that was safer right um like in case the other person like",
    "start": "683399",
    "end": "688480"
  },
  {
    "text": "deleted their files that was the case where we had multi-user permissionless systems but now we kind of take user",
    "start": "688480",
    "end": "694760"
  },
  {
    "text": "isolation for granted right we just assume it's there by default we can create even now like specific Cloud",
    "start": "694760",
    "end": "699880"
  },
  {
    "text": "accounts for a specific resource with fine green permissions that allow even more granular",
    "start": "699880",
    "end": "705000"
  },
  {
    "text": "isolation app inside isolation that's what allows us to like do online banking or shopping or like messaging our",
    "start": "705000",
    "end": "710959"
  },
  {
    "text": "Doctors Without Fear that our details are going to be leaked or stolen or like in my case like we don't worry that like",
    "start": "710959",
    "end": "716880"
  },
  {
    "text": "the app we use to devour you know video of like adorable baby snow leopards like if that crashes it's not going to cause",
    "start": "716880",
    "end": "723000"
  },
  {
    "text": "the rest of the phone to crash or other apps to crash and like virtual machines networks and cloud computing enabled all",
    "start": "723000",
    "end": "728320"
  },
  {
    "text": "of those services to move online cheaply obviously with the confidence that data won't be intercepted relatedly Network as",
    "start": "728320",
    "end": "735120"
  },
  {
    "text": "isolation enabl a lot of this right so we develop lands we develop Bridges to segment those lands in like the late",
    "start": "735120",
    "end": "741600"
  },
  {
    "text": "1980s with hdp we started to separate things between client and server we started segmenting traffic between",
    "start": "741600",
    "end": "748240"
  },
  {
    "text": "different subnets with routers then by the early 1990s we started implementing VLS right for logical separation not",
    "start": "748240",
    "end": "754519"
  },
  {
    "text": "just physical now we have different availability zones logical isolation with things like",
    "start": "754519",
    "end": "760120"
  },
  {
    "text": "bpcs some of you maybe hear work for the browsers so a lot of the biggest",
    "start": "760120",
    "end": "765240"
  },
  {
    "text": "Innovation I think we've seen in isolation is because of the browser vendors they kind of understand in a lot of ways they the new OS for users um and",
    "start": "765240",
    "end": "772920"
  },
  {
    "text": "this overlaps a lot with like site isolation and process isolation where browsers ensure that each site you load",
    "start": "772920",
    "end": "778360"
  },
  {
    "text": "is isol ated at the process level one that may surprise you is I actually kind of think cryptography is a",
    "start": "778360",
    "end": "784760"
  },
  {
    "text": "form of software isolation because it uh if we think about like encrypted connections it's a virtual isolated",
    "start": "784760",
    "end": "790600"
  },
  {
    "text": "Tunnel right it's kind of separating you from the untrusted physical outside world and it's the same thing with like",
    "start": "790600",
    "end": "796720"
  },
  {
    "text": "an encrypted disk right you're separating the data from its untrusted external",
    "start": "796720",
    "end": "802040"
  },
  {
    "text": "environment all of this supports modularity right supports the independent failure of multiple parts",
    "start": "802040",
    "end": "808320"
  },
  {
    "text": "and various parts now nature discovered that this isolation is a critical part of the survival like guess like thrival",
    "start": "808320",
    "end": "815160"
  },
  {
    "text": "of complex life forms we've kind of like painstakingly discovered this over the past few decades for our complex",
    "start": "815160",
    "end": "820800"
  },
  {
    "text": "software systems so I think we should embrace even more isolation and deepen our innovation in",
    "start": "820800",
    "end": "826959"
  },
  {
    "text": "it so how do we deepen this love affair right I believe wasm and especially the component model is the next big step in",
    "start": "826959",
    "end": "834959"
  },
  {
    "text": "this love affair with isolation so wasum I think is kind of",
    "start": "834959",
    "end": "840320"
  },
  {
    "text": "the latest a long history of technologies that are trying to provide like the same isolation uh that we have",
    "start": "840320",
    "end": "845519"
  },
  {
    "text": "today with lower costs and more convenience as I mentioned again like isolation is often pretty expensive to",
    "start": "845519",
    "end": "851560"
  },
  {
    "text": "implement especially in terms of program overhead developers you know as I like to say they have hot girl to do so",
    "start": "851560",
    "end": "857320"
  },
  {
    "text": "they try to like avoid adding isolation um or they find it inconvenient to added",
    "start": "857320",
    "end": "863000"
  },
  {
    "text": "into their systems so let's start with WM offers today it's probably refresher for most",
    "start": "863000",
    "end": "868839"
  },
  {
    "text": "of you the existing isolation model WM lets you build uh services and programs that are completely isolated from the",
    "start": "868839",
    "end": "875000"
  },
  {
    "text": "underlying system right the Waz on Sandbox means that programs don't have access to the host environment nor the",
    "start": "875000",
    "end": "880320"
  },
  {
    "text": "underlying resources so we can see how it looks here right the classic Model involves",
    "start": "880320",
    "end": "887120"
  },
  {
    "text": "see here like one linear memory per workload um and it protects the runtime the host runtime from like out of",
    "start": "887120",
    "end": "892959"
  },
  {
    "text": "balance memory access and other attempts to like escape the sandbox wasm also offers the capabilities safe model uh",
    "start": "892959",
    "end": "899800"
  },
  {
    "text": "which means all interactions with the host time uh host runtime are explicitly granted by the program developer so the",
    "start": "899800",
    "end": "906279"
  },
  {
    "text": "developer actually has to explicitly Define or Grant any functionality resources the program needs and it does",
    "start": "906279",
    "end": "912399"
  },
  {
    "text": "all of this with very little overhead so asm's existing isolation model big Improvement um in the general",
    "start": "912399",
    "end": "920320"
  },
  {
    "text": "context of like the software ecosystem safety guarantees today are to protect the host not to protect the",
    "start": "920320",
    "end": "926639"
  },
  {
    "text": "guests it still means libraries and other components of the program present hazards like if they get wonky or you",
    "start": "926639",
    "end": "933279"
  },
  {
    "text": "know they get attacked it affects everything within the sandbox still and if we think of a workload as kind of",
    "start": "933279",
    "end": "939040"
  },
  {
    "text": "like a workflow a sequence of steps with different components the individual components within that workflow can",
    "start": "939040",
    "end": "945079"
  },
  {
    "text": "still mess with each other even if they can't mess up the underlying host and also the sandboxing today isn't the",
    "start": "945079",
    "end": "951120"
  },
  {
    "text": "easiest to set up but I'll get back to DX later so this means we can do a lot more",
    "start": "951120",
    "end": "956759"
  },
  {
    "text": "to solve for like the strong isol by default world the bite code Alliance",
    "start": "956759",
    "end": "961800"
  },
  {
    "text": "healthfully already has an answer to this which is the component model so wasm is building a future where you",
    "start": "961800",
    "end": "967040"
  },
  {
    "text": "don't have to compromise on isolation whether in terms of effort or overhead you'll just get it by default as a",
    "start": "967040",
    "end": "972959"
  },
  {
    "text": "developer and that's really powerful because again developers want isolation to kind of be a concern that's",
    "start": "972959",
    "end": "978399"
  },
  {
    "text": "handled by like a layer underneath where they're working similar to like observability or log collection right",
    "start": "978399",
    "end": "984480"
  },
  {
    "text": "but to date no one's been able to make isolation like invisible to Developers um as much as like loging or",
    "start": "984480",
    "end": "990240"
  },
  {
    "text": "observability is but I think with the WM component model maybe we can actually get",
    "start": "990240",
    "end": "995800"
  },
  {
    "text": "there okay so what is the component model I think there's a talk earlier about this um but how does it",
    "start": "995800",
    "end": "1000880"
  },
  {
    "text": "specifically improve upon wm's existing isolation model so the component model adds the same safety benefits we talked",
    "start": "1000880",
    "end": "1007440"
  },
  {
    "text": "about but between components instead so components only interact with each other in ways they explicitly Grant the",
    "start": "1007440",
    "end": "1014319"
  },
  {
    "text": "component model therefore not only isolates programs from the underlying host it also isolates libraries uh",
    "start": "1014319",
    "end": "1020560"
  },
  {
    "text": "within the program from each other so the component model isolates individual components within that like workload is",
    "start": "1020560",
    "end": "1027240"
  },
  {
    "text": "workflow by providing a separate memory for each component so remember one of the",
    "start": "1027240",
    "end": "1033798"
  },
  {
    "text": "downsides for existing process isolation is the overhead so having to communicate over a network in terms of overhead um",
    "start": "1033799",
    "end": "1040079"
  },
  {
    "text": "is really expensive like it's slow basically communicating with function calls is much faster and also thriftier",
    "start": "1040079",
    "end": "1046558"
  },
  {
    "text": "so the component model really allows engineers to like decompose their app into a modular architecture wrap the",
    "start": "1046559",
    "end": "1052200"
  },
  {
    "text": "resulting components in a lightweight sandbox to achieve looser coupling with importantly near native",
    "start": "1052200",
    "end": "1058760"
  },
  {
    "text": "speeds we can see how this looks here on the right side um any corruption like",
    "start": "1058760",
    "end": "1064480"
  },
  {
    "text": "the zipper image magic components can't Cascade to the rest of this app so they've got this nice little ramp right",
    "start": "1064480",
    "end": "1071200"
  },
  {
    "text": "there like image magic is actually a really great example like smelly C code",
    "start": "1071200",
    "end": "1076280"
  },
  {
    "text": "that's really difficult to extract or replace uh so this is a big deal right their memory isn't shared and sharing only",
    "start": "1076280",
    "end": "1083280"
  },
  {
    "text": "happens at the boundaries of each component and these boundaries enforce what's called a shared nothing model so",
    "start": "1083280",
    "end": "1089919"
  },
  {
    "text": "each component instance has its own linear memories tables and globals and it doesn't share it with any other",
    "start": "1089919",
    "end": "1095000"
  },
  {
    "text": "components right so components expose an external API which is the only way that components can interact with each other",
    "start": "1095000",
    "end": "1101840"
  },
  {
    "text": "so it does allows access to like any particular components memory and tables again this is huge so all in all uh the",
    "start": "1101840",
    "end": "1108720"
  },
  {
    "text": "web assembly component model gives us the ability to like Stitch isolated units together in a really transparent",
    "start": "1108720",
    "end": "1114760"
  },
  {
    "text": "and performant way this is why my colleague uh fley Luke Wagner refers to the WM component",
    "start": "1114760",
    "end": "1121440"
  },
  {
    "text": "model as modularity without the microsurfaces and I agree like you gain loose coupling right",
    "start": "1121440",
    "end": "1128600"
  },
  {
    "text": "both in terms of memory isolation and even language Choice uh that microservices offers you get all of",
    "start": "1128600",
    "end": "1134080"
  },
  {
    "text": "those benefits but you also maintain the efficiency of modular monoliths in terms of cross module calls and also with much",
    "start": "1134080",
    "end": "1141200"
  },
  {
    "text": "lower memory overhead relative to Containers so we aren't forced to deal with like the bulk and overhead like",
    "start": "1141200",
    "end": "1148200"
  },
  {
    "text": "awkwardness of network rpcs just to gain isolation we gain isolation through like a simple ffi call which is facilitated",
    "start": "1148200",
    "end": "1155720"
  },
  {
    "text": "by binding generation how many of you know what binding generation is okay quite a few of you but for those",
    "start": "1155720",
    "end": "1162480"
  },
  {
    "text": "who aren't aware um so binding generation is basically like automatically generated code that translates between the structure of one",
    "start": "1162480",
    "end": "1169440"
  },
  {
    "text": "language to another to allow programs to interact with things in a different language and it's that binding that",
    "start": "1169440",
    "end": "1175240"
  },
  {
    "text": "automatic binding generation that creates another kind of like juicy carrot fre developers to adopt the component model which is the ability to",
    "start": "1175240",
    "end": "1182240"
  },
  {
    "text": "use libraries from other ecosystems means we can realize the ambitious vision of polyon applications without it",
    "start": "1182240",
    "end": "1187919"
  },
  {
    "text": "being like a total mess the composability and performance benefits that we just talked about mean",
    "start": "1187919",
    "end": "1193520"
  },
  {
    "text": "that WM like let's be real like kind of right now it's a bunch of us weirdos who are like really into WM um really into",
    "start": "1193520",
    "end": "1200159"
  },
  {
    "text": "like security or isolation or jamming like C into the browsers but this could mean that WM",
    "start": "1200159",
    "end": "1206400"
  },
  {
    "text": "through the component model actually becomes the more productive and safe way to build and assemble",
    "start": "1206400",
    "end": "1212679"
  },
  {
    "text": "programs the component model again means we work with portable lightweight and composable modules that connect to each",
    "start": "1212679",
    "end": "1217760"
  },
  {
    "text": "other in a standard way that's already awesome for performance developer velocity but those same characteristics",
    "start": "1217760",
    "end": "1224360"
  },
  {
    "text": "actually enable some of the most powerful and also frankly like coolest security outcomes that I've seen across",
    "start": "1224360",
    "end": "1230440"
  },
  {
    "text": "my whole career and I started out in cyber security I think it actually gets us to that nested isolation that we see in",
    "start": "1230440",
    "end": "1237400"
  },
  {
    "text": "nature get really powerful being able to split components arbitrarily and recursively to like a near infinite",
    "start": "1237400",
    "end": "1244600"
  },
  {
    "text": "depth it's honestly like to me it's mind-blowing right like we can ID full uh systems with our own complex and",
    "start": "1244600",
    "end": "1250960"
  },
  {
    "text": "isolated sandboxes inside a wasm program and then embed that in another sandbox if we wanted to that's not something we",
    "start": "1250960",
    "end": "1258240"
  },
  {
    "text": "can do with Technologies today right like kubernetes can be great um we can't just embed like a complete kubernetes",
    "start": "1258240",
    "end": "1265120"
  },
  {
    "text": "cluster containing some system we want to instantiate and communicate with right but the component model grants us",
    "start": "1265120",
    "end": "1271320"
  },
  {
    "text": "this ability which is a game changer the component model also enables",
    "start": "1271320",
    "end": "1276520"
  },
  {
    "text": "WM run times to implement stronger temporal isolation not just spatial or logical right so again existing WM model",
    "start": "1276520",
    "end": "1283919"
  },
  {
    "text": "um it's already enables a strong degree of ephemerality so that's the ability to live the lifespan of a workload and like",
    "start": "1283919",
    "end": "1290039"
  },
  {
    "text": "a kill and restart model or I think what WM time calls disposable instances so in this model we can",
    "start": "1290039",
    "end": "1297279"
  },
  {
    "text": "actually instantiate a new WM instance per task like a request in fast Le compute platform then we can nuke it",
    "start": "1297279",
    "end": "1303080"
  },
  {
    "text": "once the task is finished which gives us intertask isolation but the component model",
    "start": "1303080",
    "end": "1308159"
  },
  {
    "text": "empowers this INF ferality even more so you were building an underlying host to",
    "start": "1308159",
    "end": "1313240"
  },
  {
    "text": "runtime you can create component instances on demand destroying them once they complete their task like after",
    "start": "1313240",
    "end": "1318960"
  },
  {
    "text": "request response pair or connection session batch job or like a transaction right and since each component then is",
    "start": "1318960",
    "end": "1325760"
  },
  {
    "text": "closer to like a single purpose sort of function it makes it much easier to bind its lifespan to specific functionality",
    "start": "1325760",
    "end": "1332480"
  },
  {
    "text": "again this is great for both reliability and certainly security so it's hard to State how",
    "start": "1332480",
    "end": "1338679"
  },
  {
    "text": "transformative this is for cyber security so I want to dig into it a little bit from a cyber security perspective all of this is huge in like",
    "start": "1338679",
    "end": "1345120"
  },
  {
    "text": "solving the supply chain security problem which is the new like Boogie person for the cyber security Community",
    "start": "1345120",
    "end": "1351640"
  },
  {
    "text": "it's that concern that malice somewhere in our software supply chain or our dependency tree will allow attackers to",
    "start": "1351640",
    "end": "1356960"
  },
  {
    "text": "breach or disrupt their systems developers write their apps dependencies as separate components",
    "start": "1356960",
    "end": "1362320"
  },
  {
    "text": "which run as separate instances they can now isolate failures between them right so whether an attacker targets like a",
    "start": "1362320",
    "end": "1368559"
  },
  {
    "text": "vulnerable dependency with an exploit or tampers the dependency code like way Upstream we now have protection against",
    "start": "1368559",
    "end": "1375159"
  },
  {
    "text": "their compromise attempts so they'll the attacker will succeed in compromising the dependency's",
    "start": "1375159",
    "end": "1380480"
  },
  {
    "text": "instant state but now they have to do much more additional work a Sandbox Escape which is really hard to access",
    "start": "1380480",
    "end": "1386200"
  },
  {
    "text": "anything else in the instance and a ferality means they may need to re exploit the component over and over and",
    "start": "1386200",
    "end": "1391840"
  },
  {
    "text": "over to do whatever they want to do which makes their work even harder the wasm component model layers",
    "start": "1391840",
    "end": "1398320"
  },
  {
    "text": "in the existing capability safe model into this Paradigm right so developer can Define the specific capabilities",
    "start": "1398320",
    "end": "1404640"
  },
  {
    "text": "each dependency as component requires and reduces the proverbial attack surface like the opportunities that are",
    "start": "1404640",
    "end": "1411440"
  },
  {
    "text": "present for attackers that further restricts what the attacker can do even if they gain access to a component",
    "start": "1411440",
    "end": "1417640"
  },
  {
    "text": "that's very in line with a principle of lease privilege these uh properties obviously",
    "start": "1417640",
    "end": "1423000"
  },
  {
    "text": "benefit resilience Beyond cyber attacks as well so if a dependency experiences like performance failure the app can",
    "start": "1423000",
    "end": "1429200"
  },
  {
    "text": "still stay up and the component can be killed and restarted if it's wonky right and restricting capabilities per",
    "start": "1429200",
    "end": "1435640"
  },
  {
    "text": "dependency means there are fewer surprises than just unintended behaviors that can ruin our day in production",
    "start": "1435640",
    "end": "1441840"
  },
  {
    "text": "too and this extends beneath the app itself so the component runtime implements host functionalities Ain",
    "start": "1441840",
    "end": "1448240"
  },
  {
    "text": "components it's beautiful fested isolation kind of like isolation all the way down instead of turtles all the way",
    "start": "1448240",
    "end": "1453559"
  },
  {
    "text": "down and it further reduces performance and security hazards which I kind of think is closer to zero trust than a lot",
    "start": "1453559",
    "end": "1458919"
  },
  {
    "text": "of the like cyber security tools that tout them is zero trust today from the perspective of a resilient runtime",
    "start": "1458919",
    "end": "1464840"
  },
  {
    "text": "provider kind of like fastly it means we can densely pack Services together right even adversarial ones and we can do that",
    "start": "1464840",
    "end": "1470960"
  },
  {
    "text": "in a safer way and platform providers could leverage the comone model to do what I call the airlock approach my new",
    "start": "1470960",
    "end": "1477279"
  },
  {
    "text": "book like you can ye components out the airlock on behalf of developers when something goes wrong that way again",
    "start": "1477279",
    "end": "1482720"
  },
  {
    "text": "failure wi component doesn't degrade the rest of the system platforms could also offer full",
    "start": "1482720",
    "end": "1488080"
  },
  {
    "text": "observability between cross component messages or they could migrate components around and scale them independently in response to aand too so",
    "start": "1488080",
    "end": "1495399"
  },
  {
    "text": "I kind of think it's like the app platform of our hopes and dreams dreams related to that it's actually um I think",
    "start": "1495399",
    "end": "1501440"
  },
  {
    "text": "it gets us closer to the ancient dream of software integrated circuits or six um it's in a safer way than I think even",
    "start": "1501440",
    "end": "1507679"
  },
  {
    "text": "its progenitors could have ever imagined which I think would be like pretty sick haha here all night um so Brad Cox who",
    "start": "1507679",
    "end": "1514600"
  },
  {
    "text": "invented Objective C believed reusable components would actually revolutionize the software industry just very much in",
    "start": "1514600",
    "end": "1521039"
  },
  {
    "text": "the same way that like interchangeable parts created the Industrial Revolution right this Vision wasn't fully realized",
    "start": "1521039",
    "end": "1527039"
  },
  {
    "text": "before Cox's death but I I believe that the WM component model can get us there",
    "start": "1527039",
    "end": "1533159"
  },
  {
    "text": "it means that we can sustain resilience by Design which is what we want we don't want developers to have to think about",
    "start": "1533159",
    "end": "1538399"
  },
  {
    "text": "it we can do that through modularity and isolation we can also enable like a really powerful new paradigm for how we",
    "start": "1538399",
    "end": "1545120"
  },
  {
    "text": "build software at the same time but to realize this opportunity for the to be the future of software",
    "start": "1545120",
    "end": "1551200"
  },
  {
    "text": "development like we have to have developers use it right to be honest the dev experience right now with WM is not",
    "start": "1551200",
    "end": "1556799"
  },
  {
    "text": "the greatest it needs to to get better like developers I like to include myself among them we kind of coddled get easily",
    "start": "1556799",
    "end": "1563200"
  },
  {
    "text": "distracted by like new shinies whatever is on Hacker News so it means as a call to action like we have to treat DX as a",
    "start": "1563200",
    "end": "1569640"
  },
  {
    "text": "core problem just as much as we treat like security or resilience um we have to be solving for DX if we want this to",
    "start": "1569640",
    "end": "1577080"
  },
  {
    "text": "succeed okay so now we can write off into the sunset with isolation as our dear lover that's my mic I",
    "start": "1577080",
    "end": "1584000"
  },
  {
    "text": "apologize so isolation it's the key to Modern Life it's the key to life itself",
    "start": "1584000",
    "end": "1589720"
  },
  {
    "text": "it's the ability for an entity to provide that kind of like partially separated barrier like to partially",
    "start": "1589720",
    "end": "1595640"
  },
  {
    "text": "separate itself from this external environment and that's a core neighbor of resilience it's what allows life to",
    "start": "1595640",
    "end": "1601640"
  },
  {
    "text": "evolve our thinking machines really wouldn't be so useful if we didn't have isolation whether that's process",
    "start": "1601640",
    "end": "1606919"
  },
  {
    "text": "isolation user and network isolation or even cryptography isolation is how we ensure our complex software systems Thrive like",
    "start": "1606919",
    "end": "1614000"
  },
  {
    "text": "to ensure that things can fail independently and every every new dimension of isolation in soptware as I",
    "start": "1614000",
    "end": "1619760"
  },
  {
    "text": "mentioned is an upheaval and I think the WM component model is this next upheaval it's the next big again milestone in",
    "start": "1619760",
    "end": "1625880"
  },
  {
    "text": "this love affair with isolation it gets us closer than ever to the nested isolation that's so powerful in nature",
    "start": "1625880",
    "end": "1632840"
  },
  {
    "text": "we can realize resilience and security by Design in a way that's invisible to developers I'm really excited I think",
    "start": "1632840",
    "end": "1639080"
  },
  {
    "text": "all of you here hopefully were part of this like great Revolution that's happening and I also feel honored to be a part of it in my very small way so",
    "start": "1639080",
    "end": "1646679"
  },
  {
    "text": "with that thank you very much if you enjoyed this you might enjoy my new book it's all about like has stuff on",
    "start": "1646679",
    "end": "1651960"
  },
  {
    "text": "modularity isolation how to do resilience by design that thank you so much for your time and",
    "start": "1651960",
    "end": "1658870"
  },
  {
    "text": "[Applause]",
    "start": "1658870",
    "end": "1664470"
  },
  {
    "text": "attention Kelly what an amazing talk might have time for one or two quick",
    "start": "1665360",
    "end": "1671559"
  },
  {
    "text": "questions oh hey right behind me hey um me personally this was a very beautiful",
    "start": "1671960",
    "end": "1678840"
  },
  {
    "text": "presentation um I had a question but I'll ask it at a personal time cuz it's like a lot it's a lot but I just wanted",
    "start": "1678840",
    "end": "1685360"
  },
  {
    "text": "to state that you had a wonderful presentation and I loved it thank you thank you I also have um I'm guessing",
    "start": "1685360",
    "end": "1691880"
  },
  {
    "text": "none of you have read my book yet but I have chaos Kitty stickers it's like the mascot for security chaos engineering so",
    "start": "1691880",
    "end": "1697399"
  },
  {
    "text": "if you find me you can get stickers too or ask your question hello uh thank you for the talk really cool stuff I'm",
    "start": "1697399",
    "end": "1704679"
  },
  {
    "text": "interested in the taking the idea of es bomb to like the next level and the idea of the strong typed interactions seems",
    "start": "1704679",
    "end": "1713039"
  },
  {
    "text": "like we are pretty close to having WM apps um generate all of the",
    "start": "1713039",
    "end": "1720159"
  },
  {
    "text": "sort of allowed ways like of interaction that can be thrown into a manifest and then",
    "start": "1720159",
    "end": "1726640"
  },
  {
    "text": "evaluated what do you know of anything in this area that's already happening or",
    "start": "1726640",
    "end": "1731679"
  },
  {
    "text": "what's am I allowed to curse ass boms",
    "start": "1731679",
    "end": "1738120"
  },
  {
    "text": "uh they're I think they're pretty useless they're just like what tens of thousands of lines like Json blobs and",
    "start": "1738120",
    "end": "1744320"
  },
  {
    "text": "like what do you do with them it's like cool like how do we know if this is actionable how do we know if they C AG SP it my thing is like with isolation",
    "start": "1744320",
    "end": "1750960"
  },
  {
    "text": "you don't really have to worry about it cuz like the impact is contained so I kind of view it as like es bombs are trying to solve a problem in a very",
    "start": "1750960",
    "end": "1759519"
  },
  {
    "text": "Consulting way uh so my view yes I I agree weely",
    "start": "1759519",
    "end": "1765039"
  },
  {
    "text": "with the component model yes you're getting into again like almost like a loud listing the very specific things",
    "start": "1765039",
    "end": "1770200"
  },
  {
    "text": "that each individual program can do but at that point why do you need all of the Json blogs to know what's in the stuff",
    "start": "1770200",
    "end": "1776000"
  },
  {
    "text": "right um I think there's a world in which you can gain again like observability and visibility into the stuff but to me this is a much more kind",
    "start": "1776000",
    "end": "1783480"
  },
  {
    "text": "of an actionable thing when you have that isolation kind of inra it's the answer to like okay so what do we do now",
    "start": "1783480",
    "end": "1789240"
  },
  {
    "text": "with these Jon BLS it's like well we're already done thing so to me it's almost like solving the problem that es bombs",
    "start": "1789240",
    "end": "1794720"
  },
  {
    "text": "is trying to get to but before as boms or at least once the Cal that's my spicy",
    "start": "1794720",
    "end": "1800640"
  },
  {
    "text": "take so Kelly on your spicy take would it be fair to say that the biggest difference between web assembly and",
    "start": "1800640",
    "end": "1807640"
  },
  {
    "text": "containers is is that containers satisfy their es bombs at compile time whereas",
    "start": "1807640",
    "end": "1813000"
  },
  {
    "text": "web assembly gives us the opportunity to satisfy it at runtime we always get the latest version yeah I think that's fair",
    "start": "1813000",
    "end": "1818840"
  },
  {
    "text": "yeah I hadn't thought of it that way but I think that's yeah that's a fair comparison to make and I think that's what we want right because it's runtime",
    "start": "1818840",
    "end": "1826039"
  },
  {
    "text": "is what makes us money and it's also with attackers is point so yeah all right phenomenal talk we're on a break",
    "start": "1826039",
    "end": "1831200"
  },
  {
    "text": "folks please join me in thanking [Applause]",
    "start": "1831200",
    "end": "1836279"
  },
  {
    "text": "Kelly",
    "start": "1836279",
    "end": "1839279"
  }
]