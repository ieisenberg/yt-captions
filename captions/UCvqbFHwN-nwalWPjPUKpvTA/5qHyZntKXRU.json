[
  {
    "text": "thank you thank you can can everybody hear me is this is",
    "start": "0",
    "end": "6779"
  },
  {
    "text": "this uh working okay great um yeah sort of a technical Deep dive I guess I'm not gonna I'm not gonna throw",
    "start": "6779",
    "end": "13380"
  },
  {
    "text": "throw a whole lot of code at you or anything um I'll try to go into some details",
    "start": "13380",
    "end": "19560"
  },
  {
    "text": "um so yeah my name is Damon Caswell um I'm one of the lead Developers for",
    "start": "19560",
    "end": "24660"
  },
  {
    "text": "hp's internal uh developer portal um senior lead engineer",
    "start": "24660",
    "end": "30240"
  },
  {
    "text": "um and I think I'd like to start by talking about a number",
    "start": "30240",
    "end": "36660"
  },
  {
    "text": "so why am i showing you this that is a rough estimate of how many",
    "start": "36660",
    "end": "43140"
  },
  {
    "text": "objects HP has to ingest for now",
    "start": "43140",
    "end": "48800"
  },
  {
    "text": "from one location one provider",
    "start": "48840",
    "end": "54120"
  },
  {
    "text": "um like y'all to take a moment to think about how in your environments you would go about trying to ingest",
    "start": "54120",
    "end": "62280"
  },
  {
    "text": "fifty thousand seventy five thousand hundred thousand two hundred thousand or more entities from a single source",
    "start": "62280",
    "end": "70860"
  },
  {
    "text": "of assets something something that where you read it once and you dump it into the catalog how",
    "start": "70860",
    "end": "77340"
  },
  {
    "text": "would you do that trying to think about how you might might accomplish that um",
    "start": "77340",
    "end": "83100"
  },
  {
    "text": "in a sort of large multi-faceted company where you don't necessarily have any",
    "start": "83100",
    "end": "89100"
  },
  {
    "text": "direct control over the data sources that you need to make searchable that you need to need to ingest into the",
    "start": "89100",
    "end": "94680"
  },
  {
    "text": "catalog um yeah if you're picturing a world where all of your data Partners give you",
    "start": "94680",
    "end": "101759"
  },
  {
    "text": "a yaml catalog info file that they keep updated for you yeah the science fiction fantasy",
    "start": "101759",
    "end": "108720"
  },
  {
    "text": "conventions down the street so backstage is at the core of our",
    "start": "108720",
    "end": "115439"
  },
  {
    "text": "developer portal which we're using for it primarily for its catalog and relationship capabilities",
    "start": "115439",
    "end": "122579"
  },
  {
    "text": "our stack includes a lot of Technology some of which you've seen today",
    "start": "122579",
    "end": "128039"
  },
  {
    "text": "um that uh you you're all very likely familiar with um and a bunch of AWS Services as well",
    "start": "128039",
    "end": "134760"
  },
  {
    "text": "which you're probably familiar with you know elasticsearch RDS lambda's Docker et cetera et cetera so",
    "start": "134760",
    "end": "140400"
  },
  {
    "text": "there's there's a lot of things that go into a typical backstage deployment and we're no different from",
    "start": "140400",
    "end": "147480"
  },
  {
    "text": "you know any anyone else on that um now some of you are probably thinking",
    "start": "147480",
    "end": "153959"
  },
  {
    "text": "HP the printer company",
    "start": "153959",
    "end": "159319"
  },
  {
    "text": "some of you are probably even thinking this",
    "start": "159840",
    "end": "164000"
  },
  {
    "text": "yeah we still get a lot of jokes about that but yes HP makes software",
    "start": "165900",
    "end": "176220"
  },
  {
    "text": "we actually make a lot of software",
    "start": "176220",
    "end": "183060"
  },
  {
    "text": "we've got everything from you know printer driver ooh",
    "start": "183060",
    "end": "188580"
  },
  {
    "text": "what happened there we've got printer drivers we've got firmware we've got machine learning",
    "start": "188580",
    "end": "196379"
  },
  {
    "text": "we've got artificial intelligence we've got obviously software for people's",
    "start": "196379",
    "end": "201480"
  },
  {
    "text": "computers you know we sell a lot of computer hardware",
    "start": "201480",
    "end": "207060"
  },
  {
    "text": "um we've got all these all these different things we got web apps we've got mobile applications everything",
    "start": "207060",
    "end": "213239"
  },
  {
    "text": "everything that you can imagine that a modern tech company has just because HP is old it doesn't mean we don't have them",
    "start": "213239",
    "end": "221400"
  },
  {
    "text": "um and more got a fun one here for you this is uh one of the largest printers",
    "start": "221400",
    "end": "228360"
  },
  {
    "text": "in the world um so yes we are still a printer company this printer has a doorway",
    "start": "228360",
    "end": "235739"
  },
  {
    "text": "um I think more than one actually this has a staircase and it has over a million inkjets that",
    "start": "235739",
    "end": "243299"
  },
  {
    "text": "have to be able to operate simultaneously coordinated by some really specialized software",
    "start": "243299",
    "end": "250080"
  },
  {
    "text": "so yeah the software is a big part of even something big and Industrial like",
    "start": "250080",
    "end": "255420"
  },
  {
    "text": "that um it's also really cool to watch it in operation",
    "start": "255420",
    "end": "261180"
  },
  {
    "text": "um watching all the paperwork don't don't stand too close to it",
    "start": "261180",
    "end": "266940"
  },
  {
    "text": "it won't care if you get caught up in it so we want all of these assets just like",
    "start": "266940",
    "end": "273180"
  },
  {
    "text": "anybody else to be in our catalog but we're you know HP is Big we've got hundreds of",
    "start": "273180",
    "end": "281280"
  },
  {
    "text": "thousands of them um we're actually looking at them at Millions down the road we want to make all of those uh",
    "start": "281280",
    "end": "288540"
  },
  {
    "text": "available in our catalog and we want them and the people who created them searchable",
    "start": "288540",
    "end": "294960"
  },
  {
    "text": "which means finding a way to efficiently ingest all of these really large data sources",
    "start": "294960",
    "end": "302520"
  },
  {
    "text": "so this is the problem I'm going to I'm going to break this up into two main sections I'm going to outline the",
    "start": "302520",
    "end": "308820"
  },
  {
    "text": "problem that we're facing which is really a two-part problem and outline the",
    "start": "308820",
    "end": "314580"
  },
  {
    "text": "two-part solution that we found so ingestion is slow",
    "start": "314580",
    "end": "321300"
  },
  {
    "text": "um as our ingestion needs went up this the performance went down uh it",
    "start": "321300",
    "end": "328199"
  },
  {
    "text": "just it started uh getting longer and longer from the time an entity was ingested to",
    "start": "328199",
    "end": "336360"
  },
  {
    "text": "the time it was visible in the catalog um when we first started it was",
    "start": "336360",
    "end": "342720"
  },
  {
    "text": "um very uh it was very manageable But as time",
    "start": "342720",
    "end": "348120"
  },
  {
    "text": "progressed and we added more and more to it we just felt like it was it was",
    "start": "348120",
    "end": "353639"
  },
  {
    "text": "bogged down so",
    "start": "353639",
    "end": "357860"
  },
  {
    "text": "we were new to the platform and we as people who are new to it and",
    "start": "358680",
    "end": "364139"
  },
  {
    "text": "had never looked at it before we were following best practice guidelines that came from the community",
    "start": "364139",
    "end": "371220"
  },
  {
    "text": "um duplicating uh entity providers or actually initially just catalog",
    "start": "371220",
    "end": "377220"
  },
  {
    "text": "processors we joined up before there were entity providers",
    "start": "377220",
    "end": "382800"
  },
  {
    "text": "um we uh we followed the best practices and guidelines that are available by default in",
    "start": "382800",
    "end": "390600"
  },
  {
    "text": "backstage plugins we parsed locations and emitted them from one catalog",
    "start": "390600",
    "end": "398400"
  },
  {
    "text": "processor to and then let another one pick up each location and process the entities in that location it's a pretty",
    "start": "398400",
    "end": "405479"
  },
  {
    "text": "common design pattern probably a lot of you have actually can I see a show of hands how many of you are doing that now",
    "start": "405479",
    "end": "412220"
  },
  {
    "text": "emitting locations and then emitting entities from those locations",
    "start": "412220",
    "end": "418039"
  },
  {
    "text": "not that complex yet okay okay well that's that's where we started so so",
    "start": "419039",
    "end": "424740"
  },
  {
    "text": "what and uh it uh it actually worked really well um",
    "start": "424740",
    "end": "430380"
  },
  {
    "text": "uh until it started getting too big um",
    "start": "430380",
    "end": "435539"
  },
  {
    "text": "so problems with catalog processors they ingest whatever",
    "start": "435539",
    "end": "442020"
  },
  {
    "text": "um there's no real scheduling control you can do things like configure uh the processing I can't",
    "start": "442020",
    "end": "448500"
  },
  {
    "text": "remember the parameter name of the processing refresh rate um we ended up with locate lots of",
    "start": "448500",
    "end": "454440"
  },
  {
    "text": "locations uh even locations that didn't actually technically exist were just used to logically separate chunks of",
    "start": "454440",
    "end": "461039"
  },
  {
    "text": "data into our into our catalog um we you know entities did eventually",
    "start": "461039",
    "end": "468720"
  },
  {
    "text": "show up it it did work um but it took a long time",
    "start": "468720",
    "end": "475440"
  },
  {
    "text": "um so we concluded this sort of design pattern that's sort of out of the box design pattern was was effective if if",
    "start": "475440",
    "end": "483900"
  },
  {
    "text": "you were dealing with a small number of entities but as soon as you started to try to ramp that up we needed something",
    "start": "483900",
    "end": "490259"
  },
  {
    "text": "else and this was this was even back before uh like I said before entity providers existed when entity providers",
    "start": "490259",
    "end": "497340"
  },
  {
    "text": "came our way um the uh we jumped on those because they",
    "start": "497340",
    "end": "504060"
  },
  {
    "text": "looked like they would solve the problems but um they really didn't I mean we were",
    "start": "504060",
    "end": "509400"
  },
  {
    "text": "thrilled to have a mechanism that was specifically designed to just ingest data it's a great idea",
    "start": "509400",
    "end": "517020"
  },
  {
    "text": "um and just leave your processors in charge of all the post-processing but our design thinking hadn't really",
    "start": "517020",
    "end": "525120"
  },
  {
    "text": "adapted to it yet um and then on top of that it still brought",
    "start": "525120",
    "end": "531240"
  },
  {
    "text": "some problems um if you ingest uh locations still you're still getting",
    "start": "531240",
    "end": "537600"
  },
  {
    "text": "entities whenever the catalog processor reaches them if you want to Target a very large",
    "start": "537600",
    "end": "544560"
  },
  {
    "text": "entity provider or entity Source an asset source then it actually introduced new problems",
    "start": "544560",
    "end": "552899"
  },
  {
    "text": "um that we had that that revealed that sort of an a default entity provider",
    "start": "552899",
    "end": "560100"
  },
  {
    "text": "didn't really scale comfortably to a very large data source we still had",
    "start": "560100",
    "end": "566760"
  },
  {
    "text": "locations polluting the catalog we still had entities you know taking a long time",
    "start": "566760",
    "end": "571920"
  },
  {
    "text": "to show up sometimes even longer than before um now I want to say uh entity providers",
    "start": "571920",
    "end": "580980"
  },
  {
    "text": "did offer a lot of great things as well I mean if you",
    "start": "580980",
    "end": "587180"
  },
  {
    "text": "I did not mean to go that uh that far here yet um they they offered the mechanism the",
    "start": "587180",
    "end": "594000"
  },
  {
    "text": "first good mechanism for clearing orphans and that in and of itself is huge because data sources change assets",
    "start": "594000",
    "end": "600839"
  },
  {
    "text": "get removed assets get added um and if you don't want any old assets",
    "start": "600839",
    "end": "606600"
  },
  {
    "text": "uh lingering in your catalog especially if that asset is a user who maybe has",
    "start": "606600",
    "end": "612959"
  },
  {
    "text": "left your company you don't want them still appearing in your catalog and of course backstage allows you to ingest",
    "start": "612959",
    "end": "618899"
  },
  {
    "text": "users so this was a this this was part somewhat of a game changer for us but we",
    "start": "618899",
    "end": "625019"
  },
  {
    "text": "still had problems so again that 2000 200 000 number",
    "start": "625019",
    "end": "631380"
  },
  {
    "text": "um we we struggled with this one",
    "start": "631380",
    "end": "636480"
  },
  {
    "text": "um a full mutation with from with an entity provider with 200 000 entities",
    "start": "636480",
    "end": "645000"
  },
  {
    "text": "it's impossible you you can't do it um we ended up breaking data sources up",
    "start": "645000",
    "end": "652380"
  },
  {
    "text": "artificially you know artificial distinctions between arbitrary categories of data",
    "start": "652380",
    "end": "660440"
  },
  {
    "text": "everybody okay um in order to subdivide it into",
    "start": "661740",
    "end": "667320"
  },
  {
    "text": "ingestible chunks and create a separate entity provider for each of those chunks",
    "start": "667320",
    "end": "672839"
  },
  {
    "text": "it was sort of a desperate stopgap mechanism",
    "start": "672839",
    "end": "678060"
  },
  {
    "text": "um at best it's not really a long-term solution um for one thing",
    "start": "678060",
    "end": "683519"
  },
  {
    "text": "you're not going to necessarily again have control over all of those data",
    "start": "683519",
    "end": "689640"
  },
  {
    "text": "sources maybe whatever you're using to subdivide them is whatever arbitrary Factor you're",
    "start": "689640",
    "end": "696060"
  },
  {
    "text": "using to subdivide them will change if you have no control over that you need a",
    "start": "696060",
    "end": "701279"
  },
  {
    "text": "different way to ingest such a large set on top of that",
    "start": "701279",
    "end": "708060"
  },
  {
    "text": "we found that when we dumped a very large number of entities into the catalog all at once",
    "start": "708060",
    "end": "714120"
  },
  {
    "text": "the amount of time it took for post-processing or and pre-processing",
    "start": "714120",
    "end": "720500"
  },
  {
    "text": "skyrocketed because there was just too much all at once in the catalog and and so any one entity you know if you're the",
    "start": "720500",
    "end": "728100"
  },
  {
    "text": "entity at the back of the line you're at the back of the line",
    "start": "728100",
    "end": "732920"
  },
  {
    "text": "so kind of to summarize the issues that we saw with both sort both sort of",
    "start": "733459",
    "end": "739200"
  },
  {
    "text": "default out of the box design patterns for ingestion um",
    "start": "739200",
    "end": "744839"
  },
  {
    "text": "so night because neither really you know fit our needs we you know the catalog processor it did it did have some pros",
    "start": "744839",
    "end": "750839"
  },
  {
    "text": "as a as a uh for ingestion um you know simple to implement mature you",
    "start": "750839",
    "end": "758459"
  },
  {
    "text": "know One-Stop shop for entity ingestion which is fine but you know leaves behind",
    "start": "758459",
    "end": "763680"
  },
  {
    "text": "orphans creates long delays in entity ingestion",
    "start": "763680",
    "end": "769800"
  },
  {
    "text": "um it's really just better for side effects for for emitting relations is what we",
    "start": "769800",
    "end": "775500"
  },
  {
    "text": "found for that um and you know it wasn't everybody is used",
    "start": "775500",
    "end": "781860"
  },
  {
    "text": "to the idea that backstage is eventually in sync",
    "start": "781860",
    "end": "787620"
  },
  {
    "text": "not real time well HP kind of wanted to go real time and catalog processors",
    "start": "787620",
    "end": "795240"
  },
  {
    "text": "haven't gotten us weren't able to get us there when used for ingestion now you",
    "start": "795240",
    "end": "800880"
  },
  {
    "text": "know entity providers are objectively better they're strictly dedicated to ingestion",
    "start": "800880",
    "end": "807600"
  },
  {
    "text": "there's they don't do anything else um there's they're much more",
    "start": "807600",
    "end": "813000"
  },
  {
    "text": "configurable with scheduling um and of course there's the cleaning up of orphans that we saw but still",
    "start": "813000",
    "end": "821820"
  },
  {
    "text": "um can't admit can't admit relations from it there's only two options for ingestion",
    "start": "821820",
    "end": "828120"
  },
  {
    "text": "full and Delta and I think I included that here yeah so",
    "start": "828120",
    "end": "834120"
  },
  {
    "text": "the full mutation that's that very large data set um we ran into that JavaScript Heap out",
    "start": "834120",
    "end": "841320"
  },
  {
    "text": "of memory error has anybody else gotten that has anybody else tried to ingest a large enough data set to see that",
    "start": "841320",
    "end": "848700"
  },
  {
    "text": "no wow wow okay well you will oh I see a hand hey I said it's nice to nice to",
    "start": "848700",
    "end": "854760"
  },
  {
    "text": "know our pain is felt by somebody else out there yeah if you if you ingest a very large",
    "start": "854760",
    "end": "861060"
  },
  {
    "text": "amount of data you'll eventually run into node.js's own limits on how much",
    "start": "861060",
    "end": "867180"
  },
  {
    "text": "you can shove into an array a single into a single array because that's what",
    "start": "867180",
    "end": "872339"
  },
  {
    "text": "a full mutation does you put everything into a single array to be to be ingested",
    "start": "872339",
    "end": "879360"
  },
  {
    "text": "um and you can work around that you can do things like increase your max Heap size but you're gonna",
    "start": "879360",
    "end": "886079"
  },
  {
    "text": "run into problems there too eventually it's a that's a Band-Aid um think about",
    "start": "886079",
    "end": "892560"
  },
  {
    "text": "your asset catalogs what are they going to do they're going to grow",
    "start": "892560",
    "end": "898320"
  },
  {
    "text": "and they're going to grow and grow some more",
    "start": "898320",
    "end": "903959"
  },
  {
    "text": "and keep growing and keep growing",
    "start": "903959",
    "end": "910139"
  },
  {
    "text": "and they grow because asset sources grow you add more apis you add more data",
    "start": "910139",
    "end": "916019"
  },
  {
    "text": "assets you add new organizations new new actual sources of data so entirely new",
    "start": "916019",
    "end": "922740"
  },
  {
    "text": "entity types more Docker images you know more Harbor stuff more charts more",
    "start": "922740",
    "end": "928620"
  },
  {
    "text": "pipelines more everything everything gets everything grows",
    "start": "928620",
    "end": "934260"
  },
  {
    "text": "um here's another one I'd like to show of hands on anybody whose asset catalogs are shrinking",
    "start": "934260",
    "end": "940199"
  },
  {
    "text": "yeah yeah yeah okay yeah I thought so",
    "start": "940199",
    "end": "944660"
  },
  {
    "text": "so that's gonna cause some problems",
    "start": "945300",
    "end": "950120"
  },
  {
    "text": "you're going to run into issues where you know your backend can't handle it",
    "start": "950579",
    "end": "956660"
  },
  {
    "text": "in production yeah that's fun so yeah and by the way you can tell I'm",
    "start": "956820",
    "end": "963720"
  },
  {
    "text": "not a graphic designer that's the best uh image I could grab of a burning",
    "start": "963720",
    "end": "969420"
  },
  {
    "text": "database from the interwebs right so that's just to start with there are",
    "start": "969420",
    "end": "977220"
  },
  {
    "text": "other issues that make themselves noticeable when you try to scale up into the hundreds of thousands or Millions as",
    "start": "977220",
    "end": "984000"
  },
  {
    "text": "we plan to eventually database concurrency issues is one of",
    "start": "984000",
    "end": "989040"
  },
  {
    "text": "the things we ran into when you've got that many entities going in at once and you've got and you're trying to post",
    "start": "989040",
    "end": "995639"
  },
  {
    "text": "process at the same time and you've got you know four or more pods in your kubernetes in your kubernetes",
    "start": "995639",
    "end": "1002660"
  },
  {
    "text": "environment all talking to the same database all trying to get in the front get to the front of the row hey I've got",
    "start": "1002660",
    "end": "1008959"
  },
  {
    "text": "an entity to ingest hey I've got an entity to Pro preprocess hey I've got an entity to post process do it do it do it",
    "start": "1008959",
    "end": "1014480"
  },
  {
    "text": "do it eventually you know postgresism is not not very happy with that yeah it's a",
    "start": "1014480",
    "end": "1021440"
  },
  {
    "text": "it's a it can be messy um because every single entity needs to go",
    "start": "1021440",
    "end": "1027740"
  },
  {
    "text": "through the same processing loops when we when we you know before we",
    "start": "1027740",
    "end": "1033438"
  },
  {
    "text": "solved this issue and we I want to assure you we did solve it um it could take hours or in worst case",
    "start": "1033439",
    "end": "1039980"
  },
  {
    "text": "scenarios the worst we ever saw was in days for an entity that was just added",
    "start": "1039980",
    "end": "1045020"
  },
  {
    "text": "to the uh to to the catalog to actually show up to be to finish its",
    "start": "1045020",
    "end": "1052760"
  },
  {
    "text": "post-processing Loop and actually become searchable",
    "start": "1052760",
    "end": "1059260"
  },
  {
    "text": "and because where where was I oh my God my place that never happens",
    "start": "1059299",
    "end": "1066940"
  },
  {
    "text": "so ah here we are uh so we started asking ourselves why is that why we're post pre and post processors taking so",
    "start": "1067760",
    "end": "1075320"
  },
  {
    "text": "long um we looked uh we looked this is uh you know stolen from uh backstage's own uh",
    "start": "1075320",
    "end": "1082160"
  },
  {
    "text": "documentation thank you backstage uh this is a their graph of the processing loop I I sourced it it's the URLs at the",
    "start": "1082160",
    "end": "1089720"
  },
  {
    "text": "bottom um what specific we asked ourselves what specific operations cause a delay in the",
    "start": "1089720",
    "end": "1096860"
  },
  {
    "text": "processor for your post we started measuring exactly which ones",
    "start": "1096860",
    "end": "1102380"
  },
  {
    "text": "uh took the longest um which was not easy um but uh uh it was fruitful because we",
    "start": "1102380",
    "end": "1110780"
  },
  {
    "text": "identified um in every case asynchronous actions in the in the pre and post processor you",
    "start": "1110780",
    "end": "1117500"
  },
  {
    "text": "put you got an entity that you need to post process oh hey one of the things you need to put do in post-processing is",
    "start": "1117500",
    "end": "1124039"
  },
  {
    "text": "grab this additional piece of data from this other source it's just an HTTP get it'll only add you know 500 milliseconds",
    "start": "1124039",
    "end": "1131360"
  },
  {
    "text": "to that entity and to all 200 000 other entities you're",
    "start": "1131360",
    "end": "1136580"
  },
  {
    "text": "ingesting and processing yeah that that adds up",
    "start": "1136580",
    "end": "1143480"
  },
  {
    "text": "um we let's see the uh here it is here's my calculation um when there's a backlog of 50 000",
    "start": "1143480",
    "end": "1149780"
  },
  {
    "text": "entities um and you've got four pods processing uh entities at the same time the lag",
    "start": "1149780",
    "end": "1156799"
  },
  {
    "text": "caused by a 500 millisecond delay per proper on average per entity",
    "start": "1156799",
    "end": "1162200"
  },
  {
    "text": "will actually result in a an additional half an hour just by",
    "start": "1162200",
    "end": "1168200"
  },
  {
    "text": "itself for the entities at the end of that line uh at the end of the entities at the end",
    "start": "1168200",
    "end": "1173539"
  },
  {
    "text": "of the queue wait an additional half an hour and that queue is never ending because it's as soon as you as soon as the stuff reaches the front of the queue",
    "start": "1173539",
    "end": "1179299"
  },
  {
    "text": "you've got more stuff at the back of the queue so",
    "start": "1179299",
    "end": "1185240"
  },
  {
    "text": "so the summarize initial ingestion very slow with catalog processors entity",
    "start": "1185240",
    "end": "1190700"
  },
  {
    "text": "providers can't really ingest very large data sources and you end up with a",
    "start": "1190700",
    "end": "1196280"
  },
  {
    "text": "catalog polluted with locations and processing asynchronous operations cause",
    "start": "1196280",
    "end": "1201440"
  },
  {
    "text": "a delay standard patterns for enabling or for and for emitting entities after",
    "start": "1201440",
    "end": "1207260"
  },
  {
    "text": "reading locations are kind of inefficient because of the asynchronous operations",
    "start": "1207260",
    "end": "1213980"
  },
  {
    "text": "um okay that's enough talking about the problems let's talk about the solutions",
    "start": "1213980",
    "end": "1220580"
  },
  {
    "text": "part one incremental entity providers",
    "start": "1220580",
    "end": "1226160"
  },
  {
    "text": "we created our own type of entity provider with help from front side thank you to Ross",
    "start": "1226160",
    "end": "1232340"
  },
  {
    "text": "who some of you probably know actually all of you should know from the from the backstage Community now you heard him",
    "start": "1232340",
    "end": "1238700"
  },
  {
    "text": "talk earlier so yeah taras rocks thank you",
    "start": "1238700",
    "end": "1243799"
  },
  {
    "text": "um with their help we created something that",
    "start": "1243799",
    "end": "1249700"
  },
  {
    "text": "Works a little differently so this type of entity provider",
    "start": "1249700",
    "end": "1256160"
  },
  {
    "text": "takes a large data source and ingests it in bite size configurable",
    "start": "1256160",
    "end": "1262400"
  },
  {
    "text": "chunks with the ability to back off if the data source is generating errors anybody run",
    "start": "1262400",
    "end": "1268580"
  },
  {
    "text": "into issues where you're most of the way through an ingestion",
    "start": "1268580",
    "end": "1273620"
  },
  {
    "text": "and then the API you're trying to read from crashes or gives an invalid response or",
    "start": "1273620",
    "end": "1279740"
  },
  {
    "text": "something goes wrong and better start over",
    "start": "1279740",
    "end": "1286160"
  },
  {
    "text": "yeah no it's this kind of entity provider has a back off mechanism where if an error happens",
    "start": "1286160",
    "end": "1293260"
  },
  {
    "text": "loud if an error happens it can back off and",
    "start": "1294080",
    "end": "1302360"
  },
  {
    "text": "then retry that particular burst of data um in every aspect of how these run is",
    "start": "1302360",
    "end": "1310580"
  },
  {
    "text": "configurable um it uses paging to break a large",
    "start": "1310580",
    "end": "1315919"
  },
  {
    "text": "ingestion up into chunks it pauses between chunks so that you're not you've",
    "start": "1315919",
    "end": "1322220"
  },
  {
    "text": "got constant pressure instead of spikes of really high pressure on your data",
    "start": "1322220",
    "end": "1327919"
  },
  {
    "text": "sources um and it's uh real which is really useful for data sources that rate limit",
    "start": "1327919",
    "end": "1335900"
  },
  {
    "text": "um we're uh we I'll just say this we do use GitHub",
    "start": "1335900",
    "end": "1341559"
  },
  {
    "text": "and GitHub rate limits um so",
    "start": "1341559",
    "end": "1348340"
  },
  {
    "text": "oh I I'm seeing a lot of nods and agreements an agreement here oh yeah yeah [Laughter]",
    "start": "1348799",
    "end": "1355520"
  },
  {
    "text": "I'm glad I'm glad we're not the only one I'm glad about that",
    "start": "1355520",
    "end": "1360559"
  },
  {
    "text": "um so and all aspects of this are configurable so uh you can you can",
    "start": "1360559",
    "end": "1366020"
  },
  {
    "text": "figure how often it runs uh uh you can figure how long it's gonna it's gonna do",
    "start": "1366020",
    "end": "1372740"
  },
  {
    "text": "a burst of ingestion before uh before pausing between bursts",
    "start": "1372740",
    "end": "1377840"
  },
  {
    "text": "um and how long it rests between full ingestions if you've got a data source that changes very infrequently but it's",
    "start": "1377840",
    "end": "1384020"
  },
  {
    "text": "really really large you might not want to ingest it more than once a month",
    "start": "1384020",
    "end": "1389960"
  },
  {
    "text": "um it goes through its thing ingests and uh and finishes we also included in this",
    "start": "1389960",
    "end": "1395960"
  },
  {
    "text": "we needed ways to control when these these incremental entity",
    "start": "1395960",
    "end": "1404059"
  },
  {
    "text": "providers started and stopped we needed ways to pause them reset them if",
    "start": "1404059",
    "end": "1409760"
  },
  {
    "text": "necessary if there's something wrong um so we also created a suite of",
    "start": "1409760",
    "end": "1415280"
  },
  {
    "text": "administrative tools they're just basic rest endpoints to call",
    "start": "1415280",
    "end": "1421580"
  },
  {
    "text": "um when uh when when you want to manipulate the perform the activities",
    "start": "1421580",
    "end": "1428840"
  },
  {
    "text": "being performed by these uh incremental providers um and you can use a you could use a web",
    "start": "1428840",
    "end": "1434659"
  },
  {
    "text": "front end for them or any uh any uh rest style tool this is this is a screenshot",
    "start": "1434659",
    "end": "1441980"
  },
  {
    "text": "of Postman I'm I'm sure you all know know what that is",
    "start": "1441980",
    "end": "1447020"
  },
  {
    "text": "so I want to talk a little bit about the internals on it um create we create a new schema",
    "start": "1447020",
    "end": "1453980"
  },
  {
    "text": "that we add to your database we don't we don't push it and push the",
    "start": "1453980",
    "end": "1459320"
  },
  {
    "text": "stuff directly into the public schema",
    "start": "1459320",
    "end": "1464900"
  },
  {
    "text": "and and postgres uh we keep it in we keep it separate",
    "start": "1464900",
    "end": "1470780"
  },
  {
    "text": "and there are three main tables uh there's the ingestions table which tracks the status of a running provider",
    "start": "1470780",
    "end": "1476900"
  },
  {
    "text": "the ingestion marks table which is essentially a way of tracking the cursor",
    "start": "1476900",
    "end": "1483559"
  },
  {
    "text": "for the page of data that we're on um and there is the ingestionmark",
    "start": "1483559",
    "end": "1488900"
  },
  {
    "text": "entities table this is this is how we accomplished you know splitting the difference",
    "start": "1488900",
    "end": "1494720"
  },
  {
    "text": "between Delta and full uh entity providers we still needed a way to get",
    "start": "1494720",
    "end": "1499880"
  },
  {
    "text": "rid of Orphans and tracking the tracking the state of the entity um so that we know whether it was still",
    "start": "1499880",
    "end": "1506659"
  },
  {
    "text": "there on that last ingestion or not um was how we reached the point of being",
    "start": "1506659",
    "end": "1512179"
  },
  {
    "text": "able to wipe out uh um orphans in a way that's very similar",
    "start": "1512179",
    "end": "1517280"
  },
  {
    "text": "to the way that a full mutation does with a regular entity provider",
    "start": "1517280",
    "end": "1522880"
  },
  {
    "text": "um there are some requirements for this um the your data source has to paginate",
    "start": "1523400",
    "end": "1531260"
  },
  {
    "text": "um if you've got a very very large data source that does not paginate well I",
    "start": "1531260",
    "end": "1537260"
  },
  {
    "text": "mean first off why do you have a very very large data source that does not paginate",
    "start": "1537260",
    "end": "1542419"
  },
  {
    "text": "but if you don't the an incremental provider is not going to uh to work for",
    "start": "1542419",
    "end": "1548059"
  },
  {
    "text": "that it requires pagination because it needs to be able to track where it was",
    "start": "1548059",
    "end": "1553100"
  },
  {
    "text": "in the in the process um there's a we're also because we're",
    "start": "1553100",
    "end": "1559880"
  },
  {
    "text": "adding new tables and one table tracks your entities um there are storage considerations so",
    "start": "1559880",
    "end": "1565640"
  },
  {
    "text": "if you're always riding the edge on how much storage you're using for uh for your database in postgres you're going",
    "start": "1565640",
    "end": "1573260"
  },
  {
    "text": "to need to up that a little bit if you if you implement an incremental entity provider",
    "start": "1573260",
    "end": "1578779"
  },
  {
    "text": "um one that did not make it to my slide here but I should mention is that it",
    "start": "1578779",
    "end": "1585140"
  },
  {
    "text": "also does not support stateful apis so for instance if you are using",
    "start": "1585140",
    "end": "1593960"
  },
  {
    "text": "something like ldap for your as your directory provider sometimes ldap is a",
    "start": "1593960",
    "end": "1601159"
  },
  {
    "text": "stateful API um and I know that's kind of old school but a lot of places still do use it",
    "start": "1601159",
    "end": "1608059"
  },
  {
    "text": "um so an incremental entity provider is not",
    "start": "1608059",
    "end": "1613460"
  },
  {
    "text": "going to work for that and the reason for that is that after it's done doing a",
    "start": "1613460",
    "end": "1618799"
  },
  {
    "text": "chunk of data it's done ingesting it um it's not going to the the cursor is",
    "start": "1618799",
    "end": "1626779"
  },
  {
    "text": "that we store is only valid for the client and the session that it opened",
    "start": "1626779",
    "end": "1633980"
  },
  {
    "text": "um when it communicated with that data source if you're running in kubernetes",
    "start": "1633980",
    "end": "1640039"
  },
  {
    "text": "with multiple pods as we are we've got four replicas per environment um some other replica might pick up the",
    "start": "1640039",
    "end": "1647179"
  },
  {
    "text": "same the next chunk of data um and it doesn't have an open session to ldap so you can't use it with a uh",
    "start": "1647179",
    "end": "1655400"
  },
  {
    "text": "with a with a with a stateful uh API stateless is what most of them",
    "start": "1655400",
    "end": "1662299"
  },
  {
    "text": "use anyways though so it's not it's not a huge deal but if but if you if uh but",
    "start": "1662299",
    "end": "1667700"
  },
  {
    "text": "it's something to keep in mind depending on what sorts of Legacy systems you want to ingest from",
    "start": "1667700",
    "end": "1674419"
  },
  {
    "text": "so that solved half the problem",
    "start": "1674419",
    "end": "1679539"
  },
  {
    "text": "um that got that got us to the point where we could ingest those very large sources of data and do it in small",
    "start": "1679580",
    "end": "1685760"
  },
  {
    "text": "enough chunks that there was never a point where they were just absolutely flooding the",
    "start": "1685760",
    "end": "1692059"
  },
  {
    "text": "catalog which leads me to my the second part of",
    "start": "1692059",
    "end": "1698179"
  },
  {
    "text": "the solution optimizing the processing loops it was still taking too long to get from",
    "start": "1698179",
    "end": "1704960"
  },
  {
    "text": "the point of an ingested entity to the point of it being visible in the catalog",
    "start": "1704960",
    "end": "1711220"
  },
  {
    "text": "we ident like I mentioned earlier we identified asynchronous operations those",
    "start": "1711220",
    "end": "1716360"
  },
  {
    "text": "all those HTTP gets that you put in your catalog processors those are the culprit",
    "start": "1716360",
    "end": "1721580"
  },
  {
    "text": "and it's a little frustrating because those are also the natural places the place it feels right to do those you're",
    "start": "1721580",
    "end": "1728659"
  },
  {
    "text": "trying to emit a relation we'll grab the data that you need to emit a relation with and admit it",
    "start": "1728659",
    "end": "1734779"
  },
  {
    "text": "fine but it's not efficient at it so fixing the problem meant committing",
    "start": "1734779",
    "end": "1741500"
  },
  {
    "text": "to something that honestly looked a little ugly at first front loading all asynchronous operations into the entity",
    "start": "1741500",
    "end": "1749059"
  },
  {
    "text": "provider we banned them from uh from catalog processors if we do not use that",
    "start": "1749059",
    "end": "1756740"
  },
  {
    "text": "mechanism at all anymore our catalog processors are without",
    "start": "1756740",
    "end": "1762279"
  },
  {
    "text": "asynchronous operations entirely and",
    "start": "1762279",
    "end": "1767360"
  },
  {
    "text": "um we moved all of that into the entity providers these incremental entity providers it's not a trivial task it",
    "start": "1767360",
    "end": "1774980"
  },
  {
    "text": "meant that for every entity kind that we deal with we needed to include all of",
    "start": "1774980",
    "end": "1780620"
  },
  {
    "text": "the methods and functions that are used to get that asynchronous data right",
    "start": "1780620",
    "end": "1786919"
  },
  {
    "text": "there in the entity provider it had to do it at that stage that's okay because",
    "start": "1786919",
    "end": "1792380"
  },
  {
    "text": "you're only running that you know once in a once in a while and ideally",
    "start": "1792380",
    "end": "1797539"
  },
  {
    "text": "you're never since you're not ingesting a huge chunk all at once you're doing it in bite-sized chunks it never adds a",
    "start": "1797539",
    "end": "1806120"
  },
  {
    "text": "huge amount of data all at once to or a huge amount of time all at once to it but it was it was work to get it there",
    "start": "1806120",
    "end": "1813919"
  },
  {
    "text": "um every so every entity provider needed to be Rewritten um every catalog processor needed to",
    "start": "1813919",
    "end": "1819860"
  },
  {
    "text": "have them removed and the ugliest thing of all every entity schema",
    "start": "1819860",
    "end": "1826159"
  },
  {
    "text": "that we created needed to be updated so that the entity",
    "start": "1826159",
    "end": "1831260"
  },
  {
    "text": "itself could have all of the data that would eventually be used to emit its",
    "start": "1831260",
    "end": "1837020"
  },
  {
    "text": "relations or to emit its side effects to to run that emit process",
    "start": "1837020",
    "end": "1842179"
  },
  {
    "text": "um that meant updating a load of schemas with data that was never intended to be there",
    "start": "1842179",
    "end": "1848299"
  },
  {
    "text": "permanently it's just there for the point of ingestion so that it doesn't have to make an additional asynchronous",
    "start": "1848299",
    "end": "1853820"
  },
  {
    "text": "call once it reaches the pre or post processor",
    "start": "1853820",
    "end": "1859159"
  },
  {
    "text": "um and then honestly all of our pre and post processors if that data is still",
    "start": "1859159",
    "end": "1865279"
  },
  {
    "text": "there after we've emitted the relations and such we remove it doesn't need to stay there it doesn't",
    "start": "1865279",
    "end": "1871520"
  },
  {
    "text": "need to stay as part of the entity it's just a mechanism for getting it there and front loading the asynchronous",
    "start": "1871520",
    "end": "1876919"
  },
  {
    "text": "activity so that you don't do that in the processor",
    "start": "1876919",
    "end": "1883059"
  },
  {
    "text": "it's a little ugly still but the solution or the solution the results",
    "start": "1883120",
    "end": "1890059"
  },
  {
    "text": "of the solution speaks for them speaks for itself what you're seeing here is a graph from",
    "start": "1890059",
    "end": "1895700"
  },
  {
    "text": "grafana of the refresh State table if you're not familiar with that part of",
    "start": "1895700",
    "end": "1900740"
  },
  {
    "text": "backstage's internals the refresh State table tracks the status of each ingested entity and part of that status is when",
    "start": "1900740",
    "end": "1908179"
  },
  {
    "text": "it's scheduled to be processed this graph is showing the a running average of the",
    "start": "1908179",
    "end": "1916640"
  },
  {
    "text": "discrepancy between when an entity is scheduled for processing and when it",
    "start": "1916640",
    "end": "1921860"
  },
  {
    "text": "actually passes through the processing loops and that's in hours that's uh that's a",
    "start": "1921860",
    "end": "1927799"
  },
  {
    "text": "processing time in hours 0.57 hours so we've got in this on this graph we were",
    "start": "1927799",
    "end": "1933260"
  },
  {
    "text": "down to just a little bit more than half an hour on hundreds of thousands of",
    "start": "1933260",
    "end": "1938419"
  },
  {
    "text": "entities so that was the amount of time total",
    "start": "1938419",
    "end": "1944240"
  },
  {
    "text": "that it would take for an entity that's at the back of the queue",
    "start": "1944240",
    "end": "1949299"
  },
  {
    "text": "to reach the front and get processed the total discrepancy and from when it was scheduled to be",
    "start": "1949399",
    "end": "1955820"
  },
  {
    "text": "to be processed and actually got processed um before that the same graph we have",
    "start": "1955820",
    "end": "1962000"
  },
  {
    "text": "historical data I'm not going to show it we have historical data that shows the",
    "start": "1962000",
    "end": "1967640"
  },
  {
    "text": "same graph from a couple of months ago and it was it was different",
    "start": "1967640",
    "end": "1973100"
  },
  {
    "text": "it was uh four hours or sometimes more the like I said earlier",
    "start": "1973100",
    "end": "1979760"
  },
  {
    "text": "the longest we saw um was over day here's our Dev environment this actually",
    "start": "1979760",
    "end": "1987020"
  },
  {
    "text": "has a little a few more refinements that have gone into it um 0.25 0.259 that is 15 minutes 15",
    "start": "1987020",
    "end": "1996500"
  },
  {
    "text": "minutes from the point in The Entity entered the catalog",
    "start": "1996500",
    "end": "2001960"
  },
  {
    "text": "or entered the database as an unprocessed entity um and was scheduled to be processed",
    "start": "2001960",
    "end": "2009100"
  },
  {
    "text": "to the point where it was actually processed 15 minutes and then that graph looks like it's going up a little bit",
    "start": "2009100",
    "end": "2014320"
  },
  {
    "text": "there but uh but I should tell you something I using those admin tools I mentioned earlier I started all of our",
    "start": "2014320",
    "end": "2020740"
  },
  {
    "text": "uh I manually started all of our entity providers before running this this check so that's with all of our entity",
    "start": "2020740",
    "end": "2027340"
  },
  {
    "text": "providers running so",
    "start": "2027340",
    "end": "2034240"
  },
  {
    "text": "in fact if you look at the queue over that over time in July to July",
    "start": "2034240",
    "end": "2041200"
  },
  {
    "text": "yeah I guess I can do include some of that data 6. 4.67 hours that was that was a painful time that was how long it",
    "start": "2041200",
    "end": "2047740"
  },
  {
    "text": "took back in July oh my gosh and we had to tell all of our stakeholders",
    "start": "2047740",
    "end": "2052898"
  },
  {
    "text": "you're going to wait an average of that much time when you add a new entity before it actually shows up",
    "start": "2052899",
    "end": "2059819"
  },
  {
    "text": "to now average of 20 minutes on on average in our in our production",
    "start": "2060399",
    "end": "2066700"
  },
  {
    "text": "environment 20 minutes 92 percent decrease",
    "start": "2066700",
    "end": "2071780"
  },
  {
    "text": "[Applause]",
    "start": "2071780",
    "end": "2077679"
  },
  {
    "text": "I thought you might like that yeah and we're not done I mean there's still",
    "start": "2077679",
    "end": "2084220"
  },
  {
    "text": "some optimizations to be made um we want processing time to drop further",
    "start": "2084220",
    "end": "2091839"
  },
  {
    "text": "um the lowest I've seen and I think we can get it down there I've seen seven minutes I've seen I've seen I've seen",
    "start": "2091839",
    "end": "2099160"
  },
  {
    "text": "that that graph that I showed earlier showed just seven minutes I'd like it to stay there I'd like to go even lower if",
    "start": "2099160",
    "end": "2105400"
  },
  {
    "text": "possible I I don't know if we can get there super consistently but we're sure going to try",
    "start": "2105400",
    "end": "2112720"
  },
  {
    "text": "so to summarize um incremental entities and entity providers you know more flexible",
    "start": "2112720",
    "end": "2119380"
  },
  {
    "text": "scheduling uh more more resilient more manageable",
    "start": "2119380",
    "end": "2124660"
  },
  {
    "text": "able to handle data sources here's something that's not on this list due to be open sourced November 1st",
    "start": "2124660",
    "end": "2132820"
  },
  {
    "text": "yeah we're going to release it um and reconfigured processors we know",
    "start": "2132820",
    "end": "2139000"
  },
  {
    "text": "with no asynchronous operations um",
    "start": "2139000",
    "end": "2144339"
  },
  {
    "text": "I want to talk a little bit about what we learned on this path we learned that the advice that",
    "start": "2144339",
    "end": "2151420"
  },
  {
    "text": "backstage Community the backstage Community offers out of the box",
    "start": "2151420",
    "end": "2158800"
  },
  {
    "text": "needs to be updated it needs to scale the way we manage to scale from",
    "start": "2158800",
    "end": "2165700"
  },
  {
    "text": "the start we there was a lot of trial and error there was a lot of effort involved in getting from where we",
    "start": "2165700",
    "end": "2173740"
  },
  {
    "text": "where we began with the advice that we were that we started with and with the design patterns that we were given out",
    "start": "2173740",
    "end": "2180640"
  },
  {
    "text": "out of the gate to the point of being able to ingest hundreds of thousands of entities",
    "start": "2180640",
    "end": "2187800"
  },
  {
    "text": "without it being there being a significant lag without there being anything bogged down",
    "start": "2187800",
    "end": "2195339"
  },
  {
    "text": "um that sort of default advice that people get um",
    "start": "2195339",
    "end": "2200980"
  },
  {
    "text": "should scale from day one to to day 700 when you've added all",
    "start": "2200980",
    "end": "2206800"
  },
  {
    "text": "those entities all those asset sources um and",
    "start": "2206800",
    "end": "2213700"
  },
  {
    "text": "it can um this process might have been difficult",
    "start": "2213700",
    "end": "2218920"
  },
  {
    "text": "but it also made me a True Believer in backstage backstage can do this we have",
    "start": "2218920",
    "end": "2224740"
  },
  {
    "text": "the graphs to prove it we have the active HP wide implementation to prove",
    "start": "2224740",
    "end": "2231099"
  },
  {
    "text": "it backstage is very very powerful so this is sort of a not really a technical uh piece of",
    "start": "2231099",
    "end": "2237640"
  },
  {
    "text": "information that we learned more of a more of a social piece of information we learned we need to start talking to the",
    "start": "2237640",
    "end": "2244720"
  },
  {
    "text": "backstage Community needs to start talking to potential adopters um not Justin you know what's the",
    "start": "2244720",
    "end": "2251320"
  },
  {
    "text": "easiest way to get from zero to your",
    "start": "2251320",
    "end": "2256599"
  },
  {
    "text": "ingesting um but in fact what's the way to get you from zero to ingesting that's going to",
    "start": "2256599",
    "end": "2262960"
  },
  {
    "text": "work two years from now the the same design pattern is it going to work two years is",
    "start": "2262960",
    "end": "2268359"
  },
  {
    "text": "it going to scale to all of the assets that you're going to add in two years",
    "start": "2268359",
    "end": "2274119"
  },
  {
    "text": "um you know for some for for for for some companies uh like of hp's size and",
    "start": "2274119",
    "end": "2280660"
  },
  {
    "text": "scale um that uh that that change in the way we",
    "start": "2280660",
    "end": "2287680"
  },
  {
    "text": "talk about ingesting and the way we did with the design patterns that we offer",
    "start": "2287680",
    "end": "2292720"
  },
  {
    "text": "from the start will likely be the difference between uh them you know just having it as a little",
    "start": "2292720",
    "end": "2298660"
  },
  {
    "text": "toy proof of concept that doesn't really scale to what they need to a full-fledged",
    "start": "2298660",
    "end": "2305520"
  },
  {
    "text": "enterprise-sized Enterprise functional uh deployment of Backstage",
    "start": "2305520",
    "end": "2312960"
  },
  {
    "text": "and now I'd like to take some questions if I have some time I talked a lot there",
    "start": "2314260",
    "end": "2319560"
  },
  {
    "text": "did I did I overshoot a little bit oh no",
    "start": "2320740",
    "end": "2326500"
  },
  {
    "text": "okay tell you what I'll uh I'll uh take questions after at the end of the day anybody who wants to talk to me about",
    "start": "2326500",
    "end": "2332980"
  },
  {
    "text": "this can come up and ask me about it so thank you all",
    "start": "2332980",
    "end": "2337920"
  },
  {
    "text": "[Applause]",
    "start": "2338180",
    "end": "2341319"
  }
]