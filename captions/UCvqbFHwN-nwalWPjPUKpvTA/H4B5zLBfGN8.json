[
  {
    "text": "good morning second day of cube con how's it going so far",
    "start": "60",
    "end": "5839"
  },
  {
    "text": "cool alright so just to introduce myself my name is subbu",
    "start": "5839",
    "end": "11370"
  },
  {
    "text": "I'm the co-creator of Vitesse which I started in 2010 at YouTube to solve its",
    "start": "11370",
    "end": "18600"
  },
  {
    "text": "scalability problems and over the years the community took interest in with us",
    "start": "18600",
    "end": "23880"
  },
  {
    "text": "so in 2018 we ended up donating the test to the CN CF and around the same time I",
    "start": "23880",
    "end": "31470"
  },
  {
    "text": "left YouTube to start planet-scale mainly to provide dedicated support for",
    "start": "31470",
    "end": "36870"
  },
  {
    "text": "this project that was gaining traction and community excitement",
    "start": "36870",
    "end": "42110"
  },
  {
    "text": "Deepti here is a software engineer at Planet scale she has quickly ramped up",
    "start": "42110",
    "end": "48870"
  },
  {
    "text": "she is now one of the top contributors of the tests and also has elite role of",
    "start": "48870",
    "end": "54960"
  },
  {
    "text": "being a maintainer as you know one does not simply become a retest maintainer so",
    "start": "54960",
    "end": "60660"
  },
  {
    "text": "without further ado so with DT is going to give you a good intro about with",
    "start": "60660",
    "end": "66659"
  },
  {
    "text": "tests and then I'll come back and give you a demo that will hopefully blow your minds all right here you go",
    "start": "66659",
    "end": "74030"
  },
  {
    "text": "hello everyone",
    "start": "74150",
    "end": "77630"
  },
  {
    "text": "witness is a shouting middleware for my sequel it sits between the application",
    "start": "79640",
    "end": "85740"
  },
  {
    "text": "layer and the database and it's massively scalable there is actually no",
    "start": "85740",
    "end": "91290"
  },
  {
    "text": "known limit to how big a witters deployment can be which means that we haven't still pushed it to its limits",
    "start": "91290",
    "end": "98060"
  },
  {
    "text": "it's highly available there are several deployments which are running with five",
    "start": "98060",
    "end": "104970"
  },
  {
    "text": "nines of availability right now witness is also cloud native and as we go along",
    "start": "104970",
    "end": "110399"
  },
  {
    "text": "the talk will explore what makes it cloud native these are some stats on",
    "start": "110399",
    "end": "119610"
  },
  {
    "text": "witters what's interesting to us about the stats is not how many people have",
    "start": "119610",
    "end": "125670"
  },
  {
    "text": "adopted with us but what are the big names that have adopted with us",
    "start": "125670",
    "end": "131750"
  },
  {
    "text": "there is slack which is about 25% migrated to wit us and they are on track",
    "start": "132530",
    "end": "138239"
  },
  {
    "text": "to move 100% there's Jerry calm which is",
    "start": "138239",
    "end": "144030"
  },
  {
    "text": "a huge Chinese e-commerce company and they are running what is probably the",
    "start": "144030",
    "end": "150270"
  },
  {
    "text": "largest known deployment of wit s with over 10,000 individual my sequel",
    "start": "150270",
    "end": "156180"
  },
  {
    "text": "incidences Square cash app runs completely on widows square has actually",
    "start": "156180",
    "end": "165300"
  },
  {
    "text": "published a an interesting series of blog posts on their usage of wit us especially emphasizing the way they have",
    "start": "165300",
    "end": "173640"
  },
  {
    "text": "sharded using with us and we link to that at the end of the talk Pinterest is",
    "start": "173640",
    "end": "180150"
  },
  {
    "text": "running all of their advertising campaign management on with us as well",
    "start": "180150",
    "end": "186500"
  },
  {
    "text": "this was a tweet by Jack Dorsey and this came out just before cube con Seattle in",
    "start": "187549",
    "end": "193769"
  },
  {
    "text": "December and our friends at square liked",
    "start": "193769",
    "end": "199500"
  },
  {
    "text": "to joke that they actually overtook YouTube which was where witness was founded this is what the community for",
    "start": "199500",
    "end": "210600"
  },
  {
    "text": "witness looks like and these are just the companies that have given us permission to use their logos there are",
    "start": "210600",
    "end": "215790"
  },
  {
    "text": "a lot more adopters of witters which are not listed here and many of these",
    "start": "215790",
    "end": "225329"
  },
  {
    "text": "companies have engineers that have contributed significantly to wit us and there is a very vibrant group of people",
    "start": "225329",
    "end": "233700"
  },
  {
    "text": "that are active in the community let's",
    "start": "233700",
    "end": "239700"
  },
  {
    "text": "talk a little bit now about what makes wit as cloud native",
    "start": "239700",
    "end": "244670"
  },
  {
    "text": "with us actually predates kubernetes it was built to run on board and it was a",
    "start": "248510",
    "end": "256949"
  },
  {
    "text": "kubernetes compliant it could run on kubernetes before the one dot or release",
    "start": "256949",
    "end": "263130"
  },
  {
    "text": "of kubernetes I guess Kelsey Hightower's",
    "start": "263130",
    "end": "276510"
  },
  {
    "text": "tweets are going to be quite popular at this conference we are not the only ones using them and he's absolutely right",
    "start": "276510",
    "end": "283919"
  },
  {
    "text": "when he says that running stateful workloads on kubernetes is not a decision to be taken lightly it requires",
    "start": "283919",
    "end": "291270"
  },
  {
    "text": "a lot of work to get that working and we",
    "start": "291270",
    "end": "296520"
  },
  {
    "text": "will see what we'll see what has been done in with us to actually make",
    "start": "296520",
    "end": "302789"
  },
  {
    "text": "stateful workloads a possibility in kubernetes this is what the witness",
    "start": "302789",
    "end": "313229"
  },
  {
    "text": "architecture looks like the the main",
    "start": "313229",
    "end": "318660"
  },
  {
    "text": "thing to notice here is that there is a clear separation between the application",
    "start": "318660",
    "end": "324419"
  },
  {
    "text": "layer and the database layer and the interface between the two is what we",
    "start": "324419",
    "end": "330630"
  },
  {
    "text": "call wedi gate this is a gateway through which applications connectivities",
    "start": "330630",
    "end": "336919"
  },
  {
    "text": "applications can connect to whit us as if it is a single database because Witter speaks the my sequel protocol and",
    "start": "336919",
    "end": "343650"
  },
  {
    "text": "we T gate exposes an endpoint to which applications can connect using the my",
    "start": "343650",
    "end": "350310"
  },
  {
    "text": "sequel protocol the other components that are of interest are VT tablet VT",
    "start": "350310",
    "end": "359460"
  },
  {
    "text": "tablets it's right next to a my sequel and takes over the management of the my sequel instance then there's also the",
    "start": "359460",
    "end": "368070"
  },
  {
    "text": "VTC TLD which is the control plane that can be used for management functions",
    "start": "368070",
    "end": "376070"
  },
  {
    "text": "so given this rket sure how does it enable us to run a",
    "start": "377390",
    "end": "384360"
  },
  {
    "text": "stateful workload in kubernetes typically in a witness witness",
    "start": "384360",
    "end": "389520"
  },
  {
    "text": "deployment you will be running my sequel or the variants Maria percona which we",
    "start": "389520",
    "end": "395669"
  },
  {
    "text": "also support you will be running them in a master replicas configuration so you",
    "start": "395669",
    "end": "401910"
  },
  {
    "text": "have one master and two or more replicas which are replicating from the master",
    "start": "401910",
    "end": "407639"
  },
  {
    "text": "and there are two things that two problems that have to be solved in order",
    "start": "407639",
    "end": "414900"
  },
  {
    "text": "for this to work correctly in a kubernetes deployment there's the availability you never want",
    "start": "414900",
    "end": "423150"
  },
  {
    "text": "your database to become unavailable and you never want to lose the data how does",
    "start": "423150",
    "end": "429540"
  },
  {
    "text": "wit us provide availability let's say you were just running my sequel without",
    "start": "429540",
    "end": "434700"
  },
  {
    "text": "kubernetes and you have a master replicas configuration if the master",
    "start": "434700",
    "end": "441060"
  },
  {
    "text": "goes down it requires manual intervention to either bring it back up or to make one of the existing replicas",
    "start": "441060",
    "end": "448710"
  },
  {
    "text": "a master and the same thing applies in kubernetes you might be running your my",
    "start": "448710",
    "end": "454560"
  },
  {
    "text": "sequel instances as a stateful set in order to provide high availability but",
    "start": "454560",
    "end": "460310"
  },
  {
    "text": "kubernetes is not aware of the master replicas relationships and if the master",
    "start": "460310",
    "end": "466110"
  },
  {
    "text": "goes down it it will take a certain amount of time before it comes back up and it is not transparent to the",
    "start": "466110",
    "end": "474630"
  },
  {
    "text": "applications whereas what you get with witters is because you have VT gate",
    "start": "474630",
    "end": "480419"
  },
  {
    "text": "which is a stateless proxy that sits between the applications and the database and which knows about the",
    "start": "480419",
    "end": "488160"
  },
  {
    "text": "master replicas relationship any change to a master is transparent to the",
    "start": "488160",
    "end": "495180"
  },
  {
    "text": "applications and witness has the management functions to failover",
    "start": "495180",
    "end": "501870"
  },
  {
    "text": "if a master goes down and to make one of the replicas the master and the old",
    "start": "501870",
    "end": "509580"
  },
  {
    "text": "master can come back up as a replica and connect and discover and connect to",
    "start": "509580",
    "end": "514930"
  },
  {
    "text": "the new master and become a replica the",
    "start": "514930",
    "end": "522099"
  },
  {
    "text": "other problem we had to solve is that of not losing the data obviously so let's",
    "start": "522099",
    "end": "533290"
  },
  {
    "text": "say you were just running it with local volume or host path in kubernetes and a",
    "start": "533290",
    "end": "541030"
  },
  {
    "text": "pod goes down with local storage you do",
    "start": "541030",
    "end": "546280"
  },
  {
    "text": "lose the data what we do in witters is that we have the ability to take backups",
    "start": "546280",
    "end": "554590"
  },
  {
    "text": "and restore from backups and you backup regularly so if a master goes down you",
    "start": "554590",
    "end": "561820"
  },
  {
    "text": "fail over to a replica and you bring the old master back up from restore it from",
    "start": "561820",
    "end": "568660"
  },
  {
    "text": "a backup which might be a little bit behind the replicas in terms of what",
    "start": "568660",
    "end": "574180"
  },
  {
    "text": "transactions have been applied to it but it will connect to the new master and",
    "start": "574180",
    "end": "579520"
  },
  {
    "text": "then catch up so now you are back to your original configuration with a master and multiple replicas and you",
    "start": "579520",
    "end": "586690"
  },
  {
    "text": "haven't lost any data so the key key insight that enabled this is that in a",
    "start": "586690",
    "end": "595600"
  },
  {
    "text": "cloud environment you you have your data only if it's replicated to multiple",
    "start": "595600",
    "end": "601870"
  },
  {
    "text": "places",
    "start": "601870",
    "end": "604500"
  },
  {
    "text": "how would one start with with us let's say you already have an existing",
    "start": "609260",
    "end": "615160"
  },
  {
    "text": "application and a database you could just plug with us in and put it in front",
    "start": "615160",
    "end": "621260"
  },
  {
    "text": "of the database between the application and the database and without even sharding even if scalability is not an",
    "start": "621260",
    "end": "628220"
  },
  {
    "text": "issue even if you are just starting out and your traffic is not a lot your data",
    "start": "628220",
    "end": "634610"
  },
  {
    "text": "size is not big you still get a whole bunch of features with witters as you",
    "start": "634610",
    "end": "643310"
  },
  {
    "text": "start growing or as you start migrating more traffic to witters you you might",
    "start": "643310",
    "end": "649820"
  },
  {
    "text": "want to deploy more instances into witters in a replica configuration and",
    "start": "649820",
    "end": "657320"
  },
  {
    "text": "this gives you higher read scalability and you also get availability because",
    "start": "657320",
    "end": "663140"
  },
  {
    "text": "withas integrates with github Orchestrator and that can be used to",
    "start": "663140",
    "end": "668930"
  },
  {
    "text": "failover from a master to a replica in case of master failure as your traffic",
    "start": "668930",
    "end": "678010"
  },
  {
    "text": "and/or data size increases you you might discover that all of your data doesn't",
    "start": "678010",
    "end": "684860"
  },
  {
    "text": "fit into one instance anymore and now you have to start splitting it and",
    "start": "684860",
    "end": "691030"
  },
  {
    "text": "initially you might want to actually split the data by table so you want to",
    "start": "691030",
    "end": "698000"
  },
  {
    "text": "move some of your tables into a different instance and this can be done transparently to the application the",
    "start": "698000",
    "end": "704390"
  },
  {
    "text": "application never needs to know what is the physical database where the data resides everything is mediated through",
    "start": "704390",
    "end": "711500"
  },
  {
    "text": "Vitti gate and wheatie gate knows how to route queries to which database and this",
    "start": "711500",
    "end": "719240"
  },
  {
    "text": "this concept of splitting tables across databases is what we call vertical",
    "start": "719240",
    "end": "725060"
  },
  {
    "text": "sharding eventually hopefully you will",
    "start": "725060",
    "end": "732650"
  },
  {
    "text": "reach a point where even with vertical sharding some of your tables are so huge",
    "start": "732650",
    "end": "738560"
  },
  {
    "text": "that either they don't fit into and optimally sized my sequel instance",
    "start": "738560",
    "end": "745020"
  },
  {
    "text": "or you start noticing performance degradation and at that point it's time",
    "start": "745020",
    "end": "751470"
  },
  {
    "text": "to do what we call horizontal shouting and horizontal shouting is really the",
    "start": "751470",
    "end": "756750"
  },
  {
    "text": "the core component of witters that gives you the near in finite scalability and",
    "start": "756750",
    "end": "765140"
  },
  {
    "text": "what you do what happens in horizontal shouting is that the same table is split",
    "start": "765140",
    "end": "770610"
  },
  {
    "text": "across multiple instances of the database and the application doesn't",
    "start": "770610",
    "end": "778500"
  },
  {
    "text": "need to know that vt gate will route queries to the appropriate shard and if necessary it",
    "start": "778500",
    "end": "786240"
  },
  {
    "text": "will actually do a scatter gather it will route queries to all necessary shards and combine the results and then",
    "start": "786240",
    "end": "794670"
  },
  {
    "text": "return them to the application there is no fixed sharding key in witters the",
    "start": "794670",
    "end": "802200"
  },
  {
    "text": "sharding scheme is flexible there are some built-in shouting schemes but you",
    "start": "802200",
    "end": "807570"
  },
  {
    "text": "can also create a custom shouting scheme and plug it into witters you can also",
    "start": "807570",
    "end": "820100"
  },
  {
    "text": "replicate your data across regions or availability zones whether it's for",
    "start": "820100",
    "end": "827970"
  },
  {
    "text": "disaster recovery or in order to provide the necessary availability across",
    "start": "827970",
    "end": "835530"
  },
  {
    "text": "geographic regions and witness supports that now it's time for the demo all",
    "start": "835530",
    "end": "846570"
  },
  {
    "text": "right okay so how many of you have used the Vitesse",
    "start": "846570",
    "end": "854970"
  },
  {
    "text": "sharding scheme or seen the Vitesse lee sharding demo okay one or two okay then",
    "start": "854970",
    "end": "863040"
  },
  {
    "text": "be ready to get your mind blown so I'm going to go actually the the original I",
    "start": "863040",
    "end": "870930"
  },
  {
    "text": "gave a tutorial last cube con about the full a full sharding skier sharding thing",
    "start": "870930",
    "end": "877590"
  },
  {
    "text": "today I'm going to show you an improvement that you made to Vitesse so that's what I'm going to talk about so",
    "start": "877590",
    "end": "884730"
  },
  {
    "text": "this new feature is like totally bleeding-edge it's like about 90% done which means that in the next 10 years",
    "start": "884730",
    "end": "892050"
  },
  {
    "text": "we'll get the other 10% so Oh as we",
    "start": "892050",
    "end": "898980"
  },
  {
    "text": "deeply explain there are basically two workflows that we have in with tests one is you do vertical sharding where you",
    "start": "898980",
    "end": "905700"
  },
  {
    "text": "split move tables from one key space to a brand new one and the other one is horizontal sharding where you split a",
    "start": "905700",
    "end": "911340"
  },
  {
    "text": "key space into multiple parts but then people have come and asked me hey yeah",
    "start": "911340",
    "end": "916800"
  },
  {
    "text": "this is all great but what if I've already shard it and then there's one table in my uncharted key space and I",
    "start": "916800",
    "end": "924000"
  },
  {
    "text": "want to move it to my sharded key space I know you can't do that how about",
    "start": "924000",
    "end": "930530"
  },
  {
    "text": "uncharted 2 uncharted oh sorry no I can't do how about sharded to Uncharted",
    "start": "930530",
    "end": "938240"
  },
  {
    "text": "why would I even want to do that right and my personal favorite is I have",
    "start": "938240",
    "end": "943680"
  },
  {
    "text": "charted my database but I chose the wrong key so we call it the regret",
    "start": "943680",
    "end": "951690"
  },
  {
    "text": "feature regret charting it this way I wanted to do it the other way so all these features are now possible in with",
    "start": "951690",
    "end": "958410"
  },
  {
    "text": "us using V replication but we actually chose a different approach instead of",
    "start": "958410",
    "end": "963840"
  },
  {
    "text": "actually instead of building all these 1015 workflows that can possibly exist",
    "start": "963840",
    "end": "969380"
  },
  {
    "text": "what we have done is componentized the portions that we used for recharging and made it basically scriptable by just",
    "start": "969380",
    "end": "978510"
  },
  {
    "text": "you as a person so which is what I'm going to demo but we actually went one step further so this V replication",
    "start": "978510",
    "end": "985410"
  },
  {
    "text": "feature is not only usable for sharding it's also usable for multiple other",
    "start": "985410",
    "end": "990480"
  },
  {
    "text": "things that people haven't even thought of so at the core what we replication",
    "start": "990480",
    "end": "996570"
  },
  {
    "text": "does is it can materialize anything anything means a group of tables because my sequel has only tables anywhere which",
    "start": "996570",
    "end": "1003650"
  },
  {
    "text": "means that you can choose any source key space into any Genki space and even the target key",
    "start": "1003650",
    "end": "1011570"
  },
  {
    "text": "space can be the source itself if that we saw your desire and finally anyway",
    "start": "1011570",
    "end": "1017060"
  },
  {
    "text": "this is the part where the coolest thing about this feature is which is that",
    "start": "1017060",
    "end": "1023679"
  },
  {
    "text": "anyway means that you can specify transformations which means that I can say I want to replicate only these rows",
    "start": "1023679",
    "end": "1029870"
  },
  {
    "text": "or I want to replicate only these columns I want to replicate these columns but I want to apply the",
    "start": "1029870",
    "end": "1035928"
  },
  {
    "text": "following transformation expression and how do you specify it is what makes it",
    "start": "1035929",
    "end": "1041540"
  },
  {
    "text": "powerful you specify that just by giving a select statement which is the",
    "start": "1041540",
    "end": "1047540"
  },
  {
    "text": "representation of the table that you want to materialize which is why we call it materialized views and this select",
    "start": "1047540",
    "end": "1054530"
  },
  {
    "text": "statement can be basically any sequel statement it can even be aggregations",
    "start": "1054530",
    "end": "1060860"
  },
  {
    "text": "you can do sums and counts and with this will materialize your table aggregated",
    "start": "1060860",
    "end": "1066380"
  },
  {
    "text": "in your target key space which means that there are many analytics for clothes now that you can efficiently",
    "start": "1066380",
    "end": "1072160"
  },
  {
    "text": "create views for and directly hit those tables unfortunately I don't have time",
    "start": "1072160",
    "end": "1078650"
  },
  {
    "text": "to show all those features I am only going to show the part of your application that is going to help you",
    "start": "1078650",
    "end": "1083740"
  },
  {
    "text": "create new reshoring workflows as you desire ok so this is the classic demo",
    "start": "1083740",
    "end": "1091280"
  },
  {
    "text": "that we have this tutorial exists in witness if you go to the Vita's documentation it walks you through this",
    "start": "1091280",
    "end": "1097100"
  },
  {
    "text": "tutorial this is an e-commerce application where there is a product and there are customers placing orders you",
    "start": "1097100",
    "end": "1103640"
  },
  {
    "text": "start with one database the commerce databases product customer and order and in this one database and then you do",
    "start": "1103640",
    "end": "1111320"
  },
  {
    "text": "vertical split move customer and order into an uncharted customer database and then you reach out the customer which is",
    "start": "1111320",
    "end": "1117830"
  },
  {
    "text": "what the tutorial does its most people have gone to that tutorial nobody has seen a problem and if you need help you",
    "start": "1117830",
    "end": "1125150"
  },
  {
    "text": "can also see my last Q con presentation about this today what we are going to do",
    "start": "1125150",
    "end": "1130940"
  },
  {
    "text": "is do this as one step and not just as one as one step we are not going to use",
    "start": "1130940",
    "end": "1137870"
  },
  {
    "text": "any pre-existing workflows that we test has we are just going to craft this with our",
    "start": "1137870",
    "end": "1144470"
  },
  {
    "text": "own bare hands and make this reshoring work okay and so here is where this here's our",
    "start": "1144470",
    "end": "1152059"
  },
  {
    "text": "starting point that is the Commerce database that has these three product customer and order table don't worry",
    "start": "1152059",
    "end": "1157669"
  },
  {
    "text": "about those sequence tables those are not relevant for this demo assume that they help you generate IDs and the magic",
    "start": "1157669",
    "end": "1166820"
  },
  {
    "text": "is in the vita gate there is metadata in vita gate for vita gate we call it the V",
    "start": "1166820",
    "end": "1171889"
  },
  {
    "text": "schema or the Vita schema the sharding schema and that basically says product customer and order are in the Commerce",
    "start": "1171889",
    "end": "1179059"
  },
  {
    "text": "database so when the app server sends a query to vita gate VD gate knows ah i'll",
    "start": "1179059",
    "end": "1184340"
  },
  {
    "text": "send it to commerce because that's where those tables are so the next step we are going to do is create our target key",
    "start": "1184340",
    "end": "1191450"
  },
  {
    "text": "space pre shard it we are going to create a user database user key space which is chartered - 80 and 80 - 8 is",
    "start": "1191450",
    "end": "1199299"
  },
  {
    "text": "hexadecimal it's right in the middle so as soon as you create this key space and",
    "start": "1199299",
    "end": "1207080"
  },
  {
    "text": "you create customer and order tables it's called see order because order is a",
    "start": "1207080",
    "end": "1212330"
  },
  {
    "text": "key word in my sequel it does not like it so I put a C in front to stand for",
    "start": "1212330",
    "end": "1217490"
  },
  {
    "text": "customer order so you create these tables and once you create them vt gate is going to get confused because",
    "start": "1217490",
    "end": "1224690"
  },
  {
    "text": "you say select star from customer it says there are two customer tables there's one in commerce and one in user what do I do with it so this is the",
    "start": "1224690",
    "end": "1231980"
  },
  {
    "text": "first feature of free sharding which is called the routing rule where if you see at the bottom you see that I'm saying",
    "start": "1231980",
    "end": "1238730"
  },
  {
    "text": "customer if you see a query for customer send it to commerce and so which means",
    "start": "1238730",
    "end": "1244789"
  },
  {
    "text": "that in this setup we now have the user database customer and order tables exist but as far as the VD gate is concerned",
    "start": "1244789",
    "end": "1252529"
  },
  {
    "text": "no traffic goes there because they all go to commerce the next step is the",
    "start": "1252529",
    "end": "1258500"
  },
  {
    "text": "magic step which is create a V replication using select statements and",
    "start": "1258500",
    "end": "1264490"
  },
  {
    "text": "basically say materialized customer and order half of them - - 80 and the other",
    "start": "1264490",
    "end": "1270409"
  },
  {
    "text": "half - 80 - using Vitas sharding scheme and all this is expressible as",
    "start": "1270409",
    "end": "1275770"
  },
  {
    "text": "the sequel statement and I will show you what that statement is nothing else changes rules are remaining the same",
    "start": "1275770",
    "end": "1283060"
  },
  {
    "text": "which means that app servers queries continue to go to commerce eventually what we replication is going to do is",
    "start": "1283060",
    "end": "1289330"
  },
  {
    "text": "catch up on replication and all the data in commerce is going to be present in",
    "start": "1289330",
    "end": "1295120"
  },
  {
    "text": "user also for customer and order and the last step is the cutover we it's",
    "start": "1295120",
    "end": "1303280"
  },
  {
    "text": "actually a three-step process we go blacklist the source tables which means that stop accepting writes and then wait",
    "start": "1303280",
    "end": "1310240"
  },
  {
    "text": "for the second step is wait for replication to catch up and after it has caught up you tell me to gate ok now you",
    "start": "1310240",
    "end": "1317500"
  },
  {
    "text": "can start sending rights to the new key space which is basically an update of",
    "start": "1317500",
    "end": "1323350"
  },
  {
    "text": "the routing rules you'll say customer now goes to customer customer and order goes to customer lured order so this",
    "start": "1323350",
    "end": "1330700"
  },
  {
    "text": "makes sense cool so three steps and the best part of it",
    "start": "1330700",
    "end": "1336610"
  },
  {
    "text": "is you can craft your own recharging steps using just these three basic tools I am now going to jump into the demo and",
    "start": "1336610",
    "end": "1344550"
  },
  {
    "text": "before jumping into the demo DT was nice enough to build build me a we test",
    "start": "1344550",
    "end": "1352450"
  },
  {
    "text": "cluster here using the planet-scale operator you can bring up with tests",
    "start": "1352450",
    "end": "1357580"
  },
  {
    "text": "using help charts there are hand charts there is a width s operator that's in alpha in with us and on the commercial",
    "start": "1357580",
    "end": "1366130"
  },
  {
    "text": "side right now there is only the planet-scale operator I think there are some other people who may be working I",
    "start": "1366130",
    "end": "1371830"
  },
  {
    "text": "think Rancher Labs may be working on something so here you can now see that I",
    "start": "1371830",
    "end": "1381150"
  },
  {
    "text": "have brought up so what I've done is in the interest of time because parts take",
    "start": "1381150",
    "end": "1387280"
  },
  {
    "text": "time to come up I've brought up all the parts and key spaces and I'm just going to show you the three steps the last",
    "start": "1387280",
    "end": "1392830"
  },
  {
    "text": "three steps that are involved in the sharding so here is the Commerce key space it has actually it has actually",
    "start": "1392830",
    "end": "1401200"
  },
  {
    "text": "the all the three tables but if you look at the customer key space it is completely empty",
    "start": "1401200",
    "end": "1406930"
  },
  {
    "text": "it has nothing I just created shots and if you look in VT gate this is",
    "start": "1406930",
    "end": "1414130"
  },
  {
    "text": "the V schema that I talked about and you can see that in the key spaces customer is not even listed here because it has",
    "start": "1414130",
    "end": "1420370"
  },
  {
    "text": "nothing and you can see that see order C",
    "start": "1420370",
    "end": "1425890"
  },
  {
    "text": "order order product and customer are here those just ignore those order",
    "start": "1425890",
    "end": "1434380"
  },
  {
    "text": "increments for now they are not relevant for this demo so this is so this basically means that if I send queries",
    "start": "1434380",
    "end": "1441730"
  },
  {
    "text": "they will all go to customer so this is the and we will watch this VC much change as we progress forward in the",
    "start": "1441730",
    "end": "1447730"
  },
  {
    "text": "demo and at this point that is let me see if somebody oh somebody so I did",
    "start": "1447730",
    "end": "1454540"
  },
  {
    "text": "send the queries myself okay so here is our awesome ecommerce app awesome UI but",
    "start": "1454540",
    "end": "1463510"
  },
  {
    "text": "we all have to pretend this is basically you have to imagine if you want to",
    "start": "1463510",
    "end": "1468550"
  },
  {
    "text": "create a product you go here to the left and then enter your SKU if you want",
    "start": "1468550",
    "end": "1474100"
  },
  {
    "text": "customers you just enter your name in there and you can enter this order info so this website is publicly available",
    "start": "1474100",
    "end": "1481600"
  },
  {
    "text": "you go to recharging dot planet-scale labs calm and you are allowed to spam it",
    "start": "1481600",
    "end": "1486880"
  },
  {
    "text": "let's see if we can take it down and while you spam it I'm going to do the Rashard and we'll see if we lose any",
    "start": "1486880",
    "end": "1493690"
  },
  {
    "text": "data or whether we shouting falls apart alright so go ahead and start generating",
    "start": "1493690",
    "end": "1498940"
  },
  {
    "text": "load no load yet okay so while we do",
    "start": "1498940",
    "end": "1505000"
  },
  {
    "text": "this I am going to show you my scripts",
    "start": "1505000",
    "end": "1511170"
  },
  {
    "text": "303 oh yeah restarting dot planet-scale labs calm so here is my script number",
    "start": "1511170",
    "end": "1519520"
  },
  {
    "text": "one which is do we going to do this step which is this one create those V schemas",
    "start": "1519520",
    "end": "1528520"
  },
  {
    "text": "and the routing rule set up the routing rules right so I copy first I copy the schema from",
    "start": "1528520",
    "end": "1533890"
  },
  {
    "text": "the source to the target and you can see the routing rules we says I'm going to say customer goes to commerce store",
    "start": "1533890",
    "end": "1540820"
  },
  {
    "text": "customer and order goes to commerce or a lot order and then I apply the V schema so I'm going to run the script the script",
    "start": "1540820",
    "end": "1549960"
  },
  {
    "text": "has been run and now if you go see the",
    "start": "1549960",
    "end": "1554970"
  },
  {
    "text": "schema here you can see that customer has appeared but more importantly at the",
    "start": "1554970",
    "end": "1561090"
  },
  {
    "text": "top you see the routing rules just as we explained and now let's see what happens",
    "start": "1561090",
    "end": "1568140"
  },
  {
    "text": "here oh somebody actually has so now so this has not changed because the queries",
    "start": "1568140",
    "end": "1575820"
  },
  {
    "text": "are continuing to go to commerce so if you look at the query plans you can see",
    "start": "1575820",
    "end": "1581130"
  },
  {
    "text": "that this select statement still going to commerce basically all your queries",
    "start": "1581130",
    "end": "1587340"
  },
  {
    "text": "are going to commerce database so VT gate shows you on the fly you can look at mitigate show me your the queries",
    "start": "1587340",
    "end": "1594180"
  },
  {
    "text": "you're executing and how you are executing them so this is a debug query plans page and so let's see if somebody",
    "start": "1594180",
    "end": "1601350"
  },
  {
    "text": "has entered anything ooh someone's spamming awesome so the next step is do",
    "start": "1601350",
    "end": "1610710"
  },
  {
    "text": "the V replication part which is where is this the next step here the V",
    "start": "1610710",
    "end": "1618150"
  },
  {
    "text": "replication so that is actually it's a very simple script I type it myself it's",
    "start": "1618150",
    "end": "1628740"
  },
  {
    "text": "actually it's actually very hard the reason why this script looks very",
    "start": "1628740",
    "end": "1633840"
  },
  {
    "text": "complicated is because it is complicated it is actually a batch script that has a",
    "start": "1633840",
    "end": "1640040"
  },
  {
    "text": "SQL statement inside that SQL statement there is a proto buff and inside the",
    "start": "1640040",
    "end": "1648090"
  },
  {
    "text": "Prada but there is another SQL statement so how do you represent that in in bash",
    "start": "1648090",
    "end": "1655230"
  },
  {
    "text": "in more importantly how do I create a command like this well fear not the",
    "start": "1655230",
    "end": "1660510"
  },
  {
    "text": "result what I have is a program called V represent go and what this does is allow",
    "start": "1660510",
    "end": "1669450"
  },
  {
    "text": "you to just put your parameters in and run this program and it will generate",
    "start": "1669450",
    "end": "1675120"
  },
  {
    "text": "you command for you so you can see the select statements here select star from customer where the customer isn't Kirin",
    "start": "1675120",
    "end": "1681940"
  },
  {
    "text": "so you basically specify your recharging workload using these select statements",
    "start": "1681940",
    "end": "1686950"
  },
  {
    "text": "and then run go run this and it",
    "start": "1686950",
    "end": "1693970"
  },
  {
    "text": "generates this code you just paste this into your script and you are off to the races so back to this let me run this",
    "start": "1693970",
    "end": "1702450"
  },
  {
    "text": "touch last three or four he does run and",
    "start": "1702450",
    "end": "1708900"
  },
  {
    "text": "as you can see nothing would change because this is basically an offline process the original database is still",
    "start": "1708900",
    "end": "1715860"
  },
  {
    "text": "accepting writes and nothing has changed okay",
    "start": "1715860",
    "end": "1721270"
  },
  {
    "text": "the last step which is the cutover so this is where everything will change and we'll see what that is 305 and this is",
    "start": "1721270",
    "end": "1731980"
  },
  {
    "text": "actually you can actually manually do this do this but you you have to do this",
    "start": "1731980",
    "end": "1738130"
  },
  {
    "text": "very fast because you are going to stop writes on the source and then wait for application to catch up and then enable",
    "start": "1738130",
    "end": "1744760"
  },
  {
    "text": "writes on the target so you don't you want minimal downtime so I wrote a quick",
    "start": "1744760",
    "end": "1750929"
  },
  {
    "text": "script internally in with test what what I'm planning to do is actually make it available in a customizable way for",
    "start": "1750929",
    "end": "1757750"
  },
  {
    "text": "anyone to use as a cut over so if you run this command 306 I believe what is",
    "start": "1757750",
    "end": "1764410"
  },
  {
    "text": "it three or five three or five boom it's over you have cut over now to the new",
    "start": "1764410",
    "end": "1770320"
  },
  {
    "text": "traffic let's see if site still works okay it works and what's the proof that",
    "start": "1770320",
    "end": "1779140"
  },
  {
    "text": "we have even cut over right I may be lying so let's see what VD gate has to",
    "start": "1779140",
    "end": "1784390"
  },
  {
    "text": "say about the plants the select is now going to customer it was going to",
    "start": "1784390",
    "end": "1791110"
  },
  {
    "text": "commerce before now it's going to customer you can see that the customer queries are now going to customer",
    "start": "1791110",
    "end": "1796500"
  },
  {
    "text": "product query will continue to go to commerce and everything else so we have now actually officially cut over which",
    "start": "1796500",
    "end": "1804160"
  },
  {
    "text": "concludes the demo the best part of this is you can use these to recharge from anything to anything",
    "start": "1804160",
    "end": "1811809"
  },
  {
    "text": "there are actually a lot more workflows that you can do with this you can",
    "start": "1811809",
    "end": "1817150"
  },
  {
    "text": "actually if you go to the Vitesse documentation click on documentation scroll down here in advance which is",
    "start": "1817150",
    "end": "1824260"
  },
  {
    "text": "there's a real application operators guide and here it talks about all the other things you can do you can do",
    "start": "1824260",
    "end": "1829990"
  },
  {
    "text": "materialized views you can do real time roll-ups you can do back filling of look",
    "start": "1829990",
    "end": "1835179"
  },
  {
    "text": "of indexes schema deployment there is a whole bunch of workflows that you can now implement and use within with this",
    "start": "1835179",
    "end": "1843429"
  },
  {
    "text": "so that concludes our demo and you have any questions yes",
    "start": "1843429",
    "end": "1856440"
  },
  {
    "text": "when I reach out the table what do I have to do yes",
    "start": "1865200",
    "end": "1874590"
  },
  {
    "text": "yes yes yeah correct correct",
    "start": "1876529",
    "end": "1885149"
  },
  {
    "text": "so the question is when you when you do the recharging do you require twice the storage and the answer is yes so while",
    "start": "1885149",
    "end": "1891509"
  },
  {
    "text": "you are doing the recharging process you will have to allocate space for your target key space at that time you pay",
    "start": "1891509",
    "end": "1897720"
  },
  {
    "text": "for twice the storage typically a recharging may take you depending on your data size it can take your day or",
    "start": "1897720",
    "end": "1903749"
  },
  {
    "text": "it can take you a week so during that time you pay for the added storage but then after that what you do is you go",
    "start": "1903749",
    "end": "1910230"
  },
  {
    "text": "back and delete your old tables and then you can shrink back your database to their original size",
    "start": "1910230",
    "end": "1915269"
  },
  {
    "text": "so once the recharging is complete you should go back to the amount of resources you were previously using more",
    "start": "1915269",
    "end": "1921840"
  },
  {
    "text": "or less is that a lot of height overhead",
    "start": "1921840",
    "end": "1933869"
  },
  {
    "text": "a lot of right yes the number of rites will also be increased because what is",
    "start": "1933869",
    "end": "1940769"
  },
  {
    "text": "being written to the source table is also going to be written to the target table so the number of rites is going to",
    "start": "1940769",
    "end": "1947100"
  },
  {
    "text": "go up so you need to provision both for space and right eye ops yes",
    "start": "1947100",
    "end": "1955248"
  },
  {
    "text": "so the question is how much downtime is involved in recharging practically zero",
    "start": "1959620",
    "end": "1965390"
  },
  {
    "text": "because the entire recharging process as you saw like when I was doing the demo you are all spamming the the website and",
    "start": "1965390",
    "end": "1972830"
  },
  {
    "text": "was still accepting writes this because the whole recharging process is actually offline the only time when you would see",
    "start": "1972830",
    "end": "1980090"
  },
  {
    "text": "downtime is with during the cutover which I which in this case happened instantly but typically it happens in a",
    "start": "1980090",
    "end": "1986840"
  },
  {
    "text": "few seconds so that is so for a recharging essentially the downtime you see is for five seconds maybe and it's",
    "start": "1986840",
    "end": "1996470"
  },
  {
    "text": "also extremely safe which means that if halfway through the recharging fails you can say oh let's go back to where we",
    "start": "1996470",
    "end": "2003280"
  },
  {
    "text": "where you can do that after you have done the recharging you say I may change",
    "start": "2003280",
    "end": "2008380"
  },
  {
    "text": "my mind I may have to go back after a day in which case you can reverse the veer application and rewrite the what",
    "start": "2008380",
    "end": "2018010"
  },
  {
    "text": "you write in the target back to the source and then if you decide you can actually switch back to your source also",
    "start": "2018010",
    "end": "2023890"
  },
  {
    "text": "so there's rollbacks both during the process and after the process yes",
    "start": "2023890",
    "end": "2031770"
  },
  {
    "text": "what I didn't and when you are doing the merge when you're doing the shard merge",
    "start": "2042200",
    "end": "2048399"
  },
  {
    "text": "oh yes so the question is when you are doing a short merge is it possible to have the same data on multiple charts",
    "start": "2054900",
    "end": "2061050"
  },
  {
    "text": "and in that case your merge will fail so it is your responsibility to make sure",
    "start": "2061050",
    "end": "2066330"
  },
  {
    "text": "that the shards have distinct data and there are actually indexes in the tests",
    "start": "2066330",
    "end": "2072389"
  },
  {
    "text": "that allow you to specify and enforce them if you if you so desire you can for",
    "start": "2072390",
    "end": "2078240"
  },
  {
    "text": "example if you make the primary windaq same as the primary key then uniqueness",
    "start": "2078240",
    "end": "2083310"
  },
  {
    "text": "is enforced or you can create a unique lookup index which can enforce",
    "start": "2083310",
    "end": "2088649"
  },
  {
    "text": "uniqueness of at least one of the columns in those rows which ensures that the rows are all distinct distinct in",
    "start": "2088650",
    "end": "2095250"
  },
  {
    "text": "which case the merge will succeed yeah yes the question is how do you backup VP",
    "start": "2095250",
    "end": "2105030"
  },
  {
    "text": "you'll answer the question we have two ways of doing backups one is where we just copy all the files and that",
    "start": "2105030",
    "end": "2110790"
  },
  {
    "text": "requires downtime on whichever instance you are using to do the backup so that's",
    "start": "2110790",
    "end": "2116850"
  },
  {
    "text": "only a loved on replica type instances you don't allow it on master unless it's",
    "start": "2116850",
    "end": "2122640"
  },
  {
    "text": "an emergency situation we also support perkiness extra backup so you can do an",
    "start": "2122640",
    "end": "2127710"
  },
  {
    "text": "online backup using extra backup she wrote that feature",
    "start": "2127710",
    "end": "2133820"
  },
  {
    "text": "liberation is was the demo running on kubernetes yes it was running we were using the planner scale operator the",
    "start": "2140359",
    "end": "2146849"
  },
  {
    "text": "demo is running on gke with the planet scale operator we do have many people",
    "start": "2146849",
    "end": "2154920"
  },
  {
    "text": "running in production on kubernetes and some of them are very large instances and one of them stitch labs has been",
    "start": "2154920",
    "end": "2162990"
  },
  {
    "text": "live in production since 2016 2016 probably the oldest stateful workload in",
    "start": "2162990",
    "end": "2168900"
  },
  {
    "text": "the world on kubernetes yes yes you",
    "start": "2168900",
    "end": "2176838"
  },
  {
    "text": "so we don't actually have a coordinated back up across shards you can back up a",
    "start": "2209010",
    "end": "2216030"
  },
  {
    "text": "specific instance or you can back up a shard but this logic of doing a",
    "start": "2216030",
    "end": "2221950"
  },
  {
    "text": "coordinated back up across shots doesn't exist in with us today I think we are",
    "start": "2221950",
    "end": "2227200"
  },
  {
    "text": "out of time I will be at the CN CF answer bar this afternoon at 1:30 if",
    "start": "2227200",
    "end": "2232869"
  },
  {
    "text": "people would like to come by and ask questions and we are also available after the talk we also have our",
    "start": "2232869",
    "end": "2239710"
  },
  {
    "text": "planet-scale booth and tomorrow g10 and Dan are going to show the achieve",
    "start": "2239710",
    "end": "2246160"
  },
  {
    "text": "features of the test they are going to I believe play whack-a-mole with with parts so if you are interested please",
    "start": "2246160",
    "end": "2253089"
  },
  {
    "text": "attend",
    "start": "2253089",
    "end": "2255540"
  }
]