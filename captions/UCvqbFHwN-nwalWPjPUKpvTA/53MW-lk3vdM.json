[
  {
    "text": "good day to everybody thank you for joining us for today's webcast and it is a really exciting webcast we're going to",
    "start": "80",
    "end": "6319"
  },
  {
    "text": "be talking about mastering events sourcing a game-changing design pattern for distributed systems so we've all",
    "start": "6319",
    "end": "13440"
  },
  {
    "text": "been you know building and and running and maintaining and improving distributed systems for quite some time now I think we're always interested in",
    "start": "13440",
    "end": "21480"
  },
  {
    "text": "evolving our approach refreshing our strategies and and taking a look at new patterns out there and so I'm excited to",
    "start": "21480",
    "end": "27080"
  },
  {
    "text": "be joined by Kevin Hoffman and we'll get to Kevin in just a few moments um a couple of housekeeping items uh very",
    "start": "27080",
    "end": "33040"
  },
  {
    "text": "briefly before we launch into it uh your lines have been muted but we are very interested in your comments and and",
    "start": "33040",
    "end": "39559"
  },
  {
    "text": "questions so please use the questions part of the go-to webinar uh control panel to log those questions and uh",
    "start": "39559",
    "end": "46600"
  },
  {
    "text": "we'll get to those at the conclusion of today's uh webinar um also the slides for the the webinar and the recording",
    "start": "46600",
    "end": "53199"
  },
  {
    "text": "will be sent to all that uh that registered for the session so be on the lookout uh for that after the after the",
    "start": "53199",
    "end": "60280"
  },
  {
    "text": "conclusion of of today's webcast um and uh I'm very excited to introduce uh today's speaker Uh Kevin Hoffman Kevin",
    "start": "60280",
    "end": "67560"
  },
  {
    "text": "is the director of product management at AA author of the book real world event sourcing and a longtime fan and",
    "start": "67560",
    "end": "73880"
  },
  {
    "text": "practitioner of event sourcing he has worked with some of the largest Enterprises helping teams build Cloud",
    "start": "73880",
    "end": "79520"
  },
  {
    "text": "native and often event sourced applications so uh Kevin's got a great mix of content and demos for us here",
    "start": "79520",
    "end": "86159"
  },
  {
    "text": "today so uh Kevin welcome to the webcast all right thanks for having me uh so",
    "start": "86159",
    "end": "92600"
  },
  {
    "text": "let's get right to it of course I there we go uh so my goal",
    "start": "92600",
    "end": "98960"
  },
  {
    "text": "for this isn't to teach everything there is to know about event sourcing so it's kind of hard to cram into one webinar",
    "start": "98960",
    "end": "106280"
  },
  {
    "text": "but uh if I can get uh people inspired and curious enough to go off and start",
    "start": "106280",
    "end": "112439"
  },
  {
    "text": "tinkering with building event sourced applications then uh I'll consider my my",
    "start": "112439",
    "end": "117840"
  },
  {
    "text": "job successful so I'm going to start by talking about some of the problems we have today in",
    "start": "117840",
    "end": "124560"
  },
  {
    "text": "building distributed systems uh then I'll talk about some of the solutions that uh We've developed over the years",
    "start": "124560",
    "end": "133120"
  },
  {
    "text": "and then uh thirdly I'm going to talk about how event sourcing is uh almost a",
    "start": "133120",
    "end": "139599"
  },
  {
    "text": "formalization of some of the patterns practices and rules uh for dealing with",
    "start": "139599",
    "end": "145160"
  },
  {
    "text": "distributed systems problems and then uh I'll get to the demo and then and finally the important part will will be",
    "start": "145160",
    "end": "152160"
  },
  {
    "text": "uh Q&A so uh building distributed apps is",
    "start": "152160",
    "end": "157360"
  },
  {
    "text": "hard uh that's an understatement obviously uh probably the the first real",
    "start": "157360",
    "end": "164319"
  },
  {
    "text": "problem uh with building distributed systems is that we have multiple sources",
    "start": "164319",
    "end": "170440"
  },
  {
    "text": "of truth if your application isn't a monolith sitting in one place then uh by",
    "start": "170440",
    "end": "176560"
  },
  {
    "text": "definition you have multiple sources of Truth and so we have to deal whenever",
    "start": "176560",
    "end": "181920"
  },
  {
    "text": "we're building these apps we have to deal with figuring out uh you know which",
    "start": "181920",
    "end": "187000"
  },
  {
    "text": "of the many sources of Truth trust first or most uh we've got data coming in from",
    "start": "187000",
    "end": "193080"
  },
  {
    "text": "the edge data coming in from mobile applications data from the cloud conflicting data from multiple sources",
    "start": "193080",
    "end": "199519"
  },
  {
    "text": "and then another pattern we see a lot is we derive a second level or or more of",
    "start": "199519",
    "end": "206239"
  },
  {
    "text": "data from the lowlevel data and so now you have uh conflicting sources of Truth",
    "start": "206239",
    "end": "213159"
  },
  {
    "text": "being used to build yet another set of data kind of compounding the",
    "start": "213159",
    "end": "219640"
  },
  {
    "text": "problem uh the next is a lack of an audit Trail when we build traditional uh",
    "start": "219640",
    "end": "226239"
  },
  {
    "text": "Crow style distributed apps what we end up with is we have state but we don't",
    "start": "226239",
    "end": "232720"
  },
  {
    "text": "know how we got there we don't know why the state is the way it is and we often don't even know when the state became",
    "start": "232720",
    "end": "239799"
  },
  {
    "text": "the way it is uh and what happens with the day two",
    "start": "239799",
    "end": "246480"
  },
  {
    "text": "and Beyond problem uh with building and maintaining these distributed apps is we",
    "start": "246480",
    "end": "253200"
  },
  {
    "text": "can't recreate the state uh based on New Logic so we can't go back in time change",
    "start": "253200",
    "end": "260320"
  },
  {
    "text": "how we calculate interest or or whatever and then regenerate our new state we're",
    "start": "260320",
    "end": "266240"
  },
  {
    "text": "kind of stuck and uh along with that we can't really run what if scenarios we",
    "start": "266240",
    "end": "273320"
  },
  {
    "text": "can't take a look at our new logic apply it to our old State and then see what",
    "start": "273320",
    "end": "278840"
  },
  {
    "text": "it's going to look like the other issue with distributed",
    "start": "278840",
    "end": "285360"
  },
  {
    "text": "applications is obviously they're distributed and that generally means we have concurrent",
    "start": "285360",
    "end": "291320"
  },
  {
    "text": "rights and historically we solve the concurrent right problem by using the",
    "start": "291320",
    "end": "297560"
  },
  {
    "text": "last right wins strategy so we just write the data and whoever gets their",
    "start": "297560",
    "end": "304000"
  },
  {
    "text": "last wins uh the problem with that is that the the last writer may not have",
    "start": "304000",
    "end": "311160"
  },
  {
    "text": "been based on the most up-to-date information so you could end up and frequently do end up",
    "start": "311160",
    "end": "318319"
  },
  {
    "text": "overriding the the state we should have with out ofate State we can solve some of this with uh",
    "start": "318319",
    "end": "326240"
  },
  {
    "text": "optimistic concurrency checks but uh that's that's not a pan see you uh so we",
    "start": "326240",
    "end": "331440"
  },
  {
    "text": "end up with a situation where we own the conf the complexity of dealing with",
    "start": "331440",
    "end": "339039"
  },
  {
    "text": "conflicts and so we go off and search stack Overflow and everything else for",
    "start": "339039",
    "end": "345720"
  },
  {
    "text": "techniques that we can use uh to solve this problem and then we end up getting into a quagmire dealing with uh Conflict",
    "start": "345720",
    "end": "354120"
  },
  {
    "text": "Free replicated data types um worse yet we roll our own leader election",
    "start": "354120",
    "end": "360280"
  },
  {
    "text": "system uh and uh more times than I can count we",
    "start": "360280",
    "end": "366240"
  },
  {
    "text": "end up in where we just write our code and um you know if it doesn't work we",
    "start": "366240",
    "end": "373880"
  },
  {
    "text": "retry and we just keep retrying until it works uh and that's what I generally",
    "start": "373880",
    "end": "379759"
  },
  {
    "text": "refer to as hope-based consistency and then probably the worst",
    "start": "379759",
    "end": "385240"
  },
  {
    "text": "offender of all is distributed transactions and they're a whole",
    "start": "385240",
    "end": "390680"
  },
  {
    "text": "different class of problem so with the way things are today",
    "start": "390680",
    "end": "397039"
  },
  {
    "text": "we generally spend 10% of our time dealing with and being able to actually",
    "start": "397039",
    "end": "403280"
  },
  {
    "text": "write features things that our app makes money off of uh and then we spend 90% of",
    "start": "403280",
    "end": "409800"
  },
  {
    "text": "our time on all of the busy work and Logistics and nightmares of dealing with",
    "start": "409800",
    "end": "416560"
  },
  {
    "text": "distributed systems",
    "start": "416560",
    "end": "420160"
  },
  {
    "text": "when we when we are writing these applications and we're storing the",
    "start": "421879",
    "end": "427759"
  },
  {
    "text": "data generally we store them uh in kind of a in a normalized or you know",
    "start": "427759",
    "end": "434680"
  },
  {
    "text": "relational format so uh we write the data in a way that's optimized not for a",
    "start": "434680",
    "end": "441680"
  },
  {
    "text": "user but for the database or or something else um and so we try and",
    "start": "441680",
    "end": "450639"
  },
  {
    "text": "fix that problem by maybe moving the data out closer to the edge to make those queries run faster uh but now when",
    "start": "450639",
    "end": "457919"
  },
  {
    "text": "you move the data into multiple places you add even more source of Truth and consistency issues then we think well",
    "start": "457919",
    "end": "465159"
  },
  {
    "text": "maybe we'll add a cash layer to fix it because we all know that if you slap a cash on things it just makes everything",
    "start": "465159",
    "end": "470879"
  },
  {
    "text": "better uh but then you know we have more complexity and now we have to maintain our app and a",
    "start": "470879",
    "end": "476599"
  },
  {
    "text": "cache so just just storing data in a",
    "start": "476599",
    "end": "481800"
  },
  {
    "text": "distributed application is a much harder problem uh Than People initially",
    "start": "481800",
    "end": "488440"
  },
  {
    "text": "think so how do we get around some of these problems the first is obviously to",
    "start": "488440",
    "end": "494680"
  },
  {
    "text": "get rid of all of the conflicting sources of Truth and just have one uh",
    "start": "494680",
    "end": "500120"
  },
  {
    "text": "obviously that's easier said than done but if we do if we treat everything in",
    "start": "500120",
    "end": "505440"
  },
  {
    "text": "our system as an immutable event uh as a record of what did happen not what",
    "start": "505440",
    "end": "510680"
  },
  {
    "text": "failed to happen or what might have happened then we have an eventually consistent system but that data because",
    "start": "510680",
    "end": "518719"
  },
  {
    "text": "it never changes and it always means the same thing regardless of where it was we can now replicate this source of Truth",
    "start": "518719",
    "end": "526040"
  },
  {
    "text": "everywhere we need it U without adding conflicts and probably the biggest thing",
    "start": "526040",
    "end": "532399"
  },
  {
    "text": "here is that when we have one source of Truth uh we're no longer writing our own",
    "start": "532399",
    "end": "537920"
  },
  {
    "text": "uh reconciliation um and conflict resolution systems because we want to be in the business of",
    "start": "537920",
    "end": "544560"
  },
  {
    "text": "writing features not conflict resolvers uh everything needs to be uh",
    "start": "544560",
    "end": "552920"
  },
  {
    "text": "we need to embrace the idea of eventual consistency and you know eventual",
    "start": "552920",
    "end": "558920"
  },
  {
    "text": "consistency essentially means that when I write data uh as part of somebody",
    "start": "558920",
    "end": "565720"
  },
  {
    "text": "using my application that that change May will eventually be visible to all",
    "start": "565720",
    "end": "573399"
  },
  {
    "text": "the other parts of the application and",
    "start": "573399",
    "end": "578680"
  },
  {
    "text": "so we want to be able to identify which data can be uh slightly out of date or",
    "start": "578680",
    "end": "585440"
  },
  {
    "text": "eventually uh consistent and which data can't and in many cases we find that uh",
    "start": "585440",
    "end": "593839"
  },
  {
    "text": "eventual consistency is just fine and we don't need strict consistency",
    "start": "593839",
    "end": "599720"
  },
  {
    "text": "but by embracing eventual consistency it forces us to decide which things need St",
    "start": "599720",
    "end": "606720"
  },
  {
    "text": "strict consistency or strong consistency in which things don't and you know if you've been if",
    "start": "606720",
    "end": "613320"
  },
  {
    "text": "you've used uh social networking app and you know you've hit like on something",
    "start": "613320",
    "end": "618880"
  },
  {
    "text": "and that doesn't actually appear uh until a little bit later you've seen",
    "start": "618880",
    "end": "624640"
  },
  {
    "text": "eventual consistency and there's a whole bunch of other examples um",
    "start": "624640",
    "end": "630519"
  },
  {
    "text": "some consistency is far less available than other you know",
    "start": "630519",
    "end": "636079"
  },
  {
    "text": "you've got banks that don't give you your updated information until the end",
    "start": "636079",
    "end": "641120"
  },
  {
    "text": "of the day um airlines that may never give you your updated",
    "start": "641120",
    "end": "647959"
  },
  {
    "text": "information the other thing to do is get rid of uh distributed",
    "start": "648639",
    "end": "654040"
  },
  {
    "text": "transactions uh when you we we have his ially had uh these",
    "start": "654040",
    "end": "661720"
  },
  {
    "text": "centralized distributed transaction managers and we figured that that would solve all of our",
    "start": "661720",
    "end": "668279"
  },
  {
    "text": "problems and it actually just gave us another source of problems um",
    "start": "668279",
    "end": "674360"
  },
  {
    "text": "distributed transactions make us feel like we have control over the system uh but we don't",
    "start": "674360",
    "end": "681560"
  },
  {
    "text": "and we then need to figure out you know what's going to happen when our when our",
    "start": "681560",
    "end": "687079"
  },
  {
    "text": "roll back fails so if we we try and commit a transaction that fails we try and roll it back that",
    "start": "687079",
    "end": "693880"
  },
  {
    "text": "fails um now we have no idea how to get back to a a stable",
    "start": "693880",
    "end": "701800"
  },
  {
    "text": "State especially if we don't have an event",
    "start": "701800",
    "end": "706760"
  },
  {
    "text": "log so one of the other things that we do in order to get rid of some of the complexity and problems with distributed",
    "start": "708079",
    "end": "715600"
  },
  {
    "text": "systems is we can generate the query results before the users need them and",
    "start": "715600",
    "end": "722040"
  },
  {
    "text": "by that I mean if we know how people are going to use our applications and we know what",
    "start": "722040",
    "end": "727639"
  },
  {
    "text": "information users are going to need and when and how they're going to need it then there's no reason why we can't have",
    "start": "727639",
    "end": "734680"
  },
  {
    "text": "that information ready to go before they query for it so this means that when a",
    "start": "734680",
    "end": "740360"
  },
  {
    "text": "user wants some data we don't need to go off and do uh a join across multiple",
    "start": "740360",
    "end": "747040"
  },
  {
    "text": "tables with complicated filtering and table scans and locks instead we can",
    "start": "747040",
    "end": "754000"
  },
  {
    "text": "just have the user ask for the data they need and we can give it to them and what this ends up doing the the",
    "start": "754000",
    "end": "762680"
  },
  {
    "text": "impact on us is uh when we go to write",
    "start": "762680",
    "end": "767880"
  },
  {
    "text": "the data we can then also write the data into into materialized views or places",
    "start": "767880",
    "end": "775120"
  },
  {
    "text": "where we're storing the data in a way that's that's essentially um ready for",
    "start": "775120",
    "end": "783560"
  },
  {
    "text": "query and so the inverse of the chart that I showed a minute ago is we want to",
    "start": "784600",
    "end": "790160"
  },
  {
    "text": "be able to spend time on the right things so we want to flip that 9010",
    "start": "790160",
    "end": "796120"
  },
  {
    "text": "ratio and spend 90% of our time working on features and only 10% uh or hopefully",
    "start": "796120",
    "end": "803440"
  },
  {
    "text": "less working on you know the the grunt work of dealing with distributed systems",
    "start": "803440",
    "end": "811120"
  },
  {
    "text": "so as I mentioned uh if we take a look at the some of the patterns that we've",
    "start": "811720",
    "end": "818519"
  },
  {
    "text": "got for dealing with the complexity of distributed systems and we kind of formalize those into some rules what we",
    "start": "818519",
    "end": "826040"
  },
  {
    "text": "end up with is uh event sourcing and uh before I keep going it's",
    "start": "826040",
    "end": "833600"
  },
  {
    "text": "I think it's probably worth pointing out that event sourcing with a capital E and",
    "start": "833600",
    "end": "838759"
  },
  {
    "text": "A s is sort of the formal definition of how to do this particular type of",
    "start": "838759",
    "end": "845120"
  },
  {
    "text": "application there are looser definitions like event so Event Event driven event",
    "start": "845120",
    "end": "851360"
  },
  {
    "text": "backed event based um even just calling a system reactive and as you'll see um",
    "start": "851360",
    "end": "860800"
  },
  {
    "text": "some of the problems come from partially implementing uh event",
    "start": "860800",
    "end": "866480"
  },
  {
    "text": "driven systems and not following through with all of the additional rules from",
    "start": "866480",
    "end": "872440"
  },
  {
    "text": "event sourcing so an event sourced system um",
    "start": "872440",
    "end": "878680"
  },
  {
    "text": "basically boils down to two functions uh we apply this function to",
    "start": "878680",
    "end": "886120"
  },
  {
    "text": "our state um and handed an event and the",
    "start": "886120",
    "end": "891560"
  },
  {
    "text": "result is New State so my state might be",
    "start": "891560",
    "end": "897240"
  },
  {
    "text": "my bank account Ledger and and I have an event that you know indicates that I'm",
    "start": "897240",
    "end": "902880"
  },
  {
    "text": "depositing some money and the new resulting state is my ledger with that",
    "start": "902880",
    "end": "908000"
  },
  {
    "text": "money in it and uh additionally um we've got a function for",
    "start": "908000",
    "end": "915120"
  },
  {
    "text": "dealing with commands so we take our state we validate the inbound command um",
    "start": "915120",
    "end": "921880"
  },
  {
    "text": "based on that state and then we produce events as output and there's a bunch of",
    "start": "921880",
    "end": "928319"
  },
  {
    "text": "reasons why this ends up being uh such a game Cher",
    "start": "928319",
    "end": "933839"
  },
  {
    "text": "one of the biggest ones for me is that now everything is testable and it's testable in isolation and",
    "start": "933839",
    "end": "943120"
  },
  {
    "text": "predictable and even better when we build an Event Source system it uh we",
    "start": "943480",
    "end": "951279"
  },
  {
    "text": "spend less time writing code we write smaller amounts of code and we get the",
    "start": "951279",
    "end": "956959"
  },
  {
    "text": "ability to go from my laptop to a globally replicated solution without",
    "start": "956959",
    "end": "964000"
  },
  {
    "text": "having to change any of our code and uh that's that's pretty huge especially if",
    "start": "964000",
    "end": "969040"
  },
  {
    "text": "you've been through the the pain of trying to convert something that worked locally to something that works in the",
    "start": "969040",
    "end": "976680"
  },
  {
    "text": "cloud so there's a number of uh building blocks the sort of Lego bricks of",
    "start": "976720",
    "end": "984040"
  },
  {
    "text": "composing event sourced applications uh obviously the first is event events and the event log and again",
    "start": "984040",
    "end": "991839"
  },
  {
    "text": "that is an immutable list of things that happened in the past um so you'll see",
    "start": "991839",
    "end": "998319"
  },
  {
    "text": "all of those are um they're named as past tense verbs like amount deposited",
    "start": "998319",
    "end": "1005399"
  },
  {
    "text": "or user logged in things like that commands um",
    "start": "1005399",
    "end": "1010959"
  },
  {
    "text": "entities uh which are similar to The DDD",
    "start": "1010959",
    "end": "1016399"
  },
  {
    "text": "concept of an aggregate views workflows and producers and consumers and I'll get",
    "start": "1016399",
    "end": "1021920"
  },
  {
    "text": "into each one of these as I go so commands are a request to produce",
    "start": "1021920",
    "end": "1029000"
  },
  {
    "text": "an effect so I'll issue a command like deposit funds to an entity and if that",
    "start": "1029000",
    "end": "1037000"
  },
  {
    "text": "command is valid that entity will then uh issue out um the the corresponding",
    "start": "1037000",
    "end": "1045000"
  },
  {
    "text": "events like amount deposited um commands are ephemeral uh they don't",
    "start": "1045000",
    "end": "1053120"
  },
  {
    "text": "exist and this is one of the big uh source of trouble that I find happens a",
    "start": "1053120",
    "end": "1059720"
  },
  {
    "text": "lot when we we half halfway Implement event sourcing where we store commands",
    "start": "1059720",
    "end": "1068200"
  },
  {
    "text": "and then uh by storing commands we create all sorts of consistency problems",
    "start": "1068200",
    "end": "1075159"
  },
  {
    "text": "and we're essentially back to square one events as I said they're an immutable uh",
    "start": "1075159",
    "end": "1082799"
  },
  {
    "text": "representation of something that happened in the past and uh pretty much",
    "start": "1082799",
    "end": "1089520"
  },
  {
    "text": "everything that you can that you that you know exists in the real world is",
    "start": "1089520",
    "end": "1095360"
  },
  {
    "text": "event sourced and what we find is that modeling things as an event sourced",
    "start": "1095360",
    "end": "1102280"
  },
  {
    "text": "domain is generally uh easier than trying to",
    "start": "1102280",
    "end": "1107360"
  },
  {
    "text": "enforce our own you know um consistent uh view of the world onto",
    "start": "1107360",
    "end": "1114240"
  },
  {
    "text": "onto U external things entities uh these are the two",
    "start": "1114240",
    "end": "1119799"
  },
  {
    "text": "functions that I showed they um apply events to state to produce new state",
    "start": "1119799",
    "end": "1127080"
  },
  {
    "text": "and we uh handle commands to produce a list of",
    "start": "1127080",
    "end": "1133158"
  },
  {
    "text": "events views so as I mentioned dealing with",
    "start": "1133960",
    "end": "1139840"
  },
  {
    "text": "um distributed data multiple sources of Truth and eventual consistency what we end up with is this concept of views",
    "start": "1139840",
    "end": "1147600"
  },
  {
    "text": "which are um data that's in query friendly",
    "start": "1147600",
    "end": "1153200"
  },
  {
    "text": "format so if you used if you're familiar with this the cqrs acronym this is views",
    "start": "1153200",
    "end": "1160840"
  },
  {
    "text": "are the the read model if you're a functional programmer then you can think of views as a left",
    "start": "1160840",
    "end": "1168360"
  },
  {
    "text": "fold over the event stream to produce some piece of",
    "start": "1168360",
    "end": "1175159"
  },
  {
    "text": "State uh views can be easily evolved which is um another really big benefit",
    "start": "1175480",
    "end": "1181679"
  },
  {
    "text": "to developers building these event sourc applications and uh views",
    "start": "1181679",
    "end": "1190280"
  },
  {
    "text": "are views because they're um they're freestanding they can have their own",
    "start": "1190280",
    "end": "1196520"
  },
  {
    "text": "scale resilience and replication require requirments different than the strong",
    "start": "1196520",
    "end": "1202000"
  },
  {
    "text": "consistent uh portions of the application that gives you much more control over you know um how much",
    "start": "1202000",
    "end": "1209000"
  },
  {
    "text": "compute you're actually using workflows manage long running",
    "start": "1209000",
    "end": "1215520"
  },
  {
    "text": "processes and long running here uh doesn't necessarily refer to an amount",
    "start": "1215520",
    "end": "1221440"
  },
  {
    "text": "of time but it refers to uh a number of events so if there is a a workflow",
    "start": "1221440",
    "end": "1229159"
  },
  {
    "text": "that starts with uh a stock item received event and finishes with you",
    "start": "1229159",
    "end": "1237039"
  },
  {
    "text": "know a stock item purchased or sold event and there's something that needs",
    "start": "1237039",
    "end": "1242679"
  },
  {
    "text": "to happen in the middle workflows are what we use to manage those things so we",
    "start": "1242679",
    "end": "1248280"
  },
  {
    "text": "can use workflows for uh shopping carts um like I said order",
    "start": "1248280",
    "end": "1255039"
  },
  {
    "text": "fulfillments putting things on hold like reserving airlin tickets and then purchasing them afterwards where the",
    "start": "1255039",
    "end": "1262280"
  },
  {
    "text": "reservation starts the workflow and the purchase finishes",
    "start": "1262280",
    "end": "1267360"
  },
  {
    "text": "it and finally sort of a a a visual way of showing that on the",
    "start": "1268760",
    "end": "1276200"
  },
  {
    "text": "left we have a bank account and a balance but we have no idea where that balance came from whether it's accurate",
    "start": "1276200",
    "end": "1283919"
  },
  {
    "text": "um and uh you know the the SE of events",
    "start": "1283919",
    "end": "1289240"
  },
  {
    "text": "that led to that while on the right we have um a ledger and so we know exactly",
    "start": "1289240",
    "end": "1296840"
  },
  {
    "text": "where its current balance came from so event sourcing comes with uh a",
    "start": "1296840",
    "end": "1304760"
  },
  {
    "text": "number of rules not all of them are are listed here more of them are in in my",
    "start": "1304760",
    "end": "1310880"
  },
  {
    "text": "event sourcing book but these are are the ones that I think are are fairly key that if broken uh will mean the",
    "start": "1310880",
    "end": "1318600"
  },
  {
    "text": "difference between a successful application and a failed one uh the",
    "start": "1318600",
    "end": "1324120"
  },
  {
    "text": "first is events can never be modified um and that also refers to schema so uh you",
    "start": "1324120",
    "end": "1333159"
  },
  {
    "text": "can't change the shape of an event if you do it's a new it's a new event or a",
    "start": "1333159",
    "end": "1338600"
  },
  {
    "text": "new event type uh never read the wall clock for state that means that if uh you have any",
    "start": "1338600",
    "end": "1347240"
  },
  {
    "text": "logic in your application that needs uh the concept of the current",
    "start": "1347240",
    "end": "1352640"
  },
  {
    "text": "time that time needs to have come from a stamp on an event and you can't read the",
    "start": "1352640",
    "end": "1358640"
  },
  {
    "text": "wall clock time from the operating system there's a number of reasons for that but the biggest one is that as soon",
    "start": "1358640",
    "end": "1365400"
  },
  {
    "text": "as you touch the wall clock your business logic is not repeatable your event stream is not item potent and you",
    "start": "1365400",
    "end": "1373520"
  },
  {
    "text": "no longer have consistency and uh predictability for the same reason don't",
    "start": "1373520",
    "end": "1380559"
  },
  {
    "text": "ever use random numbers by getting them from the operating system uh this one's",
    "start": "1380559",
    "end": "1387520"
  },
  {
    "text": "generally harder for people to follow but one really good way to deal with it is to put a seed uh on the event and",
    "start": "1387520",
    "end": "1396200"
  },
  {
    "text": "then uh when code that requires random numbers uh needs a random number it uses",
    "start": "1396200",
    "end": "1403679"
  },
  {
    "text": "that seed this makes it so that even though the code is using so-called",
    "start": "1403679",
    "end": "1408960"
  },
  {
    "text": "random numbers the same event will always produce the same output no matter how many times you replay",
    "start": "1408960",
    "end": "1416840"
  },
  {
    "text": "it um another important one is not modeling a uh a failure to create or",
    "start": "1416840",
    "end": "1425279"
  },
  {
    "text": "failure to do something uh obviously there there are some exceptions there but by and large you want to",
    "start": "1425279",
    "end": "1432840"
  },
  {
    "text": "model your events should represent things that did happen not things that did not happen",
    "start": "1432840",
    "end": "1440440"
  },
  {
    "text": "and then um never produce side effects when processing events um that should be",
    "start": "1440480",
    "end": "1447799"
  },
  {
    "text": "fairly straightforward if you if your code produces a side effect during event",
    "start": "1447799",
    "end": "1454159"
  },
  {
    "text": "processing then the code is no longer testable predictable or uh",
    "start": "1454159",
    "end": "1461278"
  },
  {
    "text": "reproducible so uh now that we've got uh the beginnings of a formalization of",
    "start": "1462240",
    "end": "1469039"
  },
  {
    "text": "event sourcing let's take a look at how to build applications uh event sourced",
    "start": "1469039",
    "end": "1474360"
  },
  {
    "text": "applications with AA and as we'll see when I get through the demo um it is",
    "start": "1474360",
    "end": "1481120"
  },
  {
    "text": "surprisingly easy uh if I if I'm already modeling my application as uh in terms",
    "start": "1481120",
    "end": "1489080"
  },
  {
    "text": "of event sourced Concepts then those map directly to the types of components",
    "start": "1489080",
    "end": "1495520"
  },
  {
    "text": "that I need to build with AA so AA has a very simple developer",
    "start": "1495520",
    "end": "1502000"
  },
  {
    "text": "experience like I said if I model my Event Source domain then I have less code uh the code",
    "start": "1502000",
    "end": "1508799"
  },
  {
    "text": "is easier to maintain and more importantly there's less stuff that I",
    "start": "1508799",
    "end": "1514480"
  },
  {
    "text": "need to cram in my head in and maintain in my head in order to work with the codebase uh it's very easy to work",
    "start": "1514480",
    "end": "1522640"
  },
  {
    "text": "with and then obviously what I want to do is let the experts deal with",
    "start": "1522640",
    "end": "1528600"
  },
  {
    "text": "deploying Distributing and so on uh obviously I want to verify that those",
    "start": "1528600",
    "end": "1534039"
  },
  {
    "text": "things are being done properly but the key is that there's nothing in my code",
    "start": "1534039",
    "end": "1540159"
  },
  {
    "text": "that uh in any way at all relates to deployment distribution and so on it's",
    "start": "1540159",
    "end": "1546679"
  },
  {
    "text": "just a pure Event Source domain so I'm going to run through a",
    "start": "1546679",
    "end": "1553360"
  },
  {
    "text": "demo here and this demo is is a chess",
    "start": "1553360",
    "end": "1559679"
  },
  {
    "text": "application and uh one of the things that I like about Chess as a sample is",
    "start": "1559679",
    "end": "1566200"
  },
  {
    "text": "that the state of a chess game is essentially uh the a function applied to",
    "start": "1566200",
    "end": "1573279"
  },
  {
    "text": "the list of moves so far uh and so it lends itself really well to",
    "start": "1573279",
    "end": "1581399"
  },
  {
    "text": "uh being an event sourced application and so what I'm going to do is go through and show the application",
    "start": "1581399",
    "end": "1587720"
  },
  {
    "text": "and then switch over to the event sourced code that produced uh each one",
    "start": "1587720",
    "end": "1593440"
  },
  {
    "text": "of these things so first thing is you can see that uh I'm I'm logged in and uh",
    "start": "1593440",
    "end": "1600840"
  },
  {
    "text": "logging in is a is a command as well",
    "start": "1600840",
    "end": "1608240"
  },
  {
    "text": "and that's no",
    "start": "1608240",
    "end": "1611720"
  },
  {
    "text": "good um my my browser uh likes to expire tabs on",
    "start": "1613480",
    "end": "1620640"
  },
  {
    "text": "me which is uh rather annoying so um I'm",
    "start": "1620640",
    "end": "1625760"
  },
  {
    "text": "going to show the Java or the the chess",
    "start": "1625760",
    "end": "1633520"
  },
  {
    "text": "domain and we'll take a look at the player entity and you can see",
    "start": "1634240",
    "end": "1643200"
  },
  {
    "text": "that I handle the player logged in event",
    "start": "1643279",
    "end": "1648520"
  },
  {
    "text": "um and see if that works yeah here when",
    "start": "1648520",
    "end": "1656840"
  },
  {
    "text": "when I log in all I'm doing is producing new state and so what's important here",
    "start": "1656840",
    "end": "1664000"
  },
  {
    "text": "is you don't see anything about database storage or distributed systems or locks",
    "start": "1664000",
    "end": "1671360"
  },
  {
    "text": "or concurrency or any of the things that we typically hate and it's just what's",
    "start": "1671360",
    "end": "1676799"
  },
  {
    "text": "the new state as a result of a player being logged in and if I look at the player entity",
    "start": "1676799",
    "end": "1683039"
  },
  {
    "text": "here inside the AA console you'll see that uh this is the current state this",
    "start": "1683039",
    "end": "1688919"
  },
  {
    "text": "is me and I can look at the events that produced that state so uh I received a",
    "start": "1688919",
    "end": "1696320"
  },
  {
    "text": "player logged in event um and that's the the logged in event right there and that",
    "start": "1696320",
    "end": "1702159"
  },
  {
    "text": "produced this state and so I can go back to my uh uh chess",
    "start": "1702159",
    "end": "1711080"
  },
  {
    "text": "service and um so that's the player entity as it stands now and you'll also",
    "start": "1711919",
    "end": "1718080"
  },
  {
    "text": "see that the lobby entity uh doesn't exist yet so what I'm going to do is go",
    "start": "1718080",
    "end": "1725159"
  },
  {
    "text": "to the lobby and start a new match and this starts a game that is awaiting",
    "start": "1725159",
    "end": "1732919"
  },
  {
    "text": "another player and uh This was done by creating a by sending the start Lobby",
    "start": "1732919",
    "end": "1740679"
  },
  {
    "text": "match command and um you can",
    "start": "1740679",
    "end": "1748760"
  },
  {
    "text": "see in the",
    "start": "1749679",
    "end": "1756919"
  },
  {
    "text": "lobby when a pending match is created again I just add I'm adding to my",
    "start": "1758039",
    "end": "1765200"
  },
  {
    "text": "current state this is all just pure uh you know functional Java again",
    "start": "1765200",
    "end": "1772880"
  },
  {
    "text": "there's no uh there's no side effects in here and so now if I go back",
    "start": "1772880",
    "end": "1782720"
  },
  {
    "text": "to my Lobby entity you'll see I now have a Lobby and I have a pending match and as",
    "start": "1783159",
    "end": "1791519"
  },
  {
    "text": "usual I have the event that's responsible for the Lobby's current",
    "start": "1791519",
    "end": "1796679"
  },
  {
    "text": "state so I'm going to",
    "start": "1796679",
    "end": "1802200"
  },
  {
    "text": "um cheat slightly in that um I don't",
    "start": "1802200",
    "end": "1808000"
  },
  {
    "text": "have another person to to play so I'll use uh this is in my",
    "start": "1808000",
    "end": "1815320"
  },
  {
    "text": "UI by the way so this isn't um so what the the code that I'm I'm",
    "start": "1815320",
    "end": "1822039"
  },
  {
    "text": "doing here isn't all that important um get Lobby matches",
    "start": "1822039",
    "end": "1829960"
  },
  {
    "text": "uh so I'm going to get my Lobby matches um and here's the join code",
    "start": "1830039",
    "end": "1837799"
  },
  {
    "text": "so if I wasn't doing this by hand you know imagine you just send this code via",
    "start": "1837799",
    "end": "1843720"
  },
  {
    "text": "QR code or something else to the player that you want to uh play",
    "start": "1843720",
    "end": "1850278"
  },
  {
    "text": "with so I'm going to join a Lobby match",
    "start": "1850559",
    "end": "1855518"
  },
  {
    "text": "here I just happen to know the GitHub ID of our CTO and the creator of AA so that",
    "start": "1856320",
    "end": "1865559"
  },
  {
    "text": "worked out nicely so player ID and the match",
    "start": "1865559",
    "end": "1873080"
  },
  {
    "text": "code so now uh I",
    "start": "1873080",
    "end": "1877960"
  },
  {
    "text": "have two I now have this match that's been joined so if I look back at the",
    "start": "1878159",
    "end": "1884360"
  },
  {
    "text": "lobby uh a uh workflow running uh managed by AA has removed the lobby",
    "start": "1884360",
    "end": "1892159"
  },
  {
    "text": "match and now I have a real match so if I go to my matches list you'll see uh",
    "start": "1892159",
    "end": "1900000"
  },
  {
    "text": "this is the the the match now has uh me",
    "start": "1900000",
    "end": "1905159"
  },
  {
    "text": "versus someone else and again these these were",
    "start": "1905159",
    "end": "1910840"
  },
  {
    "text": "everything that's been done so far is always the result of sending a command",
    "start": "1910840",
    "end": "1915919"
  },
  {
    "text": "to an entity and then dealing with the output events",
    "start": "1915919",
    "end": "1921279"
  },
  {
    "text": "there's no more complexity to it than that so now I have my uh my chess game and",
    "start": "1921279",
    "end": "1930760"
  },
  {
    "text": "the state as I said the state of of a chess match is the sum of all moves",
    "start": "1930760",
    "end": "1936120"
  },
  {
    "text": "since there's no moves things are still um at at the default State um as you can",
    "start": "1936120",
    "end": "1944440"
  },
  {
    "text": "tell from my uh unbelievable CSS skills here I've managed to indicate that it's",
    "start": "1944440",
    "end": "1949639"
  },
  {
    "text": "my turn and I'm going to move my knight out here so my Knight's mov you see this",
    "start": "1949639",
    "end": "1956799"
  },
  {
    "text": "move list now includes Knight to C3 and again this move list is literally the",
    "start": "1956799",
    "end": "1964279"
  },
  {
    "text": "event stream uh for a given match and so that's pretty much all there is if I",
    "start": "1964279",
    "end": "1973120"
  },
  {
    "text": "go back here and I look at",
    "start": "1973120",
    "end": "1979559"
  },
  {
    "text": "um let's take a look at the match entity you'll see that uh I can send a command so",
    "start": "1982320",
    "end": "1991600"
  },
  {
    "text": "there's a command uh create and if the validation passed on",
    "start": "1991600",
    "end": "1997720"
  },
  {
    "text": "that command then I will persist a match started event if I want to finish a match same",
    "start": "1997720",
    "end": "2004840"
  },
  {
    "text": "thing if the validation passes or in this case if the validation fails",
    "start": "2004840",
    "end": "2011159"
  },
  {
    "text": "if the validation passes then uh I persist the game finished event and so",
    "start": "2011159",
    "end": "2018519"
  },
  {
    "text": "you can see that if I model things in terms of commands and events and Views um so if I",
    "start": "2018519",
    "end": "2026480"
  },
  {
    "text": "look if I go back to my matches list what I'm looking at here is a view",
    "start": "2026480",
    "end": "2034000"
  },
  {
    "text": "uh I'm not reading data from uh database I'm not doing uh joins in order to get",
    "start": "2034000",
    "end": "2042919"
  },
  {
    "text": "this person's name and this person's name I have a match view that has my",
    "start": "2042919",
    "end": "2049000"
  },
  {
    "text": "real name in it has Jonas's real name in it everything that I'm going to",
    "start": "2049000",
    "end": "2054079"
  },
  {
    "text": "need uh queried for me ahead of time and so this view can be uh",
    "start": "2054079",
    "end": "2063760"
  },
  {
    "text": "potentially eventually consistent but what is even more interesting is that I",
    "start": "2063760",
    "end": "2073398"
  },
  {
    "text": "can if I want to um if I want to run",
    "start": "2073399",
    "end": "2079000"
  },
  {
    "text": "this service in multiple regions I just click activate region and uh it shows up",
    "start": "2079000",
    "end": "2086520"
  },
  {
    "text": "there and my data is now being replicated across regions and if one",
    "start": "2086520",
    "end": "2091839"
  },
  {
    "text": "region fa fails the other region takes up the the slack for me I don't have to",
    "start": "2091839",
    "end": "2097240"
  },
  {
    "text": "worry about you know where is my RDS instance running and how you know how do",
    "start": "2097240",
    "end": "2105280"
  },
  {
    "text": "I avoid a bottleneck on a big Central database with AKA there is no big Central database there's just an event",
    "start": "2105280",
    "end": "2112359"
  },
  {
    "text": "stream and the stuff that gets produced as a result of that event",
    "start": "2112359",
    "end": "2117640"
  },
  {
    "text": "stream and um you can see that",
    "start": "2117640",
    "end": "2124560"
  },
  {
    "text": "um this application is exposed at uh this URL there's three instances of my",
    "start": "2124560",
    "end": "2132240"
  },
  {
    "text": "app running so you know no matter how many times I hit Refresh on this doesn't matter those instances are going to get",
    "start": "2132240",
    "end": "2138880"
  },
  {
    "text": "the same data and uh there is there was one other",
    "start": "2138880",
    "end": "2145160"
  },
  {
    "text": "thing I wanted to show which is now if I look at the um chess endpoint here I",
    "start": "2145160",
    "end": "2153520"
  },
  {
    "text": "this is my chess API and the AA conso sees all of these",
    "start": "2153520",
    "end": "2158839"
  },
  {
    "text": "endpoints in it but what is even cooler about it",
    "start": "2158839",
    "end": "2164880"
  },
  {
    "text": "is if I show the implementation to this",
    "start": "2164880",
    "end": "2171799"
  },
  {
    "text": "endpoint there's a couple things in here that are pretty powerful the first is this endpoint is available to the",
    "start": "2172920",
    "end": "2179319"
  },
  {
    "text": "internet the second is uh in order to use this endpoint I I require a JWT and",
    "start": "2179319",
    "end": "2187720"
  },
  {
    "text": "require that it be issued by an issuer named chess web and I have keys set up",
    "start": "2187720",
    "end": "2194920"
  },
  {
    "text": "in my AA project that uh allow me to do",
    "start": "2194920",
    "end": "2200680"
  },
  {
    "text": "this kind of validation and this it's it's hard to express how",
    "start": "2200680",
    "end": "2206400"
  },
  {
    "text": "much time this actually saves but there's a you know this is all just taken care of for me automatically and I",
    "start": "2206400",
    "end": "2213359"
  },
  {
    "text": "have you know my my chess endo and uh a nice way of setting up the",
    "start": "2213359",
    "end": "2222760"
  },
  {
    "text": "routes so um that uh should be",
    "start": "2222800",
    "end": "2228000"
  },
  {
    "text": "everything and uh should be hopefully there's enough I didn't go too long and there's enough time for",
    "start": "2228000",
    "end": "2236280"
  },
  {
    "text": "questions yeah fantastic stuff Kevin thank you um and lots of great questions have come in so let's uh jump right into",
    "start": "2236280",
    "end": "2243319"
  },
  {
    "text": "those if that sounds good to you uh yeah",
    "start": "2243319",
    "end": "2248400"
  },
  {
    "text": "did are you GNA pick those or do you want me to pick them out of the bucket or how does this work I'm happy to I'm",
    "start": "2248400",
    "end": "2254760"
  },
  {
    "text": "happy to kind of you go through if there's any that you'd like to like to start with certainly we",
    "start": "2254760",
    "end": "2260359"
  },
  {
    "text": "can okay um let's",
    "start": "2260440",
    "end": "2265240"
  },
  {
    "text": "see I don't see any in the questions panel at least on my side so okay then",
    "start": "2265480",
    "end": "2272000"
  },
  {
    "text": "that makes the decision easy yeah all right first one uh you've stated that query side should not be used for the",
    "start": "2272000",
    "end": "2277839"
  },
  {
    "text": "decision making but what if I need to make a decision on multiple Aggregates",
    "start": "2277839",
    "end": "2283040"
  },
  {
    "text": "or even if I need to find the aggregate by some filter on internal field without",
    "start": "2283040",
    "end": "2288599"
  },
  {
    "text": "the query it will be problematic to load all the instore memory yeah there's",
    "start": "2288599",
    "end": "2296680"
  },
  {
    "text": "a you know the the typical answer is obviously it depends",
    "start": "2296720",
    "end": "2301880"
  },
  {
    "text": "but there's a couple of ways that I typically tackle this one is if I need",
    "start": "2301880",
    "end": "2308599"
  },
  {
    "text": "to um if I need to make a decision based and that by decision that",
    "start": "2308599",
    "end": "2315280"
  },
  {
    "text": "decision is based on uh fully consistent data where you know I don't want in this",
    "start": "2315280",
    "end": "2321560"
  },
  {
    "text": "case I'm not going to make a decision based on eventually consistent data then what I can do is create a new type of",
    "start": "2321560",
    "end": "2328960"
  },
  {
    "text": "entity that subscribes to the events",
    "start": "2328960",
    "end": "2334079"
  },
  {
    "text": "from uh other types of entities and when it handles those events it can maintain",
    "start": "2334079",
    "end": "2339520"
  },
  {
    "text": "its own internal state so that um that entity can then be used the the state of",
    "start": "2339520",
    "end": "2346680"
  },
  {
    "text": "that entity can then be used to make decisions um and then you know uh",
    "start": "2346680",
    "end": "2353000"
  },
  {
    "text": "views you there's an asterisk there you can make a decision based on a view if",
    "start": "2353000",
    "end": "2360319"
  },
  {
    "text": "you're okay with the decision being based on potentially stale data so um hopefully that answers the",
    "start": "2360319",
    "end": "2370040"
  },
  {
    "text": "question perfect uh next up in a distributed environment how many",
    "start": "2370040",
    "end": "2375440"
  },
  {
    "text": "distributed components should be allowed to write to the event",
    "start": "2375440",
    "end": "2380160"
  },
  {
    "text": "log so that",
    "start": "2380720",
    "end": "2384880"
  },
  {
    "text": "is there's a there's a there's a a high Lev answer to that and then there's the",
    "start": "2386000",
    "end": "2391960"
  },
  {
    "text": "really lowlevel details behind all of the amazing stuff that AA does for you",
    "start": "2391960",
    "end": "2398160"
  },
  {
    "text": "the interesting part is when I go and um if I",
    "start": "2398160",
    "end": "2405240"
  },
  {
    "text": "have if I go back to my uh application uh my Lobby entity here",
    "start": "2405240",
    "end": "2413480"
  },
  {
    "text": "you'll see uh I'm",
    "start": "2413480",
    "end": "2419440"
  },
  {
    "text": "persisting uh some of these events so like I'm I'm persisting a a pending",
    "start": "2419440",
    "end": "2425839"
  },
  {
    "text": "match created or um you know I'll I'll persist a there's",
    "start": "2425839",
    "end": "2434240"
  },
  {
    "text": "another workflow which is an interesting one where if a pending match remains unjoined for more than five minutes IA",
    "start": "2434240",
    "end": "2441720"
  },
  {
    "text": "will um let me expire it",
    "start": "2441720",
    "end": "2447440"
  },
  {
    "text": "but the if you're using the AA SDK then you call persist and you are guaranteed",
    "start": "2447440",
    "end": "2454599"
  },
  {
    "text": "that the event that you're persisting will um be written to the event log and",
    "start": "2454599",
    "end": "2462520"
  },
  {
    "text": "AA will take care of making sure that uh",
    "start": "2462520",
    "end": "2467560"
  },
  {
    "text": "the right sequence is applied the right timestamps are applied and that the event is uh replicated to all of the",
    "start": "2467560",
    "end": "2475440"
  },
  {
    "text": "regions where your service is running so the short answer is as a",
    "start": "2475440",
    "end": "2481920"
  },
  {
    "text": "developer building the components you don't have to worry about it the detailed answer is there's some",
    "start": "2481920",
    "end": "2487800"
  },
  {
    "text": "really really in-depth computer science uh distributed system stuff underneath",
    "start": "2487800",
    "end": "2492960"
  },
  {
    "text": "that makes all that work okay great answer thank you uh all",
    "start": "2492960",
    "end": "2500000"
  },
  {
    "text": "right next up um when rehydrating an actor from event logs maybe due to service restart is there any pattern",
    "start": "2500000",
    "end": "2507560"
  },
  {
    "text": "that says I should not try to bring back to life actors that are considered as",
    "start": "2507560",
    "end": "2512880"
  },
  {
    "text": "expired in order to reduce memory for such inactive actors whose data was once added to the event",
    "start": "2512880",
    "end": "2520319"
  },
  {
    "text": "logs okay um I'm not sure if I fully understand the question let me see if",
    "start": "2520359",
    "end": "2525560"
  },
  {
    "text": "this is it so the question is uh how do I control or can I control the",
    "start": "2525560",
    "end": "2532960"
  },
  {
    "text": "rehydration of passive AED actors and yeah um you know what are the the",
    "start": "2532960",
    "end": "2538920"
  },
  {
    "text": "consequences of that so the good news is that if you're using the aa3 SDK you",
    "start": "2538920",
    "end": "2546240"
  },
  {
    "text": "don't actually interact with actors directly at all it's just entities and",
    "start": "2546240",
    "end": "2552160"
  },
  {
    "text": "the skk deals with trying to figure out you know when to passivate and how to",
    "start": "2552160",
    "end": "2557760"
  },
  {
    "text": "deal with all of that the when when AKA decides to uh",
    "start": "2557760",
    "end": "2565160"
  },
  {
    "text": "instantiate your entity it will feed your entity the event stream that is up",
    "start": "2565160",
    "end": "2573480"
  },
  {
    "text": "to you know the the most current so you",
    "start": "2573480",
    "end": "2579000"
  },
  {
    "text": "can you don't have to write code that is aware of whether or not uh a restart",
    "start": "2579000",
    "end": "2585960"
  },
  {
    "text": "occurred so it's been a while since I've used the really lowlevel AA stuff but if I remember right there's you know code",
    "start": "2585960",
    "end": "2593480"
  },
  {
    "text": "that you write in in an actor actor system that um where it it's visible in the",
    "start": "2593480",
    "end": "2601000"
  },
  {
    "text": "code that you are recovering from a restart or something like that and in",
    "start": "2601000",
    "end": "2607520"
  },
  {
    "text": "the AA 3 SDK you don't see that so all you do is write the logic for how you're",
    "start": "2607520",
    "end": "2614440"
  },
  {
    "text": "going to mutate or how you're going to change your state based on the event and AA then takes care of",
    "start": "2614440",
    "end": "2623440"
  },
  {
    "text": "instantiating your entity figuring out where the entity should go in the",
    "start": "2623440",
    "end": "2628720"
  },
  {
    "text": "cluster and when and how to feed that entity it's um its event log",
    "start": "2628720",
    "end": "2637800"
  },
  {
    "text": "okay thank you um next up can you walk through an example of how to handle async side effects if my system needs to",
    "start": "2637839",
    "end": "2645760"
  },
  {
    "text": "reach out and make something happen that can fail and would require compensation actions and crash recovery and so",
    "start": "2645760",
    "end": "2652280"
  },
  {
    "text": "on okay um yeah there's a a couple of really good patterns for",
    "start": "2652280",
    "end": "2658880"
  },
  {
    "text": "this uh generally I like to think of the the aa3 event sourced Service as has a a",
    "start": "2658920",
    "end": "2669319"
  },
  {
    "text": "hard boundary and where everything inside it is you know this ideal um side",
    "start": "2669319",
    "end": "2677559"
  },
  {
    "text": "effect free predictable environment as soon as you want to go outside of that",
    "start": "2677559",
    "end": "2683200"
  },
  {
    "text": "and interact with the the messy unpredictable real world there's a",
    "start": "2683200",
    "end": "2689040"
  },
  {
    "text": "couple of ways you can do it one is you can",
    "start": "2689040",
    "end": "2694119"
  },
  {
    "text": "publish messages to a topic and I",
    "start": "2694119",
    "end": "2700400"
  },
  {
    "text": "have uh one of those right here possibly yes so you can basically",
    "start": "2700400",
    "end": "2709640"
  },
  {
    "text": "what I'm doing is I'm taking events from the lobby entity and then I'm publishing them to a",
    "start": "2709640",
    "end": "2718000"
  },
  {
    "text": "topic called chess events and that topic is configured as a",
    "start": "2718000",
    "end": "2724079"
  },
  {
    "text": "broker uh inside my AA project so I go",
    "start": "2724079",
    "end": "2729480"
  },
  {
    "text": "to settings Integrations you'll see I have Google pubsub in here and what that",
    "start": "2729480",
    "end": "2735000"
  },
  {
    "text": "means is that this absurdly tiny amount of code consumes from you know the",
    "start": "2735000",
    "end": "2743760"
  },
  {
    "text": "consistent internal world and then publishes to a a gcp topic and then I",
    "start": "2743760",
    "end": "2751640"
  },
  {
    "text": "can then have all of the unpredictable side effect e code I want on Downstream",
    "start": "2751640",
    "end": "2758280"
  },
  {
    "text": "on that topic um without forcing my Haka",
    "start": "2758280",
    "end": "2763640"
  },
  {
    "text": "code to um attempt to model side effects internally which uh you should never",
    "start": "2763640",
    "end": "2771640"
  },
  {
    "text": "do uh other other things you can do are I'm not sure if I have one of these",
    "start": "2771640",
    "end": "2777880"
  },
  {
    "text": "in here",
    "start": "2777880",
    "end": "2781078"
  },
  {
    "text": "um uh yeah you can set up a consumer where",
    "start": "2785559",
    "end": "2793480"
  },
  {
    "text": "when when the consumer receives an event you can do something side Effy um and",
    "start": "2793480",
    "end": "2800200"
  },
  {
    "text": "then it's essentially on you to determine whether the side Effy thing",
    "start": "2800200",
    "end": "2806040"
  },
  {
    "text": "that you're doing is item potent because the guarantees inside AA are going to be",
    "start": "2806040",
    "end": "2812319"
  },
  {
    "text": "that you've got uh at least once delivery so you need",
    "start": "2812319",
    "end": "2818160"
  },
  {
    "text": "to be aware of the fact that as soon as you start as soon as you get past that",
    "start": "2818160",
    "end": "2823800"
  },
  {
    "text": "hard boundary around the service that um you know things again",
    "start": "2823800",
    "end": "2829280"
  },
  {
    "text": "become uh you know more more traditional distributed systems and you could",
    "start": "2829280",
    "end": "2834760"
  },
  {
    "text": "theoretically get the same message twice okay let's change the ears a",
    "start": "2834760",
    "end": "2840000"
  },
  {
    "text": "little bit uh how would you migrate an existing applications data without a reproducible event log into a new distri",
    "start": "2840000",
    "end": "2846880"
  },
  {
    "text": "disted system okay so you've got a legacy",
    "start": "2846880",
    "end": "2853480"
  },
  {
    "text": "application uh that has um for for lack of a better",
    "start": "2853480",
    "end": "2859880"
  },
  {
    "text": "description crud style data that has no event log and you're you're you want to figure",
    "start": "2859880",
    "end": "2866680"
  },
  {
    "text": "out uh how to move that same data into an event into an event sourced service",
    "start": "2866680",
    "end": "2874920"
  },
  {
    "text": "is that yeah okay um the cool thing that you can",
    "start": "2874920",
    "end": "2880920"
  },
  {
    "text": "there's a couple of ways to do it usually the way that you want to have an",
    "start": "2880920",
    "end": "2886520"
  },
  {
    "text": "Event Source system inest information from some other external Source there's",
    "start": "2886520",
    "end": "2893800"
  },
  {
    "text": "a couple of things one is you can as I showed you can consume from a a",
    "start": "2893800",
    "end": "2899240"
  },
  {
    "text": "topic so in theory you could put all of your existing data onto a kfka topic and",
    "start": "2899240",
    "end": "2906839"
  },
  {
    "text": "and then you've got a consumer that pulls things off of that kofka topic and then in response to that it calls it",
    "start": "2906839",
    "end": "2914319"
  },
  {
    "text": "then uses commands on internal entities and that will uh sort of pull all of",
    "start": "2914319",
    "end": "2920559"
  },
  {
    "text": "your data from one place and then give you an event log obviously the event log",
    "start": "2920559",
    "end": "2925640"
  },
  {
    "text": "isn't going to reflect you know the um you know how long it took to accumulate",
    "start": "2925640",
    "end": "2931839"
  },
  {
    "text": "that old uh state but it's still a way to get that data in it uh another way to do",
    "start": "2931839",
    "end": "2940480"
  },
  {
    "text": "it is uh just to write you know a script or uh something",
    "start": "2940480",
    "end": "2948119"
  },
  {
    "text": "that consumes your existing data and uses the aa3 component client to um",
    "start": "2948119",
    "end": "2954880"
  },
  {
    "text": "ingest those as commands the the super short version is that the only way you",
    "start": "2954880",
    "end": "2961559"
  },
  {
    "text": "should ever have events appear in your event sourced system",
    "start": "2961559",
    "end": "2967359"
  },
  {
    "text": "is by having sent a command to an entity uh",
    "start": "2967359",
    "end": "2972640"
  },
  {
    "text": "and I don't know enough about the existing architecture but another option is to not",
    "start": "2972640",
    "end": "2981240"
  },
  {
    "text": "migrate uh that data and you can leave that data up behind a service boundary",
    "start": "2981240",
    "end": "2987880"
  },
  {
    "text": "or or something else but you if your goal is um you know I've I have a",
    "start": "2987880",
    "end": "2994079"
  },
  {
    "text": "stateful model now and I want to model it as an event sourced system but I want",
    "start": "2994079",
    "end": "3001680"
  },
  {
    "text": "um I want to sort of precede my uh new event Source system with existing data",
    "start": "3001680",
    "end": "3009559"
  },
  {
    "text": "um then in that case I think uh the you can go the topic route um or you",
    "start": "3009559",
    "end": "3017799"
  },
  {
    "text": "can use some sort of script or whatever that uses the aa3 component client to issue commands",
    "start": "3017799",
    "end": "3025760"
  },
  {
    "text": "okay thank you good good answer again uh question here about uh interested knowing how to time travel meaning",
    "start": "3027599",
    "end": "3034839"
  },
  {
    "text": "looking back at in this particular case the state of financial transactions last month to produce month-end balances",
    "start": "3034839",
    "end": "3042200"
  },
  {
    "text": "currently we record daily States and the uh attendee ads it's not very",
    "start": "3042200",
    "end": "3048359"
  },
  {
    "text": "good yep so obviously this is going to vary",
    "start": "3048359",
    "end": "3053839"
  },
  {
    "text": "depending on your domain but things like monthly reports that uh are really good",
    "start": "3053839",
    "end": "3062760"
  },
  {
    "text": "candidates for being views so one thing you can do is uh as transactions come",
    "start": "3062760",
    "end": "3071480"
  },
  {
    "text": "in uh and these might be low-level transactions you have a consumer that's",
    "start": "3071480",
    "end": "3078520"
  },
  {
    "text": "uh looking at those transactions and uh performing you know sums or",
    "start": "3078520",
    "end": "3084400"
  },
  {
    "text": "averages or you know rolling windows or whatever on uh the view that it's building and",
    "start": "3084400",
    "end": "3092280"
  },
  {
    "text": "inside that view you can you have a number of",
    "start": "3092280",
    "end": "3097920"
  },
  {
    "text": "options you can create a view per month if you if you want to do it that way or you can have a view where you supply the",
    "start": "3097920",
    "end": "3105040"
  },
  {
    "text": "month as part of the query um let me see I can show you what a view sort of looks like and",
    "start": "3105040",
    "end": "3112520"
  },
  {
    "text": "then uh so here I have a match archive View and the match archive view is over",
    "start": "3112520",
    "end": "3120960"
  },
  {
    "text": "time logging all the moves that that occurred within a match and then when it's",
    "start": "3120960",
    "end": "3126799"
  },
  {
    "text": "done um the it's sort of U sent off and",
    "start": "3126799",
    "end": "3132960"
  },
  {
    "text": "you look at the The",
    "start": "3132960",
    "end": "3138000"
  },
  {
    "text": "View I'm I'm building you know straight up functional Java state but because of",
    "start": "3138119",
    "end": "3146400"
  },
  {
    "text": "the the way AA lets me do things I can write a query where where I'm looking",
    "start": "3146400",
    "end": "3151880"
  },
  {
    "text": "for um a particular player in in this case but in yours you might be looking",
    "start": "3151880",
    "end": "3158000"
  },
  {
    "text": "for a given month and year and you'll you can uh you know use one of these",
    "start": "3158000",
    "end": "3164680"
  },
  {
    "text": "queries to pull the month and year out of the view that you've been generating uh and like I said there's a",
    "start": "3164680",
    "end": "3170559"
  },
  {
    "text": "couple of options there you can store all of the historical stuff in one View",
    "start": "3170559",
    "end": "3177119"
  },
  {
    "text": "uh or you could have those views as um you know more like this where you're",
    "start": "3177119",
    "end": "3184079"
  },
  {
    "text": "going to filter on on certain columns the it's you'll just have to figure out",
    "start": "3184079",
    "end": "3190319"
  },
  {
    "text": "you know what your trade-offs are going to be based on you know how much data",
    "start": "3190319",
    "end": "3196240"
  },
  {
    "text": "you're storing that you want available to these views versus you know sort of U",
    "start": "3196240",
    "end": "3201319"
  },
  {
    "text": "archived in Cold Storage uh what your growth rate is uh on",
    "start": "3201319",
    "end": "3206960"
  },
  {
    "text": "the the data that you're storing all those sorts of things but a short",
    "start": "3206960",
    "end": "3212040"
  },
  {
    "text": "version is you can create views that are joins of uh events from multiple",
    "start": "3212040",
    "end": "3219160"
  },
  {
    "text": "entities and that's a really good way of automatically generating these sort of",
    "start": "3219160",
    "end": "3224960"
  },
  {
    "text": "month-by-month reports so instead of going thinking of it as going back in time uh think of it",
    "start": "3224960",
    "end": "3233079"
  },
  {
    "text": "as generating these monthly reports uh on the",
    "start": "3233079",
    "end": "3238680"
  },
  {
    "text": "Fly interesting that's a good way to good way to put it all right uh lots of",
    "start": "3238680",
    "end": "3243960"
  },
  {
    "text": "lots of questions here I'm let see how many we can get to before the the time's up uh what can I do if my system is",
    "start": "3243960",
    "end": "3249319"
  },
  {
    "text": "event sourced but I require to provide a facade that has read after write",
    "start": "3249319",
    "end": "3256359"
  },
  {
    "text": "consistency uh that's an excellent question because the chess game has read after write",
    "start": "3256359",
    "end": "3261920"
  },
  {
    "text": "consistency so let's see if I look at first I'll take a look at the API and",
    "start": "3261920",
    "end": "3267920"
  },
  {
    "text": "I'll show you the endpoint inside the endpoint for uh my",
    "start": "3267920",
    "end": "3274640"
  },
  {
    "text": "matches you'll see",
    "start": "3274640",
    "end": "3280319"
  },
  {
    "text": "um yeah get matches uh",
    "start": "3280440",
    "end": "3286000"
  },
  {
    "text": "nope Lobby enity yeah this is it right here so the lobby when I look",
    "start": "3286000",
    "end": "3293799"
  },
  {
    "text": "at this um this is the list of pending matches right",
    "start": "3293799",
    "end": "3300040"
  },
  {
    "text": "and uh as soon as I create a pending match that data is available immediately",
    "start": "3300040",
    "end": "3308000"
  },
  {
    "text": "and you can see it in the chess application and if you look you'll see what I'm doing is I'm calling get",
    "start": "3308000",
    "end": "3315000"
  },
  {
    "text": "pending matches on the lobby entity itself and I'm not using a view so if I",
    "start": "3315000",
    "end": "3321319"
  },
  {
    "text": "look at the lobby entity",
    "start": "3321319",
    "end": "3325359"
  },
  {
    "text": "uh get pending matches here is look at this I'm just give me my current state",
    "start": "3331720",
    "end": "3337520"
  },
  {
    "text": "call the pending matches function on it and the pending matches on the lobby",
    "start": "3337520",
    "end": "3344559"
  },
  {
    "text": "um object which is in domain you'll see here",
    "start": "3344559",
    "end": "3353559"
  },
  {
    "text": "um uh yeah it's it's in here somewhere um but",
    "start": "3353960",
    "end": "3359760"
  },
  {
    "text": "anyway again all of this stuff is just you know um Java records and AA is",
    "start": "3359760",
    "end": "3367079"
  },
  {
    "text": "taking care of the persistence but to again to sort of recap the answer to the",
    "start": "3367079",
    "end": "3372559"
  },
  {
    "text": "question is that if you want eventually consistent data query it from your views",
    "start": "3372559",
    "end": "3378160"
  },
  {
    "text": "if you need consistent data query it from The Entity because you're",
    "start": "3378160",
    "end": "3383440"
  },
  {
    "text": "guaranteed that if you're command um was",
    "start": "3383440",
    "end": "3388839"
  },
  {
    "text": "received successfully by The Entity um it state will have updated before you",
    "start": "3388839",
    "end": "3394280"
  },
  {
    "text": "make your query okay thank you and then maybe time",
    "start": "3394280",
    "end": "3399760"
  },
  {
    "text": "for for one last one okay what are the primary domains of your recent projects with event sourcing applied any domains",
    "start": "3399760",
    "end": "3407079"
  },
  {
    "text": "you would not recommend using such an approach uh so for samples um I've used",
    "start": "3407079",
    "end": "3416520"
  },
  {
    "text": "you know uh chess um the shopping cart sample that we",
    "start": "3416520",
    "end": "3421559"
  },
  {
    "text": "have banking is always a good s sample domain uh one of the domains that was um",
    "start": "3421559",
    "end": "3430799"
  },
  {
    "text": "my favorite was uh without giving away any any",
    "start": "3430799",
    "end": "3438920"
  },
  {
    "text": "specific details and this was um prior to me being at AA um there was a",
    "start": "3438920",
    "end": "3446839"
  },
  {
    "text": "think about a a small event sourced system sitting on uh a device out on the",
    "start": "3446839",
    "end": "3453400"
  },
  {
    "text": "edge so um physically in the field and so there was an Event Source system on U",
    "start": "3453400",
    "end": "3462000"
  },
  {
    "text": "thousands of these uh devices in the field and then there's an event sourced system sitting in the cloud and um used",
    "start": "3462000",
    "end": "3471640"
  },
  {
    "text": "a topic publisher to uh",
    "start": "3471640",
    "end": "3476760"
  },
  {
    "text": "get events from the edge into the cloud but there was sort of",
    "start": "3476760",
    "end": "3483400"
  },
  {
    "text": "a not just a rate limiter but uh you know there's a bunch of really really",
    "start": "3483400",
    "end": "3489440"
  },
  {
    "text": "fast data happening on the edge and then um the topic publisher was essentially",
    "start": "3489440",
    "end": "3497240"
  },
  {
    "text": "only sampling like one out of every hundred uh of those events and then sending it up to the cloud for more",
    "start": "3497240",
    "end": "3503839"
  },
  {
    "text": "processing short answer is I think event sourcing is applicable to",
    "start": "3503839",
    "end": "3509039"
  },
  {
    "text": "every domain uh I don't think there is a a business domain that cannot be modeled",
    "start": "3509039",
    "end": "3515480"
  },
  {
    "text": "as events all right well uh scorching hot",
    "start": "3515480",
    "end": "3520839"
  },
  {
    "text": "take there we can we can close the webinar with that there's a few other questions that we didn't have a chance to get to uh so thank you all for your",
    "start": "3520839",
    "end": "3527359"
  },
  {
    "text": "for your time and and participation and attention here and of course thank you to to Kevin for sharing some of his uh",
    "start": "3527359",
    "end": "3532839"
  },
  {
    "text": "his expertise um uh with that you stay tuned for the recording and slides coming to your inbox and we will see you",
    "start": "3532839",
    "end": "3539359"
  },
  {
    "text": "next time good day everyone",
    "start": "3539359",
    "end": "3543920"
  }
]