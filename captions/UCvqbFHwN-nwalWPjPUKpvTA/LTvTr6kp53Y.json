[
  {
    "text": "hi everyone and welcome to the cncf on-demand webinar an introduction to",
    "start": "539",
    "end": "6240"
  },
  {
    "text": "feature flagging and open feature so in this call I'm going to explain why",
    "start": "6240",
    "end": "11519"
  },
  {
    "text": "a software developers and sres are software needs to be delivered safely",
    "start": "11519",
    "end": "17279"
  },
  {
    "text": "I'll talk about some ways to do this that the industry is already doing and",
    "start": "17279",
    "end": "22380"
  },
  {
    "text": "how those techniques relate to Progressive delivery I'll explain how feature Flags can be used as your secret",
    "start": "22380",
    "end": "28080"
  },
  {
    "text": "weapon to improve your continuous delivery processes and why open feature",
    "start": "28080",
    "end": "33120"
  },
  {
    "text": "is even necessary in today's tooling ecosystem and of course I'll give live demos of",
    "start": "33120",
    "end": "40320"
  },
  {
    "text": "feature flagging with open feature the first demo will be in a non-kubernetes",
    "start": "40320",
    "end": "45780"
  },
  {
    "text": "setup and the second will be on a kubernetes cluster so who am I I'm Adam",
    "start": "45780",
    "end": "51239"
  },
  {
    "text": "Gardner I'm a cncf and continuous delivery Foundation Ambassador I work",
    "start": "51239",
    "end": "56699"
  },
  {
    "text": "for dynatrace and I contribute to and maintain a number of Open Source",
    "start": "56699",
    "end": "62579"
  },
  {
    "text": "projects as you can hear from the accent I'm originally from the UK but now live in Brisbane Australia and outside work",
    "start": "62579",
    "end": "69180"
  },
  {
    "text": "you'll probably find me in on or under the sea because my favorite hobby is",
    "start": "69180",
    "end": "74640"
  },
  {
    "text": "scuba diving so enough about me what is open feature well I'll get into the",
    "start": "74640",
    "end": "81780"
  },
  {
    "text": "details later but for now understand that openfeature exists to bring standardization across the open source",
    "start": "81780",
    "end": "89700"
  },
  {
    "text": "feature flagging tools in the commercial vendors that are out there feature flagging is useful for both day one",
    "start": "89700",
    "end": "96479"
  },
  {
    "text": "activities that is the actual deployment of the software and day two activities",
    "start": "96479",
    "end": "101579"
  },
  {
    "text": "or the day-to-day running of the application and I'll I'll talk about both but let's start on day one let's",
    "start": "101579",
    "end": "109320"
  },
  {
    "text": "start with the basics getting software to the end user so you know you want to",
    "start": "109320",
    "end": "115500"
  },
  {
    "text": "get that software to users as quickly as possible so let's talk about some of the",
    "start": "115500",
    "end": "121860"
  },
  {
    "text": "existing techniques that are currently used to deliver software to end users on",
    "start": "121860",
    "end": "127799"
  },
  {
    "text": "day one and the most basic way of course is just to set up a time of day that",
    "start": "127799",
    "end": "133080"
  },
  {
    "text": "your website or service will be down you tell your end users about this in advance and then when the time comes you",
    "start": "133080",
    "end": "139739"
  },
  {
    "text": "just send them all to a holding page you turn off version one and then you turn",
    "start": "139739",
    "end": "145379"
  },
  {
    "text": "on version two when you're nice and ready send everyone back to the website",
    "start": "145379",
    "end": "150840"
  },
  {
    "text": "and now everyone gets version two all done this technique is simple and it's cost",
    "start": "150840",
    "end": "156660"
  },
  {
    "text": "effective it requires no or little additional staff training or tooling but",
    "start": "156660",
    "end": "162000"
  },
  {
    "text": "it's not so good for Mission critical applications you know the really important ones that actually make you",
    "start": "162000",
    "end": "167879"
  },
  {
    "text": "the money imagine Google going down every time they wanted to do an upgrade",
    "start": "167879",
    "end": "174360"
  },
  {
    "text": "potentially it can also cause you headaches imagine that this is for an internal system okay and you update that",
    "start": "174360",
    "end": "181080"
  },
  {
    "text": "internal system or at 4am on a Sunday that's fine and no one is using the",
    "start": "181080",
    "end": "186599"
  },
  {
    "text": "system so there are no complaints but when will you know about that first well",
    "start": "186599",
    "end": "191760"
  },
  {
    "text": "the first time you're going to know about that is Monday morning when everyone tries to log in and now guess",
    "start": "191760",
    "end": "196980"
  },
  {
    "text": "how many tickets you're going to have come Monday lunchtime sitting in your queue",
    "start": "196980",
    "end": "202500"
  },
  {
    "text": "the second technique is called a blue green deployment with this technique you spin up a complete replica of the",
    "start": "202500",
    "end": "209459"
  },
  {
    "text": "environment so of production for the new version for the Green version and when",
    "start": "209459",
    "end": "214500"
  },
  {
    "text": "you're ready you switch everyone from old to new from blue to green this has the benefit of being you know",
    "start": "214500",
    "end": "221760"
  },
  {
    "text": "on paper at least a fairly easy deployment method the the big downside",
    "start": "221760",
    "end": "227159"
  },
  {
    "text": "here are cost and complexity to do this safely you really need to run two",
    "start": "227159",
    "end": "232980"
  },
  {
    "text": "complete copies of production and that's easier said than done and even after you've switched to the new version to",
    "start": "232980",
    "end": "239940"
  },
  {
    "text": "Green it's common to leave Blue running for a while so that you can switch users back if there is an issue and of course",
    "start": "239940",
    "end": "246659"
  },
  {
    "text": "running all of that is expensive you've at least double your Cloud Bill and then",
    "start": "246659",
    "end": "251879"
  },
  {
    "text": "add on staff costs and time to build the new environment and figure out how to",
    "start": "251879",
    "end": "257040"
  },
  {
    "text": "actually do this and then build in any sub security or observability that you",
    "start": "257040",
    "end": "262680"
  },
  {
    "text": "need etc etc the other thing you might have noticed about these uh deployment strategies is",
    "start": "262680",
    "end": "269160"
  },
  {
    "text": "they're blunt instruments either everyone's on version one or everyone's on version two wouldn't it be nice to be",
    "start": "269160",
    "end": "274860"
  },
  {
    "text": "a little bit more granular about who is is on which version and this is where Canary deployments can come in so coal",
    "start": "274860",
    "end": "282360"
  },
  {
    "text": "miners used to take canaries the birds down the mines with them the idea being that the birds were the safety net coal",
    "start": "282360",
    "end": "290460"
  },
  {
    "text": "mining of course can release deadly gases and the birds were more sensitive to this gas than the miners so if the",
    "start": "290460",
    "end": "296880"
  },
  {
    "text": "birds felt the effects the miners knew they were forewarned and they could get out of the mine pretty quick so the",
    "start": "296880",
    "end": "303780"
  },
  {
    "text": "canaries again were the miners safety net so what's that got to do with",
    "start": "303780",
    "end": "308940"
  },
  {
    "text": "software why do we call it canaries well a canary deployment acts in the same way",
    "start": "308940",
    "end": "313979"
  },
  {
    "text": "you're intentionally releasing version two to only a small subset of your users",
    "start": "313979",
    "end": "319560"
  },
  {
    "text": "for example one or two percent You observe that User Group extremely closely and then if anything happens to",
    "start": "319560",
    "end": "327840"
  },
  {
    "text": "that group yes you know they are impacted but you now know that so and",
    "start": "327840",
    "end": "333660"
  },
  {
    "text": "you now know that you cannot roll out to other users on the other hand if nothing goes wrong you know that you can roll",
    "start": "333660",
    "end": "340320"
  },
  {
    "text": "out to a slightly higher percentage of users for example five percent you",
    "start": "340320",
    "end": "345780"
  },
  {
    "text": "repeat the process until of course hopefully everyone is on version two",
    "start": "345780",
    "end": "350820"
  },
  {
    "text": "so Canary releases can limit the blast radius of changes",
    "start": "350820",
    "end": "355979"
  },
  {
    "text": "um and and with that you're starting to progressively deliver your software that is delivering software in small",
    "start": "355979",
    "end": "362520"
  },
  {
    "text": "controlled increments the advantages to Canary releases are that you're testing in production you're testing with real",
    "start": "362520",
    "end": "369419"
  },
  {
    "text": "users and real traffic and real infrastructure you the the users are using the system the real the way real",
    "start": "369419",
    "end": "376500"
  },
  {
    "text": "users do you can do true side-by-side comparisons of version 1 and version two",
    "start": "376500",
    "end": "382400"
  },
  {
    "text": "Canary deployments can be lower cost than blue or green because at the end of",
    "start": "382400",
    "end": "387660"
  },
  {
    "text": "the day you've only got one production environment about having said that costs can easily spiral with Canary",
    "start": "387660",
    "end": "394199"
  },
  {
    "text": "deployments you need extremely thorough observability to make sure that you can",
    "start": "394199",
    "end": "399240"
  },
  {
    "text": "catch anything with those you know with that subset of canary users and that",
    "start": "399240",
    "end": "405539"
  },
  {
    "text": "that observability is not an easy thing to get right you'll probably also need to buy build additional tooling to",
    "start": "405539",
    "end": "413340"
  },
  {
    "text": "actually do the canary deployment releases and then you'll have all of the Hidden costs like staff training and",
    "start": "413340",
    "end": "421020"
  },
  {
    "text": "enablement on all of this new technology to enhance Canary releases to take it",
    "start": "421020",
    "end": "426419"
  },
  {
    "text": "one step further wouldn't it be nice to have a way to be even more granular about who is targeted what about only",
    "start": "426419",
    "end": "432360"
  },
  {
    "text": "the testers getting the new version or only the customers who want the latest",
    "start": "432360",
    "end": "437520"
  },
  {
    "text": "and greatest and maybe have have signed a disclaimer accepting that potential",
    "start": "437520",
    "end": "442680"
  },
  {
    "text": "risk what about people in a certain country I think I heard a story that Facebook roll",
    "start": "442680",
    "end": "449759"
  },
  {
    "text": "out their new features to New Zealand first because obviously they're first in the world it's a small country so it's a",
    "start": "449759",
    "end": "456240"
  },
  {
    "text": "natural canary so with traditional canaries to do that you need extra infrastructure maybe a",
    "start": "456240",
    "end": "463139"
  },
  {
    "text": "service mesh or a load balancer that's kind of able to inspect that layer 7",
    "start": "463139",
    "end": "468720"
  },
  {
    "text": "traffic and make those Intelligent Decisions based on the you know some value in the traffic again though that",
    "start": "468720",
    "end": "476400"
  },
  {
    "text": "increases cost and complexity so if standard deployments in blue green are",
    "start": "476400",
    "end": "481919"
  },
  {
    "text": "the hammer and canaries are the knife then what are feature flux well feature",
    "start": "481919",
    "end": "487919"
  },
  {
    "text": "flux can be your scalpel feature Flags give you the ability to do that cool",
    "start": "487919",
    "end": "493500"
  },
  {
    "text": "Advanced Canary layer 7 traffic routing stuff without requiring new",
    "start": "493500",
    "end": "499500"
  },
  {
    "text": "infrastructure or redeployments but there is a mindset shift because unlike",
    "start": "499500",
    "end": "505319"
  },
  {
    "text": "the other deployment methods you don't deploy and run two copies two tube",
    "start": "505319",
    "end": "510840"
  },
  {
    "text": "versions of the of the code you run one copy and you you deploy the features and",
    "start": "510840",
    "end": "516779"
  },
  {
    "text": "all new features are hidden behind feature Flags so unless you explicitly",
    "start": "516779",
    "end": "522419"
  },
  {
    "text": "enable the feature flag or enable the users to to access the feature Flags",
    "start": "522419",
    "end": "527700"
  },
  {
    "text": "then the feature itself is hidden now feature Flags also live outside of your application and so the changes to those",
    "start": "527700",
    "end": "534839"
  },
  {
    "text": "can take effect immediately without a redeployment or a restart and if you",
    "start": "534839",
    "end": "540660"
  },
  {
    "text": "think about it using feature Flags you you've gained the ability to do Canary deployments almost automatically",
    "start": "540660",
    "end": "547920"
  },
  {
    "text": "feature Flags can also help on the day two operations you know that kind of day-to-day BAU running of the",
    "start": "547920",
    "end": "554940"
  },
  {
    "text": "application once it's actually in production because if the sres find an issue in the application they can",
    "start": "554940",
    "end": "561839"
  },
  {
    "text": "reconfigure the feature Flags again from outside to change the behavior of the",
    "start": "561839",
    "end": "567240"
  },
  {
    "text": "application at runtime and you'll actually see this later in the in the demos",
    "start": "567240",
    "end": "572700"
  },
  {
    "text": "now if there is a downside to feature flags as that they do need to be put into the application by the developers",
    "start": "572700",
    "end": "579839"
  },
  {
    "text": "feature flags are not something that can be bolted on after the fact feature",
    "start": "579839",
    "end": "585660"
  },
  {
    "text": "flags are then a software development concept that allows you to enable",
    "start": "585660",
    "end": "590820"
  },
  {
    "text": "disable or change the behavior of a feature in the application without",
    "start": "590820",
    "end": "595980"
  },
  {
    "text": "modifying the source code or requiring a redeployment so what does the",
    "start": "595980",
    "end": "601320"
  },
  {
    "text": "architecture of a feature flag enabled application actually look like first of",
    "start": "601320",
    "end": "606959"
  },
  {
    "text": "course you need a feature flag provider this is the source of your feature Flags it could be something you developed",
    "start": "606959",
    "end": "613800"
  },
  {
    "text": "in-house an existing open source project or it could be a paid for vendor it",
    "start": "613800",
    "end": "619920"
  },
  {
    "text": "could be as simple as a database or it could be a Json file all the way up to a",
    "start": "619920",
    "end": "625800"
  },
  {
    "text": "full platform with analytics user authentication and so on and so forth",
    "start": "625800",
    "end": "631200"
  },
  {
    "text": "when you have your backend your application code then calls the provider to ask for the value of whatever feature",
    "start": "631200",
    "end": "638459"
  },
  {
    "text": "flag it is that that you need your application could also send contextual",
    "start": "638459",
    "end": "643560"
  },
  {
    "text": "information such as the user's location their email address their loyalty tier",
    "start": "643560",
    "end": "649079"
  },
  {
    "text": "or you know whatever is important to to maybe change the decision of the flag",
    "start": "649079",
    "end": "654660"
  },
  {
    "text": "because the feature the flag provider can then use that information to change the value that's sent back to your",
    "start": "654660",
    "end": "661380"
  },
  {
    "text": "application so for example imagine a new feature that's disabled for Everyone by",
    "start": "661380",
    "end": "666839"
  },
  {
    "text": "default it is released safely because it is disabled by default though your flag",
    "start": "666839",
    "end": "672120"
  },
  {
    "text": "definition contains a rule that says well if I get contextual information that the user is in the testing group",
    "start": "672120",
    "end": "678720"
  },
  {
    "text": "instead of sending back disabled enable it for them send back enabled and that",
    "start": "678720",
    "end": "684480"
  },
  {
    "text": "way the testers can access the feature in production but only they can and that sounds perfect right",
    "start": "684480",
    "end": "691560"
  },
  {
    "text": "but I mean we again we live in the real world so let's scale that up to a",
    "start": "691560",
    "end": "697019"
  },
  {
    "text": "realistic size so now you have multiple Services multiple teams in your organization so imagine the best case",
    "start": "697019",
    "end": "703800"
  },
  {
    "text": "scenario here the business has mandated that all of the teams in this organization use a particular feature",
    "start": "703800",
    "end": "710459"
  },
  {
    "text": "flag provider and that would seem to be problem solved right well what happens",
    "start": "710459",
    "end": "715860"
  },
  {
    "text": "if the business decide to change the feature flag provider now every team has",
    "start": "715860",
    "end": "721800"
  },
  {
    "text": "a huge job to recode all of that plumbing in their application and redo",
    "start": "721800",
    "end": "727140"
  },
  {
    "text": "it for whatever new provider the business decides they're going to use that's of course a lot of time and money",
    "start": "727140",
    "end": "734040"
  },
  {
    "text": "spent just to move providers now imagine a more realistic scenario in which each",
    "start": "734040",
    "end": "740160"
  },
  {
    "text": "team has kind of organically adopted the feature flags that they use and they've",
    "start": "740160",
    "end": "746160"
  },
  {
    "text": "all decided to use whatever provider they like you know at the time when they they adopted it developers from one team",
    "start": "746160",
    "end": "753660"
  },
  {
    "text": "can't easily transfer to another team they need to learn that new feature flag provider and the ways to interact with",
    "start": "753660",
    "end": "760320"
  },
  {
    "text": "it more importantly nothing's the same there's no standardization on on how",
    "start": "760320",
    "end": "766079"
  },
  {
    "text": "feature Flags work what functionality they have the providers the support or",
    "start": "766079",
    "end": "771120"
  },
  {
    "text": "or even the languages that are supported so really what's needed here is a new",
    "start": "771120",
    "end": "776639"
  },
  {
    "text": "layer in between the application and the provider this sort of magic API layer",
    "start": "776639",
    "end": "781920"
  },
  {
    "text": "that would standardize access to the back end and if we had that we can say",
    "start": "781920",
    "end": "788760"
  },
  {
    "text": "you know set the provider to Tool a and then go get me a feature flag of Foo and",
    "start": "788760",
    "end": "794160"
  },
  {
    "text": "then this magic layer will be able to figure out the how I translate the you know into the provider code",
    "start": "794160",
    "end": "800700"
  },
  {
    "text": "and then each team for their application has a standard way to use feature Flags the teams can experiment with different",
    "start": "800700",
    "end": "807540"
  },
  {
    "text": "providers until they find one that really fits their their requirements how could you write such a layer yeah yeah",
    "start": "807540",
    "end": "813959"
  },
  {
    "text": "of course you could but again it's time and effort to write and maintain it and also what I've just described is the",
    "start": "813959",
    "end": "821040"
  },
  {
    "text": "open feature specification so at this point you're probably also thinking yeah well that's nice but I've got",
    "start": "821040",
    "end": "827639"
  },
  {
    "text": "environment variables I'm absolutely fine things are working perfectly and environment variables are primitive",
    "start": "827639",
    "end": "834420"
  },
  {
    "text": "feature Flags configuration can't be changed without a redeployment or a",
    "start": "834420",
    "end": "839519"
  },
  {
    "text": "restart or at least a recompilation environment variables also have no no contextual awareness so they have little",
    "start": "839519",
    "end": "846720"
  },
  {
    "text": "to no meaningful Telemetry data so you know if you change an environment variable judging the impact of that is",
    "start": "846720",
    "end": "854820"
  },
  {
    "text": "is hard if not impossible so how I mean you could and and probably",
    "start": "854820",
    "end": "860399"
  },
  {
    "text": "will decide to extract the environment variables to somewhere outside of your application for example you you might",
    "start": "860399",
    "end": "867480"
  },
  {
    "text": "start by storing them in a database this is a step in the right direction as it",
    "start": "867480",
    "end": "873480"
  },
  {
    "text": "can also add contextual support but your application code as you can see still",
    "start": "873480",
    "end": "879420"
  },
  {
    "text": "contains that hard-coded knowledge of those conditions so in this example you're stuck with checking users",
    "start": "879420",
    "end": "886440"
  },
  {
    "text": "locations and without a recode and a redeployment nothing else so moving all of that logic",
    "start": "886440",
    "end": "894180"
  },
  {
    "text": "out into a feature flag provider like this gives you really Advanced",
    "start": "894180",
    "end": "899639"
  },
  {
    "text": "capabilities now experiments can you know be be run and deployed and updated",
    "start": "899639",
    "end": "905339"
  },
  {
    "text": "independently of the application code and it's also fully observable so",
    "start": "905339",
    "end": "910639"
  },
  {
    "text": "obviously open feature is compatible with open Telemetry you can see Tracer spans and metrics for which flag",
    "start": "910639",
    "end": "917040"
  },
  {
    "text": "variants were used why they were used when they were used and more crucially what impact they had on the end user so",
    "start": "917040",
    "end": "924660"
  },
  {
    "text": "here are some other scenarios that feature Flags can Target what if the code is ready but the business is not",
    "start": "924660",
    "end": "931320"
  },
  {
    "text": "how do you ship the code and move on without holding up your other teams",
    "start": "931320",
    "end": "936660"
  },
  {
    "text": "what if the feature is implemented across multiple Services how do you coordinate the deployments of those",
    "start": "936660",
    "end": "943380"
  },
  {
    "text": "Services what if you want to enable the feature sudo randomly to see how it",
    "start": "943380",
    "end": "949800"
  },
  {
    "text": "impacts you know real world usage or performance so now that we have a",
    "start": "949800",
    "end": "955740"
  },
  {
    "text": "background of the why feature Flags you know why feature flags are so necessary what exactly is open feature",
    "start": "955740",
    "end": "964139"
  },
  {
    "text": "well open feature is a cncf Sandbox project and it's an open standard that",
    "start": "964139",
    "end": "970440"
  },
  {
    "text": "provides a vendor a tool agnostic API for feature flagging that works with",
    "start": "970440",
    "end": "976560"
  },
  {
    "text": "your favorite feature Flag Management System open feature is not a feature flag provider it is the standard to",
    "start": "976560",
    "end": "984540"
  },
  {
    "text": "which feature flag providers conform so here's an example of an open feature",
    "start": "984540",
    "end": "990600"
  },
  {
    "text": "code snippet to retrieve a Boolean value notice the first line we we tell open",
    "start": "990600",
    "end": "996240"
  },
  {
    "text": "feature about our provider and then we request that open feature retrieves a",
    "start": "996240",
    "end": "1002300"
  },
  {
    "text": "Boolean value from our provider the provider is the translation code which",
    "start": "1002300",
    "end": "1007759"
  },
  {
    "text": "transforms that standard get Boolean value which by the way never changes",
    "start": "1007759",
    "end": "1013220"
  },
  {
    "text": "regardless of which provider you decide to use in the future into the tool specific API calls so don't worry the",
    "start": "1013220",
    "end": "1022579"
  },
  {
    "text": "the tool maintainers and the vent does write the provider code so that part is",
    "start": "1022579",
    "end": "1027620"
  },
  {
    "text": "actually already done for you you don't even need to know their apis so what does all of this mean well",
    "start": "1027620",
    "end": "1034160"
  },
  {
    "text": "trying out a new provider is as simple as changing that first line of code",
    "start": "1034160",
    "end": "1039500"
  },
  {
    "text": "second you write your flag retrieval code once the get Boolean value and you",
    "start": "1039500",
    "end": "1045079"
  },
  {
    "text": "never have to touch it again it doesn't change based on which provider you use and third every team now has a single",
    "start": "1045079",
    "end": "1053360"
  },
  {
    "text": "common well understood and well-specified way to use feature Flags",
    "start": "1053360",
    "end": "1058520"
  },
  {
    "text": "so talking of the tools and the vendors open feature is being developed with the",
    "start": "1058520",
    "end": "1064160"
  },
  {
    "text": "industry it's not like open feature is coming along and saying this is how you do it what that means is it almost",
    "start": "1064160",
    "end": "1071059"
  },
  {
    "text": "certainly already works with your favorite tool or vendor and even if you have a homegrown flag provider like a",
    "start": "1071059",
    "end": "1077780"
  },
  {
    "text": "database it's easy to add support for your homegrown solution as well so it's",
    "start": "1077780",
    "end": "1083120"
  },
  {
    "text": "time to see open feature in action and for the first demo I'm going to be using an open source open feature compliant",
    "start": "1083120",
    "end": "1089900"
  },
  {
    "text": "flag provider called flag D so flag D is a tool that implements open feature flag",
    "start": "1089900",
    "end": "1095600"
  },
  {
    "text": "D is not open feature flag D comes as a binary and a Docker container so it can",
    "start": "1095600",
    "end": "1102140"
  },
  {
    "text": "run as a service as I'll show you in the first section or as you'll see in the",
    "start": "1102140",
    "end": "1107299"
  },
  {
    "text": "second demo that I do you can run it as a sidecar in kubernetes so flag D reads",
    "start": "1107299",
    "end": "1113299"
  },
  {
    "text": "one or more flag sources that are that is Json files or yaml files and makes",
    "start": "1113299",
    "end": "1118820"
  },
  {
    "text": "those flags available via an API so in this demo I'll show you how feature",
    "start": "1118820",
    "end": "1124400"
  },
  {
    "text": "flags are read at runtime without a redeployment of the the application being necessary I'll then show flagity",
    "start": "1124400",
    "end": "1131900"
  },
  {
    "text": "reading from multiple flag sources in my case Json files and then I'll extend",
    "start": "1131900",
    "end": "1137660"
  },
  {
    "text": "that basic flag to include contextual information the the flag is reconfigured",
    "start": "1137660",
    "end": "1143660"
  },
  {
    "text": "to return one of three values Triple A by default for all users Triple B for",
    "start": "1143660",
    "end": "1149840"
  },
  {
    "text": "any users where we pass an email ending in at openfeature.dev and Triple C for",
    "start": "1149840",
    "end": "1156380"
  },
  {
    "text": "any users using the Chrome browser for finally I'll show fractional evaluation",
    "start": "1156380",
    "end": "1162140"
  },
  {
    "text": "and this is useful if you want to pseudo randomly assign requests or users to",
    "start": "1162140",
    "end": "1168020"
  },
  {
    "text": "different buckets in the demo any users with email addresses ending in at faas.com or",
    "start": "1168020",
    "end": "1176000"
  },
  {
    "text": "fictional company they will match the rule so those users will then be pseudo-randomally assigned into either",
    "start": "1176000",
    "end": "1182900"
  },
  {
    "text": "red blue green or yellow buckets but whatever and importantly whatever bucket",
    "start": "1182900",
    "end": "1189740"
  },
  {
    "text": "a user is assigned to they will always get that value because you wouldn't want someone you know re-logging in or",
    "start": "1189740",
    "end": "1196640"
  },
  {
    "text": "refreshing the page and seeing a different color or a different logo or different content each time they refresh",
    "start": "1196640",
    "end": "1203480"
  },
  {
    "text": "the page so the second demo will be kubernetes native deployment of flag D we'll use",
    "start": "1203480",
    "end": "1210380"
  },
  {
    "text": "the open feature operator and its job is to watch for custom resources and ensure",
    "start": "1210380",
    "end": "1216559"
  },
  {
    "text": "that the right pods have the right values dynamically and at runtime",
    "start": "1216559",
    "end": "1222020"
  },
  {
    "text": "the open feature operator makes these values available without a restart of the Pod and thus without any downtime",
    "start": "1222020",
    "end": "1230740"
  },
  {
    "text": "this demo scenario this UI this web page will be available for you to experiment with it uses killer coder so thank you",
    "start": "1231799",
    "end": "1239780"
  },
  {
    "text": "to killakota for providing the infrastructure for this so as you load",
    "start": "1239780",
    "end": "1245120"
  },
  {
    "text": "this everything starts everything uh kind of installs in the background and you get uh gitty which is a git",
    "start": "1245120",
    "end": "1252380"
  },
  {
    "text": "um a git repository so we've pre-loaded a repo in here with some flag values so",
    "start": "1252380",
    "end": "1258140"
  },
  {
    "text": "this Json file is the format in which flag D expects Flags so you can see here",
    "start": "1258140",
    "end": "1264559"
  },
  {
    "text": "we have a number of flags one called my bull flag one called my string flag and",
    "start": "1264559",
    "end": "1270919"
  },
  {
    "text": "they just return different types of variants so variants are the",
    "start": "1270919",
    "end": "1276860"
  },
  {
    "text": "possible results and if we look at my bull flag you'll notice that by you know the",
    "start": "1276860",
    "end": "1283280"
  },
  {
    "text": "default variant is on meaning everyone right now gets on so however you request",
    "start": "1283280",
    "end": "1289640"
  },
  {
    "text": "my bull flag you're always going to get on returned these names my bull flag my",
    "start": "1289640",
    "end": "1295340"
  },
  {
    "text": "string flag that's up to you that's your flag key if we scroll down and look at something a little bit more complicated",
    "start": "1295340",
    "end": "1301640"
  },
  {
    "text": "we've got a flag called FIB algo it has possible variants of recursive memo Loop",
    "start": "1301640",
    "end": "1308000"
  },
  {
    "text": "and BNA and of course the default variant is recursive so you can read",
    "start": "1308000",
    "end": "1313760"
  },
  {
    "text": "that as there are a number of possible results when we evaluate this flag but right now by default everyone is just",
    "start": "1313760",
    "end": "1320000"
  },
  {
    "text": "going to get the recursive string now our application will use that to use the",
    "start": "1320000",
    "end": "1326179"
  },
  {
    "text": "recursive algorithm for Fibonacci calculation but there is a targeting",
    "start": "1326179",
    "end": "1331280"
  },
  {
    "text": "rule here that references a rule set it says if this email with faas matches if",
    "start": "1331280",
    "end": "1338480"
  },
  {
    "text": "it's true then the evaluation Returns the BNA variant otherwise if it's if if",
    "start": "1338480",
    "end": "1345620"
  },
  {
    "text": "that evaluates default it doesn't return anything null so we drop back to the",
    "start": "1345620",
    "end": "1350780"
  },
  {
    "text": "default variant so what is that rule what is email with FAS and how do we specify it so if we",
    "start": "1350780",
    "end": "1358340"
  },
  {
    "text": "scroll all the way to the bottom we've got this email with fast and it basically says well if the VAR is email",
    "start": "1358340",
    "end": "1366380"
  },
  {
    "text": "and if the value that we pass if at fas.com is in that string that we pass",
    "start": "1366380",
    "end": "1374120"
  },
  {
    "text": "then it's true then the rule is true so you can read that as our application is",
    "start": "1374120",
    "end": "1379760"
  },
  {
    "text": "going to take the user's email address pass it back through open feature to the",
    "start": "1379760",
    "end": "1386000"
  },
  {
    "text": "um to flag D flag D will then use that contextual information and if the email",
    "start": "1386000",
    "end": "1391100"
  },
  {
    "text": "ends in at fais.com those users and those users only get the BNA algorithm",
    "start": "1391100",
    "end": "1397880"
  },
  {
    "text": "but everyone else remains on the recursive algorithm so that's the way you can start to kind of canary your",
    "start": "1397880",
    "end": "1405500"
  },
  {
    "text": "deployments so let's see that in action let's start flag D in tab one",
    "start": "1405500",
    "end": "1412580"
  },
  {
    "text": "and I'll open a new tab I'll leave that running and I'm just going to test that flag D",
    "start": "1412580",
    "end": "1418340"
  },
  {
    "text": "actually works so I've just done a post to the flag the endpoint notice it is on",
    "start": "1418340",
    "end": "1425120"
  },
  {
    "text": "Port 8013 I've asked it to resolve a string and I've passed it the header",
    "start": "1425120",
    "end": "1431419"
  },
  {
    "text": "color flag key and I haven't given it any context and so the value has come back as red",
    "start": "1431419",
    "end": "1438620"
  },
  {
    "text": "and the reason is default and the variant is red so if we look at our flag definition we can see what's going on in",
    "start": "1438620",
    "end": "1444620"
  },
  {
    "text": "the back end well we've got a number of possible variants red blue green and yellow the default variant is red but",
    "start": "1444620",
    "end": "1452120"
  },
  {
    "text": "we've also got a targeting Rule and again it's that email with with at fas.com",
    "start": "1452120",
    "end": "1458659"
  },
  {
    "text": "well if you notice the context here is empty so I didn't pass an email so of course I",
    "start": "1458659",
    "end": "1465140"
  },
  {
    "text": "get the default variant which is red and that's that's exactly what we want that's the safe default",
    "start": "1465140",
    "end": "1471020"
  },
  {
    "text": "so now let's change that to something different let's change that default variant to Yellow",
    "start": "1471020",
    "end": "1478658"
  },
  {
    "text": "I'll commit the changes and then I will re-request the feature flag",
    "start": "1483559",
    "end": "1489080"
  },
  {
    "text": "and now of course we get yellow as expected so in a real system you could have",
    "start": "1489080",
    "end": "1494720"
  },
  {
    "text": "multiple sources of the flags you might have multiple teams or multiple developers working on different bits of",
    "start": "1494720",
    "end": "1501200"
  },
  {
    "text": "their code and they have their flags and you have yours how do you have flag D",
    "start": "1501200",
    "end": "1507020"
  },
  {
    "text": "um you read both of those sources of flux well that's that's possible so what I'm now going to do is create a new file",
    "start": "1507020",
    "end": "1513440"
  },
  {
    "text": "with a new flag called brand new flag and write it to disk now I'm going to",
    "start": "1513440",
    "end": "1519440"
  },
  {
    "text": "attempt to retrieve that new flag value from flag D and of course this should",
    "start": "1519440",
    "end": "1524539"
  },
  {
    "text": "fail because we haven't told flag D about the new file yet and of course there we are it does not",
    "start": "1524539",
    "end": "1532220"
  },
  {
    "text": "found flaggedy error flag not found as as expected now what I'm going to do is restart flag",
    "start": "1532220",
    "end": "1539059"
  },
  {
    "text": "D so I'll flip back to uh tab one and I'll restart it pointing at both files",
    "start": "1539059",
    "end": "1545720"
  },
  {
    "text": "so I've just repeated the URI command one pointing to our existing Flags stored in um on a web server in in git",
    "start": "1545720",
    "end": "1553159"
  },
  {
    "text": "and the other on a local file in templocalfi flags.json so now I'll go",
    "start": "1553159",
    "end": "1559520"
  },
  {
    "text": "back to uh Tab 2 and retrieve that new flag again and this time",
    "start": "1559520",
    "end": "1565820"
  },
  {
    "text": "we do get a value we get a the value is this and the reason is static so that",
    "start": "1565820",
    "end": "1571460"
  },
  {
    "text": "proves that flag D is actually reading both of those flag sources and um making them both available via the",
    "start": "1571460",
    "end": "1578419"
  },
  {
    "text": "API to me and as a developer I then don't have to care where my flags are",
    "start": "1578419",
    "end": "1583520"
  },
  {
    "text": "stored okay so that was a very basic set of flags they were pretty much",
    "start": "1583520",
    "end": "1589460"
  },
  {
    "text": "almost environment variables they were on or off apart from the targeting groups let's look at something a little bit more complicated now in the flag",
    "start": "1589460",
    "end": "1596720"
  },
  {
    "text": "Json file in gitty you have a flag called targeted flag again we've got a",
    "start": "1596720",
    "end": "1602659"
  },
  {
    "text": "number of variants first second and third and the default variant is first",
    "start": "1602659",
    "end": "1608179"
  },
  {
    "text": "but now we've got a couple of different rules we've got a rule that says if the",
    "start": "1608179",
    "end": "1614299"
  },
  {
    "text": "email if the variable email is passed and at openfeature.dev is in that string",
    "start": "1614299",
    "end": "1621039"
  },
  {
    "text": "then those users get the second variant so BBB in this case or if the",
    "start": "1621039",
    "end": "1630200"
  },
  {
    "text": "email Isn't passed but user agent is and it's cro and chrome is in there then",
    "start": "1630200",
    "end": "1636799"
  },
  {
    "text": "those users get third and everybody else just gets the default variant so you can",
    "start": "1636799",
    "end": "1643400"
  },
  {
    "text": "build up very complicated um layers of of how things work here",
    "start": "1643400",
    "end": "1649700"
  },
  {
    "text": "so let's curl this and by default of course we get AAA the default variant",
    "start": "1649700",
    "end": "1657440"
  },
  {
    "text": "now let's try it uh passing the context with email as the key and me at",
    "start": "1657440",
    "end": "1664900"
  },
  {
    "text": "openfeature.dev as the email address and you can see it's a targeting match because we get BBB and we get second",
    "start": "1664900",
    "end": "1672620"
  },
  {
    "text": "and now finally let's do Chrome again user agent is chrome123 and we get",
    "start": "1672620",
    "end": "1678919"
  },
  {
    "text": "CCC so now let's look at the thing I talked about earlier the pseudo-random evaluation if you look at the header",
    "start": "1678919",
    "end": "1685700"
  },
  {
    "text": "color flag again we've got some variants we've got a default variant that previously we set to Yellow",
    "start": "1685700",
    "end": "1691460"
  },
  {
    "text": "now we've got some targeting rules that you have already seen the email with fas.com but this time we've got a a",
    "start": "1691460",
    "end": "1699380"
  },
  {
    "text": "fractional evaluation and what it does is it takes the value of the email address that is coming",
    "start": "1699380",
    "end": "1706820"
  },
  {
    "text": "through and then 25 of those matching email addresses get the red variant on",
    "start": "1706820",
    "end": "1714140"
  },
  {
    "text": "line 90. 25 of them get blue 25 get green a 25 get yellow if you keep",
    "start": "1714140",
    "end": "1722360"
  },
  {
    "text": "sending the same email address I.E the same you know string they'll always get",
    "start": "1722360",
    "end": "1727640"
  },
  {
    "text": "the same color they'll always get red or they'll always get blue so let's see",
    "start": "1727640",
    "end": "1732919"
  },
  {
    "text": "that now so I'm going to pass user1 at fas.com now I don't know which variant",
    "start": "1732919",
    "end": "1738200"
  },
  {
    "text": "this is gonna get but it will always now that it's got red it will always get red",
    "start": "1738200",
    "end": "1743779"
  },
  {
    "text": "no matter how many times I run this command I'm always going to get red if I pass user 2 at fas.com",
    "start": "1743779",
    "end": "1752059"
  },
  {
    "text": "I randomly get green and I'm always going to get green and so on and so",
    "start": "1752059",
    "end": "1757700"
  },
  {
    "text": "forth now just to prove that the default variant I.E if I don't pass a context",
    "start": "1757700",
    "end": "1763580"
  },
  {
    "text": "we're back to Yellow remember that was the default variant so there you are by by mixing and",
    "start": "1763580",
    "end": "1769340"
  },
  {
    "text": "matching those rules you can create very complicated logic and that logic",
    "start": "1769340",
    "end": "1774860"
  },
  {
    "text": "actually lives outside of your application at runtime so you don't need any restarts or",
    "start": "1774860",
    "end": "1780500"
  },
  {
    "text": "redeployments as you change this stuff and and most feature flag systems allow",
    "start": "1780500",
    "end": "1786260"
  },
  {
    "text": "things like targeting rules most vendors allow targeting rules and and contextual evaluations like this so yeah that is",
    "start": "1786260",
    "end": "1795620"
  },
  {
    "text": "the first demo and now let's jump into the second demo which again uses flag D",
    "start": "1795620",
    "end": "1801620"
  },
  {
    "text": "but in a kubernetes environment",
    "start": "1801620",
    "end": "1805960"
  },
  {
    "text": "so here we are looking at the online demo the links will be in the video description so you can play around with",
    "start": "1806779",
    "end": "1813020"
  },
  {
    "text": "this so we have a kubernetes cluster with the open feature operator installed so what does the operator do well here",
    "start": "1813020",
    "end": "1820820"
  },
  {
    "text": "is our demo application and you can see Fibonacci as a service is pretty slow it",
    "start": "1820820",
    "end": "1826220"
  },
  {
    "text": "takes about four or five seconds to do our business logic to generate the number that the customers need so let's",
    "start": "1826220",
    "end": "1833000"
  },
  {
    "text": "see how we can use feature Flags to test out our new algorithm for the open",
    "start": "1833000",
    "end": "1838520"
  },
  {
    "text": "feature operator will wait for and read any custom resource definitions that are",
    "start": "1838520",
    "end": "1843919"
  },
  {
    "text": "defined as feature Flags so let's have a look at our feature flag as it stands at",
    "start": "1843919",
    "end": "1848960"
  },
  {
    "text": "the moment so we have a custom resource called feature flag configuration and this one",
    "start": "1848960",
    "end": "1854659"
  },
  {
    "text": "is called end to end now within there we have a number of feature Flags the first",
    "start": "1854659",
    "end": "1860419"
  },
  {
    "text": "one is called New welcome message the second one is called hex color and so on",
    "start": "1860419",
    "end": "1865640"
  },
  {
    "text": "and so forth so looking at the feature flag that controls the Fibonacci algorithm that is",
    "start": "1865640",
    "end": "1872059"
  },
  {
    "text": "in use the demo scenario talks about a slightly different use case and you can see that it's actually targeting users",
    "start": "1872059",
    "end": "1878720"
  },
  {
    "text": "with any app fas.com email so we're going to change that now just to Target",
    "start": "1878720",
    "end": "1884539"
  },
  {
    "text": "Sue remember in our scenario Sue is the only user that should be able to use the",
    "start": "1884539",
    "end": "1889700"
  },
  {
    "text": "new algorithm initially okay so the way to read this FIB algo",
    "start": "1889700",
    "end": "1896419"
  },
  {
    "text": "feature flag is that it is enabled and it has a couple of different variants these are the possible values that could",
    "start": "1896419",
    "end": "1903320"
  },
  {
    "text": "be returned to our application that our application can then use to perform its logic so we have the recursive algorithm",
    "start": "1903320",
    "end": "1911360"
  },
  {
    "text": "we have a memo a loop and a BNA algorithm Now by default everyone gets",
    "start": "1911360",
    "end": "1917480"
  },
  {
    "text": "the recursive algorithm however we've added an optional targeting rule to say",
    "start": "1917480",
    "end": "1922640"
  },
  {
    "text": "if the email address that we pass from the front end is Sue at fais.com",
    "start": "1922640",
    "end": "1929240"
  },
  {
    "text": "then sue and only Sue gets the BNA algorithm by default",
    "start": "1929240",
    "end": "1935299"
  },
  {
    "text": "otherwise if it doesn't match we are back to the recursive algorithm what this means is all users will get the",
    "start": "1935299",
    "end": "1942320"
  },
  {
    "text": "recursive algorithm except Sue so let's apply our updated feature flag",
    "start": "1942320",
    "end": "1948500"
  },
  {
    "text": "now as a logged out user I should still get the slow version that's safe that's",
    "start": "1948500",
    "end": "1954080"
  },
  {
    "text": "the safe default that's exactly what we want however if I open a private browser",
    "start": "1954080",
    "end": "1959659"
  },
  {
    "text": "window and log in ASU fais.com",
    "start": "1959659",
    "end": "1964460"
  },
  {
    "text": "I now get the quick version so sue is now able to experiment on her",
    "start": "1967340",
    "end": "1973940"
  },
  {
    "text": "own with the new features without impacting anyone else and remember this is in production now let's extend our",
    "start": "1973940",
    "end": "1980600"
  },
  {
    "text": "scenario to add Bob into the allowed users to do so",
    "start": "1980600",
    "end": "1986419"
  },
  {
    "text": "you simply add another line here",
    "start": "1986419",
    "end": "1990220"
  },
  {
    "text": "reapply the feature flag and now Sue remains on the quick",
    "start": "1996440",
    "end": "2002320"
  },
  {
    "text": "algorithm opening yet another incognito window and logging in as Bob",
    "start": "2002320",
    "end": "2009240"
  },
  {
    "text": "shows that Bob gets the new quick algorithm but if we log out of Bob and",
    "start": "2011799",
    "end": "2016960"
  },
  {
    "text": "log in as Ian Ian should still get the slow version and indeed he does",
    "start": "2016960",
    "end": "2022539"
  },
  {
    "text": "so we're starting to progressively roll out our software in a safe way over time",
    "start": "2022539",
    "end": "2027640"
  },
  {
    "text": "more and more users will be able to use the software that without impacting other users that we don't want to so now",
    "start": "2027640",
    "end": "2034419"
  },
  {
    "text": "imagine that we've finished rolling out to individual users or teams and we want to just roll out to anyone with an at",
    "start": "2034419",
    "end": "2041760"
  },
  {
    "text": "fais.com email address",
    "start": "2041760",
    "end": "2045539"
  },
  {
    "text": "update the flag apply the changes and test the configuration now anyone logging in with an fas.com email address",
    "start": "2049839",
    "end": "2057878"
  },
  {
    "text": "should get the quick algorithm and anyone with another email or who is unauthenticated should still get the",
    "start": "2057879",
    "end": "2064898"
  },
  {
    "text": "slow version",
    "start": "2064899",
    "end": "2067378"
  },
  {
    "text": "unauthenticated users still get the slow version that's good",
    "start": "2072599",
    "end": "2077760"
  },
  {
    "text": "Bob still gets the quick version that's good",
    "start": "2079780",
    "end": "2084240"
  },
  {
    "text": "and now login as Sarah and because of the catch-all rule Sarah",
    "start": "2085000",
    "end": "2091658"
  },
  {
    "text": "should get the new version fantastic we're in complete control at",
    "start": "2091659",
    "end": "2097240"
  },
  {
    "text": "runtime of who is able to use this new feature and who can't eventually we're going to be in a",
    "start": "2097240",
    "end": "2104200"
  },
  {
    "text": "position that we want to roll out this to all users not just selected or",
    "start": "2104200",
    "end": "2109359"
  },
  {
    "text": "internal users and that's great that's easy to do to do so just remove the targeting Rule and change the default",
    "start": "2109359",
    "end": "2116680"
  },
  {
    "text": "variant from recursive to binay",
    "start": "2116680",
    "end": "2121140"
  },
  {
    "text": "save the flag reapply the changes and now even the unauthenticated users will",
    "start": "2127000",
    "end": "2132280"
  },
  {
    "text": "get the fast algorithm doing Progressive delivery in This Way shows that we can",
    "start": "2132280",
    "end": "2137680"
  },
  {
    "text": "roll out and roll back in case there is an issue safely and at any time one",
    "start": "2137680",
    "end": "2143920"
  },
  {
    "text": "other thing to point out is that at no time did the Pod actually need a restart you can see our pod has is still running",
    "start": "2143920",
    "end": "2151240"
  },
  {
    "text": "and has been for 16 minutes so there was absolutely no downtime while we made all",
    "start": "2151240",
    "end": "2156700"
  },
  {
    "text": "of these changes so just to summarize you install the open feature operator",
    "start": "2156700",
    "end": "2163119"
  },
  {
    "text": "that installs flag D you create your feature Flags according to the custom",
    "start": "2163119",
    "end": "2168520"
  },
  {
    "text": "resource definition specification and then you annotate your application with two new annotations",
    "start": "2168520",
    "end": "2175079"
  },
  {
    "text": "openfeature.dev enabled and openfeature.dev forward slash feature flag configuration and then the feature",
    "start": "2175079",
    "end": "2182800"
  },
  {
    "text": "flag or feature flags that you need to use in your application so there we are an introduction to",
    "start": "2182800",
    "end": "2190060"
  },
  {
    "text": "feature flagging and open feature if you want to get involved the project would love to have you flagde the tool you've",
    "start": "2190060",
    "end": "2197260"
  },
  {
    "text": "seen demoed today uh and open feature both live on GitHub and at",
    "start": "2197260",
    "end": "2202380"
  },
  {
    "text": "openfeature.dev the project is also on the socials on Twitter and Linkedin and",
    "start": "2202380",
    "end": "2207880"
  },
  {
    "text": "the open feature channel of the cncf slack openfeature is a cncf Sandbox",
    "start": "2207880",
    "end": "2213520"
  },
  {
    "text": "project and believe me there's still plenty of work to be done and plenty of voices that we are yet to hear from and",
    "start": "2213520",
    "end": "2220839"
  },
  {
    "text": "want to hear from so do join the community get involved in the discussion and let's push open feature forwards",
    "start": "2220839",
    "end": "2227859"
  },
  {
    "text": "together",
    "start": "2227859",
    "end": "2230160"
  }
]