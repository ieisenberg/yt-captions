[
  {
    "start": "0",
    "end": "51000"
  },
  {
    "text": "welcome everybody to the session about a loging and best practices we're really happy to be here in cucon and I don't",
    "start": "640",
    "end": "7839"
  },
  {
    "text": "know how many times we have been here but really happy to sharing what's new and how you can deal with escalab ility",
    "start": "7839",
    "end": "13120"
  },
  {
    "text": "problems today we were going to try to do a more Hands-On session more than just going through a slides so I know",
    "start": "13120",
    "end": "19880"
  },
  {
    "text": "we're going to get a lot of Q&A we will try to fit all the Q&A during the session but if we don't have enough time",
    "start": "19880",
    "end": "25640"
  },
  {
    "text": "we just go out of the room we can be there for an hour talking about best practic issues or everything that you",
    "start": "25640",
    "end": "32719"
  },
  {
    "text": "need to solve so feel free to just raise your hand uh at the end of the talk or just talk to us at the end and as I said",
    "start": "32719",
    "end": "40960"
  },
  {
    "text": "we got access to an uh the early version of the fluent bit book for kubernetes so",
    "start": "40960",
    "end": "46160"
  },
  {
    "text": "just scan the QR code fill up the form if you want to get access to it so we",
    "start": "46160",
    "end": "51840"
  },
  {
    "start": "51000",
    "end": "447000"
  },
  {
    "text": "will start talking about the challenges that we gotten login and the main purpose of login is not to do login or",
    "start": "51840",
    "end": "58840"
  },
  {
    "text": "stct data actually is just do data analysis but if you want to do data analysis you need to extract the",
    "start": "58840",
    "end": "65439"
  },
  {
    "text": "information for that gives you the relevant insight for what's going on in applications or services and with this",
    "start": "65439",
    "end": "73320"
  },
  {
    "text": "I'm talking from the kernel to user space applications containers and everything that you have in the middle",
    "start": "73320",
    "end": "79600"
  },
  {
    "text": "and when you got an issue and you want to travel shoot things yeah everybody ask hey we are the logs give us the logs",
    "start": "79600",
    "end": "85720"
  },
  {
    "text": "but sometimes having more logs doesn't give you more value right actually more Telemetry data sometimes can add a lot",
    "start": "85720",
    "end": "92520"
  },
  {
    "text": "of noise which makes it really hard to get extract the insights from your",
    "start": "92520",
    "end": "98159"
  },
  {
    "text": "environment Services write login information to different places and",
    "start": "98159",
    "end": "103240"
  },
  {
    "text": "usually in different formats for example engx has the access log well you can configure that for different type of VOR",
    "start": "103240",
    "end": "108920"
  },
  {
    "text": "host in different type of path while other applications prefer to use the CIS",
    "start": "108920",
    "end": "114079"
  },
  {
    "text": "looc system where those CIS looc messages might end it up in a different location but as you can see the content",
    "start": "114079",
    "end": "120280"
  },
  {
    "text": "is quite different and if you're a lovely user of Windows you might end it up with the events in a different place",
    "start": "120280",
    "end": "127360"
  },
  {
    "text": "that can be only accessed by through some weird API through the system and I",
    "start": "127360",
    "end": "133200"
  },
  {
    "text": "say weird because it's really complex to do it okay and login is doesn't we don't",
    "start": "133200",
    "end": "139239"
  },
  {
    "text": "talk about just the file system log information can exist anywhere and it",
    "start": "139239",
    "end": "144640"
  },
  {
    "text": "could be yeah barlock messages barlock containers but also if you want to read the login information from the kernel",
    "start": "144640",
    "end": "150680"
  },
  {
    "text": "you want to open the the kernel the kernel messages device which is like a s to file or maybe you want to read",
    "start": "150680",
    "end": "158080"
  },
  {
    "text": "some a terminal serial interface to collect data from even if you're using a",
    "start": "158080",
    "end": "163599"
  },
  {
    "text": "running some embeded Linux environment or you're playing with constrainted environment devices you need to collect",
    "start": "163599",
    "end": "169680"
  },
  {
    "text": "the information from different places and if your application that just connecting to system D or to journal D",
    "start": "169680",
    "end": "176599"
  },
  {
    "text": "Journal D also expose its own way to consume and read the the data from there",
    "start": "176599",
    "end": "181879"
  },
  {
    "text": "and also the information around login exists not just inside the same machine",
    "start": "181879",
    "end": "186920"
  },
  {
    "text": "but also in remote endpoints if you think about kubernetes you have a distributed system and you want to",
    "start": "186920",
    "end": "192440"
  },
  {
    "text": "access the kubernetes events likely you need to go and connect to the API server which is a remote machine which is not a",
    "start": "192440",
    "end": "199840"
  },
  {
    "text": "local service inside your node and same as you go to pool for",
    "start": "199840",
    "end": "205319"
  },
  {
    "text": "information for logs sometimes you open up at TCP port or UT people to receive",
    "start": "205319",
    "end": "210799"
  },
  {
    "text": "cisl messages or others so you might guess that having all this information",
    "start": "210799",
    "end": "216920"
  },
  {
    "text": "in different formats from different sources dealing with local services and",
    "start": "216920",
    "end": "222799"
  },
  {
    "text": "remote endpoints gets really complex because at the end of the day you have to deal with all of that at the same",
    "start": "222799",
    "end": "229319"
  },
  {
    "text": "time you just cannot rely on a single file right and and if you're doing in this space logging for a while you might",
    "start": "229319",
    "end": "236000"
  },
  {
    "text": "understand what I'm trying to refer but your final goal is always to do data analysis right don't forget the go",
    "start": "236000",
    "end": "242239"
  },
  {
    "text": "nobody wake up in the morning I always said this oh I'm going to do login I'm going to do metrics no you don't care about that nobody like it but you have",
    "start": "242239",
    "end": "248879"
  },
  {
    "text": "to do it so the approach of do data analysis is gets hard when you face the",
    "start": "248879",
    "end": "256120"
  },
  {
    "text": "true and you go here and see that different operating system different ways to collect the information but your",
    "start": "256120",
    "end": "262440"
  },
  {
    "text": "goal is to do data analysis and at some point you start realizing that data comes in what we",
    "start": "262440",
    "end": "268759"
  },
  {
    "text": "call an structor format yeah you can understand that the first fraction of this web server log entry has an IP",
    "start": "268759",
    "end": "275280"
  },
  {
    "text": "address because your brain has been train to understand what is an IP address right not to compute it right",
    "start": "275280",
    "end": "282320"
  },
  {
    "text": "but you you understand and you understand that later you have a Tim stamp then you have some HTTP components",
    "start": "282320",
    "end": "288120"
  },
  {
    "text": "like request method protocol version status code and so on if you have an",
    "start": "288120",
    "end": "294000"
  },
  {
    "text": "structor log and we don't have a real structor for the computer this get really complex to Parts when you are are",
    "start": "294000",
    "end": "299840"
  },
  {
    "text": "processing thousand of thousand of messages per second ideally you want to",
    "start": "299840",
    "end": "305120"
  },
  {
    "text": "get something like this I'm not talking about that Json is the best structor I'm not saying that but I'm trying to say",
    "start": "305120",
    "end": "311039"
  },
  {
    "text": "that you should have a notion for the computer that says this key equals this value and you don't want to pass all the",
    "start": "311039",
    "end": "317960"
  },
  {
    "text": "content over and over but if your data comes in different format in an structor",
    "start": "317960",
    "end": "323080"
  },
  {
    "text": "way how do you solve that problem at scale ideally you want to do something",
    "start": "323080",
    "end": "329199"
  },
  {
    "text": "like this you take your instructor data you go through a parsing process that will give you a final instructor version",
    "start": "329199",
    "end": "336560"
  },
  {
    "text": "of the information but most of the time you're doing this you're writing your custom script in a machine to extract",
    "start": "336560",
    "end": "343759"
  },
  {
    "text": "specific information and tomorrow you create a different scraper and a different scraper and so on and I know",
    "start": "343759",
    "end": "349560"
  },
  {
    "text": "that people laughing because everybody has been here on this place right and then you ended up doing something like",
    "start": "349560",
    "end": "355759"
  },
  {
    "text": "this picking just one single database and there are many right and then you",
    "start": "355759",
    "end": "360840"
  },
  {
    "text": "start putting more information that database you ended up paying ton of money and sometimes information that",
    "start": "360840",
    "end": "367440"
  },
  {
    "text": "you're send it to your database because remember you want to do dat",
    "start": "367440",
    "end": "372479"
  },
  {
    "text": "analysis you're not creting all the information maybe you're just consuming 20% of that information and you are",
    "start": "372479",
    "end": "379120"
  },
  {
    "text": "paying for the 100% yeah if all of you are operators and you are not paying for",
    "start": "379120",
    "end": "384240"
  },
  {
    "text": "the bills in your company good it's not your problem but when you're going to ask for AR rice hey",
    "start": "384240",
    "end": "391960"
  },
  {
    "text": "we're spending so much in infrastructure blah blah blah if you make it cheaper we can give you an AR rise next year and it",
    "start": "391960",
    "end": "398360"
  },
  {
    "text": "happens right so what is your strategy to deal with this right this doesn't",
    "start": "398360",
    "end": "404199"
  },
  {
    "text": "scale and everybody USS sometimes we move companies right and then the next",
    "start": "404199",
    "end": "409639"
  },
  {
    "text": "developer comes in or the next operator and need to solve the problem again again and again or the worst you join a",
    "start": "409639",
    "end": "415800"
  },
  {
    "text": "new company and you have to fix the mess that exists already right and without a strategy this gets",
    "start": "415800",
    "end": "422400"
  },
  {
    "text": "really complex so the login challenge is as a summary in a recap is around different",
    "start": "422400",
    "end": "428440"
  },
  {
    "text": "sources different formats different endpoints and volume companies generates",
    "start": "428440",
    "end": "434840"
  },
  {
    "text": "20 to 30% more data every year so what works today might not work the next year",
    "start": "434840",
    "end": "442400"
  },
  {
    "text": "unless you have the right strategy to deal with all these components around H",
    "start": "442400",
    "end": "448120"
  },
  {
    "start": "447000",
    "end": "606000"
  },
  {
    "text": "login and this this where fluent bit comes in as a scalable solution that was",
    "start": "448120",
    "end": "454000"
  },
  {
    "text": "started around 2014 fluent bit is from the fluent D family it fluent bed is a graduated",
    "start": "454000",
    "end": "460639"
  },
  {
    "text": "project with the cncf is read in C language yeah we're not going to debate today about Russ versus goang",
    "start": "460639",
    "end": "467800"
  },
  {
    "text": "versus XYZ right but it has a plugable architecture we have a more than 100",
    "start": "467800",
    "end": "473800"
  },
  {
    "text": "connectors between input sources destinations and is cross platforms you",
    "start": "473800",
    "end": "479479"
  },
  {
    "text": "can run in Linux Windows Mac OS vsd and it's highly customizable meaning like if",
    "start": "479479",
    "end": "486400"
  },
  {
    "text": "you want to extend not just move data but if you want to do processing and the features that we have to process the",
    "start": "486400",
    "end": "492199"
  },
  {
    "text": "data in the metal is not enough for you you can extend it by using wasam by using Lua or goang which is quite",
    "start": "492199",
    "end": "499960"
  },
  {
    "text": "powerful and I'm proud to say that yeah it's a full vendor neutral project it's",
    "start": "499960",
    "end": "505720"
  },
  {
    "text": "something that is a project with a cncf it's not that a company will buy fluent bit and fluent bit will go away it's not",
    "start": "505720",
    "end": "511919"
  },
  {
    "text": "like that who contributes to fluent bit Amazon Google Oracle Microsoft there are",
    "start": "511919",
    "end": "518880"
  },
  {
    "text": "couple of dozen of companies investing in gen resources into make flu and bit even",
    "start": "518880",
    "end": "524920"
  },
  {
    "text": "better and fluent bit is not just for logs today fluent bit handled logs",
    "start": "524920",
    "end": "530320"
  },
  {
    "text": "metrics and traces and I know you will get ton of questions around this but what I can tell you when you think about",
    "start": "530320",
    "end": "536640"
  },
  {
    "text": "logs in the fluent World logs what we call is schema less we have a schema but",
    "start": "536640",
    "end": "543279"
  },
  {
    "text": "it's a schema less meaning that it's quite flexible to contain all the data that you can imagine and we just also we",
    "start": "543279",
    "end": "551560"
  },
  {
    "text": "can manage binary data not just text format and loog schema list is just ton",
    "start": "551560",
    "end": "557720"
  },
  {
    "text": "of key value pairs such as Json but we use something called message pack internally in the metrix wall yeah this",
    "start": "557720",
    "end": "565240"
  },
  {
    "text": "is a simplified version of our schema we have you support different types for metrics like counters gauges histograms",
    "start": "565240",
    "end": "573200"
  },
  {
    "text": "we can have dimensions for labels you can have the description the value for metrics and so on and for traces yeah",
    "start": "573200",
    "end": "580920"
  },
  {
    "text": "this is a even more simplified version actually in the traces we use this very similar structure than open Telemetry",
    "start": "580920",
    "end": "588120"
  },
  {
    "text": "and everything that I'm saying here between logs metrics and traces is are",
    "start": "588120",
    "end": "593720"
  },
  {
    "text": "compatible in the world with Prometheus they are compatible with open telemetry",
    "start": "593720",
    "end": "599120"
  },
  {
    "text": "so that means that fluent beat is a very versatile tool that just just can plug in your architecture and solve all the",
    "start": "599120",
    "end": "606000"
  },
  {
    "start": "606000",
    "end": "1075000"
  },
  {
    "text": "problems and now I'm going to hang over in microphone and start talking about the main topic here because I know we",
    "start": "606000",
    "end": "612519"
  },
  {
    "text": "are all suffering from loging and we're looking for Best Practices so anarak",
    "start": "612519",
    "end": "618200"
  },
  {
    "text": "please welcome to the",
    "start": "618200",
    "end": "621079"
  },
  {
    "text": "stage Okay so we've now talked about the how do we go about solving it uh and",
    "start": "624440",
    "end": "632079"
  },
  {
    "text": "really when we think about how we're going to solve this these logging problems uh these data problems I like",
    "start": "632079",
    "end": "637839"
  },
  {
    "text": "to think of it in in three different buckets that we'll run through so the first is processing right we're collecting all this information and as",
    "start": "637839",
    "end": "644399"
  },
  {
    "text": "we're collecting this information we can do stuff with uh with all that information we're collecting as we do so",
    "start": "644399",
    "end": "650240"
  },
  {
    "text": "what's enrichment reducing log volume redaction uh conforming to a schema make",
    "start": "650240",
    "end": "655320"
  },
  {
    "text": "it more useful as we go and and search or do data analysis uh and and even you",
    "start": "655320",
    "end": "660399"
  },
  {
    "text": "know sometimes we just don't need to deal with logs let's convert that to to to metrics uh we'll talk a little bit",
    "start": "660399",
    "end": "665639"
  },
  {
    "text": "about some architectures right so fluent bid and how you can collect that data we'll talk a little bit about how you",
    "start": "665639",
    "end": "670800"
  },
  {
    "text": "can pair that up with some otel SDK otel collector all of the good stuff that's within the cncf family uh and then last",
    "start": "670800",
    "end": "677760"
  },
  {
    "text": "we'll we'll run through some of the monitoring and operation side of logging right there's ton of information going through we want to make sure that it",
    "start": "677760",
    "end": "684600"
  },
  {
    "text": "runs um as as needed so uh what I'll do is I'm going to go ahead and switch my",
    "start": "684600",
    "end": "690079"
  },
  {
    "text": "screen and what we'll do is walk through a couple of examples",
    "start": "690079",
    "end": "695240"
  },
  {
    "text": "here so awesome so first we'll walk through",
    "start": "695240",
    "end": "701600"
  },
  {
    "text": "us uh first example and this example U everything here is in in fluent pit we're going to",
    "start": "701600",
    "end": "708160"
  },
  {
    "text": "be generating a message so think of it as I'm logging something that says hello world once per second and what we're",
    "start": "708160",
    "end": "715200"
  },
  {
    "text": "going to uh end up doing here is do some enrichment so why is this useful right many times logs can uh miss a bunch of",
    "start": "715200",
    "end": "722959"
  },
  {
    "text": "information that that might be relevant for someone debugging especially in a containerized world we might have 50",
    "start": "722959",
    "end": "729200"
  },
  {
    "text": "logs that look exactly the same we might have 50 versions of the app running and without understanding where it's running",
    "start": "729200",
    "end": "735800"
  },
  {
    "text": "how it's running what hosts it's running on uh that information might get it might be really hard to figure out and",
    "start": "735800",
    "end": "742320"
  },
  {
    "text": "pinpoint what happened so let's go ahead and run that",
    "start": "742320",
    "end": "747880"
  },
  {
    "text": "configuration and what we'll see is while we're",
    "start": "747880",
    "end": "753160"
  },
  {
    "text": "running that hello world we're also enriching that with host name so we've taken something from the machine from",
    "start": "753160",
    "end": "758720"
  },
  {
    "text": "the box enriched the log so from a best practices standpoint sometimes it might",
    "start": "758720",
    "end": "763920"
  },
  {
    "text": "feel counterintuitive but we've got to add information to make things faster Right add some volume add some",
    "start": "763920",
    "end": "770959"
  },
  {
    "text": "additional structure to understand what's what's going on so next let's go",
    "start": "770959",
    "end": "776199"
  },
  {
    "text": "into the second example and in the second example we're going to",
    "start": "776199",
    "end": "783320"
  },
  {
    "text": "take a very common use case right someone accidentally turned on debug and Trace and all hell is breaking loose",
    "start": "783320",
    "end": "791360"
  },
  {
    "text": "within the backend it's it's taken in that data Like A Champion but it's also charging us for that data and sometimes",
    "start": "791360",
    "end": "799120"
  },
  {
    "text": "uh best practices can involve let's let's save uh let's save the data volume let's get rid of stuff that's not going",
    "start": "799120",
    "end": "805240"
  },
  {
    "text": "to be useful let's make sure our queries run really quickly uh so that way we're not uh searching through through a bunch",
    "start": "805240",
    "end": "811519"
  },
  {
    "text": "of junk and here what we have is an filter that says if I find something",
    "start": "811519",
    "end": "817160"
  },
  {
    "text": "that includes uh um info um I'm going to go ahead or sorry if I find something",
    "start": "817160",
    "end": "822519"
  },
  {
    "text": "that says debug or info I'm going to go ahead and remove that so we're going to completely remove that log um that's",
    "start": "822519",
    "end": "828279"
  },
  {
    "text": "coming in from debug and if we go and run",
    "start": "828279",
    "end": "832959"
  },
  {
    "text": "this now only the error are going to show up right so very simple example of",
    "start": "834320",
    "end": "839959"
  },
  {
    "text": "now we have a ton of stuff coming in best practices we don't have to just collect everything uh you know star all",
    "start": "839959",
    "end": "847279"
  },
  {
    "text": "we can we can really go and filter it as we collect it why not so next let's go",
    "start": "847279",
    "end": "852680"
  },
  {
    "text": "into our third example oops almost uh gave it away",
    "start": "852680",
    "end": "860920"
  },
  {
    "text": "there and this is doing a little bit of business logic or processing as the log",
    "start": "862680",
    "end": "867800"
  },
  {
    "text": "is being generated so this is my credit card number uh you can take a picture what whatnot",
    "start": "867800",
    "end": "874759"
  },
  {
    "text": "but as we want to go and show this to to the whole session what we're going to do is process it out let's redact it um so",
    "start": "874759",
    "end": "882519"
  },
  {
    "text": "traditionally when we're doing logging there can be times where we have sensitive information and if we are",
    "start": "882519",
    "end": "888519"
  },
  {
    "text": "collecting that sensitive information and it's routing and it's going to get highly available with 29s of",
    "start": "888519",
    "end": "894800"
  },
  {
    "text": "availability well shoot it's going to be really hard to go delete that so why don't we we change the data itself keep",
    "start": "894800",
    "end": "900720"
  },
  {
    "text": "the structure but redacted uh in place so this is another best practice where hey we've got this information it",
    "start": "900720",
    "end": "907120"
  },
  {
    "text": "contains a lot of vital stuff but we don't necessarily need to collect that or store that in in a highly redundant",
    "start": "907120",
    "end": "914320"
  },
  {
    "text": "environment now um another one that's that's really great to see is logs to",
    "start": "914320",
    "end": "920320"
  },
  {
    "text": "metrics and what this is is logs contain a ton of information and sometimes as",
    "start": "920320",
    "end": "926920"
  },
  {
    "text": "this uh this message kind of shows it's it's very very heavy right I've got the",
    "start": "926920",
    "end": "932079"
  },
  {
    "text": "name space I've got all this container stuff and in the end all I care about",
    "start": "932079",
    "end": "937360"
  },
  {
    "text": "all I care about as an operator is how many times did this dummy message",
    "start": "937360",
    "end": "942560"
  },
  {
    "text": "actually show up so sometimes the best way to handle a log is to just convert",
    "start": "942560",
    "end": "948800"
  },
  {
    "text": "it to a metric right we've got alerting we've got um all sorts of processes that",
    "start": "948800",
    "end": "953959"
  },
  {
    "text": "are built on top of this and here we're going to export it so that we can query it with Prometheus X exporter if we",
    "start": "953959",
    "end": "959519"
  },
  {
    "text": "wanted we could use otel and send it to otel metrics so let's go ahead and run",
    "start": "959519",
    "end": "966240"
  },
  {
    "text": "this this is going to go ahead and run and it's going to give us a count of all those messages but let's forget the logs",
    "start": "970920",
    "end": "977399"
  },
  {
    "text": "for a second and turn our attention to the right hand side and what we're doing is we're querying the Prometheus",
    "start": "977399",
    "end": "983680"
  },
  {
    "text": "exporter endpoint and as you can see it's also incrementing the number of me messages that show up right so all that",
    "start": "983680",
    "end": "990920"
  },
  {
    "text": "stuff on the left hand side we don't care about any of it we just want to know this number 17 15 whatever it uh is",
    "start": "990920",
    "end": "997639"
  },
  {
    "text": "at at that time so best practices in this sense is really how do we really",
    "start": "997639",
    "end": "1004000"
  },
  {
    "text": "just get rid of the log get get the information extract the information that we want now I I'll run through this a",
    "start": "1004000",
    "end": "1010199"
  },
  {
    "text": "little quickly because I we have another demo that I think is really great within the operations zone of of logging which",
    "start": "1010199",
    "end": "1016199"
  },
  {
    "text": "is architecture patterns um and sometimes times we feel we have to do every single thing within the place that",
    "start": "1016199",
    "end": "1022319"
  },
  {
    "text": "we collect that information but what's really fantastic about Cloud native infastructure let me move this thing out",
    "start": "1022319",
    "end": "1028640"
  },
  {
    "text": "of the way uh what's really great about Cloud native infrastructure is where we can chain these things together we can",
    "start": "1028640",
    "end": "1034120"
  },
  {
    "text": "collect logs on our servers on our iot devices or MacBooks whatever fire that",
    "start": "1034120",
    "end": "1039918"
  },
  {
    "text": "data up to a more centralized or uh operationalized central place to go do",
    "start": "1039919",
    "end": "1045280"
  },
  {
    "text": "that processing and that can run our scripting that can run our redaction that can run our removal of those logs",
    "start": "1045280",
    "end": "1051919"
  },
  {
    "text": "and if for some reason we're getting terabytes and terabytes of data a day we can scale that up right we can scale it",
    "start": "1051919",
    "end": "1057760"
  },
  {
    "text": "up using some of the hopefully good stuff you've learned at this conference bump the replicas up uh make make sure",
    "start": "1057760",
    "end": "1064880"
  },
  {
    "text": "everything runs in parallel uh and and you have bunch of tools right within the cncf itself that work together um you",
    "start": "1064880",
    "end": "1071720"
  },
  {
    "text": "almost magically so with that let me go ahead and hand this off to uh larus who",
    "start": "1071720",
    "end": "1077039"
  },
  {
    "start": "1075000",
    "end": "1474000"
  },
  {
    "text": "will talk a little bit about the operational side of this thank",
    "start": "1077039",
    "end": "1083840"
  },
  {
    "text": "you okay hello everyone I hope you're enjoying the conference uh going to move",
    "start": "1084159",
    "end": "1090880"
  },
  {
    "text": "to okay okay so uh when when you're running in in production your",
    "start": "1090880",
    "end": "1098120"
  },
  {
    "text": "observability uh you would like to to monitor certain aspect of it you would like to see how your ingestion is going",
    "start": "1098120",
    "end": "1107039"
  },
  {
    "text": "to your pipeline how it is actually being processed and later being uh sent",
    "start": "1107039",
    "end": "1112919"
  },
  {
    "text": "out to your uh output destinations uh so uh now what we're going to see is uh how",
    "start": "1112919",
    "end": "1121679"
  },
  {
    "text": "we can uh detect and how can we handle some uh some particular common issues",
    "start": "1121679",
    "end": "1128039"
  },
  {
    "text": "like the errors that may occur when you are sending your data to your destination and how you can also uh deal",
    "start": "1128039",
    "end": "1136960"
  },
  {
    "text": "with the back pressure let's say that you're sending a lot of data and your endpoint is not capable of handling this",
    "start": "1136960",
    "end": "1143919"
  },
  {
    "text": "amount of data that you're sending uh the VIN uh comes to the rescue to deal",
    "start": "1143919",
    "end": "1150200"
  },
  {
    "text": "with this uh back pressure so uh this is uh an instance where we have uh flu",
    "start": "1150200",
    "end": "1157600"
  },
  {
    "text": "and bit running sorry and we have uh uh an",
    "start": "1157600",
    "end": "1162919"
  },
  {
    "text": "output uh server here this is uh for benchmark and demo purposes is just a",
    "start": "1162919",
    "end": "1170760"
  },
  {
    "text": "simple um HTTP server written and go that will help us to to see how we're",
    "start": "1170760",
    "end": "1177200"
  },
  {
    "text": "sending data so going to around FL bit",
    "start": "1177200",
    "end": "1183039"
  },
  {
    "text": "here and this this particular configuration is just sending uh a dami",
    "start": "1183640",
    "end": "1191480"
  },
  {
    "text": "message to to our",
    "start": "1191480",
    "end": "1195760"
  },
  {
    "text": "endpoint",
    "start": "1197240",
    "end": "1200240"
  },
  {
    "text": "thank you right now so this is uh one of the uh grafana",
    "start": "1203440",
    "end": "1209679"
  },
  {
    "text": "dashboard that we uh usually uh deploy to look into the flu bit",
    "start": "1209679",
    "end": "1217640"
  },
  {
    "text": "metrics so as anak showed before flu exposes the",
    "start": "1220039",
    "end": "1226400"
  },
  {
    "text": "metrics in an HTTP and point this is a built-in HTTP server where you can grab",
    "start": "1226400",
    "end": "1231600"
  },
  {
    "text": "uh the metrics from flu bit on this case we're using Prometheus to scrape those metrics and then we are showing here in",
    "start": "1231600",
    "end": "1239440"
  },
  {
    "text": "grafana as I said this is very very small uh sample just uh sending one damy",
    "start": "1239440",
    "end": "1245840"
  },
  {
    "text": "message per second so you will see that it pretty much uh well behaving here",
    "start": "1245840",
    "end": "1253120"
  },
  {
    "text": "right and nothing is wrong everything looks good A Low number of connections ET Etc so what what happens if uh if",
    "start": "1253120",
    "end": "1263440"
  },
  {
    "text": "your Endo uh goes down uh we should start seeing",
    "start": "1263440",
    "end": "1270480"
  },
  {
    "text": "immediately on fluent bid that this is failing right it says that the endpoint",
    "start": "1270480",
    "end": "1275880"
  },
  {
    "text": "is is not available and some uh some shunks which is the uh basic uh data",
    "start": "1275880",
    "end": "1283520"
  },
  {
    "text": "structure that we use uh will be will be dropped so we which see that we keep uh",
    "start": "1283520",
    "end": "1290679"
  },
  {
    "text": "ingesting data to our pipeline but we are no longer capable of sending uh the",
    "start": "1290679",
    "end": "1296960"
  },
  {
    "text": "data to the to the end point and if we",
    "start": "1296960",
    "end": "1302559"
  },
  {
    "text": "start the endpoint again",
    "start": "1302559",
    "end": "1309679"
  },
  {
    "text": "yeah if we start the endpoint again we will see how uh quickly fluent bit will",
    "start": "1312720",
    "end": "1320240"
  },
  {
    "text": "will recover and we don't need to go to the to the actual log file of fluent bit",
    "start": "1320240",
    "end": "1327440"
  },
  {
    "text": "on this case to see that is recovering we will see that uh pretty fast fluent",
    "start": "1327440",
    "end": "1332520"
  },
  {
    "text": "bit will get to to a good Pace with the with the output side so what if we put a",
    "start": "1332520",
    "end": "1340520"
  },
  {
    "text": "little bit more load here to uh to better see what's going on right to",
    "start": "1340520",
    "end": "1347120"
  },
  {
    "text": "better see how be disable to to recover so this will generate uh a fair",
    "start": "1347120",
    "end": "1355440"
  },
  {
    "text": "amount of load uh this is a this is a small machine",
    "start": "1355440",
    "end": "1360480"
  },
  {
    "text": "so not that much but with this load if our endpoint goes",
    "start": "1360480",
    "end": "1367679"
  },
  {
    "text": "down we will uh notice a lot of uh warning messages that it could not send",
    "start": "1367679",
    "end": "1374039"
  },
  {
    "text": "the the data to to the uh output right and we will notice that but we already",
    "start": "1374039",
    "end": "1381840"
  },
  {
    "text": "saw the errors there but what if we don't have that much errors but we have",
    "start": "1381840",
    "end": "1388720"
  },
  {
    "text": "a like a delay in our endpoint",
    "start": "1388720",
    "end": "1393760"
  },
  {
    "text": "um okay the input and output are pretty much the same now uh let me Jo",
    "start": "1395000",
    "end": "1402760"
  },
  {
    "text": "you some drop records we can identify here but here in input and output are",
    "start": "1402760",
    "end": "1409200"
  },
  {
    "text": "pretty much the same right so what if my endpoint has some",
    "start": "1409200",
    "end": "1416480"
  },
  {
    "text": "delay so we're going to add some delay here come",
    "start": "1416480",
    "end": "1423559"
  },
  {
    "text": "on so our output is",
    "start": "1434039",
    "end": "1439240"
  },
  {
    "text": "is up but it is introducing some delay it's not that it's not responding",
    "start": "1439240",
    "end": "1445960"
  },
  {
    "text": "it kned this down so there is no error in our uh other metrics that we may have",
    "start": "1445960",
    "end": "1451640"
  },
  {
    "text": "but it's taking longer to to reply back so we can see that uh this line that was",
    "start": "1451640",
    "end": "1459360"
  },
  {
    "text": "pretty much the same few moments ago now the output is very low right our Endo is",
    "start": "1459360",
    "end": "1467159"
  },
  {
    "text": "replying by is receiving the data but at a lower rate we introduced some some",
    "start": "1467159",
    "end": "1473640"
  },
  {
    "text": "delay so what can we do to to deal with this well we can have our file system",
    "start": "1473640",
    "end": "1482559"
  },
  {
    "start": "1474000",
    "end": "1609000"
  },
  {
    "text": "used as a buffering mechanism so when it start failing uh it will save our chunks",
    "start": "1482559",
    "end": "1489840"
  },
  {
    "text": "into the file system it will use whatever space you define to be used there and then it will try to reset send",
    "start": "1489840",
    "end": "1498440"
  },
  {
    "text": "uh this this data Again by default we will only try retry",
    "start": "1498440",
    "end": "1505760"
  },
  {
    "text": "once right but you if you're not allowed to lose any data well you have to",
    "start": "1505760",
    "end": "1511360"
  },
  {
    "text": "configure a good amount of space for your uh your storage and also configure",
    "start": "1511360",
    "end": "1518520"
  },
  {
    "text": "the retry limit either to unlimited or to a higher number and and you will see",
    "start": "1518520",
    "end": "1523760"
  },
  {
    "text": "that uh fluent bit will keep retrying and till the number of retries uh is uh",
    "start": "1523760",
    "end": "1531520"
  },
  {
    "text": "reach let's say you put there three retries so you will have the first attempt and tri more retries and it will",
    "start": "1531520",
    "end": "1538760"
  },
  {
    "text": "uh not send it again so uh now that these numbers are",
    "start": "1538760",
    "end": "1546600"
  },
  {
    "text": "pretty pretty uh far away right uh we could restart the output server and see",
    "start": "1546600",
    "end": "1553840"
  },
  {
    "text": "how it will quickly recover",
    "start": "1553840",
    "end": "1559679"
  },
  {
    "text": "and and get to to a better pace of sending the data to your to your output",
    "start": "1564159",
    "end": "1570520"
  },
  {
    "text": "we have to uh take into consideration that some of those were dropped because",
    "start": "1570520",
    "end": "1577679"
  },
  {
    "text": "uh we Define to only retry once which is the",
    "start": "1577679",
    "end": "1583158"
  },
  {
    "text": "default okay drop records okay and now we can see this was the input line right",
    "start": "1585039",
    "end": "1591520"
  },
  {
    "text": "and the output you can see that as soon as the the end point become available",
    "start": "1591520",
    "end": "1597399"
  },
  {
    "text": "again and was not uh showing any delay on replying back with uh to our request",
    "start": "1597399",
    "end": "1604000"
  },
  {
    "text": "uh it recovers immediately right so depending on if you're allowed",
    "start": "1604000",
    "end": "1612240"
  },
  {
    "text": "to lose data if you want to keep up with your latest records instead of just",
    "start": "1612240",
    "end": "1617679"
  },
  {
    "text": "sending everything you will have options to configure uh the flu and bit you will",
    "start": "1617679",
    "end": "1622880"
  },
  {
    "text": "have options to deal with the back pressure from your outputs and yeah",
    "start": "1622880",
    "end": "1628520"
  },
  {
    "text": "that's it now back to",
    "start": "1628520",
    "end": "1631840"
  },
  {
    "text": "Ardo thank you",
    "start": "1641960",
    "end": "1649240"
  },
  {
    "text": "now oh we put this in a hiding mode okay maybe I can I can go through",
    "start": "1649240",
    "end": "1654799"
  },
  {
    "text": "this by not H showing the content here but let's talk about um unip there you",
    "start": "1654799",
    "end": "1663559"
  },
  {
    "text": "go one of the one of the keys on fluent bit to deal with back",
    "start": "1663559",
    "end": "1669519"
  },
  {
    "start": "1664000",
    "end": "1999000"
  },
  {
    "text": "pressure do you know do you understand the concept of back pressure right even in your house right if you have a pipe",
    "start": "1669519",
    "end": "1676039"
  },
  {
    "text": "you have water flowing through it it at some point if you put more water the",
    "start": "1676039",
    "end": "1681480"
  },
  {
    "text": "water will not flow faster because the pipe has a capacity the same happens in computers everything is buffering your",
    "start": "1681480",
    "end": "1689480"
  },
  {
    "text": "pipes right so if you have more data right doesn't mean that the data",
    "start": "1689480",
    "end": "1695000"
  },
  {
    "text": "will flow faster and at some point maybe your pipe should be could be really really fast",
    "start": "1695000",
    "end": "1700919"
  },
  {
    "text": "but when you're sending that water or that data the remote endpoint might not",
    "start": "1700919",
    "end": "1706480"
  },
  {
    "text": "be able to receive at the speed that you are sending the data example you have",
    "start": "1706480",
    "end": "1712360"
  },
  {
    "text": "100 nodes sending data to one endpoint example elastic search and now",
    "start": "1712360",
    "end": "1718679"
  },
  {
    "text": "you want to do 200 notes send the same amount of data to that endpoint it might not work indexing will",
    "start": "1718679",
    "end": "1727480"
  },
  {
    "text": "delays it will add back pressure you cannot start processing the data and you start accumulating and this is where B",
    "start": "1727480",
    "end": "1733600"
  },
  {
    "text": "frame comes in B frame is the capacity to store the data in a very efficient",
    "start": "1733600",
    "end": "1739120"
  },
  {
    "text": "and safety way so if you cannot deliver the data fast enough at least you can",
    "start": "1739120",
    "end": "1745399"
  },
  {
    "text": "keep the state and if the agent fails or your machine gets restarted you can",
    "start": "1745399",
    "end": "1750960"
  },
  {
    "text": "recover and your data can be reprocess when it's time to go by default flu bit",
    "start": "1750960",
    "end": "1757600"
  },
  {
    "text": "use a a memory buffering but now we have something that is um well everybody in",
    "start": "1757600",
    "end": "1764799"
  },
  {
    "text": "production does this right everybody in production when does enable the what we call the hybrid system what is called",
    "start": "1764799",
    "end": "1770880"
  },
  {
    "text": "file system BFF Fring if you're familiar with memory maet files or if you are",
    "start": "1770880",
    "end": "1775919"
  },
  {
    "text": "familiar with databases there are very efficient ways to store the data into the file system that are really cheap",
    "start": "1775919",
    "end": "1782880"
  },
  {
    "text": "from from a system codes perspective normally when you open read uh open",
    "start": "1782880",
    "end": "1789240"
  },
  {
    "text": "close or read a file you do a system calls to open to read then to write then to close the file system right you",
    "start": "1789240",
    "end": "1795960"
  },
  {
    "text": "invoke four system calls but when you're processing data at this scale invoking all the system calls is really really",
    "start": "1795960",
    "end": "1802519"
  },
  {
    "text": "expensive and that's why we need another mechanism that can deal with file system",
    "start": "1802519",
    "end": "1808240"
  },
  {
    "text": "but it's cheap and this is memory maet files and memory maet files allow us to",
    "start": "1808240",
    "end": "1814120"
  },
  {
    "text": "open a file and do kind of a a mirror of the content of that file right away in",
    "start": "1814120",
    "end": "1820279"
  },
  {
    "text": "memory so we can reduce the number of system calls involved to read or write",
    "start": "1820279",
    "end": "1825440"
  },
  {
    "text": "content and the other thing is like if you're using and we were this giving this example yesterday it's like if",
    "start": "1825440",
    "end": "1831760"
  },
  {
    "text": "you're using just memory buffering maybe you can tell me what would happen if I have back pressure and I'm just",
    "start": "1831760",
    "end": "1838760"
  },
  {
    "text": "accumulating data in memory what",
    "start": "1838760",
    "end": "1843000"
  },
  {
    "text": "happens run out of memory what that",
    "start": "1846360",
    "end": "1850720"
  },
  {
    "text": "means process stop well the ker will kill you that's it it would not let you",
    "start": "1851840",
    "end": "1857880"
  },
  {
    "text": "eat all the memory that you have in the system because your process start accumulating data because this data you cannot flash it away right and this is",
    "start": "1857880",
    "end": "1865519"
  },
  {
    "text": "back pressure if you're just using memory that will happen but if you use file system which is the everybody in",
    "start": "1865519",
    "end": "1873200"
  },
  {
    "text": "production use as Microsoft Google Oracle use this mechanism enable what they do is they create the",
    "start": "1873200",
    "end": "1879559"
  },
  {
    "text": "chunks in memory but they have a reflection in the file system and at some point if it face back pressure",
    "start": "1879559",
    "end": "1886279"
  },
  {
    "text": "right and your memory is going up you can set a limit for example I don't want to use more than 500 megabytes and when",
    "start": "1886279",
    "end": "1892519"
  },
  {
    "text": "you hit this limit all the chunks are are up in memory we have this concept of up and down right all the chunks are not",
    "start": "1892519",
    "end": "1900000"
  },
  {
    "text": "being used but are up in memory will go to a down state in a very safety way so",
    "start": "1900000",
    "end": "1905519"
  },
  {
    "text": "of course everybody has more storage than memory so you can assign a couple of terabytes for this and even if your",
    "start": "1905519",
    "end": "1911720"
  },
  {
    "text": "endpoint is down for hours your data will be safe and you can deal with back",
    "start": "1911720",
    "end": "1917559"
  },
  {
    "text": "pressure but if you don't enable this yes you might get some some troubles",
    "start": "1917559",
    "end": "1923440"
  },
  {
    "text": "right so a couple of best practices that we were talking about today the first one was Andre was mentioned about",
    "start": "1923440",
    "end": "1930440"
  },
  {
    "text": "processing the data you don't need all the data that you are collecting deal with that you don't need anything it's",
    "start": "1930440",
    "end": "1937120"
  },
  {
    "text": "not like at home right oh we will save this for later no it doesn't work that for data because you pay for that right",
    "start": "1937120",
    "end": "1944639"
  },
  {
    "text": "and the other this ways to exclude data based on patterns you can process the data before you send it it out right it",
    "start": "1944639",
    "end": "1952440"
  },
  {
    "text": "will be cheaper and the other aspect is always monitoring it's not about to just run the agent and let the data flow hey",
    "start": "1952440",
    "end": "1960039"
  },
  {
    "text": "are we facing latency are we facing back pressure because if you notice that you're facing back pressure hey you",
    "start": "1960039",
    "end": "1966720"
  },
  {
    "text": "might consider to add more storage to the pipeline right because you want to be more resilient and",
    "start": "1966720",
    "end": "1973639"
  },
  {
    "text": "there's one thing everybody prepares for things that work but in this world of kubernetes cloud",
    "start": "1973639",
    "end": "1981480"
  },
  {
    "text": "native and moving data you have to prepare for when things failed what if",
    "start": "1981480",
    "end": "1987200"
  },
  {
    "text": "you get a DNS issue what if Network goes down yeah you are in the worst case",
    "start": "1987200",
    "end": "1992639"
  },
  {
    "text": "scenario and you want to make sure to do the best to avoid a losing",
    "start": "1992639",
    "end": "1998200"
  },
  {
    "text": "data okay so maybe you have some some minutes for Q&A I would like to I know",
    "start": "1998200",
    "end": "2004639"
  },
  {
    "start": "1999000",
    "end": "2117000"
  },
  {
    "text": "the microphone is there so if you have any question be happy to answer about back pressure performance login open",
    "start": "2004639",
    "end": "2010320"
  },
  {
    "text": "telary metrics anything that comes to your",
    "start": "2010320",
    "end": "2015399"
  },
  {
    "text": "mind yeah it's better if you go to the microphone so then we get the recording of the question for for people who",
    "start": "2016120",
    "end": "2021799"
  },
  {
    "text": "watching",
    "start": "2021799",
    "end": "2024360"
  },
  {
    "text": "online he braen hello hello uh I have a question about back pressure um in terms",
    "start": "2027799",
    "end": "2035279"
  },
  {
    "text": "of like back pressure Strat strategy for like pausing input to make sure that you're not overloading well like your",
    "start": "2035279",
    "end": "2043080"
  },
  {
    "text": "output is over limit or something like that when you're in memory the memory",
    "start": "2043080",
    "end": "2048200"
  },
  {
    "text": "version there's a meff limit that if you're over that meff limit you can pause the the input will pause yeah um",
    "start": "2048200",
    "end": "2055960"
  },
  {
    "text": "that doesn't work for file system storage and there is a close equivalent",
    "start": "2055960",
    "end": "2062118"
  },
  {
    "text": "which is pausing on too many chunks open so you can set your max chunks and then",
    "start": "2062119",
    "end": "2067280"
  },
  {
    "text": "going open but is there a possibility to introduce a concept where you can pause",
    "start": "2067280",
    "end": "2072760"
  },
  {
    "text": "input on your output total limit size being over yeah there's one option to pause the ingestion based on the storage",
    "start": "2072760",
    "end": "2080320"
  },
  {
    "text": "limit that you assign it to an output plug-in it's called storage. p on chunks",
    "start": "2080320",
    "end": "2086200"
  },
  {
    "text": "limit something like that uh it it it looks like that's not based on the output total limit size it looks like",
    "start": "2086200",
    "end": "2092480"
  },
  {
    "text": "that based on the max chunks up configuration it should be on the Q size",
    "start": "2092480",
    "end": "2097960"
  },
  {
    "text": "but let me check yeah before giving you a full answer talk because we're trying to I'm trying to nail that down and I",
    "start": "2097960",
    "end": "2104480"
  },
  {
    "text": "can't figure it out but yeah okay thank you thank you folks and they just telling me in the back that we have to",
    "start": "2104480",
    "end": "2109920"
  },
  {
    "text": "stop right now but I'm happy to the team happy to talk answer all the questions in in the back thank you so",
    "start": "2109920",
    "end": "2116920"
  },
  {
    "text": "much",
    "start": "2116920",
    "end": "2119920"
  }
]