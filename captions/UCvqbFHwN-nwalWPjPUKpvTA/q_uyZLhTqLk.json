[
  {
    "text": "welcome everyone my name is yaara wretzky I am a developer advocate at a",
    "start": "60",
    "end": "5279"
  },
  {
    "text": "cloud native computing Foundation and today we have our regular CNC of",
    "start": "5279",
    "end": "11010"
  },
  {
    "text": "webinars to happen in every Tuesday exactly this time today we have the special guest - sir Jerry will present",
    "start": "11010",
    "end": "19199"
  },
  {
    "text": "about moving to kubernetes and share some insights on solar and configuration",
    "start": "19199",
    "end": "26640"
  },
  {
    "text": "security and collaboration challenges in the container pipeline - go ahead",
    "start": "26640",
    "end": "33500"
  },
  {
    "text": "thank you very much hi everyone my name is cache from file 66 and today I wanted",
    "start": "33500",
    "end": "40620"
  },
  {
    "text": "to share our story when it comes to moving our mana let make application that used to run on AWS - kubernetes and",
    "start": "40620",
    "end": "49469"
  },
  {
    "text": "that the challenges we had to overcome the problems that we had to solve and the surprises that be stumbled upon up",
    "start": "49469",
    "end": "55350"
  },
  {
    "text": "around on the way of this move where we are now and where we think we will be",
    "start": "55350",
    "end": "60660"
  },
  {
    "text": "moving are unstack so I'm going to",
    "start": "60660",
    "end": "65939"
  },
  {
    "text": "assume that you know who Brun is quite familiar with kubernetes but before that",
    "start": "65939",
    "end": "70979"
  },
  {
    "text": "I'm gonna get into like telling you a little bit about what what our infrastructure looked like before and",
    "start": "70979",
    "end": "77340"
  },
  {
    "text": "what we were doing with it and then why we decided to move this so cloud 606 is",
    "start": "77340",
    "end": "82590"
  },
  {
    "text": "delivered as a SAS is you can imagine we as a company that's four or five years",
    "start": "82590",
    "end": "88170"
  },
  {
    "text": "old we had this stack all set up on AWS running on ec2 s3 the normal you know",
    "start": "88170",
    "end": "95040"
  },
  {
    "text": "the usual suspects of the cloud and this was delivered our service was delivered",
    "start": "95040",
    "end": "100530"
  },
  {
    "text": "as a service on the web when you go to galaxies calm this was working perfectly",
    "start": "100530",
    "end": "105869"
  },
  {
    "text": "fine we had a very good record of uptime we had a track record of delivering",
    "start": "105869",
    "end": "112439"
  },
  {
    "text": "around probably two or three times a day on on minor releases and once a week on",
    "start": "112439",
    "end": "119040"
  },
  {
    "text": "major releases so we had a good flow of everything that was going on and we",
    "start": "119040",
    "end": "125159"
  },
  {
    "text": "decided to move this to kubernetes for support for different reasons so this is",
    "start": "125159",
    "end": "130830"
  },
  {
    "text": "what our stack used to look like now the reason there are so many colors in",
    "start": "130830",
    "end": "136200"
  },
  {
    "text": "is to celebrate that necessarily didn't want to try and see if what what color combinations I can use it's to show how",
    "start": "136200",
    "end": "142980"
  },
  {
    "text": "many different different server types we had on our stack so at the top you have the usual in al de lb load balancers",
    "start": "142980",
    "end": "148709"
  },
  {
    "text": "that Amazon provides you and then at the bottom you have the type of service that we had at the very bottom of though that",
    "start": "148709",
    "end": "154530"
  },
  {
    "text": "the lower square our economy we have the databases and this persistence or",
    "start": "154530",
    "end": "159930"
  },
  {
    "text": "services that we had so my sequel radius memcached influx TV and RabbitMQ are the",
    "start": "159930",
    "end": "165420"
  },
  {
    "text": "persistent or services that we provide and we use within the application but",
    "start": "165420",
    "end": "171360"
  },
  {
    "text": "with the application stack itself we had five or six different types of servers",
    "start": "171360",
    "end": "177330"
  },
  {
    "text": "that we had to provision every time said a bunch of web servers for obvious reasons where they were serving three",
    "start": "177330",
    "end": "182730"
  },
  {
    "text": "types of traffic the Web API and our admin API which is something that we use internally through a VPN to add for",
    "start": "182730",
    "end": "189690"
  },
  {
    "text": "administration purposes think of it as a management that work then we have we provide get services to our customers so",
    "start": "189690",
    "end": "196290"
  },
  {
    "text": "there was a good server for a cluster of good servers I should say we have we",
    "start": "196290",
    "end": "201420"
  },
  {
    "text": "collect metrics and vital signs of the service that we manage for our customers so those metric servers we have a bunch",
    "start": "201420",
    "end": "206970"
  },
  {
    "text": "of services that communicate over TCP so they're not traditional you know layer",
    "start": "206970",
    "end": "212609"
  },
  {
    "text": "seven web HTTP servers and those are used for various different purposes I'm boxed all of them into one TCP in Rio in",
    "start": "212609",
    "end": "219989"
  },
  {
    "text": "Rio em in the real world the the Box in the top right the TCP server in in",
    "start": "219989",
    "end": "226109"
  },
  {
    "text": "reality it's actually about three or four different types of server and then we have a bunch of backgrounds every worker so as you can see we had all",
    "start": "226109",
    "end": "232440"
  },
  {
    "text": "these different types of servers that we had each one being an AC tube a template",
    "start": "232440",
    "end": "237720"
  },
  {
    "text": "that would fire up we would scale them from that type and the first issue that we had around this was was about",
    "start": "237720",
    "end": "245640"
  },
  {
    "text": "something of an issue of like a collective collective picture that you",
    "start": "245640",
    "end": "250950"
  },
  {
    "text": "couldn't take and the image is where that had that issue the first issue was that we would take these images off of",
    "start": "250950",
    "end": "257039"
  },
  {
    "text": "warriors so for example we would build a worker server and then we would take a picture of it essentially take a",
    "start": "257039",
    "end": "262109"
  },
  {
    "text": "snapshot of the template and am I in in Amazon lingo so we can fire up another web worker",
    "start": "262109",
    "end": "268750"
  },
  {
    "text": "server later on and by the time we were firing it up that image was already out",
    "start": "268750",
    "end": "273790"
  },
  {
    "text": "of date either we've updated something or an upstream package was updated or there was a security vulnerability found",
    "start": "273790",
    "end": "279370"
  },
  {
    "text": "in its week our job ended up being updating those images now admittedly we don't have hundreds of types of servers",
    "start": "279370",
    "end": "285910"
  },
  {
    "text": "and 100 types of images by as a consequence but still there was a painful process the other thing was that",
    "start": "285910",
    "end": "293380"
  },
  {
    "text": "although we we have good to sitting around taking care of our infrastructure",
    "start": "293380",
    "end": "300400"
  },
  {
    "text": "in a reproducible way and interest rates just code or script if you will we often",
    "start": "300400",
    "end": "307150"
  },
  {
    "text": "times find ourselves because of an issue because of a routing Network issue for example on the cloud provider or one of",
    "start": "307150",
    "end": "313390"
  },
  {
    "text": "our customers we had to jump on a server and make quick fix during the weekend just to get production back up and running or solve a specific customers",
    "start": "313390",
    "end": "321070"
  },
  {
    "text": "problem and that meant the images that we were taking and the templates of those servers would diverge from the",
    "start": "321070",
    "end": "328150"
  },
  {
    "text": "original image that we taken and when we fire up another one we had to apply that fix until we get to the next cycle of",
    "start": "328150",
    "end": "334950"
  },
  {
    "text": "embedding that change that manual change into the original image and the last",
    "start": "334950",
    "end": "341620"
  },
  {
    "text": "problem that we had which was which came about quite recently was that we started selling cloud success as an on-prem",
    "start": "341620",
    "end": "347229"
  },
  {
    "text": "service as well so until then we were providing our service as a as an online",
    "start": "347229",
    "end": "352300"
  },
  {
    "text": "available service in one you know packaged classic Swisscom was the place",
    "start": "352300",
    "end": "358270"
  },
  {
    "text": "that we would sell our services and about six months ago we started",
    "start": "358270",
    "end": "363850"
  },
  {
    "text": "providing cloud sixes as a nun trim which meant we had to build the entire stack again at different locations",
    "start": "363850",
    "end": "370270"
  },
  {
    "text": "depending on where the customer wanted or which data center on the cloud they wanted it to be and that added to the",
    "start": "370270",
    "end": "377260"
  },
  {
    "text": "problem so we thought about this and then we you know as a company that provides containerization and community",
    "start": "377260",
    "end": "384070"
  },
  {
    "text": "services naturally we had to move our own stack to to run on kubernetes as well so this is what we wanted to build",
    "start": "384070",
    "end": "390880"
  },
  {
    "text": "ideally with is what we wanted to build we wanted to have all uniform nodes doing whatever the containers inside",
    "start": "390880",
    "end": "399370"
  },
  {
    "text": "them world but from outside that will look the same there is no taking up images we have",
    "start": "399370",
    "end": "405490"
  },
  {
    "text": "different types of load balances depending on the traffic type whether is level 4 level 5 at level 4 level 7 and",
    "start": "405490",
    "end": "412270"
  },
  {
    "text": "different ones and and hopefully will have everything in the including my sequel and memcache key and everything",
    "start": "412270",
    "end": "418719"
  },
  {
    "text": "else that's there so that was the ideal stack that we wanted to build we set out to build this the first challenge that",
    "start": "418719",
    "end": "425379"
  },
  {
    "text": "we had was around databases and persistent storage in in general the",
    "start": "425379",
    "end": "433120"
  },
  {
    "text": "first realization we had around databases was that while we deploy our code about maybe three four times a day",
    "start": "433120",
    "end": "440199"
  },
  {
    "text": "we wanted to ID Liam do it more often the last time we deployed our databases in bumped up the version for example or",
    "start": "440199",
    "end": "446500"
  },
  {
    "text": "change anything around our database I was pretty much never maybe here before",
    "start": "446500",
    "end": "451750"
  },
  {
    "text": "that maybe even eighteen months before that so the frequency of change in a database in terms of the database itself",
    "start": "451750",
    "end": "458409"
  },
  {
    "text": "not the schema and other data itself but the database engine itself and the code",
    "start": "458409",
    "end": "463960"
  },
  {
    "text": "was completely out of sync it's as as as out of sync as you know three four times",
    "start": "463960",
    "end": "470860"
  },
  {
    "text": "a day versus once every 18 months so one of the biggest advantages of continued",
    "start": "470860",
    "end": "477520"
  },
  {
    "text": "ization for us was not necessarily applicable to databases the other",
    "start": "477520",
    "end": "483099"
  },
  {
    "text": "advantage of having containerized our back-end was stability and high availability for for for application",
    "start": "483099",
    "end": "489250"
  },
  {
    "text": "where the container that would serve your application would potentially can run anywhere and therefore would be",
    "start": "489250",
    "end": "497800"
  },
  {
    "text": "[Music] would be something that is you know when",
    "start": "497800",
    "end": "503889"
  },
  {
    "text": "it runs if there's a if there's an issue with the online survey can be moved somewhere else with databases we would",
    "start": "503889",
    "end": "509050"
  },
  {
    "text": "benefit from that but realistically we were running our databases on Amazon RDS or other you know the database or or",
    "start": "509050",
    "end": "518169"
  },
  {
    "text": "infrastructure as a service essentially components that were provided to us so we're not getting that much of a mileage",
    "start": "518169",
    "end": "524470"
  },
  {
    "text": "out of of using databases in containers but we still try to experiment with that",
    "start": "524470",
    "end": "531839"
  },
  {
    "text": "the biggest issue that found was while we had good practices around making sure our schema is",
    "start": "531839",
    "end": "540170"
  },
  {
    "text": "backward compatible and we don't ever break our application with a but a",
    "start": "540170",
    "end": "545340"
  },
  {
    "text": "database change and we could keep that the entire the entire containerization",
    "start": "545340",
    "end": "553200"
  },
  {
    "text": "if a database did not really fit well with our deployment strategy we had to",
    "start": "553200",
    "end": "558960"
  },
  {
    "text": "technically say some of our databases some of our containers which contain databases are special that's special and",
    "start": "558960",
    "end": "566430"
  },
  {
    "text": "are different from the rest of them we wanted to avoid that as much as possible we set out to remember we set out to do",
    "start": "566430",
    "end": "572610"
  },
  {
    "text": "this to make sure that none of the servers are special all of them are uniform and all of a sudden we had to",
    "start": "572610",
    "end": "578670"
  },
  {
    "text": "treat some of the containers now as a special and by especial I mean they shouldn't be deployed every time because",
    "start": "578670",
    "end": "584880"
  },
  {
    "text": "you want to database to be always up to date there are always up they preferably",
    "start": "584880",
    "end": "590280"
  },
  {
    "text": "couldn't couldn't move even with the best storage underneath there either what there were hiccups around access to",
    "start": "590280",
    "end": "596910"
  },
  {
    "text": "database when a container providing the database moves from one one node to another so we had to pin them down which",
    "start": "596910",
    "end": "602070"
  },
  {
    "text": "means that Jen you have a single point of failure so the first thing that we realized is that we're not going to take",
    "start": "602070",
    "end": "607440"
  },
  {
    "text": "our databases into containers we left them outside and we still carried on using the database card and I'm using",
    "start": "607440",
    "end": "614250"
  },
  {
    "text": "the word database in a general way for anything persistent stateful including rabbitmq for example and we kept them",
    "start": "614250",
    "end": "621180"
  },
  {
    "text": "outside as services provided the second part that we found",
    "start": "621180",
    "end": "629519"
  },
  {
    "text": "challenging we're around secrets so",
    "start": "629519",
    "end": "636259"
  },
  {
    "text": "traditionally what we do is we put the secrets around you know credentials to database access or API keys to any",
    "start": "636259",
    "end": "644490"
  },
  {
    "text": "service that our application use we would we would put them inside the configuration of application now that is",
    "start": "644490",
    "end": "651300"
  },
  {
    "text": "encrypted and it's not committed into the git repository it's coming from outside we had some something very similar to a",
    "start": "651300",
    "end": "659579"
  },
  {
    "text": "she cops vault for example built a long time ago we called it secret service and",
    "start": "659579",
    "end": "665129"
  },
  {
    "text": "what it does is that it provides secrets to the application in a short time",
    "start": "665129",
    "end": "670439"
  },
  {
    "text": "window when the application starts up and we wanted to move that over to kubernetes world and use it but we also",
    "start": "670439",
    "end": "678569"
  },
  {
    "text": "wanted to use communities native secret management the config manage config maps and secrets and what that meant was that",
    "start": "678569",
    "end": "686399"
  },
  {
    "text": "we had to put our secrets into config kubernetes configuration files and commit them into git now you might say",
    "start": "686399",
    "end": "693689"
  },
  {
    "text": "you don't have to commit those files into git repositories or you can commit",
    "start": "693689",
    "end": "699689"
  },
  {
    "text": "them into a git repository but they can be encrypted and if you look at a configuration file for for communities",
    "start": "699689",
    "end": "705329"
  },
  {
    "text": "for secrets you see that it is a key value pair essentially the key is a secret name the value isn't encrypted or",
    "start": "705329",
    "end": "711810"
  },
  {
    "text": "unencrypted a value for the secret and in theory we could we could have left",
    "start": "711810",
    "end": "718529"
  },
  {
    "text": "those files outside of a version control but the issue with that is first of all it's not ideal then you have to store it",
    "start": "718529",
    "end": "724290"
  },
  {
    "text": "somewhere because obviously do and the second part is it's usually secrets and applications work in lockstep you know",
    "start": "724290",
    "end": "731819"
  },
  {
    "text": "when you when you have a new API service that you start using you want to add the secrets to it address add the API keys",
    "start": "731819",
    "end": "739230"
  },
  {
    "text": "to the secrets file at the same time and you want those to go out at the same time we'd add to shopping your service",
    "start": "739230",
    "end": "744720"
  },
  {
    "text": "so we had to have them in some sort of source code repository even if it was not the main source code repository of",
    "start": "744720",
    "end": "751290"
  },
  {
    "text": "our application and that meant how the issues that we had with that was around",
    "start": "751290",
    "end": "757850"
  },
  {
    "text": "what we going to do with access right to get what if somebody you know just commits the the secrets in plain text",
    "start": "757850",
    "end": "764750"
  },
  {
    "text": "into the into the good repository by mistake I forgets to encrypts them we",
    "start": "764750",
    "end": "770870"
  },
  {
    "text": "had we experimented with other secrecy services like git crypt for example which which works around and making sure",
    "start": "770870",
    "end": "776839"
  },
  {
    "text": "all the files of a certain type are always encrypted but we found them restricted in terms of their have a you",
    "start": "776839",
    "end": "785569"
  },
  {
    "text": "know binary access control either you have access to all the files that are using good crypt or you do have access",
    "start": "785569",
    "end": "791930"
  },
  {
    "text": "to none of them which meant we couldn't just distinguish between secrets for our",
    "start": "791930",
    "end": "798410"
  },
  {
    "text": "test environment and secrets for a production environment it clearly we didn't develop a team especially now with gdpr that we need to have know",
    "start": "798410",
    "end": "804920"
  },
  {
    "text": "exactly who's got access with what we needed to know we needed to make sure",
    "start": "804920",
    "end": "810649"
  },
  {
    "text": "that production secrets are only accessible in very few while you know",
    "start": "810649",
    "end": "816230"
  },
  {
    "text": "staging and test environments potentially have access I accessed by by more people so the gates based encrypted",
    "start": "816230",
    "end": "824000"
  },
  {
    "text": "of secret code management files solutions didn't really work for us another thing was we wanted to concept",
    "start": "824000",
    "end": "831259"
  },
  {
    "text": "of the right only access we realized that that's it's really necessary thing for us to have and by that what I mean",
    "start": "831259",
    "end": "836899"
  },
  {
    "text": "is as a developer if I go and add a new service or I want to make a change to",
    "start": "836899",
    "end": "842889"
  },
  {
    "text": "for example a the way a one of my services consumes a secret I might want",
    "start": "842889",
    "end": "849350"
  },
  {
    "text": "to be able to add this new service and add the secrets that I want into the",
    "start": "849350",
    "end": "854360"
  },
  {
    "text": "right place which is the community secret file but necessarily I don't need to have or shouldn't have access to the",
    "start": "854360",
    "end": "861019"
  },
  {
    "text": "actual secrets themselves so it ended up being something like a writer only access where I can modify the secret",
    "start": "861019",
    "end": "866990"
  },
  {
    "text": "files as to add a new one or or redirect a secret from another place while I",
    "start": "866990",
    "end": "873019"
  },
  {
    "text": "don't have access to seeing the secrets themselves or what other secrets are available for me to see even if they're",
    "start": "873019",
    "end": "879410"
  },
  {
    "text": "encrypted and that was a challenge for us another concept that we started to",
    "start": "879410",
    "end": "887149"
  },
  {
    "text": "kind of struggle with where were environments now you know all of as a software developers the familiar",
    "start": "887149",
    "end": "893480"
  },
  {
    "text": "with environments like staging like test QA you know production but one of the",
    "start": "893480",
    "end": "899839"
  },
  {
    "text": "things that started to show up quite often for us was the fact that we ended",
    "start": "899839",
    "end": "905239"
  },
  {
    "text": "up firing up the entire stack on kubernetes with the same environment multiple times an example is if you have",
    "start": "905239",
    "end": "912439"
  },
  {
    "text": "a SAS business like us and you want to start selling it on trim then what is",
    "start": "912439",
    "end": "918709"
  },
  {
    "text": "the difference in terms of the environment between your SAS version and the one that you sell to your customer",
    "start": "918709",
    "end": "925040"
  },
  {
    "text": "on Prem they could both be production so now you have two production environments",
    "start": "925040",
    "end": "931519"
  },
  {
    "text": "but they have different configurations for example the endpoints that they get things from or the API keys that they",
    "start": "931519",
    "end": "936919"
  },
  {
    "text": "use are potentially different they're not using going to share the same secrets same endpoints same",
    "start": "936919",
    "end": "942829"
  },
  {
    "text": "configuration parameters of your SAS so you have two production environment with different configuration files or",
    "start": "942829",
    "end": "949759"
  },
  {
    "text": "alternatively you might have a case of wanting to have multiple stagings based on different branches or different",
    "start": "949759",
    "end": "956119"
  },
  {
    "text": "features that you add and environments don't cut it anymore there either what you end up with is you have these",
    "start": "956119",
    "end": "962569"
  },
  {
    "text": "environments that are fired up and and then you'd have to have tiny variations",
    "start": "962569",
    "end": "969079"
  },
  {
    "text": "between the configurations while the majority of the configuration is the same there are some very minut variations between specifics of the",
    "start": "969079",
    "end": "976339"
  },
  {
    "text": "configuration that are different we experimented with another environment called untrim which was equal equal to",
    "start": "976339",
    "end": "981499"
  },
  {
    "text": "production in every other sense and it had its own slight configuration changes but then as we started selling cloud 66",
    "start": "981499",
    "end": "988850"
  },
  {
    "text": "on Prem more to more customers with slight variations or starts like customizations that started to kind of",
    "start": "988850",
    "end": "995360"
  },
  {
    "text": "go out of whack as well so we realize that we have that we need another thing we need another concept on top of an",
    "start": "995360",
    "end": "1001539"
  },
  {
    "text": "environment something that that is more like a deployment destination and the last challenge we had to overcome was",
    "start": "1001539",
    "end": "1007929"
  },
  {
    "text": "around configurations traditionally pretty much everyone puts the configuration next to the code and in",
    "start": "1007929",
    "end": "1014499"
  },
  {
    "text": "some sort of a file whether it's a in a power arms file or JSON or llamó or some sort and we wanted to use the",
    "start": "1014499",
    "end": "1022989"
  },
  {
    "text": "communities native way of config push it out pull it out into into",
    "start": "1022989",
    "end": "1028270"
  },
  {
    "text": "kubernetes to manage those configurations for a spare namespace if you will but we we realized that we",
    "start": "1028270",
    "end": "1036579"
  },
  {
    "text": "needed that to be either repeated in multiple namespaces or shared and what",
    "start": "1036580",
    "end": "1042220"
  },
  {
    "text": "by that what I mean is if you think about each kubernetes namespace holding one instance of your application then",
    "start": "1042220",
    "end": "1048040"
  },
  {
    "text": "you can think of configuration of that namespace of that instance being config",
    "start": "1048040",
    "end": "1053110"
  },
  {
    "text": "maps within that namespace so you have one namespace that holds your code and also your configuration as conflict maps",
    "start": "1053110",
    "end": "1059590"
  },
  {
    "text": "and you have another namespace that's another version of your application or another but for now let's call it still",
    "start": "1059590",
    "end": "1066130"
  },
  {
    "text": "environment of your application and you have the configuration for it there and then you have a lot of repeats so if you",
    "start": "1066130",
    "end": "1073120"
  },
  {
    "text": "go and have to do a code rotate like a tab API key rotation because either it's",
    "start": "1073120",
    "end": "1079090"
  },
  {
    "text": "compromised as best practices you want to rotate the API keys to your for example I don't know a CWS API you have",
    "start": "1079090",
    "end": "1085540"
  },
  {
    "text": "to go around every single one of those namespaces every single instance of your names of your application and do the key",
    "start": "1085540",
    "end": "1092020"
  },
  {
    "text": "rotation over there obviously there are solutions around that but we wanted to use the native kubernetes way and that was another",
    "start": "1092020",
    "end": "1098320"
  },
  {
    "text": "challenge so we started working on our CRC the pipeline to solve those problems",
    "start": "1098320",
    "end": "1105070"
  },
  {
    "text": "to see how we can embed rcic these things into our CI CD problem CIC",
    "start": "1105070",
    "end": "1111280"
  },
  {
    "text": "department that we have we were using a normal you know the CI CD solution that",
    "start": "1111280",
    "end": "1116410"
  },
  {
    "text": "would just take our code from the git repository run the tests and then deploy it and we found that very difficult to",
    "start": "1116410",
    "end": "1124150"
  },
  {
    "text": "to adapt that solution for what we wanted it would do the CI CD could have",
    "start": "1124150",
    "end": "1131140"
  },
  {
    "text": "traditional things like your any unit tests and integration test very well but then we wanted to have blue green or canary deployments or be easy to roll",
    "start": "1131140",
    "end": "1138670"
  },
  {
    "text": "back in production or you know do things like don't pull images from docker hub",
    "start": "1138670",
    "end": "1143970"
  },
  {
    "text": "make sure that you pull it from our own repositories make sure that there are no no developer adds tag latest for example",
    "start": "1143970",
    "end": "1152260"
  },
  {
    "text": "to to the images or do image scans for for known security vulnerabilities or",
    "start": "1152260",
    "end": "1157630"
  },
  {
    "text": "bad base images and all all those things obviously when I look at something for example like Jenkins as",
    "start": "1157630",
    "end": "1163240"
  },
  {
    "text": "a as an open source see I see dissolution I look at it as a as a bash",
    "start": "1163240",
    "end": "1169390"
  },
  {
    "text": "file and look at as a scripting language that I can do whatever I want to do with it and I can find a plug in or write a",
    "start": "1169390",
    "end": "1174760"
  },
  {
    "text": "plug-in for it and it will work fine but ideally we wanted something that was built specific for these requirements",
    "start": "1174760",
    "end": "1181180"
  },
  {
    "text": "around containerization around solution around environments you know with a solution around our secrets and",
    "start": "1181180",
    "end": "1187450"
  },
  {
    "text": "configuration so this is what we ended up building all those problems led to",
    "start": "1187450",
    "end": "1192700"
  },
  {
    "text": "this being our pipeline and we called it I continued the letter view pipeline as a result of this we release the product",
    "start": "1192700",
    "end": "1198790"
  },
  {
    "text": "and we open source a bunch of it which we can I can tell you about a little bit more in detail and hopefully you will",
    "start": "1198790",
    "end": "1205120"
  },
  {
    "text": "find those open source solutions useful but on the top left we would get the",
    "start": "1205120",
    "end": "1210340"
  },
  {
    "text": "code from source code from a git repository or potentially some pre-built stalker images now the pre-built docker",
    "start": "1210340",
    "end": "1217570"
  },
  {
    "text": "images on the top left they could either be one off-the-shelf docker image like",
    "start": "1217570",
    "end": "1224230"
  },
  {
    "text": "Redis for example the official Redis image or it could be a artifact an artifact of our pre-existing CI CD",
    "start": "1224230",
    "end": "1231820"
  },
  {
    "text": "solution that we have so if we have Jenkins for example that takes our code and builds it into an image as an",
    "start": "1231820",
    "end": "1237160"
  },
  {
    "text": "artifact of this you know the test and he puts it into a docker registry we can pull it from there either way the",
    "start": "1237160",
    "end": "1243340"
  },
  {
    "text": "first step for us was to make sure the code is tested and make sure that every deployment is tagged with the same",
    "start": "1243340",
    "end": "1251280"
  },
  {
    "text": "uniform tag across the board whether the image comes from off-the-shelf Redis or",
    "start": "1251280",
    "end": "1256870"
  },
  {
    "text": "it's something that is our application and we build it and that's what this we tagging and building steps are so we",
    "start": "1256870",
    "end": "1263050"
  },
  {
    "text": "built that step the building a tree tagging as the first step to make sure",
    "start": "1263050",
    "end": "1268210"
  },
  {
    "text": "that we have a snapshot of our application including the code configuration environment variables and",
    "start": "1268210",
    "end": "1273670"
  },
  {
    "text": "everything else that's there the result of this effort was one open source project called habitus which you can see",
    "start": "1273670",
    "end": "1281170"
  },
  {
    "text": "here and it supports build steps where you can take one part of the code build",
    "start": "1281170",
    "end": "1287530"
  },
  {
    "text": "it into a bunch of docker images and then take those images into the next step and also it supports other",
    "start": "1287530",
    "end": "1292880"
  },
  {
    "text": "around you know providing secrets during build files where you want to have for",
    "start": "1292880",
    "end": "1298250"
  },
  {
    "text": "example a private git repository junior build potentially for private dependencies within your application or",
    "start": "1298250",
    "end": "1304730"
  },
  {
    "text": "squash the images take the secrets out take layers out for security and vulnerability test purposes it does all",
    "start": "1304730",
    "end": "1311210"
  },
  {
    "text": "of that and then it tags everything at one step so now that we have a snapshot of the code configuration everything in",
    "start": "1311210",
    "end": "1317360"
  },
  {
    "text": "one file then we can put it into a container registry now our solution",
    "start": "1317360",
    "end": "1322850"
  },
  {
    "text": "worked with our own armed registry but we do support other ones as well because",
    "start": "1322850",
    "end": "1328430"
  },
  {
    "text": "we wanted to you know when we go to an on-prem solution to sell it to an on-prem customer they might have a different content registry so we had to",
    "start": "1328430",
    "end": "1335300"
  },
  {
    "text": "support that the next step for us was asset management and this was an interesting part that we kind of it was",
    "start": "1335300",
    "end": "1341480"
  },
  {
    "text": "a late realization after a bunch of production issues that we had that we needed and buy annotations were mean",
    "start": "1341480",
    "end": "1347470"
  },
  {
    "text": "ideally what we wanted was to go into a COO control or pod describe pod in a",
    "start": "1347470",
    "end": "1352910"
  },
  {
    "text": "certain part and know exactly which git commit was used to build this when was",
    "start": "1352910",
    "end": "1360020"
  },
  {
    "text": "it built who built it so we can track it back and see where it's gone where it is",
    "start": "1360020",
    "end": "1367460"
  },
  {
    "text": "and all those annotations we wanted those to be available to the code and application itself so he can be used in",
    "start": "1367460",
    "end": "1373790"
  },
  {
    "text": "the log files that will allow us to trace one request from outside from the web all the way back through the log",
    "start": "1373790",
    "end": "1381230"
  },
  {
    "text": "files to see where it's been through the entire flow now as you can imagine because we are not using not every",
    "start": "1381230",
    "end": "1388760"
  },
  {
    "text": "traffic type that we have as HTTP we have TCP traffic it wasn't quite possible for us and it is about it'd be",
    "start": "1388760",
    "end": "1394730"
  },
  {
    "text": "about a year ago to use a service mesh completely in that sense that we could",
    "start": "1394730",
    "end": "1400340"
  },
  {
    "text": "we could benefit from a service mesh to trace traffic so we had to make sure",
    "start": "1400340",
    "end": "1405470"
  },
  {
    "text": "that the metadata is available to the code so it can be used to augment the locks that are that are written by the",
    "start": "1405470",
    "end": "1412190"
  },
  {
    "text": "application and that's the first step that we do after the images are registered so all the images are tagged",
    "start": "1412190",
    "end": "1418700"
  },
  {
    "text": "and registered as well as that all the assets that up the resources that are deployed to",
    "start": "1418700",
    "end": "1423929"
  },
  {
    "text": "communities are attacked we also do scanning of the images we wanted to make",
    "start": "1423929",
    "end": "1428970"
  },
  {
    "text": "sure there is no security vulnerability no base image vulnerabilities available there integration testing is a byproduct of",
    "start": "1428970",
    "end": "1435870"
  },
  {
    "text": "that the next step when we had all the images including databases in this case",
    "start": "1435870",
    "end": "1441480"
  },
  {
    "text": "for integration test purposes inside of containers we could just scaffold the entire stack up and then run some",
    "start": "1441480",
    "end": "1447210"
  },
  {
    "text": "integration tests around it the neck",
    "start": "1447210",
    "end": "1452520"
  },
  {
    "text": "that the configuration challenge we overcome with with with a hybrid solution with helm so home is a great",
    "start": "1452520",
    "end": "1458190"
  },
  {
    "text": "tool when it comes to off-the-shelf installation of applications we looked",
    "start": "1458190",
    "end": "1463679"
  },
  {
    "text": "at it as potentially a delivery suffer delivery solution where we could have the best practices installation of",
    "start": "1463679",
    "end": "1470549"
  },
  {
    "text": "RabbitMQ with a single command of help but what we found it lacking was that we",
    "start": "1470549",
    "end": "1478500"
  },
  {
    "text": "couldn't dictate or we couldn't specify policies around for developers so when",
    "start": "1478500",
    "end": "1486390"
  },
  {
    "text": "they create new services in kubernetes how those services should look like now",
    "start": "1486390",
    "end": "1492240"
  },
  {
    "text": "to give you an example if we wanted to make sure that anyone any developer who",
    "start": "1492240",
    "end": "1498870"
  },
  {
    "text": "adds a new say ingress to our communities follows a certain criteria",
    "start": "1498870",
    "end": "1503910"
  },
  {
    "text": "they always have to get the Stila certificates from a specific place they",
    "start": "1503910",
    "end": "1509070"
  },
  {
    "text": "always have to annotate it with these annotations they always have to call it a certain way and they have to have it",
    "start": "1509070",
    "end": "1514110"
  },
  {
    "text": "in a separate file named such and all those things that can be applied to it",
    "start": "1514110",
    "end": "1519950"
  },
  {
    "text": "while we could go to our ops team and ask them to write helm charts or get the",
    "start": "1519950",
    "end": "1526950"
  },
  {
    "text": "developers to write helm charts and get them to be validated by someone else we prefer to have the Native communities",
    "start": "1526950",
    "end": "1533429"
  },
  {
    "text": "resources written as guidelines as templates and now as we call it stencils",
    "start": "1533429",
    "end": "1540169"
  },
  {
    "text": "for each one of those resource types so now what we ended up with is for off-the-shelf tools like rabbitmq right",
    "start": "1540169",
    "end": "1546840"
  },
  {
    "text": "like our memcache key we use helm but as guideline for any new development within",
    "start": "1546840",
    "end": "1553140"
  },
  {
    "text": "our applique with our own application users and I can I can show you what census looked like after that another thing",
    "start": "1553140",
    "end": "1560700"
  },
  {
    "text": "that we found quite quite useful was was being able to have access to upstream",
    "start": "1560700",
    "end": "1566640"
  },
  {
    "text": "Native communities API without having a wrapper around it now this kind of goes back to this entire analogy of",
    "start": "1566640",
    "end": "1572760"
  },
  {
    "text": "communities being a vending machine and you know our applications being candy inside of that vending machine we wanted",
    "start": "1572760",
    "end": "1579360"
  },
  {
    "text": "developers to have access to stack up the vending machine with their applications and external vendors to",
    "start": "1579360",
    "end": "1584640"
  },
  {
    "text": "also stack up the the vending machine with the apps we also wanted to give",
    "start": "1584640",
    "end": "1590340"
  },
  {
    "text": "access to this entire API of this vending machine a or for example kubernetes in this case so they can so",
    "start": "1590340",
    "end": "1599100"
  },
  {
    "text": "they can you know benefit from the upstream communities have the community",
    "start": "1599100",
    "end": "1604590"
  },
  {
    "text": "around communities and and in the entire CN CF you know community around it so",
    "start": "1604590",
    "end": "1610020"
  },
  {
    "text": "they can use it and use the internet you know find answers on Stack Overflow around the issues that they have",
    "start": "1610020",
    "end": "1615960"
  },
  {
    "text": "without us restricting access to that kubernetes api to avoid mistakes being made you know an example of that was was",
    "start": "1615960",
    "end": "1623940"
  },
  {
    "text": "an example around the load balancer so the load balance is that we have the level four level seven load balancers",
    "start": "1623940",
    "end": "1630000"
  },
  {
    "text": "that we have had fixed IP address a global fixed IP address on google and we wanted to make sure that those then get",
    "start": "1630000",
    "end": "1635610"
  },
  {
    "text": "changed we could have locked it out it could be like an our back policy around it but we couldn't enforce those",
    "start": "1635610",
    "end": "1642330"
  },
  {
    "text": "policies around the file names for example in a file name of a configuration for Communities it's",
    "start": "1642330",
    "end": "1647400"
  },
  {
    "text": "completely invisible to communities when you apply that so we open sourced",
    "start": "1647400",
    "end": "1653580"
  },
  {
    "text": "another project called copper which which its own which the entire promise",
    "start": "1653580",
    "end": "1659250"
  },
  {
    "text": "of it is to act like a unit test for your kubernetes configuration files with",
    "start": "1659250",
    "end": "1665429"
  },
  {
    "text": "a simple DSL that you can say things like if the IP address for the load balancer has changed let me know it",
    "start": "1665429",
    "end": "1671549"
  },
  {
    "text": "doesn't necessarily mean it's a bad thing the deployment has to stop but somebody has to sign it off or you can say things like if somebody's using",
    "start": "1671549",
    "end": "1678450"
  },
  {
    "text": "latest as a tag for a docker image then deployment will stuff and that's an open",
    "start": "1678450",
    "end": "1684240"
  },
  {
    "text": "source project that we've we rolled out as well as a result",
    "start": "1684240",
    "end": "1689090"
  },
  {
    "text": "deployment work furs are the next step so we wanted to you know this is kind of a normal thing in the CI CDU maybe when",
    "start": "1689250",
    "end": "1695580"
  },
  {
    "text": "you have multiple steps of rolling out to staging and into production etc etc so that's that's one and then with",
    "start": "1695580",
    "end": "1701670"
  },
  {
    "text": "manual approvals around each one of them so another team member has to sign it off and then formations which is that",
    "start": "1701670",
    "end": "1707220"
  },
  {
    "text": "our concept that we came up with when we had issues with with environments so",
    "start": "1707220",
    "end": "1714330"
  },
  {
    "text": "formations here are various environments so environments are independent of deployment it's just an environment they",
    "start": "1714330",
    "end": "1721050"
  },
  {
    "text": "are limited to the number of environments that you have like production staging and QA and that's pretty much it",
    "start": "1721050",
    "end": "1726140"
  },
  {
    "text": "and usually have some sort of undocumented meaning your production everybody when you say production",
    "start": "1726140",
    "end": "1731940"
  },
  {
    "text": "environment everybody kind of says all you make sure that you don't break anything and staging is kind of like oh",
    "start": "1731940",
    "end": "1738300"
  },
  {
    "text": "it's kind of ready to go to production maybe you're testing it but these things are necessarily a convention or or",
    "start": "1738300",
    "end": "1743940"
  },
  {
    "text": "written anywhere we wanted that to be more structured when we say production",
    "start": "1743940",
    "end": "1749130"
  },
  {
    "text": "we mean certain things and also we want it to be we wanted to have multiple sets",
    "start": "1749130",
    "end": "1756390"
  },
  {
    "text": "of production environments on trim off Prem you know dedicated on the cloud or",
    "start": "1756390",
    "end": "1761730"
  },
  {
    "text": "our SAS and that's the concept of formation for us so we created this concept called formations and we",
    "start": "1761730",
    "end": "1766800"
  },
  {
    "text": "deployed two formations not to environments formations are likely deployment target you can have as many",
    "start": "1766800",
    "end": "1772590"
  },
  {
    "text": "formations as you want any formation can have an environment you can have a formation that is running on gke and",
    "start": "1772590",
    "end": "1779910"
  },
  {
    "text": "it's production and you can have another formation that is and that is also production but it's running on AWS for",
    "start": "1779910",
    "end": "1787350"
  },
  {
    "text": "various different reasons you might have different formations for different features for different environments for",
    "start": "1787350",
    "end": "1792510"
  },
  {
    "text": "different clients for different customers for different geographic regions and when it comes to stencils",
    "start": "1792510",
    "end": "1798570"
  },
  {
    "text": "versus like normal templates templates like helm charge for example version",
    "start": "1798570",
    "end": "1803700"
  },
  {
    "text": "control and that is an optional thing if you have a chart repository you don't necessarily have",
    "start": "1803700",
    "end": "1809970"
  },
  {
    "text": "version control if you opt in not to we wanted to have structure around that make sure that our configuration files",
    "start": "1809970",
    "end": "1817380"
  },
  {
    "text": "are version controlled we didn't want to allow people to use",
    "start": "1817380",
    "end": "1822399"
  },
  {
    "text": "flow control inside of llamó for example something like you know for every",
    "start": "1822399",
    "end": "1827529"
  },
  {
    "text": "service loop and then middle of it somebody would go and add if service name is front end then there is a",
    "start": "1827529",
    "end": "1834609"
  },
  {
    "text": "difference that would just make the entire configuration fall I'm not very understandable not maintainable and",
    "start": "1834609",
    "end": "1842039"
  },
  {
    "text": "templates are kind of domain independent they are sometimes the same language templating language is used for",
    "start": "1842039",
    "end": "1848200"
  },
  {
    "text": "rendering HTML but we wanted to we wanted to have something that's that's",
    "start": "1848200",
    "end": "1853239"
  },
  {
    "text": "the that's aware of the fact that is rendering the yamo file for containers for kubernetes essentially some sort of",
    "start": "1853239",
    "end": "1859960"
  },
  {
    "text": "a DSL so we built a sting stencils with version control with support for",
    "start": "1859960",
    "end": "1866019"
  },
  {
    "text": "database templates so you can get something like you know base of a deployment and then expand that yourself",
    "start": "1866019",
    "end": "1873639"
  },
  {
    "text": "into what your deployment looks like for it to be domain-specific ie I'm building",
    "start": "1873639",
    "end": "1879669"
  },
  {
    "text": "the result of this template rendering is a kubernetes configuration and have a",
    "start": "1879669",
    "end": "1884679"
  },
  {
    "text": "simple markup instead of having flow controls if-then-else for loops walls and things like that",
    "start": "1884679",
    "end": "1890139"
  },
  {
    "text": "so habitus is the first open source project that we rolled out around this it supports multi step bucket builds and",
    "start": "1890139",
    "end": "1897309"
  },
  {
    "text": "it does support multi server so you can roll it out on multiple servers and each step can build can be built on different",
    "start": "1897309",
    "end": "1903669"
  },
  {
    "text": "server in your farm and it is multi tenant it as well so you can have multiple builds running of the same",
    "start": "1903669",
    "end": "1910359"
  },
  {
    "text": "thing of different versions the same thing and it doesn't mess up docker daemon it also is cache aware so knows",
    "start": "1910359",
    "end": "1915369"
  },
  {
    "text": "which part needs to be built where you can find out and happy to do and it also",
    "start": "1915369",
    "end": "1921339"
  },
  {
    "text": "just does support secrets during the build where if you have an NPM or a ruby gem or a goal library that is a private",
    "start": "1921339",
    "end": "1928899"
  },
  {
    "text": "repository and it means it private and sage key it does for providing that during the build and then without",
    "start": "1928899",
    "end": "1934389"
  },
  {
    "text": "leaving any traces and copper as I mentioned it allows you to have your developers to have access to vanilla",
    "start": "1934389",
    "end": "1941589"
  },
  {
    "text": "upstream api's it can stop the build as opposed to just warning you and asking",
    "start": "1941589",
    "end": "1948820"
  },
  {
    "text": "for an extra pair of eyes tu-tu-tu-tu-tu sign of the deployment flow based on",
    "start": "1948820",
    "end": "1955450"
  },
  {
    "text": "different various different conditions that could happen and you can have extra asset",
    "start": "1955450",
    "end": "1961799"
  },
  {
    "text": "policies like filenames and folders as well as intra assets policies where you",
    "start": "1961799",
    "end": "1967450"
  },
  {
    "text": "know you can say things like some asset should have annotations or some asset should be somewhat some IP address of an",
    "start": "1967450",
    "end": "1974200"
  },
  {
    "text": "asset should be within a specific range at the end our stack ended up looking",
    "start": "1974200",
    "end": "1980379"
  },
  {
    "text": "like this so we kept our databases inside of our database as a service or",
    "start": "1980379",
    "end": "1986940"
  },
  {
    "text": "in rabbitmq as a service providers and we had now we have a pool of nodes that",
    "start": "1986940",
    "end": "1994179"
  },
  {
    "text": "identical they are read-only OS as well so we don't we cannot even make changes",
    "start": "1994179",
    "end": "1999609"
  },
  {
    "text": "to those deliberately so that's a good thing and we can fire it up fire up new ones and you know shut down old ones",
    "start": "1999609",
    "end": "2006259"
  },
  {
    "text": "with rotating upgrades and all the things that comes with it now I want to",
    "start": "2006259",
    "end": "2012929"
  },
  {
    "text": "show you copper specifically if I may just just as a",
    "start": "2012929",
    "end": "2019499"
  },
  {
    "text": "quick so this is copper that you can see",
    "start": "2019499",
    "end": "2026429"
  },
  {
    "text": "here around copper SH and if I show you",
    "start": "2026429",
    "end": "2032100"
  },
  {
    "text": "some examples of how how it works is a command-line tool that you can run and the example for example you know example",
    "start": "2032100",
    "end": "2039059"
  },
  {
    "text": "of not using a latest tag as an image it kind of looks like this I can write a",
    "start": "2039059",
    "end": "2044549"
  },
  {
    "text": "rule and this rule exists in a file we can call it a cop file and I just fetch",
    "start": "2044549",
    "end": "2050190"
  },
  {
    "text": "any image under my containers and if you familiar with abilities your deployment",
    "start": "2050190",
    "end": "2056990"
  },
  {
    "text": "resource you can you know that the image of a docker image that's used inside of",
    "start": "2056990",
    "end": "2062250"
  },
  {
    "text": "a pod is defined on the images of containers of spec template stick so",
    "start": "2062250",
    "end": "2068638"
  },
  {
    "text": "this is kind of a you know Jason part X Jason part if you want way of addressing",
    "start": "2068639",
    "end": "2075690"
  },
  {
    "text": "the image we take that copper understands the concepts like the docker",
    "start": "2075690",
    "end": "2080700"
  },
  {
    "text": "image so it looks at it as a docker image which means if the tag is acknowledged sistent ignores its latest",
    "start": "2080700",
    "end": "2086940"
  },
  {
    "text": "if the repository or registries in non-existent it knows this docker hub he picks up the tag and it makes sure",
    "start": "2086940",
    "end": "2093110"
  },
  {
    "text": "that it's not latest or things like you",
    "start": "2093110",
    "end": "2098900"
  },
  {
    "text": "know you want to allow your developers to bump up your my sequel version if you run and get inside of the container only by minor versions not major versions and",
    "start": "2098900",
    "end": "2106310"
  },
  {
    "text": "you can do things like this so you can get the image name of any my sequel is",
    "start": "2106310",
    "end": "2111650"
  },
  {
    "text": "there's a tag picture tag and it understands semantic versioning so you can you can look at the semantic version",
    "start": "2111650",
    "end": "2118010"
  },
  {
    "text": "you make sure satisfies this version control extra asset policies you can do",
    "start": "2118010",
    "end": "2124130"
  },
  {
    "text": "things like make sure that the extension is EML not YAML if that's what you want",
    "start": "2124130",
    "end": "2130030"
  },
  {
    "text": "if the kind of an asset which you can you familiar with this is a kubernetes concept if the con is a deployment then",
    "start": "2130030",
    "end": "2137450"
  },
  {
    "text": "the metadata name metadata name in the metadata name then the file name should",
    "start": "2137450",
    "end": "2144080"
  },
  {
    "text": "end with deployments and obviously the extension is llaman so if that's a that's a car you can think of it as a",
    "start": "2144080",
    "end": "2150860"
  },
  {
    "text": "policy that you can enforce again it understand the stance IP addresses for example so you can have things like my",
    "start": "2150860",
    "end": "2158240"
  },
  {
    "text": "load balance IP address should be within this range no dr. hub images is another one that",
    "start": "2158240",
    "end": "2164810"
  },
  {
    "text": "you can think of or you can enforce things that you always pull the images",
    "start": "2164810",
    "end": "2170060"
  },
  {
    "text": "from a private registry and not the public registry you can enforce all those things so it's a very powerful DSL",
    "start": "2170060",
    "end": "2175700"
  },
  {
    "text": "it's very simple syntax allows you to to enforce policies that would allow your",
    "start": "2175700",
    "end": "2182960"
  },
  {
    "text": "developers in turn access the upstream Native communities API without",
    "start": "2182960",
    "end": "2188090"
  },
  {
    "text": "restricting them and and without you",
    "start": "2188090",
    "end": "2193660"
  },
  {
    "text": "having to check every time manually that any of your policies or components things that broke so with that I wanted",
    "start": "2193660",
    "end": "2202880"
  },
  {
    "text": "to thank you for your time if any questions I would love to answer",
    "start": "2202880",
    "end": "2207950"
  },
  {
    "text": "that about what we've built and what we've open-sourced we return this entire",
    "start": "2207950",
    "end": "2213530"
  },
  {
    "text": "pipeline into a product we call it classic Zeus skycap as a result of that and and we're where we are now our",
    "start": "2213530",
    "end": "2221120"
  },
  {
    "text": "uptime stayed pretty much the same as before but our scaling and our scaling and also",
    "start": "2221120",
    "end": "2228249"
  },
  {
    "text": "being able to move from one region to another has become much much faster",
    "start": "2228249",
    "end": "2234829"
  },
  {
    "text": "our untrimmed deployments are pretty much instantaneous now and our",
    "start": "2234829",
    "end": "2240079"
  },
  {
    "text": "deployments are most predictable more predictable and repeatable as a result when other things that we can do with",
    "start": "2240079",
    "end": "2246170"
  },
  {
    "text": "with this new setup is that we can and deploy a minimal set up somewhere onto a cloud on to equipment its communities",
    "start": "2246170",
    "end": "2252489"
  },
  {
    "text": "stack and cluster and then in case of an issue we can augment that deployments",
    "start": "2252489",
    "end": "2258380"
  },
  {
    "text": "replace the pods with more debug friendly pods where they do knock shipping and other things and we can get",
    "start": "2258380",
    "end": "2264920"
  },
  {
    "text": "it that and we can do all of this with this concept of formations so we have formations at a production but production but other formations our",
    "start": "2264920",
    "end": "2271099"
  },
  {
    "text": "production log friendly in another way so so that's a kind of brief very quick",
    "start": "2271099",
    "end": "2278539"
  },
  {
    "text": "rundown of what we had to be able to move our water over to kubernetes and thank you very much for your time ok",
    "start": "2278539",
    "end": "2287269"
  },
  {
    "text": "so we have around 20 minutes for your questions so feel free to drop them in",
    "start": "2287269",
    "end": "2294680"
  },
  {
    "text": "the Q&A tab there webinar interface and we are happy to answer them before we're",
    "start": "2294680",
    "end": "2304130"
  },
  {
    "text": "waiting for another questions probably as many highlights some some roadmap on",
    "start": "2304130",
    "end": "2313579"
  },
  {
    "text": "your on your projects that you have just highlighted for us and some further",
    "start": "2313579",
    "end": "2319430"
  },
  {
    "text": "steps and another notable items that have have not been current by this presentation",
    "start": "2319430",
    "end": "2325420"
  },
  {
    "text": "sure so on the habit aside which we didn't really um I didn't really go into",
    "start": "2325420",
    "end": "2331369"
  },
  {
    "text": "details of so habitus is a build workflow tool for doctor files on the",
    "start": "2331369",
    "end": "2337910"
  },
  {
    "text": "habitus side we are working with Microsoft specifically to integrate into",
    "start": "2337910",
    "end": "2343670"
  },
  {
    "text": "integrate that into draft which is a continuous build solution for",
    "start": "2343670",
    "end": "2348739"
  },
  {
    "text": "development where we can build using your local doctor demon but also",
    "start": "2348739",
    "end": "2354730"
  },
  {
    "text": "multi-step builds using your document and have it so that's this one one side of it on the",
    "start": "2354730",
    "end": "2360920"
  },
  {
    "text": "copper side because copper is not necessarily when copper works it glows",
    "start": "2360920",
    "end": "2368839"
  },
  {
    "text": "your configuration file into a a JSON format and everything every rule and every policy that you write for it is",
    "start": "2368839",
    "end": "2375140"
  },
  {
    "text": "applied to that Jason for in-memory format that means you can load pretty",
    "start": "2375140",
    "end": "2380450"
  },
  {
    "text": "much any file format and if any file type into copper and validations for it",
    "start": "2380450",
    "end": "2385640"
  },
  {
    "text": "as a result with copper what we can do is we are going to open it up to other",
    "start": "2385640",
    "end": "2391250"
  },
  {
    "text": "non kubernetes configuration files for any configuration system it could be",
    "start": "2391250",
    "end": "2397579"
  },
  {
    "text": "held charts that you could validate and it could be non communities configuration related things for any",
    "start": "2397579",
    "end": "2403369"
  },
  {
    "text": "others for example CN CF open source project that has a configuration file where there is llamo jason tamil or",
    "start": "2403369",
    "end": "2408920"
  },
  {
    "text": "anything else we can do that so that's on the roadmap for us to extend the reach of copper into more more",
    "start": "2408920",
    "end": "2417050"
  },
  {
    "text": "configuration validation for non kubernetes specific things and extend this dsl to understand the concepts of",
    "start": "2417050",
    "end": "2423170"
  },
  {
    "text": "things like how the charts for example so that's the immediate roadmap around those two projects as four classics is",
    "start": "2423170",
    "end": "2430970"
  },
  {
    "text": "skycap you know rolling it out for four more customers and seeing the use cases",
    "start": "2430970",
    "end": "2437390"
  },
  {
    "text": "they have and how we can we can take care of more traditional CI CD workers",
    "start": "2437390",
    "end": "2443750"
  },
  {
    "text": "as well as specific deployment to production is where we are going to so for us CI CD tools that are out there",
    "start": "2443750",
    "end": "2449839"
  },
  {
    "text": "are very very good solutions for building and testing containers infrastructure but our aim is to to pro",
    "start": "2449839",
    "end": "2457609"
  },
  {
    "text": "to to make skycap the the ultimate kubernetes deployment tool when it when",
    "start": "2457609",
    "end": "2463160"
  },
  {
    "text": "it comes to a micro service based application perfect",
    "start": "2463160",
    "end": "2471560"
  },
  {
    "text": "so we're still waiting for your questions otherwise we may save around",
    "start": "2471560",
    "end": "2477960"
  },
  {
    "text": "15 minutes of your time so it's just called for for attendees",
    "start": "2477960",
    "end": "2484580"
  },
  {
    "text": "right so I'm counting to three and we are close to this webinar so one two",
    "start": "2488840",
    "end": "2496170"
  },
  {
    "text": "three that was the final call for the questions here thank you - thank you everybody who has",
    "start": "2496170",
    "end": "2503670"
  },
  {
    "text": "joined us here today just to remind that we are holding this you can see regular",
    "start": "2503670",
    "end": "2508920"
  },
  {
    "text": "webinars every Tuesday exact at this time independently which teams only",
    "start": "2508920",
    "end": "2514560"
  },
  {
    "text": "allocated so also this webinar has been recorded and will be available in the",
    "start": "2514560",
    "end": "2520110"
  },
  {
    "text": "next few days with a CNC our website thank you for joining us today and good bye",
    "start": "2520110",
    "end": "2527119"
  }
]