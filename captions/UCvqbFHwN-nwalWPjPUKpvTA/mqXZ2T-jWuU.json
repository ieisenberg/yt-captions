[
  {
    "text": "hi everyone uh welcome to our talk uh",
    "start": "80",
    "end": "2960"
  },
  {
    "text": "thank you so much for coming i'm sure",
    "start": "2960",
    "end": "4160"
  },
  {
    "text": "it's been a long day so hopefully uh it",
    "start": "4160",
    "end": "6560"
  },
  {
    "text": "doesn't feel too long um so here's our",
    "start": "6560",
    "end": "9440"
  },
  {
    "text": "talk Flink on Carmata building resilient",
    "start": "9440",
    "end": "11519"
  },
  {
    "text": "data pipelines on multicluster",
    "start": "11519",
    "end": "13480"
  },
  {
    "text": "Kubernetes um we'll guide you through",
    "start": "13480",
    "end": "15599"
  },
  {
    "text": "the journey that we went through to",
    "start": "15599",
    "end": "16960"
  },
  {
    "text": "support stateful application failover on",
    "start": "16960",
    "end": "19039"
  },
  {
    "text": "Apache Flink and the collaboration that",
    "start": "19039",
    "end": "21199"
  },
  {
    "text": "took place between the Carmada community",
    "start": "21199",
    "end": "23439"
  },
  {
    "text": "as well as the Bloomberg streaming",
    "start": "23439",
    "end": "24800"
  },
  {
    "text": "platform team to add this support",
    "start": "24800",
    "end": "27439"
  },
  {
    "text": "hopefully by the end you'll have",
    "start": "27439",
    "end": "28960"
  },
  {
    "text": "followed along been introduced to the",
    "start": "28960",
    "end": "30800"
  },
  {
    "text": "Carmada project and learned some of the",
    "start": "30800",
    "end": "32800"
  },
  {
    "text": "basics about how you can improve your",
    "start": "32800",
    "end": "35200"
  },
  {
    "text": "data pipeline resiliency as",
    "start": "35200",
    "end": "37960"
  },
  {
    "text": "well so starting with introductions my",
    "start": "37960",
    "end": "40879"
  },
  {
    "text": "name is Mihas Chachilo um I'm a senior",
    "start": "40879",
    "end": "43200"
  },
  {
    "text": "software engineer and tech lead at",
    "start": "43200",
    "end": "44879"
  },
  {
    "text": "Bloomberg",
    "start": "44879",
    "end": "46559"
  },
  {
    "text": "uh my name is Leewan and I'm also a",
    "start": "46559",
    "end": "48960"
  },
  {
    "text": "software engineer from Bloomberg as well",
    "start": "48960",
    "end": "52960"
  },
  {
    "text": "together we work on the streaming",
    "start": "52960",
    "end": "54879"
  },
  {
    "text": "platform team which provides Apache",
    "start": "54879",
    "end": "56879"
  },
  {
    "text": "Flink to many different users within",
    "start": "56879",
    "end": "58719"
  },
  {
    "text": "Bloomberg",
    "start": "58719",
    "end": "61719"
  },
  {
    "text": "oh sorry uh for the agenda today um",
    "start": "67320",
    "end": "70799"
  },
  {
    "text": "we'll start with a condensed overview of",
    "start": "70799",
    "end": "73119"
  },
  {
    "text": "Apache Flink for those who might not be",
    "start": "73119",
    "end": "74960"
  },
  {
    "text": "familiar um so we can provide just more",
    "start": "74960",
    "end": "77280"
  },
  {
    "text": "context for you as it's the main point",
    "start": "77280",
    "end": "79280"
  },
  {
    "text": "of our talk specifically we'll touch a",
    "start": "79280",
    "end": "82080"
  },
  {
    "text": "little bit about the importance of",
    "start": "82080",
    "end": "84080"
  },
  {
    "text": "application state and the recovery",
    "start": "84080",
    "end": "85680"
  },
  {
    "text": "mechanisms that we already um that are",
    "start": "85680",
    "end": "88159"
  },
  {
    "text": "already provided by Apache Flink with",
    "start": "88159",
    "end": "90960"
  },
  {
    "text": "that background in mind we'll review",
    "start": "90960",
    "end": "92560"
  },
  {
    "text": "some of the challenges we faced with",
    "start": "92560",
    "end": "94479"
  },
  {
    "text": "managing Flink applications in a",
    "start": "94479",
    "end": "96240"
  },
  {
    "text": "multicluster environment while ensuring",
    "start": "96240",
    "end": "98640"
  },
  {
    "text": "resil resiliency and how we were able to",
    "start": "98640",
    "end": "101520"
  },
  {
    "text": "use Carmata to support automated and",
    "start": "101520",
    "end": "103920"
  },
  {
    "text": "stateful cluster failover",
    "start": "103920",
    "end": "106320"
  },
  {
    "text": "finally we'll touch on the overall",
    "start": "106320",
    "end": "108240"
  },
  {
    "text": "benefits of Carmada the outcomes",
    "start": "108240",
    "end": "110640"
  },
  {
    "text": "limitations and further improvements",
    "start": "110640",
    "end": "112479"
  },
  {
    "text": "we're working together with the Carmada",
    "start": "112479",
    "end": "114640"
  },
  {
    "text": "community um to improve",
    "start": "114640",
    "end": "118759"
  },
  {
    "text": "so at Bloomberg we operates a large",
    "start": "119840",
    "end": "121840"
  },
  {
    "text": "scale streaming platform that empowers",
    "start": "121840",
    "end": "124159"
  },
  {
    "text": "critical financial data processing we",
    "start": "124159",
    "end": "126799"
  },
  {
    "text": "currently have around 1,000 unique",
    "start": "126799",
    "end": "128800"
  },
  {
    "text": "Apache Flink jobs running on top of",
    "start": "128800",
    "end": "131200"
  },
  {
    "text": "multiple Kubernetes cluster spread",
    "start": "131200",
    "end": "133440"
  },
  {
    "text": "across multiple tiers",
    "start": "133440",
    "end": "135760"
  },
  {
    "text": "this Flink jobs handles a variety of use",
    "start": "135760",
    "end": "138000"
  },
  {
    "text": "cases including data ETL real-time",
    "start": "138000",
    "end": "141440"
  },
  {
    "text": "analytics and event",
    "start": "141440",
    "end": "143800"
  },
  {
    "text": "processing to give you an idea of its",
    "start": "143800",
    "end": "146480"
  },
  {
    "text": "impact this system is crucial to",
    "start": "146480",
    "end": "149200"
  },
  {
    "text": "Bloomberg's core financial products",
    "start": "149200",
    "end": "151520"
  },
  {
    "text": "which provides real-time marketing",
    "start": "151520",
    "end": "153120"
  },
  {
    "text": "insights to traders analysts and",
    "start": "153120",
    "end": "156160"
  },
  {
    "text": "financial professionals across the world",
    "start": "156160",
    "end": "159280"
  },
  {
    "text": "it this image here showcas the",
    "start": "159280",
    "end": "161120"
  },
  {
    "text": "Bloomberg's terminal which is where the",
    "start": "161120",
    "end": "163440"
  },
  {
    "text": "process data is visualized helping our",
    "start": "163440",
    "end": "166080"
  },
  {
    "text": "user to make the informed decision in",
    "start": "166080",
    "end": "168319"
  },
  {
    "text": "real time given this scale ensure",
    "start": "168319",
    "end": "171599"
  },
  {
    "text": "reliability and efficiency is our top",
    "start": "171599",
    "end": "174680"
  },
  {
    "text": "priority this is where Flink on Kamada",
    "start": "174680",
    "end": "177280"
  },
  {
    "text": "comes into",
    "start": "177280",
    "end": "178760"
  },
  {
    "text": "play so what is Apache Flink apache",
    "start": "178760",
    "end": "182560"
  },
  {
    "text": "Flink is a popular open-source data",
    "start": "182560",
    "end": "185120"
  },
  {
    "text": "streaming framework it has features",
    "start": "185120",
    "end": "187519"
  },
  {
    "text": "including low latency flexible and high",
    "start": "187519",
    "end": "191040"
  },
  {
    "text": "scalable to process massive amount of",
    "start": "191040",
    "end": "193720"
  },
  {
    "text": "data it also has exactly once guarantees",
    "start": "193720",
    "end": "197200"
  },
  {
    "text": "to ensure data",
    "start": "197200",
    "end": "199000"
  },
  {
    "text": "integrity last but not least it comes",
    "start": "199000",
    "end": "202000"
  },
  {
    "text": "with a built-in fault tolerance and",
    "start": "202000",
    "end": "204080"
  },
  {
    "text": "state management system to maintain",
    "start": "204080",
    "end": "206159"
  },
  {
    "text": "reliability in distributed",
    "start": "206159",
    "end": "209640"
  },
  {
    "text": "environment flink job often runs",
    "start": "209640",
    "end": "212280"
  },
  {
    "text": "continuously but what happen if a",
    "start": "212280",
    "end": "214720"
  },
  {
    "text": "failure occurs",
    "start": "214720",
    "end": "216480"
  },
  {
    "text": "to ensure reliability Flink use state",
    "start": "216480",
    "end": "219519"
  },
  {
    "text": "snapshot including checkpoints and the",
    "start": "219519",
    "end": "222159"
  },
  {
    "text": "safe",
    "start": "222159",
    "end": "223159"
  },
  {
    "text": "points in case of a failure Flink can",
    "start": "223159",
    "end": "226480"
  },
  {
    "text": "automatically restore from the latest",
    "start": "226480",
    "end": "228480"
  },
  {
    "text": "state minimizing data loss and",
    "start": "228480",
    "end": "231560"
  },
  {
    "text": "downtime here is an example the events",
    "start": "231560",
    "end": "235120"
  },
  {
    "text": "are get ingested from an event log into",
    "start": "235120",
    "end": "237519"
  },
  {
    "text": "a flink application and internally this",
    "start": "237519",
    "end": "241040"
  },
  {
    "text": "application periodically write a",
    "start": "241040",
    "end": "243120"
  },
  {
    "text": "checkpoints to a persistent",
    "start": "243120",
    "end": "245319"
  },
  {
    "text": "storage if a failure occurs Flink",
    "start": "245319",
    "end": "248319"
  },
  {
    "text": "restore from the latest checkpoint to",
    "start": "248319",
    "end": "250480"
  },
  {
    "text": "ensure seamless",
    "start": "250480",
    "end": "253239"
  },
  {
    "text": "recovery now that we understand the",
    "start": "253239",
    "end": "255680"
  },
  {
    "text": "Flink state management let's talk about",
    "start": "255680",
    "end": "257919"
  },
  {
    "text": "the job deployment on Kubernetes",
    "start": "257919",
    "end": "261680"
  },
  {
    "text": "apache Flink supports Kubernetes",
    "start": "261680",
    "end": "263520"
  },
  {
    "text": "natively which makes deployment scalable",
    "start": "263520",
    "end": "266160"
  },
  {
    "text": "and",
    "start": "266160",
    "end": "267400"
  },
  {
    "text": "manageable the Flink operator automates",
    "start": "267400",
    "end": "269919"
  },
  {
    "text": "job life cycle management including job",
    "start": "269919",
    "end": "272440"
  },
  {
    "text": "deployments upgrades and auto",
    "start": "272440",
    "end": "275639"
  },
  {
    "text": "recovery here is how it works the user",
    "start": "275639",
    "end": "278800"
  },
  {
    "text": "submit a job YAML file to Kubernetes and",
    "start": "278800",
    "end": "281759"
  },
  {
    "text": "then the Kubernetes API server process",
    "start": "281759",
    "end": "284080"
  },
  {
    "text": "the request",
    "start": "284080",
    "end": "286240"
  },
  {
    "text": "then the Flink operator deploys upgrades",
    "start": "286240",
    "end": "289440"
  },
  {
    "text": "and monitors Flink jobs inside the",
    "start": "289440",
    "end": "292199"
  },
  {
    "text": "cluster you will finally get a fully",
    "start": "292199",
    "end": "294639"
  },
  {
    "text": "managed Flink job running on top of",
    "start": "294639",
    "end": "298800"
  },
  {
    "text": "Kubernetes in distributed environment",
    "start": "299639",
    "end": "302479"
  },
  {
    "text": "failures can always happen but Flink is",
    "start": "302479",
    "end": "305360"
  },
  {
    "text": "built to recover gracefully using the HA",
    "start": "305360",
    "end": "308479"
  },
  {
    "text": "settings Flink can recover from cluster",
    "start": "308479",
    "end": "310880"
  },
  {
    "text": "internal issues such as hardware",
    "start": "310880",
    "end": "313080"
  },
  {
    "text": "failures pod crashes or transit network",
    "start": "313080",
    "end": "317560"
  },
  {
    "text": "glitches in this diagram on the left",
    "start": "317560",
    "end": "320560"
  },
  {
    "text": "side we see a normal job execution the",
    "start": "320560",
    "end": "323840"
  },
  {
    "text": "user code interacts with a local state",
    "start": "323840",
    "end": "325919"
  },
  {
    "text": "back end and state is persisted as a",
    "start": "325919",
    "end": "328720"
  },
  {
    "text": "safe point into a distributed file",
    "start": "328720",
    "end": "331039"
  },
  {
    "text": "system if a failure occurs and the job",
    "start": "331039",
    "end": "334520"
  },
  {
    "text": "crashes the persistent safe point is",
    "start": "334520",
    "end": "337440"
  },
  {
    "text": "still there on the right side when the",
    "start": "337440",
    "end": "340479"
  },
  {
    "text": "job restarts it reloads the safe point",
    "start": "340479",
    "end": "343759"
  },
  {
    "text": "restore it state and continue as if",
    "start": "343759",
    "end": "346320"
  },
  {
    "text": "nothing",
    "start": "346320",
    "end": "348639"
  },
  {
    "text": "happened so as previously mentioned the",
    "start": "352199",
    "end": "355280"
  },
  {
    "text": "streaming platform team manage manages",
    "start": "355280",
    "end": "357840"
  },
  {
    "text": "many different Apache Flink applications",
    "start": "357840",
    "end": "359840"
  },
  {
    "text": "um and as the platform grew we started",
    "start": "359840",
    "end": "362240"
  },
  {
    "text": "to encounter some challenges in",
    "start": "362240",
    "end": "364120"
  },
  {
    "text": "scale so most notably uh control planes",
    "start": "364120",
    "end": "367520"
  },
  {
    "text": "are currently tied to a single cluster",
    "start": "367520",
    "end": "369360"
  },
  {
    "text": "and given that our platform spans",
    "start": "369360",
    "end": "371120"
  },
  {
    "text": "multiple tiers with users deploying many",
    "start": "371120",
    "end": "373440"
  },
  {
    "text": "different jobs um as the number of jobs",
    "start": "373440",
    "end": "376000"
  },
  {
    "text": "grew this starts to become quite",
    "start": "376000",
    "end": "378160"
  },
  {
    "text": "cumbersome uh users have to keep track",
    "start": "378160",
    "end": "380479"
  },
  {
    "text": "of the clusters they're deploying to",
    "start": "380479",
    "end": "382400"
  },
  {
    "text": "they have to worry about whether the",
    "start": "382400",
    "end": "383840"
  },
  {
    "text": "cluster has enough resources to host",
    "start": "383840",
    "end": "385440"
  },
  {
    "text": "their job and they have to manage a",
    "start": "385440",
    "end": "387360"
  },
  {
    "text": "bunch of cube configs in order to set up",
    "start": "387360",
    "end": "389360"
  },
  {
    "text": "their CD",
    "start": "389360",
    "end": "391080"
  },
  {
    "text": "pipelines additionally once these jobs",
    "start": "391080",
    "end": "393520"
  },
  {
    "text": "are actually deployed we expect them to",
    "start": "393520",
    "end": "395759"
  },
  {
    "text": "be long running and actively processing",
    "start": "395759",
    "end": "397639"
  },
  {
    "text": "data but given the nature of longunning",
    "start": "397639",
    "end": "400240"
  },
  {
    "text": "jobs failures aren't something that",
    "start": "400240",
    "end": "402479"
  },
  {
    "text": "could happen but they're something that",
    "start": "402479",
    "end": "403919"
  },
  {
    "text": "will happen apache Flink luckily",
    "start": "403919",
    "end": "406639"
  },
  {
    "text": "provides a lot of coverage for dealing",
    "start": "406639",
    "end": "408800"
  },
  {
    "text": "with these types of intermittent",
    "start": "408800",
    "end": "410000"
  },
  {
    "text": "failures with its high availability",
    "start": "410000",
    "end": "412199"
  },
  {
    "text": "support but high availability runs on",
    "start": "412199",
    "end": "414720"
  },
  {
    "text": "the assumption that recovery will take",
    "start": "414720",
    "end": "416639"
  },
  {
    "text": "place within the same cluster let's take",
    "start": "416639",
    "end": "419280"
  },
  {
    "text": "the Kubernetes high availability as an",
    "start": "419280",
    "end": "421400"
  },
  {
    "text": "example the metadata that Flink will",
    "start": "421400",
    "end": "424400"
  },
  {
    "text": "write to the config map will point to",
    "start": "424400",
    "end": "427039"
  },
  {
    "text": "the latest state that was published by",
    "start": "427039",
    "end": "429280"
  },
  {
    "text": "the Apache Flink uh application but if",
    "start": "429280",
    "end": "432240"
  },
  {
    "text": "that config map is deleted and the job",
    "start": "432240",
    "end": "435280"
  },
  {
    "text": "fails the Flink operator will be unable",
    "start": "435280",
    "end": "438000"
  },
  {
    "text": "to reconcile what the latest state",
    "start": "438000",
    "end": "440000"
  },
  {
    "text": "actually is and it'll ask the user to",
    "start": "440000",
    "end": "442160"
  },
  {
    "text": "manually reapply the",
    "start": "442160",
    "end": "445120"
  },
  {
    "text": "job finally this means that cluster",
    "start": "445319",
    "end": "448000"
  },
  {
    "text": "failover itself at the present moment is",
    "start": "448000",
    "end": "450160"
  },
  {
    "text": "a manual process if a cluster goes down",
    "start": "450160",
    "end": "453039"
  },
  {
    "text": "we get alerted of this and tenants will",
    "start": "453039",
    "end": "455199"
  },
  {
    "text": "either have to have their own high",
    "start": "455199",
    "end": "456479"
  },
  {
    "text": "availability setup in place so either",
    "start": "456479",
    "end": "458720"
  },
  {
    "text": "running two different um pipelines in",
    "start": "458720",
    "end": "461520"
  },
  {
    "text": "tandem in different data centers and",
    "start": "461520",
    "end": "463039"
  },
  {
    "text": "double processing or they'll have to",
    "start": "463039",
    "end": "465039"
  },
  {
    "text": "manually redeploy their job to a healthy",
    "start": "465039",
    "end": "468759"
  },
  {
    "text": "cluster this can be a bit cumbersome",
    "start": "468759",
    "end": "471520"
  },
  {
    "text": "because users will have to understand",
    "start": "471520",
    "end": "473520"
  },
  {
    "text": "what their latest state is um and as the",
    "start": "473520",
    "end": "476240"
  },
  {
    "text": "number of jobs grows this can get quite",
    "start": "476240",
    "end": "478280"
  },
  {
    "text": "errorprone and then lastly the",
    "start": "478280",
    "end": "481280"
  },
  {
    "text": "maintenance windows that we do on our",
    "start": "481280",
    "end": "482879"
  },
  {
    "text": "clusters become very expensive and",
    "start": "482879",
    "end": "484879"
  },
  {
    "text": "require coordination um given that",
    "start": "484879",
    "end": "487199"
  },
  {
    "text": "Kubernetes updates quarterly um that has",
    "start": "487199",
    "end": "489919"
  },
  {
    "text": "a lot of maintenance windows in one year",
    "start": "489919",
    "end": "492240"
  },
  {
    "text": "um so each time we have to migrate users",
    "start": "492240",
    "end": "495960"
  },
  {
    "text": "off so given these limitations what does",
    "start": "495960",
    "end": "498639"
  },
  {
    "text": "our ideal control plane actually look",
    "start": "498639",
    "end": "500400"
  },
  {
    "text": "like well we wanted a unified control",
    "start": "500400",
    "end": "502879"
  },
  {
    "text": "plane that would require users to have",
    "start": "502879",
    "end": "505360"
  },
  {
    "text": "uh or require users to only use a single",
    "start": "505360",
    "end": "508080"
  },
  {
    "text": "Q config and apply their jobs to a",
    "start": "508080",
    "end": "510240"
  },
  {
    "text": "single place",
    "start": "510240",
    "end": "512800"
  },
  {
    "text": "secondly once these resources were",
    "start": "512800",
    "end": "515080"
  },
  {
    "text": "applied the control plane can handle the",
    "start": "515080",
    "end": "517839"
  },
  {
    "text": "logic of intelligently actually",
    "start": "517839",
    "end": "519360"
  },
  {
    "text": "scheduling these applications to one of",
    "start": "519360",
    "end": "521760"
  },
  {
    "text": "the clusters in the federation keeping",
    "start": "521760",
    "end": "524000"
  },
  {
    "text": "in mind available resources or node",
    "start": "524000",
    "end": "527320"
  },
  {
    "text": "requirements and then finally we should",
    "start": "527320",
    "end": "530240"
  },
  {
    "text": "also monitor the health of both the",
    "start": "530240",
    "end": "532160"
  },
  {
    "text": "Kubernetes clusters and the individual",
    "start": "532160",
    "end": "534160"
  },
  {
    "text": "applications that have been scheduled if",
    "start": "534160",
    "end": "536399"
  },
  {
    "text": "the control plane detects some sort of",
    "start": "536399",
    "end": "538000"
  },
  {
    "text": "issue with the cluster or an application",
    "start": "538000",
    "end": "540560"
  },
  {
    "text": "and it stays unhealthy for a prolonged",
    "start": "540560",
    "end": "542800"
  },
  {
    "text": "period of time uh we should try to",
    "start": "542800",
    "end": "544560"
  },
  {
    "text": "reschedule the application to another",
    "start": "544560",
    "end": "548080"
  },
  {
    "text": "cluster so as we started to solidify",
    "start": "549160",
    "end": "552320"
  },
  {
    "text": "this ideal version of a central control",
    "start": "552320",
    "end": "554880"
  },
  {
    "text": "plane we started to research some",
    "start": "554880",
    "end": "556480"
  },
  {
    "text": "potential options that were in",
    "start": "556480",
    "end": "557800"
  },
  {
    "text": "development this is where we were",
    "start": "557800",
    "end": "559680"
  },
  {
    "text": "introduced to the Carmata project",
    "start": "559680",
    "end": "562000"
  },
  {
    "text": "carmatada is an open source Kubernetes",
    "start": "562000",
    "end": "564240"
  },
  {
    "text": "management system um it's built to",
    "start": "564240",
    "end": "566240"
  },
  {
    "text": "manage cloudnative applications across",
    "start": "566240",
    "end": "568640"
  },
  {
    "text": "multiple Kubernetes clusters and it",
    "start": "568640",
    "end": "570880"
  },
  {
    "text": "comes with a variety of helpful features",
    "start": "570880",
    "end": "572480"
  },
  {
    "text": "that users can uh tune and tailor to",
    "start": "572480",
    "end": "575519"
  },
  {
    "text": "their specific use",
    "start": "575519",
    "end": "577240"
  },
  {
    "text": "cases it allows platform owners to",
    "start": "577240",
    "end": "579680"
  },
  {
    "text": "manage groups of Kubernetes clusters",
    "start": "579680",
    "end": "581200"
  },
  {
    "text": "from one place um minimizing the",
    "start": "581200",
    "end": "583839"
  },
  {
    "text": "operational overhead of dealing with",
    "start": "583839",
    "end": "585360"
  },
  {
    "text": "many many clusters",
    "start": "585360",
    "end": "587440"
  },
  {
    "text": "it gives platform owners the ability to",
    "start": "587440",
    "end": "589200"
  },
  {
    "text": "define their applications and how they",
    "start": "589200",
    "end": "591279"
  },
  {
    "text": "should be scheduled to clusters within",
    "start": "591279",
    "end": "592800"
  },
  {
    "text": "the federation with advanced features",
    "start": "592800",
    "end": "594720"
  },
  {
    "text": "including resource aware scheduling as",
    "start": "594720",
    "end": "597200"
  },
  {
    "text": "well as clustered affinity",
    "start": "597200",
    "end": "599560"
  },
  {
    "text": "rules carmata also provides a unified",
    "start": "599560",
    "end": "602800"
  },
  {
    "text": "authentication endpoint as well as a",
    "start": "602800",
    "end": "604640"
  },
  {
    "text": "unified endpoint for viewing resources",
    "start": "604640",
    "end": "606560"
  },
  {
    "text": "and managing applications",
    "start": "606560",
    "end": "608640"
  },
  {
    "text": "and finally what we found most",
    "start": "608640",
    "end": "610080"
  },
  {
    "text": "interesting was the support for",
    "start": "610080",
    "end": "611600"
  },
  {
    "text": "automated crosscluster failover which is",
    "start": "611600",
    "end": "613920"
  },
  {
    "text": "something um we're talking about",
    "start": "613920",
    "end": "617640"
  },
  {
    "text": "today so in order to understand how",
    "start": "617640",
    "end": "620240"
  },
  {
    "text": "automated failover works in Carmada um",
    "start": "620240",
    "end": "622640"
  },
  {
    "text": "we wanted to go over how Carmata",
    "start": "622640",
    "end": "624399"
  },
  {
    "text": "actually tracks both of these things so",
    "start": "624399",
    "end": "626959"
  },
  {
    "text": "for cluster health Carmono relies on",
    "start": "626959",
    "end": "629040"
  },
  {
    "text": "calling the existing Kubernetes health",
    "start": "629040",
    "end": "631560"
  },
  {
    "text": "endpoints um in response if it",
    "start": "631560",
    "end": "634240"
  },
  {
    "text": "determines the cluster is unhealthy",
    "start": "634240",
    "end": "636160"
  },
  {
    "text": "after a certain grace period um it will",
    "start": "636160",
    "end": "639200"
  },
  {
    "text": "do a taint-based eviction and re uh",
    "start": "639200",
    "end": "642640"
  },
  {
    "text": "schedule applications to a more healthy",
    "start": "642640",
    "end": "645000"
  },
  {
    "text": "cluster for application health it's a",
    "start": "645000",
    "end": "647440"
  },
  {
    "text": "bit more granular uh Carmada provides a",
    "start": "647440",
    "end": "650480"
  },
  {
    "text": "framework for defining resource",
    "start": "650480",
    "end": "651920"
  },
  {
    "text": "interpretation uh so users can define uh",
    "start": "651920",
    "end": "654560"
  },
  {
    "text": "how they want their application to be",
    "start": "654560",
    "end": "656560"
  },
  {
    "text": "treated whether it's healthy or",
    "start": "656560",
    "end": "659920"
  },
  {
    "text": "unhealthy so this diagram represents the",
    "start": "660519",
    "end": "663519"
  },
  {
    "text": "first version of how we used Carmata to",
    "start": "663519",
    "end": "665600"
  },
  {
    "text": "manage and deploy our Flink deployments",
    "start": "665600",
    "end": "667680"
  },
  {
    "text": "so users would apply their namespace",
    "start": "667680",
    "end": "669839"
  },
  {
    "text": "jobs to the Carmata API server endpoint",
    "start": "669839",
    "end": "673440"
  },
  {
    "text": "we automatically provide the necessary",
    "start": "673440",
    "end": "675360"
  },
  {
    "text": "propagation policy on their namespace so",
    "start": "675360",
    "end": "677680"
  },
  {
    "text": "for those unfamiliar propagation policy",
    "start": "677680",
    "end": "679760"
  },
  {
    "text": "is a custom resource defined by Carmata",
    "start": "679760",
    "end": "683200"
  },
  {
    "text": "which tells Carmata how you'll actually",
    "start": "683200",
    "end": "685360"
  },
  {
    "text": "schedule the application um that the",
    "start": "685360",
    "end": "687600"
  },
  {
    "text": "propagation policy is scoped for so in",
    "start": "687600",
    "end": "690240"
  },
  {
    "text": "our case for example we set some thread",
    "start": "690240",
    "end": "692399"
  },
  {
    "text": "constraints on the Flink deployment",
    "start": "692399",
    "end": "694079"
  },
  {
    "text": "since we want it to only be scheduled to",
    "start": "694079",
    "end": "695760"
  },
  {
    "text": "a single cluster and the replicas will",
    "start": "695760",
    "end": "697680"
  },
  {
    "text": "be scheduled together so we set that to",
    "start": "697680",
    "end": "699839"
  },
  {
    "text": "be max one cluster",
    "start": "699839",
    "end": "702560"
  },
  {
    "text": "now once the application is scheduled",
    "start": "702560",
    "end": "704240"
  },
  {
    "text": "successfully the Flink operator picks up",
    "start": "704240",
    "end": "706000"
  },
  {
    "text": "the deployment and schedules the job",
    "start": "706000",
    "end": "708079"
  },
  {
    "text": "after which point the full status will",
    "start": "708079",
    "end": "709839"
  },
  {
    "text": "be available on the Carmada",
    "start": "709839",
    "end": "713360"
  },
  {
    "text": "API now let's talk about some of the",
    "start": "720360",
    "end": "722959"
  },
  {
    "text": "limitations we faced initially when",
    "start": "722959",
    "end": "725120"
  },
  {
    "text": "integrating with Kamada",
    "start": "725120",
    "end": "727680"
  },
  {
    "text": "first for the application fillover to",
    "start": "727680",
    "end": "729519"
  },
  {
    "text": "work Kamada must understand how to",
    "start": "729519",
    "end": "732000"
  },
  {
    "text": "interpret the resource health however",
    "start": "732000",
    "end": "734800"
  },
  {
    "text": "using default settings Kamada doesn't",
    "start": "734800",
    "end": "737040"
  },
  {
    "text": "have any awareness of Flink state this",
    "start": "737040",
    "end": "739839"
  },
  {
    "text": "is an issue when it comes to",
    "start": "739839",
    "end": "742040"
  },
  {
    "text": "rescheduling and second when a Flink job",
    "start": "742040",
    "end": "744800"
  },
  {
    "text": "is rescheduled to a new cluster it needs",
    "start": "744800",
    "end": "747360"
  },
  {
    "text": "to start from its previous state but the",
    "start": "747360",
    "end": "750079"
  },
  {
    "text": "state is not preserved during failover",
    "start": "750079",
    "end": "753360"
  },
  {
    "text": "that means the deployment will be start",
    "start": "753360",
    "end": "755279"
  },
  {
    "text": "from scratch which is an ideal for a",
    "start": "755279",
    "end": "757760"
  },
  {
    "text": "longunning streaming job these",
    "start": "757760",
    "end": "760480"
  },
  {
    "text": "limitations motivate us to explore",
    "start": "760480",
    "end": "762639"
  },
  {
    "text": "better solutions for state management",
    "start": "762639",
    "end": "764800"
  },
  {
    "text": "and",
    "start": "764800",
    "end": "766519"
  },
  {
    "text": "fillover and to get a better solution",
    "start": "766519",
    "end": "768880"
  },
  {
    "text": "for failover the most important thing is",
    "start": "768880",
    "end": "771360"
  },
  {
    "text": "to understand the",
    "start": "771360",
    "end": "772760"
  },
  {
    "text": "job flink maintains its own internal job",
    "start": "772760",
    "end": "776480"
  },
  {
    "text": "state machine and we have drawn a",
    "start": "776480",
    "end": "778880"
  },
  {
    "text": "simplified uh diagram attached on the",
    "start": "778880",
    "end": "781120"
  },
  {
    "text": "right side so how to how do we interpret",
    "start": "781120",
    "end": "783959"
  },
  {
    "text": "it if a job is in the rounding state",
    "start": "783959",
    "end": "787600"
  },
  {
    "text": "here we filled with a green color or in",
    "start": "787600",
    "end": "790720"
  },
  {
    "text": "any of the terminated state filled with",
    "start": "790720",
    "end": "793360"
  },
  {
    "text": "a gray color like failed finished",
    "start": "793360",
    "end": "796720"
  },
  {
    "text": "cancelled or suspended we consider this",
    "start": "796720",
    "end": "799360"
  },
  {
    "text": "job as a healthy",
    "start": "799360",
    "end": "801000"
  },
  {
    "text": "state but it if it is in one of the blue",
    "start": "801000",
    "end": "804240"
  },
  {
    "text": "effirmal state like reconciling",
    "start": "804240",
    "end": "806839"
  },
  {
    "text": "initializing or created we have to be",
    "start": "806839",
    "end": "809839"
  },
  {
    "text": "more careful if there is a no user error",
    "start": "809839",
    "end": "813040"
  },
  {
    "text": "like bad image pass we treat it as a",
    "start": "813040",
    "end": "816079"
  },
  {
    "text": "healthy and don't trigger a failover but",
    "start": "816079",
    "end": "818959"
  },
  {
    "text": "if the job is stuck in one of these",
    "start": "818959",
    "end": "821040"
  },
  {
    "text": "states without a no arrow we treat it as",
    "start": "821040",
    "end": "825000"
  },
  {
    "text": "unhealthy and finally we have the yellow",
    "start": "825000",
    "end": "828079"
  },
  {
    "text": "colored short-lived state like",
    "start": "828079",
    "end": "830839"
  },
  {
    "text": "restarting failing and cancelling these",
    "start": "830839",
    "end": "834880"
  },
  {
    "text": "are part of normal transitions and will",
    "start": "834880",
    "end": "837199"
  },
  {
    "text": "quickly lead to a terminal state so we",
    "start": "837199",
    "end": "839760"
  },
  {
    "text": "treat them as healthy as",
    "start": "839760",
    "end": "843120"
  },
  {
    "text": "well let's take a look at what is a",
    "start": "844279",
    "end": "846880"
  },
  {
    "text": "healthy state transition usually a",
    "start": "846880",
    "end": "850000"
  },
  {
    "text": "healthy fling job start with a",
    "start": "850000",
    "end": "851680"
  },
  {
    "text": "reconciling state where the job manager",
    "start": "851680",
    "end": "854399"
  },
  {
    "text": "isn't scheduled or hasn't report the",
    "start": "854399",
    "end": "856720"
  },
  {
    "text": "status yet and next it moves to",
    "start": "856720",
    "end": "860440"
  },
  {
    "text": "initializing where the Flink components",
    "start": "860440",
    "end": "862720"
  },
  {
    "text": "are starting up and then it reaches",
    "start": "862720",
    "end": "865920"
  },
  {
    "text": "created meaning the cluster is ready but",
    "start": "865920",
    "end": "868399"
  },
  {
    "text": "the job is not processing data yet and",
    "start": "868399",
    "end": "871839"
  },
  {
    "text": "finally it enters running where the job",
    "start": "871839",
    "end": "874800"
  },
  {
    "text": "is fully operational and processing",
    "start": "874800",
    "end": "878800"
  },
  {
    "text": "data here is another example of an",
    "start": "879160",
    "end": "881920"
  },
  {
    "text": "unhealthy state transition as what we",
    "start": "881920",
    "end": "884959"
  },
  {
    "text": "saw before the job is in the running",
    "start": "884959",
    "end": "888160"
  },
  {
    "text": "state and the processing data everything",
    "start": "888160",
    "end": "890320"
  },
  {
    "text": "looks good but then it suddenly",
    "start": "890320",
    "end": "893040"
  },
  {
    "text": "transition back to created this usually",
    "start": "893040",
    "end": "896000"
  },
  {
    "text": "means something went wrong maybe task",
    "start": "896000",
    "end": "898320"
  },
  {
    "text": "manager crashes or the cluster itself",
    "start": "898320",
    "end": "901199"
  },
  {
    "text": "has some internal",
    "start": "901199",
    "end": "903399"
  },
  {
    "text": "issues so by checking the job state very",
    "start": "903399",
    "end": "907199"
  },
  {
    "text": "likely we can tell if a job is healthy",
    "start": "907199",
    "end": "909680"
  },
  {
    "text": "or no",
    "start": "909680",
    "end": "911120"
  },
  {
    "text": "however there are some edge cases that",
    "start": "911120",
    "end": "913760"
  },
  {
    "text": "checking internal job state is not",
    "start": "913760",
    "end": "915639"
  },
  {
    "text": "enough we also need to look at the error",
    "start": "915639",
    "end": "918320"
  },
  {
    "text": "field inside the state for deployment",
    "start": "918320",
    "end": "920839"
  },
  {
    "text": "issue including misconfigurations such",
    "start": "920839",
    "end": "924000"
  },
  {
    "text": "as bad container images or malformed",
    "start": "924000",
    "end": "926800"
  },
  {
    "text": "yammo",
    "start": "926800",
    "end": "927959"
  },
  {
    "text": "files also it can come from runtime",
    "start": "927959",
    "end": "930800"
  },
  {
    "text": "problems such as application bugs or bad",
    "start": "930800",
    "end": "933360"
  },
  {
    "text": "upgrades",
    "start": "933360",
    "end": "936360"
  },
  {
    "text": "this is what Miha showed before on how",
    "start": "936560",
    "end": "938560"
  },
  {
    "text": "we run Flink on Kamada in addition to",
    "start": "938560",
    "end": "941279"
  },
  {
    "text": "the previous propagation policy we add a",
    "start": "941279",
    "end": "944000"
  },
  {
    "text": "failover field in the YAML with this",
    "start": "944000",
    "end": "946560"
  },
  {
    "text": "change if a deployment becomes unhealthy",
    "start": "946560",
    "end": "949839"
  },
  {
    "text": "Kamada will wait for a threshold we",
    "start": "949839",
    "end": "951759"
  },
  {
    "text": "configured and then p it purge it right",
    "start": "951759",
    "end": "954639"
  },
  {
    "text": "away for",
    "start": "954639",
    "end": "957079"
  },
  {
    "text": "rescheduling so was that a successful",
    "start": "957079",
    "end": "960199"
  },
  {
    "text": "fillover not exactly although Kamada",
    "start": "960199",
    "end": "963600"
  },
  {
    "text": "detects a job failure and reschedules",
    "start": "963600",
    "end": "965920"
  },
  {
    "text": "the job it always start as new which",
    "start": "965920",
    "end": "968959"
  },
  {
    "text": "means we lost the running state in Flink",
    "start": "968959",
    "end": "972399"
  },
  {
    "text": "however to gracefully resume after",
    "start": "972399",
    "end": "974600"
  },
  {
    "text": "failure we need the latest checkpoint",
    "start": "974600",
    "end": "977600"
  },
  {
    "text": "and also to get that we need to preserve",
    "start": "977600",
    "end": "980480"
  },
  {
    "text": "the job ID across clusters",
    "start": "980480",
    "end": "984759"
  },
  {
    "text": "so as Lee described although Carmato was",
    "start": "988560",
    "end": "991360"
  },
  {
    "text": "correctly detecting application and",
    "start": "991360",
    "end": "993360"
  },
  {
    "text": "cluster health now the failover wasn't",
    "start": "993360",
    "end": "995519"
  },
  {
    "text": "yet complete um we still needed a way to",
    "start": "995519",
    "end": "997920"
  },
  {
    "text": "figure out how to conserve information",
    "start": "997920",
    "end": "999519"
  },
  {
    "text": "from the previous job so that the new",
    "start": "999519",
    "end": "1001759"
  },
  {
    "text": "job could have a reference as to where",
    "start": "1001759",
    "end": "1003199"
  },
  {
    "text": "to start up from after working with the",
    "start": "1003199",
    "end": "1005839"
  },
  {
    "text": "community we came up with an idea of a",
    "start": "1005839",
    "end": "1008079"
  },
  {
    "text": "state preservation enhancement which",
    "start": "1008079",
    "end": "1009839"
  },
  {
    "text": "extends the existing failover API and",
    "start": "1009839",
    "end": "1012720"
  },
  {
    "text": "this is set directly in the Carmona",
    "start": "1012720",
    "end": "1014240"
  },
  {
    "text": "propagation policy it consists of two",
    "start": "1014240",
    "end": "1017440"
  },
  {
    "text": "fields the first is a JSON path which is",
    "start": "1017440",
    "end": "1020240"
  },
  {
    "text": "just an expression uh that identifies",
    "start": "1020240",
    "end": "1022240"
  },
  {
    "text": "the specific piece of data that we want",
    "start": "1022240",
    "end": "1023920"
  },
  {
    "text": "to conserve in status and then an alias",
    "start": "1023920",
    "end": "1026558"
  },
  {
    "text": "label name which is just going to be the",
    "start": "1026559",
    "end": "1028400"
  },
  {
    "text": "name of the label so as you can see the",
    "start": "1028400",
    "end": "1031520"
  },
  {
    "text": "propagation policy on the right shows",
    "start": "1031520",
    "end": "1033600"
  },
  {
    "text": "this new API in action um with us",
    "start": "1033600",
    "end": "1036400"
  },
  {
    "text": "selecting the job status job ID field um",
    "start": "1036400",
    "end": "1039520"
  },
  {
    "text": "and then injecting this information as a",
    "start": "1039520",
    "end": "1041280"
  },
  {
    "text": "label into the newly failed",
    "start": "1041280",
    "end": "1044559"
  },
  {
    "text": "overfl now there's one last step here um",
    "start": "1045240",
    "end": "1049760"
  },
  {
    "text": "even though the metadata itself is",
    "start": "1049760",
    "end": "1052080"
  },
  {
    "text": "injected as a label into the Flink",
    "start": "1052080",
    "end": "1053840"
  },
  {
    "text": "deployment we still need to convert it",
    "start": "1053840",
    "end": "1056000"
  },
  {
    "text": "into a way that the Flink deployment can",
    "start": "1056000",
    "end": "1057840"
  },
  {
    "text": "actually consume that information so we",
    "start": "1057840",
    "end": "1060720"
  },
  {
    "text": "were already using Kerno web hooks for",
    "start": "1060720",
    "end": "1062559"
  },
  {
    "text": "validation and mutation uh for those",
    "start": "1062559",
    "end": "1064720"
  },
  {
    "text": "unaware Kerno is a policy management",
    "start": "1064720",
    "end": "1066720"
  },
  {
    "text": "tool which allows us to declaratively",
    "start": "1066720",
    "end": "1068960"
  },
  {
    "text": "define policies that can validate and",
    "start": "1068960",
    "end": "1070880"
  },
  {
    "text": "mutate watched resources so we decided",
    "start": "1070880",
    "end": "1073520"
  },
  {
    "text": "to reuse it and implement a mutating web",
    "start": "1073520",
    "end": "1075520"
  },
  {
    "text": "hook that could inject the necessary",
    "start": "1075520",
    "end": "1077360"
  },
  {
    "text": "initial save point path and point to the",
    "start": "1077360",
    "end": "1080240"
  },
  {
    "text": "latest state from the previously failed",
    "start": "1080240",
    "end": "1084600"
  },
  {
    "text": "job so here is the finalized diagram of",
    "start": "1084600",
    "end": "1088000"
  },
  {
    "text": "how we did failover so let's assume that",
    "start": "1088000",
    "end": "1090720"
  },
  {
    "text": "we had a job successfully running on",
    "start": "1090720",
    "end": "1092799"
  },
  {
    "text": "cluster B at some point in the future",
    "start": "1092799",
    "end": "1095440"
  },
  {
    "text": "the application suddenly transitioned to",
    "start": "1095440",
    "end": "1097360"
  },
  {
    "text": "a reconciling state uh this means that",
    "start": "1097360",
    "end": "1100000"
  },
  {
    "text": "either the job manager crashed uh or the",
    "start": "1100000",
    "end": "1103200"
  },
  {
    "text": "operator is just unable to get the",
    "start": "1103200",
    "end": "1104880"
  },
  {
    "text": "status um from the application due to",
    "start": "1104880",
    "end": "1106880"
  },
  {
    "text": "some sort of issue carmato will treat",
    "start": "1106880",
    "end": "1109679"
  },
  {
    "text": "this application as unhealthy assuming",
    "start": "1109679",
    "end": "1111840"
  },
  {
    "text": "there are no published errors and",
    "start": "1111840",
    "end": "1113520"
  },
  {
    "text": "eventually start uh taking down the",
    "start": "1113520",
    "end": "1115280"
  },
  {
    "text": "toleration seconds defined within the",
    "start": "1115280",
    "end": "1117200"
  },
  {
    "text": "resources propagation policy after the",
    "start": "1117200",
    "end": "1120080"
  },
  {
    "text": "toleration is up failover will kick in",
    "start": "1120080",
    "end": "1122799"
  },
  {
    "text": "so Carmato will pull out the job ID from",
    "start": "1122799",
    "end": "1126000"
  },
  {
    "text": "the published job status and then delete",
    "start": "1126000",
    "end": "1127840"
  },
  {
    "text": "the resource on cluster B carmata will",
    "start": "1127840",
    "end": "1130720"
  },
  {
    "text": "then inject the state preservation label",
    "start": "1130720",
    "end": "1132799"
  },
  {
    "text": "into the scheduled resource um and will",
    "start": "1132799",
    "end": "1135600"
  },
  {
    "text": "point to the previous Flink clusters ID",
    "start": "1135600",
    "end": "1138160"
  },
  {
    "text": "so our Kerna web hook will intercept",
    "start": "1138160",
    "end": "1140320"
  },
  {
    "text": "this request pull the job ID and then",
    "start": "1140320",
    "end": "1142480"
  },
  {
    "text": "set the initial save point path so that",
    "start": "1142480",
    "end": "1144480"
  },
  {
    "text": "the Flink operator knows okay this",
    "start": "1144480",
    "end": "1146320"
  },
  {
    "text": "application is starting back up from a",
    "start": "1146320",
    "end": "1148080"
  },
  {
    "text": "previous state",
    "start": "1148080",
    "end": "1151399"
  },
  {
    "text": "now there are a lot of benefits here for",
    "start": "1151679",
    "end": "1153360"
  },
  {
    "text": "us um I think the biggest pain point for",
    "start": "1153360",
    "end": "1156160"
  },
  {
    "text": "a lot of our users was needing to manage",
    "start": "1156160",
    "end": "1158000"
  },
  {
    "text": "and keep track of a lot of different",
    "start": "1158000",
    "end": "1159760"
  },
  {
    "text": "Kubernetes clusters so by having a",
    "start": "1159760",
    "end": "1162080"
  },
  {
    "text": "unified control plane users can apply",
    "start": "1162080",
    "end": "1164320"
  },
  {
    "text": "update and manage their jobs from one",
    "start": "1164320",
    "end": "1166320"
  },
  {
    "text": "place with authentication and",
    "start": "1166320",
    "end": "1168400"
  },
  {
    "text": "intelligent scheduling already baked",
    "start": "1168400",
    "end": "1169919"
  },
  {
    "text": "into the setup the other huge benefit",
    "start": "1169919",
    "end": "1172720"
  },
  {
    "text": "was the automation of crosscluster",
    "start": "1172720",
    "end": "1174799"
  },
  {
    "text": "failover which is critical to ensuring",
    "start": "1174799",
    "end": "1177360"
  },
  {
    "text": "uh data pipeline resiliency now it's",
    "start": "1177360",
    "end": "1180480"
  },
  {
    "text": "important to note that crosscluster",
    "start": "1180480",
    "end": "1182160"
  },
  {
    "text": "failover should be a rare occurrence um",
    "start": "1182160",
    "end": "1185120"
  },
  {
    "text": "Apache Flank's high availability feature",
    "start": "1185120",
    "end": "1187679"
  },
  {
    "text": "is expected to generally handle job",
    "start": "1187679",
    "end": "1189600"
  },
  {
    "text": "failures that occur within the same",
    "start": "1189600",
    "end": "1190960"
  },
  {
    "text": "cluster and so generally applications",
    "start": "1190960",
    "end": "1193280"
  },
  {
    "text": "should self-reover this is really only",
    "start": "1193280",
    "end": "1196000"
  },
  {
    "text": "for cases where there are exceptional",
    "start": "1196000",
    "end": "1198000"
  },
  {
    "text": "circumstances uh such as a partial or",
    "start": "1198000",
    "end": "1200720"
  },
  {
    "text": "total cluster failure",
    "start": "1200720",
    "end": "1203360"
  },
  {
    "text": "in those cases it saves us as platform",
    "start": "1203360",
    "end": "1205600"
  },
  {
    "text": "owners a lot of time and also allows",
    "start": "1205600",
    "end": "1207600"
  },
  {
    "text": "users application to autoreover in a",
    "start": "1207600",
    "end": "1209280"
  },
  {
    "text": "healthier cluster without their explicit",
    "start": "1209280",
    "end": "1212280"
  },
  {
    "text": "involvement following that vein",
    "start": "1212280",
    "end": "1214240"
  },
  {
    "text": "different users can have different",
    "start": "1214240",
    "end": "1215360"
  },
  {
    "text": "failover requirements so it's really",
    "start": "1215360",
    "end": "1217600"
  },
  {
    "text": "great that uh these failover um",
    "start": "1217600",
    "end": "1220320"
  },
  {
    "text": "definitions are flexible and",
    "start": "1220320",
    "end": "1222400"
  },
  {
    "text": "configurable as some users might be more",
    "start": "1222400",
    "end": "1224559"
  },
  {
    "text": "sensitive to failover um whereas others",
    "start": "1224559",
    "end": "1226400"
  },
  {
    "text": "are okay being more",
    "start": "1226400",
    "end": "1228120"
  },
  {
    "text": "conservative uh but as a whole automated",
    "start": "1228120",
    "end": "1230559"
  },
  {
    "text": "failover has helped remove a lot of the",
    "start": "1230559",
    "end": "1232320"
  },
  {
    "text": "operational burden that comes with",
    "start": "1232320",
    "end": "1234000"
  },
  {
    "text": "managing our platform on a day-to-day",
    "start": "1234000",
    "end": "1235520"
  },
  {
    "text": "basis um and additionally maintenance",
    "start": "1235520",
    "end": "1238000"
  },
  {
    "text": "windows no longer require heavy",
    "start": "1238000",
    "end": "1240240"
  },
  {
    "text": "coordination we can simply uh evict",
    "start": "1240240",
    "end": "1242640"
  },
  {
    "text": "applications from a cluster and have",
    "start": "1242640",
    "end": "1244000"
  },
  {
    "text": "them restart in a different one um and",
    "start": "1244000",
    "end": "1246240"
  },
  {
    "text": "it also uh provides us with the ability",
    "start": "1246240",
    "end": "1248640"
  },
  {
    "text": "to DR test out of the",
    "start": "1248640",
    "end": "1251799"
  },
  {
    "text": "box so how would you go about",
    "start": "1251799",
    "end": "1253919"
  },
  {
    "text": "generalizing this and trying out the",
    "start": "1253919",
    "end": "1255600"
  },
  {
    "text": "feature yourself so luckily Carmada",
    "start": "1255600",
    "end": "1258720"
  },
  {
    "text": "already provides resource interpretation",
    "start": "1258720",
    "end": "1260960"
  },
  {
    "text": "for most native Kubernetes resources uh",
    "start": "1260960",
    "end": "1263360"
  },
  {
    "text": "such as deployments or stateful sets but",
    "start": "1263360",
    "end": "1266640"
  },
  {
    "text": "if you're using a CRD you may have to",
    "start": "1266640",
    "end": "1268559"
  },
  {
    "text": "define your own custom interpreter",
    "start": "1268559",
    "end": "1270720"
  },
  {
    "text": "luckily doing so is pretty easy uh all",
    "start": "1270720",
    "end": "1272880"
  },
  {
    "text": "you have to do is uh fill out uh the",
    "start": "1272880",
    "end": "1276320"
  },
  {
    "text": "custom interpreter interface with",
    "start": "1276320",
    "end": "1278159"
  },
  {
    "text": "several different methods that you think",
    "start": "1278159",
    "end": "1279760"
  },
  {
    "text": "are applicable to your use case so for",
    "start": "1279760",
    "end": "1281840"
  },
  {
    "text": "example uh you could fill out the get",
    "start": "1281840",
    "end": "1283760"
  },
  {
    "text": "replicas method um which tells Karma how",
    "start": "1283760",
    "end": "1286480"
  },
  {
    "text": "many replicas your CRD will schedule um",
    "start": "1286480",
    "end": "1288960"
  },
  {
    "text": "along with the resource requirement or",
    "start": "1288960",
    "end": "1291280"
  },
  {
    "text": "you can fill out the interpret health",
    "start": "1291280",
    "end": "1293200"
  },
  {
    "text": "method which Carmato will use to",
    "start": "1293200",
    "end": "1295039"
  },
  {
    "text": "determine when your CRD is healthy or",
    "start": "1295039",
    "end": "1297720"
  },
  {
    "text": "not secondly you'll need to determine",
    "start": "1297720",
    "end": "1300320"
  },
  {
    "text": "how you'd like to configure failover so",
    "start": "1300320",
    "end": "1302720"
  },
  {
    "text": "how sensitive Carmata will be at",
    "start": "1302720",
    "end": "1304480"
  },
  {
    "text": "detecting issues and triggering a",
    "start": "1304480",
    "end": "1305880"
  },
  {
    "text": "failover how quickly do you need",
    "start": "1305880",
    "end": "1307919"
  },
  {
    "text": "applications to be purged from the",
    "start": "1307919",
    "end": "1309760"
  },
  {
    "text": "cluster do you want them to be deleted",
    "start": "1309760",
    "end": "1311600"
  },
  {
    "text": "immediately or do you want some grace",
    "start": "1311600",
    "end": "1313400"
  },
  {
    "text": "period um and is there any state that",
    "start": "1313400",
    "end": "1316480"
  },
  {
    "text": "you need to conserve between",
    "start": "1316480",
    "end": "1318280"
  },
  {
    "text": "failovers lastly once this state is",
    "start": "1318280",
    "end": "1321200"
  },
  {
    "text": "actually uh injected into your resource",
    "start": "1321200",
    "end": "1324080"
  },
  {
    "text": "you'll have to find a way for the member",
    "start": "1324080",
    "end": "1325520"
  },
  {
    "text": "clusters to actually consume it um in",
    "start": "1325520",
    "end": "1327679"
  },
  {
    "text": "our case we used a web hook to inject",
    "start": "1327679",
    "end": "1330240"
  },
  {
    "text": "the initial safe point path in the Flink",
    "start": "1330240",
    "end": "1332240"
  },
  {
    "text": "deployment spec",
    "start": "1332240",
    "end": "1335600"
  },
  {
    "text": "now there are some existing limitations",
    "start": "1335600",
    "end": "1337360"
  },
  {
    "text": "and pending improvements with the",
    "start": "1337360",
    "end": "1339120"
  },
  {
    "text": "features uh that we've talked about",
    "start": "1339120",
    "end": "1340600"
  },
  {
    "text": "today so with application failover uh",
    "start": "1340600",
    "end": "1343520"
  },
  {
    "text": "this is still a developing feature and",
    "start": "1343520",
    "end": "1345360"
  },
  {
    "text": "the karma community is continuing to",
    "start": "1345360",
    "end": "1347280"
  },
  {
    "text": "gather more use cases to better",
    "start": "1347280",
    "end": "1349280"
  },
  {
    "text": "understand gaps in the existing",
    "start": "1349280",
    "end": "1351000"
  },
  {
    "text": "implementation so for state preservation",
    "start": "1351000",
    "end": "1353280"
  },
  {
    "text": "specifically uh this feature was added",
    "start": "1353280",
    "end": "1355200"
  },
  {
    "text": "recently in version 1.12 and we want to",
    "start": "1355200",
    "end": "1358159"
  },
  {
    "text": "encourage more users to try it out and",
    "start": "1358159",
    "end": "1360080"
  },
  {
    "text": "see if it fits their needs from the",
    "start": "1360080",
    "end": "1362720"
  },
  {
    "text": "perspective of failover itself there are",
    "start": "1362720",
    "end": "1364880"
  },
  {
    "text": "two points to consider uh the first is",
    "start": "1364880",
    "end": "1366960"
  },
  {
    "text": "the toleration seconds needs to be tuned",
    "start": "1366960",
    "end": "1369200"
  },
  {
    "text": "carefully so toleration seconds kicks in",
    "start": "1369200",
    "end": "1371840"
  },
  {
    "text": "immediately after the resource has been",
    "start": "1371840",
    "end": "1373440"
  },
  {
    "text": "scheduled to a cluster so you don't want",
    "start": "1373440",
    "end": "1375360"
  },
  {
    "text": "to set it to be too low otherwise",
    "start": "1375360",
    "end": "1377600"
  },
  {
    "text": "Carmato will continuously try to",
    "start": "1377600",
    "end": "1379280"
  },
  {
    "text": "reschedule your application if it never",
    "start": "1379280",
    "end": "1381039"
  },
  {
    "text": "reaches a healthy state um so this means",
    "start": "1381039",
    "end": "1384480"
  },
  {
    "text": "that toleration seconds itself is",
    "start": "1384480",
    "end": "1386480"
  },
  {
    "text": "limited to be greater than the",
    "start": "1386480",
    "end": "1388159"
  },
  {
    "text": "application's initialization time uh",
    "start": "1388159",
    "end": "1390320"
  },
  {
    "text": "we're working with the community to see",
    "start": "1390320",
    "end": "1392159"
  },
  {
    "text": "how we could change this uh potentially",
    "start": "1392159",
    "end": "1394320"
  },
  {
    "text": "only uh taking toleration seconds into",
    "start": "1394320",
    "end": "1397039"
  },
  {
    "text": "account after the application",
    "start": "1397039",
    "end": "1398640"
  },
  {
    "text": "transitions to healthy for the first",
    "start": "1398640",
    "end": "1400600"
  },
  {
    "text": "time and then additionally uh the health",
    "start": "1400600",
    "end": "1404320"
  },
  {
    "text": "interpreter uh is only really meant to",
    "start": "1404320",
    "end": "1406559"
  },
  {
    "text": "provide an estimate as to whether or not",
    "start": "1406559",
    "end": "1408640"
  },
  {
    "text": "the application is unhealthy um for most",
    "start": "1408640",
    "end": "1411600"
  },
  {
    "text": "cases uh we assume that uh if you're in",
    "start": "1411600",
    "end": "1414640"
  },
  {
    "text": "a reconciling state or created state",
    "start": "1414640",
    "end": "1416320"
  },
  {
    "text": "your application isn't actively",
    "start": "1416320",
    "end": "1417600"
  },
  {
    "text": "processing data um and so if there is no",
    "start": "1417600",
    "end": "1420080"
  },
  {
    "text": "error there we assume that there could",
    "start": "1420080",
    "end": "1421840"
  },
  {
    "text": "be some sort of cluster issue causing",
    "start": "1421840",
    "end": "1424679"
  },
  {
    "text": "problems lastly cluster failover itself",
    "start": "1424679",
    "end": "1427520"
  },
  {
    "text": "is currently undergoing improvements as",
    "start": "1427520",
    "end": "1429679"
  },
  {
    "text": "a result the state preservation feature",
    "start": "1429679",
    "end": "1432320"
  },
  {
    "text": "um has not yet been made available there",
    "start": "1432320",
    "end": "1434400"
  },
  {
    "text": "uh but keep your eyes out this support",
    "start": "1434400",
    "end": "1436080"
  },
  {
    "text": "is supposed to be added",
    "start": "1436080",
    "end": "1439120"
  },
  {
    "text": "soon uh lastly for the Karmada community",
    "start": "1439480",
    "end": "1443280"
  },
  {
    "text": "wanted to add a little bit of a plug um",
    "start": "1443280",
    "end": "1445840"
  },
  {
    "text": "we're a very active community so if",
    "start": "1445840",
    "end": "1447679"
  },
  {
    "text": "you'd like to contribute uh please reach",
    "start": "1447679",
    "end": "1449120"
  },
  {
    "text": "out to us on Slack or on",
    "start": "1449120",
    "end": "1451400"
  },
  {
    "text": "GitHub and we're also presenting further",
    "start": "1451400",
    "end": "1453840"
  },
  {
    "text": "at CubeCon uh there are two other talks",
    "start": "1453840",
    "end": "1456080"
  },
  {
    "text": "that are going to be given tomorrow um",
    "start": "1456080",
    "end": "1457919"
  },
  {
    "text": "so I encourage you to attend those um",
    "start": "1457919",
    "end": "1460480"
  },
  {
    "text": "and if you'd like to talk to the",
    "start": "1460480",
    "end": "1462000"
  },
  {
    "text": "community in person we have a desk in",
    "start": "1462000",
    "end": "1464320"
  },
  {
    "text": "the uh project pavilion i think the",
    "start": "1464320",
    "end": "1467200"
  },
  {
    "text": "kiosk number is 4B um and we'll be there",
    "start": "1467200",
    "end": "1469600"
  },
  {
    "text": "in the mornings",
    "start": "1469600",
    "end": "1472080"
  }
]