[
  {
    "start": "0",
    "end": "90000"
  },
  {
    "text": "thank you all right well first of all it's nice to",
    "start": "399",
    "end": "7359"
  },
  {
    "text": "see so many smiling faces this already tells you that i'm not a",
    "start": "7359",
    "end": "12559"
  },
  {
    "text": "comedian otherwise i would be paid for better jokes my name is andy grabner or andreas carmen but please call me andy",
    "start": "12559",
    "end": "18800"
  },
  {
    "text": "it's always easier i always say that only my mom calls me andreas if i did something rude",
    "start": "18800",
    "end": "26000"
  },
  {
    "text": "my i'm originally from austria i actually live in austria so i also want to say thanks uh for actually allowing me to come here",
    "start": "26160",
    "end": "33280"
  },
  {
    "text": "and i know a lot of international speakers that couldn't make it to kubecon i was one of the lucky ones that",
    "start": "33280",
    "end": "38640"
  },
  {
    "text": "got an exception to travel here i've been in performance engineering for the last 20 years",
    "start": "38640",
    "end": "44960"
  },
  {
    "text": "and i want to share a couple of things that i've learned in my life as a performance engineer especially around",
    "start": "44960",
    "end": "50800"
  },
  {
    "text": "application performance around distributed performance but not about",
    "start": "50800",
    "end": "56160"
  },
  {
    "text": "just like how do you do performance testing or performance engineering but really how we automate all of this and this is where captain comes into play",
    "start": "56160",
    "end": "62800"
  },
  {
    "text": "right uh captain is a cncf sandbox project we are hopefully soon reaching incubator",
    "start": "62800",
    "end": "69280"
  },
  {
    "text": "status and yeah i want to share with you what i've learned and how i hope",
    "start": "69280",
    "end": "74400"
  },
  {
    "text": "i can make your life easier in case you're really interested in building and optimizing",
    "start": "74400",
    "end": "79680"
  },
  {
    "text": "uh or building better performing systems and optimizing your systems all the links and how you reach me and how you  can follow up on captain on the",
    "start": "79680",
    "end": "87680"
  },
  {
    "text": "slide now one thing that i've learned over my last 20 years is when i do performance",
    "start": "87680",
    "end": "93759"
  },
  {
    "start": "90000",
    "end": "320000"
  },
  {
    "text": "analysis i always look at performance patterns and i want to start with this before i go into the core part of this",
    "start": "93759",
    "end": "99119"
  },
  {
    "text": "talk which is how we can automate performance analysis based on slo service level objectives why are",
    "start": "99119",
    "end": "105439"
  },
  {
    "text": "performance pattern patterns important because this is what i do in my life when i analyze",
    "start": "105439",
    "end": "110799"
  },
  {
    "text": "application performance i typically look at things like distributed traces to understand the architecture especially",
    "start": "110799",
    "end": "117520"
  },
  {
    "text": "in distributed systems hopefully i mean for the people in the room distributed traces is something we",
    "start": "117520",
    "end": "122719"
  },
  {
    "text": "are hopefully all aware of who is looking at distributed traces yes so this is actually a small",
    "start": "122719",
    "end": "128720"
  },
  {
    "text": "distributed trace it starts with the front end load balancer with some legacy systems some micro services some",
    "start": "128720",
    "end": "134319"
  },
  {
    "text": "databases some third party some load balancers and so on this is a from a company in germany called step",
    "start": "134319",
    "end": "140800"
  },
  {
    "text": "stone i did a presentation with them a couple of years ago where they talked about how they moved",
    "start": "140800",
    "end": "145840"
  },
  {
    "text": "to a container-based environment and how kind of their architecture changed and the reason why this is important is you",
    "start": "145840",
    "end": "151519"
  },
  {
    "text": "have to understand your architecture you have to understand how components talk to each other to identify very important patterns that tell you if",
    "start": "151519",
    "end": "158879"
  },
  {
    "text": "this architecture can actually scale or not now the number one pattern that i always",
    "start": "158879",
    "end": "164319"
  },
  {
    "text": "find and this is nothing new but i have to repeat it because i see it every day that's the n plus one query pattern what",
    "start": "164319",
    "end": "172080"
  },
  {
    "text": "you see here is a distributed trace a single distributor trace from one of my friends who 15 years ago he started his",
    "start": "172080",
    "end": "179599"
  },
  {
    "text": "own company building an e-commerce store very small for very small shops",
    "start": "179599",
    "end": "184879"
  },
  {
    "text": "over the years it's scaled and scaled now his e-commerce shop is very popular in in europe unfortunately when you look",
    "start": "184879",
    "end": "191920"
  },
  {
    "text": "at this distributed trace it shows this very interesting pattern this is a trace for the search feature",
    "start": "191920",
    "end": "198159"
  },
  {
    "text": "of his e-commerce platform when you search what his initial implementation did give",
    "start": "198159",
    "end": "203760"
  },
  {
    "text": "me the number of product categories and then he's iterating through all the product categories and for every product",
    "start": "203760",
    "end": "209200"
  },
  {
    "text": "he was then querying the database by looping through a list of ids and therefore ending up as",
    "start": "209200",
    "end": "215680"
  },
  {
    "text": "you can see here with 26 000 database calls to execute a very simple query",
    "start": "215680",
    "end": "221680"
  },
  {
    "text": "against the database to figure out which products in the product catalog match a certain criteria this was not a problem",
    "start": "221680",
    "end": "228480"
  },
  {
    "text": "in the beginning when he sold his software to very small shops but this became a problem",
    "start": "228480",
    "end": "234239"
  },
  {
    "text": "with organizations that had thousands of articles in the catalog and the same pattern is also",
    "start": "234239",
    "end": "241120"
  },
  {
    "text": "apparent in architectures where one service calls another one this is again distributed trace visualization just",
    "start": "241120",
    "end": "247599"
  },
  {
    "text": "showing you the cascading effect of one service calling the another recursively and this goes on and on and on this is",
    "start": "247599",
    "end": "253680"
  },
  {
    "text": "not a good sign and it's very it's visually very easy to understand when you look at this that",
    "start": "253680",
    "end": "258880"
  },
  {
    "text": "there's obviously something maybe not wrong but something you definitely need to look into now this",
    "start": "258880",
    "end": "264160"
  },
  {
    "text": "talk is not about more performance patterns that you may already know or maybe not already know",
    "start": "264160",
    "end": "270160"
  },
  {
    "text": "but i think performance problem patterns are very important because if we understand patterns we know how we can",
    "start": "270160",
    "end": "275199"
  },
  {
    "text": "detect them visually and hopefully when we can detect them visually we can also figure out how can we detect them by",
    "start": "275199",
    "end": "280720"
  },
  {
    "text": "looking at key metrics like how many database statements are called how many calls do i make to another",
    "start": "280720",
    "end": "286800"
  },
  {
    "text": "service what's the payload these are a couple of these problem",
    "start": "286800",
    "end": "292320"
  },
  {
    "text": "patterns and also the metrics to look into if you want to know more i did over the last couple of years several talks",
    "start": "292320",
    "end": "297840"
  },
  {
    "text": "where i talked specifically about all these patterns giving examples the links on the bottom please take us",
    "start": "297840",
    "end": "303919"
  },
  {
    "text": "for people in the room of course take a screenshot but this the links are also in the slides and they will be shared so",
    "start": "303919",
    "end": "310720"
  },
  {
    "text": "my point is understand your patterns and then derive your metrics from it which really gets me to once we know",
    "start": "310720",
    "end": "317360"
  },
  {
    "text": "metrics on how to detect bad patterns we can then automate the analysis and the",
    "start": "317360",
    "end": "322960"
  },
  {
    "start": "320000",
    "end": "728000"
  },
  {
    "text": "automation is brought to you today by captain that's the cncf sandbox project that",
    "start": "322960",
    "end": "328960"
  },
  {
    "text": "i've been working on for the last couple of years and the reason why we built captain well there were many different reasons but it",
    "start": "328960",
    "end": "334800"
  },
  {
    "text": "was it was in the end uh really we wanted to save people from building a",
    "start": "334800",
    "end": "339840"
  },
  {
    "text": "lot of automation that they then have to maintain and so we wanted to provide a better",
    "start": "339840",
    "end": "344960"
  },
  {
    "text": "better alternative because you should not build and maintain large scripts for automating things so coming back to the",
    "start": "344960",
    "end": "351440"
  },
  {
    "text": "use case of performance because i would love more people to automate performance analysis into the",
    "start": "351440",
    "end": "357520"
  },
  {
    "text": "delivery pipeline so hopefully you're not sure if you're running performance tests yes yes or not but what i see a",
    "start": "357520",
    "end": "362880"
  },
  {
    "text": "lot of people are held back in including performance tests in every build why",
    "start": "362880",
    "end": "368000"
  },
  {
    "text": "because many that are executing tests they have beautiful dashboards their grafana dashboards or their their whatever load",
    "start": "368000",
    "end": "375360"
  },
  {
    "text": "runner dashboards or whatever tool they're using and while these dashboards are pretty to look at it's really hard to analyze them unless you're really",
    "start": "375360",
    "end": "381759"
  },
  {
    "text": "expert and within a second you know if this is good or not so this doesn't scale",
    "start": "381759",
    "end": "386880"
  },
  {
    "text": "even if you already deploy automatically in test automatically but analyzing manually is hard",
    "start": "386880",
    "end": "392319"
  },
  {
    "text": "so what we bring to the table with captain is really an automated way of taking the",
    "start": "392319",
    "end": "397759"
  },
  {
    "text": "knowledge you have in your head the knowledge that you put on the dashboard which metrics are important and which",
    "start": "397759",
    "end": "402960"
  },
  {
    "text": "patterns you're identifying on these metrics and automatically analyzing them for you scoring them and then giving you",
    "start": "402960",
    "end": "409520"
  },
  {
    "text": "an easy score to say this is solid and sound or we rather go immediately back",
    "start": "409520",
    "end": "415199"
  },
  {
    "text": "and figure out why we make 10 000 database calls or why we are consuming so much memory",
    "start": "415199",
    "end": "420479"
  },
  {
    "text": "okay so a little closer look how does this work in captain now with i talk about slo",
    "start": "420479",
    "end": "428080"
  },
  {
    "text": "service level objectives the way this works in captain is you define a list of slis right slices nothing else than the",
    "start": "428080",
    "end": "435280"
  },
  {
    "text": "metric i have an example here five metrics response time query failure rate and and a couple of more in the bottom",
    "start": "435280",
    "end": "441599"
  },
  {
    "text": "even an open security vulnerability if you if you have a tool that provides you the number of open vulnerabilities a",
    "start": "441599",
    "end": "447199"
  },
  {
    "text": "great metric to have so you specify what you normally look at then in captain you specify your target",
    "start": "447199",
    "end": "453120"
  },
  {
    "text": "your slos where we allow you to do two things either warning or pass meaning you expect a certain metric to",
    "start": "453120",
    "end": "459840"
  },
  {
    "text": "have a certain value where we go a step further you cannot only specify a certain let's say",
    "start": "459840",
    "end": "467199"
  },
  {
    "text": "response time what does it say here response time should be faster than 100 milliseconds then it's green or 250 then",
    "start": "467199",
    "end": "473440"
  },
  {
    "text": "it's warning if you look down to the test step login response time we're actually combining it you can say",
    "start": "473440",
    "end": "480400"
  },
  {
    "text": "test step login this particular function that we are testing should be faster than",
    "start": "480400",
    "end": "485919"
  },
  {
    "text": "150 milliseconds but also should not get slower by more than 10 percent to",
    "start": "485919",
    "end": "491919"
  },
  {
    "text": "the previous good builds so we can also do regression detection automatically metrics so you specify the metric you specify",
    "start": "491919",
    "end": "498560"
  },
  {
    "text": "your slos and you specify your overall target so build number one comes along you're",
    "start": "498560",
    "end": "504080"
  },
  {
    "text": "pushing your pipeline captain automatically reaches out to your prometheus to your apm tool of choice",
    "start": "504080",
    "end": "510639"
  },
  {
    "text": "pulls in the metrics compares them against your objectives grades everything and then you get a score",
    "start": "510639",
    "end": "515919"
  },
  {
    "text": "between 0 and 100 we are normalizing uh this to 100 points",
    "start": "515919",
    "end": "521680"
  },
  {
    "text": "in total you can specify weights if you want to but you can also specify individual metrics as key metric or key",
    "start": "521680",
    "end": "527600"
  },
  {
    "text": "sli so build number one looks good build number two comes along the developer may have made some changes what do we see",
    "start": "527600",
    "end": "533680"
  },
  {
    "text": "oh uh things getting slower plus we all of a sudden make more data more calls to",
    "start": "533680",
    "end": "539040"
  },
  {
    "text": "the back end service like a recursive call maybe even and therefore be getting penalized so we're getting less points",
    "start": "539040",
    "end": "544640"
  },
  {
    "text": "and therefore immediately feedback that this bill should not be go all the way through because we would end up making",
    "start": "544640",
    "end": "550240"
  },
  {
    "text": "twice as many calls to the back-end service once this goes into production i get immediate feedback maybe i fix the thing",
    "start": "550240",
    "end": "557600"
  },
  {
    "text": "build number three comes along it looks like i fixed the performance problems i brought the number of service calls back",
    "start": "557600",
    "end": "563839"
  },
  {
    "text": "to one but all of a sudden i've introduced the security vulnerability this is also part of performance right",
    "start": "563839",
    "end": "569839"
  },
  {
    "text": "because if it doesn't secure it's not secure then who cares about the best performance so again getting penalized",
    "start": "569839",
    "end": "576640"
  },
  {
    "text": "so that in the best case scenario build number four comes along everything is green again",
    "start": "576640",
    "end": "582160"
  },
  {
    "text": "this is the way captain works this is the way we are allowing you to define what metrics what",
    "start": "582160",
    "end": "588480"
  },
  {
    "text": "indicators are important what you want to compare it against but instead of you doing it manually we do this fully",
    "start": "588480",
    "end": "593839"
  },
  {
    "text": "automatically for you a little bit behind the scenes with captain when you kick off the evaluation we have",
    "start": "593839",
    "end": "601040"
  },
  {
    "text": "a so-called lighthouse service and the lighthouse service is triggered by the slo definition you define your slos in",
    "start": "601040",
    "end": "608000"
  },
  {
    "text": "the ammo that you put next to your source code in your source code ripple you can see a little i know it's a little small maybe from the back but",
    "start": "608000",
    "end": "614640"
  },
  {
    "text": "objectives error rate jvm memory number of database calls where you specify what do you expect these metrics to be",
    "start": "614640",
    "end": "621760"
  },
  {
    "text": "but here's the important thing this is your what you expect this might be your architect your performance",
    "start": "621760",
    "end": "627360"
  },
  {
    "text": "engineers your site reliability engineers but where do these metrics come from captain is agnostic to the underlying",
    "start": "627360",
    "end": "633680"
  },
  {
    "text": "observability platform you can build a service that then delivers the data in every service like",
    "start": "633680",
    "end": "639760"
  },
  {
    "text": "for instance we have integrations with prometheus with dyna trace with neoload with refund you would then define or whoever is",
    "start": "639760",
    "end": "646480"
  },
  {
    "text": "responsible for observability and monitoring in your organization you then define how do you actually query this",
    "start": "646480",
    "end": "652079"
  },
  {
    "text": "particular piece of data like how do you get error rate how do you get the number of database calls so it's separated",
    "start": "652079",
    "end": "658560"
  },
  {
    "text": "objectives and how you get the data is completely separation of concerns because typically two different teams are responsible for that",
    "start": "658560",
    "end": "664880"
  },
  {
    "text": "okay and when you trigger the evaluation what happens captain reaches out through an event to that tool everything is",
    "start": "664880",
    "end": "671360"
  },
  {
    "text": "event driven retrieves the data and then as all the data is retrieved",
    "start": "671360",
    "end": "678079"
  },
  {
    "text": "pulls it back compares it again to objectives and then you get your scoring so this is the core component of captain",
    "start": "678079",
    "end": "685279"
  },
  {
    "text": "this slo validation to give you one example one of our early adopters christian",
    "start": "685279",
    "end": "691519"
  },
  {
    "text": "he was responsible for maintaining gitlab pipelines and his task was to",
    "start": "691519",
    "end": "696640"
  },
  {
    "text": "also include an slo validation every time the gitlab pipeline deploys in tests and now he's just making a call",
    "start": "696640",
    "end": "704320"
  },
  {
    "text": "to captain where captain is doing all the evaluation for him saving a lot of time because otherwise",
    "start": "704320",
    "end": "709600"
  },
  {
    "text": "he would have built all this logic in his gitlab title and himself we provided it for him",
    "start": "709600",
    "end": "714720"
  },
  {
    "text": "and it works out of the box and in his case he's using data trace as a data source",
    "start": "714720",
    "end": "720240"
  },
  {
    "text": "so this is the core component that allows us to analyze slos very easily and get this into",
    "start": "720240",
    "end": "726720"
  },
  {
    "text": "existing pipelines but the thing is captain we wanted to solve a much bigger",
    "start": "726720",
    "end": "732800"
  },
  {
    "start": "728000",
    "end": "1091000"
  },
  {
    "text": "problem but the core is this data-driven approach where we always go towards slos and",
    "start": "732800",
    "end": "738320"
  },
  {
    "text": "analyze how your system is currently doing what we want to really solve with captain is the following thing a quick",
    "start": "738320",
    "end": "745120"
  },
  {
    "text": "show of hands who is using jenkins in your organization okay who is using gitlab",
    "start": "745120",
    "end": "751519"
  },
  {
    "text": "perfect who is using powershell scripts for deployment right and or these are all great tools but the thing",
    "start": "751519",
    "end": "758320"
  },
  {
    "text": "is they're all doing certain things pretty well but what we have observed is your classical pipeline has a hard coded",
    "start": "758320",
    "end": "765680"
  },
  {
    "text": "set of steps hard coded integrations with your tools even sometimes you have configuration in",
    "start": "765680",
    "end": "772720"
  },
  {
    "text": "your pipeline i've seen jenkins pipelines also internally in our organization where you have your yaml files your your deployment",
    "start": "772720",
    "end": "779279"
  },
  {
    "text": "definitions files hard coded somewhere in the jenkins pipeline this doesn't scale this becomes very ugly very fast",
    "start": "779279",
    "end": "785120"
  },
  {
    "text": "so what we said we want to solve this problem because we want to make it like we want to make the life easier for",
    "start": "785120",
    "end": "790160"
  },
  {
    "text": "people that need to automate more things into their pipelines so what we do with captain",
    "start": "790160",
    "end": "795760"
  },
  {
    "text": "we are ripping apart the hard-coded process and tooling on the left side you can specify we call",
    "start": "795760",
    "end": "803200"
  },
  {
    "text": "it ship in a shipyard file automation sequences so you specify what tasks you want to execute uh you want to",
    "start": "803200",
    "end": "809920"
  },
  {
    "text": "execute on the right side you have your two links completely separated the configuration all the configuration is",
    "start": "809920",
    "end": "815200"
  },
  {
    "text": "maintained in the git repository and then we're using eventing to connect the two things together",
    "start": "815200",
    "end": "821279"
  },
  {
    "text": "so to give you an example because we're talking about performance engineering here if you wanna use captain for the",
    "start": "821279",
    "end": "827199"
  },
  {
    "text": "complete sequence for performance engineering you want to deploy a new artifact you want to test it and you want to have it evaluated so you specify",
    "start": "827199",
    "end": "834000"
  },
  {
    "text": "deploy test and evaluation without any tool context and in my example then",
    "start": "834000",
    "end": "841120"
  },
  {
    "text": "i can say captain trigger performance in a certain stage and i give it some additional metadata like what image do i",
    "start": "841120",
    "end": "847199"
  },
  {
    "text": "want to test what captain then does it sends a cloud event out to the world and says",
    "start": "847199",
    "end": "854079"
  },
  {
    "text": "who is there in my environment that can deploy this particular artifact",
    "start": "854079",
    "end": "859120"
  },
  {
    "text": "in staging with a blue-green deployment strategy i may have helm doing it i may have an argo pipeline i may call gitlab i may",
    "start": "859120",
    "end": "866160"
  },
  {
    "text": "call it jenkins pipeline this is all event driven and our tools can then subscribe to the event to then do the",
    "start": "866160",
    "end": "872399"
  },
  {
    "text": "actual action once it's done sending it back next thing is test",
    "start": "872399",
    "end": "877839"
  },
  {
    "text": "captain sends an event i need somebody that can execute a performance test in staging today you may use jmeter the nice thing",
    "start": "877839",
    "end": "886320"
  },
  {
    "text": "about this is if your organization decides next next year you're going to a different tool you don't need to update any of your",
    "start": "886320",
    "end": "892720"
  },
  {
    "text": "automation code the only thing you need to do is you turn off the subscription for the event for geometer and you just let your",
    "start": "892720",
    "end": "899040"
  },
  {
    "text": "new tools subscribe to the cloud events they're all standardized that's the beauty switching tools",
    "start": "899040",
    "end": "905120"
  },
  {
    "text": "becomes a thing of a subscription to the event bus",
    "start": "905120",
    "end": "910720"
  },
  {
    "text": "and then the evaluation that's the key thing i explained this how this works earlier captain sends an event out to your",
    "start": "910720",
    "end": "916880"
  },
  {
    "text": "observability tool please give me the data that is specified by the performance engineers in the slo",
    "start": "916880",
    "end": "924399"
  },
  {
    "text": "files in the sli files and then give it back the data and then give me a thumbs up for a thumbs down",
    "start": "924399",
    "end": "931040"
  },
  {
    "text": "and if it's done what i've completely forgotten on the bottom right it says notification tool you can have multiple tools subscribing",
    "start": "931040",
    "end": "937759"
  },
  {
    "text": "to the same events so for instance if you want to get a slack notification after the evaluation is done you just",
    "start": "937759",
    "end": "943360"
  },
  {
    "text": "have select subscribe to the event and then you get it every time the test is finished so terminology-wise we call",
    "start": "943360",
    "end": "950320"
  },
  {
    "text": "the left side the definition of the automation sequences a shipyard file",
    "start": "950320",
    "end": "956880"
  },
  {
    "text": "we call the tools that are subscribing to captain events the uniform",
    "start": "956880",
    "end": "962800"
  },
  {
    "text": "right because the captain the captain on the ship needs a uniform that's the tools the tool belt we have",
    "start": "962800",
    "end": "969040"
  },
  {
    "text": "all the config and the config repo that captain maintains and then we have cloud events and we're",
    "start": "969040",
    "end": "974639"
  },
  {
    "text": "currently working with the cdf the continuous delivery foundation in a special interest group to standardize",
    "start": "974639",
    "end": "979759"
  },
  {
    "text": "these cdf events so that in the future hopefully every tool out there that you use deployment testing tools will just",
    "start": "979759",
    "end": "986000"
  },
  {
    "text": "automatically understand cloud events and then finally nobody of us needs to maintain any custom tool integration",
    "start": "986000",
    "end": "992480"
  },
  {
    "text": "scripts anymore where you call api one and then you try to figure out what's the response how can you parse it and then they change",
    "start": "992480",
    "end": "999040"
  },
  {
    "text": "the version of the tool and then you need to change your integration this should be a thing of the past",
    "start": "999040",
    "end": "1004720"
  },
  {
    "text": "so my point is that i want to make is what's the nice thing about captain and",
    "start": "1004720",
    "end": "1009839"
  },
  {
    "text": "especially when it comes to performance engineering you pick your slos",
    "start": "1009839",
    "end": "1015120"
  },
  {
    "text": "your metrics and the objectives that you have right if you think about how i started",
    "start": "1015120",
    "end": "1020560"
  },
  {
    "text": "understand your application pick your slos then you are hopefully have some tests",
    "start": "1020560",
    "end": "1026640"
  },
  {
    "text": "because without tests you don't generate any traffic right i mean captain doesn't take away the pain of you having to write tests but we take away the pain",
    "start": "1026640",
    "end": "1034558"
  },
  {
    "text": "that we are triggering and orchestrating the test execution you can also use obviously captain for",
    "start": "1034559",
    "end": "1040079"
  },
  {
    "text": "the complete and trained automation so it's not just constrained to one thing so",
    "start": "1040079",
    "end": "1045678"
  },
  {
    "text": "captain orchestrates all of this for you on the right side you see all the tools we're not replacing any tool we want you",
    "start": "1045679",
    "end": "1052400"
  },
  {
    "text": "to use the tool of choice for a particular task there's so many great tools out there i mentioned earlier",
    "start": "1052400",
    "end": "1057600"
  },
  {
    "text": "gitlab jenkins they're all great tools if you have invested in this don't throw them away but don't build additional",
    "start": "1057600",
    "end": "1064080"
  },
  {
    "text": "automation code i always say friends don't let friends build their own automation friends first",
    "start": "1064080",
    "end": "1070160"
  },
  {
    "text": "first suggest their friends to look at captain",
    "start": "1070160",
    "end": "1075039"
  },
  {
    "text": "i know it's a bold statement on the bottom but it says 90 less custom automation code that's what we've seen",
    "start": "1075520",
    "end": "1080880"
  },
  {
    "text": "from people like christian i brought up earlier it's event and data driven it's based on open standards and all the configuration",
    "start": "1080880",
    "end": "1087440"
  },
  {
    "text": "is stored maintained and versioned in git now captain in the real world how does",
    "start": "1087440",
    "end": "1093440"
  },
  {
    "start": "1091000",
    "end": "1233000"
  },
  {
    "text": "captain look like outside of my little uh environment here i am from austria",
    "start": "1093440",
    "end": "1099280"
  },
  {
    "text": "it's also a famous song in austria but it's also why i'm very proud of this year",
    "start": "1099280",
    "end": "1105200"
  },
  {
    "text": "austrian online banking uh is currently completely automatically validated with",
    "start": "1105200",
    "end": "1110480"
  },
  {
    "text": "captain so their software organization they're called drivers and software there's also a medium blog post or blog",
    "start": "1110480",
    "end": "1116080"
  },
  {
    "text": "post or medium on the bottom every time they push their new services the new builds for their jenkins",
    "start": "1116080",
    "end": "1122640"
  },
  {
    "text": "pipelines they have captain automatically validates that release based on their slos",
    "start": "1122640",
    "end": "1130720"
  },
  {
    "text": "another cool example because we are talking about performance engineers here i have a youtube video on the on the top",
    "start": "1130720",
    "end": "1136720"
  },
  {
    "text": "it's a little small but mike kobush she works for ndic national",
    "start": "1136720",
    "end": "1142160"
  },
  {
    "text": "association for insurance companies he's a big load runner expert and is now",
    "start": "1142160",
    "end": "1147600"
  },
  {
    "text": "using also jmeter and he says when he runs this large-scale load test against the replications it takes him typically",
    "start": "1147600",
    "end": "1154240"
  },
  {
    "text": "30 to 60 minutes to analyze the results with captain it takes him one minute",
    "start": "1154240",
    "end": "1159280"
  },
  {
    "text": "that means every week he has a couple of more hours to go fishing that's what he told his cto and i haven't have him on record on this video",
    "start": "1159280",
    "end": "1167120"
  },
  {
    "text": "uh another uh cool use case uh is from",
    "start": "1167120",
    "end": "1172160"
  },
  {
    "text": "vitelity they are a large insurance company uh what they do they have a central software organization they're",
    "start": "1172160",
    "end": "1179120"
  },
  {
    "text": "building the services and then they deploy it to the different countries so it's the same software but with different feature flags they turn on",
    "start": "1179120",
    "end": "1185360"
  },
  {
    "text": "different things that are country specific and what they're doing they're testing every single configuration every single",
    "start": "1185360",
    "end": "1191280"
  },
  {
    "text": "tenant and then captain gives them uh feedback on whether this configuration is good and what you can see here",
    "start": "1191280",
    "end": "1197440"
  },
  {
    "text": "the quality gates are all red so probably they need to invest a little bit more in quality",
    "start": "1197440",
    "end": "1203840"
  },
  {
    "text": "they're really cool though it's building great software uh also this was really nice i did a presentation a couple of",
    "start": "1203840",
    "end": "1209440"
  },
  {
    "text": "months ago at the performance conference where taras he's a performance engineer at facebook he saw captain and then he",
    "start": "1209440",
    "end": "1215600"
  },
  {
    "text": "made this really cool statement captain feels like a reference implementation of google site reliability engineering and the site",
    "start": "1215600",
    "end": "1222080"
  },
  {
    "text": "reliability workbook so that's a nice testimonial for especially the development team that",
    "start": "1222080",
    "end": "1228400"
  },
  {
    "text": "stands behind captain so next slide says let's wrap it up i want",
    "start": "1228400",
    "end": "1235360"
  },
  {
    "start": "1233000",
    "end": "1365000"
  },
  {
    "text": "to wrap it up with the slides but then i know i'm a little fast actually i wanna then also show you a little bit of captain so that you see it's not just",
    "start": "1235360",
    "end": "1241679"
  },
  {
    "text": "screenshots but my advice for you this talk is about optimizing performance based on slos i want to just",
    "start": "1241679",
    "end": "1248960"
  },
  {
    "text": "recap how i started my presentation understand the applications you're responsible for whether you're testing",
    "start": "1248960",
    "end": "1256000"
  },
  {
    "text": "that your performance engineer look at distributor traces understand the patterns look at my presentations i gave",
    "start": "1256000",
    "end": "1262880"
  },
  {
    "text": "all the links will be in the slides next thing is if you know the metrics",
    "start": "1262880",
    "end": "1268320"
  },
  {
    "text": "then you can put them on a dashboard use your favorite observability tool and put them on the dashboards",
    "start": "1268320",
    "end": "1275039"
  },
  {
    "text": "right to see do these metrics really tell you after",
    "start": "1275039",
    "end": "1280080"
  },
  {
    "text": "test that something is wrong and if they do then you can convert these metrics",
    "start": "1280080",
    "end": "1285600"
  },
  {
    "text": "behind the dashboard into an sli and then slow definition in captain and then you can have captain",
    "start": "1285600",
    "end": "1292559"
  },
  {
    "text": "automate that analysis completely for you and then you want to bake it into your",
    "start": "1292559",
    "end": "1298480"
  },
  {
    "text": "existing two landscape and have captain automate",
    "start": "1298480",
    "end": "1303840"
  },
  {
    "text": "all of this fully well every time when you trigger a pipeline also think about what i what i said",
    "start": "1303840",
    "end": "1310000"
  },
  {
    "text": "earlier captain is not just there for performance analysis captain can really orchestrate any type of process",
    "start": "1310000",
    "end": "1316720"
  },
  {
    "text": "not only are we because we don't i always get the question so is captain it's another argo is captain another",
    "start": "1316720",
    "end": "1322159"
  },
  {
    "text": "jenkins is captain what is captain just doing delivery right no captain",
    "start": "1322159",
    "end": "1328320"
  },
  {
    "text": "is bringing your data-driven orchestration of automation sequences whether this is around anything you need",
    "start": "1328320",
    "end": "1334559"
  },
  {
    "text": "to do in delivery or in operations we have a lot of users also using us for other remediation",
    "start": "1334559",
    "end": "1340400"
  },
  {
    "text": "meaning when there's a problem in production they then trigger a captain sequence",
    "start": "1340400",
    "end": "1345520"
  },
  {
    "text": "where captain first notifies people then maybe scales up scales down does whatever whatever it needs to",
    "start": "1345520",
    "end": "1351840"
  },
  {
    "text": "happen in the context of the problem then evaluates against the slos it's the critical part and based on that decides",
    "start": "1351840",
    "end": "1358640"
  },
  {
    "text": "was the system brought back to a healthy state if yes great if not execute the next section",
    "start": "1358640",
    "end": "1364240"
  },
  {
    "text": "so be reminded of that so cap is a lot of things i only had a couple of minutes here to",
    "start": "1364240",
    "end": "1369679"
  },
  {
    "start": "1365000",
    "end": "1415000"
  },
  {
    "text": "talk about it today with the focus on performance engineering if you want to learn more i had a couple of presentations at",
    "start": "1369679",
    "end": "1377120"
  },
  {
    "text": "different conferences you will find a lot of material about captain",
    "start": "1377120",
    "end": "1382880"
  },
  {
    "text": "and we are obviously welcoming every new community member we have a lot of cool",
    "start": "1382880",
    "end": "1388720"
  },
  {
    "text": "stuff on the captain website if we go to captain.sh then you'll find",
    "start": "1388720",
    "end": "1394559"
  },
  {
    "text": "all the information you need to get started we also have a live uh captain installation a demo",
    "start": "1394559",
    "end": "1399919"
  },
  {
    "text": "installation that you can click through which i'm going to show you in a second um you can sign up for the slack you can",
    "start": "1399919",
    "end": "1406320"
  },
  {
    "text": "install you can download it you can go to github you can star us you can do whatever you like as long as you talk",
    "start": "1406320",
    "end": "1412000"
  },
  {
    "text": "nice things about us right so now i have i think three four five",
    "start": "1412000",
    "end": "1417360"
  },
  {
    "start": "1415000",
    "end": "1725000"
  },
  {
    "text": "minutes right before q and a two more minutes at least all right i'm gonna make sure we have time for q and a you have ten minutes",
    "start": "1417360",
    "end": "1424240"
  },
  {
    "text": "got ten minutes even well again i'm going to do amazing demos um so this is actually the the captain public demo",
    "start": "1424240",
    "end": "1431760"
  },
  {
    "text": "live environment and this is the one you get to yourself so if you go to captain.sh you can click",
    "start": "1431760",
    "end": "1438640"
  },
  {
    "text": "on explore live demo that brings you to a little tutorial that explains all the projects that are on here we're working",
    "start": "1438640",
    "end": "1445120"
  },
  {
    "text": "very closely with litmus which was a great partner for us and it explains the different scenarios",
    "start": "1445120",
    "end": "1451120"
  },
  {
    "text": "and then you have to link to captain.public.demo.captain.sh which is this page here",
    "start": "1451120",
    "end": "1456799"
  },
  {
    "text": "i want to focus on really the litmus example what i have here is a so-called captain",
    "start": "1456799",
    "end": "1462960"
  },
  {
    "text": "project and captain projects are organized in the way that you have a",
    "start": "1462960",
    "end": "1469039"
  },
  {
    "text": "project where you define what type of automation sequence do you want to provide is in the context of this",
    "start": "1469039",
    "end": "1474080"
  },
  {
    "text": "project and then you can have or add services to it and then these services",
    "start": "1474080",
    "end": "1479200"
  },
  {
    "text": "can enjoy the automation in this case i have a hello service and you can see here that there was a",
    "start": "1479200",
    "end": "1487120"
  },
  {
    "text": "build number zero one one deployed and what i see in the default view because this is the most important thing as a",
    "start": "1487120",
    "end": "1493360"
  },
  {
    "text": "service owner what's the quality of the service you see this heat map that i showed you earlier right and and you see",
    "start": "1493360",
    "end": "1499679"
  },
  {
    "text": "on the bottom i'm not sure if it's how easy it is to see but on the heat map on the top that's the score i only have two",
    "start": "1499679",
    "end": "1506320"
  },
  {
    "text": "metrics here slo's that are evaluated but you can go back in history if i scroll down a little bit i see the",
    "start": "1506320",
    "end": "1512480"
  },
  {
    "text": "individual values i also see against which value it was compared to in case you decide you want to compare also with",
    "start": "1512480",
    "end": "1518400"
  },
  {
    "text": "previous releases so that's really neat most importantly this is just",
    "start": "1518400",
    "end": "1523600"
  },
  {
    "text": "the thing that is most important are we green are we yellow or are we red behind the scenes that much more happened there",
    "start": "1523600",
    "end": "1529679"
  },
  {
    "text": "was a delivery sequence and that delivery sequence included",
    "start": "1529679",
    "end": "1535200"
  },
  {
    "text": "first a deployment then a test then the evaluation that means the deployment in my case was using helm",
    "start": "1535200",
    "end": "1543200"
  },
  {
    "text": "the test was using a combination of jmeter to run some load and litmus",
    "start": "1543200",
    "end": "1548400"
  },
  {
    "text": "so the nice thing about an event-driven system like this is you can say i want test to be executed and then",
    "start": "1548400",
    "end": "1554000"
  },
  {
    "text": "depending on your projects depending on your event subscription you can have my one or many tools",
    "start": "1554000",
    "end": "1559200"
  },
  {
    "text": "do something in this case i'm running load with jmeter and at the same time litmus kicks in with with chaos",
    "start": "1559200",
    "end": "1564640"
  },
  {
    "text": "engineering and once these are done then captain triggers the evaluation",
    "start": "1564640",
    "end": "1571039"
  },
  {
    "text": "right so how does how can you define this right this is a medium complex uh",
    "start": "1571039",
    "end": "1577039"
  },
  {
    "text": "environment actually let me show you this here every project behind the scenes has a git repository as i mentioned so i click",
    "start": "1577039",
    "end": "1582799"
  },
  {
    "text": "on it it's all public available initially when you create a project",
    "start": "1582799",
    "end": "1587840"
  },
  {
    "text": "you start with a so-called shipyard file and this is really kind of your",
    "start": "1587840",
    "end": "1594400"
  },
  {
    "text": "sequence definition so i have a sequence that is called delivery that does a deployment a test and an",
    "start": "1594400",
    "end": "1602000"
  },
  {
    "text": "evaluation as you can see here there's no hard coded tool integration because there are no we don't reach out to a",
    "start": "1602000",
    "end": "1607440"
  },
  {
    "text": "tool with a hardcoded integration captain will work history this and we'll send events to then trigger the right",
    "start": "1607440",
    "end": "1612640"
  },
  {
    "text": "tools bless you and then what's very important is captain also automatically keeps",
    "start": "1612640",
    "end": "1619279"
  },
  {
    "text": "branches for every as we call it stage um where you cannot you can group your",
    "start": "1619279",
    "end": "1625039"
  },
  {
    "text": "your all your automation sequences into so-called stages and then here you can put in the actual files",
    "start": "1625039",
    "end": "1631760"
  },
  {
    "text": "that then the individual tools need because obviously help needs a helm chart chain meter needs a geometer",
    "start": "1631760",
    "end": "1637039"
  },
  {
    "text": "script litmus needs the chaos experiment for prometheus you need to think you need to define the queries but this is",
    "start": "1637039",
    "end": "1643520"
  },
  {
    "text": "all organized in git all right so coming back to my little",
    "start": "1643520",
    "end": "1650320"
  },
  {
    "text": "example here if i go back last thing i want to show you",
    "start": "1650320",
    "end": "1656559"
  },
  {
    "text": "when i triggered this sequence you can either trigger it through the captain cli command line",
    "start": "1656640",
    "end": "1661679"
  },
  {
    "text": "interface or through the api for every step captain sends a so-called cloud event",
    "start": "1661679",
    "end": "1667120"
  },
  {
    "text": "right this is the stuff we're currently standardizing so in this case captain sends deployment triggered",
    "start": "1667120",
    "end": "1673440"
  },
  {
    "text": "and then whatever tool you've subscribed to that event can then say hi it's me i want to",
    "start": "1673440",
    "end": "1679440"
  },
  {
    "text": "do it then they send a starter event and once they're done they send a finished event again these are all cloud events",
    "start": "1679440",
    "end": "1686080"
  },
  {
    "text": "with additional information about what did they do how did they you know in this case what",
    "start": "1686080",
    "end": "1691760"
  },
  {
    "text": "is the url that they deployed my application to and then this information goes to the",
    "start": "1691760",
    "end": "1696799"
  },
  {
    "text": "next set of tasks that are executed so the next event payload that captain sends out it",
    "start": "1696799",
    "end": "1704240"
  },
  {
    "text": "contains the initial configuration change and then all the information that came in from helm and then it says well",
    "start": "1704240",
    "end": "1710720"
  },
  {
    "text": "in this case i need to trigger some tests all right so it's all event subscription based you",
    "start": "1710720",
    "end": "1717039"
  },
  {
    "text": "have your subscriptions here on the on the so-called uniform page so you see which tools are actually subscribed in",
    "start": "1717039",
    "end": "1722880"
  },
  {
    "text": "for a particular project for a particular stage all right so i just got designed it's",
    "start": "1722880",
    "end": "1728399"
  },
  {
    "start": "1725000",
    "end": "2216000"
  },
  {
    "text": "time to wrap up because we have questions hopefully",
    "start": "1728399",
    "end": "1734320"
  },
  {
    "text": "and yeah what i want to say if you are interested in captain with a booth uh we have a captain move in the",
    "start": "1734320",
    "end": "1740640"
  },
  {
    "text": "pavilion uh i think tomorrow and like tonight also tomorrow after two and on friday",
    "start": "1740640",
    "end": "1746640"
  },
  {
    "text": "i also want to say a big thank you to diner trace diner choice is my employer and diner trace is the big sponsor of",
    "start": "1746640",
    "end": "1752080"
  },
  {
    "text": "this project and i want to say thanks for investing in open source and giving people a chance to work on this um",
    "start": "1752080",
    "end": "1758640"
  },
  {
    "text": "and yeah if you are interested also in that we also have a booth down i think it's g11",
    "start": "1758640",
    "end": "1764960"
  },
  {
    "text": "but i now i want to open up the question in case there are questions if you have questions in the audience then over there hey uh i wanted to ask how does",
    "start": "1764960",
    "end": "1772640"
  },
  {
    "text": "this compare to like argo analysis ones right like what's the differentiator",
    "start": "1772640",
    "end": "1778720"
  },
  {
    "text": "so the question was to repeat what's the difference to argon now uh analysis once right because it",
    "start": "1778960",
    "end": "1785120"
  },
  {
    "text": "does similarly not the hourglass orchestration yeah it does something similar right where you can sort of",
    "start": "1785120",
    "end": "1790559"
  },
  {
    "text": "select the metrics where you probably used okay so the question was specific how do",
    "start": "1790559",
    "end": "1797360"
  },
  {
    "text": "we compare to argo analysis because they also pull in some metrics uh i don't want to say there's no overlap but what we try to be is we try",
    "start": "1797360",
    "end": "1804159"
  },
  {
    "text": "to be not a tool just for delivery right that's what i want to say earlier with captain you can automate sequences that",
    "start": "1804159",
    "end": "1810960"
  },
  {
    "text": "you need to automate in delivery but also in operations and what we do we always pull in data",
    "start": "1810960",
    "end": "1816799"
  },
  {
    "text": "through our sli and solo definition that then allow the orchestrator to decide do",
    "start": "1816799",
    "end": "1822000"
  },
  {
    "text": "we go on or not if you are happy with argo and your argo analysis and that's fine with you then it's good",
    "start": "1822000",
    "end": "1829520"
  },
  {
    "text": "right if you can with argo orchestrate the deployment your tests your evaluation and then you notify and if",
    "start": "1829520",
    "end": "1836000"
  },
  {
    "text": "you switch you want to switch from let's say one tool to another and you are and that's fine and then stick with it what",
    "start": "1836000",
    "end": "1841840"
  },
  {
    "text": "i showed you today is a separation of concerns between process definition you can define whatever process",
    "start": "1841840",
    "end": "1847039"
  },
  {
    "text": "and the tooling is separated the magic behind the scenes is that they are connected through events so you can at",
    "start": "1847039",
    "end": "1852159"
  },
  {
    "text": "any point in time change the tooling without you have to think about what this means for your",
    "start": "1852159",
    "end": "1857279"
  },
  {
    "text": "process definition because the process doesn't change just because you change the tooling",
    "start": "1857279",
    "end": "1862399"
  },
  {
    "text": "also think about my test scenario i have a test step because that's what i want to do",
    "start": "1862399",
    "end": "1867840"
  },
  {
    "text": "in one project i made a functional test in a second i made a load test and maybe next year your company says we need to",
    "start": "1867840",
    "end": "1874240"
  },
  {
    "text": "add security tests to every process every project the only thing you have to do is subscribe to the test event",
    "start": "1874240",
    "end": "1881120"
  },
  {
    "text": "and then automatically your security tool kicks in so these are some of the considerations that we have put into the architecture",
    "start": "1881120",
    "end": "1888080"
  },
  {
    "text": "of captain and it's not constrained to delivery even though we talk a lot about delivery",
    "start": "1888080",
    "end": "1894480"
  },
  {
    "text": "automated remediation production you define your sequence what you want to do",
    "start": "1894480",
    "end": "1900640"
  },
  {
    "text": "when a problem strikes in production right do you want to first notify people then you want to i don't know scale up",
    "start": "1900640",
    "end": "1907760"
  },
  {
    "text": "then you want to validate then you do the next step so you can define we call them remediation run books but they are",
    "start": "1907760",
    "end": "1913840"
  },
  {
    "text": "orchestrated in the same way as you saw for the delivery use case yeah but see it for yourself right i don't want to",
    "start": "1913840",
    "end": "1919679"
  },
  {
    "text": "say it solves all of your problems if you're already happy with what you have",
    "start": "1919679",
    "end": "1924880"
  },
  {
    "text": "hi thank you for the great presentation i was going to ask about the what is the best the best practice that",
    "start": "1926640",
    "end": "1933200"
  },
  {
    "text": "you see when it comes to microservices so do you usually",
    "start": "1933200",
    "end": "1938480"
  },
  {
    "text": "have a captain test suite for microservice or do you spin up the entire",
    "start": "1938480",
    "end": "1944640"
  },
  {
    "text": "thing and run all the screen against that yeah so the question is what's the best practice for microservice architectures",
    "start": "1944640",
    "end": "1951840"
  },
  {
    "text": "do you rather try to test microservices individually or do you deploy everything",
    "start": "1951840",
    "end": "1957360"
  },
  {
    "text": "and run everything at once i think the the best practice do both",
    "start": "1957360",
    "end": "1962720"
  },
  {
    "text": "right if it's possible that means if you have a micro service and you can run it in isolation that means you can mock away",
    "start": "1962720",
    "end": "1968880"
  },
  {
    "text": "the dependencies or at least you can deploy an environment where all the dependencies are also just there and you can run tests against it then this is",
    "start": "1968880",
    "end": "1975039"
  },
  {
    "text": "the ideal state because remember my number one problem pattern i had today it was the m plus one query problem if",
    "start": "1975039",
    "end": "1981120"
  },
  {
    "text": "your microservice has always made one call to the database and all of a sudden",
    "start": "1981120",
    "end": "1986159"
  },
  {
    "text": "it makes five calls to the database then you don't need to deploy the whole app in a big environment because you already",
    "start": "1986159",
    "end": "1991519"
  },
  {
    "text": "know something has changed that will have a make a huge impact later on so",
    "start": "1991519",
    "end": "1997039"
  },
  {
    "text": "these patterns they can most of them can be found just by testing it in isolation as long",
    "start": "1997039",
    "end": "2002799"
  },
  {
    "text": "as you have the data off how many like the test call that goes in into the service and the calls that go",
    "start": "2002799",
    "end": "2008000"
  },
  {
    "text": "out and this is what distributed tracing is so great because it shows you that yeah",
    "start": "2008000",
    "end": "2015320"
  },
  {
    "text": "yes so the question is can you share tests with yes i showed you earlier that for instance the media files that were",
    "start": "2022880",
    "end": "2029440"
  },
  {
    "text": "stored in git so you can either store them on the main branch then it's available for every",
    "start": "2029440",
    "end": "2035840"
  },
  {
    "text": "service in every stage you can store it on a branch level then it's available for every service in that brand that's",
    "start": "2035840",
    "end": "2041279"
  },
  {
    "text": "in that stage or you can define it on the per stage so it's like an inheritance",
    "start": "2041279",
    "end": "2047600"
  },
  {
    "text": "level that we have there",
    "start": "2047600",
    "end": "2050480"
  },
  {
    "text": "say it again new relic if captain supports new relic and bitbucket so i would love if captain",
    "start": "2054399",
    "end": "2061919"
  },
  {
    "text": "would support new relic it doesn't do it right now we have a however a kid issue",
    "start": "2061919",
    "end": "2067118"
  },
  {
    "text": "out there ready for new relic for data talk uh and i think also in stannah we would",
    "start": "2067119",
    "end": "2072480"
  },
  {
    "text": "just would you know it's an open source project that's why if you have new relic if you have datadog or any other data",
    "start": "2072480",
    "end": "2077919"
  },
  {
    "text": "providers then you know join us and uh and and help us implement it's just it's very",
    "start": "2077919",
    "end": "2084000"
  },
  {
    "text": "simple we have templates for building these sli providers like we built for prometheus and dynatrace but i think as",
    "start": "2084000",
    "end": "2090079"
  },
  {
    "text": "far as i know today we don't have one phone really but we have an open feature request",
    "start": "2090079",
    "end": "2095118"
  },
  {
    "text": "um i think the challenge would be like actually implementing the subscriptions and getting a tool to integrate that",
    "start": "2095119",
    "end": "2101520"
  },
  {
    "text": "what does that actually look like is there libraries to do that or so yeah maybe i quickly",
    "start": "2101520",
    "end": "2108560"
  },
  {
    "text": "so the nice thing about this is so captain sandbox right all of our",
    "start": "2108560",
    "end": "2114480"
  },
  {
    "text": "all of our new services start in captain sandbox right so we have jenkins library",
    "start": "2114480",
    "end": "2121040"
  },
  {
    "text": "artifact blah blah synthesis so all of the integrations if you want to get started there's just a service a captain",
    "start": "2121040",
    "end": "2128079"
  },
  {
    "text": "service template so this is just a go template that you clone and then you just put in your um",
    "start": "2128079",
    "end": "2135200"
  },
  {
    "text": "let's see there's a lot of i mean it's this is what subscribes to the tasks exactly yeah the only thing you then",
    "start": "2135200",
    "end": "2141680"
  },
  {
    "text": "need to do is you just implement event handler right so and then all this runs in kubernetes",
    "start": "2141680",
    "end": "2148720"
  },
  {
    "text": "exactly so that service you deployed at service in kubernetes let's say on your target server and that in in the",
    "start": "2148720",
    "end": "2154240"
  },
  {
    "text": "configuration of that service you say i want to subscribe to this event and then this really then becomes the",
    "start": "2154240",
    "end": "2160480"
  },
  {
    "text": "service that then obviously calls let's say the new relic api or whatever else you want to integrate",
    "start": "2160480",
    "end": "2166640"
  },
  {
    "text": "now we are currently working with the cdf foundation in a special interest group to completely standardize all of",
    "start": "2166640",
    "end": "2172320"
  },
  {
    "text": "our cloud events which means once this standard is through then companies like new relic and others if they just build",
    "start": "2172320",
    "end": "2179040"
  },
  {
    "text": "this natively into their product right they open up a cool new opportunity because we all of a sudden",
    "start": "2179040",
    "end": "2185520"
  },
  {
    "text": "standardize on events that everybody will benefit from yeah",
    "start": "2185520",
    "end": "2192720"
  },
  {
    "text": "i think this was the same for me i will be here as i say a little",
    "start": "2193280",
    "end": "2198560"
  },
  {
    "text": "longer for the people in the room and for those that are online feel free to",
    "start": "2198560",
    "end": "2203760"
  },
  {
    "text": "connect with me through linkedin twitter or also on the slag",
    "start": "2203760",
    "end": "2209440"
  },
  {
    "text": "channel very happy to follow up with you thank you [Music] [Applause]",
    "start": "2209440",
    "end": "2218160"
  }
]