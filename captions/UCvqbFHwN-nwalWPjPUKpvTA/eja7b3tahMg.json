[
  {
    "start": "0",
    "end": "54000"
  },
  {
    "text": "welcome welcome check check check hello sounds like we are heard clearly thank",
    "start": "410",
    "end": "7350"
  },
  {
    "text": "you so much for coming to our talk here in one of the last sessions on the last day and we're so happy to have you and I",
    "start": "7350",
    "end": "15210"
  },
  {
    "text": "really hope that what we have to say today will really help you out in your work when you return I am Jonathan Owens",
    "start": "15210",
    "end": "22369"
  },
  {
    "text": "I'm aim stylist I worked for New Relic in the Portland Oregon office the main",
    "start": "22369",
    "end": "27449"
  },
  {
    "text": "engineering headquarters they work in San Francisco because we're a public company you get to take a look at our safe harbors slide it's worth clarifying",
    "start": "27449",
    "end": "35100"
  },
  {
    "text": "that this is not a talk about running databases on kubernetes there are many excellent talks about that here what",
    "start": "35100",
    "end": "41820"
  },
  {
    "text": "this is actually about is running kubernetes components themselves much like a database in our case we use it to",
    "start": "41820",
    "end": "47820"
  },
  {
    "text": "store database of our hosts inventory on our different cloud providers and hardware providers from around the world",
    "start": "47820",
    "end": "53120"
  },
  {
    "text": "first a small question what's on your kitchen counter right now you probably",
    "start": "53120",
    "end": "58410"
  },
  {
    "text": "haven't been home for a few days you might not remember exactly you might have a cleaner kitchen than I do",
    "start": "58410",
    "end": "64860"
  },
  {
    "text": "but when it comes to answering questions about what you have it gets harder when that thing is even further away again",
    "start": "64860",
    "end": "72360"
  },
  {
    "text": "you're probably not close to your kitchen right now but what if you had a rental property say in Germany could you",
    "start": "72360",
    "end": "78479"
  },
  {
    "text": "tell us what was on that counter could you tell us what your rental what's your tenants we're doing in there not so fun",
    "start": "78479",
    "end": "84659"
  },
  {
    "text": "so we had a similar problem on our team at New Relic what team is that we work",
    "start": "84659",
    "end": "90090"
  },
  {
    "text": "on a container fabric team that's our internal platform for deploying and writing containerized services",
    "start": "90090",
    "end": "95720"
  },
  {
    "text": "developers build and deploy excuse me building and push up code from their",
    "start": "95720",
    "end": "101280"
  },
  {
    "text": "laptop as containers we then take those containers and run them on our platform",
    "start": "101280",
    "end": "107549"
  },
  {
    "text": "that platform runs DCOs which is a mezzo space application scheduler as this actually runs the",
    "start": "107549",
    "end": "114630"
  },
  {
    "text": "services we don't have kubernetes running services just yet this is a fairly old platform so similar to ubers",
    "start": "114630",
    "end": "120270"
  },
  {
    "text": "the story we picked DCOs and mezzos at a time when it was stable and served as well and it's a pretty decently sized",
    "start": "120270",
    "end": "127469"
  },
  {
    "text": "deployment we have about a thousand machines most of which are hardware and it's running and now in two regions",
    "start": "127469",
    "end": "133709"
  },
  {
    "text": "on three different infrastructure providers again including our own bare-metal data center and the purpose",
    "start": "133709",
    "end": "139980"
  },
  {
    "text": "of all this of course is to run user services make them available and make them scale so the way we actually manage",
    "start": "139980",
    "end": "145830"
  },
  {
    "start": "144000",
    "end": "302000"
  },
  {
    "text": "this thing is a lot of ansible in terraform before we added this inventory concept and used the kubernetes",
    "start": "145830",
    "end": "152819"
  },
  {
    "text": "components there was a lot of well we got to startup machines with terraform tara forms going to talk directly to the",
    "start": "152819",
    "end": "158760"
  },
  {
    "text": "infrastructure provider once those machines are created by the infrastructure provider we turn around",
    "start": "158760",
    "end": "164430"
  },
  {
    "text": "and take ansible ask those infrastructure providers again for the things that we just made then go and orchestrate the changes on",
    "start": "164430",
    "end": "171989"
  },
  {
    "text": "the machines that we can put them to work for all this to function we need a total",
    "start": "171989",
    "end": "177600"
  },
  {
    "text": "network connectivity across these components so from the orchestrating machine that was running ansible and jenkins that might be a laptop that",
    "start": "177600",
    "end": "184650"
  },
  {
    "text": "might be another machine in the CI system we would need to connect over a VPN to the infrastructure provider to",
    "start": "184650",
    "end": "190920"
  },
  {
    "text": "talk to it about what it built and then also over that same VPN to the actual machines so that we could actually do",
    "start": "190920",
    "end": "196799"
  },
  {
    "text": "work on them a funny thing happened on the way to scale we added a European",
    "start": "196799",
    "end": "202019"
  },
  {
    "text": "region last year this is the first new separate region that we'd had to build and with that came a whole new",
    "start": "202019",
    "end": "207989"
  },
  {
    "text": "networking set up including another VPN so all of a sudden this gets awkward",
    "start": "207989",
    "end": "213060"
  },
  {
    "text": "right which VPN do I beyond do I have to be on a separate one to look at the European ones versus the North American",
    "start": "213060",
    "end": "219269"
  },
  {
    "text": "ones and then when we talk to the people that were running this project they described a future that looks a little bit like this this made us a little",
    "start": "219269",
    "end": "226260"
  },
  {
    "text": "uncomfortable as it should you that's a lot of lines that's a lot of networks we can't really operate comfortably in a",
    "start": "226260",
    "end": "232829"
  },
  {
    "text": "world where every single time we want to touch something there's some central point that has to work on it and we have",
    "start": "232829",
    "end": "238709"
  },
  {
    "text": "to figure out just which cluster do we talk to at all so wouldn't it be nice if these things could be more independent",
    "start": "238709",
    "end": "245190"
  },
  {
    "text": "wouldn't it be nice if we could just sort of push this intelligence closer to the edge so we looked hard at the",
    "start": "245190",
    "end": "251940"
  },
  {
    "text": "problem and realized that the problem in fact was not one of connectivity it wasn't essential for us to talk to all",
    "start": "251940",
    "end": "257820"
  },
  {
    "text": "these machines directly all the time we just needed to know what was there we had an inventory problem and not",
    "start": "257820",
    "end": "263520"
  },
  {
    "text": "necessarily a connectivity problem if we can find out what's there and what's going on and have that be",
    "start": "263520",
    "end": "268930"
  },
  {
    "text": "updated as a reflection of what's real on the ground then we can turn back around and go over the whatever VPN is",
    "start": "268930",
    "end": "275590"
  },
  {
    "text": "appropriate to region and clusters where there's something interesting going on and actually make the changes this",
    "start": "275590",
    "end": "283810"
  },
  {
    "text": "turned out to be a pretty good idea the more we thought about it and well what else could we do with this we could actually if we had a place where the",
    "start": "283810",
    "end": "290500"
  },
  {
    "text": "state of the clusters was easily available and always up to date we can hang more parts off of it we can work a",
    "start": "290500",
    "end": "295960"
  },
  {
    "text": "straight monitoring off of this thing we can have more self driven orchestration if it's easy to answer the question of",
    "start": "295960",
    "end": "301210"
  },
  {
    "text": "what's going on where but what could we do that with well we thought about using",
    "start": "301210",
    "end": "306910"
  },
  {
    "start": "302000",
    "end": "403000"
  },
  {
    "text": "terraform State so if you've used terraform you might be familiar with the file it makes this TF state file and",
    "start": "306910",
    "end": "312550"
  },
  {
    "text": "it's really useful because it lets you look at all the things that terraform did and what state it believes the world to be in but it only updates when you",
    "start": "312550",
    "end": "319450"
  },
  {
    "text": "actually run a plan or when you there's a resynchronization operation you can do and that only happens on demand it's not",
    "start": "319450",
    "end": "326980"
  },
  {
    "text": "really live on top of that it's just a file so you can find it in s3 but you",
    "start": "326980",
    "end": "333070"
  },
  {
    "text": "have to like read and write this entire file when you want to do anything so just really clumsy we looked at",
    "start": "333070",
    "end": "339190"
  },
  {
    "text": "commercial datacenter inventory management tools this would be something like the vice 42 or n light these are",
    "start": "339190",
    "end": "344890"
  },
  {
    "text": "marketed for towards people that are running their own data centers which we are but they're really deeply concerned",
    "start": "344890",
    "end": "350979"
  },
  {
    "text": "with things what's the Machine what rack is it in what are your PD use how many hard drives do you have on hand and not",
    "start": "350979",
    "end": "357430"
  },
  {
    "text": "really anything higher level than that and we really wanted the ability to express like I've got a cluster and",
    "start": "357430",
    "end": "362890"
  },
  {
    "text": "here's what's important to me about a cluster and here's its regen and it wasn't really gonna extend into that",
    "start": "362890",
    "end": "368500"
  },
  {
    "text": "world as I said we're running on DC OS so you might be asking yourself well",
    "start": "368500",
    "end": "374050"
  },
  {
    "text": "what about that doesn't that have anything you could use here sadly the answer is no do you cos because it's",
    "start": "374050",
    "end": "379990"
  },
  {
    "text": "built on mezzos is really built on a responsive pattern mesos itself waits",
    "start": "379990",
    "end": "385060"
  },
  {
    "text": "for offers it waits for agents it waits for things to happen in the infrastructure and then asks for things",
    "start": "385060",
    "end": "390640"
  },
  {
    "text": "to happen when those have occurred there's not really a declarative world inside DCs and all the components that",
    "start": "390640",
    "end": "397330"
  },
  {
    "text": "come with it and that was really what we wanted we wanted this pattern of declaring state",
    "start": "397330",
    "end": "402810"
  },
  {
    "text": "so we looked at what didn't work what did we learn from that and what do we actually need well it needs to be a",
    "start": "402810",
    "end": "408580"
  },
  {
    "start": "403000",
    "end": "521000"
  },
  {
    "text": "single source of truth we can tell that much that's the point of this whole thing that's why we don't wanna have all",
    "start": "408580",
    "end": "413919"
  },
  {
    "text": "those lines we wanted the ability to update it from anywhere so you know the European region and then future regions",
    "start": "413919",
    "end": "420160"
  },
  {
    "text": "or future separate networks could just go and talk to this thing without having to tunnel to it it needed to be",
    "start": "420160",
    "end": "426030"
  },
  {
    "text": "compatible with the ansible inventory so we want to make this one step at a time we want to change the inventory but",
    "start": "426030",
    "end": "431950"
  },
  {
    "text": "we're not yet ready to change all the orchestration and so we just need to be able to plug this thing into the ansible",
    "start": "431950",
    "end": "437169"
  },
  {
    "text": "script and have it go it needs to be production quality of course if we're gonna hang monitoring and other things",
    "start": "437169",
    "end": "443350"
  },
  {
    "text": "off of it and then going back to the thing we learned from the DCIM tools we",
    "start": "443350",
    "end": "448419"
  },
  {
    "text": "want the ability to put higher level abstractions this is a cluster this is a log host there's what's going on that I",
    "start": "448419",
    "end": "455350"
  },
  {
    "text": "want to have happen more so than just like where's my stuff so being operators",
    "start": "455350",
    "end": "461440"
  },
  {
    "text": "of a cluster and being in this space we started reading all kinds of websites including the kubernetes one and if you",
    "start": "461440",
    "end": "467830"
  },
  {
    "text": "look at the kubernetes website you might find a list something like this and you know we looked at that and went well we have most of these things okay that's",
    "start": "467830",
    "end": "473890"
  },
  {
    "text": "cool you kind of need those things to run a cluster but there's one thing on here that DCOs notably really doesn't",
    "start": "473890",
    "end": "479919"
  },
  {
    "text": "have and that's this centralized configuration thing that it sounds pretty neat how could we get just that",
    "start": "479919",
    "end": "486270"
  },
  {
    "text": "well it turns out you totally can so the API server is one of the first things that you provision when you build a",
    "start": "486270",
    "end": "492310"
  },
  {
    "text": "cluster and it's the thing that holds the declarative state of all the objects that represent the clusters behavior but",
    "start": "492310",
    "end": "500440"
  },
  {
    "text": "it can do a little more than that it comes with a bunch of stock objects like deployments and stateful sets and",
    "start": "500440",
    "end": "506470"
  },
  {
    "text": "services but you can extend it with custom objects that can really represent just about whatever you want they're",
    "start": "506470",
    "end": "513159"
  },
  {
    "text": "designed for orchestrating more complex application deployments on kubernetes but they don't have to be that so what",
    "start": "513159",
    "end": "522400"
  },
  {
    "start": "521000",
    "end": "567000"
  },
  {
    "text": "would we need to do to make an inventory system that would consisted entirely of CR DS well we would need a basic object",
    "start": "522400",
    "end": "530020"
  },
  {
    "text": "structure so we need to tell the API server here are the objects I want to talk about things like houses",
    "start": "530020",
    "end": "535029"
  },
  {
    "text": "things like clusters that's just a blob of llamo you'd give that a thing we need something that lives inside these remote",
    "start": "535029",
    "end": "541450"
  },
  {
    "text": "clusters to talk to the infrastructure providers and see what do you have what hosts are under management what has",
    "start": "541450",
    "end": "546880"
  },
  {
    "text": "changed and then we just need an adapter so an tubulin work with this thing and find out what is available and what",
    "start": "546880",
    "end": "553120"
  },
  {
    "text": "should it do so to give you more detail about how we built those components I'm going to turn it over to Miriam so we",
    "start": "553120",
    "end": "568300"
  },
  {
    "start": "567000",
    "end": "928000"
  },
  {
    "text": "need a piece of code that would query our provider API it's a push data into our cube server we run a pretty naive",
    "start": "568300",
    "end": "574089"
  },
  {
    "text": "kubernetes controller that would manage this process and then we call them fetchers because they fetch data they",
    "start": "574089",
    "end": "579399"
  },
  {
    "text": "also push data we still call them fetchers so we're gonna go over how they work this is the overview and we start",
    "start": "579399",
    "end": "586209"
  },
  {
    "text": "by making our API call to our provider we have one fetcher per provider and the",
    "start": "586209",
    "end": "591970"
  },
  {
    "text": "we are our providers our AWS software and then we also have our data center we",
    "start": "591970",
    "end": "599709"
  },
  {
    "text": "take our provider response and store that in a ghost truck internally so we can work with it we then think that struck and convert",
    "start": "599709",
    "end": "606940"
  },
  {
    "text": "into a host object our host object is a custom resource in kubernetes customer expressions are really awesome because",
    "start": "606940",
    "end": "612880"
  },
  {
    "text": "of how you to extend the kuving's framework with their own custom restarts",
    "start": "612880",
    "end": "618220"
  },
  {
    "text": "you get to use the same powerful api's along with the crud you get a caching you get informers you get Watchers and",
    "start": "618220",
    "end": "624820"
  },
  {
    "text": "you can take all of that and do amazing things in order to create a custom",
    "start": "624820",
    "end": "630579"
  },
  {
    "text": "resource you can follow these steps I mean start by doing your custom resource",
    "start": "630579",
    "end": "636610"
  },
  {
    "text": "definition mo file you then create like a ghost truck that you use in your code you update the register file with your",
    "start": "636610",
    "end": "645130"
  },
  {
    "text": "new object name and then you run your cogeneration your code generations where the real magic happens that's where you",
    "start": "645130",
    "end": "651070"
  },
  {
    "text": "get all of the files I will do the Informer's the like create the updates the deletes all of that is included with",
    "start": "651070",
    "end": "658630"
  },
  {
    "text": "you and then you apply your CRD file to your API server so that way the API",
    "start": "658630",
    "end": "664360"
  },
  {
    "text": "server says I hostess almost I could look at a host",
    "start": "664360",
    "end": "671890"
  },
  {
    "text": "see idml file this is what ours looks like it's pretty minimal says hey server",
    "start": "671890",
    "end": "677410"
  },
  {
    "text": "look out for a custom resource definition and look it's going to be a host and so it says like hey this is",
    "start": "677410",
    "end": "683080"
  },
  {
    "text": "what a host is gonna look like well TRD file so you have the option to use validation and validation can say",
    "start": "683080",
    "end": "690280"
  },
  {
    "text": "hey for some fields we don't want to have any numeric characters we'd had",
    "start": "690280",
    "end": "695290"
  },
  {
    "text": "chosen to use that and we chose to just with the option I think can be really",
    "start": "695290",
    "end": "701080"
  },
  {
    "text": "great in certain situations not in ours this is what our host looks like and go",
    "start": "701080",
    "end": "707170"
  },
  {
    "text": "and it sort of programming with internally and the type meta stores the kind of API version we saw earlier and",
    "start": "707170",
    "end": "713560"
  },
  {
    "text": "then our object meta stores and annotations and labels which we look into you have respect which represents",
    "start": "713560",
    "end": "719230"
  },
  {
    "text": "the desired state of yourself object and then your status which represents the status status of your host object we use",
    "start": "719230",
    "end": "726850"
  },
  {
    "text": "our labels and annotations a lot for our inventory service labels are really",
    "start": "726850",
    "end": "732460"
  },
  {
    "text": "awesome you can use them to search and filter for example if you were like hey I want to see all of my hosts that are",
    "start": "732460",
    "end": "738670"
  },
  {
    "text": "log machines that are running in AWS you can say you can use the command line or",
    "start": "738670",
    "end": "743800"
  },
  {
    "text": "the API request to do that annotations are really great we using the store data about the hosts that we then use in",
    "start": "743800",
    "end": "749500"
  },
  {
    "text": "downstream systems or in scripts so now",
    "start": "749500",
    "end": "754690"
  },
  {
    "text": "we got our host object we can store it in our database via an update or create API call to our cube API start right and",
    "start": "754690",
    "end": "761260"
  },
  {
    "text": "it is going to a real database it's going to at CD one of the things you have to make sure you do is like if",
    "start": "761260",
    "end": "766300"
  },
  {
    "text": "you're using an update call you can possibly clobber your data and so on our case we use patch to make sure that we",
    "start": "766300",
    "end": "772750"
  },
  {
    "text": "don't drop any fields in our struct object how has it all worked together in",
    "start": "772750",
    "end": "778390"
  },
  {
    "text": "real life like where's our Q&A living so we use terraform to create our ec2",
    "start": "778390",
    "end": "787090"
  },
  {
    "text": "instance in our elastic load balancer we then use ansible",
    "start": "787090",
    "end": "794070"
  },
  {
    "text": "to add our certs and then use install cube API and the",
    "start": "794070",
    "end": "800779"
  },
  {
    "text": "controller manager so know about the note about the certs our certs are added",
    "start": "800779",
    "end": "806180"
  },
  {
    "text": "by hand and currently if we have any human or a new service that wants to talk to her cube cube API server we need",
    "start": "806180",
    "end": "812810"
  },
  {
    "text": "to approve the new certs and that's a manual process or something we hope to automate in the future and the only",
    "start": "812810",
    "end": "819649"
  },
  {
    "text": "reason we're installing the controller manager is because it allows you to the cert approval process if you heard a",
    "start": "819649",
    "end": "825560"
  },
  {
    "text": "kubernetes the hard way by Kelsey Hightower we're doing kubernetes the easy way because we're only doing the",
    "start": "825560",
    "end": "830930"
  },
  {
    "text": "first three steps we're not to point any pods or any workloads we're not worrying about any pod networking so if you're interested",
    "start": "830930",
    "end": "837529"
  },
  {
    "text": "in playing around with this model I would say it's pretty simple and really easy we're still deploying our fetchers",
    "start": "837529",
    "end": "843860"
  },
  {
    "text": "in DCOs because as our existing platform in the future we plan to transition over",
    "start": "843860",
    "end": "849050"
  },
  {
    "text": "to kubernetes and so now how do we use",
    "start": "849050",
    "end": "857149"
  },
  {
    "text": "our data so this is what a host looks like when when it gets the command line and we can seal it in the yellow file",
    "start": "857149",
    "end": "862759"
  },
  {
    "text": "let me take this data and we can transform it into JSON for instable and",
    "start": "862759",
    "end": "869149"
  },
  {
    "text": "to do this process we use a Python script that goes through makes api calls for a cube api server and then it'll we",
    "start": "869149",
    "end": "877279"
  },
  {
    "text": "take that and spit it into a JSON file one of the things we do in our Python script is filter out machines that are",
    "start": "877279",
    "end": "883069"
  },
  {
    "text": "out of service or machines that are not working anymore and you there's actually a way to manage this life cycle within",
    "start": "883069",
    "end": "889399"
  },
  {
    "text": "kubernetes using finalized errs finalized errs are defined in your hosts",
    "start": "889399",
    "end": "895240"
  },
  {
    "text": "your host object and what happens is you add finalized errs to your hosts and",
    "start": "895240",
    "end": "900860"
  },
  {
    "text": "then when you make a delete call there's a deletion timestamp added to your host object and then you'll have a controller",
    "start": "900860",
    "end": "907040"
  },
  {
    "text": "that watches your deletion timestamp and then do any steps needed to delete the host and it will remove those finalized",
    "start": "907040",
    "end": "912500"
  },
  {
    "text": "errs and then the hosts will probably be deleted we're not currently doing this we have yet so we have the final average",
    "start": "912500",
    "end": "918230"
  },
  {
    "text": "of our hosts we've got to write the code that would actually remove the final answers and watch for deletions timestamp but it's highly recommended to implement",
    "start": "918230",
    "end": "924800"
  },
  {
    "text": "that so let's talk about how we're expanding these patterns",
    "start": "924800",
    "end": "930779"
  },
  {
    "text": "Thank You Miriam so we found this pattern to be already really useful",
    "start": "930779",
    "end": "936279"
  },
  {
    "text": "right we've spent a lot of time on how we use it for inventory but that was really just like the first thing as soon",
    "start": "936279",
    "end": "943240"
  },
  {
    "text": "as we had this place where we could easily define declarative desired States for our cluster a whole new set of",
    "start": "943240",
    "end": "950589"
  },
  {
    "text": "opportunities opened up you know we went from this world where we had this sort",
    "start": "950589",
    "end": "955660"
  },
  {
    "text": "of phased manual back-and-forth it was very iterative it was very hand ribbon",
    "start": "955660",
    "end": "962080"
  },
  {
    "text": "and it really couldn't take us into a multi region future with the API server",
    "start": "962080",
    "end": "967720"
  },
  {
    "text": "in the middle just the way it's made it's made to run in this really decomposed way with lots of clients that",
    "start": "967720",
    "end": "973420"
  },
  {
    "text": "don't necessarily know about each other working on objects together and the two",
    "start": "973420",
    "end": "978760"
  },
  {
    "text": "kind of big aspects that make this possible is the TLS mutual off over that's suitable for use over the",
    "start": "978760",
    "end": "984790"
  },
  {
    "text": "internet so that lets us get rid of the VPNs that lets us get rid of the sort of network connectivity requirement and",
    "start": "984790",
    "end": "991029"
  },
  {
    "text": "then the other aspect is the way it does consistency ordering for clients so when clients make update requests and then",
    "start": "991029",
    "end": "998230"
  },
  {
    "text": "they try to post it back to the server if another client has already changed that object they get told and so it's",
    "start": "998230",
    "end": "1004080"
  },
  {
    "text": "very easy to coordinate lots of things that work on the same host this lets us",
    "start": "1004080",
    "end": "1010589"
  },
  {
    "text": "add more stuff so if if we've got a place where we can declare how things should work we can then use that for",
    "start": "1010589",
    "end": "1016500"
  },
  {
    "text": "other things so we used to do monitoring I'll pick out that as an example when we added hosts to our monitoring system",
    "start": "1016500",
    "end": "1023190"
  },
  {
    "text": "before it used to be get driven we would have a script that would go and do basically what ansible does go and ask",
    "start": "1023190",
    "end": "1028829"
  },
  {
    "text": "for all the servers and then create a config blob in a git repo and then the",
    "start": "1028829",
    "end": "1034020"
  },
  {
    "text": "monitoring server would go and actually pull from that repo and update its configs based on the repo well that's",
    "start": "1034020",
    "end": "1039900"
  },
  {
    "text": "just like kubernetes with extra steps right like this is a big hassle so instead we get to do that dynamically we",
    "start": "1039900",
    "end": "1046020"
  },
  {
    "text": "were able to lift up all that monitoring logic into the API server so now as soon",
    "start": "1046020",
    "end": "1051840"
  },
  {
    "text": "as the inventory changes the host objects in the API server the monitoring server can pick that up right off the",
    "start": "1051840",
    "end": "1058230"
  },
  {
    "text": "data plane because they're listening for new hosts and go reconfigure itself right on the monitoring container way",
    "start": "1058230",
    "end": "1063690"
  },
  {
    "text": "faster no poll requests required no gate connectivity it's just much simpler to think about really anything that needs",
    "start": "1063690",
    "end": "1071400"
  },
  {
    "text": "updates about what goes where can do this you know monitoring is a great start we really want to go further than",
    "start": "1071400",
    "end": "1077070"
  },
  {
    "text": "that so you know it's not yet declarative the host objects that we have are just really status there's not",
    "start": "1077070",
    "end": "1084120"
  },
  {
    "text": "really a spec that we rely on for much yet and creating a new one only happens",
    "start": "1084120",
    "end": "1089730"
  },
  {
    "text": "when a new one actually appears in the infrastructure provider so terraform is still making direct calls to the",
    "start": "1089730",
    "end": "1095640"
  },
  {
    "text": "infrastructure there's no controller for building new instances like a cluster autoscaler might do",
    "start": "1095640",
    "end": "1102860"
  },
  {
    "text": "similarly ansible has to just like go reach directly out to these machines it's not running right on the machines",
    "start": "1102860",
    "end": "1110179"
  },
  {
    "text": "though we have managed to actually build on this a little bit and we now have a",
    "start": "1110179",
    "end": "1115590"
  },
  {
    "text": "component that lives on the actual hosts that monitors for when changes need to be a run by ansible and they can go ask",
    "start": "1115590",
    "end": "1122370"
  },
  {
    "text": "for ansible to be run on them so it's like a little half step towards having self-managed clusters and we expect to",
    "start": "1122370",
    "end": "1129360"
  },
  {
    "text": "continue to evolve that please ask for more details after if you're curious or contact us online so this is how he came",
    "start": "1129360",
    "end": "1137730"
  },
  {
    "start": "1135000",
    "end": "1214000"
  },
  {
    "text": "to think about kubernetes you need a lot of parts to make kubernetes go all those features you saw earlier each one of",
    "start": "1137730",
    "end": "1143730"
  },
  {
    "text": "those is like an entire software project in and of itself it's like a hamburger right you need a lot of stuff to make a",
    "start": "1143730",
    "end": "1149460"
  },
  {
    "text": "hamburger you need something from the bakery something from the ranch something from the dairy something from the garden and they all come together",
    "start": "1149460",
    "end": "1155549"
  },
  {
    "text": "and make something sort of greater than the sum of the parts but you know if you just take the G's G's good just on its",
    "start": "1155549",
    "end": "1162990"
  },
  {
    "text": "own and you know we took this sort of cheesy part of kubernetes this sort of thing that's delicious on its own and",
    "start": "1162990",
    "end": "1169200"
  },
  {
    "text": "made a sandwich out of it you know and still cheese in there it's just it it's sort of differently shaped when you eat",
    "start": "1169200",
    "end": "1175049"
  },
  {
    "text": "it all together so you know we encourage you it was so valuable for us to look at these parts of kubernetes look at the",
    "start": "1175049",
    "end": "1180929"
  },
  {
    "text": "opinions about how distributed systems work that are baked into the code that are encoded in it and then think about",
    "start": "1180929",
    "end": "1188130"
  },
  {
    "text": "how you can apply that to your own systems we've struggled for years with this pattern of how do we converge lots",
    "start": "1188130",
    "end": "1193830"
  },
  {
    "text": "of stuff and the folks that build kubernetes have too but they've come up with ideas that are better than we",
    "start": "1193830",
    "end": "1199140"
  },
  {
    "text": "and we've had a lot of enjoyment applying them to our world thank you so much we'll take questions at this time and we're so glad that you came thank",
    "start": "1199140",
    "end": "1207690"
  },
  {
    "text": "you please shout out your questions we",
    "start": "1207690",
    "end": "1216330"
  },
  {
    "start": "1214000",
    "end": "1421000"
  },
  {
    "text": "will repeat them for the benefit of the audience no questions come on you have to ask me",
    "start": "1216330",
    "end": "1223470"
  },
  {
    "text": "like what I had for breakfast this morning or something yes do we think",
    "start": "1223470",
    "end": "1236130"
  },
  {
    "text": "this will last the test of time given the changes happening in kubernetes absolutely so custom objects and the",
    "start": "1236130",
    "end": "1241980"
  },
  {
    "text": "custom resource definition are continuing to be expanded I see movement happening especially in the API",
    "start": "1241980",
    "end": "1248250"
  },
  {
    "text": "machinery sig to expand on what custom objects can do ideas being thrown around",
    "start": "1248250",
    "end": "1254010"
  },
  {
    "text": "include things all the way up to and including converting all of the core kubernetes objects to CR DS themselves",
    "start": "1254010",
    "end": "1261420"
  },
  {
    "text": "that get loaded when you install kubernetes or even generally just teasing apart more of the API component",
    "start": "1261420",
    "end": "1267420"
  },
  {
    "text": "from kubernetes core objects you know I don't think we're running at cross-purposes with what they're trying",
    "start": "1267420",
    "end": "1273480"
  },
  {
    "text": "to do with the API server at all and the more we talk to them about it the more kind of useful things are emerging from",
    "start": "1273480",
    "end": "1279210"
  },
  {
    "text": "that dialogue so yeah we think this will totally go yes",
    "start": "1279210",
    "end": "1284419"
  },
  {
    "text": "you know things into CRD",
    "start": "1287600",
    "end": "1291220"
  },
  {
    "text": "yes that was the the core insight was that like what if we didn't write an inventory service what if we just used",
    "start": "1303390",
    "end": "1309660"
  },
  {
    "text": "CRTs as the inventory service and then wrote the machinery around it to make",
    "start": "1309660",
    "end": "1314880"
  },
  {
    "text": "that CRT useful yeah",
    "start": "1314880",
    "end": "1318200"
  },
  {
    "text": "what put kubernetes on the radar for this purpose and not others so we were",
    "start": "1332250",
    "end": "1337660"
  },
  {
    "text": "looking at moving off DCs and to kubernetes and still are and so this forms sort of the camels nose under the",
    "start": "1337660",
    "end": "1344140"
  },
  {
    "text": "tent to go like well what if we just use this part how would that go and it gave us an opportunity to learn the system",
    "start": "1344140",
    "end": "1350820"
  },
  {
    "text": "we've seen other teams inside New Relic look at what we've done here and go I want that and so we've already got a",
    "start": "1350820",
    "end": "1356980"
  },
  {
    "text": "team using it to manage the load balancers any place where I want to",
    "start": "1356980",
    "end": "1362020"
  },
  {
    "text": "declare state in some flexible way and then serve that and reify that in in",
    "start": "1362020",
    "end": "1367150"
  },
  {
    "text": "actual machines it's proven to be pretty useful I don't see any reason why you couldn't apply this to non containerized",
    "start": "1367150",
    "end": "1373780"
  },
  {
    "text": "systems is this open source no we would",
    "start": "1373780",
    "end": "1379179"
  },
  {
    "text": "like to I think the fetchers especially for things like AWS and IBM cloud are pretty like you could make those generic",
    "start": "1379179",
    "end": "1386530"
  },
  {
    "text": "in a meaningful way right now we're working with another team inside New Relic to get them to use this as well",
    "start": "1386530",
    "end": "1391929"
  },
  {
    "text": "for their large cluster orchestration and I think as part of that process will",
    "start": "1391929",
    "end": "1397570"
  },
  {
    "text": "look at teasing that apart because I don't there's no reason why we couldn't make these open they're pretty pretty powerful so yes we're working on that",
    "start": "1397570",
    "end": "1405660"
  },
  {
    "start": "1421000",
    "end": "1574000"
  },
  {
    "text": "it's poem API periodically we want to do something more smart like that but since",
    "start": "1421650",
    "end": "1427630"
  },
  {
    "text": "we don't have a ton of hosts like we only like a dozen right now we're just pulling time for a few more questions",
    "start": "1427630",
    "end": "1437679"
  },
  {
    "text": "yes",
    "start": "1437679",
    "end": "1440220"
  },
  {
    "text": "mm-hmm yeah so the question was how do we deal with are we thinking of replacing this terraform flow or - we're",
    "start": "1464530",
    "end": "1471660"
  },
  {
    "text": "terraform still has to go and reach out and make things without being queued by",
    "start": "1471660",
    "end": "1476970"
  },
  {
    "text": "changes to the CRT that reflect the question so because of our migration",
    "start": "1476970",
    "end": "1483010"
  },
  {
    "text": "plans off DCOs I don't think we're gonna make that change on this system but when",
    "start": "1483010",
    "end": "1488290"
  },
  {
    "text": "we start building kubernetes clusters we absolutely want to do that and so we're trying to get really plugged in with the",
    "start": "1488290",
    "end": "1494560"
  },
  {
    "text": "cluster API folks because they're talking about a design for managing kubernetes clusters that is totally this",
    "start": "1494560",
    "end": "1501070"
  },
  {
    "text": "idea you make a cluster object then you make controllers that create that actual",
    "start": "1501070",
    "end": "1506320"
  },
  {
    "text": "cluster in the real world that's the world we want to operate in because we expect at our scale to have many",
    "start": "1506320",
    "end": "1511450"
  },
  {
    "text": "clusters and I don't want to manage many clusters with like a whole bunch of pull requests - all over the codebase I want",
    "start": "1511450",
    "end": "1517810"
  },
  {
    "text": "to make just an object and an API server and how to go so yeah that's that's where we want to be I hope to come back",
    "start": "1517810",
    "end": "1524440"
  },
  {
    "text": "next year and be like check it out cluster API is the thing yes",
    "start": "1524440",
    "end": "1532110"
  },
  {
    "text": "so do we expect to continue using this when we're off DC LS is that",
    "start": "1558200",
    "end": "1563779"
  },
  {
    "text": "and why is it difficult to move off DC us to excellent questions I do expect he",
    "start": "1563779",
    "end": "1570570"
  },
  {
    "text": "I don't know what do you think should we still use the host objects to manage cuber nineties clusters I mean I don't",
    "start": "1570570",
    "end": "1576059"
  },
  {
    "text": "know if I think what the Machine like from cluster AP I have a machine-type we probably won't have to worry about it as much yeah the cluster API folks have a",
    "start": "1576059",
    "end": "1583350"
  },
  {
    "text": "whole set of CRTs that they've defined that are pretty close to what we're doing here so they define a machine",
    "start": "1583350",
    "end": "1589049"
  },
  {
    "text": "object and a machine set we're gonna look real hard at that because you know",
    "start": "1589049",
    "end": "1594720"
  },
  {
    "text": "we may have to straddle two worlds we may have a host inventory that has both machines that are running DCOs and also",
    "start": "1594720",
    "end": "1601559"
  },
  {
    "text": "machines that are running kubernetes and those may take different representations honestly we don't know we'll see as for",
    "start": "1601559",
    "end": "1609330"
  },
  {
    "text": "what's hard about moving off DCOs i think in our case it's not actually going to be that hard because all we run",
    "start": "1609330",
    "end": "1615870"
  },
  {
    "text": "on DCOs are stateless services and those are pretty easy to migrate to kubernetes i think what's going to be hard is is",
    "start": "1615870",
    "end": "1623789"
  },
  {
    "text": "pulling on the stateful services which we do want around kubernetes and we're very early in that process still so",
    "start": "1623789",
    "end": "1629460"
  },
  {
    "text": "we're not certain yet we've made it easier on ourselves it's not shown in the architecture diagrams but we do have",
    "start": "1629460",
    "end": "1636390"
  },
  {
    "text": "a piece of software that sits in the middle so when teams deploy their services that go through a piece of",
    "start": "1636390",
    "end": "1641610"
  },
  {
    "text": "software called Grand Central that's what actually talks to DCOs and creates the applications we expect that same",
    "start": "1641610",
    "end": "1647850"
  },
  {
    "text": "flow to happen when they deploy to kubernetes for the most part and so we just changed that part in the middle the grand central part and have it just",
    "start": "1647850",
    "end": "1654240"
  },
  {
    "text": "deploy to another cluster and have that go which makes it easy for the service",
    "start": "1654240",
    "end": "1659279"
  },
  {
    "text": "owners and hard for us because we have to make sure that both of those things work well alright any more questions",
    "start": "1659279",
    "end": "1669060"
  },
  {
    "text": "yes",
    "start": "1669060",
    "end": "1672060"
  },
  {
    "start": "1678000",
    "end": "1833000"
  },
  {
    "text": "there aren't any conflicts because they're not really talking to each other the fetchers are deployed in DC waves",
    "start": "1678580",
    "end": "1683990"
  },
  {
    "text": "but they're just communicating on the cube API server via API request it's",
    "start": "1683990",
    "end": "1689419"
  },
  {
    "text": "just over it like HTTP request so there's not really any like fighting that would happen there's no situate space for that yeah",
    "start": "1689419",
    "end": "1696830"
  },
  {
    "text": "we're only running like just the small part of kubernetes right there's no CNI there's no cubelet there's no you know",
    "start": "1696830",
    "end": "1703100"
  },
  {
    "text": "service objects no IP mapping and so all the parts of kubernetes that sort of do interesting work that might be in",
    "start": "1703100",
    "end": "1709549"
  },
  {
    "text": "conflict with DCOs simply aren't running and when we stand up communities clusters we expect them to be on",
    "start": "1709549",
    "end": "1715159"
  },
  {
    "text": "separated equipment we're not gonna try to like co-locate those I think that would end in tears",
    "start": "1715159",
    "end": "1721118"
  },
  {
    "text": "all right one more question oh yes sorry",
    "start": "1721720",
    "end": "1728230"
  },
  {
    "text": "mm-hmm so the question is like what's the source of truth and it seems like",
    "start": "1749100",
    "end": "1754230"
  },
  {
    "text": "yeah so how like who asserts what a host should do and what it looks like",
    "start": "1754230",
    "end": "1760389"
  },
  {
    "text": "yeah I think it's mostly terraform right like when we make a host and we we give it a role or we give it labels that",
    "start": "1760389",
    "end": "1767109"
  },
  {
    "text": "mostly comes from terraform right I guess it depends right cuz we're having AWS and we have our data center so for",
    "start": "1767109",
    "end": "1773559"
  },
  {
    "text": "our data center we would just change the role like in the API calls and then one cube API queries that provider I",
    "start": "1773559",
    "end": "1779350"
  },
  {
    "text": "wouldn't know all of that was terraformed yeah I guess you would just it would end up in AWS the API somehow",
    "start": "1779350",
    "end": "1786159"
  },
  {
    "text": "and that's API would be I guess the API is really a source of truth and then cubic cubic Lee I saw like leaning on",
    "start": "1786159",
    "end": "1792159"
  },
  {
    "text": "that and that's where it's going with this data from so I wouldn't say I was it's the provider and not really a",
    "start": "1792159",
    "end": "1797470"
  },
  {
    "text": "terraform much of the intelligence about what a host does in our system is determined by the host name so that gets",
    "start": "1797470",
    "end": "1804879"
  },
  {
    "text": "set on creation of a host and then almost every tool that sort of is downstream of that is like oh you're one",
    "start": "1804879",
    "end": "1809980"
  },
  {
    "text": "of these I'm gonna do that thing with you and that's done not for any",
    "start": "1809980",
    "end": "1815320"
  },
  {
    "text": "particularly good architectural reasons but it you could conceptually it's the same as like putting a bunch of labels",
    "start": "1815320",
    "end": "1820809"
  },
  {
    "text": "on it which is how that's often done all right that's all the time we have thank you so much for joining us today we hope",
    "start": "1820809",
    "end": "1826659"
  },
  {
    "text": "you have a great conference and safe trip home you",
    "start": "1826659",
    "end": "1832070"
  }
]