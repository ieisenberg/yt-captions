[
  {
    "text": "uh hi everybody this is what we learned",
    "start": "900",
    "end": "3780"
  },
  {
    "text": "from the Gateway API designing",
    "start": "3780",
    "end": "5279"
  },
  {
    "text": "linkerty's new policy crd",
    "start": "5279",
    "end": "8760"
  },
  {
    "text": "it was so big I don't know where to look",
    "start": "8760",
    "end": "10700"
  },
  {
    "text": "so this is a talk by my colleague mate",
    "start": "10700",
    "end": "13440"
  },
  {
    "text": "David he was not able to make it",
    "start": "13440",
    "end": "15420"
  },
  {
    "text": "unfortunately because of Visa issues so",
    "start": "15420",
    "end": "17100"
  },
  {
    "text": "I'm giving this talk instead of him",
    "start": "17100",
    "end": "19680"
  },
  {
    "text": "um so hopefully I do a good job with it",
    "start": "19680",
    "end": "23420"
  },
  {
    "text": "so my name is Alex I'm a software",
    "start": "24060",
    "end": "25920"
  },
  {
    "text": "engineer at buoyant we're the creators",
    "start": "25920",
    "end": "27720"
  },
  {
    "text": "of linkerty I've been a Linker D",
    "start": "27720",
    "end": "29460"
  },
  {
    "text": "maintainer since the beginning of the",
    "start": "29460",
    "end": "31080"
  },
  {
    "text": "project and it's something I'm really",
    "start": "31080",
    "end": "32880"
  },
  {
    "text": "passionate about I think service meshes",
    "start": "32880",
    "end": "35040"
  },
  {
    "text": "are very very cool and we have recently",
    "start": "35040",
    "end": "37440"
  },
  {
    "text": "done a lot of really interesting stuff",
    "start": "37440",
    "end": "39120"
  },
  {
    "text": "with the Gateway API that I want to talk",
    "start": "39120",
    "end": "40920"
  },
  {
    "text": "about",
    "start": "40920",
    "end": "43100"
  },
  {
    "text": "uh okay so show of hands who is familiar",
    "start": "44640",
    "end": "47460"
  },
  {
    "text": "with linkerty here",
    "start": "47460",
    "end": "49860"
  },
  {
    "text": "okay a lot of people great",
    "start": "49860",
    "end": "51899"
  },
  {
    "text": "um what about who's familiar with the",
    "start": "51899",
    "end": "52980"
  },
  {
    "text": "Gateway API",
    "start": "52980",
    "end": "55079"
  },
  {
    "text": "uh still a good number but but fewer",
    "start": "55079",
    "end": "57180"
  },
  {
    "text": "Okay cool so I I guess I don't have to",
    "start": "57180",
    "end": "59640"
  },
  {
    "text": "spend too much time talking about",
    "start": "59640",
    "end": "60539"
  },
  {
    "text": "linkready itself it's a service mesh",
    "start": "60539",
    "end": "62340"
  },
  {
    "text": "it's a graduated project in the cncf",
    "start": "62340",
    "end": "64260"
  },
  {
    "text": "it's used in production in many",
    "start": "64260",
    "end": "66659"
  },
  {
    "text": "different places by many different",
    "start": "66659",
    "end": "67740"
  },
  {
    "text": "people",
    "start": "67740",
    "end": "69060"
  },
  {
    "text": "um and it's a very uh collaborative and",
    "start": "69060",
    "end": "72000"
  },
  {
    "text": "active open source community",
    "start": "72000",
    "end": "75140"
  },
  {
    "text": "uh so as a service mesh that means that",
    "start": "76680",
    "end": "79140"
  },
  {
    "text": "there is a sidecar proxy uh in every pod",
    "start": "79140",
    "end": "81780"
  },
  {
    "text": "that's part of the mesh that adds a lot",
    "start": "81780",
    "end": "84000"
  },
  {
    "text": "of really interesting functionality like",
    "start": "84000",
    "end": "85259"
  },
  {
    "text": "mtls uh between all your services uh",
    "start": "85259",
    "end": "89220"
  },
  {
    "text": "reliability features like retries and",
    "start": "89220",
    "end": "90780"
  },
  {
    "text": "timeouts and a lot of observability",
    "start": "90780",
    "end": "93299"
  },
  {
    "text": "features like layer 7 metrics on success",
    "start": "93299",
    "end": "95759"
  },
  {
    "text": "rate request rate and latency",
    "start": "95759",
    "end": "98400"
  },
  {
    "text": "um",
    "start": "98400",
    "end": "99060"
  },
  {
    "text": "and uh with a major focus on operational",
    "start": "99060",
    "end": "101820"
  },
  {
    "text": "simplicity so the whole thing kind of",
    "start": "101820",
    "end": "103500"
  },
  {
    "text": "works out of the box and and doesn't",
    "start": "103500",
    "end": "105180"
  },
  {
    "text": "require you dedicating a lot of brain",
    "start": "105180",
    "end": "107640"
  },
  {
    "text": "power to to making it work",
    "start": "107640",
    "end": "110900"
  },
  {
    "text": "uh so the main focus is behind likerty",
    "start": "113659",
    "end": "116939"
  },
  {
    "text": "are just that it's supposed to be very",
    "start": "116939",
    "end": "118259"
  },
  {
    "text": "very lightweight both in terms of",
    "start": "118259",
    "end": "119520"
  },
  {
    "text": "resource usage which means that it",
    "start": "119520",
    "end": "121140"
  },
  {
    "text": "doesn't take up a lot of memory and it",
    "start": "121140",
    "end": "122520"
  },
  {
    "text": "doesn't add a lot of latency uh but also",
    "start": "122520",
    "end": "124740"
  },
  {
    "text": "lightweight uh conceptually in that it's",
    "start": "124740",
    "end": "127619"
  },
  {
    "text": "a very simple model that you don't have",
    "start": "127619",
    "end": "128819"
  },
  {
    "text": "to think too much about and you can",
    "start": "128819",
    "end": "130979"
  },
  {
    "text": "operate it uh without getting bogged",
    "start": "130979",
    "end": "133319"
  },
  {
    "text": "down in the details so being simple and",
    "start": "133319",
    "end": "136200"
  },
  {
    "text": "secure right out of the box has been",
    "start": "136200",
    "end": "137520"
  },
  {
    "text": "kind of a guiding principle for the",
    "start": "137520",
    "end": "138780"
  },
  {
    "text": "project",
    "start": "138780",
    "end": "139620"
  },
  {
    "text": "uh the control plane is written in this",
    "start": "139620",
    "end": "142200"
  },
  {
    "text": "says go but it's actually now a",
    "start": "142200",
    "end": "143459"
  },
  {
    "text": "combination of go and rust and the data",
    "start": "143459",
    "end": "145920"
  },
  {
    "text": "plane is a custom built proxy uh written",
    "start": "145920",
    "end": "148500"
  },
  {
    "text": "in Rust built to be ultralight",
    "start": "148500",
    "end": "152780"
  },
  {
    "text": "okay so I'm going to give a little bit",
    "start": "154560",
    "end": "155940"
  },
  {
    "text": "of background uh here about",
    "start": "155940",
    "end": "158879"
  },
  {
    "text": "um how authorization Works in Linker d",
    "start": "158879",
    "end": "161819"
  },
  {
    "text": "uh so this is a fairly new feature that",
    "start": "161819",
    "end": "164160"
  },
  {
    "text": "was added in Linker d211 I think",
    "start": "164160",
    "end": "166680"
  },
  {
    "text": "sometime last earlier this year or late",
    "start": "166680",
    "end": "169319"
  },
  {
    "text": "last year maybe",
    "start": "169319",
    "end": "170420"
  },
  {
    "text": "and that's kind of kind of set the stage",
    "start": "170420",
    "end": "172500"
  },
  {
    "text": "for why we care about the Gateway API",
    "start": "172500",
    "end": "175080"
  },
  {
    "text": "and and how it's going to help us",
    "start": "175080",
    "end": "179000"
  },
  {
    "text": "uh so the idea is that we wanted to add",
    "start": "181500",
    "end": "184500"
  },
  {
    "text": "a way to do authorization and liquidy so",
    "start": "184500",
    "end": "188940"
  },
  {
    "text": "to take a step back liquidy has mtls and",
    "start": "188940",
    "end": "192239"
  },
  {
    "text": "it had mtls for a very long time and",
    "start": "192239",
    "end": "195239"
  },
  {
    "text": "what that means is that for every uh pod",
    "start": "195239",
    "end": "198120"
  },
  {
    "text": "in your service mesh it has an identity",
    "start": "198120",
    "end": "200819"
  },
  {
    "text": "and it has this workload identity that",
    "start": "200819",
    "end": "203099"
  },
  {
    "text": "has been built up from its service",
    "start": "203099",
    "end": "205440"
  },
  {
    "text": "account token and that gets transformed",
    "start": "205440",
    "end": "207780"
  },
  {
    "text": "into a certificate which it uses for all",
    "start": "207780",
    "end": "210300"
  },
  {
    "text": "of its communication to to other pods",
    "start": "210300",
    "end": "212640"
  },
  {
    "text": "and so that means that when two pods",
    "start": "212640",
    "end": "214920"
  },
  {
    "text": "talk to each other the m and mtls means",
    "start": "214920",
    "end": "217319"
  },
  {
    "text": "that they can mutually authenticate",
    "start": "217319",
    "end": "218940"
  },
  {
    "text": "their identity so if I'm talking if I'm",
    "start": "218940",
    "end": "221220"
  },
  {
    "text": "the foo pod and I'm talking to the bar",
    "start": "221220",
    "end": "222480"
  },
  {
    "text": "pod I can cryptographically know that",
    "start": "222480",
    "end": "224879"
  },
  {
    "text": "the person on the other side of this",
    "start": "224879",
    "end": "225959"
  },
  {
    "text": "connection is someone with the bar",
    "start": "225959",
    "end": "228480"
  },
  {
    "text": "identity and likewise they know that",
    "start": "228480",
    "end": "230760"
  },
  {
    "text": "what's on my side of the connection is",
    "start": "230760",
    "end": "232140"
  },
  {
    "text": "someone with a foo identity",
    "start": "232140",
    "end": "234420"
  },
  {
    "text": "um and this is really awesome because it",
    "start": "234420",
    "end": "235500"
  },
  {
    "text": "means not only is that connection",
    "start": "235500",
    "end": "236519"
  },
  {
    "text": "encrypted but it's also we know who the",
    "start": "236519",
    "end": "238440"
  },
  {
    "text": "other person is and we know that uh",
    "start": "238440",
    "end": "240120"
  },
  {
    "text": "securely",
    "start": "240120",
    "end": "241799"
  },
  {
    "text": "and so we've had that in liquidy for a",
    "start": "241799",
    "end": "243480"
  },
  {
    "text": "really long time but what we haven't had",
    "start": "243480",
    "end": "245459"
  },
  {
    "text": "is really a way to act on that",
    "start": "245459",
    "end": "246900"
  },
  {
    "text": "information a way to do authorization",
    "start": "246900",
    "end": "249540"
  },
  {
    "text": "which is to say you know I'm only going",
    "start": "249540",
    "end": "251879"
  },
  {
    "text": "to allow certain identities to talk to",
    "start": "251879",
    "end": "253379"
  },
  {
    "text": "me or I'm only going to authorize you",
    "start": "253379",
    "end": "255239"
  },
  {
    "text": "know uh certain parties from from",
    "start": "255239",
    "end": "256979"
  },
  {
    "text": "establishing connections",
    "start": "256979",
    "end": "259260"
  },
  {
    "text": "and so we wanted to add that unless that",
    "start": "259260",
    "end": "262199"
  },
  {
    "text": "was a major focus of linker d211",
    "start": "262199",
    "end": "264680"
  },
  {
    "text": "and so as we were kind of Designing that",
    "start": "264680",
    "end": "267240"
  },
  {
    "text": "feature one of the things we really had",
    "start": "267240",
    "end": "268919"
  },
  {
    "text": "to think about is well where does that",
    "start": "268919",
    "end": "270660"
  },
  {
    "text": "configuration live",
    "start": "270660",
    "end": "273180"
  },
  {
    "text": "um and as I mentioned in one of the",
    "start": "273180",
    "end": "274680"
  },
  {
    "text": "earlier slides one of the guiding",
    "start": "274680",
    "end": "275940"
  },
  {
    "text": "principles of linkerty is to kind of",
    "start": "275940",
    "end": "277320"
  },
  {
    "text": "minimize configuration make it easy to",
    "start": "277320",
    "end": "279300"
  },
  {
    "text": "use make it just work out of the box but",
    "start": "279300",
    "end": "281699"
  },
  {
    "text": "there's a few places where you really do",
    "start": "281699",
    "end": "283320"
  },
  {
    "text": "need user input in order to decide what",
    "start": "283320",
    "end": "285600"
  },
  {
    "text": "the behavior should be you know we can't",
    "start": "285600",
    "end": "287280"
  },
  {
    "text": "automatically determine who should be",
    "start": "287280",
    "end": "288840"
  },
  {
    "text": "allowed to talk to whom that's really",
    "start": "288840",
    "end": "290940"
  },
  {
    "text": "something that has to be configured",
    "start": "290940",
    "end": "292259"
  },
  {
    "text": "because only the people operating the",
    "start": "292259",
    "end": "294419"
  },
  {
    "text": "the cluster know what that behavior is",
    "start": "294419",
    "end": "296100"
  },
  {
    "text": "supposed to be",
    "start": "296100",
    "end": "297600"
  },
  {
    "text": "uh",
    "start": "297600",
    "end": "299100"
  },
  {
    "text": "and so you know this beginning the",
    "start": "299100",
    "end": "300840"
  },
  {
    "text": "thought this began the thought process",
    "start": "300840",
    "end": "302520"
  },
  {
    "text": "of how should we how should where should",
    "start": "302520",
    "end": "304500"
  },
  {
    "text": "we put this configuration",
    "start": "304500",
    "end": "306960"
  },
  {
    "text": "and you know a natural place to put that",
    "start": "306960",
    "end": "309240"
  },
  {
    "text": "configuration would be on the service",
    "start": "309240",
    "end": "311040"
  },
  {
    "text": "right we think about services in",
    "start": "311040",
    "end": "312600"
  },
  {
    "text": "kubernetes we think hey I want to",
    "start": "312600",
    "end": "315440"
  },
  {
    "text": "restrict access to this service to only",
    "start": "315440",
    "end": "317880"
  },
  {
    "text": "certain identities so that seems like a",
    "start": "317880",
    "end": "320100"
  },
  {
    "text": "natural place to put that configuration",
    "start": "320100",
    "end": "321960"
  },
  {
    "text": "to somehow attach that authorization",
    "start": "321960",
    "end": "323639"
  },
  {
    "text": "policy onto a service",
    "start": "323639",
    "end": "325740"
  },
  {
    "text": "but as we kind of got into this what we",
    "start": "325740",
    "end": "327780"
  },
  {
    "text": "realized is that service might not",
    "start": "327780",
    "end": "329280"
  },
  {
    "text": "actually be the best place for this",
    "start": "329280",
    "end": "331259"
  },
  {
    "text": "and the reason that is is because when",
    "start": "331259",
    "end": "334440"
  },
  {
    "text": "you think of service there's actually",
    "start": "334440",
    "end": "335520"
  },
  {
    "text": "kind of two concepts that are there",
    "start": "335520",
    "end": "337440"
  },
  {
    "text": "sometimes co-mingled there",
    "start": "337440",
    "end": "339840"
  },
  {
    "text": "um I think the Gateway API kind of",
    "start": "339840",
    "end": "341820"
  },
  {
    "text": "refers to them as service front ends and",
    "start": "341820",
    "end": "343380"
  },
  {
    "text": "service backends I like to think of them",
    "start": "343380",
    "end": "345419"
  },
  {
    "text": "as service targets and service receivers",
    "start": "345419",
    "end": "347639"
  },
  {
    "text": "and so what I mean by this is that the",
    "start": "347639",
    "end": "349740"
  },
  {
    "text": "service kind of have has two parts so",
    "start": "349740",
    "end": "351660"
  },
  {
    "text": "there's the service front end or the",
    "start": "351660",
    "end": "353100"
  },
  {
    "text": "service Target which is usually a",
    "start": "353100",
    "end": "355680"
  },
  {
    "text": "cluster IP or a DNS record and that is",
    "start": "355680",
    "end": "359220"
  },
  {
    "text": "something that a client sends traffic to",
    "start": "359220",
    "end": "360960"
  },
  {
    "text": "so it's a Target",
    "start": "360960",
    "end": "362880"
  },
  {
    "text": "on the other hand there's the place",
    "start": "362880",
    "end": "364380"
  },
  {
    "text": "where the traffic actually goes after it",
    "start": "364380",
    "end": "366600"
  },
  {
    "text": "is sent to that service so this is",
    "start": "366600",
    "end": "368280"
  },
  {
    "text": "usually a list of endpoints or a list of",
    "start": "368280",
    "end": "369720"
  },
  {
    "text": "PODS or a list of back ends these are",
    "start": "369720",
    "end": "372000"
  },
  {
    "text": "where the service goes or this is where",
    "start": "372000",
    "end": "373560"
  },
  {
    "text": "the traffic goes when you send it to",
    "start": "373560",
    "end": "374880"
  },
  {
    "text": "this service",
    "start": "374880",
    "end": "376199"
  },
  {
    "text": "and",
    "start": "376199",
    "end": "377820"
  },
  {
    "text": "a service object kind of co-mingles",
    "start": "377820",
    "end": "379380"
  },
  {
    "text": "those two concepts and if you wanted to",
    "start": "379380",
    "end": "381600"
  },
  {
    "text": "attach policy onto that",
    "start": "381600",
    "end": "383600"
  },
  {
    "text": "authorization policy you run into this",
    "start": "383600",
    "end": "386340"
  },
  {
    "text": "problem where you can have pods back-end",
    "start": "386340",
    "end": "388979"
  },
  {
    "text": "pods which are in multiple Services you",
    "start": "388979",
    "end": "392100"
  },
  {
    "text": "can have back-end pods which are not in",
    "start": "392100",
    "end": "393660"
  },
  {
    "text": "any service and so when a back-end pod",
    "start": "393660",
    "end": "395880"
  },
  {
    "text": "receives traffic it really doesn't know",
    "start": "395880",
    "end": "397560"
  },
  {
    "text": "which service was used which service was",
    "start": "397560",
    "end": "400139"
  },
  {
    "text": "targeted",
    "start": "400139",
    "end": "401240"
  },
  {
    "text": "to to send traffic to me",
    "start": "401240",
    "end": "404039"
  },
  {
    "text": "so in other words if we had",
    "start": "404039",
    "end": "405600"
  },
  {
    "text": "authorization policy attached to these",
    "start": "405600",
    "end": "407160"
  },
  {
    "text": "Services we wouldn't know which policy",
    "start": "407160",
    "end": "408720"
  },
  {
    "text": "to use",
    "start": "408720",
    "end": "409680"
  },
  {
    "text": "and furthermore if a client connected",
    "start": "409680",
    "end": "412800"
  },
  {
    "text": "directly to that Pod without using a",
    "start": "412800",
    "end": "414180"
  },
  {
    "text": "service does that mean that it should",
    "start": "414180",
    "end": "415259"
  },
  {
    "text": "bypass the authorization policy so of",
    "start": "415259",
    "end": "417960"
  },
  {
    "text": "course this doesn't make sense",
    "start": "417960",
    "end": "420860"
  },
  {
    "text": "so we had to come up with a different",
    "start": "422940",
    "end": "424380"
  },
  {
    "text": "resource to kind of encapsulate this",
    "start": "424380",
    "end": "426479"
  },
  {
    "text": "idea of a Traffic Receiver rather than",
    "start": "426479",
    "end": "430080"
  },
  {
    "text": "traffic Target in other words put this",
    "start": "430080",
    "end": "432780"
  },
  {
    "text": "authorization policy directly on the",
    "start": "432780",
    "end": "434639"
  },
  {
    "text": "service back end not on the service",
    "start": "434639",
    "end": "436680"
  },
  {
    "text": "front end",
    "start": "436680",
    "end": "438180"
  },
  {
    "text": "uh so we came up with these uh new",
    "start": "438180",
    "end": "441000"
  },
  {
    "text": "resources server and server",
    "start": "441000",
    "end": "442620"
  },
  {
    "text": "authorization and if we take a look at",
    "start": "442620",
    "end": "444720"
  },
  {
    "text": "what's here uh in the server resource",
    "start": "444720",
    "end": "447000"
  },
  {
    "text": "it's very very simple so there's just a",
    "start": "447000",
    "end": "448979"
  },
  {
    "text": "pod selector which selects which pods",
    "start": "448979",
    "end": "451560"
  },
  {
    "text": "this service refers to or This Server",
    "start": "451560",
    "end": "453599"
  },
  {
    "text": "I'm sorry this server refers to uh and a",
    "start": "453599",
    "end": "457440"
  },
  {
    "text": "port",
    "start": "457440",
    "end": "458639"
  },
  {
    "text": "and so this is another difference from",
    "start": "458639",
    "end": "461400"
  },
  {
    "text": "Services where a service can have many",
    "start": "461400",
    "end": "463500"
  },
  {
    "text": "ports defined and you can actually use a",
    "start": "463500",
    "end": "465240"
  },
  {
    "text": "service and Target a port that's not",
    "start": "465240",
    "end": "467520"
  },
  {
    "text": "defined on that service with a server",
    "start": "467520",
    "end": "470300"
  },
  {
    "text": "it's specifically talking about one",
    "start": "470300",
    "end": "472560"
  },
  {
    "text": "single port",
    "start": "472560",
    "end": "473759"
  },
  {
    "text": "and so this defines very specifically a",
    "start": "473759",
    "end": "476520"
  },
  {
    "text": "Traffic Receiver and so therefore we can",
    "start": "476520",
    "end": "479699"
  },
  {
    "text": "set authorization policy on that server",
    "start": "479699",
    "end": "483300"
  },
  {
    "text": "and we can say well for This Server here",
    "start": "483300",
    "end": "485160"
  },
  {
    "text": "are the clients who I want to authorize",
    "start": "485160",
    "end": "486720"
  },
  {
    "text": "uh who I think should be allowed to talk",
    "start": "486720",
    "end": "488880"
  },
  {
    "text": "to this server",
    "start": "488880",
    "end": "490620"
  },
  {
    "text": "and so that's what the server",
    "start": "490620",
    "end": "491759"
  },
  {
    "text": "authorization resources it's a resource",
    "start": "491759",
    "end": "494220"
  },
  {
    "text": "which you know selects which server it's",
    "start": "494220",
    "end": "495840"
  },
  {
    "text": "going to apply to and then it's going to",
    "start": "495840",
    "end": "497940"
  },
  {
    "text": "give a list of clients that are allowed",
    "start": "497940",
    "end": "499379"
  },
  {
    "text": "to connect to it and that list of",
    "start": "499379",
    "end": "501539"
  },
  {
    "text": "clients can be defined in a number of",
    "start": "501539",
    "end": "503819"
  },
  {
    "text": "ways you can say I'm going to allow",
    "start": "503819",
    "end": "505139"
  },
  {
    "text": "anyone just unauth attack on the",
    "start": "505139",
    "end": "508220"
  },
  {
    "text": "unauthenticated and and anyone's allowed",
    "start": "508220",
    "end": "511020"
  },
  {
    "text": "to connect to it or you can say anyone",
    "start": "511020",
    "end": "512880"
  },
  {
    "text": "as long as they're in the match and they",
    "start": "512880",
    "end": "514380"
  },
  {
    "text": "have a valid identity they're allowed or",
    "start": "514380",
    "end": "516360"
  },
  {
    "text": "you can restrict it down and say only",
    "start": "516360",
    "end": "518279"
  },
  {
    "text": "these certain identities are allowed",
    "start": "518279",
    "end": "521219"
  },
  {
    "text": "and so those two together uh make up the",
    "start": "521219",
    "end": "523620"
  },
  {
    "text": "liquidity authorization Primitives",
    "start": "523620",
    "end": "527420"
  },
  {
    "text": "so this is kind of taking a step back",
    "start": "528180",
    "end": "529680"
  },
  {
    "text": "what that kind of looks like so you see",
    "start": "529680",
    "end": "531540"
  },
  {
    "text": "on the right there there's the bar pod",
    "start": "531540",
    "end": "533580"
  },
  {
    "text": "and that's the one we're trying to",
    "start": "533580",
    "end": "534779"
  },
  {
    "text": "control access to",
    "start": "534779",
    "end": "536880"
  },
  {
    "text": "above it you can see that there's a",
    "start": "536880",
    "end": "538320"
  },
  {
    "text": "server that's defined for it which",
    "start": "538320",
    "end": "539760"
  },
  {
    "text": "selects a certain Port so in this case",
    "start": "539760",
    "end": "541380"
  },
  {
    "text": "we're just talking about port 80. and",
    "start": "541380",
    "end": "544080"
  },
  {
    "text": "then above that there's the server",
    "start": "544080",
    "end": "545880"
  },
  {
    "text": "authorization which says here are the",
    "start": "545880",
    "end": "547800"
  },
  {
    "text": "clients which are allowed to connect to",
    "start": "547800",
    "end": "549240"
  },
  {
    "text": "the server and in this case you know",
    "start": "549240",
    "end": "551160"
  },
  {
    "text": "we're only going to allow",
    "start": "551160",
    "end": "552920"
  },
  {
    "text": "mtls connections from uh from pods that",
    "start": "552920",
    "end": "556620"
  },
  {
    "text": "have the foo service account identity",
    "start": "556620",
    "end": "558839"
  },
  {
    "text": "and then so on the left hand of the",
    "start": "558839",
    "end": "560459"
  },
  {
    "text": "slide there you can see that on the top",
    "start": "560459",
    "end": "562260"
  },
  {
    "text": "there's the Bass POD which does not have",
    "start": "562260",
    "end": "563760"
  },
  {
    "text": "the right identity so it's not allowed",
    "start": "563760",
    "end": "565200"
  },
  {
    "text": "to connect and that connection will be",
    "start": "565200",
    "end": "566760"
  },
  {
    "text": "rejected by linkerty and then at the",
    "start": "566760",
    "end": "568860"
  },
  {
    "text": "bottom the fu pod which is allowed",
    "start": "568860",
    "end": "570120"
  },
  {
    "text": "because it does have the right identity",
    "start": "570120",
    "end": "571500"
  },
  {
    "text": "so it's allowed to connect",
    "start": "571500",
    "end": "574519"
  },
  {
    "text": "so what does this have to do with the",
    "start": "576300",
    "end": "577980"
  },
  {
    "text": "Gateway API",
    "start": "577980",
    "end": "579839"
  },
  {
    "text": "um",
    "start": "579839",
    "end": "580860"
  },
  {
    "text": "well let's give a little bit of an",
    "start": "580860",
    "end": "583260"
  },
  {
    "text": "overview of what the Gateway API is for",
    "start": "583260",
    "end": "585420"
  },
  {
    "text": "those who aren't familiar so the Gateway",
    "start": "585420",
    "end": "587100"
  },
  {
    "text": "API is this set of kubernetes resources",
    "start": "587100",
    "end": "589920"
  },
  {
    "text": "that are very useful for defining uh the",
    "start": "589920",
    "end": "593940"
  },
  {
    "text": "behavior of gateways and one of the kind",
    "start": "593940",
    "end": "596339"
  },
  {
    "text": "of key ideas here is that there are a",
    "start": "596339",
    "end": "598080"
  },
  {
    "text": "bunch of different resources which exist",
    "start": "598080",
    "end": "599459"
  },
  {
    "text": "at different layers and are owned by",
    "start": "599459",
    "end": "601260"
  },
  {
    "text": "different personas so at the top there",
    "start": "601260",
    "end": "603000"
  },
  {
    "text": "you see there's the Gateway class which",
    "start": "603000",
    "end": "604920"
  },
  {
    "text": "is a resource representing a type of",
    "start": "604920",
    "end": "607080"
  },
  {
    "text": "Ingress or type of Gateway rather",
    "start": "607080",
    "end": "609000"
  },
  {
    "text": "and then below that you have the Gateway",
    "start": "609000",
    "end": "611279"
  },
  {
    "text": "resources itself and so these might be",
    "start": "611279",
    "end": "613200"
  },
  {
    "text": "owned by by cluster operators",
    "start": "613200",
    "end": "615420"
  },
  {
    "text": "and then below that you've got HTTP",
    "start": "615420",
    "end": "617820"
  },
  {
    "text": "routes which can be owned by individual",
    "start": "617820",
    "end": "620339"
  },
  {
    "text": "application developers and those attach",
    "start": "620339",
    "end": "622320"
  },
  {
    "text": "up to the gateways and say here for this",
    "start": "622320",
    "end": "624000"
  },
  {
    "text": "route",
    "start": "624000",
    "end": "624800"
  },
  {
    "text": "I'd like to attach this to the Gateway",
    "start": "624800",
    "end": "627060"
  },
  {
    "text": "and if you get any traffic for this",
    "start": "627060",
    "end": "628440"
  },
  {
    "text": "route please send it to the service",
    "start": "628440",
    "end": "629660"
  },
  {
    "text": "here's another route if you get any",
    "start": "629660",
    "end": "631620"
  },
  {
    "text": "traffic for this route please send it to",
    "start": "631620",
    "end": "632940"
  },
  {
    "text": "this other service",
    "start": "632940",
    "end": "634680"
  },
  {
    "text": "and so there's kind of some cool ideas",
    "start": "634680",
    "end": "636540"
  },
  {
    "text": "in here this idea that you can have",
    "start": "636540",
    "end": "638459"
  },
  {
    "text": "these resources at different layers",
    "start": "638459",
    "end": "640019"
  },
  {
    "text": "which kind of attach up to each other",
    "start": "640019",
    "end": "641700"
  },
  {
    "text": "and that they can be owned by different",
    "start": "641700",
    "end": "643920"
  },
  {
    "text": "personas",
    "start": "643920",
    "end": "646579"
  },
  {
    "text": "uh so this is kind of how that looks uh",
    "start": "648440",
    "end": "651839"
  },
  {
    "text": "as an Ingress is as English traffic is",
    "start": "651839",
    "end": "654959"
  },
  {
    "text": "coming in you know that traffic first",
    "start": "654959",
    "end": "656459"
  },
  {
    "text": "goes to the Gateway and then it's going",
    "start": "656459",
    "end": "658560"
  },
  {
    "text": "to look and see which HTTP routes it has",
    "start": "658560",
    "end": "660480"
  },
  {
    "text": "attached to it and whichever route",
    "start": "660480",
    "end": "662880"
  },
  {
    "text": "matches that traffic uh it's going to",
    "start": "662880",
    "end": "665700"
  },
  {
    "text": "determine where that request is going to",
    "start": "665700",
    "end": "667140"
  },
  {
    "text": "go to",
    "start": "667140",
    "end": "669440"
  },
  {
    "text": "so what does this have to do with",
    "start": "671220",
    "end": "672779"
  },
  {
    "text": "service measures and how is this useful",
    "start": "672779",
    "end": "673980"
  },
  {
    "text": "so this is all kind of to do with",
    "start": "673980",
    "end": "675120"
  },
  {
    "text": "Ingress uh which is not something that",
    "start": "675120",
    "end": "677399"
  },
  {
    "text": "Linker D really does right now Linker D",
    "start": "677399",
    "end": "679920"
  },
  {
    "text": "is more interested in managing East-West",
    "start": "679920",
    "end": "682800"
  },
  {
    "text": "service to service traffic within the",
    "start": "682800",
    "end": "684600"
  },
  {
    "text": "cluster so so how does this apply",
    "start": "684600",
    "end": "688680"
  },
  {
    "text": "um",
    "start": "688680",
    "end": "689519"
  },
  {
    "text": "and if you take a look at the structure",
    "start": "689519",
    "end": "691380"
  },
  {
    "text": "of the HCR resource there's a few kind",
    "start": "691380",
    "end": "694260"
  },
  {
    "text": "of interesting parts to it",
    "start": "694260",
    "end": "695820"
  },
  {
    "text": "so on the top right you'll see there's a",
    "start": "695820",
    "end": "697380"
  },
  {
    "text": "apparent ref on an HTTP route and this",
    "start": "697380",
    "end": "699720"
  },
  {
    "text": "is kind of describes what that route",
    "start": "699720",
    "end": "701820"
  },
  {
    "text": "attaches to so in all of the Ingress",
    "start": "701820",
    "end": "704300"
  },
  {
    "text": "cases we had that attaching up to a",
    "start": "704300",
    "end": "706560"
  },
  {
    "text": "Gateway but you could imagine that",
    "start": "706560",
    "end": "708660"
  },
  {
    "text": "attaching to someone else something else",
    "start": "708660",
    "end": "710220"
  },
  {
    "text": "you could imagine having an HTTP route",
    "start": "710220",
    "end": "712140"
  },
  {
    "text": "which is attached to a server or a",
    "start": "712140",
    "end": "714120"
  },
  {
    "text": "service in your cluster and a defining",
    "start": "714120",
    "end": "716940"
  },
  {
    "text": "policy for service mesh traffic rather",
    "start": "716940",
    "end": "720480"
  },
  {
    "text": "than for Ingress traffic",
    "start": "720480",
    "end": "723300"
  },
  {
    "text": "um and then down at the bottom you see",
    "start": "723300",
    "end": "724800"
  },
  {
    "text": "that it's kind of made up of two parts",
    "start": "724800",
    "end": "726180"
  },
  {
    "text": "down there there's the match which",
    "start": "726180",
    "end": "728279"
  },
  {
    "text": "defines what kind of traffic is going to",
    "start": "728279",
    "end": "730560"
  },
  {
    "text": "match that rule so that's usually a path",
    "start": "730560",
    "end": "733860"
  },
  {
    "text": "either path based matching or header",
    "start": "733860",
    "end": "735540"
  },
  {
    "text": "based matching or a combination",
    "start": "735540",
    "end": "738180"
  },
  {
    "text": "and then on the right you have the",
    "start": "738180",
    "end": "739920"
  },
  {
    "text": "behaviors that should be taken for",
    "start": "739920",
    "end": "742260"
  },
  {
    "text": "traffic which matches that route so",
    "start": "742260",
    "end": "744000"
  },
  {
    "text": "either a set of filters that that apply",
    "start": "744000",
    "end": "746459"
  },
  {
    "text": "some logic or some back end refs that",
    "start": "746459",
    "end": "749279"
  },
  {
    "text": "indicate where that traffic should go",
    "start": "749279",
    "end": "752720"
  },
  {
    "text": "and so this is kind of an example of",
    "start": "753060",
    "end": "754800"
  },
  {
    "text": "what that spec might look like in yaml",
    "start": "754800",
    "end": "759320"
  },
  {
    "text": "and so the the kind of idea that we",
    "start": "759660",
    "end": "762000"
  },
  {
    "text": "really latched onto here which we",
    "start": "762000",
    "end": "763320"
  },
  {
    "text": "thought was really interesting is well",
    "start": "763320",
    "end": "764399"
  },
  {
    "text": "one this gives us a way to talk about",
    "start": "764399",
    "end": "765720"
  },
  {
    "text": "routes which allows us to specify policy",
    "start": "765720",
    "end": "768899"
  },
  {
    "text": "in a more fine-grained way it means that",
    "start": "768899",
    "end": "771060"
  },
  {
    "text": "when we're talking about authorization",
    "start": "771060",
    "end": "772200"
  },
  {
    "text": "policy we don't have to authorize an",
    "start": "772200",
    "end": "773940"
  },
  {
    "text": "entire server and say for This Server",
    "start": "773940",
    "end": "775680"
  },
  {
    "text": "you know here are the clients that are",
    "start": "775680",
    "end": "777180"
  },
  {
    "text": "allowed to talk to it we can be a little",
    "start": "777180",
    "end": "779220"
  },
  {
    "text": "bit more specific and say well we",
    "start": "779220",
    "end": "780660"
  },
  {
    "text": "actually only want to authorize these",
    "start": "780660",
    "end": "782040"
  },
  {
    "text": "clients for this route on This Server we",
    "start": "782040",
    "end": "784380"
  },
  {
    "text": "want to say that if for example you have",
    "start": "784380",
    "end": "786440"
  },
  {
    "text": "a an admin server you might want",
    "start": "786440",
    "end": "789779"
  },
  {
    "text": "unauthenticated access to the liveness",
    "start": "789779",
    "end": "792120"
  },
  {
    "text": "and Readiness probe endpoints because",
    "start": "792120",
    "end": "794040"
  },
  {
    "text": "that's going to be hit by the kublet",
    "start": "794040",
    "end": "795959"
  },
  {
    "text": "uh you might want to make sure that",
    "start": "795959",
    "end": "797760"
  },
  {
    "text": "Prometheus has access to scrape the",
    "start": "797760",
    "end": "799680"
  },
  {
    "text": "metrics endpoint you might want to",
    "start": "799680",
    "end": "802079"
  },
  {
    "text": "further lock down other endpoints that",
    "start": "802079",
    "end": "804180"
  },
  {
    "text": "are let people do administrative tasks",
    "start": "804180",
    "end": "806220"
  },
  {
    "text": "and make sure that those are only",
    "start": "806220",
    "end": "807420"
  },
  {
    "text": "accessible to you know people who really",
    "start": "807420",
    "end": "809700"
  },
  {
    "text": "should have access to them or service",
    "start": "809700",
    "end": "811920"
  },
  {
    "text": "accounts that should really have access",
    "start": "811920",
    "end": "813060"
  },
  {
    "text": "to them",
    "start": "813060",
    "end": "815220"
  },
  {
    "text": "um and the other interesting thing here",
    "start": "815220",
    "end": "816660"
  },
  {
    "text": "is that this gives us a way to kind of",
    "start": "816660",
    "end": "818339"
  },
  {
    "text": "attach not just authorization policies",
    "start": "818339",
    "end": "820740"
  },
  {
    "text": "but other potentially other kinds of",
    "start": "820740",
    "end": "822600"
  },
  {
    "text": "policies as well onto these onto these",
    "start": "822600",
    "end": "824760"
  },
  {
    "text": "resources",
    "start": "824760",
    "end": "827180"
  },
  {
    "text": "uh so this is kind of the structure that",
    "start": "830540",
    "end": "833160"
  },
  {
    "text": "that uh was informed by that in Lincoln",
    "start": "833160",
    "end": "836100"
  },
  {
    "text": "uh",
    "start": "836100",
    "end": "838380"
  },
  {
    "text": "we adopted the HTV route type from the",
    "start": "838380",
    "end": "841620"
  },
  {
    "text": "from the Gateway API we had to modify it",
    "start": "841620",
    "end": "843839"
  },
  {
    "text": "a little bit in order to fit our",
    "start": "843839",
    "end": "845579"
  },
  {
    "text": "purposes but",
    "start": "845579",
    "end": "847200"
  },
  {
    "text": "um",
    "start": "847200",
    "end": "847800"
  },
  {
    "text": "we now have support for HTTP routes and",
    "start": "847800",
    "end": "851160"
  },
  {
    "text": "those can attach on to uh servers so",
    "start": "851160",
    "end": "854639"
  },
  {
    "text": "that you can authorize uh you can",
    "start": "854639",
    "end": "857220"
  },
  {
    "text": "authorize routes rather than authorizing",
    "start": "857220",
    "end": "858959"
  },
  {
    "text": "an entire service so it gives you that",
    "start": "858959",
    "end": "860220"
  },
  {
    "text": "that more fine-grained control",
    "start": "860220",
    "end": "862760"
  },
  {
    "text": "and we also made this a little bit more",
    "start": "862760",
    "end": "864959"
  },
  {
    "text": "generic so that when you have an",
    "start": "864959",
    "end": "866160"
  },
  {
    "text": "authorization policy that can kind of",
    "start": "866160",
    "end": "868920"
  },
  {
    "text": "Target a wide range of different",
    "start": "868920",
    "end": "870959"
  },
  {
    "text": "resources depending on how granular you",
    "start": "870959",
    "end": "872880"
  },
  {
    "text": "want that authorization to be so you can",
    "start": "872880",
    "end": "874740"
  },
  {
    "text": "authorize access to an entire namespace",
    "start": "874740",
    "end": "876540"
  },
  {
    "text": "just to a specific resource or even more",
    "start": "876540",
    "end": "881160"
  },
  {
    "text": "specifically to a specific route",
    "start": "881160",
    "end": "884360"
  },
  {
    "text": "and so this was added in liquidity 212",
    "start": "884699",
    "end": "886680"
  },
  {
    "text": "which was released fairly recently so we",
    "start": "886680",
    "end": "889019"
  },
  {
    "text": "now have much more granular support for",
    "start": "889019",
    "end": "891360"
  },
  {
    "text": "uh the way you can do server",
    "start": "891360",
    "end": "893279"
  },
  {
    "text": "authorization",
    "start": "893279",
    "end": "895880"
  },
  {
    "text": "okay so looking to the Future what",
    "start": "899040",
    "end": "900839"
  },
  {
    "text": "what's coming next",
    "start": "900839",
    "end": "903620"
  },
  {
    "text": "uh so if anyone is kind of familiar with",
    "start": "903779",
    "end": "906959"
  },
  {
    "text": "uh some of the more advanced features in",
    "start": "906959",
    "end": "909120"
  },
  {
    "text": "Lincoln one of them is called service",
    "start": "909120",
    "end": "910320"
  },
  {
    "text": "profiles and so service profiles are a",
    "start": "910320",
    "end": "913199"
  },
  {
    "text": "feature we have in Linker D that allow",
    "start": "913199",
    "end": "915000"
  },
  {
    "text": "you to configure things like retries",
    "start": "915000",
    "end": "916920"
  },
  {
    "text": "retry budgets timeouts and do that kind",
    "start": "916920",
    "end": "921360"
  },
  {
    "text": "of on a per route uh in a per route way",
    "start": "921360",
    "end": "923579"
  },
  {
    "text": "so you can say these routes are",
    "start": "923579",
    "end": "924480"
  },
  {
    "text": "retrievable these routes have timeouts",
    "start": "924480",
    "end": "927060"
  },
  {
    "text": "um",
    "start": "927060",
    "end": "928079"
  },
  {
    "text": "and that's going to sound pretty similar",
    "start": "928079",
    "end": "930779"
  },
  {
    "text": "to the the stuff that we've been talking",
    "start": "930779",
    "end": "932100"
  },
  {
    "text": "about earlier which is attaching policy",
    "start": "932100",
    "end": "934380"
  },
  {
    "text": "onto HTTP routes defined in the Gateway",
    "start": "934380",
    "end": "936839"
  },
  {
    "text": "API so these are kind of two parallel",
    "start": "936839",
    "end": "939000"
  },
  {
    "text": "ways of doing the same thing and we want",
    "start": "939000",
    "end": "941760"
  },
  {
    "text": "to kind of slowly unify that and move",
    "start": "941760",
    "end": "944519"
  },
  {
    "text": "away from service profiles and move more",
    "start": "944519",
    "end": "946620"
  },
  {
    "text": "towards this Gateway API style approach",
    "start": "946620",
    "end": "949139"
  },
  {
    "text": "of policy attachment where you can have",
    "start": "949139",
    "end": "951540"
  },
  {
    "text": "resources which represent policies like",
    "start": "951540",
    "end": "953639"
  },
  {
    "text": "you know retryability or timeouts or",
    "start": "953639",
    "end": "956820"
  },
  {
    "text": "authorization",
    "start": "956820",
    "end": "958139"
  },
  {
    "text": "and you can attach those policies onto",
    "start": "958139",
    "end": "960540"
  },
  {
    "text": "HTTP routes",
    "start": "960540",
    "end": "962339"
  },
  {
    "text": "and this gives us a much uh more an",
    "start": "962339",
    "end": "966420"
  },
  {
    "text": "approach that's a lot more consistent",
    "start": "966420",
    "end": "967740"
  },
  {
    "text": "with the way things are done in the",
    "start": "967740",
    "end": "969120"
  },
  {
    "text": "Gateway API and feels more kubernetes",
    "start": "969120",
    "end": "971220"
  },
  {
    "text": "native than what we had before",
    "start": "971220",
    "end": "974600"
  },
  {
    "text": "so so why are we doing this what what is",
    "start": "978480",
    "end": "981000"
  },
  {
    "text": "the purpose of adopting the Gateway API",
    "start": "981000",
    "end": "982639"
  },
  {
    "text": "I think there's a few reasons why the",
    "start": "982639",
    "end": "985320"
  },
  {
    "text": "Gateway API is really interesting for",
    "start": "985320",
    "end": "986940"
  },
  {
    "text": "defining these types of things",
    "start": "986940",
    "end": "989000"
  },
  {
    "text": "one of the primary ones is that these",
    "start": "989000",
    "end": "991740"
  },
  {
    "text": "Gateway API types give us a standard way",
    "start": "991740",
    "end": "994139"
  },
  {
    "text": "to define this rather than having to",
    "start": "994139",
    "end": "995639"
  },
  {
    "text": "come up with these new structures or new",
    "start": "995639",
    "end": "997380"
  },
  {
    "text": "types ourselves so rather than needing",
    "start": "997380",
    "end": "999480"
  },
  {
    "text": "to maintain our own version of HTTP",
    "start": "999480",
    "end": "1003860"
  },
  {
    "text": "router or route we can rely on what",
    "start": "1003860",
    "end": "1006440"
  },
  {
    "text": "already exists in the Gateway API and",
    "start": "1006440",
    "end": "1008779"
  },
  {
    "text": "that can kind of be maintained",
    "start": "1008779",
    "end": "1009860"
  },
  {
    "text": "independently of our of of linker D and",
    "start": "1009860",
    "end": "1013160"
  },
  {
    "text": "and we know that it's um",
    "start": "1013160",
    "end": "1015320"
  },
  {
    "text": "you know it's going to be kept up to",
    "start": "1015320",
    "end": "1017180"
  },
  {
    "text": "date",
    "start": "1017180",
    "end": "1018560"
  },
  {
    "text": "um so that's a lot easier for us as",
    "start": "1018560",
    "end": "1019940"
  },
  {
    "text": "maintainers it's a lot also a lot easier",
    "start": "1019940",
    "end": "1022100"
  },
  {
    "text": "for adopters who are looking to use",
    "start": "1022100",
    "end": "1024500"
  },
  {
    "text": "these technologies that means that if",
    "start": "1024500",
    "end": "1026418"
  },
  {
    "text": "they are familiar with the Gateway API",
    "start": "1026419",
    "end": "1027980"
  },
  {
    "text": "they've learned kubernetes and they're",
    "start": "1027980",
    "end": "1029600"
  },
  {
    "text": "trying to adopt Linker D they don't have",
    "start": "1029600",
    "end": "1030980"
  },
  {
    "text": "to go and learn an entirely new set of",
    "start": "1030980",
    "end": "1032780"
  },
  {
    "text": "apis on an entirely new set of resources",
    "start": "1032780",
    "end": "1034640"
  },
  {
    "text": "an entirely new set of Concepts they can",
    "start": "1034640",
    "end": "1037280"
  },
  {
    "text": "just use what they already know and it",
    "start": "1037280",
    "end": "1039620"
  },
  {
    "text": "should feel intuitive and natural",
    "start": "1039620",
    "end": "1042860"
  },
  {
    "text": "and the Gateway API is just a",
    "start": "1042860",
    "end": "1045079"
  },
  {
    "text": "well-designed API it's very well thought",
    "start": "1045079",
    "end": "1046880"
  },
  {
    "text": "out it's got extensibility points built",
    "start": "1046880",
    "end": "1049820"
  },
  {
    "text": "into it in places that make sense and",
    "start": "1049820",
    "end": "1052480"
  },
  {
    "text": "it's it's really nice to work with it's",
    "start": "1052480",
    "end": "1055039"
  },
  {
    "text": "very intuitive",
    "start": "1055039",
    "end": "1057639"
  },
  {
    "text": "um the cons of adopting the Gateway API",
    "start": "1060679",
    "end": "1063080"
  },
  {
    "text": "are that it's it's still fairly new and",
    "start": "1063080",
    "end": "1065299"
  },
  {
    "text": "it's still kind of evolving a little bit",
    "start": "1065299",
    "end": "1067880"
  },
  {
    "text": "um so there may be still things that we",
    "start": "1067880",
    "end": "1069380"
  },
  {
    "text": "don't know or that we discover over time",
    "start": "1069380",
    "end": "1070760"
  },
  {
    "text": "and there's always a possibility for API",
    "start": "1070760",
    "end": "1073039"
  },
  {
    "text": "churn as it continues to mature but I",
    "start": "1073039",
    "end": "1075500"
  },
  {
    "text": "think being part of that conversation",
    "start": "1075500",
    "end": "1077179"
  },
  {
    "text": "and uh and adopting it now I think makes",
    "start": "1077179",
    "end": "1079640"
  },
  {
    "text": "a lot of sense for the project so I'm",
    "start": "1079640",
    "end": "1081200"
  },
  {
    "text": "very excited to see where it goes",
    "start": "1081200",
    "end": "1084700"
  },
  {
    "text": "and in fact you know the Gateway API was",
    "start": "1085400",
    "end": "1088100"
  },
  {
    "text": "originally intended to be used for",
    "start": "1088100",
    "end": "1090260"
  },
  {
    "text": "gateways but there's a initiative called",
    "start": "1090260",
    "end": "1092960"
  },
  {
    "text": "gamma which stands for the Gateway API",
    "start": "1092960",
    "end": "1094880"
  },
  {
    "text": "for mesh management and administration",
    "start": "1094880",
    "end": "1096620"
  },
  {
    "text": "which is working through how the Gateway",
    "start": "1096620",
    "end": "1099140"
  },
  {
    "text": "API should be evolved",
    "start": "1099140",
    "end": "1101260"
  },
  {
    "text": "to accommodate service mesh use cases",
    "start": "1101260",
    "end": "1105919"
  },
  {
    "text": "so we're very involved in these",
    "start": "1105919",
    "end": "1107600"
  },
  {
    "text": "discussions if this is something that's",
    "start": "1107600",
    "end": "1108860"
  },
  {
    "text": "of interest to you I highly recommend",
    "start": "1108860",
    "end": "1110299"
  },
  {
    "text": "that you get involved as well",
    "start": "1110299",
    "end": "1112280"
  },
  {
    "text": "um and kind of as this can these",
    "start": "1112280",
    "end": "1114380"
  },
  {
    "text": "discussions continue to happen and we",
    "start": "1114380",
    "end": "1115880"
  },
  {
    "text": "continue to uh work on this you know",
    "start": "1115880",
    "end": "1118820"
  },
  {
    "text": "we're going to be at the Forefront of of",
    "start": "1118820",
    "end": "1120380"
  },
  {
    "text": "supporting whatever gamma recommends uh",
    "start": "1120380",
    "end": "1123380"
  },
  {
    "text": "for uh using the the Gateway API in a",
    "start": "1123380",
    "end": "1126200"
  },
  {
    "text": "service mesh concept context",
    "start": "1126200",
    "end": "1129760"
  },
  {
    "text": "okay so what are the main ideas here uh",
    "start": "1132500",
    "end": "1136100"
  },
  {
    "text": "I think the main things we learned from",
    "start": "1136100",
    "end": "1137900"
  },
  {
    "text": "from kind of working with the Gateway",
    "start": "1137900",
    "end": "1139340"
  },
  {
    "text": "API and uh and and and trying to adopt",
    "start": "1139340",
    "end": "1144200"
  },
  {
    "text": "it and use it for for likerty is that",
    "start": "1144200",
    "end": "1146539"
  },
  {
    "text": "this difference between traffic front",
    "start": "1146539",
    "end": "1147980"
  },
  {
    "text": "ends and traffic back or service service",
    "start": "1147980",
    "end": "1149419"
  },
  {
    "text": "front ends and service backends was",
    "start": "1149419",
    "end": "1151460"
  },
  {
    "text": "really important you know trying to",
    "start": "1151460",
    "end": "1153620"
  },
  {
    "text": "reason about the difference between a",
    "start": "1153620",
    "end": "1155960"
  },
  {
    "text": "traffic Target you know in the case of a",
    "start": "1155960",
    "end": "1157820"
  },
  {
    "text": "service this is something like a cluster",
    "start": "1157820",
    "end": "1159620"
  },
  {
    "text": "IP or or a DNS record and a traffic",
    "start": "1159620",
    "end": "1162440"
  },
  {
    "text": "backend a receiver which is the actual",
    "start": "1162440",
    "end": "1164419"
  },
  {
    "text": "endpoint or pod that's receiving that",
    "start": "1164419",
    "end": "1166160"
  },
  {
    "text": "traffic it is really important to keep",
    "start": "1166160",
    "end": "1168140"
  },
  {
    "text": "that that difference uh distinct in your",
    "start": "1168140",
    "end": "1170900"
  },
  {
    "text": "head otherwise things can get very very",
    "start": "1170900",
    "end": "1173059"
  },
  {
    "text": "muddy and I think the Gateway API does a",
    "start": "1173059",
    "end": "1174860"
  },
  {
    "text": "really good job of of calling out that",
    "start": "1174860",
    "end": "1176480"
  },
  {
    "text": "difference explicitly",
    "start": "1176480",
    "end": "1179120"
  },
  {
    "text": "um you know the other idea that we",
    "start": "1179120",
    "end": "1180799"
  },
  {
    "text": "really wanted to to lean into is to not",
    "start": "1180799",
    "end": "1182780"
  },
  {
    "text": "reinvent the wheel we wanted to use the",
    "start": "1182780",
    "end": "1184280"
  },
  {
    "text": "Gateway apis uh because they made sense",
    "start": "1184280",
    "end": "1186559"
  },
  {
    "text": "for us and it didn't make sense for us",
    "start": "1186559",
    "end": "1188660"
  },
  {
    "text": "to just kind of come up with those apis",
    "start": "1188660",
    "end": "1190820"
  },
  {
    "text": "on our own when we could be engaging in",
    "start": "1190820",
    "end": "1192440"
  },
  {
    "text": "the community and kind of playing nice",
    "start": "1192440",
    "end": "1194000"
  },
  {
    "text": "in the ecosystem",
    "start": "1194000",
    "end": "1195980"
  },
  {
    "text": "uh and this policy attachment idea from",
    "start": "1195980",
    "end": "1198440"
  },
  {
    "text": "from the Gateway API where you can have",
    "start": "1198440",
    "end": "1200000"
  },
  {
    "text": "these policy resources that represent",
    "start": "1200000",
    "end": "1202160"
  },
  {
    "text": "you know things like client-side policy",
    "start": "1202160",
    "end": "1204080"
  },
  {
    "text": "like authorization like um like uh",
    "start": "1204080",
    "end": "1206539"
  },
  {
    "text": "routing or or circuit breaking or",
    "start": "1206539",
    "end": "1209059"
  },
  {
    "text": "retries or timeouts or server",
    "start": "1209059",
    "end": "1211520"
  },
  {
    "text": "authorization and having those attach",
    "start": "1211520",
    "end": "1213919"
  },
  {
    "text": "onto HTTP routes or onto higher level",
    "start": "1213919",
    "end": "1217100"
  },
  {
    "text": "resources is a really nice framework and",
    "start": "1217100",
    "end": "1219860"
  },
  {
    "text": "it makes a lot of sense for it for",
    "start": "1219860",
    "end": "1221419"
  },
  {
    "text": "gateways and it also makes a lot of",
    "start": "1221419",
    "end": "1222860"
  },
  {
    "text": "sense for meshes",
    "start": "1222860",
    "end": "1225080"
  },
  {
    "text": "and so we wanted to kind of lean into",
    "start": "1225080",
    "end": "1226700"
  },
  {
    "text": "that",
    "start": "1226700",
    "end": "1228940"
  },
  {
    "text": "uh so if you're interested in kind of",
    "start": "1230240",
    "end": "1231799"
  },
  {
    "text": "learning more uh kind of diving deeper",
    "start": "1231799",
    "end": "1234200"
  },
  {
    "text": "into a lot of these Concepts around uh",
    "start": "1234200",
    "end": "1236900"
  },
  {
    "text": "the way that lingardy uses the Gateway",
    "start": "1236900",
    "end": "1238640"
  },
  {
    "text": "API or other Deep dive link ready",
    "start": "1238640",
    "end": "1240799"
  },
  {
    "text": "Concepts uh there is a service mesh",
    "start": "1240799",
    "end": "1242900"
  },
  {
    "text": "Academy that I can highly recommend uh",
    "start": "1242900",
    "end": "1245720"
  },
  {
    "text": "it is a monthly Hands-On uh training",
    "start": "1245720",
    "end": "1248960"
  },
  {
    "text": "their next one looks like it's from",
    "start": "1248960",
    "end": "1251000"
  },
  {
    "text": "November 11th to 17th and if that is of",
    "start": "1251000",
    "end": "1254059"
  },
  {
    "text": "interest to you I highly recommend you",
    "start": "1254059",
    "end": "1255500"
  },
  {
    "text": "check it out you can check it out at",
    "start": "1255500",
    "end": "1257660"
  },
  {
    "text": "buoyant.io SMA",
    "start": "1257660",
    "end": "1260059"
  },
  {
    "text": "service mesh Academy",
    "start": "1260059",
    "end": "1263020"
  },
  {
    "text": "and if you're interested in kind of",
    "start": "1263840",
    "end": "1265580"
  },
  {
    "text": "running Lincoln d uh but taking some of",
    "start": "1265580",
    "end": "1267799"
  },
  {
    "text": "the administrative burden off there's",
    "start": "1267799",
    "end": "1270200"
  },
  {
    "text": "also a fully managed Linker D which uh",
    "start": "1270200",
    "end": "1273080"
  },
  {
    "text": "is called buoyant cloud and it can",
    "start": "1273080",
    "end": "1274940"
  },
  {
    "text": "handle things like automated upgrades",
    "start": "1274940",
    "end": "1276820"
  },
  {
    "text": "version tracking certificate rotation",
    "start": "1276820",
    "end": "1280160"
  },
  {
    "text": "and a bunch of other administrative",
    "start": "1280160",
    "end": "1281720"
  },
  {
    "text": "tasks that would otherwise fall to the",
    "start": "1281720",
    "end": "1284900"
  },
  {
    "text": "cluster administrator so if that's of",
    "start": "1284900",
    "end": "1287299"
  },
  {
    "text": "Interest I highly recommend you check",
    "start": "1287299",
    "end": "1288500"
  },
  {
    "text": "that out as well",
    "start": "1288500",
    "end": "1291080"
  },
  {
    "text": "and I also want to shout out once again",
    "start": "1291080",
    "end": "1293419"
  },
  {
    "text": "this is talk is by my colleague mate he",
    "start": "1293419",
    "end": "1296299"
  },
  {
    "text": "did a really good job with it if you",
    "start": "1296299",
    "end": "1298100"
  },
  {
    "text": "liked this talk please make sure you",
    "start": "1298100",
    "end": "1300200"
  },
  {
    "text": "contact him on on slack or on on Twitter",
    "start": "1300200",
    "end": "1303320"
  },
  {
    "text": "and let them know I can't take credit",
    "start": "1303320",
    "end": "1306260"
  },
  {
    "text": "um but other than that thanks for",
    "start": "1306260",
    "end": "1307760"
  },
  {
    "text": "listening and happy to take any",
    "start": "1307760",
    "end": "1308960"
  },
  {
    "text": "questions",
    "start": "1308960",
    "end": "1310640"
  },
  {
    "text": "foreign",
    "start": "1310640",
    "end": "1313330"
  },
  {
    "text": "[Applause]",
    "start": "1313330",
    "end": "1318109"
  },
  {
    "text": "one of the cons is you know Ingress is",
    "start": "1329260",
    "end": "1333020"
  },
  {
    "text": "it a replacement for your Ingress or can",
    "start": "1333020",
    "end": "1334820"
  },
  {
    "text": "it complement your Ingress like a",
    "start": "1334820",
    "end": "1336440"
  },
  {
    "text": "traffic",
    "start": "1336440",
    "end": "1337400"
  },
  {
    "text": "it complements hearing risk so there's",
    "start": "1337400",
    "end": "1339200"
  },
  {
    "text": "kind of you know your Ingress may be",
    "start": "1339200",
    "end": "1340940"
  },
  {
    "text": "using the Gateway API but we are also",
    "start": "1340940",
    "end": "1342980"
  },
  {
    "text": "using the Gateway API for for East-West",
    "start": "1342980",
    "end": "1345679"
  },
  {
    "text": "traffic inside the inside the cluster",
    "start": "1345679",
    "end": "1347900"
  },
  {
    "text": "awesome thank you",
    "start": "1347900",
    "end": "1350679"
  },
  {
    "text": "staying with the cons for a moment um so",
    "start": "1356900",
    "end": "1359659"
  },
  {
    "text": "the other con you talked about was that",
    "start": "1359659",
    "end": "1361400"
  },
  {
    "text": "the Gateway API is kind of new",
    "start": "1361400",
    "end": "1363860"
  },
  {
    "text": "um especially with",
    "start": "1363860",
    "end": "1366020"
  },
  {
    "text": "um working with a service mesh so we",
    "start": "1366020",
    "end": "1368900"
  },
  {
    "text": "don't have a service mesh yet we have",
    "start": "1368900",
    "end": "1370220"
  },
  {
    "text": "ingresses that are Kong and I understand",
    "start": "1370220",
    "end": "1371659"
  },
  {
    "text": "Kong can work with the Gateway API so",
    "start": "1371659",
    "end": "1374659"
  },
  {
    "text": "if I go back to my team and say okay",
    "start": "1374659",
    "end": "1377120"
  },
  {
    "text": "let's let's start using the Gateway API",
    "start": "1377120",
    "end": "1378980"
  },
  {
    "text": "for our Kong stuff and now we can start",
    "start": "1378980",
    "end": "1381980"
  },
  {
    "text": "sort of getting into using Linker D",
    "start": "1381980",
    "end": "1384260"
  },
  {
    "text": "through Gateway API as well am I jumping",
    "start": "1384260",
    "end": "1387320"
  },
  {
    "text": "the gun is this production ready or is",
    "start": "1387320",
    "end": "1389539"
  },
  {
    "text": "it too early to be thinking that way",
    "start": "1389539",
    "end": "1392480"
  },
  {
    "text": "no I don't think you're jumping the gun",
    "start": "1392480",
    "end": "1394280"
  },
  {
    "text": "so I think these are kind of mostly",
    "start": "1394280",
    "end": "1396200"
  },
  {
    "text": "separate concerns right you've got Kong",
    "start": "1396200",
    "end": "1397640"
  },
  {
    "text": "for your Ingress you perhaps have",
    "start": "1397640",
    "end": "1399260"
  },
  {
    "text": "service mesh needs you can use Linker D",
    "start": "1399260",
    "end": "1400760"
  },
  {
    "text": "for your service mesh I think there's",
    "start": "1400760",
    "end": "1402440"
  },
  {
    "text": "going to be a little bit of a Confluence",
    "start": "1402440",
    "end": "1403820"
  },
  {
    "text": "in the future between the types that",
    "start": "1403820",
    "end": "1405740"
  },
  {
    "text": "they use like if you have HTTP routes",
    "start": "1405740",
    "end": "1407299"
  },
  {
    "text": "defined on your Ingress you may be able",
    "start": "1407299",
    "end": "1409340"
  },
  {
    "text": "to eventually use those uh to attach",
    "start": "1409340",
    "end": "1412220"
  },
  {
    "text": "policy onto that link already will",
    "start": "1412220",
    "end": "1413480"
  },
  {
    "text": "respect",
    "start": "1413480",
    "end": "1414860"
  },
  {
    "text": "um but there's not any kind of any",
    "start": "1414860",
    "end": "1418220"
  },
  {
    "text": "conflict between the two",
    "start": "1418220",
    "end": "1421179"
  }
]