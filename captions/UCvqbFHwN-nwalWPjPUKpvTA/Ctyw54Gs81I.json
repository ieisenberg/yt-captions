[
  {
    "text": "hello and welcome to this cncf webinar",
    "start": "680",
    "end": "4319"
  },
  {
    "text": "today we will be talking about how ebpf",
    "start": "4319",
    "end": "7040"
  },
  {
    "text": "can be leveraged to improve the",
    "start": "7040",
    "end": "9000"
  },
  {
    "text": "efficiency of kubernetes security use",
    "start": "9000",
    "end": "13519"
  },
  {
    "text": "cases my name is osat nearer and I am",
    "start": "13519",
    "end": "16880"
  },
  {
    "text": "the developer advocate for cubes escape",
    "start": "16880",
    "end": "18800"
  },
  {
    "text": "and Arma with me today is Chris Co",
    "start": "18800",
    "end": "21800"
  },
  {
    "text": "principal technical product manager at",
    "start": "21800",
    "end": "24359"
  },
  {
    "text": "Microsoft and An Inspector Gadget",
    "start": "24359",
    "end": "26599"
  },
  {
    "text": "maintainer take it away",
    "start": "26599",
    "end": "28960"
  },
  {
    "text": "Chris okay thanks um so my name is Chris",
    "start": "28960",
    "end": "33000"
  },
  {
    "text": "cool I am here to present Inspector",
    "start": "33000",
    "end": "35239"
  },
  {
    "text": "Gadget and giving an introduction to",
    "start": "35239",
    "end": "39000"
  },
  {
    "text": "ebpf um so let's get started with the",
    "start": "39000",
    "end": "41480"
  },
  {
    "text": "ebpf part um ebpf is basically small",
    "start": "41480",
    "end": "47280"
  },
  {
    "text": "programs uh that you can load into the",
    "start": "47280",
    "end": "49360"
  },
  {
    "text": "kernel as code um and they run",
    "start": "49360",
    "end": "51640"
  },
  {
    "text": "inside of a virtual machine or you know",
    "start": "51640",
    "end": "54719"
  },
  {
    "text": "a",
    "start": "54719",
    "end": "55520"
  },
  {
    "text": "Sandbox and so this allows for one to",
    "start": "55520",
    "end": "60519"
  },
  {
    "text": "easily make modifications uh to the",
    "start": "60519",
    "end": "62960"
  },
  {
    "text": "behavior of the kernel um without having",
    "start": "62960",
    "end": "65600"
  },
  {
    "text": "to recompile it um so previously to do",
    "start": "65600",
    "end": "68360"
  },
  {
    "text": "something like this you would have",
    "start": "68360",
    "end": "70799"
  },
  {
    "text": "to build a kernel module that kernel",
    "start": "70799",
    "end": "73240"
  },
  {
    "text": "module would then be you know loaded",
    "start": "73240",
    "end": "75680"
  },
  {
    "text": "into the kernel and the kernel module",
    "start": "75680",
    "end": "78400"
  },
  {
    "text": "would have full access to the kernel uh",
    "start": "78400",
    "end": "80799"
  },
  {
    "text": "this means that it could you know if it",
    "start": "80799",
    "end": "82439"
  },
  {
    "text": "were not programmed correctly or you",
    "start": "82439",
    "end": "84119"
  },
  {
    "text": "know maliciously uh it could you know",
    "start": "84119",
    "end": "87280"
  },
  {
    "text": "crash your kernel um in the or do other",
    "start": "87280",
    "end": "90520"
  },
  {
    "text": "things um you know ebpf runs in the",
    "start": "90520",
    "end": "94759"
  },
  {
    "text": "sandbox um so it's um you know isolated",
    "start": "94759",
    "end": "98000"
  },
  {
    "text": "from those kind of issues and we'll talk",
    "start": "98000",
    "end": "99479"
  },
  {
    "text": "we'll look at that in just a second um",
    "start": "99479",
    "end": "101439"
  },
  {
    "text": "main use cases for this are tracing and",
    "start": "101439",
    "end": "103719"
  },
  {
    "text": "observability um security um networking",
    "start": "103719",
    "end": "107799"
  },
  {
    "text": "and we're going to look at some examples",
    "start": "107799",
    "end": "109159"
  },
  {
    "text": "of these in just a little",
    "start": "109159",
    "end": "111520"
  },
  {
    "text": "bit so EF really brings a lot of",
    "start": "111520",
    "end": "114240"
  },
  {
    "text": "flexibility to the kernel there's really",
    "start": "114240",
    "end": "116119"
  },
  {
    "text": "no need to wait for certain kernels when",
    "start": "116119",
    "end": "117880"
  },
  {
    "text": "you want to make certain changes um and",
    "start": "117880",
    "end": "120560"
  },
  {
    "text": "you can just create a BPF program load",
    "start": "120560",
    "end": "122600"
  },
  {
    "text": "it in and as long as that kernel",
    "start": "122600",
    "end": "125479"
  },
  {
    "text": "supports the functionality that you're",
    "start": "125479",
    "end": "127200"
  },
  {
    "text": "using with that BPF program which um",
    "start": "127200",
    "end": "129959"
  },
  {
    "text": "nowadays there's very good support for",
    "start": "129959",
    "end": "131840"
  },
  {
    "text": "ebpf we don't really need to um worry so",
    "start": "131840",
    "end": "135480"
  },
  {
    "text": "much as we did you know a few years ago",
    "start": "135480",
    "end": "137800"
  },
  {
    "text": "um so as long as there's support for",
    "start": "137800",
    "end": "139319"
  },
  {
    "text": "that um then that program can can run in",
    "start": "139319",
    "end": "141920"
  },
  {
    "text": "in pretty much any kernel if you have",
    "start": "141920",
    "end": "144160"
  },
  {
    "text": "the right",
    "start": "144160",
    "end": "145120"
  },
  {
    "text": "permissions so it's really efficient um",
    "start": "145120",
    "end": "148160"
  },
  {
    "text": "it it's run as a just just in time",
    "start": "148160",
    "end": "150519"
  },
  {
    "text": "compiler you know it makes performance",
    "start": "150519",
    "end": "152640"
  },
  {
    "text": "overhead very low but another aspect of",
    "start": "152640",
    "end": "155319"
  },
  {
    "text": "of the performance is that often to do",
    "start": "155319",
    "end": "158360"
  },
  {
    "text": "things uh previously that you can now do",
    "start": "158360",
    "end": "161280"
  },
  {
    "text": "with evf you would have to have like a",
    "start": "161280",
    "end": "164159"
  },
  {
    "text": "back and forth between the kernel space",
    "start": "164159",
    "end": "166360"
  },
  {
    "text": "and the user space and what that calls",
    "start": "166360",
    "end": "168480"
  },
  {
    "text": "is is a context switch because every",
    "start": "168480",
    "end": "170319"
  },
  {
    "text": "time you pass data or pass operation",
    "start": "170319",
    "end": "172560"
  },
  {
    "text": "between kernel space and and um in user",
    "start": "172560",
    "end": "175280"
  },
  {
    "text": "space you get a contact switch and",
    "start": "175280",
    "end": "177440"
  },
  {
    "text": "that's very costly and so with ebpf uh",
    "start": "177440",
    "end": "180280"
  },
  {
    "text": "we can often do those kind of things",
    "start": "180280",
    "end": "182360"
  },
  {
    "text": "fully in kernel uh so you get really",
    "start": "182360",
    "end": "184799"
  },
  {
    "text": "maximal performance and just basically",
    "start": "184799",
    "end": "186480"
  },
  {
    "text": "pass up the results or the information",
    "start": "186480",
    "end": "188560"
  },
  {
    "text": "you're looking",
    "start": "188560",
    "end": "189720"
  },
  {
    "text": "for um it's also safe and so when we say",
    "start": "189720",
    "end": "193200"
  },
  {
    "text": "safe what this means is you know how as",
    "start": "193200",
    "end": "195599"
  },
  {
    "text": "we hinted before um you know you cannot",
    "start": "195599",
    "end": "198040"
  },
  {
    "text": "corrupt in um memory uh with a BPF",
    "start": "198040",
    "end": "200959"
  },
  {
    "text": "program it's actually um proven safe",
    "start": "200959",
    "end": "204680"
  },
  {
    "text": "again the same sense of ma mathematics",
    "start": "204680",
    "end": "206440"
  },
  {
    "text": "can be proven um by folks who do that",
    "start": "206440",
    "end": "209360"
  },
  {
    "text": "I'm not one of them um but basically",
    "start": "209360",
    "end": "211840"
  },
  {
    "text": "it's safe in the in the sense that the",
    "start": "211840",
    "end": "213680"
  },
  {
    "text": "kernel is safe this doesn't mean that",
    "start": "213680",
    "end": "216560"
  },
  {
    "text": "you still can't and you still should not",
    "start": "216560",
    "end": "218799"
  },
  {
    "text": "be um wary of of you know uh which ebpf",
    "start": "218799",
    "end": "222920"
  },
  {
    "text": "programs you're loading uh because you",
    "start": "222920",
    "end": "224599"
  },
  {
    "text": "know those can change the behavior of",
    "start": "224599",
    "end": "226200"
  },
  {
    "text": "the system for example if you have",
    "start": "226200",
    "end": "227879"
  },
  {
    "text": "attached to a network um socket uh it",
    "start": "227879",
    "end": "230680"
  },
  {
    "text": "could you know um you know block all the",
    "start": "230680",
    "end": "233239"
  },
  {
    "text": "network um activity um there so yeah you",
    "start": "233239",
    "end": "237879"
  },
  {
    "text": "know it's safe and that it's not going",
    "start": "237879",
    "end": "239360"
  },
  {
    "text": "to crash CR your",
    "start": "239360",
    "end": "241920"
  },
  {
    "text": "kernel",
    "start": "242480",
    "end": "244040"
  },
  {
    "text": "so um and finally um covering some of",
    "start": "244040",
    "end": "247480"
  },
  {
    "text": "the use cases more in depth uh tracing",
    "start": "247480",
    "end": "250280"
  },
  {
    "text": "and observability it just really fits uh",
    "start": "250280",
    "end": "253400"
  },
  {
    "text": "what the functionality the ebpf provides",
    "start": "253400",
    "end": "256840"
  },
  {
    "text": "because often you want to be able to",
    "start": "256840",
    "end": "260000"
  },
  {
    "text": "dynamically um look into something",
    "start": "260000",
    "end": "263040"
  },
  {
    "text": "extract the information you want um and",
    "start": "263040",
    "end": "265479"
  },
  {
    "text": "to do that in a obviously a performant",
    "start": "265479",
    "end": "267560"
  },
  {
    "text": "way that doesn't really affect um you",
    "start": "267560",
    "end": "269680"
  },
  {
    "text": "know the overall system performance um",
    "start": "269680",
    "end": "272320"
  },
  {
    "text": "and you know you want to be able to to",
    "start": "272320",
    "end": "274160"
  },
  {
    "text": "get information at at you know at",
    "start": "274160",
    "end": "276600"
  },
  {
    "text": "different levels of the system and ebpf",
    "start": "276600",
    "end": "278440"
  },
  {
    "text": "allows you to get that at a very low",
    "start": "278440",
    "end": "280280"
  },
  {
    "text": "level um and so it's super performant uh",
    "start": "280280",
    "end": "284360"
  },
  {
    "text": "and allows you to attach to different",
    "start": "284360",
    "end": "286000"
  },
  {
    "text": "things uh here you know we're list some",
    "start": "286000",
    "end": "287600"
  },
  {
    "text": "K probes Trace points and U probes these",
    "start": "287600",
    "end": "289479"
  },
  {
    "text": "are things that um you know points where",
    "start": "289479",
    "end": "291800"
  },
  {
    "text": "you can attach uh and are designed to be",
    "start": "291800",
    "end": "294440"
  },
  {
    "text": "attached um inside of um the kernel well",
    "start": "294440",
    "end": "298000"
  },
  {
    "text": "in the case of U probes it's actually us",
    "start": "298000",
    "end": "299520"
  },
  {
    "text": "user space um and you know you can",
    "start": "299520",
    "end": "302080"
  },
  {
    "text": "attach to sockets um CIS calls um Etc",
    "start": "302080",
    "end": "306919"
  },
  {
    "text": "and so on the security basis you know we",
    "start": "306919",
    "end": "310600"
  },
  {
    "text": "mentioned the things you can attach to",
    "start": "310600",
    "end": "312120"
  },
  {
    "text": "um these things are being expanded quite",
    "start": "312120",
    "end": "314120"
  },
  {
    "text": "often um you have in kernel 5.7 uh we",
    "start": "314120",
    "end": "318919"
  },
  {
    "text": "had the new possibility of attaching to",
    "start": "318919",
    "end": "321319"
  },
  {
    "text": "Linux security modules this allows ebpf",
    "start": "321319",
    "end": "324120"
  },
  {
    "text": "programs to basically make decisions",
    "start": "324120",
    "end": "326440"
  },
  {
    "text": "about whether an operation should be",
    "start": "326440",
    "end": "328199"
  },
  {
    "text": "allowed or denied uh and so as I",
    "start": "328199",
    "end": "331440"
  },
  {
    "text": "mentioned before now this policy can be",
    "start": "331440",
    "end": "333800"
  },
  {
    "text": "loaded directly into the kernel and",
    "start": "333800",
    "end": "337039"
  },
  {
    "text": "so uh the final one we want to cover",
    "start": "337039",
    "end": "339440"
  },
  {
    "text": "here is networking uh networking um you",
    "start": "339440",
    "end": "342360"
  },
  {
    "text": "know BPF programs um can attach to",
    "start": "342360",
    "end": "346160"
  },
  {
    "text": "different places in the network",
    "start": "346160",
    "end": "347440"
  },
  {
    "text": "subsystem uh including all the way into",
    "start": "347440",
    "end": "350479"
  },
  {
    "text": "the the hardware um xtp uh is a is a fun",
    "start": "350479",
    "end": "355319"
  },
  {
    "text": "functionality that allows you to",
    "start": "355319",
    "end": "357160"
  },
  {
    "text": "basically do Hardware routing using up F",
    "start": "357160",
    "end": "359720"
  },
  {
    "text": "programs which is very powerful and very",
    "start": "359720",
    "end": "361639"
  },
  {
    "text": "performant you know you have uh",
    "start": "361639",
    "end": "362960"
  },
  {
    "text": "companies like Facebook who use um ebpf",
    "start": "362960",
    "end": "366080"
  },
  {
    "text": "uh for their load balancing uh and they",
    "start": "366080",
    "end": "368280"
  },
  {
    "text": "have you know if you look uh there are",
    "start": "368280",
    "end": "371039"
  },
  {
    "text": "they have really great results in using",
    "start": "371039",
    "end": "373599"
  },
  {
    "text": "this um you know it basically allows you",
    "start": "373599",
    "end": "375840"
  },
  {
    "text": "to drop modify and forward Network",
    "start": "375840",
    "end": "377720"
  },
  {
    "text": "packets in the kubernetes space I think",
    "start": "377720",
    "end": "380000"
  },
  {
    "text": "the most popular thing is uh you'll find",
    "start": "380000",
    "end": "382160"
  },
  {
    "text": "is cium uh which uses ebpf extensively",
    "start": "382160",
    "end": "385360"
  },
  {
    "text": "for its uh Network functionality which",
    "start": "385360",
    "end": "387639"
  },
  {
    "text": "is basically what it does",
    "start": "387639",
    "end": "390440"
  },
  {
    "text": "okay now we're going to look at",
    "start": "390440",
    "end": "391680"
  },
  {
    "text": "Inspector Gadget Inspector Gadget is a",
    "start": "391680",
    "end": "394560"
  },
  {
    "text": "tool uh that we have built um basically",
    "start": "394560",
    "end": "397919"
  },
  {
    "text": "to collect data from the system and make",
    "start": "397919",
    "end": "400639"
  },
  {
    "text": "it very easy and make it um a kind of a",
    "start": "400639",
    "end": "402880"
  },
  {
    "text": "common platform uh that anybody can use",
    "start": "402880",
    "end": "405960"
  },
  {
    "text": "um and also share individual um BPF",
    "start": "405960",
    "end": "409560"
  },
  {
    "text": "programs what we packaged what called",
    "start": "409560",
    "end": "412039"
  },
  {
    "text": "gadgets um and so let's take a look at",
    "start": "412039",
    "end": "414520"
  },
  {
    "text": "it so yeah it's a framework uh it's",
    "start": "414520",
    "end": "416840"
  },
  {
    "text": "basically designed for building uh",
    "start": "416840",
    "end": "418599"
  },
  {
    "text": "Packaging deploying and and running uh",
    "start": "418599",
    "end": "421840"
  },
  {
    "text": "ebpf programs and we package these into",
    "start": "421840",
    "end": "424440"
  },
  {
    "text": "what we call gadgets which we'll look at",
    "start": "424440",
    "end": "425759"
  },
  {
    "text": "in just a second um and it's primarily",
    "start": "425759",
    "end": "429919"
  },
  {
    "text": "for debugging and inspecting Linux",
    "start": "429919",
    "end": "431479"
  },
  {
    "text": "systems so this is you know doing that",
    "start": "431479",
    "end": "433599"
  },
  {
    "text": "means you're collecting data and so you",
    "start": "433599",
    "end": "435440"
  },
  {
    "text": "can think of it as a data collection uh",
    "start": "435440",
    "end": "437560"
  },
  {
    "text": "tool for evf it's a kind of a container",
    "start": "437560",
    "end": "440919"
  },
  {
    "text": "likee runtime um and we say container",
    "start": "440919",
    "end": "443199"
  },
  {
    "text": "like uh because it supports a lot of the",
    "start": "443199",
    "end": "445400"
  },
  {
    "text": "you know verbs you would know from a",
    "start": "445400",
    "end": "446960"
  },
  {
    "text": "container system uh build p pull and run",
    "start": "446960",
    "end": "451479"
  },
  {
    "text": "and these are um what we call Image",
    "start": "451479",
    "end": "453479"
  },
  {
    "text": "based gadgets because they are packaged",
    "start": "453479",
    "end": "456520"
  },
  {
    "text": "within um oci",
    "start": "456520",
    "end": "460000"
  },
  {
    "text": "images so it supports um and understands",
    "start": "460000",
    "end": "464080"
  },
  {
    "text": "kubernetes uh what this means is that",
    "start": "464080",
    "end": "466800"
  },
  {
    "text": "when you take the data from the evf",
    "start": "466800",
    "end": "468720"
  },
  {
    "text": "program it comes from the kernel it",
    "start": "468720",
    "end": "470680"
  },
  {
    "text": "doesn't know anything about kubernetes",
    "start": "470680",
    "end": "472599"
  },
  {
    "text": "and so we enrich that data with high",
    "start": "472599",
    "end": "474840"
  },
  {
    "text": "level information about kubernetes uh",
    "start": "474840",
    "end": "477159"
  },
  {
    "text": "the container runtime Etc",
    "start": "477159",
    "end": "480280"
  },
  {
    "text": "and you can also filter um the data that",
    "start": "480280",
    "end": "483879"
  },
  {
    "text": "you get um using these higher level um",
    "start": "483879",
    "end": "487360"
  },
  {
    "text": "Primitives um for example if you say",
    "start": "487360",
    "end": "489800"
  },
  {
    "text": "just show me things from this single pod",
    "start": "489800",
    "end": "492639"
  },
  {
    "text": "you know you can do that with Inspector",
    "start": "492639",
    "end": "494000"
  },
  {
    "text": "Gadget and the way that actually works",
    "start": "494000",
    "end": "495879"
  },
  {
    "text": "is that you we Inspector Gadget takes",
    "start": "495879",
    "end": "498599"
  },
  {
    "text": "that information it translates it into",
    "start": "498599",
    "end": "501120"
  },
  {
    "text": "what the colel understands for example",
    "start": "501120",
    "end": "503120"
  },
  {
    "text": "if you say only show um the information",
    "start": "503120",
    "end": "505720"
  },
  {
    "text": "from this container uh it needs to",
    "start": "505720",
    "end": "507759"
  },
  {
    "text": "translate that to a Mount Nam space um a",
    "start": "507759",
    "end": "511720"
  },
  {
    "text": "um a c group uh various things um and so",
    "start": "511720",
    "end": "515479"
  },
  {
    "text": "Inspector Gadget takes care of that you",
    "start": "515479",
    "end": "517039"
  },
  {
    "text": "don't have to do that yourself um it's",
    "start": "517039",
    "end": "519399"
  },
  {
    "text": "very easily deployed inside of um",
    "start": "519399",
    "end": "521518"
  },
  {
    "text": "kubernetes you just basically do cctl",
    "start": "521519",
    "end": "524039"
  },
  {
    "text": "Gadget deploy and here you have",
    "start": "524039",
    "end": "526160"
  },
  {
    "text": "basically uh Gadget as the sub commmand",
    "start": "526160",
    "end": "528800"
  },
  {
    "text": "for qctl this is actually a plugin uh",
    "start": "528800",
    "end": "531440"
  },
  {
    "text": "which you can install with crew and you",
    "start": "531440",
    "end": "533240"
  },
  {
    "text": "just run deploy and it'll put it in your",
    "start": "533240",
    "end": "535200"
  },
  {
    "text": "cluster uh it also supports running",
    "start": "535200",
    "end": "537360"
  },
  {
    "text": "directly on a Linux host so you don't",
    "start": "537360",
    "end": "538800"
  },
  {
    "text": "have to have have kubernetes with this",
    "start": "538800",
    "end": "540519"
  },
  {
    "text": "and this is uh actually a very powerful",
    "start": "540519",
    "end": "542160"
  },
  {
    "text": "feature because sometimes you might be",
    "start": "542160",
    "end": "543880"
  },
  {
    "text": "running kubernetes but you want to debug",
    "start": "543880",
    "end": "545959"
  },
  {
    "text": "kubernetes and if you're running uh with",
    "start": "545959",
    "end": "549399"
  },
  {
    "text": "um you know full kubernetes support that",
    "start": "549399",
    "end": "550880"
  },
  {
    "text": "means it's relying on some of the things",
    "start": "550880",
    "end": "552320"
  },
  {
    "text": "like the API server and sometimes you",
    "start": "552320",
    "end": "554120"
  },
  {
    "text": "want to get underneath that and this",
    "start": "554120",
    "end": "556440"
  },
  {
    "text": "direct Linux support uh allows you to do",
    "start": "556440",
    "end": "558920"
  },
  {
    "text": "that it also supports many different",
    "start": "558920",
    "end": "560600"
  },
  {
    "text": "export targets uh CLI of course um for",
    "start": "560600",
    "end": "563959"
  },
  {
    "text": "interactive sessions a grpc when you're",
    "start": "563959",
    "end": "566600"
  },
  {
    "text": "dealing with the data programmatically",
    "start": "566600",
    "end": "568360"
  },
  {
    "text": "uh Prometheus um or you know just the",
    "start": "568360",
    "end": "571040"
  },
  {
    "text": "logs Etc uh we also have a mechanism to",
    "start": "571040",
    "end": "574720"
  },
  {
    "text": "do some user space um processing and and",
    "start": "574720",
    "end": "577640"
  },
  {
    "text": "package that inside of a gadget so that",
    "start": "577640",
    "end": "579600"
  },
  {
    "text": "you can deliver along with the um you",
    "start": "579600",
    "end": "582200"
  },
  {
    "text": "know the gadget itself and along with",
    "start": "582200",
    "end": "583680"
  },
  {
    "text": "the BPF program and this is done in web",
    "start": "583680",
    "end": "585880"
  },
  {
    "text": "assembly modules and you can do this",
    "start": "585880",
    "end": "587600"
  },
  {
    "text": "then uh in any language that web",
    "start": "587600",
    "end": "590040"
  },
  {
    "text": "assembly supports you know go rust uh",
    "start": "590040",
    "end": "593279"
  },
  {
    "text": "JavaScript uh",
    "start": "593279",
    "end": "595640"
  },
  {
    "text": "Etc so for deploying the side side of",
    "start": "595640",
    "end": "598160"
  },
  {
    "text": "kubernetes uh it looks something like",
    "start": "598160",
    "end": "600640"
  },
  {
    "text": "this you have qctl Gadget or whatever",
    "start": "600640",
    "end": "603160"
  },
  {
    "text": "third party tool you create uh to",
    "start": "603160",
    "end": "605000"
  },
  {
    "text": "interact with this um the API calls uh",
    "start": "605000",
    "end": "609240"
  },
  {
    "text": "for cctl go through the API server uh",
    "start": "609240",
    "end": "612079"
  },
  {
    "text": "and they um interact with the Inspector",
    "start": "612079",
    "end": "615160"
  },
  {
    "text": "Gadget pod this Inspector Gadget pod is",
    "start": "615160",
    "end": "617000"
  },
  {
    "text": "actually deployed with the uh command",
    "start": "617000",
    "end": "619079"
  },
  {
    "text": "that I showed you earlier the cube CDL",
    "start": "619079",
    "end": "620720"
  },
  {
    "text": "Gadget deploy and this will happen on",
    "start": "620720",
    "end": "622880"
  },
  {
    "text": "all the nodes and then when you once you",
    "start": "622880",
    "end": "625079"
  },
  {
    "text": "deploy that you can do you know run a",
    "start": "625079",
    "end": "627519"
  },
  {
    "text": "particular Gadget and this pod will take",
    "start": "627519",
    "end": "630200"
  },
  {
    "text": "care of pulling that down loading it",
    "start": "630200",
    "end": "633680"
  },
  {
    "text": "Etc",
    "start": "633680",
    "end": "635480"
  },
  {
    "text": "so now we support a lot of different uh",
    "start": "635480",
    "end": "638920"
  },
  {
    "text": "types of gadgets and if you look at this",
    "start": "638920",
    "end": "640839"
  },
  {
    "text": "diagram you'll see uh for example that",
    "start": "640839",
    "end": "643680"
  },
  {
    "text": "there are gadgets that um attached to uh",
    "start": "643680",
    "end": "646959"
  },
  {
    "text": "sockets um gadgets that attached to CIS",
    "start": "646959",
    "end": "649680"
  },
  {
    "text": "calls um gadgets that attached to",
    "start": "649680",
    "end": "652480"
  },
  {
    "text": "certain block devices and so the way BPF",
    "start": "652480",
    "end": "655519"
  },
  {
    "text": "works is it attaches these things and",
    "start": "655519",
    "end": "656880"
  },
  {
    "text": "when an event happens for example with",
    "start": "656880",
    "end": "658560"
  },
  {
    "text": "sockets",
    "start": "658560",
    "end": "659639"
  },
  {
    "text": "um when a packet comes in uh it'll it'll",
    "start": "659639",
    "end": "662560"
  },
  {
    "text": "run right and if it determines that",
    "start": "662560",
    "end": "665360"
  },
  {
    "text": "that's something of Interest it'll put",
    "start": "665360",
    "end": "666639"
  },
  {
    "text": "it into the ebpf map which is then",
    "start": "666639",
    "end": "669360"
  },
  {
    "text": "consumed by the user space but we'll",
    "start": "669360",
    "end": "671399"
  },
  {
    "text": "take a look at that in just a second in",
    "start": "671399",
    "end": "673720"
  },
  {
    "text": "fact let's do that right",
    "start": "673720",
    "end": "676120"
  },
  {
    "text": "now and so I'm going to here's a a",
    "start": "676120",
    "end": "679560"
  },
  {
    "text": "diagram of basically how Inspector",
    "start": "679560",
    "end": "682320"
  },
  {
    "text": "Gadget works so at the top left you'll",
    "start": "682320",
    "end": "685920"
  },
  {
    "text": "see the oci registry now that's the part",
    "start": "685920",
    "end": "688440"
  },
  {
    "text": "that generally does not um is not own",
    "start": "688440",
    "end": "691360"
  },
  {
    "text": "the local machine or not own um in your",
    "start": "691360",
    "end": "693760"
  },
  {
    "text": "local infrastructure that might be",
    "start": "693760",
    "end": "694959"
  },
  {
    "text": "something like GitHub Packages Etc and",
    "start": "694959",
    "end": "698920"
  },
  {
    "text": "then uh you have uh the local Gadget",
    "start": "698920",
    "end": "701320"
  },
  {
    "text": "store this is where gadgets are stored",
    "start": "701320",
    "end": "703320"
  },
  {
    "text": "when they're um pulled down um and then",
    "start": "703320",
    "end": "705880"
  },
  {
    "text": "you have here the ice um IG process uh",
    "start": "705880",
    "end": "708920"
  },
  {
    "text": "this is the Inspector Gadget process Um",
    "start": "708920",
    "end": "711000"
  },
  {
    "text": "this can be you know in kubernetes or it",
    "start": "711000",
    "end": "712680"
  },
  {
    "text": "can be on Local Host um and then uh you",
    "start": "712680",
    "end": "716800"
  },
  {
    "text": "see this yellow line that delineates the",
    "start": "716800",
    "end": "719000"
  },
  {
    "text": "user space on top and the kernel space",
    "start": "719000",
    "end": "721079"
  },
  {
    "text": "underneath because what we'll do in the",
    "start": "721079",
    "end": "722720"
  },
  {
    "text": "end we'll load those BPF programs into",
    "start": "722720",
    "end": "724839"
  },
  {
    "text": "kernel space and we'll pull out the data",
    "start": "724839",
    "end": "726720"
  },
  {
    "text": "on the other side using Inspector Gadget",
    "start": "726720",
    "end": "729279"
  },
  {
    "text": "so let's take a look at this so the",
    "start": "729279",
    "end": "731880"
  },
  {
    "text": "first thing that happens is when you run",
    "start": "731880",
    "end": "733800"
  },
  {
    "text": "do an um IG run a gadget um or qcil",
    "start": "733800",
    "end": "740480"
  },
  {
    "text": "Gadget run uh a particular Gadget uh",
    "start": "740480",
    "end": "743800"
  },
  {
    "text": "then what it'll do it'll first check in",
    "start": "743800",
    "end": "745839"
  },
  {
    "text": "the local Gadget store if it's not there",
    "start": "745839",
    "end": "747639"
  },
  {
    "text": "it'll go to the oci register",
    "start": "747639",
    "end": "749600"
  },
  {
    "text": "uh it'll fetch that and put it down into",
    "start": "749600",
    "end": "753160"
  },
  {
    "text": "uh the local uh store once it's in the",
    "start": "753160",
    "end": "756279"
  },
  {
    "text": "local store uh the gadget manager can",
    "start": "756279",
    "end": "758560"
  },
  {
    "text": "then load this into the kernel and in",
    "start": "758560",
    "end": "762160"
  },
  {
    "text": "this case we are attaching to a socket",
    "start": "762160",
    "end": "764800"
  },
  {
    "text": "um and so when it loads this BPF program",
    "start": "764800",
    "end": "767839"
  },
  {
    "text": "it also creates a BPF um a ebpf map and",
    "start": "767839",
    "end": "771360"
  },
  {
    "text": "this is represented by this yellow",
    "start": "771360",
    "end": "773160"
  },
  {
    "text": "circle in this diagram and so once",
    "start": "773160",
    "end": "776760"
  },
  {
    "text": "that's loaded it's waiting for an event",
    "start": "776760",
    "end": "778480"
  },
  {
    "text": "when an event does happen it then loads",
    "start": "778480",
    "end": "780880"
  },
  {
    "text": "that into the um map and Inspector",
    "start": "780880",
    "end": "784959"
  },
  {
    "text": "Gadget is ready to do its job on the",
    "start": "784959",
    "end": "787079"
  },
  {
    "text": "user space side so it pulls out that",
    "start": "787079",
    "end": "789519"
  },
  {
    "text": "information uh it sends it to the",
    "start": "789519",
    "end": "791880"
  },
  {
    "text": "enrichment um uh processes and you know",
    "start": "791880",
    "end": "796040"
  },
  {
    "text": "this will enrichment enrich it with",
    "start": "796040",
    "end": "798160"
  },
  {
    "text": "information about the kubernetes it'll",
    "start": "798160",
    "end": "800959"
  },
  {
    "text": "enrich about enrich it with the",
    "start": "800959",
    "end": "802399"
  },
  {
    "text": "container runtime information and this",
    "start": "802399",
    "end": "804040"
  },
  {
    "text": "supports a Docker container D Etc uh and",
    "start": "804040",
    "end": "807279"
  },
  {
    "text": "we're also working on system D support",
    "start": "807279",
    "end": "809680"
  },
  {
    "text": "so even when you're not running inside",
    "start": "809680",
    "end": "811880"
  },
  {
    "text": "of a you know container infrastructure",
    "start": "811880",
    "end": "813959"
  },
  {
    "text": "um you can still you know see what",
    "start": "813959",
    "end": "816320"
  },
  {
    "text": "service it's uh associated with so the",
    "start": "816320",
    "end": "820040"
  },
  {
    "text": "next step is an optional step and this",
    "start": "820040",
    "end": "822120"
  },
  {
    "text": "is the post-processing step um",
    "start": "822120",
    "end": "825880"
  },
  {
    "text": "now there are times for example we have",
    "start": "825880",
    "end": "828160"
  },
  {
    "text": "a very simple example for this and",
    "start": "828160",
    "end": "830000"
  },
  {
    "text": "that's our DNS Gadget the DNS Gadget um",
    "start": "830000",
    "end": "833160"
  },
  {
    "text": "the DNS uh actual information is",
    "start": "833160",
    "end": "836120"
  },
  {
    "text": "formatted in a way that is not so easy",
    "start": "836120",
    "end": "838240"
  },
  {
    "text": "for uh BPF to process uh because it",
    "start": "838240",
    "end": "841079"
  },
  {
    "text": "needs some loops and things like that",
    "start": "841079",
    "end": "842680"
  },
  {
    "text": "which are you know kind of BPF is a",
    "start": "842680",
    "end": "844920"
  },
  {
    "text": "little bit restrictive with what it does",
    "start": "844920",
    "end": "846320"
  },
  {
    "text": "inside the kernel and so we actually",
    "start": "846320",
    "end": "848399"
  },
  {
    "text": "have a um WM module that simply formats",
    "start": "848399",
    "end": "852000"
  },
  {
    "text": "the string the way we want it um and so",
    "start": "852000",
    "end": "854839"
  },
  {
    "text": "that's a very simple example but you can",
    "start": "854839",
    "end": "856320"
  },
  {
    "text": "do a lot more with",
    "start": "856320",
    "end": "857639"
  },
  {
    "text": "that and then the next step is we pass",
    "start": "857639",
    "end": "860120"
  },
  {
    "text": "that on to the data output element and",
    "start": "860120",
    "end": "862600"
  },
  {
    "text": "this can be if you're on running on the",
    "start": "862600",
    "end": "864120"
  },
  {
    "text": "CLI and an interactive process it might",
    "start": "864120",
    "end": "865880"
  },
  {
    "text": "just be a tabular information or it",
    "start": "865880",
    "end": "868320"
  },
  {
    "text": "could be Chason uh format uh if you're",
    "start": "868320",
    "end": "871680"
  },
  {
    "text": "you know if you want to send this to um",
    "start": "871680",
    "end": "874120"
  },
  {
    "text": "you know an API uh you can use grpc uh",
    "start": "874120",
    "end": "877040"
  },
  {
    "text": "but you can also send this to uh",
    "start": "877040",
    "end": "878920"
  },
  {
    "text": "Prometheus or even",
    "start": "878920",
    "end": "881519"
  },
  {
    "text": "logs so so I hope that gives you kind of",
    "start": "881519",
    "end": "884639"
  },
  {
    "text": "a a good overview of of how this",
    "start": "884639",
    "end": "887920"
  },
  {
    "text": "works one thing to note here is that a",
    "start": "887920",
    "end": "890079"
  },
  {
    "text": "lot of what I'm talking about today is",
    "start": "890079",
    "end": "892360"
  },
  {
    "text": "currently behind an experimental flag um",
    "start": "892360",
    "end": "895000"
  },
  {
    "text": "that experimental flag should be removed",
    "start": "895000",
    "end": "897120"
  },
  {
    "text": "in the next couple releases um and we're",
    "start": "897120",
    "end": "899720"
  },
  {
    "text": "kind of excited about getting it out",
    "start": "899720",
    "end": "901480"
  },
  {
    "text": "there in its full form because we",
    "start": "901480",
    "end": "903480"
  },
  {
    "text": "believe um that this is a extremely uh",
    "start": "903480",
    "end": "907040"
  },
  {
    "text": "powerful system that takes a lot of the",
    "start": "907040",
    "end": "909320"
  },
  {
    "text": "boilerplate out but not only a lot of",
    "start": "909320",
    "end": "911360"
  },
  {
    "text": "the boiler plate out of people who are",
    "start": "911360",
    "end": "913240"
  },
  {
    "text": "developing things such as the cube skate",
    "start": "913240",
    "end": "915320"
  },
  {
    "text": "folks um but also it allows us will",
    "start": "915320",
    "end": "918279"
  },
  {
    "text": "allow us to share uh ebpf programs uh",
    "start": "918279",
    "end": "921480"
  },
  {
    "text": "more easily and for people to package",
    "start": "921480",
    "end": "924399"
  },
  {
    "text": "them and just to have this off-the-shelf",
    "start": "924399",
    "end": "926440"
  },
  {
    "text": "experience that we understand from",
    "start": "926440",
    "end": "928759"
  },
  {
    "text": "containers and so it's really about not",
    "start": "928759",
    "end": "931399"
  },
  {
    "text": "about making this easier but also",
    "start": "931399",
    "end": "933240"
  },
  {
    "text": "creating a community around this and",
    "start": "933240",
    "end": "935399"
  },
  {
    "text": "enabling you know people to really uh",
    "start": "935399",
    "end": "937920"
  },
  {
    "text": "you know share what they",
    "start": "937920",
    "end": "939240"
  },
  {
    "text": "create and so with that I'm going to",
    "start": "939240",
    "end": "941959"
  },
  {
    "text": "hand it back over",
    "start": "941959",
    "end": "944880"
  },
  {
    "text": "thanks thanks Chris in this part of the",
    "start": "944880",
    "end": "948399"
  },
  {
    "text": "webinar we will be examining a security",
    "start": "948399",
    "end": "950519"
  },
  {
    "text": "use case that uses ebpf by way of a",
    "start": "950519",
    "end": "953519"
  },
  {
    "text": "gadget from Inspector Gadget in a talk",
    "start": "953519",
    "end": "956319"
  },
  {
    "text": "in cubec con North America in 2020 20",
    "start": "956319",
    "end": "959160"
  },
  {
    "text": "Shane Lawrence of Shopify said no matter",
    "start": "959160",
    "end": "962360"
  },
  {
    "text": "how good a job we do on the left there",
    "start": "962360",
    "end": "964560"
  },
  {
    "text": "is always going to be an issue that",
    "start": "964560",
    "end": "967079"
  },
  {
    "text": "prevention didn't catch when protecting",
    "start": "967079",
    "end": "969759"
  },
  {
    "text": "critical Services we need effective",
    "start": "969759",
    "end": "972160"
  },
  {
    "text": "monitoring this seems like it adds toil",
    "start": "972160",
    "end": "974600"
  },
  {
    "text": "to already overwhelmed Cloud security",
    "start": "974600",
    "end": "976720"
  },
  {
    "text": "and devops practitioners in the next few",
    "start": "976720",
    "end": "979360"
  },
  {
    "text": "slides I will be talking about the",
    "start": "979360",
    "end": "981000"
  },
  {
    "text": "source of overwhelm and how using ebpf",
    "start": "981000",
    "end": "984000"
  },
  {
    "text": "and applying additional logic can",
    "start": "984000",
    "end": "985920"
  },
  {
    "text": "actually reduce that load a bit this",
    "start": "985920",
    "end": "989040"
  },
  {
    "text": "image depicts what I have started",
    "start": "989040",
    "end": "991360"
  },
  {
    "text": "calling naive scanning it shows the",
    "start": "991360",
    "end": "994040"
  },
  {
    "text": "basic method of most every vulnerability",
    "start": "994040",
    "end": "996240"
  },
  {
    "text": "scanner you have probably worked with to",
    "start": "996240",
    "end": "999120"
  },
  {
    "text": "date essentially what we can see here is",
    "start": "999120",
    "end": "1002440"
  },
  {
    "text": "a scanner testing the packages in an",
    "start": "1002440",
    "end": "1004880"
  },
  {
    "text": "image and overlaying information from",
    "start": "1004880",
    "end": "1007600"
  },
  {
    "text": "one or more cve databases like nvd for",
    "start": "1007600",
    "end": "1010440"
  },
  {
    "text": "instance the result is typically a long",
    "start": "1010440",
    "end": "1012759"
  },
  {
    "text": "list of vulnerabilities with their CVSs",
    "start": "1012759",
    "end": "1015600"
  },
  {
    "text": "score that is a source of the overwhelm",
    "start": "1015600",
    "end": "1018519"
  },
  {
    "text": "I mentioned earlier cubes scape took",
    "start": "1018519",
    "end": "1021480"
  },
  {
    "text": "vulnerability scanning to the next level",
    "start": "1021480",
    "end": "1023720"
  },
  {
    "text": "by enriching the original scan with",
    "start": "1023720",
    "end": "1025438"
  },
  {
    "text": "runtime",
    "start": "1025439",
    "end": "1026640"
  },
  {
    "text": "data the way Cub skipe works is by",
    "start": "1026640",
    "end": "1029520"
  },
  {
    "text": "installing a node agent this node agent",
    "start": "1029520",
    "end": "1033079"
  },
  {
    "text": "uses Inspector Gadget to hook into",
    "start": "1033079",
    "end": "1035678"
  },
  {
    "text": "different ebpf events it uses file",
    "start": "1035679",
    "end": "1038880"
  },
  {
    "text": "activity information to understand which",
    "start": "1038880",
    "end": "1041360"
  },
  {
    "text": "files are opened in each of the",
    "start": "1041360",
    "end": "1042839"
  },
  {
    "text": "workloads that are running in our",
    "start": "1042839",
    "end": "1044918"
  },
  {
    "text": "kubernetes cluster this information",
    "start": "1044919",
    "end": "1047760"
  },
  {
    "text": "enables to cross reference the sbom",
    "start": "1047760",
    "end": "1050640"
  },
  {
    "text": "together with this information and find",
    "start": "1050640",
    "end": "1053160"
  },
  {
    "text": "which software packages were touched",
    "start": "1053160",
    "end": "1055200"
  },
  {
    "text": "during runtime and if they are loaded",
    "start": "1055200",
    "end": "1057400"
  },
  {
    "text": "into memory or not so if a python",
    "start": "1057400",
    "end": "1060840"
  },
  {
    "text": "package was opened cubc Cape knows from",
    "start": "1060840",
    "end": "1064000"
  },
  {
    "text": "ebpf that it was opened and it'll take",
    "start": "1064000",
    "end": "1066240"
  },
  {
    "text": "the python file to see if it's listed in",
    "start": "1066240",
    "end": "1068600"
  },
  {
    "text": "the sbom and belongs to one of the",
    "start": "1068600",
    "end": "1070919"
  },
  {
    "text": "packages if it belongs to one of the",
    "start": "1070919",
    "end": "1073120"
  },
  {
    "text": "packages then it'll be marked as in use",
    "start": "1073120",
    "end": "1076240"
  },
  {
    "text": "and reachable cubes scape then feeds the",
    "start": "1076240",
    "end": "1079320"
  },
  {
    "text": "vulnerability Scanner with the original",
    "start": "1079320",
    "end": "1081480"
  },
  {
    "text": "sbom that naive scanners use and with a",
    "start": "1081480",
    "end": "1084520"
  },
  {
    "text": "filtered es bomb it created the filtered",
    "start": "1084520",
    "end": "1087400"
  },
  {
    "text": "sbom only lists the packages that were",
    "start": "1087400",
    "end": "1089679"
  },
  {
    "text": "touched during runtime giving the",
    "start": "1089679",
    "end": "1092240"
  },
  {
    "text": "scanner that precious runtime",
    "start": "1092240",
    "end": "1093840"
  },
  {
    "text": "information mentioned earlier in the",
    "start": "1093840",
    "end": "1096120"
  },
  {
    "text": "proof of concept for reachability armo",
    "start": "1096120",
    "end": "1098760"
  },
  {
    "text": "researchers ran a scan with and without",
    "start": "1098760",
    "end": "1101400"
  },
  {
    "text": "reachability on a reddis image we can",
    "start": "1101400",
    "end": "1104720"
  },
  {
    "text": "see that running a vulnerability scan on",
    "start": "1104720",
    "end": "1107000"
  },
  {
    "text": "the reddis image tested",
    "start": "1107000",
    "end": "1109200"
  },
  {
    "text": "identified 166",
    "start": "1109200",
    "end": "1111600"
  },
  {
    "text": "vulnerabilities but when looking through",
    "start": "1111600",
    "end": "1113360"
  },
  {
    "text": "the lens of reachability things aren't",
    "start": "1113360",
    "end": "1115400"
  },
  {
    "text": "that Bleak the number shrinks to 36",
    "start": "1115400",
    "end": "1118600"
  },
  {
    "text": "which represents a 78% reduction a more",
    "start": "1118600",
    "end": "1122320"
  },
  {
    "text": "current example shows that scanning",
    "start": "1122320",
    "end": "1124360"
  },
  {
    "text": "redus naively that is with a static",
    "start": "1124360",
    "end": "1126440"
  },
  {
    "text": "scanner we get one critical",
    "start": "1126440",
    "end": "1128480"
  },
  {
    "text": "vulnerability and 11 High the common",
    "start": "1128480",
    "end": "1131360"
  },
  {
    "text": "practice is that these are those that",
    "start": "1131360",
    "end": "1133520"
  },
  {
    "text": "you need to fix as soon as possible",
    "start": "1133520",
    "end": "1136240"
  },
  {
    "text": "using the trace open gadget from from",
    "start": "1136240",
    "end": "1138520"
  },
  {
    "text": "Inspector Gadget Cub skape was able to",
    "start": "1138520",
    "end": "1140559"
  },
  {
    "text": "identify which files are touched by the",
    "start": "1140559",
    "end": "1142760"
  },
  {
    "text": "container during",
    "start": "1142760",
    "end": "1144200"
  },
  {
    "text": "runtime this scan gave us zero criticals",
    "start": "1144200",
    "end": "1147840"
  },
  {
    "text": "and one high this exercise was able to",
    "start": "1147840",
    "end": "1151440"
  },
  {
    "text": "highlight that less packages are",
    "start": "1151440",
    "end": "1153400"
  },
  {
    "text": "actually used in run time it created a",
    "start": "1153400",
    "end": "1155960"
  },
  {
    "text": "modified es bomb without the files that",
    "start": "1155960",
    "end": "1158159"
  },
  {
    "text": "are not accessed the result being a list",
    "start": "1158159",
    "end": "1162120"
  },
  {
    "text": "of the vulnerabilities that can hurt us",
    "start": "1162120",
    "end": "1165320"
  },
  {
    "text": "today in this example it's just one",
    "start": "1165320",
    "end": "1168880"
  },
  {
    "text": "thus guiding us to a prioritized list of",
    "start": "1168880",
    "end": "1172640"
  },
  {
    "text": "vulnerabilities now let's take a more",
    "start": "1172640",
    "end": "1175280"
  },
  {
    "text": "detailed look at how cubes scape",
    "start": "1175280",
    "end": "1176880"
  },
  {
    "text": "utilizes Inspector Gadget for this Cub",
    "start": "1176880",
    "end": "1180080"
  },
  {
    "text": "Escape uses the trace open gadget which",
    "start": "1180080",
    "end": "1182559"
  },
  {
    "text": "gives it information about the file",
    "start": "1182559",
    "end": "1184400"
  },
  {
    "text": "opened by the system that includes file",
    "start": "1184400",
    "end": "1187840"
  },
  {
    "text": "name file path user ID and group ID on",
    "start": "1187840",
    "end": "1192520"
  },
  {
    "text": "the right you can see a merged PR from",
    "start": "1192520",
    "end": "1194840"
  },
  {
    "text": "Ben herberg lead cbcap maintainer",
    "start": "1194840",
    "end": "1197640"
  },
  {
    "text": "co-founder and CTO of Arma this",
    "start": "1197640",
    "end": "1200400"
  },
  {
    "text": "highlights the beauty of using open",
    "start": "1200400",
    "end": "1202000"
  },
  {
    "text": "source projects if something is not",
    "start": "1202000",
    "end": "1204360"
  },
  {
    "text": "giving you everything you need you can",
    "start": "1204360",
    "end": "1205880"
  },
  {
    "text": "change it Upstream to benefit",
    "start": "1205880",
    "end": "1208280"
  },
  {
    "text": "everyone this is what the implementation",
    "start": "1208280",
    "end": "1210840"
  },
  {
    "text": "looks like on Arma platform which is",
    "start": "1210840",
    "end": "1213120"
  },
  {
    "text": "powered by Cub scheme users get the",
    "start": "1213120",
    "end": "1215640"
  },
  {
    "text": "results of the static scan however they",
    "start": "1215640",
    "end": "1219480"
  },
  {
    "text": "can then filter for reachability and for",
    "start": "1219480",
    "end": "1221840"
  },
  {
    "text": "every vulnerability found users can see",
    "start": "1221840",
    "end": "1224400"
  },
  {
    "text": "if it is reachable or not cve",
    "start": "1224400",
    "end": "1227520"
  },
  {
    "text": "reachability was the first ccape",
    "start": "1227520",
    "end": "1229640"
  },
  {
    "text": "implementation of ebpf which enriches",
    "start": "1229640",
    "end": "1231919"
  },
  {
    "text": "runtime information for the purposes of",
    "start": "1231919",
    "end": "1234159"
  },
  {
    "text": "securing kubernetes clusters but it is",
    "start": "1234159",
    "end": "1237080"
  },
  {
    "text": "definitely not the last armo is now",
    "start": "1237080",
    "end": "1239919"
  },
  {
    "text": "working on adding the following features",
    "start": "1239919",
    "end": "1241640"
  },
  {
    "text": "to armo",
    "start": "1241640",
    "end": "1242760"
  },
  {
    "text": "platform SEC comp profile in order to",
    "start": "1242760",
    "end": "1245600"
  },
  {
    "text": "automate the creation and management of",
    "start": "1245600",
    "end": "1247640"
  },
  {
    "text": "SEC comp profiles providing fine grained",
    "start": "1247640",
    "end": "1250360"
  },
  {
    "text": "control over system calls that",
    "start": "1250360",
    "end": "1252159"
  },
  {
    "text": "containers can make Network policy",
    "start": "1252159",
    "end": "1255480"
  },
  {
    "text": "generates Network policies based on on",
    "start": "1255480",
    "end": "1258360"
  },
  {
    "text": "in cluster Data Network policy in order",
    "start": "1258360",
    "end": "1262760"
  },
  {
    "text": "to generate Network policies based on in",
    "start": "1262760",
    "end": "1265760"
  },
  {
    "text": "cluster",
    "start": "1265760",
    "end": "1266880"
  },
  {
    "text": "data and runtime anomaly detection which",
    "start": "1266880",
    "end": "1270279"
  },
  {
    "text": "is pretty",
    "start": "1270279",
    "end": "1271840"
  },
  {
    "text": "self-explanatory in conclusion ebpf is a",
    "start": "1271840",
    "end": "1275360"
  },
  {
    "text": "useful tool in the cloud native world as",
    "start": "1275360",
    "end": "1277760"
  },
  {
    "text": "it enables visibility into runtime with",
    "start": "1277760",
    "end": "1280480"
  },
  {
    "text": "a relatively low cost in comparison to",
    "start": "1280480",
    "end": "1283880"
  },
  {
    "text": "running scripts of traces and probes on",
    "start": "1283880",
    "end": "1286840"
  },
  {
    "text": "the Linux kernel",
    "start": "1286840",
    "end": "1288600"
  },
  {
    "text": "there are many areas in which ebpf can",
    "start": "1288600",
    "end": "1291240"
  },
  {
    "text": "help gain important insights one of them",
    "start": "1291240",
    "end": "1294400"
  },
  {
    "text": "is security using ebpf security use",
    "start": "1294400",
    "end": "1297919"
  },
  {
    "text": "cases can be enriched with runtime data",
    "start": "1297919",
    "end": "1300200"
  },
  {
    "text": "which ultimately saves practitioners a",
    "start": "1300200",
    "end": "1302360"
  },
  {
    "text": "lot of toil and helps them focus on what",
    "start": "1302360",
    "end": "1304840"
  },
  {
    "text": "actually",
    "start": "1304840",
    "end": "1306480"
  },
  {
    "text": "matters I'd like to thank Chris from",
    "start": "1306480",
    "end": "1308679"
  },
  {
    "text": "Inspector Gadget for joining me today",
    "start": "1308679",
    "end": "1311320"
  },
  {
    "text": "and thank you for watching if you'd like",
    "start": "1311320",
    "end": "1313799"
  },
  {
    "text": "to keep in touch with armo you can",
    "start": "1313799",
    "end": "1315760"
  },
  {
    "text": "follow us on LinkedIn and Twitter if you",
    "start": "1315760",
    "end": "1318600"
  },
  {
    "text": "would like to follow or join the cubes",
    "start": "1318600",
    "end": "1320480"
  },
  {
    "text": "skape Community you can check it out on",
    "start": "1320480",
    "end": "1322760"
  },
  {
    "text": "Twitter or GitHub there are also cubes",
    "start": "1322760",
    "end": "1325480"
  },
  {
    "text": "skape channels on the cncf slack stop by",
    "start": "1325480",
    "end": "1328720"
  },
  {
    "text": "there and have a chat with me see you",
    "start": "1328720",
    "end": "1331360"
  },
  {
    "text": "next",
    "start": "1331360",
    "end": "1332159"
  },
  {
    "text": "time",
    "start": "1332159",
    "end": "1335159"
  }
]