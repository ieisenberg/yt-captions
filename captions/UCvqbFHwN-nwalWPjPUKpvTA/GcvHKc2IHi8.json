[
  {
    "start": "0",
    "end": "159000"
  },
  {
    "text": "um good morning everyone uh Welcome to our presentation on manage more clusters with les Hassel with Argo CD application",
    "start": "840",
    "end": "8840"
  },
  {
    "text": "set um just to in start by introducing ourselves um my name is Jonathan West I",
    "start": "8840",
    "end": "14679"
  },
  {
    "text": "am a senior software engineer at Red Hat coming to you from Toronto Ontario",
    "start": "14679",
    "end": "21000"
  },
  {
    "text": "Canada hi hello everyone my name is shama Jan I'm a software engineer and a",
    "start": "21000",
    "end": "26080"
  },
  {
    "text": "maintainer of Aro projects and we start we thought we'd start out",
    "start": "26080",
    "end": "32279"
  },
  {
    "text": "by giving you a brief elevator pitch say 90 seconds or so on what application sets are how they work and some of the",
    "start": "32279",
    "end": "39120"
  },
  {
    "text": "features that you might find interesting there so application sets are a new kubernetes custom resource and a",
    "start": "39120",
    "end": "45360"
  },
  {
    "text": "controller that's responsible for managing that custom resource which works alongside an existing argocd",
    "start": "45360",
    "end": "50879"
  },
  {
    "text": "install so you specify uh with your application set a",
    "start": "50879",
    "end": "57039"
  },
  {
    "text": "template a generator which is used to cust cize that template and then the application set goes and creates",
    "start": "57039",
    "end": "63960"
  },
  {
    "text": "applications based on the template and Generator combination that you specified so you can think of application sets as",
    "start": "63960",
    "end": "70119"
  },
  {
    "text": "being kind of like a factory for AG CD application you specify the template the generator and then the application set",
    "start": "70119",
    "end": "76040"
  },
  {
    "text": "controller automatically outputs a bunch of applications that meet your specific application",
    "start": "76040",
    "end": "81759"
  },
  {
    "text": "specifications and that lets you do some really neat things like say uh if you've got uh git repositories containing 50",
    "start": "81759",
    "end": "88720"
  },
  {
    "text": "applications that you want to deploy Loy and you want to deploy them to 50 clusters you can manage all of those",
    "start": "88720",
    "end": "93960"
  },
  {
    "text": "combinations all those deployment combinations using uh argocd applications within an Argo CD",
    "start": "93960",
    "end": "100240"
  },
  {
    "text": "application set as a single unit so it's very easy to manage um those cluster",
    "start": "100240",
    "end": "106000"
  },
  {
    "text": "deployments can be customized using data from external data sources um so for",
    "start": "106000",
    "end": "111200"
  },
  {
    "text": "example as you scale up to add new clusters um as you add new git repositories as you new add new",
    "start": "111200",
    "end": "117320"
  },
  {
    "text": "applications to your existing git repositories those will automatically be detected by application sets and",
    "start": "117320",
    "end": "123439"
  },
  {
    "text": "deployed to your cluster using the template um it does automatically re",
    "start": "123439",
    "end": "128440"
  },
  {
    "text": "react to new external changes on the fly so as I said uh infrastructure changes",
    "start": "128440",
    "end": "134000"
  },
  {
    "text": "uh correspond to Cluster changes and that's both quick and customizable finally application sets",
    "start": "134000",
    "end": "139920"
  },
  {
    "text": "are based on Aro CD applications um so for folks that are already familiar with Argo CD uh and know and love it you're",
    "start": "139920",
    "end": "145840"
  },
  {
    "text": "going to get all the power that comes with Argo CD with Argo CD application sets So speaking of harnessing the power",
    "start": "145840",
    "end": "153280"
  },
  {
    "text": "of ARG CD I will now hand it over to sha to talk about argro CD and",
    "start": "153280",
    "end": "158480"
  },
  {
    "text": "kops thank you Jonathan so to begin with I'll start by giving a brief",
    "start": "158480",
    "end": "163760"
  },
  {
    "start": "159000",
    "end": "159000"
  },
  {
    "text": "introduction of kops I'm sure many of you might already be aware of it gitops",
    "start": "163760",
    "end": "169959"
  },
  {
    "text": "is a way of implementing continuous deployment of cloud native applications",
    "start": "169959",
    "end": "175040"
  },
  {
    "text": "it is a workflow that emphasis on G being the single source of Truth there",
    "start": "175040",
    "end": "180080"
  },
  {
    "text": "are two major components of that workflow first is that the desired state",
    "start": "180080",
    "end": "185200"
  },
  {
    "text": "of your software is stored in form of files on git and because we are talking about Cloud native your software",
    "start": "185200",
    "end": "191760"
  },
  {
    "text": "environment will be kubernetes and you'll be storing kubernetes manifests on git and the second part is that uh",
    "start": "191760",
    "end": "198599"
  },
  {
    "text": "there is a giops agent a piece of automation software whose sole responsibility is to make sure that the",
    "start": "198599",
    "end": "204920"
  },
  {
    "text": "desired Software State keeps on running on the rentown environment hence aroid",
    "start": "204920",
    "end": "210439"
  },
  {
    "text": "comes into picture so Argo CID is one such kops agent now what is",
    "start": "210439",
    "end": "217319"
  },
  {
    "start": "216000",
    "end": "216000"
  },
  {
    "text": "aroid so agosi is a getop spased continuous delivery tool for kubernetes",
    "start": "217319",
    "end": "223360"
  },
  {
    "text": "which uses git as source of Truth it is declarative and supports a variety of",
    "start": "223360",
    "end": "228720"
  },
  {
    "text": "configuration management tools such as caset jonet customize hel and any conf",
    "start": "228720",
    "end": "235720"
  },
  {
    "text": "any custom config management tool configured as config config management plug-in it is implemented as kubernetes",
    "start": "235720",
    "end": "243159"
  },
  {
    "text": "controller and CD and it provides a kubernetes dashboard with powerful sets",
    "start": "243159",
    "end": "250159"
  },
  {
    "text": "of kuber uh Resource Management features it makes sure that applications current",
    "start": "250159",
    "end": "255879"
  },
  {
    "text": "life state is same as the desired state so the diagram here explains how aroid",
    "start": "255879",
    "end": "262840"
  },
  {
    "text": "works first you will Define your applications manifest in git repository and then connect that repository with",
    "start": "262840",
    "end": "269720"
  },
  {
    "text": "ago CD and then applications can be syn programmatically either via grpc or rest",
    "start": "269720",
    "end": "276080"
  },
  {
    "text": "API or they can be SN via Argo CD UI or CLI now let's get to a quick",
    "start": "276080",
    "end": "284320"
  },
  {
    "text": "demo I'm sorry um so this is Argo CD's",
    "start": "287560",
    "end": "292840"
  },
  {
    "text": "user interface here you can see various applications that this Argo CD instance",
    "start": "292840",
    "end": "298840"
  },
  {
    "text": "is currently man in uh let's get started by creating a simple",
    "start": "298840",
    "end": "305240"
  },
  {
    "text": "application so for demo purposes I'll be using this git repository uh available",
    "start": "305240",
    "end": "311280"
  },
  {
    "text": "as g g this git repository of sample applications available as part of Argo",
    "start": "311280",
    "end": "316560"
  },
  {
    "text": "Pro and today we'll be deploying customized application",
    "start": "316560",
    "end": "323000"
  },
  {
    "text": "so as you can see argd detected all potential applications in the given git",
    "start": "330919",
    "end": "337160"
  },
  {
    "text": "repository that can be deployed in the kubernetes cluster for Destination cluster I'll",
    "start": "337160",
    "end": "344759"
  },
  {
    "text": "select the cluster where I want to deploy my application and the name",
    "start": "344759",
    "end": "351720"
  },
  {
    "text": "space here are some parameters that you can set for your application depending on the config configuration management",
    "start": "356560",
    "end": "363560"
  },
  {
    "text": "tool being used uh Aro City detected conf customized specification file in",
    "start": "363560",
    "end": "370199"
  },
  {
    "text": "the repository path and hence it is providing some customized specific",
    "start": "370199",
    "end": "376560"
  },
  {
    "text": "options so our application is now created uh Argos is Aros application is",
    "start": "377280",
    "end": "385000"
  },
  {
    "text": "a logical grouping of related resources managed uh managed and deployed as a",
    "start": "385000",
    "end": "390840"
  },
  {
    "text": "unit in the middle you can see the resource tree and this is showing that there are four resources currently being",
    "start": "390840",
    "end": "397759"
  },
  {
    "text": "managed in G two service objects one deployment and one stateful set and each",
    "start": "397759",
    "end": "403960"
  },
  {
    "text": "item in the resourcer is selectable and by clicking on them you can see further details here uh this is the diff of the",
    "start": "403960",
    "end": "412560"
  },
  {
    "text": "actual and the desired state of this resource and this diff is currently diff",
    "start": "412560",
    "end": "418840"
  },
  {
    "text": "this diff that you're currently seeing means that this resource is yet to be deployed so I'll go ahead and sync",
    "start": "418840",
    "end": "426360"
  },
  {
    "text": "deploy our application by clicking on sync",
    "start": "426360",
    "end": "430638"
  },
  {
    "text": "button so now our application is being deployed",
    "start": "431639",
    "end": "437080"
  },
  {
    "text": "as you can see argocd provides real-time activity of of the application and it",
    "start": "437080",
    "end": "442639"
  },
  {
    "text": "also shows relations between the objects for example this deployment created a",
    "start": "442639",
    "end": "448120"
  },
  {
    "text": "replica set which in turn created three pods and you can see further details",
    "start": "448120",
    "end": "453360"
  },
  {
    "text": "such as um pod summary pod events and pod",
    "start": "453360",
    "end": "459160"
  },
  {
    "text": "logs now Argos provides mainly two uh two statuses first is the health status",
    "start": "459160",
    "end": "466159"
  },
  {
    "text": "which which is the over overall health summary of your application and it is agos gets start by aggregating the",
    "start": "466159",
    "end": "472919"
  },
  {
    "text": "health of of its resources of the application resources and the second is a s sync",
    "start": "472919",
    "end": "479000"
  },
  {
    "text": "status which is the overall synchronization uh status of the application it lets you know if your",
    "start": "479000",
    "end": "485680"
  },
  {
    "text": "application is in sync with Git or if there is any configuration drift now um our application is is",
    "start": "485680",
    "end": "494199"
  },
  {
    "text": "deployed as an and is in sync with G uh so I will now go ahead and uh",
    "start": "494199",
    "end": "501560"
  },
  {
    "text": "deploy another version of our application and because this is git Ops",
    "start": "501560",
    "end": "506879"
  },
  {
    "text": "I'll make that change in git",
    "start": "506879",
    "end": "511440"
  },
  {
    "text": "okay after making that change I'll go ahead and refresh my",
    "start": "522399",
    "end": "527600"
  },
  {
    "text": "application as you can see Aro C detected the change and our deployment",
    "start": "527600",
    "end": "532720"
  },
  {
    "text": "is now out of sync and here you can see that the difference diff is in the",
    "start": "532720",
    "end": "539519"
  },
  {
    "text": "version it should be now at 0.2 but it's it's currently at 0.1 so I'll go ahead",
    "start": "539519",
    "end": "547320"
  },
  {
    "text": "and sync it once again so now our argd application is",
    "start": "547320",
    "end": "553800"
  },
  {
    "text": "deployed again and it and is in sync with G so that was a quick demonstration",
    "start": "553800",
    "end": "559959"
  },
  {
    "text": "of Argo CD I would do I I do want to mention",
    "start": "559959",
    "end": "565279"
  },
  {
    "start": "563000",
    "end": "563000"
  },
  {
    "text": "some key features of Argo CD are as shown on the screen Aro City provides",
    "start": "565279",
    "end": "570760"
  },
  {
    "text": "some many more powerful features that you can check out uh on its GitHub page",
    "start": "570760",
    "end": "577360"
  },
  {
    "text": "now I'll hand over my screen to",
    "start": "577360",
    "end": "580800"
  },
  {
    "text": "Johnson okay awesome thanks sha so um sha showed",
    "start": "589680",
    "end": "597320"
  },
  {
    "text": "us a demonstration of the Argo CD web UI uh so this is the",
    "start": "597320",
    "end": "603000"
  },
  {
    "text": "kubernetes representation of applications as we were seeing in the Argo CD web UI um so like this is the",
    "start": "603000",
    "end": "610760"
  },
  {
    "text": "central Uh custom resource that Argo CD uses to do uh giops um so because this",
    "start": "610760",
    "end": "618320"
  },
  {
    "text": "is gitops um we have a source repository that contains the uh communities",
    "start": "618320",
    "end": "625600"
  },
  {
    "text": "resources within a git repository in this case I'm deploying a GU book from the guestbook path so that looks like",
    "start": "625600",
    "end": "634800"
  },
  {
    "text": "this so just simple get repository with a deployment resource and a uh service so nice and",
    "start": "634800",
    "end": "645720"
  },
  {
    "text": "simple and I want to deploy that to a kubernetes cluster so I've got my source",
    "start": "645720",
    "end": "652000"
  },
  {
    "start": "651000",
    "end": "651000"
  },
  {
    "text": "these are the kuber these are the uh resources that I want to deploy and this is the destination for those resources",
    "start": "652000",
    "end": "658839"
  },
  {
    "text": "so guestbook namespace and the particular cluster which is just going to be my local cluster so you can think",
    "start": "658839",
    "end": "664360"
  },
  {
    "text": "of Argo CD and Argo CD applications as being the glue between git and",
    "start": "664360",
    "end": "669880"
  },
  {
    "text": "kubernetes so Argo CD looks at your git repository looks at all the manifests",
    "start": "669880",
    "end": "675560"
  },
  {
    "text": "that are there whether it just be like in this example a set of um simple yaml files or maybe something like Helm",
    "start": "675560",
    "end": "682160"
  },
  {
    "text": "customize and so on and uh applies them to the destination applies them to the",
    "start": "682160",
    "end": "688240"
  },
  {
    "text": "cluster once they're applied it's up to Argo C to keep those in sync so as we saw with Sha's demo if the git",
    "start": "688240",
    "end": "695680"
  },
  {
    "text": "repository changes it's up to Argo CD to make sure that what's in kubernetes is always consistent with what's in",
    "start": "695680",
    "end": "702440"
  },
  {
    "text": "git but notice that in the application CR there's only one source and one",
    "start": "702440",
    "end": "708399"
  },
  {
    "text": "destination so you can't say uh I want to specify uh you know I want to deploy",
    "start": "708399",
    "end": "714639"
  },
  {
    "text": "this one git repository to 10 clusters for like M multicluster deployments you can't say oh I want to deploy these 10 G",
    "start": "714639",
    "end": "721519"
  },
  {
    "text": "repositories this one cluster uh for something like a monor repo um it's just",
    "start": "721519",
    "end": "726760"
  },
  {
    "text": "a one one mapping between a single cluster and a single uh git repository",
    "start": "726760",
    "end": "732880"
  },
  {
    "text": "path um wouldn't it be great if we could say do many to- many relationships",
    "start": "732880",
    "end": "738320"
  },
  {
    "text": "between git repositories and clusters and I'm happy to say with application",
    "start": "738320",
    "end": "743680"
  },
  {
    "start": "743000",
    "end": "743000"
  },
  {
    "text": "sets uh you can do exactly that uh you can deploy two multiple clusters you can",
    "start": "743680",
    "end": "749639"
  },
  {
    "text": "deploy from a bunch of git repositories all from a single application set managing them as a single unit and I",
    "start": "749639",
    "end": "756199"
  },
  {
    "text": "will show you exactly how to do that as a demo in a few moments so the application set",
    "start": "756199",
    "end": "762079"
  },
  {
    "text": "controller is open source of course uh it's an Argo CD sub project hosted within the Argo Labs organization and",
    "start": "762079",
    "end": "769000"
  },
  {
    "text": "it's built from contributions from many different folks including individual contributions from folks from Red Hat",
    "start": "769000",
    "end": "774519"
  },
  {
    "text": "Snick Inuit MLB Alibaba cloud and more it inter Ates alongside an existing Aro",
    "start": "774519",
    "end": "781480"
  },
  {
    "text": "CD installation it's very easy to install alongside that and then they work together in tandem to do um",
    "start": "781480",
    "end": "788920"
  },
  {
    "text": "deployments so how exactly does an application set allow you to deploy from many different git repositories too many",
    "start": "788920",
    "end": "795839"
  },
  {
    "start": "791000",
    "end": "791000"
  },
  {
    "text": "different clusters well it starts out with the application set custom resource which is the main custom resource of the",
    "start": "795839",
    "end": "802240"
  },
  {
    "text": "application set project um in here there are a couple of fields which correspond",
    "start": "802240",
    "end": "808320"
  },
  {
    "text": "to the two major concepts of application sets we see generators which are responsible for generating template",
    "start": "808320",
    "end": "814639"
  },
  {
    "text": "parameters and template which is responsible for using those",
    "start": "814639",
    "end": "819839"
  },
  {
    "text": "parameters um so let's start with template um you might recognize this from something I showed you uh a couple",
    "start": "819839",
    "end": "825519"
  },
  {
    "text": "slides ago notice that we've got the source here which is a git repository",
    "start": "825519",
    "end": "830880"
  },
  {
    "text": "and the destination which is a kinetes cluster and you know that sounds",
    "start": "830880",
    "end": "836240"
  },
  {
    "text": "familiar because we saw that a few slides ago with the Argo CD application resource and that's because this",
    "start": "836240",
    "end": "842759"
  },
  {
    "text": "template field here is just uh an Argo CD application a templated aroc CD",
    "start": "842759",
    "end": "849519"
  },
  {
    "text": "application so the exact same set of fields that you get with argocd applications you get here so you get all",
    "start": "849519",
    "end": "856160"
  },
  {
    "text": "the power of Argo CD um but there is something new and that's these curly",
    "start": "856160",
    "end": "861560"
  },
  {
    "text": "braced uh parameter values here so two for cluster one for URL and those allow you to customize the",
    "start": "861560",
    "end": "869199"
  },
  {
    "text": "contents of the application of the uh deployment to a Target cluster with",
    "start": "869199",
    "end": "875000"
  },
  {
    "text": "template parameters so if we wanted to deploy to a different kubernetes uh",
    "start": "875000",
    "end": "880880"
  },
  {
    "text": "server or from a different path within git we can customize that within the template um so where do those parameters",
    "start": "880880",
    "end": "887519"
  },
  {
    "text": "come from you might ask well they come from generators generators are responsible for producing the parameters",
    "start": "887519",
    "end": "894079"
  },
  {
    "text": "that templates consume uh in this case I'm using the list generator uh it's one of six generators that are currently",
    "start": "894079",
    "end": "900519"
  },
  {
    "text": "within the application set controller and the list generator is very simple it's you within the yaml you specify a",
    "start": "900519",
    "end": "908199"
  },
  {
    "text": "set of values in this case we've got um a value called cluster value called URL",
    "start": "908199",
    "end": "913399"
  },
  {
    "text": "they're both strings and those are being inserted into the corresponding values within the",
    "start": "913399",
    "end": "919399"
  },
  {
    "text": "template so this means take um these values put it in the",
    "start": "919440",
    "end": "927320"
  },
  {
    "text": "template and then that c is uh this gate repository to be deployed to this",
    "start": "927320",
    "end": "933560"
  },
  {
    "text": "cluster so far so good um so that's all courtesy of the",
    "start": "933560",
    "end": "939199"
  },
  {
    "start": "938000",
    "end": "938000"
  },
  {
    "text": "list generator uh the list generator is definitely the simplest generator it's literally just a set of simple keys and",
    "start": "939199",
    "end": "945759"
  },
  {
    "text": "values um so everything that you want the template to do is going to be harder",
    "start": "945759",
    "end": "951160"
  },
  {
    "text": "coded upfront into the application set resource uh it's the least reactive but you can already start to see some of the",
    "start": "951160",
    "end": "957160"
  },
  {
    "text": "power here so in last side you slide you saw we had a single cluster now we've",
    "start": "957160",
    "end": "963920"
  },
  {
    "text": "got two so just by adding these two extra lines of yamel it now allows us to",
    "start": "963920",
    "end": "969079"
  },
  {
    "text": "deploy our guest book application to a second cluster so the first one was let's say an engineering team cluster",
    "start": "969079",
    "end": "975959"
  },
  {
    "text": "for development now just by adding these couple of lines we can deploy to the engineering teams production cluster",
    "start": "975959",
    "end": "982560"
  },
  {
    "text": "these two sets of values will be inserted into the template uh one template for each set of values and that",
    "start": "982560",
    "end": "989399"
  },
  {
    "text": "will cause uh Argo CD to deploy to each of those different clusters so you can already start to see the power of",
    "start": "989399",
    "end": "995680"
  },
  {
    "text": "generators um with even just this simple list generator example um so what are generators",
    "start": "995680",
    "end": "1002759"
  },
  {
    "start": "1001000",
    "end": "1001000"
  },
  {
    "text": "generators are responsible for generating parameters which are then rendered into the template into the fields of the application set resource",
    "start": "1002759",
    "end": "1010000"
  },
  {
    "text": "uh generators are usually named for and based on the particular external data",
    "start": "1010000",
    "end": "1015079"
  },
  {
    "text": "sources that they're generating template parameters for so for example the list generator is just a literal list of",
    "start": "1015079",
    "end": "1021399"
  },
  {
    "text": "values that you define within the application set resource itself the cluster generator is generating values",
    "start": "1021399",
    "end": "1027160"
  },
  {
    "text": "based on the Clusters that are defined in Arco CD and I'll show you that in a moment and the git generator is using",
    "start": "1027160",
    "end": "1033079"
  },
  {
    "text": "files or directories from a git repository in order to generate those template parameters so looking at the diagram um",
    "start": "1033079",
    "end": "1040839"
  },
  {
    "text": "you can see the general pattern that uh generators follow so the list generator",
    "start": "1040839",
    "end": "1046079"
  },
  {
    "text": "produces a set of parameters those parameters so in this case I've got a cluster field and a URL field and",
    "start": "1046079",
    "end": "1053360"
  },
  {
    "text": "a couple of rows corresponding to each cluster I want to deploy to so those sets of parameters",
    "start": "1053360",
    "end": "1059799"
  },
  {
    "text": "flow into the template uh the keys are replaced based",
    "start": "1059799",
    "end": "1066559"
  },
  {
    "start": "1061000",
    "end": "1061000"
  },
  {
    "text": "on the keys from the parameters as we saw and for each row you get a",
    "start": "1066559",
    "end": "1072480"
  },
  {
    "text": "corresponding application so for the engineering Dev cluster that's going to be one Argo CD application called",
    "start": "1072480",
    "end": "1079440"
  },
  {
    "text": "engineering Dev guest book deploying to the dev cluster uh one application called engineering prod guest book",
    "start": "1079440",
    "end": "1085919"
  },
  {
    "text": "deploying to the prod cluster again corresponding to each of these rows and it's up to Argo CD from there to",
    "start": "1085919",
    "end": "1092159"
  },
  {
    "text": "actually look at these application resources and do the the deployments to",
    "start": "1092159",
    "end": "1097440"
  },
  {
    "text": "kubernetes uh from the git repositories that are included in those individual uh",
    "start": "1097440",
    "end": "1104039"
  },
  {
    "text": "applications so that's the application set data flow in a nutshell generators produce parameters templates consume",
    "start": "1104039",
    "end": "1112240"
  },
  {
    "text": "parameters uh and then uh the application set controller turns those",
    "start": "1112240",
    "end": "1117559"
  },
  {
    "text": "uh rendered templates into Argo CD applications uh and from there it's the",
    "start": "1117559",
    "end": "1122679"
  },
  {
    "text": "responsibility of Argo CD to actually uh deploy those to the cluster to look at the gate repository compare it with",
    "start": "1122679",
    "end": "1129159"
  },
  {
    "text": "what's in kubernetes and keep them in sync um so that's enough talking for the",
    "start": "1129159",
    "end": "1134440"
  },
  {
    "text": "time being uh let me show you a demo of all that",
    "start": "1134440",
    "end": "1139480"
  },
  {
    "text": "so I'm going to jump over to my uh Argo CD installation here and you'll notice",
    "start": "1139480",
    "end": "1144960"
  },
  {
    "text": "uh that I have no applications to find at the moment and I'm going to bring up my",
    "start": "1144960",
    "end": "1151760"
  },
  {
    "text": "application set resource um this is uh nearly exactly the same as the one I just showed you um so it's a list",
    "start": "1151760",
    "end": "1159240"
  },
  {
    "text": "generator with a couple of values one for engineering Dev one for engineering prod uh we're deploying our guest book",
    "start": "1159240",
    "end": "1165840"
  },
  {
    "text": "and we're doing it from the application set repo uh customizing the server field the namespace field and the name so I",
    "start": "1165840",
    "end": "1174400"
  },
  {
    "text": "can apply this example to our rocd namespace and you're",
    "start": "1174400",
    "end": "1182200"
  },
  {
    "text": "going to see that the application set controller is going to pick that up and automatically generate argocd",
    "start": "1182200",
    "end": "1187799"
  },
  {
    "text": "applications for each of those one for each cluster that we want to deploy to so in our list we had the prod cluster",
    "start": "1187799",
    "end": "1193960"
  },
  {
    "text": "the dev cluster and here you see the application set has read the application set uh CR and generated the",
    "start": "1193960",
    "end": "1200440"
  },
  {
    "text": "corresponding Argo CD applications so um uh because I have am using manual sync",
    "start": "1200440",
    "end": "1207320"
  },
  {
    "text": "um I can go in and click sync and Argo CD is going to do the actual",
    "start": "1207320",
    "end": "1212720"
  },
  {
    "text": "deployment but you can also use Argo CD's automated sync to automatically have it deploy applications as soon as",
    "start": "1212720",
    "end": "1219679"
  },
  {
    "text": "they're created by the application app um so just as we saw with shyama's demo we've got our service and deployment",
    "start": "1219679",
    "end": "1226440"
  },
  {
    "text": "created the replica sets going it's creating pods and yeah AR CD is doing",
    "start": "1226440",
    "end": "1231679"
  },
  {
    "text": "its thing and keeping the kubernetes cluster namespace in sync with the git",
    "start": "1231679",
    "end": "1236840"
  },
  {
    "text": "repository that we have defined for it but as I said you can customize",
    "start": "1236840",
    "end": "1244039"
  },
  {
    "text": "applications based on the contents of the application set template so I can go into our",
    "start": "1244039",
    "end": "1250080"
  },
  {
    "text": "list and for example just make a simple change let's say I want to rename our applications by adding demo in front of",
    "start": "1250080",
    "end": "1257679"
  },
  {
    "text": "them for example now normally what I would have to do if I want to do this within the web UI is I would have to like go into app details click edit um",
    "start": "1257679",
    "end": "1265320"
  },
  {
    "text": "make the change that I want save that and so on and I would have to do that for every single application that's defined here I can just edit this single",
    "start": "1265320",
    "end": "1273720"
  },
  {
    "text": "uh resource the single application set adjusting the template saving",
    "start": "1273720",
    "end": "1280880"
  },
  {
    "text": "that applying it and it will automatically take effect for all of the applications that we have",
    "start": "1280880",
    "end": "1287520"
  },
  {
    "text": "defined so now you see it's now says demo for each of them so prod and guestbook and this is our old one it",
    "start": "1287520",
    "end": "1294559"
  },
  {
    "text": "will be deleted as soon as it finishes syncing in order to stay uh in sync with the new",
    "start": "1294559",
    "end": "1300600"
  },
  {
    "text": "template so just like that um and there it goes so just like that you can see",
    "start": "1300600",
    "end": "1307000"
  },
  {
    "text": "how I'm able to make changes to the application set resource and it will automatically affect all of the child",
    "start": "1307000",
    "end": "1313640"
  },
  {
    "text": "applications so I can put this back and I can do something like say",
    "start": "1313640",
    "end": "1318799"
  },
  {
    "text": "change the name space that they're deploying to so let's say three and",
    "start": "1318799",
    "end": "1324200"
  },
  {
    "text": "four apply that and nice and fast guestbook three guestbook",
    "start": "1324200",
    "end": "1332120"
  },
  {
    "text": "four finally we can just delete the parent application",
    "start": "1332120",
    "end": "1337679"
  },
  {
    "text": "set and it will automatically delete all the child",
    "start": "1337679",
    "end": "1342559"
  },
  {
    "text": "applications um yeah so let's sum up everything that we just saw um so when you create an application set resource",
    "start": "1346840",
    "end": "1354320"
  },
  {
    "start": "1350000",
    "end": "1350000"
  },
  {
    "text": "the application set controller automatically detects that uh if you have generators specified that are based",
    "start": "1354320",
    "end": "1359799"
  },
  {
    "text": "on external sources like cluster resources uh like aroc CD uh clusters like git the application set controller",
    "start": "1359799",
    "end": "1366880"
  },
  {
    "text": "automatically detects those inserts them into the template of the application set and then the application set template is",
    "start": "1366880",
    "end": "1372559"
  },
  {
    "text": "rendered into argocd applications so as we saw uh in that particular example the list generator produced two applications",
    "start": "1372559",
    "end": "1379960"
  },
  {
    "text": "uh as soon as the application set was created as you modify the application set resource it automatically updates",
    "start": "1379960",
    "end": "1386159"
  },
  {
    "text": "all the child applications and when you delete the application set resource it deletes all of the applications so the",
    "start": "1386159",
    "end": "1392120"
  },
  {
    "text": "application set and it's child applications are always kept in sync so that way all you need to worry about is",
    "start": "1392120",
    "end": "1397960"
  },
  {
    "text": "what's in the contents of the application set you don't need to worry about the contents of the individual",
    "start": "1397960",
    "end": "1403120"
  },
  {
    "text": "applications ever deviating from from what you have defined within the template the actual deployment of",
    "start": "1403120",
    "end": "1409840"
  },
  {
    "text": "applications Remains the responsibility of Argo CD so as we saw in Sha's demo uh",
    "start": "1409840",
    "end": "1415679"
  },
  {
    "text": "Argo CD uh will uh see your applications and as soon as you click sync or if",
    "start": "1415679",
    "end": "1421559"
  },
  {
    "text": "using automated sync um Argo CD will automatically start syncing them but it's still Argo CD's responsibility to",
    "start": "1421559",
    "end": "1428279"
  },
  {
    "text": "actually deploy those application sets the only respon uh that those applications the only responsibility of",
    "start": "1428279",
    "end": "1435159"
  },
  {
    "text": "the application set controller is to create these the actual connection to the cluster and say um identifying",
    "start": "1435159",
    "end": "1441720"
  },
  {
    "text": "deployments and services and doing all that comparison and all that good get up stuff that Still Remains uh the domain",
    "start": "1441720",
    "end": "1447960"
  },
  {
    "text": "of Aro",
    "start": "1447960",
    "end": "1450480"
  },
  {
    "text": "CD um so as I mentioned the power of templates comes from the generators that",
    "start": "1453279",
    "end": "1458320"
  },
  {
    "text": "feed into them um there are many different generators for many different use cases um we already saw the list",
    "start": "1458320",
    "end": "1464320"
  },
  {
    "text": "generator where you had to hardcode a set of values in order to insert them into the template but they are much more",
    "start": "1464320",
    "end": "1470559"
  },
  {
    "text": "powerful generators um starting with the cluster generator you'll recall with the list",
    "start": "1470559",
    "end": "1476159"
  },
  {
    "text": "generator we actually had to hardcode the particular clusters that we wanted to deploy to um and that's fine but what",
    "start": "1476159",
    "end": "1483559"
  },
  {
    "text": "if you could automatically detect the Clusters that are available so within Argo CD within the settings there is",
    "start": "1483559",
    "end": "1492880"
  },
  {
    "text": "this clusters uh section where you can see all of the Clusters that Argo CD has",
    "start": "1492880",
    "end": "1498399"
  },
  {
    "text": "access to in my case it's very simple I'm just running on my laptop so there's the one but if you're doing multicluster",
    "start": "1498399",
    "end": "1503880"
  },
  {
    "text": "deployments you could have like I don't know 5 10 50 you know as many as you want with Argo CD managing all of",
    "start": "1503880",
    "end": "1511760"
  },
  {
    "text": "those so what if rather than needing to hardcode them as we did with the list",
    "start": "1511760",
    "end": "1517039"
  },
  {
    "start": "1514000",
    "end": "1514000"
  },
  {
    "text": "generator we could just pull all of those clusters that were already defined with an Argo CD and that's exactly what",
    "start": "1517039",
    "end": "1522919"
  },
  {
    "text": "the cluster generator does it looks at the Clusters defined with an Argo CD and all you need to do is just to specify",
    "start": "1522919",
    "end": "1528880"
  },
  {
    "text": "this simple one line of yl and it will automatically detect those and start deploying your applications to them from",
    "start": "1528880",
    "end": "1535200"
  },
  {
    "text": "giops so pulling the name and server values from Argo CD and deploying your applications now let's say you've got um",
    "start": "1535200",
    "end": "1543200"
  },
  {
    "text": "prod clusters and Dev clusters maybe you only want to deploy to development you can Target a subset of clusters very",
    "start": "1543200",
    "end": "1549320"
  },
  {
    "text": "easily using cluster annotations you can see the docs from that and as new clusters are added or removed the",
    "start": "1549320",
    "end": "1555520"
  },
  {
    "text": "application set controller automatically detects that and updates the corresponding",
    "start": "1555520",
    "end": "1561200"
  },
  {
    "text": "applications um next we've got the git directory generator um many folks uh",
    "start": "1561919",
    "end": "1567720"
  },
  {
    "text": "follow the gups workflow of having a set of uh kubernetes resources for their",
    "start": "1567720",
    "end": "1573039"
  },
  {
    "text": "applications defined within a directory this is known as the monor repo approach so let me show you what that looks like",
    "start": "1573039",
    "end": "1579120"
  },
  {
    "text": "real quick so within this cluster add-ons directory I've got a couple of",
    "start": "1579120",
    "end": "1585520"
  },
  {
    "text": "applications I want to deploy one called Argo workflows and one called Prometheus operator Argo workflows is the Argo",
    "start": "1585520",
    "end": "1592360"
  },
  {
    "text": "projects workflow controller for orchestration uh Prometheus operator is",
    "start": "1592360",
    "end": "1598000"
  },
  {
    "text": "uh for um application monitoring uh workflows is customized",
    "start": "1598000",
    "end": "1603799"
  },
  {
    "text": "and promethus operator is Helm wouldn't it be great if um we could just scan",
    "start": "1603799",
    "end": "1609720"
  },
  {
    "text": "this git folder for all the applications contained within it and automatically deploy the applications that are found",
    "start": "1609720",
    "end": "1615360"
  },
  {
    "text": "there so you know not surprisingly that is exactly what the uh git directory",
    "start": "1615360",
    "end": "1622360"
  },
  {
    "text": "generator will do it will scan through the path you have defined for",
    "start": "1622360",
    "end": "1628279"
  },
  {
    "start": "1624000",
    "end": "1624000"
  },
  {
    "text": "applications contained within that git repository within the path and deploy them to the cluster and again that's",
    "start": "1628279",
    "end": "1635000"
  },
  {
    "text": "great for folks that have multiple workloads or components or microservices uh and they have",
    "start": "1635000",
    "end": "1640279"
  },
  {
    "text": "kubernetes resources defined for them within a single git repository this will find all of them and deploy all of them",
    "start": "1640279",
    "end": "1646200"
  },
  {
    "text": "all from this single application set um some folks prefer the opposite",
    "start": "1646200",
    "end": "1651399"
  },
  {
    "text": "approach when they're doing gitops uh so rather than having one single uh git",
    "start": "1651399",
    "end": "1656960"
  },
  {
    "text": "repository containing the resources for multiple applications instead they have a onetoone relationship between",
    "start": "1656960",
    "end": "1662480"
  },
  {
    "text": "application and repository so one application and its kubernetes resources go in one repository one to one so for",
    "start": "1662480",
    "end": "1670840"
  },
  {
    "text": "them we have the SCM provider generator which will scan a GitHub or gitlab",
    "start": "1670840",
    "end": "1677440"
  },
  {
    "start": "1671000",
    "end": "1671000"
  },
  {
    "text": "organization uh in this case I'm using uh GitHub and it will look for all the",
    "start": "1677440",
    "end": "1682559"
  },
  {
    "text": "repositories within the organization that match a particular name so in this case example apps so if I had like",
    "start": "1682559",
    "end": "1688080"
  },
  {
    "text": "example apps one example apps two example apps three the SC provider will scan through my organization",
    "start": "1688080",
    "end": "1694360"
  },
  {
    "text": "automatically find all those uh applications that match that path or or that",
    "start": "1694360",
    "end": "1700240"
  },
  {
    "text": "name and deploy them to the kubernetes cluster um using the template values",
    "start": "1700240",
    "end": "1706000"
  },
  {
    "text": "that are uh generated by the SC provider um so this is great for folks that um",
    "start": "1706000",
    "end": "1712000"
  },
  {
    "text": "prefer to do gitops by having one git repository per application and this",
    "start": "1712000",
    "end": "1717480"
  },
  {
    "text": "allows them again to manage that all the deployment of those all from a single application",
    "start": "1717480",
    "end": "1723679"
  },
  {
    "text": "set the third git based generator is the git file generator um real quick this",
    "start": "1723679",
    "end": "1728880"
  },
  {
    "start": "1725000",
    "end": "1725000"
  },
  {
    "text": "allows you to Define uh Json or yl files within a git repository and uh have them",
    "start": "1728880",
    "end": "1735720"
  },
  {
    "text": "automatically processed and parsed and inserted into the application template uh by the application Set uh this allows",
    "start": "1735720",
    "end": "1742320"
  },
  {
    "text": "you to have more fine grain control over individual fields of the template versus other",
    "start": "1742320",
    "end": "1748919"
  },
  {
    "text": "generators for the last two generators uh we really start getting into the kind of meta generators uh especially with",
    "start": "1748919",
    "end": "1756080"
  },
  {
    "start": "1750000",
    "end": "1750000"
  },
  {
    "text": "the Matrix generator The Matrix generator combines the output of two generators allowing you to gain the",
    "start": "1756080",
    "end": "1762399"
  },
  {
    "text": "advantages of both so what does that mean so let's say that you know you like",
    "start": "1762399",
    "end": "1767880"
  },
  {
    "text": "the idea of using the git directory generator to uh find every application",
    "start": "1767880",
    "end": "1773640"
  },
  {
    "text": "within a path of your repository and you like the idea of using the cluster generator to deploy to",
    "start": "1773640",
    "end": "1779480"
  },
  {
    "text": "every cluster that's defined within aroc CD but what if you want to do both what if you want to find every application",
    "start": "1779480",
    "end": "1786360"
  },
  {
    "text": "and deploy it to every cluster so before you couldn't before you could just do either one or the other you either you",
    "start": "1786360",
    "end": "1793080"
  },
  {
    "text": "need to pick one of those two generators so either use the git generator to find all the applications or use the cluster",
    "start": "1793080",
    "end": "1798440"
  },
  {
    "text": "generator to deploy to all the Clusters fortunately with the Matrix generator you no longer have to uh choose you can",
    "start": "1798440",
    "end": "1805640"
  },
  {
    "text": "now have both of them together so we've got the git generator here the cluster",
    "start": "1805640",
    "end": "1811440"
  },
  {
    "text": "generator here the git generator is going to run it's going to find all of your applications under the path you specify cluster generator is going to",
    "start": "1811440",
    "end": "1818279"
  },
  {
    "text": "run find all your clusters and then the parent Matrix generator is going to combine the two so let's say you have",
    "start": "1818279",
    "end": "1824440"
  },
  {
    "text": "five applications 10 clusters it's going to generate all 50 so 5 * 10 50",
    "start": "1824440",
    "end": "1831039"
  },
  {
    "text": "individual combinations and then automatically deploy them so with this Matrix generator using these two child",
    "start": "1831039",
    "end": "1837640"
  },
  {
    "text": "generators you can deploy every application in get to every argocd cluster so you can really start to see",
    "start": "1837640",
    "end": "1843399"
  },
  {
    "text": "the power of the Matrix generator here um it'll work with any two generators so",
    "start": "1843399",
    "end": "1848760"
  },
  {
    "text": "just as another example if you're following the uh organization with many repositories get Ops approach you could",
    "start": "1848760",
    "end": "1855760"
  },
  {
    "text": "have it stand through you could have the providers scan through your organization find all the repositories you could have",
    "start": "1855760",
    "end": "1862919"
  },
  {
    "text": "the git file generator with Json files to finding every environment that you want to deploy to and uh automatically",
    "start": "1862919",
    "end": "1870200"
  },
  {
    "text": "combine them and then deploy them to both in the exact same way so the possibilities really are",
    "start": "1870200",
    "end": "1875679"
  },
  {
    "text": "endless finally we've got the cluster decision resource generator which is definitely the most complex generator",
    "start": "1875679",
    "end": "1881600"
  },
  {
    "start": "1877000",
    "end": "1877000"
  },
  {
    "text": "but probably also the most powerful it allows you to Outsource the logic of which clusters to place applications on",
    "start": "1881600",
    "end": "1887919"
  },
  {
    "text": "to an external custom resource so here you actually have to write your own custom controller your own custom",
    "start": "1887919",
    "end": "1893880"
  },
  {
    "text": "resource Define rules within that custom resource and have your custom controller",
    "start": "1893880",
    "end": "1899480"
  },
  {
    "text": "uh enforce them um but once you do that it allows you um to uh have those custom",
    "start": "1899480",
    "end": "1905519"
  },
  {
    "text": "rules toine exactly where your applications are deployed to on which clusters and the applications that",
    "start": "1905519",
    "end": "1911679"
  },
  {
    "text": "controller using this generator will automatically pick those up um so that is a lot of work um but fortunately uh",
    "start": "1911679",
    "end": "1918200"
  },
  {
    "text": "the open cluster management folks already have an example of this with their placement rule rule custom",
    "start": "1918200",
    "end": "1923399"
  },
  {
    "text": "resource where they have their own set of fancy complex rules for where applications should should go and um",
    "start": "1923399",
    "end": "1931639"
  },
  {
    "text": "it's easy to hook up that placement rule custom resource into application sets using this generator but this uh",
    "start": "1931639",
    "end": "1939480"
  },
  {
    "text": "generator will work with any Uh custom resource that meets the particular generic API contract that the generator",
    "start": "1939480",
    "end": "1946760"
  },
  {
    "text": "is looking for so uh hopefully all these generators",
    "start": "1946760",
    "end": "1951840"
  },
  {
    "start": "1951000",
    "end": "1951000"
  },
  {
    "text": "have piqued your interest in how you can use them to handle your own individual kubernetes deployment use cases uh at",
    "start": "1951840",
    "end": "1958120"
  },
  {
    "text": "Red Hat application sets are built into our red hat open shift gitops product along with Argo CD so the two are",
    "start": "1958120",
    "end": "1964639"
  },
  {
    "text": "bundled together uh for use on open shift and you can learn more about how to deploy using Argo CD application sets",
    "start": "1964639",
    "end": "1971240"
  },
  {
    "text": "and open shift giops in these two blog posts uh an introduction to application sets uh in open shift giops by myself",
    "start": "1971240",
    "end": "1978559"
  },
  {
    "text": "and danan Amed and getting started with application sets by Christian",
    "start": "1978559",
    "end": "1984240"
  },
  {
    "start": "1985000",
    "end": "1985000"
  },
  {
    "text": "Hernandez and uh over to yeah so yeah as Jonathan mentioned that with application",
    "start": "1987679",
    "end": "1994519"
  },
  {
    "text": "sets you can automatically deploy a kubernetes resource to multiple clusters",
    "start": "1994519",
    "end": "1999559"
  },
  {
    "text": "from good repository and manage all those relationships as a single application set CR so leveraging that at",
    "start": "1999559",
    "end": "2007840"
  },
  {
    "text": "into it we adopted application sets to automate the add-ons installation",
    "start": "2007840",
    "end": "2012880"
  },
  {
    "text": "customized across multiple kubernetes clusters one such addon being Argo",
    "start": "2012880",
    "end": "2018639"
  },
  {
    "text": "rollouts so Argo rollouts is a rollout controller of Argo projects and it is a",
    "start": "2018639",
    "end": "2024480"
  },
  {
    "text": "progressive delivery controller that provides Advanced update policies such as blue green and Canary for kuun",
    "start": "2024480",
    "end": "2032440"
  },
  {
    "text": "clusters so at into it each cluster is allocated an argor rollout instance",
    "start": "2032440",
    "end": "2038080"
  },
  {
    "text": "which in turn maps to an argocd application and in order to automate the",
    "start": "2038080",
    "end": "2043240"
  },
  {
    "text": "roll outs installation we selected the git file generator of application sets",
    "start": "2043240",
    "end": "2048520"
  },
  {
    "text": "as Jonathan mentioned before uh hence whenever an AO roll out is needed to be installed on a new cluster a folder",
    "start": "2048520",
    "end": "2055878"
  },
  {
    "text": "containing the respective configuration file is added to the git repository as",
    "start": "2055879",
    "end": "2062000"
  },
  {
    "text": "you can see on the screen um and the application set controller then detects",
    "start": "2062000",
    "end": "2067720"
  },
  {
    "text": "the newly added configuration file and creates an Argo CD application which in turns or installs the Argo rollout",
    "start": "2067720",
    "end": "2075679"
  },
  {
    "text": "instance on that new cluster so yeah that's all about application sets to uh",
    "start": "2075679",
    "end": "2083480"
  },
  {
    "text": "to find out more about application sets please visit our GitHub page or read our",
    "start": "2083480",
    "end": "2089520"
  },
  {
    "text": "blog or connect with us on slack thank you everyone for watching and have a",
    "start": "2089520",
    "end": "2095398"
  },
  {
    "text": "great time thanks everyone",
    "start": "2095399",
    "end": "2099640"
  }
]