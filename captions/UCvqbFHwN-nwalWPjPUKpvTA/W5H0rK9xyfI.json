[
  {
    "text": "okay we're gonna go ahead and get started then so welcome everyone as you",
    "start": "319",
    "end": "5640"
  },
  {
    "text": "can see my talk is titled of off the beaten path and explores guide to Coober Nettie's I actually was influenced by",
    "start": "5640",
    "end": "11130"
  },
  {
    "text": "the title by one of my co-workers because that's how he described what we were doing with some of the stuff we're trying to figure out inside a coup",
    "start": "11130",
    "end": "16590"
  },
  {
    "text": "brunettes but my name is Taylor Thomas I'm a cloud software engineer engineer at Intel I work with their continuous",
    "start": "16590",
    "end": "23369"
  },
  {
    "text": "integration continuous delivery pipeline on Cooper Nettie's of course some direct work with Cooper neighs and also the",
    "start": "23369",
    "end": "29609"
  },
  {
    "text": "snap telemetry framework she'll explain in a second and I'm one of the meetup organizers for the docker meet up in",
    "start": "29609",
    "end": "36180"
  },
  {
    "text": "Portland and I'm also a home automation amateur much to the annoyance of my wife a lot of times and a hiker and if you",
    "start": "36180",
    "end": "43860"
  },
  {
    "text": "want to see how some of the other stuff I'd and there's my twitter and github handles so i just want to give an overview of",
    "start": "43860",
    "end": "50730"
  },
  {
    "text": "what i'm going to try to go over here and the goal what we're going over so just as a note this is for intermediate",
    "start": "50730",
    "end": "56730"
  },
  {
    "text": "to advanced users of cooper Nettie's i'm expecting that you've used it and have an idea of what the different objects",
    "start": "56730",
    "end": "62850"
  },
  {
    "text": "are and how to use them if you're not at that point you'll still probably get some stuff out of this but we do i'm",
    "start": "62850",
    "end": "68130"
  },
  {
    "text": "going to be digging pretty deep into different code examples of how we're setting this up so",
    "start": "68130",
    "end": "75200"
  },
  {
    "text": "basically all know that Cooper neighs is really easy to kind of just show off your cool cat blog with an engine",
    "start": "75200",
    "end": "80970"
  },
  {
    "text": "xserver but once you start going down into the bowels of an application and trying to get real production",
    "start": "80970",
    "end": "87390"
  },
  {
    "text": "applications running it becomes a lot more difficult because you have to handle configuration monitoring application lifecycle management all",
    "start": "87390",
    "end": "94049"
  },
  {
    "text": "those different parts of an application so I've organized this to kind of follow the journey we took and to show the",
    "start": "94049",
    "end": "99540"
  },
  {
    "text": "examples of what we had to figure out along the way so we'll go through the what we're doing as a team and what my",
    "start": "99540",
    "end": "106140"
  },
  {
    "text": "team is doing right now how we started it out then that question of things work now what and then are the things",
    "start": "106140",
    "end": "112409"
  },
  {
    "text": "actually working and then how we tested everything and a note about documentation so just a note about what",
    "start": "112409",
    "end": "119430"
  },
  {
    "text": "we're doing we are still in a nascent stage of in terms of like size but we have about 17 different repos that goes",
    "start": "119430",
    "end": "125700"
  },
  {
    "text": "up about once every two weeks because of all the plugins that we use with snap all the different Cooper Nettie's",
    "start": "125700",
    "end": "131730"
  },
  {
    "text": "applications we test John Jenkins before we deploy them we have about thirty two",
    "start": "131730",
    "end": "136780"
  },
  {
    "text": "jobs a day that was about two weeks ago so it's probably gone up since then that goes up quite often and then we have a",
    "start": "136780",
    "end": "143470"
  },
  {
    "text": "CI CD system has to be able to run bare metal tests VMs and containers for unit",
    "start": "143470",
    "end": "148959"
  },
  {
    "text": "tests or or large integration tests between different parts of an application we're also running Cassandra to save different data sets from some of",
    "start": "148959",
    "end": "156280"
  },
  {
    "text": "the other projects that we're working on and we do a lot of our telemetry gathering with snap now just a quick overview of what snap is if you want to",
    "start": "156280",
    "end": "162819"
  },
  {
    "text": "find out the full details you can come talk to one of us of the intel booth or talk to really anyone here from intel",
    "start": "162819",
    "end": "167920"
  },
  {
    "text": "right now but snap is a really cool tool that makes data gathering really easy",
    "start": "167920",
    "end": "173200"
  },
  {
    "text": "instead of it being very specific to a specific type of data it puts an",
    "start": "173200",
    "end": "178269"
  },
  {
    "text": "abstract interface in front of it where it'll expose all the metrics a machine can get whether those be application",
    "start": "178269",
    "end": "183370"
  },
  {
    "text": "metrics CPU metrics memory or things like docker instruction docker statistics and so",
    "start": "183370",
    "end": "190680"
  },
  {
    "text": "snap is a tool that we use for monitoring in Coober Nettie's and i'll show how we do use that later so I said",
    "start": "190680",
    "end": "197530"
  },
  {
    "text": "in the beginning we're going to go over why we chose Kuber Nettie's some things about configuration using the KU",
    "start": "197530",
    "end": "203260"
  },
  {
    "text": "b√©arnaise api volumes containers and technical debt and so the question why we chose cabernets it's actually really",
    "start": "203260",
    "end": "209440"
  },
  {
    "text": "interesting to see why people chose to use cooper Nettie's because most of us are here because we're either using it",
    "start": "209440",
    "end": "214630"
  },
  {
    "text": "or interested in it so I'm not like trying to convince anybody I'm just I'm just given the reason why we did so the thing that really got us for it was we",
    "start": "214630",
    "end": "221709"
  },
  {
    "text": "can iterate and deploy quickly now that took some work to get to it's not something magical that happens when you start in Cooper Nettie's but once you",
    "start": "221709",
    "end": "229090"
  },
  {
    "text": "have it up and running we can deploy things very quickly it also allows you some really fine grained control of your",
    "start": "229090",
    "end": "234489"
  },
  {
    "text": "applications if you are here for the last presentation we talked a little bit about the scheduling resources and",
    "start": "234489",
    "end": "240220"
  },
  {
    "text": "things I mean you can get some very fine grain detailed tweaking of your applications and coo brunette ease and",
    "start": "240220",
    "end": "245290"
  },
  {
    "text": "the different API objects are very logical so well it also is just really",
    "start": "245290",
    "end": "251170"
  },
  {
    "text": "when I talk about fast spin up speeds here I'm talking like we can spin up Cassandra or Jenkins in about two",
    "start": "251170",
    "end": "256539"
  },
  {
    "text": "minutes I'm a minute to two minutes so it's a really quick process once we get it all set up so first thing",
    "start": "256539",
    "end": "262320"
  },
  {
    "text": "configuration and we have a set up Jenkins now just two out of curiosity how of you have set up or configure to",
    "start": "262320",
    "end": "267970"
  },
  {
    "text": "Jenkins server okay yeah that's what I thought okay so it's a little complex",
    "start": "267970",
    "end": "273389"
  },
  {
    "text": "like this or maybe this or this one",
    "start": "273389",
    "end": "278740"
  },
  {
    "text": "that's not even the whole let's lie like I can keep going for about three or four more I think I tried just guessing but",
    "start": "278740",
    "end": "284530"
  },
  {
    "text": "based on how much I was grabbing and that doesn't even include all the security settings or any of that in",
    "start": "284530",
    "end": "290889"
  },
  {
    "text": "other stuff you have to configure for Jenkins to work and so how do we solve this in our case so we",
    "start": "290889",
    "end": "297669"
  },
  {
    "text": "had to use the coup burn ASAP I'm going to explain a little bit about what we did with Jenkins and some of the other things we did as well",
    "start": "297669",
    "end": "303180"
  },
  {
    "text": "so the issue we ran into with Jenkins is that to bootstrap things in Jenkins we",
    "start": "303180",
    "end": "308229"
  },
  {
    "text": "hit you have to have we have to password so we use github Oh off we need an OAuth token we need a password to be able to",
    "start": "308229",
    "end": "314229"
  },
  {
    "text": "access repos we need a private key and you can't just shove that stuff around really easily in Jenkins you can't just",
    "start": "314229",
    "end": "320320"
  },
  {
    "text": "set it to an environment variable or or that you have to have in a config and so it was we really couldn't do it just by",
    "start": "320320",
    "end": "327310"
  },
  {
    "text": "putting in a config mappers or a secret and so we had to use a bootstrapping",
    "start": "327310",
    "end": "332740"
  },
  {
    "text": "script which i'll show how we did that to get all those things set up we also had to use it to get information and",
    "start": "332740",
    "end": "338410"
  },
  {
    "text": "snap because snap when it's running in the daemon set to gather all the data it's running on a host network and if",
    "start": "338410",
    "end": "344289"
  },
  {
    "text": "you haven't ran into this before if you have something running on a host network it can't resolve the dns address of services so we had to use the API to get",
    "start": "344289",
    "end": "352510"
  },
  {
    "text": "those so let me just explain how many did it so tokens this is a lot of code I have my slides up on there so you can",
    "start": "352510",
    "end": "358300"
  },
  {
    "text": "look at it but I also have some snippets that'll you can access online later but the first section up at the top the blue",
    "start": "358300",
    "end": "363460"
  },
  {
    "text": "code basically every single pod inside of every single container inside of a",
    "start": "363460",
    "end": "369880"
  },
  {
    "text": "pod has tokens mounted by the bike uber Nettie's inside of it at the VAR run",
    "start": "369880",
    "end": "376270"
  },
  {
    "text": "secrets kubernetes io service account inside of there you have a token namespace that the pot is in and a",
    "start": "376270",
    "end": "381940"
  },
  {
    "text": "certificate bundle so we in our case just grab that token straight from the",
    "start": "381940",
    "end": "388000"
  },
  {
    "text": "the file system in there and then use the environment variables that are set inside of a container as well and the",
    "start": "388000",
    "end": "394659"
  },
  {
    "text": "big ones to know in this case are the kuru Nettie service host and the kuru Nettie's",
    "start": "394659",
    "end": "400360"
  },
  {
    "text": "which it's listening on in this case ours running I think just the default 443 but if you're running a custom setup",
    "start": "400360",
    "end": "406750"
  },
  {
    "text": "or configuration of it that port will be correct and so then we just use that to create the proper string for what we're",
    "start": "406750",
    "end": "413169"
  },
  {
    "text": "doing to call the to call the api so once we do that we set up the connection and the next big part is that green line",
    "start": "413169",
    "end": "419740"
  },
  {
    "text": "where we have the ad request property this is where you add the authorization header with that token so it allows you",
    "start": "419740",
    "end": "425949"
  },
  {
    "text": "to do is just a basic HTTP call I'm using that token you just have to make sure you put it in the in the proper",
    "start": "425949",
    "end": "432009"
  },
  {
    "text": "header so that it actually works for you and in case you're interested in doing this in Jenkins I also included that",
    "start": "432009",
    "end": "437590"
  },
  {
    "text": "that's right down here I've once again full code snippets online but you basically have something called a",
    "start": "437590",
    "end": "443469"
  },
  {
    "text": "username and password credentials implementation have one of those for private key and a bunch of other stuff but you can set the ID which I just set",
    "start": "443469",
    "end": "450400"
  },
  {
    "text": "to blah blah and then the username and password which I got out from the JSON response from the API and so",
    "start": "450400",
    "end": "456060"
  },
  {
    "text": "that was the first use we had of it now this tok using those tokens are very helpful in case you have to do some",
    "start": "456060",
    "end": "462129"
  },
  {
    "text": "custom configuration or setting some setting a value in the API or retrieving a value from the API the next thing is",
    "start": "462129",
    "end": "468490"
  },
  {
    "text": "the go library so as I said with snap we couldn't resolve the snap service IP address and",
    "start": "468490",
    "end": "474300"
  },
  {
    "text": "so what we did instead is we had to go grab all of this we grabbed the services from the API now this is just a really",
    "start": "474300",
    "end": "480490"
  },
  {
    "text": "this is like the first the first version we could have filtered it because you can see in that green line right there",
    "start": "480490",
    "end": "485620"
  },
  {
    "text": "that I all you have to do is do a label selector and you can actually select the",
    "start": "485620",
    "end": "491279"
  },
  {
    "text": "service you're looking for using that label but creating a client is really easy because the go library knows to",
    "start": "491279",
    "end": "497349"
  },
  {
    "text": "look for the tokens in that directory that I was talking about earlier so all you have to do is client new and cluster",
    "start": "497349",
    "end": "503500"
  },
  {
    "text": "and you can connect straight up to the API and in our case we're able to just look for the service and then access the service IP address and set that as the",
    "start": "503500",
    "end": "510759"
  },
  {
    "text": "IP address that snap needed to connect to to get everything bootstrapped and set up so it's very useful if your code is",
    "start": "510759",
    "end": "517180"
  },
  {
    "text": "already and go like we had here but if it's not and go there's other options like I'm showing before now last one is",
    "start": "517180",
    "end": "523930"
  },
  {
    "text": "you can also saw coup control or coop cuddle you pick your poison of how you want to say that and",
    "start": "523930",
    "end": "529020"
  },
  {
    "text": "this is actually very helpful as well because it knows where to look for the tokens as well inside the inside of the",
    "start": "529020",
    "end": "535430"
  },
  {
    "text": "that same directory and so we use this for our proxy will you use agents inside",
    "start": "535430",
    "end": "541190"
  },
  {
    "text": "of Jenkins that actually act as a proxy into the cluster to run tests and I'll show a running example that basically",
    "start": "541190",
    "end": "548029"
  },
  {
    "text": "you can just run any coop control command like you would from your your developer laptop or wherever it's",
    "start": "548029",
    "end": "553040"
  },
  {
    "text": "running from just by installing the binary into the container",
    "start": "553040",
    "end": "558130"
  },
  {
    "text": "so the next thing volumes now volumes first thing we learned about this is",
    "start": "558130",
    "end": "563269"
  },
  {
    "text": "that lots of different things can be volumes config maps and secrets are very similar in how they behave when they're mounted",
    "start": "563269",
    "end": "569240"
  },
  {
    "text": "you can also mount different types of persistent disks and a couple different things with that so a lot of times when",
    "start": "569240",
    "end": "576800"
  },
  {
    "text": "you just mount a config map if you have multiple keys inside that config map is going to mount each Keys its own file if",
    "start": "576800",
    "end": "582019"
  },
  {
    "text": "you want to map only one of those keys as a file or specific ones you can actually pass what's in that top example",
    "start": "582019",
    "end": "588560"
  },
  {
    "text": "of an items array and the items array can contain the key that you're looking for and you can actually rename what",
    "start": "588560",
    "end": "594829"
  },
  {
    "text": "that file is going to be called inside of the container in our case this is for our Jenkins and so we renamed the config",
    "start": "594829",
    "end": "600829"
  },
  {
    "text": "key to config dot XML so it went new would be an XML type then read it in in the Jenkins startup",
    "start": "600829",
    "end": "607459"
  },
  {
    "text": "process now also one thing I didn't include here but this is a very recent addition to one dot for so if you're on",
    "start": "607459",
    "end": "613699"
  },
  {
    "text": "one got for now you can take advantage of it one of the problems that we've had was that when you're setting especially",
    "start": "613699",
    "end": "618949"
  },
  {
    "text": "secrets like key values inside of a container it doesn't work unless it has a permission set of six hundred and so",
    "start": "618949",
    "end": "626360"
  },
  {
    "text": "you can actually do that now before you couldn't so there's two ways to do it the first one is you can give a default",
    "start": "626360",
    "end": "631670"
  },
  {
    "text": "mode to every single file in the config map that goes at the same level as name and items and so if you put a default",
    "start": "631670",
    "end": "639949"
  },
  {
    "text": "mode in there you can say default mode 600 and you'll and everything will be 600 if you want to set it individually you have to go and break everything out",
    "start": "639949",
    "end": "646850"
  },
  {
    "text": "into the items array and so inside of items there's a mode key that would go right there and you can say that's 600",
    "start": "646850",
    "end": "653510"
  },
  {
    "text": "so that's actually really knew it rolled out with one dot for just recently",
    "start": "653510",
    "end": "658720"
  },
  {
    "text": "now there can be problems when you're trying to mount some of these config maps in the same directory in our case",
    "start": "658720",
    "end": "665660"
  },
  {
    "text": "we had there's a there's a key called sub that allows you to do it but in Jenkins at least it doesn't like that",
    "start": "665660",
    "end": "671760"
  },
  {
    "text": "very much it tries to think that the it thinks the file has a lock on it for some reason which we're still troubleshooting but just be careful when",
    "start": "671760",
    "end": "678930"
  },
  {
    "text": "you're when you're putting things in the same directory and be aware that you might have to have some workarounds in",
    "start": "678930",
    "end": "684210"
  },
  {
    "text": "our case we had to just do a dead sim link that points to the location where we're mounting the volume using kuber Nettie's so",
    "start": "684210",
    "end": "692760"
  },
  {
    "text": "that's just a couple the gotchas for you if you if you see any others it's really",
    "start": "692760",
    "end": "698100"
  },
  {
    "text": "good to document them so people know what's going on okay so just a couple words about containers this is the cloud native",
    "start": "698100",
    "end": "704220"
  },
  {
    "text": "conference here and that has a lot to do with how we build containers and we learned a bunch of different lessons",
    "start": "704220",
    "end": "709590"
  },
  {
    "text": "from building jenkins snapping cassandra for working inside of a container orchestration system like kuru Nettie's",
    "start": "709590",
    "end": "715830"
  },
  {
    "text": "and so first i'm going to go through some dues no just remember a lot of these dues have a corollary don't that",
    "start": "715830",
    "end": "721830"
  },
  {
    "text": "we learned from to learn how to do this properly so the first thing do allow external configuration and what I mean",
    "start": "721830",
    "end": "728520"
  },
  {
    "text": "by that is that your container should allow you to set everything with a basic config file mounted somewhere or through",
    "start": "728520",
    "end": "735150"
  },
  {
    "text": "environment variables preferably both that's what we learn from especially from Jenkins like you can't have all",
    "start": "735150",
    "end": "742200"
  },
  {
    "text": "this config have to be their pre-existing and then mount different values and you just need to be able to configure them using environment",
    "start": "742200",
    "end": "748770"
  },
  {
    "text": "variables another one this one sometimes we missed you just have to have sensible",
    "start": "748770",
    "end": "754170"
  },
  {
    "text": "defaults when you're creating your images in our case these are things like basic security timeouts other values of",
    "start": "754170",
    "end": "761750"
  },
  {
    "text": "the application startup so timeouts in our case were for Jenkins and how much how much time it had to connect between",
    "start": "761750",
    "end": "767460"
  },
  {
    "text": "different agents we also have the idea of having a readme now i show an example of what I mean by",
    "start": "767460",
    "end": "773430"
  },
  {
    "text": "read me this is a pod monitor we created that a lot that I'll show some of the code for later but I wanted to show what",
    "start": "773430",
    "end": "780540"
  },
  {
    "text": "we did in this case I've documented every single part of the config file and",
    "start": "780540",
    "end": "786120"
  },
  {
    "text": "shown an example the config file so as a description of what it's doing if there's a default and what the behavior",
    "start": "786120",
    "end": "791700"
  },
  {
    "text": "is now you will love to have this later down the road because you'll leave it and just let it leave it sitting there",
    "start": "791700",
    "end": "797910"
  },
  {
    "text": "for about two months and you'll come back and realize you want to change the configuration have no idea how to do it so make sure you have a readme for all",
    "start": "797910",
    "end": "805360"
  },
  {
    "text": "of the different containers you have and how to configure it it's very helpful and the best containers that you use out",
    "start": "805360",
    "end": "811420"
  },
  {
    "text": "there have a very good read neither you can find generally on the on docker hub or wherever you're storing your containers and you can see exactly how",
    "start": "811420",
    "end": "818170"
  },
  {
    "text": "to configure each of those another one is to remember is just for the love of all that is holy make it log",
    "start": "818170",
    "end": "824560"
  },
  {
    "text": "okay now I I can't stress this enough we have we have problems when things not logging right or being able to change",
    "start": "824560",
    "end": "831130"
  },
  {
    "text": "the logging level is a really painful process of setting like Jenkins and Cassandra you have to go in and set a",
    "start": "831130",
    "end": "837430"
  },
  {
    "text": "different log at a command-line flag and do a bunch of different configuration just make it log and what I mean by a",
    "start": "837430",
    "end": "843100"
  },
  {
    "text": "good logging is this tell you tell the user exactly what's",
    "start": "843100",
    "end": "848110"
  },
  {
    "text": "going on because this is how we troubleshoot when you go in first look at like probably coop control describe",
    "start": "848110",
    "end": "853270"
  },
  {
    "text": "pods and then you look at coop control logs and right here I can see exactly what this one's the pod monitor is",
    "start": "853270",
    "end": "859390"
  },
  {
    "text": "talking about I can see that there is no slack webhook specified so it's logging instead of sending it to slack it's",
    "start": "859390",
    "end": "865270"
  },
  {
    "text": "starting a probe it didn't find any errors and how long it's waiting for same thing down here with another alerting tool we're using it says how",
    "start": "865270",
    "end": "871780"
  },
  {
    "text": "long it's sleeping for what it queried did it get results were there any hits so I know exactly what's going on inside",
    "start": "871780",
    "end": "877960"
  },
  {
    "text": "of the container and being able to configure that log level another thing is to remember it's ok to",
    "start": "877960",
    "end": "884620"
  },
  {
    "text": "install the things you need I am all for keeping your container images small the one gigabyte monstrosities that all of",
    "start": "884620",
    "end": "890290"
  },
  {
    "text": "us have done let's be honest we try to avoid those but sometimes it",
    "start": "890290",
    "end": "895330"
  },
  {
    "text": "is ok to install things so that it can spin up quickly in Coober Nettie's once again this is one we learned a lot from",
    "start": "895330",
    "end": "900880"
  },
  {
    "text": "from Jenkins and also from snap and installing some of the things we did is that if you try to let Jenkins install",
    "start": "900880",
    "end": "908020"
  },
  {
    "text": "its plugins every single time it spins up that's a lot of time because Jenkins already takes a minute or two minutes to",
    "start": "908020",
    "end": "913060"
  },
  {
    "text": "spin up by itself with plugins already installed so adding something else on top of that it's worth the hit for",
    "start": "913060",
    "end": "919180"
  },
  {
    "text": "having a bigger image then trying to install those every time so now on to",
    "start": "919180",
    "end": "924730"
  },
  {
    "text": "some don'ts so first thing is don't keep credentials and configs what I mean by",
    "start": "924730",
    "end": "929770"
  },
  {
    "text": "that is you should be able to specify credentials in a in a separate location outside of the config so you shouldn't",
    "start": "929770",
    "end": "936130"
  },
  {
    "text": "have to specify your password in the config file you have to mount you should be able to specify here's a file that contains the password or like I said",
    "start": "936130",
    "end": "943060"
  },
  {
    "text": "before specify in an environment variable now don't put stack traces and logs this",
    "start": "943060",
    "end": "948880"
  },
  {
    "text": "is to an extent obviously if it crashes or there's some really serious unrecoverable error stack traces are",
    "start": "948880",
    "end": "954699"
  },
  {
    "text": "good I didn't want to splat it up here because it's really hard to read but we've we've had those especially in Java",
    "start": "954699",
    "end": "960519"
  },
  {
    "text": "applications where it spits out the stack trace that goes on for like two pages and how there's one line of",
    "start": "960519",
    "end": "967870"
  },
  {
    "text": "information I need in there then you try to throw that to elasticsearch and Lassiter's I don't know what this is and there's 20 entries for that single thing",
    "start": "967870",
    "end": "974380"
  },
  {
    "text": "that went on that's not helpful now having it when it crashes it is because then you can go back and debug and see",
    "start": "974380",
    "end": "979899"
  },
  {
    "text": "what's going on but if you do have to put in stack traces try to keep them in debug mode unless they're absolutely",
    "start": "979899",
    "end": "984910"
  },
  {
    "text": "critical to showing what happened when the application just died another thing is don't over customize we",
    "start": "984910",
    "end": "992290"
  },
  {
    "text": "learn this really the hard way just saying how many things we add it on because then you",
    "start": "992290",
    "end": "997420"
  },
  {
    "text": "have more layers that could fail on you if you can use a default image and customize it just using the config do",
    "start": "997420",
    "end": "1004800"
  },
  {
    "text": "that it's much better than customized we've been going we started with actually a lot of customization to Jenkins we've been slowly rolling that",
    "start": "1004800",
    "end": "1011130"
  },
  {
    "text": "back as we have figured out how to do it with better methods so just a note on technical debt I so",
    "start": "1011130",
    "end": "1019620"
  },
  {
    "text": "really as you're doing Cooper Nettie's and spinning things up in it you'll have to refactor things anyway so it's okay",
    "start": "1019620",
    "end": "1024959"
  },
  {
    "text": "to take on some technical debt and you don't want and you don't want to leet make it so hard to get started because",
    "start": "1024959",
    "end": "1031350"
  },
  {
    "text": "you're worried about taking on technical debt two examples that we just we did to get started was credential baking and",
    "start": "1031350",
    "end": "1037709"
  },
  {
    "text": "token mountain so like bad security practice mount is mounting credentials and putting credentials inside of a",
    "start": "1037709",
    "end": "1043558"
  },
  {
    "text": "container we took that hit for a little bit to get started because we had a secure container registry that was",
    "start": "1043559",
    "end": "1049290"
  },
  {
    "text": "private and it would allowed us to spin it up and get going quicker we've gone through",
    "start": "1049290",
    "end": "1054600"
  },
  {
    "text": "we've removed that and we've been able to mount it but it allowed us to get through especially with Jenkins just",
    "start": "1054600",
    "end": "1060120"
  },
  {
    "text": "getting it started up and so it's okay to take on technical debt like that the other one this is actually one that has",
    "start": "1060120",
    "end": "1066000"
  },
  {
    "text": "a good code snippet along with it I for example if you do not want to have a pod have access to the API",
    "start": "1066000",
    "end": "1073190"
  },
  {
    "text": "because that token that I talked about earlier is mounted by default in every single container and sometimes you don't",
    "start": "1073190",
    "end": "1079020"
  },
  {
    "text": "want that container to have access to the API you could the only way around that right now they're working on a",
    "start": "1079020",
    "end": "1084420"
  },
  {
    "text": "solution for this a better solution but right now you can actually mount an empty volume there that's a little hacky but yeah question",
    "start": "1084420",
    "end": "1093950"
  },
  {
    "text": "yeah yeah you could also specify another you service account as the other one it just",
    "start": "1095060",
    "end": "1101880"
  },
  {
    "text": "depends on on how you set it up this one was just really easy to slap it on there not have to worry about it but that's",
    "start": "1101880",
    "end": "1107280"
  },
  {
    "text": "one example of the technical that we took on so we got it working and",
    "start": "1107280",
    "end": "1113720"
  },
  {
    "text": "we love we all love this meme works fine in dev right but the problem is is we do",
    "start": "1113720",
    "end": "1119280"
  },
  {
    "text": "DevOps so the problem is we are the ops people who just developed ourselves into",
    "start": "1119280",
    "end": "1125280"
  },
  {
    "text": "a corner so we got to this question of things work now what we had what did we do to ourselves we had some problems to",
    "start": "1125280",
    "end": "1133140"
  },
  {
    "text": "to fix and I'll go over those and how we fix them so the first thing we had was secrets all over the place we have about",
    "start": "1133140",
    "end": "1139890"
  },
  {
    "text": "eight different secrets that had to be populated manually for each environment so we have public and private servers in both prod staging and a dev environment",
    "start": "1139890",
    "end": "1146700"
  },
  {
    "text": "and so we had eight secrets for all those you had to generate them separately and there's really no common place to get them from our favorite",
    "start": "1146700",
    "end": "1152880"
  },
  {
    "text": "method of sharing with sticky note in passing and hoping they'd throw it in a fire after they were done so we wanted",
    "start": "1152880",
    "end": "1158940"
  },
  {
    "text": "to get out of that method of sharing secrets around and we also had dozens of",
    "start": "1158940",
    "end": "1165270"
  },
  {
    "text": "manual changes required for each one all the files were very close to each other and so you had to just change a little",
    "start": "1165270",
    "end": "1170520"
  },
  {
    "text": "bit for each one for public for private for staging for dev and that also led to our copy paste reuse where we copy",
    "start": "1170520",
    "end": "1178200"
  },
  {
    "text": "pasted a lot of the code and and change just those little things this was especially with the Jenkins agents that",
    "start": "1178200",
    "end": "1184020"
  },
  {
    "text": "we we have spent up because they're very close to each other just need some very small changes for each environment and we had it to the point where no one",
    "start": "1184020",
    "end": "1190650"
  },
  {
    "text": "person could pick it up and run it and my co-workers actually in the audience I had done a lot of the Jenkins work he",
    "start": "1190650",
    "end": "1197190"
  },
  {
    "text": "couldn't get it working for the life and he'd done mostly Cassandra work I couldn't get Cassandra working for the life of me even though we could do it just fine on",
    "start": "1197190",
    "end": "1204830"
  },
  {
    "text": "our own at our laptops and so to solve that q your old friend configuration",
    "start": "1204830",
    "end": "1209870"
  },
  {
    "text": "management I don't know about all of you but for me at least my initial thought",
    "start": "1209870",
    "end": "1215690"
  },
  {
    "text": "when you start doing the whole orchestration of containers like hey I don't have to spin up whole clusters anymore I don't have to do all the",
    "start": "1215690",
    "end": "1221810"
  },
  {
    "text": "ansible configuration or puppet or chef and apply all these things because I'm not spinning up a whole server it's just",
    "start": "1221810",
    "end": "1227930"
  },
  {
    "text": "a container and I learned that what's wrong in our case we use we use ansible and we use that because",
    "start": "1227930",
    "end": "1235580"
  },
  {
    "text": "it has the ability to encrypt secrets and keep them with the repo and also to template things really well and so just",
    "start": "1235580",
    "end": "1242960"
  },
  {
    "text": "an example of what that looks like is right here these are this is like what the PlayBook file looks like we have",
    "start": "1242960",
    "end": "1248570"
  },
  {
    "text": "specific templates that we're using for our secrets and for the name states that we're creating and it's all copied into",
    "start": "1248570",
    "end": "1255080"
  },
  {
    "text": "a specific path that we set up above that's not in this code snippet and it creates all those files in in a in a",
    "start": "1255080",
    "end": "1262010"
  },
  {
    "text": "build directory that we're then able to use to spin up Jenkins and this is what it looks like so this is just a snippet",
    "start": "1262010",
    "end": "1267860"
  },
  {
    "text": "of inside of a configuration file for cooper Nettie's so we're able to configure our limits and requests and",
    "start": "1267860",
    "end": "1273380"
  },
  {
    "text": "also the Jenkins type so public or private and whether or not we're using a persistent disk which we use for our staging and prod or something like dev",
    "start": "1273380",
    "end": "1280310"
  },
  {
    "text": "where we use our empty directory and just as an example I'll actually show this so this makes it so easy to deploy",
    "start": "1280310",
    "end": "1289520"
  },
  {
    "text": "jenkins and i'll just show an example so in this case because i'm in a dev environment i'm actually adding a",
    "start": "1289520",
    "end": "1295010"
  },
  {
    "text": "namespace suffix so we can dynamically change what namespace for putting these into and I'm populating the files for",
    "start": "1295010",
    "end": "1301040"
  },
  {
    "text": "Jenkins and so it just takes a little bit basically it's going through and running all that different code skipping some of the stuff that we don't need for",
    "start": "1301040",
    "end": "1307130"
  },
  {
    "text": "the dev environment and creating the different deploy scripts and configuration files for cooper Nettie's",
    "start": "1307130",
    "end": "1313520"
  },
  {
    "text": "as it goes through here and you can see it going through now it's done now all I have to do to spin it up is",
    "start": "1313520",
    "end": "1319450"
  },
  {
    "text": "populate I'm trying to populate deploy",
    "start": "1319450",
    "end": "1325840"
  },
  {
    "text": "Jenkins dev and so now it goes through and you can",
    "start": "1325840",
    "end": "1331570"
  },
  {
    "text": "see it running all the commands exactly what it's creating and bam it's all created all ready to go and we can",
    "start": "1331570",
    "end": "1337750"
  },
  {
    "text": "actually watch it so I'm going to look for all of our Jenkins pods and you'll actually see",
    "start": "1337750",
    "end": "1343480"
  },
  {
    "text": "other people who work on the team you can see all the ones that have spun up with my name on it and it's on container",
    "start": "1343480",
    "end": "1348490"
  },
  {
    "text": "creating and running in different ready statuses but once Jacon spins up it's all up in about a minute to two minutes",
    "start": "1348490",
    "end": "1354520"
  },
  {
    "text": "every single time makes deployments extremely easy now this is what came from having configuration management I",
    "start": "1354520",
    "end": "1362640"
  },
  {
    "text": "really don't care what what people use like if you want to use ansible or puppet or chef or whatever this is",
    "start": "1362640",
    "end": "1369040"
  },
  {
    "text": "something that really helped us kind of bring that chaos under control and have something repeatable it also helped us",
    "start": "1369040",
    "end": "1374680"
  },
  {
    "text": "in testing which I'll show a little bit later so the next thing we get to is now we had",
    "start": "1374680",
    "end": "1381550"
  },
  {
    "text": "things working are things actually working we could deploy things and then an hour later sometimes the next day",
    "start": "1381550",
    "end": "1387580"
  },
  {
    "text": "find out was running in a degraded state for 24 hours so kuru Nettie's can even say that",
    "start": "1387580",
    "end": "1393160"
  },
  {
    "text": "something is running but how do we know that things are actually running and so I'm going to go over how we managed to",
    "start": "1393160",
    "end": "1398380"
  },
  {
    "text": "do this we did it with monitoring tools writing this probes and a lot of testing so first thing is when monitoring",
    "start": "1398380",
    "end": "1404970"
  },
  {
    "text": "we did three different things here to first is node and application information using snap and so snap is",
    "start": "1404970",
    "end": "1412750"
  },
  {
    "text": "basically doing see it's that one no no section so snap like I explained earlier",
    "start": "1412750",
    "end": "1418840"
  },
  {
    "text": "allows us to gather data pretty much remaining source so it's running on these nose gathering all the data and",
    "start": "1418840",
    "end": "1424090"
  },
  {
    "text": "publishing it in a heap stir we're using that with in Footwear publishing that an influx DB along with capacitor which is",
    "start": "1424090",
    "end": "1431980"
  },
  {
    "text": "another tool by in flux that allows us to stream processing and for example publish an alert when the cpu goes above",
    "start": "1431980",
    "end": "1439270"
  },
  {
    "text": "two standard deviations of its normal and so once again your tool can work",
    "start": "1439270",
    "end": "1445300"
  },
  {
    "text": "with whatever you want if you have another tool you're using there's other databases that snap support but in our",
    "start": "1445300",
    "end": "1450760"
  },
  {
    "text": "case we've found capacitor be very helpful to give us those alerts when when things were going wrong with the nodes we also used elasticsearch with",
    "start": "1450760",
    "end": "1457270"
  },
  {
    "text": "fluent d i'll have a link with that at the end that's actually an add-on to the kubernetes cluster you can spin it up",
    "start": "1457270",
    "end": "1462880"
  },
  {
    "text": "with and we use a handy tool that we found it's an open source tool by I think he yelped",
    "start": "1462880",
    "end": "1469509"
  },
  {
    "text": "called the last alert and elastomer allows you to do just elastic search queries and alert based on spike of CPU",
    "start": "1469509",
    "end": "1476649"
  },
  {
    "text": "or blacklists if they see a certain value that's not supposed to be there to alert for you that's also very handy and",
    "start": "1476649",
    "end": "1481779"
  },
  {
    "text": "that's actually where we get a lot of our learning from we know if something goes wrong with Jenkins because we get a",
    "start": "1481779",
    "end": "1488110"
  },
  {
    "text": "bunch of severe exceptions in the logs and so that that helps us monitor things through the logs as well",
    "start": "1488110",
    "end": "1494919"
  },
  {
    "text": "now the last thing we did is we built just a pretty drop dead simple pod monitor it's a Python script inside of a",
    "start": "1494919",
    "end": "1500200"
  },
  {
    "text": "container that's running and it uses and leverages label queries but I'll show what's going on here so once we get a",
    "start": "1500200",
    "end": "1506139"
  },
  {
    "text": "list of pods from the API we can actually use this a little block of code",
    "start": "1506139",
    "end": "1512109"
  },
  {
    "text": "where we loop over the container statuses because inside of a pod you your pod can be running but the",
    "start": "1512109",
    "end": "1517690"
  },
  {
    "text": "containers are not actually running a running pod means the pod has been scheduled and the containers are created and that's all it means you can even",
    "start": "1517690",
    "end": "1524919"
  },
  {
    "text": "look at it in the documentation there's a stern warning in there about that and so what you can do with this is you can",
    "start": "1524919",
    "end": "1531519"
  },
  {
    "text": "actually loop through each container center so we'd first check to see if the status is not running in the pot because if it's not running then obviously it's",
    "start": "1531519",
    "end": "1537190"
  },
  {
    "text": "not ready but then we check each container inside of the pod to see if that pot is ready and",
    "start": "1537190",
    "end": "1542739"
  },
  {
    "text": "then we start adding data into basically a small object that we have that shows exactly which containers are broken and",
    "start": "1542739",
    "end": "1550379"
  },
  {
    "text": "which namespace they're in and a couple other details and so I actually have a full script of this which I'll show a",
    "start": "1550379",
    "end": "1556210"
  },
  {
    "text": "link to at the end so you can see how we're doing that now how we're getting that information is using this little",
    "start": "1556210",
    "end": "1562299"
  },
  {
    "text": "function right here where we where we pass in deploy types all of our all of our files have a deploy type",
    "start": "1562299",
    "end": "1568330"
  },
  {
    "text": "label that labeled the application name so in our case we have Jenkins and Cassandra and snap and a couple other things and so it goes through here and",
    "start": "1568330",
    "end": "1575019"
  },
  {
    "text": "just joins all the deploy types into a string into a label query now to make that a little bit clearer what it looks like if I'm just using as a normal",
    "start": "1575019",
    "end": "1580960"
  },
  {
    "text": "command it looks like this so right here you can actually use set based matches",
    "start": "1580960",
    "end": "1586179"
  },
  {
    "text": "with label queries and this is very helpful for monitoring and debugging so right now we're saying I'm looking for",
    "start": "1586179",
    "end": "1591789"
  },
  {
    "text": "any pod with a deploy type where the deploy type value is Jenkins or Cassandra and it has another tat another",
    "start": "1591789",
    "end": "1598530"
  },
  {
    "text": "label and there where app is equal to master and so you can join a bunch of these together to do some really complex",
    "start": "1598530",
    "end": "1603780"
  },
  {
    "text": "queries and and find out what's going on so readiness probes this is actually one",
    "start": "1603780",
    "end": "1611190"
  },
  {
    "text": "of the favorite things I've done in terms of monitoring because it's so simple there's just some gotchas that",
    "start": "1611190",
    "end": "1616800"
  },
  {
    "text": "we'll talk about so there's liveness probes and liveness probes will kill your pod if they return",
    "start": "1616800",
    "end": "1624140"
  },
  {
    "text": "false basically if they're show that it's not working it will kill your pot and restart it that's not the behavior",
    "start": "1624140",
    "end": "1629280"
  },
  {
    "text": "we wanted especially with Jenkins because Jenkins could be not ready but still like we don't want to kill a running job that's on an agent or",
    "start": "1629280",
    "end": "1635430"
  },
  {
    "text": "something else that's going on and so the readiness probed are what trigger back to that code I was showing earlier",
    "start": "1635430",
    "end": "1641820"
  },
  {
    "text": "with the pods at being are the containers in a pod being in a ready state in our case this is just a simple",
    "start": "1641820",
    "end": "1647880"
  },
  {
    "text": "cat of a file that we put on the file system once it's once Jenkins is up and ready and",
    "start": "1647880",
    "end": "1653690"
  },
  {
    "text": "you can also do an HTTP GET instead of an exec that documentation is available",
    "start": "1653690",
    "end": "1659540"
  },
  {
    "text": "and then you have an initial delay seconds in our case we wait about 15 seconds for Jenkins to have some time to",
    "start": "1659540",
    "end": "1666150"
  },
  {
    "text": "spin up because we've never seen it spin up really faster than that and so once that's running it just keeps",
    "start": "1666150",
    "end": "1672720"
  },
  {
    "text": "running out and he'll tell you if it's failed or not it'll actually show up in the coop control described pods it'll show it as an event that occurs that it",
    "start": "1672720",
    "end": "1679140"
  },
  {
    "text": "failed that check and how many times now just a note if a service is not I mean",
    "start": "1679140",
    "end": "1684180"
  },
  {
    "text": "if a container is not in a ready state a service cannot forward traffic to it that's actually good because we don't",
    "start": "1684180",
    "end": "1689670"
  },
  {
    "text": "want that to happen in with us and Jenkins like we don't want the the jobs going to the Jenkins server and the",
    "start": "1689670",
    "end": "1695250"
  },
  {
    "text": "Jenkins server is not ready to receive them and so this works great however when you get to things that require",
    "start": "1695250",
    "end": "1700440"
  },
  {
    "text": "state whether you're doing in a pet sitter or deployment in our case it was Cassandra and what happened with ours is",
    "start": "1700440",
    "end": "1706680"
  },
  {
    "text": "what I did this in Jenkins I was like wow that was easy and I went over to Cassandra and created a Cassandra health",
    "start": "1706680",
    "end": "1712170"
  },
  {
    "text": "sorry a readiness probe and then all of a sudden Cassandra just would die and I",
    "start": "1712170",
    "end": "1717990"
  },
  {
    "text": "was like okay why is it dying and I found out it was because the the service it wasn't forwarding the traffic to for",
    "start": "1717990",
    "end": "1724200"
  },
  {
    "text": "the inner cluster communication for that to spin up and set up the cluster so after a little bit",
    "start": "1724200",
    "end": "1730020"
  },
  {
    "text": "I found this right there this is your friend in case you're using readiness",
    "start": "1730020",
    "end": "1735300"
  },
  {
    "text": "probes it is an annotation that you can add in that says you can tolerate unready endpoint so you can see these",
    "start": "1735300",
    "end": "1741180"
  },
  {
    "text": "are the intra node community of this week it should be internet intrepid internal communication ports right here",
    "start": "1741180",
    "end": "1746250"
  },
  {
    "text": "that allow it to set up this cluster and we've only exposed those without the",
    "start": "1746250",
    "end": "1751590"
  },
  {
    "text": "service being ready but then once the services is up then the other one that",
    "start": "1751590",
    "end": "1758250"
  },
  {
    "text": "allows CQ CQ LSH to connect allows the traffic to go through to Cassandra so the other thing we did was testing",
    "start": "1758250",
    "end": "1765450"
  },
  {
    "text": "now I know that sounds stupid believe it or not testing is important even inside of the inside of Coober Nettie's there",
    "start": "1765450",
    "end": "1771120"
  },
  {
    "text": "are a couple times we brought things down when we launched them because we didn't have a gating test for our",
    "start": "1771120",
    "end": "1776780"
  },
  {
    "text": "different kuber Nettie's files in the different images we've created and so we after we learned that we decided we ke",
    "start": "1776780",
    "end": "1783120"
  },
  {
    "text": "need to get these gating tests and and get them working and so these actually do a full deploy of Jenkins or Cassandra",
    "start": "1783120",
    "end": "1790110"
  },
  {
    "text": "or snap on kuber Nettie's so it's actually just running it's coo Brunetti spinning up another it's jenkins running",
    "start": "1790110",
    "end": "1796710"
  },
  {
    "text": "on Corinne a spinning up Jenkins and so it works really well for those unit",
    "start": "1796710",
    "end": "1802530"
  },
  {
    "text": "tests now koo b√©arnaise makes this really easy because of that that coop control the ability to",
    "start": "1802530",
    "end": "1808020"
  },
  {
    "text": "access the API and do other things inside of a pod now because we automated",
    "start": "1808020",
    "end": "1813540"
  },
  {
    "text": "things that actually made it really easy i'll show you what that job looks like I notice is actually me see we can zoom in so right here you can actually see that",
    "start": "1813540",
    "end": "1823610"
  },
  {
    "text": "it's creating it's pulling down the get changes that we had just like you expected in Jenkins but once it's pulled",
    "start": "1823610",
    "end": "1830460"
  },
  {
    "text": "everything it comes down here and it actually creates a random name space to contain everything and it creates using",
    "start": "1830460",
    "end": "1837330"
  },
  {
    "text": "a deployment we've created so this is a test for an influx DB snap plugin and it",
    "start": "1837330",
    "end": "1843270"
  },
  {
    "text": "creates a service and then waits for it to come up and checks to make sure all the pods are ready and once all the pods",
    "start": "1843270",
    "end": "1848850"
  },
  {
    "text": "are ready it actually runs that command inside of the specified container and runs these in this case it's running the",
    "start": "1848850",
    "end": "1855330"
  },
  {
    "text": "go unit tests for this to make sure everything's running and then it succeeds and cleans up that namespace",
    "start": "1855330",
    "end": "1860580"
  },
  {
    "text": "that was created that's all done because we had that coop control installed and that agent of Jenkin inside Jenkins can",
    "start": "1860580",
    "end": "1867700"
  },
  {
    "text": "run and spin up the the necessary containers for things to work so just",
    "start": "1867700",
    "end": "1874920"
  },
  {
    "text": "in review I about what we went over so the first thing is just design your containers while it can also deal with",
    "start": "1874920",
    "end": "1882790"
  },
  {
    "text": "like designing your application and well but just make sure your containers or design well and can work inside of kuru",
    "start": "1882790",
    "end": "1888340"
  },
  {
    "text": "Nettie's know how to use the API it will be your friend because you can either use it inside I we actually found out",
    "start": "1888340",
    "end": "1894280"
  },
  {
    "text": "talking to the sed people that their operator stuff is using the API to make sure they set up everything you will",
    "start": "1894280",
    "end": "1900070"
  },
  {
    "text": "have to do this at some point as you create more applications from that you're going to be running in coover Nettie's don't forget the role of config",
    "start": "1900070",
    "end": "1906850"
  },
  {
    "text": "management make sure you are monitoring and testing all the things know the gotchas some of these different examples",
    "start": "1906850",
    "end": "1913120"
  },
  {
    "text": "we gave and then just one last problem to go over the need to document there's actually been some mention about the",
    "start": "1913120",
    "end": "1919809"
  },
  {
    "text": "state of documentation inside of Coober Nettie's now actually I find the documentation useful and",
    "start": "1919809",
    "end": "1926460"
  },
  {
    "text": "but there's still some big gaps so I'm hoping that you guys at least learned one thing from this that can help you",
    "start": "1926460",
    "end": "1933400"
  },
  {
    "text": "with some of your deployments but I just wanted to share an example of why this documentation is important so that",
    "start": "1933400",
    "end": "1938460"
  },
  {
    "text": "example I gave of the tolerate unready end points so that came after a lot of a",
    "start": "1938460",
    "end": "1943720"
  },
  {
    "text": "lot of research so after I discovered the Cassandra gone down first I had to figure out it wasn't a problem with Cassandra or something else I upgraded",
    "start": "1943720",
    "end": "1950140"
  },
  {
    "text": "that took about like an hour so no Mike okay so it can't connect to the service but then for the next half of half of",
    "start": "1950140",
    "end": "1955870"
  },
  {
    "text": "the day I had to search around I was googling and you didn't know what term to search for and I'm looking for all these everything's and finally I found",
    "start": "1955870",
    "end": "1961690"
  },
  {
    "text": "one issue the hook to another issue the hook to a PR that had that code in it",
    "start": "1961690",
    "end": "1967150"
  },
  {
    "text": "there's no documentation on it and so we like that's that's what we're trying to",
    "start": "1967150",
    "end": "1972460"
  },
  {
    "text": "avoid here is we're all trying to get these things spinning up in production and it's very helpful if we share what",
    "start": "1972460",
    "end": "1978370"
  },
  {
    "text": "we've done and document what we've done so my invitation is that we can make this running a production applications",
    "start": "1978370",
    "end": "1984669"
  },
  {
    "text": "and Kure is much easier by documenting and to start off I created a blog post with",
    "start": "1984669",
    "end": "1992470"
  },
  {
    "text": "my team that has all like these code snippets and more about what we did I mean chock-full of code snippets and you",
    "start": "1992470",
    "end": "1999670"
  },
  {
    "text": "can go visit that along with some other posts like we have some things about coop snap which I'll show here and we'll",
    "start": "1999670",
    "end": "2006270"
  },
  {
    "text": "get two questions but there's the other links that i was talking about if you want to see more about how we ran snap",
    "start": "2006270",
    "end": "2011370"
  },
  {
    "text": "in Coober Nettie's you can go to cubed snap dash telemetry do and then that's",
    "start": "2011370",
    "end": "2016470"
  },
  {
    "text": "the code inside of the add-ons for the coup bearnaise repo for the elastic search with fluid d so with that are",
    "start": "2016470",
    "end": "2023550"
  },
  {
    "text": "there any questions and if you could come up and use the mic oh",
    "start": "2023550",
    "end": "2029480"
  },
  {
    "text": "wow either I did really good or do you have a question",
    "start": "2029810",
    "end": "2035330"
  },
  {
    "text": "which thing yeah so all these are on this",
    "start": "2035330",
    "end": "2041400"
  },
  {
    "text": "presentation is on line on the the event for this you can download these and actually get all the different code and",
    "start": "2041400",
    "end": "2047220"
  },
  {
    "text": "as I said this this blog has the detailed examples of everything I showed",
    "start": "2047220",
    "end": "2053040"
  },
  {
    "text": "in here plus more so you can go on there and see and just start documenting and sharing these things around because we",
    "start": "2053040",
    "end": "2060090"
  },
  {
    "text": "could use it and I'm hoping you guys have been able to use this and by helping each other out will kind of improve that documentation that we have",
    "start": "2060090",
    "end": "2067320"
  },
  {
    "text": "and be able to make it easy for people to run these things in production so well thank you",
    "start": "2067320",
    "end": "2072810"
  },
  {
    "text": "[Applause]",
    "start": "2072810",
    "end": "2077500"
  }
]