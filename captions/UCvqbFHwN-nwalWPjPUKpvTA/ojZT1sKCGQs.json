[
  {
    "text": "hello everyone you feel can you guys",
    "start": "30",
    "end": "6000"
  },
  {
    "text": "hear me at the end at the dust okay very good so welcome everyone my name is",
    "start": "6000",
    "end": "12210"
  },
  {
    "text": "Cameron Ozzie Mohammad Kamran Ozzy and I'm from pragma Oslo I come with a",
    "start": "12210",
    "end": "20970"
  },
  {
    "text": "background of about 20 years of operations and for five years I have",
    "start": "20970",
    "end": "27480"
  },
  {
    "text": "been managing some of the largest supercomputers in the world Saudi Aramco before this job right now",
    "start": "27480",
    "end": "34410"
  },
  {
    "text": "with pragma for last two years and we are doing very much fun stuff with the continuous integration and continuous",
    "start": "34410",
    "end": "40890"
  },
  {
    "text": "delivery using docker using kubernetes and lots of fun stuff and I have my",
    "start": "40890",
    "end": "49559"
  },
  {
    "text": "colleague here Henrik who's from Denmark Eric yeah my name is Sami food I'm from",
    "start": "49559",
    "end": "55350"
  },
  {
    "text": "Denmark and one of the boring employees and Dermott at the sameness now he at my workplace and I'm white really boring",
    "start": "55350",
    "end": "64530"
  },
  {
    "text": "and I'm a male and really boring and",
    "start": "64530",
    "end": "71299"
  },
  {
    "text": "yeah my first computer was a Commodore 64 so I've been working mostly as ops",
    "start": "71299",
    "end": "78750"
  },
  {
    "text": "and I've been at practice for two years as well I think we started at about the same time I was the first employee in",
    "start": "78750",
    "end": "85530"
  },
  {
    "text": "ovals and come one was the first employee in Muslim and when we started",
    "start": "85530",
    "end": "91530"
  },
  {
    "text": "we were eight people I think we have 45 now with 19 different nationalities yes",
    "start": "91530",
    "end": "98880"
  },
  {
    "text": "a ball of yeah the culture Thank You Hannah all right so are you",
    "start": "98880",
    "end": "106320"
  },
  {
    "text": "guys excited about this talk today okay very good so here it goes so the",
    "start": "106320",
    "end": "111719"
  },
  {
    "text": "title says it all you can go home now so who recognizes",
    "start": "111719",
    "end": "119520"
  },
  {
    "text": "this",
    "start": "119520",
    "end": "121729"
  },
  {
    "text": "it's a scene from some movie okay so it",
    "start": "125420",
    "end": "137519"
  },
  {
    "text": "this is a screen grab from the movie importance released in tool 2010 the",
    "start": "137519",
    "end": "145349"
  },
  {
    "text": "idea behind this is just some funny coincidence so in Greek mythology so",
    "start": "145349",
    "end": "150900"
  },
  {
    "text": "first I cover I talked about the word kubernetes it's a Greek word and it's",
    "start": "150900",
    "end": "157349"
  },
  {
    "text": "funny how we pronounce it as kubernetes and the Greeks laugh at us because it's",
    "start": "157349",
    "end": "162620"
  },
  {
    "text": "key vanities key vanities when attacked so since the kubernetes is Greek word so",
    "start": "162620",
    "end": "170819"
  },
  {
    "text": "we I thought I should bring up something great so this is according to Greek mythology these are the gods and these",
    "start": "170819",
    "end": "178019"
  },
  {
    "text": "are five and count and I consider these as the five kubernetes components three",
    "start": "178019",
    "end": "185790"
  },
  {
    "text": "of them run on master or controller node namely API server scheduler and the",
    "start": "185790",
    "end": "194010"
  },
  {
    "text": "controller yes and the to run on worker node the queue let and cube proxy so I",
    "start": "194010",
    "end": "203790"
  },
  {
    "text": "thought a connection so I just thought it would be just going to show this and in a way we expect our nodes and pores",
    "start": "203790",
    "end": "212010"
  },
  {
    "text": "not to die just like these guys we're not supposed to die but the Titans beat",
    "start": "212010",
    "end": "217260"
  },
  {
    "text": "the crap out of them so anyway let's move forward this is what a community",
    "start": "217260",
    "end": "224819"
  },
  {
    "text": "stressor looks like as probably most of you already know so we have an API",
    "start": "224819",
    "end": "231810"
  },
  {
    "text": "server at the heart and we have a scheduler we have a controller manager and these three",
    "start": "231810",
    "end": "239110"
  },
  {
    "text": "basically make up your control plane and we have in this diagram you have two",
    "start": "239110",
    "end": "246730"
  },
  {
    "text": "nodes just to emphasize on multiple nodes we have the same cube proxy",
    "start": "246730",
    "end": "252610"
  },
  {
    "text": "running on two nodes and the cube that running on both nodes and some quads which are being managed so in in",
    "start": "252610",
    "end": "259209"
  },
  {
    "text": "kubernetes everything looks up to the API server that is the heart of communities itself",
    "start": "259209",
    "end": "266230"
  },
  {
    "text": "and API server talks to XE D and I've",
    "start": "266230",
    "end": "272290"
  },
  {
    "text": "just drawn one instance or one depiction of a CD here it can be a cluster and",
    "start": "272290",
    "end": "277600"
  },
  {
    "text": "normally it is so we want it to set up a",
    "start": "277600",
    "end": "285700"
  },
  {
    "text": "kubernetes cluster for a client and they want it in on bare metal so we came up",
    "start": "285700",
    "end": "292810"
  },
  {
    "text": "with this setup and in this we you can see we have a control plane we tend to",
    "start": "292810",
    "end": "301000"
  },
  {
    "text": "call them controllers many people tend to call the masters so I will use this",
    "start": "301000",
    "end": "307300"
  },
  {
    "text": "term most of the time we have a control plane we have some worker nodes we have",
    "start": "307300",
    "end": "313620"
  },
  {
    "text": "HDD cluster we have some shared storage through NFS and this all makes up a",
    "start": "313620",
    "end": "321610"
  },
  {
    "text": "kubernetes network or our cluster we also have load balancer here running",
    "start": "321610",
    "end": "329260"
  },
  {
    "text": "traffic and this is the corporate Rooter",
    "start": "329260",
    "end": "334630"
  },
  {
    "text": "and we have other components of this corporate behind on this interface",
    "start": "334630",
    "end": "340080"
  },
  {
    "text": "whatever there are other servers and their users and whatsoever and this is",
    "start": "340080",
    "end": "345340"
  },
  {
    "text": "the public connection to the Internet excuse me and this is a DNS server",
    "start": "345340",
    "end": "351430"
  },
  {
    "text": "somewhere on the Internet and this is just some other computer on the Internet so this is the idea is that we are",
    "start": "351430",
    "end": "358750"
  },
  {
    "text": "running nginx somewhere here and we access we are able to access it not only",
    "start": "358750",
    "end": "365140"
  },
  {
    "text": "through corporate internal Network as shown here we can also access",
    "start": "365140",
    "end": "371530"
  },
  {
    "text": "it all the way from this computer outside which is come somewhere in the",
    "start": "371530",
    "end": "377979"
  },
  {
    "text": "world anywhere so that is what the setup looks like which we wanted to set up and",
    "start": "377979",
    "end": "386190"
  },
  {
    "text": "we encountered some problems so when we",
    "start": "386190",
    "end": "393430"
  },
  {
    "text": "were configuring we configured controller nodes we configured at CD configure controller nodes and then we",
    "start": "393430",
    "end": "400090"
  },
  {
    "text": "went to configure worker nodes and then we realize what API server do we point",
    "start": "400090",
    "end": "407979"
  },
  {
    "text": "our queue proxy to it only takes one argument as API server target so this",
    "start": "407979",
    "end": "416110"
  },
  {
    "text": "was a first big question we couldn't risk saying specify only one of these",
    "start": "416110",
    "end": "423430"
  },
  {
    "text": "because if one of these dies what next do we go manually configure the worker",
    "start": "423430",
    "end": "428949"
  },
  {
    "text": "to start talking to the other one because it doesn't take a string or a",
    "start": "428949",
    "end": "434080"
  },
  {
    "text": "list of API servers in this especially in the queue proxy then we have a load",
    "start": "434080",
    "end": "441039"
  },
  {
    "text": "balancer and we didn't know which API server to talk to we had the same",
    "start": "441039",
    "end": "448990"
  },
  {
    "text": "problem here whether to use this one or to just use this one that's second problem the third problem",
    "start": "448990",
    "end": "456520"
  },
  {
    "text": "came how do we make this load balancer highly available because all the it",
    "start": "456520",
    "end": "464080"
  },
  {
    "text": "traffic which is coming in is coming into this load balancer what if this dies this becomes single point of",
    "start": "464080",
    "end": "470380"
  },
  {
    "text": "failure so we have these big questions here in this set up can you guys see the I",
    "start": "470380",
    "end": "477070"
  },
  {
    "text": "apologize for standing in your view okay so in the cloud it is quite easy because",
    "start": "477070",
    "end": "487840"
  },
  {
    "text": "cloud and take talk about any cloud provider GCE Amazon they provide you",
    "start": "487840",
    "end": "494560"
  },
  {
    "text": "with load balancers and you can put load balancer in front or behind of anything",
    "start": "494560",
    "end": "499810"
  },
  {
    "text": "like so and that normally those load balances are stable enough or the cloud",
    "start": "499810",
    "end": "507770"
  },
  {
    "text": "provider takes care of them so we could",
    "start": "507770",
    "end": "513229"
  },
  {
    "text": "address one problem like so and the",
    "start": "513229",
    "end": "518479"
  },
  {
    "text": "second problem was solved by the using",
    "start": "518479",
    "end": "523640"
  },
  {
    "text": "the cloud provided load balances but this is cloud and our setup is on bare",
    "start": "523640",
    "end": "529880"
  },
  {
    "text": "metal so cloud is easy we could just set up a load balancer provide its IP just",
    "start": "529880",
    "end": "536690"
  },
  {
    "text": "you want the queue proxy instances to also to our incoming traffic and",
    "start": "536690",
    "end": "542330"
  },
  {
    "text": "everything is solved but this is cloud not bare metal so we still had those problems so then we thought what to do",
    "start": "542330",
    "end": "551800"
  },
  {
    "text": "how do we provide high availability to this set up which we have what if we",
    "start": "551800",
    "end": "562460"
  },
  {
    "text": "provide a similar proxy ourselves but then what if this ties to proxies and",
    "start": "562460",
    "end": "572780"
  },
  {
    "text": "then work if the other one dies and so on and so forth so the problem was still",
    "start": "572780",
    "end": "579260"
  },
  {
    "text": "there the problem of high availability we could now look up to the controller",
    "start": "579260",
    "end": "586640"
  },
  {
    "text": "nodes but we still have problem of high availability this instance and this load",
    "start": "586640",
    "end": "592100"
  },
  {
    "text": "balance are still single point of failures so we saw that some people are",
    "start": "592100",
    "end": "598790"
  },
  {
    "text": "using the u.s. they set up a multiple proxies multiple load balancers they set",
    "start": "598790",
    "end": "606110"
  },
  {
    "text": "up a common DNS name with a very low TTL etc I would just say these two words you",
    "start": "606110",
    "end": "614540"
  },
  {
    "text": "can read these but and there are many other problems associated to it so no",
    "start": "614540",
    "end": "622540"
  },
  {
    "text": "E&S no-go this is our solution this is not our",
    "start": "622540",
    "end": "629700"
  },
  {
    "text": "solution yes no didn't occur to me sorry",
    "start": "629700",
    "end": "638540"
  },
  {
    "text": "since we were on bare metal and since I had some experience of setting up such",
    "start": "638960",
    "end": "646650"
  },
  {
    "text": "clusters in past this was a natural thing to do for me so we introduced",
    "start": "646650",
    "end": "655710"
  },
  {
    "text": "carousing and pacemaker to this problem so chorusing is what used to be Linux",
    "start": "655710",
    "end": "662940"
  },
  {
    "text": "heartbeat project or was it IBS or LVS I don't remember exactly now there was",
    "start": "662940",
    "end": "669840"
  },
  {
    "text": "heartbeat and then there was Linux as we guess which is probably now pacemaker and pacemaker talks to carousing and",
    "start": "669840",
    "end": "678300"
  },
  {
    "text": "manages resources over its cluster now you're going to hear to about you're",
    "start": "678300",
    "end": "686460"
  },
  {
    "text": "going to hear about two different clusters one is one cluster is going to",
    "start": "686460",
    "end": "692340"
  },
  {
    "text": "be the kubernetes cluster we are talking about and the second is this high availability cluster let's first see",
    "start": "692340",
    "end": "699270"
  },
  {
    "text": "what purpose we can chorusing does this is a very simple conceptual diagram here",
    "start": "699270",
    "end": "706380"
  },
  {
    "text": "it shows that we have some hardware some services running on some machines and",
    "start": "706380",
    "end": "712550"
  },
  {
    "text": "then pacemaker and chorusing running on top of that managing some resources and",
    "start": "712550",
    "end": "718940"
  },
  {
    "text": "monitoring them with some control loop so to speak when it detects hardware",
    "start": "718940",
    "end": "726030"
  },
  {
    "text": "failure it moves the resources to other nodes depending on what you define in",
    "start": "726030",
    "end": "732180"
  },
  {
    "text": "the policy so without further ado let's",
    "start": "732180",
    "end": "739500"
  },
  {
    "text": "configure controllers so what we did was we said in this cube Nettie's cluster",
    "start": "739500",
    "end": "745380"
  },
  {
    "text": "the big one we introduced a smaller cluster we made controller nodes a small",
    "start": "745380",
    "end": "752640"
  },
  {
    "text": "8a cluster using chorusing and pacemaker",
    "start": "752640",
    "end": "758230"
  },
  {
    "text": "so these two nodes have their own individual infrastructure level IP addresses for example dot 21 22 and we",
    "start": "758230",
    "end": "767500"
  },
  {
    "text": "introduced a virtual IP resource which pacemaker controls and that could be",
    "start": "767500",
    "end": "774700"
  },
  {
    "text": "assigned to any one node at any given time so all the nodes anything as trying",
    "start": "774700",
    "end": "781720"
  },
  {
    "text": "to contact this IP address lands on either of these two depending on where it is at any given time so that falls",
    "start": "781720",
    "end": "790650"
  },
  {
    "text": "not only what 2.2 problem but also the",
    "start": "790650",
    "end": "795820"
  },
  {
    "text": "high availability the single point of failure problem now this is a small cluster so if one node dies and if that",
    "start": "795820",
    "end": "803230"
  },
  {
    "text": "node happens to be the active node can having the IP address the virtual IP",
    "start": "803230",
    "end": "808810"
  },
  {
    "text": "address the moment it dies the IP address floats to the other node and the other node becomes active and nobody",
    "start": "808810",
    "end": "816220"
  },
  {
    "text": "ever notices what happened dub operations continue fluently then we",
    "start": "816220",
    "end": "823420"
  },
  {
    "text": "address this problem of load balancer in the same way here so we introduced two",
    "start": "823420",
    "end": "833470"
  },
  {
    "text": "load balances and we set up a small cluster for them they have their own individual IP addresses yes they get a",
    "start": "833470",
    "end": "843490"
  },
  {
    "text": "virtual IP which I forgot to write here they have dot they have the IP address",
    "start": "843490",
    "end": "851800"
  },
  {
    "text": "dot 40 these load balancers you will see it in the probably the next slide so now",
    "start": "851800",
    "end": "857800"
  },
  {
    "text": "the load balancers can look up to this and the load balancers have their own virtual IP which the incoming traffic",
    "start": "857800",
    "end": "863380"
  },
  {
    "text": "sees my apologies for not writing the IP address it is 10 to 40 0.44 0 it's not",
    "start": "863380",
    "end": "872890"
  },
  {
    "text": "written here so this is how we cluster eyes or created sub-clusters inside",
    "start": "872890",
    "end": "880300"
  },
  {
    "text": "kubernetes cluster and it has no interference with kubernetes operations",
    "start": "880300",
    "end": "885760"
  },
  {
    "text": "you have to remember this and we went ahead and did the same for",
    "start": "885760",
    "end": "893670"
  },
  {
    "text": "xcd so actually has these knows individual IP addresses dot 11 or 12 or",
    "start": "893670",
    "end": "899290"
  },
  {
    "text": "13 but we gave it a virtual IP dot 10 so now when master nodes or controller",
    "start": "899290",
    "end": "907330"
  },
  {
    "text": "nodes need to talk to a CD instance in their code in the cube API server configuration we just specify one at CD",
    "start": "907330",
    "end": "914980"
  },
  {
    "text": "address and that is the virtual IP and it talks to the HDD cluster so before I",
    "start": "914980",
    "end": "929950"
  },
  {
    "text": "go into explaining chorusing and pacemaker let me go back one step so we",
    "start": "929950",
    "end": "938170"
  },
  {
    "text": "assign a virtual IP to either of these two nodes right you understand that part",
    "start": "938170",
    "end": "943980"
  },
  {
    "text": "okay controller node form an internal",
    "start": "943980",
    "end": "950380"
  },
  {
    "text": "cluster the kubernetes software forms an internal cluster itself there is a",
    "start": "950380",
    "end": "955720"
  },
  {
    "text": "leader which is elected by itself and then the other nodes become followers so",
    "start": "955720",
    "end": "961839"
  },
  {
    "text": "if you are thinking that what if the IP address is assigned to a follower let's",
    "start": "961839",
    "end": "971020"
  },
  {
    "text": "assume controller 2 is follower controller 1 is leader but the virtual IP address right now resides on",
    "start": "971020",
    "end": "977500"
  },
  {
    "text": "controller 2 it's not a big problem it takes the request it just gives it to",
    "start": "977500",
    "end": "983829"
  },
  {
    "text": "the leader and the leader does what it wants to do and then and business continues and if for example the virtual",
    "start": "983829",
    "end": "992020"
  },
  {
    "text": "IP was already in controller 1 and that was active it just receives all the requests and handles them so the the",
    "start": "992020",
    "end": "1000899"
  },
  {
    "text": "point is not a factor of the the thing that controller nodes have their own",
    "start": "1000899",
    "end": "1007800"
  },
  {
    "text": "internal net internal cluster saves us from a lot of configuration on pacemaker",
    "start": "1007800",
    "end": "1013620"
  },
  {
    "text": "level we don't have to manage and bind our virtual IP address with the",
    "start": "1013620",
    "end": "1022040"
  },
  {
    "text": "ladies services we don't have to find that find out where is the leader and",
    "start": "1022040",
    "end": "1028280"
  },
  {
    "text": "then go and set up the virtual IP address on that node we don't need to do",
    "start": "1028280",
    "end": "1034668"
  },
  {
    "text": "that so we we are saved in that aspect from lot of configuration so how it",
    "start": "1034669",
    "end": "1046308"
  },
  {
    "text": "works yes",
    "start": "1046309",
    "end": "1050409"
  },
  {
    "text": "how much latency is there between the master nodes they are on the same",
    "start": "1065830",
    "end": "1081860"
  },
  {
    "text": "premise same side same right so so there is no latency yes",
    "start": "1081860",
    "end": "1093000"
  },
  {
    "text": "let's just go ahead and ask questions this one yes",
    "start": "1093000",
    "end": "1107059"
  },
  {
    "text": "the way we saw kubernetes working we saw one node acting as a leader and the",
    "start": "1119419",
    "end": "1126630"
  },
  {
    "text": "others acting as followers and we saw the same in sed hmm so so that's why we came up",
    "start": "1126630",
    "end": "1137400"
  },
  {
    "text": "with this design that even if a master node is a is a follower then it can talk",
    "start": "1137400",
    "end": "1145320"
  },
  {
    "text": "to still talk to the leader and then the leader can do whatever it wants to do",
    "start": "1145320",
    "end": "1151940"
  },
  {
    "text": "so these controllers are not so small in the first place",
    "start": "1166669",
    "end": "1173450"
  },
  {
    "text": "theoretical theoretically I have not looked into that so you have to quite a",
    "start": "1173450",
    "end": "1184080"
  },
  {
    "text": "lot of or if is ever will boost the",
    "start": "1184080",
    "end": "1189419"
  },
  {
    "text": "first per second so we could release a little bit faster and we find that we",
    "start": "1189419",
    "end": "1194549"
  },
  {
    "text": "need to balance the traffic to several API server okay we mean more like the",
    "start": "1194549",
    "end": "1200940"
  },
  {
    "text": "same than usual but we set up two proxies in front there and they are be a following I'd be in demand me there okay",
    "start": "1200940",
    "end": "1209070"
  },
  {
    "text": "so you you are saying that you need a load balancer behind these two and we",
    "start": "1209070",
    "end": "1214559"
  },
  {
    "text": "can make that load balancer highly available ok we can do that yes of course thank you for for sharing this",
    "start": "1214559",
    "end": "1221100"
  },
  {
    "text": "idea but we did not do it we can do it in our future products so you know the",
    "start": "1221100",
    "end": "1233000"
  },
  {
    "text": "master IP from two different machine and so the rapper chooses which want to go",
    "start": "1233000",
    "end": "1240870"
  },
  {
    "text": "to a based on IP forecast and so you have not actually not only your fate of",
    "start": "1240870",
    "end": "1247889"
  },
  {
    "text": "a machine but also a local entity okay we can we can discuss this after the",
    "start": "1247889",
    "end": "1254549"
  },
  {
    "text": "target sir this is very important this is very important and we're really good talk so we will discuss this okay very nice",
    "start": "1254549",
    "end": "1263159"
  },
  {
    "text": "so how it works Sakura think actually when chorusing runs it forms some sort",
    "start": "1263159",
    "end": "1270000"
  },
  {
    "text": "of ring as shown here a communication ring it calls itself a totem ring but",
    "start": "1270000",
    "end": "1276750"
  },
  {
    "text": "let's call it a ring and it keeps listening to the heartbeats of all the",
    "start": "1276750",
    "end": "1282179"
  },
  {
    "text": "nodes which are involved and also make sure that the quorum is there if it is",
    "start": "1282179",
    "end": "1289019"
  },
  {
    "text": "configured and other stuff and then we run pacemaker on top of",
    "start": "1289019",
    "end": "1294780"
  },
  {
    "text": "which talks to carousing and extract certain statistics and takes actions",
    "start": "1294780",
    "end": "1301110"
  },
  {
    "text": "based on what course Inc reports so pacemaker manages the resource itself",
    "start": "1301110",
    "end": "1307200"
  },
  {
    "text": "the virtual IP here which is moving between the nodes that is that is space",
    "start": "1307200",
    "end": "1313410"
  },
  {
    "text": "makers job that's not chorusing job core things job is to make sure that it's listening to all the cluster nodes and",
    "start": "1313410",
    "end": "1321750"
  },
  {
    "text": "here the cluster is this AJ cluster so when the node fails chorusing detects",
    "start": "1321750",
    "end": "1329760"
  },
  {
    "text": "that it tells pacemaker pacemaker acts on that and moves the resource to the",
    "start": "1329760",
    "end": "1335820"
  },
  {
    "text": "other node so you see like this it moves to the other node that is the basic",
    "start": "1335820",
    "end": "1343440"
  },
  {
    "text": "principle of co how chorusing and pacemaker work together and these resources can be anything here we are",
    "start": "1343440",
    "end": "1349650"
  },
  {
    "text": "using IP address they can be a service they could be anything and I wanted to",
    "start": "1349650",
    "end": "1356430"
  },
  {
    "text": "highlight that when you use a high availability when you set up a high availability list cluster it is very",
    "start": "1356430",
    "end": "1363210"
  },
  {
    "text": "important to not have a single network because that single network can become",
    "start": "1363210",
    "end": "1370200"
  },
  {
    "text": "your single point of failure because if the communication fails the switch fails or something the nodes both nodes will",
    "start": "1370200",
    "end": "1377790"
  },
  {
    "text": "think that they are the master and they are the active nodes and they will try",
    "start": "1377790",
    "end": "1382860"
  },
  {
    "text": "to get hold of that resource this is called split brain through its brain",
    "start": "1382860",
    "end": "1388850"
  },
  {
    "text": "syndrome and it is prevented by using certain fencing mechanisms but primarily",
    "start": "1388850",
    "end": "1398870"
  },
  {
    "text": "to assist fencing you need to have multiple communication channels between",
    "start": "1398870",
    "end": "1404090"
  },
  {
    "text": "the AJ cluster nodes so here is just an",
    "start": "1404090",
    "end": "1409260"
  },
  {
    "text": "example I have shown you we have to load balances and we have three small",
    "start": "1409260",
    "end": "1414350"
  },
  {
    "text": "separate switches connected to these and all of these are different different",
    "start": "1414350",
    "end": "1421410"
  },
  {
    "text": "networks so this is 10 to 4000 / 24 this is 192 168 1 0 1 . 0/10",
    "start": "1421410",
    "end": "1429210"
  },
  {
    "text": "for this is 191 68 1 0 2.0 / 24 so these",
    "start": "1429210",
    "end": "1436740"
  },
  {
    "text": "are three different networks that means three separate crossing rings which so",
    "start": "1436740",
    "end": "1446159"
  },
  {
    "text": "if one fails coursing sees that the link has failed but the communication is",
    "start": "1446159",
    "end": "1451380"
  },
  {
    "text": "still there so it doesn't go on and tell pacemaker that you need to move resources no it informs pacemaker that a",
    "start": "1451380",
    "end": "1458610"
  },
  {
    "text": "link has gone down but it doesn't let doesn't ask it to move the resource and",
    "start": "1458610",
    "end": "1467340"
  },
  {
    "text": "this is how you should well the purists of H a they say that if there are less",
    "start": "1467340",
    "end": "1474929"
  },
  {
    "text": "than 4 networks or communication links it's not an edge a cluster so sure the",
    "start": "1474929",
    "end": "1483570"
  },
  {
    "text": "purists can think like that but here 3 are enough for us so in order to set",
    "start": "1483570",
    "end": "1493110"
  },
  {
    "text": "this up yourself what do you need if you try to do it on Amazon you will not be",
    "start": "1493110",
    "end": "1501000"
  },
  {
    "text": "able to because Amazon does not support broadcast and multicast and we need rod",
    "start": "1501000",
    "end": "1507210"
  },
  {
    "text": "cast and multicast for chorusing 2 it sends its packets and this is to it and",
    "start": "1507210",
    "end": "1512820"
  },
  {
    "text": "everything so we can't do it on any cloud provider any software-defined",
    "start": "1512820",
    "end": "1518730"
  },
  {
    "text": "networks as I understand I may be wrong",
    "start": "1518730",
    "end": "1524090"
  },
  {
    "text": "I didn't see a unicast option in chorusing configuration sorry",
    "start": "1525110",
    "end": "1534919"
  },
  {
    "text": "it works now it is not there I've searched everywhere in this man pages",
    "start": "1535480",
    "end": "1542570"
  },
  {
    "text": "and everything yes maybe you can you can increase my knowledge so what we you can",
    "start": "1542570",
    "end": "1549740"
  },
  {
    "text": "do is to set this up you can use V ends or of course go for the bare metal and",
    "start": "1549740",
    "end": "1554830"
  },
  {
    "text": "use do their support okay I don't know",
    "start": "1554830",
    "end": "1564159"
  },
  {
    "text": "really good so if if the the provider you are using supports these multicast",
    "start": "1572710",
    "end": "1580730"
  },
  {
    "text": "and broadcast then please go ahead use that and you need to install chorusing",
    "start": "1580730",
    "end": "1587360"
  },
  {
    "text": "pacemaker and PCs just three packages we are we are red-haired fans so YUM no",
    "start": "1587360",
    "end": "1594200"
  },
  {
    "text": "applet here for us and this is a simplified configuration shown this is",
    "start": "1594200",
    "end": "1603380"
  },
  {
    "text": "more or less what you need nothing more complicated so you how do you setup a cluster you just execute very simple",
    "start": "1603380",
    "end": "1609740"
  },
  {
    "text": "commands few few of them are missing here I just wanted to keep things simple",
    "start": "1609740",
    "end": "1614800"
  },
  {
    "text": "but there is not much rocket science involved here so you use these commands",
    "start": "1614800",
    "end": "1621050"
  },
  {
    "text": "and plus few others and you will have a working H a cluster for example I show",
    "start": "1621050",
    "end": "1629870"
  },
  {
    "text": "you the PCs commands status and it says that it has two nodes and one resource",
    "start": "1629870",
    "end": "1637700"
  },
  {
    "text": "configured it has it has two controller nodes online and a resource called",
    "start": "1637700",
    "end": "1643940"
  },
  {
    "text": "controller whip is running on controller one that means that is the active node",
    "start": "1643940",
    "end": "1650270"
  },
  {
    "text": "right now which has this IP this this resource controller whip is dot 20",
    "start": "1650270",
    "end": "1659890"
  },
  {
    "text": "demo and for demo I request Henrik yeah",
    "start": "1661290",
    "end": "1666900"
  },
  {
    "text": "I was asked if I wanted to break stuff and don't say no to that so the screen",
    "start": "1666900",
    "end": "1675440"
  },
  {
    "text": "resolution method a bit up but I think you get the point here hopefully you can see everything so the two top windows",
    "start": "1675440",
    "end": "1684540"
  },
  {
    "text": "are from my local machine my host I just do a good control get spots and could",
    "start": "1684540",
    "end": "1691170"
  },
  {
    "text": "control get CS and white to different",
    "start": "1691170",
    "end": "1698700"
  },
  {
    "text": "colors of the screen natural part of the screen this one is showing for every",
    "start": "1698700",
    "end": "1706650"
  },
  {
    "text": "half a second is getting a list of ports right yeah and this one this one here is",
    "start": "1706650",
    "end": "1713690"
  },
  {
    "text": "showing the cluster status give the troll get CS every half a second this",
    "start": "1713690",
    "end": "1720450"
  },
  {
    "text": "one is the output of IP address command from controller node 1 this is output of",
    "start": "1720450",
    "end": "1727590"
  },
  {
    "text": "IP address command from controller node 2 and this is an active part running",
    "start": "1727590",
    "end": "1735030"
  },
  {
    "text": "nginx I believe and watch loop every half a second and we are also pinging",
    "start": "1735030",
    "end": "1741740"
  },
  {
    "text": "the virtual IP address which is 10.2 40.0 20 and these are our virtual",
    "start": "1741740",
    "end": "1750960"
  },
  {
    "text": "machines running on k vm yeah so I think I have like 11 virtual machines running",
    "start": "1750960",
    "end": "1756450"
  },
  {
    "text": "on my laptop so it's a bit slow and the network is a bit shaky but so what I",
    "start": "1756450",
    "end": "1763410"
  },
  {
    "text": "want to show here is that right now you can see that the controller one has two",
    "start": "1763410",
    "end": "1769230"
  },
  {
    "text": "IP addresses the 21 and the 20 and the controller 2 has only the 22 it has its",
    "start": "1769230",
    "end": "1777090"
  },
  {
    "text": "own IP and the thing we'll watch is that",
    "start": "1777090",
    "end": "1782790"
  },
  {
    "text": "when something stops working it doesn't fail by default so just so you'll need",
    "start": "1782790",
    "end": "1789030"
  },
  {
    "text": "to look at the up time so if they stop moving that's",
    "start": "1789030",
    "end": "1795730"
  },
  {
    "text": "because it can't connect to it so if we start by looking at these two and I kill",
    "start": "1795730",
    "end": "1808260"
  },
  {
    "text": "this one and you'll see that the virtual",
    "start": "1808830",
    "end": "1814360"
  },
  {
    "text": "IP pops over to this one now now this one isn't updated in more because it can't reach it right and this one",
    "start": "1814360",
    "end": "1822100"
  },
  {
    "text": "connected continues to two to run the",
    "start": "1822100",
    "end": "1827850"
  },
  {
    "text": "IPA Dadd command so now everything is running on controller to everything in",
    "start": "1827850",
    "end": "1834670"
  },
  {
    "text": "all the traffic and up here you see that everything is still working and it's",
    "start": "1834670",
    "end": "1839740"
  },
  {
    "text": "fine now the other example is that I have my my nginx running inside my cluster and I exposed it as an ingress",
    "start": "1839740",
    "end": "1847360"
  },
  {
    "text": "we have traffic traffic running on two machines we have lb 1 + lb 2 and they",
    "start": "1847360",
    "end": "1855250"
  },
  {
    "text": "also have a shared IP dot 40 and right now it's running on the width the",
    "start": "1855250",
    "end": "1863230"
  },
  {
    "text": "virtual IP is on lb 1 can we look can we kill this ICMP ping and can we ping dot",
    "start": "1863230",
    "end": "1871150"
  },
  {
    "text": "forty here yeah okay you use it",
    "start": "1871150",
    "end": "1876280"
  },
  {
    "text": "everybody saw here that the ping did not fail when we were pinging the",
    "start": "1876280",
    "end": "1882910"
  },
  {
    "text": "controllers and now we are bringing the load balancer what you lie P so this",
    "start": "1882910",
    "end": "1889540"
  },
  {
    "text": "curl updates every half second it tries to fill the production dot example.com",
    "start": "1889540",
    "end": "1895840"
  },
  {
    "text": "and if I kill my load balancer and we",
    "start": "1895840",
    "end": "1901690"
  },
  {
    "text": "see that it stops updating and then continues again down here so I mean you",
    "start": "1901690",
    "end": "1909490"
  },
  {
    "text": "you will lose a couple of connections while you do the switch but I think you'll lose connections no matter how",
    "start": "1909490",
    "end": "1916660"
  },
  {
    "text": "you do it I mean the problem with DNS and basic DNS is that if two other three",
    "start": "1916660",
    "end": "1924659"
  },
  {
    "text": "controllers are down then two out of three connections world will will not",
    "start": "1924659",
    "end": "1931440"
  },
  {
    "text": "reach the destination every time every single time until you fix it whereas here you only noose a couple of",
    "start": "1931440",
    "end": "1937230"
  },
  {
    "text": "connections while you actually do the switch that's the advantage here yeah so",
    "start": "1937230",
    "end": "1943049"
  },
  {
    "text": "now it's figured out that this is done and then again I can start it these",
    "start": "1943049",
    "end": "1948960"
  },
  {
    "text": "machines and this one should start acting again yeah",
    "start": "1948960",
    "end": "1958350"
  },
  {
    "text": "but the resource will not float back to that node which we turn on because they did not configure that policy there is",
    "start": "1958350",
    "end": "1964590"
  },
  {
    "text": "no point in moving a resource back to a previously fare node if it is working",
    "start": "1964590",
    "end": "1970769"
  },
  {
    "text": "correctly on the other node so there is no point in wasting switch over again so",
    "start": "1970769",
    "end": "1978210"
  },
  {
    "text": "so this is a very simple test I know it's not very scientific but just a",
    "start": "1978210",
    "end": "1985080"
  },
  {
    "text": "small test to show that the IP moves and we can still keep on and connecting and",
    "start": "1985080",
    "end": "1992549"
  },
  {
    "text": "can we go to our slides again yeah thank you Henrik thank you very much so we",
    "start": "1992549",
    "end": "2003440"
  },
  {
    "text": "just killed a kill de virtual machine you saw it so let's move forward and this is the book address it's work in",
    "start": "2003440",
    "end": "2012139"
  },
  {
    "text": "progress but it it it is going to contain all the configurations for pacemaker and Cora sync and everything",
    "start": "2012139",
    "end": "2018980"
  },
  {
    "text": "else how we set up the cluster and that's it so questions please yes",
    "start": "2018980",
    "end": "2028899"
  },
  {
    "text": "thank you yes very very good question",
    "start": "2033330",
    "end": "2057490"
  },
  {
    "text": "good question so the thing is we had to deliver this cluster and we couldn't",
    "start": "2057490",
    "end": "2064149"
  },
  {
    "text": "afford going into another research loop of researching other technologies and",
    "start": "2064150",
    "end": "2071850"
  },
  {
    "text": "bringing them under control and then putting them in production and since I",
    "start": "2071850",
    "end": "2078220"
  },
  {
    "text": "already had experience with the HJ clusters configuring so I said let's go",
    "start": "2078220",
    "end": "2084850"
  },
  {
    "text": "ahead with this it's tested for like more than I think I've been working with",
    "start": "2084850",
    "end": "2090490"
  },
  {
    "text": "these technologies for more than 10 years now so so it was a natural for us",
    "start": "2090490",
    "end": "2095530"
  },
  {
    "text": "to just use this but we can definitely look in the other directions yes more",
    "start": "2095530",
    "end": "2105940"
  },
  {
    "text": "questions okay that's it thank you very much for",
    "start": "2105940",
    "end": "2112850"
  },
  {
    "text": "coming thank you",
    "start": "2112850",
    "end": "2115870"
  }
]