[
  {
    "text": "hi um welcome to the last session of today uh which is going to be about um",
    "start": "1000",
    "end": "8400"
  },
  {
    "text": "search engines and how they can be more or less",
    "start": "8400",
    "end": "13320"
  },
  {
    "text": "microservices so the agenda would be to go over the main workloads kind of from",
    "start": "13960",
    "end": "19920"
  },
  {
    "text": "the in infrastructure standpoint uh we'll start with stateless workloads",
    "start": "19920",
    "end": "25640"
  },
  {
    "text": "we'll go to uh Distributing the configuration and handling the cluster",
    "start": "25640",
    "end": "30840"
  },
  {
    "text": "State and then the stateful workload uh of course the actual data distribution",
    "start": "30840",
    "end": "36399"
  },
  {
    "text": "and then um how to how they monitor everything um",
    "start": "36399",
    "end": "41719"
  },
  {
    "text": "and because the focal point would be vesa um I'll talk a bit about how you",
    "start": "41719",
    "end": "46920"
  },
  {
    "text": "can run bestp inators today and how that might evolve in the",
    "start": "46920",
    "end": "52399"
  },
  {
    "text": "future so to clarify the search engine Vector DB kind of space I'm thinking",
    "start": "52960",
    "end": "58239"
  },
  {
    "text": "about information retrieval so uh we have a corpus of documents we",
    "start": "58239",
    "end": "64040"
  },
  {
    "text": "want to extract something relevant out of it this could be through keyword search this could be through um semantic",
    "start": "64040",
    "end": "71880"
  },
  {
    "text": "search like vector search could be rag could be recommendations or um like data",
    "start": "71880",
    "end": "80159"
  },
  {
    "text": "analytics like we can use grouping to see what's in that Corpus in real time",
    "start": "80159",
    "end": "85200"
  },
  {
    "text": "so this is the space that I'm that I'm referring to and there are lots of tools that are in this space space and I think",
    "start": "85200",
    "end": "90720"
  },
  {
    "text": "the the list is keeps growing um and I wanted to ask if you have experience",
    "start": "90720",
    "end": "97320"
  },
  {
    "text": "with the Lucine search engines either elastic search open search or solar can I get a show of",
    "start": "97320",
    "end": "102880"
  },
  {
    "text": "hands oh this is awesome cuz that's also most of my professional background I've been working with those for more than 10",
    "start": "102880",
    "end": "110079"
  },
  {
    "text": "years at a company called sematext um but I recently joined vespi and Vespa",
    "start": "110079",
    "end": "116439"
  },
  {
    "text": "is an open- Source search engine also kind of in the information retrieval space not exact exactly overlapping in",
    "start": "116439",
    "end": "123640"
  },
  {
    "text": "terms of use casys with with the others but there's quite a lot of overlap um so what I'll do today is I'll",
    "start": "123640",
    "end": "130720"
  },
  {
    "text": "talk a lot about the architecture of vpa from an infrastructure standpoint",
    "start": "130720",
    "end": "136879"
  },
  {
    "text": "and compare that to my point of reference uh which seems to be yours as well which is like how elastic search",
    "start": "136879",
    "end": "144800"
  },
  {
    "text": "and the rest work by the way uh how many of you have heard by of vesa or work with vpa can I get a show hands okay so",
    "start": "144800",
    "end": "152720"
  },
  {
    "text": "this is will be new to you I think vpa right but we're vpa AI That's the the",
    "start": "152720",
    "end": "159760"
  },
  {
    "text": "distinction and there are other um as I said a lot of tools in the space I won't",
    "start": "159760",
    "end": "164879"
  },
  {
    "text": "touch them but just wanted to acknowledge that uh we're not the only ones okay so the tasks that are looking",
    "start": "164879",
    "end": "173239"
  },
  {
    "text": "uh that we're looking at uh obviously there's a lot of data that has to be potentially distributed we may need to",
    "start": "173239",
    "end": "179640"
  },
  {
    "text": "take take care of all tolerance and things like that that I think is obvious what may be less obvious is that we also",
    "start": "179640",
    "end": "186280"
  },
  {
    "text": "has have to do a lot of stateless processing like you know when we process",
    "start": "186280",
    "end": "191400"
  },
  {
    "text": "queries and documents when we're writing and this I think is increasingly complex and I'm also going to talk about",
    "start": "191400",
    "end": "199040"
  },
  {
    "text": "the configuration meaning like Distributing the schema and other things to all the nodes and making sure we know",
    "start": "199040",
    "end": "206879"
  },
  {
    "text": "which node is alive and which one is not things like that and of course monitoring everything right so this is",
    "start": "206879",
    "end": "213560"
  },
  {
    "text": "the focus um so I'll start with st stateless workloads so let me give you some",
    "start": "213560",
    "end": "219040"
  },
  {
    "text": "examples to put some some flesh on that idea uh so for example when we write",
    "start": "219040",
    "end": "224360"
  },
  {
    "text": "documents we may want to do some processing like uh let's append a",
    "start": "224360",
    "end": "229680"
  },
  {
    "text": "timestamp or if we want to generate vectors you know for Vector search we",
    "start": "229680",
    "end": "235000"
  },
  {
    "text": "can generate those embeddings from text or from images we' use a machine learning model so um that is stateless",
    "start": "235000",
    "end": "242200"
  },
  {
    "text": "processing effectively um at query time you know we can do some custom query",
    "start": "242200",
    "end": "248439"
  },
  {
    "text": "parsing we can apply our business logic um one of the things that has to be done with distributed systems is to",
    "start": "248439",
    "end": "255840"
  },
  {
    "text": "distribute the query to all the notes that hold data and then gather partial",
    "start": "255840",
    "end": "261120"
  },
  {
    "text": "results um into a final response that will then go to the client that is also",
    "start": "261120",
    "end": "267000"
  },
  {
    "text": "stateless processing and we may also want to process results",
    "start": "267000",
    "end": "273080"
  },
  {
    "text": "further so for example during rag right like You' send the query with a prompt to Vespa for example and then Vespa can",
    "start": "273080",
    "end": "280520"
  },
  {
    "text": "send those results with the prompt to an llm the llm can be remote or could be hosted in your vesa cluster and then",
    "start": "280520",
    "end": "287919"
  },
  {
    "text": "stream the reply back to the client right so this kind of processing is",
    "start": "287919",
    "end": "293720"
  },
  {
    "text": "stateless in essence and we can deal with it separately than with the than we do with the state",
    "start": "293720",
    "end": "301560"
  },
  {
    "text": "part okay how how do these search engines do it well with the Lucine",
    "start": "301560",
    "end": "306880"
  },
  {
    "text": "search engines there's this concept of node roles so um all the nodes will run off",
    "start": "306880",
    "end": "313840"
  },
  {
    "text": "the same image but you can configure them and say this node shouldn't hold data for example right and this is how",
    "start": "313840",
    "end": "319800"
  },
  {
    "text": "how this works and stateless processing can be done by coordinator or",
    "start": "319800",
    "end": "325319"
  },
  {
    "text": "specifically to wres by by in just nodes best has a different approach in",
    "start": "325319",
    "end": "331080"
  },
  {
    "text": "the sense that um nodes will have different services and a service is a",
    "start": "331080",
    "end": "337479"
  },
  {
    "text": "separate process could be in a different language like in this case um the",
    "start": "337479",
    "end": "342560"
  },
  {
    "text": "stateless processing is done by the Java stateless container which is in Java as",
    "start": "342560",
    "end": "348520"
  },
  {
    "text": "opposed to the content node which deals with data that is a compil binary from like C++ code and if you're confused",
    "start": "348520",
    "end": "357120"
  },
  {
    "text": "with the container terminology this is for historical reasons because this name",
    "start": "357120",
    "end": "363319"
  },
  {
    "text": "came up about 20 years ago uh when vesa kind of started in the way it is right",
    "start": "363319",
    "end": "369479"
  },
  {
    "text": "now it was open sourced in 2017 but the history is quite",
    "start": "369479",
    "end": "375160"
  },
  {
    "text": "involved okay let's move on to the next uh task which is managing the config and",
    "start": "375479",
    "end": "380880"
  },
  {
    "text": "what do I mean by config I mean all the metad data everything that is not a document or not a query that's being",
    "start": "380880",
    "end": "387319"
  },
  {
    "text": "processed and I would make a distinction here between two sides of that metadata",
    "start": "387319",
    "end": "392400"
  },
  {
    "text": "so it can be a behavior definition so how is the search engine supposed to",
    "start": "392400",
    "end": "399120"
  },
  {
    "text": "react to input so here we can think of things like schema or when we generate",
    "start": "399120",
    "end": "405479"
  },
  {
    "text": "embeddings which model to use so things like that which Define the the behavior and this is different than the",
    "start": "405479",
    "end": "413720"
  },
  {
    "text": "current state of the cluster right so mostly we're thinking about data and like which no are up which bit of data",
    "start": "413720",
    "end": "421840"
  },
  {
    "text": "lives where um and that is also metadata that has to be",
    "start": "421840",
    "end": "428800"
  },
  {
    "text": "managed so Lucine search engines treat all this metadata pretty much uniformly",
    "start": "428800",
    "end": "434720"
  },
  {
    "text": "which is um you know straightforward way to do it um so for example elastic",
    "start": "434720",
    "end": "441039"
  },
  {
    "text": "search and open search um they each node will have a copy of the all the metadata",
    "start": "441039",
    "end": "449120"
  },
  {
    "text": "but only only the cluster manager or Master node is allowed to write to the metadata so when a no node joins the",
    "start": "449120",
    "end": "455919"
  },
  {
    "text": "cluster or you change the schema that's processed by the um the master or the",
    "start": "455919",
    "end": "462120"
  },
  {
    "text": "cluster manager and then it's the cluster manager role to distribute all",
    "start": "462120",
    "end": "467680"
  },
  {
    "text": "those changes to the other nodes make sure they got the the updated thing and",
    "start": "467680",
    "end": "473800"
  },
  {
    "text": "then it also is responsible for pinging all the other nodes to make sure",
    "start": "473800",
    "end": "479840"
  },
  {
    "text": "um that they're up right because otherwise has to mark them as down solar has a slightly different approach in the",
    "start": "479840",
    "end": "486319"
  },
  {
    "text": "sense that it uses zookeeper to stall or to store all this metadata but again",
    "start": "486319",
    "end": "491720"
  },
  {
    "text": "there's one node in the cluster it's called the overseer that is able to make the changes and while we can scale",
    "start": "491720",
    "end": "498759"
  },
  {
    "text": "zookeeper for reads we cannot scale it for rights and the same is true for zookeeper so those might become Bal",
    "start": "498759",
    "end": "505039"
  },
  {
    "text": "necks if the cluster is large and or if we have a lot of metadata changes in the",
    "start": "505039",
    "end": "514560"
  },
  {
    "text": "cluster Vespa has a completely different approach uh so first of all it deals with the behavior separately from the",
    "start": "514560",
    "end": "521760"
  },
  {
    "text": "cluster state so I'll start with the behavior um the behavior definition goes",
    "start": "521760",
    "end": "528600"
  },
  {
    "text": "into a set of files that make up the application package so you can think of the application package as a kubis",
    "start": "528600",
    "end": "536320"
  },
  {
    "text": "resource um and we we say we deploy an application package in the same way you",
    "start": "536320",
    "end": "542120"
  },
  {
    "text": "would do Cub CTL apply and when you do that the the",
    "start": "542120",
    "end": "547240"
  },
  {
    "text": "configuration goes to the config servers that will store this configuration to",
    "start": "547240",
    "end": "553440"
  },
  {
    "text": "zookeeper and then at runtime every node no matter what what it does will have",
    "start": "553440",
    "end": "559720"
  },
  {
    "text": "this other separate process which is called config proxy and the config proxy",
    "start": "559720",
    "end": "565399"
  },
  {
    "text": "will serve the configuration for that node the config proxy will communicate",
    "start": "565399",
    "end": "570440"
  },
  {
    "text": "by default to the config server to get the updated",
    "start": "570440",
    "end": "575839"
  },
  {
    "text": "configuration right but it doesn't have to do that we can also say Do not",
    "start": "575839",
    "end": "581000"
  },
  {
    "text": "communicate and if the config changes I don't know I'll restart",
    "start": "581000",
    "end": "586600"
  },
  {
    "text": "you with data distribution um this this is a separate",
    "start": "586640",
    "end": "591839"
  },
  {
    "text": "service that's called cluster controller like we have multiple cluster controllers in the cluster they elect",
    "start": "591839",
    "end": "597320"
  },
  {
    "text": "the leader and it's the leader's role to update to keep an updated cluster state",
    "start": "597320",
    "end": "602360"
  },
  {
    "text": "so it will ping all the uh nodes that hold data so those be the content nodes",
    "start": "602360",
    "end": "608079"
  },
  {
    "text": "and it will know which one is alive and also which bucket of data lives",
    "start": "608079",
    "end": "614279"
  },
  {
    "text": "where uh and it it can do some of that by looking at the ideal uh bucket",
    "start": "614279",
    "end": "620839"
  },
  {
    "text": "distribution so that is deterministic which is I find interesting like if you know how many nodes you have then you",
    "start": "620839",
    "end": "628399"
  },
  {
    "text": "pretty much know without looking which chunks of data should be",
    "start": "628399",
    "end": "634560"
  },
  {
    "text": "where and I want to talk a bit more about the distributed model of data of both um kinds of engines",
    "start": "634560",
    "end": "642399"
  },
  {
    "text": "to to add some clarification so you're probably familiar with how elastic search and",
    "start": "642399",
    "end": "648800"
  },
  {
    "text": "open search and solar do it so you have multiple you can have multiple indices and each index can have multiple shards",
    "start": "648800",
    "end": "655399"
  },
  {
    "text": "and then each Shard can have a number of copies right replica and the idea is we can have more shards",
    "start": "655399",
    "end": "663320"
  },
  {
    "text": "to distribute the data onto more nodes and this will um distribute both reads",
    "start": "663320",
    "end": "668800"
  },
  {
    "text": "and write wres to the other nodes and you can also have more replicas to distribute only reads to all the nodes",
    "start": "668800",
    "end": "676399"
  },
  {
    "text": "and also that adds fa tolerance right so that's the tradeoff um let's see what happens when",
    "start": "676399",
    "end": "683399"
  },
  {
    "text": "we add a new node well we can migrate some of the shards to the new node how",
    "start": "683399",
    "end": "689440"
  },
  {
    "text": "this work from the leader or the primary Shard we create a new copy or well they",
    "start": "689440",
    "end": "696240"
  },
  {
    "text": "do it the search engine does it right creates a new copy on the new node and then when that is done removes the old",
    "start": "696240",
    "end": "702360"
  },
  {
    "text": "copy and this will simply copy the files which contains everything like the index data structures there but there's a bit",
    "start": "702360",
    "end": "709639"
  },
  {
    "text": "of the of a race because during that move or during that replica",
    "start": "709639",
    "end": "714920"
  },
  {
    "text": "initialization you have to keep writing to the transaction log because if something goes wrong you need to be able",
    "start": "714920",
    "end": "720040"
  },
  {
    "text": "to start over again and this is why um there's this",
    "start": "720040",
    "end": "726279"
  },
  {
    "text": "practical limitation of how large a Shard can be you'll probably find the device on the internet it shouldn't be",
    "start": "726279",
    "end": "732120"
  },
  {
    "text": "over 50 or 100 gigs that's the reason because the transaction L can grow way",
    "start": "732120",
    "end": "737199"
  },
  {
    "text": "too large when you're doing this move so vesa has this uh different",
    "start": "737199",
    "end": "744680"
  },
  {
    "text": "approach which you might find in like mongod DB or Cassandra where we divide",
    "start": "744680",
    "end": "749720"
  },
  {
    "text": "the document space into um many small buckets and these are like virtual",
    "start": "749720",
    "end": "755600"
  },
  {
    "text": "buckets um because the actual data structures are per",
    "start": "755600",
    "end": "760800"
  },
  {
    "text": "node right we don't actually have separate files for each",
    "start": "760800",
    "end": "765959"
  },
  {
    "text": "bucket so the data structures per node are a good thing for queries because then you have only one data structure to",
    "start": "765959",
    "end": "772440"
  },
  {
    "text": "go through when you do the query we actually Benchmark this if you like Google for Vespa versus elastic search",
    "start": "772440",
    "end": "778720"
  },
  {
    "text": "performance you'll see quite a lot of details like there's an 80 page document about it um of prec precisely this kind",
    "start": "778720",
    "end": "787279"
  },
  {
    "text": "of tradeoff which has lot lots of pros and cons but the point is when it comes",
    "start": "787279",
    "end": "792680"
  },
  {
    "text": "to data distribution we have this virtual bucket space which um means that if we add a new node we can move you",
    "start": "792680",
    "end": "800720"
  },
  {
    "text": "know proportional number of buckets to the new node but the problem is we don't move the actual buckets of data we have",
    "start": "800720",
    "end": "808800"
  },
  {
    "text": "to reindex all the documents belonging to those buckets so this is a more expensive process we don't simply copy",
    "start": "808800",
    "end": "815000"
  },
  {
    "text": "the files as we do with shards that's the downside the upside is we don't have to think up front about the number of",
    "start": "815000",
    "end": "821079"
  },
  {
    "text": "shards that we need to have in order to have a balanced cluster right because that's usually the ball neck with",
    "start": "821079",
    "end": "827079"
  },
  {
    "text": "sharded kind of search engines in the sense that some nodes can become hotspots here that's not so much a",
    "start": "827079",
    "end": "833920"
  },
  {
    "text": "problem because data can be moved much more granularly and we also don't have the transaction log problem right",
    "start": "833920",
    "end": "840920"
  },
  {
    "text": "because we have some buckets that were initialized in the new node and then new data goes directly there we don't have",
    "start": "840920",
    "end": "847320"
  },
  {
    "text": "to wait for The Shard to be initialized on the new",
    "start": "847320",
    "end": "851759"
  },
  {
    "text": "node okay let's move to monitoring so all these search engines expose uh",
    "start": "853279",
    "end": "859160"
  },
  {
    "text": "metric API and um elastic search and open",
    "start": "859160",
    "end": "864240"
  },
  {
    "text": "search will also centralize metrics for you so if you hit one node you can get all the metrics from the whole cluster",
    "start": "864240",
    "end": "870920"
  },
  {
    "text": "this of course is not free um solar does it um in a more",
    "start": "870920",
    "end": "876320"
  },
  {
    "text": "simpler way like you hit one node you get its metrics and that's it and Vespa does a bit of a mix so",
    "start": "876320",
    "end": "884199"
  },
  {
    "text": "again there's a different service which is called the metric proxy that exposes metrics and can also expose them in in",
    "start": "884199",
    "end": "891680"
  },
  {
    "text": "Prometheus format directly it centralizes those metrics and can also cach them",
    "start": "891680",
    "end": "899560"
  },
  {
    "text": "with logs uh the Lucine search engines they are written in Java it's like one process by and large per node so that",
    "start": "899839",
    "end": "908079"
  },
  {
    "text": "with a default image will log on standard output you can use whatever specialized tools to centralize these",
    "start": "908079",
    "end": "914120"
  },
  {
    "text": "logs all very nice vesa has more of like an old school kind of approach which is",
    "start": "914120",
    "end": "922079"
  },
  {
    "text": "we have separate processes they all use like this common logging uh module and",
    "start": "922079",
    "end": "927360"
  },
  {
    "text": "they all write to files and then you have a process called log D which has to handle the rotation of these files and",
    "start": "927360",
    "end": "933600"
  },
  {
    "text": "forwards them to yet another process in the cluster called log server right so this could in the future be simplified",
    "start": "933600",
    "end": "941399"
  },
  {
    "text": "to just let's write to standard output and let the specialized tools deal with",
    "start": "941399",
    "end": "947000"
  },
  {
    "text": "it so speaking of that let let me contrast like how vesa works on kubernetes today versus how it can look",
    "start": "947000",
    "end": "953680"
  },
  {
    "text": "in the future so this would be an example cluster and Rel relatively",
    "start": "953680",
    "end": "959519"
  },
  {
    "text": "simple approach but still like full tolerant and with all the important bits and pieces so we have documents and",
    "start": "959519",
    "end": "965959"
  },
  {
    "text": "queries that would hit the stateless layer those are the stateless container nodes that I've been talking about and",
    "start": "965959",
    "end": "972720"
  },
  {
    "text": "they would forward the data to the content nodes which hold the actual data and then we have config nodes which",
    "start": "972720",
    "end": "979560"
  },
  {
    "text": "typically are collocated with zookeeper like there's an embedded zookeeper and then they can also I mean",
    "start": "979560",
    "end": "985680"
  },
  {
    "text": "t in a typical cluster they would also call collocate with the cluster",
    "start": "985680",
    "end": "990920"
  },
  {
    "text": "controllers um and then there's usually an admin server separately that runs the log server for centralizing",
    "start": "990920",
    "end": "998600"
  },
  {
    "text": "logs so in order to deploy a vpar cluster on kubernetes you have you first",
    "start": "998600",
    "end": "1004040"
  },
  {
    "text": "have to bootstrap it what does that mean we have to make sure that the config servers are up before everything else",
    "start": "1004040",
    "end": "1011800"
  },
  {
    "text": "that's because we want to apply an application package which tells everything so vesa will have one image",
    "start": "1011800",
    "end": "1020360"
  },
  {
    "text": "that will run on all the notes but initially nothing uh is started except for the config servers that we specify",
    "start": "1020360",
    "end": "1028918"
  },
  {
    "text": "in the command line arguments like here where I say config server services so with the config servers up",
    "start": "1028919",
    "end": "1036199"
  },
  {
    "text": "we can apply the application package and in the application package we specify",
    "start": "1036199",
    "end": "1041918"
  },
  {
    "text": "which node does what like we can say that these two nodes are stateless these",
    "start": "1041919",
    "end": "1047280"
  },
  {
    "text": "four nodes are stateful right and maybe this is admin node so all that goes into Services XML which has to match",
    "start": "1047280",
    "end": "1054480"
  },
  {
    "text": "obviously what we have in the uh cat definitions right because we can start",
    "start": "1054480",
    "end": "1059840"
  },
  {
    "text": "eight nodes here and expect 16 nodes in on the other end and there's u a service that's",
    "start": "1059840",
    "end": "1069679"
  },
  {
    "text": "called config sent inel which once the config is being replicated it will",
    "start": "1069679",
    "end": "1075559"
  },
  {
    "text": "figure out oh I'm a stateless node or I'm I'm a stateful node and so starts",
    "start": "1075559",
    "end": "1080840"
  },
  {
    "text": "the uh appropriate services on that node and then you have the cluster that",
    "start": "1080840",
    "end": "1087280"
  },
  {
    "text": "you wanted and this can change this can simplify in the future because for",
    "start": "1087280",
    "end": "1094919"
  },
  {
    "text": "example if we had specialized images like one for each service then we can create the cluster as we wanted from the",
    "start": "1094919",
    "end": "1101640"
  },
  {
    "text": "kubernetes definition we wouldn't need the services XML to specify which node does what because we have that in the",
    "start": "1101640",
    "end": "1109400"
  },
  {
    "text": "stateful set for example and this will also remove the need for a config Sentinel to start the right Services",
    "start": "1109400",
    "end": "1116120"
  },
  {
    "text": "because again we can we can do that from the definition in kubernetes all the",
    "start": "1116120",
    "end": "1121480"
  },
  {
    "text": "monitoring and logging thing can be simplified you know like the loging could be just log to standard output and",
    "start": "1121480",
    "end": "1128400"
  },
  {
    "text": "we'll use external tools to deal with that same with metrics we don't have to aggregate because something like",
    "start": "1128400",
    "end": "1134520"
  },
  {
    "text": "Prometheus or other monitoring tools out there can deal with with the aggregation just query every node in the",
    "start": "1134520",
    "end": "1141480"
  },
  {
    "text": "cluster and for completeness there's another service that I did not mention which is called the service location",
    "start": "1141480",
    "end": "1147120"
  },
  {
    "text": "broker this one is used on the right path by the stateless",
    "start": "1147120",
    "end": "1153440"
  },
  {
    "text": "nodes to locate the uh the stateful content nodes uh but this is not",
    "start": "1153440",
    "end": "1160039"
  },
  {
    "text": "necessar like in kubernetes environment where we have services and we can do load balancing outside of the search engine itself",
    "start": "1160039",
    "end": "1169600"
  },
  {
    "text": "and that's all I had to share um the slides are up um on SC you know um and",
    "start": "1169600",
    "end": "1177320"
  },
  {
    "text": "you have a lot of resources there with regards to those processes that I just mentioned the services and also how you",
    "start": "1177320",
    "end": "1183640"
  },
  {
    "text": "can run vestan kubernetes and I'm pretty sure we have some time for questions if you have",
    "start": "1183640",
    "end": "1190640"
  },
  {
    "text": "any does these config nodes talk to each other at all which is the",
    "start": "1192080",
    "end": "1197200"
  },
  {
    "text": "Dy Okay so I'll Echo the questions just so everyone is in sync so the question is how do uh config nodes like these",
    "start": "1197200",
    "end": "1205600"
  },
  {
    "text": "talk to each other and how do they know which is Zookeeper config nodes by default will",
    "start": "1205600",
    "end": "1212159"
  },
  {
    "text": "embed zookeeper and they will all make part of the same Ensemble so like",
    "start": "1212159",
    "end": "1217600"
  },
  {
    "text": "there's a zookeeper Quorum that deals with all this um you can also use an external zookeeper but again it will the",
    "start": "1217600",
    "end": "1224200"
  },
  {
    "text": "same thing all config servers will point to the same zookeeper cluster and zookeeper will have Quorum and leader",
    "start": "1224200",
    "end": "1230880"
  },
  {
    "text": "election and all that stuff for consistency that becomes a bottleneck as compared you compared it with other",
    "start": "1230880",
    "end": "1237000"
  },
  {
    "text": "things so would that becomes a problem like Jer is not that stable as we want",
    "start": "1237000",
    "end": "1242760"
  },
  {
    "text": "it to be right so the question is if this becomes a bottleneck because you know as I said earlier with solar",
    "start": "1242760",
    "end": "1249440"
  },
  {
    "text": "zookeeper can become a bottleneck I think it's less likely to become a bottleneck because here in solar's case",
    "start": "1249440",
    "end": "1256799"
  },
  {
    "text": "zookeeper is will hold everything not only the config set but also the state like you know if you if a chart goes",
    "start": "1256799",
    "end": "1263360"
  },
  {
    "text": "down that has to be updated in Zookeeper by the Overseer in the case of vesa we",
    "start": "1263360",
    "end": "1269120"
  },
  {
    "text": "only have the config so only when you change let's say the schema or change the machine learning model that's when you update it to zookeeper so you have",
    "start": "1269120",
    "end": "1275960"
  },
  {
    "text": "much much fewer rights to zookeeper and I don't think that is likely to",
    "start": "1275960",
    "end": "1281000"
  },
  {
    "text": "be I think I I didn't know okay and when you the",
    "start": "1281000",
    "end": "1290120"
  },
  {
    "text": "you compared it with Cassandra some of the V noes actually",
    "start": "1290120",
    "end": "1295279"
  },
  {
    "text": "move from one to other that information also goes through these funs or how does",
    "start": "1295279",
    "end": "1300799"
  },
  {
    "text": "that happens like uh does other notes need to know that information as well",
    "start": "1300799",
    "end": "1307000"
  },
  {
    "text": "Cassandra to happen and all right so the question is if how does this information",
    "start": "1307000",
    "end": "1313840"
  },
  {
    "text": "when we move buckets can how does this get propagated and and this goes back to",
    "start": "1313840",
    "end": "1320240"
  },
  {
    "text": "the cluster controller so the cluster controllers will know that there's a new node in the cluster and will know that",
    "start": "1320240",
    "end": "1327840"
  },
  {
    "text": "some of the buckets are ready or kind of moving around so they will have to be",
    "start": "1327840",
    "end": "1333919"
  },
  {
    "text": "aware of that and then they will sync up with these other process which I did not mention which is called distributor so",
    "start": "1333919",
    "end": "1341240"
  },
  {
    "text": "distributor lives on every content node and they will talk to the cluster controllers and we know they will know",
    "start": "1341240",
    "end": "1347480"
  },
  {
    "text": "the up updated State and they will serve it during queries and such that's how it",
    "start": "1347480",
    "end": "1354640"
  },
  {
    "text": "works and can I add more than one node at a time if you can add more than one",
    "start": "1354640",
    "end": "1361159"
  },
  {
    "text": "node at a time yeah I'm pretty sure yes this is little off but what is",
    "start": "1361159",
    "end": "1368640"
  },
  {
    "text": "the best embeding and splitting method for most",
    "start": "1368640",
    "end": "1373880"
  },
  {
    "text": "accurate I'm sorry I did not get the question can you rephrase it",
    "start": "1373880",
    "end": "1378960"
  },
  {
    "text": "this is like",
    "start": "1378960",
    "end": "1381600"
  },
  {
    "text": "what what's the batch method what's the best embedding and",
    "start": "1385760",
    "end": "1393400"
  },
  {
    "text": "filtering method for oh this is completely up to you like you can choose whatever model you want for creating",
    "start": "1393400",
    "end": "1398640"
  },
  {
    "text": "embeddings and at search time so we don't we don't provide out of the",
    "start": "1398640",
    "end": "1405880"
  },
  {
    "text": "box embedding models there there's like a vesa embedder concept where you define",
    "start": "1405880",
    "end": "1412080"
  },
  {
    "text": "an embedder in in services.xml and you can point to pretty much any hugging face embed model that you",
    "start": "1412080",
    "end": "1419080"
  },
  {
    "text": "want does that answer your question yeah okay cool any other questions yeah you",
    "start": "1419080",
    "end": "1425600"
  },
  {
    "text": "this is like specifically WPA AI so are you like powering AI or you have some a",
    "start": "1425600",
    "end": "1431440"
  },
  {
    "text": "features this is yeah specifically regarding Vespa that's the company name and the search engine is called Vespa so",
    "start": "1431440",
    "end": "1439640"
  },
  {
    "text": "um yeah this can um Power all sorts of applications you know from rag to",
    "start": "1439640",
    "end": "1445159"
  },
  {
    "text": "recommendations to whatever but we don't offer at least at the moment complete solutions for",
    "start": "1445159",
    "end": "1452840"
  },
  {
    "text": "Thats So how the question is how is the isolation done because with the elastic search and Sol have different indices or",
    "start": "1462919",
    "end": "1469679"
  },
  {
    "text": "collections to have different completely independent sets of data in the same cluster and the question is how is the isolation done in vesa it's very similar",
    "start": "1469679",
    "end": "1477960"
  },
  {
    "text": "in vesa there's this concept of document types and each document type has an attached schema and these would be",
    "start": "1477960",
    "end": "1483480"
  },
  {
    "text": "separate files on dis so when I say there there's an index data structure per node I was kind of lying in the",
    "start": "1483480",
    "end": "1490720"
  },
  {
    "text": "sense that it's one index data structure per node per document type per field cuz",
    "start": "1490720",
    "end": "1497200"
  },
  {
    "text": "you're searching one field at a time this applies to",
    "start": "1497200",
    "end": "1501880"
  },
  {
    "text": "everything any other questions I think I saw more hands coming up can you explain",
    "start": "1503200",
    "end": "1508679"
  },
  {
    "text": "the of the buckets when new is brought do you create buckets there or",
    "start": "1508679",
    "end": "1517679"
  },
  {
    "text": "you yeah so the question is when you we when we move the buckets around like do",
    "start": "1517679",
    "end": "1523080"
  },
  {
    "text": "we create empty buckets or is the data being copied we create the empty buckets",
    "start": "1523080",
    "end": "1528440"
  },
  {
    "text": "I mean we don't create the buckets we move the buckets but initially they're empty and data has to be reindexed",
    "start": "1528440",
    "end": "1536000"
  },
  {
    "text": "effectively yes the the the whole data has I don't know what's the number of buckets by",
    "start": "1537480",
    "end": "1543440"
  },
  {
    "text": "default 2000 what",
    "start": "1543440",
    "end": "1551120"
  },
  {
    "text": "you're how do you update that to account for this so the question is how do you",
    "start": "1551120",
    "end": "1557080"
  },
  {
    "text": "update the the what to to a conf",
    "start": "1557080",
    "end": "1564399"
  },
  {
    "text": "yeah yes new rights will go to the to the same bucket because it's a fixed",
    "start": "1565120",
    "end": "1570360"
  },
  {
    "text": "bucket space but the bucket will live on the new node so the new right goes to the new node and the old one is and the",
    "start": "1570360",
    "end": "1577760"
  },
  {
    "text": "old one as they moved to the new uh node they are discarded and I think one",
    "start": "1577760",
    "end": "1584120"
  },
  {
    "text": "important thing to mention here is that all this indexing and reindexing whether it comes for the client or from data",
    "start": "1584120",
    "end": "1589799"
  },
  {
    "text": "redistribution is in real time so if you add a new document it's instantly",
    "start": "1589799",
    "end": "1595399"
  },
  {
    "text": "visible to search when you get the acknowledgement it's visible for search this is different than you know all the",
    "start": "1595399",
    "end": "1601440"
  },
  {
    "text": "Lucine search engines where you have to wait for a commit so I think that also facilitates",
    "start": "1601440",
    "end": "1607960"
  },
  {
    "text": "this thing if we are phasically sting on a",
    "start": "1607960",
    "end": "1613279"
  },
  {
    "text": "specific note and is there a way to redistribute these shs manually or like",
    "start": "1613279",
    "end": "1620600"
  },
  {
    "text": "by decide like which note what okay so the question is if we do",
    "start": "1620600",
    "end": "1626399"
  },
  {
    "text": "end up having hotspots if we can redistribute buckets manually or things like that frankly the answer is I don't",
    "start": "1626399",
    "end": "1631960"
  },
  {
    "text": "know but I can take this question offline and answer it I don't know if I can put it in the comments or",
    "start": "1631960",
    "end": "1638120"
  },
  {
    "text": "something yes",
    "start": "1640720",
    "end": "1644720"
  },
  {
    "text": "get the result for this you said state so that act as a",
    "start": "1648520",
    "end": "1653919"
  },
  {
    "text": "coordinator yes so the the question is if we go over the flow of what happens",
    "start": "1653919",
    "end": "1659200"
  },
  {
    "text": "when you run a query is that like if when you run the query into onto",
    "start": "1659200",
    "end": "1664480"
  },
  {
    "text": "distribute distributed vesa cluster right so that query will go to the uh",
    "start": "1664480",
    "end": "1670360"
  },
  {
    "text": "stateless container node first and then the stateless container node will know all of the uh uh content no will",
    "start": "1670360",
    "end": "1678679"
  },
  {
    "text": "distribute the request to all the content nodes and the content nodes will each reply with one part of the response",
    "start": "1678679",
    "end": "1686200"
  },
  {
    "text": "so in this case we have four each one will reply with you know you ask for top 10 each will give a top 10 and uh the",
    "start": "1686200",
    "end": "1694799"
  },
  {
    "text": "stateless node yeah acts like a coordinating node so it will yeah do any",
    "start": "1694799",
    "end": "1700760"
  },
  {
    "text": "aggregation so the the only difference I can think of in the context of your question is that the response is per",
    "start": "1700760",
    "end": "1707640"
  },
  {
    "text": "node not per Shard right with elastics which can have multiple shards per node then you kind of need to do that in",
    "start": "1707640",
    "end": "1713640"
  },
  {
    "text": "order to be dynamic with with",
    "start": "1713640",
    "end": "1717559"
  },
  {
    "text": "scaning yes no because of the is if there's a",
    "start": "1722880",
    "end": "1729760"
  },
  {
    "text": "practical limitation of of shards of like how much data can you put on a note",
    "start": "1729760",
    "end": "1734919"
  },
  {
    "text": "um no it's yeah you can have pretty huge",
    "start": "1734919",
    "end": "1741320"
  },
  {
    "text": "nodes because of the works with buckets and",
    "start": "1741320",
    "end": "1746399"
  },
  {
    "text": "alled u",
    "start": "1763240",
    "end": "1767240"
  },
  {
    "text": "so if I get it right the question is how how well does Vespa support",
    "start": "1772440",
    "end": "1777799"
  },
  {
    "text": "different plugins to do things like ingesting data or visualizing or maybe other changes um Vespa can be very",
    "start": "1777799",
    "end": "1786799"
  },
  {
    "text": "easily changed like you can easily Implement logic at the stateless container level so it's very easy to do",
    "start": "1786799",
    "end": "1794640"
  },
  {
    "text": "things like I don't know query parsing or ranking and things like that you use using all sorts of models it is not that",
    "start": "1794640",
    "end": "1800679"
  },
  {
    "text": "rich as elastic search currently is when it comes to the ecosystem of external",
    "start": "1800679",
    "end": "1806240"
  },
  {
    "text": "tools that can be used like log stash I'm actually writing and it's already there uh log stash plugin for vesa so",
    "start": "1806240",
    "end": "1812799"
  },
  {
    "text": "you can write from log stash to vpa you can um use it to reindex you can read from vesa and things like that but I",
    "start": "1812799",
    "end": "1819720"
  },
  {
    "text": "know with with elastic s there's like a ton of tools we don't have that rich of an ecosystem and when it comes to",
    "start": "1819720",
    "end": "1825919"
  },
  {
    "text": "visualizations again not much you can use you probably want to implement something yourself on top of the API at",
    "start": "1825919",
    "end": "1831640"
  },
  {
    "text": "the moment but of course this is work in",
    "start": "1831640",
    "end": "1837399"
  },
  {
    "text": "progress any other questions is there any concept of",
    "start": "1838320",
    "end": "1844039"
  },
  {
    "text": "Master if there's a concept of a master there is only at the level of the uh",
    "start": "1844039",
    "end": "1850919"
  },
  {
    "text": "what is it called cluster controller right so the the cluster controllers that handle the cluster State they have",
    "start": "1850919",
    "end": "1858000"
  },
  {
    "text": "to elect themselves as a master uh themselves a master to check out which but that's kind of the only single point",
    "start": "1858000",
    "end": "1864720"
  },
  {
    "text": "of yeah any other",
    "start": "1864720",
    "end": "1869760"
  },
  {
    "text": "questions well if not thank you very much for attending",
    "start": "1869760",
    "end": "1875039"
  },
  {
    "text": "[Applause]",
    "start": "1875980",
    "end": "1880079"
  }
]