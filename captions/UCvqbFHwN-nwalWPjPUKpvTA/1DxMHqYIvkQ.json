[
  {
    "text": "hello everybody my name is carlos cortes uh at work i work at lightstep uh",
    "start": "0",
    "end": "6399"
  },
  {
    "text": "i am part of the core team of open telemetry and this is",
    "start": "6399",
    "end": "13120"
  },
  {
    "text": "hey everybody i'm alex woden i'm also one of the maintainers uh at with open telemetry and i also work",
    "start": "14400",
    "end": "20080"
  },
  {
    "text": "for lightsaber um we're very happy about having the opportunity to",
    "start": "20080",
    "end": "25840"
  },
  {
    "text": "uh keep this presentation even if it's a little bit delayed you know but what",
    "start": "25840",
    "end": "32078"
  },
  {
    "text": "they say it's better later than ever uh so thanks so much for",
    "start": "32079",
    "end": "37120"
  },
  {
    "text": "joining definitely um yeah i think we will be going through the slides so the",
    "start": "37120",
    "end": "43520"
  },
  {
    "text": "first thing is that we were actually not very sure about the public and how many of you",
    "start": "43520",
    "end": "49360"
  },
  {
    "text": "watching this uh presentation are familiar with open telemetry so we are going to give a very",
    "start": "49360",
    "end": "54559"
  },
  {
    "text": "small introduction um so first of all uh open telemetry is a cncf",
    "start": "54559",
    "end": "60160"
  },
  {
    "text": "but baked uh project is an open source project uh um the idea behind this project is to",
    "start": "60160",
    "end": "67600"
  },
  {
    "text": "provide a complete rich environment to provide and capture telemetry data",
    "start": "67600",
    "end": "73200"
  },
  {
    "text": "as part of your services and then of course um provide this information as distributed traces",
    "start": "73200",
    "end": "79040"
  },
  {
    "text": "and metrics and other signals in the future and the data is that once",
    "start": "79040",
    "end": "84159"
  },
  {
    "text": "you have all these telemetry data out of your service this can be sent to the backend of your",
    "start": "84159",
    "end": "90320"
  },
  {
    "text": "choice um and of course to make this actually a reality we the idea is that",
    "start": "90320",
    "end": "98079"
  },
  {
    "text": "we will be providing a complete ecosystem for many languages which includes go java chart python",
    "start": "98079",
    "end": "104240"
  },
  {
    "text": "javascript and so on um so first of all of course there's an api",
    "start": "104240",
    "end": "110960"
  },
  {
    "text": "which will allow people instrumenting their applications or their uh libraries you know just go and say",
    "start": "110960",
    "end": "117600"
  },
  {
    "text": "hey i want to send this and i want to send that at this spot not only that we are also providing an",
    "start": "117600",
    "end": "123759"
  },
  {
    "text": "actual sdk implement implementation that you can think of it as a reference implementation",
    "start": "123759",
    "end": "128879"
  },
  {
    "text": "so you don't have to go and look for one and decide which one you like the most and of course everybody is free to",
    "start": "128879",
    "end": "135920"
  },
  {
    "text": "define their own sdk so that that is going to give us a lot of flexibility um part of this is that we also want to",
    "start": "135920",
    "end": "143040"
  },
  {
    "text": "provide out of the box uh instrumentation for popular frameworks like django for python or spring for",
    "start": "143040",
    "end": "149920"
  },
  {
    "text": "java there's one more component called a collector the collector is a component",
    "start": "149920",
    "end": "155519"
  },
  {
    "text": "that actually we can see it as a sidecar it can receive this telemetry data",
    "start": "155519",
    "end": "160640"
  },
  {
    "text": "massage it process it normalize it and then finally export all these telemetry data to the",
    "start": "160640",
    "end": "165920"
  },
  {
    "text": "backend of your choice and of course instrumentation which is the one that you guys are",
    "start": "165920",
    "end": "171280"
  },
  {
    "text": "uh most interested in otherwise you will be in this talk um and of course the idea of this is",
    "start": "171280",
    "end": "176879"
  },
  {
    "text": "that you can just go and try instrumentation uh for your services without being able to actually",
    "start": "176879",
    "end": "183200"
  },
  {
    "text": "touch your code base um okay so what's that's also that",
    "start": "183200",
    "end": "190159"
  },
  {
    "text": "all sounds so good but what's out instrumentation so essentially output instrumentation is",
    "start": "190159",
    "end": "195840"
  },
  {
    "text": "usually a component which is a grappler or an agent depending on the language that allows you to instrument",
    "start": "195840",
    "end": "202879"
  },
  {
    "text": "your services without touching the code at all instrumentation basically means",
    "start": "202879",
    "end": "208560"
  },
  {
    "text": "instrumenting your application or your service means being able to provide automatic uh",
    "start": "208560",
    "end": "213920"
  },
  {
    "text": "traces or metrics and other stuff out of it um we are taking this part",
    "start": "213920",
    "end": "219280"
  },
  {
    "text": "very seriously as part of the open telemetry project and we are even making it a part of our",
    "start": "219280",
    "end": "225280"
  },
  {
    "text": "of our um is actually specification you know uh we think this is a core",
    "start": "225280",
    "end": "230319"
  },
  {
    "text": "piece that will help uh people use this project all the way",
    "start": "230319",
    "end": "236959"
  },
  {
    "text": "now yeah this is for alex yeah the you know we one of the things",
    "start": "236959",
    "end": "244000"
  },
  {
    "text": "that i always love to drive for is understanding why we're implementing anything and in this case i think one of the important reasons for",
    "start": "244000",
    "end": "250560"
  },
  {
    "text": "auto instrumentation is understanding the why and one of the one of the key benefits",
    "start": "250560",
    "end": "255599"
  },
  {
    "text": "of auto instrumentation is to help folks that are already busy already overworked",
    "start": "255599",
    "end": "260880"
  },
  {
    "text": "um find a way to instrument their applications more easily and if if you're not familiar with distributed tracing or with metrics it",
    "start": "260880",
    "end": "267520"
  },
  {
    "text": "could be a huge barrier to cross and so one of the benefits of auto instrumentation is that you can with with a fairly",
    "start": "267520",
    "end": "275919"
  },
  {
    "text": "simple installation step and a script or a different command to run your application with you can start",
    "start": "275919",
    "end": "282320"
  },
  {
    "text": "collecting telemetry information for your application one of the other benefits with auto instrumentation is that with",
    "start": "282320",
    "end": "288560"
  },
  {
    "text": "zero or very little code you can provide insights to users of particular libraries",
    "start": "288560",
    "end": "295600"
  },
  {
    "text": "as to how those applications how their applications are leveraging those libraries",
    "start": "295600",
    "end": "300960"
  },
  {
    "text": "and they the libraries will provide rich metadata that is important to the users of those libraries",
    "start": "300960",
    "end": "307759"
  },
  {
    "text": "and so as you'll see we'll be diving into the demo today we're going to show you a compo a system",
    "start": "307759",
    "end": "313360"
  },
  {
    "text": "composed of multiple applications some in java some in python that can be",
    "start": "313360",
    "end": "318960"
  },
  {
    "text": "instrumented with little or no code and then we'll dive a little deeper to talk about how the implementation is",
    "start": "318960",
    "end": "325280"
  },
  {
    "text": "actually done in python and in java i i love having a good picture so here's",
    "start": "325280",
    "end": "331199"
  },
  {
    "text": "a little bit of what the application looks like so there is a client here that will make",
    "start": "331199",
    "end": "338880"
  },
  {
    "text": "a request the client is written in python it will make a request to a server written in python as well",
    "start": "338880",
    "end": "345840"
  },
  {
    "text": "the client is instrumented will be auto intermittent via the request library the server is using flask",
    "start": "345840",
    "end": "353680"
  },
  {
    "text": "that server makes a request to a sql server that just has a list of work from home tips for",
    "start": "353680",
    "end": "359759"
  },
  {
    "text": "anybody who's looking for more tips that flash server will then make a request upstream to a so",
    "start": "359759",
    "end": "366160"
  },
  {
    "text": "another server written in java using spring and that server will return a count of",
    "start": "366160",
    "end": "372560"
  },
  {
    "text": "how often a particular tip has been blogged about in the past five months uh important note here all of the data",
    "start": "372560",
    "end": "379199"
  },
  {
    "text": "is static and has absolutely zero scientific value and each one of these services is",
    "start": "379199",
    "end": "386000"
  },
  {
    "text": "actually going to be using a jaeger backend for collecting inflammatory information",
    "start": "386000",
    "end": "392560"
  },
  {
    "text": "and uh now on the carlos for the demo yeah fantastic now is the time for for you uh guys to",
    "start": "393120",
    "end": "399919"
  },
  {
    "text": "check out what this looks like in real life um so i will go through",
    "start": "399919",
    "end": "407360"
  },
  {
    "text": "so essentially you know these components that uh our services that alex mentioned i will go through the code quickly so we",
    "start": "407360",
    "end": "413919"
  },
  {
    "text": "have first the the flash server which is just as you can see this is super something very simple you just make a",
    "start": "413919",
    "end": "420880"
  },
  {
    "text": "call somewhere else in this case um the actual um java code uh then we have the request",
    "start": "420880",
    "end": "428319"
  },
  {
    "text": "client which is something oh this is actually what i was showing so the flask server",
    "start": "428319",
    "end": "434000"
  },
  {
    "text": "is the code you can see that this uses split out from me inside you know um as part of the code base and",
    "start": "434000",
    "end": "440800"
  },
  {
    "text": "everything and nothing fancy we are not sending any traces of part of these",
    "start": "440800",
    "end": "446720"
  },
  {
    "text": "we're just doing our thing and finally i will show also uh the spring service springs",
    "start": "446720",
    "end": "454000"
  },
  {
    "text": "um second and then we are just starting the",
    "start": "454000",
    "end": "459440"
  },
  {
    "text": "application [Music] and doing the usual you know just uh",
    "start": "459440",
    "end": "465360"
  },
  {
    "text": "making a call a pair of clothes to raise there's nothing related or specific to tracing or to open to",
    "start": "465360",
    "end": "470800"
  },
  {
    "text": "elementary now uh for the first run what they will be doing is that i'm going to start i'm gonna run",
    "start": "470800",
    "end": "479199"
  },
  {
    "text": "these three services but only one of them is gonna be automatically instrumented so you can",
    "start": "479199",
    "end": "485759"
  },
  {
    "text": "feel the actual difference so this is java this is a flag service",
    "start": "485759",
    "end": "491280"
  },
  {
    "text": "and this is going to be the client request",
    "start": "491280",
    "end": "495280"
  },
  {
    "text": "you know that's um let's wait a little bit there we are fantastic",
    "start": "501840",
    "end": "508639"
  },
  {
    "text": "and then we are going to start our simple application and there we are",
    "start": "512159",
    "end": "521440"
  },
  {
    "text": "and you can see here the tips coming in which is pretty nice",
    "start": "521440",
    "end": "527920"
  },
  {
    "text": "and of course now we are going to switch to the jager you know which we have here um",
    "start": "528480",
    "end": "535200"
  },
  {
    "text": "and now let's check out for the latest traces you know so in this case as you can see here um",
    "start": "535200",
    "end": "543120"
  },
  {
    "text": "we can see part of this part of the trays you know it's not complete but you can see that",
    "start": "544080",
    "end": "550160"
  },
  {
    "text": "because we're still missing uh one of the components but you can see that this is how it looks this is what we have the con",
    "start": "550160",
    "end": "556000"
  },
  {
    "text": "without the coding touch so first we have the flag server um which had as i said nothing uh",
    "start": "556000",
    "end": "562880"
  },
  {
    "text": "related to tracers or to open celebrities with the code base and it's already you know creating this trace where you can see",
    "start": "562880",
    "end": "568720"
  },
  {
    "text": "how much time was spent on on the sql query and you can see also",
    "start": "568720",
    "end": "574160"
  },
  {
    "text": "extra information like what's the command and other stuff for the flash server itself",
    "start": "574160",
    "end": "579839"
  },
  {
    "text": "you can see what's uh what was the method what was the actual status code uh and similarly for for java we can",
    "start": "579839",
    "end": "587600"
  },
  {
    "text": "also see here the actual request and because of the fact that radice is so instrumented",
    "start": "587600",
    "end": "593200"
  },
  {
    "text": "you can see the actual commands you can see the process the url and so on so",
    "start": "593200",
    "end": "599440"
  },
  {
    "text": "that's pretty sweet but of course we have to also go and now i'm going to",
    "start": "599440",
    "end": "605360"
  },
  {
    "text": "change things so we are going to run uh the client without instrumentation",
    "start": "605360",
    "end": "611120"
  },
  {
    "text": "now i'm going to use a very small script sorry um so as you can see this script the",
    "start": "611120",
    "end": "617839"
  },
  {
    "text": "only thing that does is that it just configures what's the end point for jager which is the",
    "start": "617839",
    "end": "623040"
  },
  {
    "text": "back end of your choice and also configuring the sdk as i said",
    "start": "623040",
    "end": "628079"
  },
  {
    "text": "uh we are using this uh preference sdk",
    "start": "628079",
    "end": "633839"
  },
  {
    "text": "now so now it's gonna be almost the same but the difference is that now we will be getting part of the uh",
    "start": "634160",
    "end": "640720"
  },
  {
    "text": "part of the uh sorry we are gonna get the entire",
    "start": "640720",
    "end": "647600"
  },
  {
    "text": "traces so now you see that we can actually see it entirely because now this time i am also instrumenting uh the request",
    "start": "647600",
    "end": "656079"
  },
  {
    "text": "parts you can also see this is the entire thing and of course it also has additional information like",
    "start": "656079",
    "end": "661440"
  },
  {
    "text": "components uh the method status code and so on and and all of this was done without",
    "start": "661440",
    "end": "667200"
  },
  {
    "text": "touching your actual code which can be pretty useful you know like just imagine that you want to try out",
    "start": "667200",
    "end": "672880"
  },
  {
    "text": "what's all open telemetry uh phone is about and say let's give me you know let's",
    "start": "672880",
    "end": "679760"
  },
  {
    "text": "give it a run you just need to configure um your back end and a pair of things and",
    "start": "679760",
    "end": "685920"
  },
  {
    "text": "that's about it thank you and now going forward",
    "start": "685920",
    "end": "692800"
  },
  {
    "text": "now how does it work i guess that this is uh the obvious question right this is part of an actual deep value",
    "start": "692800",
    "end": "700000"
  },
  {
    "text": "so let's go through the actual phone so first of all uh usually the way you",
    "start": "700000",
    "end": "706320"
  },
  {
    "text": "actually instrument your job application uh is that we use the java agent",
    "start": "706320",
    "end": "712399"
  },
  {
    "text": "facilities um this is a very common thing in the java ecosystem and usually use go and fetch a jar",
    "start": "712399",
    "end": "720480"
  },
  {
    "text": "there's a project part of open telemetry called open telemetry java experimentation that provides these agents in turn",
    "start": "720480",
    "end": "728160"
  },
  {
    "text": "this agent uh contains a few components the first of all uh the first one is uh the auto",
    "start": "728160",
    "end": "734240"
  },
  {
    "text": "instrumentation engine which is the one that will launch your application and will eject code to make this",
    "start": "734240",
    "end": "741120"
  },
  {
    "text": "instrumentation possible but we also need actual instrumentation for popular libraries like spring your",
    "start": "741120",
    "end": "747920"
  },
  {
    "text": "pc ok http and so on we have a lot of instrumented libraries these days",
    "start": "747920",
    "end": "753279"
  },
  {
    "text": "which is going to help users you know they can forget about trying to actually instrument those um",
    "start": "753279",
    "end": "760160"
  },
  {
    "text": "super popular libraries and then by default this jar also includes",
    "start": "760160",
    "end": "765200"
  },
  {
    "text": "a few standard exporters that are part of the specification which is jagger shipking",
    "start": "765200",
    "end": "771680"
  },
  {
    "text": "and otlb otlps um it's a very interesting project because",
    "start": "771680",
    "end": "776720"
  },
  {
    "text": "idea is to uh to find a open telemetry native protocol that can be used",
    "start": "776720",
    "end": "782079"
  },
  {
    "text": "among the different components it's used by the collector which as i mentioned before it's a it's a",
    "start": "782079",
    "end": "788000"
  },
  {
    "text": "component that can work as a sidecar where",
    "start": "788000",
    "end": "793200"
  },
  {
    "text": "you can receive data process it and then send it back to the actual login",
    "start": "793200",
    "end": "801839"
  },
  {
    "text": "and uh when you actually want to instrument your application um let's",
    "start": "801839",
    "end": "809279"
  },
  {
    "text": "say for example for as example shows ok http or grpc we usually try to use",
    "start": "809279",
    "end": "816959"
  },
  {
    "text": "we try to avoid going uh the bytecode manipulation way we are trying to use available hooks",
    "start": "816959",
    "end": "823120"
  },
  {
    "text": "events or interceptors these two small screenshots show how it's done there for both uh",
    "start": "823120",
    "end": "830560"
  },
  {
    "text": "in those cases for all http and jrpc we're using simply interceptors which is very simple you know and it's",
    "start": "830560",
    "end": "836800"
  },
  {
    "text": "very nice you don't have to actually manipulate anything and by body which is",
    "start": "836800",
    "end": "842480"
  },
  {
    "text": "one that we use we need to use hopefully um not so much to actually inject these instrumentation",
    "start": "842480",
    "end": "849120"
  },
  {
    "text": "libraries at runtime when your application is starting",
    "start": "849120",
    "end": "854399"
  },
  {
    "text": "um when it comes to the actual how it looks instrumenting a library uh there is an instrumental interface",
    "start": "854560",
    "end": "861680"
  },
  {
    "text": "that everybody who wants to instrument their application need uh to extend the good thing is that there is a default implementation that",
    "start": "861680",
    "end": "868800"
  },
  {
    "text": "goes for the most common cases um and then of course in this example you",
    "start": "868800",
    "end": "873839"
  },
  {
    "text": "can see here you can see yeah in the in the corner in this part that um you are telling at the engine",
    "start": "873839",
    "end": "882480"
  },
  {
    "text": "hey look for all the clusters that have this name which is java util concurrent thread will executor",
    "start": "882480",
    "end": "887920"
  },
  {
    "text": "and then of course you provide also code you know to replace to grab or to transform your code",
    "start": "887920",
    "end": "895040"
  },
  {
    "text": "and then running the application for java uh it's on you know as i said the engine itself is",
    "start": "896320",
    "end": "901839"
  },
  {
    "text": "simply a jar um it's a single file and then you have to provide the configuration yourself",
    "start": "901839",
    "end": "907440"
  },
  {
    "text": "usually that's done through environment variables which is a very common practice but you can also specify them",
    "start": "907440",
    "end": "913120"
  },
  {
    "text": "as something which is specific to java called uh system properties which is",
    "start": "913120",
    "end": "918639"
  },
  {
    "text": "basically um parameters that can be passed directly to the to the java runtime",
    "start": "918639",
    "end": "923760"
  },
  {
    "text": "so either of them your choice um and then of course in this example you can see that we are",
    "start": "923760",
    "end": "929120"
  },
  {
    "text": "configuring what exporter we want to use uh tm point span timeout and other things",
    "start": "929120",
    "end": "936480"
  },
  {
    "text": "now how does it work for python yeah so in on the python side if you",
    "start": "936880",
    "end": "943279"
  },
  {
    "text": "want to get started with auto instrumentation the first thing the first thing we want to do is go and install the open telemetry instrument",
    "start": "943279",
    "end": "949680"
  },
  {
    "text": "instrumentation package which you can do through pip this package contains a few different components it has the open telemetry",
    "start": "949680",
    "end": "956800"
  },
  {
    "text": "bootstrap and the open telemetry instrument script the instrument interface that will",
    "start": "956800",
    "end": "962240"
  },
  {
    "text": "describe a little bit further shortly and then the sitecustomize.pi file for open telemetry instrumentation",
    "start": "962240",
    "end": "969040"
  },
  {
    "text": "so first things first the open telemetry bootstrap script is a nice convenience script that",
    "start": "969040",
    "end": "976000"
  },
  {
    "text": "allows users to uh to discover what auto instrumentation or instrumentation libraries exist for",
    "start": "976000",
    "end": "981920"
  },
  {
    "text": "their environments and it does this by doing a lookup with pip of all the installed libraries in an",
    "start": "981920",
    "end": "987440"
  },
  {
    "text": "environment and then it compares that list against a list of known instrumentation libraries and it prints",
    "start": "987440",
    "end": "994560"
  },
  {
    "text": "out the recommendations so for example in this case here it recommended installing flask jinja 2 and sql alchemy",
    "start": "994560",
    "end": "1000959"
  },
  {
    "text": "so this is after running it for the in the server environment",
    "start": "1000959",
    "end": "1006079"
  },
  {
    "text": "there's also a install flag for open telemetry bootstrap which allows the user to just let um the open",
    "start": "1006079",
    "end": "1013600"
  },
  {
    "text": "telemetry boost apps script does the installation for them and it does so via pip",
    "start": "1013600",
    "end": "1020880"
  },
  {
    "text": "so what is an instrumentation library in python it really has to do two things one of",
    "start": "1021120",
    "end": "1027918"
  },
  {
    "text": "the responsibilities of the instrumentation library is to implement an instrumental interface much like in",
    "start": "1027919",
    "end": "1033120"
  },
  {
    "text": "in java this interface as you can see here on the right hand side is",
    "start": "1033120",
    "end": "1038160"
  },
  {
    "text": "fairly minimal it has an instrument and an instrument method i'll touch base a little bit further on",
    "start": "1038160",
    "end": "1044480"
  },
  {
    "text": "the instrument method shortly but it's important to note that the instrument and instrument methods",
    "start": "1044480",
    "end": "1050000"
  },
  {
    "text": "are implemented is library specific as far as their implementation goes",
    "start": "1050000",
    "end": "1055520"
  },
  {
    "text": "some libraries provide hooks that can be configured while others don't have that nice",
    "start": "1055520",
    "end": "1061120"
  },
  {
    "text": "facility so we end up using monkey patching for a lot of those",
    "start": "1061120",
    "end": "1066400"
  },
  {
    "text": "and for those who aren't familiar with monkey patching it it just means that we're overriding the call to a specific library",
    "start": "1066400",
    "end": "1072640"
  },
  {
    "text": "uh library method call for example the other thing that the instrumentation",
    "start": "1072640",
    "end": "1077919"
  },
  {
    "text": "library has to do is to register an entry point so in python entry points is a mechanism",
    "start": "1077919",
    "end": "1083679"
  },
  {
    "text": "that a package can use to advertise a method or or a component to other",
    "start": "1083679",
    "end": "1088720"
  },
  {
    "text": "packages other python applications within a system and so um the instrumentation library must",
    "start": "1088720",
    "end": "1094880"
  },
  {
    "text": "register uh its entry point under the open telemetry instrumenter uh entry point and so here you can see",
    "start": "1094880",
    "end": "1101520"
  },
  {
    "text": "the the flask entry point is just the flask instrumenter and it's defined inside the",
    "start": "1101520",
    "end": "1107840"
  },
  {
    "text": "setup.pi file whereas the request instrumenter is defined within a setup.cfg file",
    "start": "1107840",
    "end": "1115520"
  },
  {
    "text": "and um we'll go further so why we need these entry points shortly but the next component that's installed is",
    "start": "1115520",
    "end": "1121919"
  },
  {
    "text": "the open telemetry instrument which is used to run the the application itself and the",
    "start": "1121919",
    "end": "1127039"
  },
  {
    "text": "reason why we need to to use the open telemetry instrument script to run the application is because we want to ensure that the",
    "start": "1127039",
    "end": "1133440"
  },
  {
    "text": "instrumentation has a chance to be applied before anything in the application is done so",
    "start": "1133440",
    "end": "1139039"
  },
  {
    "text": "that we don't miss any any call from the application itself and it does so by using the site",
    "start": "1139039",
    "end": "1145120"
  },
  {
    "text": "customize file which looks a little bit like this the site customize file",
    "start": "1145120",
    "end": "1151120"
  },
  {
    "text": "looks at the registered entry points it iterates to all of all of them and",
    "start": "1151120",
    "end": "1156960"
  },
  {
    "text": "tries to load them via the instrument method that i mentioned earlier",
    "start": "1156960",
    "end": "1165039"
  },
  {
    "text": "there is a couple of gotchas that i'd like to uh bring up to everybody's attention because they're not super obvious when",
    "start": "1165039",
    "end": "1171600"
  },
  {
    "text": "you get started with open telemetry auto instrumentation for python um and i think carlos touched on this in",
    "start": "1171600",
    "end": "1177440"
  },
  {
    "text": "the demo but there are a couple of things that you want to configure ahead of time and these are things like the meter",
    "start": "1177440",
    "end": "1185120"
  },
  {
    "text": "provider and the tracer provider by default the open telemetry api by design implements a no op tracer provider and a",
    "start": "1185120",
    "end": "1192640"
  },
  {
    "text": "no-op meter provider but more often than not you'll want to configure this to use the",
    "start": "1192640",
    "end": "1198160"
  },
  {
    "text": "sdk provider unless you're implementing your own sdk for example but um the other thing",
    "start": "1198160",
    "end": "1205120"
  },
  {
    "text": "that's uh a bit of a gotcha here is that not everything that you would like to have",
    "start": "1205120",
    "end": "1210159"
  },
  {
    "text": "configured is available for enviro via environments variables yet in python there is active work happening",
    "start": "1210159",
    "end": "1216559"
  },
  {
    "text": "uh even today on this to make it better but currently um things like the span exporter and",
    "start": "1216559",
    "end": "1224480"
  },
  {
    "text": "spam processor are things that need to be configured and that's why if you look at the um the demo code you'll see this little",
    "start": "1224480",
    "end": "1230559"
  },
  {
    "text": "snip of of code that configures the jagerspan exporter and the battery export spawn processor",
    "start": "1230559",
    "end": "1237760"
  },
  {
    "text": "so a little bit about where we are today with uh with instrumentation and auto instrumentation so there's a list here",
    "start": "1238880",
    "end": "1245280"
  },
  {
    "text": "of some of the languages that are currently working on auto instrumentation and instrumentation",
    "start": "1245280",
    "end": "1251120"
  },
  {
    "text": "libraries as you can see there's a lot of progress across many sigs already this is not a",
    "start": "1251120",
    "end": "1259280"
  },
  {
    "text": "full list of all the languages that are available with open telemetry is just a sample set there's also like a",
    "start": "1259280",
    "end": "1265200"
  },
  {
    "text": "php sig and an erlang sig and rust and others but today java javascript",
    "start": "1265200",
    "end": "1271440"
  },
  {
    "text": "python and ruby all have mechanisms for auto instrumentation and go already has some instrumented",
    "start": "1271440",
    "end": "1279679"
  },
  {
    "text": "libraries and there's a big effort underway for topnet",
    "start": "1279679",
    "end": "1285919"
  },
  {
    "text": "and you know as as you can imagine there's uh gazillion libraries out there for all",
    "start": "1287200",
    "end": "1293120"
  },
  {
    "text": "of the different languages and so it it's going to take a lot more work to ensure that we have coverage for all of the libraries that",
    "start": "1293120",
    "end": "1299919"
  },
  {
    "text": "are important to people and um if you're looking for a way waiting involved this is actually a really good way to to get involved",
    "start": "1299919",
    "end": "1306400"
  },
  {
    "text": "if you have a favorite library that isn't currently supported feel free to open an issue to this uh",
    "start": "1306400",
    "end": "1312080"
  },
  {
    "text": "sig of the language of your choice if you'd like to give a try to the existing libraries and",
    "start": "1312080",
    "end": "1318240"
  },
  {
    "text": "you know report any issues or any missing documentation that would be another good way to get involved",
    "start": "1318240",
    "end": "1323360"
  },
  {
    "text": "and of course if you have time to write some comfort for us that would be great we were",
    "start": "1323360",
    "end": "1328559"
  },
  {
    "text": "always excited to cprs from from our users so",
    "start": "1328559",
    "end": "1334960"
  },
  {
    "text": "okay um yeah so if you're if you're looking for more information about open telemetry uh i highly recommend checking out the",
    "start": "1335120",
    "end": "1340720"
  },
  {
    "text": "website uh it has all of the links and info about the different sigs different languages",
    "start": "1340720",
    "end": "1347200"
  },
  {
    "text": "links to notes of the of the cigs and it also has a super useful registry",
    "start": "1347200",
    "end": "1352880"
  },
  {
    "text": "so if you're looking for any uh instrumentation or any languages that you're interested in you can check",
    "start": "1352880",
    "end": "1358880"
  },
  {
    "text": "out the registry and just search search it to see if your library is already supported",
    "start": "1358880",
    "end": "1365039"
  },
  {
    "text": "and of course if you're interested in the demo that carlos showed earlier here is the link to where you can find",
    "start": "1365039",
    "end": "1371520"
  },
  {
    "text": "the code and yeah so that's that's about it if",
    "start": "1371520",
    "end": "1378240"
  },
  {
    "text": "you're if you're looking for more information about open telemetry or if you have any questions you can feel free to reach out",
    "start": "1378240",
    "end": "1384000"
  },
  {
    "text": "to carlos and i we're always always available you can jump into getter as well if you're if you're",
    "start": "1384000",
    "end": "1389280"
  },
  {
    "text": "looking for more information there uh we're always happy to talk to the folks about instrumentation about",
    "start": "1389280",
    "end": "1394720"
  },
  {
    "text": "open telemetry or or anything really and uh yeah come and come and talk to us",
    "start": "1394720",
    "end": "1400720"
  },
  {
    "text": "join the project we're we're currently in uh almost j phase so it's pretty it's pretty exciting time to get to get",
    "start": "1400720",
    "end": "1406960"
  },
  {
    "text": "involved um carlos any parting thoughts uh yes please provide us with as much",
    "start": "1406960",
    "end": "1413200"
  },
  {
    "text": "feedback as you can we are super interested in that um now it's a perfect time and thank you for watching yeah thanks",
    "start": "1413200",
    "end": "1420960"
  },
  {
    "text": "everybody",
    "start": "1420960",
    "end": "1423360"
  },
  {
    "text": "all right carlos can you uh can you hear me yes i can perfect all right so i'm just",
    "start": "1429360",
    "end": "1436159"
  },
  {
    "text": "gonna start asking the questions that are listed here and we'll start with the first one so lucian",
    "start": "1436159",
    "end": "1442880"
  },
  {
    "text": "asks what is the performance impact of auto instrumentation",
    "start": "1442880",
    "end": "1448400"
  },
  {
    "text": "yeah so basically this answer uh is you know it includes two factors the",
    "start": "1448400",
    "end": "1455520"
  },
  {
    "text": "first one is that any instrumentation that you can set up",
    "start": "1455520",
    "end": "1460720"
  },
  {
    "text": "manually has a cost of course um like even if you do that without the agent uh for those",
    "start": "1460720",
    "end": "1467840"
  },
  {
    "text": "parts we are being very aggressive when it comes to optim optimizations um so",
    "start": "1467840",
    "end": "1474000"
  },
  {
    "text": "in general it's it has like a very decent cost now the usual so the other part is that",
    "start": "1474000",
    "end": "1480000"
  },
  {
    "text": "you're usually using an auto uh auto instrumentation component is a",
    "start": "1480000",
    "end": "1485919"
  },
  {
    "text": "sometimes you get a little bit more of time at startup",
    "start": "1485919",
    "end": "1490960"
  },
  {
    "text": "um so we have been also we first of all uh a lot of these agent",
    "start": "1490960",
    "end": "1497039"
  },
  {
    "text": "code bases have uh originated with uh datadog",
    "start": "1497039",
    "end": "1502880"
  },
  {
    "text": "agents which were you know used in production so at least we know that of course there's a cost but",
    "start": "1502880",
    "end": "1510480"
  },
  {
    "text": "they were you know based on production code which is great and for example",
    "start": "1510480",
    "end": "1517840"
  },
  {
    "text": "when it comes to compare for example i can tell you for the java case specifically um the agent at the open",
    "start": "1517840",
    "end": "1524320"
  },
  {
    "text": "telemetry that i said it's based on the data doc one um uh is it's like two or three times",
    "start": "1524320",
    "end": "1532320"
  },
  {
    "text": "faster at startup than the special agent which is the one that was",
    "start": "1532320",
    "end": "1537440"
  },
  {
    "text": "um uh created as part of open tracing you know open tracing and open sensors",
    "start": "1537440",
    "end": "1543840"
  },
  {
    "text": "you know they ended up becoming the same project up in telemetry so you can see that it's it's a big",
    "start": "1543840",
    "end": "1549200"
  },
  {
    "text": "improvement um also as part of ga of reaching ga for open telemetry that",
    "start": "1549200",
    "end": "1556320"
  },
  {
    "text": "we will have actual um testing which we will be publishing to be able to compare this agent against",
    "start": "1556320",
    "end": "1564320"
  },
  {
    "text": "other code bases um and the final thing is that at least when it comes to the java parts at least",
    "start": "1564320",
    "end": "1571039"
  },
  {
    "text": "is that we have people who have a lot of experience on this site we have people from new relic we have people from",
    "start": "1571039",
    "end": "1576320"
  },
  {
    "text": "datadog we have people from microsoft and uh and you know people who have a lot of experience in",
    "start": "1576320",
    "end": "1581919"
  },
  {
    "text": "the agents who have been working in the asian side for for so many years so there's a cost for sure um but we are",
    "start": "1581919",
    "end": "1588720"
  },
  {
    "text": "working as you know with with great people and we hope that it's not going to be a problem but",
    "start": "1588720",
    "end": "1594080"
  },
  {
    "text": "in any case we will have um actual performance testing to make sure",
    "start": "1594080",
    "end": "1599760"
  },
  {
    "text": "that you know um we are we're in a decent shape i hope that kind of kind of answered",
    "start": "1599760",
    "end": "1606880"
  },
  {
    "text": "your question i don't know alex you want to answer uh something more",
    "start": "1606880",
    "end": "1612400"
  },
  {
    "text": "no i think you i think you covered it um there's a few more questions here so i",
    "start": "1612400",
    "end": "1617520"
  },
  {
    "text": "guess we'll just move on to the next one um are you aware of integration with cnb",
    "start": "1617520",
    "end": "1622799"
  },
  {
    "text": "build packs auto installing the open telemetry agents",
    "start": "1622799",
    "end": "1628320"
  },
  {
    "text": "um i'm not personally not familiar with cnb is",
    "start": "1629200",
    "end": "1636000"
  },
  {
    "text": "yeah sorry about that yeah maybe maybe we can take it to slack and",
    "start": "1636000",
    "end": "1642240"
  },
  {
    "text": "and investigate a little bit more yeah yeah yeah yeah we are always open to adding",
    "start": "1642240",
    "end": "1647279"
  },
  {
    "text": "instrumentation uh additional instrumentation for libraries that we don't cover but also",
    "start": "1647279",
    "end": "1654240"
  },
  {
    "text": "about considering you know including components that may make the instrumentation",
    "start": "1654240",
    "end": "1659279"
  },
  {
    "text": "overall better so yeah we would love to hear the feedback the next one is a question",
    "start": "1659279",
    "end": "1666480"
  },
  {
    "text": "from kevin he asks is there a way to add custom tags for auto instrumented network calls",
    "start": "1666480",
    "end": "1674559"
  },
  {
    "text": "yes you can you can basically add",
    "start": "1674559",
    "end": "1679520"
  },
  {
    "text": "you can add any number of metadata you want to any calls that are happening because",
    "start": "1680000",
    "end": "1686720"
  },
  {
    "text": "you can you can basically add traces to auto instrumented applications um we didn't we didn't show",
    "start": "1686720",
    "end": "1693120"
  },
  {
    "text": "it here because we wanted to just show that with very little or no tracing uh",
    "start": "1693120",
    "end": "1698480"
  },
  {
    "text": "code you can get tracing information about your applications using auto instrumentation but you can definitely",
    "start": "1698480",
    "end": "1703600"
  },
  {
    "text": "you can instrument you can combine manual and auto instrumentation um as as you wish it's probably good to",
    "start": "1703600",
    "end": "1710720"
  },
  {
    "text": "know that uh open telemetry calls tags attributes",
    "start": "1710720",
    "end": "1715520"
  },
  {
    "text": "all right uh next question is from david and the question",
    "start": "1716559",
    "end": "1723279"
  },
  {
    "text": "is i thought open telemetry was about correlation between metrics traces and logs via labels i don't understand how this works with",
    "start": "1723279",
    "end": "1730240"
  },
  {
    "text": "auto instrumentation yeah i think that so i don't know if",
    "start": "1730240",
    "end": "1736399"
  },
  {
    "text": "this is what you are asking david the davide but um at this moment we only you know the agents only",
    "start": "1736399",
    "end": "1742240"
  },
  {
    "text": "cover tracing but of course the plan is to uh include metrics as well uh and i saw another question uh",
    "start": "1742240",
    "end": "1750000"
  },
  {
    "text": "you know we will be covering but in the future we will also have logs it's part of the entire solution and um",
    "start": "1750000",
    "end": "1756880"
  },
  {
    "text": "usually these the instrumentation components won't be doing anything fancy they will just be up to installing existing",
    "start": "1756880",
    "end": "1763520"
  },
  {
    "text": "instrumentation so that instrumentation will be the one responsible for you know putting everything together um",
    "start": "1763520",
    "end": "1770799"
  },
  {
    "text": "yeah so i don't know if you if that's what you meant yeah and um just to add to that there",
    "start": "1770799",
    "end": "1776960"
  },
  {
    "text": "there is some work underway at least on the python side for the grpc library um instrumentation library to",
    "start": "1776960",
    "end": "1785120"
  },
  {
    "text": "add metrics as well so um we didn't get a chance to demo it because it wasn't ready at the time of the recording but",
    "start": "1785120",
    "end": "1791840"
  },
  {
    "text": "um that's something we we definitely want to spend a bit more time in the future",
    "start": "1791840",
    "end": "1797200"
  },
  {
    "text": "um pranav asks does open telemetry have planned to collect logs as well",
    "start": "1797679",
    "end": "1804720"
  },
  {
    "text": "uh yes so as i mentioned before yeah that's something that's on the works um for ga it's gonna be an experimental",
    "start": "1804720",
    "end": "1812559"
  },
  {
    "text": "feature um because we know there's only so much time that we can work on but yeah we will there will be",
    "start": "1812559",
    "end": "1819200"
  },
  {
    "text": "something as part of ga and of course eventually we will have a more stable",
    "start": "1819200",
    "end": "1824559"
  },
  {
    "text": "update to that part next question is from andre asks",
    "start": "1824559",
    "end": "1832399"
  },
  {
    "text": "asking just to make sure because i already suspect the answer the libraries work transparently for kotlin workloads",
    "start": "1832399",
    "end": "1837840"
  },
  {
    "text": "as well yes they do they do we don't have anything specialized for kotlin",
    "start": "1837840",
    "end": "1844080"
  },
  {
    "text": "but if you think there's something that we should support please um just contact us i think there was",
    "start": "1844080",
    "end": "1851039"
  },
  {
    "text": "there has been interest in adding stuff specifically for scala for example",
    "start": "1851039",
    "end": "1856080"
  },
  {
    "text": "and yeah but yeah usually it's just like you know every if it works with java it will work with kotlin or it",
    "start": "1856080",
    "end": "1862320"
  },
  {
    "text": "should and if not we can have it all right cool next question is from",
    "start": "1862320",
    "end": "1868480"
  },
  {
    "text": "sashi asking can i use open telemetry as a sidecar for node.js containerized applications",
    "start": "1868480",
    "end": "1879440"
  },
  {
    "text": "yeah i don't have an answer for that",
    "start": "1879440",
    "end": "1883278"
  },
  {
    "text": "yeah um i'm i'm not sure if it would be a sidecar as much as",
    "start": "1884640",
    "end": "1890320"
  },
  {
    "text": "the node.js containerize application itself um would be instrumented with",
    "start": "1890320",
    "end": "1897360"
  },
  {
    "text": "open telemetry via the javascript auto instrumentation tooling",
    "start": "1897360",
    "end": "1903600"
  },
  {
    "text": "it's probably worth taking a look at the open telemetry js repo",
    "start": "1903600",
    "end": "1908640"
  },
  {
    "text": "to get an idea for how auto instrumentation for javascript works that might give you a better idea of how",
    "start": "1908640",
    "end": "1914320"
  },
  {
    "text": "to how to go about using it um benci asks are there any security",
    "start": "1914320",
    "end": "1922960"
  },
  {
    "text": "risks with instrumentation itself uh well it shouldn't there are they're",
    "start": "1922960",
    "end": "1929519"
  },
  {
    "text": "having actually uh security concerns on the api on on because we had this idea of for",
    "start": "1929519",
    "end": "1937440"
  },
  {
    "text": "example doing context propagation out of the box even if the user didn't configure that",
    "start": "1937440",
    "end": "1943200"
  },
  {
    "text": "so we are working hard on solving those issues but those things wouldn't be happening as part of the",
    "start": "1943200",
    "end": "1950080"
  },
  {
    "text": "instrumentation they are just part of the um api sdk and",
    "start": "1950080",
    "end": "1955440"
  },
  {
    "text": "instrumentation in general but yeah we're taking this very seriously and this is you know",
    "start": "1955440",
    "end": "1960880"
  },
  {
    "text": "being part of the cncf is part of this yeah and i think i mean i think like",
    "start": "1960880",
    "end": "1966640"
  },
  {
    "text": "with any any code whatsoever there's always security risks um",
    "start": "1966640",
    "end": "1972399"
  },
  {
    "text": "you know i think i think it's it's really up to the library",
    "start": "1972399",
    "end": "1979120"
  },
  {
    "text": "in instrumentation library writers um to ensure that no data is leaked that",
    "start": "1979120",
    "end": "1984480"
  },
  {
    "text": "shouldn't be leaked um i think it's also it's also up to the the folks that are leveraging those",
    "start": "1984480",
    "end": "1990640"
  },
  {
    "text": "libraries to look at the data that gets populated in their tracing information uh in the tracing backends and",
    "start": "1990640",
    "end": "1996399"
  },
  {
    "text": "and ensure that no sensitive data is being exposed um so i yeah i",
    "start": "1996399",
    "end": "2003600"
  },
  {
    "text": "think there's always a security risk i think is the the takeaway that i would like to to see from that question um the next",
    "start": "2003600",
    "end": "2011360"
  },
  {
    "text": "question is from subin asking does the telemetry data from",
    "start": "2011360",
    "end": "2016640"
  },
  {
    "text": "routers makes cpus too busy um",
    "start": "2016640",
    "end": "2021760"
  },
  {
    "text": "not that i know i think there's no um evidence of that um in any case",
    "start": "2021760",
    "end": "2029279"
  },
  {
    "text": "you know let's say that for example there's some case like this or another one that is",
    "start": "2029279",
    "end": "2034720"
  },
  {
    "text": "creating too much um too much telemetry that's uh you can",
    "start": "2034720",
    "end": "2040720"
  },
  {
    "text": "most of these instrumentation agents already support blacklisting something you don't want to to instrument and if they don't they will",
    "start": "2040720",
    "end": "2047519"
  },
  {
    "text": "have it in the future and of course you can always leverage sampling if it's if it becomes a problem",
    "start": "2047519",
    "end": "2053839"
  },
  {
    "text": "um but yeah but i am a little bit curious about that i would like to hear more about the",
    "start": "2053839",
    "end": "2058960"
  },
  {
    "text": "details yeah alex um yeah no i think you're right i think",
    "start": "2058960",
    "end": "2065358"
  },
  {
    "text": "it we haven't seen it yet but it doesn't mean it doesn't exist um i don't think that we've tested it",
    "start": "2065359",
    "end": "2071839"
  },
  {
    "text": "with what router is at this point um okay probably the last question because we only have one minute left",
    "start": "2071839",
    "end": "2077520"
  },
  {
    "text": "here and then we'll have to go to slack um from mahmoud asking is there any overhead",
    "start": "2077520",
    "end": "2083358"
  },
  {
    "text": "to on requests and how do we configure probability of capturing traces",
    "start": "2083359",
    "end": "2088480"
  },
  {
    "text": "um so there is the sampling api or the sampling api that's",
    "start": "2088480",
    "end": "2093839"
  },
  {
    "text": "configurable in the open telemetry sdk um that's that's likely how you would",
    "start": "2093839",
    "end": "2099440"
  },
  {
    "text": "configure the probability of capturing traces and as far as overhead on requests uh i",
    "start": "2099440",
    "end": "2105200"
  },
  {
    "text": "mean i think like with with everything there's always going to be overhead as you add more code in the path",
    "start": "2105200",
    "end": "2110960"
  },
  {
    "text": "um so it's just a matter of you know how much overhead are are you",
    "start": "2110960",
    "end": "2116400"
  },
  {
    "text": "comfortable with on on the requests um and yeah",
    "start": "2116400",
    "end": "2122640"
  },
  {
    "text": "any any last thoughts on that question carlos i'm not that you were that's right",
    "start": "2122640",
    "end": "2130560"
  },
  {
    "text": "all right cool uh well thank you everybody for attending the session uh it was great having all these",
    "start": "2130560",
    "end": "2135680"
  },
  {
    "text": "questions and uh yeah as we said in the in the slides please reach out to us if you have any",
    "start": "2135680",
    "end": "2141359"
  },
  {
    "text": "further questions and it sounds like we're gonna have some questions on slack so yeah yeah thank you so much guys yeah",
    "start": "2141359",
    "end": "2146960"
  },
  {
    "text": "let's follow up thanks for joining and yeah we're waiting for we were waiting for your questions thank you for joining",
    "start": "2146960",
    "end": "2152560"
  },
  {
    "text": "again cheers",
    "start": "2152560",
    "end": "2157520"
  }
]