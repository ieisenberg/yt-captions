[
  {
    "text": "hello welcome this is customizing oppa for a perfect fit authorization sidecar i'm patrick east",
    "start": "880",
    "end": "8639"
  },
  {
    "text": "open maintainer um you know always find me on the open policy agent slack my username is just patrick east nothing",
    "start": "8639",
    "end": "15599"
  },
  {
    "text": "exciting and it's my twitter handle feel free to tweet at me if you have questions or want to get in touch",
    "start": "15599",
    "end": "22880"
  },
  {
    "text": "so let's start this off with a little bit of like base knowledge hopefully everyone here knows about the",
    "start": "22880",
    "end": "28240"
  },
  {
    "text": "open policy agent knows what it is otherwise uh the session will be very confusing for you um if you don't pause now go",
    "start": "28240",
    "end": "35600"
  },
  {
    "text": "look at the url come back when you're ready um just to make sure we're on the same page john purpose policy engine",
    "start": "35600",
    "end": "43920"
  },
  {
    "text": "most people use this as a library or an http server the use case we're kind of talking about",
    "start": "43920",
    "end": "49200"
  },
  {
    "text": "today a little bit is more in the sidecar model where you have your application requests come into it",
    "start": "49200",
    "end": "55120"
  },
  {
    "text": "and then running on the same host whether that's like you know like literally like a linux host it's another service or like",
    "start": "55120",
    "end": "61600"
  },
  {
    "text": "in kubernetes it's just another container in your pod um you have like opa running but the",
    "start": "61600",
    "end": "67840"
  },
  {
    "text": "application makes a local host call through the http api to open it comes back you know",
    "start": "67840",
    "end": "73200"
  },
  {
    "text": "usually it's something like is it allowed or give me reasons why it's denied or something like that",
    "start": "73200",
    "end": "78560"
  },
  {
    "text": "um good news is for that model uh opa is perfect usually that's okay fine except when it",
    "start": "78560",
    "end": "85759"
  },
  {
    "text": "isn't um there's a there's a lot of like requests that come in for for like the open maintainers for uh",
    "start": "85759",
    "end": "93040"
  },
  {
    "text": "custom built-in functions or like like new new functionality that's not there in the language um",
    "start": "93040",
    "end": "98560"
  },
  {
    "text": "so something that we hear about uh from time to time is like i have this authorization use case i'm using these jots and i need some special",
    "start": "98560",
    "end": "105280"
  },
  {
    "text": "behavior to get my keys um they're you know using their their own kind of like homegrown system",
    "start": "105280",
    "end": "110960"
  },
  {
    "text": "or uh for like the demo i'm gonna show here i'm using auth z uh to altzero um but but you know it",
    "start": "110960",
    "end": "117759"
  },
  {
    "text": "needs the the problem is that they've got like they've got their keys somewhere uh it's remote they can't just hard code",
    "start": "117759",
    "end": "123200"
  },
  {
    "text": "it in their policy they they rotate whatever um i need any just the right error handling caching for my",
    "start": "123200",
    "end": "129119"
  },
  {
    "text": "my special system um so the solution obviously is just add it to opa uh you",
    "start": "129119",
    "end": "134480"
  },
  {
    "text": "know this is like it's a problem i have it's a problem other people probably have so let's make it part of the language um that's",
    "start": "134480",
    "end": "142080"
  },
  {
    "text": "great uh you can file an issue we have a lot though and you know like the the",
    "start": "142080",
    "end": "147520"
  },
  {
    "text": "problem is that you're gonna find some pushback usually for uh like we don't necessarily want oppa",
    "start": "147520",
    "end": "154239"
  },
  {
    "text": "to you know be a kitchen sink have have everything um it's it's got to be like balanced with",
    "start": "154239",
    "end": "162080"
  },
  {
    "text": "the the amount of overhead for like pulling in additional libraries uh how many people are going to use it",
    "start": "162080",
    "end": "167760"
  },
  {
    "text": "who's going to maintain it so unfortunately you'll see a lot of pushback on issues for",
    "start": "167760",
    "end": "173440"
  },
  {
    "text": "for new extensions to the language for build-ins especially if it's somebody's you know",
    "start": "173440",
    "end": "179200"
  },
  {
    "text": "like special service they have and it's like you know it's sort of a one-off thing",
    "start": "179200",
    "end": "184560"
  },
  {
    "text": "um so what's the answer obviously you know screw it i'm gonna go make my own opa uh with my own build dents",
    "start": "184560",
    "end": "191840"
  },
  {
    "text": "so the behavior that we want uh for this demo whether the example use case that we're",
    "start": "191840",
    "end": "197360"
  },
  {
    "text": "going to talk about is that i want to be able to fetch keys from a",
    "start": "197360",
    "end": "203120"
  },
  {
    "text": "remote url we're going to look at the open id configuration it's a well-known path pull it down check and see if there's a",
    "start": "203120",
    "end": "210080"
  },
  {
    "text": "key or i specified in there if there is we're gonna go download it otherwise we'll fall back to trying this other",
    "start": "210080",
    "end": "215680"
  },
  {
    "text": "um just like well-known uh keyset url if you guys are familiar with opa and",
    "start": "215680",
    "end": "222560"
  },
  {
    "text": "writing policies you're probably like hey patrick that's dumb you can just use http send um two things uh first of all with the",
    "start": "222560",
    "end": "230080"
  },
  {
    "text": "demo don't read into it too much second thing is that like this is like a legitimate problem for for error",
    "start": "230080",
    "end": "236640"
  },
  {
    "text": "handling with http send it's not always so easy um in in the regular policy to get kind of",
    "start": "236640",
    "end": "242480"
  },
  {
    "text": "like exactly the right behavior for for the error handling as well as like caching and other things plus it's",
    "start": "242480",
    "end": "248159"
  },
  {
    "text": "a lot of complexity that you're going to put in your regular policy that like you may or may not want to actually deal with there like sometimes it is easier",
    "start": "248159",
    "end": "255280"
  },
  {
    "text": "to just write some of this stuff um as is like built-ins uh with like a little bit of like a native like general",
    "start": "255280",
    "end": "260799"
  },
  {
    "text": "purpose programming language versus like policy language because like frankly like fetching something from a url is",
    "start": "260799",
    "end": "267040"
  },
  {
    "text": "not necessarily what like a policy language is designed to do so first of all go read the docs",
    "start": "267040",
    "end": "275120"
  },
  {
    "text": "if you ask me on slack how to add something to oppa i will point you to this url most people though read it and are like",
    "start": "275120",
    "end": "281840"
  },
  {
    "text": "oh crap this looks hard like it's it's you know wall of text that leads you right into a bunch of go",
    "start": "281840",
    "end": "287840"
  },
  {
    "text": "code and uh go code isn't always like the easiest to get started with um so",
    "start": "287840",
    "end": "294560"
  },
  {
    "text": "now you know the fear sets in you're like wait i have to extend oppa this sucks i i'm gonna need to make a custom image i can't just",
    "start": "294560",
    "end": "301520"
  },
  {
    "text": "use like the opal one anymore uh i have to learn gold length because extra like build tools and stuff",
    "start": "301520",
    "end": "308080"
  },
  {
    "text": "um plus i have more code like i don't you know to like fork opa that sounds like a headache to manage",
    "start": "308080",
    "end": "314320"
  },
  {
    "text": "um but like in practice good news it's actually really easy uh there's there's not that much code i",
    "start": "314320",
    "end": "320320"
  },
  {
    "text": "think it's like three lines i'll show you in a minute um to to like just get the base",
    "start": "320320",
    "end": "325919"
  },
  {
    "text": "like forked not even forked like customized opa entry point um the dependency",
    "start": "325919",
    "end": "332240"
  },
  {
    "text": "management's really easy you can go modules so you don't have like a separate fork you don't have to like sync your opa with",
    "start": "332240",
    "end": "337840"
  },
  {
    "text": "like you know git histories and all those stuff um you really just like when you're ready and you want to update to a",
    "start": "337840",
    "end": "343600"
  },
  {
    "text": "different version of opa you just like you know go get that version and upgrade it",
    "start": "343600",
    "end": "349600"
  },
  {
    "text": "and as far as like the tools and like having like golang and all that and the custom image",
    "start": "349600",
    "end": "354639"
  },
  {
    "text": "it's really easy to make your own um these like multi-stage like you use the golang image to build and then you put",
    "start": "354639",
    "end": "360240"
  },
  {
    "text": "in your you know whatever company's blessed base image that uh you know secured team has decided is okay",
    "start": "360240",
    "end": "366479"
  },
  {
    "text": "and just copy the binary into it um it's it's really like i'll show an example of one they're super straightforward so let's",
    "start": "366479",
    "end": "374240"
  },
  {
    "text": "get this started all you have to do to get your custom version of opa off the ground",
    "start": "374240",
    "end": "379440"
  },
  {
    "text": "start a new project you know get in it go mod in it sort of like basic uh you",
    "start": "379440",
    "end": "385440"
  },
  {
    "text": "know starting point for most uh going apps you need a main.go and um the",
    "start": "385440",
    "end": "391759"
  },
  {
    "text": "the like actual implementation of this all you have to do is call that a command.rootcommand.execute",
    "start": "391759",
    "end": "397840"
  },
  {
    "text": "that's the the like main entry point that opa uses for its own cli this will give you access to basically",
    "start": "397840",
    "end": "404720"
  },
  {
    "text": "everything that open can do and it lets you then control like",
    "start": "404720",
    "end": "410000"
  },
  {
    "text": "any other stuff that you want to do on top of oppa so let's uh let's take a second and go look",
    "start": "410000",
    "end": "415759"
  },
  {
    "text": "at some code i have a project started this is that main function we're just looking at um",
    "start": "415759",
    "end": "423440"
  },
  {
    "text": "there's not a lot to this uh i'll show you the the you know like the actual usage in a",
    "start": "423440",
    "end": "429919"
  },
  {
    "text": "minute dockerfile i promised i'd show you guys this too all you need to do is pick like a you",
    "start": "429919",
    "end": "436400"
  },
  {
    "text": "know going version that you're comfortable with i use 115 just it's like the latest uh as",
    "start": "436400",
    "end": "441440"
  },
  {
    "text": "if i was recording this it's like the latest stable i think um but it doesn't really matter oppa is",
    "start": "441440",
    "end": "447039"
  },
  {
    "text": "pretty compatible with with most versions that are like relatively modern and then you just go build your your opa",
    "start": "447039",
    "end": "454080"
  },
  {
    "text": "in this case i'm making an open plus plus binary and then pick whatever base image you want and copy open and this will behave just like",
    "start": "454080",
    "end": "461840"
  },
  {
    "text": "the regular open images you can slide it in use it with good management whatever it",
    "start": "461840",
    "end": "467120"
  },
  {
    "text": "doesn't really matter it'll it'll you know just work so",
    "start": "467120",
    "end": "472560"
  },
  {
    "text": "back to our main.go let me get the terminal up and prove that this does in fact work",
    "start": "472560",
    "end": "480319"
  },
  {
    "text": "um so we've got our project here i'm just gonna go run main.go it's doing a little",
    "start": "480319",
    "end": "488080"
  },
  {
    "text": "compilation step here so it's yeah there we go it takes a second when you run with like go run versus like building",
    "start": "488080",
    "end": "494000"
  },
  {
    "text": "and running the binary but um this should look familiar this is the opa like command entry point you've got",
    "start": "494000",
    "end": "500080"
  },
  {
    "text": "everything here um so i want to run like open the server i do run",
    "start": "500080",
    "end": "505280"
  },
  {
    "text": "s and you know there we go so this is our customized opa off the ground running",
    "start": "505280",
    "end": "510800"
  },
  {
    "text": "ready to go if you need to control the oppa version um you have the the go module so",
    "start": "510800",
    "end": "519518"
  },
  {
    "text": "if you're not familiar with these essentially in here you have a requirement for the dependency on opa",
    "start": "519680",
    "end": "525680"
  },
  {
    "text": "whenever you want to change which oba version you're using uh just just update this and uh you'll pull in the latest code",
    "start": "525680",
    "end": "532720"
  },
  {
    "text": "you get all the changes features et cetera so that's that's really pretty easy to manage it's not much",
    "start": "532720",
    "end": "539040"
  },
  {
    "text": "harder than you know setting the the opa version and like your yaml manifest somewhere",
    "start": "539040",
    "end": "545680"
  },
  {
    "text": "so we've got our base version you might be wondering hold on where's my built in how do i do",
    "start": "545680",
    "end": "550959"
  },
  {
    "text": "that there's three steps so the first thing we have to do is decide on a signature",
    "start": "550959",
    "end": "557040"
  },
  {
    "text": "this is for compile time for opa to be able to do like type checking ensuring that like nobody has conflicts",
    "start": "557040",
    "end": "563920"
  },
  {
    "text": "they didn't define some other like rule that has like the name that conflicts or something like",
    "start": "563920",
    "end": "569360"
  },
  {
    "text": "that um as well as for the run time we have to have the implementation of",
    "start": "569360",
    "end": "574720"
  },
  {
    "text": "our function you know have code that actually does what we want to do for the built-in the last piece is pretty crucial so you",
    "start": "574720",
    "end": "581360"
  },
  {
    "text": "have to register the built-in using one of these functions that i'm showing here on the right",
    "start": "581360",
    "end": "587040"
  },
  {
    "text": "you have to do this before you start oppa so like in in our main function we do that that execute on the the entry point um",
    "start": "587040",
    "end": "595040"
  },
  {
    "text": "so we need to do is is register and then call the entry point execute so let's go look at",
    "start": "595040",
    "end": "601440"
  },
  {
    "text": "that a little more code there we go i'm going to cheat and jump",
    "start": "601440",
    "end": "609519"
  },
  {
    "text": "to a version that already has this implemented save us all a little time",
    "start": "609519",
    "end": "618640"
  },
  {
    "text": "okay so our main.go has been updated to now have a built-in stock register",
    "start": "618640",
    "end": "624320"
  },
  {
    "text": "function uh this thing is a function that i added this built-ins package is new it's part",
    "start": "624320",
    "end": "629760"
  },
  {
    "text": "of the the example code that i'm showing i like this kind of pattern uh basically just to minimize what's in",
    "start": "629760",
    "end": "636160"
  },
  {
    "text": "the main function we don't want to do too much in here um you there's no reason you couldn't have your entire built-in everything in",
    "start": "636160",
    "end": "642399"
  },
  {
    "text": "this one file but it becomes a little unwieldy over time so i've got another built-ins package where",
    "start": "642399",
    "end": "648240"
  },
  {
    "text": "i'm going to put the built-in and the implementation for it um our built-ins package",
    "start": "648240",
    "end": "654800"
  },
  {
    "text": "uh we have the the one function here this is the one we're calling in main the call here is the one that we saw on",
    "start": "654800",
    "end": "662720"
  },
  {
    "text": "the slide a minute ago we're calling built in one the the one just means there's one argument",
    "start": "662720",
    "end": "667839"
  },
  {
    "text": "there's a handful of them or a dynamic one if you have you know like a variable list of arguments um",
    "start": "667839",
    "end": "675279"
  },
  {
    "text": "the declaration here um this is that that signature that i was talking about",
    "start": "675279",
    "end": "680480"
  },
  {
    "text": "so in here we're going to define what the function is called so this is the name this is like literally the",
    "start": "680480",
    "end": "685600"
  },
  {
    "text": "string inside of the the rego code that will you know like be the function uh in this case i'm",
    "start": "685600",
    "end": "692160"
  },
  {
    "text": "picking custom.fetch.jwks um the actual like",
    "start": "692160",
    "end": "697760"
  },
  {
    "text": "signature portion of this is a little bit cryptic um take a look at the the opa like ast",
    "start": "697760",
    "end": "704079"
  },
  {
    "text": "package documentation and there's a ton of examples in there for all the built-ins in the language if you get confused on how to do one of the",
    "start": "704079",
    "end": "710480"
  },
  {
    "text": "more kind of complicated signatures there's lots of examples in there this one's pretty straightforward we're",
    "start": "710480",
    "end": "715839"
  },
  {
    "text": "saying that there's arguments of a you know a single string type and a return of a single string type um",
    "start": "715839",
    "end": "723360"
  },
  {
    "text": "the last piece for this registration is pointing to the implementation implementation as a function",
    "start": "723360",
    "end": "730480"
  },
  {
    "text": "not too complicated you get a built-in context this thing's pretty cool i'll talk about",
    "start": "730480",
    "end": "736639"
  },
  {
    "text": "it in a second and your arguments so in this case our argument single one",
    "start": "736639",
    "end": "743519"
  },
  {
    "text": "we uh translate it from the the ast like the the regular type to a just a",
    "start": "743519",
    "end": "749279"
  },
  {
    "text": "regular going string um for our implementation we're gonna have like",
    "start": "749279",
    "end": "755120"
  },
  {
    "text": "effectively a base url we're gonna prepend some well-known paths to it um like literally like you know it's",
    "start": "755120",
    "end": "763120"
  },
  {
    "text": "not well known in the um in the urls just noticed a bug in this one look at",
    "start": "763120",
    "end": "768160"
  },
  {
    "text": "that fixing bugs as we go doing it live um so we have our base url argument",
    "start": "768160",
    "end": "775600"
  },
  {
    "text": "we're going to be returning back a single ast term so this is going to be our our key we're",
    "start": "775600",
    "end": "782240"
  },
  {
    "text": "going to turn it back as a string the built-in context is pretty cool",
    "start": "782240",
    "end": "788399"
  },
  {
    "text": "so make sure that you take advantage of this all the built-ins get called with this context",
    "start": "788399",
    "end": "793839"
  },
  {
    "text": "on it there's a cache that lets you cache uh values so you don't have to recompute things as much",
    "start": "793839",
    "end": "800560"
  },
  {
    "text": "the the nice thing here being that like if in some policy evaluation this this function gets executed or",
    "start": "800560",
    "end": "806959"
  },
  {
    "text": "evaluated more than once you don't have to do the work for it each time you can have a consistent result every time you don't",
    "start": "806959",
    "end": "813200"
  },
  {
    "text": "worried about if you had like um maybe errors or something like that so what we're going to do first thing is",
    "start": "813200",
    "end": "820000"
  },
  {
    "text": "just check and see if this you know we already have this in the cache if we do then we're going to just return back",
    "start": "820000",
    "end": "826240"
  },
  {
    "text": "whatever was cached don't worry about it like assume it was valid",
    "start": "826240",
    "end": "831279"
  },
  {
    "text": "if we don't find something in the cache we're going to go off and fetch the code fetch the key i'm going to skip over",
    "start": "831279",
    "end": "838720"
  },
  {
    "text": "some of this code i don't think it's super interesting basically we're just looking for like an open id config",
    "start": "838720",
    "end": "845360"
  },
  {
    "text": "we'll check we'll go and like fetch that if it's there we try to parse out the the uri if it's",
    "start": "845360",
    "end": "851519"
  },
  {
    "text": "not you know if any of that fails we fall back to this just like default well-known jwks thing",
    "start": "851519",
    "end": "858399"
  },
  {
    "text": "um all of this is sort of a hypothetical you know workflow it doesn't really you know like usually you kind of have",
    "start": "858399",
    "end": "865040"
  },
  {
    "text": "one or the other or something but you know for the sake of example uh so we're going to do",
    "start": "865040",
    "end": "870480"
  },
  {
    "text": "the last part here is that we're going to fetch the the the uri for the key",
    "start": "870480",
    "end": "877680"
  },
  {
    "text": "whether that's the one that we found out of the config or just the one that we're guessing and then return back the the value as a",
    "start": "877680",
    "end": "884399"
  },
  {
    "text": "string uh one thing here it's another another bug in the code um so we need to add it back to our",
    "start": "884399",
    "end": "893519"
  },
  {
    "text": "context cache so catch key which i defined earlier and",
    "start": "893519",
    "end": "902560"
  },
  {
    "text": "our string so",
    "start": "902560",
    "end": "907279"
  },
  {
    "text": "when we do this what we're going to have is",
    "start": "908639",
    "end": "913839"
  },
  {
    "text": "a new string term which we're gonna save in this in the",
    "start": "915600",
    "end": "920800"
  },
  {
    "text": "cache that way we can just blindly return it later and then we're gonna return this uh the",
    "start": "920800",
    "end": "926959"
  },
  {
    "text": "this is going to be the string of the key the the actual value that comes back out of the function in in radio when we use this um and then",
    "start": "926959",
    "end": "934399"
  },
  {
    "text": "the last bit here is if any of this failed we're going to fall through you'll notice there's a lot of like",
    "start": "934399",
    "end": "940480"
  },
  {
    "text": "arrogance now so we're only like half happy path uh like like checking our way through this stuff",
    "start": "940480",
    "end": "946480"
  },
  {
    "text": "so there's any errors we're gonna fall through and return back undefined uh undefined being there's no error and",
    "start": "946480",
    "end": "953360"
  },
  {
    "text": "there's a nil value for the asd term result",
    "start": "953360",
    "end": "958399"
  },
  {
    "text": "this makes it really easy in the like policies that are calling this code to do like error handling and um sort of",
    "start": "958399",
    "end": "965600"
  },
  {
    "text": "reason about like when you when you do like a rule for like validate that the key was okay if",
    "start": "965600",
    "end": "971360"
  },
  {
    "text": "part of that is fetching the the um the key then if it comes back as undefined that",
    "start": "971360",
    "end": "978480"
  },
  {
    "text": "rules can be undefined you know your your allow step presumably is like calling to get this key that will also",
    "start": "978480",
    "end": "985279"
  },
  {
    "text": "be undefined so like it should it should bubble up in kind of a pretty like sane way it's easy to reason about uh i",
    "start": "985279",
    "end": "992880"
  },
  {
    "text": "highly recommend using this as like your kind of default pattern um okay so anyways we've got this",
    "start": "992880",
    "end": "999839"
  },
  {
    "text": "implemented let's go look and see when we run this on the terminal we're gonna run this one",
    "start": "999839",
    "end": "1007680"
  },
  {
    "text": "in the uh the repel just for example purposes and what we'll be able to see is that",
    "start": "1007680",
    "end": "1014639"
  },
  {
    "text": "our function is recognized and it knows about the syntax of it so",
    "start": "1014639",
    "end": "1021920"
  },
  {
    "text": "if we try to pass in like one two three it's telling us hey you gave us a number but it's expecting a string and i want",
    "start": "1021920",
    "end": "1027120"
  },
  {
    "text": "to return back a string like this is this is invalid you can't do that um so like there we go we verified that our",
    "start": "1027120",
    "end": "1034160"
  },
  {
    "text": "signature is being registered correctly now let's try and fetch with an actual string the the url that'll work",
    "start": "1034160",
    "end": "1041520"
  },
  {
    "text": "uh and sure enough we get back something that looks good this is like the the key for my my dev optio",
    "start": "1041520",
    "end": "1047760"
  },
  {
    "text": "account here feel free to steal this url play with it it'll leave it up for a while but",
    "start": "1047760",
    "end": "1052960"
  },
  {
    "text": "there's nothing um secret in there it's just a sort of demo one",
    "start": "1052960",
    "end": "1058320"
  },
  {
    "text": "um so yeah so there we go so our built-in's working we've now extended the language we have this new",
    "start": "1058320",
    "end": "1064320"
  },
  {
    "text": "custom function um we're all set now let's say we have a new requirement",
    "start": "1064320",
    "end": "1072400"
  },
  {
    "text": "um we have decision vlogs for opa people like it but they don't",
    "start": "1072400",
    "end": "1078080"
  },
  {
    "text": "always like having to have like a special server for it or something so you know a lot of times they'll have",
    "start": "1078080",
    "end": "1083200"
  },
  {
    "text": "some other cool infra let's say hypothetically you've got kafka running you've got a sweet production cluster",
    "start": "1083200",
    "end": "1089200"
  },
  {
    "text": "you you know you'd much prefer to just dump all your decision logs into it so yeah let's do it why not uh what",
    "start": "1089200",
    "end": "1096000"
  },
  {
    "text": "we're going to do is make a new plugin so open plugins are pretty straightforward",
    "start": "1096000",
    "end": "1101679"
  },
  {
    "text": "you need to define a plugin name and a struct you implement the plugin interface with",
    "start": "1101679",
    "end": "1107919"
  },
  {
    "text": "your struct and then you have to have a factory that instantiates your plugin",
    "start": "1107919",
    "end": "1113280"
  },
  {
    "text": "none of these are too complicated start stop reconfigure exactly what they sound like the factory",
    "start": "1113280",
    "end": "1120160"
  },
  {
    "text": "validate is essentially you're given like a raw chunk of the oppo config and it's up to you to parse",
    "start": "1120160",
    "end": "1126799"
  },
  {
    "text": "it and decide if it was valid for your plugin or not so it makes it really flexible you can have as complicated of config as you want um",
    "start": "1126799",
    "end": "1134080"
  },
  {
    "text": "without having to to like do any any sort of like config registration or anything like that with",
    "start": "1134080",
    "end": "1140000"
  },
  {
    "text": "oppa and then the last piece here is actually registering your plugin same pattern as the",
    "start": "1140000",
    "end": "1146320"
  },
  {
    "text": "the built-in function you have to do this before actually like executing the the oba entry point",
    "start": "1146320",
    "end": "1152400"
  },
  {
    "text": "so let's go look i have some code set up for this should be easy we will",
    "start": "1152400",
    "end": "1160480"
  },
  {
    "text": "jump ahead to a version that actually has the plugin",
    "start": "1160960",
    "end": "1166960"
  },
  {
    "text": "save us all a little time so notice here i've got a new package",
    "start": "1166960",
    "end": "1173679"
  },
  {
    "text": "called plugins i've got some changes in the main.go plugins.register",
    "start": "1173679",
    "end": "1179280"
  },
  {
    "text": "i'm using the same pattern as i did with the built-ins where i want to i want to try and you know minimize main code",
    "start": "1179280",
    "end": "1185039"
  },
  {
    "text": "um so let's go look in our new package in here we have a register",
    "start": "1185039",
    "end": "1191840"
  },
  {
    "text": "i split out into a separate package for the logger so we have a plug-in name defined for it",
    "start": "1191840",
    "end": "1198160"
  },
  {
    "text": "uh and a factory to instantiate it the plug-in name is important um let me",
    "start": "1198160",
    "end": "1204799"
  },
  {
    "text": "go look in the logger here uh so that the plug-in name for us right now is cockpit logger um",
    "start": "1204799",
    "end": "1213200"
  },
  {
    "text": "this thing is is actually kind of like you can almost think of it as part of like the api for your plugin or",
    "start": "1213200",
    "end": "1218320"
  },
  {
    "text": "something because it's going to be the string that shows up in the configuration and it's going to be as far as like",
    "start": "1218320",
    "end": "1225520"
  },
  {
    "text": "other plugins ability to find your plugin and use it uh you have to configure them and like like this thing it's it's more than just",
    "start": "1225520",
    "end": "1232159"
  },
  {
    "text": "an arbitrary string you know you should pick something and not change it",
    "start": "1232159",
    "end": "1237200"
  },
  {
    "text": "it's it's like there are migration uh implications if over time you change the plugin name for",
    "start": "1237200",
    "end": "1242640"
  },
  {
    "text": "something um so anyways like i said before we've got our plugin name uh",
    "start": "1242640",
    "end": "1248480"
  },
  {
    "text": "we have our our actual struct this thing's got a manager uh reference you're gonna wanna hold on",
    "start": "1248480",
    "end": "1254000"
  },
  {
    "text": "to that you get it as part of the the factory initialization step um",
    "start": "1254000",
    "end": "1259919"
  },
  {
    "text": "we have a mutex that we use to protect our our config during reconfigure um and then we have",
    "start": "1259919",
    "end": "1266480"
  },
  {
    "text": "our config which in this case for the kafka plug-in we're gonna have a host and a topic so this is just telling it",
    "start": "1266480",
    "end": "1273760"
  },
  {
    "text": "where it should publish information um the factory nothing too exciting",
    "start": "1273760",
    "end": "1279600"
  },
  {
    "text": "uh you know it returns a new instance the logger the only thing that's maybe of interest",
    "start": "1279600",
    "end": "1285120"
  },
  {
    "text": "here are the plugin statuses so the plugin manager has api calls on",
    "start": "1285120",
    "end": "1290640"
  },
  {
    "text": "it to set the plugin status again this you know the plugin name gets used everywhere",
    "start": "1290640",
    "end": "1296080"
  },
  {
    "text": "um so you're going to want to use this as extensively as you can in your plugin to give accurate",
    "start": "1296080",
    "end": "1301919"
  },
  {
    "text": "information back this is exposed via like the health and um status apis for oppa",
    "start": "1301919",
    "end": "1308320"
  },
  {
    "text": "so you want to make sure that like if your plugin is in a bad state and you you need to like get opa to stop",
    "start": "1308320",
    "end": "1316080"
  },
  {
    "text": "getting requests for authorization you have to make sure to set your plug-in to an error state and make sure that your health probes and",
    "start": "1316080",
    "end": "1322320"
  },
  {
    "text": "other things like that are configured to look at plug-in health um so don't don't skip these they're",
    "start": "1322320",
    "end": "1328480"
  },
  {
    "text": "important um they're relatively new so if you have if you've",
    "start": "1328480",
    "end": "1333600"
  },
  {
    "text": "seen like older plugins or you're like uh you have built an older plugin",
    "start": "1333600",
    "end": "1338960"
  },
  {
    "text": "these might be a new api for you i'd recommend going and adding them um the last piece here is actually like",
    "start": "1338960",
    "end": "1346640"
  },
  {
    "text": "being a decision logger so there's a little bit more to the plugins um to actually be a decision",
    "start": "1346640",
    "end": "1353919"
  },
  {
    "text": "logger you have to be a plug-in but you also have to implement this log api um",
    "start": "1353919",
    "end": "1359280"
  },
  {
    "text": "for us it's gonna be you know you get in a context you get a event object which is like the the",
    "start": "1359280",
    "end": "1365280"
  },
  {
    "text": "decision and then we wanna basically send that to kafka so if we go back to the code i'm gonna jump",
    "start": "1365280",
    "end": "1372320"
  },
  {
    "text": "ahead to a version with this log function implemented to use kafka",
    "start": "1372320",
    "end": "1380000"
  },
  {
    "text": "and here we go take a second for the id to catch up",
    "start": "1380640",
    "end": "1386159"
  },
  {
    "text": "our plug instruct now includes a pointer to a kafka producer we're using just the uh the like",
    "start": "1386159",
    "end": "1391919"
  },
  {
    "text": "confluent kafka go library nothing to you too fancy there um",
    "start": "1391919",
    "end": "1397679"
  },
  {
    "text": "when we start up we're using our config now we set up uh a config saying that our bootstrap server",
    "start": "1397679",
    "end": "1404080"
  },
  {
    "text": "is going to be that host option that we we provide um when we start and stop we you know start",
    "start": "1404080",
    "end": "1411039"
  },
  {
    "text": "the producer we close it on stop on reconfigure we we effectively stop and start it again",
    "start": "1411039",
    "end": "1417200"
  },
  {
    "text": "setting the um the states appropriately and then for log then you know like",
    "start": "1417200",
    "end": "1423679"
  },
  {
    "text": "as expected we're going to take the uh the event we're going to use it's built in like json marshalling stuff",
    "start": "1423679",
    "end": "1430080"
  },
  {
    "text": "um this will this will give us a string that's basically the same payload that you get with the http uh decision log service",
    "start": "1430080",
    "end": "1437679"
  },
  {
    "text": "um and we're gonna just do a like produce on our producer with this",
    "start": "1437679",
    "end": "1444640"
  },
  {
    "text": "we're going to specify the topic that was configured and any partition so it'll just get you",
    "start": "1444640",
    "end": "1450640"
  },
  {
    "text": "know thrown into that topic anybody can receive it and that's pretty much it the only",
    "start": "1450640",
    "end": "1456799"
  },
  {
    "text": "consideration that you might want to think about when you do these um decision loggers is whether",
    "start": "1456799",
    "end": "1462480"
  },
  {
    "text": "you want to do it asymptotically or not so if you do a synchronous one you make",
    "start": "1462480",
    "end": "1467919"
  },
  {
    "text": "sure that that decision is is logged before the decision is like returned back to the client",
    "start": "1467919",
    "end": "1474320"
  },
  {
    "text": "right so if somebody says is this allowed you have it's sort of up to you and your internal policies most people",
    "start": "1474320",
    "end": "1480720"
  },
  {
    "text": "want to have that decision logged before the client gets back yes or no",
    "start": "1480720",
    "end": "1486240"
  },
  {
    "text": "the reason being that if they get back yes but they weren't supposed to uh if you lost that log somewhere you",
    "start": "1486240",
    "end": "1492400"
  },
  {
    "text": "may not know what happened so it's like a security i would say like risk but um",
    "start": "1492400",
    "end": "1498080"
  },
  {
    "text": "you know typically you're going to want to make this like a synchronous thing so when we do the produce we we sit here",
    "start": "1498080",
    "end": "1503520"
  },
  {
    "text": "and wait on the delivery channel until we make sure that it worked and if there was an error um then we we",
    "start": "1503520",
    "end": "1510080"
  },
  {
    "text": "go ahead and return that back versus returning back no error if there's an error in the log um the",
    "start": "1510080",
    "end": "1516640"
  },
  {
    "text": "the server will actually return like a 500 or something back to the client it won't they won't give back am",
    "start": "1516640",
    "end": "1522640"
  },
  {
    "text": "you know like okay status with the result so there we have it we have our plugin",
    "start": "1522640",
    "end": "1528240"
  },
  {
    "text": "we should be ready to go let's run this thing the first thing we",
    "start": "1528240",
    "end": "1534240"
  },
  {
    "text": "have to do is is configure it so let me set up a conf.yaml real quick",
    "start": "1534240",
    "end": "1540840"
  },
  {
    "text": "um we have here the decision log plugin configured to",
    "start": "1540840",
    "end": "1546320"
  },
  {
    "text": "use our kafka plugin and we have kafka plugin plugin settings",
    "start": "1546320",
    "end": "1552559"
  },
  {
    "text": "it's a lot of it's plugins all the way down um the the topic we're going to set to opa",
    "start": "1552559",
    "end": "1558400"
  },
  {
    "text": "the host is going to be localhost 1992. um i'm just using the like kafka quick start thing look",
    "start": "1558400",
    "end": "1564400"
  },
  {
    "text": "running locally so if you if you go google that like um you follow the instructions there you'll",
    "start": "1564400",
    "end": "1569919"
  },
  {
    "text": "have the same setup that i do um and now when we run opa i'm gonna specify to use that config",
    "start": "1569919",
    "end": "1579440"
  },
  {
    "text": "use it in debug mode um run it as a server we should see this thing up and running",
    "start": "1579440",
    "end": "1587760"
  },
  {
    "text": "there we go and now if i make a request to opa",
    "start": "1588400",
    "end": "1595760"
  },
  {
    "text": "bigger",
    "start": "1596840",
    "end": "1599840"
  },
  {
    "text": "oh my gosh spell here we go uh v1 data so this is going to trigger a",
    "start": "1604480",
    "end": "1611200"
  },
  {
    "text": "decision log event and we can see in our debug log that yeah it delivered the topic",
    "start": "1611200",
    "end": "1618400"
  },
  {
    "text": "or delivered to the opa topic we can verify that over here i have",
    "start": "1618400",
    "end": "1625200"
  },
  {
    "text": "a script queued up here we go so we're going to read from the the",
    "start": "1625200",
    "end": "1630720"
  },
  {
    "text": "topic as a consumer and point it at the same server",
    "start": "1630720",
    "end": "1637200"
  },
  {
    "text": "and we will see that yes indeed there it is there's our decision so success we're now logging into",
    "start": "1637200",
    "end": "1644720"
  },
  {
    "text": "kafka let's go back to slides because",
    "start": "1644720",
    "end": "1651760"
  },
  {
    "text": "surprise surprise we have another requirement so we have this thing as a side car we want",
    "start": "1651760",
    "end": "1657919"
  },
  {
    "text": "it to be lightning fast we don't want to sit here and wait house http json overhead you know like",
    "start": "1657919",
    "end": "1663200"
  },
  {
    "text": "come on that's slow um let's why not use grpc uh and the answer is like yeah why not",
    "start": "1663200",
    "end": "1669360"
  },
  {
    "text": "let's do it so how are we gonna add a new api to this um you might be thinking to yourself",
    "start": "1669360",
    "end": "1676399"
  },
  {
    "text": "like okay we can add a built-in function but like that's weird this doesn't seem like the right way to do it",
    "start": "1676399",
    "end": "1681520"
  },
  {
    "text": "uh well the answer is a plug-in yeah we have one but you can have as many as you want so let's keep doing it",
    "start": "1681520",
    "end": "1687840"
  },
  {
    "text": "um let me jump to the code",
    "start": "1687840",
    "end": "1693120"
  },
  {
    "text": "and i will skip ahead to our base plugin",
    "start": "1693120",
    "end": "1700720"
  },
  {
    "text": "now what you'll notice i've just added a new",
    "start": "1701200",
    "end": "1706559"
  },
  {
    "text": "directory here um api in our plugins i'm registering",
    "start": "1706559",
    "end": "1711760"
  },
  {
    "text": "one more same pattern same you know everything kind of looks about the same",
    "start": "1711760",
    "end": "1716799"
  },
  {
    "text": "and then in here in our api i'm defining a protobuf you know like um api definition",
    "start": "1716799",
    "end": "1724320"
  },
  {
    "text": "here for a auth z or authorizer service with an opt z api it takes in a request that just has",
    "start": "1724320",
    "end": "1732240"
  },
  {
    "text": "a string jot and returns back a boolean yes no so super streamlined you know as minimal as",
    "start": "1732240",
    "end": "1737520"
  },
  {
    "text": "we can get here um generated the the you know like boilerplate code that comes from that",
    "start": "1737520",
    "end": "1743120"
  },
  {
    "text": "with the regular golang protobuf stuff our plugin looks very similar um we",
    "start": "1743120",
    "end": "1750240"
  },
  {
    "text": "define our plugin name we have a config struct uh this time we only need a a like host or like a",
    "start": "1750240",
    "end": "1758000"
  },
  {
    "text": "address to listen on so this is going to be where we set our like tcp listener for",
    "start": "1758000",
    "end": "1763120"
  },
  {
    "text": "the grpc api we have our server struct which is our plug-in",
    "start": "1763120",
    "end": "1769600"
  },
  {
    "text": "same you know the usual gangs all here we've got the plug-in manager we've got our lock we've got our config the new parts",
    "start": "1769600",
    "end": "1776880"
  },
  {
    "text": "are the little bit of boilerplate we need for doing the the implementation of the authorizer api",
    "start": "1776880",
    "end": "1784159"
  },
  {
    "text": "as well as a pointer to a grpc server that we're going to start so start function is you know you",
    "start": "1784159",
    "end": "1791279"
  },
  {
    "text": "probably imagine we start the grpc server i'm not going to go too far into this code but you know the",
    "start": "1791279",
    "end": "1797360"
  },
  {
    "text": "it's all it's all available online so feel free to dig in take a look the important part here",
    "start": "1797360",
    "end": "1804880"
  },
  {
    "text": "is the actual implementation of that api so we have this grpc api endpoint for",
    "start": "1804880",
    "end": "1811200"
  },
  {
    "text": "otzi the thing we get in is going to have uh jblt on our request we're supposed to return",
    "start": "1811200",
    "end": "1817520"
  },
  {
    "text": "back a boolean uh but then like wait how how do we evaluate the policy um the good news is that there's there's",
    "start": "1817520",
    "end": "1825279"
  },
  {
    "text": "pretty good like opa api documentation for how to evaluate policies so here we go i jumped the code ahead a",
    "start": "1825279",
    "end": "1832640"
  },
  {
    "text": "little bit fast forward we're going to use the rego package we're going to do like a prepare for eval and then we're going to",
    "start": "1832640",
    "end": "1838640"
  },
  {
    "text": "evaluate our input you know we already got that figured out we're going to expect the jwt",
    "start": "1838640",
    "end": "1844320"
  },
  {
    "text": "as part of our request so that's you know we're just going to wrap that put it in a map so that openness had to",
    "start": "1844320",
    "end": "1849600"
  },
  {
    "text": "deal with it and evaluate uh but wait there's no policies",
    "start": "1849600",
    "end": "1854960"
  },
  {
    "text": "right when you do this this rego.new you have to tell it which policies to use and like say you",
    "start": "1854960",
    "end": "1861440"
  },
  {
    "text": "had external data or something in a bundle suddenly like you don't have any of that right um",
    "start": "1861440",
    "end": "1867440"
  },
  {
    "text": "so what do we do do we need to like parse bundles in our plugin or something",
    "start": "1867440",
    "end": "1874159"
  },
  {
    "text": "the answer is no what you need to do is use the plugin",
    "start": "1874159",
    "end": "1879360"
  },
  {
    "text": "manager so there's a little snippet here in the docs that i think a lot of people skip over um the the manager uh let's see here",
    "start": "1879360",
    "end": "1887279"
  },
  {
    "text": "gives plugins access to engine wide components like storage uh so the pro tip main takeaway",
    "start": "1887279",
    "end": "1893320"
  },
  {
    "text": "manager.store that's that's where the policies are that's the good stuff so let's go back and implement that",
    "start": "1893320",
    "end": "1902640"
  },
  {
    "text": "there we go super fast when you cheat and use uh git checkout",
    "start": "1902640",
    "end": "1909679"
  },
  {
    "text": "um okay so our oxy function now same thing we've got our input um",
    "start": "1909679",
    "end": "1915519"
  },
  {
    "text": "there's a little bit of of typing to to work around but nothing new",
    "start": "1915519",
    "end": "1921440"
  },
  {
    "text": "same query now we start a storage transaction we use the manager store",
    "start": "1921440",
    "end": "1928399"
  },
  {
    "text": "when we construct our regular object we're passing in the store the transaction",
    "start": "1928399",
    "end": "1933519"
  },
  {
    "text": "and the compiler so this is a cool step if you do this and you're using bundles in the",
    "start": "1933519",
    "end": "1939120"
  },
  {
    "text": "background you won't have to recompile it'll use the compiler that's already available it's it's done like on the",
    "start": "1939120",
    "end": "1944960"
  },
  {
    "text": "background threads it's not part of like your evaluation uh you know like hot path so like",
    "start": "1944960",
    "end": "1950640"
  },
  {
    "text": "definitely stick to this give it a whirl um once we have this we're ready to go we",
    "start": "1950640",
    "end": "1956000"
  },
  {
    "text": "can evaluate this thing is going to have all the policies that are loaded from bundles from the cli from the you know http api",
    "start": "1956000",
    "end": "1963919"
  },
  {
    "text": "if somebody's pushing policies into opa you'll still have access to them this way",
    "start": "1963919",
    "end": "1969120"
  },
  {
    "text": "so the last piece here is that we do need to call the decision logger um what would",
    "start": "1969120",
    "end": "1975919"
  },
  {
    "text": "do there's a log api very similar to the one that we implemented uh but you just have to get a reference",
    "start": "1975919",
    "end": "1982080"
  },
  {
    "text": "to that plugin so let's start what we do is go and look it up so this goes back to the plugin",
    "start": "1982080",
    "end": "1987360"
  },
  {
    "text": "name being kind of part of that like api you use those names to look up plugins",
    "start": "1987360",
    "end": "1992559"
  },
  {
    "text": "on the manager again you know manager is kind of the key to being able to do this",
    "start": "1992559",
    "end": "1997679"
  },
  {
    "text": "once you have that reference to the plugin we just stash a copy of it on our",
    "start": "1997679",
    "end": "2003039"
  },
  {
    "text": "server plug-in and use it in an evaluation to do the decision logs",
    "start": "2003039",
    "end": "2008880"
  },
  {
    "text": "so the end result here is that we're going to have a grpc api that takes in",
    "start": "2008880",
    "end": "2014159"
  },
  {
    "text": "a job it does the evaluation logs it to kafka",
    "start": "2014159",
    "end": "2019360"
  },
  {
    "text": "and then returns it back so let's go ahead and",
    "start": "2019360",
    "end": "2027440"
  },
  {
    "text": "jump back to the slides here uh so thank you all this is available on github it all",
    "start": "2027440",
    "end": "2033039"
  },
  {
    "text": "works i sort of skipped over the demo for time but feel free to grab the code and run",
    "start": "2033039",
    "end": "2038080"
  },
  {
    "text": "it it should have no problems uh yeah thank you",
    "start": "2038080",
    "end": "2043600"
  }
]