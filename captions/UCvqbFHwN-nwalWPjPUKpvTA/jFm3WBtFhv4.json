[
  {
    "start": "0",
    "end": "44000"
  },
  {
    "text": "all right hi everyone uh so we are very happy to be here hope you had a good time at",
    "start": "719",
    "end": "6640"
  },
  {
    "text": "kubicon um today we are here to talk to you about metrics and entry and testing how",
    "start": "6640",
    "end": "12960"
  },
  {
    "text": "those things can be combined together but first let's present ourselves so my name is jessica i'm a software",
    "start": "12960",
    "end": "20240"
  },
  {
    "text": "engineer at red hat i'm also a contributor and approver for portuguese content at the cncf glossary i'm one of",
    "start": "20240",
    "end": "27599"
  },
  {
    "text": "the maintainers of the observatorium project this is our observability backhand i will see more about it today",
    "start": "27599",
    "end": "35920"
  },
  {
    "text": "and i'm currently working with go i'm also interested in distributed systems and also observability",
    "start": "35920",
    "end": "43878"
  },
  {
    "start": "44000",
    "end": "69000"
  },
  {
    "text": "so hey everyone i'm mate i'm also working with jessica at the monitoring team at red hat i'm a contributor and a",
    "start": "44800",
    "end": "51440"
  },
  {
    "text": "triage member at the at the thanos project as you can also get from my cool tunnel socks that i got yesterday from",
    "start": "51440",
    "end": "58000"
  },
  {
    "text": "the cncf store and i'm also maintained observatorium uh together with jessica so yeah the usual",
    "start": "58000",
    "end": "64000"
  },
  {
    "text": "interested in distributed systems observability and all of those things",
    "start": "64000",
    "end": "69040"
  },
  {
    "start": "69000",
    "end": "107000"
  },
  {
    "text": "cool so let's go through our agenda today so the idea today is that we want to",
    "start": "69040",
    "end": "74960"
  },
  {
    "text": "understand what are metrics why are they important why do we need them then we will jump into understanding",
    "start": "74960",
    "end": "81600"
  },
  {
    "text": "metrics and then trend testing as a concept so like how this differ from the conventional engine testing what are the",
    "start": "81600",
    "end": "88720"
  },
  {
    "text": "advantages which patterns can we use and we also go through different types of tests",
    "start": "88720",
    "end": "95040"
  },
  {
    "text": "then we will show how this can be used in real world applications and at the end we'll have a demo so we can",
    "start": "95040",
    "end": "101759"
  },
  {
    "text": "understand how all of this can be used in practice",
    "start": "101759",
    "end": "107040"
  },
  {
    "text": "but first i want to ask everyone who in this room has your application",
    "start": "107040",
    "end": "112399"
  },
  {
    "text": "instrumented with metrics cool nice nice i see some hands",
    "start": "112399",
    "end": "119520"
  },
  {
    "text": "i first want to share my personal story how i got introduced to metrics on the first place",
    "start": "119520",
    "end": "124960"
  },
  {
    "text": "was not very funny but yeah i pushed a new service to production",
    "start": "124960",
    "end": "130160"
  },
  {
    "text": "the code worked the prs were review everything was okay in my head at least",
    "start": "130160",
    "end": "135520"
  },
  {
    "text": "i had the code there the tests were passing and then the service went live people",
    "start": "135520",
    "end": "141520"
  },
  {
    "text": "started to use it i saw some logs okay i got some requests but i had no idea how everything was",
    "start": "141520",
    "end": "148480"
  },
  {
    "text": "going right i had no idea how my application was performing it was a new service so",
    "start": "148480",
    "end": "154879"
  },
  {
    "text": "like how am i supposed to do that everything is fine right like how many requests do i get like i had no",
    "start": "154879",
    "end": "160319"
  },
  {
    "text": "dashboards like how many requests per second how many errors um and what about resources right like i",
    "start": "160319",
    "end": "167200"
  },
  {
    "text": "don't know if i have enough cpu or memory or actually if i had more if i provision more so",
    "start": "167200",
    "end": "173440"
  },
  {
    "text": "that's when i noticed that metrics are really important",
    "start": "173440",
    "end": "178080"
  },
  {
    "start": "177000",
    "end": "207000"
  },
  {
    "text": "so why do you need metrics right so we need metrics so that we can get",
    "start": "178640",
    "end": "184800"
  },
  {
    "text": "performance insights about our application so for example you can have your application",
    "start": "184800",
    "end": "190319"
  },
  {
    "text": "instrumented with different types of metrics like number of http requests duration of requests number of errors",
    "start": "190319",
    "end": "198879"
  },
  {
    "text": "and metrics help with making your application more resilient and gives you a better understanding of how your",
    "start": "198879",
    "end": "205120"
  },
  {
    "text": "application is performing so why metrics also because",
    "start": "205120",
    "end": "211360"
  },
  {
    "text": "you can answer questions like how much load your application get how many errors uh how slow is it right so you can",
    "start": "211360",
    "end": "219040"
  },
  {
    "text": "measure your latency what about resources is important to understand how much cpu and memory",
    "start": "219040",
    "end": "225360"
  },
  {
    "start": "221000",
    "end": "238000"
  },
  {
    "text": "application is consuming so as i mentioned before yeah you can see if you need to provide",
    "start": "225360",
    "end": "232239"
  },
  {
    "text": "more or less resources and configure your application properly",
    "start": "232239",
    "end": "238080"
  },
  {
    "start": "238000",
    "end": "284000"
  },
  {
    "text": "so how do you instrument how do you do this right i think um in the last talk",
    "start": "238640",
    "end": "244640"
  },
  {
    "text": "we also saw the importance of metrics and it was i think at the end this was also an example of how",
    "start": "244640",
    "end": "250640"
  },
  {
    "text": "you can set up your application but ideally you instrumental application with metrics you expose a slash metrics",
    "start": "250640",
    "end": "258000"
  },
  {
    "text": "http endpoint and then there use a client library that then will help with your code",
    "start": "258000",
    "end": "264320"
  },
  {
    "text": "instrumentation and once you have this endpoint with your metrics exposed",
    "start": "264320",
    "end": "270720"
  },
  {
    "text": "then um you have a server that then will scrape those metrics and",
    "start": "270720",
    "end": "276720"
  },
  {
    "text": "possibly could store them somewhere so for example you can use prometheus for that right",
    "start": "276720",
    "end": "284160"
  },
  {
    "start": "284000",
    "end": "391000"
  },
  {
    "text": "cool like we we saw matches are important but what all of this has to do with testing",
    "start": "284560",
    "end": "291919"
  },
  {
    "text": "yeah so jessica will test through like the typical use of metrics that we often think about and we understand that this",
    "start": "292160",
    "end": "297280"
  },
  {
    "text": "is what the promise of observability brings right as engineers we want to be able to infer information about the",
    "start": "297280",
    "end": "303199"
  },
  {
    "text": "internal state of our applications from the signals we receive and this is of course extremely valuable for our",
    "start": "303199",
    "end": "308400"
  },
  {
    "text": "day-to-day work as jessica was explaining when it comes to monitoring the state of our infrastructure debugging or tweaking performance of our",
    "start": "308400",
    "end": "314720"
  },
  {
    "text": "applications uh inherently all of these scenarios and use cases have one aspect in common uh we're talking about some sort of live",
    "start": "314720",
    "end": "321680"
  },
  {
    "text": "application right we're observing an existing system in motion whether we equate this to a sandbox environment or",
    "start": "321680",
    "end": "327919"
  },
  {
    "text": "the actual production deployment however when it comes to observability signals we should not be limiting ourselves only",
    "start": "327919",
    "end": "334240"
  },
  {
    "text": "to established systems although this is the primary use case that often stands at the forefront of",
    "start": "334240",
    "end": "339759"
  },
  {
    "text": "the discussions it is not the only one how about monitoring our applications before they're actually running in the",
    "start": "339759",
    "end": "345280"
  },
  {
    "text": "live system could it bring us benefits as well and as we'll propose in this talk it can",
    "start": "345280",
    "end": "350479"
  },
  {
    "text": "we don't often look at it this way but tests are sort of systems as well if we think about it running a test equates to",
    "start": "350479",
    "end": "355919"
  },
  {
    "text": "a creation of a system of components this can be like functions mock services or actual applications and subsequently",
    "start": "355919",
    "end": "362639"
  },
  {
    "text": "the system is evaluated and asserted against the set of conditions although these systems are only ephemeral it does",
    "start": "362639",
    "end": "368160"
  },
  {
    "text": "not preclude them from benefiting from observability patterns so the idea we put forward in our talk",
    "start": "368160",
    "end": "373680"
  },
  {
    "text": "is simple and powerful let's take what we're used to from running our systems and apply it in the context of",
    "start": "373680",
    "end": "379680"
  },
  {
    "text": "end-to-end testing we want to increase awareness of metrics as a part of the testing landscape and to show that as",
    "start": "379680",
    "end": "385520"
  },
  {
    "text": "engineers we can reap immense benefits from incorporating metrics into our testing strategies",
    "start": "385520",
    "end": "391039"
  },
  {
    "start": "391000",
    "end": "416000"
  },
  {
    "text": "and what is even better we already get this for free with instrumentation for our live systems right",
    "start": "391039",
    "end": "396319"
  },
  {
    "text": "three things are the best things in life we do not we do not need to put more upfront investment into our applications",
    "start": "396319",
    "end": "402479"
  },
  {
    "text": "no code changes are necessary if you already instrumented applications the testing patterns we'll talk about",
    "start": "402479",
    "end": "407759"
  },
  {
    "text": "today are automatically applicable so why not get more value in your testing experience for free",
    "start": "407759",
    "end": "413280"
  },
  {
    "text": "let's talk about this in more concrete terms having metrics makes it possible for us",
    "start": "413280",
    "end": "418960"
  },
  {
    "start": "416000",
    "end": "470000"
  },
  {
    "text": "to make more detailed test assertions think of a more typical end-to-end framework you spin up a couple of binaries or containers and then you",
    "start": "418960",
    "end": "425360"
  },
  {
    "text": "observe them and assert externally for example if you wrote your tests with a bash script you might base your",
    "start": "425360",
    "end": "430639"
  },
  {
    "text": "assertion on the application's exit code so exit code zero means success and other codes mean failure",
    "start": "430639",
    "end": "436400"
  },
  {
    "text": "however just asserting based on how applications are behaving from outside might not always be enough",
    "start": "436400",
    "end": "441599"
  },
  {
    "text": "sure the application exited successfully but can we be sure of all of our assumptions about how the application behaved during the test run",
    "start": "441599",
    "end": "448720"
  },
  {
    "text": "in contrast thanks to metrics we can externalize the internal internal behavior of the application",
    "start": "448720",
    "end": "454720"
  },
  {
    "text": "and assert on this externalized information instead of checking the exit code we can check for example whether we",
    "start": "454720",
    "end": "460240"
  },
  {
    "text": "always responded with http status code 200 whether we reached an expected number of responses or whether the",
    "start": "460240",
    "end": "466319"
  },
  {
    "text": "expected amount of data was processed and so on on top of that external data does not",
    "start": "466319",
    "end": "472560"
  },
  {
    "start": "470000",
    "end": "534000"
  },
  {
    "text": "only greatly improve our capability to assert we also gain better control over test scenarios thanks to metrics we can",
    "start": "472560",
    "end": "479280"
  },
  {
    "text": "check our preconditions more easily maybe our application for an issued on an event that will occur in some uncertain time in the future it is not",
    "start": "479280",
    "end": "486080"
  },
  {
    "text": "trivial to check such preconditions without knowing the internal state of the application if you have metrics this gets easier for",
    "start": "486080",
    "end": "492879"
  },
  {
    "text": "example before proceeding with testing we might have to wait on an application to be connected to a certain number of",
    "start": "492879",
    "end": "498160"
  },
  {
    "text": "replicas of another service if you have matrix telling us this value it's trivial to leverage this for our",
    "start": "498160",
    "end": "503360"
  },
  {
    "text": "precondition check this also allows us to fail fast if the precondition is not fulfilled or on the",
    "start": "503360",
    "end": "510000"
  },
  {
    "text": "other hand we don't have to fail fast but we can wait until the metric reaches a certain value before we continue with",
    "start": "510000",
    "end": "515440"
  },
  {
    "text": "our test or if after certain time limits the the limit has not been reached we can",
    "start": "515440",
    "end": "521200"
  },
  {
    "text": "just terminate the test at that point and even better for more advanced cases we can for example restart our",
    "start": "521200",
    "end": "527360"
  },
  {
    "text": "applications we can retry certain operations all together if our metrics are not still not showing the expected",
    "start": "527360",
    "end": "532880"
  },
  {
    "text": "values so when we start to piece all of these patterns together we can see that we can",
    "start": "532880",
    "end": "538320"
  },
  {
    "start": "534000",
    "end": "562000"
  },
  {
    "text": "create more complex scenarios easily and these do not have to be related only to internal state of a single application",
    "start": "538320",
    "end": "544560"
  },
  {
    "text": "but also to links between the applications based on observed metrics we can run one test with service started other tests",
    "start": "544560",
    "end": "551040"
  },
  {
    "text": "with a service stop and compare the results we can test how applications behave when a dependency goes offline",
    "start": "551040",
    "end": "557360"
  },
  {
    "text": "for example and then how it recovers when the dependency comes back online and lastly we benefit also from",
    "start": "557360",
    "end": "563680"
  },
  {
    "start": "562000",
    "end": "593000"
  },
  {
    "text": "collecting various extra data points about our tests that we are again getting for free in this case this can",
    "start": "563680",
    "end": "569360"
  },
  {
    "text": "be related to various metadata such as such as our applications version or we can gain insights into applications",
    "start": "569360",
    "end": "575600"
  },
  {
    "text": "performance characteristics since it's typical to collect for example data about about latency of our request these",
    "start": "575600",
    "end": "582800"
  },
  {
    "text": "metrics can give us some idea about the performance and here we're moving a bit into the benchmarking territory",
    "start": "582800",
    "end": "588959"
  },
  {
    "text": "about which we'll also talk in a bit later now before we move on to the practical",
    "start": "588959",
    "end": "594560"
  },
  {
    "start": "593000",
    "end": "711000"
  },
  {
    "text": "application jessica will talk us through some of the test types to which we can apply these patterns",
    "start": "594560",
    "end": "601040"
  },
  {
    "text": "cool so let's go now over different types of tests",
    "start": "601040",
    "end": "606160"
  },
  {
    "text": "like first i want to talk about the benchmark test this is a very useful test to test performance",
    "start": "606160",
    "end": "612480"
  },
  {
    "text": "so it's the focus of this type of test it helps you identify bottlenecks on your application",
    "start": "612480",
    "end": "618720"
  },
  {
    "text": "for example if you have any if you're introducing a new api to your architecture it can be useful to then",
    "start": "618720",
    "end": "626000"
  },
  {
    "text": "test how slow this new api is right so maybe you can create a benchmark for it and the way to do it is that in general",
    "start": "626000",
    "end": "632959"
  },
  {
    "text": "you have a function that is as executed multiple times and then for each time",
    "start": "632959",
    "end": "638800"
  },
  {
    "text": "you test if the output of this function is compared to a certain standard um",
    "start": "638800",
    "end": "644480"
  },
  {
    "text": "yeah and i think it's nice if you are using already gold link you have this from the testing package by default so",
    "start": "644480",
    "end": "651040"
  },
  {
    "text": "it's it helps you to like just easily create benchmarks but the idea",
    "start": "651040",
    "end": "656399"
  },
  {
    "text": "also is that you don't optimize prematurely right so it's not",
    "start": "656399",
    "end": "662079"
  },
  {
    "text": "nice if you try to run benchmarks for every piece of code you have like so it's something to just to keep in mind",
    "start": "662079",
    "end": "669519"
  },
  {
    "text": "um i think the other type of test this one i don't know if it's very well known at",
    "start": "669519",
    "end": "675360"
  },
  {
    "text": "least for me before it wasn't but this would be the interactive test so this",
    "start": "675360",
    "end": "680560"
  },
  {
    "text": "type of test the idea here is that you pause your application at a certain point",
    "start": "680560",
    "end": "685920"
  },
  {
    "text": "and then you kind of play with the scenario in progress so like if you have a lot of services",
    "start": "685920",
    "end": "691360"
  },
  {
    "text": "that's maybe a good idea to then see how those services interact together um",
    "start": "691360",
    "end": "696880"
  },
  {
    "text": "and today i think it will get more like we will understand better once we show a",
    "start": "696880",
    "end": "702399"
  },
  {
    "text": "practical application with it our demo would be also using exactly this kind of test so i think it it's a bit easier to",
    "start": "702399",
    "end": "709040"
  },
  {
    "text": "understand um cool so we saw benchmark test interactive test i think those other",
    "start": "709040",
    "end": "716560"
  },
  {
    "start": "711000",
    "end": "834000"
  },
  {
    "text": "type of tests they are also very well known which is the unit test integration test and entrance test but maybe let's",
    "start": "716560",
    "end": "722720"
  },
  {
    "text": "just refresh our minds a little bit so the unit test the idea is that you",
    "start": "722720",
    "end": "727839"
  },
  {
    "text": "test each unit of your application so like you in general you have a code base and you",
    "start": "727839",
    "end": "732959"
  },
  {
    "text": "have a lot of functions and then you can create one unit test for each",
    "start": "732959",
    "end": "738079"
  },
  {
    "text": "function of your application so it's really testing a unit it's also a less expensive type of type",
    "start": "738079",
    "end": "743519"
  },
  {
    "text": "of test so then that's why you can also have them a lot",
    "start": "743519",
    "end": "748959"
  },
  {
    "text": "right because also you have a lot of units probably you also have integration tests and the",
    "start": "748959",
    "end": "755120"
  },
  {
    "text": "integration test the idea is that you you test how those units work well together so let's say if you",
    "start": "755120",
    "end": "762000"
  },
  {
    "text": "have a function a and this function a has a function b as a dependency",
    "start": "762000",
    "end": "767120"
  },
  {
    "text": "would be very nice to understand if those two functions are working well together and that would be the integration test",
    "start": "767120",
    "end": "774720"
  },
  {
    "text": "the entry and test on the other hand this would be really like spinning up all the components of your application",
    "start": "774720",
    "end": "782160"
  },
  {
    "text": "so all of your containers so it's a more expensive type of test um",
    "start": "782160",
    "end": "787920"
  },
  {
    "text": "and i think also they don't ideally they won't happen very a lot so you won't",
    "start": "787920",
    "end": "793120"
  },
  {
    "text": "have a lot of entrant tests on your application because yeah like it's it's not not as the unit test for example",
    "start": "793120",
    "end": "801360"
  },
  {
    "text": "and again today we'll focus exactly on this type of test on the entrant and another thing i want to mention is also",
    "start": "801360",
    "end": "809040"
  },
  {
    "text": "that you can have so i mentioned the benchmark class the interactive test but you can also have",
    "start": "809040",
    "end": "814720"
  },
  {
    "text": "those tests combined with those three tests here so for example we can have an entrant test",
    "start": "814720",
    "end": "819920"
  },
  {
    "text": "that is interactive or you can have a unit test that is also benchmark and so on",
    "start": "819920",
    "end": "825600"
  },
  {
    "text": "and today yeah we see also an interactive test and also entrant tests so we see how those",
    "start": "825600",
    "end": "831360"
  },
  {
    "text": "how they can be combined together cool so let's then uh see how this can",
    "start": "831360",
    "end": "837680"
  },
  {
    "text": "be applied in practice then i will hand over to matthew yeah so let's move on to the practical",
    "start": "837680",
    "end": "843040"
  },
  {
    "text": "part we introduced the concept of using metrics in end-to-end testing in a theoretical manner but let's see how the",
    "start": "843040",
    "end": "848560"
  },
  {
    "text": "how these ideas are put to practice what we want to show is that these concepts are universal and can be applied within any",
    "start": "848560",
    "end": "854880"
  },
  {
    "text": "programming or scripting language but the concrete implementation we'll be looking at is the end-to-end testing framework written in go",
    "start": "854880",
    "end": "862079"
  },
  {
    "start": "861000",
    "end": "995000"
  },
  {
    "text": "so this is a framework which is hosted under the umbrella of the efficient go project which is a collection of utilities utilities and tools that are",
    "start": "862079",
    "end": "868720"
  },
  {
    "text": "readily available for use by any go project and the end-to-end framework specifically is intended to run complex",
    "start": "868720",
    "end": "875120"
  },
  {
    "text": "workload scenarios in isolation with help of go and docker the code of the framework was originally",
    "start": "875120",
    "end": "880160"
  },
  {
    "text": "developed with the cortex project and later was donated adjusted and moving to a separate module mainly by our",
    "start": "880160",
    "end": "885839"
  },
  {
    "text": "colleague martik potka we must have seen some talks from him because he had like 10 talks at the",
    "start": "885839",
    "end": "891519"
  },
  {
    "text": "kubecon so he's very famous so the framework has few like defining",
    "start": "891519",
    "end": "898800"
  },
  {
    "text": "features that that are interesting for us it focuses on testing cluster workloads uh so meaning primarily cloud",
    "start": "898800",
    "end": "905120"
  },
  {
    "text": "native microservices while keeping in mind test scenario readability the scenarios are run in the containers",
    "start": "905120",
    "end": "910639"
  },
  {
    "text": "environment with help of docker naturally the framework also focuses on uh on putting metrics front and center",
    "start": "910639",
    "end": "916959"
  },
  {
    "text": "which is the feature most relevant for our for our talk today not only does the framework support",
    "start": "916959",
    "end": "922000"
  },
  {
    "text": "asserting and controlling the scenario test scenario flows via metrics it also provides self-monitoring out of the box",
    "start": "922000",
    "end": "928320"
  },
  {
    "text": "by leveraging the c advisory utility you can monitor the test containers directly and gain even more control and insights",
    "start": "928320",
    "end": "934000"
  },
  {
    "text": "over your test scenarios lastly it also supports on-the-fly containerization of your code so if",
    "start": "934000",
    "end": "939040"
  },
  {
    "text": "you're not running a fully fledged application just a piece of code you can containerize it and run it directly",
    "start": "939040",
    "end": "944079"
  },
  {
    "text": "through the framework and although we refer to this project as an end-to-end framework there are actually multiple usage modes beyond",
    "start": "944079",
    "end": "950079"
  },
  {
    "text": "plain end-to-end testing as jessica has introduced some of these other types of tests the frame the framework can be",
    "start": "950079",
    "end": "955759"
  },
  {
    "text": "employed to facilitate this as well the framework enables users to benchmark with the native go benchmarking package",
    "start": "955759",
    "end": "962800"
  },
  {
    "text": "while incorporating external dependencies or you could use it for macro benchmarking as it allows for running testing scenarios repeatedly and",
    "start": "962800",
    "end": "969600"
  },
  {
    "text": "tasks users can observe behavior and performance of their applications from a macro perspective last mode is the one that jessica",
    "start": "969600",
    "end": "975920"
  },
  {
    "text": "referred to as interactive setup so this means that you can manually interact with the application and monitor them",
    "start": "975920",
    "end": "981680"
  },
  {
    "text": "and this is also very useful for engaging new users because you can quickly spin up the whole setup just with one one command and it's all",
    "start": "981680",
    "end": "988160"
  },
  {
    "text": "running on your local machine and you can uh you can also you can also monitor it",
    "start": "988160",
    "end": "993360"
  },
  {
    "text": "right let's look at some real world usages uh we will talk about two projects that me",
    "start": "993360",
    "end": "998959"
  },
  {
    "text": "and jessica are both involved with uh that is tunnels and observatorium so tunnels if you're not familiar with",
    "start": "998959",
    "end": "1004399"
  },
  {
    "text": "thanos it's a cncf incubating project for highly available prometheus setup and long-term metric storage",
    "start": "1004399",
    "end": "1010560"
  },
  {
    "text": "uh you could have seen us at the boot here at the kubecon as well and we've been using the end-to-end",
    "start": "1010560",
    "end": "1015680"
  },
  {
    "text": "framework here to build and run this scenarios for all of our components because tennos is actually a number of",
    "start": "1015680",
    "end": "1021519"
  },
  {
    "text": "loosely coupled components and they need to communicate together the end-to-end framework is perfect for satisfying such",
    "start": "1021519",
    "end": "1027199"
  },
  {
    "text": "complex scenarios with a large number of components so it's not always true to ensure that the tests run successfully because",
    "start": "1027199",
    "end": "1034240"
  },
  {
    "text": "normally the components are long-running services it heavily relies on asserting on metrics as well as metric driven test",
    "start": "1034240",
    "end": "1041038"
  },
  {
    "text": "run control thanos project features a full-fledged interactive setup as well so this",
    "start": "1041039",
    "end": "1046240"
  },
  {
    "text": "includes everything from synthesizing data for users to play with to spinning up all necessary components with",
    "start": "1046240",
    "end": "1051280"
  },
  {
    "text": "monitoring and tracing in place as well second project that we will mention today and uh where we mean just as we",
    "start": "1051280",
    "end": "1058640"
  },
  {
    "text": "said our maintainer is the observatorium just uh tldr and observatory it is a one-stop shop for all observability",
    "start": "1058640",
    "end": "1065120"
  },
  {
    "text": "signals it is a collection of tools which makes it possible to easily run a whole observability stack with some",
    "start": "1065120",
    "end": "1070720"
  },
  {
    "text": "additional functions on top such as multi-tenancy authentication authorization rate limiting and so on so",
    "start": "1070720",
    "end": "1076799"
  },
  {
    "text": "feel free to check out the project if you're interested and here as well we have been using the end-to-end framework",
    "start": "1076799",
    "end": "1082720"
  },
  {
    "text": "to a great success uh mainly with our core component which is called observatorium api",
    "start": "1082720",
    "end": "1088480"
  },
  {
    "text": "and we use the end-to-end framework to create uh complex test scenarios across all different signals that we support",
    "start": "1088480",
    "end": "1093919"
  },
  {
    "text": "metrics traces and locks because this requires spinning up multiple uh dependencies right because",
    "start": "1093919",
    "end": "1099760"
  },
  {
    "text": "we are providing authentication so we need the authentication we need to connect to authentication provider because we for example can use uh open",
    "start": "1099760",
    "end": "1107039"
  },
  {
    "text": "policy agent for authorization so this is another dependency we're also depending on external service for for",
    "start": "1107039",
    "end": "1112720"
  },
  {
    "text": "raid limiting uh that we need to communicate with and last but not least we also need to",
    "start": "1112720",
    "end": "1117919"
  },
  {
    "text": "back this up by an object storage for which we use menio and we again just run this locally through throughout this uh through this",
    "start": "1117919",
    "end": "1125280"
  },
  {
    "text": "through the framework so having said that now let's look at the demonstration of all of the",
    "start": "1125280",
    "end": "1132720"
  },
  {
    "start": "1127000",
    "end": "1155000"
  },
  {
    "text": "features that we set and for this we'll use a more simpler example than than uh the ones in the",
    "start": "1132720",
    "end": "1139120"
  },
  {
    "text": "real world and this will be just like just to demonstrate and see how this is how this works in the code and then how",
    "start": "1139120",
    "end": "1145919"
  },
  {
    "text": "the actual tests uh are run so as jessica's mentioning we will see an interactive test",
    "start": "1145919",
    "end": "1151280"
  },
  {
    "text": "i'll just quickly switch this to mirroring so that everyone can see what i'm doing on my screen",
    "start": "1151280",
    "end": "1158960"
  },
  {
    "text": "or not",
    "start": "1163360",
    "end": "1165840"
  },
  {
    "text": "okay let me try one more time",
    "start": "1175440",
    "end": "1179840"
  },
  {
    "text": "okay let me try a couple more i'm not sure",
    "start": "1187280",
    "end": "1192559"
  },
  {
    "text": "now it's not reverting back",
    "start": "1192559",
    "end": "1195840"
  },
  {
    "text": "oh it's like that with demos okay sorry folks oh there's something",
    "start": "1198559",
    "end": "1204000"
  },
  {
    "text": "there did it work let me try to reconnect sorry about that",
    "start": "1204000",
    "end": "1209960"
  },
  {
    "text": "yeah you can just like put that",
    "start": "1225600",
    "end": "1230840"
  },
  {
    "text": "okay sorry about that i'm not i'm not sure if you're gonna be",
    "start": "1237520",
    "end": "1242158"
  },
  {
    "text": "okay now it's completely if i try again",
    "start": "1243039",
    "end": "1248559"
  },
  {
    "text": "okay let's one let's try",
    "start": "1248559",
    "end": "1252080"
  },
  {
    "text": "it's not reacting at all",
    "start": "1254799",
    "end": "1258760"
  },
  {
    "text": "yeah so now it's not connecting anymore smile my home like i don't know if it's",
    "start": "1273120",
    "end": "1278720"
  },
  {
    "text": "the cable or anything i don't know much about",
    "start": "1278720",
    "end": "1283120"
  },
  {
    "text": "can you try yours yeah let's",
    "start": "1286480",
    "end": "1291039"
  },
  {
    "text": "no it's the whole screen screenness wait",
    "start": "1302159",
    "end": "1307600"
  },
  {
    "text": "something's happening okay now i have three screens cool",
    "start": "1307600",
    "end": "1312880"
  },
  {
    "text": "oh it's uh okay thank you",
    "start": "1312880",
    "end": "1318440"
  },
  {
    "text": "it's still not now i have three screens",
    "start": "1322320",
    "end": "1328480"
  },
  {
    "text": "sorry about that",
    "start": "1328480",
    "end": "1331960"
  },
  {
    "text": "oh yeah that's it it doesn't want to mirror right now it's just everything is a bit messed",
    "start": "1341360",
    "end": "1347520"
  },
  {
    "text": "up",
    "start": "1347520",
    "end": "1350520"
  },
  {
    "text": "not true now my display is not there",
    "start": "1364400",
    "end": "1372279"
  },
  {
    "text": "it's not recognizing my screen i think actually tried that",
    "start": "1383520",
    "end": "1389360"
  },
  {
    "text": "sorry about that",
    "start": "1389360",
    "end": "1392080"
  },
  {
    "text": "yeah in case it's not working there's there will be also video in the presentation so you can watch it for yourself and there will also link to the",
    "start": "1394720",
    "end": "1402400"
  },
  {
    "text": "to the example test because it's it's part of our uh repository",
    "start": "1402400",
    "end": "1407679"
  },
  {
    "text": "so uh yeah hopefully if you're not able to make it work then you can still see the results",
    "start": "1407679",
    "end": "1413919"
  },
  {
    "text": "but yeah sorry about that",
    "start": "1413919",
    "end": "1417799"
  },
  {
    "text": "which one is it",
    "start": "1420720",
    "end": "1423600"
  },
  {
    "text": "hdmi actually",
    "start": "1427760",
    "end": "1431640"
  },
  {
    "text": "yes you could see it okay i can try mirroring",
    "start": "1442080",
    "end": "1447840"
  },
  {
    "text": "yes nice oh good [Applause] can i say let me just check",
    "start": "1448640",
    "end": "1457400"
  },
  {
    "text": "[Music] okay awesome",
    "start": "1457400",
    "end": "1462960"
  },
  {
    "start": "1462000",
    "end": "1658000"
  },
  {
    "text": "i can so i can try to i don't think we have that much time but yeah so as you can see just this is like",
    "start": "1462960",
    "end": "1468080"
  },
  {
    "text": "a plain uh go test is it's a go test file we're using the native testing uh",
    "start": "1468080",
    "end": "1474559"
  },
  {
    "text": "package as you can see we're simply starting by setting up the docker environment and um then we have another method to",
    "start": "1474559",
    "end": "1482799"
  },
  {
    "text": "uh to start our application we're actually using uh example app which is a which is a simple",
    "start": "1482799",
    "end": "1489440"
  },
  {
    "text": "which is a simple http server that is instrumented for metrics and we'll we'll be just observing uh the",
    "start": "1489440",
    "end": "1495520"
  },
  {
    "text": "request these are coming in and checking the metrics on that so doing some additional things making",
    "start": "1495520",
    "end": "1500880"
  },
  {
    "text": "sure that we can uh we can access the service on our host machine",
    "start": "1500880",
    "end": "1506000"
  },
  {
    "text": "so we're exposing the port we're providing the image for the for the",
    "start": "1506000",
    "end": "1511760"
  },
  {
    "text": "service that we want to use in the start options and the init and then we'll go we're starting and",
    "start": "1511760",
    "end": "1517360"
  },
  {
    "text": "waiting for the search to be ready right second thing that we will spin up uh is the",
    "start": "1517360",
    "end": "1523600"
  },
  {
    "text": "wait sorry it's okay second thing we'll spin up is the it's prometheus here you can see a simple",
    "start": "1523600",
    "end": "1530400"
  },
  {
    "text": "uh simple conflict for scraping we're providing the endpoint from from the app",
    "start": "1530400",
    "end": "1536000"
  },
  {
    "text": "we previously set up uh for for for scraping so we'll see the metrics in prometheus again we're",
    "start": "1536000",
    "end": "1542080"
  },
  {
    "text": "starting prometheus setting the conflict waiting until it's ready and then what we actually do is here we will see a",
    "start": "1542080",
    "end": "1547840"
  },
  {
    "text": "pause in the test and this is intentional so we will be waiting until prometheus is scraped",
    "start": "1547840",
    "end": "1554400"
  },
  {
    "text": "until primitives until prometheus creates something and we will do this based on the metric",
    "start": "1554400",
    "end": "1560080"
  },
  {
    "text": "which which uh checks how many head samples have been appended we'll wait until this is greater than 50 and this",
    "start": "1560080",
    "end": "1566000"
  },
  {
    "text": "shows how you can leverage this to use for checking preconditions right so before we move on we want to be sure",
    "start": "1566000",
    "end": "1571039"
  },
  {
    "text": "that we already have some data in there we'll also then open the example application in our browser which is",
    "start": "1571039",
    "end": "1576960"
  },
  {
    "text": "another nice feature of the framework we have this antoine interactive package which makes it possible to also directly",
    "start": "1576960",
    "end": "1582720"
  },
  {
    "text": "open the service or the or the the ui that you might have like a web web ui",
    "start": "1582720",
    "end": "1588480"
  },
  {
    "text": "directly in the in the browser so that will automatically pop up for the user once it's ready",
    "start": "1588480",
    "end": "1593840"
  },
  {
    "text": "and what you'll actually want to do here which is the interactive part that we want to show is that we will wait unless",
    "start": "1593840",
    "end": "1599120"
  },
  {
    "text": "uh for at least five requests right so the test will not move on until uh jessica",
    "start": "1599120",
    "end": "1604559"
  },
  {
    "text": "has made five requests on on the in the browser on that example app we do this based on the http request total metric",
    "start": "1604559",
    "end": "1611919"
  },
  {
    "text": "we're not constantly hitting the application we do this with a back-off so each time the condition is not",
    "start": "1611919",
    "end": "1618480"
  },
  {
    "text": "fulfilled we back off and we try again and we'll also wait on missing on the missing metric so this option ensures if",
    "start": "1618480",
    "end": "1625279"
  },
  {
    "text": "the metric is not there from beginning that we um did we wait until the metric",
    "start": "1625279",
    "end": "1630400"
  },
  {
    "text": "appears right second thing that will also open up",
    "start": "1630400",
    "end": "1635600"
  },
  {
    "text": "prometheus see what has been scraped actually which matrix we have there to gain some extra insights into our test",
    "start": "1635600",
    "end": "1641760"
  },
  {
    "text": "run and that's it then we're done we're finished we can close the test and now jessica will walk us through the",
    "start": "1641760",
    "end": "1648480"
  },
  {
    "text": "cool so since we don't have it set up on this",
    "start": "1648480",
    "end": "1653919"
  },
  {
    "text": "computer maybe we can we can either show the video or no but it's fine you can try here cool",
    "start": "1653919",
    "end": "1661279"
  },
  {
    "start": "1658000",
    "end": "1951000"
  },
  {
    "text": "so just a bit hard for me to see but like now we run this entrance right like we",
    "start": "1661279",
    "end": "1667360"
  },
  {
    "text": "created so let me just get into the right folder",
    "start": "1667360",
    "end": "1673679"
  },
  {
    "text": "cool so now we will read we run our make target",
    "start": "1677600",
    "end": "1683840"
  },
  {
    "text": "so it's just my command so that we can then run the test",
    "start": "1686480",
    "end": "1693880"
  },
  {
    "text": "cool so now we see already like some logs uh the example app is started it's",
    "start": "1698240",
    "end": "1703919"
  },
  {
    "text": "exposed in the port 8080 that then it's mapped to this another random part then we see already prometheus being started",
    "start": "1703919",
    "end": "1710960"
  },
  {
    "text": "we see some logs now we see that we are waiting right because we want to make sure that prometheus prometheus already",
    "start": "1710960",
    "end": "1717520"
  },
  {
    "text": "scraped something like on my screen i already see the browser uh so it's just open",
    "start": "1717520",
    "end": "1723360"
  },
  {
    "text": "after prometheus scraped some metrics then we open in a browser",
    "start": "1723360",
    "end": "1728559"
  },
  {
    "text": "and then now we are waiting for the five requests so i'll try to then",
    "start": "1728559",
    "end": "1734880"
  },
  {
    "text": "move my browser here so you can also see",
    "start": "1735200",
    "end": "1739840"
  },
  {
    "text": "so that's that's our example application very simple just prints hello from example application",
    "start": "1740960",
    "end": "1747039"
  },
  {
    "text": "uh and then is exposing some metrics now we try to do some requests so i'm",
    "start": "1747039",
    "end": "1753760"
  },
  {
    "text": "manually refreshing the page now",
    "start": "1753760",
    "end": "1757679"
  },
  {
    "text": "and then now prometheus is open right so i already reached more than five",
    "start": "1758960",
    "end": "1764360"
  },
  {
    "text": "requests uh let's maybe check like the metric right see if we",
    "start": "1764360",
    "end": "1770320"
  },
  {
    "text": "if we get something",
    "start": "1770320",
    "end": "1773360"
  },
  {
    "text": "cool so here you see the time series the metric name is http request total",
    "start": "1777039",
    "end": "1782559"
  },
  {
    "text": "all of the requests were 200 that's a counter metric right so we had of like 12 requests more or less",
    "start": "1782559",
    "end": "1789520"
  },
  {
    "text": "and and then all of them were get requests you can also check the graph",
    "start": "1789520",
    "end": "1796720"
  },
  {
    "text": "like if i change this to five minutes so you have a better view here you see the peak of the request",
    "start": "1796720",
    "end": "1802960"
  },
  {
    "text": "coming in can also check the rate of those requests",
    "start": "1802960",
    "end": "1809120"
  },
  {
    "text": "like per second",
    "start": "1809120",
    "end": "1812080"
  },
  {
    "text": "so i can check like for the last five minutes",
    "start": "1814320",
    "end": "1818720"
  },
  {
    "text": "like you see that it was like about 0.03 requests so like not so much",
    "start": "1820080",
    "end": "1826720"
  },
  {
    "text": "um another thing i wanted to show also i think which you have time um is this lash metrics endpoint so this is",
    "start": "1826720",
    "end": "1833679"
  },
  {
    "text": "the end point that our prometheus is scraping",
    "start": "1833679",
    "end": "1838960"
  },
  {
    "text": "and then here we have all the metrics that are exposed so here you can also see the counter metric that we were",
    "start": "1838960",
    "end": "1845279"
  },
  {
    "text": "requiring the http request total and also all the metrics",
    "start": "1845279",
    "end": "1850559"
  },
  {
    "text": "um and as a last thing i also want to show how so",
    "start": "1850559",
    "end": "1856559"
  },
  {
    "text": "this so as we we mentioned this is the is an interactive test right so that's",
    "start": "1856559",
    "end": "1861760"
  },
  {
    "text": "why it's paused but then if you hit this end point this address",
    "start": "1861760",
    "end": "1868799"
  },
  {
    "text": "then the test will be finished",
    "start": "1868799",
    "end": "1874960"
  },
  {
    "text": "i don't know why now i cannot do that but i can also maybe",
    "start": "1876080",
    "end": "1882320"
  },
  {
    "text": "yeah okay so now i hit the address",
    "start": "1882640",
    "end": "1888559"
  },
  {
    "text": "then if i come back to the test i see that the test also finished so",
    "start": "1888559",
    "end": "1893840"
  },
  {
    "text": "like if yeah if you want to automatize this you can maybe like set up something that calls this address",
    "start": "1893840",
    "end": "1899519"
  },
  {
    "text": "automatically and then the test finishes um",
    "start": "1899519",
    "end": "1904799"
  },
  {
    "text": "yeah i think with that we saw how to set up engine tests using the engine test the engine",
    "start": "1904799",
    "end": "1910960"
  },
  {
    "text": "framework like how can we easily spin up prometheus instances you can",
    "start": "1910960",
    "end": "1916320"
  },
  {
    "text": "also spin up thunders and then with that we had an example application that was exposing some",
    "start": "1916320",
    "end": "1922480"
  },
  {
    "text": "metrics and in our tests we could assert all of those things right",
    "start": "1922480",
    "end": "1928559"
  },
  {
    "text": "i also wanted to yeah like i don't have this light here but you can also check online like we",
    "start": "1928559",
    "end": "1934559"
  },
  {
    "text": "uploaded the slides uh so we left the links for all of those resources for the entrant framework and also yeah for the",
    "start": "1934559",
    "end": "1941760"
  },
  {
    "text": "observatory project and also the thermos project but yeah thank you so much",
    "start": "1941760",
    "end": "1947039"
  },
  {
    "text": "thank you",
    "start": "1947039",
    "end": "1949840"
  }
]