[
  {
    "start": "0",
    "end": "29000"
  },
  {
    "text": "hi I'm Alexis Richardson this is my colleague Stefan proton from we've works",
    "start": "30",
    "end": "5450"
  },
  {
    "text": "we're going to talk about flux this is our special CN CF allocated slot for",
    "start": "5450",
    "end": "11910"
  },
  {
    "text": "every CN CF project sandbox or otherwise there's a couple of slots to talk about the project this is supposed to be an",
    "start": "11910",
    "end": "17970"
  },
  {
    "text": "introductory session so if you have heard all of this before I apologize Stefan is doing a deep dive later on",
    "start": "17970",
    "end": "25560"
  },
  {
    "text": "this week the world tomorrow for people who want to get really hands-on I'm",
    "start": "25560",
    "end": "32610"
  },
  {
    "start": "29000",
    "end": "29000"
  },
  {
    "text": "gonna introduce him and talk a little bit about the history of the project and some interesting news which is shown at",
    "start": "32610",
    "end": "39570"
  },
  {
    "text": "the top here let's get them out the way first who hears heard of our go CD and",
    "start": "39570",
    "end": "45980"
  },
  {
    "text": "who has heard of flux right the answer from now on should be the same because",
    "start": "45980",
    "end": "52020"
  },
  {
    "text": "these projects are merging into one which is something that happens very rarely in open source that you take two",
    "start": "52020",
    "end": "59629"
  },
  {
    "text": "successful projects which have thousands of users and bring them together into a",
    "start": "59629",
    "end": "65338"
  },
  {
    "text": "single thing it's like I said a planetary conjunction we should expect unusual things to be happening that we",
    "start": "65339",
    "end": "70710"
  },
  {
    "text": "see in the fields but it's great because what's happened here is it's an example",
    "start": "70710",
    "end": "77220"
  },
  {
    "text": "of parallel evolution I don't know if you know the story of the octopus eye but the octopus eyes very similar to the",
    "start": "77220",
    "end": "83790"
  },
  {
    "text": "human eye it's a ball it works by light coming in and getting",
    "start": "83790",
    "end": "90259"
  },
  {
    "text": "reflected into the back of the eye where it gets processed and this is something",
    "start": "90259",
    "end": "96150"
  },
  {
    "text": "that was great its revolution and it's",
    "start": "96150",
    "end": "105540"
  },
  {
    "text": "remarkable how similar the physical properties of that of the eye designs are they've grown in two completely",
    "start": "105540",
    "end": "111570"
  },
  {
    "text": "different environmental niches fulfilling apparently similar needs similar design we've works started our",
    "start": "111570",
    "end": "122070"
  },
  {
    "text": "business wanting to help developers create applications using containers we",
    "start": "122070",
    "end": "128399"
  },
  {
    "text": "thought this would be a big deal about five years ago when we found that the company was the week of something called kubernetes",
    "start": "128399",
    "end": "134490"
  },
  {
    "text": "being founded I being a skeptical person thought that kubernetes would never take",
    "start": "134490",
    "end": "140610"
  },
  {
    "text": "off because it had a very silly name luckily I was wrong",
    "start": "140610",
    "end": "146550"
  },
  {
    "text": "it wasn't long before we were building a SAS product as part of our marketing",
    "start": "146550",
    "end": "152220"
  },
  {
    "text": "strategy to reach out to developers and help them build these applications in Ursus our product we had to run it on",
    "start": "152220",
    "end": "158520"
  },
  {
    "text": "something and we wrote our own scheduler first kept blowing up and we ended up",
    "start": "158520",
    "end": "164010"
  },
  {
    "text": "spending more time writing the schedule whether we were writing the app that people were supposed to be using and buying and so somebody said well let's",
    "start": "164010",
    "end": "171210"
  },
  {
    "text": "get an off-the-shelf one and we look to mesosphere and nobody could understand that we looked at her and we tried to",
    "start": "171210",
    "end": "177630"
  },
  {
    "text": "put patches into dr. swarm but they were pushed back by the docker team we talked to how she Cooper bat nomads and they",
    "start": "177630",
    "end": "183420"
  },
  {
    "text": "said don't use nomads that was version 0.2 so by process of elimination we",
    "start": "183420",
    "end": "189060"
  },
  {
    "text": "found Cuba Nettie's which meant that we had to become people who run kubernetes now I don't know if you are in in the",
    "start": "189060",
    "end": "197190"
  },
  {
    "text": "audience if you have people who run Cuban areas but it's a lot easy to do you have to do a lot of stuff like you have to figure out how to monitor it how",
    "start": "197190",
    "end": "202860"
  },
  {
    "text": "to deploy it how to put apps onto it had a monitor those apps and if things blow up how to get how to get it back up",
    "start": "202860",
    "end": "209610"
  },
  {
    "text": "again and being a business person I kind of ignored all of this complexity until",
    "start": "209610",
    "end": "215100"
  },
  {
    "text": "one day are sitting in the office and it was sunny outside and were birds tweeting and somebody said voice across",
    "start": "215100",
    "end": "220560"
  },
  {
    "text": "the room said if I press this button I will probably wipe out all of our",
    "start": "220560",
    "end": "226590"
  },
  {
    "text": "clusters in production at which point we go into the sort of slow motion I'm",
    "start": "226590",
    "end": "231720"
  },
  {
    "text": "standing up saying no like in the matrix and then I hit click followed by a",
    "start": "231720",
    "end": "236820"
  },
  {
    "text": "English swear word and that all the clusters are blown up and the team go into disaster mode and bring everything",
    "start": "236820",
    "end": "244080"
  },
  {
    "text": "back up again in about 40 minutes everything including dashboards apps clusters connections to databases",
    "start": "244080",
    "end": "249590"
  },
  {
    "text": "different zones different stages and afterwards I thought well that was pretty quick not bad forty minutes a 45",
    "start": "249590",
    "end": "258239"
  },
  {
    "text": "minutes now we're doing this in just a few minutes because we got better at it but I asked them what did you do to make",
    "start": "258239",
    "end": "264630"
  },
  {
    "text": "that possible but they said we can build a crack cluster for an entire application at",
    "start": "264630",
    "end": "271410"
  },
  {
    "text": "will because we have a complete description of everything we're running stored and get and we can use that to",
    "start": "271410",
    "end": "277440"
  },
  {
    "text": "instruct the system how to build itself it was that sounds really clever so we",
    "start": "277440",
    "end": "283770"
  },
  {
    "text": "started calling this gift ops because it was operations driven by a description in get and ink adopts one of the things",
    "start": "283770",
    "end": "290729"
  },
  {
    "text": "that you do is you deploy apps the clusters not by sitting outside running",
    "start": "290729",
    "end": "295740"
  },
  {
    "text": "cube control or a bunch of scripts or Jenkins or spinnaker or other things",
    "start": "295740",
    "end": "300840"
  },
  {
    "text": "that sit outside the cluster instead you give the cluster a set of instructions",
    "start": "300840",
    "end": "306569"
  },
  {
    "text": "and it runs agents inside itself that go AHA my cluster is in the wrong state I",
    "start": "306569",
    "end": "315180"
  },
  {
    "text": "need to update myself and it updates itself and so that is how we deploy apps",
    "start": "315180",
    "end": "321539"
  },
  {
    "text": "in clusters that we've works we let kubernetes do all of the management of deployment of apps and services in",
    "start": "321539",
    "end": "329430"
  },
  {
    "text": "clusters which of course means there is a bootstrapping question which we'll talk about another day now I mentioned",
    "start": "329430",
    "end": "334919"
  },
  {
    "text": "the octopus I into it wanted to have",
    "start": "334919",
    "end": "340199"
  },
  {
    "text": "kubernetes to power their incredibly large business and they work with a team from a company called Apple Attucks a",
    "start": "340199",
    "end": "345960"
  },
  {
    "text": "great team that they have ended up acquiring Apple attics and they said please build a secure Bonetti space infrastructure for everything so if they",
    "start": "345960",
    "end": "352650"
  },
  {
    "text": "went and they too had to install clusters install apps manage apps change",
    "start": "352650",
    "end": "358319"
  },
  {
    "text": "apps same as us and they came up with the same bloody design so now we have",
    "start": "358319",
    "end": "363479"
  },
  {
    "text": "two projects doing the same thing independently so we thought this is a",
    "start": "363479",
    "end": "369240"
  },
  {
    "text": "silly situation because this is open-source we're supposed to collaborate we collaborate and since",
    "start": "369240",
    "end": "377279"
  },
  {
    "text": "we're not trying to do things like hold features back from you to force you to buy Enterprise flux it's all it's all",
    "start": "377279",
    "end": "384150"
  },
  {
    "text": "out there everything that you can see what you see is what you get we have other products for enterprise stuff like policy and governance we've had a strong",
    "start": "384150",
    "end": "391529"
  },
  {
    "text": "incentive to team up with Intuit it took a while to convince each other we can work together but I'm really happy to say and thank",
    "start": "391529",
    "end": "397660"
  },
  {
    "text": "thanks mainly to the actual engineers who do the actual work not to people like me the team's agreed to work",
    "start": "397660",
    "end": "403840"
  },
  {
    "text": "together and started to collaborate and now have built the first step of this which is what we call give up sin Jade",
    "start": "403840",
    "end": "409210"
  },
  {
    "text": "which will become the back end of a new agro flux and there'll be agro flagger",
    "start": "409210",
    "end": "414580"
  },
  {
    "text": "which is a Stephane thing that does progressive delivery and Argo workflows I'll go you eyes are goin't and",
    "start": "414580",
    "end": "420970"
  },
  {
    "text": "everybody will have one beautiful tool chain for doing deployment application",
    "start": "420970",
    "end": "426160"
  },
  {
    "text": "delivery and all these other good things which i think is a wonderful thing and i think the engineers who did that deserve",
    "start": "426160",
    "end": "431200"
  },
  {
    "text": "a round of applause please [Applause]",
    "start": "431200",
    "end": "437340"
  },
  {
    "text": "okay so it mentions here AWS are also to be thanked for this I",
    "start": "437340",
    "end": "443380"
  },
  {
    "text": "hope there'll be other large companies soon maybe um Stefan is gonna tell you a",
    "start": "443380",
    "end": "449680"
  },
  {
    "text": "bit about flux in an introductory manner yeah is that good she would you wanna take over yeah you know when I say my",
    "start": "449680",
    "end": "456370"
  },
  {
    "text": "water thank you very much I would Hugh stuff okay so this is my",
    "start": "456370",
    "end": "466870"
  },
  {
    "start": "465000",
    "end": "465000"
  },
  {
    "text": "favorite slide on Kito's that I I think is it's very simple to explain what flux",
    "start": "466870",
    "end": "473050"
  },
  {
    "text": "does because flux is a simple tool flux is not complex tool it doesn't try to do",
    "start": "473050",
    "end": "478360"
  },
  {
    "text": "many many things what it tries to do is replace all these CLI to link with",
    "start": "478360",
    "end": "484930"
  },
  {
    "text": "another CLI much known that any other",
    "start": "484930",
    "end": "490120"
  },
  {
    "text": "Scylla is out there which is good right so instead of applying changing the",
    "start": "490120",
    "end": "495970"
  },
  {
    "text": "state of your cluster with different tools with cube cotta with helm with",
    "start": "495970",
    "end": "501160"
  },
  {
    "text": "customize and yeah maybe some scripts that trap those don't see allies we want",
    "start": "501160",
    "end": "508960"
  },
  {
    "text": "to replace all of that with single command which is good which modify something you push it to a git",
    "start": "508960",
    "end": "514950"
  },
  {
    "text": "repository and from there that something ends up on the cluster and it can be",
    "start": "514950",
    "end": "523599"
  },
  {
    "text": "anything flux is not open ated flux doesn't look at what have you put in your",
    "start": "523599",
    "end": "531270"
  },
  {
    "text": "git repo that defines the cluster it can be a custom resource definition can be a name space can be a role it can be",
    "start": "531270",
    "end": "539230"
  },
  {
    "text": "anything that kubernetes itself support and flux doesn't do a validation of",
    "start": "539230",
    "end": "545080"
  },
  {
    "text": "what's there of course when it applies it if it doesn't work then it will tell",
    "start": "545080",
    "end": "550690"
  },
  {
    "text": "you so it works great with OPA and other projects in the space and why we should",
    "start": "550690",
    "end": "561400"
  },
  {
    "text": "use this kind of approach to infrastructure one of one of many",
    "start": "561400",
    "end": "566710"
  },
  {
    "text": "advantages is the fact that if he is good you have this nice history of any",
    "start": "566710",
    "end": "573040"
  },
  {
    "text": "change that happened on your cluster so you can do git history and you can see",
    "start": "573040",
    "end": "579250"
  },
  {
    "text": "who did what on the production cluster you can engage your team in approving",
    "start": "579250",
    "end": "585610"
  },
  {
    "text": "changes like if we are running all kinds of CLS and everybody is doing from some",
    "start": "585610",
    "end": "592210"
  },
  {
    "text": "computer then we have no idea what exactly change in the cluster so basically we need to you know have a",
    "start": "592210",
    "end": "599440"
  },
  {
    "text": "very solid logging solution around kubernetes subscribe to all the events",
    "start": "599440",
    "end": "604590"
  },
  {
    "text": "and it's very hard to reproduce the state like if you lose the cluster how",
    "start": "604590",
    "end": "610150"
  },
  {
    "text": "can you reproduce everything that was there of course there are tools like Valero and others that can snapshot the",
    "start": "610150",
    "end": "617350"
  },
  {
    "text": "TCP you can restore that state somehow we think github solves this problem",
    "start": "617350",
    "end": "625660"
  },
  {
    "text": "easily because if you lose the cluster your state is tore outside it's in the git repo you create on your cluster you",
    "start": "625660",
    "end": "632380"
  },
  {
    "text": "connect the new flux instance that cluster and you point into the to your repo and it will just restore everything",
    "start": "632380",
    "end": "638400"
  },
  {
    "text": "that was there now of course this everything doesn't mean stateful sets",
    "start": "638400",
    "end": "644890"
  },
  {
    "text": "doesn't mean you can restore hard drugs right databases or stuff like that you",
    "start": "644890",
    "end": "650830"
  },
  {
    "text": "can restore everything that was before in the kubernetes it is the storage and",
    "start": "650830",
    "end": "657240"
  },
  {
    "text": "even that is not true because what you studying it is an intention for",
    "start": "657240",
    "end": "663459"
  },
  {
    "text": "example with self manager I want a certificate so you store the the request",
    "start": "663459",
    "end": "670579"
  },
  {
    "text": "of a certificate in your git repository that did request it doesn't have the actual certificate server manager will",
    "start": "670579",
    "end": "676250"
  },
  {
    "text": "talk to let's encrypt and we get that object for me and creates it on the cluster so desire state what we save in",
    "start": "676250",
    "end": "687170"
  },
  {
    "text": "a git repository is not the actual state is an intent i want if something breaks",
    "start": "687170",
    "end": "692540"
  },
  {
    "text": "i want to get to that thing but it's not like database name snapshot right so 4 4",
    "start": "692540",
    "end": "701560"
  },
  {
    "text": "4 let's encrypt it to you destroy the cluster you create a new cluster you",
    "start": "701560",
    "end": "707389"
  },
  {
    "text": "linked to the same git repo and let's encrypt will will do the request again",
    "start": "707389",
    "end": "712720"
  },
  {
    "text": "selma general do the request again you'll have like similar certificate",
    "start": "712720",
    "end": "717889"
  },
  {
    "text": "what is not that certificate right so when you are doing detox you have to be",
    "start": "717889",
    "end": "723110"
  },
  {
    "text": "aware that you cannot that's not the whole state it's something that you desire and yeah it has like things like",
    "start": "723110",
    "end": "730990"
  },
  {
    "text": "you can easily revert to previous version everything that git has how can",
    "start": "730990",
    "end": "741529"
  },
  {
    "start": "740000",
    "end": "740000"
  },
  {
    "text": "you do get ops today and this is like our definition of vetoes other edit ops",
    "start": "741529",
    "end": "749959"
  },
  {
    "text": "tools maybe have other definitions so it's a nominative definition of course",
    "start": "749959",
    "end": "756709"
  },
  {
    "text": "you have to have a git repository a container registry and here the in the container registry part was very",
    "start": "756709",
    "end": "762949"
  },
  {
    "text": "important is that you you store their images that are immutable",
    "start": "762949",
    "end": "768380"
  },
  {
    "text": "that means no latest tag never push an image twice if something changes in your",
    "start": "768380",
    "end": "775819"
  },
  {
    "text": "code is something changes in a config that you store inside the container use a get sha use semver",
    "start": "775819",
    "end": "782089"
  },
  {
    "text": "use something unique when you push to that poster that's something people usually forget when they do kubernetes",
    "start": "782089",
    "end": "790339"
  },
  {
    "text": "that latest doesn't really work so don't use it",
    "start": "790339",
    "end": "795430"
  },
  {
    "text": "and you need the continuous deployment process this is more about how flux",
    "start": "795430",
    "end": "803110"
  },
  {
    "text": "works like Argo has a different approach",
    "start": "803110",
    "end": "808490"
  },
  {
    "text": "and there is also Jenkins X and others",
    "start": "808490",
    "end": "812589"
  },
  {
    "text": "so flux does pulling on the git repository it looks at it and it has by",
    "start": "813519",
    "end": "821360"
  },
  {
    "text": "default it has a five minutes interval so you change something now and in the",
    "start": "821360",
    "end": "827389"
  },
  {
    "text": "next five minutes it will it will apply that change on the cluster and you can",
    "start": "827389",
    "end": "832699"
  },
  {
    "text": "of course you can fine-tune that reconciliation loop it also watches",
    "start": "832699",
    "end": "838670"
  },
  {
    "text": "container registries how it does that it looks at your kubernetes cluster it",
    "start": "838670",
    "end": "843680"
  },
  {
    "text": "looks at all the image put secrets that you have there it uses those secrets to",
    "start": "843680",
    "end": "848959"
  },
  {
    "text": "connect to the container registry and creates a database a cache of all the",
    "start": "848959",
    "end": "855320"
  },
  {
    "text": "images that are running on your cluster and they're tagged tabs that is metadata the aren't like flux doesn't actually",
    "start": "855320",
    "end": "862850"
  },
  {
    "text": "download an image but it it knows if the image that I'm running now it is the",
    "start": "862850",
    "end": "869209"
  },
  {
    "text": "latest image or how many versions behind and so on so it's only metadata what are",
    "start": "869209",
    "end": "878750"
  },
  {
    "text": "things a gift ops engine should do of course it should have the possibility to",
    "start": "878750",
    "end": "884540"
  },
  {
    "text": "undo changes that are aren't going through get for example let's say you",
    "start": "884540",
    "end": "890089"
  },
  {
    "text": "you have a deployment you provision it with in a get ops way then you go with Q",
    "start": "890089",
    "end": "897680"
  },
  {
    "text": "control and you do keep control edit that deployment then you change something flux will undo it because we",
    "start": "897680",
    "end": "904430"
  },
  {
    "text": "think ok you can react to get hooks like",
    "start": "904430",
    "end": "909529"
  },
  {
    "text": "usually she is built like that you put something to give the system reacts red we think about continuous deployment in",
    "start": "909529",
    "end": "918230"
  },
  {
    "text": "inside the cluster should reconcile state all the time even if there is no event because you cannot know if someone",
    "start": "918230",
    "end": "926300"
  },
  {
    "text": "modified your crossed right so flux does this continuously sing it continuously applies the desired",
    "start": "926300",
    "end": "933600"
  },
  {
    "text": "state so if you try to change it it will it will and will change so you have to scale it to zero if you want to do nasty",
    "start": "933600",
    "end": "940920"
  },
  {
    "text": "stuff on your cluster puppet had the same way of running many other tools do",
    "start": "940920",
    "end": "948510"
  },
  {
    "text": "this detox is not it's not a new concept but it it applies differently to",
    "start": "948510",
    "end": "955050"
  },
  {
    "text": "kubernetes because you know you don't need to store an intermediary state like in telephone or in puppet and all these",
    "start": "955050",
    "end": "961860"
  },
  {
    "text": "other tools you need this plan this plan is to be stored in another way in another place and when you apply the",
    "start": "961860",
    "end": "969089"
  },
  {
    "text": "plan you have to have a lock so you don't run it in parallel and so on how",
    "start": "969089",
    "end": "974760"
  },
  {
    "text": "kubernetes is built and because of etcd and the kubernetes api you don't have this constrains you can apply a thing in",
    "start": "974760",
    "end": "983399"
  },
  {
    "text": "peril ten times it will just work to work once and all the other actions are",
    "start": "983399",
    "end": "989490"
  },
  {
    "text": "no another thing that flux does it",
    "start": "989490",
    "end": "995610"
  },
  {
    "text": "verifies the identity of a computer with GPG what what that means it protects you",
    "start": "995610",
    "end": "1003500"
  },
  {
    "text": "from let's say one of your team members got hacked so someone has access to the",
    "start": "1003500",
    "end": "1011690"
  },
  {
    "text": "master branch of your cluster repository and it can do whatever they can change your cluster deploy whatever they want",
    "start": "1011690",
    "end": "1019620"
  },
  {
    "text": "[Music] the signing key is not in stored in",
    "start": "1019620",
    "end": "1025699"
  },
  {
    "text": "github right it's stored on your computer so even if someone breaks your account they don't have the key they",
    "start": "1025699",
    "end": "1033140"
  },
  {
    "text": "cannot sign that commit and flux sees the commit party to not apply it because",
    "start": "1033140",
    "end": "1038360"
  },
  {
    "text": "it has a list of approved keys above proved committers it doesn't just look",
    "start": "1038360",
    "end": "1044540"
  },
  {
    "text": "at the user name of the committee so this is how it does does this has the",
    "start": "1044540",
    "end": "1050750"
  },
  {
    "text": "security feature this is how it looks you put some yells",
    "start": "1050750",
    "end": "1058600"
  },
  {
    "start": "1054000",
    "end": "1054000"
  },
  {
    "text": "any kind of yells in a git repository flux will pull those definitions from",
    "start": "1058600",
    "end": "1065470"
  },
  {
    "text": "there and it will use cue cattle to",
    "start": "1065470",
    "end": "1071440"
  },
  {
    "text": "apply it on the kubernetes api so it doesn't talk directly to kubernetes api we shell out to keep control I'm gonna",
    "start": "1071440",
    "end": "1079060"
  },
  {
    "text": "use all the cue cattle cubelet and why",
    "start": "1079060",
    "end": "1084970"
  },
  {
    "text": "we chose not to speak directly to the kubernetes api when we do this apply is",
    "start": "1084970",
    "end": "1090010"
  },
  {
    "text": "because of versioning and we want to let you control your API version and how",
    "start": "1090010",
    "end": "1099700"
  },
  {
    "text": "flux applies and the best way we found it that you can replace that cue control",
    "start": "1099700",
    "end": "1106810"
  },
  {
    "text": "that comes with flux and match that cube control with your own kubernetes version so in this way we don't have to have",
    "start": "1106810",
    "end": "1114330"
  },
  {
    "text": "five flux versions for all all those all these I know breaking changes in",
    "start": "1114330",
    "end": "1120550"
  },
  {
    "text": "kubernetes and so on it's on you you can replace the tool that applies applies",
    "start": "1120550",
    "end": "1126190"
  },
  {
    "text": "the change now flux talks a lot with the kubernetes api to discover what's",
    "start": "1126190",
    "end": "1132100"
  },
  {
    "text": "running on your cluster so it uses informers and all the stuff so it queries a lot the API why it does that",
    "start": "1132100",
    "end": "1138430"
  },
  {
    "text": "to enable garbage collection we can detect that something was in a git",
    "start": "1138430",
    "end": "1144670"
  },
  {
    "text": "repository it got applied on a server inside the cluster then you delete that object from the git repository and we",
    "start": "1144670",
    "end": "1151390"
  },
  {
    "text": "can reliably delete it from the cluster we don't delete other things so if you",
    "start": "1151390",
    "end": "1159280"
  },
  {
    "text": "do an apply to cattle apply will not",
    "start": "1159280",
    "end": "1164350"
  },
  {
    "text": "delete that object because we we use with checksums and we track all the",
    "start": "1164350",
    "end": "1170440"
  },
  {
    "text": "objects that are in flux responsibility and the garbage collection stuff took",
    "start": "1170440",
    "end": "1178210"
  },
  {
    "text": "like about one year to make it happen a lot of people asked for it we need it but we had a couple of iterations how",
    "start": "1178210",
    "end": "1187360"
  },
  {
    "text": "how to implement this garbage collection thingy in such a way that you don't put a lot of pressure",
    "start": "1187360",
    "end": "1192640"
  },
  {
    "text": "on the on the API server and you don't have to query each object and we use the",
    "start": "1192640",
    "end": "1198550"
  },
  {
    "text": "dynamic client the dynamic client go for kubernetes this is how we discover",
    "start": "1198550",
    "end": "1204760"
  },
  {
    "text": "everything that's running in your cluster how you install flux is quite",
    "start": "1204760",
    "end": "1211750"
  },
  {
    "start": "1208000",
    "end": "1208000"
  },
  {
    "text": "easy we have several ways of installing it we have a flux ETL comment line that",
    "start": "1211750",
    "end": "1220120"
  },
  {
    "text": "has an install option and also has an identity option and I want to show you how it works we also have a hand chart",
    "start": "1220120",
    "end": "1228370"
  },
  {
    "text": "that has all the options out there to set up flux in the read-only mode to",
    "start": "1228370",
    "end": "1233700"
  },
  {
    "text": "deploy it with PGP keys to deploy it with your known hosts for example you",
    "start": "1233700",
    "end": "1240310"
  },
  {
    "text": "can use a private git repo flux doesn't know about it it cannot connect it so you have to mount those kind of",
    "start": "1240310",
    "end": "1247690"
  },
  {
    "text": "informations into flux with the hand chart then we also offer a customized",
    "start": "1247690",
    "end": "1252730"
  },
  {
    "text": "base so if you are if you want to integrate flux in let's say a cluster",
    "start": "1252730",
    "end": "1259060"
  },
  {
    "text": "bootstrap customize is the way to do it don't boost rep clusters with help because home tree will not support",
    "start": "1259060",
    "end": "1265840"
  },
  {
    "text": "multiple namespaces and stuff like that so these are all the offerings that we",
    "start": "1265840",
    "end": "1272350"
  },
  {
    "text": "have for the insulin it's quite easy I want to show you how it works",
    "start": "1272350",
    "end": "1279360"
  },
  {
    "text": "so I've cloned the get started' repository from from the flux organization and I have here directory",
    "start": "1283110",
    "end": "1295019"
  },
  {
    "text": "namespace the single database that I put inside is just nothing magic here it's just yellow and I have were closed",
    "start": "1295019",
    "end": "1304529"
  },
  {
    "text": "definition and has like a demo happen or is on top of the scalar in the service",
    "start": "1304529",
    "end": "1310549"
  },
  {
    "text": "and I can I have a cluster let's see",
    "start": "1310549",
    "end": "1318659"
  },
  {
    "text": "it's nothing on the cluster",
    "start": "1318659",
    "end": "1321649"
  },
  {
    "text": "okay I will create the namespace",
    "start": "1326600",
    "end": "1331640"
  },
  {
    "text": "and I'm going to use this stuff what it",
    "start": "1341380",
    "end": "1346720"
  },
  {
    "text": "does it sets my github username so flux",
    "start": "1346720",
    "end": "1352450"
  },
  {
    "text": "will we'll be able to push changes back to the git repository so I the default",
    "start": "1352450",
    "end": "1359200"
  },
  {
    "text": "flux install needs right access to your git repository so when we do that to",
    "start": "1359200",
    "end": "1366669"
  },
  {
    "text": "apply all these things so flux is",
    "start": "1366669",
    "end": "1373210"
  },
  {
    "text": "composed of",
    "start": "1373210",
    "end": "1376289"
  },
  {
    "text": "so it's a flux pod and it's also a memcache pod why we need that memcache",
    "start": "1381960",
    "end": "1387149"
  },
  {
    "start": "1382000",
    "end": "1382000"
  },
  {
    "text": "we stored there the container images metadata this is why we use memcache you",
    "start": "1387149",
    "end": "1397289"
  },
  {
    "text": "can delete it you can do whatever is no problem flux will just refill the cache",
    "start": "1397289",
    "end": "1402809"
  },
  {
    "text": "it's not it's not nothing actually stateful here okay so I've applied those",
    "start": "1402809",
    "end": "1412710"
  },
  {
    "text": "those things and now what what flux does when it starts it looks up an SSH key in",
    "start": "1412710",
    "end": "1418860"
  },
  {
    "text": "the cluster so if you don't have an SSH key secret in the cluster with the flux name it will create one for you so we",
    "start": "1418860",
    "end": "1427019"
  },
  {
    "text": "can get the public key of that of that C of that key with the identity command so",
    "start": "1427019",
    "end": "1435210"
  },
  {
    "text": "when I run identity",
    "start": "1435210",
    "end": "1438470"
  },
  {
    "text": "right",
    "start": "1442740",
    "end": "1445740"
  },
  {
    "text": "so it will get me the public key and I can copy this public key go to my git",
    "start": "1448470",
    "end": "1456360"
  },
  {
    "text": "repository go to deploy keys and I'll",
    "start": "1456360",
    "end": "1462660"
  },
  {
    "text": "just add this deploy key with right axis",
    "start": "1462660",
    "end": "1467780"
  },
  {
    "text": "and fluxes until I did that flux every",
    "start": "1469460",
    "end": "1475620"
  },
  {
    "text": "couple of 10 seconds or something that will just check do I have write access to the repo no okay I'll try again I'll",
    "start": "1475620",
    "end": "1481680"
  },
  {
    "text": "try again now it has and what will happen flux will create a git tag when",
    "start": "1481680",
    "end": "1488400"
  },
  {
    "text": "it synchronizes but let's let's see if something is happening on on white",
    "start": "1488400",
    "end": "1495870"
  },
  {
    "text": "cluster I'll do get namespaces I have a demo name space in there",
    "start": "1495870",
    "end": "1501660"
  },
  {
    "text": "is not there yet can do watch does watch",
    "start": "1501660",
    "end": "1510270"
  },
  {
    "text": "work should work right for",
    "start": "1510270",
    "end": "1515120"
  },
  {
    "text": "let's see what flux does",
    "start": "1522130",
    "end": "1525630"
  },
  {
    "text": "I'm such a bad typist",
    "start": "1542750",
    "end": "1547960"
  },
  {
    "text": "come on man so now it for example now it",
    "start": "1566520",
    "end": "1572820"
  },
  {
    "text": "scans images it found memcache and what it does it looks up docker hub and it",
    "start": "1572820",
    "end": "1579540"
  },
  {
    "text": "gets all the all the tags and everything I can force it to do a sync",
    "start": "1579540",
    "end": "1589309"
  },
  {
    "text": "I can do sink",
    "start": "1597140",
    "end": "1600670"
  },
  {
    "text": "the chief talks is not ready so there is no this one is",
    "start": "1603790",
    "end": "1610010"
  },
  {
    "text": "not ready",
    "start": "1610010",
    "end": "1612640"
  },
  {
    "text": "yeah",
    "start": "1620190",
    "end": "1622820"
  },
  {
    "text": "Oh",
    "start": "1630320",
    "end": "1632350"
  },
  {
    "text": "yeah I had to do that text I had to export my username and I didn't do that yeah where is it okay",
    "start": "1637390",
    "end": "1647620"
  },
  {
    "text": "kind of hard to install flux",
    "start": "1651200",
    "end": "1654820"
  },
  {
    "text": "you don't know right yeah",
    "start": "1663270",
    "end": "1666919"
  },
  {
    "text": "I'll try the sink again",
    "start": "1671030",
    "end": "1674500"
  },
  {
    "text": "although I shouldn't have to do any kind of thinking let's see",
    "start": "1677240",
    "end": "1682930"
  },
  {
    "text": "yay I managed to install plugs for the first time right so what happened now I",
    "start": "1690809",
    "end": "1704530"
  },
  {
    "text": "have this workload directory synchronized and you can do a couple of things when you install flocks you can",
    "start": "1704530",
    "end": "1710200"
  },
  {
    "text": "say synchronize those directories why we why we have this future there is the",
    "start": "1710200",
    "end": "1717550"
  },
  {
    "text": "fact that you can have a git repository that you can manage multiple clusters so you can say can have let's say dev",
    "start": "1717550",
    "end": "1724230"
  },
  {
    "text": "directory and staging directory and production director and can point different flux instances to different",
    "start": "1724230",
    "end": "1730960"
  },
  {
    "text": "different directories the idea of detox is very very simple go here and do",
    "start": "1730960",
    "end": "1738100"
  },
  {
    "text": "change gonna change the version",
    "start": "1738100",
    "end": "1744630"
  },
  {
    "text": "and in five minutes it should should do",
    "start": "1750640",
    "end": "1757030"
  },
  {
    "text": "it I'm not going gonna wait five minutes I'm gonna run this increment once of",
    "start": "1757030",
    "end": "1766120"
  },
  {
    "text": "better typing stuff I had to watch",
    "start": "1766120",
    "end": "1771910"
  },
  {
    "text": "drinks last night what's the command",
    "start": "1771910",
    "end": "1778450"
  },
  {
    "text": "killed",
    "start": "1778450",
    "end": "1780990"
  },
  {
    "text": "so it does that on its own on this five minute so we can you can tell it sink",
    "start": "1806720",
    "end": "1812480"
  },
  {
    "text": "the the change for me this sink is blocking while but he can also do on the",
    "start": "1812480",
    "end": "1818570"
  },
  {
    "text": "back end the same stuff so you don't",
    "start": "1818570",
    "end": "1824150"
  },
  {
    "text": "want to do that from from my CI perspective because this does a port for so you need to open your cluster to your",
    "start": "1824150",
    "end": "1831410"
  },
  {
    "text": "CI stuff yeah we are working now on a",
    "start": "1831410",
    "end": "1837130"
  },
  {
    "text": "way to expose a hook somehow secure that you can and flux",
    "start": "1837130",
    "end": "1843830"
  },
  {
    "text": "will listen to that hook I know Argo CD has that so maybe in this Argo",
    "start": "1843830",
    "end": "1849770"
  },
  {
    "text": "flux collaboration Argo flux will get this kind of being can be triggered via",
    "start": "1849770",
    "end": "1856280"
  },
  {
    "text": "hooks gonna go back the presentation I",
    "start": "1856280",
    "end": "1862670"
  },
  {
    "text": "still have time",
    "start": "1862670",
    "end": "1865360"
  },
  {
    "text": "three minutes okay another thing that can do is flux you can create these",
    "start": "1870190",
    "end": "1876630"
  },
  {
    "start": "1871000",
    "end": "1871000"
  },
  {
    "text": "update policies and you can say I have this deployment I want to I want flux to",
    "start": "1876630",
    "end": "1884290"
  },
  {
    "text": "monitor the registry and based on these policies I want to flux update the",
    "start": "1884290",
    "end": "1891610"
  },
  {
    "text": "actual deployment spec and you can use reg X you can use globe or you can use",
    "start": "1891610",
    "end": "1897520"
  },
  {
    "text": "simpler expressions to define how flux",
    "start": "1897520",
    "end": "1903340"
  },
  {
    "text": "should update your your workloads we",
    "start": "1903340",
    "end": "1909130"
  },
  {
    "start": "1908000",
    "end": "1908000"
  },
  {
    "text": "also have customized support how how this works is you can have a you can",
    "start": "1909130",
    "end": "1915190"
  },
  {
    "text": "have a customized layer thing inside your git repository and next to the main",
    "start": "1915190",
    "end": "1920410"
  },
  {
    "text": "cast customization llamó you'll have this file called flux llamo and flux",
    "start": "1920410",
    "end": "1927400"
  },
  {
    "text": "shaman is a way to tell flux what kind of generators it can use a",
    "start": "1927400",
    "end": "1932740"
  },
  {
    "text": "generator is can be anything that writes to standard dot so in this case we run",
    "start": "1932740",
    "end": "1940000"
  },
  {
    "text": "customized build for the whole repository customized build will write",
    "start": "1940000",
    "end": "1945070"
  },
  {
    "text": "all the all the definitions to standard out and from there flux takes that and applies it to the cluster so you can mix",
    "start": "1945070",
    "end": "1954280"
  },
  {
    "text": "and match different things here for example let's say you want to customize",
    "start": "1954280",
    "end": "1959320"
  },
  {
    "text": "a help chart and that hand chart doesn't offer that kind of customization right you can do here the first generator",
    "start": "1959320",
    "end": "1966970"
  },
  {
    "text": "command could be Helen template and afterwards you can have a patch inside",
    "start": "1966970",
    "end": "1972580"
  },
  {
    "text": "your did repository and run a customized build for that other things you can do",
    "start": "1972580",
    "end": "1978610"
  },
  {
    "text": "here can I'll replace environment variables if this is the way you want to the templating right so we are not",
    "start": "1978610",
    "end": "1984970"
  },
  {
    "text": "open-ended about how you are doing your own templating as long as your tools will write standard outflux can call",
    "start": "1984970",
    "end": "1993010"
  },
  {
    "text": "into them and use them how you can add your own tools to to the flux image you",
    "start": "1993010",
    "end": "1999220"
  },
  {
    "text": "use an init container and you can copy your binary in the into a shared volume so flux can",
    "start": "1999220",
    "end": "2006509"
  },
  {
    "text": "access it also have a multi-tenancy",
    "start": "2006509",
    "end": "2014219"
  },
  {
    "start": "2011000",
    "end": "2011000"
  },
  {
    "text": "support for flux so the idea is that if you run a single flux instance per cluster that flux instance has to",
    "start": "2014219",
    "end": "2021179"
  },
  {
    "text": "synchronize everything so it has to create role bindings it has to create",
    "start": "2021179",
    "end": "2027629"
  },
  {
    "text": "custom resource definition all these global objects and maybe you don't want to to have a single git repository with",
    "start": "2027629",
    "end": "2035159"
  },
  {
    "text": "everything inside all these dangerous objects that you can change my network policies and everything right so the",
    "start": "2035159",
    "end": "2042509"
  },
  {
    "text": "idea is you can you can have system flux that you deploying a special namespace",
    "start": "2042509",
    "end": "2048628"
  },
  {
    "text": "and that the flux instance the people in charge of that flux users are the",
    "start": "2048629",
    "end": "2054169"
  },
  {
    "text": "cluster administrators and that flux instance can provision namespaces and in",
    "start": "2054169",
    "end": "2062010"
  },
  {
    "text": "those namespaces it can deploy another fluxes thus 13 so let's say you have",
    "start": "2062010",
    "end": "2067319"
  },
  {
    "text": "five things in your company you keep gave each team its own git repository so",
    "start": "2067319",
    "end": "2073289"
  },
  {
    "text": "they can do whatever they want in there but they will not be able to affect another team name space because that",
    "start": "2073289",
    "end": "2079858"
  },
  {
    "text": "flux instance can only synchronize the state you can put whatever in there but",
    "start": "2079859",
    "end": "2085679"
  },
  {
    "text": "it only works for that namespace it's enforced with our bot so this is a way",
    "start": "2085679",
    "end": "2090929"
  },
  {
    "text": "you can do multi-tenancy for your teams with flux you need multiple instances right and here is an example of what",
    "start": "2090929",
    "end": "2101759"
  },
  {
    "text": "each team can do we have secret support",
    "start": "2101759",
    "end": "2108539"
  },
  {
    "start": "2105000",
    "end": "2105000"
  },
  {
    "text": "in flux through the benami shield secret operator what the benancio secret does",
    "start": "2108539",
    "end": "2115769"
  },
  {
    "text": "it let you store a SIL circuit which is an encrypted file in your git repository",
    "start": "2115769",
    "end": "2124519"
  },
  {
    "text": "it's a custom resource flux will synchronize it on the cluster and",
    "start": "2124519",
    "end": "2129650"
  },
  {
    "text": "silicic a controller will will decrypt it and you create a kubernetes secret so in this way it's it's one way to store",
    "start": "2129650",
    "end": "2138000"
  },
  {
    "text": "sensitive information in in a public repository no one can decrypt it everyone that has the public key can add",
    "start": "2138000",
    "end": "2145920"
  },
  {
    "text": "new silly secrets to the repo another option we have support for get secret",
    "start": "2145920",
    "end": "2152220"
  },
  {
    "text": "it's a good plugin that uses GPG encryption and so on we have and now we",
    "start": "2152220",
    "end": "2158640"
  },
  {
    "text": "are going to we are working with Mozilla to add soft support support eQuest",
    "start": "2158640",
    "end": "2164910"
  },
  {
    "text": "open-end is going to happen probably at this month there is also a project",
    "start": "2164910",
    "end": "2174150"
  },
  {
    "start": "2171000",
    "end": "2171000"
  },
  {
    "text": "called helm operator which is a sub project of flux we love helm and we want",
    "start": "2174150",
    "end": "2180300"
  },
  {
    "text": "to to be able to do helm operations through get like with you do with the",
    "start": "2180300",
    "end": "2186930"
  },
  {
    "text": "normal kubernetes deployments and yeah services so we created this he'll",
    "start": "2186930",
    "end": "2195290"
  },
  {
    "text": "release custom resource that maps all the things that you can do from the",
    "start": "2195290",
    "end": "2200820"
  },
  {
    "text": "command line and it also has things like values the",
    "start": "2200820",
    "end": "2205920"
  },
  {
    "text": "helm operator can do many things are just spirit I will give you an example here of how helm release looks like you",
    "start": "2205920",
    "end": "2213270"
  },
  {
    "start": "2207000",
    "end": "2207000"
  },
  {
    "text": "tell it where the repositories and what version it will will install this this",
    "start": "2213270",
    "end": "2219330"
  },
  {
    "text": "chart and you can also use automation and you can provide values so here I'm",
    "start": "2219330",
    "end": "2225839"
  },
  {
    "start": "2220000",
    "end": "2220000"
  },
  {
    "text": "having the hell release I'm under the spec I have the values so I said the",
    "start": "2225839",
    "end": "2232830"
  },
  {
    "text": "image repository and and tag and flux will update this custom resource to not",
    "start": "2232830",
    "end": "2238020"
  },
  {
    "text": "rewrite your chart as itself to write this custom resource back to the git repository and it will in this way you",
    "start": "2238020",
    "end": "2244380"
  },
  {
    "text": "can automate container image updates in your chart in your charts what flux",
    "start": "2244380",
    "end": "2252810"
  },
  {
    "text": "doesn't do right now it doesn't automate the actual chart update so if you create",
    "start": "2252810",
    "end": "2259380"
  },
  {
    "text": "a new chart virginian deploy that to your hand repository flux will not be able to do it and this is something that",
    "start": "2259380",
    "end": "2265589"
  },
  {
    "text": "will come into the explosions I'm not sure when do I have",
    "start": "2265589",
    "end": "2273910"
  },
  {
    "text": "time yeah influx is not pillar we get this",
    "start": "2273910",
    "end": "2284079"
  },
  {
    "start": "2278000",
    "end": "2278000"
  },
  {
    "text": "question a lot like okay flux runs it cluster also how is it active all",
    "start": "2284079",
    "end": "2289569"
  },
  {
    "text": "operators act like people if they apply state on the cluster right we think that",
    "start": "2289569",
    "end": "2296260"
  },
  {
    "text": "having this having good gift flows and protective branches and keys",
    "start": "2296260",
    "end": "2304359"
  },
  {
    "text": "it's is basically the level one our buck for your organization this is how you can protect your your clusters from",
    "start": "2304359",
    "end": "2313200"
  },
  {
    "text": "unwanted changes and of course if the multi-tenancy model even if someone",
    "start": "2313200",
    "end": "2321250"
  },
  {
    "text": "tries to make a change that will impact the whole class that you cannot cannot do it and flux works very well with",
    "start": "2321250",
    "end": "2330520"
  },
  {
    "start": "2327000",
    "end": "2327000"
  },
  {
    "text": "flagger and you can now use them together they are not related in any",
    "start": "2330520",
    "end": "2335980"
  },
  {
    "text": "ways they they don't know one of another but they you can build progressive",
    "start": "2335980",
    "end": "2342430"
  },
  {
    "text": "delivery pipe pipelines with both of them the idea is that flux synchronizes",
    "start": "2342430",
    "end": "2347470"
  },
  {
    "text": "something from the git repository and flagger detect so there is a change you want to deploy a new version and runs",
    "start": "2347470",
    "end": "2353770"
  },
  {
    "text": "cannery release for that version and flagger is the is the daemon that will",
    "start": "2353770",
    "end": "2359109"
  },
  {
    "text": "write to slack or write microsoft teams will give you notifications it will give you kubernetes events for for this kind",
    "start": "2359109",
    "end": "2368619"
  },
  {
    "text": "of changes in order to see if flux has",
    "start": "2368619",
    "end": "2374470"
  },
  {
    "text": "some problems you have to tell the logs or look at these custom events flagger",
    "start": "2374470",
    "end": "2380140"
  },
  {
    "text": "it has this integration with with more with chapters",
    "start": "2380140",
    "end": "2388109"
  },
  {
    "start": "2389000",
    "end": "2389000"
  },
  {
    "text": "and the roadmap of course we want to adopt the detox engine we want to",
    "start": "2390080",
    "end": "2396230"
  },
  {
    "text": "extract the container registry and image scanning as a sub-project so for example",
    "start": "2396230",
    "end": "2402140"
  },
  {
    "text": "our NGO can benefit from from this thing that Tony flux does we want to have a",
    "start": "2402140",
    "end": "2409010"
  },
  {
    "text": "Han registry scanning in there and the biggest problem we have with get ops",
    "start": "2409010",
    "end": "2414950"
  },
  {
    "text": "tooling right now are the web cooks so let's say if you want to deploy East EO",
    "start": "2414950",
    "end": "2420620"
  },
  {
    "text": "or linker D or things like that because flux applies the whole state at the same",
    "start": "2420620",
    "end": "2426110"
  },
  {
    "text": "time you you deploy the admission controller the mutational mission",
    "start": "2426110",
    "end": "2431810"
  },
  {
    "text": "controller along with all your other applications so there is a race condition there and some pods will not",
    "start": "2431810",
    "end": "2438320"
  },
  {
    "text": "get injected with the sidecar for example right so you have to go there and delete those pods the first time you",
    "start": "2438320",
    "end": "2445280"
  },
  {
    "text": "post wrap the cluster to get the cycle everywhere so a way to solve this will",
    "start": "2445280",
    "end": "2450620"
  },
  {
    "text": "be to add to flux this readiness checks so I can say apply things in phases",
    "start": "2450620",
    "end": "2457280"
  },
  {
    "text": "apply first all these definitions check for are they healthy are they running and only afterwards",
    "start": "2457280",
    "end": "2464090"
  },
  {
    "text": "apply the whole state so this is one way to solve the mission controllers",
    "start": "2464090",
    "end": "2470360"
  },
  {
    "text": "bootstrap yeah with the agro flux thing we we want to have one to support",
    "start": "2470360",
    "end": "2477350"
  },
  {
    "text": "multiple git repos healthy 3 has OCA based registry support as last week so",
    "start": "2477350",
    "end": "2484730"
  },
  {
    "text": "we already scheduled we already know how to scan container registries so we have",
    "start": "2484730",
    "end": "2490700"
  },
  {
    "text": "to extend this this this future to and support helm like scan the registry and",
    "start": "2490700",
    "end": "2497480"
  },
  {
    "text": "find the help chart and update it and yeah we want to always improve",
    "start": "2497480",
    "end": "2502880"
  },
  {
    "text": "observability because it's always it's always something you can improve specialist works that's it",
    "start": "2502880",
    "end": "2510890"
  },
  {
    "text": "I hope I'm not over time any questions",
    "start": "2510890",
    "end": "2516200"
  },
  {
    "text": "[Applause]",
    "start": "2516200",
    "end": "2520390"
  }
]