[
  {
    "start": "0",
    "end": "15000"
  },
  {
    "text": "all right hello and welcome to",
    "start": "80",
    "end": "2879"
  },
  {
    "text": "administering multi-cluster service",
    "start": "2879",
    "end": "4640"
  },
  {
    "text": "meshes",
    "start": "4640",
    "end": "5359"
  },
  {
    "text": "securely i'm eitan yarmisch an architect",
    "start": "5359",
    "end": "8240"
  },
  {
    "text": "at",
    "start": "8240",
    "end": "8559"
  },
  {
    "text": "solo i o i'm eric murphy i'm a field",
    "start": "8559",
    "end": "12240"
  },
  {
    "text": "engineer",
    "start": "12240",
    "end": "12719"
  },
  {
    "text": "also at seoul io",
    "start": "12719",
    "end": "16400"
  },
  {
    "start": "15000",
    "end": "52000"
  },
  {
    "text": "so before we jump in let's just quickly",
    "start": "16400",
    "end": "18400"
  },
  {
    "text": "go over what we're going to",
    "start": "18400",
    "end": "19920"
  },
  {
    "text": "discuss in this talk first",
    "start": "19920",
    "end": "23119"
  },
  {
    "text": "we're going to review multi-cluster",
    "start": "23119",
    "end": "25279"
  },
  {
    "text": "service mesh and how it has evolved",
    "start": "25279",
    "end": "27840"
  },
  {
    "text": "first focusing on single cluster service",
    "start": "27840",
    "end": "29679"
  },
  {
    "text": "mesh and",
    "start": "29679",
    "end": "31039"
  },
  {
    "text": "jumping off from there next we're going",
    "start": "31039",
    "end": "33760"
  },
  {
    "text": "to discuss",
    "start": "33760",
    "end": "34480"
  },
  {
    "text": "the limitations and security issues with",
    "start": "34480",
    "end": "37040"
  },
  {
    "text": "the current",
    "start": "37040",
    "end": "38000"
  },
  {
    "text": "approach third we're going to explain",
    "start": "38000",
    "end": "40800"
  },
  {
    "text": "how",
    "start": "40800",
    "end": "41440"
  },
  {
    "text": "we at soloyo solved those problems and",
    "start": "41440",
    "end": "44320"
  },
  {
    "text": "then fourth",
    "start": "44320",
    "end": "45200"
  },
  {
    "text": "we're going to give an example or demo",
    "start": "45200",
    "end": "47200"
  },
  {
    "text": "of how to deploy",
    "start": "47200",
    "end": "48480"
  },
  {
    "text": "securely using git ops",
    "start": "48480",
    "end": "52160"
  },
  {
    "start": "52000",
    "end": "164000"
  },
  {
    "text": "so before we jump into multi-cluster",
    "start": "52879",
    "end": "54719"
  },
  {
    "text": "service mesh let's just quickly",
    "start": "54719",
    "end": "57120"
  },
  {
    "text": "take a look back at single cluster",
    "start": "57120",
    "end": "59760"
  },
  {
    "text": "service mesh",
    "start": "59760",
    "end": "61440"
  },
  {
    "text": "so this is a very simple single cluster",
    "start": "61440",
    "end": "63760"
  },
  {
    "text": "service mesh",
    "start": "63760",
    "end": "65600"
  },
  {
    "text": "example we have a couple of different",
    "start": "65600",
    "end": "68080"
  },
  {
    "text": "workloads",
    "start": "68080",
    "end": "69360"
  },
  {
    "text": "running in cluster as well as our",
    "start": "69360",
    "end": "72400"
  },
  {
    "text": "service mesh",
    "start": "72400",
    "end": "73200"
  },
  {
    "text": "in this case the service mesh is istio",
    "start": "73200",
    "end": "75920"
  },
  {
    "text": "but that is not",
    "start": "75920",
    "end": "77200"
  },
  {
    "text": "necessary for this so",
    "start": "77200",
    "end": "80320"
  },
  {
    "text": "as you can see all of the all the",
    "start": "80320",
    "end": "82640"
  },
  {
    "text": "workloads",
    "start": "82640",
    "end": "83360"
  },
  {
    "text": "including the istio control plane are",
    "start": "83360",
    "end": "85759"
  },
  {
    "text": "communicating",
    "start": "85759",
    "end": "86560"
  },
  {
    "text": "directly with the kubernetes api server",
    "start": "86560",
    "end": "90479"
  },
  {
    "text": "in the case of the control plane it",
    "start": "90479",
    "end": "92479"
  },
  {
    "text": "communicates with the api server",
    "start": "92479",
    "end": "94479"
  },
  {
    "text": "to get the endpoint information for all",
    "start": "94479",
    "end": "98320"
  },
  {
    "text": "the workloads",
    "start": "98320",
    "end": "99439"
  },
  {
    "text": "as well as service info and other",
    "start": "99439",
    "end": "102240"
  },
  {
    "text": "metadata",
    "start": "102240",
    "end": "103040"
  },
  {
    "text": "about the cluster",
    "start": "103040",
    "end": "105920"
  },
  {
    "text": "so let's just quickly review the single",
    "start": "106240",
    "end": "108960"
  },
  {
    "text": "cluster scenario",
    "start": "108960",
    "end": "110159"
  },
  {
    "text": "and why it had what the benefits are and",
    "start": "110159",
    "end": "112560"
  },
  {
    "text": "why it's more simplistic",
    "start": "112560",
    "end": "114640"
  },
  {
    "text": "so the control plane and the data plane",
    "start": "114640",
    "end": "116640"
  },
  {
    "text": "both live on the same cluster",
    "start": "116640",
    "end": "119280"
  },
  {
    "text": "authentication with the api server is",
    "start": "119280",
    "end": "121360"
  },
  {
    "text": "handled automatically by",
    "start": "121360",
    "end": "123360"
  },
  {
    "text": "kubernetes so the service account tokens",
    "start": "123360",
    "end": "125920"
  },
  {
    "text": "are generated",
    "start": "125920",
    "end": "126719"
  },
  {
    "text": "and mounted automatically and the tokens",
    "start": "126719",
    "end": "130399"
  },
  {
    "text": "remain safely in kubernetes more on this",
    "start": "130399",
    "end": "133040"
  },
  {
    "text": "later",
    "start": "133040",
    "end": "134239"
  },
  {
    "text": "most likely no need to revoke those",
    "start": "134239",
    "end": "138400"
  },
  {
    "text": "and lastly configuration can be easily",
    "start": "138400",
    "end": "140800"
  },
  {
    "text": "housed",
    "start": "140800",
    "end": "141520"
  },
  {
    "text": "in a single repository leading to simple",
    "start": "141520",
    "end": "144800"
  },
  {
    "text": "easy to understand git ops workflows",
    "start": "144800",
    "end": "148720"
  },
  {
    "text": "so now that we've quickly discussed a",
    "start": "149200",
    "end": "151840"
  },
  {
    "text": "single cluster",
    "start": "151840",
    "end": "153040"
  },
  {
    "text": "istio scenario let's evolve let's",
    "start": "153040",
    "end": "156160"
  },
  {
    "text": "jump that up to a multi-cluster scenario",
    "start": "156160",
    "end": "158480"
  },
  {
    "text": "and begin to explain",
    "start": "158480",
    "end": "159599"
  },
  {
    "text": "the complexities and security",
    "start": "159599",
    "end": "161760"
  },
  {
    "text": "implications",
    "start": "161760",
    "end": "162959"
  },
  {
    "text": "involved so now",
    "start": "162959",
    "end": "166160"
  },
  {
    "text": "as you can see we've taken our single",
    "start": "166160",
    "end": "168480"
  },
  {
    "text": "cluster diagram and",
    "start": "168480",
    "end": "170480"
  },
  {
    "text": "multiplied it by five now",
    "start": "170480",
    "end": "173760"
  },
  {
    "text": "in this scenario all of the control",
    "start": "173760",
    "end": "176239"
  },
  {
    "text": "planes",
    "start": "176239",
    "end": "177120"
  },
  {
    "text": "still uh need access to the cluster that",
    "start": "177120",
    "end": "180000"
  },
  {
    "text": "they are",
    "start": "180000",
    "end": "180480"
  },
  {
    "text": "running on um but",
    "start": "180480",
    "end": "184080"
  },
  {
    "text": "in order for a multi-cluster surface",
    "start": "184080",
    "end": "185760"
  },
  {
    "text": "mesh to be useful",
    "start": "185760",
    "end": "188159"
  },
  {
    "text": "the istio control planes also need to be",
    "start": "188159",
    "end": "190480"
  },
  {
    "text": "able to read",
    "start": "190480",
    "end": "191599"
  },
  {
    "text": "and write to the other clusters",
    "start": "191599",
    "end": "194720"
  },
  {
    "text": "so what does that look like uh for us",
    "start": "194720",
    "end": "197599"
  },
  {
    "text": "well",
    "start": "197599",
    "end": "198239"
  },
  {
    "text": "we've quickly drawn up an example so now",
    "start": "198239",
    "end": "201680"
  },
  {
    "start": "200000",
    "end": "236000"
  },
  {
    "text": "we can see all of the istio control",
    "start": "201680",
    "end": "203920"
  },
  {
    "text": "planes have access",
    "start": "203920",
    "end": "205599"
  },
  {
    "text": "to every other cluster's",
    "start": "205599",
    "end": "208640"
  },
  {
    "text": "kubernetes api server",
    "start": "208640",
    "end": "211760"
  },
  {
    "text": "so what does this mean in practice well",
    "start": "211760",
    "end": "215040"
  },
  {
    "text": "in practice this means that every",
    "start": "215040",
    "end": "217040"
  },
  {
    "text": "control plane",
    "start": "217040",
    "end": "218560"
  },
  {
    "text": "needs to have uh credentials",
    "start": "218560",
    "end": "221599"
  },
  {
    "text": "to access those other clusters so",
    "start": "221599",
    "end": "225120"
  },
  {
    "text": "as we mentioned earlier the the",
    "start": "225120",
    "end": "227760"
  },
  {
    "text": "kubernetes credentials need to leave",
    "start": "227760",
    "end": "230480"
  },
  {
    "text": "the kubernetes uh the single cluster",
    "start": "230480",
    "end": "234000"
  },
  {
    "text": "boundary",
    "start": "234000",
    "end": "236560"
  },
  {
    "start": "236000",
    "end": "303000"
  },
  {
    "text": "so multi-cluster service mesh the",
    "start": "237040",
    "end": "239280"
  },
  {
    "text": "control plane and the data plan are",
    "start": "239280",
    "end": "240640"
  },
  {
    "text": "spread out across many clusters",
    "start": "240640",
    "end": "243360"
  },
  {
    "text": "each control plane needs access to each",
    "start": "243360",
    "end": "245280"
  },
  {
    "text": "other cluster that means we have the an",
    "start": "245280",
    "end": "247519"
  },
  {
    "text": "order n squared connections where n",
    "start": "247519",
    "end": "250879"
  },
  {
    "text": "is the number of clusters",
    "start": "250879",
    "end": "254400"
  },
  {
    "text": "authentication is not handled",
    "start": "254400",
    "end": "256479"
  },
  {
    "text": "automatically for our",
    "start": "256479",
    "end": "257680"
  },
  {
    "text": "remote control planes so service",
    "start": "257680",
    "end": "259759"
  },
  {
    "text": "accounts must be",
    "start": "259759",
    "end": "261199"
  },
  {
    "text": "created coupe configs containing the",
    "start": "261199",
    "end": "263840"
  },
  {
    "text": "service account token must be",
    "start": "263840",
    "end": "265280"
  },
  {
    "text": "distributed to each cluster",
    "start": "265280",
    "end": "267199"
  },
  {
    "text": "now these coup configs which must leave",
    "start": "267199",
    "end": "269120"
  },
  {
    "text": "cluster borders",
    "start": "269120",
    "end": "270240"
  },
  {
    "text": "give potentially dangerous levels of",
    "start": "270240",
    "end": "272080"
  },
  {
    "text": "access to said cluster",
    "start": "272080",
    "end": "274400"
  },
  {
    "text": "if any kubeconfig credential were to",
    "start": "274400",
    "end": "276160"
  },
  {
    "text": "leak replacing it and redistributing the",
    "start": "276160",
    "end": "278800"
  },
  {
    "text": "credentials is a",
    "start": "278800",
    "end": "279759"
  },
  {
    "text": "convoluted process keeping all of these",
    "start": "279759",
    "end": "283040"
  },
  {
    "text": "coupe credentials in sync across all the",
    "start": "283040",
    "end": "285759"
  },
  {
    "text": "different clusters",
    "start": "285759",
    "end": "287840"
  },
  {
    "text": "is very difficult and not easily done",
    "start": "287840",
    "end": "290320"
  },
  {
    "text": "using git ops",
    "start": "290320",
    "end": "291680"
  },
  {
    "text": "so and on top of this in deployments",
    "start": "291680",
    "end": "294240"
  },
  {
    "text": "with many clusters",
    "start": "294240",
    "end": "296080"
  },
  {
    "text": "potentially many control planes are",
    "start": "296080",
    "end": "298240"
  },
  {
    "text": "performing i o",
    "start": "298240",
    "end": "299280"
  },
  {
    "text": "on each api server which can slow it",
    "start": "299280",
    "end": "301680"
  },
  {
    "text": "down",
    "start": "301680",
    "end": "303919"
  },
  {
    "start": "303000",
    "end": "376000"
  },
  {
    "text": "so the approach that i just mentioned",
    "start": "304560",
    "end": "307759"
  },
  {
    "text": "with order n squared connections that's",
    "start": "307759",
    "end": "310720"
  },
  {
    "text": "one way of doing it that's the",
    "start": "310720",
    "end": "312080"
  },
  {
    "text": "that's that was the uh istio way of",
    "start": "312080",
    "end": "315280"
  },
  {
    "text": "doing it",
    "start": "315280",
    "end": "316080"
  },
  {
    "text": "um beforehand but a new way is starting",
    "start": "316080",
    "end": "319039"
  },
  {
    "text": "to emerge",
    "start": "319039",
    "end": "319840"
  },
  {
    "text": "which we think is a lot better and",
    "start": "319840",
    "end": "322000"
  },
  {
    "text": "that's the external control point",
    "start": "322000",
    "end": "324000"
  },
  {
    "text": "so in this scenario istio is running",
    "start": "324000",
    "end": "327600"
  },
  {
    "text": "or the service mesh is running on a",
    "start": "327600",
    "end": "330800"
  },
  {
    "text": "management cluster and managing",
    "start": "330800",
    "end": "334400"
  },
  {
    "text": "a bunch of clusters on its own and in",
    "start": "334400",
    "end": "337440"
  },
  {
    "text": "this way",
    "start": "337440",
    "end": "339840"
  },
  {
    "text": "there doesn't need to be a control plane",
    "start": "342240",
    "end": "344320"
  },
  {
    "text": "on each cluster",
    "start": "344320",
    "end": "345520"
  },
  {
    "text": "that needs access to each and every",
    "start": "345520",
    "end": "347680"
  },
  {
    "text": "other cluster",
    "start": "347680",
    "end": "349280"
  },
  {
    "text": "so there are of course downsides to this",
    "start": "349280",
    "end": "351120"
  },
  {
    "text": "scenario",
    "start": "351120",
    "end": "352400"
  },
  {
    "text": "such as if the management cluster were",
    "start": "352400",
    "end": "355840"
  },
  {
    "text": "to go down",
    "start": "355840",
    "end": "357199"
  },
  {
    "text": "then the control plane would also go",
    "start": "357199",
    "end": "359440"
  },
  {
    "text": "down so",
    "start": "359440",
    "end": "360479"
  },
  {
    "text": "it is important to build in redundancy",
    "start": "360479",
    "end": "362639"
  },
  {
    "text": "for the management cluster",
    "start": "362639",
    "end": "364639"
  },
  {
    "text": "but you also reduce the number of",
    "start": "364639",
    "end": "368800"
  },
  {
    "text": "places that need the kube credentials",
    "start": "368800",
    "end": "372240"
  },
  {
    "text": "as well as reducing the load on the api",
    "start": "372240",
    "end": "374720"
  },
  {
    "text": "server",
    "start": "374720",
    "end": "377039"
  },
  {
    "start": "376000",
    "end": "421000"
  },
  {
    "text": "so the external control plane the",
    "start": "377039",
    "end": "379039"
  },
  {
    "text": "control planes are now on a single",
    "start": "379039",
    "end": "380400"
  },
  {
    "text": "cluster and the data planes are still",
    "start": "380400",
    "end": "382240"
  },
  {
    "text": "spread out",
    "start": "382240",
    "end": "383280"
  },
  {
    "text": "now we like to call this the push model",
    "start": "383280",
    "end": "385360"
  },
  {
    "text": "of",
    "start": "385360",
    "end": "386720"
  },
  {
    "text": "configuration there's one centralized",
    "start": "386720",
    "end": "389039"
  },
  {
    "text": "control plane with access to all data",
    "start": "389039",
    "end": "390960"
  },
  {
    "text": "plane clusters so that's order",
    "start": "390960",
    "end": "392479"
  },
  {
    "text": "n connections and",
    "start": "392479",
    "end": "395680"
  },
  {
    "text": "the centralized control plane will be",
    "start": "395680",
    "end": "397280"
  },
  {
    "text": "pushing config out",
    "start": "397280",
    "end": "399199"
  },
  {
    "text": "to the remote clusters each control",
    "start": "399199",
    "end": "402319"
  },
  {
    "text": "plane will still need access",
    "start": "402319",
    "end": "403840"
  },
  {
    "text": "to the api server of each node or remote",
    "start": "403840",
    "end": "406639"
  },
  {
    "text": "cluster",
    "start": "406639",
    "end": "407520"
  },
  {
    "text": "and although the number of network edges",
    "start": "407520",
    "end": "409039"
  },
  {
    "text": "has shrunk the same problems from the",
    "start": "409039",
    "end": "411199"
  },
  {
    "text": "previous model still exist",
    "start": "411199",
    "end": "412639"
  },
  {
    "text": "albeit on a smaller scale still hard to",
    "start": "412639",
    "end": "415360"
  },
  {
    "text": "distribute the",
    "start": "415360",
    "end": "416639"
  },
  {
    "text": "credentials and the leaked credentials",
    "start": "416639",
    "end": "418560"
  },
  {
    "text": "can give bad actors outsized power",
    "start": "418560",
    "end": "422639"
  },
  {
    "start": "421000",
    "end": "442000"
  },
  {
    "text": "so what are our concerns our main",
    "start": "422639",
    "end": "424080"
  },
  {
    "text": "concerns about administering",
    "start": "424080",
    "end": "425840"
  },
  {
    "text": "multi-cluster seo",
    "start": "425840",
    "end": "427199"
  },
  {
    "text": "or service mesh securely one difficult",
    "start": "427199",
    "end": "430560"
  },
  {
    "text": "to store and sync",
    "start": "430560",
    "end": "431680"
  },
  {
    "text": "all of the coupe credentials using",
    "start": "431680",
    "end": "433520"
  },
  {
    "text": "traditional git ops workflows",
    "start": "433520",
    "end": "435599"
  },
  {
    "text": "and two giving a cluster read write",
    "start": "435599",
    "end": "437599"
  },
  {
    "text": "access to many other clusters leaves a",
    "start": "437599",
    "end": "439440"
  },
  {
    "text": "potentially large",
    "start": "439440",
    "end": "440560"
  },
  {
    "text": "security threat so how can we get around",
    "start": "440560",
    "end": "444639"
  },
  {
    "start": "442000",
    "end": "491000"
  },
  {
    "text": "some of these issues",
    "start": "444639",
    "end": "445759"
  },
  {
    "text": "well the way that we thought about it is",
    "start": "445759",
    "end": "449440"
  },
  {
    "text": "something called a pull-based method of",
    "start": "449440",
    "end": "453440"
  },
  {
    "text": "config so if you notice in the previous",
    "start": "453440",
    "end": "456319"
  },
  {
    "text": "diagram",
    "start": "456319",
    "end": "457199"
  },
  {
    "text": "all of the arrows were pointing out to",
    "start": "457199",
    "end": "460240"
  },
  {
    "text": "the",
    "start": "460240",
    "end": "460639"
  },
  {
    "text": "to the remote clusters whereas now",
    "start": "460639",
    "end": "463759"
  },
  {
    "text": "all the arrows are pointing in at the",
    "start": "463759",
    "end": "466240"
  },
  {
    "text": "management cluster",
    "start": "466240",
    "end": "467599"
  },
  {
    "text": "so it's still an external control plane",
    "start": "467599",
    "end": "469759"
  },
  {
    "text": "but it's pull base this time",
    "start": "469759",
    "end": "471840"
  },
  {
    "text": "so this so now all of the remote",
    "start": "471840",
    "end": "474400"
  },
  {
    "text": "clusters are actually creating the",
    "start": "474400",
    "end": "476840"
  },
  {
    "text": "connections to the management plane",
    "start": "476840",
    "end": "479680"
  },
  {
    "text": "so the management plane doesn't need to",
    "start": "479680",
    "end": "481919"
  },
  {
    "text": "have access",
    "start": "481919",
    "end": "483280"
  },
  {
    "text": "to any of the remote clusters",
    "start": "483280",
    "end": "487039"
  },
  {
    "text": "and neither does the service mesh",
    "start": "487280",
    "end": "489919"
  },
  {
    "text": "running there",
    "start": "489919",
    "end": "492639"
  },
  {
    "start": "491000",
    "end": "545000"
  },
  {
    "text": "so what benefits does this bring us well",
    "start": "492639",
    "end": "495840"
  },
  {
    "text": "this pull model of",
    "start": "495840",
    "end": "497199"
  },
  {
    "text": "configuration as i mentioned there's one",
    "start": "497199",
    "end": "499599"
  },
  {
    "text": "centralized",
    "start": "499599",
    "end": "500319"
  },
  {
    "text": "control plane which need act which needs",
    "start": "500319",
    "end": "502000"
  },
  {
    "text": "access to zero",
    "start": "502000",
    "end": "503759"
  },
  {
    "text": "data plane clusters all the data plane",
    "start": "503759",
    "end": "506879"
  },
  {
    "text": "clusters connect to the control plane",
    "start": "506879",
    "end": "508720"
  },
  {
    "text": "cluster and receive updates that way the",
    "start": "508720",
    "end": "511520"
  },
  {
    "text": "config",
    "start": "511520",
    "end": "512000"
  },
  {
    "text": "updates function similarly to the envoy",
    "start": "512000",
    "end": "514159"
  },
  {
    "text": "xds protocol",
    "start": "514159",
    "end": "515680"
  },
  {
    "text": "for those familiar and for those",
    "start": "515680",
    "end": "517279"
  },
  {
    "text": "unfamiliar we will go over that in a",
    "start": "517279",
    "end": "518839"
  },
  {
    "text": "minute",
    "start": "518839",
    "end": "520320"
  },
  {
    "text": "and linked credentials no longer give",
    "start": "520320",
    "end": "522159"
  },
  {
    "text": "the same direct control",
    "start": "522159",
    "end": "523680"
  },
  {
    "text": "over the api server furthermore",
    "start": "523680",
    "end": "527120"
  },
  {
    "text": "no kubernetes credentials need to be",
    "start": "527120",
    "end": "528959"
  },
  {
    "text": "shared outside of the cluster borders",
    "start": "528959",
    "end": "532640"
  },
  {
    "text": "and since we are no longer distributing",
    "start": "532839",
    "end": "535680"
  },
  {
    "text": "these credentials",
    "start": "535680",
    "end": "537360"
  },
  {
    "text": "the the remote components we are",
    "start": "537360",
    "end": "540399"
  },
  {
    "text": "distributing",
    "start": "540399",
    "end": "541360"
  },
  {
    "text": "can be easily stored and distributed via",
    "start": "541360",
    "end": "544000"
  },
  {
    "text": "githubs",
    "start": "544000",
    "end": "546000"
  },
  {
    "start": "545000",
    "end": "703000"
  },
  {
    "text": "so how does this really work well",
    "start": "546000",
    "end": "549200"
  },
  {
    "text": "we took heavy inspiration from envoys",
    "start": "549200",
    "end": "551920"
  },
  {
    "text": "xds protocol",
    "start": "551920",
    "end": "553040"
  },
  {
    "text": "and the kubernetes bootstrap token which",
    "start": "553040",
    "end": "554959"
  },
  {
    "text": "i will explain now",
    "start": "554959",
    "end": "556480"
  },
  {
    "text": "but those links are available from the",
    "start": "556480",
    "end": "558800"
  },
  {
    "text": "slide",
    "start": "558800",
    "end": "559839"
  },
  {
    "text": "the way that the xds protocol works is",
    "start": "559839",
    "end": "563279"
  },
  {
    "text": "essentially envoy makes a connection",
    "start": "563279",
    "end": "567040"
  },
  {
    "text": "to the control plane or the management",
    "start": "567040",
    "end": "568959"
  },
  {
    "text": "server and says",
    "start": "568959",
    "end": "570720"
  },
  {
    "text": "hey i want some config updates and the",
    "start": "570720",
    "end": "573600"
  },
  {
    "text": "management server says",
    "start": "573600",
    "end": "574880"
  },
  {
    "text": "all right great i've got that for you",
    "start": "574880",
    "end": "577600"
  },
  {
    "text": "and so",
    "start": "577600",
    "end": "578160"
  },
  {
    "text": "in that way each remote instance each",
    "start": "578160",
    "end": "581680"
  },
  {
    "text": "envoy",
    "start": "581680",
    "end": "582640"
  },
  {
    "text": "is responsible for creating the",
    "start": "582640",
    "end": "586480"
  },
  {
    "text": "the connection and then the",
    "start": "586480",
    "end": "589519"
  },
  {
    "text": "management server is responsible for",
    "start": "589519",
    "end": "591360"
  },
  {
    "text": "updating envoy",
    "start": "591360",
    "end": "592880"
  },
  {
    "text": "with the config when necessary",
    "start": "592880",
    "end": "596480"
  },
  {
    "text": "and the kubernetes bootstrap token is a",
    "start": "596480",
    "end": "598959"
  },
  {
    "text": "way of verifying",
    "start": "598959",
    "end": "600560"
  },
  {
    "text": "the identity of different callers",
    "start": "600560",
    "end": "604240"
  },
  {
    "text": "so more on that in a second",
    "start": "604240",
    "end": "607519"
  },
  {
    "text": "so how does it really work well in this",
    "start": "607519",
    "end": "610560"
  },
  {
    "text": "case",
    "start": "610560",
    "end": "611120"
  },
  {
    "text": "the server would live in is our",
    "start": "611120",
    "end": "613680"
  },
  {
    "text": "management plane that is the component",
    "start": "613680",
    "end": "615839"
  },
  {
    "text": "living",
    "start": "615839",
    "end": "616320"
  },
  {
    "text": "in the in the management cluster and the",
    "start": "616320",
    "end": "619200"
  },
  {
    "text": "agent",
    "start": "619200",
    "end": "619680"
  },
  {
    "text": "and the agent is the component that gets",
    "start": "619680",
    "end": "621839"
  },
  {
    "text": "deployed to each remote cluster",
    "start": "621839",
    "end": "624079"
  },
  {
    "text": "or each data plane cluster",
    "start": "624079",
    "end": "627279"
  },
  {
    "text": "so we start off with a ca or signing",
    "start": "627279",
    "end": "630560"
  },
  {
    "text": "cert",
    "start": "630560",
    "end": "631920"
  },
  {
    "text": "on the server and a server cert on both",
    "start": "631920",
    "end": "633760"
  },
  {
    "text": "the agent and the server",
    "start": "633760",
    "end": "635920"
  },
  {
    "text": "and the server cert will be used to",
    "start": "635920",
    "end": "637600"
  },
  {
    "text": "establish the initial tls",
    "start": "637600",
    "end": "640160"
  },
  {
    "text": "connection in addition we distribute a",
    "start": "640160",
    "end": "642399"
  },
  {
    "text": "bootstrap token to",
    "start": "642399",
    "end": "643519"
  },
  {
    "text": "both clusters and this bootstrap token",
    "start": "643519",
    "end": "646079"
  },
  {
    "text": "will be used in the initial",
    "start": "646079",
    "end": "648000"
  },
  {
    "text": "request with the token so that the",
    "start": "648000",
    "end": "650399"
  },
  {
    "text": "server",
    "start": "650399",
    "end": "651279"
  },
  {
    "text": "knows to trust the agent and then can",
    "start": "651279",
    "end": "655120"
  },
  {
    "text": "and then once it knows it can trust the",
    "start": "655120",
    "end": "656800"
  },
  {
    "text": "agent it will respond",
    "start": "656800",
    "end": "658720"
  },
  {
    "text": "with its mtls cert and it's with the",
    "start": "658720",
    "end": "661760"
  },
  {
    "text": "identity and this mtls cert is",
    "start": "661760",
    "end": "664959"
  },
  {
    "text": "how the server knows what data to send",
    "start": "664959",
    "end": "668720"
  },
  {
    "text": "back to the agent so once that identity",
    "start": "668720",
    "end": "671120"
  },
  {
    "text": "has been",
    "start": "671120",
    "end": "672839"
  },
  {
    "text": "uh provided",
    "start": "672839",
    "end": "675360"
  },
  {
    "text": "then we can open our uh our",
    "start": "675360",
    "end": "678399"
  },
  {
    "text": "config streams so the first one we have",
    "start": "678399",
    "end": "682000"
  },
  {
    "text": "is a remote resource stream and this",
    "start": "682000",
    "end": "684720"
  },
  {
    "text": "will stream",
    "start": "684720",
    "end": "685760"
  },
  {
    "text": "the resources from the dataplane",
    "start": "685760",
    "end": "687600"
  },
  {
    "text": "clusters from the agent to the server",
    "start": "687600",
    "end": "689680"
  },
  {
    "text": "so that it can make decisions about the",
    "start": "689680",
    "end": "691839"
  },
  {
    "text": "system",
    "start": "691839",
    "end": "693680"
  },
  {
    "text": "and then the second one will stream the",
    "start": "693680",
    "end": "695839"
  },
  {
    "text": "mesh config",
    "start": "695839",
    "end": "696720"
  },
  {
    "text": "or the config needed to run the data",
    "start": "696720",
    "end": "699040"
  },
  {
    "text": "planes",
    "start": "699040",
    "end": "699760"
  },
  {
    "text": "to the agent clusters",
    "start": "699760",
    "end": "703839"
  },
  {
    "start": "703000",
    "end": "761000"
  },
  {
    "text": "so can the pull model really solve all",
    "start": "704000",
    "end": "705839"
  },
  {
    "text": "of our problems short answer",
    "start": "705839",
    "end": "707920"
  },
  {
    "text": "no but it does alleviate the two main",
    "start": "707920",
    "end": "711040"
  },
  {
    "text": "issues that we",
    "start": "711040",
    "end": "712000"
  },
  {
    "text": "began to discuss a few slides back",
    "start": "712000",
    "end": "715360"
  },
  {
    "text": "the first being giving a cluster read",
    "start": "715360",
    "end": "717040"
  },
  {
    "text": "write access to many other clusters",
    "start": "717040",
    "end": "718800"
  },
  {
    "text": "leaves a potentially large",
    "start": "718800",
    "end": "720399"
  },
  {
    "text": "security threat well since our control",
    "start": "720399",
    "end": "723120"
  },
  {
    "text": "planes no longer need direct access to",
    "start": "723120",
    "end": "725360"
  },
  {
    "text": "remote api servers",
    "start": "725360",
    "end": "726880"
  },
  {
    "text": "the kubernetes credentials no longer",
    "start": "726880",
    "end": "728560"
  },
  {
    "text": "need to leave cluster boundaries",
    "start": "728560",
    "end": "730959"
  },
  {
    "text": "this reduces the chance that a bad actor",
    "start": "730959",
    "end": "732880"
  },
  {
    "text": "gets elevated access",
    "start": "732880",
    "end": "734160"
  },
  {
    "text": "to the system and reduces the load on",
    "start": "734160",
    "end": "736880"
  },
  {
    "text": "the api server",
    "start": "736880",
    "end": "737920"
  },
  {
    "text": "by reducing the number of clients the",
    "start": "737920",
    "end": "741120"
  },
  {
    "text": "second",
    "start": "741120",
    "end": "742000"
  },
  {
    "text": "difficult to store and sync all these",
    "start": "742000",
    "end": "744240"
  },
  {
    "text": "cube credentials",
    "start": "744240",
    "end": "745120"
  },
  {
    "text": "using github's workflows well luckily",
    "start": "745120",
    "end": "747839"
  },
  {
    "text": "there's no longer any need to store or",
    "start": "747839",
    "end": "749600"
  },
  {
    "text": "sync these coup credentials",
    "start": "749600",
    "end": "751360"
  },
  {
    "text": "uh on top of which the the components",
    "start": "751360",
    "end": "753519"
  },
  {
    "text": "that do need to be synced",
    "start": "753519",
    "end": "754720"
  },
  {
    "text": "mainly the agent and the token can",
    "start": "754720",
    "end": "757680"
  },
  {
    "text": "easily be integrated with get ops",
    "start": "757680",
    "end": "759680"
  },
  {
    "text": "see part two of the talk so what were",
    "start": "759680",
    "end": "762800"
  },
  {
    "start": "761000",
    "end": "775000"
  },
  {
    "text": "those question marks that we were",
    "start": "762800",
    "end": "763760"
  },
  {
    "text": "talking about earlier well it just so",
    "start": "763760",
    "end": "765519"
  },
  {
    "text": "happens that we at solo i o have created",
    "start": "765519",
    "end": "767519"
  },
  {
    "text": "a product called glue mesh",
    "start": "767519",
    "end": "769279"
  },
  {
    "text": "which can which can handle this but more",
    "start": "769279",
    "end": "771519"
  },
  {
    "text": "on that later",
    "start": "771519",
    "end": "772560"
  },
  {
    "text": "for now i'm going to kick it over to",
    "start": "772560",
    "end": "774959"
  },
  {
    "text": "eric",
    "start": "774959",
    "end": "777279"
  },
  {
    "text": "thank you eton so next i want to talk",
    "start": "778240",
    "end": "780480"
  },
  {
    "text": "about",
    "start": "780480",
    "end": "781360"
  },
  {
    "text": "how you can deploy glue mesh securely",
    "start": "781360",
    "end": "784480"
  },
  {
    "text": "across multiple clusters",
    "start": "784480",
    "end": "786480"
  },
  {
    "text": "using git ops and argo cd",
    "start": "786480",
    "end": "790240"
  },
  {
    "start": "790000",
    "end": "864000"
  },
  {
    "text": "so i have a demo i want to show you",
    "start": "791839",
    "end": "793360"
  },
  {
    "text": "today and in that demo i have two",
    "start": "793360",
    "end": "795120"
  },
  {
    "text": "clusters running i have a management",
    "start": "795120",
    "end": "796959"
  },
  {
    "text": "cluster and on that management cluster i",
    "start": "796959",
    "end": "798720"
  },
  {
    "text": "have argo cd deployed",
    "start": "798720",
    "end": "800399"
  },
  {
    "text": "i'm going to use argo cd to deploy",
    "start": "800399",
    "end": "803040"
  },
  {
    "text": "configuration",
    "start": "803040",
    "end": "804160"
  },
  {
    "text": "from a git repository and automate the",
    "start": "804160",
    "end": "806800"
  },
  {
    "text": "deployment of the glue mesh management",
    "start": "806800",
    "end": "808720"
  },
  {
    "text": "plane",
    "start": "808720",
    "end": "810000"
  },
  {
    "text": "on the remote cluster i have a separate",
    "start": "810000",
    "end": "812240"
  },
  {
    "text": "instance of argo cd running and i'm",
    "start": "812240",
    "end": "814079"
  },
  {
    "text": "going to use configuration there",
    "start": "814079",
    "end": "815920"
  },
  {
    "text": "to deploy the agent automatically",
    "start": "815920",
    "end": "819760"
  },
  {
    "text": "so there are multiple benefits here to",
    "start": "819760",
    "end": "821600"
  },
  {
    "text": "this approach where you can take",
    "start": "821600",
    "end": "822959"
  },
  {
    "text": "configuration as code you can store",
    "start": "822959",
    "end": "824959"
  },
  {
    "text": "everything in your git repository",
    "start": "824959",
    "end": "827040"
  },
  {
    "text": "and you can have a repeatable deployment",
    "start": "827040",
    "end": "829360"
  },
  {
    "text": "process",
    "start": "829360",
    "end": "830240"
  },
  {
    "text": "for both the glue mesh management plane",
    "start": "830240",
    "end": "832399"
  },
  {
    "text": "and the agent",
    "start": "832399",
    "end": "833600"
  },
  {
    "text": "and this allows you to automatically",
    "start": "833600",
    "end": "835440"
  },
  {
    "text": "update your glue mesh deployments with",
    "start": "835440",
    "end": "837680"
  },
  {
    "text": "that configuration",
    "start": "837680",
    "end": "838959"
  },
  {
    "text": "with argo cd additionally if you need to",
    "start": "838959",
    "end": "842079"
  },
  {
    "text": "spin up new clusters",
    "start": "842079",
    "end": "843680"
  },
  {
    "text": "and deploy new meshes you can do it in",
    "start": "843680",
    "end": "846480"
  },
  {
    "text": "an automated way",
    "start": "846480",
    "end": "847920"
  },
  {
    "text": "more quickly and more effectively",
    "start": "847920",
    "end": "850800"
  },
  {
    "text": "additionally in a disaster recovery",
    "start": "850800",
    "end": "853040"
  },
  {
    "text": "scenario",
    "start": "853040",
    "end": "853920"
  },
  {
    "text": "you want to be able to replace your",
    "start": "853920",
    "end": "855600"
  },
  {
    "text": "clusters and your meshes as quickly as",
    "start": "855600",
    "end": "857600"
  },
  {
    "text": "possible",
    "start": "857600",
    "end": "858399"
  },
  {
    "text": "and you can do that with this approach",
    "start": "858399",
    "end": "860639"
  },
  {
    "text": "even including that management cluster",
    "start": "860639",
    "end": "864240"
  },
  {
    "start": "864000",
    "end": "990000"
  },
  {
    "text": "okay so now let's jump into the demo",
    "start": "864240",
    "end": "868800"
  },
  {
    "text": "so what i'm going to show here in this",
    "start": "868800",
    "end": "870560"
  },
  {
    "text": "demo is actually how to physically",
    "start": "870560",
    "end": "872399"
  },
  {
    "text": "deploy",
    "start": "872399",
    "end": "873360"
  },
  {
    "text": "glue mesh using argo cd okay",
    "start": "873360",
    "end": "876880"
  },
  {
    "text": "and so to do that i have some",
    "start": "876880",
    "end": "878440"
  },
  {
    "text": "configurations uh",
    "start": "878440",
    "end": "880720"
  },
  {
    "text": "checked into my git repository",
    "start": "880720",
    "end": "882240"
  },
  {
    "text": "everything is deployed from a git",
    "start": "882240",
    "end": "883680"
  },
  {
    "text": "repository",
    "start": "883680",
    "end": "885040"
  },
  {
    "text": "using argo cd and in that git repository",
    "start": "885040",
    "end": "888000"
  },
  {
    "text": "i have crds",
    "start": "888000",
    "end": "889120"
  },
  {
    "text": "that are specific to argo cd and so this",
    "start": "889120",
    "end": "892480"
  },
  {
    "text": "is an",
    "start": "892480",
    "end": "892880"
  },
  {
    "text": "application crt and inside of that",
    "start": "892880",
    "end": "895680"
  },
  {
    "text": "application crd you can actually define",
    "start": "895680",
    "end": "898560"
  },
  {
    "text": "values for a helm chart so behind the",
    "start": "898560",
    "end": "902079"
  },
  {
    "text": "scenes argo cd is actually using helm",
    "start": "902079",
    "end": "904880"
  },
  {
    "text": "to deploy the glue mesh management plane",
    "start": "904880",
    "end": "907519"
  },
  {
    "text": "and the agent",
    "start": "907519",
    "end": "908639"
  },
  {
    "text": "so in this case i'm using the glue mesh",
    "start": "908639",
    "end": "911120"
  },
  {
    "text": "enterprise chart",
    "start": "911120",
    "end": "912480"
  },
  {
    "text": "right and i'm setting a license key",
    "start": "912480",
    "end": "916079"
  },
  {
    "text": "and some other values such as self sign",
    "start": "916079",
    "end": "919199"
  },
  {
    "text": "equals false",
    "start": "919199",
    "end": "920240"
  },
  {
    "text": "that means i'm providing the",
    "start": "920240",
    "end": "921600"
  },
  {
    "text": "certificates in advance",
    "start": "921600",
    "end": "923360"
  },
  {
    "text": "of the installation i'm not depending on",
    "start": "923360",
    "end": "925839"
  },
  {
    "text": "glue mesh",
    "start": "925839",
    "end": "926480"
  },
  {
    "text": "to generate certificates on its own okay",
    "start": "926480",
    "end": "930480"
  },
  {
    "text": "and then if i go over to this other",
    "start": "930480",
    "end": "932160"
  },
  {
    "text": "application crd i can see",
    "start": "932160",
    "end": "934160"
  },
  {
    "text": "the helm chart for deploying the agent",
    "start": "934160",
    "end": "937920"
  },
  {
    "text": "and so here the chart is enterprise",
    "start": "937920",
    "end": "940160"
  },
  {
    "text": "agent",
    "start": "940160",
    "end": "941519"
  },
  {
    "text": "and i'm giving it a server address for",
    "start": "941519",
    "end": "944160"
  },
  {
    "text": "the management cluster i'm giving it",
    "start": "944160",
    "end": "946079"
  },
  {
    "text": "an authority for the certificates that",
    "start": "946079",
    "end": "948639"
  },
  {
    "text": "are used",
    "start": "948639",
    "end": "949600"
  },
  {
    "text": "and i'm giving it a cluster name which",
    "start": "949600",
    "end": "951600"
  },
  {
    "text": "is simply remote cluster okay",
    "start": "951600",
    "end": "955360"
  },
  {
    "text": "so now let me walk you through the steps",
    "start": "955360",
    "end": "957199"
  },
  {
    "text": "for actually conducting the",
    "start": "957199",
    "end": "959120"
  },
  {
    "text": "deployment with argo cd okay so first",
    "start": "959120",
    "end": "962079"
  },
  {
    "text": "i'm going to switch",
    "start": "962079",
    "end": "963040"
  },
  {
    "text": "my cubecodal context over to the",
    "start": "963040",
    "end": "965759"
  },
  {
    "text": "management cluster",
    "start": "965759",
    "end": "968320"
  },
  {
    "text": "next i'm going to create a new namespace",
    "start": "968320",
    "end": "970560"
  },
  {
    "text": "for glue mesh on that management cluster",
    "start": "970560",
    "end": "974639"
  },
  {
    "text": "next i'm actually going to kick off the",
    "start": "975040",
    "end": "977360"
  },
  {
    "text": "deployment of",
    "start": "977360",
    "end": "979279"
  },
  {
    "text": "the glue mesh management plane using",
    "start": "979279",
    "end": "981600"
  },
  {
    "text": "argo cd and i can do that by simply",
    "start": "981600",
    "end": "984160"
  },
  {
    "text": "doing a cube cuddle apply on that",
    "start": "984160",
    "end": "986240"
  },
  {
    "text": "application crd",
    "start": "986240",
    "end": "989519"
  },
  {
    "start": "990000",
    "end": "1122000"
  },
  {
    "text": "okay so that's done so what i can do is",
    "start": "990240",
    "end": "992959"
  },
  {
    "text": "go over here and log into the argo cd",
    "start": "992959",
    "end": "995839"
  },
  {
    "text": "deployment",
    "start": "995839",
    "end": "997360"
  },
  {
    "text": "on my management cluster and you can see",
    "start": "997360",
    "end": "1001360"
  },
  {
    "text": "how quickly that was actually deployed",
    "start": "1001360",
    "end": "1003519"
  },
  {
    "text": "everything is synced and healthy already",
    "start": "1003519",
    "end": "1005440"
  },
  {
    "text": "in a matter of seconds",
    "start": "1005440",
    "end": "1007120"
  },
  {
    "text": "and if i click in here i can see",
    "start": "1007120",
    "end": "1008800"
  },
  {
    "text": "everything that was deployed",
    "start": "1008800",
    "end": "1010560"
  },
  {
    "text": "for the glue mesh management plane okay",
    "start": "1010560",
    "end": "1013839"
  },
  {
    "text": "so you can see there's",
    "start": "1013839",
    "end": "1015199"
  },
  {
    "text": "a lot of different things deployed here",
    "start": "1015199",
    "end": "1017279"
  },
  {
    "text": "right everything is green",
    "start": "1017279",
    "end": "1019920"
  },
  {
    "text": "everything is deployed everything is",
    "start": "1019920",
    "end": "1021519"
  },
  {
    "text": "healthy include all the pods for the",
    "start": "1021519",
    "end": "1023199"
  },
  {
    "text": "dashboard",
    "start": "1023199",
    "end": "1024319"
  },
  {
    "text": "the enterprise networking and so",
    "start": "1024319",
    "end": "1027918"
  },
  {
    "text": "that all looks good as you can imagine",
    "start": "1027919",
    "end": "1030480"
  },
  {
    "text": "in a glue mesh",
    "start": "1030480",
    "end": "1031600"
  },
  {
    "text": "the management plan is you know a little",
    "start": "1031600",
    "end": "1033360"
  },
  {
    "text": "bit complicated because",
    "start": "1033360",
    "end": "1035120"
  },
  {
    "text": "it does manage multiple clusters with",
    "start": "1035120",
    "end": "1038240"
  },
  {
    "text": "multiple meshes",
    "start": "1038240",
    "end": "1039438"
  },
  {
    "text": "and so there are a lot of capabilities",
    "start": "1039439",
    "end": "1041280"
  },
  {
    "text": "built into it",
    "start": "1041280",
    "end": "1042720"
  },
  {
    "text": "then if i step out here and look at the",
    "start": "1042720",
    "end": "1044480"
  },
  {
    "text": "rest of my application deployment i can",
    "start": "1044480",
    "end": "1046558"
  },
  {
    "text": "see",
    "start": "1046559",
    "end": "1047038"
  },
  {
    "text": "configurations for the glue mesh",
    "start": "1047039",
    "end": "1049280"
  },
  {
    "text": "management plane",
    "start": "1049280",
    "end": "1050640"
  },
  {
    "text": "so here i can see that there is a",
    "start": "1050640",
    "end": "1054160"
  },
  {
    "text": "writ certificate that is stored in a",
    "start": "1054160",
    "end": "1056000"
  },
  {
    "text": "secret i can see that there",
    "start": "1056000",
    "end": "1058480"
  },
  {
    "text": "is a tls certificate for",
    "start": "1058480",
    "end": "1061600"
  },
  {
    "text": "securing connection between the",
    "start": "1061600",
    "end": "1064720"
  },
  {
    "text": "remote cluster and the management",
    "start": "1064720",
    "end": "1066240"
  },
  {
    "text": "cluster there is a",
    "start": "1066240",
    "end": "1068000"
  },
  {
    "text": "signing certificate also stored in the",
    "start": "1068000",
    "end": "1069919"
  },
  {
    "text": "secret and that allows",
    "start": "1069919",
    "end": "1071919"
  },
  {
    "text": "the glue mesh management plane to",
    "start": "1071919",
    "end": "1074320"
  },
  {
    "text": "generate",
    "start": "1074320",
    "end": "1074960"
  },
  {
    "text": "new certificates that can be passed to",
    "start": "1074960",
    "end": "1077919"
  },
  {
    "text": "remote clusters",
    "start": "1077919",
    "end": "1079520"
  },
  {
    "text": "to establish an mtls secure connection",
    "start": "1079520",
    "end": "1082960"
  },
  {
    "text": "okay also there",
    "start": "1082960",
    "end": "1086000"
  },
  {
    "text": "is a token that is created and i",
    "start": "1086000",
    "end": "1088960"
  },
  {
    "text": "provided this token in advance",
    "start": "1088960",
    "end": "1091440"
  },
  {
    "text": "so that token is deployed with",
    "start": "1091440",
    "end": "1094640"
  },
  {
    "text": "the glue mesh agent and that is used",
    "start": "1094640",
    "end": "1098480"
  },
  {
    "text": "for making that initial connection from",
    "start": "1098480",
    "end": "1100799"
  },
  {
    "text": "the remote cluster",
    "start": "1100799",
    "end": "1102480"
  },
  {
    "text": "to the management cluster as that was",
    "start": "1102480",
    "end": "1105039"
  },
  {
    "text": "discussed previously",
    "start": "1105039",
    "end": "1107360"
  },
  {
    "text": "finally i have a configuration called",
    "start": "1107360",
    "end": "1110240"
  },
  {
    "text": "kubernetes cluster",
    "start": "1110240",
    "end": "1111840"
  },
  {
    "text": "and that simply defines the remote",
    "start": "1111840",
    "end": "1113840"
  },
  {
    "text": "cluster that",
    "start": "1113840",
    "end": "1115280"
  },
  {
    "text": "is uh configured to be registered",
    "start": "1115280",
    "end": "1118880"
  },
  {
    "text": "by the agent and i'll walk through how",
    "start": "1118880",
    "end": "1120640"
  },
  {
    "text": "that works okay",
    "start": "1120640",
    "end": "1122880"
  },
  {
    "start": "1122000",
    "end": "1196000"
  },
  {
    "text": "so let me go over here to my console and",
    "start": "1122880",
    "end": "1125679"
  },
  {
    "text": "i'm actually going to",
    "start": "1125679",
    "end": "1127120"
  },
  {
    "text": "kick off the mesh cuddle command",
    "start": "1127120",
    "end": "1131520"
  },
  {
    "text": "and so that will allow me to see",
    "start": "1131520",
    "end": "1134559"
  },
  {
    "text": "what is currently um running what is",
    "start": "1134559",
    "end": "1137280"
  },
  {
    "text": "currently registered",
    "start": "1137280",
    "end": "1138960"
  },
  {
    "text": "um in the glue mesh management plane",
    "start": "1138960",
    "end": "1141440"
  },
  {
    "text": "okay so",
    "start": "1141440",
    "end": "1142960"
  },
  {
    "text": "as i mentioned before there is a",
    "start": "1142960",
    "end": "1144880"
  },
  {
    "text": "kubernetes cluster crd",
    "start": "1144880",
    "end": "1147440"
  },
  {
    "text": "you can see that uh the cluster is there",
    "start": "1147440",
    "end": "1149919"
  },
  {
    "text": "right",
    "start": "1149919",
    "end": "1151360"
  },
  {
    "text": "but if i go in here there are no meshes",
    "start": "1151360",
    "end": "1154240"
  },
  {
    "text": "that were discovered right",
    "start": "1154240",
    "end": "1155840"
  },
  {
    "text": "and that is because the agent has not",
    "start": "1155840",
    "end": "1158000"
  },
  {
    "text": "yet completed",
    "start": "1158000",
    "end": "1159440"
  },
  {
    "text": "registration with the glue mesh",
    "start": "1159440",
    "end": "1161200"
  },
  {
    "text": "management plane okay",
    "start": "1161200",
    "end": "1163280"
  },
  {
    "text": "and so that is going to be the next part",
    "start": "1163280",
    "end": "1164880"
  },
  {
    "text": "of the demo",
    "start": "1164880",
    "end": "1167440"
  },
  {
    "text": "okay so let me go back over here and so",
    "start": "1167760",
    "end": "1170960"
  },
  {
    "text": "what i'm going to do is i'm going to",
    "start": "1170960",
    "end": "1172640"
  },
  {
    "text": "change my cube cuddle context",
    "start": "1172640",
    "end": "1175280"
  },
  {
    "text": "to b for the remote cluster",
    "start": "1175280",
    "end": "1179760"
  },
  {
    "text": "i'm going to also create a glue mesh",
    "start": "1179760",
    "end": "1182240"
  },
  {
    "text": "namespace there",
    "start": "1182240",
    "end": "1185200"
  },
  {
    "text": "and i'm going to deploy that other",
    "start": "1185360",
    "end": "1187919"
  },
  {
    "text": "application crd specific to the glue",
    "start": "1187919",
    "end": "1190320"
  },
  {
    "text": "mesh agent okay",
    "start": "1190320",
    "end": "1192240"
  },
  {
    "text": "so let me paste that in there",
    "start": "1192240",
    "end": "1195440"
  },
  {
    "text": "there we go all right so now let me go",
    "start": "1195440",
    "end": "1198480"
  },
  {
    "text": "over",
    "start": "1198480",
    "end": "1198880"
  },
  {
    "text": "and log into the other instance of vargo",
    "start": "1198880",
    "end": "1201600"
  },
  {
    "text": "cd this is not the same argo cd this is",
    "start": "1201600",
    "end": "1203600"
  },
  {
    "text": "the one deployed on the remote cluster",
    "start": "1203600",
    "end": "1205520"
  },
  {
    "text": "okay",
    "start": "1205520",
    "end": "1206400"
  },
  {
    "text": "so i'm going to click sign in here and",
    "start": "1206400",
    "end": "1209440"
  },
  {
    "text": "here you can see that",
    "start": "1209440",
    "end": "1210880"
  },
  {
    "text": "um everything that is needed for",
    "start": "1210880",
    "end": "1214159"
  },
  {
    "text": "the glue mesh agent is deployed right",
    "start": "1214159",
    "end": "1217200"
  },
  {
    "text": "so that also happened very quickly in a",
    "start": "1217200",
    "end": "1219039"
  },
  {
    "text": "matter of seconds you can see that",
    "start": "1219039",
    "end": "1220880"
  },
  {
    "text": "there's a",
    "start": "1220880",
    "end": "1221679"
  },
  {
    "text": "enterprise agent pod that's running",
    "start": "1221679",
    "end": "1223919"
  },
  {
    "text": "right here",
    "start": "1223919",
    "end": "1224960"
  },
  {
    "text": "so that is green that is healthy so",
    "start": "1224960",
    "end": "1227760"
  },
  {
    "text": "everything looks good for the",
    "start": "1227760",
    "end": "1229600"
  },
  {
    "text": "glue mesh agent deployment then if i go",
    "start": "1229600",
    "end": "1231919"
  },
  {
    "text": "over here and look at the rest of my",
    "start": "1231919",
    "end": "1233679"
  },
  {
    "text": "deployment",
    "start": "1233679",
    "end": "1234720"
  },
  {
    "text": "i can see the actual configurations that",
    "start": "1234720",
    "end": "1237120"
  },
  {
    "text": "are residing in that",
    "start": "1237120",
    "end": "1238320"
  },
  {
    "text": "git repository deployed by glue mesh",
    "start": "1238320",
    "end": "1241120"
  },
  {
    "text": "okay",
    "start": "1241120",
    "end": "1241520"
  },
  {
    "text": "so if you look here",
    "start": "1241520",
    "end": "1244559"
  },
  {
    "text": "um there is a secret that is deployed",
    "start": "1244559",
    "end": "1247520"
  },
  {
    "text": "with that wrist certificate right",
    "start": "1247520",
    "end": "1250080"
  },
  {
    "text": "and there's also that identity token",
    "start": "1250080",
    "end": "1252400"
  },
  {
    "text": "secret",
    "start": "1252400",
    "end": "1253200"
  },
  {
    "text": "so that is the same token that was",
    "start": "1253200",
    "end": "1256559"
  },
  {
    "text": "deployed",
    "start": "1256559",
    "end": "1257360"
  },
  {
    "text": "on the management cluster and once again",
    "start": "1257360",
    "end": "1260000"
  },
  {
    "text": "that token",
    "start": "1260000",
    "end": "1260720"
  },
  {
    "text": "is used to authenticate the remote",
    "start": "1260720",
    "end": "1263600"
  },
  {
    "text": "cluster with the management cluster",
    "start": "1263600",
    "end": "1265679"
  },
  {
    "text": "and establish that initial connection",
    "start": "1265679",
    "end": "1268559"
  },
  {
    "text": "with the management plane",
    "start": "1268559",
    "end": "1270240"
  },
  {
    "text": "for glue mesh okay and when that happens",
    "start": "1270240",
    "end": "1273200"
  },
  {
    "text": "it receives back an",
    "start": "1273200",
    "end": "1274480"
  },
  {
    "text": "mtls certificate and a new connection is",
    "start": "1274480",
    "end": "1277280"
  },
  {
    "text": "established",
    "start": "1277280",
    "end": "1278240"
  },
  {
    "text": "so there is a fully secure connection",
    "start": "1278240",
    "end": "1281760"
  },
  {
    "text": "for the glue mesh agent okay",
    "start": "1281760",
    "end": "1285760"
  },
  {
    "text": "and one thing i want to call out here",
    "start": "1285760",
    "end": "1287280"
  },
  {
    "text": "you know just for demo purposes i'm",
    "start": "1287280",
    "end": "1288960"
  },
  {
    "text": "putting the certificates",
    "start": "1288960",
    "end": "1291039"
  },
  {
    "text": "into git you know for the risk",
    "start": "1291039",
    "end": "1292720"
  },
  {
    "text": "certificate that is not the best",
    "start": "1292720",
    "end": "1294640"
  },
  {
    "text": "practice",
    "start": "1294640",
    "end": "1295520"
  },
  {
    "text": "instead you could use um remote secrets",
    "start": "1295520",
    "end": "1298240"
  },
  {
    "text": "you could integrate with hashicorp vault",
    "start": "1298240",
    "end": "1300080"
  },
  {
    "text": "you can integrate with your",
    "start": "1300080",
    "end": "1301760"
  },
  {
    "text": "cloud provider with their certificate",
    "start": "1301760",
    "end": "1303600"
  },
  {
    "text": "management services",
    "start": "1303600",
    "end": "1305760"
  },
  {
    "text": "so once again that's just for demo",
    "start": "1305760",
    "end": "1307280"
  },
  {
    "text": "purposes okay",
    "start": "1307280",
    "end": "1310240"
  },
  {
    "start": "1309000",
    "end": "1338000"
  },
  {
    "text": "um and by the way um you know all this",
    "start": "1310240",
    "end": "1312480"
  },
  {
    "text": "is stored in in the git repository as i",
    "start": "1312480",
    "end": "1314640"
  },
  {
    "text": "mentioned so if you go in here",
    "start": "1314640",
    "end": "1316640"
  },
  {
    "text": "you know you can look and you can see",
    "start": "1316640",
    "end": "1318400"
  },
  {
    "text": "you know these configurations for",
    "start": "1318400",
    "end": "1320799"
  },
  {
    "text": "the glue mesh agent you can see like the",
    "start": "1320799",
    "end": "1323520"
  },
  {
    "text": "token",
    "start": "1323520",
    "end": "1324080"
  },
  {
    "text": "the token value right here right you can",
    "start": "1324080",
    "end": "1327200"
  },
  {
    "text": "see",
    "start": "1327200",
    "end": "1327600"
  },
  {
    "text": "the um the root tls secret you can see",
    "start": "1327600",
    "end": "1330799"
  },
  {
    "text": "the ca cert right",
    "start": "1330799",
    "end": "1332000"
  },
  {
    "text": "here right so all that is deployed using",
    "start": "1332000",
    "end": "1336000"
  },
  {
    "text": "that that get ops approach",
    "start": "1336000",
    "end": "1337520"
  },
  {
    "text": "okay okay so since we deployed that",
    "start": "1337520",
    "end": "1341360"
  },
  {
    "start": "1338000",
    "end": "1408000"
  },
  {
    "text": "agent",
    "start": "1341360",
    "end": "1342400"
  },
  {
    "text": "uh it should be registered so let's go",
    "start": "1342400",
    "end": "1344400"
  },
  {
    "text": "back and look at the glue",
    "start": "1344400",
    "end": "1346080"
  },
  {
    "text": "mesh console again and you can see",
    "start": "1346080",
    "end": "1349600"
  },
  {
    "text": "now that under meshes right here",
    "start": "1349600",
    "end": "1352960"
  },
  {
    "text": "i actually have a mesh that's registered",
    "start": "1352960",
    "end": "1354720"
  },
  {
    "text": "right it's this sdod",
    "start": "1354720",
    "end": "1356880"
  },
  {
    "text": "istio system remote cluster right here",
    "start": "1356880",
    "end": "1358880"
  },
  {
    "text": "right",
    "start": "1358880",
    "end": "1360080"
  },
  {
    "text": "and the mesh health is green and i can",
    "start": "1360080",
    "end": "1363440"
  },
  {
    "text": "see that",
    "start": "1363440",
    "end": "1364400"
  },
  {
    "text": "there are some destinations that were",
    "start": "1364400",
    "end": "1366799"
  },
  {
    "text": "automatically discovered on that remote",
    "start": "1366799",
    "end": "1368640"
  },
  {
    "text": "cluster",
    "start": "1368640",
    "end": "1369440"
  },
  {
    "text": "keep in mind this glue mesh console is",
    "start": "1369440",
    "end": "1371440"
  },
  {
    "text": "running on the management cluster",
    "start": "1371440",
    "end": "1373440"
  },
  {
    "text": "so if i go in here and look at the mesh",
    "start": "1373440",
    "end": "1376720"
  },
  {
    "text": "details",
    "start": "1376720",
    "end": "1378080"
  },
  {
    "text": "i can see that there is a destination",
    "start": "1378080",
    "end": "1380799"
  },
  {
    "text": "for the pet store application i deployed",
    "start": "1380799",
    "end": "1382799"
  },
  {
    "text": "that pet store application",
    "start": "1382799",
    "end": "1384880"
  },
  {
    "text": "in advance of this demo it is part of",
    "start": "1384880",
    "end": "1387919"
  },
  {
    "text": "that",
    "start": "1387919",
    "end": "1388400"
  },
  {
    "text": "service mesh uh offered by istio on that",
    "start": "1388400",
    "end": "1391440"
  },
  {
    "text": "cluster",
    "start": "1391440",
    "end": "1392640"
  },
  {
    "text": "uh the side cars were automatically",
    "start": "1392640",
    "end": "1394559"
  },
  {
    "text": "ingest injected",
    "start": "1394559",
    "end": "1396000"
  },
  {
    "text": "into the pods and so that was",
    "start": "1396000",
    "end": "1399120"
  },
  {
    "text": "um how the pet store was automatically",
    "start": "1399120",
    "end": "1403760"
  },
  {
    "text": "discovered",
    "start": "1403760",
    "end": "1404960"
  },
  {
    "text": "uh by glue mesh okay",
    "start": "1404960",
    "end": "1408640"
  },
  {
    "start": "1408000",
    "end": "1478000"
  },
  {
    "text": "so that wraps up the demo so let me go",
    "start": "1408880",
    "end": "1412159"
  },
  {
    "text": "back to the slides and just finish up",
    "start": "1412159",
    "end": "1414840"
  },
  {
    "text": "here",
    "start": "1414840",
    "end": "1416799"
  },
  {
    "text": "so glue mesh is a really awesome",
    "start": "1416799",
    "end": "1419840"
  },
  {
    "text": "product for providing that multi-cluster",
    "start": "1419840",
    "end": "1422640"
  },
  {
    "text": "multi-mesh management right",
    "start": "1422640",
    "end": "1424880"
  },
  {
    "text": "but solo offers other products that",
    "start": "1424880",
    "end": "1428240"
  },
  {
    "text": "integrate with kubernetes integrate with",
    "start": "1428240",
    "end": "1431200"
  },
  {
    "text": "service mesh",
    "start": "1431200",
    "end": "1432400"
  },
  {
    "text": "so we actually have an api gateway",
    "start": "1432400",
    "end": "1434799"
  },
  {
    "text": "product called glue",
    "start": "1434799",
    "end": "1436000"
  },
  {
    "text": "edge that offers integrations with istio",
    "start": "1436000",
    "end": "1439760"
  },
  {
    "text": "we also have something called the glue",
    "start": "1439760",
    "end": "1441760"
  },
  {
    "text": "portal so that provides",
    "start": "1441760",
    "end": "1443279"
  },
  {
    "text": "a developer portal a user interface",
    "start": "1443279",
    "end": "1446799"
  },
  {
    "text": "an api specification discovery that",
    "start": "1446799",
    "end": "1449919"
  },
  {
    "text": "integrates with glue edge",
    "start": "1449919",
    "end": "1451440"
  },
  {
    "text": "and also istio ingress and finally we",
    "start": "1451440",
    "end": "1454960"
  },
  {
    "text": "offer something called",
    "start": "1454960",
    "end": "1457360"
  },
  {
    "text": "webassemblyhub so that is a place where",
    "start": "1457360",
    "end": "1459360"
  },
  {
    "text": "you can",
    "start": "1459360",
    "end": "1460400"
  },
  {
    "text": "build webassembly extensions for the",
    "start": "1460400",
    "end": "1463279"
  },
  {
    "text": "envoy proxy you can publish them",
    "start": "1463279",
    "end": "1465440"
  },
  {
    "text": "you can deploy them it's compatible both",
    "start": "1465440",
    "end": "1468000"
  },
  {
    "text": "with istio and glue edge",
    "start": "1468000",
    "end": "1470960"
  },
  {
    "text": "so with that i thank you for watching",
    "start": "1470960",
    "end": "1472960"
  },
  {
    "text": "today and if you have any questions",
    "start": "1472960",
    "end": "1475120"
  },
  {
    "text": "please feel free to reach out thank you",
    "start": "1475120",
    "end": "1480400"
  }
]