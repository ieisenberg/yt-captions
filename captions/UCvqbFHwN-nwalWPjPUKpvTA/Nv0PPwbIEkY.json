[
  {
    "start": "0",
    "end": "133000"
  },
  {
    "text": "right oh this is loud it's a big room okay so we should start and welcome to",
    "start": "199",
    "end": "7410"
  },
  {
    "text": "the CI CD track here on koukin how is Q Kunz afar nah that bad I was",
    "start": "7410",
    "end": "15929"
  },
  {
    "text": "Cuban so far alright that's better yeah I like it a lot as well so my name is",
    "start": "15929",
    "end": "22740"
  },
  {
    "text": "Barack I'm the MC here not going to steal just a minute of those fine",
    "start": "22740",
    "end": "27750"
  },
  {
    "text": "gentlemen to do a little exercise with you and to wake you up basically that's the idea how many of you know what",
    "start": "27750",
    "end": "33000"
  },
  {
    "text": "progressive delivery is okay a third of you how many of you do progressive",
    "start": "33000",
    "end": "39210"
  },
  {
    "text": "delivery okay and what it does enhance how many we do progressive deliver and",
    "start": "39210",
    "end": "45180"
  },
  {
    "text": "kubernetes yeah like dozen all right so those gentlemen the name Jesse actually",
    "start": "45180",
    "end": "53039"
  },
  {
    "text": "do progressive delivery on kubernetes that deserves a standing ovation everybody up",
    "start": "53039",
    "end": "59370"
  },
  {
    "text": "I kid you not everybody up everybody up yes yes all right and now when you are",
    "start": "59370",
    "end": "68640"
  },
  {
    "text": "awake welcome to this talk about progressive delivery on kubernetes and one thing the slides are already in the",
    "start": "68640",
    "end": "76350"
  },
  {
    "text": "sketch on this scheduling application so if you follow one and follow along with",
    "start": "76350",
    "end": "81840"
  },
  {
    "text": "your copy of slides you're more than welcome to open it and download it with that Danny and Jesse thank you thank you",
    "start": "81840",
    "end": "92189"
  },
  {
    "text": "for that introduction hi everyone thank you for joining our talk on progressive",
    "start": "92189",
    "end": "97259"
  },
  {
    "text": "delivery on kubernetes my name is Jesse soon and this is Danny Thompson Danny and I are both part of the kubernetes platform",
    "start": "97259",
    "end": "104759"
  },
  {
    "text": "team at Intuit and we both work on the Argo project and if you're unfamiliar with Argo Argo is a collection of open",
    "start": "104759",
    "end": "112770"
  },
  {
    "text": "source utilities that focus on an application delivery on kubernetes and it's comprised of workflows CD events",
    "start": "112770",
    "end": "121560"
  },
  {
    "text": "and most recently Argo rollouts and today we'll be talking about progressive delivery and our approach of achieving",
    "start": "121560",
    "end": "129060"
  },
  {
    "text": "this on equipment is using our goal rollouts okay so if you don't know into it into",
    "start": "129060",
    "end": "135959"
  },
  {
    "start": "133000",
    "end": "159000"
  },
  {
    "text": "it is the company behind TurboTax QuickBooks and mint and about two years ago into it's started its journey onto",
    "start": "135959",
    "end": "142829"
  },
  {
    "text": "Cooper Nettie's and it's been really successful for us so far we basically since then we've gone all-in on",
    "start": "142829",
    "end": "148860"
  },
  {
    "text": "kubernetes and within Intuit we have about 5,000 developers about a quarter",
    "start": "148860",
    "end": "154260"
  },
  {
    "text": "of them have been migrated onto kubernetes and here are some current",
    "start": "154260",
    "end": "161220"
  },
  {
    "start": "159000",
    "end": "194000"
  },
  {
    "text": "statistics about our kubernetes usage one of the biggest things that kubernetes enabled for us was increasing",
    "start": "161220",
    "end": "169079"
  },
  {
    "text": "our software delivery speed and what you're seeing on the bottom is this graph of our weekly deployment history",
    "start": "169079",
    "end": "175560"
  },
  {
    "text": "over the past year this is using Argos CD which is our git ops based consensus delivery tool that we built and",
    "start": "175560",
    "end": "182359"
  },
  {
    "text": "currently we're doing about 1,300 deployments per day and as you can see",
    "start": "182359",
    "end": "188159"
  },
  {
    "text": "from the graph we feel like we've done pretty good at continuous delivery okay",
    "start": "188159",
    "end": "195359"
  },
  {
    "start": "194000",
    "end": "257000"
  },
  {
    "text": "so before we get into progressive delivery let's take a step back and talk a little bit about continuous delivery",
    "start": "195359",
    "end": "202019"
  },
  {
    "text": "so CD was all about shortening the time that it took to get your code to your",
    "start": "202019",
    "end": "208139"
  },
  {
    "text": "users and it did this by having these short and predictable software development cycles using this continuous",
    "start": "208139",
    "end": "215040"
  },
  {
    "text": "loop of developing your code building it testing it and deploying it all in this",
    "start": "215040",
    "end": "220379"
  },
  {
    "text": "automated fashion and while continuous delivery got us to a point where we can deliver software",
    "start": "220379",
    "end": "226440"
  },
  {
    "text": "faster it didn't necessarily make software delivery that much safer and it",
    "start": "226440",
    "end": "231989"
  },
  {
    "text": "turns out that most outages and problems occur when after you make some kind of",
    "start": "231989",
    "end": "237449"
  },
  {
    "text": "change in your environment and with CD you're actually making changes to the environments from much more frequently",
    "start": "237449",
    "end": "243930"
  },
  {
    "text": "so really updates are the most critical points in time that you need the most",
    "start": "243930",
    "end": "249599"
  },
  {
    "text": "observability the most confidence and a contingency plan for when things go",
    "start": "249599",
    "end": "254970"
  },
  {
    "text": "wrong so what developers started to do to",
    "start": "254970",
    "end": "261239"
  },
  {
    "text": "mitigate this risk with stay started using some new techniques and some old techniques to kind of deliver",
    "start": "261239",
    "end": "266600"
  },
  {
    "text": "their software with less risk so these are things like canary and blue-green",
    "start": "266600",
    "end": "273790"
  },
  {
    "text": "feature toggling a be testing in fact there's a good chance that many of you are already using some these techniques",
    "start": "273790",
    "end": "281150"
  },
  {
    "text": "already the term progressive delivery was coined by a analyst named james",
    "start": "281150",
    "end": "286490"
  },
  {
    "text": "governor and he describes consist progressive delivery as continuous",
    "start": "286490",
    "end": "291920"
  },
  {
    "text": "delivery with fine grained control over the blast radius and really what it's",
    "start": "291920",
    "end": "296960"
  },
  {
    "text": "describing is this umbrella term that encompasses a lot of these existing techniques that developers have",
    "start": "296960",
    "end": "303110"
  },
  {
    "text": "implemented to mitigate the risk in their software delivery process so let's",
    "start": "303110",
    "end": "310550"
  },
  {
    "text": "go back to that original CD pipeline and see how progressive delivery might",
    "start": "310550",
    "end": "315830"
  },
  {
    "text": "change the delivery process so we still have this initial same three steps but",
    "start": "315830",
    "end": "321350"
  },
  {
    "text": "what comes after the test phase becomes a lot more sophisticated so instead of",
    "start": "321350",
    "end": "326510"
  },
  {
    "text": "deploying to your entire user base you only deploy to a small subset and the",
    "start": "326510",
    "end": "331550"
  },
  {
    "text": "way you can do that to me in many different ways a common way is to just serve a small percentage of the traffic",
    "start": "331550",
    "end": "337420"
  },
  {
    "text": "to that new version and then next you wait and you see how well that",
    "start": "337420",
    "end": "342500"
  },
  {
    "text": "deployment went through through analysis and by analysis you're measuring metrics",
    "start": "342500",
    "end": "347990"
  },
  {
    "text": "which you care about for your application oftentimes Google's for golden signals are used which are",
    "start": "347990",
    "end": "354200"
  },
  {
    "text": "latency air traffic and saturation but not necessarily then you determine was",
    "start": "354200",
    "end": "362960"
  },
  {
    "text": "my rollout successful or not and if it was you progress and you",
    "start": "362960",
    "end": "368990"
  },
  {
    "text": "increase that subset of users that you're exposing that new service to if",
    "start": "368990",
    "end": "374120"
  },
  {
    "text": "not you bore it and you roll back to that previous version all right so",
    "start": "374120",
    "end": "381800"
  },
  {
    "start": "380000",
    "end": "451000"
  },
  {
    "text": "there's four basic building blocks to progressive delivery the first is user segmentation that's being able to",
    "start": "381800",
    "end": "388250"
  },
  {
    "text": "isolate a set of the users that you wish to target and expose them to that new version basically this is how you're",
    "start": "388250",
    "end": "394250"
  },
  {
    "text": "controlling your blast radius examples of this might be to dial in that traffic percentage",
    "start": "394250",
    "end": "399800"
  },
  {
    "text": "to a small amount it could even be something more coarser grain like like",
    "start": "399800",
    "end": "405139"
  },
  {
    "text": "deploying to a geographical region or a city next it's traffic management and",
    "start": "405139",
    "end": "411740"
  },
  {
    "text": "then once you decide how you want to segment your users you find ways to direct those users to the new version",
    "start": "411740",
    "end": "417500"
  },
  {
    "text": "and this is where things like service mesh and ingress controllers become useful observability are things like",
    "start": "417500",
    "end": "425569"
  },
  {
    "text": "tracing logging and metrics and the metrics are what you are going to be",
    "start": "425569",
    "end": "430669"
  },
  {
    "text": "relying on to measure whether and not that update is going smoothly and",
    "start": "430669",
    "end": "435909"
  },
  {
    "text": "finally we have automation and automation is now that you've been collecting those measurements you can",
    "start": "435909",
    "end": "442970"
  },
  {
    "text": "now automatically progress or abort that update based on what was observed so now",
    "start": "442970",
    "end": "453380"
  },
  {
    "start": "451000",
    "end": "524000"
  },
  {
    "text": "that we have that thousand foot view let's kind of narrow down in how this applies to kubernetes so with",
    "start": "453380",
    "end": "459110"
  },
  {
    "text": "deployments we have rolling update rolling update is all about trying to get you from version a to version B as",
    "start": "459110",
    "end": "465020"
  },
  {
    "text": "quickly and safely as possible however it provides very few controls over that",
    "start": "465020",
    "end": "470840"
  },
  {
    "text": "speed you can kind of slow it down using things like max surge and in ready",
    "start": "470840",
    "end": "476509"
  },
  {
    "text": "seconds and readiness probes but these controls they're not really suitable for more sophisticated rollout plans at",
    "start": "476509",
    "end": "483949"
  },
  {
    "text": "least when it comes to doing things like canary and although container readiness",
    "start": "483949",
    "end": "489139"
  },
  {
    "text": "pros people do use to verify the new version they're unsuitable for like",
    "start": "489139",
    "end": "494300"
  },
  {
    "text": "performing deeper or or even temporary checks because these readiness probes are running for the entire life of that",
    "start": "494300",
    "end": "500419"
  },
  {
    "text": "deployment you also can't use external metrics like if the metrics you care about our and Prometheus you it's gonna",
    "start": "500419",
    "end": "507710"
  },
  {
    "text": "you're gonna have a hard time getting readiness probes who connect and Prometheus and while rolling update can",
    "start": "507710",
    "end": "513680"
  },
  {
    "text": "halt the progression of your update it's unable to reverse that update you can't",
    "start": "513680",
    "end": "519620"
  },
  {
    "text": "automatically rollback when your metrics are starting to fail so we talked to",
    "start": "519620",
    "end": "526279"
  },
  {
    "start": "524000",
    "end": "565000"
  },
  {
    "text": "many of our developer teams to understand their use cases and when you're supporting thousands of developers and you get there's a lot of",
    "start": "526279",
    "end": "532990"
  },
  {
    "text": "staying in ideas and use cases that come up and here are some of the common ones obviously there's this need to",
    "start": "532990",
    "end": "540000"
  },
  {
    "text": "automatically roll back when your metrics are failing but we also got a lot of other interesting requirements",
    "start": "540000",
    "end": "545860"
  },
  {
    "text": "such as the people want to customize their success and failure criteria or they still wanted a human manual gate",
    "start": "545860",
    "end": "553000"
  },
  {
    "text": "somewhere in the deploy process they also wanted to use their own business",
    "start": "553000",
    "end": "558070"
  },
  {
    "text": "metrics to evaluate if their update is going smoothly and there are many others",
    "start": "558070",
    "end": "565529"
  },
  {
    "start": "565000",
    "end": "615000"
  },
  {
    "text": "so we came up with a set of requirements that we of what we wanted to build number one the solution needed to be",
    "start": "565800",
    "end": "571930"
  },
  {
    "text": "robust not early into the process we tried we had a lot of false starts",
    "start": "571930",
    "end": "577420"
  },
  {
    "text": "trying to use things like Jenkins the power canary deployments or canary analysis and it ended up being extremely",
    "start": "577420",
    "end": "584290"
  },
  {
    "text": "fragile a second we wanted to build on top of industry standard tooling things",
    "start": "584290",
    "end": "590350"
  },
  {
    "text": "like Prometheus client service meshes and have great integrations with those",
    "start": "590350",
    "end": "595360"
  },
  {
    "text": "existing tools and after talking with all the developers it was obvious that",
    "start": "595360",
    "end": "600550"
  },
  {
    "text": "we needed a very flexible solution in order to support all of their use cases and finally it needed to be declarative",
    "start": "600550",
    "end": "607779"
  },
  {
    "text": "and get-up focused there's a lot of numerous benefits that you get with the curve declarative approach so about a",
    "start": "607779",
    "end": "617529"
  },
  {
    "text": "year back we started the argo rollouts project and at the time the scope was",
    "start": "617529",
    "end": "622839"
  },
  {
    "text": "quite simple it provided a drop-in replacement for a deployment and just",
    "start": "622839",
    "end": "628660"
  },
  {
    "text": "give two additional update strategies blue green and canary and I'll just quickly go through whether we rolled out",
    "start": "628660",
    "end": "635020"
  },
  {
    "text": "resources looks like to give you guys some background of what this what this is okay so this is a rollout",
    "start": "635020",
    "end": "641709"
  },
  {
    "start": "639000",
    "end": "688000"
  },
  {
    "text": "specification rollouts work exactly the same as a deployment it manages the",
    "start": "641709",
    "end": "646959"
  },
  {
    "text": "creation scaling deletion of your replicas sets and so the spec itself",
    "start": "646959",
    "end": "652390"
  },
  {
    "text": "should be mostly identical to the deployment as I mentioned it was meant to be a drop-in replacement and we",
    "start": "652390",
    "end": "657850"
  },
  {
    "text": "wanted that experience to be exactly the same but what's different about the rollout is are the new strategies and he",
    "start": "657850",
    "end": "665089"
  },
  {
    "text": "I'm showing a canary strategy and what this is specifying is that during a deployment it will first set a canary",
    "start": "665089",
    "end": "671990"
  },
  {
    "text": "weight of 40 percent we meaning 40% of the total pods will be running that new",
    "start": "671990",
    "end": "676999"
  },
  {
    "text": "version and then the second step is gonna pause for one hour after that one hour it will increase the way to 60%",
    "start": "676999",
    "end": "683449"
  },
  {
    "text": "pause again and then increase the weight again and so on and so forth so that's",
    "start": "683449",
    "end": "690230"
  },
  {
    "text": "what we've been using for the past year but what has been missing to this point",
    "start": "690230",
    "end": "695240"
  },
  {
    "text": "was a way to perform canary analysis during the update and automatically promote or rolled back the rollout based",
    "start": "695240",
    "end": "701720"
  },
  {
    "text": "on data analysis which brings us to the second phase of our go world outs which",
    "start": "701720",
    "end": "706730"
  },
  {
    "text": "focuses on progressive delivery and so now Danny he'll walk you through the analysis series and show you how",
    "start": "706730",
    "end": "712959"
  },
  {
    "text": "analysis can be used to during a rollout to automatically promote or abort",
    "start": "712959",
    "end": "718759"
  },
  {
    "text": "rollout thanks Jesse so in order to enable",
    "start": "718759",
    "end": "723800"
  },
  {
    "text": "progressive delivery we need to introduce two new concepts analysis and",
    "start": "723800",
    "end": "730220"
  },
  {
    "text": "experimentation and with each of these concepts we realized that they could",
    "start": "730220",
    "end": "736699"
  },
  {
    "text": "have their own C or DS we didn't want to kind of add them into the rollout object if we added them to the rollout object",
    "start": "736699",
    "end": "743809"
  },
  {
    "text": "we'd have this really long Amal that'd be kind of hard to parse and each of these concepts can kind of stand alone",
    "start": "743809",
    "end": "750050"
  },
  {
    "text": "on their own and so to that end I'm gonna first talk to analysis so analysis",
    "start": "750050",
    "end": "756980"
  },
  {
    "start": "755000",
    "end": "795000"
  },
  {
    "text": "enables the observability portion of progressive delivery and so that allows",
    "start": "756980",
    "end": "763490"
  },
  {
    "text": "our developers to define what they care about when we are rolling out a new",
    "start": "763490",
    "end": "769040"
  },
  {
    "text": "version and with this analysis we made sure that we didn't include any",
    "start": "769040",
    "end": "774439"
  },
  {
    "text": "orchestration into the analysis section since we want the analysis to only focus",
    "start": "774439",
    "end": "779600"
  },
  {
    "text": "on the analysis and so we needed a way to kind of incorporate the orchestration part of saying rolling forward when you",
    "start": "779600",
    "end": "787730"
  },
  {
    "text": "know your application is healthy or rolling back if you notice errors and so to that end we integrated it with",
    "start": "787730",
    "end": "794149"
  },
  {
    "text": "rollouts so here's a rollout that has analysis you'll notice it looks almost the same",
    "start": "794149",
    "end": "801170"
  },
  {
    "start": "795000",
    "end": "1203000"
  },
  {
    "text": "as the previous world that you're looking at earlier except now we have an",
    "start": "801170",
    "end": "806330"
  },
  {
    "text": "analysis section and within this analysis section we have something called a template name so this template",
    "start": "806330",
    "end": "812690"
  },
  {
    "text": "name is referring to a new CD called a analysis template I will talk to the",
    "start": "812690",
    "end": "820220"
  },
  {
    "text": "analysis template in a minute but here's what you need to know for now so when",
    "start": "820220",
    "end": "826250"
  },
  {
    "text": "you make a change to your pods back and the rollout is progressing through the steps we have listed and under the",
    "start": "826250",
    "end": "832430"
  },
  {
    "text": "Canaries or the canary strategy we will also create a analysis that analysis is",
    "start": "832430",
    "end": "839660"
  },
  {
    "text": "checking the success rate of requests to our service if that success percentage",
    "start": "839660",
    "end": "846440"
  },
  {
    "text": "drops below 90% we consider the new version bad and we need to rollback and",
    "start": "846440",
    "end": "852910"
  },
  {
    "text": "so to that end I will give you a quick demo of a rollout that uses analysis so",
    "start": "852910",
    "end": "862430"
  },
  {
    "text": "the first thing I'm going to do is pull up my terminal so we also in addition to",
    "start": "862430",
    "end": "869660"
  },
  {
    "text": "adding analysis and experimentation to our rollouts we created a coups ETL",
    "start": "869660",
    "end": "876290"
  },
  {
    "text": "plugin for our go rollouts and we did it for two reasons one we want it to be",
    "start": "876290",
    "end": "881630"
  },
  {
    "text": "able to visualize our rollouts and then two we wanted to be able to automate",
    "start": "881630",
    "end": "887840"
  },
  {
    "text": "some of our common operations on the rollout object so what you can see here is a rollout object you can notice that",
    "start": "887840",
    "end": "895640"
  },
  {
    "text": "right now it's in a steady state it's executed all the steps and then under this metadata we have a tree view this",
    "start": "895640",
    "end": "902390"
  },
  {
    "text": "tree view shows all the children resources created from the rollout so you can see a repla set and a bunch of",
    "start": "902390",
    "end": "908900"
  },
  {
    "text": "pods and so now let me pull up the demo app so this is our demo app what you'll",
    "start": "908900",
    "end": "915050"
  },
  {
    "text": "notice is that there are a bunch of floating dots going across the screen each of those floating dots represent a",
    "start": "915050",
    "end": "922190"
  },
  {
    "text": "request to our back-end service then our back-end service has a predefined color",
    "start": "922190",
    "end": "927770"
  },
  {
    "text": "that it will return and that's the color that the dock takes you'll notice this little bar graph kind",
    "start": "927770",
    "end": "933320"
  },
  {
    "text": "of slowly incrementing across the screen that represents the percentage of of",
    "start": "933320",
    "end": "938329"
  },
  {
    "text": "that color that's the back ends are returning so in this case right now we",
    "start": "938329",
    "end": "943339"
  },
  {
    "text": "are a hundred percent blue another feature of this demo app is we can modulate the error rate of the backend",
    "start": "943339",
    "end": "951740"
  },
  {
    "text": "service so if I changed a slider to around forty eight percent forty eight",
    "start": "951740",
    "end": "957139"
  },
  {
    "text": "percent of the requests to the backend service will fail and you'll notice in the the floating dots the there are some",
    "start": "957139",
    "end": "965329"
  },
  {
    "text": "darker ones those represent the failed requests in addition you can see the failed requests in the bar graph at the",
    "start": "965329",
    "end": "972829"
  },
  {
    "text": "bottom so I'm going to bring that error rate back to zero to kind of get us back into a steady state and now I'm gonna",
    "start": "972829",
    "end": "979250"
  },
  {
    "text": "make a change to our rollout so I'm going to execute a I'm going to use our cube CTL plugin to change the image from",
    "start": "979250",
    "end": "987139"
  },
  {
    "text": "the blue version to the yellow version",
    "start": "987139",
    "end": "991899"
  },
  {
    "text": "and so the first thing it's gonna do is it's gonna create a new replica set with",
    "start": "992350",
    "end": "998329"
  },
  {
    "text": "two new pots and you'll notice now we'll start getting yellow dots floating across the screen in addition to the",
    "start": "998329",
    "end": "1003790"
  },
  {
    "text": "blue one so give it a minute and you'll soon reach around 40% of the traffic in",
    "start": "1003790",
    "end": "1011079"
  },
  {
    "text": "addition we have this new concept called an analysis run that runs alongside the",
    "start": "1011079",
    "end": "1017019"
  },
  {
    "text": "new replica set that is the analysis that we were talking to you earlier so if our success rate drops below 90%",
    "start": "1017019",
    "end": "1025350"
  },
  {
    "text": "where this new version is bad and we need to rollback so to actually demonstrate that I'll",
    "start": "1025350",
    "end": "1031418"
  },
  {
    "text": "change the yellow version error rate to a hundred percent and so either on this",
    "start": "1031419",
    "end": "1037688"
  },
  {
    "text": "measurement or the next you'll see a little red X here indicating that the",
    "start": "1037689",
    "end": "1043020"
  },
  {
    "text": "measurement was a failure and we need to rollback so it looks like this one just missed it",
    "start": "1043020",
    "end": "1048669"
  },
  {
    "text": "so give me another 5 seconds and there",
    "start": "1048669",
    "end": "1054880"
  },
  {
    "text": "you go we had a failed measurement and now we realize that this version is bad and we need to rollback",
    "start": "1054880",
    "end": "1060309"
  },
  {
    "text": "and so we've scaled up the old blue versions first and now we're starting to scale down the yellow ones and you'll notice",
    "start": "1060309",
    "end": "1066950"
  },
  {
    "text": "that now the blue dot there's only blue dots floating across the screen and the bar at the bottom is all blue now I'm",
    "start": "1066950",
    "end": "1074809"
  },
  {
    "text": "going to simulate a successful rollout so I'm going to change that air rate back to zero and I'm going to run a",
    "start": "1074809",
    "end": "1081740"
  },
  {
    "text": "retry command that will try to execute all the steps again so similar to before",
    "start": "1081740",
    "end": "1094090"
  },
  {
    "text": "it is creating those two new pods to achieve that forty percent that you were",
    "start": "1094090",
    "end": "1099260"
  },
  {
    "text": "looking at earlier and it now created another analysis run so this analysis run is checking the same thing again of",
    "start": "1099260",
    "end": "1105980"
  },
  {
    "text": "if the percentage of healthy requests or service is above 90% we're good and",
    "start": "1105980",
    "end": "1112870"
  },
  {
    "text": "since the area is at zero it will continue to make those measurements so",
    "start": "1112870",
    "end": "1118280"
  },
  {
    "text": "right now the with this demo our rollout will late an hour before we fully",
    "start": "1118280",
    "end": "1123860"
  },
  {
    "text": "progress so I'm gonna run a command to skip the rest of this wait and so now",
    "start": "1123860",
    "end": "1136550"
  },
  {
    "text": "we'll start to progress through the next steps in case if you don't remember it will increase the ratio to 60% wait 10",
    "start": "1136550",
    "end": "1144890"
  },
  {
    "text": "seconds let's increase it to 80% wait 10 seconds and then progress all the way so",
    "start": "1144890",
    "end": "1151600"
  },
  {
    "text": "I'm probably around 10 15 seconds we should finish rolling out the new",
    "start": "1151600",
    "end": "1157820"
  },
  {
    "text": "version and during this time we're still checking the analysis run to make sure",
    "start": "1157820",
    "end": "1164780"
  },
  {
    "text": "that we're above that 90 percent so you see this little red or sorry Green check",
    "start": "1164780",
    "end": "1170420"
  },
  {
    "text": "slowly increment about every 10 seconds and so at this point we have",
    "start": "1170420",
    "end": "1176420"
  },
  {
    "text": "successfully transitioned to the yellow version and that concludes a demo of our",
    "start": "1176420",
    "end": "1181820"
  },
  {
    "text": "go rollouts with analysis",
    "start": "1181820",
    "end": "1185590"
  },
  {
    "text": "so the next question is okay that's really cool but how did you actually do",
    "start": "1192460",
    "end": "1198170"
  },
  {
    "text": "it so I'll kind of dive into the analysis template now so the analysis",
    "start": "1198170",
    "end": "1205250"
  },
  {
    "start": "1203000",
    "end": "1414000"
  },
  {
    "text": "template consists of one or more key metrics that you want to monitor while",
    "start": "1205250",
    "end": "1210500"
  },
  {
    "text": "you're deploying a new version and so each metric has a different provider",
    "start": "1210500",
    "end": "1215810"
  },
  {
    "text": "that queries a back-end service to take that measurement in the case of our demo",
    "start": "1215810",
    "end": "1220910"
  },
  {
    "text": "we were using Prometheus but we support a bunch of other providers and the one I",
    "start": "1220910",
    "end": "1226640"
  },
  {
    "text": "just want to call out in case if you don't know what it is kai anta is a canary analysis tool that lives under",
    "start": "1226640",
    "end": "1232370"
  },
  {
    "text": "the spinnaker project but is can be used as a standalone service so to actually kind of dive into the template a little",
    "start": "1232370",
    "end": "1238970"
  },
  {
    "text": "bit more let's first start with the Prometheus provider it's relatively straightforward you specify a Prometheus",
    "start": "1238970",
    "end": "1245630"
  },
  {
    "text": "address you want a query but you also specify a prom QL grade that you want to",
    "start": "1245630",
    "end": "1252200"
  },
  {
    "text": "execute when it executes it grabs a measurement from prometheus but then that raises the question of how",
    "start": "1252200",
    "end": "1259250"
  },
  {
    "text": "do you evaluate that metric and so that's where success conditions come",
    "start": "1259250",
    "end": "1265160"
  },
  {
    "text": "into play success conditions are a way of evaluating the results of your",
    "start": "1265160",
    "end": "1270280"
  },
  {
    "text": "measurements from your providers and you might notice that we're using an",
    "start": "1270280",
    "end": "1275590"
  },
  {
    "text": "expression instead of a threshold well since we have different providers we",
    "start": "1275590",
    "end": "1282440"
  },
  {
    "text": "realized that certain providers might return different payloads and so we",
    "start": "1282440",
    "end": "1288980"
  },
  {
    "text": "needed flexibility in how we interpret these results and so to that and not",
    "start": "1288980",
    "end": "1294530"
  },
  {
    "text": "everything can just be a simple equality statement and so at this point you can",
    "start": "1294530",
    "end": "1300200"
  },
  {
    "text": "say ok I can take a measurement I can evaluate that metric measurement how",
    "start": "1300200",
    "end": "1305750"
  },
  {
    "text": "frequently do I do it that's where interval and count come into a play so interval is how",
    "start": "1305750",
    "end": "1313280"
  },
  {
    "text": "frequently we measure take a measurement against our provider and count is the",
    "start": "1313280",
    "end": "1318530"
  },
  {
    "text": "total number of times we want to execute that provider and so from there there's",
    "start": "1318530",
    "end": "1324230"
  },
  {
    "text": "one last concept I want to for analysis and that is arguments arguments enable developers to",
    "start": "1324230",
    "end": "1332200"
  },
  {
    "text": "parameterize their analysis templates in the case of our demo we injected which",
    "start": "1332200",
    "end": "1339769"
  },
  {
    "text": "ingress we wanted to query against from our row object and that enables analysis",
    "start": "1339769",
    "end": "1345139"
  },
  {
    "text": "templates to serve as building blocks for higher-level resources like rollouts",
    "start": "1345139",
    "end": "1350450"
  },
  {
    "text": "or as Jessie will explain in a minute experiments and that allows the analysis",
    "start": "1350450",
    "end": "1357799"
  },
  {
    "text": "to not worry about either details that it can't possibly know or really these",
    "start": "1357799",
    "end": "1363919"
  },
  {
    "text": "higher-level resources should be the one who care about them and so another added",
    "start": "1363919",
    "end": "1369109"
  },
  {
    "text": "benefit with this is that it allows analysis templates to become shareable so not only can you use these analysis",
    "start": "1369109",
    "end": "1377119"
  },
  {
    "text": "templates within your organization you can also use them across communities to give an example of that the demo we are",
    "start": "1377119",
    "end": "1384349"
  },
  {
    "text": "using today use a metric from the nginx ingress controller and so as a result",
    "start": "1384349",
    "end": "1391869"
  },
  {
    "text": "anyone here who uses that controller for their ingress they can leverage to this",
    "start": "1391869",
    "end": "1399019"
  },
  {
    "text": "analysis template and so that's a high-level overview of analysis and I'm",
    "start": "1399019",
    "end": "1404929"
  },
  {
    "text": "going to hand it back to Jesse to explain experimentation thanks honey",
    "start": "1404929",
    "end": "1411908"
  },
  {
    "start": "1414000",
    "end": "1493000"
  },
  {
    "text": "okay so now that we talked about analysis we'll get into the second aspect of argyll rollouts progressive",
    "start": "1415610",
    "end": "1422010"
  },
  {
    "text": "delivery which is experimentation and so we introduced this new concept which we were calling an experiment and really an",
    "start": "1422010",
    "end": "1428670"
  },
  {
    "text": "experiment is just a ephemeral run of one or more versions of your service it's most useful when you couple that",
    "start": "1428670",
    "end": "1436380"
  },
  {
    "text": "with analysis experiments are something you can start standalone but it can also",
    "start": "1436380",
    "end": "1443850"
  },
  {
    "text": "be something that you start as a blocking step in your rollout and some use cases that we see for",
    "start": "1443850",
    "end": "1449790"
  },
  {
    "text": "experimentation include things like a be testing baseline versus canary analysis or even things like machine learning",
    "start": "1449790",
    "end": "1456590"
  },
  {
    "text": "machine learning model testing the thing I wanted to talk about a baseline versus carried this is actually a good best",
    "start": "1456590",
    "end": "1463890"
  },
  {
    "text": "practice for anyone who's doing canary analysis that you actually want to test your canary and compare it against a",
    "start": "1463890",
    "end": "1471810"
  },
  {
    "text": "baseline in not your existing running prods in production and the reason you want to do this is because when you",
    "start": "1471810",
    "end": "1478290"
  },
  {
    "text": "start up a brand new baseline you eliminate all the skewing factors in",
    "start": "1478290",
    "end": "1483780"
  },
  {
    "text": "your in your measurements for things like Java heap size or cache some",
    "start": "1483780",
    "end": "1490650"
  },
  {
    "text": "cashews that I already warmed up so this is an experiment CRD which I'll be",
    "start": "1490650",
    "end": "1498450"
  },
  {
    "start": "1493000",
    "end": "1543000"
  },
  {
    "text": "demoing in a minute and really it's just a list of pod template specs instead of",
    "start": "1498450",
    "end": "1504510"
  },
  {
    "text": "the single one like a Rolo it also has a duration so this this experiment will",
    "start": "1504510",
    "end": "1510180"
  },
  {
    "text": "run for 15 minutes and it's gonna run a purple version of a service and the orange version then on the bottom you",
    "start": "1510180",
    "end": "1518850"
  },
  {
    "text": "see that same similar analysis section but this time it's also a list here I'm",
    "start": "1518850",
    "end": "1524610"
  },
  {
    "text": "using a template called HTTP benchmark which I'll show in a minute in a second and I just wanted to point out here that",
    "start": "1524610",
    "end": "1531510"
  },
  {
    "text": "the same template is being used multiple times just passed with different",
    "start": "1531510",
    "end": "1536670"
  },
  {
    "text": "arguments one with the purple hostname and the other with orange hostname and",
    "start": "1536670",
    "end": "1543590"
  },
  {
    "start": "1543000",
    "end": "1578000"
  },
  {
    "text": "finally this is an example of another style of analysis which we provide which is our job based",
    "start": "1543590",
    "end": "1549830"
  },
  {
    "text": "metric and instead of a Prometheus query this is a kubernetes job so for this",
    "start": "1549830",
    "end": "1556039"
  },
  {
    "text": "metric to measure successful the job itself needs to exit successfully basically exit with exit",
    "start": "1556039",
    "end": "1563210"
  },
  {
    "text": "code zero and this is examples running a popular benchmarking utility called W R",
    "start": "1563210",
    "end": "1569509"
  },
  {
    "text": "K and then interpreting the output of that tool to verify that the error rate",
    "start": "1569509",
    "end": "1574970"
  },
  {
    "text": "is less than 5% okay so so I'm going to",
    "start": "1574970",
    "end": "1585739"
  },
  {
    "start": "1578000",
    "end": "1690000"
  },
  {
    "text": "use that same keep steel plug in to start the experiment",
    "start": "1585739",
    "end": "1590979"
  },
  {
    "text": "okay so what's happening now is that this experiment launched two replicas",
    "start": "1603490",
    "end": "1608660"
  },
  {
    "text": "sets both replicas has had two replicas each and what's going to happen is as",
    "start": "1608660",
    "end": "1615410"
  },
  {
    "text": "soon as these pods have become ready and available it'll kick off the analysis",
    "start": "1615410",
    "end": "1620870"
  },
  {
    "text": "and this is analysis as you recall was using the job-based metric so give it",
    "start": "1620870",
    "end": "1626840"
  },
  {
    "text": "just a second there goes okay so it started an analysis it's running this",
    "start": "1626840",
    "end": "1632270"
  },
  {
    "text": "job I think every five or ten seconds and the success the exit code of that",
    "start": "1632270",
    "end": "1638420"
  },
  {
    "text": "job is going to determine whether or not that that experiment is really going",
    "start": "1638420",
    "end": "1643610"
  },
  {
    "text": "well so as you can see the purple version is is measuring error rate less than 5% but the orange version is not",
    "start": "1643610",
    "end": "1651410"
  },
  {
    "text": "and you can tell by these incrementing ticks going up here and so one thing I",
    "start": "1651410",
    "end": "1658250"
  },
  {
    "text": "should point out is that experiments can also fail fast meaning like if your",
    "start": "1658250",
    "end": "1663260"
  },
  {
    "text": "experiment is going horribly wrong you can configure it to so that it it stops the experiment automatically and it's",
    "start": "1663260",
    "end": "1670430"
  },
  {
    "text": "experimentation is just a really simple concept and it becomes much more powerful when you're using",
    "start": "1670430",
    "end": "1677350"
  },
  {
    "text": "experimentation as part of your your roll out steps we're doing things like canary versus baseline testing all right",
    "start": "1677350",
    "end": "1688299"
  },
  {
    "text": "all right so to summarize what we showed was how you can leverage these new",
    "start": "1689080",
    "end": "1695510"
  },
  {
    "start": "1690000",
    "end": "1747000"
  },
  {
    "text": "concepts that we introduced analysis and experiments and integrate to like a rollout strategy and tailor it to your",
    "start": "1695510",
    "end": "1702410"
  },
  {
    "text": "needs and we designed this to be very flexible and loosely coupled so that it could be used not just with rollouts but",
    "start": "1702410",
    "end": "1709670"
  },
  {
    "text": "in other ways that we might not anticipate we will also wanted to point out that progressive delivery is",
    "start": "1709670",
    "end": "1715880"
  },
  {
    "text": "multifaceted there will never be this one-size-fits-all solution for example",
    "start": "1715880",
    "end": "1721160"
  },
  {
    "text": "in to it it makes heavy use of things like feature flags so that developers can experiment and canary feature at a",
    "start": "1721160",
    "end": "1728630"
  },
  {
    "text": "feature toggling level and finally this is just the beginning of progressive",
    "start": "1728630",
    "end": "1734600"
  },
  {
    "text": "delivery and just--how CD you made the lives of developers easier we think that",
    "start": "1734600",
    "end": "1741200"
  },
  {
    "text": "progressive delivery is gonna have that same effect for operators in terms of",
    "start": "1741200",
    "end": "1748610"
  },
  {
    "start": "1747000",
    "end": "1790000"
  },
  {
    "text": "what's next what was noticeably absent in their talk was the use of the service mesh and so in the future what service",
    "start": "1748610",
    "end": "1755900"
  },
  {
    "text": "mesh will give us is finer grain traffic shaping this I'm talking about doing things like segmenting your users",
    "start": "1755900",
    "end": "1762890"
  },
  {
    "text": "baseline HTTP headers or or cookies and also the metrics that we provided were",
    "start": "1762890",
    "end": "1771080"
  },
  {
    "text": "ones that we found useful for us but this was meant to be open and extensible",
    "start": "1771080",
    "end": "1776420"
  },
  {
    "text": "for other types of metric providers things like data dog New Relic wavefront",
    "start": "1776420",
    "end": "1782090"
  },
  {
    "text": "and so we would like your help and contribution there to make this more",
    "start": "1782090",
    "end": "1787220"
  },
  {
    "text": "useful to the broader community so here are some links that you can check out in",
    "start": "1787220",
    "end": "1794150"
  },
  {
    "start": "1790000",
    "end": "2114000"
  },
  {
    "text": "addition Jesse and a couple of our colleagues have been writing a book on kubernetes and get-ups so you can scan",
    "start": "1794150",
    "end": "1800030"
  },
  {
    "text": "that QR code on the left for a preview of the book in addition Intuit is hiring",
    "start": "1800030",
    "end": "1806270"
  },
  {
    "text": "and so if you're excited by progressive delivery or just solving kubernetes at",
    "start": "1806270",
    "end": "1812450"
  },
  {
    "text": "scale feel free to scan that QR code or scan them both and so with that we'll open it",
    "start": "1812450",
    "end": "1819230"
  },
  {
    "text": "up for some questions thank you for attending yeah that was that was amazing",
    "start": "1819230",
    "end": "1828320"
  },
  {
    "text": "that just just well done thank you a couple of items before we go to",
    "start": "1828320",
    "end": "1833420"
  },
  {
    "text": "questions first of all you don't need to rush for lunch because we have like a private lunch area here we don't need to go with all",
    "start": "1833420",
    "end": "1840290"
  },
  {
    "text": "the crowd downstairs whether it's right here second don't forget to rate this talk that's like five stars in your",
    "start": "1840290",
    "end": "1846260"
  },
  {
    "text": "schedule application please do that and we do have like five minutes for questions I'll try to run the mic I need",
    "start": "1846260",
    "end": "1853880"
  },
  {
    "text": "to get my steps in today hello thank you for their a really nice talk thank you",
    "start": "1853880",
    "end": "1860090"
  },
  {
    "text": "very much you mentioned that you you you deploy like a thousand five hundred deployments",
    "start": "1860090",
    "end": "1866090"
  },
  {
    "text": "a day how do you manage the the queue that happens when you have to wait for all the",
    "start": "1866090",
    "end": "1871670"
  },
  {
    "text": "validations and how do we manage the I'm sorry what there's a queue that forms",
    "start": "1871670",
    "end": "1877250"
  },
  {
    "text": "because you can't the delays of the valid validations oh so hopefully I'm answering your",
    "start": "1877250",
    "end": "1885320"
  },
  {
    "text": "question so one of the in our delivery tool Argo CD we actually have a concept of health of a resource and so for",
    "start": "1885320",
    "end": "1892910"
  },
  {
    "text": "things like deployment a healthy deployment it actually is the same exact health when you run cube CTO rollout",
    "start": "1892910",
    "end": "1901130"
  },
  {
    "text": "status on the object and you basically meeting your available replicas and they",
    "start": "1901130",
    "end": "1907190"
  },
  {
    "text": "all are you your count is desired and all that stuff so in our in our pipelines there's this gating step that",
    "start": "1907190",
    "end": "1915380"
  },
  {
    "text": "it won't continue past that Jenkins step until the application itself is in a",
    "start": "1915380",
    "end": "1921470"
  },
  {
    "text": "healthy state because before that is actually in they say what would you which we call progressing hopefully that",
    "start": "1921470",
    "end": "1928070"
  },
  {
    "text": "answered your question also to that end for anyone who asks a question we have some Argo plushies get out so why don't",
    "start": "1928070",
    "end": "1935330"
  },
  {
    "text": "you come on up I could try throwing it but got it hi how do you version your",
    "start": "1935330",
    "end": "1945830"
  },
  {
    "text": "rollouts just version the robots yes so",
    "start": "1945830",
    "end": "1951590"
  },
  {
    "text": "these are ends so I guess another question with how do we use version deployments because were less are",
    "start": "1951590",
    "end": "1957890"
  },
  {
    "text": "basically the same as deployments yes we use get ops I guess it's the answer to",
    "start": "1957890",
    "end": "1963770"
  },
  {
    "text": "that and so as part of our pipelines a step in the pipeline is actually to",
    "start": "1963770",
    "end": "1970610"
  },
  {
    "text": "commit a new image tag to the git repo and then a call is made out to our go CD",
    "start": "1970610",
    "end": "1976250"
  },
  {
    "text": "which then synchronizes the live State with what was just committed and they get pipeline yeah okay and how do you",
    "start": "1976250",
    "end": "1983450"
  },
  {
    "text": "test services right after a rollout not",
    "start": "1983450",
    "end": "1989090"
  },
  {
    "text": "based on these Prometheus Prometheus metrics you know like service specific tests like like a helm test oh yeah so",
    "start": "1989090",
    "end": "1996320"
  },
  {
    "text": "that's also something that is partly covered by the Jenkins pipelines we rent",
    "start": "1996320",
    "end": "2002710"
  },
  {
    "text": "so the pipeline looks like okay commit that the new image tag wait for that",
    "start": "2002710",
    "end": "2009250"
  },
  {
    "text": "application to be available and ready and then some people will do actual",
    "start": "2009250",
    "end": "2015750"
  },
  {
    "text": "innovation test like a run as test script from the Jenkins pipeline but also we think that things like the job",
    "start": "2015750",
    "end": "2022270"
  },
  {
    "text": "based metric that I demonstrated will have like a more tightly coupled test",
    "start": "2022270",
    "end": "2028330"
  },
  {
    "text": "like a more smaller scope to test which maybe they can access things that aren't",
    "start": "2028330",
    "end": "2033940"
  },
  {
    "text": "accessible in say from the Jenkins namespace like maybe it needs to do something only accessible from within",
    "start": "2033940",
    "end": "2040390"
  },
  {
    "text": "the cluster okay one last question sure the analysis runs they'd literally just",
    "start": "2040390",
    "end": "2046450"
  },
  {
    "text": "test error rates right we do sorry were",
    "start": "2046450",
    "end": "2051669"
  },
  {
    "text": "you saying we you're asking if we were only testing air rates yes oh so the nice thing about the",
    "start": "2051670",
    "end": "2059080"
  },
  {
    "text": "analysis template is that it's totally configurable by the user so you don't",
    "start": "2059080",
    "end": "2064210"
  },
  {
    "text": "only have to test air rates you could test other things like saturation it's",
    "start": "2064210",
    "end": "2069580"
  },
  {
    "text": "ultimately dependent on what metrics that you have available yeah if you get",
    "start": "2069580",
    "end": "2076330"
  },
  {
    "text": "anything from this talk the one thing that we wanted to highlight was that the analysis template was basically gives",
    "start": "2076330",
    "end": "2083649"
  },
  {
    "text": "the developers control of what they consider interesting metrics for their",
    "start": "2083650",
    "end": "2089350"
  },
  {
    "text": "specific application and so it's we use the prompt well query and they could",
    "start": "2089350",
    "end": "2094960"
  },
  {
    "text": "write whatever prompt well query they want to extract the metrics that they care about yeah thank you",
    "start": "2094960",
    "end": "2102210"
  },
  {
    "text": "folks we are out of time so you can continue ask questions just yeah we'll",
    "start": "2102210",
    "end": "2107530"
  },
  {
    "text": "stick around and answer all the questions you might have thank you very much again thanks",
    "start": "2107530",
    "end": "2112720"
  },
  {
    "text": "everyone thank you",
    "start": "2112720",
    "end": "2115619"
  }
]