[
  {
    "start": "0",
    "end": "42000"
  },
  {
    "text": "all right hi everyone i'm julius i'm one",
    "start": "80",
    "end": "3280"
  },
  {
    "text": "of the co-founders of prometheus and i'm",
    "start": "3280",
    "end": "5600"
  },
  {
    "text": "also",
    "start": "5600",
    "end": "6000"
  },
  {
    "text": "the founder of prom labs my company with",
    "start": "6000",
    "end": "9120"
  },
  {
    "text": "prom labs i help",
    "start": "9120",
    "end": "10559"
  },
  {
    "text": "other companies use prometheus get the",
    "start": "10559",
    "end": "12799"
  },
  {
    "text": "most out of their prometheus build stuff",
    "start": "12799",
    "end": "14880"
  },
  {
    "text": "around it",
    "start": "14880",
    "end": "15759"
  },
  {
    "text": "so i do consulting training products",
    "start": "15759",
    "end": "19119"
  },
  {
    "text": "like a training website",
    "start": "19119",
    "end": "20800"
  },
  {
    "text": "or live trainings but also a prom ql",
    "start": "20800",
    "end": "23439"
  },
  {
    "text": "query builder called promlance",
    "start": "23439",
    "end": "25519"
  },
  {
    "text": "so if you're interested in any of that",
    "start": "25519",
    "end": "27279"
  },
  {
    "text": "check out promlabs.com",
    "start": "27279",
    "end": "29599"
  },
  {
    "text": "but today i'm going to talk about the",
    "start": "29599",
    "end": "31519"
  },
  {
    "text": "prom ql compatibility efforts",
    "start": "31519",
    "end": "33680"
  },
  {
    "text": "that i've been working on since last",
    "start": "33680",
    "end": "35760"
  },
  {
    "text": "year",
    "start": "35760",
    "end": "36719"
  },
  {
    "text": "so this is also mostly going to be an",
    "start": "36719",
    "end": "39200"
  },
  {
    "text": "actual prometheus open source",
    "start": "39200",
    "end": "40960"
  },
  {
    "text": "talk so prometheus",
    "start": "40960",
    "end": "44239"
  },
  {
    "text": "has become really successful it's become",
    "start": "44239",
    "end": "46719"
  },
  {
    "text": "the de facto standard for metrics based",
    "start": "46719",
    "end": "49360"
  },
  {
    "text": "open source monitoring this is really",
    "start": "49360",
    "end": "52079"
  },
  {
    "text": "amazing",
    "start": "52079",
    "end": "53440"
  },
  {
    "start": "53000",
    "end": "83000"
  },
  {
    "text": "and has already also brought a lot of",
    "start": "53440",
    "end": "56079"
  },
  {
    "text": "other players",
    "start": "56079",
    "end": "56879"
  },
  {
    "text": "onto the playing field who want to have",
    "start": "56879",
    "end": "58640"
  },
  {
    "text": "a piece of this who want to interoperate",
    "start": "58640",
    "end": "61199"
  },
  {
    "text": "who you know want to build a business",
    "start": "61199",
    "end": "63760"
  },
  {
    "text": "around it or just",
    "start": "63760",
    "end": "65040"
  },
  {
    "text": "you know have a different alternative",
    "start": "65040",
    "end": "66960"
  },
  {
    "text": "that is compatible",
    "start": "66960",
    "end": "69119"
  },
  {
    "text": "in this diagram i'm showing a number of",
    "start": "69119",
    "end": "71840"
  },
  {
    "text": "different open source projects and",
    "start": "71840",
    "end": "73920"
  },
  {
    "text": "hosted services and other projects",
    "start": "73920",
    "end": "77040"
  },
  {
    "text": "that promises can send data to this is",
    "start": "77040",
    "end": "79680"
  },
  {
    "text": "not an exclusive list",
    "start": "79680",
    "end": "80960"
  },
  {
    "text": "just a number of examples",
    "start": "80960",
    "end": "84240"
  },
  {
    "start": "83000",
    "end": "134000"
  },
  {
    "text": "and in general this is great because",
    "start": "84240",
    "end": "88240"
  },
  {
    "text": "you know the the standard prometheus",
    "start": "88240",
    "end": "90240"
  },
  {
    "text": "server might not be the best for",
    "start": "90240",
    "end": "92479"
  },
  {
    "text": "everyone for example for someone who",
    "start": "92479",
    "end": "94560"
  },
  {
    "text": "wants a truly horizontally scalable",
    "start": "94560",
    "end": "97680"
  },
  {
    "text": "alternative cortex might be better or",
    "start": "97680",
    "end": "100079"
  },
  {
    "text": "for someone who doesn't want to run",
    "start": "100079",
    "end": "101840"
  },
  {
    "text": "their own storage systems at all a",
    "start": "101840",
    "end": "103840"
  },
  {
    "text": "cloud-based",
    "start": "103840",
    "end": "105439"
  },
  {
    "text": "service might be very attractive and so",
    "start": "105439",
    "end": "107680"
  },
  {
    "text": "on and so on",
    "start": "107680",
    "end": "109040"
  },
  {
    "text": "so alternatives really offer different",
    "start": "109040",
    "end": "111280"
  },
  {
    "text": "trade-offs",
    "start": "111280",
    "end": "112079"
  },
  {
    "text": "for the different use cases of different",
    "start": "112079",
    "end": "114000"
  },
  {
    "text": "people",
    "start": "114000",
    "end": "115600"
  },
  {
    "text": "in general the interoperability then",
    "start": "115600",
    "end": "118640"
  },
  {
    "text": "also gives people a larger ecosystem of",
    "start": "118640",
    "end": "121119"
  },
  {
    "text": "puzzle pieces to put together in ways",
    "start": "121119",
    "end": "123680"
  },
  {
    "text": "that they see fit",
    "start": "123680",
    "end": "125280"
  },
  {
    "text": "and as long as this competition stays",
    "start": "125280",
    "end": "128399"
  },
  {
    "text": "healthy and open",
    "start": "128399",
    "end": "130399"
  },
  {
    "text": "we will get better monitoring for",
    "start": "130399",
    "end": "132319"
  },
  {
    "text": "everyone",
    "start": "132319",
    "end": "134560"
  },
  {
    "start": "134000",
    "end": "196000"
  },
  {
    "text": "but at the same time we have to be",
    "start": "134560",
    "end": "136560"
  },
  {
    "text": "vigilant and",
    "start": "136560",
    "end": "138000"
  },
  {
    "text": "be clear about compatibility",
    "start": "138000",
    "end": "140400"
  },
  {
    "text": "expectations",
    "start": "140400",
    "end": "141520"
  },
  {
    "text": "and actually delivery of those",
    "start": "141520",
    "end": "143280"
  },
  {
    "text": "expectations",
    "start": "143280",
    "end": "144640"
  },
  {
    "text": "so if someone uh does not",
    "start": "144640",
    "end": "148000"
  },
  {
    "text": "implement one of our interfaces",
    "start": "148000",
    "end": "150640"
  },
  {
    "text": "correctly",
    "start": "150640",
    "end": "151440"
  },
  {
    "text": "but says they do so you know they might",
    "start": "151440",
    "end": "153920"
  },
  {
    "text": "be misleading users or surprising users",
    "start": "153920",
    "end": "156239"
  },
  {
    "text": "when they least expect it",
    "start": "156239",
    "end": "158000"
  },
  {
    "text": "in the worst case an alert that you",
    "start": "158000",
    "end": "159760"
  },
  {
    "text": "don't get at night right that would be",
    "start": "159760",
    "end": "161680"
  },
  {
    "text": "bad",
    "start": "161680",
    "end": "163280"
  },
  {
    "text": "or you might just be then locked into",
    "start": "163280",
    "end": "167200"
  },
  {
    "text": "their specific",
    "start": "167200",
    "end": "168480"
  },
  {
    "text": "behavior in feature set which is no",
    "start": "168480",
    "end": "170720"
  },
  {
    "text": "longer compatible",
    "start": "170720",
    "end": "172000"
  },
  {
    "text": "with the rest of the ecosystem so you",
    "start": "172000",
    "end": "174239"
  },
  {
    "text": "can't easily switch anymore",
    "start": "174239",
    "end": "176879"
  },
  {
    "text": "and ultimately this leads to ecosystem",
    "start": "176879",
    "end": "179360"
  },
  {
    "text": "fragmentation",
    "start": "179360",
    "end": "180319"
  },
  {
    "text": "making the ecosystem weaker so we want",
    "start": "180319",
    "end": "182640"
  },
  {
    "text": "to really encourage",
    "start": "182640",
    "end": "183760"
  },
  {
    "text": "people to be both clear around their",
    "start": "183760",
    "end": "187360"
  },
  {
    "text": "communication",
    "start": "187360",
    "end": "188400"
  },
  {
    "text": "when it comes to compatibility and to",
    "start": "188400",
    "end": "190239"
  },
  {
    "text": "also implement",
    "start": "190239",
    "end": "191840"
  },
  {
    "text": "solutions to be compatible as compatible",
    "start": "191840",
    "end": "194159"
  },
  {
    "text": "as possible",
    "start": "194159",
    "end": "196640"
  },
  {
    "text": "so originally when we released",
    "start": "196640",
    "end": "199040"
  },
  {
    "text": "prometheus we focused a lot",
    "start": "199040",
    "end": "200879"
  },
  {
    "text": "on the implementation of the different",
    "start": "200879",
    "end": "203519"
  },
  {
    "text": "components",
    "start": "203519",
    "end": "204400"
  },
  {
    "text": "internally like how does the prometheus",
    "start": "204400",
    "end": "206400"
  },
  {
    "text": "server work internally what does it do",
    "start": "206400",
    "end": "208879"
  },
  {
    "text": "um what does it target internally how",
    "start": "208879",
    "end": "211120"
  },
  {
    "text": "does it track metrics",
    "start": "211120",
    "end": "212799"
  },
  {
    "text": "how does alert manager dispatch alerts",
    "start": "212799",
    "end": "214799"
  },
  {
    "text": "and so on but",
    "start": "214799",
    "end": "216159"
  },
  {
    "text": "of course all these different boxes the",
    "start": "216159",
    "end": "218239"
  },
  {
    "text": "components also",
    "start": "218239",
    "end": "219360"
  },
  {
    "text": "talk to each other and especially now",
    "start": "219360",
    "end": "222720"
  },
  {
    "text": "that",
    "start": "222720",
    "end": "223280"
  },
  {
    "text": "people came in and said okay we are",
    "start": "223280",
    "end": "226000"
  },
  {
    "text": "going to create",
    "start": "226000",
    "end": "227040"
  },
  {
    "text": "prometheus compatible solutions or that",
    "start": "227040",
    "end": "229280"
  },
  {
    "text": "interoperate with prometheus in one way",
    "start": "229280",
    "end": "231760"
  },
  {
    "text": "or another",
    "start": "231760",
    "end": "233040"
  },
  {
    "text": "the lines between these boxes the arrows",
    "start": "233040",
    "end": "236239"
  },
  {
    "text": "have become more important the",
    "start": "236239",
    "end": "238959"
  },
  {
    "text": "exposition format",
    "start": "238959",
    "end": "240000"
  },
  {
    "text": "is a pretty prominent one for",
    "start": "240000",
    "end": "241599"
  },
  {
    "text": "transferring metrics from a target to",
    "start": "241599",
    "end": "244000"
  },
  {
    "text": "prometheus",
    "start": "244000",
    "end": "245120"
  },
  {
    "text": "so you know that is currently being",
    "start": "245120",
    "end": "247120"
  },
  {
    "text": "standardized or has been standardized",
    "start": "247120",
    "end": "249439"
  },
  {
    "text": "as open metrics which is the standard",
    "start": "249439",
    "end": "252879"
  },
  {
    "text": "for sending metrics to prometheus that",
    "start": "252879",
    "end": "255200"
  },
  {
    "text": "has its own",
    "start": "255200",
    "end": "256079"
  },
  {
    "text": "test suite and spec there is",
    "start": "256079",
    "end": "259840"
  },
  {
    "text": "the remote write protocol which is being",
    "start": "259840",
    "end": "262320"
  },
  {
    "text": "used to send data from prometheus to",
    "start": "262320",
    "end": "264960"
  },
  {
    "text": "some remote storage system which could",
    "start": "264960",
    "end": "266639"
  },
  {
    "text": "be hosted or",
    "start": "266639",
    "end": "268080"
  },
  {
    "text": "you know another open source thing that",
    "start": "268080",
    "end": "269600"
  },
  {
    "text": "you run yourself",
    "start": "269600",
    "end": "271199"
  },
  {
    "text": "um there's the alerting protocol between",
    "start": "271199",
    "end": "273840"
  },
  {
    "text": "prometheus and alert manager",
    "start": "273840",
    "end": "275440"
  },
  {
    "text": "we haven't really seen that being",
    "start": "275440",
    "end": "277680"
  },
  {
    "text": "re-implemented much because it's",
    "start": "277680",
    "end": "279520"
  },
  {
    "text": "pretty specifically tied to those two",
    "start": "279520",
    "end": "282560"
  },
  {
    "text": "and a bit low level uh but",
    "start": "282560",
    "end": "285919"
  },
  {
    "text": "a fourth one of course that we have been",
    "start": "285919",
    "end": "288479"
  },
  {
    "text": "seeing",
    "start": "288479",
    "end": "289120"
  },
  {
    "text": "uh support crop up from different people",
    "start": "289120",
    "end": "292160"
  },
  {
    "text": "in hosted services and open source",
    "start": "292160",
    "end": "294240"
  },
  {
    "text": "projects has been",
    "start": "294240",
    "end": "295680"
  },
  {
    "text": "our query language promql so that",
    "start": "295680",
    "end": "298720"
  },
  {
    "text": "is also what i want to focus on today",
    "start": "298720",
    "end": "301919"
  },
  {
    "text": "people re-implementing promql or",
    "start": "301919",
    "end": "304880"
  },
  {
    "text": "offering it as part of their solutions",
    "start": "304880",
    "end": "307360"
  },
  {
    "text": "and the compatibility statements they",
    "start": "307360",
    "end": "310400"
  },
  {
    "text": "make around that versus",
    "start": "310400",
    "end": "312080"
  },
  {
    "text": "what they actually deliver prom ql",
    "start": "312080",
    "end": "315680"
  },
  {
    "start": "314000",
    "end": "359000"
  },
  {
    "text": "is really an important piece of the",
    "start": "315680",
    "end": "317759"
  },
  {
    "text": "prometheus story",
    "start": "317759",
    "end": "319120"
  },
  {
    "text": "so typically always when you collect the",
    "start": "319120",
    "end": "321840"
  },
  {
    "text": "data and you store it",
    "start": "321840",
    "end": "323440"
  },
  {
    "text": "you then want to first do prom ql on it",
    "start": "323440",
    "end": "326240"
  },
  {
    "text": "to do anything useful",
    "start": "326240",
    "end": "327840"
  },
  {
    "text": "whether that's dashboarding alerting ad",
    "start": "327840",
    "end": "329919"
  },
  {
    "text": "hoc debugging",
    "start": "329919",
    "end": "330960"
  },
  {
    "text": "you know automating the icd pipelines or",
    "start": "330960",
    "end": "333360"
  },
  {
    "text": "even exporting it for later use",
    "start": "333360",
    "end": "336240"
  },
  {
    "text": "typically you want to run prom ql on it",
    "start": "336240",
    "end": "339360"
  },
  {
    "text": "and prom ql is quite a powerful",
    "start": "339360",
    "end": "342479"
  },
  {
    "text": "language it's a big interface for sure",
    "start": "342479",
    "end": "345440"
  },
  {
    "text": "uh",
    "start": "345440",
    "end": "345759"
  },
  {
    "text": "it has a lot of subtle behaviors and",
    "start": "345759",
    "end": "349120"
  },
  {
    "text": "you know that you can get wrong or right",
    "start": "349120",
    "end": "351680"
  },
  {
    "text": "so",
    "start": "351680",
    "end": "352160"
  },
  {
    "text": "it's it's quite important for users to",
    "start": "352160",
    "end": "354400"
  },
  {
    "text": "not be surprised and so on to",
    "start": "354400",
    "end": "356160"
  },
  {
    "text": "to get this implemented correctly",
    "start": "356160",
    "end": "359840"
  },
  {
    "start": "359000",
    "end": "382000"
  },
  {
    "text": "so there's a number of projects vendors",
    "start": "359840",
    "end": "363120"
  },
  {
    "text": "hosted services etc that now",
    "start": "363120",
    "end": "366319"
  },
  {
    "text": "have prom qr support or claim partial",
    "start": "366319",
    "end": "369759"
  },
  {
    "text": "or full prom qr support you have open",
    "start": "369759",
    "end": "372720"
  },
  {
    "text": "source project again",
    "start": "372720",
    "end": "374000"
  },
  {
    "text": "in here you have hosted services and so",
    "start": "374000",
    "end": "376080"
  },
  {
    "text": "on",
    "start": "376080",
    "end": "377280"
  },
  {
    "text": "and we're going to go into some of these",
    "start": "377280",
    "end": "379360"
  },
  {
    "text": "a bit deeper",
    "start": "379360",
    "end": "380560"
  },
  {
    "text": "a bit later so but the question is how",
    "start": "380560",
    "end": "384319"
  },
  {
    "start": "382000",
    "end": "430000"
  },
  {
    "text": "do you even test",
    "start": "384319",
    "end": "385280"
  },
  {
    "text": "compatibility the issue here is that",
    "start": "385280",
    "end": "388639"
  },
  {
    "text": "there is no",
    "start": "388639",
    "end": "389600"
  },
  {
    "text": "formal spec for promql you can read the",
    "start": "389600",
    "end": "392720"
  },
  {
    "text": "documentation on prometheus.io and it",
    "start": "392720",
    "end": "395280"
  },
  {
    "text": "will tell you",
    "start": "395280",
    "end": "396080"
  },
  {
    "text": "the relevant or most relevant bits and",
    "start": "396080",
    "end": "398560"
  },
  {
    "text": "pieces",
    "start": "398560",
    "end": "399280"
  },
  {
    "text": "from the user's point of view but there",
    "start": "399280",
    "end": "401120"
  },
  {
    "text": "are still",
    "start": "401120",
    "end": "402479"
  },
  {
    "text": "a million small edge cases and subtle",
    "start": "402479",
    "end": "404800"
  },
  {
    "text": "behaviors and so on that if you just",
    "start": "404800",
    "end": "406639"
  },
  {
    "text": "read that you will probably not get that",
    "start": "406639",
    "end": "408639"
  },
  {
    "text": "right",
    "start": "408639",
    "end": "409039"
  },
  {
    "text": "if you just completely re-implement it",
    "start": "409039",
    "end": "410800"
  },
  {
    "text": "from scratch",
    "start": "410800",
    "end": "412479"
  },
  {
    "text": "so how do you test that so what i ended",
    "start": "412479",
    "end": "414880"
  },
  {
    "text": "up doing",
    "start": "414880",
    "end": "415599"
  },
  {
    "text": "is basically taking the prometheus",
    "start": "415599",
    "end": "418560"
  },
  {
    "text": "server itself",
    "start": "418560",
    "end": "419599"
  },
  {
    "text": "as the reference implementation and",
    "start": "419599",
    "end": "422639"
  },
  {
    "text": "testing against that like comparing any",
    "start": "422639",
    "end": "425199"
  },
  {
    "text": "vendor implementation against the",
    "start": "425199",
    "end": "426960"
  },
  {
    "text": "prometheus server's own",
    "start": "426960",
    "end": "428720"
  },
  {
    "text": "behavior i wrote a tool for that called",
    "start": "428720",
    "end": "432400"
  },
  {
    "start": "430000",
    "end": "529000"
  },
  {
    "text": "the prom ql compliance tester",
    "start": "432400",
    "end": "434960"
  },
  {
    "text": "it takes a test configuration the",
    "start": "434960",
    "end": "438240"
  },
  {
    "text": "reference api which would be typically",
    "start": "438240",
    "end": "440240"
  },
  {
    "text": "your prometheus server as the reference",
    "start": "440240",
    "end": "442400"
  },
  {
    "text": "and then the vendor or",
    "start": "442400",
    "end": "445680"
  },
  {
    "text": "open source project promql api that you",
    "start": "445680",
    "end": "449759"
  },
  {
    "text": "want",
    "start": "449759",
    "end": "450000"
  },
  {
    "text": "to compare and test and then it takes a",
    "start": "450000",
    "end": "453440"
  },
  {
    "text": "number of test cases in in the example",
    "start": "453440",
    "end": "456319"
  },
  {
    "text": "that i used i had like over 500",
    "start": "456319",
    "end": "458319"
  },
  {
    "text": "different",
    "start": "458319",
    "end": "459120"
  },
  {
    "text": "prom qr queries and they expect",
    "start": "459120",
    "end": "463120"
  },
  {
    "text": "that both of the reference and the test",
    "start": "463120",
    "end": "466800"
  },
  {
    "text": "system have been pre-populated with the",
    "start": "466800",
    "end": "469360"
  },
  {
    "text": "same data",
    "start": "469360",
    "end": "470160"
  },
  {
    "text": "so that you would expect in the best",
    "start": "470160",
    "end": "471840"
  },
  {
    "text": "case exactly the same answer coming back",
    "start": "471840",
    "end": "474160"
  },
  {
    "text": "in a query",
    "start": "474160",
    "end": "475919"
  },
  {
    "text": "so the tester tool then runs the same",
    "start": "475919",
    "end": "478560"
  },
  {
    "text": "query against the same data set in both",
    "start": "478560",
    "end": "480639"
  },
  {
    "text": "implementations",
    "start": "480639",
    "end": "482000"
  },
  {
    "text": "compares the results and writes a test",
    "start": "482000",
    "end": "484960"
  },
  {
    "text": "output",
    "start": "484960",
    "end": "485680"
  },
  {
    "text": "and the test output will include how",
    "start": "485680",
    "end": "488479"
  },
  {
    "text": "many",
    "start": "488479",
    "end": "489199"
  },
  {
    "text": "tests failed or passed and a percentage",
    "start": "489199",
    "end": "491360"
  },
  {
    "text": "score",
    "start": "491360",
    "end": "492639"
  },
  {
    "text": "basically you know just based on did",
    "start": "492639",
    "end": "495520"
  },
  {
    "text": "they really return",
    "start": "495520",
    "end": "496639"
  },
  {
    "text": "exactly the same results modulo some",
    "start": "496639",
    "end": "499440"
  },
  {
    "text": "very slight",
    "start": "499440",
    "end": "500720"
  },
  {
    "text": "allowances in floating point values here",
    "start": "500720",
    "end": "503199"
  },
  {
    "text": "and there",
    "start": "503199",
    "end": "503919"
  },
  {
    "text": "or you know it pre-sorts the result",
    "start": "503919",
    "end": "506240"
  },
  {
    "text": "before comparing because",
    "start": "506240",
    "end": "508479"
  },
  {
    "text": "the sorting is undefined uh completely",
    "start": "508479",
    "end": "511280"
  },
  {
    "text": "in prom ql",
    "start": "511280",
    "end": "512399"
  },
  {
    "text": "unless you use the sort functions um",
    "start": "512399",
    "end": "515518"
  },
  {
    "text": "and for the cases where there's a",
    "start": "515519",
    "end": "517919"
  },
  {
    "text": "failure it actually gives you a detailed",
    "start": "517919",
    "end": "520399"
  },
  {
    "text": "error message or an actual diff",
    "start": "520399",
    "end": "522640"
  },
  {
    "text": "of the difference of the sample values",
    "start": "522640",
    "end": "524800"
  },
  {
    "text": "returned so you can debug and figure out",
    "start": "524800",
    "end": "526800"
  },
  {
    "text": "what is actually going wrong",
    "start": "526800",
    "end": "530000"
  },
  {
    "start": "529000",
    "end": "568000"
  },
  {
    "text": "so test summary might look something",
    "start": "530320",
    "end": "532240"
  },
  {
    "text": "like this",
    "start": "532240",
    "end": "534720"
  },
  {
    "text": "this is just a very small excerpt of one",
    "start": "534880",
    "end": "537200"
  },
  {
    "text": "that's currently",
    "start": "537200",
    "end": "538640"
  },
  {
    "text": "linked of one of the blog posts that's",
    "start": "538640",
    "end": "541839"
  },
  {
    "text": "in this presentation",
    "start": "541839",
    "end": "543440"
  },
  {
    "text": "on the prom labs home page in the",
    "start": "543440",
    "end": "545519"
  },
  {
    "text": "resources section",
    "start": "545519",
    "end": "547760"
  },
  {
    "text": "you can basically see each query that",
    "start": "547760",
    "end": "550000"
  },
  {
    "text": "was executed",
    "start": "550000",
    "end": "552000"
  },
  {
    "text": "and for the ones that failed either get",
    "start": "552000",
    "end": "555200"
  },
  {
    "text": "an error message",
    "start": "555200",
    "end": "556320"
  },
  {
    "text": "or get this kind of div output where you",
    "start": "556320",
    "end": "559120"
  },
  {
    "text": "know in this case you can see that",
    "start": "559120",
    "end": "560480"
  },
  {
    "text": "there's slight differences in the actual",
    "start": "560480",
    "end": "562480"
  },
  {
    "text": "floating point values",
    "start": "562480",
    "end": "564240"
  },
  {
    "text": "for the quantile operator",
    "start": "564240",
    "end": "568240"
  },
  {
    "start": "568000",
    "end": "605000"
  },
  {
    "text": "so this project started as a prominent",
    "start": "569920",
    "end": "572399"
  },
  {
    "text": "project",
    "start": "572399",
    "end": "573200"
  },
  {
    "text": "in the promlabs github org but just now",
    "start": "573200",
    "end": "576640"
  },
  {
    "text": "april 2021 i donated it to the new",
    "start": "576640",
    "end": "580320"
  },
  {
    "text": "prometheus compliance repo",
    "start": "580320",
    "end": "582320"
  },
  {
    "text": "where we as in the prometheus team all",
    "start": "582320",
    "end": "585120"
  },
  {
    "text": "want to collaborate",
    "start": "585120",
    "end": "586240"
  },
  {
    "text": "on you know bringing more focus",
    "start": "586240",
    "end": "589519"
  },
  {
    "text": "on compliance and compatibility testing",
    "start": "589519",
    "end": "592080"
  },
  {
    "text": "to the various prometheus interfaces",
    "start": "592080",
    "end": "594560"
  },
  {
    "text": "remote right also and open metrics and",
    "start": "594560",
    "end": "597120"
  },
  {
    "text": "so on",
    "start": "597120",
    "end": "597839"
  },
  {
    "text": "uh so it really made sense to donate",
    "start": "597839",
    "end": "600080"
  },
  {
    "text": "this prom ql tester there as well so now",
    "start": "600080",
    "end": "602320"
  },
  {
    "text": "it lives there",
    "start": "602320",
    "end": "605839"
  },
  {
    "start": "605000",
    "end": "643000"
  },
  {
    "text": "i did two initial test runs of different",
    "start": "605839",
    "end": "609279"
  },
  {
    "text": "vendor implementations and wrote blog",
    "start": "609279",
    "end": "611279"
  },
  {
    "text": "posts about that",
    "start": "611279",
    "end": "612320"
  },
  {
    "text": "last year so you can find the full",
    "start": "612320",
    "end": "614000"
  },
  {
    "text": "details in under these two links",
    "start": "614000",
    "end": "617040"
  },
  {
    "text": "today i'm just going to talk a bit about",
    "start": "617040",
    "end": "619600"
  },
  {
    "text": "the latest results from december 2020",
    "start": "619600",
    "end": "623760"
  },
  {
    "text": "one note i didn't run tests in the",
    "start": "623760",
    "end": "626240"
  },
  {
    "text": "recent months",
    "start": "626240",
    "end": "627120"
  },
  {
    "text": "after that so it could totally be that",
    "start": "627120",
    "end": "629279"
  },
  {
    "text": "some vendors have different results now",
    "start": "629279",
    "end": "631360"
  },
  {
    "text": "hopefully better ones so keep in mind",
    "start": "631360",
    "end": "634160"
  },
  {
    "text": "this is the state from december 2020",
    "start": "634160",
    "end": "637600"
  },
  {
    "text": "but of course like we hope to have",
    "start": "637600",
    "end": "639519"
  },
  {
    "text": "updates again in the future",
    "start": "639519",
    "end": "641120"
  },
  {
    "text": "as the prometheus team",
    "start": "641120",
    "end": "647760"
  },
  {
    "start": "643000",
    "end": "698000"
  },
  {
    "text": "so here are the vendors that are",
    "start": "647760",
    "end": "649920"
  },
  {
    "text": "included in the last",
    "start": "649920",
    "end": "651200"
  },
  {
    "text": "test run these are not all of the ones",
    "start": "651200",
    "end": "653920"
  },
  {
    "text": "that i had initially listed",
    "start": "653920",
    "end": "655360"
  },
  {
    "text": "because you know for example i had log z",
    "start": "655360",
    "end": "658320"
  },
  {
    "text": "listed but i think i didn't even",
    "start": "658320",
    "end": "660000"
  },
  {
    "text": "know that they had a hosted prometheus",
    "start": "660000",
    "end": "661519"
  },
  {
    "text": "service yet or didn't exist yet",
    "start": "661519",
    "end": "664480"
  },
  {
    "text": "and so they were not included and",
    "start": "664480",
    "end": "667040"
  },
  {
    "text": "wavefront",
    "start": "667040",
    "end": "667920"
  },
  {
    "text": "has some quite limited pronql",
    "start": "667920",
    "end": "672079"
  },
  {
    "text": "compatible or not well capabilities i",
    "start": "672079",
    "end": "674959"
  },
  {
    "text": "would say",
    "start": "674959",
    "end": "675760"
  },
  {
    "text": "because they're not quite compatible uh",
    "start": "675760",
    "end": "677760"
  },
  {
    "text": "but the http api",
    "start": "677760",
    "end": "679680"
  },
  {
    "text": "that they had was so different that it",
    "start": "679680",
    "end": "682240"
  },
  {
    "text": "wasn't even possible to run the tester",
    "start": "682240",
    "end": "684240"
  },
  {
    "text": "tool against it yet",
    "start": "684240",
    "end": "685760"
  },
  {
    "text": "i have been communicating with them so",
    "start": "685760",
    "end": "687760"
  },
  {
    "text": "you know potentially it will become",
    "start": "687760",
    "end": "689519"
  },
  {
    "text": "possible in the future but",
    "start": "689519",
    "end": "690959"
  },
  {
    "text": "i can't say anything about that yet so",
    "start": "690959",
    "end": "693600"
  },
  {
    "text": "for now i",
    "start": "693600",
    "end": "694320"
  },
  {
    "text": "i tested you know all the ones you can",
    "start": "694320",
    "end": "697120"
  },
  {
    "text": "see here",
    "start": "697120",
    "end": "699279"
  },
  {
    "start": "698000",
    "end": "763000"
  },
  {
    "text": "i want to give one word of caution about",
    "start": "699279",
    "end": "702160"
  },
  {
    "text": "interpreting the numeric test scores",
    "start": "702160",
    "end": "704720"
  },
  {
    "text": "because either don't just look at",
    "start": "704720",
    "end": "708079"
  },
  {
    "text": "the score alone because",
    "start": "708079",
    "end": "711440"
  },
  {
    "text": "obviously like some differences in",
    "start": "711440",
    "end": "713120"
  },
  {
    "text": "behavior they cause",
    "start": "713120",
    "end": "715040"
  },
  {
    "text": "one test failure but you know depending",
    "start": "715040",
    "end": "718800"
  },
  {
    "text": "on the difference in behavior it might",
    "start": "718800",
    "end": "720240"
  },
  {
    "text": "actually be a really",
    "start": "720240",
    "end": "721200"
  },
  {
    "text": "impactful breakage or a tiny",
    "start": "721200",
    "end": "724639"
  },
  {
    "text": "difference in floating point value so",
    "start": "724639",
    "end": "729519"
  },
  {
    "text": "really look at the detailed test results",
    "start": "729519",
    "end": "731600"
  },
  {
    "text": "to to see like",
    "start": "731600",
    "end": "732880"
  },
  {
    "text": "if this really matters for you and to",
    "start": "732880",
    "end": "734639"
  },
  {
    "text": "see how bad it really is",
    "start": "734639",
    "end": "736720"
  },
  {
    "text": "and also some differences are more",
    "start": "736720",
    "end": "738240"
  },
  {
    "text": "general than others so they might like",
    "start": "738240",
    "end": "740000"
  },
  {
    "text": "affect",
    "start": "740000",
    "end": "740800"
  },
  {
    "text": "multiple query types where this one",
    "start": "740800",
    "end": "743040"
  },
  {
    "text": "specific little bug",
    "start": "743040",
    "end": "744880"
  },
  {
    "text": "over in a popular function potentially",
    "start": "744880",
    "end": "747760"
  },
  {
    "text": "but that only test once",
    "start": "747760",
    "end": "749279"
  },
  {
    "text": "so it depends a lot of course on my test",
    "start": "749279",
    "end": "751760"
  },
  {
    "text": "query set and so on so look at the",
    "start": "751760",
    "end": "753360"
  },
  {
    "text": "detailed results",
    "start": "753360",
    "end": "754720"
  },
  {
    "text": "if you really want to see what is going",
    "start": "754720",
    "end": "756639"
  },
  {
    "text": "on and want to make an informed choice",
    "start": "756639",
    "end": "759760"
  },
  {
    "text": "when choosing a prometheus compatible",
    "start": "759760",
    "end": "762079"
  },
  {
    "text": "system",
    "start": "762079",
    "end": "763600"
  },
  {
    "start": "763000",
    "end": "854000"
  },
  {
    "text": "or prom compatible system so",
    "start": "763600",
    "end": "766959"
  },
  {
    "text": "this is a quick result overview table",
    "start": "766959",
    "end": "769839"
  },
  {
    "text": "here of the different systems i",
    "start": "769839",
    "end": "771440"
  },
  {
    "text": "tested most of them are a hundred",
    "start": "771440",
    "end": "774560"
  },
  {
    "text": "percent or close to a hundred percent",
    "start": "774560",
    "end": "776720"
  },
  {
    "text": "i have two outliers here new relic and",
    "start": "776720",
    "end": "779440"
  },
  {
    "text": "victoria metrics which are quite",
    "start": "779440",
    "end": "781360"
  },
  {
    "text": "far from that um we're gonna see why",
    "start": "781360",
    "end": "784560"
  },
  {
    "text": "that is",
    "start": "784560",
    "end": "785120"
  },
  {
    "text": "later then there's the feature",
    "start": "785120",
    "end": "788560"
  },
  {
    "text": "of cross-cutting issues that can be",
    "start": "788560",
    "end": "791600"
  },
  {
    "text": "isolated in the tests",
    "start": "791600",
    "end": "793440"
  },
  {
    "text": "so there are sometimes in an",
    "start": "793440",
    "end": "795279"
  },
  {
    "text": "implementation general",
    "start": "795279",
    "end": "797440"
  },
  {
    "text": "query bugs or issues that cause",
    "start": "797440",
    "end": "799920"
  },
  {
    "text": "potentially even all queries to be",
    "start": "799920",
    "end": "802079"
  },
  {
    "text": "different if you don't",
    "start": "802079",
    "end": "803360"
  },
  {
    "text": "factor out this issue for example",
    "start": "803360",
    "end": "806880"
  },
  {
    "text": "an older version of cortex had a slight",
    "start": "806880",
    "end": "810639"
  },
  {
    "text": "query input timestamp parsing bug",
    "start": "810639",
    "end": "814160"
  },
  {
    "text": "so every time stamp in the output would",
    "start": "814160",
    "end": "817200"
  },
  {
    "text": "also be off by like one millisecond and",
    "start": "817200",
    "end": "819199"
  },
  {
    "text": "then",
    "start": "819199",
    "end": "819519"
  },
  {
    "text": "all the results would not be the same",
    "start": "819519",
    "end": "821519"
  },
  {
    "text": "and basically",
    "start": "821519",
    "end": "822800"
  },
  {
    "text": "you know to work around that and still",
    "start": "822800",
    "end": "824320"
  },
  {
    "text": "make the rest of the results comparable",
    "start": "824320",
    "end": "826160"
  },
  {
    "text": "i added certain",
    "start": "826160",
    "end": "827440"
  },
  {
    "text": "query tweaks that you can turn on for",
    "start": "827440",
    "end": "830000"
  },
  {
    "text": "test targets saying",
    "start": "830000",
    "end": "831600"
  },
  {
    "text": "um send a query in such a way that this",
    "start": "831600",
    "end": "834720"
  },
  {
    "text": "bug does not occur so you can still run",
    "start": "834720",
    "end": "836639"
  },
  {
    "text": "the rest of",
    "start": "836639",
    "end": "837519"
  },
  {
    "text": "the uh of all the comparisons",
    "start": "837519",
    "end": "841120"
  },
  {
    "text": "so the query tweaks that are necessary",
    "start": "841120",
    "end": "843120"
  },
  {
    "text": "to enable that",
    "start": "843120",
    "end": "844320"
  },
  {
    "text": "are still listed here and if you click",
    "start": "844320",
    "end": "846320"
  },
  {
    "text": "in the blog",
    "start": "846320",
    "end": "847760"
  },
  {
    "text": "on those details you will also see uh",
    "start": "847760",
    "end": "850720"
  },
  {
    "text": "what exactly those query",
    "start": "850720",
    "end": "852160"
  },
  {
    "text": "tweaks were that were necessary okay",
    "start": "852160",
    "end": "855360"
  },
  {
    "text": "let's take a look",
    "start": "855360",
    "end": "856399"
  },
  {
    "text": "at some of the results just briefly",
    "start": "856399",
    "end": "859440"
  },
  {
    "start": "859000",
    "end": "881000"
  },
  {
    "text": "so the first one was chronosphere i",
    "start": "859440",
    "end": "861279"
  },
  {
    "text": "don't have to say too much about that",
    "start": "861279",
    "end": "862959"
  },
  {
    "text": "because they got",
    "start": "862959",
    "end": "863760"
  },
  {
    "text": "a hundred percent everything passed they",
    "start": "863760",
    "end": "866399"
  },
  {
    "text": "are",
    "start": "866399",
    "end": "866880"
  },
  {
    "text": "based on the open source m3 db system",
    "start": "866880",
    "end": "870639"
  },
  {
    "text": "coming out of uber",
    "start": "870639",
    "end": "872399"
  },
  {
    "text": "the good thing here is they reused the",
    "start": "872399",
    "end": "874160"
  },
  {
    "text": "native prom ql engine code so",
    "start": "874160",
    "end": "876079"
  },
  {
    "text": "you know that's already very helpful for",
    "start": "876079",
    "end": "878480"
  },
  {
    "text": "getting very close",
    "start": "878480",
    "end": "879519"
  },
  {
    "text": "or 100 cortex",
    "start": "879519",
    "end": "883040"
  },
  {
    "text": "as well is reusing the prom ql engine",
    "start": "883040",
    "end": "886160"
  },
  {
    "text": "code is an open source project got 100",
    "start": "886160",
    "end": "889440"
  },
  {
    "text": "uh one little note here um in an older",
    "start": "889440",
    "end": "892560"
  },
  {
    "text": "version",
    "start": "892560",
    "end": "893120"
  },
  {
    "text": "when i was still using the legacy chunk",
    "start": "893120",
    "end": "895600"
  },
  {
    "text": "storage mode with it",
    "start": "895600",
    "end": "897199"
  },
  {
    "text": "it couldn't execute queries that didn't",
    "start": "897199",
    "end": "899680"
  },
  {
    "text": "contain",
    "start": "899680",
    "end": "900639"
  },
  {
    "text": "a metric name so for that some of the",
    "start": "900639",
    "end": "903279"
  },
  {
    "text": "queries were failing",
    "start": "903279",
    "end": "904560"
  },
  {
    "text": "um i only got 99.62",
    "start": "904560",
    "end": "908000"
  },
  {
    "text": "but you know if you run cortex now with",
    "start": "908000",
    "end": "910480"
  },
  {
    "text": "the new block storage",
    "start": "910480",
    "end": "911600"
  },
  {
    "text": "you should get 100",
    "start": "911600",
    "end": "914639"
  },
  {
    "text": "grafina cloud is cortex based and they",
    "start": "915040",
    "end": "918000"
  },
  {
    "text": "are",
    "start": "918000",
    "end": "918320"
  },
  {
    "text": "using block storage so they also got 100",
    "start": "918320",
    "end": "921600"
  },
  {
    "text": "modulo one little cross cutting issue",
    "start": "921600",
    "end": "924560"
  },
  {
    "text": "they align the incoming query timestamps",
    "start": "924560",
    "end": "927440"
  },
  {
    "text": "to the resolution step to enable query",
    "start": "927440",
    "end": "929839"
  },
  {
    "text": "caching",
    "start": "929839",
    "end": "931040"
  },
  {
    "text": "uh so this may or may not be a problem",
    "start": "931040",
    "end": "934639"
  },
  {
    "text": "for you",
    "start": "934639",
    "end": "935120"
  },
  {
    "text": "depends uh but it's something that",
    "start": "935120",
    "end": "937120"
  },
  {
    "text": "should be pointed out it's not",
    "start": "937120",
    "end": "938560"
  },
  {
    "text": "technically",
    "start": "938560",
    "end": "939440"
  },
  {
    "text": "correct prom ql evaluation but factoring",
    "start": "939440",
    "end": "942880"
  },
  {
    "text": "out that issue",
    "start": "942880",
    "end": "944000"
  },
  {
    "text": "they get a hundred percent",
    "start": "944000",
    "end": "947199"
  },
  {
    "start": "947000",
    "end": "957000"
  },
  {
    "text": "uh m3 as the pure open source project i",
    "start": "948079",
    "end": "950639"
  },
  {
    "text": "also just tried running that myself",
    "start": "950639",
    "end": "952399"
  },
  {
    "text": "storing data in there",
    "start": "952399",
    "end": "953440"
  },
  {
    "text": "querying it back out and also got 100",
    "start": "953440",
    "end": "956320"
  },
  {
    "text": "great",
    "start": "956320",
    "end": "957920"
  },
  {
    "start": "957000",
    "end": "984000"
  },
  {
    "text": "metric fire is another cortex-based",
    "start": "957920",
    "end": "960959"
  },
  {
    "text": "hosted service um they are still running",
    "start": "960959",
    "end": "964240"
  },
  {
    "text": "a slightly outdated version of cortex at",
    "start": "964240",
    "end": "966639"
  },
  {
    "text": "least there were in december",
    "start": "966639",
    "end": "968000"
  },
  {
    "text": "and so they didn't get the full hundred",
    "start": "968000",
    "end": "969600"
  },
  {
    "text": "percent um",
    "start": "969600",
    "end": "971040"
  },
  {
    "text": "but you know i i hope maybe already",
    "start": "971040",
    "end": "973600"
  },
  {
    "text": "they're getting 100 if i would test them",
    "start": "973600",
    "end": "975440"
  },
  {
    "text": "now",
    "start": "975440",
    "end": "975759"
  },
  {
    "text": "they are aware of the issue and",
    "start": "975759",
    "end": "978160"
  },
  {
    "text": "basically a cortex update",
    "start": "978160",
    "end": "980160"
  },
  {
    "text": "hopefully will bring them to a hundred",
    "start": "980160",
    "end": "982240"
  },
  {
    "text": "percent",
    "start": "982240",
    "end": "984639"
  },
  {
    "start": "984000",
    "end": "1084000"
  },
  {
    "text": "uh new relic is a hosted monitoring",
    "start": "984639",
    "end": "989360"
  },
  {
    "text": "or application performance monitoring uh",
    "start": "989360",
    "end": "992000"
  },
  {
    "text": "player",
    "start": "992000",
    "end": "992720"
  },
  {
    "text": "that's been around for a long time um",
    "start": "992720",
    "end": "995199"
  },
  {
    "text": "full disclosure",
    "start": "995199",
    "end": "996000"
  },
  {
    "text": "i have been consulting with them a bit",
    "start": "996000",
    "end": "998399"
  },
  {
    "text": "on this trying to improve",
    "start": "998399",
    "end": "999839"
  },
  {
    "text": "the prom ql support they were building",
    "start": "999839",
    "end": "1002560"
  },
  {
    "text": "um",
    "start": "1002560",
    "end": "1003120"
  },
  {
    "text": "the big challenge in their",
    "start": "1003120",
    "end": "1005360"
  },
  {
    "text": "implementation",
    "start": "1005360",
    "end": "1006560"
  },
  {
    "text": "is that they they",
    "start": "1006560",
    "end": "1009680"
  },
  {
    "text": "wanted to reuse what they already had so",
    "start": "1009680",
    "end": "1011920"
  },
  {
    "text": "they have an existing query language",
    "start": "1011920",
    "end": "1014160"
  },
  {
    "text": "called",
    "start": "1014160",
    "end": "1014720"
  },
  {
    "text": "nrql and an underlying database in our",
    "start": "1014720",
    "end": "1017920"
  },
  {
    "text": "db",
    "start": "1017920",
    "end": "1019920"
  },
  {
    "text": "and they were conceptually not really",
    "start": "1019920",
    "end": "1022560"
  },
  {
    "text": "compatible with prom ql",
    "start": "1022560",
    "end": "1024798"
  },
  {
    "text": "data models and language concepts so it",
    "start": "1024799",
    "end": "1027678"
  },
  {
    "text": "was",
    "start": "1027679",
    "end": "1028798"
  },
  {
    "text": "not really possible to to were",
    "start": "1028799",
    "end": "1032160"
  },
  {
    "text": "feasible to to transpile everything",
    "start": "1032160",
    "end": "1034959"
  },
  {
    "text": "faithfully",
    "start": "1034959",
    "end": "1035839"
  },
  {
    "text": "into nrql so",
    "start": "1035839",
    "end": "1039038"
  },
  {
    "text": "you know as some examples obviously you",
    "start": "1039039",
    "end": "1041360"
  },
  {
    "text": "see the score they got in",
    "start": "1041360",
    "end": "1042798"
  },
  {
    "text": "in my case was only around 31 with some",
    "start": "1042799",
    "end": "1045678"
  },
  {
    "text": "cross-cutting issues",
    "start": "1045679",
    "end": "1047199"
  },
  {
    "text": "so they don't you know support certain",
    "start": "1047199",
    "end": "1049440"
  },
  {
    "text": "features like binary operator modifiers",
    "start": "1049440",
    "end": "1051919"
  },
  {
    "text": "quite important i would say",
    "start": "1051919",
    "end": "1053919"
  },
  {
    "text": "not all functions we have in prom ql",
    "start": "1053919",
    "end": "1056160"
  },
  {
    "text": "staleness handling special float values",
    "start": "1056160",
    "end": "1058240"
  },
  {
    "text": "and a bunch more of a little different",
    "start": "1058240",
    "end": "1060320"
  },
  {
    "text": "behaviors that you can look up",
    "start": "1060320",
    "end": "1061919"
  },
  {
    "text": "in the blog post",
    "start": "1061919",
    "end": "1064799"
  },
  {
    "text": "so you know pointing new relic at a",
    "start": "1065120",
    "end": "1068160"
  },
  {
    "text": "grafana dashboard",
    "start": "1068160",
    "end": "1069760"
  },
  {
    "text": "or pointing a graffana dashboard with a",
    "start": "1069760",
    "end": "1071840"
  },
  {
    "text": "prometheus data source at neuralic might",
    "start": "1071840",
    "end": "1073760"
  },
  {
    "text": "give you",
    "start": "1073760",
    "end": "1074480"
  },
  {
    "text": "quite similar looking results sometimes",
    "start": "1074480",
    "end": "1076720"
  },
  {
    "text": "but",
    "start": "1076720",
    "end": "1078240"
  },
  {
    "text": "it's it's going to have quite some",
    "start": "1078240",
    "end": "1079760"
  },
  {
    "text": "differences and and",
    "start": "1079760",
    "end": "1081280"
  },
  {
    "text": "not supported queries as well",
    "start": "1081280",
    "end": "1084559"
  },
  {
    "start": "1084000",
    "end": "1103000"
  },
  {
    "text": "then there is another project which",
    "start": "1084559",
    "end": "1088320"
  },
  {
    "text": "is like so prompt scale is an adapter",
    "start": "1088320",
    "end": "1090960"
  },
  {
    "text": "for the time scale",
    "start": "1090960",
    "end": "1092240"
  },
  {
    "text": "database by the time scale folks it's",
    "start": "1092240",
    "end": "1094640"
  },
  {
    "text": "open source",
    "start": "1094640",
    "end": "1095520"
  },
  {
    "text": "and it's also reusing the native prom ql",
    "start": "1095520",
    "end": "1097919"
  },
  {
    "text": "engine",
    "start": "1097919",
    "end": "1098720"
  },
  {
    "text": "and again great job getting 100",
    "start": "1098720",
    "end": "1103679"
  },
  {
    "start": "1103000",
    "end": "1110000"
  },
  {
    "text": "thanos same case open source reusing",
    "start": "1103679",
    "end": "1106559"
  },
  {
    "text": "prom ql engine from upstream",
    "start": "1106559",
    "end": "1108320"
  },
  {
    "text": "getting 100 uh as a last",
    "start": "1108320",
    "end": "1112000"
  },
  {
    "start": "1110000",
    "end": "1205000"
  },
  {
    "text": "case here in the alphabet i have",
    "start": "1112000",
    "end": "1114559"
  },
  {
    "text": "victoria metrics",
    "start": "1114559",
    "end": "1116240"
  },
  {
    "text": "they are also an interesting case in",
    "start": "1116240",
    "end": "1118720"
  },
  {
    "text": "that they really position themselves",
    "start": "1118720",
    "end": "1120720"
  },
  {
    "text": "marketing wise as a drop in replacement",
    "start": "1120720",
    "end": "1123360"
  },
  {
    "text": "to prometheus",
    "start": "1123360",
    "end": "1125919"
  },
  {
    "text": "but they have their own language dialect",
    "start": "1125919",
    "end": "1128400"
  },
  {
    "text": "called matrix ql",
    "start": "1128400",
    "end": "1130880"
  },
  {
    "text": "but you know in the first sentence",
    "start": "1130880",
    "end": "1132400"
  },
  {
    "text": "typically describing it it says",
    "start": "1132400",
    "end": "1134400"
  },
  {
    "text": "metrics ql is prom ql backwards",
    "start": "1134400",
    "end": "1136799"
  },
  {
    "text": "compatible",
    "start": "1136799",
    "end": "1138000"
  },
  {
    "text": "um but then if you keep on reading there",
    "start": "1138000",
    "end": "1140240"
  },
  {
    "text": "is a bunch of exceptions",
    "start": "1140240",
    "end": "1142240"
  },
  {
    "text": "listed how they are not compatible and",
    "start": "1142240",
    "end": "1144320"
  },
  {
    "text": "they have extra functions and",
    "start": "1144320",
    "end": "1145919"
  },
  {
    "text": "they do quite a bunch of things quite",
    "start": "1145919",
    "end": "1147679"
  },
  {
    "text": "differently um",
    "start": "1147679",
    "end": "1150720"
  },
  {
    "text": "and yeah in this case they got around 60",
    "start": "1150720",
    "end": "1154080"
  },
  {
    "text": "not quite with some cross-cutting issues",
    "start": "1154080",
    "end": "1156400"
  },
  {
    "text": "as well",
    "start": "1156400",
    "end": "1157520"
  },
  {
    "text": "um you know they have different",
    "start": "1157520",
    "end": "1159120"
  },
  {
    "text": "behaviors around when they drop metric",
    "start": "1159120",
    "end": "1161120"
  },
  {
    "text": "names they select one more sample in",
    "start": "1161120",
    "end": "1163840"
  },
  {
    "text": "range vector selectors than prometheus",
    "start": "1163840",
    "end": "1165679"
  },
  {
    "text": "does",
    "start": "1165679",
    "end": "1166559"
  },
  {
    "text": "they don't support the staleness markers",
    "start": "1166559",
    "end": "1169840"
  },
  {
    "text": "that prometheus does",
    "start": "1169840",
    "end": "1171120"
  },
  {
    "text": "they remove nan float values from",
    "start": "1171120",
    "end": "1174799"
  },
  {
    "text": "outputs",
    "start": "1174799",
    "end": "1175840"
  },
  {
    "text": "they also don't store full float values",
    "start": "1175840",
    "end": "1179120"
  },
  {
    "text": "so you can't get the full float values",
    "start": "1179120",
    "end": "1181280"
  },
  {
    "text": "back out of the database",
    "start": "1181280",
    "end": "1183200"
  },
  {
    "text": "um so that also sometimes caused the",
    "start": "1183200",
    "end": "1185919"
  },
  {
    "text": "thresholds",
    "start": "1185919",
    "end": "1186799"
  },
  {
    "text": "of the comparison of the comparator to",
    "start": "1186799",
    "end": "1189360"
  },
  {
    "text": "say",
    "start": "1189360",
    "end": "1190320"
  },
  {
    "text": "hey you know this this query actually",
    "start": "1190320",
    "end": "1192160"
  },
  {
    "text": "failed uh and there's",
    "start": "1192160",
    "end": "1193840"
  },
  {
    "text": "a couple more differences uh in",
    "start": "1193840",
    "end": "1196400"
  },
  {
    "text": "backwards compatibility that are not",
    "start": "1196400",
    "end": "1198080"
  },
  {
    "text": "quite met here",
    "start": "1198080",
    "end": "1199440"
  },
  {
    "text": "uh so this is just you know something",
    "start": "1199440",
    "end": "1200880"
  },
  {
    "text": "you might want to look at if you",
    "start": "1200880",
    "end": "1202880"
  },
  {
    "text": "were to choose a solution",
    "start": "1202880",
    "end": "1206159"
  },
  {
    "start": "1205000",
    "end": "1212000"
  },
  {
    "text": "so that that's it for just diving a tiny",
    "start": "1206159",
    "end": "1209840"
  },
  {
    "text": "bit into individual vendors and projects",
    "start": "1209840",
    "end": "1212880"
  },
  {
    "start": "1212000",
    "end": "1279000"
  },
  {
    "text": "um there are still some open questions",
    "start": "1212880",
    "end": "1215120"
  },
  {
    "text": "around this effort",
    "start": "1215120",
    "end": "1216080"
  },
  {
    "text": "in general so like how do we deal in",
    "start": "1216080",
    "end": "1218480"
  },
  {
    "text": "test reports with",
    "start": "1218480",
    "end": "1219679"
  },
  {
    "text": "slight differences versus larger",
    "start": "1219679",
    "end": "1221600"
  },
  {
    "text": "differences",
    "start": "1221600",
    "end": "1223760"
  },
  {
    "text": "do we report them just as one test",
    "start": "1223760",
    "end": "1225840"
  },
  {
    "text": "failure or do we want to like",
    "start": "1225840",
    "end": "1227440"
  },
  {
    "text": "characterize them in different ways",
    "start": "1227440",
    "end": "1229520"
  },
  {
    "text": "and how would that even be possible in",
    "start": "1229520",
    "end": "1231840"
  },
  {
    "text": "an automated fashion",
    "start": "1231840",
    "end": "1233039"
  },
  {
    "text": "so maybe it's just not and we just in",
    "start": "1233039",
    "end": "1235600"
  },
  {
    "text": "general want to encourage people to get",
    "start": "1235600",
    "end": "1237600"
  },
  {
    "text": "to 100",
    "start": "1237600",
    "end": "1238559"
  },
  {
    "text": "anyway um so you know maybe that will",
    "start": "1238559",
    "end": "1241520"
  },
  {
    "text": "not be as important",
    "start": "1241520",
    "end": "1242960"
  },
  {
    "text": "um there could also be some",
    "start": "1242960",
    "end": "1246400"
  },
  {
    "text": "behaviors in the native promptql engine",
    "start": "1246400",
    "end": "1249200"
  },
  {
    "text": "that we actually want to treat as",
    "start": "1249200",
    "end": "1250960"
  },
  {
    "text": "undefined",
    "start": "1250960",
    "end": "1251840"
  },
  {
    "text": "for example the subquery alignment step",
    "start": "1251840",
    "end": "1255840"
  },
  {
    "text": "the subquery step alignment or",
    "start": "1255840",
    "end": "1259440"
  },
  {
    "text": "you know sorting is already undefined or",
    "start": "1259440",
    "end": "1261840"
  },
  {
    "text": "i already ignore sorting in the tester",
    "start": "1261840",
    "end": "1263919"
  },
  {
    "text": "but there could be other things that we",
    "start": "1263919",
    "end": "1265360"
  },
  {
    "text": "don't actually want to compare in",
    "start": "1265360",
    "end": "1267039"
  },
  {
    "text": "behavior",
    "start": "1267039",
    "end": "1268240"
  },
  {
    "text": "and then there's also the question of",
    "start": "1268240",
    "end": "1269600"
  },
  {
    "text": "how to version the compatibility and the",
    "start": "1269600",
    "end": "1272159"
  },
  {
    "text": "test results over time",
    "start": "1272159",
    "end": "1273760"
  },
  {
    "text": "saying like with which prom ql version",
    "start": "1273760",
    "end": "1275919"
  },
  {
    "text": "are you actually compatible and how much",
    "start": "1275919",
    "end": "1278799"
  },
  {
    "text": "all right there's some related future",
    "start": "1278799",
    "end": "1281760"
  },
  {
    "start": "1279000",
    "end": "1357000"
  },
  {
    "text": "work",
    "start": "1281760",
    "end": "1282159"
  },
  {
    "text": "going on as well as i mentioned in this",
    "start": "1282159",
    "end": "1284559"
  },
  {
    "text": "compliance repo",
    "start": "1284559",
    "end": "1285840"
  },
  {
    "text": "we are linking",
    "start": "1285840",
    "end": "1289360"
  },
  {
    "text": "tests and specs for open metrics and we",
    "start": "1289360",
    "end": "1292159"
  },
  {
    "text": "have tests in there for remote right",
    "start": "1292159",
    "end": "1295039"
  },
  {
    "text": "someone just proposed creating remote",
    "start": "1295039",
    "end": "1296960"
  },
  {
    "text": "read tests as well",
    "start": "1296960",
    "end": "1299280"
  },
  {
    "text": "obviously there's the prom ql work in",
    "start": "1299280",
    "end": "1302000"
  },
  {
    "text": "there as well now and potentially future",
    "start": "1302000",
    "end": "1304720"
  },
  {
    "text": "interfaces as well ultimately we want to",
    "start": "1304720",
    "end": "1307679"
  },
  {
    "text": "get to a point where",
    "start": "1307679",
    "end": "1309360"
  },
  {
    "text": "people building systems that are",
    "start": "1309360",
    "end": "1311919"
  },
  {
    "text": "prometheus compatible",
    "start": "1311919",
    "end": "1313440"
  },
  {
    "text": "to get certified marks",
    "start": "1313440",
    "end": "1316640"
  },
  {
    "text": "potentially even be able to self-certify",
    "start": "1316640",
    "end": "1318799"
  },
  {
    "text": "themselves but we we can't say that for",
    "start": "1318799",
    "end": "1320960"
  },
  {
    "text": "sure yet",
    "start": "1320960",
    "end": "1321600"
  },
  {
    "text": "uh so initially for sure we you know",
    "start": "1321600",
    "end": "1324799"
  },
  {
    "text": "these tests that give you some",
    "start": "1324799",
    "end": "1326240"
  },
  {
    "text": "certification will require some manual",
    "start": "1326240",
    "end": "1328320"
  },
  {
    "text": "effort",
    "start": "1328320",
    "end": "1328960"
  },
  {
    "text": "likely input from the prometheus team as",
    "start": "1328960",
    "end": "1331039"
  },
  {
    "text": "well to say that",
    "start": "1331039",
    "end": "1332000"
  },
  {
    "text": "yes it's actually compatible but",
    "start": "1332000",
    "end": "1334480"
  },
  {
    "text": "ultimately we should figure this out",
    "start": "1334480",
    "end": "1336159"
  },
  {
    "text": "as a community so please watch this",
    "start": "1336159",
    "end": "1338799"
  },
  {
    "text": "compliance repo",
    "start": "1338799",
    "end": "1340000"
  },
  {
    "text": "and contribute to it and potentially",
    "start": "1340000",
    "end": "1342240"
  },
  {
    "text": "like discuss",
    "start": "1342240",
    "end": "1343039"
  },
  {
    "text": "on the prometheus open source channels",
    "start": "1343039",
    "end": "1346159"
  },
  {
    "text": "the typical ones the mailing list the",
    "start": "1346159",
    "end": "1347919"
  },
  {
    "text": "chats",
    "start": "1347919",
    "end": "1348880"
  },
  {
    "text": "and so on all right so",
    "start": "1348880",
    "end": "1353039"
  },
  {
    "text": "stay compatible thank you and i wish you",
    "start": "1353039",
    "end": "1355520"
  },
  {
    "text": "a happy prom con",
    "start": "1355520",
    "end": "1359360"
  }
]