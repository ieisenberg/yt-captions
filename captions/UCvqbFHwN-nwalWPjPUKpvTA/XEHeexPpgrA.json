[
  {
    "start": "0",
    "end": "76000"
  },
  {
    "text": "okay so this is a talk about the open policy agent project my name is turin",
    "start": "30",
    "end": "5130"
  },
  {
    "text": "i'm one of the cofounders of the project and one of the core contributors i've also worked on policy related features",
    "start": "5130",
    "end": "11700"
  },
  {
    "text": "in kubernetes and sto lately and I happen to love good restaurants so this",
    "start": "11700",
    "end": "16859"
  },
  {
    "text": "is a perfect city to come to to talk about policy so for this talk what I thought I would do is just jump in right",
    "start": "16859",
    "end": "23550"
  },
  {
    "text": "away to some new technology that we've been working on and I'm really excited about this this is the wiki I think that",
    "start": "23550",
    "end": "30179"
  },
  {
    "text": "this represents the future of policy enforcement as you can see it's got this great high-level language that you can",
    "start": "30179",
    "end": "36719"
  },
  {
    "text": "use to write policy on pretty much anybody can read and write this it's super easy to update it's got built-in",
    "start": "36719",
    "end": "44840"
  },
  {
    "text": "contribution guidelines and conflict resolution and I think that policy enforcement basically solved right so",
    "start": "44840",
    "end": "52320"
  },
  {
    "text": "I'm not I haven't lost my mind not being I'm not I'm not serious I think this is a bad idea don't do it but at the same",
    "start": "52320",
    "end": "59430"
  },
  {
    "text": "time I think that for a lot of a lot of us in our day-to-day lives when we're working with policy this is like the",
    "start": "59430",
    "end": "65640"
  },
  {
    "text": "best that we can do because we've got so many things to worry about and so we often fall back on things like wiki's and spreadsheets to keep track of",
    "start": "65640",
    "end": "71610"
  },
  {
    "text": "the system and to manage the policies in the system now what I want to talk about",
    "start": "71610",
    "end": "78060"
  },
  {
    "start": "76000",
    "end": "265000"
  },
  {
    "text": "today is this idea of decoupling policy decisions from policy enforcement",
    "start": "78060",
    "end": "83150"
  },
  {
    "text": "because I think that this is actually a really good idea so if you take anything",
    "start": "83150",
    "end": "88409"
  },
  {
    "text": "away from this talk the idea that you should take away is that you should treat policy as a separate concern so",
    "start": "88409",
    "end": "94290"
  },
  {
    "text": "just like you think of the database and your message brokers and your monitoring and your logging and all of those components as boxes in your architecture",
    "start": "94290",
    "end": "100790"
  },
  {
    "text": "you should also think of policy as a box in your architecture and if you do that",
    "start": "100790",
    "end": "107369"
  },
  {
    "text": "what you're going to get if you if you decouple policy decisions from policy enforcement and you think of policy as a",
    "start": "107369",
    "end": "113399"
  },
  {
    "text": "separate concern you're going to get better control and visibility over permissions and policy and security throughout your system now when I think",
    "start": "113399",
    "end": "122549"
  },
  {
    "text": "of policy I think of like a set of rules that are supposed to govern how the system behaves and while that's a",
    "start": "122549",
    "end": "128399"
  },
  {
    "text": "sufficiently general definition it's not great because it's not very concrete and so it's all very satisfying",
    "start": "128399",
    "end": "133650"
  },
  {
    "text": "but regardless of whether you have a clear idea of what policy is in your mind or you have a definition of it in your organization I would argue that",
    "start": "133650",
    "end": "139890"
  },
  {
    "text": "many of you probably work with policy on a day to day basis because it actually affects all of us all the time so",
    "start": "139890",
    "end": "148019"
  },
  {
    "text": "whether you're working at the application layer or with kubernetes or with host level infrastructure or cloud",
    "start": "148019",
    "end": "153390"
  },
  {
    "text": "infrastructure whether you care about things like how end-user data gets handled or you know where workloads are",
    "start": "153390",
    "end": "159150"
  },
  {
    "text": "deployed or who can SSH into a machine or whether a config change is going to have a negative impact on the",
    "start": "159150",
    "end": "165269"
  },
  {
    "text": "infrastructure you all have to deal with policy all the time in your day to day lives and so policy enforcement is",
    "start": "165269",
    "end": "172620"
  },
  {
    "text": "actually this fundamental problem that we need to have good solutions for because if we don't have a good solution",
    "start": "172620",
    "end": "177989"
  },
  {
    "text": "for policy enforcement in the organization then we're gonna risk massive fines security breaches outages",
    "start": "177989",
    "end": "185120"
  },
  {
    "text": "downtime you name it so it's something that we have to solve but at the same",
    "start": "185120",
    "end": "191400"
  },
  {
    "text": "time like I said before we often fall back to things like wiki's and spreadsheets so there's this term called",
    "start": "191400",
    "end": "196859"
  },
  {
    "text": "tribal knowledge which basically means like know-how or the collective wisdom of the organization and so a lot of times we rely just on tribal knowledge",
    "start": "196859",
    "end": "202889"
  },
  {
    "text": "to run these systems the problem with tribal knowledge is that it doesn't provide any guarantee that policies are",
    "start": "202889",
    "end": "208169"
  },
  {
    "text": "being enforced you're basically just hoping that workloads get deployed to the right place and that firewall rules",
    "start": "208169",
    "end": "213659"
  },
  {
    "text": "get provisioned correctly and so on now a lot of us are software engineers and",
    "start": "213659",
    "end": "219209"
  },
  {
    "text": "we look at these kind of problems and we think ok well we can build a solution you know Togo provision firewall rules or to authorize requests but the problem",
    "start": "219209",
    "end": "227699"
  },
  {
    "text": "is that a lot of the time when we do that we end up hard-coding the policy decisions that are really important that operators need to be able to control",
    "start": "227699",
    "end": "233909"
  },
  {
    "text": "into the software that we that we build and so we end up with these really tightly coupled hard coded policy",
    "start": "233909",
    "end": "239340"
  },
  {
    "text": "decisions in the services and the applications that are actually really expensive and painful to maintain because they're so tightly coupled with",
    "start": "239340",
    "end": "245609"
  },
  {
    "text": "the business logic and so if you want to change the policy or test the policy or",
    "start": "245609",
    "end": "252079"
  },
  {
    "text": "understand the policy you need to be intimately familiar with the application and so operators and administrators are",
    "start": "252079",
    "end": "259109"
  },
  {
    "text": "not able to easily change the policy and enforce new policies as they evolve over time",
    "start": "259109",
    "end": "265430"
  },
  {
    "start": "265000",
    "end": "341000"
  },
  {
    "text": "so this is sort of these are some of the problems that we set out to solve only created the open policy agent project so",
    "start": "265889",
    "end": "272639"
  },
  {
    "text": "OPA or OPA if you can call it whatever you want is an open source general purpose policy engine and what that",
    "start": "272639",
    "end": "279599"
  },
  {
    "text": "means is that you can take it and you can use it at any layer of the stack in any system now when you're using OPA",
    "start": "279599",
    "end": "288509"
  },
  {
    "text": "what you're doing is you're offloading policy decisions from your service so you're decoupling the policy decision",
    "start": "288509",
    "end": "293789"
  },
  {
    "text": "from the enforcement piece and that's why you can basically take your service",
    "start": "293789",
    "end": "299189"
  },
  {
    "text": "and you can you can use it to eat or rather you can you can offload policy decisions from your service and so for",
    "start": "299189",
    "end": "304259"
  },
  {
    "text": "example if you're building like a micro service with an HTTP API you need to authorize the requests that are coming",
    "start": "304259",
    "end": "309539"
  },
  {
    "text": "in to that API so for example if your service is serving an HTTP API then",
    "start": "309539",
    "end": "314699"
  },
  {
    "text": "whenever it receives a request it would query OPA and when it does that query it would supply a bunch of input data like",
    "start": "314699",
    "end": "320340"
  },
  {
    "text": "the method and the path and so on that that inform the policy and then open would evaluate that input against all of",
    "start": "320340",
    "end": "325650"
  },
  {
    "text": "the policies that it has loaded as well as data and context that you could add as well and so the output of that decision might be like an allow or a",
    "start": "325650",
    "end": "331800"
  },
  {
    "text": "deny or something like that and that gets sent back to your service so that it can be enforced so the important",
    "start": "331800",
    "end": "336839"
  },
  {
    "text": "thing here is that were decoupling policy decisions for policy enforcement now when we think about OPA when we when",
    "start": "336839",
    "end": "343830"
  },
  {
    "text": "we think about how it fits into the architecture we like to think of it as a host local cache for policy decisions so",
    "start": "343830",
    "end": "349409"
  },
  {
    "text": "what this means is we're basically taking OPA and we're trying to join it it's life cycle with a lifecycle of your service so we run open the same machine",
    "start": "349409",
    "end": "356310"
  },
  {
    "text": "as your service whether using it as a library or a host level daemon or a sidecar doesn't really matter it's the same model you're offloading decisions",
    "start": "356310",
    "end": "362279"
  },
  {
    "text": "from your service to OPA now the reason why we want to do this why we want to",
    "start": "362279",
    "end": "368460"
  },
  {
    "text": "join the life cycles and why we want to deploy them together is because of two things so first of all we want to reduce",
    "start": "368460",
    "end": "374279"
  },
  {
    "text": "the amount of latency that we introduce into the request path in order to use OPA if Oprah is running across the",
    "start": "374279",
    "end": "381300"
  },
  {
    "text": "network on another machine then every single time your service has to make a policy decision like every time it has to authorize a request it's got to go",
    "start": "381300",
    "end": "387960"
  },
  {
    "text": "across the network it's got a pea network hop in order to get that decision and so that obviously is going",
    "start": "387960",
    "end": "393539"
  },
  {
    "text": "to impact latency and performance and that's not really acceptable for the project the second reason and actually it's a",
    "start": "393539",
    "end": "399940"
  },
  {
    "text": "more it's more important reason is around availability so opens been designed to leverage this notion of fate",
    "start": "399940",
    "end": "405670"
  },
  {
    "text": "sharing which basically means to couple life cycles of these other components and by deploying open on the same",
    "start": "405670",
    "end": "412180"
  },
  {
    "text": "machine is your service you're guaranteed that as long as your service is up open is up and it can get decisions it's not on another machine",
    "start": "412180",
    "end": "417370"
  },
  {
    "text": "that could fail or it's not on another machine separated by the network where the network could go down it sits on the",
    "start": "417370",
    "end": "423130"
  },
  {
    "text": "same machine as your service and so it can always get decision so you want to leverage this this architectural pattern known as phage sharing now in order to",
    "start": "423130",
    "end": "432310"
  },
  {
    "start": "430000",
    "end": "513000"
  },
  {
    "text": "make all of this work we've we've made certain design decisions with OPA and so we designed it to be as lightweight as",
    "start": "432310",
    "end": "437680"
  },
  {
    "text": "possible and so to do that there are a couple things so first of all policies and data are all stored in memory so",
    "start": "437680",
    "end": "445450"
  },
  {
    "text": "when you ask open for a policy decision it's not calling out to an external database to get the policies or get the",
    "start": "445450",
    "end": "450490"
  },
  {
    "text": "data that it needs moreover when you ask for a policy decision it doesn't call it to any other service so all the",
    "start": "450490",
    "end": "455710"
  },
  {
    "text": "decisions are handled locally on the machine with policy and data cached in memory now you can extend OPA to call",
    "start": "455710",
    "end": "463570"
  },
  {
    "text": "out to other services that you know them in the policy you can have something that doesn't get HTTP requests to get data if it needs to or you can take open",
    "start": "463570",
    "end": "470680"
  },
  {
    "text": "you can extend it to to call out to like my sequel or something like that where the policies might be stored or where",
    "start": "470680",
    "end": "476050"
  },
  {
    "text": "additional context is stored but on its own OPA is not going to do that it serves decisions on the host that it's",
    "start": "476050",
    "end": "482620"
  },
  {
    "text": "deployed on ok so let's take a look at how this works so I've got my favorite",
    "start": "482620",
    "end": "488920"
  },
  {
    "text": "friend here Bob he's a cloud engineer and this is an employee profile page so",
    "start": "488920",
    "end": "495070"
  },
  {
    "text": "we've got some employee details and performance reviews for Bob now this service this application is",
    "start": "495070",
    "end": "500890"
  },
  {
    "text": "actually implemented by a handful of micro services under the hood so there's like a landing page that stitches everything together there's a detailed",
    "start": "500890",
    "end": "507100"
  },
  {
    "text": "service that provides employee details there's a performance review service that serves up the performance reviews and so on and so using this application",
    "start": "507100",
    "end": "514810"
  },
  {
    "start": "513000",
    "end": "814000"
  },
  {
    "text": "we can actually demo a few different policies but the way this is going to work is that when my browser asks the landing page for the for the fruit for",
    "start": "514810",
    "end": "522400"
  },
  {
    "text": "the employee profile the landing page is going to go to reviews and say give me the performance reviews and then it's going to go to details and say give me",
    "start": "522400",
    "end": "528040"
  },
  {
    "text": "the employee details and then it's going to join those things together and serve them to the browser now each one of these services is going",
    "start": "528040",
    "end": "534040"
  },
  {
    "text": "to call out to an instance of oppa and asked for a policy decision at each one of these hops to say should this request be allowed now in order to make that",
    "start": "534040",
    "end": "541420"
  },
  {
    "text": "decision open needs to have certain data that it can reason about and so in this case the services provide things like the method and the path and the user and",
    "start": "541420",
    "end": "548800"
  },
  {
    "text": "so on and so the policy is going to be written to evaluate against these things and produce decisions like a Lauer deny",
    "start": "548800",
    "end": "555450"
  },
  {
    "text": "so the first policy we're going to show how you can implement is one that says that basically employees can see their own reviews as well as the reviews of",
    "start": "555450",
    "end": "562930"
  },
  {
    "text": "their subordinates so the people they manage the second policy that we're going to show is one that says that",
    "start": "562930",
    "end": "568750"
  },
  {
    "text": "employees can see their own PII as well as HR HR special they can see PII now PII is just means personally",
    "start": "568750",
    "end": "575020"
  },
  {
    "text": "identifiable information it's just like a standard term for things like a social security number or you know a national",
    "start": "575020",
    "end": "580960"
  },
  {
    "text": "health and insurance number or something like that okay so let me let me switch to my terminal here and I've got this",
    "start": "580960",
    "end": "587200"
  },
  {
    "text": "running so these services are running right now on top of docker compose on my machine and they're all asking a local",
    "start": "587200",
    "end": "593050"
  },
  {
    "text": "instance of OPA for policy decisions and right now this is the policy that OPA has loaded and hope is actually watching",
    "start": "593050",
    "end": "599800"
  },
  {
    "text": "this policy for changes so whenever I change the file the policy is going to update in OPA and you're gonna see the changes reflected in the application so",
    "start": "599800",
    "end": "607090"
  },
  {
    "text": "right now I'm not signed in you can see I'm not signed in here but all the details are being displayed and all the reviews are being displayed",
    "start": "607090",
    "end": "613060"
  },
  {
    "text": "and so what's happening is that the services are querying this allow rule and they're asking what's the value of allow and by default it's gonna come in",
    "start": "613060",
    "end": "620080"
  },
  {
    "text": "as it's gonna come back as false but if one of these other rules in this file allow or and decide to allow then the",
    "start": "620080",
    "end": "626080"
  },
  {
    "text": "request will be allowed so right now we're interested in performance reviews and we can see that it's going to allow if the input method is get and the input",
    "start": "626080",
    "end": "632560"
  },
  {
    "text": "path it matches this pattern but what we want to do is restrict it so that only employees can see their performance",
    "start": "632560",
    "end": "638800"
  },
  {
    "text": "reviews first of all so what I'm gonna do is say get rid of that line and uncomment those two and then save and",
    "start": "638800",
    "end": "645100"
  },
  {
    "text": "now if i refresh the page you can see the performance reviews aren't displayed anymore the reason for that is because the",
    "start": "645100",
    "end": "650230"
  },
  {
    "text": "policy is deciding what the application should be able to present now I'm not logged in and so that's what we want but if I log in to say Bob he's able to see",
    "start": "650230",
    "end": "657550"
  },
  {
    "text": "his own performance reviews but if I log in as like his coworker say like Alice or",
    "start": "657550",
    "end": "663800"
  },
  {
    "text": "analysis the manager sorry charlie is the co-worker he's not able to see the the reviews either but suppose I log in",
    "start": "663800",
    "end": "670459"
  },
  {
    "text": "is Alice who happens to be Bob's manager right now he can't she can't see the the performance reviews and so that doesn't",
    "start": "670459",
    "end": "677480"
  },
  {
    "text": "really satisfy the policy we want so in order to handle the second part of the policy we're gonna take this other rule here we're gonna uncomment it and now",
    "start": "677480",
    "end": "684589"
  },
  {
    "text": "when i refresh the page the performance reviews show up now what I've done here is I've actually hard-coded the",
    "start": "684589",
    "end": "690079"
  },
  {
    "text": "management chain of the organization into the policy and so I'm saying that Bob reports to Alice and Charlie reports",
    "start": "690079",
    "end": "695810"
  },
  {
    "text": "Dallas now this data is hard-coded in the policy so that it's simple to demonstrate but you could also just load this in as raw data like raw JSON or raw",
    "start": "695810",
    "end": "702620"
  },
  {
    "text": "structured data through an API and so you could pull data out of LDAP or ad or whatever system you use to keep track of",
    "start": "702620",
    "end": "708890"
  },
  {
    "text": "this kind of information and you could load it into open and use that to inform your policy decisions you could also get",
    "start": "708890",
    "end": "714649"
  },
  {
    "text": "this information into open through something like a jot token and so that way you don't need to take a dependency on on ad or something like that okay so",
    "start": "714649",
    "end": "722120"
  },
  {
    "text": "this demonstrates a simple idea of like controlling access to certain api's now the other thing we want to do is we want",
    "start": "722120",
    "end": "727279"
  },
  {
    "text": "to restrict access to sensitive data in this case I'm logged in as Alice who's as a manager but she can see the social",
    "start": "727279",
    "end": "733310"
  },
  {
    "text": "security number here and that's not good social schemas like very sensitive only",
    "start": "733310",
    "end": "738500"
  },
  {
    "text": "HR should be able to see that and so I actually have another rule down below here called PII and this PII rule is",
    "start": "738500",
    "end": "745510"
  },
  {
    "text": "going to define what fields are actually containing PII and so if I go back to",
    "start": "745510",
    "end": "750740"
  },
  {
    "text": "this this slide you can see that the sorry the detail services integrated",
    "start": "750740",
    "end": "756770"
  },
  {
    "text": "with OPA and so every time details receives a request they not only asks should this be allowed but it asks what are the fields that contain PII",
    "start": "756770",
    "end": "763310"
  },
  {
    "text": "so it's querying for this PII decision and so if i refresh the page now we can see we're logged in as Alice the manager",
    "start": "763310",
    "end": "769459"
  },
  {
    "text": "but the social security number is blanked out now I've happened to like also hard-code who's an HR here we've",
    "start": "769459",
    "end": "775160"
  },
  {
    "text": "got scan and Anthony so if I log in is say Ken that should not be displayed so",
    "start": "775160",
    "end": "780680"
  },
  {
    "text": "I go to Ken great so now Ken can see the performance reviews and the social security number and so I can actually",
    "start": "780680",
    "end": "787670"
  },
  {
    "text": "change this if I want so say Bob is actually getting like nervous about his old age and he doesn't want people to know his birth date we can make that",
    "start": "787670",
    "end": "793579"
  },
  {
    "text": "private as well if I go and I sign out now the birthday and the social security are not being splayed so this gives you an idea of how",
    "start": "793579",
    "end": "800450"
  },
  {
    "text": "you can actually produce policy decisions that are not as boolean allowed and I or true/false values you can actually generate arbitrary JSON",
    "start": "800450",
    "end": "807290"
  },
  {
    "text": "data in your policies with OPA okay so",
    "start": "807290",
    "end": "814640"
  },
  {
    "start": "814000",
    "end": "1036000"
  },
  {
    "text": "what I want to do now is take a look at opus policy language because that's the core thing that it provides to you as a",
    "start": "814640",
    "end": "819950"
  },
  {
    "text": "user of the project so the language is this declarative high-level declarative language and we call it Rago and it's",
    "start": "819950",
    "end": "826670"
  },
  {
    "text": "it's designed so that you can like answer questions like should this user be allowed to do this operation on this resource or you know what annotations",
    "start": "826670",
    "end": "833450"
  },
  {
    "text": "need to be added to new kubernetes deployments when they're created or which users can SSH into production",
    "start": "833450",
    "end": "839270"
  },
  {
    "text": "machines and so on the language itself is actually really focused on two things logic and data it's not so we know",
    "start": "839270",
    "end": "846740"
  },
  {
    "text": "writing policies you're not really thinking about like system calls or class hierarchies or which function you need to invoke on an object anything",
    "start": "846740",
    "end": "852980"
  },
  {
    "text": "like that you're just focusing on purely on the logic and the data that's relevant to policy because policy is all about just making logic or making",
    "start": "852980",
    "end": "859310"
  },
  {
    "text": "decisions which are based on logic and data and so that's what you want from the language so let's let's walk",
    "start": "859310",
    "end": "864380"
  },
  {
    "text": "through this example so the the example in English says that employees may read their own reviews and the reviews of",
    "start": "864380",
    "end": "870200"
  },
  {
    "text": "their subordinates the people they manage now in English this this published statement has sort of two parts to it and so we're gonna actually",
    "start": "870200",
    "end": "876230"
  },
  {
    "text": "create two separate rules to deal with this policy now in order to actually evaluate the policy we're going to need",
    "start": "876230",
    "end": "882140"
  },
  {
    "text": "some input data and so I'm gonna say that the method is set to get and the path is set to reviews Bob as an array",
    "start": "882140",
    "end": "887630"
  },
  {
    "text": "and the user is set to Bob now I've represented the path as an array here because oppa's language allows you to do",
    "start": "887630",
    "end": "893240"
  },
  {
    "text": "pattern matching on data and you'll see that in a second so the first thing we're gonna do is create this rule",
    "start": "893240",
    "end": "898700"
  },
  {
    "text": "called allow that you saw a minute ago and you can basically understand this as allow is true if input method matches",
    "start": "898700",
    "end": "904730"
  },
  {
    "text": "get an input path matches reviews employee ID and input user matches employee ID now the meat of this policy",
    "start": "904730",
    "end": "912410"
  },
  {
    "text": "is actually the last line their input user matches employee ID because employee ID is actually a variable and",
    "start": "912410",
    "end": "919070"
  },
  {
    "text": "that variable is going to get bound to a value when oppa evaluates the rule against the input and so in this case",
    "start": "919070",
    "end": "924500"
  },
  {
    "text": "employee ID gets bound to Bob and if you just sort of walk through this in your head you'll see that on the left-hand",
    "start": "924500",
    "end": "930080"
  },
  {
    "text": "side it's going to be get and then reviews Bob and then Bob and so all those things are equal and the rules",
    "start": "930080",
    "end": "936259"
  },
  {
    "text": "going to succeed so the statements in the body of the rule are basically ANDed together now let's try this with a",
    "start": "936259",
    "end": "944120"
  },
  {
    "text": "different user so say we have Alice requesting Bob's performance reviews in this case employee-id is going to get",
    "start": "944120",
    "end": "950930"
  },
  {
    "text": "replaced with Bob but input user happens to be Alice and so when oppa gets to that last line it's gonna fail and it's",
    "start": "950930",
    "end": "957949"
  },
  {
    "text": "not going to find a way to prove that this request should be allowed but",
    "start": "957949",
    "end": "963139"
  },
  {
    "text": "suppose that alice is actually bob's manager and and she should be allowed to see these reviews and so that fact that",
    "start": "963139",
    "end": "970100"
  },
  {
    "text": "alice's bob's manager can just be represented as data as structured data that you put in the policy or that you",
    "start": "970100",
    "end": "975350"
  },
  {
    "text": "load in through an API or that you include in the input and so on the bottom right here you can see I've",
    "start": "975350",
    "end": "980839"
  },
  {
    "text": "defined a simple mapping that says that bob is managed by Alice and Alice is managed by Janet now in order to take in",
    "start": "980839",
    "end": "986720"
  },
  {
    "text": "order to make use of this data or this context as we like to call it you have to add another rule and so this rule is",
    "start": "986720",
    "end": "992089"
  },
  {
    "text": "gonna be very similar to the first one we're gonna match on method and path but then instead of checking whether the",
    "start": "992089",
    "end": "997160"
  },
  {
    "text": "user is equal to employee ID we're gonna check if the user is equal to the result of looking up the employee ID in that",
    "start": "997160",
    "end": "1003550"
  },
  {
    "text": "data structure and so then the same thing is gonna happen when we evaluate it's going to substitute Bob for",
    "start": "1003550",
    "end": "1010180"
  },
  {
    "text": "employee ID and then it's going to do a lookup to substitute Alice for that reference and so then obviously when you",
    "start": "1010180",
    "end": "1016810"
  },
  {
    "text": "when oppa goes through this it's gonna find that all these things are okay and so the request would be allowed so the",
    "start": "1016810",
    "end": "1022149"
  },
  {
    "text": "statements and the bodies of the rules are ANDed together and the statements in the head of the rule these allow statements are ordered together so",
    "start": "1022149",
    "end": "1027970"
  },
  {
    "text": "that's how you can understand these policies now so far I've basically been talking about like microservice API",
    "start": "1027970",
    "end": "1033490"
  },
  {
    "text": "authorization or service authorization and one of the things that comes up when you talk about API authorization a lot",
    "start": "1033490",
    "end": "1039220"
  },
  {
    "start": "1036000",
    "end": "1367000"
  },
  {
    "text": "is role based access control or are back and the question that people ask is well",
    "start": "1039220",
    "end": "1044890"
  },
  {
    "text": "isn't our back enough like why do I need anything else other than our back and the answer is that in a lot of cases you",
    "start": "1044890",
    "end": "1050049"
  },
  {
    "text": "don't actually need anything else our back is probably it could be sufficient it actually depends a lot on your use",
    "start": "1050049",
    "end": "1055360"
  },
  {
    "text": "cases like how complex your use cases are and actually how much you trust your users so our back is good when you have",
    "start": "1055360",
    "end": "1062080"
  },
  {
    "text": "simple use cases and you trust your users but as soon as you cross that threshold our back is not enough and then you're",
    "start": "1062080",
    "end": "1068820"
  },
  {
    "text": "stuck and you need something else so our back only knows about you know the resource the name of the resource the action and the subject if you're",
    "start": "1068820",
    "end": "1075900"
  },
  {
    "text": "creating a kubernetes deployment or kubernetes pod you might need to reason about all kinds of things that define",
    "start": "1075900",
    "end": "1081060"
  },
  {
    "text": "that pod and our backs just not gonna be able to do that so if you need to write fine-grained policies that restrict or",
    "start": "1081060",
    "end": "1086280"
  },
  {
    "text": "constrain the system or you need to leverage external context in your policy decisions you're going to need to go",
    "start": "1086280",
    "end": "1091380"
  },
  {
    "text": "beyond our back but at the same time our back is nice in a sense because it's so",
    "start": "1091380",
    "end": "1096930"
  },
  {
    "text": "simple and the API gives you is fairly easy to understand and so let's just implement our back with OPA",
    "start": "1096930",
    "end": "1102390"
  },
  {
    "text": "so in order to do that we need to define a simple are back model and so I've got here roles and bindings so bindings",
    "start": "1102390",
    "end": "1109710"
  },
  {
    "text": "associated user with a role by name and then roles grant permission on an operation so this is just like the are",
    "start": "1109710",
    "end": "1115650"
  },
  {
    "text": "back model you have in kubernetes it's a little bit simpler but you could basically load this are back configuration into OPA as data just like",
    "start": "1115650",
    "end": "1123360"
  },
  {
    "text": "the data that we had for the management chain now in order to makes use of this data again you have to write a rule and",
    "start": "1123360",
    "end": "1129990"
  },
  {
    "text": "so this rule is going to look like this or gonna say allow is true if there's a binding that matches the user and",
    "start": "1129990",
    "end": "1135770"
  },
  {
    "text": "there's a role that matches the resource in the operation and there in the input and there's a role that and then rather",
    "start": "1135770",
    "end": "1142320"
  },
  {
    "text": "end that the role matches the binding and this is actually it so actually if you just took this rule as is and some",
    "start": "1142320",
    "end": "1148140"
  },
  {
    "text": "data that looked like this it would work you would have a basic are back system working now the interesting thing about",
    "start": "1148140",
    "end": "1155010"
  },
  {
    "text": "this this rule that is different from what we showed you before is that there's actually a search happening so",
    "start": "1155010",
    "end": "1160350"
  },
  {
    "text": "this rule is searching over the are back data that we've loaded into OPA so that first those first two",
    "start": "1160350",
    "end": "1165900"
  },
  {
    "text": "expressions in the body are basically finding bindings that match the incoming user and then the second set of",
    "start": "1165900",
    "end": "1172470"
  },
  {
    "text": "expressions is finding a role that matches the incoming resource in operation now the interesting thing",
    "start": "1172470",
    "end": "1180630"
  },
  {
    "text": "about this is that it's doing a search and with a search if the number of roles grows or the number of bindings grows",
    "start": "1180630",
    "end": "1187170"
  },
  {
    "text": "the search is gonna start taking longer and longer if OPA wasn't smart if it",
    "start": "1187170",
    "end": "1192240"
  },
  {
    "text": "just evaluated these things naively but even without changing this policy",
    "start": "1192240",
    "end": "1198090"
  },
  {
    "text": "or changing the structure of the data in any way there are a couple things that OPA can do to make these policies",
    "start": "1198090",
    "end": "1203159"
  },
  {
    "text": "perform well so the first thing that opens going to do is it's going to partially evaluate your policies so",
    "start": "1203159",
    "end": "1209549"
  },
  {
    "text": "partial evaluation basically takes rules and data and it combines them and it outputs new simplified rules so all the",
    "start": "1209549",
    "end": "1216779"
  },
  {
    "text": "search and all the complex expressions in the original policy get it evaluated",
    "start": "1216779",
    "end": "1222450"
  },
  {
    "text": "out and then the thing you're left with are these nice simple policies that only contain references to unknown values",
    "start": "1222450",
    "end": "1227520"
  },
  {
    "text": "like the input the incoming requests and constants now the nice thing about these simplified rules is that OPA can",
    "start": "1227520",
    "end": "1234299"
  },
  {
    "text": "actually reason about them because they're simple enough and so open does reason about them and what it does is it",
    "start": "1234299",
    "end": "1239700"
  },
  {
    "text": "builds an index out of these rule sets so it actually builds a tri data structure by looking at this looking at",
    "start": "1239700",
    "end": "1245250"
  },
  {
    "text": "the expressions and the rules and building it to an index out of them and so in this case things like the incoming user and the incoming resource and the",
    "start": "1245250",
    "end": "1251820"
  },
  {
    "text": "incoming operation all contribute to this this tri structure so they become nodes in the Tri and then the constants",
    "start": "1251820",
    "end": "1257820"
  },
  {
    "text": "become edges in the Tri so OPA built an index out of these rules and then what",
    "start": "1257820",
    "end": "1262950"
  },
  {
    "text": "it does with that index is it uses them to look up the rules that apply to the input whenever you execute a request so",
    "start": "1262950",
    "end": "1271470"
  },
  {
    "text": "when your service queries for the value of allow it's going to supply the input like the user and the resource in the operation and then opens going to use",
    "start": "1271470",
    "end": "1278580"
  },
  {
    "text": "that to quickly find all the rules that could possibly apply and then what",
    "start": "1278580",
    "end": "1283770"
  },
  {
    "text": "happens is it open just evaluates those and when it does that it can skip all the other rules that don't apply to the",
    "start": "1283770",
    "end": "1289320"
  },
  {
    "text": "input so it can ignore those so there could be hundreds of thousands of those rules and open doesn't have to care it just skips right to the one that matters",
    "start": "1289320",
    "end": "1295440"
  },
  {
    "text": "it evaluates that and it's done and so when we use partial evaluation and we",
    "start": "1295440",
    "end": "1300990"
  },
  {
    "text": "use rule indexing we see Layton sees around 50 microseconds when you're talking about like 250 250 250 roles and",
    "start": "1300990",
    "end": "1307169"
  },
  {
    "text": "250 bindings but the really cool thing about is that even as you scale the number of roles and then over roll bindings the latency is like 60",
    "start": "1307169",
    "end": "1314399"
  },
  {
    "text": "microseconds at to that I don't order magnitude larger so it's it opens scaling really well as your as your",
    "start": "1314399",
    "end": "1320549"
  },
  {
    "text": "dataset grows so I I went through that a little bit quickly there's there's a",
    "start": "1320549",
    "end": "1325830"
  },
  {
    "text": "blog post on their blog posts on both of these things so if you're interested I recommend you check those out now at the",
    "start": "1325830",
    "end": "1332039"
  },
  {
    "text": "getting in the talk I was mentioning about how there are all these different policies and so whether you care about end-user data or you know kubernetes or",
    "start": "1332039",
    "end": "1339389"
  },
  {
    "text": "terraform or whatever you're all dealing with policy and I think that it's really",
    "start": "1339389",
    "end": "1345210"
  },
  {
    "text": "easy as software engineers to look at these problems in isolation and decide that well this needs to be solved independently but I also think that it's",
    "start": "1345210",
    "end": "1352889"
  },
  {
    "text": "possible to look at these problems and see a lot of commonality and when I see commonality as an art software engineer I like to build a general-purpose",
    "start": "1352889",
    "end": "1358979"
  },
  {
    "text": "solution that solves it because then I don't have to go and reinvent all the performance optimizations and all the tooling and get it right and then all",
    "start": "1358979",
    "end": "1365580"
  },
  {
    "text": "the pain of that and so you can actually use open today to enforce all kinds of policies across the stack so opens",
    "start": "1365580",
    "end": "1372720"
  },
  {
    "start": "1367000",
    "end": "1577000"
  },
  {
    "text": "integrated with kubernetes for things like admission control and federated placement you can actually even use it as an authorizer there it's integrated",
    "start": "1372720",
    "end": "1379559"
  },
  {
    "text": "with frameworks like spring and and service mesh projects like sto and linker D to do API authorization on your",
    "start": "1379559",
    "end": "1385559"
  },
  {
    "text": "micro services you can do risk management over terraform changes in your CI CI pipelines you can actually do",
    "start": "1385559",
    "end": "1392070"
  },
  {
    "text": "access control at the host level over who can run sudo commands or run execute assets or SSH into the box and we've",
    "start": "1392070",
    "end": "1399239"
  },
  {
    "text": "recently integrated with Kafka so you can enforce access controls over who has access to Kafka maybe based on context",
    "start": "1399239",
    "end": "1405239"
  },
  {
    "text": "or other fine-grained permissions now the reason why this is possible is because we're treating all of these",
    "start": "1405239",
    "end": "1411779"
  },
  {
    "text": "projects just as data they're all just data they're all just JSON or structured data that we load into open as input or",
    "start": "1411779",
    "end": "1417599"
  },
  {
    "text": "as context so regardless of the idiosyncratic way that these projects happen to represent their api's or their",
    "start": "1417599",
    "end": "1424019"
  },
  {
    "text": "data it doesn't matter because open doesn't care it's not coupled to any of those data models in any way and so",
    "start": "1424019",
    "end": "1429599"
  },
  {
    "text": "that's why we call open general-purpose because you can just apply it at any layer of the stack and just load data into it and write policy against it",
    "start": "1429599",
    "end": "1435779"
  },
  {
    "text": "now obviously the policy has to apply meaning to that data but OPA doesn't",
    "start": "1435779",
    "end": "1441299"
  },
  {
    "text": "care that that's in the policy hope is not coupled to any of these things and",
    "start": "1441299",
    "end": "1446429"
  },
  {
    "text": "so this is some of the value that companies like Netflix see when they're using OPA so Netflix was one of the early adopters of OPA and for them they",
    "start": "1446429",
    "end": "1454559"
  },
  {
    "text": "have like a very complex environment with thousands of services and a number of different resource types that they",
    "start": "1454559",
    "end": "1460200"
  },
  {
    "text": "want to enforce authorization over on different identity types like VM and and batch jobs and you know full-time",
    "start": "1460200",
    "end": "1466210"
  },
  {
    "text": "employees versus contractors and so on and they have all these different protocols and languages that they use to",
    "start": "1466210",
    "end": "1471429"
  },
  {
    "text": "implement their service and then on top of all of that they have strict",
    "start": "1471429",
    "end": "1476799"
  },
  {
    "text": "requirements around latency they need to be able to tune the policies according to the application and the resource types and they want to be able to test",
    "start": "1476799",
    "end": "1483100"
  },
  {
    "text": "the policies to know that they're correct if you just hard-coded all of this stuff into the service you wouldn't",
    "start": "1483100",
    "end": "1489400"
  },
  {
    "text": "be able to change it easily and you wouldn't be able to test it and so open lines up really well around flexibility",
    "start": "1489400",
    "end": "1494470"
  },
  {
    "text": "and ability to capture intent it also helps that it performs really well because it doesn't introduce a significant amount of latency into their",
    "start": "1494470",
    "end": "1500710"
  },
  {
    "text": "request path and so today they have open integrated with HTTP and G RPC API is",
    "start": "1500710",
    "end": "1506049"
  },
  {
    "text": "coffee producers and other things are coming so we're super excited about that if you're interested in more on how open",
    "start": "1506049",
    "end": "1511179"
  },
  {
    "text": "or how Netflix is using OPA check out the the talk that we did with them at the last coop con so this is sort of",
    "start": "1511179",
    "end": "1520030"
  },
  {
    "text": "where we're at today we have like 20-plus companies using OPA actively across a bunch of a bunch of different",
    "start": "1520030",
    "end": "1526059"
  },
  {
    "text": "fields or industries like finance service providers IT companies software vendors and they're using OPA cross the",
    "start": "1526059",
    "end": "1533470"
  },
  {
    "text": "stack to enforce authorization policies and micro services and orchestrators admission control and so on they're",
    "start": "1533470",
    "end": "1539290"
  },
  {
    "text": "controlling things of the hosts layer they're trying to protect their data and it's really neat to see them gain a lot",
    "start": "1539290",
    "end": "1546760"
  },
  {
    "text": "of value out of having this general-purpose solution and so what we love in with OPA our new use cases",
    "start": "1546760",
    "end": "1553480"
  },
  {
    "text": "because we've already applied it for our back and a back and a Mission Control and data protection and so on so if you have any use case we'd love to hear",
    "start": "1553480",
    "end": "1559450"
  },
  {
    "text": "about it please bring it to us and we'd be happy to help you get started so it's",
    "start": "1559450",
    "end": "1565299"
  },
  {
    "text": "really cool to see all this coming together see this general-purpose solutions solving these problems because what that",
    "start": "1565299",
    "end": "1570880"
  },
  {
    "text": "means is that you don't have to re-implement the same optimizations you have to reimplemented the tooling and so what I thought I would do is demo something new",
    "start": "1570880",
    "end": "1576580"
  },
  {
    "text": "that we built just recently which is an integration with vs code so I don't know",
    "start": "1576580",
    "end": "1582520"
  },
  {
    "start": "1577000",
    "end": "1811000"
  },
  {
    "text": "how many people here use vs code but it's a great ide just so I actually have",
    "start": "1582520",
    "end": "1588669"
  },
  {
    "text": "the same policy that I was talking about before here in my vs code and there's a",
    "start": "1588669",
    "end": "1595960"
  },
  {
    "text": "few things that I want to show so the first is that you can actually just evaluate the policies in the IDE so for example if I",
    "start": "1595960",
    "end": "1602920"
  },
  {
    "text": "want to know what the value of allow is I can do that and it's good to tell them right now it's telling me that it's true",
    "start": "1602920",
    "end": "1608340"
  },
  {
    "text": "if I want to know what the value of all the rules in the package are I can do",
    "start": "1608340",
    "end": "1614590"
  },
  {
    "text": "that so it tells me allow is true I've got a bunch of test data here that's showing up selling the PII is SSN in it",
    "start": "1614590",
    "end": "1621070"
  },
  {
    "text": "and so it's basically going through all of these rules and evaluating them and telling me what the values are now in addition to just evaluating",
    "start": "1621070",
    "end": "1628000"
  },
  {
    "text": "everything in the package and that and the rules themselves I can also actually just evaluate expressions in the bodies",
    "start": "1628000",
    "end": "1633580"
  },
  {
    "text": "of the rules and so this is really useful when you're debugging because you want to know what the value of things are so for example here I can select",
    "start": "1633580",
    "end": "1640030"
  },
  {
    "text": "this line and evaluate it and it tells me that that's true and it's true because I've actually got this file",
    "start": "1640030",
    "end": "1645130"
  },
  {
    "text": "called input JSON here that's got a sample request in it so the method here is get and I've selected this line here",
    "start": "1645130",
    "end": "1651610"
  },
  {
    "text": "I method equals get now if I do these next two lines what's gonna happen well",
    "start": "1651610",
    "end": "1659140"
  },
  {
    "text": "it's going to tell me the employee ID is Bob because it can tell that the first line is satisfied but there's a variable",
    "start": "1659140",
    "end": "1664810"
  },
  {
    "text": "in the second line and so that gets pulled out of the path and bound as a variable there so that's the same variable binding that happened when I",
    "start": "1664810",
    "end": "1670630"
  },
  {
    "text": "walked through the policy on the slides and so then I can go to the last expression again and it's the same",
    "start": "1670630",
    "end": "1676090"
  },
  {
    "text": "output so this is really useful when you're writing the policies when you're debugging them because you want to know what's going on you want to sort of",
    "start": "1676090",
    "end": "1682810"
  },
  {
    "text": "inspect the data and kind of figure out what's in there and how you can use it in your policy now once you've done that",
    "start": "1682810",
    "end": "1690850"
  },
  {
    "text": "a little bit you want to kind of move ahead and move to more kind of like production setting and so you want to",
    "start": "1690850",
    "end": "1698410"
  },
  {
    "text": "actually test that your policies are correct you don't just want to be like evaluating them manually every time you've made a change and so we've",
    "start": "1698410",
    "end": "1704380"
  },
  {
    "text": "actually got a test framework that you can use to write tests for your policies and so this is what that looks like",
    "start": "1704380",
    "end": "1709870"
  },
  {
    "text": "and so here I've got tests for my different policies here so I'm testing",
    "start": "1709870",
    "end": "1715210"
  },
  {
    "text": "that reviews is allowing input for when Bob asks for himself or when a manager asks for Bob's performance reviews and",
    "start": "1715210",
    "end": "1721420"
  },
  {
    "text": "so on and I can go and I can just evaluate the entire workspace here and it'll tell me that all the tests are",
    "start": "1721420",
    "end": "1727300"
  },
  {
    "text": "passing now if I made a mistake and I said that well okay coworkers to be able to see performance reviews",
    "start": "1727300",
    "end": "1732700"
  },
  {
    "text": "and I rerun this lets test package test workspace we see that one test is",
    "start": "1732700",
    "end": "1739690"
  },
  {
    "text": "failing now there is right there so you can basically build up these Suites of unit tests for your policies and gain",
    "start": "1739690",
    "end": "1745600"
  },
  {
    "text": "confidence that they're correct but sometimes the the the set of policies is large and you want some sort of like",
    "start": "1745600",
    "end": "1751990"
  },
  {
    "text": "higher level tooling for that and so one of the things we started doing is building in test coverage so I can run",
    "start": "1751990",
    "end": "1757510"
  },
  {
    "text": "coverage on the workspace oops it's failing so it's not going to generate the coverage let me fix that",
    "start": "1757510",
    "end": "1763080"
  },
  {
    "text": "toggle coverage now it's telling me all the lines that are covered in the policy and so this the test is just another policy basically so it's telling me that",
    "start": "1763080",
    "end": "1769720"
  },
  {
    "text": "the test is totally covered and if I go look at my policy now we can see that all the all these lines are hit but if I",
    "start": "1769720",
    "end": "1777340"
  },
  {
    "text": "go back to the test say and say I'd just get rid of all of these oops I mean it's",
    "start": "1777340",
    "end": "1782890"
  },
  {
    "text": "get rid of this and I'm just gonna say test true let's give it to that test entirely and now I do the coverage again",
    "start": "1782890",
    "end": "1789399"
  },
  {
    "text": "okay well now the test inputs not being used but more importantly in my policy I'm never hitting these rules so I'm",
    "start": "1789399",
    "end": "1794679"
  },
  {
    "text": "never hitting these these endpoints here okay so that's just a quick sort of demo",
    "start": "1794679",
    "end": "1801130"
  },
  {
    "text": "of the the vs code integration right now it's on github and we're hoping to get into the marketplace soon now we just haven't had time yet okay so hopefully",
    "start": "1801130",
    "end": "1813279"
  },
  {
    "text": "I've convinced everyone in the room that policy decisions should be decoupled from policy enforcement because when you",
    "start": "1813279",
    "end": "1818950"
  },
  {
    "text": "do that you enable a general-purpose solution that can be optimized and support great tooling if you're",
    "start": "1818950",
    "end": "1826720"
  },
  {
    "text": "interested in the project I recommend you check out the website we have tutorials for things like HTTP API authorization admission control risk",
    "start": "1826720",
    "end": "1834279"
  },
  {
    "text": "management data protection and so on so go look at the website and try it try these things out and I hope that you'll",
    "start": "1834279",
    "end": "1841330"
  },
  {
    "text": "find that you can actually leverage oppa to solve fundamental security and policy problems in your organization's because",
    "start": "1841330",
    "end": "1846789"
  },
  {
    "text": "that's why we built it so thank you very much this is the repo police start on",
    "start": "1846789",
    "end": "1851980"
  },
  {
    "text": "github it kind of matters for open source projects these days I guess but yeah that's it thank you",
    "start": "1851980",
    "end": "1859740"
  },
  {
    "text": "questions in the front so the question",
    "start": "1863900",
    "end": "1870960"
  },
  {
    "text": "is is there an integration for BIM no other there is an integration for vim but it doesn't have all the evaluation in it so it'll do syntax highlighting",
    "start": "1870960",
    "end": "1876690"
  },
  {
    "text": "and reformat your policies for you but yeah but it could be extended so so",
    "start": "1876690",
    "end": "1896700"
  },
  {
    "text": "there's a startup that's doing that right now open in the last release we added a number of features that enable that so",
    "start": "1896700",
    "end": "1903210"
  },
  {
    "text": "we have a thing that'll tell open a download policies from a remote endpoint it's very simple API we have a thing",
    "start": "1903210",
    "end": "1909150"
  },
  {
    "text": "that will tell open to upload status updates to a remote endpoint so you know if your policies are synced correctly and we have something that'll also",
    "start": "1909150",
    "end": "1915180"
  },
  {
    "text": "record decisions that Pope is making in memory and then periodically update batches of those to the to a remote",
    "start": "1915180",
    "end": "1921150"
  },
  {
    "text": "endpoint as well so those api's are on the website you can check them out and they're pretty pretty simple to",
    "start": "1921150",
    "end": "1926880"
  },
  {
    "text": "implement so I think that hopefully we see like these policy control plans popping up oh one more I can in the",
    "start": "1926880",
    "end": "1935910"
  },
  {
    "text": "middle there yeah",
    "start": "1935910",
    "end": "1938390"
  },
  {
    "text": "yeah so if you're I don't know how you're doing it right now but so the like so open exposes API is that allow you to load the data in so you could",
    "start": "1948450",
    "end": "1954750"
  },
  {
    "text": "build that distribution piece that that basically makes very specific fine-grained updates to the data that's",
    "start": "1954750",
    "end": "1960149"
  },
  {
    "text": "in Opa so if your load loading and large batches of JSON then you'd probably want to use some of those api's you could also check out the bundle API that I",
    "start": "1960149",
    "end": "1966090"
  },
  {
    "text": "mentioned a minute ago that'll download things for you so it depends what the I can chat with you afterwards about the specifics of that",
    "start": "1966090",
    "end": "1973429"
  },
  {
    "text": "yeah let's chat afterwards about that in the back there so the question is can",
    "start": "1974059",
    "end": "1989129"
  },
  {
    "text": "you support hierarchy in the policies right yeah so actually that's it that",
    "start": "1989129",
    "end": "1996269"
  },
  {
    "text": "example came from Netflix and for them they do have a hierarchy and they just basically represent that in the data and then the data can search over the",
    "start": "1996269",
    "end": "2002419"
  },
  {
    "text": "hierarchy so yes you can support hierarchies to some extent it depends on like what you're trying to do if you're",
    "start": "2002419",
    "end": "2008330"
  },
  {
    "text": "trying to do like a graph traversal then it's not a great fit for that but certain types of hierarchies are easily",
    "start": "2008330",
    "end": "2014269"
  },
  {
    "text": "supported more questions okay yeah sorry",
    "start": "2014269",
    "end": "2020570"
  },
  {
    "text": "again",
    "start": "2020570",
    "end": "2022720"
  },
  {
    "text": "I'm just trying remember now okay yeah so the integration today is is for authorization it does allow you to",
    "start": "2041050",
    "end": "2046900"
  },
  {
    "text": "present prompts to the user so you can generate prompts and policy and then have those sent to the users so like one",
    "start": "2046900",
    "end": "2052330"
  },
  {
    "text": "of the use cases was that a company wanted to restrict you could SSH in based on whether there was like a ticket open for that user for the application",
    "start": "2052330",
    "end": "2059290"
  },
  {
    "text": "that's running on that box and so the user would enter the ticket but that no",
    "start": "2059290",
    "end": "2065620"
  },
  {
    "text": "it won't create the user you can tell it to run commands but I don't yeah I'd have to go back and look I can't remember I didn't write that integration",
    "start": "2065620",
    "end": "2071290"
  },
  {
    "text": "so I don't remember the details of it any other questions if not I can wrap up",
    "start": "2071290",
    "end": "2077310"
  },
  {
    "text": "no okay thank you very much [Applause]",
    "start": "2077310",
    "end": "2083449"
  }
]