[
  {
    "start": "0",
    "end": "154000"
  },
  {
    "text": "it started so hi I'd like to thank everyone who is joining us today welcome",
    "start": "0",
    "end": "5549"
  },
  {
    "text": "to today's CN CF webinar how open telemetry is eating the world I'm Kristy",
    "start": "5549",
    "end": "11280"
  },
  {
    "text": "tan marketing communications manager at CN CF I'll be moderating today's webinar we would like to welcome our presenter",
    "start": "11280",
    "end": "18029"
  },
  {
    "text": "today Steve Flanders director of engineering at slunk a few housekeeping items before we get started during the",
    "start": "18029",
    "end": "25560"
  },
  {
    "text": "webinar you are not able to talk as an attendee there is a Q&A box at the bottom of your screen please feel free",
    "start": "25560",
    "end": "31679"
  },
  {
    "text": "to drop your questions in there and we'll get to as many as we can throughout the presentation and at the",
    "start": "31679",
    "end": "37110"
  },
  {
    "text": "end this is an official webinar of the CNCs and as such is subject to the CNC EFT",
    "start": "37110",
    "end": "43140"
  },
  {
    "text": "code of conduct please do not add anything to the chat or questions that would be in violation of that code of",
    "start": "43140",
    "end": "48809"
  },
  {
    "text": "conduct basically please be respectful of all of your fellow participants and presenters I'd also like to remind folks that the",
    "start": "48809",
    "end": "56160"
  },
  {
    "text": "webinar slides in recording will be available later today on the CNCs website at CNCs io / webinars with that",
    "start": "56160",
    "end": "65460"
  },
  {
    "text": "I'll hand it over to Steve to kick off today's presentation thanks so much and",
    "start": "65460",
    "end": "70799"
  },
  {
    "text": "thanks for having me so today we're going to talk about open telemetry and how it is like many open source projects",
    "start": "70799",
    "end": "77310"
  },
  {
    "text": "really contributing to a broad adoption and really kind of changing the landscape of how you can solve",
    "start": "77310",
    "end": "83430"
  },
  {
    "text": "observability problems I actually have a lot of material to go through today hopefully the goal would be if you're",
    "start": "83430",
    "end": "89100"
  },
  {
    "text": "not familiar with the project you'll learn all about it today but even if you are familiar with it there may be some aspects of the project it's actually",
    "start": "89100",
    "end": "95400"
  },
  {
    "text": "quite broad in scope so hopefully you will learn something new either way also hoping to have time for a demo but",
    "start": "95400",
    "end": "101670"
  },
  {
    "text": "that'll be dependent on the number of questions I definitely want to make sure people are getting what they expect from this presentation and we definitely",
    "start": "101670",
    "end": "108509"
  },
  {
    "text": "encourage questions throughout we'll try to get as many of them answered I can also touch base offline afterwards as",
    "start": "108509",
    "end": "114420"
  },
  {
    "text": "well so with that just a quick introduction my name is Steve Flanders I'm a director of engineering at Splunk",
    "start": "114420",
    "end": "120240"
  },
  {
    "text": "I'm also an open slim 'try collector approver and a chair nominee for the CN",
    "start": "120240",
    "end": "125820"
  },
  {
    "text": "CF sig observability project previously I was at a company called omniscient I",
    "start": "125820",
    "end": "131580"
  },
  {
    "text": "was acquired by Splunk and Domitian we worked on the open census project which is now part of open slim",
    "start": "131580",
    "end": "137730"
  },
  {
    "text": "'try and prior to that I was at VMware leading engineering efforts for their log initiatives so I've kind of been in",
    "start": "137730",
    "end": "143999"
  },
  {
    "text": "the observability monitoring space here for for almost a decade I provided some links to some other material if you're",
    "start": "143999",
    "end": "150120"
  },
  {
    "text": "interested in learning more about some of the things that I talked about so what is open telemetry hopefully this",
    "start": "150120",
    "end": "156629"
  },
  {
    "start": "154000",
    "end": "154000"
  },
  {
    "text": "one's not too much of a surprise for folks but it's actually the joining of two other projects there's open tracing",
    "start": "156629",
    "end": "161879"
  },
  {
    "text": "which is in the cnc of today as an incubating project and there is open census these two projects had a lot in",
    "start": "161879",
    "end": "169109"
  },
  {
    "text": "common but they also had some significant differences and so really the goal was to bring it both projects",
    "start": "169109",
    "end": "175049"
  },
  {
    "text": "together and really provide a single solution today that people could rely on the idea here is really to standardize",
    "start": "175049",
    "end": "181889"
  },
  {
    "text": "and to make it easy so you don't have to choose between multiple projects that are kind of doing similar things and so",
    "start": "181889",
    "end": "187949"
  },
  {
    "text": "really all investments going forward by both the contributors of open tracing and open census are contributing now to",
    "start": "187949",
    "end": "193769"
  },
  {
    "text": "open telemetry so you can think of it as the next major version of both of these projects and the the goal is to sunset",
    "start": "193769",
    "end": "200879"
  },
  {
    "text": "both open tracing open census so going forward open symmetry is really the future with that said people are already",
    "start": "200879",
    "end": "207870"
  },
  {
    "text": "using open census and open tracing and the goal is not to leave people stranded so opens limitary actually has shims",
    "start": "207870",
    "end": "213750"
  },
  {
    "text": "that are completely backwards compatible in both these projects so it really provides a transition plan for you as",
    "start": "213750",
    "end": "219000"
  },
  {
    "text": "well it's not like you're going to have to change everything now in order to take advantage of some of the things in opens limitary there's actually a path",
    "start": "219000",
    "end": "225359"
  },
  {
    "text": "forward for you as well so let's talk about cloud native telemetry here I'm",
    "start": "225359",
    "end": "231959"
  },
  {
    "start": "228000",
    "end": "228000"
  },
  {
    "text": "sure if you're if you're familiar with cloud native terminology you've heard of the three pillars of observability here",
    "start": "231959",
    "end": "238349"
  },
  {
    "text": "I'm going to refer to them as limitary verticals but things like traces metrics and logs sometimes these are called",
    "start": "238349",
    "end": "244590"
  },
  {
    "text": "signals or data sources it's basically information that you can collect from your application or from your",
    "start": "244590",
    "end": "250560"
  },
  {
    "text": "infrastructure in order to figure out what's going on and the end goal here is really to",
    "start": "250560",
    "end": "255659"
  },
  {
    "text": "collect this data so you can answer any questions you have and be able to solve",
    "start": "255659",
    "end": "260669"
  },
  {
    "text": "both availability as well as performance problems now while you may have heard of",
    "start": "260669",
    "end": "266219"
  },
  {
    "text": "these three pillars of observability there's actually multiple layers for each of these different verticals that you need",
    "start": "266219",
    "end": "272940"
  },
  {
    "text": "to consider from an implementation perspective you have the api's themselves the canonical implementations",
    "start": "272940",
    "end": "278640"
  },
  {
    "text": "and SDKs you have the data infrastructure which includes things like data collection agents and",
    "start": "278640",
    "end": "284130"
  },
  {
    "text": "collectors and services and then you have interrupt formats like data wire protocols you have other standards such",
    "start": "284130",
    "end": "291720"
  },
  {
    "text": "as w3c all of this is very relevant and usually they're specific to the the",
    "start": "291720",
    "end": "299400"
  },
  {
    "text": "vertical that you're referring to in addition to this there are often language specific and as you look at",
    "start": "299400",
    "end": "305520"
  },
  {
    "text": "more cloud native workloads that are moving to more micro services based deployments you see a lot of polyglot",
    "start": "305520",
    "end": "311820"
  },
  {
    "text": "architectures where you're leveraging multiple languages and so the question becomes how can you have consistency",
    "start": "311820",
    "end": "317490"
  },
  {
    "text": "across all of this as you're collecting it now where does the open symmetry project fall in regards to these",
    "start": "317490",
    "end": "324360"
  },
  {
    "text": "different verticals and layers well the goal is actually to cover all of it and and the way you should think about this",
    "start": "324360",
    "end": "331050"
  },
  {
    "text": "is kind of twofold one is when you look at these verticals and layers it's really about the instrumentation and",
    "start": "331050",
    "end": "336630"
  },
  {
    "text": "data collection aspects you can think of it more as the what you're deploying in your environments in order to get the",
    "start": "336630",
    "end": "342450"
  },
  {
    "text": "telemetry data out what open symmetry is not looking to solve is the back end issue so it supports sending to a",
    "start": "342450",
    "end": "348990"
  },
  {
    "text": "variety of different backends and we'll talk more about that later in this webinar but it doesn't provide a",
    "start": "348990",
    "end": "354210"
  },
  {
    "text": "back-end so you're responsible for plugging this in you can of course use open source backends Jaeger Prometheus",
    "start": "354210",
    "end": "360450"
  },
  {
    "text": "what have you you can also use commercial third-party vendors as well another thing worth noting is kind of",
    "start": "360450",
    "end": "366930"
  },
  {
    "text": "the priorities from an open symmetry perspective there's already broad support for tracing I will spend a fair",
    "start": "366930",
    "end": "372150"
  },
  {
    "text": "amount of time talking about that today a metric support is coming in right now in fact the open symmetry project just",
    "start": "372150",
    "end": "378780"
  },
  {
    "text": "announced its beta last week or a couple weeks ago that includes both traces and metrics and logs is starting to be",
    "start": "378780",
    "end": "386640"
  },
  {
    "text": "discussed currently there's actually a log sig that is forming but there's no like native support for logging other",
    "start": "386640",
    "end": "393540"
  },
  {
    "text": "than say like adding trace contacts tricity spin ID and does into some of the logs and again will",
    "start": "393540",
    "end": "400050"
  },
  {
    "text": "more about that in a little bit the long-term the vision is really to handle all these different verticals and really",
    "start": "400050",
    "end": "406050"
  },
  {
    "text": "provide an open-source vendor agnostic open standards-based approach as to how",
    "start": "406050",
    "end": "411750"
  },
  {
    "text": "you would solve this with the the end goal being that this is actually provided out of the box",
    "start": "411750",
    "end": "417060"
  },
  {
    "text": "there isn't much as a developer that you need to do to take advantage of this just by building your app hopefully you'll have everything that you need to",
    "start": "417060",
    "end": "423300"
  },
  {
    "text": "admit that limitary data and then you can collect it in the platform or",
    "start": "423300",
    "end": "428430"
  },
  {
    "text": "platforms that you care about in order to analyze that data and get it back out so I wanted to provide a little bit of",
    "start": "428430",
    "end": "436020"
  },
  {
    "start": "434000",
    "end": "434000"
  },
  {
    "text": "stats I'm a very data-driven person and there are actually some pretty cool numbers here so C and C F has something",
    "start": "436020",
    "end": "442770"
  },
  {
    "text": "called dev stats you might have heard of it it's online it's backed by graph wanna so as of right now there are a",
    "start": "442770",
    "end": "449400"
  },
  {
    "text": "hundred and four members that are part of open slim 'try but there are a broad range of actually active contributors",
    "start": "449400",
    "end": "455759"
  },
  {
    "text": "many companies involved here from across the globe lots of contributions so this",
    "start": "455759",
    "end": "461610"
  },
  {
    "text": "project is very much active very much growing and maturing extremely rapidly one of the really cool things is that",
    "start": "461610",
    "end": "468990"
  },
  {
    "text": "there is support and to end for this project what I mean by that is you're",
    "start": "468990",
    "end": "474449"
  },
  {
    "text": "seeing cloud providers like Ashura and GCP big name vendors that are in the monitoring and observability space as",
    "start": "474449",
    "end": "481259"
  },
  {
    "text": "well as end users that are both consuming this as well as contributing",
    "start": "481259",
    "end": "486300"
  },
  {
    "text": "back this is quite unique you're basically seeing the community as a whole come together and really kind of",
    "start": "486300",
    "end": "492180"
  },
  {
    "text": "support and embrace this which means that there actually is a problem here that needs to be solved",
    "start": "492180",
    "end": "497520"
  },
  {
    "text": "there's a lot of value that can come out of making this project successful so that's really really exciting in my mind",
    "start": "497520",
    "end": "504060"
  },
  {
    "text": "really it's nice to be involved in a project where a lot of people kind of feel this pain a lot of people want to",
    "start": "504060",
    "end": "509520"
  },
  {
    "text": "help make this better and everyone's kind of coming together to do the right thing but it's not just about the open",
    "start": "509520",
    "end": "516240"
  },
  {
    "text": "symmetry project either there's actually pretty broad communication and collaboration happening with others the",
    "start": "516240",
    "end": "521370"
  },
  {
    "text": "MCF projects so so for example we work very closely with the Jaeger team and",
    "start": "521370",
    "end": "526649"
  },
  {
    "text": "more recently with flu and fits given some of the log conversations that are happening in the log sig so we're trying",
    "start": "526649",
    "end": "532709"
  },
  {
    "text": "to make sure that we're very much engaging others and kind of get insights so that any solution",
    "start": "532709",
    "end": "538850"
  },
  {
    "text": "that's being provided is really applicable to the more broad use cases today and one really cool stat that I",
    "start": "538850",
    "end": "545570"
  },
  {
    "text": "wanted to share is that according to CN CF dev stats as of right now opens limit",
    "start": "545570",
    "end": "551120"
  },
  {
    "text": "tree is actually the second most active project in CN CF that's a pretty",
    "start": "551120",
    "end": "556220"
  },
  {
    "text": "astounding number given that number one is kubernetes and opens limit tree",
    "start": "556220",
    "end": "561260"
  },
  {
    "text": "currently is a sandbox project so though it's it's be leveraging open trace you can open open census type information as",
    "start": "561260",
    "end": "568370"
  },
  {
    "text": "well oh that's a pretty cool milestone and again I think it kind of shows the importance of this project people are",
    "start": "568370",
    "end": "574250"
  },
  {
    "text": "really interested in this problem space and really want it to be better okay so with that introduction what I'd",
    "start": "574250",
    "end": "581750"
  },
  {
    "text": "like to do next is kind of jump quickly into the architecture just to provide at a high level of what is provided by",
    "start": "581750",
    "end": "586910"
  },
  {
    "text": "opens limit tree and then kind of drill down into more of the specifics so you can kind of understand how you can",
    "start": "586910",
    "end": "592010"
  },
  {
    "text": "consume it so there's basically three components that you could primary component so you can think of here",
    "start": "592010",
    "end": "598130"
  },
  {
    "text": "there's the specification this is actually super important this is the foundation of which everything is built",
    "start": "598130",
    "end": "603320"
  },
  {
    "text": "on and that's broken up into three different areas you have the API the SDK",
    "start": "603320",
    "end": "608360"
  },
  {
    "text": "and then some data stuff including semantic conventions which we'll talk more about later so the goal here is",
    "start": "608360",
    "end": "614420"
  },
  {
    "text": "just to make sure that whatever is being developed from a specification perspective is broadly applicable because the idea is that this",
    "start": "614420",
    "end": "621290"
  },
  {
    "text": "specification shouldn't change very much without a significant consideration especially given that all the other",
    "start": "621290",
    "end": "627740"
  },
  {
    "text": "components rely heavily on it and making changes requires changing everything end to end the next component is really",
    "start": "627740",
    "end": "634610"
  },
  {
    "text": "around data collection so the open symmetry project does provide a collector that is capable of being",
    "start": "634610",
    "end": "640640"
  },
  {
    "text": "deployed as an agent or as a standalone service that is completely vendor",
    "start": "640640",
    "end": "645830"
  },
  {
    "text": "agnostic and actually handles some pretty cool things like translating into and out of different formats so the idea",
    "start": "645830",
    "end": "653060"
  },
  {
    "text": "here is that you have a single solution that you can potentially leverage and not be locked into one particular",
    "start": "653060",
    "end": "658700"
  },
  {
    "text": "vendors choice which is pretty cool and then there is the instrumentation aspect this is for traces and metrics and",
    "start": "658700",
    "end": "665660"
  },
  {
    "text": "eventually logs a the goal here is to provide a vendor agnostic way to do this and supports",
    "start": "665660",
    "end": "672170"
  },
  {
    "text": "broadly all the different languages libraries and versions that you care about and ideally do this in a",
    "start": "672170",
    "end": "678890"
  },
  {
    "text": "friction-free way or provide enough flexibility where you can kind of control what is being instrumented what",
    "start": "678890",
    "end": "685220"
  },
  {
    "text": "is being sent how you're enhancing that data and what-have-you as I mentioned",
    "start": "685220",
    "end": "691040"
  },
  {
    "text": "logging is incubating right now and that is a goal of open symmetry it's still early days for that a lot of the focus",
    "start": "691040",
    "end": "697580"
  },
  {
    "text": "has been around tracing and metrics as I mentioned the project as a whole is in",
    "start": "697580",
    "end": "703160"
  },
  {
    "text": "the beta status internally right now we cut a beta release a couple weeks back",
    "start": "703160",
    "end": "708170"
  },
  {
    "text": "that didn't include all of the languages that are part of open symmetry today it",
    "start": "708170",
    "end": "713270"
  },
  {
    "text": "was a subset as listed here you can see Orlando Java JavaScript and Python but",
    "start": "713270",
    "end": "718820"
  },
  {
    "text": "there are some pretty cool aspects like Java includes both manual and auto instrumentation we'll talk about that",
    "start": "718820",
    "end": "725210"
  },
  {
    "text": "more in just a little bit that's for the tracing aspect javascript includes the",
    "start": "725210",
    "end": "730370"
  },
  {
    "text": "web component as well which can help with real user monitoring another very common use case here and there are plans",
    "start": "730370",
    "end": "737570"
  },
  {
    "text": "to add more broad open auto instrumentation supports as well as get",
    "start": "737570",
    "end": "743090"
  },
  {
    "text": "additional languages dotnet and Ruby are actually pretty close to making it to the beta status going forward here the",
    "start": "743090",
    "end": "751130"
  },
  {
    "text": "goal is to get the entire project and all of its sub components into that beta status and then get to GA I'll talk more",
    "start": "751130",
    "end": "757580"
  },
  {
    "text": "about the roadmap here towards the end of the session so I wanted to walk you",
    "start": "757580",
    "end": "763160"
  },
  {
    "start": "762000",
    "end": "762000"
  },
  {
    "text": "through kind of a high-level architecture of open telemetry kind of where the components fit how they would",
    "start": "763160",
    "end": "768890"
  },
  {
    "text": "be stitched together again this is meant to be super high-level basically everything is plug-and-play there's a",
    "start": "768890",
    "end": "774770"
  },
  {
    "text": "lot of flexibility here this isn't to kind of dictate how you must use the project it's just one of the ways that",
    "start": "774770",
    "end": "780380"
  },
  {
    "text": "we would typically recommend stitching things together as I mentioned given that choices and metrics are kind of the primary focus",
    "start": "780380",
    "end": "786800"
  },
  {
    "text": "right now I'll talk about them specifically so let's assume that you have your application you probably have",
    "start": "786800",
    "end": "792170"
  },
  {
    "text": "multiple of them probably microservices running throughout your environment they",
    "start": "792170",
    "end": "797360"
  },
  {
    "text": "run on one or more different hosts and the net result is you want to collect out the telemetry data",
    "start": "797360",
    "end": "803180"
  },
  {
    "text": "that you care about and then send it to one or potentially multiple different backends so how you would do that using",
    "start": "803180",
    "end": "811430"
  },
  {
    "text": "the components that are available in open symmetry today the first step would typically be deploying the open",
    "start": "811430",
    "end": "817520"
  },
  {
    "text": "telemetry collector as an agent the collector name is a little bit of a misnomer here it can actually be",
    "start": "817520",
    "end": "823580"
  },
  {
    "text": "deployed a variety of different ways a standalone binary sidecar daemon SATs as an agent or as a standalone service but",
    "start": "823580",
    "end": "830840"
  },
  {
    "text": "you want to basically have something as close to the application as possible and you want it to be able to handle a few",
    "start": "830840",
    "end": "837710"
  },
  {
    "text": "things one is if it's running on say a host you want it to be able to collect some of the metric informations you can",
    "start": "837710",
    "end": "843500"
  },
  {
    "text": "do more infrastructure correlation and then the second aspect of that is you wanted to be close to the application to",
    "start": "843500",
    "end": "849740"
  },
  {
    "text": "get the application metrics and trace information as well and you might have scenarios we want like a subset of data",
    "start": "849740",
    "end": "857240"
  },
  {
    "text": "to go to one back-end and maybe all the data to go to another so really there's flexibility and how you configure this",
    "start": "857240",
    "end": "863090"
  },
  {
    "text": "collector to send that data the other aspect would be around adding",
    "start": "863090",
    "end": "868160"
  },
  {
    "text": "instrumentation to your application itself again opens lumetri provides a variety of different client libraries",
    "start": "868160",
    "end": "873260"
  },
  {
    "text": "and those can be configured typically out of the box they support sending locally to the open telemetry collector",
    "start": "873260",
    "end": "879470"
  },
  {
    "text": "running as an agent so here you can get both metric and trace information whereas from the host you would",
    "start": "879470",
    "end": "885170"
  },
  {
    "text": "typically just be collecting metric information so this is kind of at a high level what it would look like maybe you",
    "start": "885170",
    "end": "891710"
  },
  {
    "text": "only have one back-end maybe you only want to collect traces and not metrics or metrics or not traces again you can",
    "start": "891710",
    "end": "897980"
  },
  {
    "text": "configure this in different ways and then for more of the enterprise like",
    "start": "897980",
    "end": "903560"
  },
  {
    "text": "production grade type deployments we also support a model like the following",
    "start": "903560",
    "end": "908840"
  },
  {
    "text": "where similarly you still have an agent running locally but you might have use cases where you might want to have a",
    "start": "908840",
    "end": "915020"
  },
  {
    "text": "standalone service that kind of aggregates this data use cases for that",
    "start": "915020",
    "end": "920600"
  },
  {
    "text": "would include like limiting the number of egress points you want to have out controlling say API tokens if you're",
    "start": "920600",
    "end": "926810"
  },
  {
    "text": "sending this to like a third party SAS vendor could also include doing more advanced use cases like Tayla based",
    "start": "926810",
    "end": "933470"
  },
  {
    "text": "sampling where you all spans forgiven tres to go to the same a collector instance",
    "start": "933470",
    "end": "939360"
  },
  {
    "text": "so again flexibility here and as how you could deploy this but at a high level",
    "start": "939360",
    "end": "944970"
  },
  {
    "text": "this is what it would look like and you don't have to necessarily take our word and open symmetry for this other",
    "start": "944970",
    "end": "951300"
  },
  {
    "text": "projects they're already adopting it as well Jagr just recently announced they have the blog post here that they are in the",
    "start": "951300",
    "end": "958470"
  },
  {
    "start": "952000",
    "end": "952000"
  },
  {
    "text": "process of supporting the open Salama tree collector as a replacement for the Jager collector again very similar",
    "start": "958470",
    "end": "963960"
  },
  {
    "text": "notion here the primary difference being that today they're still using the Jager client libraries they are talking about",
    "start": "963960",
    "end": "970560"
  },
  {
    "text": "switching over to the open symmetry ones in the future but the other aspect is there supporting Jager natively so like",
    "start": "970560",
    "end": "977550"
  },
  {
    "text": "the default config for the hotel collector would be to support the open telemetry protocol whereas Jager wants",
    "start": "977550",
    "end": "983460"
  },
  {
    "text": "to support the Jager protocol this is basically just a configuration change but they are they offer a distribution",
    "start": "983460",
    "end": "989520"
  },
  {
    "text": "of this that is pre-configured to negatively support Jager intent hey",
    "start": "989520",
    "end": "995040"
  },
  {
    "text": "Steve we have a question and in the Q&A and I think makes sense to answer here",
    "start": "995040",
    "end": "1000140"
  },
  {
    "text": "so Andre is asking does open telemetry include adoption of w3c trace context as",
    "start": "1000140",
    "end": "1007550"
  },
  {
    "text": "the standard propagation header format yes that's a very good question let me",
    "start": "1007550",
    "end": "1012890"
  },
  {
    "text": "get to that in the client libraries I actually cover that explicitly the short answer is yes but there's more I want to",
    "start": "1012890",
    "end": "1019910"
  },
  {
    "text": "talk about with context propagation so that is a very good question and just give me a little bit and we'll cover in",
    "start": "1019910",
    "end": "1024980"
  },
  {
    "text": "more depth cool so now you kind of understand a",
    "start": "1024980",
    "end": "1031949"
  },
  {
    "text": "little bit about the project high-level architecture I want to jump into the specification because that kind of lays",
    "start": "1031950",
    "end": "1037050"
  },
  {
    "text": "the groundwork for the data collection and client library aspects so actually",
    "start": "1037050",
    "end": "1042420"
  },
  {
    "start": "1041000",
    "end": "1041000"
  },
  {
    "text": "we talked a little bit about context propagation here so I guess good segue for that question from a tracing",
    "start": "1042420",
    "end": "1048420"
  },
  {
    "text": "perspective there are many different concepts and I can't get into all the specification here given the amount of",
    "start": "1048420",
    "end": "1055110"
  },
  {
    "text": "time that we have but some of the big things to be aware of is this notion of context and the in the distributed",
    "start": "1055110",
    "end": "1061440"
  },
  {
    "text": "tracing world this is actually a super critical it allows you to actually get context and correlation throughout your infrastructure",
    "start": "1061440",
    "end": "1067020"
  },
  {
    "text": "so I guess to directly answer the question I didn't realize it was the next slide here w3 trace context is",
    "start": "1067020",
    "end": "1072990"
  },
  {
    "text": "natively supported by all of the open telemetry client libraries so the answer",
    "start": "1072990",
    "end": "1078660"
  },
  {
    "text": "is yes absolutely many of these client libraries also support other formats because not",
    "start": "1078660",
    "end": "1084030"
  },
  {
    "text": "everyone has moved to w3c yet it's a very new standard that's coming out but it really is the future of context",
    "start": "1084030",
    "end": "1090120"
  },
  {
    "text": "propagation so it's good that you're looking at it b3 is commonly used there are other context propagation formats that are",
    "start": "1090120",
    "end": "1096870"
  },
  {
    "text": "commonly used and you're gonna see support for that in the client libraries as as well",
    "start": "1096870",
    "end": "1102810"
  },
  {
    "text": "what's also kind of cool and I'll talk a little bit more about it later is that you can actually support having multiple",
    "start": "1102810",
    "end": "1109230"
  },
  {
    "text": "context propagation formats run in parallel so you can receive multiple different ones this is going to be",
    "start": "1109230",
    "end": "1114930"
  },
  {
    "text": "important because many people that already have tracing in their environment are probably using something like b3 and they're going to need to",
    "start": "1114930",
    "end": "1120870"
  },
  {
    "text": "transition to w3c so open symmetry is actually going to make that pretty easy it's just enabling multiple contexts",
    "start": "1120870",
    "end": "1127830"
  },
  {
    "text": "propagations and then turning it off when you're when you're ready some of the other aspects to be aware of you",
    "start": "1127830",
    "end": "1133470"
  },
  {
    "text": "have this notion of a tracer it's basically how you pay it pass context around and generate your spans spans is",
    "start": "1133470",
    "end": "1139590"
  },
  {
    "text": "a typical distributed tracing concept is basically a call and your request path it's made up of multiple different",
    "start": "1139590",
    "end": "1145800"
  },
  {
    "text": "components and then you have more advanced type stuff like sampling and",
    "start": "1145800",
    "end": "1150960"
  },
  {
    "text": "how you handle exporting but there's a lot of flexibility here there isn't like a prescribed you can only do it one way",
    "start": "1150960",
    "end": "1157410"
  },
  {
    "text": "as you can see for almost all of these there are multi different options context propagation",
    "start": "1157410",
    "end": "1162520"
  },
  {
    "text": "lists multiple sample error processors exporters so a lot of flexibility as well one thing I will call out in the",
    "start": "1162520",
    "end": "1169750"
  },
  {
    "text": "tracing role that leaves for open symmetry we call key value pairs or tags or metadata attributes so if you hear",
    "start": "1169750",
    "end": "1177100"
  },
  {
    "text": "that term it's it's kind of similar but the naming for that is is called attributes today one other thing I want",
    "start": "1177100",
    "end": "1185530"
  },
  {
    "start": "1184000",
    "end": "1184000"
  },
  {
    "text": "to call out about tracing is actually semantic conventions as it turns out open symmetry is not very prescriptive",
    "start": "1185530",
    "end": "1190960"
  },
  {
    "text": "about how you actually denote your spans it's kind of freeform it's up to you to",
    "start": "1190960",
    "end": "1196150"
  },
  {
    "text": "add the data that is important to you with that said it does make recommendations on how to call things",
    "start": "1196150",
    "end": "1203380"
  },
  {
    "text": "similarly that are well-known so HTTP calls are a good example of the databases are a good example of this and",
    "start": "1203380",
    "end": "1210520"
  },
  {
    "text": "this is actually super important because these semantic conventions make it so you actually can have a vendor agnostic",
    "start": "1210520",
    "end": "1216790"
  },
  {
    "text": "solution whereas you know what a database is no matter which vendor or open source project you're leveraging so",
    "start": "1216790",
    "end": "1223929"
  },
  {
    "text": "this is actually very cool it doesn't force you to do it but it would be encouraged that you actually start",
    "start": "1223929",
    "end": "1229960"
  },
  {
    "text": "taking advantage of this and some of these are actually built into the client libraries today I'll show some of that",
    "start": "1229960",
    "end": "1235419"
  },
  {
    "text": "with the auto instrumentation work that exists so let me give you an example of",
    "start": "1235419",
    "end": "1241480"
  },
  {
    "start": "1239000",
    "end": "1239000"
  },
  {
    "text": "the power of semantic conventions let's say that I have an application doesn't matter what language it is let's say",
    "start": "1241480",
    "end": "1247240"
  },
  {
    "text": "it's leveraging the open symmetry library or really any tracing metric library doesn't really matter and let's",
    "start": "1247240",
    "end": "1253450"
  },
  {
    "text": "say that your application actually calls out to a database now there are a few different types of ways that you can",
    "start": "1253450",
    "end": "1259929"
  },
  {
    "text": "call it to a database maybe it's something that you can control which means you can add instrumentation to the database as well but more often than not",
    "start": "1259929",
    "end": "1266590"
  },
  {
    "text": "you're probably leveraging another type of database maybe some sort of third party thing maybe you're leveraging like a cloud",
    "start": "1266590",
    "end": "1273429"
  },
  {
    "text": "provider a one so you don't have direct access to actually add instrumentation",
    "start": "1273429",
    "end": "1280510"
  },
  {
    "text": "you're just kind of consuming the database this is where semantic conventions can be extremely powerful",
    "start": "1280510",
    "end": "1286000"
  },
  {
    "text": "for example let's say your application calls out the database if I'm leveraging semantic conventions for that call for",
    "start": "1286000",
    "end": "1292450"
  },
  {
    "text": "let's say traces then I can denote in my span hey this is a client's pan which means I'm calling",
    "start": "1292450",
    "end": "1298480"
  },
  {
    "text": "out to some other service and I can denote it saying hey the DB type is whatever this thing is maybe it's a",
    "start": "1298480",
    "end": "1304720"
  },
  {
    "text": "MongoDB and I can say DB instance is MongoDB o1 it's the first instance they",
    "start": "1304720",
    "end": "1311830"
  },
  {
    "text": "happen to be calling maybe it has the DB duck statement information so I know that I'm running a select query on some",
    "start": "1311830",
    "end": "1318340"
  },
  {
    "text": "table here all of that can be tagged in as basically metadata on to the spans",
    "start": "1318340",
    "end": "1324040"
  },
  {
    "text": "that are being generated from the application itself and because of that even though the database is not",
    "start": "1324040",
    "end": "1329530"
  },
  {
    "text": "instrumented I can now infer that a database exists and I can actually calculate information like I will know",
    "start": "1329530",
    "end": "1336220"
  },
  {
    "text": "the amount of calls that I'm making so I can actually compute my read metrics requests errors duration from an",
    "start": "1336220",
    "end": "1343330"
  },
  {
    "text": "application level perspective and I can also infer what that relationship is say",
    "start": "1343330",
    "end": "1348400"
  },
  {
    "text": "like latency between my application and my database because again I have instrumentation on this side and I know",
    "start": "1348400",
    "end": "1353920"
  },
  {
    "text": "what I'm calling so this is actually extremely powerful and as you leverage more like cloud providers or third-party",
    "start": "1353920",
    "end": "1360520"
  },
  {
    "text": "services taking advantage of these semantics conventions can can really give you more insights as to how your",
    "start": "1360520",
    "end": "1367060"
  },
  {
    "text": "environment is behaving on the other side of the coin here we have metric",
    "start": "1367060",
    "end": "1374860"
  },
  {
    "start": "1370000",
    "end": "1370000"
  },
  {
    "text": "basics so same idea as it turns out context is important here as well so",
    "start": "1374860",
    "end": "1379900"
  },
  {
    "text": "typically there is no notion of context with metrics but in the open symmetry world context is actually added span and",
    "start": "1379900",
    "end": "1386590"
  },
  {
    "text": "correlation information is added in as metadata so now I can actually enhance these spans and actually understand how",
    "start": "1386590",
    "end": "1393640"
  },
  {
    "text": "a behaviors are happening the terminology here is is slightly different so instead of traces and spans",
    "start": "1393640",
    "end": "1399460"
  },
  {
    "text": "we have more like meters and metrics measurements and you'd use things slightly differently like aggregations",
    "start": "1399460",
    "end": "1405400"
  },
  {
    "text": "and time versus say like sampling but at the high level the concepts are very",
    "start": "1405400",
    "end": "1410650"
  },
  {
    "text": "similar metrics are typically a little bit easier to understand because most people use them today where we're",
    "start": "1410650",
    "end": "1416770"
  },
  {
    "text": "tracing hasn't received its broad adoption yet but hopefully that will change because especially as you start",
    "start": "1416770",
    "end": "1421900"
  },
  {
    "text": "looking at more of these micro-services architectures without the right context and correlation",
    "start": "1421900",
    "end": "1427660"
  },
  {
    "text": "really things like metrics and logs or more symptoms and it's really hard to get to like root cause without having",
    "start": "1427660",
    "end": "1433960"
  },
  {
    "text": "some sort of treat trace information or relief the context that's provided by a trace information throughout your",
    "start": "1433960",
    "end": "1440770"
  },
  {
    "text": "environments one other really cool thing the open symmetry provides is this",
    "start": "1440770",
    "end": "1447250"
  },
  {
    "start": "1443000",
    "end": "1443000"
  },
  {
    "text": "notion of a resource SDK and this resource SDK also has its own semantics",
    "start": "1447250",
    "end": "1452320"
  },
  {
    "text": "conventions the idea here is how can I identify the source of the object that",
    "start": "1452320",
    "end": "1458530"
  },
  {
    "text": "is generating this telemetry data and and this is super important as I as I want to solve more let's say",
    "start": "1458530",
    "end": "1464710"
  },
  {
    "text": "infrastructure correlation information or if I want to do problem isolation and I want to identify where in my",
    "start": "1464710",
    "end": "1471220"
  },
  {
    "text": "environment a problem is occurring this is extremely useful and the example",
    "start": "1471220",
    "end": "1476440"
  },
  {
    "text": "provided here I think makes a lot of sense especially given its kind of cloud native focused so think about I have",
    "start": "1476440",
    "end": "1482230"
  },
  {
    "text": "some sort of process that's running some sort of micro service let's say it's producing telemetry it happens to be in",
    "start": "1482230",
    "end": "1488560"
  },
  {
    "text": "a container that runs in kubernetes that means it has a pod name because that's how kubernetes works it will be running",
    "start": "1488560",
    "end": "1496270"
  },
  {
    "text": "in a namespace again that's how kubernetes works and it might be part of a deployment it could be another potential objects but let's say that",
    "start": "1496270",
    "end": "1502960"
  },
  {
    "text": "it's a deployments all three of these things the pod name the main namespace name and the deployment name can be",
    "start": "1502960",
    "end": "1509980"
  },
  {
    "text": "added as attributes into this resource so now I can identify kind of where this is happening in my",
    "start": "1509980",
    "end": "1515800"
  },
  {
    "text": "environments and it's immutable so I now come I know it's state indefinitely so",
    "start": "1515800",
    "end": "1521890"
  },
  {
    "text": "some semantic conventions have been defined here and there is ability to tag resource information on to both traces",
    "start": "1521890",
    "end": "1527470"
  },
  {
    "text": "and metrics so now I have even more visibility not only can I answer application level and questions I can",
    "start": "1527470",
    "end": "1535360"
  },
  {
    "text": "also answer some the infrastructure ones that come along with it okay so with the",
    "start": "1535360",
    "end": "1543040"
  },
  {
    "text": "specification at least high level information and again if you're really interested go take a look at the specification it's pretty in-depth",
    "start": "1543040",
    "end": "1549370"
  },
  {
    "text": "there's a lot of conversation going on there I can't cover all the aspects but I think that gives you enough of a foundation to help you understand what's",
    "start": "1549370",
    "end": "1556480"
  },
  {
    "text": "available I want to jump into the collector real quick and then we talk about the clinic libraries so what",
    "start": "1556480",
    "end": "1563090"
  },
  {
    "start": "1562000",
    "end": "1562000"
  },
  {
    "text": "is the objective of this collector and the idea here is really to provide an implementation for you so not only do",
    "start": "1563090",
    "end": "1569420"
  },
  {
    "text": "you have your telemetry data but you have a way of collecting it and sending it in a completely vendor agnostic way",
    "start": "1569420",
    "end": "1575480"
  },
  {
    "text": "this vendor agnostic aspect is actually super critical one of the things you commonly see is that most vendors",
    "start": "1575480",
    "end": "1582140"
  },
  {
    "text": "provide their own agent or collector or both a type of implementation but it's proprietary to them even if it's open",
    "start": "1582140",
    "end": "1588710"
  },
  {
    "text": "source it only works for their backends it's very hard to extend it's very hard to make a good kind of open",
    "start": "1588710",
    "end": "1594980"
  },
  {
    "text": "standards-based and so the collector is looking to solve this across a problem by offering a way to basically receive",
    "start": "1594980",
    "end": "1602090"
  },
  {
    "text": "telemetry data to process that telemetry data in case you want to make changes to it and then export it to one or more",
    "start": "1602090",
    "end": "1608600"
  },
  {
    "text": "different backends this also would include transformations or translations of that data so for",
    "start": "1608600",
    "end": "1614660"
  },
  {
    "text": "example I can receive and Jaeger but I can export in Zipkin that's totally possible in the collector today and",
    "start": "1614660",
    "end": "1621020"
  },
  {
    "text": "there are some very high-level objectives here kind of end goals in terms of usability and performance and",
    "start": "1621020",
    "end": "1626930"
  },
  {
    "text": "and just providing a single solution end to end but it might be more helpful to kind of understand this context by by",
    "start": "1626930",
    "end": "1633860"
  },
  {
    "text": "drilling into it a little bit more what I do want to cover is the the but why",
    "start": "1633860",
    "end": "1639110"
  },
  {
    "start": "1635000",
    "end": "1635000"
  },
  {
    "text": "because it does come up from time to time look there are agents and collectors out there or why can't I just have my client",
    "start": "1639110",
    "end": "1646280"
  },
  {
    "text": "library instrumentation send directly to the the back end that I care about and at a high level there are kind of two",
    "start": "1646280",
    "end": "1652850"
  },
  {
    "text": "bullet points that I think answered this question one is the goal of generating this telemetry data it should be to",
    "start": "1652850",
    "end": "1660050"
  },
  {
    "text": "ensure that you are not adding a significant overhead to your application you can't impact application performance",
    "start": "1660050",
    "end": "1666440"
  },
  {
    "text": "so it needs to be as lightweight as possible and especially as we look at more micro services and polyglot",
    "start": "1666440",
    "end": "1672500"
  },
  {
    "text": "architectures you're going to be solving this for every single language so any feature that you add into a client",
    "start": "1672500",
    "end": "1678200"
  },
  {
    "text": "library needs to be added to every single language any bug that you find is probably applicable to most of the",
    "start": "1678200",
    "end": "1683480"
  },
  {
    "text": "languages and needs to be fixed end-to-end so one of the things that you should be looking to do is to offload as",
    "start": "1683480",
    "end": "1688760"
  },
  {
    "text": "much of that responsibility from the client library as possible so that you're not impacting the app",
    "start": "1688760",
    "end": "1693770"
  },
  {
    "text": "location this can include things like compression encryption retry logic it",
    "start": "1693770",
    "end": "1698810"
  },
  {
    "text": "can include things like adding additional metadata or handling like redaction for like PII it can also",
    "start": "1698810",
    "end": "1705350"
  },
  {
    "text": "include like supporting multiple exporters maybe I'm using vendor a today but I want to use vendor B tomorrow that",
    "start": "1705350",
    "end": "1712070"
  },
  {
    "text": "would mean having multiple exporters configured in my client library or even rebuilding my app to add that support",
    "start": "1712070",
    "end": "1717790"
  },
  {
    "text": "the other side of the the coin here in regards to why the collector would be",
    "start": "1717790",
    "end": "1723950"
  },
  {
    "text": "time to value if I offer and offload these responsibilities into a collector I can solve it in one language and not",
    "start": "1723950",
    "end": "1730250"
  },
  {
    "text": "in multiple which makes life a lot easier and I can move to more of a config based updates it's usually pretty",
    "start": "1730250",
    "end": "1736310"
  },
  {
    "text": "trivial to update a configuration file or even update an agent it is not as",
    "start": "1736310",
    "end": "1741530"
  },
  {
    "text": "trivial to go update your application code and to go push that through and get that rolled out throughout your entire",
    "start": "1741530",
    "end": "1746630"
  },
  {
    "text": "environments in addition the goal should be to kind of set it and forget it the",
    "start": "1746630",
    "end": "1751850"
  },
  {
    "text": "idea is that your instrumentation is configured once and then you don't have to touch it and out of the box basically",
    "start": "1751850",
    "end": "1757640"
  },
  {
    "text": "it'll support sending locally to the collector running as an agent which means if you deploy it then no",
    "start": "1757640",
    "end": "1763910"
  },
  {
    "text": "configuration change is going to be necessary in your instrumentation it'll automatically get picked up and then",
    "start": "1763910",
    "end": "1769610"
  },
  {
    "text": "finally of course as I mentioned vendor agnostic and easily extensible so",
    "start": "1769610",
    "end": "1774680"
  },
  {
    "text": "out-of-the-box it provides support for a variety of popular open source solutions",
    "start": "1774680",
    "end": "1779780"
  },
  {
    "text": "like Jaeger and Prometheus but it also offers a very flexible pluggable architecture so that vendors or really",
    "start": "1779780",
    "end": "1786440"
  },
  {
    "text": "anyone can add additional support and capabilities as well so let's look at",
    "start": "1786440",
    "end": "1793580"
  },
  {
    "text": "the architecture of the collector and this is going to be a bit of an eye chart so I apologize but I was I was",
    "start": "1793580",
    "end": "1798680"
  },
  {
    "text": "trying to think of a way to make this understandable basically there's a notion of receivers this is how you get",
    "start": "1798680",
    "end": "1805610"
  },
  {
    "text": "data into the collector this could be push or pull based it doesn't matter but",
    "start": "1805610",
    "end": "1810770"
  },
  {
    "text": "basically it's it's telemetry data that's going to enter the collector this works for both traces and metrics so",
    "start": "1810770",
    "end": "1816590"
  },
  {
    "text": "like there's a Jaeger receiver today there's a Prometheus one and open symmetry actually has its own protocol",
    "start": "1816590",
    "end": "1822170"
  },
  {
    "text": "as well on the other side of the collector would be exporters which is how you send",
    "start": "1822170",
    "end": "1827690"
  },
  {
    "text": "data out of the collector and again you're going to support like the same thing on both ends at least when it",
    "start": "1827690",
    "end": "1833060"
  },
  {
    "text": "comes to some of these open source solutions so I can export in Jaeger or Prometheus or the open telemetry",
    "start": "1833060",
    "end": "1840350"
  },
  {
    "text": "protocol and then in the middle here you have this notion of processors and its ways that you can kind of massage",
    "start": "1840350",
    "end": "1847100"
  },
  {
    "text": "manipulate change the data as its flowing through the collector so this could include things like I want to",
    "start": "1847100",
    "end": "1853010"
  },
  {
    "text": "batch the data before I send it out or I want to retry in case for whatever reason the exporting fails this could",
    "start": "1853010",
    "end": "1859550"
  },
  {
    "text": "also include things like adding metadata redacting tags that may contain PII",
    "start": "1859550",
    "end": "1865990"
  },
  {
    "text": "doing things like tale based sampling all of that would be kind of processors or things that kind of happen in the",
    "start": "1865990",
    "end": "1872150"
  },
  {
    "text": "middle and you can actually default the define multiple different types of the",
    "start": "1872150",
    "end": "1877190"
  },
  {
    "text": "same processor as well so I can have two different batch ones what you basically do is with this architecture you build",
    "start": "1877190",
    "end": "1884630"
  },
  {
    "text": "what we call pipelines a pipeline says hey I want this set of receivers to talk",
    "start": "1884630",
    "end": "1890030"
  },
  {
    "text": "to this set of processors to this set of exporters and I want it to do it in this order so for example you can think of",
    "start": "1890030",
    "end": "1896630"
  },
  {
    "text": "maybe I have a pipeline where the open cementery receiver is configured to go to the batch processor the queued retry",
    "start": "1896630",
    "end": "1903560"
  },
  {
    "text": "processor and then I want it to export in yaeger that would be a pipeline as I",
    "start": "1903560",
    "end": "1909050"
  },
  {
    "text": "mentioned the collector is capable of doing transformations so receiving an open symmetry and exporting and Jager is",
    "start": "1909050",
    "end": "1914660"
  },
  {
    "text": "fully supported and maybe I want to have a second pipeline also defined where again I'm receiving an open symmetry it",
    "start": "1914660",
    "end": "1921890"
  },
  {
    "text": "goes through a different set of processors so a separate batch so that the batches between each pipeline is different the queued retry is different",
    "start": "1921890",
    "end": "1928790"
  },
  {
    "text": "between each and maybe in this case I wanted to export in both Prometheus and opens limit tree protocol that's totally",
    "start": "1928790",
    "end": "1935570"
  },
  {
    "text": "possible so there's a lot of flexibility and configuration here depending on your use cases and out of the box it provides",
    "start": "1935570",
    "end": "1942560"
  },
  {
    "text": "a pretty consistent experience to get you started and then finally on top of all of this",
    "start": "1942560",
    "end": "1947850"
  },
  {
    "text": "we have the notion of extensions which is like health information P prof Z pages is as a concept of kind of",
    "start": "1947850",
    "end": "1954960"
  },
  {
    "text": "sampling the data that's going through the collector and looking for potential problems so again anyone well out of the box there are a",
    "start": "1954960",
    "end": "1961470"
  },
  {
    "text": "fixed number of receivers processors exporters and extensions anyone can also write their own because this",
    "start": "1961470",
    "end": "1967140"
  },
  {
    "text": "architecture is very pluggable there are a notion of core components so these are",
    "start": "1967140",
    "end": "1973020"
  },
  {
    "start": "1969000",
    "end": "1969000"
  },
  {
    "text": "things that the maintainer z' of this project actually maintain that are built in out of the box these are all going to",
    "start": "1973020",
    "end": "1979770"
  },
  {
    "text": "be open source base there's no vendor proprietary stuff in core and the goal",
    "start": "1979770",
    "end": "1984840"
  },
  {
    "text": "is to keep core as minimal as possible I won't cover all of these but it's all covered in the documentation but a cool",
    "start": "1984840",
    "end": "1991230"
  },
  {
    "start": "1991000",
    "end": "1991000"
  },
  {
    "text": "thing that we have is also a notion of contribs so we have a separate repository where",
    "start": "1991230",
    "end": "1996450"
  },
  {
    "text": "there's more community based extensions that are being written processors receivers and this is where say vendor",
    "start": "1996450",
    "end": "2003200"
  },
  {
    "text": "information could go so if you have like a vendor specific exporter it would live in this contribu",
    "start": "2003200",
    "end": "2009049"
  },
  {
    "text": "and we have a way of building core and contributing kind of combine things as you see fit so you get the components",
    "start": "2009049",
    "end": "2015590"
  },
  {
    "text": "that you really care about that again I won't drill into the specifics but go check the documentation on that next up",
    "start": "2015590",
    "end": "2022820"
  },
  {
    "text": "let's talk about client libraries I'm going to focus on Java but this is going to be applicable to all the client libraries basically what you need to do",
    "start": "2022820",
    "end": "2030020"
  },
  {
    "text": "whether you're doing traces or metrics is a SAN she ate a tracer or a meter basically a way of collecting context",
    "start": "2030020",
    "end": "2036799"
  },
  {
    "text": "and submitting your telemetry data you need to generate the data that you care about so spans in the case of traces or",
    "start": "2036799",
    "end": "2042830"
  },
  {
    "text": "metrics and the cases metrics enhance them and then send them back out I'll",
    "start": "2042830",
    "end": "2047900"
  },
  {
    "text": "walk you through kind of a QuickStart example I'll highlight this just you don't have to read all the code",
    "start": "2047900",
    "end": "2053839"
  },
  {
    "start": "2048000",
    "end": "2048000"
  },
  {
    "text": "basically you instantiate a tracer so you can say hey this is my service it's called in this case it says",
    "start": "2053839",
    "end": "2060108"
  },
  {
    "text": "instrumentation library name and it's run necessarily running a certain version I can go ahead and generate my",
    "start": "2060109",
    "end": "2066320"
  },
  {
    "text": "span one thing worth noting make sure you close your spans because at least in the case of Java they do not close",
    "start": "2066320",
    "end": "2071780"
  },
  {
    "text": "automatically so you need to tell it when you're done and then perhaps add additional metadata that you care about",
    "start": "2071780",
    "end": "2078440"
  },
  {
    "text": "so I added another version here even though the version in the end the tracer itself this could be data center information it",
    "start": "2078440",
    "end": "2086158"
  },
  {
    "text": "could be garbage collection time it could be whatever you want right something that you want to enhance and provide additional information so this",
    "start": "2086159",
    "end": "2094079"
  },
  {
    "text": "will basically generate a spam and you can do this in each of your functions you can do this for just service to",
    "start": "2094079",
    "end": "2100680"
  },
  {
    "text": "service calls so say different our pcs between your micro services this generates the span information that you",
    "start": "2100680",
    "end": "2107369"
  },
  {
    "text": "that you care about and then on the flip side you need to configure the SDK so you can actually export this data out so",
    "start": "2107369",
    "end": "2114720"
  },
  {
    "text": "again kind of getting your tracer information telling it how you want to sample so for example you can say I want",
    "start": "2114720",
    "end": "2121950"
  },
  {
    "text": "to sample all of the spins I only want to get maybe 50% of them so I mean with",
    "start": "2121950",
    "end": "2127020"
  },
  {
    "text": "a probabilistic sampler again flexibility depending on your use cases and then how do you want to export it in",
    "start": "2127020",
    "end": "2133859"
  },
  {
    "text": "this case I'm leveraging the Yeager exporter but it could be the open symmetry it could be Zipkin whatever one",
    "start": "2133859",
    "end": "2140640"
  },
  {
    "text": "that you that you care about and you build basically a processor to export that data out I understand that there's",
    "start": "2140640",
    "end": "2147660"
  },
  {
    "text": "a lot of information on these slides and given our time here I don't have a lot of time to go through it",
    "start": "2147660",
    "end": "2152940"
  },
  {
    "text": "so you may not still be with me which is which is okay because manual",
    "start": "2152940",
    "end": "2158490"
  },
  {
    "text": "instrumentation may be complex if you're not familiar with it this is really for people that have familiarity with kind",
    "start": "2158490",
    "end": "2165450"
  },
  {
    "text": "of instrumenting they're out manually and are comfortable doing so so open symmetry is also looking to ease this",
    "start": "2165450",
    "end": "2171869"
  },
  {
    "text": "and to provide a quicker time to value and that's going to be done through more of an easy button type of approach so",
    "start": "2171869",
    "end": "2179700"
  },
  {
    "text": "what if I told you instead of doing all that code that I just showed you to manually instrument a single span I",
    "start": "2179700",
    "end": "2185250"
  },
  {
    "text": "could do it with zero code changes whatsoever I'm sure a lot of people",
    "start": "2185250",
    "end": "2190319"
  },
  {
    "text": "would be interested in this approach especially if they don't have traces instrumented in their environment today",
    "start": "2190319",
    "end": "2195950"
  },
  {
    "text": "so in addition to manual instrumentation for traces there's also auto or",
    "start": "2195950",
    "end": "2201809"
  },
  {
    "start": "2196000",
    "end": "2196000"
  },
  {
    "text": "automatic instrumentation as well this is done with no code changes only runtime changes so basically in the case",
    "start": "2201809",
    "end": "2208920"
  },
  {
    "text": "of Java here I specify a couple other parameter during runtime Java has this notion of a",
    "start": "2208920",
    "end": "2214900"
  },
  {
    "text": "Java agent and basically we provide a jar for you that does bytecode manipulation and then you can kind of",
    "start": "2214900",
    "end": "2220750"
  },
  {
    "text": "configure your exporter or other configuration parameters that you care about what's cool about this is it will",
    "start": "2220750",
    "end": "2227260"
  },
  {
    "text": "instrument all libraries that it's aware of it will ensure that it adheres to semantic conventions it doesn't require",
    "start": "2227260",
    "end": "2233680"
  },
  {
    "text": "you modifying your code or doing it in multiple different languages and it's pretty flexible",
    "start": "2233680",
    "end": "2238840"
  },
  {
    "text": "not only can I pass in parameters here I'm not showing an example but you can do this through environments variables",
    "start": "2238840",
    "end": "2244120"
  },
  {
    "text": "as well instead of passing parameters directly into the command that you're running one caveat I will call out is",
    "start": "2244120",
    "end": "2250900"
  },
  {
    "text": "that many people offer auto instrumentation don't run two on the same service you will most likely have a",
    "start": "2250900",
    "end": "2256690"
  },
  {
    "text": "bad time so if you're using an auto instrumentation thing only use one at a time for service as it turns out auto",
    "start": "2256690",
    "end": "2264520"
  },
  {
    "text": "instrumentation is library specific so not only do you have to have auto instrumentation you have to make sure",
    "start": "2264520",
    "end": "2269830"
  },
  {
    "text": "that auto instrumentation supports the libraries and versions that you care about in the case of Java 4 opens limit",
    "start": "2269830",
    "end": "2275980"
  },
  {
    "text": "tree there is broad support all today already here's a list of many of them and again extensible system pretty easy",
    "start": "2275980",
    "end": "2283000"
  },
  {
    "text": "to add additional integrations or additional library support if need be",
    "start": "2283000",
    "end": "2288810"
  },
  {
    "text": "one other thing worth noting is that Java is the only thing that has auto instrumentation today an open symmetry Python and Ruby are just getting started",
    "start": "2289360",
    "end": "2297010"
  },
  {
    "text": "I think net is also in the process of just getting started so they will be coming and then other other client",
    "start": "2297010",
    "end": "2302770"
  },
  {
    "text": "libraries need to be modified as well but the goal will be to offer both manual and automatic from a tracing",
    "start": "2302770",
    "end": "2308080"
  },
  {
    "text": "perspective on the metric side I'm going to keep this one pretty high-level it's similar to tracing it's just you're",
    "start": "2308080",
    "end": "2314740"
  },
  {
    "start": "2309000",
    "end": "2309000"
  },
  {
    "text": "using metric so you have to have like a meter you have to give it a name you can give it like version information you",
    "start": "2314740",
    "end": "2321160"
  },
  {
    "text": "need to create your metrics you need to observe those metrics maybe on some sort of cadence and then admit that data out",
    "start": "2321160",
    "end": "2327240"
  },
  {
    "text": "so just the syntax is is different here but the concepts are generally the same",
    "start": "2327240",
    "end": "2333490"
  },
  {
    "text": "and basically the specification ensures that everything is pretty consistent between both given time Steve yes oh hey",
    "start": "2333490",
    "end": "2341980"
  },
  {
    "text": "sorry we have a quick question so Oh Anonymous attendee is asking will",
    "start": "2341980",
    "end": "2347569"
  },
  {
    "text": "there be any exporters provided for payment I okay mo and IO to Oakland",
    "start": "2347569",
    "end": "2354739"
  },
  {
    "text": "telemetry or do we have to completely migrate away from came into Oakland telemetry yeah so regarding exporting in",
    "start": "2354739",
    "end": "2363380"
  },
  {
    "text": "a format the the architecture is extremely flexible so there is not a",
    "start": "2363380",
    "end": "2369140"
  },
  {
    "text": "came an exporter today but there's no reason why one could not be written so that could be like submitting an issue",
    "start": "2369140",
    "end": "2375920"
  },
  {
    "text": "and someone from the community picking it up we of course accept that pull request so if you're interested in doing that work we would love that as well but",
    "start": "2375920",
    "end": "2382849"
  },
  {
    "text": "there's no there's no reason why you'd have to migrate off whether it is an open source destination or a proprietary",
    "start": "2382849",
    "end": "2389390"
  },
  {
    "text": "one it doesn't really matter as long as you can write an exporter and let's say",
    "start": "2389390",
    "end": "2394489"
  },
  {
    "text": "the collector or the client libraries today provide flexibility of writing any exporter that you want so on the surface",
    "start": "2394489",
    "end": "2400759"
  },
  {
    "text": "without actually drilling into the specifics of camon it should work but",
    "start": "2400759",
    "end": "2407390"
  },
  {
    "text": "there's nothing there natively you'd have to get an export it written okay I",
    "start": "2407390",
    "end": "2415309"
  },
  {
    "text": "want to jump into a demo real quick after kind of showing off the different",
    "start": "2415309",
    "end": "2420469"
  },
  {
    "text": "components you can kind of see this working and to end so what I have here",
    "start": "2420469",
    "end": "2426259"
  },
  {
    "text": "is I just found the pet clinic it's a spring application that's microservices",
    "start": "2426259",
    "end": "2432289"
  },
  {
    "text": "based it's open source on on github they provide kind of some docker compose type stuff so I basically picked this",
    "start": "2432289",
    "end": "2440210"
  },
  {
    "text": "one up after doing a quick Google search and I was like hey I would be interested in getting open symmetry to work with",
    "start": "2440210",
    "end": "2446239"
  },
  {
    "text": "this project this project today does not have open symmetry from what I can tell it doesn't have any distributed tracing",
    "start": "2446239",
    "end": "2451910"
  },
  {
    "text": "information it does have a Zipkin server for for log information but it's not actually instrumented at least that I",
    "start": "2451910",
    "end": "2458390"
  },
  {
    "text": "that I can tell so I took this application and I actually have it running here on my system and I actually",
    "start": "2458390",
    "end": "2465829"
  },
  {
    "text": "modified it by adding open symmetry to it given that it's spring it's it's Java",
    "start": "2465829",
    "end": "2471079"
  },
  {
    "text": "based I can leverage the Java auto instrumentation I also threw in the open telemetry collector and if people are",
    "start": "2471079",
    "end": "2478160"
  },
  {
    "text": "curious I actually pulled up put up pull requests into the repo saying hey let me",
    "start": "2478160",
    "end": "2483259"
  },
  {
    "text": "know what you folks think of how to do this while it's a docker can post file so many files have been touched to kind",
    "start": "2483259",
    "end": "2490069"
  },
  {
    "text": "of update the docker compose on the surface the change was actually pretty minimal what I need to do is pull in the",
    "start": "2490069",
    "end": "2497449"
  },
  {
    "text": "jars that are applicable to the open its limit tree Java auto instrumentation so",
    "start": "2497449",
    "end": "2502849"
  },
  {
    "text": "this would be the auto jar as well as the exporter I chose to use a Jager exporter for this example and then I",
    "start": "2502849",
    "end": "2509329"
  },
  {
    "text": "have to explicitly tell it that I want it to run the Java agent and which",
    "start": "2509329",
    "end": "2516439"
  },
  {
    "text": "additional parameters I want set so those are really the only changes I made",
    "start": "2516439",
    "end": "2521719"
  },
  {
    "text": "to this app as you can see I didn't actually change its code these are runtime type things or in the in case of",
    "start": "2521719",
    "end": "2527660"
  },
  {
    "text": "docker like pulling down the docker dependencies but I didn't modify the the spring application at all and I have",
    "start": "2527660",
    "end": "2534619"
  },
  {
    "text": "that running here the other thing that I did is add the open telemetry collector in so just to kind of show that off I",
    "start": "2534619",
    "end": "2542089"
  },
  {
    "text": "built a quick collector gamal file so the configuration is yamo based and i",
    "start": "2542089",
    "end": "2548419"
  },
  {
    "text": "basically said hey i want to have a Yaeger receiver so I want to receive Jager in because that's what I told this",
    "start": "2548419",
    "end": "2555079"
  },
  {
    "text": "pet clinic service to export in and I want to export to Zipkin because the pet",
    "start": "2555079",
    "end": "2562669"
  },
  {
    "text": "clinic example actually has a Zipkin server that is running and I basically built a pipeline around that so I have",
    "start": "2562669",
    "end": "2569269"
  },
  {
    "text": "this trace pipeline that says take in Jager I do have some processors so I",
    "start": "2569269",
    "end": "2574429"
  },
  {
    "text": "have a batch process or attributes retry this isn't required but it is kind of a best practice and then I said go ahead",
    "start": "2574429",
    "end": "2581209"
  },
  {
    "text": "and send that data to Zipkin so I'm actually going to translate from the Jager format into the Zipkin format and",
    "start": "2581209",
    "end": "2587929"
  },
  {
    "text": "have Zipkin accept that and so that collector is actually running in this",
    "start": "2587929",
    "end": "2593059"
  },
  {
    "text": "docker composed so there's a docker compose file I went ahead and modified",
    "start": "2593059",
    "end": "2598069"
  },
  {
    "text": "it to have an open symmetry collector here so basically I pulled them to collector it's using the collector",
    "start": "2598069",
    "end": "2605689"
  },
  {
    "text": "config file and then I exposed the Jager G or PC port so that I can send data to",
    "start": "2605689",
    "end": "2611599"
  },
  {
    "text": "it that's really being only changes that I made to this thing and then I started running it and this is what the pet",
    "start": "2611599",
    "end": "2619809"
  },
  {
    "text": "clinic app looks like when you actually fire it up you can actually go ahead and see for example the different owners",
    "start": "2619809",
    "end": "2626259"
  },
  {
    "text": "these are built into the system there's a list of veterinarians this should populate as well I can actually register",
    "start": "2626259",
    "end": "2632890"
  },
  {
    "text": "another owner so I can register myself",
    "start": "2632890",
    "end": "2638248"
  },
  {
    "text": "goes and I don't think it actually does validation there we go so it adds me in",
    "start": "2638970",
    "end": "2646089"
  },
  {
    "text": "you can add pet information pretty cool and as that's happening you'll actually",
    "start": "2646089",
    "end": "2651549"
  },
  {
    "text": "see that there are traces being or spans being generated so this app is Auto",
    "start": "2651549",
    "end": "2659650"
  },
  {
    "text": "instrumented and now generating spam data that wouldn't be there otherwise because the odo collector and the auto",
    "start": "2659650",
    "end": "2664960"
  },
  {
    "text": "instrumentation was not there and if I fire up the Zipkin server that's built into this docker compose you'll actually",
    "start": "2664960",
    "end": "2671079"
  },
  {
    "text": "see all the different micro services and you'll see spans that are being generated from those calls that I just",
    "start": "2671079",
    "end": "2676299"
  },
  {
    "text": "made and I can pull up any one of those traces and I can actually see the",
    "start": "2676299",
    "end": "2682210"
  },
  {
    "text": "information about the calls are being made the operations the duration and any associated metadata I actually added a",
    "start": "2682210",
    "end": "2688989"
  },
  {
    "text": "tag for environments I called the test so it's pretty easy to get started especially with the auto instrumentation",
    "start": "2688989",
    "end": "2695920"
  },
  {
    "text": "aspects and it doesn't really matter if you're using Zipkin your Jaeger or a commercial vendor or not like you can",
    "start": "2695920",
    "end": "2702039"
  },
  {
    "text": "modify the collector config pretty easily to get an end-to-end going where",
    "start": "2702039",
    "end": "2707349"
  },
  {
    "text": "you see data flowing throughout your system so definitely try to take a look at this we'll be providing more examples",
    "start": "2707349",
    "end": "2714269"
  },
  {
    "text": "documentation has some of these the QuickStart guides have some this PR is up and I'll share the links in the slide",
    "start": "2714269",
    "end": "2721140"
  },
  {
    "text": "but this this shows that you can take an existing app you can add the necessary hooks to get instrumentation out you can",
    "start": "2721140",
    "end": "2728230"
  },
  {
    "text": "deploy the the collector very easily and even have it receive in one format send out another and tag in additional",
    "start": "2728230",
    "end": "2735130"
  },
  {
    "text": "information and this is set up in I don't know five ten minutes pretty quickly here it probably takes longer to",
    "start": "2735130",
    "end": "2741849"
  },
  {
    "text": "start the the spring application and have it be fully running I think that takes about four or five right now than it does to actually",
    "start": "2741849",
    "end": "2748869"
  },
  {
    "text": "instrument it in a way that you're getting open symmetry data to be exported which is pretty cool so",
    "start": "2748869",
    "end": "2755789"
  },
  {
    "text": "definiteiy Cal look at that what you will notice is that the they give an architecture diagram these will be",
    "start": "2755789",
    "end": "2762369"
  },
  {
    "text": "represented inside of the Zipkin cerberus you'll see all the different calls the different micro-services that",
    "start": "2762369",
    "end": "2767680"
  },
  {
    "text": "exist and any errors and things that are that are generated so pretty cool",
    "start": "2767680",
    "end": "2773380"
  },
  {
    "text": "overall I think all right so what with the remaining time I did want to cover a",
    "start": "2773380",
    "end": "2778630"
  },
  {
    "start": "2776000",
    "end": "2776000"
  },
  {
    "text": "few other aspects and then I'll definitely open it up broadly to two questions as well a few other things",
    "start": "2778630",
    "end": "2783670"
  },
  {
    "text": "that the project already has in place today even though we're only in sandbox there is a government in spord there is",
    "start": "2783670",
    "end": "2789609"
  },
  {
    "text": "a code of conduct there is a technical steering committee so there's a lot of oversight here there's actually pretty",
    "start": "2789609",
    "end": "2795519"
  },
  {
    "text": "good representation from from many companies just kind of ensure that we're",
    "start": "2795519",
    "end": "2800559"
  },
  {
    "text": "not building something in a specific direction and we're actually taking broad community insights here one cool",
    "start": "2800559",
    "end": "2806619"
  },
  {
    "text": "thing that we have that I think is more unique I don't I haven't really seen it another ciencia project maybe exists we",
    "start": "2806619",
    "end": "2812380"
  },
  {
    "text": "have what we call open slim 'try enhancement proposals we call them Oh tips you can think of them sort of like",
    "start": "2812380",
    "end": "2817450"
  },
  {
    "text": "design Docs in a way it's a way of kind of vetting an idea and ensuring that there's alignment and generally even",
    "start": "2817450",
    "end": "2824829"
  },
  {
    "text": "doing proof of concepts before actually submitting that PR isn't actually getting this built in this can be",
    "start": "2824829",
    "end": "2830859"
  },
  {
    "text": "valuable for an individual project so like you'll see some of them that are specific to say the collector that wouldn't be applicable to the client",
    "start": "2830859",
    "end": "2837099"
  },
  {
    "text": "libraries or they can be more generic or alike there's a proposal that would impact every single client library and",
    "start": "2837099",
    "end": "2843759"
  },
  {
    "text": "so we want to have a note tab to ensure there's agreements before we ask the maintainer to kind of take on the work",
    "start": "2843759",
    "end": "2848769"
  },
  {
    "text": "of making those changes the logs sig is also following this otep so kind of since it's getting started and it's",
    "start": "2848769",
    "end": "2854650"
  },
  {
    "text": "unclear exactly what the work streams are going to be or what decisions are going to be made we leverage o temps for",
    "start": "2854650",
    "end": "2860469"
  },
  {
    "text": "that I did kind of highlight this earlier but not only the collector also",
    "start": "2860469",
    "end": "2865630"
  },
  {
    "text": "the the client libraries themselves have this notion of core versus contributor",
    "start": "2865630",
    "end": "2873329"
  },
  {
    "text": "the idea is to be as lightweight and efficient as possible and to make really make it be as minimal as possible",
    "start": "2873329",
    "end": "2879720"
  },
  {
    "text": "there's also contributing and community based doesn't mean necessarily like",
    "start": "2879720",
    "end": "2886110"
  },
  {
    "text": "third-party vendor closed source there could be open source aspects here to where it doesn't make sense for it to",
    "start": "2886110",
    "end": "2892080"
  },
  {
    "text": "exist in core because maybe a lot of people don't use it or it's more legacy",
    "start": "2892080",
    "end": "2897240"
  },
  {
    "text": "or the overhead of maintaining it is not it's not possible today so this is",
    "start": "2897240",
    "end": "2902580"
  },
  {
    "text": "really cool because it allows us to move quickly if everything was in core it would really slow down our progress core",
    "start": "2902580",
    "end": "2909390"
  },
  {
    "text": "would become very large build times would go out there'd be a lot of problems and as you're trying to solve",
    "start": "2909390",
    "end": "2914580"
  },
  {
    "text": "the we want the ability of providing vendor agnostic see having like other",
    "start": "2914580",
    "end": "2920660"
  },
  {
    "text": "third-party company is being core with this as well it's not the best outcome so really having that distinction is",
    "start": "2920660",
    "end": "2927780"
  },
  {
    "text": "providing a lot of flexibility for us and then finally there is a there is a website that provides more information",
    "start": "2927780",
    "end": "2932940"
  },
  {
    "text": "and actually links to the read Me's much of the documentation is either in the github readme today or on other",
    "start": "2932940",
    "end": "2939480"
  },
  {
    "text": "sites like Java Docs or go Doc's have their own destination but the open",
    "start": "2939480",
    "end": "2946020"
  },
  {
    "text": "cemetry site is actually maintained it lists all the different types of components that are that are possible",
    "start": "2946020",
    "end": "2952020"
  },
  {
    "text": "and supported it links out to to kind of blogs and and video recordings and other media aspects so I definitely take a",
    "start": "2952020",
    "end": "2958830"
  },
  {
    "text": "look at that from a roadmap perspective we're looking to get all the client",
    "start": "2958830",
    "end": "2964080"
  },
  {
    "start": "2959000",
    "end": "2959000"
  },
  {
    "text": "libraries to beta as soon as possible I mentioned ed and Ruby are getting pretty close there are several other client",
    "start": "2964080",
    "end": "2969360"
  },
  {
    "text": "libraries that aren't there yet that need to get there our intention is to get this project to GA later this year",
    "start": "2969360",
    "end": "2975240"
  },
  {
    "text": "specifically for traces and metrics that wouldn't include the logging aspect given that logging has just kicked off",
    "start": "2975240",
    "end": "2980510"
  },
  {
    "text": "there also is an intention to get auto instrumentation for all languages but",
    "start": "2980510",
    "end": "2986190"
  },
  {
    "text": "that will take some amount of time as you can see Java is the only one in that state now that's pretty far along it",
    "start": "2986190",
    "end": "2991740"
  },
  {
    "text": "actually made the beta for it and then we want to get the initial log support or what the decisions are for a lot of",
    "start": "2991740",
    "end": "2997350"
  },
  {
    "text": "support later this year as well probably in a in a beta state with the idea being that that would GA probably really next",
    "start": "2997350",
    "end": "3003680"
  },
  {
    "text": "year and then as always like most projects right improve the documentation PR is definitely welcome like if you're",
    "start": "3003680",
    "end": "3009860"
  },
  {
    "text": "confused you're having a time getting started that is a bug let's go fix it increasing adoption of the",
    "start": "3009860",
    "end": "3015440"
  },
  {
    "text": "project overall including getting case studies I mentioned some some big big",
    "start": "3015440",
    "end": "3020989"
  },
  {
    "text": "companies are using this today post mates Shopify MailChimp just kind of",
    "start": "3020989",
    "end": "3026299"
  },
  {
    "text": "understanding their use cases of how they see value why they're contributing things like that will be very important",
    "start": "3026299",
    "end": "3033079"
  },
  {
    "text": "and then of course making the getting started as easy as possible as you saw like manual to automatic is kind of",
    "start": "3033079",
    "end": "3039589"
  },
  {
    "text": "night and day in terms of the amount of effort necessary to get started so we really want to provide a friction-free",
    "start": "3039589",
    "end": "3045619"
  },
  {
    "text": "way to kind of get up and going but flexibility of enhancing that with additional information should you need",
    "start": "3045619",
    "end": "3051349"
  },
  {
    "text": "it as well so next steps please join the conversation we have a git er there are",
    "start": "3051349",
    "end": "3056599"
  },
  {
    "start": "3053000",
    "end": "3053000"
  },
  {
    "text": "multiple rooms but you should probably start in the community one it's a great place to start we have many special interest groups",
    "start": "3056599",
    "end": "3062180"
  },
  {
    "text": "again come join us the meeting schedule calendar invites are all up on the",
    "start": "3062180",
    "end": "3067210"
  },
  {
    "text": "community page and then definitely please submit PRS we leverage the labels",
    "start": "3067210",
    "end": "3073219"
  },
  {
    "text": "of good first issue and Help Wanted so if you see those those are good places to start if you have your own issues or",
    "start": "3073219",
    "end": "3079190"
  },
  {
    "text": "only things you want to work on that's always welcome as well I did want to note that I kind of put together this",
    "start": "3079190",
    "end": "3084259"
  },
  {
    "text": "Google slides templates I'll submit a PR for it so that people can leverage it if",
    "start": "3084259",
    "end": "3089450"
  },
  {
    "text": "they're interested or enhance it and make it better but I thought it was kind of cool to show off similar like color",
    "start": "3089450",
    "end": "3095299"
  },
  {
    "text": "palette and information for open symmetry as well tons of links I won't",
    "start": "3095299",
    "end": "3100309"
  },
  {
    "text": "cover them these slide decks will be shared out with folks but much of what I covered here there's the link to it so",
    "start": "3100309",
    "end": "3106789"
  },
  {
    "text": "definitely check it out if you think other resources would be useful please ping me message me find me I'm on getter",
    "start": "3106789",
    "end": "3112489"
  },
  {
    "text": "I'm on Twitter like I'm around I would love to get feedback as you as to what",
    "start": "3112489",
    "end": "3117589"
  },
  {
    "text": "you like and kind of going forward what you think would be good to drill into further about the project and with that",
    "start": "3117589",
    "end": "3123650"
  },
  {
    "text": "I would just like to say thank you for having me and I would love to open it up for questions in the last like five",
    "start": "3123650",
    "end": "3128989"
  },
  {
    "text": "minutes it looks like we have time awesome thanks for the presentations to",
    "start": "3128989",
    "end": "3134660"
  },
  {
    "text": "you it was super informative um so yeah we're gonna move into the question and answer piece we only have a few minutes",
    "start": "3134660",
    "end": "3140029"
  },
  {
    "text": "so if you have a question that you'd like to ask Steve please do submit it in the a box at the bottom of your screen and",
    "start": "3140029",
    "end": "3146520"
  },
  {
    "text": "we'll get to as many as we can we do have one in here right now pardon me uh",
    "start": "3146520",
    "end": "3153120"
  },
  {
    "text": "Mike is asking how much additional overhead do traces add to cluster",
    "start": "3153120",
    "end": "3158520"
  },
  {
    "text": "resources example Hotel API calls using Network storing traces etc yeah so this",
    "start": "3158520",
    "end": "3166710"
  },
  {
    "text": "is going to be client library specific or language specific so each of the languages should be doing performance",
    "start": "3166710",
    "end": "3172950"
  },
  {
    "text": "testing of this of this for that particular language to ensure the overhead is minimal there is going to be",
    "start": "3172950",
    "end": "3180180"
  },
  {
    "text": "overhead like it's not free but the goal is to make it as lightweight as possible because the goal is not to impact the",
    "start": "3180180",
    "end": "3186750"
  },
  {
    "text": "application as I kind of mentioned earlier that's why it's pretty important that you deploy like the open telemetry",
    "start": "3186750",
    "end": "3192300"
  },
  {
    "text": "collector as an agent or another agent if you have another one that you're leveraging today because then you can",
    "start": "3192300",
    "end": "3197580"
  },
  {
    "text": "offload more responsibilities which means less resource consumption in the client library which means less resource",
    "start": "3197580",
    "end": "3203760"
  },
  {
    "text": "consumption in the application so in general they're actually extremely lightweight inefficient they're built",
    "start": "3203760",
    "end": "3209220"
  },
  {
    "text": "that way by design so we're not consuming a lot of memory or processing thing multiple times we use a lot of",
    "start": "3209220",
    "end": "3216330"
  },
  {
    "text": "like streaming string processing of this data through your application so you shouldn't run into performance problems",
    "start": "3216330",
    "end": "3222930"
  },
  {
    "text": "I don't have performance numbers readily available I'm assuming that the maintainer will probably post this on",
    "start": "3222930",
    "end": "3229230"
  },
  {
    "text": "that github repos themselves the collector for example has a performance section that I know for sure and",
    "start": "3229230",
    "end": "3234810"
  },
  {
    "text": "actually the build process for the collector actually test performance and will fail builds if performance has",
    "start": "3234810",
    "end": "3240720"
  },
  {
    "text": "deteriorated so you should be seeing something similar if you don't I would definitely encourage you to open a",
    "start": "3240720",
    "end": "3246120"
  },
  {
    "text": "github issue because we should be tracking that if there are going to be performance problems or if there are known performance problems that",
    "start": "3246120",
    "end": "3252270"
  },
  {
    "text": "definitely needs to be fixed because the goal is not to not to impact the app",
    "start": "3252270",
    "end": "3257480"
  },
  {
    "text": "great okay so we have another question from fellow Steve and he's asking is",
    "start": "3257920",
    "end": "3264160"
  },
  {
    "text": "offloading work from application instrumentation to collector automation or configurable yes",
    "start": "3264160",
    "end": "3272390"
  },
  {
    "text": "so offloading is is basically you have flexibility here it's your choice",
    "start": "3272390",
    "end": "3278060"
  },
  {
    "text": "so from an instrumentation perspective probably the only work that you need to do is batching and so you'll actually",
    "start": "3278060",
    "end": "3284120"
  },
  {
    "text": "see that there's a span processor by default it does simple which kind of sends everything versus batch that's",
    "start": "3284120",
    "end": "3289850"
  },
  {
    "text": "probably the only thing that you want your client library to do everything else should happen within the the agent",
    "start": "3289850",
    "end": "3296180"
  },
  {
    "text": "itself the agent can do its own batching across multiple applications which is powerful queued retry compression",
    "start": "3296180",
    "end": "3302090"
  },
  {
    "text": "encryption but the configuration aspect would be if you haven't configured it in your client library you would then can",
    "start": "3302090",
    "end": "3308180"
  },
  {
    "text": "configure it in the collector itself so like that collector Dom will file that I showed you can add processing",
    "start": "3308180",
    "end": "3314480"
  },
  {
    "text": "information there so maybe you want a larger queue or most maybe you want to have separate batches for separate",
    "start": "3314480",
    "end": "3319550"
  },
  {
    "text": "pipelines there's a lot of lot of flexibility and you can double up like I can enable batching in the client",
    "start": "3319550",
    "end": "3325370"
  },
  {
    "text": "library and batching in the in the collector nothing prevents you from doing that and there actually could be good reasons to do it as well so",
    "start": "3325370",
    "end": "3332480"
  },
  {
    "text": "everything is configurable but out-of-the-box so if you take like the default getting started for let's say",
    "start": "3332480",
    "end": "3338180"
  },
  {
    "text": "Java you will get the batch processor enabled and nothing else which is great because if you take the default",
    "start": "3338180",
    "end": "3343430"
  },
  {
    "text": "configure the collector you'll get the queued retry for for free as well some things cannot be automatically",
    "start": "3343430",
    "end": "3349700"
  },
  {
    "text": "configured so I don't want to give the idea that hey if you just deploy this you'll get everything that you need",
    "start": "3349700",
    "end": "3355000"
  },
  {
    "text": "automatic that's not necessarily the case some things our environment specific and you will need to make",
    "start": "3355000",
    "end": "3361070"
  },
  {
    "text": "modifications but the default behavior should be sane and should do the right thing for you all right looks like",
    "start": "3361070",
    "end": "3370940"
  },
  {
    "text": "that's all the questions and that's all the time that we have today and thanks again Steve for a great presentation and",
    "start": "3370940",
    "end": "3377650"
  },
  {
    "text": "unmaking to all of our attendees for joining us today a reminder that the webinar recording and slides will be online later today we",
    "start": "3377650",
    "end": "3385040"
  },
  {
    "text": "look forward to seeing you out of future CN CF webinar and have a great day thanks",
    "start": "3385040",
    "end": "3390700"
  },
  {
    "text": "Thanks",
    "start": "3390700",
    "end": "3393700"
  }
]