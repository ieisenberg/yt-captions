[
  {
    "start": "0",
    "end": "99000"
  },
  {
    "text": "hello everyone um thanks for coming today my name is Hayden blousvern I'm a software engineer",
    "start": "780",
    "end": "6480"
  },
  {
    "text": "on Google's open source security team and one of the maintainers on the six door project and today we'll be talking about how to",
    "start": "6480",
    "end": "12840"
  },
  {
    "text": "run your own Sig store securely if you're at this talk",
    "start": "12840",
    "end": "18060"
  },
  {
    "text": "um you might have heard of sigstore before but if not I'll give a really quick overview of Sig store before we",
    "start": "18060",
    "end": "23100"
  },
  {
    "text": "dive into how to set up one privately and securely",
    "start": "23100",
    "end": "28160"
  },
  {
    "text": "six store is a project under the open source security Foundation the openssf which is under the Linux Foundation",
    "start": "28680",
    "end": "35219"
  },
  {
    "text": "and its goal is to simplify code signing for artifacts if you're familiar with the project",
    "start": "35219",
    "end": "41879"
  },
  {
    "text": "let's encrypt it had a similar Mission but focused on increasing https adoption",
    "start": "41879",
    "end": "47280"
  },
  {
    "text": "to secure traffic for websites and it was very successful in doing so by",
    "start": "47280",
    "end": "53399"
  },
  {
    "text": "providing easy to use tooling and free services in particular a free certificate Authority in order to issue",
    "start": "53399",
    "end": "60120"
  },
  {
    "text": "SSL certificates and Sig store aims to do the same but focused on code signing",
    "start": "60120",
    "end": "66360"
  },
  {
    "text": "we enable this by providing free and publicly available transparency login certificate Authority Services which you",
    "start": "66360",
    "end": "73080"
  },
  {
    "text": "can also run within your organization too which we'll talk about in a moment and one of its other goals is to remove",
    "start": "73080",
    "end": "79560"
  },
  {
    "text": "the need to manage artifact signing Keys we found that this is one of the pain points for adoption when it comes to",
    "start": "79560",
    "end": "87000"
  },
  {
    "text": "doing code signing users frequently don't have signing keys or they don't really know how to manage",
    "start": "87000",
    "end": "92400"
  },
  {
    "text": "them so let's take a look at how sigstore enables signing without having to manage",
    "start": "92400",
    "end": "99060"
  },
  {
    "start": "99000",
    "end": "99000"
  },
  {
    "text": "keys the first service within Sig store is fulsio which is six door certificate",
    "start": "99060",
    "end": "104880"
  },
  {
    "text": "Authority and it issue certificates that bind public Keys which can either be",
    "start": "104880",
    "end": "110280"
  },
  {
    "text": "ephemeral meaning from a single signing event or long-lived if the artifact",
    "start": "110280",
    "end": "116579"
  },
  {
    "text": "owner maintains some signing key and Associates this key with an identity that comes from an ID token obtained",
    "start": "116579",
    "end": "123299"
  },
  {
    "text": "through the openid connector oidc protocol",
    "start": "123299",
    "end": "128940"
  },
  {
    "text": "an artifact owner will fetch one of these ID tokens and then give this to the certificate Authority along with a",
    "start": "128940",
    "end": "134940"
  },
  {
    "text": "public key full seal will verify that identity token since it's signed and extract the",
    "start": "134940",
    "end": "140819"
  },
  {
    "text": "identity from it and include that in the certificate and this identity could be an email address this identity could be",
    "start": "140819",
    "end": "146400"
  },
  {
    "text": "a service account it could also be an identity that's associated with a workflow run on a CI platform such as",
    "start": "146400",
    "end": "153120"
  },
  {
    "text": "GitHub actions the public instance of focio will also",
    "start": "153120",
    "end": "158459"
  },
  {
    "text": "write to a certificate transparency log and we'll talk a bit more about the role of transparency within six store in a",
    "start": "158459",
    "end": "164220"
  },
  {
    "text": "minute but roughly the purpose of this log is so that you can have an immutable issuance log which holds the ca",
    "start": "164220",
    "end": "171239"
  },
  {
    "text": "accountable to everything that it issues you'll also see this within webpki that publicly trusted Cas will issue",
    "start": "171239",
    "end": "178140"
  },
  {
    "text": "certificates for domains and include these in certificate transparency logs so that domain operators or in this case",
    "start": "178140",
    "end": "185340"
  },
  {
    "text": "artifact owners can monitor the logs to see how their identities show up in them",
    "start": "185340",
    "end": "192319"
  },
  {
    "start": "192000",
    "end": "192000"
  },
  {
    "text": "the second component of Sig store is recore which is our transparency log for",
    "start": "193319",
    "end": "200580"
  },
  {
    "text": "storing artifacts and their signatures after an artifact owner signs an artifact they will upload the",
    "start": "200580",
    "end": "207120"
  },
  {
    "text": "certificate that came back from folsio and a signed artifact a signature in the artifact hash to recore",
    "start": "207120",
    "end": "213720"
  },
  {
    "text": "and then recore will return back a proof saying that this entry was included in the log and if you're familiar with",
    "start": "213720",
    "end": "219180"
  },
  {
    "text": "transparency logs note that I am glossing over exactly what this proof entails but roughly it's a cryptographic",
    "start": "219180",
    "end": "224760"
  },
  {
    "text": "proof the artifact owner can then take that signed artifact the certificate and the",
    "start": "224760",
    "end": "229799"
  },
  {
    "text": "proof and upload that somewhere let's say to a package repository so that any verifier that wants to use a package is",
    "start": "229799",
    "end": "236280"
  },
  {
    "text": "able to verify the signed artifact they can verify that using the public key that comes from the certificate",
    "start": "236280",
    "end": "242459"
  },
  {
    "text": "they can verify the certificates matches a identity that they were provided out",
    "start": "242459",
    "end": "247560"
  },
  {
    "text": "of band that maps to that artifact and then they can verify the proof to know that the entry was actually",
    "start": "247560",
    "end": "252840"
  },
  {
    "text": "included in a log and the benefit of this is much like with certificate transparency it allows the verifier to",
    "start": "252840",
    "end": "259799"
  },
  {
    "text": "know that an artifact owner can be monitoring to see how their identity and their artifact shows up in the log maybe",
    "start": "259799",
    "end": "265680"
  },
  {
    "text": "they have some requirement that an artifact will only show up once in a log for example",
    "start": "265680",
    "end": "272180"
  },
  {
    "text": "this is a an overview of all of six store putting all the pieces together and the main thing to take away from",
    "start": "272820",
    "end": "278940"
  },
  {
    "text": "this diagram is that I've also mentioned cosine this is the command line utility that sigstore has created that enables",
    "start": "278940",
    "end": "286320"
  },
  {
    "text": "artifact and container signing and verification and it's not the only tool within the",
    "start": "286320",
    "end": "292380"
  },
  {
    "text": "sixth or ecosystem too we also have some command line utilities such as six star python or six door JS that are actively",
    "start": "292380",
    "end": "300300"
  },
  {
    "text": "being developed that allow you to interact with the services within six store",
    "start": "300300",
    "end": "306080"
  },
  {
    "start": "306000",
    "end": "306000"
  },
  {
    "text": "so one question that comes up a lot is do I actually need to rely on the public instances of six store or can I rely on",
    "start": "307020",
    "end": "312960"
  },
  {
    "text": "the private ones like I mentioned we operate free to use public instances and",
    "start": "312960",
    "end": "318120"
  },
  {
    "text": "these have a SLO of three nines we have an on-call team staff to monitor these",
    "start": "318120",
    "end": "323940"
  },
  {
    "text": "services and we had recently back in October went General availability or GA for these Services declaring that these",
    "start": "323940",
    "end": "330660"
  },
  {
    "text": "can now be used in production workflows with more confidence but organizations may have other",
    "start": "330660",
    "end": "336300"
  },
  {
    "text": "requirements and want to have their own private instances of them this could be for performance reasons",
    "start": "336300",
    "end": "341639"
  },
  {
    "text": "maybe three nines is not sufficient and the organization needs to have higher availability",
    "start": "341639",
    "end": "347340"
  },
  {
    "text": "compliance is also another reason for example maybe the organization has data residency requirements and requires that",
    "start": "347340",
    "end": "354240"
  },
  {
    "text": "the data get that gets generally as part of the system live in a geographic region near theirs whereas the public",
    "start": "354240",
    "end": "361080"
  },
  {
    "text": "instance operates out of the U.S region another compliance reason may be that",
    "start": "361080",
    "end": "366419"
  },
  {
    "text": "there's a requirement that the organization control roots of trust for example the certificate Authority",
    "start": "366419",
    "end": "371820"
  },
  {
    "text": "signing key or the signing key that's associated with the transparency log used for generating proofs",
    "start": "371820",
    "end": "379020"
  },
  {
    "text": "another one is privacy and this is one that comes up uh fairly frequently",
    "start": "379020",
    "end": "384120"
  },
  {
    "text": "the identities that are included in certificates are written to these public",
    "start": "384120",
    "end": "389280"
  },
  {
    "text": "logs and these identities like I said could include emails it could include service accounts associated with private",
    "start": "389280",
    "end": "395280"
  },
  {
    "text": "projects it could include workflow information associated with private repositories and organizations may not",
    "start": "395280",
    "end": "401759"
  },
  {
    "text": "want this information publicly available so these are all reasons that organizations might want to",
    "start": "401759",
    "end": "408780"
  },
  {
    "text": "operate a private six store so for the rest of this talk I'll give some recommendations of how to set up a",
    "start": "408780",
    "end": "416460"
  },
  {
    "text": "secure instance of Sig store within a private organization and this setup should give you the same",
    "start": "416460",
    "end": "423539"
  },
  {
    "text": "guarantees that we have with the public instance note that I'm not going to talk about how to actually deploy Sig store for",
    "start": "423539",
    "end": "430620"
  },
  {
    "text": "example how to harden your kubernetes environment or set up apples appropriately they'll mention at the end",
    "start": "430620",
    "end": "435900"
  },
  {
    "text": "a slack Channel where if you're interested in that there are some folks within the sigster community that are working on how to simplify deployment",
    "start": "435900",
    "end": "443280"
  },
  {
    "text": "for six or two so to start let's talk about",
    "start": "443280",
    "end": "448340"
  },
  {
    "text": "self-managed pki or public key infrastructure and there's two things I'll discuss here one is managing",
    "start": "448340",
    "end": "454740"
  },
  {
    "text": "artifact signing keys in contrast to ephemeral signing keys and another is",
    "start": "454740",
    "end": "461220"
  },
  {
    "text": "managed private Cas in contrast to the full Coca",
    "start": "461220",
    "end": "467419"
  },
  {
    "start": "467000",
    "end": "467000"
  },
  {
    "text": "when we talk about artifacts signing Keys we typically talk about three problems distribution storage and",
    "start": "468900",
    "end": "474479"
  },
  {
    "text": "compromise distribution is the process of",
    "start": "474479",
    "end": "479539"
  },
  {
    "text": "Distributing the map from a signing key or a verification key to an artifact",
    "start": "479539",
    "end": "486900"
  },
  {
    "text": "frequently what happens is we end up relying on Trust on first use or tofu and we see this for example with SSH",
    "start": "486900",
    "end": "493220"
  },
  {
    "text": "when you first log into an SSH server you're prompted to remember a key fingerprints and if the server's key",
    "start": "493220",
    "end": "499259"
  },
  {
    "text": "changes for any reason you're presented with a dialog but frequently users simply click",
    "start": "499259",
    "end": "504900"
  },
  {
    "text": "through that and ignore it and so what we want to do is design a system that removes the need to rely on Trust on",
    "start": "504900",
    "end": "511139"
  },
  {
    "text": "first use another consideration with managed artifact signing Keys is storage where",
    "start": "511139",
    "end": "517440"
  },
  {
    "text": "do you actually store the signing key are you going to put it on a flash drive do you encrypt that flash drive what",
    "start": "517440",
    "end": "522479"
  },
  {
    "text": "happens if you lose that flash drive are you going to put the key in a cloud project what happens if there is shared",
    "start": "522479",
    "end": "528899"
  },
  {
    "text": "access to that project and how do you also audit access to that signing key to make sure there's not any",
    "start": "528899",
    "end": "535320"
  },
  {
    "text": "unexpected access and this comes to the final point which is compromise inevitably compromise does",
    "start": "535320",
    "end": "541980"
  },
  {
    "text": "happen and how do you mark a key as no longer trusted revoke that key",
    "start": "541980",
    "end": "548700"
  },
  {
    "text": "within webpki the way this is done is relying on certificate revocation lists",
    "start": "548700",
    "end": "553920"
  },
  {
    "text": "these are lists that Cas maintain that have a list of certificates that should no longer be trusted",
    "start": "553920",
    "end": "559680"
  },
  {
    "text": "but certificate revocation lists are very difficult to work with they can grow indefinitely they're difficult to",
    "start": "559680",
    "end": "565740"
  },
  {
    "text": "ship to clients clients have to figure out some Cadence to fetch these and they're also hard to search once they",
    "start": "565740",
    "end": "570779"
  },
  {
    "text": "grow really large so this is another thing to consider when managing artifacts signing Keys",
    "start": "570779",
    "end": "576959"
  },
  {
    "text": "which is what does your revocation Story look like and are you able to efficiently work with really large",
    "start": "576959",
    "end": "583680"
  },
  {
    "text": "reputation lists and this is why Sig store defaults to",
    "start": "583680",
    "end": "589500"
  },
  {
    "text": "ephemeral signing Keys the idea is that for assigning events Sig store or the",
    "start": "589500",
    "end": "594839"
  },
  {
    "text": "command line utilities is going to generate a single signing key that will be thrown away after the signing event",
    "start": "594839",
    "end": "601260"
  },
  {
    "text": "and then we associate that verification key with some stable identifier that comes from an identity token",
    "start": "601260",
    "end": "607620"
  },
  {
    "text": "but private organizations may not want this they may already have an existing system in place for managing artifact",
    "start": "607620",
    "end": "613740"
  },
  {
    "text": "signing keys and sixstore works perfectly fine with artifact signing",
    "start": "613740",
    "end": "618779"
  },
  {
    "text": "keys for example when I mentioned the recore I said that we can upload certificates we can also upload artifact",
    "start": "618779",
    "end": "624959"
  },
  {
    "text": "signing Keys too um I wrote a blog post a little while ago called adopting sixth or",
    "start": "624959",
    "end": "630660"
  },
  {
    "text": "incrementally that kind of talked through this problem it assumed that an organization doesn't want to go from a point where they have managed signing",
    "start": "630660",
    "end": "637320"
  },
  {
    "text": "Keys jumping all the way to what we sometimes call keyless signing or this identity based signing and one of the intermediate steps was",
    "start": "637320",
    "end": "644399"
  },
  {
    "text": "that you can issue identity-based certificates for long-lived keys or for managed keys folsio doesn't enforce",
    "start": "644399",
    "end": "651959"
  },
  {
    "text": "ephemerality it doesn't have state and track if it's seen a key before so the question really comes down to what do",
    "start": "651959",
    "end": "658380"
  },
  {
    "text": "you want your verification policy to look like would you prefer having keys mapped to artifacts or certificate sorry",
    "start": "658380",
    "end": "664500"
  },
  {
    "text": "identities mapped to artifacts um we have found that identities are a",
    "start": "664500",
    "end": "669540"
  },
  {
    "text": "little bit easier because we expect that users already have an identity to use",
    "start": "669540",
    "end": "674700"
  },
  {
    "text": "and very frequently that identity is already publicly mapped to the artifacts",
    "start": "674700",
    "end": "680100"
  },
  {
    "text": "Maybe by association maybe by the identity being specified in a repository but if an organization already has the",
    "start": "680100",
    "end": "687240"
  },
  {
    "text": "right policies in place there's nothing preventing them from using artifacts Simon keys",
    "start": "687240",
    "end": "693319"
  },
  {
    "start": "693000",
    "end": "693000"
  },
  {
    "text": "switching topics now let's talk about the ca side of things many organizations",
    "start": "694019",
    "end": "699899"
  },
  {
    "text": "already have managed Cas these could be through things like step CA or through a",
    "start": "699899",
    "end": "705779"
  },
  {
    "text": "cloud providers such as gcp or AWS and six store will work out of the box",
    "start": "705779",
    "end": "710820"
  },
  {
    "text": "with certificates issued from NECA not just full CO as long as they conform to",
    "start": "710820",
    "end": "716220"
  },
  {
    "text": "the full SEO certificate profile this includes things like setting the identity in the subject alternative name",
    "start": "716220",
    "end": "721980"
  },
  {
    "text": "and this example here I've shown an email including an extension that specifies an issuer which is the oidc",
    "start": "721980",
    "end": "729060"
  },
  {
    "text": "provider that issued an identity token and optionally including an extension that this here is called an SCT which",
    "start": "729060",
    "end": "736740"
  },
  {
    "text": "roughly is a proof that something showed up in a transparency log",
    "start": "736740",
    "end": "742700"
  },
  {
    "text": "um you'll hear me say Key Management a lot throughout this talk this is a common problem um not just with artifacts signing keys",
    "start": "742920",
    "end": "749160"
  },
  {
    "text": "but also with the services that are managed and have signing keys and this is something to consider with managed",
    "start": "749160",
    "end": "754920"
  },
  {
    "text": "Cas too if the signing key for the ca gets compromised a attacker could mint",
    "start": "754920",
    "end": "763200"
  },
  {
    "text": "certificates for any arbitrary identity by passing any sort of authorization",
    "start": "763200",
    "end": "768779"
  },
  {
    "text": "checks something else to consider is rotation CA certificates expire or in the event",
    "start": "768779",
    "end": "776700"
  },
  {
    "text": "of a compromise you may have to rotate it and so as an organization you need to have some policy in place that lets you",
    "start": "776700",
    "end": "783600"
  },
  {
    "text": "rotate out certificates in a secure way without giving attackers an opportunity to inject their own CA certificates and",
    "start": "783600",
    "end": "789959"
  },
  {
    "text": "own trust routes and at the end of this talk we'll talk a little bit about how we do that within the production environment of sixstore",
    "start": "789959",
    "end": "797060"
  },
  {
    "start": "796000",
    "end": "796000"
  },
  {
    "text": "if you don't already have a managed CA another option is simply to operate a",
    "start": "798120",
    "end": "803160"
  },
  {
    "text": "private instance of fulsio from the open source Repository the same Key Management considerations",
    "start": "803160",
    "end": "810540"
  },
  {
    "text": "are important here folsio has the concept of signing back-ends which are roughly where the signing key lives in",
    "start": "810540",
    "end": "816540"
  },
  {
    "text": "this example here I show it's within a cloud environment within KMS and once again you need to",
    "start": "816540",
    "end": "822120"
  },
  {
    "text": "make sure that access controls are appropriate and that access to that key is locked down",
    "start": "822120",
    "end": "828620"
  },
  {
    "text": "we'll talk more about transparency logs in a moment but I think it's worth noting here that I also believe that it's critical that you operate a",
    "start": "828779",
    "end": "835139"
  },
  {
    "text": "certificate transparency log even within a private environment even if you won't have these certificates public",
    "start": "835139",
    "end": "842700"
  },
  {
    "text": "because this will give you an immutable issuance log such that an auditor can verify how",
    "start": "842700",
    "end": "848700"
  },
  {
    "text": "identities are showing up in a log and make sure that there's not anything unexpected and this is beneficial too in",
    "start": "848700",
    "end": "854700"
  },
  {
    "text": "the case of compromise of a CA signing key if a CA signing key is compromised",
    "start": "854700",
    "end": "859860"
  },
  {
    "text": "either an attacker will up have to upload that certificate to a transparency log effectively forcing",
    "start": "859860",
    "end": "865800"
  },
  {
    "text": "attackers into the open or they'll omit the certificate from a transparency log at which point verifier should simply",
    "start": "865800",
    "end": "871740"
  },
  {
    "text": "not trust the certificate so now let's talk a little bit about",
    "start": "871740",
    "end": "877519"
  },
  {
    "text": "private transparency logs and before we do that I'll talk a little bit about what a transparency log",
    "start": "877519",
    "end": "884459"
  },
  {
    "start": "880000",
    "end": "880000"
  },
  {
    "text": "actually is if you're familiar with blockchain you might have heard of this data structure before which are Merkle trees and this",
    "start": "884459",
    "end": "892440"
  },
  {
    "text": "is a representation of a Merkle Tree on the right here roughly the leaf nodes of the tree are hashes of what's going into",
    "start": "892440",
    "end": "899100"
  },
  {
    "text": "the tree and then the parent nodes are hashes of the concatenation of their children",
    "start": "899100",
    "end": "905220"
  },
  {
    "text": "and this construction uh allows you to calculate certain types of proofs over",
    "start": "905220",
    "end": "911220"
  },
  {
    "text": "this tree and one of them is called inclusion proofs these are cryptographic proofs that allow you to show that an",
    "start": "911220",
    "end": "917940"
  },
  {
    "text": "entry actually is in the tree another type of proof is what's called a",
    "start": "917940",
    "end": "924600"
  },
  {
    "text": "consistency proof and a consistency proof says that between any two points in the log points defined by size let's",
    "start": "924600",
    "end": "931139"
  },
  {
    "text": "say size 2 and size 10. we guarantee that the tree remains",
    "start": "931139",
    "end": "936920"
  },
  {
    "text": "append only uh meaning that's between those two",
    "start": "936920",
    "end": "942120"
  },
  {
    "text": "points what's in the tree uh was not modified or removed",
    "start": "942120",
    "end": "947160"
  },
  {
    "text": "and over time this gives you the property of immutability that trees can only be appended to and not removed from",
    "start": "947160",
    "end": "954720"
  },
  {
    "text": "or mutated more accurately the mechanism lets you detect any sort of mutations",
    "start": "954720",
    "end": "960500"
  },
  {
    "text": "over time there's many applications of transparency logs we saw certificate",
    "start": "960500",
    "end": "967380"
  },
  {
    "text": "transparency as one example a binary transparency this is things like recore",
    "start": "967380",
    "end": "973019"
  },
  {
    "text": "on key transparency is another one that I want to mention which is useful within the end-to-end encrypted messaging space",
    "start": "973019",
    "end": "978839"
  },
  {
    "text": "that give you a publicly auditable mapping between keys and identities",
    "start": "978839",
    "end": "986000"
  },
  {
    "start": "987000",
    "end": "987000"
  },
  {
    "text": "within sigstore we have two primary uses for transparency logs one is that fulsio",
    "start": "989519",
    "end": "996540"
  },
  {
    "text": "writes its issued certificates to a certificate transparency log and also that recore entries are",
    "start": "996540",
    "end": "1002120"
  },
  {
    "text": "appended to a transparency log which is sometimes a superset of what goes into folsio but there may be use cases where",
    "start": "1002120",
    "end": "1008779"
  },
  {
    "text": "you only want false here or only want recore",
    "start": "1008779",
    "end": "1013060"
  },
  {
    "start": "1013000",
    "end": "1013000"
  },
  {
    "text": "these are all questions that I've heard at some point when discussing with maintainers or community members which",
    "start": "1016600",
    "end": "1023180"
  },
  {
    "text": "is do I actually need a transparency log if I'm going to be operating in a private environment and I'll try to",
    "start": "1023180",
    "end": "1029418"
  },
  {
    "text": "convince you that I do think it's necessary to operate one question is well what if I already have",
    "start": "1029419",
    "end": "1035360"
  },
  {
    "text": "an existing system for audit logging for example maybe you're on a cloud platform",
    "start": "1035360",
    "end": "1040640"
  },
  {
    "text": "that already has audit logs one benefit of operating a transparency",
    "start": "1040640",
    "end": "1047360"
  },
  {
    "text": "log is that it allows you a few things one it allows you to move a transparency log into a different environment let's",
    "start": "1047360",
    "end": "1054020"
  },
  {
    "text": "say a different cloud provider so that you're operating at different trust boundary and it reduces uh the risk of",
    "start": "1054020",
    "end": "1060500"
  },
  {
    "text": "compromise either due to an Insider risk compromise or even compromise of the cloud platform itself",
    "start": "1060500",
    "end": "1067059"
  },
  {
    "text": "maybe a Insider is able to mutate the audit logs maybe they're not immutable maybe the cloud platform itself has a",
    "start": "1067059",
    "end": "1073340"
  },
  {
    "text": "bug or has some compromise so with a transparency log we can move",
    "start": "1073340",
    "end": "1078919"
  },
  {
    "text": "it to a different trust boundary and have additional confidence that's in the",
    "start": "1078919",
    "end": "1084740"
  },
  {
    "text": "event of a compromise only either the log or the",
    "start": "1084740",
    "end": "1090100"
  },
  {
    "text": "platform where things are signs gets compromised",
    "start": "1090100",
    "end": "1095419"
  },
  {
    "text": "another question is what if the artifacts that are being signed privately will ever be released publicly",
    "start": "1095419",
    "end": "1102320"
  },
  {
    "text": "and I mentioned this one because if you're operating a private transparency log and not making it public but then",
    "start": "1102320",
    "end": "1109280"
  },
  {
    "text": "you take an artifact that's been signed privately even if it's on a private transparency log and release it publicly",
    "start": "1109280",
    "end": "1114500"
  },
  {
    "text": "the problem is that as a verifier I have no way of computing and inclusion proof",
    "start": "1114500",
    "end": "1120380"
  },
  {
    "text": "to check that an entry is actually in the log and I also can't calculate consistency proofs that the the log",
    "start": "1120380",
    "end": "1127840"
  },
  {
    "text": "remains immutable and I mentioned this because I think it's worth considering when deciding on whether or not you need",
    "start": "1127840",
    "end": "1133760"
  },
  {
    "text": "a private transparency log if your artifacts are going to be released publicly it's likely that it's valuable",
    "start": "1133760",
    "end": "1140240"
  },
  {
    "text": "to rely on the public transparency log another question is well can I just use",
    "start": "1140240",
    "end": "1146600"
  },
  {
    "text": "a database if let's say I already have an existing audit logging system",
    "start": "1146600",
    "end": "1151700"
  },
  {
    "text": "um and I think what this really comes down to is do you want an immutable record a database is not going to be",
    "start": "1151700",
    "end": "1157700"
  },
  {
    "text": "immutable and once again it's it's prone to Insider risk or compromise and so to",
    "start": "1157700",
    "end": "1163820"
  },
  {
    "text": "me I think transparency logs are really critical because they provide this immutable record now one detailed that I think is worth",
    "start": "1163820",
    "end": "1170480"
  },
  {
    "start": "1170000",
    "end": "1170000"
  },
  {
    "text": "noting is how you actually get this property of immutability and that's by relying on monitors within",
    "start": "1170480",
    "end": "1177620"
  },
  {
    "text": "the transparency log space monitoring is a little bit of an overloaded term I've said monitors a lot so far referring to",
    "start": "1177620",
    "end": "1183679"
  },
  {
    "text": "Identity monitoring where you are querying the log periodically asking for every entry in the log and doing",
    "start": "1183679",
    "end": "1189500"
  },
  {
    "text": "introspection on the entries in the log to look for certain expected identities",
    "start": "1189500",
    "end": "1195679"
  },
  {
    "text": "this type of monitor the expectation is that it's there to calculate consistency",
    "start": "1195679",
    "end": "1201440"
  },
  {
    "text": "proofs so periodically it will query the log and say what's the current state of the log",
    "start": "1201440",
    "end": "1206660"
  },
  {
    "text": "it will then query the log again some size later and calculate a consistency",
    "start": "1206660",
    "end": "1212780"
  },
  {
    "text": "proof between those two points and if the log is not able to present a valid consistency proof and the monitor",
    "start": "1212780",
    "end": "1219740"
  },
  {
    "text": "is not able to verify it then there's an expectation the monitor should alert the ecosystem",
    "start": "1219740",
    "end": "1224919"
  },
  {
    "text": "to a potential compromise but another very important role of",
    "start": "1224919",
    "end": "1230960"
  },
  {
    "text": "monitors is to prevent what's called split view attacks and this is really where everything kind of comes together so split view attacks are where the log",
    "start": "1230960",
    "end": "1238039"
  },
  {
    "text": "presents different views to different callers and each view can look consistent but",
    "start": "1238039",
    "end": "1244660"
  },
  {
    "text": "uh the contents of what's being presented might look different for example maybe the log is malicious and",
    "start": "1244660",
    "end": "1251179"
  },
  {
    "text": "chooses to uh show nothing to some verifier effectively causing a denial of",
    "start": "1251179",
    "end": "1256220"
  },
  {
    "text": "service or maybe they choose to Omit entries maybe the logs even secretly adding entries in unexpectedly",
    "start": "1256220",
    "end": "1263539"
  },
  {
    "text": "and this is why it's important for monitors to do what's called gossiping where the monitors share their current state with other monitors",
    "start": "1263539",
    "end": "1270020"
  },
  {
    "text": "and if all monitors see that they currently see the same state in the log we can have some confidence that there",
    "start": "1270020",
    "end": "1275480"
  },
  {
    "text": "is not a split view attack it's important that we operate more and more monitors in order to feel more confident",
    "start": "1275480",
    "end": "1281480"
  },
  {
    "text": "that a split view attack is not occurring um once again like how I mentioned that it's uh important that a transparency",
    "start": "1281480",
    "end": "1288080"
  },
  {
    "text": "log be operated in a different trust boundary it's also important that the monitor run in a different trust boundary than the log because if the log",
    "start": "1288080",
    "end": "1295400"
  },
  {
    "text": "becomes compromised and it's in the same trust boundary as the monitor an attacker might be able to shut down the",
    "start": "1295400",
    "end": "1301880"
  },
  {
    "text": "Monitor and you wouldn't be notified when uh something malicious is occurring",
    "start": "1301880",
    "end": "1309200"
  },
  {
    "text": "I've left a couple links here to some of the monitors that we're working on one of which is in the six door organization",
    "start": "1309200",
    "end": "1315260"
  },
  {
    "text": "called record monitor this is something that I along with Purdue University have been working on this can run on GitHub",
    "start": "1315260",
    "end": "1321799"
  },
  {
    "text": "actions which is useful for monitoring public transparency logs but you can also operate this yourself",
    "start": "1321799",
    "end": "1328340"
  },
  {
    "text": "another monitor was created by the team behind trillion a trillions a scalable Merkle tree service and this is actually",
    "start": "1328340",
    "end": "1334940"
  },
  {
    "text": "what backs recore and certificate transparency um if you're interested in talking more",
    "start": "1334940",
    "end": "1340220"
  },
  {
    "text": "about monitors I'm happy to do so after the talk",
    "start": "1340220",
    "end": "1345158"
  },
  {
    "text": "so next Let's Talk About Time stamping this is a really critical component of sigstore",
    "start": "1345620",
    "end": "1352580"
  },
  {
    "start": "1352000",
    "end": "1352000"
  },
  {
    "text": "that is because the certificates that get issued by falsio are very short-lived this is in contrast to SSL",
    "start": "1352580",
    "end": "1360020"
  },
  {
    "text": "certificates that are typically issued for 30 days 90 days a year it could even be more than that",
    "start": "1360020",
    "end": "1366380"
  },
  {
    "text": "and one issue with the system is if for some reason the signing key material gets compromised you're going to have to",
    "start": "1366380",
    "end": "1371900"
  },
  {
    "text": "revoke the certificate this means that you now have to rely on certificate revocation lists and we didn't want to have to rely on",
    "start": "1371900",
    "end": "1378380"
  },
  {
    "text": "those for Sig store issued certificates so we issue very short-lived",
    "start": "1378380",
    "end": "1384679"
  },
  {
    "text": "certificates in this example just for 10 minutes and when verifying it's less critical",
    "start": "1384679",
    "end": "1390260"
  },
  {
    "text": "that we check that the certificate is still valid but that's the artifact was signed when",
    "start": "1390260",
    "end": "1397340"
  },
  {
    "text": "the certificate was valid and for that we effectively need a witness some other entity to say I saw this signed artifact",
    "start": "1397340",
    "end": "1405320"
  },
  {
    "text": "when the certificate was valid and typically we rely on the transparency log on recore for that",
    "start": "1405320",
    "end": "1411620"
  },
  {
    "text": "whenever you upload an entry to recore it includes an integrated timestamp and",
    "start": "1411620",
    "end": "1416780"
  },
  {
    "text": "when verifying its expected that you check that that integrated time falls in",
    "start": "1416780",
    "end": "1421820"
  },
  {
    "text": "the window of validity for the certificate between the not valid before and not valid after period",
    "start": "1421820",
    "end": "1429260"
  },
  {
    "text": "well one question is what if I don't want to operate a private instance of recore for some reason well another",
    "start": "1429260",
    "end": "1435020"
  },
  {
    "text": "option is to rely on timestamp authorities and this is actually quite an older concept within this space",
    "start": "1435020",
    "end": "1441860"
  },
  {
    "text": "timestamp authorities have been around for quite a while um but roughly the way it works is you",
    "start": "1441860",
    "end": "1448159"
  },
  {
    "text": "have some trusted entity a timestamp Authority and it signs over a current time along",
    "start": "1448159",
    "end": "1454280"
  },
  {
    "text": "with something associated with what you're verifying typically it's an artifact signature and this is called a",
    "start": "1454280",
    "end": "1459500"
  },
  {
    "text": "counter signing and the sign the timestamp itself is",
    "start": "1459500",
    "end": "1464539"
  },
  {
    "text": "signed so it can be verified and it's the same as with recore that's when you want to go verify a short-lived",
    "start": "1464539",
    "end": "1470360"
  },
  {
    "text": "certificate you take the timestamp from the sign timestamp and you check that it",
    "start": "1470360",
    "end": "1476120"
  },
  {
    "text": "falls in the window of validity for the certificate we can go one step further and use both",
    "start": "1476120",
    "end": "1483440"
  },
  {
    "text": "a timestamp Authority and recore to have distributed Trust once again when I talk about trust",
    "start": "1483440",
    "end": "1490220"
  },
  {
    "text": "boundaries you can take a time stamp Authority that you're operating yourself and put it in a different trust boundary",
    "start": "1490220",
    "end": "1495620"
  },
  {
    "text": "than your transparency log a different trust boundary than your certificate authority to reduce the impact of a",
    "start": "1495620",
    "end": "1502159"
  },
  {
    "text": "compromise you could also rely on a third party time stamp Authority for example",
    "start": "1502159",
    "end": "1508640"
  },
  {
    "text": "digi-ser Apple operates some um and maybe you choose to trust them to be the witness and to provide the",
    "start": "1508640",
    "end": "1515480"
  },
  {
    "text": "trusted time so in this example as a verifier what I would do is I would get the signed time",
    "start": "1515480",
    "end": "1521720"
  },
  {
    "text": "stamp and the recour entry and I can simply ignore the integrated time from the record time stamp sorry from the",
    "start": "1521720",
    "end": "1527960"
  },
  {
    "text": "record entry if I want and instead rely on the timestamp that comes from the timestamp authority when",
    "start": "1527960",
    "end": "1534500"
  },
  {
    "text": "verifying the certificate so the last consideration is roots of",
    "start": "1534500",
    "end": "1542000"
  },
  {
    "text": "trust and in particular how to ship these and how to securely rotate these",
    "start": "1542000",
    "end": "1547520"
  },
  {
    "text": "um and like I mentioned earlier these roots of trusts within Sig store include the certificate uh the ca certificate",
    "start": "1547520",
    "end": "1554360"
  },
  {
    "text": "chain and verification keys for the record transparency log",
    "start": "1554360",
    "end": "1560980"
  },
  {
    "start": "1560000",
    "end": "1560000"
  },
  {
    "text": "um once again the problems of Key Management come up here with roots of trust how do you",
    "start": "1562159",
    "end": "1568419"
  },
  {
    "text": "securely distribute them in such a way that an attacker isn't able to inject something into the trust route",
    "start": "1568419",
    "end": "1575900"
  },
  {
    "text": "storage is another consideration how do you lock down wherever these routes of trust are stored once again so an",
    "start": "1575900",
    "end": "1581360"
  },
  {
    "text": "attacker can't inject other ones and compromise is also something to consider uh and I think it's worth",
    "start": "1581360",
    "end": "1587600"
  },
  {
    "text": "noting once again expiration too if a compromise occurs and I need to rotate out some root of trust how do I do so in",
    "start": "1587600",
    "end": "1594860"
  },
  {
    "text": "such a way that uh does not allow an attacker to inject their own roots of",
    "start": "1594860",
    "end": "1600860"
  },
  {
    "text": "trust within the production instance of six store we use the update framework or",
    "start": "1600860",
    "end": "1608179"
  },
  {
    "start": "1602000",
    "end": "1602000"
  },
  {
    "text": "tough and this is a framework that aims to secure software updates",
    "start": "1608179",
    "end": "1614539"
  },
  {
    "text": "and it does so by creating this hierarchy of roles that are responsible for signing off on other roles and they",
    "start": "1614539",
    "end": "1621500"
  },
  {
    "text": "can continue signing off on other roles and eventually it will terminate and sign off on some metadata so in this",
    "start": "1621500",
    "end": "1626779"
  },
  {
    "text": "example here this is what a typical tough repository looks like we have a Target role which is comprised",
    "start": "1626779",
    "end": "1632960"
  },
  {
    "text": "of some signing key I'll note that the signing key could either be offline or online so for the Target role it's I",
    "start": "1632960",
    "end": "1639980"
  },
  {
    "text": "believe recommended that it be offline for the root role it's very strongly recommended that it be offline",
    "start": "1639980",
    "end": "1648500"
  },
  {
    "text": "um and the target role is going to then sign the metadata or a set of files",
    "start": "1648500",
    "end": "1653779"
  },
  {
    "text": "right and this is this concludes the certificate this could include the public key and the idea is that because it's signed",
    "start": "1653779",
    "end": "1660080"
  },
  {
    "text": "it doesn't give attackers the opportunity to inject in any of their own metadata",
    "start": "1660080",
    "end": "1666559"
  },
  {
    "text": "app chart role is responsible for specifying all of the roles that should be a part of the system once again as a",
    "start": "1666559",
    "end": "1673460"
  },
  {
    "text": "mechanism to prevent injecting other roles and the timestamp role is responsible",
    "start": "1673460",
    "end": "1679700"
  },
  {
    "text": "for signing a timestamp that's meant to frequently expire and this forces clients to go online periodically and",
    "start": "1679700",
    "end": "1685880"
  },
  {
    "text": "fetch the latest tough Repository and this is very beneficial to give us a",
    "start": "1685880",
    "end": "1691159"
  },
  {
    "text": "mechanism for rotation so let's say we have some certificate that expired or got compromised",
    "start": "1691159",
    "end": "1696320"
  },
  {
    "text": "all we'd have to do is have the target role sign a new set of targets sign some",
    "start": "1696320",
    "end": "1703100"
  },
  {
    "text": "new Target metadata and as clients timestamps expire locally they would go online and fetch this",
    "start": "1703100",
    "end": "1710960"
  },
  {
    "text": "latest updates another thing to consider here is that",
    "start": "1710960",
    "end": "1716179"
  },
  {
    "text": "what happens if the signing keys for any of the intermediate roles here the Target timestamp or",
    "start": "1716179",
    "end": "1722299"
  },
  {
    "text": "snapshot roles get compromised well this is the the purpose of the root rule which is going to sign off on all the",
    "start": "1722299",
    "end": "1728659"
  },
  {
    "text": "other roles within the production instance of Sig store the root role keys are held by a",
    "start": "1728659",
    "end": "1735919"
  },
  {
    "text": "number of trusted community members and you need a majority of the key holders",
    "start": "1735919",
    "end": "1741320"
  },
  {
    "text": "to do a new route signing event signing off on new keys for other roles",
    "start": "1741320",
    "end": "1748100"
  },
  {
    "text": "and so this prevents the compromise of a single root key holder and I think it's",
    "start": "1748100",
    "end": "1754159"
  },
  {
    "text": "important that if an organization wants to use tough you have a similar setup where you have some keys that live",
    "start": "1754159",
    "end": "1761360"
  },
  {
    "text": "Offline that are very rarely used to update the roles that they delegate to",
    "start": "1761360",
    "end": "1767020"
  },
  {
    "text": "but you rely on this mechanism so that you have some sort of secure update mechanism for rotating in new Target",
    "start": "1767020",
    "end": "1774320"
  },
  {
    "text": "metadata so we're about at the end of the talk",
    "start": "1774320",
    "end": "1779899"
  },
  {
    "text": "um there's a couple takeaways from this first Key Management is hard",
    "start": "1779899",
    "end": "1785419"
  },
  {
    "text": "um and this is whether you're referring to artifact signing keys or for managing",
    "start": "1785419",
    "end": "1791059"
  },
  {
    "text": "roots of trust or managing the keys behind your service so I think it's really important to when",
    "start": "1791059",
    "end": "1796279"
  },
  {
    "text": "you're building the system to consider this this is why we recommend things like the update framework",
    "start": "1796279",
    "end": "1803919"
  },
  {
    "text": "next auditability is critical whether you're using the public instance of six store or whether you're operating a",
    "start": "1803960",
    "end": "1809360"
  },
  {
    "text": "private one I think it's really critical to have an issuance log of every certificate that gets issued a log of",
    "start": "1809360",
    "end": "1815539"
  },
  {
    "text": "every artifact that gets signed because it gives you this permanent immutable record of every interaction that's",
    "start": "1815539",
    "end": "1821840"
  },
  {
    "text": "happened so you can go back in the event of a compromise see what happens you can see how your identities are being used",
    "start": "1821840",
    "end": "1829899"
  },
  {
    "start": "1830000",
    "end": "1830000"
  },
  {
    "text": "um like I mentioned in the beginning I didn't talk about how to actually deploy sigster uh if you're interested there is a channel on the six door slack uh",
    "start": "1831020",
    "end": "1838159"
  },
  {
    "text": "called private six door users where some folks have been working on how to deploy A system that looks like this with all",
    "start": "1838159",
    "end": "1844399"
  },
  {
    "text": "of these components um so feel free to go check that out uh thank you very much are there any",
    "start": "1844399",
    "end": "1850520"
  },
  {
    "text": "questions [Applause]",
    "start": "1850520",
    "end": "1860249"
  },
  {
    "text": "uh yeah so the the question was um how often are we seeing organizations uh",
    "start": "1872720",
    "end": "1878720"
  },
  {
    "text": "interested in in deploying private six Stores um this is a very new area so I think we're just starting to kind of see",
    "start": "1878720",
    "end": "1884659"
  },
  {
    "text": "organizations take an interest in this I know we have a few represented in the",
    "start": "1884659",
    "end": "1890059"
  },
  {
    "text": "slack Channel that I mentioned um that have had an interest in this um so right now I think it's kind of a",
    "start": "1890059",
    "end": "1895940"
  },
  {
    "text": "handful I expected to continue to grow over time though as more become interested in this",
    "start": "1895940",
    "end": "1904480"
  },
  {
    "text": "um",
    "start": "1912860",
    "end": "1914860"
  },
  {
    "text": "so is the question do you need the update framework if you're relying on",
    "start": "1918740",
    "end": "1924640"
  },
  {
    "text": "yeah so I I think it kind of depends right it's it's where what do you trust right so if you're",
    "start": "1926419",
    "end": "1932720"
  },
  {
    "text": "trusting the um cloud provider entirely maybe you can rely on their mechanism",
    "start": "1932720",
    "end": "1937760"
  },
  {
    "text": "for something like um a KMS to rotate out keys I think it",
    "start": "1937760",
    "end": "1943279"
  },
  {
    "text": "kind of depends on what your environment looks like it's very very tied to that one cloud provider maybe everything's",
    "start": "1943279",
    "end": "1948380"
  },
  {
    "text": "integrated and you don't need to rely on something like the update framework but I think once you start",
    "start": "1948380",
    "end": "1953740"
  },
  {
    "text": "Distributing a trust you start running your services within different Cloud environments being able to bring together all the roots of trust",
    "start": "1953740",
    "end": "1960440"
  },
  {
    "text": "um in a single repository becomes important and that's where I think a tough could be valuable",
    "start": "1960440",
    "end": "1967179"
  },
  {
    "text": "awesome um well if anybody wants to chat more I'll be around after the talk thank you very much",
    "start": "1969740",
    "end": "1974800"
  },
  {
    "text": "[Applause]",
    "start": "1974800",
    "end": "1978619"
  }
]