[
  {
    "text": "I think it's 25 past I I believe it's the last session of this conference",
    "start": "0",
    "end": "5040"
  },
  {
    "text": "today so let's get started you're all probably eager to get to the booth crawl",
    "start": "5040",
    "end": "10260"
  },
  {
    "text": "but first let's talk about the sick testing update of this year's kubecon my",
    "start": "10260",
    "end": "17760"
  },
  {
    "text": "name is Patrick Uli I work on kubernetes for Intel on various topics including",
    "start": "17760",
    "end": "24960"
  },
  {
    "text": "testing end-to-end testing in particular and I recently became a tech lead for",
    "start": "24960",
    "end": "30599"
  },
  {
    "text": "that particular area in sick testing we do have other experts where suggesting is a fairly big seek but owns a lot of",
    "start": "30599",
    "end": "36420"
  },
  {
    "text": "code but I'm the one who has done most of the work on end-to-end testing and therefore I got the honor to talk about",
    "start": "36420",
    "end": "42540"
  },
  {
    "text": "that today usually in these sick updates someone goes through all the things that",
    "start": "42540",
    "end": "49379"
  },
  {
    "text": "the Sikh has done to inform the community but I figured that with a lot",
    "start": "49379",
    "end": "54660"
  },
  {
    "text": "of things Landing very reasonably in end-to-end testing with I'll focus on just that aspect and make it hopefully",
    "start": "54660",
    "end": "61320"
  },
  {
    "text": "interesting for you guys because that is also something that everyone who touches kubernetes",
    "start": "61320",
    "end": "66920"
  },
  {
    "text": "sooner or later needs to deal with whether it's develop upping features or",
    "start": "66920",
    "end": "72479"
  },
  {
    "text": "debugging perhaps something or writing your own code and trying to figure out how to test that with a new kubernetes",
    "start": "72479",
    "end": "79260"
  },
  {
    "text": "cluster that is where we're end-to-end testing becomes useful",
    "start": "79260",
    "end": "85439"
  },
  {
    "text": "and is needed but Zig testing as I said is a big Sig that is really crucial to",
    "start": "85439",
    "end": "91200"
  },
  {
    "text": "kubernetes we officially own several tools that really keep the lights on in",
    "start": "91200",
    "end": "98460"
  },
  {
    "text": "kubernetes these other tools brow for testing tied for merging code that has",
    "start": "98460",
    "end": "104100"
  },
  {
    "text": "approvals all of that are crucial tools that keep the high velocity of changes",
    "start": "104100",
    "end": "110100"
  },
  {
    "text": "of going into that are going into kubernetes is alive and keeping the project healthy is part of that too we",
    "start": "110100",
    "end": "116159"
  },
  {
    "text": "own some tools that do analysis we also help other six to develop their",
    "start": "116159",
    "end": "123659"
  },
  {
    "text": "tests but a common misconception is that sick testing is not itself responsible for",
    "start": "123659",
    "end": "129420"
  },
  {
    "text": "those tests we just provide some infrastructure and then we expect and hope that the other six will use those",
    "start": "129420",
    "end": "136020"
  },
  {
    "text": "responsibly do the right things and and write good tests because good tests are",
    "start": "136020",
    "end": "142560"
  },
  {
    "text": "part of that thing that keeps kubernetes healthy we run those all mini tests run",
    "start": "142560",
    "end": "148379"
  },
  {
    "text": "on all PRS they need to pass reliably so flaky tests are probably one of the",
    "start": "148379",
    "end": "153959"
  },
  {
    "text": "biggest problems that we are dealing with in kubernetes when merging changes",
    "start": "153959",
    "end": "159360"
  },
  {
    "text": "because the flaky test not only affects that thing but is not getting tested properly it also affects any other PR",
    "start": "159360",
    "end": "165480"
  },
  {
    "text": "that doesn't go in immediately because some proud job failed temporarily that",
    "start": "165480",
    "end": "170760"
  },
  {
    "text": "is a big problem that we still struggle with and some of the tints and guidances that",
    "start": "170760",
    "end": "177180"
  },
  {
    "text": "I'm providing as part of this talk are about some of these aspects that make Tests reliable and useful and easy to",
    "start": "177180",
    "end": "184860"
  },
  {
    "text": "debug so that's the the end-to-end testing",
    "start": "184860",
    "end": "190560"
  },
  {
    "text": "um I also published a blog post I have a link to that at the end of a talk that",
    "start": "190560",
    "end": "197280"
  },
  {
    "text": "covers much of the same material so if anything in the slides is too brief you",
    "start": "197280",
    "end": "203159"
  },
  {
    "text": "can follow up read up on that in in a much larger text document share it with",
    "start": "203159",
    "end": "208200"
  },
  {
    "text": "colleagues post it on the wall of your cubicle if it's useful enough I don't know but spread the word because this",
    "start": "208200",
    "end": "214860"
  },
  {
    "text": "for at least for people working on kubernetes this is really important",
    "start": "214860",
    "end": "220400"
  },
  {
    "text": "definitely the difference it is about testing with real components in real clusters perhaps",
    "start": "223099",
    "end": "231239"
  },
  {
    "text": "on VMS perhaps on on real Hardware um but it does really deploy a full in many",
    "start": "231239",
    "end": "239519"
  },
  {
    "text": "cases it's it's often in kubernetes It's a Kind cluster but it uses the same artifacts that that get published by",
    "start": "239519",
    "end": "245519"
  },
  {
    "text": "kubernetes it's not some special API server it is the API server that is getting tested and same with all the",
    "start": "245519",
    "end": "252060"
  },
  {
    "text": "other components cubelet and so on the component that does for testing is",
    "start": "252060",
    "end": "258780"
  },
  {
    "text": "the end-to-end test Suite it acts like a kubernetes client so it's",
    "start": "258780",
    "end": "264900"
  },
  {
    "text": "a binary single binary that connects to the API server and then through client",
    "start": "264900",
    "end": "270419"
  },
  {
    "text": "go deploys some workloads waits for the right and expected reaction from a",
    "start": "270419",
    "end": "277440"
  },
  {
    "text": "cluster to verify that the cluster works as expected we have and that's where it gets a",
    "start": "277440",
    "end": "283259"
  },
  {
    "text": "little bit confusing perhaps now two end-to-end Frameworks under sick testing",
    "start": "283259",
    "end": "288600"
  },
  {
    "text": "the one in kubernetes that is used by kubernetes for testing of kubernetes is",
    "start": "288600",
    "end": "294360"
  },
  {
    "text": "the older one it's based on Ginkgo and go Mega tools that",
    "start": "294360",
    "end": "302639"
  },
  {
    "text": "are not owned by by suggesting these are GitHub repositories but we've been using",
    "start": "302639",
    "end": "308820"
  },
  {
    "text": "them for a long time Ginkgo is the test Runner that organizes for test suite and",
    "start": "308820",
    "end": "314280"
  },
  {
    "text": "which tests run at which point um and go Mega is an assertion library",
    "start": "314280",
    "end": "321000"
  },
  {
    "text": "but you are using inside your tests to make statements about expected States and so on like testify is another",
    "start": "321000",
    "end": "327960"
  },
  {
    "text": "alternative to Omega perhaps but in in our case we use Omega the The crucial part The crucial",
    "start": "327960",
    "end": "334139"
  },
  {
    "text": "difference compared to the other sick so the other end-to-end framework is that",
    "start": "334139",
    "end": "339960"
  },
  {
    "text": "there is another effort a sub-project essentially of sick testing that at some point formed around people who wanted to",
    "start": "339960",
    "end": "346860"
  },
  {
    "text": "do end-to-end testing and couldn't do it with the entry framework because the",
    "start": "346860",
    "end": "352560"
  },
  {
    "text": "entry framework is kind of hard to Bender into third-party projects that was one of the problems at the time and",
    "start": "352560",
    "end": "358860"
  },
  {
    "text": "it still is a problem um so they started from scratch also",
    "start": "358860",
    "end": "364080"
  },
  {
    "text": "being a bit dissatisfied with some things that were not that well done in",
    "start": "364080",
    "end": "369360"
  },
  {
    "text": "the entry framework for historic reasons they started from scratch building something around go unit tests",
    "start": "369360",
    "end": "376320"
  },
  {
    "text": "as for test Runner completely different API completely different resource code so it's",
    "start": "376320",
    "end": "381660"
  },
  {
    "text": "completely completely separate it basically Fork the effort to some extent my focus today is on the entry",
    "start": "381660",
    "end": "389880"
  },
  {
    "text": "kubernetes endpoint framework because that's one that I've been working with that's one that we have to use in",
    "start": "389880",
    "end": "395819"
  },
  {
    "text": "kubernetes I don't see a path of how we could somehow merge these two efforts again it's too different there's no",
    "start": "395819",
    "end": "402780"
  },
  {
    "text": "viable path that replaces all of the entry end-to-end tests with something based on this other framework",
    "start": "402780",
    "end": "408900"
  },
  {
    "text": "so I just mentioned it here for the sake of completeness Because by both are called",
    "start": "408900",
    "end": "414060"
  },
  {
    "text": "end-to-end framework we probably need a better name something for one of them one of us should get",
    "start": "414060",
    "end": "419160"
  },
  {
    "text": "reader but I don't know which one so well that's where we are just keep that in mind",
    "start": "419160",
    "end": "424819"
  },
  {
    "text": "I at this time I'd really like to shout out a huge thanks part of the clap of hands I don't know what he ever looks at",
    "start": "426180",
    "end": "432600"
  },
  {
    "text": "this recording here on the factory is the main author of Ginkgo and go Mega",
    "start": "432600",
    "end": "438060"
  },
  {
    "text": "and he's been extremely helpful all of his all of it in his spare time to",
    "start": "438060",
    "end": "443160"
  },
  {
    "text": "improve Ginkgo and potential in particular the the major release version two uh making it suitable for kubernetes",
    "start": "443160",
    "end": "451199"
  },
  {
    "text": "addressing some of the long-standing concerns that we had and we can't pay him or at least none of",
    "start": "451199",
    "end": "457560"
  },
  {
    "text": "not cnzf perhaps can pay him but we as other contributors can't do much more than really thank him he's not here so",
    "start": "457560",
    "end": "463860"
  },
  {
    "text": "we can't buy him a beer but anyway so this is the architecture of the entry",
    "start": "463860",
    "end": "471780"
  },
  {
    "text": "framework as it exists today we do have a much nicer architecture now as of just",
    "start": "471780",
    "end": "478259"
  },
  {
    "text": "last week basically where at the bottom we have the e2e framework it lives in",
    "start": "478259",
    "end": "483599"
  },
  {
    "text": "kubernetes under test e2e framework it's mostly now a standalone package that",
    "start": "483599",
    "end": "488880"
  },
  {
    "text": "only has client go as dependency which is important because it used to depend",
    "start": "488880",
    "end": "494639"
  },
  {
    "text": "on kubernetes code elsewhere like kubernetes package something which made",
    "start": "494639",
    "end": "500520"
  },
  {
    "text": "it hard to pull that framework into a staging Ripple which would have been the way how we could have published it",
    "start": "500520",
    "end": "506280"
  },
  {
    "text": "earlier except that we had all of these odd dependencies on code in kubernetes",
    "start": "506280",
    "end": "511440"
  },
  {
    "text": "that are not acceptable for a staging repo now we are technically at a phase where",
    "start": "511440",
    "end": "518700"
  },
  {
    "text": "we have nice dependencies so the bottom is the framework it manages things like",
    "start": "518700",
    "end": "524580"
  },
  {
    "text": "creating a test namespace connecting to the API server cleaning up handling",
    "start": "524580",
    "end": "532260"
  },
  {
    "text": "timeouts things like that are in that framework on top of that we have domain specific",
    "start": "532260",
    "end": "538320"
  },
  {
    "text": "helpers like create something for creating a pod lives under test e to e framework pods",
    "start": "538320",
    "end": "545600"
  },
  {
    "text": "waiting for pot States is in that particular package and we do have corresponding things for other",
    "start": "545600",
    "end": "551940"
  },
  {
    "text": "kubernetes constructs um volumes is a big one",
    "start": "551940",
    "end": "556980"
  },
  {
    "text": "and those helpers they get then used by different tests these tests live",
    "start": "556980",
    "end": "563339"
  },
  {
    "text": "alongside the e2e framework so under test e to e we have test e2e storage as",
    "start": "563339",
    "end": "569100"
  },
  {
    "text": "just one example and that has the actual tests that we run against the cluster",
    "start": "569100",
    "end": "576899"
  },
  {
    "text": "and to protest swedes this is the last part the top the part that basically pulls all of this together and defines",
    "start": "576899",
    "end": "584700"
  },
  {
    "text": "the actual binary that we are running for interesting in kubernetes it is test",
    "start": "584700",
    "end": "591240"
  },
  {
    "text": "e to E which the directory structure is a bit confusing it's it's probably shouldn't",
    "start": "591240",
    "end": "597720"
  },
  {
    "text": "be like that but that's that's the historic part we can't easily move things around but at least the dependencies are more more sane now so",
    "start": "597720",
    "end": "604740"
  },
  {
    "text": "test e to e is the main entry point for building the test e to e binary some of",
    "start": "604740",
    "end": "610260"
  },
  {
    "text": "you might know conformance testing that's the same binary that gets published as part of a kubernetes",
    "start": "610260",
    "end": "615959"
  },
  {
    "text": "release and sonoboy Ben runs that binary to do conformance testing it's basically",
    "start": "615959",
    "end": "622800"
  },
  {
    "text": "a subset of a test that we use for full testing in kubernetes we have two other test Suites e to e nodes owned by Sig",
    "start": "622800",
    "end": "632040"
  },
  {
    "text": "node is used to test cubelet and it's running a bit differently in",
    "start": "632040",
    "end": "637200"
  },
  {
    "text": "this case it's running alongside cubelet not with a real cluster basically on the",
    "start": "637200",
    "end": "643080"
  },
  {
    "text": "Node or on a on a fake node but it does have the API servers of it it can do things like create a port see that the",
    "start": "643080",
    "end": "649620"
  },
  {
    "text": "group actually executes that part and that's why it's also using the same",
    "start": "649620",
    "end": "654720"
  },
  {
    "text": "framework and Cube ADM is also an end-to-end test Suite using that",
    "start": "654720",
    "end": "660360"
  },
  {
    "text": "framework so these are the entry things I",
    "start": "660360",
    "end": "665820"
  },
  {
    "text": "personally have had an interest in this e2e framework because I also wanted to do testing of a CSI driver so at some",
    "start": "665820",
    "end": "672000"
  },
  {
    "text": "point I have vendored kubernetes kubernetes to get access to that framework and it has it has worked it's",
    "start": "672000",
    "end": "678959"
  },
  {
    "text": "it's just a bit more tricky to get the dependencies right so there are out of three test Suites",
    "start": "678959",
    "end": "685620"
  },
  {
    "text": "that I know of that I've personally written myself that use that same framework it's possible",
    "start": "685620",
    "end": "692959"
  },
  {
    "text": "so the real one some of the recent efforts um have been the ginkgo V2 migration I",
    "start": "694980",
    "end": "702839"
  },
  {
    "text": "already mentioned that nature version update it gave us a lot of new features but then we also had some discussions",
    "start": "702839",
    "end": "709740"
  },
  {
    "text": "around what actually are best practices what do we recommend to people and I",
    "start": "709740",
    "end": "716519"
  },
  {
    "text": "need to call out one thing here we looked at failure messages some of them were just very brief and that has been a",
    "start": "716519",
    "end": "722220"
  },
  {
    "text": "problem um and we had a discussion and we basically said well yes it is okay for the failure",
    "start": "722220",
    "end": "728700"
  },
  {
    "text": "message because that's the first thing that we show to people if they look at the failed brow job for a failed test",
    "start": "728700",
    "end": "734399"
  },
  {
    "text": "that's the full message that they see first and we said that yes it is okay to",
    "start": "734399",
    "end": "739620"
  },
  {
    "text": "make that a long detailed informative message including multiple lines of",
    "start": "739620",
    "end": "745620"
  },
  {
    "text": "debug dumps that say for example describe a port that hasn't reached a certain state",
    "start": "745620",
    "end": "751800"
  },
  {
    "text": "and that's okay if that output contains content that varies between test runs",
    "start": "751800",
    "end": "757200"
  },
  {
    "text": "because we have tools that correlate message the different test fields from different runs but they can handle",
    "start": "757200",
    "end": "764160"
  },
  {
    "text": "differences like different hex values inside that output and they still correlate that so it's it's okay to make",
    "start": "764160",
    "end": "770519"
  },
  {
    "text": "that message long and it's useful so let's do it which leads me to the next Point how do we",
    "start": "770519",
    "end": "778500"
  },
  {
    "text": "generate those failure messages ultimately A test should pass",
    "start": "778500",
    "end": "785220"
  },
  {
    "text": "it should never fail but if it fails these failure messages make the difference between a good test and a bad",
    "start": "785220",
    "end": "792060"
  },
  {
    "text": "test a bad test will give you no useful information you will have to start downloading the binary downloading the",
    "start": "792060",
    "end": "798120"
  },
  {
    "text": "test Suite modify the test Suite air debug output and all of that doesn't work if a failure occurs only",
    "start": "798120",
    "end": "804060"
  },
  {
    "text": "occasionally in your CI when you're basically stuck with what you have in your test code and and what",
    "start": "804060",
    "end": "810240"
  },
  {
    "text": "what it prints so in the context of kubernetes we",
    "start": "810240",
    "end": "817860"
  },
  {
    "text": "made another decision we deprecated some of the helper functions that were in the",
    "start": "817860",
    "end": "823200"
  },
  {
    "text": "framework because at some point some people started adding things like framework expect no error framework expect equal",
    "start": "823200",
    "end": "831000"
  },
  {
    "text": "it basically created another kubernetes specific domain language for writing",
    "start": "831000",
    "end": "836519"
  },
  {
    "text": "test code we we concluded that this is not what we want to focus on using Omega directly is what we",
    "start": "836519",
    "end": "843839"
  },
  {
    "text": "recommend now we have much more flexibility in the Upstream Omega compared to what we had what we had in",
    "start": "843839",
    "end": "850920"
  },
  {
    "text": "the framework was basically just a small subset let's just use Omega directly was one of the tech design decisions that we",
    "start": "850920",
    "end": "858000"
  },
  {
    "text": "made there's one exception our version of expect no error has some special handling of API server errors so that's",
    "start": "858000",
    "end": "865320"
  },
  {
    "text": "actually recommended for that particular one use case but it's that's the only one",
    "start": "865320",
    "end": "870480"
  },
  {
    "text": "another thing that people often get wrong is that they use Omega but then they",
    "start": "870480",
    "end": "877440"
  },
  {
    "text": "only know about say strings contains so what they do here is they pass the",
    "start": "877440",
    "end": "883920"
  },
  {
    "text": "result of some check in goal to go Mega expect and the failure message then is",
    "start": "883920",
    "end": "890240"
  },
  {
    "text": "expected true to be false if it fails that's not helpful",
    "start": "890240",
    "end": "898139"
  },
  {
    "text": "it's much better to let go Mega see the actual string and then use a gomega",
    "start": "898139",
    "end": "904560"
  },
  {
    "text": "assertion like Omega contains substring with the expected substring and even",
    "start": "904560",
    "end": "911100"
  },
  {
    "text": "better is if you add some additional information about what it is that you are checking",
    "start": "911100",
    "end": "916800"
  },
  {
    "text": "because then when it fails it will tell you I was checking log output here's",
    "start": "916800",
    "end": "922079"
  },
  {
    "text": "what I got here's what I expected and all of that will be in your failure message so when it fails you will have",
    "start": "922079",
    "end": "928199"
  },
  {
    "text": "almost all of the information that you need to get started debugging the failure",
    "start": "928199",
    "end": "933860"
  },
  {
    "text": "but there are probably cases where there is no suitable go Mega assertion you",
    "start": "934980",
    "end": "940800"
  },
  {
    "text": "could write one that's part of the design of Omega but you can write custom matches and that may be the right choice",
    "start": "940800",
    "end": "947339"
  },
  {
    "text": "but it's also a bit complicated if if for one time things you may do something",
    "start": "947339",
    "end": "952440"
  },
  {
    "text": "like I'm I'm import I'm checking something and go but then it's your responsibility to have a ginkgo fail F",
    "start": "952440",
    "end": "960899"
  },
  {
    "text": "message that is informative to really print something that's useful another",
    "start": "960899",
    "end": "967079"
  },
  {
    "text": "problem that we've had is that formatting API objects like a pod",
    "start": "967079",
    "end": "973620"
  },
  {
    "text": "structure has not been done or has not been useful with full introspection of all fields",
    "start": "973620",
    "end": "980279"
  },
  {
    "text": "that was what what Gomez normally does so go Mega failure messages they use",
    "start": "980279",
    "end": "985560"
  },
  {
    "text": "this helper package here go Mega format to dump the port and it it usually",
    "start": "985560",
    "end": "990959"
  },
  {
    "text": "truncated because we do have Fields like a timestamp which when you look at every single field has lots of things inside",
    "start": "990959",
    "end": "997440"
  },
  {
    "text": "that you don't care about like a time zone so we ended up with a pods that had lots of information about the time zone",
    "start": "997440",
    "end": "1003800"
  },
  {
    "text": "of one field and when it got complicated not not very useful what we changed is that this Omega format in our end-to-end",
    "start": "1003800",
    "end": "1011959"
  },
  {
    "text": "test for Suite gets modified or get there's a hook but says basically as a",
    "start": "1011959",
    "end": "1018259"
  },
  {
    "text": "as a it intercepts for formatting if it sees something that looks better in general",
    "start": "1018259",
    "end": "1023540"
  },
  {
    "text": "it will format that object as gml so you will get a Jammer dump of your Port",
    "start": "1023540",
    "end": "1029360"
  },
  {
    "text": "which omits unsaid Fields like you would get from Cube cuddle and you get fairly",
    "start": "1029360",
    "end": "1035720"
  },
  {
    "text": "readable outputs when using that infrastructure",
    "start": "1035720",
    "end": "1040120"
  },
  {
    "text": "the other thing is recovering from failures so a test Suite",
    "start": "1043819",
    "end": "1049880"
  },
  {
    "text": "might the test might time out it might get interrupted if you if you bought it manually gingo V2 added something called",
    "start": "1049880",
    "end": "1057620"
  },
  {
    "text": "defer cleanup it's like defer in a function but with some some",
    "start": "1057620",
    "end": "1063679"
  },
  {
    "text": "additional features it I have that on the next slide it will",
    "start": "1063679",
    "end": "1068860"
  },
  {
    "text": "it will print it will deal with contacts and timeouts so the the cleanup action",
    "start": "1068860",
    "end": "1074600"
  },
  {
    "text": "the time the test and the cleanup code get different timeouts all handled by",
    "start": "1074600",
    "end": "1081140"
  },
  {
    "text": "Ginkgo and the other benefit is you can call this defer Cleanup in a helper",
    "start": "1081140",
    "end": "1087080"
  },
  {
    "text": "function you can't do a defer in the helper function because you always exit from",
    "start": "1087080",
    "end": "1092240"
  },
  {
    "text": "the helper function and then run the real tests but defer cleanup registers for callbacks so that it runs at the end",
    "start": "1092240",
    "end": "1099140"
  },
  {
    "text": "of your test that's the other big advantage we have additional tooling",
    "start": "1099140",
    "end": "1106280"
  },
  {
    "text": "in kubernetes this framework ignore not found here so",
    "start": "1106280",
    "end": "1111860"
  },
  {
    "text": "this example here basically creates a port it will do some testing with a part and",
    "start": "1111860",
    "end": "1118100"
  },
  {
    "text": "we want to be sure that it gets deleted this is part of the recommendation a part is a namespate resource but",
    "start": "1118100",
    "end": "1125720"
  },
  {
    "text": "cleaning it up can often take a long time so it's useful to do that explicitly to see where your delays are",
    "start": "1125720",
    "end": "1132080"
  },
  {
    "text": "or to be notified if deleting support fails then if you do it in it if your cleanup it will be a test failure if you",
    "start": "1132080",
    "end": "1139160"
  },
  {
    "text": "rely on the automatically deleting of a namespace the namespace might never get deleted",
    "start": "1139160",
    "end": "1144440"
  },
  {
    "text": "and you don't see that because it's asynchronous it's not the test doesn't wait for the namespace to be deleted it",
    "start": "1144440",
    "end": "1151340"
  },
  {
    "text": "just gets triggered but it doesn't wait for it so it's better to do that explicitly but then what happens if your",
    "start": "1151340",
    "end": "1156620"
  },
  {
    "text": "register service cleanup call and then your normal test delete support it would the ginkgo defer cleanup automatically",
    "start": "1156620",
    "end": "1164419"
  },
  {
    "text": "does error checking it would get an error from pod client delete saying not found and it would test fail the test so",
    "start": "1164419",
    "end": "1171380"
  },
  {
    "text": "we have this ignore not found that you can use in situations where it's okay to not to treat it as not an error",
    "start": "1171380",
    "end": "1179799"
  },
  {
    "text": "I've mentioned interrupting another tip that I have is a ginkgo V2 feature",
    "start": "1179960",
    "end": "1185840"
  },
  {
    "text": "called Paul broker's after some small delay usually it's much higher I'm not",
    "start": "1185840",
    "end": "1192260"
  },
  {
    "text": "sure what even the default is but if you run it interactively what this does here is it will regularly if a test runs for",
    "start": "1192260",
    "end": "1200240"
  },
  {
    "text": "a long time after 30 seconds it will start giving you information where the test is currently stuck",
    "start": "1200240",
    "end": "1206299"
  },
  {
    "text": "the approach that we had before was that anything that Paul's needs to dump some",
    "start": "1206299",
    "end": "1211460"
  },
  {
    "text": "lock message fairly frequently and it was doing that also in the CI runs so we ended up with large logs of",
    "start": "1211460",
    "end": "1219620"
  },
  {
    "text": "say checking Port checking Port still checking Port still not done and with",
    "start": "1219620",
    "end": "1225440"
  },
  {
    "text": "this we can control how often we get that output and it's fairly detailed it will tell you exactly which Ginkgo test",
    "start": "1225440",
    "end": "1231080"
  },
  {
    "text": "the latest Ginkgo by if you instrument your tests with that so you know where you are you can also",
    "start": "1231080",
    "end": "1237919"
  },
  {
    "text": "debug with Dells if you want to do it interactively that's the invocation that's argumentative specific so it assumes",
    "start": "1237919",
    "end": "1244820"
  },
  {
    "text": "that you are on the root of kubernetes this here this make Command ensures that",
    "start": "1244820",
    "end": "1250340"
  },
  {
    "text": "you build the right Ginkgo there is some version dependencies between the ginkgo CLI and the test Suite so it's better to",
    "start": "1250340",
    "end": "1257480"
  },
  {
    "text": "use one that gets built together with with kubernetes and and finally it's now safe to",
    "start": "1257480",
    "end": "1265280"
  },
  {
    "text": "interrupt at any time with Ctrl C because we do have much better cleanup handling now in kubernetes than we had",
    "start": "1265280",
    "end": "1271640"
  },
  {
    "text": "before I've been guilty of interrupting your test suite and rebuilding the entire cluster because I wanted to be sure that it's in the same state that",
    "start": "1271640",
    "end": "1278840"
  },
  {
    "text": "should be less less often necessary than it used to be",
    "start": "1278840",
    "end": "1284020"
  },
  {
    "text": "how it works under the hood again Ginkgo V2 feature is like a normal go code the Callback that",
    "start": "1284120",
    "end": "1292820"
  },
  {
    "text": "I registered with Ginkgo get can can optionally take a context parameter",
    "start": "1292820",
    "end": "1299840"
  },
  {
    "text": "it's fine to leave it out but when you don't get information your code that runs doesn't know how much time it has",
    "start": "1299840",
    "end": "1305419"
  },
  {
    "text": "left so in kubernetes we almost always want the context pass that down into API",
    "start": "1305419",
    "end": "1312380"
  },
  {
    "text": "calls with client go and when that function times out or the test Suite",
    "start": "1312380",
    "end": "1318260"
  },
  {
    "text": "gets aborted that context gets canceled and everything immediately returns and",
    "start": "1318260",
    "end": "1324260"
  },
  {
    "text": "cleanup can start otherwise this go routine would keep running it wouldn't know that it needs to stop you there's",
    "start": "1324260",
    "end": "1329960"
  },
  {
    "text": "no feature in go to kill a go routine it has to know that it has to stop",
    "start": "1329960",
    "end": "1335659"
  },
  {
    "text": "this is also a bit tricky because the cleanup for example needs a new context",
    "start": "1335659",
    "end": "1342260"
  },
  {
    "text": "it can't use the same one from the surrounding it function because this",
    "start": "1342260",
    "end": "1348080"
  },
  {
    "text": "context here will be canceled at the time when the Callback gets invoked and",
    "start": "1348080",
    "end": "1353840"
  },
  {
    "text": "this is this is tricky it's a slippery slope you're getting this all right this is where our documentation has lots of",
    "start": "1353840",
    "end": "1362360"
  },
  {
    "text": "guidance different steps that can go wrong and did go wrong these are all things that I've found in practice when",
    "start": "1362360",
    "end": "1368059"
  },
  {
    "text": "rewriting much of the edue testing to use this contexts so I'm not going to to cover more",
    "start": "1368059",
    "end": "1374720"
  },
  {
    "text": "details but this is material that you probably want to will want to look at if you want to get this ride in I wish we",
    "start": "1374720",
    "end": "1380240"
  },
  {
    "text": "had better lynches for this and I have some ideas but no implementation yet",
    "start": "1380240",
    "end": "1387039"
  },
  {
    "text": "other things other guidance is around timeouts so lots of tests have made up",
    "start": "1387860",
    "end": "1393980"
  },
  {
    "text": "their own timeouts how long they expect things to take this is problematic",
    "start": "1393980",
    "end": "1399020"
  },
  {
    "text": "because performance of a cluster can vary we are kind of using timeouts that",
    "start": "1399020",
    "end": "1404059"
  },
  {
    "text": "fit what we currently use in our kubernetes CI which is",
    "start": "1404059",
    "end": "1409940"
  },
  {
    "text": "unfortunately because we kind of have to make assumptions about the target Hardware we should be more more flexible",
    "start": "1409940",
    "end": "1415940"
  },
  {
    "text": "perhaps at some point we will have configuration options for all of these timeouts right now what we have is a",
    "start": "1415940",
    "end": "1422840"
  },
  {
    "text": "recommendation to use predefined timeouts that are part of the the",
    "start": "1422840",
    "end": "1428000"
  },
  {
    "text": "context that you get for each test use those perhaps if you know have you have a slow pod perhaps use it use twice the",
    "start": "1428000",
    "end": "1435320"
  },
  {
    "text": "Pod start if it takes if it's expected to take longer but try to use both both timers and then we know at least why",
    "start": "1435320",
    "end": "1441320"
  },
  {
    "text": "there is a timeout where the magic value comes from the other thing is",
    "start": "1441320",
    "end": "1447760"
  },
  {
    "text": "oftentimes testing will consist of creating something and waiting waiting",
    "start": "1447760",
    "end": "1452960"
  },
  {
    "text": "for a certain state to be reached and this has been a source of lot of headaches we used to have tests in kubernetes that",
    "start": "1452960",
    "end": "1461179"
  },
  {
    "text": "are were based on ever simple for loops with wait Paul being perhaps the most",
    "start": "1461179",
    "end": "1467780"
  },
  {
    "text": "common solution but wait Paul in particular was targeted towards kubernetes production code it wasn't meant to be used in tests people used it",
    "start": "1467780",
    "end": "1475039"
  },
  {
    "text": "anyway and we ended up with lots of tests that just failed with one error that said timed out waiting for the",
    "start": "1475039",
    "end": "1480440"
  },
  {
    "text": "condition full stop and if that's a failure messages how do",
    "start": "1480440",
    "end": "1485600"
  },
  {
    "text": "you debug that you really don't know what it was waiting for you don't know the actual state so",
    "start": "1485600",
    "end": "1492020"
  },
  {
    "text": "um it also weight Paul was often used without a context it wouldn't stop immediately it would continue pair",
    "start": "1492020",
    "end": "1498799"
  },
  {
    "text": "polling of all the test already failed or timed out so we we came up with a",
    "start": "1498799",
    "end": "1503840"
  },
  {
    "text": "long laundry list of things that are good pollings implementation should support weight accepting a context for",
    "start": "1503840",
    "end": "1510620"
  },
  {
    "text": "waiting be informative when interactively used it should tell you why it's waiting what",
    "start": "1510620",
    "end": "1518240"
  },
  {
    "text": "current state is while it's waiting ideally using the same formulas for failure message",
    "start": "1518240",
    "end": "1523880"
  },
  {
    "text": "um but not in VCI because in PCI we don't care about the intermediate State we just care about the result so it",
    "start": "1523880",
    "end": "1529760"
  },
  {
    "text": "needs to be configurable then when it fails it's often because it",
    "start": "1529760",
    "end": "1535580"
  },
  {
    "text": "observed some state but then perhaps to have other people have been other errors we want both for failure for failure and",
    "start": "1535580",
    "end": "1540919"
  },
  {
    "text": "the error uh we want to be able to compose conditions that it's waiting for",
    "start": "1540919",
    "end": "1546440"
  },
  {
    "text": "so that we can reuse code we have a long list of very specialized wait for pods",
    "start": "1546440",
    "end": "1551779"
  },
  {
    "text": "to do XYZ that are all different top level functions right now and they could",
    "start": "1551779",
    "end": "1557419"
  },
  {
    "text": "be more modular um and finally sometimes the polling",
    "start": "1557419",
    "end": "1562520"
  },
  {
    "text": "code detects that something has gone wrong permanently so we want to abort polling and if that list is too long",
    "start": "1562520",
    "end": "1568880"
  },
  {
    "text": "just to remember one thing gomega eventually and the counterpart consistently all do this right",
    "start": "1568880",
    "end": "1578360"
  },
  {
    "text": "whenever you end out just use function these functions here you can also do that in integration tests in a gold test",
    "start": "1578360",
    "end": "1585039"
  },
  {
    "text": "and it will almost certainly be more better better than the core that you can write manually",
    "start": "1585039",
    "end": "1590840"
  },
  {
    "text": "but that is something that we need to tell people because some people are conservative they are concerned about",
    "start": "1590840",
    "end": "1596000"
  },
  {
    "text": "things that they don't understand like they need to learn about this Omega eventually and how to invoke it",
    "start": "1596000",
    "end": "1602000"
  },
  {
    "text": "but it's definitely better another framework specific thing is that",
    "start": "1602000",
    "end": "1607279"
  },
  {
    "text": "sometimes in helper functions we want to do a go Mega expect but then when it",
    "start": "1607279",
    "end": "1612500"
  },
  {
    "text": "fails it's not the source code location of that helper function that is of interest but where it was called",
    "start": "1612500",
    "end": "1619220"
  },
  {
    "text": "and we we solve that by turning Omega failures into errors that we pass up",
    "start": "1619220",
    "end": "1626360"
  },
  {
    "text": "back for call chain we can wrap these errors so we get additional context and",
    "start": "1626360",
    "end": "1631940"
  },
  {
    "text": "then in the main test we have an expected no error that dumbs that error",
    "start": "1631940",
    "end": "1637580"
  },
  {
    "text": "with all the information that's where framework expect no error is used is coming in",
    "start": "1637580",
    "end": "1643240"
  },
  {
    "text": "so that's how we handle helper functions because Omega itself has some problems you can't pass an offset but it's a bit",
    "start": "1643340",
    "end": "1649700"
  },
  {
    "text": "tricky this is our our alternative solution here and a good example if you're looking for code that does that",
    "start": "1649700",
    "end": "1655580"
  },
  {
    "text": "is we test e2e framework ports Helper because I've done a lot of updates to to",
    "start": "1655580",
    "end": "1662480"
  },
  {
    "text": "make that particular package use these best practices and I've used that as a test case that my my changes actually",
    "start": "1662480",
    "end": "1668840"
  },
  {
    "text": "make sense and and lead to better code and with that yeah I'm almost at at the",
    "start": "1668840",
    "end": "1677000"
  },
  {
    "text": "end of my talk we do have time for questions afterwards and I I want to discuss a few things",
    "start": "1677000",
    "end": "1682220"
  },
  {
    "text": "so I've mentioned the blog post the QR diagram here is taking you to this blog",
    "start": "1682220",
    "end": "1689059"
  },
  {
    "text": "post it it is basically summarizing all of the things that I discovered expanding on the things that I'd",
    "start": "1689059",
    "end": "1695360"
  },
  {
    "text": "summarized in this talk with with a lot more information about the individual aspects like for proper handling of",
    "start": "1695360",
    "end": "1701779"
  },
  {
    "text": "contexts that's all spelled out explicitly where it was also copied into the Upstream",
    "start": "1701779",
    "end": "1707659"
  },
  {
    "text": "documentation which we do have but with other documentation on the kubernetes",
    "start": "1707659",
    "end": "1713299"
  },
  {
    "text": "therefore the contributors web page that's the GitHub repo that that document is a bit longer it doesn't not",
    "start": "1713299",
    "end": "1719960"
  },
  {
    "text": "it explains other things that haven't changed and this blog post perhaps is a good better starting point",
    "start": "1719960",
    "end": "1726679"
  },
  {
    "text": "I do have some plans for this I want to enable",
    "start": "1726679",
    "end": "1732020"
  },
  {
    "text": "linting both in kubernetes itself that's the first thing that I need to get that",
    "start": "1732020",
    "end": "1737299"
  },
  {
    "text": "I need to land I had another talk at the contributor Summit about linting of pull",
    "start": "1737299",
    "end": "1742760"
  },
  {
    "text": "requests because we had we don't follow best practices in the existing code if we enable additional checking in the",
    "start": "1742760",
    "end": "1750500"
  },
  {
    "text": "linta configuration that it gets applied to all codes we certainly have we will have failures because we haven't",
    "start": "1750500",
    "end": "1756440"
  },
  {
    "text": "modified all of the existing code my plan for kubernetes is to enable linking stricter linking in pull requests for",
    "start": "1756440",
    "end": "1763760"
  },
  {
    "text": "the code that gets added or modified at that time we can say okay you're doing something that we have done",
    "start": "1763760",
    "end": "1770840"
  },
  {
    "text": "in the past but don't do it anymore do something better instead and we will get better code over time",
    "start": "1770840",
    "end": "1777320"
  },
  {
    "text": "the core the configuration that I'm currently suggesting for kubernetes doesn't do anything with testing but",
    "start": "1777320",
    "end": "1784520"
  },
  {
    "text": "there is a gingo and go Mega linter it has been integrated into golang Sea",
    "start": "1784520",
    "end": "1791120"
  },
  {
    "text": "Island and it checks for a lot of things that are useful so once I know",
    "start": "1791120",
    "end": "1798260"
  },
  {
    "text": "that I can do this I I I'll probably propose a change of configuration that",
    "start": "1798260",
    "end": "1803779"
  },
  {
    "text": "also makes tests or writing tests easier because it will check for things automatically",
    "start": "1803779",
    "end": "1810500"
  },
  {
    "text": "then something that potential contributors could pick up is",
    "start": "1810500",
    "end": "1816020"
  },
  {
    "text": "converting more of these sub packages that we do have in the framework some of these are the main specific but",
    "start": "1816020",
    "end": "1822679"
  },
  {
    "text": "it could be easily farmed out now now that we know how to do it we could continue and basically clean up",
    "start": "1822679",
    "end": "1829880"
  },
  {
    "text": "all of the other helper functions too which will be useful it will benefit kubernetes because at some point someone",
    "start": "1829880",
    "end": "1835520"
  },
  {
    "text": "will write a new test and will swear about this time now waiting for",
    "start": "1835520",
    "end": "1840740"
  },
  {
    "text": "condition because he is calling a helper function that doesn't use Omega eventually yet and",
    "start": "1840740",
    "end": "1846559"
  },
  {
    "text": "it would be good for your karma if you help out kubernetes here making paying back some of the technical debt that has",
    "start": "1846559",
    "end": "1853159"
  },
  {
    "text": "has accumulated here and well that that karma is one thing but I",
    "start": "1853159",
    "end": "1861020"
  },
  {
    "text": "know of self-interest is perhaps the biggest best motivator to get some work done if you are developing a component",
    "start": "1861020",
    "end": "1868100"
  },
  {
    "text": "that needs enter and testing then it of course would be nice if you are",
    "start": "1868100",
    "end": "1873159"
  },
  {
    "text": "kubernetes contributor to use the same tools that you are familiar with in kubernet is also outside of kubernetes",
    "start": "1873159",
    "end": "1881299"
  },
  {
    "text": "and that's where this question comes in can we move this code in this uninterestaging",
    "start": "1881299",
    "end": "1887659"
  },
  {
    "text": "so technically we can the dependency issue that has",
    "start": "1887659",
    "end": "1892700"
  },
  {
    "text": "prevented that in the past has been solved should we do it I'm not sure at this point some of the",
    "start": "1892700",
    "end": "1900440"
  },
  {
    "text": "API is well we preserved all of the old apis because we didn't want to rewrite",
    "start": "1900440",
    "end": "1906500"
  },
  {
    "text": "all of the tests so we still have a lot longer variety of Parts expect",
    "start": "1906500",
    "end": "1912700"
  },
  {
    "text": "port to reach a certain State and all these functions that are in the pods direct the pods package probably",
    "start": "1912700",
    "end": "1918440"
  },
  {
    "text": "shouldn't be in saging but someone would need to look at all of these and decide which ones are useful which ones should",
    "start": "1918440",
    "end": "1926480"
  },
  {
    "text": "be something that kind of become a stable API under staging we don't guarantee it API stability but it's not",
    "start": "1926480",
    "end": "1934220"
  },
  {
    "text": "nice to to change it because it will break some people so",
    "start": "1934220",
    "end": "1939559"
  },
  {
    "text": "it would be more work to move it under staging my hope would be that if we do",
    "start": "1939559",
    "end": "1944960"
  },
  {
    "text": "it and someone is willing to help us with that but we get more people help us maintain this software and that benefits",
    "start": "1944960",
    "end": "1952279"
  },
  {
    "text": "into that that benefits kubernetes that benefits everyone because right now",
    "start": "1952279",
    "end": "1958279"
  },
  {
    "text": "the set of people maintaining it is fairly small and we we could certainly use more help",
    "start": "1958279",
    "end": "1965539"
  },
  {
    "text": "so if you want to get involved sick testing channel on slack is the place to",
    "start": "1965539",
    "end": "1970940"
  },
  {
    "text": "to reach out I'm watching that fairly closely I'll try to be as responsive as I can",
    "start": "1970940",
    "end": "1977419"
  },
  {
    "text": "um yeah and with that I think our time is up so I've talked a lot we have time I",
    "start": "1977419",
    "end": "1985100"
  },
  {
    "text": "hope for questions yeah sure",
    "start": "1985100",
    "end": "1990760"
  },
  {
    "text": "um",
    "start": "1991039",
    "end": "1993158"
  },
  {
    "text": "yeah yeah oh yeah I'm just curious about",
    "start": "1996559",
    "end": "2004240"
  },
  {
    "text": "um your thoughts on all of the different I think you called them I don't know if they're sub packages or what they are",
    "start": "2004240",
    "end": "2009700"
  },
  {
    "text": "um but you know I guess specifically I'm thinking of the the ET node tests versus the standard ET test does it make sense",
    "start": "2009700",
    "end": "2016659"
  },
  {
    "text": "to have those extra sub packages or would it be better if they were somehow",
    "start": "2016659",
    "end": "2022059"
  },
  {
    "text": "all merged into just having a single ete framework um I think the sub packages are useful",
    "start": "2022059",
    "end": "2027720"
  },
  {
    "text": "one of the things that they do with people or that they could do is",
    "start": "2027720",
    "end": "2033220"
  },
  {
    "text": "um have their own configuration options for example that's what's that's one aspect that's not currently particularly",
    "start": "2033220",
    "end": "2038799"
  },
  {
    "text": "clean we have an e2e framework test context that contains lots of options",
    "start": "2038799",
    "end": "2044260"
  },
  {
    "text": "that are sometimes referenced by the subtests sub packages",
    "start": "2044260",
    "end": "2050138"
  },
  {
    "text": "but if you build an end if you build a test Suite that doesn't use for sub packages and doesn't use for tests that",
    "start": "2050139",
    "end": "2056560"
  },
  {
    "text": "depend on these options you still end up with a test Suite that has a long list of command line parameters that doesn't",
    "start": "2056560",
    "end": "2061780"
  },
  {
    "text": "don't do anything so more modularity I think would be a good thing",
    "start": "2061780",
    "end": "2069540"
  },
  {
    "text": "well better better implemented modularity I think for granularity that",
    "start": "2071099",
    "end": "2076358"
  },
  {
    "text": "we have right now is okay we just need to make it cleaner and we need to re move around a",
    "start": "2076359",
    "end": "2084700"
  },
  {
    "text": "few things like the the we need to move the configuration options out of a framework into the call that actually",
    "start": "2084700",
    "end": "2090940"
  },
  {
    "text": "depends on them that would be one of the things that the contributor could do also in kubernetes",
    "start": "2090940",
    "end": "2098339"
  },
  {
    "text": "and yeah the stable API question is the other one how much of that obvious helper packages are useful in general",
    "start": "2098339",
    "end": "2105760"
  },
  {
    "text": "and are worth being in staging because they are sub-packages we can now make a",
    "start": "2105760",
    "end": "2110980"
  },
  {
    "text": "decision Case by case and gradually move things uh create internal alliances uh",
    "start": "2110980",
    "end": "2118060"
  },
  {
    "text": "important important functions and the public symbols to to smooth your transition",
    "start": "2118060",
    "end": "2123640"
  },
  {
    "text": "so we could come up with a with a with the iterative approach",
    "start": "2123640",
    "end": "2129240"
  },
  {
    "text": "okay well thanks for listening and enjoy the move Chrome",
    "start": "2135099",
    "end": "2140620"
  },
  {
    "text": "[Applause]",
    "start": "2140620",
    "end": "2144040"
  }
]