[
  {
    "text": "awesome thank you everyone so hi again welcome I am Anushka mital",
    "start": "840",
    "end": "7480"
  },
  {
    "text": "and uh I work with chainu guard as a software engineer there I have been a main uh I have been a contributor to",
    "start": "7480",
    "end": "14480"
  },
  {
    "text": "kerno for quite some time I think almost four years now I am a maintainer to one of its projects and today we have a",
    "start": "14480",
    "end": "22080"
  },
  {
    "text": "really cool panel in front of you and we're going to talk about all things kerno so kerno of course uh I'll let",
    "start": "22080",
    "end": "30000"
  },
  {
    "text": "everyone introduced themselves you know as in when we take the mic so that was for me kerno is a kubernetes native",
    "start": "30000",
    "end": "37559"
  },
  {
    "text": "policy engine but let's stop right there and understand what a policy engine is",
    "start": "37559",
    "end": "43160"
  },
  {
    "text": "first right so a policy engine to understand very easily is kind of like a",
    "start": "43160",
    "end": "50440"
  },
  {
    "text": "traffic cop a traffic cop would sort of make sure that are some you know traffic rules and regulations and people follow",
    "start": "50440",
    "end": "56719"
  },
  {
    "text": "it and they'll make sure there are no wrong entries no people not wearing seat belts people are you know abiding by",
    "start": "56719",
    "end": "63359"
  },
  {
    "text": "rules so similarly a policy engine will play the same role for your workloads",
    "start": "63359",
    "end": "69640"
  },
  {
    "text": "for your clusters a policy engine will make sure uh whatever rules you've you",
    "start": "69640",
    "end": "75280"
  },
  {
    "text": "know defined in the beginning your workload complies with it a policy",
    "start": "75280",
    "end": "81320"
  },
  {
    "text": "engine will sit on top of your workload make sure nothing wrong goes in makes sure everything is as you would expect",
    "start": "81320",
    "end": "87720"
  },
  {
    "text": "it no surprises no heart attack tax all of a sudden so that's a policy engine",
    "start": "87720",
    "end": "92840"
  },
  {
    "text": "and now what is cerno right so cerno like I said is a kuber kuber's native",
    "start": "92840",
    "end": "99240"
  },
  {
    "text": "policy engine it is a cncf incubating project which offers you multiple",
    "start": "99240",
    "end": "106520"
  },
  {
    "text": "capabilities it lets you handle validation Dynamic validation so it makes sure that whatever is going inside",
    "start": "106520",
    "end": "112960"
  },
  {
    "text": "your cluster is uh abiding by rules that you've set so if you don't want",
    "start": "112960",
    "end": "118240"
  },
  {
    "text": "something with a label XY Z that that resource does not go inside your workload apart from validation it",
    "start": "118240",
    "end": "126079"
  },
  {
    "text": "also offers you mutation generation it will help you clean up your workloads",
    "start": "126079",
    "end": "131640"
  },
  {
    "text": "and also verify images that are already inside or that are going inside your",
    "start": "131640",
    "end": "137000"
  },
  {
    "text": "clusters now that's really cool and that's actually one of the reasons why",
    "start": "137000",
    "end": "142599"
  },
  {
    "text": "you should you would want to use kerno so that's our next slide why would you want to use kerno now anyone familiar",
    "start": "142599",
    "end": "150519"
  },
  {
    "text": "with kubernetes would know what a deployment yaml looks like right because kerno is kubernetes native your policies",
    "start": "150519",
    "end": "158959"
  },
  {
    "text": "that you're supposed to write and make sure they're present in your cluster they look very similar to your regular",
    "start": "158959",
    "end": "164239"
  },
  {
    "text": "yaml so it's very easy to use it's very easy to understand and get started with it KERO offers a kerno CLI as well how",
    "start": "164239",
    "end": "172800"
  },
  {
    "text": "that helps you is um by you know letting you test your policies before you put",
    "start": "172800",
    "end": "177920"
  },
  {
    "text": "them in your cluster test them to make sure so it you know uh passes for all of your edge cases and for all resources",
    "start": "177920",
    "end": "184040"
  },
  {
    "text": "that you would expect kerno also offers auditing and Reporting capabilities that",
    "start": "184040",
    "end": "189879"
  },
  {
    "text": "means in your cluster it would help you generate a report to make sure you know",
    "start": "189879",
    "end": "195120"
  },
  {
    "text": "what's happening analyze your cluster uh and be able to understand how your",
    "start": "195120",
    "end": "200159"
  },
  {
    "text": "cluster is doing Kono has a very active Community which uh is you know always in",
    "start": "200159",
    "end": "206560"
  },
  {
    "text": "conversation about how to make things better how to make things bigger it's a project with 5K I think a little",
    "start": "206560",
    "end": "212760"
  },
  {
    "text": "more than 5K GitHub stars and there's a huge built-in policy set which uh you",
    "start": "212760",
    "end": "219000"
  },
  {
    "text": "know covers the standard use cases of course but also uh more than that now",
    "start": "219000",
    "end": "225120"
  },
  {
    "text": "the last reason which we'll cover a little later in the session is cerno is expanding Beyond kubernetes and that",
    "start": "225120",
    "end": "232280"
  },
  {
    "text": "means it's looking to help you uh ensure compliance",
    "start": "232280",
    "end": "237879"
  },
  {
    "text": "security uh look at govern governance uh you know be a policy engine in not just",
    "start": "237879",
    "end": "243799"
  },
  {
    "text": "kubernetes but beyond that with that I'll let sain take over the",
    "start": "243799",
    "end": "252879"
  },
  {
    "text": "features hello everyone um my name is sain Agarwal and I'm working as a Solutions architect at",
    "start": "253400",
    "end": "260120"
  },
  {
    "text": "nirmata so since you have seen like why we use Kono and how we can use Kono and",
    "start": "260120",
    "end": "266800"
  },
  {
    "text": "where where are the use cases that we can use Kono let's go and try to go deeper into the concept and see how a",
    "start": "266800",
    "end": "274320"
  },
  {
    "text": "noo C no user can author a policy right but uh before that let's first see what",
    "start": "274320",
    "end": "281160"
  },
  {
    "text": "the structure of a policy looks like right so you as you can see here right",
    "start": "281160",
    "end": "287120"
  },
  {
    "text": "uh a policy contains multiple rules right and uh inside each rule there are two subsections where one of the section",
    "start": "287120",
    "end": "294080"
  },
  {
    "text": "tells you about what are the resources with which it has to match right so it has a match and Es section which defines",
    "start": "294080",
    "end": "302160"
  },
  {
    "text": "uh which resources you want to apply this policy to or or what are the resources which you want to exclude from",
    "start": "302160",
    "end": "307400"
  },
  {
    "text": "the policy execution right whereas on the other section we have the type of policy like validate mutate generate",
    "start": "307400",
    "end": "314880"
  },
  {
    "text": "verify images so these uh these type of policies actually con contains the",
    "start": "314880",
    "end": "320680"
  },
  {
    "text": "condition also uh like what are the conditions which you want to match and then based on that take an action right",
    "start": "320680",
    "end": "327759"
  },
  {
    "text": "so here is a sample policy which actually takes care of all those uh structure",
    "start": "327759",
    "end": "335120"
  },
  {
    "text": "U yeah so you can see that in the spec there's a validation failure action",
    "start": "335120",
    "end": "340360"
  },
  {
    "text": "which can be either enforced or audit so in case of audit it will just report your uh policy violation whereas in case",
    "start": "340360",
    "end": "347919"
  },
  {
    "text": "of enforce it will block the request at the admission itself right and then then",
    "start": "347919",
    "end": "353160"
  },
  {
    "text": "there is a background uh flag which will take care of the background scans right",
    "start": "353160",
    "end": "358560"
  },
  {
    "text": "and and as you can see see there are rules which Define the match and excre condition and the validate condition so",
    "start": "358560",
    "end": "364479"
  },
  {
    "text": "now let's uh so we have prepared a small demo let's go and see everything in",
    "start": "364479",
    "end": "370000"
  },
  {
    "text": "action right so so what I've done is a small uh",
    "start": "370000",
    "end": "378759"
  },
  {
    "text": "cluster running on my local right and uh I have Kono deployed on it so if I just",
    "start": "378759",
    "end": "385360"
  },
  {
    "text": "do policies uh currently there's no policy right and let's first understand",
    "start": "385360",
    "end": "390720"
  },
  {
    "text": "what happens if there's no policy in your system right and uh what all harms can actually happen with your cluster so",
    "start": "390720",
    "end": "397840"
  },
  {
    "text": "what I'm going to do is I'm just going to run one simple pod right uh which is",
    "start": "397840",
    "end": "403319"
  },
  {
    "text": "using uh uh image a demo image and then what it is essentially doing is it is",
    "start": "403319",
    "end": "409759"
  },
  {
    "text": "mounting a proc hyphen 1 hyphen NS Mount volume right and uh then then it's doing",
    "start": "409759",
    "end": "417759"
  },
  {
    "text": "something so let's let's go and and execute this Command right so you can",
    "start": "417759",
    "end": "423360"
  },
  {
    "text": "see here there's a security context saying that privilege true right so what it can actually do is it is mounting to",
    "start": "423360",
    "end": "429720"
  },
  {
    "text": "the root volume of your node right and then if I just do LS proc right you can",
    "start": "429720",
    "end": "436160"
  },
  {
    "text": "list down all these processes that are running there right and you can even uh tamper with the init process right which",
    "start": "436160",
    "end": "443360"
  },
  {
    "text": "can bring down your whole system right so how you can actually uh mitigate all these problem and how you can block such",
    "start": "443360",
    "end": "449720"
  },
  {
    "text": "kind of a pods into your system right because this is very harmful right so",
    "start": "449720",
    "end": "455360"
  },
  {
    "text": "now let's do one thing let me uh deploy one policy which actually doesn't allow",
    "start": "455360",
    "end": "461240"
  },
  {
    "text": "these kind of parts to go in right so we have a policy called privilege escalations policy so",
    "start": "461240",
    "end": "469240"
  },
  {
    "text": "what it will do is it will not allow any pod to go inside qan it is uh which has",
    "start": "469240",
    "end": "475560"
  },
  {
    "text": "allow privilege escalation as true right so it is checking for this particular configuration in your uh manifest saying",
    "start": "475560",
    "end": "482319"
  },
  {
    "text": "that allow privilege escalation should be false right let's go ahead and apply this",
    "start": "482319",
    "end": "490919"
  },
  {
    "text": "policy right and let's see whether this policy is",
    "start": "490919",
    "end": "496400"
  },
  {
    "text": "there so you can see that policy is there right now again let's go and deploy the same P that I was trying to",
    "start": "496400",
    "end": "503039"
  },
  {
    "text": "deploy right so if I hit this uh you'll see that it is not getting deployed now",
    "start": "503039",
    "end": "509280"
  },
  {
    "text": "I it says that your the configurations that you are giving doesn't comply with the policies that you have defined right",
    "start": "509280",
    "end": "515680"
  },
  {
    "text": "and it will not allow that part to get deployed on your CST cluster right so this is one such example of validating",
    "start": "515680",
    "end": "522560"
  },
  {
    "text": "policy where it is validating a certain configuration for your yaml manifest now",
    "start": "522560",
    "end": "527640"
  },
  {
    "text": "let's take another example of a mutate uh kind of an uh use case where let's",
    "start": "527640",
    "end": "532920"
  },
  {
    "text": "say in an organization you wants uh certain labels to be present on each and every resource of your CES cluster",
    "start": "532920",
    "end": "540240"
  },
  {
    "text": "right uh for example uh Finance labels like or or accounting labels has to be",
    "start": "540240",
    "end": "546880"
  },
  {
    "text": "present right so what we have done is uh there is a policy called add labels",
    "start": "546880",
    "end": "552880"
  },
  {
    "text": "right so in this policy it's a very simple policy which is a mutate type of",
    "start": "552880",
    "end": "558519"
  },
  {
    "text": "a policy which actually adds an label called team backend to all my resources",
    "start": "558519",
    "end": "564760"
  },
  {
    "text": "which I'm deploying and the match condition is that it will always apply for a source of kind pod service config",
    "start": "564760",
    "end": "571320"
  },
  {
    "text": "map and secret right now let's go ahead and try to deploy this",
    "start": "571320",
    "end": "579200"
  },
  {
    "text": "policy right so I have deployed this policy and let's me let me get the",
    "start": "583839",
    "end": "591000"
  },
  {
    "text": "policies again so it is deployed and uh I have a normal application which is uh let's",
    "start": "591000",
    "end": "599399"
  },
  {
    "text": "give it a name as payment app which is running in a banking name space right and currently it is having a label",
    "start": "599399",
    "end": "605279"
  },
  {
    "text": "called payment app right in the metadata label is payment app right now I'll",
    "start": "605279",
    "end": "610880"
  },
  {
    "text": "deploy this",
    "start": "610880",
    "end": "614000"
  },
  {
    "text": "application",
    "start": "620640",
    "end": "623640"
  },
  {
    "text": "right so let it so it is running now and if I just do K describe so by the way",
    "start": "626680",
    "end": "633839"
  },
  {
    "text": "I'm using an abbreviation here uh as an",
    "start": "633839",
    "end": "638200"
  },
  {
    "text": "alas so when I describe this pod and if I just check for the labels that are",
    "start": "647720",
    "end": "653560"
  },
  {
    "text": "appeared you will see that it is having a label called team backend this was not",
    "start": "653560",
    "end": "658920"
  },
  {
    "text": "pass in the yaml Manifest right but still you will see that it is there right so in this way you can actually",
    "start": "658920",
    "end": "665399"
  },
  {
    "text": "mutate certain configurations in your yaml manifest at the time of admission right you can add certain configurations",
    "start": "665399",
    "end": "671880"
  },
  {
    "text": "you can uh change certain configurations right so this is one such example of how",
    "start": "671880",
    "end": "677120"
  },
  {
    "text": "you can mutate resources on the uh fly right now let's take another example of",
    "start": "677120",
    "end": "683320"
  },
  {
    "text": "generating the configuration or generating adjust in time configurations whenever such any event happen happens",
    "start": "683320",
    "end": "689760"
  },
  {
    "text": "right so for example let's take an example of a scenario where you want to",
    "start": "689760",
    "end": "696480"
  },
  {
    "text": "create certain Network policies whenever a new namespace is being created in a cetes cluster right and by default you",
    "start": "696480",
    "end": "703079"
  },
  {
    "text": "want to deny all the uh Ingress and ESS uh to that names space right so what we",
    "start": "703079",
    "end": "709000"
  },
  {
    "text": "have done is we have one created one generate policy which is called add",
    "start": "709000",
    "end": "714959"
  },
  {
    "text": "Network policy right and what it does typically is whenever a resource of kind",
    "start": "714959",
    "end": "721040"
  },
  {
    "text": "namespace is being created in your kubernetes cluster it will generate a network policy for you you will see that",
    "start": "721040",
    "end": "727519"
  },
  {
    "text": "there's a yaml construct for Network policy which denies all the Ingress and egress to your uh name space",
    "start": "727519",
    "end": "737440"
  },
  {
    "text": "right let's apply this policy",
    "start": "737600",
    "end": "742560"
  },
  {
    "text": "so you'll see that uh the policy is deployed right and uh it is having a",
    "start": "750600",
    "end": "756120"
  },
  {
    "text": "background as false now let's try and create some namespace right so before that I'll just",
    "start": "756120",
    "end": "762680"
  },
  {
    "text": "do namespace and currently there are certain name spaces that are running",
    "start": "762680",
    "end": "767800"
  },
  {
    "text": "here right let me create one test name space uh I'll just give a test name to",
    "start": "767800",
    "end": "773079"
  },
  {
    "text": "the name space",
    "start": "773079",
    "end": "776720"
  },
  {
    "text": "right so by default I've not given any network policies to this test name space",
    "start": "779399",
    "end": "784639"
  },
  {
    "text": "right but let's see is there any network policy in this namespace or",
    "start": "784639",
    "end": "789760"
  },
  {
    "text": "not you'll see that there's one Nam space uh one network policy called default deny now part right uh let's say",
    "start": "794000",
    "end": "801959"
  },
  {
    "text": "someone gets a malicious uh access to your cluster and tries to delete that Network policy let me do it",
    "start": "801959",
    "end": "810680"
  },
  {
    "text": "so I've deleted this network policy as you can see right uh it says it is deleted let's again try to query this",
    "start": "818720",
    "end": "826320"
  },
  {
    "text": "what you see the network policy is still there it still created right so that's",
    "start": "826320",
    "end": "831519"
  },
  {
    "text": "fa it is temper proof you can't temper with the generated resources which is being generated via generate policy",
    "start": "831519",
    "end": "837720"
  },
  {
    "text": "right so this these are couple of examples how you can actually uh create",
    "start": "837720",
    "end": "842920"
  },
  {
    "text": "the configurations or validate or mutate the configurations on a fly right so",
    "start": "842920",
    "end": "848680"
  },
  {
    "text": "these are some examples then there are other examples like image verification where let's say you have signed your",
    "start": "848680",
    "end": "855720"
  },
  {
    "text": "images with some uh encryption key and and you are using let's say uh AWS",
    "start": "855720",
    "end": "861600"
  },
  {
    "text": "signer or notation for signing your images and putting it in the uh registry",
    "start": "861600",
    "end": "867480"
  },
  {
    "text": "uh for for the images and then you want to actually verify whether these images are coming from The Trusted sources or",
    "start": "867480",
    "end": "874399"
  },
  {
    "text": "not right so that's where you can actually write a policy for the image verification and make sure that what",
    "start": "874399",
    "end": "880480"
  },
  {
    "text": "whatever images that are getting deployed in your system is verified right and similarly you can attach or",
    "start": "880480",
    "end": "886360"
  },
  {
    "text": "attest the S bombs which are created for your images and then you can verify those",
    "start": "886360",
    "end": "891399"
  },
  {
    "text": "also then another type of policy is a cleanup policy which is uh pretty much",
    "start": "891399",
    "end": "896480"
  },
  {
    "text": "useful in the case when you want to maintain the hygiene of your cluster right you want to De uh you want to",
    "start": "896480",
    "end": "901880"
  },
  {
    "text": "delete certain uh stale configurations from your system or you want to delete certain Crown jobs which are or or the",
    "start": "901880",
    "end": "908320"
  },
  {
    "text": "background jobs which are already being done right so for all those hygiene kind of uh use cases you can use cleanup",
    "start": "908320",
    "end": "914399"
  },
  {
    "text": "policies and you can actually delete those resources from your cluster right now we have talked a lot about uh the",
    "start": "914399",
    "end": "921399"
  },
  {
    "text": "KERO and type of policies that we can write on on Kon right but also let's talk about the valid validating",
    "start": "921399",
    "end": "928199"
  },
  {
    "text": "admission policy that was actually a alternate solution for web books that uh",
    "start": "928199",
    "end": "934120"
  },
  {
    "text": "that are used for the admission use cases right so the admission validating",
    "start": "934120",
    "end": "939639"
  },
  {
    "text": "admitting uh admitting policies were actually first released in the uh version 1.26 of kubernetes and now it is",
    "start": "939639",
    "end": "946920"
  },
  {
    "text": "in a stable condition with 1. uh 30 so it uses the cell language for for",
    "start": "946920",
    "end": "953519"
  },
  {
    "text": "actually validating your resources against certain conditions and it overall reduces the comp lexity of",
    "start": "953519",
    "end": "959680"
  },
  {
    "text": "admission B books which introduce certain latencies to your system right so that's where like validating",
    "start": "959680",
    "end": "966360"
  },
  {
    "text": "admission policies comes into picture right and and typically how you can author a validating admission policy so",
    "start": "966360",
    "end": "972079"
  },
  {
    "text": "there are two uh two configurations to it uh one is the validating admission policy which defines the uh the abstract",
    "start": "972079",
    "end": "979319"
  },
  {
    "text": "logic of which resource you want to apply it to and what is the condition uh that it is going to check right whereas",
    "start": "979319",
    "end": "985959"
  },
  {
    "text": "the other uh configuration is validating admission policy binding right so that you can scope those resources to certain",
    "start": "985959",
    "end": "993480"
  },
  {
    "text": "conditions for example you only want to apply this policy to all those resources which are having a certain labels",
    "start": "993480",
    "end": "1000240"
  },
  {
    "text": "attached to it right so with with the binding you can actually scope that particular resource to a particular",
    "start": "1000240",
    "end": "1006480"
  },
  {
    "text": "policy and then you can run these uh validations right and the best part is",
    "start": "1006480",
    "end": "1011680"
  },
  {
    "text": "that kot does support these validating admission policies also right so you can actually use Kono C for validating all",
    "start": "1011680",
    "end": "1018959"
  },
  {
    "text": "sear use cases and even there is a quick demo which you can uh use in the kuo",
    "start": "1018959",
    "end": "1024280"
  },
  {
    "text": "playground to play around to play with the validating admission policies so typically uh all these are",
    "start": "1024280",
    "end": "1032038"
  },
  {
    "text": "fine but how you will do the reporting for all these use cases right so that's where like validating admission policies",
    "start": "1032039",
    "end": "1037720"
  },
  {
    "text": "does support the policy reports you can even generate the policy reports for the same and you can visualize it right so",
    "start": "1037720",
    "end": "1044319"
  },
  {
    "text": "that's where like you can just uh mention you can just create the configurations for the Sim and it will will actually show you the the whole",
    "start": "1044319",
    "end": "1051360"
  },
  {
    "text": "report against your resources which it is getting applied to right so with this",
    "start": "1051360",
    "end": "1056720"
  },
  {
    "text": "uh I I'll rest my case and I'll I'll ask uh a to join yeah thank",
    "start": "1056720",
    "end": "1064600"
  },
  {
    "text": "you hi everyone good to see the full room and I hope you are um taking",
    "start": "1067320",
    "end": "1073320"
  },
  {
    "text": "benefit of the kubernetes uh KU thing uh I I come from Razer pay uh Razer pay is",
    "start": "1073320",
    "end": "1079919"
  },
  {
    "text": "one of the Payment Solutions company it's like One Stop Money Movement platform for all the businesses so if",
    "start": "1079919",
    "end": "1087200"
  },
  {
    "text": "you are either working in a startup or you are thinking of restarting your own startup and if you want to collect money",
    "start": "1087200",
    "end": "1093480"
  },
  {
    "text": "if you want to pay to your uh pay salary to your employees if you want to pay to your vendors razor pay is a solution to",
    "start": "1093480",
    "end": "1099799"
  },
  {
    "text": "be I'll just give a brief uh uh idea about the infrastructure that we manage",
    "start": "1099799",
    "end": "1106039"
  },
  {
    "text": "so we have about I think a little more than 60 clusters uh we have about 3,000 noes uh",
    "start": "1106039",
    "end": "1112720"
  },
  {
    "text": "a little more than that uh managing 25,000 cores U I think Way Beyond 100",
    "start": "1112720",
    "end": "1119480"
  },
  {
    "text": "terabytes of primary memory 50 paby of storage 70,000 pods on a regular basis",
    "start": "1119480",
    "end": "1126720"
  },
  {
    "text": "of course it's Dynamic scaling up and scaling down based on the traffic and we",
    "start": "1126720",
    "end": "1131799"
  },
  {
    "text": "are using kerno so I'll invite my friend soji uh who works uh at ripe uh with me",
    "start": "1131799",
    "end": "1138840"
  },
  {
    "text": "I am heading R devops and it functions at rip so please feel free to reach out to us if you want to know more about how",
    "start": "1138840",
    "end": "1145760"
  },
  {
    "text": "we are using KERO or anything else so over to",
    "start": "1145760",
    "end": "1150720"
  },
  {
    "text": "SOI good evening folks my name is soji I work as a staff devop engineer so as aash mentioned we are",
    "start": "1153760",
    "end": "1161159"
  },
  {
    "text": "using uh kues for running majority of our workloads uh more than 95% of our",
    "start": "1161159",
    "end": "1166880"
  },
  {
    "text": "workloads are running in kadas so it is very important for us to make sure that this infra is secure and as",
    "start": "1166880",
    "end": "1174360"
  },
  {
    "text": "part of K security we wanted to make sure that uh there is a policy engine using which we can enforce infra as well",
    "start": "1174360",
    "end": "1181520"
  },
  {
    "text": "as security best practices so initially we were using",
    "start": "1181520",
    "end": "1187559"
  },
  {
    "text": "another policy engine which is also open source called Opa um however we faced some challenges",
    "start": "1187559",
    "end": "1194080"
  },
  {
    "text": "due to which we started looking for Alternatives so some of these challenges are listed",
    "start": "1194080",
    "end": "1200000"
  },
  {
    "text": "here basically any role in Opa needs to be written in a Kore language called",
    "start": "1200000",
    "end": "1205679"
  },
  {
    "text": "Rego and Rego comes with its own challenges and complexities especially the learning",
    "start": "1205679",
    "end": "1211240"
  },
  {
    "text": "curve for Rego was very high and debugging policies especially complex",
    "start": "1211240",
    "end": "1217240"
  },
  {
    "text": "policies are challenging and time consuming so what we have seen is because of these challenges we have seen",
    "start": "1217240",
    "end": "1223480"
  },
  {
    "text": "very less adoption within the organization so one thing that we wanted to make sure is that it's not not only",
    "start": "1223480",
    "end": "1229440"
  },
  {
    "text": "devops or infr team contributing to these policies but everyone within the organization is able to write policies",
    "start": "1229440",
    "end": "1236679"
  },
  {
    "text": "very fast that was not happening so based on these learnings from Opa we",
    "start": "1236679",
    "end": "1242679"
  },
  {
    "text": "started looking for an alternative tool and we outlined certain requirements",
    "start": "1242679",
    "end": "1247880"
  },
  {
    "text": "that this new tool should come with and they are listed here so it should be",
    "start": "1247880",
    "end": "1253559"
  },
  {
    "text": "highly scalable since every request that is going to Kus control plane is inter",
    "start": "1253559",
    "end": "1258600"
  },
  {
    "text": "accepted by these admission controllers it should be highly scalable any latency addition or downtime due to these",
    "start": "1258600",
    "end": "1265840"
  },
  {
    "text": "controllers can impact production traffic so we wanted that to be highly",
    "start": "1265840",
    "end": "1271120"
  },
  {
    "text": "scalable also we should be able to write policies without actually writing any",
    "start": "1271120",
    "end": "1276880"
  },
  {
    "text": "code maybe there could be 5 percentage of use cases where we will need to write complex policies and even in that case",
    "start": "1276880",
    "end": "1284360"
  },
  {
    "text": "we should be able to write policies in our language of choice so within racer pay we mostly use Python and goang for",
    "start": "1284360",
    "end": "1292520"
  },
  {
    "text": "automation so preferably we wanted to use these two languages whenever we are writing these complex",
    "start": "1292520",
    "end": "1298799"
  },
  {
    "text": "policies also there should be pre return policies available in open source we can",
    "start": "1298799",
    "end": "1305159"
  },
  {
    "text": "so that we can just lift and shift instead of writing these policies from scratch also the community support",
    "start": "1305159",
    "end": "1311279"
  },
  {
    "text": "should be good so based on these requirements we started some evaluation",
    "start": "1311279",
    "end": "1318080"
  },
  {
    "text": "in op based on whatever policy engines available in open source and what we",
    "start": "1318080",
    "end": "1324279"
  },
  {
    "text": "found is that kerno is satisfying almost all of these requirements uh Keno is highly scalable",
    "start": "1324279",
    "end": "1332279"
  },
  {
    "text": "you can scale it horizontally and vertically in many components uh you can write rules in",
    "start": "1332279",
    "end": "1338880"
  },
  {
    "text": "yaml so don't so you don't need to write code for simple policies and for complex",
    "start": "1338880",
    "end": "1344600"
  },
  {
    "text": "use cases it provide a service call so basically you can write policies in",
    "start": "1344600",
    "end": "1349720"
  },
  {
    "text": "yamil and from yamil you can make an external API code and you can write your",
    "start": "1349720",
    "end": "1355200"
  },
  {
    "text": "policy language in whatever language that you prefer So based on the response",
    "start": "1355200",
    "end": "1361400"
  },
  {
    "text": "received from that external API call you can Denay or accept request uh in your",
    "start": "1361400",
    "end": "1367640"
  },
  {
    "text": "policy also Community Support was very good so we decided to go with k no and",
    "start": "1367640",
    "end": "1373720"
  },
  {
    "text": "we implemented that in our production so how we are leveraging",
    "start": "1373720",
    "end": "1379840"
  },
  {
    "text": "kerno within racer pay so we have mainly two use cases one is security and second",
    "start": "1379840",
    "end": "1385760"
  },
  {
    "text": "one infra best practices so we have lot of rules written for enforcing both of",
    "start": "1385760",
    "end": "1392039"
  },
  {
    "text": "these and mostly Port security policies you can see we are denying any kind of",
    "start": "1392039",
    "end": "1397799"
  },
  {
    "text": "privilege escalation we are denying external Registries we are denying host Network",
    "start": "1397799",
    "end": "1403400"
  },
  {
    "text": "PS Etc and as infra best practices we are enforcing C view Memory request and",
    "start": "1403400",
    "end": "1410240"
  },
  {
    "text": "limits um we we have enforcement for certain DNS policies um",
    "start": "1410240",
    "end": "1417320"
  },
  {
    "text": "Etc so I would also like to Showcase how one use case where we are racer pay is",
    "start": "1417320",
    "end": "1424880"
  },
  {
    "text": "using uh complex policies so recently racer Bay started migrating its workload",
    "start": "1424880",
    "end": "1430080"
  },
  {
    "text": "to graviton as part part of cost optimization and taking benefits of uh",
    "start": "1430080",
    "end": "1435240"
  },
  {
    "text": "lesser latencies graviton is providing so why while we were migrating so if you are aware if you want your application",
    "start": "1435240",
    "end": "1442400"
  },
  {
    "text": "containers to run in both graviton as well as AMD instances your image should support multiarch so basically your",
    "start": "1442400",
    "end": "1449760"
  },
  {
    "text": "image manifest should have both m64 image as well as amd64 images so while",
    "start": "1449760",
    "end": "1455200"
  },
  {
    "text": "we were migrating our existing workloads to multi uh we also wanted to make sure",
    "start": "1455200",
    "end": "1460559"
  },
  {
    "text": "that any new application that is getting deployed also follow this multiarch uh",
    "start": "1460559",
    "end": "1465760"
  },
  {
    "text": "images um so in order to do that we have written a policy so you can see this",
    "start": "1465760",
    "end": "1471679"
  },
  {
    "text": "policy here so you can see we are making actually an external API call uh where",
    "start": "1471679",
    "end": "1477960"
  },
  {
    "text": "it is calling V1 / check image Arc and this policy this external API",
    "start": "1477960",
    "end": "1484360"
  },
  {
    "text": "call is implemented in goolan and based on the result returned from that check",
    "start": "1484360",
    "end": "1490120"
  },
  {
    "text": "image AR API if it is returning false then we are denying the",
    "start": "1490120",
    "end": "1496080"
  },
  {
    "text": "request you can see the goang implementation of the policy Lo logic here we are using a package called Crane",
    "start": "1496080",
    "end": "1503880"
  },
  {
    "text": "and the images which are part of the deployments or state full set they will be passed to this endpoint as a list we",
    "start": "1503880",
    "end": "1511159"
  },
  {
    "text": "are going through each of these image list and then check we if if it supports both the architectures if it is not we",
    "start": "1511159",
    "end": "1517720"
  },
  {
    "text": "are denying the request so overall within rer pay uh",
    "start": "1517720",
    "end": "1525039"
  },
  {
    "text": "kerno has helped us to enhance the security of our k infra since the policies are easy to write we have seen",
    "start": "1525039",
    "end": "1532120"
  },
  {
    "text": "greater adoption we are also exploring uh Advanced use cases of KERO",
    "start": "1532120",
    "end": "1537840"
  },
  {
    "text": "like image signing and supply chain security that's it um so in the next",
    "start": "1537840",
    "end": "1544520"
  },
  {
    "text": "slide V will talk more about how K can be used more than a policy engine",
    "start": "1544520",
    "end": "1552080"
  },
  {
    "text": "or yeah so so far we have seen how kerno can be used to ensure Automation and",
    "start": "1552159",
    "end": "1558320"
  },
  {
    "text": "security and ous cluster using it different capabilities like validation generation and mutation and to summarize",
    "start": "1558320",
    "end": "1565720"
  },
  {
    "text": "kerno is a very simpl to use tool with a large uh variety of policies which can",
    "start": "1565720",
    "end": "1570760"
  },
  {
    "text": "cover all of your standard use cases it also does not require any coding experience to begin with and it is",
    "start": "1570760",
    "end": "1576440"
  },
  {
    "text": "kubernetes native which means it works flawlessly with all of your other kubernetes components but as you can see",
    "start": "1576440",
    "end": "1581520"
  },
  {
    "text": "in the last point it is not portable and that is because of how we started out as a project so keros started out as a uh",
    "start": "1581520",
    "end": "1589760"
  },
  {
    "text": "kubernetes Dynamic admission controller and we kept on adding more features on top of it to fulfill user requirements",
    "start": "1589760",
    "end": "1595640"
  },
  {
    "text": "and that had a side effect that is a kerno is now very coupled with kubernetes and honestly it should not",
    "start": "1595640",
    "end": "1601880"
  },
  {
    "text": "really be that way because any of the guarantees and design principles of KERO does not really depend on kubernetes so",
    "start": "1601880",
    "end": "1608799"
  },
  {
    "text": "to fix that what we decided to do is cancel should I",
    "start": "1608799",
    "end": "1616000"
  },
  {
    "text": "go let me find it",
    "start": "1616320",
    "end": "1620240"
  },
  {
    "text": "um thank you yeah so what was to fix that what we decided to do is we decided",
    "start": "1629360",
    "end": "1635240"
  },
  {
    "text": "to take a step back and create a new engine from scratch which will build on top of all the design features from",
    "start": "1635240",
    "end": "1641720"
  },
  {
    "text": "kerno like Simplicity and like no coding requirement but it will add portability and like more expressive syntax such as",
    "start": "1641720",
    "end": "1648200"
  },
  {
    "text": "use of cell and James part to it and we came up with a new engine called kerno Json which U Builds on top of the design",
    "start": "1648200",
    "end": "1654640"
  },
  {
    "text": "philosophy of kerno and adds a more expressive syntax on it so to understand",
    "start": "1654640",
    "end": "1659720"
  },
  {
    "text": "that better let's look at some examples so on your left you will see a kerno cluster policy and on your right there",
    "start": "1659720",
    "end": "1666039"
  },
  {
    "text": "is a kerno Json validation policy they look very similar but if you look at the match block you will realize that um",
    "start": "1666039",
    "end": "1672679"
  },
  {
    "text": "Kerner uses the math syntax where you have to specify the resource and kind but in the validation policy you have to",
    "start": "1672679",
    "end": "1679559"
  },
  {
    "text": "specify exactly what you'd want to see um in the yaml object so if you want to match uh a deployment using it yaml you",
    "start": "1679559",
    "end": "1687600"
  },
  {
    "text": "have to specify the root U Keys like API version and kind and whenever the validation policy sees those keys it",
    "start": "1687600",
    "end": "1693880"
  },
  {
    "text": "will match the resource and for as another example you can see the difference between um validate pattern",
    "start": "1693880",
    "end": "1700039"
  },
  {
    "text": "in kerno and kerno Json assert logic so the logic um plays out here as well",
    "start": "1700039",
    "end": "1705640"
  },
  {
    "text": "where you have to specify the spec root key in the check block but you will see there's a special syntax um in",
    "start": "1705640",
    "end": "1711559"
  },
  {
    "text": "parenthesis where whenever you put a an expression inside a parenthesis that is either um um evaluated using a James",
    "start": "1711559",
    "end": "1719840"
  },
  {
    "text": "paath engine or a cell engine based on what you prefer and it will be matched the output of that expression will be",
    "start": "1719840",
    "end": "1725159"
  },
  {
    "text": "matched against the left the right side value so it it will allow you to write very simple policies but you can also",
    "start": "1725159",
    "end": "1731760"
  },
  {
    "text": "write very complicated exp uh Expressions if you want using cell and",
    "start": "1731760",
    "end": "1736840"
  },
  {
    "text": "James paath and both of the engines are very powerful to write anything you can express all of your needs in that um",
    "start": "1736840",
    "end": "1742919"
  },
  {
    "text": "another example you can see is that kerno supports this um this feature called a forish loop where you can apply",
    "start": "1742919",
    "end": "1749399"
  },
  {
    "text": "your validation Expressions on every single element of a array or an object",
    "start": "1749399",
    "end": "1754640"
  },
  {
    "text": "and to do that in validating policy we have our special syntax called with as",
    "start": "1754640",
    "end": "1759679"
  },
  {
    "text": "you can see in the second last line there's a Sly backet and a DOT and whatever object you put in that it will",
    "start": "1759679",
    "end": "1765159"
  },
  {
    "text": "Loop over all of them and all the assertion that comes Beyond uh after it it will apply to all of the",
    "start": "1765159",
    "end": "1770679"
  },
  {
    "text": "elements um in your object and putting that all together you will see there's a policy with the match blog that is",
    "start": "1770679",
    "end": "1776679"
  },
  {
    "text": "matching all the ECS task definition in AWS and after that it will apply to all",
    "start": "1776679",
    "end": "1782760"
  },
  {
    "text": "of the E task definition to check that the network mode on those task definition is set to a AWS VPC you can",
    "start": "1782760",
    "end": "1789360"
  },
  {
    "text": "see this policy can be used on in any AWS config so this is an example of how you can use K Json outside of just",
    "start": "1789360",
    "end": "1795519"
  },
  {
    "text": "kubernetes um kerno Json is the the complete tool in itself but you can also use it to create another tools and we",
    "start": "1795519",
    "end": "1803080"
  },
  {
    "text": "have done the same we have created two new tools from K Json one of them is called chainsaw and another is an nvoy",
    "start": "1803080",
    "end": "1809000"
  },
  {
    "text": "plugin let's go a little deep into that using K Json engine we have created a",
    "start": "1809000",
    "end": "1814760"
  },
  {
    "text": "new end to end declarative testing tool which can be used to test any of your cubar controller and it follows the same",
    "start": "1814760",
    "end": "1820799"
  },
  {
    "text": "design philosophy as kerno where you can just declarative declaratively State what resource you want to create and you",
    "start": "1820799",
    "end": "1827039"
  },
  {
    "text": "can also assert the state you want to see in the cluster so here in in the example in the create block we are",
    "start": "1827039",
    "end": "1832799"
  },
  {
    "text": "creating a config map and then then we're asserting that the config map is properly created and it is a very simple",
    "start": "1832799",
    "end": "1839240"
  },
  {
    "text": "syntax which is very easy to get started with but it also supports very complicated conditions as well so for",
    "start": "1839240",
    "end": "1845039"
  },
  {
    "text": "example let's say you want to have complex cases like let's just say take a simple case where you want to ensure",
    "start": "1845039",
    "end": "1850679"
  },
  {
    "text": "that the number of replicas is more than three any number more than three works so you can use James path expression to",
    "start": "1850679",
    "end": "1856120"
  },
  {
    "text": "use to um fulfill that condition and you can also Loop over all your containers everything that is possible using James",
    "start": "1856120",
    "end": "1862720"
  },
  {
    "text": "path and cell is also possible using KERO chainsaw and it is very flexible",
    "start": "1862720",
    "end": "1868080"
  },
  {
    "text": "and simple at the same time um the another tool that we created is an external authorization filter for Envoy",
    "start": "1868080",
    "end": "1876039"
  },
  {
    "text": "so Envoy allows you to um delegate all your requests of to any external",
    "start": "1876039",
    "end": "1881440"
  },
  {
    "text": "authorization server to make sure that the request is correct before moving forward so what we did is we used the",
    "start": "1881440",
    "end": "1887360"
  },
  {
    "text": "external API um and we coupled that with KERO Json and we created this server",
    "start": "1887360",
    "end": "1893600"
  },
  {
    "text": "which will watch on kerno Json policies and then it will deny or allows those",
    "start": "1893600",
    "end": "1899080"
  },
  {
    "text": "traffic based on the policy content right so to look at it there's an example where we are creating some",
    "start": "1899080",
    "end": "1905480"
  },
  {
    "text": "variables based on the object we receive we're checking some headers we're passing them and based on the header",
    "start": "1905480",
    "end": "1910799"
  },
  {
    "text": "based on whether the request authenticated via sending an allow response in this case you can send",
    "start": "1910799",
    "end": "1915919"
  },
  {
    "text": "whatever response you want everything you can do it is a very expressive setx you can use all different um complicated",
    "start": "1915919",
    "end": "1922360"
  },
  {
    "text": "cell expression in this and it is very simple as well at the same time so to summarize I think we have",
    "start": "1922360",
    "end": "1928600"
  },
  {
    "text": "finally reached the goal of making ker no available to outside uh just kubernetes so we have still managed to",
    "start": "1928600",
    "end": "1936080"
  },
  {
    "text": "keep the Simplicity and no coding requirement of uh kerno but we have also added portability to it and we have",
    "start": "1936080",
    "end": "1942519"
  },
  {
    "text": "provided more freedom for policy author by adding support for sell and cell is something that kubernetes is adopting",
    "start": "1942519",
    "end": "1948480"
  },
  {
    "text": "everywhere so it is good for uh us as well because everyone who's going to use kubernetes and um anywhere else it will",
    "start": "1948480",
    "end": "1955240"
  },
  {
    "text": "learn sell like anyways in the future so that's good um to conclude kerno is a",
    "start": "1955240",
    "end": "1960519"
  },
  {
    "text": "policy as a code tool which um ensures you which helps you to automate and to",
    "start": "1960519",
    "end": "1965760"
  },
  {
    "text": "ensure security and Automation in your cluster it has different capabilities like validate mutate generate cleanup we looked at that in this presentation you",
    "start": "1965760",
    "end": "1972399"
  },
  {
    "text": "can also create policy reports using kerno and we have this new testing tool called chainsaw and now you can use",
    "start": "1972399",
    "end": "1978279"
  },
  {
    "text": "kerno on any Json payload right and if you would like to talk to us more about",
    "start": "1978279",
    "end": "1983399"
  },
  {
    "text": "kerno or other KERO related project you can find us at exhibition Hall 1B we have a booth going on right now and we",
    "start": "1983399",
    "end": "1990240"
  },
  {
    "text": "will still have a booth tomorrow in the second half you'll find us at table number 4 and here's a QR code to our",
    "start": "1990240",
    "end": "1995840"
  },
  {
    "text": "GitHub organization and you can find our socials all of our um speaker socials in the other QR code so thank you if anyone",
    "start": "1995840",
    "end": "2003080"
  },
  {
    "text": "has any questions you can raise them now",
    "start": "2003080",
    "end": "2007518"
  },
  {
    "text": "sure how do I I keep you I don't think we have another so I",
    "start": "2009240",
    "end": "2014760"
  },
  {
    "text": "don't think we have two mics so it will be difficult to coordinate but let's see",
    "start": "2014760",
    "end": "2020279"
  },
  {
    "text": "so thank you uh so my question is like is there a cap on the number of policies",
    "start": "2020279",
    "end": "2025480"
  },
  {
    "text": "that we can apply using k no no okay and one more question like uh uh SOI",
    "start": "2025480",
    "end": "2031200"
  },
  {
    "text": "mentioned that uh uh you were exploring uh you have one tool earlier and there",
    "start": "2031200",
    "end": "2036519"
  },
  {
    "text": "was a problem with debugging policies and that's why you opted for Keno so how does that solve that problem of",
    "start": "2036519",
    "end": "2045039"
  },
  {
    "text": "debugging",
    "start": "2048879",
    "end": "2051878"
  },
  {
    "text": "sorry language that was difficult to ramp up on for the newer Engineers K is Json",
    "start": "2055240",
    "end": "2063878"
  },
  {
    "text": "very regular Json thing right everybody knows so that why that's how kerno is",
    "start": "2063879",
    "end": "2069158"
  },
  {
    "text": "helpful uh there's no real knowledge transfer that is needed or knowledge ramp up is needed in case of opa there",
    "start": "2069159",
    "end": "2075839"
  },
  {
    "text": "was a custom language that was being used and that was the main reason that Rago everybody had to learn it in order",
    "start": "2075839",
    "end": "2083040"
  },
  {
    "text": "to change or do anything that was the m one of the major reasons all right thank you and for the first question where you",
    "start": "2083040",
    "end": "2089280"
  },
  {
    "text": "ask about number of policies so there's no limit on number of policies but you have to make sure that the all the policies execute in under 30 30 seconds",
    "start": "2089280",
    "end": "2096240"
  },
  {
    "text": "because that's the limit set by cu for us right so if you make any external API calls you have to ensure that all of the",
    "start": "2096240",
    "end": "2101400"
  },
  {
    "text": "policies can get applied otherwise you will get a context deadline exed any other",
    "start": "2101400",
    "end": "2107559"
  },
  {
    "text": "questions um hi my name is anuch uh I didn't cat that part that",
    "start": "2108640",
    "end": "2114359"
  },
  {
    "text": "where you applied a policy and it applies a certain label on the partt",
    "start": "2114359",
    "end": "2119599"
  },
  {
    "text": "does it uh work if a pod already exist and then you create a uh policy yes it",
    "start": "2119599",
    "end": "2126000"
  },
  {
    "text": "does work for the existing resources also so there's a configuration where",
    "start": "2126000",
    "end": "2131119"
  },
  {
    "text": "you can actually uh say apply it to the existing resources also so it does work",
    "start": "2131119",
    "end": "2136320"
  },
  {
    "text": "for the existing resource now that raises another question that uh I want to I want to apply policies uh on",
    "start": "2136320",
    "end": "2144320"
  },
  {
    "text": "production I gave a deadline to my team that okay uh on in 15 days we're going to deploy uh kuber on production it's uh",
    "start": "2144320",
    "end": "2153520"
  },
  {
    "text": "it's mandatory that you guys uh make your pods uh policy friendly but at the",
    "start": "2153520",
    "end": "2159680"
  },
  {
    "text": "same time I don't want to uh deploy after 15 days and uh break five of the applications so how to avoid that are",
    "start": "2159680",
    "end": "2167400"
  },
  {
    "text": "there any Warning Systems uh so uh so there's a a good question by the way so",
    "start": "2167400",
    "end": "2172880"
  },
  {
    "text": "definitely you can actually avoid these conditions by having a policy exceptions right so you can even create policy",
    "start": "2172880",
    "end": "2179599"
  },
  {
    "text": "exceptions for certain resources and make sure that those are not failing the overall policies right so with the",
    "start": "2179599",
    "end": "2186079"
  },
  {
    "text": "policy exception you can actually uh get out of that condition where where five of your application is not falling",
    "start": "2186079",
    "end": "2193280"
  },
  {
    "text": "into that path and then uh once those applications are ready with the configuration changes you can actually",
    "start": "2193280",
    "end": "2199359"
  },
  {
    "text": "apply those and remove the uh like basically you can automatically resolve those exceptions also it's a Time bound",
    "start": "2199359",
    "end": "2205359"
  },
  {
    "text": "exception what you which you can create also you can policies in also there are two modes you can set",
    "start": "2205359",
    "end": "2212680"
  },
  {
    "text": "your policies in there are there is a audit mode yeah that's audit and N for",
    "start": "2212680",
    "end": "2218119"
  },
  {
    "text": "so enforce is when you want you know strict application of policy and where do you get all this audit warnings or",
    "start": "2218119",
    "end": "2225160"
  },
  {
    "text": "maybe error policy report so whatever so kerno produces a policy report and",
    "start": "2225160",
    "end": "2232079"
  },
  {
    "text": "that's a kubernetes CR uh crd that will be present in your cluster so all your",
    "start": "2232079",
    "end": "2237640"
  },
  {
    "text": "audited resources that were uh failing some policy will be visible in this",
    "start": "2237640",
    "end": "2243119"
  },
  {
    "text": "policy report so you can analyze your cluster accordingly and even there's an open source project which is called policy report uh reporter where it's a",
    "start": "2243119",
    "end": "2250640"
  },
  {
    "text": "dashboard uh where you can see all the resources which are actually violating these policies and that's helpful thank",
    "start": "2250640",
    "end": "2258599"
  },
  {
    "text": "you U maybe we can take these questions I think we're running out of time we can take these questions be around",
    "start": "2258599",
    "end": "2266280"
  },
  {
    "text": "there there's a break break was 55 525 is hour ends so we can all come here I me we'll",
    "start": "2269040",
    "end": "2276400"
  },
  {
    "text": "be here okay so thank thank you so much for joining thank you so much we can take the other question if you have any questions you can reach out to us",
    "start": "2276400",
    "end": "2281800"
  },
  {
    "text": "directly we'll be here",
    "start": "2281800",
    "end": "2285640"
  }
]