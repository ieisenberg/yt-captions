[
  {
    "text": "all right I guess the dimming lights",
    "start": "0",
    "end": "2610"
  },
  {
    "text": "means it's time to get started",
    "start": "2610",
    "end": "5958"
  },
  {
    "text": "hopefully you're all still awake on the",
    "start": "6649",
    "end": "9840"
  },
  {
    "text": "last day of the conference so welcome to",
    "start": "9840",
    "end": "15000"
  },
  {
    "text": "secure pods sandboxing workloads and",
    "start": "15000",
    "end": "18150"
  },
  {
    "text": "kubernetes my name is Tim all Claire I'm",
    "start": "18150",
    "end": "21119"
  },
  {
    "text": "a software engineer at Google I work on",
    "start": "21119",
    "end": "23640"
  },
  {
    "text": "the kubernetes engine team doing various",
    "start": "23640",
    "end": "25980"
  },
  {
    "text": "security things I'm also a co-chair of",
    "start": "25980",
    "end": "29580"
  },
  {
    "text": "sig off and a member of the kubernetes",
    "start": "29580",
    "end": "32730"
  },
  {
    "text": "product security team so when I when I",
    "start": "32730",
    "end": "39120"
  },
  {
    "text": "first submitted the CFP first the only",
    "start": "39120",
    "end": "42090"
  },
  {
    "text": "time I did",
    "start": "42090",
    "end": "43610"
  },
  {
    "text": "it was the last day the CF keys were due",
    "start": "43610",
    "end": "46500"
  },
  {
    "text": "and we had just started to dig into",
    "start": "46500",
    "end": "49680"
  },
  {
    "text": "secure pods we knew we wanted to build",
    "start": "49680",
    "end": "54120"
  },
  {
    "text": "on a lot of the great work that was",
    "start": "54120",
    "end": "55770"
  },
  {
    "text": "coming out of the cotta container and",
    "start": "55770",
    "end": "58620"
  },
  {
    "text": "frock D and cryo communities around kind",
    "start": "58620",
    "end": "62250"
  },
  {
    "text": "of building these sand boxes sandbox",
    "start": "62250",
    "end": "65338"
  },
  {
    "text": "runtimes we knew we wanted to kind of",
    "start": "65339",
    "end": "68220"
  },
  {
    "text": "integrate that deeper into kubernetes",
    "start": "68220",
    "end": "69810"
  },
  {
    "text": "and formalize the concept of a secure",
    "start": "69810",
    "end": "72420"
  },
  {
    "text": "pod but we didn't really know exactly",
    "start": "72420",
    "end": "75240"
  },
  {
    "text": "what a secure pod was so five months",
    "start": "75240",
    "end": "78810"
  },
  {
    "text": "later I'm here we have a much better",
    "start": "78810",
    "end": "81090"
  },
  {
    "text": "idea of what your secure pod means and",
    "start": "81090",
    "end": "84659"
  },
  {
    "text": "now we're calling them sandbox pods to",
    "start": "84659",
    "end": "86729"
  },
  {
    "text": "disambiguate but the title of the talk",
    "start": "86729",
    "end": "89790"
  },
  {
    "text": "is still secure pods so let's run with",
    "start": "89790",
    "end": "93119"
  },
  {
    "text": "that for a minute and talk about what if",
    "start": "93119",
    "end": "95340"
  },
  {
    "text": "secure pod is for people just getting",
    "start": "95340",
    "end": "98340"
  },
  {
    "text": "here there's still some seats up front",
    "start": "98340",
    "end": "101750"
  },
  {
    "text": "so for the purposes of this talk let's",
    "start": "101750",
    "end": "104250"
  },
  {
    "text": "consider secure to be synonymous with",
    "start": "104250",
    "end": "107430"
  },
  {
    "text": "isolation a little bit of a",
    "start": "107430",
    "end": "108930"
  },
  {
    "text": "simplification but makes it easier to",
    "start": "108930",
    "end": "111060"
  },
  {
    "text": "talk about and so when we're talking",
    "start": "111060",
    "end": "115860"
  },
  {
    "text": "about isolation we need to think of",
    "start": "115860",
    "end": "118100"
  },
  {
    "text": "isolation as directional so just because",
    "start": "118100",
    "end": "121590"
  },
  {
    "text": "a is isolated from B doesn't necessarily",
    "start": "121590",
    "end": "124409"
  },
  {
    "text": "mean that B is isolated from a so in the",
    "start": "124409",
    "end": "127439"
  },
  {
    "text": "context of pods and kubernetes we can",
    "start": "127439",
    "end": "130860"
  },
  {
    "text": "talk about threats from the outside so",
    "start": "130860",
    "end": "133410"
  },
  {
    "text": "threats from the the internet big scary",
    "start": "133410",
    "end": "135840"
  },
  {
    "text": "place",
    "start": "135840",
    "end": "136440"
  },
  {
    "text": "and all the attackers that want to get",
    "start": "136440",
    "end": "138720"
  },
  {
    "text": "at whatever is running in our pods in",
    "start": "138720",
    "end": "141000"
  },
  {
    "text": "our cluster and this is a really big",
    "start": "141000",
    "end": "143880"
  },
  {
    "text": "rich topic area a lot of different",
    "start": "143880",
    "end": "147570"
  },
  {
    "text": "things to help prevent attackers from",
    "start": "147570",
    "end": "150540"
  },
  {
    "text": "the outside getting into our cluster but",
    "start": "150540",
    "end": "153030"
  },
  {
    "text": "this isn't what I'm going to focus on",
    "start": "153030",
    "end": "154410"
  },
  {
    "text": "today instead I want to talk about",
    "start": "154410",
    "end": "156810"
  },
  {
    "text": "threats from the inside so threats from",
    "start": "156810",
    "end": "160890"
  },
  {
    "text": "within your pods and what we can do",
    "start": "160890",
    "end": "164130"
  },
  {
    "text": "about that",
    "start": "164130",
    "end": "165870"
  },
  {
    "text": "but before we do let's talk about why",
    "start": "165870",
    "end": "168890"
  },
  {
    "text": "who put the cat in the cage like who put",
    "start": "168890",
    "end": "172290"
  },
  {
    "text": "the attackers in your pods in the first",
    "start": "172290",
    "end": "174120"
  },
  {
    "text": "place why do we care about this first",
    "start": "174120",
    "end": "177540"
  },
  {
    "text": "reason to care is if you're running",
    "start": "177540",
    "end": "178950"
  },
  {
    "text": "untrusted code if you are running a",
    "start": "178950",
    "end": "182510"
  },
  {
    "text": "multi-tenant SAS for instance where your",
    "start": "182510",
    "end": "184950"
  },
  {
    "text": "users submit binaries or they submit",
    "start": "184950",
    "end": "188460"
  },
  {
    "text": "container images or anything like that",
    "start": "188460",
    "end": "190550"
  },
  {
    "text": "you can't trust the code you don't know",
    "start": "190550",
    "end": "192780"
  },
  {
    "text": "what your users are giving you maybe",
    "start": "192780",
    "end": "195060"
  },
  {
    "text": "you're running a third-party service",
    "start": "195060",
    "end": "197810"
  },
  {
    "text": "maybe it's open source code that you",
    "start": "197810",
    "end": "200280"
  },
  {
    "text": "just haven't fully security audited you",
    "start": "200280",
    "end": "202620"
  },
  {
    "text": "don't know exactly what's happening in",
    "start": "202620",
    "end": "204090"
  },
  {
    "text": "there and you want to you know have a",
    "start": "204090",
    "end": "206280"
  },
  {
    "text": "little extra safety the second reason is",
    "start": "206280",
    "end": "209640"
  },
  {
    "text": "containment maybe you started with",
    "start": "209640",
    "end": "212000"
  },
  {
    "text": "thinking about threats from the outside",
    "start": "212000",
    "end": "213900"
  },
  {
    "text": "and but the attacker penetrated your",
    "start": "213900",
    "end": "219270"
  },
  {
    "text": "defenses now they're inside you want to",
    "start": "219270",
    "end": "222300"
  },
  {
    "text": "prevent lateral movement you want to",
    "start": "222300",
    "end": "223980"
  },
  {
    "text": "prevent them from you know getting at",
    "start": "223980",
    "end": "226459"
  },
  {
    "text": "maybe the more sensitive parts of your",
    "start": "226459",
    "end": "229800"
  },
  {
    "text": "your service and getting deeper into",
    "start": "229800",
    "end": "232650"
  },
  {
    "text": "your cluster so what can we do about",
    "start": "232650",
    "end": "236820"
  },
  {
    "text": "this how do we deal with internal",
    "start": "236820",
    "end": "238830"
  },
  {
    "text": "threats it's actually much harder I",
    "start": "238830",
    "end": "242250"
  },
  {
    "text": "think to deal with these internal",
    "start": "242250",
    "end": "244110"
  },
  {
    "text": "threats there's much much larger attack",
    "start": "244110",
    "end": "246840"
  },
  {
    "text": "surfaces not only do we have to worry",
    "start": "246840",
    "end": "248700"
  },
  {
    "text": "about some of these same external",
    "start": "248700",
    "end": "250080"
  },
  {
    "text": "attacks but we also have to worry about",
    "start": "250080",
    "end": "253110"
  },
  {
    "text": "attacks on the the kernel",
    "start": "253110",
    "end": "255390"
  },
  {
    "text": "the syscall interface that's exposed to",
    "start": "255390",
    "end": "257640"
  },
  {
    "text": "containers we have to worry about the",
    "start": "257640",
    "end": "260609"
  },
  {
    "text": "various storage interfaces I can't",
    "start": "260609",
    "end": "263130"
  },
  {
    "text": "remember how many we're up to something",
    "start": "263130",
    "end": "264539"
  },
  {
    "text": "like 20 or 30 different volume types and",
    "start": "264539",
    "end": "267240"
  },
  {
    "text": "urban Eddie's and now we have CSI and",
    "start": "267240",
    "end": "269190"
  },
  {
    "text": "you know we'll have many more volume",
    "start": "269190",
    "end": "272160"
  },
  {
    "text": "types that come with that what happens",
    "start": "272160",
    "end": "274259"
  },
  {
    "text": "if there's a vulnerability in one of",
    "start": "274259",
    "end": "275880"
  },
  {
    "text": "those the clients in your diffuse file",
    "start": "275880",
    "end": "278729"
  },
  {
    "text": "system for instance we have the whole",
    "start": "278729",
    "end": "281610"
  },
  {
    "text": "internal network all the services and",
    "start": "281610",
    "end": "284550"
  },
  {
    "text": "various things that are exposed within",
    "start": "284550",
    "end": "286620"
  },
  {
    "text": "the the kubernetes cluster that might",
    "start": "286620",
    "end": "288330"
  },
  {
    "text": "not be exposed to the outside",
    "start": "288330",
    "end": "289970"
  },
  {
    "text": "there's the daemons that provide",
    "start": "289970",
    "end": "291990"
  },
  {
    "text": "different services to your to your",
    "start": "291990",
    "end": "295710"
  },
  {
    "text": "cluster and then we'll touch on hardware",
    "start": "295710",
    "end": "297840"
  },
  {
    "text": "as well in the wake of Spectre and",
    "start": "297840",
    "end": "300000"
  },
  {
    "text": "meltdown but let's start with the kernel",
    "start": "300000",
    "end": "303530"
  },
  {
    "text": "so I'm sure you've all heard the term",
    "start": "303530",
    "end": "306479"
  },
  {
    "text": "container escape this is most commonly",
    "start": "306479",
    "end": "309810"
  },
  {
    "text": "talked about in the context of the",
    "start": "309810",
    "end": "311550"
  },
  {
    "text": "kernel I think looking at attacks via",
    "start": "311550",
    "end": "315599"
  },
  {
    "text": "sis calls and there's actually a lot of",
    "start": "315599",
    "end": "319110"
  },
  {
    "text": "nice things we can do about this oh wait",
    "start": "319110",
    "end": "320759"
  },
  {
    "text": "I'm supposed to say let me engage in a",
    "start": "320759",
    "end": "324570"
  },
  {
    "text": "little bit of good old-fashioned",
    "start": "324570",
    "end": "325650"
  },
  {
    "text": "fear-mongering",
    "start": "325650",
    "end": "326870"
  },
  {
    "text": "in 2017 there were 169 code execution",
    "start": "326870",
    "end": "332580"
  },
  {
    "text": "CVEs published in the linux kernel the",
    "start": "332580",
    "end": "336720"
  },
  {
    "text": "good news is most of these are in",
    "start": "336720",
    "end": "338849"
  },
  {
    "text": "drivers in drivers that are primarily",
    "start": "338849",
    "end": "343349"
  },
  {
    "text": "used in mobile devices so keep your",
    "start": "343349",
    "end": "345690"
  },
  {
    "text": "phone's up-to-date but unless you're",
    "start": "345690",
    "end": "348599"
  },
  {
    "text": "running kubernetes on your phone I bet",
    "start": "348599",
    "end": "350550"
  },
  {
    "text": "there's at least one person at this",
    "start": "350550",
    "end": "351900"
  },
  {
    "text": "conference doing that you don't need to",
    "start": "351900",
    "end": "354930"
  },
  {
    "text": "worry about this and we actually have a",
    "start": "354930",
    "end": "357960"
  },
  {
    "text": "lot of good tools to deal with the",
    "start": "357960",
    "end": "359520"
  },
  {
    "text": "kernel attack surface today seccomp is a",
    "start": "359520",
    "end": "364250"
  },
  {
    "text": "way of filtering out sis calls and",
    "start": "364250",
    "end": "367110"
  },
  {
    "text": "reducing the attack surface docker has",
    "start": "367110",
    "end": "369930"
  },
  {
    "text": "some really nice defaults a comp profile",
    "start": "369930",
    "end": "372810"
  },
  {
    "text": "that we turn off in kubernetes by",
    "start": "372810",
    "end": "374849"
  },
  {
    "text": "default so you probably want to turn it",
    "start": "374849",
    "end": "377099"
  },
  {
    "text": "back on and this is the annotation that",
    "start": "377099",
    "end": "379830"
  },
  {
    "text": "you can use to do that we're trying to",
    "start": "379830",
    "end": "382139"
  },
  {
    "text": "make that the default but security",
    "start": "382139",
    "end": "384570"
  },
  {
    "text": "defaults are hard a parmer is another",
    "start": "384570",
    "end": "388740"
  },
  {
    "text": "another tool selinux is sort of the the",
    "start": "388740",
    "end": "392219"
  },
  {
    "text": "counterpart if you're running a selinux",
    "start": "392219",
    "end": "395310"
  },
  {
    "text": "system this is for defending sensitive",
    "start": "395310",
    "end": "399990"
  },
  {
    "text": "files mostly",
    "start": "399990",
    "end": "401159"
  },
  {
    "text": "and this we do run by default so you",
    "start": "401159",
    "end": "404099"
  },
  {
    "text": "don't necessarily need this this",
    "start": "404099",
    "end": "405479"
  },
  {
    "text": "annotation hopefully you all caught",
    "start": "405479",
    "end": "408539"
  },
  {
    "text": "Liz's keynote this morning and know that",
    "start": "408539",
    "end": "411629"
  },
  {
    "text": "you should not run as root in your",
    "start": "411629",
    "end": "413489"
  },
  {
    "text": "containers this is labeled an advanced",
    "start": "413489",
    "end": "416669"
  },
  {
    "text": "talk so I won't go into this too deeply",
    "start": "416669",
    "end": "418759"
  },
  {
    "text": "but you also want to enable this allow",
    "start": "418759",
    "end": "421110"
  },
  {
    "text": "privilege escalation especially if your",
    "start": "421110",
    "end": "423059"
  },
  {
    "text": "users are giving you untrusted",
    "start": "423059",
    "end": "424889"
  },
  {
    "text": "containers because otherwise you can",
    "start": "424889",
    "end": "426719"
  },
  {
    "text": "trivially get to root by just running a",
    "start": "426719",
    "end": "430919"
  },
  {
    "text": "set UID binary and this prevents that",
    "start": "430919",
    "end": "435169"
  },
  {
    "text": "but what happens when these features",
    "start": "435169",
    "end": "437339"
  },
  {
    "text": "aren't enough dirty cow I've already",
    "start": "437339",
    "end": "439769"
  },
  {
    "text": "heard mentioned a few times at this",
    "start": "439769",
    "end": "442019"
  },
  {
    "text": "conference this was a vulnerability that",
    "start": "442019",
    "end": "444509"
  },
  {
    "text": "came out two years ago it's a race",
    "start": "444509",
    "end": "446849"
  },
  {
    "text": "condition in the copy-on-write memory",
    "start": "446849",
    "end": "448769"
  },
  {
    "text": "handling of the linux kernel and there's",
    "start": "448769",
    "end": "453809"
  },
  {
    "text": "a cool proof of concept escaped and",
    "start": "453809",
    "end": "457229"
  },
  {
    "text": "demonstrated by the via the virtual",
    "start": "457229",
    "end": "461399"
  },
  {
    "text": "dynamically shared object that is",
    "start": "461399",
    "end": "464339"
  },
  {
    "text": "injected into every process in linux and",
    "start": "464339",
    "end": "468740"
  },
  {
    "text": "i'll link to that at the end so now I",
    "start": "468740",
    "end": "473579"
  },
  {
    "text": "want to introduce sandboxes at Google we",
    "start": "473579",
    "end": "479129"
  },
  {
    "text": "have this principle security principle",
    "start": "479129",
    "end": "481409"
  },
  {
    "text": "that between any untrusted code and user",
    "start": "481409",
    "end": "484949"
  },
  {
    "text": "data there have to be at least two",
    "start": "484949",
    "end": "486539"
  },
  {
    "text": "distinct security boundaries so that",
    "start": "486539",
    "end": "489209"
  },
  {
    "text": "means two independent security",
    "start": "489209",
    "end": "491159"
  },
  {
    "text": "mechanisms need to fail in order to for",
    "start": "491159",
    "end": "494129"
  },
  {
    "text": "that untrusted code to get out that user",
    "start": "494129",
    "end": "495869"
  },
  {
    "text": "data in the context of the kernel attack",
    "start": "495869",
    "end": "499319"
  },
  {
    "text": "surface since the kernel is a single",
    "start": "499319",
    "end": "501990"
  },
  {
    "text": "kind of thing in memory we basically",
    "start": "501990",
    "end": "507089"
  },
  {
    "text": "need a separate kernel for the sandbox",
    "start": "507089",
    "end": "509429"
  },
  {
    "text": "pod otherwise a single bug in the the",
    "start": "509429",
    "end": "513630"
  },
  {
    "text": "kernel like dirty cow could lead to an",
    "start": "513630",
    "end": "516479"
  },
  {
    "text": "escape from the sandbox and that that",
    "start": "516479",
    "end": "521189"
  },
  {
    "text": "two security boundaries is an important",
    "start": "521189",
    "end": "523050"
  },
  {
    "text": "concept and we're going to come back to",
    "start": "523050",
    "end": "524430"
  },
  {
    "text": "that throughout the talk so one",
    "start": "524430",
    "end": "527610"
  },
  {
    "text": "implementation of sandbox is is kata",
    "start": "527610",
    "end": "529589"
  },
  {
    "text": "containers there have been a couple of",
    "start": "529589",
    "end": "532230"
  },
  {
    "text": "talks maybe you've been to",
    "start": "532230",
    "end": "534279"
  },
  {
    "text": "at the conference it was announced in",
    "start": "534279",
    "end": "536589"
  },
  {
    "text": "December cube con north america and it's",
    "start": "536589",
    "end": "540699"
  },
  {
    "text": "a combination of Hyper's run v",
    "start": "540699",
    "end": "542769"
  },
  {
    "text": "technology and intel's clear containers",
    "start": "542769",
    "end": "544740"
  },
  {
    "text": "coming together to make lightweight VMS",
    "start": "544740",
    "end": "548050"
  },
  {
    "text": "that run containers in the context of",
    "start": "548050",
    "end": "551139"
  },
  {
    "text": "kubernetes we run the VM as the kind of",
    "start": "551139",
    "end": "554439"
  },
  {
    "text": "the pod construct and then we run",
    "start": "554439",
    "end": "556449"
  },
  {
    "text": "containers within that I'm not going to",
    "start": "556449",
    "end": "558699"
  },
  {
    "text": "go too deeply into the architecture here",
    "start": "558699",
    "end": "560740"
  },
  {
    "text": "but we have a separate guest kernel and",
    "start": "560740",
    "end": "565769"
  },
  {
    "text": "yeah maybe you heard the announcement",
    "start": "565769",
    "end": "569170"
  },
  {
    "text": "about gee visor two days ago this is a",
    "start": "569170",
    "end": "572079"
  },
  {
    "text": "new open source project from Google and",
    "start": "572079",
    "end": "574689"
  },
  {
    "text": "this is actually the sandbox that we use",
    "start": "574689",
    "end": "576639"
  },
  {
    "text": "at Google in a lot of places in the",
    "start": "576639",
    "end": "580870"
  },
  {
    "text": "production environment this is a little",
    "start": "580870",
    "end": "583149"
  },
  {
    "text": "different from a traditional VM you have",
    "start": "583149",
    "end": "585220"
  },
  {
    "text": "a an emulated kernel it's basically",
    "start": "585220",
    "end": "588160"
  },
  {
    "text": "something that implements the Linux",
    "start": "588160",
    "end": "589959"
  },
  {
    "text": "Cisco interface running in user space",
    "start": "589959",
    "end": "592199"
  },
  {
    "text": "and then this platform thing that just",
    "start": "592199",
    "end": "594519"
  },
  {
    "text": "bounces syscalls into the emulated",
    "start": "594519",
    "end": "596860"
  },
  {
    "text": "kernel and I just wanted to highlight",
    "start": "596860",
    "end": "601629"
  },
  {
    "text": "that sandboxes are at the pod level",
    "start": "601629",
    "end": "604120"
  },
  {
    "text": "we're still discussing the API actually",
    "start": "604120",
    "end": "607689"
  },
  {
    "text": "I should mention this whole feature is",
    "start": "607689",
    "end": "609699"
  },
  {
    "text": "still in the design phase and but we",
    "start": "609699",
    "end": "613899"
  },
  {
    "text": "want to keep it simple so this is one",
    "start": "613899",
    "end": "617649"
  },
  {
    "text": "possible implement what the API might",
    "start": "617649",
    "end": "619870"
  },
  {
    "text": "look like so what happens if we have",
    "start": "619870",
    "end": "623079"
  },
  {
    "text": "dirty cow and we're running in a sandbox",
    "start": "623079",
    "end": "626009"
  },
  {
    "text": "if you are running kata containers and",
    "start": "626009",
    "end": "629019"
  },
  {
    "text": "your guest kernel is vulnerable then you",
    "start": "629019",
    "end": "632379"
  },
  {
    "text": "can escape the container but you're",
    "start": "632379",
    "end": "634240"
  },
  {
    "text": "still trapped in the VM you need a",
    "start": "634240",
    "end": "635740"
  },
  {
    "text": "hypervisor exploit you know some bugging",
    "start": "635740",
    "end": "638290"
  },
  {
    "text": "KVM for instance to actually get out of",
    "start": "638290",
    "end": "640689"
  },
  {
    "text": "there similarly is the same is true with",
    "start": "640689",
    "end": "643930"
  },
  {
    "text": "G visor except it's a different code",
    "start": "643930",
    "end": "646240"
  },
  {
    "text": "base so you wouldn't have dirty cow in",
    "start": "646240",
    "end": "648069"
  },
  {
    "text": "the first place but you might have some",
    "start": "648069",
    "end": "649930"
  },
  {
    "text": "other vulnerability so what's the catch",
    "start": "649930",
    "end": "653649"
  },
  {
    "text": "why wouldn't you always just run",
    "start": "653649",
    "end": "655389"
  },
  {
    "text": "everything in sandboxes and always be",
    "start": "655389",
    "end": "657430"
  },
  {
    "text": "safe and secure this does come with a",
    "start": "657430",
    "end": "661949"
  },
  {
    "text": "memory overhead to run that extra kernel",
    "start": "661949",
    "end": "665559"
  },
  {
    "text": "to run the sandbox",
    "start": "665559",
    "end": "668970"
  },
  {
    "text": "and a bit of performance hit - if you're",
    "start": "669600",
    "end": "673200"
  },
  {
    "text": "running especially if you're running in",
    "start": "673200",
    "end": "674279"
  },
  {
    "text": "a nested environment but these are we're",
    "start": "674279",
    "end": "677040"
  },
  {
    "text": "making improvements here a sandbox isn't",
    "start": "677040",
    "end": "680100"
  },
  {
    "text": "going to be a hundred percent compatible",
    "start": "680100",
    "end": "681630"
  },
  {
    "text": "with every workload especially if you",
    "start": "681630",
    "end": "683339"
  },
  {
    "text": "need host namespaces or you need to deal",
    "start": "683339",
    "end": "688320"
  },
  {
    "text": "with the host network or something",
    "start": "688320",
    "end": "690410"
  },
  {
    "text": "obviously if you're sandboxed you",
    "start": "690410",
    "end": "692760"
  },
  {
    "text": "shouldn't be able to do that now also if",
    "start": "692760",
    "end": "695970"
  },
  {
    "text": "you're running in a sandbox you don't",
    "start": "695970",
    "end": "697529"
  },
  {
    "text": "have the same visibility from the hosts",
    "start": "697529",
    "end": "699420"
  },
  {
    "text": "as you would into a native container",
    "start": "699420",
    "end": "701850"
  },
  {
    "text": "process this isn't because the sandbox",
    "start": "701850",
    "end": "703949"
  },
  {
    "text": "is isolated from the host it's not but",
    "start": "703949",
    "end": "706980"
  },
  {
    "text": "when you're running a native container",
    "start": "706980",
    "end": "709760"
  },
  {
    "text": "processes in the container just like",
    "start": "709760",
    "end": "711779"
  },
  {
    "text": "processes on the host and it's really",
    "start": "711779",
    "end": "714000"
  },
  {
    "text": "easy to kind of you know introspect in",
    "start": "714000",
    "end": "716430"
  },
  {
    "text": "those processes with a lot of the cool",
    "start": "716430",
    "end": "718680"
  },
  {
    "text": "monitoring tools that you might be",
    "start": "718680",
    "end": "721260"
  },
  {
    "text": "familiar with",
    "start": "721260",
    "end": "722870"
  },
  {
    "text": "and finally this isn't really a reason",
    "start": "722870",
    "end": "725070"
  },
  {
    "text": "not to use sandboxes but it's not a",
    "start": "725070",
    "end": "727529"
  },
  {
    "text": "complete solution and we'll get to that",
    "start": "727529",
    "end": "729630"
  },
  {
    "text": "a little later in particular it's",
    "start": "729630",
    "end": "732690"
  },
  {
    "text": "probably not going to protect you your",
    "start": "732690",
    "end": "734490"
  },
  {
    "text": "internal network so now let's move on to",
    "start": "734490",
    "end": "738329"
  },
  {
    "text": "talk about attacks via storage you may",
    "start": "738329",
    "end": "743820"
  },
  {
    "text": "have heard about the CVE we announced in",
    "start": "743820",
    "end": "746100"
  },
  {
    "text": "kubernetes a couple months ago this was",
    "start": "746100",
    "end": "749490"
  },
  {
    "text": "a vulnerability in the sim link handling",
    "start": "749490",
    "end": "751829"
  },
  {
    "text": "in volumes so normally when a container",
    "start": "751829",
    "end": "754980"
  },
  {
    "text": "reads a symlink in a volume that sim",
    "start": "754980",
    "end": "760199"
  },
  {
    "text": "link is evaluated in the containers",
    "start": "760199",
    "end": "761970"
  },
  {
    "text": "mount namespace this means if that sim",
    "start": "761970",
    "end": "764279"
  },
  {
    "text": "link points to Etsy password for",
    "start": "764279",
    "end": "766709"
  },
  {
    "text": "instance when the container reads that",
    "start": "766709",
    "end": "768990"
  },
  {
    "text": "it's just going to see the Etsy password",
    "start": "768990",
    "end": "771000"
  },
  {
    "text": "in the container filesystem which",
    "start": "771000",
    "end": "773149"
  },
  {
    "text": "hopefully isn't too sensitive",
    "start": "773149",
    "end": "775699"
  },
  {
    "text": "however when you use the sub path",
    "start": "775699",
    "end": "779670"
  },
  {
    "text": "feature of the volumes we mount a sub",
    "start": "779670",
    "end": "783839"
  },
  {
    "text": "path from that volume into the container",
    "start": "783839",
    "end": "786170"
  },
  {
    "text": "and when we ask docker to or you know",
    "start": "786170",
    "end": "791760"
  },
  {
    "text": "whatever our runtime is to mount that",
    "start": "791760",
    "end": "794519"
  },
  {
    "text": "sub path it's going to actually follow",
    "start": "794519",
    "end": "796709"
  },
  {
    "text": "that sim link and mount the destination",
    "start": "796709",
    "end": "799140"
  },
  {
    "text": "and when it follows that same link it",
    "start": "799140",
    "end": "800730"
  },
  {
    "text": "follow",
    "start": "800730",
    "end": "801030"
  },
  {
    "text": "in its mountain namespace which happens",
    "start": "801030",
    "end": "804150"
  },
  {
    "text": "to be the host mount namespace and we",
    "start": "804150",
    "end": "806100"
  },
  {
    "text": "end up mounting the sensitive file like",
    "start": "806100",
    "end": "808770"
  },
  {
    "text": "the host @c password for instance or the",
    "start": "808770",
    "end": "812550"
  },
  {
    "text": "docker socket or the cubelet credentials",
    "start": "812550",
    "end": "815280"
  },
  {
    "text": "into the container so that's bad",
    "start": "815280",
    "end": "817830"
  },
  {
    "text": "how does sandboxes help us here well one",
    "start": "817830",
    "end": "821460"
  },
  {
    "text": "approach to sandboxes volumes in",
    "start": "821460",
    "end": "824100"
  },
  {
    "text": "sandboxes is to mount the volume on the",
    "start": "824100",
    "end": "827580"
  },
  {
    "text": "host and then expose it into the sandbox",
    "start": "827580",
    "end": "831320"
  },
  {
    "text": "so for instance in cata containers one",
    "start": "831320",
    "end": "834480"
  },
  {
    "text": "approach is to use the 9p protocol over",
    "start": "834480",
    "end": "837600"
  },
  {
    "text": "a ver do interface to effectively bind",
    "start": "837600",
    "end": "840510"
  },
  {
    "text": "mount the volume into the sandbox the",
    "start": "840510",
    "end": "844650"
  },
  {
    "text": "problem is we're left with the same",
    "start": "844650",
    "end": "847200"
  },
  {
    "text": "vulnerability here when the host goes to",
    "start": "847200",
    "end": "850440"
  },
  {
    "text": "mount that volume on its filesystem it",
    "start": "850440",
    "end": "853260"
  },
  {
    "text": "follows the sim link we end up mapping",
    "start": "853260",
    "end": "855570"
  },
  {
    "text": "that sensitive data into the sandbox and",
    "start": "855570",
    "end": "857700"
  },
  {
    "text": "we see that we only have one single",
    "start": "857700",
    "end": "860460"
  },
  {
    "text": "point of failure here that leads to an",
    "start": "860460",
    "end": "863670"
  },
  {
    "text": "exploit so what can we do about this",
    "start": "863670",
    "end": "866120"
  },
  {
    "text": "this is still design phase needs more",
    "start": "866120",
    "end": "870600"
  },
  {
    "text": "kind of research but there's a couple",
    "start": "870600",
    "end": "872700"
  },
  {
    "text": "ideas what we can do about it",
    "start": "872700",
    "end": "874050"
  },
  {
    "text": "the first principle is that read-only",
    "start": "874050",
    "end": "878930"
  },
  {
    "text": "read-only storage should be exposed via",
    "start": "878930",
    "end": "881910"
  },
  {
    "text": "read-only protocols this means that even",
    "start": "881910",
    "end": "884070"
  },
  {
    "text": "if you have an a vulnerability that",
    "start": "884070",
    "end": "886760"
  },
  {
    "text": "leads to the sandbox process getting at",
    "start": "886760",
    "end": "890520"
  },
  {
    "text": "the sandbox kernel you still can't write",
    "start": "890520",
    "end": "893130"
  },
  {
    "text": "to that storage because it's just a",
    "start": "893130",
    "end": "895350"
  },
  {
    "text": "read-only device within the sandbox in",
    "start": "895350",
    "end": "897900"
  },
  {
    "text": "the case of ephemeral storage so the the",
    "start": "897900",
    "end": "901170"
  },
  {
    "text": "docker writable layer and ephemeral or",
    "start": "901170",
    "end": "903480"
  },
  {
    "text": "sorry empty dear volumes we should treat",
    "start": "903480",
    "end": "907740"
  },
  {
    "text": "those in a way so that they are a peek",
    "start": "907740",
    "end": "909540"
  },
  {
    "text": "to the host for instance use an image",
    "start": "909540",
    "end": "912660"
  },
  {
    "text": "file that represents the whole file",
    "start": "912660",
    "end": "914520"
  },
  {
    "text": "system and then the host never interacts",
    "start": "914520",
    "end": "916800"
  },
  {
    "text": "with that data and this means that any",
    "start": "916800",
    "end": "921120"
  },
  {
    "text": "malicious data written there it's going",
    "start": "921120",
    "end": "922800"
  },
  {
    "text": "to be much harder for that to lead to an",
    "start": "922800",
    "end": "926100"
  },
  {
    "text": "exploit in the host we do a similar",
    "start": "926100",
    "end": "928350"
  },
  {
    "text": "thing with block volumes and mount block",
    "start": "928350",
    "end": "931050"
  },
  {
    "text": "volumes directly into the sandbox",
    "start": "931050",
    "end": "933480"
  },
  {
    "text": "and then and not onto the host so that",
    "start": "933480",
    "end": "936869"
  },
  {
    "text": "again they're opaque to the host and",
    "start": "936869",
    "end": "939049"
  },
  {
    "text": "then we have this whole like networked",
    "start": "939049",
    "end": "941850"
  },
  {
    "text": "file system stuff that's probably the",
    "start": "941850",
    "end": "943980"
  },
  {
    "text": "most significant portion of the volumes",
    "start": "943980",
    "end": "947069"
  },
  {
    "text": "and this is kind of a hard problem one",
    "start": "947069",
    "end": "950279"
  },
  {
    "text": "possible solution is we run the client",
    "start": "950279",
    "end": "953730"
  },
  {
    "text": "software for those network file systems",
    "start": "953730",
    "end": "956339"
  },
  {
    "text": "like NFS cluster staff we run those in",
    "start": "956339",
    "end": "960179"
  },
  {
    "text": "the sandbox and then a vulnerability in",
    "start": "960179",
    "end": "963209"
  },
  {
    "text": "that client would just lead to an escape",
    "start": "963209",
    "end": "967499"
  },
  {
    "text": "within the sandbox and not into the",
    "start": "967499",
    "end": "969959"
  },
  {
    "text": "hosts the problem there is we then need",
    "start": "969959",
    "end": "972569"
  },
  {
    "text": "to also mount the credentials for that",
    "start": "972569",
    "end": "975749"
  },
  {
    "text": "remote storage into the sandbox and",
    "start": "975749",
    "end": "978209"
  },
  {
    "text": "we're effectively moving that security",
    "start": "978209",
    "end": "980429"
  },
  {
    "text": "boundary into the the remote storage",
    "start": "980429",
    "end": "983779"
  },
  {
    "text": "authentication and authorization layer",
    "start": "983779",
    "end": "985739"
  },
  {
    "text": "so it's a bit of a trade off and we need",
    "start": "985739",
    "end": "988499"
  },
  {
    "text": "to do more research in this area so",
    "start": "988499",
    "end": "993089"
  },
  {
    "text": "let's talk about attacks via the network",
    "start": "993089",
    "end": "997220"
  },
  {
    "text": "within the cluster there's a lot of",
    "start": "997579",
    "end": "999829"
  },
  {
    "text": "services that are exposed that aren't",
    "start": "999829",
    "end": "1003169"
  },
  {
    "text": "exposed to the external world hopefully",
    "start": "1003169",
    "end": "1007959"
  },
  {
    "text": "we have various ports on the node this",
    "start": "1008019",
    "end": "1011809"
  },
  {
    "text": "read-only port that's used in most",
    "start": "1011809",
    "end": "1013970"
  },
  {
    "text": "clusters is unauthenticated and leaks a",
    "start": "1013970",
    "end": "1016639"
  },
  {
    "text": "bunch of data metadata about the",
    "start": "1016639",
    "end": "1019129"
  },
  {
    "text": "workloads or trying to fix that metadata",
    "start": "1019129",
    "end": "1023029"
  },
  {
    "text": "service that's exposed by a lot of cloud",
    "start": "1023029",
    "end": "1025339"
  },
  {
    "text": "providers is a common attack vector if",
    "start": "1025339",
    "end": "1030649"
  },
  {
    "text": "you're mounting service account tokens",
    "start": "1030649",
    "end": "1033048"
  },
  {
    "text": "into your sandbox then we have to worry",
    "start": "1033049",
    "end": "1035058"
  },
  {
    "text": "about attacks via the API server any",
    "start": "1035059",
    "end": "1038510"
  },
  {
    "text": "authenticate unauthenticated services",
    "start": "1038510",
    "end": "1040459"
  },
  {
    "text": "within the cluster and also DNS can can",
    "start": "1040459",
    "end": "1043850"
  },
  {
    "text": "leak some information so what can we do",
    "start": "1043850",
    "end": "1046668"
  },
  {
    "text": "about this here we're going to look at a",
    "start": "1046669",
    "end": "1049429"
  },
  {
    "text": "different feature other than sandboxes",
    "start": "1049429",
    "end": "1051350"
  },
  {
    "text": "there's actually a lot of options in",
    "start": "1051350",
    "end": "1053179"
  },
  {
    "text": "this space a lot of the service meshes",
    "start": "1053179",
    "end": "1054830"
  },
  {
    "text": "can help us here and a network policy",
    "start": "1054830",
    "end": "1057919"
  },
  {
    "text": "can also help I'm not going to go too",
    "start": "1057919",
    "end": "1060049"
  },
  {
    "text": "deep into this but this is just an",
    "start": "1060049",
    "end": "1062240"
  },
  {
    "text": "example of a network policy that says",
    "start": "1062240",
    "end": "1064010"
  },
  {
    "text": "allow all traffic",
    "start": "1064010",
    "end": "1066360"
  },
  {
    "text": "coming out of my sandbox pod except",
    "start": "1066360",
    "end": "1069090"
  },
  {
    "text": "traffic to private IP addresses and this",
    "start": "1069090",
    "end": "1072420"
  },
  {
    "text": "will vary a little bit depending on your",
    "start": "1072420",
    "end": "1074270"
  },
  {
    "text": "network topology so now I want to move",
    "start": "1074270",
    "end": "1079620"
  },
  {
    "text": "on to talking about attacks via the",
    "start": "1079620",
    "end": "1081360"
  },
  {
    "text": "different demons in kubernetes now",
    "start": "1081360",
    "end": "1084660"
  },
  {
    "text": "specifically let's look at attacks via",
    "start": "1084660",
    "end": "1087000"
  },
  {
    "text": "logs this is sort of a simplified",
    "start": "1087000",
    "end": "1092220"
  },
  {
    "text": "diagram of the log flow on the node so",
    "start": "1092220",
    "end": "1097200"
  },
  {
    "text": "the logs start from the container",
    "start": "1097200",
    "end": "1099809"
  },
  {
    "text": "they're written to standard out or",
    "start": "1099809",
    "end": "1101880"
  },
  {
    "text": "standard air they go that is a pipe to",
    "start": "1101880",
    "end": "1106110"
  },
  {
    "text": "the runtime typically which adds a",
    "start": "1106110",
    "end": "1108059"
  },
  {
    "text": "little bit of metadata to those logs",
    "start": "1108059",
    "end": "1109559"
  },
  {
    "text": "like the timestamp and which stream it's",
    "start": "1109559",
    "end": "1111780"
  },
  {
    "text": "coming from then they're written to the",
    "start": "1111780",
    "end": "1113580"
  },
  {
    "text": "log file and that log file is read by",
    "start": "1113580",
    "end": "1117419"
  },
  {
    "text": "the cubelet to serve logs requests and",
    "start": "1117419",
    "end": "1120870"
  },
  {
    "text": "eventually gets back to the user the",
    "start": "1120870",
    "end": "1123450"
  },
  {
    "text": "cubelet just parses the metadata portion",
    "start": "1123450",
    "end": "1125340"
  },
  {
    "text": "of the logs but eventually that",
    "start": "1125340",
    "end": "1128309"
  },
  {
    "text": "untrusted data is basically flowing from",
    "start": "1128309",
    "end": "1131250"
  },
  {
    "text": "the sandbox all the way to the user and",
    "start": "1131250",
    "end": "1133500"
  },
  {
    "text": "so the user needs to treat that as",
    "start": "1133500",
    "end": "1135390"
  },
  {
    "text": "untrusted data another pipe path is",
    "start": "1135390",
    "end": "1139350"
  },
  {
    "text": "through the logging agent that's running",
    "start": "1139350",
    "end": "1141900"
  },
  {
    "text": "may be fluent D and then pushed out to",
    "start": "1141900",
    "end": "1145320"
  },
  {
    "text": "the log aggregator now fluent D does",
    "start": "1145320",
    "end": "1147780"
  },
  {
    "text": "some parsing and some filtering and",
    "start": "1147780",
    "end": "1150870"
  },
  {
    "text": "maybe some munging of those logs I can",
    "start": "1150870",
    "end": "1154080"
  },
  {
    "text": "depends on your setup but that means",
    "start": "1154080",
    "end": "1157950"
  },
  {
    "text": "that fluent D is actually looking at",
    "start": "1157950",
    "end": "1159660"
  },
  {
    "text": "that untrusted data and parsing that so",
    "start": "1159660",
    "end": "1162390"
  },
  {
    "text": "what happens if there's a vulnerability",
    "start": "1162390",
    "end": "1163740"
  },
  {
    "text": "in fluent e triggered by that untrusted",
    "start": "1163740",
    "end": "1166320"
  },
  {
    "text": "log data that leads to code execution",
    "start": "1166320",
    "end": "1170040"
  },
  {
    "text": "again we have and we see there's a",
    "start": "1170040",
    "end": "1171870"
  },
  {
    "text": "single point of failure here and I was",
    "start": "1171870",
    "end": "1174540"
  },
  {
    "text": "kind of looking back through the history",
    "start": "1174540",
    "end": "1176730"
  },
  {
    "text": "of fluent evil nor abilities and I",
    "start": "1176730",
    "end": "1179190"
  },
  {
    "text": "didn't see anything like this as having",
    "start": "1179190",
    "end": "1181980"
  },
  {
    "text": "happened in the past but that doesn't",
    "start": "1181980",
    "end": "1183570"
  },
  {
    "text": "mean it can't happen in the future",
    "start": "1183570",
    "end": "1185790"
  },
  {
    "text": "one of the dependencies in fluency for",
    "start": "1185790",
    "end": "1187710"
  },
  {
    "text": "parsing JSON has had I saw seven",
    "start": "1187710",
    "end": "1191970"
  },
  {
    "text": "different bugs with seg fault issues so",
    "start": "1191970",
    "end": "1196320"
  },
  {
    "text": "we can see like maybe that could lead to",
    "start": "1196320",
    "end": "1198890"
  },
  {
    "text": "a memory vulnerability om and so what",
    "start": "1198890",
    "end": "1204440"
  },
  {
    "text": "can we do about this one option is just",
    "start": "1204440",
    "end": "1206570"
  },
  {
    "text": "to sandbox all the things sandbox flew",
    "start": "1206570",
    "end": "1209180"
  },
  {
    "text": "in D so now if you actually do manage to",
    "start": "1209180",
    "end": "1211490"
  },
  {
    "text": "trigger a vulnerability and flew in D",
    "start": "1211490",
    "end": "1213620"
  },
  {
    "text": "you're still trapped within flew in DS",
    "start": "1213620",
    "end": "1215720"
  },
  {
    "text": "sandbox and maybe we can use native",
    "start": "1215720",
    "end": "1218450"
  },
  {
    "text": "processes here or sorry native",
    "start": "1218450",
    "end": "1220220"
  },
  {
    "text": "containers because fluent D is our first",
    "start": "1220220",
    "end": "1222290"
  },
  {
    "text": "security boundary and so a single",
    "start": "1222290",
    "end": "1224300"
  },
  {
    "text": "security boundary might be acceptable",
    "start": "1224300",
    "end": "1227690"
  },
  {
    "text": "there and finally I want to talk about",
    "start": "1227690",
    "end": "1231730"
  },
  {
    "text": "attacks via hardware in the wake of",
    "start": "1231730",
    "end": "1234320"
  },
  {
    "text": "Spectre and meltdown so meltdown is a",
    "start": "1234320",
    "end": "1241420"
  },
  {
    "text": "vulnerability where a user space process",
    "start": "1241420",
    "end": "1243980"
  },
  {
    "text": "can read kernel memory this does not",
    "start": "1243980",
    "end": "1247940"
  },
  {
    "text": "escape a this is not cross a",
    "start": "1247940",
    "end": "1250040"
  },
  {
    "text": "virtualization boundary so actually",
    "start": "1250040",
    "end": "1252440"
  },
  {
    "text": "sandbox is do help us in the case of",
    "start": "1252440",
    "end": "1254720"
  },
  {
    "text": "meltdown but if we have a significantly",
    "start": "1254720",
    "end": "1258560"
  },
  {
    "text": "bad Hardware vulnerability no amount of",
    "start": "1258560",
    "end": "1262250"
  },
  {
    "text": "software isolation is going to save us",
    "start": "1262250",
    "end": "1264440"
  },
  {
    "text": "and we sort of see this inspector",
    "start": "1264440",
    "end": "1266660"
  },
  {
    "text": "variant - which does cross the VM",
    "start": "1266660",
    "end": "1269960"
  },
  {
    "text": "boundary and so if this is within your",
    "start": "1269960",
    "end": "1274910"
  },
  {
    "text": "threat model kind of the only thing we",
    "start": "1274910",
    "end": "1277730"
  },
  {
    "text": "can do at this point is to just segment",
    "start": "1277730",
    "end": "1280310"
  },
  {
    "text": "those sensitive workloads on to",
    "start": "1280310",
    "end": "1283610"
  },
  {
    "text": "different machines and then hope that",
    "start": "1283610",
    "end": "1286190"
  },
  {
    "text": "the vulnerability isn't in our network",
    "start": "1286190",
    "end": "1288290"
  },
  {
    "text": "interface because that would be bad",
    "start": "1288290",
    "end": "1291790"
  },
  {
    "text": "so in summary kubernetes is a very large",
    "start": "1293000",
    "end": "1296780"
  },
  {
    "text": "complex system with many layers of",
    "start": "1296780",
    "end": "1298820"
  },
  {
    "text": "attack surfaces exposed internally",
    "start": "1298820",
    "end": "1302410"
  },
  {
    "text": "sandboxes is an upcoming feature that",
    "start": "1302410",
    "end": "1305090"
  },
  {
    "text": "can help prevent a lot of those internal",
    "start": "1305090",
    "end": "1307610"
  },
  {
    "text": "threat vectors leveraging hypervisor",
    "start": "1307610",
    "end": "1311410"
  },
  {
    "text": "isolation and then we're looking at",
    "start": "1311410",
    "end": "1315410"
  },
  {
    "text": "deeper integration into the kubernetes",
    "start": "1315410",
    "end": "1317540"
  },
  {
    "text": "system to mitigate a lot of threats via",
    "start": "1317540",
    "end": "1320840"
  },
  {
    "text": "these other attack vectors I talked",
    "start": "1320840",
    "end": "1322790"
  },
  {
    "text": "about the kernel or I guess that's you",
    "start": "1322790",
    "end": "1325940"
  },
  {
    "text": "know the hypervisor isolation gives us",
    "start": "1325940",
    "end": "1328040"
  },
  {
    "text": "kernel isolation but then there's the",
    "start": "1328040",
    "end": "1329750"
  },
  {
    "text": "storage interfaces the logging",
    "start": "1329750",
    "end": "1332020"
  },
  {
    "text": "interfaces and the network interfaces so",
    "start": "1332020",
    "end": "1337450"
  },
  {
    "text": "when can you use sandboxes now we",
    "start": "1337450",
    "end": "1340180"
  },
  {
    "text": "actually have experimental support today",
    "start": "1340180",
    "end": "1342700"
  },
  {
    "text": "both cryo and container D support",
    "start": "1342700",
    "end": "1346350"
  },
  {
    "text": "choosing between different OCI runtimes",
    "start": "1346350",
    "end": "1349870"
  },
  {
    "text": "based on an annotation on the container",
    "start": "1349870",
    "end": "1353400"
  },
  {
    "text": "and this plugs into the CRI so you can",
    "start": "1353400",
    "end": "1356590"
  },
  {
    "text": "annotate your pod and take advantage of",
    "start": "1356590",
    "end": "1359890"
  },
  {
    "text": "using kata and G visor if you have your",
    "start": "1359890",
    "end": "1363790"
  },
  {
    "text": "cluster set up the right way this is",
    "start": "1363790",
    "end": "1366430"
  },
  {
    "text": "only protection at the kernel interface",
    "start": "1366430",
    "end": "1368650"
  },
  {
    "text": "again I was really hoping to get an",
    "start": "1368650",
    "end": "1372490"
  },
  {
    "text": "alpha out in 111 it looks like that's",
    "start": "1372490",
    "end": "1374440"
  },
  {
    "text": "probably not going to happen so I expect",
    "start": "1374440",
    "end": "1376270"
  },
  {
    "text": "to see an alpha in around 112 with an",
    "start": "1376270",
    "end": "1380350"
  },
  {
    "text": "actual kubernetes api better",
    "start": "1380350",
    "end": "1383920"
  },
  {
    "text": "implementation via kata and G visor and",
    "start": "1383920",
    "end": "1387130"
  },
  {
    "text": "also some improved resource management",
    "start": "1387130",
    "end": "1388900"
  },
  {
    "text": "that I didn't touch on today and then as",
    "start": "1388900",
    "end": "1392230"
  },
  {
    "text": "we go to beta actually looking at",
    "start": "1392230",
    "end": "1395140"
  },
  {
    "text": "hardening a lot of those other",
    "start": "1395140",
    "end": "1397320"
  },
  {
    "text": "interfaces as well",
    "start": "1397320",
    "end": "1399510"
  },
  {
    "text": "if this sounds cool to you you can get",
    "start": "1399510",
    "end": "1403240"
  },
  {
    "text": "involved this first link is to a",
    "start": "1403240",
    "end": "1406420"
  },
  {
    "text": "document on sandboxes that goes into a",
    "start": "1406420",
    "end": "1410080"
  },
  {
    "text": "lot of the challenges with building it",
    "start": "1410080",
    "end": "1412300"
  },
  {
    "text": "and there's a lot of design discussion",
    "start": "1412300",
    "end": "1413710"
  },
  {
    "text": "happening in the comment section we're",
    "start": "1413710",
    "end": "1415990"
  },
  {
    "text": "also talking about the design in the",
    "start": "1415990",
    "end": "1418120"
  },
  {
    "text": "signal community and this second link is",
    "start": "1418120",
    "end": "1421030"
  },
  {
    "text": "to where you can find out more about sig",
    "start": "1421030",
    "end": "1422950"
  },
  {
    "text": "node and our weekly meetings and the",
    "start": "1422950",
    "end": "1424420"
  },
  {
    "text": "different ways to engage there if you",
    "start": "1424420",
    "end": "1426700"
  },
  {
    "text": "want to contribute code of course we're",
    "start": "1426700",
    "end": "1428740"
  },
  {
    "text": "welcoming contributions in sig note but",
    "start": "1428740",
    "end": "1432010"
  },
  {
    "text": "also in cotta containers in G visor",
    "start": "1432010",
    "end": "1433720"
  },
  {
    "text": "these are all open source projects",
    "start": "1433720",
    "end": "1435540"
  },
  {
    "text": "looking for external contributions and",
    "start": "1435540",
    "end": "1441180"
  },
  {
    "text": "that's all I have today here's some",
    "start": "1441180",
    "end": "1444670"
  },
  {
    "text": "links to learn more about the different",
    "start": "1444670",
    "end": "1446320"
  },
  {
    "text": "topics it covered thank you",
    "start": "1446320",
    "end": "1450929"
  },
  {
    "text": "and I think we have time for questions",
    "start": "1455480",
    "end": "1460630"
  },
  {
    "text": "what about user name spaces and user ID",
    "start": "1470740",
    "end": "1475630"
  },
  {
    "text": "randomization do you see this as",
    "start": "1475630",
    "end": "1477350"
  },
  {
    "text": "becoming used in kubernetes yeah so the",
    "start": "1477350",
    "end": "1482929"
  },
  {
    "text": "question is about user name spaces user",
    "start": "1482929",
    "end": "1486260"
  },
  {
    "text": "name spaces is a good solution for",
    "start": "1486260",
    "end": "1488240"
  },
  {
    "text": "running as non-root it's still relying",
    "start": "1488240",
    "end": "1491480"
  },
  {
    "text": "on kernel isolation so still that single",
    "start": "1491480",
    "end": "1494570"
  },
  {
    "text": "security boundary we there are a few",
    "start": "1494570",
    "end": "1498649"
  },
  {
    "text": "proposals open for how to tie user name",
    "start": "1498649",
    "end": "1501320"
  },
  {
    "text": "spaces into kubernetes one of the",
    "start": "1501320",
    "end": "1503510"
  },
  {
    "text": "biggest challenges is around handling",
    "start": "1503510",
    "end": "1505429"
  },
  {
    "text": "permissions of volumes so if you run if",
    "start": "1505429",
    "end": "1509899"
  },
  {
    "text": "your pod starts up and mounts a volume",
    "start": "1509899",
    "end": "1512289"
  },
  {
    "text": "and write some data to it and then your",
    "start": "1512289",
    "end": "1515480"
  },
  {
    "text": "pod gets killed and restarted elsewhere",
    "start": "1515480",
    "end": "1517490"
  },
  {
    "text": "maybe it has a different name space",
    "start": "1517490",
    "end": "1519350"
  },
  {
    "text": "mapping you end up with different user",
    "start": "1519350",
    "end": "1521330"
  },
  {
    "text": "IDs and it can no longer read that data",
    "start": "1521330",
    "end": "1523399"
  },
  {
    "text": "from the volume so we still need to",
    "start": "1523399",
    "end": "1525679"
  },
  {
    "text": "figure out how to deal with that problem",
    "start": "1525679",
    "end": "1527529"
  },
  {
    "text": "but definitely something we want to add",
    "start": "1527529",
    "end": "1531639"
  },
  {
    "text": "any other questions",
    "start": "1531639",
    "end": "1535240"
  },
  {
    "text": "and my question is would the legacy be I",
    "start": "1543049",
    "end": "1545760"
  },
  {
    "text": "must be able to run in sandbox without",
    "start": "1545760",
    "end": "1547440"
  },
  {
    "text": "huge notification or to expect legacy to",
    "start": "1547440",
    "end": "1549900"
  },
  {
    "text": "be rewritten to run on sandbox sorry I",
    "start": "1549900",
    "end": "1553080"
  },
  {
    "text": "didn't catch the first part of the",
    "start": "1553080",
    "end": "1554160"
  },
  {
    "text": "question",
    "start": "1554160",
    "end": "1554850"
  },
  {
    "text": "the legacy VMs would they be able to run",
    "start": "1554850",
    "end": "1557070"
  },
  {
    "text": "in sandbox legacy virtual machines Oh",
    "start": "1557070",
    "end": "1561900"
  },
  {
    "text": "legacy verge yeah sorry so the question",
    "start": "1561900",
    "end": "1567179"
  },
  {
    "text": "is about legacy VMs and non",
    "start": "1567179",
    "end": "1570030"
  },
  {
    "text": "containerized workloads it's definitely",
    "start": "1570030",
    "end": "1574650"
  },
  {
    "text": "a possibility cotta containers is",
    "start": "1574650",
    "end": "1578160"
  },
  {
    "text": "running a VM environment it is a",
    "start": "1578160",
    "end": "1582120"
  },
  {
    "text": "stripped-down VM so it's not it might",
    "start": "1582120",
    "end": "1585150"
  },
  {
    "text": "not have the full set of hardware",
    "start": "1585150",
    "end": "1586740"
  },
  {
    "text": "interfaces that your legacy workload",
    "start": "1586740",
    "end": "1588660"
  },
  {
    "text": "needs it's also a stripped down guest",
    "start": "1588660",
    "end": "1591030"
  },
  {
    "text": "operating system so we would need a way",
    "start": "1591030",
    "end": "1592740"
  },
  {
    "text": "of specifying the the full VM image to",
    "start": "1592740",
    "end": "1597450"
  },
  {
    "text": "the sandbox there's a project called",
    "start": "1597450",
    "end": "1601640"
  },
  {
    "text": "vert cube vert which is designed to",
    "start": "1601640",
    "end": "1606210"
  },
  {
    "text": "address this use case but is currently",
    "start": "1606210",
    "end": "1610500"
  },
  {
    "text": "out of scope for the sandbox feature any",
    "start": "1610500",
    "end": "1618870"
  },
  {
    "text": "other questions all right I'll be",
    "start": "1618870",
    "end": "1625020"
  },
  {
    "text": "outside if anyone wants to ask more",
    "start": "1625020",
    "end": "1627299"
  },
  {
    "text": "questions privately thank you",
    "start": "1627299",
    "end": "1631490"
  }
]