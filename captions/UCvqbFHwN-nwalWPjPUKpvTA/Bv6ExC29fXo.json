[
  {
    "text": "hello everyone uh my name is Ivy I am a",
    "start": "4000",
    "end": "6759"
  },
  {
    "text": "grpc Java maintainer so today uh my",
    "start": "6759",
    "end": "9679"
  },
  {
    "text": "overview talk will walk you through the",
    "start": "9679",
    "end": "11799"
  },
  {
    "text": "Core Concepts and a request life cycle",
    "start": "11799",
    "end": "14480"
  },
  {
    "text": "in",
    "start": "14480",
    "end": "15240"
  },
  {
    "text": "grpc so I know many of you have already",
    "start": "15240",
    "end": "17760"
  },
  {
    "text": "been us using grpc which is awesome but",
    "start": "17760",
    "end": "20920"
  },
  {
    "text": "whether you are a grpc expert or just",
    "start": "20920",
    "end": "24160"
  },
  {
    "text": "recently started GPC this talk I believe",
    "start": "24160",
    "end": "26640"
  },
  {
    "text": "will probably have something for you and",
    "start": "26640",
    "end": "28920"
  },
  {
    "text": "if you are just a started we have the",
    "start": "28920",
    "end": "31840"
  },
  {
    "text": "Cod laabs throughout the day uh in",
    "start": "31840",
    "end": "33800"
  },
  {
    "text": "breakout rooms those are perfect for to",
    "start": "33800",
    "end": "36360"
  },
  {
    "text": "gain some practical experience on",
    "start": "36360",
    "end": "38640"
  },
  {
    "text": "grpc so let's get started by the end of",
    "start": "38640",
    "end": "41440"
  },
  {
    "text": "the session you'll be all set for a",
    "start": "41440",
    "end": "43239"
  },
  {
    "text": "whole day of reach topics and advanced",
    "start": "43239",
    "end": "45360"
  },
  {
    "text": "use cases around",
    "start": "45360",
    "end": "48600"
  },
  {
    "text": "grpc first of all grpc is a Cutting Edge",
    "start": "49680",
    "end": "53160"
  },
  {
    "text": "Open sauce and high performance remote",
    "start": "53160",
    "end": "55600"
  },
  {
    "text": "procedure call",
    "start": "55600",
    "end": "57399"
  },
  {
    "text": "framework um it is the go-to standard in",
    "start": "57399",
    "end": "60199"
  },
  {
    "text": "the industry but part A simpler uh term",
    "start": "60199",
    "end": "64080"
  },
  {
    "text": "it think of it as a super U fast fight",
    "start": "64080",
    "end": "67200"
  },
  {
    "text": "service for your data it Zing your",
    "start": "67200",
    "end": "69520"
  },
  {
    "text": "business bi across",
    "start": "69520",
    "end": "72840"
  },
  {
    "text": "internet JP use cases everywhere it",
    "start": "73200",
    "end": "76840"
  },
  {
    "text": "enables communication between a wide",
    "start": "76840",
    "end": "78960"
  },
  {
    "text": "range of devices from the mobile phone",
    "start": "78960",
    "end": "81600"
  },
  {
    "text": "to web browser to Des desktops and to",
    "start": "81600",
    "end": "84960"
  },
  {
    "text": "various backend",
    "start": "84960",
    "end": "86720"
  },
  {
    "text": "platforms this versatility makes it",
    "start": "86720",
    "end": "89400"
  },
  {
    "text": "perfect to building microservices and",
    "start": "89400",
    "end": "91799"
  },
  {
    "text": "distributed applications whether in on",
    "start": "91799",
    "end": "94600"
  },
  {
    "text": "premise in the cloud or in the",
    "start": "94600",
    "end": "99000"
  },
  {
    "text": "containers JPC is popular because it is",
    "start": "101159",
    "end": "104320"
  },
  {
    "text": "suitable for many needs in addition to",
    "start": "104320",
    "end": "107200"
  },
  {
    "text": "being available in a wide range of",
    "start": "107200",
    "end": "109320"
  },
  {
    "text": "platforms and language the performance",
    "start": "109320",
    "end": "111880"
  },
  {
    "text": "is industry leading it is blazing fast",
    "start": "111880",
    "end": "115119"
  },
  {
    "text": "incredibly efficient that connects your",
    "start": "115119",
    "end": "117759"
  },
  {
    "text": "application and services at very",
    "start": "117759",
    "end": "119479"
  },
  {
    "text": "reliable and a smooth",
    "start": "119479",
    "end": "122240"
  },
  {
    "text": "way many components in grpc are designed",
    "start": "122240",
    "end": "125439"
  },
  {
    "text": "to be plugable like there are different",
    "start": "125439",
    "end": "127520"
  },
  {
    "text": "transport suitable for different devices",
    "start": "127520",
    "end": "129599"
  },
  {
    "text": "and environments like you can specify",
    "start": "129599",
    "end": "131920"
  },
  {
    "text": "civilization wire format or you can",
    "start": "131920",
    "end": "134239"
  },
  {
    "text": "specify interceptors Etc this all makes",
    "start": "134239",
    "end": "137760"
  },
  {
    "text": "integrating with your development stack",
    "start": "137760",
    "end": "140080"
  },
  {
    "text": "very efficient and",
    "start": "140080",
    "end": "142920"
  },
  {
    "text": "flexible JPC has Rich features around",
    "start": "142920",
    "end": "145800"
  },
  {
    "text": "the um core traffic management or",
    "start": "145800",
    "end": "148200"
  },
  {
    "text": "security and the tailored ones for PIV",
    "start": "148200",
    "end": "151200"
  },
  {
    "text": "uh for service match just to name a few",
    "start": "151200",
    "end": "154959"
  },
  {
    "text": "let's expand more on all of these",
    "start": "154959",
    "end": "158720"
  },
  {
    "text": "Dimensions gp's popular popularity",
    "start": "158720",
    "end": "161480"
  },
  {
    "text": "stands on a few key fundamental design",
    "start": "161480",
    "end": "163800"
  },
  {
    "text": "decisions that brings in Cutting Edge",
    "start": "163800",
    "end": "166280"
  },
  {
    "text": "Technologies on top of it one is that",
    "start": "166280",
    "end": "168959"
  },
  {
    "text": "JPC is using protuff for data calization",
    "start": "168959",
    "end": "172959"
  },
  {
    "text": "and generating",
    "start": "172959",
    "end": "175959"
  },
  {
    "text": "interfaces protuff is an open source",
    "start": "176560",
    "end": "179040"
  },
  {
    "text": "language agnostic framework uh all of",
    "start": "179040",
    "end": "181800"
  },
  {
    "text": "the grpc Implement uh language",
    "start": "181800",
    "end": "183760"
  },
  {
    "text": "implementations use protuff plugin to",
    "start": "183760",
    "end": "186640"
  },
  {
    "text": "generate interfaces therefore these",
    "start": "186640",
    "end": "189200"
  },
  {
    "text": "language uh these JPC language can talk",
    "start": "189200",
    "end": "191959"
  },
  {
    "text": "with each other over various devices and",
    "start": "191959",
    "end": "196319"
  },
  {
    "text": "platforms Pabu uses binary encoding it",
    "start": "196319",
    "end": "199920"
  },
  {
    "text": "is very efficient in parsing and reduces",
    "start": "199920",
    "end": "202519"
  },
  {
    "text": "message sizes all of which make GPC high",
    "start": "202519",
    "end": "206319"
  },
  {
    "text": "performance and high flexibility",
    "start": "206319",
    "end": "208360"
  },
  {
    "text": "compared with other RPC",
    "start": "208360",
    "end": "211760"
  },
  {
    "text": "Frameworks GPC boasts an extensive",
    "start": "212319",
    "end": "215640"
  },
  {
    "text": "support of languages and platforms as",
    "start": "215640",
    "end": "218080"
  },
  {
    "text": "evidenced from this",
    "start": "218080",
    "end": "220599"
  },
  {
    "text": "list um the exciting news as Kevin abek",
    "start": "220599",
    "end": "223959"
  },
  {
    "text": "has mentioned that Russ JPC R is coming",
    "start": "223959",
    "end": "226439"
  },
  {
    "text": "soon so uh don't miss out today's",
    "start": "226439",
    "end": "228319"
  },
  {
    "text": "session if you want to learn more about",
    "start": "228319",
    "end": "231760"
  },
  {
    "text": "it another key design decision is that",
    "start": "232760",
    "end": "235280"
  },
  {
    "text": "your PC is built on top of http2 that",
    "start": "235280",
    "end": "238360"
  },
  {
    "text": "make it compatible with with a variety",
    "start": "238360",
    "end": "240640"
  },
  {
    "text": "of low balancers and practice over the",
    "start": "240640",
    "end": "242799"
  },
  {
    "text": "wild",
    "start": "242799",
    "end": "244360"
  },
  {
    "text": "internet hp2 reduces TCP connection is",
    "start": "244360",
    "end": "248159"
  },
  {
    "text": "binary and use header compression all of",
    "start": "248159",
    "end": "250920"
  },
  {
    "text": "which makes grpc high performance reduce",
    "start": "250920",
    "end": "253519"
  },
  {
    "text": "latency and make better use of",
    "start": "253519",
    "end": "258120"
  },
  {
    "text": "resources okay Core Concepts so gpc's",
    "start": "258919",
    "end": "262120"
  },
  {
    "text": "core concept starts with channel channel",
    "start": "262120",
    "end": "265240"
  },
  {
    "text": "is an abstract of the end point that you",
    "start": "265240",
    "end": "267880"
  },
  {
    "text": "can send or receive messages",
    "start": "267880",
    "end": "271320"
  },
  {
    "text": "it is the first object that you will",
    "start": "271320",
    "end": "273120"
  },
  {
    "text": "create when you are using JPC to create",
    "start": "273120",
    "end": "276199"
  },
  {
    "text": "a channel you will provide the talk UI",
    "start": "276199",
    "end": "278720"
  },
  {
    "text": "string to specify the remote Hoster name",
    "start": "278720",
    "end": "281320"
  },
  {
    "text": "and then Channel credentials for",
    "start": "281320",
    "end": "283479"
  },
  {
    "text": "authorization again I highly recommend",
    "start": "283479",
    "end": "285880"
  },
  {
    "text": "to attend those collabs to gain more",
    "start": "285880",
    "end": "288600"
  },
  {
    "text": "practical experiences",
    "start": "288600",
    "end": "291560"
  },
  {
    "text": "quickly so as a channel is like a",
    "start": "292280",
    "end": "294720"
  },
  {
    "text": "waterpipe placeholder the sub channels",
    "start": "294720",
    "end": "296840"
  },
  {
    "text": "are the real connections towards the",
    "start": "296840",
    "end": "298600"
  },
  {
    "text": "back end um Services JPC during it life",
    "start": "298600",
    "end": "302280"
  },
  {
    "text": "cycle will create those sub channels",
    "start": "302280",
    "end": "304960"
  },
  {
    "text": "dynamically selects sub channels to",
    "start": "304960",
    "end": "307360"
  },
  {
    "text": "multipli rpcs over the channel and it",
    "start": "307360",
    "end": "310400"
  },
  {
    "text": "will report Channel status and finally",
    "start": "310400",
    "end": "312800"
  },
  {
    "text": "tear down the super channels to return",
    "start": "312800",
    "end": "316759"
  },
  {
    "text": "resources JPC is very simple to use the",
    "start": "317800",
    "end": "321319"
  },
  {
    "text": "application only need to send a request",
    "start": "321319",
    "end": "323680"
  },
  {
    "text": "of the stop that is Created from the",
    "start": "323680",
    "end": "325880"
  },
  {
    "text": "channel and stop is at the protuff",
    "start": "325880",
    "end": "328800"
  },
  {
    "text": "generated layer which is also the first",
    "start": "328800",
    "end": "330919"
  },
  {
    "text": "layer that you will see when you're",
    "start": "330919",
    "end": "332240"
  },
  {
    "text": "using",
    "start": "332240",
    "end": "333479"
  },
  {
    "text": "JPC the stop qu call towards the JPC run",
    "start": "333479",
    "end": "336720"
  },
  {
    "text": "time and then further creates stream on",
    "start": "336720",
    "end": "339400"
  },
  {
    "text": "the transport so in JPC an RPC a core or",
    "start": "339400",
    "end": "343800"
  },
  {
    "text": "stream are fundamentally the same",
    "start": "343800",
    "end": "345840"
  },
  {
    "text": "concept just refer to by different names",
    "start": "345840",
    "end": "348720"
  },
  {
    "text": "at various um stages in their life",
    "start": "348720",
    "end": "353600"
  },
  {
    "text": "cycle because the CHP speakers IP",
    "start": "355160",
    "end": "357880"
  },
  {
    "text": "address while you specify or Target UI",
    "start": "357880",
    "end": "360560"
  },
  {
    "text": "screen when you are creating the channel",
    "start": "360560",
    "end": "362639"
  },
  {
    "text": "so the first thing JPC will do is to do",
    "start": "362639",
    "end": "365080"
  },
  {
    "text": "this uh translation before it contacts",
    "start": "365080",
    "end": "367479"
  },
  {
    "text": "the",
    "start": "367479",
    "end": "369000"
  },
  {
    "text": "internet name resolution is often",
    "start": "369000",
    "end": "371199"
  },
  {
    "text": "thought to be the same as DNS but in",
    "start": "371199",
    "end": "373720"
  },
  {
    "text": "practice however uh name resolution is",
    "start": "373720",
    "end": "376160"
  },
  {
    "text": "often augmented with extensions or",
    "start": "376160",
    "end": "378639"
  },
  {
    "text": "completely replaced to do name",
    "start": "378639",
    "end": "381400"
  },
  {
    "text": "resolution fundamentally name resolution",
    "start": "381400",
    "end": "384080"
  },
  {
    "text": "is a service Discovery and it's",
    "start": "384080",
    "end": "386520"
  },
  {
    "text": "pluggable you can bring in the custom",
    "start": "386520",
    "end": "389000"
  },
  {
    "text": "name solver by specifying a schema and",
    "start": "389000",
    "end": "392440"
  },
  {
    "text": "then you will put the schema as a syntax",
    "start": "392440",
    "end": "395080"
  },
  {
    "text": "in the Target your string grpc will do",
    "start": "395080",
    "end": "397240"
  },
  {
    "text": "this mapping for",
    "start": "397240",
    "end": "399918"
  },
  {
    "text": "you name resolver returns service config",
    "start": "400919",
    "end": "404160"
  },
  {
    "text": "to the next component which is low",
    "start": "404160",
    "end": "406039"
  },
  {
    "text": "balancer low balancer manages sub",
    "start": "406039",
    "end": "409080"
  },
  {
    "text": "channels create connections and",
    "start": "409080",
    "end": "411120"
  },
  {
    "text": "distribute request among the backend",
    "start": "411120",
    "end": "413160"
  },
  {
    "text": "multiple backhand",
    "start": "413160",
    "end": "415039"
  },
  {
    "text": "Services by taking this service config",
    "start": "415039",
    "end": "417720"
  },
  {
    "text": "low balancer can understand where and",
    "start": "417720",
    "end": "420199"
  },
  {
    "text": "how to route the traffic like which kind",
    "start": "420199",
    "end": "422400"
  },
  {
    "text": "of load Bal type to use their",
    "start": "422400",
    "end": "424520"
  },
  {
    "text": "configurations whether to do health",
    "start": "424520",
    "end": "426280"
  },
  {
    "text": "check",
    "start": "426280",
    "end": "427919"
  },
  {
    "text": "Etc low balancer is a plugable component",
    "start": "427919",
    "end": "431720"
  },
  {
    "text": "the built-in low balancer types are",
    "start": "431720",
    "end": "433400"
  },
  {
    "text": "picked first which is the default and",
    "start": "433400",
    "end": "435599"
  },
  {
    "text": "the r robbing wait R robbing list",
    "start": "435599",
    "end": "438319"
  },
  {
    "text": "request",
    "start": "438319",
    "end": "440800"
  },
  {
    "text": "Etc so for the first time the system",
    "start": "441479",
    "end": "444599"
  },
  {
    "text": "establishes low balancer will um create",
    "start": "444599",
    "end": "447520"
  },
  {
    "text": "connection towards the backend service",
    "start": "447520",
    "end": "449800"
  },
  {
    "text": "um that is listening on the certain",
    "start": "449800",
    "end": "451560"
  },
  {
    "text": "ports when the system is running low",
    "start": "451560",
    "end": "454400"
  },
  {
    "text": "balancer will monitor the connections on",
    "start": "454400",
    "end": "456720"
  },
  {
    "text": "those sub channels and if necessary it",
    "start": "456720",
    "end": "458919"
  },
  {
    "text": "will tear down some CH sub channels and",
    "start": "458919",
    "end": "461120"
  },
  {
    "text": "replace with new",
    "start": "461120",
    "end": "463159"
  },
  {
    "text": "ones like for example the back back end",
    "start": "463159",
    "end": "465599"
  },
  {
    "text": "becomes",
    "start": "465599",
    "end": "466560"
  },
  {
    "text": "unhealthy uh Lo balancer essentially",
    "start": "466560",
    "end": "469000"
  },
  {
    "text": "divides GP system into control plane and",
    "start": "469000",
    "end": "471560"
  },
  {
    "text": "data plane it maintains a cach cach the",
    "start": "471560",
    "end": "475080"
  },
  {
    "text": "Picker that dynamically selects a sub",
    "start": "475080",
    "end": "477759"
  },
  {
    "text": "channel on the per RPC based routing and",
    "start": "477759",
    "end": "480800"
  },
  {
    "text": "this is on the data plane path while on",
    "start": "480800",
    "end": "482560"
  },
  {
    "text": "the control plane path the low balancer",
    "start": "482560",
    "end": "484759"
  },
  {
    "text": "will swap the cash in flight this",
    "start": "484759",
    "end": "487199"
  },
  {
    "text": "essentially ensures that grpc is",
    "start": "487199",
    "end": "490039"
  },
  {
    "text": "scalable effectively and high",
    "start": "490039",
    "end": "493159"
  },
  {
    "text": "performance lb is one of the most",
    "start": "493159",
    "end": "495479"
  },
  {
    "text": "critical component in GPC so if you're",
    "start": "495479",
    "end": "497879"
  },
  {
    "text": "are interested in learning more you can",
    "start": "497879",
    "end": "499400"
  },
  {
    "text": "check out eswa session",
    "start": "499400",
    "end": "502879"
  },
  {
    "text": "today upon the connection establishment",
    "start": "503919",
    "end": "506840"
  },
  {
    "text": "GPC will send a request over the Y",
    "start": "506840",
    "end": "509960"
  },
  {
    "text": "it is using the protuff calization and",
    "start": "509960",
    "end": "512719"
  },
  {
    "text": "the data is framed using htb2",
    "start": "512719",
    "end": "516919"
  },
  {
    "text": "protocol the server s side is a mirror",
    "start": "517360",
    "end": "519959"
  },
  {
    "text": "of the client s the server",
    "start": "519959",
    "end": "521959"
  },
  {
    "text": "Transportation once received the request",
    "start": "521959",
    "end": "525040"
  },
  {
    "text": "um will pass up the messages to the JFC",
    "start": "525040",
    "end": "527279"
  },
  {
    "text": "run time toward the Stop and notifies",
    "start": "527279",
    "end": "529279"
  },
  {
    "text": "the",
    "start": "529279",
    "end": "530279"
  },
  {
    "text": "application the application sends a",
    "start": "530279",
    "end": "532399"
  },
  {
    "text": "response back on the",
    "start": "532399",
    "end": "535320"
  },
  {
    "text": "stop JPC communic back to the client and",
    "start": "535680",
    "end": "540000"
  },
  {
    "text": "depending on how many those kind of",
    "start": "540000",
    "end": "542040"
  },
  {
    "text": "round trips in each RPC GP supports four",
    "start": "542040",
    "end": "544720"
  },
  {
    "text": "types of them unit call is that you only",
    "start": "544720",
    "end": "547200"
  },
  {
    "text": "have one request and response um within",
    "start": "547200",
    "end": "549959"
  },
  {
    "text": "single RPC while by streaming is that",
    "start": "549959",
    "end": "552120"
  },
  {
    "text": "you have multiple on both directions and",
    "start": "552120",
    "end": "554800"
  },
  {
    "text": "similarly for count streaming and server",
    "start": "554800",
    "end": "557560"
  },
  {
    "text": "streaming in principle J is always",
    "start": "557560",
    "end": "560000"
  },
  {
    "text": "asynchronous um but some of apis are",
    "start": "560000",
    "end": "562200"
  },
  {
    "text": "blocking these are just special cases of",
    "start": "562200",
    "end": "564720"
  },
  {
    "text": "the asynchronous",
    "start": "564720",
    "end": "566760"
  },
  {
    "text": "cost you can choose one for your",
    "start": "566760",
    "end": "569160"
  },
  {
    "text": "business bus",
    "start": "569160",
    "end": "571480"
  },
  {
    "text": "logic a few more bonus um tips for the",
    "start": "571480",
    "end": "575560"
  },
  {
    "text": "core comp Concepts in the J life",
    "start": "575560",
    "end": "579160"
  },
  {
    "text": "cycle so at the channel and server layer",
    "start": "579160",
    "end": "583040"
  },
  {
    "text": "interceptors are useful tools to add a",
    "start": "583040",
    "end": "586079"
  },
  {
    "text": "task tasks that are independent of the",
    "start": "586079",
    "end": "588440"
  },
  {
    "text": "methods but apply to all or most of the",
    "start": "588440",
    "end": "592640"
  },
  {
    "text": "rpcs interceptors are very powerful",
    "start": "592640",
    "end": "595160"
  },
  {
    "text": "midle Weare tools to add a tasks to um",
    "start": "595160",
    "end": "598440"
  },
  {
    "text": "modify or replace your your your cost um",
    "start": "598440",
    "end": "602839"
  },
  {
    "text": "before and after they reach their",
    "start": "602839",
    "end": "604360"
  },
  {
    "text": "destination at both the client and the",
    "start": "604360",
    "end": "606399"
  },
  {
    "text": "server",
    "start": "606399",
    "end": "608160"
  },
  {
    "text": "side this provides a very clean way to",
    "start": "608160",
    "end": "612160"
  },
  {
    "text": "um address uh Cutting Edge concerns like",
    "start": "612160",
    "end": "615800"
  },
  {
    "text": "logging authenication authorization like",
    "start": "615800",
    "end": "618480"
  },
  {
    "text": "ever handling monitoring Etc without",
    "start": "618480",
    "end": "620880"
  },
  {
    "text": "cluttering your main application",
    "start": "620880",
    "end": "623839"
  },
  {
    "text": "logic you can provide multiple um client",
    "start": "623839",
    "end": "626680"
  },
  {
    "text": "server interceptors and their order",
    "start": "626680",
    "end": "628279"
  },
  {
    "text": "matters for them example if you are",
    "start": "628279",
    "end": "630240"
  },
  {
    "text": "installing two client interceptors the",
    "start": "630240",
    "end": "632399"
  },
  {
    "text": "caching and loging Interceptor and if",
    "start": "632399",
    "end": "634399"
  },
  {
    "text": "you put log uh caching Interceptor front",
    "start": "634399",
    "end": "637360"
  },
  {
    "text": "then that means you are focusing more on",
    "start": "637360",
    "end": "639079"
  },
  {
    "text": "the communication because the loging",
    "start": "639079",
    "end": "641040"
  },
  {
    "text": "part will be just skipped if you have a",
    "start": "641040",
    "end": "643839"
  },
  {
    "text": "a cash hit but if you flipped other to",
    "start": "643839",
    "end": "646680"
  },
  {
    "text": "put the login first then you are",
    "start": "646680",
    "end": "648320"
  },
  {
    "text": "observing more on the client Behavior",
    "start": "648320",
    "end": "650320"
  },
  {
    "text": "because all the requests will be",
    "start": "650320",
    "end": "653240"
  },
  {
    "text": "logged you might find that many of your",
    "start": "653240",
    "end": "656079"
  },
  {
    "text": "functionality is already available as an",
    "start": "656079",
    "end": "658480"
  },
  {
    "text": "Interceptor in in The Wider GPC",
    "start": "658480",
    "end": "662800"
  },
  {
    "text": "ecosystem deadline and time out they are",
    "start": "664800",
    "end": "668360"
  },
  {
    "text": "um when the client is unwilling to wait",
    "start": "668360",
    "end": "670600"
  },
  {
    "text": "for response from a server the client",
    "start": "670600",
    "end": "673000"
  },
  {
    "text": "will receive a deadline exceeded status",
    "start": "673000",
    "end": "675399"
  },
  {
    "text": "code from",
    "start": "675399",
    "end": "677320"
  },
  {
    "text": "grpc this safeguards against RPC from",
    "start": "677320",
    "end": "680120"
  },
  {
    "text": "taking infinite amount of time when it",
    "start": "680120",
    "end": "682480"
  },
  {
    "text": "is doing um the request especially um in",
    "start": "682480",
    "end": "686200"
  },
  {
    "text": "distributed systems where Network",
    "start": "686200",
    "end": "687720"
  },
  {
    "text": "latency or the servers can cost",
    "start": "687720",
    "end": "691880"
  },
  {
    "text": "L that line can be set from the client",
    "start": "691880",
    "end": "695000"
  },
  {
    "text": "side when it starts an RPC like in this",
    "start": "695000",
    "end": "697279"
  },
  {
    "text": "step um some languages have the concept",
    "start": "697279",
    "end": "700440"
  },
  {
    "text": "of deadline others Ed idea of timeout",
    "start": "700440",
    "end": "703920"
  },
  {
    "text": "well deadline is that is a specific time",
    "start": "703920",
    "end": "706440"
  },
  {
    "text": "point where your RPC cannot go pass by",
    "start": "706440",
    "end": "709560"
  },
  {
    "text": "but the uh time out is the max duration",
    "start": "709560",
    "end": "711959"
  },
  {
    "text": "of the time to compete a RPC these two",
    "start": "711959",
    "end": "715160"
  },
  {
    "text": "concepts are interchangeable with each",
    "start": "715160",
    "end": "718240"
  },
  {
    "text": "other while deadline ex seeded is very",
    "start": "718240",
    "end": "720800"
  },
  {
    "text": "common when the request never leaves the",
    "start": "720800",
    "end": "722720"
  },
  {
    "text": "client for example uh in a typical",
    "start": "722720",
    "end": "725079"
  },
  {
    "text": "scenario that the TCP connection cannot",
    "start": "725079",
    "end": "727200"
  },
  {
    "text": "be established from the lb but when it",
    "start": "727200",
    "end": "730360"
  },
  {
    "text": "leaves the client it will carry this um",
    "start": "730360",
    "end": "733320"
  },
  {
    "text": "deadline information to the server it is",
    "start": "733320",
    "end": "735959"
  },
  {
    "text": "possible that when server first receive",
    "start": "735959",
    "end": "738000"
  },
  {
    "text": "the request it already has earned",
    "start": "738000",
    "end": "740000"
  },
  {
    "text": "realistically small amount of time to",
    "start": "740000",
    "end": "741760"
  },
  {
    "text": "finish at this time it will just cancel",
    "start": "741760",
    "end": "744399"
  },
  {
    "text": "the call and propagate that line",
    "start": "744399",
    "end": "746079"
  },
  {
    "text": "exceeded the status code to the client",
    "start": "746079",
    "end": "750199"
  },
  {
    "text": "while in a distributed application uh it",
    "start": "750199",
    "end": "752440"
  },
  {
    "text": "is typical it's very possible that the",
    "start": "752440",
    "end": "754079"
  },
  {
    "text": "server is also a client towards the",
    "start": "754079",
    "end": "757279"
  },
  {
    "text": "downstream service in this scenario the",
    "start": "757279",
    "end": "760160"
  },
  {
    "text": "um propagating deadline from in incoming",
    "start": "760160",
    "end": "763800"
  },
  {
    "text": "RPC to an ongoing outgoing one is uh is",
    "start": "763800",
    "end": "767040"
  },
  {
    "text": "supported by",
    "start": "767040",
    "end": "768360"
  },
  {
    "text": "JPC there are many benefits of set",
    "start": "768360",
    "end": "771240"
  },
  {
    "text": "setting that line for example you",
    "start": "771240",
    "end": "773040"
  },
  {
    "text": "optimize your resource usage improve",
    "start": "773040",
    "end": "775160"
  },
  {
    "text": "latency and abort long um running",
    "start": "775160",
    "end": "778320"
  },
  {
    "text": "operations that are unlikely to",
    "start": "778320",
    "end": "780600"
  },
  {
    "text": "succeed and it is the best practice to",
    "start": "780600",
    "end": "783160"
  },
  {
    "text": "always set a",
    "start": "783160",
    "end": "785800"
  },
  {
    "text": "deadline while deadline check is",
    "start": "786240",
    "end": "788240"
  },
  {
    "text": "cancellation and user can also actively",
    "start": "788240",
    "end": "791079"
  },
  {
    "text": "termin on outgoing on PC RPC actively",
    "start": "791079",
    "end": "794959"
  },
  {
    "text": "and this is done by do cancel on the",
    "start": "794959",
    "end": "797680"
  },
  {
    "text": "client call object and sometimes on the",
    "start": "797680",
    "end": "800320"
  },
  {
    "text": "context in some",
    "start": "800320",
    "end": "802160"
  },
  {
    "text": "languages like in this code spp it it",
    "start": "802160",
    "end": "804440"
  },
  {
    "text": "cancel on the future",
    "start": "804440",
    "end": "806519"
  },
  {
    "text": "step the cancellation signal is uh",
    "start": "806519",
    "end": "809560"
  },
  {
    "text": "propagated to the server and normally um",
    "start": "809560",
    "end": "812720"
  },
  {
    "text": "GPC does not have mechanism to interrupt",
    "start": "812720",
    "end": "814720"
  },
  {
    "text": "the server application of this",
    "start": "814720",
    "end": "815959"
  },
  {
    "text": "cancellation but that is not problem the",
    "start": "815959",
    "end": "818160"
  },
  {
    "text": "server can check the cancellation status",
    "start": "818160",
    "end": "820560"
  },
  {
    "text": "on the call and actually to optimize",
    "start": "820560",
    "end": "823639"
  },
  {
    "text": "resource utilization if RPC is long",
    "start": "823639",
    "end": "826639"
  },
  {
    "text": "lived the server Handler should",
    "start": "826639",
    "end": "828720"
  },
  {
    "text": "periodically um can check the status of",
    "start": "828720",
    "end": "831440"
  },
  {
    "text": "the call to see whether it is canceled",
    "start": "831440",
    "end": "833720"
  },
  {
    "text": "and Sease operation if it does and",
    "start": "833720",
    "end": "836720"
  },
  {
    "text": "propagate the operation downstreams",
    "start": "836720",
    "end": "840959"
  },
  {
    "text": "um by reattempting the failed operations",
    "start": "843440",
    "end": "846199"
  },
  {
    "text": "applications can overcome various",
    "start": "846199",
    "end": "848320"
  },
  {
    "text": "problems temporary issues like Network",
    "start": "848320",
    "end": "850320"
  },
  {
    "text": "or server",
    "start": "850320",
    "end": "851519"
  },
  {
    "text": "glitches your TR component stands in the",
    "start": "851519",
    "end": "854120"
  },
  {
    "text": "core above transport layer and when a TR",
    "start": "854120",
    "end": "856880"
  },
  {
    "text": "happens it will duplicate a stream on",
    "start": "856880",
    "end": "858920"
  },
  {
    "text": "the",
    "start": "858920",
    "end": "860519"
  },
  {
    "text": "transport users uh does not immediately",
    "start": "860519",
    "end": "863079"
  },
  {
    "text": "notice your exists except for increased",
    "start": "863079",
    "end": "866199"
  },
  {
    "text": "latency but with growing the growing",
    "start": "866199",
    "end": "868680"
  },
  {
    "text": "support for observability you can see",
    "start": "868680",
    "end": "870639"
  },
  {
    "text": "more information on retry which is",
    "start": "870639",
    "end": "873000"
  },
  {
    "text": "awesome and let's dive more into the",
    "start": "873000",
    "end": "876320"
  },
  {
    "text": "retry",
    "start": "876320",
    "end": "878519"
  },
  {
    "text": "Logics so grps built in ret logic will",
    "start": "878519",
    "end": "881680"
  },
  {
    "text": "save the call history and then if needed",
    "start": "881680",
    "end": "884120"
  },
  {
    "text": "it will replay the call on uh when",
    "start": "884120",
    "end": "886680"
  },
  {
    "text": "potential retry happens to opt in the",
    "start": "886680",
    "end": "889600"
  },
  {
    "text": "user will specify retry policy in the",
    "start": "889600",
    "end": "892600"
  },
  {
    "text": "service configure so ret policy um",
    "start": "892600",
    "end": "895839"
  },
  {
    "text": "includes say the maximum attempts the",
    "start": "895839",
    "end": "898399"
  },
  {
    "text": "back of policy and retriable status code",
    "start": "898399",
    "end": "902639"
  },
  {
    "text": "list JPC will monitor an um rpc's event",
    "start": "902639",
    "end": "906759"
  },
  {
    "text": "status and if certain criterias are met",
    "start": "906759",
    "end": "910079"
  },
  {
    "text": "for example the retry is with the RPC is",
    "start": "910079",
    "end": "913120"
  },
  {
    "text": "within the maximum attempt and it's",
    "start": "913120",
    "end": "915480"
  },
  {
    "text": "within the retriable status code it will",
    "start": "915480",
    "end": "918320"
  },
  {
    "text": "duplicate a retriable stream on the",
    "start": "918320",
    "end": "920560"
  },
  {
    "text": "transport upon the back off exponential",
    "start": "920560",
    "end": "923880"
  },
  {
    "text": "exponential back of",
    "start": "923880",
    "end": "926079"
  },
  {
    "text": "delays once the response header has been",
    "start": "926079",
    "end": "928800"
  },
  {
    "text": "received",
    "start": "928800",
    "end": "929800"
  },
  {
    "text": "the RPC will hand over to the",
    "start": "929800",
    "end": "931360"
  },
  {
    "text": "application and there will no be no more",
    "start": "931360",
    "end": "935120"
  },
  {
    "text": "tries even without explicit",
    "start": "935120",
    "end": "937560"
  },
  {
    "text": "configuration retry can also happen as a",
    "start": "937560",
    "end": "940399"
  },
  {
    "text": "transparent try it can be multiple uh",
    "start": "940399",
    "end": "943399"
  },
  {
    "text": "unlimited time of transparent try if the",
    "start": "943399",
    "end": "945639"
  },
  {
    "text": "request never leaves the client or a",
    "start": "945639",
    "end": "947560"
  },
  {
    "text": "single one if it leaves the client but",
    "start": "947560",
    "end": "949519"
  },
  {
    "text": "never seen by the server",
    "start": "949519",
    "end": "951959"
  },
  {
    "text": "application if we config observability",
    "start": "951959",
    "end": "955040"
  },
  {
    "text": "um say open Telemetry then you can see",
    "start": "955040",
    "end": "957440"
  },
  {
    "text": "the ret information for example ret",
    "start": "957440",
    "end": "959600"
  },
  {
    "text": "attempts and the ret latencies on as",
    "start": "959600",
    "end": "963279"
  },
  {
    "text": "open Telemetry Matrix and",
    "start": "963279",
    "end": "966480"
  },
  {
    "text": "chasing when the server receives the",
    "start": "968680",
    "end": "970880"
  },
  {
    "text": "response successfully it can complete",
    "start": "970880",
    "end": "973000"
  },
  {
    "text": "successfully um but there it also",
    "start": "973000",
    "end": "975519"
  },
  {
    "text": "possible that it will um be ended up in",
    "start": "975519",
    "end": "977839"
  },
  {
    "text": "error this is um due to like silver",
    "start": "977839",
    "end": "981120"
  },
  {
    "text": "errors clent cancellation as we talked",
    "start": "981120",
    "end": "983319"
  },
  {
    "text": "or the network errors normally Cent",
    "start": "983319",
    "end": "986120"
  },
  {
    "text": "server will agree on the status of RPC",
    "start": "986120",
    "end": "988680"
  },
  {
    "text": "but it's also possible that for example",
    "start": "988680",
    "end": "990759"
  },
  {
    "text": "the server uh will see the client the",
    "start": "990759",
    "end": "993120"
  },
  {
    "text": "request being successful while due to",
    "start": "993120",
    "end": "995519"
  },
  {
    "text": "communication reasons the client will",
    "start": "995519",
    "end": "997120"
  },
  {
    "text": "see the error status in the client but",
    "start": "997120",
    "end": "1000639"
  },
  {
    "text": "this is fine it is important to shut",
    "start": "1000639",
    "end": "1003360"
  },
  {
    "text": "down server and channel to recollect",
    "start": "1003360",
    "end": "1005680"
  },
  {
    "text": "resources you will call shutdown on the",
    "start": "1005680",
    "end": "1007880"
  },
  {
    "text": "channel object that will cancel the new",
    "start": "1007880",
    "end": "1010480"
  },
  {
    "text": "cost immediately but will let um the",
    "start": "1010480",
    "end": "1012880"
  },
  {
    "text": "pre-existing cost to continue or you can",
    "start": "1012880",
    "end": "1015040"
  },
  {
    "text": "also do a forceful shutdown that will",
    "start": "1015040",
    "end": "1017600"
  },
  {
    "text": "cancel the new and both new and the",
    "start": "1017600",
    "end": "1019800"
  },
  {
    "text": "pre-existing calls",
    "start": "1019800",
    "end": "1021959"
  },
  {
    "text": "immediately shutdown is asynchronous you",
    "start": "1021959",
    "end": "1024600"
  },
  {
    "text": "can call um await domination to wait for",
    "start": "1024600",
    "end": "1028438"
  },
  {
    "text": "all the resource to be connected and",
    "start": "1028439",
    "end": "1030480"
  },
  {
    "text": "then it will give up if certain time out",
    "start": "1030480",
    "end": "1032760"
  },
  {
    "text": "is",
    "start": "1032760",
    "end": "1034880"
  },
  {
    "text": "reached to summarize today we talked",
    "start": "1035839",
    "end": "1038640"
  },
  {
    "text": "about grpc Library structure components",
    "start": "1038640",
    "end": "1041720"
  },
  {
    "text": "we touch a bit on the name resolver and",
    "start": "1041720",
    "end": "1043720"
  },
  {
    "text": "load balancer and we walked through the",
    "start": "1043720",
    "end": "1046400"
  },
  {
    "text": "RPC left cycle we talked that uh",
    "start": "1046400",
    "end": "1049360"
  },
  {
    "text": "application will send messages on the",
    "start": "1049360",
    "end": "1051400"
  },
  {
    "text": "Stop and the pro on the pro gen layer",
    "start": "1051400",
    "end": "1055240"
  },
  {
    "text": "and then asynchronously name resolution",
    "start": "1055240",
    "end": "1057440"
  },
  {
    "text": "will do um uh will do it work and then",
    "start": "1057440",
    "end": "1060960"
  },
  {
    "text": "the low balancer will establish",
    "start": "1060960",
    "end": "1062600"
  },
  {
    "text": "connection and pick sub channel for the",
    "start": "1062600",
    "end": "1065799"
  },
  {
    "text": "request well the initially the RPC will",
    "start": "1065799",
    "end": "1068440"
  },
  {
    "text": "buffer for a while but the next one it",
    "start": "1068440",
    "end": "1070280"
  },
  {
    "text": "will be much",
    "start": "1070280",
    "end": "1072120"
  },
  {
    "text": "faster RPC turned into R tribal stream",
    "start": "1072120",
    "end": "1074720"
  },
  {
    "text": "at the transport and it might um be",
    "start": "1074720",
    "end": "1077440"
  },
  {
    "text": "cancelled at any time if that line",
    "start": "1077440",
    "end": "1079159"
  },
  {
    "text": "exceeded or if there is an explicit",
    "start": "1079159",
    "end": "1081720"
  },
  {
    "text": "cancellation and finally hopefully the",
    "start": "1081720",
    "end": "1083919"
  },
  {
    "text": "RPC and all the channel and servers will",
    "start": "1083919",
    "end": "1086720"
  },
  {
    "text": "be terminated",
    "start": "1086720",
    "end": "1089960"
  },
  {
    "text": "properly JPC use cases are every",
    "start": "1090400",
    "end": "1093039"
  },
  {
    "text": "everywhere it is especially powerful in",
    "start": "1093039",
    "end": "1095240"
  },
  {
    "text": "building microservices thanks to the XDS",
    "start": "1095240",
    "end": "1098559"
  },
  {
    "text": "offerings in the proxy L service MH",
    "start": "1098559",
    "end": "1102039"
  },
  {
    "text": "solution that wraps up my presentation",
    "start": "1102039",
    "end": "1104919"
  },
  {
    "text": "thank you all for your time and",
    "start": "1104919",
    "end": "1106440"
  },
  {
    "text": "attention",
    "start": "1106440",
    "end": "1107720"
  },
  {
    "text": "[Applause]",
    "start": "1107720",
    "end": "1113619"
  }
]