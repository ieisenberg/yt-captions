[
  {
    "start": "0",
    "end": "92000"
  },
  {
    "text": "hello everyone my name is girish moral",
    "start": "160",
    "end": "1839"
  },
  {
    "text": "bell my role at",
    "start": "1839",
    "end": "3439"
  },
  {
    "text": "nvidia is to design develop and manage",
    "start": "3439",
    "end": "7440"
  },
  {
    "text": "sdn networking for gp accelerated",
    "start": "7440",
    "end": "9360"
  },
  {
    "text": "compute the computer itself can be",
    "start": "9360",
    "end": "10800"
  },
  {
    "text": "virtual machines",
    "start": "10800",
    "end": "11759"
  },
  {
    "text": "bare metal servers kubernetes pods and",
    "start": "11759",
    "end": "14480"
  },
  {
    "text": "each of them having nvidia gpu networks",
    "start": "14480",
    "end": "16720"
  },
  {
    "text": "and",
    "start": "16720",
    "end": "16960"
  },
  {
    "text": "gpu cards in them i'm also upstream",
    "start": "16960",
    "end": "19600"
  },
  {
    "text": "contributor and maintainer for oven",
    "start": "19600",
    "end": "21279"
  },
  {
    "text": "kubernetes cni project",
    "start": "21279",
    "end": "23039"
  },
  {
    "text": "i deal with the ovs in uh in my",
    "start": "23039",
    "end": "25519"
  },
  {
    "text": "day-to-day work",
    "start": "25519",
    "end": "26800"
  },
  {
    "text": "yeah you want to go introduce yourself",
    "start": "26800",
    "end": "31840"
  },
  {
    "text": "hi my name is leo i'm a software",
    "start": "31920",
    "end": "34640"
  },
  {
    "text": "architect at melanox",
    "start": "34640",
    "end": "36239"
  },
  {
    "text": "now nvidia working on cloud",
    "start": "36239",
    "end": "39120"
  },
  {
    "text": "accelerations",
    "start": "39120",
    "end": "41120"
  },
  {
    "text": "kubernetes integration and",
    "start": "41120",
    "end": "44640"
  },
  {
    "text": "switching offloads okay great",
    "start": "44640",
    "end": "47920"
  },
  {
    "text": "so we're going to talk about how to",
    "start": "47920",
    "end": "49520"
  },
  {
    "text": "secure bare metal nodes",
    "start": "49520",
    "end": "50960"
  },
  {
    "text": "um that form the kubernetes cluster",
    "start": "50960",
    "end": "53440"
  },
  {
    "text": "using oven logical constructs",
    "start": "53440",
    "end": "55760"
  },
  {
    "text": "and bumping the wire smart nick and in",
    "start": "55760",
    "end": "58399"
  },
  {
    "text": "our case it's going to be melanox",
    "start": "58399",
    "end": "60000"
  },
  {
    "text": "bluefield network adapter so this is",
    "start": "60000",
    "end": "62800"
  },
  {
    "text": "going to be the",
    "start": "62800",
    "end": "64239"
  },
  {
    "text": "flow of our talk today um we're going to",
    "start": "64239",
    "end": "67520"
  },
  {
    "text": "kind of",
    "start": "67520",
    "end": "68799"
  },
  {
    "text": "explain as to why deployers are running",
    "start": "68799",
    "end": "70799"
  },
  {
    "text": "kubernetes cluster on vms",
    "start": "70799",
    "end": "72720"
  },
  {
    "text": "why they should be running the cluster",
    "start": "72720",
    "end": "75920"
  },
  {
    "text": "on bare metal nodes",
    "start": "75920",
    "end": "77360"
  },
  {
    "text": "we'll have a quick overview of oven and",
    "start": "77360",
    "end": "80720"
  },
  {
    "text": "we'll see how one control plane runs on",
    "start": "80720",
    "end": "82799"
  },
  {
    "text": "the smart nic",
    "start": "82799",
    "end": "83920"
  },
  {
    "text": "how the data path for one gets offloaded",
    "start": "83920",
    "end": "86400"
  },
  {
    "text": "to the hardware",
    "start": "86400",
    "end": "87439"
  },
  {
    "text": "and we'll also kind of look at the other",
    "start": "87439",
    "end": "90320"
  },
  {
    "text": "smart nic advantages",
    "start": "90320",
    "end": "93360"
  },
  {
    "text": "so deployers have been um",
    "start": "93360",
    "end": "96400"
  },
  {
    "text": "building kubernetes customizing vms as",
    "start": "96400",
    "end": "98320"
  },
  {
    "text": "nodes and in this model",
    "start": "98320",
    "end": "100400"
  },
  {
    "text": "they actually take an application",
    "start": "100400",
    "end": "101920"
  },
  {
    "text": "containerize it they run the",
    "start": "101920",
    "end": "103280"
  },
  {
    "text": "containerized",
    "start": "103280",
    "end": "104079"
  },
  {
    "text": "application inside a part the part",
    "start": "104079",
    "end": "105920"
  },
  {
    "text": "itself is running inside a vm",
    "start": "105920",
    "end": "107680"
  },
  {
    "text": "and the vm itself is running on the bare",
    "start": "107680",
    "end": "109920"
  },
  {
    "text": "metal box",
    "start": "109920",
    "end": "111200"
  },
  {
    "text": "um so there is several layer of uh",
    "start": "111200",
    "end": "114399"
  },
  {
    "text": "fencing if you will and and the whole",
    "start": "114399",
    "end": "116880"
  },
  {
    "text": "reason here is uh they want to",
    "start": "116880",
    "end": "119200"
  },
  {
    "text": "protect the data center from uh from",
    "start": "119200",
    "end": "122479"
  },
  {
    "text": "application which could which can be",
    "start": "122479",
    "end": "125040"
  },
  {
    "text": "compromised",
    "start": "125040",
    "end": "126159"
  },
  {
    "text": "so the reason they do this fencing is",
    "start": "126159",
    "end": "127840"
  },
  {
    "text": "because they're not confident about the",
    "start": "127840",
    "end": "129280"
  },
  {
    "text": "container security",
    "start": "129280",
    "end": "130640"
  },
  {
    "text": "and the hope is that if an attacker",
    "start": "130640",
    "end": "132640"
  },
  {
    "text": "breaks out of the container",
    "start": "132640",
    "end": "134080"
  },
  {
    "text": "they're still trapped inside the vm and",
    "start": "134080",
    "end": "136319"
  },
  {
    "text": "then they don't act",
    "start": "136319",
    "end": "137440"
  },
  {
    "text": "they don't have access to the bare metal",
    "start": "137440",
    "end": "139040"
  },
  {
    "text": "node and therefore",
    "start": "139040",
    "end": "140640"
  },
  {
    "text": "they cannot cause any harm to the data",
    "start": "140640",
    "end": "143840"
  },
  {
    "text": "centers",
    "start": "143840",
    "end": "144560"
  },
  {
    "text": "itself however um this comes with a huge",
    "start": "144560",
    "end": "148319"
  },
  {
    "text": "performance cost for the application",
    "start": "148319",
    "end": "150400"
  },
  {
    "text": "a lot of the hardware resources like the",
    "start": "150400",
    "end": "152319"
  },
  {
    "text": "neck the gpu has to be virtualized",
    "start": "152319",
    "end": "154640"
  },
  {
    "text": "and this virtualized thing has to be",
    "start": "154640",
    "end": "156080"
  },
  {
    "text": "passed down to the vm and the vms the",
    "start": "156080",
    "end": "158480"
  },
  {
    "text": "next",
    "start": "158480",
    "end": "159120"
  },
  {
    "text": "pass down to the container there's also",
    "start": "159120",
    "end": "161280"
  },
  {
    "text": "an hypervisor uh hold it",
    "start": "161280",
    "end": "163760"
  },
  {
    "text": "for the application performance so the",
    "start": "163760",
    "end": "166720"
  },
  {
    "text": "thing is",
    "start": "166720",
    "end": "167280"
  },
  {
    "text": "uh there's a trade-off the trade-off",
    "start": "167280",
    "end": "169280"
  },
  {
    "text": "between",
    "start": "169280",
    "end": "170800"
  },
  {
    "text": "performance and security and violence",
    "start": "170800",
    "end": "173120"
  },
  {
    "text": "and isolation",
    "start": "173120",
    "end": "174720"
  },
  {
    "text": "so the deployers kind of tend to err",
    "start": "174720",
    "end": "178319"
  },
  {
    "text": "on the side of security and they don't",
    "start": "178319",
    "end": "181360"
  },
  {
    "text": "kind of focus more on the performance",
    "start": "181360",
    "end": "183120"
  },
  {
    "text": "because security is uh",
    "start": "183120",
    "end": "184640"
  },
  {
    "text": "of paramount importance",
    "start": "184640",
    "end": "187840"
  },
  {
    "text": "so that need not however be the case um",
    "start": "187840",
    "end": "191440"
  },
  {
    "text": "with a help from bumping the wire",
    "start": "191440",
    "end": "193440"
  },
  {
    "text": "spartnic and",
    "start": "193440",
    "end": "195840"
  },
  {
    "text": "distributed sdn control plane it's",
    "start": "195840",
    "end": "198480"
  },
  {
    "text": "possible that we can get",
    "start": "198480",
    "end": "200000"
  },
  {
    "text": "both performance as well as security and",
    "start": "200000",
    "end": "202080"
  },
  {
    "text": "isolation",
    "start": "202080",
    "end": "203840"
  },
  {
    "text": "and this kind of moves the zone the",
    "start": "203840",
    "end": "206480"
  },
  {
    "text": "trust zone",
    "start": "206480",
    "end": "207519"
  },
  {
    "text": "from the hypervisor onto the spartanic",
    "start": "207519",
    "end": "209920"
  },
  {
    "text": "hardware and we're going to explain how",
    "start": "209920",
    "end": "211760"
  },
  {
    "text": "this",
    "start": "211760",
    "end": "212080"
  },
  {
    "text": "bump in the wire sparknet and the",
    "start": "212080",
    "end": "213680"
  },
  {
    "text": "distributed sdn control plane",
    "start": "213680",
    "end": "216000"
  },
  {
    "text": "enables uh achieving both performance",
    "start": "216000",
    "end": "219760"
  },
  {
    "text": "at the at uh and not at the same time",
    "start": "219760",
    "end": "222640"
  },
  {
    "text": "losing security in isolation for the",
    "start": "222640",
    "end": "224159"
  },
  {
    "text": "bare metal nodes",
    "start": "224159",
    "end": "227840"
  },
  {
    "start": "225000",
    "end": "299000"
  },
  {
    "text": "so um so where we are going with this is",
    "start": "228879",
    "end": "231200"
  },
  {
    "text": "that um",
    "start": "231200",
    "end": "232319"
  },
  {
    "text": "so with the smart nick and bom and the",
    "start": "232319",
    "end": "234560"
  },
  {
    "text": "distributed control plane it is possible",
    "start": "234560",
    "end": "236319"
  },
  {
    "text": "to",
    "start": "236319",
    "end": "237120"
  },
  {
    "text": "push all of the axles and the firewall",
    "start": "237120",
    "end": "240000"
  },
  {
    "text": "rules if you will",
    "start": "240000",
    "end": "241200"
  },
  {
    "text": "uh to the smart mic itself um",
    "start": "241200",
    "end": "244400"
  },
  {
    "text": "the parts running on the bare metal",
    "start": "244400",
    "end": "246000"
  },
  {
    "text": "they're totally unaware of this bump in",
    "start": "246000",
    "end": "247680"
  },
  {
    "text": "the wire",
    "start": "247680",
    "end": "248720"
  },
  {
    "text": "all the kubernetes network policies uh",
    "start": "248720",
    "end": "251120"
  },
  {
    "text": "for the pod",
    "start": "251120",
    "end": "251920"
  },
  {
    "text": "are implemented on the spartnic",
    "start": "251920",
    "end": "255280"
  },
  {
    "text": "and then the accols for the host itself",
    "start": "255280",
    "end": "259199"
  },
  {
    "text": "is implemented on the spartanic so if uh",
    "start": "259199",
    "end": "262720"
  },
  {
    "text": "if an attacker kind of jumps out of the",
    "start": "262720",
    "end": "264639"
  },
  {
    "text": "pod and is now",
    "start": "264639",
    "end": "265840"
  },
  {
    "text": "on the bare metal host they cannot flush",
    "start": "265840",
    "end": "268479"
  },
  {
    "text": "ip table rules",
    "start": "268479",
    "end": "269840"
  },
  {
    "text": "or the nat rules or any host based",
    "start": "269840",
    "end": "272720"
  },
  {
    "text": "firewall rules because all of the",
    "start": "272720",
    "end": "274240"
  },
  {
    "text": "firewall rules are",
    "start": "274240",
    "end": "275759"
  },
  {
    "text": "on the smart neck which is acts as a",
    "start": "275759",
    "end": "279040"
  },
  {
    "text": "bump in the wire thing",
    "start": "279040",
    "end": "280960"
  },
  {
    "text": "so in that way uh you you can secure the",
    "start": "280960",
    "end": "284080"
  },
  {
    "text": "bare metal uh",
    "start": "284080",
    "end": "285120"
  },
  {
    "text": "nodes so oven",
    "start": "285120",
    "end": "288320"
  },
  {
    "text": "the distributed sdn control plane and",
    "start": "288320",
    "end": "290400"
  },
  {
    "text": "the smart",
    "start": "290400",
    "end": "291440"
  },
  {
    "text": "kind of join hands here together to kind",
    "start": "291440",
    "end": "294720"
  },
  {
    "text": "of provide the bare metal uh network",
    "start": "294720",
    "end": "296960"
  },
  {
    "text": "security and isolation",
    "start": "296960",
    "end": "299759"
  },
  {
    "text": "so one is open source uh project um it's",
    "start": "299759",
    "end": "302880"
  },
  {
    "text": "a distributed sdn control plane",
    "start": "302880",
    "end": "304560"
  },
  {
    "text": "uh that provides network virtualization",
    "start": "304560",
    "end": "306240"
  },
  {
    "text": "solution it's developed by the open",
    "start": "306240",
    "end": "308560"
  },
  {
    "text": "vswitch community the github url here",
    "start": "308560",
    "end": "311360"
  },
  {
    "text": "is where you can find the repo for the",
    "start": "311360",
    "end": "312800"
  },
  {
    "text": "project um",
    "start": "312800",
    "end": "314960"
  },
  {
    "text": "the thing with avon is that the whole",
    "start": "314960",
    "end": "317039"
  },
  {
    "text": "data path for r1 can be offloaded",
    "start": "317039",
    "end": "319120"
  },
  {
    "text": "with the smellinox nick so obviously",
    "start": "319120",
    "end": "322080"
  },
  {
    "text": "with the offloads you get the reduce",
    "start": "322080",
    "end": "324160"
  },
  {
    "text": "utilization and the cpu can be used for",
    "start": "324160",
    "end": "327120"
  },
  {
    "text": "applications",
    "start": "327120",
    "end": "328240"
  },
  {
    "text": "and and in addition we also get",
    "start": "328240",
    "end": "330639"
  },
  {
    "text": "increased throughput",
    "start": "330639",
    "end": "331680"
  },
  {
    "text": "um one can be better explained um",
    "start": "331680",
    "end": "336000"
  },
  {
    "text": "with the exam you know with an example",
    "start": "336000",
    "end": "338240"
  },
  {
    "text": "and a diagram and that's what we're",
    "start": "338240",
    "end": "339520"
  },
  {
    "text": "going to do next",
    "start": "339520",
    "end": "342240"
  },
  {
    "start": "342000",
    "end": "553000"
  },
  {
    "text": "so in this diagram you have um the two",
    "start": "343440",
    "end": "346240"
  },
  {
    "text": "things right you have a logical topology",
    "start": "346240",
    "end": "347840"
  },
  {
    "text": "to your left",
    "start": "347840",
    "end": "348800"
  },
  {
    "text": "and then you have and we have realized",
    "start": "348800",
    "end": "350720"
  },
  {
    "text": "that logical topology on the two bare",
    "start": "350720",
    "end": "352479"
  },
  {
    "text": "metal nodes",
    "start": "352479",
    "end": "353759"
  },
  {
    "text": "um so on the logical topology",
    "start": "353759",
    "end": "356960"
  },
  {
    "text": "it's a very simple logical topology it's",
    "start": "356960",
    "end": "358960"
  },
  {
    "text": "a logical router",
    "start": "358960",
    "end": "360160"
  },
  {
    "text": "with two logical switches connected to",
    "start": "360160",
    "end": "362560"
  },
  {
    "text": "it and each logical switch has a logical",
    "start": "362560",
    "end": "365280"
  },
  {
    "text": "port",
    "start": "365280",
    "end": "365840"
  },
  {
    "text": "attached to it so logical router is a l3",
    "start": "365840",
    "end": "370080"
  },
  {
    "text": "entity",
    "start": "370080",
    "end": "370639"
  },
  {
    "text": "it provides routing ecmp nat",
    "start": "370639",
    "end": "374400"
  },
  {
    "text": "load balancing policy based routing",
    "start": "374400",
    "end": "378160"
  },
  {
    "text": "logical switcher on the other hand",
    "start": "378160",
    "end": "379440"
  },
  {
    "text": "provides uh support for icos",
    "start": "379440",
    "end": "381520"
  },
  {
    "text": "support for thcp it also provides",
    "start": "381520",
    "end": "383520"
  },
  {
    "text": "support for load balancing",
    "start": "383520",
    "end": "385440"
  },
  {
    "text": "and dns the logical port captures the",
    "start": "385440",
    "end": "388639"
  },
  {
    "text": "mac address and ip address",
    "start": "388639",
    "end": "390720"
  },
  {
    "text": "uh it captures it it's where we apply",
    "start": "390720",
    "end": "393199"
  },
  {
    "text": "axles",
    "start": "393199",
    "end": "394240"
  },
  {
    "text": "and then also it provides anti-spoofing",
    "start": "394240",
    "end": "397039"
  },
  {
    "text": "support",
    "start": "397039",
    "end": "398160"
  },
  {
    "text": "um so the thing is the logical port",
    "start": "398160",
    "end": "401199"
  },
  {
    "text": "maps to a kubernetes pod network",
    "start": "401199",
    "end": "403360"
  },
  {
    "text": "interface",
    "start": "403360",
    "end": "404400"
  },
  {
    "text": "so the logical port is an api to control",
    "start": "404400",
    "end": "407680"
  },
  {
    "text": "the parts interface",
    "start": "407680",
    "end": "409360"
  },
  {
    "text": "attributes like so you kind of apply uh",
    "start": "409360",
    "end": "412960"
  },
  {
    "text": "policies on the logical port it kind of",
    "start": "412960",
    "end": "415599"
  },
  {
    "text": "uh",
    "start": "415599",
    "end": "416000"
  },
  {
    "text": "reflects on the the on the physical",
    "start": "416000",
    "end": "419120"
  },
  {
    "text": "on the pod interface on the",
    "start": "419120",
    "end": "422160"
  },
  {
    "text": "on the pod so um",
    "start": "422160",
    "end": "426400"
  },
  {
    "text": "um so on the right side what we have a",
    "start": "426400",
    "end": "429039"
  },
  {
    "text": "two",
    "start": "429039",
    "end": "429440"
  },
  {
    "text": "bare metal notes um on these notes you",
    "start": "429440",
    "end": "432319"
  },
  {
    "text": "have a obs integration bridge called",
    "start": "432319",
    "end": "434080"
  },
  {
    "text": "brnd",
    "start": "434080",
    "end": "435440"
  },
  {
    "text": "this integration bridge implements the",
    "start": "435440",
    "end": "438240"
  },
  {
    "text": "whole logical pipeline",
    "start": "438240",
    "end": "440080"
  },
  {
    "text": "the whole oven logical topology using",
    "start": "440080",
    "end": "442479"
  },
  {
    "text": "your obs",
    "start": "442479",
    "end": "443599"
  },
  {
    "text": "pipeline using open flow tables and",
    "start": "443599",
    "end": "446960"
  },
  {
    "text": "flows in those tables so then on this",
    "start": "446960",
    "end": "449759"
  },
  {
    "text": "particular",
    "start": "449759",
    "end": "450479"
  },
  {
    "text": "uh in this particular diagram here on",
    "start": "450479",
    "end": "452880"
  },
  {
    "text": "node one",
    "start": "452880",
    "end": "453759"
  },
  {
    "text": "a pod zero got scheduled on node two",
    "start": "453759",
    "end": "455919"
  },
  {
    "text": "part one got scheduled",
    "start": "455919",
    "end": "457280"
  },
  {
    "text": "port zero is connected to the",
    "start": "457280",
    "end": "458720"
  },
  {
    "text": "integration bridge through a",
    "start": "458720",
    "end": "460639"
  },
  {
    "text": "ovs internal port p0 and part 1 is",
    "start": "460639",
    "end": "464160"
  },
  {
    "text": "connected to the obvious integration",
    "start": "464160",
    "end": "466240"
  },
  {
    "text": "bridge to the",
    "start": "466240",
    "end": "467280"
  },
  {
    "text": "internal port p1 so what we do here is",
    "start": "467280",
    "end": "470319"
  },
  {
    "text": "that",
    "start": "470319",
    "end": "470960"
  },
  {
    "text": "we associate this physical port with a",
    "start": "470960",
    "end": "473919"
  },
  {
    "text": "logical port",
    "start": "473919",
    "end": "474960"
  },
  {
    "text": "and that process is called port binding",
    "start": "474960",
    "end": "477120"
  },
  {
    "text": "and this is one of the important aspects",
    "start": "477120",
    "end": "478720"
  },
  {
    "text": "of",
    "start": "478720",
    "end": "479360"
  },
  {
    "text": "oven what this port binding does is",
    "start": "479360",
    "end": "482400"
  },
  {
    "text": "it tells you the physical location of a",
    "start": "482400",
    "end": "485440"
  },
  {
    "text": "port for a given logical port so",
    "start": "485440",
    "end": "488800"
  },
  {
    "text": "with that physical location known now",
    "start": "488800",
    "end": "492319"
  },
  {
    "text": "the the oven control plane knows",
    "start": "492319",
    "end": "496400"
  },
  {
    "text": "where to send the packet to for a given",
    "start": "496400",
    "end": "498319"
  },
  {
    "text": "part in this example when a",
    "start": "498319",
    "end": "500000"
  },
  {
    "text": "when pod zero wants to talk to part one",
    "start": "500000",
    "end": "502479"
  },
  {
    "text": "when the packet arrives on the br end",
    "start": "502479",
    "end": "505120"
  },
  {
    "text": "and this br implements the oven logical",
    "start": "505120",
    "end": "507840"
  },
  {
    "text": "topology",
    "start": "507840",
    "end": "508560"
  },
  {
    "text": "through open flow tables it already",
    "start": "508560",
    "end": "510879"
  },
  {
    "text": "knows that to send the packet to part",
    "start": "510879",
    "end": "512959"
  },
  {
    "text": "one",
    "start": "512959",
    "end": "513680"
  },
  {
    "text": "it has to just send it to the node two's",
    "start": "513680",
    "end": "516080"
  },
  {
    "text": "uh vtep ip address",
    "start": "516080",
    "end": "517680"
  },
  {
    "text": "and then using open flow flows it just",
    "start": "517680",
    "end": "519919"
  },
  {
    "text": "forwards the packet to that next hop",
    "start": "519919",
    "end": "522560"
  },
  {
    "text": "so the whole logical topology is",
    "start": "522560",
    "end": "525760"
  },
  {
    "text": "realized uh on this integration bridge",
    "start": "525760",
    "end": "529519"
  },
  {
    "text": "um and then the the physical",
    "start": "529519",
    "end": "532640"
  },
  {
    "text": "or the port binding thing enables that",
    "start": "532640",
    "end": "536000"
  },
  {
    "text": "end to end connectivity between the",
    "start": "536000",
    "end": "537600"
  },
  {
    "text": "between the ports",
    "start": "537600",
    "end": "539760"
  },
  {
    "text": "so aman has a collection of daemons that",
    "start": "539760",
    "end": "542720"
  },
  {
    "text": "work together to push this logical",
    "start": "542720",
    "end": "544399"
  },
  {
    "text": "topology information",
    "start": "544399",
    "end": "545920"
  },
  {
    "text": "and the physical location of this ports",
    "start": "545920",
    "end": "547920"
  },
  {
    "text": "to each node",
    "start": "547920",
    "end": "549279"
  },
  {
    "text": "and and then each node's integration",
    "start": "549279",
    "end": "551440"
  },
  {
    "text": "bridge",
    "start": "551440",
    "end": "553760"
  },
  {
    "start": "553000",
    "end": "680000"
  },
  {
    "text": "so in this slide we basically this slide",
    "start": "553760",
    "end": "556800"
  },
  {
    "text": "basically talks about the",
    "start": "556800",
    "end": "558320"
  },
  {
    "text": "oven communities project one kubernetes",
    "start": "558320",
    "end": "560480"
  },
  {
    "text": "is an open source project",
    "start": "560480",
    "end": "562399"
  },
  {
    "text": "contributed or worked on by the oven",
    "start": "562399",
    "end": "565279"
  },
  {
    "text": "community",
    "start": "565279",
    "end": "566000"
  },
  {
    "text": "the github url for the same uh he's here",
    "start": "566000",
    "end": "569839"
  },
  {
    "text": "as shown in the slide here uh it",
    "start": "569839",
    "end": "572080"
  },
  {
    "text": "implements container networking spec",
    "start": "572080",
    "end": "575839"
  },
  {
    "text": "um it basically it's a layered",
    "start": "575839",
    "end": "578480"
  },
  {
    "text": "architecture",
    "start": "578480",
    "end": "579200"
  },
  {
    "text": "at the higher layer you have one",
    "start": "579200",
    "end": "581440"
  },
  {
    "text": "kubernetes cni",
    "start": "581440",
    "end": "582720"
  },
  {
    "text": "and which in turn depends on the r1 and",
    "start": "582720",
    "end": "584720"
  },
  {
    "text": "i1 in turn depends on obs",
    "start": "584720",
    "end": "586800"
  },
  {
    "text": "so the cna itself is implemented as a",
    "start": "586800",
    "end": "588880"
  },
  {
    "text": "client server",
    "start": "588880",
    "end": "590240"
  },
  {
    "text": "architecture it's basically acquitted is",
    "start": "590240",
    "end": "592399"
  },
  {
    "text": "watcher and it has such",
    "start": "592399",
    "end": "593839"
  },
  {
    "text": "several set of parts um it kind of",
    "start": "593839",
    "end": "597600"
  },
  {
    "text": "takes the kubernetes resources and then",
    "start": "597600",
    "end": "599920"
  },
  {
    "text": "it maps",
    "start": "599920",
    "end": "600880"
  },
  {
    "text": "into open resources for example",
    "start": "600880",
    "end": "602959"
  },
  {
    "text": "kubernetes network policy is mapped into",
    "start": "602959",
    "end": "605120"
  },
  {
    "text": "our accounts",
    "start": "605120",
    "end": "606240"
  },
  {
    "text": "communities cluster services is mapped",
    "start": "606240",
    "end": "608560"
  },
  {
    "text": "into one load balancer",
    "start": "608560",
    "end": "610000"
  },
  {
    "text": "kubernetes parts is mapped into uh",
    "start": "610000",
    "end": "612480"
  },
  {
    "text": "logical switch ports",
    "start": "612480",
    "end": "613839"
  },
  {
    "text": "and kubernetes node is mapped into",
    "start": "613839",
    "end": "615760"
  },
  {
    "text": "logical switches",
    "start": "615760",
    "end": "616959"
  },
  {
    "text": "so it watches on these cubities api",
    "start": "616959",
    "end": "619680"
  },
  {
    "text": "resources",
    "start": "619680",
    "end": "620480"
  },
  {
    "text": "as and when these api objects appear it",
    "start": "620480",
    "end": "623360"
  },
  {
    "text": "kind of translates",
    "start": "623360",
    "end": "624320"
  },
  {
    "text": "us into oven resources",
    "start": "624320",
    "end": "628640"
  },
  {
    "text": "so the oven control plane um",
    "start": "628640",
    "end": "632079"
  },
  {
    "text": "kind of uh acts on those oven resources",
    "start": "632079",
    "end": "634640"
  },
  {
    "text": "that create",
    "start": "634640",
    "end": "635360"
  },
  {
    "text": "that that was created by the one cni and",
    "start": "635360",
    "end": "638160"
  },
  {
    "text": "then converts",
    "start": "638160",
    "end": "639120"
  },
  {
    "text": "that into our logical flows and these",
    "start": "639120",
    "end": "641920"
  },
  {
    "text": "logical force are in turn",
    "start": "641920",
    "end": "643760"
  },
  {
    "text": "translated into ovs open flow rules on",
    "start": "643760",
    "end": "646880"
  },
  {
    "text": "each of the uh node that forms the",
    "start": "646880",
    "end": "649279"
  },
  {
    "text": "qubits cluster",
    "start": "649279",
    "end": "650720"
  },
  {
    "text": "so on the diagram to the right you see",
    "start": "650720",
    "end": "653680"
  },
  {
    "text": "that",
    "start": "653680",
    "end": "654240"
  },
  {
    "text": "you kind of explain all the components",
    "start": "654240",
    "end": "656160"
  },
  {
    "text": "running at various layers",
    "start": "656160",
    "end": "658079"
  },
  {
    "text": "or on the components of various layers",
    "start": "658079",
    "end": "661519"
  },
  {
    "text": "running on various nodes in the",
    "start": "661519",
    "end": "663200"
  },
  {
    "text": "kubernetes cluster",
    "start": "663200",
    "end": "664560"
  },
  {
    "text": "so the whole point here is that to show",
    "start": "664560",
    "end": "666959"
  },
  {
    "text": "um",
    "start": "666959",
    "end": "668399"
  },
  {
    "text": "that on some of the one control plane",
    "start": "668399",
    "end": "670959"
  },
  {
    "text": "components they run",
    "start": "670959",
    "end": "671920"
  },
  {
    "text": "on the nodes and when we move to the",
    "start": "671920",
    "end": "674160"
  },
  {
    "text": "smart nic model",
    "start": "674160",
    "end": "675680"
  },
  {
    "text": "these control plane components will end",
    "start": "675680",
    "end": "677519"
  },
  {
    "text": "up running on the smart nic itself",
    "start": "677519",
    "end": "680640"
  },
  {
    "start": "680000",
    "end": "722000"
  },
  {
    "text": "so in here you can see that on the host",
    "start": "680640",
    "end": "683279"
  },
  {
    "text": "we had ovs bridge",
    "start": "683279",
    "end": "684800"
  },
  {
    "text": "and the amount controller which kind of",
    "start": "684800",
    "end": "686880"
  },
  {
    "text": "was it",
    "start": "686880",
    "end": "688880"
  },
  {
    "text": "adding open flow flows into the obvious",
    "start": "688880",
    "end": "690959"
  },
  {
    "text": "bridge uh and the one cni come",
    "start": "690959",
    "end": "693120"
  },
  {
    "text": "components itself running on the host",
    "start": "693120",
    "end": "695200"
  },
  {
    "text": "but when we move to the smartening model",
    "start": "695200",
    "end": "697360"
  },
  {
    "text": "uh the",
    "start": "697360",
    "end": "698399"
  },
  {
    "text": "the entire sdn control plane the",
    "start": "698399",
    "end": "700480"
  },
  {
    "text": "distributed ascent control plane starts",
    "start": "700480",
    "end": "702240"
  },
  {
    "text": "running",
    "start": "702240",
    "end": "702959"
  },
  {
    "text": "on the sr on on the smart nick itself",
    "start": "702959",
    "end": "705920"
  },
  {
    "text": "the smart nik",
    "start": "705920",
    "end": "706959"
  },
  {
    "text": "comes with the arm core it has its own",
    "start": "706959",
    "end": "709120"
  },
  {
    "text": "os running",
    "start": "709120",
    "end": "710639"
  },
  {
    "text": "on the encore and then all of these",
    "start": "710639",
    "end": "713040"
  },
  {
    "text": "control plane components",
    "start": "713040",
    "end": "714560"
  },
  {
    "text": "move to that arm core obviously this",
    "start": "714560",
    "end": "717440"
  },
  {
    "text": "kind of",
    "start": "717440",
    "end": "717920"
  },
  {
    "text": "provides increased performance and",
    "start": "717920",
    "end": "719279"
  },
  {
    "text": "isolation for the bare metal nodes",
    "start": "719279",
    "end": "722800"
  },
  {
    "start": "722000",
    "end": "862000"
  },
  {
    "text": "so this is uh this diagram kind of",
    "start": "723760",
    "end": "727279"
  },
  {
    "text": "dives deep into how things look like on",
    "start": "727279",
    "end": "729920"
  },
  {
    "text": "the smart mic",
    "start": "729920",
    "end": "731120"
  },
  {
    "text": "so on the smart nic itself we have one",
    "start": "731120",
    "end": "733360"
  },
  {
    "text": "control plane components running which",
    "start": "733360",
    "end": "734959"
  },
  {
    "text": "is our",
    "start": "734959",
    "end": "735360"
  },
  {
    "text": "controller and we have our obvious",
    "start": "735360",
    "end": "737760"
  },
  {
    "text": "components running which is obvious we",
    "start": "737760",
    "end": "739440"
  },
  {
    "text": "switch t and obstb server",
    "start": "739440",
    "end": "741360"
  },
  {
    "text": "and on the one cni side we have an agent",
    "start": "741360",
    "end": "743440"
  },
  {
    "text": "running which acts as a",
    "start": "743440",
    "end": "744959"
  },
  {
    "text": "kubernetes watcher uh trying to watch on",
    "start": "744959",
    "end": "748160"
  },
  {
    "text": "certain",
    "start": "748160",
    "end": "748880"
  },
  {
    "text": "kubernetes resources and then acting on",
    "start": "748880",
    "end": "751360"
  },
  {
    "text": "those resources uh",
    "start": "751360",
    "end": "753040"
  },
  {
    "text": "lifecycle the amount controller takes",
    "start": "753040",
    "end": "756240"
  },
  {
    "text": "the logical flows from the oven and then",
    "start": "756240",
    "end": "758320"
  },
  {
    "text": "translates into the open flow tables and",
    "start": "758320",
    "end": "760160"
  },
  {
    "text": "open flow flows",
    "start": "760160",
    "end": "761519"
  },
  {
    "text": "um and then kind of creates the data",
    "start": "761519",
    "end": "763839"
  },
  {
    "text": "path for the pawn",
    "start": "763839",
    "end": "765200"
  },
  {
    "text": "on the bare metal host itself we have",
    "start": "765200",
    "end": "768160"
  },
  {
    "text": "multus to",
    "start": "768160",
    "end": "769120"
  },
  {
    "text": "orchestrate multiple interfaces into the",
    "start": "769120",
    "end": "771040"
  },
  {
    "text": "pod and we have a very",
    "start": "771040",
    "end": "773120"
  },
  {
    "text": "basic cni that takes the next available",
    "start": "773120",
    "end": "776000"
  },
  {
    "text": "vf from the pf",
    "start": "776000",
    "end": "777279"
  },
  {
    "text": "and then provides it into the pod itself",
    "start": "777279",
    "end": "779839"
  },
  {
    "text": "for every vf",
    "start": "779839",
    "end": "781120"
  },
  {
    "text": "in the host we have a corresponding",
    "start": "781120",
    "end": "783680"
  },
  {
    "text": "representer",
    "start": "783680",
    "end": "785360"
  },
  {
    "text": "um we have a corresponding control",
    "start": "785360",
    "end": "787600"
  },
  {
    "text": "entity on the blue field itself",
    "start": "787600",
    "end": "789839"
  },
  {
    "text": "we call it as a representer it",
    "start": "789839",
    "end": "791600"
  },
  {
    "text": "represents the vf on the host",
    "start": "791600",
    "end": "794399"
  },
  {
    "text": "and we add these representers to the",
    "start": "794399",
    "end": "796240"
  },
  {
    "text": "integration bridge",
    "start": "796240",
    "end": "797839"
  },
  {
    "text": "and this representer maps",
    "start": "797839",
    "end": "801519"
  },
  {
    "text": "to the logical switch port in the oven",
    "start": "801519",
    "end": "803600"
  },
  {
    "text": "topology",
    "start": "803600",
    "end": "804560"
  },
  {
    "text": "so this is the port binding aspect of",
    "start": "804560",
    "end": "808800"
  },
  {
    "text": "the oven functionality so",
    "start": "808800",
    "end": "812399"
  },
  {
    "text": "when a representative04 gets added to",
    "start": "812399",
    "end": "815440"
  },
  {
    "text": "the pr end we",
    "start": "815440",
    "end": "817040"
  },
  {
    "text": "we kind of annotate represented 0 4",
    "start": "817040",
    "end": "820160"
  },
  {
    "text": "to tell that it belongs to certain",
    "start": "820160",
    "end": "821839"
  },
  {
    "text": "logical port so now",
    "start": "821839",
    "end": "823360"
  },
  {
    "text": "anything anytime we change the logical",
    "start": "823360",
    "end": "825199"
  },
  {
    "text": "ports attributes",
    "start": "825199",
    "end": "826959"
  },
  {
    "text": "the representers attributes change",
    "start": "826959",
    "end": "829279"
  },
  {
    "text": "through open flow flows",
    "start": "829279",
    "end": "830880"
  },
  {
    "text": "and therefore um the vf2 that is",
    "start": "830880",
    "end": "834480"
  },
  {
    "text": "attached to representer04",
    "start": "834480",
    "end": "836480"
  },
  {
    "text": "it will see that the changes all of",
    "start": "836480",
    "end": "839360"
  },
  {
    "text": "these things",
    "start": "839360",
    "end": "840079"
  },
  {
    "text": "are being done on the next hop",
    "start": "840079",
    "end": "843680"
  },
  {
    "text": "you know next stop it acts like a next",
    "start": "843680",
    "end": "846079"
  },
  {
    "text": "stop switch",
    "start": "846079",
    "end": "847199"
  },
  {
    "text": "it's like a bump in the wire so all the",
    "start": "847199",
    "end": "849279"
  },
  {
    "text": "attributes of",
    "start": "849279",
    "end": "850320"
  },
  {
    "text": "the logical port gets reflected on this",
    "start": "850320",
    "end": "852720"
  },
  {
    "text": "representer and then",
    "start": "852720",
    "end": "854079"
  },
  {
    "text": "it gets reflected on the vf itself um",
    "start": "854079",
    "end": "858480"
  },
  {
    "text": "so that's pretty much what this slide",
    "start": "858480",
    "end": "860320"
  },
  {
    "text": "talks to",
    "start": "860320",
    "end": "862880"
  },
  {
    "text": "so the this this slide basically",
    "start": "862959",
    "end": "866720"
  },
  {
    "text": "captures how we can use our apples to",
    "start": "866720",
    "end": "869600"
  },
  {
    "text": "kind of",
    "start": "869600",
    "end": "871440"
  },
  {
    "text": "add axles at a different priorities",
    "start": "871440",
    "end": "874959"
  },
  {
    "text": "and therefore override the axles that",
    "start": "874959",
    "end": "878000"
  },
  {
    "text": "the tenants themselves configure so in",
    "start": "878000",
    "end": "880480"
  },
  {
    "text": "here um",
    "start": "880480",
    "end": "881600"
  },
  {
    "text": "avon eccles priority range from zero all",
    "start": "881600",
    "end": "884720"
  },
  {
    "text": "the way up to thirty two thousand seven",
    "start": "884720",
    "end": "886160"
  },
  {
    "text": "sixty seven",
    "start": "886160",
    "end": "887199"
  },
  {
    "text": "so higher the priority of the accol",
    "start": "887199",
    "end": "889199"
  },
  {
    "text": "higher will be its precedence",
    "start": "889199",
    "end": "891120"
  },
  {
    "text": "so in the design here we have all the",
    "start": "891120",
    "end": "893680"
  },
  {
    "text": "tenant accols being represented",
    "start": "893680",
    "end": "895600"
  },
  {
    "text": "uh with priorities less than ten",
    "start": "895600",
    "end": "897519"
  },
  {
    "text": "thousand however",
    "start": "897519",
    "end": "898880"
  },
  {
    "text": "all the cloud provider cycles are at the",
    "start": "898880",
    "end": "900720"
  },
  {
    "text": "priority more than ten thousand so",
    "start": "900720",
    "end": "902800"
  },
  {
    "text": "therefore",
    "start": "902800",
    "end": "903440"
  },
  {
    "text": "their uh precedence will be higher",
    "start": "903440",
    "end": "906639"
  },
  {
    "text": "as compared to the tenant tackles so",
    "start": "906639",
    "end": "909279"
  },
  {
    "text": "whenever",
    "start": "909279",
    "end": "910000"
  },
  {
    "text": "uh the kubernetes network policies are",
    "start": "910000",
    "end": "912959"
  },
  {
    "text": "translated to",
    "start": "912959",
    "end": "914240"
  },
  {
    "text": "urban apples they get uh priorities in",
    "start": "914240",
    "end": "916399"
  },
  {
    "text": "this range",
    "start": "916399",
    "end": "917440"
  },
  {
    "text": "the cloud providers they can come in on",
    "start": "917440",
    "end": "919120"
  },
  {
    "text": "the side and then",
    "start": "919120",
    "end": "921279"
  },
  {
    "text": "add their axles at a higher level",
    "start": "921279",
    "end": "924720"
  },
  {
    "text": "so that you know we",
    "start": "924720",
    "end": "928160"
  },
  {
    "text": "they can kind of make sure that the pink",
    "start": "928160",
    "end": "930160"
  },
  {
    "text": "tenant here does not",
    "start": "930160",
    "end": "932240"
  },
  {
    "text": "uh somehow talk into the blue tenant",
    "start": "932240",
    "end": "934399"
  },
  {
    "text": "because",
    "start": "934399",
    "end": "935600"
  },
  {
    "text": "the cloud provider have added ankles to",
    "start": "935600",
    "end": "937279"
  },
  {
    "text": "make sure that such a communication is",
    "start": "937279",
    "end": "939519"
  },
  {
    "text": "not possible",
    "start": "939519",
    "end": "940560"
  },
  {
    "text": "in fact the cloud projects can add",
    "start": "940560",
    "end": "943040"
  },
  {
    "text": "accols to their own",
    "start": "943040",
    "end": "944480"
  },
  {
    "text": "infrastructure services to make sure",
    "start": "944480",
    "end": "947360"
  },
  {
    "text": "that",
    "start": "947360",
    "end": "948240"
  },
  {
    "text": "the the tenants host or the tenants part",
    "start": "948240",
    "end": "951040"
  },
  {
    "text": "do not",
    "start": "951040",
    "end": "952959"
  },
  {
    "text": "talk to infrastructure services that",
    "start": "952959",
    "end": "954720"
  },
  {
    "text": "they're not supposed to talk to",
    "start": "954720",
    "end": "956320"
  },
  {
    "text": "so in this way using our priority",
    "start": "956320",
    "end": "959040"
  },
  {
    "text": "accounts",
    "start": "959040",
    "end": "959839"
  },
  {
    "text": "we kind of make sure we provide that",
    "start": "959839",
    "end": "963120"
  },
  {
    "text": "isolation",
    "start": "963120",
    "end": "964160"
  },
  {
    "text": "of between the bare metal host and the",
    "start": "964160",
    "end": "966000"
  },
  {
    "text": "data center services and the data center",
    "start": "966000",
    "end": "967759"
  },
  {
    "text": "itself",
    "start": "967759",
    "end": "968880"
  },
  {
    "text": "and all of this echoes the flows is all",
    "start": "968880",
    "end": "971920"
  },
  {
    "text": "offloaded onto the integration bridge",
    "start": "971920",
    "end": "974079"
  },
  {
    "text": "and leah is going to talk to it uh",
    "start": "974079",
    "end": "976639"
  },
  {
    "text": "in the next set of slides so then",
    "start": "976639",
    "end": "980399"
  },
  {
    "start": "979000",
    "end": "1129000"
  },
  {
    "text": "so in here what we have done is um we",
    "start": "980399",
    "end": "983360"
  },
  {
    "text": "have two",
    "start": "983360",
    "end": "984079"
  },
  {
    "text": "different bare metal servers um uh",
    "start": "984079",
    "end": "987279"
  },
  {
    "text": "and the bare metal itself is uh",
    "start": "987279",
    "end": "990880"
  },
  {
    "text": "part of ammon logical topology and then",
    "start": "990880",
    "end": "993360"
  },
  {
    "text": "the",
    "start": "993360",
    "end": "994000"
  },
  {
    "text": "kubernetes cluster also is part of one",
    "start": "994000",
    "end": "995920"
  },
  {
    "text": "logical topology so",
    "start": "995920",
    "end": "997600"
  },
  {
    "text": "uh the paths are kind of connected",
    "start": "997600",
    "end": "1001120"
  },
  {
    "text": "together within our logical topology",
    "start": "1001120",
    "end": "1003600"
  },
  {
    "text": "orchestrated by the urban cni",
    "start": "1003600",
    "end": "1005759"
  },
  {
    "text": "on the other hand the bare metal servers",
    "start": "1005759",
    "end": "1008000"
  },
  {
    "text": "themselves are part of our logical",
    "start": "1008000",
    "end": "1009839"
  },
  {
    "text": "topology",
    "start": "1009839",
    "end": "1010560"
  },
  {
    "text": "and then the interconnection between",
    "start": "1010560",
    "end": "1013040"
  },
  {
    "text": "them is provided by our",
    "start": "1013040",
    "end": "1014800"
  },
  {
    "text": "so in here uh the parts if they want to",
    "start": "1014800",
    "end": "1018240"
  },
  {
    "text": "talk",
    "start": "1018240",
    "end": "1018959"
  },
  {
    "text": "east-west traffic between the parts is",
    "start": "1018959",
    "end": "1021040"
  },
  {
    "text": "represented through the green color",
    "start": "1021040",
    "end": "1023440"
  },
  {
    "text": "it's a overlay traffic um and",
    "start": "1023440",
    "end": "1026880"
  },
  {
    "text": "the network policies for this overlay",
    "start": "1026880",
    "end": "1028480"
  },
  {
    "text": "traffic is defined uh",
    "start": "1028480",
    "end": "1030240"
  },
  {
    "text": "by the communities network policies on",
    "start": "1030240",
    "end": "1032480"
  },
  {
    "text": "the other hand",
    "start": "1032480",
    "end": "1033520"
  },
  {
    "text": "the e-space traffic between the bare",
    "start": "1033520",
    "end": "1035199"
  },
  {
    "text": "metal server itself",
    "start": "1035199",
    "end": "1036720"
  },
  {
    "text": "is achieved through the oven logical",
    "start": "1036720",
    "end": "1039120"
  },
  {
    "text": "topology",
    "start": "1039120",
    "end": "1040000"
  },
  {
    "text": "and uh um using an overlay",
    "start": "1040000",
    "end": "1043280"
  },
  {
    "text": "and and then we'll have one apples",
    "start": "1043280",
    "end": "1045760"
  },
  {
    "text": "define",
    "start": "1045760",
    "end": "1046319"
  },
  {
    "text": "which bare metal hose can talk to each",
    "start": "1046319",
    "end": "1047918"
  },
  {
    "text": "other and which bare metal hose cannot",
    "start": "1047919",
    "end": "1050799"
  },
  {
    "text": "talk to each other this is defined by",
    "start": "1050799",
    "end": "1052240"
  },
  {
    "text": "the one actuals",
    "start": "1052240",
    "end": "1054000"
  },
  {
    "text": "see both the the green overlay and the",
    "start": "1054000",
    "end": "1057280"
  },
  {
    "text": "orange overlay",
    "start": "1057280",
    "end": "1059039"
  },
  {
    "text": "they are transported over the blue",
    "start": "1059039",
    "end": "1061039"
  },
  {
    "text": "underlay this forms the underlay",
    "start": "1061039",
    "end": "1063120"
  },
  {
    "text": "where the blue fields are all in blue",
    "start": "1063120",
    "end": "1065440"
  },
  {
    "text": "fields in the data center",
    "start": "1065440",
    "end": "1066960"
  },
  {
    "text": "they're all interconnected together and",
    "start": "1066960",
    "end": "1070559"
  },
  {
    "text": "they form the underlay over which",
    "start": "1070559",
    "end": "1073600"
  },
  {
    "text": "the geneva tunnel traffic is transported",
    "start": "1073600",
    "end": "1076559"
  },
  {
    "text": "between the pods",
    "start": "1076559",
    "end": "1077760"
  },
  {
    "text": "and between the bare metal server itself",
    "start": "1077760",
    "end": "1080320"
  },
  {
    "text": "um",
    "start": "1080320",
    "end": "1081039"
  },
  {
    "text": "so the red underlay network here is for",
    "start": "1081039",
    "end": "1083760"
  },
  {
    "text": "access to the internet",
    "start": "1083760",
    "end": "1085200"
  },
  {
    "text": "if these spots want to access to the",
    "start": "1085200",
    "end": "1086960"
  },
  {
    "text": "internet they kind of exit",
    "start": "1086960",
    "end": "1088720"
  },
  {
    "text": "out of the tunnel or they exit out of",
    "start": "1088720",
    "end": "1090640"
  },
  {
    "text": "the oven logical topology",
    "start": "1090640",
    "end": "1092320"
  },
  {
    "text": "through a oven gateway router where they",
    "start": "1092320",
    "end": "1095600"
  },
  {
    "text": "get",
    "start": "1095600",
    "end": "1095919"
  },
  {
    "text": "source knighted into the blue fit ip and",
    "start": "1095919",
    "end": "1098400"
  },
  {
    "text": "then now",
    "start": "1098400",
    "end": "1099200"
  },
  {
    "text": "they're on the red underlay and heading",
    "start": "1099200",
    "end": "1101919"
  },
  {
    "text": "towards the internet",
    "start": "1101919",
    "end": "1103039"
  },
  {
    "text": "the same thing is true for the bare",
    "start": "1103039",
    "end": "1106160"
  },
  {
    "text": "metal server host trying to access",
    "start": "1106160",
    "end": "1107919"
  },
  {
    "text": "internet",
    "start": "1107919",
    "end": "1108720"
  },
  {
    "text": "so they exit out of their logical",
    "start": "1108720",
    "end": "1110320"
  },
  {
    "text": "topology um",
    "start": "1110320",
    "end": "1112160"
  },
  {
    "text": "through a gateway router uh oven gateway",
    "start": "1112160",
    "end": "1114880"
  },
  {
    "text": "router",
    "start": "1114880",
    "end": "1115520"
  },
  {
    "text": "where the source netting happens",
    "start": "1115520",
    "end": "1118960"
  },
  {
    "text": "the logical topology ip is so snatched",
    "start": "1118960",
    "end": "1121120"
  },
  {
    "text": "to the bluefield",
    "start": "1121120",
    "end": "1123120"
  },
  {
    "text": "underlay ip and then the packet head",
    "start": "1123120",
    "end": "1125200"
  },
  {
    "text": "towards the internet",
    "start": "1125200",
    "end": "1126799"
  },
  {
    "text": "um so that's this diagram so",
    "start": "1126799",
    "end": "1129840"
  },
  {
    "start": "1129000",
    "end": "1226000"
  },
  {
    "text": "here what we're capturing is how",
    "start": "1129840",
    "end": "1132960"
  },
  {
    "text": "one can provide a multi-tenancy model",
    "start": "1132960",
    "end": "1137520"
  },
  {
    "text": "uh in a dc using oven distributed",
    "start": "1137520",
    "end": "1140480"
  },
  {
    "text": "control plane",
    "start": "1140480",
    "end": "1141520"
  },
  {
    "text": "and a smart nic in it so in here we have",
    "start": "1141520",
    "end": "1144640"
  },
  {
    "text": "two tenants",
    "start": "1144640",
    "end": "1145679"
  },
  {
    "text": "um a blue tenant and a ping tenant the",
    "start": "1145679",
    "end": "1148320"
  },
  {
    "text": "blue tenant",
    "start": "1148320",
    "end": "1149120"
  },
  {
    "text": "um uh has a bunch of bare metal servers",
    "start": "1149120",
    "end": "1152480"
  },
  {
    "text": "which are all interconnected together",
    "start": "1152480",
    "end": "1154080"
  },
  {
    "text": "using",
    "start": "1154080",
    "end": "1154640"
  },
  {
    "text": "our logical topology on top of this bare",
    "start": "1154640",
    "end": "1157600"
  },
  {
    "text": "metal servers",
    "start": "1157600",
    "end": "1158559"
  },
  {
    "text": "they're running kubernetes cluster uh",
    "start": "1158559",
    "end": "1161280"
  },
  {
    "text": "which is orchestrated by the urban cni",
    "start": "1161280",
    "end": "1164000"
  },
  {
    "text": "and the the cluster",
    "start": "1164000",
    "end": "1167120"
  },
  {
    "text": "the qubit is cluster itself is it is in",
    "start": "1167120",
    "end": "1168960"
  },
  {
    "text": "its own logical topology",
    "start": "1168960",
    "end": "1170880"
  },
  {
    "text": "um similarly here for the ping tenant",
    "start": "1170880",
    "end": "1173679"
  },
  {
    "text": "they have a bunch of bare metal servers",
    "start": "1173679",
    "end": "1175280"
  },
  {
    "text": "in the dc",
    "start": "1175280",
    "end": "1176400"
  },
  {
    "text": "that was assigned to them and the bare",
    "start": "1176400",
    "end": "1178480"
  },
  {
    "text": "metal servers themselves are",
    "start": "1178480",
    "end": "1179840"
  },
  {
    "text": "connected together using a logical",
    "start": "1179840",
    "end": "1181840"
  },
  {
    "text": "switch and a logical router",
    "start": "1181840",
    "end": "1184320"
  },
  {
    "text": "um and then on those bare metal servers",
    "start": "1184320",
    "end": "1187200"
  },
  {
    "text": "they have",
    "start": "1187200",
    "end": "1187760"
  },
  {
    "text": "their own kubernetes cluster running",
    "start": "1187760",
    "end": "1189919"
  },
  {
    "text": "which is again orchestrated throughout",
    "start": "1189919",
    "end": "1191440"
  },
  {
    "text": "cni",
    "start": "1191440",
    "end": "1192400"
  },
  {
    "text": "as you can see they all use this",
    "start": "1192400",
    "end": "1194240"
  },
  {
    "text": "overlapping ips",
    "start": "1194240",
    "end": "1195840"
  },
  {
    "text": "and um and this is all made possible",
    "start": "1195840",
    "end": "1198640"
  },
  {
    "text": "because of the oven virtual topology",
    "start": "1198640",
    "end": "1201200"
  },
  {
    "text": "and they all exit out to the underlay",
    "start": "1201200",
    "end": "1204320"
  },
  {
    "text": "and then finally they reach out to the",
    "start": "1204320",
    "end": "1205520"
  },
  {
    "text": "internet",
    "start": "1205520",
    "end": "1206400"
  },
  {
    "text": "um the cloud providers can apply their",
    "start": "1206400",
    "end": "1209120"
  },
  {
    "text": "axles",
    "start": "1209120",
    "end": "1210080"
  },
  {
    "text": "on the bare metal um on the smart neck",
    "start": "1210080",
    "end": "1214880"
  },
  {
    "text": "to kind of make sure that the blue",
    "start": "1214880",
    "end": "1216159"
  },
  {
    "text": "tenant and the ping tenant are",
    "start": "1216159",
    "end": "1218000"
  },
  {
    "text": "isolated from each other and they're",
    "start": "1218000",
    "end": "1219840"
  },
  {
    "text": "also isolated from",
    "start": "1219840",
    "end": "1221600"
  },
  {
    "text": "the cloud provider services itself and",
    "start": "1221600",
    "end": "1224559"
  },
  {
    "text": "the next slide kind of talks to that",
    "start": "1224559",
    "end": "1227200"
  },
  {
    "start": "1226000",
    "end": "1340000"
  },
  {
    "text": "so in here we show a dc networking with",
    "start": "1227200",
    "end": "1229919"
  },
  {
    "text": "uh",
    "start": "1229919",
    "end": "1231600"
  },
  {
    "text": "thor's and l2 within the tors and",
    "start": "1231600",
    "end": "1234640"
  },
  {
    "text": "everything across the tarsus l3",
    "start": "1234640",
    "end": "1237679"
  },
  {
    "text": "so here you see a blue tenon has a bunch",
    "start": "1237679",
    "end": "1240240"
  },
  {
    "text": "of",
    "start": "1240240",
    "end": "1241120"
  },
  {
    "text": "bare metal nodes assigned to it there's",
    "start": "1241120",
    "end": "1242559"
  },
  {
    "text": "a four bare metal node assigned to it",
    "start": "1242559",
    "end": "1244559"
  },
  {
    "text": "and each of the brain metal node has a",
    "start": "1244559",
    "end": "1246559"
  },
  {
    "text": "blue field adapter",
    "start": "1246559",
    "end": "1248080"
  },
  {
    "text": "uh assigned to it um and then these",
    "start": "1248080",
    "end": "1251600"
  },
  {
    "text": "four bare metals they form a vtep",
    "start": "1251600",
    "end": "1254880"
  },
  {
    "text": "network",
    "start": "1254880",
    "end": "1255440"
  },
  {
    "text": "amongst themselves there's a concept of",
    "start": "1255440",
    "end": "1257360"
  },
  {
    "text": "trusted zones",
    "start": "1257360",
    "end": "1258559"
  },
  {
    "text": "so you create uh this island of bare",
    "start": "1258559",
    "end": "1262000"
  },
  {
    "text": "metal servers with bluefield on them",
    "start": "1262000",
    "end": "1264159"
  },
  {
    "text": "and these uh the the geneva traffic",
    "start": "1264159",
    "end": "1267840"
  },
  {
    "text": "um or the oven traffic only kind of uh",
    "start": "1267840",
    "end": "1271919"
  },
  {
    "text": "happens or occurs between these set of",
    "start": "1271919",
    "end": "1274799"
  },
  {
    "text": "bare metal nodes",
    "start": "1274799",
    "end": "1276000"
  },
  {
    "text": "um on top of this bare metal node is",
    "start": "1276000",
    "end": "1278159"
  },
  {
    "text": "where we build the",
    "start": "1278159",
    "end": "1279760"
  },
  {
    "text": "kubernetes cluster and then they kind of",
    "start": "1279760",
    "end": "1282640"
  },
  {
    "text": "live within this island",
    "start": "1282640",
    "end": "1283840"
  },
  {
    "text": "similarly the pink tenant also has",
    "start": "1283840",
    "end": "1287600"
  },
  {
    "text": "its own island with a set of bare metal",
    "start": "1287600",
    "end": "1290159"
  },
  {
    "text": "servers with",
    "start": "1290159",
    "end": "1290960"
  },
  {
    "text": "each of them having a blue field",
    "start": "1290960",
    "end": "1292720"
  },
  {
    "text": "associated with it",
    "start": "1292720",
    "end": "1294000"
  },
  {
    "text": "and they have their own logical topology",
    "start": "1294000",
    "end": "1296640"
  },
  {
    "text": "and",
    "start": "1296640",
    "end": "1297919"
  },
  {
    "text": "the tunnel is formed only between these",
    "start": "1297919",
    "end": "1300960"
  },
  {
    "text": "four",
    "start": "1300960",
    "end": "1301919"
  },
  {
    "text": "pink bare metals so in that way there is",
    "start": "1301919",
    "end": "1304159"
  },
  {
    "text": "no interconnect at all between",
    "start": "1304159",
    "end": "1306559"
  },
  {
    "text": "the blue island and the pink island and",
    "start": "1306559",
    "end": "1308880"
  },
  {
    "text": "then in the same way",
    "start": "1308880",
    "end": "1310400"
  },
  {
    "text": "the cloud provider services the cloud",
    "start": "1310400",
    "end": "1312400"
  },
  {
    "text": "provider can provide their services",
    "start": "1312400",
    "end": "1314640"
  },
  {
    "text": "either on the physical network directly",
    "start": "1314640",
    "end": "1317440"
  },
  {
    "text": "or they can provide it on the oven logic",
    "start": "1317440",
    "end": "1319440"
  },
  {
    "text": "network itself",
    "start": "1319440",
    "end": "1320720"
  },
  {
    "text": "um so in that way a blue tenant can",
    "start": "1320720",
    "end": "1323840"
  },
  {
    "text": "access some of the services provided by",
    "start": "1323840",
    "end": "1325360"
  },
  {
    "text": "the",
    "start": "1325360",
    "end": "1325840"
  },
  {
    "text": "provider provided by the cloud provider",
    "start": "1325840",
    "end": "1328159"
  },
  {
    "text": "um",
    "start": "1328159",
    "end": "1330159"
  },
  {
    "text": "through the logical topology or directly",
    "start": "1330159",
    "end": "1332640"
  },
  {
    "text": "they exit out to the underlay and on the",
    "start": "1332640",
    "end": "1334559"
  },
  {
    "text": "underlay",
    "start": "1334559",
    "end": "1335440"
  },
  {
    "text": "they kind of connect to the services",
    "start": "1335440",
    "end": "1337520"
  },
  {
    "text": "running on the physical network itself",
    "start": "1337520",
    "end": "1341120"
  },
  {
    "start": "1340000",
    "end": "1716000"
  },
  {
    "text": "uh next slide uh leal can you proceed",
    "start": "1341120",
    "end": "1346400"
  },
  {
    "text": "sure thanks greg so uh in addition to",
    "start": "1346400",
    "end": "1350080"
  },
  {
    "text": "the",
    "start": "1350080",
    "end": "1350720"
  },
  {
    "text": "security enhancement and isolation this",
    "start": "1350720",
    "end": "1353440"
  },
  {
    "text": "solution",
    "start": "1353440",
    "end": "1354080"
  },
  {
    "text": "also enjoys uh datapass hardware offload",
    "start": "1354080",
    "end": "1358159"
  },
  {
    "text": "this is done using the asub square",
    "start": "1358159",
    "end": "1361200"
  },
  {
    "text": "framework",
    "start": "1361200",
    "end": "1362240"
  },
  {
    "text": "by melanox accelerated switching and",
    "start": "1362240",
    "end": "1364320"
  },
  {
    "text": "packet processing",
    "start": "1364320",
    "end": "1366159"
  },
  {
    "text": "it's a software and hardware integrated",
    "start": "1366159",
    "end": "1368080"
  },
  {
    "text": "framework",
    "start": "1368080",
    "end": "1369440"
  },
  {
    "text": "which utilizes melanox nix to accelerate",
    "start": "1369440",
    "end": "1372159"
  },
  {
    "text": "and offload the data plan",
    "start": "1372159",
    "end": "1374159"
  },
  {
    "text": "while maintaining the control plane in",
    "start": "1374159",
    "end": "1376480"
  },
  {
    "text": "software",
    "start": "1376480",
    "end": "1377760"
  },
  {
    "text": "so it minimizes the needed changes in",
    "start": "1377760",
    "end": "1380159"
  },
  {
    "text": "kubernetes cni",
    "start": "1380159",
    "end": "1381440"
  },
  {
    "text": "or other sdns the solution supports",
    "start": "1381440",
    "end": "1385440"
  },
  {
    "text": "different configuration srv and virteo",
    "start": "1385440",
    "end": "1389360"
  },
  {
    "text": "and it's available both upstream and",
    "start": "1389360",
    "end": "1391679"
  },
  {
    "text": "inbox",
    "start": "1391679",
    "end": "1394158"
  },
  {
    "text": "it consists of three capabilities",
    "start": "1400640",
    "end": "1403280"
  },
  {
    "text": "classification offload",
    "start": "1403280",
    "end": "1405039"
  },
  {
    "text": "action of load and data bus offload",
    "start": "1405039",
    "end": "1407840"
  },
  {
    "text": "which are",
    "start": "1407840",
    "end": "1408400"
  },
  {
    "text": "required for uh",
    "start": "1408400",
    "end": "1411440"
  },
  {
    "text": "switching for switch data pass offload",
    "start": "1411440",
    "end": "1417840"
  },
  {
    "text": "so as girish explained we worked with",
    "start": "1420960",
    "end": "1424400"
  },
  {
    "text": "oven control plan which is based on ovs",
    "start": "1424400",
    "end": "1428840"
  },
  {
    "text": "switch ovr switch is the most popular",
    "start": "1428840",
    "end": "1431919"
  },
  {
    "text": "virtual switch",
    "start": "1431919",
    "end": "1433039"
  },
  {
    "text": "is a flow based one with many",
    "start": "1433039",
    "end": "1434960"
  },
  {
    "text": "capabilities",
    "start": "1434960",
    "end": "1436480"
  },
  {
    "text": "uh among which are geneve connection",
    "start": "1436480",
    "end": "1439200"
  },
  {
    "text": "tracking",
    "start": "1439200",
    "end": "1439919"
  },
  {
    "text": "mirroring and more and",
    "start": "1439919",
    "end": "1443360"
  },
  {
    "text": "uh there are many multiple control",
    "start": "1443360",
    "end": "1445520"
  },
  {
    "text": "planes that are built on top of it",
    "start": "1445520",
    "end": "1447279"
  },
  {
    "text": "uh ovn is an example for that",
    "start": "1447279",
    "end": "1451440"
  },
  {
    "text": "it has a ova it has a user space",
    "start": "1451440",
    "end": "1455840"
  },
  {
    "text": "module and a credit space module and in",
    "start": "1455840",
    "end": "1458880"
  },
  {
    "text": "the regular configuration",
    "start": "1458880",
    "end": "1460880"
  },
  {
    "text": "each pod is assigned a vth",
    "start": "1460880",
    "end": "1464880"
  },
  {
    "text": "a pervert interface",
    "start": "1464880",
    "end": "1473840"
  },
  {
    "text": "so in the traditional model",
    "start": "1474640",
    "end": "1477679"
  },
  {
    "text": "the first packet of a flow will go up to",
    "start": "1477679",
    "end": "1480720"
  },
  {
    "text": "the user space",
    "start": "1480720",
    "end": "1481919"
  },
  {
    "text": "there it will be processed and sent",
    "start": "1481919",
    "end": "1485360"
  },
  {
    "text": "and then suitable rule will be inserted",
    "start": "1485360",
    "end": "1488080"
  },
  {
    "text": "to the kernel",
    "start": "1488080",
    "end": "1489200"
  },
  {
    "text": "so the next packets of the same flow",
    "start": "1489200",
    "end": "1491760"
  },
  {
    "text": "will go directly through the kernel",
    "start": "1491760",
    "end": "1493440"
  },
  {
    "text": "without going through the user space",
    "start": "1493440",
    "end": "1496960"
  },
  {
    "text": "with connectex hardware offload the suit",
    "start": "1496960",
    "end": "1500559"
  },
  {
    "text": "this rule would not only be inserted to",
    "start": "1500559",
    "end": "1503279"
  },
  {
    "text": "the kernel but",
    "start": "1503279",
    "end": "1504240"
  },
  {
    "text": "also to the hardware to the connected",
    "start": "1504240",
    "end": "1507440"
  },
  {
    "text": "embedded switch in this case",
    "start": "1507440",
    "end": "1510640"
  },
  {
    "text": "the next packets of a flow will not",
    "start": "1510640",
    "end": "1514000"
  },
  {
    "text": "go to the cpu at all and will just be",
    "start": "1514000",
    "end": "1516960"
  },
  {
    "text": "processed",
    "start": "1516960",
    "end": "1518000"
  },
  {
    "text": "in the how hardware",
    "start": "1518000",
    "end": "1521360"
  },
  {
    "text": "[Music]",
    "start": "1523650",
    "end": "1526480"
  },
  {
    "text": "so this way we keep the first packet",
    "start": "1526480",
    "end": "1529919"
  },
  {
    "text": "miss",
    "start": "1529919",
    "end": "1530400"
  },
  {
    "text": "architecture by using an additional",
    "start": "1530400",
    "end": "1534240"
  },
  {
    "text": "hardware layer which is the embedded",
    "start": "1534240",
    "end": "1536880"
  },
  {
    "text": "switch",
    "start": "1536880",
    "end": "1538000"
  },
  {
    "text": "which is located on the neck each pod",
    "start": "1538000",
    "end": "1541520"
  },
  {
    "text": "is assigned an srv virtual function",
    "start": "1541520",
    "end": "1546640"
  },
  {
    "text": "and while the controller or the user",
    "start": "1546640",
    "end": "1549279"
  },
  {
    "text": "inserts the",
    "start": "1549279",
    "end": "1550480"
  },
  {
    "text": "the policies by using obvious open flow",
    "start": "1550480",
    "end": "1552880"
  },
  {
    "text": "rules",
    "start": "1552880",
    "end": "1553760"
  },
  {
    "text": "these rules are offloaded to the",
    "start": "1553760",
    "end": "1555760"
  },
  {
    "text": "hardware in a transparent way",
    "start": "1555760",
    "end": "1557919"
  },
  {
    "text": "using linux dc rules",
    "start": "1557919",
    "end": "1561600"
  },
  {
    "text": "packets are being processed by the nic",
    "start": "1563919",
    "end": "1566320"
  },
  {
    "text": "and",
    "start": "1566320",
    "end": "1566960"
  },
  {
    "text": "therefore there is no host cpu",
    "start": "1566960",
    "end": "1570400"
  },
  {
    "text": "consumption",
    "start": "1570400",
    "end": "1571840"
  },
  {
    "text": "and we increase throughput and",
    "start": "1571840",
    "end": "1574960"
  },
  {
    "text": "decrease latency",
    "start": "1574960",
    "end": "1578158"
  },
  {
    "text": "drastically",
    "start": "1579120",
    "end": "1582000"
  },
  {
    "text": "the ace of square has many benefits it",
    "start": "1582960",
    "end": "1585200"
  },
  {
    "text": "achieves uncompromised performance it",
    "start": "1585200",
    "end": "1587440"
  },
  {
    "text": "saves cpu",
    "start": "1587440",
    "end": "1589600"
  },
  {
    "text": "using the smart nic you can achieve also",
    "start": "1589600",
    "end": "1592640"
  },
  {
    "text": "full isolation and it facilitates the",
    "start": "1592640",
    "end": "1595200"
  },
  {
    "text": "solution for both bare metal",
    "start": "1595200",
    "end": "1597679"
  },
  {
    "text": "and virtualized clouds",
    "start": "1597679",
    "end": "1601200"
  },
  {
    "text": "so if for virtualized cloud",
    "start": "1610480",
    "end": "1613679"
  },
  {
    "text": "that both network virtualization and",
    "start": "1613679",
    "end": "1615679"
  },
  {
    "text": "storage virtualization",
    "start": "1615679",
    "end": "1617279"
  },
  {
    "text": "were traditionally running in the",
    "start": "1617279",
    "end": "1619279"
  },
  {
    "text": "hypervisor",
    "start": "1619279",
    "end": "1622159"
  },
  {
    "text": "using uh connectex",
    "start": "1622880",
    "end": "1626159"
  },
  {
    "text": "we can offload the network data plane",
    "start": "1626159",
    "end": "1630159"
  },
  {
    "text": "by by leveraging the asub square",
    "start": "1630159",
    "end": "1632559"
  },
  {
    "text": "framework",
    "start": "1632559",
    "end": "1634320"
  },
  {
    "text": "when we use bluefield the smart",
    "start": "1634320",
    "end": "1636480"
  },
  {
    "text": "technique as a bump in a wire",
    "start": "1636480",
    "end": "1639120"
  },
  {
    "text": "also the control plane of the switch",
    "start": "1639120",
    "end": "1642399"
  },
  {
    "text": "can run on the smartening on the arm",
    "start": "1642399",
    "end": "1644720"
  },
  {
    "text": "cores",
    "start": "1644720",
    "end": "1645440"
  },
  {
    "text": "as well as the storage virtualization",
    "start": "1645440",
    "end": "1647520"
  },
  {
    "text": "and other security services",
    "start": "1647520",
    "end": "1650320"
  },
  {
    "text": "this is also true for bare metal service",
    "start": "1650320",
    "end": "1653440"
  },
  {
    "text": "servers",
    "start": "1653440",
    "end": "1655840"
  },
  {
    "text": "so i'll summarize bare metal clouds",
    "start": "1662000",
    "end": "1665360"
  },
  {
    "text": "raises the demand for network isolation",
    "start": "1665360",
    "end": "1668320"
  },
  {
    "text": "since the host is no longer trusted",
    "start": "1668320",
    "end": "1671100"
  },
  {
    "text": "[Music]",
    "start": "1671100",
    "end": "1672240"
  },
  {
    "text": "network resolution can be achieved by",
    "start": "1672240",
    "end": "1674559"
  },
  {
    "text": "using a dedicated hardware",
    "start": "1674559",
    "end": "1676960"
  },
  {
    "text": "which is which which sits",
    "start": "1676960",
    "end": "1680399"
  },
  {
    "text": "in front of the in part of the host",
    "start": "1680399",
    "end": "1683440"
  },
  {
    "text": "we use bluefield smartnic as a bumper in",
    "start": "1683440",
    "end": "1685919"
  },
  {
    "text": "the wire",
    "start": "1685919",
    "end": "1687360"
  },
  {
    "text": "to run ovn control plane in a secured",
    "start": "1687360",
    "end": "1690080"
  },
  {
    "text": "way",
    "start": "1690080",
    "end": "1690720"
  },
  {
    "text": "we're running both the virtual switch",
    "start": "1690720",
    "end": "1693840"
  },
  {
    "text": "and the utilities configuring it on the",
    "start": "1693840",
    "end": "1696640"
  },
  {
    "text": "neck",
    "start": "1696640",
    "end": "1698960"
  },
  {
    "text": "we also leveraged the s of square",
    "start": "1700399",
    "end": "1702480"
  },
  {
    "text": "framework in order to achieve data pass",
    "start": "1702480",
    "end": "1704720"
  },
  {
    "text": "hardware offload",
    "start": "1704720",
    "end": "1706799"
  },
  {
    "text": "which resulted in bus drastic reduction",
    "start": "1706799",
    "end": "1709840"
  },
  {
    "text": "in host cpu consumption",
    "start": "1709840",
    "end": "1712080"
  },
  {
    "text": "and enhanced performance",
    "start": "1712080",
    "end": "1715360"
  },
  {
    "text": "thank you",
    "start": "1715360",
    "end": "1718080"
  }
]