[
  {
    "text": "hello and welcome to getting started with get ops influx i am going to be giving a um",
    "start": "640",
    "end": "6480"
  },
  {
    "text": "introduction to both the topics so get ops first and then flux and then at the very end i will be giving a demo on how",
    "start": "6480",
    "end": "12880"
  },
  {
    "text": "to actually get started with flux my name is priyanka ravi",
    "start": "12880",
    "end": "18240"
  },
  {
    "text": "i am a developer experience engineer at weaveworks and um before my time here i was actually a um",
    "start": "18240",
    "end": "27760"
  },
  {
    "text": "on a get ops delivery team at state farm so i",
    "start": "27760",
    "end": "33120"
  },
  {
    "text": "am a flux user myself so um basically i'm going to be coming into this with a lot of user experience from that time",
    "start": "33120",
    "end": "42079"
  },
  {
    "text": "why get ups why should you even care why are you here um there's a lot of reasons to love git ops and there's a lot of",
    "start": "42079",
    "end": "48879"
  },
  {
    "text": "benefits that come with it individual teams and organizations who implement get ops experience many benefits",
    "start": "48879",
    "end": "55199"
  },
  {
    "text": "including um stronger security guarantees because of gitops's um get ops tools",
    "start": "55199",
    "end": "62079"
  },
  {
    "text": "unique ability to treat everything as code it basically directly impacts security for example",
    "start": "62079",
    "end": "68640"
  },
  {
    "text": "if all configuration and security policy is treated as code everything can be",
    "start": "68640",
    "end": "73920"
  },
  {
    "text": "held in version control so basically any and all changes that are made um are reviewed and inputted into an automated",
    "start": "73920",
    "end": "81200"
  },
  {
    "text": "pipeline there's no manual processes so you're less likely to be at work on a weekend which leads me to increase",
    "start": "81200",
    "end": "87600"
  },
  {
    "text": "developer and operational productivity because there's no manual processes it actually",
    "start": "87600",
    "end": "93520"
  },
  {
    "text": "um allows developers to work on things that actually matter such as the actual application um and it",
    "start": "93520",
    "end": "102159"
  },
  {
    "text": "enhances developer experience because you wouldn't have to be there um on a weekend debugging something that you",
    "start": "102159",
    "end": "108000"
  },
  {
    "text": "know maybe someone entered in manually and you don't have this audit trail of how it got there and what changes were",
    "start": "108000",
    "end": "113200"
  },
  {
    "text": "made um because of all the things that i also just mentioned it also improves stability it's uh there's a higher",
    "start": "113200",
    "end": "119600"
  },
  {
    "text": "reliability it's more consistent and because it's all through code it also is very standardized",
    "start": "119600",
    "end": "128840"
  },
  {
    "text": "what are the benefits of flux flux actually reduces developer burden by removing the cube control problem you",
    "start": "129200",
    "end": "135840"
  },
  {
    "text": "don't have to worry about cube control versions to be able to interact with the cluster",
    "start": "135840",
    "end": "141440"
  },
  {
    "text": "you get rid of all those manual steps and so you can focus on things that matter um also it's extensible it's super",
    "start": "141440",
    "end": "148080"
  },
  {
    "text": "versatile it works with existing tools it's very flexible basically it's a modular natural extension of kubernetes",
    "start": "148080",
    "end": "156480"
  },
  {
    "text": "and because of the microservice architecture that flux has you can pick and choose what you actually want to",
    "start": "156480",
    "end": "162879"
  },
  {
    "text": "include to tailor your own experience with flux and it comes with out of the box support for customize and helm",
    "start": "162879",
    "end": "169519"
  },
  {
    "text": "and like i said it's designed for kubernetes it was designed entirely to be a natural extension of kubernetes",
    "start": "169519",
    "end": "176319"
  },
  {
    "text": "so these are eight things that we like you to know uh about flux and so it's",
    "start": "176319",
    "end": "183120"
  },
  {
    "text": "basically just a little flux and short um flux provides get ups for both apps and infrastructure you basically just",
    "start": "183120",
    "end": "189680"
  },
  {
    "text": "get push and flux does the rest flux works with your existing tools",
    "start": "189680",
    "end": "195519"
  },
  {
    "text": "and it also works with any kubernetes and all common kubernetes tooling um it",
    "start": "195519",
    "end": "200720"
  },
  {
    "text": "does multi-tenancy and as we like to say multi-everything and um you can",
    "start": "200720",
    "end": "205920"
  },
  {
    "text": "use it to alert and notify and users trucks trust flux um myself included as well um",
    "start": "205920",
    "end": "212640"
  },
  {
    "text": "and flux has a lovely community that's very easy to work with i am going to come back to these statements at the end",
    "start": "212640",
    "end": "218400"
  },
  {
    "text": "so i will elaborate more on them i just wanted to um get your feet wet with these concepts",
    "start": "218400",
    "end": "223680"
  },
  {
    "text": "all right so what is get ops get ops is an operating model for cloud native applications such as kubernetes but i do",
    "start": "223680",
    "end": "230319"
  },
  {
    "text": "want to highlight that it's not just for kubernetes if you are doing a multi-cloud infrastructure you can still",
    "start": "230319",
    "end": "236480"
  },
  {
    "text": "use get ops for your other platforms but because we're focusing on flux um we're going to limit this talk to kubernetes",
    "start": "236480",
    "end": "243920"
  },
  {
    "text": "also it utilizes a version controlled system most commonly git but you can",
    "start": "243920",
    "end": "249280"
  },
  {
    "text": "utilize other sources of truth but most commonly you'll see git as the",
    "start": "249280",
    "end": "254720"
  },
  {
    "text": "single source of truth so that way you have something like an audit trail all those changes are",
    "start": "254720",
    "end": "260079"
  },
  {
    "text": "actually recorded and um uh you can go back and actually view this",
    "start": "260079",
    "end": "265120"
  },
  {
    "text": "source of truth also it enables continuous delivery through automated deployment monitoring",
    "start": "265120",
    "end": "272240"
  },
  {
    "text": "and management by a version controlled system um most likely you're already using these these tools um such as git if",
    "start": "272240",
    "end": "279440"
  },
  {
    "text": "you're um you know your developers are probably already using it so it's something that you can kind of just take advantage of this tool that you're",
    "start": "279440",
    "end": "285919"
  },
  {
    "text": "already using and that's the beauty of git ops um and so also it manages your infrastructure",
    "start": "285919",
    "end": "291600"
  },
  {
    "text": "and applications declaratively all right so i want to talk about the get ops principles which are basically",
    "start": "291600",
    "end": "298080"
  },
  {
    "text": "just a set of best practices that have been defined by the gitops working group through discussions with many different",
    "start": "298080",
    "end": "304639"
  },
  {
    "text": "vendors and users experiences um you can go to opengidops.dev to learn more about",
    "start": "304639",
    "end": "309680"
  },
  {
    "text": "the get ops working group and about these principles but i just want to say don't feel like you have to have them all done in order",
    "start": "309680",
    "end": "316960"
  },
  {
    "text": "to utilize git ups everyone's journey looks different and you can start using get ops and add in hardening and tweak",
    "start": "316960",
    "end": "324560"
  },
  {
    "text": "to your setup to meet these guidelines as you go the first principle",
    "start": "324560",
    "end": "330080"
  },
  {
    "text": "is that a system managed by get ops must have its desired state expressed",
    "start": "330080",
    "end": "335280"
  },
  {
    "text": "declaratively basically there's a lot of benefits you get from",
    "start": "335280",
    "end": "340479"
  },
  {
    "text": "having your desired state expressed declaratively um such as you know because it's written",
    "start": "340479",
    "end": "345680"
  },
  {
    "text": "in code it's reusable um there's an audit trail there's a lot of reasons",
    "start": "345680",
    "end": "350720"
  },
  {
    "text": "that it's uh a good idea to have it written expressed declaratively but it's also important um for later later um",
    "start": "350720",
    "end": "358800"
  },
  {
    "text": "principles that we're going to talk about such as a software agent pulling it but um yeah there's lots of benefits and",
    "start": "358800",
    "end": "364560"
  },
  {
    "text": "reasons to do it and then the the second principle is that a desired state is",
    "start": "364560",
    "end": "369600"
  },
  {
    "text": "stored in a way that enforces immutability versioning and retains a complete version history",
    "start": "369600",
    "end": "375520"
  },
  {
    "text": "so um basically because it's immutable there's no sneaking and a change there's no way for someone to come in and",
    "start": "375520",
    "end": "383280"
  },
  {
    "text": "actually add a change that's not a part of this complete version history",
    "start": "383280",
    "end": "388479"
  },
  {
    "text": "and versioning has a lot of good benefits as well you can always revert back to an old version um and so yeah",
    "start": "388479",
    "end": "394720"
  },
  {
    "text": "there's lots of benefits to all of those things um and then the third principle is that",
    "start": "394720",
    "end": "399919"
  },
  {
    "text": "software agents automatically pull the desired states declarations from the source and so because your your stuff is",
    "start": "399919",
    "end": "406800"
  },
  {
    "text": "all codified all your state state your desired state is codified um an agent can come along and actually",
    "start": "406800",
    "end": "413520"
  },
  {
    "text": "pull in what you have stated that you want it to look like and then it will actually apply it to um",
    "start": "413520",
    "end": "419759"
  },
  {
    "text": "your um kubernetes environment so the fourth principle is that software",
    "start": "419759",
    "end": "425440"
  },
  {
    "text": "agents continuously observe the actual system state and attempt to apply the desired states so",
    "start": "425440",
    "end": "430720"
  },
  {
    "text": "basically something like flux would be actually continuously observing the desired system state so whatever is in",
    "start": "430720",
    "end": "437199"
  },
  {
    "text": "your repository and actually attempt to apply it and make sure that it's actually what is actually um deployed so",
    "start": "437199",
    "end": "444160"
  },
  {
    "text": "whatever you desire is actually the deployed state and you can rest easy knowing that it will always be that way",
    "start": "444160",
    "end": "451440"
  },
  {
    "text": "so what is flux flux is a get centric package manager for your applications but git isn't the",
    "start": "451440",
    "end": "458800"
  },
  {
    "text": "only system you can actually use with flux but basically it provides a set of continuous and progressive delivery",
    "start": "458800",
    "end": "465520"
  },
  {
    "text": "solutions for kubernetes it is a natural extension um of the",
    "start": "465520",
    "end": "470960"
  },
  {
    "text": "benefits that already come with kubernetes and at the core of it basically the it continuously monitors",
    "start": "470960",
    "end": "476960"
  },
  {
    "text": "your version control system and it applies the desired state that's been declaratively",
    "start": "476960",
    "end": "482000"
  },
  {
    "text": "stated there the nice part of this is that you don't have to worry about things like configuration drift because it also",
    "start": "482000",
    "end": "488960"
  },
  {
    "text": "heart applies on a schedule so if things have gotten out of sync for some reason it will actually set it back to your",
    "start": "488960",
    "end": "494639"
  },
  {
    "text": "desired state and as i mentioned earlier flux really reduces developer burden because it",
    "start": "494639",
    "end": "500560"
  },
  {
    "text": "removes the need for manual deployment processes everything's automated which is really nice so you don't have to",
    "start": "500560",
    "end": "505680"
  },
  {
    "text": "worry about those things okay so",
    "start": "505680",
    "end": "511440"
  },
  {
    "text": "flux is actually a set of kubernetes controllers and if you're not familiar with controllers a controller handles",
    "start": "511440",
    "end": "517919"
  },
  {
    "text": "the life cycle of objects in kubernetes um basically like if something needs to be done so when an object is created",
    "start": "517919",
    "end": "523839"
  },
  {
    "text": "updated deleted etc um uh these are the the different",
    "start": "523839",
    "end": "529200"
  },
  {
    "text": "controllers that flux is made up of but i will come back to this and i will um",
    "start": "529200",
    "end": "534240"
  },
  {
    "text": "go over these in a little bit more detail later i just wanted to show you an overview that it is a microservice",
    "start": "534240",
    "end": "539279"
  },
  {
    "text": "architecture and this is how it works all right now i am going to go back to those statements that i promised that i",
    "start": "539279",
    "end": "545440"
  },
  {
    "text": "would go more in detail with and so the first one is that flux provides get ops for both apps and infrastructure",
    "start": "545440",
    "end": "552800"
  },
  {
    "text": "flux along with flagger actually deploys apps with canaries feature flags and av",
    "start": "552800",
    "end": "558080"
  },
  {
    "text": "rollout so you can utilize any of your progressive delivery needs basically and um there is a great self-led",
    "start": "558080",
    "end": "564160"
  },
  {
    "text": "workshop that includes flagger and would be a great resource if you are interested in trying it out",
    "start": "564160",
    "end": "569760"
  },
  {
    "text": "and that can be found at eks.handson.flagger.dev",
    "start": "569760",
    "end": "574040"
  },
  {
    "text": "also flux can manage uh also manage any kubernetes resource so basically everything you're already using flux can",
    "start": "575360",
    "end": "581440"
  },
  {
    "text": "really manage that um it works very well with the whole kubernetes environment and it was created with all of that in",
    "start": "581440",
    "end": "587600"
  },
  {
    "text": "mind also infrastructure and workload dependency management is built in so one",
    "start": "587600",
    "end": "592959"
  },
  {
    "text": "nice neat feature is that um you can utilize depends on so uh if you let's say your application",
    "start": "592959",
    "end": "600480"
  },
  {
    "text": "actually relies on a database already being stood up you can actually utilize depends on to tell your um",
    "start": "600480",
    "end": "607519"
  },
  {
    "text": "deployment that hey i want my database to already be stood up before my application is even set up and so until",
    "start": "607519",
    "end": "613600"
  },
  {
    "text": "that database is ready it will not actually deploy the application so you can rest assured knowing that all of",
    "start": "613600",
    "end": "619680"
  },
  {
    "text": "those um necessary factors are met already which is a neat feature",
    "start": "619680",
    "end": "624720"
  },
  {
    "text": "um the next thing is just push to get and flux does the rest it really is that simple um flux enables application",
    "start": "624720",
    "end": "632320"
  },
  {
    "text": "deployment and um with the help of flagger like i mentioned earlier also progressive delivery through automatic",
    "start": "632320",
    "end": "638920"
  },
  {
    "text": "reconciliation so it really just um continuously is looking for those changes and then just applying them",
    "start": "638920",
    "end": "645839"
  },
  {
    "text": "automatically and flux can even push back to get for you with automated container image",
    "start": "645839",
    "end": "651920"
  },
  {
    "text": "updates to get so it can do image scanning and patching and so um basically the image reflector controller",
    "start": "651920",
    "end": "657680"
  },
  {
    "text": "and the image automation controller work together to update a git repository when new container images are available",
    "start": "657680",
    "end": "665760"
  },
  {
    "text": "also it works with your existing tools this is um this is the great beauty of the whole the tool it works with your",
    "start": "665760",
    "end": "671760"
  },
  {
    "text": "get providers github get bitbucket and like i mentioned earlier you can even use s3 compatible buckets as a source",
    "start": "671760",
    "end": "678800"
  },
  {
    "text": "um so it's not all just get but all major container registries work and",
    "start": "678800",
    "end": "683920"
  },
  {
    "text": "all ci workflow providers as well so basically all the tools that you're probably already using",
    "start": "683920",
    "end": "689440"
  },
  {
    "text": "is just now drop in flux in it it's going to take over managing your deployments which is great",
    "start": "689440",
    "end": "695760"
  },
  {
    "text": "flux works with any kubernetes and all common kubernetes tooling",
    "start": "695760",
    "end": "700800"
  },
  {
    "text": "like i said before it was really created with kubernetes in mind probably all the tools that you're already using in",
    "start": "700800",
    "end": "706880"
  },
  {
    "text": "kubernetes plugs will work with um so it it works well with customized helm",
    "start": "706880",
    "end": "713040"
  },
  {
    "text": "our back and policy driven validation um oppa kyberno admission controller so it",
    "start": "713040",
    "end": "719120"
  },
  {
    "text": "simply is just really it just falls into place and it just works very well with all the existing tooling",
    "start": "719120",
    "end": "726480"
  },
  {
    "text": "flux does multi-tenancy and multi-everything as we like to say uh basically flux uses true kubernetes are",
    "start": "726800",
    "end": "733600"
  },
  {
    "text": "back via impersonation and supports multiple git repositories um you can have a multi-cluster infrastructure and",
    "start": "733600",
    "end": "740639"
  },
  {
    "text": "apps work out of the box with cluster api flux can use one kubernetes cluster to",
    "start": "740639",
    "end": "745760"
  },
  {
    "text": "manage apps in either the same or other clusters spin up additional clusters",
    "start": "745760",
    "end": "750959"
  },
  {
    "text": "themselves and manage clusters including life cycle and fleets and so multi-tenancy is something i'm",
    "start": "750959",
    "end": "756399"
  },
  {
    "text": "going to show like a little bit in the demo just a like a brief nod to it um",
    "start": "756399",
    "end": "761519"
  },
  {
    "text": "but there are different types of multi-tenancy you can do soft tendency where you have um",
    "start": "761519",
    "end": "767440"
  },
  {
    "text": "a cluster with multiple name spaces so like a team can be given a name space and flux can do that but it can also do",
    "start": "767440",
    "end": "773760"
  },
  {
    "text": "hard tenancy where you give each team their own cluster as well so it can do multiple types of",
    "start": "773760",
    "end": "779920"
  },
  {
    "text": "multi-tenancy which is really awesome plus alerts and notifies flux actually",
    "start": "779920",
    "end": "786800"
  },
  {
    "text": "provides health assessments it can alert to external systems and it can do",
    "start": "786800",
    "end": "792000"
  },
  {
    "text": "external events handling as well basically you can just get push and then you can get notified on slack and other",
    "start": "792000",
    "end": "798000"
  },
  {
    "text": "chat systems this is a really cool feature because um you can actually set it up to to tell you when",
    "start": "798000",
    "end": "804560"
  },
  {
    "text": "a change has been made and flux has been you know any situation that you basically need to know about you can",
    "start": "804560",
    "end": "810560"
  },
  {
    "text": "actually set alerting on which is really cool and then users trust flex flux is a",
    "start": "810560",
    "end": "816079"
  },
  {
    "text": "cncf incubating project and was one of only two projects alongside home",
    "start": "816079",
    "end": "821760"
  },
  {
    "text": "categorized as adopt on the cncfc icd tech writer and you know we we get a lot",
    "start": "821760",
    "end": "826880"
  },
  {
    "text": "of feedback from users and myself being a user as well i i can really attest to",
    "start": "826880",
    "end": "832480"
  },
  {
    "text": "it does everything that it promises it does and it is very simple and easy to use and it makes life just a lot easier",
    "start": "832480",
    "end": "838639"
  },
  {
    "text": "so we have gotten the feedback that people really do trust this tool and flux has a lovely community that is",
    "start": "838639",
    "end": "845120"
  },
  {
    "text": "easy to work with we welcome contributors of any kind um the components of flux are on kubernetes",
    "start": "845120",
    "end": "851839"
  },
  {
    "text": "core controller runtime so anyone can contribute and its functionality can be extended very easily",
    "start": "851839",
    "end": "858160"
  },
  {
    "text": "and get started contributing to flux you can find a contributing guide in our",
    "start": "858160",
    "end": "863519"
  },
  {
    "text": "docs but yeah we really do welcome anyone of any level um we are very happy to have you feel",
    "start": "863519",
    "end": "869440"
  },
  {
    "text": "free to reach out to us if you need any help getting started with something like that all right now i'm coming back to what",
    "start": "869440",
    "end": "875920"
  },
  {
    "text": "the actual flux controllers do um the first one is the source controller and what it does is it",
    "start": "875920",
    "end": "882079"
  },
  {
    "text": "fetches resources and stores them as artifacts basically at its core the source controller is um continuously",
    "start": "882079",
    "end": "888399"
  },
  {
    "text": "monitoring the git repository and um looking for any changes and then it pulls in those artifacts and stores",
    "start": "888399",
    "end": "894800"
  },
  {
    "text": "them and then the customize controller actually applies these manifests and it runs manifest generation using",
    "start": "894800",
    "end": "901680"
  },
  {
    "text": "customize so that's an important key component i want to mention there we get a lot of confusion for sure around the",
    "start": "901680",
    "end": "909600"
  },
  {
    "text": "kubernetes customize and the name of the customized controller so the customized controller actually",
    "start": "909600",
    "end": "915920"
  },
  {
    "text": "does use customize kubernetes customize in the background so what i'm talking about by kubernetes customize is um",
    "start": "915920",
    "end": "923600"
  },
  {
    "text": "the method of actually you know telling using kubernetes customize you can tell it which resources you want it to apply",
    "start": "923600",
    "end": "931040"
  },
  {
    "text": "you can do patching all of those things so everything you're really familiar with with kubernetes customize basically",
    "start": "931040",
    "end": "936720"
  },
  {
    "text": "you can still use kubernetes customize um yamls um but if you don't what the customized",
    "start": "936720",
    "end": "943680"
  },
  {
    "text": "controller is doing in the back end is actually just creating one so that it can actually apply the necessary",
    "start": "943680",
    "end": "949120"
  },
  {
    "text": "resources and if it's not specified then it'll just apply it'll create a customized with all of those resources",
    "start": "949120",
    "end": "954160"
  },
  {
    "text": "that are in that file path um the helm controller it does the",
    "start": "954160",
    "end": "959839"
  },
  {
    "text": "deployment of helm charts um basically it allows someone to",
    "start": "959839",
    "end": "965040"
  },
  {
    "text": "declaratively manage helm chart releases with kubernetes manifests the notification controller does",
    "start": "965040",
    "end": "971519"
  },
  {
    "text": "notification dispatch it specializes in handling inbound and outbound events",
    "start": "971519",
    "end": "977519"
  },
  {
    "text": "the um image reflector controller and the image automation controller",
    "start": "977519",
    "end": "983279"
  },
  {
    "text": "they basically work together to make sure that um if there's an image that's",
    "start": "983279",
    "end": "988720"
  },
  {
    "text": "uh a new container image that's available it'll actually update your git",
    "start": "988720",
    "end": "994399"
  },
  {
    "text": "repository so basically they work together in in tandem and and all the controllers also work",
    "start": "994399",
    "end": "1000560"
  },
  {
    "text": "together to produce an outcome as you could tell like the customized controller obviously applies the",
    "start": "1000560",
    "end": "1006639"
  },
  {
    "text": "manifest that the source controller pulls along with what the helm controller also",
    "start": "1006639",
    "end": "1011680"
  },
  {
    "text": "does something similar so they all really work together and that's the beauty of this microservice",
    "start": "1011680",
    "end": "1016800"
  },
  {
    "text": "architecture so i want to mention",
    "start": "1016800",
    "end": "1022240"
  },
  {
    "text": "that flux works really well with other tools i know i mentioned like a couple of them briefly before in one of the",
    "start": "1022240",
    "end": "1027438"
  },
  {
    "text": "statements but i wanna really highlight that it works with so many existing tools",
    "start": "1027439",
    "end": "1032959"
  },
  {
    "text": "um yeah i'm not gonna list them all because it's really a lot but but it really does uh fit very well into your",
    "start": "1032959",
    "end": "1039280"
  },
  {
    "text": "probably your already existing environment which is really great and i wanted to hit on a few reasons why",
    "start": "1039280",
    "end": "1045678"
  },
  {
    "text": "i and and others um really love flux it just makes life so much easier it's",
    "start": "1045679",
    "end": "1052400"
  },
  {
    "text": "all this automation um and it's it's really simple to use it really is just like drop in and then it",
    "start": "1052400",
    "end": "1058400"
  },
  {
    "text": "does what it says it does um and then multi-tenancy is really simple with it as well i from experience have actually set up",
    "start": "1058400",
    "end": "1065840"
  },
  {
    "text": "multi-tenancy with flux and it's it's um it's pretty easy and relatively simple to use",
    "start": "1065840",
    "end": "1071919"
  },
  {
    "text": "um i mentioned depends on earlier which is a really great feature if you do have um",
    "start": "1071919",
    "end": "1077360"
  },
  {
    "text": "things that need to be deployed in a certain order um helm integration is fantastic with",
    "start": "1077360",
    "end": "1083200"
  },
  {
    "text": "flux it's it's really it it's really great um if you are using helm it's a",
    "start": "1083200",
    "end": "1088960"
  },
  {
    "text": "natural um extension that you can just utilize with your current helm deployments",
    "start": "1088960",
    "end": "1094720"
  },
  {
    "text": "the notifications and alerting is really simple to use with flux as well um bootstrap which i will be showing in",
    "start": "1094720",
    "end": "1101679"
  },
  {
    "text": "my demo is a really easy way to get started with flux which is a really neat thing and",
    "start": "1101679",
    "end": "1106720"
  },
  {
    "text": "then that kind of leads me to the flux cli which i think is fantastic i will be showing it in my demo but i really it is",
    "start": "1106720",
    "end": "1113039"
  },
  {
    "text": "one of my favorite clies that i've ever used because it's so um user friendly and i will be showing that as well",
    "start": "1113039",
    "end": "1120559"
  },
  {
    "text": "and then um these are some things i want to leave with before i get to my demo um",
    "start": "1121679",
    "end": "1127440"
  },
  {
    "text": "you know to get started with get ops you can try flux using our getting started guide um and then we have really great docs",
    "start": "1127440",
    "end": "1134240"
  },
  {
    "text": "you can join our cncf slack community um at hashtag flux you can catch us there",
    "start": "1134240",
    "end": "1139520"
  },
  {
    "text": "if you have any questions or need any help with anything you can also sign up for our mailing list for monthly updates announcements",
    "start": "1139520",
    "end": "1146080"
  },
  {
    "text": "um so on and then you can um go star us on github you can catch the the flux repository",
    "start": "1146080",
    "end": "1153600"
  },
  {
    "text": "here and you can also join the conversation in github discussions",
    "start": "1153600",
    "end": "1159880"
  },
  {
    "text": "so i am going to be doing a brief walkthrough of utilizing the fluxialide to bootstrap in a cluster to set up flux",
    "start": "1169200",
    "end": "1177039"
  },
  {
    "text": "using bootstrap is a really quick and easy way to get up and running with flux um and then i'm going to show you how to",
    "start": "1177039",
    "end": "1183120"
  },
  {
    "text": "create a new tenant using the cli and basically this will create you a new name space a service account and role",
    "start": "1183120",
    "end": "1188559"
  },
  {
    "text": "binding and then um the last thing i'm going to do is i'm going to show you how to create a new source and a customization sync to actually set up",
    "start": "1188559",
    "end": "1195360"
  },
  {
    "text": "continuous reconciliation with a separate project repository um i want to",
    "start": "1195360",
    "end": "1200480"
  },
  {
    "text": "note that i am basically going to be showing a really really brief example of utilizing soft tendency",
    "start": "1200480",
    "end": "1207039"
  },
  {
    "text": "which is where you have a cluster and multiple name spaces as opposed to hard tendency which is where you would have",
    "start": "1207039",
    "end": "1212799"
  },
  {
    "text": "multiple clusters for your teams or uses however i just want to note that flux can also do hard tendency and there are",
    "start": "1212799",
    "end": "1220159"
  },
  {
    "text": "really great resources online for that um but my own personal experiences with more",
    "start": "1220159",
    "end": "1225840"
  },
  {
    "text": "limited to soft tendency where each team was given a name space for their app",
    "start": "1225840",
    "end": "1231039"
  },
  {
    "text": "deployments and so as you can see here on my screen um flux the flux demo repo does not",
    "start": "1231039",
    "end": "1237120"
  },
  {
    "text": "exist yet um and so",
    "start": "1237120",
    "end": "1242320"
  },
  {
    "text": "we are going to actually be bootstrapping and then that will actually create that repo for us and i just want to start by saying that",
    "start": "1242320",
    "end": "1248559"
  },
  {
    "text": "the flux cli is a fantastic resource if you are new to using flux i'm going to show you an example of how",
    "start": "1248559",
    "end": "1254799"
  },
  {
    "text": "you can use it if you're stuck basically i'm just going to run flux bootstrap github dash h and this is going to pull",
    "start": "1254799",
    "end": "1263280"
  },
  {
    "text": "up the help command um and as you can see here at the top it actually gives you",
    "start": "1263280",
    "end": "1269280"
  },
  {
    "text": "um a little snippet of what the bootstrap will do and in this case it says the blocks the bootstrap command um",
    "start": "1269280",
    "end": "1276559"
  },
  {
    "text": "creates the github repository if it doesn't exist and then it actually commits the toolkit component manifest back to the main",
    "start": "1276559",
    "end": "1282880"
  },
  {
    "text": "branch and then it also configures the target cluster to synchronize with the repository so it's going to be basically",
    "start": "1282880",
    "end": "1288799"
  },
  {
    "text": "setting up flux to be continuously reconciling on itself um and then also if the toolkit",
    "start": "1288799",
    "end": "1294720"
  },
  {
    "text": "components are present on the cluster the bootstrap command will perform an upgrade if needed which is really really",
    "start": "1294720",
    "end": "1300320"
  },
  {
    "text": "neat and super powerful because if there's a new version of flux that's already been released then all you have to do is just",
    "start": "1300320",
    "end": "1307280"
  },
  {
    "text": "rerun the bootstrap command and it's it's not disruptive at all and it will just actually update all of those",
    "start": "1307280",
    "end": "1313200"
  },
  {
    "text": "components which is really cool and then it also gives you some examples on how to actually use the command so",
    "start": "1313200",
    "end": "1319600"
  },
  {
    "text": "you can really just like copy and paste one of these and then just like you know add in like the info you need and it",
    "start": "1319600",
    "end": "1325360"
  },
  {
    "text": "will just work which is really neat and then it gives you a list of all the flags and it's not just for bootstrap by",
    "start": "1325360",
    "end": "1330559"
  },
  {
    "text": "the way you can do this with any flux command which is why i really love this cli it's very very user friendly it's",
    "start": "1330559",
    "end": "1337280"
  },
  {
    "text": "really neat to use so um as you can see here i am running a flux bootstrap command and what this is",
    "start": "1337280",
    "end": "1344720"
  },
  {
    "text": "telling it to do is create this flux demo repository a private repository and then it's also telling it to",
    "start": "1344720",
    "end": "1350960"
  },
  {
    "text": "specifically listen on this um path called clusters my cluster so it's not",
    "start": "1350960",
    "end": "1356720"
  },
  {
    "text": "just going to be blindly applying anything that's in this repo it's gonna be specifically applying things that are",
    "start": "1356720",
    "end": "1362559"
  },
  {
    "text": "within that actual path um and then as you can see here on the",
    "start": "1362559",
    "end": "1367919"
  },
  {
    "text": "right side um you can see that the components are up and running so these are the different controllers that i",
    "start": "1367919",
    "end": "1373520"
  },
  {
    "text": "mentioned earlier if you do notice here though there are a couple of controllers missing so",
    "start": "1373520",
    "end": "1379520"
  },
  {
    "text": "bootstrapping actually doesn't come with the image controllers by default um",
    "start": "1379520",
    "end": "1384559"
  },
  {
    "text": "if you do want it there is an additional flag you can add on after you've bootstrapped you can run the bootstrap",
    "start": "1384559",
    "end": "1389600"
  },
  {
    "text": "command again with that additional flag and it will also create those image controllers as well for you",
    "start": "1389600",
    "end": "1396880"
  },
  {
    "text": "but yeah you can see it was very simple to get up and running and after that you can come back to this repo and now we",
    "start": "1396880",
    "end": "1403679"
  },
  {
    "text": "see that it exists and it pushed back those manifest like it said it would so um",
    "start": "1403679",
    "end": "1409600"
  },
  {
    "text": "we can see that there's this customization.yaml in here and i just want to reiterate i know",
    "start": "1409600",
    "end": "1415200"
  },
  {
    "text": "there's a lot of confusion with the names but this is what i was talking about earlier when i mentioned a kubernetes customization so this yaml",
    "start": "1415200",
    "end": "1422799"
  },
  {
    "text": "obviously tells it to apply these resources and like i mentioned earlier the customization controller is so named",
    "start": "1422799",
    "end": "1429279"
  },
  {
    "text": "because it in the background actually creates this yaml as well if it's not already there but",
    "start": "1429279",
    "end": "1435120"
  },
  {
    "text": "if for some reason you want to limit the resources or you want to add patching or things like that you can still utilize",
    "start": "1435120",
    "end": "1441360"
  },
  {
    "text": "kubernetes customization as well it will work with your um current setup if you are utilizing customization",
    "start": "1441360",
    "end": "1448240"
  },
  {
    "text": "already but as you can see here there are two resources that we are telling it to apply the geotk components.yaml and",
    "start": "1448240",
    "end": "1455840"
  },
  {
    "text": "the gotk sync so the gotk components yemo actually creates the flux system",
    "start": "1455840",
    "end": "1461440"
  },
  {
    "text": "namespace as you can see and then it also creates um custom resource definitions that are necessary for flux",
    "start": "1461440",
    "end": "1467760"
  },
  {
    "text": "to work along with in this file you'll also find all of the components um the controllers",
    "start": "1467760",
    "end": "1473200"
  },
  {
    "text": "all um uh declared in here as well so this is where all of those are stood up",
    "start": "1473200",
    "end": "1478559"
  },
  {
    "text": "and then the geotk sync yaml actually has our um source and our",
    "start": "1478559",
    "end": "1483760"
  },
  {
    "text": "customize that are created so the first one you see here is the get repository source and it's actually pointing to",
    "start": "1483760",
    "end": "1490480"
  },
  {
    "text": "this this repo that we're already currently in so that flex demo repo",
    "start": "1490480",
    "end": "1495600"
  },
  {
    "text": "and it is um telling it to listen on a one minute interval and so that what that means is",
    "start": "1495600",
    "end": "1502400"
  },
  {
    "text": "every minute uh this source controller will actually come check this repository and pull in those",
    "start": "1502400",
    "end": "1508480"
  },
  {
    "text": "artifacts and then uh here you can also see this customization which is actually pointing back to that",
    "start": "1508480",
    "end": "1515120"
  },
  {
    "text": "same source rep that was just created above and then um it is specifically pulling",
    "start": "1515120",
    "end": "1520880"
  },
  {
    "text": "in this case on a 10 minute interval so every 10 minutes it will actually",
    "start": "1520880",
    "end": "1526000"
  },
  {
    "text": "take those artifacts and apply them and then it is also listening like we told it to you on that specific my cluster",
    "start": "1526000",
    "end": "1532640"
  },
  {
    "text": "path so only that that path will be applied only artifacts found manifest found in that",
    "start": "1532640",
    "end": "1538320"
  },
  {
    "text": "um path will be applied and then if we go back um",
    "start": "1538320",
    "end": "1546000"
  },
  {
    "text": "i am going to actually clone that repo so that um",
    "start": "1546000",
    "end": "1552480"
  },
  {
    "text": "we can actually add a new tenant and push the changes to that repo",
    "start": "1552480",
    "end": "1558720"
  },
  {
    "text": "and so we're gonna change into that",
    "start": "1558720",
    "end": "1562320"
  },
  {
    "text": "and then um so this is actually that additional repo that i was talking about that project repo",
    "start": "1566480",
    "end": "1572640"
  },
  {
    "text": "um it's very simple application that we like to use for our um examples it's",
    "start": "1572640",
    "end": "1577919"
  },
  {
    "text": "just a ui that's going to be created it has a little simple back end of front end and it's just a few yamls um in each",
    "start": "1577919",
    "end": "1584240"
  },
  {
    "text": "and so we're going to be creating basically a tenant that's then going to have a sink pointing to that repo that",
    "start": "1584240",
    "end": "1590880"
  },
  {
    "text": "additional repo so now we're going to create the tenant and um",
    "start": "1590880",
    "end": "1596720"
  },
  {
    "text": "we're going to use the flux cli to do so um",
    "start": "1596720",
    "end": "1602240"
  },
  {
    "text": "you can also uh there's there's two ways to do this you could uh um yeah so first we're actually going to",
    "start": "1602240",
    "end": "1608080"
  },
  {
    "text": "create the directory for this new um tenant to live in um to be pushed into",
    "start": "1608080",
    "end": "1614480"
  },
  {
    "text": "and then we're going to run this flex create tenant command so i've added this dash dash export command so that it will",
    "start": "1614480",
    "end": "1620400"
  },
  {
    "text": "actually export it into this rbac.yaml but if you left that out it would actually create the tenant but again we",
    "start": "1620400",
    "end": "1626080"
  },
  {
    "text": "want to do everything declaratively so we want to actually push this up so what this is doing is it creates that",
    "start": "1626080",
    "end": "1631520"
  },
  {
    "text": "namespace and then it creates this service account um called test and then along with that",
    "start": "1631520",
    "end": "1638880"
  },
  {
    "text": "it creates this role binding that then um binds the service account and the cluster role to this um to the needed uh",
    "start": "1638880",
    "end": "1645840"
  },
  {
    "text": "i mean sorry the user reconciler and the service account test to this needed cluster rule",
    "start": "1645840",
    "end": "1651600"
  },
  {
    "text": "so now we are going to actually push this up to the um flux demo repo in that new",
    "start": "1651600",
    "end": "1659039"
  },
  {
    "text": "folder that we just created called test and so um if we go back and look at that",
    "start": "1659039",
    "end": "1665520"
  },
  {
    "text": "repo we will be able to see that in there now so yeah as you can see now there's a",
    "start": "1665520",
    "end": "1670640"
  },
  {
    "text": "test with that our back file that we just created so now we have to go tell",
    "start": "1670640",
    "end": "1676480"
  },
  {
    "text": "um because the sync interval that we set on this one is 10 minutes so the customization controller is going to",
    "start": "1676480",
    "end": "1682720"
  },
  {
    "text": "take 10 minutes to actually pick this up on its own we're going to take advantage of something called flux reconcile so",
    "start": "1682720",
    "end": "1689600"
  },
  {
    "text": "this is actually going to tell the um the controllers to actually go pull it and",
    "start": "1689600",
    "end": "1695200"
  },
  {
    "text": "so one key thing here is that you could actually have run flux reconcile source",
    "start": "1695200",
    "end": "1700720"
  },
  {
    "text": "git um and the flux system itself first and then run the flux reconcile ks flux system but adding that",
    "start": "1700720",
    "end": "1708559"
  },
  {
    "text": "flux reconcile ks flux system and then that flag dash dash with source actually bypasses the need for that it basically",
    "start": "1708559",
    "end": "1714960"
  },
  {
    "text": "first reconciles the source and then the customization so i really love that command it's just something i wanted to point out makes life a little easier",
    "start": "1714960",
    "end": "1721360"
  },
  {
    "text": "because then you have to wait for two commands um and then as you can see here when i when i run cube control get namespace",
    "start": "1721360",
    "end": "1729120"
  },
  {
    "text": "um you can actually see that now the test namespace has been created as of 17",
    "start": "1729120",
    "end": "1734559"
  },
  {
    "text": "seconds ago which is awesome so when that was reconciled it did stand up the new name space for us",
    "start": "1734559",
    "end": "1740720"
  },
  {
    "text": "and then now we are going to actually create yeah",
    "start": "1740720",
    "end": "1745760"
  },
  {
    "text": "so as you can see here the two um the commit actually does match up with the one that",
    "start": "1745760",
    "end": "1750799"
  },
  {
    "text": "is in there so that's a good way to actually check that like if something if you notice something's not um you know in there then you can check",
    "start": "1750799",
    "end": "1757039"
  },
  {
    "text": "with the last commit that was pulled by it was so now we are going to um",
    "start": "1757039",
    "end": "1764480"
  },
  {
    "text": "set up a sync for that pod info deploy app so we're going to set up a source and then a customization as well",
    "start": "1764480",
    "end": "1770799"
  },
  {
    "text": "to actually listen to that other repo so that we can deploy that application in our new test",
    "start": "1770799",
    "end": "1776960"
  },
  {
    "text": "tenant so here is a flux create source get command",
    "start": "1776960",
    "end": "1782240"
  },
  {
    "text": "and so basically we're just saying hey create this in the namespace test and um",
    "start": "1782240",
    "end": "1787440"
  },
  {
    "text": "we're giving it the url for that that repo i showed and we're telling it to export it into",
    "start": "1787440",
    "end": "1793520"
  },
  {
    "text": "this new sync.yaml within the same tenant folder",
    "start": "1793520",
    "end": "1798640"
  },
  {
    "text": "and then we're going to do something similar for customization we're going to tell it to create a customization in",
    "start": "1798640",
    "end": "1804799"
  },
  {
    "text": "that namespace and we're going to point it to that source that we just created right above and we're telling it to the path is just",
    "start": "1804799",
    "end": "1812000"
  },
  {
    "text": "whatever's in that repository we want everything to be applied and we're exporting it to the same file so",
    "start": "1812000",
    "end": "1817520"
  },
  {
    "text": "now if we cap that file we'll see that there are both of these components so exactly what we kind of looked at before",
    "start": "1817520",
    "end": "1823120"
  },
  {
    "text": "you know with the other source and customization but now we're telling it to create it for this pod info deploy",
    "start": "1823120",
    "end": "1828640"
  },
  {
    "text": "app and so we're going to push these changes as well into our flex demo",
    "start": "1828640",
    "end": "1834640"
  },
  {
    "text": "repository under our test tenant folder and so once that's pushed",
    "start": "1834640",
    "end": "1841600"
  },
  {
    "text": "we can go back and make sure that that's there",
    "start": "1841600",
    "end": "1845759"
  },
  {
    "text": "let's let's make sure it's been um pushed there it is our sync.yaml with",
    "start": "1847600",
    "end": "1854320"
  },
  {
    "text": "everything that we told it to do and so now we're gonna again because that interval is a 10 minute sync um we",
    "start": "1854320",
    "end": "1861919"
  },
  {
    "text": "are going to go in and actually run that reconcile command again to get it to speed things up",
    "start": "1861919",
    "end": "1870080"
  },
  {
    "text": "and um once we do that we should be able to see",
    "start": "1870080",
    "end": "1875200"
  },
  {
    "text": "that um that the the changes are made",
    "start": "1875200",
    "end": "1882000"
  },
  {
    "text": "so now we can actually do a flux get source get um and then the dash a flag is to",
    "start": "1884720",
    "end": "1890880"
  },
  {
    "text": "get all the sources that are out there and we can see that now there is a test um in in the test name space there is a new",
    "start": "1890880",
    "end": "1898159"
  },
  {
    "text": "source called pod info and same thing with the customization we can see that now there is a customization and we can",
    "start": "1898159",
    "end": "1904080"
  },
  {
    "text": "also see that it successfully applied if it was unsuccessful we'd see an error message where the message is",
    "start": "1904080",
    "end": "1910960"
  },
  {
    "text": "and so now we can actually go get the pods and test and we can see that both are up and running just like that",
    "start": "1910960",
    "end": "1917840"
  },
  {
    "text": "customization message told us that it was applied and so",
    "start": "1917840",
    "end": "1922960"
  },
  {
    "text": "after this um we can actually um port forward it and make sure that the",
    "start": "1922960",
    "end": "1928720"
  },
  {
    "text": "app was successfully deployed which it was and then um now basically",
    "start": "1928720",
    "end": "1936480"
  },
  {
    "text": "we're going to just make a little tweak to the um the uh pod info deploy app so that we",
    "start": "1936480",
    "end": "1944799"
  },
  {
    "text": "can actually see flux in action pick up a change and actually apply it",
    "start": "1944799",
    "end": "1950159"
  },
  {
    "text": "um and so i've already cloned that repo and we're just going to make a small change in the ui color so you can see",
    "start": "1950159",
    "end": "1956640"
  },
  {
    "text": "here there's an environment variable that controls that pod info ui color and we're just going to change that value",
    "start": "1956640",
    "end": "1963039"
  },
  {
    "text": "and um we'll push this change and um once this is pushed then we'll let flux",
    "start": "1963039",
    "end": "1970799"
  },
  {
    "text": "actually pick it up and make that actually restart the pod with those",
    "start": "1970799",
    "end": "1976880"
  },
  {
    "text": "changes",
    "start": "1976880",
    "end": "1979279"
  },
  {
    "text": "so now if we give it a little bit i'm actually because this customization only had a one minute interval we can",
    "start": "1988960",
    "end": "1995519"
  },
  {
    "text": "actually wait for it and let it do its thing and as you can see it's already um recreated the container",
    "start": "1995519",
    "end": "2001840"
  },
  {
    "text": "and it is um almost up and running just give it another second yeah there",
    "start": "2001840",
    "end": "2007679"
  },
  {
    "text": "it is so it's already restarted it on its own we didn't do a record style in this case but it did it on its own",
    "start": "2007679",
    "end": "2013679"
  },
  {
    "text": "and then um if we give it a second",
    "start": "2013679",
    "end": "2019158"
  },
  {
    "text": "i did have to actually restart the um port forwarding so that was on me",
    "start": "2019679",
    "end": "2025279"
  },
  {
    "text": "um and then yeah there it is so the background has been changed to the color that we told",
    "start": "2025279",
    "end": "2030399"
  },
  {
    "text": "it to so that did it all on its own that's the magic of flux that's what makes it really um amazing is that it",
    "start": "2030399",
    "end": "2036399"
  },
  {
    "text": "just like continuously is picking up those changes and then um",
    "start": "2036399",
    "end": "2041600"
  },
  {
    "text": "what happens when a bad actor comes along and actually makes a change that you didn't um want them to so if someone",
    "start": "2041600",
    "end": "2048960"
  },
  {
    "text": "comes along and makes a manual change or something happens and configuration drift um does happen so what you",
    "start": "2048960",
    "end": "2054560"
  },
  {
    "text": "actually desired is suddenly not the state that's out there it will it will take care of you in that",
    "start": "2054560",
    "end": "2060878"
  },
  {
    "text": "case too so i'm going to show you that by actually deleting the deployment for the front end",
    "start": "2060879",
    "end": "2066240"
  },
  {
    "text": "i'm going to completely delete it manually um by running a cube control uh delete",
    "start": "2066240",
    "end": "2073200"
  },
  {
    "text": "and so once i do that you'll see um that flux will actually reapply it so",
    "start": "2073200",
    "end": "2079440"
  },
  {
    "text": "running a cube control delete deployment it is gone you can see it's terminating and then i'm actually going to reconcile",
    "start": "2079440",
    "end": "2086960"
  },
  {
    "text": "it in this case so we don't have to wait that minute and there you can see it's already back up and running it's already",
    "start": "2086960",
    "end": "2092720"
  },
  {
    "text": "standing itself back up and if we give it another second it will be successfully running",
    "start": "2092720",
    "end": "2098320"
  },
  {
    "text": "and that is really the um the main things i just wanted to hit on and uh",
    "start": "2098320",
    "end": "2105040"
  },
  {
    "text": "yeah it's it's uh that those were the features i really wanted to show and there's so much more",
    "start": "2105040",
    "end": "2110480"
  },
  {
    "text": "that flux can do but um this was just a little taste of the the real cool features of plugs so",
    "start": "2110480",
    "end": "2118720"
  },
  {
    "text": "so that wraps up the demo portion where i showed you how to get started with",
    "start": "2118720",
    "end": "2124079"
  },
  {
    "text": "bootstrap um and how easy it is to get started with flux with that and then also how to create a tenant and then how",
    "start": "2124079",
    "end": "2131200"
  },
  {
    "text": "to create a source and customization to point to a different repo um and i",
    "start": "2131200",
    "end": "2136560"
  },
  {
    "text": "really hope that this was an informative demo and it really showed you how truly easy it is to get started using flux",
    "start": "2136560",
    "end": "2143280"
  },
  {
    "text": "and if you are interested in using it please check out we have more information at fluxcd.io",
    "start": "2143280",
    "end": "2148640"
  },
  {
    "text": "and if you have any questions for us please reach out on the hashtag fluxchannel on the cncf slack",
    "start": "2148640",
    "end": "2156960"
  }
]