[
  {
    "text": "hello everyone uh thank you for coming",
    "start": "400",
    "end": "3040"
  },
  {
    "text": "to our talk uh don't let your cubernetes",
    "start": "3040",
    "end": "5600"
  },
  {
    "text": "cluster go wild ensuring at city",
    "start": "5600",
    "end": "8120"
  },
  {
    "text": "reliability so if you're an end user or",
    "start": "8120",
    "end": "10880"
  },
  {
    "text": "a direct customer of ATC or indirectly",
    "start": "10880",
    "end": "13519"
  },
  {
    "text": "using ATC as one of your Kubernetes",
    "start": "13519",
    "end": "15440"
  },
  {
    "text": "distribution this is the right place for",
    "start": "15440",
    "end": "17160"
  },
  {
    "text": "you uh so a little about ourselves uh",
    "start": "17160",
    "end": "20400"
  },
  {
    "text": "I'm Oro Shaha a software engineer VMware",
    "start": "20400",
    "end": "23279"
  },
  {
    "text": "by Broadcom currently contributing to",
    "start": "23279",
    "end": "25439"
  },
  {
    "text": "ATCD and also responsible for downstream",
    "start": "25439",
    "end": "28400"
  },
  {
    "text": "releases of ATC and Kubernetes i'm Henry",
    "start": "28400",
    "end": "31679"
  },
  {
    "text": "i'm a software engineer at Google and I",
    "start": "31679",
    "end": "33760"
  },
  {
    "text": "also contribute to ATCD",
    "start": "33760",
    "end": "37440"
  },
  {
    "text": "so before we start we would like to",
    "start": "37440",
    "end": "39280"
  },
  {
    "text": "extend our sincere thanks to Benjamin",
    "start": "39280",
    "end": "41680"
  },
  {
    "text": "Marik uh for laying the foundation and",
    "start": "41680",
    "end": "44800"
  },
  {
    "text": "maintaining the CD and its uh testing",
    "start": "44800",
    "end": "47520"
  },
  {
    "text": "framework as well as supporting this",
    "start": "47520",
    "end": "49680"
  },
  {
    "text": "talk with their invaluable knowledge",
    "start": "49680",
    "end": "53879"
  },
  {
    "text": "uh so in this session we will introduce",
    "start": "54399",
    "end": "56800"
  },
  {
    "text": "what a distributed key value store is",
    "start": "56800",
    "end": "59680"
  },
  {
    "text": "the design principles of the robustness",
    "start": "59680",
    "end": "62239"
  },
  {
    "text": "test and the deep dive of it and finally",
    "start": "62239",
    "end": "65439"
  },
  {
    "text": "we are going to demo on how to run a",
    "start": "65439",
    "end": "68400"
  },
  {
    "text": "robustness",
    "start": "68400",
    "end": "70280"
  },
  {
    "text": "test a good reference of handling the",
    "start": "70280",
    "end": "72960"
  },
  {
    "text": "data cons inconsistencies in ATCD uh via",
    "start": "72960",
    "end": "76799"
  },
  {
    "text": "robustness test framework has been",
    "start": "76799",
    "end": "78240"
  },
  {
    "text": "covered by Marik around two years ago",
    "start": "78240",
    "end": "81119"
  },
  {
    "text": "when it was designed and implemented uh",
    "start": "81119",
    "end": "83119"
  },
  {
    "text": "you can refer to that also if you are",
    "start": "83119",
    "end": "85680"
  },
  {
    "text": "looking for a beginner friendly primer",
    "start": "85680",
    "end": "87520"
  },
  {
    "text": "of what robustness test is and how you",
    "start": "87520",
    "end": "90080"
  },
  {
    "text": "can use it too you can refer to our talk",
    "start": "90080",
    "end": "92320"
  },
  {
    "text": "from last year in OSS Japan uh with that",
    "start": "92320",
    "end": "96240"
  },
  {
    "text": "over to Henry for more about HCD and its",
    "start": "96240",
    "end": "98880"
  },
  {
    "text": "constraints",
    "start": "98880",
    "end": "101360"
  },
  {
    "text": "so let's have a quick intro on",
    "start": "101360",
    "end": "103439"
  },
  {
    "text": "distributed key value",
    "start": "103439",
    "end": "105240"
  },
  {
    "text": "store so Etsy ensures strict",
    "start": "105240",
    "end": "109079"
  },
  {
    "text": "serializability but what does that",
    "start": "109079",
    "end": "111040"
  },
  {
    "text": "actually mean so let's take a step back",
    "start": "111040",
    "end": "113600"
  },
  {
    "text": "and think about what uh correctness",
    "start": "113600",
    "end": "116159"
  },
  {
    "text": "actually is so let's say we have two",
    "start": "116159",
    "end": "118799"
  },
  {
    "text": "operations we have put a equals to two",
    "start": "118799",
    "end": "121840"
  },
  {
    "text": "and we have a get a out of the key value",
    "start": "121840",
    "end": "124320"
  },
  {
    "text": "store and we execute them sequentially",
    "start": "124320",
    "end": "127280"
  },
  {
    "text": "so intuitively we would expect that the",
    "start": "127280",
    "end": "130000"
  },
  {
    "text": "get result would be the value that we",
    "start": "130000",
    "end": "132959"
  },
  {
    "text": "did the put with the last one that we",
    "start": "132959",
    "end": "134800"
  },
  {
    "text": "put",
    "start": "134800",
    "end": "135480"
  },
  {
    "text": "in so that's how intuitively we think of",
    "start": "135480",
    "end": "138720"
  },
  {
    "text": "how the value will be getting out of the",
    "start": "138720",
    "end": "140319"
  },
  {
    "text": "key value store right but if the thing",
    "start": "140319",
    "end": "142160"
  },
  {
    "text": "if the requests are actually overlapping",
    "start": "142160",
    "end": "145120"
  },
  {
    "text": "like when they're being executed",
    "start": "145120",
    "end": "147080"
  },
  {
    "text": "concurrently how would you define the",
    "start": "147080",
    "end": "150040"
  },
  {
    "text": "correctness so before that let's discuss",
    "start": "150040",
    "end": "152640"
  },
  {
    "text": "the representation that we'll be using",
    "start": "152640",
    "end": "154000"
  },
  {
    "text": "throughout the the site deck um on how",
    "start": "154000",
    "end": "156640"
  },
  {
    "text": "we represent the operation history so on",
    "start": "156640",
    "end": "159760"
  },
  {
    "text": "the left you can see that we have",
    "start": "159760",
    "end": "162879"
  },
  {
    "text": "clients zero and one so we have two",
    "start": "162879",
    "end": "164400"
  },
  {
    "text": "clients in this in this graph and each",
    "start": "164400",
    "end": "166160"
  },
  {
    "text": "of the client they can only execute one",
    "start": "166160",
    "end": "168160"
  },
  {
    "text": "thing at a time so if there's a request",
    "start": "168160",
    "end": "170160"
  },
  {
    "text": "in flight we cannot uh send another",
    "start": "170160",
    "end": "172480"
  },
  {
    "text": "request for that very client in the same",
    "start": "172480",
    "end": "175200"
  },
  {
    "text": "time and for each of the rectangular box",
    "start": "175200",
    "end": "178000"
  },
  {
    "text": "on the left edge it's the time that the",
    "start": "178000",
    "end": "180800"
  },
  {
    "text": "client sent out the request on the right",
    "start": "180800",
    "end": "182879"
  },
  {
    "text": "edge it's actually the time that a",
    "start": "182879",
    "end": "184400"
  },
  {
    "text": "response is received for that client and",
    "start": "184400",
    "end": "187840"
  },
  {
    "text": "the blue line is the instance that the",
    "start": "187840",
    "end": "190080"
  },
  {
    "text": "operation is",
    "start": "190080",
    "end": "192040"
  },
  {
    "text": "applied so coming back to the question",
    "start": "192040",
    "end": "194480"
  },
  {
    "text": "so what if the requests happen",
    "start": "194480",
    "end": "195760"
  },
  {
    "text": "concurrently for example consider above",
    "start": "195760",
    "end": "198159"
  },
  {
    "text": "case where we have one put request and",
    "start": "198159",
    "end": "201360"
  },
  {
    "text": "two get request running concurrently",
    "start": "201360",
    "end": "204319"
  },
  {
    "text": "uh as you can see interestingly um",
    "start": "204319",
    "end": "207120"
  },
  {
    "text": "client one get a actually returned",
    "start": "207120",
    "end": "209440"
  },
  {
    "text": "result one get client two actually had",
    "start": "209440",
    "end": "211760"
  },
  {
    "text": "the result two so is this a valid case",
    "start": "211760",
    "end": "215280"
  },
  {
    "text": "depending on the consistent consistency",
    "start": "215280",
    "end": "217360"
  },
  {
    "text": "model uh we can have different answers",
    "start": "217360",
    "end": "219280"
  },
  {
    "text": "but in ETS's case because we're using",
    "start": "219280",
    "end": "221720"
  },
  {
    "text": "strictizability this means that the",
    "start": "221720",
    "end": "223360"
  },
  {
    "text": "operation appear to have occurred in",
    "start": "223360",
    "end": "225040"
  },
  {
    "text": "some order consistent with the real-time",
    "start": "225040",
    "end": "226720"
  },
  {
    "text": "ordering of those operation so in a",
    "start": "226720",
    "end": "228799"
  },
  {
    "text": "sense coming back to the example before",
    "start": "228799",
    "end": "230640"
  },
  {
    "text": "it means that if we can find a set of",
    "start": "230640",
    "end": "232480"
  },
  {
    "text": "linearization points for all the",
    "start": "232480",
    "end": "234200"
  },
  {
    "text": "operations then we can say that the",
    "start": "234200",
    "end": "236640"
  },
  {
    "text": "operation are correct under the",
    "start": "236640",
    "end": "238560"
  },
  {
    "text": "consistency model that we're using so in",
    "start": "238560",
    "end": "240480"
  },
  {
    "text": "this case if we actually do it uh if we",
    "start": "240480",
    "end": "243680"
  },
  {
    "text": "assign the points that we have client",
    "start": "243680",
    "end": "246319"
  },
  {
    "text": "one's get a goes through first then",
    "start": "246319",
    "end": "248080"
  },
  {
    "text": "client zero's put goes through and",
    "start": "248080",
    "end": "249920"
  },
  {
    "text": "client two's get goes through then this",
    "start": "249920",
    "end": "253599"
  },
  {
    "text": "is a valid history so let's hand it back",
    "start": "253599",
    "end": "256400"
  },
  {
    "text": "to Ara and see how actually ATCD work",
    "start": "256400",
    "end": "259120"
  },
  {
    "text": "under this uh model",
    "start": "259120",
    "end": "261840"
  },
  {
    "text": "thanks Henry uh so here we have a",
    "start": "261840",
    "end": "264160"
  },
  {
    "text": "diagram that illustrates anc cluster",
    "start": "264160",
    "end": "266479"
  },
  {
    "text": "consists of three members three clients",
    "start": "266479",
    "end": "269040"
  },
  {
    "text": "making concurrent requests to each of",
    "start": "269040",
    "end": "271040"
  },
  {
    "text": "those members uh as we see client zero",
    "start": "271040",
    "end": "274560"
  },
  {
    "text": "has made a put request and even before",
    "start": "274560",
    "end": "276639"
  },
  {
    "text": "the response uh is received client one",
    "start": "276639",
    "end": "279360"
  },
  {
    "text": "has made a uh get request as Henry",
    "start": "279360",
    "end": "282639"
  },
  {
    "text": "mentioned before this is a typical case",
    "start": "282639",
    "end": "284720"
  },
  {
    "text": "of overlapping requests and we can also",
    "start": "284720",
    "end": "287120"
  },
  {
    "text": "refer to the timeline graph on the uh",
    "start": "287120",
    "end": "289520"
  },
  {
    "text": "top right hand",
    "start": "289520",
    "end": "291080"
  },
  {
    "text": "side um so what what we see is that the",
    "start": "291080",
    "end": "295120"
  },
  {
    "text": "client the request of client one",
    "start": "295120",
    "end": "297680"
  },
  {
    "text": "overlaps with uh the request of client",
    "start": "297680",
    "end": "299759"
  },
  {
    "text": "zero and the client two overlaps with",
    "start": "299759",
    "end": "302800"
  },
  {
    "text": "the request of client one but at any",
    "start": "302800",
    "end": "304960"
  },
  {
    "text": "point of time we see that the response",
    "start": "304960",
    "end": "308160"
  },
  {
    "text": "of the request from client zero uh has",
    "start": "308160",
    "end": "312240"
  },
  {
    "text": "been completed before the requests from",
    "start": "312240",
    "end": "314479"
  },
  {
    "text": "client one and two are executed which is",
    "start": "314479",
    "end": "317600"
  },
  {
    "text": "like demarcated by the blue line",
    "start": "317600",
    "end": "319840"
  },
  {
    "text": "representing the logical instance of",
    "start": "319840",
    "end": "321680"
  },
  {
    "text": "time when it was actually applied to the",
    "start": "321680",
    "end": "324080"
  },
  {
    "text": "system uh and thus we see cl both client",
    "start": "324080",
    "end": "327120"
  },
  {
    "text": "one and client two get the correct value",
    "start": "327120",
    "end": "328880"
  },
  {
    "text": "with the updated value of a and the most",
    "start": "328880",
    "end": "332080"
  },
  {
    "text": "updated uh",
    "start": "332080",
    "end": "333720"
  },
  {
    "text": "revision in an alternate scenario we can",
    "start": "333720",
    "end": "336560"
  },
  {
    "text": "say uh see like see the client zero make",
    "start": "336560",
    "end": "340320"
  },
  {
    "text": "the same put request and it gets",
    "start": "340320",
    "end": "342320"
  },
  {
    "text": "completed almost instantly so the",
    "start": "342320",
    "end": "344400"
  },
  {
    "text": "response of okay revision equal to 5 is",
    "start": "344400",
    "end": "347600"
  },
  {
    "text": "received at that instant in this",
    "start": "347600",
    "end": "350160"
  },
  {
    "text": "scenario if client one makes a request",
    "start": "350160",
    "end": "353919"
  },
  {
    "text": "uh get request uh and it has been",
    "start": "353919",
    "end": "357280"
  },
  {
    "text": "completed and uh and already client zero",
    "start": "357280",
    "end": "360880"
  },
  {
    "text": "has seen the value of a equal to two uh",
    "start": "360880",
    "end": "365039"
  },
  {
    "text": "client one cannot see the value of uh a",
    "start": "365039",
    "end": "368080"
  },
  {
    "text": "as one and that's what is happening here",
    "start": "368080",
    "end": "370880"
  },
  {
    "text": "uh which is what is breaking the system",
    "start": "370880",
    "end": "373360"
  },
  {
    "text": "and that is what we want to avoid as a",
    "start": "373360",
    "end": "376080"
  },
  {
    "text": "general rule of thumb uh the revision",
    "start": "376080",
    "end": "378720"
  },
  {
    "text": "should only increment and at any point",
    "start": "378720",
    "end": "381120"
  },
  {
    "text": "of time the current revision should",
    "start": "381120",
    "end": "382720"
  },
  {
    "text": "never be less than the previous revision",
    "start": "382720",
    "end": "386000"
  },
  {
    "text": "uh and in this case the client one is uh",
    "start": "386000",
    "end": "389199"
  },
  {
    "text": "seeing a previous revision or a stale",
    "start": "389199",
    "end": "390960"
  },
  {
    "text": "revision which means it's traveling back",
    "start": "390960",
    "end": "393199"
  },
  {
    "text": "in time and that's not allowed",
    "start": "393199",
    "end": "397600"
  },
  {
    "text": "uh with the problem of the revision",
    "start": "397600",
    "end": "399680"
  },
  {
    "text": "going back in time there can be real",
    "start": "399680",
    "end": "401520"
  },
  {
    "text": "world problems like uh network",
    "start": "401520",
    "end": "403759"
  },
  {
    "text": "connection uh errors the network between",
    "start": "403759",
    "end": "406400"
  },
  {
    "text": "the nodes can go down and even in that",
    "start": "406400",
    "end": "409680"
  },
  {
    "text": "scenario the system should not respond",
    "start": "409680",
    "end": "412000"
  },
  {
    "text": "with the stale data and instead it",
    "start": "412000",
    "end": "414000"
  },
  {
    "text": "should catch up with the latest data",
    "start": "414000",
    "end": "416080"
  },
  {
    "text": "that is available on the other nodes",
    "start": "416080",
    "end": "417680"
  },
  {
    "text": "when the connection is reestablished",
    "start": "417680",
    "end": "420240"
  },
  {
    "text": "like that there can be disk problems",
    "start": "420240",
    "end": "422000"
  },
  {
    "text": "either slowness or corruption of the",
    "start": "422000",
    "end": "424960"
  },
  {
    "text": "disk but as long as the majority of the",
    "start": "424960",
    "end": "427280"
  },
  {
    "text": "nodes are active the consistency of the",
    "start": "427280",
    "end": "429919"
  },
  {
    "text": "system needs to be",
    "start": "429919",
    "end": "433160"
  },
  {
    "text": "maintained and there are a whole bunch",
    "start": "433160",
    "end": "436000"
  },
  {
    "text": "of other failures like this like packet",
    "start": "436000",
    "end": "439199"
  },
  {
    "text": "loss clock drift upgrade downgrade",
    "start": "439199",
    "end": "441520"
  },
  {
    "text": "errors and so on and these uh can happen",
    "start": "441520",
    "end": "445280"
  },
  {
    "text": "intermittently at any point of time",
    "start": "445280",
    "end": "447440"
  },
  {
    "text": "which is not in our control and the",
    "start": "447440",
    "end": "449680"
  },
  {
    "text": "nature of these failures being random",
    "start": "449680",
    "end": "451520"
  },
  {
    "text": "and intermittent uh makes it more",
    "start": "451520",
    "end": "453919"
  },
  {
    "text": "difficult to test let alone testing it",
    "start": "453919",
    "end": "456560"
  },
  {
    "text": "again and again every time with every",
    "start": "456560",
    "end": "458720"
  },
  {
    "text": "commit so in order to have a framework",
    "start": "458720",
    "end": "461360"
  },
  {
    "text": "which can reliably reproduce such",
    "start": "461360",
    "end": "463440"
  },
  {
    "text": "scenarios such intermittent scenarios",
    "start": "463440",
    "end": "465840"
  },
  {
    "text": "over and over again with each and every",
    "start": "465840",
    "end": "467599"
  },
  {
    "text": "commit that goes into a release the",
    "start": "467599",
    "end": "469120"
  },
  {
    "text": "robustness test framework was introduced",
    "start": "469120",
    "end": "472240"
  },
  {
    "text": "with this framework we ensure that each",
    "start": "472240",
    "end": "476160"
  },
  {
    "text": "of these failures uh that has happened",
    "start": "476160",
    "end": "478400"
  },
  {
    "text": "in the past can be reproduced reliably",
    "start": "478400",
    "end": "481840"
  },
  {
    "text": "and it is fixed properly and ensure that",
    "start": "481840",
    "end": "484479"
  },
  {
    "text": "in the coming releases it doesn't cause",
    "start": "484479",
    "end": "487199"
  },
  {
    "text": "any",
    "start": "487199",
    "end": "488599"
  },
  {
    "text": "regression so let's quickly see how the",
    "start": "488599",
    "end": "491759"
  },
  {
    "text": "robustness test differ from um",
    "start": "491759",
    "end": "494800"
  },
  {
    "text": "traditional tests like unit test and uh",
    "start": "494800",
    "end": "496879"
  },
  {
    "text": "integration test or fuzzing",
    "start": "496879",
    "end": "499280"
  },
  {
    "text": "so the input for the unit and",
    "start": "499280",
    "end": "501360"
  },
  {
    "text": "integration test is fixed we know what",
    "start": "501360",
    "end": "503680"
  },
  {
    "text": "the input should be and for fuzzing it",
    "start": "503680",
    "end": "507280"
  },
  {
    "text": "is random and it can be garbage values",
    "start": "507280",
    "end": "509599"
  },
  {
    "text": "just to see the um whether system can",
    "start": "509599",
    "end": "512880"
  },
  {
    "text": "hold under such scenarios but for",
    "start": "512880",
    "end": "515039"
  },
  {
    "text": "robustness test it is random but those",
    "start": "515039",
    "end": "518959"
  },
  {
    "text": "inputs are",
    "start": "518959",
    "end": "520200"
  },
  {
    "text": "valid and uh while unit and integration",
    "start": "520200",
    "end": "523839"
  },
  {
    "text": "test and fuzzy tests uh target the",
    "start": "523839",
    "end": "527399"
  },
  {
    "text": "function the um robustness test actually",
    "start": "527399",
    "end": "530880"
  },
  {
    "text": "targets the binary and the entire",
    "start": "530880",
    "end": "532480"
  },
  {
    "text": "infrastructure",
    "start": "532480",
    "end": "533640"
  },
  {
    "text": "stack and the output is basically uh for",
    "start": "533640",
    "end": "538000"
  },
  {
    "text": "unit and integration test it's",
    "start": "538000",
    "end": "539360"
  },
  {
    "text": "predictable it is easy to assert whether",
    "start": "539360",
    "end": "542080"
  },
  {
    "text": "it is matching or not matching for",
    "start": "542080",
    "end": "543760"
  },
  {
    "text": "fuzzing we know whether at any given",
    "start": "543760",
    "end": "547200"
  },
  {
    "text": "random value the function is failing or",
    "start": "547200",
    "end": "549360"
  },
  {
    "text": "not so that's what we uh need to check",
    "start": "549360",
    "end": "553360"
  },
  {
    "text": "but for robustnesses it's a little bit",
    "start": "553360",
    "end": "555600"
  },
  {
    "text": "different because we need to validate",
    "start": "555600",
    "end": "558320"
  },
  {
    "text": "the random input that was given uh and",
    "start": "558320",
    "end": "562160"
  },
  {
    "text": "that's what the challenge",
    "start": "562160",
    "end": "563880"
  },
  {
    "text": "becomes and for the uh environment uh",
    "start": "563880",
    "end": "567600"
  },
  {
    "text": "basically unit tests first tests and",
    "start": "567600",
    "end": "569839"
  },
  {
    "text": "integration tests are all run as",
    "start": "569839",
    "end": "571680"
  },
  {
    "text": "processes but since for robustness test",
    "start": "571680",
    "end": "574399"
  },
  {
    "text": "we need to have uh the scenario",
    "start": "574399",
    "end": "577720"
  },
  {
    "text": "recreated reproducible",
    "start": "577720",
    "end": "579839"
  },
  {
    "text": "we actually use as a process container",
    "start": "579839",
    "end": "582880"
  },
  {
    "text": "as well as virtual",
    "start": "582880",
    "end": "584760"
  },
  {
    "text": "machines and uh using these uh",
    "start": "584760",
    "end": "587680"
  },
  {
    "text": "robustness test framework we have been",
    "start": "587680",
    "end": "589600"
  },
  {
    "text": "able to uncover these issues over a",
    "start": "589600",
    "end": "592320"
  },
  {
    "text": "period of last two years and if we see",
    "start": "592320",
    "end": "595839"
  },
  {
    "text": "uh these discovered by column uh we we",
    "start": "595839",
    "end": "599279"
  },
  {
    "text": "get to see these have been reported by",
    "start": "599279",
    "end": "601440"
  },
  {
    "text": "uh users and robustess framework itself",
    "start": "601440",
    "end": "604320"
  },
  {
    "text": "and based on the necessity of these",
    "start": "604320",
    "end": "607440"
  },
  {
    "text": "issues uh they have been reliably",
    "start": "607440",
    "end": "609680"
  },
  {
    "text": "reproduced tested against each and every",
    "start": "609680",
    "end": "611839"
  },
  {
    "text": "commit that goes into a release and that",
    "start": "611839",
    "end": "614720"
  },
  {
    "text": "becomes a very big part of the uh CD",
    "start": "614720",
    "end": "617680"
  },
  {
    "text": "data inconsistency effort that has that",
    "start": "617680",
    "end": "620079"
  },
  {
    "text": "the team the entire team has uh put into",
    "start": "620079",
    "end": "623120"
  },
  {
    "text": "for each of the release so that it can",
    "start": "623120",
    "end": "624800"
  },
  {
    "text": "be",
    "start": "624800",
    "end": "625880"
  },
  {
    "text": "stable uh over to Henry for the design",
    "start": "625880",
    "end": "628720"
  },
  {
    "text": "principles thanks Ara so let's dive uh",
    "start": "628720",
    "end": "632160"
  },
  {
    "text": "into the robustness",
    "start": "632160",
    "end": "633880"
  },
  {
    "text": "test so here are the goals that we have",
    "start": "633880",
    "end": "636399"
  },
  {
    "text": "in mind when we design the test we want",
    "start": "636399",
    "end": "638720"
  },
  {
    "text": "it to be able to explore so it's kind of",
    "start": "638720",
    "end": "641519"
  },
  {
    "text": "like cover the edge cases that requires",
    "start": "641519",
    "end": "643839"
  },
  {
    "text": "race condition to manifest and we would",
    "start": "643839",
    "end": "646079"
  },
  {
    "text": "like to explore some code path that's",
    "start": "646079",
    "end": "648160"
  },
  {
    "text": "are that's not covered by the existing",
    "start": "648160",
    "end": "650000"
  },
  {
    "text": "unit test and end to end test yet and",
    "start": "650000",
    "end": "652880"
  },
  {
    "text": "reproduction as mentioned that we want",
    "start": "652880",
    "end": "655360"
  },
  {
    "text": "to have an easy way uh to debug issues",
    "start": "655360",
    "end": "659120"
  },
  {
    "text": "and ensuring historic issues that's not",
    "start": "659120",
    "end": "661440"
  },
  {
    "text": "surfacing again and validation because",
    "start": "661440",
    "end": "664720"
  },
  {
    "text": "now we're giving uh random valid input",
    "start": "664720",
    "end": "667440"
  },
  {
    "text": "we need to somehow validate the output",
    "start": "667440",
    "end": "669440"
  },
  {
    "text": "we want to also ensure not just the",
    "start": "669440",
    "end": "671200"
  },
  {
    "text": "final state is correct we want to ensure",
    "start": "671200",
    "end": "672800"
  },
  {
    "text": "the intermediate state are correct",
    "start": "672800",
    "end": "674959"
  },
  {
    "text": "because we have the strict cializability",
    "start": "674959",
    "end": "676880"
  },
  {
    "text": "promised in the in our",
    "start": "676880",
    "end": "680360"
  },
  {
    "text": "documentation so there are two main",
    "start": "680360",
    "end": "682480"
  },
  {
    "text": "areas that we'll be focusing on for",
    "start": "682480",
    "end": "684000"
  },
  {
    "text": "checking the correctness the one of them",
    "start": "684000",
    "end": "686000"
  },
  {
    "text": "is the key value API it should be strict",
    "start": "686000",
    "end": "688480"
  },
  {
    "text": "serializable it should be atomic durable",
    "start": "688480",
    "end": "690880"
  },
  {
    "text": "and for watches it's the order unique",
    "start": "690880",
    "end": "693200"
  },
  {
    "text": "reliable so it's like you don't you",
    "start": "693200",
    "end": "694640"
  },
  {
    "text": "cannot afford to have a missing watch",
    "start": "694640",
    "end": "696320"
  },
  {
    "text": "event",
    "start": "696320",
    "end": "698800"
  },
  {
    "text": "and one of the main direction of our",
    "start": "698880",
    "end": "700480"
  },
  {
    "text": "test is to make sure that we are as",
    "start": "700480",
    "end": "702399"
  },
  {
    "text": "reliable as Kubernetes would expect us",
    "start": "702399",
    "end": "704160"
  },
  {
    "text": "to be so we set foot by understanding",
    "start": "704160",
    "end": "706240"
  },
  {
    "text": "how CD is used by Kubernetes which is",
    "start": "706240",
    "end": "708640"
  },
  {
    "text": "documented in this contract we codify",
    "start": "708640",
    "end": "710880"
  },
  {
    "text": "the interface we test it continuously so",
    "start": "710880",
    "end": "713760"
  },
  {
    "text": "when we know that for the new bug fixes",
    "start": "713760",
    "end": "716000"
  },
  {
    "text": "or new features when we introduce it we",
    "start": "716000",
    "end": "717839"
  },
  {
    "text": "won't break Kubernetes by",
    "start": "717839",
    "end": "720760"
  },
  {
    "text": "accident so let's talk about the",
    "start": "720760",
    "end": "724079"
  },
  {
    "text": "execution stages of this test so there",
    "start": "724079",
    "end": "726880"
  },
  {
    "text": "are main three uh three main stages uh",
    "start": "726880",
    "end": "728800"
  },
  {
    "text": "there are setup execution validation so",
    "start": "728800",
    "end": "730880"
  },
  {
    "text": "for setup we will cover the",
    "start": "730880",
    "end": "733079"
  },
  {
    "text": "configuration and we will be configuring",
    "start": "733079",
    "end": "735600"
  },
  {
    "text": "the scenarios for execution we'll",
    "start": "735600",
    "end": "738160"
  },
  {
    "text": "generate traffic from client we'll",
    "start": "738160",
    "end": "740079"
  },
  {
    "text": "inject error and we will collect the",
    "start": "740079",
    "end": "742320"
  },
  {
    "text": "output from both client and server um",
    "start": "742320",
    "end": "745040"
  },
  {
    "text": "for validation we'll run it through the",
    "start": "745040",
    "end": "746880"
  },
  {
    "text": "checker and see if we detect any anomaly",
    "start": "746880",
    "end": "749920"
  },
  {
    "text": "so let's go one by one for the setup uh",
    "start": "749920",
    "end": "754000"
  },
  {
    "text": "we need to set up a cluster and to set",
    "start": "754000",
    "end": "756959"
  },
  {
    "text": "up a cluster we start it from a clean",
    "start": "756959",
    "end": "758399"
  },
  {
    "text": "state so it's empty database we start",
    "start": "758399",
    "end": "760560"
  },
  {
    "text": "the cityd binary and we will configure a",
    "start": "760560",
    "end": "763040"
  },
  {
    "text": "number of nodes no versions and the",
    "start": "763040",
    "end": "765200"
  },
  {
    "text": "address so they can communicate",
    "start": "765200",
    "end": "767639"
  },
  {
    "text": "etc and for scenario we have as",
    "start": "767639",
    "end": "770880"
  },
  {
    "text": "mentioned exploratory or reproduction",
    "start": "770880",
    "end": "773920"
  },
  {
    "text": "for exploratory ones we will configure",
    "start": "773920",
    "end": "777200"
  },
  {
    "text": "things like traffic profile different uh",
    "start": "777200",
    "end": "780160"
  },
  {
    "text": "leader election timeouts or different",
    "start": "780160",
    "end": "781760"
  },
  {
    "text": "snapshot counts and for production",
    "start": "781760",
    "end": "783760"
  },
  {
    "text": "scenarios remember this table that we",
    "start": "783760",
    "end": "786000"
  },
  {
    "text": "mentioned um we would like to reproduce",
    "start": "786000",
    "end": "788240"
  },
  {
    "text": "some of these scenarios that requires",
    "start": "788240",
    "end": "790160"
  },
  {
    "text": "rest condition or and failure injection",
    "start": "790160",
    "end": "792639"
  },
  {
    "text": "to to actually occur so let's take this",
    "start": "792639",
    "end": "796680"
  },
  {
    "text": "example where it requires this ref panic",
    "start": "796680",
    "end": "800079"
  },
  {
    "text": "fail point to reproduce the arrow so we",
    "start": "800079",
    "end": "802079"
  },
  {
    "text": "will have to specify what fail point",
    "start": "802079",
    "end": "805920"
  },
  {
    "text": "under what profile and traffic it will",
    "start": "805920",
    "end": "807839"
  },
  {
    "text": "be a very efficient way for us to",
    "start": "807839",
    "end": "809600"
  },
  {
    "text": "reproduce so we can cover this in the",
    "start": "809600",
    "end": "811600"
  },
  {
    "text": "future uh in the future CI",
    "start": "811600",
    "end": "815000"
  },
  {
    "text": "runs so having done the setup part we",
    "start": "815000",
    "end": "818560"
  },
  {
    "text": "have to execute so to execute we have",
    "start": "818560",
    "end": "821760"
  },
  {
    "text": "the client that will generate requests",
    "start": "821760",
    "end": "824399"
  },
  {
    "text": "and send it to the the server and the",
    "start": "824399",
    "end": "826959"
  },
  {
    "text": "requests are defined in the scenario and",
    "start": "826959",
    "end": "829040"
  },
  {
    "text": "the uh so one example of the defined",
    "start": "829040",
    "end": "832399"
  },
  {
    "text": "configuration might be the traffic and",
    "start": "832399",
    "end": "834480"
  },
  {
    "text": "for traffic you can see this is one case",
    "start": "834480",
    "end": "837440"
  },
  {
    "text": "of the traffic where we have different",
    "start": "837440",
    "end": "839120"
  },
  {
    "text": "combination of the requests that will be",
    "start": "839120",
    "end": "842199"
  },
  {
    "text": "sent and during execution as we also",
    "start": "842199",
    "end": "845519"
  },
  {
    "text": "have mentioned we will have to inject",
    "start": "845519",
    "end": "848199"
  },
  {
    "text": "failures Um the bolded ones are the ones",
    "start": "848199",
    "end": "850800"
  },
  {
    "text": "that we currently have uh the the test",
    "start": "850800",
    "end": "853839"
  },
  {
    "text": "is able to inject and how do we actually",
    "start": "853839",
    "end": "856240"
  },
  {
    "text": "do that we will have to rely on three",
    "start": "856240",
    "end": "858399"
  },
  {
    "text": "different frameworks well not frameworks",
    "start": "858399",
    "end": "860000"
  },
  {
    "text": "but tools so we have gail we have lazy",
    "start": "860000",
    "end": "862639"
  },
  {
    "text": "fs and we have the network proxy so",
    "start": "862639",
    "end": "865279"
  },
  {
    "text": "let's go one by",
    "start": "865279",
    "end": "866680"
  },
  {
    "text": "one uh the first one is goofail it's a",
    "start": "866680",
    "end": "869760"
  },
  {
    "text": "project under the at cityd organization",
    "start": "869760",
    "end": "872399"
  },
  {
    "text": "so it enable us during runtime to inject",
    "start": "872399",
    "end": "875680"
  },
  {
    "text": "failures into certain co uh code paths",
    "start": "875680",
    "end": "878320"
  },
  {
    "text": "and it's very simple to use so as you",
    "start": "878320",
    "end": "881760"
  },
  {
    "text": "can see in the function uh you can",
    "start": "881760",
    "end": "884399"
  },
  {
    "text": "comment with go fail and then with the",
    "start": "884399",
    "end": "887839"
  },
  {
    "text": "certain format that you follow then you",
    "start": "887839",
    "end": "889760"
  },
  {
    "text": "can use go fail to generate the go code",
    "start": "889760",
    "end": "891519"
  },
  {
    "text": "from the comment for you and then you",
    "start": "891519",
    "end": "893360"
  },
  {
    "text": "can compile the this code with this",
    "start": "893360",
    "end": "895600"
  },
  {
    "text": "goofel uh code in contain inside and",
    "start": "895600",
    "end": "898720"
  },
  {
    "text": "during execution you can use uh HTTP",
    "start": "898720",
    "end": "901839"
  },
  {
    "text": "endpoint to enable it or use",
    "start": "901839",
    "end": "903120"
  },
  {
    "text": "environmental variable to enable it on",
    "start": "903120",
    "end": "905440"
  },
  {
    "text": "start",
    "start": "905440",
    "end": "908079"
  },
  {
    "text": "um in our city codebase for example we",
    "start": "908079",
    "end": "910720"
  },
  {
    "text": "have this panic code uh here to",
    "start": "910720",
    "end": "913199"
  },
  {
    "text": "interrupt the uh um leader to send out",
    "start": "913199",
    "end": "916320"
  },
  {
    "text": "messages in the raft part of the",
    "start": "916320",
    "end": "918240"
  },
  {
    "text": "codebase and if we enable this during",
    "start": "918240",
    "end": "921120"
  },
  {
    "text": "the the test then the node will crash",
    "start": "921120",
    "end": "923760"
  },
  {
    "text": "and we want to check in the end the",
    "start": "923760",
    "end": "925120"
  },
  {
    "text": "cluster is still in in the consistency",
    "start": "925120",
    "end": "927680"
  },
  {
    "text": "order that we are expecting it to",
    "start": "927680",
    "end": "930279"
  },
  {
    "text": "be uh the second tool that we mentioned",
    "start": "930279",
    "end": "932800"
  },
  {
    "text": "is the lazy FS which is is what we use",
    "start": "932800",
    "end": "935519"
  },
  {
    "text": "for testing the storage where it can",
    "start": "935519",
    "end": "937279"
  },
  {
    "text": "simulate data loss or unsynced rights",
    "start": "937279",
    "end": "940399"
  },
  {
    "text": "and lastly for the network we had the",
    "start": "940399",
    "end": "942399"
  },
  {
    "text": "reverse proxy basically sits there and",
    "start": "942399",
    "end": "944000"
  },
  {
    "text": "blocks off traffic on when we ask it to",
    "start": "944000",
    "end": "946720"
  },
  {
    "text": "so it can simulate some sort of network",
    "start": "946720",
    "end": "948240"
  },
  {
    "text": "partition or partial um uh network",
    "start": "948240",
    "end": "951199"
  },
  {
    "text": "disconnection",
    "start": "951199",
    "end": "953920"
  },
  {
    "text": "so we have talked about generating the",
    "start": "953920",
    "end": "956720"
  },
  {
    "text": "requests we have talked about injecting",
    "start": "956720",
    "end": "958240"
  },
  {
    "text": "failures now we talked about um",
    "start": "958240",
    "end": "960240"
  },
  {
    "text": "collecting the output since it's a",
    "start": "960240",
    "end": "962160"
  },
  {
    "text": "server a client server architecture we",
    "start": "962160",
    "end": "964240"
  },
  {
    "text": "have to collect from both sides server",
    "start": "964240",
    "end": "966240"
  },
  {
    "text": "side it's basically we collect the via",
    "start": "966240",
    "end": "968399"
  },
  {
    "text": "headlog from the server uh and also the",
    "start": "968399",
    "end": "970639"
  },
  {
    "text": "snapshots the client side we will record",
    "start": "970639",
    "end": "973360"
  },
  {
    "text": "the requests and responses and we also",
    "start": "973360",
    "end": "975519"
  },
  {
    "text": "record the watch responses that we have",
    "start": "975519",
    "end": "977759"
  },
  {
    "text": "streamed uh",
    "start": "977759",
    "end": "980040"
  },
  {
    "text": "continuously um and what do we actually",
    "start": "980040",
    "end": "983120"
  },
  {
    "text": "record on the client side it will look",
    "start": "983120",
    "end": "985199"
  },
  {
    "text": "something like this let's break it down",
    "start": "985199",
    "end": "987600"
  },
  {
    "text": "so basically we we record the client ID",
    "start": "987600",
    "end": "991040"
  },
  {
    "text": "input which is the request payload the",
    "start": "991040",
    "end": "993279"
  },
  {
    "text": "request time response response payload",
    "start": "993279",
    "end": "995279"
  },
  {
    "text": "and response time and in case of arrow",
    "start": "995279",
    "end": "998240"
  },
  {
    "text": "we record that too and as we have seen",
    "start": "998240",
    "end": "1001920"
  },
  {
    "text": "in the previous um slides before this is",
    "start": "1001920",
    "end": "1004720"
  },
  {
    "text": "how we can represent it so for each",
    "start": "1004720",
    "end": "1006720"
  },
  {
    "text": "client you can lay out the events uh in",
    "start": "1006720",
    "end": "1009440"
  },
  {
    "text": "this visualization and we will have to",
    "start": "1009440",
    "end": "1011519"
  },
  {
    "text": "run the validation basically on",
    "start": "1011519",
    "end": "1015759"
  },
  {
    "text": "this so recall that we said we generate",
    "start": "1015959",
    "end": "1020240"
  },
  {
    "text": "random valid input it's not like unit",
    "start": "1020240",
    "end": "1022560"
  },
  {
    "text": "test where you already have the input",
    "start": "1022560",
    "end": "1023839"
  },
  {
    "text": "and output hardcoded so now we need to",
    "start": "1023839",
    "end": "1025760"
  },
  {
    "text": "figure out a way to to verify what the",
    "start": "1025760",
    "end": "1028959"
  },
  {
    "text": "correct output the output is correct or",
    "start": "1028959",
    "end": "1030640"
  },
  {
    "text": "not and to do this we have to use a",
    "start": "1030640",
    "end": "1032400"
  },
  {
    "text": "state machine so just a quick refresher",
    "start": "1032400",
    "end": "1035120"
  },
  {
    "text": "state machine you will start with some",
    "start": "1035120",
    "end": "1036798"
  },
  {
    "text": "state in this case a equals to one and",
    "start": "1036799",
    "end": "1039280"
  },
  {
    "text": "each of the operation basically is a",
    "start": "1039280",
    "end": "1041438"
  },
  {
    "text": "transition from state to state so if you",
    "start": "1041439",
    "end": "1043760"
  },
  {
    "text": "put b equals to two into the system it",
    "start": "1043760",
    "end": "1045839"
  },
  {
    "text": "will then go to the state where you have",
    "start": "1045839",
    "end": "1047678"
  },
  {
    "text": "a equals to 1 and b equals to two and so",
    "start": "1047679",
    "end": "1050160"
  },
  {
    "text": "on and so forth so using state machine",
    "start": "1050160",
    "end": "1052640"
  },
  {
    "text": "you can verify all the intermediate",
    "start": "1052640",
    "end": "1054559"
  },
  {
    "text": "steps and you can also verify the final",
    "start": "1054559",
    "end": "1056320"
  },
  {
    "text": "state uh if if the uh cluster is in the",
    "start": "1056320",
    "end": "1059760"
  },
  {
    "text": "correct uh working order",
    "start": "1059760",
    "end": "1062640"
  },
  {
    "text": "um so when we are modeling at CD using",
    "start": "1062640",
    "end": "1066480"
  },
  {
    "text": "state machine the idea is that we have a",
    "start": "1066480",
    "end": "1068640"
  },
  {
    "text": "simplified implementation we don't have",
    "start": "1068640",
    "end": "1070880"
  },
  {
    "text": "wav we don't write to disk we just in",
    "start": "1070880",
    "end": "1072799"
  },
  {
    "text": "memory um hashmap basically because",
    "start": "1072799",
    "end": "1075280"
  },
  {
    "text": "that's basically what key value store is",
    "start": "1075280",
    "end": "1077600"
  },
  {
    "text": "so now having modeled this given a",
    "start": "1077600",
    "end": "1080240"
  },
  {
    "text": "history we can then walk through the",
    "start": "1080240",
    "end": "1081679"
  },
  {
    "text": "states and verify if the SCD is actually",
    "start": "1081679",
    "end": "1084160"
  },
  {
    "text": "in the correct",
    "start": "1084160",
    "end": "1086440"
  },
  {
    "text": "order so having built the city model we",
    "start": "1086440",
    "end": "1090000"
  },
  {
    "text": "then leverage porcupine to help does",
    "start": "1090000",
    "end": "1092400"
  },
  {
    "text": "it's a fast linearizability",
    "start": "1092400",
    "end": "1094679"
  },
  {
    "text": "checker so coming back to the",
    "start": "1094679",
    "end": "1097760"
  },
  {
    "text": "visualization before what point will do",
    "start": "1097760",
    "end": "1100720"
  },
  {
    "text": "is it will assign linearization points",
    "start": "1100720",
    "end": "1103360"
  },
  {
    "text": "throughout the history and if you follow",
    "start": "1103360",
    "end": "1105760"
  },
  {
    "text": "this visualization you can actually",
    "start": "1105760",
    "end": "1107039"
  },
  {
    "text": "follow the lines and you can see your",
    "start": "1107039",
    "end": "1109120"
  },
  {
    "text": "system state evolves over time and in",
    "start": "1109120",
    "end": "1111280"
  },
  {
    "text": "this case it's correct because it",
    "start": "1111280",
    "end": "1112640"
  },
  {
    "text": "doesn't have any red line so we're all",
    "start": "1112640",
    "end": "1114320"
  },
  {
    "text": "good",
    "start": "1114320",
    "end": "1116880"
  },
  {
    "text": "there are other type of validation that",
    "start": "1116880",
    "end": "1118559"
  },
  {
    "text": "we also built into uh this test when",
    "start": "1118559",
    "end": "1120880"
  },
  {
    "text": "it's running because it's targeted to",
    "start": "1120880",
    "end": "1122320"
  },
  {
    "text": "for std so it's like we can check some",
    "start": "1122320",
    "end": "1124880"
  },
  {
    "text": "internal consistency like at the end of",
    "start": "1124880",
    "end": "1126880"
  },
  {
    "text": "the test we can check for the hash KV or",
    "start": "1126880",
    "end": "1129679"
  },
  {
    "text": "we can also check if the successful",
    "start": "1129679",
    "end": "1131600"
  },
  {
    "text": "operation observed on the client side is",
    "start": "1131600",
    "end": "1133200"
  },
  {
    "text": "actually also presented on the um uh",
    "start": "1133200",
    "end": "1136320"
  },
  {
    "text": "write ahead log side",
    "start": "1136320",
    "end": "1139000"
  },
  {
    "text": "so in the unfortunate event that if we",
    "start": "1139000",
    "end": "1142320"
  },
  {
    "text": "actually get a report like this where",
    "start": "1142320",
    "end": "1144400"
  },
  {
    "text": "you can see we put a key and we have a",
    "start": "1144400",
    "end": "1147200"
  },
  {
    "text": "re revision 165 somehow the future get",
    "start": "1147200",
    "end": "1150400"
  },
  {
    "text": "actually have a revision 164 this time",
    "start": "1150400",
    "end": "1154400"
  },
  {
    "text": "chuming backwards not good this is the",
    "start": "1154400",
    "end": "1156480"
  },
  {
    "text": "example that we have showed earlier in",
    "start": "1156480",
    "end": "1157760"
  },
  {
    "text": "the site too um what can we do about",
    "start": "1157760",
    "end": "1160440"
  },
  {
    "text": "this so hopefully we don't need to do",
    "start": "1160440",
    "end": "1163919"
  },
  {
    "text": "this a lot of times but uh yeah if ever",
    "start": "1163919",
    "end": "1166480"
  },
  {
    "text": "we have to do have to run the report",
    "start": "1166480",
    "end": "1168160"
  },
  {
    "text": "locally",
    "start": "1168160",
    "end": "1169039"
  },
  {
    "text": "we have to first actually make sure if",
    "start": "1169039",
    "end": "1170640"
  },
  {
    "text": "this is actually a real bug on the ATCD",
    "start": "1170640",
    "end": "1172320"
  },
  {
    "text": "side because as we mentioned we are",
    "start": "1172320",
    "end": "1174080"
  },
  {
    "text": "writing a model uh to model the behavior",
    "start": "1174080",
    "end": "1176480"
  },
  {
    "text": "at CD so there might also be a case",
    "start": "1176480",
    "end": "1178240"
  },
  {
    "text": "where there's a bug in the framework",
    "start": "1178240",
    "end": "1179600"
  },
  {
    "text": "there's a bug in the model so we need to",
    "start": "1179600",
    "end": "1180960"
  },
  {
    "text": "actually first distinguish this first",
    "start": "1180960",
    "end": "1182960"
  },
  {
    "text": "and then if we actually know this is a",
    "start": "1182960",
    "end": "1184640"
  },
  {
    "text": "bug once side try to reproduce it over",
    "start": "1184640",
    "end": "1186720"
  },
  {
    "text": "there fix the bug write end to end test",
    "start": "1186720",
    "end": "1188960"
  },
  {
    "text": "and for those that actually require race",
    "start": "1188960",
    "end": "1190720"
  },
  {
    "text": "condition or error injection to work we",
    "start": "1190720",
    "end": "1192480"
  },
  {
    "text": "add it to the uh robustness test suite",
    "start": "1192480",
    "end": "1195200"
  },
  {
    "text": "so we can consistently reproduce it over",
    "start": "1195200",
    "end": "1199279"
  },
  {
    "text": "So let's do a small",
    "start": "1200240",
    "end": "1203760"
  },
  {
    "text": "demo this is basically demonstrating the",
    "start": "1209960",
    "end": "1212880"
  },
  {
    "text": "issue that we have as we mentioned the",
    "start": "1212880",
    "end": "1215600"
  },
  {
    "text": "uh watch uh the the revision travels",
    "start": "1215600",
    "end": "1217840"
  },
  {
    "text": "back in time so since all the test cases",
    "start": "1217840",
    "end": "1220640"
  },
  {
    "text": "are written uh in the make file you can",
    "start": "1220640",
    "end": "1223039"
  },
  {
    "text": "just run make and that uh issue uh",
    "start": "1223039",
    "end": "1225919"
  },
  {
    "text": "number and it can actually reproduce the",
    "start": "1225919",
    "end": "1228400"
  },
  {
    "text": "the bug and what we're looking at is",
    "start": "1228400",
    "end": "1230960"
  },
  {
    "text": "what we have recorded on the client side",
    "start": "1230960",
    "end": "1233120"
  },
  {
    "text": "has operation and watch and we also have",
    "start": "1233120",
    "end": "1235360"
  },
  {
    "text": "the the server side we have the snapshot",
    "start": "1235360",
    "end": "1237679"
  },
  {
    "text": "and the right",
    "start": "1237679",
    "end": "1239159"
  },
  {
    "text": "headlog so we can quickly take a look at",
    "start": "1239159",
    "end": "1242640"
  },
  {
    "text": "what we have stored for the watches",
    "start": "1242640",
    "end": "1246080"
  },
  {
    "text": "it's basically the events that's",
    "start": "1246080",
    "end": "1248080"
  },
  {
    "text": "observed on the client side the put and",
    "start": "1248080",
    "end": "1250960"
  },
  {
    "text": "delete",
    "start": "1250960",
    "end": "1251720"
  },
  {
    "text": "operations that's basically just struct",
    "start": "1251720",
    "end": "1254000"
  },
  {
    "text": "we have it logged",
    "start": "1254000",
    "end": "1256880"
  },
  {
    "text": "structurally and then we can take a look",
    "start": "1257880",
    "end": "1260400"
  },
  {
    "text": "at the operation side what we log over",
    "start": "1260400",
    "end": "1264080"
  },
  {
    "text": "there it's basically also following the",
    "start": "1264080",
    "end": "1265679"
  },
  {
    "text": "structure that I presented in the slide",
    "start": "1265679",
    "end": "1269080"
  },
  {
    "text": "earlier every client will if they have",
    "start": "1269080",
    "end": "1272559"
  },
  {
    "text": "um it can have both you can also just",
    "start": "1272559",
    "end": "1274480"
  },
  {
    "text": "have the watch and also just have the",
    "start": "1274480",
    "end": "1275760"
  },
  {
    "text": "operation",
    "start": "1275760",
    "end": "1278760"
  },
  {
    "text": "then we will show basically that's what",
    "start": "1284960",
    "end": "1287760"
  },
  {
    "text": "we recorded and the robustness test will",
    "start": "1287760",
    "end": "1290320"
  },
  {
    "text": "always generate a report if it fails and",
    "start": "1290320",
    "end": "1293280"
  },
  {
    "text": "you can that's where usually when when",
    "start": "1293280",
    "end": "1295360"
  },
  {
    "text": "we're debugging it we will look at that",
    "start": "1295360",
    "end": "1297200"
  },
  {
    "text": "report and trying to figure out at which",
    "start": "1297200",
    "end": "1299600"
  },
  {
    "text": "point the history start to violate the",
    "start": "1299600",
    "end": "1302320"
  },
  {
    "text": "property the consistency model property",
    "start": "1302320",
    "end": "1304000"
  },
  {
    "text": "that we're trying to see so this is when",
    "start": "1304000",
    "end": "1306080"
  },
  {
    "text": "you open the report this is what you",
    "start": "1306080",
    "end": "1307440"
  },
  {
    "text": "would see you can click jump to the",
    "start": "1307440",
    "end": "1309200"
  },
  {
    "text": "first arrow to go straight to it or you",
    "start": "1309200",
    "end": "1311679"
  },
  {
    "text": "can enjoy scrolling and try to find",
    "start": "1311679",
    "end": "1313679"
  },
  {
    "text": "where the red line",
    "start": "1313679",
    "end": "1315799"
  },
  {
    "text": "is and yeah this is where we showed in",
    "start": "1315799",
    "end": "1319039"
  },
  {
    "text": "the slide revision 165 goes backward in",
    "start": "1319039",
    "end": "1322480"
  },
  {
    "text": "the future of uh in in the future it",
    "start": "1322480",
    "end": "1324799"
  },
  {
    "text": "goes backward somehow so yeah this is",
    "start": "1324799",
    "end": "1326799"
  },
  {
    "text": "the bug that we discovered with this",
    "start": "1326799",
    "end": "1328799"
  },
  {
    "text": "test suite",
    "start": "1328799",
    "end": "1331960"
  },
  {
    "text": "so some future work starting I think",
    "start": "1332000",
    "end": "1334799"
  },
  {
    "text": "next week we will have this anti-thesis",
    "start": "1334799",
    "end": "1337280"
  },
  {
    "text": "integration thing we will uh explore new",
    "start": "1337280",
    "end": "1340559"
  },
  {
    "text": "ways to reproduce our bucks consistently",
    "start": "1340559",
    "end": "1342480"
  },
  {
    "text": "we try to we will try to see how anticis",
    "start": "1342480",
    "end": "1344720"
  },
  {
    "text": "can help us um uh improve our robust",
    "start": "1344720",
    "end": "1347600"
  },
  {
    "text": "test suite there are a lot of GitHub",
    "start": "1347600",
    "end": "1350000"
  },
  {
    "text": "issues that's open targeting the robust",
    "start": "1350000",
    "end": "1352720"
  },
  {
    "text": "test something like adding more internal",
    "start": "1352720",
    "end": "1354559"
  },
  {
    "text": "consistency checks or deflate CI runs",
    "start": "1354559",
    "end": "1356720"
  },
  {
    "text": "like we have the long-standing issue of",
    "start": "1356720",
    "end": "1358280"
  },
  {
    "text": "QPS um and also we run bi-weekly",
    "start": "1358280",
    "end": "1362480"
  },
  {
    "text": "robustness test meeting where we look at",
    "start": "1362480",
    "end": "1364480"
  },
  {
    "text": "this beautiful dashboard this is all",
    "start": "1364480",
    "end": "1366400"
  },
  {
    "text": "green so that's good if there's a red or",
    "start": "1366400",
    "end": "1369360"
  },
  {
    "text": "purple that means there's something that",
    "start": "1369360",
    "end": "1370640"
  },
  {
    "text": "failed we need to look into it and can",
    "start": "1370640",
    "end": "1373200"
  },
  {
    "text": "join us for a ride to bi-weekly surprise",
    "start": "1373200",
    "end": "1375520"
  },
  {
    "text": "because we really don't know what we",
    "start": "1375520",
    "end": "1377039"
  },
  {
    "text": "will see every two",
    "start": "1377039",
    "end": "1379080"
  },
  {
    "text": "weeks so yeah thank you for listening",
    "start": "1379080",
    "end": "1382240"
  },
  {
    "text": "and uh hope you enjoy this talk and uh",
    "start": "1382240",
    "end": "1386559"
  },
  {
    "text": "yeah have a nice afternoon",
    "start": "1386559",
    "end": "1390480"
  },
  {
    "text": "hey thanks for the talk uh so it seems",
    "start": "1398799",
    "end": "1400799"
  },
  {
    "text": "like in the robustness test you're kind",
    "start": "1400799",
    "end": "1402400"
  },
  {
    "text": "of relying a little bit on",
    "start": "1402400",
    "end": "1404000"
  },
  {
    "text": "non-determinism right like it seems like",
    "start": "1404000",
    "end": "1405919"
  },
  {
    "text": "the requests that you're simulating are",
    "start": "1405919",
    "end": "1407760"
  },
  {
    "text": "random weights and probably running in",
    "start": "1407760",
    "end": "1409919"
  },
  {
    "text": "uh random order do you um like do you",
    "start": "1409919",
    "end": "1413600"
  },
  {
    "text": "run these tests numerous times every",
    "start": "1413600",
    "end": "1416080"
  },
  {
    "text": "time you run them and how do you make",
    "start": "1416080",
    "end": "1418080"
  },
  {
    "text": "sure yes um so for reproducing the issue",
    "start": "1418080",
    "end": "1422320"
  },
  {
    "text": "if you actually check the main file we",
    "start": "1422320",
    "end": "1424240"
  },
  {
    "text": "usually have count for like 100 or 200",
    "start": "1424240",
    "end": "1426320"
  },
  {
    "text": "depending on how hard it is to actually",
    "start": "1426320",
    "end": "1427760"
  },
  {
    "text": "reproduce it so it's not like one shot",
    "start": "1427760",
    "end": "1429840"
  },
  {
    "text": "you get it like the example we show is",
    "start": "1429840",
    "end": "1431520"
  },
  {
    "text": "actually kind of lucky for some tests",
    "start": "1431520",
    "end": "1433679"
  },
  {
    "text": "you actually need to run several hundred",
    "start": "1433679",
    "end": "1435200"
  },
  {
    "text": "times and because it's race condition",
    "start": "1435200",
    "end": "1436799"
  },
  {
    "text": "sometimes to trigger it right so this",
    "start": "1436799",
    "end": "1438480"
  },
  {
    "text": "kind of why it's hard to like debugging",
    "start": "1438480",
    "end": "1441840"
  },
  {
    "text": "this criticism hard because of this has",
    "start": "1441840",
    "end": "1444559"
  },
  {
    "text": "there been any interest in like using uh",
    "start": "1444559",
    "end": "1446640"
  },
  {
    "text": "more formal um proof verification tools",
    "start": "1446640",
    "end": "1450000"
  },
  {
    "text": "or uh like I'm not going to say TA plus",
    "start": "1450000",
    "end": "1453279"
  },
  {
    "text": "yes so on the ref side there's actually",
    "start": "1453279",
    "end": "1454960"
  },
  {
    "text": "work on the toa plus uh that was there's",
    "start": "1454960",
    "end": "1458320"
  },
  {
    "text": "a work on that but on the at city side I",
    "start": "1458320",
    "end": "1461200"
  },
  {
    "text": "think there were a pull request open or",
    "start": "1461200",
    "end": "1464480"
  },
  {
    "text": "there was someone trying to work on it",
    "start": "1464480",
    "end": "1466159"
  },
  {
    "text": "but it hasn't really been worked on like",
    "start": "1466159",
    "end": "1469039"
  },
  {
    "text": "within yeah I think maybe like less um",
    "start": "1469039",
    "end": "1472000"
  },
  {
    "text": "less formal proof but more like you know",
    "start": "1472000",
    "end": "1473679"
  },
  {
    "text": "frameworks like JSON mastrom that those",
    "start": "1473679",
    "end": "1476000"
  },
  {
    "text": "kind of tools probably more pragmatic",
    "start": "1476000",
    "end": "1478000"
  },
  {
    "text": "right um we did had gson test report if",
    "start": "1478000",
    "end": "1481279"
  },
  {
    "text": "you actually look at it I think on 34",
    "start": "1481279",
    "end": "1482880"
  },
  {
    "text": "before they actually ran it once um and",
    "start": "1482880",
    "end": "1485600"
  },
  {
    "text": "the problem with that um on Merrick's",
    "start": "1485600",
    "end": "1488000"
  },
  {
    "text": "talk they actually he actually mentioned",
    "start": "1488000",
    "end": "1489520"
  },
  {
    "text": "it so the way the test is designed is",
    "start": "1489520",
    "end": "1492720"
  },
  {
    "text": "not really able to run on CI you",
    "start": "1492720",
    "end": "1495440"
  },
  {
    "text": "actually have to set up a cluster of",
    "start": "1495440",
    "end": "1496799"
  },
  {
    "text": "servers and also um you need to really",
    "start": "1496799",
    "end": "1500960"
  },
  {
    "text": "have some very deep knowledge into how",
    "start": "1500960",
    "end": "1503279"
  },
  {
    "text": "to write them because it's it's not like",
    "start": "1503279",
    "end": "1504559"
  },
  {
    "text": "by magic it runs you still have to write",
    "start": "1504559",
    "end": "1505840"
  },
  {
    "text": "a model and whatnot so for us our",
    "start": "1505840",
    "end": "1507840"
  },
  {
    "text": "expertise is in Golang so we decided to",
    "start": "1507840",
    "end": "1510480"
  },
  {
    "text": "run write this test ourselves we do this",
    "start": "1510480",
    "end": "1513440"
  },
  {
    "text": "framework we do the same check and we",
    "start": "1513440",
    "end": "1515120"
  },
  {
    "text": "can do more internal consistency check",
    "start": "1515120",
    "end": "1517200"
  },
  {
    "text": "and whatnot to to to run this on CI and",
    "start": "1517200",
    "end": "1520480"
  },
  {
    "text": "also for us easier to track and debug",
    "start": "1520480",
    "end": "1522559"
  },
  {
    "text": "yeah makes sense thank you you can talk",
    "start": "1522559",
    "end": "1524240"
  },
  {
    "text": "to Merrick if you have more questions",
    "start": "1524240",
    "end": "1528440"
  },
  {
    "text": "if no question then thank you everyone",
    "start": "1535120",
    "end": "1537520"
  },
  {
    "text": "for attending and have a nice weekend",
    "start": "1537520",
    "end": "1540240"
  },
  {
    "text": "thank you",
    "start": "1540240",
    "end": "1543200"
  }
]