[
  {
    "text": "okay I wanted I always want to get a feel for like who's here so show of",
    "start": "80",
    "end": "6640"
  },
  {
    "text": "hands security is important to me John and Sir don't worry the audience",
    "start": "6640",
    "end": "13240"
  },
  {
    "text": "has a pulse okay now uh here's another question and this is the one that's going to separate the normal people from",
    "start": "13240",
    "end": "20279"
  },
  {
    "text": "the weird kids like me managing Network policy is",
    "start": "20279",
    "end": "26920"
  },
  {
    "text": "fun all right my people we're going to hang out we're going to hang out um yeah so we're going to we're going to talk a",
    "start": "26920",
    "end": "32880"
  },
  {
    "text": "little bit about that uh and uh you know some of Massac card's Journey on micro",
    "start": "32880",
    "end": "38960"
  },
  {
    "text": "segmentation and some of the really cool stuff that John and Sur have worked on uh to get us there so we'll go ahead and",
    "start": "38960",
    "end": "46120"
  },
  {
    "text": "hop into the next slide do some quick introductions suria hey everyone I'm Surya I'm an engineer working on the",
    "start": "46120",
    "end": "52840"
  },
  {
    "text": "open shift networking team at Red Hat I'm a contributor to the Sig Network Community Upstream especially in the Sig",
    "start": "52840",
    "end": "60000"
  },
  {
    "text": "Network policy API working group which is a sub project in Sig Network yeah hi I'm John z um principal",
    "start": "60000",
    "end": "68240"
  },
  {
    "text": "engineer at at MasterCard and my primary role is the uh architecture for our on",
    "start": "68240",
    "end": "73759"
  },
  {
    "text": "premise kubernetes I've been there 20 plus years and someone once referred to me as a piece of furniture been there so",
    "start": "73759",
    "end": "80240"
  },
  {
    "text": "long better in dinosaur uh Hey guys D Jerry uh distinguished engineer at MasterCard",
    "start": "80240",
    "end": "86479"
  },
  {
    "text": "huge open source and Boss Fan uh been doing a lot of interesting stuff at",
    "start": "86479",
    "end": "92040"
  },
  {
    "text": "MasterCard and the past five years specifically I've been leading a lot of our micr segmentation initiatives and",
    "start": "92040",
    "end": "97759"
  },
  {
    "text": "these days I now own the kubernetes platform as well for our enrum deployment so I want to spend just a",
    "start": "97759",
    "end": "104479"
  },
  {
    "text": "quick minute to talk about Master Card uh the good news is for those that don't know you don't owe us any money we're",
    "start": "104479",
    "end": "111040"
  },
  {
    "text": "not a bank what we do is we interconnect a lot of different banks and why this",
    "start": "111040",
    "end": "116479"
  },
  {
    "text": "matters uh we are a network security is very important for our",
    "start": "116479",
    "end": "123360"
  },
  {
    "text": "Network right so if you kind of think about what we do we're more like your cell phone",
    "start": "123360",
    "end": "130800"
  },
  {
    "text": "provider or your internet service provider than we are necessarily your bank yes we do offer a lot of stuff uh",
    "start": "130800",
    "end": "137080"
  },
  {
    "text": "value eded Services uh on top of the network but at the end of the day we're",
    "start": "137080",
    "end": "142200"
  },
  {
    "text": "really a network and that's what we're here to talk a little bit about is our micr segmentation Journey so we're not",
    "start": "142200",
    "end": "148920"
  },
  {
    "text": "going to cover how to micr segment your network like MasterCard completely because guys there is a lot of stuff out",
    "start": "148920",
    "end": "155879"
  },
  {
    "text": "there we have to be concerned with segmenting and separating workloads like bare metal nodes main",
    "start": "155879",
    "end": "162480"
  },
  {
    "text": "frames virtual machines and a couple tens of thousands",
    "start": "162480",
    "end": "167800"
  },
  {
    "text": "of containers right but we are here to talk a little bit about some of the new advancements that are happening in the",
    "start": "167800",
    "end": "174720"
  },
  {
    "text": "uh uh the cni specification that will allow us to more efficient manage policy",
    "start": "174720",
    "end": "181640"
  },
  {
    "text": "so if you want to talk about like all the details how the heck do you guys manage policy and all of that uh and I",
    "start": "181640",
    "end": "187440"
  },
  {
    "text": "don't remember the exact spec I had our uh international band of crank Turners run the numbers the other day we have",
    "start": "187440",
    "end": "194200"
  },
  {
    "text": "more than 300,000 discret Network pin holes that we are actively managing just",
    "start": "194200",
    "end": "199799"
  },
  {
    "text": "in the data center Network that's you know 50s something locations has nothing to do with the card swipe Network there",
    "start": "199799",
    "end": "206400"
  },
  {
    "text": "are a whole lot more so there's a lot of scale there a lot of policy that needs to be managed and the admin Network",
    "start": "206400",
    "end": "213480"
  },
  {
    "text": "policies that we'll be talking about here make the job just a little bit easier so I'll let John kind of take it",
    "start": "213480",
    "end": "219480"
  },
  {
    "text": "away from there and talk about some of the details yeah so uh micr segmentation",
    "start": "219480",
    "end": "225200"
  },
  {
    "text": "in Master Card so as being part of the the platform team one of uh our responsibilities is to ensure that in",
    "start": "225200",
    "end": "232079"
  },
  {
    "text": "our multi-tenant clusters we isolate the tenant workloads so um at Master Guard we have",
    "start": "232079",
    "end": "238560"
  },
  {
    "text": "a declara a vision for deploying containerized workloads to kubernetes clusters uh the idea is to simplify the",
    "start": "238560",
    "end": "245760"
  },
  {
    "text": "uh developer experience so imagine if you will an application team building a microservice for MasterCard can simply",
    "start": "245760",
    "end": "253400"
  },
  {
    "text": "declare here's my code here are the resources I need and the connections required uh to buet and it turns it over",
    "start": "253400",
    "end": "260440"
  },
  {
    "text": "to the machine which creates uh the kubernetes constructs to deploy this application turning the infrastructure",
    "start": "260440",
    "end": "266520"
  },
  {
    "text": "essentially into a black box where these developers don't have to be aware of what it's like uh to deploy to",
    "start": "266520",
    "end": "274479"
  },
  {
    "text": "kubernetes so how do we take those declarative or Quest and turn them into kubernetes resources so the microservice",
    "start": "274479",
    "end": "281720"
  },
  {
    "text": "each microservice is built as a distinct what we call a Deployable asset da um",
    "start": "281720",
    "end": "287639"
  },
  {
    "text": "that's created in its own namespace as a single pod when we talk about the um the",
    "start": "287639",
    "end": "293680"
  },
  {
    "text": "tenant applications which we call a technical asset a TA these are comprised",
    "start": "293680",
    "end": "298840"
  },
  {
    "text": "of multiple Deployable assets that combined to uh make up the application",
    "start": "298840",
    "end": "304440"
  },
  {
    "text": "which we refer to as the tenant and on average we're seeing you know maybe about five uh microservices per",
    "start": "304440",
    "end": "310479"
  },
  {
    "text": "technical asset to set the stage that means we will have uh five name",
    "start": "310479",
    "end": "315800"
  },
  {
    "text": "spaces so why micr segment right so in our multi-tenant cluster we could have",
    "start": "315800",
    "end": "321960"
  },
  {
    "text": "hundreds of such tenants in there uh collocated within the same cluster and",
    "start": "321960",
    "end": "327160"
  },
  {
    "text": "mastercard's default policy is if it can be micr segmented it should be micr",
    "start": "327160",
    "end": "332240"
  },
  {
    "text": "segmented but if it's in the application data plane it must be micr segmented and",
    "start": "332240",
    "end": "337520"
  },
  {
    "text": "what this does is ensures that we can isolate any potential breach to the application flow and its authorized",
    "start": "337520",
    "end": "343919"
  },
  {
    "text": "connections uh limiting uh the blast radius uh additionally as being part of the financial uh industry we have to",
    "start": "343919",
    "end": "351440"
  },
  {
    "text": "adhere to PCI DSS standards um and in specifically in in version four they've",
    "start": "351440",
    "end": "357759"
  },
  {
    "text": "added the requirement to micros micro segment um containerized",
    "start": "357759",
    "end": "364160"
  },
  {
    "text": "workloads so how do we wire this up so imagine we have a uh a tenant Fu and a",
    "start": "364160",
    "end": "369240"
  },
  {
    "text": "tenant bar um so it's the platform's responsibility to ensure that those uh",
    "start": "369240",
    "end": "374800"
  },
  {
    "text": "two applications as seen by uh the red line there that there is no communication between them but at the",
    "start": "374800",
    "end": "381199"
  },
  {
    "text": "same time as indicated by the green lines we have on there all the microservices for a given tenant are",
    "start": "381199",
    "end": "386520"
  },
  {
    "text": "supposed to seamlessly be able to communicate you know additionally there's going to be Services external to",
    "start": "386520",
    "end": "392520"
  },
  {
    "text": "the cluster uh that these uh tenants must uh connect to for example object",
    "start": "392520",
    "end": "398280"
  },
  {
    "text": "storage or some logging service Additionally the platform team",
    "start": "398280",
    "end": "405240"
  },
  {
    "text": "has the responsibility for some common uh services that all tenants need to",
    "start": "405240",
    "end": "410520"
  },
  {
    "text": "have access to so if we go to a a deny all by default then what we have to have",
    "start": "410520",
    "end": "415800"
  },
  {
    "text": "is common connections enabled and that's the responsibility of the platform team so imagine in our our multi-tenant",
    "start": "415800",
    "end": "421680"
  },
  {
    "text": "cluster we have you know 100 tenants in there and if we go with the the aggregate of maybe five per we're",
    "start": "421680",
    "end": "427599"
  },
  {
    "text": "talking about 500 a spaces where we'd have to create policy you know for example simply to enable it to be able",
    "start": "427599",
    "end": "434000"
  },
  {
    "text": "to talk to the internal",
    "start": "434000",
    "end": "437720"
  },
  {
    "text": "DNS so when we get these provisioning requests when someone declares I'm ready to deploy this microservice what does",
    "start": "439400",
    "end": "445240"
  },
  {
    "text": "this workflow look like um it comes in something we call the single manifest and when that is handed over the the",
    "start": "445240",
    "end": "451639"
  },
  {
    "text": "platform provisioner is responsible for creating the namespace where the codee's going to go um creating a quota to",
    "start": "451639",
    "end": "458360"
  },
  {
    "text": "assign the resource the compute resources that are needed to run the application and then the sdn provisioner",
    "start": "458360",
    "end": "464919"
  },
  {
    "text": "is responsible for taking those connection uh requirements and turning",
    "start": "464919",
    "end": "470120"
  },
  {
    "text": "them into some kubernetes construct for uh micro",
    "start": "470120",
    "end": "475199"
  },
  {
    "text": "segmentation that's just the first provisioning Quest the next one comes in very similar different requirements but",
    "start": "475199",
    "end": "480280"
  },
  {
    "text": "the same workflow so this is our provision to build deploy workflow uh to",
    "start": "480280",
    "end": "485720"
  },
  {
    "text": "get your your tenant deployed so why not simply use Network",
    "start": "485720",
    "end": "492000"
  },
  {
    "text": "policies well we have multiple actors in This flow you know the platform team has",
    "start": "492000",
    "end": "497159"
  },
  {
    "text": "the infrastructure responsibility the scn team is responsible for implementing the workload security we have",
    "start": "497159",
    "end": "503599"
  },
  {
    "text": "application teams that are defining their connectivity requirements sdn team needs to be",
    "start": "503599",
    "end": "509039"
  },
  {
    "text": "proactive to be able to be ahead of having policy in place before we actually wanted to uh deploy our",
    "start": "509039",
    "end": "514919"
  },
  {
    "text": "workloads and additionally if you remember back to the the example I gave of 100 tenants we don't want to",
    "start": "514919",
    "end": "521080"
  },
  {
    "text": "duplicate Network policy in every name space which means that's 500 objects 500 Network policies to manage and what we",
    "start": "521080",
    "end": "528160"
  },
  {
    "text": "need is some simple higher level uh policy that can take care of these needs uh in in prepare preparation for the",
    "start": "528160",
    "end": "538440"
  },
  {
    "text": "deployments additionally for the services it's dynamic in nature you know",
    "start": "538440",
    "end": "543600"
  },
  {
    "text": "uh Deployable assets come in with a single Manifest this is going to be uh coming at scale tenants may have",
    "start": "543600",
    "end": "550320"
  },
  {
    "text": "multiple uh deployables and additional microservices and as you see when we talked about the two provisioning",
    "start": "550320",
    "end": "556519"
  },
  {
    "text": "requests it seems a little simple and straightforward but you know quickly it gets really complicated and uh what we",
    "start": "556519",
    "end": "563480"
  },
  {
    "text": "need is some sort of simpler approach to being able to securely micros segment",
    "start": "563480",
    "end": "569079"
  },
  {
    "text": "everything so this is where we come in the open",
    "start": "569079",
    "end": "575519"
  },
  {
    "text": "source Upstream community and I'm part of the Sig Network policy API sub project in Sig Network we have been",
    "start": "575519",
    "end": "582240"
  },
  {
    "text": "working on the admin Network policy API for quite a few years we are an out ofree API we do not live in core like",
    "start": "582240",
    "end": "589519"
  },
  {
    "text": "the network policy API and when you say admin Network policy it consists of two",
    "start": "589519",
    "end": "594959"
  },
  {
    "text": "crds one is the A&P the admin policy itself and then the base line admin",
    "start": "594959",
    "end": "600160"
  },
  {
    "text": "Network policy the differences here is that the& is non- overridable and it's",
    "start": "600160",
    "end": "607000"
  },
  {
    "text": "specifically designed for cluster admins the Baseline is also for cluster admins but it is overridable by the network",
    "start": "607000",
    "end": "613160"
  },
  {
    "text": "polies I'll get to that in a moment but just to talk a little bit about the community we are a small healthy community that participates in designing",
    "start": "613160",
    "end": "620160"
  },
  {
    "text": "and maintaining features around these apis so if you have new fature requests use cases please come talk to me or Dan",
    "start": "620160",
    "end": "627519"
  },
  {
    "text": "or anyone else in in the sub project and we're happy to take you cases here the apis are in Alpha currently we're on our",
    "start": "627519",
    "end": "634440"
  },
  {
    "text": "journey to get to Beta so talking about API semantics and",
    "start": "634440",
    "end": "639839"
  },
  {
    "text": "Diving a little bit deeper into what & is and how different it is from Network policies so like I mentioned all these",
    "start": "639839",
    "end": "646560"
  },
  {
    "text": "crds can coexist on your cluster so you can have your admin Network policy crd",
    "start": "646560",
    "end": "652720"
  },
  {
    "text": "where you this these rules are evaluated the first your the Persona use case here",
    "start": "652720",
    "end": "658440"
  },
  {
    "text": "is for a cluster admin to be able to you know Define policies that span across the cluster if you don't find any",
    "start": "658440",
    "end": "665680"
  },
  {
    "text": "matching A&S then you fall down to the network policies then you match there right like so Network policies were",
    "start": "665680",
    "end": "672160"
  },
  {
    "text": "traditionally designed for application Developers for the tenant owners to be able to create namespace scope tools to",
    "start": "672160",
    "end": "679440"
  },
  {
    "text": "Pro protect their applications you know the part which are part of their Nam spaces so the the next thing that gets",
    "start": "679440",
    "end": "687160"
  },
  {
    "text": "evaluated is that under Network policy and if there are no network policies in your cluster the admin still has a way",
    "start": "687160",
    "end": "693600"
  },
  {
    "text": "to define a guard rail across the cluster that is the Baseline a& and this",
    "start": "693600",
    "end": "698760"
  },
  {
    "text": "is a Singleton object and it's used to be able to catch it's like a catch all",
    "start": "698760",
    "end": "704800"
  },
  {
    "text": "right so if you're tenants or or your end users or the application developers have not created policies in their name",
    "start": "704800",
    "end": "710560"
  },
  {
    "text": "spaces if there's nothing matching it you still have that default deny that can kick in and for the problems that",
    "start": "710560",
    "end": "717240"
  },
  {
    "text": "John was talking about right like they don't intend to use Network policies in their first iteration but they",
    "start": "717240",
    "end": "722680"
  },
  {
    "text": "definitely plan to use it in the future for finer grained control over their applications and microservices that they",
    "start": "722680",
    "end": "728720"
  },
  {
    "text": "deploy but coming to our wonderful crd API apis are hard to design but I think we've done a pretty good job here but",
    "start": "728720",
    "end": "735360"
  },
  {
    "text": "we're still in Alpha so we're still asking for feedback so that we can graduate ourselves to Beta so this is a",
    "start": "735360",
    "end": "741480"
  },
  {
    "text": "very explicit API here very different from Network policies so how many of you use Network policies right so you might",
    "start": "741480",
    "end": "748959"
  },
  {
    "text": "find find the& very very different so it's good it's good to kind of notice the the API structure we have here we",
    "start": "748959",
    "end": "755360"
  },
  {
    "text": "have a priority field which we defined and this is because the crd is cluster scoped so if you as an admin are",
    "start": "755360",
    "end": "761639"
  },
  {
    "text": "creating rules you want to be able to tell which one is which have which one has more precedence than the other and",
    "start": "761639",
    "end": "767839"
  },
  {
    "text": "here zero means the highest and thousand is the lowest subject is the the part of",
    "start": "767839",
    "end": "773760"
  },
  {
    "text": "the spec where you mention which name spaces or which pods you want to apply your admin Network policy on so so far",
    "start": "773760",
    "end": "780279"
  },
  {
    "text": "straightforward and then you can have up to 100 Ingress rules and 100 egress rules in the same policy object and when",
    "start": "780279",
    "end": "788079"
  },
  {
    "text": "you have 100 rules right you might again want to have a precedence so this this ordering of rules within the object is",
    "start": "788079",
    "end": "795600"
  },
  {
    "text": "important the first rule that you have the rule zero that I'm showing here takes the highest precedence and this",
    "start": "795600",
    "end": "801000"
  },
  {
    "text": "one has an explicit action allow this is very different from Network policies because Network policies you just Define",
    "start": "801000",
    "end": "807000"
  },
  {
    "text": "the policy and everything goes boom default denying then you have allow roles in it here you have to ask what",
    "start": "807000",
    "end": "812680"
  },
  {
    "text": "you want and you can have three types of actions allow deny and pass the allow",
    "start": "812680",
    "end": "818240"
  },
  {
    "text": "and the deny are self-explanatory the pass is a neat feature very cool feature which is what lets you delegate to your",
    "start": "818240",
    "end": "824399"
  },
  {
    "text": "network policies right which which is what I showed in the previous slide so we'll look at that in the moment also so",
    "start": "824399",
    "end": "830079"
  },
  {
    "text": "in this case what we're seeing is we are defining some peers this is my monitoring Nam space that I'm matching and I'm saying all Ingress traffic from",
    "start": "830079",
    "end": "836199"
  },
  {
    "text": "my monitoring namespace towards my subject that is or my tenant workloads should be allowed so it's an L3 match",
    "start": "836199",
    "end": "842639"
  },
  {
    "text": "condition we also allow for L4 match conditions you can have port numbers or",
    "start": "842639",
    "end": "847920"
  },
  {
    "text": "named ports or Port ranges using any of these you'll be able to select traffic",
    "start": "847920",
    "end": "853199"
  },
  {
    "text": "and in this case I'm specifically showing some examples to to highlight that so the second rule I have here is a",
    "start": "853199",
    "end": "859920"
  },
  {
    "text": "is a pass rule and the third rule is a deny rule so they have precedence right so the allows the first the passes the",
    "start": "859920",
    "end": "865959"
  },
  {
    "text": "second and the the denies the third here cuz that's how you're order them in your Ingress pipeline Ingress rules and in",
    "start": "865959",
    "end": "872240"
  },
  {
    "text": "case of pass it's seeing that all traffic coming from your secur tenance towards any other workload you don't",
    "start": "872240",
    "end": "878720"
  },
  {
    "text": "want to take the decision as an admin but you're actually taking the decision of letting the network policies kicking so it's still a decision it's just your",
    "start": "878720",
    "end": "884839"
  },
  {
    "text": "delegating the job to your namespace SL tenant owners same thing for egress you can",
    "start": "884839",
    "end": "892120"
  },
  {
    "text": "have up to 100 eras rules in the same object and we have an experimental side",
    "start": "892120",
    "end": "897279"
  },
  {
    "text": "Channel where we start adding ing new fields and egress has two new peers which are not present in Ingress they",
    "start": "897279",
    "end": "903040"
  },
  {
    "text": "are the nodes and the networks and nodes lets you do these cool things like being",
    "start": "903040",
    "end": "908839"
  },
  {
    "text": "able to express you want to allow all traffic to your QB API server you can use a node selector so that when your",
    "start": "908839",
    "end": "914079"
  },
  {
    "text": "node IP changes you're scaling down having maintenance you don't have to change your policy right because it",
    "start": "914079",
    "end": "919199"
  },
  {
    "text": "automatically selects the nodes the side arranges are important because you want to be able to talk to",
    "start": "919199",
    "end": "925720"
  },
  {
    "text": "things outside your cluster so egress like John was mentioning to Splunk S3 buckets you want to be able to tell",
    "start": "925720",
    "end": "932040"
  },
  {
    "text": "which what all outside the cluster should be accessible to by the pods so in all in all the nodes and networks are",
    "start": "932040",
    "end": "938959"
  },
  {
    "text": "still experimental we're trying to get it into standard we're waiting for more implementations and feedback but if you",
    "start": "938959",
    "end": "945120"
  },
  {
    "text": "have use cases to have them in the Ingress do let us know and we have an an enhancement proposal open to let us do",
    "start": "945120",
    "end": "951519"
  },
  {
    "text": "that and coming to Baseline arban Network policy the API format is pretty much exactly the same except it's a",
    "start": "951519",
    "end": "958079"
  },
  {
    "text": "single t because there's only one BMP in your cluster you do not need a priority field obviously and this is usually used",
    "start": "958079",
    "end": "964680"
  },
  {
    "text": "as something that you can tell deny everything to anything right so and it also does not have a pass action because",
    "start": "964680",
    "end": "970639"
  },
  {
    "text": "you don't have anything to fall underneath too so it's just allow or deny in case of",
    "start": "970639",
    "end": "976199"
  },
  {
    "text": "P&P so tying all this back to mastercard's use case here where they were trying to micros segment their",
    "start": "976199",
    "end": "981720"
  },
  {
    "text": "cluster and they're trying to have their microservices be secure by default they",
    "start": "981720",
    "end": "988199"
  },
  {
    "text": "have multiple teams here the sdn team which is in charge of policies the platform team which is in charge of the",
    "start": "988199",
    "end": "993399"
  },
  {
    "text": "security for the platform so if you create an& and just say I want all my name spaces to be be allowed to talk to",
    "start": "993399",
    "end": "1000160"
  },
  {
    "text": "Ingress to DNS get traffic from monitoring it just applies throughout right then the next time the",
    "start": "1000160",
    "end": "1006000"
  },
  {
    "text": "provisioning request comes in the next name space you create you don't have to repeat this over so nobody's stepping on",
    "start": "1006000",
    "end": "1011160"
  },
  {
    "text": "each other and because of the whole priority Fields the teams know and can split amongst themselves what priority",
    "start": "1011160",
    "end": "1017920"
  },
  {
    "text": "ranges they're going to use the sdn team can use x to zed range and the the",
    "start": "1017920",
    "end": "1023680"
  },
  {
    "text": "infrastructure team can use the other range right like a to B range which they not overlapping so there's also the nice",
    "start": "1023680",
    "end": "1028880"
  },
  {
    "text": "use case where you can be able to coexist using ARB Network policies so multiple teams can use them to easily",
    "start": "1028880",
    "end": "1034959"
  },
  {
    "text": "deploy things so John is going to show a demo um with all of this on how this works",
    "start": "1034959",
    "end": "1042038"
  },
  {
    "text": "under the hood so over to you thanks s so we'll get started and uh",
    "start": "1042039",
    "end": "1048919"
  },
  {
    "text": "quick description of what we have here in our environment is that we have 10 tenants uh created uh each with five",
    "start": "1048919",
    "end": "1056440"
  },
  {
    "text": "microservices and we'll go ahead and get this get this rolling so what that enables us to to show is we've got uh 50",
    "start": "1056440",
    "end": "1063600"
  },
  {
    "text": "name spaces created and right now we have no micr segmentation in",
    "start": "1063600",
    "end": "1069280"
  },
  {
    "text": "place um what we'll want to do is focus on two of the tenants AA and BB each",
    "start": "1069280",
    "end": "1074640"
  },
  {
    "text": "have five microservices they need to be able to seamlessly talk to each other but not across so we'll test the first",
    "start": "1074640",
    "end": "1080159"
  },
  {
    "text": "one right as we see success AA can talk to its microservices we'll see if AA can talk",
    "start": "1080159",
    "end": "1087120"
  },
  {
    "text": "to BB's microservices yes it can and that's not desirable we don't have Micro segmentation",
    "start": "1087120",
    "end": "1093400"
  },
  {
    "text": "yet that's what we're looking for they are different tenants so what do we do",
    "start": "1093400",
    "end": "1098559"
  },
  {
    "text": "so at first we're going to go and create a baseline admin Network policy as you",
    "start": "1098559",
    "end": "1104720"
  },
  {
    "text": "see our selector is or our subject is going to be selected based on that all",
    "start": "1104720",
    "end": "1109840"
  },
  {
    "text": "of our tenant workloads are labeled as tenant workloads and then we have a default deny for Ingress and egress so",
    "start": "1109840",
    "end": "1116480"
  },
  {
    "text": "now that we've applied that policy we can see if we've got micr segmentation in place and as you can see we've broken",
    "start": "1116480",
    "end": "1122520"
  },
  {
    "text": "the communication from AA to its its microser it's backend microservices uh as well so it's not",
    "start": "1122520",
    "end": "1129679"
  },
  {
    "text": "working we need an admin Network policy for this tenant um as you'll see for our uh our subject and our selectors we've",
    "start": "1129679",
    "end": "1138200"
  },
  {
    "text": "got the at uid which is unique per tenant and that's what we're going to that's the label we're going to use to",
    "start": "1138200",
    "end": "1144159"
  },
  {
    "text": "identify for this admin Network policy than anything labeled with that is good to communicate with itself so we'll go",
    "start": "1144159",
    "end": "1150080"
  },
  {
    "text": "ahead and apply that policy and now we'll test",
    "start": "1150080",
    "end": "1155880"
  },
  {
    "text": "again so AA is trying to connect to its internal micro microservices we're checking to a couple of them but we're",
    "start": "1155880",
    "end": "1162360"
  },
  {
    "text": "not there yet right so what do we need so we need the aforementioned uh admin",
    "start": "1162360",
    "end": "1167640"
  },
  {
    "text": "Network policy the simple policy that'll give us access to the infrastructure needs well in this case we use the the",
    "start": "1167640",
    "end": "1174200"
  },
  {
    "text": "same subject as tenant workloads and now we're granting access to DNS monitoring but you can put whatever else we we",
    "start": "1174200",
    "end": "1180960"
  },
  {
    "text": "would need in here that's part of the infrastructure and now we'll test again",
    "start": "1180960",
    "end": "1186440"
  },
  {
    "text": "all right so we have success like we have AA is now able to talk to its backend microservices so once this is uh",
    "start": "1186440",
    "end": "1194600"
  },
  {
    "text": "finished with its test we'll go ahead and create uh the admin Network policy see for the rest of the",
    "start": "1194600",
    "end": "1201400"
  },
  {
    "text": "tenants got this scripted uh behind the scenes so you won't see all the actual applies but we'll see the",
    "start": "1201400",
    "end": "1208279"
  },
  {
    "text": "results and one thing you'll notice here is that first policy the allow infra remains unchanged uh we're adding nine",
    "start": "1208400",
    "end": "1214880"
  },
  {
    "text": "new tenants but yet we don't have to touch that admin Network policy uh that allows infra and as you can see here we",
    "start": "1214880",
    "end": "1220840"
  },
  {
    "text": "have uh all of our tenants with an admin Network policy and now we can go back to test our use cases so let's run a test",
    "start": "1220840",
    "end": "1228679"
  },
  {
    "text": "to see if AA can still talk to BB's back ends which means they would uh not be",
    "start": "1228679",
    "end": "1234840"
  },
  {
    "text": "micr segmented if that worked so we'll kick off another test and we will watch",
    "start": "1234840",
    "end": "1240559"
  },
  {
    "text": "it fail so now we've micro segmented uh tenant AA from 10 to BB uh and we'll go",
    "start": "1240559",
    "end": "1247120"
  },
  {
    "text": "all the way down uh the list of of that um but let's make sure that BB can talk",
    "start": "1247120",
    "end": "1252640"
  },
  {
    "text": "to its own microservices we haven't broken anything else and finally you know we see that it that we're",
    "start": "1252640",
    "end": "1258720"
  },
  {
    "text": "successful there as well so and we still have our admin our Baseline admin Network policy and uh we're good to go",
    "start": "1258720",
    "end": "1265679"
  },
  {
    "text": "we now have a cluster that's micr",
    "start": "1265679",
    "end": "1269080"
  },
  {
    "text": "[Applause] [Laughter]",
    "start": "1270850",
    "end": "1277039"
  },
  {
    "text": "segmented so coming to the caveats of the the API that you probably want to be aware about is so because you don't like",
    "start": "1277039",
    "end": "1285240"
  },
  {
    "text": "I mentioned it's not an implicit deny like with with your network policies so it's like when if you're an network",
    "start": "1285240",
    "end": "1291840"
  },
  {
    "text": "administrator you're going to choose if you want to allow and deny so it's good to be explicit uh good to remember to be",
    "start": "1291840",
    "end": "1297039"
  },
  {
    "text": "explicit there is one major difference between Network policies and admin Network policies and it's good to",
    "start": "1297039",
    "end": "1303559"
  },
  {
    "text": "remember that you want you don't have any more implicit denies and for Ingress",
    "start": "1303559",
    "end": "1309120"
  },
  {
    "text": "the only kind of peers you can have is pods so it's namespace selector or pod selector so you when you say a default",
    "start": "1309120",
    "end": "1316279"
  },
  {
    "text": "deny like I'm showing here from name spaces it's an empty selector which means it selects all pods that's the",
    "start": "1316279",
    "end": "1324039"
  },
  {
    "text": "worst that is the best case or SL worst case you can go with right when you want to say deny all traffic it literally",
    "start": "1324039",
    "end": "1329360"
  },
  {
    "text": "means denying everything from your pods in the cluster you don't have a way to have an implicit deny or like with",
    "start": "1329360",
    "end": "1335440"
  },
  {
    "text": "network policies you can still probably get traffic from external to the part if you've connected directly right but we",
    "start": "1335440",
    "end": "1340960"
  },
  {
    "text": "don't usually have use cases in kubernets where pods are being talked to directly from external stuff you usually",
    "start": "1340960",
    "end": "1347080"
  },
  {
    "text": "use services to talk to it but we are having an Ingress and pep to try to see if we can add more types of peers but",
    "start": "1347080",
    "end": "1354360"
  },
  {
    "text": "just FYI that you cannot do a default deny all you can only do a default deny",
    "start": "1354360",
    "end": "1359520"
  },
  {
    "text": "everything from my pods another uh caveat here is with",
    "start": "1359520",
    "end": "1365320"
  },
  {
    "text": "again empty selectors but if you put them in the subject they're going to select everything in your name space and",
    "start": "1365320",
    "end": "1370679"
  },
  {
    "text": "since we don't have a differentiation of system name spaces and tenant name spaces it's as an end user you have to",
    "start": "1370679",
    "end": "1377799"
  },
  {
    "text": "take that extra step to label all your tenant name spaces so don't put empty",
    "start": "1377799",
    "end": "1382840"
  },
  {
    "text": "selector in your subject because it will select all your name spaces including your infra name spaces so you can pretty",
    "start": "1382840",
    "end": "1389720"
  },
  {
    "text": "much lock yourself up if you're not careful and then if you do it you fa deny it's II so that's one thing to look",
    "start": "1389720",
    "end": "1395799"
  },
  {
    "text": "out for and um specifying the Nam space and name spaces or pods or actually the",
    "start": "1395799",
    "end": "1403159"
  },
  {
    "text": "Pod selectors in& are only cni pods so the host Network pods are not even part of the spec both in subject and peers",
    "start": "1403159",
    "end": "1410840"
  },
  {
    "text": "that's also one thing to keep in mind and like I mentioned the nodes and networks are only in your egress it's",
    "start": "1410840",
    "end": "1418200"
  },
  {
    "text": "not in your Ingress but thanks to this like I said you don't have to create a hole for your cubet health probe to work",
    "start": "1418200",
    "end": "1425720"
  },
  {
    "text": "because you simply cannot even deny anything coming from the node it's always an allow so that's a side benefit",
    "start": "1425720",
    "end": "1431360"
  },
  {
    "text": "of it that you don't have to open a ho for your probe another caveat here is in in",
    "start": "1431360",
    "end": "1437679"
  },
  {
    "text": "master cards case is they're using explicit allow for all microservices within their tenants right to be able to",
    "start": "1437679",
    "end": "1444120"
  },
  {
    "text": "talk to each other and then they have a deny for cross tenants but in future when they plan to use Network policies",
    "start": "1444120",
    "end": "1450600"
  },
  {
    "text": "they're going to have to flip this to a pass action because if you want finer grained controls if for explicitly doing",
    "start": "1450600",
    "end": "1456520"
  },
  {
    "text": "an allow you're not going to be able to hit your network policies so when you're designing your admin Network policies",
    "start": "1456520",
    "end": "1463520"
  },
  {
    "text": "it's always good to keep that in mind that you probably don't want an explicit ow or a deny unless you're really sure",
    "start": "1463520",
    "end": "1470279"
  },
  {
    "text": "about it if you want to delegate it you need a pass creating multiple admin Network",
    "start": "1470279",
    "end": "1476559"
  },
  {
    "text": "policies with same priorities is also something to be careful about if you",
    "start": "1476559",
    "end": "1482039"
  },
  {
    "text": "have overlapping rules like what I'm showing here 2ps where you're doing the exact opposite action you're allowing on",
    "start": "1482039",
    "end": "1487919"
  },
  {
    "text": "one side and denying on the other side as an implementation you don't know which one to give precedence to right so",
    "start": "1487919",
    "end": "1493799"
  },
  {
    "text": "in this case we are saying that as an API we're just saying one of them will be a applied which one is going to be",
    "start": "1493799",
    "end": "1500440"
  },
  {
    "text": "applied is going to be decided by your implementation or the cni that's implementing the API and finally the Baseline is just one",
    "start": "1500440",
    "end": "1507760"
  },
  {
    "text": "single turn object so use it wisely usually it's probably better to use it as select all your tenant name spaces",
    "start": "1507760",
    "end": "1515200"
  },
  {
    "text": "and then do the deny right so it forces and in doing this actually forces your end users to be able to create allow",
    "start": "1515200",
    "end": "1522000"
  },
  {
    "text": "Network policies on top so you're making it a little bit harder for them when you put this deny it's good to you know have",
    "start": "1522000",
    "end": "1528039"
  },
  {
    "text": "that use Kee in mind and yeah so over to John who will",
    "start": "1528039",
    "end": "1533120"
  },
  {
    "text": "be talking about the lessons learned and what's next for for their micr segmentation Journey thank you so some",
    "start": "1533120",
    "end": "1540360"
  },
  {
    "text": "lessons learned you know one thing that was pretty clear to us micr segmentation controls require you know internal",
    "start": "1540360",
    "end": "1546600"
  },
  {
    "text": "collaboration across teams I mean we had to get together with the sdn team um",
    "start": "1546600",
    "end": "1551919"
  },
  {
    "text": "corporate security uh the application teams and and the whole uh workflow of",
    "start": "1551919",
    "end": "1557600"
  },
  {
    "text": "getting things to deployed so it was a collaborative effort not just something owned by the platform uh we do have PCI",
    "start": "1557600",
    "end": "1563919"
  },
  {
    "text": "compliance but it's more than micros segmentation it's about becoming secure by default you know our implementation",
    "start": "1563919",
    "end": "1569480"
  },
  {
    "text": "says that anything that is going to be deployed has to be is secured unless",
    "start": "1569480",
    "end": "1574679"
  },
  {
    "text": "it's explicitly approved and implemented um it took a collaborative",
    "start": "1574679",
    "end": "1580919"
  },
  {
    "text": "design uh we worked with surria uh and and the working group to explain our use",
    "start": "1580919",
    "end": "1586200"
  },
  {
    "text": "cases to make sure that that that we were heard and we can have uh an implantation that that met our needs uh",
    "start": "1586200",
    "end": "1592880"
  },
  {
    "text": "and also starting simple I mean as you seen we've uh started with a minimalistic approach we want to keep it",
    "start": "1592880",
    "end": "1598440"
  },
  {
    "text": "simple and that that helps be us to be more secure and and potentially what's next",
    "start": "1598440",
    "end": "1604799"
  },
  {
    "text": "we kind of hinted at it with the the switch from an explicit allow to a pass that will allow us that when we want to",
    "start": "1604799",
    "end": "1611760"
  },
  {
    "text": "start using the the blue dotted lines of allowing different um microservices or",
    "start": "1611760",
    "end": "1617520"
  },
  {
    "text": "tenants uh to communicate with each other we can delegate some of that responsibility to the network policy",
    "start": "1617520",
    "end": "1622919"
  },
  {
    "text": "very specific for that uh that action where as if it is as a pass and we don't",
    "start": "1622919",
    "end": "1628600"
  },
  {
    "text": "have a network policy uh defined it'll work just the same as an allow but if we",
    "start": "1628600",
    "end": "1634200"
  },
  {
    "text": "want to delegate it we have the opportunity to do that so we don't walk through any one-way doors as we're",
    "start": "1634200",
    "end": "1639760"
  },
  {
    "text": "designing this architecture of how we start simple and then as the requirements come in to get a little",
    "start": "1639760",
    "end": "1645480"
  },
  {
    "text": "more granular um and that's it in questions and we",
    "start": "1645480",
    "end": "1650799"
  },
  {
    "text": "made it through without using the two letters AI at all in this",
    "start": "1650799",
    "end": "1656830"
  },
  {
    "text": "[Applause]",
    "start": "1656830",
    "end": "1663360"
  },
  {
    "text": "talk hello hello um John derko from fiser uh we're also not a bank uh but",
    "start": "1663360",
    "end": "1670760"
  },
  {
    "text": "regulated like a bank much like you guys are so I think we uh we share some of",
    "start": "1670760",
    "end": "1675919"
  },
  {
    "text": "the same challenges uh we have started looking at the admin Network policy API",
    "start": "1675919",
    "end": "1681840"
  },
  {
    "text": "on on open shift because you know now that that's available but we're we're coming from close to three years now as",
    "start": "1681840",
    "end": "1689360"
  },
  {
    "text": "a tigera Enterprise user um for uh open shift in Calico cloud and we are finding",
    "start": "1689360",
    "end": "1697600"
  },
  {
    "text": "you know it looks like there's some tricks there that could be handy but we're still finding it um you know not",
    "start": "1697600",
    "end": "1704480"
  },
  {
    "text": "giving us the sort of flexibility we had with uh tigera Network policies so I'm",
    "start": "1704480",
    "end": "1709519"
  },
  {
    "text": "I'm curious as to what you might have been using before admin Network policies were you coming from another product and",
    "start": "1709519",
    "end": "1717440"
  },
  {
    "text": "um you know how have you thought of that uh and you know if you were what's made",
    "start": "1717440",
    "end": "1723279"
  },
  {
    "text": "you sort of move towards admin Network policy sort of very early in its development versus some you know some",
    "start": "1723279",
    "end": "1729880"
  },
  {
    "text": "more established uh vendors in the space so one of the concerns so we did we do",
    "start": "1729880",
    "end": "1735760"
  },
  {
    "text": "have an open source-based uh deployment of of kubernetes for another use case and",
    "start": "1735760",
    "end": "1741240"
  },
  {
    "text": "and Calico was the the cni of choice for that and we did go with Calico GL Global",
    "start": "1741240",
    "end": "1746360"
  },
  {
    "text": "Network policies and that seemed to to work well for us uh but as we",
    "start": "1746360",
    "end": "1751799"
  },
  {
    "text": "transitioned to using open shift because we wanted a vendor partner there is what we discovered when we were uh spending a",
    "start": "1751799",
    "end": "1759039"
  },
  {
    "text": "lot of time doing low value stuff with trying to handle it all open source that",
    "start": "1759039",
    "end": "1764480"
  },
  {
    "text": "with ovn being what comes with um with open shift we wanted to go down",
    "start": "1764480",
    "end": "1770919"
  },
  {
    "text": "that road and have that level of support so it was more of a you know an architectural and support decision then",
    "start": "1770919",
    "end": "1776960"
  },
  {
    "text": "you know solution a met some needs solution B did it better and that's why we wanted to adopt the admin Network",
    "start": "1776960",
    "end": "1783960"
  },
  {
    "text": "policy with obn commes and not add another cni onto the platform where we",
    "start": "1783960",
    "end": "1789120"
  },
  {
    "text": "would have to have two vendors to kind of pull that off and that's more of a decision than the actual technical",
    "start": "1789120",
    "end": "1794919"
  },
  {
    "text": "implementations of either or that that's fair enough for we're also getting pressure from our Management on the the",
    "start": "1794919",
    "end": "1800799"
  },
  {
    "text": "pricing with teg a Enterprise it's one of the reasons that we've started looking at whether we can make it work",
    "start": "1800799",
    "end": "1806159"
  },
  {
    "text": "with admin Network policies but it's a little painful right now yeah yeah I think one thing that I would add is is",
    "start": "1806159",
    "end": "1812559"
  },
  {
    "text": "you know with with just native raw kubernetes Network policies you have a",
    "start": "1812559",
    "end": "1819200"
  },
  {
    "text": "very delicate dance between the moment that name space is created you layer on policy and then stuff can talk uh when",
    "start": "1819200",
    "end": "1826559"
  },
  {
    "text": "you have a default deny uh posture you're dancing across multiple",
    "start": "1826559",
    "end": "1832279"
  },
  {
    "text": "automation systems to facilitate that admin Network policy really helps with that for common services and you know as",
    "start": "1832279",
    "end": "1840559"
  },
  {
    "text": "you can imagine we have a number of security services that are common across all of our Enterprise so we need to be able to uh support that there and then",
    "start": "1840559",
    "end": "1848760"
  },
  {
    "text": "the fewer objects you're managing also the better that's surface area thank you yeah but we should talk offline for the",
    "start": "1848760",
    "end": "1856360"
  },
  {
    "text": "pain points they're having but yeah for Pur to Nadia as well at the other um rep",
    "start": "1856360",
    "end": "1862480"
  },
  {
    "text": "and we're obviously a big redhe hat customer so expect to hear more from us and and John I think I'll reach out to",
    "start": "1862480",
    "end": "1868080"
  },
  {
    "text": "you um I think we we might have some shared colleagues cheers oh yeah",
    "start": "1868080",
    "end": "1875320"
  },
  {
    "text": "cheers hey um with this level of network policy complexity how do you um unit",
    "start": "1875320",
    "end": "1881240"
  },
  {
    "text": "test or check that PR that comes in that changes something that it doesn't cause unintended consequences like once it",
    "start": "1881240",
    "end": "1886880"
  },
  {
    "text": "gets more complex the good news is that's not John's",
    "start": "1886880",
    "end": "1892080"
  },
  {
    "text": "problem he just gonna say that I was just going to go so like a",
    "start": "1892080",
    "end": "1898240"
  },
  {
    "text": "lot of a lot of you guys we have separate actors in the ecosystem so we have a team that they're their job is to",
    "start": "1898240",
    "end": "1904960"
  },
  {
    "text": "focus on managing Network policy that's what they do across thousands literally",
    "start": "1904960",
    "end": "1910799"
  },
  {
    "text": "thousands of firewalls globally right so the uh the combination of you know bare",
    "start": "1910799",
    "end": "1917320"
  },
  {
    "text": "metal node talking to a container in this container runtime or a virtual",
    "start": "1917320",
    "end": "1922679"
  },
  {
    "text": "machine talking to you know heck I don't know some physical Appliance sitting somewhere uh there is very robust",
    "start": "1922679",
    "end": "1928720"
  },
  {
    "text": "testing around that uh and then there are different capabilities that we have for a lot of our applications that uh",
    "start": "1928720",
    "end": "1936559"
  },
  {
    "text": "when they do a deployment they run smoke tests we do the same thing with network changes too hey you know make sure you",
    "start": "1936559",
    "end": "1942919"
  },
  {
    "text": "didn't do yourself some harm with this change uh so we rely a lot on smoke tests as well",
    "start": "1942919",
    "end": "1948840"
  },
  {
    "text": "cool and just a followup um how do you handle",
    "start": "1948840",
    "end": "1954519"
  },
  {
    "text": "um all of the DNS lookups across all of your plethora of namespaces like are you",
    "start": "1954519",
    "end": "1959960"
  },
  {
    "text": "ending up with like end do problems where you have so many different combinations of like with the like the",
    "start": "1959960",
    "end": "1966360"
  },
  {
    "text": "way the services are configured you need to know which tenant in namespace and you have a lot of them kind of uh we can",
    "start": "1966360",
    "end": "1972679"
  },
  {
    "text": "we can chat about that offline we take a little bit of a different approach a lot of our services we we don't expose them",
    "start": "1972679",
    "end": "1978519"
  },
  {
    "text": "just to a cluster we expose them to the whole region uh so we say hey I want to go talk to John in region Fu and that",
    "start": "1978519",
    "end": "1985519"
  },
  {
    "text": "has a stable DNS name uh so there's a couple of ways you can you can kind of slice and dice that the previous talk",
    "start": "1985519",
    "end": "1992760"
  },
  {
    "text": "had a couple strategies that were worth looking at too oh we just ran out of time before",
    "start": "1992760",
    "end": "1998399"
  },
  {
    "text": "Robbie stepped up last question are you guys planning to implement the log capability because",
    "start": "1998399",
    "end": "2005159"
  },
  {
    "text": "that was very handful handy for us when like just allow deny they had an option for log also so then we could have",
    "start": "2005159",
    "end": "2012000"
  },
  {
    "text": "exactly seen that packet in the D message to understand what is going on Yeah by log are you trying to have a dry",
    "start": "2012000",
    "end": "2019760"
  },
  {
    "text": "run mode of sorts where it's not applied but you want to see what would be the result beforehand before you apply the",
    "start": "2019760",
    "end": "2026840"
  },
  {
    "text": "policy is that what you mean by log yeah when I was developing I used to say allow and log or deny and log together",
    "start": "2026840",
    "end": "2033880"
  },
  {
    "text": "right so that at least the cni the Calico allowed us to do that calco I",
    "start": "2033880",
    "end": "2039000"
  },
  {
    "text": "could go and do the D message and look at especially during the development time when I'm nailing the policies this",
    "start": "2039000",
    "end": "2044880"
  },
  {
    "text": "really helped me out right so I think so that might help even here so yeah it's um definitely reach out to us in the",
    "start": "2044880",
    "end": "2051679"
  },
  {
    "text": "subgroup we are trying to design some of these add-ons to the API to be able to express finer brain things like the",
    "start": "2051679",
    "end": "2058280"
  },
  {
    "text": "Tryon mode or logging has been mostly in on the implementation level so each cni",
    "start": "2058280",
    "end": "2063960"
  },
  {
    "text": "does their type of logging but definitely talk to us we have some we are trying to have an enhancement",
    "start": "2063960",
    "end": "2069480"
  },
  {
    "text": "Proposal with use cases for you know end users to be able to do these things so we are it's on our road",
    "start": "2069480",
    "end": "2076960"
  },
  {
    "text": "map thank you every thank you",
    "start": "2079480",
    "end": "2084240"
  }
]