[
  {
    "text": "bonju and good morning my name is Victor uh I'm from a company called Cosmic and I'm here to talk to you about extending",
    "start": "80",
    "end": "7760"
  },
  {
    "text": "backstage with plugins built with uh web assembly um before we get started real",
    "start": "7760",
    "end": "13759"
  },
  {
    "text": "quick uh I love to do the show of hands uh who here has heard of web assembly all right so for people maybe",
    "start": "13759",
    "end": "20840"
  },
  {
    "text": "watching online that's like half maybe half the people in the room are kind of sparse here uh but okay I'll keep",
    "start": "20840",
    "end": "28080"
  },
  {
    "text": "going so you in case you're very very lost and somehow ended up in this room and don't know what backstage is uh so",
    "start": "28080",
    "end": "35160"
  },
  {
    "text": "so I I kind of think of Backstage this way uh you get to write code right you click some buttons uh somewhere right",
    "start": "35160",
    "end": "41520"
  },
  {
    "text": "computers get hot your code goes up you pay some more Cloud bills uh and hopefully your customers you know they",
    "start": "41520",
    "end": "47360"
  },
  {
    "text": "do better right and uh and backstage makes this really easy whereas people would uh prior to now sort of Cobble",
    "start": "47360",
    "end": "53840"
  },
  {
    "text": "this together with lots of other scripts and uh sort of you know GitHub actions and uh Travy if you're still there uh so",
    "start": "53840",
    "end": "63120"
  },
  {
    "text": "why are we why are we here right uh this talk uh I want to introduce a bit of experimenting we've been doing around",
    "start": "63120",
    "end": "70240"
  },
  {
    "text": "backstage and making devops easier uh and trying to expand the plugins that",
    "start": "70240",
    "end": "76040"
  },
  {
    "text": "are available for the backstage ecosystem so right now uh backstage is essentially a large Javascript app and",
    "start": "76040",
    "end": "83680"
  },
  {
    "text": "to extend backstage you need to write JavaScript right just for both front end and backend plugins they sort of work",
    "start": "83680",
    "end": "89280"
  },
  {
    "text": "all the same way uh also don't worry these these slides are a bit text heavy and they'll be available after uh there'll be a QR code",
    "start": "89280",
    "end": "95079"
  },
  {
    "text": "and and a link for for folks to look at uh they also saw on skedge so uh you can check them out there uh but yeah so so",
    "start": "95079",
    "end": "102079"
  },
  {
    "text": "the the main point here is really that we want to enable developers who don't write JavaScript to write uh extensions",
    "start": "102079",
    "end": "108960"
  },
  {
    "text": "to Backstage uh when when the the the problem of building a plugin ecosystem",
    "start": "108960",
    "end": "115360"
  },
  {
    "text": "is pretty large right there are lots of ways you can do it uh backstage is a JavaScript right it's a JavaScript",
    "start": "115360",
    "end": "120759"
  },
  {
    "text": "application so some of the more native options is stuff like V8 isolates um",
    "start": "120759",
    "end": "125799"
  },
  {
    "text": "there's always the the general sort of approach of virtual machines which give you good safety right that's they're basically the the gold standard on on",
    "start": "125799",
    "end": "133360"
  },
  {
    "text": "isolation that we have available uh and then there's there are approaches like a sort of microservice based approach",
    "start": "133360",
    "end": "138800"
  },
  {
    "text": "where you could you know theoretically do an iframe in the application and then you know push that off to microservice",
    "start": "138800",
    "end": "144959"
  },
  {
    "text": "and then have uh have backend calls also go go there uh and the reason want to",
    "start": "144959",
    "end": "150720"
  },
  {
    "text": "add assembly web assembly to this list is it it actually has a lot of uh features and benefits from the top three",
    "start": "150720",
    "end": "157400"
  },
  {
    "text": "and is a lot easier to deploy now with some of the changes that are coming in the ecosystem so I'm going to I'm going to",
    "start": "157400",
    "end": "163640"
  },
  {
    "text": "run through very quickly what web web assembly is uh it's it's deep but this should be mostly all you need to know so",
    "start": "163640",
    "end": "171080"
  },
  {
    "text": "the tldr and web assembly that that should take you very far is that it's a compile Target right so you write C code",
    "start": "171080",
    "end": "177480"
  },
  {
    "text": "you get native code out right it works on one platform works on one stack sometimes even specific hardware and",
    "start": "177480",
    "end": "183480"
  },
  {
    "text": "then you we we uh switch to something like Java and what you do is you ship",
    "start": "183480",
    "end": "189480"
  },
  {
    "text": "the thing that runs the code right you you sort of compile bite code and that's what you get out but you need the jvm",
    "start": "189480",
    "end": "194560"
  },
  {
    "text": "you need the JRE right uh python code is is pretty much the same thing uh web assembly is like uh Java are like python",
    "start": "194560",
    "end": "202400"
  },
  {
    "text": "in that you write code uh that compiles down to web assembly uh what you see",
    "start": "202400",
    "end": "207920"
  },
  {
    "text": "here is the web assembly textual format but there is obviously also a binary format so we generally just think of",
    "start": "207920",
    "end": "213000"
  },
  {
    "text": "these as web assembly binaries uh this you can think of if you've been around long enough you can think of this as the promise of java but",
    "start": "213000",
    "end": "219799"
  },
  {
    "text": "it actually works uh in multiple places uh more places than Java uh so this is a a bit of a",
    "start": "219799",
    "end": "227920"
  },
  {
    "text": "conceptualization of the of the uh concept we just talked about there's lots of ways to compile right there's",
    "start": "227920",
    "end": "233519"
  },
  {
    "text": "lots of ways to build the thing you're going to ship if you're building a native binary but what uh web assembly",
    "start": "233519",
    "end": "239319"
  },
  {
    "text": "does is gives you a sort of intermediate uh binary to ship as long as you have a web assembly compliant runtime uh over",
    "start": "239319",
    "end": "246280"
  },
  {
    "text": "there on the right uh and you can run it from all these different languages uh and these are actually the languages",
    "start": "246280",
    "end": "252319"
  },
  {
    "text": "that are best supported right now so you've got C uh C++ is there uh and this",
    "start": "252319",
    "end": "258560"
  },
  {
    "text": "is really via clang so this is really um taking advantage of that tool chain uh you got rust you've got go C uh Python",
    "start": "258560",
    "end": "267360"
  },
  {
    "text": "and JavaScript also typescript obviously which um trans piles down and right now the wasm run times that exist out there",
    "start": "267360",
    "end": "274320"
  },
  {
    "text": "have really good support for many uh UPC and actually risk risk uh risk 5 is not on here but um there's sort of support",
    "start": "274320",
    "end": "281639"
  },
  {
    "text": "uh burgeoning for that as well so lots of architectures are supported uh and it's it's pretty easy to uh to deploy at",
    "start": "281639",
    "end": "287320"
  },
  {
    "text": "this point so why uh if you remember going back a couple slides there's all these",
    "start": "287320",
    "end": "292800"
  },
  {
    "text": "options there's iets there's virtual machines uh there's you know microservices right why is web assembly",
    "start": "292800",
    "end": "298360"
  },
  {
    "text": "a good fit well so it's sandbox it's it's it's well sandboxed you generally have to give uh permissions to do any",
    "start": "298360",
    "end": "304960"
  },
  {
    "text": "sort of operation like you don't get by default access to the file system uh it's performant uh so this is actually",
    "start": "304960",
    "end": "312000"
  },
  {
    "text": "the I I I went to go look for the most critical sort of piece of research uh on",
    "start": "312000",
    "end": "317120"
  },
  {
    "text": "how fast web assembly is compared to running natively right and natively means a lot of things but in this case",
    "start": "317120",
    "end": "323800"
  },
  {
    "text": "I'm I'm thinking just think C right think is you know uh unsafe close to Assembly Language stuff",
    "start": "323800",
    "end": "330240"
  },
  {
    "text": "uh and web assembly generally runs very quickly uh it's you know built for browsers and built in and built to work",
    "start": "330240",
    "end": "336840"
  },
  {
    "text": "in what could be low low performance and and low capability environments uh and",
    "start": "336840",
    "end": "342880"
  },
  {
    "text": "I've put there for reference python is is very very slow compared to compared to dat of code so it really depends on",
    "start": "342880",
    "end": "348840"
  },
  {
    "text": "what you measure to uh but but it's generally very performant uh web assembly is also crossplatform so I've",
    "start": "348840",
    "end": "354880"
  },
  {
    "text": "covered this a little bit earlier uh but the support for platforms is pretty good uh and even emerging stuff like you know",
    "start": "354880",
    "end": "361240"
  },
  {
    "text": "risk 5 and and stuff that's coming up uh of course this is all um speced out it's Community Driven uh and it's standards",
    "start": "361240",
    "end": "368120"
  },
  {
    "text": "driven so you can go to web assembly.org look at the docs learn more about the security isolation performance uh and",
    "start": "368120",
    "end": "374319"
  },
  {
    "text": "the platforms uh that it targets uh going back to the uh so so",
    "start": "374319",
    "end": "379639"
  },
  {
    "text": "out of the web assembly detour and back to the the point of the talk which is talking about how we can extend",
    "start": "379639",
    "end": "385639"
  },
  {
    "text": "backstage with plugins that are written in you know non Java script languages uh",
    "start": "385639",
    "end": "391240"
  },
  {
    "text": "we actually went ahead and tried to build this uh and well we succeeded which is why I'm here uh and as you know",
    "start": "391240",
    "end": "397479"
  },
  {
    "text": "there are two kinds of backstages uh uh backstage plugins nominally there's frontend uh and backend plugins and so",
    "start": "397479",
    "end": "404360"
  },
  {
    "text": "they work very very similarly but just slightly differently uh first thing we need to do is to create uh an interface",
    "start": "404360",
    "end": "411400"
  },
  {
    "text": "on the and this is a sort of web assembly specific concept I'll I'll introduce it a bit more but you can",
    "start": "411400",
    "end": "416680"
  },
  {
    "text": "think of this kind of like grpc if you've heard of that uh and then what we provide is a CLI that builds and",
    "start": "416680",
    "end": "423759"
  },
  {
    "text": "installs this plugin right so you write uh essentially web assembly binary you",
    "start": "423759",
    "end": "429039"
  },
  {
    "text": "run the CLI and what you get out the other end is a fully built and again JavaScript compatible uh backstage",
    "start": "429039",
    "end": "435960"
  },
  {
    "text": "plugin uh and for backend plugins they're a little bit different right because they're they're basically web servers that live alongside backstage uh",
    "start": "435960",
    "end": "442919"
  },
  {
    "text": "so so they're they're they're a little bit different but the but the the shell is the same we need an interface that sort of describes what a uh backend",
    "start": "442919",
    "end": "450400"
  },
  {
    "text": "plugin is uh and a CLI that uh builds and then serves the request using the",
    "start": "450400",
    "end": "455639"
  },
  {
    "text": "was and binary that you gave it so uh there's there's a lot of",
    "start": "455639",
    "end": "461400"
  },
  {
    "text": "there's a lot to uh this slide even though it looks very simple uh web assembly interface types are a standard",
    "start": "461400",
    "end": "468159"
  },
  {
    "text": "that builds upon the base web assembly standards that let you sort of speak in",
    "start": "468159",
    "end": "473639"
  },
  {
    "text": "high level Concepts like strings and functions and uh sort of",
    "start": "473639",
    "end": "480080"
  },
  {
    "text": "more easy to understand types to the average average developer because at its at its core web assembly can actually",
    "start": "480080",
    "end": "486080"
  },
  {
    "text": "only deal in sort of computations on numbers right so like you see those there you've got like you know sign",
    "start": "486080",
    "end": "491440"
  },
  {
    "text": "32-bit integers and and things like that um but with web assembly types uh the",
    "start": "491440",
    "end": "496479"
  },
  {
    "text": "web interface types which I'll be calling wit from now on so if you hear wit you're going to hear wit a lot uh",
    "start": "496479",
    "end": "501520"
  },
  {
    "text": "but that's what it means and and basically uh you see a simple logging interface there right so up at the",
    "start": "501520",
    "end": "508520"
  },
  {
    "text": "beginning you've got the p package uh and the first first bit of that is a name space and the second bit is a is a",
    "start": "508520",
    "end": "514320"
  },
  {
    "text": "package name you've got an interface here which is basic logging sort of uh uh interface and it's only got one",
    "start": "514320",
    "end": "520719"
  },
  {
    "text": "function in it right it's got log it takes a string and it actually doesn't give anything back it does something with that string uh that logs it",
    "start": "520719",
    "end": "527360"
  },
  {
    "text": "hopefully somewhere right um and the thing at the bottom there is the world",
    "start": "527360",
    "end": "532959"
  },
  {
    "text": "which tells us the sort of interface to the binary so this means that this the",
    "start": "532959",
    "end": "538839"
  },
  {
    "text": "binary that fits this interface exports so lets you call on it uh this logging",
    "start": "538839",
    "end": "545760"
  },
  {
    "text": "interface so other things can call log uh on this binary right and so this is",
    "start": "545760",
    "end": "552480"
  },
  {
    "text": "kind of like a binary level uh interface language or interface description",
    "start": "552480",
    "end": "558600"
  },
  {
    "text": "language which is why it's sort of similar to uh to grpc one thing I do want to note uh to to prevent confusion",
    "start": "558600",
    "end": "565800"
  },
  {
    "text": "is that this interface language is not over the network so this is inside your binary inside",
    "start": "565800",
    "end": "571839"
  },
  {
    "text": "your program uh at function call speeds right this is not you know uh by default going over the network and and incurring",
    "start": "571839",
    "end": "578800"
  },
  {
    "text": "you know Json serialization uh penalties so this is that previous slide",
    "start": "578800",
    "end": "584880"
  },
  {
    "text": "but uh but illustrate a little bit to make it make it a bit easier to understand so you've got your program sort of at the outside uh and you've got",
    "start": "584880",
    "end": "593519"
  },
  {
    "text": "your web assembly runtime there's there's many of them at this point but the one that's kind of keeping up with the standards and helping to test the",
    "start": "593519",
    "end": "599760"
  },
  {
    "text": "standards is called wasm time so inside your program you've got a web assembly runtime in there uh and you've got a",
    "start": "599760",
    "end": "606079"
  },
  {
    "text": "component that's written in let's say one that's written in Rust and another one that's written in go and the way",
    "start": "606079",
    "end": "611240"
  },
  {
    "text": "they can interact with each other or with the um with the runtime itself when you execute them uh is by this Import",
    "start": "611240",
    "end": "617279"
  },
  {
    "text": "and Export system so I'll go back a little bit sort of the export that's here is sort of the uh the export that's",
    "start": "617279",
    "end": "624880"
  },
  {
    "text": "the exports that's pictured here and then there's another component that that is is built specifically to match that",
    "start": "624880",
    "end": "630079"
  },
  {
    "text": "export and so they sort of connect together all right so you you don't",
    "start": "630079",
    "end": "635800"
  },
  {
    "text": "don't try and read this uh but this is basically the entire specification as",
    "start": "635800",
    "end": "641800"
  },
  {
    "text": "we've built it so far for what a backstage frontend plug it in so unfortunately I can't save you from",
    "start": "641800",
    "end": "648000"
  },
  {
    "text": "writing react code and having to uh having to write that in your backstage frontend plugins but um we can sort of",
    "start": "648000",
    "end": "655360"
  },
  {
    "text": "formalize some of these ideas around dependencies and which files are sort of bundled right in the uh in the front end",
    "start": "655360",
    "end": "662279"
  },
  {
    "text": "front end plugin sort of what does what does a front end plugin sort of consist of uh this is useful in of itself",
    "start": "662279",
    "end": "667639"
  },
  {
    "text": "because um especially in the previous talk uh we had some questions around how can you sort of make it make a concrete",
    "start": "667639",
    "end": "674399"
  },
  {
    "text": "requirement on what people produce as plugins and this is this is sort of a way you can do that because the web",
    "start": "674399",
    "end": "680279"
  },
  {
    "text": "assembly binary that comes out of this um you can sort of interp it right you can ask it about itself and of course",
    "start": "680279",
    "end": "685880"
  },
  {
    "text": "you know there can it can lie but uh but in general you you have some uh some leverage",
    "start": "685880",
    "end": "692639"
  },
  {
    "text": "there uh so I'm going to dive just real quick into what this looks like in",
    "start": "692639",
    "end": "698440"
  },
  {
    "text": "regular rust code I'm going to take a step back how many people are familiar with rust and it's sort of tool chain",
    "start": "698440",
    "end": "703680"
  },
  {
    "text": "and uh have touched it all right well uh for for reference that's like four people out of this entire room uh so",
    "start": "703680",
    "end": "710760"
  },
  {
    "text": "we're going to go through this very quickly actually uh most of this is just normal just normal rust config like uh",
    "start": "710760",
    "end": "717040"
  },
  {
    "text": "none of it is is unique uh and this is Tom for those who who who aren't familiar uh but the two things that are",
    "start": "717040",
    "end": "723240"
  },
  {
    "text": "important and sort of web assembly specific here are the specification that the uh the crate type which is uh sort",
    "start": "723240",
    "end": "729320"
  },
  {
    "text": "of like a package type in Rust in Rust speak uh is a dynamic Library uh and the",
    "start": "729320",
    "end": "735360"
  },
  {
    "text": "dependencies is are are is is there's only one really dependency we need here which is a project that helps to turn",
    "start": "735360",
    "end": "742639"
  },
  {
    "text": "with definitions so what what I showed you earlier into code so similar to a",
    "start": "742639",
    "end": "748079"
  },
  {
    "text": "grpc generator or any other kind of like you know let's say an open a API generator uh that's what whb Jen is",
    "start": "748079",
    "end": "754720"
  },
  {
    "text": "doing for us here um and then down at the bottom is actually it's actually optional but what I what I'm telling",
    "start": "754720",
    "end": "760800"
  },
  {
    "text": "Russ there is that the target um and essentially what it should build to is",
    "start": "760800",
    "end": "766079"
  },
  {
    "text": "wasum 32 Wy which is just a a sort of Target triple name for web assembly with",
    "start": "766079",
    "end": "772600"
  },
  {
    "text": "Wy enabled I'll get to what wasi is later but we're not going to go too deep because it is deep uh um for those who",
    "start": "772600",
    "end": "780920"
  },
  {
    "text": "do who don't know rust which is everybody except for four people uh this is probably not going to be much but",
    "start": "780920",
    "end": "786600"
  },
  {
    "text": "this is the what you see at the top there is a generated file so that's some some of the output of that of that",
    "start": "786600",
    "end": "792519"
  },
  {
    "text": "generator I mentioned earlier uh and what you see below are actually some of",
    "start": "792519",
    "end": "797839"
  },
  {
    "text": "the types that we defined uh way back in the WID definition so if I just go back",
    "start": "797839",
    "end": "803440"
  },
  {
    "text": "uh really quickly right here so it's a bit hard to read but the uh the node",
    "start": "803440",
    "end": "808600"
  },
  {
    "text": "dependency is kind of like an object right that I've just defined there it's is called a record on there but it's got",
    "start": "808600",
    "end": "813680"
  },
  {
    "text": "three attributes or three members let's say name version and whether it's a development uh dependency so we see that",
    "start": "813680",
    "end": "821240"
  },
  {
    "text": "that that sort of comes that gets generated and shows up in our we can use it from our code so you see it as the",
    "start": "821240",
    "end": "826760"
  },
  {
    "text": "sort of third import there um and then the struct that's a little bit to the little bit below here is like a it's",
    "start": "826760",
    "end": "833000"
  },
  {
    "text": "like a class you can give it a class but without uh functionality right so um just just data in it but what we are",
    "start": "833000",
    "end": "840000"
  },
  {
    "text": "going to do is hang functionality off of it uh so for the for the rust side when",
    "start": "840000",
    "end": "847440"
  },
  {
    "text": "we specify the node devel uh dependencies which is one of the requirements um the code generally looks like this it's might be a bit hard to",
    "start": "847440",
    "end": "855079"
  },
  {
    "text": "read if you're if you're not a not a rust station but it's it's very it's very simple if you look at the area",
    "start": "855079",
    "end": "860839"
  },
  {
    "text": "right around the middle here where we just make a a a a a vector of no",
    "start": "860839",
    "end": "866880"
  },
  {
    "text": "dependency objects we see that oh we've got a depend and it's it's called react right of course we do because it's it's",
    "start": "866880",
    "end": "872320"
  },
  {
    "text": "a front end uh frontend plugin at the end of the day uh and so that's that's basically what the the general code ends",
    "start": "872320",
    "end": "877920"
  },
  {
    "text": "up looking like it's it's sort of implementations of this interface that we said we were going to fulfill right",
    "start": "877920",
    "end": "884639"
  },
  {
    "text": "the the WID interface and I'll skip over this but it's sort of you can sort of recognize it if you you squint a little",
    "start": "884639",
    "end": "890759"
  },
  {
    "text": "bit you see some some TSX files and and some component names uh and sort of specifying This Is Us fulfilling this",
    "start": "890759",
    "end": "898399"
  },
  {
    "text": "contract again at the binary level right uh so now I'm going to jump into a",
    "start": "898399",
    "end": "903600"
  },
  {
    "text": "little demo of the frontend building um and build a backstage plugin really",
    "start": "903600",
    "end": "909240"
  },
  {
    "text": "quick",
    "start": "909240",
    "end": "911519"
  },
  {
    "text": "here [Music]",
    "start": "915000",
    "end": "922308"
  },
  {
    "text": "oh see",
    "start": "923320",
    "end": "927320"
  },
  {
    "text": "[Music]",
    "start": "929690",
    "end": "937140"
  },
  {
    "text": "all right all right I'm going to zoom in a little bit here hopefully yall can see",
    "start": "950440",
    "end": "956519"
  },
  {
    "text": "this my okay that looks uh reasonably legible",
    "start": "957560",
    "end": "967800"
  },
  {
    "text": "see okay so here's uh here's that code I I mentioned before maybe a bit more",
    "start": "975399",
    "end": "980600"
  },
  {
    "text": "legible than before um and as you can see it's sort of just a list of these node dependency objects right and sort",
    "start": "980600",
    "end": "987519"
  },
  {
    "text": "of things you might recognize you got backstage core components uh you've got some component files in here uh and this",
    "start": "987519",
    "end": "994519"
  },
  {
    "text": "build is pretty slow so I'm going to I'm going to kick it off but first we're going to do is this is rust code we're going to build this rust code and then",
    "start": "994519",
    "end": "1000480"
  },
  {
    "text": "we're going to run the CLI uh that that we've been uh we've been working on here",
    "start": "1000480",
    "end": "1005560"
  },
  {
    "text": "to uh to generate uh a backstage",
    "start": "1005560",
    "end": "1010800"
  },
  {
    "text": "plug-in let's see so this is this is built pretty quick",
    "start": "1016839",
    "end": "1023240"
  },
  {
    "text": "because I've built it before this talk of course uh and this is again uh",
    "start": "1023240",
    "end": "1028520"
  },
  {
    "text": "environment or and toolchain specific right so cargon component is a thing that works for rust uh and for Python",
    "start": "1028520",
    "end": "1034918"
  },
  {
    "text": "and for JavaScript you'll have different tools but generally the the first step is to build your code into a web",
    "start": "1034919",
    "end": "1040720"
  },
  {
    "text": "assembly binary right and that's what I've just done there so now I'm going to run with a little pre uh prepared",
    "start": "1040720",
    "end": "1046678"
  },
  {
    "text": "command I have here the uh CLI that we've been working on so you can see",
    "start": "1046679",
    "end": "1051840"
  },
  {
    "text": "here that um we are generating a sort of front-end plugin um we've given it an ID",
    "start": "1051840",
    "end": "1057640"
  },
  {
    "text": "which is kind of a name like thing we've got a path to the binary and then what actually we also do is install the",
    "start": "1057640",
    "end": "1066039"
  },
  {
    "text": "created plugin into a local you know wherever your uh backstage directory is",
    "start": "1066039",
    "end": "1072280"
  },
  {
    "text": "on disk so I'm going to I'm going to kick that off this does take a little bit of time",
    "start": "1072280",
    "end": "1077320"
  },
  {
    "text": "so we'll uh uh I don't I don't think we'll we'll see how the uh how the Wi-Fi",
    "start": "1077320",
    "end": "1082400"
  },
  {
    "text": "holds up",
    "start": "1082400",
    "end": "1084880"
  },
  {
    "text": "here okay let's",
    "start": "1092520",
    "end": "1096280"
  },
  {
    "text": "see all right while that runs I'm going to I'm going to jump back here because the uh the front end is very similar so",
    "start": "1100880",
    "end": "1106960"
  },
  {
    "text": "I'll uh I'll let that run okay sorry the back end is very similar",
    "start": "1106960",
    "end": "1112360"
  },
  {
    "text": "uh so here we basically go into the back end and it's a repeat of the previous slides because in actuality the",
    "start": "1112360",
    "end": "1119320"
  },
  {
    "text": "interface is even smaller for a back backend uh a backend plugin but the",
    "start": "1119320",
    "end": "1125480"
  },
  {
    "text": "interface is a lot more interesting so towards the the bottom it's a bit hard to read but there's a export that we",
    "start": "1125480",
    "end": "1132760"
  },
  {
    "text": "haven't seen up until now called Wy HTTP now I'm going to explain Wy very",
    "start": "1132760",
    "end": "1138520"
  },
  {
    "text": "quick quickly um and what it is it's a standard that builds on the original web",
    "start": "1138520",
    "end": "1145360"
  },
  {
    "text": "assembly standards to encapsulate the functionality uh that lets you serve web",
    "start": "1145360",
    "end": "1150480"
  },
  {
    "text": "requests so doing things like making web requests and serving web requests so we've worked basically all the way up",
    "start": "1150480",
    "end": "1156200"
  },
  {
    "text": "from just doing numbers and addition and subtraction to performing web requests passing strings around doing all of this",
    "start": "1156200",
    "end": "1162559"
  },
  {
    "text": "uh and and this is uh one of the standards that makes that happen and makes it really really easy so so we",
    "start": "1162559",
    "end": "1169520"
  },
  {
    "text": "sort of start like at the top right we start with numbers and we add on interface types and they they give us",
    "start": "1169520",
    "end": "1175000"
  },
  {
    "text": "interfaces at the binary level uh and then we add on Wy and now we have reusable functionality right we have at",
    "start": "1175000",
    "end": "1182320"
  },
  {
    "text": "the binary level at the at the web assembly binary level we have reusable functionality that is sort of a high",
    "start": "1182320",
    "end": "1187400"
  },
  {
    "text": "level and abstracted uh this is also all developed",
    "start": "1187400",
    "end": "1192840"
  },
  {
    "text": "in the open right so if you wanted to look up Wy HTTP and find out what was in it find out how it was specified uh you",
    "start": "1192840",
    "end": "1199679"
  },
  {
    "text": "could actually just you know go to GitHub it's on there um breaking changes show up there you know changes that",
    "start": "1199679",
    "end": "1205400"
  },
  {
    "text": "don't break things show up there uh and it's easy to uh easy to sort of look through and verify and grock for",
    "start": "1205400",
    "end": "1211280"
  },
  {
    "text": "yourself uh let's check on that uh that build",
    "start": "1211280",
    "end": "1218600"
  },
  {
    "text": "there see if it's done oh okay so the backstage",
    "start": "1219720",
    "end": "1226720"
  },
  {
    "text": "plug-in has built at this point if you if you like seeing terminal output there's there's some",
    "start": "1226720",
    "end": "1232799"
  },
  {
    "text": "there for you oh okay actually so there's you've got the uh the last yarn install so 90% of the time that this uh",
    "start": "1232799",
    "end": "1239360"
  },
  {
    "text": "this CLI takes is is running yarn uh and and because I do a sort of from scratch",
    "start": "1239360",
    "end": "1244480"
  },
  {
    "text": "install uh to keep things sort of hermetic uh we'll we'll wait for this to finish and load it into our uh our",
    "start": "1244480",
    "end": "1252440"
  },
  {
    "text": "backstage instance which is over which is over here let's do this",
    "start": "1252440",
    "end": "1259159"
  },
  {
    "text": "so going through some of this um it basically does some templating uh it",
    "start": "1259159",
    "end": "1264760"
  },
  {
    "text": "takes the takes the was and binary that I built before and um also changes your app. TSX uh one thing i' I'd love to",
    "start": "1264760",
    "end": "1273440"
  },
  {
    "text": "note about this is that we generally want to try and find a better way to integrate that doesn't require sort of",
    "start": "1273440",
    "end": "1280559"
  },
  {
    "text": "string manipulation in uh in these files but you know we're not there yet uh all",
    "start": "1280559",
    "end": "1286600"
  },
  {
    "text": "right so now it's finished let's uh let's boot up uh backstage",
    "start": "1286600",
    "end": "1292200"
  },
  {
    "text": "here uh one thing before I do uh so this this is kind of a list of changes uh",
    "start": "1297480",
    "end": "1303400"
  },
  {
    "text": "that have sort of happened right as a result these are the changes that got written to the backstage instance uh as",
    "start": "1303400",
    "end": "1308720"
  },
  {
    "text": "a result of running that earlier CLI command so you can see we've sort of modified the package. Json we've you know messed with the dependencies a",
    "start": "1308720",
    "end": "1314799"
  },
  {
    "text": "little bit we've got uh the app uh file the TSX file we've changed and then we've got a new plug-in directory",
    "start": "1314799",
    "end": "1322400"
  },
  {
    "text": "right we [Music]",
    "start": "1322400",
    "end": "1328399"
  },
  {
    "text": "go okay and soon we'll have just the the sort of standard you know backstage uh",
    "start": "1334840",
    "end": "1340559"
  },
  {
    "text": "backstage setup here uh and the ID of the plugin uh was example front end",
    "start": "1340559",
    "end": "1346520"
  },
  {
    "text": "example Dash you know hyen front end so if we go there we'll be able to uh we",
    "start": "1346520",
    "end": "1351799"
  },
  {
    "text": "should be able to see it we should be able to see our uh what we've developed",
    "start": "1351799",
    "end": "1357278"
  },
  {
    "text": "here and that's it so basically what's happened is we've built we've taken some",
    "start": "1362200",
    "end": "1367919"
  },
  {
    "text": "time to build a uh web assembly binary in Rust um generate essentially from",
    "start": "1367919",
    "end": "1374240"
  },
  {
    "text": "that binary alone uh a backstage plugin and load it into an active backstage instance",
    "start": "1374240",
    "end": "1379279"
  },
  {
    "text": "uh again front end plugins just end up being you know react apps so so that's what we're seeing we're seeing",
    "start": "1379279",
    "end": "1386039"
  },
  {
    "text": "here okay yeah so getting back here um again this is all developed in the open easy",
    "start": "1394400",
    "end": "1400440"
  },
  {
    "text": "to find if you just you know do a little searching I'm going to zoom straight through this because this is very similar to what you saw for the front",
    "start": "1400440",
    "end": "1405720"
  },
  {
    "text": "end uh but just back end tailored right and again it's it's at the binary level implementing the interface you said you",
    "start": "1405720",
    "end": "1414039"
  },
  {
    "text": "would uh there's also I'll also do a quick demo of the backend because um the backends the backend uh plugins are",
    "start": "1414279",
    "end": "1421400"
  },
  {
    "text": "actually to me a bit more important because they open up your backstage instance to other services that you",
    "start": "1421400",
    "end": "1426840"
  },
  {
    "text": "might be running and other orchestration systems so they're a bit richer I think in terms of uh integration capability",
    "start": "1426840",
    "end": "1435360"
  },
  {
    "text": "so here's that uh here's that code it's considerably more complicated mostly because of uh the wasy HTTP integration",
    "start": "1444360",
    "end": "1451039"
  },
  {
    "text": "so the way Wy HTTP is written is essentially as basically as robust as you can ask for uh something that deals",
    "start": "1451039",
    "end": "1458360"
  },
  {
    "text": "with web requests um just because it needs to cover many many uh types of types of things uh this is the uh",
    "start": "1458360",
    "end": "1464400"
  },
  {
    "text": "endpoint we're going to hit later so you can you can you can see it there hopefully hopefully we'll get to we'll",
    "start": "1464400",
    "end": "1470240"
  },
  {
    "text": "get to execute that bit of code uh and yeah I'm going to I'm going to go ahead and kick off the process at",
    "start": "1470240",
    "end": "1475480"
  },
  {
    "text": "the bottom",
    "start": "1475480",
    "end": "1477880"
  },
  {
    "text": "here again execution very similar to before and unfortunately going to take a",
    "start": "1483399",
    "end": "1488480"
  },
  {
    "text": "similarly long amount of time uh but it's you specify the plugin type specify",
    "start": "1488480",
    "end": "1493600"
  },
  {
    "text": "where you'd like to where you'd like to build and where your backstage uh installation is and it will it will go",
    "start": "1493600",
    "end": "1500360"
  },
  {
    "text": "ahead and put it in the right place let me",
    "start": "1500360",
    "end": "1504600"
  },
  {
    "text": "uh",
    "start": "1513760",
    "end": "1516760"
  },
  {
    "text": "okay all right and what I've done there is just put the uh backstage and sense back to sort of default all right and uh",
    "start": "1521159",
    "end": "1528559"
  },
  {
    "text": "while that's while that's building we'll uh we'll keep chugging chugging along here uh so we've got a thing that works",
    "start": "1528559",
    "end": "1537000"
  },
  {
    "text": "uh well I haven't proven the second part Works yet but at least some of it works uh and so what what do we what what's",
    "start": "1537000",
    "end": "1542520"
  },
  {
    "text": "left right well there's a lot left and what we really want to do is improve",
    "start": "1542520",
    "end": "1548159"
  },
  {
    "text": "these areas that uh that we feel sort of hurt the the ux of like if this is ever",
    "start": "1548159",
    "end": "1553919"
  },
  {
    "text": "going to work we need better ux than than the current right we need better ux than just writing JavaScript and running",
    "start": "1553919",
    "end": "1559399"
  },
  {
    "text": "it that way uh and right now what we what we want to do is make this Loop a little faster uh maybe try and get a",
    "start": "1559399",
    "end": "1567240"
  },
  {
    "text": "tighter integration but it it opens up a sort of a harder question right which is can you in a more General sense convert",
    "start": "1567240",
    "end": "1574279"
  },
  {
    "text": "any given react component to web assembly in a reasonable way that anyone will understand right then someone that",
    "start": "1574279",
    "end": "1579840"
  },
  {
    "text": "doesn't have you know doesn't have to be a a a front and developer to understand uh there are Frameworks that do this um",
    "start": "1579840",
    "end": "1585880"
  },
  {
    "text": "like there are Frameworks on the you know the python side or the rust side that you can spit out essentially HTML",
    "start": "1585880",
    "end": "1592880"
  },
  {
    "text": "and Dom elements um so so it's possible but this is something we we need to look into more and uh build a good ux around",
    "start": "1592880",
    "end": "1600520"
  },
  {
    "text": "also there's uh oh rather than uh sorry rather than using uh changing the files",
    "start": "1600520",
    "end": "1606440"
  },
  {
    "text": "by just looking for Strings uh it just makes a lot more sense to do a smarter smarter manipulation of the backstage",
    "start": "1606440",
    "end": "1612039"
  },
  {
    "text": "code uh and sort of I think a lot of that would enable more programmatic editing of a backstage instance which I",
    "start": "1612039",
    "end": "1617679"
  },
  {
    "text": "I assume that Ro has down uh but but uh would definitely help the ecosystem we",
    "start": "1617679",
    "end": "1623320"
  },
  {
    "text": "think uh and of course there's wiring of more of Backstage uh resources like authentication and the database uh and I",
    "start": "1623320",
    "end": "1630720"
  },
  {
    "text": "I wanted to note here that that actually means writing more WID right so that just means formalizing the interface uh",
    "start": "1630720",
    "end": "1637039"
  },
  {
    "text": "and then wiring things up to sort of make the interface available at runtime to the web assembly",
    "start": "1637039",
    "end": "1644559"
  },
  {
    "text": "binary so generally what what can you build right with this well we'd like people to build front end and",
    "start": "1644559",
    "end": "1650559"
  },
  {
    "text": "backend plugins with this toolkit and help us find the sharp edges help us find us find things that don't work and",
    "start": "1650559",
    "end": "1655840"
  },
  {
    "text": "could be better uh and and right now as far as web assembly goes these languages are the best right they have the best",
    "start": "1655840",
    "end": "1662519"
  },
  {
    "text": "sort of bleeding edge support for many of the features that are coming out so rust go JavaScript and typescript uh and",
    "start": "1662519",
    "end": "1668880"
  },
  {
    "text": "so they're they're great places to start oh let's let's go check on that uh backstage plug-in build now hopefully",
    "start": "1668880",
    "end": "1676279"
  },
  {
    "text": "hopefully it's done",
    "start": "1676279",
    "end": "1679720"
  },
  {
    "text": "okay so the back uh the backend plugin build is finished and so let's we'll hop over to Backstage itself the the local",
    "start": "1685360",
    "end": "1692399"
  },
  {
    "text": "install and I'll show you uh the files that have",
    "start": "1692399",
    "end": "1698120"
  },
  {
    "text": "changed okay so a bunch more files have changed right for the backend for the backend plugin there's a little bit more",
    "start": "1700840",
    "end": "1707000"
  },
  {
    "text": "integration work required for a backend plugin versus a front end plugin um but a lot of the changes are",
    "start": "1707000",
    "end": "1713000"
  },
  {
    "text": "were you know somewhat similar You' youve added maybe removed you know modified some dependencies uh you've got",
    "start": "1713000",
    "end": "1718960"
  },
  {
    "text": "the index um for the back because back backstage itself needs to be modified right so inside the backend uh sort of",
    "start": "1718960",
    "end": "1726279"
  },
  {
    "text": "code tree you have index.ts uh the typescript has to be changed and then you've got a new",
    "start": "1726279",
    "end": "1732799"
  },
  {
    "text": "plugin right which is the example back end in this case uh and then there's another little sort of integration file",
    "start": "1732799",
    "end": "1739279"
  },
  {
    "text": "but in general it's really easy to to sort of track this with Source control and and know what's changing when you",
    "start": "1739279",
    "end": "1744519"
  },
  {
    "text": "run this uh when you run this and install something so we're going to start the uh backstage instance here uh",
    "start": "1744519",
    "end": "1750440"
  },
  {
    "text": "and then I'll do you know a web request or two to show you show you show show that it",
    "start": "1750440",
    "end": "1756640"
  },
  {
    "text": "works okay and we will not need this uh this tab it just opened up because we're",
    "start": "1764679",
    "end": "1772159"
  },
  {
    "text": "just going to",
    "start": "1772159",
    "end": "1774559"
  },
  {
    "text": "curl there we go all right so here's that demo uh okay so I'm sure everyone's",
    "start": "1784000",
    "end": "1791279"
  },
  {
    "text": "probably familiar with this but uh backstage plugins for example my the plugin that I created is called example",
    "start": "1791279",
    "end": "1796960"
  },
  {
    "text": "backend right that was in the CLI uh command and it's running you know uh via backstage but on Port",
    "start": "1796960",
    "end": "1804000"
  },
  {
    "text": "707 right so we're going to hit that end point that get end point that we we defined uh and see if we can uh if we",
    "start": "1804000",
    "end": "1810919"
  },
  {
    "text": "can get it to uh to show up all right and that's that's it",
    "start": "1810919",
    "end": "1817080"
  },
  {
    "text": "so oh I'll take the clap thank",
    "start": "1817080",
    "end": "1821679"
  },
  {
    "text": "you so trying to get into what this is doing uh would take a long time so I'm just going to try and Breeze through it",
    "start": "1823720",
    "end": "1830360"
  },
  {
    "text": "but basically what happens is at the back end you build a web assembly binary that binary um is self-describing in",
    "start": "1830360",
    "end": "1837399"
  },
  {
    "text": "that it's it says that it knows how to serve an HTP request now what happens is",
    "start": "1837399",
    "end": "1842519"
  },
  {
    "text": "we take that binary turn it into JavaScript so actually go back from sort of binary code right instructions to",
    "start": "1842519",
    "end": "1848840"
  },
  {
    "text": "JavaScript code and then run that run that sort of piece as a server and proxy",
    "start": "1848840",
    "end": "1856279"
  },
  {
    "text": "through backstage to get to that running server right so it it's a bit complex",
    "start": "1856279",
    "end": "1862159"
  },
  {
    "text": "but the thing is the tooling for this has evolved to a point where it's still a little sharper on the edges but it's",
    "start": "1862159",
    "end": "1868080"
  },
  {
    "text": "it's quite amazing um what we can do with performance and like being with performance you know not being lost",
    "start": "1868080",
    "end": "1874480"
  },
  {
    "text": "completely and uh quite well isolated and uh also with with high ability to",
    "start": "1874480",
    "end": "1879960"
  },
  {
    "text": "self-describe and sort of be auditable so I'll jump back in here that'll be the last demo there here let",
    "start": "1879960",
    "end": "1888320"
  },
  {
    "text": "me",
    "start": "1888320",
    "end": "1890600"
  },
  {
    "text": "see okay so yeah at this point you can build front-end plugins you can build uh",
    "start": "1895240",
    "end": "1900760"
  },
  {
    "text": "backend plugins uh before before I close up I want to just not um sort of who's",
    "start": "1900760",
    "end": "1905880"
  },
  {
    "text": "building this right uh this is obviously not just one person or one company or just a couple companies right there's a",
    "start": "1905880",
    "end": "1912200"
  },
  {
    "text": "there's a huge uh sort of group behind this uh and it's headed and stewarded by",
    "start": "1912200",
    "end": "1917600"
  },
  {
    "text": "the code Alliance uh so you can again they work in the open everyone's on zulip you can you can sort of chat with",
    "start": "1917600",
    "end": "1923960"
  },
  {
    "text": "people there um but this is this is they they sort of move the move the uh the state of the art forward in this in this",
    "start": "1923960",
    "end": "1931760"
  },
  {
    "text": "space uh I stole this slide from a cooworker named Bailey um who works also",
    "start": "1931760",
    "end": "1937919"
  },
  {
    "text": "with me at cosonic here and this is these are just some of the faces that sort of work on this Tech and sort of",
    "start": "1937919",
    "end": "1943240"
  },
  {
    "text": "you know write the compilers and write the debuggers and write the tests there are tests uh and lots of tests actually",
    "start": "1943240",
    "end": "1950279"
  },
  {
    "text": "uh and this is you know maybe not even a tenth of the people who who have actually contributed over the years it's just you know some of the people are",
    "start": "1950279",
    "end": "1956000"
  },
  {
    "text": "working on some of the the biggest chunks of it uh a special shout out to the jco",
    "start": "1956000",
    "end": "1961840"
  },
  {
    "text": "maintainers uh guy Bedford is actually in here uh at the bottom left he's sort of second from the bottom left there um",
    "start": "1961840",
    "end": "1969200"
  },
  {
    "text": "but a lot of how this works that that bit that takes the binary turns it back into JavaScript from again that binary",
    "start": "1969200",
    "end": "1975159"
  },
  {
    "text": "could be anything right turns that back into JavaScript and makes it executable from a JavaScript context backstage in",
    "start": "1975159",
    "end": "1980480"
  },
  {
    "text": "this case um is jco right so this is basically me just reusing their work uh",
    "start": "1980480",
    "end": "1985919"
  },
  {
    "text": "mostly uh and so so a big shout out to them uh they do great",
    "start": "1985919",
    "end": "1991399"
  },
  {
    "text": "work uh and just before I before I leave here I want to want to know uh why we as",
    "start": "1991399",
    "end": "1996679"
  },
  {
    "text": "as Cosmic care about backstage uh and why we think it's a good fit uh for us and and we think that it's a good fit",
    "start": "1996679",
    "end": "2003760"
  },
  {
    "text": "because in general if we can build in backstage support and backstage help helps teams and Ops teams both Dev and",
    "start": "2003760",
    "end": "2010080"
  },
  {
    "text": "Ops teams move faster um then as a whole we can ship faster and and build more",
    "start": "2010080",
    "end": "2015799"
  },
  {
    "text": "things that hopefully at some point help some users uh so we as a company love backstage and we're really looking",
    "start": "2015799",
    "end": "2021760"
  },
  {
    "text": "forward to playing more in the ecosystem and and doing more to improve uh to improve our support and uh supporting",
    "start": "2021760",
    "end": "2028519"
  },
  {
    "text": "the ecosystem thanks for listening uh here's where you can find the code if you're",
    "start": "2028519",
    "end": "2035399"
  },
  {
    "text": "very young look on the look on the left you can scan that uh and if You' like to type you can type",
    "start": "2035399",
    "end": "2041360"
  },
  {
    "text": "in the thing on the right thank [Applause]",
    "start": "2041360",
    "end": "2047760"
  },
  {
    "text": "you thank you Victor I guess we have time for one very quick",
    "start": "2047760",
    "end": "2053960"
  },
  {
    "text": "question who's the lucky owner was there a hand yes h no I knew I",
    "start": "2054399",
    "end": "2062638"
  },
  {
    "text": "can always count on you sorry",
    "start": "2062639",
    "end": "2068358"
  },
  {
    "text": "yes yes you can yes you can very quickly yeah thank you so uh try to be very quick I love web assembly I think",
    "start": "2068359",
    "end": "2075720"
  },
  {
    "text": "relieving the idea of dynamic link dynamically link libraries for uh ecas",
    "start": "2075720",
    "end": "2080800"
  },
  {
    "text": "script is great idea and I love what you showed for the back uh backend component that totally works for me I completely",
    "start": "2080800",
    "end": "2087839"
  },
  {
    "text": "don't get the front end part so for me uh what you've did is basically you put",
    "start": "2087839",
    "end": "2093358"
  },
  {
    "text": "the TSX files into the binary resource section and then export them to to to",
    "start": "2093359",
    "end": "2098720"
  },
  {
    "text": "make them to build them through the Yar so you could as well zip them so why why",
    "start": "2098720",
    "end": "2104720"
  },
  {
    "text": "to do that yeah uh that's a great question uh and you're right so the uh",
    "start": "2104720",
    "end": "2109880"
  },
  {
    "text": "web assembly in for the front end part is a is a little less useful uh just because of how um how the integration",
    "start": "2109880",
    "end": "2115680"
  },
  {
    "text": "we're using right now have have it designed works but what you can't do with the zip file is sort of ask a zip",
    "start": "2115680",
    "end": "2122160"
  },
  {
    "text": "file what dependencies it has right so like you can maybe you stuff a package.json in there right and and um",
    "start": "2122160",
    "end": "2128760"
  },
  {
    "text": "you know maybe you like come up with something to read that and then change you know backstage at runtime or whenever you're installing it um but the",
    "start": "2128760",
    "end": "2135560"
  },
  {
    "text": "problem is you also can't verify the instructions um that to sort of produce",
    "start": "2135560",
    "end": "2141079"
  },
  {
    "text": "that right so like take a zip bomb like you're out of luck now so it's like uh there's it's a it's a slightly better um",
    "start": "2141079",
    "end": "2149960"
  },
  {
    "text": "uh packaging mechanism and it gives you a little bit more leverage than just a regular zip file or you know just npm",
    "start": "2149960",
    "end": "2155400"
  },
  {
    "text": "install would give you um and what we we think there's actually a better way to",
    "start": "2155400",
    "end": "2161079"
  },
  {
    "text": "or or sort of a more integrated way to to put these together um and actually try and expose the render functions",
    "start": "2161079",
    "end": "2168240"
  },
  {
    "text": "right so I alluded this to to this to uh I alluded to this a little bit but ideally we we put out a contract that",
    "start": "2168240",
    "end": "2176040"
  },
  {
    "text": "actually gives you just HTML back right but then you have to do things like you know model react State machine and like",
    "start": "2176040",
    "end": "2182319"
  },
  {
    "text": "you know there's there's a lot there but we think that's possible I mean it's definitely possible it's just matter of",
    "start": "2182319",
    "end": "2188000"
  },
  {
    "text": "GSX yes yes no it could absolutely work on the GSX level and again this is all web technology so it's it's there but",
    "start": "2188000",
    "end": "2193560"
  },
  {
    "text": "it's it's it's not uh it's not easy sun sun easy V1 so that that's why we haven't uh gone that far yet yeah thank",
    "start": "2193560",
    "end": "2200599"
  },
  {
    "text": "you great great question awesome thank you so much um yes another round of",
    "start": "2200599",
    "end": "2205760"
  },
  {
    "text": "applause thank you thank you",
    "start": "2205760",
    "end": "2210280"
  }
]