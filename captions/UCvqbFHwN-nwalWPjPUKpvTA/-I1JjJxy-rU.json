[
  {
    "text": "great well uh first off thanks so much for coming to this session um I do have a request before I get",
    "start": "120",
    "end": "5279"
  },
  {
    "text": "started um because the confidentiality of this session I wanted to ask that you all",
    "start": "5279",
    "end": "10519"
  },
  {
    "text": "agree to not share any of the takeaways from this session with anyone else I",
    "start": "10519",
    "end": "15599"
  },
  {
    "text": "thought that would be easier than making you all sign an NDA is that fair",
    "start": "15599",
    "end": "20640"
  },
  {
    "text": "okay cool right so my name is La Conde muella and",
    "start": "20640",
    "end": "25920"
  },
  {
    "text": "I'm a developer advocate for kubernetes at AWS I'm part of the eks team I'm also a cncf Ambassador and I'd love to",
    "start": "25920",
    "end": "34020"
  },
  {
    "text": "connect with as many of you as possible and if I don't get the chance to interact with you directly here please",
    "start": "34020",
    "end": "39960"
  },
  {
    "text": "feel free to reach out to me either on Twitter or LinkedIn uh the developer advocacy team that I'm a part of also",
    "start": "39960",
    "end": "46800"
  },
  {
    "text": "has a dedicated YouTube channel called containers from the couch some of you might have heard of it and we post a lot of kubernetes and Cloud native related",
    "start": "46800",
    "end": "52980"
  },
  {
    "text": "content over there I also have a Channel of my own if you want to search for that you can just use my full name",
    "start": "52980",
    "end": "60020"
  },
  {
    "text": "great so I don't know about you but um one of my favorite things is to hear",
    "start": "61440",
    "end": "66780"
  },
  {
    "text": "people's kubernetes introduction stories how they first came to work with the technology uh in a Hands-On way not just",
    "start": "66780",
    "end": "73320"
  },
  {
    "text": "hearing about it and um I find that generally people fit in one of three categories or camps there may be more",
    "start": "73320",
    "end": "80220"
  },
  {
    "text": "and the first one would be the group of people who hear about it from someone else maybe they maybe they read an",
    "start": "80220",
    "end": "86340"
  },
  {
    "text": "article maybe they watched a video or worked closely with a team that was using it and they heard about his capabilities and so that's what got them",
    "start": "86340",
    "end": "93479"
  },
  {
    "text": "into it so if kubernetes was a destination they willingly buy the bus ticket to get there the second group of",
    "start": "93479",
    "end": "100380"
  },
  {
    "text": "people are those that don't really have much of a choice so it's kind of like being told hey here's the bus ticket I'm going to",
    "start": "100380",
    "end": "106200"
  },
  {
    "text": "drop you off at the station whether you like it or not you're going to use kubernetes third group of folks",
    "start": "106200",
    "end": "111479"
  },
  {
    "text": "um the k-8s chose me is a little bit of a conspiracy theory but I believe it because I think I fall in this category",
    "start": "111479",
    "end": "117720"
  },
  {
    "text": "and with this one some of you might relate to this everything was a blur so many things were hazy but you just",
    "start": "117720",
    "end": "122880"
  },
  {
    "text": "remember you woke up one day and you were surrounded by kubernetes and you were required to implement best practices in a short amount of time",
    "start": "122880",
    "end": "130259"
  },
  {
    "text": "so a couple of Chuckles I think some of you could relate to that as well so not so much of a conspiracy theory",
    "start": "130259",
    "end": "135840"
  },
  {
    "text": "now um I think you'd also agree with me that when you just get started with kubernetes or actually with almost any",
    "start": "135840",
    "end": "142440"
  },
  {
    "text": "new piece of technology you're excited to and eager to be an expert",
    "start": "142440",
    "end": "148319"
  },
  {
    "text": "but when you look back on your journey you'll quickly find that you were quick to come to certain conclusions and one",
    "start": "148319",
    "end": "155459"
  },
  {
    "text": "of the conclusions we came to too quickly was okay so this is basically just about figuring out yaml and we're",
    "start": "155459",
    "end": "161760"
  },
  {
    "text": "pretty much set that's half the battle time would eventually reveal that we were very wrong",
    "start": "161760",
    "end": "167099"
  },
  {
    "text": "right now so a little bit more about the context right so I was a part of a team and we had been on a couple of",
    "start": "167099",
    "end": "172739"
  },
  {
    "text": "adventures together and this was at a financial institution and we were the platform team responsible for migrating",
    "start": "172739",
    "end": "178260"
  },
  {
    "text": "a particular microservice based project into the kubernetes environment and so we were dealing with a number of",
    "start": "178260",
    "end": "183720"
  },
  {
    "text": "microservices that were all going to run as stateless applications in the Clusters environment but they needed to",
    "start": "183720",
    "end": "189000"
  },
  {
    "text": "connect to a bunch of databases outside of that particular context so we needed to find a way of storing the sensitive",
    "start": "189000",
    "end": "195900"
  },
  {
    "text": "database credentials and so that's how we came across the concept of secrets so we were going to use these secrets in",
    "start": "195900",
    "end": "202920"
  },
  {
    "text": "kubernetes in order for our applications to be able to connect to the relevant databases now if you'll indulge me just a little",
    "start": "202920",
    "end": "209760"
  },
  {
    "text": "bit I'm sure I want to cater for people who may be completely new to this concept for those of you who are very familiar with this the more exciting",
    "start": "209760",
    "end": "216780"
  },
  {
    "text": "stuff um as it were will come a little bit later but just so everyone's on the same page and we're tracking together uh",
    "start": "216780",
    "end": "223019"
  },
  {
    "text": "secrets in the context of kubernetes are one of two types of resources that are used to store application configuration",
    "start": "223019",
    "end": "228720"
  },
  {
    "text": "data the other resource type would be config Maps primary difference between the two is the fact that secrets are",
    "start": "228720",
    "end": "234360"
  },
  {
    "text": "used to store small pieces of sensitive information like database credentials oauth tokens and TLS certificate data as",
    "start": "234360",
    "end": "241860"
  },
  {
    "text": "well among other among other types of data and over here is just an example of a manifest and",
    "start": "241860",
    "end": "248459"
  },
  {
    "text": "you'll see over there some Usual Suspects like API version kind and metadata those are things that will be",
    "start": "248459",
    "end": "255180"
  },
  {
    "text": "Universal to your kubernetes resources uh unique ones in this particular case would be type and data so data you would",
    "start": "255180",
    "end": "260940"
  },
  {
    "text": "also find in your config maps and these are the key value pairs that point to the sensitive pieces of data that you",
    "start": "260940",
    "end": "266639"
  },
  {
    "text": "have and the type essentially dictates the kind of sensitive information that you'll be storing inside of your secret",
    "start": "266639",
    "end": "273660"
  },
  {
    "text": "now um when we came across this concept we had some short-lived Joy uh there was",
    "start": "273660",
    "end": "279479"
  },
  {
    "text": "Joy because we thought okay well we've we now know the component that we need to make use of in order to store our",
    "start": "279479",
    "end": "285360"
  },
  {
    "text": "database credentials so that they can so the relevant applications can connect to the DBS but then that uh bubble was",
    "start": "285360",
    "end": "291660"
  },
  {
    "text": "burst really quickly when we found out the secrets are not so secret they're not encrypted now before we lost all our",
    "start": "291660",
    "end": "299699"
  },
  {
    "text": "hair from it being pulled out from our heads we thought okay let's take a step back and let's understand how secrets",
    "start": "299699",
    "end": "305280"
  },
  {
    "text": "are actually stored inside the context of a cluster and the Flow by which they get mounted into a pod and so secrets",
    "start": "305280",
    "end": "311880"
  },
  {
    "text": "are stored inside of the NCD data inside the etcd data store or database and they're stored there in a non-encrypted",
    "start": "311880",
    "end": "319320"
  },
  {
    "text": "format by default and then as for the flow the cubelet which is an agent running on the Node or",
    "start": "319320",
    "end": "325680"
  },
  {
    "text": "the host inside of your cluster is going to make a request to the etcd data store through the API server and then is going",
    "start": "325680",
    "end": "333479"
  },
  {
    "text": "to mount it on the relevant host in the temporary file system specifically on the hosts where there are pods that are",
    "start": "333479",
    "end": "339479"
  },
  {
    "text": "trying to consume these secrets and then finally our pods can either Mount these secrets either as environment variables",
    "start": "339479",
    "end": "345840"
  },
  {
    "text": "or volumes so this was a good starting point for us to figure out how this flow worked the next thing was to go back to",
    "start": "345840",
    "end": "352199"
  },
  {
    "text": "the Panic Room and figure out okay what exactly are the Red Flags what are the main risks and vulnerabilities that we",
    "start": "352199",
    "end": "357960"
  },
  {
    "text": "need to be aware of and so we jotted down a couple of them",
    "start": "357960",
    "end": "363060"
  },
  {
    "text": "and the first one is probably the most obvious uh that is the fact that secrets are stored in a non-encrypted format in",
    "start": "363060",
    "end": "369180"
  },
  {
    "text": "the etcd data store which was obviously a very interesting conversation with the cloud security team again maybe some of",
    "start": "369180",
    "end": "375060"
  },
  {
    "text": "you can relate to that then the other thing was the fact that we were used to working with Git and a",
    "start": "375060",
    "end": "381539"
  },
  {
    "text": "lot of our kubernetes configurations uh were stored in git repositories but",
    "start": "381539",
    "end": "386819"
  },
  {
    "text": "there was obviously a challenge now when it came to Secrets because uh there would be sensitive values in those",
    "start": "386819",
    "end": "392100"
  },
  {
    "text": "particular manifests which at most can only be base64 encoded which isn't actually encryption and that was going",
    "start": "392100",
    "end": "397979"
  },
  {
    "text": "to present a challenge for us and I'll elaborate on that a little bit further um in the in the presentation the next",
    "start": "397979",
    "end": "404639"
  },
  {
    "text": "thing was the fact that we were concerned about mounting our secrets as environment variables because the values",
    "start": "404639",
    "end": "409860"
  },
  {
    "text": "would be exposed to every single process inside of the Pod and they'd also be a very high chance of the sensitive values",
    "start": "409860",
    "end": "415680"
  },
  {
    "text": "being logged at some point so we considered the option of mounting",
    "start": "415680",
    "end": "420720"
  },
  {
    "text": "our secrets as volumes instead but then even with that approach we still had to consider well how safe are the volumes",
    "start": "420720",
    "end": "426539"
  },
  {
    "text": "that these secrets are actually being stored on so we'll still need to think about security pertaining to those specific volumes",
    "start": "426539",
    "end": "433139"
  },
  {
    "text": "and then lastly is root user exploitation so if you think back to the Flow by which Secrets get mounted into a",
    "start": "433139",
    "end": "440699"
  },
  {
    "text": "particular host those secrets are stored in temporary file systems now these file systems are managed by the hosts and so",
    "start": "440699",
    "end": "447419"
  },
  {
    "text": "if at any point you have an attacker or a malicious user that gains privileged access or root user access then they",
    "start": "447419",
    "end": "454860"
  },
  {
    "text": "could easily have access to those particular Secrets inside the temporary file systems and that would give them",
    "start": "454860",
    "end": "460139"
  },
  {
    "text": "access as well to the API server",
    "start": "460139",
    "end": "464300"
  },
  {
    "text": "so leaving the Panic Room this was pretty much the thinking of everyone so working with secrets and kubernetes is",
    "start": "465599",
    "end": "471960"
  },
  {
    "text": "not going to be as simple as we thought it would be nonetheless this is the quest that we've chosen to go down so we need to figure out how we're going to",
    "start": "471960",
    "end": "477840"
  },
  {
    "text": "address each one of these particular red flags that we had come across",
    "start": "477840",
    "end": "483139"
  },
  {
    "text": "and in this particular process the reasoning that we basically followed was let's take a step back and consider how",
    "start": "484020",
    "end": "490319"
  },
  {
    "text": "you would keep a secret safe in general even outside of the context of Technology the main things that you'd be",
    "start": "490319",
    "end": "496259"
  },
  {
    "text": "concerned with is Where is the secret kept to begin with OR where is it stored then the next thing is who needs to know",
    "start": "496259",
    "end": "503099"
  },
  {
    "text": "about the secret and from there you start thinking okay great so how is the secret then shared",
    "start": "503099",
    "end": "509460"
  },
  {
    "text": "in addition to that how is it going to be consumed by the relevant parties or entities that need to consume the secret",
    "start": "509460",
    "end": "515159"
  },
  {
    "text": "and then we also have to think about in the case that something goes wrong which is not a fun conversation or an",
    "start": "515159",
    "end": "521760"
  },
  {
    "text": "interesting thing that you actually want to do but you have to think about it nonetheless how do we prevent our secret values from being easily interpreted in",
    "start": "521760",
    "end": "528540"
  },
  {
    "text": "the case that something does go wrong and then lastly are there any additional guardrails that we can put in place to",
    "start": "528540",
    "end": "534720"
  },
  {
    "text": "dictate how our secrets are used to prevent um to prevent things from going wrong",
    "start": "534720",
    "end": "540360"
  },
  {
    "text": "basically how do we detect violations that put us at risk so the first thing that we had to",
    "start": "540360",
    "end": "546720"
  },
  {
    "text": "consider is where are we going to keep our secrets where are secrets going to be stored",
    "start": "546720",
    "end": "552779"
  },
  {
    "text": "and to begin with this was the platform team the secrets were kept up here",
    "start": "552779",
    "end": "558540"
  },
  {
    "text": "in our heads maybe some of you can attest to that I won't ask you to raise your hand you might get in trouble if you get seen",
    "start": "558540",
    "end": "565620"
  },
  {
    "text": "and so one of the reasons we delayed though was because we wanted to fit within we wanted the secret strategy to",
    "start": "565620",
    "end": "571860"
  },
  {
    "text": "fit within our get Ops approach which I'll get to shortly but because we were storing the secrets",
    "start": "571860",
    "end": "577560"
  },
  {
    "text": "in our very secure Heads This did mean that there were some bad practices taking place if you needed to share the",
    "start": "577560",
    "end": "582660"
  },
  {
    "text": "secrets with someone else in the team then let's just say there was sensitive information being shared over slack over",
    "start": "582660",
    "end": "587940"
  },
  {
    "text": "Microsoft teams this isn't being recorded is it right so um",
    "start": "587940",
    "end": "594000"
  },
  {
    "text": "and of course this was happening quite a lot for different environments",
    "start": "594000",
    "end": "599060"
  },
  {
    "text": "now I'm going to speak a little bit about githubs because this is what we had decided on for our Change Control",
    "start": "599279",
    "end": "605580"
  },
  {
    "text": "process for our workloads and our infrastructure and for those of you that may be new to this concept it's basically a paradigm",
    "start": "605580",
    "end": "612180"
  },
  {
    "text": "or a model that brings together git and devops workflows and allows you to essentially extend the source of Truth",
    "start": "612180",
    "end": "618480"
  },
  {
    "text": "for the desired state for your clusters environments to a git repository or a Home repository and specifically in the",
    "start": "618480",
    "end": "624959"
  },
  {
    "text": "context of kubernetes you would have a git Ops operator like Argo CD or flux or",
    "start": "624959",
    "end": "630600"
  },
  {
    "text": "Fleet I'm not sure if they're more tools out there and the role of this get Ops operator is",
    "start": "630600",
    "end": "635640"
  },
  {
    "text": "it's an application that's essentially watching the source of Truth where your desired state is defined so that could",
    "start": "635640",
    "end": "640920"
  },
  {
    "text": "be a git repo or a Helm repository and it will continuously compare that to the",
    "start": "640920",
    "end": "646320"
  },
  {
    "text": "destination which is the live state of your cluster and in the case that it picks up on any deviations or any",
    "start": "646320",
    "end": "651899"
  },
  {
    "text": "differences it will then attempt to reconcile that either automatically or simply notifying you depending on how",
    "start": "651899",
    "end": "657420"
  },
  {
    "text": "you configure it to work yeah and just real quick so in our case we",
    "start": "657420",
    "end": "663660"
  },
  {
    "text": "were using Argo CD and I will speak a little bit about Argo CD applications a little bit later on so I just want to",
    "start": "663660",
    "end": "669120"
  },
  {
    "text": "make sure we're all tracking an application in the context of Argo CD uh is a it is a custom resource definition",
    "start": "669120",
    "end": "675019"
  },
  {
    "text": "that defines a connection between a specific Source like a branch and a git repository and a namespace in your",
    "start": "675019",
    "end": "682079"
  },
  {
    "text": "specific cluster so just keep that in mind when I do speak a little bit about them later on",
    "start": "682079",
    "end": "688820"
  },
  {
    "text": "right so now I'm going to speak a little bit about secrets and git so we've got our git Ops approach and we know the",
    "start": "690720",
    "end": "698700"
  },
  {
    "text": "vulnerabilities that exist around secrets and I want to elaborate on them a little bit further in case someone here may be thinking well I still don't",
    "start": "698700",
    "end": "705240"
  },
  {
    "text": "get it so again the easiest one is the fact that secrets are not encrypted your",
    "start": "705240",
    "end": "710519"
  },
  {
    "text": "manifests are only going to mask those values with base64 encoding and remember with Git it's essentially a",
    "start": "710519",
    "end": "716820"
  },
  {
    "text": "collaborative tool you have a lot of people that will continue to be coming into the project accessing that",
    "start": "716820",
    "end": "722399"
  },
  {
    "text": "repository and that live so that life cycle continues so you're essentially exposing these sensitive values to a",
    "start": "722399",
    "end": "729120"
  },
  {
    "text": "host of different people that will be able to clone these repositories and commit to them on and on in addition to",
    "start": "729120",
    "end": "734399"
  },
  {
    "text": "that there's the challenge that you can't apply fine-grained Access Control to like a subfolder in your git",
    "start": "734399",
    "end": "739440"
  },
  {
    "text": "repository so that means just about anyone that has access to that specific repository they'll be able to have",
    "start": "739440",
    "end": "745200"
  },
  {
    "text": "access to the relevant files in there and then there's the issue of commit history which isn't actually an issue",
    "start": "745200",
    "end": "751500"
  },
  {
    "text": "because we love commit history however if you were to commit a secret into a",
    "start": "751500",
    "end": "756779"
  },
  {
    "text": "particular repository and then realize actually this is risky and you remove it someone that gains access to that",
    "start": "756779",
    "end": "762060"
  },
  {
    "text": "repository later on can still make use of the commit history to check out at an earlier time and get access to those",
    "start": "762060",
    "end": "768300"
  },
  {
    "text": "sensitive values so considering these different things",
    "start": "768300",
    "end": "775680"
  },
  {
    "text": "and we we basically came to the conclusion that we're not going to force uh gets to be something that it's not",
    "start": "775680",
    "end": "781200"
  },
  {
    "text": "we're going to use it for what it's actually made for and instead we're going to use a managed Secrets solution and that's what we did that was",
    "start": "781200",
    "end": "787800"
  },
  {
    "text": "something that was going to give us the encryption of all of our sensitive data at rest we'd be able to apply the relevant fine-grained Access Control",
    "start": "787800",
    "end": "794519"
  },
  {
    "text": "we'd also be able to check out um the logs to see how they were used for auditing purposes in the case that",
    "start": "794519",
    "end": "800579"
  },
  {
    "text": "there was something a red flag that had come up so to say for how a certain secret was being used",
    "start": "800579",
    "end": "807120"
  },
  {
    "text": "now the next thing was to consider how are we going to get our secrets from this external Source into our clusters",
    "start": "807120",
    "end": "813420"
  },
  {
    "text": "environment and that's when we came across this particular tool that we used the external Secrets operator",
    "start": "813420",
    "end": "818940"
  },
  {
    "text": "and so I'm going to elaborate on some of the components in the architecture for the external Secrets operator",
    "start": "818940",
    "end": "825480"
  },
  {
    "text": "and so I'll start with the Secret store The Secret store is a namespaced resource that defines how your secrets",
    "start": "825480",
    "end": "834300"
  },
  {
    "text": "are going to be accessed from the external source so it's uh it determines how it how communication is going to",
    "start": "834300",
    "end": "840779"
  },
  {
    "text": "work with the relevant API for whatever external Secrets manager that you decide on this now the Secret store needs to",
    "start": "840779",
    "end": "847860"
  },
  {
    "text": "reference something that will allow it to authenticate and authorize successfully against the external API",
    "start": "847860",
    "end": "854100"
  },
  {
    "text": "now one approach is to store your credentials in a kubernetes secret as",
    "start": "854100",
    "end": "859800"
  },
  {
    "text": "you can see over there but the problem with that is it kind of takes us back to square one we're trying to move out of",
    "start": "859800",
    "end": "865380"
  },
  {
    "text": "that particular model and how we're going to manage that secret so now thankfully uh I would say though",
    "start": "865380",
    "end": "871620"
  },
  {
    "text": "if you're just trying this out with a POC and you just want to see how the external Secrets operator works then sure you can follow this approach but I",
    "start": "871620",
    "end": "878579"
  },
  {
    "text": "wouldn't advise it for production thankfully we were doing this in an AWS environment so instead we used irsa",
    "start": "878579",
    "end": "884279"
  },
  {
    "text": "which is IM rules for service accounts which allowed us to essentially make use of temporary session tokens from an oidc",
    "start": "884279",
    "end": "891000"
  },
  {
    "text": "provider and that was bound to a specific service account and the service account was the one that the external",
    "start": "891000",
    "end": "896040"
  },
  {
    "text": "Secrets operator was using and that service account would then assume a role in the AWS environment so that it could",
    "start": "896040",
    "end": "901199"
  },
  {
    "text": "access the secrets in the external source the next component that I want to cover",
    "start": "901199",
    "end": "906660"
  },
  {
    "text": "is the external secret custom resource definition so where's the Secret store defines how",
    "start": "906660",
    "end": "913320"
  },
  {
    "text": "Secrets will be fetched the external secret deals with what will be fetched and what Target secret will be created",
    "start": "913320",
    "end": "920639"
  },
  {
    "text": "so this is where you would Define the the specific values that need to be fetched without actually putting the",
    "start": "920639",
    "end": "926279"
  },
  {
    "text": "sensitive values in there of course and then this is where you would specify the secret that should be created so the",
    "start": "926279",
    "end": "932100"
  },
  {
    "text": "external secret is then going to create what is known as a Target Secret",
    "start": "932100",
    "end": "938360"
  },
  {
    "text": "now some of you might have already picked up on this so what do we do about that Target Secret the good news about the target secret is",
    "start": "940260",
    "end": "946560"
  },
  {
    "text": "that while we don't have to keep it in our git repository so we're safe on that front but it kind of takes us back to",
    "start": "946560",
    "end": "952139"
  },
  {
    "text": "the issue with the lack of encryption in the LCD data store because that secret is still going to end up over there and",
    "start": "952139",
    "end": "959100"
  },
  {
    "text": "so to address that we used envelope encryption with KMS and so thankfully",
    "start": "959100",
    "end": "965220"
  },
  {
    "text": "um with this particular approach in the AWS environment the data the data keys",
    "start": "965220",
    "end": "971279"
  },
  {
    "text": "that were used are not necessarily retained or managed from that context it's only available to the user and you",
    "start": "971279",
    "end": "977940"
  },
  {
    "text": "can have a custom user you can have a custom key for that as well and the data is then stored locally as well as the",
    "start": "977940",
    "end": "983880"
  },
  {
    "text": "data Keys which get encrypted and that'll be important for another",
    "start": "983880",
    "end": "990480"
  },
  {
    "text": "um another component later on I also want to mention that on that front that was us partially taking care of what",
    "start": "990480",
    "end": "996240"
  },
  {
    "text": "happens in the case that there's some exposure of our secrets how do we prevent it from easily being interpreted",
    "start": "996240",
    "end": "1002660"
  },
  {
    "text": "so that dealt with it in part but then the next thing was who needs to know about the secret",
    "start": "1002660",
    "end": "1011320"
  },
  {
    "text": "so for this we had to consider how are we going to protect our secrets from two perspectives users as well as workloads",
    "start": "1011779",
    "end": "1018560"
  },
  {
    "text": "that was helpful for us that with the particular model that we went with we were using Argo CD and so there were",
    "start": "1018560",
    "end": "1026298"
  },
  {
    "text": "lots of cluster personas of course there were there were the platform Engineers who would have access to the API server",
    "start": "1026299",
    "end": "1032660"
  },
  {
    "text": "directly but we also realized that well for there's some cluster personas in this case that should never have access",
    "start": "1032660",
    "end": "1038360"
  },
  {
    "text": "direct access to the API server like your application developers like solution Architects that wanted to have",
    "start": "1038360",
    "end": "1043880"
  },
  {
    "text": "visibility of components inside the cluster's environment as well as QA testers and so in this case Argo CD does",
    "start": "1043880",
    "end": "1051380"
  },
  {
    "text": "expose a UI where you can see what's running inside inside your cluster's environment but you can narrow that down",
    "start": "1051380",
    "end": "1057140"
  },
  {
    "text": "to specific applications and applications would then fit within a particular project and so we were able",
    "start": "1057140",
    "end": "1063500"
  },
  {
    "text": "to apply role-based Access Control on Argo CD's front and there were some cluster personas who would only have",
    "start": "1063500",
    "end": "1069980"
  },
  {
    "text": "access to the cluster as it were by seeing what they need to see through Argo CD if you see this line right at",
    "start": "1069980",
    "end": "1076880"
  },
  {
    "text": "the bottom here it's just to represent the fact that none of them would have direct access to the API server so that was one approach of so this is an",
    "start": "1076880",
    "end": "1083539"
  },
  {
    "text": "approach of protecting um your your secrets so that some folks just never have access to the API server",
    "start": "1083539",
    "end": "1090020"
  },
  {
    "text": "to begin with but then we also have to consider workloads which is a very important",
    "start": "1090020",
    "end": "1096679"
  },
  {
    "text": "aspect of of course and the first layer or the foundational layer that you have to consider is the namespaces and",
    "start": "1096679",
    "end": "1103880"
  },
  {
    "text": "sometimes namespaces get a bit of a bad rep because they don't have hard or strict isolation so for example with",
    "start": "1103880",
    "end": "1110900"
  },
  {
    "text": "network traffic you can have easy Network traffic between pods that are in different namespaces unless you apply",
    "start": "1110900",
    "end": "1117500"
  },
  {
    "text": "Network policies or mtls or authorization policies with a service mesh but by default there's back and",
    "start": "1117500",
    "end": "1124520"
  },
  {
    "text": "forth Network traffic however in the case of Secrets it actually is a good foundational layer to have your workload",
    "start": "1124520",
    "end": "1130340"
  },
  {
    "text": "separated in the relevant namespaces because an application in namespace a for example is not going to be able to",
    "start": "1130340",
    "end": "1136520"
  },
  {
    "text": "mount a secret in namespace b now the next thing that we had to consider obviously that each workload",
    "start": "1136520",
    "end": "1142700"
  },
  {
    "text": "should make use of its own distinct identity which is provided to us by service accounts and then binding each",
    "start": "1142700",
    "end": "1148340"
  },
  {
    "text": "service account to a specific role and in that role defining the relevant permissions that are only necessary for",
    "start": "1148340",
    "end": "1154820"
  },
  {
    "text": "that particular workload now roles do not allow you to have explicit deny rules you can only add allow rules and",
    "start": "1154820",
    "end": "1161720"
  },
  {
    "text": "so that's one approach of having the implicit deny rules to make sure that they that some workloads are not allowed",
    "start": "1161720",
    "end": "1167419"
  },
  {
    "text": "to access the API server to carry out certain permissions so if you see this diagram over here you'll see with both",
    "start": "1167419",
    "end": "1172940"
  },
  {
    "text": "the top and the bottom there are not allowed to run get Secrets Or List Secrets or watch secrets",
    "start": "1172940",
    "end": "1180340"
  },
  {
    "text": "and so here's just here's an example of a manifest with a role and a role binding so at the top over there we have",
    "start": "1182240",
    "end": "1188780"
  },
  {
    "text": "a role that is explicitly out adding allow rules for get list and watch only on pods and services and right below it",
    "start": "1188780",
    "end": "1195620"
  },
  {
    "text": "is a role binding that references this same role and then adds a service",
    "start": "1195620",
    "end": "1200900"
  },
  {
    "text": "account as the subject binding that service account to that particular role so this is just an example of that",
    "start": "1200900",
    "end": "1207639"
  },
  {
    "text": "and then a really good exercise that you can run in addition to this is to actually use the cube cuddle off command",
    "start": "1209000",
    "end": "1214880"
  },
  {
    "text": "and see whether or not a certain service account is actually able to get Secrets",
    "start": "1214880",
    "end": "1220039"
  },
  {
    "text": "Or List Secrets or watch secrets and you can see over there um you'll notice that right beneath each",
    "start": "1220039",
    "end": "1225740"
  },
  {
    "text": "one of those commands there's a no being returned because that those those permissions have not been added to the",
    "start": "1225740",
    "end": "1231380"
  },
  {
    "text": "specific role that the service account is actually using",
    "start": "1231380",
    "end": "1235899"
  },
  {
    "text": "so here's another thing that we can also another step we can take to protect our secrets from our workloads and this will",
    "start": "1237799",
    "end": "1243919"
  },
  {
    "text": "depend on the version of kubernetes that you are running so if you're running a version before kubernetes 1.24 then",
    "start": "1243919",
    "end": "1251960"
  },
  {
    "text": "highly advise that you disable the auto Mount service account token this is a specific token that gets loaded into a",
    "start": "1251960",
    "end": "1258740"
  },
  {
    "text": "secret and that secret doesn't uh this token does not expire and the reason why this",
    "start": "1258740",
    "end": "1264559"
  },
  {
    "text": "is important is because if you think back to the temporary file system where Secrets get stored should there be a an",
    "start": "1264559",
    "end": "1271460"
  },
  {
    "text": "attacker that gets access to that temporary file system this is probably one of the first things that they would want to go for because that token is",
    "start": "1271460",
    "end": "1277520"
  },
  {
    "text": "what is going to give them access to your API server so you essentially want to lock that down by disabling this",
    "start": "1277520",
    "end": "1282740"
  },
  {
    "text": "where it's not necessary and if you do want to make use of of token a token approach then you can consider looking",
    "start": "1282740",
    "end": "1288679"
  },
  {
    "text": "into bounded service account tokens which if I'm correct would functions similar to the oidc approach where you",
    "start": "1288679",
    "end": "1294620"
  },
  {
    "text": "get temporary session tokens so this is another angle that you can protect your secrets as well",
    "start": "1294620",
    "end": "1301840"
  },
  {
    "text": "right so we've considered where to store our secrets",
    "start": "1302900",
    "end": "1308900"
  },
  {
    "text": "and now we're going to look at how is the secret shared and how is it consumed",
    "start": "1308900",
    "end": "1316539"
  },
  {
    "text": "so I've already covered this in part and so this is just a map of what our git",
    "start": "1318320",
    "end": "1323659"
  },
  {
    "text": "Ops diagram or overflow kind of look like and you'll see right at the top over there ESO which is just standing",
    "start": "1323659",
    "end": "1329840"
  },
  {
    "text": "for external Secrets operator so we were using Argo CD to deploy the external Secrets operator into our clusters",
    "start": "1329840",
    "end": "1335539"
  },
  {
    "text": "environment and then as for the workload that is what would have a specific Secret store crd and an external secret",
    "start": "1335539",
    "end": "1342380"
  },
  {
    "text": "crd remember the Secret store is what is used to define how the sensitive values are fetched and the external secret",
    "start": "1342380",
    "end": "1349340"
  },
  {
    "text": "defines what gets fetched and from that the target secret would then be created and finally consumed by the pod",
    "start": "1349340",
    "end": "1357940"
  },
  {
    "text": "next is consuming the actual Secret so you'll see over here we so we went with the approach of consuming our",
    "start": "1361100",
    "end": "1367159"
  },
  {
    "text": "secrets using a volume mounting approach and you heard me mention earlier on when we were considering the different red",
    "start": "1367159",
    "end": "1372980"
  },
  {
    "text": "flags one of the things that we were concerned about is how do we actually secure our volumes and so similar to",
    "start": "1372980",
    "end": "1378919"
  },
  {
    "text": "what we did with the NCD data store we used KMS envelope encryption for that as well to protect our volumes in the case",
    "start": "1378919",
    "end": "1386240"
  },
  {
    "text": "that there was some breach of a Kind so this is the second part of how you would deal with",
    "start": "1386240",
    "end": "1392539"
  },
  {
    "text": "um the the issue of how do we prevent our secrets from easily being interpreted in",
    "start": "1392539",
    "end": "1397580"
  },
  {
    "text": "the case that there's some kind of a breach or exposure",
    "start": "1397580",
    "end": "1401860"
  },
  {
    "text": "right so the last leg and probably one of my favorites is how do we manage violations",
    "start": "1403520",
    "end": "1408980"
  },
  {
    "text": "that risk secret exposure",
    "start": "1408980",
    "end": "1413799"
  },
  {
    "text": "and so for this I'm essentially advocating for dynamic admission controllers and first I just want to go",
    "start": "1415100",
    "end": "1420620"
  },
  {
    "text": "through what the API request path would actually look like for so for some people that may not be familiar with",
    "start": "1420620",
    "end": "1426200"
  },
  {
    "text": "this and so these are the different steps that take place when an API request is actually made and before",
    "start": "1426200",
    "end": "1431419"
  },
  {
    "text": "something is actually committed to the state in the edcd data store and so the reason I've put Argo CD on the far end",
    "start": "1431419",
    "end": "1437179"
  },
  {
    "text": "over there is because that's what was managing our Change Control process so first step is authentication and",
    "start": "1437179",
    "end": "1443419"
  },
  {
    "text": "authorization so role-based Access Control would fit within the authorization module over there and then",
    "start": "1443419",
    "end": "1448940"
  },
  {
    "text": "next we've got mutating admissions so in the case that you actually want to make changes to a particular resource before",
    "start": "1448940",
    "end": "1454640"
  },
  {
    "text": "it gets committed to the state and then there's schema validation and then last over here we have validating admission",
    "start": "1454640",
    "end": "1460520"
  },
  {
    "text": "which is the aspect that I'm going to be focusing on and this is where we can essentially tap into",
    "start": "1460520",
    "end": "1467539"
  },
  {
    "text": "um we can tap into the validating admission aspect via the web hooks using different",
    "start": "1467539",
    "end": "1472820"
  },
  {
    "text": "tools you could do this with caverno you could also do this with Opa gatekeeper which is the one that I'm going to focus",
    "start": "1472820",
    "end": "1478220"
  },
  {
    "text": "on and you could essentially Define different policies uh that's that are specific to your company or your context",
    "start": "1478220",
    "end": "1484460"
  },
  {
    "text": "that allows you to manage how this how Secrets get managed in your clusters",
    "start": "1484460",
    "end": "1489919"
  },
  {
    "text": "environment or how you want them to be used for the different workloads",
    "start": "1489919",
    "end": "1494740"
  },
  {
    "text": "so here's another diagram just to depict what that would actually look like so these requests before they get committed",
    "start": "1495980",
    "end": "1502640"
  },
  {
    "text": "to the state would be intercepted and then would be checked by Opa gatekeeper which would essentially be enforcing",
    "start": "1502640",
    "end": "1509299"
  },
  {
    "text": "whether or not certain things can actually be committed to State depending on whether or not they align with with",
    "start": "1509299",
    "end": "1515480"
  },
  {
    "text": "the policies that you've defined and another thing that I like about Opa gatekeeper is the fact that it also has",
    "start": "1515480",
    "end": "1520580"
  },
  {
    "text": "an auditing feature so it's continuously copying the resources in your cluster State and checking those against your",
    "start": "1520580",
    "end": "1527360"
  },
  {
    "text": "policies and in the case that it finds that there's something that goes against the policy it will it will flag that as",
    "start": "1527360",
    "end": "1533360"
  },
  {
    "text": "a violation and you'd be able to quickly detect that issue as well and this is useful because maybe you're upgrading",
    "start": "1533360",
    "end": "1538940"
  },
  {
    "text": "Opa gatekeeper or maybe you only Implement gatekeeper after you've already deployed workloads that would go",
    "start": "1538940",
    "end": "1544340"
  },
  {
    "text": "against certain policies that you come up with later on",
    "start": "1544340",
    "end": "1549340"
  },
  {
    "text": "right so another thing that is useful and this is uh this is not just specific to Opa",
    "start": "1552500",
    "end": "1558320"
  },
  {
    "text": "gatekeeper you can do this with other policy enforcement tools um other cool ones that I'd encourage",
    "start": "1558320",
    "end": "1564140"
  },
  {
    "text": "you to check out would be de tree and caverno as well those are some of my favorite and um you you don't have to",
    "start": "1564140",
    "end": "1570200"
  },
  {
    "text": "wait till you get to that API request phase for your cluster so you can shift this left and inside of your CI stage",
    "start": "1570200",
    "end": "1577220"
  },
  {
    "text": "what you can do is you can essentially run tests based on your policies against the different kubernetes",
    "start": "1577220",
    "end": "1584179"
  },
  {
    "text": "manifests or kubernetes resources that you're attempting to create so this would for this would be a stage before",
    "start": "1584179",
    "end": "1590600"
  },
  {
    "text": "your resources end up in the branch that your git Ops operator is actually watching and so here this is just a",
    "start": "1590600",
    "end": "1595880"
  },
  {
    "text": "screenshot of one example from GitHub actions and you'll see I'm running a conf test command you can also use the",
    "start": "1595880",
    "end": "1601580"
  },
  {
    "text": "OPA CLI in the case of gatekeeper and I have a specific policy that I'm referencing and in this case I would be",
    "start": "1601580",
    "end": "1608539"
  },
  {
    "text": "using the as it were raw Rego files which is the policy language that you'd be using and testing it against the",
    "start": "1608539",
    "end": "1614600"
  },
  {
    "text": "different resources um that I want to merge into my branch that the get Ops operator is watching",
    "start": "1614600",
    "end": "1620779"
  },
  {
    "text": "and if there's any violation detected at least I can see it here and it never even ends up in that particular Branch",
    "start": "1620779",
    "end": "1626480"
  },
  {
    "text": "so we don't have to wait till we get to the API request phase",
    "start": "1626480",
    "end": "1631600"
  },
  {
    "text": "great so what I'm going to do now is I'm just going to show you Argo CD with a couple of translations of what I was",
    "start": "1632779",
    "end": "1639440"
  },
  {
    "text": "covering so you can see how it looks like um in reality",
    "start": "1639440",
    "end": "1644860"
  },
  {
    "text": "is that big enough okay cool we'll see a couple of nods and thumbs up right so first off over here",
    "start": "1656240",
    "end": "1662960"
  },
  {
    "text": "this is just to show you that the external Secrets operator is being deployed by Argo CD",
    "start": "1662960",
    "end": "1669260"
  },
  {
    "text": "lots of resources not too concerned about you memorizing this so I'm not going to get into detail of that just",
    "start": "1669260",
    "end": "1674600"
  },
  {
    "text": "just to show you and then over over here",
    "start": "1674600",
    "end": "1679960"
  },
  {
    "text": "so this is an example of one application I'm calling the e-commerce app and if I scroll down here",
    "start": "1680059",
    "end": "1686840"
  },
  {
    "text": "you will notice the e-commerce external secret you also see the e-commerce Secret store so these are the particular",
    "start": "1686840",
    "end": "1692900"
  },
  {
    "text": "resources that we're actually keeping inside of our git Repository and none of them necessarily have any",
    "start": "1692900",
    "end": "1699799"
  },
  {
    "text": "sensitive values so you can see over here with the Secret store",
    "start": "1699799",
    "end": "1705140"
  },
  {
    "text": "the alternative approach of course would have been to actually store the credentials in a secret that we'd be",
    "start": "1705140",
    "end": "1710179"
  },
  {
    "text": "referencing and like I said that's not something that we'd advise for as a best practice and some of you might be seeing well",
    "start": "1710179",
    "end": "1716600"
  },
  {
    "text": "what's going on over here we see a sync failed and there's an error and that's coming to the example that I actually want to focus on whoops",
    "start": "1716600",
    "end": "1724840"
  },
  {
    "text": "so this particular e-commerce role I click on that you scroll down and you'll see over here",
    "start": "1726200",
    "end": "1733039"
  },
  {
    "text": "that it is giving permissions to get Secrets now this will obviously depend",
    "start": "1733039",
    "end": "1738320"
  },
  {
    "text": "on your context and what your use case is but in this case just to demonstrate it is to show you oh this is the same",
    "start": "1738320",
    "end": "1744799"
  },
  {
    "text": "resource so I'm gonna come here right so here's our error and I'm just",
    "start": "1744799",
    "end": "1752659"
  },
  {
    "text": "gonna zoom in a little bit more so it's clearer for everyone right at the back it might be a bit much and you'll notice",
    "start": "1752659",
    "end": "1759559"
  },
  {
    "text": "here that this request was denied you can see that our admission web hook um specifically with gatekeeper is at",
    "start": "1759559",
    "end": "1765140"
  },
  {
    "text": "Play and the message here is that roles should not have get list or watch",
    "start": "1765140",
    "end": "1770179"
  },
  {
    "text": "permissions and you can see that over there and of course you can Define this for specific name spaces so it doesn't have to be",
    "start": "1770179",
    "end": "1776659"
  },
  {
    "text": "something that you do for your entire cluster",
    "start": "1776659",
    "end": "1781600"
  },
  {
    "text": "lastly I'm just going to show you an example with the auditing capabilities of opa gatekeeper so if I",
    "start": "1782779",
    "end": "1790580"
  },
  {
    "text": "scroll to the top let me actually come out here",
    "start": "1790580",
    "end": "1797539"
  },
  {
    "text": "and do that so we've got two constraints here um and these constraints represent the different policies the first one over",
    "start": "1797539",
    "end": "1803779"
  },
  {
    "text": "here is is for preventing pods for mounting Secrets as environment variables and the second one over here",
    "start": "1803779",
    "end": "1809480"
  },
  {
    "text": "is actually related to checking roles to see if they're if they have elevated permissions for secret access which is",
    "start": "1809480",
    "end": "1816559"
  },
  {
    "text": "the one we just looked at so I'm going to click on this one here and I'm going to scroll down",
    "start": "1816559",
    "end": "1824200"
  },
  {
    "text": "right zoom in slightly and you can see over there there are two",
    "start": "1826279",
    "end": "1831740"
  },
  {
    "text": "violations detected and it lists the specific pods mounting a secret as an environment variable is disallowed and",
    "start": "1831740",
    "end": "1836779"
  },
  {
    "text": "it points you to the specific pods so this is useful like I said in the case that these things happen to have crept in into your environment and because Opa",
    "start": "1836779",
    "end": "1845299"
  },
  {
    "text": "Gatekeepers continuously watching your resource it would be able to resources it would be able to pick up on these things and then notify you so that you",
    "start": "1845299",
    "end": "1852500"
  },
  {
    "text": "can deal with them appropriately all right so that's the entire flow so I",
    "start": "1852500",
    "end": "1858679"
  },
  {
    "text": "think I've got about five or four minutes left so if there are any questions I'll happily take those now",
    "start": "1858679",
    "end": "1865360"
  },
  {
    "text": "the silence may be an indication of clarity or it may mean that everyone just went to sleep",
    "start": "1872480",
    "end": "1878600"
  },
  {
    "text": "all right there's some questions here so uh",
    "start": "1878600",
    "end": "1882520"
  },
  {
    "text": "security so I'm not sure if this is the right approach but yeah and something I didn't mention is kind of looking at it",
    "start": "1919100",
    "end": "1925220"
  },
  {
    "text": "from the perspective of having measured risks as it were you know um because one could still argue that even",
    "start": "1925220",
    "end": "1931399"
  },
  {
    "text": "following the external Secrets operator approach is like leaving breadcrumbs right because the sensitive values may",
    "start": "1931399",
    "end": "1937399"
  },
  {
    "text": "not exist specifically in those resources but if someone if the wrong person looked at your external secret",
    "start": "1937399",
    "end": "1943520"
  },
  {
    "text": "operator res your external secret resource they'd be able to see the references essentially not the explicit",
    "start": "1943520",
    "end": "1950360"
  },
  {
    "text": "things but specifically to your question I would definitely think it's safe enough to actually have those",
    "start": "1950360",
    "end": "1955760"
  },
  {
    "text": "definitions in your in this case Opa policies are Rego files because the beauty of that is you're creating custom",
    "start": "1955760",
    "end": "1961760"
  },
  {
    "text": "Resources with Opa and so you can be as specific as you want to be for your particular environment so if it's",
    "start": "1961760",
    "end": "1967760"
  },
  {
    "text": "checking those annotations checking labels Etc so I definitely think that that's a great guard and the beauty with",
    "start": "1967760",
    "end": "1974059"
  },
  {
    "text": "that as well is like I demonstrated you can have that both in the CI stage by shifting left to actually test before",
    "start": "1974059",
    "end": "1980240"
  },
  {
    "text": "things ever end up in the API request path but also you're protecting your runtime environment as well when you",
    "start": "1980240",
    "end": "1985520"
  },
  {
    "text": "have them deployed right",
    "start": "1985520",
    "end": "1993039"
  },
  {
    "text": "yes absolutely",
    "start": "1993559",
    "end": "1998799"
  },
  {
    "text": "yes yeah great yes",
    "start": "1999799",
    "end": "2005260"
  },
  {
    "text": "all right yeah you mentioned envelope encryption do I understand correctly that the application at runtime will use",
    "start": "2007600",
    "end": "2015220"
  },
  {
    "text": "KMS with an IM role to decrypt the secreted receipts yes exactly so there",
    "start": "2015220",
    "end": "2020980"
  },
  {
    "text": "would have to be a specific role that has permissions to even fetch the key to begin with before it can decrypt all",
    "start": "2020980",
    "end": "2028059"
  },
  {
    "text": "right yeah thank you",
    "start": "2028059",
    "end": "2031200"
  },
  {
    "text": "a question about hcd encryption like there is a default setting you can activate to have",
    "start": "2036039",
    "end": "2042820"
  },
  {
    "text": "encryption address so why did you use KMS in additional to that yeah right um so",
    "start": "2042820",
    "end": "2049240"
  },
  {
    "text": "that was because with KMS we were you can also manage the keys and so that was",
    "start": "2049240",
    "end": "2055240"
  },
  {
    "text": "just more of adherence to internal policies as well so we went entirely with the approach if we're going to use KMS and we want to be able to have",
    "start": "2055240",
    "end": "2061358"
  },
  {
    "text": "custom managed customer managed keys but I'm glad you mentioned that people know that it's not like there is no setting",
    "start": "2061359",
    "end": "2067000"
  },
  {
    "text": "in NCD to just enable so yep definitely that that's another approach yep",
    "start": "2067000",
    "end": "2073020"
  },
  {
    "text": "this",
    "start": "2073359",
    "end": "2075838"
  },
  {
    "text": "so you mentioned is it working I don't care you mentioned the",
    "start": "2079300",
    "end": "2087780"
  },
  {
    "text": "external sequence operator yeah that you're maybe also",
    "start": "2089260",
    "end": "2094200"
  },
  {
    "text": "containing interface storage interface right so at the time that that wasn't",
    "start": "2095379",
    "end": "2100720"
  },
  {
    "text": "actually released as yet but I'm again I'm glad you mentioned that because that's another excellent alternative uh",
    "start": "2100720",
    "end": "2106000"
  },
  {
    "text": "The Secret store CSI driver if I remember correctly yeah that's another excellent alternative and um another",
    "start": "2106000",
    "end": "2112359"
  },
  {
    "text": "tool that you can look into if you haven't already heard of it is bitnami sealed secrets and again this is going to depend on your context so in our",
    "start": "2112359",
    "end": "2119200"
  },
  {
    "text": "situation um it was not really going to fly with with the cloud security team but there",
    "start": "2119200",
    "end": "2124960"
  },
  {
    "text": "are certainly scenarios where um using options like that can be super useful but the one you mentioned is an",
    "start": "2124960",
    "end": "2130240"
  },
  {
    "text": "excellent alternative",
    "start": "2130240",
    "end": "2132960"
  },
  {
    "text": "hi uh so I wanted to ask comparing for example secret operator with things like",
    "start": "2140700",
    "end": "2147220"
  },
  {
    "text": "Helm secrets and integration to deployment like with operator you also",
    "start": "2147220",
    "end": "2152380"
  },
  {
    "text": "have to rely on a additional component of the deployment it can break it can",
    "start": "2152380",
    "end": "2157660"
  },
  {
    "text": "have sync issues isn't it better to have everything as part of the singular",
    "start": "2157660",
    "end": "2163300"
  },
  {
    "text": "deployment process the integration with secrets of Home Secrets now with valves you can also reference for example the",
    "start": "2163300",
    "end": "2170579"
  },
  {
    "text": "secret stored in AWS or gcp and external so how would you compare those two",
    "start": "2170579",
    "end": "2176800"
  },
  {
    "text": "options yeah absolutely and um I like what you mentioned I have a and I",
    "start": "2176800",
    "end": "2182859"
  },
  {
    "text": "have a good friend who like because they were prioritizing for the deployment strategy as well that's why they went",
    "start": "2182859",
    "end": "2188020"
  },
  {
    "text": "with Home Secrets instead and so this was specifically based on what we did and not necessarily completely that this",
    "start": "2188020",
    "end": "2194320"
  },
  {
    "text": "is exactly what you should do but enough to just give you um good takeaways to consider but Helm",
    "start": "2194320",
    "end": "2199960"
  },
  {
    "text": "Secrets is an excellent one and Helm Secrets if I'm correct is actually based on Mozilla sobs so Mozilla stops is also",
    "start": "2199960",
    "end": "2205839"
  },
  {
    "text": "a good alternative as well that if you're looking for managing external Secrets as well",
    "start": "2205839",
    "end": "2212338"
  },
  {
    "text": "uh so I think there's time for one more question is there any that's one right at the back",
    "start": "2214000",
    "end": "2220980"
  },
  {
    "text": "um sorry in your external Secret store you can",
    "start": "2226960",
    "end": "2232900"
  },
  {
    "text": "easily end up with lots of Secrets how do you attract them how do you back up them and how do you bootstrap them in",
    "start": "2232900",
    "end": "2239859"
  },
  {
    "text": "case your stuff fails right so just repeat that let's say you have in your external",
    "start": "2239859",
    "end": "2246520"
  },
  {
    "text": "Secret store 2 000 Secrets just to have a number is this uh",
    "start": "2246520",
    "end": "2252940"
  },
  {
    "text": "is this store fails at any point how do you um have your values back up or if somebody",
    "start": "2252940",
    "end": "2260820"
  },
  {
    "text": "does changes to the store I'm quite sure you want to track this",
    "start": "2260820",
    "end": "2266859"
  },
  {
    "text": "that's a that's a good one uh just firstly um with those 2000 secrets for example",
    "start": "2266859",
    "end": "2271960"
  },
  {
    "text": "be for one specific namespace yeah okay wow okay that's a lot of Secrets for a",
    "start": "2271960",
    "end": "2278859"
  },
  {
    "text": "single name space yeah I'll Omega 200 just too much to end it manually yeah",
    "start": "2278859",
    "end": "2284680"
  },
  {
    "text": "yeah and that's still a lot so I honestly haven't looked into that in detail I think it's it's something worth looking into definitely",
    "start": "2284680",
    "end": "2292240"
  },
  {
    "text": "um and I do not want to lie to you so definitely because yeah I'd say like",
    "start": "2292240",
    "end": "2297760"
  },
  {
    "text": "it's probably worth it considering the scaling capabilities in that case and looking at what kind of synchronization",
    "start": "2297760",
    "end": "2302980"
  },
  {
    "text": "would work for you obviously because external Secrets operators continuously synchronizing based on what the external",
    "start": "2302980",
    "end": "2308260"
  },
  {
    "text": "source is and um in the case that there's a a crash as it were at least",
    "start": "2308260",
    "end": "2313780"
  },
  {
    "text": "the synchronization covers that to some degree because you know that when your your relevant pods are back up there's",
    "start": "2313780",
    "end": "2319060"
  },
  {
    "text": "going to be a synchronization that takes place but as for the scale of that I'd yeah I'd have to look into that further",
    "start": "2319060",
    "end": "2324820"
  },
  {
    "text": "for that many Secrets thanks yeah",
    "start": "2324820",
    "end": "2329579"
  },
  {
    "text": "and I think that is it but if any of you want to chat further I'm happy to spend some time with you thank you so much for coming to the session",
    "start": "2330220",
    "end": "2337619"
  }
]