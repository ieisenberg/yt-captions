[
  {
    "start": "0",
    "end": "100000"
  },
  {
    "text": "hello everyone welcome to cloud native live where we dive into the code behind cloud native i'm annie talasta and i'm a",
    "start": "16880",
    "end": "24400"
  },
  {
    "text": "cncf ambassador as well as a senior product marketing manager at camunda and i will be your host tonight",
    "start": "24400",
    "end": "31119"
  },
  {
    "text": "so every week we bring a new set of presenters to showcase how to work with cloud-native technologies they will",
    "start": "31119",
    "end": "37200"
  },
  {
    "text": "build things they will break things and they will answer all of your burning questions so you can join us every",
    "start": "37200",
    "end": "42719"
  },
  {
    "text": "wednesday to watch live um so this week we have chiverna um to talk about what's",
    "start": "42719",
    "end": "48239"
  },
  {
    "text": "new with kiborno which is really exciting so and as always a bit of housekeeping to kick us off so this is",
    "start": "48239",
    "end": "55039"
  },
  {
    "text": "an official live stream of the cncf and as such it is subject to the cncf code of conduct",
    "start": "55039",
    "end": "61199"
  },
  {
    "text": "so please do not add anything to the chat or questions that would be in violation of that code of conduct",
    "start": "61199",
    "end": "66960"
  },
  {
    "text": "basically please be respectful for all for all of your fellow presidents as well as presenters and speakers so with",
    "start": "66960",
    "end": "74320"
  },
  {
    "text": "that i'll hand it over to the speakers to kick off today's presentation",
    "start": "74320",
    "end": "79758"
  },
  {
    "text": "okay um thanks annie hello everyone let me quickly share my screen",
    "start": "80960",
    "end": "87520"
  },
  {
    "text": "and then i'll start the presentation today let me know i cannot see my screen like",
    "start": "87520",
    "end": "94479"
  },
  {
    "text": "like the slide stack",
    "start": "94479",
    "end": "98200"
  },
  {
    "start": "100000",
    "end": "139000"
  },
  {
    "text": "all right i guess that's a yes um hello everyone uh welcome to like uh",
    "start": "100560",
    "end": "106159"
  },
  {
    "text": "this uh cncf webinar for kubernetes and we're gonna talk about like upcoming",
    "start": "106159",
    "end": "111280"
  },
  {
    "text": "features in canva 160 release and today you know just a few like uh a background",
    "start": "111280",
    "end": "117920"
  },
  {
    "text": "about the speakers today we have chip dollar and i'm shooting down we're we're",
    "start": "117920",
    "end": "123360"
  },
  {
    "text": "both skid row and tenors and cheap is uh the one focusing on like contributing to",
    "start": "123360",
    "end": "128800"
  },
  {
    "text": "all different phases of kiberno except for like developing and i'm currently",
    "start": "128800",
    "end": "133840"
  },
  {
    "text": "leading the the current project on the development side all right uh so today we're gonna have",
    "start": "133840",
    "end": "141680"
  },
  {
    "start": "139000",
    "end": "179000"
  },
  {
    "text": "this is like then overview of the uh topics for today we're gonna have a quick introduction of kirono's",
    "start": "141680",
    "end": "148720"
  },
  {
    "text": "architecture and the structures of the kernel policies and then we'll jump directly to",
    "start": "148720",
    "end": "155599"
  },
  {
    "text": "the uh new features in kiberno and we have a whole bunch of like different demos today uh like and we'll show you",
    "start": "155599",
    "end": "163519"
  },
  {
    "text": "like how that new features work in the in the kubernetes cluster right and i will take the questions at the end",
    "start": "163519",
    "end": "170000"
  },
  {
    "text": "but if you have like in case you have any questions popped up in between feel free to pause us there and i will happy",
    "start": "170000",
    "end": "176800"
  },
  {
    "text": "to help all right um so like for the kiverno high level",
    "start": "176800",
    "end": "183519"
  },
  {
    "start": "179000",
    "end": "319000"
  },
  {
    "text": "architecture as you know like the kiverno is the kubernetes policy engine",
    "start": "183519",
    "end": "189760"
  },
  {
    "text": "which is native to kubernetes and it runs as the emission controller",
    "start": "189760",
    "end": "194879"
  },
  {
    "text": "which registers limitation and validation web configurations in order to to like",
    "start": "194879",
    "end": "202159"
  },
  {
    "text": "inject defaults and validate configurations uh based on the emission reveal data",
    "start": "202159",
    "end": "209040"
  },
  {
    "text": "and uh based on the policy decision kiberno can either reject your resource",
    "start": "209040",
    "end": "214159"
  },
  {
    "text": "creation or operation or just like simply let it pass and audit the results to the policy",
    "start": "214159",
    "end": "222080"
  },
  {
    "text": "reports and besides that in the mutating web hook kiberno also verified the image",
    "start": "222080",
    "end": "228560"
  },
  {
    "text": "signatures as well as the testations and you can also look up the data from the",
    "start": "228560",
    "end": "234640"
  },
  {
    "text": "external registry and uh to further utilize that in your inner policy",
    "start": "234640",
    "end": "240720"
  },
  {
    "text": "and in addition to that kiverno also runs this generate controller which is",
    "start": "240720",
    "end": "246159"
  },
  {
    "text": "triggered on the emission webhook and generates this intermediate resource or",
    "start": "246159",
    "end": "252080"
  },
  {
    "text": "a cr called generate request and uh the general controller will pick",
    "start": "252080",
    "end": "257120"
  },
  {
    "text": "up the generate request later and apply the paul the generate policies",
    "start": "257120",
    "end": "262720"
  },
  {
    "text": "on on the uh like the trigger resource and other than that kevon also generates",
    "start": "262720",
    "end": "268479"
  },
  {
    "text": "the policy report which is just you know like audit policy results in this uh",
    "start": "268479",
    "end": "274320"
  },
  {
    "text": "policy reports er and uh then you can have the aggregate view of the results",
    "start": "274320",
    "end": "280000"
  },
  {
    "text": "of the policy decisions right and other than that kirono runs a monitor and webhook server which keeps",
    "start": "280000",
    "end": "287759"
  },
  {
    "text": "monitoring the webpack status and as well as managing the juvenile",
    "start": "287759",
    "end": "292880"
  },
  {
    "text": "secrets and config maps so basically this this is the high level",
    "start": "292880",
    "end": "298000"
  },
  {
    "text": "architecture of the emission controller of kubernetes and cabernet also provides",
    "start": "298000",
    "end": "303919"
  },
  {
    "text": "the cli2 that allows you to apply policy without the cluster",
    "start": "303919",
    "end": "309199"
  },
  {
    "text": "and you can also use the ci automate that in your city pipeline",
    "start": "309199",
    "end": "314400"
  },
  {
    "text": "with or validate configuration",
    "start": "314400",
    "end": "318240"
  },
  {
    "start": "319000",
    "end": "367000"
  },
  {
    "text": "okay and uh so this is like the structure of economic policy",
    "start": "319440",
    "end": "325360"
  },
  {
    "text": "and a policy here is just the kubernetes crd and you can create like multiple",
    "start": "325360",
    "end": "331759"
  },
  {
    "text": "cluster policies of policies as the kubernetes cpr",
    "start": "331759",
    "end": "337039"
  },
  {
    "text": "and in each policy you can define one or multiple rules and then each rule you",
    "start": "337039",
    "end": "342720"
  },
  {
    "text": "will have like this match and exclude block to select various",
    "start": "342720",
    "end": "348479"
  },
  {
    "text": "sources on different information and then in its root body you can",
    "start": "348479",
    "end": "353840"
  },
  {
    "text": "specify one of those four type of groups to mutate validate generate resources as",
    "start": "353840",
    "end": "361360"
  },
  {
    "text": "well as verifying image signatures and attestations",
    "start": "361360",
    "end": "367400"
  },
  {
    "start": "367000",
    "end": "405000"
  },
  {
    "text": "okay so this really is you know just a quick entry of caverno there are a lot",
    "start": "367680",
    "end": "373360"
  },
  {
    "text": "of like good resources out there uh for the introductory and how how you can use",
    "start": "373360",
    "end": "378880"
  },
  {
    "text": "kiberno to apply the basic mutate validate policies and uh today we're just gonna like mostly focus on the new",
    "start": "378880",
    "end": "386319"
  },
  {
    "text": "features in 160 since uh this is a big release after the kubecon last year",
    "start": "386319",
    "end": "392840"
  },
  {
    "text": "october and uh this release includes a lot of new features and critical",
    "start": "392840",
    "end": "398560"
  },
  {
    "text": "enhancements so we're going to highlight them some of them in today's session",
    "start": "398560",
    "end": "405680"
  },
  {
    "start": "405000",
    "end": "478000"
  },
  {
    "text": "okay so uh the first thing i want to talk about is this even image verification policy um with kiverno15",
    "start": "406479",
    "end": "415919"
  },
  {
    "text": "we have this type of rule enabled to you know verify the image signatures that",
    "start": "415919",
    "end": "422000"
  },
  {
    "text": "are signed with or without the keys and uh you can use this tool called",
    "start": "422000",
    "end": "427280"
  },
  {
    "text": "cosign to sign the image and it has this kila keyless signing ability",
    "start": "427280",
    "end": "433680"
  },
  {
    "text": "so that in covenant policy you just need to create the root or uh provide the root ca so that kubernetes can validate",
    "start": "433680",
    "end": "440880"
  },
  {
    "text": "or verify your image signatures using the provided certificate",
    "start": "440880",
    "end": "446560"
  },
  {
    "text": "and uh i wanna like uh what's new in one six is this uh use kernel policy to",
    "start": "446560",
    "end": "452560"
  },
  {
    "text": "verify image attestation and there there was a recent new feature added like uh to you know look up image",
    "start": "452560",
    "end": "460720"
  },
  {
    "text": "data from external registry and then the image the background scan",
    "start": "460720",
    "end": "465919"
  },
  {
    "text": "is also enabled for this type of rule so that you can have the policy report",
    "start": "465919",
    "end": "470960"
  },
  {
    "text": "based on the configured image verify policy right so before we jump to the demo i",
    "start": "470960",
    "end": "477360"
  },
  {
    "text": "wanna like you know just give you a little bit background about the attestations",
    "start": "477360",
    "end": "483440"
  },
  {
    "text": "so uh we use this tool called in total uh and it is like a linux foundation",
    "start": "483440",
    "end": "490080"
  },
  {
    "text": "project which has a like a standard attack station format and as you can see",
    "start": "490080",
    "end": "496319"
  },
  {
    "text": "here within a attestation statement you can uh either like custom",
    "start": "496319",
    "end": "503520"
  },
  {
    "text": "customize customize payload or define some of the built-in payload and later use that uh",
    "start": "503520",
    "end": "510720"
  },
  {
    "text": "in kevin policy to validate configurations right so the attestation is just uh something you can sign that",
    "start": "510720",
    "end": "517839"
  },
  {
    "text": "and attach to the image and then stored in the registry and cuverno by default if you have such",
    "start": "517839",
    "end": "525279"
  },
  {
    "text": "policies configured it'll look up from that registry and get all the attestation statements",
    "start": "525279",
    "end": "533279"
  },
  {
    "text": "okay that's that's a little bit background about testation let's",
    "start": "533360",
    "end": "538720"
  },
  {
    "text": "switch to my uh to the policy i have for today and uh we have a few demos for for",
    "start": "538720",
    "end": "544800"
  },
  {
    "start": "539000",
    "end": "600000"
  },
  {
    "text": "this image verify type of rule okay so the first thing we have here is a",
    "start": "544800",
    "end": "551040"
  },
  {
    "text": "kubernetes validate policy and as you can see here i set the validation",
    "start": "551040",
    "end": "556240"
  },
  {
    "text": "failure action to enforce which means i want to reject the resource creation or",
    "start": "556240",
    "end": "562480"
  },
  {
    "text": "operation if if there's any violations on my incoming resource right and then",
    "start": "562480",
    "end": "567760"
  },
  {
    "text": "uh in its root body i'm just trying to specify this verify image blue",
    "start": "567760",
    "end": "573519"
  },
  {
    "text": "and uh it's matching the image coming from my own registry and it provides the",
    "start": "573519",
    "end": "579440"
  },
  {
    "text": "public key to verify the image signatures and this",
    "start": "579440",
    "end": "584959"
  },
  {
    "text": "attestation attributes i'm just saying that okay i want to verify my image is",
    "start": "584959",
    "end": "590240"
  },
  {
    "text": "coming from the right branch and the reviewers of the image has to be in this",
    "start": "590240",
    "end": "596160"
  },
  {
    "text": "uh like the listed reviewers and uh before we do that i want to show",
    "start": "596160",
    "end": "602240"
  },
  {
    "start": "600000",
    "end": "640000"
  },
  {
    "text": "you the image like the tasmanian image i've just built",
    "start": "602240",
    "end": "608480"
  },
  {
    "text": "as you can see here it's a simple past container which is used in kubernetes",
    "start": "608480",
    "end": "614160"
  },
  {
    "text": "and it has the signature ready because i've you know signed the sign",
    "start": "614160",
    "end": "619360"
  },
  {
    "text": "image with the private key and push it upstream and then after that i just want to",
    "start": "619360",
    "end": "624800"
  },
  {
    "text": "verify the attestations in the image so far it doesn't have any so let's see what happens if i create",
    "start": "624800",
    "end": "631760"
  },
  {
    "text": "if i install the policy and create the the resource or a pod using the image",
    "start": "631760",
    "end": "637360"
  },
  {
    "text": "that doesn't have any attestations okay so uh",
    "start": "637360",
    "end": "642959"
  },
  {
    "start": "640000",
    "end": "703000"
  },
  {
    "text": "like i'm running a kubernetes 1 23 cluster",
    "start": "642959",
    "end": "648240"
  },
  {
    "text": "and currently i have kverno installed like this is the latest 1 6 release",
    "start": "648240",
    "end": "654959"
  },
  {
    "text": "candidate let me just check the tag on that right it's running canva 160 rc1",
    "start": "654959",
    "end": "663440"
  },
  {
    "text": "and then so far i don't have i don't think i have any policies and stuff right so c paul here is just the short",
    "start": "663440",
    "end": "670240"
  },
  {
    "text": "name of the cluster policy you can either uh like do crocodile get cluster",
    "start": "670240",
    "end": "675600"
  },
  {
    "text": "policy or uh get simple it'll return you uh the existing cluster policies",
    "start": "675600",
    "end": "682800"
  },
  {
    "text": "all right so let's create policy first let's say crocodile apply",
    "start": "682800",
    "end": "689200"
  },
  {
    "text": "check review in that case uh i want to verify the policies been installed and it's it's",
    "start": "689200",
    "end": "696320"
  },
  {
    "text": "becoming ready right so it indicates this policy is ready to serve the admission request",
    "start": "696320",
    "end": "703360"
  },
  {
    "start": "703000",
    "end": "774000"
  },
  {
    "text": "okay so now we have the policy in place and let's say if i run a just a",
    "start": "703360",
    "end": "709440"
  },
  {
    "text": "standalone pod using my pos container image which",
    "start": "709440",
    "end": "714800"
  },
  {
    "text": "does not have any attestation information right so let's create that",
    "start": "714800",
    "end": "720399"
  },
  {
    "text": "pod and ideally i should see kubernetes blocks that resource creation because",
    "start": "720399",
    "end": "726240"
  },
  {
    "text": "okay this the signature doesn't match right so this rule is actually blocking the resource creation",
    "start": "726240",
    "end": "732720"
  },
  {
    "text": "and then um this remember this cosine coi2 it also provides the a test command",
    "start": "732720",
    "end": "739600"
  },
  {
    "text": "for you to sign the attestation and attach it to the image",
    "start": "739600",
    "end": "745760"
  },
  {
    "text": "like the container image and then a push-up string right so let's invoke",
    "start": "745760",
    "end": "750800"
  },
  {
    "text": "let's run that command called the test uh by the way before we do that uh i",
    "start": "750800",
    "end": "757920"
  },
  {
    "text": "want to you know add these attestations to my image and saying that okay",
    "start": "757920",
    "end": "763279"
  },
  {
    "text": "this image was built from men branch and this is the reviewer who reviews that image right it's just the",
    "start": "763279",
    "end": "770320"
  },
  {
    "text": "the the simple information here and then uh if i run cosign a test",
    "start": "770320",
    "end": "778000"
  },
  {
    "start": "774000",
    "end": "831000"
  },
  {
    "text": "with the key and then i attach the entire review json which is a test",
    "start": "778000",
    "end": "783440"
  },
  {
    "text": "station with this flag and i'll attach the container image here then it'll sign the",
    "start": "783440",
    "end": "791200"
  },
  {
    "text": "test station and attach it to the container i have right just entering the password for the",
    "start": "791200",
    "end": "799120"
  },
  {
    "text": "private key okay so now uh our our container image",
    "start": "799120",
    "end": "807040"
  },
  {
    "text": "should have that attestation let me quickly refresh that",
    "start": "807040",
    "end": "812399"
  },
  {
    "text": "okay good now you can see there is another like signature here which is which has this dot att that's that's",
    "start": "812399",
    "end": "820320"
  },
  {
    "text": "indicating the attack station has been added to your to your container image right",
    "start": "820320",
    "end": "825760"
  },
  {
    "text": "and then let's run the part using the same image again",
    "start": "825760",
    "end": "831760"
  },
  {
    "start": "831000",
    "end": "874000"
  },
  {
    "text": "and in this case because you know if the image is coming from the membrane and it's revealed by",
    "start": "831760",
    "end": "838000"
  },
  {
    "text": "bob then kiverno just allows that pod creation",
    "start": "838000",
    "end": "843760"
  },
  {
    "text": "okay so this is just a like a example of how you use kubernetes to verify the",
    "start": "843760",
    "end": "849440"
  },
  {
    "text": "image attestations let me just quickly pause here and see if we have any questions",
    "start": "849440",
    "end": "857839"
  },
  {
    "text": "okay i guess so far um but hopefully we will get more and more",
    "start": "858240",
    "end": "863360"
  },
  {
    "text": "as we go along okay i think i can just proceed from",
    "start": "863360",
    "end": "870560"
  },
  {
    "text": "here yeah all right and the next example i have is",
    "start": "870560",
    "end": "877839"
  },
  {
    "start": "874000",
    "end": "943000"
  },
  {
    "text": "to look up image data from your image registry and use that in uh like the",
    "start": "877839",
    "end": "884160"
  },
  {
    "text": "validate or the mutate policy for food their policy application right so again",
    "start": "884160",
    "end": "889519"
  },
  {
    "text": "i have a cluster policy here which is matching the pod and simply i'm",
    "start": "889519",
    "end": "895279"
  },
  {
    "text": "just filtering out filtering out the delete request and this with with this validate rule",
    "start": "895279",
    "end": "902720"
  },
  {
    "text": "i'm gonna iterate through like each container images and trying to",
    "start": "902720",
    "end": "908000"
  },
  {
    "text": "calculate the image size right as you can see i have defined the",
    "start": "908000",
    "end": "913360"
  },
  {
    "text": "contacts attributes here and it's trying to use this james pass operation to get",
    "start": "913360",
    "end": "919040"
  },
  {
    "text": "the size of that image and uh and stored in this image size",
    "start": "919040",
    "end": "924320"
  },
  {
    "text": "policy contacts variable right and this variable is later consumed by the deny",
    "start": "924320",
    "end": "930560"
  },
  {
    "text": "rule and here i have a condition say that okay if my image size is greater",
    "start": "930560",
    "end": "935839"
  },
  {
    "text": "than 2gig then block the resource for me otherwise allow allow the creation right",
    "start": "935839",
    "end": "942959"
  },
  {
    "text": "so let me clean up the previous uh like cluster policy",
    "start": "942959",
    "end": "949839"
  },
  {
    "text": "and then i'll delete the workloads the part i just run",
    "start": "949920",
    "end": "955199"
  },
  {
    "text": "like a quad test",
    "start": "955199",
    "end": "959279"
  },
  {
    "text": "and then apply that uh like block image policy to cluster",
    "start": "960320",
    "end": "968839"
  },
  {
    "text": "okay let's check whether the image is ready or not it's not ready yet",
    "start": "969120",
    "end": "975120"
  },
  {
    "text": "okay now it became ready and then i'm gonna create uh first i'm gonna create a",
    "start": "975120",
    "end": "981199"
  },
  {
    "text": "like a busy box pod um you know apparently busy box size is",
    "start": "981199",
    "end": "986320"
  },
  {
    "text": "this you know there's no chance it exceeds the limit right so i should see the the the busy",
    "start": "986320",
    "end": "992720"
  },
  {
    "text": "box creation should be allowed and let's just execute that command let's say",
    "start": "992720",
    "end": "1000000"
  },
  {
    "text": "demo dash dash image visit box one of 28",
    "start": "1000000",
    "end": "1006480"
  },
  {
    "text": "and in this case camera look up the the image data and tries to calculate the",
    "start": "1006480",
    "end": "1012079"
  },
  {
    "text": "size of the busy box image and after that um you just see the pod creation",
    "start": "1012079",
    "end": "1018880"
  },
  {
    "text": "pass pass through and then uh i'm gonna create another like a pod using this large cluster",
    "start": "1018880",
    "end": "1027360"
  },
  {
    "text": "sorry large image which its size apparently exceeds 2gig",
    "start": "1027360",
    "end": "1032640"
  },
  {
    "text": "and uh you know ideally kubernetes should block that resource creation for me",
    "start": "1032640",
    "end": "1039839"
  },
  {
    "text": "so let's run that command",
    "start": "1040160",
    "end": "1043919"
  },
  {
    "start": "1048000",
    "end": "1160000"
  },
  {
    "text": "okay now you can see that okay my policy block large images",
    "start": "1048400",
    "end": "1054559"
  },
  {
    "text": "just about the demo creation because the image size exceeds to 2 gig",
    "start": "1054559",
    "end": "1061520"
  },
  {
    "text": "all right and uh next i'm going to have another like policy",
    "start": "1061520",
    "end": "1066960"
  },
  {
    "text": "leveraging the image data that it's been used in the take policy and it's just",
    "start": "1066960",
    "end": "1072880"
  },
  {
    "text": "trying to replace the image to the resolved ref",
    "start": "1072880",
    "end": "1078240"
  },
  {
    "text": "again here i have a cluster policy matching a pod i'm trying to filter out",
    "start": "1078240",
    "end": "1084160"
  },
  {
    "text": "delete a request and there i have this for each mutate rule defined and again",
    "start": "1084160",
    "end": "1090640"
  },
  {
    "text": "trying to iterate through container images and store that resolved image information to this",
    "start": "1090640",
    "end": "1098720"
  },
  {
    "text": "policy context variable and the and this this variable is later used in this",
    "start": "1098720",
    "end": "1104080"
  },
  {
    "text": "mutate patch strategy merge pattern and i just try to replace the image by",
    "start": "1104080",
    "end": "1109760"
  },
  {
    "text": "its reference okay so let's apply the policy to the cluster",
    "start": "1109760",
    "end": "1116559"
  },
  {
    "text": "say resolve and then um okay let's do that uh pause image again",
    "start": "1116559",
    "end": "1123120"
  },
  {
    "text": "so if i run do i have that",
    "start": "1123120",
    "end": "1128559"
  },
  {
    "text": "let's try um",
    "start": "1128559",
    "end": "1131520"
  },
  {
    "text": "okay it said wow all right i don't have that great so uh you can see the part been",
    "start": "1135520",
    "end": "1141600"
  },
  {
    "text": "created and if we inspect the public uh image",
    "start": "1141600",
    "end": "1148240"
  },
  {
    "text": "you'll see that um the image should be replaced by its",
    "start": "1148240",
    "end": "1153840"
  },
  {
    "text": "resolved reference instead of uh like uh the image i specified in the command",
    "start": "1153840",
    "end": "1160559"
  },
  {
    "start": "1160000",
    "end": "1425000"
  },
  {
    "text": "okay this is then an example of the uh like uh",
    "start": "1160559",
    "end": "1165919"
  },
  {
    "text": "how how to use uh image data and validate and mutate policies",
    "start": "1165919",
    "end": "1172240"
  },
  {
    "text": "all right and uh going back to the slides",
    "start": "1172240",
    "end": "1178200"
  },
  {
    "text": "as well um we got some answers in the chat already but if you want to expand a bit so there was uh santosh asking about",
    "start": "1180480",
    "end": "1188480"
  },
  {
    "text": "sure they got details thank you and then there was uh amir asking about",
    "start": "1188480",
    "end": "1194320"
  },
  {
    "text": "um james back which is a query language for jason so",
    "start": "1194320",
    "end": "1200000"
  },
  {
    "text": "um if you want to understand those yeah okay i saw them are already answered and",
    "start": "1200000",
    "end": "1207679"
  },
  {
    "text": "uh some of the links are provided but if you want to learn more about jamie's password the uh that type of policy feel",
    "start": "1207679",
    "end": "1214559"
  },
  {
    "text": "free to you know browse our like your own website and we have",
    "start": "1214559",
    "end": "1219679"
  },
  {
    "text": "all the documentations ready uh like on this on this writing policies page and",
    "start": "1219679",
    "end": "1225360"
  },
  {
    "text": "also we're working on like one six uh release uh trying to you know uh",
    "start": "1225360",
    "end": "1231679"
  },
  {
    "text": "publish everything along with the q1016 release",
    "start": "1231679",
    "end": "1237679"
  },
  {
    "text": "and to just expand on the on the james path because this is the theme that that comes up uh pretty frequently in",
    "start": "1238080",
    "end": "1244240"
  },
  {
    "text": "cavernous policies just a real quick overview you can obviously go and read the link but jamespath is just a query",
    "start": "1244240",
    "end": "1249760"
  },
  {
    "text": "language for json that we use internally to perform filtering and selection on complex data",
    "start": "1249760",
    "end": "1257520"
  },
  {
    "text": "structures and this is beneficial because it's not a you know you can get",
    "start": "1257520",
    "end": "1262559"
  },
  {
    "text": "many of the powerful things that that you need to by policy without having to write a programming language so by",
    "start": "1262559",
    "end": "1268880"
  },
  {
    "text": "tapping into a filter language we can allow some pretty complex expressions to",
    "start": "1268880",
    "end": "1274400"
  },
  {
    "text": "be built to do pretty much anything or most things for sure that",
    "start": "1274400",
    "end": "1280240"
  },
  {
    "text": "you'd need to do with policy so a little bit of background on james path and you'll see that across many caverno",
    "start": "1280240",
    "end": "1286480"
  },
  {
    "text": "policies it's not a requirement but some things uh you you may need to use james",
    "start": "1286480",
    "end": "1292080"
  },
  {
    "text": "path for others just a simple pattern statement",
    "start": "1292080",
    "end": "1297440"
  },
  {
    "text": "perfect and then there's a um extra question so amir continues what if we",
    "start": "1297679",
    "end": "1303360"
  },
  {
    "text": "want more complex mutations yeah i mean it's like with with most use cases if",
    "start": "1303360",
    "end": "1310240"
  },
  {
    "text": "your if your use case gets more and more complex then you may need to involve some james path",
    "start": "1310240",
    "end": "1315679"
  },
  {
    "text": "but for simple mutations you may not need any um if you need to if you do",
    "start": "1315679",
    "end": "1320799"
  },
  {
    "text": "need to do complex mutations whatever the definition of that is that may be well number one stating what",
    "start": "1320799",
    "end": "1327120"
  },
  {
    "text": "your needs are and then if you look at the documentation and we we try and keep the documentation pretty up to date and",
    "start": "1327120",
    "end": "1333760"
  },
  {
    "text": "and pretty descriptive of all the the capabilities you can see examples of how",
    "start": "1333760",
    "end": "1338799"
  },
  {
    "text": "that would be done including the policies which shooting is showing and i'll show these a little bit later but we've got an easy way that she's",
    "start": "1338799",
    "end": "1345440"
  },
  {
    "text": "pointing out to filter mutate so that you can you can see how that's done to solve",
    "start": "1345440",
    "end": "1351679"
  },
  {
    "text": "either your use case or in many cases it may already be done you just pick it up and use it",
    "start": "1351679",
    "end": "1358080"
  },
  {
    "text": "right exactly so currently we have 22 mutate policy samples here available on",
    "start": "1358080",
    "end": "1363600"
  },
  {
    "text": "the website but uh feel free to browse it but uh if if it cannot address your",
    "start": "1363600",
    "end": "1369039"
  },
  {
    "text": "use case feel free to reach out and we'll definitely uh add that to to our sample post",
    "start": "1369039",
    "end": "1375520"
  },
  {
    "text": "perfect uh then there's one additional question more so so i'm going to",
    "start": "1375520",
    "end": "1381360"
  },
  {
    "text": "continue so we cannot use scripting languages like something yeah uh right now the scripting language",
    "start": "1381360",
    "end": "1388480"
  },
  {
    "text": "that we're enabling is james path it's not a bring your own scripting language we are",
    "start": "1388480",
    "end": "1393760"
  },
  {
    "text": "evaluating some ways to maybe bring your own uh language like maybe javascript or",
    "start": "1393760",
    "end": "1399760"
  },
  {
    "text": "something but as of right now um it's really just one and quite honestly we found that with james path",
    "start": "1399760",
    "end": "1407200"
  },
  {
    "text": "there are i mean at least in my my experience and i i uh keep to a lot of what the community is",
    "start": "1407200",
    "end": "1413520"
  },
  {
    "text": "doing i haven't i haven't run across much of anything that can't be accomplished with caverno policies and",
    "start": "1413520",
    "end": "1419440"
  },
  {
    "text": "james path i'm sure there are some use cases but they're probably not fairly they're they're not prevalent",
    "start": "1419440",
    "end": "1426880"
  },
  {
    "start": "1425000",
    "end": "1468000"
  },
  {
    "text": "right and we're also avoiding like uh doing external costs if if we enable",
    "start": "1427440",
    "end": "1432960"
  },
  {
    "text": "like the javascript uh there's no control on that right so currently kubernetes can look up data from",
    "start": "1432960",
    "end": "1438559"
  },
  {
    "text": "existing clusters through config map through api cause and uh this image uh",
    "start": "1438559",
    "end": "1444240"
  },
  {
    "text": "like a data lookup it just recently added but that's that's all like for the lookups of kevin so that's one of the",
    "start": "1444240",
    "end": "1451679"
  },
  {
    "text": "other reason we're just kind of hesitating adding that to uh the",
    "start": "1451679",
    "end": "1456840"
  },
  {
    "text": "kiberno perfect thanks for the extra info and uh keep the questions coming up everyone we will answer as we go as well",
    "start": "1456840",
    "end": "1463279"
  },
  {
    "text": "as in the end so thank you so much for the questions so far okay thanks sounds good let me just uh",
    "start": "1463279",
    "end": "1471120"
  },
  {
    "start": "1468000",
    "end": "1680000"
  },
  {
    "text": "continue from here all right and there are also a few other",
    "start": "1471120",
    "end": "1476480"
  },
  {
    "text": "critical enhancements we added to kubernetes one is related to the conventional",
    "start": "1476480",
    "end": "1482559"
  },
  {
    "text": "performance as we've seen that in caverno prior priority to kirino 1 6",
    "start": "1482559",
    "end": "1488559"
  },
  {
    "text": "the the memory usage uh grows if you have like a large scale of",
    "start": "1488559",
    "end": "1494559"
  },
  {
    "text": "clusters and the reason for that is we use this dynamic informers",
    "start": "1494559",
    "end": "1500400"
  },
  {
    "text": "in the background controller and uh you know by default the kubernetes informers maintains the",
    "start": "1500400",
    "end": "1506240"
  },
  {
    "text": "memory cache for that so if you have thousands of load uh resources and so in the cluster convertible memory would",
    "start": "1506240",
    "end": "1513520"
  },
  {
    "text": "grow in that case and with one six we kind of moved away from dynamic",
    "start": "1513520",
    "end": "1519120"
  },
  {
    "text": "informers in the policy controller and it's been verified that uh the memory usage was reduced from around like 400",
    "start": "1519120",
    "end": "1527520"
  },
  {
    "text": "mac to 200 mag with 80 crown jobs and 10k config maps scheduled in the cluster",
    "start": "1527520",
    "end": "1534720"
  },
  {
    "text": "right so just in general we don't want kirono like memory usage to grow",
    "start": "1534720",
    "end": "1540880"
  },
  {
    "text": "if especially when you're running it on the on the large scale of clusters and we're also",
    "start": "1540880",
    "end": "1546799"
  },
  {
    "text": "uh in the in the release candidate of 160 we're trying to collect more data on that and keep monitoring the the memory",
    "start": "1546799",
    "end": "1554720"
  },
  {
    "text": "usage in the future okay and another related is like uh how",
    "start": "1554720",
    "end": "1560080"
  },
  {
    "text": "you use kubernetes like how cavernal deals with failure scenarios right we've heard of like some of the use",
    "start": "1560080",
    "end": "1566960"
  },
  {
    "text": "cases from the community that the user shuts down the the entire cluster at least the",
    "start": "1566960",
    "end": "1574480"
  },
  {
    "text": "data plan uh at night and then restart the cluster in the morning without",
    "start": "1574480",
    "end": "1580320"
  },
  {
    "text": "terminating kiverno create gracefully so in that case when you bring back your",
    "start": "1580320",
    "end": "1586080"
  },
  {
    "text": "cluster there could be a chance that um caverno is not recovered yet so the",
    "start": "1586080",
    "end": "1592240"
  },
  {
    "text": "admission webhook configurations will block all the resource from recovering",
    "start": "1592240",
    "end": "1598640"
  },
  {
    "text": "right so in that case in one six kilverno enabled this namespace selector by default for you to exclude the",
    "start": "1598640",
    "end": "1606240"
  },
  {
    "text": "namespace dynamically especially you know for the namespace like coop system",
    "start": "1606240",
    "end": "1611440"
  },
  {
    "text": "another default namespace you may want to exclude the workloads in those namespaces",
    "start": "1611440",
    "end": "1617600"
  },
  {
    "text": "and you can also configure the failure policy for web for configurations",
    "start": "1617600",
    "end": "1623279"
  },
  {
    "text": "per kiborno policy and by doing that on like for example if you set the failure",
    "start": "1623279",
    "end": "1629200"
  },
  {
    "text": "policy to fail in that case if if webhook is not responding or if there's any arrow uh of",
    "start": "1629200",
    "end": "1637600"
  },
  {
    "text": "the of of the mission web hug kubernetes will just reject the admission request",
    "start": "1637600",
    "end": "1643120"
  },
  {
    "text": "on that uh otherwise if you have it set to ignore then after the timeout",
    "start": "1643120",
    "end": "1648960"
  },
  {
    "text": "kubernetes will just allow everything to pass okay and uh we also have this dynamic",
    "start": "1648960",
    "end": "1656000"
  },
  {
    "text": "web hook which is introduced in run five uh so this is something akiverno will",
    "start": "1656000",
    "end": "1661520"
  },
  {
    "text": "automatically and manage the webpage configurations based on the installed policy that is to",
    "start": "1661520",
    "end": "1668640"
  },
  {
    "text": "say when you don't have any policies installed in your cluster then kyreno won't impact any of your",
    "start": "1668640",
    "end": "1675279"
  },
  {
    "text": "like the cluster workloads or the resources",
    "start": "1675279",
    "end": "1679600"
  },
  {
    "start": "1680000",
    "end": "1725000"
  },
  {
    "text": "okay uh one last demo from me uh for today is this namespace scoped failure",
    "start": "1680559",
    "end": "1687120"
  },
  {
    "text": "action so as you've seen in the previous demo before some of the resource creation",
    "start": "1687120",
    "end": "1692720"
  },
  {
    "text": "got rejected because i have the failure action set to enforce and uh in that case like",
    "start": "1692720",
    "end": "1700080"
  },
  {
    "text": "especially for a cluster policy you can only control the failure action across",
    "start": "1700080",
    "end": "1706399"
  },
  {
    "text": "entire namespaces and with this override ability on the failure action you're",
    "start": "1706399",
    "end": "1712640"
  },
  {
    "text": "able to make exceptions for kubernetes namespaces and you know simply either",
    "start": "1712640",
    "end": "1719600"
  },
  {
    "text": "like to enforce or audit uh the policy violations",
    "start": "1719600",
    "end": "1724799"
  },
  {
    "text": "right so the example for that i have for today is this validate policy",
    "start": "1724799",
    "end": "1731520"
  },
  {
    "text": "um so let's look at the root body it's trying to match the pot and verify the pods has to have this",
    "start": "1731520",
    "end": "1738880"
  },
  {
    "text": "label app defined under under the labels block right and",
    "start": "1738880",
    "end": "1744320"
  },
  {
    "text": "here by default the failure failure action is set to audit while i have this overrides defined and then i'm",
    "start": "1744320",
    "end": "1752559"
  },
  {
    "text": "saying that this within the prod namespace i'm enforcing the workloads",
    "start": "1752559",
    "end": "1758480"
  },
  {
    "text": "and uh and the pods must have this label with a key app",
    "start": "1758480",
    "end": "1764320"
  },
  {
    "text": "right by the way qrino automatically handles the part controllers like deployment",
    "start": "1764320",
    "end": "1770480"
  },
  {
    "text": "uh stick for set and others by converting the uh adding the additional autogen rules to",
    "start": "1770480",
    "end": "1778000"
  },
  {
    "text": "the policy so uh let's just quickly",
    "start": "1778000",
    "end": "1783120"
  },
  {
    "text": "apply the policy okay let me just clean up the previous one because i don't want",
    "start": "1783120",
    "end": "1788240"
  },
  {
    "text": "my resource be blocked by any of the previous policies uh okay after that",
    "start": "1788240",
    "end": "1795840"
  },
  {
    "text": "let's apply the policy to the cluster say overwrite failure action",
    "start": "1795840",
    "end": "1802240"
  },
  {
    "text": "and then uh once i have it ready okay it's ready now uh so i'm going to",
    "start": "1802240",
    "end": "1808720"
  },
  {
    "text": "create two parts one in the default namespace and another in the prod namespace uh",
    "start": "1808720",
    "end": "1815200"
  },
  {
    "text": "both without the label app and uh the expected behavior is that",
    "start": "1815200",
    "end": "1820640"
  },
  {
    "text": "the default part like the part in the default name space should uh",
    "start": "1820640",
    "end": "1826000"
  },
  {
    "text": "be allowed about uh the part and the product name space should be blocked okay",
    "start": "1826000",
    "end": "1831679"
  },
  {
    "text": "so let's say uh kubrow run what should be name i use",
    "start": "1831679",
    "end": "1838000"
  },
  {
    "text": "test failure action and let's run nginx image",
    "start": "1838000",
    "end": "1845840"
  },
  {
    "text": "in the default namespace so apparently you can see it's been uh the questions been allowed and if i try to schedule it",
    "start": "1845840",
    "end": "1853520"
  },
  {
    "text": "to the product name space so in this case uh the pod creation was blocked by",
    "start": "1853520",
    "end": "1858559"
  },
  {
    "text": "kubernetes that's that's how you can control like make exceptions on on the on the name",
    "start": "1858559",
    "end": "1865200"
  },
  {
    "text": "spaces so a couple questions that came up here shifting uh the label pattern",
    "start": "1865200",
    "end": "1872000"
  },
  {
    "text": "uh is that a regex and can you explain what the label pattern does",
    "start": "1872000",
    "end": "1877760"
  },
  {
    "text": "so uh yes indeed it's a regex and uh it's just trying to say uh you must have",
    "start": "1877760",
    "end": "1883600"
  },
  {
    "text": "this label defined on your incoming pod or workload and the question marks",
    "start": "1883600",
    "end": "1889840"
  },
  {
    "text": "i recall it indicating that you must have at least one and they start",
    "start": "1889840",
    "end": "1895440"
  },
  {
    "text": "a star uh like a character just trying to match any of the patterns",
    "start": "1895440",
    "end": "1902960"
  },
  {
    "text": "and what are the possible action types that are available",
    "start": "1902960",
    "end": "1907840"
  },
  {
    "text": "right the action type uh so currently we support uh creation update",
    "start": "1908000",
    "end": "1914320"
  },
  {
    "text": "delete and connect connect is something like when you exec tries to exact into",
    "start": "1914320",
    "end": "1921200"
  },
  {
    "text": "a kubernetes pod so that the emission request is sent with the connect",
    "start": "1921200",
    "end": "1927440"
  },
  {
    "text": "type of operation so that's four types of operations",
    "start": "1927440",
    "end": "1933840"
  },
  {
    "text": "for the policy if the question was more around what are the action types that a policy can take there's really two",
    "start": "1933840",
    "end": "1939760"
  },
  {
    "text": "there's audit which means that the resource will be allowed but it'll be reported on in a policy report and",
    "start": "1939760",
    "end": "1945919"
  },
  {
    "text": "there's enforce which means that the uh object will be immediately blocked",
    "start": "1945919",
    "end": "1951279"
  },
  {
    "text": "yes so enforce and odd are the two options right the fader action only supports",
    "start": "1951279",
    "end": "1956720"
  },
  {
    "text": "enforce an audit",
    "start": "1956720",
    "end": "1960360"
  },
  {
    "text": "okay cool all right okay i guess that's uh all the demos",
    "start": "1962559",
    "end": "1969200"
  },
  {
    "text": "from me for today let me quickly stop sure and i'll hand off to chip he will talk about",
    "start": "1969200",
    "end": "1975600"
  },
  {
    "text": "like uh a few uh new opera jamie as pass operators and uh the updated uh rental",
    "start": "1975600",
    "end": "1982480"
  },
  {
    "text": "policies yeah thank you let me",
    "start": "1982480",
    "end": "1987840"
  },
  {
    "text": "go and put this in and i realized i hit the wrong button but",
    "start": "1987840",
    "end": "1993440"
  },
  {
    "text": "uh one thing that i'll mention that uh reminded me from uh shooting's last slide that may not be",
    "start": "1993440",
    "end": "2001120"
  },
  {
    "text": "fully appreciated is the uh when she showed the screenshot here of the validation failure action",
    "start": "2001120",
    "end": "2008559"
  },
  {
    "text": "overrides you'll notice that this is a cube control explain command and everything in converto all of the crds",
    "start": "2008559",
    "end": "2015360"
  },
  {
    "text": "are open api v3 schemas which means that you can do and explain on any aspect of",
    "start": "2015360",
    "end": "2020720"
  },
  {
    "text": "any portion of a caverno policy or a report and it should tell you what it does what it",
    "start": "2020720",
    "end": "2027200"
  },
  {
    "text": "means and how to configure that and that's a super helpful thing as i'm sure",
    "start": "2027200",
    "end": "2032640"
  },
  {
    "text": "you all know but you don't have to necessarily go and dig them through the documentation or go look at pr's just cube controller",
    "start": "2032640",
    "end": "2039039"
  },
  {
    "text": "explain whatever you want and it'll tell you how to go about writing that that policy object",
    "start": "2039039",
    "end": "2045279"
  },
  {
    "start": "2045000",
    "end": "2155000"
  },
  {
    "text": "and uh shifting and folks if there are any questions as i'm going through this uh either just",
    "start": "2045279",
    "end": "2051760"
  },
  {
    "text": "stop me or we'll get them in the uh we'll get them in the end um so i want to keep uh going where",
    "start": "2051760",
    "end": "2058800"
  },
  {
    "text": " left off as far as some of the new things that are coming out in 1.6",
    "start": "2058800",
    "end": "2064158"
  },
  {
    "text": "and also show some demos around these um first thing is we've got several new",
    "start": "2064159",
    "end": "2070320"
  },
  {
    "text": "operators that make it uh even easier or in some cases allow some new policies to",
    "start": "2070320",
    "end": "2076320"
  },
  {
    "text": "be written and for those that aren't familiar operators are just a way of when you're building an expression and a covernal",
    "start": "2076320",
    "end": "2082480"
  },
  {
    "text": "policy rather than stating you know what the pattern if",
    "start": "2082480",
    "end": "2087839"
  },
  {
    "text": "it's if it's a simple pattern that works well in a lot of use cases but in other use cases you need to be more",
    "start": "2087839",
    "end": "2093599"
  },
  {
    "text": "expressive around you know what what things should be checked how they should be checked and what set they should be",
    "start": "2093599",
    "end": "2100320"
  },
  {
    "text": "checked and so these operators are useful in preconditions which are a way to",
    "start": "2100320",
    "end": "2109040"
  },
  {
    "text": "determine whether a policy is actually going to fire it's uh it's sort of an intermediary in",
    "start": "2109040",
    "end": "2116000"
  },
  {
    "text": "between uh a match statement and the actual policy body so you can further refine with precondition",
    "start": "2116000",
    "end": "2122320"
  },
  {
    "text": "based on these operators and an expression that you build whether this policy should actually apply to an incoming object and also in uh validate",
    "start": "2122320",
    "end": "2130880"
  },
  {
    "text": "policies we have uh a type of validate that is a deny so a validate rule is",
    "start": "2130880",
    "end": "2136800"
  },
  {
    "text": "just saying i want you to make sure that it looks like this and a deny just inverts that and says",
    "start": "2136800",
    "end": "2142560"
  },
  {
    "text": "go ahead and block if it looks like this instead and so in both cases we can use these operators",
    "start": "2142560",
    "end": "2148240"
  },
  {
    "text": "and we have got four new ones here and it's any in all in any not in and all",
    "start": "2148240",
    "end": "2154000"
  },
  {
    "text": "not in and let me flip over and demonstrate how this works so",
    "start": "2154000",
    "end": "2160560"
  },
  {
    "start": "2155000",
    "end": "2555000"
  },
  {
    "text": "i'm looking at a a policy here that uses the all in operator and so in our",
    "start": "2160560",
    "end": "2167520"
  },
  {
    "text": "validate message here we're doing a a for each and just looping through all of",
    "start": "2167520",
    "end": "2173040"
  },
  {
    "text": "the containers the ephemeral containers and the indent containers and we are interested in knowing",
    "start": "2173040",
    "end": "2180400"
  },
  {
    "text": "uh if any of these two values so in this case we're looking at ad the objective",
    "start": "2180400",
    "end": "2186320"
  },
  {
    "text": "here is to drop any pod that has any container that's",
    "start": "2186320",
    "end": "2191520"
  },
  {
    "text": "attempting to add both of these capabilities together not just one or the other but both of them",
    "start": "2191520",
    "end": "2196880"
  },
  {
    "text": "together so if you see a container that has in the add statement net raw and net",
    "start": "2196880",
    "end": "2203040"
  },
  {
    "text": "bind service together deny the pod so using the all in operator we can do that",
    "start": "2203040",
    "end": "2210880"
  },
  {
    "text": "and we're going to put those two values in the key statement and we're going to",
    "start": "2210880",
    "end": "2215920"
  },
  {
    "text": "check and see if all of those are in not just one not the other but all of those are in the value of whatever specified",
    "start": "2215920",
    "end": "2224400"
  },
  {
    "text": "for the add statement in a pod and so if we look at an example of a bad pod here",
    "start": "2224400",
    "end": "2229520"
  },
  {
    "text": "i've got a pod that does add both of those in addition it adds a third one cis shown but it also adds the two that",
    "start": "2229520",
    "end": "2235920"
  },
  {
    "text": "we don't want so i should be able to block this pod",
    "start": "2235920",
    "end": "2240880"
  },
  {
    "text": "i'll create the policy make sure the policy is ready and",
    "start": "2241040",
    "end": "2247440"
  },
  {
    "text": "apply bad pod and we can see as expected the all not",
    "start": "2247440",
    "end": "2253200"
  },
  {
    "text": "in operator has blocked this because it sees that the two values were in",
    "start": "2253200",
    "end": "2258880"
  },
  {
    "text": "the list of uh add the the the add array for this container",
    "start": "2258880",
    "end": "2265280"
  },
  {
    "text": "so it blocked that and by comparison if we look at a good pod that has",
    "start": "2265280",
    "end": "2271119"
  },
  {
    "text": "one of the ones that we didn't want but both of them and the operator is all in so we should be able to apply",
    "start": "2271119",
    "end": "2277599"
  },
  {
    "text": "the good pod and as expected that's allowed so all not in",
    "start": "2277599",
    "end": "2283920"
  },
  {
    "text": "pretty straightforward um all these operators are really helpful in building either allow lists or deny lists",
    "start": "2283920",
    "end": "2290400"
  },
  {
    "text": "depending on how you build the expression",
    "start": "2290400",
    "end": "2294480"
  },
  {
    "text": "so that's all not in and taking a look at",
    "start": "2296000",
    "end": "2301680"
  },
  {
    "text": "our that's all in and then if we take a look at all not in uh it's a basically an inversion of that",
    "start": "2301680",
    "end": "2309359"
  },
  {
    "text": "statement where we can check and ensure that we deny so it's a similar type of uh similar",
    "start": "2309359",
    "end": "2316160"
  },
  {
    "text": "type of expression but we're saying deny a pod if these two in this case uh",
    "start": "2316160",
    "end": "2322640"
  },
  {
    "text": "capabilities with a drop statement are not in what's in the drop",
    "start": "2322640",
    "end": "2329119"
  },
  {
    "text": "so an inverted check there so we should be able to look at a bad pod or is going to get my policies",
    "start": "2329119",
    "end": "2338520"
  },
  {
    "text": "and i'll apply this policy and so uh bad pod says that we've got systone",
    "start": "2344000",
    "end": "2352000"
  },
  {
    "text": "and netbind service but the policy said make sure that these two all of these are not in that",
    "start": "2352000",
    "end": "2360160"
  },
  {
    "text": "and as expected that has been denied and then by contrast if we look at a good",
    "start": "2362720",
    "end": "2367839"
  },
  {
    "text": "pod it does have both of those so all of those",
    "start": "2367839",
    "end": "2374000"
  },
  {
    "text": "those are those are containment values and then that's created",
    "start": "2374000",
    "end": "2380560"
  },
  {
    "text": "yeah and there's a question from the audience um how can we be notified whenever an audit action causes the plot",
    "start": "2380560",
    "end": "2387119"
  },
  {
    "text": "to be blocked and is there an alerting system like the one in communities or something similar from a mirror",
    "start": "2387119",
    "end": "2394240"
  },
  {
    "text": "so yes by by default uh and mentioned this a minute ago the validation failure",
    "start": "2394240",
    "end": "2400160"
  },
  {
    "text": "action can be either in force or audit if it's an enforced that means that the pod is going to be blocked or whatever the resource is is going to be blocked",
    "start": "2400160",
    "end": "2406480"
  },
  {
    "text": "immediately if it's in enforcement or in audit mode it will be allowed but it will report in a policy report object so",
    "start": "2406480",
    "end": "2414160"
  },
  {
    "text": "you can see these if you do for example c paul r is the alias for cluster policy report i don't",
    "start": "2414160",
    "end": "2420960"
  },
  {
    "text": "have anything there and i don't have anything",
    "start": "2420960",
    "end": "2426000"
  },
  {
    "text": "here uh but there's nothing reported but if i created that bad pod and the policy was",
    "start": "2426000",
    "end": "2433200"
  },
  {
    "text": "in audit mode i would be able to get the policy report for this namespace because applause and namespace resource and see",
    "start": "2433200",
    "end": "2440240"
  },
  {
    "text": "that one of them had failed uh the validation and so that's a way",
    "start": "2440240",
    "end": "2445359"
  },
  {
    "text": "for you or if you wanted to decouple that functionality and say",
    "start": "2445359",
    "end": "2450720"
  },
  {
    "text": "you know since it's just another custom resource you can delegate that to like a security group and the security group",
    "start": "2450720",
    "end": "2456640"
  },
  {
    "text": "has the ability to read those policy reports you can get that information that way which is a really helpful thing",
    "start": "2456640",
    "end": "2462720"
  },
  {
    "text": "for your caverno administrators to be able to create policies and then some other",
    "start": "2462720",
    "end": "2468000"
  },
  {
    "text": "group to be able to just simply see what's going on but the metric angle",
    "start": "2468000",
    "end": "2473680"
  },
  {
    "text": "we also do have prometheus metrics that are exposed and yes it will show uh in those metrics",
    "start": "2473680",
    "end": "2480880"
  },
  {
    "text": "and i don't remember what the exact one is offhand but it will show uh the a number of resources that have",
    "start": "2480880",
    "end": "2487200"
  },
  {
    "text": "failed you can go to the documentation and uh if there's a if if anybody wants",
    "start": "2487200",
    "end": "2492560"
  },
  {
    "text": "to post the link to that there's a whole page on the monitoring with prometheus",
    "start": "2492560",
    "end": "2497839"
  },
  {
    "text": "and all of the metrics that are exposed and we've also got a really cool project that's out there it's basically a front",
    "start": "2497839",
    "end": "2504640"
  },
  {
    "text": "end a policy reporter front end that'll show you a lot of these things that are going",
    "start": "2504640",
    "end": "2510319"
  },
  {
    "text": "on in a nice gui that doesn't entail you having to roll your own uh if you want to install that it's an",
    "start": "2510319",
    "end": "2517119"
  },
  {
    "text": "optional component if you would want to install it alongside caverno it'll give you a nice uh web-based dashboard where",
    "start": "2517119",
    "end": "2523760"
  },
  {
    "text": "you can go in and take a look and see you know all of your policies and what your uh",
    "start": "2523760",
    "end": "2529119"
  },
  {
    "text": "what your audit status looks like so several good tools there to help perfect so we're getting all of those",
    "start": "2529119",
    "end": "2535520"
  },
  {
    "text": "links to the chat and i also want to say that thanks so much for everyone who said hi or readings in the chat hello to all",
    "start": "2535520",
    "end": "2542319"
  },
  {
    "text": "of you as well lovely that you joined today and um yeah perfect cool",
    "start": "2542319",
    "end": "2547359"
  },
  {
    "text": "so i'm going to skip over uh a couple of uh of these just in the interest of time",
    "start": "2547359",
    "end": "2553119"
  },
  {
    "text": "um but uh so talked about the first two similar type story with the other two",
    "start": "2553119",
    "end": "2559599"
  },
  {
    "start": "2555000",
    "end": "2855000"
  },
  {
    "text": "um you know the the gist of these is it we're providing much more granularity",
    "start": "2559599",
    "end": "2565040"
  },
  {
    "text": "for you to be able to select exactly what it is that you want when you build an expression um by saying either these",
    "start": "2565040",
    "end": "2571599"
  },
  {
    "text": "things can any of these things can be in or all of these things can be in and vice versa and so um",
    "start": "2571599",
    "end": "2578640"
  },
  {
    "text": "super powerful they'll help uh unlock new possibilities of either writing new",
    "start": "2578640",
    "end": "2584640"
  },
  {
    "text": "types of policies or making existing policies better and then the last two things here",
    "start": "2584640",
    "end": "2590000"
  },
  {
    "text": "we now have support for integer ranges uh and also",
    "start": "2590000",
    "end": "2595040"
  },
  {
    "text": "some of the existing operators like greater than less than etc now support duration",
    "start": "2595040",
    "end": "2600400"
  },
  {
    "text": "and uh simver a couple of these things aren't exactly in 1.6 but they bear",
    "start": "2600400",
    "end": "2607040"
  },
  {
    "text": "um they bear uh fleshing out or or mentioning just because they're super powerful so um and",
    "start": "2607040",
    "end": "2614560"
  },
  {
    "text": "looking at the um the range i guess first so in this policy we want to be able to",
    "start": "2614560",
    "end": "2620800"
  },
  {
    "text": "check that a host port so if you define a pod and it has a host for it in it",
    "start": "2620800",
    "end": "2626640"
  },
  {
    "text": "this range operator is a simple way for you to express a large range of",
    "start": "2626640",
    "end": "2632079"
  },
  {
    "text": "ports i mean it's the you could use it for any type of integer but we've got five thousand to six thousand you can",
    "start": "2632079",
    "end": "2637920"
  },
  {
    "text": "just simply write five thousand dash which is the range operator six thousand and any pod that fits this again this is",
    "start": "2637920",
    "end": "2645040"
  },
  {
    "text": "a james path expression here it'll just be blocked and so if we take a look at example the bad pod this is",
    "start": "2645040",
    "end": "2651920"
  },
  {
    "text": "using host port 53 that should be denied",
    "start": "2651920",
    "end": "2656799"
  },
  {
    "text": "and so if we apply the policy that just had a minute ago which saying collect all of",
    "start": "2658960",
    "end": "2665200"
  },
  {
    "text": "the containers including ephemeral and init containers look at the ports and look at the host parts and if any of",
    "start": "2665200",
    "end": "2672000"
  },
  {
    "text": "those are not in this range deny it because this is a deny rule so we're going to ask",
    "start": "2672000",
    "end": "2677200"
  },
  {
    "text": "basically 5000 to 6000 is our green range anything that falls outside of that is bad so block it and as you can",
    "start": "2677200",
    "end": "2684319"
  },
  {
    "text": "see our bad pod here specifies host port 53 dns is generally not a great thing",
    "start": "2684319",
    "end": "2690240"
  },
  {
    "text": "that you want users to expose on a host port so let's see if we can apply a bad pod and skirt around that and",
    "start": "2690240",
    "end": "2697680"
  },
  {
    "text": "no we can't and by contrast let's see what a good pod looks like this specifies quad 5 5 5",
    "start": "2697680",
    "end": "2704480"
  },
  {
    "text": "5 5 for the host port can we apply this one yes we can because this falls within the",
    "start": "2704480",
    "end": "2710960"
  },
  {
    "text": "allowed range so that one is allowed",
    "start": "2710960",
    "end": "2715200"
  },
  {
    "text": "uh and on the uh greater than so uh just quickly on",
    "start": "2716960",
    "end": "2723040"
  },
  {
    "text": "these won't go and show demos but on the uh the duration comparison and",
    "start": "2723040",
    "end": "2729359"
  },
  {
    "text": "the simber comparison caverno now natively understands sim so",
    "start": "2729359",
    "end": "2734480"
  },
  {
    "text": "you can have something again another james patch pass expression which is going into a pod",
    "start": "2734480",
    "end": "2741760"
  },
  {
    "text": "because that's our kind gonna go look at the label game version and going to get the value of it and we're going to be",
    "start": "2741760",
    "end": "2748000"
  },
  {
    "text": "able to compare that using the greater than and and it's going to natively understand is this greater than",
    "start": "2748000",
    "end": "2755560"
  },
  {
    "text": "1.4.0 well you don't have to write any complex you know uh",
    "start": "2755560",
    "end": "2761280"
  },
  {
    "text": "substitution logic or or scripting logic you can just ask hey is the version greater than one four o",
    "start": "2761280",
    "end": "2767599"
  },
  {
    "text": "if it is block it if it's not allow it so caverno understands that in the value",
    "start": "2767599",
    "end": "2773440"
  },
  {
    "text": "and it also understands duration so uh in this case the the use case for",
    "start": "2773440",
    "end": "2778960"
  },
  {
    "text": "this one might be um you know if you uh particularly in audit mode if you want to be able to be",
    "start": "2778960",
    "end": "2784960"
  },
  {
    "text": "informed about pods that maybe have run out there for over a week or a month or something and the images",
    "start": "2784960",
    "end": "2792800"
  },
  {
    "text": "are you you want to have refreshed over time and you want to rebuild those pods you can have a label or whatever the the",
    "start": "2792800",
    "end": "2799839"
  },
  {
    "text": "key is that expresses time and caverno with the with those operators now understands time so 12 hours it'll",
    "start": "2799839",
    "end": "2806720"
  },
  {
    "text": "understand that 12 hours is greater than 11 hours and you can express it in minutes as well so",
    "start": "2806720",
    "end": "2813839"
  },
  {
    "text": "a couple new capabilities to the existing operators in addition to the new operators that make it um",
    "start": "2813839",
    "end": "2820480"
  },
  {
    "text": "make it possible to write new types of policies as well as existing policies be",
    "start": "2820480",
    "end": "2826800"
  },
  {
    "text": "much smoother and even consolidation of rules because that's another thing that you know you want to be able to express",
    "start": "2826800",
    "end": "2831920"
  },
  {
    "text": "your intent in the most efficient manner possible and in some cases in the past it might",
    "start": "2831920",
    "end": "2837440"
  },
  {
    "text": "have taken several rules to do that uh even though those rules have been expressed you know fairly simply and",
    "start": "2837440",
    "end": "2844079"
  },
  {
    "text": "that you're not programming what the rule is you're just simply writing your intent but now you can collapse those into one",
    "start": "2844079",
    "end": "2850880"
  },
  {
    "text": "rule oracle rules yeah and there's an audience question once again",
    "start": "2850880",
    "end": "2857200"
  },
  {
    "start": "2855000",
    "end": "3175000"
  },
  {
    "text": "and asks any recommendations on patterns and best practices around organizing and",
    "start": "2857200",
    "end": "2862800"
  },
  {
    "text": "structuring policies for large multi-tenant clusters yes a great question uh we should have a",
    "start": "2862800",
    "end": "2869680"
  },
  {
    "text": "section on the website that kind of talks about what the organizational strategies that that may be useful to",
    "start": "2869680",
    "end": "2876480"
  },
  {
    "text": "you but in general you know caverno cluster policy well a caverno policy",
    "start": "2876480",
    "end": "2882000"
  },
  {
    "text": "regardless of whether it's a cluster policy which is a cluster scoped resource or a policy which is a",
    "start": "2882000",
    "end": "2887680"
  },
  {
    "text": "namespace scoped resource is really a container the thing that matters are the rules and so",
    "start": "2887680",
    "end": "2893440"
  },
  {
    "text": "um we see in some cases that some users like to simply write cluster policy like",
    "start": "2893440",
    "end": "2899520"
  },
  {
    "text": "one cluster policy that has all of the validate rules and maybe",
    "start": "2899520",
    "end": "2904559"
  },
  {
    "text": "um another cluster policy that has all of the mutate rules or um depending on you",
    "start": "2904559",
    "end": "2912079"
  },
  {
    "text": "know what what they're trying to do maybe they're a bunch of uh they're a bunch of rules that they need to express",
    "start": "2912079",
    "end": "2918240"
  },
  {
    "text": "for a specific type of resource like for example you have a bunch of policy that you want to wrap around pods",
    "start": "2918240",
    "end": "2924960"
  },
  {
    "text": "but then you have another set of policy that you also want to wrap around like services for example where you could create two cluster policies and have",
    "start": "2924960",
    "end": "2931359"
  },
  {
    "text": "your pod policies one your service policies in another and a combination of that if you wanted",
    "start": "2931359",
    "end": "2937040"
  },
  {
    "text": "to and also the same type of thing when it comes to a name space so you can have a set of cluster policies and also if",
    "start": "2937040",
    "end": "2943680"
  },
  {
    "text": "you're delegating especially multi multi-tenant environments where you are going to delegate some of these uh some",
    "start": "2943680",
    "end": "2949359"
  },
  {
    "text": "of these functions to your namespace administrators or however you however you you uh you call that you probably",
    "start": "2949359",
    "end": "2956400"
  },
  {
    "text": "want them to be able to set some policies but they need to have the ability to find",
    "start": "2956400",
    "end": "2962559"
  },
  {
    "text": "those well you can define yours in cluster policy they can define theirs and a policy that you don't collide",
    "start": "2962559",
    "end": "2968000"
  },
  {
    "text": "because one policy can't override another they just simply extend whatever the conditions are so so there's a lot",
    "start": "2968000",
    "end": "2974720"
  },
  {
    "text": "of ways to go about doing it um but at the end of the day caverno aims to be flexible and also",
    "start": "2974720",
    "end": "2981359"
  },
  {
    "text": "simple with that flexibility to give you whatever the control that you need for your environment and for your your",
    "start": "2981359",
    "end": "2987040"
  },
  {
    "text": "customers your users you should be able to do that perfect and then there was another one",
    "start": "2987040",
    "end": "2993280"
  },
  {
    "text": "as well can we also generate other resources on validation such as generating cvs or",
    "start": "2993280",
    "end": "3000559"
  },
  {
    "text": "creating deploy for example so a generate rule is a specific type of",
    "start": "3000559",
    "end": "3006319"
  },
  {
    "text": "rule in caverno and it's a different type from a validate policy so a validate rule says",
    "start": "3006319",
    "end": "3011599"
  },
  {
    "text": "it's like basically a yes or no answer like here comes a resource we want to take a look at it is it allowed yes or",
    "start": "3011599",
    "end": "3017440"
  },
  {
    "text": "no that's a validate rule a generate rule is here comes a resource based on that the criteria that's in the",
    "start": "3017440",
    "end": "3024480"
  },
  {
    "text": "rule what other resource should we create in response to that so there are two separate rule types they have to be",
    "start": "3024480",
    "end": "3030160"
  },
  {
    "text": "expressed separately but that that's the purpose of a generate rule is to generate a new resource but it still has",
    "start": "3030160",
    "end": "3037280"
  },
  {
    "text": "to match the criteria and rule so if the criteria isn't met it doesn't deny the resource it just",
    "start": "3037280",
    "end": "3043040"
  },
  {
    "text": "says all right the pattern isn't what i'm looking for to create that resource so i'm not going to do anything",
    "start": "3043040",
    "end": "3049280"
  },
  {
    "text": "perfect and okay so we're a little behind here",
    "start": "3049280",
    "end": "3055040"
  },
  {
    "text": "so i'm probably going to have to skip over these because we want to leave some more time for q and a um so we talked about",
    "start": "3055040",
    "end": "3061200"
  },
  {
    "text": "james path and what james path is just a quick recap on that it's a powerful json query language",
    "start": "3061200",
    "end": "3068319"
  },
  {
    "text": "um if you're familiar with uh jq jq's filtering application james path is",
    "start": "3068319",
    "end": "3073680"
  },
  {
    "text": "similar to that but it has a lot more things that are called filters that are built into it and in this release we've",
    "start": "3073680",
    "end": "3079440"
  },
  {
    "text": "added a whole bunch more and so i did want to show uh some of these that were highlighted",
    "start": "3079440",
    "end": "3084559"
  },
  {
    "text": "here but since we're getting lower on time i'll just mention that you know",
    "start": "3084559",
    "end": "3090720"
  },
  {
    "text": "in addition to the existing filters and you can go to the james path website and see all the ones that they have there",
    "start": "3090720",
    "end": "3096160"
  },
  {
    "text": "which are super helpful we've also created a whole bunch of new ones which allow you to",
    "start": "3096160",
    "end": "3101839"
  },
  {
    "text": "do common operations like being able to divide and have caverno understand what you",
    "start": "3101839",
    "end": "3108160"
  },
  {
    "text": "know what the resources are in kubernetes terms that's one of the great things about converto is since it",
    "start": "3108160",
    "end": "3114079"
  },
  {
    "text": "doesn't need it doesn't require your program we try and build in as much of the logic as possible so you can divide",
    "start": "3114079",
    "end": "3120319"
  },
  {
    "text": "one resource like 100 midi bytes by another resource 50 maybe bytes",
    "start": "3120319",
    "end": "3125920"
  },
  {
    "text": "and caverno just does the math behind the scenes and also the unit conversion so that's similar with all of these",
    "start": "3125920",
    "end": "3132559"
  },
  {
    "text": "others uh time sense the ability to look at you know a time stamp and an object and",
    "start": "3132559",
    "end": "3139040"
  },
  {
    "text": "compare that to now or something else and make decisions on that without you having to write a bunch of logic we've",
    "start": "3139040",
    "end": "3144960"
  },
  {
    "text": "already done that path canonicalize the ability for you to",
    "start": "3144960",
    "end": "3150480"
  },
  {
    "text": "look at a path that's specified in like a host path and have that normalized so there's just like one forward slash in",
    "start": "3150480",
    "end": "3157599"
  },
  {
    "text": "between each path separation so don't have the time to go into these but urge you to go and look at uh when it becomes",
    "start": "3157599",
    "end": "3164880"
  },
  {
    "text": "available the documentation try these out um but these are all new james path",
    "start": "3164880",
    "end": "3169920"
  },
  {
    "text": "filters that are coming in caprero one six that are not found in the upstream james path library",
    "start": "3169920",
    "end": "3176720"
  },
  {
    "start": "3175000",
    "end": "3272000"
  },
  {
    "text": "uh also uh for each enhancement so um i'm just going to talk to these real quick because we're running out of time",
    "start": "3176880",
    "end": "3183280"
  },
  {
    "text": "for each is an ability in caverno that we have to allow you to loop over uh objects that are in an array uh and one",
    "start": "3183280",
    "end": "3190480"
  },
  {
    "text": "of the things that is coming in one six is the ability to use json",
    "start": "3190480",
    "end": "3195760"
  },
  {
    "text": "6902 patches uh to be able to to loop through objects in a for loop and do",
    "start": "3195760",
    "end": "3202000"
  },
  {
    "text": "things like remove so strategic merge gives you the ability to do like a customized style patch but with json",
    "start": "3202000",
    "end": "3208960"
  },
  {
    "text": "style patches you can do things like specific removes and so that's now supported",
    "start": "3208960",
    "end": "3214720"
  },
  {
    "text": "there's an element index variable which allows you to refer to what the specific index is that's being operated on this",
    "start": "3214720",
    "end": "3221920"
  },
  {
    "text": "kind of goes hand in hand with that json 6902 patch uh element scope uh the ability for you",
    "start": "3221920",
    "end": "3229280"
  },
  {
    "text": "to uh take a look at you know what the high level object or the the field is in a",
    "start": "3229280",
    "end": "3235200"
  },
  {
    "text": "certain resource and if you need to operate outside of that you can set this element scope field and that allows you to basically",
    "start": "3235200",
    "end": "3242079"
  },
  {
    "text": "pick and refer to any other field that may be in that resource also context loops shifting showed this",
    "start": "3242079",
    "end": "3249359"
  },
  {
    "text": "a little bit in some of her sample policies but uh but context can now be provided inside of a loop so the the use",
    "start": "3249359",
    "end": "3256480"
  },
  {
    "text": "case that she showed was looking at variables from an image from an upstream",
    "start": "3256480",
    "end": "3262240"
  },
  {
    "text": "oci register you want to look at metadata on an image you can put that as a context inside of the loop and just",
    "start": "3262240",
    "end": "3268559"
  },
  {
    "text": "iterate over those things um policies and the uh the popularity",
    "start": "3268559",
    "end": "3274960"
  },
  {
    "start": "3272000",
    "end": "3431000"
  },
  {
    "text": "sample policy so for those that didn't know um caverno has over 100 sample",
    "start": "3274960",
    "end": "3280799"
  },
  {
    "text": "policies that you can download and use right now and they're of all sorts of",
    "start": "3280799",
    "end": "3286319"
  },
  {
    "text": "resources of all sorts of across all of the covert rule types and many of them",
    "start": "3286319",
    "end": "3291359"
  },
  {
    "text": "are even outside of the kubernetes core resource type so we've got some there from traffic some",
    "start": "3291359",
    "end": "3297200"
  },
  {
    "text": "from i think we've got some from valero some from cert manager so there's over a hundred of uh policies",
    "start": "3297200",
    "end": "3304319"
  },
  {
    "text": "that are out there that you can either download and use right now or at the very least they're great for teaching",
    "start": "3304319",
    "end": "3310559"
  },
  {
    "text": "and and giving you some concrete examples of how to to build the policy that you want",
    "start": "3310559",
    "end": "3315920"
  },
  {
    "text": "and if you don't find the one that you're looking for you can probably easily customize one that's there",
    "start": "3315920",
    "end": "3322000"
  },
  {
    "text": "um and if all of that fails you can open up either a request or or come to our",
    "start": "3322000",
    "end": "3328079"
  },
  {
    "text": "slack channel and tell us about what you're trying to solve and we'd be uh interested to figure out how to do that",
    "start": "3328079",
    "end": "3334240"
  },
  {
    "text": "but there are there are even more coming in 1.6 with over 20. and then",
    "start": "3334240",
    "end": "3340880"
  },
  {
    "text": "lastly on this um the kubernetes pod secure standards this is a a a",
    "start": "3340880",
    "end": "3348799"
  },
  {
    "text": "a a set of standards that that that explain what types of controls should be in an environment um caverno has built",
    "start": "3348799",
    "end": "3356240"
  },
  {
    "text": "these uh quite a while ago but we've now refreshed these uh with the capabilities",
    "start": "3356240",
    "end": "3361280"
  },
  {
    "text": "that are in one's 1.6 and also that align with what the pss is upstream so",
    "start": "3361280",
    "end": "3367680"
  },
  {
    "text": "uh 18 or 19 new policies over a thousand test resources uh for just these pod",
    "start": "3367680",
    "end": "3373520"
  },
  {
    "text": "security standard policies um unfortunately don't have time to to show how these can be tested in the cli but",
    "start": "3373520",
    "end": "3381440"
  },
  {
    "text": "but these aren't available and they also cover uh they also cover the",
    "start": "3381440",
    "end": "3387359"
  },
  {
    "text": "ephemeral containers which is now turned on by default in 1.23",
    "start": "3387359",
    "end": "3392720"
  },
  {
    "text": "and also one last note to mention that uh for those of you that have worked with caverno policies specifically",
    "start": "3392720",
    "end": "3399440"
  },
  {
    "text": "validate policies if you have a deny rule uh the auto gen controller the nice",
    "start": "3399440",
    "end": "3406079"
  },
  {
    "text": "capability in caverno that allows us to take the rule that you write pod and have that automatically translated for",
    "start": "3406079",
    "end": "3413440"
  },
  {
    "text": "other pod level controllers like deployments staple sets cron jobs well that now works for the denial rules as",
    "start": "3413440",
    "end": "3419680"
  },
  {
    "text": "well so that's another example of of uh us doing more of the work",
    "start": "3419680",
    "end": "3425359"
  },
  {
    "text": "on your behalf and you being able to simplify your rules to just get what you want",
    "start": "3425359",
    "end": "3430839"
  },
  {
    "text": "automatically so um just to just to quickly wrap up here",
    "start": "3430839",
    "end": "3436559"
  },
  {
    "start": "3431000",
    "end": "3599000"
  },
  {
    "text": "um the really the summary of this release is",
    "start": "3436559",
    "end": "3442000"
  },
  {
    "text": "adding more features that solve more use cases through policy but you know caverno's model motto is we want to do",
    "start": "3442000",
    "end": "3449359"
  },
  {
    "text": "things easy we want to do things intelligently and we want to eliminate the burden of you having to express",
    "start": "3449359",
    "end": "3455280"
  },
  {
    "text": "policy just get on with the job make it easy we're trying to do more and more of that",
    "start": "3455280",
    "end": "3461040"
  },
  {
    "text": "in 1.6 there's no programming required anywhere it's very quick to get up and running",
    "start": "3461040",
    "end": "3467119"
  },
  {
    "text": "and as time goes on we try and look at use cases solve more of those problems",
    "start": "3467119",
    "end": "3472799"
  },
  {
    "text": "and build more capabilities into caverno that allow you to do more stuff in less amount of time",
    "start": "3472799",
    "end": "3480400"
  },
  {
    "text": "but also the other two themes of this release are less resource usage you know",
    "start": "3480400",
    "end": "3485920"
  },
  {
    "text": "we know clusters are becoming larger more people are using it there's more stuff being thrown at them",
    "start": "3485920",
    "end": "3491680"
  },
  {
    "text": "so we want to reduce the resource usage to make it make it make it less memory intensive and also more robust for your",
    "start": "3491680",
    "end": "3498799"
  },
  {
    "text": "production use cases should be able to trust this this is a an element of security so we're trying to put a lot of",
    "start": "3498799",
    "end": "3505920"
  },
  {
    "text": "work into figuring out um how we can make it more resilient how we can make it more robust in the case of you know",
    "start": "3505920",
    "end": "3512319"
  },
  {
    "text": "these types of failures and other events occur and so there's a lot of work that's that's been put through",
    "start": "3512319",
    "end": "3518000"
  },
  {
    "text": "uh in that regard so so yeah that's that's really the summary of what we have for you and uh if there's any time",
    "start": "3518000",
    "end": "3524319"
  },
  {
    "text": "left be glad to uh take some q a here yeah we have about one minute but we can",
    "start": "3524319",
    "end": "3530559"
  },
  {
    "text": "we can run through a quick uh question or so so essentially this is the last call for questions from the audience",
    "start": "3530559",
    "end": "3537920"
  },
  {
    "text": "so if you have anything just ask now quickly and we forget to it and there was one question that got",
    "start": "3537920",
    "end": "3543599"
  },
  {
    "text": "answered with a quick note um but just if you want to explore it further there",
    "start": "3543599",
    "end": "3549280"
  },
  {
    "text": "was a question from amir our generated resources also validated",
    "start": "3549280",
    "end": "3554319"
  },
  {
    "text": "uh our generated research shifting do you want to take that one",
    "start": "3554319",
    "end": "3559559"
  },
  {
    "text": "uh i think you're new maybe okay just yeah it's just a mute um yeah",
    "start": "3560559",
    "end": "3568000"
  },
  {
    "text": "you can verify the kirino generated resource by adding another validate",
    "start": "3568000",
    "end": "3573040"
  },
  {
    "text": "policy to your cluster and there you can select on that specific resource using",
    "start": "3573040",
    "end": "3578480"
  },
  {
    "text": "the the label because kiran will add labels to its generated resource and use that to",
    "start": "3578480",
    "end": "3583680"
  },
  {
    "text": "validate whatever configurations you want perfect now we are not getting questions",
    "start": "3583680",
    "end": "3590960"
  },
  {
    "text": "but we are getting compliments so great job beautiful video beautiful priorities for the team so a great job i have from",
    "start": "3590960",
    "end": "3597760"
  },
  {
    "text": "everyone today so if there isn't any last questions and we are perfectly uh",
    "start": "3597760",
    "end": "3602960"
  },
  {
    "text": "on time here as well we did answer a lot of q a throughout the webinar as well so there was a lot of great interaction",
    "start": "3602960",
    "end": "3608400"
  },
  {
    "text": "thank you so much everyone for that but yeah let's start wrapping",
    "start": "3608400",
    "end": "3613440"
  },
  {
    "text": "things up so thanks everyone for joining the latest episode of cloud native live",
    "start": "3613440",
    "end": "3618720"
  },
  {
    "text": "it was great to have verna here to talk about us about their latest and greatest newest things",
    "start": "3618720",
    "end": "3624160"
  },
  {
    "text": "so we i really have to say that so much interaction from the audience amazing to see that thank you so much for all of",
    "start": "3624160",
    "end": "3629520"
  },
  {
    "text": "the great questions and as always we bring you latest cloud native code every wednesday so you can tune in every week",
    "start": "3629520",
    "end": "3636720"
  },
  {
    "text": "going further as well and we have a great session next week in store as well so thank you for joining us today and",
    "start": "3636720",
    "end": "3642559"
  },
  {
    "text": "i'll see you next time thank you annie and tyler thank you",
    "start": "3642559",
    "end": "3649760"
  }
]