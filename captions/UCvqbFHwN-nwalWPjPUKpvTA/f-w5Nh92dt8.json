[
  {
    "start": "0",
    "end": "40000"
  },
  {
    "text": "hi my name is venkat and i work at razer bay as a senior architect and i have with me my",
    "start": "1040",
    "end": "6160"
  },
  {
    "text": "colleague srinidhi who works as a senior software engineer at recipe today we would love to talk about",
    "start": "6160",
    "end": "11679"
  },
  {
    "text": "improving the developer experience and how we build a cloud native dev stack for hundreds of engineers",
    "start": "11679",
    "end": "17520"
  },
  {
    "text": "a quick overview into what razer pay does razer pay enables frictionless payment banking and lending experiences",
    "start": "17520",
    "end": "24560"
  },
  {
    "text": "for different classes of merchants of various scales and sizes today we process billions of transactions for",
    "start": "24560",
    "end": "30320"
  },
  {
    "text": "millions of merchants across the country razer bay has been at the forefront of innovation over the last several years",
    "start": "30320",
    "end": "36559"
  },
  {
    "text": "in terms of transforming the financial ecosystem in the country a big motivation into why we actually",
    "start": "36559",
    "end": "42879"
  },
  {
    "start": "40000",
    "end": "217000"
  },
  {
    "text": "embarked upon this journey over the last four years our engineering head crown head count has actually grown up by 10x",
    "start": "42879",
    "end": "49680"
  },
  {
    "text": "in that process we have scaled up our teams into full-fledged pods and views four views",
    "start": "49680",
    "end": "54719"
  },
  {
    "text": "and 30-plus bots we had embarked upon microservices journey a couple of years back and today",
    "start": "54719",
    "end": "60640"
  },
  {
    "text": "we have about 100 plus micro services on it just in the last two years uh the number of micro services has increased",
    "start": "60640",
    "end": "66000"
  },
  {
    "text": "to about 50. uh we've had three company acquisition three acquisitions uh across the course of time that has led to a",
    "start": "66000",
    "end": "72400"
  },
  {
    "text": "polyglot uh stack of various languages like php gold and python java etc",
    "start": "72400",
    "end": "77920"
  },
  {
    "text": "overall we do roughly about thousand finder deployments per month now a quick look at what our ci cd",
    "start": "77920",
    "end": "84640"
  },
  {
    "text": "practice looks like this is not really very different from the way many companies operate but just to give a",
    "start": "84640",
    "end": "90079"
  },
  {
    "text": "perspective and sort of build up the motivation for the kind of problems that you're dealing with uh at a very very high level developers commit code into",
    "start": "90079",
    "end": "96640"
  },
  {
    "text": "github we heavily use github ci integration github actions for our ci integration uh",
    "start": "96640",
    "end": "102479"
  },
  {
    "text": "so the git of actions basically builds uh images which are docker images uh runs a variety of unit tests and pushes",
    "start": "102479",
    "end": "109280"
  },
  {
    "text": "it into our private doc registry as soon as these images are available but the developers uh typically start",
    "start": "109280",
    "end": "115280"
  },
  {
    "text": "deploying that code with spinnaker spinnaker is a open source uh developer cd platform created by netflix so the",
    "start": "115280",
    "end": "123119"
  },
  {
    "text": "deployment process is very similar in a pre-broad environment they they run a variety of integration",
    "start": "123119",
    "end": "128239"
  },
  {
    "text": "tests load tests if needed and a bunch of other tests once the developer is satisfied with the test reports the",
    "start": "128239",
    "end": "133840"
  },
  {
    "text": "developer goes on to deploy the code in a canary environment uh again via spin occurs kayanta we run a variety of",
    "start": "133840",
    "end": "140560"
  },
  {
    "text": "canary threshold metrics and what that means is that we sort of leverage our monitoring and tracing",
    "start": "140560",
    "end": "147200"
  },
  {
    "text": "infrastructure for actually making sure that the candidate has passed once the candidate thresholds are",
    "start": "147200",
    "end": "153040"
  },
  {
    "text": "met or processed uh the deployments deployment is moved forward into production in case that running calorie",
    "start": "153040",
    "end": "158720"
  },
  {
    "text": "thresholds do not pass the deployment is rolled back uh in general we use aws as",
    "start": "158720",
    "end": "163840"
  },
  {
    "text": "our infrastructure uh where most of our all our code runs uh we are a heavy problem of kubernetes uh very",
    "start": "163840",
    "end": "170319"
  },
  {
    "text": "specifically somewhere uh in 2016 late 2016 is when we start a quick community journey",
    "start": "170319",
    "end": "176080"
  },
  {
    "text": "we can proudly say that we are we're probably the first company in the country to have actually uh",
    "start": "176080",
    "end": "182640"
  },
  {
    "text": "you know managed a full production great kubernetes ecosystem uh well today uh we",
    "start": "182640",
    "end": "188319"
  },
  {
    "text": "run managed uh kubernetes via eks uh like i mentioned because of the fact that we are on kubernetes all our all of",
    "start": "188319",
    "end": "194640"
  },
  {
    "text": "our packaging is done by apple uh spinnaker is something that we mentioned uh our entire infrastructure is on code",
    "start": "194640",
    "end": "200239"
  },
  {
    "text": "via terraform and specifically for sensor uh infrastructure provisioning we have enabled atlantis where developers",
    "start": "200239",
    "end": "206319"
  },
  {
    "text": "can actually come and provision any cloud resources that they probably want and again github actions is something that we use for all the continuous",
    "start": "206319",
    "end": "212080"
  },
  {
    "text": "integration and the docker image building so with this uh uh you know principle in mind uh",
    "start": "212080",
    "end": "218799"
  },
  {
    "start": "217000",
    "end": "431000"
  },
  {
    "text": "we can sort of notice that there is a tremendous amount of deployment time that the developers spend in terms of uh you know rolling",
    "start": "218799",
    "end": "225920"
  },
  {
    "text": "out their features uh you know faster and actively into production uh with specifically uh in",
    "start": "225920",
    "end": "231920"
  },
  {
    "text": "the development uh uh dependencies themselves because of the number of engineers and the number of micro",
    "start": "231920",
    "end": "237760"
  },
  {
    "text": "sources that you're sort of dealing with it this leads to a sequential development process and what that means",
    "start": "237760",
    "end": "242879"
  },
  {
    "text": "is that uh imagine there's a single service and there's a bunch of developers who are working on those features uh each",
    "start": "242879",
    "end": "249280"
  },
  {
    "text": "developer will have to take some time to actually deploy their code into a pre-broad environment and this",
    "start": "249280",
    "end": "256239"
  },
  {
    "text": "development process is largely sequential and they have to coordinate with other developers in terms of deploying so that their changes are not",
    "start": "256239",
    "end": "261600"
  },
  {
    "text": "overwritten by other developers the other part of the problem is because there's a heavy dependency on aws",
    "start": "261600",
    "end": "267280"
  },
  {
    "text": "resources most of the aws resources are mock on the local uh development",
    "start": "267280",
    "end": "273199"
  },
  {
    "text": "environment which leads to a lot of you know confidence issues in terms of",
    "start": "273199",
    "end": "278320"
  },
  {
    "text": "pushing the code to production uh testing again even a single line of code change requires the entire development",
    "start": "278320",
    "end": "283600"
  },
  {
    "text": "process entire deployment process before the developers can start testing their code uh the on the right hand side uh is",
    "start": "283600",
    "end": "289280"
  },
  {
    "text": "another set of problems with the shared environment and what i mean by shadow environment is this so i as a developer",
    "start": "289280",
    "end": "294320"
  },
  {
    "text": "i'm working on service a while service a has a dependency on service b obviously because my change is only",
    "start": "294320",
    "end": "300320"
  },
  {
    "text": "affecting service a i don't need to necessarily build service b while i'm testing my service uh imagine",
    "start": "300320",
    "end": "306240"
  },
  {
    "text": "there's a developer who's working on service b and they end up changing uh the deployment of service being on a",
    "start": "306240",
    "end": "311759"
  },
  {
    "text": "pre-broad environment my test starts breaking and how do you sort of cost effectively scale",
    "start": "311759",
    "end": "317280"
  },
  {
    "text": "not just my own individual services but also the shared environments and today that's quite difficult unless and until",
    "start": "317280",
    "end": "324080"
  },
  {
    "text": "there's a lot of costs thrown at it the other part of the problem is that this leads to also a fact of the shadow",
    "start": "324080",
    "end": "330160"
  },
  {
    "text": "environment imposing a lot of constraints in terms of being able to demo uh the product or the features to",
    "start": "330160",
    "end": "336960"
  },
  {
    "text": "the business of the product counterparts um again there could be uh demo restrictions or there could be uh you",
    "start": "336960",
    "end": "342240"
  },
  {
    "text": "know as i'm doing things can change up so this leads to a lot of you know time loss in one sense the third part of the",
    "start": "342240",
    "end": "348400"
  },
  {
    "text": "problem in the nature of the environment that we live in we indulge in a variety of integrations with third party",
    "start": "348400",
    "end": "353759"
  },
  {
    "text": "gateways payment gateways partners etc many of these integrations sometimes can run from weeks uh maybe even sometimes a",
    "start": "353759",
    "end": "359919"
  },
  {
    "text": "month uh and what that means is that every single such integration requires a",
    "start": "359919",
    "end": "365120"
  },
  {
    "text": "separate uh service fleet of sorts which uh which is useful for that particular",
    "start": "365120",
    "end": "370800"
  },
  {
    "text": "integration themselves itself so how do you sort of really build these uh these kind of uh you know uh shared",
    "start": "370800",
    "end": "378240"
  },
  {
    "text": "environment in a cost-effective fashion while all of this is there there are also challenges on the infra",
    "start": "378240",
    "end": "383919"
  },
  {
    "text": "provisioning and specifically uh like i mentioned all our infrastructure is on code and terraform uh this requires",
    "start": "383919",
    "end": "389759"
  },
  {
    "text": "developers to go through a cognitive overload of uh learning data from dsl uh for provisioning even simple uh things",
    "start": "389759",
    "end": "395440"
  },
  {
    "text": "like an sql endpoint or an sms endpoint uh more specifically like i mentioned because of the entire development",
    "start": "395440",
    "end": "401199"
  },
  {
    "text": "process debugging even trivial one line change sometimes requires the developers to context switch between the actual",
    "start": "401199",
    "end": "407120"
  },
  {
    "text": "application and probably like a logging platform or a distributed tracing platform more specifically there's a lot of time",
    "start": "407120",
    "end": "412720"
  },
  {
    "text": "that is spent in just building and deploying the images themselves um depending on you know the complexity and",
    "start": "412720",
    "end": "418479"
  },
  {
    "text": "the nature of the tests or the unit tests themselves uh there's a significant amount of time and this means that",
    "start": "418479",
    "end": "425039"
  },
  {
    "text": "feature development is largely sequentially iterative and uh it's not independently uh it cannot be done today",
    "start": "425039",
    "end": "431840"
  },
  {
    "text": "what it actually means all of this actually means is that while the development time uh can be used for",
    "start": "431840",
    "end": "438080"
  },
  {
    "text": "doing a lot more productive and constructive things today there's a lot of time that is getting wasted by the developers just in setting up",
    "start": "438080",
    "end": "445440"
  },
  {
    "text": "the deployment of the corresponding infrastructure and being able to just debug their code and move forward with",
    "start": "445440",
    "end": "451520"
  },
  {
    "text": "their feature development and what this simply means is that we need to simplify the developer workflow",
    "start": "451520",
    "end": "457039"
  },
  {
    "start": "452000",
    "end": "556000"
  },
  {
    "text": "we need to reduce the rollout uh time to rollout or the cycle time as i say uh in an independent fashion and uh in a",
    "start": "457039",
    "end": "464319"
  },
  {
    "text": "in a simple fashion with that i would like to hand over to srinidhi my colleague who will walk you through the",
    "start": "464319",
    "end": "470800"
  },
  {
    "text": "journey on how you're solving these problems",
    "start": "470800",
    "end": "474800"
  },
  {
    "text": "thanks vince for the brief introduction and talking about the goals of the project we are primarily focusing on",
    "start": "476960",
    "end": "484800"
  },
  {
    "text": "reducing the cognitive load on developers and that is being achieved by one having a streamlined workflow to",
    "start": "484800",
    "end": "492319"
  },
  {
    "text": "having environmental consistency and three providing a faster feedback loop",
    "start": "492319",
    "end": "497360"
  },
  {
    "text": "from local development uh the following are the key decision",
    "start": "497360",
    "end": "502720"
  },
  {
    "text": "factors on which the solution was built upon the first one being to",
    "start": "502720",
    "end": "508319"
  },
  {
    "text": "rely completely on open source and have zero vendor lock-in uh the next one is",
    "start": "508319",
    "end": "514399"
  },
  {
    "text": "uh to make sure that the solution is given it is native as our environments are in kubernetes uh the third important",
    "start": "514399",
    "end": "522479"
  },
  {
    "text": "one is to have a hassle free onboarding which means that we wanted to onboard",
    "start": "522479",
    "end": "527839"
  },
  {
    "text": "application with minimal changes and also not drastically change the deploy",
    "start": "527839",
    "end": "533120"
  },
  {
    "text": "development or deployment life cycle and last but not the least we wanted to have",
    "start": "533120",
    "end": "538399"
  },
  {
    "text": "a cost effective solution that will make sure that we don't burn cash in order to get ephemeral",
    "start": "538399",
    "end": "544800"
  },
  {
    "text": "infrastructure our solution is slightly opinionated and is what fits our use cases best and is",
    "start": "544800",
    "end": "553040"
  },
  {
    "text": "not a complete pass solution so the code name of this particular",
    "start": "553040",
    "end": "558720"
  },
  {
    "start": "556000",
    "end": "629000"
  },
  {
    "text": "solution is dev stack and this is a razor-based journey towards a better",
    "start": "558720",
    "end": "563839"
  },
  {
    "text": "development life cycle so let's try to understand the solution by asking a series of questions and answers and",
    "start": "563839",
    "end": "570320"
  },
  {
    "text": "coming to a logical conclusion before the demo the first one is on how do we",
    "start": "570320",
    "end": "576000"
  },
  {
    "text": "bypass the ci cd loop for the iterative development and the need is to have or",
    "start": "576000",
    "end": "581600"
  },
  {
    "text": "directly expose the local code on to the cloud environment so as we one version",
    "start": "581600",
    "end": "587680"
  },
  {
    "text": "of the solution we went ahead with daily presence which followed a proxy based approach so telepresence was a client",
    "start": "587680",
    "end": "595680"
  },
  {
    "text": "that was sitting in both the local system and the remote cluster and made sure the connection happens through a",
    "start": "595680",
    "end": "602320"
  },
  {
    "text": "tunnel it took care of the dns resolution volume mounting and also networking but there was a major",
    "start": "602320",
    "end": "609680"
  },
  {
    "text": "drawback due to the whole tunneling approach which was that the responses were slow the connectivity",
    "start": "609680",
    "end": "617040"
  },
  {
    "text": "issues where with the database and also sometimes connectivity issues with the",
    "start": "617040",
    "end": "622079"
  },
  {
    "text": "cluster in itself and also uh along with vpn there were a lot of",
    "start": "622079",
    "end": "628079"
  },
  {
    "text": "bottlenecks so how do we avoid the network limitations and",
    "start": "628079",
    "end": "633440"
  },
  {
    "start": "629000",
    "end": "748000"
  },
  {
    "text": "how can we ship code to the remote container without relying on the network uh so we had to shift the approach",
    "start": "633440",
    "end": "640320"
  },
  {
    "text": "towards a file sync based where we used a tool called dev space so dev",
    "start": "640320",
    "end": "645600"
  },
  {
    "text": "space syncs the local code into the remote container in a very efficient manner and it also does live reloading",
    "start": "645600",
    "end": "653200"
  },
  {
    "text": "by container restart dev space also has port forwarding and lock streaming that",
    "start": "653200",
    "end": "658959"
  },
  {
    "text": "provided scope for further features uh as as it all looked good uh there was a",
    "start": "658959",
    "end": "666320"
  },
  {
    "text": "hiccup sort of a limitation per se due to the container restarts so the container restarts which are bound by",
    "start": "666320",
    "end": "673760"
  },
  {
    "text": "kubernetes probe were flaky at times and also are not",
    "start": "673760",
    "end": "679920"
  },
  {
    "text": "completely reliable so we wanted something that was better and faster so",
    "start": "679920",
    "end": "686240"
  },
  {
    "text": "the next question is on how do we avoid this container restarts so in order to",
    "start": "686240",
    "end": "692160"
  },
  {
    "text": "avoid the container restarts we had to put in a library inside the container",
    "start": "692160",
    "end": "697519"
  },
  {
    "text": "that will take care of the hot reloading so there are a lot of libraries per language uh like compiled email for",
    "start": "697519",
    "end": "704720"
  },
  {
    "text": "golang nodemon for node.js and so on who rely on watching for the files that are",
    "start": "704720",
    "end": "710000"
  },
  {
    "text": "changed these are the files that are synced by dev space and then it rebuilds the binary and then runs the new one which",
    "start": "710000",
    "end": "717519"
  },
  {
    "text": "is made available to the server so this effectively avoids the container restart",
    "start": "717519",
    "end": "722720"
  },
  {
    "text": "thus not breaking the flow so we could have a generic docker container per language built and use",
    "start": "722720",
    "end": "729760"
  },
  {
    "text": "that container with the dev space command in order to make sure this on boarding is seamless so all of these",
    "start": "729760",
    "end": "737680"
  },
  {
    "text": "three questions helped us to solve the problem of local sync so we now short",
    "start": "737680",
    "end": "743839"
  },
  {
    "text": "circuited the feedback loop by just running a command so next question is on how do we provide",
    "start": "743839",
    "end": "752240"
  },
  {
    "start": "748000",
    "end": "964000"
  },
  {
    "text": "or orchestrate multiple services how can the developers declaratively define and",
    "start": "752240",
    "end": "758160"
  },
  {
    "text": "apply service dependencies and uh the solution for that is helm file which is",
    "start": "758160",
    "end": "764079"
  },
  {
    "text": "a wrapper on top of health so hello file helps us to compose several charts",
    "start": "764079",
    "end": "770160"
  },
  {
    "text": "together to create a comprehensive deployment artifact for anything from a",
    "start": "770160",
    "end": "775920"
  },
  {
    "text": "single application to the entire infrastructure stack so we define a term called",
    "start": "775920",
    "end": "782880"
  },
  {
    "text": "service fleet here which is a collection of micro services that are required by",
    "start": "782880",
    "end": "788240"
  },
  {
    "text": "the developer for his or her workflows uh so this helm file works seamlessly with the",
    "start": "788240",
    "end": "795839"
  },
  {
    "text": "existing helm packages as all of our applications already had helm packages and",
    "start": "795839",
    "end": "801120"
  },
  {
    "text": "we didn't want to or need to write extra thing we just had to",
    "start": "801120",
    "end": "806399"
  },
  {
    "text": "wrap all of them in a single aml file and provide it as it is given in the uh",
    "start": "806399",
    "end": "811519"
  },
  {
    "text": "in this right side of the of the screen so helen file when",
    "start": "811519",
    "end": "817839"
  },
  {
    "text": "took care of all the cuban it is resources orchestration uh and that",
    "start": "817839",
    "end": "824399"
  },
  {
    "text": "solved major of a problem with respect to providing kubernetes resources like your",
    "start": "824399",
    "end": "830160"
  },
  {
    "text": "deployment service ingress job cron job and whatnot but the application is not",
    "start": "830160",
    "end": "837519"
  },
  {
    "text": "wholesome without the other requirements which are like for example uh sqs or databases or",
    "start": "837519",
    "end": "845600"
  },
  {
    "text": "aws resources which are not completely on kubernetes so the next question is on",
    "start": "845600",
    "end": "851279"
  },
  {
    "text": "how do we provision ephemeral infrastructure resources so we used or",
    "start": "851279",
    "end": "858639"
  },
  {
    "text": "relied upon help hooks for this provisioning so helmholtz provided a plug-and-play model to maintain the",
    "start": "858639",
    "end": "865519"
  },
  {
    "text": "dynamics of applications auxiliary requirements what we mean by that is",
    "start": "865519",
    "end": "871760"
  },
  {
    "text": "we have written uh two to three uh or per requirement base uh helmholtz which",
    "start": "871760",
    "end": "878720"
  },
  {
    "text": "can be plugged into application based on a requirement so if for example an",
    "start": "878720",
    "end": "884000"
  },
  {
    "text": "application is using sqsqs they can plug in a sqs configurator as a hook whereas",
    "start": "884000",
    "end": "890639"
  },
  {
    "text": "an application using kafka queues could plug in a kafka configurator similarly for all the other resources the",
    "start": "890639",
    "end": "897920"
  },
  {
    "text": "plug-and-play model will fit in and in order to also avoid the",
    "start": "897920",
    "end": "903199"
  },
  {
    "text": "aws overridden or maintaining aws resources which was done by a terraform",
    "start": "903199",
    "end": "908240"
  },
  {
    "text": "we used local stack which provided a framework for mocking aws components so",
    "start": "908240",
    "end": "913600"
  },
  {
    "text": "this is how a helm file workflow will look like on running the command uh the",
    "start": "913600",
    "end": "919600"
  },
  {
    "text": "chart is being verified and it runs a bunch of pre-installed books which make",
    "start": "919600",
    "end": "924959"
  },
  {
    "text": "sure that the auxiliary requirements for the application is up and then it loads the charts the",
    "start": "924959",
    "end": "930560"
  },
  {
    "text": "kubernetes resources and deploys them into the kubernetes cluster and then some post install books as well which",
    "start": "930560",
    "end": "937040"
  },
  {
    "text": "will which can include like the english route configuration or validation of the",
    "start": "937040",
    "end": "942720"
  },
  {
    "text": "manifest generated and make sure that the ephemeral service or the fml",
    "start": "942720",
    "end": "948000"
  },
  {
    "text": "infrastructure per developer is available by just running one command so",
    "start": "948000",
    "end": "953600"
  },
  {
    "text": "this is how we solve the problem of having a streamlined workflow for the",
    "start": "953600",
    "end": "959360"
  },
  {
    "text": "developers in order to bring up their ephemeral service fleet",
    "start": "959360",
    "end": "964639"
  },
  {
    "start": "964000",
    "end": "1233000"
  },
  {
    "text": "so now with fml infrastructure using helm file and local sync using devspace uh there is",
    "start": "964639",
    "end": "972399"
  },
  {
    "text": "one piece in the whole puzzle that needs to be sorted which is on how do we make",
    "start": "972399",
    "end": "977680"
  },
  {
    "text": "sure the traffic is routed to the right user service so for that we use",
    "start": "977680",
    "end": "983040"
  },
  {
    "text": "header-based routing our ecosystem or our kubernetes cluster have uh have been",
    "start": "983040",
    "end": "989279"
  },
  {
    "text": "using traffic for ingresses and uh we upgraded that to traffic 2.0 with",
    "start": "989279",
    "end": "995040"
  },
  {
    "text": "supported header based routing out of the box so the traffic ingress route configuration will have multiple rules",
    "start": "995040",
    "end": "1003120"
  },
  {
    "text": "in order to guide it to the dynamic routing so for example in in the right hand side of the",
    "start": "1003120",
    "end": "1010560"
  },
  {
    "text": "presentation uh we have two services uh which are uh api web and api",
    "start": "1010560",
    "end": "1016560"
  },
  {
    "text": "and based on the header uh traffic will make sure that the request that comes with the header is propagated to the api",
    "start": "1016560",
    "end": "1024319"
  },
  {
    "text": "web studio service which in turn puts the request into the api web streaming",
    "start": "1024319",
    "end": "1029360"
  },
  {
    "text": "the deployment or a part ah so this is how we have enabled uh",
    "start": "1029360",
    "end": "1035678"
  },
  {
    "text": "header based routing to solve the routing problem and the next set of question is on how do we",
    "start": "1035679",
    "end": "1043520"
  },
  {
    "text": "make sure the upstream services are routed properly as well and we use header propagation there and we have",
    "start": "1043520",
    "end": "1050320"
  },
  {
    "text": "piggybacked on open tracing where open tracing by default",
    "start": "1050320",
    "end": "1056799"
  },
  {
    "text": "propagates the header and we rely on that where at every service the traffic will read the header and route it to the",
    "start": "1056960",
    "end": "1064000"
  },
  {
    "text": "appropriate service let's walk through a use case on on how does that routing",
    "start": "1064000",
    "end": "1070480"
  },
  {
    "text": "work uh the routing overview for example let's take a use case where you have two",
    "start": "1070480",
    "end": "1077360"
  },
  {
    "text": "applications app1 and and assume app one being a gateway",
    "start": "1077360",
    "end": "1082480"
  },
  {
    "text": "service and app2 is an actual service that [Music] prop processes a request and gives an",
    "start": "1082480",
    "end": "1089280"
  },
  {
    "text": "response so we have three developers who are working on",
    "start": "1089280",
    "end": "1094640"
  },
  {
    "text": "both of these micro services where developer one is explicitly working on",
    "start": "1094640",
    "end": "1099840"
  },
  {
    "text": "app one and developer two is working on app two whereas developer three is",
    "start": "1099840",
    "end": "1105200"
  },
  {
    "text": "working on a feature that spans between app one and app two now by running the",
    "start": "1105200",
    "end": "1110799"
  },
  {
    "text": "helm file command the developers would have configured the infrastructure now let's see how the request routing",
    "start": "1110799",
    "end": "1118480"
  },
  {
    "text": "happens so developer one on passing the request header devon in the request uh the",
    "start": "1118480",
    "end": "1126480"
  },
  {
    "text": "ingress route uh that is present in front of app one will make sure that the",
    "start": "1126480",
    "end": "1132320"
  },
  {
    "text": "request is routed to the dev one instance of the app one and then the request will",
    "start": "1132320",
    "end": "1139440"
  },
  {
    "text": "propagate into the uh app2 and given that the dev1",
    "start": "1139440",
    "end": "1144960"
  },
  {
    "text": "label is not present in the configuration it will route it to the default shared infrastructure",
    "start": "1144960",
    "end": "1152080"
  },
  {
    "text": "so taking into a use case of the second developer on passing the",
    "start": "1152080",
    "end": "1157679"
  },
  {
    "text": "header dev2 into the request the request will flow into the shared stage",
    "start": "1157679",
    "end": "1162960"
  },
  {
    "text": "infrastructure of application 1 as there is no instance of dev 2 running here and it would",
    "start": "1162960",
    "end": "1169840"
  },
  {
    "text": "propagate it to the dev 2 instance of the",
    "start": "1169840",
    "end": "1175440"
  },
  {
    "text": "app 2 version that is running because the configuration would be there and also in the last case when the header",
    "start": "1175440",
    "end": "1182880"
  },
  {
    "text": "feature one is passed the request will be routed to the feature one instance of app one and then the feature one",
    "start": "1182880",
    "end": "1189600"
  },
  {
    "text": "instance of the app two as both of these are present so this is how the request",
    "start": "1189600",
    "end": "1194960"
  },
  {
    "text": "routing will now happen across the microservices and this enables us in order to",
    "start": "1194960",
    "end": "1202960"
  },
  {
    "text": "run only a subset of microservices required for the functioning of the application all the other routing can",
    "start": "1202960",
    "end": "1210720"
  },
  {
    "text": "happen smartly to the stage infrastructure that is already there and",
    "start": "1210720",
    "end": "1215840"
  },
  {
    "text": "running with the header based configuration so let's move on to",
    "start": "1215840",
    "end": "1222000"
  },
  {
    "text": "some of the practical implementation of this solution and see how it works in",
    "start": "1222000",
    "end": "1228799"
  },
  {
    "text": "real world and this is the demo let's",
    "start": "1228799",
    "end": "1235280"
  },
  {
    "text": "open our terminal and run a command now which will enable us to create a",
    "start": "1235280",
    "end": "1240640"
  },
  {
    "text": "the fml infrastructure lm file sync is the command that is required and",
    "start": "1240640",
    "end": "1246960"
  },
  {
    "text": "the command now has started to create ephemeral resources for a couple of services and let's look into what they",
    "start": "1246960",
    "end": "1253919"
  },
  {
    "text": "are uh while the build is happening or the deployment is happening uh so we",
    "start": "1253919",
    "end": "1259600"
  },
  {
    "text": "have a file called helm file.ml which will define the service fleet so in this case",
    "start": "1259600",
    "end": "1266880"
  },
  {
    "text": "we have used two services dashboard which is the front end of razer pay and api which is the backend of razer pay",
    "start": "1266880",
    "end": "1273600"
  },
  {
    "text": "and api is being written in php the image here is the commit id of the",
    "start": "1273600",
    "end": "1280320"
  },
  {
    "text": "dep of the branch that i am working on and also the same is the docker image",
    "start": "1280320",
    "end": "1285520"
  },
  {
    "text": "tag so the image tag we use in razer pay is the commit",
    "start": "1285520",
    "end": "1290880"
  },
  {
    "text": "hash of the of the branch that we are working on and just take a notice of one thing which is",
    "start": "1290880",
    "end": "1297120"
  },
  {
    "text": "called the dev stack label so this particular label holds the key for the fml infrastructure all of our",
    "start": "1297120",
    "end": "1304400"
  },
  {
    "text": "infrastructure ephemerally are created with the suffix of this",
    "start": "1304400",
    "end": "1309520"
  },
  {
    "text": "this particular label so now that the helm file has completed its job it has",
    "start": "1309520",
    "end": "1314559"
  },
  {
    "text": "created fml resources for api and dashboard and it says how we can access",
    "start": "1314559",
    "end": "1319679"
  },
  {
    "text": "it so we'll have to either access it via passing a header for header propagation",
    "start": "1319679",
    "end": "1325280"
  },
  {
    "text": "or using the url directly which is a preview url uh the same thing works for the other",
    "start": "1325280",
    "end": "1331120"
  },
  {
    "text": "micro services as well let's quickly check what are the kubernetes resources that it has created",
    "start": "1331120",
    "end": "1337360"
  },
  {
    "text": "so when i do cubes it will get parts hyphen api we can see that there is a",
    "start": "1337360",
    "end": "1342400"
  },
  {
    "text": "screen in the demo that is running and also if we can just check the [Music]",
    "start": "1342400",
    "end": "1348400"
  },
  {
    "text": "dashboard resources there is also be a srini the demo that is running also take",
    "start": "1348400",
    "end": "1353760"
  },
  {
    "text": "a notice of all the other labels that are working this and this is the",
    "start": "1353760",
    "end": "1358840"
  },
  {
    "text": "live uh infrastructure that we are running on and all the other developers are parallely working while we are demoing",
    "start": "1358840",
    "end": "1365600"
  },
  {
    "text": "so this is the standard uh dashboard of razer pay let's see how we can access our specific resource so",
    "start": "1365600",
    "end": "1373120"
  },
  {
    "text": "we'll use a plugin called mod header which injects the header into the",
    "start": "1373120",
    "end": "1379520"
  },
  {
    "text": "request that go through your browser you can also use postman by adding this header or use curl request to",
    "start": "1379520",
    "end": "1387039"
  },
  {
    "text": "to add the header so let me now just refresh the page to see whether the changes of my branch are",
    "start": "1387039",
    "end": "1394799"
  },
  {
    "text": "being reflected and as you can see the color has changed",
    "start": "1394799",
    "end": "1400880"
  },
  {
    "text": "to green which is the feature that we are probably demoing so let's go and see the",
    "start": "1400880",
    "end": "1405919"
  },
  {
    "text": "code of the same branch that is there and the color is green so now at this point of",
    "start": "1405919",
    "end": "1411840"
  },
  {
    "text": "time we have created ephemeral infrastructure separate from the all the developers working and we can access it",
    "start": "1411840",
    "end": "1418240"
  },
  {
    "text": "by giving just a header so let's just see how we can work on iteratively",
    "start": "1418240",
    "end": "1423360"
  },
  {
    "text": "working on the feature from the local code so we just change the content in the file",
    "start": "1423360",
    "end": "1429679"
  },
  {
    "text": "go to ri terminal run another command called dev space step so dev space dev",
    "start": "1429679",
    "end": "1436320"
  },
  {
    "text": "takes care of syncing the local code into the remote cluster so in this case the code in user",
    "start": "1436320",
    "end": "1443200"
  },
  {
    "text": "streaming the code app api is being synced into slash app slash app and also the service php file which i just",
    "start": "1443200",
    "end": "1450240"
  },
  {
    "text": "changed is being shown as sync so we can quickly validate that by",
    "start": "1450240",
    "end": "1456240"
  },
  {
    "text": "refreshing the page and seeing the seeing whether the color has got changed",
    "start": "1456240",
    "end": "1463520"
  },
  {
    "text": "and here you go the color has now changed to blue so let's for some reason i don't like this color",
    "start": "1463520",
    "end": "1469840"
  },
  {
    "text": "let's go ahead and change it to another one and see how it will reflect so i'll",
    "start": "1469840",
    "end": "1475520"
  },
  {
    "text": "change the color or change the code in my ide go to my browser and refresh",
    "start": "1475520",
    "end": "1483440"
  },
  {
    "text": "so dev space in the back end would have synced the file automatically and the change is reflected in my browser so",
    "start": "1484880",
    "end": "1491279"
  },
  {
    "text": "this is how simple the workflow will be with the ad option to the dev stack and",
    "start": "1491279",
    "end": "1496400"
  },
  {
    "text": "this particular example is for an interpreted language uh like php and we'll just jump into another example",
    "start": "1496400",
    "end": "1503919"
  },
  {
    "text": "where we see how a compiled language like go works now for the demo purposes",
    "start": "1503919",
    "end": "1509840"
  },
  {
    "text": "we have already created uh another service called capital cards uh which deals with the cards",
    "start": "1509840",
    "end": "1518240"
  },
  {
    "text": "of razer pay and we'll just walk through the helm templates before going into the",
    "start": "1518240",
    "end": "1525120"
  },
  {
    "text": "demo so there are multiple deployments that are present which are your kubernetes resources uh these are the",
    "start": "1525120",
    "end": "1532240"
  },
  {
    "text": "hooks that we mentioned about which will be run as either post install or pre-installed so",
    "start": "1532240",
    "end": "1538400"
  },
  {
    "text": "this is an user configurator which will update the ingress route uh there is a preview url hook as well there is a",
    "start": "1538400",
    "end": "1545679"
  },
  {
    "text": "secret updater uh hook that runs uh which updates the secret and there is",
    "start": "1545679",
    "end": "1550720"
  },
  {
    "text": "also a sqs configurator so this particular application is an asynchronous one with the web worker and",
    "start": "1550720",
    "end": "1557679"
  },
  {
    "text": "sqs queues and we are configuring sqs queues dynamically and also having a",
    "start": "1557679",
    "end": "1563200"
  },
  {
    "text": "service which is a humanities resource so now that we have already created the deployments let's just validate that",
    "start": "1563200",
    "end": "1571279"
  },
  {
    "text": "so on doing the cube ctl get parts uh there are the web and the",
    "start": "1571279",
    "end": "1577760"
  },
  {
    "text": "worker parts that are created we can also go ahead and see the sqs resources that are created and this is the local",
    "start": "1577760",
    "end": "1584559"
  },
  {
    "text": "stack ui so this is the particular sqsq that is created for capital cards and",
    "start": "1584559",
    "end": "1589679"
  },
  {
    "text": "this is the url in which it can be accessed so likewise we have created the kubernetes resources and also the",
    "start": "1589679",
    "end": "1596000"
  },
  {
    "text": "ephemeral infrastructure resources let's run the dev space command in order to sync our local code into the uh remote",
    "start": "1596000",
    "end": "1603200"
  },
  {
    "text": "cluster and on instruction while the sync is happening let's walk through the",
    "start": "1603200",
    "end": "1609360"
  },
  {
    "text": "dev space ml file so it has multiple uh divisions where it replaces the parts",
    "start": "1609360",
    "end": "1616720"
  },
  {
    "text": "with the dev stack docker container that we built which is nothing but the compiled daemon one and",
    "start": "1616720",
    "end": "1622799"
  },
  {
    "text": "then it syncs our local code into the remote and also it excludes a few parts",
    "start": "1622799",
    "end": "1628000"
  },
  {
    "text": "which will optimize the syncing so these are the files that are probably not required for the uh",
    "start": "1628000",
    "end": "1634480"
  },
  {
    "text": "for the binary to work and also it has locks part where we can see the locks of the container that we have synced with",
    "start": "1634480",
    "end": "1641200"
  },
  {
    "text": "let's see the status of the dev space command and yes it has started to",
    "start": "1641200",
    "end": "1647039"
  },
  {
    "text": "uh run the command it has started to sync which is basically uh at this point where where it's synced",
    "start": "1647039",
    "end": "1654480"
  },
  {
    "text": "the code and then it is running the build command which is nothing but the go build hyphen o and then it has",
    "start": "1654480",
    "end": "1662880"
  },
  {
    "text": "run it run the binary that has been built and these are the logs that it prints in order to",
    "start": "1662880",
    "end": "1668399"
  },
  {
    "text": "make sure that the debugging is easier so let's just access this by making a girl request and",
    "start": "1668399",
    "end": "1676960"
  },
  {
    "text": "he as you can see the request is now reaching because i have used a preview url",
    "start": "1676960",
    "end": "1683200"
  },
  {
    "text": "so let's just go ahead and make some change into the code which is a golan code so what we'll do is probably add",
    "start": "1683200",
    "end": "1691039"
  },
  {
    "text": "the add the loggers in order to uh print the",
    "start": "1691039",
    "end": "1698559"
  },
  {
    "text": "request login so there are two loggers that i have commented out i'll just uncomment it",
    "start": "1698559",
    "end": "1704799"
  },
  {
    "text": "and save the file so right now the workflow is that dev space watching these file changes has",
    "start": "1704799",
    "end": "1711919"
  },
  {
    "text": "synced the file of helpers which is there here",
    "start": "1711919",
    "end": "1717120"
  },
  {
    "text": "and then the same process of building and running the new binaries has happened and let's just",
    "start": "1717120",
    "end": "1723760"
  },
  {
    "text": "validate that by getting a request and here you go the changes that have",
    "start": "1723760",
    "end": "1729520"
  },
  {
    "text": "done are being reflected dynamically in an interpreted language as well moving on uh to the additional features",
    "start": "1729520",
    "end": "1737520"
  },
  {
    "start": "1734000",
    "end": "1942000"
  },
  {
    "text": "uh that is supported by dev stack the first one is the preview url and as seen in the demo this creates a",
    "start": "1737520",
    "end": "1744320"
  },
  {
    "text": "specific url a per dev stack label for an application by using the english",
    "start": "1744320",
    "end": "1749919"
  },
  {
    "text": "route and the preview url configuration is provided in the slide the next part of it is the ephemeral",
    "start": "1749919",
    "end": "1756720"
  },
  {
    "text": "databases we currently support three different ways of configuring the database which are one a local database",
    "start": "1756720",
    "end": "1763279"
  },
  {
    "text": "where the developers run their db instance locally and we reverse proxy the request into the local system the",
    "start": "1763279",
    "end": "1770320"
  },
  {
    "text": "second one is the ephemeral database where developers can span ephemeral databases based on the",
    "start": "1770320",
    "end": "1776960"
  },
  {
    "text": "preceded data and also make sure that the schema is synced with the pre-broad environment and also have the dev",
    "start": "1776960",
    "end": "1783360"
  },
  {
    "text": "migrations run the last one is the persistent database where the developers can opt to use a pre-existing uh",
    "start": "1783360",
    "end": "1791039"
  },
  {
    "text": "database of stage or beta or a pre-plot which is regularly controlled by the",
    "start": "1791039",
    "end": "1796159"
  },
  {
    "text": "data ops flow so the workflow of an ephemeral databases is that we copy the",
    "start": "1796159",
    "end": "1801679"
  },
  {
    "text": "stable stage environment into s3 which is acting as a base and then the data container based on this will be",
    "start": "1801679",
    "end": "1808559"
  },
  {
    "text": "generated and migrations run on top of it which gives an ephemeral database which is isolated",
    "start": "1808559",
    "end": "1815919"
  },
  {
    "text": "from others so are we really looking into the cost",
    "start": "1815919",
    "end": "1821279"
  },
  {
    "text": "the primary goal of us to is to have a cost optimal solution right uh so cube",
    "start": "1821279",
    "end": "1827039"
  },
  {
    "text": "generator is the tool that takes care of all the cleanups so our resources all of",
    "start": "1827039",
    "end": "1832240"
  },
  {
    "text": "the fml resources have been tagged with a ttl of six hours by default and the developers can",
    "start": "1832240",
    "end": "1838880"
  },
  {
    "text": "override it based on their requirements so generator will make sure that it cleans up the resources when the ttl is",
    "start": "1838880",
    "end": "1845760"
  },
  {
    "text": "expired and also in order to solve the requirements of ups and downs",
    "start": "1845760",
    "end": "1851279"
  },
  {
    "text": "the upscaling and downscaling we use cluster autoscaler and spot nodes",
    "start": "1851279",
    "end": "1856480"
  },
  {
    "text": "we also do monitoring of all of these resources via prometheus where we attach",
    "start": "1856480",
    "end": "1861840"
  },
  {
    "text": "labels to every deployment and all of them are queried in the grafana dashboard",
    "start": "1861840",
    "end": "1867200"
  },
  {
    "text": "so this is how the solution looks likes in from the angle of tools where we have different",
    "start": "1867200",
    "end": "1873600"
  },
  {
    "text": "components of dev orchestrator cluster manager in from monitoring and routing and uh",
    "start": "1873600",
    "end": "1880480"
  },
  {
    "text": "this particular diagram specifically explains us how the pre and post time stack will be where a sequential",
    "start": "1880480",
    "end": "1887200"
  },
  {
    "text": "development workflow is replaced by multiple parallel ecosystem of things",
    "start": "1887200",
    "end": "1892480"
  },
  {
    "text": "working with local sync what is the impact on their productivity we have seen a 10 to 15 x reduction in",
    "start": "1892480",
    "end": "1900159"
  },
  {
    "text": "time to take feature live because per feature the time has been reduced from",
    "start": "1900159",
    "end": "1905519"
  },
  {
    "text": "five hours to 30 minutes and per iterations it has come down to two minutes which was 20 to 30 minutes",
    "start": "1905519",
    "end": "1911600"
  },
  {
    "text": "earlier due to container builds and all the other regular process so these are the some of the features that we are",
    "start": "1911600",
    "end": "1917760"
  },
  {
    "text": "planning to go ahead and given that we emphasize on open source",
    "start": "1917760",
    "end": "1924399"
  },
  {
    "text": "we wanted to give back to the community as well which is where we are recording all of the details and reference",
    "start": "1924399",
    "end": "1930960"
  },
  {
    "text": "implementation in this open source effort feel free to raise issues or contribute back in order to make",
    "start": "1930960",
    "end": "1937200"
  },
  {
    "text": "developers life easier thank you and any questions",
    "start": "1937200",
    "end": "1944440"
  }
]