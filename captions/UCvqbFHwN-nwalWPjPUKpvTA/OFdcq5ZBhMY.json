[
  {
    "text": "okay now recording welcome everyone to the monthly open tracing specification",
    "start": "260",
    "end": "8099"
  },
  {
    "text": "council call today we've got two",
    "start": "8099",
    "end": "13549"
  },
  {
    "text": "presentations that I'm excited about both of them and to kick it off Johannes",
    "start": "13549",
    "end": "23910"
  },
  {
    "text": "is going to talk to us about service Maps Hannes works for the platform lab a",
    "start": "23910",
    "end": "30720"
  },
  {
    "text": "team at envision he's been working on",
    "start": "30720",
    "end": "37050"
  },
  {
    "text": "open tracing it's also good playing with some like step passed he worked at New Relic so he's familiar with APM's and",
    "start": "37050",
    "end": "44640"
  },
  {
    "text": "tracing in general honest good to see",
    "start": "44640",
    "end": "50010"
  },
  {
    "text": "you virtually in person here yeah and if",
    "start": "50010",
    "end": "56579"
  },
  {
    "text": "you would like to if you have slides if you'd like to screen share and kind of",
    "start": "56579",
    "end": "61920"
  },
  {
    "text": "take over oh great why don't you give us an introduction to what you're going to",
    "start": "61920",
    "end": "67619"
  },
  {
    "text": "present I know it's a service Maps and it's something new but you think it's it's kind of a novel approach to service",
    "start": "67619",
    "end": "75420"
  },
  {
    "text": "map visualization yeah I I think so so I'm I would be excited to hear if someone has seen this before or not let",
    "start": "75420",
    "end": "84210"
  },
  {
    "text": "me just get my presentation screen how",
    "start": "84210",
    "end": "93240"
  },
  {
    "text": "you do that again let's say",
    "start": "93240",
    "end": "96470"
  },
  {
    "text": "okay can people see that yeah looks good",
    "start": "101110",
    "end": "106750"
  },
  {
    "text": "cool",
    "start": "106750",
    "end": "109750"
  },
  {
    "text": "there we go okay yeah so my little",
    "start": "113310",
    "end": "119470"
  },
  {
    "text": "presentation is called service maps with open tracing and as Ted said I'm I'm an",
    "start": "119470",
    "end": "126159"
  },
  {
    "text": "engineer at the platform labs team so we do kind of like various little tech",
    "start": "126159",
    "end": "131190"
  },
  {
    "text": "things and this is just like a very minor thing so unfortunate I haven't",
    "start": "131190",
    "end": "136690"
  },
  {
    "text": "been able to spend too much time on it so what you'll see here is more an idea",
    "start": "136690",
    "end": "141760"
  },
  {
    "text": "than anything like a full implementation of anything and and yes so so the",
    "start": "141760",
    "end": "153040"
  },
  {
    "text": "problem that I'm trying to solve is a Domitian we don't really have a service",
    "start": "153040",
    "end": "158799"
  },
  {
    "text": "mark meaning like a graph showing the interdependencies between micro services",
    "start": "158799",
    "end": "165100"
  },
  {
    "text": "we kind of have a ton of them already and a lot of people or no one has the",
    "start": "165100",
    "end": "170590"
  },
  {
    "text": "full idea of all of them and how during interconnected so there are ways to",
    "start": "170590",
    "end": "179680"
  },
  {
    "text": "build a these and I'm gonna build one with open tracing but one thing I I have",
    "start": "179680",
    "end": "185049"
  },
  {
    "text": "like two bonuses that I don't see too often and that's like can we get a real-time one",
    "start": "185049",
    "end": "190690"
  },
  {
    "text": "so if dependencies change or if there's some kind of like outage will the",
    "start": "190690",
    "end": "196480"
  },
  {
    "text": "service map update can we come and get that and also normal service maps just",
    "start": "196480",
    "end": "204370"
  },
  {
    "text": "say like this service is depending on this other service but it doesn't say",
    "start": "204370",
    "end": "210750"
  },
  {
    "text": "like what what the channel is through all the micro services that makes that",
    "start": "210750",
    "end": "216660"
  },
  {
    "text": "one service depending on another one via like a bunch of services so be cool to",
    "start": "216660",
    "end": "223810"
  },
  {
    "text": "get that",
    "start": "223810",
    "end": "226109"
  },
  {
    "text": "so yeah I've seen some tools out there as mentioned but I don't think",
    "start": "242140",
    "end": "249230"
  },
  {
    "text": "I know if anyone they use open tracing although I wouldn't be surprised if that's the case anyway that's that's",
    "start": "249230",
    "end": "256310"
  },
  {
    "text": "that's what I used and one thing that",
    "start": "256310",
    "end": "262340"
  },
  {
    "text": "was important for this project is that it's just like for me then it's just like maybe 5% of my time and so I",
    "start": "262340",
    "end": "270020"
  },
  {
    "text": "definitely can't go to other teams and say like hey why don't you just add this library and then we'll get service Maps",
    "start": "270020",
    "end": "276680"
  },
  {
    "text": "like I just need to be able to do this without anyone's involvement and the",
    "start": "276680",
    "end": "285470"
  },
  {
    "text": "good thing is that we had already instrumented most of our services with light step which as you know is an",
    "start": "285470",
    "end": "292370"
  },
  {
    "text": "operating provider and what I did was to",
    "start": "292370",
    "end": "301460"
  },
  {
    "text": "create so lights that you can configure to send HTTP HTTP direct messages to the",
    "start": "301460",
    "end": "310610"
  },
  {
    "text": "lights that satellite which collects them and so what I've done is built a",
    "start": "310610",
    "end": "317690"
  },
  {
    "text": "proxy that's proxies all the data and also dumps it on Kafka so at 4 it's a",
    "start": "317690",
    "end": "326300"
  },
  {
    "text": "fifth message it works is it and also creates the Kafka message",
    "start": "326300",
    "end": "332469"
  },
  {
    "text": "[Music] yeah so that's that's how I I gather the",
    "start": "332900",
    "end": "338690"
  },
  {
    "text": "data and",
    "start": "338690",
    "end": "343240"
  },
  {
    "text": "let's see yeah so light step is",
    "start": "345260",
    "end": "355010"
  },
  {
    "text": "proprietary I mean it's open-source but it's just one provider of open tracing and so I",
    "start": "355010",
    "end": "361500"
  },
  {
    "text": "guess this is one I'll make a little side point which is probably for this group the most important point which is",
    "start": "361500",
    "end": "369150"
  },
  {
    "text": "that I would love love love to have open facing not only be the API but also the",
    "start": "369150",
    "end": "377370"
  },
  {
    "text": "the format maybe the transport so that like I said we have instrumented",
    "start": "377370",
    "end": "383580"
  },
  {
    "text": "everything with lights that but it would be so sweet if I could just say we've instrumented it with open tracing so now",
    "start": "383580",
    "end": "391949"
  },
  {
    "text": "we can plug in light step or we can plug in this new thing that I'm making or whatever other open tracing utility",
    "start": "391949",
    "end": "401280"
  },
  {
    "text": "I think that yeah that wouldn't be a huge change because right now I mean you",
    "start": "401280",
    "end": "406380"
  },
  {
    "text": "probably already know this you probably already on top of this but right now I really have to either make a proxy like",
    "start": "406380",
    "end": "414120"
  },
  {
    "text": "this and decipher those messages or I have to involve every team and say like hey use this new library in addition to",
    "start": "414120",
    "end": "422490"
  },
  {
    "text": "what you're using so yeah I think it would make it easier to make one of",
    "start": "422490",
    "end": "428340"
  },
  {
    "text": "services like I'm making also to change providers or have multiple providers and",
    "start": "428340",
    "end": "433770"
  },
  {
    "text": "I think it would be a cool idea I'm",
    "start": "433770",
    "end": "440880"
  },
  {
    "text": "interested if this is something that you've already that's already in the works cool so so now that I have this",
    "start": "440880",
    "end": "452970"
  },
  {
    "text": "data I have a service that I'm actually",
    "start": "452970",
    "end": "458940"
  },
  {
    "text": "running on my laptop so instead of deploying a service and everything I'm just running this tool kafka consumer on",
    "start": "458940",
    "end": "465330"
  },
  {
    "text": "my computer slurping in all the spans as",
    "start": "465330",
    "end": "471150"
  },
  {
    "text": "they come in on Kafka and then aggregating them in memory and this is",
    "start": "471150",
    "end": "476400"
  },
  {
    "text": "probably how most open tracing things work I assume and so the kind of the",
    "start": "476400",
    "end": "490470"
  },
  {
    "text": "first to answer the first question that I post in the beginning which is just like which services talk to which",
    "start": "490470",
    "end": "495600"
  },
  {
    "text": "services I just count ad just basically",
    "start": "495600",
    "end": "501030"
  },
  {
    "text": "so this service and I'm looking at the component name which",
    "start": "501030",
    "end": "508260"
  },
  {
    "text": "that's light stuff specific or open tracing and then the operation name actually first of all I'm just looking",
    "start": "508260",
    "end": "515310"
  },
  {
    "text": "at component name so which service is it and so I just mapped services talking to",
    "start": "515310",
    "end": "522450"
  },
  {
    "text": "each other and then using graphs in this I get",
    "start": "522450",
    "end": "528980"
  },
  {
    "text": "something like this I'm not sure you can",
    "start": "528980",
    "end": "538320"
  },
  {
    "text": "see this thing on my screen but it's blocking my view uh yeah we can see it",
    "start": "538320",
    "end": "543500"
  },
  {
    "text": "okay let's see if I can't remove it okay we can see your graph is oh yeah yeah",
    "start": "543500",
    "end": "549240"
  },
  {
    "text": "okay yeah no I just had a zoom window blocking it okay okay so here you can",
    "start": "549240",
    "end": "555420"
  },
  {
    "text": "see this is just a subset of the services we have and this is running and testing as well I didn't I wasn't quite",
    "start": "555420",
    "end": "562410"
  },
  {
    "text": "ready to deploy my one of service to production quite yet and so here you can",
    "start": "562410",
    "end": "571230"
  },
  {
    "text": "see like a little group of services that depend on each other one thing that was immediately came out",
    "start": "571230",
    "end": "578850"
  },
  {
    "text": "of this for me was that we had this users API service and teams API service and they depend on each other so I think",
    "start": "578850",
    "end": "585600"
  },
  {
    "text": "that it sounds like that should be the one service and not two services and I",
    "start": "585600",
    "end": "592290"
  },
  {
    "text": "owe a it's always cool to look at visualizations to kind of get a different view and different idea well",
    "start": "592290",
    "end": "601020"
  },
  {
    "text": "yeah one thing that's cool about this is that it also answers my first bonus",
    "start": "601020",
    "end": "608220"
  },
  {
    "text": "question which is that this this kind of piece of Kafka and could spit out a",
    "start": "608220",
    "end": "614100"
  },
  {
    "text": "graph every five minutes or whatever and so you could really get like an updated",
    "start": "614100",
    "end": "619230"
  },
  {
    "text": "view there's no need to like update some yeah mold dependency file or like figure",
    "start": "619230",
    "end": "625920"
  },
  {
    "text": "it out manually it's just like feeds off of open tracing data I also build these",
    "start": "625920",
    "end": "634520"
  },
  {
    "text": "kind of Markov chain graphs and for",
    "start": "634520",
    "end": "640620"
  },
  {
    "text": "anyone not familiar with Marco is basically saying like for each note you can see arrows pointing out with",
    "start": "640620",
    "end": "648550"
  },
  {
    "text": "percentages and that's like the likelihood that I call will go in that",
    "start": "648550",
    "end": "654069"
  },
  {
    "text": "direction of course it's it's not really like a random random choice here it's",
    "start": "654069",
    "end": "662410"
  },
  {
    "text": "it's defined with the code but but if you just like one an overview you can",
    "start": "662410",
    "end": "667480"
  },
  {
    "text": "see where holes go and I also put in like an enter and exit node to see how",
    "start": "667480",
    "end": "674829"
  },
  {
    "text": "it and there is our system and how it leaves it and this spaghetti is kind of",
    "start": "674829",
    "end": "685810"
  },
  {
    "text": "when I instead of just doing the component names I also added the operation names so you",
    "start": "685810",
    "end": "691899"
  },
  {
    "text": "can see it's like teams API get the user teams or teams API get user open",
    "start": "691899",
    "end": "698230"
  },
  {
    "text": "enrollment teams and so you can see within the service how the data flows",
    "start": "698230",
    "end": "705480"
  },
  {
    "text": "but this the reason why I'm just showing you a little bit is that it even for the",
    "start": "706380",
    "end": "711699"
  },
  {
    "text": "small subset of data that I add it very quickly becomes a little unreadable and you have to scroll around and it's it's",
    "start": "711699",
    "end": "717850"
  },
  {
    "text": "tough so so that's like the first approach and",
    "start": "717850",
    "end": "725950"
  },
  {
    "text": "what I have been doing just a little bit and which I think might be more novel",
    "start": "725950",
    "end": "733510"
  },
  {
    "text": "and this I haven't seen it for service maps which is that instead of doing this",
    "start": "733510",
    "end": "738830"
  },
  {
    "text": "kind of shallow map where you have sorry where you have just like you can see",
    "start": "738830",
    "end": "749170"
  },
  {
    "text": "but the likelihood of where it goes out of the service but you can't really see the path that it took to get there so",
    "start": "749590",
    "end": "759100"
  },
  {
    "text": "instead of counting edges i'm counting these paths through the system and so",
    "start": "759100",
    "end": "766890"
  },
  {
    "text": "what i'm doing is basically looking at the tree of course and and sorting it in",
    "start": "766890",
    "end": "774460"
  },
  {
    "text": "a specific way just to make it kind of canonical version of it and i think",
    "start": "774460",
    "end": "783610"
  },
  {
    "text": "there are different ways where you can involve the tag names and stuff to get more interesting data but so far I'm",
    "start": "783610",
    "end": "788740"
  },
  {
    "text": "just doing components and operation name",
    "start": "788740",
    "end": "792420"
  },
  {
    "text": "so I'm just counting so for each like complete pass that happens within my",
    "start": "793900",
    "end": "800560"
  },
  {
    "text": "aggregation I'd make a little hash of it and then I increment the counter so just",
    "start": "800560",
    "end": "807520"
  },
  {
    "text": "a side note is that this like it's running on my laptop and it's running just fine on my laptop because I just",
    "start": "807520",
    "end": "814630"
  },
  {
    "text": "need these like hash two integer nothings it's not really a lot of data at all and the output of this thing is",
    "start": "814630",
    "end": "822280"
  },
  {
    "text": "also tiny I just need to like for every canonicalized path I need to store it",
    "start": "822280",
    "end": "827590"
  },
  {
    "text": "and then store the counts associated with it I feel free to interrupt me with",
    "start": "827590",
    "end": "833920"
  },
  {
    "text": "questions by the way I realized that there's a lot of talking in text and not too much illustrations here so if it's",
    "start": "833920",
    "end": "840550"
  },
  {
    "text": "hard to follow let me know yeah so the",
    "start": "840550",
    "end": "849130"
  },
  {
    "text": "idea with these paths is that you can answer questions like like what is the",
    "start": "849130",
    "end": "855820"
  },
  {
    "text": "entry point to all our services that ends up with like a certain call to your",
    "start": "855820",
    "end": "865510"
  },
  {
    "text": "service Michael why are we getting so many of these like everyone calls them but what's the origin of these calls another",
    "start": "865510",
    "end": "874330"
  },
  {
    "text": "thing that I think is interesting for something like lights that or other open tracing providers is that you can if you",
    "start": "874330",
    "end": "882460"
  },
  {
    "text": "have an outlier say in in response time you can see like okay this thing takes",
    "start": "882460",
    "end": "887860"
  },
  {
    "text": "ten seconds I think it's interesting to know like how common is this path",
    "start": "887860",
    "end": "893560"
  },
  {
    "text": "through the system because if it's completely uncommon and it's very slow that means that this is a one of thing",
    "start": "893560",
    "end": "900370"
  },
  {
    "text": "that's that you can like ignore or deal",
    "start": "900370",
    "end": "909040"
  },
  {
    "text": "with depending on or if it's like very slow and super common then you know that",
    "start": "909040",
    "end": "914500"
  },
  {
    "text": "there's something about the data or your system at this point so those are like very different things and the count of the pads will tell you",
    "start": "914500",
    "end": "922180"
  },
  {
    "text": "which group belongs in oh yeah oh right so I have some other",
    "start": "922180",
    "end": "931979"
  },
  {
    "text": "graphs which I think I need to switch to my browser",
    "start": "931979",
    "end": "938089"
  },
  {
    "text": "let's say",
    "start": "938130",
    "end": "941149"
  },
  {
    "text": "okay can you see this one yeah okay so",
    "start": "944160",
    "end": "950070"
  },
  {
    "text": "so this is one where we have we have the",
    "start": "950070",
    "end": "958060"
  },
  {
    "text": "component name and we also have the operation name and so one thing you",
    "start": "958060",
    "end": "965530"
  },
  {
    "text": "might wonder if you look at this you see that there's like we have a bunch of calls to this team's API get team and so",
    "start": "965530",
    "end": "974650"
  },
  {
    "text": "the question it's like how did I get here because we can follow this arrow",
    "start": "974650",
    "end": "980320"
  },
  {
    "text": "and so we know that it came from this users API which came from this one this",
    "start": "980320",
    "end": "989800"
  },
  {
    "text": "is just by following that the only arrow is pointing in that direction but here like once we're here we can't say like",
    "start": "989800",
    "end": "996690"
  },
  {
    "text": "did the calls that came through here did they come from the team's API or the conversation",
    "start": "996690",
    "end": "1004260"
  },
  {
    "text": "service or did they come through our system originally so those are the three paths that could be taken to get into",
    "start": "1004260",
    "end": "1011760"
  },
  {
    "text": "this and so if you want to reason about the path of this in just the diagram",
    "start": "1011760",
    "end": "1018990"
  },
  {
    "text": "view you can't we can't really see that but with the paths I can I can generate",
    "start": "1018990",
    "end": "1026100"
  },
  {
    "text": "those counts so now I highlight this I",
    "start": "1026100",
    "end": "1032030"
  },
  {
    "text": "had to do this very manually unfortunately I think this would be way better interactively but basically now",
    "start": "1032030",
    "end": "1039420"
  },
  {
    "text": "we can see that there is zero calls coming through here all of the calls",
    "start": "1039420",
    "end": "1045060"
  },
  {
    "text": "from conversation service will go through this path",
    "start": "1045060",
    "end": "1050840"
  },
  {
    "text": "I guess yeah I guess all of them will either go through the here or come directly and from outside so what I yeah",
    "start": "1053260",
    "end": "1064750"
  },
  {
    "text": "so this is like a very early prototype of what I think as an interactive diagram could actually be very useful I",
    "start": "1064750",
    "end": "1074279"
  },
  {
    "text": "have a quick question yeah have have you done anything with having",
    "start": "1076170",
    "end": "1083190"
  },
  {
    "text": "kind of breaking out those calls by any",
    "start": "1083190",
    "end": "1089290"
  },
  {
    "text": "sort of metadata like if an error occurred or using a like the semantics",
    "start": "1089290",
    "end": "1094900"
  },
  {
    "text": "conventions - yeah categorize what percentage of those calls are for this",
    "start": "1094900",
    "end": "1102460"
  },
  {
    "text": "reason or that reason I have not but I think that's a really good question and I think that's something where you could",
    "start": "1102460",
    "end": "1109930"
  },
  {
    "text": "see a lot of interesting data like that and tags and yeah yeah and I think so I",
    "start": "1109930",
    "end": "1118390"
  },
  {
    "text": "think if I built this service for real then I think it would be interesting to",
    "start": "1118390",
    "end": "1124350"
  },
  {
    "text": "try to dynamically figure out like what are the big groups of things that make a",
    "start": "1124350",
    "end": "1131230"
  },
  {
    "text": "difference here and so you can break it down by those interesting things oh yeah",
    "start": "1131230",
    "end": "1138520"
  },
  {
    "text": "so far I haven't done it oh cool thank you yeah yeah so actually what I really",
    "start": "1138520",
    "end": "1149410"
  },
  {
    "text": "wanted to build but I didn't have time is google analytics tab has this really",
    "start": "1149410",
    "end": "1156160"
  },
  {
    "text": "cool user flow diagram that's a Sankey diagram if people are familiar with us",
    "start": "1156160",
    "end": "1164460"
  },
  {
    "text": "which is I think a great visualization for this unfortunately I didn't have",
    "start": "1164550",
    "end": "1171220"
  },
  {
    "text": "time to to make that for this presentation I also think Netflix is",
    "start": "1171220",
    "end": "1177160"
  },
  {
    "text": "visceral this is a screenshot from the other thing I think that could be a cool way",
    "start": "1177160",
    "end": "1183730"
  },
  {
    "text": "to be sure I said it's actually more like cool than useful because it's again one of those",
    "start": "1183730",
    "end": "1189700"
  },
  {
    "text": "shallow mappings so it doesn't really tell you like the story of the path",
    "start": "1189700",
    "end": "1196239"
  },
  {
    "text": "through the system but it does give you a very nice live view so this will these",
    "start": "1196239",
    "end": "1202210"
  },
  {
    "text": "dots on the diagram would actually move if this was a alive instance of it so so",
    "start": "1202210",
    "end": "1214570"
  },
  {
    "text": "yeah that's that's what I have and I'm super interested again to hear if you have any of you have seen this before or",
    "start": "1214570",
    "end": "1222809"
  },
  {
    "text": "there are products like this yeah that's what I got",
    "start": "1222809",
    "end": "1227919"
  },
  {
    "text": "thank you thank you Johannes I wanted to",
    "start": "1227919",
    "end": "1237399"
  },
  {
    "text": "mention because you were discussing standardized wire protocols in data",
    "start": "1237399",
    "end": "1244539"
  },
  {
    "text": "format that work we're not doing it",
    "start": "1244539",
    "end": "1250109"
  },
  {
    "text": "directly and open tracing because that project right now is just trying to stick to the sort of language API level",
    "start": "1250109",
    "end": "1258369"
  },
  {
    "text": "but it is going on with many of the same people through the w3c oh I'll post just posted a link in the",
    "start": "1258369",
    "end": "1266200"
  },
  {
    "text": "chat the w3c trace context working group we actually just met last week in the",
    "start": "1266200",
    "end": "1276239"
  },
  {
    "text": "Lyon France for the big w3c meeting that's got two parts one part that's",
    "start": "1276239",
    "end": "1282999"
  },
  {
    "text": "that's nearly two a v1 is is the wire protocol for in band context propagation",
    "start": "1282999",
    "end": "1288970"
  },
  {
    "text": "so that's what you would be injecting and extracting from carriers and open",
    "start": "1288970",
    "end": "1295179"
  },
  {
    "text": "tracing so it's some standardized HTTP headers for including tracing metadata",
    "start": "1295179",
    "end": "1301830"
  },
  {
    "text": "that works interesting also because it's focused not just on standardizing for",
    "start": "1301830",
    "end": "1307809"
  },
  {
    "text": "individual tracers but for interrupt so if you had a trace that actually went",
    "start": "1307809",
    "end": "1313179"
  },
  {
    "text": "through several tracing systems the canonical example is if you have a service provider",
    "start": "1313179",
    "end": "1320590"
  },
  {
    "text": "like an infrastructure provider and they have tracing data and then you have you",
    "start": "1320590",
    "end": "1327129"
  },
  {
    "text": "know your own tracing system that you're running an application and you'd like to link that information together so that",
    "start": "1327129",
    "end": "1334690"
  },
  {
    "text": "you can you know say you've got oh I don't know you're running New Relic or",
    "start": "1334690",
    "end": "1341529"
  },
  {
    "text": "light step in your app and then you're running on top of Microsoft Azure or",
    "start": "1341529",
    "end": "1349049"
  },
  {
    "text": "Google cloud and you're using one of their services they're not going to be running it step for new relic on spanner",
    "start": "1349049",
    "end": "1357159"
  },
  {
    "text": "but perhaps they can give you some kind of interesting trace data out of spanner",
    "start": "1357159",
    "end": "1363369"
  },
  {
    "text": "or similar service so there's that going on and more relevant to the service map",
    "start": "1363369",
    "end": "1369749"
  },
  {
    "text": "discussion you're doing we're thinking about trying to standardize this sort of export format so that you could do black",
    "start": "1369749",
    "end": "1377769"
  },
  {
    "text": "box tracing like this so if you just had kind of a standard wire protocol for trace data being propagated in band and",
    "start": "1377769",
    "end": "1386230"
  },
  {
    "text": "then some more standard way of being able to attach to a process and get some",
    "start": "1386230",
    "end": "1391869"
  },
  {
    "text": "kind of standard export format or a push model like like syslog you know",
    "start": "1391869",
    "end": "1397799"
  },
  {
    "text": "something that everyone could consume without having to know the particular",
    "start": "1397799",
    "end": "1403480"
  },
  {
    "text": "kind of monitoring service that was running inside of the app so I think that's something you would probably have",
    "start": "1403480",
    "end": "1410590"
  },
  {
    "text": "liked to have had here running this experiment definitely that's super cool yeah I think this is interesting I",
    "start": "1410590",
    "end": "1418929"
  },
  {
    "text": "haven't seen I've certainly seen service maps but I do like the idea of not just",
    "start": "1418929",
    "end": "1425619"
  },
  {
    "text": "of they tend to be service level I think in not I like the idea of digging down",
    "start": "1425619",
    "end": "1432610"
  },
  {
    "text": "into a path history I can see this being interesting for outlier analysis and",
    "start": "1432610",
    "end": "1439840"
  },
  {
    "text": "also the percentages that you're showing I could see that being very interesting if you're just trying to figure out",
    "start": "1439840",
    "end": "1445869"
  },
  {
    "text": "generally where is the traffic coming from kind of getting a sense of the various flows that are generating some",
    "start": "1445869",
    "end": "1453009"
  },
  {
    "text": "particular it seems like you were finding some particular point of interest and then working back from that to see the various types of things",
    "start": "1453009",
    "end": "1461830"
  },
  {
    "text": "that were causing it yeah correct yeah uh I can like share some experience with",
    "start": "1461830",
    "end": "1469780"
  },
  {
    "text": "this so we've implemented deep service Maps but you're so ago I actually showed",
    "start": "1469780",
    "end": "1475210"
  },
  {
    "text": "them at the last cube con so one thing about that is that the the way you",
    "start": "1475210",
    "end": "1482770"
  },
  {
    "text": "showed them it works fine if you were architecture small as soon as you go to",
    "start": "1482770",
    "end": "1489010"
  },
  {
    "text": "large scale like at uber we have three something thousand services so those those Maps by themselves like if you do",
    "start": "1489010",
    "end": "1496210"
  },
  {
    "text": "the whole architecture they become completely useless and unusable and so our service master is step down from the",
    "start": "1496210",
    "end": "1503080"
  },
  {
    "text": "like point of view with service developer so you pick a service first and then you visualize all the paths",
    "start": "1503080",
    "end": "1508720"
  },
  {
    "text": "going through that service rather than like the whole architecture advice it's too huge and I was like curious to see",
    "start": "1508720",
    "end": "1517270"
  },
  {
    "text": "Sankey diagram we've also increased pyramid with a Sankey diagram and we just couldn't make them work at any",
    "start": "1517270",
    "end": "1522610"
  },
  {
    "text": "scale I mean they're they're kind of interesting that if you cover maybe 10 services but but anything more than that",
    "start": "1522610",
    "end": "1529660"
  },
  {
    "text": "and it just becomes unwieldy yeah so I",
    "start": "1529660",
    "end": "1534850"
  },
  {
    "text": "didn't have anything to show but yeah I definitely saw already with what I was trying that it becomes very long",
    "start": "1534850",
    "end": "1541180"
  },
  {
    "text": "basically like if you show pads through it yeah I think for the tiny tiny stuff",
    "start": "1541180",
    "end": "1548800"
  },
  {
    "text": "that I had maybe I would be possible but yeah very very useful and we had a lot",
    "start": "1548800",
    "end": "1558220"
  },
  {
    "text": "of people internally at uber like asking for them and and using them to understand the dependencies so do you",
    "start": "1558220",
    "end": "1566500"
  },
  {
    "text": "have a link to that talk by the way I'll be very interested to see it yeah I mean gone this should have I can I can post",
    "start": "1566500",
    "end": "1573970"
  },
  {
    "text": "in the chat thank you there is talk from Bill Westland who also worked on that project that I",
    "start": "1573970",
    "end": "1581680"
  },
  {
    "text": "linked I don't have the link for the cute con talk but one is even better because he actually showed live demo of",
    "start": "1581680",
    "end": "1587080"
  },
  {
    "text": "that I I just gotta screenshots and it's it's the same thing yeah yeah this is a yeah",
    "start": "1587080",
    "end": "1593100"
  },
  {
    "text": "what bill showed is is like the live examples of that thing very cool thank you it has like live filtering like you",
    "start": "1593100",
    "end": "1600300"
  },
  {
    "text": "mentioned with the highlighting the service and stuff like that really interesting yeah but I can see you're",
    "start": "1600300",
    "end": "1606240"
  },
  {
    "text": "approached Johannes you don't necessarily need the whole service map if you're starting from something you're",
    "start": "1606240",
    "end": "1612570"
  },
  {
    "text": "interested in I mean I'm working backwards seeing a map of everything in",
    "start": "1612570",
    "end": "1618120"
  },
  {
    "text": "your system isn't very relevant you're specifically only interested in the things that led to that particular",
    "start": "1618120",
    "end": "1623430"
  },
  {
    "text": "interesting moment yeah that's we've that's probably one of the directions",
    "start": "1623430",
    "end": "1629910"
  },
  {
    "text": "we're gonna take with the next iteration of the dependency Maps kind of",
    "start": "1629910",
    "end": "1635610"
  },
  {
    "text": "restricting it more severely because I'm larger or likes more popular or more relevant or I guess commonly used",
    "start": "1635610",
    "end": "1642390"
  },
  {
    "text": "services it becomes pretty difficult to use so we're gonna probably limit it to",
    "start": "1642390",
    "end": "1647790"
  },
  {
    "text": "a single service being on all paths so it's kind of a focal service and then like a number of hops up from that",
    "start": "1647790",
    "end": "1653940"
  },
  {
    "text": "service and down from that service I then allow the user to kind of progressively expand or collapse sweet",
    "start": "1653940",
    "end": "1664050"
  },
  {
    "text": "yeah it's really interesting stuff yeah yeah any other final questions otherwise",
    "start": "1664050",
    "end": "1672120"
  },
  {
    "text": "we're gonna switch gears to Java agents",
    "start": "1672120",
    "end": "1677600"
  },
  {
    "text": "great that was an awesome presentation thank you so much Johannes for putting that together",
    "start": "1678800",
    "end": "1684320"
  },
  {
    "text": "yeah please let us know if you publish that work in any way well there Thanks",
    "start": "1684320",
    "end": "1689760"
  },
  {
    "text": "yeah okay so next up we have some fun",
    "start": "1689760",
    "end": "1695760"
  },
  {
    "text": "work we've been doing at light step 7",
    "start": "1695760",
    "end": "1701760"
  },
  {
    "text": "Sarris lives in thailand and he's been working with us on java agent work",
    "start": "1701760",
    "end": "1709820"
  },
  {
    "text": "however rather than a code of a black box agent approach we've been trying to look",
    "start": "1709820",
    "end": "1716310"
  },
  {
    "text": "at one that would leverage existing open tracing instrumentation",
    "start": "1716310",
    "end": "1722579"
  },
  {
    "text": "and some somewhat similar to the existing Java agent that was in contribu",
    "start": "1722579",
    "end": "1730450"
  },
  {
    "text": "came up with a kind of interesting way of actually putting it together so stuff was on the call today and he's",
    "start": "1730450",
    "end": "1737499"
  },
  {
    "text": "gonna lead us through an overview of that project it's just about getting to the point where it would be great for",
    "start": "1737499",
    "end": "1743320"
  },
  {
    "text": "other people to kind of get involved so this is sort of a welcome welcome to",
    "start": "1743320",
    "end": "1748570"
  },
  {
    "text": "Java special agent talk all right do you guys hear me yep okay let me share my screen here I",
    "start": "1748570",
    "end": "1761820"
  },
  {
    "text": "do this",
    "start": "1761820",
    "end": "1765148"
  },
  {
    "text": "you",
    "start": "1771350",
    "end": "1773410"
  },
  {
    "text": "okay all right",
    "start": "1777850",
    "end": "1783070"
  },
  {
    "text": "so hi everybody my name is Sarah safra's and I have been working on the special",
    "start": "1783070",
    "end": "1790159"
  },
  {
    "text": "agent project with Ted just to give you",
    "start": "1790159",
    "end": "1795289"
  },
  {
    "text": "guys a jump start into the context of the project this project is essentially",
    "start": "1795289",
    "end": "1800720"
  },
  {
    "text": "the Java agent but more so basically it",
    "start": "1800720",
    "end": "1807470"
  },
  {
    "text": "does everything that the agent does but it also does automatic instrumentation",
    "start": "1807470",
    "end": "1814250"
  },
  {
    "text": "so let's talk about what that means all right so first of all motivation",
    "start": "1814250",
    "end": "1819529"
  },
  {
    "text": "what is the motivation behind the special agents",
    "start": "1819529",
    "end": "1825789"
  },
  {
    "text": "special motivations are - with with a",
    "start": "1828370",
    "end": "1833410"
  },
  {
    "text": "single with a single with a single",
    "start": "1833410",
    "end": "1839580"
  },
  {
    "text": "command effectively achievement and tracing to be able to instrument all RPC",
    "start": "1839640",
    "end": "1845970"
  },
  {
    "text": "libraries runtime frameworks in every service manual installation",
    "start": "1845970",
    "end": "1851280"
  },
  {
    "text": "configuration of plugins is significantly cause is a significant",
    "start": "1851280",
    "end": "1856620"
  },
  {
    "text": "cost barrier so the idea is to make it",
    "start": "1856620",
    "end": "1861770"
  },
  {
    "text": "easy and efficient to to effectively instrument an entire application with",
    "start": "1861770",
    "end": "1870480"
  },
  {
    "text": "with the least of effort",
    "start": "1870480",
    "end": "1875950"
  },
  {
    "text": "since it's possible to automate the process of installing plugins we",
    "start": "1875950",
    "end": "1882370"
  },
  {
    "text": "basically are trying to create a tool that would do exactly that automatically",
    "start": "1882370",
    "end": "1889170"
  },
  {
    "text": "instrument the third party libraries in",
    "start": "1889170",
    "end": "1894820"
  },
  {
    "text": "an entire application this would be helpful for large organizations with big",
    "start": "1894820",
    "end": "1900880"
  },
  {
    "text": "code bases and many services and especially helpful for teams that do not have access to the to the source code",
    "start": "1900880",
    "end": "1909460"
  },
  {
    "text": "itself all right so high level goals",
    "start": "1909460",
    "end": "1915610"
  },
  {
    "text": "high level goals of this project or to allow any plugin in the open tracing",
    "start": "1915610",
    "end": "1922110"
  },
  {
    "text": "contribute to be automatically installable in an application right so",
    "start": "1922110",
    "end": "1927820"
  },
  {
    "text": "essentially you you are with one command",
    "start": "1927820",
    "end": "1933460"
  },
  {
    "text": "you instrument an entire application that leverages all of the",
    "start": "1933460",
    "end": "1940200"
  },
  {
    "text": "instrumentation plugins in the open tracing contrib project",
    "start": "1940200",
    "end": "1947700"
  },
  {
    "text": "selling install any plugins regard regardless in which class loader the library is loaded so this is a pretty",
    "start": "1947700",
    "end": "1955799"
  },
  {
    "text": "big one because as we all know in Java",
    "start": "1955799",
    "end": "1962100"
  },
  {
    "text": "you never can be certain which class in",
    "start": "1962100",
    "end": "1967260"
  },
  {
    "text": "which class loader any class is loaded and to say more to this you can never",
    "start": "1967260",
    "end": "1974880"
  },
  {
    "text": "even be sure that the class loader is a regular class loader that even has a it",
    "start": "1974880",
    "end": "1982710"
  },
  {
    "text": "has a class path for instance",
    "start": "1982710",
    "end": "1986929"
  },
  {
    "text": "so number three must not destabilize the target application so this is kind of a",
    "start": "1987790",
    "end": "1993670"
  },
  {
    "text": "quality control goal provide a single",
    "start": "1993670",
    "end": "1998750"
  },
  {
    "text": "line command to statically or dynamically attach to a target application running on JVM versions",
    "start": "1998750",
    "end": "2005320"
  },
  {
    "text": "well that's seven to the latest and",
    "start": "2005320",
    "end": "2010799"
  },
  {
    "text": "also to provide a lightweight test lightweight testing methodology to test",
    "start": "2012820",
    "end": "2019090"
  },
  {
    "text": "auto instrumentation so this is effectively a testing tool that would",
    "start": "2019090",
    "end": "2025660"
  },
  {
    "text": "allow a developer to easily test his",
    "start": "2025660",
    "end": "2032100"
  },
  {
    "text": "baikman script and ensure that the instrumentation plug-in is being",
    "start": "2032100",
    "end": "2038560"
  },
  {
    "text": "properly loaded and is resulting in in traces via via the Amon tracer",
    "start": "2038560",
    "end": "2050669"
  },
  {
    "text": "the the idea behind this this test this test methodology is that it would",
    "start": "2052040",
    "end": "2059570"
  },
  {
    "text": "simulate the exact conditions the exact toughest conditions that would have to",
    "start": "2059570",
    "end": "2067010"
  },
  {
    "text": "be met by any application and and those would basically be that the that the",
    "start": "2067010",
    "end": "2073790"
  },
  {
    "text": "classes that need to the instruments that are loaded in a class loader that is disconnected from from the system",
    "start": "2073790",
    "end": "2081408"
  },
  {
    "text": "class loader and and finally to initialize the mark tracer and to",
    "start": "2081409",
    "end": "2087080"
  },
  {
    "text": "provide a reference an easy reference basically to the test methods and lastly",
    "start": "2087080",
    "end": "2094100"
  },
  {
    "text": "is so this this special agent needs to",
    "start": "2094100",
    "end": "2100880"
  },
  {
    "text": "be configurable and this is the kind of still still out in the in the",
    "start": "2100880",
    "end": "2109190"
  },
  {
    "text": "foreshadowing stages of the project and",
    "start": "2109190",
    "end": "2116630"
  },
  {
    "text": "by the way if anybody has any questions please feel free ok so very high-level",
    "start": "2116630",
    "end": "2123920"
  },
  {
    "text": "architecture the idea is that the special agent is built with all of the",
    "start": "2123920",
    "end": "2132920"
  },
  {
    "text": "instrumentation packages inside of it so the basically when you declare the Java",
    "start": "2132920",
    "end": "2140060"
  },
  {
    "text": "agent parameter or Java agents of VM arguments on the command line for an",
    "start": "2140060",
    "end": "2145250"
  },
  {
    "text": "application when you're statically attaching that's jar has every",
    "start": "2145250",
    "end": "2150740"
  },
  {
    "text": "instrumentation plug-in inside of it which also then so so that's",
    "start": "2150740",
    "end": "2159250"
  },
  {
    "text": "sation packages the OT rules files are also are also packaged inside of the",
    "start": "2159250",
    "end": "2167080"
  },
  {
    "text": "special agents and they are correlated to the instrumentation packages so that",
    "start": "2167080",
    "end": "2172300"
  },
  {
    "text": "so that effectively it is known which which rule is is attached to which",
    "start": "2172300",
    "end": "2179080"
  },
  {
    "text": "instrumentation package and so then when the special agent attaches to the",
    "start": "2179080",
    "end": "2184390"
  },
  {
    "text": "application it has all of the resources to be able to trigger",
    "start": "2184390",
    "end": "2192359"
  },
  {
    "text": "and instruments the the third-party libraries",
    "start": "2192359",
    "end": "2199400"
  },
  {
    "text": "okay custom class loaders so this little",
    "start": "2200900",
    "end": "2207630"
  },
  {
    "text": "piece shows how the Special Agent deals with the situation where classes are",
    "start": "2207630",
    "end": "2216090"
  },
  {
    "text": "loaded in class loaders that well",
    "start": "2216090",
    "end": "2222890"
  },
  {
    "text": "the system classloader basically because if it's not this is a capacitor it could be really anything and so what is the",
    "start": "2222940",
    "end": "2233020"
  },
  {
    "text": "farthest extreme of anything of any weird class hooker",
    "start": "2233020",
    "end": "2238359"
  },
  {
    "text": "in this picture that will be a custom class loader to and because some cross loader to is a class loader that is",
    "start": "2238359",
    "end": "2246339"
  },
  {
    "text": "detached from the system class loader and and it is only attached to the boot",
    "start": "2246339",
    "end": "2251440"
  },
  {
    "text": "class loader because so boot class loader is is a class loader that that",
    "start": "2251440",
    "end": "2257079"
  },
  {
    "text": "you cannot actually effectively detach",
    "start": "2257079",
    "end": "2262480"
  },
  {
    "text": "yourself from so any class loader that is ever created it is a it it does have",
    "start": "2262480",
    "end": "2270490"
  },
  {
    "text": "an like a super parents as the class loader but in this example the contrary",
    "start": "2270490",
    "end": "2277780"
  },
  {
    "text": "is custom class loader one which has a parent that is the system class loader",
    "start": "2277780",
    "end": "2283300"
  },
  {
    "text": "that then is connected to the blue cluster okay so how does the special",
    "start": "2283300",
    "end": "2289210"
  },
  {
    "text": "agents deal with this situation the way the special agent operates is",
    "start": "2289210",
    "end": "2297000"
  },
  {
    "text": "you quick quick overview here because it's",
    "start": "2297640",
    "end": "2302880"
  },
  {
    "text": "on the next slide so bite man bite man gets injected into the boot class loader",
    "start": "2302880",
    "end": "2309390"
  },
  {
    "text": "so that's any code any any byte code",
    "start": "2309390",
    "end": "2314850"
  },
  {
    "text": "that references bite man from any class loader would be able to reference bite",
    "start": "2314850",
    "end": "2322230"
  },
  {
    "text": "man because it exists in a boot class loader okay right",
    "start": "2322230",
    "end": "2328940"
  },
  {
    "text": "and then next slide awaits that's not where I want sits ago",
    "start": "2330400",
    "end": "2337950"
  },
  {
    "text": "weird you okay so bite man the way that the",
    "start": "2339380",
    "end": "2352200"
  },
  {
    "text": "special agent is able to operate with custom class loaders is that it",
    "start": "2352200",
    "end": "2359070"
  },
  {
    "text": "leverages it fully leverages the OTA rules uh BTM files so what what do these",
    "start": "2359070",
    "end": "2365520"
  },
  {
    "text": "files represent these files represent the trigger points into the third-party",
    "start": "2365520",
    "end": "2371460"
  },
  {
    "text": "library for instrumentation that is to say that if the if this bite man rule",
    "start": "2371460",
    "end": "2377430"
  },
  {
    "text": "gets triggered then this library exists",
    "start": "2377430",
    "end": "2382740"
  },
  {
    "text": "in the system and from this points we",
    "start": "2382740",
    "end": "2388890"
  },
  {
    "text": "can extract some information the first point that so number one is something",
    "start": "2388890",
    "end": "2395160"
  },
  {
    "text": "that is done beforehand before the trigger ends and that is to associate the instrumentation package with each OT",
    "start": "2395160",
    "end": "2402330"
  },
  {
    "text": "a rule study sample so that basically links together the implementation of the",
    "start": "2402330",
    "end": "2408090"
  },
  {
    "text": "instrumentation plugin with the bite man rules file okay number two is when",
    "start": "2408090",
    "end": "2415200"
  },
  {
    "text": "trigger happens when when white man triggers when the rule triggers",
    "start": "2415200",
    "end": "2423710"
  },
  {
    "text": "the special agent uses the trigger it uses the object on which the rule was",
    "start": "2424150",
    "end": "2430450"
  },
  {
    "text": "triggered to determine the target class libera okay so now we know what class",
    "start": "2430450",
    "end": "2435730"
  },
  {
    "text": "loader the the class for the object is",
    "start": "2435730",
    "end": "2442660"
  },
  {
    "text": "loaded in and then using some very",
    "start": "2442660",
    "end": "2448559"
  },
  {
    "text": "interesting patterns these special",
    "start": "2448559",
    "end": "2454089"
  },
  {
    "text": "agents loads bytecode of the instrumentation classes in the target class loader",
    "start": "2454089",
    "end": "2461709"
  },
  {
    "text": "directly and the way it does this is it actually uses bite man itself to",
    "start": "2461709",
    "end": "2467349"
  },
  {
    "text": "override the class loader dot fine class method and also then exposes the defined",
    "start": "2467349",
    "end": "2477369"
  },
  {
    "text": "class method so effectively what the code is doing is it is forcing the class",
    "start": "2477369",
    "end": "2486729"
  },
  {
    "text": "loader to be able to resolve any of the",
    "start": "2486729",
    "end": "2493299"
  },
  {
    "text": "classes in the instrumentation plug-in and upon resolution",
    "start": "2493299",
    "end": "2501599"
  },
  {
    "text": "those the bike the bike code for those classes it's directly injected into the",
    "start": "2502920",
    "end": "2508079"
  },
  {
    "text": "class loader okay",
    "start": "2508079",
    "end": "2512119"
  },
  {
    "text": "all right let's see here I don't know how this got",
    "start": "2513430",
    "end": "2519480"
  },
  {
    "text": "messed up",
    "start": "2519480",
    "end": "2522020"
  },
  {
    "text": "okay so so if anybody has any questions",
    "start": "2524510",
    "end": "2530720"
  },
  {
    "text": "about the class lawyers or feel free i if i skipped a lot of complexity but but",
    "start": "2530720",
    "end": "2540470"
  },
  {
    "text": "that's basically the the idea and what's great about this is that the this this",
    "start": "2540470",
    "end": "2547970"
  },
  {
    "text": "solution effectively works for any class loader because it's operates with the",
    "start": "2547970",
    "end": "2554830"
  },
  {
    "text": "with with with java.lang class loader",
    "start": "2554830",
    "end": "2559810"
  },
  {
    "text": "class ok so the installation of the",
    "start": "2559990",
    "end": "2567050"
  },
  {
    "text": "special agents so the Special Agent is a maven project",
    "start": "2567050",
    "end": "2573680"
  },
  {
    "text": "and it has two artifacts that are built it has the main artifacts and it has the tests artifact and effectively these two",
    "start": "2573680",
    "end": "2581630"
  },
  {
    "text": "artifacts these two jars are the only jars that are necessary to use special",
    "start": "2581630",
    "end": "2589070"
  },
  {
    "text": "agents either for instrumentation or for testing of instrumentation plugins okay",
    "start": "2589070",
    "end": "2598790"
  },
  {
    "text": "so in this situation in this slide the special agent main jar has all of the",
    "start": "2598790",
    "end": "2608630"
  },
  {
    "text": "instrumentation plugins inside of it and when it is passed to the java a java",
    "start": "2608630",
    "end": "2615619"
  },
  {
    "text": "asian vm arguments for static attach or when it is run as a as a main jar with",
    "start": "2615619",
    "end": "2627290"
  },
  {
    "text": "the paid of a process it is able to effectively attach and",
    "start": "2627290",
    "end": "2634010"
  },
  {
    "text": "instrument the full scope of all of the open tracing contributes Asian plugins",
    "start": "2634010",
    "end": "2643040"
  },
  {
    "text": "the special agent tests jar is",
    "start": "2643040",
    "end": "2649610"
  },
  {
    "text": "we're testing and it is basically the",
    "start": "2651330",
    "end": "2657260"
  },
  {
    "text": "the jar that contains within it the this this class called agent runner right so",
    "start": "2657260",
    "end": "2663600"
  },
  {
    "text": "the agent runner is a J unit runner and this J unit runner is used to it is used",
    "start": "2663600",
    "end": "2675780"
  },
  {
    "text": "when constructing your test class to be able to to simulates the steps that I",
    "start": "2675780",
    "end": "2684690"
  },
  {
    "text": "had described earlier basically",
    "start": "2684690",
    "end": "2691800"
  },
  {
    "text": "yes so agent runner",
    "start": "2692780",
    "end": "2699039"
  },
  {
    "text": "is effectively all that you need for testing of your of your of your plugin",
    "start": "2700539",
    "end": "2706179"
  },
  {
    "text": "it does not have any of the instrumentation plugins this jar does not have any answer instrumentation plugins and within it and it also",
    "start": "2706179",
    "end": "2714849"
  },
  {
    "text": "supports the job agent VM arguments and the standalone execution okay let me",
    "start": "2714849",
    "end": "2724499"
  },
  {
    "text": "okay so this is the main usage",
    "start": "2725040",
    "end": "2732470"
  },
  {
    "text": "the special agents and effectively it's just an example of how to use with Java",
    "start": "2734150",
    "end": "2741390"
  },
  {
    "text": "agents via Marg or the dynamic attached",
    "start": "2741390",
    "end": "2746510"
  },
  {
    "text": "to be able to attach to a running application on the bottom here",
    "start": "2746510",
    "end": "2756160"
  },
  {
    "text": "okay so this is what I wanted to get to here so test usage and this is this is",
    "start": "2756160",
    "end": "2764080"
  },
  {
    "text": "actually some pretty cool stuff here because effectively what the agent",
    "start": "2764080",
    "end": "2770830"
  },
  {
    "text": "Runner is able to do is it is able to simulate these very obtuse conditions",
    "start": "2770830",
    "end": "2780700"
  },
  {
    "text": "with a detached class loader and",
    "start": "2780700",
    "end": "2787680"
  },
  {
    "text": "and allow a developer to test his installation plugin and OTA rules file",
    "start": "2789010",
    "end": "2795280"
  },
  {
    "text": "with these conditions okay so how do you how do you do that effectively you just followed regular je",
    "start": "2795280",
    "end": "2802240"
  },
  {
    "text": "units patterns vanilla J unit patterns it used to run with annotation you",
    "start": "2802240",
    "end": "2808690"
  },
  {
    "text": "create your test method with the test annotation you declare the mock tracer",
    "start": "2808690",
    "end": "2816670"
  },
  {
    "text": "as a as a parameter and and that's it",
    "start": "2816670",
    "end": "2824950"
  },
  {
    "text": "and BAE basically when you run this what happens is that's the test method",
    "start": "2824950",
    "end": "2834350"
  },
  {
    "text": "it is well first of all the the test run",
    "start": "2834930",
    "end": "2842700"
  },
  {
    "text": "time his is forked okay because it has to be forked for the for the Java agent",
    "start": "2842700",
    "end": "2852450"
  },
  {
    "text": "to to bind proper to effectively to statically bind and then it",
    "start": "2852450",
    "end": "2861230"
  },
  {
    "text": "elevates all of the code inside of the test method into a class loader that is",
    "start": "2861250",
    "end": "2867610"
  },
  {
    "text": "detached from system class loader and and that's it and then whatever whatever",
    "start": "2867610",
    "end": "2874720"
  },
  {
    "text": "OTA rules file that you have in in the in a class pass and whatever",
    "start": "2874720",
    "end": "2882540"
  },
  {
    "text": "instrumentation classes that it points to then then it just does its thing and",
    "start": "2882540",
    "end": "2889980"
  },
  {
    "text": "you have your reference to the tracer and you can check to see that that",
    "start": "2889980",
    "end": "2895870"
  },
  {
    "text": "things are properly working so effectively this this pattern the the",
    "start": "2895870",
    "end": "2902650"
  },
  {
    "text": "Java sorry the agent runner it is effectively a it supports full J unit",
    "start": "2902650",
    "end": "2912340"
  },
  {
    "text": "vanilla patterns and it runs in both the",
    "start": "2912340",
    "end": "2918610"
  },
  {
    "text": "Surefire plugin as well as IDs",
    "start": "2918610",
    "end": "2924750"
  },
  {
    "text": "and finally how do you include this this this test this agent runner in your",
    "start": "2927220",
    "end": "2933400"
  },
  {
    "text": "dependencies this is it it's basically the same dependency",
    "start": "2933400",
    "end": "2939720"
  },
  {
    "text": "artifact descriptor as you would you would use for a regular Special Agent",
    "start": "2939720",
    "end": "2945700"
  },
  {
    "text": "but you add the test jar as the type and and you're done so next steps one of the",
    "start": "2945700",
    "end": "2959760"
  },
  {
    "text": "more serious hurdles that we're trying to get past is the fact that many",
    "start": "2959760",
    "end": "2968700"
  },
  {
    "text": "instrumentation plugins use the inheritance pattern to instrument to",
    "start": "2968700",
    "end": "2976900"
  },
  {
    "text": "instruments third-party classes libraries in this pattern unfortunately",
    "start": "2976900",
    "end": "2983740"
  },
  {
    "text": "is very difficult to to implement with",
    "start": "2983740",
    "end": "2990150"
  },
  {
    "text": "with triggering with bite man because vitamin does not support triggering off",
    "start": "2990150",
    "end": "2995470"
  },
  {
    "text": "of new so this is something that we're",
    "start": "2995470",
    "end": "3001349"
  },
  {
    "text": "trying to still figure out number two",
    "start": "3001349",
    "end": "3007200"
  },
  {
    "text": "here is to add OD rules for all current Java installation plugins and finally to",
    "start": "3007200",
    "end": "3013589"
  },
  {
    "text": "support configuring instrumentation",
    "start": "3013589",
    "end": "3018770"
  },
  {
    "text": "here's the link for all of you guys that Ike will paste into",
    "start": "3020260",
    "end": "3026770"
  },
  {
    "text": "into the the chat",
    "start": "3027300",
    "end": "3031200"
  },
  {
    "text": "okay yeah any questions so the the main",
    "start": "3041490",
    "end": "3048850"
  },
  {
    "text": "interest here well I think there's like two things I'm interested in one is",
    "start": "3048850",
    "end": "3054660"
  },
  {
    "text": "support for different versions of Java including new versions of Java and the",
    "start": "3054660",
    "end": "3062710"
  },
  {
    "text": "other is you know the emphasis on on on",
    "start": "3062710",
    "end": "3069510"
  },
  {
    "text": "testing is due to that the trickiness around writing these bite man rules file",
    "start": "3069510",
    "end": "3075090"
  },
  {
    "text": "rule files basically",
    "start": "3075090",
    "end": "3079290"
  },
  {
    "text": "um yes just gonna say I mean it looks like a big improvement on the testing",
    "start": "3084660",
    "end": "3090640"
  },
  {
    "text": "from the current agent and also the class loading issue if I understand it",
    "start": "3090640",
    "end": "3096400"
  },
  {
    "text": "correctly seems seems like you know could solve a problem that was with the the current Java agent but I'm just",
    "start": "3096400",
    "end": "3102880"
  },
  {
    "text": "wondering I mean in terms of from a project perspective I'm not sure it's a",
    "start": "3102880",
    "end": "3108700"
  },
  {
    "text": "good idea having like the existing Java agent and this special agent so I mean",
    "start": "3108700",
    "end": "3114730"
  },
  {
    "text": "do is it would it be better to collapse them into one project or you know",
    "start": "3114730",
    "end": "3121480"
  },
  {
    "text": "deprecated the existing one when when it end was this that you know the instrumentation rules that the current",
    "start": "3121480",
    "end": "3127030"
  },
  {
    "text": "one handled yeah Gary I we didn't want to touch the we when we",
    "start": "3127030",
    "end": "3135400"
  },
  {
    "text": "were experimenting and rewriting this you know it was different enough in this current agent that we felt it would be",
    "start": "3135400",
    "end": "3142900"
  },
  {
    "text": "better to kind of get farther along and then make a proposal rather than kind of",
    "start": "3142900",
    "end": "3147970"
  },
  {
    "text": "mutating that codebase in case other people were were using it I'm not sure",
    "start": "3147970",
    "end": "3154690"
  },
  {
    "text": "what the current usage for the current Java agent is but yeah I agree if if",
    "start": "3154690",
    "end": "3159940"
  },
  {
    "text": "y'all think this is a an interesting approach and improvement upon the existing ones and yeah we should we",
    "start": "3159940",
    "end": "3167260"
  },
  {
    "text": "should merge them yeah I think it's better at least to have some indication",
    "start": "3167260",
    "end": "3172420"
  },
  {
    "text": "of what's gonna happen and I mean do anything is had look on the special agents or readme and it was saying one",
    "start": "3172420",
    "end": "3180880"
  },
  {
    "text": "of the non goals was supporting custom rules which is something that the current agent does support it's just the",
    "start": "3180880",
    "end": "3189069"
  },
  {
    "text": "you know if you do somebody's instrumenting their services Matt you know currently with the the other",
    "start": "3189069",
    "end": "3194760"
  },
  {
    "text": "instrumentations in in OTT contrib they can you know use those existing",
    "start": "3194760",
    "end": "3201400"
  },
  {
    "text": "instrumentation but they can also get hold of the trace or enact their own spans so I don't think it's any",
    "start": "3201400",
    "end": "3206950"
  },
  {
    "text": "different when you have you have rules or automatically installing the instrumentations I think you will still",
    "start": "3206950",
    "end": "3212859"
  },
  {
    "text": "want to be able you know add their own custom rules very logic this is so if I can show up in a",
    "start": "3212859",
    "end": "3219350"
  },
  {
    "text": "really quick the the trick with special",
    "start": "3219350",
    "end": "3224600"
  },
  {
    "text": "agent is to be able to to dynamically",
    "start": "3224600",
    "end": "3231010"
  },
  {
    "text": "inject classes of the instrumentation plugging",
    "start": "3231010",
    "end": "3238420"
  },
  {
    "text": "directly into the class loader right now the way that it is designed it requires",
    "start": "3238420",
    "end": "3245950"
  },
  {
    "text": "these classes to to be prepackaged inside of the special agent",
    "start": "3245950",
    "end": "3254090"
  },
  {
    "text": "right so this this is not the way that Java agent operates Java agents requires",
    "start": "3254090",
    "end": "3263120"
  },
  {
    "text": "the plug-in to be just added to the",
    "start": "3263120",
    "end": "3268430"
  },
  {
    "text": "class path of the",
    "start": "3268430",
    "end": "3272470"
  },
  {
    "text": "application for static attach but if the customer rules are only instrumenting",
    "start": "3275160",
    "end": "3280800"
  },
  {
    "text": "the application zone code then it doesn't need any additional classes to be packaged in the agent well the the",
    "start": "3280800",
    "end": "3289320"
  },
  {
    "text": "the actual instrumentation implementation right",
    "start": "3289320",
    "end": "3294530"
  },
  {
    "text": "the actual plugin yes Gary I think what's the reason why it was an on goal",
    "start": "3294950",
    "end": "3303440"
  },
  {
    "text": "for this project is not that that's not interesting but it seems like there's a variety of there's being able to safely",
    "start": "3303440",
    "end": "3311630"
  },
  {
    "text": "install plugins that are targeting you",
    "start": "3311630",
    "end": "3316670"
  },
  {
    "text": "know third-party software which has a lot of its own trickiness around making sure you're targeting the right version",
    "start": "3316670",
    "end": "3322670"
  },
  {
    "text": "for example some of the interesting edge cases here are like you know you might have instrumentation for multiple",
    "start": "3322670",
    "end": "3329390"
  },
  {
    "text": "versions of JDBC or something they're slightly different you want to make sure you're installing the right one so",
    "start": "3329390",
    "end": "3335930"
  },
  {
    "text": "safety is an important issue and then when it comes to kind of dynamically",
    "start": "3335930",
    "end": "3341480"
  },
  {
    "text": "instrumenting application code it just seems like the techniques you might use",
    "start": "3341480",
    "end": "3346579"
  },
  {
    "text": "for doing that are a bit different and so it seemed like you could use this for",
    "start": "3346579",
    "end": "3353210"
  },
  {
    "text": "installing you know pre-existing instrumentation for pre-existing",
    "start": "3353210",
    "end": "3360099"
  },
  {
    "text": "libraries and potentially be using different additional techniques if you",
    "start": "3360099",
    "end": "3366079"
  },
  {
    "text": "were looking to kind of target your application code or do something dynamic",
    "start": "3366079",
    "end": "3371329"
  },
  {
    "text": "there since there's like a couple different approaches people seem to potentially want for instrumenting their",
    "start": "3371329",
    "end": "3377930"
  },
  {
    "text": "application code one is something similar to these sort of writing Batman",
    "start": "3377930",
    "end": "3383630"
  },
  {
    "text": "rules where you just don't want to modify the source code but you do know ahead of time what you'd like to target",
    "start": "3383630",
    "end": "3390490"
  },
  {
    "text": "and then there's sort of other approaches around you know well the application is running just give me some",
    "start": "3390490",
    "end": "3396799"
  },
  {
    "text": "insights around different things that it's doing so it just seemed like the",
    "start": "3396799",
    "end": "3402049"
  },
  {
    "text": "approach to that would be like additional work you do on top of that and potentially you might want them all",
    "start": "3402049",
    "end": "3409009"
  },
  {
    "text": "a cart as well since the well I'm not",
    "start": "3409009",
    "end": "3415910"
  },
  {
    "text": "sure if there's extra safety issues there but it just seemed like things that could be done all a cart potentially so is that that's the only",
    "start": "3415910",
    "end": "3422390"
  },
  {
    "text": "reason why we put that that sort of limited scope there but",
    "start": "3422390",
    "end": "3428210"
  },
  {
    "text": "but I could be wrong it might be rather similar so Gary actually I totally get what you were saying and actually this",
    "start": "3428210",
    "end": "3438589"
  },
  {
    "text": "is already implemented in in the in the test version and the test in in the",
    "start": "3438589",
    "end": "3446330"
  },
  {
    "text": "agent Runner the way that the agent runner works is it does not have any",
    "start": "3446330",
    "end": "3453470"
  },
  {
    "text": "prepackaged plugins inside of it but it is still able to do the instrumentation",
    "start": "3453470",
    "end": "3461030"
  },
  {
    "text": "with white men executing the rules but for the specific plugin that you are",
    "start": "3461030",
    "end": "3466400"
  },
  {
    "text": "testing and so effectively this is exactly the use case that you're talking about but not for for testing you're",
    "start": "3466400",
    "end": "3472400"
  },
  {
    "text": "talking about actually using it for instrumenting an application with custom",
    "start": "3472400",
    "end": "3478900"
  },
  {
    "text": "OTA rules found so it's it's not far off at all",
    "start": "3478900",
    "end": "3484010"
  },
  {
    "text": "I I mean I just feel like some code would have to be moved into the main",
    "start": "3484010",
    "end": "3490690"
  },
  {
    "text": "from test to main and that's it okay and",
    "start": "3490690",
    "end": "3497540"
  },
  {
    "text": "yeah I mean it's just I think it'd be good to remove the you know as an on go possibly just just to make sure it's",
    "start": "3497540",
    "end": "3503450"
  },
  {
    "text": "doesn't sound misleading that that's not intended as you know a potential future benefit but ya know that's for right now",
    "start": "3503450",
    "end": "3515089"
  },
  {
    "text": "the big blocker really is byte meant not supporting new which sounds like",
    "start": "3515089",
    "end": "3520940"
  },
  {
    "text": "something they're interested in supporting so I think a concrete next step is to work with with that group to",
    "start": "3520940",
    "end": "3527359"
  },
  {
    "text": "see if we can get that over the finish line because that will extend the reach of this to include like most most of the",
    "start": "3527359",
    "end": "3536839"
  },
  {
    "text": "plugins we're looking at and ot so yeah if you're interested in Java",
    "start": "3536839",
    "end": "3545720"
  },
  {
    "text": "agents and Java instrumentation in this manner what I think is interesting about",
    "start": "3545720",
    "end": "3550820"
  },
  {
    "text": "it though is that you're tracing system there's a PMS out there that do these kinds of things but if you're using a",
    "start": "3550820",
    "end": "3556550"
  },
  {
    "text": "tracing system with open tracing it doesn't necessarily need to be doing",
    "start": "3556550",
    "end": "3562520"
  },
  {
    "text": "this style of stuff so you can be taking Jaeger or something like that and then using this to install things on",
    "start": "3562520",
    "end": "3568940"
  },
  {
    "text": "top of open tracing and I don't know I found that to be a little little novel",
    "start": "3568940",
    "end": "3573950"
  },
  {
    "text": "compared to having the the tracer you were stalling under open tracing also be",
    "start": "3573950",
    "end": "3579080"
  },
  {
    "text": "doing a bunch of these things kind of behind the scenes which is how a lot of existing APM's work so if you're",
    "start": "3579080",
    "end": "3585710"
  },
  {
    "text": "interested in in playing around with a bite man and dynamic code injection",
    "start": "3585710",
    "end": "3591140"
  },
  {
    "text": "please check the project out for getting to that stage where it'd be fun to to have users and other people playing with",
    "start": "3591140",
    "end": "3597380"
  },
  {
    "text": "it and on that note we're over time it's",
    "start": "3597380",
    "end": "3603560"
  },
  {
    "text": "a 935 if people have any final questions",
    "start": "3603560",
    "end": "3608720"
  },
  {
    "text": "on this I suggest maybe going to get er",
    "start": "3608720",
    "end": "3614180"
  },
  {
    "text": "the open tracing public Channel and continuing the discussion there and in",
    "start": "3614180",
    "end": "3622100"
  },
  {
    "text": "the meantime it's been lovely seeing all of your faces and I'll see you again next month yeah and thank you again for",
    "start": "3622100",
    "end": "3630650"
  },
  {
    "text": "your honors for your service Mac talk yeah thanks for honest thanks Sarah thank you guys cheers Cheers",
    "start": "3630650",
    "end": "3640390"
  }
]