[
  {
    "start": "0",
    "end": "76000"
  },
  {
    "text": "all right that's two minutes so we're going to get cracking uh welcome everybody to this the seventh I think",
    "start": "280",
    "end": "6440"
  },
  {
    "text": "cncf webinar could be sixth could be seventh I didn't count uh today we've got John bamar who's going to be giving",
    "start": "6440",
    "end": "12040"
  },
  {
    "text": "us an introduction to core DNS um in case you haven't been in one of these webinars before um we encourage you to",
    "start": "12040",
    "end": "20359"
  },
  {
    "text": "ask questions throughout the presentation um but you are not able to",
    "start": "20359",
    "end": "25480"
  },
  {
    "text": "speak so please put your questions into either the Q&A or the chat box down at the bottom and I will find opportune",
    "start": "25480",
    "end": "32398"
  },
  {
    "text": "moments to interrupt John and ask him those questions uh I see that it's filling up now so I think we're just",
    "start": "32399",
    "end": "38600"
  },
  {
    "text": "gonna go ahead and get started John are you ready yes I am excellent take it away okay great well hell hello everyone",
    "start": "38600",
    "end": "46960"
  },
  {
    "text": "and uh thank you for attending today um I'm John bck uh I'm a maintainer of",
    "start": "46960",
    "end": "52199"
  },
  {
    "text": "cordan s I work for infol blocks um and I'm going to talk to you today uh about",
    "start": "52199",
    "end": "58640"
  },
  {
    "text": "cordian uh giving introduction as to what it is and some of the interesting more unique features as well as then uh",
    "start": "58640",
    "end": "65640"
  },
  {
    "text": "go into a demo of bringing cor DNS up in a um as DM cluster DNS in a in a",
    "start": "65640",
    "end": "73119"
  },
  {
    "text": "kubernetes cluster so to start that what is CNS CNS",
    "start": "73119",
    "end": "80400"
  },
  {
    "start": "76000",
    "end": "162000"
  },
  {
    "text": "is a a cloud native authoritative DNS server uh it's essentially the successor",
    "start": "80400",
    "end": "86200"
  },
  {
    "text": "to Sky DNS 2 for dynamic dns-based service discovery um it's it's intended to be a better Sky",
    "start": "86200",
    "end": "93759"
  },
  {
    "text": "DNS than Sky DNS uh in fact it's it was started uh by the same author of skyns",
    "start": "93759",
    "end": "99479"
  },
  {
    "text": "which is Meek Gibbon from Google uh he also still leads the project and um we have a number of people from INF blocks",
    "start": "99479",
    "end": "105200"
  },
  {
    "text": "as well as other people in the community involved as well uh the really key thing",
    "start": "105200",
    "end": "111159"
  },
  {
    "text": "about cordan is this uh is an has an extensible middleware very flexible uh",
    "start": "111159",
    "end": "118759"
  },
  {
    "text": "request pipeline so becomes very easy to add additional functionality to it and we'll talk more about that in a bit we",
    "start": "118759",
    "end": "125799"
  },
  {
    "text": "are an Inception project with the cncf we joined in uh in March and um we've",
    "start": "125799",
    "end": "131599"
  },
  {
    "text": "been you know really grateful to the cncf for giving us opportunities like this to talk to you as well as uh time",
    "start": "131599",
    "end": "138360"
  },
  {
    "text": "at conferences as well and access to um to some CI resources and in fact uh",
    "start": "138360",
    "end": "144360"
  },
  {
    "text": "Linux Foundation which of which cncf is a part uh redesigned our logo for us uh",
    "start": "144360",
    "end": "149640"
  },
  {
    "text": "and is helping us with work on our website so we're we're really happy with our uh our uh sponsorship by cncf and uh",
    "start": "149640",
    "end": "159239"
  },
  {
    "text": "want to see that continue so why did uh why did Meek",
    "start": "159239",
    "end": "166280"
  },
  {
    "start": "162000",
    "end": "302000"
  },
  {
    "text": "create and why do we um support CNS uh in in this community um as I said it's",
    "start": "166280",
    "end": "173040"
  },
  {
    "text": "really intended to be a better Sky DNS than Sky DNS Sky DNS started as something to allow this Dynamic service",
    "start": "173040",
    "end": "179599"
  },
  {
    "text": "to Discovery backed by ETD but that's really still a very narrow narrow use",
    "start": "179599",
    "end": "185400"
  },
  {
    "text": "case and what we wanted to do was uh create a DNS server that could be used for ordinary DNS as well as for service",
    "start": "185400",
    "end": "193480"
  },
  {
    "text": "Discovery and would um allow us to back it by different things and have different kinds of of uh manipulations",
    "start": "193480",
    "end": "202120"
  },
  {
    "text": "of the request as it goes through so it's designed from the start actually based upon the caddy web server we use",
    "start": "202120",
    "end": "209120"
  },
  {
    "text": "some of their libr Aries internally um that and that that web server that Ser",
    "start": "209120",
    "end": "214840"
  },
  {
    "text": "is really now more of a generic server infrastructure and it it allows the creation of these middleware and the configuration of these middleware um",
    "start": "214840",
    "end": "223400"
  },
  {
    "text": "so this has enabled us to create a lot of unique features that um that would",
    "start": "223400",
    "end": "228480"
  },
  {
    "text": "have been more difficult to add to something like Sky DNS um in particular we've added",
    "start": "228480",
    "end": "234200"
  },
  {
    "text": "functionality where we can uh encrypt DNS over TLS which is pretty standard",
    "start": "234200",
    "end": "239959"
  },
  {
    "text": "but then we've also our out of our own invention have integrated with grpc so we can actually essentially tunnel DNS",
    "start": "239959",
    "end": "247360"
  },
  {
    "text": "through grpc over a TLS connection which is more secure um we are working on",
    "start": "247360",
    "end": "253439"
  },
  {
    "text": "integrating with some external uh policy servers uh and of course uh we'll talk",
    "start": "253439",
    "end": "258680"
  },
  {
    "text": "more about later here is we uh have integrated directly with kubernetes um",
    "start": "258680",
    "end": "264360"
  },
  {
    "text": "to be the in cluster DNS so essentially here what we're doing is showing how you",
    "start": "264360",
    "end": "269479"
  },
  {
    "text": "can use the the traditional U mechanism we used in Sky DNS with ETD or you can",
    "start": "269479",
    "end": "276800"
  },
  {
    "text": "alternately uh directly talk to the kubernetes API and in fact you can do this both at the same time for different",
    "start": "276800",
    "end": "283680"
  },
  {
    "text": "zones and and sort of make uh a more flexible um uh configuration that way uh",
    "start": "283680",
    "end": "290479"
  },
  {
    "text": "in addition to the the the use in Cloud native Stacks it is a full-fledged",
    "start": "290479",
    "end": "295639"
  },
  {
    "text": "authoritative DNS server that supports all kinds of other traditional DNS use",
    "start": "295639",
    "end": "302320"
  },
  {
    "start": "302000",
    "end": "377000"
  },
  {
    "text": "cases so I mentioned the architecture and how that's really one of the key features of CNS this is a diagram",
    "start": "302440",
    "end": "310240"
  },
  {
    "text": "showing how the requests are processed when they come into uh",
    "start": "310240",
    "end": "315759"
  },
  {
    "text": "cords so this the essential um you know the",
    "start": "315759",
    "end": "322960"
  },
  {
    "text": "essential Insight here is to have all of the features contained within these independent middleware so the middleware",
    "start": "322960",
    "end": "328080"
  },
  {
    "text": "can be chained in different ways for different zones um in this example here",
    "start": "328080",
    "end": "334039"
  },
  {
    "text": "which comes out of one of our blogs you can see the um a DNS query coming in on the standard Port will go to two",
    "start": "334039",
    "end": "341280"
  },
  {
    "text": "different processing pipelines or three different processing pipelines based upon whether it's example. example.net",
    "start": "341280",
    "end": "347479"
  },
  {
    "text": "or anything else and we can pass uh",
    "start": "347479",
    "end": "352840"
  },
  {
    "text": "these different different requests through these different middleware to resolve them differently um in the case",
    "start": "352840",
    "end": "359520"
  },
  {
    "text": "of so example. we'll we'll pull it from a file but we'll log it example.net we",
    "start": "359520",
    "end": "364800"
  },
  {
    "text": "don't bother logging it and for everything else we actually run it through kubernetes because maybe this is in cluster and we want to we want to see",
    "start": "364800",
    "end": "371280"
  },
  {
    "text": "that uh resolve the in cluster DNS",
    "start": "371280",
    "end": "375720"
  },
  {
    "text": "names so what are some of these middleware that we're talking about um like I said there's there's two",
    "start": "376840",
    "end": "384000"
  },
  {
    "start": "377000",
    "end": "506000"
  },
  {
    "text": "different essentially categories of of middleware there's what we call request manipulators and backends backends um",
    "start": "384000",
    "end": "391680"
  },
  {
    "text": "enable you to Source data from different types of uh repositories so the most",
    "start": "391680",
    "end": "399639"
  },
  {
    "text": "typical one of course file ordinary Zone file uh same as you would have used with bind uh or could still use with bind um",
    "start": "399639",
    "end": "407599"
  },
  {
    "text": "we have another one Auto which works really well in combination with gits sync where essentially you have a",
    "start": "407599",
    "end": "413039"
  },
  {
    "text": "directory that we Monitor and whenever you uh you know you make a DNS record",
    "start": "413039",
    "end": "418400"
  },
  {
    "text": "change you can commit it to to GitHub and gsync will automatically pull it down populate that directory and we'll",
    "start": "418400",
    "end": "424120"
  },
  {
    "text": "begin serving that DNS um so these are some of the kinds of back ends of course the ETD and kubernetes and a number of",
    "start": "424120",
    "end": "430240"
  },
  {
    "text": "other ones as they uh as as needed by the community on the request manipulation side this is where things",
    "start": "430240",
    "end": "436520"
  },
  {
    "text": "get really interesting um you know we've got a lot of standard DNS features",
    "start": "436520",
    "end": "441560"
  },
  {
    "text": "things like caching both positive and negative caching uh we support DNS SEC",
    "start": "441560",
    "end": "447400"
  },
  {
    "text": "um but we've also built in some functionality that's really geared for",
    "start": "447400",
    "end": "454160"
  },
  {
    "text": "uh Cloud native environments so uh distributed tracing which uh enables us to trace when we have all this the these",
    "start": "454160",
    "end": "461400"
  },
  {
    "text": "different kinds of middleware um the DNS processing can become a little more complicated so this allows us to",
    "start": "461400",
    "end": "467360"
  },
  {
    "text": "actually trace the DNS requests throughout our uh um set of applications",
    "start": "467360",
    "end": "472840"
  },
  {
    "text": "and you'll see one in a slide later where we where we make use of this um",
    "start": "472840",
    "end": "478680"
  },
  {
    "text": "the the integration with Prometheus for running in a kubernetes environment or other Cloud native environment we have",
    "start": "478680",
    "end": "485000"
  },
  {
    "text": "we have that uh the health check and um you know the the some of this proxying",
    "start": "485000",
    "end": "492879"
  },
  {
    "text": "um which allows us to serve uh serve data from different different zones and",
    "start": "492879",
    "end": "498639"
  },
  {
    "text": "then send uh unknown things out to a different different",
    "start": "498639",
    "end": "503720"
  },
  {
    "start": "506000",
    "end": "683000"
  },
  {
    "text": "server I mentioned external policy engin so this is a a use case where we take",
    "start": "506879",
    "end": "512919"
  },
  {
    "text": "advantage of all this middleware this is an info block SAS offering and uh today",
    "start": "512919",
    "end": "519120"
  },
  {
    "text": "the way we do this is um we have a specialized Unbound server what what the",
    "start": "519120",
    "end": "524440"
  },
  {
    "text": "the functionality is is essentially blocking queries that are say command and control domains for uh botnets or",
    "start": "524440",
    "end": "531959"
  },
  {
    "text": "something so uh a customer in a branch office on Prem makes a DNS request that",
    "start": "531959",
    "end": "537760"
  },
  {
    "text": "goes out to our cloud where we determine whether or not it's uh a bad domain if",
    "start": "537760",
    "end": "543120"
  },
  {
    "text": "it's a bad domain we refuse or redirect now if it's a good domain we simply resolve it today's solution we're",
    "start": "543120",
    "end": "551200"
  },
  {
    "text": "we're we're we've been investing in CNS partly because we want to we want to partly because we want to do it in this",
    "start": "551200",
    "end": "556760"
  },
  {
    "text": "in this SAS offering and um so we're looking over the next couple months to to roll that out using DNS CNS but",
    "start": "556760",
    "end": "564440"
  },
  {
    "text": "here's where we we use some of these really interesting middleware um the",
    "start": "564440",
    "end": "570560"
  },
  {
    "text": "in the current system we use Unbound with something called response policy zones which are are great but are very",
    "start": "570560",
    "end": "577120"
  },
  {
    "text": "take a lot of memory and whenever any of these policies change which can happen every few minutes it requires Unbound to",
    "start": "577120",
    "end": "583240"
  },
  {
    "text": "reload uh all of those response policy zones which may take a minute or two so",
    "start": "583240",
    "end": "588279"
  },
  {
    "text": "instead we're going to scrap all that we take an open source policy engine called Themis that that we're building but we",
    "start": "588279",
    "end": "594560"
  },
  {
    "text": "can also use something like open policy agent which is another open source policy engine um but we we have core DNS",
    "start": "594560",
    "end": "602040"
  },
  {
    "text": "on Prem it talks uh to the client the client talks to it using ordinary DNS",
    "start": "602040",
    "end": "608320"
  },
  {
    "text": "and then it takes that wraps it up in TLS using our grpc proxy sends that up",
    "start": "608320",
    "end": "614360"
  },
  {
    "text": "to a cord DNS in the cloud um actually I skipped a step there the on Prem also",
    "start": "614360",
    "end": "620360"
  },
  {
    "text": "appends certain data to the request uh that identifies the site and the",
    "start": "620360",
    "end": "626040"
  },
  {
    "text": "customer and then the cloud cords knows how to unpack the grpc request it",
    "start": "626040",
    "end": "632800"
  },
  {
    "text": "extracts that extra data that was appended sends it along with the query name and the uh Source IP things like",
    "start": "632800",
    "end": "640959"
  },
  {
    "text": "that to the policy engine which can then make the decisions uh and that point CNS",
    "start": "640959",
    "end": "647079"
  },
  {
    "text": "policy middleware will decide whether or not to pass this on Upstream to the recursive resolver or to deny or refuse",
    "start": "647079",
    "end": "655079"
  },
  {
    "text": "or or redirect the request so by doing this with CNS what we've done is we've",
    "start": "655079",
    "end": "661399"
  },
  {
    "text": "um eliminated the need to reload uh We've we've enabled us to use a stock",
    "start": "661399",
    "end": "666959"
  },
  {
    "text": "Unbound instead of a specialized one that supports rpz and",
    "start": "666959",
    "end": "672279"
  },
  {
    "text": "um we allow more arbitrary policies that can be implemented in this external policy engine uh in a way that that we",
    "start": "672279",
    "end": "679200"
  },
  {
    "text": "couldn't do before uh another of course place where",
    "start": "679200",
    "end": "686720"
  },
  {
    "start": "683000",
    "end": "925000"
  },
  {
    "text": "we use uh cordan is kubernetes and that's actually mostly what I want to talk about today um cords we've spent um",
    "start": "686720",
    "end": "694839"
  },
  {
    "text": "the last uh few months building out the kubernetes integration the kubernetes",
    "start": "694839",
    "end": "699920"
  },
  {
    "text": "middleware so that it can be a dropin replacement for the existing Cube",
    "start": "699920",
    "end": "705920"
  },
  {
    "text": "DNS so why would we do that well we see a number of issues with the existing",
    "start": "705920",
    "end": "711079"
  },
  {
    "text": "Cube DNS one is uh the lack of flexibility uh it's more difficult to um",
    "start": "711079",
    "end": "718440"
  },
  {
    "text": "you don't have access to to all these same DNS features that are already there in core DNS uh because CP DNS is sort of",
    "start": "718440",
    "end": "724839"
  },
  {
    "text": "specialized for U specialized only for kubernetes um",
    "start": "724839",
    "end": "732200"
  },
  {
    "text": "cordan s also has a lot of the things built in that Cube DNS today needs to",
    "start": "732200",
    "end": "739560"
  },
  {
    "text": "run extra sidecar processes for so um we have a single process single executable",
    "start": "739560",
    "end": "745920"
  },
  {
    "text": "that runs that handles Health that handles caching that hand the kubernetes integration so there's there's not um",
    "start": "745920",
    "end": "752240"
  },
  {
    "text": "three different pieces running all at the same time which is what you have in in cdns we also saw some issues in in",
    "start": "752240",
    "end": "759000"
  },
  {
    "text": "Cub some some things that it did um that weren't ideal so for example uh one of",
    "start": "759000",
    "end": "765320"
  },
  {
    "text": "the issues is that that pod IP lookups are uh simply an echoback of whatever",
    "start": "765320",
    "end": "770760"
  },
  {
    "text": "you send um which the intent of that feature pod IP lookups is for wild card certificates but by echoing back",
    "start": "770760",
    "end": "777800"
  },
  {
    "text": "anything that they send your kind of breaking the the trust of the the the certificate the purpose of Val",
    "start": "777800",
    "end": "784079"
  },
  {
    "text": "validating identity I I'll show that a little bit later and we've made it a lot easier with those existing features um",
    "start": "784079",
    "end": "792160"
  },
  {
    "text": "that that exist within CNS to do customized uh DNS entries within um",
    "start": "792160",
    "end": "798440"
  },
  {
    "text": "within your kubernetes environment uh also in kubernetes um",
    "start": "798440",
    "end": "803680"
  },
  {
    "text": "actually not done by our our uh core team here it's actually done by by by by",
    "start": "803680",
    "end": "809680"
  },
  {
    "text": "which I mean the meek and me and a few other people that are the core team on cordan S um but actually done by another",
    "start": "809680",
    "end": "817560"
  },
  {
    "text": "uh set of Open Source developers who are really at this point users of of um",
    "start": "817560",
    "end": "822720"
  },
  {
    "text": "cordan s it's it's not so much a uh change to CNS but it is a use of CNS is",
    "start": "822720",
    "end": "828880"
  },
  {
    "text": "uh we are a the only really on-prem alternative for a Federated DNS provider",
    "start": "828880",
    "end": "835000"
  },
  {
    "text": "within the CNS within the kubernetes Federation so in kubernetes Federation",
    "start": "835000",
    "end": "840120"
  },
  {
    "text": "there's a the control plane will configure DNS entries to help the",
    "start": "840120",
    "end": "846000"
  },
  {
    "text": "different clusters find each other essentially and um today uh that's",
    "start": "846000",
    "end": "852639"
  },
  {
    "text": "generally done with Cloud um DNS providers like Route 53 or Google Google",
    "start": "852639",
    "end": "858399"
  },
  {
    "text": "Cloud DNS or I think Azure was just recently added uh but for on-prem DNS uh",
    "start": "858399",
    "end": "864519"
  },
  {
    "text": "Services where you're not using a cloud service um you'll use C DNS as that",
    "start": "864519",
    "end": "869680"
  },
  {
    "text": "provider so this is actually a completely distinct use of CNS within",
    "start": "869680",
    "end": "874759"
  },
  {
    "text": "the kubernetes ecosystem that's uh it's not in cluster DNS it's it's completely",
    "start": "874759",
    "end": "880480"
  },
  {
    "text": "different um we have also heard from some companies about uh the need for",
    "start": "880480",
    "end": "887759"
  },
  {
    "text": "doing Federated DNS meaning multicluster DNS um without necessarily running the",
    "start": "887759",
    "end": "895720"
  },
  {
    "text": "Federation control plane and so we're looking at Solutions and we have a proposal um that we're reviewing with",
    "start": "895720",
    "end": "902639"
  },
  {
    "text": "the community on how to um do Federated DNS with or without the control plane by",
    "start": "902639",
    "end": "911000"
  },
  {
    "text": "using core DNS instances in each cluster that communicate with one another so that's something we're looking",
    "start": "911000",
    "end": "918040"
  },
  {
    "text": "at um I want to drill more into the kubernetes piece so um I'm G actually",
    "start": "918040",
    "end": "923120"
  },
  {
    "text": "show a demo here what we have here is uh I've got a",
    "start": "923120",
    "end": "928720"
  },
  {
    "start": "925000",
    "end": "1043000"
  },
  {
    "text": "min Cube that I started up uh on my laptop it's running the standard Cube",
    "start": "928720",
    "end": "933800"
  },
  {
    "text": "DNS here and I just want to show how it works how you replace the standard Cube",
    "start": "933800",
    "end": "939160"
  },
  {
    "text": "DNS with core DNS so we have a GitHub repository uh in",
    "start": "939160",
    "end": "944560"
  },
  {
    "text": "our CNS organization called deployment and it's got um it's got some directory",
    "start": "944560",
    "end": "950759"
  },
  {
    "text": "saying okay here's how you deploy system D CNS in system D here's how you depl",
    "start": "950759",
    "end": "956319"
  },
  {
    "text": "deploy it in kubernetes and so what we've done is tried to make it as easy as possible by creating um some scripts",
    "start": "956319",
    "end": "964440"
  },
  {
    "text": "to help set up the configuration um",
    "start": "964440",
    "end": "969720"
  },
  {
    "text": "so what we do is we run this deploy script it will generate a uh a complete",
    "start": "969720",
    "end": "976560"
  },
  {
    "text": "deployment for CNS the um the service the deployment uh a config map and",
    "start": "976560",
    "end": "984959"
  },
  {
    "text": "um I'll show you that now what we give it is the the service CER that's so that",
    "start": "984959",
    "end": "992839"
  },
  {
    "text": "we can do reverse lookups on services and our cluster",
    "start": "992839",
    "end": "998759"
  },
  {
    "text": "domain and the base file to use in in kubernetes 1.6 we have ro-based access",
    "start": "998759",
    "end": "1006480"
  },
  {
    "text": "control and so uh we need to have a little bit different file than we had previously for older versions of",
    "start": "1006480",
    "end": "1014040"
  },
  {
    "text": "kubernetes um okay all that does is spit out this file",
    "start": "1014040",
    "end": "1020600"
  },
  {
    "text": "here um I'll talk about that a little bit so within in order to get cords",
    "start": "1020600",
    "end": "1026360"
  },
  {
    "text": "running in cluster it needs access to certain resources in the cluster via the the kubernetes API so we need to set up",
    "start": "1026360",
    "end": "1033199"
  },
  {
    "text": "a service account this is the role-based access control I was talking about that has access to um to those resources so",
    "start": "1033199",
    "end": "1040400"
  },
  {
    "text": "that's what the the first few resources do then we set up a config map which",
    "start": "1040400",
    "end": "1047918"
  },
  {
    "start": "1043000",
    "end": "1194000"
  },
  {
    "text": "represents the um the configuration of of",
    "start": "1047919",
    "end": "1053760"
  },
  {
    "text": "CNS so in this config map we're we're going to catch catch errors and log them",
    "start": "1053760",
    "end": "1059840"
  },
  {
    "text": "we're going to log ordinary queries we want to support the kubernetes uh health",
    "start": "1059840",
    "end": "1065720"
  },
  {
    "text": "checks and um we're going to use the kubernetes middleware to handle cluster.",
    "start": "1065720",
    "end": "1073440"
  },
  {
    "text": "looc domain and we're going to do reverse lookups on this everything else",
    "start": "1073440",
    "end": "1078559"
  },
  {
    "text": "is just just set to the default uh of the kubernetes middleware uh in this",
    "start": "1078559",
    "end": "1084080"
  },
  {
    "text": "particular um example anything that doesn't match cluster. local will pass through here to",
    "start": "1084080",
    "end": "1091960"
  },
  {
    "text": "this proxy middleware which will use the um the name servers configured in the",
    "start": "1091960",
    "end": "1101120"
  },
  {
    "text": "cordan S pods Etc resolve. comom in order to um to do the Upstream lookups",
    "start": "1101120",
    "end": "1108960"
  },
  {
    "text": "and we're going to cach things for 30 seconds so this essentially more or less duplicates the",
    "start": "1108960",
    "end": "1115600"
  },
  {
    "text": "standard uh Cube DNS functionality you could also enable the Prometheus um",
    "start": "1115600",
    "end": "1121960"
  },
  {
    "text": "that's not enabled in this one but if you're running that you can enable that as well one thing we do that the in this",
    "start": "1121960",
    "end": "1130400"
  },
  {
    "text": "particular deployment file of course you can customize these and do whatever you want with them and we'll do that",
    "start": "1130400",
    "end": "1135640"
  },
  {
    "text": "actually for our demo but one thing we do is the the assumption that that this particular script makes is that um",
    "start": "1135640",
    "end": "1143480"
  },
  {
    "text": "you're replacing a uh an existing Cube DNS so the script actually looks up the",
    "start": "1143480",
    "end": "1149120"
  },
  {
    "text": "cube DNS cluster IP and sticks it in here and keeps the service name Cube DNS",
    "start": "1149120",
    "end": "1156720"
  },
  {
    "text": "and the reason we do that is that when we apply this manifest um if we keep the",
    "start": "1156720",
    "end": "1161880"
  },
  {
    "text": "cube DNS service name and cluster IP then there's no loss of DNS service",
    "start": "1161880",
    "end": "1167520"
  },
  {
    "text": "while the transition is is happening from C DNS to",
    "start": "1167520",
    "end": "1172520"
  },
  {
    "text": "cdns in our example here I do want to show some features that aren't enabled by",
    "start": "1175120",
    "end": "1180640"
  },
  {
    "text": "default so I do have a custom EML that basically took that file that was",
    "start": "1180640",
    "end": "1186880"
  },
  {
    "text": "generated and then added some customizations so I'll talk a little bit about what each of those are the um one example one thing I want",
    "start": "1186880",
    "end": "1196080"
  },
  {
    "start": "1194000",
    "end": "1249000"
  },
  {
    "text": "to show is how the um how we can use what's essentially",
    "start": "1196080",
    "end": "1202360"
  },
  {
    "text": "functionally equivalent to what's called a stub domain so if you've got your your cluster um",
    "start": "1202360",
    "end": "1209000"
  },
  {
    "text": "running uh and you want to be able to have your services access certain things within an internal domain and you you",
    "start": "1209000",
    "end": "1216360"
  },
  {
    "text": "want everything else that isn't within the cluster to get resolved Say by some public DNS server then this sort of",
    "start": "1216360",
    "end": "1223200"
  },
  {
    "text": "conditional forwarding um uh can be done in the in the latest version of qbds I believe they can it too um we offer",
    "start": "1223200",
    "end": "1230240"
  },
  {
    "text": "somewhat more flexible um configuration of that so you you have uh we specify",
    "start": "1230240",
    "end": "1237200"
  },
  {
    "text": "here a separate domain internal. cordio and I say that let's proxy that",
    "start": "1237200",
    "end": "1243600"
  },
  {
    "text": "through this particular DNS server whereas",
    "start": "1243600",
    "end": "1249080"
  },
  {
    "start": "1249000",
    "end": "1311000"
  },
  {
    "text": "um everything else is going to get proxied through whatever that is in the Etsy resolve.",
    "start": "1249080",
    "end": "1255400"
  },
  {
    "text": "comom additionally I'm going to serve up example .org directly from this CNS and",
    "start": "1255400",
    "end": "1261760"
  },
  {
    "text": "I've got a a file here in my my config map that shows example.org",
    "start": "1261760",
    "end": "1267640"
  },
  {
    "text": "and um and that's oh and I know this this here shows uh we want to be able to look",
    "start": "1270120",
    "end": "1276840"
  },
  {
    "text": "up the Pod IPS reverse reverse look up on pod IPS and I'm going to show you a feature",
    "start": "1276840",
    "end": "1283440"
  },
  {
    "text": "called pods verified which I mentioned earlier regarding the um the wild card",
    "start": "1283440",
    "end": "1289000"
  },
  {
    "text": "certificates and the way DNS works for that and uh lastly here I will show you",
    "start": "1289000",
    "end": "1295039"
  },
  {
    "text": "um how the rewrite works so that you can use the same certificate for example with uh the same domain name for your",
    "start": "1295039",
    "end": "1301720"
  },
  {
    "text": "services that are running inside the cluster and for external clients and still get your certificates validated",
    "start": "1301720",
    "end": "1310000"
  },
  {
    "text": "properly so um this is running mini Cube as I said",
    "start": "1310919",
    "end": "1316559"
  },
  {
    "start": "1311000",
    "end": "1405000"
  },
  {
    "text": "one of the things about mini Cube that's a little odd and actually this is on GK to is that it runs has something called",
    "start": "1316559",
    "end": "1322480"
  },
  {
    "text": "an add-on manager and the add-on manager will actually uh undo the changes we",
    "start": "1322480",
    "end": "1327760"
  },
  {
    "text": "make to certain services so I'm just going to turn off um the the oops Cube DN Cube DNS",
    "start": "1327760",
    "end": "1338120"
  },
  {
    "text": "add-ons otherwise when we replace the cube DNS service with our own configuration um uh the add-on manager",
    "start": "1338120",
    "end": "1345400"
  },
  {
    "text": "will come along later and and undo our changes so now I'm going",
    "start": "1345400",
    "end": "1352120"
  },
  {
    "text": "to I'm going to apply our custom core",
    "start": "1352200",
    "end": "1357240"
  },
  {
    "text": "DNS so that creates everything there and like like I you see I I'm still reusing",
    "start": "1357240",
    "end": "1362559"
  },
  {
    "text": "the same service",
    "start": "1362559",
    "end": "1365399"
  },
  {
    "text": "name and it's looks like it's running okay we have a CNS running and",
    "start": "1370159",
    "end": "1377360"
  },
  {
    "text": "the previous QB s is terminating because I turned off the add-on um in addition to uh running the",
    "start": "1377360",
    "end": "1385919"
  },
  {
    "text": "Cs here just so I can show a comparison I'm going to uh run a few other um a few",
    "start": "1385919",
    "end": "1392799"
  },
  {
    "text": "other things within this this service so I'm going to run the original um Cube DNS but uh but not",
    "start": "1392799",
    "end": "1401799"
  },
  {
    "text": "using that that service name um I am going to run a",
    "start": "1401799",
    "end": "1411360"
  },
  {
    "start": "1405000",
    "end": "1496000"
  },
  {
    "text": "um an internal DNS server to show how it works with with the internal so this is actually separate instance of CNS that",
    "start": "1411520",
    "end": "1418320"
  },
  {
    "text": "that internal domain will get will get that will be used to resolve that internal domain",
    "start": "1418320",
    "end": "1424720"
  },
  {
    "text": "um and I am going to run a fake",
    "start": "1424720",
    "end": "1430640"
  },
  {
    "text": "service which will which will we used in our rewrite all right so",
    "start": "1430640",
    "end": "1440440"
  },
  {
    "text": "let's take a look we'll watch the log of",
    "start": "1452760",
    "end": "1457240"
  },
  {
    "text": "CNS and um I'm going to run a little utility",
    "start": "1459000",
    "end": "1464679"
  },
  {
    "text": "here that just run the pod that's got a uh it's an Alpine based pod with some",
    "start": "1467080",
    "end": "1472919"
  },
  {
    "text": "basic DNS utilities curl and things like that as well as curl and things like that installed so I use this to kind of",
    "start": "1472919",
    "end": "1479159"
  },
  {
    "text": "kind of show the testing so um I guess the first and easiest thing to show is",
    "start": "1479159",
    "end": "1485200"
  },
  {
    "text": "that uh in fact you know it does work it does resolve cluster IPS this is our log",
    "start": "1485200",
    "end": "1491200"
  },
  {
    "text": "for CNS and we can see we've resolved that that cluster",
    "start": "1491200",
    "end": "1496960"
  },
  {
    "start": "1496000",
    "end": "1581000"
  },
  {
    "text": "IP um the other thing though is let's look at some of the more advanced use cases so we talked about the conditional",
    "start": "1496960",
    "end": "1504120"
  },
  {
    "text": "forwarding so let's run a um let's let's monitor the log of",
    "start": "1504120",
    "end": "1514159"
  },
  {
    "text": "um the internal DNS server so this is the the instance of cord DNS that I ran",
    "start": "1514159",
    "end": "1520360"
  },
  {
    "text": "to simulate some internal DNS server within your organization",
    "start": "1520360",
    "end": "1526799"
  },
  {
    "text": "oh maybe I ran it in the",
    "start": "1538200",
    "end": "1541158"
  },
  {
    "text": "default so this was saying CNS is running it's listening for this Zone on Port",
    "start": "1556240",
    "end": "1563279"
  },
  {
    "text": "53 so let's try and resolve something um from that",
    "start": "1563279",
    "end": "1568840"
  },
  {
    "text": "zone",
    "start": "1568840",
    "end": "1571840"
  },
  {
    "text": "like and that's so we see that it gets it gets the request rather um well",
    "start": "1575640",
    "end": "1583120"
  },
  {
    "start": "1581000",
    "end": "1701000"
  },
  {
    "text": "here's an interesting thing so the way kubernetes works uh each pod that gets",
    "start": "1583120",
    "end": "1588320"
  },
  {
    "text": "launched has um it's resolve. comom so if you're familiar with the way DNS works there's something called a search",
    "start": "1588320",
    "end": "1595240"
  },
  {
    "text": "path um or a search list and essentially when you send in a request that's got",
    "start": "1595240",
    "end": "1602080"
  },
  {
    "text": "fewer than a certain number of dots it will go through that search path so what",
    "start": "1602080",
    "end": "1607399"
  },
  {
    "text": "what happens and this is just standard DNS uh resolvers the way they work so you can see that what what actually gets",
    "start": "1607399",
    "end": "1614120"
  },
  {
    "text": "requested is this um set of",
    "start": "1614120",
    "end": "1619440"
  },
  {
    "text": "of uh this name which it it has cluster. local so initially the kubernetes",
    "start": "1619440",
    "end": "1625799"
  },
  {
    "text": "middleware will pick that up and it'll say oh well that's not a valid service name anywhere so I'm just G to return it",
    "start": "1625799",
    "end": "1632080"
  },
  {
    "text": "and then it sort of iterates through this this search path and this is a standard kubernetes standard kubernetes",
    "start": "1632080",
    "end": "1638000"
  },
  {
    "text": "Behavior finally it gets to um it gets to the",
    "start": "1638000",
    "end": "1643960"
  },
  {
    "text": "last one which is internal. cards.io which Returns the no error because it actually went through the",
    "start": "1643960",
    "end": "1650960"
  },
  {
    "text": "proxy and talked to this one and looked it",
    "start": "1650960",
    "end": "1655799"
  },
  {
    "text": "up now if we try a different uh CNS doio which isn't part",
    "start": "1659399",
    "end": "1667039"
  },
  {
    "text": "of internal then we're not going to hit that that um stub domain and instead",
    "start": "1667039",
    "end": "1672559"
  },
  {
    "text": "it's going to go out uh to the internet and resolve it",
    "start": "1672559",
    "end": "1678240"
  },
  {
    "text": "so that's what's happened",
    "start": "1678240",
    "end": "1681799"
  },
  {
    "text": "there one other thing we we showed maybe maybe I should show the file",
    "start": "1684120",
    "end": "1691039"
  },
  {
    "text": "again we we talked about the rewrite and essentially what this does is is",
    "start": "1699080",
    "end": "1706679"
  },
  {
    "start": "1701000",
    "end": "1871000"
  },
  {
    "text": "whenever a a query comes in for this specific domain um it's going to to change the",
    "start": "1706679",
    "end": "1714679"
  },
  {
    "text": "name internally in within CNS for the next for the rest of the middleware chain it's going to change it to this so",
    "start": "1714679",
    "end": "1722159"
  },
  {
    "text": "the idea here and why you might want to use this um in a kubernetes environment is if you have uh some service that's",
    "start": "1722159",
    "end": "1729799"
  },
  {
    "text": "running um TLS and uh externally that's known as um www. cords.",
    "start": "1729799",
    "end": "1739320"
  },
  {
    "text": "um that certificate that's being served up is signed from that domain name uh",
    "start": "1739320",
    "end": "1744720"
  },
  {
    "text": "for that domain name www. cords. so things that are outside your cluster can use that name and they can",
    "start": "1744720",
    "end": "1753000"
  },
  {
    "text": "resolve it in in the handshape works things inside your cluster they could use that name but it would actually hair",
    "start": "1753000",
    "end": "1759880"
  },
  {
    "text": "pin out so assuming you're running that service in your cluster it's going to Hairpin out and go back through the",
    "start": "1759880",
    "end": "1765360"
  },
  {
    "text": "through the outside world which you know isn't very efficient so rather than doing that it would be",
    "start": "1765360",
    "end": "1770399"
  },
  {
    "text": "nice to be able to um just use the internal service name the problem is that if you use the internal service",
    "start": "1770399",
    "end": "1776720"
  },
  {
    "text": "name the certificate isn't signed with that name and so you're going to get a a host name mismatch and you're gonna your",
    "start": "1776720",
    "end": "1783799"
  },
  {
    "text": "handshake gonna your TLS handshake is gonna fail so we can kind of trick the resolver here by taking in that C.O that",
    "start": "1783799",
    "end": "1793120"
  },
  {
    "text": "initial same as external name and just switching it internally to a",
    "start": "1793120",
    "end": "1800360"
  },
  {
    "text": "different one so when I run this what we should see is the the internal address come",
    "start": "1800360",
    "end": "1810480"
  },
  {
    "text": "back which is what this is 10.0 34 if we were to",
    "start": "1810480",
    "end": "1816240"
  },
  {
    "text": "run let me put it in there it is so we're returning the",
    "start": "1821039",
    "end": "1827559"
  },
  {
    "text": "internal internal address so that enables you to use the same certificate and use the same name um both for",
    "start": "1827559",
    "end": "1834760"
  },
  {
    "text": "internal and external",
    "start": "1834760",
    "end": "1838480"
  },
  {
    "text": "clients okay one other thing that I wanted to show was the um the pods",
    "start": "1840720",
    "end": "1846240"
  },
  {
    "text": "verified feature so one interesting thing in uh in the way Cube DNS works",
    "start": "1846240",
    "end": "1853840"
  },
  {
    "text": "today is that if I I I've got my Cube DNS running out of different address so if I if I",
    "start": "1853840",
    "end": "1862120"
  },
  {
    "text": "run if I look this up in Cub Dess which is running on20 I get a response it says it's got",
    "start": "1865240",
    "end": "1872240"
  },
  {
    "start": "1871000",
    "end": "2019000"
  },
  {
    "text": "address 1 two 3 4 I can put anything I want here and this feature was put in to make Wild",
    "start": "1872240",
    "end": "1880840"
  },
  {
    "text": "Card certificates work but actually it makes them work but it makes them work by kind of uh inval validating the",
    "start": "1880840",
    "end": "1888440"
  },
  {
    "text": "guarantee of identity and so you actually um it wouldn't be easy but it",
    "start": "1888440",
    "end": "1893760"
  },
  {
    "text": "would it does open up a possibility to uh for somebody in a separate namespace to um hijack uh that certificate",
    "start": "1893760",
    "end": "1902639"
  },
  {
    "text": "essentially make make it look like um you're talking to the service you intend to talk to in a particular namespace but",
    "start": "1902639",
    "end": "1908919"
  },
  {
    "text": "actually you're talking to a service in a different Nam space so in order to avoid that and work around that that",
    "start": "1908919",
    "end": "1915159"
  },
  {
    "text": "security issue we introduced this concept of pod verified and what pods verified will do is actually we'll",
    "start": "1915159",
    "end": "1921600"
  },
  {
    "text": "listen to the pods from the kubernetes API not just the services and endpoints",
    "start": "1921600",
    "end": "1926639"
  },
  {
    "text": "typically Cub DNS and C DNS in its default configuration only listen for",
    "start": "1926639",
    "end": "1931760"
  },
  {
    "text": "services and endpoints they don't really you don't want to load the pods in because it does use some extra memory",
    "start": "1931760",
    "end": "1938440"
  },
  {
    "text": "but uh if you're using these Wild Card certificates and using this feature it's definitely more secure if you take",
    "start": "1938440",
    "end": "1944360"
  },
  {
    "text": "advantage of this so what we do as now with this request it will be made",
    "start": "1944360",
    "end": "1950399"
  },
  {
    "text": "to um core DNS instead of cube DNS and you can see we get anex domain",
    "start": "1950399",
    "end": "1956840"
  },
  {
    "text": "whereas if I look at what my IP address of this pod is let's give",
    "start": "1956840",
    "end": "1964480"
  },
  {
    "text": "that a",
    "start": "1964480",
    "end": "1966799"
  },
  {
    "text": "try okay it resolved properly so essentially what we're doing is um",
    "start": "1973120",
    "end": "1978600"
  },
  {
    "text": "keeping the same DNS schema the way Cube DNS works with these pod addresses but we're validating that when you request a",
    "start": "1978600",
    "end": "1986639"
  },
  {
    "text": "pod for pod IP address for a particular uh namespace that there actually is a",
    "start": "1986639",
    "end": "1991840"
  },
  {
    "text": "pod running in that namespace so if I were to change this to a different name space it will",
    "start": "1991840",
    "end": "1999880"
  },
  {
    "text": "fail so that's really it for the demo I don't know if there are any questions before I talk a little bit about our uh",
    "start": "2002639",
    "end": "2007799"
  },
  {
    "text": "our future and how to get a hold of us yeah we got some we got a few questions in um Justin asks uh what are the",
    "start": "2007799",
    "end": "2014000"
  },
  {
    "text": "recommended ratios for scaling cor DNS versus number of PODS",
    "start": "2014000",
    "end": "2019240"
  },
  {
    "start": "2019000",
    "end": "2088000"
  },
  {
    "text": "nodes uh that's a great question so right now we are still uh you know it's",
    "start": "2019240",
    "end": "2024679"
  },
  {
    "text": "going to depend on some of the features you have enabled in there but we we're actually still evaluating that so one of",
    "start": "2024679",
    "end": "2029720"
  },
  {
    "text": "the things we get with with with uh cncf is access to a cluster and um a",
    "start": "2029720",
    "end": "2036919"
  },
  {
    "text": "bare metal cloud actually and so what we're working on now is both automated",
    "start": "2036919",
    "end": "2042039"
  },
  {
    "text": "and manual uh evaluations of questions like that so we're going to take that um",
    "start": "2042039",
    "end": "2047120"
  },
  {
    "text": "bare metal Cloud we're going to build out different kubernetes environments of different sizes and monitor and measure",
    "start": "2047120",
    "end": "2052878"
  },
  {
    "text": "the different um you know memory usage with some of the different features on",
    "start": "2052879",
    "end": "2058320"
  },
  {
    "text": "and off like I said pods verified increases the the memory usage but we need to know we need to really",
    "start": "2058320",
    "end": "2063878"
  },
  {
    "text": "characterize exactly how much I don't have that data yet but we're working on it",
    "start": "2063879",
    "end": "2069520"
  },
  {
    "text": "uh thanks John and Justin if that didn't answer the question then uh do feel free to type back in the chat again just ask",
    "start": "2069520",
    "end": "2075118"
  },
  {
    "text": "a second question which is is there a recommended setup to use CNS external from kubernetes that can also look up",
    "start": "2075119",
    "end": "2081358"
  },
  {
    "text": "kubernetes services would that require Federation or just separate instances both backed by",
    "start": "2081359",
    "end": "2087560"
  },
  {
    "text": "kubernetes so if I understand the question right if you want to run cords outside of the cluster but have it look",
    "start": "2087560",
    "end": "2095040"
  },
  {
    "start": "2088000",
    "end": "2191000"
  },
  {
    "text": "up cluster services so you could actually um the issue is that the the",
    "start": "2095040",
    "end": "2101560"
  },
  {
    "text": "cluster uh the services that gets that that get the IP addresses that get returned are usually the cluster IPS um",
    "start": "2101560",
    "end": "2108079"
  },
  {
    "text": "but if you have routable pod IPS for example you're using um uh a VLAN or",
    "start": "2108079",
    "end": "2115160"
  },
  {
    "text": "something that's routable for your pods siter and you could use the SRV records",
    "start": "2115160",
    "end": "2120880"
  },
  {
    "text": "so SRV records or headless Services work a little differently rather than returning the cluster IP which is the c",
    "start": "2120880",
    "end": "2127720"
  },
  {
    "text": "gret's internal load balancer VIP um the the SRV records would return the uh",
    "start": "2127720",
    "end": "2135880"
  },
  {
    "text": "actual pod IPS so if you have routable pods and you're using headless Services um then you certainly could",
    "start": "2135880",
    "end": "2142160"
  },
  {
    "text": "either run your cordian in cluster like we shown like I've shown here and just",
    "start": "2142160",
    "end": "2147680"
  },
  {
    "text": "give it a um a node port or a load balancer uh type of service or you can",
    "start": "2147680",
    "end": "2153240"
  },
  {
    "text": "run cords external to kubernetes uh and you you simply have to in your",
    "start": "2153240",
    "end": "2158880"
  },
  {
    "text": "configuration you have to give uh the kubernetes API endpoint um and and other",
    "start": "2158880",
    "end": "2166319"
  },
  {
    "text": "um connectivity and credentials and things like that but um it is designed",
    "start": "2166319",
    "end": "2171920"
  },
  {
    "text": "to be able to be done externally it's just that um most often we do run it in",
    "start": "2171920",
    "end": "2179119"
  },
  {
    "text": "cluster thanks John and one more also from Justin he says with rewrites how",
    "start": "2179119",
    "end": "2184319"
  },
  {
    "text": "does that work when some services are internal to kubernetes and some are external does it feel back to proxy to",
    "start": "2184319",
    "end": "2189599"
  },
  {
    "text": "proxy the request so rewrite yes you could rewrite",
    "start": "2189599",
    "end": "2196680"
  },
  {
    "start": "2191000",
    "end": "2221000"
  },
  {
    "text": "um to a non-internal name and it would",
    "start": "2196680",
    "end": "2202520"
  },
  {
    "text": "proxy the request out yes great thanks and if Justin if that",
    "start": "2202520",
    "end": "2209319"
  },
  {
    "text": "was not the question we're going to carry on now but feel free to ask again and we'll come back to it to the end thanks John",
    "start": "2209319",
    "end": "2217280"
  },
  {
    "text": "any other questions or uh that's it for now okay one one thing I was going to mention uh we also have an experimental",
    "start": "2218119",
    "end": "2224599"
  },
  {
    "start": "2221000",
    "end": "2308000"
  },
  {
    "text": "feature that's a little bit related to this one of the things you see one of the issues people see with Cube DNS you",
    "start": "2224599",
    "end": "2230560"
  },
  {
    "text": "know I talked a little bit about that search search path well when you query for something outside the cluster like",
    "start": "2230560",
    "end": "2236160"
  },
  {
    "text": "you query for google.com I mean we can actually we can",
    "start": "2236160",
    "end": "2241759"
  },
  {
    "text": "see you'll see that you get you know you get a bunch of of of queries so this is",
    "start": "2242079",
    "end": "2248200"
  },
  {
    "text": "a sort of amplification of the queries that are hitting uh hitting the server so this is the client going back going",
    "start": "2248200",
    "end": "2253880"
  },
  {
    "text": "back going back going back till finally it resolves to something and we have an experimental feature that has some",
    "start": "2253880",
    "end": "2259839"
  },
  {
    "text": "bizarre edge cases but might be useful for people in some in some cases where we'll actually take this first query and",
    "start": "2259839",
    "end": "2267040"
  },
  {
    "text": "we'll recognize that it's coming from a particular IP address particular pod and",
    "start": "2267040",
    "end": "2272640"
  },
  {
    "text": "therefore a particular name space and so we'll recognize that this trailing piece",
    "start": "2272640",
    "end": "2277839"
  },
  {
    "text": "is is one of these search path queries and we'll just resolve this directly and just return you the result so it it",
    "start": "2277839",
    "end": "2285160"
  },
  {
    "text": "reduces the number of queries that the client has to do over and over reduces the latency as well as reduces the load",
    "start": "2285160",
    "end": "2291440"
  },
  {
    "text": "on the overall DNS server but that is experimental there's some edge cases where things go a little bit weird um",
    "start": "2291440",
    "end": "2297079"
  },
  {
    "text": "which probably don't apply in most people for most people's systems but you know we we're running it experimental",
    "start": "2297079",
    "end": "2302839"
  },
  {
    "text": "for that reason all right right",
    "start": "2302839",
    "end": "2308760"
  },
  {
    "start": "2308000",
    "end": "2559000"
  },
  {
    "text": "um so a little bit about our future plans um one is uh we want to do some",
    "start": "2308760",
    "end": "2314880"
  },
  {
    "text": "things on really the basic DNS functionality not as not as um not particularly the kubernetes one we have",
    "start": "2314880",
    "end": "2320960"
  },
  {
    "text": "kubernetes things planned too but some of the basic things are uh zero touch DNS sex so if you've used something like",
    "start": "2320960",
    "end": "2326640"
  },
  {
    "text": "caddy that you that integrates with um with uh certificate Management Services",
    "start": "2326640",
    "end": "2332640"
  },
  {
    "text": "like let's encrypt essentially it automatically sets up your TLS for a",
    "start": "2332640",
    "end": "2337680"
  },
  {
    "text": "website or web server we want to do the same thing for DNS we want to be able to uh have zero touch DNS SEC set up um we",
    "start": "2337680",
    "end": "2347000"
  },
  {
    "text": "working on DNS tap support DNS tap is a um a sort of passive capture of the DNS",
    "start": "2347000",
    "end": "2353319"
  },
  {
    "text": "quers that are going through for for various analysis and we have actually uh thanks to the cncf again we have a",
    "start": "2353319",
    "end": "2359400"
  },
  {
    "text": "Google summer of code student who's uh working on that and he's really doing a great job he's got it just about wrapped",
    "start": "2359400",
    "end": "2365440"
  },
  {
    "text": "up one thing um you know about DNS and and something you'll get out of other",
    "start": "2365440",
    "end": "2371640"
  },
  {
    "text": "some other service registry discover Discovery service registry and Discovery",
    "start": "2371640",
    "end": "2376920"
  },
  {
    "text": "services that you don't get in the kubernetes dns-based service Discovery",
    "start": "2376920",
    "end": "2382119"
  },
  {
    "text": "is uh is pushed so if you're sitting there uh you have you're using a headless service in kubernetes and uh",
    "start": "2382119",
    "end": "2389920"
  },
  {
    "text": "therefore the client it's client side load balance and the client is aware of all the different IP addresses that a",
    "start": "2389920",
    "end": "2395960"
  },
  {
    "text": "service resolves to and that changes you know pod goes away a new pod comes in whatever it may be",
    "start": "2395960",
    "end": "2402560"
  },
  {
    "text": "the client isn't informed that with DNS they have to go re resolve the SRV",
    "start": "2402560",
    "end": "2408040"
  },
  {
    "text": "record or whatever it is in order to see that so um we're looking at the",
    "start": "2408040",
    "end": "2414400"
  },
  {
    "text": "possibility of creating a grpc based protocol there such that we can push",
    "start": "2414400",
    "end": "2420480"
  },
  {
    "text": "changes down uh to the uh to the client side load balancers as they happen",
    "start": "2420480",
    "end": "2426040"
  },
  {
    "text": "within kubernetes and as an adjunct to that we'd have uh the idea of a service",
    "start": "2426040",
    "end": "2431280"
  },
  {
    "text": "registry API so today um in the kubernetes use case kubernetes itself is",
    "start": "2431280",
    "end": "2437200"
  },
  {
    "text": "the registry and uh we just do the discovery side but in other use cases",
    "start": "2437200",
    "end": "2443480"
  },
  {
    "text": "where you're running ETD or maybe you're running ETD in combination with uh",
    "start": "2443480",
    "end": "2449200"
  },
  {
    "text": "kubernetes in order to handle some of these other records that I put in the files um because you want them to be",
    "start": "2449200",
    "end": "2455720"
  },
  {
    "text": "dynamic um we like to be able to register through an API in CNS and then",
    "start": "2455720",
    "end": "2461400"
  },
  {
    "text": "depending on what back end you're using dynamically we can write we can write it to that back",
    "start": "2461400",
    "end": "2466800"
  },
  {
    "text": "end uh I mentioned this earlier but multicluster service Discovery without the Federation control plane so um",
    "start": "2466800",
    "end": "2474960"
  },
  {
    "text": "federation's really cool but uh we've heard from people who don't necessarily want to run the Federation control plane",
    "start": "2474960",
    "end": "2480880"
  },
  {
    "text": "it's of a step too far for them right now but they have multiple clusters and they'd like to be able to resolve",
    "start": "2480880",
    "end": "2486079"
  },
  {
    "text": "Services between multiple clusters automatically so we're looking at some solutions uh solutions to that we're",
    "start": "2486079",
    "end": "2493000"
  },
  {
    "text": "talking about building in our policy middleware as well as integrating it with with the uh the open policy agent",
    "start": "2493000",
    "end": "2498520"
  },
  {
    "text": "today policy of middleware is U is what we call an out ofree middleware it it it's in a separate",
    "start": "2498520",
    "end": "2504720"
  },
  {
    "text": "repository and um we'd like to build that in as well as make some policy",
    "start": "2504720",
    "end": "2509800"
  },
  {
    "text": "simple policies directly uh configurable within the core file that is the configuration file of CNS itself while",
    "start": "2509800",
    "end": "2517280"
  },
  {
    "text": "still enabling complex policies that live uh essentially in a separate micr",
    "start": "2517280",
    "end": "2523000"
  },
  {
    "text": "service that evaluates the policy um and whatever the community needs I mean this",
    "start": "2523000",
    "end": "2528520"
  },
  {
    "text": "is the core thing about core DNS uh is that it's extensible it's easy to add",
    "start": "2528520",
    "end": "2534480"
  },
  {
    "text": "these new features it's easy to add backends we have community members who come along um and just you know within a few",
    "start": "2534480",
    "end": "2540960"
  },
  {
    "text": "days of of looking at the code ad these back ends to different systems that we don't even know about um so it's you",
    "start": "2540960",
    "end": "2547280"
  },
  {
    "text": "know that level of extensibility is really uh really Central to to cords and",
    "start": "2547280",
    "end": "2553480"
  },
  {
    "text": "and so we'd love to hear from the community about things that uh things that you",
    "start": "2553480",
    "end": "2558760"
  },
  {
    "text": "need and in order to get a hold of us to tell us about that here's uh the information we have a uh a channel on",
    "start": "2558760",
    "end": "2567359"
  },
  {
    "start": "2559000",
    "end": "2708000"
  },
  {
    "text": "the cncf slack and we have a mailing list as well as uh GitHub is always a great way to",
    "start": "2567359",
    "end": "2573359"
  },
  {
    "text": "get a hold of us or or Twitter even and um please take a look at our I guess our",
    "start": "2573359",
    "end": "2579200"
  },
  {
    "text": "blog doesn't show here but if you go on the uh the website there's a link to the blog a lot of the examples that I've",
    "start": "2579200",
    "end": "2585240"
  },
  {
    "text": "given are explained in more detail in the blog um and so you may want to take a look at those to get a better",
    "start": "2585240",
    "end": "2591599"
  },
  {
    "text": "understanding of how those work and uh are there any other",
    "start": "2591599",
    "end": "2596920"
  },
  {
    "text": "questions thanks John that was excellent um I see there's still a bunch of people in the webinar if you do have questions",
    "start": "2596920",
    "end": "2603359"
  },
  {
    "text": "uh now is your time to pounce in the meantime I've got one um is the intention that cordun will become the",
    "start": "2603359",
    "end": "2610440"
  },
  {
    "text": "default service Discovery for cuber netics that's our intention and we've",
    "start": "2610440",
    "end": "2615520"
  },
  {
    "text": "been working with uh the community on that um this sort of major change will",
    "start": "2615520",
    "end": "2621280"
  },
  {
    "text": "happen you know um we'll take a bit of time um we have to answer questions uh like Justin had about you know how are",
    "start": "2621280",
    "end": "2628440"
  },
  {
    "text": "we going to perform in different um different scale uh clusters uh at",
    "start": "2628440",
    "end": "2633960"
  },
  {
    "text": "different levels of load so we're working on evaluating those things and we are um we've had several meetings",
    "start": "2633960",
    "end": "2640720"
  },
  {
    "text": "with uh the folks involved in currently maintaining Cube DNS and they're open to it uh Cube DNS is based on Sky DNS which",
    "start": "2640720",
    "end": "2649359"
  },
  {
    "text": "you know uh is is um as I said the predecessor to core DNS it's it shares a",
    "start": "2649359",
    "end": "2655359"
  },
  {
    "text": "lot of the same code um the the main DNS protocol code is the same what's",
    "start": "2655359",
    "end": "2661280"
  },
  {
    "text": "different is the the way that we interact with that code and the way we present that code and configure and",
    "start": "2661280",
    "end": "2666800"
  },
  {
    "text": "everything that's we've simplified and made a lot more extensible so they're definitely open to it um but as I said",
    "start": "2666800",
    "end": "2674760"
  },
  {
    "text": "we're working on on getting that uh getting all our ducks in a row to make that that",
    "start": "2674760",
    "end": "2680960"
  },
  {
    "text": "viable thanks John um so there's no other questions come in so I think we're going to call it a day I want to thank",
    "start": "2680960",
    "end": "2686079"
  },
  {
    "text": "everyone who uh showed up to listen in and of course big thank you to you John for taking the time to explain um this",
    "start": "2686079",
    "end": "2692040"
  },
  {
    "text": "introduction to C DNS uh for now that's it if you do need to get in touch with John there many many ways there and if",
    "start": "2692040",
    "end": "2698800"
  },
  {
    "text": "that doesn't work out you can always contact the cntf and we'll put you in touch somehow um that's it goodbye for",
    "start": "2698800",
    "end": "2705000"
  },
  {
    "text": "now all right thank you very much thanks John bye",
    "start": "2705000",
    "end": "2710800"
  }
]