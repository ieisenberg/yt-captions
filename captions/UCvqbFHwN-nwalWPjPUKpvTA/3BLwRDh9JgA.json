[
  {
    "text": "so welcome to our Network foundation's Workshop one of the reasons we built this",
    "start": "659",
    "end": "6060"
  },
  {
    "text": "Workshop was because we felt that there was a massive gap between zero to understanding kubernetes networking so",
    "start": "6060",
    "end": "12360"
  },
  {
    "text": "we wanted to fill those gaps for y'all and really help you understand you know all those different pieces and layers",
    "start": "12360",
    "end": "18240"
  },
  {
    "text": "that add up together to allow you to do kubernetes networking but I had personal motivations too",
    "start": "18240",
    "end": "24060"
  },
  {
    "text": "because when I joined solo the company I currently work for I actually you know struggled with",
    "start": "24060",
    "end": "30240"
  },
  {
    "text": "learning istio the service mesh but as I started to dig a little bit deeper and relate these Concepts back to some of",
    "start": "30240",
    "end": "36300"
  },
  {
    "text": "the stuff that I used to do back in my network engineering days I started to map out how this would all flow and so",
    "start": "36300",
    "end": "42420"
  },
  {
    "text": "you know my partner in crime here Jason allowed me to you know work with him to build This brilliant Workshop so I",
    "start": "42420",
    "end": "48480"
  },
  {
    "text": "really hope you all enjoy it I'll go ahead and introduce myself my name is Marina wijay I'm a developer platform",
    "start": "48480",
    "end": "54360"
  },
  {
    "text": "Advocate at solo so I work with the community I you know go out to conferences deliver a lot of talks and",
    "start": "54360",
    "end": "60000"
  },
  {
    "text": "workshops while also just engaging with the community to understand what their needs are and through you know",
    "start": "60000",
    "end": "66240"
  },
  {
    "text": "understanding and asking what they needed I found out it was networking you know give us the foundations so we can",
    "start": "66240",
    "end": "72000"
  },
  {
    "text": "better understand how to use a container networking interface how to do service mesh and everything in between",
    "start": "72000",
    "end": "79740"
  },
  {
    "text": "answers myself my name is Jason schepck I also work at solo I'm a field engineer based out of Buffalo New York",
    "start": "79740",
    "end": "85860"
  },
  {
    "text": "um and the one thing I'll say right now is that we all have different Journeys to get into kubernetes or how we got to where we are basically today",
    "start": "85860",
    "end": "92280"
  },
  {
    "text": "um and so hopefully the networking foundations will kind of establish a good foundation to uh so that we can all",
    "start": "92280",
    "end": "97320"
  },
  {
    "text": "communicate freely about networking Concepts fantastic all right so I want you all to",
    "start": "97320",
    "end": "102420"
  },
  {
    "text": "go to that QR code if you plan on participating in this Workshop you have a Sandbox environment waiting for you so",
    "start": "102420",
    "end": "108299"
  },
  {
    "text": "head over there or you can even use a tiny URL to get to that solo Academy link once you're there feel free to",
    "start": "108299",
    "end": "115259"
  },
  {
    "text": "launch the environment we're going to launch it actually I should I should have launched it right now I don't know",
    "start": "115259",
    "end": "120420"
  },
  {
    "text": "what I was doing I'll go ahead and kick mine off mine looks a little different because I'm just using the back end",
    "start": "120420",
    "end": "125820"
  },
  {
    "text": "version of the the version you're using which is the same thing so no big deal",
    "start": "125820",
    "end": "132500"
  },
  {
    "text": "and so yeah I'll give you a couple a minute to just grab that",
    "start": "136680",
    "end": "142400"
  },
  {
    "text": "and go ahead and start the workshop too because it does take about a minute and a half or two minutes to get up and",
    "start": "144360",
    "end": "149520"
  },
  {
    "text": "running but I don't want you to proceed until we begin because there's a lot of information there by the way we're going",
    "start": "149520",
    "end": "155040"
  },
  {
    "text": "to be going really quickly because we have 90 minutes and we want to make sure we cover the critical opponents critical",
    "start": "155040",
    "end": "160200"
  },
  {
    "text": "components of this Workshop also I also want to provide some context",
    "start": "160200",
    "end": "165239"
  },
  {
    "text": "and help you understand some of the key areas we're going to focus on so if you look in this diagram we have the OSI",
    "start": "165239",
    "end": "171420"
  },
  {
    "text": "model or if you're familiar with the TCP model very similar The OSI model is a",
    "start": "171420",
    "end": "176519"
  },
  {
    "text": "structure that allows us to understand how data moves around a network and we",
    "start": "176519",
    "end": "182040"
  },
  {
    "text": "do this in layers so that we can understand what's going on at the physical layer how we're understanding who's talking to what how we get across",
    "start": "182040",
    "end": "189180"
  },
  {
    "text": "the remote networks how we understand the actual name of these different endpoints that are communicating as well",
    "start": "189180",
    "end": "196440"
  },
  {
    "text": "as some higher level information that we gain at let's say the top layer in that",
    "start": "196440",
    "end": "201599"
  },
  {
    "text": "stack now if you look at the Technologies on the very far right there you'll notice that kubernetes maps to",
    "start": "201599",
    "end": "208500"
  },
  {
    "text": "that those lower layers because it provides the compute infrastructure it",
    "start": "208500",
    "end": "213780"
  },
  {
    "text": "provides basic networking but you start to realize that you need more than just what kubernetes can offer you and so you",
    "start": "213780",
    "end": "220680"
  },
  {
    "text": "start to see that there are other components like the container networking interface and I've listed out psyllium because it's one of the more prevalent",
    "start": "220680",
    "end": "228060"
  },
  {
    "text": "cnis that you'll see out there when you're working in various clusters but to me cni provides a good amount of",
    "start": "228060",
    "end": "235739"
  },
  {
    "text": "logic but also works to move packets very quickly what is a packet we'll get to that very shortly and then finally",
    "start": "235739",
    "end": "242040"
  },
  {
    "text": "you'll see another open source technology at the very top istio istio is a service mesh that actually provides",
    "start": "242040",
    "end": "247500"
  },
  {
    "text": "connectivity observability and security but at a higher level or a higher layer and this is because we can provide",
    "start": "247500",
    "end": "254760"
  },
  {
    "text": "certain attributes to our workloads and how they communicate and we can make policy decisions based on those",
    "start": "254760",
    "end": "260400"
  },
  {
    "text": "attributes things we cannot do at lower layers of that OSI stack so I will come back to this diagram when",
    "start": "260400",
    "end": "267419"
  },
  {
    "text": "I'm covering off Network namespaces so just take a mental snapshot of it and we'll come back and review it later on",
    "start": "267419",
    "end": "273360"
  },
  {
    "text": "so in this Workshop we've got seven modules we'll be moving very quickly uh we'll probably spend about 10 to 12",
    "start": "273360",
    "end": "279180"
  },
  {
    "text": "minutes per module if you have questions we won't take them sorry I'm kidding you're welcome to ask questions we'll",
    "start": "279180",
    "end": "284580"
  },
  {
    "text": "try to answer them as quickly as we can so we can proceed forward Jason's going to start off with covering off the the",
    "start": "284580",
    "end": "290520"
  },
  {
    "text": "intro to networking and the basics of networking as well as talking about the different models that we we use and then",
    "start": "290520",
    "end": "296820"
  },
  {
    "text": "I'll start talking about routing and how traffic moves around the network gets to remote networks and everything in",
    "start": "296820",
    "end": "303479"
  },
  {
    "text": "between I'll also go on to cover why we need DNS and why this is important because you obviously don't want to sit",
    "start": "303479",
    "end": "309060"
  },
  {
    "text": "there and remember everyone's phone number or IP addresses and then also talk about the HTTP layer because it's",
    "start": "309060",
    "end": "314580"
  },
  {
    "text": "important and it transitions us to the area where we start to interact with applications at that layer because",
    "start": "314580",
    "end": "321060"
  },
  {
    "text": "you're most of you probably have interacted with apis well guess what we provide services on top of those apis",
    "start": "321060",
    "end": "327960"
  },
  {
    "text": "and then I'll pass it back to Jason Jason's going to cover off some of those core components that exist in our Network that that process traffic that",
    "start": "327960",
    "end": "335940"
  },
  {
    "text": "allow us to implement policy that enforces these policies and also knows or allows us to get around the network",
    "start": "335940",
    "end": "341759"
  },
  {
    "text": "pretty easily and then I'll come back and talk about container networking because that sets up the foreground for how we achieve",
    "start": "341759",
    "end": "349259"
  },
  {
    "text": "container networking in kubernetes and then finally Jason will wrap up with kubernetes networking and show you all",
    "start": "349259",
    "end": "354900"
  },
  {
    "text": "the different components working together with kubernetes objects and resources so",
    "start": "354900",
    "end": "360900"
  },
  {
    "text": "without further Ado let's go ahead and get started Jason you're up all right",
    "start": "360900",
    "end": "367320"
  },
  {
    "text": "so by now hopefully you've found your way to the instruct environment the instruct environment is hosting several",
    "start": "367320",
    "end": "373800"
  },
  {
    "text": "VMS even some kubernetes clusters that you'll be making use of throughout the sessions and just to get everybody a",
    "start": "373800",
    "end": "381120"
  },
  {
    "text": "little bit more familiar if you've ever used this environment on the left you'll see the terminal you'll have access to",
    "start": "381120",
    "end": "386520"
  },
  {
    "text": "run codes it's going to connect to a specific VM and then that will interface with other",
    "start": "386520",
    "end": "392220"
  },
  {
    "text": "VMS in several subsequent modules there will be several other tabs that allow us",
    "start": "392220",
    "end": "398580"
  },
  {
    "text": "to access different things on different networks and then on the right you'll be able to adjust and modify the prompts to",
    "start": "398580",
    "end": "406080"
  },
  {
    "text": "give you some information and hopefully you'll be able to get some value out of the images that are provided there",
    "start": "406080",
    "end": "412460"
  },
  {
    "text": "so like Marino said I'm going to take us through the atomic elements of networking and we'll slowly build our",
    "start": "412460",
    "end": "418680"
  },
  {
    "text": "way up to kubernetes and then hopefully throughout the conference you will you will build beyond that in various",
    "start": "418680",
    "end": "424500"
  },
  {
    "text": "specific domains and so the reason why we're all here is that networking can be complicated",
    "start": "424500",
    "end": "430699"
  },
  {
    "text": "especially distributed networking across regions across continents in home labs",
    "start": "430699",
    "end": "437400"
  },
  {
    "text": "in public clouds et cetera et cetera um but the reason it's so complicated is because there's a lot of sophistication",
    "start": "437400",
    "end": "442979"
  },
  {
    "text": "built into it that provides a lot of functionality",
    "start": "442979",
    "end": "447319"
  },
  {
    "text": "to start off um we have two different models Mourinho mentioned and showed the OSI model and",
    "start": "448620",
    "end": "454740"
  },
  {
    "text": "then to the right you'll also see a comparative TCP model they're color coded um I'll bring the sunscreen for a little",
    "start": "454740",
    "end": "460919"
  },
  {
    "text": "bit The Green Layer being the physical layer this is when you're basically plugging things in and disconnecting",
    "start": "460919",
    "end": "466680"
  },
  {
    "text": "things the blue layer being the layer that's going to connect things Beyond just the physical plugs",
    "start": "466680",
    "end": "473580"
  },
  {
    "text": "the red layer being a transport layer and the yellow layer being the the actual data that you're sending",
    "start": "473580",
    "end": "479580"
  },
  {
    "text": "throughout the network and you'll see that described here down below",
    "start": "479580",
    "end": "485599"
  },
  {
    "text": "in each of those layers there is going to be a corresponding protocol data unit sometimes you'll hear me say protocol",
    "start": "486960",
    "end": "493620"
  },
  {
    "text": "data units sometimes you'll see pdu they're interchangeable and the next example is going to",
    "start": "493620",
    "end": "500099"
  },
  {
    "text": "generate some traffic we've all probably used curl at this point in time this is",
    "start": "500099",
    "end": "505199"
  },
  {
    "text": "going to send some traffic to a service called hdbivin.org on the get path and",
    "start": "505199",
    "end": "510599"
  },
  {
    "text": "then we'll be able to introspect that traffic using the pdus that we just saw for the different layers",
    "start": "510599",
    "end": "518099"
  },
  {
    "text": "um and so no surprise here if we run that crawl command eventually",
    "start": "518099",
    "end": "524520"
  },
  {
    "text": "assuming that the network agrees with us we'll we'll get the results that we expect we'll get the header request we'll get some basic information",
    "start": "524520",
    "end": "530220"
  },
  {
    "text": "but there's a lot more information that's happened that's being sent on The Wire um that we're not made aware of at this",
    "start": "530220",
    "end": "535740"
  },
  {
    "text": "level and so for time constraints I am going to skip ahead to the full view of the",
    "start": "535740",
    "end": "541620"
  },
  {
    "text": "frame but in that frame element we'll see color coded once again all of the",
    "start": "541620",
    "end": "547140"
  },
  {
    "text": "all of the data that is transferred so we got a lot of the data from the first layer already through curl you can",
    "start": "547140",
    "end": "553440"
  },
  {
    "text": "see that we made a get request we're using HP 1.1 we're going to a specific host going down a layer we can see that",
    "start": "553440",
    "end": "560100"
  },
  {
    "text": "we're picking down the the ports um The Source Port the destination Port the sequence number and the checksum to",
    "start": "560100",
    "end": "567600"
  },
  {
    "text": "do some validation of the network traffic going down another layer we see the source and destination IPS so that",
    "start": "567600",
    "end": "573779"
  },
  {
    "text": "we actually know between whom this conversation is happening and then the last layer is the MAC address the MAC",
    "start": "573779",
    "end": "579120"
  },
  {
    "text": "address as we'll explain in a later session is going to be more apparent on the physical level",
    "start": "579120",
    "end": "585740"
  },
  {
    "text": "Rock here to do more more code we brought it to these VM environments to do some things and so we'll spend a",
    "start": "586680",
    "end": "592740"
  },
  {
    "text": "little bit of time here using a tool that I'm pretty fond of called TCP dump and TCP dump is going to be much more",
    "start": "592740",
    "end": "600120"
  },
  {
    "text": "much more feature Rich than we're going to make use of today but it is going to provide us some good examples of the",
    "start": "600120",
    "end": "606360"
  },
  {
    "text": "information that we're getting we're transferring on the network across all of the layers",
    "start": "606360",
    "end": "611399"
  },
  {
    "text": "I have here on the screen some of the the flags that you can pass into it",
    "start": "611399",
    "end": "616680"
  },
  {
    "text": "um if you if you are familiar with TCB dump you can just ignore those but the main the important thing here is that",
    "start": "616680",
    "end": "622320"
  },
  {
    "text": "we're going to mirror what we have just described so if we see here",
    "start": "622320",
    "end": "628260"
  },
  {
    "text": "I'm going to run a loop that Loop is going to curl HB bin repeatedly and",
    "start": "628260",
    "end": "634200"
  },
  {
    "text": "that's just because we're in a current shell session and I wanted to make sure that I can capture some of that traffic the First Command we're going to do is",
    "start": "634200",
    "end": "640980"
  },
  {
    "text": "we're going to run a TCP dump we'll wait for the next iteration of the",
    "start": "640980",
    "end": "648060"
  },
  {
    "text": "loop to pick up and then we should eventually see some output on the screen",
    "start": "648060",
    "end": "653120"
  },
  {
    "text": "if we don't I'll just cancel things and restart them but the curl loop I do believe",
    "start": "656700",
    "end": "663140"
  },
  {
    "text": "I just scroll a little bit too far",
    "start": "663660",
    "end": "668600"
  },
  {
    "text": "sorry about that",
    "start": "669420",
    "end": "672380"
  },
  {
    "text": "I'm just going to start that loop again on the TCP dump again",
    "start": "675420",
    "end": "683899"
  },
  {
    "text": "and hopefully eventually yeah there we go the networker agrees with us um and it's a little small on the screen I could make it bigger well if you on",
    "start": "686519",
    "end": "694200"
  },
  {
    "text": "your personal screens you can probably zoom in um we get some of the basic HTTP information but there's a lot of",
    "start": "694200",
    "end": "699779"
  },
  {
    "text": "information up above that's not very human readable we'll parse it down below once we run one more request",
    "start": "699779",
    "end": "706459"
  },
  {
    "text": "going to do another request we're going to filter for some of the other information in this case we are adding",
    "start": "709380",
    "end": "716519"
  },
  {
    "text": "that we are using the source and flag and we can see a lot of the same",
    "start": "716519",
    "end": "722279"
  },
  {
    "text": "information available in the first request in the few lines but then we're seeing more advanced layer 7 information",
    "start": "722279",
    "end": "728399"
  },
  {
    "text": "we're seeing the actual content from the HTTP bin request the 504 504 Gateway",
    "start": "728399",
    "end": "734100"
  },
  {
    "text": "timeout and the several headers the server the date the content type the content length",
    "start": "734100",
    "end": "741920"
  },
  {
    "text": "so if I make this bigger we can see what we're supposed to see assuming the network agrees with us is content from",
    "start": "742320",
    "end": "747720"
  },
  {
    "text": "the frame we'll see Mac addresses the Mac addresses that are on my screen won't align with what the MAC address is",
    "start": "747720",
    "end": "753120"
  },
  {
    "text": "on your screen are most likely um as well as the other information available here but the packet is",
    "start": "753120",
    "end": "760019"
  },
  {
    "text": "available in the source IP in the destination IP the time to live 64. we're going to see the segment that's",
    "start": "760019",
    "end": "766500"
  },
  {
    "text": "got the source the destination ports and the sequence number The Source port and then lastly we have the data",
    "start": "766500",
    "end": "773279"
  },
  {
    "text": "the data is going to be the layer 7 information that gets um the stuff that we've seen several times already",
    "start": "773279",
    "end": "780540"
  },
  {
    "text": "like I said the TCP dump command is going to be useful on a lot other domain a lot of",
    "start": "780540",
    "end": "786899"
  },
  {
    "text": "other domains um you might even use it later today but for now we're just going to move ahead having covered the the pdu",
    "start": "786899",
    "end": "794399"
  },
  {
    "text": "the information that's being transferred on the network and the layers that those correspond with",
    "start": "794399",
    "end": "800279"
  },
  {
    "text": "pkl is just going to clean up the running commands so that the VM is not overloaded for the next sessions",
    "start": "800279",
    "end": "807660"
  },
  {
    "text": "if on your own time you do want to get a little bit more of a circum perspective view of networking tools you can go",
    "start": "807660",
    "end": "814260"
  },
  {
    "text": "through this other commonly used tools category we'll do the same thing kind of that we did with TCP dump explain what",
    "start": "814260",
    "end": "819899"
  },
  {
    "text": "content is available within them and why they would be used and the commands we go over there are the IP Command",
    "start": "819899",
    "end": "827839"
  },
  {
    "text": "the DH client command the route command",
    "start": "828360",
    "end": "834260"
  },
  {
    "text": "several others you'll see netcat you'll see netstat ping etc etc and the important thing here is",
    "start": "835139",
    "end": "841380"
  },
  {
    "text": "that some of those commands are going to be more or less reading commands some of those are actually going to be able to make changes to your physical Network",
    "start": "841380",
    "end": "848279"
  },
  {
    "text": "and we'll use some of them later on but assuming that you have a cursory",
    "start": "848279",
    "end": "853800"
  },
  {
    "text": "example or that you trust that the content that we'll give you throughout the rest of the course we can skip through that and that'll bring us to",
    "start": "853800",
    "end": "859380"
  },
  {
    "text": "Arena's next chapter which is awesome fantastic job there Jason",
    "start": "859380",
    "end": "866360"
  },
  {
    "text": "alright so Jason gave us a great overview of the different tools and the OSI stack and the TCP model in terms of",
    "start": "866360",
    "end": "873899"
  },
  {
    "text": "how traffic flows and how traffic gets encapsulated and flows through those layers now how many of you have actually",
    "start": "873899",
    "end": "880440"
  },
  {
    "text": "ever you know run into a situation where you had duplicate IPS",
    "start": "880440",
    "end": "885740"
  },
  {
    "text": "oh come on don't lie to me I know a lot of you have but you just don't want to admit it's okay now what's very",
    "start": "885899",
    "end": "891240"
  },
  {
    "text": "fascinating is that every single endpoint that you've ever interacted with whether it be a phone a",
    "start": "891240",
    "end": "897779"
  },
  {
    "text": "laptop maybe a server at home maybe a little nuck device whatever it is it has something called a MAC address how many",
    "start": "897779",
    "end": "904440"
  },
  {
    "text": "of you are familiar with a Mac address just so that I can awesome all right so I don't really need to explain it but",
    "start": "904440",
    "end": "909660"
  },
  {
    "text": "it's a burned in address that we can easily identify in a local area network who owns that device right who is that",
    "start": "909660",
    "end": "916620"
  },
  {
    "text": "device the manufacturer what it is and what it's trying to do on the network except we never really use Mac addresses",
    "start": "916620",
    "end": "923459"
  },
  {
    "text": "to be able to communicate with each other because when we think about it your name is like your Mac address",
    "start": "923459",
    "end": "930839"
  },
  {
    "text": "but in order to contact you you need a phone number or some form of communication like an email",
    "start": "930839",
    "end": "937079"
  },
  {
    "text": "but the thing is if we're talking about phone numbers for a second we're never going to be able to remember everyone's phone number that's why we have phone",
    "start": "937079",
    "end": "943199"
  },
  {
    "text": "books or a contact list on our phone and so I'll talk about DNS in the next module but you'll start to see how a MAC",
    "start": "943199",
    "end": "950519"
  },
  {
    "text": "address gets translated into an IP address which gets translated into a DNS hostname now oh I blew this up way too",
    "start": "950519",
    "end": "957180"
  },
  {
    "text": "big I didn't realize that now what we're going to do is we're",
    "start": "957180",
    "end": "962459"
  },
  {
    "text": "actually going to understand a little bit about how devices can communicate across the network so I will talk a",
    "start": "962459",
    "end": "969720"
  },
  {
    "text": "little bit about layer 2 Mac addresses every device has one even VMS have one interestingly enough containers do but",
    "start": "969720",
    "end": "976560"
  },
  {
    "text": "we never really interact with those Mac addresses and the reason behind that is because we only really care about",
    "start": "976560",
    "end": "982079"
  },
  {
    "text": "assigning labels to our pods and knowing what these names of these pods are and then working from that going forward and",
    "start": "982079",
    "end": "989040"
  },
  {
    "text": "then there are some other artifacts within the Realms of kubernetes that allow us to communicate with those pods",
    "start": "989040",
    "end": "994560"
  },
  {
    "text": "through something called Services which we'll cover at the very end but it all begins with a device having an IP",
    "start": "994560",
    "end": "1000800"
  },
  {
    "text": "address being able to communicate with another device on the network so I have a nice little diagram here which I'll",
    "start": "1000800",
    "end": "1006079"
  },
  {
    "text": "show you uh right here okay let's bring this up",
    "start": "1006079",
    "end": "1011540"
  },
  {
    "text": "so if we look at this diagram for a second we notice that we have two applications on the left and two",
    "start": "1011540",
    "end": "1017120"
  },
  {
    "text": "applications on the right now each of these applications has an IP address it could be anything except for",
    "start": "1017120",
    "end": "1024199"
  },
  {
    "text": "what you see that's close to that little circle with a bunch of arrows going into it and I'll explain that in a second now",
    "start": "1024199",
    "end": "1029720"
  },
  {
    "text": "let's say app one needs to talk to app2 because they're on the same local area",
    "start": "1029720",
    "end": "1036380"
  },
  {
    "text": "network there is no intermediary device that needs to be involved to transport that",
    "start": "1036380",
    "end": "1042020"
  },
  {
    "text": "payload anywhere else so the local fabric that these two devices or these",
    "start": "1042020",
    "end": "1047240"
  },
  {
    "text": "two applications or let's say even virtual machines are connected to which would be some sort of switch some sort",
    "start": "1047240",
    "end": "1053360"
  },
  {
    "text": "of Hub some sort of device or bridge for that matter and all this bridge or switch is doing is receiving these",
    "start": "1053360",
    "end": "1060080"
  },
  {
    "text": "electrical signals from this particular well in the case of virtual machines not really electrical but it's receiving",
    "start": "1060080",
    "end": "1065960"
  },
  {
    "text": "some form of communication from these endpoints and then carrying them over to the destination",
    "start": "1065960",
    "end": "1072620"
  },
  {
    "text": "except when we have to go to a remote destination now we have two networks in",
    "start": "1072620",
    "end": "1078020"
  },
  {
    "text": "this diagram we have one on the left and one on the right if app one wants to talk to app3 we have to involve",
    "start": "1078020",
    "end": "1084080"
  },
  {
    "text": "something called a router now this router is extremely important because it's able to transport us across",
    "start": "1084080",
    "end": "1090980"
  },
  {
    "text": "to various remote networks because again we have all of these IP addresses they're tied to or bound to one single",
    "start": "1090980",
    "end": "1098059"
  },
  {
    "text": "network but if you start to think about it all of you at home probably have a",
    "start": "1098059",
    "end": "1104120"
  },
  {
    "text": "single subnet it's all probably 192.168 x dot X and that's fine but some of you",
    "start": "1104120",
    "end": "1109520"
  },
  {
    "text": "might be running home Labs which you have a separate subnet and sometimes you might need to be able to bridge those two and you might be using a router to",
    "start": "1109520",
    "end": "1115520"
  },
  {
    "text": "be able to achieve that or you might be using some sort of proxy device to get there but in the case of this",
    "start": "1115520",
    "end": "1121160"
  },
  {
    "text": "environment here the network on the left doesn't know about the network on the right the",
    "start": "1121160",
    "end": "1126740"
  },
  {
    "text": "network on the left knows about that router in the middle and that router is going to be the one that's responsible",
    "start": "1126740",
    "end": "1132080"
  },
  {
    "text": "for saying hey I know how to get you to this destination so in certain situations you might",
    "start": "1132080",
    "end": "1138919"
  },
  {
    "text": "statically Define this you might you know put in static routes which I'll discuss in a second but these static",
    "start": "1138919",
    "end": "1144799"
  },
  {
    "text": "routes effectively tell us where this remote network is how to get to that remote Network and through which",
    "start": "1144799",
    "end": "1150559"
  },
  {
    "text": "interface to get to use to get to that to that Network so if any of these two apps here we're trying to get to that",
    "start": "1150559",
    "end": "1157400"
  },
  {
    "text": "remote Network on the very far right it would say hey 192.168 52.1 can you",
    "start": "1157400",
    "end": "1163580"
  },
  {
    "text": "tell me how to get to the 10.13.37.xnetwork that router will say yes I do let's go",
    "start": "1163580",
    "end": "1169880"
  },
  {
    "text": "let's go over to the other side and then there'll be bi-directional communication so that you know app3 or app 4 will will",
    "start": "1169880",
    "end": "1176179"
  },
  {
    "text": "provide the response to that router now I mentioned that everything needs an IP address how do we get IP addresses",
    "start": "1176179",
    "end": "1183679"
  },
  {
    "text": "so there are a couple of ways that you can you know get an IP address you could basically assign it yourself statically",
    "start": "1183679",
    "end": "1189020"
  },
  {
    "text": "or you can use IP address management when we're talking at scale we definitely don't want to be sitting",
    "start": "1189020",
    "end": "1195260"
  },
  {
    "text": "there manually assigning IPS to any endpoint at all we actually want to use something like DHCP or the dynamic host configuration",
    "start": "1195260",
    "end": "1204140"
  },
  {
    "text": "protocol and what that does is anytime a device is connected to the network",
    "start": "1204140",
    "end": "1209299"
  },
  {
    "text": "that device is going to solicit the server and say hey I need an IP address can you give me one now this server this",
    "start": "1209299",
    "end": "1215660"
  },
  {
    "text": "DHCP server is going to go in and determine does it have enough allocatable IP addresses to hand out and",
    "start": "1215660",
    "end": "1221840"
  },
  {
    "text": "if it does it gives that endpoint an IP address something called a subnet mask and a default gateway the default",
    "start": "1221840",
    "end": "1228980"
  },
  {
    "text": "gateway is something I previously described which happened to be that router's interface on that Network",
    "start": "1228980",
    "end": "1234740"
  },
  {
    "text": "and then there's also a couple of other things that are assigned like maybe uh you know a DNS record or name as well as",
    "start": "1234740",
    "end": "1241400"
  },
  {
    "text": "a DNS server because we obviously need to be able to communicate to destinations that we don't know the IPS",
    "start": "1241400",
    "end": "1246559"
  },
  {
    "text": "for now once all devices have their IP addresses they're able to freely",
    "start": "1246559",
    "end": "1251960"
  },
  {
    "text": "communicate with each other we also start to think okay how do we manage this at scale how do we find ways to get",
    "start": "1251960",
    "end": "1257960"
  },
  {
    "text": "to these remote networks now obviously you're not going to be sitting there deploying what we call static routes",
    "start": "1257960",
    "end": "1263720"
  },
  {
    "text": "anymore you would want to use a dynamic routing protocol how many of you are familiar with bgp or",
    "start": "1263720",
    "end": "1270919"
  },
  {
    "text": "border Gateway protocol perfect okay so I don't need to dive too deep into it but it's the protocol of",
    "start": "1270919",
    "end": "1277700"
  },
  {
    "text": "the internet and it's the protocol for the WAN basically bgp allows us to take multiple remote networks and transport",
    "start": "1277700",
    "end": "1284960"
  },
  {
    "text": "them across the globe to various other networks as well we have something called Neighbor ships that are formed our neighbor relationships that need to",
    "start": "1284960",
    "end": "1291380"
  },
  {
    "text": "be formed so that different routers that run this bgp process",
    "start": "1291380",
    "end": "1296600"
  },
  {
    "text": "can communicate and exchange those routes so when you do this at scale you start to realize okay it's easy enough",
    "start": "1296600",
    "end": "1303380"
  },
  {
    "text": "because these different neighbors are able to form their relationships they're able to trade information and they can",
    "start": "1303380",
    "end": "1308900"
  },
  {
    "text": "work around situations where a neighbor might be unavailable That's The Power of a dynamic routing protocol we're not",
    "start": "1308900",
    "end": "1314840"
  },
  {
    "text": "going to sit here and dive too too deep into it but I bring it up because it's likely that you will be using it in your",
    "start": "1314840",
    "end": "1319880"
  },
  {
    "text": "Cloud environments your data center environments your Edge environments and anywhere else so what we're going to do is we're",
    "start": "1319880",
    "end": "1326419"
  },
  {
    "text": "actually going to go ahead and configure routing if you skip to this little section here that says let's configure",
    "start": "1326419",
    "end": "1331520"
  },
  {
    "text": "routing let's pop that open and we're going to go ahead and install some net tools and these net tools will allow us",
    "start": "1331520",
    "end": "1337640"
  },
  {
    "text": "to configure our our Network namespaces which we'll cover in a later module as well as several",
    "start": "1337640",
    "end": "1343940"
  },
  {
    "text": "other IP related tools so that we can configure static routing we can even configure routing within a namespace and",
    "start": "1343940",
    "end": "1350720"
  },
  {
    "text": "we can even forward traffic now we're going to run another command here",
    "start": "1350720",
    "end": "1357100"
  },
  {
    "text": "sysctl-w net.ipv4.ip forward equals one all I'm",
    "start": "1357100",
    "end": "1362360"
  },
  {
    "text": "just basically saying is if I'm going to turn on routing capabilities I need to make sure that I can actually",
    "start": "1362360",
    "end": "1367760"
  },
  {
    "text": "wrap so it's just turning on the flag for routing at this point so that I can effectively route between two different",
    "start": "1367760",
    "end": "1373640"
  },
  {
    "text": "networks now when I say networks I may also use the word subnets because in the",
    "start": "1373640",
    "end": "1379100"
  },
  {
    "text": "world of ipnetworking every network has a subnet address and then every IP in",
    "start": "1379100",
    "end": "1385220"
  },
  {
    "text": "that network has an IP address within that subnet now I will say something quickly about",
    "start": "1385220",
    "end": "1390919"
  },
  {
    "text": "IP addressing and subnetting I'm not going to explain it to you because there's not enough time I'm not going to go into the details I'm not going to",
    "start": "1390919",
    "end": "1396860"
  },
  {
    "text": "subnet with you right now but when you start to build these Networks you're going to start to realize that",
    "start": "1396860",
    "end": "1402559"
  },
  {
    "text": "everything can't get a slash 24. right because guess what you'll have IP address wastage so when you subnet",
    "start": "1402559",
    "end": "1410720"
  },
  {
    "text": "and you use a slash 24 subnet mask which is 255.255.255.0 what you'll find is that",
    "start": "1410720",
    "end": "1417140"
  },
  {
    "text": "you have 256 addresses in that subnet but you only really have 255 usable",
    "start": "1417140",
    "end": "1423860"
  },
  {
    "text": "addresses one that actually now needs to go to a Gateway so that you can get to remote networks and then the others are",
    "start": "1423860",
    "end": "1429620"
  },
  {
    "text": "assignable but let's just say I handed every one of you an ipv4 subnet you would probably only use maybe a",
    "start": "1429620",
    "end": "1436760"
  },
  {
    "text": "fraction of 10 of the addresses so I have wastage so what we tend to do in the world of networking is we subnet",
    "start": "1436760",
    "end": "1443480"
  },
  {
    "text": "further so that we can take those 255 addresses or 256 addresses break it down to maybe 128 or 64 or 32s shrink shrink",
    "start": "1443480",
    "end": "1452480"
  },
  {
    "text": "that actual Network size so that we have less unnecessary cross traffic we have less IP address wastage and we can be a",
    "start": "1452480",
    "end": "1459260"
  },
  {
    "text": "lot more efficient with how we build our Networks so I'm going to turn on routing and forwarding and the two commands",
    "start": "1459260",
    "end": "1466539"
  },
  {
    "text": "netstat-nr and Route provide the same output what you're looking at right now is a routing table a routing table",
    "start": "1466539",
    "end": "1473900"
  },
  {
    "text": "basically has a list of different destinations which basically say I know",
    "start": "1473900",
    "end": "1479419"
  },
  {
    "text": "how to get to this remote Network through either this interface or through this IP address as long as I can reach this IP address it's going to take me to",
    "start": "1479419",
    "end": "1486799"
  },
  {
    "text": "where I need to go so in a lot of hosts like for example this Linux operating system that you're",
    "start": "1486799",
    "end": "1492140"
  },
  {
    "text": "looking at right now you won't have many entries for the routing table but if you actually looked at a real router you might find multiple",
    "start": "1492140",
    "end": "1499100"
  },
  {
    "text": "entries probably you know in the 50s to 100s of different kinds of routes that might be popping in",
    "start": "1499100",
    "end": "1505580"
  },
  {
    "text": "so let's go ahead and configure some more you know items here we're going to",
    "start": "1505580",
    "end": "1511039"
  },
  {
    "text": "take a look at the IP address command here and it's going to tell us what our interface IP address is and we see that",
    "start": "1511039",
    "end": "1517159"
  },
  {
    "text": "it is 10.5.1.132.32. ignore the slash 32 this",
    "start": "1517159",
    "end": "1522440"
  },
  {
    "text": "is actually a host routing mechanism that we that environments tend to employ quite honestly it doesn't really you",
    "start": "1522440",
    "end": "1528380"
  },
  {
    "text": "know matter that I explain it right now but you will find this in a lot of different environments because it just isolates that Network to that singular",
    "start": "1528380",
    "end": "1534679"
  },
  {
    "text": "host so it makes routing interesting you might find this in VPN setups at times especially if you have remote access",
    "start": "1534679",
    "end": "1540559"
  },
  {
    "text": "users using like tunneling to get back to their office which is less and less",
    "start": "1540559",
    "end": "1545960"
  },
  {
    "text": "of a of An Occurrence these days anyways so what we're going to do is we're going",
    "start": "1545960",
    "end": "1551419"
  },
  {
    "text": "to take that IP address and if you see there I'm creating an environment variable that just captures the IP",
    "start": "1551419",
    "end": "1556580"
  },
  {
    "text": "address of that interface and assigns it to that environment variable and we can see that you know it's reflected here",
    "start": "1556580",
    "end": "1561919"
  },
  {
    "text": "and we're going to quickly create a static route so in this static route I call on the",
    "start": "1561919",
    "end": "1567380"
  },
  {
    "text": "command iprout add so I'm adding a route to that table I'm specifying the",
    "start": "1567380",
    "end": "1572480"
  },
  {
    "text": "destination network of 10.13.37.0 24. via or through the IP address I just you",
    "start": "1572480",
    "end": "1580039"
  },
  {
    "text": "know assigned to that that environment variable so now you can see that that new network is in there",
    "start": "1580039",
    "end": "1586520"
  },
  {
    "text": "this reference here that you see under Gateway is a reference to the interface that it's exiting on but we're not going",
    "start": "1586520",
    "end": "1591919"
  },
  {
    "text": "to do anything with this because this is going to go nowhere it doesn't actually go to any you know it doesn't even go to this network so we're going to go ahead",
    "start": "1591919",
    "end": "1597799"
  },
  {
    "text": "and delete this and we're actually now going to proceed to build two different networks and wrap",
    "start": "1597799",
    "end": "1604220"
  },
  {
    "text": "between them so if you copy this command block here it's pretty long I'm going to clear my",
    "start": "1604220",
    "end": "1609620"
  },
  {
    "text": "screen so you have some full real estate here let's walk through this quickly so I'm creating two Network namespaces",
    "start": "1609620",
    "end": "1616700"
  },
  {
    "text": "one is called sleep and one is called web app I'm effectively simulating a",
    "start": "1616700",
    "end": "1622460"
  },
  {
    "text": "virtual network with each namespace and within each virtual Network I can assign",
    "start": "1622460",
    "end": "1628460"
  },
  {
    "text": "a subnet address and through that subnet address as long as I have the right routing in place I can communicate with",
    "start": "1628460",
    "end": "1634520"
  },
  {
    "text": "each other but what we're going to do initially is create the namespaces assign them interfaces assign those",
    "start": "1634520",
    "end": "1640279"
  },
  {
    "text": "interfaces a network and then proceed to bring these interfaces online and then attempt to communicate and then we'll",
    "start": "1640279",
    "end": "1646400"
  },
  {
    "text": "see what's actually missing so if I do an ipnet NS I should see my",
    "start": "1646400",
    "end": "1651919"
  },
  {
    "text": "two namespaces are there which means things are looking good if I do an IP well you don't have to follow these",
    "start": "1651919",
    "end": "1657559"
  },
  {
    "text": "commands if you don't want to ipnet NS I'm just doing this for verification uh ipns",
    "start": "1657559",
    "end": "1663620"
  },
  {
    "text": "um IP Link I think sleep if probably that doesn't work that's okay we'll see",
    "start": "1663620",
    "end": "1669919"
  },
  {
    "text": "this right here so if I do an ipnet and that's exact oh I forgot the exact command that's",
    "start": "1669919",
    "end": "1675020"
  },
  {
    "text": "probably why exec sleep if IP Link",
    "start": "1675020",
    "end": "1685000"
  },
  {
    "text": "oh gosh okay forget about that command um let's go and run this ping command",
    "start": "1687320",
    "end": "1692480"
  },
  {
    "text": "what this ping command is going to tell me if there's actual connectivity here so ipnet and S exec by the way have you",
    "start": "1692480",
    "end": "1699620"
  },
  {
    "text": "ever used Cube cuddle exact before oh okay all right okay this is going to",
    "start": "1699620",
    "end": "1705620"
  },
  {
    "text": "come up later on okay so the network is unreachable why is the network unreachable",
    "start": "1705620",
    "end": "1712760"
  },
  {
    "text": "if you look up here and look at these address spaces I have a 10.13.37.0 25",
    "start": "1712760",
    "end": "1718580"
  },
  {
    "text": "and then I have a 10.13.37.128.25 this implies I broke down my slash 24",
    "start": "1718580",
    "end": "1726440"
  },
  {
    "text": "subnet which was 10 13 37.0 into two subnets so it was a slash 24 now it's a slash",
    "start": "1726440",
    "end": "1733279"
  },
  {
    "text": "25. every time you divide by two you're actually shrinking that Network space so",
    "start": "1733279",
    "end": "1739820"
  },
  {
    "text": "that's what I did here just you know for the sake of this example now if I try to ping you know from the web app to The",
    "start": "1739820",
    "end": "1747799"
  },
  {
    "text": "Sleep interface here it's obviously not going to go through but what we need are static routes",
    "start": "1747799",
    "end": "1753500"
  },
  {
    "text": "so those static routes the moment I add them they're effectively saying in each respective namespace if you need to get",
    "start": "1753500",
    "end": "1760039"
  },
  {
    "text": "to this other namespace in this other network here's the route that you will take now if you notice here I'm actually",
    "start": "1760039",
    "end": "1766700"
  },
  {
    "text": "specifying the device interface I primarily do that because let's assume I don't know the IP address and I just I",
    "start": "1766700",
    "end": "1772340"
  },
  {
    "text": "know the interface that it's going to exit on I know it's connected to the destination Network this should work just fine",
    "start": "1772340",
    "end": "1777980"
  },
  {
    "text": "so I've gone ahead and plugged in those routes let's go verify",
    "start": "1777980",
    "end": "1783980"
  },
  {
    "text": "that those routes exist and if you see here right so this is the",
    "start": "1783980",
    "end": "1789080"
  },
  {
    "text": "first namespace IP now sorry this is the Sleep name space you can see that the network is present and we have",
    "start": "1789080",
    "end": "1796520"
  },
  {
    "text": "um you know we're actually going through the network namespace now what's interesting here is that it",
    "start": "1796520",
    "end": "1802340"
  },
  {
    "text": "doesn't have a true default gateway because we're not going outside to another router but we are using our local interface to be able to route to",
    "start": "1802340",
    "end": "1808640"
  },
  {
    "text": "this other network now if I try this ping what do you think is going to happen I mean yeah you see that it works",
    "start": "1808640",
    "end": "1813799"
  },
  {
    "text": "right but it should work it should work because we do have routing between the two we have the routes that are present",
    "start": "1813799",
    "end": "1820039"
  },
  {
    "text": "that are necessary to be able to communicate to these destination Networks now before I proceed one thing I need to",
    "start": "1820039",
    "end": "1828320"
  },
  {
    "text": "point out is if you try to do this at scale by the way this is the basis for container networking if you try to do this at scale",
    "start": "1828320",
    "end": "1834440"
  },
  {
    "text": "you will fall over primarily because when you think about how many pods you run in your environment you can't do",
    "start": "1834440",
    "end": "1840200"
  },
  {
    "text": "this for every single pod in your kubernetes cluster so you use tools like let's say the psyllium cni to be able to",
    "start": "1840200",
    "end": "1847220"
  },
  {
    "text": "provision IP addresses for pods that come online and then maintain a database of who owns that IP address so that this",
    "start": "1847220",
    "end": "1853640"
  },
  {
    "text": "also applies for other security needs and uses however it also provides an IP address",
    "start": "1853640",
    "end": "1858919"
  },
  {
    "text": "management so every time a pod disappears well that IP does go back into that pool and can be used",
    "start": "1858919",
    "end": "1864140"
  },
  {
    "text": "eventually but we don't initially do it because for security reasons obviously all right so it works we know that",
    "start": "1864140",
    "end": "1871340"
  },
  {
    "text": "pinging is working between two different Networks let's proceed to DNS I'm not going to cover bgp I kind of talked about it but",
    "start": "1871340",
    "end": "1877820"
  },
  {
    "text": "let's go to DNS all right while the module is loading",
    "start": "1877820",
    "end": "1884120"
  },
  {
    "text": "bgp is such a useful protocol if you have ever configured it you know that",
    "start": "1884120",
    "end": "1889279"
  },
  {
    "text": "firewalls tend to play havoc on bgp connectivity because bgp uses TCP Port",
    "start": "1889279",
    "end": "1894559"
  },
  {
    "text": "179 to form neighbor relationships with other bgp speakers now in the world of",
    "start": "1894559",
    "end": "1900200"
  },
  {
    "text": "bgp you'll notice that all it takes especially in the internet one misconfiguration poison routes to be",
    "start": "1900200",
    "end": "1906620"
  },
  {
    "text": "injected into the you know the public internet and then make certain websites unavailable we've seen it happen before",
    "start": "1906620",
    "end": "1912380"
  },
  {
    "text": "and we've seen how it contributes to the lack of DNS if I can't get to the",
    "start": "1912380",
    "end": "1918260"
  },
  {
    "text": "network where DNS lives then I don't have any resolution I'm not getting to that website and this is critical this",
    "start": "1918260",
    "end": "1924620"
  },
  {
    "text": "is important because when you think about what actually goes on with the DNS and routing component",
    "start": "1924620",
    "end": "1931940"
  },
  {
    "text": "when I issue a command or so let's just let's just open up a web browser and let's go to httpbin.org what actually",
    "start": "1931940",
    "end": "1938659"
  },
  {
    "text": "has to happen first is httpbin.org has to be translated into an",
    "start": "1938659",
    "end": "1944539"
  },
  {
    "text": "IP address remember the phone book analogy right you don't want to remember everyone's phone number so you have a",
    "start": "1944539",
    "end": "1949700"
  },
  {
    "text": "phone book with their contact information this is the same case for DNS now with respect to DNS we have a",
    "start": "1949700",
    "end": "1957260"
  },
  {
    "text": "very interesting flow and most of the time you'll see this in a lot of environments you might even use like a",
    "start": "1957260",
    "end": "1962480"
  },
  {
    "text": "DNS cloud service or something to provide you the ability to create records",
    "start": "1962480",
    "end": "1968360"
  },
  {
    "text": "but in this flow you have a network let's say that you've built in your data center and you'll you might have",
    "start": "1968360",
    "end": "1973820"
  },
  {
    "text": "something of a local DNS server that will will actually respond",
    "start": "1973820",
    "end": "1979880"
  },
  {
    "text": "to immediate queries right because it's going to have a bunch of cached entries and those entries are going to say hey I",
    "start": "1979880",
    "end": "1987200"
  },
  {
    "text": "know how to you know what this IP address is and once you have that IP address well now your network stack can",
    "start": "1987200",
    "end": "1993140"
  },
  {
    "text": "figure out how to route to that IP address so HTTP bin.org translates into an IP",
    "start": "1993140",
    "end": "1998240"
  },
  {
    "text": "address which we you know need to figure out how to get to so we're going to use routers in between to get there so",
    "start": "1998240",
    "end": "2004240"
  },
  {
    "text": "without DNS this is going to be a problem because we can't translate that name and we ultimately can't get to that",
    "start": "2004240",
    "end": "2009340"
  },
  {
    "text": "destination but in this you know in this flow there's actually a few types of DNS servers there is the DNS resolver",
    "start": "2009340",
    "end": "2017559"
  },
  {
    "text": "and that's that immediate server that you'll probably assign to your hosts or your endpoints and then there's the root",
    "start": "2017559",
    "end": "2023799"
  },
  {
    "text": "name server the root name server basically will will provide a resolution for the ownership",
    "start": "2023799",
    "end": "2030279"
  },
  {
    "text": "of that top level domain so let's just say you go to httpbin.org the top level domain is dot org",
    "start": "2030279",
    "end": "2036399"
  },
  {
    "text": "so dot org means I have to figure out you know if I go to this top level domain server what is it going to tell",
    "start": "2036399",
    "end": "2042519"
  },
  {
    "text": "me who is it going to tell me to go to so once I figure out the top level",
    "start": "2042519",
    "end": "2047740"
  },
  {
    "text": "domain server from that root name server that top level domain server will actually tell me the translation of",
    "start": "2047740",
    "end": "2054658"
  },
  {
    "text": "httpin.org because in dot org or in that you know TLD server is where that entry",
    "start": "2054659",
    "end": "2060099"
  },
  {
    "text": "lives now this is generally a public server or a public DNS server that some",
    "start": "2060099",
    "end": "2065200"
  },
  {
    "text": "organizations might have access to to make entries into you might roll your own DNS server that you contain and you",
    "start": "2065200",
    "end": "2071260"
  },
  {
    "text": "manage and you lifecycle as well now what's interesting is that there's a",
    "start": "2071260",
    "end": "2077080"
  },
  {
    "text": "very there's one more component called the authoritative name server and it's actually the final stop which actually passes all this information back to your",
    "start": "2077080",
    "end": "2083800"
  },
  {
    "text": "your local DNS server and says hey this is the actual translation that you need",
    "start": "2083800",
    "end": "2089260"
  },
  {
    "text": "to use to pass to your DNS server and that gets passed along to the host when the host knows this translation now",
    "start": "2089260",
    "end": "2095560"
  },
  {
    "text": "it's able to go out and say look all right let's get to this destination hey router can you take me to 1.2.3.4 the",
    "start": "2095560",
    "end": "2102339"
  },
  {
    "text": "router says yes I know how to do that and then we'll take you there you'll get your response and everything will be good",
    "start": "2102339",
    "end": "2107680"
  },
  {
    "text": "now this is why you know you need to have Network accessibility or access to",
    "start": "2107680",
    "end": "2113740"
  },
  {
    "text": "this DNS server regardless of where it is if you don't I mean what you normally do in production environments is always",
    "start": "2113740",
    "end": "2119560"
  },
  {
    "text": "have redundancies so if you don't have your primary server your secondary will respond and provide you know answers to",
    "start": "2119560",
    "end": "2125440"
  },
  {
    "text": "any sort of DNS queries that you have now when working with DNS servers there are a few types of records that you",
    "start": "2125440",
    "end": "2131920"
  },
  {
    "text": "might encounter and you might work with one is known as the a record which is four ipv4 addressing so if you have an",
    "start": "2131920",
    "end": "2138640"
  },
  {
    "text": "IP address and you want to create a hostname entry in a DNS server you'll use an a record and then you'll also use",
    "start": "2138640",
    "end": "2145480"
  },
  {
    "text": "something called a PTR record or a pointer record that actually does the reverse so you have a host name you want",
    "start": "2145480",
    "end": "2151000"
  },
  {
    "text": "to Define its IP address in certain situations you may not see PTR records on DNS servers primarily because",
    "start": "2151000",
    "end": "2157720"
  },
  {
    "text": "you might have hosts that are using load balancers and you might have multiple load balanced IPS that uh",
    "start": "2157720",
    "end": "2163839"
  },
  {
    "text": "might be round robin or this might be geolocated and based off of where you",
    "start": "2163839",
    "end": "2169119"
  },
  {
    "text": "are you might resolve based off of the DNS server that's close by there are a few other types there's the",
    "start": "2169119",
    "end": "2174520"
  },
  {
    "text": "quad a record and it does the exact same thing except this is for IPv6 and oh by the way I know I didn't talk about ipv4",
    "start": "2174520",
    "end": "2181060"
  },
  {
    "text": "versus IPv6 but let me give you a quick you know note about it so",
    "start": "2181060",
    "end": "2186460"
  },
  {
    "text": "about like I don't know 20 years ago we started to realize that we were hitting this public addressing IPv6 ipv4",
    "start": "2186460",
    "end": "2193660"
  },
  {
    "text": "exhaustion meaning we were running out of public ipv4 addresses so we decided",
    "start": "2193660",
    "end": "2198760"
  },
  {
    "text": "to take the initiative well a bunch of bodies of orgs actually decided to take the initiative to build out another IP",
    "start": "2198760",
    "end": "2206440"
  },
  {
    "text": "stack called IPv6 which generated you know a gazillion addresses and made them",
    "start": "2206440",
    "end": "2212800"
  },
  {
    "text": "you know all routable and they designed it in such a way that basically every one of you could have I don't know how",
    "start": "2212800",
    "end": "2218800"
  },
  {
    "text": "many multiple trillions of addresses if you wanted to to assign them to whatever you want but this was an excellent fit",
    "start": "2218800",
    "end": "2225760"
  },
  {
    "text": "for the fact that all of our devices were growing we were seeing so many more devices on our home network if you think",
    "start": "2225760",
    "end": "2232119"
  },
  {
    "text": "about all those containers yeah they need IP addresses however the reason why adoption has been",
    "start": "2232119",
    "end": "2237820"
  },
  {
    "text": "massively slow is because of those Band-Aid Solutions we stuck on top how many of you are familiar with network",
    "start": "2237820",
    "end": "2243520"
  },
  {
    "text": "address translation that is the reason why and we still use",
    "start": "2243520",
    "end": "2248619"
  },
  {
    "text": "this today even in kubernetes as funny as that sounds I will say though in kubernetes you do have the dual stack",
    "start": "2248619",
    "end": "2254619"
  },
  {
    "text": "functionality so you can do ipv4 and IPv6 but this just gives you a bit of context as to where we are in this space",
    "start": "2254619",
    "end": "2260640"
  },
  {
    "text": "you might find a lot of websites are actually using IPv6 today but also still you know support ipv4 primarily because",
    "start": "2260640",
    "end": "2268060"
  },
  {
    "text": "of some of some Legacy applications that exist out there now one more point I'll bring up is",
    "start": "2268060",
    "end": "2273760"
  },
  {
    "text": "about fully qualified domain names a fully qualified domain name is the complete path for that hostname so when",
    "start": "2273760",
    "end": "2281619"
  },
  {
    "text": "I go to httbin.org that is the fully qualified domain name for httpman.org but I might also have maybe some other",
    "start": "2281619",
    "end": "2288760"
  },
  {
    "text": "sub services that exist in that same you know location in that same website so it",
    "start": "2288760",
    "end": "2293800"
  },
  {
    "text": "might be like version one.httpbin.org and that's the fully qualified domain name for that now when",
    "start": "2293800",
    "end": "2300160"
  },
  {
    "text": "you think about kubernetes how does kubernetes do DNS resolution so in kubernetes we deploy things to",
    "start": "2300160",
    "end": "2308020"
  },
  {
    "text": "something called namespaces and in those name spaces we'll have pods or Services now if I'm trying to access",
    "start": "2308020",
    "end": "2315400"
  },
  {
    "text": "a pod or a service within the namespace I just need to reference it by its host",
    "start": "2315400",
    "end": "2321220"
  },
  {
    "text": "name or pod name or service name but if I'm going between namespaces or from coming in from the external side I might",
    "start": "2321220",
    "end": "2327940"
  },
  {
    "text": "want to do the fully qualified domain name which is the Pod or service name the",
    "start": "2327940",
    "end": "2334260"
  },
  {
    "text": "namespace.service and then the the domain or the cluster domain it could be cluster.local it could be whatever you",
    "start": "2334260",
    "end": "2341140"
  },
  {
    "text": "call it but the reason we use this format is for remote access as well now what we're going to do is we're just",
    "start": "2341140",
    "end": "2347920"
  },
  {
    "text": "going to use two tools very quickly and you'll get a sense of how you can use DNS and and understand and interpret",
    "start": "2347920",
    "end": "2354820"
  },
  {
    "text": "certain types of data so a very useful tool what happened to my terminal",
    "start": "2354820",
    "end": "2360880"
  },
  {
    "text": "there we go very useful tool that we used to use back in the day is something called nslookup which was a very easy",
    "start": "2360880",
    "end": "2366760"
  },
  {
    "text": "way to translate a domain name or a you know hostname to an IP address",
    "start": "2366760",
    "end": "2372880"
  },
  {
    "text": "however these days we use something called dig so you basically specify the Dig command",
    "start": "2372880",
    "end": "2378880"
  },
  {
    "text": "and then you target your server and then you could basically Target a certain set",
    "start": "2378880",
    "end": "2384700"
  },
  {
    "text": "of features that you're looking for so if I just deploy the simple dig.hdb bin",
    "start": "2384700",
    "end": "2389920"
  },
  {
    "text": "I'll get similar information to what I got with nslookup and what you'll notice though is that",
    "start": "2389920",
    "end": "2396460"
  },
  {
    "text": "it's actually spitting out a lot more verbose information I can shorten this and just give me specific information",
    "start": "2396460",
    "end": "2402400"
  },
  {
    "text": "about what I'm looking for about HTTP bin but if you notice here there are four addresses there are four",
    "start": "2402400",
    "end": "2409240"
  },
  {
    "text": "a records for HTTP bin and the reason why that is is because of load balancing it round Robins the connection between",
    "start": "2409240",
    "end": "2415420"
  },
  {
    "text": "any one of those IP addresses so if any one of those were unavailable for any reason well someone else is going to",
    "start": "2415420",
    "end": "2421359"
  },
  {
    "text": "respond and this is very powerful especially when you're thinking about high availability redundancy and ensuring",
    "start": "2421359",
    "end": "2429040"
  },
  {
    "text": "resiliency in some of your applications DNS tends to be very favorable or very useful in those particular circumstances",
    "start": "2429040",
    "end": "2435940"
  },
  {
    "text": "think about disaster recovery for a second if you had two environments and you had apps behind those environments",
    "start": "2435940",
    "end": "2442660"
  },
  {
    "text": "and you wanted to ensure that your apps were all were always available well you'll have other mechanisms to proceed",
    "start": "2442660",
    "end": "2448000"
  },
  {
    "text": "with disaster recovery but that DNS preserves everything so that folks that",
    "start": "2448000",
    "end": "2453280"
  },
  {
    "text": "are you know accessing that service or that application can continue to do so with any sort of disruption",
    "start": "2453280",
    "end": "2459460"
  },
  {
    "text": "so you can use dig to shorten you know the output which will only give you let's say the a records in this case you",
    "start": "2459460",
    "end": "2465700"
  },
  {
    "text": "can use dig to basically give us you know very interesting details about who's mapping to those addresses and",
    "start": "2465700",
    "end": "2472540"
  },
  {
    "text": "what type of record you're actually using you know in this case we're using a records we could be using C names which is another which stands for",
    "start": "2472540",
    "end": "2479440"
  },
  {
    "text": "canonical name which is just a mechanism to map a hostname to another hostname or you know there are various other",
    "start": "2479440",
    "end": "2486339"
  },
  {
    "text": "things various other things too if you use dig at dig at allows you to specify",
    "start": "2486339",
    "end": "2492099"
  },
  {
    "text": "your own server your own DNS server so let's just say you're using dig without the at flag what that means is",
    "start": "2492099",
    "end": "2499900"
  },
  {
    "text": "you're just going to use the local server that you're connected to or that you know you've been assigned meaning it",
    "start": "2499900",
    "end": "2505119"
  },
  {
    "text": "could be something local to your network but sometimes that local server may not have the answer you're looking for and",
    "start": "2505119",
    "end": "2510460"
  },
  {
    "text": "you have to specify another server so if we use 8.8.8.8 which is one of Google's DNS server",
    "start": "2510460",
    "end": "2516460"
  },
  {
    "text": "servers it will resolve something that our local DNS server may not be able to",
    "start": "2516460",
    "end": "2522040"
  },
  {
    "text": "resolve so it does it in a very similar manner that the local DNS server would except",
    "start": "2522040",
    "end": "2527560"
  },
  {
    "text": "sometimes you might find that the local DNS server might take a little bit longer because it has to go through the process of discovery through the",
    "start": "2527560",
    "end": "2533680"
  },
  {
    "text": "Upstream servers that it communicates with to get that answer so there's plenty more in terms of what",
    "start": "2533680",
    "end": "2540040"
  },
  {
    "text": "we can dig into but what I really want to emphasize is that DNS is extremely",
    "start": "2540040",
    "end": "2545560"
  },
  {
    "text": "critical especially when it comes to working with containers and kubernetes using dig is an excellent tool to be",
    "start": "2545560",
    "end": "2551020"
  },
  {
    "text": "able to you know maybe decipher whether or not you're getting the right address translations from hosting to IP addresses",
    "start": "2551020",
    "end": "2557140"
  },
  {
    "text": "but what I will say is that it's not just about using dig there's so much more we're going to dig into some other areas as well",
    "start": "2557140",
    "end": "2564880"
  },
  {
    "text": "what's up yeah I'm going to dig into it now now we're going to dig into curl so",
    "start": "2564880",
    "end": "2570460"
  },
  {
    "text": "let's go ahead and move on to the next module actually before you do I will point out something about core",
    "start": "2570460",
    "end": "2577060"
  },
  {
    "text": "DNS how many of you have worked with core DNS before Perfect all right for those that haven't",
    "start": "2577060",
    "end": "2583000"
  },
  {
    "text": "core DNS is the DNS server inside of your kubernetes cluster what's really interesting is this process is automated",
    "start": "2583000",
    "end": "2589180"
  },
  {
    "text": "so you never have to sit there and configure core DNS because it comes with the control plane now anytime a service",
    "start": "2589180",
    "end": "2595300"
  },
  {
    "text": "or a pod comes online an automatic entry is created in core DNS so that it becomes referenceable across the entire",
    "start": "2595300",
    "end": "2602200"
  },
  {
    "text": "cluster so any resource that needs to know about this name translate it what not and find a way to communicate",
    "start": "2602200",
    "end": "2607660"
  },
  {
    "text": "communicate with it we'll reference chlority and S for that answer so you could try it out at home if you",
    "start": "2607660",
    "end": "2614319"
  },
  {
    "text": "wanted to just deploy accordingness as a container you can you can exec into it and then mess around with a local host file and start adding your own entries",
    "start": "2614319",
    "end": "2620980"
  },
  {
    "text": "by the way if you didn't have a DNS server every computer here has something called",
    "start": "2620980",
    "end": "2626740"
  },
  {
    "text": "a host file that host file allows you to statically assign DNS addresses this is this is",
    "start": "2626740",
    "end": "2633339"
  },
  {
    "text": "great if you're doing testing but highly dangerous if you're trying to go into production so just keep that in mind",
    "start": "2633339",
    "end": "2639160"
  },
  {
    "text": "it's it's a great tool but you know sometimes you might forget that you left an entry in there and you can't communicate with a certain resource all",
    "start": "2639160",
    "end": "2646000"
  },
  {
    "text": "right let's move on to curl and HTTP http and I need some water",
    "start": "2646000",
    "end": "2653460"
  },
  {
    "text": "all right how many of you are familiar with API Communications working with the HTTP layer and using curl",
    "start": "2654940",
    "end": "2663339"
  },
  {
    "text": "all right can I just skip this module then no okay no let's go through it very quickly so curl is an excellent utility",
    "start": "2663339",
    "end": "2669579"
  },
  {
    "text": "to be able to interact with various hdb applications and will give us different types of responses as Jason showed you",
    "start": "2669579",
    "end": "2676420"
  },
  {
    "text": "earlier we ran curl against HTTP bin and what we got as a response was an HTTP",
    "start": "2676420",
    "end": "2681940"
  },
  {
    "text": "200 success code now when it comes to working in kubernetes networking we care",
    "start": "2681940",
    "end": "2687760"
  },
  {
    "text": "so much about success codes or status codes at the HTTP layer because they give us an indication of whether or not",
    "start": "2687760",
    "end": "2694180"
  },
  {
    "text": "services are accessible or if they're rate limited or if there are too many",
    "start": "2694180",
    "end": "2699460"
  },
  {
    "text": "requests coming inbound now the HTTP layer is something that you'll",
    "start": "2699460",
    "end": "2705220"
  },
  {
    "text": "start to notice becomes much and more prevalent when you're working with a service mesh as well because that's how we interact with services and provide",
    "start": "2705220",
    "end": "2711760"
  },
  {
    "text": "policies against those services now um what what should I talk about yes",
    "start": "2711760",
    "end": "2717940"
  },
  {
    "text": "okay so with http there's a structure right you issue a message to a server and that server will",
    "start": "2717940",
    "end": "2724720"
  },
  {
    "text": "give you a response but you can actually run several different types of operations or request methods against a",
    "start": "2724720",
    "end": "2730900"
  },
  {
    "text": "server the obvious one that you probably all worked with is the get method which actually allows you to just get",
    "start": "2730900",
    "end": "2736780"
  },
  {
    "text": "information or get the output of a certain website for example there are other methods like the post method which",
    "start": "2736780",
    "end": "2742119"
  },
  {
    "text": "actually allows you to update or create resources inside of your application the put method is very similar it allows you",
    "start": "2742119",
    "end": "2748660"
  },
  {
    "text": "to update resources well and then there are a few other methods one notably the delete method with a lot which allows",
    "start": "2748660",
    "end": "2754119"
  },
  {
    "text": "you to just remove unnecessary resources why I bring this up is because when",
    "start": "2754119",
    "end": "2759339"
  },
  {
    "text": "you're starting to think about layer 7 authorization between your services you",
    "start": "2759339",
    "end": "2764740"
  },
  {
    "text": "may want to allow only get methods but disallow a delete method this is important especially as you're trying to",
    "start": "2764740",
    "end": "2771460"
  },
  {
    "text": "establish your security posture in your environment and you start implementing policies to ensure only certain Services",
    "start": "2771460",
    "end": "2776680"
  },
  {
    "text": "can communicate with others and only run certain actions on these others you likely will use something Beyond a",
    "start": "2776680",
    "end": "2783339"
  },
  {
    "text": "service mesh to help with the policy development you might have heard of oppa or styrra the the company that helps",
    "start": "2783339",
    "end": "2790060"
  },
  {
    "text": "with oppa and they provide the authorization mechanisms and engines to allow you to you know get really",
    "start": "2790060",
    "end": "2795940"
  },
  {
    "text": "granular with your security anyways enough about that now there are various status codes there",
    "start": "2795940",
    "end": "2803680"
  },
  {
    "text": "is the 100 level status codes which provides you just informational responses there's the 200 status codes",
    "start": "2803680",
    "end": "2810339"
  },
  {
    "text": "which just tells you that the request was you know successful and you will receive a response there are the 300",
    "start": "2810339",
    "end": "2817359"
  },
  {
    "text": "codes which actually tells you that your request is being redirected to another system or another server or maybe",
    "start": "2817359",
    "end": "2823900"
  },
  {
    "text": "through a proxy the 400 status codes are client error codes now interestingly enough these are",
    "start": "2823900",
    "end": "2830020"
  },
  {
    "text": "the messages that we return back to a client when we want to disallow something or when the client is unable",
    "start": "2830020",
    "end": "2835780"
  },
  {
    "text": "to you know let's say find a website you've ever heard of the 404 not found",
    "start": "2835780",
    "end": "2840880"
  },
  {
    "text": "that's one of a CL that's one of the client-side messages that you would receive if a particular server or a",
    "start": "2840880",
    "end": "2846819"
  },
  {
    "text": "website was inaccessible and that could be due to a number of things that could be due to a lack of network connectivity that could be due to DNS not resolving",
    "start": "2846819",
    "end": "2854579"
  },
  {
    "text": "but it's probably something on the client's side now when you receive a 500 response",
    "start": "2854579",
    "end": "2862180"
  },
  {
    "text": "chances are it's the server that's issuing a response saying this resource is not accessible or there's something",
    "start": "2862180",
    "end": "2868300"
  },
  {
    "text": "there's a problem trying to access this particular resource so I've listed out a bunch of different",
    "start": "2868300",
    "end": "2874780"
  },
  {
    "text": "status codes that you might encounter some of the more notable ones that you'll see is a 401 unauthorized a 403",
    "start": "2874780",
    "end": "2881200"
  },
  {
    "text": "Forbidden oh and a 403 Forbidden is usually tied with a policy that you might have put in place to disallow a",
    "start": "2881200",
    "end": "2887740"
  },
  {
    "text": "certain resource from accessing another resource based off of a certain attribute so what's interesting is if you go",
    "start": "2887740",
    "end": "2894040"
  },
  {
    "text": "through this list you'll start to realize that some of these status codes will show up when you're working with",
    "start": "2894040",
    "end": "2899380"
  },
  {
    "text": "service mesh Technologies or API Gateway Technologies now we're just going to basically use",
    "start": "2899380",
    "end": "2906280"
  },
  {
    "text": "the curl utility but I have a very strong feeling you know a lot of you have used curl before so I'm not going",
    "start": "2906280",
    "end": "2912700"
  },
  {
    "text": "to you know get too deep into this but curl is a great utility to interact with the server it basically allows us to",
    "start": "2912700",
    "end": "2918579"
  },
  {
    "text": "provide various options provide authentication against maybe a secure server so we can issue let's say a",
    "start": "2918579",
    "end": "2924040"
  },
  {
    "text": "certificate in as we're making that request and if that certificate is a valid one then we're able to you know",
    "start": "2924040",
    "end": "2930819"
  },
  {
    "text": "authenticate into the system and run whatever action we want to but there are common flags that you'll",
    "start": "2930819",
    "end": "2937000"
  },
  {
    "text": "use right you'll use the capital sorry the dash capital x which allows you to specify the type of method that you're",
    "start": "2937000",
    "end": "2942520"
  },
  {
    "text": "going to use you might add a dash H or Capital H which is a header and what you",
    "start": "2942520",
    "end": "2948460"
  },
  {
    "text": "might be throwing in there is like an attribute that attribute might be like I'm going to specify this key value",
    "start": "2948460",
    "end": "2954099"
  },
  {
    "text": "which might be user equals Andrea or user equals Json and based off of that",
    "start": "2954099",
    "end": "2959920"
  },
  {
    "text": "Header information on the policy side if you could recognize that header that you've just placed in your request then",
    "start": "2959920",
    "end": "2965560"
  },
  {
    "text": "based off of that policy the traffic or the request might be allowed or disallowed there are several other options too for",
    "start": "2965560",
    "end": "2973000"
  },
  {
    "text": "example a dash K where you're trying to make an insecure request to a secured resource and if that resource allows it",
    "start": "2973000",
    "end": "2978880"
  },
  {
    "text": "then for sure you can get through so we're going to curl ipinfo.io and just see what what it gives us and if",
    "start": "2978880",
    "end": "2986079"
  },
  {
    "text": "you can see here it gives us a good bit of information for example it gives us the IP address that is owned by that",
    "start": "2986079",
    "end": "2991660"
  },
  {
    "text": "hostname where it's located and several other bits and pieces that you know",
    "start": "2991660",
    "end": "2996880"
  },
  {
    "text": "maybe might be useful to us to help us determine if something is going wrong in the in the environment",
    "start": "2996880",
    "end": "3002579"
  },
  {
    "text": "so if I run this second command this curl command which has a get method in it",
    "start": "3002579",
    "end": "3008400"
  },
  {
    "text": "and I apply it to httpbin.org and use the header accept",
    "start": "3008400",
    "end": "3013740"
  },
  {
    "text": "application forward slash Json this is going to work I think",
    "start": "3013740",
    "end": "3023280"
  },
  {
    "text": "I could be dealing with the connectivity issue okay maybe that didn't work",
    "start": "3023280",
    "end": "3030799"
  },
  {
    "text": "ah that's because all of you are trying to access it it's receiving too many requests what is it HTTP 429",
    "start": "3033780",
    "end": "3040560"
  },
  {
    "text": "yes that's too much man all right we'll skip that one we'll try this test domain",
    "start": "3040560",
    "end": "3046160"
  },
  {
    "text": "one thing with this curl command that I'm going to run with the capital O is",
    "start": "3046160",
    "end": "3051180"
  },
  {
    "text": "it allows me to download a file and output it to whatever download folder that I've specified so if you see here I",
    "start": "3051180",
    "end": "3058140"
  },
  {
    "text": "downloaded test file.tar.gz I can do this with another flag download the same",
    "start": "3058140",
    "end": "3063720"
  },
  {
    "text": "file but the lowercase o allows me to rename the file as I'm downloading it so",
    "start": "3063720",
    "end": "3068819"
  },
  {
    "text": "if you think about it let's say you're downloading a binary let's say it's doctl and you want to call it something else this might be useful for that",
    "start": "3068819",
    "end": "3076920"
  },
  {
    "text": "and that just brings us to the very last section about HTTP 2 versus sorry verse one versus two versus three now HTTP one",
    "start": "3076920",
    "end": "3085260"
  },
  {
    "text": "was one of the first protocols that allows us allowed us to communicate across the internet between client and",
    "start": "3085260",
    "end": "3090359"
  },
  {
    "text": "server but we had to take that a step further and Implement security features and capabilities basically",
    "start": "3090359",
    "end": "3095640"
  },
  {
    "text": "Authentication at the next uh you know whenever we were interacting with web servers so this is",
    "start": "3095640",
    "end": "3101040"
  },
  {
    "text": "where we implemented TLS or SSL and then TLS and that brought us to http 2. now",
    "start": "3101040",
    "end": "3107160"
  },
  {
    "text": "HTTP 1 and 2 are based off of the TCP protocol I didn't talk about TCP or UDP",
    "start": "3107160",
    "end": "3113579"
  },
  {
    "text": "yet so let me bring it up now TCP and UDP are two protocols that live",
    "start": "3113579",
    "end": "3118800"
  },
  {
    "text": "at the transport layer of the OSI model what is going on between TCP and UDP is",
    "start": "3118800",
    "end": "3125099"
  },
  {
    "text": "that we're really you know shooting traffic over on certain port numbers but they're it's very distinct between the",
    "start": "3125099",
    "end": "3130800"
  },
  {
    "text": "two TCP is something called connection oriented which means when it forms a",
    "start": "3130800",
    "end": "3135960"
  },
  {
    "text": "connection with a server from a client it's looking for an acknowledgment the",
    "start": "3135960",
    "end": "3141359"
  },
  {
    "text": "server will send some data it'll look for its acknowledgment and then this will be you know a repetitive process to",
    "start": "3141359",
    "end": "3147300"
  },
  {
    "text": "make sure that that communication is ready to go in UDP however we just you know we fire",
    "start": "3147300",
    "end": "3153900"
  },
  {
    "text": "off information and packets and we keep going and the the interesting thing about that is the receiver or the server",
    "start": "3153900",
    "end": "3160200"
  },
  {
    "text": "on the other end doesn't care right it doesn't know it doesn't acknowledge and this is very fast so you have a system",
    "start": "3160200",
    "end": "3167760"
  },
  {
    "text": "that acknowledges every single flow but is slow and then you have another system that just keeps firing away and",
    "start": "3167760",
    "end": "3175500"
  },
  {
    "text": "effectively cares about speed now why this is important is there are a lot of applications that are susceptible",
    "start": "3175500",
    "end": "3182460"
  },
  {
    "text": "to you know latency errors whatever that might be going on in the network and TCP",
    "start": "3182460",
    "end": "3187680"
  },
  {
    "text": "might be an excellent fit for some non-you know critical traffic now",
    "start": "3187680",
    "end": "3194640"
  },
  {
    "text": "when you look on the other hand if I'm having a voice conversation we're live streaming now so you can't acknowledge",
    "start": "3194640",
    "end": "3200940"
  },
  {
    "text": "every single packet that you send because the receiver whoever's watching on the other end will see that",
    "start": "3200940",
    "end": "3206520"
  },
  {
    "text": "conversation be very jumbled up or garbled up or whatever because and also very slow because it's always waiting",
    "start": "3206520",
    "end": "3213180"
  },
  {
    "text": "for an acknowledgment whereas if I use UDP I keep firing away my video packets and the receiver will receive it now",
    "start": "3213180",
    "end": "3219480"
  },
  {
    "text": "there's something else that's taken care of it at the higher level to make sure and guaranteed delivery we're not going to get into that now but I bring this up",
    "start": "3219480",
    "end": "3225900"
  },
  {
    "text": "because when we think about the next generation of HTTP or HTTP 3 we actually",
    "start": "3225900",
    "end": "3232680"
  },
  {
    "text": "use UDP and a higher level protocol to guarantee delivery so UDP will optimize",
    "start": "3232680",
    "end": "3238440"
  },
  {
    "text": "the flow of traffic will optimize how and by the way Jason made this diagram it's a fantastic one so please give them",
    "start": "3238440",
    "end": "3243720"
  },
  {
    "text": "a thanks and I you know clap your hands at the very end there you go let's clap yeah ah all right so I'm not going to dig into",
    "start": "3243720",
    "end": "3251760"
  },
  {
    "text": "all of these different these flows here but the reason why we use UDP is because",
    "start": "3251760",
    "end": "3256800"
  },
  {
    "text": "it's not connection oriented it moves very quickly and allows us to move data quickly between server and client",
    "start": "3256800",
    "end": "3263480"
  },
  {
    "text": "Additionally the higher level protocols that exist something called quick allow for that guaranteed delivery altogether",
    "start": "3263480",
    "end": "3270119"
  },
  {
    "text": "and then furthermore there is some inherent security that's built into HTTP 3 and the quick protocol so you start to",
    "start": "3270119",
    "end": "3277200"
  },
  {
    "text": "you know be less concerned about things like encryption and identity and whatnot although they're still important as you",
    "start": "3277200",
    "end": "3282480"
  },
  {
    "text": "go along and that brings us to the end of the HTTP module now I'm going to pass it back to Jason let me you know get",
    "start": "3282480",
    "end": "3288359"
  },
  {
    "text": "some water and we're going to pass it to him so he can talk about load balancers firewalls and gateways yeah now we're",
    "start": "3288359",
    "end": "3294059"
  },
  {
    "text": "really going to start stress testing our VMS in our Network so this is where everything breaks",
    "start": "3294059",
    "end": "3299520"
  },
  {
    "text": "um and hopefully not can you switch it back oh that's okay",
    "start": "3299520",
    "end": "3306839"
  },
  {
    "text": "I'm a Windows user and we're doing it on his laptop",
    "start": "3306839",
    "end": "3311960"
  },
  {
    "text": "they do exist um in the kubernetes space okay so this session is going to this",
    "start": "3312359",
    "end": "3320040"
  },
  {
    "text": "which one okay so this session is going to cover firewalls load balancers and proxies",
    "start": "3320040",
    "end": "3326400"
  },
  {
    "text": "it's really dense but the main motivation here is that over the last couple years I've been diving deeper and",
    "start": "3326400",
    "end": "3333660"
  },
  {
    "text": "deeper into how kubernetes is making networking available you've all heard that Q proxy can be replaced Q proxy in",
    "start": "3333660",
    "end": "3343380"
  },
  {
    "text": "order to understand how Q proxy can be replaced you really need to understand what it's doing in the first place and",
    "start": "3343380",
    "end": "3349859"
  },
  {
    "text": "how the underlying network is happening amongst your containers amongst your your various workloads",
    "start": "3349859",
    "end": "3355940"
  },
  {
    "text": "the three different sections here firewalls load balancers and proxies are",
    "start": "3355940",
    "end": "3361440"
  },
  {
    "text": "all listed in this module because they do have some underlying and overlapping Technologies",
    "start": "3361440",
    "end": "3367020"
  },
  {
    "text": "but the main idea here is that we've established how to make a connection we know that we can communicate across",
    "start": "3367020",
    "end": "3373619"
  },
  {
    "text": "networks between different services in in a very distributed way but at this",
    "start": "3373619",
    "end": "3378900"
  },
  {
    "text": "point a lot of what we've taught what we've talked about up to this point isn't",
    "start": "3378900",
    "end": "3384960"
  },
  {
    "text": "isn't providing us much security it's not providing it's too much reliability those are things that we need in order",
    "start": "3384960",
    "end": "3391740"
  },
  {
    "text": "to make those x amount of nines or however much uptime you need in your environment",
    "start": "3391740",
    "end": "3397140"
  },
  {
    "text": "we'll start with security and security with firewalls here specifically",
    "start": "3397140",
    "end": "3404000"
  },
  {
    "text": "and the technology that we're going to use I'll make this a little bit bigger is going to be IP",
    "start": "3405240",
    "end": "3411720"
  },
  {
    "text": "tables no surprise here um we we could eventually talk about NF tables",
    "start": "3411720",
    "end": "3416819"
  },
  {
    "text": "or we could talk about the future but let's talk about what we have available now if you spin up a a kind cluster or a",
    "start": "3416819",
    "end": "3423240"
  },
  {
    "text": "k3d cluster chances are you're going to be messing with this the important facts about iptables are",
    "start": "3423240",
    "end": "3430500"
  },
  {
    "text": "there are five tables the filter table the NAT table the mango table the raw table and the security table",
    "start": "3430500",
    "end": "3437579"
  },
  {
    "text": "each of those is going to have a different a different Focus but you do have the ability to interact with any of",
    "start": "3437579",
    "end": "3443819"
  },
  {
    "text": "them and it can make everything kind of a jumbled mess and to show it as an",
    "start": "3443819",
    "end": "3449280"
  },
  {
    "text": "example of that jumbled mess this is a generalized flow of how",
    "start": "3449280",
    "end": "3454680"
  },
  {
    "text": "traffic is going to go through IP chains and iptables um you can see on the top in the most of",
    "start": "3454680",
    "end": "3462780"
  },
  {
    "text": "the colored boxes there's going to be the name of the table that you're in",
    "start": "3462780",
    "end": "3468300"
  },
  {
    "text": "um you can see in the green box we have the raw table in the blue box the mangle table and the reddish orangish box the",
    "start": "3468300",
    "end": "3475440"
  },
  {
    "text": "NAT table and the purple table the filter table and then all the rest of them are kind of external services or",
    "start": "3475440",
    "end": "3482099"
  },
  {
    "text": "external parts of the networking sac underneath in the the box that's",
    "start": "3482099",
    "end": "3487800"
  },
  {
    "text": "surrounded by everything you can see the chain that you're going through um pre-routing post routing input",
    "start": "3487800",
    "end": "3495059"
  },
  {
    "text": "um there's a couple other output and",
    "start": "3495059",
    "end": "3500460"
  },
  {
    "text": "forward um so that fundamentally is what we're going to see",
    "start": "3500460",
    "end": "3505740"
  },
  {
    "text": "um in our Linux environment and there's going to be several things that we're injecting to make that flow even more",
    "start": "3505740",
    "end": "3511140"
  },
  {
    "text": "complicated in order to support kubernetes or to support containers",
    "start": "3511140",
    "end": "3516740"
  },
  {
    "text": "so the first thing I want to make this as practical as possible and so the first thing we're going to do is we're",
    "start": "3521040",
    "end": "3526440"
  },
  {
    "text": "going to install Docker and we'll see that Docker itself is going to start",
    "start": "3526440",
    "end": "3532020"
  },
  {
    "text": "adding things to that to those Staples",
    "start": "3532020",
    "end": "3536000"
  },
  {
    "text": "shouldn't take too long I know we're all spamming the network probably but um I'll clear that",
    "start": "3541500",
    "end": "3546960"
  },
  {
    "text": "clear this out and then we'll run the IP tables selecting the filter table in this case",
    "start": "3546960",
    "end": "3552839"
  },
  {
    "text": "we could select any of the tables and see what's there we're going to list everything and we're going to list things in with numerical order",
    "start": "3552839",
    "end": "3561480"
  },
  {
    "text": "and this is pretty small but I'll scroll through some of it",
    "start": "3561480",
    "end": "3567020"
  },
  {
    "text": "so from the top of the command you can see that we have the input chain forward",
    "start": "3568079",
    "end": "3573359"
  },
  {
    "text": "chain the output chain you can see that they are now Docker labels for targets",
    "start": "3573359",
    "end": "3578819"
  },
  {
    "text": "for some of the various destinations we haven't actually installed any of any",
    "start": "3578819",
    "end": "3584819"
  },
  {
    "text": "Docker containers we will in a second here but you can see that there's also a couple different changes in the filter",
    "start": "3584819",
    "end": "3590099"
  },
  {
    "text": "table here that are basically just sending everything back dropping some things here",
    "start": "3590099",
    "end": "3596539"
  },
  {
    "text": "we scroll down we are going to add three different containers those containers",
    "start": "3599640",
    "end": "3604680"
  },
  {
    "text": "are just an echo container they gives me some flexibility on how we can actually",
    "start": "3604680",
    "end": "3610099"
  },
  {
    "text": "confirm which container is being hit without having to to go into network name spaces or do anything like that",
    "start": "3610099",
    "end": "3616859"
  },
  {
    "text": "open up those hopefully we should be able to pull them down pretty quickly",
    "start": "3616859",
    "end": "3623160"
  },
  {
    "text": "um and I run in the same command that we're going to look at now the NAT table",
    "start": "3623160",
    "end": "3628619"
  },
  {
    "text": "and we should see additional rules created for those containers in the NAT table",
    "start": "3628619",
    "end": "3634140"
  },
  {
    "text": "and as expected we can see the lower three are correlating with the specific",
    "start": "3634140",
    "end": "3640020"
  },
  {
    "text": "applications that we just deployed uh 172 1702 three four and those are all",
    "start": "3640020",
    "end": "3646619"
  },
  {
    "text": "going on the destination port 80. there's a lot of Ip information that I'm skipping over temporarily because the",
    "start": "3646619",
    "end": "3653579"
  },
  {
    "text": "main idea here is that I want to show this remember is the firewalling section that we have the ability to direct",
    "start": "3653579",
    "end": "3660540"
  },
  {
    "text": "traffic and to reject traffic as necessary",
    "start": "3660540",
    "end": "3665119"
  },
  {
    "text": "so just to check that everything works we are going to run some curl commands",
    "start": "3667680",
    "end": "3672780"
  },
  {
    "text": "again here we can see we're going against each one of the different containers 8001 8002 8003",
    "start": "3672780",
    "end": "3679740"
  },
  {
    "text": "and this I will note for everybody if you are following along um pay attention pay close attention to",
    "start": "3679740",
    "end": "3685859"
  },
  {
    "text": "the um the hashtag comment on the top otherwise the command will give you unexpected output you might start",
    "start": "3685859",
    "end": "3691319"
  },
  {
    "text": "applying iptables to different servers so just be aware that wherever wherever you need to run the command is",
    "start": "3691319",
    "end": "3697740"
  },
  {
    "text": "identified in the command so in this case the output of the",
    "start": "3697740",
    "end": "3704640"
  },
  {
    "text": "command of each of the commands is to dump the port that it's listening on in this case 8001 8002 8003 go to those",
    "start": "3704640",
    "end": "3712740"
  },
  {
    "text": "respective ports all right so now we actually want to get",
    "start": "3712740",
    "end": "3720059"
  },
  {
    "text": "our hands dirty we want to modify some of the the information based on the",
    "start": "3720059",
    "end": "3725160"
  },
  {
    "text": "docker containers we have and so what we're going to do is we're going to run",
    "start": "3725160",
    "end": "3731160"
  },
  {
    "text": "and we're going to add a knife tables rule we're going to reject anything that's",
    "start": "3731160",
    "end": "3737700"
  },
  {
    "text": "going to destination Port 5678 with the protocol TCP and we're actually going to",
    "start": "3737700",
    "end": "3743339"
  },
  {
    "text": "replace the first rule in the docker user table remember running this from source so",
    "start": "3743339",
    "end": "3748980"
  },
  {
    "text": "make sure that you're on the source tab that has been applied there's a question there",
    "start": "3748980",
    "end": "3755940"
  },
  {
    "text": "oh you should be able to get you the microphone here quickly",
    "start": "3755940",
    "end": "3762799"
  },
  {
    "text": "all right this is from a couple can you hear me no no it's not okay",
    "start": "3764400",
    "end": "3770058"
  },
  {
    "text": "oh there you go okay hi um sorry for a couple uh steps ago when you ran the",
    "start": "3770660",
    "end": "3776760"
  },
  {
    "text": "docker command and those IP addresses added got added to the IP tables what",
    "start": "3776760",
    "end": "3781920"
  },
  {
    "text": "mechanism does that is that part of docker so Docker is we'll see this in the next",
    "start": "3781920",
    "end": "3787440"
  },
  {
    "text": "module that Docker is controlling the the IP generation and assignment okay",
    "start": "3787440",
    "end": "3795078"
  },
  {
    "text": "cool um we'll Forge ahead all right so up to this point",
    "start": "3797819",
    "end": "3804059"
  },
  {
    "text": "um thank you for the question I want to that's the first question if we have more questions I'm trying to speed through this so that we can get",
    "start": "3804059",
    "end": "3809220"
  },
  {
    "text": "everything in full View and then we'll have time for questions later but if you have anything if you please feel free to ask",
    "start": "3809220",
    "end": "3816119"
  },
  {
    "text": "all right so with that role we would expect that this Coral should not work anymore because there is",
    "start": "3816119",
    "end": "3824119"
  },
  {
    "text": "I'm not following my own rules I need to run that on destination",
    "start": "3824119",
    "end": "3830160"
  },
  {
    "text": "um and as expected because ultimately it is going to Port 5678 not the first Port 8001 but eventually it is going through",
    "start": "3830160",
    "end": "3837240"
  },
  {
    "text": "the chain um to get to where it is uh designated in the 5678 Port when we are rejecting",
    "start": "3837240",
    "end": "3843480"
  },
  {
    "text": "all of this traffic",
    "start": "3843480",
    "end": "3846079"
  },
  {
    "text": "cool um and so just to prove that um iptables is actually doing what we",
    "start": "3848700",
    "end": "3854940"
  },
  {
    "text": "wanted to do we are going to use x tables monitor and that's going to give",
    "start": "3854940",
    "end": "3860819"
  },
  {
    "text": "us more of a machine readable output but it is going to confirm the flow of the traffic",
    "start": "3860819",
    "end": "3866280"
  },
  {
    "text": "so if we go back to source",
    "start": "3866280",
    "end": "3869540"
  },
  {
    "text": "I got a clear it's not going to run anyways oops",
    "start": "3872099",
    "end": "3878779"
  },
  {
    "text": "Ctrl C okay let's run that again",
    "start": "3881819",
    "end": "3887040"
  },
  {
    "text": "we'll run the Monitor and once we have the monitor running we will be able to see that from the destination we make",
    "start": "3887040",
    "end": "3893460"
  },
  {
    "text": "that request it's going through several change and chains and it will spit out those those chains",
    "start": "3893460",
    "end": "3900319"
  },
  {
    "text": "here like I said it's more machine readable um so probably go through it on your own terminal but you can see several of the",
    "start": "3901980",
    "end": "3909900"
  },
  {
    "text": "chains being listed in all caps we can see a lot of pre-routing kind of in the center of the screen we can see there's",
    "start": "3909900",
    "end": "3916440"
  },
  {
    "text": "a jump command to Docker so it's going to jump over to Docker it's going to",
    "start": "3916440",
    "end": "3921599"
  },
  {
    "text": "leverage the docker user chain and eventually down towards the bottom if I am at the bottom of the screen we can",
    "start": "3921599",
    "end": "3927660"
  },
  {
    "text": "see that it is hitting a reject rule so just keep in mind if you do need to for some reason get in the IP tables you do",
    "start": "3927660",
    "end": "3934859"
  },
  {
    "text": "have the ability to audit it if you are in the position where you need to audit iptables though I apologize",
    "start": "3934859",
    "end": "3942500"
  },
  {
    "text": "chances are we're all here we uh we understand the containers all these abstractions are here to help us so that",
    "start": "3942839",
    "end": "3949440"
  },
  {
    "text": "we can basically just get rid of static manual manipulation and start doing things trusting the abstractions",
    "start": "3949440",
    "end": "3957839"
  },
  {
    "text": "okay so back on this host I'm going to end the the command and",
    "start": "3957839",
    "end": "3966000"
  },
  {
    "text": "then I am going to skip over the next iptables command um just because it's uh just for time",
    "start": "3966000",
    "end": "3972540"
  },
  {
    "text": "what it's going to do though is it's going to load balance the traffic to various ports and if you want to run it",
    "start": "3972540",
    "end": "3978119"
  },
  {
    "text": "you can but that brings us to the second part which is going to be load balancers iptables like I said does overlap",
    "start": "3978119",
    "end": "3984900"
  },
  {
    "text": "functionality between firewalls and load balancers because you can in fact route between different services and control",
    "start": "3984900",
    "end": "3990299"
  },
  {
    "text": "the way that they are routed but there is I don't know if it is still lesser known but there is another option the option",
    "start": "3990299",
    "end": "3997500"
  },
  {
    "text": "that you have within kubernetes for instance is going to be something called ipvs",
    "start": "3997500",
    "end": "4003799"
  },
  {
    "text": "where IP tables is going to be more of a basically just a Choose Your Own",
    "start": "4003799",
    "end": "4009559"
  },
  {
    "text": "Adventure of mapping of chains and tables and chains and tables ipvs is going to be a little bit more of a",
    "start": "4009559",
    "end": "4016220"
  },
  {
    "text": "programmatic approach it's going to leverage the actual machine to make routing decisions and it's not going to",
    "start": "4016220",
    "end": "4023119"
  },
  {
    "text": "be I guess as directly related to a map",
    "start": "4023119",
    "end": "4029318"
  },
  {
    "text": "it does give you more flexibility as far as how you can load balance because it is more programmatic",
    "start": "4029900",
    "end": "4036799"
  },
  {
    "text": "um you can see that we're in IP tables we have the ability to do round robin",
    "start": "4036799",
    "end": "4041900"
  },
  {
    "text": "um Down Below in this bulleted list we can see weighted round robin lease connection wait at least connection",
    "start": "4041900",
    "end": "4047180"
  },
  {
    "text": "locality based so on and so forth there's a lot more flexibility and ultimately depending on your scenario it",
    "start": "4047180",
    "end": "4054380"
  },
  {
    "text": "could be more performant okay but in order to leverage on the",
    "start": "4054380",
    "end": "4060380"
  },
  {
    "text": "same system if you followed along just make sure that you are cleaning up IP",
    "start": "4060380",
    "end": "4065660"
  },
  {
    "text": "tables before you start running ipvs so that we don't have overlapping rules trying to interact with one another",
    "start": "4065660",
    "end": "4072160"
  },
  {
    "text": "I think we're good because I skipped the previous command but we'll find out here in a second",
    "start": "4075980",
    "end": "4081578"
  },
  {
    "text": "as I have several other examples we need to install the command it's not built into the com it's not built into the VMS",
    "start": "4082099",
    "end": "4088039"
  },
  {
    "text": "from the start but we have instead of a chain or a rule",
    "start": "4088039",
    "end": "4093619"
  },
  {
    "text": "that's basically just one long CLI command we have a new rule that we're",
    "start": "4093619",
    "end": "4098900"
  },
  {
    "text": "deploying on source and what we're going to do is you'll see that we have several",
    "start": "4098900",
    "end": "4104480"
  },
  {
    "text": "ports they're going to load balance across the three containers that we have the two the three and the four",
    "start": "4104480",
    "end": "4109940"
  },
  {
    "text": "we'll pass that into the command and then once again we'll switch over to",
    "start": "4109940",
    "end": "4117318"
  },
  {
    "text": "the destination server and if I properly cleaned up the reject rule which I don't know if I did things should",
    "start": "4117319",
    "end": "4125600"
  },
  {
    "text": "rot success the route to each one of the different",
    "start": "4125600",
    "end": "4131179"
  },
  {
    "text": "ports or each one of the containers that corresponds with each one of the ports and on the left you can see we did a",
    "start": "4131179",
    "end": "4138020"
  },
  {
    "text": "fair bit of yeah line command line configuring but basically all I'm doing",
    "start": "4138020",
    "end": "4143960"
  },
  {
    "text": "is I'm counting how many times we get to the 8001 requests how many times we get eight thousand two and so on and so",
    "start": "4143960",
    "end": "4149060"
  },
  {
    "text": "forth so we see we we have a rough split that it's split evenly and that was what we designed from above you can see that",
    "start": "4149060",
    "end": "4156500"
  },
  {
    "text": "we have just round robin all right so if we want to clean and",
    "start": "4156500",
    "end": "4164120"
  },
  {
    "text": "show a little bit more of a weighted example this is I think the last example in this section that I'll run",
    "start": "4164120",
    "end": "4170420"
  },
  {
    "text": "we can now switch it as you might expect we can see 1 1 and 98 meaning that we're going to send the majority of the",
    "start": "4170420",
    "end": "4176719"
  },
  {
    "text": "traffic to the dot four container and hopefully that's reflected in the",
    "start": "4176719",
    "end": "4182359"
  },
  {
    "text": "request from the destination server",
    "start": "4182359",
    "end": "4185738"
  },
  {
    "text": "oops oh no we're good um and there again you see the tabular format where we are sending one to eight",
    "start": "4188660",
    "end": "4195020"
  },
  {
    "text": "thousand one one to eight thousand two and ninety eight to eight thousand three",
    "start": "4195020",
    "end": "4199960"
  },
  {
    "text": "okay um so the question I believe is uh is how we're implementing this or how are",
    "start": "4209020",
    "end": "4215719"
  },
  {
    "text": "we actually um creating a shift in the weights",
    "start": "4215719",
    "end": "4221060"
  },
  {
    "text": "okay yeah so the um if you can see on the command on the right we're passing",
    "start": "4221060",
    "end": "4226640"
  },
  {
    "text": "in the TAC W and that is uh weight flag so we're saying that the weight here is",
    "start": "4226640",
    "end": "4234020"
  },
  {
    "text": "one percent uh one percent and 98 percent um one of the things I didn't mention is",
    "start": "4234020",
    "end": "4239900"
  },
  {
    "text": "because for time again iptables does have the ability to do this but the",
    "start": "4239900",
    "end": "4244940"
  },
  {
    "text": "logical reasoning behind how you know that you're load balancing with specific weights is going to be a little bit",
    "start": "4244940",
    "end": "4250699"
  },
  {
    "text": "complicated because you are going through the chains and the tables",
    "start": "4250699",
    "end": "4256000"
  },
  {
    "text": "good question thank you all right um and so",
    "start": "4256340",
    "end": "4262699"
  },
  {
    "text": "there are additional algorithms I've listed them here direct routing tunneling nap mask rating and like I",
    "start": "4262699",
    "end": "4270440"
  },
  {
    "text": "said previously ipvs is going to be in some respects a more robust solution",
    "start": "4270440",
    "end": "4275960"
  },
  {
    "text": "But ultimately as you'll probably if you spend some time digging into psyllium you'll see that there is a another",
    "start": "4275960",
    "end": "4282560"
  },
  {
    "text": "option entirely in that you can start digging into ebpf and start using the tables that they provide in order to",
    "start": "4282560",
    "end": "4289100"
  },
  {
    "text": "make the routing decisions that'll allow you to provide security or to provide resiliency with load balancers",
    "start": "4289100",
    "end": "4295520"
  },
  {
    "text": "that brings me to the last section which is proxies and in proxies I don't have",
    "start": "4295520",
    "end": "4301100"
  },
  {
    "text": "any practical examples but know that proxies are a layer that are either in",
    "start": "4301100",
    "end": "4306920"
  },
  {
    "text": "front of or in front of your inbound or your outbound traffic and they're going to allow you to programmatically",
    "start": "4306920",
    "end": "4313120"
  },
  {
    "text": "implement firewalling rules authorization authentication so many",
    "start": "4313120",
    "end": "4319219"
  },
  {
    "text": "things that you can do from a network perspective without having to implement them directly in your code base and so",
    "start": "4319219",
    "end": "4325400"
  },
  {
    "text": "some of you who might be familiar with what a service mesh does you'll notice that proxies are going to be Paramount",
    "start": "4325400",
    "end": "4331219"
  },
  {
    "text": "in a lot of ways to what you have to do to to enable that functionality I know",
    "start": "4331219",
    "end": "4336800"
  },
  {
    "text": "there's a lot of talk about various ways to avoid the sidecar proxy and if you",
    "start": "4336800",
    "end": "4342380"
  },
  {
    "text": "you can talk to me directly later and I can and I'd love to talk to you about those but for the purpose of this",
    "start": "4342380",
    "end": "4347719"
  },
  {
    "text": "Foundation course I want to make sure that we're all understanding the basics and then we can talk later about more complicated",
    "start": "4347719",
    "end": "4353780"
  },
  {
    "text": "things as far as Cloud native proxies I did list a few one of my favorites is Envoy",
    "start": "4353780",
    "end": "4361159"
  },
  {
    "text": "you have the ability to run oh there's a typo here ha proxy and then also nginx",
    "start": "4361159",
    "end": "4368260"
  },
  {
    "text": "you can choose whichever one you want whichever one fits your programming standard some are going to be included",
    "start": "4368260",
    "end": "4374000"
  },
  {
    "text": "in the solutions that you choose them and so um we'll kind of Speed Ahead into",
    "start": "4374000",
    "end": "4379820"
  },
  {
    "text": "mourinho's chalk where we we get into containers and then stay here for my kubernetes talk because that's also good",
    "start": "4379820",
    "end": "4385940"
  },
  {
    "text": "awesome all right so we use proxies and load balancers and firewalls to control the",
    "start": "4385940",
    "end": "4392719"
  },
  {
    "text": "flow of our traffic you know proxies are going to be present in a lot of kubernetes environments especially if",
    "start": "4392719",
    "end": "4398060"
  },
  {
    "text": "you're using a service mesh but what's interesting is that proxy contains all",
    "start": "4398060",
    "end": "4403820"
  },
  {
    "text": "of the traditional networking and routing and firewalling that you would see in traditional devices like a",
    "start": "4403820",
    "end": "4409460"
  },
  {
    "text": "physical router or a physical firewall we've just slimmed the thing down into this little virtual artifact that runs",
    "start": "4409460",
    "end": "4416540"
  },
  {
    "text": "alongside your main container or can run at the at the Ingress level or at the entry point and it's very important to",
    "start": "4416540",
    "end": "4423199"
  },
  {
    "text": "know this because it's more than likely that you're going to work with Ingress or the Gateway API spec or even a",
    "start": "4423199",
    "end": "4429380"
  },
  {
    "text": "service mesh now containers I'm not going to describe containers to y'all because like we're",
    "start": "4429380",
    "end": "4436760"
  },
  {
    "text": "like at kubecon and I think most of you know what it is but for those that don't right it's a mechanism to isolate a",
    "start": "4436760",
    "end": "4443000"
  },
  {
    "text": "process and give it access to disk Network memory and just a compute",
    "start": "4443000",
    "end": "4448460"
  },
  {
    "text": "environment that it can run except if you had to sit there and create the network for every single container",
    "start": "4448460",
    "end": "4455179"
  },
  {
    "text": "you would be wasting a lot of time now you could automate this using bash and it has been done before but Docker",
    "start": "4455179",
    "end": "4462080"
  },
  {
    "text": "was the first to go out and actually create a a flow that allows a container",
    "start": "4462080",
    "end": "4467120"
  },
  {
    "text": "to get access to the network the moment it comes online kubernetes took that to another level and provided this",
    "start": "4467120",
    "end": "4473060"
  },
  {
    "text": "mechanism through the container networking interface spec or the cni spec and you know as you can tell when",
    "start": "4473060",
    "end": "4478340"
  },
  {
    "text": "you go to a variety of kubernetes environments you'll encounter the traditional cnis that you're so used to",
    "start": "4478340",
    "end": "4483440"
  },
  {
    "text": "like you know Calico flannel and now like psyllium because what they're doing for you is the moment you power on a pod",
    "start": "4483440",
    "end": "4490880"
  },
  {
    "text": "or deploy a pod that container networking interface layer knows about it because it's",
    "start": "4490880",
    "end": "4497000"
  },
  {
    "text": "communicating with the Kube API server and it's understanding that this workload needs to have an IP address so",
    "start": "4497000",
    "end": "4502280"
  },
  {
    "text": "it can has have access to the network or access to other pods so that I can communicate with pods now once it has",
    "start": "4502280",
    "end": "4508400"
  },
  {
    "text": "you know an IP address you know it can go do what it needs to do but again we use DNS to make sure",
    "start": "4508400",
    "end": "4514219"
  },
  {
    "text": "that we can communicate with other pods but what happens when that container disappears but that pod disappears if we",
    "start": "4514219",
    "end": "4519860"
  },
  {
    "text": "didn't have kubernetes and we weren't using Docker we would have to manually remove all the configuration for that",
    "start": "4519860",
    "end": "4525920"
  },
  {
    "text": "container so let's take a look and see what that configuration for that container or networking namespace",
    "start": "4525920",
    "end": "4531080"
  },
  {
    "text": "actually looks like so a network namespace I brought it up before is actually an isolation",
    "start": "4531080",
    "end": "4536360"
  },
  {
    "text": "mechanism you're effectively giving a process access to network space and",
    "start": "4536360",
    "end": "4542840"
  },
  {
    "text": "you'll have many of these that represent or can be you know akin to a pod effectively so you have a pod that's",
    "start": "4542840",
    "end": "4549260"
  },
  {
    "text": "like a network name space at this point now when you think about deploying Network namespaces we'll go ahead and do",
    "start": "4549260",
    "end": "4555320"
  },
  {
    "text": "this right now with net tools and I've already got the namespaces configured from the previous module so if I do an ipnet and S we'll see that web app and",
    "start": "4555320",
    "end": "4562699"
  },
  {
    "text": "sleeper there now I will display a diagram that I showed much earlier on when we were doing our slide deck which",
    "start": "4562699",
    "end": "4568400"
  },
  {
    "text": "will start to you know allow you to understand where all these pieces fit together what we have to do is we have to give",
    "start": "4568400",
    "end": "4575300"
  },
  {
    "text": "each namespace a process and an IP address a link to that you know IP",
    "start": "4575300",
    "end": "4581480"
  },
  {
    "text": "address a link into what we call a bridge so that these two network name spaces are in their own networks and",
    "start": "4581480",
    "end": "4587960"
  },
  {
    "text": "then they can route to each other and communicate with each other so if we actually go and run one of these commands we don't have to run both",
    "start": "4587960",
    "end": "4593900"
  },
  {
    "text": "you'll notice that we still have our previous interface from before it just you know it doesn't have an IP address",
    "start": "4593900",
    "end": "4599480"
  },
  {
    "text": "so we're going to assign one to it very shortly you can also notice that if you run this",
    "start": "4599480",
    "end": "4605060"
  },
  {
    "text": "ARP command ARP is actually a translation for IP address to MAC address",
    "start": "4605060",
    "end": "4611239"
  },
  {
    "text": "so if you notice you see that we have 10.13.37.128 and it translates to this",
    "start": "4611239",
    "end": "4617960"
  },
  {
    "text": "Hardware address or Mac address what that actually is implying is if you were to do this with kubernetes that",
    "start": "4617960",
    "end": "4624199"
  },
  {
    "text": "just implies the container that lives inside of that pot actually does have a MAC address that's all I have to say about that all",
    "start": "4624199",
    "end": "4630679"
  },
  {
    "text": "right so what we're going to go ahead and do we're also going to check the routes that we are aware of and you'll notice that the previous routes that we",
    "start": "4630679",
    "end": "4636860"
  },
  {
    "text": "injected through those static route configurations in module 2 are still present here and that's fine because",
    "start": "4636860",
    "end": "4642679"
  },
  {
    "text": "we're going to be using different subnets by the way you can configure multiple subnets within a namespace or a",
    "start": "4642679",
    "end": "4647840"
  },
  {
    "text": "network name space without any issue obviously you wouldn't want to do this manually because I mean you're going to",
    "start": "4647840",
    "end": "4654380"
  },
  {
    "text": "be managing thousands of containers it doesn't make sense to do this by hand so one of the first things we have to do",
    "start": "4654380",
    "end": "4659840"
  },
  {
    "text": "is in order to connect these Network namespaces and isolate them as separate networks is we have to create a bridge",
    "start": "4659840",
    "end": "4666860"
  },
  {
    "text": "so we're going to call it appnet 0 and we're going to bring it online very shortly but you'll notice that appnet 0",
    "start": "4666860",
    "end": "4673820"
  },
  {
    "text": "is right here this is the bridge that we're going to connect the network name spaces to the reason we have to do this",
    "start": "4673820",
    "end": "4679940"
  },
  {
    "text": "is because we have to use the physical interface on the host in our case we have to use ens4 which is up here to be",
    "start": "4679940",
    "end": "4687260"
  },
  {
    "text": "able to get to the outside world previously all I did was just route between two subnets in the private",
    "start": "4687260",
    "end": "4693560"
  },
  {
    "text": "network but if I need to communicate with the outside world I have to expose these Network namespaces somehow to",
    "start": "4693560",
    "end": "4700040"
  },
  {
    "text": "these to the physical interface or to the the outside world interface so we go ahead create the app Net Zero Bridge",
    "start": "4700040",
    "end": "4706880"
  },
  {
    "text": "we're going to bring the bridge online and now we're going to go ahead and attach these Network namespaces through",
    "start": "4706880",
    "end": "4714920"
  },
  {
    "text": "the usage of virtual ethernet interfaces to the bridge so we're going to go ahead and create",
    "start": "4714920",
    "end": "4720980"
  },
  {
    "text": "one using the IP Link command called V eat sleep and we're going to basically",
    "start": "4720980",
    "end": "4726800"
  },
  {
    "text": "pair it with the Sleep Bridge which is actually going to be two ends",
    "start": "4726800",
    "end": "4731960"
  },
  {
    "text": "of a of a link so one end of that link lives in the namespace the other end of",
    "start": "4731960",
    "end": "4737179"
  },
  {
    "text": "that link lives on the bridge that we just created and you're going to start to see this visually as we get to the",
    "start": "4737179",
    "end": "4743060"
  },
  {
    "text": "end the second part that I need to do is for the exact same thing for the web app namespace so I have to create a virtual",
    "start": "4743060",
    "end": "4750140"
  },
  {
    "text": "ethernet interface in that namespace and then create the the other end of that link that gets attached to the bridge",
    "start": "4750140",
    "end": "4757040"
  },
  {
    "text": "and now we have two different networks that are attached to this common Bridge",
    "start": "4757040",
    "end": "4762199"
  },
  {
    "text": "furthermore I have to go ahead and assign the ethernet interfaces to their",
    "start": "4762199",
    "end": "4768020"
  },
  {
    "text": "respective namespaces I have to then go ahead and assign the ve interfaces or",
    "start": "4768020",
    "end": "4773420"
  },
  {
    "text": "more so the bridge side of it to the actual app Net Zero bridge and I do this for both namespaces then I'm going to go",
    "start": "4773420",
    "end": "4779780"
  },
  {
    "text": "ahead and assign an IP address to the two different links on each namespace",
    "start": "4779780",
    "end": "4785179"
  },
  {
    "text": "and then we're going to go ahead and see if we can communicate to the outside world",
    "start": "4785179",
    "end": "4790340"
  },
  {
    "text": "so we also have to add an IP address to the bridge itself because it's going to",
    "start": "4790340",
    "end": "4796100"
  },
  {
    "text": "be our exit point to get to the physical Network or the actual host Network so let's go ahead and assign an IP",
    "start": "4796100",
    "end": "4801920"
  },
  {
    "text": "address to that bridge and we're also going to bring up the virtual interfaces on the bridge side online because",
    "start": "4801920",
    "end": "4808040"
  },
  {
    "text": "remember each network namespace is going to have one link that lives in the namespace and one link that lives on the",
    "start": "4808040",
    "end": "4814219"
  },
  {
    "text": "bridge so we have to do this for both web web app and sleep so we've gone ahead and done that",
    "start": "4814219",
    "end": "4820400"
  },
  {
    "text": "now we're going to try and ping and we should be able to Ping without issue like between the name spaces",
    "start": "4820400",
    "end": "4825739"
  },
  {
    "text": "they're technically on the same network you can think of these as two containers on the same network",
    "start": "4825739",
    "end": "4832100"
  },
  {
    "text": "and if you notice here they're pinging just fine so I'm picking from one to the other actually no I'm not I'm actually",
    "start": "4832100",
    "end": "4837380"
  },
  {
    "text": "just picking for my Local Host remember my Local Host here this Linux operating system has access to the",
    "start": "4837380",
    "end": "4843080"
  },
  {
    "text": "bridge we just created so if I type in IP Link notice that that bridge right there which is number 12.",
    "start": "4843080",
    "end": "4850760"
  },
  {
    "text": "that's the link that we're actually communicating with because it's local to it we can verify that it's up and online with a ping command now if I try to use",
    "start": "4850760",
    "end": "4857659"
  },
  {
    "text": "ipnet NS exact web app ping directly towards an external address",
    "start": "4857659",
    "end": "4864219"
  },
  {
    "text": "23.185.0.4 I think resolves to solo.io if I'm not mistaken but if you try to Ping it it actually won't go through and",
    "start": "4864219",
    "end": "4871040"
  },
  {
    "text": "you can see that right here network is unreachable so what do we need to get to an",
    "start": "4871040",
    "end": "4876739"
  },
  {
    "text": "unreachable Network someone said it default route exactly we",
    "start": "4876739",
    "end": "4883520"
  },
  {
    "text": "need a default route default gateway to get to that remote Network so let's let's go ahead and set that up here",
    "start": "4883520",
    "end": "4891040"
  },
  {
    "text": "and we're going to specify that 192.168 um 5.2 or sorry 52.0 we're going to not",
    "start": "4891560",
    "end": "4899120"
  },
  {
    "text": "masquerade it because here's the other thing I also have to point out so earlier on Jason mentioned the concept",
    "start": "4899120",
    "end": "4905780"
  },
  {
    "text": "in that so did I much earlier on as well and the reason we use Nat is because remember about the whole IP address",
    "start": "4905780",
    "end": "4911659"
  },
  {
    "text": "preservation on the public space and whatnot and we use Nat to be able to circumvent that well we're kind of doing",
    "start": "4911659",
    "end": "4916820"
  },
  {
    "text": "the same thing here to a degree we're actually overloading the interface that lives local to us the one that",
    "start": "4916820",
    "end": "4922040"
  },
  {
    "text": "communicates to the outside world and sharing that with our two Network namespaces that we just created",
    "start": "4922040",
    "end": "4927380"
  },
  {
    "text": "so if I go ahead and create this Nat rule and I try to Ping it still doesn't work",
    "start": "4927380",
    "end": "4932840"
  },
  {
    "text": "so we're still missing something I you mentioned it earlier we're missing the route right so we're going to go ahead and add the route",
    "start": "4932840",
    "end": "4939920"
  },
  {
    "text": "and once we add the route and we enable ipv4ip forward technically speaking this",
    "start": "4939920",
    "end": "4947840"
  },
  {
    "text": "should ping without a problem and here we are we're able to get to the outside world what I have just done for you is",
    "start": "4947840",
    "end": "4954199"
  },
  {
    "text": "that I have created two different network name spaces to represent containers so you could think of the web",
    "start": "4954199",
    "end": "4959719"
  },
  {
    "text": "app as one container and the sleep is another container they have their own respective IP addresses they're on the",
    "start": "4959719",
    "end": "4965120"
  },
  {
    "text": "same network they have access to a bridge which has access to the physical host that we're working off of that",
    "start": "4965120",
    "end": "4970400"
  },
  {
    "text": "physical host has access to the network we're overloading that physical interface with Nat so that both of these",
    "start": "4970400",
    "end": "4976580"
  },
  {
    "text": "both of these network name spaces were containers can communicate with solo.io and that's what we're seeing right here",
    "start": "4976580",
    "end": "4982940"
  },
  {
    "text": "however one thing I will point out is if you look at this diagram I'll bring it up full screen right this is exactly",
    "start": "4982940",
    "end": "4989120"
  },
  {
    "text": "what we just did you know this is one network namespace that we created this is another one you can notice that they're on the same network you can",
    "start": "4989120",
    "end": "4995719"
  },
  {
    "text": "notice that there is a virtual ethernet interface on this network namespace with this address and then the other link is",
    "start": "4995719",
    "end": "5001600"
  },
  {
    "text": "connected to the bridge we created the bridge itself has an address actually it should be um one yeah is that the right",
    "start": "5001600",
    "end": "5007900"
  },
  {
    "text": "address that we assigned to the bridge I don't know I can't remember but you can assume that's the default gateway that default gateway",
    "start": "5007900",
    "end": "5014500"
  },
  {
    "text": "allows us to get to the host side of the network that basically that's all of our",
    "start": "5014500",
    "end": "5019540"
  },
  {
    "text": "connections to get to the outside world so these two Network namespaces",
    "start": "5019540",
    "end": "5024760"
  },
  {
    "text": "are using this you know iptables using the physical interface of the host to get to the outside world now here's the",
    "start": "5024760",
    "end": "5032679"
  },
  {
    "text": "problem could you sit there and do this a hundred times over a thousand times over ten thousand times over no",
    "start": "5032679",
    "end": "5038980"
  },
  {
    "text": "you don't want to be doing that because if you had to go and undo all of this it would take the same amount of effort to",
    "start": "5038980",
    "end": "5044980"
  },
  {
    "text": "try and unconfigure the network name space on add the link you can't just simply delete the object and you know everything's good this is why we have",
    "start": "5044980",
    "end": "5052600"
  },
  {
    "text": "container networking interfaces because everything I just did is exactly what a cni does it automates the process the",
    "start": "5052600",
    "end": "5059500"
  },
  {
    "text": "moment a pod comes online it gets an IP address it get access it gets access to the host Network so that it can actually",
    "start": "5059500",
    "end": "5064780"
  },
  {
    "text": "get outbound and communicate with the outside world this is why you want to consider a cni",
    "start": "5064780",
    "end": "5071020"
  },
  {
    "text": "like psyllium or Calico or even come talk to us and we can tell you a little bit more about it now this completes the",
    "start": "5071020",
    "end": "5076600"
  },
  {
    "text": "the partial picture but what this is going to set you up for Is How We Do networking in kubernetes so I'm going to",
    "start": "5076600",
    "end": "5082900"
  },
  {
    "text": "pass it along to Jason to effectively talk us through kubernetes networking",
    "start": "5082900",
    "end": "5087940"
  },
  {
    "text": "cover some key components and close us off go ahead Jason thank you and I will",
    "start": "5087940",
    "end": "5093400"
  },
  {
    "text": "be brief I know that we do have only six minutes left um there's a lot of good content in here if",
    "start": "5093400",
    "end": "5099340"
  },
  {
    "text": "I don't cover if you see something on there that you want me to talk about I certainly can later um but for now I'll I'll glaze over some",
    "start": "5099340",
    "end": "5106780"
  },
  {
    "text": "of it um so I definitely don't need to do the what is kubernetes a lot of us are here",
    "start": "5106780",
    "end": "5112239"
  },
  {
    "text": "for that reason um but what do we have available in this virtual environment",
    "start": "5112239",
    "end": "5118420"
  },
  {
    "text": "um so that we can start to play around with what kubernetes is actually affording us on the network",
    "start": "5118420",
    "end": "5123580"
  },
  {
    "text": "um in your environment if you do a cube CTL get nodes you should see that you have three different servers or three",
    "start": "5123580",
    "end": "5130179"
  },
  {
    "text": "different nodes in a cluster and you have access to a cluster and by virtue",
    "start": "5130179",
    "end": "5135280"
  },
  {
    "text": "of the fact that the qptl command responds it is doing a network",
    "start": "5135280",
    "end": "5140380"
  },
  {
    "text": "um it is making a network connection to the kubernetes API server even though it is I think all locally addressed",
    "start": "5140380",
    "end": "5147100"
  },
  {
    "text": "um some of the things that we'll talk about that I if I had a lot of time I would",
    "start": "5147100",
    "end": "5153159"
  },
  {
    "text": "talk about a little bit more are the the different values that different cnis can provide to your kubernetes environment",
    "start": "5153159",
    "end": "5158620"
  },
  {
    "text": "they all have provided by the spec a a set of functions that they have to do",
    "start": "5158620",
    "end": "5165960"
  },
  {
    "text": "but that does not I don't think there there's only one or two cnis that actually just limit",
    "start": "5165960",
    "end": "5171940"
  },
  {
    "text": "themselves to those functions most cnis are going to provide you many layers of functionality on top of that",
    "start": "5171940",
    "end": "5178300"
  },
  {
    "text": "um you're going to see things like vpns you're going to see things like bgp you're going to see things that allow",
    "start": "5178300",
    "end": "5184840"
  },
  {
    "text": "you to to send a higher bandwidth through your cluster so on and so forth and so hopefully",
    "start": "5184840",
    "end": "5190900"
  },
  {
    "text": "um coming out of this session uh you'll be able to understand or at least communicate requests that you have for",
    "start": "5190900",
    "end": "5198040"
  },
  {
    "text": "that functionality with a cni represented a representative or someone who might be provisioning clusters for",
    "start": "5198040",
    "end": "5204520"
  },
  {
    "text": "you in this case we are running flannel you can output some of that information here",
    "start": "5204520",
    "end": "5210159"
  },
  {
    "text": "use the IP Command and you will see that information",
    "start": "5210159",
    "end": "5215100"
  },
  {
    "text": "but what I want to kind of go over is a brief overview of the the ways that",
    "start": "5215380",
    "end": "5221020"
  },
  {
    "text": "kubernetes networking Works in general there's intra and interpod networking so",
    "start": "5221020",
    "end": "5227080"
  },
  {
    "text": "a lot of what Mourinho just talked about just the containers within the nodes within different namespaces and then",
    "start": "5227080",
    "end": "5235179"
  },
  {
    "text": "extracting that into multi-node or multi-node clusters and being able to",
    "start": "5235179",
    "end": "5240820"
  },
  {
    "text": "communicate across the node and what that means to The Container from a security perspective from a resiliency",
    "start": "5240820",
    "end": "5246699"
  },
  {
    "text": "perspective so on and so forth and then lastly which I probably won't have time for today but Ingress is",
    "start": "5246699",
    "end": "5255340"
  },
  {
    "text": "Ingress for anybody who might not be familiar with that term is how you handle the north-south boundary of your cluster being able to get traffic into",
    "start": "5255340",
    "end": "5262480"
  },
  {
    "text": "your kubernetes cluster is usually required in order to get value out of it um not all cases but there are we could",
    "start": "5262480",
    "end": "5270100"
  },
  {
    "text": "have given another hour and a half talk on the movements in the Ingress and being able to handle things from a",
    "start": "5270100",
    "end": "5275440"
  },
  {
    "text": "north-south fence I'll just run through a couple of the",
    "start": "5275440",
    "end": "5280540"
  },
  {
    "text": "examples that we have in the examples all we're doing is we're piping a yaml",
    "start": "5280540",
    "end": "5286120"
  },
  {
    "text": "alert this is uh one of the the many many animals that you'll see this week",
    "start": "5286120",
    "end": "5291340"
  },
  {
    "text": "we're going to be creating pod specs and in those pod specs we're going to have specific information in this particular",
    "start": "5291340",
    "end": "5298900"
  },
  {
    "text": "one we can see the container port and some information as to the protocols and what's available from that container and",
    "start": "5298900",
    "end": "5305620"
  },
  {
    "text": "we can see that we are running two containers in the same pod definition and so as you might expect we are going",
    "start": "5305620",
    "end": "5313000"
  },
  {
    "text": "to see that they can Network amongst themselves I should apply it first",
    "start": "5313000",
    "end": "5319500"
  },
  {
    "text": "compliant then we'll run it",
    "start": "5324580",
    "end": "5329159"
  },
  {
    "text": "there we go um so we can get some information about each of the containers",
    "start": "5333940",
    "end": "5339520"
  },
  {
    "text": "um this is actually just executing the IPA command um and there we can see the IP information",
    "start": "5339520",
    "end": "5345580"
  },
  {
    "text": "each container 10.42.0.5 and 10.0.",
    "start": "5345580",
    "end": "5352239"
  },
  {
    "text": "about five so I think that even that does not overlap with the example from",
    "start": "5353219",
    "end": "5358360"
  },
  {
    "text": "before but I think it's close all right um so that's within a specific pad",
    "start": "5358360",
    "end": "5366000"
  },
  {
    "text": "we can go one step further and apply a pod to a separate node here we can see",
    "start": "5366000",
    "end": "5372219"
  },
  {
    "text": "we're doing the the node name key here that's deploying container one in container two much like we have here and",
    "start": "5372219",
    "end": "5379120"
  },
  {
    "text": "that would allow us to to run across different nodes in a cluster",
    "start": "5379120",
    "end": "5384639"
  },
  {
    "text": "um this I'm not going to spend too much time on this because this is the functionality of kubernetes this is why we're we've chosen to use this",
    "start": "5384639",
    "end": "5391120"
  },
  {
    "text": "distributed system the next level on top of that going back to the DNS talks about being able to",
    "start": "5391120",
    "end": "5398980"
  },
  {
    "text": "address things without having to manually store all of the IP addresses that's what service networking is going",
    "start": "5398980",
    "end": "5405219"
  },
  {
    "text": "to provide you mostly it's going to be internal to your cluster you're all probably familiar with the different",
    "start": "5405219",
    "end": "5411159"
  },
  {
    "text": "types of services we've already talked about the DNS that's accessible within your cluster to access workloads there's",
    "start": "5411159",
    "end": "5419199"
  },
  {
    "text": "some some examples in here on how you would leverage it the fact that it is in fact using ibtables and DNS",
    "start": "5419199",
    "end": "5425920"
  },
  {
    "text": "in this case and once again we can see the the magic DNS that's available through kubernetes there's also an",
    "start": "5425920",
    "end": "5432100"
  },
  {
    "text": "iptables command that we can look at there the to the IP tables comment I made",
    "start": "5432100",
    "end": "5437380"
  },
  {
    "text": "earlier this is how the load balancing is going to take place in subsequent rules that you add to iptables it is",
    "start": "5437380",
    "end": "5444940"
  },
  {
    "text": "going to cut the amount of traffic that gets sent there by a fractional amount",
    "start": "5444940",
    "end": "5451500"
  },
  {
    "text": "all right and since that does bring me to time um I'm just going to leave the rest as an exercise to the audience if anybody",
    "start": "5452020",
    "end": "5459820"
  },
  {
    "text": "is interested in anything that comes after what we've gone over today please",
    "start": "5459820",
    "end": "5465219"
  },
  {
    "text": "feel free to join any of myself from Mourinho or any of our co-workers at the",
    "start": "5465219",
    "end": "5470440"
  },
  {
    "text": "G9 I believe G9 under the rose Zone and I will say I know that we weren't able",
    "start": "5470440",
    "end": "5476139"
  },
  {
    "text": "to get to that Ingress section but this lab is going to be accessible to you forever so as long as you use that link",
    "start": "5476139",
    "end": "5482440"
  },
  {
    "text": "refresh you'll be able to take it anytime you want I want to welcome you all to our booth G9 in the in the Rose Zone come chat",
    "start": "5482440",
    "end": "5489820"
  },
  {
    "text": "with us because we've given you the foundations for networking we want you to come and embrace things like psyllium",
    "start": "5489820",
    "end": "5495040"
  },
  {
    "text": "and service the psyllium cni and the istio service mesh and see how these two components together and you'll start to",
    "start": "5495040",
    "end": "5500560"
  },
  {
    "text": "realize that your network is getting complex and you need a platform Like Glue platform so come chat with us thank",
    "start": "5500560",
    "end": "5506679"
  },
  {
    "text": "you so much for your attention and time we just want to say have a great kubecon enjoy Amsterdam we'll see you around",
    "start": "5506679",
    "end": "5512800"
  },
  {
    "text": "thank you thank you",
    "start": "5512800",
    "end": "5517679"
  },
  {
    "text": "[Applause]",
    "start": "5517940",
    "end": "5521489"
  }
]