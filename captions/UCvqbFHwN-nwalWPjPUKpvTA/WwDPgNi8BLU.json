[
  {
    "text": "good morning uh good afternoon and good evening to all of you in uh whichever",
    "start": "6779",
    "end": "12000"
  },
  {
    "text": "part of the world you are today we will be diving into the world of service mesh",
    "start": "12000",
    "end": "17100"
  },
  {
    "text": "and how it helped in enhancing and meeting the security and compliance need",
    "start": "17100",
    "end": "22640"
  },
  {
    "text": "but uh before we do that a quick round of introduction",
    "start": "22640",
    "end": "28080"
  },
  {
    "text": "my name is I am working at infra Cloud as a staff engineer in day of Sunny Side",
    "start": "28080",
    "end": "33899"
  },
  {
    "text": "space at infra Cloud I mainly work to help our clients to handle their need",
    "start": "33899",
    "end": "39600"
  },
  {
    "text": "around uh day of srn platform engineering mainly around infrastructure",
    "start": "39600",
    "end": "45660"
  },
  {
    "text": "design modernization using Cloud native Technologies like kubernetes and all all",
    "start": "45660",
    "end": "51660"
  },
  {
    "text": "the tech stack that revolves around kubernetes as part of my regular Consulting work I",
    "start": "51660",
    "end": "57360"
  },
  {
    "text": "happen to work on an implementation of service mesh for a few customers to add their security and compliance need and",
    "start": "57360",
    "end": "64320"
  },
  {
    "text": "that's how I thought whatever I have learned can share with you all",
    "start": "64320",
    "end": "70220"
  },
  {
    "text": "okay so uh agenda wise we will discuss a range of topics that are Central to the",
    "start": "71159",
    "end": "76320"
  },
  {
    "text": "service mesh we will explore how microservices emerge as a transformative architecture pattern and the factors",
    "start": "76320",
    "end": "83340"
  },
  {
    "text": "that fuel their rise then we will dwell into the critical aspect of uh security",
    "start": "83340",
    "end": "88860"
  },
  {
    "text": "challenges in microservice architecture uh we will discuss complexities that",
    "start": "88860",
    "end": "95579"
  },
  {
    "text": "come with a decentralized system and how to address them then we'll turn our attention to the",
    "start": "95579",
    "end": "102299"
  },
  {
    "text": "evolution of service mesh I will take you through the historical context of why and how the service mesh came into",
    "start": "102299",
    "end": "109380"
  },
  {
    "text": "the existence and their role in overall modern micro service ecosystem",
    "start": "109380",
    "end": "115079"
  },
  {
    "text": "then we'll explore the role of Suresh in enhancing security and then moving on we'll discuss how servicemesh its in",
    "start": "115079",
    "end": "122700"
  },
  {
    "text": "compliance effort as well and uh then we'll highlight with some of the examples as well how it meets your",
    "start": "122700",
    "end": "129239"
  },
  {
    "text": "regulatory requirements and that eventually making compliance more manageable",
    "start": "129239",
    "end": "135420"
  },
  {
    "text": "and later we'll explain how Services platform improves in obserability as well as making it easy to identify",
    "start": "135420",
    "end": "142379"
  },
  {
    "text": "troubleshoot issues zero trust networking is a Hot Topic and",
    "start": "142379",
    "end": "148260"
  },
  {
    "text": "I will discuss how service mesh alliance with the principles of zero trust and finally we will explore service mesh",
    "start": "148260",
    "end": "155340"
  },
  {
    "text": "deployment consideration and best practices I will share insights on how",
    "start": "155340",
    "end": "160560"
  },
  {
    "text": "to make the most of sarushmish while uh add up avoiding the common pitfalls and",
    "start": "160560",
    "end": "166860"
  },
  {
    "text": "then we will see the small demo of service mesh capabilities in terms of how they help with the authentication",
    "start": "166860",
    "end": "174120"
  },
  {
    "text": "and authorization okay so uh",
    "start": "174120",
    "end": "180120"
  },
  {
    "text": "rise of microseries so before the micro service architecture pattern actually",
    "start": "180120",
    "end": "185280"
  },
  {
    "text": "gained the popularity the predominant software architecture pattern was a",
    "start": "185280",
    "end": "190739"
  },
  {
    "text": "monolithic architecture and it was it was characterized by its single code base where your entire application was",
    "start": "190739",
    "end": "198120"
  },
  {
    "text": "built like a single cohesive unit which means all the components module functionalities uh were bundled together",
    "start": "198120",
    "end": "205500"
  },
  {
    "text": "and tightly coupled as a single code base obviously with the time spent iterating",
    "start": "205500",
    "end": "212220"
  },
  {
    "text": "on the same thing uh you normally learn a better and efficient way of solving",
    "start": "212220",
    "end": "217620"
  },
  {
    "text": "problem and so over past few years uh to bypass the challenges posed by",
    "start": "217620",
    "end": "223080"
  },
  {
    "text": "monolithic microservice pattern came into emergence and it has gained prominence in recent years due to",
    "start": "223080",
    "end": "229140"
  },
  {
    "text": "several compelling reasons uh some of them highlighted here like first is of",
    "start": "229140",
    "end": "234180"
  },
  {
    "text": "course scalability uh so it allows Individual Services to be scaled uh",
    "start": "234180",
    "end": "240120"
  },
  {
    "text": "independent of uh other services uh for example uh let's",
    "start": "240120",
    "end": "246480"
  },
  {
    "text": "say you have an e-commerce application uh which has a different micro services like product catalog which handles uh",
    "start": "246480",
    "end": "253080"
  },
  {
    "text": "product information or pricing Etc uh you let's have another user",
    "start": "253080",
    "end": "258720"
  },
  {
    "text": "authentication Service which normally is responsible for user login registration",
    "start": "258720",
    "end": "264080"
  },
  {
    "text": "and Order Management Services kind of service as well which can help with the",
    "start": "264080",
    "end": "270600"
  },
  {
    "text": "process of creating and tracking customer orders so now let's consider a scenario where uh and your Ecom Commerce",
    "start": "270600",
    "end": "278880"
  },
  {
    "text": "platform experience increase in a traffic due to holiday sale event during",
    "start": "278880",
    "end": "284100"
  },
  {
    "text": "such event different part of your application may experience different level of workload for example product",
    "start": "284100",
    "end": "291060"
  },
  {
    "text": "catalog service due to high user demand product this service can experience a",
    "start": "291060",
    "end": "297300"
  },
  {
    "text": "significant search in the request from users browser and thus it can cause a",
    "start": "297300",
    "end": "304620"
  },
  {
    "text": "load on this service but thanks to the microservice nature you can scale this service horizontally by adding more",
    "start": "304620",
    "end": "311280"
  },
  {
    "text": "instances or containers uh for user authentication Service uh",
    "start": "311280",
    "end": "316620"
  },
  {
    "text": "while it is important from user authentication perspective but on a Sales Event you may not experience that",
    "start": "316620",
    "end": "322919"
  },
  {
    "text": "much of uh surge in traffic so you can scale it uh to a minimal uh level",
    "start": "322919",
    "end": "330380"
  },
  {
    "text": "without uh overflowing any resources and for order Management Service because",
    "start": "330380",
    "end": "336419"
  },
  {
    "text": "people will put lots of order this service also might experience a surge in traffic and so you can scale this as",
    "start": "336419",
    "end": "342840"
  },
  {
    "text": "well horizontally as and when needed uh so I hope this example uh demonstrate",
    "start": "342840",
    "end": "349020"
  },
  {
    "text": "how each micro service can be scaled independently based on uh its specific",
    "start": "349020",
    "end": "354120"
  },
  {
    "text": "loads or requirement and this scalability allows you to optimize your",
    "start": "354120",
    "end": "360660"
  },
  {
    "text": "resources quite well and maintain an efficient performance during the traffic variation and making sure that your",
    "start": "360660",
    "end": "368220"
  },
  {
    "text": "application remains responsive at the same time cost effective as well and this flexibility uh also extend to the",
    "start": "368220",
    "end": "375600"
  },
  {
    "text": "technology choices as well now your team can select more suitable programming languages and framework for each of the",
    "start": "375600",
    "end": "382259"
  },
  {
    "text": "service for example for user authentication Service maybe node.js or Ruby kind can be used for quick",
    "start": "382259",
    "end": "389340"
  },
  {
    "text": "development and ease of handling user related operations uh for product catalog maybe python or",
    "start": "389340",
    "end": "395520"
  },
  {
    "text": "Java for their efficient data processing these uh small code bases uh of",
    "start": "395520",
    "end": "402840"
  },
  {
    "text": "microservices has also led to the faster development and deployment Cycles",
    "start": "402840",
    "end": "408600"
  },
  {
    "text": "and in terms of resilience as well microservices help to contain failures if one service encounter issues it",
    "start": "408600",
    "end": "416039"
  },
  {
    "text": "doesn't necessarily disrupt your entire application and it also helps from the collaboration",
    "start": "416039",
    "end": "422100"
  },
  {
    "text": "perspective as well among all the small teams that are working on the individual micro services",
    "start": "422100",
    "end": "429300"
  },
  {
    "text": "continuing all the same your testing and maintenance has also become more manageable with micro Services due to",
    "start": "429300",
    "end": "435180"
  },
  {
    "text": "the smaller code basis and uh this micro Services pattern has also helped for the",
    "start": "435180",
    "end": "441720"
  },
  {
    "text": "adoption of containers and kubernetes and overall Cloud native way of development and microservices are kind",
    "start": "441720",
    "end": "450000"
  },
  {
    "text": "of Naturally Fit for automated cicd pipeline which has resulted into the rapid and frequent releases",
    "start": "450000",
    "end": "458660"
  },
  {
    "text": "I'm sure we know this famous line from Spider-Man movie where Uncle Ben convinced Peter that great Powers with",
    "start": "458819",
    "end": "466259"
  },
  {
    "text": "the great Powers comes great responsibility similarly in a micro service world with pun intended I would",
    "start": "466259",
    "end": "472139"
  },
  {
    "text": "say it comes with some greater security challenges as well why I will explain",
    "start": "472139",
    "end": "477240"
  },
  {
    "text": "now so what we have seen over the years is due to the micro Service uh architecture",
    "start": "477240",
    "end": "484919"
  },
  {
    "text": "pattern the attack surface has increased Microsoft says open does expose multiple",
    "start": "484919",
    "end": "491039"
  },
  {
    "text": "endpoints and apis so it increased the potential attack surface attacker can",
    "start": "491039",
    "end": "496740"
  },
  {
    "text": "Target a specific service going back again to the same e-commerce application if they know that payment services are",
    "start": "496740",
    "end": "503220"
  },
  {
    "text": "one which is processing all the payments they can specifically Target it service to service communication has",
    "start": "503220",
    "end": "510000"
  },
  {
    "text": "also become a challenge in microservice architecture if we do not encrypt these",
    "start": "510000",
    "end": "515580"
  },
  {
    "text": "service to service communication uh it can cause a damage to confidentiality",
    "start": "515580",
    "end": "520620"
  },
  {
    "text": "integrity and authenticity of the data that has been exchanged between the microservice",
    "start": "520620",
    "end": "526260"
  },
  {
    "text": "and without encryption Network traffic between these micro Services uh normally",
    "start": "526260",
    "end": "532560"
  },
  {
    "text": "happens in a plaintiffs and that makes it more susceptible for use dropping",
    "start": "532560",
    "end": "538100"
  },
  {
    "text": "attackers can gain access to the network and intercept and inspect the data that",
    "start": "538100",
    "end": "543959"
  },
  {
    "text": "is being exchanged between the services we normally call it as a passive attack uh it can also lead to the man in the",
    "start": "543959",
    "end": "551160"
  },
  {
    "text": "middle attack where an attacker intercept the communication between these micro Services by either",
    "start": "551160",
    "end": "557100"
  },
  {
    "text": "impersonating one or both the parties authentication and authorization as well",
    "start": "557100",
    "end": "563040"
  },
  {
    "text": "across these multiple microservices can become complex uh we have seen already",
    "start": "563040",
    "end": "568440"
  },
  {
    "text": "in past I think money banking scams uh in regards to this from data security perspective as well",
    "start": "568440",
    "end": "574700"
  },
  {
    "text": "we uh as part of cloud native development we prefer our data being distributed across multiple",
    "start": "574700",
    "end": "580200"
  },
  {
    "text": "microservices like take an example of your cloud storage service where your user files are stored across uh",
    "start": "580200",
    "end": "587360"
  },
  {
    "text": "microservices so making sure that this data at rest and in transit should be",
    "start": "587360",
    "end": "594000"
  },
  {
    "text": "secured is quite highly important in today's world",
    "start": "594000",
    "end": "599279"
  },
  {
    "text": "okay identity and access management as well like managing user identities and access controls across these uh diverse",
    "start": "599279",
    "end": "606540"
  },
  {
    "text": "set of micro Services can become challenging and so it's a need of hour to have a im solution which is much uh",
    "start": "606540",
    "end": "614040"
  },
  {
    "text": "robust in a way core vulnerabilities as well so smaller",
    "start": "614040",
    "end": "619260"
  },
  {
    "text": "code base in microservice can sometimes lead to the overlooked security vulnerabilities",
    "start": "619260",
    "end": "624959"
  },
  {
    "text": "uh we have seen couple of times people pushing uh sensitive data sometime as",
    "start": "624959",
    "end": "630120"
  },
  {
    "text": "part of a hard coding and runtime security as well like monitoring your micro services at",
    "start": "630120",
    "end": "637260"
  },
  {
    "text": "runtime is also vital and due to the if the more number of Microsoft are there chances are that you may miss out on",
    "start": "637260",
    "end": "643980"
  },
  {
    "text": "that part as well uh to continue on the same uh your API",
    "start": "643980",
    "end": "649860"
  },
  {
    "text": "security as well so apis are the uh most critical part of the microservices so",
    "start": "649860",
    "end": "656220"
  },
  {
    "text": "properly ensuring and securing those apis in like uh input validation or uh",
    "start": "656220",
    "end": "663120"
  },
  {
    "text": "rate limiting these are the essential part to prevent uh SQL injection or abuse kind of attack",
    "start": "663120",
    "end": "670200"
  },
  {
    "text": "now the more number of microservices are there it is important that you have a register which contain list and",
    "start": "670200",
    "end": "678360"
  },
  {
    "text": "information about all these micro services but at the same time if someone gets access to these uh registry",
    "start": "678360",
    "end": "685560"
  },
  {
    "text": "mechanism then the attackers can redirect all the",
    "start": "685560",
    "end": "691140"
  },
  {
    "text": "requests to some malicious Services uh so securing the service registry and",
    "start": "691140",
    "end": "696180"
  },
  {
    "text": "Discovery mechanism is also important from microservices security challenge perspective",
    "start": "696180",
    "end": "702500"
  },
  {
    "text": "logging and monitoring as well like centralized logging and monitoring did",
    "start": "702500",
    "end": "707700"
  },
  {
    "text": "are important for detecting the suspicious activities uh for example uh",
    "start": "707700",
    "end": "714300"
  },
  {
    "text": "let's say these many 100 or 200 microservices if you do not have a centralized logging",
    "start": "714300",
    "end": "719459"
  },
  {
    "text": "mechanism it's become really hard to uh gain the insights about how your",
    "start": "719459",
    "end": "725100"
  },
  {
    "text": "microservices are behaving uh container security as well like if",
    "start": "725100",
    "end": "730500"
  },
  {
    "text": "you are using container based microservices then one need to ensure uh there are properly configured and",
    "start": "730500",
    "end": "737339"
  },
  {
    "text": "isolated uh mechanisms to prevent container escapes or privilege escalation attacks and as now it is",
    "start": "737339",
    "end": "746100"
  },
  {
    "text": "already happening most of us are using the kubernetes kind of orchestration",
    "start": "746100",
    "end": "752100"
  },
  {
    "text": "platform so maintaining a security of these kind of platform is also important",
    "start": "752100",
    "end": "757980"
  },
  {
    "text": "as it hosts your entire application is I have seen it has been quite uh",
    "start": "757980",
    "end": "766019"
  },
  {
    "text": "widely used option so protecting incoming and outgoing traffic on these",
    "start": "766019",
    "end": "772139"
  },
  {
    "text": "uh services are also important and we have also seen that many microservices rely on third-party",
    "start": "772139",
    "end": "779040"
  },
  {
    "text": "libraries and components so securing them is also a big task",
    "start": "779040",
    "end": "785480"
  },
  {
    "text": "okay so uh how does service mesh happen I mean well the word was in a need of",
    "start": "786180",
    "end": "793019"
  },
  {
    "text": "someone to come us come ahead and help us with the some super mesh power to",
    "start": "793019",
    "end": "798240"
  },
  {
    "text": "handle uh securely and regulate this micro service world",
    "start": "798240",
    "end": "803519"
  },
  {
    "text": "so Jokes Aside the emergence of sarushmesh can be traced back to the",
    "start": "803519",
    "end": "809760"
  },
  {
    "text": "evolution of uh application architecture like initially three-tier web app DB",
    "start": "809760",
    "end": "816000"
  },
  {
    "text": "kind of application practice was been practiced however as application grew in",
    "start": "816000",
    "end": "822180"
  },
  {
    "text": "complexity the challenges arose and companies found themselves writing custom libraries",
    "start": "822180",
    "end": "828480"
  },
  {
    "text": "client libraries which helps you with the request load balancing circuit",
    "start": "828480",
    "end": "833700"
  },
  {
    "text": "breaking retries and from the instrumentation perspective as well so these libraries pose challenges when it",
    "start": "833700",
    "end": "841019"
  },
  {
    "text": "comes to making some updates in them because it then require you to restart",
    "start": "841019",
    "end": "846779"
  },
  {
    "text": "all your services as well so to address this challenge uh proxies",
    "start": "846779",
    "end": "852420"
  },
  {
    "text": "came into the scene proxies offered a solution that bypassed many of the limitation of the client libraries and",
    "start": "852420",
    "end": "858920"
  },
  {
    "text": "unlike client libraries proxies can be upgraded without the need of recompilation and review deployment of",
    "start": "858920",
    "end": "865139"
  },
  {
    "text": "your application and this brought the flexibility and ease of maintenance for",
    "start": "865139",
    "end": "870720"
  },
  {
    "text": "your micro solution and as then later Cloud native practices gained prominence officially a mesh of",
    "start": "870720",
    "end": "878220"
  },
  {
    "text": "proxies emerged and it introduced the concept of deploying and managing proxies separately from your application",
    "start": "878220",
    "end": "885660"
  },
  {
    "text": "life cycle so uh by creating a distributed mesh of these proxies uh one was able to",
    "start": "885660",
    "end": "893519"
  },
  {
    "text": "standardize the runtime operation and it also provided a centralized apis and",
    "start": "893519",
    "end": "900000"
  },
  {
    "text": "then become a crucial component of microservices and that's how solution",
    "start": "900000",
    "end": "905180"
  },
  {
    "text": "has emerged over the years okay",
    "start": "905180",
    "end": "910440"
  },
  {
    "text": "so how does service mesh help basically in security and that too especially in the world of",
    "start": "910440",
    "end": "916980"
  },
  {
    "text": "kubernetes well uh from authentication and authorization perspective sarush mesh",
    "start": "916980",
    "end": "922980"
  },
  {
    "text": "enables strong authentication and authorization mechanism for example it allows only authorized services to",
    "start": "922980",
    "end": "930000"
  },
  {
    "text": "access the sensitive data from a sensitive microservices the encryption mtls feature basically of",
    "start": "930000",
    "end": "937320"
  },
  {
    "text": "solution helps you to protect your data in transit or at rest as well",
    "start": "937320",
    "end": "943500"
  },
  {
    "text": "so you can use any service tool of your choice like Linker D or istio and this",
    "start": "943500",
    "end": "950339"
  },
  {
    "text": "has helped to avoid eavesdropping or man in a middle attack basically",
    "start": "950339",
    "end": "955680"
  },
  {
    "text": "from a traffic control and routing perspective there are popular service mesh mechanism which provides you a way",
    "start": "955680",
    "end": "963480"
  },
  {
    "text": "to control the way traffic is Flowing between the services and the way load balancing is happening",
    "start": "963480",
    "end": "969839"
  },
  {
    "text": "so their access control and circuit circuit breaking abilities has also provided us a way to prevent security",
    "start": "969839",
    "end": "977459"
  },
  {
    "text": "vulnerabilities getting in okay and from observation monitoring",
    "start": "977459",
    "end": "983399"
  },
  {
    "text": "perspective as well so seriousness does matrix that can be captured and",
    "start": "983399",
    "end": "988860"
  },
  {
    "text": "monitored by various monitoring tools like Prometheus and so on",
    "start": "988860",
    "end": "995480"
  },
  {
    "text": "platform is basically designed to provide the extensive Observatory and monitoring capabilities so",
    "start": "995480",
    "end": "1002060"
  },
  {
    "text": "for example servicemen like uh is NY proxy in his URL you can say Linker to",
    "start": "1002060",
    "end": "1008060"
  },
  {
    "text": "proxies they generate a wide range of metrics that you can use and based on",
    "start": "1008060",
    "end": "1014240"
  },
  {
    "text": "those metrics you can get the information about request rate latencies error rate success rates and all the",
    "start": "1014240",
    "end": "1021860"
  },
  {
    "text": "other relevant data and uh Solutions make sure that to provide this",
    "start": "1021860",
    "end": "1027020"
  },
  {
    "text": "information either by HTTP endpoint or grp grpc interface of sidecars and you",
    "start": "1027020",
    "end": "1033860"
  },
  {
    "text": "can set alert and visualization as well on them and from distributed security policies",
    "start": "1033860",
    "end": "1039798"
  },
  {
    "text": "perspective it provide a centralized policy management and uh enforcement",
    "start": "1039799",
    "end": "1045079"
  },
  {
    "text": "tool across all your microservices so it allows you to Define security policies",
    "start": "1045079",
    "end": "1051500"
  },
  {
    "text": "such as access control or authentication rule all in one place uh consider like a",
    "start": "1051500",
    "end": "1057380"
  },
  {
    "text": "single plane of the glass and it provides you a framework for",
    "start": "1057380",
    "end": "1063020"
  },
  {
    "text": "real-time policy update and changes without a risk of misconfiguration and",
    "start": "1063020",
    "end": "1069200"
  },
  {
    "text": "basically overall improving the security posture for your microservices environment",
    "start": "1069200",
    "end": "1077000"
  },
  {
    "text": "from a service identity and authentication perspective uh with service mesh you can Implement a",
    "start": "1077960",
    "end": "1084620"
  },
  {
    "text": "mechanisms like mtls and JWT tokens that ensures that only authenticated service",
    "start": "1084620",
    "end": "1089660"
  },
  {
    "text": "can communicate with each other and uh thus it strengthens the overall security",
    "start": "1089660",
    "end": "1094760"
  },
  {
    "text": "of micro Services by preventing unauthorized and uh unrequired accesses",
    "start": "1094760",
    "end": "1103039"
  },
  {
    "text": "from runtime security perspective as well it helps to detect the anomalies by",
    "start": "1103039",
    "end": "1108380"
  },
  {
    "text": "continuously observing the network traffic and from API security point of view as",
    "start": "1108380",
    "end": "1113720"
  },
  {
    "text": "well it can help by doing the validation of inputs or",
    "start": "1113720",
    "end": "1120200"
  },
  {
    "text": "incoming requests and help us to detect attack like as I mentioned SQL injection",
    "start": "1120200",
    "end": "1125900"
  },
  {
    "text": "and from security upgrade and patching perspective as well so with the sidecar proxies approach one",
    "start": "1125900",
    "end": "1132919"
  },
  {
    "text": "can independently upgrade their micro services so even when you are upgrading proxies it will not recompile or",
    "start": "1132919",
    "end": "1141559"
  },
  {
    "text": "redeploy your entire application itself so that's how service mesh does help you",
    "start": "1141559",
    "end": "1148220"
  },
  {
    "text": "from the security perspective and I know we all do hate it but uh it's",
    "start": "1148220",
    "end": "1156080"
  },
  {
    "text": "something that promotes fairness safety and ethical behavior in our life yes I",
    "start": "1156080",
    "end": "1161660"
  },
  {
    "text": "am talking about the term compliance so let's see how service mesh helps with",
    "start": "1161660",
    "end": "1167480"
  },
  {
    "text": "compliance uh based on the different Industries regulations",
    "start": "1167480",
    "end": "1172880"
  },
  {
    "text": "so uh thanks to the enforcement of fine grain policies by sarish Mish it helps",
    "start": "1172880",
    "end": "1178940"
  },
  {
    "text": "you to the meat requirement uh like those of gdpr to ensure data protection",
    "start": "1178940",
    "end": "1184100"
  },
  {
    "text": "and privacy the access control mechanisms provided by service mesh helps to comply the standards like hip",
    "start": "1184100",
    "end": "1191720"
  },
  {
    "text": "power PCA DSS make sure that only authorized entities",
    "start": "1191720",
    "end": "1197360"
  },
  {
    "text": "can interact with the sensitive data apart from that it does provide you a",
    "start": "1197360",
    "end": "1202460"
  },
  {
    "text": "centralized auditing and logging capabilities uh to work to accurately gather report and brings that",
    "start": "1202460",
    "end": "1209059"
  },
  {
    "text": "traceability and uh when it comes to data protection regulation like gdpr HIPAA the data",
    "start": "1209059",
    "end": "1216020"
  },
  {
    "text": "encryption with mtls feature that I mentioned prior is crucial as it maintains the confidentiality of data",
    "start": "1216020",
    "end": "1223220"
  },
  {
    "text": "during the communication between different services okay uh to continue on the same uh to",
    "start": "1223220",
    "end": "1231320"
  },
  {
    "text": "comply with standard like ISO 27001 servicemesh does offer governance and",
    "start": "1231320",
    "end": "1236480"
  },
  {
    "text": "traceability features uh thus allowing organization to Monitor and control all the service interaction",
    "start": "1236480",
    "end": "1242360"
  },
  {
    "text": "and uh by identifying services and controlling traffic accordingly it uh",
    "start": "1242360",
    "end": "1248960"
  },
  {
    "text": "helps to ensure that data flows align with the regulations like gdps data",
    "start": "1248960",
    "end": "1254539"
  },
  {
    "text": "residency restriction kind of and uh lastly service mesh does support",
    "start": "1254539",
    "end": "1260419"
  },
  {
    "text": "rbac that aids compliance with the security standard likeness SP 853",
    "start": "1260419",
    "end": "1267400"
  },
  {
    "text": "by allowing organization to Define and enforce the rollback Access Control",
    "start": "1267400",
    "end": "1273740"
  },
  {
    "text": "policies so well that's how the service mesh does helps with the compliance angle as well",
    "start": "1273740",
    "end": "1280880"
  },
  {
    "text": "and uh",
    "start": "1280880",
    "end": "1283840"
  },
  {
    "text": "helps with the access control is by fine grain access policies uh the solution platform like uh istio",
    "start": "1286059",
    "end": "1294140"
  },
  {
    "text": "Linker d does allow organization to Define precise rules uh policies you can",
    "start": "1294140",
    "end": "1300559"
  },
  {
    "text": "say uh using which you can control uh and provide a secure access to only those",
    "start": "1300559",
    "end": "1307460"
  },
  {
    "text": "who are needed for those services the rbac feature is also powerful uh for",
    "start": "1307460",
    "end": "1313400"
  },
  {
    "text": "example in istio in particular it enables you to define the roles and permission for services",
    "start": "1313400",
    "end": "1319179"
  },
  {
    "text": "it is kind of similar to the traditional Access Control mechanism but tailored to the micro services",
    "start": "1319179",
    "end": "1325820"
  },
  {
    "text": "uh for example for the payment service you can specifically Define a particular role",
    "start": "1325820",
    "end": "1331940"
  },
  {
    "text": "and uh the NY proxy kind of feature does",
    "start": "1331940",
    "end": "1337159"
  },
  {
    "text": "help you for the dynamic authorization as in as well uh thus it basically",
    "start": "1337159",
    "end": "1342919"
  },
  {
    "text": "allows to make a decision at a real time based on various factors like user",
    "start": "1342919",
    "end": "1348620"
  },
  {
    "text": "identity request context or even the state of the system uh apart from that from Identity and",
    "start": "1348620",
    "end": "1356059"
  },
  {
    "text": "Trust verification perspective as well these are important factors and that's where your mtls kind of features does",
    "start": "1356059",
    "end": "1361760"
  },
  {
    "text": "help you okay so that's how Solutions enhances the access control",
    "start": "1361760",
    "end": "1368980"
  },
  {
    "text": "and uh how does service mesh helps basically from observation monitoring perspective",
    "start": "1369860",
    "end": "1375440"
  },
  {
    "text": "is as I mentioned our top prior that it helps with the uh imitation of the",
    "start": "1375440",
    "end": "1381559"
  },
  {
    "text": "Matrix that you can collect from monitoring perspective and you can readily integrate it with any monitoring",
    "start": "1381559",
    "end": "1388220"
  },
  {
    "text": "platform of your choice uh platform like Steven Lincoln are",
    "start": "1388220",
    "end": "1393919"
  },
  {
    "text": "already offering a centralized logging aggregating of all the logs from microservices and it helps when it comes",
    "start": "1393919",
    "end": "1401240"
  },
  {
    "text": "to the troubleshooting and maintaining compliance as it is in need of different audit",
    "start": "1401240",
    "end": "1406640"
  },
  {
    "text": "requirement as well uh and this uh distributed application",
    "start": "1406640",
    "end": "1411799"
  },
  {
    "text": "does require us to understand end-to-end flows like from the moment someone tries",
    "start": "1411799",
    "end": "1417799"
  },
  {
    "text": "to access our application how different uh how the client occurs is Flowing from",
    "start": "1417799",
    "end": "1423020"
  },
  {
    "text": "one service to other service so service mesh out of the box does provide uh",
    "start": "1423020",
    "end": "1428840"
  },
  {
    "text": "capabilities to integrate with different uh distributed interesting tools like uh",
    "start": "1428840",
    "end": "1434780"
  },
  {
    "text": "Jaeger or Zipkin so that allows you to see microservice uh how it is handling",
    "start": "1434780",
    "end": "1442520"
  },
  {
    "text": "overall requests and it can help you to identify the bottlenecks as well and uh",
    "start": "1442520",
    "end": "1448640"
  },
  {
    "text": "of course you can integrate these monitoring platforms with the tools like grafana and so on and thus it can help",
    "start": "1448640",
    "end": "1455960"
  },
  {
    "text": "you to the visualization part of all your micro Services current state as",
    "start": "1455960",
    "end": "1461539"
  },
  {
    "text": "well okay so uh for example this is very uh",
    "start": "1461539",
    "end": "1467480"
  },
  {
    "text": "small grafana dashboard template uh that can give you the insights about how service mesh capabilities",
    "start": "1467480",
    "end": "1473840"
  },
  {
    "text": "uh are able to fetch you the insights",
    "start": "1473840",
    "end": "1478900"
  },
  {
    "text": "okay uh so zero trust uh security model is a kind of paradigm shift in network",
    "start": "1479480",
    "end": "1485780"
  },
  {
    "text": "security that always emphasizes on never trust always verify approach",
    "start": "1485780",
    "end": "1493299"
  },
  {
    "text": "all communication between the micro Services is subject to strict",
    "start": "1493299",
    "end": "1498320"
  },
  {
    "text": "verification and validation and regardless of whether it occurs within",
    "start": "1498320",
    "end": "1503600"
  },
  {
    "text": "the same cluster across the cluster or across the different Cloud providers every interaction is getting evaluated",
    "start": "1503600",
    "end": "1510320"
  },
  {
    "text": "against the defined policies and security rules and ensure that only authenticated and authorizes authorized",
    "start": "1510320",
    "end": "1517880"
  },
  {
    "text": "Services only can communicate with each other so uh this approach significantly reduce",
    "start": "1517880",
    "end": "1524480"
  },
  {
    "text": "the attack surface and limit the lateral movement within the microservice",
    "start": "1524480",
    "end": "1529820"
  },
  {
    "text": "ecosystem and thus it does enhance security at the same time minimize the",
    "start": "1529820",
    "end": "1534980"
  },
  {
    "text": "potential impact of the bridge okay so I'm sure when we want to add off",
    "start": "1534980",
    "end": "1542659"
  },
  {
    "text": "some new tool we always uh want to understand some of the best practices that can help us with uh adopting that",
    "start": "1542659",
    "end": "1551000"
  },
  {
    "text": "technology well so these are some of them that I have listed needless to say always do plan ahead uh",
    "start": "1551000",
    "end": "1558679"
  },
  {
    "text": "the deployment of servicemesh take into the account cons the size of your application and the complexity and",
    "start": "1558679",
    "end": "1566000"
  },
  {
    "text": "available resources secondly uh evaluate different solutions there are multiple micro uh service mesh",
    "start": "1566000",
    "end": "1573799"
  },
  {
    "text": "available in the markets so first start understanding your specific use case and",
    "start": "1573799",
    "end": "1578840"
  },
  {
    "text": "requirement and then uh at the end of the day see every uh",
    "start": "1578840",
    "end": "1585220"
  },
  {
    "text": "platforms has their own features at the same time trade-offs so choose the one",
    "start": "1585220",
    "end": "1590480"
  },
  {
    "text": "that aligns with your needs specifically third I would say is uh always do start",
    "start": "1590480",
    "end": "1597140"
  },
  {
    "text": "small like whenever I was working on our clients requirement we always started",
    "start": "1597140",
    "end": "1602179"
  },
  {
    "text": "with one uh microservice try to move it into the service mesh try to gain that",
    "start": "1602179",
    "end": "1607880"
  },
  {
    "text": "confidence and then move to move other services as well on a service mesh",
    "start": "1607880",
    "end": "1614000"
  },
  {
    "text": "and uh the capabilities like circuit breaking and retry policies of solutions uh do",
    "start": "1614000",
    "end": "1620419"
  },
  {
    "text": "help you to handle the failures gracefully so do make sure to use them",
    "start": "1620419",
    "end": "1626000"
  },
  {
    "text": "as it helps to prevent cascading failures and improve the service reliability okay and uh needless to say",
    "start": "1626000",
    "end": "1635000"
  },
  {
    "text": "always focus on Observatory and monitoring uh always follow the shift",
    "start": "1635000",
    "end": "1640580"
  },
  {
    "text": "approach when it comes to security uh the traffic management feature of",
    "start": "1640580",
    "end": "1646279"
  },
  {
    "text": "solution is very powerful and uh do make use of it to do the traffic splitting as",
    "start": "1646279",
    "end": "1653299"
  },
  {
    "text": "well as load balancing and uh for the can read deployments as well as",
    "start": "1653299",
    "end": "1658820"
  },
  {
    "text": "that can help you to do the zero downtime kind of deployments as well okay",
    "start": "1658820",
    "end": "1665360"
  },
  {
    "text": "from name space and resource isolation perspective as well do configure uh a",
    "start": "1665360",
    "end": "1671779"
  },
  {
    "text": "specific compute for every names is that your development teams are going to use",
    "start": "1671779",
    "end": "1678559"
  },
  {
    "text": "uh yeah so this is crucial from the documentation and training perspective",
    "start": "1678559",
    "end": "1683720"
  },
  {
    "text": "always make sure that your development as well as operational team are very",
    "start": "1683720",
    "end": "1688940"
  },
  {
    "text": "familiar with handling then only decide to move",
    "start": "1688940",
    "end": "1695360"
  },
  {
    "text": "any micro service on the service mesh and uh from disaster recovery and",
    "start": "1695360",
    "end": "1700880"
  },
  {
    "text": "highability perspective as well always plan for uh these kind of you know scenarios and do make sure to implement",
    "start": "1700880",
    "end": "1708919"
  },
  {
    "text": "redundancy wherever necessary there are tools like uh Valero and all that can",
    "start": "1708919",
    "end": "1714440"
  },
  {
    "text": "helps you with those aspects from performance testing point of view as well uh make sure you do the",
    "start": "1714440",
    "end": "1721039"
  },
  {
    "text": "end-to-end performance testing for the micro Services been moved on to the",
    "start": "1721039",
    "end": "1726640"
  },
  {
    "text": "and try to ensure that there is no significant latency or bottleneck is been introduced in your micro service",
    "start": "1726640",
    "end": "1733039"
  },
  {
    "text": "architecture if you are using a Commercial Services product be aware of potential vendor",
    "start": "1733039",
    "end": "1740539"
  },
  {
    "text": "lock-in and consider open source alternative if portability is your concern",
    "start": "1740539",
    "end": "1746740"
  },
  {
    "text": "backup and restore strategy has been do make sure to have it in place already and those will save your time when it",
    "start": "1746740",
    "end": "1754700"
  },
  {
    "text": "comes to the typical disaster scenarios and from uh so service policies as well",
    "start": "1754700",
    "end": "1762679"
  },
  {
    "text": "uh do make sure to enforce strict policies when it comes to the traffic",
    "start": "1762679",
    "end": "1767720"
  },
  {
    "text": "routing or security or Access Control so see uh service mesh deployment can be",
    "start": "1767720",
    "end": "1774559"
  },
  {
    "text": "complex uh but by following the best practices certainly you will be able to",
    "start": "1774559",
    "end": "1779899"
  },
  {
    "text": "successfully Implement and manage the wrist mesh for your microservice architecture and helps to improve the",
    "start": "1779899",
    "end": "1785960"
  },
  {
    "text": "reliability security and observity of your services okay uh well now it's a demo time I will give",
    "start": "1785960",
    "end": "1794899"
  },
  {
    "text": "you a small demo of sarush mesh capabilities around authentication and authorization",
    "start": "1794899",
    "end": "1800000"
  },
  {
    "text": "uh using istio as a service measure uh and see these capabilities are available",
    "start": "1800000",
    "end": "1805760"
  },
  {
    "text": "in all the service mesh tools but in the end I had to choose one and so I decided",
    "start": "1805760",
    "end": "1811039"
  },
  {
    "text": "maybe to use the istio itself so we will have one sample app and see how mtls work uh for internal secure",
    "start": "1811039",
    "end": "1819440"
  },
  {
    "text": "communication among microservices as well as how how it helps with JWT tokens",
    "start": "1819440",
    "end": "1824600"
  },
  {
    "text": "to authenticate end users as well so to save time what I have done is I",
    "start": "1824600",
    "end": "1831380"
  },
  {
    "text": "have recorded both the parts of it will play them one by one and explain but",
    "start": "1831380",
    "end": "1836720"
  },
  {
    "text": "prior that let's understand it with some visual diagrams",
    "start": "1836720",
    "end": "1842799"
  },
  {
    "text": "ah so our example uh will have two namespaces called one bar with two micro",
    "start": "1843100",
    "end": "1849860"
  },
  {
    "text": "Services one is HTTP bin and another is sleep and both will run the NY proxy",
    "start": "1849860",
    "end": "1856340"
  },
  {
    "text": "basically they both are kind of onboarded on a service mesh and we'll use another instance as well of HTTP bin",
    "start": "1856340",
    "end": "1864020"
  },
  {
    "text": "and slip uh micro service which is running without sidecar that means without service mesh in a namespace",
    "start": "1864020",
    "end": "1871039"
  },
  {
    "text": "called as a legacy so what we will do is we will try to send a traffic from each",
    "start": "1871039",
    "end": "1876620"
  },
  {
    "text": "sleep and HTTP bin Port of each name says to other parts in the other namespace so what we will ideally see is",
    "start": "1876620",
    "end": "1885740"
  },
  {
    "text": "by default istio those tracks the server workload which are migrated to istio",
    "start": "1885740",
    "end": "1891799"
  },
  {
    "text": "proxies and it does configure the client proxies to send a mutual TLS traffic",
    "start": "1891799",
    "end": "1897740"
  },
  {
    "text": "between those workloads and for the non-servicemen service it",
    "start": "1897740",
    "end": "1904159"
  },
  {
    "text": "use the plain text traffic so basically we will use mtls for",
    "start": "1904159",
    "end": "1910880"
  },
  {
    "text": "communication between uh services from Foo and bar namespace but when it comes",
    "start": "1910880",
    "end": "1917240"
  },
  {
    "text": "to communicating with the services from the Legacy namespace it will use the plain text format okay so let me play",
    "start": "1917240",
    "end": "1926659"
  },
  {
    "text": "the video of it",
    "start": "1926659",
    "end": "1929440"
  },
  {
    "text": "so uh as you could see here we have uh three names which says full bar and",
    "start": "1932539",
    "end": "1939080"
  },
  {
    "text": "Legacy Foo and bar are enabled with the istio cycle proxies uh whether as Legacy",
    "start": "1939080",
    "end": "1945980"
  },
  {
    "text": "is without any uh sidecar process that's the reason here if you will see they",
    "start": "1945980",
    "end": "1951679"
  },
  {
    "text": "have only one uh content which is of those micro services but uh the containers uh or ports from the bar and",
    "start": "1951679",
    "end": "1959960"
  },
  {
    "text": "full namespace are having two containers which indicate that the sidecar proxy",
    "start": "1959960",
    "end": "1966679"
  },
  {
    "text": "has been enabled we can verify the Same by describing the Pod from uh either",
    "start": "1966679",
    "end": "1973159"
  },
  {
    "text": "four bar namespace and that's what we are going to do we are going to describe now and see uh in HTTP service from the",
    "start": "1973159",
    "end": "1982039"
  },
  {
    "text": "bar names this so you can see here that is two cycle proxy has been injected in",
    "start": "1982039",
    "end": "1988399"
  },
  {
    "text": "that which will make sure that any communication that is happening with this uh microservice will be via this",
    "start": "1988399",
    "end": "1995120"
  },
  {
    "text": "sidecar only okay and now what we will do is basically from each microservice",
    "start": "1995120",
    "end": "2002500"
  },
  {
    "text": "of each namespace here using this simple curl request we are trying to connect to",
    "start": "2002500",
    "end": "2008320"
  },
  {
    "text": "other services right now no istio policies has been enabled that's the",
    "start": "2008320",
    "end": "2014860"
  },
  {
    "text": "reason it will allow uh so uh",
    "start": "2014860",
    "end": "2020279"
  },
  {
    "text": "communication between the services which have a sidecar enabled to the",
    "start": "2020279",
    "end": "2027519"
  },
  {
    "text": "services which even do not have a sidecar or service mesh been enabled so",
    "start": "2027519",
    "end": "2033340"
  },
  {
    "text": "basically it will allow uh Communication in empty list for those which are having",
    "start": "2033340",
    "end": "2039519"
  },
  {
    "text": "sidecar but at the same time for the one like Legacy one it will use the",
    "start": "2039519",
    "end": "2045100"
  },
  {
    "text": "plain text communication and how we can be very much sure of that is if you will",
    "start": "2045100",
    "end": "2051398"
  },
  {
    "text": "see now whenever you are enable a sidecar istio proxy what it does is that",
    "start": "2051399",
    "end": "2058240"
  },
  {
    "text": "it add this x forwarded client search header in the curl request or that",
    "start": "2058240",
    "end": "2064599"
  },
  {
    "text": "originally comes from our microservices so here what we are doing is from the",
    "start": "2064599",
    "end": "2071919"
  },
  {
    "text": "parts from our full name space we are trying to send the call request to the",
    "start": "2071919",
    "end": "2077618"
  },
  {
    "text": "Pod from the full namespace and ideally basically these two uh name spaces are",
    "start": "2077619",
    "end": "2085658"
  },
  {
    "text": "now enabled with service mesh that's the reason it should use the exported client",
    "start": "2085659",
    "end": "2091780"
  },
  {
    "text": "search which will validate that the communication is happening in a mtls by",
    "start": "2091780",
    "end": "2098200"
  },
  {
    "text": "using the mtls feature uh so to repeat again the X forwarded client search",
    "start": "2098200",
    "end": "2104440"
  },
  {
    "text": "header gets automatically added when service to service intercommunication is",
    "start": "2104440",
    "end": "2110740"
  },
  {
    "text": "happening using the uh Mutual TLS so this proves us that uh it is using mtls",
    "start": "2110740",
    "end": "2117880"
  },
  {
    "text": "for the secure communication and now let's try to again send a similar request but this time the",
    "start": "2117880",
    "end": "2125680"
  },
  {
    "text": "call request is to the microservice HTTP bin from the Legacy namespace and since",
    "start": "2125680",
    "end": "2131320"
  },
  {
    "text": "now the request is going from a sidecar enabled uh enabled",
    "start": "2131320",
    "end": "2138400"
  },
  {
    "text": "ideally this header will not be present that means the traffic flowing is",
    "start": "2139720",
    "end": "2145300"
  },
  {
    "text": "happening in a plain text format which is uh risky in a way yeah so if you",
    "start": "2145300",
    "end": "2151900"
  },
  {
    "text": "could see it was not able to gather anything and now since we want to make sure that",
    "start": "2151900",
    "end": "2158079"
  },
  {
    "text": "all our micro services are communicating with each other in a secure way alone we will enable a peer authentication policy",
    "start": "2158079",
    "end": "2165579"
  },
  {
    "text": "of the istio so what this policy does help is for",
    "start": "2165579",
    "end": "2170800"
  },
  {
    "text": "inter-service communication uh with mtls mode as a strict it makes sure that",
    "start": "2170800",
    "end": "2178060"
  },
  {
    "text": "unless and until mtls is enabled for the micro Services any traffic that is going",
    "start": "2178060",
    "end": "2184599"
  },
  {
    "text": "to and fro from this uh micro services with the service mesh will be rejected",
    "start": "2184599",
    "end": "2192420"
  },
  {
    "text": "okay so now we have created this policy and now we will again try to run the",
    "start": "2193420",
    "end": "2199960"
  },
  {
    "text": "same uh call request now what should happen this time is that any communication that is",
    "start": "2199960",
    "end": "2208060"
  },
  {
    "text": "going to happen with Legacy uh namespace based micro Services should be",
    "start": "2208060",
    "end": "2214420"
  },
  {
    "text": "rejected so our services with istio enabled will not be able to communicate",
    "start": "2214420",
    "end": "2220359"
  },
  {
    "text": "with uh Legacy namespace Based Services because that communication was a plain",
    "start": "2220359",
    "end": "2225520"
  },
  {
    "text": "text one which is risky as I can as I mentioned it can lead to use dropping or",
    "start": "2225520",
    "end": "2232960"
  },
  {
    "text": "man in a middle attack okay so if you see here for",
    "start": "2232960",
    "end": "2239920"
  },
  {
    "text": "communication from Full namespace to a bar namespace it is generating 200",
    "start": "2239920",
    "end": "2245380"
  },
  {
    "text": "response but for sleep micro service from Legacy nurses when it is trying to connect to",
    "start": "2245380",
    "end": "2252820"
  },
  {
    "text": "our HTTP bin service from the phone uses which has basically uh istio sidecar",
    "start": "2252820",
    "end": "2259300"
  },
  {
    "text": "proxy enabled uh it generated the exit code 56 that means it was not able to",
    "start": "2259300",
    "end": "2265660"
  },
  {
    "text": "gather any data so what happened here is the peer authentication policy observed",
    "start": "2265660",
    "end": "2271839"
  },
  {
    "text": "that okay someone uh trying to send a plain text request to the parts or a",
    "start": "2271839",
    "end": "2279339"
  },
  {
    "text": "containers inside my particular namespace let me reject it and that's",
    "start": "2279339",
    "end": "2284920"
  },
  {
    "text": "how it is giving the exit code 56 okay it will happen the same for uh even if",
    "start": "2284920",
    "end": "2292300"
  },
  {
    "text": "your service tried to communicate with the other micro service from the bar namespace as well it will also get",
    "start": "2292300",
    "end": "2298359"
  },
  {
    "text": "exited with error code 56. so I hope you are able to understand how",
    "start": "2298359",
    "end": "2306599"
  },
  {
    "text": "servicemesh does helps you uh with this mtls feature to avoid any",
    "start": "2306599",
    "end": "2313920"
  },
  {
    "text": "unsecured uh connection to your micro services and thus it helps that all this",
    "start": "2313920",
    "end": "2321460"
  },
  {
    "text": "intercommunication inside the cluster is also secured in a way okay and now we",
    "start": "2321460",
    "end": "2327880"
  },
  {
    "text": "will uh move to the next demo which is about",
    "start": "2327880",
    "end": "2333760"
  },
  {
    "text": "how an end user will be authenticated when he will try to connect to your",
    "start": "2333760",
    "end": "2339700"
  },
  {
    "text": "micro Services which are covered by your uh istio service mesh",
    "start": "2339700",
    "end": "2347880"
  },
  {
    "text": "so for end user authentication purpose if you could see here uh what we uh will",
    "start": "2350560",
    "end": "2358119"
  },
  {
    "text": "try to demo here is if someone want to connect to http bin microservice uh then",
    "start": "2358119",
    "end": "2364300"
  },
  {
    "text": "that external end user request should connect it on Port 80 and uh it should",
    "start": "2364300",
    "end": "2370300"
  },
  {
    "text": "get routed to http bin uh service via sdo gateway called so here we are given",
    "start": "2370300",
    "end": "2375880"
  },
  {
    "text": "name called the HTTP bin uh Gateway service okay and we have also configured",
    "start": "2375880",
    "end": "2381460"
  },
  {
    "text": "the virtual Service as well so request will go from sttp uh Bin",
    "start": "2381460",
    "end": "2389079"
  },
  {
    "text": "gateway to your virtual service so if you describe the Gateway here or Gateway",
    "start": "2389079",
    "end": "2396040"
  },
  {
    "text": "service here you will be able to see that it is trying to show that any request uh end user request that comes",
    "start": "2396040",
    "end": "2402940"
  },
  {
    "text": "should come on Port 80 and if it is coming uh with HTTP protocol then route",
    "start": "2402940",
    "end": "2411579"
  },
  {
    "text": "that request to the istio Ingress Gateway that's what the purpose of this",
    "start": "2411579",
    "end": "2418599"
  },
  {
    "text": "uh Gateway policy okay uh Gateway resource sorry",
    "start": "2418599",
    "end": "2424660"
  },
  {
    "text": "and uh then we have also created this virtual service what this virtual service basically is doing is that it is",
    "start": "2424660",
    "end": "2431800"
  },
  {
    "text": "telling that when a request comes in at the istio Gateway that request should",
    "start": "2431800",
    "end": "2438280"
  },
  {
    "text": "come to me on a virtual service and then I will route that request on Port 8000",
    "start": "2438280",
    "end": "2445000"
  },
  {
    "text": "to service HTTP bin that's what it is",
    "start": "2445000",
    "end": "2450460"
  },
  {
    "text": "trying to denote here okay and uh we have also created a request",
    "start": "2450460",
    "end": "2457060"
  },
  {
    "text": "authentication mechanism here uh if you will do yeah as you can see here the",
    "start": "2457060",
    "end": "2463359"
  },
  {
    "text": "request authentication policy called the JWT example so the way we had a peer authentication policy in issue to uh",
    "start": "2463359",
    "end": "2471220"
  },
  {
    "text": "secure the service to service communication if you want end user uh traffic coming to your uh service mesh",
    "start": "2471220",
    "end": "2478540"
  },
  {
    "text": "based microservice then uh you need to define a resource called as a request",
    "start": "2478540",
    "end": "2484119"
  },
  {
    "text": "authentication uh this request authentication policy in uh istio",
    "start": "2484119",
    "end": "2489460"
  },
  {
    "text": "service mesh helps you to validate that the request that is coming",
    "start": "2489460",
    "end": "2497140"
  },
  {
    "text": "is coming with the JWT token which is",
    "start": "2497140",
    "end": "2502180"
  },
  {
    "text": "been issued by a particular uh a predefined user here in this case we are",
    "start": "2502180",
    "end": "2508420"
  },
  {
    "text": "saying testing address secure.io and it is also making sure that to check if",
    "start": "2508420",
    "end": "2514240"
  },
  {
    "text": "that request is uh been validated with the public key which is already which is",
    "start": "2514240",
    "end": "2521859"
  },
  {
    "text": "something that istio is already aware of okay uh so but uh here could be the case",
    "start": "2521859",
    "end": "2530980"
  },
  {
    "text": "that this request policy authentication policy can detect uh whether the request is uh",
    "start": "2530980",
    "end": "2541420"
  },
  {
    "text": "coming with the right valid JWT tokens or not only if the",
    "start": "2541420",
    "end": "2547900"
  },
  {
    "text": "sum value uh for token is assigned but in case let's say no value or no token",
    "start": "2547900",
    "end": "2554079"
  },
  {
    "text": "is passed unfortunately it does pass the request inside and so for the very same",
    "start": "2554079",
    "end": "2559720"
  },
  {
    "text": "purpose we have created another authorization policy as you could see here on screen what this policy",
    "start": "2559720",
    "end": "2566619"
  },
  {
    "text": "basically does is it is telling Stu that if any end user request comes without",
    "start": "2566619",
    "end": "2574359"
  },
  {
    "text": "any uh JWT token you basically need to deny that request so we'll do a demo",
    "start": "2574359",
    "end": "2582940"
  },
  {
    "text": "we'll again try to send a call request here if you see we are not passing any header uh any JWT valid token",
    "start": "2582940",
    "end": "2591339"
  },
  {
    "text": "so it will give you four zero three uh thanks to that with the revision policy that we defined and uh now thanks to the",
    "start": "2591339",
    "end": "2599500"
  },
  {
    "text": "request authentication policy that we have defined let's say I'm randomly passing some uh JWT tokens like dead",
    "start": "2599500",
    "end": "2607359"
  },
  {
    "text": "beef or something so what it should happen is it should reject that request",
    "start": "2607359",
    "end": "2613599"
  },
  {
    "text": "and that's the reason you are able to see it has given 401 error uh what for",
    "start": "2613599",
    "end": "2619359"
  },
  {
    "text": "this demo purpose I have done is I have uh stored or picked up the token which is available here uh on a istio uh",
    "start": "2619359",
    "end": "2627880"
  },
  {
    "text": "sample uh examples so I have stored at uh inside a token variable and now that",
    "start": "2627880",
    "end": "2634720"
  },
  {
    "text": "token is uh basically this one which is a valid token so any end is a request",
    "start": "2634720",
    "end": "2641380"
  },
  {
    "text": "that is coming with this token should be will should be allowed by our istio and",
    "start": "2641380",
    "end": "2650020"
  },
  {
    "text": "that's what you will see now so here I will again run the same call",
    "start": "2650020",
    "end": "2655540"
  },
  {
    "text": "request now here this time if you see I am passing it the JWT token which has",
    "start": "2655540",
    "end": "2662740"
  },
  {
    "text": "been rightly issued and now as you could see it is giving 200 uh response so",
    "start": "2662740",
    "end": "2670900"
  },
  {
    "text": "that's how uh this is your service mesh basically helps you with the end user",
    "start": "2670900",
    "end": "2676599"
  },
  {
    "text": "authentication and authorization uh again to repeat history was just one",
    "start": "2676599",
    "end": "2681819"
  },
  {
    "text": "example these features are pretty common in any solution that you use and uh that",
    "start": "2681819",
    "end": "2688119"
  },
  {
    "text": "does helps uh you with the security and compliance perspective as well",
    "start": "2688119",
    "end": "2694140"
  },
  {
    "text": "so uh that's uh very much from this webinar and I hope you find it",
    "start": "2695740",
    "end": "2701560"
  },
  {
    "text": "insightful and took away something new from this webinar and uh",
    "start": "2701560",
    "end": "2707260"
  },
  {
    "text": "you can reach out to me at any time on LinkedIn or Twitter for any query around service mesh and thank you so much again",
    "start": "2707260",
    "end": "2714280"
  },
  {
    "text": "for watching this uh thanks",
    "start": "2714280",
    "end": "2718799"
  }
]