[
  {
    "text": "hello good afternoon to all the audience here and I'm very excited to be here and",
    "start": "319",
    "end": "7120"
  },
  {
    "text": "I feel that all you are also excited to part of this Cube day India so here I'm",
    "start": "7120",
    "end": "13240"
  },
  {
    "text": "going to present this topic use merido to create network services for Telo use cases using secondary networking for",
    "start": "13240",
    "end": "20560"
  },
  {
    "text": "kubernets right a little bit about me I am G bat nagar I am uh playing the role",
    "start": "20560",
    "end": "27960"
  },
  {
    "text": "of healing System Manager as part of techn system management business area cloud services business and operations",
    "start": "27960",
    "end": "34239"
  },
  {
    "text": "support system and you can see my LinkedIn profile here you can we can always connect on the LinkedIn and basically I",
    "start": "34239",
    "end": "42039"
  },
  {
    "text": "enjoy reading and playing tennis I am C CK certified I AWS Cloud practitioner",
    "start": "42039",
    "end": "47280"
  },
  {
    "text": "also and have certifications from data stack as well as TM Forum so definitely we can connect here",
    "start": "47280",
    "end": "54480"
  },
  {
    "text": "so uh I have been involved with kuber net from last around uh 7 8 years",
    "start": "54480",
    "end": "60519"
  },
  {
    "text": "Primary in the Telecom domain so as part of ericon we are basically in the Journey of cloud native and we are",
    "start": "60519",
    "end": "69280"
  },
  {
    "text": "basically deploying our products on the kubernets",
    "start": "69280",
    "end": "74479"
  },
  {
    "text": "platform so this is the agenda that I want to cover right so what is meradio",
    "start": "76439",
    "end": "82720"
  },
  {
    "text": "and what is second networking for kubernets workloads TCO requirements for kubernets workloads some TCO use cases",
    "start": "82720",
    "end": "88840"
  },
  {
    "text": "where merido can be used right so secondary networking so just",
    "start": "88840",
    "end": "93960"
  },
  {
    "text": "starting with what is badio itself right so it is a open source project which provides various capabilities to attract",
    "start": "93960",
    "end": "101840"
  },
  {
    "text": "uh the external traffic within kubernets via secondary networking right so it is available at the G up uh and it a",
    "start": "101840",
    "end": "109119"
  },
  {
    "text": "primary return in the G primary langage and if you look into merido basically it requires uh for it it works on the",
    "start": "109119",
    "end": "116119"
  },
  {
    "text": "kubernetes 1.21 it requires p network service m and Linux kernel basically SP",
    "start": "116119",
    "end": "122119"
  },
  {
    "text": "is just uh to give the mutual authentication between different workloads so it provides a mtls kind of",
    "start": "122119",
    "end": "130640"
  },
  {
    "text": "uh support there for various uh Mero ports that are working deploying on the",
    "start": "130640",
    "end": "135959"
  },
  {
    "text": "kubernetes network service mesh basically is a hybrid multicloud IP service mesh that for example it facilitates",
    "start": "135959",
    "end": "144800"
  },
  {
    "text": "the the multi- high communication between L3 domain so if you have your uh",
    "start": "144800",
    "end": "151000"
  },
  {
    "text": "kuet workload deployed across the Clusters or VMware or or across the",
    "start": "151000",
    "end": "156879"
  },
  {
    "text": "clouds you can use network service mesh to create connections between them right",
    "start": "156879",
    "end": "162319"
  },
  {
    "text": "so basically this is merido and it is basically using these underlying softwares right so bulk of work that or",
    "start": "162319",
    "end": "171280"
  },
  {
    "text": "functionality that Maro provides a buil on the network service mesh right so what is secondary networking or",
    "start": "171280",
    "end": "178680"
  },
  {
    "text": "so when I first first heard this term I was little confused because if you look into the documentation it always talks",
    "start": "178680",
    "end": "185200"
  },
  {
    "text": "about primary uh interface and all so just to uh what it is all right so we",
    "start": "185200",
    "end": "192040"
  },
  {
    "text": "have the kuet p with primary network interface it zero so through this uh",
    "start": "192040",
    "end": "197519"
  },
  {
    "text": "interface all the communication is happening the liveness proes Readiness proes are working on this listening to",
    "start": "197519",
    "end": "203480"
  },
  {
    "text": "the communication channels and all right so now if uh there are more network",
    "start": "203480",
    "end": "210120"
  },
  {
    "text": "interfaces in your ports and these network interfaces can be used to talk to other networks then we basically call",
    "start": "210120",
    "end": "217400"
  },
  {
    "text": "these Network attachments as secondary network interfaces so anything other than primary is secondary network",
    "start": "217400",
    "end": "223439"
  },
  {
    "text": "interface so when because when I first heard the terms I was little confused so",
    "start": "223439",
    "end": "228640"
  },
  {
    "text": "I thought it will good to capture here so again coming to what is merido",
    "start": "228640",
    "end": "234799"
  },
  {
    "text": "right so as you see this is a kubernets cluster we have deployed here and is",
    "start": "234799",
    "end": "240439"
  },
  {
    "text": "your user application that is running in a port so user application is a container that is running in a user Port",
    "start": "240439",
    "end": "247040"
  },
  {
    "text": "now to use the merido what it does it provides a sidecar container called a",
    "start": "247040",
    "end": "252079"
  },
  {
    "text": "tapa sidecar container it is called Target access point Ambassador so it is based on the Ambassador design pattern",
    "start": "252079",
    "end": "258639"
  },
  {
    "text": "so it provides an interface through which you can control what traffic that",
    "start": "258639",
    "end": "264479"
  },
  {
    "text": "is coming to your secondary network interface so it provides a grpc API hosted as a site car container so your",
    "start": "264479",
    "end": "271639"
  },
  {
    "text": "application is there as part of container itself in the user port and the medio side car container is",
    "start": "271639",
    "end": "276919"
  },
  {
    "text": "providing you the grpc interface to connect to the external world right now",
    "start": "276919",
    "end": "282320"
  },
  {
    "text": "there are more components to merido so if you see uh this sidecar container in",
    "start": "282320",
    "end": "287600"
  },
  {
    "text": "turns talk to a network service again it's a port and it basically provides",
    "start": "287600",
    "end": "293639"
  },
  {
    "text": "two functionalities a TR traffic classifier and network service instances so again we operat on layer three layer",
    "start": "293639",
    "end": "300840"
  },
  {
    "text": "4 to provide distribution V again socalled secondary networking so it uph",
    "start": "300840",
    "end": "306280"
  },
  {
    "text": "holds the traffic Separation on the default primary Network within the cluster so the primary network interface",
    "start": "306280",
    "end": "311840"
  },
  {
    "text": "is not touched it is the secondary interface through which all the user plane traffic is passing and basically",
    "start": "311840",
    "end": "318000"
  },
  {
    "text": "there's a traffic classifier you can use it to separate the user traffic into multiple groups so I have example for",
    "start": "318000",
    "end": "324479"
  },
  {
    "text": "that maybe that will become more clear when we go through right",
    "start": "324479",
    "end": "330160"
  },
  {
    "text": "so as we said uh we use this term service attractor right so what medo",
    "start": "330160",
    "end": "336479"
  },
  {
    "text": "does basically it is talking to the external gateways using routing protocols like bgp and all and it can",
    "start": "336479",
    "end": "343400"
  },
  {
    "text": "announce the virtual IP addresses to the external gateways and through this whip it can attract the external traffic",
    "start": "343400",
    "end": "350479"
  },
  {
    "text": "towards your tapa side car container right so the gate from the Gateway",
    "start": "350479",
    "end": "355680"
  },
  {
    "text": "itself data data Gateway the traffic is coming to your network service that is a board that is deploy in your cuber",
    "start": "355680",
    "end": "362080"
  },
  {
    "text": "cluster and then through that tapa side car container right so user application has the logic",
    "start": "362080",
    "end": "370199"
  },
  {
    "text": "to process the external traffic while external traffic is reaches through your",
    "start": "370199",
    "end": "376240"
  },
  {
    "text": "uh container in the user Port through the grpc API right so some of the",
    "start": "376240",
    "end": "382160"
  },
  {
    "text": "telecon requirements that we can basically look upon what we expect from the kuet workload right so it industry",
    "start": "382160",
    "end": "389520"
  },
  {
    "text": "has been using kuber net workloads from quite some time but Telco industry is catching up and I'm also the part of",
    "start": "389520",
    "end": "396400"
  },
  {
    "text": "that industry itself so but if you look into a telecom perspective we have some very specific requirements like end to",
    "start": "396400",
    "end": "403000"
  },
  {
    "text": "end traffic separation isolation so basically in we want the traffic to be separated from uh from the beginner and",
    "start": "403000",
    "end": "411120"
  },
  {
    "text": "to the actual pod itself Network address translation there no there are many",
    "start": "411120",
    "end": "416440"
  },
  {
    "text": "protocols in Telecom like zp St TCP that basically the network address",
    "start": "416440",
    "end": "422639"
  },
  {
    "text": "translation is problematic there cluster wide virtual IP as a source address for ESS traffic from application ports so we",
    "start": "422639",
    "end": "429440"
  },
  {
    "text": "need a virtual IP of weip that is same even for the egress traffic right so I",
    "start": "429440",
    "end": "435440"
  },
  {
    "text": "have a slide for that I I think that will make much more sense and high performance user plane traffic right we",
    "start": "435440",
    "end": "441319"
  },
  {
    "text": "for instance we have the media servers that basically have to download or stream the uh uh Media Services or media",
    "start": "441319",
    "end": "449960"
  },
  {
    "text": "traffic to the End customer and there we need a high performance right primary networking of kubernets not that",
    "start": "449960",
    "end": "456039"
  },
  {
    "text": "sufficient for that support for non IP protocols like ethernet on all so that is the some of the Telco requirement",
    "start": "456039",
    "end": "463080"
  },
  {
    "text": "that is basically expected from cuber net workloads right so what I try to",
    "start": "463080",
    "end": "468560"
  },
  {
    "text": "cover basically try to capture some Telecom use cases so that we can",
    "start": "468560",
    "end": "473919"
  },
  {
    "text": "basically uh uh uh demonstrate or see what is the power of mid how and which",
    "start": "473919",
    "end": "480680"
  },
  {
    "text": "of the use cases where it can help right so one is SS is a leg protocol and it's",
    "start": "480680",
    "end": "486680"
  },
  {
    "text": "still used in number of Telecom products so how the Legacy Telecom products do IP validation by establishing connection",
    "start": "486680",
    "end": "492879"
  },
  {
    "text": "between peers so still uh the peers in ss7 do uh the IP validation right",
    "start": "492879",
    "end": "499520"
  },
  {
    "text": "segregation of onm and real time traffic so realtime traffic is the voice traffic that basically we are making voice calls",
    "start": "499520",
    "end": "505479"
  },
  {
    "text": "onm traffic is the alarms and operational traffic so as a telecom operator they want to segregate this",
    "start": "505479",
    "end": "512080"
  },
  {
    "text": "traffic into all together separate paths right classification steering or traffic",
    "start": "512080",
    "end": "517518"
  },
  {
    "text": "basically you want to classify and steer traffic based on five toles basically the source and destination IP source and",
    "start": "517519",
    "end": "524519"
  },
  {
    "text": "destination ports and protocol right so basically using this five toles you want",
    "start": "524519",
    "end": "529640"
  },
  {
    "text": "to segregate your traffic right so for instance uh we DNS protocol is there it",
    "start": "529640",
    "end": "534880"
  },
  {
    "text": "works on both TCP and UDP on Port 53 so might be you want to handled DNS UDP",
    "start": "534880",
    "end": "541399"
  },
  {
    "text": "based traffic and DNS TCP traffic separately right so this is example of again first",
    "start": "541399",
    "end": "547760"
  },
  {
    "text": "use case we have a signaling protocol SSM communication happening so we our the user pod and this can be remote s so",
    "start": "547760",
    "end": "555440"
  },
  {
    "text": "I can take example for instance this user pod wants to do a location lookup through using this ss7 PR this is might",
    "start": "555440",
    "end": "561440"
  },
  {
    "text": "be an hlr so whenever the ESS traffic originates it takes the IP of the worker",
    "start": "561440",
    "end": "566720"
  },
  {
    "text": "node right so and when we configure in the remote ss7 perer is the load",
    "start": "566720",
    "end": "573680"
  },
  {
    "text": "balancer IP so all the services or whatever services that I want to expose on the kubernets is through the load",
    "start": "573680",
    "end": "579480"
  },
  {
    "text": "balancer only right so I have configured that load balancer IP at the remote ss7 PR but when suppose my user Port wants",
    "start": "579480",
    "end": "588480"
  },
  {
    "text": "to do some lookup location inquiry right it's initiate a traffic and it initiates",
    "start": "588480",
    "end": "594240"
  },
  {
    "text": "a query toward the remote ss7 Pier now what happens is that this is the default behavior on the kuet since user pod IPS",
    "start": "594240",
    "end": "602440"
  },
  {
    "text": "are Emeral they don't exist or known to the outside world so when it passes the",
    "start": "602440",
    "end": "607519"
  },
  {
    "text": "boundary of theet cluster it is replaced by the worker node IP now this worker",
    "start": "607519",
    "end": "613000"
  },
  {
    "text": "node IP is not recognized by the remote paer because we have configured the load balancer IP right and we don't know",
    "start": "613000",
    "end": "619519"
  },
  {
    "text": "where the user pod might reside later on right it can be on the worker node a then it can move to worker node B and",
    "start": "619519",
    "end": "625440"
  },
  {
    "text": "that way right so what this problem Sol by merido is that again it has a concept",
    "start": "625440",
    "end": "632399"
  },
  {
    "text": "of virtual IP or whip right so rather than publishing address of a load balancer we publish or configure IP",
    "start": "632399",
    "end": "639720"
  },
  {
    "text": "address of the whp right now all the traffic that is passing through is through the media ports so the ESS",
    "start": "639720",
    "end": "647200"
  },
  {
    "text": "traffic when it originates basically user application invoke the grpc API of the tapa side car container that is",
    "start": "647200",
    "end": "652720"
  },
  {
    "text": "Target access point Ambassador uh side car and then basically it passes through Mido and again uh uh then it basically H",
    "start": "652720",
    "end": "661920"
  },
  {
    "text": "reaches the remote pair so in this case no n happens because uh the the media",
    "start": "661920",
    "end": "668440"
  },
  {
    "text": "ports take care of that and basically uh your e traffic has the same IP address",
    "start": "668440",
    "end": "675160"
  },
  {
    "text": "that has been configured right so for for the IND traffic as well as eess traffic you have the same IP address",
    "start": "675160",
    "end": "681760"
  },
  {
    "text": "right so that uh remote ss7 pair is able to establish the communication because",
    "start": "681760",
    "end": "688000"
  },
  {
    "text": "it recognizes that IP right now there's a separate requirement",
    "start": "688000",
    "end": "693240"
  },
  {
    "text": "in the uh Telecom that we want to segregate onm and real time traffic right so I have some real-time traffic",
    "start": "693240",
    "end": "699680"
  },
  {
    "text": "where voice calls happening I have the onm traffic where uh monitoring alarms and handling are happening so again we",
    "start": "699680",
    "end": "706079"
  },
  {
    "text": "can use merido for this use case for instance in this use case we have segregated this onm traffic and the",
    "start": "706079",
    "end": "713160"
  },
  {
    "text": "realtime traffic on two separate whs that is whip one and whip two right",
    "start": "713160",
    "end": "719800"
  },
  {
    "text": "and this midu what it does it is a conser trench so trench basically again",
    "start": "719800",
    "end": "725040"
  },
  {
    "text": "it's a uh it's uh normal cure that is there used in meradio it's seen as an",
    "start": "725040",
    "end": "730959"
  },
  {
    "text": "extension of the actual uh Network it is a trench that upholds the traffic",
    "start": "730959",
    "end": "736040"
  },
  {
    "text": "separation inside each Network inside the realm of the cluster so basically trench is uh if I more going into it it",
    "start": "736040",
    "end": "744000"
  },
  {
    "text": "is a custom resource definition but what it does it gives you a functionality to so that you can able to segregate your",
    "start": "744000",
    "end": "750240"
  },
  {
    "text": "traffic right so for instance in here what we have done we have created two uh",
    "start": "750240",
    "end": "756079"
  },
  {
    "text": "interfaces uh NS sm0 nm1 and we have published whb 1 and whb 2 so using this",
    "start": "756079",
    "end": "762680"
  },
  {
    "text": "you can basically segregate your realtime traffic as well as on traffic so on total different uh Network paths",
    "start": "762680",
    "end": "771959"
  },
  {
    "text": "so for instance one can be on the vline 100 other can be vline 200 that way now classify ation and steering of",
    "start": "771959",
    "end": "779720"
  },
  {
    "text": "traffic is another important use case where M can be very useful right so what",
    "start": "779720",
    "end": "785079"
  },
  {
    "text": "I have taken a use case here that suppose you want have requirement that you have a DNS traffic and you want to",
    "start": "785079",
    "end": "791120"
  },
  {
    "text": "handle DNS UDP traffic and TCP traffic separately right so here what is this",
    "start": "791120",
    "end": "798160"
  },
  {
    "text": "diagram what happens that flow a takes care of the udb part of the DNS while",
    "start": "798160",
    "end": "803839"
  },
  {
    "text": "flow B takes care of the TCP part so flow a takes the UDP based DNS traffic",
    "start": "803839",
    "end": "809639"
  },
  {
    "text": "which passes the conduit through stream one and into Target a application while flow B takes care of the TCP traffic",
    "start": "809639",
    "end": "817120"
  },
  {
    "text": "right so uh so let's go to next slide so what starting point is that we have uh",
    "start": "817120",
    "end": "825519"
  },
  {
    "text": "deployed our user port with a tapa side car container we have the user application",
    "start": "825519",
    "end": "832079"
  },
  {
    "text": "and the tapa side car container as a user Port now we have also deployed the M ports so first we create a trench",
    "start": "832079",
    "end": "839480"
  },
  {
    "text": "so trench is as as we discussed it's Define the extension of the external network into the cubet cluster so it's",
    "start": "839480",
    "end": "846360"
  },
  {
    "text": "nothing but is a again a custom resource definition that is created right so when",
    "start": "846360",
    "end": "851600"
  },
  {
    "text": "we create a trench basically we create a configuration within the kubernets in a conflict map",
    "start": "851600",
    "end": "857759"
  },
  {
    "text": "right now we have created trench so this trench can talk to external data",
    "start": "857759",
    "end": "863079"
  },
  {
    "text": "center right now then we create a whip so whip basically again publishes a",
    "start": "863079",
    "end": "868759"
  },
  {
    "text": "unique virtual IP that is known to the external Data Center and these VIPs are",
    "start": "868759",
    "end": "874839"
  },
  {
    "text": "are basically uh basically user application is listening on these whips",
    "start": "874839",
    "end": "880160"
  },
  {
    "text": "on the secondary network interface using the top of site container so basically we have create a whip here and we seate",
    "start": "880160",
    "end": "886040"
  },
  {
    "text": "a whip with a trench so we have created whip 1 similarly whip 2 can be created",
    "start": "886040",
    "end": "891199"
  },
  {
    "text": "and can be assigned an address right again conduit basically is uh",
    "start": "891199",
    "end": "898360"
  },
  {
    "text": "again a custom res definition there in merido basically what it does it provides as of now a state L load Balan",
    "start": "898360",
    "end": "905480"
  },
  {
    "text": "so you have multiple ports so it can load balance your traffic across that Port right so again we create a conduit",
    "start": "905480",
    "end": "911880"
  },
  {
    "text": "we esate it with a trench right so now what we have done basically created a",
    "start": "911880",
    "end": "917120"
  },
  {
    "text": "stream basically streams a logical grouping of traffic flow the stream pawns to the conduit where the traffic",
    "start": "917120",
    "end": "924000"
  },
  {
    "text": "can pass so it is a actual Network entity in which you in which you refer in your target application",
    "start": "924000",
    "end": "930519"
  },
  {
    "text": "right and so we basically create a stream as in this example EML we ass",
    "start": "930519",
    "end": "935920"
  },
  {
    "text": "with a conduit and trench right and now we create a flow right this flow",
    "start": "935920",
    "end": "941440"
  },
  {
    "text": "basically what we are doing this flow basically classifies your incoming traffic in the base of five tles that is",
    "start": "941440",
    "end": "948120"
  },
  {
    "text": "Source address and destination address and the ports right and protocol right",
    "start": "948120",
    "end": "953199"
  },
  {
    "text": "so basically as part of this yamama example yaml we have created a flow a with that is about trench a in this with",
    "start": "953199",
    "end": "960440"
  },
  {
    "text": "the stream one and we also seted a whip and basically it it's expecting all the",
    "start": "960440",
    "end": "966759"
  },
  {
    "text": "traffic uh and the destination Port is 53 and the port and protocol is UDP",
    "start": "966759",
    "end": "972120"
  },
  {
    "text": "right because we want to classify as Define the use case itself DNS traffic on the TCP and UDP",
    "start": "972120",
    "end": "979560"
  },
  {
    "text": "right now what is basically we have create a flow but again we that the",
    "start": "979560",
    "end": "985560"
  },
  {
    "text": "traffic will come to the data center Gateway so we need to talk to the data center Gateway so the in the there's",
    "start": "985560",
    "end": "991839"
  },
  {
    "text": "another custom res definition in the midu that is called Gateway basically Gateway is nothing but it basically it",
    "start": "991839",
    "end": "999160"
  },
  {
    "text": "it is a peer to the data center Gateway node and it basically mimic or basically",
    "start": "999160",
    "end": "1004199"
  },
  {
    "text": "have the configuration to talk to the uh data center Gateway so in the uh for in",
    "start": "1004199",
    "end": "1010680"
  },
  {
    "text": "this slide itself we have created a Gateway object custom definition that is ass with the trench a and we basically",
    "start": "1010680",
    "end": "1017480"
  },
  {
    "text": "give an address which Gateway is talked to and what are the basically configuration or the uh specs through",
    "start": "1017480",
    "end": "1024000"
  },
  {
    "text": "which it can talk to that Gateway right now basically this is comes the attractor part so attractor is the",
    "start": "1024000",
    "end": "1029600"
  },
  {
    "text": "custom resch definition in the merido that basically the uses the Gateway configuration to talk to the external",
    "start": "1029600",
    "end": "1035798"
  },
  {
    "text": "Gateway and extract the traffic from the external data center into the cubet",
    "start": "1035799",
    "end": "1041240"
  },
  {
    "text": "cluster so it basically attracts and basically advertise this IP that is okay",
    "start": "1041240",
    "end": "1046798"
  },
  {
    "text": "this is a virtual IP that needs to uh and this IP needs to be this traffic",
    "start": "1046799",
    "end": "1053640"
  },
  {
    "text": "towards this IP needs to be routed to do this cluster so this it passes through",
    "start": "1053640",
    "end": "1059000"
  },
  {
    "text": "the flow through this condu stream and then to the Target application Target application B so using this we basically",
    "start": "1059000",
    "end": "1066000"
  },
  {
    "text": "can split the traffic TCP and UDP traffic uh for the Target a application",
    "start": "1066000",
    "end": "1071120"
  },
  {
    "text": "and a target b application right so it is basically you can use",
    "start": "1071120",
    "end": "1077919"
  },
  {
    "text": "here I example of Ip V4 but you can IP use an i configuration of Ip V6",
    "start": "1077919",
    "end": "1084799"
  },
  {
    "text": "also so if in all if I try to summarize what are the key takeaway points that we",
    "start": "1085200",
    "end": "1091760"
  },
  {
    "text": "can I want to summarize so so B can be used to facilitate attraction and distribution external traffic within",
    "start": "1091760",
    "end": "1098320"
  },
  {
    "text": "kubernets via so-called secondary lettering with minimum changes to your application so basically your primary",
    "start": "1098320",
    "end": "1104760"
  },
  {
    "text": "interface of kubernets is not touched so the all your probes or liance probes",
    "start": "1104760",
    "end": "1109919"
  },
  {
    "text": "that our primary interface is not touch so it is not expected uh to that you change your kubernets application to",
    "start": "1109919",
    "end": "1117559"
  },
  {
    "text": "work with videoo but uh what you need to do you need to deploy a sta sidecar",
    "start": "1117559",
    "end": "1122600"
  },
  {
    "text": "container within your uh user port and then you can use that grpc API provided",
    "start": "1122600",
    "end": "1128799"
  },
  {
    "text": "by the side tapa side car container to talk to the in the external",
    "start": "1128799",
    "end": "1134200"
  },
  {
    "text": "world right so basically it is it doesn't expect that you take change your architecture or deployment model as such",
    "start": "1134200",
    "end": "1140559"
  },
  {
    "text": "it works with that only right it it again uh next Point",
    "start": "1140559",
    "end": "1145960"
  },
  {
    "text": "basically provide a side card container using a grps API right so you can start stop traffic toward the user Port so",
    "start": "1145960",
    "end": "1152120"
  },
  {
    "text": "basically using that grps API you can start the traffic stop the traffic right what is traffic that is coming from the",
    "start": "1152120",
    "end": "1159080"
  },
  {
    "text": "external data center Gateway towards your secondary networking interface towards your user Port so using the topa",
    "start": "1159080",
    "end": "1166280"
  },
  {
    "text": "side car container using the API hosted there you can basically start and stop the traffic right you have the control",
    "start": "1166280",
    "end": "1172159"
  },
  {
    "text": "there as a user application your application is processing the data so you have the control there uh on the",
    "start": "1172159",
    "end": "1178480"
  },
  {
    "text": "traffic itself how the traffic needs to come how the traffic needs to be classified in that way and the third",
    "start": "1178480",
    "end": "1184600"
  },
  {
    "text": "point take away I can say that service address and webs are announced to the external data center we have different",
    "start": "1184600",
    "end": "1189880"
  },
  {
    "text": "kinds of routing protocols by medo front end so front end basically the component that is front ending with the external",
    "start": "1189880",
    "end": "1196480"
  },
  {
    "text": "data center it basically hosts the ractor in the Gateway components so it is uh attracting the external traffic on",
    "start": "1196480",
    "end": "1204159"
  },
  {
    "text": "that web itself so it basically atti that this is the virtual IP for which it",
    "start": "1204159",
    "end": "1209360"
  },
  {
    "text": "wants to attract the traffic and when the traffic lands on that kuet cluster it basically classifies the traffic",
    "start": "1209360",
    "end": "1216720"
  },
  {
    "text": "based on your configuration and it lands to the tapa side container and then consumed by your user",
    "start": "1216720",
    "end": "1223200"
  },
  {
    "text": "application right so again it can solve different Telco use cases which are other quite tricky to solve using",
    "start": "1223200",
    "end": "1229480"
  },
  {
    "text": "existing primary network interface of cubet workloads so again lot many Telco",
    "start": "1229480",
    "end": "1235760"
  },
  {
    "text": "workloads or use cases can be solved here right because primary interface by default what you get out of KU is the",
    "start": "1235760",
    "end": "1242200"
  },
  {
    "text": "primary interface and there are a lot of use case like for instance we discussed that uh if you want to high performance",
    "start": "1242200",
    "end": "1250080"
  },
  {
    "text": "user plane traffic right again it's still tricky to solve through the primary interface you need some secondary interface through which highp",
    "start": "1250080",
    "end": "1257080"
  },
  {
    "text": "speeded data that can come to your application itself right so these are the key",
    "start": "1257080",
    "end": "1264640"
  },
  {
    "text": "takeaways so I I have captured here that some references that are quite good for instance one talk by Leon in in this",
    "start": "1264640",
    "end": "1272760"
  },
  {
    "text": "here it is very good so it gives you a internal working of the how this uh medo",
    "start": "1272760",
    "end": "1279000"
  },
  {
    "text": "is happening right it is very well explained there right so you can look into that stock itself uh to understand",
    "start": "1279000",
    "end": "1286520"
  },
  {
    "text": "how medo is working what is the role NSM is playing there",
    "start": "1286520",
    "end": "1292520"
  },
  {
    "text": "right so with this thank you again this is my link ID uh you can always reach me",
    "start": "1292520",
    "end": "1298320"
  },
  {
    "text": "uh on this link ID and again thanks for",
    "start": "1298320",
    "end": "1303840"
  },
  {
    "text": "giving uh patience listening and thanks for time for coming for this talk thank",
    "start": "1303840",
    "end": "1309760"
  },
  {
    "text": "you any questions I'm [Applause]",
    "start": "1309760",
    "end": "1315329"
  },
  {
    "text": "here",
    "start": "1317039",
    "end": "1320039"
  },
  {
    "text": "sure can you speak bit louder right yes that's the right so my",
    "start": "1341400",
    "end": "1348520"
  },
  {
    "text": "question is if I want to expose multiple Source IP address and each one for",
    "start": "1348520",
    "end": "1353919"
  },
  {
    "text": "different different destination IP address then maximum how many Source IP address it can retain for intercluster",
    "start": "1353919",
    "end": "1360320"
  },
  {
    "text": "so basically uh you you define a configuration that makes Target what you",
    "start": "1360320",
    "end": "1365640"
  },
  {
    "text": "want to achieve right so you can uh configure multiple webs right so basically it depend uh it depends how",
    "start": "1365640",
    "end": "1373520"
  },
  {
    "text": "much IP that you want to expose right yes within your cluster is not ins but",
    "start": "1373520",
    "end": "1378960"
  },
  {
    "text": "outside the cluster outside the cluster basically when the issue is that when your ESS traffic goes out it takes the",
    "start": "1378960",
    "end": "1385360"
  },
  {
    "text": "IP of your uh worker node right but",
    "start": "1385360",
    "end": "1390400"
  },
  {
    "text": "right but in you may not want that case to happen right you want to have your services to have a consistent IP even",
    "start": "1390400",
    "end": "1396720"
  },
  {
    "text": "when the uh your traffic goes out of the cluster itself right yeah so that IP I",
    "start": "1396720",
    "end": "1402200"
  },
  {
    "text": "don't want only one IP see if I want to talk destination one I will use Source One if I want to talk to I will use",
    "start": "1402200",
    "end": "1408840"
  },
  {
    "text": "source to and none of them will translate to worker note with this design so how many",
    "start": "1408840",
    "end": "1415559"
  },
  {
    "text": "Source One Source two up to Source n how many such n Source IP uh my port can",
    "start": "1415559",
    "end": "1421880"
  },
  {
    "text": "have it virtual I I can it have you can add um number of vir IP as such there no",
    "start": "1421880",
    "end": "1428400"
  },
  {
    "text": "it depends on application because these traffic that is coming on your uh on these virtual IPS is consumed by your uh",
    "start": "1428400",
    "end": "1435360"
  },
  {
    "text": "Target application itself right so each IP represents a service itself right so",
    "start": "1435360",
    "end": "1440440"
  },
  {
    "text": "correct there is not limit as such right uh but you can define a limit for instance you can define a Max Target",
    "start": "1440440",
    "end": "1446240"
  },
  {
    "text": "itself that okay I want to only expose 100 Target itself but you can expose",
    "start": "1446240",
    "end": "1452320"
  },
  {
    "text": "multiple whbs even can you can basically consume traffic of the multiple tips",
    "start": "1452320",
    "end": "1457400"
  },
  {
    "text": "whps within your user cluster by the same part itself that way okay thank you",
    "start": "1457400",
    "end": "1464679"
  },
  {
    "text": "okay I have a small question in this context and I and I'm just asking a very basic",
    "start": "1466799",
    "end": "1473399"
  },
  {
    "text": "uh understanding so this whips and all do you need a MTA cni to create this how",
    "start": "1473399",
    "end": "1479320"
  },
  {
    "text": "does it because secondary interfaces are normal in Telco World there are always a MTA cni and then it creates this virtual",
    "start": "1479320",
    "end": "1487640"
  },
  {
    "text": "um ethernet vth zeros and all and then is it something in between or you can",
    "start": "1487640",
    "end": "1493000"
  },
  {
    "text": "I'm and is it is it very similar to Eno in primary right is is this merido is",
    "start": "1493000",
    "end": "1498200"
  },
  {
    "text": "very similar to Eno is it correct understanding actually what uh correct in a way that basically use the MST to",
    "start": "1498200",
    "end": "1504760"
  },
  {
    "text": "create a secondary interface but what it does basically voltis is a uh U",
    "start": "1504760",
    "end": "1510159"
  },
  {
    "text": "multiplexer right it basically create a cni of cni right so it it will help you create a secondary network interface",
    "start": "1510159",
    "end": "1516000"
  },
  {
    "text": "right yeah and then virtualize also right all of those use cases right what I was mentioned after creating a",
    "start": "1516000",
    "end": "1521159"
  },
  {
    "text": "secondary interface you want to attract traffic to that secondary interface right and basically you want have uh",
    "start": "1521159",
    "end": "1527200"
  },
  {
    "text": "services that as published passing through Because unless until you you",
    "start": "1527200",
    "end": "1532240"
  },
  {
    "text": "code in your application itself to listen to that uh secondary network interface things will not happen where",
    "start": "1532240",
    "end": "1539440"
  },
  {
    "text": "medo helpin basically it again use an underl NSM right lot of wiring work is",
    "start": "1539440",
    "end": "1544919"
  },
  {
    "text": "done by the LSM only so it creates basically uh what mulus is doing is done",
    "start": "1544919",
    "end": "1551320"
  },
  {
    "text": "by this LSM itself so it creates a secondary interface in your P itself and",
    "start": "1551320",
    "end": "1556440"
  },
  {
    "text": "then basically M what it does it basically using the attractors and Gateway attract the traffic uh what the",
    "start": "1556440",
    "end": "1564000"
  },
  {
    "text": "web address that you have published on that secondary interface so NSM the",
    "start": "1564000",
    "end": "1569559"
  },
  {
    "text": "network service mesh basically is what is doing that you will expect to MST so but multis has a specific purpose you",
    "start": "1569559",
    "end": "1576320"
  },
  {
    "text": "create a second n interface and then you are there but you have to basically uh develop application or your logic itself",
    "start": "1576320",
    "end": "1583880"
  },
  {
    "text": "to attract traffic to that your P itself will not listen to that secondary Network inter your all services will",
    "start": "1583880",
    "end": "1590080"
  },
  {
    "text": "work on the primary network interface okay so you're saying is that there's there's a network service mission on top of that this right uh architecture of",
    "start": "1590080",
    "end": "1597399"
  },
  {
    "text": "merido fits there's no need of molus cnis as such as such but uh there is a",
    "start": "1597399",
    "end": "1603520"
  },
  {
    "text": "configuration where you can use molus also within the NSM also basically molus",
    "start": "1603520",
    "end": "1608880"
  },
  {
    "text": "what is happening is basically is giving you uh flexibility or functionality to create secondary network interface so",
    "start": "1608880",
    "end": "1615480"
  },
  {
    "text": "NSM is also doing the same thing right so it doing much more than that right yeah got it got it thank",
    "start": "1615480",
    "end": "1622240"
  },
  {
    "text": "you uh so like uh in our environment uh we are moving uh from service M to",
    "start": "1628240",
    "end": "1636760"
  },
  {
    "text": "celium uh to minimize that side car container context and uh we were using",
    "start": "1636760",
    "end": "1642440"
  },
  {
    "text": "mtas uh in there in user plane functions uh we have so how like like like uh in",
    "start": "1642440",
    "end": "1648760"
  },
  {
    "text": "here tapa is acting as a side car container so is it is there any way that",
    "start": "1648760",
    "end": "1655440"
  },
  {
    "text": "it can be uh handled without sidecar container like the kernel space Can it",
    "start": "1655440",
    "end": "1661279"
  },
  {
    "text": "can handle and their provision those okay uh the present architecture what we",
    "start": "1661279",
    "end": "1666640"
  },
  {
    "text": "have is the merid itself it uses side car container because what it does basically the side car container holds",
    "start": "1666640",
    "end": "1673200"
  },
  {
    "text": "or basically give you a grpc API interface where your user container",
    "start": "1673200",
    "end": "1678640"
  },
  {
    "text": "within that user Port can query and basically get the data right so uh this",
    "start": "1678640",
    "end": "1684120"
  },
  {
    "text": "is how it works right so basically the site car container is giving you a",
    "start": "1684120",
    "end": "1689799"
  },
  {
    "text": "flexibility in the sense that your application is remain what it is right",
    "start": "1689799",
    "end": "1694960"
  },
  {
    "text": "it it only needs to call grps Api to get that external traffic right and you and",
    "start": "1694960",
    "end": "1700840"
  },
  {
    "text": "definitely you need to do the configuration and all that for hold this thing to working but your application",
    "start": "1700840",
    "end": "1707880"
  },
  {
    "text": "can work the same right you you just need to add a sidecar container to your uh user pod and then call the API and",
    "start": "1707880",
    "end": "1715480"
  },
  {
    "text": "then basically you can uh the when using gpsc API you can consume that traffic",
    "start": "1715480",
    "end": "1721200"
  },
  {
    "text": "itself right so you need to have a side car container tapa side car container to basically use",
    "start": "1721200",
    "end": "1728840"
  },
  {
    "text": "this hi uh so my question is how do we scale the parts here because uh is the",
    "start": "1731799",
    "end": "1736919"
  },
  {
    "text": "VIP associated with each pod or is it at the service level if it is at the Pod",
    "start": "1736919",
    "end": "1742080"
  },
  {
    "text": "level then we might have to create the other resources right the train and the VIP uh CRS",
    "start": "1742080",
    "end": "1748360"
  },
  {
    "text": "itself again it depends on a application how basically load intensive how it is there right so meria what it does it is",
    "start": "1748360",
    "end": "1755240"
  },
  {
    "text": "giving you a virtual IP where you are exposing your services right so same uh",
    "start": "1755240",
    "end": "1762200"
  },
  {
    "text": "the P itself so each uh uh P each Port will have a one side car container that",
    "start": "1762200",
    "end": "1767559"
  },
  {
    "text": "is the right and number of ports that are there as part of the med application itself so it depends on how your",
    "start": "1767559",
    "end": "1775120"
  },
  {
    "text": "application basically uh looking right or what are the throughput requirements",
    "start": "1775120",
    "end": "1780519"
  },
  {
    "text": "of there right so that needs to be work out right that way so for each Port",
    "start": "1780519",
    "end": "1785840"
  },
  {
    "text": "we'll be having one trench defined or is it at the service level so this",
    "start": "1785840",
    "end": "1792679"
  },
  {
    "text": "uh",
    "start": "1796320",
    "end": "1799320"
  },
  {
    "text": "so again here basically one user Port has one side car container and again",
    "start": "1801600",
    "end": "1806880"
  },
  {
    "text": "these set of ports that are part of the merido ports are common right so these are uh you can say this this is part of",
    "start": "1806880",
    "end": "1812880"
  },
  {
    "text": "something underly infrastructure that all ports they can use right so but again uh you might want to create a",
    "start": "1812880",
    "end": "1820360"
  },
  {
    "text": "replica sets or replicas of the P itself right so it depends on on the through itself but once deployed in your clust",
    "start": "1820360",
    "end": "1827519"
  },
  {
    "text": "itself this is uh the network service is common for all the parts right the tapa",
    "start": "1827519",
    "end": "1832880"
  },
  {
    "text": "side car container is specific to your user Port but this the network service is common networ okay yeah thank you",
    "start": "1832880",
    "end": "1840720"
  },
  {
    "text": "okay thank you again thank you all for asking questions and coming here giving",
    "start": "1840720",
    "end": "1847640"
  },
  {
    "text": "your time thank you all",
    "start": "1847640",
    "end": "1852399"
  }
]