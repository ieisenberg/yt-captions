[
  {
    "text": "hi my name is jaro i'm software engineer",
    "start": "1360",
    "end": "3199"
  },
  {
    "text": "at",
    "start": "3199",
    "end": "3439"
  },
  {
    "text": "trade and envy contributor my co-speaker",
    "start": "3439",
    "end": "6240"
  },
  {
    "text": "today is takeshi",
    "start": "6240",
    "end": "7279"
  },
  {
    "text": "who is author of the engineer at trade",
    "start": "7279",
    "end": "9280"
  },
  {
    "text": "and contributed to proxy wasn't",
    "start": "9280",
    "end": "11280"
  },
  {
    "text": "in this session we'll present you the",
    "start": "11280",
    "end": "12799"
  },
  {
    "text": "work that we've been doing",
    "start": "12799",
    "end": "14320"
  },
  {
    "text": "to enable new more accessible way to",
    "start": "14320",
    "end": "17440"
  },
  {
    "text": "develop extensions for envoy",
    "start": "17440",
    "end": "20000"
  },
  {
    "text": "so here is our our agenda for today",
    "start": "20000",
    "end": "23279"
  },
  {
    "text": "first we will explain why webassembly",
    "start": "23279",
    "end": "25279"
  },
  {
    "text": "out of all these things",
    "start": "25279",
    "end": "26560"
  },
  {
    "text": "what is a problem then we'll talk",
    "start": "26560",
    "end": "28800"
  },
  {
    "text": "specifically about webassembly in",
    "start": "28800",
    "end": "30400"
  },
  {
    "text": "anyway and next we'll introduce you ando",
    "start": "30400",
    "end": "33200"
  },
  {
    "text": "sdk for us that we've been working on",
    "start": "33200",
    "end": "35680"
  },
  {
    "text": "and our primary focus will be on lessons",
    "start": "35680",
    "end": "37840"
  },
  {
    "text": "learned because",
    "start": "37840",
    "end": "39120"
  },
  {
    "text": "they are not limited to rust and go",
    "start": "39120",
    "end": "41200"
  },
  {
    "text": "we've picked those items that are",
    "start": "41200",
    "end": "42800"
  },
  {
    "text": "universal and with minor changes",
    "start": "42800",
    "end": "44800"
  },
  {
    "text": "can apply to every language after that",
    "start": "44800",
    "end": "47440"
  },
  {
    "text": "we'll demo a practical",
    "start": "47440",
    "end": "48800"
  },
  {
    "text": "ready-to-use extension that has been",
    "start": "48800",
    "end": "50719"
  },
  {
    "text": "developed using this sdk",
    "start": "50719",
    "end": "52879"
  },
  {
    "text": "and then takeshi will take over to",
    "start": "52879",
    "end": "55600"
  },
  {
    "text": "update you",
    "start": "55600",
    "end": "56480"
  },
  {
    "text": "on almost any sdk for go",
    "start": "56480",
    "end": "59520"
  },
  {
    "text": "we'll finish with key takeaways call to",
    "start": "59520",
    "end": "61520"
  },
  {
    "text": "action and q a session",
    "start": "61520",
    "end": "64158"
  },
  {
    "text": "let's be clear about the goals we set",
    "start": "64159",
    "end": "66720"
  },
  {
    "text": "for this session",
    "start": "66720",
    "end": "67680"
  },
  {
    "text": "for ourselves we want you to walk away",
    "start": "67680",
    "end": "70560"
  },
  {
    "text": "out of the session",
    "start": "70560",
    "end": "71760"
  },
  {
    "text": "knowing what web assembly in anyway is",
    "start": "71760",
    "end": "74240"
  },
  {
    "text": "all about",
    "start": "74240",
    "end": "75119"
  },
  {
    "text": "how to get the most out of it as of",
    "start": "75119",
    "end": "77520"
  },
  {
    "text": "today",
    "start": "77520",
    "end": "78320"
  },
  {
    "text": "and what are the lessons learned by the",
    "start": "78320",
    "end": "80080"
  },
  {
    "text": "community so far",
    "start": "80080",
    "end": "81759"
  },
  {
    "text": "so this is informational component but",
    "start": "81759",
    "end": "84000"
  },
  {
    "text": "there is also inspirational one we want",
    "start": "84000",
    "end": "86320"
  },
  {
    "text": "to inspire you",
    "start": "86320",
    "end": "87439"
  },
  {
    "text": "to give up assembly a real try not in a",
    "start": "87439",
    "end": "90240"
  },
  {
    "text": "year from now",
    "start": "90240",
    "end": "91439"
  },
  {
    "text": "when you might think it will be finally",
    "start": "91439",
    "end": "93040"
  },
  {
    "text": "production ready but",
    "start": "93040",
    "end": "94479"
  },
  {
    "text": "today so give it a try to extensions",
    "start": "94479",
    "end": "97759"
  },
  {
    "text": "that we've been developing",
    "start": "97759",
    "end": "99200"
  },
  {
    "text": "and that will show you later in the demo",
    "start": "99200",
    "end": "101360"
  },
  {
    "text": "section",
    "start": "101360",
    "end": "102320"
  },
  {
    "text": "try to develop a new extension of your",
    "start": "102320",
    "end": "104079"
  },
  {
    "text": "own try to develop nysdk for your",
    "start": "104079",
    "end": "106320"
  },
  {
    "text": "favorite language",
    "start": "106320",
    "end": "107439"
  },
  {
    "text": "and ultimately join the community and",
    "start": "107439",
    "end": "110159"
  },
  {
    "text": "help us",
    "start": "110159",
    "end": "110720"
  },
  {
    "text": "to develop all these things together",
    "start": "110720",
    "end": "114159"
  },
  {
    "text": "so as attendee to this conference you're",
    "start": "114159",
    "end": "116399"
  },
  {
    "text": "probably familiar with the status quo",
    "start": "116399",
    "end": "118000"
  },
  {
    "text": "of invo extensibility you have to",
    "start": "118000",
    "end": "121119"
  },
  {
    "text": "develop custom extensions in c plus plus",
    "start": "121119",
    "end": "123280"
  },
  {
    "text": "statistically link them into invoice",
    "start": "123280",
    "end": "124799"
  },
  {
    "text": "binary maintain a custom build of envoy",
    "start": "124799",
    "end": "127600"
  },
  {
    "text": "keep up with upstream changes keep up",
    "start": "127600",
    "end": "129200"
  },
  {
    "text": "with security releases overall there is",
    "start": "129200",
    "end": "131520"
  },
  {
    "text": "a lot of burden",
    "start": "131520",
    "end": "132640"
  },
  {
    "text": "involved when you decide to extend envoy",
    "start": "132640",
    "end": "135120"
  },
  {
    "text": "in such a way",
    "start": "135120",
    "end": "136959"
  },
  {
    "text": "that's why another community has been",
    "start": "136959",
    "end": "138959"
  },
  {
    "text": "asking for a long way for different",
    "start": "138959",
    "end": "140720"
  },
  {
    "text": "for a long time for a different",
    "start": "140720",
    "end": "142319"
  },
  {
    "text": "extensibility model",
    "start": "142319",
    "end": "144000"
  },
  {
    "text": "where extensions could be loaded into",
    "start": "144000",
    "end": "145680"
  },
  {
    "text": "android dynamically",
    "start": "145680",
    "end": "147040"
  },
  {
    "text": "and ideally it would be possible to",
    "start": "147040",
    "end": "149360"
  },
  {
    "text": "develop extensions",
    "start": "149360",
    "end": "150319"
  },
  {
    "text": "in languages other than cpus plus and",
    "start": "150319",
    "end": "152879"
  },
  {
    "text": "webassembly is",
    "start": "152879",
    "end": "154000"
  },
  {
    "text": "an answer is technology that makes it",
    "start": "154000",
    "end": "156480"
  },
  {
    "text": "all possible",
    "start": "156480",
    "end": "158640"
  },
  {
    "text": "so webassembly is a virtual machine and",
    "start": "158640",
    "end": "161040"
  },
  {
    "text": "compilation target for general purpose",
    "start": "161040",
    "end": "162720"
  },
  {
    "text": "programming languages",
    "start": "162720",
    "end": "164080"
  },
  {
    "text": "what it means is that you can develop",
    "start": "164080",
    "end": "166000"
  },
  {
    "text": "applications",
    "start": "166000",
    "end": "167200"
  },
  {
    "text": "in programming languages like cpus plus",
    "start": "167200",
    "end": "169040"
  },
  {
    "text": "or as to go but when it comes to",
    "start": "169040",
    "end": "170959"
  },
  {
    "text": "compilation",
    "start": "170959",
    "end": "171760"
  },
  {
    "text": "compile into webassembly code instead of",
    "start": "171760",
    "end": "173920"
  },
  {
    "text": "machine code",
    "start": "173920",
    "end": "176319"
  },
  {
    "text": "envoy plays a role of assembly host it's",
    "start": "176319",
    "end": "179040"
  },
  {
    "text": "responsible for loading and loading",
    "start": "179040",
    "end": "180640"
  },
  {
    "text": "webassembly",
    "start": "180640",
    "end": "181599"
  },
  {
    "text": "based extensions at runtime for",
    "start": "181599",
    "end": "184000"
  },
  {
    "text": "exporting apis",
    "start": "184000",
    "end": "185680"
  },
  {
    "text": "that such extensions can use and",
    "start": "185680",
    "end": "188000"
  },
  {
    "text": "integrating such extensions",
    "start": "188000",
    "end": "189760"
  },
  {
    "text": "into its regular request processing flow",
    "start": "189760",
    "end": "193599"
  },
  {
    "text": "the final piece of the puzzle that you",
    "start": "193599",
    "end": "195599"
  },
  {
    "text": "need to know is proximation abi",
    "start": "195599",
    "end": "198159"
  },
  {
    "text": "it's a specification of a low level",
    "start": "198159",
    "end": "200239"
  },
  {
    "text": "interface between proxy and webassembly",
    "start": "200239",
    "end": "202720"
  },
  {
    "text": "based extension",
    "start": "202720",
    "end": "204400"
  },
  {
    "text": "as its name implies it's not limited to",
    "start": "204400",
    "end": "207120"
  },
  {
    "text": "envoy",
    "start": "207120",
    "end": "208159"
  },
  {
    "text": "and it's meant to allow the same",
    "start": "208159",
    "end": "209599"
  },
  {
    "text": "extension to run inside",
    "start": "209599",
    "end": "211519"
  },
  {
    "text": "various proxies compatible with this",
    "start": "211519",
    "end": "213440"
  },
  {
    "text": "spec",
    "start": "213440",
    "end": "214799"
  },
  {
    "text": "very ambitious goal so the next question",
    "start": "214799",
    "end": "218400"
  },
  {
    "text": "is",
    "start": "218400",
    "end": "218720"
  },
  {
    "text": "why rust as we mentioned you can develop",
    "start": "218720",
    "end": "221840"
  },
  {
    "text": "webassembly-based extensions",
    "start": "221840",
    "end": "223440"
  },
  {
    "text": "in any language that supports",
    "start": "223440",
    "end": "225120"
  },
  {
    "text": "compilation into webassembly code",
    "start": "225120",
    "end": "227680"
  },
  {
    "text": "so how do you choose one of these",
    "start": "227680",
    "end": "229120"
  },
  {
    "text": "languages",
    "start": "229120",
    "end": "231280"
  },
  {
    "text": "we prepared a table and we suggest you",
    "start": "231280",
    "end": "234159"
  },
  {
    "text": "to try",
    "start": "234159",
    "end": "234959"
  },
  {
    "text": "to make the decision to try to answer",
    "start": "234959",
    "end": "236959"
  },
  {
    "text": "the phone questions",
    "start": "236959",
    "end": "239040"
  },
  {
    "text": "can you use features of this language uh",
    "start": "239040",
    "end": "242480"
  },
  {
    "text": "all feature source language and all its",
    "start": "242480",
    "end": "244879"
  },
  {
    "text": "standard library",
    "start": "244879",
    "end": "245920"
  },
  {
    "text": "if you're going to compile it into",
    "start": "245920",
    "end": "247519"
  },
  {
    "text": "webassembly will you",
    "start": "247519",
    "end": "249280"
  },
  {
    "text": "be able to reuse as a library ecosystem",
    "start": "249280",
    "end": "252480"
  },
  {
    "text": "and will the language retain its",
    "start": "252480",
    "end": "254400"
  },
  {
    "text": "original performance characteristics",
    "start": "254400",
    "end": "256320"
  },
  {
    "text": "if compiled into webassembly instead of",
    "start": "256320",
    "end": "258400"
  },
  {
    "text": "machine code",
    "start": "258400",
    "end": "260560"
  },
  {
    "text": "well as you can see c plus plus and rust",
    "start": "260560",
    "end": "263120"
  },
  {
    "text": "are the most obvious choices",
    "start": "263120",
    "end": "265199"
  },
  {
    "text": "however don't be discouraged about",
    "start": "265199",
    "end": "267280"
  },
  {
    "text": "assembly script in tiny go",
    "start": "267280",
    "end": "269120"
  },
  {
    "text": "just set your expectations right in",
    "start": "269120",
    "end": "271680"
  },
  {
    "text": "advance",
    "start": "271680",
    "end": "274080"
  },
  {
    "text": "so to be fair there are sdks available",
    "start": "274960",
    "end": "277919"
  },
  {
    "text": "for envoy",
    "start": "277919",
    "end": "279120"
  },
  {
    "text": "simplesplash sdk assemblyscript sdk and",
    "start": "279120",
    "end": "281440"
  },
  {
    "text": "even rust sdk",
    "start": "281440",
    "end": "282960"
  },
  {
    "text": "so why do did we decide to develop",
    "start": "282960",
    "end": "286000"
  },
  {
    "text": "yet another one so after looking into",
    "start": "286000",
    "end": "288720"
  },
  {
    "text": "all the",
    "start": "288720",
    "end": "289360"
  },
  {
    "text": "sdks we came up with a slightly",
    "start": "289360",
    "end": "291680"
  },
  {
    "text": "different set of requirements",
    "start": "291680",
    "end": "293360"
  },
  {
    "text": "first of all we want our extension model",
    "start": "293360",
    "end": "295360"
  },
  {
    "text": "to be independent from work proximation",
    "start": "295360",
    "end": "297520"
  },
  {
    "text": "ebi",
    "start": "297520",
    "end": "298880"
  },
  {
    "text": "as we mentioned proxibus api tries to be",
    "start": "298880",
    "end": "301919"
  },
  {
    "text": "compatible with all proxies out there",
    "start": "301919",
    "end": "304479"
  },
  {
    "text": "which means",
    "start": "304479",
    "end": "305520"
  },
  {
    "text": "that it's not really aligned with envoy",
    "start": "305520",
    "end": "309759"
  },
  {
    "text": "so when we develop http filter often for",
    "start": "309759",
    "end": "312960"
  },
  {
    "text": "and we want to call this to filter and",
    "start": "312960",
    "end": "314800"
  },
  {
    "text": "not http context",
    "start": "314800",
    "end": "316240"
  },
  {
    "text": "when we develop http filter factory we",
    "start": "316240",
    "end": "318479"
  },
  {
    "text": "want to call it this way instead of root",
    "start": "318479",
    "end": "320160"
  },
  {
    "text": "context",
    "start": "320160",
    "end": "320960"
  },
  {
    "text": "and when we develop access logger we",
    "start": "320960",
    "end": "323120"
  },
  {
    "text": "want to call it this way",
    "start": "323120",
    "end": "324000"
  },
  {
    "text": "instead of well there is no even",
    "start": "324000",
    "end": "325680"
  },
  {
    "text": "equivalent in proxy bus",
    "start": "325680",
    "end": "328800"
  },
  {
    "text": "next we want to develop all types of",
    "start": "328800",
    "end": "331759"
  },
  {
    "text": "android extensions",
    "start": "331759",
    "end": "333199"
  },
  {
    "text": "and we want to use the same sdk for all",
    "start": "333199",
    "end": "335759"
  },
  {
    "text": "of them",
    "start": "335759",
    "end": "336240"
  },
  {
    "text": "and the same model for all of them next",
    "start": "336240",
    "end": "339039"
  },
  {
    "text": "we",
    "start": "339039",
    "end": "339520"
  },
  {
    "text": "want to have seamless migration paths",
    "start": "339520",
    "end": "342160"
  },
  {
    "text": "for existing extensions from c plus plus",
    "start": "342160",
    "end": "344880"
  },
  {
    "text": "into rust webassembly",
    "start": "344880",
    "end": "348000"
  },
  {
    "text": "and finally we want source code of our",
    "start": "348000",
    "end": "350320"
  },
  {
    "text": "extensions",
    "start": "350320",
    "end": "351120"
  },
  {
    "text": "to be unit testable so here is a quick",
    "start": "351120",
    "end": "354080"
  },
  {
    "text": "glimpse into",
    "start": "354080",
    "end": "355039"
  },
  {
    "text": "nysdk for us to give you an idea how the",
    "start": "355039",
    "end": "357759"
  },
  {
    "text": "source code looks like",
    "start": "357759",
    "end": "360240"
  },
  {
    "text": "this is hello world http filter",
    "start": "360240",
    "end": "363440"
  },
  {
    "text": "where we handle request headers next",
    "start": "363440",
    "end": "366720"
  },
  {
    "text": "this is factory for this hp filter",
    "start": "366720",
    "end": "369919"
  },
  {
    "text": "responsible for creating new instances",
    "start": "369919",
    "end": "373039"
  },
  {
    "text": "and initialize them with some shared",
    "start": "373039",
    "end": "375280"
  },
  {
    "text": "state",
    "start": "375280",
    "end": "376800"
  },
  {
    "text": "this is an example of how to use",
    "start": "376800",
    "end": "381039"
  },
  {
    "text": "apis provided by any host like in this",
    "start": "381039",
    "end": "383600"
  },
  {
    "text": "case",
    "start": "383600",
    "end": "384080"
  },
  {
    "text": "stream info api that you can use to find",
    "start": "384080",
    "end": "387039"
  },
  {
    "text": "out more information about",
    "start": "387039",
    "end": "388720"
  },
  {
    "text": "current request that is being processed",
    "start": "388720",
    "end": "391360"
  },
  {
    "text": "and finally",
    "start": "391360",
    "end": "392880"
  },
  {
    "text": "example of a unit test where we create",
    "start": "392880",
    "end": "395759"
  },
  {
    "text": "something called fake envoy",
    "start": "395759",
    "end": "397440"
  },
  {
    "text": "setup listener send request and a third",
    "start": "397440",
    "end": "400560"
  },
  {
    "text": "response",
    "start": "400560",
    "end": "403120"
  },
  {
    "text": "so the primary goal of the session is to",
    "start": "403280",
    "end": "405199"
  },
  {
    "text": "share experience",
    "start": "405199",
    "end": "406720"
  },
  {
    "text": "so let's work through the issues we've",
    "start": "406720",
    "end": "408960"
  },
  {
    "text": "met while developing this sdk",
    "start": "408960",
    "end": "410960"
  },
  {
    "text": "the lessons we learned and some random",
    "start": "410960",
    "end": "412960"
  },
  {
    "text": "notes on the current status of",
    "start": "412960",
    "end": "414720"
  },
  {
    "text": "proximation api and envoy",
    "start": "414720",
    "end": "418319"
  },
  {
    "text": "error handing is a crucial to every",
    "start": "418319",
    "end": "421039"
  },
  {
    "text": "application",
    "start": "421039",
    "end": "422160"
  },
  {
    "text": "this is why the very first question you",
    "start": "422160",
    "end": "423840"
  },
  {
    "text": "might want to ask is what happens",
    "start": "423840",
    "end": "426080"
  },
  {
    "text": "when things go wrong so what happens",
    "start": "426080",
    "end": "428400"
  },
  {
    "text": "when extension fails at runtime",
    "start": "428400",
    "end": "431039"
  },
  {
    "text": "let's try to find out by introducing",
    "start": "431039",
    "end": "433919"
  },
  {
    "text": "intentional error",
    "start": "433919",
    "end": "435120"
  },
  {
    "text": "like index out of bounds error",
    "start": "435120",
    "end": "439360"
  },
  {
    "text": "so what happens if you try to run this",
    "start": "439360",
    "end": "441120"
  },
  {
    "text": "code",
    "start": "441120",
    "end": "442880"
  },
  {
    "text": "you'll find out that until there is",
    "start": "442880",
    "end": "444479"
  },
  {
    "text": "recently nowhere was completely crashing",
    "start": "444479",
    "end": "446720"
  },
  {
    "text": "after such a bug in extension code",
    "start": "446720",
    "end": "448880"
  },
  {
    "text": "so apparently webassembly sunbox wasn't",
    "start": "448880",
    "end": "451199"
  },
  {
    "text": "a true sandbox",
    "start": "451199",
    "end": "452800"
  },
  {
    "text": "right now android behavior has changed",
    "start": "452800",
    "end": "454800"
  },
  {
    "text": "and it doesn't crash anymore",
    "start": "454800",
    "end": "456560"
  },
  {
    "text": "but it doesn't work either once error",
    "start": "456560",
    "end": "459680"
  },
  {
    "text": "like index out of",
    "start": "459680",
    "end": "460960"
  },
  {
    "text": "bound happened this filter stops",
    "start": "460960",
    "end": "463360"
  },
  {
    "text": "completely stops working",
    "start": "463360",
    "end": "466240"
  },
  {
    "text": "so if we look into the cost of this",
    "start": "466240",
    "end": "467840"
  },
  {
    "text": "error it happens that",
    "start": "467840",
    "end": "470479"
  },
  {
    "text": "when panic is happening inside",
    "start": "470479",
    "end": "472879"
  },
  {
    "text": "webassembly code",
    "start": "472879",
    "end": "474000"
  },
  {
    "text": "its execution gets terminated abruptly",
    "start": "474000",
    "end": "477440"
  },
  {
    "text": "without doing stack unwinding it means",
    "start": "477440",
    "end": "480000"
  },
  {
    "text": "that memory and heap and locks",
    "start": "480000",
    "end": "482160"
  },
  {
    "text": "are not released and consequently it's",
    "start": "482160",
    "end": "485520"
  },
  {
    "text": "not",
    "start": "485520",
    "end": "485840"
  },
  {
    "text": "longer it's no longer safe to use not",
    "start": "485840",
    "end": "488400"
  },
  {
    "text": "only a single hdb filter instance",
    "start": "488400",
    "end": "491759"
  },
  {
    "text": "the error has originally happened but",
    "start": "491759",
    "end": "494000"
  },
  {
    "text": "zentai wasn't vm",
    "start": "494000",
    "end": "496000"
  },
  {
    "text": "in other words when error happens it",
    "start": "496000",
    "end": "498479"
  },
  {
    "text": "affects not only a single hp request",
    "start": "498479",
    "end": "500560"
  },
  {
    "text": "but rather all requests that being",
    "start": "500560",
    "end": "503440"
  },
  {
    "text": "processed by envoy in parallel",
    "start": "503440",
    "end": "507039"
  },
  {
    "text": "so what solutions",
    "start": "507039",
    "end": "511199"
  },
  {
    "text": "can be there first of all without proper",
    "start": "511199",
    "end": "515039"
  },
  {
    "text": "support for",
    "start": "515039",
    "end": "516000"
  },
  {
    "text": "stack unwinding that should be",
    "start": "516000",
    "end": "517440"
  },
  {
    "text": "implemented by webassembly engine",
    "start": "517440",
    "end": "519120"
  },
  {
    "text": "and your programming language it's not",
    "start": "519120",
    "end": "520800"
  },
  {
    "text": "possible to handle this station",
    "start": "520800",
    "end": "522159"
  },
  {
    "text": "gracefully",
    "start": "522159",
    "end": "523680"
  },
  {
    "text": "until then until such support is",
    "start": "523680",
    "end": "526080"
  },
  {
    "text": "implemented",
    "start": "526080",
    "end": "527120"
  },
  {
    "text": "avoid panics in the source code of your",
    "start": "527120",
    "end": "529680"
  },
  {
    "text": "extension and your",
    "start": "529680",
    "end": "530800"
  },
  {
    "text": "sdk as an example we've designed envoy",
    "start": "530800",
    "end": "534720"
  },
  {
    "text": "sdk for us",
    "start": "534720",
    "end": "535760"
  },
  {
    "text": "to never panic there are no calls to",
    "start": "535760",
    "end": "538560"
  },
  {
    "text": "panic and rape expect in our source code",
    "start": "538560",
    "end": "540800"
  },
  {
    "text": "and all apis must return result type",
    "start": "540800",
    "end": "543440"
  },
  {
    "text": "instead",
    "start": "543440",
    "end": "545839"
  },
  {
    "text": "um this next question so once you",
    "start": "547279",
    "end": "550480"
  },
  {
    "text": "eliminate all the panics",
    "start": "550480",
    "end": "553680"
  },
  {
    "text": "the next question is how do you handle",
    "start": "554240",
    "end": "556880"
  },
  {
    "text": "errors",
    "start": "556880",
    "end": "558480"
  },
  {
    "text": "and here is an example of once again",
    "start": "558480",
    "end": "560800"
  },
  {
    "text": "example of our source code",
    "start": "560800",
    "end": "562720"
  },
  {
    "text": "this is a http filter and",
    "start": "562720",
    "end": "566720"
  },
  {
    "text": "callback which allows extension to",
    "start": "566720",
    "end": "570399"
  },
  {
    "text": "observe and manipulate request headers",
    "start": "570399",
    "end": "573200"
  },
  {
    "text": "this method itself return result type",
    "start": "573200",
    "end": "575600"
  },
  {
    "text": "instead of panicking and inside this",
    "start": "575600",
    "end": "577519"
  },
  {
    "text": "method we called",
    "start": "577519",
    "end": "578800"
  },
  {
    "text": "one of apis provided by anyway yeah like",
    "start": "578800",
    "end": "582480"
  },
  {
    "text": "get request headers there's one thing",
    "start": "582480",
    "end": "585519"
  },
  {
    "text": "that you need to know about",
    "start": "585519",
    "end": "587600"
  },
  {
    "text": "calls from extension into an envoy",
    "start": "587600",
    "end": "590800"
  },
  {
    "text": "is it all such calls can end up with an",
    "start": "590800",
    "end": "593279"
  },
  {
    "text": "error and",
    "start": "593279",
    "end": "594480"
  },
  {
    "text": "you need to handle them in some way",
    "start": "594480",
    "end": "596800"
  },
  {
    "text": "however in most cases",
    "start": "596800",
    "end": "599760"
  },
  {
    "text": "those errors are not recoverable and the",
    "start": "599760",
    "end": "602399"
  },
  {
    "text": "only",
    "start": "602399",
    "end": "602800"
  },
  {
    "text": "logical way that you can do just to",
    "start": "602800",
    "end": "604720"
  },
  {
    "text": "propagate it up",
    "start": "604720",
    "end": "606720"
  },
  {
    "text": "rust provides very convenient syntax",
    "start": "606720",
    "end": "608480"
  },
  {
    "text": "here like this question mark",
    "start": "608480",
    "end": "610880"
  },
  {
    "text": "operator that allows you just to",
    "start": "610880",
    "end": "613200"
  },
  {
    "text": "propagate",
    "start": "613200",
    "end": "615680"
  },
  {
    "text": "error up but in the end there must be",
    "start": "615680",
    "end": "618000"
  },
  {
    "text": "some",
    "start": "618000",
    "end": "618880"
  },
  {
    "text": "code somewhere that actually does error",
    "start": "618880",
    "end": "621279"
  },
  {
    "text": "handling",
    "start": "621279",
    "end": "622800"
  },
  {
    "text": "so our solution to that that we move all",
    "start": "622800",
    "end": "626000"
  },
  {
    "text": "just error handy logic out of your",
    "start": "626000",
    "end": "628399"
  },
  {
    "text": "extension",
    "start": "628399",
    "end": "629279"
  },
  {
    "text": "into sdk itself so as long as your",
    "start": "629279",
    "end": "632800"
  },
  {
    "text": "extension",
    "start": "632800",
    "end": "633680"
  },
  {
    "text": "returns error and not panic we will be",
    "start": "633680",
    "end": "636640"
  },
  {
    "text": "able to",
    "start": "636640",
    "end": "637920"
  },
  {
    "text": "provide proper error handling logic",
    "start": "637920",
    "end": "641360"
  },
  {
    "text": "so for hd filters we will reply with",
    "start": "641360",
    "end": "644000"
  },
  {
    "text": "http",
    "start": "644000",
    "end": "644720"
  },
  {
    "text": "status 500 internal service error and",
    "start": "644720",
    "end": "647920"
  },
  {
    "text": "for network",
    "start": "647920",
    "end": "648800"
  },
  {
    "text": "filters ideally we would close the",
    "start": "648800",
    "end": "650959"
  },
  {
    "text": "connection entirely",
    "start": "650959",
    "end": "652320"
  },
  {
    "text": "however it's not possible right now",
    "start": "652320",
    "end": "653920"
  },
  {
    "text": "because proxy wasn't abi",
    "start": "653920",
    "end": "655760"
  },
  {
    "text": "doesn't support closing connections just",
    "start": "655760",
    "end": "658839"
  },
  {
    "text": "yet",
    "start": "658839",
    "end": "661839"
  },
  {
    "text": "next about error handling you need to",
    "start": "661839",
    "end": "664399"
  },
  {
    "text": "know that webassembly doesn't support",
    "start": "664399",
    "end": "666079"
  },
  {
    "text": "taking a stack trace",
    "start": "666079",
    "end": "668079"
  },
  {
    "text": "so if we take a look into our array",
    "start": "668079",
    "end": "670800"
  },
  {
    "text": "index",
    "start": "670800",
    "end": "672240"
  },
  {
    "text": "out of bounds error once again uh",
    "start": "672240",
    "end": "675440"
  },
  {
    "text": "and the log uh and the line is low that",
    "start": "675440",
    "end": "679200"
  },
  {
    "text": "it leaves",
    "start": "679200",
    "end": "680800"
  },
  {
    "text": "it doesn't have the entire complete",
    "start": "680800",
    "end": "683920"
  },
  {
    "text": "stack trace",
    "start": "683920",
    "end": "684560"
  },
  {
    "text": "but rather only a single line and often",
    "start": "684560",
    "end": "687440"
  },
  {
    "text": "one line",
    "start": "687440",
    "end": "688000"
  },
  {
    "text": "is not enough to understand this entire",
    "start": "688000",
    "end": "689600"
  },
  {
    "text": "context that led",
    "start": "689600",
    "end": "691040"
  },
  {
    "text": "to this particular error",
    "start": "691040",
    "end": "694160"
  },
  {
    "text": "so this is this issue is not unique to",
    "start": "694480",
    "end": "696720"
  },
  {
    "text": "rust",
    "start": "696720",
    "end": "697680"
  },
  {
    "text": "it's inherent to webassembly itself and",
    "start": "697680",
    "end": "700560"
  },
  {
    "text": "in order to fix",
    "start": "700560",
    "end": "701760"
  },
  {
    "text": "this there is a proposal in wasi which",
    "start": "701760",
    "end": "704399"
  },
  {
    "text": "is",
    "start": "704399",
    "end": "705120"
  },
  {
    "text": "a system interface for webassembly",
    "start": "705120",
    "end": "708720"
  },
  {
    "text": "until it gets fixed properly in the meal",
    "start": "708720",
    "end": "710639"
  },
  {
    "text": "time",
    "start": "710639",
    "end": "712160"
  },
  {
    "text": "the only workaround is to enrich the",
    "start": "712160",
    "end": "714240"
  },
  {
    "text": "context for your errors",
    "start": "714240",
    "end": "715760"
  },
  {
    "text": "manually for example by wrapping them",
    "start": "715760",
    "end": "718720"
  },
  {
    "text": "before propagating them up",
    "start": "718720",
    "end": "722000"
  },
  {
    "text": "watch out for string type in your",
    "start": "724000",
    "end": "726639"
  },
  {
    "text": "programming language",
    "start": "726639",
    "end": "729200"
  },
  {
    "text": "c plus plus and in c plus plus and go",
    "start": "729200",
    "end": "732079"
  },
  {
    "text": "string",
    "start": "732079",
    "end": "732720"
  },
  {
    "text": "is an arbitrary byte array while in rust",
    "start": "732720",
    "end": "735360"
  },
  {
    "text": "and assembly script",
    "start": "735360",
    "end": "737279"
  },
  {
    "text": "string must be utf encoded",
    "start": "737279",
    "end": "740320"
  },
  {
    "text": "so the problem is that when you uh with",
    "start": "740320",
    "end": "743120"
  },
  {
    "text": "things like http header values",
    "start": "743120",
    "end": "745680"
  },
  {
    "text": "are not required to be utf-8 encoded so",
    "start": "745680",
    "end": "748399"
  },
  {
    "text": "anyway we'll happily pass these values",
    "start": "748399",
    "end": "750480"
  },
  {
    "text": "into your extension",
    "start": "750480",
    "end": "752480"
  },
  {
    "text": "and your extension will crash while",
    "start": "752480",
    "end": "754880"
  },
  {
    "text": "trying to tube them",
    "start": "754880",
    "end": "756399"
  },
  {
    "text": "as utf-8 encoded",
    "start": "756399",
    "end": "760560"
  },
  {
    "text": "and the problem is it's security",
    "start": "760800",
    "end": "762560"
  },
  {
    "text": "vulnerability",
    "start": "762560",
    "end": "763920"
  },
  {
    "text": "attacker can crash your envoy or make",
    "start": "763920",
    "end": "766560"
  },
  {
    "text": "extension non-operational",
    "start": "766560",
    "end": "768240"
  },
  {
    "text": "by sending specific request data",
    "start": "768240",
    "end": "772000"
  },
  {
    "text": "so as a solution in android sdk for us",
    "start": "772000",
    "end": "774560"
  },
  {
    "text": "we're using a custom",
    "start": "774560",
    "end": "776079"
  },
  {
    "text": "type bytestream to be very specific very",
    "start": "776079",
    "end": "779279"
  },
  {
    "text": "explicit",
    "start": "779279",
    "end": "781040"
  },
  {
    "text": "about those places where utf encoding is",
    "start": "781040",
    "end": "783839"
  },
  {
    "text": "not guaranteed",
    "start": "783839",
    "end": "785760"
  },
  {
    "text": "also we'd like to ask proximation spec",
    "start": "785760",
    "end": "788399"
  },
  {
    "text": "to be more explicit about encoding of",
    "start": "788399",
    "end": "790160"
  },
  {
    "text": "strings",
    "start": "790160",
    "end": "791040"
  },
  {
    "text": "in its apis because using by streaming",
    "start": "791040",
    "end": "793920"
  },
  {
    "text": "everywhere is not a solution",
    "start": "793920",
    "end": "795760"
  },
  {
    "text": "it makes things more complicated when",
    "start": "795760",
    "end": "797920"
  },
  {
    "text": "you need to pass such a value into",
    "start": "797920",
    "end": "799760"
  },
  {
    "text": "next string scientific api",
    "start": "799760",
    "end": "803440"
  },
  {
    "text": "let's move on to unit testing there are",
    "start": "804079",
    "end": "806480"
  },
  {
    "text": "two approaches",
    "start": "806480",
    "end": "807440"
  },
  {
    "text": "how to unit test code of your extension",
    "start": "807440",
    "end": "810480"
  },
  {
    "text": "or sdk",
    "start": "810480",
    "end": "811839"
  },
  {
    "text": "one of them is to compile into",
    "start": "811839",
    "end": "814160"
  },
  {
    "text": "webassembly code",
    "start": "814160",
    "end": "815200"
  },
  {
    "text": "and run it inside a real webassembly",
    "start": "815200",
    "end": "817120"
  },
  {
    "text": "host",
    "start": "817120",
    "end": "818800"
  },
  {
    "text": "a second option is to compile",
    "start": "818800",
    "end": "820560"
  },
  {
    "text": "internative machine code",
    "start": "820560",
    "end": "822160"
  },
  {
    "text": "and run it without any ties to",
    "start": "822160",
    "end": "824079"
  },
  {
    "text": "webassembly",
    "start": "824079",
    "end": "825519"
  },
  {
    "text": "and the problem here is that to be able",
    "start": "825519",
    "end": "828320"
  },
  {
    "text": "to run",
    "start": "828320",
    "end": "828880"
  },
  {
    "text": "gene test inside real web assembly host",
    "start": "828880",
    "end": "831199"
  },
  {
    "text": "you need at least",
    "start": "831199",
    "end": "832160"
  },
  {
    "text": "a voice support which is a system",
    "start": "832160",
    "end": "833839"
  },
  {
    "text": "interface for the assembly",
    "start": "833839",
    "end": "836399"
  },
  {
    "text": "however there is an issue in proximation",
    "start": "836399",
    "end": "838160"
  },
  {
    "text": "api in particular",
    "start": "838160",
    "end": "840000"
  },
  {
    "text": "function named emmalog that makes it",
    "start": "840000",
    "end": "842160"
  },
  {
    "text": "impossible to use it with the rastal",
    "start": "842160",
    "end": "843839"
  },
  {
    "text": "chain",
    "start": "843839",
    "end": "845440"
  },
  {
    "text": "so at the new time we run our unit test",
    "start": "845440",
    "end": "848959"
  },
  {
    "text": "by compiling them into native machine",
    "start": "848959",
    "end": "850560"
  },
  {
    "text": "code",
    "start": "850560",
    "end": "851040"
  },
  {
    "text": "and running them without any type of",
    "start": "851040",
    "end": "853040"
  },
  {
    "text": "assembly which is not bad",
    "start": "853040",
    "end": "854959"
  },
  {
    "text": "just not perfect",
    "start": "854959",
    "end": "857839"
  },
  {
    "text": "um next we want to notice that we've",
    "start": "858399",
    "end": "860959"
  },
  {
    "text": "gone a great length",
    "start": "860959",
    "end": "862240"
  },
  {
    "text": "to support unit testing of extensions",
    "start": "862240",
    "end": "866079"
  },
  {
    "text": "to test individual methods functions in",
    "start": "866079",
    "end": "869680"
  },
  {
    "text": "isolation we provide some fake",
    "start": "869680",
    "end": "871519"
  },
  {
    "text": "implementations like fake stats fake",
    "start": "871519",
    "end": "873839"
  },
  {
    "text": "http client for extreme info",
    "start": "873839",
    "end": "876160"
  },
  {
    "text": "on top of this we also provide test",
    "start": "876160",
    "end": "878160"
  },
  {
    "text": "framework that simulates",
    "start": "878160",
    "end": "879839"
  },
  {
    "text": "in a way request processing flow it",
    "start": "879839",
    "end": "882000"
  },
  {
    "text": "might seem to",
    "start": "882000",
    "end": "882880"
  },
  {
    "text": "too much and it probably is but it",
    "start": "882880",
    "end": "885600"
  },
  {
    "text": "allowed us to catch",
    "start": "885600",
    "end": "886800"
  },
  {
    "text": "some blanks in proxy wasn't spec",
    "start": "886800",
    "end": "890560"
  },
  {
    "text": "and some bugs quirks in real and way",
    "start": "890560",
    "end": "893040"
  },
  {
    "text": "implementation",
    "start": "893040",
    "end": "895759"
  },
  {
    "text": "the next thing to watch out for is that",
    "start": "896959",
    "end": "898959"
  },
  {
    "text": "proximation to be aware of is that proxy",
    "start": "898959",
    "end": "901279"
  },
  {
    "text": "wasn't spec",
    "start": "901279",
    "end": "902160"
  },
  {
    "text": "emits details in certain cases leaving",
    "start": "902160",
    "end": "904959"
  },
  {
    "text": "no other choice",
    "start": "904959",
    "end": "906639"
  },
  {
    "text": "but to learn how to use api by looking",
    "start": "906639",
    "end": "909360"
  },
  {
    "text": "into",
    "start": "909360",
    "end": "910320"
  },
  {
    "text": "invoice source code instead for example",
    "start": "910320",
    "end": "913199"
  },
  {
    "text": "so-called mysterious yellow",
    "start": "913199",
    "end": "914880"
  },
  {
    "text": "proxy get property api",
    "start": "914880",
    "end": "918000"
  },
  {
    "text": "which under the hood uses some ad-hoc",
    "start": "918000",
    "end": "921040"
  },
  {
    "text": "data encoding so after",
    "start": "921040",
    "end": "924240"
  },
  {
    "text": "reverse engineering and resources we",
    "start": "924240",
    "end": "926399"
  },
  {
    "text": "were finally able to",
    "start": "926399",
    "end": "928399"
  },
  {
    "text": "offer much more friendly api for the",
    "start": "928399",
    "end": "931519"
  },
  {
    "text": "users of our moa sdk for us",
    "start": "931519",
    "end": "934240"
  },
  {
    "text": "yeah like like in this example uh when",
    "start": "934240",
    "end": "936720"
  },
  {
    "text": "you",
    "start": "936720",
    "end": "937839"
  },
  {
    "text": "we we are now able to provide strongly",
    "start": "937839",
    "end": "939519"
  },
  {
    "text": "type api to",
    "start": "939519",
    "end": "941440"
  },
  {
    "text": "get from android information about",
    "start": "941440",
    "end": "943680"
  },
  {
    "text": "single request",
    "start": "943680",
    "end": "944880"
  },
  {
    "text": "for example connection id request id",
    "start": "944880",
    "end": "947040"
  },
  {
    "text": "plugin name",
    "start": "947040",
    "end": "949440"
  },
  {
    "text": "and finally final thought about",
    "start": "949440",
    "end": "952000"
  },
  {
    "text": "ergonomics of sdk",
    "start": "952000",
    "end": "954639"
  },
  {
    "text": "the sdk should make a straightforward",
    "start": "954639",
    "end": "956639"
  },
  {
    "text": "how to use",
    "start": "956639",
    "end": "957839"
  },
  {
    "text": "apis correctly in other words",
    "start": "957839",
    "end": "960959"
  },
  {
    "text": "proxy based on spec should not be on the",
    "start": "960959",
    "end": "963279"
  },
  {
    "text": "learning paths of",
    "start": "963279",
    "end": "964399"
  },
  {
    "text": "every extension developer so to make it",
    "start": "964399",
    "end": "967920"
  },
  {
    "text": "possible",
    "start": "967920",
    "end": "968560"
  },
  {
    "text": "we have to be very opinionated in our",
    "start": "968560",
    "end": "971040"
  },
  {
    "text": "sdk",
    "start": "971040",
    "end": "972240"
  },
  {
    "text": "we delivery deliberately abstract it",
    "start": "972240",
    "end": "974639"
  },
  {
    "text": "away from",
    "start": "974639",
    "end": "975279"
  },
  {
    "text": "the low level proximation api",
    "start": "975279",
    "end": "978320"
  },
  {
    "text": "to make our apis more idiomatic to the",
    "start": "978320",
    "end": "981040"
  },
  {
    "text": "language",
    "start": "981040",
    "end": "981680"
  },
  {
    "text": "and more intuitive to the users",
    "start": "981680",
    "end": "985199"
  },
  {
    "text": "and finally its demo time so i've been",
    "start": "985199",
    "end": "988399"
  },
  {
    "text": "telling you how great rust is how great",
    "start": "988399",
    "end": "991759"
  },
  {
    "text": "and why is the case but now you're",
    "start": "991759",
    "end": "993360"
  },
  {
    "text": "probably wondering like okay",
    "start": "993360",
    "end": "995120"
  },
  {
    "text": "show me the code yeah just are there any",
    "start": "995120",
    "end": "997279"
  },
  {
    "text": "real extensions that has been developed",
    "start": "997279",
    "end": "998880"
  },
  {
    "text": "this way",
    "start": "998880",
    "end": "999920"
  },
  {
    "text": "and this is like proud moment where we",
    "start": "999920",
    "end": "1002160"
  },
  {
    "text": "can finally share with you",
    "start": "1002160",
    "end": "1003519"
  },
  {
    "text": "some work that we've been doing at the",
    "start": "1003519",
    "end": "1004880"
  },
  {
    "text": "trade so at a trade we care a lot about",
    "start": "1004880",
    "end": "1007519"
  },
  {
    "text": "enterprise use case",
    "start": "1007519",
    "end": "1009680"
  },
  {
    "text": "and so-called legacy software those",
    "start": "1009680",
    "end": "1012000"
  },
  {
    "text": "legacy systems have been around for",
    "start": "1012000",
    "end": "1013839"
  },
  {
    "text": "decades",
    "start": "1013839",
    "end": "1014480"
  },
  {
    "text": "and will probably stay in the road",
    "start": "1014480",
    "end": "1016399"
  },
  {
    "text": "around for another decades",
    "start": "1016399",
    "end": "1018399"
  },
  {
    "text": "so instead of fighting them off we",
    "start": "1018399",
    "end": "1020560"
  },
  {
    "text": "embrace them",
    "start": "1020560",
    "end": "1022399"
  },
  {
    "text": "so we've been working on on something",
    "start": "1022399",
    "end": "1024079"
  },
  {
    "text": "called can be called enterprise suite",
    "start": "1024079",
    "end": "1026480"
  },
  {
    "text": "which consists of extensions and",
    "start": "1026480",
    "end": "1028558"
  },
  {
    "text": "extensions that are not",
    "start": "1028559",
    "end": "1030480"
  },
  {
    "text": "cloud native they're not hot",
    "start": "1030480",
    "end": "1032400"
  },
  {
    "text": "technologies but still they can be quite",
    "start": "1032400",
    "end": "1034720"
  },
  {
    "text": "useful in device environment as an",
    "start": "1034720",
    "end": "1037038"
  },
  {
    "text": "example it's sncp filter",
    "start": "1037039",
    "end": "1038880"
  },
  {
    "text": "and ldap filter and more will follow so",
    "start": "1038880",
    "end": "1041678"
  },
  {
    "text": "in the demo",
    "start": "1041679",
    "end": "1042480"
  },
  {
    "text": "i will show you a smtp filter but if you",
    "start": "1042480",
    "end": "1044720"
  },
  {
    "text": "prefer ldap",
    "start": "1044720",
    "end": "1045760"
  },
  {
    "text": "filter more you can check it out on your",
    "start": "1045760",
    "end": "1048880"
  },
  {
    "text": "own",
    "start": "1048880",
    "end": "1051120"
  },
  {
    "text": "the use case for android smtp filter is",
    "start": "1051440",
    "end": "1053760"
  },
  {
    "text": "to bring visibility into how your",
    "start": "1053760",
    "end": "1055600"
  },
  {
    "text": "applications",
    "start": "1055600",
    "end": "1056320"
  },
  {
    "text": "make use of smtp",
    "start": "1056320",
    "end": "1059440"
  },
  {
    "text": "so let's see how noi can help us with",
    "start": "1059440",
    "end": "1061520"
  },
  {
    "text": "that",
    "start": "1061520",
    "end": "1063600"
  },
  {
    "text": "we will first set up test environment",
    "start": "1063600",
    "end": "1066640"
  },
  {
    "text": "we will run smgp server convenient for",
    "start": "1066640",
    "end": "1070640"
  },
  {
    "text": "use",
    "start": "1070640",
    "end": "1071039"
  },
  {
    "text": "in development it has some user",
    "start": "1071039",
    "end": "1073840"
  },
  {
    "text": "interfaces",
    "start": "1073840",
    "end": "1074799"
  },
  {
    "text": "we can use to make sure that messages",
    "start": "1074799",
    "end": "1077600"
  },
  {
    "text": "indeed arriving",
    "start": "1077600",
    "end": "1078640"
  },
  {
    "text": "at smtp server",
    "start": "1078640",
    "end": "1081840"
  },
  {
    "text": "and we have example java application",
    "start": "1082160",
    "end": "1086080"
  },
  {
    "text": "that will be every second we will be",
    "start": "1086080",
    "end": "1088160"
  },
  {
    "text": "logging in error",
    "start": "1088160",
    "end": "1089360"
  },
  {
    "text": "and every error will be sent by email",
    "start": "1089360",
    "end": "1094160"
  },
  {
    "text": "so let's run this application and we",
    "start": "1094160",
    "end": "1096960"
  },
  {
    "text": "should see",
    "start": "1096960",
    "end": "1098480"
  },
  {
    "text": "messages start arriving",
    "start": "1098480",
    "end": "1101760"
  },
  {
    "text": "so let's take a look next what's going",
    "start": "1103840",
    "end": "1106400"
  },
  {
    "text": "on on the wire",
    "start": "1106400",
    "end": "1109840"
  },
  {
    "text": "you can see that smtp is a simple",
    "start": "1117679",
    "end": "1119679"
  },
  {
    "text": "text-based protocol",
    "start": "1119679",
    "end": "1122000"
  },
  {
    "text": "where a client is sending commands and",
    "start": "1122000",
    "end": "1125200"
  },
  {
    "text": "server response with replies so a",
    "start": "1125200",
    "end": "1127760"
  },
  {
    "text": "typical email",
    "start": "1127760",
    "end": "1128880"
  },
  {
    "text": "transaction consists of a client filling",
    "start": "1128880",
    "end": "1132240"
  },
  {
    "text": "in fields like from and two and",
    "start": "1132240",
    "end": "1135200"
  },
  {
    "text": "providing the message",
    "start": "1135200",
    "end": "1136559"
  },
  {
    "text": "of email",
    "start": "1136559",
    "end": "1140320"
  },
  {
    "text": "once a sncp client is finished sending",
    "start": "1140400",
    "end": "1143919"
  },
  {
    "text": "a message body transaction",
    "start": "1143919",
    "end": "1146960"
  },
  {
    "text": "email transaction is considered",
    "start": "1146960",
    "end": "1148160"
  },
  {
    "text": "committed and now it's time for sarah to",
    "start": "1148160",
    "end": "1150080"
  },
  {
    "text": "either accept it accept email for",
    "start": "1150080",
    "end": "1151760"
  },
  {
    "text": "delivery or rejected",
    "start": "1151760",
    "end": "1154799"
  },
  {
    "text": "in this case cntp server accepts",
    "start": "1154799",
    "end": "1158400"
  },
  {
    "text": "email message and client can now quit",
    "start": "1158400",
    "end": "1161760"
  },
  {
    "text": "and close session",
    "start": "1161760",
    "end": "1165840"
  },
  {
    "text": "to envoy instead of sending them",
    "start": "1176960",
    "end": "1178559"
  },
  {
    "text": "directly into sntp server",
    "start": "1178559",
    "end": "1181280"
  },
  {
    "text": "and then we will start and avoid with",
    "start": "1181280",
    "end": "1183360"
  },
  {
    "text": "our extension",
    "start": "1183360",
    "end": "1186160"
  },
  {
    "text": "pre-configured so we're using get new",
    "start": "1186559",
    "end": "1189440"
  },
  {
    "text": "tool",
    "start": "1189440",
    "end": "1190320"
  },
  {
    "text": "to start and avoid with",
    "start": "1190320",
    "end": "1192559"
  },
  {
    "text": "webassembly-based extension in it",
    "start": "1192559",
    "end": "1194559"
  },
  {
    "text": "uh getting away is one of the tools open",
    "start": "1194559",
    "end": "1196559"
  },
  {
    "text": "source tools we developed a titrate",
    "start": "1196559",
    "end": "1198480"
  },
  {
    "text": "to help you getting started with uh",
    "start": "1198480",
    "end": "1201200"
  },
  {
    "text": "developing webassembly based annual",
    "start": "1201200",
    "end": "1202960"
  },
  {
    "text": "extensions",
    "start": "1202960",
    "end": "1205520"
  },
  {
    "text": "so let's see matrix",
    "start": "1205600",
    "end": "1209520"
  },
  {
    "text": "okay okay application's not started",
    "start": "1209520",
    "end": "1213520"
  },
  {
    "text": "yeah we can see that envoy is now",
    "start": "1219440",
    "end": "1222559"
  },
  {
    "text": "collecting metrics about",
    "start": "1222559",
    "end": "1223840"
  },
  {
    "text": "sntp traffic at high level we see number",
    "start": "1223840",
    "end": "1227679"
  },
  {
    "text": "of emails",
    "start": "1227679",
    "end": "1228880"
  },
  {
    "text": "that and voice has been seen sent by",
    "start": "1228880",
    "end": "1231280"
  },
  {
    "text": "client number of",
    "start": "1231280",
    "end": "1232240"
  },
  {
    "text": "email accepted by cntp server for",
    "start": "1232240",
    "end": "1234720"
  },
  {
    "text": "delivery and number of mail rejected",
    "start": "1234720",
    "end": "1237360"
  },
  {
    "text": "we can also have coarse grained",
    "start": "1237360",
    "end": "1241120"
  },
  {
    "text": "metrics about commands in general",
    "start": "1241120",
    "end": "1243440"
  },
  {
    "text": "without going into",
    "start": "1243440",
    "end": "1244559"
  },
  {
    "text": "details which exactly commands",
    "start": "1244559",
    "end": "1247760"
  },
  {
    "text": "so this is another use case",
    "start": "1247760",
    "end": "1250880"
  },
  {
    "text": "just to to demo like any other",
    "start": "1250880",
    "end": "1254559"
  },
  {
    "text": "extension our sncp extension supports",
    "start": "1254559",
    "end": "1257360"
  },
  {
    "text": "configuration",
    "start": "1257360",
    "end": "1258559"
  },
  {
    "text": "and one of the options is how many",
    "start": "1258559",
    "end": "1260880"
  },
  {
    "text": "metrics to expose",
    "start": "1260880",
    "end": "1262159"
  },
  {
    "text": "so let's reconfigure and let's restart",
    "start": "1262159",
    "end": "1264960"
  },
  {
    "text": "some way",
    "start": "1264960",
    "end": "1267120"
  },
  {
    "text": "so we activated so we want to see more",
    "start": "1267120",
    "end": "1270640"
  },
  {
    "text": "matrix",
    "start": "1270640",
    "end": "1271200"
  },
  {
    "text": "in particular matrix for every single",
    "start": "1271200",
    "end": "1273360"
  },
  {
    "text": "command",
    "start": "1273360",
    "end": "1274400"
  },
  {
    "text": "we saw in this flow",
    "start": "1274400",
    "end": "1279120"
  },
  {
    "text": "so for every single command like mail",
    "start": "1280559",
    "end": "1282799"
  },
  {
    "text": "recipient data",
    "start": "1282799",
    "end": "1291840"
  },
  {
    "text": "so yeah now you can see that we have",
    "start": "1292640",
    "end": "1295200"
  },
  {
    "text": "this matrix for every single command",
    "start": "1295200",
    "end": "1298880"
  },
  {
    "text": "so this was completely successful flow",
    "start": "1300960",
    "end": "1303200"
  },
  {
    "text": "where all",
    "start": "1303200",
    "end": "1304400"
  },
  {
    "text": "commands were successful let's",
    "start": "1304400",
    "end": "1307520"
  },
  {
    "text": "do something different let's change",
    "start": "1307520",
    "end": "1310400"
  },
  {
    "text": "configuration of",
    "start": "1310400",
    "end": "1311360"
  },
  {
    "text": "sncp client to so that",
    "start": "1311360",
    "end": "1314400"
  },
  {
    "text": "scientific transactions will",
    "start": "1314400",
    "end": "1317760"
  },
  {
    "text": "end up with errors",
    "start": "1317760",
    "end": "1320880"
  },
  {
    "text": "and see if and why we'll be able to",
    "start": "1321120",
    "end": "1322960"
  },
  {
    "text": "catch this",
    "start": "1322960",
    "end": "1325679"
  },
  {
    "text": "yeah you can see that this counter can't",
    "start": "1329840",
    "end": "1331600"
  },
  {
    "text": "just start increasing",
    "start": "1331600",
    "end": "1333440"
  },
  {
    "text": "its number of failed commands",
    "start": "1333440",
    "end": "1338000"
  },
  {
    "text": "if we now go back to wireshark and",
    "start": "1338000",
    "end": "1342000"
  },
  {
    "text": "capture traffic one more time we can see",
    "start": "1342000",
    "end": "1345600"
  },
  {
    "text": "that the overall flow has changed",
    "start": "1345600",
    "end": "1350080"
  },
  {
    "text": "so right now yeah just email",
    "start": "1350640",
    "end": "1352720"
  },
  {
    "text": "transactions starts",
    "start": "1352720",
    "end": "1354559"
  },
  {
    "text": "failing at a step where the cmtp client",
    "start": "1354559",
    "end": "1357679"
  },
  {
    "text": "is trying to fill in",
    "start": "1357679",
    "end": "1359520"
  },
  {
    "text": "two fields with invaded value",
    "start": "1359520",
    "end": "1364159"
  },
  {
    "text": "finally let's take a look into the",
    "start": "1364480",
    "end": "1365760"
  },
  {
    "text": "source code of",
    "start": "1365760",
    "end": "1368400"
  },
  {
    "text": "invoice on cp filter itself as you can",
    "start": "1368480",
    "end": "1371600"
  },
  {
    "text": "see it's indeed developed in rust",
    "start": "1371600",
    "end": "1374960"
  },
  {
    "text": "and it has a structure hell",
    "start": "1374960",
    "end": "1378640"
  },
  {
    "text": "well resembling structure of native",
    "start": "1378640",
    "end": "1381600"
  },
  {
    "text": "extensions",
    "start": "1381600",
    "end": "1382480"
  },
  {
    "text": "we have configuration we have stats",
    "start": "1382480",
    "end": "1387039"
  },
  {
    "text": "we have filter itself and we have it",
    "start": "1387440",
    "end": "1389360"
  },
  {
    "text": "it's factory",
    "start": "1389360",
    "end": "1390480"
  },
  {
    "text": "and a filter it's a network filter and",
    "start": "1390480",
    "end": "1393280"
  },
  {
    "text": "we",
    "start": "1393280",
    "end": "1394000"
  },
  {
    "text": "uh override callbacks for to handle",
    "start": "1394000",
    "end": "1397840"
  },
  {
    "text": "uh new connection downstream data data",
    "start": "1397840",
    "end": "1400799"
  },
  {
    "text": "from ctp client and upstream data data",
    "start": "1400799",
    "end": "1403120"
  },
  {
    "text": "from",
    "start": "1403120",
    "end": "1403760"
  },
  {
    "text": "sncp server since",
    "start": "1403760",
    "end": "1408480"
  },
  {
    "text": "sntp is simple text based protocol so we",
    "start": "1409600",
    "end": "1412559"
  },
  {
    "text": "chose to",
    "start": "1412559",
    "end": "1413360"
  },
  {
    "text": "implement protocol parsing completely",
    "start": "1413360",
    "end": "1415200"
  },
  {
    "text": "ourselves",
    "start": "1415200",
    "end": "1417360"
  },
  {
    "text": "but in case of ldap we would use",
    "start": "1417360",
    "end": "1421360"
  },
  {
    "text": "uh surpass your library for parsing ldap",
    "start": "1421360",
    "end": "1424559"
  },
  {
    "text": "which is binary protocol",
    "start": "1424559",
    "end": "1427520"
  },
  {
    "text": "so that's concludes our overview of",
    "start": "1428000",
    "end": "1431840"
  },
  {
    "text": "uh invoice ntp extension and now it's",
    "start": "1431840",
    "end": "1434320"
  },
  {
    "text": "time to take action to update you",
    "start": "1434320",
    "end": "1436640"
  },
  {
    "text": "on sdk for go link",
    "start": "1436640",
    "end": "1441360"
  },
  {
    "text": "in this part i'm going to talk about go",
    "start": "1442480",
    "end": "1444720"
  },
  {
    "text": "sdk for proximism and its current status",
    "start": "1444720",
    "end": "1447760"
  },
  {
    "text": "and challenges in the future commands my",
    "start": "1447760",
    "end": "1450080"
  },
  {
    "text": "name is takishi from tetrad",
    "start": "1450080",
    "end": "1453120"
  },
  {
    "text": "so let's begin with why go for proximism",
    "start": "1453120",
    "end": "1457200"
  },
  {
    "text": "go is the um one of the most widely used",
    "start": "1457200",
    "end": "1460400"
  },
  {
    "text": "languages in the cloud native world",
    "start": "1460400",
    "end": "1462720"
  },
  {
    "text": "right and",
    "start": "1462720",
    "end": "1463679"
  },
  {
    "text": "uh being able to use existing gold",
    "start": "1463679",
    "end": "1465760"
  },
  {
    "text": "libraries or packages",
    "start": "1465760",
    "end": "1467360"
  },
  {
    "text": "is a very good developer experience for",
    "start": "1467360",
    "end": "1470080"
  },
  {
    "text": "western extensions and also",
    "start": "1470080",
    "end": "1472720"
  },
  {
    "text": "the number of developers writing onboard",
    "start": "1472720",
    "end": "1474880"
  },
  {
    "text": "extension will increase dramatically",
    "start": "1474880",
    "end": "1477200"
  },
  {
    "text": "which is really great for both for",
    "start": "1477200",
    "end": "1480880"
  },
  {
    "text": "convoy community and the gold compiler",
    "start": "1480880",
    "end": "1483039"
  },
  {
    "text": "community from",
    "start": "1483039",
    "end": "1484159"
  },
  {
    "text": "western perspective that's why i started",
    "start": "1484159",
    "end": "1486640"
  },
  {
    "text": "working on this project",
    "start": "1486640",
    "end": "1488400"
  },
  {
    "text": "and so let's um talk about",
    "start": "1488400",
    "end": "1491520"
  },
  {
    "text": "compilers there are two compilers out",
    "start": "1491520",
    "end": "1494159"
  },
  {
    "text": "there which comply with",
    "start": "1494159",
    "end": "1495919"
  },
  {
    "text": "go language specification and speaking",
    "start": "1495919",
    "end": "1499200"
  },
  {
    "text": "about proximism",
    "start": "1499200",
    "end": "1500960"
  },
  {
    "text": "it's not the official compilers cannot",
    "start": "1500960",
    "end": "1503440"
  },
  {
    "text": "be used for producing",
    "start": "1503440",
    "end": "1505279"
  },
  {
    "text": "proxy wasn't compatible wineries yet",
    "start": "1505279",
    "end": "1508000"
  },
  {
    "text": "because um",
    "start": "1508000",
    "end": "1508960"
  },
  {
    "text": "we cannot control export sections and",
    "start": "1508960",
    "end": "1511360"
  },
  {
    "text": "also it assumes that the",
    "start": "1511360",
    "end": "1513679"
  },
  {
    "text": "running hosting environment is kind of",
    "start": "1513679",
    "end": "1515760"
  },
  {
    "text": "ghost specific",
    "start": "1515760",
    "end": "1517200"
  },
  {
    "text": "javascript environment so that's why",
    "start": "1517200",
    "end": "1520240"
  },
  {
    "text": "we choose tinyo as a compiler for",
    "start": "1520240",
    "end": "1523440"
  },
  {
    "text": "our sdk and the tango supports wazi",
    "start": "1523440",
    "end": "1527120"
  },
  {
    "text": "target and",
    "start": "1527120",
    "end": "1528159"
  },
  {
    "text": "with this is my major contribution to",
    "start": "1528159",
    "end": "1530320"
  },
  {
    "text": "taingo",
    "start": "1530320",
    "end": "1531200"
  },
  {
    "text": "and also tanning will allow us to",
    "start": "1531200",
    "end": "1533279"
  },
  {
    "text": "control import",
    "start": "1533279",
    "end": "1534400"
  },
  {
    "text": "and export section so and also speaking",
    "start": "1534400",
    "end": "1537760"
  },
  {
    "text": "about binary size",
    "start": "1537760",
    "end": "1539200"
  },
  {
    "text": "hello world binary binary the official",
    "start": "1539200",
    "end": "1542080"
  },
  {
    "text": "compiler's binary",
    "start": "1542080",
    "end": "1543360"
  },
  {
    "text": "is much larger than turning as you see",
    "start": "1543360",
    "end": "1545919"
  },
  {
    "text": "so this is why i think",
    "start": "1545919",
    "end": "1547440"
  },
  {
    "text": "tiny o is the way to go speaking about",
    "start": "1547440",
    "end": "1551360"
  },
  {
    "text": "proximation so",
    "start": "1551360",
    "end": "1554960"
  },
  {
    "text": "go sdk there is some",
    "start": "1554960",
    "end": "1558159"
  },
  {
    "text": "repository named proxy wasn't go sdk in",
    "start": "1558159",
    "end": "1561200"
  },
  {
    "text": "patriot",
    "start": "1561200",
    "end": "1561760"
  },
  {
    "text": "labs it started as my personal project",
    "start": "1561760",
    "end": "1564480"
  },
  {
    "text": "and then moved to",
    "start": "1564480",
    "end": "1565760"
  },
  {
    "text": "the detroit labs and it depends on",
    "start": "1565760",
    "end": "1568320"
  },
  {
    "text": "tanego",
    "start": "1568320",
    "end": "1569360"
  },
  {
    "text": "and also all the examples in c",
    "start": "1569360",
    "end": "1572880"
  },
  {
    "text": "plus plus and the rust can be",
    "start": "1572880",
    "end": "1575120"
  },
  {
    "text": "re-implemented so",
    "start": "1575120",
    "end": "1576480"
  },
  {
    "text": "it's usable and so please give it a try",
    "start": "1576480",
    "end": "1579600"
  },
  {
    "text": "and also it supports envoy host",
    "start": "1579600",
    "end": "1582559"
  },
  {
    "text": "emulation for unit testing",
    "start": "1582559",
    "end": "1584640"
  },
  {
    "text": "so which means you can use go test",
    "start": "1584640",
    "end": "1586559"
  },
  {
    "text": "command for",
    "start": "1586559",
    "end": "1588400"
  },
  {
    "text": "testing your filters or extensions",
    "start": "1588400",
    "end": "1590559"
  },
  {
    "text": "without running",
    "start": "1590559",
    "end": "1591760"
  },
  {
    "text": "onboard processes this is really great",
    "start": "1591760",
    "end": "1594159"
  },
  {
    "text": "for developers because",
    "start": "1594159",
    "end": "1595760"
  },
  {
    "text": "we can develop on our extension just",
    "start": "1595760",
    "end": "1598559"
  },
  {
    "text": "like",
    "start": "1598559",
    "end": "1598960"
  },
  {
    "text": "you do with the native applications",
    "start": "1598960",
    "end": "1603200"
  },
  {
    "text": "so what are the challenges we are facing",
    "start": "1603200",
    "end": "1607840"
  },
  {
    "text": "and the first is that our some of the",
    "start": "1607840",
    "end": "1610000"
  },
  {
    "text": "existing libraries are not supported",
    "start": "1610000",
    "end": "1612000"
  },
  {
    "text": "yet there is um several reasons but",
    "start": "1612000",
    "end": "1615600"
  },
  {
    "text": "the um some of the system codes are not",
    "start": "1615600",
    "end": "1618880"
  },
  {
    "text": "not available in tangio",
    "start": "1618880",
    "end": "1620720"
  },
  {
    "text": "or proxy wasn't uh",
    "start": "1620720",
    "end": "1624000"
  },
  {
    "text": "c plus plus host and for example you",
    "start": "1624000",
    "end": "1626480"
  },
  {
    "text": "cannot use script run",
    "start": "1626480",
    "end": "1627919"
  },
  {
    "text": "package or you cannot use os.getm",
    "start": "1627919",
    "end": "1631200"
  },
  {
    "text": "and also time.now these are the",
    "start": "1631200",
    "end": "1634640"
  },
  {
    "text": "they're not available currently but they",
    "start": "1634640",
    "end": "1637200"
  },
  {
    "text": "will be supported",
    "start": "1637200",
    "end": "1639120"
  },
  {
    "text": "and also reflection packages is not free",
    "start": "1639120",
    "end": "1642159"
  },
  {
    "text": "it's not fully supported by tango so",
    "start": "1642159",
    "end": "1645200"
  },
  {
    "text": "you cannot use json package but this is",
    "start": "1645200",
    "end": "1648080"
  },
  {
    "text": "highly demanded so",
    "start": "1648080",
    "end": "1649520"
  },
  {
    "text": "i'm going to work on this and also",
    "start": "1649520",
    "end": "1652720"
  },
  {
    "text": "garbage collection is re-implemented in",
    "start": "1652720",
    "end": "1655600"
  },
  {
    "text": "tanio which is totally different from",
    "start": "1655600",
    "end": "1657840"
  },
  {
    "text": "the official garbage collection and it",
    "start": "1657840",
    "end": "1660559"
  },
  {
    "text": "uses simple conservative merchant sweep",
    "start": "1660559",
    "end": "1663440"
  },
  {
    "text": "and it needs to i think",
    "start": "1663440",
    "end": "1666720"
  },
  {
    "text": "it's necessary for us to assess",
    "start": "1666720",
    "end": "1668480"
  },
  {
    "text": "performance impacts",
    "start": "1668480",
    "end": "1669760"
  },
  {
    "text": "on fluxivism maybe we gotta",
    "start": "1669760",
    "end": "1673919"
  },
  {
    "text": "develop our own gc algorithm tailored",
    "start": "1673919",
    "end": "1676640"
  },
  {
    "text": "for proxy version",
    "start": "1676640",
    "end": "1678000"
  },
  {
    "text": "and also goroutine is almost",
    "start": "1678000",
    "end": "1681039"
  },
  {
    "text": "unavailable taningo uses um another vm",
    "start": "1681039",
    "end": "1684399"
  },
  {
    "text": "called routine but",
    "start": "1684399",
    "end": "1685520"
  },
  {
    "text": "no schedulers runs by default in the",
    "start": "1685520",
    "end": "1688320"
  },
  {
    "text": "event driven",
    "start": "1688320",
    "end": "1689360"
  },
  {
    "text": "and the thread local vms in envoy so you",
    "start": "1689360",
    "end": "1692640"
  },
  {
    "text": "could use um go keyword but",
    "start": "1692640",
    "end": "1694880"
  },
  {
    "text": "no one can predict when this go routine",
    "start": "1694880",
    "end": "1697360"
  },
  {
    "text": "will be",
    "start": "1697360",
    "end": "1698480"
  },
  {
    "text": "run or things like that so",
    "start": "1698480",
    "end": "1701840"
  },
  {
    "text": "what's next contributing back to tanigo",
    "start": "1701840",
    "end": "1705360"
  },
  {
    "text": "and the reflection package",
    "start": "1705360",
    "end": "1706960"
  },
  {
    "text": "implementation or",
    "start": "1706960",
    "end": "1708399"
  },
  {
    "text": "other system core support in order to",
    "start": "1708399",
    "end": "1711600"
  },
  {
    "text": "um in order to be able to uh use",
    "start": "1711600",
    "end": "1714960"
  },
  {
    "text": "existing goal libraries and also",
    "start": "1714960",
    "end": "1718240"
  },
  {
    "text": "we need to do some gc performance",
    "start": "1718240",
    "end": "1720240"
  },
  {
    "text": "analysis have been working on this",
    "start": "1720240",
    "end": "1722720"
  },
  {
    "text": "and also may we as i said we may be we",
    "start": "1722720",
    "end": "1725919"
  },
  {
    "text": "have to",
    "start": "1725919",
    "end": "1727279"
  },
  {
    "text": "uh have custom gc for proxy western",
    "start": "1727279",
    "end": "1730320"
  },
  {
    "text": "and also google routine support in order",
    "start": "1730320",
    "end": "1732320"
  },
  {
    "text": "to do that we must answer questions like",
    "start": "1732320",
    "end": "1735200"
  },
  {
    "text": "how to deal with go routine and the",
    "start": "1735200",
    "end": "1737360"
  },
  {
    "text": "thread local wasn't vm executed in the",
    "start": "1737360",
    "end": "1739919"
  },
  {
    "text": "event driven manner",
    "start": "1739919",
    "end": "1741760"
  },
  {
    "text": "so that's all that's all and",
    "start": "1741760",
    "end": "1745200"
  },
  {
    "text": "let's wrap up so start with me today",
    "start": "1745200",
    "end": "1748480"
  },
  {
    "text": "let's start developing resume extensions",
    "start": "1748480",
    "end": "1750960"
  },
  {
    "text": "there are four languages out there",
    "start": "1750960",
    "end": "1753200"
  },
  {
    "text": "and also you can contribute to the",
    "start": "1753200",
    "end": "1754880"
  },
  {
    "text": "community by developing",
    "start": "1754880",
    "end": "1756880"
  },
  {
    "text": "sdk for your own favorite languages",
    "start": "1756880",
    "end": "1759919"
  },
  {
    "text": "and also there is get amber project that",
    "start": "1759919",
    "end": "1762960"
  },
  {
    "text": "you can use",
    "start": "1762960",
    "end": "1763919"
  },
  {
    "text": "that you can easily get started with",
    "start": "1763919",
    "end": "1766640"
  },
  {
    "text": "wasm extension",
    "start": "1766640",
    "end": "1767679"
  },
  {
    "text": "we accumulated lessons learned so",
    "start": "1767679",
    "end": "1771039"
  },
  {
    "text": "please give it a shot and also",
    "start": "1771039",
    "end": "1774880"
  },
  {
    "text": "join our community and give us your",
    "start": "1774880",
    "end": "1776880"
  },
  {
    "text": "feedbacks",
    "start": "1776880",
    "end": "1778559"
  },
  {
    "text": "thank you for coming today let's get on",
    "start": "1778559",
    "end": "1781600"
  },
  {
    "text": "to",
    "start": "1781600",
    "end": "1782480"
  },
  {
    "text": "qs session",
    "start": "1782480",
    "end": "1786080"
  }
]