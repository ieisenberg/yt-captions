[
  {
    "start": "0",
    "end": "89000"
  },
  {
    "text": "hello everyone good morning good afternoon and good evening thanks for attending my",
    "start": "1839",
    "end": "8960"
  },
  {
    "text": "topic today today my topic is about containers",
    "start": "8960",
    "end": "16960"
  },
  {
    "text": "performance evaluation and optimization of arm 64. my name is justin kerr",
    "start": "16960",
    "end": "25279"
  },
  {
    "text": "i mainly focus focus on the container virtualization technology",
    "start": "25279",
    "end": "31359"
  },
  {
    "text": "on arm 64.",
    "start": "31359",
    "end": "34640"
  },
  {
    "text": "here is today's agenda firstly i will give you a",
    "start": "40239",
    "end": "46320"
  },
  {
    "text": "broad brief introduction about what is cut container",
    "start": "46320",
    "end": "53280"
  },
  {
    "text": "then i will give you the status update on arm 64. that is what we have done",
    "start": "54480",
    "end": "61840"
  },
  {
    "text": "so far then i will go through the performance",
    "start": "61840",
    "end": "68880"
  },
  {
    "text": "evaluation [Music] from several aspects",
    "start": "68880",
    "end": "75920"
  },
  {
    "text": "at last i will introduce to the two simple users",
    "start": "75920",
    "end": "82560"
  },
  {
    "text": "user stories in real cases",
    "start": "82560",
    "end": "87840"
  },
  {
    "start": "89000",
    "end": "89000"
  },
  {
    "text": "if you have used the dot container maybe you have thought about",
    "start": "94560",
    "end": "100159"
  },
  {
    "text": "the question how to make the container more secure",
    "start": "100159",
    "end": "107840"
  },
  {
    "text": "you can drop some linux capabilities such such as",
    "start": "107840",
    "end": "115439"
  },
  {
    "text": "make you you can mount the root fence with read-only mode you can use",
    "start": "115439",
    "end": "123439"
  },
  {
    "text": "sc linux and app armor to protect the container and also you",
    "start": "123439",
    "end": "129920"
  },
  {
    "text": "can use the sitcom to allow or disallow some system calls",
    "start": "129920",
    "end": "135840"
  },
  {
    "text": "but the more you add the sick the sick the middle layer will be",
    "start": "135840",
    "end": "143840"
  },
  {
    "text": "and you will get more performance overhead",
    "start": "144080",
    "end": "149040"
  },
  {
    "text": "so the actually the container is a combination",
    "start": "149920",
    "end": "158160"
  },
  {
    "text": "or trade-off between the virtual machine and the",
    "start": "158160",
    "end": "164319"
  },
  {
    "text": "container it is compatible with oci runtime",
    "start": "164319",
    "end": "171840"
  },
  {
    "text": "spec therefore works seamlessly with the dock engine",
    "start": "171840",
    "end": "179200"
  },
  {
    "text": "besides it also supports the kubernetes and cii",
    "start": "179200",
    "end": "186560"
  },
  {
    "text": "through the ciio and the css container d",
    "start": "186560",
    "end": "191920"
  },
  {
    "text": "in other words you can choose transparently choose selected between",
    "start": "191920",
    "end": "198480"
  },
  {
    "text": "the launchy and the cut container",
    "start": "198480",
    "end": "202640"
  },
  {
    "start": "203000",
    "end": "203000"
  },
  {
    "text": "the this is the project containers architecture design",
    "start": "206000",
    "end": "212319"
  },
  {
    "text": "flowchart the cutter agent is a process",
    "start": "212319",
    "end": "218959"
  },
  {
    "text": "surrounding in the guest as a supervisor for managing the containers and",
    "start": "218959",
    "end": "226400"
  },
  {
    "text": "the process running within those containers",
    "start": "226400",
    "end": "232080"
  },
  {
    "text": "the cutter proxy offers access to the vm cutter agent",
    "start": "233760",
    "end": "240319"
  },
  {
    "text": "to both custom and catalog time its main role is to route all the i o",
    "start": "240319",
    "end": "247680"
  },
  {
    "text": "string streams and signals it connects to the cutter agent on a",
    "start": "247680",
    "end": "255439"
  },
  {
    "text": "unix domain socket ievsoc",
    "start": "255439",
    "end": "260320"
  },
  {
    "text": "cutter proxy uses earmarks to multiplex gipc connections",
    "start": "260639",
    "end": "267440"
  },
  {
    "text": "on its connection the shim process",
    "start": "267440",
    "end": "275520"
  },
  {
    "text": "runs in the in the host environment",
    "start": "275520",
    "end": "280840"
  },
  {
    "text": "handling standard io and the signals on behalf of containers process",
    "start": "280840",
    "end": "288080"
  },
  {
    "text": "which is inside guests",
    "start": "288080",
    "end": "292720"
  },
  {
    "text": "but after the the cut container 2.0",
    "start": "295120",
    "end": "302160"
  },
  {
    "text": "some parts of this pro chart will be changed a little bit",
    "start": "302160",
    "end": "307759"
  },
  {
    "start": "308000",
    "end": "308000"
  },
  {
    "text": "so this is what what the new items in cutter 2.0",
    "start": "308880",
    "end": "317840"
  },
  {
    "text": "for example cii i contain a dcm v2",
    "start": "317840",
    "end": "324320"
  },
  {
    "text": "and it will redu reduce many uh many parts of the the",
    "start": "324320",
    "end": "331680"
  },
  {
    "text": "architectural design flow chart and it's the",
    "start": "331680",
    "end": "339600"
  },
  {
    "text": "roster agent to replace the golan agent",
    "start": "339600",
    "end": "346479"
  },
  {
    "text": "and it's used the ttr pc is a tiny jipc",
    "start": "346960",
    "end": "354720"
  },
  {
    "text": "implementation to replace the original jipc library choose",
    "start": "354720",
    "end": "361440"
  },
  {
    "text": "vsoc to replace the virtual i o cloud",
    "start": "361440",
    "end": "366800"
  },
  {
    "text": "and by default the cloud hypervisor will replace",
    "start": "366800",
    "end": "375759"
  },
  {
    "text": "the cumule hybrid also supports the guest c group v2",
    "start": "375759",
    "end": "383740"
  },
  {
    "text": "[Music]",
    "start": "383740",
    "end": "386809"
  },
  {
    "start": "389000",
    "end": "389000"
  },
  {
    "text": "and what's the status of container on 64.",
    "start": "391840",
    "end": "400560"
  },
  {
    "text": "totally speaking it can run can be run smoothly on 64.",
    "start": "400560",
    "end": "409840"
  },
  {
    "text": "you can you can install the cut container on arm64 by two ways",
    "start": "410319",
    "end": "419440"
  },
  {
    "text": "firstly is the snap install and secondly you can build it from",
    "start": "419440",
    "end": "426160"
  },
  {
    "text": "the source code to run the container",
    "start": "426160",
    "end": "434160"
  },
  {
    "text": "you can use the ctr command line here is the examples uh you can",
    "start": "434160",
    "end": "440880"
  },
  {
    "text": "use the ctr image pool to put the container image and",
    "start": "440880",
    "end": "447250"
  },
  {
    "text": "[Music] run the simple application",
    "start": "447250",
    "end": "453599"
  },
  {
    "text": "by using the ctr rom",
    "start": "453599",
    "end": "458000"
  },
  {
    "text": "also you can run the container on a raspberry pi 4",
    "start": "460319",
    "end": "468000"
  },
  {
    "text": "platform with minor changes",
    "start": "468000",
    "end": "472879"
  },
  {
    "start": "474000",
    "end": "474000"
  },
  {
    "text": "here is the future comparison result between arm64 and the xcsx86",
    "start": "477360",
    "end": "485919"
  },
  {
    "text": "as for the hypervisor support x86 supports",
    "start": "485919",
    "end": "493199"
  },
  {
    "text": "cumule by cracker class hypervisor and micro but",
    "start": "493199",
    "end": "500080"
  },
  {
    "text": "a chrome is not supported on arm 64. the cut container will",
    "start": "500080",
    "end": "508160"
  },
  {
    "text": "use will let the hypervisor to create a medium device",
    "start": "508160",
    "end": "515279"
  },
  {
    "text": "and then mount it as the guest root fs",
    "start": "515279",
    "end": "522240"
  },
  {
    "text": "it can speed up the boot time and share the",
    "start": "523279",
    "end": "531920"
  },
  {
    "text": "the guest root fs",
    "start": "532720",
    "end": "536399"
  },
  {
    "text": "and the virtual io fs feature is used in",
    "start": "538160",
    "end": "546080"
  },
  {
    "text": "the container root effects",
    "start": "546080",
    "end": "549839"
  },
  {
    "text": "which i uh which i will introduce the in later slides",
    "start": "552320",
    "end": "558240"
  },
  {
    "text": "the altruistic mark for the arm 64 kumu here is the upstream",
    "start": "558240",
    "end": "566640"
  },
  {
    "text": "kumu had supported this feature but we also need some time to introduce",
    "start": "566640",
    "end": "573920"
  },
  {
    "text": "it on arm 64 for the container",
    "start": "573920",
    "end": "581760"
  },
  {
    "text": "next the the vm template is a useful technology",
    "start": "582240",
    "end": "588880"
  },
  {
    "text": "to speed up the boot time",
    "start": "588880",
    "end": "593200"
  },
  {
    "text": "this feature is supported on both and also the raster agent is supported",
    "start": "595120",
    "end": "603680"
  },
  {
    "text": "on both the memory hot plug we the upstream had us supported on 64",
    "start": "603680",
    "end": "612320"
  },
  {
    "text": "but we were introduced in in the future the vm",
    "start": "612320",
    "end": "620720"
  },
  {
    "text": "vcpu hot plug someone had sub uh posted a patch series to",
    "start": "621920",
    "end": "629279"
  },
  {
    "text": "support it in in both cumule and kernel community",
    "start": "629279",
    "end": "635760"
  },
  {
    "text": "but i haven't got merged yet also",
    "start": "635760",
    "end": "642800"
  },
  {
    "text": "the for the next kvm kvm feature i'm 64 kvm",
    "start": "642800",
    "end": "651600"
  },
  {
    "text": "the community has discussed it's one huge one big",
    "start": "652560",
    "end": "659680"
  },
  {
    "text": "series and after that after the community merge them we can you",
    "start": "659680",
    "end": "665839"
  },
  {
    "text": "we can introduce the into on 64 for cut container",
    "start": "665839",
    "end": "675839"
  },
  {
    "start": "676000",
    "end": "676000"
  },
  {
    "text": "the virtual ios is a shared file system that",
    "start": "679040",
    "end": "685920"
  },
  {
    "text": "lets virtual machine access a directory tree on the host",
    "start": "685920",
    "end": "692560"
  },
  {
    "text": "unlike the existing approaches it is designed to offer local file",
    "start": "692560",
    "end": "700000"
  },
  {
    "text": "system semantics and performance",
    "start": "700000",
    "end": "704640"
  },
  {
    "text": "the the low level of the virtual fs is a fuse implementation",
    "start": "707040",
    "end": "715440"
  },
  {
    "text": "they have used protocol is not based on the network protocol it means more faster",
    "start": "715440",
    "end": "724480"
  },
  {
    "text": "faster performance and better posix semantics",
    "start": "724480",
    "end": "731680"
  },
  {
    "text": "capabilities and there is a independent virtual ios",
    "start": "731680",
    "end": "739440"
  },
  {
    "text": "demo process more secure and needed to maintain the",
    "start": "739440",
    "end": "747040"
  },
  {
    "text": "device mapper [Music]",
    "start": "747040",
    "end": "753549"
  },
  {
    "text": "and uh there is a text mode you can",
    "start": "754880",
    "end": "761519"
  },
  {
    "text": "uh with this with this text mode enabled the host and",
    "start": "761519",
    "end": "768079"
  },
  {
    "text": "the guest can share the memory and improve the performance",
    "start": "768079",
    "end": "777600"
  },
  {
    "text": "and you can also bypass the guest page cache avoided",
    "start": "777600",
    "end": "783839"
  },
  {
    "text": "an accessory vm exit",
    "start": "783839",
    "end": "787839"
  },
  {
    "text": "and the the back end is in user space which is",
    "start": "788959",
    "end": "796079"
  },
  {
    "text": "convenient for for for the user to further too [Music]",
    "start": "796959",
    "end": "804868"
  },
  {
    "text": "but we once observed that the virtual frs will increase the system",
    "start": "808079",
    "end": "816480"
  },
  {
    "text": "system level memory footprint because you know it uses additional",
    "start": "816480",
    "end": "825440"
  },
  {
    "text": "shared pages which disallows the ksm to merge the pages",
    "start": "826160",
    "end": "835279"
  },
  {
    "text": "the inner internal tests showed that it will significa significantly",
    "start": "840959",
    "end": "848079"
  },
  {
    "text": "improve the file system performance in qatar compared with a virtual io9 p",
    "start": "848079",
    "end": "857519"
  },
  {
    "text": "from this chart we use the the file read write test",
    "start": "857519",
    "end": "865440"
  },
  {
    "text": "the data improves the increase about 10 to 20",
    "start": "865440",
    "end": "872000"
  },
  {
    "text": "times in different cases",
    "start": "872000",
    "end": "876240"
  },
  {
    "start": "878000",
    "end": "878000"
  },
  {
    "text": "this is the the what we have done for the functional future is the",
    "start": "880240",
    "end": "886720"
  },
  {
    "text": "development and firstly we enabled the",
    "start": "886720",
    "end": "892160"
  },
  {
    "text": "runtime and the rust agent on arm 64 and we maintain the",
    "start": "892160",
    "end": "898639"
  },
  {
    "text": "the ci tester subsystem and we enable the firecracker",
    "start": "898639",
    "end": "906639"
  },
  {
    "text": "and even the cloud hypervisor on especially uh",
    "start": "906639",
    "end": "913839"
  },
  {
    "text": "we cloud hypervisor is another uh individual independent",
    "start": "913839",
    "end": "921600"
  },
  {
    "text": "ripple we develop enable the cloud private from scratch",
    "start": "921600",
    "end": "928160"
  },
  {
    "text": "on 64. we also finished the kubernetes",
    "start": "928160",
    "end": "935519"
  },
  {
    "text": "integration test with cutter container",
    "start": "935519",
    "end": "941759"
  },
  {
    "text": "there's a to-do list in the future for us to do such as the",
    "start": "941759",
    "end": "948800"
  },
  {
    "text": "memory and the vcpu hot block and the important next state of",
    "start": "948800",
    "end": "955079"
  },
  {
    "text": "virtualization [Music]",
    "start": "955079",
    "end": "959290"
  },
  {
    "text": "so to summarize the performance comparison between different",
    "start": "963759",
    "end": "969920"
  },
  {
    "text": "architectures we choose some important",
    "start": "969920",
    "end": "976079"
  },
  {
    "text": "aspects such as the boot time the binary code size and then memory footprint",
    "start": "976079",
    "end": "984959"
  },
  {
    "text": "here is the the hardware or software setup in for the host the guest the cumule and the",
    "start": "987759",
    "end": "996000"
  },
  {
    "text": "cutter version",
    "start": "996000",
    "end": "998800"
  },
  {
    "start": "1003000",
    "end": "1003000"
  },
  {
    "text": "this is the evaluation for both i once started",
    "start": "1006000",
    "end": "1013920"
  },
  {
    "text": "the run a simple container application and",
    "start": "1013920",
    "end": "1020880"
  },
  {
    "text": "you entered the hello world and exit at once",
    "start": "1020880",
    "end": "1028079"
  },
  {
    "text": "for 10 100 times and then calculate the average data for both",
    "start": "1028079",
    "end": "1034640"
  },
  {
    "text": "time the exit x-axis is the put",
    "start": "1034640",
    "end": "1039678"
  },
  {
    "text": "point time difference to the starting point the y-axis is the",
    "start": "1039679",
    "end": "1047310"
  },
  {
    "text": "[Music] mini-second time unit",
    "start": "1047310",
    "end": "1053840"
  },
  {
    "text": "we observed that the most gap is between the vm started",
    "start": "1054320",
    "end": "1060880"
  },
  {
    "text": "and the agent started i the code put time and accumulable time",
    "start": "1060880",
    "end": "1068799"
  },
  {
    "text": "and the boot time might be a little different between different configuration",
    "start": "1069600",
    "end": "1081840"
  },
  {
    "start": "1081000",
    "end": "1081000"
  },
  {
    "text": "the total boot time of the guest kernel is not so so",
    "start": "1082400",
    "end": "1089520"
  },
  {
    "text": "so long but we still found something to optimize we",
    "start": "1089760",
    "end": "1096400"
  },
  {
    "text": "reduced the printable time from maybe 117 milliseconds",
    "start": "1096400",
    "end": "1106480"
  },
  {
    "text": "to 81 milliseconds",
    "start": "1106480",
    "end": "1110480"
  },
  {
    "text": "another tunable is the systemd service but given that",
    "start": "1111760",
    "end": "1119679"
  },
  {
    "text": "most of the district enable system d we didn't remove the system d as",
    "start": "1119679",
    "end": "1127039"
  },
  {
    "text": "ipyle did from this chart",
    "start": "1127039",
    "end": "1132400"
  },
  {
    "text": "we concluded that a boot time gap on arm 64 compared with x86 is not the guest",
    "start": "1132400",
    "end": "1140000"
  },
  {
    "text": "kernel boot",
    "start": "1140000",
    "end": "1142799"
  },
  {
    "start": "1147000",
    "end": "1147000"
  },
  {
    "text": "this is the tuning items and for example we disable",
    "start": "1148640",
    "end": "1155600"
  },
  {
    "text": "the pmu initialization",
    "start": "1155600",
    "end": "1160799"
  },
  {
    "text": "if the user doesn't want to use it and by default the scarcity scale mode",
    "start": "1160799",
    "end": "1168320"
  },
  {
    "text": "is synchronization mode we can set it to now",
    "start": "1168320",
    "end": "1175440"
  },
  {
    "text": "and also we by default uh arm 64 will create about",
    "start": "1176400",
    "end": "1183679"
  },
  {
    "text": "30 32 vm uh virtual mmi all devices",
    "start": "1183679",
    "end": "1190080"
  },
  {
    "text": "even the user doesn't use it",
    "start": "1190080",
    "end": "1196159"
  },
  {
    "text": "we can disable it by default in the kernel configuration",
    "start": "1197039",
    "end": "1204399"
  },
  {
    "text": "there is a one another way to speed up the",
    "start": "1205600",
    "end": "1212880"
  },
  {
    "text": "boot time it is more aggressive that is vm template",
    "start": "1212880",
    "end": "1220799"
  },
  {
    "start": "1219000",
    "end": "1219000"
  },
  {
    "text": "a vm template is a new feature that enables the new",
    "start": "1220799",
    "end": "1228240"
  },
  {
    "text": "vm creation using a cloning technique when it is enabled the new uh virtual",
    "start": "1228240",
    "end": "1236240"
  },
  {
    "text": "machine virtual machine is created by cloning from a pre-created template",
    "start": "1236240",
    "end": "1246720"
  },
  {
    "text": "and they will share the same uh initial mfs kernel and uh",
    "start": "1246720",
    "end": "1255280"
  },
  {
    "text": "the and the agent memory in rhythm read-only mode it's just",
    "start": "1255280",
    "end": "1262000"
  },
  {
    "text": "like a process folk",
    "start": "1262000",
    "end": "1265679"
  },
  {
    "text": "it is expected that kumu doesn't write anything to the guest",
    "start": "1267840",
    "end": "1274400"
  },
  {
    "text": "ram until the virtual machine started but it does in",
    "start": "1274400",
    "end": "1282960"
  },
  {
    "text": "m64 qmil so",
    "start": "1282960",
    "end": "1288080"
  },
  {
    "text": "there's very exception on 64 when when we enable the vm template",
    "start": "1288159",
    "end": "1295600"
  },
  {
    "text": "feature actually the room block dtp",
    "start": "1295600",
    "end": "1300799"
  },
  {
    "text": "will be filled filled into ram during a room reset",
    "start": "1300799",
    "end": "1308799"
  },
  {
    "text": "in in common case the room filling seems to be not required since all the data have",
    "start": "1308799",
    "end": "1315760"
  },
  {
    "text": "been stored in memory backend already so we",
    "start": "1315760",
    "end": "1325520"
  },
  {
    "text": "we bypass we actually we bypass that process and",
    "start": "1326000",
    "end": "1331200"
  },
  {
    "text": "make mediator that make the vm template enabled on arm 64.",
    "start": "1331200",
    "end": "1347840"
  },
  {
    "start": "1342000",
    "end": "1342000"
  },
  {
    "text": "this is the the binary size performance comparison qatar will",
    "start": "1349840",
    "end": "1358320"
  },
  {
    "text": "start start a guest with limited memory or cpu resource",
    "start": "1358320",
    "end": "1365520"
  },
  {
    "text": "hence reducing the binary size code size is a tuning aspect",
    "start": "1365520",
    "end": "1373280"
  },
  {
    "text": "from this chart we reduce final size for qatar binary about",
    "start": "1373280",
    "end": "1381840"
  },
  {
    "text": "20 to 30 percent",
    "start": "1381840",
    "end": "1389840"
  },
  {
    "start": "1391000",
    "end": "1391000"
  },
  {
    "text": "we also tuned the the the vmm currently only the cumule",
    "start": "1392960",
    "end": "1400880"
  },
  {
    "text": "by customizing the configuration and stripping the binary",
    "start": "1400880",
    "end": "1407360"
  },
  {
    "text": "binary size the binary size was reduced by about 20 percent",
    "start": "1407360",
    "end": "1415120"
  },
  {
    "text": "with configuration tuning you know we can cut off",
    "start": "1415120",
    "end": "1421279"
  },
  {
    "text": "all the unnecessary device creation and [Music]",
    "start": "1421279",
    "end": "1428809"
  },
  {
    "text": "by by stripping we can reduce more 60 percent for the code size",
    "start": "1429279",
    "end": "1445840"
  },
  {
    "text": "this is the memory footprint uh perform for the performance comparison",
    "start": "1447279",
    "end": "1455360"
  },
  {
    "text": "you can see from this chart uh the possible reason why the",
    "start": "1456159",
    "end": "1463919"
  },
  {
    "text": "virtual memory footprint of cumula on arm 64",
    "start": "1463919",
    "end": "1469039"
  },
  {
    "text": "is bigger than that on x86 is the firmware devices creation",
    "start": "1469039",
    "end": "1478159"
  },
  {
    "text": "there are two p flats devices takes about 28 128",
    "start": "1478159",
    "end": "1487840"
  },
  {
    "text": "it will be created unconditionally",
    "start": "1488880",
    "end": "1494960"
  },
  {
    "text": "the resident memory uh a physical memory of arm 64.",
    "start": "1498480",
    "end": "1507360"
  },
  {
    "text": "the cumulative footprint is as much as or even better than than it",
    "start": "1507360",
    "end": "1515840"
  },
  {
    "text": "on x86",
    "start": "1515840",
    "end": "1519600"
  },
  {
    "text": "so this is the comparison without",
    "start": "1521200",
    "end": "1529840"
  },
  {
    "start": "1529000",
    "end": "1529000"
  },
  {
    "text": "this is the the resident memory summary for the",
    "start": "1533520",
    "end": "1541440"
  },
  {
    "text": "for the size com comparison",
    "start": "1541520",
    "end": "1546000"
  },
  {
    "text": "sorry for the the goal agent and cutter go wrong time",
    "start": "1547919",
    "end": "1555200"
  },
  {
    "text": "process the size of two",
    "start": "1555200",
    "end": "1563440"
  },
  {
    "text": "architecture is closed or even the same",
    "start": "1563440",
    "end": "1571840"
  },
  {
    "start": "1570000",
    "end": "1570000"
  },
  {
    "text": "this is the the net network throughput",
    "start": "1573760",
    "end": "1580880"
  },
  {
    "text": "you know the bbr and cubic are different congestion algorithm",
    "start": "1583520",
    "end": "1592480"
  },
  {
    "text": "these are two tcp uh these two different",
    "start": "1592720",
    "end": "1599679"
  },
  {
    "text": "congressional congestion algorithm for the tcp internal",
    "start": "1599679",
    "end": "1607360"
  },
  {
    "text": "qatar will choose vbr as the default but from the test result shows that",
    "start": "1607360",
    "end": "1614799"
  },
  {
    "text": "in the at least in the local and in the local",
    "start": "1614799",
    "end": "1623440"
  },
  {
    "text": "lab environment the bbi has lower performance",
    "start": "1623440",
    "end": "1630158"
  },
  {
    "text": "than the cubic here is the test result by",
    "start": "1630320",
    "end": "1638080"
  },
  {
    "text": "changing the algorithm we we improve we increased the",
    "start": "1638080",
    "end": "1647600"
  },
  {
    "text": "throughput from almost nearly 11 gigabytes",
    "start": "1647600",
    "end": "1655679"
  },
  {
    "text": "to 15 gigabytes",
    "start": "1655679",
    "end": "1661520"
  },
  {
    "start": "1664000",
    "end": "1664000"
  },
  {
    "text": "this is the performance to the items what we have done",
    "start": "1665919",
    "end": "1670960"
  },
  {
    "text": "enable the vm template the retirement fs decks",
    "start": "1670960",
    "end": "1678159"
  },
  {
    "text": "and the persistent memory support and they we changed",
    "start": "1678159",
    "end": "1685760"
  },
  {
    "text": "the algorithm from from bbr to cubic",
    "start": "1685760",
    "end": "1697840"
  },
  {
    "start": "1693000",
    "end": "1693000"
  },
  {
    "text": "uh these are finally i will introduce to",
    "start": "1699679",
    "end": "1706559"
  },
  {
    "text": "two user cases you know by two uh is a dominant chinese",
    "start": "1706559",
    "end": "1713039"
  },
  {
    "text": "search engine operator in its ai cloud",
    "start": "1713039",
    "end": "1720480"
  },
  {
    "text": "the by two air cloud is a complex network with huge amounts of traffic and",
    "start": "1720480",
    "end": "1727120"
  },
  {
    "text": "complicate deployment scenarios the peak traffic is about 1 billion",
    "start": "1727120",
    "end": "1735440"
  },
  {
    "text": "page page views per day and 50",
    "start": "1735440",
    "end": "1741840"
  },
  {
    "text": "000 containers for a single tenant so i do choose to use cutter containers",
    "start": "1741840",
    "end": "1750159"
  },
  {
    "text": "after doing extensive research on secure container technologies",
    "start": "1750159",
    "end": "1756559"
  },
  {
    "text": "and determining that cutter containers is a highly secure and",
    "start": "1756559",
    "end": "1763440"
  },
  {
    "text": "practical containers technology besides as one of the",
    "start": "1763440",
    "end": "1770720"
  },
  {
    "text": "important founders and maintainers alibaba use",
    "start": "1770720",
    "end": "1777279"
  },
  {
    "text": "uses cut containers in its ecs experimental instance",
    "start": "1777279",
    "end": "1784000"
  },
  {
    "text": "plus kubernetes and serverless infrastructure",
    "start": "1784000",
    "end": "1789600"
  },
  {
    "text": "so that's all for today's presentation is any questions",
    "start": "1792399",
    "end": "1802398"
  }
]