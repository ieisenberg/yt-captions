[
  {
    "text": "hi there this is W Aton today I'm going",
    "start": "399",
    "end": "4080"
  },
  {
    "text": "to show you how to build the time Ser",
    "start": "4080",
    "end": "6600"
  },
  {
    "text": "data pipeline I'll work you through the",
    "start": "6600",
    "end": "8920"
  },
  {
    "text": "whole process from ingesting data to",
    "start": "8920",
    "end": "11280"
  },
  {
    "text": "gtum DB with influx DB's line protocol",
    "start": "11280",
    "end": "14799"
  },
  {
    "text": "to visualizing data with gpam clouds web",
    "start": "14799",
    "end": "17720"
  },
  {
    "text": "dashboard for those who haven't learned",
    "start": "17720",
    "end": "19800"
  },
  {
    "text": "about gpam DB before it is an",
    "start": "19800",
    "end": "22240"
  },
  {
    "text": "open-source time service datab base",
    "start": "22240",
    "end": "24880"
  },
  {
    "text": "which offers fast and cost effective",
    "start": "24880",
    "end": "27640"
  },
  {
    "text": "elative to influx DB",
    "start": "27640",
    "end": "30560"
  },
  {
    "text": "it widely adopt database protocols and",
    "start": "30560",
    "end": "33200"
  },
  {
    "text": "apis including inux DB line protocol",
    "start": "33200",
    "end": "36520"
  },
  {
    "text": "which we will demo later on the other",
    "start": "36520",
    "end": "39280"
  },
  {
    "text": "hand Web Time Cloud provides a thly",
    "start": "39280",
    "end": "42120"
  },
  {
    "text": "manager time service database service on",
    "start": "42120",
    "end": "45520"
  },
  {
    "text": "the cloud putting the open source grum",
    "start": "45520",
    "end": "48000"
  },
  {
    "text": "BB edit Cod okay so now let's dive into",
    "start": "48000",
    "end": "51480"
  },
  {
    "text": "today's demo all the source code you",
    "start": "51480",
    "end": "53559"
  },
  {
    "text": "need to reproduce this demo is available",
    "start": "53559",
    "end": "55800"
  },
  {
    "text": "on the gra team demo s rle and now I'm",
    "start": "55800",
    "end": "58600"
  },
  {
    "text": "on this page so first you need to clone",
    "start": "58600",
    "end": "61320"
  },
  {
    "text": "the source code copy the code and open",
    "start": "61320",
    "end": "64799"
  },
  {
    "text": "your terminal type get clone and paste",
    "start": "64799",
    "end": "69799"
  },
  {
    "text": "the",
    "start": "69799",
    "end": "70600"
  },
  {
    "text": "URL now it's being",
    "start": "70600",
    "end": "74080"
  },
  {
    "text": "cloning just wait a few seconds and it's",
    "start": "74080",
    "end": "76560"
  },
  {
    "text": "done now let's change the directory to",
    "start": "76560",
    "end": "80079"
  },
  {
    "text": "demos inflex DB line",
    "start": "80079",
    "end": "83799"
  },
  {
    "text": "protocol then we can follow the",
    "start": "84159",
    "end": "86400"
  },
  {
    "text": "instructions step by step",
    "start": "86400",
    "end": "90960"
  },
  {
    "text": "first let's check if we met the pray",
    "start": "91360",
    "end": "93759"
  },
  {
    "text": "request for this demo we need to install",
    "start": "93759",
    "end": "97159"
  },
  {
    "text": "Docker or OB stack and the python with",
    "start": "97159",
    "end": "100720"
  },
  {
    "text": "3.70 ler version so now let's",
    "start": "100720",
    "end": "106479"
  },
  {
    "text": "check great we have Doge doer inst do",
    "start": "109439",
    "end": "113240"
  },
  {
    "text": "and also Python",
    "start": "113240",
    "end": "115920"
  },
  {
    "text": "3 now that we have installed all the",
    "start": "115920",
    "end": "118799"
  },
  {
    "text": "pray requests now let's follow the",
    "start": "118799",
    "end": "120799"
  },
  {
    "text": "instruction to install other",
    "start": "120799",
    "end": "123360"
  },
  {
    "text": "dependencies copy the",
    "start": "123360",
    "end": "126840"
  },
  {
    "text": "code and install",
    "start": "127119",
    "end": "130840"
  },
  {
    "text": "it okay it's done now let's head to the",
    "start": "131080",
    "end": "134440"
  },
  {
    "text": "webt time Cloud console and to sign up",
    "start": "134440",
    "end": "138360"
  },
  {
    "text": "our",
    "start": "138360",
    "end": "140720"
  },
  {
    "text": "account you can log in with your Google",
    "start": "140800",
    "end": "143280"
  },
  {
    "text": "account get account or register one with",
    "start": "143280",
    "end": "146120"
  },
  {
    "text": "your email address registering reptime",
    "start": "146120",
    "end": "149280"
  },
  {
    "text": "cloud is is totally free with no credit",
    "start": "149280",
    "end": "151959"
  },
  {
    "text": "card information",
    "start": "151959",
    "end": "153560"
  },
  {
    "text": "required I will loging with my account",
    "start": "153560",
    "end": "158000"
  },
  {
    "text": "now now I've already loging to my",
    "start": "162519",
    "end": "165120"
  },
  {
    "text": "account that's hit create new service if",
    "start": "165120",
    "end": "168239"
  },
  {
    "text": "you are new to this account it would",
    "start": "168239",
    "end": "171760"
  },
  {
    "text": "guide you to create your first service",
    "start": "171760",
    "end": "173879"
  },
  {
    "text": "here let's choose hobby plan it is",
    "start": "173879",
    "end": "175920"
  },
  {
    "text": "totally free name your service I would",
    "start": "175920",
    "end": "179239"
  },
  {
    "text": "use demo",
    "start": "179239",
    "end": "182400"
  },
  {
    "text": "thing you can also generate one randomly",
    "start": "182959",
    "end": "185959"
  },
  {
    "text": "if you would like hit next next",
    "start": "185959",
    "end": "189920"
  },
  {
    "text": "step okay the new reptum DB service is",
    "start": "189920",
    "end": "193040"
  },
  {
    "text": "now ready the next step is copying",
    "start": "193040",
    "end": "195840"
  },
  {
    "text": "connection INF for of the service to the",
    "start": "195840",
    "end": "198080"
  },
  {
    "text": "EnV file firstly duplicate the env.",
    "start": "198080",
    "end": "201799"
  },
  {
    "text": "example file ASV",
    "start": "201799",
    "end": "205599"
  },
  {
    "text": "let's open the do in on v file and take",
    "start": "211799",
    "end": "214120"
  },
  {
    "text": "a look at the required parameters here",
    "start": "214120",
    "end": "216560"
  },
  {
    "text": "four parameters are required they are",
    "start": "216560",
    "end": "220319"
  },
  {
    "text": "host name username password and database",
    "start": "220319",
    "end": "223040"
  },
  {
    "text": "all these informations can be find in",
    "start": "223040",
    "end": "225879"
  },
  {
    "text": "your webtime Cloud console connect my",
    "start": "225879",
    "end": "228959"
  },
  {
    "text": "SQL tab here let's replace all these",
    "start": "228959",
    "end": "232840"
  },
  {
    "text": "parameters",
    "start": "232840",
    "end": "235840"
  },
  {
    "text": "[Music]",
    "start": "244630",
    "end": "247699"
  },
  {
    "text": "so now all the setup is ready let's go",
    "start": "248040",
    "end": "249920"
  },
  {
    "text": "to the next step downloading the sample",
    "start": "249920",
    "end": "252400"
  },
  {
    "text": "data from inlex DB sample data set",
    "start": "252400",
    "end": "255120"
  },
  {
    "text": "rapple let's copy the command and run it",
    "start": "255120",
    "end": "259880"
  },
  {
    "text": "in the",
    "start": "259880",
    "end": "262239"
  },
  {
    "text": "terminal it's being downloaded wait a",
    "start": "263520",
    "end": "266479"
  },
  {
    "text": "few",
    "start": "266479",
    "end": "267759"
  },
  {
    "text": "seconds you can use a proxy if you",
    "start": "267759",
    "end": "270280"
  },
  {
    "text": "encounter some network",
    "start": "270280",
    "end": "273600"
  },
  {
    "text": "issues okay done let's browse the",
    "start": "275479",
    "end": "280880"
  },
  {
    "text": "data open the air sensor data. LP fire",
    "start": "283039",
    "end": "288360"
  },
  {
    "text": "all the data is in influx DB slime",
    "start": "288360",
    "end": "291120"
  },
  {
    "text": "protocol format and there are",
    "start": "291120",
    "end": "293759"
  },
  {
    "text": "5,288 records in total now that you have",
    "start": "293759",
    "end": "296880"
  },
  {
    "text": "the data set downloaded you have two",
    "start": "296880",
    "end": "299039"
  },
  {
    "text": "option to import data to grap time Cloud",
    "start": "299039",
    "end": "301680"
  },
  {
    "text": "the first option is to write data via",
    "start": "301680",
    "end": "303759"
  },
  {
    "text": "line protocol using some code command",
    "start": "303759",
    "end": "307160"
  },
  {
    "text": "and the other one is to use our web",
    "start": "307160",
    "end": "309759"
  },
  {
    "text": "dashboard to import the line protocol",
    "start": "309759",
    "end": "312800"
  },
  {
    "text": "files which might be a little bit easier",
    "start": "312800",
    "end": "315440"
  },
  {
    "text": "for non-technical personnel I will",
    "start": "315440",
    "end": "318479"
  },
  {
    "text": "demonstrate both methods for you so",
    "start": "318479",
    "end": "321280"
  },
  {
    "text": "first let's um use command to injust",
    "start": "321280",
    "end": "324960"
  },
  {
    "text": "data copy and run it here",
    "start": "324960",
    "end": "330880"
  },
  {
    "text": "okay we can see that the data is being",
    "start": "333520",
    "end": "337039"
  },
  {
    "text": "written it sent 1,000 records per second",
    "start": "337039",
    "end": "340720"
  },
  {
    "text": "since the hobby plan has a rate limit",
    "start": "340720",
    "end": "343400"
  },
  {
    "text": "okay inest",
    "start": "343400",
    "end": "345000"
  },
  {
    "text": "done um you can also view the",
    "start": "345000",
    "end": "348039"
  },
  {
    "text": "detailed ingestion code here in the",
    "start": "348039",
    "end": "350880"
  },
  {
    "text": "ingest py5 and I will quickly show you",
    "start": "350880",
    "end": "354680"
  },
  {
    "text": "the logic here first it loow parameters",
    "start": "354680",
    "end": "357639"
  },
  {
    "text": "from the EMV file and then it create an",
    "start": "357639",
    "end": "360360"
  },
  {
    "text": "influx DB client writing the data in",
    "start": "360360",
    "end": "362720"
  },
  {
    "text": "line protocol format via right apis",
    "start": "362720",
    "end": "365479"
  },
  {
    "text": "right method this script can injust any",
    "start": "365479",
    "end": "368599"
  },
  {
    "text": "data file in line protocol format",
    "start": "368599",
    "end": "371280"
  },
  {
    "text": "actually even if you use influx DB's CLI",
    "start": "371280",
    "end": "374280"
  },
  {
    "text": "in a more structural way since it sends",
    "start": "374280",
    "end": "376520"
  },
  {
    "text": "data in line protocol format underneath",
    "start": "376520",
    "end": "378840"
  },
  {
    "text": "the grap time DB is compatible with such",
    "start": "378840",
    "end": "381680"
  },
  {
    "text": "applications and now that we have",
    "start": "381680",
    "end": "383639"
  },
  {
    "text": "ingested all the data let's log into",
    "start": "383639",
    "end": "385960"
  },
  {
    "text": "grap Cloud to see open web dashboard we",
    "start": "385960",
    "end": "389720"
  },
  {
    "text": "can see the air sensors",
    "start": "389720",
    "end": "392720"
  },
  {
    "text": "here click on the information and",
    "start": "392720",
    "end": "396720"
  },
  {
    "text": "correct we have",
    "start": "396720",
    "end": "399680"
  },
  {
    "text": "5,288 records okay now I will show you",
    "start": "399680",
    "end": "403000"
  },
  {
    "text": "the other",
    "start": "403000",
    "end": "404960"
  },
  {
    "text": "method to be clear I would create a new",
    "start": "404960",
    "end": "408319"
  },
  {
    "text": "service here since the older one have",
    "start": "408319",
    "end": "410960"
  },
  {
    "text": "already data",
    "start": "410960",
    "end": "413080"
  },
  {
    "text": "injested two okay it's up and running",
    "start": "413080",
    "end": "415960"
  },
  {
    "text": "let's open the web dashboard go to the",
    "start": "415960",
    "end": "418840"
  },
  {
    "text": "sideb and click",
    "start": "418840",
    "end": "421840"
  },
  {
    "text": "inest you can see the inflex BB line",
    "start": "421840",
    "end": "424639"
  },
  {
    "text": "protocol",
    "start": "424639",
    "end": "425840"
  },
  {
    "text": "input",
    "start": "425840",
    "end": "428520"
  },
  {
    "text": "console here select upload now you can",
    "start": "428520",
    "end": "431720"
  },
  {
    "text": "drop or click to upload fire to injust",
    "start": "431720",
    "end": "434879"
  },
  {
    "text": "data or just trag the data set we just",
    "start": "434879",
    "end": "439840"
  },
  {
    "text": "downloaded so once the file is uploaded",
    "start": "439840",
    "end": "442759"
  },
  {
    "text": "click the right button next to the",
    "start": "442759",
    "end": "445240"
  },
  {
    "text": "Precision box to injest data the line",
    "start": "445240",
    "end": "447560"
  },
  {
    "text": "protocol file downloaded about is in Nan",
    "start": "447560",
    "end": "450560"
  },
  {
    "text": "seconds so we don't need to change the",
    "start": "450560",
    "end": "453879"
  },
  {
    "text": "position the data should be written",
    "start": "453879",
    "end": "456560"
  },
  {
    "text": "immediately then you can go to the",
    "start": "456560",
    "end": "458400"
  },
  {
    "text": "tables file and find the air sensor",
    "start": "458400",
    "end": "462120"
  },
  {
    "text": "table show the information correct also",
    "start": "462120",
    "end": "468000"
  },
  {
    "text": "5,288 data in total now that we have all",
    "start": "468000",
    "end": "471479"
  },
  {
    "text": "the data ingested successfully to grab",
    "start": "471479",
    "end": "473879"
  },
  {
    "text": "some Cloud let's play with some",
    "start": "473879",
    "end": "477080"
  },
  {
    "text": "queries first let's go to",
    "start": "477080",
    "end": "480000"
  },
  {
    "text": "our web dashboard select query",
    "start": "480000",
    "end": "483440"
  },
  {
    "text": "table and you",
    "start": "483440",
    "end": "485479"
  },
  {
    "text": "can select from the air sensors we cover",
    "start": "485479",
    "end": "489280"
  },
  {
    "text": "the table in standard SQL so other",
    "start": "489280",
    "end": "491800"
  },
  {
    "text": "function in standard SQL are also",
    "start": "491800",
    "end": "493680"
  },
  {
    "text": "supported like minimum maximum or other",
    "start": "493680",
    "end": "496360"
  },
  {
    "text": "more complex Aries for example we can",
    "start": "496360",
    "end": "499360"
  },
  {
    "text": "find the time range of data we let copy",
    "start": "499360",
    "end": "502319"
  },
  {
    "text": "this command and T here and we can just",
    "start": "502319",
    "end": "507199"
  },
  {
    "text": "run line two and get at result",
    "start": "507199",
    "end": "511279"
  },
  {
    "text": "two here we can see the time boundary",
    "start": "511279",
    "end": "514760"
  },
  {
    "text": "click on the clock button to switch from",
    "start": "514760",
    "end": "518039"
  },
  {
    "text": "Unix time stem and human readable",
    "start": "518039",
    "end": "520760"
  },
  {
    "text": "strings you can see that the time data",
    "start": "520760",
    "end": "523880"
  },
  {
    "text": "ingested is from 400 p.m. 4:30 p.m. to",
    "start": "523880",
    "end": "528360"
  },
  {
    "text": "to 6:25 p.m. to be clear influx air",
    "start": "528360",
    "end": "533200"
  },
  {
    "text": "sensor sble data is Pudo generated every",
    "start": "533200",
    "end": "536240"
  },
  {
    "text": "few hours so it may contain time stamps",
    "start": "536240",
    "end": "539160"
  },
  {
    "text": "in the future and the data point itself",
    "start": "539160",
    "end": "541200"
  },
  {
    "text": "is fake okay the final step is to add",
    "start": "541200",
    "end": "544360"
  },
  {
    "text": "some panel s from ql query let's go to",
    "start": "544360",
    "end": "548120"
  },
  {
    "text": "the",
    "start": "548120",
    "end": "549920"
  },
  {
    "text": "workbench and click new file let's",
    "start": "549920",
    "end": "553320"
  },
  {
    "text": "create a new file named air sensors.",
    "start": "553320",
    "end": "558000"
  },
  {
    "text": "yo",
    "start": "562519",
    "end": "564200"
  },
  {
    "text": "okay let's click the add pel here",
    "start": "564200",
    "end": "569760"
  },
  {
    "text": "here sensors table and we can choose a",
    "start": "569760",
    "end": "573320"
  },
  {
    "text": "field we are interested in that's used",
    "start": "573320",
    "end": "578160"
  },
  {
    "text": "temp that choose the temperature as",
    "start": "578959",
    "end": "582040"
  },
  {
    "text": "Fahrenheit here",
    "start": "582040",
    "end": "584600"
  },
  {
    "text": "right and let's see maybe last 30",
    "start": "584600",
    "end": "587920"
  },
  {
    "text": "minutes",
    "start": "587920",
    "end": "590160"
  },
  {
    "text": "run great the result is",
    "start": "590160",
    "end": "593399"
  },
  {
    "text": "here also you can choose the time range",
    "start": "593399",
    "end": "596000"
  },
  {
    "text": "to maybe last 24 hours and you can see",
    "start": "596000",
    "end": "600279"
  },
  {
    "text": "that if there is no data it will leave",
    "start": "600279",
    "end": "603600"
  },
  {
    "text": "it blank okay just save",
    "start": "603600",
    "end": "607640"
  },
  {
    "text": "it and you can add more panels in this",
    "start": "607640",
    "end": "612680"
  },
  {
    "text": "way which is should be",
    "start": "614120",
    "end": "617800"
  },
  {
    "text": "presentent so in this way you can",
    "start": "617800",
    "end": "620279"
  },
  {
    "text": "customize your own",
    "start": "620279",
    "end": "622079"
  },
  {
    "text": "panels okay so that's all for the demo",
    "start": "622079",
    "end": "625240"
  },
  {
    "text": "as you can see cryptum DB is fly",
    "start": "625240",
    "end": "627720"
  },
  {
    "text": "compatible with influx DB line protocol",
    "start": "627720",
    "end": "630519"
  },
  {
    "text": "actually both written in R webam DB",
    "start": "630519",
    "end": "633560"
  },
  {
    "text": "reuses the open source inflex DB line",
    "start": "633560",
    "end": "636040"
  },
  {
    "text": "protocol library to pass data so it",
    "start": "636040",
    "end": "638839"
  },
  {
    "text": "would have the identical man manner but",
    "start": "638839",
    "end": "642519"
  },
  {
    "text": "weam DB doesn't support INX DB's quiry",
    "start": "642519",
    "end": "645600"
  },
  {
    "text": "language or the flex data scripting",
    "start": "645600",
    "end": "648160"
  },
  {
    "text": "language instead DB support standard",
    "start": "648160",
    "end": "651760"
  },
  {
    "text": "SQL with a few time series data oriented",
    "start": "651760",
    "end": "655440"
  },
  {
    "text": "extensions it also supports quaring over",
    "start": "655440",
    "end": "658480"
  },
  {
    "text": "promql",
    "start": "658480",
    "end": "659600"
  },
  {
    "text": "as how we build the panels in the demo",
    "start": "659600",
    "end": "662240"
  },
  {
    "text": "it supports python scripting to",
    "start": "662240",
    "end": "664440"
  },
  {
    "text": "facilitate",
    "start": "664440",
    "end": "665680"
  },
  {
    "text": "complex analytical tasks moreover we are",
    "start": "665680",
    "end": "669760"
  },
  {
    "text": "actively developing a data flow engine",
    "start": "669760",
    "end": "672440"
  },
  {
    "text": "called gripton flow that would Implement",
    "start": "672440",
    "end": "674760"
  },
  {
    "text": "similar functionalities like continuous",
    "start": "674760",
    "end": "677639"
  },
  {
    "text": "query in inflex DB okay so much for",
    "start": "677639",
    "end": "680760"
  },
  {
    "text": "today's demo you can save our reposter",
    "start": "680760",
    "end": "683079"
  },
  {
    "text": "with store on GitHub follow our X",
    "start": "683079",
    "end": "685440"
  },
  {
    "text": "account and join the online GP time DB",
    "start": "685440",
    "end": "687440"
  },
  {
    "text": "community Through Slack thinking and Etc",
    "start": "687440",
    "end": "692320"
  },
  {
    "text": "also now you can try our grip time Cloud",
    "start": "692320",
    "end": "694959"
  },
  {
    "text": "for free with no credit card information",
    "start": "694959",
    "end": "698519"
  },
  {
    "text": "required at all get a fly manager time",
    "start": "698519",
    "end": "701800"
  },
  {
    "text": "Ser database service on the cloud and",
    "start": "701800",
    "end": "704279"
  },
  {
    "text": "unlock the full potential of your month",
    "start": "704279",
    "end": "706440"
  },
  {
    "text": "stack let's see you next time bye",
    "start": "706440",
    "end": "711079"
  }
]