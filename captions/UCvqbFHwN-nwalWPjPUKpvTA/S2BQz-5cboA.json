[
  {
    "text": "all right let's get this talk started here right you all are here to listen about crossplane so let's get the",
    "start": "760",
    "end": "6879"
  },
  {
    "text": "crossplane maintainer track talk going so my name is Jared this is Philipe over here and we are both very involved in",
    "start": "6879",
    "end": "13719"
  },
  {
    "text": "the crossplane project so this is always an interesting talk because we tried to have something for everybody we try to",
    "start": "13719",
    "end": "19279"
  },
  {
    "text": "have some intro material we try to like dive deeper into some topics so we want to have something for everybody so quick",
    "start": "19279",
    "end": "25400"
  },
  {
    "text": "show of hands who has never used crossplane before ever awesome this slide is for you what is crossplane so",
    "start": "25400",
    "end": "33399"
  },
  {
    "text": "crossplane is your Cloud native control plane you can use it to manage all of your resources you can compose those",
    "start": "33399",
    "end": "39760"
  },
  {
    "text": "resources into like higher level abstractions and then offer those to your developers so that they could",
    "start": "39760",
    "end": "44800"
  },
  {
    "text": "provision infrastructure when they need it kubernetes awesome control plane really really good for containers but",
    "start": "44800",
    "end": "51680"
  },
  {
    "text": "crossplane goes and teaches it how to manage like everything else basically control planes are not A New Concept",
    "start": "51680",
    "end": "58359"
  },
  {
    "text": "right Cloud providers have been using control control planes for years so it's not a New Concept but now it's your turn",
    "start": "58359",
    "end": "63399"
  },
  {
    "text": "to build your own control plane using crossplane so we've been doing this for a bit we we've been around for a little",
    "start": "63399",
    "end": "69840"
  },
  {
    "text": "bit over 5 years now uh and we now have a official formal proposal to graduate",
    "start": "69840",
    "end": "75080"
  },
  {
    "text": "with the cncf uh so one of the things that really hit me hard when we were pulling",
    "start": "75080",
    "end": "80159"
  },
  {
    "text": "together the proposal is how many people have gotten involved in the project so almost 2,000 people have contributed to",
    "start": "80159",
    "end": "87640"
  },
  {
    "text": "the project in some way now which is Absol absolutely amazing we're in the top 10% of uh of all cncf projects for",
    "start": "87640",
    "end": "93799"
  },
  {
    "text": "people that are writing code for it almost 700 people have written code for crossplane which just blows my mind it's",
    "start": "93799",
    "end": "99759"
  },
  {
    "text": "amazing almost 350 companies have contributed something to crossplane too so this community is getting bigger uh",
    "start": "99759",
    "end": "106439"
  },
  {
    "text": "the company the the project is mature um it's it's amazing to see this growth um and obviously lots of people are using",
    "start": "106439",
    "end": "112920"
  },
  {
    "text": "it right so there it's it's in use in production at scale by lots of companies that you may recognize as well okay so",
    "start": "112920",
    "end": "120880"
  },
  {
    "text": "back to the basics for folks so manage resources key Concept in crossplane so every resource out there in the cloud",
    "start": "120880",
    "end": "127360"
  },
  {
    "text": "that say AWS there is a crossplane resource to represent it so all the you",
    "start": "127360",
    "end": "133160"
  },
  {
    "text": "know 900 I don't know more than that Services AWS has there's a crossplane managed resource for basically all of",
    "start": "133160",
    "end": "139080"
  },
  {
    "text": "them so each managed resource is exposed in the kubernetes API as an object so",
    "start": "139080",
    "end": "144480"
  },
  {
    "text": "we've got this S3 bucket here and then it's got you know what you'd expect out of a kubernetes object that's got a spec",
    "start": "144480",
    "end": "150519"
  },
  {
    "text": "it's got config Fields uh it's got status it's got events so it's a well- behaved kubernetes object and it",
    "start": "150519",
    "end": "157519"
  },
  {
    "text": "represents an external resource that's out there in the real world for your control plane to",
    "start": "157519",
    "end": "163360"
  },
  {
    "text": "manage so how does that work uh well probably like you expect so you take a kubernetes cluster you put crossplane in",
    "start": "163360",
    "end": "170080"
  },
  {
    "text": "there you added some providers for crossplane as well like the AWS provider uh the provider has a series of",
    "start": "170080",
    "end": "176200"
  },
  {
    "text": "controllers that you know watch for events from the API server and when you create a uh an object uh with the",
    "start": "176200",
    "end": "184360"
  },
  {
    "text": "kubernetes API server probably through like get Ops or something it's like create an an S3 bucket the API server",
    "start": "184360",
    "end": "190480"
  },
  {
    "text": "tells the crossb controllers to go and reconcile that with the real world the S3 controller goes and talks to AWS over",
    "start": "190480",
    "end": "197200"
  },
  {
    "text": "their API and makes that S3 bucket happen out there in the real world so providers are what makes",
    "start": "197200",
    "end": "204480"
  },
  {
    "text": "crossplay know about external resources and kind of extend it further so there's some big provider news as of late so",
    "start": "204480",
    "end": "211319"
  },
  {
    "text": "upbound uh we created a framework in tooling to basically take any terraform",
    "start": "211319",
    "end": "217959"
  },
  {
    "text": "provider out there and then just code genin generate a crossplane provider for it so we've did that with a few of the",
    "start": "217959",
    "end": "223400"
  },
  {
    "text": "popular providers uh and then we've gone ahead and donated that's tooling the providers themselves Etc to the",
    "start": "223400",
    "end": "229959"
  },
  {
    "text": "crossplane community so those are all part of the Upstream uh crossplane project now along with that uh there was",
    "start": "229959",
    "end": "236720"
  },
  {
    "text": "an architecture change in those providers as well which led to some fairly massive performance improvements",
    "start": "236720",
    "end": "243400"
  },
  {
    "text": "so we're talking like more than 90% uh improvements in CPU and memory usage sometimes like a THX time to Readiness",
    "start": "243400",
    "end": "250640"
  },
  {
    "text": "improvements um which maybe says something about how slow it was to begin with but still it's fast now they have a",
    "start": "250640",
    "end": "257040"
  },
  {
    "text": "lot of coverage of all the resources the reliable performant ready for production and they're part of the crossplaying community now so there's some links",
    "start": "257040",
    "end": "263440"
  },
  {
    "text": "there in the Crossman contrib org to check out those providers um and I think those are definitely ready for fukes to",
    "start": "263440",
    "end": "268520"
  },
  {
    "text": "be using in production where can you find all the crossplane extensions there's configurations",
    "start": "268520",
    "end": "273840"
  },
  {
    "text": "there's providers there's functions there's all this stuff that teaches crossplane more tricks and the place to find them is in this crossplane",
    "start": "273840",
    "end": "280199"
  },
  {
    "text": "Marketplace so you can go there you can find all the extensions to crossplane you can see their documentation how to use them examples all that stuff so",
    "start": "280199",
    "end": "287280"
  },
  {
    "text": "marketplace. upbound doio that's where to go find all the extensions to crossplane all right so going to go one",
    "start": "287280",
    "end": "293520"
  },
  {
    "text": "level higher now we talked about the manag resources and now it's time to talk about assembling those resources",
    "start": "293520",
    "end": "299280"
  },
  {
    "text": "into higher level abstractions and basically building your own platform API",
    "start": "299280",
    "end": "304479"
  },
  {
    "text": "so a good example here is composing together as a platform engineer composing together gke a node pool",
    "start": "304479",
    "end": "311680"
  },
  {
    "text": "Network subnet all those things and then offering that as a simple higher level",
    "start": "311680",
    "end": "316840"
  },
  {
    "text": "cluster abstraction to your developers so that they have like a limited surface",
    "start": "316840",
    "end": "322240"
  },
  {
    "text": "area of configurations just a few con configuration knobs that you expose for them and they can get a cluster for",
    "start": "322240",
    "end": "328000"
  },
  {
    "text": "their workloads when they need it uh all the complexity about how the cloud providers work your the configuration it",
    "start": "328000",
    "end": "334919"
  },
  {
    "text": "takes the policy all that stuff is below the API line and then your developers",
    "start": "334919",
    "end": "340120"
  },
  {
    "text": "get a very simple experience on top of that so this is what it looks like this is a really important model and",
    "start": "340120",
    "end": "345960"
  },
  {
    "text": "crossplane to visualize so your developer on the left uh your app team",
    "start": "345960",
    "end": "351280"
  },
  {
    "text": "they have a simple abstraction a claim and that's their interface to be able to get infrastructure behind the API line",
    "start": "351280",
    "end": "358400"
  },
  {
    "text": "you as the platform engineer have defined uh your platform API with the composite resource definition that's the",
    "start": "358400",
    "end": "364479"
  },
  {
    "text": "shape of your API what config knobs you want to expose all that stuff and then you write compositions to say this is",
    "start": "364479",
    "end": "371080"
  },
  {
    "text": "the resources I want to bring together this is how I'm going to compose them this is how configuration values flow",
    "start": "371080",
    "end": "376639"
  },
  {
    "text": "all that sort of stuff to make it more tangible we as a platform engineer have created a postgress abstraction a",
    "start": "376639",
    "end": "383319"
  },
  {
    "text": "database abstraction so our engineer uh she says I want a small postgress please",
    "start": "383319",
    "end": "388639"
  },
  {
    "text": "and then uh behind the API line we this uh composition that we've written for AWS specifically it could be gcp it",
    "start": "388639",
    "end": "395720"
  },
  {
    "text": "could be Azure it could be you know gold silver cheap expensive whatever we have",
    "start": "395720",
    "end": "401080"
  },
  {
    "text": "an A AWS composition here and that happens to be for postgress an RDS instance DB parameter Group Security",
    "start": "401080",
    "end": "407240"
  },
  {
    "text": "Group probably some networking Stuff Etc but to the developer all they've asked for is one small postgress please and",
    "start": "407240",
    "end": "414080"
  },
  {
    "text": "the complexity of all the infrastructure and what it takes to do that is in your hands as a platform engineer and exactly",
    "start": "414080",
    "end": "419160"
  },
  {
    "text": "as you set it to happen goes and happens in the real world so this is what they look like to Define your own platform",
    "start": "419160",
    "end": "426560"
  },
  {
    "text": "API you use a composite resource definition in crossplane and there's basically like two things you two high",
    "start": "426560",
    "end": "432039"
  },
  {
    "text": "level areas you need to do you say this is the type this is the API object that I want to expose to my developers and",
    "start": "432039",
    "end": "438199"
  },
  {
    "text": "then you define the schema for it what configuration knobs do you want to expose uh what is the shape of your",
    "start": "438199",
    "end": "444000"
  },
  {
    "text": "platform API then you write a couple at least one composition maybe a couple couple of",
    "start": "444000",
    "end": "449800"
  },
  {
    "text": "them so you have options at runtime and now this is something that has changed recently so in mainstream Mainline",
    "start": "449800",
    "end": "456560"
  },
  {
    "text": "crossplane right now to compose resources together what you use is a pipeline of functions so there'll be a",
    "start": "456560",
    "end": "463960"
  },
  {
    "text": "series of functions that execute and those are those are what Define how to compose the resources together how to",
    "start": "463960",
    "end": "470319"
  },
  {
    "text": "mutate their values and how to end up at tangible resources in the real world so let's talk more about functions so we",
    "start": "470319",
    "end": "477520"
  },
  {
    "text": "said it's a pipeline of simple functions two compos resources that's true uh really important things to notice here",
    "start": "477520",
    "end": "483680"
  },
  {
    "text": "is that they are written in your language of choice if you want to write a function to capture your unique platform logic into one place you can do",
    "start": "483680",
    "end": "490960"
  },
  {
    "text": "that within your language of choice with your tools all that stuff and we're trying with the design here to find a",
    "start": "490960",
    "end": "496840"
  },
  {
    "text": "sweet spot between all declarative no code at all and then building an entire",
    "start": "496840",
    "end": "502319"
  },
  {
    "text": "controller building you know all writing all the reconciliation Loop logic all that stuff we're trying to find a sweet spot in the middle so you focus only on",
    "start": "502319",
    "end": "509800"
  },
  {
    "text": "your your platform's unique needs so also really important you don't have to write code to do this you know if you",
    "start": "509800",
    "end": "517000"
  },
  {
    "text": "have unique needs and you want to write code to Define your platform great write a function for it otherwise though",
    "start": "517000",
    "end": "522880"
  },
  {
    "text": "there's a bunch of functions within the ecosystem now that you can use and you don't have to write the code yourself",
    "start": "522880",
    "end": "528600"
  },
  {
    "text": "this is what it looks like to write code this is go uh we're program dynamically creating a bucket an S3 bucket we're",
    "start": "528600",
    "end": "535200"
  },
  {
    "text": "assigning values to it we can take an input blah blah we can use code to write you know build our infrastructure you",
    "start": "535200",
    "end": "541240"
  },
  {
    "text": "know unit tests linters validators all that stuff great stuff if you don't want to write code then there's lots and lots",
    "start": "541240",
    "end": "548160"
  },
  {
    "text": "of functions to use so this one here is a template function so in your composition you can say hey run a",
    "start": "548160",
    "end": "554079"
  },
  {
    "text": "function for templates here's my template make it happen also you could do things like use Q scripts if you",
    "start": "554079",
    "end": "559839"
  },
  {
    "text": "wanted to uh KCl there's a bunch of different experiences that are popping up now with functions that mean you",
    "start": "559839",
    "end": "565240"
  },
  {
    "text": "don't have to write the code yourself you just get all these new experiences to Define your platform in the way that you want",
    "start": "565240",
    "end": "571480"
  },
  {
    "text": "to all right this is the thing I was most looking forward to in this talk all the folks that raised their",
    "start": "571480",
    "end": "577680"
  },
  {
    "text": "hand earlier that have not used crossplane you won't understand this but folks that have used crossplane it can",
    "start": "577680",
    "end": "583160"
  },
  {
    "text": "be challenging to use sometimes we have taken that to heart and really trying to",
    "start": "583160",
    "end": "588680"
  },
  {
    "text": "make crossplane easier to use and faster to use and all that stuff too so two huge improvements here one crossplane is",
    "start": "588680",
    "end": "595640"
  },
  {
    "text": "now more powerful and flexible than it's ever been before you can literally do things were impossible before in crossplane a year ago you could not do",
    "start": "595640",
    "end": "602320"
  },
  {
    "text": "all this stuff now you can and a whole world is opened up now you can do it in your language and your tools of choice",
    "start": "602320",
    "end": "608480"
  },
  {
    "text": "and there's more and more functions like every week basically so that ecosystem is growing lots of things you can do",
    "start": "608480",
    "end": "613800"
  },
  {
    "text": "with crossplane now and maybe more important is that you can when you're",
    "start": "613800",
    "end": "619320"
  },
  {
    "text": "building your control plane with crossplane you can successfully get it running and into production easier and",
    "start": "619320",
    "end": "625959"
  },
  {
    "text": "faster than ever before also basically the concept is we took all the this work that you have to do shifted it left so",
    "start": "625959",
    "end": "631640"
  },
  {
    "text": "you can do it on your local laptop rapidly iterate get it correct before you ever touch a live control plane so",
    "start": "631640",
    "end": "637800"
  },
  {
    "text": "we're going to see that in this demo in just a second with uh all this new crossplane tooling this stuff did not",
    "start": "637800",
    "end": "643720"
  },
  {
    "text": "exist like 6 months ago basically so there's all this tooling for the full life cycle of your control plane initializing a new crossplane project",
    "start": "643720",
    "end": "650760"
  },
  {
    "text": "testing it locally you know when it's out there running in the real world tracing through things observability all",
    "start": "650760",
    "end": "655880"
  },
  {
    "text": "that stuff these are all new tools that didn't exist like 6 9 months ago or so",
    "start": "655880",
    "end": "661000"
  },
  {
    "text": "okay demo time I am pumped on this demo and let's see if it works well on this",
    "start": "661000",
    "end": "667720"
  },
  {
    "text": "window here that is not very visible for me all right okay okay okay so we are",
    "start": "667720",
    "end": "674240"
  },
  {
    "text": "going to go back in time a little bit and we are going to build a platform with crossplane the hard way so a year",
    "start": "674240",
    "end": "681839"
  },
  {
    "text": "ago or so uh I am a platform engineer I want to expose database as a service to",
    "start": "681839",
    "end": "687160"
  },
  {
    "text": "my Engineers so I've created this this database abstraction for them when they want to create a database they can say",
    "start": "687160",
    "end": "693480"
  },
  {
    "text": "cool give me an Acme database and make it 100 gigaby please that's the only config knob I've given them now under",
    "start": "693480",
    "end": "700519"
  },
  {
    "text": "the covers what I did as a platform engineer to make that happen is that I created a xrd that basically says that",
    "start": "700519",
    "end": "706839"
  },
  {
    "text": "here's the platform API for databases here's the shape of it uh you can ignore most of this stuff but the key part here",
    "start": "706839",
    "end": "713040"
  },
  {
    "text": "is that I'm exposing this one storage Knob that says how many G gigabytes the developer wants then I write a",
    "start": "713040",
    "end": "719600"
  },
  {
    "text": "composition and I basically say okay for this composition for a database what that means here in my organization is",
    "start": "719600",
    "end": "725160"
  },
  {
    "text": "it's a cloudsql database it's going to run postgress and then the default will be",
    "start": "725160",
    "end": "730200"
  },
  {
    "text": "10 gigs for the dis but that value that the um engineer gave of the dis uh like",
    "start": "730200",
    "end": "736320"
  },
  {
    "text": "how much storage they want I'll patch that down into the cloud SQL instance so in the cloud that what the developer",
    "start": "736320",
    "end": "741480"
  },
  {
    "text": "wanted will happen cool so let's do that let's go ahead and as a platform",
    "start": "741480",
    "end": "747920"
  },
  {
    "text": "engineer like apply my definition my composition it's on the on the service",
    "start": "747920",
    "end": "753120"
  },
  {
    "text": "or sorry on my control plane now cool I want to test this does it work let's see if it actually works or not so I will K",
    "start": "753120",
    "end": "761240"
  },
  {
    "text": "apply DF pre claim so I'll create an instance of that claim which if I recall",
    "start": "761240",
    "end": "767360"
  },
  {
    "text": "correctly was 100 gigs or so cool 100 gigs so I'm testing this did this is",
    "start": "767360",
    "end": "773360"
  },
  {
    "text": "this database coming up does it work is it 100 gigs well but I don't know let's see all",
    "start": "773360",
    "end": "780279"
  },
  {
    "text": "right so what I'm going to do now is actually let's just look at stuff here throwing stuff in there yeah okay it's",
    "start": "780279",
    "end": "786639"
  },
  {
    "text": "it's not ready yet uh here's the database object that's like the real thing in Google Cloud right now that's",
    "start": "786639",
    "end": "792680"
  },
  {
    "text": "not ready yet um is it like what we asked for it to be though did my logic",
    "start": "792680",
    "end": "798040"
  },
  {
    "text": "in my composition work um let's see uh oh man it did not work that stinks cuz I",
    "start": "798040",
    "end": "804320"
  },
  {
    "text": "wanted a 100 Gig database I got a 10 gig one um and I had to go go to a live",
    "start": "804320",
    "end": "809720"
  },
  {
    "text": "control plane and like spin up infrastructure in Google Cloud to test this thing can't there be an easier way to do",
    "start": "809720",
    "end": "816440"
  },
  {
    "text": "this like a faster way to do this this is this is this is too hard I don't like this yes there is a faster way to do",
    "start": "816440",
    "end": "822279"
  },
  {
    "text": "this it's 2024 crossplane v1.15 is out and we're going to do this the easy way",
    "start": "822279",
    "end": "827519"
  },
  {
    "text": "now all right so that old style uh patch and transform composition it had a bug",
    "start": "827519",
    "end": "833600"
  },
  {
    "text": "in it I don't know where I had to go to the real world to try it nah I'm going to use new crossplane tooling to convert",
    "start": "833600",
    "end": "840560"
  },
  {
    "text": "it's a little small let's start make it a little bit bigger sorry",
    "start": "840560",
    "end": "845639"
  },
  {
    "text": "folks all right I am going to use this crossplane tooling to convert that uh",
    "start": "845880",
    "end": "851320"
  },
  {
    "text": "that old composition to a new function based one so automatically migrated cool",
    "start": "851320",
    "end": "856680"
  },
  {
    "text": "it's done it's there it's ready to try now I'm going to use local tooling to",
    "start": "856680",
    "end": "861920"
  },
  {
    "text": "test this all in my local laptop I'm going to say cross plan please render out that composition for me with these",
    "start": "861920",
    "end": "867079"
  },
  {
    "text": "particular values uh let me know what happens crossplane runs it all of my local laptop here ah here's the problem",
    "start": "867079",
    "end": "875320"
  },
  {
    "text": "my default of 10 gigs is there but then this silly patch that I typoed is also",
    "start": "875320",
    "end": "881079"
  },
  {
    "text": "there dis C size instead of dis K size H there's the bug right there found it",
    "start": "881079",
    "end": "887360"
  },
  {
    "text": "okay let's fix it so we go to our composition that's based on functions and we go ahead and fix that",
    "start": "887360",
    "end": "894880"
  },
  {
    "text": "now so it's with the K we save it let's try it again so so we asked all my local",
    "start": "894880",
    "end": "900240"
  },
  {
    "text": "laptop here I'm not touching the real world we rent it again cool 100 gigs that looks like it works that's awesome",
    "start": "900240",
    "end": "906320"
  },
  {
    "text": "uh now to my human eyes this looks like the cloudsql database will work correctly um that's good but uh let's do",
    "start": "906320",
    "end": "913199"
  },
  {
    "text": "a little bit further validation of this so let's also go ahead and one more",
    "start": "913199",
    "end": "920560"
  },
  {
    "text": "command where we'll run the render on the local laptop we'll test our composition function we'll test our",
    "start": "920560",
    "end": "926160"
  },
  {
    "text": "composition we'll make sure it looks good and then we'll go ahead and pass to more new tooling of the crossplay validate command and then that will tell",
    "start": "926160",
    "end": "934000"
  },
  {
    "text": "us that everything is all good it's going to look at the schemas for it it's going to make sure all the fields are correct everything's all good so on our",
    "start": "934000",
    "end": "941240"
  },
  {
    "text": "local laptop instead of out there in the real world where that database probably still spinning up now yeah it's still",
    "start": "941240",
    "end": "948040"
  },
  {
    "text": "not even ready yet um so we have made crossplane way easier to use by basically shifting all this stuff left",
    "start": "948040",
    "end": "953880"
  },
  {
    "text": "and you can do it all on your local laptop and crossplane is easy to use now so Philipe your turn my friend",
    "start": "953880",
    "end": "960920"
  },
  {
    "text": "[Applause]",
    "start": "962130",
    "end": "969110"
  },
  {
    "text": "right",
    "start": "988759",
    "end": "990920"
  },
  {
    "text": "okay so yeah as Jared said earlier composition functions are a way to teach",
    "start": "1010959",
    "end": "1016600"
  },
  {
    "text": "crossplane new tricks and we um composition functions were introduced in",
    "start": "1016600",
    "end": "1021839"
  },
  {
    "text": "Alpha in the 1.11 version of cplane but we actually completely reworked them and",
    "start": "1021839",
    "end": "1029240"
  },
  {
    "text": "released the beta version in 114 so if you previously tried composition functions",
    "start": "1029240",
    "end": "1034839"
  },
  {
    "text": "in 11 let's have U you you should have definitely have a look at the version we",
    "start": "1034839",
    "end": "1041280"
  },
  {
    "text": "shipped with 114 because that's completely different and let's see a few",
    "start": "1041280",
    "end": "1046360"
  },
  {
    "text": "additions we actually added recently we uh added um a python SDK which is",
    "start": "1046360",
    "end": "1053720"
  },
  {
    "text": "actually a way um to have a first class citizen uh experience developer",
    "start": "1053720",
    "end": "1059000"
  },
  {
    "text": "experience to develop um composition functions using python previously you",
    "start": "1059000",
    "end": "1064320"
  },
  {
    "text": "could do that with go but now you can you can also use that with do that with python and um with that we also released",
    "start": "1064320",
    "end": "1073840"
  },
  {
    "text": "a template repository which you can use from uh GitHub directly or also from as",
    "start": "1073840",
    "end": "1080440"
  },
  {
    "text": "Jared was mentioning earlier using the init subcommand of the Cross pling CLE about metrics we added some uh nice",
    "start": "1080440",
    "end": "1088360"
  },
  {
    "text": "things for the observability of composition functions uh like exposing",
    "start": "1088360",
    "end": "1093679"
  },
  {
    "text": "the number of CES and then the some statistics about the execution times of",
    "start": "1093679",
    "end": "1098799"
  },
  {
    "text": "functions so that you can monitor your functions and uh see how they're behaving and if there is anything you",
    "start": "1098799",
    "end": "1104919"
  },
  {
    "text": "should improve to get your composition times uh tighter and then uh we also added a completely",
    "start": "1104919",
    "end": "1112919"
  },
  {
    "text": "new feature to functions quite recently in 115 uh which is the capability to",
    "start": "1112919",
    "end": "1117960"
  },
  {
    "text": "request additional uh additional extra resources so functions can actually",
    "start": "1117960",
    "end": "1123760"
  },
  {
    "text": "request back to crossplane additional cluster scoped resources which usually",
    "start": "1123760",
    "end": "1129120"
  },
  {
    "text": "are uh everything crossplane handles and can use those as part of their",
    "start": "1129120",
    "end": "1135240"
  },
  {
    "text": "composition so it can actually uh it's kind of essentially it's a very flexible cross resource reference and uh",
    "start": "1135240",
    "end": "1143159"
  },
  {
    "text": "obviously functions can expose that with whatever API they want through the input as we saw that so we're going to see a",
    "start": "1143159",
    "end": "1150240"
  },
  {
    "text": "bit more later as I was saying uh we revamped completely composition functions in 114 which proved to be the",
    "start": "1150240",
    "end": "1158480"
  },
  {
    "text": "right choice because we said we Sol the ecosystem of functions actually thriving",
    "start": "1158480",
    "end": "1164360"
  },
  {
    "text": "Jared already showed a few ones but we'll go rapidly through a few highlight of the available functions at the",
    "start": "1164360",
    "end": "1171880"
  },
  {
    "text": "moment function KCl uh is another another function that allows you to",
    "start": "1171880",
    "end": "1178480"
  },
  {
    "text": "Define your composition Logics completely in KCl KCl is a constraint based uh language um which is actually a",
    "start": "1178480",
    "end": "1186840"
  },
  {
    "text": "cncf Sandbox project and so you can actually write stuff like for loops and",
    "start": "1186840",
    "end": "1192440"
  },
  {
    "text": "uh conditions so which obviously they seem obvious but given the previous",
    "start": "1192440",
    "end": "1197520"
  },
  {
    "text": "inter implementation of composition uh composition composition in general it's",
    "start": "1197520",
    "end": "1203120"
  },
  {
    "text": "actually a pretty good achievement to have all these features and the whole power of KCl to be able to to Define",
    "start": "1203120",
    "end": "1210400"
  },
  {
    "text": "your compositions similarly to that we have a function Q which allows you to Define your composition logic in Q here",
    "start": "1210400",
    "end": "1217679"
  },
  {
    "text": "we can see a part of a more complex uh composition function using using Q which",
    "start": "1217679",
    "end": "1224440"
  },
  {
    "text": "is actually um composing an espre bucket and creating um Yan policies for an an3",
    "start": "1224440",
    "end": "1232679"
  },
  {
    "text": "vet if only if a base Arn is provided and also checking if there are",
    "start": "1232679",
    "end": "1238520"
  },
  {
    "text": "additional Arns to be to create additional policies for and then we're going to talk a",
    "start": "1238520",
    "end": "1245280"
  },
  {
    "text": "little bit more in detail about this one later but leveraging the extra resources",
    "start": "1245280",
    "end": "1250360"
  },
  {
    "text": "functionality the what previously was possible to be done in in three is now",
    "start": "1250360",
    "end": "1255760"
  },
  {
    "text": "uh with environment configs and position environment functionality can now be",
    "start": "1255760",
    "end": "1261240"
  },
  {
    "text": "completely reproduced by a function and so we can obviously see how uh in the",
    "start": "1261240",
    "end": "1266760"
  },
  {
    "text": "future we could have more generic uh composition functions doing more stuff",
    "start": "1266760",
    "end": "1272400"
  },
  {
    "text": "also function cell filter it's another kind of it's a different kind of",
    "start": "1272400",
    "end": "1277640"
  },
  {
    "text": "function it's actually um a what the previous ones we saw are actually kind",
    "start": "1277640",
    "end": "1283279"
  },
  {
    "text": "of a producer function so stuff you expect to use at the start of your",
    "start": "1283279",
    "end": "1289159"
  },
  {
    "text": "pipeline and then uh maybe go through other function other simpler functions",
    "start": "1289159",
    "end": "1294440"
  },
  {
    "text": "that modify the result of that more complex functions these ones this one is exactly that it's a simple function",
    "start": "1294440",
    "end": "1301600"
  },
  {
    "text": "whose only job is to filter out resources based on some expression you",
    "start": "1301600",
    "end": "1306799"
  },
  {
    "text": "can Define in cell H it's actually in this case for example the usual function",
    "start": "1306799",
    "end": "1313159"
  },
  {
    "text": "patch and transform is creating a bucket but function patch and transform doesn't expose any way to filter out or any easy",
    "start": "1313159",
    "end": "1321120"
  },
  {
    "text": "way to um to filter out resources and to create resources only on conditions and",
    "start": "1321120",
    "end": "1327039"
  },
  {
    "text": "so we can filter out Downstream this bucket uh and only create it if the spec",
    "start": "1327039",
    "end": "1334559"
  },
  {
    "text": "export field of the composite resource is set to S3 so that's definitely useful",
    "start": "1334559",
    "end": "1340640"
  },
  {
    "text": "and then one again once again function sequencer uh this one is about um uh",
    "start": "1340640",
    "end": "1347240"
  },
  {
    "text": "defining um dependencies between multiple resources so you can Define multiple sequences as you can see down",
    "start": "1347240",
    "end": "1354200"
  },
  {
    "text": "there in the roots in this case for example second resource and third resource depend on",
    "start": "1354200",
    "end": "1360760"
  },
  {
    "text": "the on the on the core resource and so only once the core resource is ready",
    "start": "1360760",
    "end": "1367000"
  },
  {
    "text": "it's going to be uh second resource and third resource are going to be created so that's pretty awesome",
    "start": "1367000",
    "end": "1375120"
  },
  {
    "text": "too another one function switcher uh this one is about exposing uh simply",
    "start": "1375120",
    "end": "1381559"
  },
  {
    "text": "exposing some annotations at the composite resource level and you can actually filter out or enable or disable",
    "start": "1381559",
    "end": "1389480"
  },
  {
    "text": "resources based on whatever the Upstream user uh is is deciding so that's a nice",
    "start": "1389480",
    "end": "1396559"
  },
  {
    "text": "addition to and obviously there is a lot of functions to be to be written so feel",
    "start": "1396559",
    "end": "1403120"
  },
  {
    "text": "free to reach out on on on the crossplains lock Channel and and we can",
    "start": "1403120",
    "end": "1408559"
  },
  {
    "text": "definitely help you out and it's super awesome to see so many contributions",
    "start": "1408559",
    "end": "1413600"
  },
  {
    "text": "from the community let's talk now about composition environments composition",
    "start": "1413600",
    "end": "1419520"
  },
  {
    "text": "environments are an alpha feature that uh we already spoke about the function environment configs so it's uh the let's",
    "start": "1419520",
    "end": "1427120"
  },
  {
    "text": "say original implementation of that the in three implementation of that that still as I said an alpha an alpha",
    "start": "1427120",
    "end": "1433840"
  },
  {
    "text": "feature but it um we were discussing about the promotion to Beta and it's",
    "start": "1433840",
    "end": "1439640"
  },
  {
    "text": "actually the initial implementation the initial intent of environment configs",
    "start": "1439640",
    "end": "1444799"
  },
  {
    "text": "was to have some kind of environment dependent as the name suggests some",
    "start": "1444799",
    "end": "1450279"
  },
  {
    "text": "environment dependent data which you could pull in into your compositions like a glorified config map but it",
    "start": "1450279",
    "end": "1458000"
  },
  {
    "text": "actually ended up being a lot of other things and being used in a lot of",
    "start": "1458000",
    "end": "1463679"
  },
  {
    "text": "different uh ways so it's actually be it actually became a way to share information between compositions it",
    "start": "1463679",
    "end": "1470640"
  },
  {
    "text": "actually became a way to patch resources inside the usual standard resource based",
    "start": "1470640",
    "end": "1478399"
  },
  {
    "text": "compositions and obviously the API became extremely complex out of of as a",
    "start": "1478399",
    "end": "1484559"
  },
  {
    "text": "result of that and it's OB obviously difficult to it became a",
    "start": "1484559",
    "end": "1490240"
  },
  {
    "text": "little bit difficult to maintain so we think that the path forward for that is actually functions and so let's have a",
    "start": "1490240",
    "end": "1497720"
  },
  {
    "text": "little demo about function environment",
    "start": "1497720",
    "end": "1502120"
  },
  {
    "text": "configs so here for example you can see a composition using the old approach is",
    "start": "1504679",
    "end": "1511960"
  },
  {
    "text": "it big enough yes a bigger this is an old style composition as you can see",
    "start": "1511960",
    "end": "1518440"
  },
  {
    "text": "here we are defining an environment environment configs a list of selectors",
    "start": "1518440",
    "end": "1524000"
  },
  {
    "text": "or references either by label or by name and the usual approach s and then we can",
    "start": "1524000",
    "end": "1531000"
  },
  {
    "text": "use that for uh from either a pipeline or the usual patent transform based",
    "start": "1531000",
    "end": "1536600"
  },
  {
    "text": "compositions as we can see that U down there but the usual approach approach to",
    "start": "1536600",
    "end": "1541640"
  },
  {
    "text": "The Bu Vis would have been to actually deploy again s similarly to what Jared",
    "start": "1541640",
    "end": "1547360"
  },
  {
    "text": "showed earlier it would have been to just deploy it in a real cluster with real environment configs and so it would",
    "start": "1547360",
    "end": "1553679"
  },
  {
    "text": "it would have been pretty hard to understand uh what's going on with without having stuff actually running in",
    "start": "1553679",
    "end": "1560840"
  },
  {
    "text": "production or running somewhere and um so we actually there is no support for",
    "start": "1560840",
    "end": "1566520"
  },
  {
    "text": "the convert tool but we're working on that uh so we can actually see it's",
    "start": "1566520",
    "end": "1573559"
  },
  {
    "text": "actually just a matter of pushing down the exact same configuration function environment configs main uh goal was to",
    "start": "1573559",
    "end": "1580520"
  },
  {
    "text": "reimplement the same exact API as the implementation and so we can actually",
    "start": "1580520",
    "end": "1585559"
  },
  {
    "text": "see that uh we can um just use yet another function get all",
    "start": "1585559",
    "end": "1591720"
  },
  {
    "text": "the resources as I said under the hood it's using the extra resources functionality and uh we can see that you",
    "start": "1591720",
    "end": "1599520"
  },
  {
    "text": "we can actually run that so how do we run that we saw cross plan bet render",
    "start": "1599520",
    "end": "1604919"
  },
  {
    "text": "earlier but it's actually we we recently introduced some more Flags to",
    "start": "1604919",
    "end": "1614039"
  },
  {
    "text": "that two flags are the extra r resources as I was saying so we can provide us a",
    "start": "1615679",
    "end": "1620840"
  },
  {
    "text": "list of um y manifest that are going to be used by the crossplane beta render uh",
    "start": "1620840",
    "end": "1628799"
  },
  {
    "text": "command to serve the resources to the to the function if and when they they ask",
    "start": "1628799",
    "end": "1633880"
  },
  {
    "text": "for them and we can actually also include the context in the output so that we can see what it actually",
    "start": "1633880",
    "end": "1641559"
  },
  {
    "text": "understood and what's putting into the context so let's have a look at the actual result cross play",
    "start": "1641559",
    "end": "1649000"
  },
  {
    "text": "let me use my as you can see crossb beta render",
    "start": "1649000",
    "end": "1654320"
  },
  {
    "text": "include context so we're going to see a context and extra resources we pass the environment configs as a fyo no need to",
    "start": "1654320",
    "end": "1662000"
  },
  {
    "text": "uh replicate the same logic uh as for we would have had to do previously we can",
    "start": "1662000",
    "end": "1668600"
  },
  {
    "text": "see for example in this case the composite resource is produced",
    "start": "1668600",
    "end": "1673720"
  },
  {
    "text": "with a spec a field in the spec in the status actually from the environment",
    "start": "1673720",
    "end": "1680399"
  },
  {
    "text": "from uh one of the environment conflicts we defined and we can see it's actually the right uh the right field coming from",
    "start": "1680399",
    "end": "1688799"
  },
  {
    "text": "the context so in case of any issue we could have had just run the same command",
    "start": "1688799",
    "end": "1694640"
  },
  {
    "text": "what's going on what's the what's the actual result in the context why the the context is not updated and that's that's",
    "start": "1694640",
    "end": "1702799"
  },
  {
    "text": "the thing and so let's go back to the slide with that let's go through a few other new",
    "start": "1702799",
    "end": "1710000"
  },
  {
    "text": "features we introduced recently um serice side apply you might have heard about that usually uh",
    "start": "1710000",
    "end": "1717240"
  },
  {
    "text": "controllers in kubernetes are written by uh the control Loop of controllers is",
    "start": "1717240",
    "end": "1722960"
  },
  {
    "text": "usually getting resources mutating them and then updating uh it was the only way",
    "start": "1722960",
    "end": "1728679"
  },
  {
    "text": "that available when crossplane was started but actually this has its problems as you might know it's usually",
    "start": "1728679",
    "end": "1735159"
  },
  {
    "text": "it's complex to uh to handle no it's mainly additive let's say so it",
    "start": "1735159",
    "end": "1740880"
  },
  {
    "text": "can't remove State field from from an object and it's on array it's hard to",
    "start": "1740880",
    "end": "1748080"
  },
  {
    "text": "handle uh existing elements maybe put in by another uh by another controller so",
    "start": "1748080",
    "end": "1755799"
  },
  {
    "text": "the solution to that is server side apply the kubernetes solution to that is server side apply so let API server",
    "start": "1755799",
    "end": "1763080"
  },
  {
    "text": "figure it out for you and we already used server side apply between composite",
    "start": "1763080",
    "end": "1768320"
  },
  {
    "text": "resource and composed resources for compositions using functions and then",
    "start": "1768320",
    "end": "1774320"
  },
  {
    "text": "now we also have that capability between claims so composite resource claims and",
    "start": "1774320",
    "end": "1779559"
  },
  {
    "text": "composite resources and you can check you can enable that with an alpha flag right now with enable SSA claims but",
    "start": "1779559",
    "end": "1787120"
  },
  {
    "text": "it's going to be promoted probably really soon realtime compositions it's usually",
    "start": "1787120",
    "end": "1794080"
  },
  {
    "text": "compositions are um re executed and let's say composed resources are are re",
    "start": "1794080",
    "end": "1801559"
  },
  {
    "text": "updated according to whatever is your composition Logic on a schedule let's say on on an interval or if the",
    "start": "1801559",
    "end": "1809279"
  },
  {
    "text": "composite resource is updated but we weren't watching comp composed resources",
    "start": "1809279",
    "end": "1814320"
  },
  {
    "text": "so the downstream resources that your composition is creating with uh this",
    "start": "1814320",
    "end": "1820399"
  },
  {
    "text": "Alpa feature behind the the enable realtime composition flag you can actually uh tell crossplane to",
    "start": "1820399",
    "end": "1827240"
  },
  {
    "text": "dynamically pin up watches for composition composed resources and given",
    "start": "1827240",
    "end": "1833120"
  },
  {
    "text": "that the API server is going to send events on any change to those composed resources reactively the crosspin is",
    "start": "1833120",
    "end": "1840200"
  },
  {
    "text": "going to reconcile all the uh resources as needed and so let me pass back the ball",
    "start": "1840200",
    "end": "1847080"
  },
  {
    "text": "to to Jared thank [Applause]",
    "start": "1847080",
    "end": "1853650"
  },
  {
    "text": "you all right thanks Philip so as we saw in the you know when we're talking about",
    "start": "1854000",
    "end": "1859120"
  },
  {
    "text": "getting ready for graduation uh We've you know the official formal proposal out there we would not be where we are",
    "start": "1859120",
    "end": "1864480"
  },
  {
    "text": "as a project without this entire Community working together and building this thing right so many many ways to",
    "start": "1864480",
    "end": "1870240"
  },
  {
    "text": "get involved uh probably the one thing to remember here is crossplane doio you can go there and find links for all this",
    "start": "1870240",
    "end": "1875720"
  },
  {
    "text": "stuff we're very very uh active on slack and GitHub and whatnot come chat with us and uh you know start getting involved",
    "start": "1875720",
    "end": "1882120"
  },
  {
    "text": "in in either building things for cross plan or building your own functions we can talk about all of it and then final",
    "start": "1882120",
    "end": "1888320"
  },
  {
    "text": "thing here uh so you know it's always good to know more about the people that are using crossplane so if you want to",
    "start": "1888320",
    "end": "1894159"
  },
  {
    "text": "share your story with the public uh uh you know with the rest of the community about how you're successful using crossplane uh just go to the adopter MD",
    "start": "1894159",
    "end": "1901039"
  },
  {
    "text": "file in the crossplane repo and uh share your story there so we've got three minutes for questions I believe if I am",
    "start": "1901039",
    "end": "1908080"
  },
  {
    "text": "doing my time right there's a mic stand right there does anybody have a question that they want to",
    "start": "1908080",
    "end": "1913720"
  },
  {
    "text": "ask nice you started walking towards that before I even said",
    "start": "1914399",
    "end": "1920279"
  },
  {
    "text": "that about dependencies so uh do can we create dependencies in such a way that",
    "start": "1922039",
    "end": "1930120"
  },
  {
    "text": "uh say before I create a postas database I need to wait for a bpc to be created",
    "start": "1930120",
    "end": "1935279"
  },
  {
    "text": "can we do that with yeah there's there's a couple different ways to do that one of the one of the common ones is the uh",
    "start": "1935279",
    "end": "1942200"
  },
  {
    "text": "like if you need a field from that particular uh resource then you can say uh like in the passing policy for it you",
    "start": "1942200",
    "end": "1948000"
  },
  {
    "text": "can say it's required field so until I have that field don't go any further so that's one way to do it depending on the",
    "start": "1948000",
    "end": "1953639"
  },
  {
    "text": "use case and then uh like some of the functions phip was showing off like function sequencer you can in your",
    "start": "1953639",
    "end": "1959120"
  },
  {
    "text": "function pipeline say this resource has got to get done before you even try to start this next resource so there's a",
    "start": "1959120",
    "end": "1964159"
  },
  {
    "text": "couple different ways to do something like that now uh another minute more questions",
    "start": "1964159",
    "end": "1973278"
  },
  {
    "text": "any do you have a question I'm maybe repeat it for you out yeah I",
    "start": "1974639",
    "end": "1982000"
  },
  {
    "text": "to yeah so the question is about like bootstrapping crossplane yeah like like getting a cluster up and running uh you",
    "start": "1996360",
    "end": "2002480"
  },
  {
    "text": "know having all the account information like what do you use to do that first right do you want to take that FIP or you it's yeah yeah there is no actual um",
    "start": "2002480",
    "end": "2012720"
  },
  {
    "text": "if I got the the question complet correctly it's it's left to the user to to handle",
    "start": "2012720",
    "end": "2018919"
  },
  {
    "text": "that obviously crosspin runs in a kubernetes cluster so you need somewhere to be running the crossplane controller",
    "start": "2018919",
    "end": "2025679"
  },
  {
    "text": "and so yeah the answer is no but it's a similar issue you have with over similar",
    "start": "2025679",
    "end": "2031760"
  },
  {
    "text": "tools that needs to spin up a kind cluster to run some stuff on that and then you have to you can create a",
    "start": "2031760",
    "end": "2037360"
  },
  {
    "text": "cluster yep yeah I've seen people do that before is like bootstrap a cluster with kind",
    "start": "2037360",
    "end": "2043200"
  },
  {
    "text": "and then there there are manag services for crossplane as well if you don't want to spin up anything so there's options for that",
    "start": "2043200",
    "end": "2048760"
  },
  {
    "text": "too uh 50 seconds anything anybody else you have uh yeah thanks for the talk by",
    "start": "2048760",
    "end": "2054720"
  },
  {
    "text": "the way and uh a quick question you mentioned that like there's an Crossing controller for every AWS resource um so",
    "start": "2054720",
    "end": "2063919"
  },
  {
    "text": "if I use the AWS provider do I have to install like 3 the hundreds of controllers or is it just on demand yeah",
    "start": "2063919",
    "end": "2072200"
  },
  {
    "text": "really good question because uh maybe a year and a half ago or so you did have to install the whole thing and have 900",
    "start": "2072200",
    "end": "2078358"
  },
  {
    "text": "controllers running uh which has a number of uh issues one of them being that the ket's API scaling thresholds",
    "start": "2078359",
    "end": "2085839"
  },
  {
    "text": "did not handle crds uh scaling very well so we essentially like tank the entire",
    "start": "2085839",
    "end": "2091760"
  },
  {
    "text": "control plane when you did that so what we did is uh separate them out into like families or groups of controllers so you",
    "start": "2091760",
    "end": "2097200"
  },
  {
    "text": "can install the S3 controller the ec2 controller the RDS controller and have those specifically installed if you're",
    "start": "2097200",
    "end": "2103320"
  },
  {
    "text": "going to use those services and not all shoot not all the other ones if you don't want to use",
    "start": "2103320",
    "end": "2108440"
  },
  {
    "text": "those cool all right we are officially out of time so thank you thank you so much and I'll probably just go hang out the hallway for more",
    "start": "2108440",
    "end": "2114800"
  },
  {
    "text": "questions",
    "start": "2114800",
    "end": "2117800"
  }
]