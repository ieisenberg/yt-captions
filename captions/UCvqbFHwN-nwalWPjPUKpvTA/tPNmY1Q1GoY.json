[
  {
    "text": "testing welcome everybody glad all of you are joining us here um Welcome to our talk on building",
    "start": "360",
    "end": "7720"
  },
  {
    "text": "a platform engineering fabric with the kubernetes API at Autodesk so over the past couple years",
    "start": "7720",
    "end": "14040"
  },
  {
    "text": "we've been on a journey to transition our developer platform away from a set of organically grown tightly coupled",
    "start": "14040",
    "end": "19800"
  },
  {
    "text": "tools with extensive configuration and libraries into declarative API first platform with kubernetes API at its",
    "start": "19800",
    "end": "26920"
  },
  {
    "text": "core this is an area with lots of lots of Interest across the industry so our hope here is to convey some of the",
    "start": "26920",
    "end": "32640"
  },
  {
    "text": "challenges some of the wins and our general experiences during this journey in order to help others be successful at",
    "start": "32640",
    "end": "38360"
  },
  {
    "text": "a similar Journey before getting in our talk let us briefly introduce ourselves U Jesse",
    "start": "38360",
    "end": "44320"
  },
  {
    "text": "would you like to sure yeah no problem hey everybody you got you found us here we're at the end of the",
    "start": "44320",
    "end": "50559"
  },
  {
    "text": "hallway I'm Jesse I uh I'm a senior principal software engineer here at Autodesk um and uh I focus on the",
    "start": "50559",
    "end": "58120"
  },
  {
    "text": "juncture of our our platform engineering uh and software supply chain security",
    "start": "58120",
    "end": "63280"
  },
  {
    "text": "initiatives and when I'm not in front of a computer I uh I like to sale and Backcountry ski and pretty much do",
    "start": "63280",
    "end": "69520"
  },
  {
    "text": "anything outdoors thanks Jesse um so I'm Greg",
    "start": "69520",
    "end": "75680"
  },
  {
    "text": "Haynes I'm a software architect and I'm also the open source lead at Autodesk um",
    "start": "75680",
    "end": "80840"
  },
  {
    "text": "I focus primarily on internal developer platform software and my background",
    "start": "80840",
    "end": "86000"
  },
  {
    "text": "before that is has been primarily in uh open source cloud platform development",
    "start": "86000",
    "end": "91360"
  },
  {
    "text": "so spent about 10 years doing that before coming to Autodesk and now I'm excited to get back to",
    "start": "91360",
    "end": "98000"
  },
  {
    "text": "it so today we're going to start off with an overview of where our developer platform was at the beginning of this",
    "start": "98159",
    "end": "104240"
  },
  {
    "text": "journey and how we got there next I'll talk about our Northstar or what",
    "start": "104240",
    "end": "109320"
  },
  {
    "text": "motivations led us to this major effort and then we'll cover some of the Alternatives considered as part of",
    "start": "109320",
    "end": "115479"
  },
  {
    "text": "planning out how we'd accomplish this afterward we'll cover a couple specific technical challenges we",
    "start": "115479",
    "end": "121600"
  },
  {
    "text": "encountered and how we solve them and to wrap up we'll hopefully impart some big picture wisdom with you and some lessons",
    "start": "121600",
    "end": "129039"
  },
  {
    "text": "learned now let's begin the story of our developer platform so this is a very high level View and from this angle I",
    "start": "129399",
    "end": "135599"
  },
  {
    "text": "expect it should be pretty familiar to all of you this is an early rudimentary",
    "start": "135599",
    "end": "140840"
  },
  {
    "text": "version of our developer platform at the time is primarily focused on Simple app delivery at the bottom we have our user",
    "start": "140840",
    "end": "147239"
  },
  {
    "text": "who primarily interacts with two Services GitHub for Source control and Jenkins for cicd the user supplies some application",
    "start": "147239",
    "end": "154519"
  },
  {
    "text": "configuration via git which is then executed by Jenkins and eventually result in artifact Generations such as",
    "start": "154519",
    "end": "160360"
  },
  {
    "text": "Docker images and simple cicd processes around them over the past 10 years this seems",
    "start": "160360",
    "end": "166000"
  },
  {
    "text": "to be sort of the industry standard at starting point for application delivery and we we were no different at the",
    "start": "166000",
    "end": "172280"
  },
  {
    "text": "time so over time our CD needs diverge from our CI needs and just as many",
    "start": "172280",
    "end": "177680"
  },
  {
    "text": "others have experienced we needed some comp Lex functionality to implement promotion workflows autoscaling",
    "start": "177680",
    "end": "183360"
  },
  {
    "text": "deployment strategies to solve this we adopted Spiner to manage our CD processes kept Jenkins owning CI",
    "start": "183360",
    "end": "190440"
  },
  {
    "text": "regardless of the specific tool choice We Now ended up with another user action the separate CD tool Spiner in this case",
    "start": "190440",
    "end": "197400"
  },
  {
    "text": "which now has an even greater depth of functionality than our jenin CI",
    "start": "197400",
    "end": "202720"
  },
  {
    "text": "infrastructure then shortly afterwards the scope of our developer platform grew Beyond application delivery we needed to",
    "start": "203239",
    "end": "209519"
  },
  {
    "text": "provide compliant infrastructure management Cloud accounts and networking generally and generally wanted to own",
    "start": "209519",
    "end": "215040"
  },
  {
    "text": "the increasing functionality that our engineering teams needed in order to ship Reliable Software quickly now we have this Suite of",
    "start": "215040",
    "end": "221599"
  },
  {
    "text": "In-House tools and libraries with which integrate with Spiner and our other CD tools and that our users also need to",
    "start": "221599",
    "end": "228280"
  },
  {
    "text": "interact with the result is our users and our cicd platform now have this inby in integration and also this in byin",
    "start": "228280",
    "end": "235239"
  },
  {
    "text": "interaction Matrix so users are responsible for setting up accounts access and providing application info",
    "start": "235239",
    "end": "241640"
  },
  {
    "text": "via the suite of In-House tools which is sort of at the bottom right there and then copying that information to",
    "start": "241640",
    "end": "246840"
  },
  {
    "text": "configure their CI and CD pipelines to correctly integrate their application with these tools so think copying State",
    "start": "246840",
    "end": "253040"
  },
  {
    "text": "into GitHub and then Jenkins and Spiner consuming that state essentially what ends up happening",
    "start": "253040",
    "end": "259720"
  },
  {
    "text": "is we've evolved our platform to enable to scale our development abilities but doing so it really feels like we've",
    "start": "259720",
    "end": "266080"
  },
  {
    "text": "pushed a complexity and integration cost onto our users and they they' let us know it we're not happy with it they're",
    "start": "266080",
    "end": "272440"
  },
  {
    "text": "not happy with it so we set out to solve that and so why while there are some",
    "start": "272440",
    "end": "278520"
  },
  {
    "text": "specific ways we could have solved just that problem if you also step back a bit there were some larger problems that we also started to",
    "start": "278520",
    "end": "284840"
  },
  {
    "text": "realize obviously the high number of different user interaction points required for common workflows was that",
    "start": "284840",
    "end": "289919"
  },
  {
    "text": "pain point I was mentioning but compounding this is we also have our own application configuration interface",
    "start": "289919",
    "end": "294960"
  },
  {
    "text": "which is this flat file in git or set actually it's a set of flat files in git so so this is yet another interface for",
    "start": "294960",
    "end": "301039"
  },
  {
    "text": "users to become familiar with and maybe this is some foreshadowing that there's an opportunity to consolidate",
    "start": "301039",
    "end": "307120"
  },
  {
    "text": "this another separate issue is integration cost so in these cases where we try to improve our user experience by",
    "start": "307120",
    "end": "312880"
  },
  {
    "text": "creating integrated workflows across tools we forever pay a tax whenever any of these tools",
    "start": "312880",
    "end": "318039"
  },
  {
    "text": "change a great example is the developer portal which ends up being the service that integrates with all other fa user",
    "start": "318039",
    "end": "323840"
  },
  {
    "text": "facing services in the platform imagine it as a single dashboard for discovering your application information how would",
    "start": "323840",
    "end": "330360"
  },
  {
    "text": "you implement that this in the system are are you going to go and write Integrations with every other service all of our in-house tools even if we",
    "start": "330360",
    "end": "337199"
  },
  {
    "text": "were able to do that what would the maintenance cost be for that over the long term would it probably massively",
    "start": "337199",
    "end": "342520"
  },
  {
    "text": "hit our velocity so finally Mo and honestly is",
    "start": "342520",
    "end": "348160"
  },
  {
    "text": "probably most important is that there's sort of a sense that we might need to rethink what our Dev platform is and the",
    "start": "348160",
    "end": "353360"
  },
  {
    "text": "product that we're making and what I mean by that is are we giving our users tools so that they can own triggering",
    "start": "353360",
    "end": "358680"
  },
  {
    "text": "their own deployments or are we actually giving them interfaces so they can describe to us what their deployment should look like and we own",
    "start": "358680",
    "end": "366080"
  },
  {
    "text": "it an example why this might matter is what happens when you want to take greater ownership of regionalization of",
    "start": "366080",
    "end": "372199"
  },
  {
    "text": "your services you know if they're responsible for tricking deployment is a",
    "start": "372199",
    "end": "377440"
  },
  {
    "text": "new region rollout or a modification to what regions you're supplying a fire drill for every one of your engineering",
    "start": "377440",
    "end": "383400"
  },
  {
    "text": "teams if not like how how else can you scale that is I guess the question",
    "start": "383400",
    "end": "390639"
  },
  {
    "text": "so with that I'll hand it over to Jesse to talk about our Northstar thanks",
    "start": "390639",
    "end": "396360"
  },
  {
    "text": "Craig so so why would we want to rep platform on the cube API I mean we already have systems that are building",
    "start": "396360",
    "end": "402520"
  },
  {
    "text": "our infrastructure and delivering our apps in a self-service manner abiding our compliance requirements right could",
    "start": "402520",
    "end": "409120"
  },
  {
    "text": "we just optimize our developer workflows on our existing tooling and so this is where we need to pause and look out into the future a",
    "start": "409120",
    "end": "415319"
  },
  {
    "text": "little bit and let's gaze at that Northstar um let's imagine a magical",
    "start": "415319",
    "end": "421240"
  },
  {
    "text": "place where we have things like engineering workflows that are actually enjoyable developer experiences and",
    "start": "421240",
    "end": "426759"
  },
  {
    "text": "separation of concerns through an ownership model that actually includes our security and compliance teams",
    "start": "426759",
    "end": "432479"
  },
  {
    "text": "verifiable cryptographic signatures on packages for ple predeployment and isolation through well- understood arbac",
    "start": "432479",
    "end": "439720"
  },
  {
    "text": "and leas privilege account access reduction of duplication through code reuse and compositions that are",
    "start": "439720",
    "end": "446400"
  },
  {
    "text": "obvious increase collaboration and easy discoverability and low overhead for",
    "start": "446400",
    "end": "453039"
  },
  {
    "text": "contribution through well patterned extension points and finally consistent interfaces for extension and",
    "start": "453039",
    "end": "461000"
  },
  {
    "text": "interoperability with that vision in mind let's take a look at what we can get from The KES API and the operator",
    "start": "463000",
    "end": "468120"
  },
  {
    "text": "pattern capabilities can now be represented through their declarative interfaces as operators which means that",
    "start": "468120",
    "end": "473440"
  },
  {
    "text": "we can now have continuous reconciliation on any of the resources that they manage we also have patterns",
    "start": "473440",
    "end": "478879"
  },
  {
    "text": "for integrating external off cluster resources through the help of tooling like crossplane and this enables a clear",
    "start": "478879",
    "end": "485919"
  },
  {
    "text": "separation of concerns between our core platform team and the teams that are building on top of the",
    "start": "485919",
    "end": "492240"
  },
  {
    "text": "platform it also means that these platform capabilities can develop airtight airtight abstractions without",
    "start": "492240",
    "end": "497599"
  },
  {
    "text": "leaking the details of their backing services and of that of course will",
    "start": "497599",
    "end": "502680"
  },
  {
    "text": "enable our inner source and our teams will be unlocked uh and decoupled from one another able to control their own",
    "start": "502680",
    "end": "508560"
  },
  {
    "text": "release cycles for their capabilities the cube API and the krm",
    "start": "508560",
    "end": "514399"
  },
  {
    "text": "come with strong API semantics so we get built-in validation versioning and conversion mechanics we can also make",
    "start": "514399",
    "end": "521159"
  },
  {
    "text": "use of arbac and namespacing to to restrict users to their respective domains and we can make use of admission",
    "start": "521159",
    "end": "527600"
  },
  {
    "text": "by Hooks to further limit what can take what actions that can be taken on the cluster ensuring our security and",
    "start": "527600",
    "end": "532959"
  },
  {
    "text": "compliance and finally if we're able to funnel all of these resources through the Central Central management plane we",
    "start": "532959",
    "end": "539440"
  },
  {
    "text": "essentially get a configuration management database or Inventory management database for",
    "start": "539440",
    "end": "545040"
  },
  {
    "text": "free and it does sound magical right in theory so what does this look like here",
    "start": "545839",
    "end": "551480"
  },
  {
    "text": "you'll see we have this top level cap capability for software life cycle management it's the entry point it could",
    "start": "551480",
    "end": "556600"
  },
  {
    "text": "be sper or any other tooling that can manage the declarative source of Truth inside the cube",
    "start": "556600",
    "end": "562240"
  },
  {
    "text": "API kubernetes reports on that state and allows for policy to be defined through the use of admission controllers like",
    "start": "562240",
    "end": "567800"
  },
  {
    "text": "gatekeeper and resource managers are implemented as operators and can wrap off cluster resources like those",
    "start": "567800",
    "end": "573320"
  },
  {
    "text": "available from common Cloud providers however even though the underlying providers may be very diverse",
    "start": "573320",
    "end": "578800"
  },
  {
    "text": "these interfaces are now very familiar additionally we have a common bus by which these capabilities can be",
    "start": "578800",
    "end": "584640"
  },
  {
    "text": "discovered and consumed for some of you this may start to sound familiar building wrappers for services in a",
    "start": "584640",
    "end": "590959"
  },
  {
    "text": "common well understood integration framework it sure sounds a lot like service or oriented architectures to me",
    "start": "590959",
    "end": "599959"
  },
  {
    "text": "and like the transition TOA from point solution Integrations that happened in the early 2000s we are asking our folks",
    "start": "599959",
    "end": "605399"
  },
  {
    "text": "to organize around a common pattern for integration and to decouple their services effectively we're moving away",
    "start": "605399",
    "end": "610720"
  },
  {
    "text": "from something like the spaghetti on the left to something along the lines of this Hub and spoke bottle on the right",
    "start": "610720",
    "end": "616399"
  },
  {
    "text": "and in this world we can imagine the CBE API fitting in the Middle where amongst many other things it can take the place",
    "start": "616399",
    "end": "622480"
  },
  {
    "text": "of a traditional Enterprise service bus brokering communication between these services",
    "start": "622480",
    "end": "628839"
  },
  {
    "text": "but if you've ever used esbs in in Enterprise you know how hard it could be to actually make them successful they",
    "start": "629480",
    "end": "634959"
  },
  {
    "text": "were really hard to fund at scale through an entire organizations especially multinationals with continuous m&a and if you're not careful",
    "start": "634959",
    "end": "642399"
  },
  {
    "text": "you can end up in a situation where the ESB is actually a limiting factor for how quickly your teams can release and",
    "start": "642399",
    "end": "648440"
  },
  {
    "text": "this can be because of numerous issues from scaling to mandatory Library upgrades to coordinated maintenance",
    "start": "648440",
    "end": "654279"
  },
  {
    "text": "windows and so on and so forth and these these cross organizational synchronization points are hard to manage and veryy in a nightmare to",
    "start": "654279",
    "end": "660800"
  },
  {
    "text": "govern and pretty quickly with all the hacks and workarounds you end up with that spaghetti",
    "start": "660800",
    "end": "667480"
  },
  {
    "text": "again however unlike the SAS of the early 21st century the coupe API is lightweight it doesn't require the",
    "start": "667600",
    "end": "674279"
  },
  {
    "text": "services themselves to run on a data plane the Integrations can be maintained by independent teams as long as they",
    "start": "674279",
    "end": "679720"
  },
  {
    "text": "have the skills to manage their own operators and as we said earlier they're not locked into to the coordinated",
    "start": "679720",
    "end": "685519"
  },
  {
    "text": "release Cycles or dependency upgrades",
    "start": "685519",
    "end": "690279"
  },
  {
    "text": "so if everyone is building and offering and consuming these capabilities inde dependent of one another how do we keep control of this thing well that's where",
    "start": "691079",
    "end": "697839"
  },
  {
    "text": "good old governance comes in platform teams just like any other are limited by their people power in order to make sure",
    "start": "697839",
    "end": "704440"
  },
  {
    "text": "that what is offered is maintainable and trustable by our users we need to limit the capabilities that they take on",
    "start": "704440",
    "end": "710920"
  },
  {
    "text": "however that doesn't mean that we can't allow for inner sourcing or even completely community-driven capabilities",
    "start": "710920",
    "end": "716000"
  },
  {
    "text": "to be offered as a part of the ecosystem capability owners ERS can you know outside of the core platform team",
    "start": "716000",
    "end": "722360"
  },
  {
    "text": "they'll need to abide certain guidelines to have their capabilities made available as a part of this this platform",
    "start": "722360",
    "end": "727839"
  },
  {
    "text": "offering and additionally there may need to be some amount of security or compliance riger applied to these capabilities in certain High trust",
    "start": "727839",
    "end": "735519"
  },
  {
    "text": "environments so there needs to be some some sort of graduation process to get these capabilities reviewed and into",
    "start": "735519",
    "end": "741000"
  },
  {
    "text": "these inner spheres of that platform form offering and explicit governance should guide this furthermore if we",
    "start": "741000",
    "end": "747720"
  },
  {
    "text": "think about the life of a capability on the platform it takes on the curve of a normal product right capabilities come",
    "start": "747720",
    "end": "755480"
  },
  {
    "text": "and hopefully they see adoption and if they're popular they will grow in adoption until the capabilities are mature and then eventually age out of",
    "start": "755480",
    "end": "762040"
  },
  {
    "text": "use therefore we'll likely need a way of calling capabilities out of that stable maintained inter core over time and",
    "start": "762040",
    "end": "767399"
  },
  {
    "text": "having explicit governance here will play in droves later some ultimately how do we get",
    "start": "767399",
    "end": "773920"
  },
  {
    "text": "these capabilities into the hands of our end users well that's where our work starts to bump up with the other initiatives we have at Autodesk just",
    "start": "773920",
    "end": "780440"
  },
  {
    "text": "like many of our peers Autodesk is working to create an internal developer platform for all of our product",
    "start": "780440",
    "end": "785480"
  },
  {
    "text": "teams and now that we have this platform fabric we can enable that IDP tooling to do things like discover all resources we",
    "start": "785480",
    "end": "792480"
  },
  {
    "text": "can enable the creation of blueprints or service templates simply by wrapping our capability crds and the real Force",
    "start": "792480",
    "end": "799800"
  },
  {
    "text": "magnifier here is that now our capabilities can be used in conjunction with the numerous other Kates native tooling offered by the cncf many of",
    "start": "799800",
    "end": "806279"
  },
  {
    "text": "these names you'll recognize in in the the possibilities are wide",
    "start": "806279",
    "end": "812680"
  },
  {
    "text": "open so this vision is great but how do we get our platform teams wrapped up ramped up how can they",
    "start": "812720",
    "end": "819880"
  },
  {
    "text": "gain the skills to work with the Kate's API and the muscles to build operators without stopping everything and",
    "start": "819880",
    "end": "827240"
  },
  {
    "text": "retooling well when we took a look at our existing app delivery platform we basically had two choices the first is a",
    "start": "827240",
    "end": "833399"
  },
  {
    "text": "top- down approach where we describe our full application delivery Journey with a big macro top level",
    "start": "833399",
    "end": "839639"
  },
  {
    "text": "crd which could then be decomposed into multiple sub resources each with their own operators however if we did that we",
    "start": "839639",
    "end": "846480"
  },
  {
    "text": "would be replacing our existing app delivery pipelines in their entirety and we would have to deal with the route with things like routing and Progressive",
    "start": "846480",
    "end": "852880"
  },
  {
    "text": "deployments and stateful resources right out of the gate and these things are hard It's Tricky stuff",
    "start": "852880",
    "end": "859800"
  },
  {
    "text": "to cut your teeth on instead we chose to start bottom up and it just so happened that our existing offering already had",
    "start": "859800",
    "end": "866240"
  },
  {
    "text": "something along the lines of managed resources some that we called Simple infra where we had capabilities that",
    "start": "866240",
    "end": "873000"
  },
  {
    "text": "were being consumed through well- understood completely encapsulated declarative interfaces but while we could hopefully",
    "start": "873000",
    "end": "879759"
  },
  {
    "text": "get some early wins from this the work wouldn't prove out the full solution and we knew that about all use cases would",
    "start": "879759",
    "end": "885800"
  },
  {
    "text": "not be represented there however we can manage that uncertainty and make room for it later as we gain",
    "start": "885800",
    "end": "893279"
  },
  {
    "text": "Clarity so we start with these smaller atomic sub resources allow our Engineers to build out out their tooling awareness",
    "start": "893800",
    "end": "900240"
  },
  {
    "text": "INF fluency they can get a handle on what the sdlc workflows look like things like repo structure local development",
    "start": "900240",
    "end": "907519"
  },
  {
    "text": "environments cicd Automation and testing can be",
    "start": "907519",
    "end": "912600"
  },
  {
    "text": "patterned additionally we can lean on tooling like crossplane to defer the cost of having the team learn the full",
    "start": "913399",
    "end": "918959"
  },
  {
    "text": "interworkings of the operator pattern crossplane can allow us to extend the coup API with custom types without",
    "start": "918959",
    "end": "924240"
  },
  {
    "text": "having to build our own operators and using crossplains compositions and xrds we can offer the same simple",
    "start": "924240",
    "end": "929720"
  },
  {
    "text": "infrastructure resources to our users while building insane defaults for security and compliance",
    "start": "929720",
    "end": "935120"
  },
  {
    "text": "requirements there is a trade-off to how much power we have though but because crossplane registers native kubernetes",
    "start": "935120",
    "end": "940759"
  },
  {
    "text": "types we can swap out the Imp implementation of the reconciliation of those types later with our own custom",
    "start": "940759",
    "end": "948440"
  },
  {
    "text": "controllers so what happens when crossplane compositions are not powerful enough how do we handle something like",
    "start": "949480",
    "end": "955519"
  },
  {
    "text": "Dynamic compositions AKA those that have optional or very in number of sub resources at reconcile time crossplane",
    "start": "955519",
    "end": "963079"
  },
  {
    "text": "was meant to be a spot checkable declarative interface to resources it intentionally does not allow for complex",
    "start": "963079",
    "end": "970040"
  },
  {
    "text": "programming semantics like looping or Boolean logic in its compositions so then how do we create n",
    "start": "970040",
    "end": "977000"
  },
  {
    "text": "number of listeners for a single SNS topic like in the example here we can't possibly hardcode them all into this",
    "start": "977000",
    "end": "983319"
  },
  {
    "text": "composition statically so what if we want end users to be able to specify you know some",
    "start": "983319",
    "end": "989920"
  },
  {
    "text": "number of email subscriptions how do we do that do we go straight into building our own",
    "start": "989920",
    "end": "997079"
  },
  {
    "text": "operators as it turns out cbella can help here we can use it as a bridge",
    "start": "998440",
    "end": "1003600"
  },
  {
    "text": "between the Simplicity of crossplane and the complexity of writing our own controllers it does mean that we",
    "start": "1003600",
    "end": "1008880"
  },
  {
    "text": "introduce the Q language to our platform capability uh developers but Q is a",
    "start": "1008880",
    "end": "1013959"
  },
  {
    "text": "special special purpose configuration language and is really the only reasonable option Beyond pre-process of",
    "start": "1013959",
    "end": "1019480"
  },
  {
    "text": "manifests like you would see with customize or Helm using cbella we can wrap crossbank",
    "start": "1019480",
    "end": "1025678"
  },
  {
    "text": "compositions as components in either application types or traits depending on how we want them to be consumed and then",
    "start": "1025679",
    "end": "1032038"
  },
  {
    "text": "in our Q templates we can do things like loopover resources or use booing logic to insert them based on parameters you",
    "start": "1032039",
    "end": "1038520"
  },
  {
    "text": "can see in this example how we fan out our subscriptions with a for Loop if any of you know Victor's devops",
    "start": "1038520",
    "end": "1045600"
  },
  {
    "text": "toolkit series you may recognize this pattern he did a video about this uh use case a little while back some a",
    "start": "1045600",
    "end": "1051440"
  },
  {
    "text": "similar use case but this is and this is very powerful but certainly harder to reason about when things go sideways",
    "start": "1051440",
    "end": "1059039"
  },
  {
    "text": "right the lack of a the spot checkable Clarity of intent is a tradeoff for power here and there's still some",
    "start": "1059039",
    "end": "1065480"
  },
  {
    "text": "discussion that we have internally about when it makes sense to make this tradeoff but this is just a glimpse into",
    "start": "1065480",
    "end": "1071640"
  },
  {
    "text": "our platform Vision now I'm going to pass off to Greg he's going to talk about more where we're at with implementing our solution go ah Greg",
    "start": "1071640",
    "end": "1080840"
  },
  {
    "text": "thanks Jesse so as Jesse said I like to talk",
    "start": "1081679",
    "end": "1087120"
  },
  {
    "text": "about some of the specific technical challenges we've encountered on our journey um also some of the solutions we've devised to them Jesse did an",
    "start": "1087120",
    "end": "1094480"
  },
  {
    "text": "excellent job showing our long-term vision and sort of this overarching picture of where we hope to be but along",
    "start": "1094480",
    "end": "1100440"
  },
  {
    "text": "the way there's actually some very simple lessons we've learned about even the most rudimentary use cases which I'd",
    "start": "1100440",
    "end": "1106320"
  },
  {
    "text": "like to share to that effect I'm going to focus on a few problems that were not only important to our success but I also",
    "start": "1106320",
    "end": "1112039"
  },
  {
    "text": "believe are inherent architecture problems with use of kubernetes API in this problem domain I'll be mentioning",
    "start": "1112039",
    "end": "1117880"
  },
  {
    "text": "some crossplane specific terms because that's the technology we're using but really these problems are able to be",
    "start": "1117880",
    "end": "1124159"
  },
  {
    "text": "generalized and one pattern I want to highlight is this is how there's a unique combination here in terms of",
    "start": "1124159",
    "end": "1130039"
  },
  {
    "text": "mature technology but being applied to an emerging use case and I see this over",
    "start": "1130039",
    "end": "1135200"
  },
  {
    "text": "and over where kubernetes apis and controllers have a lot of established best practices although documentation",
    "start": "1135200",
    "end": "1141120"
  },
  {
    "text": "can be uh varying and but really this the application of those mature use",
    "start": "1141120",
    "end": "1147640"
  },
  {
    "text": "cases and practices to this problem domain open up new problems and you have to fall back on what were those original",
    "start": "1147640",
    "end": "1153919"
  },
  {
    "text": "best practices and then try to pull them forward into this problem",
    "start": "1153919",
    "end": "1158880"
  },
  {
    "text": "domain so the first challenge we encountered was Jesse mentioned this a bit how can we own our API while also",
    "start": "1159480",
    "end": "1166480"
  },
  {
    "text": "leveraging existing implementations an important property of our API should be that we can modify the implementation",
    "start": "1166480",
    "end": "1172320"
  },
  {
    "text": "or as Jessie mentioned swap it out later on maybe we want to start with something simple and swap to something complex",
    "start": "1172320",
    "end": "1177400"
  },
  {
    "text": "later on or something in house so we can be more expressive so on this in this example on",
    "start": "1177400",
    "end": "1183520"
  },
  {
    "text": "the left I have a resource definition for an SNS topic which is what we're calling simple infer and sort of SNS",
    "start": "1183520",
    "end": "1189760"
  },
  {
    "text": "topics and subscriptions end up being our hello world for simple INF Management on this control",
    "start": "1189760",
    "end": "1194919"
  },
  {
    "text": "plane on the left it's how I this is what I would expect the resource to look like if if I was to sort of ignore",
    "start": "1194919",
    "end": "1200480"
  },
  {
    "text": "implementation and focus purely on API design if as I made the crd it allows",
    "start": "1200480",
    "end": "1205760"
  },
  {
    "text": "users to set a topic name and information for a cloud account to create the resource within then on the right I have an",
    "start": "1205760",
    "end": "1212440"
  },
  {
    "text": "implementation of this using crossplains ads provider this is an existing off-the-shelf resource I can use to make",
    "start": "1212440",
    "end": "1218679"
  },
  {
    "text": "the topic and it actually works today so I would expect the API in the left to end up creating the thing on the right",
    "start": "1218679",
    "end": "1225919"
  },
  {
    "text": "essentially so let's talk through what the two different what the differences are between the two so we can build this map between them to start at the most",
    "start": "1225919",
    "end": "1233440"
  },
  {
    "text": "basic level we have a simple problem the the API version at the top this is quite literally a string for the purpose of",
    "start": "1233440",
    "end": "1240000"
  },
  {
    "text": "identifying the implementation and so while it would be silly to create a wrapper for solving this use case it's a",
    "start": "1240000",
    "end": "1246919"
  },
  {
    "text": "really good example of how um exposing this implementation directly to our users immediately binds us into lock",
    "start": "1246919",
    "end": "1253679"
  },
  {
    "text": "locking in the implementation not to mention migrating across resource types is harder than",
    "start": "1253679",
    "end": "1259799"
  },
  {
    "text": "recross versions so try to try to imagine what that would have to look like so just as the normal software",
    "start": "1259799",
    "end": "1266679"
  },
  {
    "text": "development the idea here is we don't want to leak implementation details beyond our API unless we have",
    "start": "1266679",
    "end": "1272679"
  },
  {
    "text": "to second difference here though is also this simple field for specifying the ID",
    "start": "1272679",
    "end": "1278120"
  },
  {
    "text": "of the cloud account in which to create this topic in this case we can make some assumptions because our users and our",
    "start": "1278120",
    "end": "1284279"
  },
  {
    "text": "platform understand the constraints on this ID essentially we want to ask our users just what is the ID for your cloud",
    "start": "1284279",
    "end": "1289799"
  },
  {
    "text": "account but on the right we have the implementation which is part of crossplaying and can make less",
    "start": "1289799",
    "end": "1295600"
  },
  {
    "text": "assumptions the ID needs to be a a field referencing what's called a provider config which is an actual crossplane",
    "start": "1295600",
    "end": "1302279"
  },
  {
    "text": "resource our users a don't shouldn't don't need to know what a provider config is and they B don't necessarily",
    "start": "1302279",
    "end": "1307679"
  },
  {
    "text": "need to know the specific name of the provider config they just need to know their account ID and so if we went down",
    "start": "1307679",
    "end": "1313200"
  },
  {
    "text": "this route we'd end up leaking that implementation details what are naming conventions what resources we're using under the hood",
    "start": "1313200",
    "end": "1318850"
  },
  {
    "text": "[Applause] fortunately crossplane provides us the tooling for exactly this use case so in",
    "start": "1318850",
    "end": "1325840"
  },
  {
    "text": "addition to the resource controllers themselves which is that implementation I mentioned for the SNS topic they also",
    "start": "1325840",
    "end": "1330919"
  },
  {
    "text": "provide us with this framework for building these indirection layers and of these resources so I don't need to go",
    "start": "1330919",
    "end": "1336480"
  },
  {
    "text": "into too much detail about how it works because frankly they've got documentation on how to do that and that would be a better use of your time but",
    "start": "1336480",
    "end": "1343960"
  },
  {
    "text": "the idea here is we can by using these tools we can still we can end up owning our AP",
    "start": "1343960",
    "end": "1349240"
  },
  {
    "text": "and also um not have to maintain our own ever growing set of custom",
    "start": "1349240",
    "end": "1354880"
  },
  {
    "text": "controllers the high level idea is that you set you specify a set of mapping rules between that imple that API on the",
    "start": "1354880",
    "end": "1360799"
  },
  {
    "text": "left and the implementation on the right via a crd or via a resource and if you",
    "start": "1360799",
    "end": "1366880"
  },
  {
    "text": "also notice on the right I'm sorry that that's yeah so that the high of idea is you're mapping information from API to",
    "start": "1366880",
    "end": "1374200"
  },
  {
    "text": "implementation but then also one of the more powerful tools we found is the this extra field on the right which is region",
    "start": "1374200",
    "end": "1381640"
  },
  {
    "text": "where we're specifying where where the resource goes but if you notice it's not on the left at all and so this is is",
    "start": "1381640",
    "end": "1388240"
  },
  {
    "text": "ends up being defaulting which is a really powerful feature because if you have to imagine you know your users are making an RDS instance and you don't",
    "start": "1388240",
    "end": "1394159"
  },
  {
    "text": "want to expose all their fields so that they can configure them this defaulting allows us to specify it for them and and",
    "start": "1394159",
    "end": "1400520"
  },
  {
    "text": "basically control What fields they have access to so now I'd like to transition into",
    "start": "1400520",
    "end": "1407840"
  },
  {
    "text": "how we handle multitenancy in mapping that to our Cloud accounts so I mentioned before that we",
    "start": "1407840",
    "end": "1413840"
  },
  {
    "text": "specify this field on our resources to tell um crossplay which cloud account",
    "start": "1413840",
    "end": "1419200"
  },
  {
    "text": "they're placed in then if we extrapolated that we end up with this idealized design where essentially looks",
    "start": "1419200",
    "end": "1425600"
  },
  {
    "text": "like this tenants can make resources in a namespace resources in a namespace point to a corresponding provider config",
    "start": "1425600",
    "end": "1432600"
  },
  {
    "text": "which is just a fancy way to say a cloud account configuration and these provider configs each map to One Cloud account",
    "start": "1432600",
    "end": "1439679"
  },
  {
    "text": "account however the reality is far less ideal and that's often the case with any large organization especially one with",
    "start": "1439679",
    "end": "1446000"
  },
  {
    "text": "Legacy software we have all manner of cloud account strategies frankly and they range from from sets of teams that",
    "start": "1446000",
    "end": "1453159"
  },
  {
    "text": "are fairly large we all share a single account which is this a plus b on the on the left to small teams who essentially",
    "start": "1453159",
    "end": "1460039"
  },
  {
    "text": "make an account per application almost and that would be the C on the",
    "start": "1460039",
    "end": "1465640"
  },
  {
    "text": "right so more but even more so than that there's also a subal but an extremely",
    "start": "1466039",
    "end": "1472159"
  },
  {
    "text": "important challenge to recognize that we may have sort of competing design goals at the different layers in this in this",
    "start": "1472159",
    "end": "1477399"
  },
  {
    "text": "diagram So within our kubernetes Dev platform we actually have our own opinions on what is a tenant and how",
    "start": "1477399",
    "end": "1483720"
  },
  {
    "text": "granular we want those to be and also we have the design constraints imposed by kubernetes which may be unique um but",
    "start": "1483720",
    "end": "1491200"
  },
  {
    "text": "then at the bottom there's technical implications based upon your account strategy with these Cloud providers and",
    "start": "1491200",
    "end": "1497320"
  },
  {
    "text": "also we don't control them it's up to the cloud providers and in addition to that they may actually compete between",
    "start": "1497320",
    "end": "1503520"
  },
  {
    "text": "Cloud providers so just as before we need an indirection layer as you go top down on this diagram that way we can",
    "start": "1503520",
    "end": "1510080"
  },
  {
    "text": "pick our own tendency model at the top and we can still rely on the whatever tendency model fits best to every cloud",
    "start": "1510080",
    "end": "1517000"
  },
  {
    "text": "provider to solve this we use the same indirection layer compositions and xrds",
    "start": "1517000",
    "end": "1522600"
  },
  {
    "text": "we make our provider configs one to one with Cloud accounts while making our name spaces one to one with the developer platform tenant tenant model",
    "start": "1522600",
    "end": "1530159"
  },
  {
    "text": "we will then use compositions to pull out account IDs specified on each resource and use these to reference a provider configuration and any",
    "start": "1530159",
    "end": "1536399"
  },
  {
    "text": "underlying implementation and while I'm talking about crossplane specific terms here",
    "start": "1536399",
    "end": "1541559"
  },
  {
    "text": "this problem must is inherent in use of kubernetes API for this use case regardless of the of the technology",
    "start": "1541559",
    "end": "1547679"
  },
  {
    "text": "you're using to create these resources so our solution is to inject these account IDs into a standard field",
    "start": "1547679",
    "end": "1553760"
  },
  {
    "text": "on resources which is frankly I feel a very rudimentary solution um something we came up with because it solved our",
    "start": "1553760",
    "end": "1560679"
  },
  {
    "text": "needs right then but it would be great to see Community efforts to both develop a more robust solution and also",
    "start": "1560679",
    "end": "1566880"
  },
  {
    "text": "standardize this architecture so that it's not implementation or use case dependent so hint for community members",
    "start": "1566880",
    "end": "1574679"
  },
  {
    "text": "out there one more use case I'd like to go into is resource",
    "start": "1574679",
    "end": "1582039"
  },
  {
    "text": "referencing and so again to go back to the same example of an SNS topic that I keep going into we we also want to",
    "start": "1582039",
    "end": "1587720"
  },
  {
    "text": "create subscribers to our topic and as you remember before we also",
    "start": "1587720",
    "end": "1593279"
  },
  {
    "text": "created this indirection layer so what I'm showing you here are the resources that are our resources not necessarily the",
    "start": "1593279",
    "end": "1598919"
  },
  {
    "text": "implementation there are lots of ways to design an API to do this but we we found that it's often best to avoid composing",
    "start": "1598919",
    "end": "1605159"
  },
  {
    "text": "these two resources into this that example where you have the I keep calling it The Wago resource internally",
    "start": "1605159",
    "end": "1611320"
  },
  {
    "text": "but like the resource where you have sub resources within it that have properties and that's a fairly deep topic which",
    "start": "1611320",
    "end": "1617720"
  },
  {
    "text": "again could use some documentation but in my experience in building controllers it it tends to be an anti- pattern in",
    "start": "1617720",
    "end": "1623279"
  },
  {
    "text": "this ecosystem in a very simple reason would be the coupling of failure domains that you get when when this",
    "start": "1623279",
    "end": "1629520"
  },
  {
    "text": "occurs so ideally a sub a misconfiguration of a subscription doesn't result in the entire SNS topic",
    "start": "1629520",
    "end": "1636080"
  },
  {
    "text": "failing to reconcile so doing this brings up a second challenge",
    "start": "1636080",
    "end": "1641399"
  },
  {
    "text": "though so we we have our indirection layering system and now we have a topic",
    "start": "1641399",
    "end": "1646880"
  },
  {
    "text": "and a subscription resource but they actually thin wrappers around the implementation under the hood during",
    "start": "1646880",
    "end": "1653440"
  },
  {
    "text": "this inter direction we actually end up with resources that are not named identically or necessarily consistently",
    "start": "1653440",
    "end": "1659440"
  },
  {
    "text": "with the original user specified resource so I'm going to not go into too many details why but the general idea is",
    "start": "1659440",
    "end": "1666159"
  },
  {
    "text": "that some of these resources might be cluster scoped rather than namespace scoped and the the end result is that we",
    "start": "1666159",
    "end": "1672519"
  },
  {
    "text": "need to have more uniqueness on the implementation resources",
    "start": "1672519",
    "end": "1677960"
  },
  {
    "text": "so as you can see on the left our user created a topic called test topic and a subscription which refers to this topic",
    "start": "1678440",
    "end": "1684320"
  },
  {
    "text": "the problem is now we need to know the corresponding unique name of the implementation resource for that topic so our subscription can reference it you",
    "start": "1684320",
    "end": "1691240"
  },
  {
    "text": "notice how that how the name on the right there has the unique identifier so at this point it's hard to not feel like",
    "start": "1691240",
    "end": "1697600"
  },
  {
    "text": "well maybe we just created a bunch of own problems for ourselves by overthinking this um you know we we created this indirection layer we",
    "start": "1697600",
    "end": "1704039"
  },
  {
    "text": "avoided composition and maybe we should just do away with all that stuff cuz then all of this would would",
    "start": "1704039",
    "end": "1709320"
  },
  {
    "text": "work but but you don't have to fear um even though I couldn't find any documentation",
    "start": "1709320",
    "end": "1715480"
  },
  {
    "text": "when I was at we this is actually a real world example too we ran into this with some Engineers who were biting cutting",
    "start": "1715480",
    "end": "1720840"
  },
  {
    "text": "their teeth on similar resources to this and there's no documentation about really this pattern but we were clearly",
    "start": "1720840",
    "end": "1727519"
  },
  {
    "text": "not the first team here because there is a solution implemented to this within crossplane which is essentially that",
    "start": "1727519",
    "end": "1733600"
  },
  {
    "text": "there are labels that get put onto these onto these resources when they're claimed and therefore you can and also",
    "start": "1733600",
    "end": "1739320"
  },
  {
    "text": "there's a selector system to to cross reference these resources so you can use selectors and these labels to uniquely",
    "start": "1739320",
    "end": "1745720"
  },
  {
    "text": "identify the resource the the original name of the resource which is what's going on here with the the selector",
    "start": "1745720",
    "end": "1752640"
  },
  {
    "text": "referring to those two labels and while this is a crossplane specific implementation I again I I expect any",
    "start": "1752640",
    "end": "1758000"
  },
  {
    "text": "similar tool to have similar challenges because it it's nice to have your implementations cluster scoped rather",
    "start": "1758000",
    "end": "1763360"
  },
  {
    "text": "than namespace scoped for various reasons so to wrap this up I'm I'm going to",
    "start": "1763360",
    "end": "1769960"
  },
  {
    "text": "cover some of the takeaways from our journey so far it looks like we only have five minutes so I'm going to skim over this a bit but so sort of the main",
    "start": "1769960",
    "end": "1776320"
  },
  {
    "text": "one I I would hit on is that is again this this idea of unique maturity here",
    "start": "1776320",
    "end": "1781760"
  },
  {
    "text": "where we're using a mature set of tooling the cube API Cube API and controllers but but applied to an",
    "start": "1781760",
    "end": "1789799"
  },
  {
    "text": "evolving use case the typical pattern here is we realize there's a problem that's going to have a lot of impact on",
    "start": "1789799",
    "end": "1795440"
  },
  {
    "text": "the success of our platform and therefore needs some deep analysis is API design being a great",
    "start": "1795440",
    "end": "1801200"
  },
  {
    "text": "problem so what I would call out to everybody is that we need a lot of time",
    "start": "1801200",
    "end": "1806360"
  },
  {
    "text": "and a lot of effort put into the organic growth of best practices and documentations and especially standards within the space if it's going to be",
    "start": "1806360",
    "end": "1812880"
  },
  {
    "text": "successful for everybody so to that effect don't discount the value of just a simple technical blog not even a code",
    "start": "1812880",
    "end": "1820840"
  },
  {
    "text": "contribution and lastly I'd like to touch on a few of the engineering culture takeaways as well often these",
    "start": "1820840",
    "end": "1827200"
  },
  {
    "text": "are even more important the tech technical ones and we found this as well and then just a time I'm going to hit on",
    "start": "1827200",
    "end": "1832279"
  },
  {
    "text": "what I found to be the most pertinent one which is the fact that not only is this a technical Paradigm Shift well",
    "start": "1832279",
    "end": "1838480"
  },
  {
    "text": "sorry this is a technical paradigm shift and therefore it's Akin in my mind mostly to almost to learning a new programming language so imagine taking",
    "start": "1838480",
    "end": "1845240"
  },
  {
    "text": "an engineering team and telling them you're now going to work in some you're going to write your code and rust from now on or some some new language there's",
    "start": "1845240",
    "end": "1851720"
  },
  {
    "text": "frustration like you try to ship a new app in a new language if you haven't done it in a long time and remember how",
    "start": "1851720",
    "end": "1857440"
  },
  {
    "text": "frustrating that is so you will spend the first few months and all of your engineers will being less less uh less",
    "start": "1857440",
    "end": "1864399"
  },
  {
    "text": "High Velocity than you have been before and you need to One account for that be empathetic and also make sure that",
    "start": "1864399",
    "end": "1871399"
  },
  {
    "text": "everyone is aligned on the value you're trying to deliver over the long term because when those frustrations and",
    "start": "1871399",
    "end": "1876519"
  },
  {
    "text": "problems start to surface if you don't if you're not all in agreement about why you're doing it then how can you justify",
    "start": "1876519",
    "end": "1881639"
  },
  {
    "text": "the cost so with that I'll go ahead and end it thank you everyone for attending um",
    "start": "1881639",
    "end": "1887559"
  },
  {
    "text": "and we should have a few minutes for questions there's microphones on each of the sides so if you go ahead and line up",
    "start": "1887559",
    "end": "1892960"
  },
  {
    "text": "we're happy to answer them thanks",
    "start": "1892960",
    "end": "1896518"
  },
  {
    "text": "everybody yeah I would like to ask yeah I would like to ask a question",
    "start": "1901000",
    "end": "1906919"
  },
  {
    "text": "it really reminds me of a old problem in programming where uh it was a good",
    "start": "1906919",
    "end": "1912559"
  },
  {
    "text": "pattern to make an abstraction on top of database uh but as like",
    "start": "1912559",
    "end": "1918399"
  },
  {
    "text": "the software matured and libraries people usually just work directly let's say with like this is scl database we",
    "start": "1918399",
    "end": "1925320"
  },
  {
    "text": "will never go to mongodb and uh doesn't it feel a bit similar like uh you building abstraction",
    "start": "1925320",
    "end": "1931760"
  },
  {
    "text": "on top of something when this is something is not like stable cuz probably like migrating topics from SNS",
    "start": "1931760",
    "end": "1938720"
  },
  {
    "text": "to Rabbit mq will never happen like or otherwise it would require changes to",
    "start": "1938720",
    "end": "1943919"
  },
  {
    "text": "the abstraction too yeah like what when you said the over the database and sort",
    "start": "1943919",
    "end": "1949159"
  },
  {
    "text": "of the pitfalls with that you know you immediately think of ORS right and like all the challenges associated with that uh yeah so I mean that's a general",
    "start": "1949159",
    "end": "1957200"
  },
  {
    "text": "software design question so obviously I'm going have my opinion on it but I'm not sure other folks might have",
    "start": "1957200",
    "end": "1962679"
  },
  {
    "text": "different opinions but to me it's like don't don't abstract the functionality just maybe limit it right and that seems",
    "start": "1962679",
    "end": "1969000"
  },
  {
    "text": "to be a pattern emerging nowadays like if you notice we're not we're not making a thing called in topic that is a",
    "start": "1969000",
    "end": "1974639"
  },
  {
    "text": "general term but it's literally SNS topic you know we're not saying you can get pretending it's any like",
    "start": "1974639",
    "end": "1980519"
  },
  {
    "text": "subscription exactly it's not like General Pub sub API it's a it's just a limited API for managing SNS and I in",
    "start": "1980519",
    "end": "1988080"
  },
  {
    "text": "this use case I can see us following that pattern for the foreseeable future okay so otherwise you could let's say",
    "start": "1988080",
    "end": "1994799"
  },
  {
    "text": "like maybe make some validation for AWS crd just say Okay users you don't you",
    "start": "1994799",
    "end": "2000440"
  },
  {
    "text": "cannot use this like 10 Fields use just these two and it would also be like the same pattern exactly that's just to",
    "start": "2000440",
    "end": "2006440"
  },
  {
    "text": "understand it yeah that's what we want to use the position xrds for that's what the defaulting is all about is we just limit the fields and default the ones to",
    "start": "2006440",
    "end": "2012559"
  },
  {
    "text": "certain things that's really just for security to be thank you now now I understand that's really a good pattern",
    "start": "2012559",
    "end": "2018399"
  },
  {
    "text": "in my opinion thank you yeah thanks we can go to the other side hi",
    "start": "2018399",
    "end": "2023840"
  },
  {
    "text": "hello okay um so if I'm correct you're using a cross plane for like your top",
    "start": "2023840",
    "end": "2030480"
  },
  {
    "text": "level crd and then also for the infrastructure stuff",
    "start": "2030480",
    "end": "2035679"
  },
  {
    "text": "um why not like write your own sorry WR write your own uh write an operator for",
    "start": "2035679",
    "end": "2041639"
  },
  {
    "text": "the the thing that's closest to Autodesk the the the top level crd and then control everything underneath with that",
    "start": "2041639",
    "end": "2047840"
  },
  {
    "text": "might be crossplay also yeah it's a great question so we are not right now that top level resource kind of Jesse",
    "start": "2047840",
    "end": "2054280"
  },
  {
    "text": "mentioned this we we realize you know they be dragons I don't know how else to say it it's like it's actually a really hard problem when you probably would go",
    "start": "2054280",
    "end": "2060919"
  },
  {
    "text": "all in on like o with custom resources but we we are avoiding that top level",
    "start": "2060919",
    "end": "2066000"
  },
  {
    "text": "resource it sorry get into the details of where we're at on this journey we are focusing on the lowle resources so",
    "start": "2066000",
    "end": "2071200"
  },
  {
    "text": "basically infra and compute and then at the top level we're sort of relying on existing config and mapping it to that",
    "start": "2071200",
    "end": "2077760"
  },
  {
    "text": "today and I had this in one of my last slides here but essentially that tool",
    "start": "2077760",
    "end": "2083480"
  },
  {
    "text": "that that top level resource the oam Kella is less mature than some of the",
    "start": "2083480",
    "end": "2089079"
  },
  {
    "text": "other tools we've seen so we kind of we're waiting um so and then to clarify you did lift and",
    "start": "2089079",
    "end": "2096440"
  },
  {
    "text": "shift from terraform to cross plane what was that like yeah so so so",
    "start": "2096440",
    "end": "2102000"
  },
  {
    "text": "in in many instances yes right um but only in instances that are already encapsulated in such a way that the",
    "start": "2102000",
    "end": "2108320"
  },
  {
    "text": "users don't actually need to care about what's under the hood right so we do have a lot of users that are very",
    "start": "2108320",
    "end": "2113680"
  },
  {
    "text": "familiar with terraform and we will continue to support them using terraform controllers of sorts there's there's a",
    "start": "2113680",
    "end": "2119599"
  },
  {
    "text": "couple of different options there but but for the for the the um the simple",
    "start": "2119599",
    "end": "2125440"
  },
  {
    "text": "infra they're they're already using that through an interface that doesn't have any understanding of of what's under the",
    "start": "2125440",
    "end": "2132880"
  },
  {
    "text": "hood yeah go ahead okay thanks uh yeah thanks for sharing your experience with",
    "start": "2136400",
    "end": "2142599"
  },
  {
    "text": "us today I would like to know uh how many crds are you you have on your",
    "start": "2142599",
    "end": "2149480"
  },
  {
    "text": "cluster and second question yeah actually a really funny I mean a ton because out of the box AC",
    "start": "2149480",
    "end": "2155800"
  },
  {
    "text": "crossplane you just plops everything down on the cluster right that's a known issue um yes so this is my question how",
    "start": "2155800",
    "end": "2164160"
  },
  {
    "text": "how you handle the issues with the lot of CTS so normally oh is that why you're asking because of the performance issues",
    "start": "2164160",
    "end": "2169440"
  },
  {
    "text": "associated with it yes yeah exactly um interestingly enough the cube API as far",
    "start": "2169440",
    "end": "2174800"
  },
  {
    "text": "as I where our experience has been is totally fine with it it's all the other tools that talk with the co API that end",
    "start": "2174800",
    "end": "2180079"
  },
  {
    "text": "up breaking deines yes right it's like anything that tries to be like hey give me all the crds I like Argo like right it doesn't like that um so the short",
    "start": "2180079",
    "end": "2188240"
  },
  {
    "text": "answer is we avoid using those tools in those use cases is really what it comes down to like in a lot of the reason as I",
    "start": "2188240",
    "end": "2194920"
  },
  {
    "text": "mentioned before we don't have that top level resource right now and that's kind of how we can get away with this we're still translating a config file that we",
    "start": "2194920",
    "end": "2200079"
  },
  {
    "text": "own into these lowl Resources with this end goal of eventually doing the top level one so we don't have those tools",
    "start": "2200079",
    "end": "2205599"
  },
  {
    "text": "being like give us all this like an Argo trying to map that top level C to everything below it we just don't have",
    "start": "2205599",
    "end": "2212240"
  },
  {
    "text": "that problem what did you use what did you use it's just in it's literally um jsonic like it's not actually anything",
    "start": "2212240",
    "end": "2218920"
  },
  {
    "text": "fancy it's in-house tooling that's still sort of our Legacy known needs to get",
    "start": "2218920",
    "end": "2224560"
  },
  {
    "text": "swapped out okay about the client side throttling issues yeah say so we're not like",
    "start": "2224560",
    "end": "2232160"
  },
  {
    "text": "another this might be another part of why we don't have is like we users don't get access to our Cube cluster at least",
    "start": "2232160",
    "end": "2237680"
  },
  {
    "text": "today like so that that's kind of the main thing I guess the theme is we're not directly integrating many tools with",
    "start": "2237680",
    "end": "2243240"
  },
  {
    "text": "the cube API we're using it really to give us a clear interface and manage our own resources for",
    "start": "2243240",
    "end": "2248920"
  },
  {
    "text": "ourselves okay thanks oh go I've got more uh an",
    "start": "2248920",
    "end": "2257160"
  },
  {
    "text": "observation and I hope it's not something you thought of already but uh uh you pointed out the uh a select label",
    "start": "2257160",
    "end": "2264400"
  },
  {
    "text": "you created for uh the name space you you named it and then you brought it to a cluster level and then you referenced",
    "start": "2264400",
    "end": "2271240"
  },
  {
    "text": "it it's kind of a select label my point is if you're looking for patterns it's already there look at at the uh uh um",
    "start": "2271240",
    "end": "2279119"
  },
  {
    "text": "the deployment and how the uh uh replica set references deployments and poorts",
    "start": "2279119",
    "end": "2285599"
  },
  {
    "text": "references the replica set right there are examples there yeah yeah exactly",
    "start": "2285599",
    "end": "2291040"
  },
  {
    "text": "that was actually sort of exactly in line with what I was getting it's like the patterns are all there it's just a matter of being like Oh yes in this",
    "start": "2291040",
    "end": "2297720"
  },
  {
    "text": "problem domain here's the pattern to pull forward and apply that's still correctly right yeah and and think about",
    "start": "2297720",
    "end": "2303599"
  },
  {
    "text": "the reference IDE how the uh uh uh ports reference the uh the replica sets that",
    "start": "2303599",
    "end": "2309599"
  },
  {
    "text": "created them I mean that's the part that's not there but that's also there if you steal it correctly it's there",
    "start": "2309599",
    "end": "2316599"
  },
  {
    "text": "yeah so I'm guessing you you do you work on that tooling at all or you I work at kubernetes for yeah that's",
    "start": "2316599",
    "end": "2324599"
  },
  {
    "text": "what we like we need people to produce that like here's the patterns apply them and like everyone else would be able to",
    "start": "2324599",
    "end": "2329680"
  },
  {
    "text": "use it more more quickly thanks all right I think we're over time I'm happy to stick around and",
    "start": "2329680",
    "end": "2335720"
  },
  {
    "text": "answer questions but thanks for thanks for joining so",
    "start": "2335720",
    "end": "2340560"
  }
]