[
  {
    "start": "0",
    "end": "79000"
  },
  {
    "text": "okay hi everyone i'd like to thank you all for joining us today welcome to today's cncf webinar",
    "start": "1520",
    "end": "7440"
  },
  {
    "text": "self-service of cloud services for kubernetes application i'm christy tan marketing communications",
    "start": "7440",
    "end": "13280"
  },
  {
    "text": "manager here at cncf i'll be moderating today's webinar we would like to welcome our presenter today",
    "start": "13280",
    "end": "18560"
  },
  {
    "text": "lewis marshall cloud native delivery advocate at upkeva a few housekeeping items",
    "start": "18560",
    "end": "24240"
  },
  {
    "text": "before we get started during the webinar you are not able to talk as an attendee",
    "start": "24240",
    "end": "29599"
  },
  {
    "text": "there is a q a box at the bottom of your screen please feel free to drop in your questions and we'll get to as many as we can at",
    "start": "29599",
    "end": "36320"
  },
  {
    "text": "the end this is an official webinar of the cncf and as such is subject to the cncf code",
    "start": "36320",
    "end": "42399"
  },
  {
    "text": "of conduct please do not add anything to the chat or questions that would be in violation of that code of conduct",
    "start": "42399",
    "end": "48879"
  },
  {
    "text": "basically please be respectful of all your fellow participants and presenter please also note that the recording and",
    "start": "48879",
    "end": "54800"
  },
  {
    "text": "slides will be posted later today to the cncf website at cncf dot io webinars",
    "start": "54800",
    "end": "61359"
  },
  {
    "text": "with that i'll hand it over to lewis to kick off today's presentation take it away lewis thank you christy",
    "start": "61359",
    "end": "69439"
  },
  {
    "text": "um and thank you cncf for hosting this webinar um so",
    "start": "69439",
    "end": "75600"
  },
  {
    "text": "self-service of cloud resources for kubernetes applications so a little bit about",
    "start": "75600",
    "end": "81119"
  },
  {
    "start": "79000",
    "end": "79000"
  },
  {
    "text": "myself and before i kick off so i'm a site reliability engineer um and developer and tech evangelist so",
    "start": "81119",
    "end": "89680"
  },
  {
    "text": "we'll see how that goes um at aphea um i've had over 28 years now",
    "start": "89680",
    "end": "95439"
  },
  {
    "text": "of development experience always within operations focus started off with",
    "start": "95439",
    "end": "100479"
  },
  {
    "text": "8086 assembly for that little machine at the top right there",
    "start": "100479",
    "end": "105520"
  },
  {
    "text": "and more recently concentrating on golang kubernetes and cloud with aphea",
    "start": "105520",
    "end": "113520"
  },
  {
    "text": "so self-service of cloud resources for kubernetes applications specifically so",
    "start": "113520",
    "end": "120560"
  },
  {
    "text": "um what we're going to try and cover today um introduction and why this isn't",
    "start": "120560",
    "end": "126399"
  },
  {
    "text": "necessarily easy a bit about the problem domain",
    "start": "126399",
    "end": "131440"
  },
  {
    "text": "with a specific focus for a developer experience and self-service a description of what that",
    "start": "131440",
    "end": "137840"
  },
  {
    "text": "is and what that looks like in reality a quick demo of using custom resources in kubernetes to self-serve cloud resources",
    "start": "137840",
    "end": "146400"
  },
  {
    "text": "uh and a summary of the industry and a little bit about um advia's approach as we have our open source product",
    "start": "146400",
    "end": "152640"
  },
  {
    "text": "um trying to tackle this very issue um and then a summary and some questions",
    "start": "152640",
    "end": "158480"
  },
  {
    "text": "it'll be good to get some feedback and answer that so introduction why isn't",
    "start": "158480",
    "end": "163680"
  },
  {
    "text": "this easy um so we've learned from doing self-service um for many years is",
    "start": "163680",
    "end": "172959"
  },
  {
    "start": "165000",
    "end": "165000"
  },
  {
    "text": "the industry is moving rapidly in this very space and there's a lot of products in the industry with a focus around",
    "start": "172959",
    "end": "180239"
  },
  {
    "text": "cloud infrastructure per se but not many of them are have a developer specific focus or",
    "start": "180239",
    "end": "186560"
  },
  {
    "text": "slant and the developer solutions or solutions that come close to the develop the developer",
    "start": "186560",
    "end": "194000"
  },
  {
    "text": "domain um seem to be being replaced in the industry there's a movement",
    "start": "194000",
    "end": "200239"
  },
  {
    "text": "within the industry away from uh self-serving simplicity back towards",
    "start": "200239",
    "end": "205680"
  },
  {
    "text": "operation and cloud domain specific solutions um and we will cover a bit more about that",
    "start": "205680",
    "end": "212000"
  },
  {
    "text": "later um so we've had to implement um a solution um that's custom and wraps some of what",
    "start": "212000",
    "end": "219599"
  },
  {
    "text": "exists in the industry to get a good um outcome for our open source",
    "start": "219599",
    "end": "224799"
  },
  {
    "text": "um product so let's have a little um look at the problem where from a",
    "start": "224799",
    "end": "230720"
  },
  {
    "text": "developer focus so a developer works with kubernetes but before even that they'll",
    "start": "230720",
    "end": "238879"
  },
  {
    "start": "232000",
    "end": "232000"
  },
  {
    "text": "deal with containers are very used to shipping containers for a method for shipping",
    "start": "238879",
    "end": "247840"
  },
  {
    "text": "their application itself but also for testing their application with application",
    "start": "247840",
    "end": "254239"
  },
  {
    "text": "dependencies obviously containers make it very easy to consume a lot of uh",
    "start": "254239",
    "end": "261280"
  },
  {
    "text": "application dependencies like databases um message queues etc but fundamentally the",
    "start": "261280",
    "end": "267919"
  },
  {
    "text": "developer concern is around the libraries that they build into their application",
    "start": "267919",
    "end": "273040"
  },
  {
    "text": "and the containers that they may use locally to provide um the access that those libraries need",
    "start": "273040",
    "end": "280479"
  },
  {
    "text": "over a protocol and they don't really deal with cloud directly per se in that space and as soon as they do the",
    "start": "280479",
    "end": "288160"
  },
  {
    "text": "velocity of using the",
    "start": "288160",
    "end": "293199"
  },
  {
    "text": "cloud services slows their development cycle down and",
    "start": "293199",
    "end": "299680"
  },
  {
    "text": "cloud consumption is often broken and gated and requires specialist knowledge which is why",
    "start": "299680",
    "end": "305039"
  },
  {
    "text": "that velocity is affected so what does the developer need when it comes to consuming application",
    "start": "305039",
    "end": "313520"
  },
  {
    "start": "307000",
    "end": "307000"
  },
  {
    "text": "dependencies an application will be shipped to a kubernetes cluster",
    "start": "313520",
    "end": "320639"
  },
  {
    "text": "and here we have a picture of that but they depend through that code",
    "start": "320639",
    "end": "325680"
  },
  {
    "text": "library that wraps a protocol on a depends in here we depict database but why do we need managed",
    "start": "325680",
    "end": "333919"
  },
  {
    "text": "services at all it's really about removing operational overhead from a team",
    "start": "333919",
    "end": "340080"
  },
  {
    "text": "when the crown jaws are in the state of what your application delivers on um sometimes having as many eyes on that",
    "start": "340080",
    "end": "347199"
  },
  {
    "text": "service as possible so the reliability could dramatically be improved by",
    "start": "347199",
    "end": "355440"
  },
  {
    "text": "consuming something from a cloud provider that provides something across the entire industry in that space",
    "start": "355440",
    "end": "362000"
  },
  {
    "text": "so reliability and potentially or ideally simplicity would be provided",
    "start": "362000",
    "end": "367280"
  },
  {
    "start": "366000",
    "end": "366000"
  },
  {
    "text": "so what's the problem um here we have an application in kubernetes um and a developer who's",
    "start": "367280",
    "end": "373759"
  },
  {
    "text": "responsible for that application um but typically there's a devops or",
    "start": "373759",
    "end": "379919"
  },
  {
    "text": "a different mindset required for the operations side of the piece",
    "start": "379919",
    "end": "386800"
  },
  {
    "text": "where it comes to cloud services and there's a at least a mind shift",
    "start": "386800",
    "end": "393520"
  },
  {
    "text": "between those two types of operation and why does that mind shift exist",
    "start": "393520",
    "end": "400240"
  },
  {
    "text": "it's really around the way you deliver those two very different",
    "start": "400240",
    "end": "406720"
  },
  {
    "text": "solutions traditionally so developers create their containerized applications very familiar with that and potentially",
    "start": "406720",
    "end": "414400"
  },
  {
    "text": "extraordinarily familiar with creating those containers and then shipping them to kubernetes which then orchestrates those",
    "start": "414400",
    "end": "422479"
  },
  {
    "text": "in a kubernetes cluster but an operations guy or a devops professional may be using",
    "start": "422479",
    "end": "429680"
  },
  {
    "text": "configuration management tools um here we have an example of terraform talking to",
    "start": "429680",
    "end": "435039"
  },
  {
    "text": "amazon web services or any specific cloud provider which would then broker and manage",
    "start": "435039",
    "end": "442160"
  },
  {
    "text": "a instance of a cloud service or a cloud resource and that the",
    "start": "442160",
    "end": "448319"
  },
  {
    "text": "application may depend on so let's talk a bit more about self-service because",
    "start": "448319",
    "end": "454960"
  },
  {
    "start": "453000",
    "end": "453000"
  },
  {
    "text": "why is it even important why do we need this um so when it comes to cloud services there are a dependency of of an",
    "start": "454960",
    "end": "461360"
  },
  {
    "text": "application um and we'd want to reduce lead times so when there is no separate",
    "start": "461360",
    "end": "468319"
  },
  {
    "text": "team and no manual intervention required there's no manual process around that separate",
    "start": "468319",
    "end": "477520"
  },
  {
    "text": "us the set of steps required to procure those cloud services um but fundamentally when you've got two",
    "start": "477520",
    "end": "484639"
  },
  {
    "text": "different mindsets or two different tooling paths and worst case two whole different pipelines",
    "start": "484639",
    "end": "490639"
  },
  {
    "text": "to deliver updates you've got application updates have to be coordinated and",
    "start": "490639",
    "end": "498639"
  },
  {
    "text": "communicated with uh cloud updates so there's a a brittle um",
    "start": "498639",
    "end": "507840"
  },
  {
    "text": "an issue that can occur due to those separate concerns and coordination effort that may be required",
    "start": "507919",
    "end": "513839"
  },
  {
    "text": "to deliver updates um and fundamentally why self-serve we want to enable an",
    "start": "513839",
    "end": "519279"
  },
  {
    "text": "agile process enabling agile delivers on a reduced",
    "start": "519279",
    "end": "525760"
  },
  {
    "text": "cost fundamentally but the reason it does i mean it's talked about",
    "start": "525760",
    "end": "530880"
  },
  {
    "text": "often and elsewhere so i can touch on this lightly but fundamentally detecting defects",
    "start": "530880",
    "end": "539440"
  },
  {
    "text": "in a code base or the code basis dependency early in the cycle is vitally important",
    "start": "539440",
    "end": "545200"
  },
  {
    "text": "because the cost of remedying those the same defects later on when it's in front of",
    "start": "545200",
    "end": "551440"
  },
  {
    "text": "customers or in production um is vastly increased so reducing cost",
    "start": "551440",
    "end": "558959"
  },
  {
    "text": "now there's a perceived risk in some circles around self-service so",
    "start": "558959",
    "end": "565760"
  },
  {
    "text": "we want to ensure that we can limit that risk by providing an informed choice",
    "start": "565760",
    "end": "571440"
  },
  {
    "text": "so at this point i want to introduce an analogy here between our developer and our operations",
    "start": "571440",
    "end": "578399"
  },
  {
    "text": "with regards to a mobile phone so in a mobile phone shop we procure",
    "start": "578399",
    "end": "586320"
  },
  {
    "text": "not just a mobile phone but an operations piece to that a service um often",
    "start": "586320",
    "end": "592800"
  },
  {
    "text": "referred to as a plan which can condense that best practice and simplify it",
    "start": "592800",
    "end": "598320"
  },
  {
    "text": "so that all the operational concerns aren't back up and the cost of running and other security issues",
    "start": "598320",
    "end": "605279"
  },
  {
    "text": "could be simplified down to a simple choice um now limiting risk with regards to",
    "start": "605279",
    "end": "612959"
  },
  {
    "text": "running costs um there would be a perceived risk if you don't trust your staff now",
    "start": "612959",
    "end": "619600"
  },
  {
    "text": "obviously the staff development at the moment um we're all",
    "start": "619600",
    "end": "625360"
  },
  {
    "text": "you know in a climate where we've we're trusting staff a lot but the stuff that",
    "start": "625360",
    "end": "631839"
  },
  {
    "text": "fundamentally put code together that has a business",
    "start": "631839",
    "end": "637040"
  },
  {
    "text": "focus should be trusted arguably the most in an organization",
    "start": "637040",
    "end": "643279"
  },
  {
    "text": "and there's a further reduction of cost with the agility and reliability",
    "start": "643279",
    "end": "649440"
  },
  {
    "text": "concerns that i've already spoken to but further",
    "start": "649440",
    "end": "654640"
  },
  {
    "text": "the security risk we think is reduced by having an",
    "start": "654640",
    "end": "660240"
  },
  {
    "text": "informed choice and packaging that up as a product and a service that can be easily consumed",
    "start": "660240",
    "end": "666800"
  },
  {
    "text": "and not communicated or lost in communication and maybe introducing human error",
    "start": "666800",
    "end": "672839"
  },
  {
    "text": "aspects so developers of service what would that look like in our ideal world we should be able to procure",
    "start": "672839",
    "end": "680880"
  },
  {
    "start": "674000",
    "end": "674000"
  },
  {
    "text": "a cloud dependency of our application with a simple service description should",
    "start": "680880",
    "end": "686959"
  },
  {
    "text": "be able to give that instance of an application a name",
    "start": "686959",
    "end": "692160"
  },
  {
    "text": "um and refer to a plan as if we're just taking off the shelf it",
    "start": "692160",
    "end": "697519"
  },
  {
    "text": "should be very straightforward shouldn't limit our agility so we post a request to something",
    "start": "697519",
    "end": "703360"
  },
  {
    "text": "which then talks to any cloud provider and then provides back exactly what the application actually",
    "start": "703360",
    "end": "709519"
  },
  {
    "text": "depends on which at this point is access configuration which typically comes down to an",
    "start": "709519",
    "end": "716079"
  },
  {
    "text": "endpoint the network connectivity details and credentials the means of accessing",
    "start": "716079",
    "end": "722959"
  },
  {
    "text": "a resource securely so what's that look like in practice",
    "start": "722959",
    "end": "728240"
  },
  {
    "start": "727000",
    "end": "727000"
  },
  {
    "text": "there's a lot of industry assumptions around kubernetes resources being the best way to deliver this",
    "start": "728240",
    "end": "734399"
  },
  {
    "text": "um now native kubernetes resources are um well documented they manage",
    "start": "734399",
    "end": "741040"
  },
  {
    "text": "resources very well um and they're typically pertaining to",
    "start": "741040",
    "end": "746240"
  },
  {
    "text": "applications generally so application domain is well understood by a developer who's",
    "start": "746240",
    "end": "751440"
  },
  {
    "text": "created their application and shipped it in a container most of what they would look up around",
    "start": "751440",
    "end": "756959"
  },
  {
    "text": "kubernetes makes sense um and the ideal around reconciling an",
    "start": "756959",
    "end": "762160"
  },
  {
    "text": "intended state and not describing the how of exactly you move a container from node a to node b",
    "start": "762160",
    "end": "768800"
  },
  {
    "text": "is very desirable when it comes to cloud resources but in practice when kubernetes is extended",
    "start": "768800",
    "end": "776639"
  },
  {
    "text": "to relate to cloud resources um it's not that simple because there's",
    "start": "776639",
    "end": "783120"
  },
  {
    "text": "a lot of domain specific knowledge required in the operations space in the worst",
    "start": "783120",
    "end": "789360"
  },
  {
    "text": "case and the developer may not quite understand what's the benefit to them to",
    "start": "789360",
    "end": "794560"
  },
  {
    "text": "have to change that persona and understand those other concerns so",
    "start": "794560",
    "end": "800480"
  },
  {
    "start": "799000",
    "end": "799000"
  },
  {
    "text": "a custom resource for a cloud service could look just like a kubernetes source like any",
    "start": "800480",
    "end": "805839"
  },
  {
    "text": "other and there's a couple of examples here um with operators that the industry is",
    "start": "805839",
    "end": "811680"
  },
  {
    "text": "um moving towards one from google and one from amazon here both with the almost identical",
    "start": "811680",
    "end": "818880"
  },
  {
    "text": "requirement around a redis dependency for our application and we can use familiar tools to",
    "start": "818880",
    "end": "827600"
  },
  {
    "text": "create and procure and ship those application dependencies but fundamentally the parameters between",
    "start": "827600",
    "end": "834959"
  },
  {
    "text": "those two couldn't be more different and they in this case they both show some operation domain",
    "start": "834959",
    "end": "841760"
  },
  {
    "text": "knowledge that has required understudy of a cloud provider or in the worst case specific",
    "start": "841760",
    "end": "847040"
  },
  {
    "text": "infrastructure that may be required so how do we scale customer resources so",
    "start": "847040",
    "end": "853760"
  },
  {
    "start": "851000",
    "end": "851000"
  },
  {
    "text": "that they make a bit more sense maybe well at the moment we have different",
    "start": "853760",
    "end": "859120"
  },
  {
    "text": "specifications for each cloud there's domain specific knowledge required and there's no consistency",
    "start": "859120",
    "end": "864480"
  },
  {
    "text": "for the developer and there's no guidance more almost more importantly about the security and the best practice",
    "start": "864480",
    "end": "870079"
  },
  {
    "text": "about which plan and how to use it fundamentally there's no high-level abstraction",
    "start": "870079",
    "end": "875680"
  },
  {
    "text": "for those kubernetes resources and those operators so at this point it's worth delving into",
    "start": "875680",
    "end": "881839"
  },
  {
    "start": "879000",
    "end": "879000"
  },
  {
    "text": "history as it informs where we are today in the industry and",
    "start": "881839",
    "end": "886959"
  },
  {
    "text": "um some of the most mature uh aspects of providing this capability in kubernetes",
    "start": "886959",
    "end": "893279"
  },
  {
    "text": "is around the service catalog project which is um a means to wrap",
    "start": "893279",
    "end": "899199"
  },
  {
    "text": "the open service broker api on kubernetes it's a kubernetes native project um",
    "start": "899199",
    "end": "906079"
  },
  {
    "text": "and it it's born out of um using a facility that existed and was",
    "start": "906079",
    "end": "912000"
  },
  {
    "text": "invented by cloud foundry in the industry and it does provide custom resources",
    "start": "912000",
    "end": "917279"
  },
  {
    "text": "but its production readiness status um with regards to self-service specifically",
    "start": "917279",
    "end": "922399"
  },
  {
    "text": "is questionable because the industry is changing and moving its focus maybe because uh the cloud foundry uh",
    "start": "922399",
    "end": "930320"
  },
  {
    "text": "requirements may not match where the cloud operators are going with regards to kubernetes specifically",
    "start": "930320",
    "end": "937920"
  },
  {
    "start": "937000",
    "end": "937000"
  },
  {
    "text": "but it does provide service broker plans it provides a way of simplifying",
    "start": "937920",
    "end": "943120"
  },
  {
    "text": "access to cloud service and ideally provides some best practice at the point",
    "start": "943120",
    "end": "948160"
  },
  {
    "text": "of consumption if configured and set up right and also can vet or reduce the scope",
    "start": "948160",
    "end": "956160"
  },
  {
    "text": "of what service what services and and which particular plans around those",
    "start": "956160",
    "end": "962079"
  },
  {
    "text": "services are available in a particular cluster so i'll dig one layer down",
    "start": "962079",
    "end": "970160"
  },
  {
    "start": "967000",
    "end": "967000"
  },
  {
    "text": "to uh go over that quickly so we have service brokers um which a code that already exists and",
    "start": "970160",
    "end": "977759"
  },
  {
    "text": "they can be deployed in multiple systems but in this case we're showing how they integrate with the service catalog",
    "start": "977759",
    "end": "984160"
  },
  {
    "text": "project in kubernetes um by publishing plans and then the developer can request",
    "start": "984160",
    "end": "989279"
  },
  {
    "text": "a service from that service catalog which then passes that request onto a service",
    "start": "989279",
    "end": "994560"
  },
  {
    "text": "broker which talks to a cloud provider which provides status information back",
    "start": "994560",
    "end": "999759"
  },
  {
    "text": "to the service catalog which allows the application to be wired up to use it so a concrete example of that would be",
    "start": "999759",
    "end": "1006720"
  },
  {
    "text": "using the amazon web services service broker and a relational database service",
    "start": "1006720",
    "end": "1013920"
  },
  {
    "text": "production development plans being published to the service catalog developer can choose a production ready",
    "start": "1013920",
    "end": "1021120"
  },
  {
    "text": "relational database service which generates a service instance",
    "start": "1021120",
    "end": "1026959"
  },
  {
    "text": "request to the service broker using the um open",
    "start": "1026959",
    "end": "1032160"
  },
  {
    "text": "service broker api and then the cloud provider can be managed by that service broker um",
    "start": "1032160",
    "end": "1038720"
  },
  {
    "text": "which would uh provide the details um about a specific instance and the status",
    "start": "1038720",
    "end": "1045678"
  },
  {
    "text": "back to the service catalog which can then provision the details for consuming that",
    "start": "1045679",
    "end": "1051360"
  },
  {
    "text": "in what's called a service binding so i'm going to do a quick demo of what",
    "start": "1051360",
    "end": "1056640"
  },
  {
    "start": "1056000",
    "end": "1056000"
  },
  {
    "text": "that looks like and i'm going to cover the use of plans um and how we consume that application",
    "start": "1056640",
    "end": "1062559"
  },
  {
    "text": "configuration and on the right here we've got a view of consuming an s3 bucket with two",
    "start": "1062559",
    "end": "1069600"
  },
  {
    "text": "resources in kubernetes one's called a service instance which has the name of a plan",
    "start": "1069600",
    "end": "1076559"
  },
  {
    "text": "and a service and no parameters in this case so we're quite happy with defaults provided in this instance",
    "start": "1076559",
    "end": "1084799"
  },
  {
    "text": "and then a service binding which relates to the shape of how our application will consume",
    "start": "1084799",
    "end": "1090080"
  },
  {
    "text": "that specific service with a secret name so the developer can request",
    "start": "1090080",
    "end": "1095360"
  },
  {
    "text": "both the service instance and the service binding which describes what we need and how our application",
    "start": "1095360",
    "end": "1102880"
  },
  {
    "text": "will be shaped to consume that with the configuration so without further ado i use",
    "start": "1102880",
    "end": "1110480"
  },
  {
    "text": "a demo i provided earlier a bit of webinar magic so here we have a look at um secrets",
    "start": "1110480",
    "end": "1117280"
  },
  {
    "text": "and we can see there's the default token for service account in this default namespace here and we'll have a",
    "start": "1117280",
    "end": "1124000"
  },
  {
    "text": "quick look at a s3 service catalog instance",
    "start": "1124000",
    "end": "1130320"
  },
  {
    "text": "description the same one that i showed earlier with no parameters and more importantly the service binding",
    "start": "1130320",
    "end": "1136480"
  },
  {
    "text": "how our application will be wired up to consume that so at this point i can go ahead and",
    "start": "1136480",
    "end": "1142480"
  },
  {
    "text": "apply that to a cluster",
    "start": "1142480",
    "end": "1150400"
  },
  {
    "text": "and a little bit of magic later we can see that that service instance",
    "start": "1150400",
    "end": "1158880"
  },
  {
    "text": "should exist within the cluster now although the service instance description is in the cluster",
    "start": "1158880",
    "end": "1164559"
  },
  {
    "text": "the actual service is obviously being created and managed by the",
    "start": "1164559",
    "end": "1171840"
  },
  {
    "text": "service catalog of the service broker in turn and then the cloud operator and we'll watch that resource",
    "start": "1171840",
    "end": "1178160"
  },
  {
    "text": "and use a little bit of magic speed up there and we'll see the status goes to true",
    "start": "1178160",
    "end": "1187039"
  },
  {
    "text": "which means the cloud service should have been provisioned",
    "start": "1187039",
    "end": "1193440"
  },
  {
    "text": "so at this point we have a look at the service instance maybe clear up the screen look at that",
    "start": "1193440",
    "end": "1200000"
  },
  {
    "text": "again and we can see that its status has turned to ready so what we now want to look at is how to",
    "start": "1200000",
    "end": "1205600"
  },
  {
    "text": "get to that with our within our application we can see that a secret name has been referred to by our service",
    "start": "1205600",
    "end": "1212480"
  },
  {
    "text": "binding which also says it's ready so if we have a look at secrets as if by magic",
    "start": "1212480",
    "end": "1218000"
  },
  {
    "text": "we have a secret with the name that we specified in our service binding so now all there",
    "start": "1218000",
    "end": "1225280"
  },
  {
    "text": "is to do is consume that secret in a kubernetes deployment",
    "start": "1225280",
    "end": "1231679"
  },
  {
    "text": "so we have a kubernetes deployment yaml here with a reference to a secret and specific",
    "start": "1231679",
    "end": "1237840"
  },
  {
    "text": "environment variables that are familiar to anyone who's consumed amazon services",
    "start": "1237840",
    "end": "1247120"
  },
  {
    "text": "from an application um and we can see that that deployment gets ready now",
    "start": "1247120",
    "end": "1254240"
  },
  {
    "text": "instead of running a fully fledged application at this point i'm going to use kubernetes debugging",
    "start": "1254240",
    "end": "1260400"
  },
  {
    "text": "technique to connect my laptop to an interactive shell session",
    "start": "1260400",
    "end": "1266080"
  },
  {
    "text": "inside the workload inside the kubernetes cluster and at this point we can have a look at",
    "start": "1266080",
    "end": "1272080"
  },
  {
    "text": "the environment variable bucket name and we can use the amazon",
    "start": "1272080",
    "end": "1277440"
  },
  {
    "text": "web services api to rather command line interface to look",
    "start": "1277440",
    "end": "1283120"
  },
  {
    "text": "that there's nothing in that bucket and we can copy",
    "start": "1283120",
    "end": "1288320"
  },
  {
    "text": "something that exists in every container or most to that bucket and see that it exists so",
    "start": "1288320",
    "end": "1296159"
  },
  {
    "text": "that was a real quick walkthrough of um the amazon service broker and a",
    "start": "1296159",
    "end": "1302559"
  },
  {
    "text": "a tangible hopefully um overview of what that actually looks like in practice",
    "start": "1302559",
    "end": "1307679"
  },
  {
    "text": "but it covers up a lot of complexity so here we have a product comparison",
    "start": "1307679",
    "end": "1314400"
  },
  {
    "start": "1309000",
    "end": "1309000"
  },
  {
    "text": "across open source uh capability in the industry um we have",
    "start": "1314400",
    "end": "1321280"
  },
  {
    "text": "the amazon web service service broker there with loads of application services now they're dependent on",
    "start": "1321280",
    "end": "1327760"
  },
  {
    "text": "uh cloud formation templates that are provided and there's a bunch of default",
    "start": "1327760",
    "end": "1333520"
  },
  {
    "text": "templates provided but really you need to look at those in detail at least understand them for production use cases",
    "start": "1333520",
    "end": "1341760"
  },
  {
    "text": "and you've got to understand a lot more besides about how that's actually wired up in practice",
    "start": "1341760",
    "end": "1348960"
  },
  {
    "text": "when you're self-serving across multiple clusters or scoping credentials",
    "start": "1348960",
    "end": "1355679"
  },
  {
    "text": "to particular workloads but more importantly the future",
    "start": "1355679",
    "end": "1360799"
  },
  {
    "text": "is what's uncertain in this space we like the idea it's got plans um and service brokers for self-service",
    "start": "1360799",
    "end": "1367679"
  },
  {
    "text": "providing plans is a very good high-level attraction so for a developer it's a it's a nice",
    "start": "1367679",
    "end": "1373120"
  },
  {
    "text": "thing but amazon have stated that their service operator is their intended direction but",
    "start": "1373120",
    "end": "1380320"
  },
  {
    "text": "it's a very early stage in the project so it's a bit too early to come in in any more detail",
    "start": "1380320",
    "end": "1385520"
  },
  {
    "text": "and say there's a minimum viable product on a branch for the latest trader iteration",
    "start": "1385520",
    "end": "1391760"
  },
  {
    "text": "of that project there are other service brokers that exist for azure and google cloud project",
    "start": "1391760",
    "end": "1399120"
  },
  {
    "text": "but both of those large cloud operators have put their sub a lot of resources",
    "start": "1399120",
    "end": "1406559"
  },
  {
    "text": "into slightly different directions going forward so google have a google config connector",
    "start": "1406559",
    "end": "1414720"
  },
  {
    "text": "which is referred to in uh their anthos product suite as being core ii and thought but um importantly to",
    "start": "1414720",
    "end": "1423039"
  },
  {
    "text": "unpick here is the fact that the uh although anthos describes itself as",
    "start": "1423039",
    "end": "1429440"
  },
  {
    "text": "being multi-cloud the google config connector is certainly focused only on",
    "start": "1429440",
    "end": "1434640"
  },
  {
    "text": "uh google cloud platform so for self-service",
    "start": "1434640",
    "end": "1442799"
  },
  {
    "text": "it's not um as simple as it could be crossplane is worth a mention here um they it's provided um and backed by",
    "start": "1442799",
    "end": "1451440"
  },
  {
    "text": "um microsoft and alibaba cloud but it's also got some really",
    "start": "1451440",
    "end": "1456799"
  },
  {
    "text": "interesting ideas around application focus with traits and a new initiative around the",
    "start": "1456799",
    "end": "1463039"
  },
  {
    "text": "open application model but more of the resources pertain to cloud",
    "start": "1463039",
    "end": "1469840"
  },
  {
    "text": "infrastructure than applications at this point so it's an interesting one to watch um terraform there's new operators both",
    "start": "1469840",
    "end": "1477360"
  },
  {
    "text": "from hashicorp um and uh rancher labs but both of those are",
    "start": "1477360",
    "end": "1484320"
  },
  {
    "text": "extraordinarily early and because of their infrastructure focus and the domain specific language",
    "start": "1484320",
    "end": "1490080"
  },
  {
    "text": "they don't really relate to developers self-service so that's an overview with regards to",
    "start": "1490080",
    "end": "1496400"
  },
  {
    "text": "self-service for developers leaving a developer maybe a little bewildered about what they",
    "start": "1496400",
    "end": "1501919"
  },
  {
    "text": "could deploy to their cluster and consume within their team so at this point i want to touch on the",
    "start": "1501919",
    "end": "1508720"
  },
  {
    "start": "1506000",
    "end": "1506000"
  },
  {
    "text": "cloud vendors direction they have motives that are clear commercial",
    "start": "1508720",
    "end": "1516159"
  },
  {
    "text": "and quite rightly so um and they want to support many customers",
    "start": "1516159",
    "end": "1521279"
  },
  {
    "text": "and their focus is about reliability at scale which is a fantastic reason to want to consume managed",
    "start": "1521279",
    "end": "1527440"
  },
  {
    "text": "services in the first place but because of that holistic lowest common denominator",
    "start": "1527440",
    "end": "1535120"
  },
  {
    "text": "approach the complexity has to be put on the customer so the self-support aspect is is very real",
    "start": "1535120",
    "end": "1543440"
  },
  {
    "text": "and also they're not really driving out multi-cloud obviously they've all got their own um reasons",
    "start": "1543440",
    "end": "1551440"
  },
  {
    "text": "um and tie-in products so they don't necessarily save the",
    "start": "1551440",
    "end": "1558080"
  },
  {
    "text": "customer time and money with regards to self-service for cloud resources here so appiah has",
    "start": "1558080",
    "end": "1566159"
  },
  {
    "text": "an open source product called core which centers around self-service of",
    "start": "1566159",
    "end": "1571440"
  },
  {
    "start": "1567000",
    "end": "1567000"
  },
  {
    "text": "kubernetes clusters and we're iterating into providing uh cloud services so a developer would",
    "start": "1571440",
    "end": "1579360"
  },
  {
    "text": "be able to request a service plan a high-level abstraction from core which would broker that to",
    "start": "1579360",
    "end": "1587279"
  },
  {
    "text": "different technologies as we filter the industry and provide a set of",
    "start": "1587279",
    "end": "1595679"
  },
  {
    "text": "concrete absolute production level ideals in an open source product",
    "start": "1595679",
    "end": "1603120"
  },
  {
    "text": "and then at the point of consumption the application can get that simply so i'm going to do a",
    "start": "1603120",
    "end": "1609279"
  },
  {
    "text": "quick demo now of using a user interface to self-service plans and provide that simplicity",
    "start": "1609279",
    "end": "1617440"
  },
  {
    "text": "and then run a an application to consume them",
    "start": "1617440",
    "end": "1623440"
  },
  {
    "text": "so here we have the open source cloud project core",
    "start": "1624240",
    "end": "1630799"
  },
  {
    "text": "you're running the interface um now we think it's important to have a distinction between the operations side",
    "start": "1630799",
    "end": "1636880"
  },
  {
    "text": "that can set the plans both from an open source project where the community can",
    "start": "1636880",
    "end": "1643039"
  },
  {
    "text": "uh procure what are good plans but then again a a particular organization can further",
    "start": "1643039",
    "end": "1649600"
  },
  {
    "text": "define what is in a plan and what that looks like but we're going to consume that",
    "start": "1649600",
    "end": "1654799"
  },
  {
    "text": "from a team where uh the agility um and work kind of being prior um organized",
    "start": "1654799",
    "end": "1663039"
  },
  {
    "text": "so we have a an eks cluster here and we want to provide a cloud service now under the hood we",
    "start": "1663039",
    "end": "1669840"
  },
  {
    "text": "want to provide a custom resource definition and",
    "start": "1669840",
    "end": "1675039"
  },
  {
    "text": "a command line interface so familiar tooling and techniques can be used but",
    "start": "1675039",
    "end": "1680799"
  },
  {
    "text": "while we're discovering how to use those within clear user interface gives a big uplay uplift for a developer",
    "start": "1680799",
    "end": "1688080"
  },
  {
    "text": "where they can look at the parameters and decide whether they suit",
    "start": "1688080",
    "end": "1693120"
  },
  {
    "text": "a particular requirement so here we're going to create a cloud",
    "start": "1693120",
    "end": "1699279"
  },
  {
    "text": "resource for s3 and we're going to get details back about that cloud resource in a secret",
    "start": "1699279",
    "end": "1706640"
  },
  {
    "text": "in a specific kubernetes cluster in a specific namespace and all the developer needs to",
    "start": "1706640",
    "end": "1712480"
  },
  {
    "text": "provide is a service name for how they're referring to this",
    "start": "1712480",
    "end": "1717520"
  },
  {
    "text": "with a service plan now that's providing a cloud service",
    "start": "1717520",
    "end": "1726880"
  },
  {
    "text": "instance for development now it's possible to use one instance for multiple environments",
    "start": "1726880",
    "end": "1733840"
  },
  {
    "text": "for some types of services and in this case we want to provide a discrete bucket",
    "start": "1733840",
    "end": "1739919"
  },
  {
    "text": "for each instance of our application but we want the same service name now",
    "start": "1739919",
    "end": "1746159"
  },
  {
    "text": "it's easy to keep these the same when the plans provide an abstraction point where all the configuration",
    "start": "1746159",
    "end": "1752720"
  },
  {
    "text": "can be done once in advance so at this point we want to get access to",
    "start": "1752720",
    "end": "1758960"
  },
  {
    "text": "that and the benefits of a user interface obviously allow us to have a rich",
    "start": "1758960",
    "end": "1764640"
  },
  {
    "text": "experience for the developer where they can find out how to consume that within kubernetes what the resource names are called um",
    "start": "1764640",
    "end": "1771600"
  },
  {
    "text": "etc so now we're going to deploy an application",
    "start": "1771600",
    "end": "1777440"
  },
  {
    "text": "to kubernetes looks very similar to before we have a secret reference there",
    "start": "1777440",
    "end": "1785440"
  },
  {
    "text": "and we're going to consume a kubernetes cluster by getting access",
    "start": "1785440",
    "end": "1793520"
  },
  {
    "text": "on the user interface here finding out how to do that switch you back to the cli i can set up",
    "start": "1793520",
    "end": "1801120"
  },
  {
    "text": "our single sign-on and now switch context to get access to that specific",
    "start": "1801120",
    "end": "1806240"
  },
  {
    "text": "cluster and the namespace where we want to deploy an instance of that application",
    "start": "1806240",
    "end": "1813039"
  },
  {
    "text": "so now we can deploy that application we didn't really need to know much up",
    "start": "1814080",
    "end": "1820080"
  },
  {
    "text": "front but we could look at crds that have been",
    "start": "1820080",
    "end": "1825919"
  },
  {
    "text": "created behind the scenes we can look at how they're consumed and using cube ctl later",
    "start": "1825919",
    "end": "1832240"
  },
  {
    "text": "and then put those in uh gitops or however we work within any particular organization",
    "start": "1832240",
    "end": "1839919"
  },
  {
    "text": "we've created an application there we can see it's already running i may have done that before",
    "start": "1839919",
    "end": "1846640"
  },
  {
    "text": "um and now what we're going to do is connect our desktop to",
    "start": "1846640",
    "end": "1853840"
  },
  {
    "text": "the running pod the running container within that kubernetes cluster in order to",
    "start": "1853840",
    "end": "1861279"
  },
  {
    "text": "use a web browser to access it without worrying about ingress and other",
    "start": "1861279",
    "end": "1866559"
  },
  {
    "text": "types of resources at this point so as a developer it's very",
    "start": "1866559",
    "end": "1871760"
  },
  {
    "text": "straightforward to consume s3 when we have a rich user interface to do that",
    "start": "1871760",
    "end": "1877440"
  },
  {
    "text": "and then get access to an application which has picked up the relevant",
    "start": "1877440",
    "end": "1883519"
  },
  {
    "text": "configuration from whatever technology in the background has provided it",
    "start": "1883519",
    "end": "1888559"
  },
  {
    "text": "and we can then persist some state so there's a quick overview of some of the",
    "start": "1888559",
    "end": "1896080"
  },
  {
    "text": "thoughts and ideals we think are important in this space um i hope some of this resonates",
    "start": "1896080",
    "end": "1904559"
  },
  {
    "text": "if we just finish up there we create a couple of objects which are persisted",
    "start": "1904559",
    "end": "1909600"
  },
  {
    "text": "okay so in summary we think the current solutions um that exist across the industry in",
    "start": "1909600",
    "end": "1916240"
  },
  {
    "start": "1910000",
    "end": "1910000"
  },
  {
    "text": "this space i have a operations heavy focus and they replay",
    "start": "1916240",
    "end": "1921679"
  },
  {
    "text": "a certain amount of complexity um back which can hamper the agility we like the",
    "start": "1921679",
    "end": "1929120"
  },
  {
    "text": "idea of a high-level abstraction and plans as a terminology makes a lot of sense it",
    "start": "1929120",
    "end": "1936159"
  },
  {
    "text": "provides simplicity for developers and hopefully increases agility but",
    "start": "1936159",
    "end": "1941440"
  },
  {
    "text": "almost more importantly you can condense all the best practice into a plan and provide oversight",
    "start": "1941440",
    "end": "1948640"
  },
  {
    "text": "um and good practice and audit and compliance around isis standards um and",
    "start": "1948640",
    "end": "1955679"
  },
  {
    "text": "what have you um with regards to those plans so i'll invite you to look up um about",
    "start": "1955679",
    "end": "1963200"
  },
  {
    "start": "1960000",
    "end": "1960000"
  },
  {
    "text": "appear i won't go into any of the details i want to skip quickly over this slide",
    "start": "1963200",
    "end": "1968880"
  },
  {
    "text": "um other than say we provide the core project um and it'll be good to",
    "start": "1968880",
    "end": "1975919"
  },
  {
    "text": "answer any questions um at this point um and i'll leave",
    "start": "1975919",
    "end": "1981200"
  },
  {
    "start": "1981000",
    "end": "1981000"
  },
  {
    "text": "uh contact details and our git repository there for um your",
    "start": "1981200",
    "end": "1989039"
  },
  {
    "text": "access there okay thank you very much that's the end of my portion um if i",
    "start": "1989039",
    "end": "1995279"
  },
  {
    "text": "could now um have the questions yeah thanks so much lewis for a great",
    "start": "1995279",
    "end": "2000960"
  },
  {
    "text": "presentation um as lewis mentioned we now have time for questions uh just a reminder if you have",
    "start": "2000960",
    "end": "2006640"
  },
  {
    "text": "a question that you'd like to ask please drop it in the q a tab at the bottom of your um zoom screen and we'll uh get through as",
    "start": "2006640",
    "end": "2013279"
  },
  {
    "text": "many as we can we have a few that populated here so i'll read them aloud the first one here is from an anonymous",
    "start": "2013279",
    "end": "2019360"
  },
  {
    "text": "attendee it says can you import an existing s3 buckets as",
    "start": "2019360",
    "end": "2024799"
  },
  {
    "text": "service instance into the kubernetes cluster",
    "start": "2024799",
    "end": "2029760"
  },
  {
    "text": "that is a brilliant question um and it's one that um",
    "start": "2030159",
    "end": "2037120"
  },
  {
    "text": "a lot of projects in the industry um have uh skirted around and indeed",
    "start": "2038240",
    "end": "2045840"
  },
  {
    "text": "if you're providing um a a new way of getting access to",
    "start": "2045840",
    "end": "2052240"
  },
  {
    "text": "cloud resources it's probably best to migrate to um something that provides that",
    "start": "2052240",
    "end": "2058158"
  },
  {
    "text": "uplift rather than trying to ask um something that um condenses a whole",
    "start": "2058159",
    "end": "2064480"
  },
  {
    "text": "bunch of best practice to change its shape suddenly to bring in something that may or may not be compliant",
    "start": "2064480",
    "end": "2070240"
  },
  {
    "text": "it's a good question though but it's there's no magic bullet here in that space",
    "start": "2070240",
    "end": "2076639"
  },
  {
    "text": "okay um the next question is and i apologize if i'm butchering this it's",
    "start": "2077359",
    "end": "2082720"
  },
  {
    "text": "vladislav he's asking who manages a service broker",
    "start": "2082720",
    "end": "2087839"
  },
  {
    "text": "is it a corresponding csp collaborating with a kubernetes sig or an independent",
    "start": "2087839",
    "end": "2093679"
  },
  {
    "text": "vendor so at the moment uh in the industry",
    "start": "2093679",
    "end": "2100079"
  },
  {
    "text": "um delivering the service brokers and how they're wired up in a specific",
    "start": "2100079",
    "end": "2107200"
  },
  {
    "text": "cluster or in a operations cluster and what that looks like",
    "start": "2107200",
    "end": "2112320"
  },
  {
    "text": "is a problem for the the individual organization um but there",
    "start": "2112320",
    "end": "2118720"
  },
  {
    "text": "is some good technology there um not just from a particular broker",
    "start": "2118720",
    "end": "2124160"
  },
  {
    "text": "but across a whole bunch of operators so um in our instance in the core",
    "start": "2124160",
    "end": "2130079"
  },
  {
    "text": "product we provide plans and automation in the core product to deliver all of",
    "start": "2130079",
    "end": "2136400"
  },
  {
    "text": "the technology stack so that at the point of consumption the developer doesn't need to worry about it",
    "start": "2136400",
    "end": "2142480"
  },
  {
    "text": "we provide building blocks in core to deliver all of the above so that you don't need",
    "start": "2142480",
    "end": "2148240"
  },
  {
    "text": "to worry about it as an operational concern that's something we want to take on",
    "start": "2148240",
    "end": "2158480"
  },
  {
    "text": "okay we have another question here from daniel daniel says thanks for a nice",
    "start": "2158480",
    "end": "2163520"
  },
  {
    "text": "presentation is there any offering overlap with vmware tanzu applications catalog self-service he",
    "start": "2163520",
    "end": "2171119"
  },
  {
    "text": "says i believe there is an open source version of it as well",
    "start": "2171119",
    "end": "2176000"
  },
  {
    "text": "um so not really directly i mean i've been speaking to cloud services specifically",
    "start": "2176400",
    "end": "2183760"
  },
  {
    "text": "and tanzu has a an application catalogue which talks across cloud and in cluster",
    "start": "2183760",
    "end": "2191280"
  },
  {
    "text": "um and it's a similar area to where we're addressing but i think our focus",
    "start": "2191280",
    "end": "2196400"
  },
  {
    "text": "is certainly on driving down complexity to make it absolute simple at the point",
    "start": "2196400",
    "end": "2203839"
  },
  {
    "text": "of consumption for a developer so it's slightly overlapping",
    "start": "2203839",
    "end": "2208960"
  },
  {
    "text": "in respect to many uh many of the products in the industry but at the point of use the simplicity",
    "start": "2208960",
    "end": "2216480"
  },
  {
    "text": "is where we think uh a product like core the open source project and the community can",
    "start": "2216480",
    "end": "2222880"
  },
  {
    "text": "engage please do to test and make sure that we're on track in that",
    "start": "2222880",
    "end": "2228160"
  },
  {
    "text": "space okay um well looks like that's all the",
    "start": "2228160",
    "end": "2234480"
  },
  {
    "text": "questions that have been submitted so far um any oh here we got another one",
    "start": "2234480",
    "end": "2240160"
  },
  {
    "text": "an apologies vlad if i'm saying your name wrong it's a lot of slav is asking uh follow up to my previous question",
    "start": "2240160",
    "end": "2248160"
  },
  {
    "text": "a piva core approach is excellent and clear but what about service brokers you've compared in the",
    "start": "2248160",
    "end": "2254839"
  },
  {
    "text": "table so under the hood we um are using uh",
    "start": "2254839",
    "end": "2260800"
  },
  {
    "text": "in our first iteration we have a feature uh gated uh capability uh which is at",
    "start": "2260800",
    "end": "2267280"
  },
  {
    "text": "alpha at the moment where we're using the amazon service broker but we're um populating the specific",
    "start": "2267280",
    "end": "2274720"
  },
  {
    "text": "plans um to be very specific cloud formation templates that we know to be",
    "start": "2274720",
    "end": "2279760"
  },
  {
    "text": "good and fit operational uh concerns that we have tested um and we also have some operators",
    "start": "2279760",
    "end": "2287680"
  },
  {
    "text": "um from the google config connector that we want to integrate with um in that space so i",
    "start": "2287680",
    "end": "2293920"
  },
  {
    "text": "guess the uh in the simple the simplest answer is to say yes some of the technology in that table",
    "start": "2293920",
    "end": "2300560"
  },
  {
    "text": "we would want to use but um we want to orchestrate and automate how it's delivered and provide a higher",
    "start": "2300560",
    "end": "2307680"
  },
  {
    "text": "level abstraction so that regardless of whether it be a service broker providing the specifics",
    "start": "2307680",
    "end": "2313040"
  },
  {
    "text": "of a plan or an operator you get the same experience um as a user of course",
    "start": "2313040",
    "end": "2320960"
  },
  {
    "text": "okay yeah well looks like those are all the questions um today thanks again louis for a very",
    "start": "2322560",
    "end": "2329760"
  },
  {
    "text": "informative presentation that's all the questions and time that we have for today",
    "start": "2329760",
    "end": "2334800"
  },
  {
    "text": "thanks again to everyone for joining us a friendly reminder that the webinar recording and slides will be online",
    "start": "2334800",
    "end": "2340800"
  },
  {
    "text": "later today we look forward to seeing you at a future cncf webinar have a great day and stay safe thanks",
    "start": "2340800",
    "end": "2349440"
  },
  {
    "text": "everyone",
    "start": "2349880",
    "end": "2352880"
  }
]