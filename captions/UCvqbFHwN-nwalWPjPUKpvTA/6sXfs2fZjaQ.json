[
  {
    "start": "0",
    "end": "62000"
  },
  {
    "text": "who is joining us today welcome today's CN CF webinar API gateway in ingress management with Kong for kubernetes I'm",
    "start": "0",
    "end": "7140"
  },
  {
    "text": "Chris short principal technical marketing manager at Red Hat and cloud native computing foundation ambassador",
    "start": "7140",
    "end": "13280"
  },
  {
    "text": "I'll be moderating today's webinar it's gonna be presented by hairy bagged a",
    "start": "13280",
    "end": "20160"
  },
  {
    "text": "senior cloud engineer at Kong before we get started though I have a few housekeeping items to go over during the",
    "start": "20160",
    "end": "27150"
  },
  {
    "text": "webinar you're not able to talk as an attendee sorry but there is a Q&A box at",
    "start": "27150",
    "end": "32910"
  },
  {
    "text": "the bottom of your screen please feel free to drop your questions in there and we'll get through as many as we can at",
    "start": "32910",
    "end": "38010"
  },
  {
    "text": "the end this is an official webinar of the CNC f as such as subject to C&C f code of",
    "start": "38010",
    "end": "44760"
  },
  {
    "text": "conduct please do not add anything to the chat or questions that would be in violation of that code of conduct",
    "start": "44760",
    "end": "49980"
  },
  {
    "text": "basically be respectful of all your fellow participants presenters and their time with that I will hand it over to",
    "start": "49980",
    "end": "57629"
  },
  {
    "text": "Harry senior cloud engineer at Kong take it away thank you Chris welcome to the",
    "start": "57629",
    "end": "65100"
  },
  {
    "start": "62000",
    "end": "118000"
  },
  {
    "text": "webinar I'm Harry I lead all the software development on the Kuban at his side at",
    "start": "65100",
    "end": "70860"
  },
  {
    "text": "konk konk is an enterprise not a company but today whatever I will be talking to",
    "start": "70860",
    "end": "76439"
  },
  {
    "text": "you about is all open source so all of this is available to you right away right now so let me get started with the",
    "start": "76439",
    "end": "84479"
  },
  {
    "text": "agenda for today today's agenda is pretty simple we have a new open source",
    "start": "84479",
    "end": "90810"
  },
  {
    "text": "gateway come to dotto that we released earlier this month and then we will get",
    "start": "90810",
    "end": "96150"
  },
  {
    "text": "into how kong woods with kubernetes and helps you do ingress management we also",
    "start": "96150",
    "end": "101400"
  },
  {
    "text": "have a new release of our interest controller which we call Kong for Cuban it is 0.7 so we'll take a deep dive in",
    "start": "101400",
    "end": "108119"
  },
  {
    "text": "some features and we also go through a demo there that's it's a pretty short",
    "start": "108119",
    "end": "114240"
  },
  {
    "text": "and simple talk so let's just dive in so",
    "start": "114240",
    "end": "119549"
  },
  {
    "start": "118000",
    "end": "290000"
  },
  {
    "text": "Kong initially was released in 2015 and we released the 1.2 version in about in",
    "start": "119549",
    "end": "127820"
  },
  {
    "text": "so we released one or two in 2018 and in last one year we have been working",
    "start": "129590",
    "end": "135180"
  },
  {
    "text": "towards com2 dot o counter dot o brings in a major feature asks from the",
    "start": "135180",
    "end": "142110"
  },
  {
    "text": "community which is called go plugins kong is built on top of nginx on top of",
    "start": "142110",
    "end": "148739"
  },
  {
    "text": "open resti and it's written completely in newer he used logit for performance",
    "start": "148739",
    "end": "154260"
  },
  {
    "text": "reasons and count is super blazingly fast but the newer community is pretty",
    "start": "154260",
    "end": "159900"
  },
  {
    "text": "small so we've opened that up to write enable you to write plugins and go go is",
    "start": "159900",
    "end": "166350"
  },
  {
    "text": "as you all know the cloud native language essentially cuban it is darker",
    "start": "166350",
    "end": "172190"
  },
  {
    "text": "anything that is essentially written for cloud is nowadays written in go so we have extended that to go you can do",
    "start": "172190",
    "end": "180780"
  },
  {
    "text": "request transformations authorizations authentication but not everything is possible whatever is possible in in our",
    "start": "180780",
    "end": "187049"
  },
  {
    "text": "lua plugins the second most important feature is hybrid data plane control",
    "start": "187049",
    "end": "193739"
  },
  {
    "text": "plane separation so which we call the hybrid mode contradiction aliy required",
    "start": "193739",
    "end": "199140"
  },
  {
    "text": "database to run with kong 1.1 we remove that requirement altogether and Konkan",
    "start": "199140",
    "end": "205140"
  },
  {
    "text": "function with the outer database in the control plane data plane mode the control plane nodes are associated with",
    "start": "205140",
    "end": "213060"
  },
  {
    "text": "the database and they configure all the data plane notes so the redoubling notes do not need to have any connection other",
    "start": "213060",
    "end": "219900"
  },
  {
    "text": "than the control",
    "start": "219900",
    "end": "222530"
  },
  {
    "text": "which could be running any you know and be configuring all your ingress clusters",
    "start": "224930",
    "end": "231030"
  },
  {
    "text": "across the world across multiple Kuban it is clusters as well if you want that to be the case we released a new plugin",
    "start": "231030",
    "end": "236849"
  },
  {
    "text": "called Acme plugin which is named after the Acme protocol the most popular",
    "start": "236849",
    "end": "244340"
  },
  {
    "text": "certificate authority there is legs and crypt so this sort this plugin",
    "start": "244340",
    "end": "250110"
  },
  {
    "text": "essentially allows you to automatically encrypt your api traffic using TLS",
    "start": "250110",
    "end": "256289"
  },
  {
    "text": "certificate so you have HTTPS by default so that's another feature and then we",
    "start": "256289",
    "end": "262380"
  },
  {
    "text": "have a lot of feature under the hood something like buffered proxy which allows for more advanced request and",
    "start": "262380",
    "end": "268770"
  },
  {
    "text": "response transformations so that's all in the details so do check it out if you",
    "start": "268770",
    "end": "274380"
  },
  {
    "text": "are using Kong 1.2 already kongjui total does not have a lot of breaking changes",
    "start": "274380",
    "end": "279750"
  },
  {
    "text": "there are only two that I'm aware of and they're pretty easy to work around so the upgrade path is also very simple and",
    "start": "279750",
    "end": "286520"
  },
  {
    "text": "easy so with that we have we want to",
    "start": "286520",
    "end": "292470"
  },
  {
    "start": "290000",
    "end": "322000"
  },
  {
    "text": "talk about Cuba in essence this is a Cuban it is community we are talking about Kong is essentially agnostic to",
    "start": "292470",
    "end": "300960"
  },
  {
    "text": "the platform it runs on but we cater very heavily to the Cuban and its ecosystem because it allows you to do so",
    "start": "300960",
    "end": "307919"
  },
  {
    "text": "many so much automation so count integrates tightly with Cuban that is what it works across hybrid",
    "start": "307919",
    "end": "314849"
  },
  {
    "text": "infrastructures where you have multiple kinds of orchestration platforms deployed so let's get into what is an",
    "start": "314849",
    "end": "323639"
  },
  {
    "start": "322000",
    "end": "436000"
  },
  {
    "text": "ingress spec and what is an ingress controller on how kong fits into it so ingress is a specification that was",
    "start": "323639",
    "end": "330930"
  },
  {
    "text": "initially launched in about 2015 or 2016 and it has been stuck in the vivre and",
    "start": "330930",
    "end": "337139"
  },
  {
    "text": "beta 1 phase for about three or four years now we are moving into v1 with",
    "start": "337139",
    "end": "342780"
  },
  {
    "text": "Cuban it is 1.80 which is scheduled to be release later this quarter so that",
    "start": "342780",
    "end": "347970"
  },
  {
    "text": "transfer to vivo be one spec which will always be supported by Cuban artists there is also v2 spec that is being",
    "start": "347970",
    "end": "354360"
  },
  {
    "text": "developed by the community which is called service api's for the lack of metal naming so what are what is",
    "start": "354360",
    "end": "364199"
  },
  {
    "text": "ingress spec so ingress is a vendor-neutral way of defining access to",
    "start": "364199",
    "end": "369360"
  },
  {
    "text": "your services that run inside cuban artists so you might be having a few",
    "start": "369360",
    "end": "374729"
  },
  {
    "text": "hundred services running but you want a single point of entry through which you can control how is the traffic routed",
    "start": "374729",
    "end": "380909"
  },
  {
    "text": "how is the traffic authenticated or maybe have how do you want to log this",
    "start": "380909",
    "end": "386400"
  },
  {
    "text": "traffic monitor and connect metrics on it so ingress is essentially right now",
    "start": "386400",
    "end": "392340"
  },
  {
    "text": "HTTP based only so you can route traffic based on HTTP host headers or virtual",
    "start": "392340",
    "end": "400319"
  },
  {
    "text": "hosts and paths con can extend that and",
    "start": "400319",
    "end": "405990"
  },
  {
    "text": "some other windows also extend that quite a bit and that's what we'll be talking looking into it more",
    "start": "405990",
    "end": "411090"
  },
  {
    "text": "inglis has a lot of wide adoption majority of cloud providers also bring in their controllers and the community",
    "start": "411090",
    "end": "417750"
  },
  {
    "text": "has seen a huge number of controllers which conform to the spec and it makes it super easy to switch between the",
    "start": "417750",
    "end": "424710"
  },
  {
    "text": "different vendors so if you are running something else some other controller you can switch that out and put that other",
    "start": "424710",
    "end": "430229"
  },
  {
    "text": "controller in your Cuban it is cluster with relatively easy of easy migration",
    "start": "430229",
    "end": "436339"
  },
  {
    "start": "436000",
    "end": "538000"
  },
  {
    "text": "so let us look at the spec itself so this is a sample ingress resource based",
    "start": "436339",
    "end": "442830"
  },
  {
    "text": "on the spec as you can see it API troopas networking be one beta one the",
    "start": "442830",
    "end": "448529"
  },
  {
    "text": "kind is ingress we have the usual metadata type meta here so it is finance",
    "start": "448529",
    "end": "453689"
  },
  {
    "text": "api's and then we have the spec section so as you can see in the green what we",
    "start": "453689",
    "end": "461069"
  },
  {
    "text": "have is called referred to as the routing policy so what we are saying here is whenever the any request any",
    "start": "461069",
    "end": "468240"
  },
  {
    "text": "HTTP request that comes into it comes into our Inglis point if it has the host",
    "start": "468240",
    "end": "475800"
  },
  {
    "text": "header or the virtual host as example.com follow these two rules so the rules are",
    "start": "475800",
    "end": "482310"
  },
  {
    "text": "if slash bills if the request path starts with slash bills then send it to the bill service on ODT",
    "start": "482310",
    "end": "489389"
  },
  {
    "text": "which is running inside a Cuban it is cluster and then we have the slash orders endpoint which will be sent to",
    "start": "489389",
    "end": "495930"
  },
  {
    "text": "the holder service so this using the same respect you can essentially tie up",
    "start": "495930",
    "end": "502439"
  },
  {
    "text": "your micro services that are running inside Cuba notice and present them as one single EPR or maybe you have",
    "start": "502439",
    "end": "508770"
  },
  {
    "text": "different groups of micro services that you want to present differently so this spec allows you to define those policies",
    "start": "508770",
    "end": "516469"
  },
  {
    "text": "now as you can see here there is nothing specific to a vendor here you are not",
    "start": "516469",
    "end": "522779"
  },
  {
    "text": "specifying how to do this we are just declaring what we want the desired state which is what we refer to as declarative",
    "start": "522779",
    "end": "531839"
  },
  {
    "text": "configuration in Cuba notice me so kong",
    "start": "531839",
    "end": "540480"
  },
  {
    "start": "538000",
    "end": "680000"
  },
  {
    "text": "contry you notice is an English controller so right now we are here talking about comm but imagine any other",
    "start": "540480",
    "end": "546560"
  },
  {
    "text": "reverse proxy or a cloud load balancer that you can replace with calm and then",
    "start": "546560",
    "end": "552540"
  },
  {
    "text": "you have a controller component controllers are the way in Cuba it is to to manage configuration and reconcile",
    "start": "552540",
    "end": "559350"
  },
  {
    "text": "state so you specify a desired state and the controller takes that desired state to the target to the current state so it",
    "start": "559350",
    "end": "566220"
  },
  {
    "text": "matches the current state of the kubernetes cluster to match the desired state so as we can see here we have the",
    "start": "566220",
    "end": "573660"
  },
  {
    "text": "kubernetes api server on the left and we have a proxy running in this case kong",
    "start": "573660",
    "end": "579019"
  },
  {
    "text": "and the controller sits between those two components the kong or need any",
    "start": "579019",
    "end": "585600"
  },
  {
    "text": "other vendor does not understand what kubera is api server is talking about by d but you can put in a controller in",
    "start": "585600",
    "end": "593339"
  },
  {
    "text": "place and the controller essentially translates what is api server",
    "start": "593339",
    "end": "599370"
  },
  {
    "text": "configuration is into comm so the controller is what configures the proxy",
    "start": "599370",
    "end": "606449"
  },
  {
    "text": "the controller is not itself drums sending over the traffic it's just",
    "start": "606449",
    "end": "612540"
  },
  {
    "text": "configuring a proxy which then sends over this traffic into different services so in our case we have bins",
    "start": "612540",
    "end": "619140"
  },
  {
    "text": "orders an inventory so let's focus on the controller piece so this is a piece that is cuban it is",
    "start": "619140",
    "end": "626100"
  },
  {
    "text": "specific the proxy could be agnostic to cuba it is you know you can have loot",
    "start": "626100",
    "end": "631770"
  },
  {
    "text": "balancers in non humanities environments you can also have proxies running anywhere in the cloud but the controller",
    "start": "631770",
    "end": "639000"
  },
  {
    "text": "is what configures it and makes it specific to Cuba notice this also opens up the realm of possibilities where the",
    "start": "639000",
    "end": "646320"
  },
  {
    "text": "controller interacts with different CDs so imagine you using sort manager to do",
    "start": "646320",
    "end": "652110"
  },
  {
    "text": "certificate management or interacting with how to configure Prometheus matrix",
    "start": "652110",
    "end": "657240"
  },
  {
    "text": "and things like that so all the intelligence is essentially made into the controller the proxy software is has",
    "start": "657240",
    "end": "665640"
  },
  {
    "text": "the proxy capabilities so each of those two components are doing their own thing",
    "start": "665640",
    "end": "672020"
  },
  {
    "text": "so let's focus on on Kong for Cuban artists and what Kong's controller can",
    "start": "672020",
    "end": "677700"
  },
  {
    "text": "do we released a new version okay where it is in the wrist control 0.7 which is",
    "start": "677700",
    "end": "684090"
  },
  {
    "start": "680000",
    "end": "877000"
  },
  {
    "text": "compatible with the proxy version of contacts or compute on X so with 0.7 we",
    "start": "684090",
    "end": "691170"
  },
  {
    "text": "have released something called encrypted client credentials the credentials are",
    "start": "691170",
    "end": "696570"
  },
  {
    "text": "now stored in Cuban it is data store which is at CD and we use Cuban artists secrets to store these credentials so",
    "start": "696570",
    "end": "704520"
  },
  {
    "text": "you get encrypted credentials at rest that are loaded into condign a mcclee by the controller count it does not need a",
    "start": "704520",
    "end": "711840"
  },
  {
    "text": "database or anything so it's simply a deployment with the pod having two",
    "start": "711840",
    "end": "717870"
  },
  {
    "text": "containers the controller gets all these configurations and loads it up into comment and verify our client",
    "start": "717870",
    "end": "724350"
  },
  {
    "text": "connections and these can include anything from key authentication basic concatenation or using some form of",
    "start": "724350",
    "end": "731310"
  },
  {
    "text": "Earth or YDC any kind of authentication you can store the credentials and it's e",
    "start": "731310",
    "end": "736860"
  },
  {
    "text": "and concludes demo or you cannot even use your own identity provider is there",
    "start": "736860",
    "end": "744649"
  },
  {
    "text": "another feature is gr PC routing so Congress introduced something called a native gr PC routing",
    "start": "745460",
    "end": "751750"
  },
  {
    "text": "with plug-in support so essentially if you are using gr PC or gr PC then to",
    "start": "751750",
    "end": "757450"
  },
  {
    "text": "expose your services as GL PC instead of you know JSON over HTTP or other",
    "start": "757450",
    "end": "763780"
  },
  {
    "text": "protocols you can use again comm to expose this traffic and Kong is aware of",
    "start": "763780",
    "end": "769240"
  },
  {
    "text": "each and every G RPC request and traffic so you can route your G RPC request to",
    "start": "769240",
    "end": "776470"
  },
  {
    "text": "different services based on you know different gr PC methods so if one server is handling you know your inject rum",
    "start": "776470",
    "end": "783070"
  },
  {
    "text": "ingestion of events and the other server is the or service is pointing to reading",
    "start": "783070",
    "end": "790690"
  },
  {
    "text": "requests you can split those up at calm and then Kong in also run plugins so you get all previous matrix you get all",
    "start": "790690",
    "end": "797700"
  },
  {
    "text": "authentication schemes with Kong right out of the box so can keep your GL PC service fairly small just having the",
    "start": "797700",
    "end": "804820"
  },
  {
    "text": "business logic in there and Kong talks to GRP sieve in the client and with your",
    "start": "804820",
    "end": "809920"
  },
  {
    "text": "service so it's on its upstream and downstream both days another highly",
    "start": "809920",
    "end": "817810"
  },
  {
    "text": "requested feature was mutual TNS so a lot of customers are on in very sensitive environments and compliance is",
    "start": "817810",
    "end": "825190"
  },
  {
    "text": "a very important part of their infrastructure in such a case people want to encrypt even internal cluster",
    "start": "825190",
    "end": "832300"
  },
  {
    "text": "traffic and Kong allows you to do that using using mutual DNS so you can bring in your own certificate authority or you",
    "start": "832300",
    "end": "839020"
  },
  {
    "text": "can use any default one or use a fee for that and Kong notes that certificate up",
    "start": "839020",
    "end": "844510"
  },
  {
    "text": "and it can authenticate itself to your services and then on the service side you could probably have some",
    "start": "844510",
    "end": "849580"
  },
  {
    "text": "authorization taking place that only Kong can talk to it and you can prevent you know service to service",
    "start": "849580",
    "end": "854890"
  },
  {
    "text": "communication if you require to do so or you can use something like you know eesti or Kumar or any other sort of",
    "start": "854890",
    "end": "861520"
  },
  {
    "text": "mismatch to manage that is well for you so comp it's pretty nicely with that",
    "start": "861520",
    "end": "867160"
  },
  {
    "text": "ecosystem of source mesh as well Kong focus is on you know the north-south ingress traffic and you use",
    "start": "867160",
    "end": "873940"
  },
  {
    "text": "the base of this mesh solution for you that's that's the general overview of",
    "start": "873940",
    "end": "880370"
  },
  {
    "start": "877000",
    "end": "1085000"
  },
  {
    "text": "0.7 with that let's get started with a demo we're going to look at a few like",
    "start": "880370",
    "end": "886730"
  },
  {
    "text": "gr PC and some some rate limiting plugin and a little bit of admission controller",
    "start": "886730",
    "end": "892670"
  },
  {
    "text": "as well so with that let's get started so as you can see on my screen I have a",
    "start": "892670",
    "end": "900230"
  },
  {
    "text": "cube on it is cluster I'm using gke for this demo just because I've set that up",
    "start": "900230",
    "end": "905300"
  },
  {
    "text": "in my dev environment but you're free to use any cluster can use any Kuban it is cluster all you need is a support for a",
    "start": "905300",
    "end": "912830"
  },
  {
    "text": "service of type load balancer you can get away without that service as well if",
    "start": "912830",
    "end": "918410"
  },
  {
    "text": "we go if the need be you can use node old or any other you know any other",
    "start": "918410",
    "end": "924130"
  },
  {
    "text": "proxy software that you like to use so with that I'll go ahead and get started",
    "start": "924130",
    "end": "930170"
  },
  {
    "text": "and deploy Kong for kubernetes first so this handy bitly link here I'm just",
    "start": "930170",
    "end": "936380"
  },
  {
    "text": "going to apply that it's a single installation so with this we have created a few resources so let's take a",
    "start": "936380",
    "end": "942680"
  },
  {
    "text": "look at it so first we have created something called a namespace for Kong in which we don't know these specific",
    "start": "942680",
    "end": "949870"
  },
  {
    "text": "services and then we have for custom resources custom resources allow you to",
    "start": "949870",
    "end": "956390"
  },
  {
    "text": "define your own API on top of cube or at is api's and we use these custom resources to extend calm extend the",
    "start": "956390",
    "end": "963620"
  },
  {
    "text": "ingress specification so these are things that are specific to Kong but are not present in the interest pacification",
    "start": "963620",
    "end": "969460"
  },
  {
    "text": "now ingress resource is also fairly narrow there's a general consensus on it and as I said earlier in working on a v2",
    "start": "969460",
    "end": "976520"
  },
  {
    "text": "spec as a cuban artists community in the Signet world channel so if you're interested please come on board in the",
    "start": "976520",
    "end": "983960"
  },
  {
    "text": "second network channels and you can find like a whole new set of EDIS that are being designed for that next we create",
    "start": "983960",
    "end": "991490"
  },
  {
    "text": "some Arabic resources these essentially allow Kong to talk to the kubernetes api",
    "start": "991490",
    "end": "998810"
  },
  {
    "text": "server so as we saw there is calm there is the controller there is the API sir so the controller gets these",
    "start": "998810",
    "end": "1005800"
  },
  {
    "text": "permissions of no it wants to list all the in the specification it wants to",
    "start": "1005800",
    "end": "1010950"
  },
  {
    "text": "with the boards are and things like that and then we have a config map for some",
    "start": "1010950",
    "end": "1016500"
  },
  {
    "text": "defaults or road blocks which can which is not strictly required and then we have the services so we have two",
    "start": "1016500",
    "end": "1022589"
  },
  {
    "text": "services to count proxy which is of service of pipe load balancer so as you",
    "start": "1022589",
    "end": "1033298"
  },
  {
    "text": "can see here we have the service of type load balancer and because we are running in g ke g k automatically assigns a",
    "start": "1033299",
    "end": "1040020"
  },
  {
    "text": "cluster ID an external IP address and we also have a kong validation of a book",
    "start": "1040020",
    "end": "1045058"
  },
  {
    "text": "it's a service but we are going to install the web hook next so if you take a note of this IP address you can",
    "start": "1045059",
    "end": "1051870"
  },
  {
    "text": "actually hit the IP address from your box as well this is the public IP",
    "start": "1051870",
    "end": "1056910"
  },
  {
    "text": "address i am just going to set an environment variable so that you can use that later on so if i proxy send a",
    "start": "1056910",
    "end": "1066179"
  },
  {
    "text": "request here we can see that kong responds back with a request and it responds back with a 404 nothing found",
    "start": "1066179",
    "end": "1073830"
  },
  {
    "text": "this is because we do not have anything on people in our cluster so if we see we",
    "start": "1073830",
    "end": "1078960"
  },
  {
    "text": "do not have any interest resources kong does not know how to send this request for next what I'm going to do is I'm",
    "start": "1078960",
    "end": "1086820"
  },
  {
    "start": "1085000",
    "end": "1199000"
  },
  {
    "text": "going to also set up something called an admission controller so let me show you",
    "start": "1086820",
    "end": "1092429"
  },
  {
    "text": "the script that I'm running so I'm just using open SSL client to generate a self-signed certificate for the kong",
    "start": "1092429",
    "end": "1099720"
  },
  {
    "text": "validation of a book service then I'm creating a Cuban it has secret secret of",
    "start": "1099720",
    "end": "1105210"
  },
  {
    "text": "type or TLS secret once I have that I am enabling the admission of the book so we",
    "start": "1105210",
    "end": "1112260"
  },
  {
    "text": "have the kind of validating admission of a book and we are going to validate each consumer each come plug-in that are",
    "start": "1112260",
    "end": "1120000"
  },
  {
    "text": "being created or updated so let's go ahead and try to set that up so we",
    "start": "1120000",
    "end": "1125429"
  },
  {
    "text": "generated the self signed certificate and then we create a secret we have",
    "start": "1125429",
    "end": "1131880"
  },
  {
    "text": "dated the deployment to use the self signed certificate and private key and then we finally update the validation",
    "start": "1131880",
    "end": "1138600"
  },
  {
    "text": "webbook so this makes it super hard for users to shoot themselves in the foot",
    "start": "1138600",
    "end": "1144270"
  },
  {
    "text": "so if you're making any mistakes no while configuring it's super easy to not",
    "start": "1144270",
    "end": "1150000"
  },
  {
    "text": "indent things correctly or something just goes here this will catch most of",
    "start": "1150000",
    "end": "1155400"
  },
  {
    "text": "those things all right so we have got",
    "start": "1155400",
    "end": "1162840"
  },
  {
    "text": "our Cuban adders ingress setup using con next I'm going to install a G RPC",
    "start": "1162840",
    "end": "1169410"
  },
  {
    "text": "service called G on PC bin this is a pretty straightforward deployment we are",
    "start": "1169410",
    "end": "1177720"
  },
  {
    "text": "deploying a service of type cluster IP so it's an internal service well G RPC and then we have a single",
    "start": "1177720",
    "end": "1184679"
  },
  {
    "text": "part of the G RPC service running so this service understands G RPC protocol on port 9000 one so let's go ahead and",
    "start": "1184679",
    "end": "1194550"
  },
  {
    "text": "see how we can expose this G RPC service to the outside world so here I am",
    "start": "1194550",
    "end": "1200010"
  },
  {
    "start": "1199000",
    "end": "1332000"
  },
  {
    "text": "creating an ingress resource now of name demo we have the slash path so basically",
    "start": "1200010",
    "end": "1207000"
  },
  {
    "text": "we are not specifying a host header so every request that comes in we wanted to go to the G RPC bin service now let's go",
    "start": "1207000",
    "end": "1214740"
  },
  {
    "text": "ahead and create this ingress resource but now one thing to note is ingress is",
    "start": "1214740",
    "end": "1220920"
  },
  {
    "text": "HTTP by default we do not know that it's a G RPC service around so we use the",
    "start": "1220920",
    "end": "1227940"
  },
  {
    "text": "make we make the use of annotations here so here specifying a set of protocols essentially telling Kong that treat the",
    "start": "1227940",
    "end": "1235530"
  },
  {
    "text": "traffic as GRP see any traffic that comes from the client you should treat that as G RPC so we update the client",
    "start": "1235530",
    "end": "1243929"
  },
  {
    "text": "and we also put an annotation on the service resource to say that any any",
    "start": "1243929",
    "end": "1249660"
  },
  {
    "text": "service that talks to the service please use the protocol gr pc-jr pcs in this",
    "start": "1249660",
    "end": "1254820"
  },
  {
    "text": "case since that's what I have configured to services so we have configured that",
    "start": "1254820",
    "end": "1260460"
  },
  {
    "text": "and now let's go ahead and hit the service so here I'm using something",
    "start": "1260460",
    "end": "1266100"
  },
  {
    "text": "called G RPC code which is very similar to Kolber for G but it makes it super easy to talk to G RPC services so I'm",
    "start": "1266100",
    "end": "1274260"
  },
  {
    "text": "calling the service hello service and the method say hello and as you can see I'm using the",
    "start": "1274260",
    "end": "1279950"
  },
  {
    "text": "insecure flag because we have not set up any TLS certificate so we use a self-signed certificate and then I'm",
    "start": "1279950",
    "end": "1286730"
  },
  {
    "text": "sending it to the four four three so as you can see the method resolved",
    "start": "1286730",
    "end": "1293000"
  },
  {
    "text": "correctly you say using the RPC method and then we have the response header",
    "start": "1293000",
    "end": "1299690"
  },
  {
    "text": "received as we can see the service system type G RPC and the response is basically echoing the same content back",
    "start": "1299690",
    "end": "1307600"
  },
  {
    "text": "so instead let's go hello CLC community",
    "start": "1307600",
    "end": "1313810"
  },
  {
    "text": "and we can see hello conciencia community here so we have got G RPC request going back",
    "start": "1313810",
    "end": "1319850"
  },
  {
    "text": "and forth which is nice you can just expose the RPC traffic but then what does this bias because we could do this",
    "start": "1319850",
    "end": "1328040"
  },
  {
    "text": "just by using a service of type load balancer why use increase so for that what we have got here is how you can",
    "start": "1328040",
    "end": "1335720"
  },
  {
    "start": "1332000",
    "end": "1528000"
  },
  {
    "text": "extend your ingress so how we can extend and do more things once you have exposed traffic via calm so here we are going to",
    "start": "1335720",
    "end": "1345320"
  },
  {
    "text": "create a custom resource called comm plug-in let's go ahead and create that and that returns an error now as we can",
    "start": "1345320",
    "end": "1354080"
  },
  {
    "text": "see here we you see that it's admission webhook failed and it says that foo is",
    "start": "1354080",
    "end": "1360860"
  },
  {
    "text": "an unknown field so what happened is this was intentional that I have put in",
    "start": "1360860",
    "end": "1366770"
  },
  {
    "text": "a full config field which is not a valid configuration for this plug-in plugins in conger essentially a way to extend",
    "start": "1366770",
    "end": "1373700"
  },
  {
    "text": "calm you can create any amount of custom plugins so there are a lot of plugins already that come bundled in come log",
    "start": "1373700",
    "end": "1380930"
  },
  {
    "text": "Lee being one of those so you can log to elastic so you can use proven D or whatever is your logging infrastructure",
    "start": "1380930",
    "end": "1388090"
  },
  {
    "text": "but let's say you were using Laurie so we are going to delete this thoroughness line and create the plug-in now you",
    "start": "1388090",
    "end": "1395750"
  },
  {
    "text": "created this plug-in inside cube or netis but we have not configured it to come to tell it then to run this plugin",
    "start": "1395750",
    "end": "1403690"
  },
  {
    "text": "so now we are going to go ahead",
    "start": "1403690",
    "end": "1407889"
  },
  {
    "text": "we are going to add another annotation and instruct Kong to execute the log",
    "start": "1411149",
    "end": "1419490"
  },
  {
    "text": "lip-locking whenever any requests matches this any of these rules so if we",
    "start": "1419490",
    "end": "1424590"
  },
  {
    "text": "find out just a single rule but any of the rules that are matched to which in this increase if ocation you won't come",
    "start": "1424590",
    "end": "1431309"
  },
  {
    "text": "to run the nog limit alright so configured that now let me",
    "start": "1431309",
    "end": "1438889"
  },
  {
    "text": "try to see if I can open the log window",
    "start": "1438889",
    "end": "1445039"
  },
  {
    "text": "[Music] alright so we have I have this log li",
    "start": "1446400",
    "end": "1452039"
  },
  {
    "text": "window up here and I'm going to search for last ten minutes so as you can see",
    "start": "1452039",
    "end": "1457860"
  },
  {
    "text": "there are no no events anything at all this is just a simple trial account from",
    "start": "1457860",
    "end": "1462869"
  },
  {
    "text": "logging I'm going to go ahead and send the request now so you're going to do",
    "start": "1462869",
    "end": "1467990"
  },
  {
    "text": "Jian PC curve hello CNCs community so as you can see we did not have any latency",
    "start": "1467990",
    "end": "1474830"
  },
  {
    "text": "increasing latency Congress Pro Kong's did not inject any latency the upstream to 12 milliseconds to execute the",
    "start": "1474830",
    "end": "1481289"
  },
  {
    "text": "request we got the response back now if everything is good and demo gods are",
    "start": "1481289",
    "end": "1486860"
  },
  {
    "text": "kind to me I should see a request here so Cong batches these or sometimes it",
    "start": "1486860",
    "end": "1492450"
  },
  {
    "text": "can take a while but as we can see we have got a request here and we can see",
    "start": "1492450",
    "end": "1498450"
  },
  {
    "text": "all the details in here and this is configurable where what are the headers that were sent whatever the request",
    "start": "1498450",
    "end": "1504480"
  },
  {
    "text": "latency is responsive agencies which have centered and if you this is the",
    "start": "1504480",
    "end": "1510029"
  },
  {
    "text": "wrong message and we can see that the upstream URL was hello service slash say",
    "start": "1510029",
    "end": "1515249"
  },
  {
    "text": "hello so you can get all kinds of logging here so you do not have do not have to even implement logging in your",
    "start": "1515249",
    "end": "1521580"
  },
  {
    "text": "micro services you get that out of the box with calm all right so that's",
    "start": "1521580",
    "end": "1529009"
  },
  {
    "start": "1528000",
    "end": "1945000"
  },
  {
    "text": "proxying G RPC traffic and procs and how to use plugins on G RPC traffic now",
    "start": "1529009",
    "end": "1536100"
  },
  {
    "text": "let's take a look at what else we can do so let's look at how we can take an API",
    "start": "1536100",
    "end": "1541409"
  },
  {
    "text": "that we have developed and how we can expose and do like have different tearing",
    "start": "1541409",
    "end": "1546750"
  },
  {
    "text": "capabilities so yeah I'm deploying something on HTTP bin which is a pretty popular you know just an equal service around",
    "start": "1546750",
    "end": "1552660"
  },
  {
    "text": "HTTP I'm going to create to increase resources so here I'm creating an HTTP",
    "start": "1552660",
    "end": "1559410"
  },
  {
    "text": "being free tire here it's the path starts with slash free and all the",
    "start": "1559410",
    "end": "1564960"
  },
  {
    "text": "traffic is sent to the HTTP bin service and then I have paid tier where the",
    "start": "1564960",
    "end": "1572520"
  },
  {
    "text": "slash paid all the requests starting with slash page and also get it sent to the same service so we have the same",
    "start": "1572520",
    "end": "1578070"
  },
  {
    "text": "service but we have two endpoints so if I do slash gate of slash free slash",
    "start": "1578070",
    "end": "1585000"
  },
  {
    "text": "status 200 they get back a response the request is proxy viacom the server is",
    "start": "1585000",
    "end": "1590280"
  },
  {
    "text": "HTTP bin and if I sent the same request to the paid endpoint I get the exact",
    "start": "1590280",
    "end": "1596730"
  },
  {
    "text": "same response so you have two endpoints but they are being processed by the exact same service now let's start",
    "start": "1596730",
    "end": "1602820"
  },
  {
    "text": "introducing differences between the free and the paid tier excuse me the first",
    "start": "1602820",
    "end": "1610020"
  },
  {
    "text": "thing I am going to do is I'm going to try to use key authentication on the paid tier so free tier isn't be open to",
    "start": "1610020",
    "end": "1615270"
  },
  {
    "text": "the world you don't want any kind of authentication limits on that for now and we introduce key authentication so I",
    "start": "1615270",
    "end": "1622860"
  },
  {
    "text": "created a plug-in called key odd so the plug-in is key art so you have two key",
    "start": "1622860",
    "end": "1627900"
  },
  {
    "text": "authentication and the name is HTTP be knocked next and go ahead and edit a",
    "start": "1627900",
    "end": "1634550"
  },
  {
    "text": "tiering ingress resource and a comp to execute a plug-in as we did before with",
    "start": "1634550",
    "end": "1641850"
  },
  {
    "text": "log we plug in this time we are going to enable an authentication plan able the",
    "start": "1641850",
    "end": "1647850"
  },
  {
    "text": "plug-in and now if I send a request to the patron point kong returns back with",
    "start": "1647850",
    "end": "1655380"
  },
  {
    "text": "an unauthorized 401 unauthorized because we did not send an API key so how do we",
    "start": "1655380",
    "end": "1661620"
  },
  {
    "text": "get the API key now so for that we create something called a secret in",
    "start": "1661620",
    "end": "1666720"
  },
  {
    "text": "Cubao notice so here if specifying here the credential type is key authentication and the key here is my",
    "start": "1666720",
    "end": "1673320"
  },
  {
    "text": "super secret of course this is not the most secure way of doing it because - astray but let's go ahead and create",
    "start": "1673320",
    "end": "1680780"
  },
  {
    "text": "the secret so we created a Cuban at a secret given encrypt and store the since",
    "start": "1680780",
    "end": "1685970"
  },
  {
    "text": "into each database and then we have consumer of comm so creating a consumer",
    "start": "1685970",
    "end": "1691610"
  },
  {
    "text": "Harry and the credentials it has is Harry API key this Harry API key essentially is a reference to this is",
    "start": "1691610",
    "end": "1699860"
  },
  {
    "text": "Cuban at a secret alright so let's go ahead and create that secret and now",
    "start": "1699860",
    "end": "1707210"
  },
  {
    "text": "let's go ahead and use that API key to authenticate against tracked API so as",
    "start": "1707210",
    "end": "1713900"
  },
  {
    "text": "you can see now we are getting a response 200 201 so if I do to accept it",
    "start": "1713900",
    "end": "1720800"
  },
  {
    "text": "will go back that if I use the wrong API key Gong will return back with an authorized so this is a key",
    "start": "1720800",
    "end": "1727820"
  },
  {
    "text": "authentication example but you could do an ID be as well all right so we have differentiated",
    "start": "1727820",
    "end": "1734809"
  },
  {
    "text": "ourselves so that we have a free endpoint and a fade in point what else",
    "start": "1734809",
    "end": "1741440"
  },
  {
    "text": "could we do more so let's do a rate limiting rate limiting is something that",
    "start": "1741440",
    "end": "1746690"
  },
  {
    "text": "almost anybody uses it's like the basic defense mechanism so that not somebody",
    "start": "1746690",
    "end": "1752120"
  },
  {
    "text": "cannot like just simply do us you although it's not foolproof but it's a basic one so we have issued in between",
    "start": "1752120",
    "end": "1759650"
  },
  {
    "text": "free tier plug-in resource and here we are saying anybody who accesses the",
    "start": "1759650",
    "end": "1766280"
  },
  {
    "text": "service from the same ip address can access it only five times like I will go",
    "start": "1766280",
    "end": "1772130"
  },
  {
    "text": "ahead and add this plug-in and add we did this before I'm going to annotate",
    "start": "1772130",
    "end": "1779050"
  },
  {
    "text": "our ingress resource so any request that matches slash free is sent we should be",
    "start": "1779050",
    "end": "1785240"
  },
  {
    "text": "Ben but before sending that request to the service we're going to execute login",
    "start": "1785240",
    "end": "1794559"
  },
  {
    "text": "so we have to plug in configured now and",
    "start": "1795309",
    "end": "1800410"
  },
  {
    "text": "we can see that kong is now started to inject rate-limiting headers going to",
    "start": "1800410",
    "end": "1806270"
  },
  {
    "text": "expose the proxy IP again so if anybody in the audience wants to test it out on your turn",
    "start": "1806270",
    "end": "1811310"
  },
  {
    "text": "you can send the request to this public IP address which will be valid for the",
    "start": "1811310",
    "end": "1816950"
  },
  {
    "text": "duration of this webinar and you can test it out yourself how we are enforcing a rate limit so if I send",
    "start": "1816950",
    "end": "1823580"
  },
  {
    "text": "enough requests as I can see I get a four to nine basically Kong is saying",
    "start": "1823580",
    "end": "1829430"
  },
  {
    "text": "you have at your API limit you need to try back again later in a minute so we",
    "start": "1829430",
    "end": "1835220"
  },
  {
    "text": "gave five requests per minute to the free tire now let's go give ten requests",
    "start": "1835220",
    "end": "1841100"
  },
  {
    "text": "to output for paid customers so you're saying that this time you lament based on consumer a consumer is essentially",
    "start": "1841100",
    "end": "1848320"
  },
  {
    "text": "somebody who has valid authentication scheme so in this case we have the API",
    "start": "1848320",
    "end": "1854240"
  },
  {
    "text": "key and we are giving them ten requests per minute so we have created the",
    "start": "1854240",
    "end": "1860360"
  },
  {
    "text": "resource now let's ask to execute this plug-in then the request matches slash",
    "start": "1860360",
    "end": "1866900"
  },
  {
    "text": "page and as you can see we already have",
    "start": "1866900",
    "end": "1879890"
  },
  {
    "text": "one plug-in defined here so we're already authentication authenticating the same point so any request that comes",
    "start": "1879890",
    "end": "1885830"
  },
  {
    "text": "first needs to be authenticated we will also ask um to execute another plugin so",
    "start": "1885830",
    "end": "1891200"
  },
  {
    "text": "can execute n number of plugins that you want to and enable the authentication",
    "start": "1891200",
    "end": "1899120"
  },
  {
    "text": "them all right so we have authentication enabled and we have rate limiting enabled now when I make this request as",
    "start": "1899120",
    "end": "1907490"
  },
  {
    "text": "you can see I get nine requests that are remaining",
    "start": "1907490",
    "end": "1913540"
  },
  {
    "text": "excuse me so we have got a different rate limit for the free end point and a",
    "start": "1914200",
    "end": "1919550"
  },
  {
    "text": "different rate limit for our paid in point this is awesome so you took a service we deployed it into cube or",
    "start": "1919550",
    "end": "1926120"
  },
  {
    "text": "lattice and without writing any code just configuration you're exploiting the",
    "start": "1926120",
    "end": "1931400"
  },
  {
    "text": "power of Khan by using authentication rate limiting you are also logging the GRP see traffic ring so they are kissy traffic here is",
    "start": "1931400",
    "end": "1938090"
  },
  {
    "text": "still going through so your Crocs in G RPC HTTP all the traffic just using a single service",
    "start": "1938090",
    "end": "1944649"
  },
  {
    "text": "now as a bonus let's go ahead and see where do we want a golden tier so we",
    "start": "1944649",
    "end": "1950690"
  },
  {
    "start": "1945000",
    "end": "2090000"
  },
  {
    "text": "have some special customers who are paying us a lot more money and we want to have them we want them to have a",
    "start": "1950690",
    "end": "1957110"
  },
  {
    "text": "higher rate limit so here I'm creating for gold at tier plugin and I'm giving",
    "start": "1957110",
    "end": "1963830"
  },
  {
    "text": "them 100 requests per minute so almost of our customers get ten but our special",
    "start": "1963830",
    "end": "1969679"
  },
  {
    "text": "user will get hundred requests so I'm going to create another authentication",
    "start": "1969679",
    "end": "1975200"
  },
  {
    "text": "credential so here we have an API key called user one - key so let's go ahead",
    "start": "1975200",
    "end": "1982580"
  },
  {
    "text": "and create that coupon at a secret and correspondingly we will create a",
    "start": "1982580",
    "end": "1988210"
  },
  {
    "text": "consumer as well so creating consumer and on the consumer",
    "start": "1988210",
    "end": "1995059"
  },
  {
    "text": "resource this time we are adding the plug-in HTTP bin gold here now we will",
    "start": "1995059",
    "end": "2001419"
  },
  {
    "text": "edit the ingress specification of the plate here and we will ask Kong to run",
    "start": "2001419",
    "end": "2007990"
  },
  {
    "text": "yet another plugin so Kong is now going",
    "start": "2007990",
    "end": "2013419"
  },
  {
    "text": "to authenticate the request and then it is going to impose rate limit based on which type of consumer you are so if you",
    "start": "2013419",
    "end": "2019510"
  },
  {
    "text": "are a gold tier consumer or a regular consumer alright so I've got that in",
    "start": "2019510",
    "end": "2024519"
  },
  {
    "text": "place and then if I execute the request I see that the rate limit is hundred but",
    "start": "2024519",
    "end": "2033940"
  },
  {
    "text": "if I use my old credential I can see",
    "start": "2033940",
    "end": "2041200"
  },
  {
    "text": "that I get ten requests per minute and if I use the free end point I get five",
    "start": "2041200",
    "end": "2047139"
  },
  {
    "text": "requests per minute so you can have different kinds of rate limiting and you can also impose other policies where you",
    "start": "2047139",
    "end": "2053830"
  },
  {
    "text": "know you need to have an authorization as well when somebody can access a",
    "start": "2053830",
    "end": "2058929"
  },
  {
    "text": "service based on a given on authorization or arbok resource only so that one is as possible as well so got",
    "start": "2058929",
    "end": "2066790"
  },
  {
    "text": "the GRP C traffic we have got logging and monitoring in place we have got authentication rate limiting in place on",
    "start": "2066790",
    "end": "2073330"
  },
  {
    "text": "just using a plug-in ecosystem in Kong and all of this is open source so you",
    "start": "2073330",
    "end": "2079210"
  },
  {
    "text": "can try it out yourself so that's all that I have for the demo and these are",
    "start": "2079210",
    "end": "2085720"
  },
  {
    "text": "some of the features that we introduced in 0.7 there are a whole lot of other",
    "start": "2085720",
    "end": "2093610"
  },
  {
    "start": "2090000",
    "end": "2199000"
  },
  {
    "text": "features that are out there so we do a lot of load balancing scheme so Kong can",
    "start": "2093610",
    "end": "2099550"
  },
  {
    "text": "act as a load balancer so essentially you need a single node balance of four Kong and you do not need any other load",
    "start": "2099550",
    "end": "2107320"
  },
  {
    "text": "balancer for your services you expose a single load balancer all traffic goes where that load balancer and you can",
    "start": "2107320",
    "end": "2112630"
  },
  {
    "text": "impose all kinds of policies at one single point of ingress and you can do",
    "start": "2112630",
    "end": "2118270"
  },
  {
    "text": "health checking you can route based on different protocols as well so you can you know route based on G RPC methods",
    "start": "2118270",
    "end": "2124870"
  },
  {
    "text": "you can do routing based on Zr PC or HTTP headers or methods so that's based",
    "start": "2124870",
    "end": "2131380"
  },
  {
    "text": "on routing and load balancing oh I said that's the basic essence of ingress and we extend ingress using plugins so we",
    "start": "2131380",
    "end": "2138550"
  },
  {
    "text": "saw authentication and rate limiting we can do caching you can do request transformations so you can regulating",
    "start": "2138550",
    "end": "2144850"
  },
  {
    "text": "from v1 to v2 API you can do you can also use Prometheus no or any other data",
    "start": "2144850",
    "end": "2153400"
  },
  {
    "text": "dog if you want to use for matrix and analysis of your API is in themselves you can do that you can also do salt",
    "start": "2153400",
    "end": "2160780"
  },
  {
    "text": "management in external DNS so essentially in this demo we did not have any domain defined because we do not set",
    "start": "2160780",
    "end": "2167170"
  },
  {
    "text": "up DNS but if you define that we can use that as well so you have pretty much",
    "start": "2167170",
    "end": "2174010"
  },
  {
    "text": "covered and it's super extensible so you can even write your own plug-in and go and extend okay maybe I want this",
    "start": "2174010",
    "end": "2180100"
  },
  {
    "text": "different weird authentication scheme that my company manages or maybe I want to do this different type of",
    "start": "2180100",
    "end": "2187740"
  },
  {
    "text": "transformation of my API request before they are sent to upstream what I want to do some additional validation of the",
    "start": "2187740",
    "end": "2193750"
  },
  {
    "text": "request before it's entered all that's pretty much easy impossible alright",
    "start": "2193750",
    "end": "2199870"
  },
  {
    "start": "2199000",
    "end": "2297000"
  },
  {
    "text": "that's that's all that I have today for you a few important resources if you",
    "start": "2199870",
    "end": "2205090"
  },
  {
    "text": "could if you want to take a pitch of each take a note of this slide the first resource is",
    "start": "2205090",
    "end": "2210640"
  },
  {
    "text": "you can install Kong just with one click on your kubernetes cluster it could be",
    "start": "2210640",
    "end": "2216519"
  },
  {
    "text": "mini queue kind or any cloud provider or a metal cluster the second is a very",
    "start": "2216519",
    "end": "2222099"
  },
  {
    "text": "important link Kong elapsed or die o / keyboard notice this is essentially sort",
    "start": "2222099",
    "end": "2228460"
  },
  {
    "text": "of a category thing but you get all you can practice how to use Kong in Cuba",
    "start": "2228460",
    "end": "2235269"
  },
  {
    "text": "notice in your browser itself so this is the custom build environment where we have steps and we also have a Cupid's",
    "start": "2235269",
    "end": "2241359"
  },
  {
    "text": "cluster running in the cloud for you you can just use that to get a feel of how to use Kong you can even get this demo",
    "start": "2241359",
    "end": "2247749"
  },
  {
    "text": "there as well if piece together this demo based on all the exercises that are available at Kong labs that are your",
    "start": "2247749",
    "end": "2254769"
  },
  {
    "text": "slash keyboardist and if you have any questions drop into the Kong channel in Cuban it is slack server all of our",
    "start": "2254769",
    "end": "2261430"
  },
  {
    "text": "maintenance already active there so if you don't need to pick up so you have any questions you can ask us questions",
    "start": "2261430",
    "end": "2267700"
  },
  {
    "text": "right awesome thank you very much Harry",
    "start": "2267700",
    "end": "2273430"
  },
  {
    "text": "so got some questions here does the host example.com in your example refer to the",
    "start": "2273430",
    "end": "2281289"
  },
  {
    "text": "API server or the ingress controller and can you repeat that question once",
    "start": "2281289",
    "end": "2287619"
  },
  {
    "text": "again does the host example calm and you're this came in very early on in the",
    "start": "2287619",
    "end": "2293799"
  },
  {
    "text": "presentation so probably one of your first slides does the host example.com",
    "start": "2293799",
    "end": "2299380"
  },
  {
    "start": "2297000",
    "end": "2535000"
  },
  {
    "text": "and your example refer to the API server or the ingress controller it reverses",
    "start": "2299380",
    "end": "2305349"
  },
  {
    "text": "the ingress controller so imagine you have a PIL dot example.com you have to",
    "start": "2305349",
    "end": "2311170"
  },
  {
    "text": "dot example.com and yet you're hosting all these services inside your keyboard is cluster and you want to route to",
    "start": "2311170",
    "end": "2317950"
  },
  {
    "text": "different services based on the host or based on the DNS name of the zones that's what this host enforced so it's",
    "start": "2317950",
    "end": "2324549"
  },
  {
    "text": "got nothing to do with if the I saw one it says the request host it's used for",
    "start": "2324549",
    "end": "2330390"
  },
  {
    "text": "yeah it's basically if like a label then it says send traffic here and then the",
    "start": "2330390",
    "end": "2336250"
  },
  {
    "text": "pass then you know specify where else to send it cool all right so let's see one",
    "start": "2336250",
    "end": "2342970"
  },
  {
    "text": "more question and can Kong be configured with openshift for visits sufficient officially supported openshift for",
    "start": "2342970",
    "end": "2351099"
  },
  {
    "text": "support is yeah it is supported kong supports the ingress specification in",
    "start": "2351099",
    "end": "2356799"
  },
  {
    "text": "openshift openshift also has something called openshift route and that what's something yeah so it's important to",
    "start": "2356799",
    "end": "2369910"
  },
  {
    "text": "distinguish ingress from route and the openshift land routes came along before ingress is existed in kubernetes so",
    "start": "2369910",
    "end": "2376420"
  },
  {
    "text": "there is a distinction there that needs to be specified very clearly you must use ingress --is with kubernetes or with",
    "start": "2376420",
    "end": "2382329"
  },
  {
    "text": "in columns bunch of rounds are making their way into cuba at as ecosystem in",
    "start": "2382329",
    "end": "2390220"
  },
  {
    "text": "something called ingress v2 so they're very similar to how design that's that's",
    "start": "2390220",
    "end": "2396700"
  },
  {
    "text": "still in the works in the works yes under development all right unless",
    "start": "2396700",
    "end": "2402400"
  },
  {
    "text": "there's any other questions that's that's the last of them is there anything else you'd like to add",
    "start": "2402400",
    "end": "2408150"
  },
  {
    "text": "you have some questions in the chat oh let's see sorry oh",
    "start": "2408500",
    "end": "2414250"
  },
  {
    "text": "how does typical architecture look like with Kong if we have to deploy API gateways it's a broad question but you",
    "start": "2415190",
    "end": "2426200"
  },
  {
    "text": "usually just have need to deploy the ape count itself is an API gateway and it",
    "start": "2426200",
    "end": "2431660"
  },
  {
    "text": "also does the ingress so essentially hitting two birds with one stone in this case so you deploy the ingress and you",
    "start": "2431660",
    "end": "2439130"
  },
  {
    "text": "also get epi8 features right out of the box so you don't need to separate installations you just need one make",
    "start": "2439130",
    "end": "2446900"
  },
  {
    "text": "sense another question will the documentation of plugins include",
    "start": "2446900",
    "end": "2452119"
  },
  {
    "text": "examples currently is still going to the docs and github and is there a blog on",
    "start": "2452119",
    "end": "2458829"
  },
  {
    "text": "converting from kong credential to secrets good questions yeah so con",
    "start": "2458829",
    "end": "2465200"
  },
  {
    "text": "credentials are something that existed before he did encrypt its secrets we do",
    "start": "2465200",
    "end": "2471020"
  },
  {
    "text": "not have like a ready script for you to do that but if you open a github issue",
    "start": "2471020",
    "end": "2477470"
  },
  {
    "text": "or drop in to the channel then we do not have that regarding how to write plugins",
    "start": "2477470",
    "end": "2483619"
  },
  {
    "text": "and the configuration the dogs are on Doc's not Kong hq.com so you can figure",
    "start": "2483619",
    "end": "2488660"
  },
  {
    "text": "out which properties of plugins are supported now and then you can just so",
    "start": "2488660",
    "end": "2494900"
  },
  {
    "text": "there is nothing no difference between how you configure plugins you know using JSON or yeah man they're exactly the",
    "start": "2494900",
    "end": "2501770"
  },
  {
    "text": "same there is no difference at all so that should be pretty straightforward oh I'm hoping there's a typo in this",
    "start": "2501770",
    "end": "2509240"
  },
  {
    "text": "Rashid if if there isn't I pologize how would Kong work with the controller and",
    "start": "2509240",
    "end": "2515030"
  },
  {
    "text": "API server with regards to high availability of pods high-heels",
    "start": "2515030",
    "end": "2522800"
  },
  {
    "text": "api sling what did send me right like how would kong work with the controller",
    "start": "2522800",
    "end": "2528890"
  },
  {
    "text": "and the api server with regards to high availability of the pods well okay I think I understand what to like I guess",
    "start": "2528890",
    "end": "2535329"
  },
  {
    "start": "2535000",
    "end": "2640000"
  },
  {
    "text": "does does this say hey all of a sudden I need more stuff like I like I'm saturated those is there any",
    "start": "2535329",
    "end": "2541360"
  },
  {
    "text": "eh a horizontal scaling and calm I don't think so no no it's pretty simple so on",
    "start": "2541360",
    "end": "2547660"
  },
  {
    "text": "the API server side you can deploy more API server parts incubators for that hi",
    "start": "2547660",
    "end": "2553450"
  },
  {
    "text": "Evelyn it is recommended when the Kong side as you can see in this diagram which I did I liked before you have multiple parts",
    "start": "2553450",
    "end": "2560920"
  },
  {
    "text": "of conquering and each has its own controller and comm you can have a different economic strategy as well but",
    "start": "2560920",
    "end": "2566110"
  },
  {
    "text": "this is super simple way of doing it where you deploy n number of comforts to scale out horizontally and each part is",
    "start": "2566110",
    "end": "2572530"
  },
  {
    "text": "configured using the controller that is running as a side car so you have like even if a machine dies or if what gets",
    "start": "2572530",
    "end": "2578950"
  },
  {
    "text": "stuck that's fine the other requests then go yeah and you put a load balancer",
    "start": "2578950",
    "end": "2588610"
  },
  {
    "text": "in front of all these con parts balanced across cool all right",
    "start": "2588610",
    "end": "2599040"
  },
  {
    "text": "I'm looking through chat I am not seen in the additional questions I haven't",
    "start": "2599040",
    "end": "2604990"
  },
  {
    "text": "already been answered nothing left in QA so I think that's a",
    "start": "2604990",
    "end": "2611560"
  },
  {
    "text": "wrap skirt so thank you very much for a great presentation if if you're looking",
    "start": "2611560",
    "end": "2619870"
  },
  {
    "text": "for the webinar in the future go to CN CF dot io slash webinars the slides and",
    "start": "2619870",
    "end": "2625000"
  },
  {
    "text": "the video will be up there once it's available and other than that have a",
    "start": "2625000",
    "end": "2630130"
  },
  {
    "text": "great day enjoy the rest of your week thank you bye bye bye everyone",
    "start": "2630130",
    "end": "2638619"
  }
]