[
  {
    "text": "hello everyone thank you for coming to the last Talk of",
    "start": "10019",
    "end": "16020"
  },
  {
    "text": "the day my name is Maxim I'm a software engineer at Apple and I'm also a candidate",
    "start": "16020",
    "end": "21660"
  },
  {
    "text": "maintainer for about four years hey everyone I'm Sam I'm a Staff",
    "start": "21660",
    "end": "27420"
  },
  {
    "text": "engineer at Google I've been involved with continuity project as a contributor",
    "start": "27420",
    "end": "32460"
  },
  {
    "text": "since about 2017 and more officially as a security advisor",
    "start": "32460",
    "end": "38340"
  },
  {
    "text": "and then leader as a maintainer since about 2020. today we're going to talk about updates",
    "start": "38340",
    "end": "43500"
  },
  {
    "text": "in the containerdy project and deep dive into some new functionality so I want to start off with continuity",
    "start": "43500",
    "end": "49559"
  },
  {
    "text": "support lifecycle containerdy has three different kinds of supported releases we",
    "start": "49559",
    "end": "54600"
  },
  {
    "text": "have the Active Release type which is generally going to be the most recent version which receives bug fixes and bag back",
    "start": "54600",
    "end": "62100"
  },
  {
    "text": "ports fastest for at least a year from the time that we release and at least six months after the next Active Release",
    "start": "62100",
    "end": "69180"
  },
  {
    "text": "comes out we also have an extended release type which is used sometimes",
    "start": "69180",
    "end": "74840"
  },
  {
    "text": "as people are transitioning between the previous Active Release to the most",
    "start": "74840",
    "end": "81420"
  },
  {
    "text": "recent Active Release and this just contains security fixes so we don't generally fix other kinds of",
    "start": "81420",
    "end": "87780"
  },
  {
    "text": "bugs in the extended release type finally at the last coupon we announced the introduction of long-term stable",
    "start": "87780",
    "end": "94140"
  },
  {
    "text": "releases this is a new type like active but a longer support window so three years instead of one year",
    "start": "94140",
    "end": "100799"
  },
  {
    "text": "and we consider an expanded range of back ports including things like staying",
    "start": "100799",
    "end": "106079"
  },
  {
    "text": "on a supported Go version if the Go version goes out of support during the three-year support life cycle",
    "start": "106079",
    "end": "112579"
  },
  {
    "text": "so I want to talk a little bit more about LTS we do have our first LTS release which is 1.6 it's going to be",
    "start": "112979",
    "end": "119280"
  },
  {
    "text": "supported until February of 2025 which is three years from the date that it was released",
    "start": "119280",
    "end": "125000"
  },
  {
    "text": "uh in its longer support uh window it's going to have bug fixes security patches",
    "start": "125000",
    "end": "131360"
  },
  {
    "text": "it'll also have we're aiming to support kubernetes releases during that three-year support",
    "start": "131360",
    "end": "137400"
  },
  {
    "text": "window so that means things like updates to work with new kubernetes versions potentially including implementing new",
    "start": "137400",
    "end": "142980"
  },
  {
    "text": "caps it'll convert into a regular stable release up to six months before so that it would be August 2024.",
    "start": "142980",
    "end": "150060"
  },
  {
    "text": "and it'll have its normal back Port scope at that point so bug fixes security patches but not new",
    "start": "150060",
    "end": "155099"
  },
  {
    "text": "functionality just looking at the timelines for kubernetes releases and where we are",
    "start": "155099",
    "end": "162000"
  },
  {
    "text": "with container D we'd expect to support 1.24 up through 1.30 depending on the",
    "start": "162000",
    "end": "168239"
  },
  {
    "text": "release timing for kubernetes and whether or not we end up extending this it might support a few beyond that",
    "start": "168239",
    "end": "176300"
  },
  {
    "text": "separate from LTS we also have another regular Active Release that just came out which is containerdy 1.7",
    "start": "177060",
    "end": "184200"
  },
  {
    "text": "this contains two major new features both of which are experimental so it has",
    "start": "184200",
    "end": "189480"
  },
  {
    "text": "a new Sandbox API which enables the core of containerdy to understand groups of containers like pods and enables new",
    "start": "189480",
    "end": "196739"
  },
  {
    "text": "functionalities when you consider a group of containers together so think about things like VM based runtimes",
    "start": "196739",
    "end": "203220"
  },
  {
    "text": "there's also the transfer service which introduces new extension points for customizing and controlling the behavior",
    "start": "203220",
    "end": "208560"
  },
  {
    "text": "of content transfer things like image pull image push but also things where",
    "start": "208560",
    "end": "213840"
  },
  {
    "text": "you might want to intercept that for things like signature validation encryption things like that Maxim's",
    "start": "213840",
    "end": "221280"
  },
  {
    "text": "going to Deep dive into both of those new features in a few minutes so I'm just going to leave that as an overview for right now",
    "start": "221280",
    "end": "227400"
  },
  {
    "text": "containerdy 1.7 is a regular Active Release so that means it only has a one year support window the support is going",
    "start": "227400",
    "end": "233400"
  },
  {
    "text": "to end before 1.6 but 1.6 doesn't have any of the new functionality",
    "start": "233400",
    "end": "238860"
  },
  {
    "text": "it's also going to be the last 1.x release of containerdy",
    "start": "238860",
    "end": "244159"
  },
  {
    "text": "so let's talk about uh new features to expect in 2.0",
    "start": "246540",
    "end": "252000"
  },
  {
    "text": "during last coupon we mentioned that continuity 2.0 is going to be the most boring release ever",
    "start": "252000",
    "end": "258660"
  },
  {
    "text": "so we have introduced two new apis in 1.7 as experimental sandbox API and",
    "start": "258660",
    "end": "264360"
  },
  {
    "text": "transfer service our goal for for 2.0 is to stabilize and productionize these",
    "start": "264360",
    "end": "271020"
  },
  {
    "text": "apis another big chunk of work we are focused on is uh CRI integration which expected",
    "start": "271020",
    "end": "277259"
  },
  {
    "text": "to be finished in 2.0 as well transfer service will get deeper integration with other core continuity",
    "start": "277259",
    "end": "284520"
  },
  {
    "text": "services including integration with sandbox APK itself this way continuity runtimes will be",
    "start": "284520",
    "end": "290520"
  },
  {
    "text": "able to process artifacts as well we also plan to remove a lot of deprecated",
    "start": "290520",
    "end": "295979"
  },
  {
    "text": "code that we accumulated since 1.4 release which my break break backward",
    "start": "295979",
    "end": "301800"
  },
  {
    "text": "function compatibility if you still rely on those features",
    "start": "301800",
    "end": "307160"
  },
  {
    "text": "so box apis aims to offer better support for VM based runtime there is also a new",
    "start": "307560",
    "end": "313860"
  },
  {
    "text": "term that I've heard recently paused late spots which perfectly describes",
    "start": "313860",
    "end": "319020"
  },
  {
    "text": "what that is to quickly recap it's a new set of apis that the notion of a group",
    "start": "319020",
    "end": "324120"
  },
  {
    "text": "of containers in continuity and by group here we mean really anything so it's now up to the",
    "start": "324120",
    "end": "331199"
  },
  {
    "text": "underlying runtime how and which resources to allocate for a particular code",
    "start": "331199",
    "end": "336360"
  },
  {
    "text": "for instance in Cube we use pots and books that resource network interfaces",
    "start": "336360",
    "end": "341639"
  },
  {
    "text": "for a code and run this post container which acts as a parent container for all",
    "start": "341639",
    "end": "349320"
  },
  {
    "text": "what containers and which holds all resources for a boat and but now with sandbox API we can",
    "start": "349320",
    "end": "356400"
  },
  {
    "text": "substitute implementations and run for example a hypervisor instead uh sandbox implementations will be",
    "start": "356400",
    "end": "363600"
  },
  {
    "text": "provided by containerdy films so we introduce this new interface called controller which stream",
    "start": "363600",
    "end": "370160"
  },
  {
    "text": "can Implement in order to provide custom logic",
    "start": "370160",
    "end": "375360"
  },
  {
    "text": "this interface is optional so when implemented continuity knows that um",
    "start": "375360",
    "end": "380900"
  },
  {
    "text": "SM support sandboxes otherwise we will fall back to default default",
    "start": "380900",
    "end": "386759"
  },
  {
    "text": "implementation the demon itself will remain implementation diagnostic so it will",
    "start": "386759",
    "end": "393120"
  },
  {
    "text": "have no knowledge of what kind of sandbox runtime will run so it's not enough to just introduce a",
    "start": "393120",
    "end": "400139"
  },
  {
    "text": "new interface and have Shams implemented it someone has to call it in case of cube there is a CRI plugin in",
    "start": "400139",
    "end": "406979"
  },
  {
    "text": "for cutting ID which is expected to be the primary user of these apis",
    "start": "406979",
    "end": "412919"
  },
  {
    "text": "CR integration is ongoing and we plan to finish it in 2.0 currently CRI is the",
    "start": "412919",
    "end": "419580"
  },
  {
    "text": "largest plugin in containerd so we plan to split it into smaller more maintained",
    "start": "419580",
    "end": "425039"
  },
  {
    "text": "maintainable pieces and so right today maintains pods and box container logic which run past container behind",
    "start": "425039",
    "end": "433520"
  },
  {
    "text": "in 1.7 we started extracting pots and box logic into a separate package which",
    "start": "433520",
    "end": "439500"
  },
  {
    "text": "become the first controller implementation and to keep things from falling apart",
    "start": "439500",
    "end": "444960"
  },
  {
    "text": "and in order to avoid affecting existing customers we decided to Fork CRI plugin",
    "start": "444960",
    "end": "450240"
  },
  {
    "text": "and keep another version of theri server entry next to our existing CRI code so",
    "start": "450240",
    "end": "457860"
  },
  {
    "text": "we do all refactoring work there and you can you can use this environment variable enable cries and boxes to",
    "start": "457860",
    "end": "465000"
  },
  {
    "text": "switch between these implementations in 2.0 we plan to enable the new implementation by default and remove the",
    "start": "465000",
    "end": "471599"
  },
  {
    "text": "old CRI code another new addition in 1.7 Millions",
    "start": "471599",
    "end": "478380"
  },
  {
    "text": "transfer service so high level it's a new API to transfer artifacts from source to destination",
    "start": "478380",
    "end": "484380"
  },
  {
    "text": "where source and destination will be a plugable code which can be specified",
    "start": "484380",
    "end": "489720"
  },
  {
    "text": "when we initiate new transfer session so for instance if you want to pull an",
    "start": "489720",
    "end": "494759"
  },
  {
    "text": "image from an SCI registry how we would specify registry as a source plugin and image source as",
    "start": "494759",
    "end": "501240"
  },
  {
    "text": "destination but now with this new architecture nothing prevents us from implementing",
    "start": "501240",
    "end": "506580"
  },
  {
    "text": "new source plugins to support new arbitrary data sources",
    "start": "506580",
    "end": "511800"
  },
  {
    "text": "this table on the slide represents currently supported source and destination plugins we already",
    "start": "511800",
    "end": "517140"
  },
  {
    "text": "implemented in 1.7 so we already support Push Pull and import operations essentially lots of",
    "start": "517140",
    "end": "524779"
  },
  {
    "text": "code just moved from client to the demand side but now we have a lot more",
    "start": "524779",
    "end": "530040"
  },
  {
    "text": "granular control over the process transfer service aims to be a strong",
    "start": "530040",
    "end": "536760"
  },
  {
    "text": "Foundation which will simplify any new features that we receive often requested",
    "start": "536760",
    "end": "542640"
  },
  {
    "text": "by the community here are a few examples things like image sign-in and validation credential",
    "start": "542640",
    "end": "548339"
  },
  {
    "text": "support image decryption and so on are now straightforward to add to the new",
    "start": "548339",
    "end": "553560"
  },
  {
    "text": "architecture with a new architecture some further work that we plan in 2.0 is",
    "start": "553560",
    "end": "559860"
  },
  {
    "text": "sandbox API integration so contain additions will be able to provide its own plugin for transfer service this",
    "start": "559860",
    "end": "567000"
  },
  {
    "text": "will unlock some new use cases such as confidential computing",
    "start": "567000",
    "end": "572220"
  },
  {
    "text": "so images that we pull can be handled directly by a continuity runtime",
    "start": "572220",
    "end": "578839"
  },
  {
    "text": "bypassing host machine also worth mentioning an important",
    "start": "578839",
    "end": "585480"
  },
  {
    "text": "change in kubernetes request to gcr.io will be redirected to this new address",
    "start": "585480",
    "end": "591060"
  },
  {
    "text": "with the plan to sunset gcr.io in longer term so you should update your",
    "start": "591060",
    "end": "598320"
  },
  {
    "text": "configuration on your nodes as soon as possible in case of continuity here is a example",
    "start": "598320",
    "end": "605160"
  },
  {
    "text": "of such configuration we just change sandbox image field to the new URL",
    "start": "605160",
    "end": "611540"
  },
  {
    "text": "neurai is NRI is a new way to intercept oci spec from CRI it's a new addition in",
    "start": "612620",
    "end": "620100"
  },
  {
    "text": "1.7 release which was significantly reworked uh We've switched from cni style plugin",
    "start": "620100",
    "end": "627899"
  },
  {
    "text": "model in which we call a plug-in binary and pass information in STD in to a more",
    "start": "627899",
    "end": "633720"
  },
  {
    "text": "complex grpc based model so now Anri plugin can amend parts of OC ice pack",
    "start": "633720",
    "end": "639660"
  },
  {
    "text": "and handle events at every step of a port and container lifecycle uh there is an experimental integration",
    "start": "639660",
    "end": "646680"
  },
  {
    "text": "with sandbox API CRI which we plan to complete in 2.0 so Android plugins will be capable to",
    "start": "646680",
    "end": "653880"
  },
  {
    "text": "handle sandbox events as well and there are a couple of new scenes that we explore in 2.0 right now and right has",
    "start": "653880",
    "end": "661680"
  },
  {
    "text": "access to a limited subset of oci spec and we want to expand what can be",
    "start": "661680",
    "end": "667140"
  },
  {
    "text": "changed from a plugin another possibility that's been explored is getting an arrived on non-litux",
    "start": "667140",
    "end": "673140"
  },
  {
    "text": "platforms as I mentioned before we plan to remove a lot of deprecated functionality in 2.0",
    "start": "673140",
    "end": "679880"
  },
  {
    "text": "in some cases this might lead to Breaking backward compatibility but we",
    "start": "679880",
    "end": "686459"
  },
  {
    "text": "try to be reasonable and minimize impact as the stable summarizes high level features that we plan to remove and",
    "start": "686459",
    "end": "693120"
  },
  {
    "text": "suggested alternatives and green checks represent items that's already removed and PRS are merged in",
    "start": "693120",
    "end": "700680"
  },
  {
    "text": "our repository for example we did some runtime cleaning we've removed the one",
    "start": "700680",
    "end": "705779"
  },
  {
    "text": "runtime API and our ncb1 implementation so runtime V2 will be the only supported",
    "start": "705779",
    "end": "712079"
  },
  {
    "text": "runtime in 2.0 we also removed deprecated a ufs",
    "start": "712079",
    "end": "717959"
  },
  {
    "text": "snapshotter and suggest using overlay instead and also in 2.0 we switch",
    "start": "717959",
    "end": "723180"
  },
  {
    "text": "configuration format to version 2. uh Sam is going to tell about continuity",
    "start": "723180",
    "end": "728700"
  },
  {
    "text": "ecosystem over to you thanks Maxim so I want to transition to",
    "start": "728700",
    "end": "733920"
  },
  {
    "text": "talking about the continuity ecosystem now so one of the core ideas for continuity is to be flexible and",
    "start": "733920",
    "end": "740459"
  },
  {
    "text": "extensible that means that containerdy comes with a full set of features and implementations for those but many of",
    "start": "740459",
    "end": "746399"
  },
  {
    "text": "those implementations can be swapped out for something else that includes things like snapshotters which are used for handling image layer",
    "start": "746399",
    "end": "753720"
  },
  {
    "text": "storage runtimes which control the container execution environment and a substantial",
    "start": "753720",
    "end": "759000"
  },
  {
    "text": "client Library means that high-level client programs are easy to build the continuity project hosts some",
    "start": "759000",
    "end": "764940"
  },
  {
    "text": "extensions so we have some core extensions that are included in containerdy by default and have the same",
    "start": "764940",
    "end": "771120"
  },
  {
    "text": "set of stability and support model as containerdy and we also have some non-core extensions which are also",
    "start": "771120",
    "end": "778019"
  },
  {
    "text": "supported that are not included by default and don't have the same life cycle associated with them",
    "start": "778019",
    "end": "783959"
  },
  {
    "text": "but there's also Community projects and there's not much different between a community project and a non-core project other than the governance model and",
    "start": "783959",
    "end": "791579"
  },
  {
    "text": "vendor products that are launched on top of containerd too we've seen really really great adoption in the ecosystem",
    "start": "791579",
    "end": "797459"
  },
  {
    "text": "and uh it's really cool to see um one of them of course is kubernetes",
    "start": "797459",
    "end": "802920"
  },
  {
    "text": "so many of you will have heard that kubernetes 1.24 removed dockershim uh containerdy is a well-supported runtime",
    "start": "802920",
    "end": "809459"
  },
  {
    "text": "that can be used in place of Docker shim many popular kubernetes distributions are either adopting container need now",
    "start": "809459",
    "end": "815700"
  },
  {
    "text": "or have already adopted it you can switch your own local kubernetes cluster",
    "start": "815700",
    "end": "821060"
  },
  {
    "text": "using a kublet flag to tell it to talk to The Container D socket instead of talking to a different socket",
    "start": "821060",
    "end": "828920"
  },
  {
    "text": "Beyond kubernetes there are other ways of interacting with continuity so CTR is a command line tool it's our",
    "start": "829920",
    "end": "836459"
  },
  {
    "text": "development tool for containerd we don't really recommend that people depend on it for a production use case as it has",
    "start": "836459",
    "end": "842820"
  },
  {
    "text": "no stability guarantees for it but it's really good for exploring the different kinds of things that containerd can do",
    "start": "842820",
    "end": "848639"
  },
  {
    "text": "and playing around with the containerdy API and the code for CTR is pretty accessible if you want to look at how to",
    "start": "848639",
    "end": "855839"
  },
  {
    "text": "interact with containerdy as a client cry cuddle is from the kubernetes project as a generic way to interact",
    "start": "855839",
    "end": "862260"
  },
  {
    "text": "with CRI runtimes it works really well with containerdy and you can use it to simulate how kubernetes runs pods",
    "start": "862260",
    "end": "870120"
  },
  {
    "text": "nerd cuddle is another high level CLI that brings more familiar docker-like functionality to containerd it adds",
    "start": "870120",
    "end": "877079"
  },
  {
    "text": "additional things for things like lazy loading images encryption signing it's a non-core containerdy project so",
    "start": "877079",
    "end": "884639"
  },
  {
    "text": "it's still managed by the same set of people that are involved with containerdy but it's a its own separate",
    "start": "884639",
    "end": "890720"
  },
  {
    "text": "non-default thing uh and then we have a couple uh other",
    "start": "890720",
    "end": "895800"
  },
  {
    "text": "community and Commercial things that are built on top of containerdy and nerd cuddle and another cncf project called",
    "start": "895800",
    "end": "903180"
  },
  {
    "text": "Lima these are things that are aiming to bridge the development experience",
    "start": "903180",
    "end": "910199"
  },
  {
    "text": "uh over to places like Mac OS or Windows Colima is a community project that does",
    "start": "910199",
    "end": "917220"
  },
  {
    "text": "that built on Lima Rancher desktop and Finch are both commercial offerings that are built on that and tend to package it",
    "start": "917220",
    "end": "923820"
  },
  {
    "text": "along with some other extensions that are provided by those vendors",
    "start": "923820",
    "end": "929180"
  },
  {
    "text": "snapshotters are the mechanism that containerdy uses to store image layers all of them are designed to present the",
    "start": "930500",
    "end": "936480"
  },
  {
    "text": "container's file system as a union of layers this is what enables things like",
    "start": "936480",
    "end": "941639"
  },
  {
    "text": "image inheritance where you can build on top of one image as a base and extend it",
    "start": "941639",
    "end": "946800"
  },
  {
    "text": "without duplicating the storage continuity comes with a selection of built-in snapshotters that are focused",
    "start": "946800",
    "end": "953399"
  },
  {
    "text": "on some different use cases so Linux options include overlay which is the default and as a general purpose one",
    "start": "953399",
    "end": "959579"
  },
  {
    "text": "that's suitable for many many use cases but also includes the butterfs and ZFS",
    "start": "959579",
    "end": "965820"
  },
  {
    "text": "snapshotters which you can use if you have a preference for either of those file systems and the way that they",
    "start": "965820",
    "end": "971160"
  },
  {
    "text": "handle snapshotting and Storage there's also the device mapper snapshotter which is useful for some",
    "start": "971160",
    "end": "976980"
  },
  {
    "text": "alternative execution modes where file system sharing might not be possible this is for things like VM based",
    "start": "976980",
    "end": "983820"
  },
  {
    "text": "runtimes on Windows there's two different options there's the windows snapshotter that is",
    "start": "983820",
    "end": "989339"
  },
  {
    "text": "used for regular Windows containers and there's also a Linux containers on Windows lcal snapshotter that is used",
    "start": "989339",
    "end": "996300"
  },
  {
    "text": "for the Linux workloads that run there we have started to see some use of",
    "start": "996300",
    "end": "1002000"
  },
  {
    "text": "continuity on FreeBSD and there is the option to use vbsd with the ZFS",
    "start": "1002000",
    "end": "1007880"
  },
  {
    "text": "snapshotter there's also the native snapshotter which is supported on all of the different operating systems but has some",
    "start": "1007880",
    "end": "1015019"
  },
  {
    "text": "particular drawbacks including it being slow and inefficient so we don't generally recommend that people are using that one in production",
    "start": "1015019",
    "end": "1022720"
  },
  {
    "text": "snapshotters can also be extended by means of a proxy plug-in a proxy plug-in lets you run a separate process to",
    "start": "1022759",
    "end": "1029720"
  },
  {
    "text": "provide the functionality of a snapshotter that means it doesn't need to be in tree with the rest of the container decode and can be provided by",
    "start": "1029720",
    "end": "1037339"
  },
  {
    "text": "uh vendors or provided by Community projects we have a few that exist within",
    "start": "1037339",
    "end": "1045079"
  },
  {
    "text": "the containerdy project as non-core all of those are focused on a particular remote lazy loading use case so lazy",
    "start": "1045079",
    "end": "1052700"
  },
  {
    "text": "loading is the idea that you could start the container ahead of actually having all of the con the content presence on",
    "start": "1052700",
    "end": "1059360"
  },
  {
    "text": "the local file system so in the continuity project we manage the East rgz the nidis and overlay BD",
    "start": "1059360",
    "end": "1066980"
  },
  {
    "text": "snapshotters as different models to achieve that lazy loading but there's also other commercial approaches to Lazy",
    "start": "1066980",
    "end": "1073760"
  },
  {
    "text": "loading from different vendors so Sochi is from Amazon and gke has image",
    "start": "1073760",
    "end": "1079100"
  },
  {
    "text": "streaming built into it these are vendor-specific solutions for doing Lazy loading proxy plugins don't have to be",
    "start": "1079100",
    "end": "1086419"
  },
  {
    "text": "about lazy loading or have to be about remote either though so the device mapper snapshotter for example didn't",
    "start": "1086419",
    "end": "1092240"
  },
  {
    "text": "used to be part of container Decor it wasn't built into it and it had started its life as a remote snapshotter until",
    "start": "1092240",
    "end": "1099140"
  },
  {
    "text": "the point that its use case had been basically more validated and was more",
    "start": "1099140",
    "end": "1104840"
  },
  {
    "text": "generally applicable Beyond its initial start so I talked a little bit about runtime",
    "start": "1104840",
    "end": "1111440"
  },
  {
    "text": "environments runtimes and shims are the mechanism that controls the execution",
    "start": "1111440",
    "end": "1117200"
  },
  {
    "text": "environments of a container so this is things like a standard Linux container or alternative different",
    "start": "1117200",
    "end": "1124100"
  },
  {
    "text": "things run C is the default runtime and the reference implementation of the oci",
    "start": "1124100",
    "end": "1129980"
  },
  {
    "text": "spec it's what most installations of continuity are going to use but it's",
    "start": "1129980",
    "end": "1135740"
  },
  {
    "text": "important to note it's not actually part of containerdy it's its own independent project part of the oci the open",
    "start": "1135740",
    "end": "1141740"
  },
  {
    "text": "container initiative which is a separate Foundation uh there's also C run which is an alternative Linux runtime that does the",
    "start": "1141740",
    "end": "1148640"
  },
  {
    "text": "same thing as run C both of these are leveraging typical Linux container Technologies like namespaces c groups",
    "start": "1148640",
    "end": "1155179"
  },
  {
    "text": "set comp capabilities SC Linux and app armor um beyond that the containerdy project",
    "start": "1155179",
    "end": "1163100"
  },
  {
    "text": "does host a non-core runtime which is runwasi which is focused on wassom",
    "start": "1163100",
    "end": "1169520"
  },
  {
    "text": "containers so not Linux but webassembly there's run HCS which is the runtime for",
    "start": "1169520",
    "end": "1176240"
  },
  {
    "text": "Windows containers that leverages the host compute service on Windows which is what actually implements the",
    "start": "1176240",
    "end": "1182620"
  },
  {
    "text": "containerization there there's also run J which is an experimental runtime for FreeBSD jails",
    "start": "1182620",
    "end": "1190580"
  },
  {
    "text": "beyond that there are some other Community Driven or commercially",
    "start": "1190580",
    "end": "1196580"
  },
  {
    "text": "driven runtimes like Kata containers gvisor and firecracker container D these",
    "start": "1196580",
    "end": "1202700"
  },
  {
    "text": "are all different models focused on increased isolation around Linux containers so they go beyond the typical",
    "start": "1202700",
    "end": "1210340"
  },
  {
    "text": "technologies that are used by run CNC run and can do things like isolate with",
    "start": "1210340",
    "end": "1215960"
  },
  {
    "text": "a hypervisor or use syscall re-implementation to provide additional",
    "start": "1215960",
    "end": "1221179"
  },
  {
    "text": "isolation beyond what you would get with just a regular Linux container",
    "start": "1221179",
    "end": "1226539"
  },
  {
    "text": "uh so I think we're going through this pretty quickly but um before we move on into uh q a I want to point out a few",
    "start": "1228860",
    "end": "1236179"
  },
  {
    "text": "ways that you can get involved with containerdy so we have a couple active channels on the cncf slack there's the containerd",
    "start": "1236179",
    "end": "1243140"
  },
  {
    "text": "channel which is more focused on General use of containerdy there's the containerdy dev Channel which is focused",
    "start": "1243140",
    "end": "1249919"
  },
  {
    "text": "on developing containerdy or extensions of it we run a monthly community meeting which",
    "start": "1249919",
    "end": "1255260"
  },
  {
    "text": "is on the second Thursday of each month it's on the cncf calendar and that's where you should check for your local",
    "start": "1255260",
    "end": "1260660"
  },
  {
    "text": "time zone um we also love to hear about adoption and folks building new things in the",
    "start": "1260660",
    "end": "1266780"
  },
  {
    "text": "ecosystem whether that's in the community something personal uh something commercial it's really great",
    "start": "1266780",
    "end": "1273140"
  },
  {
    "text": "to just hear about what's going on um we're very active on GitHub and we use it as a another primary means for",
    "start": "1273140",
    "end": "1280280"
  },
  {
    "text": "communication we have an active GitHub discussions forum for conversation we",
    "start": "1280280",
    "end": "1286220"
  },
  {
    "text": "also have GitHub issues that are available for bug reports feature requests and collaboration",
    "start": "1286220",
    "end": "1292480"
  },
  {
    "text": "if you have security things that you need to report there's a private security reporting mechanism through",
    "start": "1292480",
    "end": "1297799"
  },
  {
    "text": "GitHub and we also use pull requests as a primary means of code review",
    "start": "1297799",
    "end": "1303220"
  },
  {
    "text": "contribution things like that if you want to see what's going on if you want to author new pull requests if you want",
    "start": "1303220",
    "end": "1310100"
  },
  {
    "text": "to comment on active ones we'd love to have you involved with the community",
    "start": "1310100",
    "end": "1316299"
  },
  {
    "text": "so um I want to open this up for Q a if you are a virtual attendee or we don't end",
    "start": "1316880",
    "end": "1323840"
  },
  {
    "text": "up getting to you in the time that we have here please go ahead and ask in the slack Channel and tag us",
    "start": "1323840",
    "end": "1329539"
  },
  {
    "text": "um can't promise that we'll get back to you immediately but we are going to try and get back to you and and continue the",
    "start": "1329539",
    "end": "1335240"
  },
  {
    "text": "conversation there",
    "start": "1335240",
    "end": "1337840"
  },
  {
    "text": "[Applause]",
    "start": "1344090",
    "end": "1352119"
  },
  {
    "text": "so one of the staff members is going to come around with a mic",
    "start": "1353240",
    "end": "1357700"
  },
  {
    "text": "hello my name is Andre from London uh the question would be around the",
    "start": "1361940",
    "end": "1368179"
  },
  {
    "text": "hardware acceleration or of SSL or floating any plants or any thoughts on",
    "start": "1368179",
    "end": "1373580"
  },
  {
    "text": "this implementing in container D so so to provide more native support for these",
    "start": "1373580",
    "end": "1380480"
  },
  {
    "text": "kind of Technologies thank you foreign",
    "start": "1380480",
    "end": "1386020"
  },
  {
    "text": "I don't know that I have specific thoughts on SSL offloading but we have been looking at how do we make various",
    "start": "1389659",
    "end": "1395780"
  },
  {
    "text": "things in containerdy faster to take advantage of Hardware capabilities so we had a pull request recently that was",
    "start": "1395780",
    "end": "1402080"
  },
  {
    "text": "looking at um using Hardware acceleration for Shaw 256 which is used as part of the digest",
    "start": "1402080",
    "end": "1408919"
  },
  {
    "text": "calculation for images and verification as they're downloaded but generally we're staying up to date",
    "start": "1408919",
    "end": "1416539"
  },
  {
    "text": "with things in the go ecosystem as well so if there are Hardware accelerations that happen as part of the go standard",
    "start": "1416539",
    "end": "1421940"
  },
  {
    "text": "Library we're going to pick those up too uh yeah hopefully that answers your question cool",
    "start": "1421940",
    "end": "1429460"
  },
  {
    "text": "hello uh my name is azer I'm from Berlin uh and the question is is there any",
    "start": "1429860",
    "end": "1435200"
  },
  {
    "text": "relation between podman and continuity because I haven't seen any mentioning",
    "start": "1435200",
    "end": "1441559"
  },
  {
    "text": "uh yeah those are separate independent projects",
    "start": "1441559",
    "end": "1446140"
  },
  {
    "text": "um then it would be questioned with regards to containerized operational systems and",
    "start": "1468559",
    "end": "1475280"
  },
  {
    "text": "one of the implications not containerized but with better container",
    "start": "1475280",
    "end": "1481100"
  },
  {
    "text": "support which is Amazon bottle rocket operational system so it's",
    "start": "1481100",
    "end": "1487640"
  },
  {
    "text": "like [Music] having this closer to the kernel can you",
    "start": "1487640",
    "end": "1494900"
  },
  {
    "text": "speak about this support by the container G what are the developments out there thank you",
    "start": "1494900",
    "end": "1502039"
  },
  {
    "text": "yeah so um thank you for asking a question that I can answer pretty well I I used to work",
    "start": "1502039",
    "end": "1510440"
  },
  {
    "text": "on bottle rocket before I left Amazon and bottle rocket is uh",
    "start": "1510440",
    "end": "1516080"
  },
  {
    "text": "a container focused operating system what it does is it uses containerdy as its containerization mechanism so it",
    "start": "1516080",
    "end": "1523159"
  },
  {
    "text": "doesn't have additional isolation for the containers Beyond something like containerdy your your container",
    "start": "1523159",
    "end": "1529580"
  },
  {
    "text": "execution environment is going to be the same on bottle rocket as it is on any other Linux distribution",
    "start": "1529580",
    "end": "1535299"
  },
  {
    "text": "container focused Linux distributions like um uh what used to be core OS and is now I",
    "start": "1535299",
    "end": "1543500"
  },
  {
    "text": "think something else that red hat um there's also uh costs from Google",
    "start": "1543500",
    "end": "1549799"
  },
  {
    "text": "um I think there's Telos is another container operating system they're all going to be the same but it's also going",
    "start": "1549799",
    "end": "1555679"
  },
  {
    "text": "to be the same as if you just run it on Debian or Ubuntu",
    "start": "1555679",
    "end": "1561140"
  },
  {
    "text": "all right excited to hear about the LTS support that's great um any idea on the",
    "start": "1571700",
    "end": "1576919"
  },
  {
    "text": "Cadence of that and if the support Windows for LTS releases will be overlapping",
    "start": "1576919",
    "end": "1583299"
  },
  {
    "text": "uh I think we're early in the stage of trying to figure that out um so 1.6 is the first LTS we haven't",
    "start": "1583340",
    "end": "1591679"
  },
  {
    "text": "tried doing one before we're kind of going to see how that goes over the next couple of years",
    "start": "1591679",
    "end": "1597380"
  },
  {
    "text": "um if you have feedback on that we'd love to have it so I'm guessing from your question that you're looking for",
    "start": "1597380",
    "end": "1603440"
  },
  {
    "text": "overlapping support Windows um is there anything else that you'd like",
    "start": "1603440",
    "end": "1608480"
  },
  {
    "text": "to see in LTS or you know if you have any feedback for us",
    "start": "1608480",
    "end": "1614799"
  },
  {
    "text": "it's just it's interesting that the LTS is starting and then 2.0 is coming so I",
    "start": "1615500",
    "end": "1620840"
  },
  {
    "text": "could see potentially in 2.1 or 2.2 there's a unique feature that would",
    "start": "1620840",
    "end": "1626779"
  },
  {
    "text": "force us or really encourage us to move off of lts16 yeah with with 2.0 being a",
    "start": "1626779",
    "end": "1633740"
  },
  {
    "text": "fairly large change including some backwards incompatibility breaking chain like that's why it's moving from 1.x to",
    "start": "1633740",
    "end": "1640100"
  },
  {
    "text": "2.0 1.6 is hopefully going to provide a longer time for people to be able to",
    "start": "1640100",
    "end": "1646580"
  },
  {
    "text": "migrate and test and make sure that they're okay with the changes that are happening in 2.0 I think that if the 1.6",
    "start": "1646580",
    "end": "1652820"
  },
  {
    "text": "LTS goes really well we'll hopefully have something more concrete around",
    "start": "1652820",
    "end": "1658600"
  },
  {
    "text": "what a what a Cadence could be for future lts's but I think at this at this",
    "start": "1658600",
    "end": "1664159"
  },
  {
    "text": "point we don't really know okay great thanks",
    "start": "1664159",
    "end": "1668559"
  },
  {
    "text": "thank you I I've seen um the dev mapper snapshotter sort of hang",
    "start": "1687140",
    "end": "1694600"
  },
  {
    "text": "periodically after starting a whole bunch of snapshots for micro VMS and then just after a period of time you",
    "start": "1694600",
    "end": "1701120"
  },
  {
    "text": "just stuck there have you seen that in your experience with Lando or fargate when you were",
    "start": "1701120",
    "end": "1706460"
  },
  {
    "text": "using AWS Samuel I think this is a question for you",
    "start": "1706460",
    "end": "1712600"
  },
  {
    "text": "I haven't but you should file an issue and we try we will try to reproduce that",
    "start": "1713900",
    "end": "1720140"
  },
  {
    "text": "but I'm not sure about fargate and if we can comment for good stuff I don't think",
    "start": "1720140",
    "end": "1725240"
  },
  {
    "text": "I have anything yeah yeah so would it it's generally not advised to use it with a loopback file",
    "start": "1725240",
    "end": "1732080"
  },
  {
    "text": "system but can be more convenient than formatting a separate hard drive and",
    "start": "1732080",
    "end": "1737419"
  },
  {
    "text": "allocating that for the DM pool do you think that could be why potentially",
    "start": "1737419",
    "end": "1743799"
  },
  {
    "text": "um yes maybe um it's sort of hard to judge from the",
    "start": "1744919",
    "end": "1751820"
  },
  {
    "text": "scene whether it's like a good idea or not but we can follow up in GitHub and",
    "start": "1751820",
    "end": "1757940"
  },
  {
    "text": "we can figure it out yeah thanks",
    "start": "1757940",
    "end": "1761860"
  },
  {
    "text": "it's me again so what's pluggable a transport layer can I in theory use",
    "start": "1764539",
    "end": "1771440"
  },
  {
    "text": "something like pulling images from and pushing images to S3 or compatible storage",
    "start": "1771440",
    "end": "1780039"
  },
  {
    "text": "yeah that's the idea behind it so you can replace source with",
    "start": "1780159",
    "end": "1786700"
  },
  {
    "text": "any plugin you like and I basically it's plugins responsibility to retrieve data",
    "start": "1786700",
    "end": "1793279"
  },
  {
    "text": "from S3 Dropbox or whatever and provide it a continuity",
    "start": "1793279",
    "end": "1798940"
  },
  {
    "text": "I think the way to think about it is right now the behavior with containerdy is the only remote that it really knows",
    "start": "1799760",
    "end": "1806000"
  },
  {
    "text": "how to pull from is an oci registry and with the transfer service you should be able to have a pull from or push to",
    "start": "1806000",
    "end": "1812720"
  },
  {
    "text": "whatever your plugin implements and that could be an oci registry if you want but it could be something else",
    "start": "1812720",
    "end": "1820000"
  },
  {
    "text": "cool so um maybe we'll uh close q a now and you're welcome to come up and talk",
    "start": "1828919",
    "end": "1834020"
  },
  {
    "text": "to us after we would love to have feedback on the session so there's a QR code up here that you can scan and leave",
    "start": "1834020",
    "end": "1840919"
  },
  {
    "text": "us feedback that would be great but thank you all for coming [Applause]",
    "start": "1840919",
    "end": "1847759"
  }
]