[
  {
    "start": "0",
    "end": "28000"
  },
  {
    "text": "okay know a lot to cover so we're gonna get started hi my name is Diego I work",
    "start": "60",
    "end": "6509"
  },
  {
    "text": "at core OS and I'm here to talk to you about self hosted kubernetes so core OS",
    "start": "6509",
    "end": "11670"
  },
  {
    "text": "we use self hosted kubernetes in our enterprise kubernetes distribution which is called tectonic we've been doing this",
    "start": "11670",
    "end": "17310"
  },
  {
    "text": "for quite a while now in production with lots of customers customers doing this and we think it's the best way to run to",
    "start": "17310",
    "end": "24480"
  },
  {
    "text": "run kubernetes so this talk I'm just going to kind of try to prove that to all of you so who is this talk for well",
    "start": "24480",
    "end": "32308"
  },
  {
    "start": "28000",
    "end": "28000"
  },
  {
    "text": "a lot of different people first be cluster operators if you're running a cluster maintaining a cluster multiple",
    "start": "32309",
    "end": "38340"
  },
  {
    "text": "clusters upgrading them self-hosted kubernetes is one approach you can take that we think is a good one that will",
    "start": "38340",
    "end": "44489"
  },
  {
    "text": "make your life easier and a lot of dimensions I'll get into also if you're a kubernetes contributor you're just",
    "start": "44489",
    "end": "50129"
  },
  {
    "text": "interested in kubernetes self hosted communities touches on a lot of interesting aspects of kubernetes api",
    "start": "50129",
    "end": "56820"
  },
  {
    "text": "surface and things like that we had a lot of kind of corner cases we had to solve so it's it's it's cool from a",
    "start": "56820",
    "end": "62910"
  },
  {
    "text": "community's point of view just to secret is running itself and lastly people who enjoy clever hacks so we had to come up",
    "start": "62910",
    "end": "70740"
  },
  {
    "text": "with a couple of neat tricks in order to make career a cell phone secure Mary's work that I'll get into during this talk and so I think they're kind of cool and",
    "start": "70740",
    "end": "77610"
  },
  {
    "text": "hopefully you do too so first to get a run on the same page I want to talk about what is self hosted kubernetes",
    "start": "77610",
    "end": "84200"
  },
  {
    "text": "well it's somewhat self-evident but it's kubernetes running on kubernetes",
    "start": "84200",
    "end": "89939"
  },
  {
    "text": "specifically all the communities control plain components are running as native",
    "start": "89939",
    "end": "94979"
  },
  {
    "text": "kubernetes objects namely deployments daemon sets they're using things like secrets and that's about it in terms of",
    "start": "94979",
    "end": "103619"
  },
  {
    "text": "what it actually is but of course the Devils in the details right so this talk",
    "start": "103619",
    "end": "108990"
  },
  {
    "start": "107000",
    "end": "107000"
  },
  {
    "text": "is gonna come in three parts first I'm going to talk about why you'd want to use self-hosted kubernetes I'm gonna make the case for why we think this is",
    "start": "108990",
    "end": "115140"
  },
  {
    "text": "the best way to run kubernetes then I'm gonna get into how it works and I'm actually gonna launch a self-hosted",
    "start": "115140",
    "end": "120270"
  },
  {
    "text": "cluster and show you guys some of the ins and outs of it and some some of these tricks I was talking about to make",
    "start": "120270",
    "end": "126090"
  },
  {
    "text": "it work and at the end of the talk I want to get into what's next for self",
    "start": "126090",
    "end": "131640"
  },
  {
    "text": "hosting so we have self host self hosting today it's work great but it also unlocks a lot of possibilities for what you can do once",
    "start": "131640",
    "end": "139050"
  },
  {
    "text": "you have a self-hosted cluster in doing some pretty sophisticated stuff in terms of managing your cluster scaling it up",
    "start": "139050",
    "end": "144450"
  },
  {
    "text": "that sort of thing and so I'll touch on that in the end so first let's go over why you'd want a self host a kubernetes",
    "start": "144450",
    "end": "151590"
  },
  {
    "text": "cluster well first of all you want to leverage Cabrini strengths we have",
    "start": "151590",
    "end": "157620"
  },
  {
    "text": "kubernetes it's great at running highly available resilient software wouldn't be",
    "start": "157620",
    "end": "162690"
  },
  {
    "text": "great if we could actually run kubernetes taking advantage of all of that useful stuff that's encoded in",
    "start": "162690",
    "end": "167850"
  },
  {
    "text": "kubernetes secondly it really simplifies your node management story so it turns",
    "start": "167850",
    "end": "173730"
  },
  {
    "text": "out once you're using self-hosted kubernetes your node requirements are very simple and I'll describe that a little bit lastly it really makes your",
    "start": "173730",
    "end": "181770"
  },
  {
    "text": "cluster lifecycle management a lot easier because you're managing using the same lifecycle management tools that you",
    "start": "181770",
    "end": "188220"
  },
  {
    "text": "use when you're managing any application on kubernetes you know coop cuddle and friends like that so if you're running a",
    "start": "188220",
    "end": "196530"
  },
  {
    "start": "194000",
    "end": "194000"
  },
  {
    "text": "kubernetes control plane what might be some properties that you'd like this control plane to have well for one thing",
    "start": "196530",
    "end": "204510"
  },
  {
    "text": "you might want it to scale it up and down automatically let's say your cluster is growing you're getting more users more people are hitting the",
    "start": "204510",
    "end": "210330"
  },
  {
    "text": "kubernetes api you might want to scale up the number of API servers you're running or controller managers or so on",
    "start": "210330",
    "end": "216890"
  },
  {
    "text": "you also might want to handle node failures gracefully so let's say one of your masters goes down you want to",
    "start": "216890",
    "end": "223650"
  },
  {
    "text": "quickly bring up another master to run the components that we're running on that failed node so that you don't have",
    "start": "223650",
    "end": "229320"
  },
  {
    "text": "any downtime so that you'd you'd your Roccat workloads keep running you also",
    "start": "229320",
    "end": "235470"
  },
  {
    "text": "wanna be able to safely roll out new versions of your software in a resilient",
    "start": "235470",
    "end": "240660"
  },
  {
    "text": "manner so you want to run update your API servers let's say one at a time you",
    "start": "240660",
    "end": "246390"
  },
  {
    "text": "want to wait for them to roll out you don't want to have any downtime and then what if something goes wrong what if you",
    "start": "246390",
    "end": "252239"
  },
  {
    "text": "set a flag that it turns out breaks some part of your control plane you won't be able to roll back to the last known good",
    "start": "252239",
    "end": "258120"
  },
  {
    "text": "state that you had and while we're at it listing you know making our wish list here what about advanced networking what",
    "start": "258120",
    "end": "265979"
  },
  {
    "text": "if you want to run some sort of network policies that can't constrain how your control plane",
    "start": "265979",
    "end": "271960"
  },
  {
    "text": "talks to each individual component into other parts of your cluster what if you want to have role-based access access",
    "start": "271960",
    "end": "277570"
  },
  {
    "text": "control and auditing to control and keep track of your control plane who is talking to what it's allowed to do what",
    "start": "277570",
    "end": "284830"
  },
  {
    "text": "about health checking monitoring if you're deploying Prometheus in your cluster if you're looking at live 'no stand health checks you want your",
    "start": "284830",
    "end": "291610"
  },
  {
    "text": "control plane to have that - to make sure that you know very quickly if there's a problem lastly what about",
    "start": "291610",
    "end": "298000"
  },
  {
    "text": "resource allocation and accounting you don't want to waste compute by having",
    "start": "298000",
    "end": "303720"
  },
  {
    "text": "snowflake master nodes that aren't optimal using the resources and you also",
    "start": "303720",
    "end": "308860"
  },
  {
    "text": "might want to know how much is my control plane costing to run how many resources is actually using so if you",
    "start": "308860",
    "end": "315700"
  },
  {
    "text": "think about it what's really good at doing all this stuff I mean the obvious answer is kubernetes itself right",
    "start": "315700",
    "end": "321490"
  },
  {
    "text": "wouldn't be great if we could just run our control plane this way something",
    "start": "321490",
    "end": "327070"
  },
  {
    "start": "325000",
    "end": "325000"
  },
  {
    "text": "else that self-hosting unlocks is simplified node management so if you",
    "start": "327070",
    "end": "332230"
  },
  {
    "text": "think about kubernetes worker so forget about masters for a second what do you really need to run",
    "start": "332230",
    "end": "337510"
  },
  {
    "text": "kubernetes worker well you need the couplet right that's what's gonna talk to the API server and figure out which",
    "start": "337510",
    "end": "343600"
  },
  {
    "text": "pod should be running you need to contain a runtime you know docker container D rocket etc that is actually",
    "start": "343600",
    "end": "350200"
  },
  {
    "text": "gonna run your pods now you need some credentials to talk to the API server you know let's say a coop config and",
    "start": "350200",
    "end": "356610"
  },
  {
    "text": "that's it really most workers that's what they what they run is a very minimal subset of things compared to a",
    "start": "356610",
    "end": "364300"
  },
  {
    "text": "master where you might be running specific API server controller manager etc system D units if you will or",
    "start": "364300",
    "end": "370780"
  },
  {
    "text": "whatever else so in a self-hosted world this is all you need because everything",
    "start": "370780",
    "end": "376180"
  },
  {
    "text": "is running in kubernetes everything is really a worker there's no distinction between a master and a worker from a",
    "start": "376180",
    "end": "381490"
  },
  {
    "text": "compute point of view so in that case how do you select a master now well it's",
    "start": "381490",
    "end": "386979"
  },
  {
    "start": "384000",
    "end": "384000"
  },
  {
    "text": "actually just as simple as applying a label the only difference between master and non master nodes is that they happen",
    "start": "386979",
    "end": "392470"
  },
  {
    "text": "to have labels on them and so again using simple using the kubernetes built-in primitives it's simpler it's",
    "start": "392470",
    "end": "400090"
  },
  {
    "text": "more uniform and more flexible and I'll get into that a little bit later as well lastly what",
    "start": "400090",
    "end": "405419"
  },
  {
    "start": "404000",
    "end": "404000"
  },
  {
    "text": "about lifecycle management what about upgrading your cluster changing Flags in your cluster adding new rotating your",
    "start": "405419",
    "end": "411960"
  },
  {
    "text": "certs let's say from your API server well all you do is coop cuddle apply coop cuddle edit and you can go in and",
    "start": "411960",
    "end": "419610"
  },
  {
    "text": "change anything and then kubernetes will roll out those changes in the way we all know and love now realistically you know",
    "start": "419610",
    "end": "426659"
  },
  {
    "text": "your control plane is your most important part of your community's cluster from you know in one point of view so you don't really want to be",
    "start": "426659",
    "end": "432960"
  },
  {
    "text": "using coop cuddle in production I would assume so ideally you'd actually want to automate this maybe you want to write",
    "start": "432960",
    "end": "439050"
  },
  {
    "text": "some software that is using client go to talk to the API server you can encode a lot of logic and expertise into some",
    "start": "439050",
    "end": "447659"
  },
  {
    "text": "program maybe we call it an operator that will manage a control plane upgrade",
    "start": "447659",
    "end": "454139"
  },
  {
    "text": "it self heal it and so on and I'll get into that a little bit as well later so",
    "start": "454139",
    "end": "460289"
  },
  {
    "text": "that hopefully makes a case for why you might want to self host what some of the benefits would be now let's actually get into how it works so when you want to",
    "start": "460289",
    "end": "470039"
  },
  {
    "start": "467000",
    "end": "467000"
  },
  {
    "text": "create a self hosted clusters it's three main areas that you want to address in order to have something that's production ready that is something you",
    "start": "470039",
    "end": "476669"
  },
  {
    "text": "could actually use to run real workloads the first is bootstrapping how do you",
    "start": "476669",
    "end": "482699"
  },
  {
    "text": "actually create a cluster it's not it's if you start to think about it's actually not that easy and then what",
    "start": "482699",
    "end": "489750"
  },
  {
    "text": "about upgrades I touched on it a little bit but in practice how does it work how do you actually upgrade your holcomb",
    "start": "489750",
    "end": "495389"
  },
  {
    "text": "control plane and then disaster recovery inevitably something will cantle things",
    "start": "495389",
    "end": "501210"
  },
  {
    "text": "can will go wrong how do you make sure that self hosted cluster is recoverable",
    "start": "501210",
    "end": "506599"
  },
  {
    "text": "so I'll go through each of these one by one and I'll actually jump over the terminal and make a cluster and then",
    "start": "506599",
    "end": "512789"
  },
  {
    "text": "break it for all of you and we can see how this works so the first step that we",
    "start": "512789",
    "end": "518459"
  },
  {
    "start": "516000",
    "end": "516000"
  },
  {
    "text": "need to figure out is bootstrapping how do you actually create a cluster from scratch if you think about it the",
    "start": "518459",
    "end": "524699"
  },
  {
    "text": "control plane as a illustrator earlier is running as daemon sets and deployments right but",
    "start": "524699",
    "end": "530750"
  },
  {
    "text": "you need a control plane to create Dennis sets and deployments right you know how can you say could cuddle create",
    "start": "530750",
    "end": "536270"
  },
  {
    "text": "if there's no API server to talk to so here we have clever hack number one which is that we're gonna create a",
    "start": "536270",
    "end": "542840"
  },
  {
    "text": "temporary static control plane to bootstrap a self-hosted cluster in",
    "start": "542840",
    "end": "548150"
  },
  {
    "text": "essence will have a special ephemeral control plane that we can stand up that",
    "start": "548150",
    "end": "554510"
  },
  {
    "text": "we can point at our HDD instance that will be used in our production cluster create our assets and then tear down",
    "start": "554510",
    "end": "561110"
  },
  {
    "text": "that cluster and we're off - off to the races how do you actually do this in",
    "start": "561110",
    "end": "567440"
  },
  {
    "text": "practice there are a few few projects that are doing this we want I'm going to talk to you today is called boot cube",
    "start": "567440",
    "end": "572870"
  },
  {
    "text": "it's a kubernetes incubator project that I work on a few other people here and",
    "start": "572870",
    "end": "578020"
  },
  {
    "text": "the way it works is you give it temporary control plane manifests so",
    "start": "578020",
    "end": "583280"
  },
  {
    "text": "these are pod manifests I'd purely describe pods because they need to run on the couplet there's no control plane",
    "start": "583280",
    "end": "589490"
  },
  {
    "text": "yet the couplet only really knows how to run pods seas are gonna describe your API server controller and then scheduler",
    "start": "589490",
    "end": "596839"
  },
  {
    "text": "you also need your self hosted control plane manifest so this is actually gonna describe your permanent self hosted",
    "start": "596839",
    "end": "603740"
  },
  {
    "text": "cluster once it gets running and then lastly you need an initial master node",
    "start": "603740",
    "end": "608750"
  },
  {
    "text": "and I put master here in parentheses because as I said there's nothing really special about the master node it's just",
    "start": "608750",
    "end": "614390"
  },
  {
    "text": "the node that we so happened to choose to be our initial node that we're going to bootstrap on so boot coop is going to",
    "start": "614390",
    "end": "620000"
  },
  {
    "text": "take these three inputs they're just files on disk and your node and it's gonna stand up a temporary control plane",
    "start": "620000",
    "end": "625430"
  },
  {
    "text": "and then it's gonna pivot that into the self hosted control plane so let's actually launch a cluster and take a",
    "start": "625430",
    "end": "632330"
  },
  {
    "text": "look at that so here can everyone see this okay cool",
    "start": "632330",
    "end": "638300"
  },
  {
    "text": "so I've got a few nodes sitting around here on my laptop so let's look at the",
    "start": "638300",
    "end": "646970"
  },
  {
    "text": "actual manifest we're gonna use for a sec so fukube actually provides a nice little render tool that can create",
    "start": "646970",
    "end": "653740"
  },
  {
    "text": "manifests that are good they're kind of baseline to run a self-hosted cluster if",
    "start": "653740",
    "end": "659120"
  },
  {
    "text": "you want to go run your own you can just download buku play with this in practice you really want to cuss",
    "start": "659120",
    "end": "664520"
  },
  {
    "text": "these assets to match your the specific configuration you want but let's so if we look at what we've got so we can see",
    "start": "664520",
    "end": "674990"
  },
  {
    "text": "we've got a coop config up here we've got these bootstrap manifests that I was talking about so we've got an API server",
    "start": "674990",
    "end": "681470"
  },
  {
    "text": "controller manager and scheduler and those are just pods then we've got a bunch of other manifests and this is",
    "start": "681470",
    "end": "686810"
  },
  {
    "text": "actually our control plane that's going to run so we've got API server controller manager scheduler we've also",
    "start": "686810",
    "end": "692630"
  },
  {
    "text": "got coop DNS which is an add-on we like it's got coop flannels we're actually deploying our network overlay as part of",
    "start": "692630",
    "end": "700040"
  },
  {
    "text": "this self hosted cluster and then a few other things our back rules and so on and there go our PKI material that we're",
    "start": "700040",
    "end": "706550"
  },
  {
    "text": "gonna need to have a secure cluster so if I hop over to my master node you can",
    "start": "706550",
    "end": "715340"
  },
  {
    "text": "see here I've copied over the assets already and I have buku so what I'm gonna do is I'm just gonna say so you",
    "start": "715340",
    "end": "720680"
  },
  {
    "text": "know boot koobs start and then I say use the assets and this directory and what",
    "start": "720680",
    "end": "730490"
  },
  {
    "text": "it's gonna do is actually if I open another terminal here",
    "start": "730490",
    "end": "736150"
  },
  {
    "text": "what it's done is it's copied these bootstrap manifests over to the couplet manifest directory so it's starting them",
    "start": "740460",
    "end": "747160"
  },
  {
    "text": "up as static pods and once that's once that's done it's going to use that",
    "start": "747160",
    "end": "753070"
  },
  {
    "text": "temporary control plane to create the self-hosted assets so since looking at text is not actually",
    "start": "753070",
    "end": "759220"
  },
  {
    "text": "that enlightening I'm going to illustrate this with pictures and thanks to my coworker Aaron who originally made",
    "start": "759220",
    "end": "765070"
  },
  {
    "text": "these really good slides so here here is just gonna reflect what's going on in my terminal right now we've got the coolant",
    "start": "765070",
    "end": "772210"
  },
  {
    "text": "we've got boot Kubb and we've got at CD the first thing boot cube does is it creates static pods as I show it it's",
    "start": "772210",
    "end": "781750"
  },
  {
    "text": "just by copying these static manifests over to the Kubla directory and so we have an API server scheduler controller",
    "start": "781750",
    "end": "787690"
  },
  {
    "text": "manager once they get up and running they talk to at CD you effectively have a functioning control plane the couplet",
    "start": "787690",
    "end": "795610"
  },
  {
    "text": "is configured to look at this API server address and so it actually joins the cluster so we have this temporary",
    "start": "795610",
    "end": "801670"
  },
  {
    "text": "control plane and we have the Kubla it's a one node cluster fukube detects that this cluster is up and running and then",
    "start": "801670",
    "end": "808390"
  },
  {
    "text": "it creates a self-hosted components effectively by calling coop code will",
    "start": "808390",
    "end": "813940"
  },
  {
    "text": "create and so the couplet since is talking to api server sees that it",
    "start": "813940",
    "end": "820630"
  },
  {
    "text": "should be running these pods so it's going to start up the actual self-hosted api server scheduler and controller",
    "start": "820630",
    "end": "826150"
  },
  {
    "text": "manager but really it's just functioning as a Kubla normally does running a daemon set deployment etc once a",
    "start": "826150",
    "end": "836140"
  },
  {
    "text": "self-hosted control planes running boot cout tears down the static pods they're not needed anymore it sees that the self",
    "start": "836140",
    "end": "841300"
  },
  {
    "text": "hosted cluster is running and then the cube itself exits boot kube's done we",
    "start": "841300",
    "end": "846370"
  },
  {
    "text": "never use boot cube again in an ideal world and the self hosted cluster is now",
    "start": "846370",
    "end": "851530"
  },
  {
    "text": "talking the same at CD instance so that's the kind of trick that allowed us to use the temporary control plane in",
    "start": "851530",
    "end": "856660"
  },
  {
    "text": "the final control plane and the pivot and the couplet now talks to this API server and we have a one node cluster",
    "start": "856660",
    "end": "863440"
  },
  {
    "text": "from there we can start joining other nodes and expand our cluster accordingly",
    "start": "863440",
    "end": "868860"
  },
  {
    "text": "so let's go back look our cluster ok cool it's it's all done we have it all self",
    "start": "868860",
    "end": "875290"
  },
  {
    "text": "hosted control plane is successfully starts aboot Kubb exited we're done with it",
    "start": "875290",
    "end": "880410"
  },
  {
    "text": "so let's actually look at our cluster so",
    "start": "880410",
    "end": "886000"
  },
  {
    "text": "you can see we got two nodes we got our master and then I had a worker sitting around that was just waiting for an API server to appear and then we actually",
    "start": "886000",
    "end": "892600"
  },
  {
    "text": "have our control planes so if we say coop system get deployments got our",
    "start": "892600",
    "end": "900040"
  },
  {
    "text": "controller manager scheduler etc our daemon sets we've got cube API server flannel coop Roxy etc right cool alright",
    "start": "900040",
    "end": "910449"
  },
  {
    "text": "so now we've got a cluster but as we know in kubernetes land things are moving very fast so you want to upgrade",
    "start": "910449",
    "end": "916329"
  },
  {
    "text": "it right how did we upgrade it well this is probably the most boring slide of the talk actually we just go and change the",
    "start": "916329",
    "end": "923139"
  },
  {
    "start": "917000",
    "end": "917000"
  },
  {
    "text": "image in our daemon set it's actually that easy so I'm gonna say coop cuddle edit I'm gonna have to put that first",
    "start": "923139",
    "end": "933628"
  },
  {
    "text": "Damon's API server alright so a cheat",
    "start": "935639",
    "end": "945839"
  },
  {
    "text": "we're saying well in 185 came out what yesterday two days ago that's uh let's",
    "start": "945839",
    "end": "951100"
  },
  {
    "text": "upgrade to that you want to be on the bleeding edge cool now it's uh get Damon",
    "start": "951100",
    "end": "958449"
  },
  {
    "text": "sets a wide so kinda hard to see when it's blown up but you can see that a",
    "start": "958449",
    "end": "964019"
  },
  {
    "text": "coup baby Ice Cube API server has been upgraded to 185 and thanks to a daemon set rolling",
    "start": "964019",
    "end": "969370"
  },
  {
    "text": "update strategy it's gonna do this in a safe safe manner and as I mentioned we",
    "start": "969370",
    "end": "975850"
  },
  {
    "text": "don't want to really be using coop cuddle edit our production clusters possibly but you can in a pinch or in an",
    "start": "975850",
    "end": "982509"
  },
  {
    "text": "emergency you can go in and you can fix something this way alright the last piece I want to cover here is des step",
    "start": "982509",
    "end": "988480"
  },
  {
    "text": "disaster recovery so thank you things can and will do go wrong with your cluster either due to bugs operator",
    "start": "988480",
    "end": "995230"
  },
  {
    "start": "993000",
    "end": "993000"
  },
  {
    "text": "error what have you so what kind of failure modes might you see in a self-hosted cluster first you have a",
    "start": "995230",
    "end": "1000990"
  },
  {
    "text": "partial control plane loss let's say that someone is editing their",
    "start": "1000990",
    "end": "1006360"
  },
  {
    "text": "Kubb scheduler deployment accidentally scales it down to zero well you've got a",
    "start": "1006360",
    "end": "1011970"
  },
  {
    "text": "problem now because you can you can scale it back up but there's no scheduler there to decide which no the",
    "start": "1011970",
    "end": "1019139"
  },
  {
    "text": "the it should be running on so how do you deal with that well in that case you have to recover recover the scheduler",
    "start": "1019139",
    "end": "1024630"
  },
  {
    "text": "itself what about if you lose the whole control plane let's say you know I have",
    "start": "1024630",
    "end": "1030149"
  },
  {
    "text": "a bare-metal cluster in my basement I accidentally go and trip the fuse and I",
    "start": "1030149",
    "end": "1036870"
  },
  {
    "text": "started back up we need to restart things right so we'll have to recover the entire control plane and lastly you",
    "start": "1036870",
    "end": "1042688"
  },
  {
    "text": "might lose a cluster completely let's say I accidentally delete my auto scaling group in AWS well hopefully you",
    "start": "1042689",
    "end": "1049200"
  },
  {
    "text": "have backups and you can recover from a backup I'm gonna make a brief interlude",
    "start": "1049200",
    "end": "1056279"
  },
  {
    "text": "to talk about a pod check pointer it's another thing that we use when self hosting so if some of you were I know I",
    "start": "1056279",
    "end": "1062250"
  },
  {
    "text": "could went kind of fast but a keen observer might have noticed a trick during the upgrade demo I said it was easy is not actually that easy how do",
    "start": "1062250",
    "end": "1070740"
  },
  {
    "text": "you up create an API server how do you actually handle master node reboots your",
    "start": "1070740",
    "end": "1076399"
  },
  {
    "text": "API server when I updated it I have a single master cluster here it's not actually what you want to do in the real",
    "start": "1076399",
    "end": "1082320"
  },
  {
    "text": "world but my little laptop that's all I can handle so when I updated the API API server you",
    "start": "1082320",
    "end": "1088350"
  },
  {
    "text": "think about a daemon set what it's gonna do is it's going to terminate the old pod and once it's fully terminated start",
    "start": "1088350",
    "end": "1094200"
  },
  {
    "text": "up a new pod okay we terminated the API server then what there's no API server",
    "start": "1094200",
    "end": "1101220"
  },
  {
    "text": "no one no one's telling us what to do next right so how did this work well welcome to clever hack number two when",
    "start": "1101220",
    "end": "1108210"
  },
  {
    "text": "we run a checkpoint or daemon and this is actually running on all the masters it's a pretty simple daemon but what it",
    "start": "1108210",
    "end": "1115500"
  },
  {
    "text": "does is for certain critical pods it creates local checkpoints it copies down",
    "start": "1115500",
    "end": "1120539"
  },
  {
    "text": "the static manifests and in the case of a control plane outage it will actually deploy that manifest wait for the",
    "start": "1120539",
    "end": "1127110"
  },
  {
    "text": "cluster recover and then on we go and so during an upgrade this is actually a mini outage that we're creating on",
    "start": "1127110",
    "end": "1133139"
  },
  {
    "text": "purpose and the checkpoint er is what allows us to do that upgrade by temporarily running a local API server",
    "start": "1133139",
    "end": "1140140"
  },
  {
    "text": "waiting for the new API server to start back up and then decommission the",
    "start": "1140140",
    "end": "1145570"
  },
  {
    "text": "checkpoint so I can illustrate through some pictures so let's say we have our couplet and our API server the check",
    "start": "1145570",
    "end": "1151690"
  },
  {
    "text": "pointer is watching both and it's basically to try and reconcile the API server says that pod one and two should be running the couplet says that pod one",
    "start": "1151690",
    "end": "1159309"
  },
  {
    "text": "and two are running so we're good this is our steady state the check pointer will create these inactive check points",
    "start": "1159309",
    "end": "1164830"
  },
  {
    "text": "that are just on standby let's say pod two disappears in the Kubla let's say",
    "start": "1164830",
    "end": "1170290"
  },
  {
    "text": "it's the API server it's like this upgrade example you're talking about and it's not able to start a new one because there's no API server if you have this",
    "start": "1170290",
    "end": "1175990"
  },
  {
    "text": "chicken-and-egg problem the check pointer will see this it will activate the static manifest a check point this",
    "start": "1175990",
    "end": "1184090"
  },
  {
    "text": "pod will start the it's an API server so now the couplet can talk to it and decide oh I should be running an API",
    "start": "1184090",
    "end": "1189730"
  },
  {
    "text": "server so it'll actually run the real API server pod the check pointer sees ok",
    "start": "1189730",
    "end": "1195690"
  },
  {
    "text": "API server and Kubler matching again and it'll just retire the static pod so pretty simple but not obvious and it",
    "start": "1195690",
    "end": "1203919"
  },
  {
    "text": "helps us both in upgrades and in reboot situations and we're back to our steady state the last piece here I want to talk",
    "start": "1203919",
    "end": "1211240"
  },
  {
    "start": "1209000",
    "end": "1209000"
  },
  {
    "text": "about is recovery so the check point helps us in some cases but not from all outages for example in the example I",
    "start": "1211240",
    "end": "1219190"
  },
  {
    "text": "gave about scaling your scheduler down to zero you don't have a functional control plane anymore so you can't fix what's broken your",
    "start": "1219190",
    "end": "1224919"
  },
  {
    "text": "needs we need a bigger tool so if only there was a way to jumpstart a cluster",
    "start": "1224919",
    "end": "1230580"
  },
  {
    "text": "jumpstart sounds kind of like bootstrap so clever hack number three comes in which is we actually use boot cube to",
    "start": "1230580",
    "end": "1237520"
  },
  {
    "text": "extract manifest from the cluster and then run another temporary control plane so just like when we started the cluster",
    "start": "1237520",
    "end": "1243549"
  },
  {
    "text": "the first time we can do the same trick to create a control plane that's pointing at our same at CD fix",
    "start": "1243549",
    "end": "1250390"
  },
  {
    "text": "whatever's broken and then on we go so I'm going to do a quick demo of this we're going to purposely break our",
    "start": "1250390",
    "end": "1258580"
  },
  {
    "text": "cluster so let's say coop cuddle and good system",
    "start": "1258580",
    "end": "1265410"
  },
  {
    "text": "that's that I did this earlier that's probably easier okay so we're gonna",
    "start": "1266130",
    "end": "1272220"
  },
  {
    "text": "scale our coupe scheduler to zero replicas because why not",
    "start": "1272220",
    "end": "1277460"
  },
  {
    "text": "so if we say you know get pods we see",
    "start": "1277460",
    "end": "1282630"
  },
  {
    "text": "got two schedulers that are terminating that's bad news so we can do go away",
    "start": "1282630",
    "end": "1288390"
  },
  {
    "text": "okay they're gone well oops I didn't really mean to schedule it to two maybe I didn't at ten or something sorry zero",
    "start": "1288390",
    "end": "1294450"
  },
  {
    "text": "I'm at ten so let's scale it back up okay that worked right API server said sure that's you want to do but then it's",
    "start": "1294450",
    "end": "1301110"
  },
  {
    "text": "gonna ask the scheduler to schedule those pods and oh we don't have a scheduler all we have is pending pods",
    "start": "1301110",
    "end": "1307380"
  },
  {
    "text": "they're not gonna get scheduled right so what do we do we can use boot kübra cover so let's hop to the server back to",
    "start": "1307380",
    "end": "1315120"
  },
  {
    "text": "our master really quick and so we can say boot Kubb recover and then we say",
    "start": "1315120",
    "end": "1322400"
  },
  {
    "text": "recovery derp is home core recover and",
    "start": "1322400",
    "end": "1329270"
  },
  {
    "text": "then coop config because it needs to talk to the API server in this case we still have an API server Etsy kubernetes",
    "start": "1329270",
    "end": "1337820"
  },
  {
    "text": "good config all right so this talk to the API server and it recreated these",
    "start": "1337820",
    "end": "1343500"
  },
  {
    "text": "bootstrap manifests because if you think about the ones we used to start the cluster that's a one-time thing",
    "start": "1343500",
    "end": "1348600"
  },
  {
    "text": "this could be a year later our cluster is very different we can't reuse those assets but this one is gonna create boot",
    "start": "1348600",
    "end": "1353850"
  },
  {
    "text": "cube start friendly assets so we boot could start it that's boot could start",
    "start": "1353850",
    "end": "1361440"
  },
  {
    "text": "and this time we say the asset der is home sorry Oh cluster recover I was",
    "start": "1361440",
    "end": "1370830"
  },
  {
    "text": "sorry core recover thank you all right so it's the same",
    "start": "1370830",
    "end": "1376350"
  },
  {
    "text": "process it's gonna create a temporary control plane as soon as that happens we're gonna have a scheduler it's gonna",
    "start": "1376350",
    "end": "1381539"
  },
  {
    "text": "be able to schedule two missing schedule pods and we're good again that's just gonna take a second for the couplet to",
    "start": "1381539",
    "end": "1387659"
  },
  {
    "text": "take care of this so well that's recovering and I'll check",
    "start": "1387659",
    "end": "1395870"
  },
  {
    "text": "on in a second I want to talk about what's next for self hosting cell posting is a good place as I mentioned",
    "start": "1395870",
    "end": "1401840"
  },
  {
    "text": "tectonic is core West distribution we're using self hosting in production today lots of clusters it's stable and great",
    "start": "1401840",
    "end": "1408860"
  },
  {
    "text": "and has all these nice properties I talked about but it also unlocks a lot of interesting things we can do to kind",
    "start": "1408860",
    "end": "1414980"
  },
  {
    "text": "of take our cluster management to the next level so one is automated operations there's a lot of things you",
    "start": "1414980",
    "end": "1422840"
  },
  {
    "start": "1418000",
    "end": "1418000"
  },
  {
    "text": "can do now that these are kubernetes objects that you can manage using the cube Nettie's api one is cluster",
    "start": "1422840",
    "end": "1428570"
  },
  {
    "text": "upgrades as I said before you don't really want to be using coop cuddle apply right you want to maybe you use",
    "start": "1428570",
    "end": "1435679"
  },
  {
    "text": "client go and code some logic and specifically want to have kind of fine-grained control over rollout",
    "start": "1435679",
    "end": "1442460"
  },
  {
    "text": "ordering it turns out you're you really want to upgrade your API server first then your scheduler controller manager",
    "start": "1442460",
    "end": "1449360"
  },
  {
    "text": "and lastly your couplets once everything else is okay you also want to maybe handle some pre and post upgrade",
    "start": "1449360",
    "end": "1455660"
  },
  {
    "text": "operations turning on a new flag updating some credentials things like that you can encode this in an operator",
    "start": "1455660",
    "end": "1461890"
  },
  {
    "text": "also couplet upgrades so how do you actually upgrade a couplet well it",
    "start": "1461890",
    "end": "1468140"
  },
  {
    "text": "that's one thing that is running statically on each machine but what why we just deploy a daemon set that can",
    "start": "1468140",
    "end": "1473300"
  },
  {
    "text": "actually run on every machine and make the necessary changes it could you know rpm or Deb install",
    "start": "1473300",
    "end": "1480970"
  },
  {
    "text": "and lastly a configuration management as we know things change over time you might want to change our cluster ideally",
    "start": "1483400",
    "end": "1490450"
  },
  {
    "text": "we don't want to have to tear down our cluster make a new one so one thing we can do is actually have our operator go",
    "start": "1490450",
    "end": "1496870"
  },
  {
    "text": "in and change flags and do the right coordination it could be might might be a nuance process but it's something you can encode in software and it's much",
    "start": "1496870",
    "end": "1503740"
  },
  {
    "text": "less error-prone that way we can even do things like deploying a new network overlay or changing your network",
    "start": "1503740",
    "end": "1509470"
  },
  {
    "text": "settings this is something that we actually do at core OS so actually a lot",
    "start": "1509470",
    "end": "1515470"
  },
  {
    "text": "of these automated operations are things that tectonic does but there are other things that that we're still kind of",
    "start": "1515470",
    "end": "1521800"
  },
  {
    "text": "patting every day similarly we talked about node management how that's simpler but it",
    "start": "1521800",
    "end": "1527650"
  },
  {
    "text": "also by having these unified nodes it unlocks a lot of power as well one is",
    "start": "1527650",
    "end": "1532690"
  },
  {
    "text": "self-healing so I just did a boot kübra cover manually that's also not ideal",
    "start": "1532690",
    "end": "1538540"
  },
  {
    "text": "I had to SSH the Machine I had to run some fans what if there were no dajun's that if the operator senses that there's",
    "start": "1538540",
    "end": "1545920"
  },
  {
    "text": "a control plane problem could remotely invoke the kübra cover or something equivalent to heal your control plane or",
    "start": "1545920",
    "end": "1553960"
  },
  {
    "text": "what about auto scaling you could increase the number of masters if you're",
    "start": "1553960",
    "end": "1559780"
  },
  {
    "text": "experiencing higher load or if your requirements increase over time or what",
    "start": "1559780",
    "end": "1565150"
  },
  {
    "text": "about if since all nodes are the same anytime your autoscaler adds a new node it talks to the operator and says hey",
    "start": "1565150",
    "end": "1571540"
  },
  {
    "text": "I'm in your node what should I be should I be a master or should I be a worker should I have some other specialized role right since all nodes are the same they can be",
    "start": "1571540",
    "end": "1578440"
  },
  {
    "text": "provisioned as anything and lastly node identity so in recent grades versions",
    "start": "1578440",
    "end": "1584620"
  },
  {
    "text": "something called TLS bootstrapping was added which allows every node to have a unique identity by performing a",
    "start": "1584620",
    "end": "1589929"
  },
  {
    "text": "challenge and response with the API server when it joins the cluster and so since our nodes are simple and have very",
    "start": "1589929",
    "end": "1596020"
  },
  {
    "text": "little state they can use this very nicely and we're very close to actually merging this into boot coop should be in",
    "start": "1596020",
    "end": "1601840"
  },
  {
    "text": "hopefully next week so let's just take check bag on our cluster sec yeah it's back so let's let's look at our pods",
    "start": "1601840",
    "end": "1610090"
  },
  {
    "text": "here and yes our scheduler is back we're happy cool",
    "start": "1610090",
    "end": "1615450"
  },
  {
    "text": "so boo cube is a a Cabrini's incubator",
    "start": "1615450",
    "end": "1620650"
  },
  {
    "text": "project and tectonic is core os's specific distribution of communities but",
    "start": "1620650",
    "end": "1626920"
  },
  {
    "text": "we are trying to also get this support actually in upstream so that more commodious users can access it so cube",
    "start": "1626920",
    "end": "1634210"
  },
  {
    "text": "ATM which is the upstream tool for deploying clusters is adding community",
    "start": "1634210",
    "end": "1639760"
  },
  {
    "text": "support a self-hosted create support it's almost done I think you can actually launch clusters now and",
    "start": "1639760",
    "end": "1644830"
  },
  {
    "text": "upgrading is coming next the check pointer instead of being a standalone pod is actually being added to the",
    "start": "1644830",
    "end": "1650470"
  },
  {
    "text": "couplet itself and that is already done for pods and we're just adding support",
    "start": "1650470",
    "end": "1655510"
  },
  {
    "text": "for secrets which is necessary for the API servers the way we run them but as",
    "start": "1655510",
    "end": "1661780"
  },
  {
    "text": "always we need help if you're interested in this kind of stuff if you're interested in coming up with more clever hacks check out cig lifecycle you can",
    "start": "1661780",
    "end": "1669040"
  },
  {
    "text": "join us on slack or our mailing list or and come to our weekly meetings so that's all I've got",
    "start": "1669040",
    "end": "1675340"
  },
  {
    "text": "we have a few minutes for questions if anyone has anything and thank you so much for coming",
    "start": "1675340",
    "end": "1680450"
  },
  {
    "text": "[Applause]",
    "start": "1680450",
    "end": "1683889"
  },
  {
    "text": "all right I think does this work yeah yes in the beginning where was your etsy",
    "start": "1685570",
    "end": "1695539"
  },
  {
    "text": "D cluster ah good question and and how do you feel about self-hosting Etsy D",
    "start": "1695539",
    "end": "1701179"
  },
  {
    "text": "itself right so our my OTD cluster is running on a separate node just natively",
    "start": "1701179",
    "end": "1707779"
  },
  {
    "text": "self hosting at CD is something we've worked on it we've actually uncovered a lot of bugs in the API server as a",
    "start": "1707779",
    "end": "1713419"
  },
  {
    "text": "result in terms of connections because when you're running the self hosted at CD on the pod Network and they're moving",
    "start": "1713419",
    "end": "1719059"
  },
  {
    "text": "around a lot it turns out the API server is not actually resilient to reconfiguring these connections it just",
    "start": "1719059",
    "end": "1725779"
  },
  {
    "text": "was something that we'd never exposed before so we're working on trying to kind of fix ha4 self-hosted at CD and",
    "start": "1725779",
    "end": "1733850"
  },
  {
    "text": "then we'll reevaluate whether that's something to do I think it's something that makes a lot of people nervous",
    "start": "1733850",
    "end": "1739100"
  },
  {
    "text": "because that's it's at CDs kind of the baseline building block but on the other hand you can launch the self host add CD",
    "start": "1739100",
    "end": "1746120"
  },
  {
    "text": "clusters for use not for your control plane and that works really nicely so it's something we've it's experimental",
    "start": "1746120",
    "end": "1752899"
  },
  {
    "text": "actually in boot Kubb you can use it but we know there's some known issues with that that we're trying to fix upstream in the API server sorry if you can pass",
    "start": "1752899",
    "end": "1760880"
  },
  {
    "text": "it to someone hey so what if we want to",
    "start": "1760880",
    "end": "1768230"
  },
  {
    "text": "upgrade kubernetes versions so like we need to drown out a whole cluster right",
    "start": "1768230",
    "end": "1775659"
  },
  {
    "text": "if I want to update from 1.8 to 1.9 you don't have to do that",
    "start": "1775659",
    "end": "1782450"
  },
  {
    "text": "if with tecktonik we are able to upgrade from 1 6 to 1 7 and 1/7 1 8 with no",
    "start": "1782450",
    "end": "1787549"
  },
  {
    "text": "downtime just rolling update exactly as I showed okay what are the bare",
    "start": "1787549",
    "end": "1795100"
  },
  {
    "text": "requirements that you need you might have done it and I missed it um in order to get you need to run the couplet",
    "start": "1795100",
    "end": "1801500"
  },
  {
    "text": "directly on the node right that's not obvious you can't sell foes to cool it in the couplet we tried that one is a little little too",
    "start": "1801500",
    "end": "1809029"
  },
  {
    "text": "tricky and adding new nodes to the collect I guess it doesn't matter where",
    "start": "1809029",
    "end": "1814580"
  },
  {
    "text": "the control pain runs or its daemon set so I'm also confused about the the proxy",
    "start": "1814580",
    "end": "1820259"
  },
  {
    "text": "good I thought that has to run on the node and the Flamel also yes so I kind",
    "start": "1820259",
    "end": "1825869"
  },
  {
    "text": "of lighted this for time but the so we run the control plane on nodes that are",
    "start": "1825869",
    "end": "1831179"
  },
  {
    "text": "labeled as master nodes right so we said we label the nodes we set selectors on",
    "start": "1831179",
    "end": "1836399"
  },
  {
    "text": "our control plane and we set taints on those nodes so that other workloads don't run on them and then for the API",
    "start": "1836399",
    "end": "1842820"
  },
  {
    "text": "server and coup proxy yes those need to have network connectivity so that's why they run as daemon sets using host",
    "start": "1842820",
    "end": "1848369"
  },
  {
    "text": "networking but the controller manager and the scheduler we're able to run as deployments since that doesn't flannel",
    "start": "1848369",
    "end": "1853980"
  },
  {
    "text": "have to have access to the host devices sure yeah it well it uses C&I right so",
    "start": "1853980",
    "end": "1860220"
  },
  {
    "text": "it actually just talks to the couplet and is able to deploy the plugins and that's it and then the proxy is the same",
    "start": "1860220",
    "end": "1867149"
  },
  {
    "text": "way I guess yep very cool so the only binary that you need to run directly on",
    "start": "1867149",
    "end": "1873299"
  },
  {
    "text": "the node is the couplet itself that's right I think we might be out of time",
    "start": "1873299",
    "end": "1879499"
  },
  {
    "text": "one more question anyone okay",
    "start": "1879499",
    "end": "1884779"
  },
  {
    "text": "verification on the snapshot er is it necessary in case of breakdown of communication with the control plane or",
    "start": "1884779",
    "end": "1891029"
  },
  {
    "text": "if there is a breakdown and the node reboots and then the cubelet doesn't know what to start so the checkpoint",
    "start": "1891029",
    "end": "1897509"
  },
  {
    "text": "runs conservatively it's basically trying to reconcile the state between",
    "start": "1897509",
    "end": "1902850"
  },
  {
    "text": "the last time I talked to the API server and what it's seeing on the couplet which I can always see because it's",
    "start": "1902850",
    "end": "1908279"
  },
  {
    "text": "running on the couplet itself so if the API servers down or if there is a network a network partition or something",
    "start": "1908279",
    "end": "1916070"
  },
  {
    "text": "it'll do the conservative thing but in kubernetes land that's what you want right it's if you're running an extra",
    "start": "1916070",
    "end": "1922169"
  },
  {
    "text": "pod theoretically that'll be okay you don't you don't want to have run kinds of workloads where an X you can only",
    "start": "1922169",
    "end": "1927690"
  },
  {
    "text": "have exactly one pod I mean if I if I just rose my control lose my control plane like the connectivity to the API",
    "start": "1927690",
    "end": "1934529"
  },
  {
    "text": "server then will I instantly lose my pods because the cubelet is going to be like oh wait this I don't know what to",
    "start": "1934529",
    "end": "1940710"
  },
  {
    "text": "do or no that's not the way couplet works okay the cupola will keep running what it's running yeah but it's more yes",
    "start": "1940710",
    "end": "1947009"
  },
  {
    "text": "if it reboots or something else happens thanks cool",
    "start": "1947009",
    "end": "1952398"
  },
  {
    "text": "well what do you mean the mix maybe thing and didn't like really quick yes",
    "start": "1957140",
    "end": "1963740"
  },
  {
    "text": "sorry a permanent control plane yes and well we're seeing right now the base of",
    "start": "1963740",
    "end": "1972870"
  },
  {
    "text": "both words correct well the temporary control plane is as the name implies temporary right it's only used when you",
    "start": "1972870",
    "end": "1979290"
  },
  {
    "text": "are starting your cluster or recovering it right but having a permanent control plane and self-hosted control plane yes",
    "start": "1979290",
    "end": "1988520"
  },
  {
    "text": "how about that well but if you're maintaining a permanent control plane then you lose you you have double the",
    "start": "1988520",
    "end": "1995460"
  },
  {
    "text": "overhead and you don't have the benefits of self-hosted control plane in terms of management and stuff right so if you're",
    "start": "1995460",
    "end": "2000650"
  },
  {
    "text": "having main to maintain both it's almost asked what's what's the point in that case ranking because it part of the idea",
    "start": "2000650",
    "end": "2007520"
  },
  {
    "text": "this is simplifying the management of control plane right thank you thanks very much",
    "start": "2007520",
    "end": "2013250"
  },
  {
    "text": "[Applause]",
    "start": "2013250",
    "end": "2016960"
  }
]