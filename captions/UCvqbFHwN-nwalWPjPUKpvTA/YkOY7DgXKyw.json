[
  {
    "text": "right um let's get going so my name is Oliver I am the head of engineering at a",
    "start": "560",
    "end": "5960"
  },
  {
    "text": "company called monzo we're building a bank uh we're based in London so I don't know how many of you will have heard of",
    "start": "5960",
    "end": "11200"
  },
  {
    "text": "us we're reasonably popular in London but we're not in the US yet this is what",
    "start": "11200",
    "end": "18240"
  },
  {
    "text": "we have right now this is a prepaid debit card we have about 70,000 of these in issue but we are building a full",
    "start": "18240",
    "end": "25000"
  },
  {
    "text": "retail bank behind the monzo card there is what we're trying to be is the best",
    "start": "25000",
    "end": "31439"
  },
  {
    "text": "banking app in the world and what this means is this is what you see when you",
    "start": "31439",
    "end": "36640"
  },
  {
    "text": "open the app so this is this is somewhat different to what you might be used to from a Banking App instead of these kind",
    "start": "36640",
    "end": "43280"
  },
  {
    "text": "of cramped indecipherable statement descriptors that you usually get we actually show you the name of a merchant",
    "start": "43280",
    "end": "48960"
  },
  {
    "text": "revolutionary along with their logo and a real-time balance rather than something that's often delayed by 24 or",
    "start": "48960",
    "end": "55199"
  },
  {
    "text": "48 Hours basically we strive to make everything as clear and easy to understand as we can and kind of move",
    "start": "55199",
    "end": "61359"
  },
  {
    "text": "mountains in the background to make this happen but make things really clear and easy for the",
    "start": "61359",
    "end": "66880"
  },
  {
    "text": "user when you go into a transaction you see a lot more kind of detail about that",
    "start": "66880",
    "end": "72799"
  },
  {
    "text": "than what you might be used to so this is my dinner from the other night um so you see immediately there's there's a",
    "start": "72799",
    "end": "79360"
  },
  {
    "text": "map there of where I spent this money there is the logo of the merchant there's a real you know there's actually",
    "start": "79360",
    "end": "84680"
  },
  {
    "text": "a an understandable Merchant name there's a full street address because this transaction was for me abroad this",
    "start": "84680",
    "end": "91079"
  },
  {
    "text": "is in US Dollars it shows me the conversion rate which is depressing right now because of brexit but um there",
    "start": "91079",
    "end": "96920"
  },
  {
    "text": "you go it's categorized automatically as an as eating out um and you can see I",
    "start": "96920",
    "end": "102640"
  },
  {
    "text": "added two Emoji to this transaction and I could attach a receipt as well if I wanted to to do my",
    "start": "102640",
    "end": "108640"
  },
  {
    "text": "expenses and with every transaction you get an immediate instant push",
    "start": "108640",
    "end": "113680"
  },
  {
    "text": "notification so for this case this is something I bought at a store in the UK called tiger you can see there's the tiger emoji that went with it people",
    "start": "113680",
    "end": "120560"
  },
  {
    "text": "really love this stuff uh but it's really simple for us to do one of my favorite features though is um something",
    "start": "120560",
    "end": "127039"
  },
  {
    "text": "again that's super simple and once you've seen it you wonder why this isn't part of every bank account in the world but if you think you've lost your card",
    "start": "127039",
    "end": "134200"
  },
  {
    "text": "you can just freeze your card with a single Tab and then if I were to find it again I can unfreeze it with another tap",
    "start": "134200",
    "end": "140519"
  },
  {
    "text": "or if I don't find it I can order a replacement within the app to be delivered to me the next day so you can",
    "start": "140519",
    "end": "145599"
  },
  {
    "text": "unfreeze it but as I mentioned in as well as just as well as building prepaid card we are building a full UK bank um",
    "start": "145599",
    "end": "154440"
  },
  {
    "text": "and with the Ambitions to be an International Bank at some point in the future and instead of though waiting",
    "start": "154440",
    "end": "160040"
  },
  {
    "text": "waiting until we were a full Bank to launch this thing which is a very long process we've been doing this since",
    "start": "160040",
    "end": "165120"
  },
  {
    "text": "about February last year so about 18 months now actually a bit more than that",
    "start": "165120",
    "end": "170599"
  },
  {
    "text": "um and we're sort of getting toward the end of the part where you know the the",
    "start": "170599",
    "end": "176519"
  },
  {
    "text": "application Phase before we're a bank um but we have a little way to go before we",
    "start": "176519",
    "end": "181800"
  },
  {
    "text": "launch but sometime next year we'll be launching a full bank account which means that in addition to all the things you can currently do with your monzo",
    "start": "181800",
    "end": "188040"
  },
  {
    "text": "card you can get your salary paid into it you can pay your rent from it and you",
    "start": "188040",
    "end": "193640"
  },
  {
    "text": "can borrow money from it so we'll be doing overdraft lending although we don't kind of aspire to do everything",
    "start": "193640",
    "end": "200080"
  },
  {
    "text": "that you might think of from a bank so for instance we don't necessarily want to offer mortgages to our customers what we'd rather do is connect you with",
    "start": "200080",
    "end": "205879"
  },
  {
    "text": "another company who's much better at providing mortgages than we'll ever be to talk a bit more about our application",
    "start": "205879",
    "end": "212519"
  },
  {
    "text": "though when we first started building monzo we sort of realized we wanted our applications to be these four things and",
    "start": "212519",
    "end": "219200"
  },
  {
    "text": "I'll sort of talk about what these mean to us and how kubernetes helps us achieve these in this talk the first one",
    "start": "219200",
    "end": "226720"
  },
  {
    "text": "of these I think is really important this is uh extensible so what this means is that we want to make our application",
    "start": "226720",
    "end": "233079"
  },
  {
    "text": "really easy to change and we want to make it easy to change not just now but in 10 years or even 20 years from now",
    "start": "233079",
    "end": "238480"
  },
  {
    "text": "you know what we have now will not be the gold standard of a bank account in 20 years but we hope that we can",
    "start": "238480",
    "end": "244439"
  },
  {
    "text": "continue to iterate our product much better than kind of Legacy banks have been able",
    "start": "244439",
    "end": "250239"
  },
  {
    "text": "to and so a traditional architecture might look something like this you have",
    "start": "250239",
    "end": "255879"
  },
  {
    "text": "your application where all your business logic sits and it's connected to a database this is like something like a rail app over time as you get bigger you",
    "start": "255879",
    "end": "264520"
  },
  {
    "text": "maybe add a cash as you start to get you know to make things uh to keep things fast",
    "start": "264520",
    "end": "270800"
  },
  {
    "text": "and over time you scale this out you scale your application out you start to balance among the replicas of your",
    "start": "270800",
    "end": "276000"
  },
  {
    "text": "application this is fairly standard stuff and again you over time you start",
    "start": "276000",
    "end": "282120"
  },
  {
    "text": "to replicate more and more things including perhaps your database which is a really painful thing to Shard but the",
    "start": "282120",
    "end": "287160"
  },
  {
    "text": "big problem here is over time your application just gets bigger and bigger and bigger and developers contend",
    "start": "287160",
    "end": "293440"
  },
  {
    "text": "working on one giant cbase because this is deployed as one big unit actually deploying it is quite risky and you end",
    "start": "293440",
    "end": "300280"
  },
  {
    "text": "up with things like the daily weekly or for many banks an annual release cycle which just kills basically any",
    "start": "300280",
    "end": "306080"
  },
  {
    "text": "innovation in your product and as many of you will know basically the what you",
    "start": "306080",
    "end": "311160"
  },
  {
    "text": "need to do here is to start breaking this thing up into into different services but basically unless you're",
    "start": "311160",
    "end": "317520"
  },
  {
    "text": "willing to spend really huge sums of uh money and man hours on this thing it's",
    "start": "317520",
    "end": "322759"
  },
  {
    "text": "very difficult to get rid of the monolith in the center it usually Still Remains in some form or other for many banks this is what they refer to as the",
    "start": "322759",
    "end": "329120"
  },
  {
    "text": "core Bank banking system which is the thing at the center of everything it controls how much money the Bank owes to",
    "start": "329120",
    "end": "334759"
  },
  {
    "text": "who and how much money is owed to the bank um and usually in a bank they will run on something that looks a bit like",
    "start": "334759",
    "end": "340440"
  },
  {
    "text": "this this is a Mainframe from the 80s and literally most banks still run on these things and they back things up to",
    "start": "340440",
    "end": "346319"
  },
  {
    "text": "tape every night and this is just how things are it's decades worth of craft basically that that holds you back but",
    "start": "346319",
    "end": "352240"
  },
  {
    "text": "you can't really get rid of it because change is so risky in these environments and to your customers it still feels",
    "start": "352240",
    "end": "358479"
  },
  {
    "text": "like this it still feels very much like the ' 80s it feels like not much has changed since then and to be honest on a",
    "start": "358479",
    "end": "363880"
  },
  {
    "text": "technology level not a great deal has changed since then um so instead right",
    "start": "363880",
    "end": "369160"
  },
  {
    "text": "from the start we started building our application as a collection of microservices we have about 150 or so of",
    "start": "369160",
    "end": "375520"
  },
  {
    "text": "them in production at the moment and we're sort of adding more all the time this might seem like um Overkill",
    "start": "375520",
    "end": "381360"
  },
  {
    "text": "especially in the early days of when you're building an application but it's really worked for us I think it perhaps",
    "start": "381360",
    "end": "386599"
  },
  {
    "text": "did slow things down a little in the early days but it's really started helpers now that we have a lot more engineers and we're starting to add more",
    "start": "386599",
    "end": "393400"
  },
  {
    "text": "Engineers I think that's um that sort of covers that one I don't really need to you know preach microservices to you I'm",
    "start": "393400",
    "end": "399280"
  },
  {
    "text": "sure you've heard it lots of times before um but one of the one of the things that one of the problems with",
    "start": "399280",
    "end": "405120"
  },
  {
    "text": "this architecture that we've seen and I've seen in previous roles is um these",
    "start": "405120",
    "end": "411280"
  },
  {
    "text": "are somewhat hard to make efficient um and as a startup we can't really afford",
    "start": "411280",
    "end": "417160"
  },
  {
    "text": "huge it budgets like a big Bank and we would like as Engineers higher utilization from our from our",
    "start": "417160",
    "end": "424840"
  },
  {
    "text": "Hardware so the sort of traditional model where you have one service per per",
    "start": "424840",
    "end": "430160"
  },
  {
    "text": "host doesn't really work especially when you have as many services as we do if we were to have to have 150 separate",
    "start": "430160",
    "end": "435879"
  },
  {
    "text": "different classes of host that would be completely stupid um so what we did in",
    "start": "435879",
    "end": "441400"
  },
  {
    "text": "our early um versions of our platform was we just simply ran all the services on all",
    "start": "441400",
    "end": "447759"
  },
  {
    "text": "the hosts which is fine when have a relatively small number of services you can do this but as you start to get more",
    "start": "447759",
    "end": "454400"
  },
  {
    "text": "and more services you start to find that this this breaks down it's no it doesn't",
    "start": "454400",
    "end": "459560"
  },
  {
    "text": "work you can't run 150 services on a single machine and expect them all to be fast or 150 services in every machine",
    "start": "459560",
    "end": "466080"
  },
  {
    "text": "and expect them all to be performant so then you often end up breaking your your",
    "start": "466080",
    "end": "471919"
  },
  {
    "text": "infrastructure out into tiers where you'll maybe have like like we did you have we had like an app tier and we had",
    "start": "471919",
    "end": "477000"
  },
  {
    "text": "a core tier and we had a bunch of other things as well but then the app tier is still kind of over utilized there's too",
    "start": "477000",
    "end": "483039"
  },
  {
    "text": "much contention there and the core tier was underutilized so there's it's not desirable in any respect really what you",
    "start": "483039",
    "end": "489520"
  },
  {
    "text": "really want is to treat your applications as a big pool of resources which is exactly what kubernetes allows",
    "start": "489520",
    "end": "494599"
  },
  {
    "text": "you to do so we can run just one big group of worker machines and run all of our applications there and scale them up",
    "start": "494599",
    "end": "500960"
  },
  {
    "text": "and down as we want to do and this has been really effective for us this is um a graph that shows how much we were",
    "start": "500960",
    "end": "508000"
  },
  {
    "text": "spending on infrastructure the red portion is our old infrastructure that did not run kubernetes the white portion is our new infrastructure that does run",
    "start": "508000",
    "end": "514680"
  },
  {
    "text": "kubernetes and you can see that the new infrastructure costs about a third of the old one that the old one did and it does exactly the same thing",
    "start": "514680",
    "end": "520959"
  },
  {
    "text": "fundamentally as far as the user is concerned so kubernetes has been a really big win for us",
    "start": "520959",
    "end": "528399"
  },
  {
    "text": "there um this is going to be the section where I kind of go into some of the most",
    "start": "528440",
    "end": "534000"
  },
  {
    "text": "detail which is um resilient what we want our application to be is to be",
    "start": "534000",
    "end": "539959"
  },
  {
    "text": "available to our users all the time no matter what's happening we want them to be able to use their bank account to be able to earn and spend their money",
    "start": "539959",
    "end": "547720"
  },
  {
    "text": "and this is very important to everyone in um in a microservices world though you",
    "start": "547720",
    "end": "555240"
  },
  {
    "text": "have you have lots of different services that are often all talking to each other",
    "start": "555240",
    "end": "560480"
  },
  {
    "text": "a large portion of them are talking to other services in fact I think all of them are talking to at least one of the service in our world and failure can",
    "start": "560480",
    "end": "568920"
  },
  {
    "text": "happen Happ at any stage in this kind of pipeline um and it's it's it can be",
    "start": "568920",
    "end": "575800"
  },
  {
    "text": "quite hard to even reason about what's happening in this sort of architecture and you need a really good RPC layer to",
    "start": "575800",
    "end": "581440"
  },
  {
    "text": "help you manage this complexity in kind of version one we built one ourselves we were using rabbit mq for RPC which",
    "start": "581440",
    "end": "588440"
  },
  {
    "text": "didn't work out so great in the long run um it it was really good in the early days but that wasn't where we wanted to",
    "start": "588440",
    "end": "595519"
  },
  {
    "text": "continue going especially as we moved into kubernetes isn't really built for an environment where stuff moves around all the time and especially this where",
    "start": "595519",
    "end": "601760"
  },
  {
    "text": "rabbit mq itself moves around all the time and kubernetes does provide a tool",
    "start": "601760",
    "end": "606839"
  },
  {
    "text": "to help help you with this it's called services but it's it's kind of a blunt instrument it just basically round robin",
    "start": "606839",
    "end": "612560"
  },
  {
    "text": "balances your traffic to all of the all of the uh replicas behind that match a selector so if you have a service with a",
    "start": "612560",
    "end": "618760"
  },
  {
    "text": "name and it will it will balance all the traffic across those replicas of a service but not necessarily very",
    "start": "618760",
    "end": "624040"
  },
  {
    "text": "intelligently um what you really want from a good RPC layer is actually it",
    "start": "624040",
    "end": "629440"
  },
  {
    "text": "turns out to be a lot of things it's um and we could of course build all this",
    "start": "629440",
    "end": "634760"
  },
  {
    "text": "stuff ourselves but that would that would just be a real waste and frankly I don't think we can do it much better",
    "start": "634760",
    "end": "640760"
  },
  {
    "text": "than um has already been done and fundamentally what this boils down to is you're trying to do two things you're",
    "start": "640760",
    "end": "646240"
  },
  {
    "text": "trying to minimize the amount of time a request takes from the point of view of a user and um maximize its chance of",
    "start": "646240",
    "end": "652160"
  },
  {
    "text": "succeeding and this kind of as on the previous slide boils down to many many things",
    "start": "652160",
    "end": "658040"
  },
  {
    "text": "um what we use to do this is a piece of software called linky I know um some of",
    "start": "658040",
    "end": "663200"
  },
  {
    "text": "the guys from link are here at cubec con as well and um we're really happy with it so far there at the front um it's",
    "start": "663200",
    "end": "669800"
  },
  {
    "text": "built on um a piece of infrastructure that Twitter created called finagle which is their OPC framework and it's",
    "start": "669800",
    "end": "677000"
  },
  {
    "text": "been in use there for many years and other companies and we're really happy with with what it does and to give you",
    "start": "677000",
    "end": "682480"
  },
  {
    "text": "an idea of how we actually run it we run an instance of link a on every single",
    "start": "682480",
    "end": "688600"
  },
  {
    "text": "host in our platform at least those that have these microservices running on them which is the vast majority um and this",
    "start": "688600",
    "end": "697040"
  },
  {
    "text": "model is a pretty good fit for Linked and how we actually uh do this is run it as a demon set in kubernetes so it runs",
    "start": "697040",
    "end": "703320"
  },
  {
    "text": "on all the worker hosts um and each service will talk to its local copy of",
    "start": "703320",
    "end": "709720"
  },
  {
    "text": "link so if I have this service here my I service that wants to send a request to",
    "start": "709720",
    "end": "714760"
  },
  {
    "text": "the Unicorn service it will send a request to its local linked and then it has to make a decision about where to",
    "start": "714760",
    "end": "720680"
  },
  {
    "text": "send it then there'll probably be many replicas in our case there's there's at least three of every service that's running of every um or in this case the",
    "start": "720680",
    "end": "728360"
  },
  {
    "text": "Unicorn service so what it will do is it will make a fairly complex decision about where to send this request it will",
    "start": "728360",
    "end": "734399"
  },
  {
    "text": "um look at how the service has been performing over the last few minutes um and send it to the one that's that's",
    "start": "734399",
    "end": "741959"
  },
  {
    "text": "been performing the best basically I mean it's actually a lot more complicated than that but I won't go into that here and what it will then do",
    "start": "741959",
    "end": "749000"
  },
  {
    "text": "send the request to a remote instance of Link which will then forward it onto the",
    "start": "749000",
    "end": "754399"
  },
  {
    "text": "um to the host to the service on the remote host and then send the request back one of the good things about this",
    "start": "754399",
    "end": "761360"
  },
  {
    "text": "system where you have all these linkeds talking to the other linkeds rather than directly to each individual service is",
    "start": "761360",
    "end": "767040"
  },
  {
    "text": "the connections within your system scales with regard to the number of hosts rather than the number of services",
    "start": "767040",
    "end": "772160"
  },
  {
    "text": "which usually is a much smaller number especially in our case where each machine will be running 20 or 30 services that that results in a lot few",
    "start": "772160",
    "end": "778839"
  },
  {
    "text": "fewer connections between things and so between Any Two Hosts there's only one connection",
    "start": "778839",
    "end": "785000"
  },
  {
    "text": "necessary and if failure happens at any point along this chain things can be retried or at least many things can be",
    "start": "785000",
    "end": "790680"
  },
  {
    "text": "retried not every call in our infrastructure at least at the moment can be unfortunately but that kind of uses the HTTP verb to determine what",
    "start": "790680",
    "end": "798720"
  },
  {
    "text": "that uh whether it's retriable or not so HTTP has these item potent methods and it has non- itm potent method so if it's",
    "start": "798720",
    "end": "804720"
  },
  {
    "text": "an item potent method it's perfectly safe to try the request again even if it's been in its",
    "start": "804720",
    "end": "810320"
  },
  {
    "text": "entirety and to take that upper level we do something quite similar when a request comes into our infrastructure",
    "start": "810320",
    "end": "815760"
  },
  {
    "text": "from the internet as well we use we run all of our stuff on AWS so it comes into an elb then it gets forwarded to an edge",
    "start": "815760",
    "end": "822800"
  },
  {
    "text": "um service which again is just running in kubernetes and then that just gets basically proxied into link and then",
    "start": "822800",
    "end": "828800"
  },
  {
    "text": "sent to um these service this layer of services called API Services which are basically publicly",
    "start": "828800",
    "end": "834360"
  },
  {
    "text": "facing um apis and the The Edge will root it to one of those depending on on its path",
    "start": "834360",
    "end": "840120"
  },
  {
    "text": "basically and again this this is this Edge layer is basically just a simple proxy it does a few other things it does",
    "start": "840120",
    "end": "846880"
  },
  {
    "text": "authentication um and well actually authentication is one of the few things it does and it does logging as well like",
    "start": "846880",
    "end": "853240"
  },
  {
    "text": "it it will assign a trace ID to each request and then we can use that ID throughout our infrastructure to see what happened to that",
    "start": "853240",
    "end": "859399"
  },
  {
    "text": "request so this is um this is actually really simple model and it works really well for",
    "start": "859399",
    "end": "865360"
  },
  {
    "text": "us to sort of talk a bit more about something else we have to do as a bank though um we have to connect to lots and",
    "start": "865360",
    "end": "872440"
  },
  {
    "text": "lots of systems in our case uh at the moment we're connecting to a few one of them is Mastercard to do direct card",
    "start": "872440",
    "end": "878279"
  },
  {
    "text": "payments will be a direct member of MasterCard and there's also a few other payment schemes in the UK one of them is called faster payments another is backs",
    "start": "878279",
    "end": "884120"
  },
  {
    "text": "and basically every country in the world has payment schemes like this and we'll be connecting to to lots and lots of",
    "start": "884120",
    "end": "889880"
  },
  {
    "text": "them over the over the coming years but most of these were built in a different",
    "start": "889880",
    "end": "895240"
  },
  {
    "text": "era or with a different mindset in which communicating over the Internet just isn't really acceptable and most of",
    "start": "895240",
    "end": "900839"
  },
  {
    "text": "these companies will want to bring a wire to you but you can't really go to Amazon where all our services are",
    "start": "900839",
    "end": "906079"
  },
  {
    "text": "running and say can you just plug this wire into the cloud that doesn't really work that's not how that's not how any",
    "start": "906079",
    "end": "911120"
  },
  {
    "text": "of that stuff works so what we actually do is we have to have physical infrastructure to do this and",
    "start": "911120",
    "end": "916800"
  },
  {
    "text": "fundamentally all this is doing is connecting a wire from companies like MasterCard to a wire from AWS they",
    "start": "916800",
    "end": "921920"
  },
  {
    "text": "provide a service called um Direct Connect but actually how we've done this",
    "start": "921920",
    "end": "927519"
  },
  {
    "text": "we think is um it's been interesting for me I'm not a network engineer I'm an application",
    "start": "927519",
    "end": "933160"
  },
  {
    "text": "engineer I'm sure this will be nothing new to network Engineers but I think it's interesting nonetheless one of the",
    "start": "933160",
    "end": "938399"
  },
  {
    "text": "problems with um the infrastructure if this is basically a diagram of how this",
    "start": "938399",
    "end": "944440"
  },
  {
    "text": "would work we connect the wires from MasterCard through to AWS in at least two data centers one of the problems",
    "start": "944440",
    "end": "950639"
  },
  {
    "text": "with this though is when the link between Amazon and one of these data centers goes down there is still um a",
    "start": "950639",
    "end": "957880"
  },
  {
    "text": "link that's up between these third parties and one of those two data centers and they will continue to send",
    "start": "957880",
    "end": "963440"
  },
  {
    "text": "traffic there and think it's it's available because from their perspective it is there's something on the other end of the wire that's there talking to it",
    "start": "963440",
    "end": "969880"
  },
  {
    "text": "and uh that's just really bad you know you'll still get in that case transactions from MasterCard being rooted into a data center that then",
    "start": "969880",
    "end": "975680"
  },
  {
    "text": "can't send them on to where they need to go so terrible experience for users the way we actually solve this is uh using a",
    "start": "975680",
    "end": "983199"
  },
  {
    "text": "technology called bgp This is actually how the internet works I learned quite interesting um",
    "start": "983199",
    "end": "989120"
  },
  {
    "text": "and what it basically says is each machine will say I'm a router for this range of IP addresses send your traffic to me for those for that IP range and",
    "start": "989120",
    "end": "996959"
  },
  {
    "text": "there can be many different ways of reaching a given IP address and it's basically determined by a series of waiting rules where where traffic will",
    "start": "996959",
    "end": "1003600"
  },
  {
    "text": "actually get sent but it continues to say hey I'm over here hey I'm over here hey I'm over here until it doesn't and",
    "start": "1003600",
    "end": "1009000"
  },
  {
    "text": "then if something doesn't um so for instance if this link was to go down the",
    "start": "1009000",
    "end": "1014399"
  },
  {
    "text": "bgp from Amazon would stop being broadcast the data center and it would be removed from the roote table on the other end because it's no longer seeing",
    "start": "1014399",
    "end": "1020720"
  },
  {
    "text": "advertisements from AWS and then it would also stop being propagated to the third parties so all of the link gets",
    "start": "1020720",
    "end": "1026678"
  },
  {
    "text": "severed in that case which is actually good in this case because we still have a redundant link up through another data center which means that uh we can still",
    "start": "1026679",
    "end": "1034438"
  },
  {
    "text": "Route traffic from end to end there the way we actually do this do",
    "start": "1034439",
    "end": "1039798"
  },
  {
    "text": "this excuse me in kubernetes has been interesting um so in the data centers we",
    "start": "1039799",
    "end": "1044839"
  },
  {
    "text": "have a hardware VPN device that that terminates the the VPN but on the kubernetes end things are things are",
    "start": "1044839",
    "end": "1050520"
  },
  {
    "text": "kind of more complex you have um you have an overlay network with your with your kubernetes network um with your",
    "start": "1050520",
    "end": "1057200"
  },
  {
    "text": "kubernetes installation and those IP addresses aren't necessarily rootable from from outside or from nodes that are",
    "start": "1057200",
    "end": "1063240"
  },
  {
    "text": "not on that overlay Network so what we do there is we establish an ipse tunnel from AWS to the data center because that",
    "start": "1063240",
    "end": "1070400"
  },
  {
    "text": "part is basically static routing or actually there's bgp going the other way but that will just complicate things",
    "start": "1070400",
    "end": "1075840"
  },
  {
    "text": "even more um and then through that tunnel we broadcast bgp from a separate",
    "start": "1075840",
    "end": "1081200"
  },
  {
    "text": "container from using uh open source tools uh something called G zebra all the way through the tunnel to the",
    "start": "1081200",
    "end": "1087480"
  },
  {
    "text": "collocation facility and then that gets broadcast on to third parties this has been kind of interesting to do because",
    "start": "1087480",
    "end": "1093799"
  },
  {
    "text": "um for instance setting up an IPC VPN requires special kernel privileges it",
    "start": "1093799",
    "end": "1098840"
  },
  {
    "text": "requires um something called the net admin capability and but we want to be able to do this in containers so we've",
    "start": "1098840",
    "end": "1104640"
  },
  {
    "text": "uh we've had an interesting time getting that running and using some of the more um unusual features of of kubernetes",
    "start": "1104640",
    "end": "1110640"
  },
  {
    "text": "that you don't necessarily interact with every day where you add and drop uh Privileges and kind of you have to have",
    "start": "1110640",
    "end": "1115840"
  },
  {
    "text": "certain kernel modules available on the host to be able to do this but it works actually really nicely in the end it it",
    "start": "1115840",
    "end": "1121720"
  },
  {
    "text": "achieves what we want which is when these links go down so does everything and traffic Still Remains rootable through the through the surviving",
    "start": "1121720",
    "end": "1129799"
  },
  {
    "text": "connection last thing I want to talk about is secure this one again as a bank is is very very important and we take it",
    "start": "1130080",
    "end": "1135799"
  },
  {
    "text": "really seriously we we can't afford to lose people's money we want people to trust us and we don't want to lose money",
    "start": "1135799",
    "end": "1142760"
  },
  {
    "text": "uh security can mean so many different things but um one of the interesting ones I want to talk about is Network",
    "start": "1142760",
    "end": "1149200"
  },
  {
    "text": "isolation when we first started with this infrastructure and when I say this infrastructure I mean our kubernetes",
    "start": "1149200",
    "end": "1155559"
  },
  {
    "text": "infrastructure we um we adopted quite a quite a traditional kind of you know",
    "start": "1155559",
    "end": "1161200"
  },
  {
    "text": "easy to understand design where you separate your infrastructure out into lots of different layers so we would have the kubernetes worker layer we'd",
    "start": "1161200",
    "end": "1167200"
  },
  {
    "text": "have the data layer where databases live we have a bunch of other layers but over time you find it's desirable to run more",
    "start": "1167200",
    "end": "1173960"
  },
  {
    "text": "and more of your applications in kubernetes I mean eventually we want to run everything there including our databases we're not currently doing that",
    "start": "1173960",
    "end": "1180400"
  },
  {
    "text": "but um but sometime in the future especially with uh with pet sets we definitely want to do that and then this",
    "start": "1180400",
    "end": "1187240"
  },
  {
    "text": "layered model starts to break down because you just end up with with one big layer rather than lots of individual layers and what you really need is is",
    "start": "1187240",
    "end": "1194880"
  },
  {
    "text": "isolation within cuber denes not outside it and within the with within the overlay Network and how we do this is um",
    "start": "1194880",
    "end": "1201440"
  },
  {
    "text": "we use Calico we use the network policy implementation part of Calico specifically and so kubernetes defines a",
    "start": "1201440",
    "end": "1210240"
  },
  {
    "text": "network policy object Calico reads this and applies that configuration to the machine basically all it's doing is",
    "start": "1210240",
    "end": "1215440"
  },
  {
    "text": "configuring IP tables at the end of the day but it's a it's an interesting thing so what you can then do is have",
    "start": "1215440",
    "end": "1222400"
  },
  {
    "text": "basically what we do is we have zones within our infrastructure we have um like this super secure Zone a good example of what we might use this for is",
    "start": "1222400",
    "end": "1230320"
  },
  {
    "text": "um when a card payment comes in we we receive a message that contains the Full",
    "start": "1230320",
    "end": "1235360"
  },
  {
    "text": "card number we don't really want the full card number propagating through all of our services we don't want that available within our infrastructure so",
    "start": "1235360",
    "end": "1241480"
  },
  {
    "text": "we tokenize it into something that looks like a real card number actually is a fake card number and those services",
    "start": "1241480",
    "end": "1247679"
  },
  {
    "text": "within that zone are are are PCI Services basically so we're PCI level one compliant and this is how we uh",
    "start": "1247679",
    "end": "1254559"
  },
  {
    "text": "achieve this so things inside that zone cannot t talk to things or rather things outside that zone cannot talk to things",
    "start": "1254559",
    "end": "1261240"
  },
  {
    "text": "inside that zone other than through very well- defined interfaces and so basically you have controlled Ingress",
    "start": "1261240",
    "end": "1267280"
  },
  {
    "text": "into those zones this is really easy to to make happen when you have this set up with Calico you basically just set up",
    "start": "1267280",
    "end": "1272919"
  },
  {
    "text": "this network policy object that says basically Define this Zone this zone is defined as all the all the pods that",
    "start": "1272919",
    "end": "1278960"
  },
  {
    "text": "have this particular label and for those pods with that particular label only pods that have these matching labels may",
    "start": "1278960",
    "end": "1285080"
  },
  {
    "text": "talk to it so in this case this is a policy object that basically says only things inside the same Zone as it can",
    "start": "1285080",
    "end": "1291799"
  },
  {
    "text": "talk to those Services um as I said this is implemented a lowlevel by IP tables so",
    "start": "1291799",
    "end": "1298440"
  },
  {
    "text": "fairly well understood technology um and I think one of the interesting next",
    "start": "1298440",
    "end": "1304400"
  },
  {
    "text": "steps will be to see if we can actually add some of this to link itself we want to be able to extend this to more parts",
    "start": "1304400",
    "end": "1310720"
  },
  {
    "text": "of our infrastructure and when you have something that sits on every host kind of mediating the RPC communication it's",
    "start": "1310720",
    "end": "1316640"
  },
  {
    "text": "a fairly important place to have that so that was kind of a Whistle Stop",
    "start": "1316640",
    "end": "1321960"
  },
  {
    "text": "tour of how we're how we're approaching building infrastructure at monzo I'm happy to answer any questions before I",
    "start": "1321960",
    "end": "1329080"
  },
  {
    "text": "do I did want to do the uh obligatory thing and point out that we're hiring especially we'd love to have um a",
    "start": "1329080",
    "end": "1334760"
  },
  {
    "text": "kubernetes contributor on the team so you can continue your work and also help us operate kubernetes in in a real",
    "start": "1334760",
    "end": "1342320"
  },
  {
    "text": "environment um so come and talk to me if you if you're interested in that at all um",
    "start": "1342320",
    "end": "1348640"
  },
  {
    "text": "yeah I wonder if anyone has any questions",
    "start": "1348640",
    "end": "1355320"
  },
  {
    "text": "yeah so the question was um does this architecture pose obstacles when talking to regulators and I guess Auditors yes",
    "start": "1359200",
    "end": "1366720"
  },
  {
    "text": "it does is the short answer uh this is very unfamiliar to an auditor they will not have seen something like this before",
    "start": "1366720",
    "end": "1372640"
  },
  {
    "text": "but um we basically can't build what we want",
    "start": "1372640",
    "end": "1377960"
  },
  {
    "text": "to build if we were to build it in the same way that everything's been built before so it makes a lot of sense to us to find Auditors who are open-minded and",
    "start": "1377960",
    "end": "1385120"
  },
  {
    "text": "who will work with us to do this and we'll you know take the time to understand or to let us explain to them",
    "start": "1385120",
    "end": "1390960"
  },
  {
    "text": "how our architecture works and how it meets these guidelines because fundamentally any requirement we've ever",
    "start": "1390960",
    "end": "1396039"
  },
  {
    "text": "seen from a regulator has never told us how to build something it's just told us what they expect to have built um but",
    "start": "1396039",
    "end": "1403279"
  },
  {
    "text": "yeah it is a challenge and uh but it makes a lot of sense to us to spend time time and money basically making them see",
    "start": "1403279",
    "end": "1411039"
  },
  {
    "text": "see it the same way we do and of course we want our stuff to be secure and every every requirement we've ever seen you",
    "start": "1411039",
    "end": "1416919"
  },
  {
    "text": "know we go above and beyond that but yeah it's it's different what they've seen",
    "start": "1416919",
    "end": "1422840"
  },
  {
    "text": "before",
    "start": "1422840",
    "end": "1425840"
  },
  {
    "text": "yeah",
    "start": "1428159",
    "end": "1431159"
  },
  {
    "text": "yes",
    "start": "1436880",
    "end": "1439880"
  },
  {
    "text": "so um the question is about data encryption at rest um and yes we do",
    "start": "1447919",
    "end": "1453840"
  },
  {
    "text": "encrypt all the data at rest all of all of the discs that the data is stored on are encrypted um I think what this boils",
    "start": "1453840",
    "end": "1459640"
  },
  {
    "text": "down to is how do you get the secrets to the right places um how do you ensure that basically the thing that should be",
    "start": "1459640",
    "end": "1465600"
  },
  {
    "text": "able to decrypt this can only get the key to decrypt this um we use a bunch of Technologies for this vault is one of",
    "start": "1465600",
    "end": "1471840"
  },
  {
    "text": "them by hashy Corp and we use Amazon's KMS I can't go into extraordinary detail",
    "start": "1471840",
    "end": "1477159"
  },
  {
    "text": "about how a lot of this stuff works but but yeah this boils down to kind of secret management and that's something I'd love to do kind of a blog post about",
    "start": "1477159",
    "end": "1483960"
  },
  {
    "text": "at some point in the future but vault is a really good technology I would take a look at that and I I think another big",
    "start": "1483960",
    "end": "1490559"
  },
  {
    "text": "part of that is making sure that everything is auditable so making sure there are events that everything that happened and you can figure out what has",
    "start": "1490559",
    "end": "1496679"
  },
  {
    "text": "happened and that that helps with that as",
    "start": "1496679",
    "end": "1500720"
  },
  {
    "text": "well yes so so there there is application layer security link can also help with this you can have all your",
    "start": "1508000",
    "end": "1514240"
  },
  {
    "text": "communication between nodes secured automatically with link uh that's not something we're doing at the moment we",
    "start": "1514240",
    "end": "1519360"
  },
  {
    "text": "might look at doing that in the future but uh that there are like application Level things we do as well yes and to",
    "start": "1519360",
    "end": "1524559"
  },
  {
    "text": "ensure that that a request comes from kind of a trusted application or that comes from someone",
    "start": "1524559",
    "end": "1531760"
  },
  {
    "text": "who comes from an application that can assert um who it is in a in a trusted",
    "start": "1531760",
    "end": "1537399"
  },
  {
    "text": "manner yeah",
    "start": "1537399",
    "end": "1542720"
  },
  {
    "text": "okay uh so the question was are there any requirements that m we have to have",
    "start": "1552640",
    "end": "1558399"
  },
  {
    "text": "dedicated instances short answer no there are lots of requirements that say we have to isolate things sufficiently",
    "start": "1558399",
    "end": "1564080"
  },
  {
    "text": "but I've never ever seen one that says You must have a separate physical instance for these if we were to come across one we could certainly do it we",
    "start": "1564080",
    "end": "1569840"
  },
  {
    "text": "could use a dedicated instance on ec2 and add a special label to that that says only this application may run here",
    "start": "1569840",
    "end": "1575520"
  },
  {
    "text": "but um we've not come across that and I would be I would be very skeptical of",
    "start": "1575520",
    "end": "1581640"
  },
  {
    "text": "such a requirement if one did come up okayy",
    "start": "1581640",
    "end": "1589600"
  },
  {
    "text": "sorry so the question was how do we audit the security of the",
    "start": "1596159",
    "end": "1600360"
  },
  {
    "text": "containers MH so um underneath everything we run coreos which is a",
    "start": "1605480",
    "end": "1612480"
  },
  {
    "text": "pretty stripped down Linux distribution that we update very regularly actually the default configuration is for it to",
    "start": "1612480",
    "end": "1618080"
  },
  {
    "text": "update itself um which is quite cool but we don't actually have it updating itself we do kind of control that the",
    "start": "1618080",
    "end": "1625000"
  },
  {
    "text": "images we build are are very Bare Bones they contain only the application we don't use you know we don't for instance",
    "start": "1625000",
    "end": "1630679"
  },
  {
    "text": "base it on a Ubuntu base image we we just have the application in there if we possibly can and we have kind of our own",
    "start": "1630679",
    "end": "1637320"
  },
  {
    "text": "CI pipeline that produces signed images at the end of it um so basically a",
    "start": "1637320",
    "end": "1643039"
  },
  {
    "text": "special set of uh of Builder pods in this instance that have certain Privileges and consign uh images so we",
    "start": "1643039",
    "end": "1650240"
  },
  {
    "text": "know that they're",
    "start": "1650240",
    "end": "1652679"
  },
  {
    "text": "ours good question um are we using name in addition to link a no at the moment we're not our um D tabs which are the uh",
    "start": "1658440",
    "end": "1666519"
  },
  {
    "text": "the routing configuration for link are entirely static we would like to use Ned in the future though one of the really",
    "start": "1666519",
    "end": "1672200"
  },
  {
    "text": "good benefits of this is um that we can do Dynamic routing and change how the application behaves at runtime uh so",
    "start": "1672200",
    "end": "1679240"
  },
  {
    "text": "that's something we're going to do pretty soon yeah but at the minute we don't",
    "start": "1679240",
    "end": "1685840"
  },
  {
    "text": "yeah yeah um so the question was are we doing any form of tracing uh yes lots",
    "start": "1693840",
    "end": "1699279"
  },
  {
    "text": "and lots of tracing um at many different levels the majority of it at the minute is a system we've built ourselves called",
    "start": "1699279",
    "end": "1705480"
  },
  {
    "text": "or it's built on top of a system we built ourselves called log which is structured logging so whenever a request comes in you can see all of the logs",
    "start": "1705480",
    "end": "1711840"
  },
  {
    "text": "that relate to that request um because it has a a a trace ID that's assigned at",
    "start": "1711840",
    "end": "1716880"
  },
  {
    "text": "the top level so and you get that on the response and I can type that into a um a",
    "start": "1716880",
    "end": "1722159"
  },
  {
    "text": "web portal and see all of the log lines that were generated from that request but that doesn't um that isn't the kind",
    "start": "1722159",
    "end": "1727880"
  },
  {
    "text": "of tracing you're talking about I think the kind of tracing you're talking about is where you're able to view timing data for every RPC call made as part of a",
    "start": "1727880",
    "end": "1734720"
  },
  {
    "text": "request and uh no we're not doing anything about that in production at the moment but we are um we're actually",
    "start": "1734720",
    "end": "1740200"
  },
  {
    "text": "using a product called helium we've uh from the Linker guys that provides this which is built on",
    "start": "1740200",
    "end": "1747559"
  },
  {
    "text": "Zipkin hey you guys have a high level of transparency for a bank",
    "start": "1748440",
    "end": "1755640"
  },
  {
    "text": "yesh so the question was have other Banks Show interest in our technology stack uh short answer yes we basically",
    "start": "1764840",
    "end": "1770559"
  },
  {
    "text": "get uh emails and stuff from people in the uh in the it organizations of banks",
    "start": "1770559",
    "end": "1776120"
  },
  {
    "text": "all the time that are interested in our architecture and they kind of basically what we're building is what",
    "start": "1776120",
    "end": "1782279"
  },
  {
    "text": "many of them would like um to be able to have for themselves but getting from where they are now to where to where we",
    "start": "1782279",
    "end": "1789480"
  },
  {
    "text": "are is just an enormous step is an enormous um project for these companies and frankly I don't think they will ever",
    "start": "1789480",
    "end": "1795720"
  },
  {
    "text": "get there",
    "start": "1795720",
    "end": "1799320"
  },
  {
    "text": "hey okay so uh first part of that what was wrong with rabbit mq um rabbit mq we",
    "start": "1810320",
    "end": "1817279"
  },
  {
    "text": "found very hard to to operate in a cloud environment we didn't find it really built for that and it's not it's more",
    "start": "1817279",
    "end": "1823519"
  },
  {
    "text": "built as a message queue than a message bus we found but we have operated it at reasonable scale before um but the kind",
    "start": "1823519",
    "end": "1829919"
  },
  {
    "text": "of the clustering components of rabbit mq are not very good in my opinion um",
    "start": "1829919",
    "end": "1835000"
  },
  {
    "text": "it's not really designed to lose a node and to get that node replaced by another completely identical but not quite the",
    "start": "1835000",
    "end": "1841080"
  },
  {
    "text": "same node um and also the problem we had was we had to build basically an RPC",
    "start": "1841080",
    "end": "1848120"
  },
  {
    "text": "library in every single language we wanted to use we use go for the vast majority of our services but um we're",
    "start": "1848120",
    "end": "1854640"
  },
  {
    "text": "starting to use other languages as well so for instance uh it makes sense to us to build certain services in Java um",
    "start": "1854640",
    "end": "1861720"
  },
  {
    "text": "purely because there are libraries for lots of things in the financial world that are written in Java that don't",
    "start": "1861720",
    "end": "1867080"
  },
  {
    "text": "exist in other in other languages and it's not really worth our time spending ages re-implementing these libraries and",
    "start": "1867080",
    "end": "1873440"
  },
  {
    "text": "um the problem we had though is whenever we wanted to use a new language we would then have to build a new RPC layer that",
    "start": "1873440",
    "end": "1879760"
  },
  {
    "text": "talks the same language as every other service and talks over the same mechanisms and then you have to end up",
    "start": "1879760",
    "end": "1885760"
  },
  {
    "text": "building all these pieces of um pieces of functionality like retrying and all of it into every single language",
    "start": "1885760",
    "end": "1892399"
  },
  {
    "text": "and maintaining those libraries and I've done that previously where I mean Frank we only had two libraries we only had a",
    "start": "1892399",
    "end": "1897639"
  },
  {
    "text": "go one and a Java one and they were just so Divergent after an amount of time because you had the majority of your",
    "start": "1897639",
    "end": "1904240"
  },
  {
    "text": "services and go and like few services in Java Java one was terrible and you end up building uh I think what's been",
    "start": "1904240",
    "end": "1910000"
  },
  {
    "text": "called a distributed monolith where you have tons of shared code that have to go into all the services for them to even",
    "start": "1910000",
    "end": "1915919"
  },
  {
    "text": "run and that's just a very bad patent in my opinion so it kind of um we",
    "start": "1915919",
    "end": "1921240"
  },
  {
    "text": "identified we wanted to use if possible HTTP to do the uh to do the RPC between",
    "start": "1921240",
    "end": "1926320"
  },
  {
    "text": "our services which you might say is not the perfect RPC protocol but it is very",
    "start": "1926320",
    "end": "1931440"
  },
  {
    "text": "widely supported every language out there will have a pretty decent HTTP implementation in its standard library",
    "start": "1931440",
    "end": "1937960"
  },
  {
    "text": "and um we wanted to use that but as I said we didn't want to have all of this um all of this logic in every single",
    "start": "1937960",
    "end": "1944320"
  },
  {
    "text": "application and Link kind of fits that bill very well well it it abstracts that all into a service on its own which um",
    "start": "1944320",
    "end": "1952120"
  },
  {
    "text": "means your service just has to speed HTTP and know how to find its link a and that's all it has to be able to",
    "start": "1952120",
    "end": "1959039"
  },
  {
    "text": "do sorry monitoring how do we do monitoring oh lots of different ways um so we have",
    "start": "1961200",
    "end": "1969120"
  },
  {
    "text": "we have our own monitoring system we have every service will expose some health checks and a monitoring system",
    "start": "1969120",
    "end": "1974679"
  },
  {
    "text": "can go and get those health checks actually kubernetes can get them as well as well or it can get the overall status of the critical health checks of an",
    "start": "1974679",
    "end": "1980639"
  },
  {
    "text": "instance and um then we can do alerting based off the back of that we also have",
    "start": "1980639",
    "end": "1986679"
  },
  {
    "text": "a um a metric system which we uh we use influx DB for that at the moment um and",
    "start": "1986679",
    "end": "1992880"
  },
  {
    "text": "basically every service can emit some some metrics and Link does as well link emits a lot of metrics about what's",
    "start": "1992880",
    "end": "1998039"
  },
  {
    "text": "happening at the RPC layer they get ingested into influx and then we can produce alerts based off the back of",
    "start": "1998039",
    "end": "2003320"
  },
  {
    "text": "those basically and of course there are lots more kind of there are some more",
    "start": "2003320",
    "end": "2009639"
  },
  {
    "text": "like business process level monitoring things in there as well that will monitor kind of what's happening and produce alerts to operational staff",
    "start": "2009639",
    "end": "2015960"
  },
  {
    "text": "rather than to Engineers as well",
    "start": "2015960",
    "end": "2023000"
  },
  {
    "text": "hi what's our data model uh what was the last part of your question",
    "start": "2026159",
    "end": "2031559"
  },
  {
    "text": "sorry sorry",
    "start": "2035679",
    "end": "2038960"
  },
  {
    "text": "atom oh I see okay so basically all of our data currently is stored in Cassandra um that's the database we use",
    "start": "2045720",
    "end": "2053280"
  },
  {
    "text": "which might sound a little bit crazy in a banking environment but um we do think it is actually a really good fit when",
    "start": "2053280",
    "end": "2058440"
  },
  {
    "text": "you when you take a look at it basically every service will own its own database",
    "start": "2058440",
    "end": "2063638"
  },
  {
    "text": "services do not talk to the databases of other services if they want to get data or modify data they have to talk to",
    "start": "2063639",
    "end": "2069800"
  },
  {
    "text": "another service and um they do that through a series of end points on every service and uh I think you're asking",
    "start": "2069800",
    "end": "2077358"
  },
  {
    "text": "about transactions as well so the the short answer to transactions is that they do not exist transactions that kind",
    "start": "2077359",
    "end": "2084720"
  },
  {
    "text": "of span multiple rpcs but there are mechanisms to compensate when something",
    "start": "2084720",
    "end": "2089919"
  },
  {
    "text": "fails and to be able to roll back um changes but that um how we actually",
    "start": "2089919",
    "end": "2095760"
  },
  {
    "text": "achieve things like transaction processing that has to happen exactly once um is something we're working on at",
    "start": "2095760",
    "end": "2101480"
  },
  {
    "text": "the moment and I think that would that would make an interesting talk all on its own when we've uh when we've actually got that",
    "start": "2101480",
    "end": "2108560"
  },
  {
    "text": "working cool well thank you very",
    "start": "2111480",
    "end": "2115960"
  },
  {
    "text": "much",
    "start": "2118800",
    "end": "2121800"
  }
]