[
  {
    "start": "0",
    "end": "152000"
  },
  {
    "text": "okay so my name is Tanya Rico I'm in Community Development at Red Hat and yes",
    "start": "30",
    "end": "7230"
  },
  {
    "text": "that's my actual name I didn't change it because of this industry like repository it's only a rebound",
    "start": "7230",
    "end": "12509"
  },
  {
    "text": "I heard all of the jokes so I'm excited to be here and introduce you today with",
    "start": "12509",
    "end": "19859"
  },
  {
    "text": "Christie Wilson and Jason hall from Google with Russian doll extending containers witnesses processes just as a",
    "start": "19859",
    "end": "27750"
  },
  {
    "text": "kind reminder for you guys you can rate the session after words we're at the end",
    "start": "27750",
    "end": "33809"
  },
  {
    "text": "so it's shed calm you might know that and we're gonna have a Q&A session also",
    "start": "33809",
    "end": "38850"
  },
  {
    "text": "at the end of the session so please just raise your hand and I will run to you",
    "start": "38850",
    "end": "44550"
  },
  {
    "text": "with a microphone but with a further adieu I will let Christie and chase until they're sorry okay thank you all",
    "start": "44550",
    "end": "56910"
  },
  {
    "text": "right hey Christie hey Jason is this huh yeah",
    "start": "56910",
    "end": "61920"
  },
  {
    "text": "there we go so I made you an ASCII art Russian doll of a cat because I know how",
    "start": "61920",
    "end": "68970"
  },
  {
    "text": "much you love Russian dolls and I know how much you love cats and I know how much you love ASCII art and those it",
    "start": "68970",
    "end": "74520"
  },
  {
    "text": "does another three things you like do you want to see it yes all right here we go is everybody ready you ready to see it no mmm-hmm that's that could be",
    "start": "74520",
    "end": "86520"
  },
  {
    "text": "better that does not look that isn't Thanks it says meow but it could be",
    "start": "86520",
    "end": "92640"
  },
  {
    "text": "better I think I know I think I know what I did wrong I used a kubernetes pod to print this ASCII art and kubernetes pods run all",
    "start": "92640",
    "end": "100439"
  },
  {
    "text": "the containers at once and so there's no sense of ordering and so that's why my",
    "start": "100439",
    "end": "107100"
  },
  {
    "text": "beautiful ASCII art came out so bad I think you know we really need to be able",
    "start": "107100",
    "end": "112439"
  },
  {
    "text": "to run containers in order yeah I think I have a solution for this let's talk",
    "start": "112439",
    "end": "118110"
  },
  {
    "text": "about it first who are we my name is Jason I have been at Google for 12 years",
    "start": "118110",
    "end": "124920"
  },
  {
    "text": "almost I helped start the Google cloud build team I've worked on K native build and now Tecton with Christie and hey I'm",
    "start": "124920",
    "end": "132420"
  },
  {
    "text": "Christie I'm lead engineer at Google on Tecton I've worked in a bunch of different industries over the years like mobile",
    "start": "132420",
    "end": "139150"
  },
  {
    "text": "foreign currency exchange triple-a video games with at least one if not more people in the audience in fact the first",
    "start": "139150",
    "end": "145360"
  },
  {
    "text": "person I ever did a talk like this with it's in the audience thank you Michael yeah so what we're going to do today is",
    "start": "145360",
    "end": "155470"
  },
  {
    "start": "152000",
    "end": "411000"
  },
  {
    "text": "tell you about how we have extended pods to so that we could add ordering to them",
    "start": "155470",
    "end": "160680"
  },
  {
    "text": "we're still not really sure ourselves if this is like a really cool thing or a really horrible hack it's probably a bit",
    "start": "160680",
    "end": "168250"
  },
  {
    "text": "of both of them but either way we think it's really powerful so we wanted to show you just in case it's useful to you",
    "start": "168250",
    "end": "173890"
  },
  {
    "text": "and maybe eventually this could become a full-blown feature first let's take a",
    "start": "173890",
    "end": "180250"
  },
  {
    "text": "look at what we're going to be talking about today so we're going to start off with an explanation of Tecton at a super",
    "start": "180250",
    "end": "186010"
  },
  {
    "text": "high level so that you can understand the problem that we had to solve then we'll talk about some of our initial",
    "start": "186010",
    "end": "191770"
  },
  {
    "text": "approaches and why they didn't work so well finally we will share our horrible hack I mean magic amazing thing that we did",
    "start": "191770",
    "end": "199750"
  },
  {
    "text": "with you so that you could do it too if you wanted to and we'll show you a quick demo of it in action and we'll finish up",
    "start": "199750",
    "end": "206260"
  },
  {
    "text": "by describing some of the cool stuff that this unlocks that we could do in the future all right so first we're",
    "start": "206260",
    "end": "212860"
  },
  {
    "text": "gonna start with the Tecton 101 Tecton is a project that defines CI CD building",
    "start": "212860",
    "end": "218980"
  },
  {
    "text": "blocks for kubernetes these building blocks are things like tasks pipelines that stitch together tasks pipeline",
    "start": "218980",
    "end": "225459"
  },
  {
    "text": "resources that represent things like git repos and pull requests and container images in a registry the idea of Tecton",
    "start": "225459",
    "end": "233860"
  },
  {
    "text": "is maximum plug ability you should be able to define your own workflows and plug it into Tecton very easily Tecton",
    "start": "233860",
    "end": "240790"
  },
  {
    "text": "API is a kubernetes style API with a kubernetes implementation that builds on",
    "start": "240790",
    "end": "246730"
  },
  {
    "text": "top of some kubernetes primitives and provides higher level abstractions for CI CD workflows the first one er the",
    "start": "246730",
    "end": "253840"
  },
  {
    "text": "main thing we're going to talk about today is tasks so tasks are a workflow template you can define it once and run",
    "start": "253840",
    "end": "260680"
  },
  {
    "text": "it over and over and over again you can parameterize tasks so that you can passing args for each time you run to",
    "start": "260680",
    "end": "268759"
  },
  {
    "text": "pass a different argument each time tasks are comprised of containerized steps which run sequentially mostly an",
    "start": "268759",
    "end": "276620"
  },
  {
    "text": "example of a task is something that would get cloned your repo run covet",
    "start": "276620",
    "end": "281900"
  },
  {
    "text": "goal in go build and go test this is an example of a very very simple task it",
    "start": "281900",
    "end": "289099"
  },
  {
    "text": "runs it uses the go image the go line container image it runs go build on",
    "start": "289099",
    "end": "294379"
  },
  {
    "text": "whatever source is available that's a very simple task but unfortunately it's",
    "start": "294379",
    "end": "299419"
  },
  {
    "text": "just not enough yah mph or khoob khun so we have to kick it up a notch that's better that's that's why we all came",
    "start": "299419",
    "end": "305060"
  },
  {
    "text": "here we came to see beautiful slides of llam√≥ this is an example of a build packed",
    "start": "305060",
    "end": "311360"
  },
  {
    "text": "task build pecs is another CN CF project you don't actually have to know anything about build pecs specifically to",
    "start": "311360",
    "end": "316819"
  },
  {
    "text": "understand this task but it's here as an example so the build pecs task defines",
    "start": "316819",
    "end": "322430"
  },
  {
    "text": "multiple steps that each run an important part of the build pack process the first step prepares the workspace",
    "start": "322430",
    "end": "327860"
  },
  {
    "text": "the second step detects what language you're going to use the third step analyzes looks for details of previous",
    "start": "327860",
    "end": "335690"
  },
  {
    "text": "builds to be able to possibly reuse those then it builds the source then it exports that to a container image",
    "start": "335690",
    "end": "341210"
  },
  {
    "text": "registry then it writes data to a cache to potentially use next time again you don't have to know how build PEX does",
    "start": "341210",
    "end": "347539"
  },
  {
    "text": "any of that or really what any of that means you just have to know that they must run in order if you ran this task",
    "start": "347539",
    "end": "353270"
  },
  {
    "text": "without if you try to export something before building it or build it before detecting what language you're gonna",
    "start": "353270",
    "end": "358969"
  },
  {
    "text": "build you're gonna have a bad time so ordering is really really important detect on and how do we get how are we",
    "start": "358969",
    "end": "366440"
  },
  {
    "text": "going to run this on kubernetes so like a lot of things in kubernetes it all just boils down to a pod most things are",
    "start": "366440",
    "end": "372409"
  },
  {
    "text": "a lot of things in kubernetes are just you know wrappers around improvements upon the kubernetes pod things like jobs",
    "start": "372409",
    "end": "379340"
  },
  {
    "text": "and deployments and daemon sets and replica sets are just wrappers around pods effectively and pods are great but",
    "start": "379340",
    "end": "386360"
  },
  {
    "text": "they're pretty purposefully built for serving scenarios things where you want to start a container run it for a long",
    "start": "386360",
    "end": "391610"
  },
  {
    "text": "time you don't expect it to finish if it ever does finish usually you want to restart it",
    "start": "391610",
    "end": "397070"
  },
  {
    "text": "so that's great for kubernetes serving scenarios and it's not great for what we need it for",
    "start": "397070",
    "end": "402860"
  },
  {
    "text": "in particular we need to run these containers in order and it turns out it's just not that straightforward to",
    "start": "402860",
    "end": "409610"
  },
  {
    "text": "run a bunch of containers in order so let's start with a little bit of a story about how we initially tackled this and",
    "start": "409610",
    "end": "416800"
  },
  {
    "start": "411000",
    "end": "537000"
  },
  {
    "text": "I think everyone knows before you write something you have to start with the requirements right like you don't ever",
    "start": "416800",
    "end": "423800"
  },
  {
    "text": "just make something before the requirements or like figure out the requirements afterwards right definitely",
    "start": "423800",
    "end": "429230"
  },
  {
    "text": "definitely so let's start with the requirements for tasks we have to run multiple containers we want them to run",
    "start": "429230",
    "end": "436220"
  },
  {
    "text": "in order and we want them to be able to share data really easily because we want one step to be able to maybe write a",
    "start": "436220",
    "end": "442940"
  },
  {
    "text": "file and then the next step to be able to easily read that file but how do you",
    "start": "442940",
    "end": "449780"
  },
  {
    "text": "get a bunch of containers to share data there's a few options so like Jason was",
    "start": "449780",
    "end": "454880"
  },
  {
    "text": "saying the most natural unit in kubernetes for doing this is a pod because all the containers in a pod run",
    "start": "454880",
    "end": "461240"
  },
  {
    "text": "on the same node so they can actually share the same physical disk if we wanted to use separate pods we have a",
    "start": "461240",
    "end": "467330"
  },
  {
    "text": "couple of options we could use node affinity to control where those pods end up and put them on the same node or we",
    "start": "467330",
    "end": "473180"
  },
  {
    "text": "could even write our own custom scheduler if we wanted but in with both of those options we're still operating",
    "start": "473180",
    "end": "478520"
  },
  {
    "text": "at the level of a pod because we're putting pods on particular nodes and we still can't share data between the",
    "start": "478520",
    "end": "484280"
  },
  {
    "text": "containers unless we add a volume into the mix sometimes people ask us why",
    "start": "484280",
    "end": "490190"
  },
  {
    "text": "we're not using jobs and it's true that they do have a lot of the features that we need from tasks you can run them to",
    "start": "490190",
    "end": "496640"
  },
  {
    "text": "completion you can specify a deadline you can retry them if they fail but they",
    "start": "496640",
    "end": "502100"
  },
  {
    "text": "still don't solve the problem of running a bunch of containers in order and letting them share disk but they're just",
    "start": "502100",
    "end": "507470"
  },
  {
    "text": "like Jason was saying an abstraction over pods so ultimately we decided to use pods as our unit but we might",
    "start": "507470",
    "end": "515390"
  },
  {
    "text": "eventually rethink that and maybe we would use jobs underneath so we decided",
    "start": "515390",
    "end": "520460"
  },
  {
    "text": "that a pod is the best unit to express what we want but there's no concept of ordering in a pod right wait is there",
    "start": "520460",
    "end": "528430"
  },
  {
    "text": "is there any way to run containers in order in a pod well that brings us to",
    "start": "528430",
    "end": "534820"
  },
  {
    "text": "our first iteration of how we tried to solve this I knew something was familiar about that in knit containers it turns out that in",
    "start": "534820",
    "end": "542230"
  },
  {
    "start": "537000",
    "end": "622000"
  },
  {
    "text": "knit containers are actually containers that run an order on a pod they're designed for things like",
    "start": "542230",
    "end": "547780"
  },
  {
    "text": "initializing the environment of the pods like fetching some credentials beforehand and they run in the order",
    "start": "547780",
    "end": "553840"
  },
  {
    "text": "that they're specified so I think you know I think that's it we're done all right talk over yeah we did it",
    "start": "553840",
    "end": "560980"
  },
  {
    "text": "what's it what's that last thing say something about sidecars oh what's that",
    "start": "560980",
    "end": "565990"
  },
  {
    "text": "about oh yeah sidecars yeah so it we did use init containers initially and it",
    "start": "565990",
    "end": "572140"
  },
  {
    "text": "worked for a little while but then we started running into other stuff that we wanted to do like supporting sidecars",
    "start": "572140",
    "end": "578430"
  },
  {
    "text": "side cards as a term is something that doesn't really have like a clear definition it's kind of you know it when",
    "start": "578430",
    "end": "585010"
  },
  {
    "text": "you see it but it's basically some container that's not the main container that you're running you're trying to run",
    "start": "585010",
    "end": "590260"
  },
  {
    "text": "some main container but you need a supporting container like for example sto will actually inject a proxy",
    "start": "590260",
    "end": "596350"
  },
  {
    "text": "container into your pod for proxying requests in the context of tasks we",
    "start": "596350",
    "end": "602290"
  },
  {
    "text": "might have a user who wants to run a bunch of steps and maybe they have a service they're testing that they want to run alongside and run tests against",
    "start": "602290",
    "end": "609460"
  },
  {
    "text": "or maybe they want to proxy all the requests to do things like recording recording the requests as they come in",
    "start": "609460",
    "end": "615340"
  },
  {
    "text": "and none of this works with the NIC containers you cannot run sidecars alongside init containers so init",
    "start": "615340",
    "end": "623170"
  },
  {
    "start": "622000",
    "end": "917000"
  },
  {
    "text": "containers did not work for us so and there's no real good built in solution",
    "start": "623170",
    "end": "630070"
  },
  {
    "text": "in kubernetes for running a bunch of containers in order which brings us to",
    "start": "630070",
    "end": "636930"
  },
  {
    "text": "the terrible hacks I mean magic sauce we change that we change the slides the magic sauce is natural hacks so yeah so we needed some",
    "start": "636930",
    "end": "644410"
  },
  {
    "text": "way to have containers wait for a previous container to finish and then",
    "start": "644410",
    "end": "649420"
  },
  {
    "text": "run and then when it finished run to the next one sort of like revealed like a relay race",
    "start": "649420",
    "end": "656640"
  },
  {
    "text": "the first thing we had to do to understand how to solve this was can understand container entry points so",
    "start": "656880",
    "end": "661980"
  },
  {
    "text": "containers specify what to run when they start there's two ways this can be done one is it can be baked into the",
    "start": "661980",
    "end": "668670"
  },
  {
    "text": "container image in a docker file you see that the the directive entry point that says when this container image starts",
    "start": "668670",
    "end": "674930"
  },
  {
    "text": "run this command and the other way is in when you specify a container in a pod",
    "start": "674930",
    "end": "680130"
  },
  {
    "text": "for instance you can set the command that overrides the entry point in the image and runs that instead so this is a",
    "start": "680130",
    "end": "686310"
  },
  {
    "text": "natural place to start hooking in our own logic which we did by overloading the entry point first we override",
    "start": "686310",
    "end": "694199"
  },
  {
    "text": "whatever entry point the user specified with our own entry point that we control",
    "start": "694199",
    "end": "699740"
  },
  {
    "text": "then we pass the original command and args that the user asked for to our binary we run whatever they asked for",
    "start": "699740",
    "end": "707880"
  },
  {
    "text": "when we are told to start and then when we're done we signal the next step time",
    "start": "707880",
    "end": "713279"
  },
  {
    "text": "to start but in order to do this we need to be able to inject our entry point",
    "start": "713279",
    "end": "718740"
  },
  {
    "text": "binary somehow and this took again another level of terrible hacks so what",
    "start": "718740",
    "end": "724079"
  },
  {
    "text": "we do is we run it in a container before all the steps start that contains the binary that we write we copy it into a",
    "start": "724079",
    "end": "731130"
  },
  {
    "text": "volume at in context on its slash builder slash tools and that container that volume is shared across all",
    "start": "731130",
    "end": "737310"
  },
  {
    "text": "containers in the steps then we overload or override each steps command to point",
    "start": "737310",
    "end": "743759"
  },
  {
    "text": "to our binary instead of the original one that is specified and we passed the original command and args to our binary",
    "start": "743759",
    "end": "752000"
  },
  {
    "text": "so the entry point binary that we wrote is a statically linked go binary which means it doesn't depend on anything else",
    "start": "752000",
    "end": "757949"
  },
  {
    "text": "being available in the container it would run in something that doesn't have any other tools available I think we",
    "start": "757949",
    "end": "763800"
  },
  {
    "text": "stole most of this logic from prowl yeah so how do we support sidecars in this",
    "start": "763800",
    "end": "769829"
  },
  {
    "text": "mode so we have a job that runs outside of the pod that watches it for updates I",
    "start": "769829",
    "end": "775620"
  },
  {
    "text": "called the controller when the controller sees that all the sidecar containers are up it",
    "start": "775620",
    "end": "780870"
  },
  {
    "text": "annotates the pod with a a ready annotation we use the downward API to",
    "start": "780870",
    "end": "787019"
  },
  {
    "text": "project the annotations of the pod into a volume in the in the pod yeah into a volume in each container the",
    "start": "787019",
    "end": "795630"
  },
  {
    "text": "downward API exposes any metadata about a pod two labels annotations things like that as files and so step 0 waits to see",
    "start": "795630",
    "end": "804480"
  },
  {
    "text": "that ready annotation to start running and then it does whatever it needs to do and then it writes a file to two signals",
    "start": "804480",
    "end": "811350"
  },
  {
    "text": "step two to start and so on and so on there's actually really exciting change",
    "start": "811350",
    "end": "817080"
  },
  {
    "text": "in the works for better more official support for sidecars cap 753 is what is",
    "start": "817080",
    "end": "823890"
  },
  {
    "text": "called kep stands for kubernetes enhancement proposal this is actually really going to help for sidecar cases",
    "start": "823890",
    "end": "829350"
  },
  {
    "text": "that aren't tacked on things like the SDO sidecar and and other proxies like that",
    "start": "829350",
    "end": "834960"
  },
  {
    "text": "if you label or sorry if you tell kubernetes that this that this container",
    "start": "834960",
    "end": "840480"
  },
  {
    "text": "is a sidecar it will start all of the sidecar containers first make sure that they're up and then run the rest of the",
    "start": "840480",
    "end": "846540"
  },
  {
    "text": "containers in the pod and then when all of the regular containers in the pod finish it will gracefully exit all of",
    "start": "846540",
    "end": "853080"
  },
  {
    "text": "the sidebar containers but even with this cap side cars don't run until after",
    "start": "853080",
    "end": "859470"
  },
  {
    "text": "the unit containers so we still can't like use init containers and get ordering for free also this cap is",
    "start": "859470",
    "end": "865770"
  },
  {
    "text": "targeted for alpha in kubernetes 1.18 which means we'll be waiting a little bit to be able to use it in regular",
    "start": "865770",
    "end": "871680"
  },
  {
    "text": "usage but it'll be really great for some of for some use cases",
    "start": "871680",
    "end": "876770"
  },
  {
    "text": "there are also some caveats about what we what terrible hacks we employed to solve this problem the containers all",
    "start": "876770",
    "end": "883920"
  },
  {
    "text": "start at the same time according to the pod the pod says start all of my containers the first ones entry point",
    "start": "883920",
    "end": "890460"
  },
  {
    "text": "binary runs and then the second ones entry point binary runs but to the pod all of the containers started at the",
    "start": "890460",
    "end": "895740"
  },
  {
    "text": "same time which means we don't get a good signal about when each when each container started we also need to to be",
    "start": "895740",
    "end": "904110"
  },
  {
    "text": "able to look up the entry point if it was specified in the image config we have to reach out to the registry to get",
    "start": "904110",
    "end": "909750"
  },
  {
    "text": "that metadata which might require credentials and now we're talking image pull secrets and it's just tax upon tax",
    "start": "909750",
    "end": "915090"
  },
  {
    "text": "upon tax and with that it's time for a demo",
    "start": "915090",
    "end": "922120"
  },
  {
    "start": "917000",
    "end": "1137000"
  },
  {
    "text": "now you hold your microphone that's not",
    "start": "922120",
    "end": "930940"
  },
  {
    "text": "you gonna do this place that thing's",
    "start": "931700",
    "end": "935530"
  },
  {
    "text": "demos demo gods",
    "start": "944260",
    "end": "949630"
  },
  {
    "text": "does it say displays every on displays yes down here we got it this is an",
    "start": "952680",
    "end": "959519"
  },
  {
    "text": "interactive this is like pair programming to the to the max okay okay",
    "start": "959519",
    "end": "976610"
  },
  {
    "text": "[Music] all right thank you okay so this is the",
    "start": "982980",
    "end": "995360"
  },
  {
    "text": "this is the PUD that I originally ran to create the garbled out of order",
    "start": "995360",
    "end": "1000980"
  },
  {
    "text": "kiddie that we saw before so this runs a container to print the outer top layer and then the middle top layer and then",
    "start": "1000980",
    "end": "1007040"
  },
  {
    "text": "the inner top layer and then that middle cat in the middle that says meow and then the inner bottom middle bottom and",
    "start": "1007040",
    "end": "1012740"
  },
  {
    "text": "outer bottom and then print all of the doll that we've created so far",
    "start": "1012740",
    "end": "1019179"
  },
  {
    "text": "so I'm going to run that pod just takes",
    "start": "1024510",
    "end": "1032339"
  },
  {
    "text": "a minute hopefully not a real minute it's a long time it is taking quite a long time mmm",
    "start": "1032339",
    "end": "1040410"
  },
  {
    "text": "demo goods oh there we go it's gonna wait five seconds to wait for the pod to",
    "start": "1040410",
    "end": "1046530"
  },
  {
    "text": "come up and yeah we see another garbled out-of-order cat no matter how many times I run this it is very unlikely to",
    "start": "1046530",
    "end": "1053370"
  },
  {
    "text": "run all the containers I asked for in the necessary order and here's it to us",
    "start": "1053370",
    "end": "1061850"
  },
  {
    "text": "here's a task run version of the same thing this is a Tecton CRD it runs again",
    "start": "1061850",
    "end": "1067919"
  },
  {
    "text": "the outer top the middle top the inner top you might notice the last in the pod I had to like mount the workspace in",
    "start": "1067919",
    "end": "1073290"
  },
  {
    "text": "Tecton we just assume that you want the workspace and then it prints it all together",
    "start": "1073290",
    "end": "1079159"
  },
  {
    "text": "I'm going to run that task run and then this looks up the logs for the pod that",
    "start": "1084920",
    "end": "1091670"
  },
  {
    "text": "we created we had it was does that you always do that",
    "start": "1091670",
    "end": "1096820"
  },
  {
    "text": "this will actually take longer than last time because it's running each container in order last time it just ran all of",
    "start": "1100070",
    "end": "1105590"
  },
  {
    "text": "them at once and so this time it runs the first one and then the second one and then the third one and takes just a",
    "start": "1105590",
    "end": "1112369"
  },
  {
    "text": "little bit longer just a little longer",
    "start": "1112369",
    "end": "1117669"
  },
  {
    "text": "one of these longer longer there we go oh okay that that does look like a",
    "start": "1117669",
    "end": "1124549"
  },
  {
    "text": "Russian doll I get it now I did it that's that's some pretty cool ASCII art yeah thank you spent all day writing",
    "start": "1124549",
    "end": "1130429"
  },
  {
    "text": "that all right cool so I'm gonna go",
    "start": "1130429",
    "end": "1139249"
  },
  {
    "text": "through what you just saw in just a little bit more detail so you can see the details of what we did but one thing",
    "start": "1139249",
    "end": "1144919"
  },
  {
    "text": "I think is pretty cool that I want to stress is that we we did do something very hacky but fortunately our users",
    "start": "1144919",
    "end": "1150979"
  },
  {
    "text": "don't really have to deal with that because we implemented it for them so that means that you can just specify a",
    "start": "1150979",
    "end": "1156109"
  },
  {
    "text": "bunch of things you want to run in order you know run an order and then later on once the side car cap is passed or we",
    "start": "1156109",
    "end": "1163220"
  },
  {
    "text": "actually have support for running containers in order in kubernetes itself then we can just swap the logic out and it won't affect our users at all so",
    "start": "1163220",
    "end": "1168830"
  },
  {
    "text": "that's pretty cool unless they were looking at the status of the pause in which case they'll be very confused which is what I'm going to show you now",
    "start": "1168830",
    "end": "1174970"
  },
  {
    "text": "so as sort of a high-level view of what we were doing this was like a relay race",
    "start": "1174970",
    "end": "1181309"
  },
  {
    "text": "between the containers that we were executing we had several containers outer top middle top in her top and some",
    "start": "1181309",
    "end": "1186919"
  },
  {
    "text": "other ones and they're kind of coordinating who's doing what when bypassing files between each other so",
    "start": "1186919",
    "end": "1193789"
  },
  {
    "text": "here you can see the tasks that Jason was running alongside the pod that ended up running underneath it so the first",
    "start": "1193789",
    "end": "1200359"
  },
  {
    "text": "step that we wanted to run was using the doll image and the outer top command and over here you can see the pod that we",
    "start": "1200359",
    "end": "1206629"
  },
  {
    "text": "actually ran so first the first thing you might notice is that the binary that we're actually running is our binary",
    "start": "1206629",
    "end": "1212929"
  },
  {
    "text": "that we injected into the container you can see that we're passing as an argument to that binary what the user",
    "start": "1212929",
    "end": "1219950"
  },
  {
    "text": "actually wanted to run so it's Dalda SH with the outer top command but if you look at the step you",
    "start": "1219950",
    "end": "1226309"
  },
  {
    "text": "can see that doll dot SH isn't actually in there because that was the entry point of the doll image that was already",
    "start": "1226309",
    "end": "1232249"
  },
  {
    "text": "built so our controller had to actually retrieve the metadata about that image and inspect it to figure out what the entry",
    "start": "1232249",
    "end": "1238790"
  },
  {
    "text": "point was going to be so it could pass it to our binary and then the rest of these arguments tell our binary to wait",
    "start": "1238790",
    "end": "1246350"
  },
  {
    "text": "for the controller to signal with the downward api that all of the side cars are up and ready and they tell it to",
    "start": "1246350",
    "end": "1253340"
  },
  {
    "text": "once it's done to write the file that will signal to the next step that needs to run and this is what the next step",
    "start": "1253340",
    "end": "1259190"
  },
  {
    "text": "looks like so it's the same image but with the middle top command and then you can see that the binary is going to be",
    "start": "1259190",
    "end": "1265760"
  },
  {
    "text": "waiting for the file that came from the previous step and once it's done it'll write another file to tell the next step that it can",
    "start": "1265760",
    "end": "1271429"
  },
  {
    "text": "go yeah this is that's pretty much",
    "start": "1271429",
    "end": "1278210"
  },
  {
    "text": "exactly how we feel about how I feel every day so let's finish off by looking",
    "start": "1278210",
    "end": "1284150"
  },
  {
    "text": "at some of the stuff that we're hoping we can do with this in the future so the first thing I think Jason touched on a",
    "start": "1284150",
    "end": "1289309"
  },
  {
    "text": "bit which is that if you look at the pod it looks like everything started at the same time because technically everything",
    "start": "1289309",
    "end": "1295220"
  },
  {
    "text": "did start running but the user probably wants to know when their particular command actually started so we need to",
    "start": "1295220",
    "end": "1300500"
  },
  {
    "text": "improve that so that when you look at the status you can see when things actually started the next thing is",
    "start": "1300500",
    "end": "1306110"
  },
  {
    "text": "actually really cool I think and means that we're I think it's kind of part of why we're attached to this hack because",
    "start": "1306110",
    "end": "1311900"
  },
  {
    "text": "of the stuff that it unlocks so at the moment each of these binaries is operating independently they're each",
    "start": "1311900",
    "end": "1317120"
  },
  {
    "text": "writing a file and waiting for another file but if we added a sidecar in that was like a super supervisor sidecar then",
    "start": "1317120",
    "end": "1324170"
  },
  {
    "text": "we could use that to coordinate the execution of the containers and then we would have complete control over the",
    "start": "1324170",
    "end": "1329570"
  },
  {
    "text": "life cycle of all of the containers inside the pod and specifically for",
    "start": "1329570",
    "end": "1334760"
  },
  {
    "text": "Tecton which is a CI CD system and you know what CI CD systems things often go wrong and you find yourself wanting to",
    "start": "1334760",
    "end": "1341270"
  },
  {
    "text": "debug them and figure out what's going on we could use this to add a debug mode so in this case the supervisor SCI car",
    "start": "1341270",
    "end": "1348230"
  },
  {
    "text": "would wait until it was instructed from some external input to start executing things and we could make it so you could",
    "start": "1348230",
    "end": "1354770"
  },
  {
    "text": "attach a debugger to it maybe from your favorite IDE and then you'd actually be able to step through the execution of",
    "start": "1354770",
    "end": "1360380"
  },
  {
    "text": "all of the containers that are inside that pod and inspect the filesystem and it'd be pretty cool we didn't come",
    "start": "1360380",
    "end": "1369929"
  },
  {
    "text": "up with this hack on our own a number of people helped and are implicated in its terribleness there are some of their",
    "start": "1369929",
    "end": "1375840"
  },
  {
    "text": "names right here and with that in closing if you want to go see this code",
    "start": "1375840",
    "end": "1381179"
  },
  {
    "text": "and see how terrible it is in real life it's not terrible it's not that bad it's all of the Tecton pipeline code is that",
    "start": "1381179",
    "end": "1388049"
  },
  {
    "text": "tectonics re github.com slash Tecton save each slash pipeline if you want to",
    "start": "1388049",
    "end": "1393870"
  },
  {
    "text": "see more example tasks like the build packs tasks that I showed you before you can see that at the Tecton CD catalog if",
    "start": "1393870",
    "end": "1400020"
  },
  {
    "text": "you are using Tecton or are interested to see how other people are using Tecton you can become a friend and file or tell",
    "start": "1400020",
    "end": "1407340"
  },
  {
    "text": "us how do you do that at Tecton CD / friends and if you have any questions you can join us on our slack and ask",
    "start": "1407340",
    "end": "1414210"
  },
  {
    "text": "questions at that short link there or you can ask questions here in person",
    "start": "1414210",
    "end": "1420110"
  },
  {
    "text": "questions I think there's a microphone that's going to be yeah let's give a",
    "start": "1420110",
    "end": "1427470"
  },
  {
    "text": "round of applause the Christianization personal thank you",
    "start": "1427470",
    "end": "1432899"
  },
  {
    "text": "well I actually got you guys the question before you even get started when you share the slights personal here",
    "start": "1432899",
    "end": "1441720"
  },
  {
    "text": "trade secret so I might be armchair over engineering here and if so it's",
    "start": "1441720",
    "end": "1448230"
  },
  {
    "text": "perfectly okay to say yes you are this is the kind of thing that I would think would be an ideal case for something",
    "start": "1448230",
    "end": "1454710"
  },
  {
    "text": "like a message q did you look at maybe putting a message queue in as part of Tecton itself or did that strike you as",
    "start": "1454710",
    "end": "1461159"
  },
  {
    "text": "like too heavy weight for this kind of solution when you say message queue do you mean like built into the operating",
    "start": "1461159",
    "end": "1467580"
  },
  {
    "text": "system message queue or do you mean like something like outside that's like running and like emitting like cloud events and reading them like just you",
    "start": "1467580",
    "end": "1474299"
  },
  {
    "text": "know install like a you know something where you can read and write Kafka topics or something like that so that",
    "start": "1474299",
    "end": "1479340"
  },
  {
    "text": "you know instead of writing a file you're writing to a CAF kotappa canned then the next stage binary is reading",
    "start": "1479340",
    "end": "1485700"
  },
  {
    "text": "that Kefka topic and saying okay now I can start yeah I think I mean first of",
    "start": "1485700",
    "end": "1491460"
  },
  {
    "text": "all there is no such thing as over-engineering when we've just described how this works right you're not gonna you're not gonna",
    "start": "1491460",
    "end": "1497070"
  },
  {
    "text": "impress us too much um but I think the the nice thing about having files is",
    "start": "1497070",
    "end": "1502110"
  },
  {
    "text": "that they're very low dependency like you just need to write a file or read a file we can improve like currently we're",
    "start": "1502110",
    "end": "1509250"
  },
  {
    "start": "1503000",
    "end": "1564000"
  },
  {
    "text": "like polling every second is the file there is the file that we can improve that we could use all kinds of better things right then than what we have I",
    "start": "1509250",
    "end": "1516600"
  },
  {
    "text": "think something that talks outside of the pod to get data back into the pod it",
    "start": "1516600",
    "end": "1522060"
  },
  {
    "text": "seems like it might introduce more dependencies than like it you basically",
    "start": "1522060",
    "end": "1527280"
  },
  {
    "text": "in order to change how we do it you'd have to prove that it's more reliable than writing a file and reading a file which I'm not saying it's impossible but",
    "start": "1527280",
    "end": "1533880"
  },
  {
    "text": "it seems like a like a high like high bar and I mean I think something like that is something that we're looking",
    "start": "1533880",
    "end": "1538890"
  },
  {
    "text": "into for more like at the level of coordination between like maybe pipelines so when you execute one",
    "start": "1538890",
    "end": "1544170"
  },
  {
    "text": "pipeline you might want to emit an event and then you might want to have something that's consuming that event and then executing another pipeline so",
    "start": "1544170",
    "end": "1549900"
  },
  {
    "text": "we're kind of we are looking for a better solution like that but it's kind of like on a larger scale I think within the context of one task just like",
    "start": "1549900",
    "end": "1555960"
  },
  {
    "text": "everything being in the same location on the same file system just seems to work pretty well hello so first of all some",
    "start": "1555960",
    "end": "1567780"
  },
  {
    "text": "hack that you need I have a question what happens if one of the container",
    "start": "1567780",
    "end": "1573360"
  },
  {
    "text": "fails did you put any time I was in that binary can be configured or we don't",
    "start": "1573360",
    "end": "1581310"
  },
  {
    "text": "have timeouts per step today we could add that we could you know because the",
    "start": "1581310",
    "end": "1586350"
  },
  {
    "text": "entry point binary is the one that's actually running what the user asked for we could have timeouts in there if the",
    "start": "1586350",
    "end": "1592830"
  },
  {
    "text": "step if the thing that the user asked to do crashes then the entry point binary watching it will say oh you crashed I'm",
    "start": "1592830",
    "end": "1600180"
  },
  {
    "text": "gonna crash and then the whole pod like blows up exits with the same code and so",
    "start": "1600180",
    "end": "1606330"
  },
  {
    "text": "further containers in that in that pot won't continue to run was that without",
    "start": "1606330",
    "end": "1611670"
  },
  {
    "text": "yeah okay thank you I think if you want to ask a question",
    "start": "1611670",
    "end": "1618920"
  },
  {
    "text": "you might and you're able to come closer that might work well for the microphone casting okay so my question is related",
    "start": "1618920",
    "end": "1625400"
  },
  {
    "start": "1623000",
    "end": "1695000"
  },
  {
    "text": "to the health checks so how does it happen as I understand probably the",
    "start": "1625400",
    "end": "1630470"
  },
  {
    "text": "health check happens like per container bases but it is reported for the entire pod in this case since things happen",
    "start": "1630470",
    "end": "1638690"
  },
  {
    "text": "sequentially so does it affect the health checks or how does it work in",
    "start": "1638690",
    "end": "1643820"
  },
  {
    "text": "this case the handshake health check health check that's a much better",
    "start": "1643820",
    "end": "1649610"
  },
  {
    "text": "question for the for the use cases we're",
    "start": "1649610",
    "end": "1654680"
  },
  {
    "text": "talking about the steps don't tend to specify a health check in theory you",
    "start": "1654680",
    "end": "1660230"
  },
  {
    "text": "could oh this isn't a fact you could um you could sort of come up with a way to",
    "start": "1660230",
    "end": "1666110"
  },
  {
    "text": "timeout steps using a health check like if you have a health check that weights 10 minutes and then says I'm unhealthy",
    "start": "1666110",
    "end": "1671180"
  },
  {
    "text": "you should kill me you could use that to simulate a timeout don't do that nobody do that but basically yeah normally we",
    "start": "1671180",
    "end": "1678650"
  },
  {
    "text": "don't expect people to specify a step that specifies a health check you might",
    "start": "1678650",
    "end": "1684230"
  },
  {
    "text": "want that for a sidecar for instance but but probably not for the step itself so",
    "start": "1684230",
    "end": "1691640"
  },
  {
    "text": "you're coming through you mentioned that the there's not an easy way for the user",
    "start": "1691640",
    "end": "1699110"
  },
  {
    "start": "1695000",
    "end": "1758000"
  },
  {
    "text": "to know which container ran in the exact order I'm wondering if you have a deployment controller could that not",
    "start": "1699110",
    "end": "1704150"
  },
  {
    "text": "expose a metric or generate a log or is it part of the plan yeah I think that's so things like emitting logs and",
    "start": "1704150",
    "end": "1712820"
  },
  {
    "text": "then scraping logs for that data is definitely on the list of things we could do to export that data it sort of",
    "start": "1712820",
    "end": "1719150"
  },
  {
    "text": "goes back to the other question about it just needs to be some dumb thing that",
    "start": "1719150",
    "end": "1724670"
  },
  {
    "text": "that is very reliable and very fast I wouldn't want it to emit you know outside of the pod to a thing and then",
    "start": "1724670",
    "end": "1730280"
  },
  {
    "text": "have to come back in to find it but we have talked about like having the entry",
    "start": "1730280",
    "end": "1735380"
  },
  {
    "text": "point binary right a log a specific log message that that something else reads to get that I'd love to hear more ideas",
    "start": "1735380",
    "end": "1743510"
  },
  {
    "text": "about it because we haven't written it yet but yeah I mean I guess I'm spoiled I always have prometheus Prometheus operator oh you have all that already",
    "start": "1743510",
    "end": "1748550"
  },
  {
    "text": "set so you just say hey you know one line centimetric yeah yeah it's definitely",
    "start": "1748550",
    "end": "1753720"
  },
  {
    "text": "possible it might be the way we do it we have a time for a one short question is",
    "start": "1753720",
    "end": "1759360"
  },
  {
    "start": "1758000",
    "end": "1835000"
  },
  {
    "text": "your short one okay so this awesome hack I've seen it multiple times now and I",
    "start": "1759360",
    "end": "1766380"
  },
  {
    "text": "think that the logic of you know determining what the entry point is and then wrapping that in the binary and",
    "start": "1766380",
    "end": "1773190"
  },
  {
    "text": "passing the arguments into it I think that's a good candidate for a general purpose library because you have the",
    "start": "1773190",
    "end": "1778830"
  },
  {
    "text": "same logic as the bansuri cloud vault secrets web book they use exactly the",
    "start": "1778830",
    "end": "1783870"
  },
  {
    "text": "same logic so maybe there's an opportunity to you know polish this",
    "start": "1783870",
    "end": "1788910"
  },
  {
    "text": "awesome AK yeah yeah and I think another thing that we wanted to look into too is potentially even so I think making a",
    "start": "1788910",
    "end": "1796169"
  },
  {
    "text": "library that does that makes a lot of sense ensuring that we're also thinking about potentially proposing I wouldn't",
    "start": "1796169",
    "end": "1801210"
  },
  {
    "text": "say that this is something we're going to do necessarily but proposing this in like another kept as a feature in kubernetes that could be pretty cool",
    "start": "1801210",
    "end": "1806580"
  },
  {
    "text": "especially if lots of people are trying to do the same kind of thing great well",
    "start": "1806580",
    "end": "1814320"
  },
  {
    "text": "thank you all very much and there's going to be a meet the maintainer x' for Tecton at the google open source lounge",
    "start": "1814320",
    "end": "1820260"
  },
  {
    "text": "on thursday I think it's from like noon till 2:00 p.m. you can also check the detect on Twitter account for more",
    "start": "1820260",
    "end": "1825750"
  },
  {
    "text": "information about that and other cool Tecton stuff and remember the very the session thank you so much for your",
    "start": "1825750",
    "end": "1831750"
  },
  {
    "text": "joining thanks [Applause]",
    "start": "1831750",
    "end": "1837650"
  }
]