[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "hello everybody and welcome to jaeger",
    "start": "160",
    "end": "2560"
  },
  {
    "text": "deep dive project session",
    "start": "2560",
    "end": "4080"
  },
  {
    "text": "this is the second presentation uh",
    "start": "4080",
    "end": "7359"
  },
  {
    "text": "at cloud native con virtual the first",
    "start": "7359",
    "end": "10480"
  },
  {
    "text": "one is jager intro",
    "start": "10480",
    "end": "12000"
  },
  {
    "text": "and uh if you haven't seen jaeger in",
    "start": "12000",
    "end": "14920"
  },
  {
    "text": "action i",
    "start": "14920",
    "end": "16160"
  },
  {
    "text": "encourage you to watch recording uh i'm",
    "start": "16160",
    "end": "19279"
  },
  {
    "text": "pretty sure there is very nice",
    "start": "19279",
    "end": "20720"
  },
  {
    "text": "uh demo uh of jaeger in action",
    "start": "20720",
    "end": "26880"
  },
  {
    "start": "27000",
    "end": "27000"
  },
  {
    "text": "so in this talk the agenda is we'll talk",
    "start": "27279",
    "end": "30400"
  },
  {
    "text": "about the project in general",
    "start": "30400",
    "end": "32320"
  },
  {
    "text": "then i will spend some time talking",
    "start": "32320",
    "end": "34800"
  },
  {
    "text": "about how tracing works under the hood",
    "start": "34800",
    "end": "37440"
  },
  {
    "text": "we'll have a look at two concepts uh so",
    "start": "37440",
    "end": "40000"
  },
  {
    "text": "i'll explain how",
    "start": "40000",
    "end": "41280"
  },
  {
    "text": "the data collection works inside your",
    "start": "41280",
    "end": "43200"
  },
  {
    "text": "application",
    "start": "43200",
    "end": "44399"
  },
  {
    "text": "but also how the tracing infrastructure",
    "start": "44399",
    "end": "47200"
  },
  {
    "text": "works under the hood",
    "start": "47200",
    "end": "48960"
  },
  {
    "text": "then we will jump through a couple of",
    "start": "48960",
    "end": "50719"
  },
  {
    "text": "different topics namely",
    "start": "50719",
    "end": "52800"
  },
  {
    "text": "sampling jaeger integration and",
    "start": "52800",
    "end": "55120"
  },
  {
    "text": "architecture",
    "start": "55120",
    "end": "56079"
  },
  {
    "text": "and zip incompatibility and last but not",
    "start": "56079",
    "end": "59359"
  },
  {
    "text": "least",
    "start": "59359",
    "end": "60160"
  },
  {
    "text": "uh we'll spend some time talking about",
    "start": "60160",
    "end": "62640"
  },
  {
    "text": "new features",
    "start": "62640",
    "end": "63600"
  },
  {
    "text": "since the last kubecon something about",
    "start": "63600",
    "end": "65920"
  },
  {
    "text": "roadmap",
    "start": "65920",
    "end": "66640"
  },
  {
    "text": "and finally we will do q a",
    "start": "66640",
    "end": "70479"
  },
  {
    "start": "70000",
    "end": "70000"
  },
  {
    "text": "so just briefly about myself i'm a pablo",
    "start": "70560",
    "end": "73280"
  },
  {
    "text": "lopheim",
    "start": "73280",
    "end": "74400"
  },
  {
    "text": "i'm software engineer at red hat and i",
    "start": "74400",
    "end": "77040"
  },
  {
    "text": "have been working",
    "start": "77040",
    "end": "78640"
  },
  {
    "text": "on jaeger since basically it has been",
    "start": "78640",
    "end": "81119"
  },
  {
    "text": "open sourced in 2017",
    "start": "81119",
    "end": "83840"
  },
  {
    "text": "and apart for jaeger i contribute to a",
    "start": "83840",
    "end": "86720"
  },
  {
    "text": "bunch of",
    "start": "86720",
    "end": "87360"
  },
  {
    "text": "other projects that are distributed",
    "start": "87360",
    "end": "89200"
  },
  {
    "text": "tracing related",
    "start": "89200",
    "end": "90960"
  },
  {
    "text": "namely open tracing microprofile open",
    "start": "90960",
    "end": "93439"
  },
  {
    "text": "tracing",
    "start": "93439",
    "end": "94000"
  },
  {
    "text": "and also open telemetry project",
    "start": "94000",
    "end": "97920"
  },
  {
    "start": "98000",
    "end": "98000"
  },
  {
    "text": "so jaeger is a distributed tracing",
    "start": "98960",
    "end": "100720"
  },
  {
    "text": "platform it's not just you know a single",
    "start": "100720",
    "end": "103439"
  },
  {
    "text": "server that you run",
    "start": "103439",
    "end": "104560"
  },
  {
    "text": "on your laptop or or as a deployment",
    "start": "104560",
    "end": "108000"
  },
  {
    "text": "it's much more than that",
    "start": "108000",
    "end": "109439"
  },
  {
    "text": "it's the whole ecosystem of different",
    "start": "109439",
    "end": "111759"
  },
  {
    "text": "components",
    "start": "111759",
    "end": "112880"
  },
  {
    "text": "for different purposes so on one side",
    "start": "112880",
    "end": "116880"
  },
  {
    "text": "there are instrumentation libraries or",
    "start": "116880",
    "end": "118880"
  },
  {
    "text": "sdks that",
    "start": "118880",
    "end": "120560"
  },
  {
    "text": "run inside your application and they",
    "start": "120560",
    "end": "122320"
  },
  {
    "text": "collect data",
    "start": "122320",
    "end": "124240"
  },
  {
    "text": "and they report it to the tracing",
    "start": "124240",
    "end": "126079"
  },
  {
    "text": "collection backend",
    "start": "126079",
    "end": "128080"
  },
  {
    "text": "on the other side there is a",
    "start": "128080",
    "end": "129440"
  },
  {
    "text": "visualization or",
    "start": "129440",
    "end": "131200"
  },
  {
    "text": "the user interface that we use to",
    "start": "131200",
    "end": "134319"
  },
  {
    "text": "to see our distributed transactions",
    "start": "134319",
    "end": "137520"
  },
  {
    "text": "and in middle there's also a data mining",
    "start": "137520",
    "end": "141360"
  },
  {
    "text": "integrations and platform that it used",
    "start": "141360",
    "end": "144080"
  },
  {
    "text": "to",
    "start": "144080",
    "end": "144720"
  },
  {
    "text": "to aggregate the data and derive i know",
    "start": "144720",
    "end": "147760"
  },
  {
    "text": "another",
    "start": "147760",
    "end": "148400"
  },
  {
    "text": "interesting insights from the",
    "start": "148400",
    "end": "151760"
  },
  {
    "text": "data would we collect",
    "start": "151760",
    "end": "156720"
  },
  {
    "text": "so jaeger is a project it's inspired by",
    "start": "156720",
    "end": "159519"
  },
  {
    "text": "google dapper and open zipkin",
    "start": "159519",
    "end": "162000"
  },
  {
    "text": "and it's mainly because it uses very",
    "start": "162000",
    "end": "164239"
  },
  {
    "text": "similar data model",
    "start": "164239",
    "end": "165920"
  },
  {
    "text": "as these two system use uh it has been",
    "start": "165920",
    "end": "169040"
  },
  {
    "text": "created uh",
    "start": "169040",
    "end": "170160"
  },
  {
    "text": "at uber in august 2017 and",
    "start": "170160",
    "end": "173280"
  },
  {
    "text": "two years later it's uh",
    "start": "173280",
    "end": "176560"
  },
  {
    "text": "it has been open sourced uh in 2017.",
    "start": "176560",
    "end": "181360"
  },
  {
    "text": "the same year it also joined cncf",
    "start": "181360",
    "end": "183840"
  },
  {
    "text": "foundation as an incubating project",
    "start": "183840",
    "end": "186560"
  },
  {
    "text": "and last year so basically again two",
    "start": "186560",
    "end": "189360"
  },
  {
    "text": "years later",
    "start": "189360",
    "end": "190879"
  },
  {
    "text": "it graduated to top level cncf project",
    "start": "190879",
    "end": "196080"
  },
  {
    "start": "197000",
    "end": "197000"
  },
  {
    "text": "so from the technology stack jaeger",
    "start": "197360",
    "end": "200159"
  },
  {
    "text": "itself",
    "start": "200159",
    "end": "200720"
  },
  {
    "text": "is written uh in golang and it's a very",
    "start": "200720",
    "end": "203920"
  },
  {
    "text": "pluggable",
    "start": "203920",
    "end": "205200"
  },
  {
    "text": "system for storing data so",
    "start": "205200",
    "end": "208319"
  },
  {
    "text": "with upstream project or we directly",
    "start": "208319",
    "end": "212560"
  },
  {
    "text": "maintain implementations for",
    "start": "212560",
    "end": "214720"
  },
  {
    "text": "cassandra elasticsearch badger and in",
    "start": "214720",
    "end": "217440"
  },
  {
    "text": "memory",
    "start": "217440",
    "end": "218400"
  },
  {
    "text": "for demo uh and test purposes",
    "start": "218400",
    "end": "222879"
  },
  {
    "text": "but the storage layer is very is",
    "start": "222879",
    "end": "225760"
  },
  {
    "text": "pluggable",
    "start": "225760",
    "end": "226560"
  },
  {
    "text": "but it's also quite simple to implement",
    "start": "226560",
    "end": "228400"
  },
  {
    "text": "so if you have a",
    "start": "228400",
    "end": "230080"
  },
  {
    "text": "expertise in running different storage",
    "start": "230080",
    "end": "233519"
  },
  {
    "text": "uh it's very simple to to implement",
    "start": "233519",
    "end": "236080"
  },
  {
    "text": "storage right",
    "start": "236080",
    "end": "237040"
  },
  {
    "text": "and uh and query interfaces",
    "start": "237040",
    "end": "241040"
  },
  {
    "text": "the ui is um is rack.js it's very nice",
    "start": "241040",
    "end": "244799"
  },
  {
    "text": "ui",
    "start": "244799",
    "end": "245439"
  },
  {
    "text": "uh you will see that you know in a jager",
    "start": "245439",
    "end": "247680"
  },
  {
    "text": "intro",
    "start": "247680",
    "end": "249360"
  },
  {
    "text": "and the collection libraries or the sdks",
    "start": "249360",
    "end": "252879"
  },
  {
    "text": "they",
    "start": "252879",
    "end": "253200"
  },
  {
    "text": "implement open tracing api and they are",
    "start": "253200",
    "end": "255840"
  },
  {
    "text": "available in many languages",
    "start": "255840",
    "end": "257919"
  },
  {
    "text": "so for example in go java python",
    "start": "257919",
    "end": "261600"
  },
  {
    "text": "node.js c plus c sharp",
    "start": "261600",
    "end": "265040"
  },
  {
    "text": "php and ruby",
    "start": "265040",
    "end": "268800"
  },
  {
    "text": "jaeger also integrates with apache kafka",
    "start": "268800",
    "end": "271600"
  },
  {
    "text": "and flink and spark",
    "start": "271600",
    "end": "273520"
  },
  {
    "text": "for streaming and data processing we",
    "start": "273520",
    "end": "276160"
  },
  {
    "text": "will see that",
    "start": "276160",
    "end": "276960"
  },
  {
    "text": "more in architecture",
    "start": "276960",
    "end": "280240"
  },
  {
    "start": "280000",
    "end": "280000"
  },
  {
    "text": "so as a community uh jaeger",
    "start": "280800",
    "end": "285040"
  },
  {
    "text": "is hosted on github uh under get racing",
    "start": "285040",
    "end": "288639"
  },
  {
    "text": "organization",
    "start": "288639",
    "end": "289840"
  },
  {
    "text": "the main repository has roughly around",
    "start": "289840",
    "end": "292479"
  },
  {
    "text": "11",
    "start": "292479",
    "end": "292960"
  },
  {
    "text": "000 stars and there is about",
    "start": "292960",
    "end": "296160"
  },
  {
    "text": "1 700 contributors across the",
    "start": "296160",
    "end": "299919"
  },
  {
    "text": "all repositories inside the main",
    "start": "299919",
    "end": "302800"
  },
  {
    "text": "organization",
    "start": "302800",
    "end": "304639"
  },
  {
    "text": "there is roughly 15 maintainers again",
    "start": "304639",
    "end": "307360"
  },
  {
    "text": "across all the components that are in",
    "start": "307360",
    "end": "309360"
  },
  {
    "text": "the organization",
    "start": "309360",
    "end": "311120"
  },
  {
    "text": "uh we do have also twitter channel uh",
    "start": "311120",
    "end": "314160"
  },
  {
    "text": "and guitar channel well where you can",
    "start": "314160",
    "end": "316720"
  },
  {
    "text": "ask questions",
    "start": "316720",
    "end": "318320"
  },
  {
    "text": "uh or race problems uh and we always try",
    "start": "318320",
    "end": "321680"
  },
  {
    "text": "to help our users to",
    "start": "321680",
    "end": "323199"
  },
  {
    "text": "to resolve uh issues and",
    "start": "323199",
    "end": "326240"
  },
  {
    "text": "uh get uh help them to get started with",
    "start": "326240",
    "end": "329919"
  },
  {
    "text": "jaeger",
    "start": "329919",
    "end": "331840"
  },
  {
    "text": "we do release roughly every one to three",
    "start": "331840",
    "end": "334320"
  },
  {
    "text": "months",
    "start": "334320",
    "end": "335199"
  },
  {
    "text": "uh we always try to release once we have",
    "start": "335199",
    "end": "338320"
  },
  {
    "text": "reasonable set of new features",
    "start": "338320",
    "end": "341840"
  },
  {
    "text": "uh and jager itself is distributed as a",
    "start": "341840",
    "end": "345680"
  },
  {
    "text": "set of docker images uh but also",
    "start": "345680",
    "end": "348800"
  },
  {
    "text": "said as a set of binaries that you can",
    "start": "348800",
    "end": "351440"
  },
  {
    "text": "get from the",
    "start": "351440",
    "end": "352639"
  },
  {
    "text": "github release page",
    "start": "352639",
    "end": "355840"
  },
  {
    "text": "so how jig works but more in general how",
    "start": "357280",
    "end": "360160"
  },
  {
    "text": "tracing works",
    "start": "360160",
    "end": "361440"
  },
  {
    "text": "under the hood",
    "start": "361440",
    "end": "364160"
  },
  {
    "text": "so on this diagram uh we see a bunch of",
    "start": "365199",
    "end": "367520"
  },
  {
    "text": "stuff right",
    "start": "367520",
    "end": "368560"
  },
  {
    "text": "uh and basically there are two important",
    "start": "368560",
    "end": "371840"
  },
  {
    "text": "pieces here on the top there are two",
    "start": "371840",
    "end": "373759"
  },
  {
    "text": "micro services so",
    "start": "373759",
    "end": "375440"
  },
  {
    "text": "our standard applications and on the",
    "start": "375440",
    "end": "378160"
  },
  {
    "text": "bottom",
    "start": "378160",
    "end": "378800"
  },
  {
    "text": "there is tracing infrastructure",
    "start": "378800",
    "end": "382880"
  },
  {
    "text": "and we see this micro services that they",
    "start": "382880",
    "end": "384800"
  },
  {
    "text": "embed tracing api and tracing library",
    "start": "384800",
    "end": "387840"
  },
  {
    "text": "so the tracing api is something that you",
    "start": "387840",
    "end": "390560"
  },
  {
    "text": "know the application",
    "start": "390560",
    "end": "391680"
  },
  {
    "text": "uses to report tracing data to create",
    "start": "391680",
    "end": "394479"
  },
  {
    "text": "events",
    "start": "394479",
    "end": "395520"
  },
  {
    "text": "and the tracing library is the",
    "start": "395520",
    "end": "397360"
  },
  {
    "text": "implementation of this api that",
    "start": "397360",
    "end": "399280"
  },
  {
    "text": "reposits data to the tracing system",
    "start": "399280",
    "end": "403680"
  },
  {
    "text": "now if we zoom into the application we",
    "start": "403680",
    "end": "405759"
  },
  {
    "text": "see that uh",
    "start": "405759",
    "end": "408000"
  },
  {
    "text": "the application consists of different",
    "start": "408000",
    "end": "410000"
  },
  {
    "text": "layers there is some",
    "start": "410000",
    "end": "411680"
  },
  {
    "text": "inbound layer then there is some you",
    "start": "411680",
    "end": "414720"
  },
  {
    "text": "know",
    "start": "414720",
    "end": "415599"
  },
  {
    "text": "something in the middle so for example",
    "start": "415599",
    "end": "417599"
  },
  {
    "text": "business logic and then there is a",
    "start": "417599",
    "end": "419440"
  },
  {
    "text": "the outbound layer which can be",
    "start": "419440",
    "end": "422800"
  },
  {
    "text": "for example an rpc layer to the next",
    "start": "422800",
    "end": "426479"
  },
  {
    "text": "service",
    "start": "426479",
    "end": "428639"
  },
  {
    "text": "and every layer talks to",
    "start": "428639",
    "end": "432160"
  },
  {
    "text": "tracing api and we call these points",
    "start": "432160",
    "end": "435840"
  },
  {
    "text": "trace points",
    "start": "435840",
    "end": "436800"
  },
  {
    "text": "so uh so this transport",
    "start": "436800",
    "end": "439840"
  },
  {
    "text": "trace points they report tracing data",
    "start": "439840",
    "end": "443360"
  },
  {
    "text": "via the tracing api",
    "start": "443360",
    "end": "446639"
  },
  {
    "text": "and uh and so with the strains points we",
    "start": "446639",
    "end": "450000"
  },
  {
    "text": "call them also instrumentation",
    "start": "450000",
    "end": "452000"
  },
  {
    "text": "so instrumentation is just you know a a",
    "start": "452000",
    "end": "456160"
  },
  {
    "text": "piece of code that basically emits",
    "start": "456160",
    "end": "459360"
  },
  {
    "text": "tracing events uh based on the behavior",
    "start": "459360",
    "end": "463680"
  },
  {
    "text": "of the application this is a little bit",
    "start": "463680",
    "end": "466960"
  },
  {
    "text": "different",
    "start": "466960",
    "end": "467599"
  },
  {
    "text": "to metrics and logs",
    "start": "467599",
    "end": "471039"
  },
  {
    "text": "uh because tracing uh is stateful so",
    "start": "471039",
    "end": "475039"
  },
  {
    "text": "it carries some context with it so when",
    "start": "475039",
    "end": "477840"
  },
  {
    "text": "we see",
    "start": "477840",
    "end": "478400"
  },
  {
    "text": "when a request arrives to the first",
    "start": "478400",
    "end": "480319"
  },
  {
    "text": "micro service",
    "start": "480319",
    "end": "481440"
  },
  {
    "text": "what tracing api does uh it will create",
    "start": "481440",
    "end": "484479"
  },
  {
    "text": "a special context",
    "start": "484479",
    "end": "486639"
  },
  {
    "text": "with unique ids these ids are also",
    "start": "486639",
    "end": "490160"
  },
  {
    "text": "generate generated by the tracing api",
    "start": "490160",
    "end": "492720"
  },
  {
    "text": "now this context is propagated to all",
    "start": "492720",
    "end": "496160"
  },
  {
    "text": "downstream uh you know instrumentation",
    "start": "496160",
    "end": "499759"
  },
  {
    "text": "points",
    "start": "499759",
    "end": "501199"
  },
  {
    "text": "and all downstream microservices the",
    "start": "501199",
    "end": "503360"
  },
  {
    "text": "context doesn't change",
    "start": "503360",
    "end": "505199"
  },
  {
    "text": "and this is important because the",
    "start": "505199",
    "end": "508240"
  },
  {
    "text": "context doesn't change because all these",
    "start": "508240",
    "end": "510160"
  },
  {
    "text": "events",
    "start": "510160",
    "end": "511120"
  },
  {
    "text": "will have the same ids so later",
    "start": "511120",
    "end": "514800"
  },
  {
    "text": "the tracing system can correlate all",
    "start": "514800",
    "end": "517919"
  },
  {
    "text": "these",
    "start": "517919",
    "end": "518320"
  },
  {
    "text": "ends together and reconstruct the full",
    "start": "518320",
    "end": "520800"
  },
  {
    "text": "trace or the execution flow",
    "start": "520800",
    "end": "524240"
  },
  {
    "text": "and so the context propagation",
    "start": "525200",
    "end": "528720"
  },
  {
    "text": "is basically the foundation of",
    "start": "528720",
    "end": "530080"
  },
  {
    "text": "distributed tracing",
    "start": "530080",
    "end": "535200"
  },
  {
    "text": "so let's have a look at the tracing",
    "start": "535200",
    "end": "537519"
  },
  {
    "text": "infrastructure itself",
    "start": "537519",
    "end": "539360"
  },
  {
    "text": "uh so once the data leaves the tracing",
    "start": "539360",
    "end": "542320"
  },
  {
    "text": "library",
    "start": "542320",
    "end": "542880"
  },
  {
    "text": "it goes usually to uh to collector or",
    "start": "542880",
    "end": "545839"
  },
  {
    "text": "agent",
    "start": "545839",
    "end": "547200"
  },
  {
    "text": "that stores data to a trace storage",
    "start": "547200",
    "end": "550399"
  },
  {
    "text": "apart from",
    "start": "550399",
    "end": "553200"
  },
  {
    "text": "trace storage there is also some data",
    "start": "553600",
    "end": "555920"
  },
  {
    "text": "mining",
    "start": "555920",
    "end": "557519"
  },
  {
    "text": "and the presentation layer",
    "start": "557519",
    "end": "560720"
  },
  {
    "text": "so let's have a look at how the tracing",
    "start": "561120",
    "end": "563519"
  },
  {
    "text": "works uh",
    "start": "563519",
    "end": "564800"
  },
  {
    "text": "with uh with open tracing and yeager",
    "start": "564800",
    "end": "570240"
  },
  {
    "start": "569000",
    "end": "569000"
  },
  {
    "text": "so open tracing a jaeger many people",
    "start": "570240",
    "end": "572160"
  },
  {
    "text": "they",
    "start": "572160",
    "end": "573279"
  },
  {
    "text": "use these technologies interchangeably",
    "start": "573279",
    "end": "576160"
  },
  {
    "text": "but actually there is a clear difference",
    "start": "576160",
    "end": "577839"
  },
  {
    "text": "between these two",
    "start": "577839",
    "end": "580640"
  },
  {
    "text": "so on this diagram we see again",
    "start": "580800",
    "end": "584160"
  },
  {
    "text": "on the top the application or the",
    "start": "584160",
    "end": "586160"
  },
  {
    "text": "process and on the bottom",
    "start": "586160",
    "end": "588560"
  },
  {
    "text": "the tracing infrastructure the",
    "start": "588560",
    "end": "591600"
  },
  {
    "text": "application",
    "start": "591600",
    "end": "592560"
  },
  {
    "text": "we see that it's instrumented in two",
    "start": "592560",
    "end": "594959"
  },
  {
    "text": "different ways it uses the",
    "start": "594959",
    "end": "596880"
  },
  {
    "text": "manually instrumented frameworks and",
    "start": "596880",
    "end": "599760"
  },
  {
    "text": "automatic instrumentation",
    "start": "599760",
    "end": "603200"
  },
  {
    "text": "so manually instrumented frameworks this",
    "start": "603200",
    "end": "604959"
  },
  {
    "text": "is just something like a library",
    "start": "604959",
    "end": "607279"
  },
  {
    "text": "uh that you can pull in into your class",
    "start": "607279",
    "end": "610720"
  },
  {
    "text": "path",
    "start": "610720",
    "end": "611360"
  },
  {
    "text": "and it will emit tracing events now",
    "start": "611360",
    "end": "614399"
  },
  {
    "text": "automatic instrumentation",
    "start": "614399",
    "end": "616320"
  },
  {
    "text": "uh is for example java agent that",
    "start": "616320",
    "end": "619600"
  },
  {
    "text": "does bytecode manipulation to instrument",
    "start": "619600",
    "end": "622160"
  },
  {
    "text": "your application",
    "start": "622160",
    "end": "624880"
  },
  {
    "text": "so all these instrumentations they",
    "start": "624880",
    "end": "626560"
  },
  {
    "text": "basically use just open tracing api",
    "start": "626560",
    "end": "629360"
  },
  {
    "text": "and then the tracing library",
    "start": "629360",
    "end": "632320"
  },
  {
    "text": "implementation",
    "start": "632320",
    "end": "633200"
  },
  {
    "text": "in this case jaeger just implements this",
    "start": "633200",
    "end": "635600"
  },
  {
    "text": "api and reports data",
    "start": "635600",
    "end": "637360"
  },
  {
    "text": "to the agent or collector",
    "start": "637360",
    "end": "640880"
  },
  {
    "text": "so the tracing api is important",
    "start": "640880",
    "end": "644000"
  },
  {
    "text": "because uh there's there are so many",
    "start": "644000",
    "end": "646880"
  },
  {
    "text": "trains points",
    "start": "646880",
    "end": "647839"
  },
  {
    "text": "in our application and so if we wanted",
    "start": "647839",
    "end": "650880"
  },
  {
    "text": "to change the implementation",
    "start": "650880",
    "end": "653120"
  },
  {
    "text": "and we haven't used the api we do have",
    "start": "653120",
    "end": "655680"
  },
  {
    "text": "to change",
    "start": "655680",
    "end": "656320"
  },
  {
    "text": "all of those uh calls",
    "start": "656320",
    "end": "659360"
  },
  {
    "text": "to the tracing api",
    "start": "659360",
    "end": "662800"
  },
  {
    "text": "so the tracing api basically abstracts",
    "start": "663360",
    "end": "665360"
  },
  {
    "text": "the implementation",
    "start": "665360",
    "end": "666560"
  },
  {
    "text": "which makes it easier for us to switch",
    "start": "666560",
    "end": "668640"
  },
  {
    "text": "to implementation",
    "start": "668640",
    "end": "670640"
  },
  {
    "text": "which is very important",
    "start": "670640",
    "end": "674160"
  },
  {
    "text": "uh however with open tracing there is",
    "start": "674160",
    "end": "676560"
  },
  {
    "text": "one slight problem",
    "start": "676560",
    "end": "678000"
  },
  {
    "text": "is that if you want to change the",
    "start": "678000",
    "end": "679680"
  },
  {
    "text": "implementation we have to recompile and",
    "start": "679680",
    "end": "682480"
  },
  {
    "text": "redeploy our applications",
    "start": "682480",
    "end": "685839"
  },
  {
    "text": "so once we look at the bottom there is",
    "start": "686800",
    "end": "689360"
  },
  {
    "text": "agent and collector",
    "start": "689360",
    "end": "690640"
  },
  {
    "text": "so the the library that lives in our",
    "start": "690640",
    "end": "693920"
  },
  {
    "text": "process reports data to the agent or",
    "start": "693920",
    "end": "696000"
  },
  {
    "text": "collector",
    "start": "696000",
    "end": "697600"
  },
  {
    "text": "uh and it can choose where the data will",
    "start": "697600",
    "end": "700880"
  },
  {
    "text": "report it right",
    "start": "700880",
    "end": "702399"
  },
  {
    "text": "difference between agent and collector",
    "start": "702399",
    "end": "704480"
  },
  {
    "text": "is that agent",
    "start": "704480",
    "end": "705600"
  },
  {
    "text": "lives very close to the application",
    "start": "705600",
    "end": "709920"
  },
  {
    "text": "so it's something like sidecar container",
    "start": "709920",
    "end": "713440"
  },
  {
    "text": "or it lives on the same host",
    "start": "713440",
    "end": "716720"
  },
  {
    "text": "as the application process",
    "start": "716720",
    "end": "720240"
  },
  {
    "text": "then the data goes to collector and",
    "start": "720240",
    "end": "722079"
  },
  {
    "text": "collector just stores the data",
    "start": "722079",
    "end": "724240"
  },
  {
    "text": "into storage",
    "start": "724240",
    "end": "727200"
  },
  {
    "text": "now let's have a look at the open",
    "start": "728000",
    "end": "730000"
  },
  {
    "text": "telemetry versus jaeger",
    "start": "730000",
    "end": "733440"
  },
  {
    "start": "733000",
    "end": "733000"
  },
  {
    "text": "so we see the open telemetry is also the",
    "start": "733440",
    "end": "736399"
  },
  {
    "text": "instrumentation api",
    "start": "736399",
    "end": "737839"
  },
  {
    "text": "but it's also the tracing implementation",
    "start": "737839",
    "end": "742000"
  },
  {
    "text": "and this has couple of advantages over",
    "start": "742000",
    "end": "744880"
  },
  {
    "text": "open tracing because",
    "start": "744880",
    "end": "747040"
  },
  {
    "text": "now if you want to change the",
    "start": "747040",
    "end": "748320"
  },
  {
    "text": "implementation we don't have to",
    "start": "748320",
    "end": "750160"
  },
  {
    "text": "recompile",
    "start": "750160",
    "end": "751040"
  },
  {
    "text": "and redeploy our application which is a",
    "start": "751040",
    "end": "753200"
  },
  {
    "text": "big plus",
    "start": "753200",
    "end": "755760"
  },
  {
    "text": "what is maybe confusing on this slide is",
    "start": "755839",
    "end": "758000"
  },
  {
    "text": "that open telemetry is also the agent",
    "start": "758000",
    "end": "760560"
  },
  {
    "text": "and the collector",
    "start": "760560",
    "end": "761839"
  },
  {
    "text": "so this is a new component in open",
    "start": "761839",
    "end": "763920"
  },
  {
    "text": "telemetry which is called",
    "start": "763920",
    "end": "765200"
  },
  {
    "text": "collector and collector is a component",
    "start": "765200",
    "end": "768639"
  },
  {
    "text": "that can receive the data",
    "start": "768639",
    "end": "770480"
  },
  {
    "text": "can process it and then can send it to",
    "start": "770480",
    "end": "773600"
  },
  {
    "text": "the other systems",
    "start": "773600",
    "end": "776000"
  },
  {
    "text": "so difference between jaeger collector",
    "start": "776000",
    "end": "778800"
  },
  {
    "text": "and open telemetry collector is that",
    "start": "778800",
    "end": "780320"
  },
  {
    "text": "jager collector is also able to store",
    "start": "780320",
    "end": "782399"
  },
  {
    "text": "the data",
    "start": "782399",
    "end": "783360"
  },
  {
    "text": "in a storage",
    "start": "783360",
    "end": "787839"
  },
  {
    "text": "so let's have a look at sampling so",
    "start": "788959",
    "end": "791680"
  },
  {
    "text": "sampling is a technique",
    "start": "791680",
    "end": "793440"
  },
  {
    "text": "uh how we store less data that we",
    "start": "793440",
    "end": "796639"
  },
  {
    "text": "actually",
    "start": "796639",
    "end": "798839"
  },
  {
    "text": "receive",
    "start": "798839",
    "end": "800399"
  },
  {
    "text": "uh and there are basically two uh",
    "start": "800399",
    "end": "803040"
  },
  {
    "start": "801000",
    "end": "801000"
  },
  {
    "text": "approaches how to do sampling the first",
    "start": "803040",
    "end": "804800"
  },
  {
    "text": "one is coherent",
    "start": "804800",
    "end": "805760"
  },
  {
    "text": "head-based sampling and other one is",
    "start": "805760",
    "end": "807839"
  },
  {
    "text": "tail-based sampling",
    "start": "807839",
    "end": "809440"
  },
  {
    "text": "the coherent head-based sampling means",
    "start": "809440",
    "end": "811360"
  },
  {
    "text": "that the sampling decision is made",
    "start": "811360",
    "end": "813440"
  },
  {
    "text": "when a request",
    "start": "813440",
    "end": "816399"
  },
  {
    "text": "first time reaches our infrastructure",
    "start": "816560",
    "end": "819600"
  },
  {
    "text": "and so we make the decision and then the",
    "start": "819600",
    "end": "821920"
  },
  {
    "text": "decision is propagated to all downstream",
    "start": "821920",
    "end": "824639"
  },
  {
    "text": "services",
    "start": "824639",
    "end": "825839"
  },
  {
    "text": "and these services they have to respect",
    "start": "825839",
    "end": "827680"
  },
  {
    "text": "the decision that has been made",
    "start": "827680",
    "end": "829600"
  },
  {
    "text": "at the beginning and there are two",
    "start": "829600",
    "end": "832880"
  },
  {
    "text": "implementations",
    "start": "832880",
    "end": "833839"
  },
  {
    "text": "how we can sample at the hat the first",
    "start": "833839",
    "end": "836800"
  },
  {
    "text": "one is probabilistic and the second one",
    "start": "836800",
    "end": "838639"
  },
  {
    "text": "is rate limiting",
    "start": "838639",
    "end": "840240"
  },
  {
    "text": "probabilistic basically says uh for",
    "start": "840240",
    "end": "843360"
  },
  {
    "text": "example",
    "start": "843360",
    "end": "844320"
  },
  {
    "text": "sample only one percent of all the",
    "start": "844320",
    "end": "847279"
  },
  {
    "text": "requests",
    "start": "847279",
    "end": "848000"
  },
  {
    "text": "what you receive brain limiting says",
    "start": "848000",
    "end": "851920"
  },
  {
    "text": "for example sample only 10 requests",
    "start": "851920",
    "end": "855279"
  },
  {
    "text": "per time you need so for example 10",
    "start": "855279",
    "end": "857920"
  },
  {
    "text": "requests",
    "start": "857920",
    "end": "858639"
  },
  {
    "text": "per second",
    "start": "858639",
    "end": "861279"
  },
  {
    "text": "sampling is usually configured per",
    "start": "862560",
    "end": "864480"
  },
  {
    "text": "service",
    "start": "864480",
    "end": "866000"
  },
  {
    "text": "and so this is a problem because some",
    "start": "866000",
    "end": "868000"
  },
  {
    "text": "services they receive",
    "start": "868000",
    "end": "870000"
  },
  {
    "text": "a lot of traffic at some end point but",
    "start": "870000",
    "end": "873199"
  },
  {
    "text": "other ends points might receive very low",
    "start": "873199",
    "end": "875199"
  },
  {
    "text": "traffic",
    "start": "875199",
    "end": "876399"
  },
  {
    "text": "and if we use a single",
    "start": "876399",
    "end": "879519"
  },
  {
    "text": "sampling configuration across all those",
    "start": "879519",
    "end": "881839"
  },
  {
    "text": "endpoints",
    "start": "881839",
    "end": "882959"
  },
  {
    "text": "the end points with low traffic will",
    "start": "882959",
    "end": "885199"
  },
  {
    "text": "pretty much not be sampled at all",
    "start": "885199",
    "end": "887440"
  },
  {
    "text": "so jager allows you to configure tracing",
    "start": "887440",
    "end": "889760"
  },
  {
    "text": "also per endpoint level",
    "start": "889760",
    "end": "891519"
  },
  {
    "text": "to solve this problem the other feature",
    "start": "891519",
    "end": "894800"
  },
  {
    "text": "what jager provides is centrally",
    "start": "894800",
    "end": "896480"
  },
  {
    "text": "controlled sample",
    "start": "896480",
    "end": "898000"
  },
  {
    "text": "sampling and so",
    "start": "898000",
    "end": "901199"
  },
  {
    "text": "in jaeger there is a configuration file",
    "start": "901199",
    "end": "903199"
  },
  {
    "text": "where you can configure all the sampling",
    "start": "903199",
    "end": "905519"
  },
  {
    "text": "strategies and this configuration is",
    "start": "905519",
    "end": "908320"
  },
  {
    "text": "then pushed",
    "start": "908320",
    "end": "909680"
  },
  {
    "text": "to jager clients reporting the data",
    "start": "909680",
    "end": "915120"
  },
  {
    "text": "and so the other approach to sampling is",
    "start": "915519",
    "end": "918800"
  },
  {
    "text": "tell-based sampling",
    "start": "918800",
    "end": "920160"
  },
  {
    "text": "jaeger at the moment doesn't",
    "start": "920160",
    "end": "923440"
  },
  {
    "text": "do tell-based sampling it is something",
    "start": "923440",
    "end": "925760"
  },
  {
    "text": "that we are looking at",
    "start": "925760",
    "end": "927120"
  },
  {
    "text": "uh and i will talk about it uh",
    "start": "927120",
    "end": "931519"
  },
  {
    "text": "uh in the roadmap",
    "start": "931519",
    "end": "934639"
  },
  {
    "text": "so integrations jaeger integrates very",
    "start": "934720",
    "end": "937440"
  },
  {
    "text": "well",
    "start": "937440",
    "end": "937839"
  },
  {
    "text": "with kubernetes there is jaeger operator",
    "start": "937839",
    "end": "940240"
  },
  {
    "text": "and helm chart",
    "start": "940240",
    "end": "941839"
  },
  {
    "text": "so the operator is a component that can",
    "start": "941839",
    "end": "945040"
  },
  {
    "text": "deploy but also manage and",
    "start": "945040",
    "end": "948160"
  },
  {
    "text": "upgrade your applications so it's much",
    "start": "948160",
    "end": "951120"
  },
  {
    "text": "more",
    "start": "951120",
    "end": "952240"
  },
  {
    "text": "robust way of deploying uh",
    "start": "952240",
    "end": "955600"
  },
  {
    "text": "you know business application into",
    "start": "955600",
    "end": "957279"
  },
  {
    "text": "kubernetes",
    "start": "957279",
    "end": "959759"
  },
  {
    "text": "if you want to use plain kubernetes",
    "start": "959759",
    "end": "961519"
  },
  {
    "text": "manifest uh eager operator can be used",
    "start": "961519",
    "end": "964320"
  },
  {
    "text": "as a cli tool",
    "start": "964320",
    "end": "966079"
  },
  {
    "text": "to just generate this manifest based on",
    "start": "966079",
    "end": "968959"
  },
  {
    "text": "the configuration you provide to the",
    "start": "968959",
    "end": "970480"
  },
  {
    "text": "operator",
    "start": "970480",
    "end": "972959"
  },
  {
    "text": "uh the next integration with is",
    "start": "974480",
    "end": "977519"
  },
  {
    "text": "with prometheus so jager server and all",
    "start": "977519",
    "end": "979920"
  },
  {
    "text": "the client libraries they report",
    "start": "979920",
    "end": "982000"
  },
  {
    "text": "metrics in primitives format",
    "start": "982000",
    "end": "985519"
  },
  {
    "text": "the open telemetry integration all the",
    "start": "985519",
    "end": "988000"
  },
  {
    "text": "open telemetry clients or sdks they ship",
    "start": "988000",
    "end": "990880"
  },
  {
    "text": "with jaeger exporter so",
    "start": "990880",
    "end": "994480"
  },
  {
    "text": "you can use open thermistor sdks with",
    "start": "994480",
    "end": "996560"
  },
  {
    "text": "jager beckoned",
    "start": "996560",
    "end": "998800"
  },
  {
    "text": "an open thermometric collector ships",
    "start": "998800",
    "end": "1000639"
  },
  {
    "text": "with jager receiver",
    "start": "1000639",
    "end": "1001920"
  },
  {
    "text": "and exporter",
    "start": "1001920",
    "end": "1004720"
  },
  {
    "text": "from the service mesh linker d and istio",
    "start": "1005279",
    "end": "1008639"
  },
  {
    "text": "they come with jaeger as a as a standard",
    "start": "1008639",
    "end": "1012079"
  },
  {
    "text": "tracing system and ny",
    "start": "1012079",
    "end": "1016399"
  },
  {
    "text": "uses native jaeger ziploc splash client",
    "start": "1016639",
    "end": "1024319"
  },
  {
    "text": "so let's have a look at architecture",
    "start": "1024319",
    "end": "1028079"
  },
  {
    "start": "1027000",
    "end": "1027000"
  },
  {
    "text": "so when jaeger was introduced this was",
    "start": "1028079",
    "end": "1031520"
  },
  {
    "text": "the",
    "start": "1031520",
    "end": "1032000"
  },
  {
    "text": "the default architecture so on the left",
    "start": "1032000",
    "end": "1035438"
  },
  {
    "text": "side there is the",
    "start": "1035439",
    "end": "1036319"
  },
  {
    "text": "host and container so our application",
    "start": "1036319",
    "end": "1040079"
  },
  {
    "text": "are reporting data to the collector and",
    "start": "1040079",
    "end": "1041678"
  },
  {
    "text": "then collector was storing data",
    "start": "1041679",
    "end": "1043600"
  },
  {
    "text": "to storage which",
    "start": "1043600",
    "end": "1046640"
  },
  {
    "text": "then jager query was using to get the",
    "start": "1046640",
    "end": "1049360"
  },
  {
    "text": "data",
    "start": "1049360",
    "end": "1049919"
  },
  {
    "text": "for the user interface the data",
    "start": "1049919",
    "end": "1052880"
  },
  {
    "text": "processing was done in batches",
    "start": "1052880",
    "end": "1054640"
  },
  {
    "text": "so spark job was reading the whole",
    "start": "1054640",
    "end": "1057440"
  },
  {
    "text": "indices and tables from database",
    "start": "1057440",
    "end": "1059840"
  },
  {
    "text": "it calculated some results and stored",
    "start": "1059840",
    "end": "1061600"
  },
  {
    "text": "them back to storage",
    "start": "1061600",
    "end": "1064000"
  },
  {
    "text": "and uh and so this architecture had a",
    "start": "1064000",
    "end": "1066880"
  },
  {
    "text": "couple of",
    "start": "1066880",
    "end": "1067440"
  },
  {
    "text": "problems uh especially with scalability",
    "start": "1067440",
    "end": "1070240"
  },
  {
    "text": "uh",
    "start": "1070240",
    "end": "1070880"
  },
  {
    "text": "and uh traffic spikes so if there was",
    "start": "1070880",
    "end": "1073760"
  },
  {
    "text": "too much data",
    "start": "1073760",
    "end": "1074960"
  },
  {
    "text": "going to the collector the storage",
    "start": "1074960",
    "end": "1077039"
  },
  {
    "text": "couldn't keep up so we just dropped the",
    "start": "1077039",
    "end": "1079039"
  },
  {
    "text": "data",
    "start": "1079039",
    "end": "1080480"
  },
  {
    "text": "and also we couldn't calculate",
    "start": "1080480",
    "end": "1084240"
  },
  {
    "text": "uh sometimes the uh the aggregation we",
    "start": "1084240",
    "end": "1087840"
  },
  {
    "text": "couldn't run the aggregation jobs",
    "start": "1087840",
    "end": "1089280"
  },
  {
    "text": "because there was just too much data",
    "start": "1089280",
    "end": "1091520"
  },
  {
    "text": "uh in the database and",
    "start": "1091520",
    "end": "1095039"
  },
  {
    "text": "it was very",
    "start": "1095039",
    "end": "1098160"
  },
  {
    "text": "resource uh heavy to run the spark jobs",
    "start": "1098160",
    "end": "1101440"
  },
  {
    "text": "because",
    "start": "1101440",
    "end": "1101919"
  },
  {
    "text": "they had to pull a lot of data from the",
    "start": "1101919",
    "end": "1104400"
  },
  {
    "text": "database into memory",
    "start": "1104400",
    "end": "1107440"
  },
  {
    "text": "so to address this problem we introduced",
    "start": "1107440",
    "end": "1109760"
  },
  {
    "text": "kafka",
    "start": "1109760",
    "end": "1110640"
  },
  {
    "text": "that sits between the collector and",
    "start": "1110640",
    "end": "1112480"
  },
  {
    "text": "storage",
    "start": "1112480",
    "end": "1113760"
  },
  {
    "start": "1113000",
    "end": "1113000"
  },
  {
    "text": "so collector instead of writing to",
    "start": "1113760",
    "end": "1115520"
  },
  {
    "text": "database it writes data to storage",
    "start": "1115520",
    "end": "1118000"
  },
  {
    "text": "and then there's ingestor that just",
    "start": "1118000",
    "end": "1120080"
  },
  {
    "text": "reads data from kafka and pushes them to",
    "start": "1120080",
    "end": "1122720"
  },
  {
    "text": "database this allows us to run streaming",
    "start": "1122720",
    "end": "1126880"
  },
  {
    "text": "jobs so instead of patch jobs",
    "start": "1126880",
    "end": "1130080"
  },
  {
    "text": "that basically these streaming jobs they",
    "start": "1130080",
    "end": "1132960"
  },
  {
    "text": "connect to the same topic",
    "start": "1132960",
    "end": "1134880"
  },
  {
    "text": "in kafka and push data",
    "start": "1134880",
    "end": "1139120"
  },
  {
    "text": "or push results to to storage",
    "start": "1139120",
    "end": "1143440"
  },
  {
    "text": "so zipking compatibility so jaeger is",
    "start": "1146480",
    "end": "1149600"
  },
  {
    "start": "1149000",
    "end": "1149000"
  },
  {
    "text": "fully compatible with zipkin and can",
    "start": "1149600",
    "end": "1152240"
  },
  {
    "text": "ingest",
    "start": "1152240",
    "end": "1152799"
  },
  {
    "text": "zipped in data in pretty much all the",
    "start": "1152799",
    "end": "1154720"
  },
  {
    "text": "formats",
    "start": "1154720",
    "end": "1156720"
  },
  {
    "text": "and it can also read zipping data from",
    "start": "1156720",
    "end": "1158640"
  },
  {
    "text": "kafka",
    "start": "1158640",
    "end": "1160640"
  },
  {
    "text": "from the client side jager clients",
    "start": "1160640",
    "end": "1163679"
  },
  {
    "text": "they understand zipking context a",
    "start": "1163679",
    "end": "1166640"
  },
  {
    "text": "context",
    "start": "1166640",
    "end": "1167360"
  },
  {
    "text": "propagation protocol b3 so you can use",
    "start": "1167360",
    "end": "1170480"
  },
  {
    "text": "zipkin instrumented applications with",
    "start": "1170480",
    "end": "1172720"
  },
  {
    "text": "the acres in",
    "start": "1172720",
    "end": "1173760"
  },
  {
    "text": "instrumented applications",
    "start": "1173760",
    "end": "1178160"
  },
  {
    "text": "so what is new in jaeger since the last",
    "start": "1178160",
    "end": "1181039"
  },
  {
    "text": "kubecon",
    "start": "1181039",
    "end": "1182000"
  },
  {
    "text": "in north america so we have done",
    "start": "1182000",
    "end": "1185760"
  },
  {
    "start": "1185000",
    "end": "1185000"
  },
  {
    "text": "a lot of progress there has been a lot",
    "start": "1185760",
    "end": "1187520"
  },
  {
    "text": "of new features a lot of",
    "start": "1187520",
    "end": "1189679"
  },
  {
    "text": "boxes bug fixes and a lot of stability",
    "start": "1189679",
    "end": "1192720"
  },
  {
    "text": "improvements so one of the major",
    "start": "1192720",
    "end": "1196080"
  },
  {
    "text": "features",
    "start": "1196080",
    "end": "1196799"
  },
  {
    "text": "is data loss statistics for clients so",
    "start": "1196799",
    "end": "1199840"
  },
  {
    "text": "jaeger clients they can drop data",
    "start": "1199840",
    "end": "1202799"
  },
  {
    "text": "it's obviously a problem with clients",
    "start": "1202799",
    "end": "1204720"
  },
  {
    "text": "drop data they drop the data because",
    "start": "1204720",
    "end": "1206559"
  },
  {
    "text": "they want to keep",
    "start": "1206559",
    "end": "1207760"
  },
  {
    "text": "a reasonable quality of service they",
    "start": "1207760",
    "end": "1210080"
  },
  {
    "text": "don't want to overlap overwhelm the back",
    "start": "1210080",
    "end": "1212000"
  },
  {
    "text": "end",
    "start": "1212000",
    "end": "1213360"
  },
  {
    "text": "and so this is a problem but it used to",
    "start": "1213360",
    "end": "1214960"
  },
  {
    "text": "be bigger problem because we couldn't",
    "start": "1214960",
    "end": "1216720"
  },
  {
    "text": "tell how much data the clients",
    "start": "1216720",
    "end": "1218640"
  },
  {
    "text": "are dropping so now there is a way how",
    "start": "1218640",
    "end": "1221440"
  },
  {
    "text": "clients",
    "start": "1221440",
    "end": "1222080"
  },
  {
    "text": "can notify the backend uh how much data",
    "start": "1222080",
    "end": "1225280"
  },
  {
    "text": "they dropped we have also done a lot of",
    "start": "1225280",
    "end": "1228799"
  },
  {
    "text": "security improvements so for example",
    "start": "1228799",
    "end": "1230720"
  },
  {
    "text": "kafka basic authentication and tls for",
    "start": "1230720",
    "end": "1235039"
  },
  {
    "text": "query service and also eager operator",
    "start": "1235039",
    "end": "1238640"
  },
  {
    "text": "it's able to automatically provision",
    "start": "1238640",
    "end": "1240880"
  },
  {
    "text": "certificates",
    "start": "1240880",
    "end": "1242240"
  },
  {
    "text": "but also renew them if they expire",
    "start": "1242240",
    "end": "1246400"
  },
  {
    "text": "from the usability standpoint uh we",
    "start": "1246480",
    "end": "1249120"
  },
  {
    "text": "compiled",
    "start": "1249120",
    "end": "1250000"
  },
  {
    "text": "and we distribute jaeger for",
    "start": "1250000",
    "end": "1253360"
  },
  {
    "text": "different architectures uh so apart from",
    "start": "1253360",
    "end": "1257440"
  },
  {
    "text": "linux and windows we added arm 64 and",
    "start": "1257440",
    "end": "1260400"
  },
  {
    "text": "ppc",
    "start": "1260400",
    "end": "1260960"
  },
  {
    "text": "64. the next topic is trace dsl and this",
    "start": "1260960",
    "end": "1264880"
  },
  {
    "text": "is something that",
    "start": "1264880",
    "end": "1265840"
  },
  {
    "text": "i was personally really excited about",
    "start": "1265840",
    "end": "1267919"
  },
  {
    "text": "and i uh",
    "start": "1267919",
    "end": "1269440"
  },
  {
    "text": "i worked on this so we wanted to",
    "start": "1269440",
    "end": "1274480"
  },
  {
    "text": "make it easier for data scientists and",
    "start": "1274480",
    "end": "1277600"
  },
  {
    "text": "devops people",
    "start": "1277600",
    "end": "1279280"
  },
  {
    "text": "to uh basically",
    "start": "1279280",
    "end": "1282640"
  },
  {
    "text": "run programmatic uh",
    "start": "1282640",
    "end": "1286000"
  },
  {
    "text": "queries against jaeger",
    "start": "1286000",
    "end": "1289360"
  },
  {
    "text": "and to make this possible and simple",
    "start": "1289360",
    "end": "1293120"
  },
  {
    "text": "uh we developed a trace dsl a trace",
    "start": "1293120",
    "end": "1295679"
  },
  {
    "text": "domain specific language",
    "start": "1295679",
    "end": "1297520"
  },
  {
    "text": "uh that is able to you know query data",
    "start": "1297520",
    "end": "1300000"
  },
  {
    "text": "but also extract features from the data",
    "start": "1300000",
    "end": "1302799"
  },
  {
    "text": "and so this dsl is used in jupyter",
    "start": "1302799",
    "end": "1305520"
  },
  {
    "text": "notebooks that connect to jaeger query",
    "start": "1305520",
    "end": "1307600"
  },
  {
    "text": "but",
    "start": "1307600",
    "end": "1308159"
  },
  {
    "text": "also to kafka for streaming processing",
    "start": "1308159",
    "end": "1312480"
  },
  {
    "text": "uh and so the main use case for this is",
    "start": "1312480",
    "end": "1314720"
  },
  {
    "text": "that",
    "start": "1314720",
    "end": "1315600"
  },
  {
    "text": "sometimes if you want to verify your",
    "start": "1315600",
    "end": "1318000"
  },
  {
    "text": "hypothesis",
    "start": "1318000",
    "end": "1319520"
  },
  {
    "text": "uh the verification requires aggregating",
    "start": "1319520",
    "end": "1322080"
  },
  {
    "text": "a lot of data",
    "start": "1322080",
    "end": "1323919"
  },
  {
    "text": "and this is just not possible in the ui",
    "start": "1323919",
    "end": "1326960"
  },
  {
    "text": "because you cannot aggregate or you",
    "start": "1326960",
    "end": "1329840"
  },
  {
    "text": "cannot",
    "start": "1329840",
    "end": "1330559"
  },
  {
    "text": "manually investigate thousands of",
    "start": "1330559",
    "end": "1333840"
  },
  {
    "text": "traces in a user interface to really run",
    "start": "1333840",
    "end": "1337039"
  },
  {
    "text": "such a",
    "start": "1337039",
    "end": "1338559"
  },
  {
    "text": "such investigation you have to write a",
    "start": "1338559",
    "end": "1340799"
  },
  {
    "text": "piece of code",
    "start": "1340799",
    "end": "1341840"
  },
  {
    "text": "that would do it for you",
    "start": "1341840",
    "end": "1344880"
  },
  {
    "text": "the next uh new feature is trace quality",
    "start": "1345200",
    "end": "1347360"
  },
  {
    "text": "matrix so",
    "start": "1347360",
    "end": "1348880"
  },
  {
    "text": "the same repository uh with the trace",
    "start": "1348880",
    "end": "1351440"
  },
  {
    "text": "dsl it also provides some support for",
    "start": "1351440",
    "end": "1354480"
  },
  {
    "text": "uh for metrics uh and this metrics",
    "start": "1354480",
    "end": "1356880"
  },
  {
    "text": "basically says",
    "start": "1356880",
    "end": "1358400"
  },
  {
    "text": "uh how well is your are your application",
    "start": "1358400",
    "end": "1362159"
  },
  {
    "text": "instrumented",
    "start": "1362159",
    "end": "1363600"
  },
  {
    "text": "uh so this is very crucial because",
    "start": "1363600",
    "end": "1367440"
  },
  {
    "text": "if your environment is not well",
    "start": "1367440",
    "end": "1369440"
  },
  {
    "text": "instrumented",
    "start": "1369440",
    "end": "1370559"
  },
  {
    "text": "you will not get the full power of",
    "start": "1370559",
    "end": "1373280"
  },
  {
    "text": "distributed tracing",
    "start": "1373280",
    "end": "1376080"
  },
  {
    "text": "and the last new feature is rebase on",
    "start": "1376080",
    "end": "1379200"
  },
  {
    "text": "open telemetry so",
    "start": "1379200",
    "end": "1382480"
  },
  {
    "text": "we have basically rebased all jager",
    "start": "1382480",
    "end": "1385600"
  },
  {
    "text": "beckon components",
    "start": "1385600",
    "end": "1387679"
  },
  {
    "text": "agent collector ingester all in one",
    "start": "1387679",
    "end": "1392080"
  },
  {
    "text": "on top of open telemetry collector",
    "start": "1392080",
    "end": "1395120"
  },
  {
    "text": "so all jaeger all these new components",
    "start": "1395120",
    "end": "1398640"
  },
  {
    "text": "are basically open geometry collector",
    "start": "1398640",
    "end": "1400799"
  },
  {
    "text": "and we just added",
    "start": "1400799",
    "end": "1402799"
  },
  {
    "text": "storage functionality to this",
    "start": "1402799",
    "end": "1406320"
  },
  {
    "text": "new component",
    "start": "1406320",
    "end": "1409039"
  },
  {
    "start": "1408000",
    "end": "1408000"
  },
  {
    "text": "so on this slide you can see the",
    "start": "1410240",
    "end": "1412559"
  },
  {
    "text": "configuration of",
    "start": "1412559",
    "end": "1414080"
  },
  {
    "text": "new jager open geometry collector",
    "start": "1414080",
    "end": "1417120"
  },
  {
    "text": "uh and what is different to to the",
    "start": "1417120",
    "end": "1419600"
  },
  {
    "text": "upstream open telemetry is that",
    "start": "1419600",
    "end": "1421600"
  },
  {
    "text": "these components can store data to",
    "start": "1421600",
    "end": "1424240"
  },
  {
    "text": "storage",
    "start": "1424240",
    "end": "1425440"
  },
  {
    "text": "so we see the section with exporters and",
    "start": "1425440",
    "end": "1427760"
  },
  {
    "text": "with the there we see",
    "start": "1427760",
    "end": "1429360"
  },
  {
    "text": "jaeger elasticsearch",
    "start": "1429360",
    "end": "1432559"
  },
  {
    "text": "and we see that jager elasticsearch",
    "start": "1432559",
    "end": "1434640"
  },
  {
    "text": "which is just uh you know",
    "start": "1434640",
    "end": "1436400"
  },
  {
    "text": "it's the standard elasticsearch",
    "start": "1436400",
    "end": "1437919"
  },
  {
    "text": "configuration",
    "start": "1437919",
    "end": "1440639"
  },
  {
    "text": "and to make this very simple we have",
    "start": "1441279",
    "end": "1444000"
  },
  {
    "text": "made couple of",
    "start": "1444000",
    "end": "1445200"
  },
  {
    "text": "decisions to",
    "start": "1445200",
    "end": "1448158"
  },
  {
    "text": "to support simple upgrade",
    "start": "1448799",
    "end": "1452400"
  },
  {
    "text": "from the current jager components to",
    "start": "1452400",
    "end": "1454720"
  },
  {
    "text": "this new set",
    "start": "1454720",
    "end": "1455600"
  },
  {
    "text": "of binaries uh and so we support",
    "start": "1455600",
    "end": "1460799"
  },
  {
    "text": "uh the current jaeger configuration so",
    "start": "1460799",
    "end": "1464080"
  },
  {
    "text": "you can",
    "start": "1464080",
    "end": "1464880"
  },
  {
    "text": "also configure this new component uh",
    "start": "1464880",
    "end": "1467440"
  },
  {
    "text": "with the current jaeger flags and",
    "start": "1467440",
    "end": "1469200"
  },
  {
    "text": "current dagger configuration file",
    "start": "1469200",
    "end": "1472720"
  },
  {
    "text": "there's a lot of remaining work if",
    "start": "1472720",
    "end": "1475360"
  },
  {
    "text": "you're interested to",
    "start": "1475360",
    "end": "1477279"
  },
  {
    "text": "to participate or see the progress you",
    "start": "1477279",
    "end": "1480000"
  },
  {
    "text": "can subscribe to",
    "start": "1480000",
    "end": "1481360"
  },
  {
    "text": "to jager tracing slash jager repository",
    "start": "1481360",
    "end": "1484400"
  },
  {
    "text": "and",
    "start": "1484400",
    "end": "1484960"
  },
  {
    "text": "watch for issues tagged with arya",
    "start": "1484960",
    "end": "1488720"
  },
  {
    "text": "auto",
    "start": "1488720",
    "end": "1491120"
  },
  {
    "text": "okay so what is on the road map so we",
    "start": "1493840",
    "end": "1497120"
  },
  {
    "start": "1496000",
    "end": "1496000"
  },
  {
    "text": "will continue with uh integration with",
    "start": "1497120",
    "end": "1500720"
  },
  {
    "text": "open telemetry",
    "start": "1500720",
    "end": "1502240"
  },
  {
    "text": "and once open telemetry collector",
    "start": "1502240",
    "end": "1505600"
  },
  {
    "text": "reaches ga we will release",
    "start": "1505600",
    "end": "1509440"
  },
  {
    "text": "this new set of components based on open",
    "start": "1509440",
    "end": "1512000"
  },
  {
    "text": "telemetry collector",
    "start": "1512000",
    "end": "1515600"
  },
  {
    "text": "and we are also looking at scalable",
    "start": "1515600",
    "end": "1517600"
  },
  {
    "text": "tail-based sampling from open telemetry",
    "start": "1517600",
    "end": "1521919"
  },
  {
    "text": "if you want to learn more about jaeger",
    "start": "1524000",
    "end": "1526559"
  },
  {
    "text": "there is",
    "start": "1526559",
    "end": "1527960"
  },
  {
    "text": "egotracing.io website but also",
    "start": "1527960",
    "end": "1530799"
  },
  {
    "text": "block uh on the medium",
    "start": "1530799",
    "end": "1534080"
  },
  {
    "text": "where we publish interesting topics uh",
    "start": "1534080",
    "end": "1537760"
  },
  {
    "text": "related to jaeger but also to tracing",
    "start": "1537760",
    "end": "1541279"
  },
  {
    "text": "in general",
    "start": "1541279",
    "end": "1543840"
  },
  {
    "start": "1544000",
    "end": "1544000"
  },
  {
    "text": "if you want to get in touch the best",
    "start": "1544320",
    "end": "1546240"
  },
  {
    "text": "place is probably",
    "start": "1546240",
    "end": "1547840"
  },
  {
    "text": "the the community channel",
    "start": "1547840",
    "end": "1552400"
  },
  {
    "text": "but also github and mailing list",
    "start": "1552400",
    "end": "1555679"
  },
  {
    "text": "we also do b weekly community meetings",
    "start": "1555679",
    "end": "1560240"
  },
  {
    "text": "where you can connect and and talk to us",
    "start": "1560240",
    "end": "1563679"
  },
  {
    "text": "in person",
    "start": "1563679",
    "end": "1566240"
  },
  {
    "text": "okay this is everything what i have",
    "start": "1567840",
    "end": "1569440"
  },
  {
    "text": "prepared for today",
    "start": "1569440",
    "end": "1571120"
  },
  {
    "text": "and if you have any questions feel free",
    "start": "1571120",
    "end": "1573039"
  },
  {
    "text": "to ask them in chat",
    "start": "1573039",
    "end": "1577200"
  }
]