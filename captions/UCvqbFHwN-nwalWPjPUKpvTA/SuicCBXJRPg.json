[
  {
    "text": "all right it is 11:55 so we'll go ahead and get started thank you for coming we're gonna talk about helm and service",
    "start": "0",
    "end": "7200"
  },
  {
    "text": "catalog today so my name is Jeremy I work at Microsoft Azure on the containers team I'm specifically working",
    "start": "7200",
    "end": "13440"
  },
  {
    "text": "on open service broker for Asher which is an implementation of the open service broker API I'll talk about that in a",
    "start": "13440",
    "end": "18630"
  },
  {
    "text": "little bit I also do some contributions to six Service Catalog which is the",
    "start": "18630",
    "end": "23760"
  },
  {
    "text": "group that's building service catalog for kubernetes you can find all my contact info here I will put the slides",
    "start": "23760",
    "end": "29670"
  },
  {
    "text": "there on schedule ready but I'll put them in my github repo along with the charts that I'm gonna demo at the end of",
    "start": "29670",
    "end": "35070"
  },
  {
    "text": "this so we build systems today they have a lot of components like people go down",
    "start": "35070",
    "end": "40110"
  },
  {
    "text": "the path of building micro services it brings you a lot of freedom and a lot of choice in how you're gonna build your",
    "start": "40110",
    "end": "46140"
  },
  {
    "text": "system and that can be things like what programming language you're going to build your system in what kind of",
    "start": "46140",
    "end": "51270"
  },
  {
    "text": "interfaces it's going to expose whether it's HTTP or something else and then what kind of persistence it's going to",
    "start": "51270",
    "end": "56460"
  },
  {
    "text": "use are you gonna use a relational database or a non relational database so I have this kind of notional web store",
    "start": "56460",
    "end": "62010"
  },
  {
    "text": "that comes from one of the spring outfit direct debits that is built up of a",
    "start": "62010",
    "end": "67530"
  },
  {
    "text": "bunch of Microsystems it's using my sequel post Scrat Oh so my sequel neo4j",
    "start": "67530",
    "end": "72540"
  },
  {
    "text": "which is a graph database MongoDB pretty pretty popular no sequel database",
    "start": "72540",
    "end": "78710"
  },
  {
    "text": "building something like this in deploying to kubernetes is probably gonna be a challenging thing right for",
    "start": "78710",
    "end": "84390"
  },
  {
    "text": "each one of these services you're probably going to need to develop some sort of deployment replica set depending",
    "start": "84390",
    "end": "89939"
  },
  {
    "text": "what you're doing for the things like post graph or my sequel and neo4j and MongoDB probably need to worry about",
    "start": "89939",
    "end": "95909"
  },
  {
    "text": "persistence so you probably need to figure out how to build persistent volumes for that what you're gonna use",
    "start": "95909",
    "end": "101130"
  },
  {
    "text": "for that the thing on top probably has an ingress associated with it so that traffic from the outside can come in you",
    "start": "101130",
    "end": "107520"
  },
  {
    "text": "just have a lot of pieces that make this thing up and when you think about how you're going to deploy these things possibly roll them back there's not",
    "start": "107520",
    "end": "114479"
  },
  {
    "text": "really a thing that's native to kubernetes that really handles that but there are a lot of tools in the ecosystem like helm so helm if you're",
    "start": "114479",
    "end": "120899"
  },
  {
    "text": "not familiar is a tool that allows you to build something called a chart and the chart has templates for the manifest",
    "start": "120899",
    "end": "127799"
  },
  {
    "text": "kubernetes will use to deploy your your application and that could be anything like the deployment the service",
    "start": "127799",
    "end": "133500"
  },
  {
    "text": "how you gonna define persistent volumes when you put all the things together you end up with a reusable component that",
    "start": "133500",
    "end": "140100"
  },
  {
    "text": "you can parametrize when you deploy and it's kind of like assembling Legos where each one of these charts is going to",
    "start": "140100",
    "end": "145230"
  },
  {
    "text": "represent a component of the bigger system when you put them all together you end up with that that final state",
    "start": "145230",
    "end": "150750"
  },
  {
    "text": "that you want but each one of them is individually controllable and that's great for quickly rolling back and",
    "start": "150750",
    "end": "158100"
  },
  {
    "text": "handling the the lifecycle of your application in a way that's really manageable version control",
    "start": "158100",
    "end": "163530"
  },
  {
    "text": "understandable but what do you do about the databases when you're gonna write",
    "start": "163530",
    "end": "168930"
  },
  {
    "text": "your application do you need to worry about how to containerize my sequel or Postgres or MongoDB me as a Java and go",
    "start": "168930",
    "end": "177239"
  },
  {
    "text": "developer probably not the best person to do that so luckily the community has been thinking about that so in the",
    "start": "177239",
    "end": "183239"
  },
  {
    "text": "stable helmut arts repo there's a number of databases that you can consume with your helmet art and they're packaged as",
    "start": "183239",
    "end": "188880"
  },
  {
    "text": "helmet charts it may not be the best thing for deploying for production but they're really easy to use and consume and get started deploying on de mini",
    "start": "188880",
    "end": "195630"
  },
  {
    "text": "coop great for the developer experience when you move into production you can also take advantage of operators right",
    "start": "195630",
    "end": "201870"
  },
  {
    "text": "so we heard about operators in the keynote a little bit today if you go to github do google search you can find a",
    "start": "201870",
    "end": "208769"
  },
  {
    "text": "number of operators for a lot of popular things at CD obviously is a big one from core OS but also Oracle has one for my",
    "start": "208769",
    "end": "215640"
  },
  {
    "text": "sequel there's one for four Postgres as well from crunchy you can find a lot of these things you can build them yourself",
    "start": "215640",
    "end": "221220"
  },
  {
    "text": "as well and luckily a lot of these also provide helm carts so if you're already using helm this is another way that you",
    "start": "221220",
    "end": "226709"
  },
  {
    "text": "can kind of bring that experience and keep your common tooling and people this",
    "start": "226709",
    "end": "232410"
  },
  {
    "text": "is the canonical example if you go to the stable home transcript of this is the WordPress template this is the",
    "start": "232410",
    "end": "237450"
  },
  {
    "text": "requirements file from the WordPress template WordPress chart in this it's saying that it depends on Reedy B so",
    "start": "237450",
    "end": "244260"
  },
  {
    "text": "when you install the WordPress helm chart assuming you have that condition Moorea to be enabled it's gonna use the",
    "start": "244260",
    "end": "249930"
  },
  {
    "text": "Maria DB chart and you'll end up with a deployment oops sorry",
    "start": "249930",
    "end": "255290"
  },
  {
    "text": "we see the resources that are deployed here when I run the helm install command you end up with a persistent volume",
    "start": "255290",
    "end": "261150"
  },
  {
    "text": "claim for Maria DB you end up with a service from really be a deployment and a pod for each one of those",
    "start": "261150",
    "end": "266840"
  },
  {
    "text": "so by simply running that one kind of package manager you know helm install command you end up",
    "start": "266840",
    "end": "272240"
  },
  {
    "text": "with that fully functional thing using that helm package to Moorea DB so that's really good really convenient and people",
    "start": "272240",
    "end": "279050"
  },
  {
    "text": "are running stateful things in kubernetes so this was a tweet from Matt Farina it was right when I got to",
    "start": "279050",
    "end": "284690"
  },
  {
    "text": "Copenhagen so I tweeted starts a little bit to include it I thought it was super relevant obviously stateful stateless services are what most people are using",
    "start": "284690",
    "end": "291620"
  },
  {
    "text": "ku gratis for but if you look at the numbers for sequel databases no sequel message queues other things and it's",
    "start": "291620",
    "end": "297350"
  },
  {
    "text": "between 25 and 50 percent somewhere in that range a lot of people are running stateful things on kubernetes and it's",
    "start": "297350",
    "end": "302780"
  },
  {
    "text": "gotten a lot better if you try to do this a couple years ago a lot of the",
    "start": "302780",
    "end": "307820"
  },
  {
    "text": "pieces that you needed to do this weren't really there but a lot of progress has been made another tweak",
    "start": "307820",
    "end": "314720"
  },
  {
    "text": "always have to have a Kelsie tweet in your presentation so this was from February and it was a really crazy long",
    "start": "314720",
    "end": "321050"
  },
  {
    "text": "thread the takeaway was that Kelsie thinks that kubernetes has made a lot of improvements to run stateful workloads",
    "start": "321050",
    "end": "327650"
  },
  {
    "text": "but he doesn't like to do stateful work floats like one I didn't include here was kubernetes supports stateful",
    "start": "327650",
    "end": "333620"
  },
  {
    "text": "workloads I don't so his take away his alternative was you",
    "start": "333620",
    "end": "338660"
  },
  {
    "text": "know either you run these things in a dedicated node group maybe on other hardware or you take advantage of a managed service from a cloud provider so",
    "start": "338660",
    "end": "346610"
  },
  {
    "text": "if we want to do that how do we continue to use our existing if we're gonna use a",
    "start": "346610",
    "end": "352850"
  },
  {
    "text": "managed cloud provider how do we continue to use our existing toolset me using helm how do how do I get from home",
    "start": "352850",
    "end": "360080"
  },
  {
    "text": "install to something deployed in Amazon or GK or goo pressure so really this is",
    "start": "360080",
    "end": "366950"
  },
  {
    "text": "the question so you as the person to plan your application or the cluster operator you want to create a service",
    "start": "366950",
    "end": "371990"
  },
  {
    "text": "right and you want to do this in maybe Google and Azure and then you want to use those services inside of your",
    "start": "371990",
    "end": "377539"
  },
  {
    "text": "cluster connect them to your applications and the real question is like what is that question mark I want",
    "start": "377539",
    "end": "383060"
  },
  {
    "text": "to go directly from kubernetes and using the kubernetes api so that all my tooling works to that cloud provider it",
    "start": "383060",
    "end": "388580"
  },
  {
    "text": "turns out there's two things make this really possible so you could definitely do outside of committees like you could",
    "start": "388580",
    "end": "394160"
  },
  {
    "text": "build terraform to go deploy Postgres in amazon why are your secrets in your cluster build all about yourself but",
    "start": "394160",
    "end": "400560"
  },
  {
    "text": "it's extra work that you don't necessarily need to do because kubernetes ecosystems bringing that along for you so the first of these",
    "start": "400560",
    "end": "406950"
  },
  {
    "text": "things is the open service broker API so we solve that again in the keynotes today when Abby was talking about cloud",
    "start": "406950",
    "end": "412440"
  },
  {
    "text": "foundry and kubernetes together so the open service broker API originated in cloud foundry so if anybody is a cloud",
    "start": "412440",
    "end": "417900"
  },
  {
    "text": "foundry developer you're pretty familiar with the the CF create service command that goes ahead and talks to a service",
    "start": "417900",
    "end": "424680"
  },
  {
    "text": "broker that implements the open service broker API and creates the thing that you need to use once you have it then",
    "start": "424680",
    "end": "430320"
  },
  {
    "text": "you can run a CF bind or declare it in your manifest to connect that application to the thing that the broker",
    "start": "430320",
    "end": "437970"
  },
  {
    "text": "has created and then obviously unbind update the instance if you need change parameters make it a bigger instance or",
    "start": "437970",
    "end": "444120"
  },
  {
    "text": "shrink it down change firewall rules things like that and obviously a deep revision and once you no longer need it get rid of it all of these things are",
    "start": "444120",
    "end": "450960"
  },
  {
    "text": "trying to give you a standard way of talking to your cloud infrastructure could be done cloud administer sure you",
    "start": "450960",
    "end": "457740"
  },
  {
    "text": "could write it your own broker to do essentially anything as long as it's implementing this API and then any",
    "start": "457740",
    "end": "463470"
  },
  {
    "text": "platform that's consuming OSB can do that and in kubernetes that platform is Service Catalog so Service Catalog is",
    "start": "463470",
    "end": "470580"
  },
  {
    "text": "developed as an API extension you register install service catalog on your",
    "start": "470580",
    "end": "476520"
  },
  {
    "text": "cluster it adds some resource types to your your cluster and then you can just use the kubernetes api to interact with",
    "start": "476520",
    "end": "483090"
  },
  {
    "text": "the broker and if we look at the types that are added the first one is cluster",
    "start": "483090",
    "end": "488790"
  },
  {
    "text": "service broker so cluster service broker is how you introduce a broker into your cluster and you're going to include",
    "start": "488790",
    "end": "494460"
  },
  {
    "text": "things like the URL to connect to the username the password may be a token if",
    "start": "494460",
    "end": "499890"
  },
  {
    "text": "it's doing token-based authentication so you create that as the desired state of",
    "start": "499890",
    "end": "505140"
  },
  {
    "text": "your cluster to have that broker added and then the broker is contacted and",
    "start": "505140",
    "end": "511159"
  },
  {
    "text": "it's going to create some extra resources in the cluster for you so these types are registered but once there the broker is added it's going to",
    "start": "511159",
    "end": "519060"
  },
  {
    "text": "fetch the catalog so the catalog is made up of two things one is the service class and this is called the cluster",
    "start": "519060",
    "end": "524910"
  },
  {
    "text": "service class that's going to be things like Postgres or my sequel or MongoDB you know the general class of service",
    "start": "524910",
    "end": "531420"
  },
  {
    "text": "and then inside of that you'll also have service plans and though are going to specify the topping of the",
    "start": "531420",
    "end": "536950"
  },
  {
    "text": "quality of service you're going to get for each one of those classes could be like a free plan or a non free plan",
    "start": "536950",
    "end": "542200"
  },
  {
    "text": "maybe it's highly available replicated in multiple multiple regions so the broker is added to the cluster service",
    "start": "542200",
    "end": "549490"
  },
  {
    "text": "catalog gets the catalog from the broker and then once you have that information you're able to list those things browse",
    "start": "549490",
    "end": "554830"
  },
  {
    "text": "the catalog and figure out what you need and create a service instance so the service instance is where you're going",
    "start": "554830",
    "end": "560140"
  },
  {
    "text": "to define what the state of that instance should look like it's going to include the cluster service class in the plan along with any provisioning",
    "start": "560140",
    "end": "566650"
  },
  {
    "text": "parameters that are necessary for that instance like maybe you want to specify firewall rules it's a good example you",
    "start": "566650",
    "end": "572110"
  },
  {
    "text": "have those things in the definition like the spec of that cluster instance and service catalog is going to turn that into a provision request to the open",
    "start": "572110",
    "end": "578500"
  },
  {
    "text": "service broker open service broker will then asynchronously do the things that it needs to do like provision whatever",
    "start": "578500",
    "end": "584950"
  },
  {
    "text": "makes up that service behind the scenes and make that available as an instance inside of your cluster so so next look",
    "start": "584950",
    "end": "591790"
  },
  {
    "text": "the last thing you need to do to connect that is to create a service binding and the service binding again allows you to",
    "start": "591790",
    "end": "597010"
  },
  {
    "text": "specify parameters if you need to parameterize your bind request you create that into the cluster and service",
    "start": "597010",
    "end": "603279"
  },
  {
    "text": "catalog says ok I need to go to the broker and create a binding and that's generally going to be something like creating a user or returning some sort",
    "start": "603279",
    "end": "610900"
  },
  {
    "text": "of pre pre staged connection information the URI to connect to you host port it",
    "start": "610900",
    "end": "616900"
  },
  {
    "text": "varies from bourbon broker but that's returned in a format that gets turned into a secret so once you have that",
    "start": "616900",
    "end": "623080"
  },
  {
    "text": "secret in your cluster you can consume it from any application like you would any other secret in the app in the in",
    "start": "623080",
    "end": "629080"
  },
  {
    "text": "the cluster so you can deploy your your pod your pod can load that into environment variables and it's good to",
    "start": "629080",
    "end": "635380"
  },
  {
    "text": "go so at that point you have a thing provisioned in the cloud or on VMs in",
    "start": "635380",
    "end": "641529"
  },
  {
    "text": "your infrastructure using whatever broker could be crossed cloud and you've got a secret created in your cluster",
    "start": "641529",
    "end": "646870"
  },
  {
    "text": "that you're ready to use so this sounds really awesome right the world is great",
    "start": "646870",
    "end": "652390"
  },
  {
    "text": "and you no longer have to worry about building this custom thing to go provision your infrastructure it's",
    "start": "652390",
    "end": "658510"
  },
  {
    "text": "really easy to use and the great thing is it's just kubernetes resources so you can continue to use your existing",
    "start": "658510",
    "end": "663820"
  },
  {
    "text": "tooling but there are some some user experience aspects that that aren't so great one of them being",
    "start": "663820",
    "end": "669910"
  },
  {
    "text": "that the cluster service broker and the class and planner obviously at the cluster level so you can't really use",
    "start": "669910",
    "end": "676690"
  },
  {
    "text": "our back to say that I wanted to be able to deploy in this namespace only free plans and in this namespace I only want",
    "start": "676690",
    "end": "682810"
  },
  {
    "text": "to do product like really expensive highly available plans that being fixed Service Catalog is actually doing a lot",
    "start": "682810",
    "end": "689230"
  },
  {
    "text": "of work to improve the user experience but that's one that you can't really work around yet other than specifying",
    "start": "689230",
    "end": "695199"
  },
  {
    "text": "through our back that nobody except a certain set of people can create resources but that's work you can you",
    "start": "695199",
    "end": "700209"
  },
  {
    "text": "can handle that another is that while this is trying to give you that common specified API for",
    "start": "700209",
    "end": "705850"
  },
  {
    "text": "interacting with cloud resources through an indirection layer you're still exposing some things that are not common",
    "start": "705850",
    "end": "712380"
  },
  {
    "text": "obviously the class and the plan is one of those things so if you're gonna use the Google broker or you're gonna use",
    "start": "712380",
    "end": "718240"
  },
  {
    "text": "the azure broker they're probably gonna use different class names probably different plan names to represent those things so you can't really just say give",
    "start": "718240",
    "end": "725230"
  },
  {
    "text": "me a my sequel you know you have to say I need a my sequel from the Azure broker or a need a spanner from the Google",
    "start": "725230",
    "end": "731500"
  },
  {
    "text": "broker and along those lines provisioning parameters are another thing you can't really specify",
    "start": "731500",
    "end": "736709"
  },
  {
    "text": "generically you have to have some knowledge of what that cloud provider is",
    "start": "736709",
    "end": "742569"
  },
  {
    "text": "going to give you so that is pretty easy to work around using our existing",
    "start": "742569",
    "end": "748779"
  },
  {
    "text": "tooling so we're gonna look at a couple of ways at helm can help us with that so",
    "start": "748779",
    "end": "754029"
  },
  {
    "text": "it's easy to use Service Catalog with helm but it's also easy to use helm to kind of augment the user experience you",
    "start": "754029",
    "end": "759730"
  },
  {
    "text": "get with service catalog so you end up in a better state kind of all-around",
    "start": "759730",
    "end": "764940"
  },
  {
    "text": "we're gonna look at a couple examples and these will be and github once this is done I have to commit them and push",
    "start": "765209",
    "end": "771250"
  },
  {
    "text": "but we're gonna look at three real examples the first one is gonna be just provisioning something via - your broker",
    "start": "771250",
    "end": "778750"
  },
  {
    "text": "I have cloud privileges so it's easy for me to use and the second one will look at how we can deploy an application that",
    "start": "778750",
    "end": "785259"
  },
  {
    "text": "uses that through dependencies in a normal helm fashion so we can say that this chart depends on that MongoDB",
    "start": "785259",
    "end": "792160"
  },
  {
    "text": "instance and helm will take care of provisioning both of those for us and then we'll look at how we can take",
    "start": "792160",
    "end": "797290"
  },
  {
    "text": "advantage of running with two different brokers and some features that service catalog provides for doing secret transformation",
    "start": "797290",
    "end": "802749"
  },
  {
    "text": "like the real issue if you're trying to do this cross cloud thing is that the",
    "start": "802749",
    "end": "809199"
  },
  {
    "text": "brokers don't necessarily return the same credential so there's nothing in the OSP spec that says that a credential",
    "start": "809199",
    "end": "814540"
  },
  {
    "text": "block should include the following key so like there's some guidance Cloud Foundry has some some suggestions about",
    "start": "814540",
    "end": "820089"
  },
  {
    "text": "what you should do for your broker if you're going to be a cloud foundry broker that works with spring but there's nothing in this back so the",
    "start": "820089",
    "end": "825489"
  },
  {
    "text": "Asscher broker and the Google broker could return totally different sets of keys the shape of the credential to be",
    "start": "825489",
    "end": "830949"
  },
  {
    "text": "totally different you could have nested things versus just a series of of top-level keys okay so I'm gonna switch",
    "start": "830949",
    "end": "837610"
  },
  {
    "text": "over here now okay so this is the the",
    "start": "837610",
    "end": "843429"
  },
  {
    "text": "directory that'll be in github we've three charts one is cosmos DB the second one is MongoDB is generic so the first",
    "start": "843429",
    "end": "849819"
  },
  {
    "text": "one is just gonna be the azure service and look at that and then we'll do play the application which I'm calling tweet scraper it's two parts its pod with two",
    "start": "849819",
    "end": "857350"
  },
  {
    "text": "containers one is gonna listen for the coop con hash tag stick them into that",
    "start": "857350",
    "end": "862720"
  },
  {
    "text": "cosmos DB instance and then we'll have a pretty little front-end for it so I have a text file here because I'm terrible at",
    "start": "862720",
    "end": "869259"
  },
  {
    "text": "typing so I'm just gonna do a little bit of coffee based first we'll show you that there's nothing deployed in this",
    "start": "869259",
    "end": "876040"
  },
  {
    "text": "this group and the G in this I'm using",
    "start": "876040",
    "end": "883360"
  },
  {
    "text": "that as your command line tool I'm just gonna list the resources there's nothing there so what I'm gonna do next is use",
    "start": "883360",
    "end": "890049"
  },
  {
    "text": "this tool called SV cat so you can use coop CTL to do this as well I can do coop CTL get service instances coop demo",
    "start": "890049",
    "end": "901839"
  },
  {
    "text": "and there are none I should run in a second that's showing you that there's",
    "start": "901839",
    "end": "908589"
  },
  {
    "text": "no service instances deployed so we'll grab this helm install command run that",
    "start": "908589",
    "end": "917199"
  },
  {
    "text": "and what you'll see from this is it's gonna create a resource that's called service instance and if I run the SV cat",
    "start": "917199",
    "end": "924779"
  },
  {
    "text": "get instances command again",
    "start": "924779",
    "end": "929009"
  },
  {
    "text": "coupe demo now we have one that's",
    "start": "930370",
    "end": "936940"
  },
  {
    "text": "provisioning so it's gonna go asynchronously talked to the broker which is the azure open service broker it's gonna say please provision me",
    "start": "936940",
    "end": "943900"
  },
  {
    "text": "something called cosmos DB which is made up of a couple of plans and services and that resource looks something like this",
    "start": "943900",
    "end": "951420"
  },
  {
    "text": "I'll just do a dry run on it to spit out what comes out so we can see the the the",
    "start": "951420",
    "end": "958150"
  },
  {
    "text": "spec for that that service instance includes the class includes the plan and",
    "start": "958150",
    "end": "963279"
  },
  {
    "text": "then includes whatever parameters are necessary for that thing and in this case the kiss of azure when you know what location to deploy it in so that's",
    "start": "963279",
    "end": "970029"
  },
  {
    "text": "kind of like which region for Amazon we need to know what group it's going to go into then provide some parameters so I",
    "start": "970029",
    "end": "976360"
  },
  {
    "text": "want to allow this to be accessed from the azure portal it's pretty important to be able to manage it later I know the",
    "start": "976360",
    "end": "982630"
  },
  {
    "text": "IP addresses that I want to UM basically the firewall rules for this thing so it's going to take a little bit of time",
    "start": "982630",
    "end": "989230"
  },
  {
    "text": "to provision but if we go to the azure portal close this on accident we should",
    "start": "989230",
    "end": "1001740"
  },
  {
    "text": "see a thing being created in the azure portal",
    "start": "1001740",
    "end": "1007820"
  },
  {
    "text": "so let's go to cosmos DB and we see one",
    "start": "1015150",
    "end": "1021250"
  },
  {
    "text": "creating right there in West Europe which is exactly where we said we wanted it so it's being provisioned now this",
    "start": "1021250",
    "end": "1027730"
  },
  {
    "text": "takes a few minutes so I'm not going to wait till it finishes go on to the next demo now so we have that cosmos to be",
    "start": "1027730",
    "end": "1034000"
  },
  {
    "text": "deploying once that's done we could then deploy any application we wanted to that would use it and the way that we would",
    "start": "1034000",
    "end": "1039939"
  },
  {
    "text": "use it obviously is through a binding so I have one already deployed because the other one takes a little bit of time and",
    "start": "1039940",
    "end": "1047020"
  },
  {
    "text": "that's in the tweets namespace so if we do SP cat get instances - n tweets it's",
    "start": "1047020",
    "end": "1057940"
  },
  {
    "text": "not deployed I accidentally deleted it",
    "start": "1057940",
    "end": "1063600"
  },
  {
    "text": "perfect oh no it's the wrong name - so we're gonna run this again this is the",
    "start": "1063600",
    "end": "1068890"
  },
  {
    "text": "command that's going to deploy the another cosmos DB plus the application so you can see the kind of dependency",
    "start": "1068890",
    "end": "1074440"
  },
  {
    "text": "between them so now if I do get instances on tweets namespace there it is it's provisioning right if we do get",
    "start": "1074440",
    "end": "1081220"
  },
  {
    "text": "bindings on that we will see the",
    "start": "1081220",
    "end": "1090490"
  },
  {
    "text": "instance isn't ready yet so yeah it can't create the binding so when you do these kind of provisions or installs",
    "start": "1090490",
    "end": "1096250"
  },
  {
    "text": "with helm um the instance is going to get created obviously that's what kubernetes does but it'll eventually be consistent with what you specified as",
    "start": "1096250",
    "end": "1102670"
  },
  {
    "text": "the state so once that instance is done Service Catalog will say now the instance is ready I can go make the",
    "start": "1102670",
    "end": "1108100"
  },
  {
    "text": "binding if we look at the pods that",
    "start": "1108100",
    "end": "1112440"
  },
  {
    "text": "container can't be created yet because it depends on a secret that's going to be generated by that binding so it",
    "start": "1113490",
    "end": "1120100"
  },
  {
    "text": "hasn't started yet so you get this nice dependency flow of things kind of falling out from doing that single helm",
    "start": "1120100",
    "end": "1125680"
  },
  {
    "text": "install if we look at the chart for this this is the look at that command",
    "start": "1125680",
    "end": "1130750"
  },
  {
    "text": "we installed tweet scraper so let's look at tweet scraper okay so in this we've",
    "start": "1130750",
    "end": "1138730"
  },
  {
    "text": "got a requirement Seattle and if you've used helm this is a super super familiar right it's got a",
    "start": "1138730",
    "end": "1145220"
  },
  {
    "text": "dependency on cosmos TV from my helm repo which is charts Museum Jeremy Richard calm with the condition database",
    "start": "1145220",
    "end": "1152120"
  },
  {
    "text": "create and when we ran this helm command this helm install we specified database create equals true so that condition is",
    "start": "1152120",
    "end": "1158120"
  },
  {
    "text": "true so we went ahead and made that cosmos instance for us if we go to the templates we've defined what the service",
    "start": "1158120",
    "end": "1166160"
  },
  {
    "text": "is we've defined what the deployment is and the binding but not the instance itself because that came from that helm",
    "start": "1166160",
    "end": "1171950"
  },
  {
    "text": "dependency right so if we look at the deployment really quick here's how we're",
    "start": "1171950",
    "end": "1179180"
  },
  {
    "text": "consuming the secret so we have the environment block inside of the the pod",
    "start": "1179180",
    "end": "1184880"
  },
  {
    "text": "spec with a couple of names host  pour user and password and within that we were referencing a",
    "start": "1184880",
    "end": "1192710"
  },
  {
    "text": "secret with the template of the full name of the chart so we don't really need to know where it is - cosmos DB secret and that's defined in",
    "start": "1192710",
    "end": "1200750"
  },
  {
    "text": "the cosmos binding so when you define the binding you can say what the secret that should be output is you have",
    "start": "1200750",
    "end": "1205940"
  },
  {
    "text": "control over all of that stuff and you can link them together really nicely with helm okay the other thing you'd get",
    "start": "1205940",
    "end": "1213170"
  },
  {
    "text": "out of that is a full working system when it's all done so that I do have",
    "start": "1213170",
    "end": "1218450"
  },
  {
    "text": "provisioned so we'll look at that namespace so in the tweety namespace we",
    "start": "1218450",
    "end": "1224660"
  },
  {
    "text": "have cosmos DB that was provisioned 19 hours ago right so it's running using coop CTL isn't the best experience again",
    "start": "1224660",
    "end": "1230480"
  },
  {
    "text": "for using service catalog so we'll use less we can't to do that again get instances and the SPK tool was kind of",
    "start": "1230480",
    "end": "1240590"
  },
  {
    "text": "built around the experience you go with Cloud Foundry it's a little bit easier a little more domain-specific than then",
    "start": "1240590",
    "end": "1245600"
  },
  {
    "text": "using just coops et al ok so that's ready so we should also have a binding in this namespace",
    "start": "1245600",
    "end": "1251470"
  },
  {
    "text": "perfect it's there it's ready to go so we can also use s we can describe that thing and then you'll see how the",
    "start": "1255020",
    "end": "1261500"
  },
  {
    "text": "mapping goes from The Binding secret to the application so we'll do describe finding and we can also show the secrets",
    "start": "1261500",
    "end": "1275750"
  },
  {
    "text": "this is a little handy thing that's in service cattle or an SP cattle so when I do that it's gonna spit out",
    "start": "1275750",
    "end": "1281090"
  },
  {
    "text": "and base64 decode that thing so it's easy for me to debug and I can see that it created a couple of things it created",
    "start": "1281090",
    "end": "1286550"
  },
  {
    "text": "a connection string in the secret a password a port and a username if we go back to that template and look at the",
    "start": "1286550",
    "end": "1292820"
  },
  {
    "text": "deployment one more time we're looking for host port username and password",
    "start": "1292820",
    "end": "1300559"
  },
  {
    "text": "so those things map out of that secret and they're just available in the application so if I run the application",
    "start": "1300559",
    "end": "1306110"
  },
  {
    "text": "it's running I can put forward to it so we can access it okay it's running doing",
    "start": "1306110",
    "end": "1316580"
  },
  {
    "text": "it and we'll just curl it so again that",
    "start": "1316580",
    "end": "1322130"
  },
  {
    "text": "application is to two containers in pod one is pointing tweets sticking them into Cosmos DB the other one is gonna be",
    "start": "1322130",
    "end": "1329090"
  },
  {
    "text": "a little web front-end to that so we run this curl command we get back Clippy and",
    "start": "1329090",
    "end": "1334220"
  },
  {
    "text": "Clippy has some random tweet from from the week if we run it again get",
    "start": "1334220",
    "end": "1339470"
  },
  {
    "text": "different cool so we have this this application deployed its using cosmos DB",
    "start": "1339470",
    "end": "1344960"
  },
  {
    "text": "the data is stuck into that thing just like you would use any other resource it's defined in a secret so that's",
    "start": "1344960",
    "end": "1350390"
  },
  {
    "text": "really cool that's all using the azure broker so let's look at what it looks like if you use a different broker so if",
    "start": "1350390",
    "end": "1357170"
  },
  {
    "text": "I look at what I have installed in my cluster right now I have a couple of",
    "start": "1357170",
    "end": "1362540"
  },
  {
    "text": "things installed so obviously at the top you can see catalog that's Service Catalog so the way you install Service Catalog by default is to use helm",
    "start": "1362540",
    "end": "1368750"
  },
  {
    "text": "there's a lot of things that make up installing Service Catalog and it just makes it easier when you use the helm package the second thing that I have",
    "start": "1368750",
    "end": "1375500"
  },
  {
    "text": "running the self-interest is oza which is the open service broker Fraser right there and then the third one that's",
    "start": "1375500",
    "end": "1381230"
  },
  {
    "text": "really important for this demo is mini broker so I said that you could write a custom broker so you pretty much",
    "start": "1381230",
    "end": "1386450"
  },
  {
    "text": "anything you want so my coworker Carolyn has written this thing called mini broker and what mini broker does is secretly install Helms",
    "start": "1386450",
    "end": "1393399"
  },
  {
    "text": "tiller for you and then use helm charts to install things on the cluster but you get to use it in the same way that you'd",
    "start": "1393399",
    "end": "1399640"
  },
  {
    "text": "use Service Catalog right so if I'm gonna use the helm chart to install MongoDB normally I'm not gonna get the",
    "start": "1399640",
    "end": "1405159"
  },
  {
    "text": "same service instance service binding things that I can depend on that I would get with Service Catalog but mini broker",
    "start": "1405159",
    "end": "1412360"
  },
  {
    "text": "does that for you so mini broker goes you you don't see that you've installed something with helm because it's it's in a separate namespace and it's not",
    "start": "1412360",
    "end": "1418179"
  },
  {
    "text": "exposed to you but it's really what's happening behind the scenes so we can provision with helm or with mini broker",
    "start": "1418179",
    "end": "1423580"
  },
  {
    "text": "really quickly because that is local so",
    "start": "1423580",
    "end": "1428649"
  },
  {
    "text": "we're gonna provision again so we're gonna use SP cat to do this instead of using a helm jar just just for quickness",
    "start": "1428649",
    "end": "1434260"
  },
  {
    "text": "so as you can allow you to do provisioning all the operations you want to do against the broker we're gonna say",
    "start": "1434260",
    "end": "1440830"
  },
  {
    "text": "that we want this thing to be called mini broker we want to use the class MongoDB and the plan three four six so I run that and I have a new",
    "start": "1440830",
    "end": "1449020"
  },
  {
    "text": "instance right so if I do SB cat get instances in the default namespace",
    "start": "1449020",
    "end": "1455140"
  },
  {
    "text": "there's my mini broker ready to go and I can then bind to it okay so now I",
    "start": "1455140",
    "end": "1465159"
  },
  {
    "text": "can do the same trick and look what the shape of the credential looks like to figure out if I can directly use it or not so let's get bindings cool there it",
    "start": "1465159",
    "end": "1475270"
  },
  {
    "text": "is mini broker this we can't describe okay so we get back a host",
    "start": "1475270",
    "end": "1490299"
  },
  {
    "text": "that's great it's the same thing that's in my other one we get back a port we got back a username and the password so",
    "start": "1490299",
    "end": "1496450"
  },
  {
    "text": "I could directly use this thing and it should be good to go however if I had been using the connection string which is a totally",
    "start": "1496450",
    "end": "1502600"
  },
  {
    "text": "logical thing to do because it's a fully built MongoDB connection string I'd be out of luck in this case because it's",
    "start": "1502600",
    "end": "1509230"
  },
  {
    "text": "called URI here in the one in the tweets directory or name space this we can't",
    "start": "1509230",
    "end": "1515140"
  },
  {
    "text": "get bindings - in Tweety and we describe that one",
    "start": "1515140",
    "end": "1521150"
  },
  {
    "text": "more time that one's called connection",
    "start": "1521150",
    "end": "1529820"
  },
  {
    "text": "string right so those don't really line up and that would be kind of problematic if I had to been depending on that in my",
    "start": "1529820",
    "end": "1535070"
  },
  {
    "text": "home chart if instead of using those four different environment variables I only injected the one this would break",
    "start": "1535070",
    "end": "1540620"
  },
  {
    "text": "for me if I try to deploy this chart or that chart so the thing you can do to work around that is a fairly new feature",
    "start": "1540620",
    "end": "1547820"
  },
  {
    "text": "that's in Service Catalog called secret transformation so let's go to MongoDB",
    "start": "1547820",
    "end": "1556430"
  },
  {
    "text": "here okay so in this one you see two",
    "start": "1556430",
    "end": "1561530"
  },
  {
    "text": "things I've defined a MongoDB instance and a binding so when I install this chart it's gonna create both the",
    "start": "1561530",
    "end": "1566540"
  },
  {
    "text": "instance and the binding but what I've done is print is added conditionals to this so that it will deploy either the",
    "start": "1566540",
    "end": "1572990"
  },
  {
    "text": "cosmos DB instance or it will deploy the MongoDB instance and then it'll be very",
    "start": "1572990",
    "end": "1580400"
  },
  {
    "text": "very nice to me and transform that secret so the interesting part of this again as a conditional right so if it's",
    "start": "1580400",
    "end": "1586400"
  },
  {
    "text": "not set to instance that local it's going to use the azure information so it's going to do as your cosmos DB",
    "start": "1586400",
    "end": "1592130"
  },
  {
    "text": "account and account as the plan name otherwise it's going to use MongoDB and",
    "start": "1592130",
    "end": "1597830"
  },
  {
    "text": "three four six so the same thing I did with SV cat and provisioned locally this",
    "start": "1597830",
    "end": "1602990"
  },
  {
    "text": "thing's gonna do for me using that conditional and then the real magic is in the binding obviously so binding so",
    "start": "1602990",
    "end": "1610370"
  },
  {
    "text": "we specify the same kind of VM law right it's got a spec inside of that we're gonna say what the secret name should be",
    "start": "1610370",
    "end": "1615880"
  },
  {
    "text": "what instance to reference so it looks exactly like the binding we created and the other one but here we're also",
    "start": "1615880",
    "end": "1621260"
  },
  {
    "text": "specifying a secret transform inside of a conditional block so if again it's instance that local we're going to use",
    "start": "1621260",
    "end": "1626870"
  },
  {
    "text": "secret transforms to change the name of URI to connection strings so when I run this thing it's going to apply that",
    "start": "1626870",
    "end": "1633020"
  },
  {
    "text": "transform before it creates the secret so the secret that I get will be shaped exactly like the other one and you can",
    "start": "1633020",
    "end": "1638810"
  },
  {
    "text": "do ads renames deletes a bunch of things inside of this to make the credential",
    "start": "1638810",
    "end": "1644750"
  },
  {
    "text": "look how you needed to look okay just quickly run that so again we're",
    "start": "1644750",
    "end": "1650990"
  },
  {
    "text": "gonna do helm install of this chart and we're gonna set instance that local to true so that's the crucial aspect of",
    "start": "1650990",
    "end": "1657590"
  },
  {
    "text": "that okay so loopy chinchilla has created and if we look in the cube demo to cool that",
    "start": "1657590",
    "end": "1670760"
  },
  {
    "text": "instance is already ready because it's local if we do this we can't get bindings n cube demo to there's the",
    "start": "1670760",
    "end": "1680179"
  },
  {
    "text": "crazy long name the secret this week at describe binding demo to but obviously",
    "start": "1680179",
    "end": "1693350"
  },
  {
    "text": "you don't see you Rin anymore because that transform when it wrote the secret took care of changing it into the shape",
    "start": "1693350",
    "end": "1699740"
  },
  {
    "text": "that I want I still have the other ones like MongoDB password and MongoDB root password which don't match so if I",
    "start": "1699740",
    "end": "1705679"
  },
  {
    "text": "wanted to use those other four I would need to transform that one as well but the really nice thing is that I was able",
    "start": "1705679",
    "end": "1710960"
  },
  {
    "text": "to install it just by specifying that I wanted to do the local instance and it",
    "start": "1710960",
    "end": "1716120"
  },
  {
    "text": "did that for me so from a developer point of view that's really great right like I can run mini cube I can install Service Catalog on mini cube which is",
    "start": "1716120",
    "end": "1721490"
  },
  {
    "text": "super easy to do and I can work with Service Catalog in the same way that I would in a production system deployed to",
    "start": "1721490",
    "end": "1727580"
  },
  {
    "text": "some club you know either by my on-prem kubernetes instance or something to have",
    "start": "1727580",
    "end": "1733039"
  },
  {
    "text": "run in an Amazon or Google or asher and in both cases I can use cloud resources so when I use mini cube locally and I'm",
    "start": "1733039",
    "end": "1740330"
  },
  {
    "text": "Hjelm installing my application I could totally use a cloud resource right like if I've got great bandwidth and I don't",
    "start": "1740330",
    "end": "1747080"
  },
  {
    "text": "care about the latency I can totally deploy my application locally to mini cube using service catalog or I can use",
    "start": "1747080",
    "end": "1752120"
  },
  {
    "text": "this this mini broker which is going to give me the same experience but in the local much more responsive but not",
    "start": "1752120",
    "end": "1758360"
  },
  {
    "text": "necessarily as highly available matter alright",
    "start": "1758360",
    "end": "1763990"
  },
  {
    "text": "so that is all the examples that I had so I'll turn over to questions now but",
    "start": "1763990",
    "end": "1769720"
  },
  {
    "text": "first I wanted to mention if I can find the paper there are a couple more service catalog related talks today at 4",
    "start": "1769720",
    "end": "1776800"
  },
  {
    "text": "o'clock or no sorry at 1400 the six service catalog deep dive is happening so if you want to learn more about",
    "start": "1776800",
    "end": "1782020"
  },
  {
    "text": "service catalog it's a great place to go you can ask questions to find out what's up and then tomorrow at 11 Scott from",
    "start": "1782020",
    "end": "1789220"
  },
  {
    "text": "Google is gonna do a talk on OSP API and how you can connect that to home",
    "start": "1789220",
    "end": "1794560"
  },
  {
    "text": "automation devices it sounds pretty cool okay so now I'll open up to questions if anybody has any I'll repeat them so that",
    "start": "1794560",
    "end": "1800770"
  },
  {
    "text": "we can get them the recording but go ahead so when you create oh yeah sorry",
    "start": "1800770",
    "end": "1813940"
  },
  {
    "text": "the question was do I have examples of using bindings that might require TLS starts and I don't you have a good",
    "start": "1813940",
    "end": "1824500"
  },
  {
    "text": "example yeah it's supportive to you and you don't even need examples yeah so supported totally when you create the secret or when you create the binding",
    "start": "1824500",
    "end": "1830230"
  },
  {
    "text": "it's totally supported but I don't think we have any like helm examples to show how to do that if you check the docs though it you can find a good example of",
    "start": "1830230",
    "end": "1837430"
  },
  {
    "text": "how to do that yeah you yeah so um one",
    "start": "1837430",
    "end": "1846550"
  },
  {
    "text": "nice thing is that you can define perfectly for provisioning you can you can specify schemas and that works",
    "start": "1846550",
    "end": "1852220"
  },
  {
    "text": "pretty well there isn't something because the the brokers don't have that specified credential you don't",
    "start": "1852220",
    "end": "1859030"
  },
  {
    "text": "necessarily have like a defined way of knowing the head of time what they are you kind of have to look at the broker documentation yeah the schemas could",
    "start": "1859030",
    "end": "1866710"
  },
  {
    "text": "show you that we didn't get to it in Ralf squad she's demo yesterday when he was showing the Visual Studio code stuff",
    "start": "1866710",
    "end": "1871870"
  },
  {
    "text": "but one of the things we've just added to Visual Studio code is the ability to do this kind of stuff directly from",
    "start": "1871870",
    "end": "1877090"
  },
  {
    "text": "Visual Studio code and one of the nice things it does is iterate over the sacred that gets created sticks that",
    "start": "1877090",
    "end": "1882700"
  },
  {
    "text": "into a helmet chart for you using a for loop basically and then it also generates a block that you can stick",
    "start": "1882700",
    "end": "1888970"
  },
  {
    "text": "into your code that'll name all the environment variables out so there are ways you could kind of then kind of make that a little bit better of an",
    "start": "1888970",
    "end": "1894490"
  },
  {
    "text": "experience but it's not finding the the spec so there's no like you know codified way that that you can do that",
    "start": "1894490",
    "end": "1901759"
  },
  {
    "text": "yes so you connect to when you register that the broker with the cluster it's question was how do you know what Clow",
    "start": "1911150",
    "end": "1916680"
  },
  {
    "text": "what services are available on the cluster you can use coop scale to do",
    "start": "1916680",
    "end": "1922230"
  },
  {
    "text": "that you can also use SP cows so I'll just do a speak out really quick what",
    "start": "1922230",
    "end": "1927390"
  },
  {
    "text": "you do for that is get classes and in this case I have a bunch of things installed obviously a lot of things from",
    "start": "1927390",
    "end": "1933240"
  },
  {
    "text": "the Azure broker but also the things that come from the helm from mini broker so the helm shirt from Rio DB and how much are for those sort of things",
    "start": "1933240",
    "end": "1939990"
  },
  {
    "text": "you can do the same thing for plans if you want to see what plans are available if you use Cloud Foundry this is pretty",
    "start": "1939990",
    "end": "1945930"
  },
  {
    "text": "similar to the CF marketplace but not in quite as a nice format so like as an example from the mini broker we have",
    "start": "1945930",
    "end": "1952080"
  },
  {
    "text": "Redis 4.8 so then you know what those names are so when you make your helm",
    "start": "1952080",
    "end": "1957720"
  },
  {
    "text": "chart or if you want to do the provision operation you use those external names those kind of friendly names too to",
    "start": "1957720",
    "end": "1963210"
  },
  {
    "text": "deploy the thing that's how you'd know what's available in the cluster and it's totally based on the broker right like the these things are all created when",
    "start": "1963210",
    "end": "1969780"
  },
  {
    "text": "that broker gets registered there's an API endpoint in OSB called V to get catalog and that's going to return a big",
    "start": "1969780",
    "end": "1976830"
  },
  {
    "text": "JSON object that describes everything that brokers gonna do and those get turned into those those resources in the cluster that's one of the use cases for",
    "start": "1976830",
    "end": "1989820"
  },
  {
    "text": "it right like there was an article in Forbes I think a couple days ago totally weird look article in Forbes and the",
    "start": "1989820",
    "end": "1996300"
  },
  {
    "text": "title of the article was kubernetes plus open service broker API is the key to cross cloud so there is absolutely",
    "start": "1996300",
    "end": "2002150"
  },
  {
    "text": "nothing that would prohibit me from installing the AWS broker and provision things enable us so I'm running in a",
    "start": "2002150",
    "end": "2008780"
  },
  {
    "text": "chaos which is after his managed thing I could totally install that broker in nazzer and it would connect and make things in",
    "start": "2008780",
    "end": "2015200"
  },
  {
    "text": "Asscher so it's it's totally a gateway into that multi-cloud the question was does can you use this to do multi cloud",
    "start": "2015200",
    "end": "2022400"
  },
  {
    "text": "and the answer is yes quite",
    "start": "2022400",
    "end": "2030280"
  },
  {
    "text": "yeah yeah so it's kind of up to the broker when you think yeah the question",
    "start": "2036120",
    "end": "2042900"
  },
  {
    "text": "was how does it handle authentication there's two pieces of that question one is how do you handle authentication between service catalog and the broker",
    "start": "2042900",
    "end": "2049589"
  },
  {
    "text": "itself and then how do you handle authentication between broker and and the thing that you're going to provision to so given the spec doesn't specify",
    "start": "2049589",
    "end": "2055589"
  },
  {
    "text": "really how that's going to happen it's kind of a broker implementation detail so for the Azure broker right now it's",
    "start": "2055589",
    "end": "2062220"
  },
  {
    "text": "single tenant so you can't provide multiple credentials the Google brokers host it so it works differently when you",
    "start": "2062220",
    "end": "2068760"
  },
  {
    "text": "provision via Service Catalog one of the things you can send is originating identity as a header so that that can",
    "start": "2068760",
    "end": "2074580"
  },
  {
    "text": "know like from kubernetes this person is doing this and you can do authentication authorization against that the",
    "start": "2074580",
    "end": "2079888"
  },
  {
    "text": "connection between Service Catalog and the broker itself is pre it's a pre agreed authentication so either of some",
    "start": "2079889",
    "end": "2085260"
  },
  {
    "text": "sort of token or username password basic off for the Azure instance a sure for example when you install OS ba you have",
    "start": "2085260",
    "end": "2092190"
  },
  {
    "text": "to specify what what credentials you're going to use so we're not doing down to the user to say like the this user can",
    "start": "2092190",
    "end": "2098940"
  },
  {
    "text": "do that but it's a broker implementation detail it back first then we'll give you",
    "start": "2098940",
    "end": "2107420"
  },
  {
    "text": "so if you have the case where you already have that information it's not really a great fit right the the area",
    "start": "2127060",
    "end": "2134300"
  },
  {
    "text": "that it really shines is when you need to go do that provision operation when you need to go create something probably outside of the context of the cluster",
    "start": "2134300",
    "end": "2140900"
  },
  {
    "text": "Cerreta has a broker called the automation broker and the way that it works is you define ansible playbooks that really fulfilled that provision",
    "start": "2140900",
    "end": "2148100"
  },
  {
    "text": "buying the provision workflow right but those ansible playbooks could do anything you wanted to do it could spin",
    "start": "2148100",
    "end": "2153890"
  },
  {
    "text": "up lots of vm's it could do you know essentially anything that's where the service catalog really shines like if",
    "start": "2153890",
    "end": "2159770"
  },
  {
    "text": "you already have that information there's something called the user provided service broker where you could stick that information in and just",
    "start": "2159770",
    "end": "2166130"
  },
  {
    "text": "consume it and that kind of workflow but I think the the real use case for it is when you're trying to connect to that that extra set of infrastructure that",
    "start": "2166130",
    "end": "2173450"
  },
  {
    "text": "doesn't necessarily tie into kubernetes natively and isn't simple to consume like as an example my old team sitting",
    "start": "2173450",
    "end": "2180770"
  },
  {
    "text": "over here there's in Postgres right and then they're using Postgres and amazon and to build that we had to build",
    "start": "2180770",
    "end": "2185810"
  },
  {
    "text": "terraform to go deploy this RDS instance and then we had to take the credentials from that and stick them in service",
    "start": "2185810",
    "end": "2191869"
  },
  {
    "text": "catalog really gives you that automation and solves that problem for you",
    "start": "2191869",
    "end": "2197320"
  },
  {
    "text": "yes that's not really defined in the spec right now the way that you probably handle that is with the user provided",
    "start": "2203800",
    "end": "2209480"
  },
  {
    "text": "service where you're going to register the credentials for that thing and then service catalog return them so you can",
    "start": "2209480",
    "end": "2214970"
  },
  {
    "text": "use them in the same same way there is some talk both in the OSB group kind of",
    "start": "2214970",
    "end": "2220940"
  },
  {
    "text": "a side group about allowing you to do two things one would be like registering those external services that you can",
    "start": "2220940",
    "end": "2226520"
  },
  {
    "text": "still manage like the interesting thing for me with like with our Postgres instance our implementation is that we",
    "start": "2226520",
    "end": "2232220"
  },
  {
    "text": "do go ahead and like every time you do a bind we're creating a new database user for you so you can track those things",
    "start": "2232220",
    "end": "2237260"
  },
  {
    "text": "and rotate the keys if you're just registering an existing credential you don't really get that the other thing is",
    "start": "2237260",
    "end": "2243020"
  },
  {
    "text": "we're allowing we're talking about allowing you to create like additional databases on an existing database server",
    "start": "2243020",
    "end": "2249560"
  },
  {
    "text": "so you may have some beefy database server you want to create a lot of databases on there's nothing in the spec right now that allows you to do that",
    "start": "2249560",
    "end": "2255830"
  },
  {
    "text": "kind of parent-child provisioning there are some people that are implementing it themselves like we did that for Postgres",
    "start": "2255830",
    "end": "2262190"
  },
  {
    "text": "and for a bunch of other services like you can say provision me both the database and the DBMS or just provide me",
    "start": "2262190",
    "end": "2268340"
  },
  {
    "text": "the DBMS and then later I'll come in and make multiple databases on it again it's",
    "start": "2268340",
    "end": "2273440"
  },
  {
    "text": "a broker implementation right now because the spec is fairly tight coming from Cloud Foundry it had a very",
    "start": "2273440",
    "end": "2279170"
  },
  {
    "text": "specific use case but it's been involved now and that's one of the use cases that's being considered",
    "start": "2279170",
    "end": "2284560"
  },
  {
    "text": "yeah so the question was just a still lock you to another cloud provider in",
    "start": "2292430",
    "end": "2297450"
  },
  {
    "text": "terms of performance and those kind of characteristics and that's true like you going from Azure to Google",
    "start": "2297450",
    "end": "2303330"
  },
  {
    "text": "you're gonna hit some performance flag right because you're gonna go outside of Azure in to Google if you're running",
    "start": "2303330",
    "end": "2308430"
  },
  {
    "text": "within the same region it's it's debatable like I think that's a general",
    "start": "2308430",
    "end": "2313470"
  },
  {
    "text": "cross cloud question right like you I'm gonna run clusters in different",
    "start": "2313470",
    "end": "2319400"
  },
  {
    "text": "firewall rules come into play like what kind of traffic they're gonna do it doesn't solve those that's another thing",
    "start": "2325490",
    "end": "2330720"
  },
  {
    "text": "that people are talking about like how do we enable you know this thing to route to that other service the spec",
    "start": "2330720",
    "end": "2337050"
  },
  {
    "text": "doesn't provide that right now so it's it's not a really answer question but it's definitely something people are",
    "start": "2337050",
    "end": "2342420"
  },
  {
    "text": "thinking about so what does it take what",
    "start": "2342420",
    "end": "2366510"
  },
  {
    "text": "does it take to write a broker that's your question so the broker API right now is very simple you implement",
    "start": "2366510",
    "end": "2374790"
  },
  {
    "text": "provision you implement update you implement deep revision and you don't implement unbind like those those",
    "start": "2374790",
    "end": "2380730"
  },
  {
    "text": "operations really plus you get the catalog there are starter packs for a couple of languages so pivotal provides",
    "start": "2380730",
    "end": "2386940"
  },
  {
    "text": "one that's based off of spring boot it's pretty simple it gives you the API surface so you don't have to worry about",
    "start": "2386940",
    "end": "2392370"
  },
  {
    "text": "informing on it yourself there's also one for go so there's a starter pack and a starter broker lib you can use either",
    "start": "2392370",
    "end": "2399180"
  },
  {
    "text": "one of those things kind of depending on how much you need to implement yourself they give you the same thing the API surface and they usually need to plug in",
    "start": "2399180",
    "end": "2406290"
  },
  {
    "text": "the business logic for whatever you're going to do the other thing you can do is use the Red Hat danceable broker if",
    "start": "2406290",
    "end": "2411330"
  },
  {
    "text": "you're comfortable writing ansible scripts or I until playbooks to go do that stuff it's a great opportunity to",
    "start": "2411330",
    "end": "2416370"
  },
  {
    "text": "because the broker runs you just provide APB's to it and it can",
    "start": "2416370",
    "end": "2422690"
  },
  {
    "text": "do anything right yeah yeah sure like",
    "start": "2422690",
    "end": "2427940"
  },
  {
    "text": "that still comes down to your your logic so I think we're out of time clothes time I don't know",
    "start": "2427940",
    "end": "2437140"
  },
  {
    "text": "yeah till 35 or out of time now so thanks everybody for coming the still here it was great telling you about serfs",
    "start": "2437140",
    "end": "2443930"
  },
  {
    "text": "catalog and the questions are great so I will be in the hallway for a little while and also be at the azure booth the",
    "start": "2443930",
    "end": "2449750"
  },
  {
    "text": "rest of today all day tomorrow so if you want to talk more about Service Catalog feel free to come on",
    "start": "2449750",
    "end": "2456880"
  }
]