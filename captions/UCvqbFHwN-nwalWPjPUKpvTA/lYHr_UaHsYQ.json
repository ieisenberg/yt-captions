[
  {
    "start": "0",
    "end": "233000"
  },
  {
    "text": "all right we made it last of the day my show hands can you please tell me who",
    "start": "170",
    "end": "7379"
  },
  {
    "text": "uses kubernetes in production on a multi-tenant model go who needs some",
    "start": "7379",
    "end": "15269"
  },
  {
    "text": "sort of automated provisioning workflow for new namespaces for application teams cool and out of you who uses OPA all",
    "start": "15269",
    "end": "25199"
  },
  {
    "text": "right you raise your hand you didn't this talk is for everybody from discriminate when",
    "start": "25199",
    "end": "30330"
  },
  {
    "text": "it means me get this category this is my colleague Tim Hendricks and we're here to talk about policy enforcement using",
    "start": "30330",
    "end": "35640"
  },
  {
    "text": "OPA and police u.s. code at common Sachs so a little bit about me I'm a technology associate on the UNIX",
    "start": "35640",
    "end": "42540"
  },
  {
    "text": "engineering team we provision the computer infrastructure for the company",
    "start": "42540",
    "end": "47610"
  },
  {
    "text": "and that means burn metals VMs and now in our days containers through",
    "start": "47610",
    "end": "52949"
  },
  {
    "text": "kubernetes so where the equipment is platform providers for Thomas axe and my",
    "start": "52949",
    "end": "57960"
  },
  {
    "text": "name is Tim Hendricks the CTO at styro and one of the co-creators of OPA it's a",
    "start": "57960",
    "end": "66000"
  },
  {
    "text": "little bit of what we are going to talk about today well it's why are we having this talk then we'll see how the Q&A",
    "start": "66000",
    "end": "72720"
  },
  {
    "text": "policy at Goldman Sachs will then look at how we're using OPA to solve this will step into the in through the",
    "start": "72720",
    "end": "78869"
  },
  {
    "text": "architecture some of the future work lessons learned and then we'll open up for questions so we're we have in this",
    "start": "78869",
    "end": "86310"
  },
  {
    "text": "talk to answer this question we first need to look at how Gorman Sachs is currently running q Benares",
    "start": "86310",
    "end": "92100"
  },
  {
    "text": "so a little bit little statistics we're currently running 12 total share",
    "start": "92100",
    "end": "97110"
  },
  {
    "text": "clusters as I said before we use multi-tenancy in which we isolate our",
    "start": "97110",
    "end": "102200"
  },
  {
    "text": "users by namespace a government namespace half meanings we can basically",
    "start": "102200",
    "end": "108210"
  },
  {
    "text": "tie a namespace name to any inventory system at Goldman Sachs we also call",
    "start": "108210",
    "end": "113280"
  },
  {
    "text": "them deployments I know it conflicts a little bit with a given se ponen but we",
    "start": "113280",
    "end": "118829"
  },
  {
    "text": "currently run on VMs we have an average of 159 spaces per cluster and just like",
    "start": "118829",
    "end": "125070"
  },
  {
    "text": "everybody else we run common software like prometheus graph an i7 rule core DNS or PI etcetera",
    "start": "125070",
    "end": "130950"
  },
  {
    "text": "so not too deep ago man we love inventory systems everybody runs around an example",
    "start": "130950",
    "end": "138599"
  },
  {
    "text": "of this would be a group Rose inventory basically who has admin access or view",
    "start": "138599",
    "end": "144150"
  },
  {
    "text": "access on certain namespaces compute capacity inventories what names what",
    "start": "144150",
    "end": "149730"
  },
  {
    "text": "people can request for the application names namespaces in terms of course and memory and then we have a production",
    "start": "149730",
    "end": "156569"
  },
  {
    "text": "access control namespaces production access control inventories storage inventories etc so a little bit some",
    "start": "156569",
    "end": "167219"
  },
  {
    "text": "examples of how government needs policy for their Kira Nerys environment we have our back we need to know who will get",
    "start": "167219",
    "end": "174449"
  },
  {
    "text": "admin and viewer access on each of our namespace obviously not everybody can have unlimited access across the entire",
    "start": "174449",
    "end": "181199"
  },
  {
    "text": "Cavanaugh's cluster right so we need to limit this based on some inventory data we have we obviously don't want to give",
    "start": "181199",
    "end": "188099"
  },
  {
    "text": "unlimited resources to everybody in our cluster so we need to manage these through resource folders storage even",
    "start": "188099",
    "end": "194819"
  },
  {
    "text": "though we use a safe and route some people need to manifest shares onto their application so who can mount these",
    "start": "194819",
    "end": "201000"
  },
  {
    "text": "NFS shares on the containers we need we need to manage it on upper namespace races finally another example would be",
    "start": "201000",
    "end": "207540"
  },
  {
    "text": "ingresses we definitely had situations in the past where application teams define ingresses with same host names in",
    "start": "207540",
    "end": "216509"
  },
  {
    "text": "the same cluster and this happened to break and the nginx ingress controller for everybody which means the cluster",
    "start": "216509",
    "end": "222000"
  },
  {
    "text": "was basically down obviously we didn't want this to happen again so we need to",
    "start": "222000",
    "end": "227069"
  },
  {
    "text": "do some validation every time somebody wants to create or update an ingress to do prevent the situation from happening",
    "start": "227069",
    "end": "233750"
  },
  {
    "text": "yeah so the media talk is gonna be focused on how we implement those policies how helped me go set this up at",
    "start": "233750",
    "end": "241590"
  },
  {
    "text": "Goldman and so really we're gonna be seeing two different ways of implementing those some of those policies that you saw in the last slide",
    "start": "241590",
    "end": "248120"
  },
  {
    "text": "the first is well-known and in both we're gonna be using open",
    "start": "248120",
    "end": "253220"
  },
  {
    "text": "and in the admission control case the first kind of implementation people have heard about this for quite a while the",
    "start": "253220",
    "end": "260299"
  },
  {
    "text": "way that this works is really the same way that you've heard before I would imagine where the kubernetes api server",
    "start": "260299",
    "end": "267050"
  },
  {
    "text": "on every request it receives has a pipeline that it sends that request through starting with authentication",
    "start": "267050",
    "end": "272780"
  },
  {
    "text": "moving on to authorization and then finally to admission control and so what we're gonna do is that that that",
    "start": "272780",
    "end": "278810"
  },
  {
    "text": "admission control step we're going to go ahead and enforce those policies that ensure that there are no conflicting",
    "start": "278810",
    "end": "284180"
  },
  {
    "text": "ingress is on the cluster all right so that's gonna be one kind of enforcement and we'll we'll talk a little bit about",
    "start": "284180",
    "end": "289699"
  },
  {
    "text": "that but because we've talked about it so many times and you've heard about it so many times we're gonna focus more so",
    "start": "289699",
    "end": "295789"
  },
  {
    "text": "on the second kind of policy implementation and we call we're calling this provisioning today so the idea here",
    "start": "295789",
    "end": "301010"
  },
  {
    "text": "is that each and every time somebody let's say creates a new namespace on the",
    "start": "301010",
    "end": "306229"
  },
  {
    "text": "cluster there are a number of resources that need to be provisioned they need to be created and so here what we'll see is",
    "start": "306229",
    "end": "313370"
  },
  {
    "text": "that we're gonna be creating rules and role bindings will be creating volumes",
    "start": "313370",
    "end": "320030"
  },
  {
    "text": "and quotas as well and to drive this point home you can't solve the provisioning problem with admission",
    "start": "320030",
    "end": "326570"
  },
  {
    "text": "control and the reason for that is admission control is designed to allow you to either accept or reject a",
    "start": "326570",
    "end": "331820"
  },
  {
    "text": "resource or maybe at the most you can mutate that resource that comes into the cluster what admission control does not",
    "start": "331820",
    "end": "338570"
  },
  {
    "text": "allow you to do is to create new resources in response to the creation of other resources that's just not what",
    "start": "338570",
    "end": "344240"
  },
  {
    "text": "admission control is for so that's why provisioning is what we're going to focus on today first I'll give a little",
    "start": "344240",
    "end": "352190"
  },
  {
    "start": "350000",
    "end": "490000"
  },
  {
    "text": "bit of explanation around how we Miguel is using open to do admission control",
    "start": "352190",
    "end": "358639"
  },
  {
    "text": "and enforce that ingress policy as I mentioned a moment ago within kubernetes each and every request goes through that",
    "start": "358639",
    "end": "364940"
  },
  {
    "text": "that three stage pipeline of authentication who are you authorization do you have the arbok permission to do",
    "start": "364940",
    "end": "370760"
  },
  {
    "text": "this at all and finally admission control and enduring admission control the interesting thing is that the the",
    "start": "370760",
    "end": "378889"
  },
  {
    "text": "the admission controller has access to the entire gamal manifest the entire 50",
    "start": "378889",
    "end": "384590"
  },
  {
    "text": "or lines of the amel that the user has put in place to describe the ingress of the",
    "start": "384590",
    "end": "390350"
  },
  {
    "text": "pod or the or the network policy or whatever and so at that point admission control allows us to to hook open in and",
    "start": "390350",
    "end": "397130"
  },
  {
    "text": "write rich policies that say things like ensure that whatever hostname is being",
    "start": "397130",
    "end": "402530"
  },
  {
    "text": "used in this new ingress that the users trying to create isn't the same and doesn't overlap with any of the other",
    "start": "402530",
    "end": "408050"
  },
  {
    "text": "ingress --is that are already on the cluster and so as an example what we've",
    "start": "408050",
    "end": "414860"
  },
  {
    "text": "actually shown here is the OPA policy that would that you would write in order",
    "start": "414860",
    "end": "420110"
  },
  {
    "text": "to enforce that the enforce that only that there no conflicting ingress is and so I won't go into all the details but I",
    "start": "420110",
    "end": "426860"
  },
  {
    "text": "will sort of talk through it here briefly the idea is that you're going to be writing a bunch of deny statements",
    "start": "426860",
    "end": "432560"
  },
  {
    "text": "that's the the typical pattern that we see and so what you're going to do here is we're going to deny an incoming a new",
    "start": "432560",
    "end": "438290"
  },
  {
    "text": "ingress well we're going to first check that it's an ingress and then what we're going to do is we're going to iterate",
    "start": "438290",
    "end": "443510"
  },
  {
    "text": "over all of the new hosts all of the hosts that show up in that new ingress that perhaps someone's trying to create",
    "start": "443510",
    "end": "449590"
  },
  {
    "text": "we're also going to simultaneously go out and grab all of the hosts that",
    "start": "449590",
    "end": "455330"
  },
  {
    "text": "already exist in the cluster for ingress is that's what the next line is doing and then we're gonna check if the old",
    "start": "455330",
    "end": "460550"
  },
  {
    "text": "host in the new host are the same here I'm playing a little fast and loose with what the same means you could make this",
    "start": "460550",
    "end": "466160"
  },
  {
    "text": "more sophisticated if you wanted but for the sake of a of a slide this is a good enough check and then the last line",
    "start": "466160",
    "end": "471830"
  },
  {
    "text": "there is just constructing an error message that will return to the user so the right way to interpret this statement is that if all of those",
    "start": "471830",
    "end": "478130"
  },
  {
    "text": "conditions hold then in fact the request for a new ingress will be rejected and the error message that's returned to the",
    "start": "478130",
    "end": "484670"
  },
  {
    "text": "user is the one that we're constructing here so host conflicts with the ingress that we found so let's take a step back",
    "start": "484670",
    "end": "492530"
  },
  {
    "start": "490000",
    "end": "773000"
  },
  {
    "text": "and and do a very quick intro to open and what I'm gonna do here is really highlight the features of OPA that are",
    "start": "492530",
    "end": "499250"
  },
  {
    "text": "going to be important for the rest of the talk so OPA is a general purpose policy engine which means that you can",
    "start": "499250",
    "end": "505160"
  },
  {
    "text": "use it for a wide array of use cases here we're all obviously talking about kubernetes but here even within this",
    "start": "505160",
    "end": "510770"
  },
  {
    "text": "talk we're talking about two different use cases two different kinds of policy implementations one with an",
    "start": "510770",
    "end": "517020"
  },
  {
    "text": "in control and one within within provisioning but generally the way it works is that you've got a service any",
    "start": "517020",
    "end": "523169"
  },
  {
    "text": "service it could be be the admission control or it could be a micro service it could be really anything that you like and that service decides that it",
    "start": "523170",
    "end": "529620"
  },
  {
    "text": "needs a policy decision so what it does is it cobbles together all of the information that it has that it needs a",
    "start": "529620",
    "end": "535080"
  },
  {
    "text": "decision about encodes it as JSON and hands it over to Opa Opa returns a decision the service is then responsible",
    "start": "535080",
    "end": "542430"
  },
  {
    "text": "for enforcing that decision Hopa makes a decision the service enforces it one of",
    "start": "542430",
    "end": "548790"
  },
  {
    "text": "the important things that you'll see later today is that OPA when it receives",
    "start": "548790",
    "end": "553830"
  },
  {
    "text": "the input that JSON object it doesn't really understand the semantics of that object it doesn't know anything about",
    "start": "553830",
    "end": "560490"
  },
  {
    "text": "kubernetes pods or ingress is not natively but is a policy author when I'm",
    "start": "560490",
    "end": "566310"
  },
  {
    "text": "writing my policies I know what that JSON object represents I know that it represents a pod and I know that a pod",
    "start": "566310",
    "end": "572490"
  },
  {
    "text": "has containers and images within it I know that an ingress has hosts and so I can write the policy much like I showed",
    "start": "572490",
    "end": "577920"
  },
  {
    "text": "you on the last slide that makes the correct decision for whatever input comes in so I is a policy author",
    "start": "577920",
    "end": "583740"
  },
  {
    "text": "understand the semantics of the input but jate but OPA does not and we'll see this used a little bit later because",
    "start": "583740",
    "end": "590190"
  },
  {
    "text": "after all we're using open to do admission control where the input is an admission review object but we're also",
    "start": "590190",
    "end": "595620"
  },
  {
    "text": "using it as we'll see later to provision resources which is a different kind of",
    "start": "595620",
    "end": "601710"
  },
  {
    "text": "input the second thing that I'll call out here is that OPA allows you when",
    "start": "601710",
    "end": "607680"
  },
  {
    "text": "you're making a decision to return not just allows and deny it's not just true/false it's not just authorization",
    "start": "607680",
    "end": "612960"
  },
  {
    "text": "it allows you to return technically any JSON object you can use that JSON object",
    "start": "612960",
    "end": "618090"
  },
  {
    "text": "to represent anything you like you could use it to return true false meaning allow deny you could return a string",
    "start": "618090",
    "end": "624140"
  },
  {
    "text": "representing a host name a number representing maybe at a rate limit you can return an array of the clusters to",
    "start": "624140",
    "end": "629610"
  },
  {
    "text": "what you want to deploy an application you could return an entirely deeply nested JSON object it represents an",
    "start": "629610",
    "end": "635070"
  },
  {
    "text": "admission review response you could as we'll see later today return an actual",
    "start": "635070",
    "end": "640470"
  },
  {
    "text": "kubernetes resource description in JSON that should be provisioned on the cluster and so we'll see how that works",
    "start": "640470",
    "end": "647490"
  },
  {
    "text": "a little later the other thing I'll call out here is it we'll also allows you to inject external",
    "start": "647490",
    "end": "652950"
  },
  {
    "text": "data in order to make policy decisions you heard Miguel talk about the inventory management systems that",
    "start": "652950",
    "end": "658830"
  },
  {
    "text": "Goldman uses and this is really important and what we'll see happen is that those in the data from those inventory management systems is going to",
    "start": "658830",
    "end": "665220"
  },
  {
    "text": "be injected into OPA in order to compute the resources that need to be provisioned in any new namespace so",
    "start": "665220",
    "end": "672330"
  },
  {
    "text": "that's going to be really crucial and what that allows us to do is have those separate teams that are responsible for",
    "start": "672330",
    "end": "677490"
  },
  {
    "text": "the group the group inventory system and the volume in the storage inventory",
    "start": "677490",
    "end": "682980"
  },
  {
    "text": "system and the capacity inventory system to still control what the what the",
    "start": "682980",
    "end": "688440"
  },
  {
    "text": "storage and the capacity and the the arbok rules end up being even though they have no control over kubernetes",
    "start": "688440",
    "end": "694650"
  },
  {
    "text": "itself and so this is a way of helping the organization collaboratively define the policies that in the end get",
    "start": "694650",
    "end": "700560"
  },
  {
    "text": "enforced through the mechanisms that we'll be talking about the other thing I'll mention here about OPA is that",
    "start": "700560",
    "end": "706650"
  },
  {
    "text": "architectural II it is it is an in-memory policy engine it was designed to run at the edge it was designed to",
    "start": "706650",
    "end": "712170"
  },
  {
    "text": "run next to whatever software system needs decisions it is lightweight and does not persist policy and what that",
    "start": "712170",
    "end": "718110"
  },
  {
    "text": "means is that you will need a way of a source of truth for your policy get as a",
    "start": "718110",
    "end": "723720"
  },
  {
    "text": "is a common one will again see that later but what you also need is a way to distribute policy from that source of",
    "start": "723720",
    "end": "729630"
  },
  {
    "text": "truth down to the OPA so that the open knows exactly what the policy is and so that's pretty important there are a",
    "start": "729630",
    "end": "735900"
  },
  {
    "text": "number of ways of doing that there is a push API that you can use and just push it right into OPA or you can configure",
    "start": "735900",
    "end": "741330"
  },
  {
    "text": "open to pull that policy and actually external data as well through something",
    "start": "741330",
    "end": "746670"
  },
  {
    "text": "we like to call the bundle API also along with management OPA does allow you to log all the decisions it makes it's",
    "start": "746670",
    "end": "753270"
  },
  {
    "text": "got a bunch of tooling it embodies policies code which means it's got a profiler a unit test framework built in",
    "start": "753270",
    "end": "759780"
  },
  {
    "text": "there there are integrations with vs code for example there's a there's an",
    "start": "759780",
    "end": "766110"
  },
  {
    "text": "open play ground that you can use and check out so policies code all the way",
    "start": "766110",
    "end": "773120"
  },
  {
    "text": "here's an example just to drive this home again showing you the sort of functional inputs and outputs that OPA",
    "start": "773120",
    "end": "779280"
  },
  {
    "text": "provides here on the top we have our policy the policy that I talked through a moment ago that is one of the inputs that you hand",
    "start": "779280",
    "end": "785420"
  },
  {
    "text": "to two oppa there's also the in this case the in the admission control case",
    "start": "785420",
    "end": "791030"
  },
  {
    "text": "there would be an admission review input that gets handed to opus well that's literally called input in the open",
    "start": "791030",
    "end": "798320"
  },
  {
    "text": "language there's external data in this ingress admission control example that",
    "start": "798320",
    "end": "803540"
  },
  {
    "text": "would be all of the existing ingress --is that already exist on the cluster we'll see later how we can use the",
    "start": "803540",
    "end": "808940"
  },
  {
    "text": "inventory management systems as well those three things input policy and data are all the are all the the information",
    "start": "808940",
    "end": "815300"
  },
  {
    "text": "that's fed into open and open makes a decision decision it produces an output in this admission control ingress",
    "start": "815300",
    "end": "820490"
  },
  {
    "text": "example we're returning the list of of error messages that open eventually gets",
    "start": "820490",
    "end": "825650"
  },
  {
    "text": "returned to the to the end user and just to drive this point home remember to",
    "start": "825650",
    "end": "832130"
  },
  {
    "start": "829000",
    "end": "880000"
  },
  {
    "text": "uplevel this again in this setting of oppa oppa is a building block that can be used for many different things we've",
    "start": "832130",
    "end": "838160"
  },
  {
    "text": "already shown how you can use it to solve the admission control problem to eliminate to implement the ingress policy that the Goldmann uses but that's",
    "start": "838160",
    "end": "845930"
  },
  {
    "text": "not enough it's not enough for the other three classes of policies that Miguel talked about the arbok policies the",
    "start": "845930",
    "end": "852110"
  },
  {
    "text": "volumes of quotas those all are new resources that need to be provisioned into the namespace whenever that",
    "start": "852110",
    "end": "857510"
  },
  {
    "text": "namespace is created that is not something that Mission Control can do in Michigan troll allows you to accept or",
    "start": "857510",
    "end": "863270"
  },
  {
    "text": "reject the resource or maybe even mutate it it does not allow you to create new resources anytime in response to a",
    "start": "863270",
    "end": "871550"
  },
  {
    "text": "resource like a namespace being created so these are definitely different problems and that is what we'll focus on",
    "start": "871550",
    "end": "877940"
  },
  {
    "text": "for the rest of the talk all right back when we started our Cuban",
    "start": "877940",
    "end": "886000"
  },
  {
    "start": "880000",
    "end": "1004000"
  },
  {
    "text": "s journey around three years ago we had the same problem that we have today how we provision resources for every new",
    "start": "886000",
    "end": "891639"
  },
  {
    "text": "namespace that is on the cluster so this was our initial approach we create our own little component",
    "start": "891639",
    "end": "897009"
  },
  {
    "text": "sadly called controller manager like the kubernetes controller manager that basically what he what he was doing in",
    "start": "897009",
    "end": "903790"
  },
  {
    "text": "the past was getting all the information from all this inventory systems beatrice api getting a bunch of a cuban areas",
    "start": "903790",
    "end": "911680"
  },
  {
    "text": "cluster information using sharing formers and having all the policy definer",
    "start": "911680",
    "end": "916750"
  },
  {
    "text": "in code in go code then it was making then what he was doing is continuously running this put this in code defined",
    "start": "916750",
    "end": "924819"
  },
  {
    "text": "policies and applying it to through basic cuban as a standard API libraries",
    "start": "924819",
    "end": "931180"
  },
  {
    "text": "now this approach happened to be very inflexible why the rules were in unclear",
    "start": "931180",
    "end": "937089"
  },
  {
    "text": "it was all defining goal and if you look at a policy within some sort of go code it's basically a bunch of if statements",
    "start": "937089",
    "end": "944259"
  },
  {
    "text": "divided across multiple packages it was impossible to read and it was even harder to test in addition to these",
    "start": "944259",
    "end": "952389"
  },
  {
    "text": "users had no input into this process whatsoever we define our own baseline",
    "start": "952389",
    "end": "957819"
  },
  {
    "text": "policies in this controller manager and nobody had visibility into and the moment somebody needed something special",
    "start": "957819",
    "end": "963819"
  },
  {
    "text": "we needed to create it and manually in the cluster so if something happens to this cluster and they object somehow",
    "start": "963819",
    "end": "969819"
  },
  {
    "text": "disappears then either somebody raised a ticket because in their applications and",
    "start": "969819",
    "end": "975009"
  },
  {
    "text": "longer working or we recreate it manually in addition to these production reasons we're needed every time we",
    "start": "975009",
    "end": "980889"
  },
  {
    "text": "needed to do any small change into some API definition if you look at key bernetta so objects they're what",
    "start": "980889",
    "end": "987100"
  },
  {
    "text": "yamo basic Djamel definitions or json definitions you shouldn't be too hard to change and anytime we needed to manage",
    "start": "987100",
    "end": "993579"
  },
  {
    "text": "any doing new type of resources for example day one we were managing row bindings they two we needed to manage",
    "start": "993579",
    "end": "998769"
  },
  {
    "text": "for security policies the we needed to add a bunch of code to make this happen",
    "start": "998769",
    "end": "1004790"
  },
  {
    "start": "1004000",
    "end": "1060000"
  },
  {
    "text": "fortunately we know we knew what we wanted to get we we knew that policy should be simple to understand and",
    "start": "1004910",
    "end": "1010709"
  },
  {
    "text": "granular policies should be independent from one another should back up all of our releases a",
    "start": "1010709",
    "end": "1016829"
  },
  {
    "text": "change in policy should only take minutes to apply to all the clusters if need to and we want this is important we",
    "start": "1016829",
    "end": "1024928"
  },
  {
    "text": "want to give the users ability to define their own policies we as a platform providers we define a set of baseline",
    "start": "1024929",
    "end": "1030720"
  },
  {
    "text": "rules let's cut it away that everybody needs to follow but we understand that certain applications teams might have",
    "start": "1030720",
    "end": "1037380"
  },
  {
    "text": "special names like running privilege containers phrases so we need to enable them and empower them to to define such",
    "start": "1037380",
    "end": "1043740"
  },
  {
    "text": "policies of course they define something that we review right we are the gatekeepers of these posts and obviously",
    "start": "1043740",
    "end": "1050130"
  },
  {
    "text": "no code should change whenever we wanna change whenever we wanted to manage a new type of resource or whenever we need",
    "start": "1050130",
    "end": "1055919"
  },
  {
    "text": "to change something simple like a version on one of these resource so",
    "start": "1055919",
    "end": "1062010"
  },
  {
    "start": "1060000",
    "end": "1166000"
  },
  {
    "text": "we're using up a phrase in the picture above we still see how we still have",
    "start": "1062010",
    "end": "1067830"
  },
  {
    "text": "control a manager however this is a very trim down version of the old controller manager which no knowledge that these",
    "start": "1067830",
    "end": "1074370"
  },
  {
    "text": "runs on GS whatsoever and we basically offload all the decisions about what resources should be created in the",
    "start": "1074370",
    "end": "1081270"
  },
  {
    "text": "cluster to appa so here's how the interaction works controller manager will continuously get the namespaces",
    "start": "1081270",
    "end": "1087990"
  },
  {
    "text": "from urban areas API using sharing formers so every time you create update or delete a namespace Control Manager",
    "start": "1087990",
    "end": "1094049"
  },
  {
    "text": "will get a notification after it does is it will basically ask up a simple",
    "start": "1094049",
    "end": "1099330"
  },
  {
    "text": "question hey what resources I need to create for this namespace oppa will evaluate a bunch of rules and you will",
    "start": "1099330",
    "end": "1105840"
  },
  {
    "text": "ultimately return a JSON list where each of the Jason's represent a key bernetta subject and there might be different",
    "start": "1105840",
    "end": "1111990"
  },
  {
    "text": "types controller manager gets situation and at the end it says okay I'm going to apply it and it runs a simple cube CTL",
    "start": "1111990",
    "end": "1118860"
  },
  {
    "text": "apply command on this JSON objects so what are the benefits of this well",
    "start": "1118860",
    "end": "1124020"
  },
  {
    "text": "dynamism to start with we can change policy dynamically without having to roll any role out any new code since",
    "start": "1124020",
    "end": "1131460"
  },
  {
    "text": "it's continuously being applied the cluster state will be enforced every so",
    "start": "1131460",
    "end": "1136679"
  },
  {
    "text": "often they depends on what interval we define and it's totally configurable and then well we have poly",
    "start": "1136679",
    "end": "1142980"
  },
  {
    "text": "the all of our policies defined in code in some sub in some",
    "start": "1142980",
    "end": "1148200"
  },
  {
    "text": "submergence is an operation version control system that we can run unit tests for and finally we can better we",
    "start": "1148200",
    "end": "1155190"
  },
  {
    "text": "can leverage better all of our command sacs inventories and just a recap of us what these are group rolls capacity",
    "start": "1155190",
    "end": "1162419"
  },
  {
    "text": "inventory storage inventory etc so",
    "start": "1162419",
    "end": "1167610"
  },
  {
    "start": "1166000",
    "end": "1206000"
  },
  {
    "text": "here's a basic example of what a baseline rule would look like and I'm not gonna go too much into it but if you",
    "start": "1167610",
    "end": "1173610"
  },
  {
    "text": "see that the first line is basically validating that a namespace what is valid or not we don't want to create this for for our own manage names",
    "start": "1173610",
    "end": "1180990"
  },
  {
    "text": "namespaces these only applied to application namespaces and if it is we were basically going to",
    "start": "1180990",
    "end": "1187289"
  },
  {
    "text": "create a resource quota like that looks like this JSON now this is a standard resource board and nothing special the real special",
    "start": "1187289",
    "end": "1193769"
  },
  {
    "text": "part is that the actual data or the actual number of course that you can use",
    "start": "1193769",
    "end": "1199200"
  },
  {
    "text": "or memory is gonna come from some capacity inventory which oppa will have on its data cache essentially let's look",
    "start": "1199200",
    "end": "1207510"
  },
  {
    "start": "1206000",
    "end": "1277000"
  },
  {
    "text": "at another example again this is an example where we have teams that requires something extra on their name",
    "start": "1207510",
    "end": "1213179"
  },
  {
    "text": "spaces and the sukkah row bindings for instance we obviously have our baseline rule in which we need to create an admin",
    "start": "1213179",
    "end": "1221130"
  },
  {
    "text": "row binding for those users that need to create resources they need to create things on that namespace so if I'm part",
    "start": "1221130",
    "end": "1227880"
  },
  {
    "text": "of a random namespace that is not part of let's call it the special team X I",
    "start": "1227880",
    "end": "1233610"
  },
  {
    "text": "will just get this place an object but the moment that the namespace belongs to one of the namespace from a special team",
    "start": "1233610",
    "end": "1239580"
  },
  {
    "text": "X they will get a combination of these of these of these two objects how does",
    "start": "1239580",
    "end": "1246899"
  },
  {
    "text": "that happen well it's very simple oppa has this very cool feature in which if you define rules that have the same",
    "start": "1246899",
    "end": "1252720"
  },
  {
    "text": "name they will open what it will do when you queried it will evaluate both simultaneously and if they both happen",
    "start": "1252720",
    "end": "1259590"
  },
  {
    "text": "to evaluate to true you'll get two objects if one of them evaluates which one the other one doesn't you get one object so in this case of",
    "start": "1259590",
    "end": "1268260"
  },
  {
    "text": "the application application X you'll get the base baseline object again and you'll get a special row binding that",
    "start": "1268260",
    "end": "1274860"
  },
  {
    "text": "serves your business needs all right so back to what Tim said about about oh",
    "start": "1274860",
    "end": "1282460"
  },
  {
    "start": "1277000",
    "end": "1403000"
  },
  {
    "text": "about you basically need three things to make up a producer an accurate policy decision you need both policies",
    "start": "1282460",
    "end": "1288760"
  },
  {
    "text": "obviously you need data which we're gonna divide into cuban s cluster data",
    "start": "1288760",
    "end": "1294130"
  },
  {
    "text": "like the ingresses namespace and deployments are you have etc and you have your unique and the company",
    "start": "1294130",
    "end": "1300670"
  },
  {
    "text": "proprietary data right all of these external inventory systems finally you",
    "start": "1300670",
    "end": "1306130"
  },
  {
    "text": "need a query and then you'll get your Apple so let's start with a policy and cue Burnett as a cluster data to sing",
    "start": "1306130",
    "end": "1314380"
  },
  {
    "text": "this to these two pieces of data into into a power using this tool called queue management it is a tool developed",
    "start": "1314380",
    "end": "1320980"
  },
  {
    "text": "by Stara completely open sourced with the sole purpose of running as a",
    "start": "1320980",
    "end": "1326020"
  },
  {
    "text": "cycle container with APPA and continuously upload policy and data into",
    "start": "1326020",
    "end": "1331120"
  },
  {
    "text": "it using a standardized API on localhost so how does it work for the cubanelles",
    "start": "1331120",
    "end": "1337030"
  },
  {
    "text": "cluster data you basically have to only define a complete a command line argument specifying which resources you wanna",
    "start": "1337030",
    "end": "1343650"
  },
  {
    "text": "continuously sync right and you can control this via the deployment channel",
    "start": "1343650",
    "end": "1348700"
  },
  {
    "text": "for open key management and for the policy what queue management will do is",
    "start": "1348700",
    "end": "1355120"
  },
  {
    "text": "it will look at any name space of your choice and it will look at the config Maps inside of it if any config map in",
    "start": "1355120",
    "end": "1361600"
  },
  {
    "text": "that namespace happen to have Rago compatible syntax it will say ok these",
    "start": "1361600",
    "end": "1367900"
  },
  {
    "text": "are policy I'm gonna upload it into a pass a policy so if we refer to the",
    "start": "1367900",
    "end": "1373300"
  },
  {
    "text": "length of the picture imagine this guy here is either me as a platform provider or system administrator or some",
    "start": "1373300",
    "end": "1379750"
  },
  {
    "text": "application developer I need something special they can simply commit their policy into some version control system",
    "start": "1379750",
    "end": "1385270"
  },
  {
    "text": "in this case we use a key lab and we use standard gillip CCD pipelines to push",
    "start": "1385270",
    "end": "1390850"
  },
  {
    "text": "all these policies into cube analysis config Maps when you management detects that there is a new config map or",
    "start": "1390850",
    "end": "1396790"
  },
  {
    "text": "something has been updated it say AHA this is policy of loading to open up data policy right so we have policy and",
    "start": "1396790",
    "end": "1405520"
  },
  {
    "start": "1403000",
    "end": "1509000"
  },
  {
    "text": "we have cubanelles data next step how do I get proprietary data from my company",
    "start": "1405520",
    "end": "1411300"
  },
  {
    "text": "for this we're using a an OPA feature kind of ties it into the",
    "start": "1411300",
    "end": "1416680"
  },
  {
    "text": "pool pull pull mechanism that Tim mentioned that'll pass it's called it's called OPA bundles what essentially means is that",
    "start": "1416680",
    "end": "1423760"
  },
  {
    "text": "Appa has the capability of querying external systems be a REST API these",
    "start": "1423760",
    "end": "1428980"
  },
  {
    "text": "external systems the only thing that they need to comply with is to reply with a turbo when that when OPA get said",
    "start": "1428980",
    "end": "1436000"
  },
  {
    "text": "it will it will basically enter it and upload as either data or policy depending on what it or what it is of on",
    "start": "1436000",
    "end": "1442690"
  },
  {
    "text": "what that turbo has so okay so we need a we need some sort of observer for this",
    "start": "1442690",
    "end": "1449590"
  },
  {
    "text": "and we created our own we created our own component call we call it GS feeder that it's very very simple the only",
    "start": "1449590",
    "end": "1456640"
  },
  {
    "text": "thing it does is again query Q Benares we are sharing formers to get all the namespaces that we have in our clusters",
    "start": "1456640",
    "end": "1462190"
  },
  {
    "text": "and then for as many inventory systems as we want cosine query each and every",
    "start": "1462190",
    "end": "1468070"
  },
  {
    "text": "single one of them either we are bulk API requests or singles it depends on this on each inventory system it'll get",
    "start": "1468070",
    "end": "1475420"
  },
  {
    "text": "data from them they'll put them in some sort of JSON that we like and you'll tell them and that's it you'll serve",
    "start": "1475420",
    "end": "1481030"
  },
  {
    "text": "them to oppa so every every so often oppa will last years Peter hey do you have any data you have any data do you",
    "start": "1481030",
    "end": "1486490"
  },
  {
    "text": "have any data if something has changed GS Peter will reply with the full scholar bundle which is again it's a",
    "start": "1486490",
    "end": "1492430"
  },
  {
    "text": "toughie but if nothing has changing will reply nope there's nothing new and Papa",
    "start": "1492430",
    "end": "1497710"
  },
  {
    "text": "will just carry along all right so we have again let's recap we have policy we",
    "start": "1497710",
    "end": "1503530"
  },
  {
    "text": "have Q Benares data and now we have our own proprietary data the last step is",
    "start": "1503530",
    "end": "1510640"
  },
  {
    "start": "1509000",
    "end": "1666000"
  },
  {
    "text": "query and provision and we have explained this before right we use the trim down version of controller manager",
    "start": "1510640",
    "end": "1517330"
  },
  {
    "text": "to essentially continuously query OPA and since up already has the data and the policy that we need it will provide",
    "start": "1517330",
    "end": "1524320"
  },
  {
    "text": "a response to controller manager which is a list of your JSON objects and controller manager will apply those",
    "start": "1524320",
    "end": "1531460"
  },
  {
    "text": "objects via standard cube CTL apply into cue burners so some things to note about",
    "start": "1531460",
    "end": "1538150"
  },
  {
    "text": "this approach one it's almost completely open-source if you exclude the left part",
    "start": "1538150",
    "end": "1544780"
  },
  {
    "text": "of this picture there is not special about these right you have killaby of cuban areas you have open of",
    "start": "1544780",
    "end": "1550370"
  },
  {
    "text": "queue management and controller manager we're actually thinking on open source so who knows the second thing is sorry",
    "start": "1550370",
    "end": "1557870"
  },
  {
    "text": "these eventually consistent we don't only run one or by instance we run three",
    "start": "1557870",
    "end": "1564320"
  },
  {
    "text": "or four depending on the cluster right just for scalability purposes and this OPA controllers might and might not",
    "start": "1564320",
    "end": "1571340"
  },
  {
    "text": "Meyer may not be in sync at all times right because they all get data from this GS feeder at their own interval but",
    "start": "1571340",
    "end": "1578030"
  },
  {
    "text": "at some point they'll they'll be in sync with each other so if we happen to query an OPA contrary that is out of sync fine",
    "start": "1578030",
    "end": "1585320"
  },
  {
    "text": "like we'll get the old version of the resource eventually it'll get in sync with the other ones and we'll update the",
    "start": "1585320",
    "end": "1590510"
  },
  {
    "text": "next one so it's eventually consistent within two to five minutes let's put it that way",
    "start": "1590510",
    "end": "1596539"
  },
  {
    "text": "another takeaway from this and to me the most important is that this is failure",
    "start": "1596539",
    "end": "1602720"
  },
  {
    "text": "tolerant tolerant it doesn't matter if any of the GS feeder controller manager",
    "start": "1602720",
    "end": "1607909"
  },
  {
    "text": "of our queue management dies because what will happen let's say GES feeder queue management die OPA either won't",
    "start": "1607909",
    "end": "1615080"
  },
  {
    "text": "have data or policy to reply with every time we query OPA and Apollo saying on",
    "start": "1615080",
    "end": "1620840"
  },
  {
    "text": "the data will essentially return an undefined I don't know what to do Control Manager will look at this one this is undefined",
    "start": "1620840",
    "end": "1627650"
  },
  {
    "text": "I don't know what to do either I'm not gonna do anything so if anything is done in the environment at any given",
    "start": "1627650",
    "end": "1633890"
  },
  {
    "text": "point in time we don't affect the wrong time of the environment so existing namespaces that are running applications",
    "start": "1633890",
    "end": "1639080"
  },
  {
    "text": "will carry along just fine they just won't get any update the only thing that",
    "start": "1639080",
    "end": "1645950"
  },
  {
    "text": "we will actually interfere with is the provision in flow which will I mean will quickly fix the last thing to know about",
    "start": "1645950",
    "end": "1654350"
  },
  {
    "text": "this is that if there is any changes in the environment that come from us like we detect that we need to change something in policy they will again",
    "start": "1654350",
    "end": "1661340"
  },
  {
    "text": "since we query continuously it will be applied to the environment within two to five minutes a little bit about metrics",
    "start": "1661340",
    "end": "1669260"
  },
  {
    "start": "1666000",
    "end": "1689000"
  },
  {
    "text": "are monitoring a steam mention op exposes promethium promises metrics that you can graph you can do things like",
    "start": "1669260",
    "end": "1674990"
  },
  {
    "text": "round three time by HTTP method garbage collecting time how your how",
    "start": "1674990",
    "end": "1680870"
  },
  {
    "text": "as you're responding to requests mean API request latency and you can do graphs and alerts for any single one of",
    "start": "1680870",
    "end": "1686780"
  },
  {
    "text": "these up to you so evaluation of result",
    "start": "1686780",
    "end": "1691910"
  },
  {
    "start": "1689000",
    "end": "1782000"
  },
  {
    "text": "okay we had a problem we did something they actually work and the answer is actually yeah pretty successfully we now",
    "start": "1691910",
    "end": "1698960"
  },
  {
    "text": "have five minutes turn around turnaround time on global policy application so basically if something",
    "start": "1698960",
    "end": "1705050"
  },
  {
    "text": "changed we can deploy very quickly after we push the deploy button I mean we commit our policy we push the deploy",
    "start": "1705050",
    "end": "1711140"
  },
  {
    "text": "button it happens within two to five minutes on every namespace the scale",
    "start": "1711140",
    "end": "1716480"
  },
  {
    "text": "that we have we have a min request round-trip time of less than 30 milliseconds there are 24 rules",
    "start": "1716480",
    "end": "1722330"
  },
  {
    "text": "currently in our environment meaning that every time we query namespaces OPA will fire 24 rules for that namespace",
    "start": "1722330",
    "end": "1728140"
  },
  {
    "text": "potentially returning 24 different Cuba NetID subjects that doesn't even like",
    "start": "1728140",
    "end": "1733880"
  },
  {
    "text": "that those happen all the time because very very special we have an average data size of like one megabyte of GS",
    "start": "1733880",
    "end": "1739970"
  },
  {
    "text": "data and 2 megabytes of cubanelles data something very important to us is that we can fix any issues in the cluster",
    "start": "1739970",
    "end": "1747080"
  },
  {
    "text": "within two to five minutes pertaining these objects obviously maintenance wise",
    "start": "1747080",
    "end": "1752600"
  },
  {
    "text": "is not needed I don't look at this at all unless I have broken something on",
    "start": "1752600",
    "end": "1758120"
  },
  {
    "text": "that GS pillar that I wrote myself however whenever I need to upgrade the",
    "start": "1758120",
    "end": "1763280"
  },
  {
    "text": "OPA or the queue management version but it's pretty standard updated make sure everything is working fine run some",
    "start": "1763280",
    "end": "1769340"
  },
  {
    "text": "integration tests or whatnot and release and then we have received multiple",
    "start": "1769340",
    "end": "1774410"
  },
  {
    "text": "feedbacks that this is that our turnaround times have gotten better overall everybody is quite happy alright",
    "start": "1774410",
    "end": "1783020"
  },
  {
    "start": "1782000",
    "end": "1845000"
  },
  {
    "text": "some of the lessons learned to model using OPA bundles is more scalable than",
    "start": "1783020",
    "end": "1788179"
  },
  {
    "text": "a push model using OPI we used to have a push model while we're the feeder used",
    "start": "1788179",
    "end": "1793760"
  },
  {
    "text": "to push this these GS data into OPA this basically was not scared scaleable for",
    "start": "1793760",
    "end": "1800540"
  },
  {
    "text": "us if we wanted to scale open key management we will have to deal with issues like synchronization what happens",
    "start": "1800540",
    "end": "1806360"
  },
  {
    "text": "if I know the controller dies we didn't want to deal with that in our case waiting two to five minutes for",
    "start": "1806360",
    "end": "1812840"
  },
  {
    "text": "namespace provisioning it was more than obviously create metrics and secure",
    "start": "1812840",
    "end": "1818390"
  },
  {
    "text": "europa deployments this is very well documented in the style of documentation so please read that do not have note",
    "start": "1818390",
    "end": "1826160"
  },
  {
    "text": "static data strago this will impact your policy upload times make sure you performant performant use and unit test",
    "start": "1826160",
    "end": "1833300"
  },
  {
    "text": "your poll is as much as you can and needless to say use version control",
    "start": "1833300",
    "end": "1838640"
  },
  {
    "text": "you see ICD pipelines or your friends are gonna help you to roll out and roll back your changes when you need to some",
    "start": "1838640",
    "end": "1846590"
  },
  {
    "start": "1845000",
    "end": "1884000"
  },
  {
    "text": "of the future works we're still expanding on this provisioning workflow we're gonna start controlling production",
    "start": "1846590",
    "end": "1851810"
  },
  {
    "text": "access through the concept of leases basically dynamically growing and shrinking the subjects on the admin role",
    "start": "1851810",
    "end": "1857870"
  },
  {
    "text": "binding based on the data from some inventory system future implementations",
    "start": "1857870",
    "end": "1863720"
  },
  {
    "text": "on these spaces say if we feel there is an appetite for these we might consider open source in the controller manager",
    "start": "1863720",
    "end": "1869660"
  },
  {
    "text": "which will mean we need to things like maybe creating an operator for to set up all of this architecture for you having",
    "start": "1869660",
    "end": "1876950"
  },
  {
    "text": "good metrics like be a permutation graph and make sure we can horizontally scale this controller manager etc so that's it",
    "start": "1876950",
    "end": "1885320"
  },
  {
    "start": "1884000",
    "end": "1974000"
  },
  {
    "text": "thank you [Applause]",
    "start": "1885320",
    "end": "1892660"
  },
  {
    "text": "honey yep the questions I think we have time for one question no but it's the",
    "start": "1892660",
    "end": "1898850"
  },
  {
    "text": "last it's the last session I think we can all run long we can keep you here along here yep feel free to approach me",
    "start": "1898850",
    "end": "1905660"
  },
  {
    "text": "after if any questions as well hi my question is is it just a security measure for you or is it also a",
    "start": "1905660",
    "end": "1910970"
  },
  {
    "text": "compliancy generator excuse me is it just a security measure for you or is it",
    "start": "1910970",
    "end": "1916010"
  },
  {
    "text": "also a compliancy generator it's basically compliance we want to make sure that that everybody's running",
    "start": "1916010",
    "end": "1923900"
  },
  {
    "text": "up to like a set of policies that we deem correct for example port security BOTS do your auto sir orders accepted",
    "start": "1923900",
    "end": "1929540"
  },
  {
    "text": "listen to your auditors accept it as compliance evidence what do you mean for",
    "start": "1929540",
    "end": "1936010"
  },
  {
    "text": "your bank you have to prove to the regular weight regulator you are in control do they accept the output of OPA",
    "start": "1936010",
    "end": "1942950"
  },
  {
    "text": "is compliance the evidence yeah I mean like like obviously everything we do we thought we do run by our security team",
    "start": "1942950",
    "end": "1949400"
  },
  {
    "text": "and they have looked at this and they deem it so thank you one more question",
    "start": "1949400",
    "end": "1955180"
  },
  {
    "text": "over there",
    "start": "1955180",
    "end": "1958390"
  },
  {
    "text": "hi so I was looking at your diagram that you put the inventory management one",
    "start": "1967830",
    "end": "1976090"
  },
  {
    "start": "1974000",
    "end": "2246000"
  },
  {
    "text": "yeah can you explain like a small like how does and you said that the I mean can",
    "start": "1976090",
    "end": "1984100"
  },
  {
    "text": "you explain the workflow like how does it what the inventory management system I mean what is it receiving and I mean a",
    "start": "1984100",
    "end": "1991060"
  },
  {
    "text": "short example to illustrate how does it enforces what does it get back from the",
    "start": "1991060",
    "end": "1997210"
  },
  {
    "text": "inventory source and how does it apply like in real just a simple example so let's say a new name space was created",
    "start": "1997210",
    "end": "2004440"
  },
  {
    "text": "and this is name spaces call Miguel this happened to somehow tie down to GS inventory systems right",
    "start": "2004440",
    "end": "2010020"
  },
  {
    "text": "they'll be information about me go in there the namespace me go Jesus fira will get this update from the Cuban s",
    "start": "2010020",
    "end": "2015360"
  },
  {
    "text": "API and it will say okay I need to query the group roles inventory the capacity",
    "start": "2015360",
    "end": "2021960"
  },
  {
    "text": "inventory the storage inventory and others however how many we configure let's say we do four groups it will",
    "start": "2021960",
    "end": "2028530"
  },
  {
    "text": "basically ask the arrests API to our groups inventory again its proprietary it's our own input output format but",
    "start": "2028530",
    "end": "2035130"
  },
  {
    "text": "it's a Jason right Jason Sena Jason say hey the namespaces Miguel tell me what information do you have on your records",
    "start": "2035130",
    "end": "2041970"
  },
  {
    "text": "for this the group rolls inventory will respond well the admins for the",
    "start": "2041970",
    "end": "2047460"
  },
  {
    "text": "namespace Miguel are going to be Miguel on team and the viewers are going to be",
    "start": "2047460",
    "end": "2052888"
  },
  {
    "text": "here no Jack and Rodrigo right we'll get",
    "start": "2052889",
    "end": "2058320"
  },
  {
    "text": "that information we'll find it once we get it from this inventory systems into whatever JSON format we",
    "start": "2058320",
    "end": "2064290"
  },
  {
    "text": "think we want to query in our policies and will basically turn that up into",
    "start": "2064290",
    "end": "2069990"
  },
  {
    "text": "into a tar file at that point like he just sits there right this feeder is a server oppa will query periodically his",
    "start": "2069990",
    "end": "2076950"
  },
  {
    "text": "feeder service and he will detect that a change has happened right like this is not the same tired that I had before",
    "start": "2076950",
    "end": "2084120"
  },
  {
    "text": "essentially and you'll pull it when he pulls it and say okay there is new data I'm gonna put this data as is on my",
    "start": "2084120",
    "end": "2092070"
  },
  {
    "text": "in-memory cache and then it's up to us on how we use it in the policy does that answer your question",
    "start": "2092070",
    "end": "2099260"
  },
  {
    "text": "sure let's say that happens first of all in our environment that really cannot",
    "start": "2105770",
    "end": "2113070"
  },
  {
    "text": "happen because before you create a namespace it needs to be in the inventories I like the our provisioning",
    "start": "2113070",
    "end": "2118770"
  },
  {
    "text": "work like our orchestration workflow don't won't let you do that but let's say it happens what it will happen then",
    "start": "2118770",
    "end": "2124710"
  },
  {
    "text": "is that when controller manager queries OPA about namespace Miguel which is not every anywhere",
    "start": "2124710",
    "end": "2129750"
  },
  {
    "text": "OPA will try to run the policies and it will say well you know what I don't have the data that I need to compute this",
    "start": "2129750",
    "end": "2136349"
  },
  {
    "text": "policy I'm gonna return undefined so at this point what remedy will say oh I",
    "start": "2136349",
    "end": "2142020"
  },
  {
    "text": "don't know what to do with this I'm not gonna create any object so how would you fix this well you actually put your data",
    "start": "2142020",
    "end": "2148470"
  },
  {
    "text": "in this inventory system and as this thing this thing is self-healing the field will continuously ask about names",
    "start": "2148470",
    "end": "2154410"
  },
  {
    "text": "face Miguel ear is often so when that data becomes available in the inventory system Peter will get it oppa will get",
    "start": "2154410",
    "end": "2161280"
  },
  {
    "text": "it and next timing require it be a controller manager your your resource will be provisioned",
    "start": "2161280",
    "end": "2168588"
  },
  {
    "text": "no we don't we don't expire like basically like again to create an to create a namespace in our cube Earnest",
    "start": "2172910",
    "end": "2178369"
  },
  {
    "text": "clusters you need to be registered in our inventory systems like before any of these so so now what is queue management",
    "start": "2178369",
    "end": "2191569"
  },
  {
    "text": "doing with us sure so there the role of queue management is to sync policies right let the feeder",
    "start": "2191569",
    "end": "2199309"
  },
  {
    "text": "basically syncs GS data just specific data queue management basically syncs",
    "start": "2199309",
    "end": "2204559"
  },
  {
    "text": "policies that are defining config maps in our inactive NS namespace and it also syncs Hueber net a cubanelles specific",
    "start": "2204559",
    "end": "2212059"
  },
  {
    "text": "data that we need some of our policies required to know the current state of the cluster like the one that team",
    "start": "2212059",
    "end": "2217430"
  },
  {
    "text": "showed about the ingress for instance that needed to know like which ingresses are in the cluster and what host names",
    "start": "2217430",
    "end": "2222529"
  },
  {
    "text": "they have right so hue management can do that via share informers awesome well I",
    "start": "2222529",
    "end": "2229789"
  },
  {
    "text": "think that's all the time we have so thank you guys for coming out and I think they're gonna be closing the",
    "start": "2229789",
    "end": "2235609"
  },
  {
    "text": "conference center pretty soon yeah so we'll still hang around they'll have to get ya know if you have more questions",
    "start": "2235609",
    "end": "2243630"
  },
  {
    "text": "[Applause]",
    "start": "2243630",
    "end": "2248459"
  }
]