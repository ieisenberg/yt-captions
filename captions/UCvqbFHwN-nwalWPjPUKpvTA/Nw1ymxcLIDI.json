[
  {
    "start": "0",
    "end": "71000"
  },
  {
    "text": "all right well welcome my name is Jordan Liggett I work at Red Hat I work on kubernetes and on openshift and I'm part",
    "start": "0",
    "end": "7680"
  },
  {
    "text": "of the team that helps lead the kubernetes authentication and authorization efforts and today I'm",
    "start": "7680",
    "end": "14639"
  },
  {
    "text": "gonna be talking about how you can use our back more effectively to secure your",
    "start": "14639",
    "end": "19890"
  },
  {
    "text": "API servers and your kubernetes api s so what is our back our back stands for",
    "start": "19890",
    "end": "26880"
  },
  {
    "text": "role based access control it's one of the authorization modes that you can use",
    "start": "26880",
    "end": "32189"
  },
  {
    "text": "with your communities API server and it's job is to answer the question for every request that comes into the server",
    "start": "32189",
    "end": "38760"
  },
  {
    "text": "can the subject that is submitting this request to perform this verb on this",
    "start": "38760",
    "end": "45059"
  },
  {
    "text": "object but that's a little dry and it's the last session of the last day and",
    "start": "45059",
    "end": "51210"
  },
  {
    "text": "we're all fried so I figured maybe we'd start with that instead so instead of",
    "start": "51210",
    "end": "57469"
  },
  {
    "text": "deployments or pods or whatever I'm gonna walk you through sort of conceptually how the our back design is",
    "start": "57469",
    "end": "64080"
  },
  {
    "text": "laid out using this question can bob educate dolphins so here's a little",
    "start": "64080",
    "end": "69630"
  },
  {
    "text": "story this is Bob Bob's a pirate Bob",
    "start": "69630",
    "end": "75119"
  },
  {
    "start": "71000",
    "end": "71000"
  },
  {
    "text": "works on a really strict ship and if you don't ask for permission you walk the plank so Bob is the first mate of the",
    "start": "75119",
    "end": "83970"
  },
  {
    "text": "green ship and his responsibilities his permissions are to help the captain and",
    "start": "83970",
    "end": "89159"
  },
  {
    "text": "train the crew and so if we're thinking in terms of roles we can say his role is first mate and the role is just a named",
    "start": "89159",
    "end": "97439"
  },
  {
    "text": "set of permissions and so the first mate role includes the permissions of helping",
    "start": "97439",
    "end": "102659"
  },
  {
    "text": "the captain and training the crew and that role is granted at a particular",
    "start": "102659",
    "end": "107820"
  },
  {
    "text": "location so he has that role on the green ship now there are lots of ships",
    "start": "107820",
    "end": "114240"
  },
  {
    "text": "every ship has a first mate it makes sense for the permissions to be uniform",
    "start": "114240",
    "end": "119939"
  },
  {
    "text": "across the ships right so we're gonna define the first mate role globally it",
    "start": "119939",
    "end": "125280"
  },
  {
    "text": "means the same thing across all the ships but we grant it locally so Bob can",
    "start": "125280",
    "end": "131790"
  },
  {
    "text": "only do first mate things on the green ship alright defined globally granted locally now training",
    "start": "131790",
    "end": "139890"
  },
  {
    "text": "the crew got boring so one day Bob asked if he could also Train dolphins and his",
    "start": "139890",
    "end": "146520"
  },
  {
    "text": "captain thought that was a little weird but you know whatever so he said all",
    "start": "146520",
    "end": "151560"
  },
  {
    "text": "right Bob I'm gonna give you in addition to your first mate role the role of dolphin trainer and you are allowed to",
    "start": "151560",
    "end": "156810"
  },
  {
    "text": "educate dolphins but let's be honest we're not going to use this role on any other ships so we're just going to",
    "start": "156810",
    "end": "163650"
  },
  {
    "text": "define this role locally we're gonna keep this one to ourselves and because",
    "start": "163650",
    "end": "169440"
  },
  {
    "text": "it's defined locally it's also only granted locally so now bob has two roles dolphin trainer first mate and he can do",
    "start": "169440",
    "end": "176460"
  },
  {
    "text": "anything that either of those roles allows so if we go back to our original question can Bob educate dolphins on the",
    "start": "176460",
    "end": "184110"
  },
  {
    "text": "green ship the answer is yes so we're",
    "start": "184110",
    "end": "189390"
  },
  {
    "text": "almost done with our story just have a little post log what ever happened to Bob turns out he got himself elected",
    "start": "189390",
    "end": "196170"
  },
  {
    "text": "pirate king so must have been his strong sense of purpose",
    "start": "196170",
    "end": "201379"
  },
  {
    "text": "thank you and so this is a permission that is dealing with something global",
    "start": "205860",
    "end": "213340"
  },
  {
    "text": "the Armada is a global thing and so the role that allows it has to be global and it also has to be granted globally so",
    "start": "213340",
    "end": "220329"
  },
  {
    "text": "these are sort of the the ways you can think about defining roles globally or locally and then granting them globally",
    "start": "220329",
    "end": "227349"
  },
  {
    "text": "or locally so enough about Bob let's look at an actual API request and the",
    "start": "227349",
    "end": "234069"
  },
  {
    "text": "types of questions that it would ask of the authorization layer so a request comes into the API server it's got an",
    "start": "234069",
    "end": "241989"
  },
  {
    "start": "238000",
    "end": "238000"
  },
  {
    "text": "HTTP method and a URL and some headers and some other stuff the body stuff but",
    "start": "241989",
    "end": "248890"
  },
  {
    "text": "the first thing we do is parse out request attributes from the verb the",
    "start": "248890",
    "end": "255040"
  },
  {
    "text": "method and the the URL so you can see from this the post method maps to the",
    "start": "255040",
    "end": "263320"
  },
  {
    "text": "create verb and we extract the apps API group the namespace and the resource and",
    "start": "263320",
    "end": "269830"
  },
  {
    "text": "so this set of request attributes becomes the input to the authorizer the",
    "start": "269830",
    "end": "278080"
  },
  {
    "text": "next step is authentication so the authentication layer looks at the request and determines who is making",
    "start": "278080",
    "end": "284620"
  },
  {
    "text": "this request and in this case there's a bearer token and so the authentication is going to look at that and determine",
    "start": "284620",
    "end": "290710"
  },
  {
    "text": "okay this request is coming from Bob and so the request attributes and the user",
    "start": "290710",
    "end": "296470"
  },
  {
    "text": "information become the input to the authorizer and so for this request the",
    "start": "296470",
    "end": "302530"
  },
  {
    "text": "question we're going to ask is can Bob and the group system authenticated create apps deployments in this",
    "start": "302530",
    "end": "309970"
  },
  {
    "text": "namespace so let's look at how we would set up our back to allow that this is",
    "start": "309970",
    "end": "317199"
  },
  {
    "start": "317000",
    "end": "317000"
  },
  {
    "text": "basically what we want we want Bob okay it Bob's back we want Bob to be a",
    "start": "317199",
    "end": "322389"
  },
  {
    "text": "deployer in namespace and s1 and we want that to mean that he can create",
    "start": "322389",
    "end": "327870"
  },
  {
    "text": "deployments in the apps API group so remember our roles we're gonna set up a",
    "start": "327870",
    "end": "333760"
  },
  {
    "text": "deployer role and that deployer role is going to map to this one permission create apps",
    "start": "333760",
    "end": "340449"
  },
  {
    "text": "deployments and then we want to grant that inside the NS one namespace so our",
    "start": "340449",
    "end": "347379"
  },
  {
    "text": "back uses API objects to define this policy so first we're going to create a",
    "start": "347379",
    "end": "354180"
  },
  {
    "text": "role object and this looks like every other kubernetes api object you've seen",
    "start": "354180",
    "end": "359289"
  },
  {
    "text": "it lives in the our back api group which is v1 as of kubernetes one eight it has",
    "start": "359289",
    "end": "365590"
  },
  {
    "text": "a name we're just going to call it deployer and we're gonna create it inside the NS one namespace because that's where we want to grant these",
    "start": "365590",
    "end": "372009"
  },
  {
    "text": "permissions and remember we said that a role is just a named list of permissions",
    "start": "372009",
    "end": "377380"
  },
  {
    "text": "well an are back role has a list of rules and each rule has the opportunity",
    "start": "377380",
    "end": "383830"
  },
  {
    "text": "to match the attributes on an incoming request and so this role has one rule",
    "start": "383830",
    "end": "388930"
  },
  {
    "text": "and it matches the attributes on the request that we saw the create verb is",
    "start": "388930",
    "end": "394539"
  },
  {
    "text": "included in this list the apps API group is included in this list and the",
    "start": "394539",
    "end": "399580"
  },
  {
    "text": "deployments resource is included in this list and so we can pass this to keep control create and we have now defined a",
    "start": "399580",
    "end": "407050"
  },
  {
    "text": "role inside our namespace with the permissions we want so the next step is to grant this role to Bob and we do that",
    "start": "407050",
    "end": "413770"
  },
  {
    "text": "by binding the role to Bob so we create a role binding object no surprise in the",
    "start": "413770",
    "end": "422259"
  },
  {
    "text": "are back API group we are also creating it inside the ns1 namespace and the",
    "start": "422259",
    "end": "427990"
  },
  {
    "text": "location of the role binding determines the location of the permissions so if we",
    "start": "427990",
    "end": "433240"
  },
  {
    "text": "created this in a different namespace we would be trying to grant permissions in a different namespace but this is the namespace we're in so",
    "start": "433240",
    "end": "439539"
  },
  {
    "text": "that's the first the first important thing about a binding where is it a second important thing what role is it",
    "start": "439539",
    "end": "445479"
  },
  {
    "text": "referencing so this is going to reference the role we just defined and the third important thing who is it",
    "start": "445479",
    "end": "452409"
  },
  {
    "text": "binding the role to and so you can reference one or more subjects in this case it's just one a subject can be a",
    "start": "452409",
    "end": "459639"
  },
  {
    "text": "user a group or a service account in this case we're binding to a user with",
    "start": "459639",
    "end": "465159"
  },
  {
    "text": "the name Bob and that's going to match the user info coming from the authentication",
    "start": "465159",
    "end": "470350"
  },
  {
    "text": "layer so once we create both of these objects we have defined a local role",
    "start": "470350",
    "end": "477400"
  },
  {
    "text": "inside the ns1 namespace and then we've granted that role also inside the ns1",
    "start": "477400",
    "end": "483670"
  },
  {
    "text": "namespace to Bob so once we do this Bob will be authorized to submit that API",
    "start": "483670",
    "end": "489280"
  },
  {
    "text": "request and just like it makes sense to reuse roles between name spaces creating",
    "start": "489280",
    "end": "496210"
  },
  {
    "text": "deployments is something that would be useful to be able to grant in other namespaces and it would be a pain to have to create a copy of this in every",
    "start": "496210",
    "end": "503200"
  },
  {
    "text": "namespace we can actually define this globally by changing the kind from role",
    "start": "503200",
    "end": "508930"
  },
  {
    "text": "to cluster role and you all that changes is the kind and then the kind inside the",
    "start": "508930",
    "end": "515229"
  },
  {
    "text": "role ref so now we are defining the permissions globally but still granting",
    "start": "515229",
    "end": "520300"
  },
  {
    "text": "them locally if Alice was in the ns2 namespace we could create an almost",
    "start": "520300",
    "end": "526360"
  },
  {
    "text": "identical role binding inside the ns2 namespace referencing this cluster level role and that lets us reuse permissions",
    "start": "526360",
    "end": "533020"
  },
  {
    "text": "and just maintain policy in one place but then granted in lots of other places and then finally if we wanted to give",
    "start": "533020",
    "end": "539860"
  },
  {
    "text": "this permission across all namespaces let Bob do any create deployments in any",
    "start": "539860",
    "end": "544990"
  },
  {
    "text": "namespace big surprise change role binding to cluster role binding and now",
    "start": "544990",
    "end": "551020"
  },
  {
    "text": "you have granted it globally so to review there are two API objects you can",
    "start": "551020",
    "end": "558910"
  },
  {
    "text": "use to define permissions the first is a cluster role which defines permissions",
    "start": "558910",
    "end": "564820"
  },
  {
    "text": "globally and so you would use this if the things you're granting are cluster scoped like nodes or persistent volumes",
    "start": "564820",
    "end": "571150"
  },
  {
    "text": "or if you want to reuse a set of permissions across namespaces or if you",
    "start": "571150",
    "end": "578770"
  },
  {
    "text": "want to give cluster wide access like letting someone list pods across all namespaces or create deployments in any",
    "start": "578770",
    "end": "584500"
  },
  {
    "text": "namespace the other object you can use to define permissions as a role object",
    "start": "584500",
    "end": "590640"
  },
  {
    "text": "you would use this if the permissions are only around namespaced resources",
    "start": "590640",
    "end": "595900"
  },
  {
    "text": "like pods deployments things like that and you only wanted this definition to be valid",
    "start": "595900",
    "end": "601720"
  },
  {
    "text": "a particular namespace so that's the definition side on the granting side to",
    "start": "601720",
    "end": "607360"
  },
  {
    "text": "objects you can grant with a cluster role binding to grant permissions across the whole cluster you would do this to",
    "start": "607360",
    "end": "614199"
  },
  {
    "text": "grant permissions to cluster scoped resources like nodes persistent volumes or if you wanted to give cluster wide",
    "start": "614199",
    "end": "620649"
  },
  {
    "text": "access and you can grant with a role binding object in a particular namespace",
    "start": "620649",
    "end": "628439"
  },
  {
    "text": "so that's the overview of the rback api two ways to define permissions and two",
    "start": "628439",
    "end": "634360"
  },
  {
    "text": "ways to grant them depending on the Scopes you want so next I'm going to talk about how you go about setting up",
    "start": "634360",
    "end": "640000"
  },
  {
    "text": "an AR back enabled cluster so first the easy way this is a one step process use",
    "start": "640000",
    "end": "648550"
  },
  {
    "text": "a distribution or installer that does it for you this is becoming more and more realistic actually most major installers",
    "start": "648550",
    "end": "657040"
  },
  {
    "text": "have at least an option for it and many do it by default so Cuba Cuba atom distributions like OpenShift gke",
    "start": "657040",
    "end": "664060"
  },
  {
    "text": "tectonic many of them have an option and many of them do it by default so this is actually becoming realistic which makes",
    "start": "664060",
    "end": "671079"
  },
  {
    "text": "me very happy but if you have your own deployment mechanism or you want to know what's happening under the covers",
    "start": "671079",
    "end": "677139"
  },
  {
    "text": "this is sort of the mechanics of what what you would do first you tell the API",
    "start": "677139",
    "end": "684069"
  },
  {
    "text": "server start with our back authorization and congratulations you're running an",
    "start": "684069",
    "end": "689559"
  },
  {
    "text": "are back enable cluster but there's a little more to it than that so when you",
    "start": "689559",
    "end": "695800"
  },
  {
    "text": "start an API server this way on start it automatically creates a set of default",
    "start": "695800",
    "end": "702129"
  },
  {
    "start": "700000",
    "end": "700000"
  },
  {
    "text": "roles and role bindings now these aren't magic you can actually go look in the the github repo and the the definitions",
    "start": "702129",
    "end": "709540"
  },
  {
    "text": "are there you can look at them create them in yourself you can edit them the",
    "start": "709540",
    "end": "714910"
  },
  {
    "text": "thing that is helpful is that these are Auto maintained so on every start the API server will recreate these or update",
    "start": "714910",
    "end": "722920"
  },
  {
    "text": "them adding in new permissions so this lets us go release to release and let",
    "start": "722920",
    "end": "728740"
  },
  {
    "text": "these automatic roles continue working you can opt out of the reconciliation if you want but",
    "start": "728740",
    "end": "734959"
  },
  {
    "text": "it's very handy there's a set of default bindings to system prefixed user names",
    "start": "734959",
    "end": "741769"
  },
  {
    "text": "so the thinking is there's a chicken-and-egg problem with any authorization system if you start it up",
    "start": "741769",
    "end": "748189"
  },
  {
    "text": "and it is denied by default then how can the first user grant permission to",
    "start": "748189",
    "end": "753499"
  },
  {
    "text": "anyone and so what this does is pin the",
    "start": "753499",
    "end": "759129"
  },
  {
    "text": "default roles to a set of system prefixed usernames which lets you",
    "start": "759129",
    "end": "764809"
  },
  {
    "text": "provision those components to use those usernames and they automatically have the right roles if you don't want to use",
    "start": "764809",
    "end": "771619"
  },
  {
    "text": "those usernames you don't have to you can use your own and set up bindings yourself but this makes the setup a lot",
    "start": "771619",
    "end": "779059"
  },
  {
    "text": "easier and we found to work well with most of the installed methods the one",
    "start": "779059",
    "end": "786519"
  },
  {
    "text": "the one break glass in case of emergency type of permission you would need would",
    "start": "786519",
    "end": "791629"
  },
  {
    "text": "be a bootstrap super user and so when you are setting up your cluster you",
    "start": "791629",
    "end": "799100"
  },
  {
    "text": "would want a credential with the system masters group this is the group that is",
    "start": "799100",
    "end": "804230"
  },
  {
    "text": "allowed to do anything to the API server and so typical use is to set up with",
    "start": "804230",
    "end": "810709"
  },
  {
    "text": "this delegate more scoped permissions to other users for normal day-to-day use",
    "start": "810709",
    "end": "815990"
  },
  {
    "text": "and then put this in a very safe place and don't use it for daily use this is a",
    "start": "815990",
    "end": "821120"
  },
  {
    "text": "break glass in case of emergency type of credential the second level is the",
    "start": "821120",
    "end": "827749"
  },
  {
    "text": "control plane components cube scheduler cube controller manager cube proxy if",
    "start": "827749",
    "end": "833809"
  },
  {
    "text": "you set these up to use these system prefixed user names they will have our",
    "start": "833809",
    "end": "839299"
  },
  {
    "text": "back roles that allow the thing is required by those components one note",
    "start": "839299",
    "end": "844339"
  },
  {
    "text": "with the cube controller manager the permissions required by the controller manager give it enough permission to",
    "start": "844339",
    "end": "851929"
  },
  {
    "text": "start up all the individual control loops that it manages there are actually individual roles for each control loop",
    "start": "851929",
    "end": "858649"
  },
  {
    "text": "and passing this flag to the controller manager will tell it to use service accounts for those for those loops",
    "start": "858649",
    "end": "865459"
  },
  {
    "text": "that's recommended so that or exploit in one loop doesn't allow it",
    "start": "865459",
    "end": "872240"
  },
  {
    "text": "to escape and accidentally start messing with completely unrelated resources the goal is least privilege principle",
    "start": "872240",
    "end": "879260"
  },
  {
    "text": "each control loop only has the power that it requires the other nice thing",
    "start": "879260",
    "end": "884510"
  },
  {
    "text": "about this is eventually it could let you run those control loops standalone in a pod completely isolated and just",
    "start": "884510",
    "end": "891709"
  },
  {
    "text": "run a pod with that control there parole and it would be scoped to just the",
    "start": "891709",
    "end": "897649"
  },
  {
    "text": "permissions it required that brings us to cubelets so cubelets are interesting",
    "start": "897649",
    "end": "903550"
  },
  {
    "text": "originally they started with our back to find role but as we as we started",
    "start": "903550",
    "end": "911420"
  },
  {
    "text": "thinking about what it looked like to enforce a node isolation our back didn't seem like a great fit so we actually",
    "start": "911420",
    "end": "917420"
  },
  {
    "text": "have a dedicated authorizer for nodes and the recommendation is to use that in combination with our back so",
    "start": "917420",
    "end": "924490"
  },
  {
    "text": "you can start up the API server telling it to use the node authorizer and the our back authorizer and if you give your",
    "start": "924490",
    "end": "932180"
  },
  {
    "text": "cubelets well-shaped credentials they will be given permission just to their own pods and",
    "start": "932180",
    "end": "938450"
  },
  {
    "text": "their own secrets and their own persistent volumes and not allowed to mess with other nodes pods and secrets",
    "start": "938450",
    "end": "944329"
  },
  {
    "text": "that is what's recommended that interacts well with the node TLS",
    "start": "944329",
    "end": "949430"
  },
  {
    "text": "bootstrapping but you can provision credentials for your nodes manually or some other",
    "start": "949430",
    "end": "954500"
  },
  {
    "text": "process if you want to as long as you make them well-formed with this username",
    "start": "954500",
    "end": "959510"
  },
  {
    "text": "in this group all right so at this point you have your bootstrap superuser that",
    "start": "959510",
    "end": "965870"
  },
  {
    "text": "can set up anything they need to set up you have your control plane members working you have your cubelets working",
    "start": "965870",
    "end": "972709"
  },
  {
    "text": "the next step is usually add-ons write Network plugins DNS the random things",
    "start": "972709",
    "end": "979430"
  },
  {
    "text": "that you need to run metrics logging whatever you are running that is accessing the API what do you do about",
    "start": "979430",
    "end": "984890"
  },
  {
    "text": "that well fortunately many already include our back role definitions in",
    "start": "984890",
    "end": "991519"
  },
  {
    "text": "their manifests that's that's really great to see it makes it easy to plug",
    "start": "991519",
    "end": "996860"
  },
  {
    "text": "these into secured clusters and even if you're not using our back it's actually very handy to have them sort of enumerate the API",
    "start": "996860",
    "end": "1004450"
  },
  {
    "text": "permissions that they require for those that don't you have a few options there",
    "start": "1004450",
    "end": "1011160"
  },
  {
    "text": "are some predefined roles these are",
    "start": "1011160",
    "end": "1017730"
  },
  {
    "start": "1014000",
    "end": "1014000"
  },
  {
    "text": "these are pretty broadly scoped there's the cluster admin role which is a super",
    "start": "1017760",
    "end": "1023530"
  },
  {
    "text": "user role can do anything to anything then we have admin edit and view roles and these are kind of three layer three",
    "start": "1023530",
    "end": "1031329"
  },
  {
    "text": "levels of permissions that are designed to be granted within a namespace so view",
    "start": "1031330",
    "end": "1037660"
  },
  {
    "text": "is read-only access to everything except secrets because those can be escalating",
    "start": "1037660",
    "end": "1043170"
  },
  {
    "text": "edit gives you write access to all the workload api's things that a normal app",
    "start": "1043170",
    "end": "1049120"
  },
  {
    "text": "developer would need to create so pods deployments replica sets daemon sets",
    "start": "1049120",
    "end": "1054820"
  },
  {
    "text": "although all the workload types of things services stuff like that admin includes everything edit does and",
    "start": "1054820",
    "end": "1061270"
  },
  {
    "text": "also includes permission to set up roles and role bindings in the namespace so",
    "start": "1061270",
    "end": "1066940"
  },
  {
    "text": "then you start getting into access management and so if you're looking at",
    "start": "1066940",
    "end": "1072070"
  },
  {
    "text": "what an addon needs maybe you can identify well this add-on would fit",
    "start": "1072070",
    "end": "1077200"
  },
  {
    "text": "within the view role all it's doing is like listing services for service discovery so you could grant one of",
    "start": "1077200",
    "end": "1083470"
  },
  {
    "text": "these existing roles and the way you can do that is to use some of the cube",
    "start": "1083470",
    "end": "1089050"
  },
  {
    "text": "control commands that will let you set up the role bindings so ideally you",
    "start": "1089050",
    "end": "1094510"
  },
  {
    "text": "would grant limit the most limited role you could to the service account that the add-on is running as and so ideally",
    "start": "1094510",
    "end": "1102520"
  },
  {
    "text": "it has a service account not the default one but figure out which service account is using create a role binding pick the",
    "start": "1102520",
    "end": "1110170"
  },
  {
    "text": "role that lets it do what it needs to do and grant it to it yes",
    "start": "1110170",
    "end": "1117300"
  },
  {
    "text": "so the question was if you're not using our back but a manifest has our back",
    "start": "1125149",
    "end": "1132120"
  },
  {
    "text": "objects can you still deploy it the answer is yes probably the API is independent of the",
    "start": "1132120",
    "end": "1139529"
  },
  {
    "text": "authorizer there are some edge cases around escalation detection where we",
    "start": "1139529",
    "end": "1145440"
  },
  {
    "text": "don't allow creating objects that have permissions that you don't already have and so there are some tricky",
    "start": "1145440",
    "end": "1152100"
  },
  {
    "text": "interactions there if you're the super user if you're using that bootstrap super user yes you can continue to",
    "start": "1152100",
    "end": "1158220"
  },
  {
    "text": "create anything if you are not the super user it gets a little bit more complicated super users so the system",
    "start": "1158220",
    "end": "1167460"
  },
  {
    "text": "masters group that that is recognized as a super user against the API server in general not just by our back so if you",
    "start": "1167460",
    "end": "1175380"
  },
  {
    "text": "grant to a specific service account that's ideal if everything in the namespace is still using the default",
    "start": "1175380",
    "end": "1180750"
  },
  {
    "text": "service account you can grant to that what you typically end up with there is a lot of permissions glommed onto the",
    "start": "1180750",
    "end": "1186779"
  },
  {
    "text": "default service account and it gets hard to differentiate one app from another it's also not great from an auditing",
    "start": "1186779",
    "end": "1192840"
  },
  {
    "text": "perspective if you're trying to figure out who did this thing and you've got 16 applications all running his little ball",
    "start": "1192840",
    "end": "1198809"
  },
  {
    "text": "service account it gets really tricky to know you know what what caused the problem here you can even grant a",
    "start": "1198809",
    "end": "1206460"
  },
  {
    "text": "permission to all service accounts in that namespace so you see the we're addressing the group system service",
    "start": "1206460",
    "end": "1212610"
  },
  {
    "text": "accounts and then the name of the namespace this is great if you're deploying several related things in",
    "start": "1212610",
    "end": "1217830"
  },
  {
    "text": "their own namespace you can grant to all of them at once and then we've all done",
    "start": "1217830",
    "end": "1224940"
  },
  {
    "text": "it sometimes that's necessary just make the thing a cluster admin depending on what",
    "start": "1224940",
    "end": "1230250"
  },
  {
    "text": "you're deploying if this is your credential integration mechanism or your network network plug-in you probably",
    "start": "1230250",
    "end": "1238620"
  },
  {
    "text": "trust it very highly already and so making it cluster admin we've all done it",
    "start": "1238620",
    "end": "1245450"
  },
  {
    "text": "ideally there would be a custom role that perfectly fits least privilege",
    "start": "1246470",
    "end": "1251940"
  },
  {
    "text": "required by this app and so now I'm going to talk about ways to build a",
    "start": "1251940",
    "end": "1257940"
  },
  {
    "text": "custom role so option number one know every API call that an app makes or is ever going to",
    "start": "1257940",
    "end": "1264960"
  },
  {
    "start": "1260000",
    "end": "1260000"
  },
  {
    "text": "make and then have fun this describes",
    "start": "1264960",
    "end": "1272280"
  },
  {
    "text": "the last two years of my life actually and it wasn't great so I built this in",
    "start": "1272280",
    "end": "1281930"
  },
  {
    "text": "kubernetes 1:8 there are structured audit logs which mean that we can very",
    "start": "1281930",
    "end": "1287670"
  },
  {
    "text": "easily take a look at who is making requests and all the details about the",
    "start": "1287670",
    "end": "1293130"
  },
  {
    "text": "requests all the same attributes that feed into the authorizer are available via the audit logs and all the user info",
    "start": "1293130",
    "end": "1300330"
  },
  {
    "text": "that feeds into the authorizer available via the audit logs and so this is",
    "start": "1300330",
    "end": "1305370"
  },
  {
    "text": "actually a really great way to build policy automatically so the first thing you can do is enable audit logs run the",
    "start": "1305370",
    "end": "1313920"
  },
  {
    "text": "application through its paces have it do everything it's going to do with a service account that is specific to that",
    "start": "1313920",
    "end": "1319470"
  },
  {
    "text": "application and then process the audit logs and generate a role that encompasses what it did and so I",
    "start": "1319470",
    "end": "1327090"
  },
  {
    "text": "actually built this tool so I call this audit to our back I'm from Red Hat so it's shamelessly stolen from audit to allow for st lennox",
    "start": "1327090",
    "end": "1334500"
  },
  {
    "text": "and i want to show you a video demo so i have a cluster running and I've got the",
    "start": "1334500",
    "end": "1341790"
  },
  {
    "text": "audit log you see this that's amazing",
    "start": "1341790",
    "end": "1349280"
  },
  {
    "text": "the pre-canned video died oh there we go okay so when I list pods I can see that",
    "start": "1349280",
    "end": "1356520"
  },
  {
    "text": "my API request showed up in the audit logs yeah I'm gonna have to come out",
    "start": "1356520",
    "end": "1363720"
  },
  {
    "text": "here and watch that's funny alright so I'm gonna create a job here and while",
    "start": "1363720",
    "end": "1369480"
  },
  {
    "text": "it's getting going let's look at what the job is gonna do this is just a bash script that uses cube control to try to",
    "start": "1369480",
    "end": "1374970"
  },
  {
    "text": "use of things so it's gonna read a config map try to delete and update it look at pods and a couple namespaces",
    "start": "1374970",
    "end": "1382470"
  },
  {
    "text": "look at nodes and then run and clean up a couple sub jobs and so if I look at",
    "start": "1382470",
    "end": "1389130"
  },
  {
    "text": "the logs for this thing it's actually stuck on first step which makes sense because it's running as a service account which",
    "start": "1389130",
    "end": "1394979"
  },
  {
    "text": "has zero permissions so let's use audit to our back to set up a role that's",
    "start": "1394979",
    "end": "1401399"
  },
  {
    "text": "going to let this job do what it needs to do so the first thing we can do is",
    "start": "1401399",
    "end": "1406609"
  },
  {
    "text": "run audit to our back feeding it the audit log and the service account that",
    "start": "1406609",
    "end": "1413009"
  },
  {
    "text": "we want it to pay attention to and as soon as we run that it spits out a role and that role only has a single",
    "start": "1413009",
    "end": "1420840"
  },
  {
    "text": "permission which is read access to the config map which is what I'm trying to do it also look no hands it also has a",
    "start": "1420840",
    "end": "1431609"
  },
  {
    "text": "role binding which grants that role to that service account and so I can",
    "start": "1431609",
    "end": "1437009"
  },
  {
    "text": "actually just pipe that to keep control apply and as soon as I do my job",
    "start": "1437009",
    "end": "1442139"
  },
  {
    "text": "succeeds at that step and now it's stuck on the next step so what I'm gonna do",
    "start": "1442139",
    "end": "1448859"
  },
  {
    "text": "now is set up a loop that just keeps looking at the log and generating a role",
    "start": "1448859",
    "end": "1455789"
  },
  {
    "text": "and applying it and I'm actually gonna dump it out to this yamo file so we can see what's going on but that's just for",
    "start": "1455789",
    "end": "1462749"
  },
  {
    "text": "our benefit and before I start that I'm gonna set up a diff so we can see changes as they come in all right so now",
    "start": "1462749",
    "end": "1471389"
  },
  {
    "text": "we're gonna kick off the apply loop and start taking a look and immediately we",
    "start": "1471389",
    "end": "1477059"
  },
  {
    "text": "start see create permissions come in we see delete and update permissions come",
    "start": "1477059",
    "end": "1482190"
  },
  {
    "text": "in now let me zoom out so you can see what's going on or not see what's going",
    "start": "1482190",
    "end": "1487440"
  },
  {
    "text": "on it's dealing with batch jobs so it's different API groups it's moving and",
    "start": "1487440",
    "end": "1494369"
  },
  {
    "text": "collapsing permissions so if you start dealing with things with multiple names is it going to combine those into sort",
    "start": "1494369",
    "end": "1500129"
  },
  {
    "text": "of the minimal rule that covers them it's looking at pod logs so it's dealing with sub resources and we're just gonna",
    "start": "1500129",
    "end": "1506639"
  },
  {
    "text": "let this thing run and by the end we have the role that covers it and it",
    "start": "1506639",
    "end": "1511679"
  },
  {
    "text": "actually will differentiate custom roles and roles so it will give you cluster permissions and namespace permissions",
    "start": "1511679",
    "end": "1517529"
  },
  {
    "text": "and all the bindings that are required to set that up and if we wait for a",
    "start": "1517529",
    "end": "1522929"
  },
  {
    "text": "couple seconds I think it's about done and success done so it was pre-recorded",
    "start": "1522929",
    "end": "1542029"
  },
  {
    "text": "but there was no editing so this is the kind of thing that I would spend a",
    "start": "1542029",
    "end": "1547940"
  },
  {
    "text": "couple hours building by hand and now it gives us immediately something that may",
    "start": "1547940",
    "end": "1554480"
  },
  {
    "text": "require a little bit of fix-up you might look at that and say oh well actually I want this to be a little broader a little narrower but it gets you like 97%",
    "start": "1554480",
    "end": "1561649"
  },
  {
    "text": "of the way there so just to talk about a few of the things that this is doing it",
    "start": "1561649",
    "end": "1568700"
  },
  {
    "text": "does some smart verb expansion so if you list pods at that point authorization",
    "start": "1568700",
    "end": "1574970"
  },
  {
    "text": "was you've already seen the content of all of those objects so if you list and",
    "start": "1574970",
    "end": "1579980"
  },
  {
    "text": "we allow that we also let you get and watch because that's not exposing any more information if you update something",
    "start": "1579980",
    "end": "1586970"
  },
  {
    "text": "we give you patch and update so the kinds of things that encourage best practices so that in a month when you",
    "start": "1586970",
    "end": "1593960"
  },
  {
    "text": "figure out I'm getting a lot of conflicts I should start using patch you don't have to come back and like update your role you could update we're gonna",
    "start": "1593960",
    "end": "1600380"
  },
  {
    "text": "let you patch as well it does multi name inference so if you access a pod named a",
    "start": "1600380",
    "end": "1606440"
  },
  {
    "text": "and a pod named B it can collapse that and say you can actually access a pod with any name that's optional you don't",
    "start": "1606440",
    "end": "1613970"
  },
  {
    "text": "have to do that but if you're trying to infer roles from usage patterns letting",
    "start": "1613970",
    "end": "1620769"
  },
  {
    "text": "exercising the app with a few example names across a few example namespaces",
    "start": "1620769",
    "end": "1626679"
  },
  {
    "text": "kind of indicates I'm going to be working with arbitrarily named objects same thing for a multi namespace if you",
    "start": "1626679",
    "end": "1633740"
  },
  {
    "text": "do something to pods and namespace a and you do the same thing to pods and name space be it actually moves that",
    "start": "1633740",
    "end": "1638779"
  },
  {
    "text": "permission up to a cluster role and says granted across namespaces because you're no longer constrained to a single",
    "start": "1638779",
    "end": "1643909"
  },
  {
    "text": "namespace again it's optional you don't have to do those expansions if you don't want to so a couple ways you could use",
    "start": "1643909",
    "end": "1650360"
  },
  {
    "text": "this one is the way we saw here which is denied by default watch the audit log",
    "start": "1650360",
    "end": "1658700"
  },
  {
    "text": "then apply and allow that works great that's the most secure thing to do",
    "start": "1658700",
    "end": "1663890"
  },
  {
    "text": "depending on the application characteristics your your application might be crashed looping every time it's",
    "start": "1663890",
    "end": "1669140"
  },
  {
    "text": "denied so I wrote mine to be tolerant of that and just kind of keep retrying but",
    "start": "1669140",
    "end": "1674210"
  },
  {
    "text": "that might not work well for your application an alternative is to run in a test environment with CI tests that",
    "start": "1674210",
    "end": "1681770"
  },
  {
    "text": "just exercise everything your app is going to do and give it full permission in that environment and then after the",
    "start": "1681770",
    "end": "1687890"
  },
  {
    "text": "fact post process that audit log build roles from it and then compare that to",
    "start": "1687890",
    "end": "1692930"
  },
  {
    "text": "the committed roles for that app and say oh you know what the current build",
    "start": "1692930",
    "end": "1698030"
  },
  {
    "text": "started using more permissions so I'm gonna fail that CI build and open a pull request saying hey new permissions make",
    "start": "1698030",
    "end": "1705410"
  },
  {
    "text": "sure these are okay so there are lots of other ways you could use this I'm excited to see how people are going to",
    "start": "1705410",
    "end": "1710870"
  },
  {
    "text": "use this and with that I actually want to finish up by talking about a new feature in 1/9 which is aggregated roles",
    "start": "1710870",
    "end": "1719570"
  },
  {
    "text": "[Applause] so one of the one of the things that we're seeing as the extension",
    "start": "1719570",
    "end": "1724670"
  },
  {
    "start": "1720000",
    "end": "1720000"
  },
  {
    "text": "capabilities around kubernetes grow it's easier for people to create custom",
    "start": "1724670",
    "end": "1729830"
  },
  {
    "text": "resources add in their own API servers serving their own API types the question is how does this interact with policy",
    "start": "1729830",
    "end": "1736940"
  },
  {
    "text": "when I when I tell kubernetes hey I have a custom resource foo bar I need to add",
    "start": "1736940",
    "end": "1743840"
  },
  {
    "text": "permissions for this resource to the appropriate roles and so that's what aggregator drools lets you do so I",
    "start": "1743840",
    "end": "1750920"
  },
  {
    "text": "mentioned that there are admin edit view roles that are designed to be granted",
    "start": "1750920",
    "end": "1756290"
  },
  {
    "text": "within namespaces as of 1-9 these are aggregated roles which means that you",
    "start": "1756290",
    "end": "1762590"
  },
  {
    "text": "can create a separate cluster role and label it and it the permissions in that",
    "start": "1762590",
    "end": "1768560"
  },
  {
    "text": "role will get pulled into the appropriate admin edit or view role and",
    "start": "1768560",
    "end": "1774140"
  },
  {
    "text": "if you remove your cluster role those permissions get yanked out and so this",
    "start": "1774140",
    "end": "1779810"
  },
  {
    "text": "makes it really easy to define a cluster role alongside your custom resource",
    "start": "1779810",
    "end": "1786140"
  },
  {
    "text": "definition and declaratively create a new API type and the associated permissions all at one",
    "start": "1786140",
    "end": "1792980"
  },
  {
    "text": "and those get folded into the existing rolls and if later you decide that this",
    "start": "1792980",
    "end": "1798320"
  },
  {
    "text": "API tape has to go away you do the same thing you delete your definition and your role and those permissions get",
    "start": "1798320",
    "end": "1804620"
  },
  {
    "text": "pulled out so this is a really powerful way to contribute without having to",
    "start": "1804620",
    "end": "1810500"
  },
  {
    "text": "manage those admin edit view roles yourself all right I think we have about",
    "start": "1810500",
    "end": "1816559"
  },
  {
    "text": "five minutes for questions have you answer any questions if we run over I'll yell no this is the last session what am i what I was talking about thank you",
    "start": "1816559",
    "end": "1824480"
  },
  {
    "text": "guys for coming I'm surprised you made it up here any questions yes",
    "start": "1824480",
    "end": "1838330"
  },
  {
    "text": "so the question was can you mix namespace and non namespace permissions in a single cluster role and the answer",
    "start": "1858160",
    "end": "1864920"
  },
  {
    "text": "is no you would need two definitions because if you grant the first one globally you're granting all the",
    "start": "1864920",
    "end": "1870560"
  },
  {
    "text": "permissions defined in it globally so if you said I want to edit and delete pods",
    "start": "1870560",
    "end": "1876370"
  },
  {
    "text": "and you grant that globally they get all of those permissions globally so you",
    "start": "1876370",
    "end": "1881480"
  },
  {
    "text": "need to to role objects for that yes",
    "start": "1881480",
    "end": "1887980"
  },
  {
    "text": "is there a feature to add a mapping from an enterprise role you mean like in some",
    "start": "1893999",
    "end": "1899220"
  },
  {
    "text": "external authorization system yes the",
    "start": "1899220",
    "end": "1905309"
  },
  {
    "text": "feature is the kubernetes api the idea is that you can actually use a glue",
    "start": "1905309",
    "end": "1913830"
  },
  {
    "text": "client to program down policy into a kubernetes cluster there's not a",
    "start": "1913830",
    "end": "1919379"
  },
  {
    "text": "built-in feature you would use the API to transfer that yes",
    "start": "1919379",
    "end": "1927889"
  },
  {
    "text": "so the question was are there special permissions for auto-scaling so the horizontal pod autoscaler resources are",
    "start": "1941920",
    "end": "1948310"
  },
  {
    "text": "their own resource and so you can permission those individually you could",
    "start": "1948310",
    "end": "1954250"
  },
  {
    "text": "allow or disallow a user from changing horizontal pod autoscaler resources the",
    "start": "1954250",
    "end": "1962710"
  },
  {
    "text": "HPA controller uses scale sub resources on deployments and replica sets and so",
    "start": "1962710",
    "end": "1971020"
  },
  {
    "text": "we didn't really talk about sub resources but some resources are a way",
    "start": "1971020",
    "end": "1976300"
  },
  {
    "text": "of giving you a different end point for restricted subsets of operations so HP a",
    "start": "1976300",
    "end": "1984310"
  },
  {
    "text": "controller will work with scale sub resources and typically only it is allowed to address those controllers",
    "start": "1984310",
    "end": "1992350"
  },
  {
    "text": "also update status sub resources and the API server can permission those differently and only pay attention to",
    "start": "1992350",
    "end": "1999040"
  },
  {
    "text": "status content when it comes in via a status sub resource I'm not sure if that",
    "start": "1999040",
    "end": "2004650"
  },
  {
    "text": "answers the question but the two the two points of permissioning are different",
    "start": "2004650",
    "end": "2011040"
  },
  {
    "text": "resources like HPA and then different sub resources yes",
    "start": "2011040",
    "end": "2018620"
  },
  {
    "text": "okay so the question was our audit logs too verbose to run in production and the",
    "start": "2023160",
    "end": "2029410"
  },
  {
    "text": "answer is it depends there's actually a really expressive",
    "start": "2029410",
    "end": "2034510"
  },
  {
    "text": "policy for describing what you want to show up and awed it so you can scope events to a particular user or a",
    "start": "2034510",
    "end": "2040570"
  },
  {
    "text": "particular resource or a particular set of resources and define what verbosity",
    "start": "2040570",
    "end": "2045580"
  },
  {
    "text": "you want for each of those so you could say I only want metadata for this user or I only want metadata for these",
    "start": "2045580",
    "end": "2052000"
  },
  {
    "text": "resources or I want you to ignore node update calls completely because those",
    "start": "2052000",
    "end": "2058840"
  },
  {
    "text": "happen 5,000 times every 10 seconds you have a lot of control about what you",
    "start": "2058840",
    "end": "2064389"
  },
  {
    "text": "when you put in the other logs yes",
    "start": "2064390",
    "end": "2068460"
  },
  {
    "text": "yeah so how does our back work with multiple clusters there are a couple",
    "start": "2074540",
    "end": "2081830"
  },
  {
    "text": "options one is the the program down of sort of Federation model where you",
    "start": "2081830",
    "end": "2086990"
  },
  {
    "text": "define it here and then it gets synced down to the standalone clusters that gives you the ability to coast if the",
    "start": "2086990",
    "end": "2092750"
  },
  {
    "text": "central one is unreachable the other option is to delegate like actively",
    "start": "2092750",
    "end": "2098930"
  },
  {
    "text": "delegate and this is this is actually the model that's used for aggregated API servers so the the webhook authorization",
    "start": "2098930",
    "end": "2109210"
  },
  {
    "text": "mode is actually compatible with pointing it at another kubernetes cluster and so if you have a extension",
    "start": "2109210",
    "end": "2117380"
  },
  {
    "text": "API server those typically set themselves up to use webhook authorization checks against the central",
    "start": "2117380",
    "end": "2124700"
  },
  {
    "text": "kubernetes api server and so you have our back policy defined here and all the other clusters are using web hooks so",
    "start": "2124700",
    "end": "2131030"
  },
  {
    "text": "you can either program down or you can delegate up depending on like your toleration of performance the",
    "start": "2131030",
    "end": "2139010"
  },
  {
    "text": "performance capabilities of this is for one and what you want to happen when there's an outage yes",
    "start": "2139010",
    "end": "2147400"
  },
  {
    "text": "No so if you were paying attention all of the attributes that go to the",
    "start": "2154230",
    "end": "2159819"
  },
  {
    "text": "authorizer come from the URL and on a create api request the name is not in",
    "start": "2159819",
    "end": "2165640"
  },
  {
    "text": "the URL so the name is not available for the create permission what we typically",
    "start": "2165640",
    "end": "2172690"
  },
  {
    "text": "have seen done is having a central sort",
    "start": "2172690",
    "end": "2178089"
  },
  {
    "text": "of namespace provisioner where you ask it make a namespace for me and it creates the namespace gives you a role",
    "start": "2178089",
    "end": "2183910"
  },
  {
    "text": "in it and then hands it to you yeah yeah",
    "start": "2183910",
    "end": "2207369"
  },
  {
    "text": "name not being available as part of create does add challenges we are we are",
    "start": "2207369",
    "end": "2213910"
  },
  {
    "text": "well aware we're trying to think of ways to address it but yeah that's an ongoing effort",
    "start": "2213910",
    "end": "2221400"
  },
  {
    "text": "the question was are there plans to add conditions to role specifications it's been discussed we want to be really",
    "start": "2231160",
    "end": "2237640"
  },
  {
    "text": "careful about not breaking delegation cases so the more input there is to the",
    "start": "2237640",
    "end": "2244450"
  },
  {
    "text": "authorization decision the harder it gets to kind of reconstruct accurately all of the context input for a delegated",
    "start": "2244450",
    "end": "2252160"
  },
  {
    "text": "check and so there's there's definitely interest in it I think that is something that we're kind of currently talking",
    "start": "2252160",
    "end": "2258400"
  },
  {
    "text": "about and thinking about whether it makes sense to do in our back proper or as a layer or some combination of the",
    "start": "2258400",
    "end": "2264220"
  },
  {
    "text": "two yes",
    "start": "2264220",
    "end": "2269099"
  },
  {
    "text": "there's no projects I'm aware of I mean the the audits are back tool actually",
    "start": "2276970",
    "end": "2282550"
  },
  {
    "text": "does a simulated check internally like the way it works is it looks at the role",
    "start": "2282550",
    "end": "2288520"
  },
  {
    "text": "it's set up so far looks at the request that was audit logged and says would",
    "start": "2288520",
    "end": "2294190"
  },
  {
    "text": "this have allowed that and if not then go at it in so I mean it's it's not difficult to reuse what's there to to",
    "start": "2294190",
    "end": "2302470"
  },
  {
    "text": "run those simulations yes",
    "start": "2302470",
    "end": "2307380"
  },
  {
    "text": "there any tools that create users and assigned roles so kubernetes is",
    "start": "2314090",
    "end": "2322580"
  },
  {
    "text": "philosophy around authentication is to try to stay relatively neutral and not",
    "start": "2322580",
    "end": "2328430"
  },
  {
    "text": "have users be a first-class concept because everybody's authentication is a",
    "start": "2328430",
    "end": "2334580"
  },
  {
    "text": "special snowflake and so there aren't api's around user management as such",
    "start": "2334580",
    "end": "2343720"
  },
  {
    "text": "when you're talking about like are back if the user authority is over here and",
    "start": "2343720",
    "end": "2349940"
  },
  {
    "text": "the authorization decisions are over here no there's not not a particularly strong connection between the two time",
    "start": "2349940",
    "end": "2359930"
  },
  {
    "text": "for one more and then I'll stick around as long as people want to but now you're",
    "start": "2359930",
    "end": "2368300"
  },
  {
    "text": "also yeah all right I appreciate it",
    "start": "2368300",
    "end": "2373580"
  },
  {
    "text": "thank you guys [Applause]",
    "start": "2373580",
    "end": "2379549"
  }
]