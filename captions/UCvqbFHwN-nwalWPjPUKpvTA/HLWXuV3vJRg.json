[
  {
    "text": "thank you everyone for coming my name is Rob Scott I work at Google on GK networking and today we're going to be",
    "start": "160",
    "end": "6160"
  },
  {
    "text": "talking about referential authorization and what it might look like in kubernetes uh this is particularly",
    "start": "6160",
    "end": "12519"
  },
  {
    "text": "relevant to me because I've spent a lot of time thinking about Ingress and Gateway API and how unfortunately",
    "start": "12519",
    "end": "18760"
  },
  {
    "text": "insecure many of the implementations of those apis are uh and hopefully this can",
    "start": "18760",
    "end": "24640"
  },
  {
    "text": "help hey everyone I'm Mo uh I work at Microsoft uh so this talk really appeals",
    "start": "24640",
    "end": "30279"
  },
  {
    "text": "to me because it intersects uh multiple Community roles that I hold uh so I'm a seot lead as well as a member of the",
    "start": "30279",
    "end": "36879"
  },
  {
    "text": "kubernetes security response committee uh so yeah I'm really looking forward to having this",
    "start": "36879",
    "end": "42000"
  },
  {
    "text": "stuff uh so Secrets uh so I like to keep my secrets to myself and I hope you do",
    "start": "42000",
    "end": "47640"
  },
  {
    "text": "as well and unfortunately that's not always the case in",
    "start": "47640",
    "end": "53559"
  },
  {
    "text": "kubernetes uh so in particular if you run Ingress controllers today uh you",
    "start": "53559",
    "end": "59079"
  },
  {
    "text": "give them access to all Secrets uh whether you thought about it or not but this is not a good thing right um it's",
    "start": "59079",
    "end": "65518"
  },
  {
    "text": "actually a really bad State the isolation between like the data plane and control plane of most",
    "start": "65519",
    "end": "71799"
  },
  {
    "text": "Ingress controllers is actually pretty weak and when I say control plane I mean like the go code that is your kubernetes",
    "start": "71799",
    "end": "78000"
  },
  {
    "text": "controller and your data plane is the actual raw like C code that's running your networking stuff right and as you",
    "start": "78000",
    "end": "85840"
  },
  {
    "text": "can imagine when you put these things close to each other in ways that that aren't necessarily what they were",
    "start": "85840",
    "end": "91159"
  },
  {
    "text": "designed to do well you get cves um so I'm going to pick on the Ingress engine",
    "start": "91159",
    "end": "97159"
  },
  {
    "text": "X for a little bit here and you know when you talk about cves you want to pick you want to find the like the",
    "start": "97159",
    "end": "102280"
  },
  {
    "text": "really good ones right like or the really bad ones that are high severity so the you know we've had seven so far",
    "start": "102280",
    "end": "108320"
  },
  {
    "text": "and I was like okay I'll pick the worst one oh I'm sorry they were all high so they're all bad um so we'll just we'll",
    "start": "108320",
    "end": "114439"
  },
  {
    "text": "pick my favorite one because it's just funny um so did you know that you can",
    "start": "114439",
    "end": "120640"
  },
  {
    "text": "embed Lua in your Ingress config and have engine X process it for you and you know what could go wrong it's amazing uh",
    "start": "120640",
    "end": "128840"
  },
  {
    "text": "so like what if I had some Lua that wanted to read a file on disk and maybe I wanted to put the contents of that",
    "start": "128840",
    "end": "135239"
  },
  {
    "text": "file into a variable and then maybe I wanted to have an endpoint on my Ingress",
    "start": "135239",
    "end": "142560"
  },
  {
    "text": "that just you know output that that nice little variable you know and so now if I",
    "start": "142560",
    "end": "148640"
  },
  {
    "text": "can make an Ingress I can just I don't know Echo out that service account controller token that by",
    "start": "148640",
    "end": "154400"
  },
  {
    "text": "the way you decided to grant full read access to all secrets too um so you know",
    "start": "154400",
    "end": "161239"
  },
  {
    "text": "it's not great uh there goes all your multi-tenancy all your fancy security controls because you use those Ingress",
    "start": "161239",
    "end": "167640"
  },
  {
    "text": "controller so how did we fix this uh so we we made a new version of Ingress",
    "start": "167640",
    "end": "173159"
  },
  {
    "text": "engine X and then we turned that feature off that that's how we fixed it we just we just said don't do that",
    "start": "173159",
    "end": "180800"
  },
  {
    "text": "um so what can you do today without all",
    "start": "180800",
    "end": "186000"
  },
  {
    "text": "this fancy stuff that we're going to talk about well Ingress controllers like the iso",
    "start": "186000",
    "end": "193319"
  },
  {
    "text": "one do take great care to separate their control plane the kubernetes controller",
    "start": "193319",
    "end": "199120"
  },
  {
    "text": "from their data plane the actual networking stack right uh so pick an Ingress implementation that has that",
    "start": "199120",
    "end": "206640"
  },
  {
    "text": "separation right so that way even if you do embed Lua config it doesn't end up",
    "start": "206640",
    "end": "213280"
  },
  {
    "text": "causing a cve the other thing it's not particularly ergonomic is you can run",
    "start": "213280",
    "end": "219959"
  },
  {
    "text": "multiple instances of your Ingress uh implementation in isolated name spaces",
    "start": "219959",
    "end": "225040"
  },
  {
    "text": "and only grant them access to that specific Nam space right so instead of having one Mega Ingress controller you",
    "start": "225040",
    "end": "230920"
  },
  {
    "text": "can have many small ones you have a CV in one you lose isolation for that one but not all of them right so it's a way",
    "start": "230920",
    "end": "238040"
  },
  {
    "text": "of limiting the blast radius for when things go wrong so Mo helped paint part of the",
    "start": "238040",
    "end": "245040"
  },
  {
    "text": "picture here of how we ended up thinking about referential authorization but there was also another discussion kind",
    "start": "245040",
    "end": "251439"
  },
  {
    "text": "of going on in parallel uh we were we were obviously thinking about the limitations of safety of Ingress",
    "start": "251439",
    "end": "258120"
  },
  {
    "text": "controllers uh but at the same time we were getting feature requests to cross namespace boundaries and what what do I",
    "start": "258120",
    "end": "264759"
  },
  {
    "text": "mean by that I mean the ability to reference something in another namespace uh so for example in Gateway API which",
    "start": "264759",
    "end": "272400"
  },
  {
    "text": "I'm very familiar with uh there was a request to reference a TLS certificate",
    "start": "272400",
    "end": "278240"
  },
  {
    "text": "in a different namespace so let's say your TLS admins for example uh are all",
    "start": "278240",
    "end": "283440"
  },
  {
    "text": "running uh you know in one namespace they want to manage their Sears in that namespace but your infrastructure admins",
    "start": "283440",
    "end": "289880"
  },
  {
    "text": "or your app admins may want to have that configuration in a different place and",
    "start": "289880",
    "end": "295039"
  },
  {
    "text": "they don't need to Siege other secrets so why couldn't we just have some kind of cross namespace mechanism that could",
    "start": "295039",
    "end": "301639"
  },
  {
    "text": "do that safely then similarly what if you have all your infrastructure all your load balancing and routing",
    "start": "301639",
    "end": "307960"
  },
  {
    "text": "configuration in one place in one namespace and all your applications that you're trying to route to are in",
    "start": "307960",
    "end": "313919"
  },
  {
    "text": "different namespaces what if you could do that safely that would be really nice uh and",
    "start": "313919",
    "end": "319720"
  },
  {
    "text": "then along those same lines storage Sig storage was thinking about hey what if we could provision a new volume from",
    "start": "319720",
    "end": "326919"
  },
  {
    "text": "some other namespace so you had all these use cases coming together uh and",
    "start": "326919",
    "end": "333120"
  },
  {
    "text": "this was as we were developing Gateway API and this was something that we really wanted to support natively in",
    "start": "333120",
    "end": "338840"
  },
  {
    "text": "API so one of the uh projects that we looked to for inspiration when we",
    "start": "338840",
    "end": "344720"
  },
  {
    "text": "developed Gateway API was contour and Contour had a concept like this uh and",
    "start": "344720",
    "end": "350600"
  },
  {
    "text": "this allowed you to say via annotation because everything in Ingress was an annotation unfortunately uh that you",
    "start": "350600",
    "end": "357280"
  },
  {
    "text": "could say TLS certificate namespace prod Sears and this meant that any reference",
    "start": "357280",
    "end": "362880"
  },
  {
    "text": "to a secret was actually to that other namespace and we took that to the next",
    "start": "362880",
    "end": "368880"
  },
  {
    "text": "level with Gateway API and now in Gateway API you can just specify the name space directly inside the",
    "start": "368880",
    "end": "375840"
  },
  {
    "text": "certificate ref and you may say well hold on a second that doesn't maybe sound like the safest thing ever because",
    "start": "375840",
    "end": "383039"
  },
  {
    "text": "you know you do you really want your gateway to be able to read any Secret in your cluster maybe that's not the best",
    "start": "383039",
    "end": "390080"
  },
  {
    "text": "and that's correct and so this on its own is not valid you have to pair that with the other half of the handshake is",
    "start": "390080",
    "end": "397120"
  },
  {
    "text": "what we call it so if one half of the handshake is this reference pointing out you need something else to say I trust",
    "start": "397120",
    "end": "403400"
  },
  {
    "text": "that reference so we introduced an API called reference Grant uh and that API",
    "start": "403400",
    "end": "408919"
  },
  {
    "text": "is pretty straightforward it says I as the owner of this secret trust",
    "start": "408919",
    "end": "414199"
  },
  {
    "text": "references from gateways in the prods Nam space in this case uh and this is",
    "start": "414199",
    "end": "420879"
  },
  {
    "text": "actually working fairly well this exists in Gateway API today it's also used by Sig storage now uh and as we're starting",
    "start": "420879",
    "end": "427759"
  },
  {
    "text": "to see more usage of it it became clear that maybe we should try and make this a more formal broader concept than just",
    "start": "427759",
    "end": "434280"
  },
  {
    "text": "Gateway API and actually try to bring this into tree but this on its own is still full",
    "start": "434280",
    "end": "442120"
  },
  {
    "text": "of limitations and those became clear as we started the discussion of how do we take this into tree into kubernetes",
    "start": "442120",
    "end": "448400"
  },
  {
    "text": "directly uh this in its current state relies on controllers to implement all the logic so relies on your controllers",
    "start": "448400",
    "end": "455560"
  },
  {
    "text": "implementing this well and unfortunately this doesn't do anything to limit the read access of those controllers by",
    "start": "455560",
    "end": "462720"
  },
  {
    "text": "default the controllers can still see everything and they're just limiting what they expose uh or configure and",
    "start": "462720",
    "end": "470560"
  },
  {
    "text": "then controllers still needed to really understand how to follow the references and this this sounds kind of obvious",
    "start": "470560",
    "end": "476639"
  },
  {
    "text": "right if you're implementing Gateway API you know where the the references are that you care about but if you're",
    "start": "476639",
    "end": "481840"
  },
  {
    "text": "thinking about implementing an authorizer based on this you need something that's a little bit more generic so that anything for any API",
    "start": "481840",
    "end": "489560"
  },
  {
    "text": "could work and related to that in the current mode there's no way to differentiate different kinds of",
    "start": "489560",
    "end": "496720"
  },
  {
    "text": "references in the same API so say you know you notice that from gateways to",
    "start": "496720",
    "end": "501919"
  },
  {
    "text": "Secrets what if you're saying from pods pods have a million different object references uh which one are you trying",
    "start": "501919",
    "end": "508639"
  },
  {
    "text": "to give access to it's it's not as clear as it might seem so those are the",
    "start": "508639",
    "end": "514320"
  },
  {
    "text": "limitations of what we have today uh let's talk about what's next so what are the goals for an API an",
    "start": "514320",
    "end": "523479"
  },
  {
    "text": "authorizer that can help us fix these issues right so we want the",
    "start": "523479",
    "end": "529160"
  },
  {
    "text": "authorization access to match what is actually necessary for the controller to",
    "start": "529160",
    "end": "534360"
  },
  {
    "text": "work at runtime right you can no longer statically configure broad read access",
    "start": "534360",
    "end": "539480"
  },
  {
    "text": "to secrets for example right um the other thing that was important for us is",
    "start": "539480",
    "end": "545440"
  },
  {
    "text": "the users that want to adopt this API primarily um storage related use cases",
    "start": "545440",
    "end": "550720"
  },
  {
    "text": "and networking their apis are already segmented by this concept of a class and",
    "start": "550720",
    "end": "556640"
  },
  {
    "text": "so we felt like at least optionally we should support that as well um since it's important to those",
    "start": "556640",
    "end": "562800"
  },
  {
    "text": "environments uh Rob has already discussed the reference Grant stuff so we want some mechanism to extend all",
    "start": "562800",
    "end": "569560"
  },
  {
    "text": "this to across namespaces and probably most important of all whatever we do here it needs to",
    "start": "569560",
    "end": "575800"
  },
  {
    "text": "be good enough and easy enough to use that people will actually adopt it",
    "start": "575800",
    "end": "582320"
  },
  {
    "text": "right um so we have a few personas in the apis where we're building right we",
    "start": "583519",
    "end": "588720"
  },
  {
    "text": "have Alex the API author so apis and kubernetes tend to be CDs uh we have Kai",
    "start": "588720",
    "end": "594760"
  },
  {
    "text": "the controller author and we have Rohan the resource owner right uh you might be thinking for a second why are Alex and",
    "start": "594760",
    "end": "601959"
  },
  {
    "text": "Kai different uh individuals well the reality is in simple projects they're not you know you write your own crds you",
    "start": "601959",
    "end": "608920"
  },
  {
    "text": "write the controllers that match and everything's fine Gateway API is complex enough where you have effectively the",
    "start": "608920",
    "end": "614640"
  },
  {
    "text": "reference crds and many many implementations right so that's why we kept these as separate",
    "start": "614640",
    "end": "620959"
  },
  {
    "text": "personas so what does Alex do right so Alex has a core responsibility of being",
    "start": "620959",
    "end": "626720"
  },
  {
    "text": "able to understand the schema and therefore uh he can find the references right so it's easier to sort of think",
    "start": "626720",
    "end": "632920"
  },
  {
    "text": "about this through example right so we have this reference pattern resource",
    "start": "632920",
    "end": "638120"
  },
  {
    "text": "name to be determined um and it is saying that hey when you",
    "start": "638120",
    "end": "643839"
  },
  {
    "text": "see a Gateway resource at a particular version right versions matter a lot for finding",
    "start": "643839",
    "end": "649959"
  },
  {
    "text": "references because crd schemas evolve over time so you can't just pick a specific place where your um references",
    "start": "649959",
    "end": "656920"
  },
  {
    "text": "live but at the V1 version uh Gateway API does have a class concept",
    "start": "656920",
    "end": "662360"
  },
  {
    "text": "so you can optionally set how to find the class and then uh how do you find the",
    "start": "662360",
    "end": "669160"
  },
  {
    "text": "reference so in this example we've used Json path we're unlikely to actually use that in production because well it's not",
    "start": "669160",
    "end": "676200"
  },
  {
    "text": "a well specified language but if you squint you can kind of see that it's going to iterate over the listeners find",
    "start": "676200",
    "end": "683040"
  },
  {
    "text": "the uh the TLs certificate references and then use that to find the name of the actual secrets uh but again the",
    "start": "683040",
    "end": "690399"
  },
  {
    "text": "authorizer doesn't know what it the actual resource you're referring to so we have to also tell it hey by the way",
    "start": "690399",
    "end": "696480"
  },
  {
    "text": "these are secrets like kubernetes secrets and then we have the purpose which is I want to use this for TLS",
    "start": "696480",
    "end": "703040"
  },
  {
    "text": "serving right now let's continue on to the controller author right the",
    "start": "703040",
    "end": "708639"
  },
  {
    "text": "controller author who's going to you know write the code build a Docker image Helm charts all the yaml stuff right the",
    "start": "708639",
    "end": "714959"
  },
  {
    "text": "thing they understand really well is what is the identity of the controller",
    "start": "714959",
    "end": "720720"
  },
  {
    "text": "right so in kubernetes we tend to refer to that as the subject so in this example we have the Contour service",
    "start": "720720",
    "end": "727399"
  },
  {
    "text": "account right and Contour is a gateway controller that supports uh class so it",
    "start": "727399",
    "end": "732720"
  },
  {
    "text": "is the Contour class and now we want to describe that hey um I want access to",
    "start": "732720",
    "end": "741360"
  },
  {
    "text": "Secrets referenced from gateways for the purpose of TLS serving and if we think",
    "start": "741360",
    "end": "747399"
  },
  {
    "text": "back to the previous JL we can see that these match up right that the from two and four on both of these match up",
    "start": "747399",
    "end": "755079"
  },
  {
    "text": "between the controller and the API author cool so that that brings us to",
    "start": "755079",
    "end": "760959"
  },
  {
    "text": "our last Persona and this is Rohan now the previous two personas that Mo talked",
    "start": "760959",
    "end": "766760"
  },
  {
    "text": "about are fairly complex but they're also something that we don't expect many people to have to interact with uh there",
    "start": "766760",
    "end": "773279"
  },
  {
    "text": "aren't that many people that are writing controllers or writing apis so they are relatively complex but the resource",
    "start": "773279",
    "end": "780000"
  },
  {
    "text": "owner is you know most people that are interacting with kubernetes if you're interacting with kubernetes you probably",
    "start": "780000",
    "end": "786040"
  },
  {
    "text": "own something inside a cluster and for the most part you don't need to do",
    "start": "786040",
    "end": "791199"
  },
  {
    "text": "anything but if you want to allow a cross Nam space reference to a resource",
    "start": "791199",
    "end": "796639"
  },
  {
    "text": "you own you can do that with this model and to do that we have brought back the",
    "start": "796639",
    "end": "802800"
  },
  {
    "text": "idea of reference Grant so if you remember that reference Grant I was showing way back in the beginning this",
    "start": "802800",
    "end": "808160"
  },
  {
    "text": "is very similar to this this but it matches more closely with the API mo mo was just showing so we have a from",
    "start": "808160",
    "end": "815399"
  },
  {
    "text": "that's going to look familiar so from gateways to secrets and not just any",
    "start": "815399",
    "end": "821399"
  },
  {
    "text": "secret but to the Acme TLS secret that I own and then finally for that purpose of",
    "start": "821399",
    "end": "826760"
  },
  {
    "text": "TLS serving so these all have to match up so if that Contour consumer for example uh from before was you know",
    "start": "826760",
    "end": "835519"
  },
  {
    "text": "implementing this but for a different purpose they wouldn't get access so all of these things need to line up the",
    "start": "835519",
    "end": "841759"
  },
  {
    "text": "purpose the from and the to so that's a lot to take in I can",
    "start": "841759",
    "end": "848519"
  },
  {
    "text": "understand if at this point you're just awfully confused at the whole idea of this so let's try and take a high level",
    "start": "848519",
    "end": "855160"
  },
  {
    "text": "view of what these different things would be so there's the reference pattern that's the API author and that's",
    "start": "855160",
    "end": "861759"
  },
  {
    "text": "really just the API author defining where are these references coming from and then optionally if it's an API that",
    "start": "861759",
    "end": "868600"
  },
  {
    "text": "has some form of segmentation where that segmentation is uh then there's the",
    "start": "868600",
    "end": "873759"
  },
  {
    "text": "reference consumer this is the controller author so instead of deploying an Ingress controller with uh",
    "start": "873759",
    "end": "879600"
  },
  {
    "text": "read access to all secrets in your namespace you deploy one of these instead and that would say who to give",
    "start": "879600",
    "end": "886360"
  },
  {
    "text": "access to and under which conditions so uh my Ingress controller or my Gateway controller supports uh references from",
    "start": "886360",
    "end": "893560"
  },
  {
    "text": "gateways to secrets for the purpose of TLS serving as an example and then fin",
    "start": "893560",
    "end": "899040"
  },
  {
    "text": "finally the last thing is reference Grand and the odd chance that you do want to allow cross namespace references",
    "start": "899040",
    "end": "905639"
  },
  {
    "text": "completely optional then you can do that with that resource so let's take a look at a",
    "start": "905639",
    "end": "912880"
  },
  {
    "text": "Gateway and how this all fits together so remember the first Persona was Alex",
    "start": "912880",
    "end": "918199"
  },
  {
    "text": "that API author and Alex is really pointing to two things one Gateway has a",
    "start": "918199",
    "end": "923639"
  },
  {
    "text": "form of segmentation and that exists at Gateway class name so you're providing a path to that that and then second you're",
    "start": "923639",
    "end": "931079"
  },
  {
    "text": "providing a path to where those secret names exist so that Fu example com c so",
    "start": "931079",
    "end": "936720"
  },
  {
    "text": "they're the you know these complicated Json or cell paths but these are things that need to be written once along with",
    "start": "936720",
    "end": "942399"
  },
  {
    "text": "the API definition and then you never need to think about them again next is the reference consumer",
    "start": "942399",
    "end": "949360"
  },
  {
    "text": "this is instead of bundling our back to read all secrets or whatever you're just",
    "start": "949360",
    "end": "954399"
  },
  {
    "text": "bundling our back and saying hey I I want to implement this form of references and specifically only for",
    "start": "954399",
    "end": "961600"
  },
  {
    "text": "gateways of class Contour in this example so not just are you getting all secrets reference by any Gateway but",
    "start": "961600",
    "end": "968560"
  },
  {
    "text": "just gateways that are relevant to you and then finally let's imagine that this Gateway makes a cross namespace",
    "start": "968560",
    "end": "974880"
  },
  {
    "text": "reference that's where reference Grant comes in if you want that secret owner to be able to uh allow that reference to",
    "start": "974880",
    "end": "982759"
  },
  {
    "text": "exist they need to create a reference Grant to say I'm completing the other half of the handshake I trust references",
    "start": "982759",
    "end": "988600"
  },
  {
    "text": "from the that gateway to my secret all right so with all that said I",
    "start": "988600",
    "end": "994560"
  },
  {
    "text": "have to give complete credit to this next section to leor he's right in the front row uh this proof of concept uh",
    "start": "994560",
    "end": "1001399"
  },
  {
    "text": "would not have happened without without him uh part of you know working through all of this is you you think about these",
    "start": "1001399",
    "end": "1008079"
  },
  {
    "text": "apis you put it all on paper and then there's does this even work and leor",
    "start": "1008079",
    "end": "1014000"
  },
  {
    "text": "actually wrote this all out to make sure that yeah this could actually work as an authorizer so let's do a very simple",
    "start": "1014000",
    "end": "1020360"
  },
  {
    "text": "example of this working in real life so to get this started we'll just",
    "start": "1020360",
    "end": "1026438"
  },
  {
    "text": "export a controller service account uh this just an environment variable because we're going to be coming back to",
    "start": "1026439",
    "end": "1031798"
  },
  {
    "text": "this service account a lot we're just going to be testing whether or not this specific service account has access and",
    "start": "1031799",
    "end": "1037678"
  },
  {
    "text": "we're trying to Grant it access without any kind of arback so next I we'll start just",
    "start": "1037679",
    "end": "1044000"
  },
  {
    "text": "because we haven't done anything else we'll use Cub cutle o cani as that service account access this specific",
    "start": "1044000",
    "end": "1049919"
  },
  {
    "text": "secret and of course because we haven't done anything no we don't have access to it now the next thing you're going to",
    "start": "1049919",
    "end": "1056640"
  },
  {
    "text": "want to do is you'll as an API author you'll create that reference pattern and the eagle eyed among you may notice that",
    "start": "1056640",
    "end": "1064120"
  },
  {
    "text": "the actual yaml I'm using here is not reference pattern it's called cluster reference Grant this is unfortunate that",
    "start": "1064120",
    "end": "1070200"
  },
  {
    "text": "we have cycled through at least three different names for this resource so far uh and the PC is using this name uh this",
    "start": "1070200",
    "end": "1077360"
  },
  {
    "text": "is the longest live name so so far but we could use help with naming very clearly uh so it's the same thing as a",
    "start": "1077360",
    "end": "1084039"
  },
  {
    "text": "reference pattern it fills the same purpose I we go ahead and apply",
    "start": "1084039",
    "end": "1089840"
  },
  {
    "text": "that okay and then the next step is we need to attach that to something right like we need to say which controller",
    "start": "1091320",
    "end": "1098080"
  },
  {
    "text": "which identity is following that pattern so in this case we're going to say the demo controller service account that",
    "start": "1098080",
    "end": "1105000"
  },
  {
    "text": "service account we've been using before is following that pattern we'll go ahead and",
    "start": "1105000",
    "end": "1112440"
  },
  {
    "text": "apply and now you say well okay does it work yet we connected a grant a pattern",
    "start": "1112480",
    "end": "1119480"
  },
  {
    "text": "whatever to to a cut reference consumer and you might think well that's all you need right it should work so we'll do",
    "start": "1119480",
    "end": "1126520"
  },
  {
    "text": "Cube cuddle o can I and no we still don't have access so remember the whole",
    "start": "1126520",
    "end": "1132960"
  },
  {
    "text": "purpose here is this is referential authorization so if a reference doesn't exist then you're not going to be",
    "start": "1132960",
    "end": "1140559"
  },
  {
    "text": "granted access this only works if there's actually a reference so it's really the minimum viable access a",
    "start": "1140559",
    "end": "1146520"
  },
  {
    "text": "controller would actually need to implement an API so let's create a Gateway and this",
    "start": "1146520",
    "end": "1153360"
  },
  {
    "text": "Gateway is going to refer the secret that we've been testing for a while to see if we can have access so we'll go",
    "start": "1153360",
    "end": "1159120"
  },
  {
    "text": "ahead and apply this Gateway and with that Gateway applied",
    "start": "1159120",
    "end": "1165559"
  },
  {
    "text": "let's check and see if we have access we do so it works so that part is great but",
    "start": "1165559",
    "end": "1172159"
  },
  {
    "text": "you may be thinking well okay authorization is only so good if it grants you access but you kind of want",
    "start": "1172159",
    "end": "1177280"
  },
  {
    "text": "the inverse too like if any of this goes away we need it to immediately revoke that access as well so let's test that",
    "start": "1177280",
    "end": "1183400"
  },
  {
    "text": "out we can delete any one of those pieces and the axis would be revoked but let's delete the reference consumer in",
    "start": "1183400",
    "end": "1190440"
  },
  {
    "text": "this case and we'll try that axis again and yeah no access so end to end",
    "start": "1190440",
    "end": "1198200"
  },
  {
    "text": "this works it is still very much a PO but some of you may be saying well okay yeah this",
    "start": "1198200",
    "end": "1204159"
  },
  {
    "text": "this looks great let's ship it let's run with it you know that's let's go uh as you may tell you might be able to tell",
    "start": "1204159",
    "end": "1211000"
  },
  {
    "text": "by now we have a ton of open questions left we we've shown that it can work but",
    "start": "1211000",
    "end": "1217320"
  },
  {
    "text": "we do have plenty of open questions that we need to work through still uh as you can tell we still have no idea what to",
    "start": "1217320",
    "end": "1223000"
  },
  {
    "text": "call these things uh we've been fiddling around with a few names even in this presentation sorry for that um and we",
    "start": "1223000",
    "end": "1230520"
  },
  {
    "text": "want to have names that actually make sense so if you have any ideas we're all yours uh then how on Earth can we make",
    "start": "1230520",
    "end": "1237799"
  },
  {
    "text": "this easier for controllers and users to adopt this because this is only actually useful if controllers and users can make",
    "start": "1237799",
    "end": "1245280"
  },
  {
    "text": "use of it otherwise we'll just default to the easiest path which is giving your Ingress controllers read access to all",
    "start": "1245280",
    "end": "1251440"
  },
  {
    "text": "secrets because it works um there is also a real pain point for controllers",
    "start": "1251440",
    "end": "1257679"
  },
  {
    "text": "with this method uh controllers by default the the easiest thing to do is to watch a long list of things so all",
    "start": "1257679",
    "end": "1263640"
  },
  {
    "text": "secrets in this namespace or in this cluster this requires a different approach that would be a lot of",
    "start": "1263640",
    "end": "1269480"
  },
  {
    "text": "individual watches there are tools that can help with that but it is a significant change and we need to make",
    "start": "1269480",
    "end": "1275720"
  },
  {
    "text": "that a better ux if we expect any controllers to actually adopt it and then kind of a bit of a niche",
    "start": "1275720",
    "end": "1282159"
  },
  {
    "text": "question here but how much interest is there in a namespace scope reference consumer we've kind of focused on these",
    "start": "1282159",
    "end": "1288559"
  },
  {
    "text": "cluster scoped level of access but what if your controller really only runs in a single name space at a time are these",
    "start": "1288559",
    "end": "1295640"
  },
  {
    "text": "same patterns useful not sure but another question that we're still trying to figure out and then finally",
    "start": "1295640",
    "end": "1303480"
  },
  {
    "text": "uh well went back a little too far uh the other thing I wanted to cover is",
    "start": "1303480",
    "end": "1308520"
  },
  {
    "text": "that what on Earth should this grant access to by default so far we've just said read access because that's what we",
    "start": "1308520",
    "end": "1315640"
  },
  {
    "text": "care about so far in all the use cases we're aware of but would you want to use the same pattern for right access like",
    "start": "1315640",
    "end": "1322400"
  },
  {
    "text": "if if you follow a reference should that Grant create update I don't know uh so",
    "start": "1322400",
    "end": "1328080"
  },
  {
    "text": "far we're just doing read access but open two additional use cases for this pattern and then finally the ultimate",
    "start": "1328080",
    "end": "1335480"
  },
  {
    "text": "open question should we do something else entirely uh and with that I'll hand back to",
    "start": "1335480",
    "end": "1342480"
  },
  {
    "text": "Mo so the alternative that we're considering is if you squint and think",
    "start": "1342480",
    "end": "1350200"
  },
  {
    "text": "about all the pieces that we talked about so far if you were willing to make some",
    "start": "1350200",
    "end": "1356559"
  },
  {
    "text": "changes to the objects that you were trying to Grant access to in particular if you were willing to label them",
    "start": "1356559",
    "end": "1362360"
  },
  {
    "text": "somehow could you squint and make all of those properties the for the froms and",
    "start": "1362360",
    "end": "1367919"
  },
  {
    "text": "the twos into like special labels right so you can kind of see this pretend",
    "start": "1367919",
    "end": "1373080"
  },
  {
    "text": "label of like hey I have a purpose for my Gateway and it's TLS and you logically extend that to",
    "start": "1373080",
    "end": "1379200"
  },
  {
    "text": "like hey I have a class and this is the class right so this can be attractive because",
    "start": "1379200",
    "end": "1386279"
  },
  {
    "text": "in some ways it feels simpler and easier to explain so why might we not do this so if you",
    "start": "1386279",
    "end": "1395480"
  },
  {
    "text": "look at all of the design we talked about with the referential authorizer it's critical to notice that",
    "start": "1395480",
    "end": "1402760"
  },
  {
    "text": "we are not changing anything about how authorization Works in kubernetes we are",
    "start": "1402760",
    "end": "1407960"
  },
  {
    "text": "just building an incredibly complex and fancy authorizer but we are not changing what authorization means the second you",
    "start": "1407960",
    "end": "1414480"
  },
  {
    "text": "start talking about something like label selectors you actually have to change the meaning of authorization in kubernetes because there is no way in",
    "start": "1414480",
    "end": "1421520"
  },
  {
    "text": "kubernetes today to ask an authorizer to make a decision while considering",
    "start": "1421520",
    "end": "1426960"
  },
  {
    "text": "something like label selection in that mix right so subject access review is the core API that defines how",
    "start": "1426960",
    "end": "1432960"
  },
  {
    "text": "authorization Works in Cube and there's no field in there for label selection right so we'll have to add that and",
    "start": "1432960",
    "end": "1439039"
  },
  {
    "text": "that'll obviously percolate through the ecosystem the other aspect is other than",
    "start": "1439039",
    "end": "1444200"
  },
  {
    "text": "list watch and delete collection the kubernetes rest API does not have the concept of label selection so",
    "start": "1444200",
    "end": "1450919"
  },
  {
    "text": "importantly get does not have the concept of label selection nor does Creator update right so we'd have to",
    "start": "1450919",
    "end": "1456960"
  },
  {
    "text": "work through that uh how would we go about labeling things obviously you can ask your end",
    "start": "1456960",
    "end": "1463240"
  },
  {
    "text": "users to do it that might be okay but it seems to be better to have some form of",
    "start": "1463240",
    "end": "1469159"
  },
  {
    "text": "automation around this right so we might end up having to build some pretty fancy controllers to do that uh labels are pretty complex in",
    "start": "1469159",
    "end": "1477080"
  },
  {
    "text": "particular you can represent not relationships in them right that probably is not a great idea for your authorization stack because it's kind of",
    "start": "1477080",
    "end": "1483840"
  },
  {
    "text": "hard to reason about a bunch of ants and Knots all mixed together trying to figure out what did you actually intend",
    "start": "1483840",
    "end": "1489120"
  },
  {
    "text": "to do with that right and inevitably once you start talking about touching",
    "start": "1489120",
    "end": "1496320"
  },
  {
    "text": "authorization with label selectors someone's going to show up and say I would like field selectors uh and for",
    "start": "1496320",
    "end": "1502679"
  },
  {
    "text": "good reason right like I want my nodes to be able to be authorized to only",
    "start": "1502679",
    "end": "1508159"
  },
  {
    "text": "field select on their pods right that is what they do today but they're authorized to look at all pods right",
    "start": "1508159",
    "end": "1513399"
  },
  {
    "text": "they aren't restricted because there isn't a way to restrict that action today right um with all these concerns",
    "start": "1513399",
    "end": "1521159"
  },
  {
    "text": "you might be asking well why consider this at all if there's all these negatives the core benefit of an",
    "start": "1521159",
    "end": "1526799"
  },
  {
    "text": "approach like this is is it is Trivial to implement in a controller because",
    "start": "1526799",
    "end": "1532080"
  },
  {
    "text": "effectively all you have to do is update your listat semantics to be still cluster wide with a particular label",
    "start": "1532080",
    "end": "1538760"
  },
  {
    "text": "right you can do that today you don't get the authorization benefits but your controller can do that today you don't",
    "start": "1538760",
    "end": "1543960"
  },
  {
    "text": "need any special libraries right the the stuff that Rob is talking about we're going to write you know a custom go",
    "start": "1543960",
    "end": "1549480"
  },
  {
    "text": "implementation to help you do you know 10,000 watches and you know make it efficient and work perfectly and all",
    "start": "1549480",
    "end": "1555000"
  },
  {
    "text": "that but if you decide to not write your controller and go well you get to reimplement that entire Library also um",
    "start": "1555000",
    "end": "1562880"
  },
  {
    "text": "so what can you do until we have any of this right so I mentioned this earlier",
    "start": "1562880",
    "end": "1568919"
  },
  {
    "text": "you really want to have an implementation that has strong separation between its control and data",
    "start": "1568919",
    "end": "1574320"
  },
  {
    "text": "plane right uh unfortunately you can't tell just by looking so you're almost certainly going to have to talk to",
    "start": "1574320",
    "end": "1579919"
  },
  {
    "text": "someone and figure it out right if you if you're willing to take the paino of having many small copies of your Ingress",
    "start": "1579919",
    "end": "1586520"
  },
  {
    "text": "controller running in individual Nam spaces that's a choice uh please turn off all the Lua config just just don't do it",
    "start": "1586520",
    "end": "1594039"
  },
  {
    "text": "find some other way um but in reality right if there is a way to harden that",
    "start": "1594039",
    "end": "1599919"
  },
  {
    "text": "controller or that Ingress implementation you know find the maintainers ask them how to do it ask them to document it and deploy it in",
    "start": "1599919",
    "end": "1606679"
  },
  {
    "text": "that way um yeah so this is a big project",
    "start": "1606679",
    "end": "1612480"
  },
  {
    "text": "potentially and we could use some help so what's next uh well first off if it's",
    "start": "1612480",
    "end": "1617919"
  },
  {
    "text": "not already clear this is still in early stages we're we're bringing this to cucon because we really would benefit",
    "start": "1617919",
    "end": "1623080"
  },
  {
    "text": "from feedback sooner than later uh we want to hear about your use cases about if this model is beneficial if something",
    "start": "1623080",
    "end": "1630600"
  },
  {
    "text": "like arback label selectors is actually just way better or simpler for you uh feedback is really really helpful at",
    "start": "1630600",
    "end": "1636880"
  },
  {
    "text": "this stage uh this is one of those rare opportunities where we have an opportunity to meaningfully affect a new",
    "start": "1636880",
    "end": "1644120"
  },
  {
    "text": "authorization model inside kubernetes so if this is something that interests you this is a great opportunity to get",
    "start": "1644120",
    "end": "1649840"
  },
  {
    "text": "involved uh I've linked our kep number there uh 4387 uh you can find uh the POC that we",
    "start": "1649840",
    "end": "1657399"
  },
  {
    "text": "demoed earlier that's uh kubernetes sigs reference Grant POC uh and then also we're on slack uh you probably the best",
    "start": "1657399",
    "end": "1664279"
  },
  {
    "text": "channel is sigo authorizers Dev but would love to get some additional feedback use cases Etc uh and if you're",
    "start": "1664279",
    "end": "1671720"
  },
  {
    "text": "interested in getting involved more whether it's development or what uh we'd love to have you uh and with that I",
    "start": "1671720",
    "end": "1677120"
  },
  {
    "text": "think we've got time for",
    "start": "1677120",
    "end": "1680120"
  },
  {
    "text": "questions should we run the mics over there are mics if you stand up on either side there",
    "start": "1688200",
    "end": "1695279"
  },
  {
    "text": "um hi great talk I actually have a question about the PO and I was",
    "start": "1696640",
    "end": "1702279"
  },
  {
    "text": "wondering what is the actual policy enforcement point there is it at the level of admission web hook that your",
    "start": "1702279",
    "end": "1711120"
  },
  {
    "text": "yeah I I completely glossed over that that's a good question this is a admission web hook an auth authorization",
    "start": "1711120",
    "end": "1716640"
  },
  {
    "text": "authorization webbook thank you yeah y so you do have to like I guess it's",
    "start": "1716640",
    "end": "1722480"
  },
  {
    "text": "not a deny authorizer so you can put it wherever you want but you have to not Grant broad access in like other",
    "start": "1722480",
    "end": "1729320"
  },
  {
    "text": "places uh hi thanks for the talk uh in your example the four purpose thing",
    "start": "1729320",
    "end": "1737000"
  },
  {
    "text": "field it it feels like uh it's like oneof much label case as",
    "start": "1737000",
    "end": "1743640"
  },
  {
    "text": "well is it like same idea because like it's just like one label you're allowed",
    "start": "1743640",
    "end": "1750000"
  },
  {
    "text": "to apply yeah yeah no I I completely get that uh we we didn't do a great job of at explaining that but let's imagine",
    "start": "1750000",
    "end": "1756279"
  },
  {
    "text": "you're talking about an API like pod API where there's a lot of different object references each one of those like let's",
    "start": "1756279",
    "end": "1762120"
  },
  {
    "text": "say you had a an object reference uh two two different fields what they could",
    "start": "1762120",
    "end": "1767440"
  },
  {
    "text": "each have a different purpose or as another thing you could have a different purpose for different kinds like let's",
    "start": "1767440",
    "end": "1772559"
  },
  {
    "text": "say you had uh the same object reference but it could reference either secret or config map maybe those would be for",
    "start": "1772559",
    "end": "1777600"
  },
  {
    "text": "different purposes but it's really just you know the the author of The API would",
    "start": "1777600",
    "end": "1782720"
  },
  {
    "text": "document and Define these are the purposes that you can connect and use with my API uh and then a controller",
    "start": "1782720",
    "end": "1790200"
  },
  {
    "text": "author would just say I'm using this specific purpose this is what I need authorization for does that make sense",
    "start": "1790200",
    "end": "1796799"
  },
  {
    "text": "or yeah just like it's some New Concept I think like y introduced A New Concept",
    "start": "1796799",
    "end": "1803039"
  },
  {
    "text": "yeah I think it also plays in when you have the reference Grant bits like it helps the controller understand the",
    "start": "1803039",
    "end": "1809960"
  },
  {
    "text": "context of the situation as well so that that's kind of why it percolate out that way",
    "start": "1809960",
    "end": "1816360"
  },
  {
    "text": "y so with the label Grant version like the alternative of sticking labels on",
    "start": "1816360",
    "end": "1823120"
  },
  {
    "text": "the resources does that require a label both sides so if you're going cross",
    "start": "1823120",
    "end": "1828279"
  },
  {
    "text": "namespace you have to label the request and the object that you're requesting access to cuz the only reason I asked",
    "start": "1828279",
    "end": "1835799"
  },
  {
    "text": "this is I was in another talk upstairs earlier and the guy was talking about how oh look you know you just gain",
    "start": "1835799",
    "end": "1841480"
  },
  {
    "text": "access to write labels and unfortunately people use these and that's a dumb idea and has that factored in yeah no yeah so",
    "start": "1841480",
    "end": "1849760"
  },
  {
    "text": "that's a really good question so the label selector alternative works great",
    "start": "1849760",
    "end": "1855559"
  },
  {
    "text": "for the first use case of you know limitting secret access it's unclear how it translates to cross Nam space",
    "start": "1855559",
    "end": "1862039"
  },
  {
    "text": "references it's possible that maybe we build some kind of controller that looks",
    "start": "1862039",
    "end": "1867360"
  },
  {
    "text": "at something like reference Grant and translates it to labels on our back not not quite sure yet but it it does a very",
    "start": "1867360",
    "end": "1875440"
  },
  {
    "text": "good job at solving the first problem unclear about cross namespace yet cool",
    "start": "1875440",
    "end": "1880760"
  },
  {
    "text": "um thank you cool I think that's all the",
    "start": "1880760",
    "end": "1886399"
  },
  {
    "text": "questions uh feel free to come up and chat if you have anything else thank",
    "start": "1886399",
    "end": "1892559"
  },
  {
    "text": "you",
    "start": "1892559",
    "end": "1895559"
  }
]