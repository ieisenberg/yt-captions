[
  {
    "text": "hi welcome to today's webinar I'm",
    "start": "960",
    "end": "3899"
  },
  {
    "text": "Stephen A Solutions architect versus",
    "start": "3899",
    "end": "5819"
  },
  {
    "text": "civio today we'll discuss resource",
    "start": "5819",
    "end": "8220"
  },
  {
    "text": "allocation in kubernetes some of the",
    "start": "8220",
    "end": "10019"
  },
  {
    "text": "challenges with kubernetes resource",
    "start": "10019",
    "end": "11340"
  },
  {
    "text": "allocation and House of Sevilla is",
    "start": "11340",
    "end": "13080"
  },
  {
    "text": "tackling these problems",
    "start": "13080",
    "end": "14519"
  },
  {
    "text": "please place your questions in the",
    "start": "14519",
    "end": "15780"
  },
  {
    "text": "comment section below and we'll answer",
    "start": "15780",
    "end": "17100"
  },
  {
    "text": "them as soon as possible",
    "start": "17100",
    "end": "20119"
  },
  {
    "text": "today we will start with a brief",
    "start": "20640",
    "end": "22199"
  },
  {
    "text": "introduction to sicivio we will then",
    "start": "22199",
    "end": "24420"
  },
  {
    "text": "discuss the biggest challenges of",
    "start": "24420",
    "end": "25920"
  },
  {
    "text": "kubernetes resource allocation and how",
    "start": "25920",
    "end": "27900"
  },
  {
    "text": "socivio is solving these challenges with",
    "start": "27900",
    "end": "29640"
  },
  {
    "text": "our application profiling module",
    "start": "29640",
    "end": "32040"
  },
  {
    "text": "we will dive into the civio's",
    "start": "32040",
    "end": "34380"
  },
  {
    "text": "application profile and the benefits of",
    "start": "34380",
    "end": "36120"
  },
  {
    "text": "using sevilla's novel methodology called",
    "start": "36120",
    "end": "38280"
  },
  {
    "text": "Data swirling to fuel our profiling",
    "start": "38280",
    "end": "40200"
  },
  {
    "text": "recommendations",
    "start": "40200",
    "end": "42300"
  },
  {
    "text": "finally we will demonstrate a few",
    "start": "42300",
    "end": "44100"
  },
  {
    "text": "examples of application profiling in",
    "start": "44100",
    "end": "46140"
  },
  {
    "text": "action",
    "start": "46140",
    "end": "48059"
  },
  {
    "text": "first let me briefly introduce cisibio",
    "start": "48059",
    "end": "51840"
  },
  {
    "text": "while we are focusing discussion in",
    "start": "51840",
    "end": "53579"
  },
  {
    "text": "automated application profiling today",
    "start": "53579",
    "end": "55440"
  },
  {
    "text": "this is civio platform also performs",
    "start": "55440",
    "end": "57899"
  },
  {
    "text": "predictive troubleshooting for",
    "start": "57899",
    "end": "59100"
  },
  {
    "text": "kubernetes applications and environments",
    "start": "59100",
    "end": "62039"
  },
  {
    "text": "this means we are able to constantly",
    "start": "62039",
    "end": "63840"
  },
  {
    "text": "observe cloud data environments detect",
    "start": "63840",
    "end": "66060"
  },
  {
    "text": "when certain behaviors will lead to",
    "start": "66060",
    "end": "67439"
  },
  {
    "text": "critical failures determine the root",
    "start": "67439",
    "end": "69360"
  },
  {
    "text": "cause of those issues and alert users of",
    "start": "69360",
    "end": "71340"
  },
  {
    "text": "failure events as they unfold in real",
    "start": "71340",
    "end": "73320"
  },
  {
    "text": "time",
    "start": "73320",
    "end": "74460"
  },
  {
    "text": "foreign",
    "start": "74460",
    "end": "75180"
  },
  {
    "text": "by taking action early we prevent small",
    "start": "75180",
    "end": "77640"
  },
  {
    "text": "issues from becoming catastrophes which",
    "start": "77640",
    "end": "79740"
  },
  {
    "text": "saves companies from filling the",
    "start": "79740",
    "end": "81060"
  },
  {
    "text": "business impact of an outage",
    "start": "81060",
    "end": "84000"
  },
  {
    "text": "it plays along the nautical theme of",
    "start": "84000",
    "end": "85560"
  },
  {
    "text": "kubernetes and literally means life",
    "start": "85560",
    "end": "87360"
  },
  {
    "text": "jacket and Greek yes socivia is your",
    "start": "87360",
    "end": "90420"
  },
  {
    "text": "life jacket on your kubernetes voyage",
    "start": "90420",
    "end": "93180"
  },
  {
    "text": "everyone is excited about kubernetes how",
    "start": "93180",
    "end": "95520"
  },
  {
    "text": "could you not be",
    "start": "95520",
    "end": "96780"
  },
  {
    "text": "kubernetes adds in vital automation that",
    "start": "96780",
    "end": "98700"
  },
  {
    "text": "greatly assists in developing",
    "start": "98700",
    "end": "99900"
  },
  {
    "text": "microservices at scale",
    "start": "99900",
    "end": "102000"
  },
  {
    "text": "developers love the benefits of faster",
    "start": "102000",
    "end": "104100"
  },
  {
    "text": "easier and flexible ways to build and",
    "start": "104100",
    "end": "106200"
  },
  {
    "text": "deploy applications",
    "start": "106200",
    "end": "107820"
  },
  {
    "text": "increased development speed means new",
    "start": "107820",
    "end": "109799"
  },
  {
    "text": "product features are released and",
    "start": "109799",
    "end": "110880"
  },
  {
    "text": "updated much faster which is also",
    "start": "110880",
    "end": "112979"
  },
  {
    "text": "exciting for companies as a whole",
    "start": "112979",
    "end": "115320"
  },
  {
    "text": "operations teams love the ease of",
    "start": "115320",
    "end": "117240"
  },
  {
    "text": "scaling and self-healing",
    "start": "117240",
    "end": "119460"
  },
  {
    "text": "this translates to an approved user",
    "start": "119460",
    "end": "121500"
  },
  {
    "text": "experience increased Revenue a shortened",
    "start": "121500",
    "end": "124079"
  },
  {
    "text": "time to Market and much more",
    "start": "124079",
    "end": "127399"
  },
  {
    "text": "Enterprises see kubernetes as a key to",
    "start": "127680",
    "end": "129780"
  },
  {
    "text": "unlocking lower cost applications by",
    "start": "129780",
    "end": "131640"
  },
  {
    "text": "utilizing several small containers",
    "start": "131640",
    "end": "133140"
  },
  {
    "text": "versus an entire VM or physical server",
    "start": "133140",
    "end": "136620"
  },
  {
    "text": "while the benefits are undeniable the",
    "start": "136620",
    "end": "138780"
  },
  {
    "text": "hidden secret is that kubernetes is",
    "start": "138780",
    "end": "140520"
  },
  {
    "text": "actually complex",
    "start": "140520",
    "end": "143040"
  },
  {
    "text": "kubernetes is dynamic workloads are",
    "start": "143040",
    "end": "145560"
  },
  {
    "text": "ephemeral but they're not always treated",
    "start": "145560",
    "end": "147480"
  },
  {
    "text": "as such",
    "start": "147480",
    "end": "148980"
  },
  {
    "text": "there are several layers underneath the",
    "start": "148980",
    "end": "151140"
  },
  {
    "text": "kubernetes abstraction layer each one of",
    "start": "151140",
    "end": "153720"
  },
  {
    "text": "these layers has a lot going on and when",
    "start": "153720",
    "end": "155940"
  },
  {
    "text": "there is an issue it's much more",
    "start": "155940",
    "end": "157500"
  },
  {
    "text": "difficult to find versus when dealing",
    "start": "157500",
    "end": "159300"
  },
  {
    "text": "with a single layer",
    "start": "159300",
    "end": "161879"
  },
  {
    "text": "if you're only running a few small",
    "start": "161879",
    "end": "163200"
  },
  {
    "text": "applications you may not feel the",
    "start": "163200",
    "end": "164819"
  },
  {
    "text": "complexity you definitely will feel it",
    "start": "164819",
    "end": "166860"
  },
  {
    "text": "once you start to really use kubernetes",
    "start": "166860",
    "end": "168360"
  },
  {
    "text": "at scale",
    "start": "168360",
    "end": "170160"
  },
  {
    "text": "most of us experience at least one of",
    "start": "170160",
    "end": "172260"
  },
  {
    "text": "the following first",
    "start": "172260",
    "end": "173430"
  },
  {
    "text": "[Music]",
    "start": "173430",
    "end": "175080"
  },
  {
    "text": "users being affected by an issue with",
    "start": "175080",
    "end": "177420"
  },
  {
    "text": "Dynamic symptoms that make it incredibly",
    "start": "177420",
    "end": "179580"
  },
  {
    "text": "difficult to determine a root cause",
    "start": "179580",
    "end": "181200"
  },
  {
    "text": "because of how hard it could be to",
    "start": "181200",
    "end": "183300"
  },
  {
    "text": "determine what's actually going on in",
    "start": "183300",
    "end": "185040"
  },
  {
    "text": "our cluster",
    "start": "185040",
    "end": "186239"
  },
  {
    "text": "in a second is that we receive a massive",
    "start": "186239",
    "end": "188640"
  },
  {
    "text": "bill from a cloud service provider while",
    "start": "188640",
    "end": "190980"
  },
  {
    "text": "both are important we're going to focus",
    "start": "190980",
    "end": "192659"
  },
  {
    "text": "on the latter today",
    "start": "192659",
    "end": "195440"
  },
  {
    "text": "most companies are quick to adopt and",
    "start": "195480",
    "end": "197220"
  },
  {
    "text": "use kubernetes but if you give enough",
    "start": "197220",
    "end": "199500"
  },
  {
    "text": "attention to the associated cost",
    "start": "199500",
    "end": "201060"
  },
  {
    "text": "optimizations in the accompanying proper",
    "start": "201060",
    "end": "203340"
  },
  {
    "text": "Cloud native application design",
    "start": "203340",
    "end": "205739"
  },
  {
    "text": "developers and devops teams are able to",
    "start": "205739",
    "end": "207720"
  },
  {
    "text": "send out pods and clusters and they can",
    "start": "207720",
    "end": "209760"
  },
  {
    "text": "build tests and run their first",
    "start": "209760",
    "end": "210900"
  },
  {
    "text": "applications for devops teams this early",
    "start": "210900",
    "end": "213540"
  },
  {
    "text": "momentum breeds excitement and supports",
    "start": "213540",
    "end": "215519"
  },
  {
    "text": "moving more applications over to",
    "start": "215519",
    "end": "216780"
  },
  {
    "text": "kubernetes at some point that momentum",
    "start": "216780",
    "end": "219180"
  },
  {
    "text": "slows or even stops abruptly but why",
    "start": "219180",
    "end": "223620"
  },
  {
    "text": "teams start to experience kubernetes",
    "start": "223620",
    "end": "225540"
  },
  {
    "text": "complexity in the business impact of",
    "start": "225540",
    "end": "227580"
  },
  {
    "text": "unresolved issues in their impacts on",
    "start": "227580",
    "end": "229560"
  },
  {
    "text": "neighboring applications within the",
    "start": "229560",
    "end": "230940"
  },
  {
    "text": "cluster like over-allocated resources",
    "start": "230940",
    "end": "234239"
  },
  {
    "text": "which will cause other applications to",
    "start": "234239",
    "end": "236519"
  },
  {
    "text": "throttle intermittently or even crash",
    "start": "236519",
    "end": "239280"
  },
  {
    "text": "as companies increase adoption these",
    "start": "239280",
    "end": "241860"
  },
  {
    "text": "issues compound exponentially and result",
    "start": "241860",
    "end": "243900"
  },
  {
    "text": "in both significantly more complexity",
    "start": "243900",
    "end": "245819"
  },
  {
    "text": "and a significantly higher Cloud Bill",
    "start": "245819",
    "end": "248280"
  },
  {
    "text": "than anticipated",
    "start": "248280",
    "end": "250379"
  },
  {
    "text": "manually trying to find and allocate",
    "start": "250379",
    "end": "252540"
  },
  {
    "text": "resources is difficult and impossible to",
    "start": "252540",
    "end": "254519"
  },
  {
    "text": "do at scale the safe and easy option is",
    "start": "254519",
    "end": "256979"
  },
  {
    "text": "to just add a few more resources than",
    "start": "256979",
    "end": "258540"
  },
  {
    "text": "you think you will need for a single",
    "start": "258540",
    "end": "260340"
  },
  {
    "text": "application it's really not an issue but",
    "start": "260340",
    "end": "262560"
  },
  {
    "text": "multiply this waste across several",
    "start": "262560",
    "end": "264120"
  },
  {
    "text": "applications or in most cases thousands",
    "start": "264120",
    "end": "266040"
  },
  {
    "text": "and becomes clear it's causing",
    "start": "266040",
    "end": "267540"
  },
  {
    "text": "significant waste and it's definitely",
    "start": "267540",
    "end": "268979"
  },
  {
    "text": "not scalable",
    "start": "268979",
    "end": "270419"
  },
  {
    "text": "the shock of a massive Cloud Bill",
    "start": "270419",
    "end": "272220"
  },
  {
    "text": "prevents companies from continuing to",
    "start": "272220",
    "end": "274380"
  },
  {
    "text": "adopt at a rapid pace and take a step",
    "start": "274380",
    "end": "276240"
  },
  {
    "text": "back in their migration process",
    "start": "276240",
    "end": "278639"
  },
  {
    "text": "this delay prevents companies from",
    "start": "278639",
    "end": "280620"
  },
  {
    "text": "achieving their technology goals and",
    "start": "280620",
    "end": "282419"
  },
  {
    "text": "ultimately affects their customers",
    "start": "282419",
    "end": "284639"
  },
  {
    "text": "it's like being thrown off a ship into",
    "start": "284639",
    "end": "286259"
  },
  {
    "text": "the ocean and being told okay now learn",
    "start": "286259",
    "end": "288660"
  },
  {
    "text": "how to swim",
    "start": "288660",
    "end": "290400"
  },
  {
    "text": "while you're treading in water with your",
    "start": "290400",
    "end": "291960"
  },
  {
    "text": "head sinking lower and lower socivio is",
    "start": "291960",
    "end": "294419"
  },
  {
    "text": "the life jacket that lifts you back up",
    "start": "294419",
    "end": "295979"
  },
  {
    "text": "brings you back to the ship and allows",
    "start": "295979",
    "end": "298440"
  },
  {
    "text": "you to continue your kubernetes journey",
    "start": "298440",
    "end": "301380"
  },
  {
    "text": "as companies migrate to Cloud native",
    "start": "301380",
    "end": "303180"
  },
  {
    "text": "applications and adopt either a cloud or",
    "start": "303180",
    "end": "305340"
  },
  {
    "text": "hybrid Cloud approach they need to start",
    "start": "305340",
    "end": "307500"
  },
  {
    "text": "thinking about capacity",
    "start": "307500",
    "end": "309419"
  },
  {
    "text": "while cloudnative brings a promise of",
    "start": "309419",
    "end": "311400"
  },
  {
    "text": "smaller more agile applications it",
    "start": "311400",
    "end": "313919"
  },
  {
    "text": "inherently removes a physical limitation",
    "start": "313919",
    "end": "315720"
  },
  {
    "text": "for maximum capacity",
    "start": "315720",
    "end": "317880"
  },
  {
    "text": "if you're given a thousand nodes with a",
    "start": "317880",
    "end": "319919"
  },
  {
    "text": "set of Hardware you know your maximum",
    "start": "319919",
    "end": "322199"
  },
  {
    "text": "capacity and it's impossible to exceed",
    "start": "322199",
    "end": "324240"
  },
  {
    "text": "it without requesting and installing new",
    "start": "324240",
    "end": "326220"
  },
  {
    "text": "hardware this is a natural ceiling on",
    "start": "326220",
    "end": "328500"
  },
  {
    "text": "capacity",
    "start": "328500",
    "end": "329759"
  },
  {
    "text": "as much of a headache as it might be to",
    "start": "329759",
    "end": "331740"
  },
  {
    "text": "go through the process to buy more",
    "start": "331740",
    "end": "333360"
  },
  {
    "text": "servers it is a natural barrier to not",
    "start": "333360",
    "end": "335400"
  },
  {
    "text": "exceeding your spend in it",
    "start": "335400",
    "end": "336720"
  },
  {
    "text": "infrastructure",
    "start": "336720",
    "end": "338100"
  },
  {
    "text": "cloud service providers make this",
    "start": "338100",
    "end": "339840"
  },
  {
    "text": "barrier much less significant and much",
    "start": "339840",
    "end": "341940"
  },
  {
    "text": "easier to exceed and they are",
    "start": "341940",
    "end": "343560"
  },
  {
    "text": "incentivized to make you do this",
    "start": "343560",
    "end": "345780"
  },
  {
    "text": "they surely have more than enough",
    "start": "345780",
    "end": "347160"
  },
  {
    "text": "capacity for companies to grow into and",
    "start": "347160",
    "end": "349199"
  },
  {
    "text": "allowing your iot infrastructure to grow",
    "start": "349199",
    "end": "350759"
  },
  {
    "text": "is in their best interest as a business",
    "start": "350759",
    "end": "352139"
  },
  {
    "text": "the cloud enables a lot of innovation",
    "start": "352139",
    "end": "354419"
  },
  {
    "text": "and Agility but also opens the door to",
    "start": "354419",
    "end": "356580"
  },
  {
    "text": "much more waste having more space to use",
    "start": "356580",
    "end": "358919"
  },
  {
    "text": "while not being thoughtful about",
    "start": "358919",
    "end": "360000"
  },
  {
    "text": "resources is a double-edged sword",
    "start": "360000",
    "end": "361680"
  },
  {
    "text": "because the more space that is used the",
    "start": "361680",
    "end": "363720"
  },
  {
    "text": "more likely there is going to be a",
    "start": "363720",
    "end": "364979"
  },
  {
    "text": "higher amount of wasted resources",
    "start": "364979",
    "end": "367199"
  },
  {
    "text": "a recent study by datadog found that",
    "start": "367199",
    "end": "369360"
  },
  {
    "text": "within the past two years the average",
    "start": "369360",
    "end": "371220"
  },
  {
    "text": "number of PODS per organization has",
    "start": "371220",
    "end": "373380"
  },
  {
    "text": "doubled with a similar relative increase",
    "start": "373380",
    "end": "375660"
  },
  {
    "text": "in the average number of kubernetes",
    "start": "375660",
    "end": "377400"
  },
  {
    "text": "hosts",
    "start": "377400",
    "end": "379259"
  },
  {
    "text": "overall capacity is important as we want",
    "start": "379259",
    "end": "381539"
  },
  {
    "text": "to tame costs from getting out of",
    "start": "381539",
    "end": "382860"
  },
  {
    "text": "control but it's also important on a per",
    "start": "382860",
    "end": "385199"
  },
  {
    "text": "node level as well",
    "start": "385199",
    "end": "387060"
  },
  {
    "text": "we care about capacity per node for",
    "start": "387060",
    "end": "389340"
  },
  {
    "text": "performance reasons cost at a per node",
    "start": "389340",
    "end": "391680"
  },
  {
    "text": "level isn't really a problem but",
    "start": "391680",
    "end": "393300"
  },
  {
    "text": "performance can be destroyed if we're",
    "start": "393300",
    "end": "394919"
  },
  {
    "text": "not careful",
    "start": "394919",
    "end": "396360"
  },
  {
    "text": "one container is wasted or",
    "start": "396360",
    "end": "397860"
  },
  {
    "text": "non-restricted resources affect every",
    "start": "397860",
    "end": "400080"
  },
  {
    "text": "other container running on the same node",
    "start": "400080",
    "end": "402539"
  },
  {
    "text": "you may have heard the term Noisy",
    "start": "402539",
    "end": "403979"
  },
  {
    "text": "Neighbor before which refers to this",
    "start": "403979",
    "end": "405539"
  },
  {
    "text": "issue it's actually more analogous to",
    "start": "405539",
    "end": "407639"
  },
  {
    "text": "having a hostile neighbor who is",
    "start": "407639",
    "end": "409080"
  },
  {
    "text": "wreaking havoc across the entire",
    "start": "409080",
    "end": "410699"
  },
  {
    "text": "neighborhood for example if one",
    "start": "410699",
    "end": "413460"
  },
  {
    "text": "container is using a large portion of",
    "start": "413460",
    "end": "415020"
  },
  {
    "text": "resources and every other container rely",
    "start": "415020",
    "end": "416940"
  },
  {
    "text": "on those wasted resources they could be",
    "start": "416940",
    "end": "419039"
  },
  {
    "text": "throttled killed or not even deployed in",
    "start": "419039",
    "end": "421500"
  },
  {
    "text": "the first place this translates to a",
    "start": "421500",
    "end": "423660"
  },
  {
    "text": "poor customer experience and lost",
    "start": "423660",
    "end": "425099"
  },
  {
    "text": "Revenue",
    "start": "425099",
    "end": "426960"
  },
  {
    "text": "okay so we know resource allocation can",
    "start": "426960",
    "end": "429419"
  },
  {
    "text": "present several problems for us but why",
    "start": "429419",
    "end": "431460"
  },
  {
    "text": "is resource allocation for kubernetes",
    "start": "431460",
    "end": "433259"
  },
  {
    "text": "difficult after all there are plenty of",
    "start": "433259",
    "end": "435539"
  },
  {
    "text": "ways to adjust resources in communities",
    "start": "435539",
    "end": "437220"
  },
  {
    "text": "we can address the CPU memory member",
    "start": "437220",
    "end": "440280"
  },
  {
    "text": "replicas in a multitude of other levers",
    "start": "440280",
    "end": "444120"
  },
  {
    "text": "the problem lies within a vast variety",
    "start": "444120",
    "end": "446220"
  },
  {
    "text": "and combination of controls",
    "start": "446220",
    "end": "448800"
  },
  {
    "text": "the variability grows with each",
    "start": "448800",
    "end": "450360"
  },
  {
    "text": "application deployed on your cluster the",
    "start": "450360",
    "end": "452759"
  },
  {
    "text": "velocity at which application is",
    "start": "452759",
    "end": "454139"
  },
  {
    "text": "developed and deployed makes proper",
    "start": "454139",
    "end": "455699"
  },
  {
    "text": "resource allocation difficult to manage",
    "start": "455699",
    "end": "459240"
  },
  {
    "text": "what's even more daunting is that each",
    "start": "459240",
    "end": "461160"
  },
  {
    "text": "and every change to Resource allocation",
    "start": "461160",
    "end": "462840"
  },
  {
    "text": "affects both cost and performance for",
    "start": "462840",
    "end": "465060"
  },
  {
    "text": "the applications you're tuning and the",
    "start": "465060",
    "end": "467160"
  },
  {
    "text": "other applications deployed on the",
    "start": "467160",
    "end": "468539"
  },
  {
    "text": "cluster",
    "start": "468539",
    "end": "469620"
  },
  {
    "text": "imagine every application in the cluster",
    "start": "469620",
    "end": "471539"
  },
  {
    "text": "has a piece of rope tied to it and the",
    "start": "471539",
    "end": "473400"
  },
  {
    "text": "other applications on the cluster one",
    "start": "473400",
    "end": "475440"
  },
  {
    "text": "polar rub has second and third order",
    "start": "475440",
    "end": "477240"
  },
  {
    "text": "effects across the entire cluster",
    "start": "477240",
    "end": "479940"
  },
  {
    "text": "adjusting one pod's resources affects",
    "start": "479940",
    "end": "482400"
  },
  {
    "text": "the other pods to interact with it",
    "start": "482400",
    "end": "484319"
  },
  {
    "text": "if your backend applications are under",
    "start": "484319",
    "end": "486240"
  },
  {
    "text": "allocated and they cause timeouts with",
    "start": "486240",
    "end": "487919"
  },
  {
    "text": "the front end then it causes user issues",
    "start": "487919",
    "end": "491039"
  },
  {
    "text": "this is only a very basic example and",
    "start": "491039",
    "end": "493379"
  },
  {
    "text": "gets exacerbated in highly complex at",
    "start": "493379",
    "end": "495419"
  },
  {
    "text": "scale",
    "start": "495419",
    "end": "496680"
  },
  {
    "text": "watching analyzing and adjusting",
    "start": "496680",
    "end": "498419"
  },
  {
    "text": "resources for a cluster could easily be",
    "start": "498419",
    "end": "500220"
  },
  {
    "text": "a full-time job for someone even with a",
    "start": "500220",
    "end": "502319"
  },
  {
    "text": "swap cluster",
    "start": "502319",
    "end": "504000"
  },
  {
    "text": "it's impossible to do this manually for",
    "start": "504000",
    "end": "505860"
  },
  {
    "text": "most companies now most developers are",
    "start": "505860",
    "end": "508319"
  },
  {
    "text": "simply guessing or over allocating to",
    "start": "508319",
    "end": "510419"
  },
  {
    "text": "ensure they have enough resources",
    "start": "510419",
    "end": "512399"
  },
  {
    "text": "this is where socivio's application",
    "start": "512399",
    "end": "514440"
  },
  {
    "text": "profiling really shines",
    "start": "514440",
    "end": "516719"
  },
  {
    "text": "application profiling enables users to",
    "start": "516719",
    "end": "519240"
  },
  {
    "text": "get live feedback and recommendations",
    "start": "519240",
    "end": "521039"
  },
  {
    "text": "for resource allocation to fully",
    "start": "521039",
    "end": "523140"
  },
  {
    "text": "optimize both cost and performance of",
    "start": "523140",
    "end": "525540"
  },
  {
    "text": "applications for your entire environment",
    "start": "525540",
    "end": "527279"
  },
  {
    "text": "with just a click of a button this",
    "start": "527279",
    "end": "529560"
  },
  {
    "text": "enables developers and operations teams",
    "start": "529560",
    "end": "531420"
  },
  {
    "text": "to maintain the velocity at which they",
    "start": "531420",
    "end": "532860"
  },
  {
    "text": "intend to deploy new applications",
    "start": "532860",
    "end": "535080"
  },
  {
    "text": "if you have not spent much time thinking",
    "start": "535080",
    "end": "536459"
  },
  {
    "text": "about resource allocation think again",
    "start": "536459",
    "end": "538260"
  },
  {
    "text": "it's a serious problem",
    "start": "538260",
    "end": "540060"
  },
  {
    "text": "Gardner even reported Cloud overspend",
    "start": "540060",
    "end": "542220"
  },
  {
    "text": "for last year was around 17.6 billion",
    "start": "542220",
    "end": "545459"
  },
  {
    "text": "dollars",
    "start": "545459",
    "end": "547200"
  },
  {
    "text": "if resource allocation is such an issue",
    "start": "547200",
    "end": "549240"
  },
  {
    "text": "what are companies currently doing let's",
    "start": "549240",
    "end": "551580"
  },
  {
    "text": "jump into how companies solve this issue",
    "start": "551580",
    "end": "553320"
  },
  {
    "text": "today by manually profiling each",
    "start": "553320",
    "end": "555420"
  },
  {
    "text": "application",
    "start": "555420",
    "end": "556560"
  },
  {
    "text": "profiling is a process of gathering",
    "start": "556560",
    "end": "558240"
  },
  {
    "text": "information about a program's Behavior",
    "start": "558240",
    "end": "559860"
  },
  {
    "text": "as it executes",
    "start": "559860",
    "end": "561420"
  },
  {
    "text": "your profile an application to determine",
    "start": "561420",
    "end": "563279"
  },
  {
    "text": "which areas of a program can be",
    "start": "563279",
    "end": "564959"
  },
  {
    "text": "optimized to increase the overall",
    "start": "564959",
    "end": "566339"
  },
  {
    "text": "performance reduce its resource usage",
    "start": "566339",
    "end": "568740"
  },
  {
    "text": "and ensure stability application",
    "start": "568740",
    "end": "571019"
  },
  {
    "text": "profiling tools help to simplify the",
    "start": "571019",
    "end": "572880"
  },
  {
    "text": "process",
    "start": "572880",
    "end": "574380"
  },
  {
    "text": "we have discussed that there are",
    "start": "574380",
    "end": "575760"
  },
  {
    "text": "financial and performance sets you take",
    "start": "575760",
    "end": "577260"
  },
  {
    "text": "if you don't properly profile your",
    "start": "577260",
    "end": "578820"
  },
  {
    "text": "applications for example",
    "start": "578820",
    "end": "580860"
  },
  {
    "text": "if you under allocate resources you",
    "start": "580860",
    "end": "583019"
  },
  {
    "text": "could get pods being om killed and",
    "start": "583019",
    "end": "585000"
  },
  {
    "text": "throttled if you over allocate resources",
    "start": "585000",
    "end": "587700"
  },
  {
    "text": "you could get pods being throttled or",
    "start": "587700",
    "end": "589680"
  },
  {
    "text": "wasting resources if you elect to not",
    "start": "589680",
    "end": "592019"
  },
  {
    "text": "specify any requests or limits to",
    "start": "592019",
    "end": "593760"
  },
  {
    "text": "resources then you could have pods being",
    "start": "593760",
    "end": "595620"
  },
  {
    "text": "om killed or throttled",
    "start": "595620",
    "end": "597899"
  },
  {
    "text": "but why do these events happen first",
    "start": "597899",
    "end": "600000"
  },
  {
    "text": "let's define what CPU and member request",
    "start": "600000",
    "end": "602040"
  },
  {
    "text": "limits are",
    "start": "602040",
    "end": "603360"
  },
  {
    "text": "a request is telling kubernetes what my",
    "start": "603360",
    "end": "605459"
  },
  {
    "text": "resource consumption for CPU and memory",
    "start": "605459",
    "end": "607680"
  },
  {
    "text": "are for normal application Behavior",
    "start": "607680",
    "end": "610680"
  },
  {
    "text": "for example let's say we wrote an",
    "start": "610680",
    "end": "612779"
  },
  {
    "text": "application that can Digest 100 000",
    "start": "612779",
    "end": "615120"
  },
  {
    "text": "requests a second and it will consume",
    "start": "615120",
    "end": "617360"
  },
  {
    "text": "512 megabytes of memory",
    "start": "617360",
    "end": "620040"
  },
  {
    "text": "so I tell kubernetes that this",
    "start": "620040",
    "end": "622140"
  },
  {
    "text": "application that it's about to deploy is",
    "start": "622140",
    "end": "623940"
  },
  {
    "text": "going to require at least 512 megabytes",
    "start": "623940",
    "end": "626519"
  },
  {
    "text": "of memory",
    "start": "626519",
    "end": "627600"
  },
  {
    "text": "that's the request this is why",
    "start": "627600",
    "end": "629579"
  },
  {
    "text": "kubernetes knows how to take an",
    "start": "629579",
    "end": "631019"
  },
  {
    "text": "application and put it on a node that",
    "start": "631019",
    "end": "632700"
  },
  {
    "text": "has at least 512 megabytes of memory",
    "start": "632700",
    "end": "634980"
  },
  {
    "text": "free if we don't set a request then",
    "start": "634980",
    "end": "637320"
  },
  {
    "text": "kubernetes would just put it anywhere",
    "start": "637320",
    "end": "638820"
  },
  {
    "text": "and hope for the best",
    "start": "638820",
    "end": "640620"
  },
  {
    "text": "in the case that pod gets assigned to",
    "start": "640620",
    "end": "642240"
  },
  {
    "text": "node with only 100 megabytes of memory",
    "start": "642240",
    "end": "644160"
  },
  {
    "text": "available the Pod will crash if it",
    "start": "644160",
    "end": "646320"
  },
  {
    "text": "consumes more than 100 megabytes it",
    "start": "646320",
    "end": "649079"
  },
  {
    "text": "would reach that 100 megabyte limit try",
    "start": "649079",
    "end": "651360"
  },
  {
    "text": "to consume a little bit more and then",
    "start": "651360",
    "end": "653100"
  },
  {
    "text": "get om killed it's likely to restart",
    "start": "653100",
    "end": "655560"
  },
  {
    "text": "again and again and again the same",
    "start": "655560",
    "end": "658320"
  },
  {
    "text": "applies for CPU requests but because CPU",
    "start": "658320",
    "end": "660959"
  },
  {
    "text": "is a rechargeable resource the negative",
    "start": "660959",
    "end": "663060"
  },
  {
    "text": "effects are throttling and poor",
    "start": "663060",
    "end": "664740"
  },
  {
    "text": "application performance the second",
    "start": "664740",
    "end": "666660"
  },
  {
    "text": "resource allocation parameter that we're",
    "start": "666660",
    "end": "668279"
  },
  {
    "text": "going to talk about is the limit the",
    "start": "668279",
    "end": "670320"
  },
  {
    "text": "limit actually instructs kubernetes to",
    "start": "670320",
    "end": "672120"
  },
  {
    "text": "set a limit for that process and it's",
    "start": "672120",
    "end": "674339"
  },
  {
    "text": "actually for the control group in which",
    "start": "674339",
    "end": "675839"
  },
  {
    "text": "the process is running on the Node in",
    "start": "675839",
    "end": "677640"
  },
  {
    "text": "which it will deploy",
    "start": "677640",
    "end": "679079"
  },
  {
    "text": "the application cannot cross that limit",
    "start": "679079",
    "end": "681060"
  },
  {
    "text": "without being killed or throttled for",
    "start": "681060",
    "end": "682860"
  },
  {
    "text": "memory and CPU respectively the reason",
    "start": "682860",
    "end": "685320"
  },
  {
    "text": "to do that is to protect all of the",
    "start": "685320",
    "end": "687120"
  },
  {
    "text": "other applications on the cluster itself",
    "start": "687120",
    "end": "690360"
  },
  {
    "text": "clearly we need to be thoughtful in",
    "start": "690360",
    "end": "692279"
  },
  {
    "text": "setting resource requesting limits for",
    "start": "692279",
    "end": "693839"
  },
  {
    "text": "each application we deploy",
    "start": "693839",
    "end": "696240"
  },
  {
    "text": "let's take a look at how we would",
    "start": "696240",
    "end": "697620"
  },
  {
    "text": "manually profile an application",
    "start": "697620",
    "end": "700980"
  },
  {
    "text": "first we collect all the raw data we",
    "start": "700980",
    "end": "703079"
  },
  {
    "text": "would need to make an informed decision",
    "start": "703079",
    "end": "704640"
  },
  {
    "text": "second we measure the data over our set",
    "start": "704640",
    "end": "706980"
  },
  {
    "text": "time interval to determine how the",
    "start": "706980",
    "end": "708480"
  },
  {
    "text": "application behaves finally we adjust",
    "start": "708480",
    "end": "710820"
  },
  {
    "text": "the code and or resources to meet the",
    "start": "710820",
    "end": "712920"
  },
  {
    "text": "application's needs raw data collection",
    "start": "712920",
    "end": "715500"
  },
  {
    "text": "can be done with a variety of scripts or",
    "start": "715500",
    "end": "717060"
  },
  {
    "text": "tools",
    "start": "717060",
    "end": "718320"
  },
  {
    "text": "this is vital to get right because if we",
    "start": "718320",
    "end": "720300"
  },
  {
    "text": "don't collect the right amount of data",
    "start": "720300",
    "end": "721800"
  },
  {
    "text": "from Real Environment and that data is",
    "start": "721800",
    "end": "723959"
  },
  {
    "text": "not granular enough then we are wasting",
    "start": "723959",
    "end": "726060"
  },
  {
    "text": "our time with the rest of the process",
    "start": "726060",
    "end": "727380"
  },
  {
    "text": "because we're using bad and inaccurate",
    "start": "727380",
    "end": "729600"
  },
  {
    "text": "data for example you can Prometheus and",
    "start": "729600",
    "end": "732660"
  },
  {
    "text": "grafana is not accurate enough because",
    "start": "732660",
    "end": "734459"
  },
  {
    "text": "it is not designed for 100 accuracy",
    "start": "734459",
    "end": "737339"
  },
  {
    "text": "if we're using this data for profiling",
    "start": "737339",
    "end": "739139"
  },
  {
    "text": "then we would be missing vital pieces of",
    "start": "739139",
    "end": "741060"
  },
  {
    "text": "information needed to properly optimize",
    "start": "741060",
    "end": "742800"
  },
  {
    "text": "our resources",
    "start": "742800",
    "end": "745139"
  },
  {
    "text": "let's take a look at a real example of",
    "start": "745139",
    "end": "747060"
  },
  {
    "text": "how so Savio collects and displays",
    "start": "747060",
    "end": "748800"
  },
  {
    "text": "information versus Prometheus and",
    "start": "748800",
    "end": "750360"
  },
  {
    "text": "grafana on the bottom of the screen we",
    "start": "750360",
    "end": "752880"
  },
  {
    "text": "have a grafana dashboard displaying CPU",
    "start": "752880",
    "end": "755100"
  },
  {
    "text": "consumption of cesivia's machine",
    "start": "755100",
    "end": "756899"
  },
  {
    "text": "learning microservice that discovers new",
    "start": "756899",
    "end": "758880"
  },
  {
    "text": "failures and their Associated root cause",
    "start": "758880",
    "end": "760620"
  },
  {
    "text": "in the kubernetes environments on the",
    "start": "760620",
    "end": "763200"
  },
  {
    "text": "top of the screen we have the exact same",
    "start": "763200",
    "end": "764940"
  },
  {
    "text": "pod display at the exact same time",
    "start": "764940",
    "end": "766740"
  },
  {
    "text": "intervals",
    "start": "766740",
    "end": "767820"
  },
  {
    "text": "only in socivious live metrics dashboard",
    "start": "767820",
    "end": "770360"
  },
  {
    "text": "clearly we can see the level of detail",
    "start": "770360",
    "end": "772800"
  },
  {
    "text": "that cessivia provides over the most",
    "start": "772800",
    "end": "774600"
  },
  {
    "text": "commonly used tool today if we're at a",
    "start": "774600",
    "end": "777120"
  },
  {
    "text": "profile CPU based on the kirfana",
    "start": "777120",
    "end": "778800"
  },
  {
    "text": "dashboard then we would say my CPU never",
    "start": "778800",
    "end": "781500"
  },
  {
    "text": "exceeded half a core and we would set",
    "start": "781500",
    "end": "783300"
  },
  {
    "text": "our CPU requesting limits accordingly in",
    "start": "783300",
    "end": "785820"
  },
  {
    "text": "reality the CPU is much more active",
    "start": "785820",
    "end": "788700"
  },
  {
    "text": "with the CPU reaching over half a core",
    "start": "788700",
    "end": "791399"
  },
  {
    "text": "15 times and even up to 1.4 cores",
    "start": "791399",
    "end": "795000"
  },
  {
    "text": "profile in this application with 0.5",
    "start": "795000",
    "end": "797040"
  },
  {
    "text": "cores would cause consistent throttling",
    "start": "797040",
    "end": "799320"
  },
  {
    "text": "causing very bad application performance",
    "start": "799320",
    "end": "801959"
  },
  {
    "text": "timeouts in a variety of other issues",
    "start": "801959",
    "end": "804779"
  },
  {
    "text": "that can stem to every other pod that",
    "start": "804779",
    "end": "806519"
  },
  {
    "text": "interacts with",
    "start": "806519",
    "end": "808700"
  },
  {
    "text": "socipio's data is much different than",
    "start": "808700",
    "end": "810720"
  },
  {
    "text": "what Prometheus is displaying we can",
    "start": "810720",
    "end": "813000"
  },
  {
    "text": "easily see that data granularity greatly",
    "start": "813000",
    "end": "815100"
  },
  {
    "text": "affects how we would accurately allocate",
    "start": "815100",
    "end": "816779"
  },
  {
    "text": "resources to this application",
    "start": "816779",
    "end": "819480"
  },
  {
    "text": "imagine how this discrepancy in accurate",
    "start": "819480",
    "end": "822000"
  },
  {
    "text": "data affects every other application",
    "start": "822000",
    "end": "823560"
  },
  {
    "text": "running on your kubernetes cluster the",
    "start": "823560",
    "end": "825779"
  },
  {
    "text": "single example becomes a massive issue",
    "start": "825779",
    "end": "827639"
  },
  {
    "text": "at scale",
    "start": "827639",
    "end": "829800"
  },
  {
    "text": "using inaccurate data clearly leads to",
    "start": "829800",
    "end": "832199"
  },
  {
    "text": "issues that are exacerbated at scale so",
    "start": "832199",
    "end": "834600"
  },
  {
    "text": "how do we start with accurate and",
    "start": "834600",
    "end": "836279"
  },
  {
    "text": "granular data how do we work with the",
    "start": "836279",
    "end": "838139"
  },
  {
    "text": "data collectors out there today if",
    "start": "838139",
    "end": "839519"
  },
  {
    "text": "they're not usable well we don't so",
    "start": "839519",
    "end": "842339"
  },
  {
    "text": "severe recognized this issue and we",
    "start": "842339",
    "end": "844079"
  },
  {
    "text": "opted to build our own high performance",
    "start": "844079",
    "end": "845820"
  },
  {
    "text": "data collectors that overcame the",
    "start": "845820",
    "end": "847320"
  },
  {
    "text": "challenges of Open Source data",
    "start": "847320",
    "end": "849000"
  },
  {
    "text": "collectors",
    "start": "849000",
    "end": "850560"
  },
  {
    "text": "data collectors are incredibly resource",
    "start": "850560",
    "end": "852240"
  },
  {
    "text": "friendly and completely optimized for",
    "start": "852240",
    "end": "854220"
  },
  {
    "text": "kubernetes they collect metrics at a",
    "start": "854220",
    "end": "856920"
  },
  {
    "text": "much more granular level than any other",
    "start": "856920",
    "end": "858720"
  },
  {
    "text": "open source tool in existence today we",
    "start": "858720",
    "end": "861120"
  },
  {
    "text": "speak about this in our other webinar in",
    "start": "861120",
    "end": "862740"
  },
  {
    "text": "data swirling which talks about",
    "start": "862740",
    "end": "864180"
  },
  {
    "text": "sussivia's novel approach to both",
    "start": "864180",
    "end": "865800"
  },
  {
    "text": "Gathering granular metrics and also",
    "start": "865800",
    "end": "867959"
  },
  {
    "text": "finding and preemptively detecting",
    "start": "867959",
    "end": "869579"
  },
  {
    "text": "kubernetes issues with custom data",
    "start": "869579",
    "end": "872220"
  },
  {
    "text": "collectors utilizing data scrolling",
    "start": "872220",
    "end": "873779"
  },
  {
    "text": "socivio collects and analyzes massive",
    "start": "873779",
    "end": "876060"
  },
  {
    "text": "amounts of data at lightning speed",
    "start": "876060",
    "end": "878579"
  },
  {
    "text": "let's briefly discuss how data scrolling",
    "start": "878579",
    "end": "880500"
  },
  {
    "text": "works as it's a key component to House",
    "start": "880500",
    "end": "882300"
  },
  {
    "text": "of civio is able to make use of mass",
    "start": "882300",
    "end": "884100"
  },
  {
    "text": "amount of data in real time",
    "start": "884100",
    "end": "886160"
  },
  {
    "text": "at a high level we collect everything",
    "start": "886160",
    "end": "888480"
  },
  {
    "text": "from the kernel OS Network processes",
    "start": "888480",
    "end": "891240"
  },
  {
    "text": "applications container runtime and",
    "start": "891240",
    "end": "893279"
  },
  {
    "text": "kubernetes API",
    "start": "893279",
    "end": "895019"
  },
  {
    "text": "we determine what pieces of data are",
    "start": "895019",
    "end": "896880"
  },
  {
    "text": "relevant by immediately evaluating every",
    "start": "896880",
    "end": "898980"
  },
  {
    "text": "data point that we collect we only",
    "start": "898980",
    "end": "901019"
  },
  {
    "text": "analyze the currently relevant data",
    "start": "901019",
    "end": "902699"
  },
  {
    "text": "within our set of machine learning",
    "start": "902699",
    "end": "903899"
  },
  {
    "text": "microservices data is processed and",
    "start": "903899",
    "end": "906300"
  },
  {
    "text": "analyzed 100 in memory and immediately",
    "start": "906300",
    "end": "908519"
  },
  {
    "text": "swirled to the next machine learning",
    "start": "908519",
    "end": "910500"
  },
  {
    "text": "microservice for processing",
    "start": "910500",
    "end": "912480"
  },
  {
    "text": "in parallel live metrics are displayed",
    "start": "912480",
    "end": "914940"
  },
  {
    "text": "in our dashboard in applications",
    "start": "914940",
    "end": "916380"
  },
  {
    "text": "resources are profiled and optimization",
    "start": "916380",
    "end": "918720"
  },
  {
    "text": "recommendations are provided",
    "start": "918720",
    "end": "921000"
  },
  {
    "text": "this is different than every other tool",
    "start": "921000",
    "end": "922800"
  },
  {
    "text": "today because they all collect data",
    "start": "922800",
    "end": "924480"
  },
  {
    "text": "stored on disk in a database then",
    "start": "924480",
    "end": "926820"
  },
  {
    "text": "process that data and then send back",
    "start": "926820",
    "end": "929100"
  },
  {
    "text": "results after an incident has happened",
    "start": "929100",
    "end": "930839"
  },
  {
    "text": "or display metrics that are computed",
    "start": "930839",
    "end": "932639"
  },
  {
    "text": "averages and frankly not usable also",
    "start": "932639",
    "end": "935699"
  },
  {
    "text": "many tools today are highly intrusive",
    "start": "935699",
    "end": "937680"
  },
  {
    "text": "they require instrumentation code",
    "start": "937680",
    "end": "939720"
  },
  {
    "text": "injection data offloading or variety of",
    "start": "939720",
    "end": "941820"
  },
  {
    "text": "other security and stability risk",
    "start": "941820",
    "end": "944100"
  },
  {
    "text": "another huge difference is that every",
    "start": "944100",
    "end": "946019"
  },
  {
    "text": "other tool overwhelms users with data",
    "start": "946019",
    "end": "948060"
  },
  {
    "text": "graphs and logs",
    "start": "948060",
    "end": "950639"
  },
  {
    "text": "sifting through an overwhelming amount",
    "start": "950639",
    "end": "952320"
  },
  {
    "text": "of information is only a small part of",
    "start": "952320",
    "end": "954360"
  },
  {
    "text": "the puzzle as it still requires a human",
    "start": "954360",
    "end": "956040"
  },
  {
    "text": "with expertise to analyze and use its",
    "start": "956040",
    "end": "958440"
  },
  {
    "text": "information",
    "start": "958440",
    "end": "959639"
  },
  {
    "text": "provides data that is already analyzed",
    "start": "959639",
    "end": "962160"
  },
  {
    "text": "and removes the time-consuming process",
    "start": "962160",
    "end": "964019"
  },
  {
    "text": "of classifying correlating and analyzing",
    "start": "964019",
    "end": "966779"
  },
  {
    "text": "information",
    "start": "966779",
    "end": "968279"
  },
  {
    "text": "let's talk about a few more approaches",
    "start": "968279",
    "end": "969899"
  },
  {
    "text": "to determining resource allocation and",
    "start": "969899",
    "end": "971880"
  },
  {
    "text": "why they fall short I have talked to",
    "start": "971880",
    "end": "973920"
  },
  {
    "text": "multiple people who sit there using a",
    "start": "973920",
    "end": "975420"
  },
  {
    "text": "vertical pod Auto scaler and wants to",
    "start": "975420",
    "end": "977820"
  },
  {
    "text": "know why it's not the right solution",
    "start": "977820",
    "end": "979680"
  },
  {
    "text": "well first and foremost it competes",
    "start": "979680",
    "end": "982079"
  },
  {
    "text": "against horizontal scaling which is a",
    "start": "982079",
    "end": "984300"
  },
  {
    "text": "key principle to Cloud native",
    "start": "984300",
    "end": "985560"
  },
  {
    "text": "architecture the entire purpose of a",
    "start": "985560",
    "end": "987839"
  },
  {
    "text": "containers is to use as few resources as",
    "start": "987839",
    "end": "990060"
  },
  {
    "text": "possible and to be elastic or scale",
    "start": "990060",
    "end": "992399"
  },
  {
    "text": "horizontally by doing this you won't run",
    "start": "992399",
    "end": "995040"
  },
  {
    "text": "into limitations of a single machine if",
    "start": "995040",
    "end": "997019"
  },
  {
    "text": "architected properly and you can handle",
    "start": "997019",
    "end": "999060"
  },
  {
    "text": "a load that is limited only by our",
    "start": "999060",
    "end": "1000620"
  },
  {
    "text": "entire infrastructure or kubernetes",
    "start": "1000620",
    "end": "1002180"
  },
  {
    "text": "cluster",
    "start": "1002180",
    "end": "1003259"
  },
  {
    "text": "right size in your application is",
    "start": "1003259",
    "end": "1005000"
  },
  {
    "text": "essentially fully automated at this",
    "start": "1005000",
    "end": "1006620"
  },
  {
    "text": "point the second issue with the vertical",
    "start": "1006620",
    "end": "1008720"
  },
  {
    "text": "pod Auto Skiller is if you don't set or",
    "start": "1008720",
    "end": "1011300"
  },
  {
    "text": "incorrectly set then Max allowed for",
    "start": "1011300",
    "end": "1013100"
  },
  {
    "text": "your resources then it will continue to",
    "start": "1013100",
    "end": "1015199"
  },
  {
    "text": "add more resources to your applications",
    "start": "1015199",
    "end": "1017180"
  },
  {
    "text": "without knowing or caring about the",
    "start": "1017180",
    "end": "1019220"
  },
  {
    "text": "repercussions",
    "start": "1019220",
    "end": "1020480"
  },
  {
    "text": "have enough resources are added the Pod",
    "start": "1020480",
    "end": "1022820"
  },
  {
    "text": "will be om killed and you would need to",
    "start": "1022820",
    "end": "1025100"
  },
  {
    "text": "go through the process of determining",
    "start": "1025100",
    "end": "1026418"
  },
  {
    "text": "the proper request and limits anyway on",
    "start": "1026419",
    "end": "1028760"
  },
  {
    "text": "top of recovering from a failed",
    "start": "1028760",
    "end": "1030140"
  },
  {
    "text": "application the third issue is that you",
    "start": "1030140",
    "end": "1032298"
  },
  {
    "text": "should set boundaries for your resources",
    "start": "1032299",
    "end": "1033980"
  },
  {
    "text": "these are called the men and Max allowed",
    "start": "1033980",
    "end": "1036558"
  },
  {
    "text": "in the vertical pod Auto scaler",
    "start": "1036559",
    "end": "1039140"
  },
  {
    "text": "question is without accurately profiling",
    "start": "1039140",
    "end": "1041720"
  },
  {
    "text": "your application how do you get a Min",
    "start": "1041720",
    "end": "1043880"
  },
  {
    "text": "and Max allowed you would be relying on",
    "start": "1043880",
    "end": "1046579"
  },
  {
    "text": "bad data in most cases and again it",
    "start": "1046579",
    "end": "1049160"
  },
  {
    "text": "negates any time that you think you save",
    "start": "1049160",
    "end": "1051020"
  },
  {
    "text": "by relying on the vertical pod Auto",
    "start": "1051020",
    "end": "1053059"
  },
  {
    "text": "scaler if those are not good enough",
    "start": "1053059",
    "end": "1054980"
  },
  {
    "text": "reasons then I'll leave you with this",
    "start": "1054980",
    "end": "1056539"
  },
  {
    "text": "there is a reason that the kubernetes",
    "start": "1056539",
    "end": "1058580"
  },
  {
    "text": "committee rejected the vertical pod Auto",
    "start": "1058580",
    "end": "1060799"
  },
  {
    "text": "scalar project inside your own risk to",
    "start": "1060799",
    "end": "1063080"
  },
  {
    "text": "use it",
    "start": "1063080",
    "end": "1064460"
  },
  {
    "text": "the other common methods used today are",
    "start": "1064460",
    "end": "1066440"
  },
  {
    "text": "also not sufficient trial and error is",
    "start": "1066440",
    "end": "1068960"
  },
  {
    "text": "okay for sync application or a small",
    "start": "1068960",
    "end": "1071120"
  },
  {
    "text": "isolated test environment",
    "start": "1071120",
    "end": "1073640"
  },
  {
    "text": "if you have the time to manually do this",
    "start": "1073640",
    "end": "1075260"
  },
  {
    "text": "for each and every version of an",
    "start": "1075260",
    "end": "1076700"
  },
  {
    "text": "application to deploy and you're only",
    "start": "1076700",
    "end": "1078679"
  },
  {
    "text": "utilizing kubernetes for a few small",
    "start": "1078679",
    "end": "1080179"
  },
  {
    "text": "applications and go for it this is",
    "start": "1080179",
    "end": "1082280"
  },
  {
    "text": "usually never the case and one can argue",
    "start": "1082280",
    "end": "1084080"
  },
  {
    "text": "that you should not bother using",
    "start": "1084080",
    "end": "1085220"
  },
  {
    "text": "kubernetes if it's first single",
    "start": "1085220",
    "end": "1086539"
  },
  {
    "text": "application or only a handful",
    "start": "1086539",
    "end": "1088580"
  },
  {
    "text": "and of course you're not going to use",
    "start": "1088580",
    "end": "1090320"
  },
  {
    "text": "trial and error with massive production",
    "start": "1090320",
    "end": "1091940"
  },
  {
    "text": "deployments in furthermore not when",
    "start": "1091940",
    "end": "1094280"
  },
  {
    "text": "scaling",
    "start": "1094280",
    "end": "1095720"
  },
  {
    "text": "trial and error simply does not work at",
    "start": "1095720",
    "end": "1098059"
  },
  {
    "text": "scale it would require an extensive",
    "start": "1098059",
    "end": "1100100"
  },
  {
    "text": "amount of people to do this as a",
    "start": "1100100",
    "end": "1101539"
  },
  {
    "text": "full-time job",
    "start": "1101539",
    "end": "1102860"
  },
  {
    "text": "load testing should only be done to",
    "start": "1102860",
    "end": "1104660"
  },
  {
    "text": "determine the minimum viable settings",
    "start": "1104660",
    "end": "1106220"
  },
  {
    "text": "needed to run a base unit of a",
    "start": "1106220",
    "end": "1108440"
  },
  {
    "text": "microservice this means that we need to",
    "start": "1108440",
    "end": "1110539"
  },
  {
    "text": "find how small we can make a pod to",
    "start": "1110539",
    "end": "1112280"
  },
  {
    "text": "handle the smallest semi-upload our",
    "start": "1112280",
    "end": "1113840"
  },
  {
    "text": "application will receive",
    "start": "1113840",
    "end": "1115880"
  },
  {
    "text": "the problem is that most companies even",
    "start": "1115880",
    "end": "1118160"
  },
  {
    "text": "if they claim they are experienced",
    "start": "1118160",
    "end": "1119720"
  },
  {
    "text": "kubernetes users are performing load",
    "start": "1119720",
    "end": "1122240"
  },
  {
    "text": "testing on an application and trying to",
    "start": "1122240",
    "end": "1124280"
  },
  {
    "text": "determine how big they should make it we",
    "start": "1124280",
    "end": "1126919"
  },
  {
    "text": "talked about manually observing metrics",
    "start": "1126919",
    "end": "1128660"
  },
  {
    "text": "already but as a recap it's time",
    "start": "1128660",
    "end": "1130520"
  },
  {
    "text": "consuming and open source City",
    "start": "1130520",
    "end": "1132020"
  },
  {
    "text": "collectors don't provide accurate enough",
    "start": "1132020",
    "end": "1133820"
  },
  {
    "text": "data to you",
    "start": "1133820",
    "end": "1135860"
  },
  {
    "text": "the one thing all these Solutions have",
    "start": "1135860",
    "end": "1137780"
  },
  {
    "text": "in common is that even if you do get an",
    "start": "1137780",
    "end": "1139640"
  },
  {
    "text": "answer of how the application is",
    "start": "1139640",
    "end": "1140840"
  },
  {
    "text": "performing we still need to know what to",
    "start": "1140840",
    "end": "1143000"
  },
  {
    "text": "set our resource requests and limits to",
    "start": "1143000",
    "end": "1146620"
  },
  {
    "text": "civil automates and streamlines the",
    "start": "1147500",
    "end": "1149480"
  },
  {
    "text": "entire profiling process",
    "start": "1149480",
    "end": "1152059"
  },
  {
    "text": "we collect detailed metrics for all of",
    "start": "1152059",
    "end": "1153980"
  },
  {
    "text": "your applications and feed that into our",
    "start": "1153980",
    "end": "1156020"
  },
  {
    "text": "application profile and microservices",
    "start": "1156020",
    "end": "1157640"
  },
  {
    "text": "these microservices are constantly",
    "start": "1157640",
    "end": "1159799"
  },
  {
    "text": "observing the application's behavior in",
    "start": "1159799",
    "end": "1161480"
  },
  {
    "text": "resource consumption",
    "start": "1161480",
    "end": "1163100"
  },
  {
    "text": "there are a number of tools today which",
    "start": "1163100",
    "end": "1165080"
  },
  {
    "text": "can greatly assist in resource profiling",
    "start": "1165080",
    "end": "1167480"
  },
  {
    "text": "however so sibio has an advantage in",
    "start": "1167480",
    "end": "1169580"
  },
  {
    "text": "that we leverage our state-of-the-art",
    "start": "1169580",
    "end": "1171200"
  },
  {
    "text": "data's role in technology",
    "start": "1171200",
    "end": "1173120"
  },
  {
    "text": "which is our real-time and disconnected",
    "start": "1173120",
    "end": "1175100"
  },
  {
    "text": "data collection and Analysis",
    "start": "1175100",
    "end": "1176419"
  },
  {
    "text": "architecture",
    "start": "1176419",
    "end": "1178160"
  },
  {
    "text": "socivio can capture incredibly granular",
    "start": "1178160",
    "end": "1180559"
  },
  {
    "text": "resource utilization metrics and has a",
    "start": "1180559",
    "end": "1182840"
  },
  {
    "text": "much more accurate picture of what the",
    "start": "1182840",
    "end": "1184640"
  },
  {
    "text": "resource utilization is and what the",
    "start": "1184640",
    "end": "1186980"
  },
  {
    "text": "allocated resources should be",
    "start": "1186980",
    "end": "1189380"
  },
  {
    "text": "aware if you're new to kubernetes or",
    "start": "1189380",
    "end": "1191600"
  },
  {
    "text": "have not designed your applications to",
    "start": "1191600",
    "end": "1193100"
  },
  {
    "text": "be Cloud native socivious application",
    "start": "1193100",
    "end": "1195500"
  },
  {
    "text": "recommendations are geared towards those",
    "start": "1195500",
    "end": "1197720"
  },
  {
    "text": "that have been working with kubernetes",
    "start": "1197720",
    "end": "1199220"
  },
  {
    "text": "and have designed applications with",
    "start": "1199220",
    "end": "1200900"
  },
  {
    "text": "Cloud native in mind",
    "start": "1200900",
    "end": "1203000"
  },
  {
    "text": "of course the Civil will alert you if",
    "start": "1203000",
    "end": "1205100"
  },
  {
    "text": "your applications are non-cloud native",
    "start": "1205100",
    "end": "1206720"
  },
  {
    "text": "and it will still recommend resource",
    "start": "1206720",
    "end": "1208580"
  },
  {
    "text": "allocations based off best practices for",
    "start": "1208580",
    "end": "1210500"
  },
  {
    "text": "a cloud native design",
    "start": "1210500",
    "end": "1212659"
  },
  {
    "text": "if you do run into this warning it's a",
    "start": "1212659",
    "end": "1214340"
  },
  {
    "text": "great thing it means there's room for",
    "start": "1214340",
    "end": "1216080"
  },
  {
    "text": "improvement in your application design",
    "start": "1216080",
    "end": "1217460"
  },
  {
    "text": "and we have identified it this process",
    "start": "1217460",
    "end": "1219679"
  },
  {
    "text": "makes your applications significantly",
    "start": "1219679",
    "end": "1221539"
  },
  {
    "text": "more stable robust and scalable",
    "start": "1221539",
    "end": "1224480"
  },
  {
    "text": "one in common scenario is that socivio",
    "start": "1224480",
    "end": "1226640"
  },
  {
    "text": "generates lower resource requested",
    "start": "1226640",
    "end": "1228559"
  },
  {
    "text": "limits than a developer has allocated",
    "start": "1228559",
    "end": "1230419"
  },
  {
    "text": "and thus incorrectly thanks should be",
    "start": "1230419",
    "end": "1233000"
  },
  {
    "text": "allocated which scares developers the",
    "start": "1233000",
    "end": "1235940"
  },
  {
    "text": "application will run and throttle when",
    "start": "1235940",
    "end": "1237500"
  },
  {
    "text": "it hits a certain load the proper method",
    "start": "1237500",
    "end": "1239600"
  },
  {
    "text": "of allowing more capacity is to scale",
    "start": "1239600",
    "end": "1241580"
  },
  {
    "text": "horizontally by adding more replicas",
    "start": "1241580",
    "end": "1243559"
  },
  {
    "text": "this ensures we are utilizing Cloud",
    "start": "1243559",
    "end": "1245900"
  },
  {
    "text": "native design principles to achieve",
    "start": "1245900",
    "end": "1247700"
  },
  {
    "text": "unlimited elasticity with their",
    "start": "1247700",
    "end": "1249500"
  },
  {
    "text": "applications",
    "start": "1249500",
    "end": "1251179"
  },
  {
    "text": "the problem is that newer or",
    "start": "1251179",
    "end": "1253039"
  },
  {
    "text": "inexperienced developers who apply the",
    "start": "1253039",
    "end": "1254900"
  },
  {
    "text": "lift and shift mentality are not",
    "start": "1254900",
    "end": "1256460"
  },
  {
    "text": "prepared to add replicas but rather",
    "start": "1256460",
    "end": "1258260"
  },
  {
    "text": "scale up this poor application design",
    "start": "1258260",
    "end": "1260840"
  },
  {
    "text": "can lead to lost data and or poor",
    "start": "1260840",
    "end": "1263059"
  },
  {
    "text": "performance",
    "start": "1263059",
    "end": "1264320"
  },
  {
    "text": "keep in mind that this is 100 tied to",
    "start": "1264320",
    "end": "1266539"
  },
  {
    "text": "poor application Design This goes",
    "start": "1266539",
    "end": "1268640"
  },
  {
    "text": "against the entire point of kubernetes",
    "start": "1268640",
    "end": "1270440"
  },
  {
    "text": "and microservices socivious application",
    "start": "1270440",
    "end": "1273080"
  },
  {
    "text": "profile not only gives you the right",
    "start": "1273080",
    "end": "1274700"
  },
  {
    "text": "recommendations but it can make your",
    "start": "1274700",
    "end": "1276799"
  },
  {
    "text": "developers better prepared for cloud",
    "start": "1276799",
    "end": "1278600"
  },
  {
    "text": "native world",
    "start": "1278600",
    "end": "1280280"
  },
  {
    "text": "let's jump into a few live examples of",
    "start": "1280280",
    "end": "1282620"
  },
  {
    "text": "application profiling",
    "start": "1282620",
    "end": "1285700"
  },
  {
    "text": "let's take a look at an over-allocated",
    "start": "1286039",
    "end": "1288080"
  },
  {
    "text": "application to see how we can quickly",
    "start": "1288080",
    "end": "1289940"
  },
  {
    "text": "free up resources on our cluster and",
    "start": "1289940",
    "end": "1291620"
  },
  {
    "text": "reduce our Cloud spend",
    "start": "1291620",
    "end": "1293240"
  },
  {
    "text": "on the top of the screen we have",
    "start": "1293240",
    "end": "1294740"
  },
  {
    "text": "socivious live metrics on CPU",
    "start": "1294740",
    "end": "1296600"
  },
  {
    "text": "consumption for our grafana deployment",
    "start": "1296600",
    "end": "1298340"
  },
  {
    "text": "of note sycivious live metrics are",
    "start": "1298340",
    "end": "1301220"
  },
  {
    "text": "always free and are much more granular",
    "start": "1301220",
    "end": "1302900"
  },
  {
    "text": "than what Prometheus provides",
    "start": "1302900",
    "end": "1306020"
  },
  {
    "text": "on the bottom of the screen we have the",
    "start": "1306020",
    "end": "1307760"
  },
  {
    "text": "same application during the same time",
    "start": "1307760",
    "end": "1309440"
  },
  {
    "text": "period only they are displayed in",
    "start": "1309440",
    "end": "1311419"
  },
  {
    "text": "openshift Via prometheus's live metrics",
    "start": "1311419",
    "end": "1313520"
  },
  {
    "text": "and CPU consumption",
    "start": "1313520",
    "end": "1315860"
  },
  {
    "text": "by looking at sicivio we can see that",
    "start": "1315860",
    "end": "1318380"
  },
  {
    "text": "the application's behavior is pretty",
    "start": "1318380",
    "end": "1319880"
  },
  {
    "text": "erratic with several repetitive spikes",
    "start": "1319880",
    "end": "1321980"
  },
  {
    "text": "in CPU",
    "start": "1321980",
    "end": "1323900"
  },
  {
    "text": "we will take a look at the memory",
    "start": "1323900",
    "end": "1325340"
  },
  {
    "text": "consumption as well we can see it's",
    "start": "1325340",
    "end": "1327200"
  },
  {
    "text": "fairly consistent over the same time",
    "start": "1327200",
    "end": "1328640"
  },
  {
    "text": "period okay now normally we would have",
    "start": "1328640",
    "end": "1331100"
  },
  {
    "text": "to start writing down the data points",
    "start": "1331100",
    "end": "1332360"
  },
  {
    "text": "for CPU and memory consumption determine",
    "start": "1332360",
    "end": "1334580"
  },
  {
    "text": "how the application behaves calculate",
    "start": "1334580",
    "end": "1336679"
  },
  {
    "text": "the resources used while balancing that",
    "start": "1336679",
    "end": "1338299"
  },
  {
    "text": "against the application's behavior to",
    "start": "1338299",
    "end": "1340340"
  },
  {
    "text": "determine our resource requests and",
    "start": "1340340",
    "end": "1341720"
  },
  {
    "text": "limits",
    "start": "1341720",
    "end": "1342919"
  },
  {
    "text": "oh this can take some time to determine",
    "start": "1342919",
    "end": "1345799"
  },
  {
    "text": "and this is only for one application",
    "start": "1345799",
    "end": "1347659"
  },
  {
    "text": "let's make this easy and utilize this",
    "start": "1347659",
    "end": "1349940"
  },
  {
    "text": "video",
    "start": "1349940",
    "end": "1351200"
  },
  {
    "text": "I'll navigate to sussivia's application",
    "start": "1351200",
    "end": "1353480"
  },
  {
    "text": "profiling module and see what the",
    "start": "1353480",
    "end": "1355159"
  },
  {
    "text": "recommendations are I'll filter by",
    "start": "1355159",
    "end": "1357500"
  },
  {
    "text": "over-allocated applications and click on",
    "start": "1357500",
    "end": "1359600"
  },
  {
    "text": "grafana",
    "start": "1359600",
    "end": "1362080"
  },
  {
    "text": "we can see that memory is heavily over",
    "start": "1368659",
    "end": "1370640"
  },
  {
    "text": "allocated by a factor of about 10.",
    "start": "1370640",
    "end": "1373580"
  },
  {
    "text": "our maximum memory consumption only",
    "start": "1373580",
    "end": "1375620"
  },
  {
    "text": "picked at 55 megabytes of memory but",
    "start": "1375620",
    "end": "1378200"
  },
  {
    "text": "there's one gigabyte allocated as a",
    "start": "1378200",
    "end": "1379880"
  },
  {
    "text": "limit with a request of 256 megabytes we",
    "start": "1379880",
    "end": "1383360"
  },
  {
    "text": "were also over allocated on CPU by quite",
    "start": "1383360",
    "end": "1385400"
  },
  {
    "text": "a bit",
    "start": "1385400",
    "end": "1386960"
  },
  {
    "text": "so sevilla's recommendations are",
    "start": "1386960",
    "end": "1388700"
  },
  {
    "text": "reflective of the actual consumption of",
    "start": "1388700",
    "end": "1390380"
  },
  {
    "text": "a grafana and the best part is we didn't",
    "start": "1390380",
    "end": "1392539"
  },
  {
    "text": "have to waste time tracking and",
    "start": "1392539",
    "end": "1393980"
  },
  {
    "text": "analyzing all this information we simply",
    "start": "1393980",
    "end": "1396799"
  },
  {
    "text": "click execute recommendation into",
    "start": "1396799",
    "end": "1398740"
  },
  {
    "text": "civio-adjusted resource requests and",
    "start": "1398740",
    "end": "1400580"
  },
  {
    "text": "limits for us",
    "start": "1400580",
    "end": "1401900"
  },
  {
    "text": "saving precious resources in our cluster",
    "start": "1401900",
    "end": "1404000"
  },
  {
    "text": "that can be allocated to other",
    "start": "1404000",
    "end": "1405320"
  },
  {
    "text": "applications to improve their",
    "start": "1405320",
    "end": "1406640"
  },
  {
    "text": "performance or make space for more",
    "start": "1406640",
    "end": "1408620"
  },
  {
    "text": "applications to be deployed on our same",
    "start": "1408620",
    "end": "1410600"
  },
  {
    "text": "cluster",
    "start": "1410600",
    "end": "1411980"
  },
  {
    "text": "let's take a look at one more",
    "start": "1411980",
    "end": "1413360"
  },
  {
    "text": "application this time we will look at a",
    "start": "1413360",
    "end": "1415520"
  },
  {
    "text": "pod that is under allocated and",
    "start": "1415520",
    "end": "1416900"
  },
  {
    "text": "throttling",
    "start": "1416900",
    "end": "1417919"
  },
  {
    "text": "we'll take a look at the live metrics",
    "start": "1417919",
    "end": "1419480"
  },
  {
    "text": "for the Pod to better understand",
    "start": "1419480",
    "end": "1420500"
  },
  {
    "text": "Cecilia's recommendations",
    "start": "1420500",
    "end": "1422900"
  },
  {
    "text": "the memory consumption is relatively low",
    "start": "1422900",
    "end": "1424640"
  },
  {
    "text": "and there are no real concerns there",
    "start": "1424640",
    "end": "1426020"
  },
  {
    "text": "let's take a look at CPU consumption we",
    "start": "1426020",
    "end": "1429020"
  },
  {
    "text": "see that CPU consumption is continuously",
    "start": "1429020",
    "end": "1430940"
  },
  {
    "text": "hovering around the limit it is likely",
    "start": "1430940",
    "end": "1432559"
  },
  {
    "text": "throttling",
    "start": "1432559",
    "end": "1434179"
  },
  {
    "text": "we will take a look at the throttling",
    "start": "1434179",
    "end": "1435559"
  },
  {
    "text": "page and we can see that it is in fact",
    "start": "1435559",
    "end": "1437000"
  },
  {
    "text": "throttling as the graph is at 100",
    "start": "1437000",
    "end": "1438679"
  },
  {
    "text": "percent",
    "start": "1438679",
    "end": "1440120"
  },
  {
    "text": "we will navigate over to application",
    "start": "1440120",
    "end": "1441980"
  },
  {
    "text": "profiling and take a look at the",
    "start": "1441980",
    "end": "1443480"
  },
  {
    "text": "recommendations of course the",
    "start": "1443480",
    "end": "1445820"
  },
  {
    "text": "recommendations for CPU resources are",
    "start": "1445820",
    "end": "1447860"
  },
  {
    "text": "higher and given that the application is",
    "start": "1447860",
    "end": "1449600"
  },
  {
    "text": "constantly throttling we're going to",
    "start": "1449600",
    "end": "1451400"
  },
  {
    "text": "apply the recommendations",
    "start": "1451400",
    "end": "1453080"
  },
  {
    "text": "we simply click execute recommendations",
    "start": "1453080",
    "end": "1455360"
  },
  {
    "text": "and lets the cevio adjust the resources",
    "start": "1455360",
    "end": "1457100"
  },
  {
    "text": "for our application",
    "start": "1457100",
    "end": "1458600"
  },
  {
    "text": "as you can see with a single click of a",
    "start": "1458600",
    "end": "1460760"
  },
  {
    "text": "button we're able to save Cloud spend",
    "start": "1460760",
    "end": "1462559"
  },
  {
    "text": "free up resources and increase",
    "start": "1462559",
    "end": "1464840"
  },
  {
    "text": "application performance",
    "start": "1464840",
    "end": "1467960"
  },
  {
    "text": "thank you for attending today's webinar",
    "start": "1467960",
    "end": "1469880"
  },
  {
    "text": "are you ready to give cecibia a try for",
    "start": "1469880",
    "end": "1472100"
  },
  {
    "text": "free follow the link on the screen to",
    "start": "1472100",
    "end": "1474200"
  },
  {
    "text": "try to save your premium free for four",
    "start": "1474200",
    "end": "1476179"
  },
  {
    "text": "weeks",
    "start": "1476179",
    "end": "1477260"
  },
  {
    "text": "there's no need to speak to any sales",
    "start": "1477260",
    "end": "1478820"
  },
  {
    "text": "rep or enter any form of payment after",
    "start": "1478820",
    "end": "1481220"
  },
  {
    "text": "the four week periods the civio will",
    "start": "1481220",
    "end": "1482960"
  },
  {
    "text": "automatically convert back to the civio",
    "start": "1482960",
    "end": "1484640"
  },
  {
    "text": "Community Edition which is free forever",
    "start": "1484640",
    "end": "1486320"
  },
  {
    "text": "you have nothing to lose to try it out",
    "start": "1486320",
    "end": "1488900"
  },
  {
    "text": "if you have any questions or comments",
    "start": "1488900",
    "end": "1490820"
  },
  {
    "text": "please feel free to contact me at",
    "start": "1490820",
    "end": "1493100"
  },
  {
    "text": "Stephen",
    "start": "1493100",
    "end": "1494140"
  },
  {
    "text": "sociv.io thanks for watching",
    "start": "1494140",
    "end": "1498400"
  }
]