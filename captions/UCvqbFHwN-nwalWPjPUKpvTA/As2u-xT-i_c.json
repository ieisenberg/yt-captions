[
  {
    "text": "welcome to the session kubernetes on windows a journey my name is jerry lozano",
    "start": "799",
    "end": "8240"
  },
  {
    "text": "i am a software developer and i work for rxm we are an enterprise cloud native",
    "start": "8240",
    "end": "15200"
  },
  {
    "text": "development training and consulting firm i carry the title of senior consultant",
    "start": "15200",
    "end": "21119"
  },
  {
    "text": "but i am a software developer who specializes in system level and operating system",
    "start": "21119",
    "end": "27199"
  },
  {
    "text": "development my work over the years has led me through unix linux and windows i developed device",
    "start": "27199",
    "end": "33840"
  },
  {
    "text": "drivers for all operating systems and i have focused on application framework in related",
    "start": "33840",
    "end": "40000"
  },
  {
    "text": "software architecting applications that are microservice oriented",
    "start": "40000",
    "end": "45520"
  },
  {
    "text": "cloud hosted it was a somewhat natural migration from my interests and skill",
    "start": "45520",
    "end": "50640"
  },
  {
    "text": "set so thank you for attending the title of this presentation is a",
    "start": "50640",
    "end": "57920"
  },
  {
    "text": "little misleading but we seem to be attracted to intriguing titles so here we are kubernetes on windows",
    "start": "57920",
    "end": "66240"
  },
  {
    "text": "kubernetes is designed to run linux containers in an orchestrated environment kate's is",
    "start": "66240",
    "end": "73840"
  },
  {
    "text": "built upon linux concepts such as c groups and ip tables but kubecon itself is hosted by cncf",
    "start": "73840",
    "end": "82000"
  },
  {
    "text": "which is part of the linux foundation so the obvious questions to start this",
    "start": "82000",
    "end": "87439"
  },
  {
    "text": "presentation when did windows enter the world of kate's",
    "start": "87439",
    "end": "92720"
  },
  {
    "text": "and why does anyone or should anyone care about windows in the world of cates",
    "start": "92720",
    "end": "98960"
  },
  {
    "text": "both are very good questions so does kubernetes even",
    "start": "98960",
    "end": "106560"
  },
  {
    "text": "run on windows well the control plane of kubernetes",
    "start": "106560",
    "end": "112079"
  },
  {
    "text": "does not and it may never run outside of linux the official documents of kate's state",
    "start": "112079",
    "end": "118880"
  },
  {
    "text": "that there are no plans to support a windows only cades cluster but for some time now since 1.14",
    "start": "118880",
    "end": "127200"
  },
  {
    "text": "kate's has permitted mixed clusters with windows worker nodes running side",
    "start": "127200",
    "end": "133200"
  },
  {
    "text": "by side within linux worker nodes today mixed cluster requires kubernetes 1.17",
    "start": "133200",
    "end": "142160"
  },
  {
    "text": "or later i understand for many people attending today the idea of",
    "start": "142160",
    "end": "149040"
  },
  {
    "text": "a mixed cluster can be unsettling but the idea of including windows worker",
    "start": "149040",
    "end": "154480"
  },
  {
    "text": "node environments is powerful and makes perfect sense for many scenarios",
    "start": "154480",
    "end": "160959"
  },
  {
    "text": "so why windows the data shows that for the popular and important sites",
    "start": "162640",
    "end": "169680"
  },
  {
    "text": "windows is doing quite well thank you w3tx shows that windows is used on",
    "start": "169680",
    "end": "176480"
  },
  {
    "text": "more of the top 1000 websites than is unix or linux statista",
    "start": "176480",
    "end": "184319"
  },
  {
    "text": "shows that over 70 percent of the global server market is windows-based but look we're not here",
    "start": "184319",
    "end": "191120"
  },
  {
    "text": "to argue about statistics or the different ways to look at market penetration the point",
    "start": "191120",
    "end": "197280"
  },
  {
    "text": "here is clear there is a ton of code on windows",
    "start": "197280",
    "end": "202720"
  },
  {
    "text": "that faces the same challenges that any application moving forward faces that includes",
    "start": "202720",
    "end": "209280"
  },
  {
    "text": "scalability availability you know including robustness and data",
    "start": "209280",
    "end": "215200"
  },
  {
    "text": "integrity manageability and all the features that kates enables for enterprise",
    "start": "215200",
    "end": "222319"
  },
  {
    "text": "applications here is another perspective",
    "start": "222319",
    "end": "229519"
  },
  {
    "text": "containers or pods in the case of gates running right they rely upon the most suitable",
    "start": "229519",
    "end": "237120"
  },
  {
    "text": "os for the job for the microservice at hand",
    "start": "237120",
    "end": "242560"
  },
  {
    "text": "containers are virtual os after all well our container base images for",
    "start": "242560",
    "end": "249280"
  },
  {
    "text": "example ubuntu and if you compared it with fedora those distros have differences that",
    "start": "249280",
    "end": "255599"
  },
  {
    "text": "affect the microservice right those containers isolate",
    "start": "255599",
    "end": "260639"
  },
  {
    "text": "the differences or features and they allow for side-by-side hosting of the",
    "start": "260639",
    "end": "265680"
  },
  {
    "text": "services built upon different os bases",
    "start": "265680",
    "end": "270960"
  },
  {
    "text": "if kate's worker nodes running on linux",
    "start": "271199",
    "end": "276479"
  },
  {
    "text": "could currently host a windows container a container with the windows api the windows",
    "start": "276479",
    "end": "283520"
  },
  {
    "text": "frameworks the libraries the languages and everything else that makes an app dependent upon windows if a linux worker",
    "start": "283520",
    "end": "292080"
  },
  {
    "text": "node could support that kind of container then we wouldn't need this talk now would we",
    "start": "292080",
    "end": "298960"
  },
  {
    "text": "but that's not the case we need windows worker nodes to host windows containers so",
    "start": "298960",
    "end": "306479"
  },
  {
    "text": "here we are like most things in our industry maybe most things in the",
    "start": "306479",
    "end": "313600"
  },
  {
    "text": "world in life the actual path to hosting a mixed cluster may not be as straightforward as we",
    "start": "313600",
    "end": "320560"
  },
  {
    "text": "might hope or maybe is the documentation might imply",
    "start": "320560",
    "end": "326320"
  },
  {
    "text": "at some high level the problems we face i think will fall into two categories",
    "start": "326320",
    "end": "333120"
  },
  {
    "text": "those that are part of choosing two different operating systems to execute in the same environment",
    "start": "333120",
    "end": "340800"
  },
  {
    "text": "i'm thinking about the use of aws and building the mixed",
    "start": "340800",
    "end": "347520"
  },
  {
    "text": "clusters there aws networking options present problems of their own when you work",
    "start": "347520",
    "end": "353680"
  },
  {
    "text": "with a mixed cluster and then there are those problems",
    "start": "353680",
    "end": "359759"
  },
  {
    "text": "where just putting two different operating systems on the same cluster the same network the same orchestration scheme in other",
    "start": "359759",
    "end": "367199"
  },
  {
    "text": "words the kate's portion of the problem are going to come to bear",
    "start": "367199",
    "end": "374000"
  },
  {
    "text": "this presentation is about the journey the journey it's a chronicle of that",
    "start": "374000",
    "end": "380000"
  },
  {
    "text": "journey of building a kubernetes cluster with windows worker nodes",
    "start": "380000",
    "end": "386080"
  },
  {
    "text": "to describe our journey we're going to consider we're going to build a",
    "start": "386400",
    "end": "392120"
  },
  {
    "text": "representative even though it's a simple example of a mixed cluster and this is set up",
    "start": "392120",
    "end": "400080"
  },
  {
    "text": "on aws so here's what we have set up for the purposes of this discussion an",
    "start": "400080",
    "end": "407360"
  },
  {
    "text": "ubuntu server running the kate's control plane we set up one ubuntu worker node",
    "start": "407360",
    "end": "415840"
  },
  {
    "text": "and finally one windows server worker node three machines in the cluster",
    "start": "415840",
    "end": "424160"
  },
  {
    "text": "the linux worker node might host an nginx web page offering up something for sale widgets",
    "start": "424160",
    "end": "430800"
  },
  {
    "text": "for sale on the other hand the windows node is going to host a service",
    "start": "430800",
    "end": "436000"
  },
  {
    "text": "a microservice written in c sharp dependent upon dotnet the.net framework",
    "start": "436000",
    "end": "444240"
  },
  {
    "text": "and asp.net and the purpose of that microservice will be",
    "start": "444240",
    "end": "450319"
  },
  {
    "text": "to authenticate the credit card credentials and numbers supplied by the user using",
    "start": "450319",
    "end": "458400"
  },
  {
    "text": "the web page on the linux server",
    "start": "458400",
    "end": "464479"
  },
  {
    "text": "here is a simple diagram of our example we're going to set up an ubuntu server",
    "start": "464479",
    "end": "471520"
  },
  {
    "text": "running the kate's control plane and it will be managing two machines in",
    "start": "471520",
    "end": "477759"
  },
  {
    "text": "the cluster one will be a kate's worker node running windows windows server that in turn will be",
    "start": "477759",
    "end": "485840"
  },
  {
    "text": "hosting the credit card authorization microservice",
    "start": "485840",
    "end": "491280"
  },
  {
    "text": "the other worker node will be a traditional linux node it'll happen to be running ubuntu but",
    "start": "491280",
    "end": "497840"
  },
  {
    "text": "there is where we will host nginx the web hosting software",
    "start": "497840",
    "end": "507840"
  },
  {
    "text": "along the path of our journey we encountered several noteworthy problems we want to talk",
    "start": "509599",
    "end": "515599"
  },
  {
    "text": "about each one the first problem is setting up the windows server",
    "start": "515599",
    "end": "520959"
  },
  {
    "text": "depending on the provider or the environment you are using this problem will vary in difficulty and",
    "start": "520959",
    "end": "528399"
  },
  {
    "text": "cost but here is what you must know right",
    "start": "528399",
    "end": "533519"
  },
  {
    "text": "first kate's requires that kate's worker nodes run windows",
    "start": "533519",
    "end": "539680"
  },
  {
    "text": "server 2019 we assume that this is one of those",
    "start": "539680",
    "end": "545440"
  },
  {
    "text": "or later requirements but for now it says windows server 2019",
    "start": "545440",
    "end": "550720"
  },
  {
    "text": "and there are several things to to note here first most of us use ssh",
    "start": "550720",
    "end": "557519"
  },
  {
    "text": "right to connect a new node for first time setup or debugging or monitoring or whatever",
    "start": "557519",
    "end": "563360"
  },
  {
    "text": "to connect to our linux console but windows server starts with a graphical",
    "start": "563360",
    "end": "569519"
  },
  {
    "text": "environment so using aws we need to do our initial",
    "start": "569519",
    "end": "575200"
  },
  {
    "text": "connection using rdp from a windows box we would use remote desktop to easily",
    "start": "575200",
    "end": "582480"
  },
  {
    "text": "connect but beware here other concerns right in setting up",
    "start": "582480",
    "end": "589120"
  },
  {
    "text": "windows server concern licensing we don't go into that much here on the slide but make sure your licensing is valid when",
    "start": "589120",
    "end": "596399"
  },
  {
    "text": "using windows server especially in production you don't need",
    "start": "596399",
    "end": "601519"
  },
  {
    "text": "a trial license expiring 30 days after you deploy that would be",
    "start": "601519",
    "end": "606720"
  },
  {
    "text": "disastrous okay this screen shows the a shot of",
    "start": "606720",
    "end": "615279"
  },
  {
    "text": "windows server 2019 worker node with the about box and it just confirms that the addition we chose",
    "start": "615279",
    "end": "622640"
  },
  {
    "text": "to use for our worker node the way aws lets you create a windows server virtual machine on a",
    "start": "622640",
    "end": "630320"
  },
  {
    "text": "micro sized machine this does work but you probably won't be",
    "start": "630320",
    "end": "637040"
  },
  {
    "text": "satisfied with the resulting performance as a worker node not in production the windows cubelet",
    "start": "637040",
    "end": "644079"
  },
  {
    "text": "service and even a single microservice may use the micro sized resources of the vm",
    "start": "644079",
    "end": "651200"
  },
  {
    "text": "completely if you need to set up on a small size node you probably want to consider an",
    "start": "651200",
    "end": "657440"
  },
  {
    "text": "addition of windows server that's smaller than data center which is what i chose",
    "start": "657440",
    "end": "662480"
  },
  {
    "text": "here okay so the next problem problem number",
    "start": "662480",
    "end": "668160"
  },
  {
    "text": "two on this journey is in many ways the heart of this challenge that we're describing",
    "start": "668160",
    "end": "674880"
  },
  {
    "text": "here today adding a windows node to the cluster",
    "start": "674880",
    "end": "680079"
  },
  {
    "text": "surprisingly right many of the steps involved here felt familiar they were the same or or",
    "start": "680079",
    "end": "686880"
  },
  {
    "text": "similar to adding any worker node to a case cluster and so you will see that we use the",
    "start": "686880",
    "end": "694000"
  },
  {
    "text": "identical cube atom join command that we do when we join a linux node to the cluster",
    "start": "694000",
    "end": "702640"
  },
  {
    "text": "but first here right there are currently some restrictions on how the cluster network",
    "start": "702640",
    "end": "709440"
  },
  {
    "text": "has to be configured for windows nodes nodes to join for example",
    "start": "709440",
    "end": "714639"
  },
  {
    "text": "we only have two choices for the network flannel or an l2 bridge slash host",
    "start": "714639",
    "end": "721760"
  },
  {
    "text": "gateway mode we have to choose one or the other right now if you are",
    "start": "721760",
    "end": "728079"
  },
  {
    "text": "using flannel right the vxlan network interface the vni must be set to 4096",
    "start": "728079",
    "end": "736959"
  },
  {
    "text": "and you have to use a fixed port of 47.89 right or the windows worker node just",
    "start": "736959",
    "end": "744639"
  },
  {
    "text": "won't work not within the cluster the l2 bridge",
    "start": "744639",
    "end": "749680"
  },
  {
    "text": "host gateway has its own set of requirements but remember uh regardless these are current",
    "start": "749680",
    "end": "756240"
  },
  {
    "text": "restrictions and could and probably will change over time",
    "start": "756240",
    "end": "761360"
  },
  {
    "text": "i would strongly advise reading the current documentation and understanding flannel before embarking",
    "start": "761360",
    "end": "768240"
  },
  {
    "text": "on your own journey to set up a mixed cluster this slide shows how we set",
    "start": "768240",
    "end": "776399"
  },
  {
    "text": "up and add the vni and sports port specification",
    "start": "776399",
    "end": "782720"
  },
  {
    "text": "to the control plane flannel yaml file",
    "start": "782720",
    "end": "788959"
  },
  {
    "text": "okay we also have to add kubernetes support to the windows worker node you might be",
    "start": "791760",
    "end": "799279"
  },
  {
    "text": "surprised to learn that windows has its own command line tool to install windows features",
    "start": "799279",
    "end": "804959"
  },
  {
    "text": "such as container or docker support you just use the install windows feature",
    "start": "804959",
    "end": "811040"
  },
  {
    "text": "command from powershell powershell is windows default command line tool",
    "start": "811040",
    "end": "817760"
  },
  {
    "text": "by the way uh scripts for powershell typically end with the dot ps1 extension",
    "start": "817760",
    "end": "825680"
  },
  {
    "text": "and look there is a github repo for the latest windows tool to",
    "start": "825680",
    "end": "832320"
  },
  {
    "text": "install and set up kates on windows it comes down to a powershell script",
    "start": "832320",
    "end": "838639"
  },
  {
    "text": "prepare node.ps1 once it gets executed which you see here",
    "start": "838639",
    "end": "846000"
  },
  {
    "text": "we end up with a very familiar cubelet and cube atom executable xes on windows.exes on",
    "start": "846000",
    "end": "853680"
  },
  {
    "text": "windows and some paths are even familiar look at slash var slash log okay it's",
    "start": "853680",
    "end": "861600"
  },
  {
    "text": "under that c colon drive and nobody likes the backslashes they should be forward",
    "start": "861600",
    "end": "866959"
  },
  {
    "text": "slashes so that you know powershell will accept either backslashes or forward slashes",
    "start": "866959",
    "end": "872800"
  },
  {
    "text": "but that's another story so we you know we don't like to see colon part there",
    "start": "872800",
    "end": "878079"
  },
  {
    "text": "it's still pretty close to a familiar path and then as you can see on the right",
    "start": "878079",
    "end": "883680"
  },
  {
    "text": "side here we use the exact cube atom join command with the token that was",
    "start": "883680",
    "end": "891199"
  },
  {
    "text": "generated by our control plane to get our windows worker node to join",
    "start": "891199",
    "end": "897760"
  },
  {
    "text": "this process works right and uh how do we know that it worked",
    "start": "897760",
    "end": "905440"
  },
  {
    "text": "so easy enough to try right both the we'll use cube cube cuddle",
    "start": "905440",
    "end": "912000"
  },
  {
    "text": "get nodes and we'll see that in this case right both the linux",
    "start": "912000",
    "end": "919600"
  },
  {
    "text": "there's our ubuntu worker node and the windows worker node there's our windows server",
    "start": "919600",
    "end": "926000"
  },
  {
    "text": "2019 data center edition are up and running right and they each have their own",
    "start": "926000",
    "end": "932720"
  },
  {
    "text": "internal ip address i mean they're ready for use use i skipped over",
    "start": "932720",
    "end": "938320"
  },
  {
    "text": "having the uh the the process of adding the linux worker node to the cluster",
    "start": "938320",
    "end": "943759"
  },
  {
    "text": "we understand that's the familiar part of this journey i didn't go into it right right so our next",
    "start": "943759",
    "end": "951759"
  },
  {
    "text": "step here has to be to deploy our pod and that means running the credit card",
    "start": "951759",
    "end": "959440"
  },
  {
    "text": "auth service on the windows node and that means building a containerized",
    "start": "959440",
    "end": "965440"
  },
  {
    "text": "microservice for windows we have to build a windows container",
    "start": "965440",
    "end": "971920"
  },
  {
    "text": "image exactly how are we going to install that service",
    "start": "971920",
    "end": "977839"
  },
  {
    "text": "inside of our container and so at this point we can consider two possibilities",
    "start": "977839",
    "end": "983440"
  },
  {
    "text": "i think one would be a standard windows installer file it's known as an",
    "start": "983440",
    "end": "989920"
  },
  {
    "text": "msi file and when you execute an msi file",
    "start": "989920",
    "end": "996480"
  },
  {
    "text": "it's like an rpm file right it installs the application",
    "start": "996480",
    "end": "1002560"
  },
  {
    "text": "making changes to the system it mutates the system to host the application so windows uses an msi",
    "start": "1002560",
    "end": "1010320"
  },
  {
    "text": "file and when we use that for a web service it installs a virtual directory",
    "start": "1010320",
    "end": "1016399"
  },
  {
    "text": "under iis okay iis is microsoft's web hosting service",
    "start": "1016399",
    "end": "1022720"
  },
  {
    "text": "stands for internet information service and it's typically listing on",
    "start": "1022720",
    "end": "1028000"
  },
  {
    "text": "listening on ports 80 and port 443 right a virtual directory",
    "start": "1028000",
    "end": "1035360"
  },
  {
    "text": "is just a route to the desired resource you know it's a part of the uri",
    "start": "1035360",
    "end": "1042640"
  },
  {
    "text": "alternatively we could just copy the needed files like our service is going to end",
    "start": "1042640",
    "end": "1048720"
  },
  {
    "text": "probably in a svc extension so we could just copy that",
    "start": "1048720",
    "end": "1054160"
  },
  {
    "text": "file and any other necessary files the dlls for example to the www",
    "start": "1054160",
    "end": "1060480"
  },
  {
    "text": "root directory right that is the iis default directory of resources",
    "start": "1060480",
    "end": "1068080"
  },
  {
    "text": "either of these techniques would work when we build our container image okay",
    "start": "1068080",
    "end": "1074720"
  },
  {
    "text": "all right now let's take a look at our windows microservice we've talked about implementing this as",
    "start": "1074720",
    "end": "1082160"
  },
  {
    "text": "a windows service so the code the implementation that we're going to use here",
    "start": "1082160",
    "end": "1087919"
  },
  {
    "text": "right is just an example of the real windows code that would be",
    "start": "1087919",
    "end": "1094000"
  },
  {
    "text": "used in a real kate's application as we explained earlier this is written",
    "start": "1094000",
    "end": "1101360"
  },
  {
    "text": "in c-sharp and we chose to implement as a implemented as a web service",
    "start": "1101360",
    "end": "1107200"
  },
  {
    "text": "we're going to access it as a restful service first notice the interface contract",
    "start": "1107200",
    "end": "1114799"
  },
  {
    "text": "icc auth service okay it shows a simple web",
    "start": "1114799",
    "end": "1121120"
  },
  {
    "text": "get we're going to use a get not a post to invoke",
    "start": "1121120",
    "end": "1128960"
  },
  {
    "text": "the authorize method and the authorized method will receive two arguments",
    "start": "1128960",
    "end": "1136080"
  },
  {
    "text": "a pretty long credit card number 64-bit unsigned integer and an amount",
    "start": "1136080",
    "end": "1142720"
  },
  {
    "text": "to charge right we'll pass it in as a net decimal data type the actual",
    "start": "1142720",
    "end": "1150559"
  },
  {
    "text": "data types don't matter too much because we know that we will be passing data as strings over",
    "start": "1150559",
    "end": "1157679"
  },
  {
    "text": "a restful interface how we convert the numbers and use the numbers inside of our function",
    "start": "1157679",
    "end": "1166400"
  },
  {
    "text": "will determine whether or not we conform to the data types of the interface",
    "start": "1166400",
    "end": "1173039"
  },
  {
    "text": "but then we have to implement authorize authorize here is just an interface method",
    "start": "1173039",
    "end": "1180799"
  },
  {
    "text": "so here is the implementation and this is just contrived over here to",
    "start": "1180799",
    "end": "1186640"
  },
  {
    "text": "authorize a credit card number if the credit card number as you can see if it ends in nine",
    "start": "1186640",
    "end": "1192559"
  },
  {
    "text": "or if the amount is over a thousand dollars right then the uh authorization request",
    "start": "1192559",
    "end": "1201360"
  },
  {
    "text": "is declined otherwise we're going to authorize the charge and will generate a random",
    "start": "1201360",
    "end": "1209200"
  },
  {
    "text": "auth code of four digits between 1000 and 9999 it's just a contrived",
    "start": "1209200",
    "end": "1216480"
  },
  {
    "text": "implementation programmers that are familiar with c-sharp and windows web services they would be",
    "start": "1216480",
    "end": "1223679"
  },
  {
    "text": "very comfortable seeing this kind of code and so this simple web service was built and tested",
    "start": "1223679",
    "end": "1230159"
  },
  {
    "text": "using microsoft's visual studio okay on a standard windows development machine",
    "start": "1230159",
    "end": "1238080"
  },
  {
    "text": "but now we have to containerize the service we need a docker image we're going to",
    "start": "1238480",
    "end": "1246000"
  },
  {
    "text": "use a docker image build command on windows and we're going to feed",
    "start": "1246000",
    "end": "1254400"
  },
  {
    "text": "docker image build with a docker file that in many ways is something that we are",
    "start": "1254400",
    "end": "1260240"
  },
  {
    "text": "familiar with we start with a base image right that image as shown on the slide",
    "start": "1260240",
    "end": "1267919"
  },
  {
    "text": "is from microsoft slash iis this will give us a windows server image",
    "start": "1267919",
    "end": "1274480"
  },
  {
    "text": "with iis already installed there are several base images",
    "start": "1274480",
    "end": "1279600"
  },
  {
    "text": "supplied by microsoft right and you can imagine these would be available",
    "start": "1279600",
    "end": "1285360"
  },
  {
    "text": "elsewhere like on azure well that was supposed to be funny by the way",
    "start": "1285360",
    "end": "1290400"
  },
  {
    "text": "of course it's available on azure these uh base images are not necessarily",
    "start": "1290400",
    "end": "1296080"
  },
  {
    "text": "configured the way you would like for example uh asp.net framework",
    "start": "1296080",
    "end": "1304240"
  },
  {
    "text": "isn't installed on microsoft slash iis that might be a little surprising web",
    "start": "1304240",
    "end": "1309760"
  },
  {
    "text": "service files like our cc auth svc file won't be processed not by default",
    "start": "1309760",
    "end": "1317520"
  },
  {
    "text": "so our docker file image has to enable these features and we have",
    "start": "1317520",
    "end": "1324080"
  },
  {
    "text": "to install any missing prerequisites for the service we can see how we chose our base image",
    "start": "1324080",
    "end": "1332159"
  },
  {
    "text": "and how we installed the missing features or the necessary options in this example",
    "start": "1332159",
    "end": "1339520"
  },
  {
    "text": "here we just once again use install dash windows feature to install asp.net okay",
    "start": "1339520",
    "end": "1348320"
  },
  {
    "text": "or uh we want the web management compatibility feature so that our",
    "start": "1348320",
    "end": "1354640"
  },
  {
    "text": "msi file could install that was why that prerequisite was installed we also have",
    "start": "1354640",
    "end": "1361120"
  },
  {
    "text": "an http activation feature turned on so that our service file our dot svc",
    "start": "1361120",
    "end": "1367440"
  },
  {
    "text": "file will be properly processed",
    "start": "1367440",
    "end": "1372320"
  },
  {
    "text": "okay then all we have to do right uh would be to",
    "start": "1372840",
    "end": "1378960"
  },
  {
    "text": "install the application itself our little cc auth service that",
    "start": "1378960",
    "end": "1386400"
  },
  {
    "text": "can be done with an msi file as i discussed how are you going to do that right i built my msi file",
    "start": "1386400",
    "end": "1392559"
  },
  {
    "text": "right from from my windows machine but now i've got to get it into my docker image first things first",
    "start": "1392559",
    "end": "1399600"
  },
  {
    "text": "right copy the msi file to an accessible path",
    "start": "1399600",
    "end": "1404720"
  },
  {
    "text": "within our build environment and then run msi exec okay",
    "start": "1404720",
    "end": "1411760"
  },
  {
    "text": "if we do that if if we uh use ms do a run of msi exec",
    "start": "1411760",
    "end": "1420400"
  },
  {
    "text": "on our cc auth.msi file then we've got it right we can just do a",
    "start": "1420400",
    "end": "1426480"
  },
  {
    "text": "docker image build as i'm showing on this slide over here",
    "start": "1426480",
    "end": "1432240"
  },
  {
    "text": "and lo and behold we expect to get a tagged with cc auth over here image",
    "start": "1432240",
    "end": "1439760"
  },
  {
    "text": "that's present on my windows machine okay this is almost too easy right in some",
    "start": "1439760",
    "end": "1446400"
  },
  {
    "text": "ways of course i would say what's missing from this slide would be that we should",
    "start": "1446400",
    "end": "1451520"
  },
  {
    "text": "test the container we should do a docker run container run and then maybe use",
    "start": "1451520",
    "end": "1457919"
  },
  {
    "text": "curl or something like that to ensure that our restful interface our",
    "start": "1457919",
    "end": "1463200"
  },
  {
    "text": "call to authorize actually works the way that we think it should when we're within the container",
    "start": "1463200",
    "end": "1468799"
  },
  {
    "text": "and so that step was actually done when i built this example here but that's",
    "start": "1468799",
    "end": "1475200"
  },
  {
    "text": "pretty obvious that that's what you would do right okay we're almost done but we need to make",
    "start": "1475200",
    "end": "1483039"
  },
  {
    "text": "sure that the control plane launches our service only on windows worker nodes",
    "start": "1483039",
    "end": "1490720"
  },
  {
    "text": "remember even in our simple example here we have two worker nodes one is linux which has no chance",
    "start": "1490720",
    "end": "1497840"
  },
  {
    "text": "of hosting this container and the other is the windows worker node where we need to make sure that this happens",
    "start": "1497840",
    "end": "1505039"
  },
  {
    "text": "right so we can use selectors kate's selectors to solve this",
    "start": "1505039",
    "end": "1511679"
  },
  {
    "text": "problem right in fact there is a built-in selector it's called kubernetes dot io slash",
    "start": "1511679",
    "end": "1518960"
  },
  {
    "text": "os and it'll be set to either linux or windows on a given node",
    "start": "1518960",
    "end": "1526240"
  },
  {
    "text": "so our pod configuration file should use kubernetes dot",
    "start": "1526240",
    "end": "1533600"
  },
  {
    "text": "io slash os to select windows okay you can see the cc auth yaml file",
    "start": "1533600",
    "end": "1541840"
  },
  {
    "text": "or at least an excerpt from it where i use that node selector",
    "start": "1541840",
    "end": "1548080"
  },
  {
    "text": "with the value of windows to make sure that our container cc auth",
    "start": "1548080",
    "end": "1554559"
  },
  {
    "text": "only runs on windows worker nodes we're basically gaining",
    "start": "1554559",
    "end": "1560960"
  },
  {
    "text": "affinity from this value so an important step here",
    "start": "1560960",
    "end": "1567840"
  },
  {
    "text": "with that i should think we're ready to launch the pods and how am i going to do that well this",
    "start": "1567840",
    "end": "1574240"
  },
  {
    "text": "should be very familiar cube cuddle run cc",
    "start": "1574240",
    "end": "1580320"
  },
  {
    "text": "off and we'll specify our image which we built earlier as cc off and with any luck it'll come",
    "start": "1580320",
    "end": "1587760"
  },
  {
    "text": "back and say pod cc off created okay so we could use cube",
    "start": "1587760",
    "end": "1596080"
  },
  {
    "text": "cuddle get pods to confirm that everything is running but we can use any command would you",
    "start": "1596080",
    "end": "1603120"
  },
  {
    "text": "shut it down with cube cuddle you can use delete pod cc off and down it goes",
    "start": "1603120",
    "end": "1610799"
  },
  {
    "text": "this should be a very familiar pattern at this point okay",
    "start": "1610799",
    "end": "1617200"
  },
  {
    "text": "so good for us we got this up and running and our entire application can work we now",
    "start": "1617200",
    "end": "1624000"
  },
  {
    "text": "have a restful interface where the implementation is running on",
    "start": "1624000",
    "end": "1629520"
  },
  {
    "text": "of the microservice is running on a windows worker node but we should point out",
    "start": "1629520",
    "end": "1636080"
  },
  {
    "text": "that some current restrictions exist in this story you know first okay host networking mode",
    "start": "1636080",
    "end": "1644320"
  },
  {
    "text": "is not available for windows pods and at the moment service vips",
    "start": "1644320",
    "end": "1650559"
  },
  {
    "text": "uh virtual ip addresses assigned to a service",
    "start": "1650559",
    "end": "1655840"
  },
  {
    "text": "service not the implementation of that service cannot be used by windows worker nodes this is a pretty",
    "start": "1656320",
    "end": "1663679"
  },
  {
    "text": "severe restriction when dynamic scaling is occurring in large applications",
    "start": "1663679",
    "end": "1669039"
  },
  {
    "text": "hopefully this restriction will get lifted soon and i'd point out that",
    "start": "1669039",
    "end": "1676159"
  },
  {
    "text": "at the moment a single windows service implemented on kate's can only be",
    "start": "1676159",
    "end": "1681200"
  },
  {
    "text": "implemented on 64 pods so the need for service vips is reduced",
    "start": "1681200",
    "end": "1687279"
  },
  {
    "text": "and both restrictions need to go that's pretty clear you can't currently use ipv6",
    "start": "1687279",
    "end": "1695600"
  },
  {
    "text": "right um within the cluster of uh that includes",
    "start": "1695600",
    "end": "1702159"
  },
  {
    "text": "windows worker nodes and secrets right aren't yet integrated with kate's",
    "start": "1702159",
    "end": "1708320"
  },
  {
    "text": "secrets and etsy and there are more limitations actually there are many others",
    "start": "1708320",
    "end": "1713679"
  },
  {
    "text": "i'm going to give you a link here to the current state of affairs",
    "start": "1713679",
    "end": "1719440"
  },
  {
    "text": "right no one's saying this is a perfect you know implementation in a completed",
    "start": "1719440",
    "end": "1725679"
  },
  {
    "text": "state at the moment but and i think this is important right",
    "start": "1725679",
    "end": "1731600"
  },
  {
    "text": "uh working with the mixed cluster is simply not that different when what with what",
    "start": "1731600",
    "end": "1738640"
  },
  {
    "text": "we are familiar with right um i'd like to end this talk by pointing out that there are at",
    "start": "1738640",
    "end": "1745600"
  },
  {
    "text": "least in my mind two major reasons to want to mix",
    "start": "1745600",
    "end": "1750640"
  },
  {
    "text": "linux and windows in a case cluster one there may be a significant",
    "start": "1750640",
    "end": "1758320"
  },
  {
    "text": "installed base of code that needs to enter the kate's world you can't dismiss this point as oh just",
    "start": "1758320",
    "end": "1766399"
  },
  {
    "text": "port it all forward onto linux um you know those windows messages could all be linux signals",
    "start": "1766399",
    "end": "1772720"
  },
  {
    "text": "right again that was meant to be funny but it brings up a serious point right",
    "start": "1772720",
    "end": "1779120"
  },
  {
    "text": "people that don't have to do the job always seem to be the ones claiming that",
    "start": "1779120",
    "end": "1784559"
  },
  {
    "text": "quote all you have to do is whatever right again there is a lot of existing",
    "start": "1784559",
    "end": "1790880"
  },
  {
    "text": "code that can and should be running in a containerized and orchestrated environment",
    "start": "1790880",
    "end": "1797760"
  },
  {
    "text": "and the second reason right to use a mixed cluster",
    "start": "1797760",
    "end": "1804480"
  },
  {
    "text": "i think is also valid you know windows and and linux offer different development",
    "start": "1804480",
    "end": "1811120"
  },
  {
    "text": "and execution environments diversity like in life it's a very good thing",
    "start": "1811120",
    "end": "1818880"
  },
  {
    "text": "windows offers unique tools libraries frameworks everything that has made it a commercial",
    "start": "1818880",
    "end": "1826080"
  },
  {
    "text": "and production success in the marketplace new applications i would argue should be",
    "start": "1826080",
    "end": "1832880"
  },
  {
    "text": "allowed to choose their execution environment and a mixed kubernetes cluster",
    "start": "1832880",
    "end": "1840559"
  },
  {
    "text": "permits that freedom in any event i hope you enjoyed hearing",
    "start": "1840559",
    "end": "1846480"
  },
  {
    "text": "about this journey there are obviously many more events that occurred on this journey and will occur",
    "start": "1846480",
    "end": "1854080"
  },
  {
    "text": "anytime you build a mixed cluster solution but hopefully you found some of this",
    "start": "1854080",
    "end": "1859120"
  },
  {
    "text": "talk useful i hope to meet others here who have experienced a similar journey",
    "start": "1859120",
    "end": "1864399"
  },
  {
    "text": "like to hear from you but again thank you for attending",
    "start": "1864399",
    "end": "1877919"
  }
]