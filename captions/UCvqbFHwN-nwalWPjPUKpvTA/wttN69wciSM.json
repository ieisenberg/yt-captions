[
  {
    "text": "hey everybody Welcome to WM day I I'm uh so pumped to be here uh the first time I",
    "start": "120",
    "end": "6600"
  },
  {
    "text": "ever spoke at a conference was actually uh wasm day in La uh so it's really",
    "start": "6600",
    "end": "11799"
  },
  {
    "text": "special to me to to be back here um I'm Bailey Hayes I am the CTO at cosonic uh",
    "start": "11799",
    "end": "19720"
  },
  {
    "text": "I also serve as the Wazi co-chair for the w3c's community group I'm also on",
    "start": "19720",
    "end": "25800"
  },
  {
    "text": "the technical steering committee of the bik Cod Alliance uh but today I want to talk about uh whether or not this moment",
    "start": "25800",
    "end": "34879"
  },
  {
    "text": "in time right now is the docker moment for web assembly and you might be",
    "start": "34879",
    "end": "40719"
  },
  {
    "text": "thinking did Liam write that uh and the the answer is maybe uh",
    "start": "40719",
    "end": "47920"
  },
  {
    "text": "he asked me this question at the end of my last talk and it's been an earworm and it's really stuck in my mind uh and",
    "start": "47920",
    "end": "56440"
  },
  {
    "text": "uh I think that it's worth talking about uh um because there are a lot of aspects",
    "start": "56440",
    "end": "62160"
  },
  {
    "text": "here that are really important and there are a lot of similar parallels the early days of the cloud",
    "start": "62160",
    "end": "68400"
  },
  {
    "text": "native uh age uh we were really inspired by the paper around Borg but in reality",
    "start": "68400",
    "end": "74799"
  },
  {
    "text": "there were many different innovations that happened over a decade that made us have this massive uh moment uh in time",
    "start": "74799",
    "end": "83960"
  },
  {
    "text": "where you saw a lot of the infrastructure and everything come together uh and sort of revolve around",
    "start": "83960",
    "end": "91040"
  },
  {
    "text": "this one concept of a container and that's I think because the",
    "start": "91040",
    "end": "96119"
  },
  {
    "text": "future is often already here it just isn't evenly",
    "start": "96119",
    "end": "101479"
  },
  {
    "text": "distributed so not one place not one time not one company but many different",
    "start": "101479",
    "end": "107520"
  },
  {
    "text": "innovators working together to find the right abstraction and when I when I kind of",
    "start": "107520",
    "end": "114119"
  },
  {
    "text": "think about how software development works as an industry it's really the world's largest most complex multiplayer",
    "start": "114119",
    "end": "121079"
  },
  {
    "text": "Sport and sometimes it looks like this where it's maybe a little bit more complicated than you would want it to be",
    "start": "121079",
    "end": "127039"
  },
  {
    "text": "and maybe somebody introduces a new technique and everybody adopts it but it might you know be complicated uh but in",
    "start": "127039",
    "end": "135879"
  },
  {
    "text": "reality that's how we're so successful that's how we keep raising the bar and",
    "start": "135879",
    "end": "141120"
  },
  {
    "text": "because we're in Paris and the Olympics are coming that made me think of of this",
    "start": "141120",
    "end": "146400"
  },
  {
    "text": "one example that happened in the 19 let's see 1968 Summer Olympics and",
    "start": "146400",
    "end": "153800"
  },
  {
    "text": "that's when Dick Fosbury uh showed the on the world stage the fosberry Flop but",
    "start": "153800",
    "end": "159000"
  },
  {
    "text": "the fosberry Flop actually had been around it had shown up in some different competitions but it wasn't until a lot",
    "start": "159000",
    "end": "164640"
  },
  {
    "text": "of people saw this and had their aha moment that this is you know something that we could do to really raise the bar",
    "start": "164640",
    "end": "171800"
  },
  {
    "text": "of uh our level of competition what I really like about The Fosbury flops Wikipedia page because I",
    "start": "171800",
    "end": "178480"
  },
  {
    "text": "had to go look it up uh is is that there were many different techniques that were uh in use at the time and to me that",
    "start": "178480",
    "end": "184720"
  },
  {
    "text": "seemed a whole lot like the way that we were doing lots of different virtualization Technologies in the 2000s",
    "start": "184720",
    "end": "190799"
  },
  {
    "text": "and 2010s uh I'll name a few of them that's the straddle technique the",
    "start": "190799",
    "end": "196200"
  },
  {
    "text": "western roll and the Eastern cut off or the scissors jump so uh if it feels like",
    "start": "196200",
    "end": "202120"
  },
  {
    "text": "sometimes when we're looking across our landscape of a lot of different ways to do and ship software uh turns out that",
    "start": "202120",
    "end": "208920"
  },
  {
    "text": "applies to just about everything and so I really loved uh that analogy so new",
    "start": "208920",
    "end": "215200"
  },
  {
    "text": "techniques obviously uh will unlock new levels of play both in software and uh",
    "start": "215200",
    "end": "221080"
  },
  {
    "text": "you know maybe in the Olympics but uh what I think for us the most important",
    "start": "221080",
    "end": "226519"
  },
  {
    "text": "concept to keep in mind is what Thomas  said in his book for the structure",
    "start": "226519",
    "end": "231599"
  },
  {
    "text": "of scientific revolutions and it's that he described a moment of innovation",
    "start": "231599",
    "end": "237159"
  },
  {
    "text": "where suddenly the world seems to be different and that is a paradigm",
    "start": "237159",
    "end": "242560"
  },
  {
    "text": "shift and I believe that the paradigm shift for us is happening right now and",
    "start": "242560",
    "end": "248200"
  },
  {
    "text": "it's around web assembly components and with the launch of wazy do2 and a few reasons but I'll Only Name",
    "start": "248200",
    "end": "256880"
  },
  {
    "text": "a few because you've got the rest of the day uh it's because things are now language interoperable so that I can",
    "start": "256880",
    "end": "263880"
  },
  {
    "text": "take two components written in two totally different languages and have them talk to each other and the way that",
    "start": "263880",
    "end": "269400"
  },
  {
    "text": "I do do that is with interfaces and what I really love about these interfaces and I'm going to hit it a little bit more",
    "start": "269400",
    "end": "275240"
  },
  {
    "text": "later is that they're strictly defined they're semantic I can pass in highlevel types but I can also do that in a way",
    "start": "275240",
    "end": "283000"
  },
  {
    "text": "that lets me bring it across all these language uh barriers so um that is all",
    "start": "283000",
    "end": "289560"
  },
  {
    "text": "defined over this uh uh IDL called wit now uh this next slide you may have",
    "start": "289560",
    "end": "296560"
  },
  {
    "text": "seen before but I can't give a talk with this title without at least addressing it which is uh Solomon hikes who uh was",
    "start": "296560",
    "end": "304960"
  },
  {
    "text": "one of the founders of dacker he said that if WM and Wazi existed in 2008 we",
    "start": "304960",
    "end": "310000"
  },
  {
    "text": "wouldn't have needed to create Docker I totally agree uh but uh we did",
    "start": "310000",
    "end": "316800"
  },
  {
    "text": "create Docker right we we've been building at it we're we're at cncf we're at called native um so uh does that mean",
    "start": "316800",
    "end": "324400"
  },
  {
    "text": "the components are irrelevant or is this really uh talking about that period of evolution that happens with technology",
    "start": "324400",
    "end": "331800"
  },
  {
    "text": "and that maybe we're finally hitting that moment that Paradigm Shift uh and the reason why I believe it's important",
    "start": "331800",
    "end": "338520"
  },
  {
    "text": "and why we need to to Rally around it now is that the reality is that the way",
    "start": "338520",
    "end": "343639"
  },
  {
    "text": "that we build software is broken I said that building software is",
    "start": "343639",
    "end": "349520"
  },
  {
    "text": "the world's largest multiplayer sport but if it's a multiplayer sport we're not exactly playing at the best because",
    "start": "349520",
    "end": "356440"
  },
  {
    "text": "uh we're we're making really tiny little teams uh our court is filled with spikes",
    "start": "356440",
    "end": "361960"
  },
  {
    "text": "and barriers and all kinds of stuff that keeps us from working together and one of those examples is the way that we",
    "start": "361960",
    "end": "367360"
  },
  {
    "text": "build up language silos where if I'm coding and go and my friend Taylor is",
    "start": "367360",
    "end": "372960"
  },
  {
    "text": "coding and rust it's not really convenient or idiomatic to be able to",
    "start": "372960",
    "end": "378280"
  },
  {
    "text": "collaborate on sharing libraries sharing code the way that we do that today is",
    "start": "378280",
    "end": "383319"
  },
  {
    "text": "maybe we uh instantiate an API in front of our code we we we put uh maybe http",
    "start": "383319",
    "end": "389599"
  },
  {
    "text": "front of it and we sort of force everything through uh this one API uh",
    "start": "389599",
    "end": "395199"
  },
  {
    "text": "style but when you when you actually look at it you're like wait hold on uh",
    "start": "395199",
    "end": "400280"
  },
  {
    "text": "it's not just languages it's our package managers it's our all the Frameworks and libraries like are you using Tokyo and",
    "start": "400280",
    "end": "406520"
  },
  {
    "text": "rust or are you using a different version of async that's one example um maybe it even eliminates the types of",
    "start": "406520",
    "end": "413360"
  },
  {
    "text": "platforms that you're able to run on um and even if you just say oh just put an",
    "start": "413360",
    "end": "418680"
  },
  {
    "text": "API on it so easy it's fine uh well you know hey are you using grpc are you using rest uh are you following a",
    "start": "418680",
    "end": "425560"
  },
  {
    "text": "standard for your rest apis uh it gets complicated and if you're looking at this slide and you're thinking like whoa",
    "start": "425560",
    "end": "432039"
  },
  {
    "text": "that's just like a lot of stuff that like feels really stressful you really cluttered that slide well to me I did",
    "start": "432039",
    "end": "437919"
  },
  {
    "text": "that on purpose because that's how I feel the current landscape of software development is",
    "start": "437919",
    "end": "443879"
  },
  {
    "text": "today and if we go back to something that I think a lot of us have really internalized for how to solve this",
    "start": "443879",
    "end": "450360"
  },
  {
    "text": "problem because we've been grappling with it for a long time uh in the Unix",
    "start": "450360",
    "end": "455400"
  },
  {
    "text": "philosophy there are three key tenets and if you write software according to those tenants uh you are probably",
    "start": "455400",
    "end": "462319"
  },
  {
    "text": "finding a really great way to build software that is multiplayer and that is write programs",
    "start": "462319",
    "end": "469280"
  },
  {
    "text": "that do one thing and do it well write programs that work well together uh and",
    "start": "469280",
    "end": "475599"
  },
  {
    "text": "this last one is the only one I have a little bit of a quibble with and it is write programs to handle text streams as",
    "start": "475599",
    "end": "482759"
  },
  {
    "text": "streams because that's the universal interface and so somewhat similar to how",
    "start": "482759",
    "end": "488120"
  },
  {
    "text": "we have all of our microservices today forced through one type of approximation",
    "start": "488120",
    "end": "493479"
  },
  {
    "text": "of your API you're kind of like shoving a a square peg in a round hole uh I feel",
    "start": "493479",
    "end": "499400"
  },
  {
    "text": "that that's sort of the same idea here where we are saying everything just needs to be text according to the Unix",
    "start": "499400",
    "end": "505800"
  },
  {
    "text": "philosophy um but like I just said we building our microservices not exactly",
    "start": "505800",
    "end": "512518"
  },
  {
    "text": "like the Unix philosophy and I wonder you know hey why and I need a shout out like Unix tools amazing chef's kiss it",
    "start": "512519",
    "end": "519518"
  },
  {
    "text": "works great but when we're looking at software that we're building today uh you know it we've learned that we need",
    "start": "519519",
    "end": "527440"
  },
  {
    "text": "uh apis at our version we need semantic information about the different calls",
    "start": "527440",
    "end": "532480"
  },
  {
    "text": "that we're making and it's the only way to write maintainable and scalable software so how do we get to that well",
    "start": "532480",
    "end": "540000"
  },
  {
    "text": "you can probably guess what I'm going to say it's it's obviously to me the web assembly component model because with",
    "start": "540000",
    "end": "546360"
  },
  {
    "text": "the component model you're able to write things that do one thing and does does it really well not just like really well",
    "start": "546360",
    "end": "553040"
  },
  {
    "text": "I think in in the in the limit we're going to see certain components that are",
    "start": "553040",
    "end": "558120"
  },
  {
    "text": "literally the best component because it's the fastest it's the smallest it has the best API it won't matter what",
    "start": "558120",
    "end": "564320"
  },
  {
    "text": "language it's written in other than maybe the languages that are extremely performant have a tiny uh footprint are",
    "start": "564320",
    "end": "570519"
  },
  {
    "text": "probably going to be the ones that everybody sort of revolves around uh but what we're going to be able to do is",
    "start": "570519",
    "end": "576720"
  },
  {
    "text": "have components that can slot into any application that solves the problem better than anything else and it's going",
    "start": "576720",
    "end": "583399"
  },
  {
    "text": "to be very tiny very isolated to the specific problem domain that it's trying to solve and so our applications will",
    "start": "583399",
    "end": "590240"
  },
  {
    "text": "combine all of these now the second part because we're trying to solve for the",
    "start": "590240",
    "end": "596160"
  },
  {
    "text": "world's largest multiplayer sport let's make sure that we write program that work well together and clearly being",
    "start": "596160",
    "end": "602279"
  },
  {
    "text": "able to compose components that are able to run together is incredibly important for that goal uh and so if we look at",
    "start": "602279",
    "end": "610839"
  },
  {
    "text": "you know I'm not I'm not necessarily knocking the problem of having to run over a transport but to me the problem",
    "start": "610839",
    "end": "617399"
  },
  {
    "text": "is that I'm not able to today say exactly what this program is going to do",
    "start": "617399",
    "end": "622920"
  },
  {
    "text": "and how I can consume that information API is not enough um and the reason why",
    "start": "622920",
    "end": "628600"
  },
  {
    "text": "I say that is if I look at the way that I deploy my microservices today and I put an API in front of it it's going to",
    "start": "628600",
    "end": "635240"
  },
  {
    "text": "take maybe you know several milliseconds to call if I'm even on the same network that's pretty fast uh but because",
    "start": "635240",
    "end": "643160"
  },
  {
    "text": "components isolate the memory so uh when I compose two components together uh and",
    "start": "643160",
    "end": "649040"
  },
  {
    "text": "let's say they're using the exact same environment variables I don't know if you've ever had this happen to you it definitely has happened to me where I",
    "start": "649040",
    "end": "655320"
  },
  {
    "text": "was trying to set some Port it had the you know everybody exposed the environment a variable Port uh and then",
    "start": "655320",
    "end": "661279"
  },
  {
    "text": "when I was using a third party Library you know who gets the port and how do I map it to the right thing that's really",
    "start": "661279",
    "end": "666760"
  },
  {
    "text": "uh annoying part of it uh I guess another example would be let's say you're using a python Library you're",
    "start": "666760",
    "end": "672920"
  },
  {
    "text": "pulling in a bunch of stuff uh and then at some point somebody clobbers your module uh that can happen especially",
    "start": "672920",
    "end": "680200"
  },
  {
    "text": "when you're pulling in thirdparty libraries so by taking the superpower of web assembly of being able to create a",
    "start": "680200",
    "end": "686240"
  },
  {
    "text": "Sandbox that completely isolates that module have separate linear memories for each one and that allows me to make",
    "start": "686240",
    "end": "693440"
  },
  {
    "text": "programs that work so well together that they're able to run in the exact same process and I'm able to call from one",
    "start": "693440",
    "end": "700240"
  },
  {
    "text": "component to another in nanoseconds now this last one is that",
    "start": "700240",
    "end": "706360"
  },
  {
    "text": "third point of the Unix philosophy that I had a little bit of an issue with and",
    "start": "706360",
    "end": "711560"
  },
  {
    "text": "that's uh I agree we have to have a universal interface but to me the",
    "start": "711560",
    "end": "717720"
  },
  {
    "text": "universal interface is with the web assembly interface types and that's something that we standardized",
    "start": "717720",
    "end": "723760"
  },
  {
    "text": "around uh with Wy .2 and we launched it with two different worlds inside those",
    "start": "723760",
    "end": "731240"
  },
  {
    "text": "worlds you can think of it as targeting a specific environment the wzy CLI world",
    "start": "731240",
    "end": "737040"
  },
  {
    "text": "is the one that's very similar to what we had originally released in 2019 with Wy preview one and that uh basically",
    "start": "737040",
    "end": "744760"
  },
  {
    "text": "gives you a lot of the things that you need to run as a CLI it's even called Wy and ize the package it gives you things",
    "start": "744760",
    "end": "751279"
  },
  {
    "text": "like a file system being able to talk to standard in standard out uh and you're able to run it kind of like you would",
    "start": "751279",
    "end": "756920"
  },
  {
    "text": "run any other CLI uh you can embed wasm time and do it or you can use uh wasm",
    "start": "756920",
    "end": "762560"
  },
  {
    "text": "time CLI directly and say wasm time run but there's this other world that's",
    "start": "762560",
    "end": "767680"
  },
  {
    "text": "pretty different actually from the wzy CLI world and that's Wy HTP proxy and",
    "start": "767680",
    "end": "772839"
  },
  {
    "text": "then allows us to write to a different abstraction it doesn't pull in sockets",
    "start": "772839",
    "end": "778120"
  },
  {
    "text": "it actually is completely isolated to just HTP interfaces that's what that",
    "start": "778120",
    "end": "783680"
  },
  {
    "text": "component if it targets that world it says hey I export an incoming Handler uh",
    "start": "783680",
    "end": "789360"
  },
  {
    "text": "you know that's the way that you can call me and I only speak HTP uh I love that I you know I kind of",
    "start": "789360",
    "end": "796360"
  },
  {
    "text": "Knocked HTP a little bit earlier if you thought I did I wasn't uh what I was saying is that let's be really clear",
    "start": "796360",
    "end": "803560"
  },
  {
    "text": "about what these components are building what they're targeting and what their lingual franka is and so uh you're able",
    "start": "803560",
    "end": "810440"
  },
  {
    "text": "to pass in basically these highle types and to open up the hood a little bit and look at at what that is uh this is an",
    "start": "810440",
    "end": "818519"
  },
  {
    "text": "example of what a component looks like rendering with wad uh it's got some interesting things but my favorite here",
    "start": "818519",
    "end": "825000"
  },
  {
    "text": "is to always highlight that this this whole thing this new web assembly component model it's all still based on",
    "start": "825000",
    "end": "831040"
  },
  {
    "text": "the web assembly core specification underneath uh you still see I 32s as far",
    "start": "831040",
    "end": "836600"
  },
  {
    "text": "as the IE can see uh that that's the original types that you worked with I remember writing some of my own Bens to",
    "start": "836600",
    "end": "843079"
  },
  {
    "text": "kind of like shove a string in from JavaScript into uh my C++ WM module uh",
    "start": "843079",
    "end": "849519"
  },
  {
    "text": "so I was personally very excited to have these top level interfaces uh in this",
    "start": "849519",
    "end": "854600"
  },
  {
    "text": "case this is kind of like if I had a uh had targeted the wzy CLI run uh wzy CLI",
    "start": "854600",
    "end": "860320"
  },
  {
    "text": "command world uh it would export this run function that now anything that",
    "start": "860320",
    "end": "866560"
  },
  {
    "text": "wants to work with me knows that's what I do i r i run that's it just once you",
    "start": "866560",
    "end": "872120"
  },
  {
    "text": "can't call me again and uh not only that but um you know I need an environment",
    "start": "872120",
    "end": "878279"
  },
  {
    "text": "that's kind of specific for me to be able to run and that's with my imports and that's really powerful now if if that uh is where we",
    "start": "878279",
    "end": "887920"
  },
  {
    "text": "are with the component model that does not answer at all how this could possibly be the docker moment because",
    "start": "887920",
    "end": "894120"
  },
  {
    "text": "there have been many other abstractions that are really similar to this I get asked a lot didn't Java do this didn't",
    "start": "894120",
    "end": "900040"
  },
  {
    "text": "Comm do this didn't Cobra do this lots and lots and lots right um but the reality is that lots of innovators come",
    "start": "900040",
    "end": "905800"
  },
  {
    "text": "together and we keep iterating right and we keep working together until we build the next abstraction and to me that's",
    "start": "905800",
    "end": "911959"
  },
  {
    "text": "really why Docker was so widely successful is that had this amazing",
    "start": "911959",
    "end": "917000"
  },
  {
    "text": "Community when I realized that there was such a thing as a Docker moment for me",
    "start": "917000",
    "end": "922360"
  },
  {
    "text": "personally was when I went to my local Meetup and we had a Docker Champion",
    "start": "922360",
    "end": "927480"
  },
  {
    "text": "there I was maybe 2014 maybe 2015 and at the time I was working on this really",
    "start": "927480",
    "end": "933480"
  },
  {
    "text": "comp complicated tool chain uh because it was building my C++ throwing in some JavaScript it was asm.js which is really",
    "start": "933480",
    "end": "940120"
  },
  {
    "text": "the precursor to web assembly and I was constantly having this problem of hey it works on my machine and everybody else",
    "start": "940120",
    "end": "946199"
  },
  {
    "text": "is like this is black magic um so I believe that having a community and",
    "start": "946199",
    "end": "951759"
  },
  {
    "text": "having people on board other people who are really excited about Docker at the time the docker Champions really led the",
    "start": "951759",
    "end": "958399"
  },
  {
    "text": "way uh and building a community but at that Tech Meetup not only did I just build my first container I built a",
    "start": "958399",
    "end": "963920"
  },
  {
    "text": "container that I immediately shared with the person next to me and that was my like aha moment like wow okay I can",
    "start": "963920",
    "end": "970720"
  },
  {
    "text": "build something that's portable we've since learned that it's not perfectly portable but it's it was wildly portable",
    "start": "970720",
    "end": "977519"
  },
  {
    "text": "at the time um and so that was a really special paradigm shift in in in the",
    "start": "977519",
    "end": "983440"
  },
  {
    "text": "basically the industry uh so building on community collaboration uh and it was",
    "start": "983440",
    "end": "988680"
  },
  {
    "text": "very developer Centric it solved the problems that I had that day it added a new tool to my toolbox but really to me",
    "start": "988680",
    "end": "997079"
  },
  {
    "text": "what was the thing that was the Paradigm Shift how do we know that that's happening well we we know it's happening",
    "start": "997079",
    "end": "1002839"
  },
  {
    "text": "when you have many different companies and organizations come together and say yeah let's standardize around this let's",
    "start": "1002839",
    "end": "1008959"
  },
  {
    "text": "make it interoperable across all of our different platforms and you can see that happening today so my call to action",
    "start": "1008959",
    "end": "1016880"
  },
  {
    "text": "like let's do this let's start building Better Together building web assembly components and if you want to know how",
    "start": "1016880",
    "end": "1024760"
  },
  {
    "text": "you can get involved there's a lot of different ways in particular I think Wy is one area that's extremely exciting",
    "start": "1024760",
    "end": "1031400"
  },
  {
    "text": "and I'm biased as a co-chair but trust me on this one uh Wazi do2 it launched",
    "start": "1031400",
    "end": "1037720"
  },
  {
    "text": "January 24th it's actively being added to many different uh standard language Library tool chains uh which basically",
    "start": "1037720",
    "end": "1045079"
  },
  {
    "text": "means it's got to be stable it's got several years of support so it's a stable Foundation that it's time you can",
    "start": "1045079",
    "end": "1052160"
  },
  {
    "text": "come and build on it uh there's this other aspect here that maybe is a little bit different if you were familiar with",
    "start": "1052160",
    "end": "1058480"
  },
  {
    "text": "Wazi preview one and that's where we're actually going to be doing many uh",
    "start": "1058480",
    "end": "1063799"
  },
  {
    "text": "time-based releases regular releases that add only additive non-breaking",
    "start": "1063799",
    "end": "1069600"
  },
  {
    "text": "changes to wzy and that's going to let us really accelerate our development and our growth on this and I believe add",
    "start": "1069600",
    "end": "1077039"
  },
  {
    "text": "features that the community needs now uh and be able to consume it very soon uh",
    "start": "1077039",
    "end": "1083200"
  },
  {
    "text": "so I'm I'm extremely excited about that and that's really what's going to evolve I think just the developer experience",
    "start": "1083200",
    "end": "1088720"
  },
  {
    "text": "adding new tools uh help us add new languages to the ecosystem and uh my",
    "start": "1088720",
    "end": "1095240"
  },
  {
    "text": "goal really is to see this go and be extensible everywhere so on top of the",
    "start": "1095240",
    "end": "1101480"
  },
  {
    "text": "dot two foundations we're going to see several new worlds uh some of them are",
    "start": "1101480",
    "end": "1106520"
  },
  {
    "text": "going to be talked about today uh including one Cloud Wy embedded world for running on embedded devices Wynn for",
    "start": "1106520",
    "end": "1113559"
  },
  {
    "text": "doing neural networking and inferencing uh being able to run GPU workloads with Wy web GPU so it's so much more than",
    "start": "1113559",
    "end": "1121400"
  },
  {
    "text": "just those first two worlds that launched these will likely come online this",
    "start": "1121400",
    "end": "1126960"
  },
  {
    "text": "year and so to me that means we're going to see an application Evolution across",
    "start": "1126960",
    "end": "1133520"
  },
  {
    "text": "our stack but I don't want you to think that uh when I say here a platform",
    "start": "1133520",
    "end": "1139440"
  },
  {
    "text": "Revolution just like what happened with Docker where we saw uh basically all the",
    "start": "1139440",
    "end": "1145080"
  },
  {
    "text": "platforms were reorganized to orchestrate containers at every scale uh",
    "start": "1145080",
    "end": "1150440"
  },
  {
    "text": "the platforms of tomorrow in my opinion are going to be orchestrated around components uh so when I say we're going",
    "start": "1150440",
    "end": "1156919"
  },
  {
    "text": "to create a revolution here I don't mean this one uh but I do mean uh being able",
    "start": "1156919",
    "end": "1163120"
  },
  {
    "text": "to do this across many different foundations including the cncf and the B code Alliance and others",
    "start": "1163120",
    "end": "1169640"
  },
  {
    "text": "uh and work together because we've got this one thing that's interoperable across all these different ecosystems",
    "start": "1169640",
    "end": "1175039"
  },
  {
    "text": "and stacks um and you might be thinking okay maybe it's just the start of this",
    "start": "1175039",
    "end": "1180440"
  },
  {
    "text": "right like okay it's very early days I've tried to use this stuff maybe a month ago and it was kind of friction",
    "start": "1180440",
    "end": "1185960"
  },
  {
    "text": "full and I can assure you when I tried things in 2014 I felt some bugs and rough edges uh that is definitely the",
    "start": "1185960",
    "end": "1193159"
  },
  {
    "text": "case but it's evolving so fast and and really this wasm native Revolution is",
    "start": "1193159",
    "end": "1200360"
  },
  {
    "text": "happening right now it's already here uh if you look across the cncf landscape I",
    "start": "1200360",
    "end": "1206880"
  },
  {
    "text": "can see so many different little shoots of WM popping up everywhere uh it is not",
    "start": "1206880",
    "end": "1212400"
  },
  {
    "text": "isolated to one runtime that's doing this it's not one group or organization it's across all of us and that's really",
    "start": "1212400",
    "end": "1220280"
  },
  {
    "text": "for me our paradigm shift so if you want to get involved",
    "start": "1220280",
    "end": "1226559"
  },
  {
    "text": "please go to uh the workshop that shows two different cncf projects that show",
    "start": "1226559",
    "end": "1231600"
  },
  {
    "text": "you how to build your first web assembly component and also check out the component model book I think it's a",
    "start": "1231600",
    "end": "1237120"
  },
  {
    "text": "really great resource for learning more about how to get started with components um and if you do all that one",
    "start": "1237120",
    "end": "1244559"
  },
  {
    "text": "thank you uh my my biggest call to action to you is to go and add wazzy to",
    "start": "1244559",
    "end": "1251400"
  },
  {
    "text": "a target for your favorite library and make it part of our ecosystem it's going to take everybody everywhere to do this",
    "start": "1251400",
    "end": "1258840"
  },
  {
    "text": "but I think we can do it and it's going to be incredibly powerful because the only way to build software is to build",
    "start": "1258840",
    "end": "1264760"
  },
  {
    "text": "it better together thank",
    "start": "1264760",
    "end": "1269600"
  },
  {
    "text": "you wow ba knocking it",
    "start": "1272679",
    "end": "1277799"
  },
  {
    "text": "out um you were talking about uh Unix right uh and like it or not the standard",
    "start": "1277799",
    "end": "1284720"
  },
  {
    "text": "is still C compatibility uh how do you think why do you think developers should make library",
    "start": "1284720",
    "end": "1291600"
  },
  {
    "text": "for web assembly components instead of ffi or C",
    "start": "1291600",
    "end": "1296919"
  },
  {
    "text": "compatibility yeah so that's a great question uh one um I actually",
    "start": "1296919",
    "end": "1302279"
  },
  {
    "text": "intentionally snuck this one in there just uh just in case I got asked this um so I'm gonna go way back okay you see",
    "start": "1302279",
    "end": "1308840"
  },
  {
    "text": "this I snuck in lipy right here and I did that on purpose because you know what I'm not saying don't do this do it",
    "start": "1308840",
    "end": "1316200"
  },
  {
    "text": "if it works for the type of ecosystem that you're running in you can make any type of interface you want uh what I",
    "start": "1316200",
    "end": "1323320"
  },
  {
    "text": "want to see in wazzy and now this is an open standard open community so it's not",
    "start": "1323320",
    "end": "1328440"
  },
  {
    "text": "just what I want although you know uh it would be great if it was uh I I really want to see that we design interfaces",
    "start": "1328440",
    "end": "1336279"
  },
  {
    "text": "that are fine grained right I don't want to fall into the pitfalls of past mistakes I think that we can build a",
    "start": "1336279",
    "end": "1343520"
  },
  {
    "text": "foundation that is capability driven and capability safe those are key principles Dan bman who uh really was one of the",
    "start": "1343520",
    "end": "1351240"
  },
  {
    "text": "the key creators of Wy uh he followed a thing called Cloud ABI and that was all",
    "start": "1351240",
    "end": "1357240"
  },
  {
    "text": "around how do we build basically these interfaces in a way that were only giving away the capabilities that it",
    "start": "1357240",
    "end": "1363880"
  },
  {
    "text": "absolutely needs there's going to be a really great talk on a little bit more detail on that with live demos uh later",
    "start": "1363880",
    "end": "1370159"
  },
  {
    "text": "today so I don't want to give too many spoilers uh but why not Lipsy um because",
    "start": "1370159",
    "end": "1376360"
  },
  {
    "text": "it gives a very broad footprint it kind of forces everything into that one singular well singular 500 what 26 CIS",
    "start": "1376360",
    "end": "1384480"
  },
  {
    "text": "calls uh API versus that one semantic API API that the component maybe needs",
    "start": "1384480",
    "end": "1390679"
  },
  {
    "text": "to expose you want to follow up on that one so you mean it's just one machine",
    "start": "1390679",
    "end": "1399799"
  },
  {
    "text": "one virtual machine instead of uh one",
    "start": "1399799",
    "end": "1404840"
  },
  {
    "text": "interface yeah so instead of having a really broad set of things that you got to pull in and depend on let's get it to",
    "start": "1404840",
    "end": "1411240"
  },
  {
    "text": "this like the exactly thing that you need and that way as a platform operator because I work at cosonic it's a manag",
    "start": "1411240",
    "end": "1418720"
  },
  {
    "text": "PA I really want to know hey is your component trying to use sockets for example which would be available if if",
    "start": "1418720",
    "end": "1425159"
  },
  {
    "text": "they use something like all ofx uh that's um something that I need to know so that I know how to sandbox it",
    "start": "1425159",
    "end": "1432919"
  },
  {
    "text": "but what I want to see with these components is that if they build exactly their semantic API and they don't pull",
    "start": "1432919",
    "end": "1439159"
  },
  {
    "text": "in something like HTTP I can take the exact same component and run it inside a a UDF inside a database uh that doesn't",
    "start": "1439159",
    "end": "1446200"
  },
  {
    "text": "need a big big overhead right I want something that's itty bitty right so that I can run it in the exact same",
    "start": "1446200",
    "end": "1451840"
  },
  {
    "text": "process as my query processing engine and I want to take that exact same component and run it in a typescript",
    "start": "1451840",
    "end": "1457200"
  },
  {
    "text": "application running in the web and I want to run it server side and I want to be able to scale it out",
    "start": "1457200",
    "end": "1462640"
  },
  {
    "text": "everywhere hello uh so I just have a question about the communication uh if",
    "start": "1462640",
    "end": "1468480"
  },
  {
    "text": "you use wasum everywhere can we completely avoid grpc or any other",
    "start": "1468480",
    "end": "1475399"
  },
  {
    "text": "graphql or rest like you know completely avoid and use completely VY and uh which",
    "start": "1475399",
    "end": "1480720"
  },
  {
    "text": "is it possible in the near future yeah I I want to give a shout to a tool that uh",
    "start": "1480720",
    "end": "1485880"
  },
  {
    "text": "Yash uh created and we're going to bring into the B code Alliance I believe and and he called it uh uh wasm HTTP tools",
    "start": "1485880",
    "end": "1494200"
  },
  {
    "text": "where you can take a wit and produce an open API document so you can do rest calls and and back again uh so Whit is",
    "start": "1494200",
    "end": "1501679"
  },
  {
    "text": "very much designed to be machine readable so we can do a lot of these different existing transports without",
    "start": "1501679",
    "end": "1507480"
  },
  {
    "text": "having to necessarily change them right I can create components that talk to the services that I have today uh but I am a",
    "start": "1507480",
    "end": "1514679"
  },
  {
    "text": "big fan of the idea that maybe we could just have everything be web assembly component",
    "start": "1514679",
    "end": "1521158"
  },
  {
    "text": "native thank you for bringing this making this live I have a maybe not very",
    "start": "1522240",
    "end": "1528399"
  },
  {
    "text": "comfortable question for you I personally dream of a world where containers are gone and data scientists",
    "start": "1528399",
    "end": "1535480"
  },
  {
    "text": "no longer do python um and I I really hope that this",
    "start": "1535480",
    "end": "1541960"
  },
  {
    "text": "is the killer for it and I also think that one of the things that you didn't mention that made Docker very successful",
    "start": "1541960",
    "end": "1548880"
  },
  {
    "text": "that it made python usable in production uh and especially data",
    "start": "1548880",
    "end": "1554640"
  },
  {
    "text": "science applications but what is the state of wasi support for cpython and um",
    "start": "1554640",
    "end": "1561200"
  },
  {
    "text": "are we going to see maybe in the near future something like uh components for",
    "start": "1561200",
    "end": "1567840"
  },
  {
    "text": "most common data science libraries like esarn and being able to run data science",
    "start": "1567840",
    "end": "1574200"
  },
  {
    "text": "applications using wasm uh components rather than a silo of libraries piled",
    "start": "1574200",
    "end": "1581559"
  },
  {
    "text": "into the Container praying for it to complete with zero exit code there is a lot of innovation",
    "start": "1581559",
    "end": "1588480"
  },
  {
    "text": "happening in the space kind of back to the same theme of uh you'll see many different shoots of innovation uh doing",
    "start": "1588480",
    "end": "1595279"
  },
  {
    "text": "things in different ways I would like to start I guess maybe it was two years ago",
    "start": "1595279",
    "end": "1600360"
  },
  {
    "text": "or yeah about two years ago uh one of my co-workers Kevin Smith at single store",
    "start": "1600360",
    "end": "1605720"
  },
  {
    "text": "had uh taken The cpython Interpreter and compiled it down into a wasm module uh",
    "start": "1605720",
    "end": "1611640"
  },
  {
    "text": "and then um several different maintainers that actually worked on cpython were working on the like the",
    "start": "1611640",
    "end": "1616679"
  },
  {
    "text": "exact same thing at the same time uh later that's that's evolved quite a bit it's been moving through the phases",
    "start": "1616679",
    "end": "1623399"
  },
  {
    "text": "uh it's totally usable today uh and our friends at fermon uh Joel dice has been",
    "start": "1623399",
    "end": "1628799"
  },
  {
    "text": "doing a lot of amazing work on both making things work with wazzy lib C and then also uh extending the basically the",
    "start": "1628799",
    "end": "1637240"
  },
  {
    "text": "developer experience for building python components and that's with a tool called componentize pie and you can check that",
    "start": "1637240",
    "end": "1643120"
  },
  {
    "text": "out inside the bod Alliance uh but basically by being able to bring over",
    "start": "1643120",
    "end": "1648520"
  },
  {
    "text": "not just python I think that's the real trick with the data science um and I'm guessing maybe you're a polar fan uh",
    "start": "1648520",
    "end": "1655120"
  },
  {
    "text": "polar RS is pretty cool uh but uh if you look at the types of libraries that",
    "start": "1655120",
    "end": "1660399"
  },
  {
    "text": "people bring in for python it's not python it it it can be uh C++ it can be",
    "start": "1660399",
    "end": "1666200"
  },
  {
    "text": "all this native stuff it can be Fortran it's often Fortran uh so you need to be",
    "start": "1666200",
    "end": "1671760"
  },
  {
    "text": "able to uh not just bring over python you've got to bring over that whole ecosystem and so the only last person",
    "start": "1671760",
    "end": "1677519"
  },
  {
    "text": "I'll give a shout out to is the pyodide folks they've been porting basically the entire data science stack to make this a",
    "start": "1677519",
    "end": "1683519"
  },
  {
    "text": "reality spicy question and a great one keep these coming we got a few more minutes on",
    "start": "1683519",
    "end": "1688559"
  },
  {
    "text": "these I I think the component model is very interesting I kind of want to tap into the question about like network",
    "start": "1688559",
    "end": "1694679"
  },
  {
    "text": "communication because I mean in kubernetes and and what what do we have like everything is kind of in the in in",
    "start": "1694679",
    "end": "1701760"
  },
  {
    "text": "the idea of the 12 Factor app everything needs to be exposed as a network service but I've never done erlang I have to",
    "start": "1701760",
    "end": "1707919"
  },
  {
    "text": "admit but llang has this wild model of it just runs distributed and you can just swap out function is that something",
    "start": "1707919",
    "end": "1714360"
  },
  {
    "text": "that we see eventually with web assembly because I see the potential for it that oh we don't care about the Network",
    "start": "1714360",
    "end": "1719559"
  },
  {
    "text": "anymore the the network is just there but we as a developer don't need to care about it yes uh it kind of feels like",
    "start": "1719559",
    "end": "1727039"
  },
  {
    "text": "you're reading some of the minds on my team um I don't want to spoil things so I can't say too too too much uh I will",
    "start": "1727039",
    "end": "1733279"
  },
  {
    "text": "say that yes with components you can kind of expect the interconnectivity",
    "start": "1733279",
    "end": "1739080"
  },
  {
    "text": "fabric to be flat that's just not something that a developer needs to worry about we can generate the HTTP",
    "start": "1739080",
    "end": "1745240"
  },
  {
    "text": "protocol that it needs to use we can generate the grpc we can generate whatever Special Sauce we need to run it",
    "start": "1745240",
    "end": "1751080"
  },
  {
    "text": "in a database uh what's important and what I think we're going to see coming",
    "start": "1751080",
    "end": "1756519"
  },
  {
    "text": "in in the next year or so is platforms that understand components natively and",
    "start": "1756519",
    "end": "1762480"
  },
  {
    "text": "know how to distribute and scale them uh for the given workload so so to answer",
    "start": "1762480",
    "end": "1768919"
  },
  {
    "text": "your question you know does does HTP and services go away I don't think so right I think the the key that made Docker so",
    "start": "1768919",
    "end": "1776399"
  },
  {
    "text": "successful is that I could run it on my bare metal Linux box that was already running all my other workloads I just",
    "start": "1776399",
    "end": "1782320"
  },
  {
    "text": "started kind of doing the lift and shift pattern uh it wasn't Cloud native when I when I took the first container that I",
    "start": "1782320",
    "end": "1789320"
  },
  {
    "text": "shoved my entire spring boot app in there and it was like two gigabytes or something crazy uh and and then and then",
    "start": "1789320",
    "end": "1795600"
  },
  {
    "text": "it was running and then I was like okay that's pretty awesome but you know we should break down that monolith uh I",
    "start": "1795600",
    "end": "1801120"
  },
  {
    "text": "think we're going to see the exact same patterns right we're going to we're going to see the Triangular pattern of bringing components making it compatible",
    "start": "1801120",
    "end": "1807519"
  },
  {
    "text": "with the existing ecosystems that we have and then uh extending it out to the Future",
    "start": "1807519",
    "end": "1814880"
  }
]