[
  {
    "start": "0",
    "end": "33000"
  },
  {
    "text": "hi everyone my name is kate goldenring",
    "start": "640",
    "end": "2720"
  },
  {
    "text": "my name is yugi apple",
    "start": "2720",
    "end": "4319"
  },
  {
    "text": "and we're both software engineers at",
    "start": "4319",
    "end": "6000"
  },
  {
    "text": "microsoft working on an open source",
    "start": "6000",
    "end": "7680"
  },
  {
    "text": "project called ocry",
    "start": "7680",
    "end": "9040"
  },
  {
    "text": "and today we're going to talk about how",
    "start": "9040",
    "end": "10880"
  },
  {
    "text": "you can use ocari to make iot devices",
    "start": "10880",
    "end": "13200"
  },
  {
    "text": "accessible to your edge kubernetes",
    "start": "13200",
    "end": "14920"
  },
  {
    "text": "clusters",
    "start": "14920",
    "end": "16080"
  },
  {
    "text": "so we'll first start off by talking",
    "start": "16080",
    "end": "17680"
  },
  {
    "text": "about the motivation behind ocari",
    "start": "17680",
    "end": "19600"
  },
  {
    "text": "and then we'll look at an iot edge",
    "start": "19600",
    "end": "21279"
  },
  {
    "text": "scenario and how it can be simplified",
    "start": "21279",
    "end": "23039"
  },
  {
    "text": "using ocry",
    "start": "23039",
    "end": "24160"
  },
  {
    "text": "then we'll dive into awk's architecture",
    "start": "24160",
    "end": "26080"
  },
  {
    "text": "and look at one of awk's latest",
    "start": "26080",
    "end": "27519"
  },
  {
    "text": "enhancements that make it more easily",
    "start": "27519",
    "end": "29119"
  },
  {
    "text": "extensible",
    "start": "29119",
    "end": "30000"
  },
  {
    "text": "and finally we'll talk about how you can",
    "start": "30000",
    "end": "31519"
  },
  {
    "text": "get involved",
    "start": "31519",
    "end": "33600"
  },
  {
    "start": "33000",
    "end": "33000"
  },
  {
    "text": "okay so a bit of motivation a",
    "start": "33600",
    "end": "36719"
  },
  {
    "text": "typical cloud kubernetes application has",
    "start": "36719",
    "end": "39200"
  },
  {
    "text": "a fixed set of dependencies",
    "start": "39200",
    "end": "40800"
  },
  {
    "text": "these are other cloud services that the",
    "start": "40800",
    "end": "42640"
  },
  {
    "text": "application depends on for their",
    "start": "42640",
    "end": "44239"
  },
  {
    "text": "functionality",
    "start": "44239",
    "end": "45280"
  },
  {
    "text": "and these services are generally highly",
    "start": "45280",
    "end": "46960"
  },
  {
    "text": "available on the other hand",
    "start": "46960",
    "end": "49200"
  },
  {
    "text": "an edge application depends on variable",
    "start": "49200",
    "end": "52079"
  },
  {
    "text": "number of data sources",
    "start": "52079",
    "end": "53680"
  },
  {
    "text": "especially in each application that does",
    "start": "53680",
    "end": "55520"
  },
  {
    "text": "any data processing",
    "start": "55520",
    "end": "57680"
  },
  {
    "text": "now these data sources they might not be",
    "start": "57680",
    "end": "60480"
  },
  {
    "text": "highly available",
    "start": "60480",
    "end": "61520"
  },
  {
    "text": "because they might be represented by a",
    "start": "61520",
    "end": "63359"
  },
  {
    "text": "simple devices such as",
    "start": "63359",
    "end": "64799"
  },
  {
    "text": "ip cameras temperature sensors",
    "start": "64799",
    "end": "68159"
  },
  {
    "text": "your edge application can also do",
    "start": "68159",
    "end": "70560"
  },
  {
    "text": "control",
    "start": "70560",
    "end": "71280"
  },
  {
    "text": "such as control of robotic arms and",
    "start": "71280",
    "end": "73840"
  },
  {
    "text": "again these are",
    "start": "73840",
    "end": "74960"
  },
  {
    "text": "not highly available sources so then the",
    "start": "74960",
    "end": "78000"
  },
  {
    "text": "question is",
    "start": "78000",
    "end": "79119"
  },
  {
    "text": "how can your application discover these",
    "start": "79119",
    "end": "82080"
  },
  {
    "text": "uh then",
    "start": "82080",
    "end": "82880"
  },
  {
    "text": "when there is a variable number of them",
    "start": "82880",
    "end": "86240"
  },
  {
    "text": "we we cannot put these devices to be",
    "start": "86240",
    "end": "89520"
  },
  {
    "text": "part of a kubernetes cluster",
    "start": "89520",
    "end": "91360"
  },
  {
    "text": "because many times there are single",
    "start": "91360",
    "end": "92880"
  },
  {
    "text": "purpose devices they have a small",
    "start": "92880",
    "end": "94799"
  },
  {
    "text": "footprint",
    "start": "94799",
    "end": "95759"
  },
  {
    "text": "or they have not been certified to run",
    "start": "95759",
    "end": "97920"
  },
  {
    "text": "kubernetes",
    "start": "97920",
    "end": "99360"
  },
  {
    "text": "and so how can your application take a",
    "start": "99360",
    "end": "102079"
  },
  {
    "text": "dependency on them",
    "start": "102079",
    "end": "104560"
  },
  {
    "text": "when we looked at this when we look at",
    "start": "104560",
    "end": "106960"
  },
  {
    "text": "this we couldn't find a standardized way",
    "start": "106960",
    "end": "109040"
  },
  {
    "text": "to achieve this and that's where we came",
    "start": "109040",
    "end": "110880"
  },
  {
    "text": "up with agree",
    "start": "110880",
    "end": "114159"
  },
  {
    "text": "akri exposes the individual iot devices",
    "start": "114159",
    "end": "117119"
  },
  {
    "text": "into kubernetes clusters extended",
    "start": "117119",
    "end": "119280"
  },
  {
    "text": "resources",
    "start": "119280",
    "end": "120880"
  },
  {
    "text": "this then allows your application to",
    "start": "120880",
    "end": "122640"
  },
  {
    "text": "take a dependency on them",
    "start": "122640",
    "end": "124159"
  },
  {
    "text": "similarly like you would do on any gpu",
    "start": "124159",
    "end": "127040"
  },
  {
    "text": "where you can ex",
    "start": "127040",
    "end": "128479"
  },
  {
    "text": "where you can request uh",
    "start": "128479",
    "end": "131920"
  },
  {
    "text": "access to the extended resource acry",
    "start": "131920",
    "end": "134959"
  },
  {
    "text": "itself",
    "start": "134959",
    "end": "135680"
  },
  {
    "text": "is the name is an acronym it stands for",
    "start": "135680",
    "end": "138000"
  },
  {
    "text": "a kubernetes resource",
    "start": "138000",
    "end": "139520"
  },
  {
    "text": "interface for the edge and it also",
    "start": "139520",
    "end": "142080"
  },
  {
    "text": "stands for edge",
    "start": "142080",
    "end": "143280"
  },
  {
    "text": "in greek now akri works in two phases",
    "start": "143280",
    "end": "147920"
  },
  {
    "text": "first it discovers and advertises the",
    "start": "147920",
    "end": "151599"
  },
  {
    "text": "iot devices to the cluster",
    "start": "151599",
    "end": "154640"
  },
  {
    "text": "it then monitors the availability of",
    "start": "154640",
    "end": "157360"
  },
  {
    "text": "those devices to make sure if a device",
    "start": "157360",
    "end": "159760"
  },
  {
    "text": "disappears maybe it's disconnected or",
    "start": "159760",
    "end": "162319"
  },
  {
    "text": "starts malfunctioning",
    "start": "162319",
    "end": "163920"
  },
  {
    "text": "it stops advertising it to the cluster",
    "start": "163920",
    "end": "167440"
  },
  {
    "text": "second this is an optional piece you can",
    "start": "167440",
    "end": "171360"
  },
  {
    "text": "request accrete to schedule a workload",
    "start": "171360",
    "end": "173680"
  },
  {
    "text": "when a new device is discovered",
    "start": "173680",
    "end": "176160"
  },
  {
    "text": "this allows you to dynamically in a",
    "start": "176160",
    "end": "178000"
  },
  {
    "text": "plug-and-play fashion",
    "start": "178000",
    "end": "179680"
  },
  {
    "text": "schedule your workloads if and only if",
    "start": "179680",
    "end": "182480"
  },
  {
    "text": "the",
    "start": "182480",
    "end": "182959"
  },
  {
    "text": "devices are available now to achieve",
    "start": "182959",
    "end": "186400"
  },
  {
    "text": "this",
    "start": "186400",
    "end": "187280"
  },
  {
    "text": "akri has an extensibility point called",
    "start": "187280",
    "end": "190000"
  },
  {
    "text": "discovery handlers",
    "start": "190000",
    "end": "192400"
  },
  {
    "text": "we don't think that any project can",
    "start": "192400",
    "end": "194400"
  },
  {
    "text": "handle discovery of all iot devices",
    "start": "194400",
    "end": "197840"
  },
  {
    "text": "there is just so many protocols out",
    "start": "197840",
    "end": "199680"
  },
  {
    "text": "there and so the discovery is offloaded",
    "start": "199680",
    "end": "202560"
  },
  {
    "text": "to the",
    "start": "202560",
    "end": "203280"
  },
  {
    "text": "discovery handler and",
    "start": "203280",
    "end": "206720"
  },
  {
    "text": "uh and you can take a dependency on",
    "start": "206720",
    "end": "209840"
  },
  {
    "text": "several discovery handlers that we have",
    "start": "209840",
    "end": "212560"
  },
  {
    "text": "we have",
    "start": "212560",
    "end": "213360"
  },
  {
    "text": "already available with acry so we",
    "start": "213360",
    "end": "215200"
  },
  {
    "text": "support onvif for ip cameras",
    "start": "215200",
    "end": "218400"
  },
  {
    "text": "udef for locally attached devices an",
    "start": "218400",
    "end": "221680"
  },
  {
    "text": "opc ua for industrial settings but you",
    "start": "221680",
    "end": "224560"
  },
  {
    "text": "can also",
    "start": "224560",
    "end": "225440"
  },
  {
    "text": "bring your own or take dependence uh",
    "start": "225440",
    "end": "227680"
  },
  {
    "text": "dependency on any other discovery",
    "start": "227680",
    "end": "229360"
  },
  {
    "text": "handler",
    "start": "229360",
    "end": "230080"
  },
  {
    "text": "coming from a community acre itself is",
    "start": "230080",
    "end": "233760"
  },
  {
    "text": "purely open source project there is no",
    "start": "233760",
    "end": "235519"
  },
  {
    "text": "microsoft hidden source in it",
    "start": "235519",
    "end": "237840"
  },
  {
    "text": "it is released as part of their slabs",
    "start": "237840",
    "end": "241040"
  },
  {
    "text": "side by side with other days labs",
    "start": "241040",
    "end": "242720"
  },
  {
    "text": "projects such as helm",
    "start": "242720",
    "end": "244959"
  },
  {
    "text": "akri has been built uh in rust but",
    "start": "244959",
    "end": "248239"
  },
  {
    "text": "it doesn't mean that the device",
    "start": "248239",
    "end": "251280"
  },
  {
    "text": "discovery handlers needs to be written",
    "start": "251280",
    "end": "253760"
  },
  {
    "text": "in the same language you can pick any",
    "start": "253760",
    "end": "255360"
  },
  {
    "text": "language of your choosing",
    "start": "255360",
    "end": "258560"
  },
  {
    "start": "259000",
    "end": "259000"
  },
  {
    "text": "so now let's look at a typical iot",
    "start": "259840",
    "end": "262960"
  },
  {
    "text": "scenario and let's see",
    "start": "262960",
    "end": "264800"
  },
  {
    "text": "how a creek can help",
    "start": "264800",
    "end": "267840"
  },
  {
    "text": "say you're building a smart farm you",
    "start": "267840",
    "end": "270800"
  },
  {
    "text": "will",
    "start": "270800",
    "end": "271280"
  },
  {
    "text": "you'll care for your crops and for your",
    "start": "271280",
    "end": "273120"
  },
  {
    "text": "animals for your crops you might want to",
    "start": "273120",
    "end": "275440"
  },
  {
    "text": "deploy",
    "start": "275440",
    "end": "276080"
  },
  {
    "text": "some soil moisture and ph sensors some",
    "start": "276080",
    "end": "279280"
  },
  {
    "text": "temperature sensors",
    "start": "279280",
    "end": "281120"
  },
  {
    "text": "for your animals you might want to",
    "start": "281120",
    "end": "283040"
  },
  {
    "text": "deploy some ip cameras",
    "start": "283040",
    "end": "285600"
  },
  {
    "text": "and microphones to ensure there are no",
    "start": "285600",
    "end": "288160"
  },
  {
    "text": "predators",
    "start": "288160",
    "end": "289120"
  },
  {
    "text": "attacking your animals so so in order in",
    "start": "289120",
    "end": "292320"
  },
  {
    "text": "order for you to take advantage of all",
    "start": "292320",
    "end": "294000"
  },
  {
    "text": "these sensors you need to have some",
    "start": "294000",
    "end": "295120"
  },
  {
    "text": "application doing the data processing",
    "start": "295120",
    "end": "296800"
  },
  {
    "text": "and so",
    "start": "296800",
    "end": "297280"
  },
  {
    "text": "so let's zoom in specifically on the ip",
    "start": "297280",
    "end": "299440"
  },
  {
    "text": "camera scenario and see",
    "start": "299440",
    "end": "301039"
  },
  {
    "text": "uh how you could design your application",
    "start": "301039",
    "end": "303919"
  },
  {
    "text": "first we'll go over the scenario without",
    "start": "303919",
    "end": "305759"
  },
  {
    "start": "304000",
    "end": "304000"
  },
  {
    "text": "agreeing to see",
    "start": "305759",
    "end": "307360"
  },
  {
    "text": "to understand better the complexity",
    "start": "307360",
    "end": "309919"
  },
  {
    "text": "involved",
    "start": "309919",
    "end": "310880"
  },
  {
    "text": "so say you start with you know your ip",
    "start": "310880",
    "end": "312880"
  },
  {
    "text": "cameras deployed",
    "start": "312880",
    "end": "314240"
  },
  {
    "text": "and you need to deploy the application",
    "start": "314240",
    "end": "315840"
  },
  {
    "text": "doing the processing we'll take a",
    "start": "315840",
    "end": "318400"
  },
  {
    "text": "simple micro services-based architecture",
    "start": "318400",
    "end": "321440"
  },
  {
    "text": "where we have a frame server port",
    "start": "321440",
    "end": "323600"
  },
  {
    "text": "running",
    "start": "323600",
    "end": "324479"
  },
  {
    "text": "for every camera it's processing the",
    "start": "324479",
    "end": "327680"
  },
  {
    "text": "rtsp stream extracting individual frames",
    "start": "327680",
    "end": "330560"
  },
  {
    "text": "and passing it on to the inferencing",
    "start": "330560",
    "end": "332800"
  },
  {
    "text": "which takes advantage of gpu and",
    "start": "332800",
    "end": "334880"
  },
  {
    "text": "ml model to discover any predator and",
    "start": "334880",
    "end": "337440"
  },
  {
    "text": "when a predator is found it sends an",
    "start": "337440",
    "end": "339199"
  },
  {
    "text": "alert",
    "start": "339199",
    "end": "340800"
  },
  {
    "text": "it's all great except for the fact that",
    "start": "340800",
    "end": "343199"
  },
  {
    "text": "we are running on a farm",
    "start": "343199",
    "end": "344639"
  },
  {
    "text": "not in a data center and so we might not",
    "start": "344639",
    "end": "346400"
  },
  {
    "text": "have the connectivity",
    "start": "346400",
    "end": "348160"
  },
  {
    "text": "and the bandwidth necessary to push a",
    "start": "348160",
    "end": "350720"
  },
  {
    "text": "full video streams or multiple video",
    "start": "350720",
    "end": "352720"
  },
  {
    "text": "streams into the cloud",
    "start": "352720",
    "end": "354080"
  },
  {
    "text": "and so instead uh the data attracts",
    "start": "354080",
    "end": "358000"
  },
  {
    "text": "compute data gravity so so we can deploy",
    "start": "358000",
    "end": "361360"
  },
  {
    "text": "the kubernetes cluster onto the edge",
    "start": "361360",
    "end": "364639"
  },
  {
    "text": "it's a simple kubernetes cluster to",
    "start": "364639",
    "end": "366720"
  },
  {
    "text": "begin with uh",
    "start": "366720",
    "end": "367840"
  },
  {
    "text": "with a single gpu we have our alerting",
    "start": "367840",
    "end": "371520"
  },
  {
    "text": "port",
    "start": "371520",
    "end": "372080"
  },
  {
    "text": "running in the clusters and that's okay",
    "start": "372080",
    "end": "374400"
  },
  {
    "text": "because that produces a low bandwidth",
    "start": "374400",
    "end": "376720"
  },
  {
    "text": "stream of data that we can push onto",
    "start": "376720",
    "end": "378319"
  },
  {
    "text": "cloud for additional processing",
    "start": "378319",
    "end": "380560"
  },
  {
    "text": "uh for fun we'll also keep track of how",
    "start": "380560",
    "end": "382800"
  },
  {
    "text": "many",
    "start": "382800",
    "end": "383680"
  },
  {
    "text": "steps an operator needs to do to",
    "start": "383680",
    "end": "385600"
  },
  {
    "text": "provision all the pcs",
    "start": "385600",
    "end": "387280"
  },
  {
    "text": "uh into the edge cluster for your",
    "start": "387280",
    "end": "389600"
  },
  {
    "text": "application",
    "start": "389600",
    "end": "391199"
  },
  {
    "text": "so we have the ip cameras and",
    "start": "391199",
    "end": "394240"
  },
  {
    "text": "in the micro service version we have",
    "start": "394240",
    "end": "395759"
  },
  {
    "text": "deployed a frame server port per camera",
    "start": "395759",
    "end": "398400"
  },
  {
    "text": "and we have to manually provision the",
    "start": "398400",
    "end": "400479"
  },
  {
    "text": "configuration",
    "start": "400479",
    "end": "401759"
  },
  {
    "text": "the connection string so that the frame",
    "start": "401759",
    "end": "404319"
  },
  {
    "text": "server can start pulling frames from",
    "start": "404319",
    "end": "406720"
  },
  {
    "text": "its assigned camera once we have that we",
    "start": "406720",
    "end": "410479"
  },
  {
    "text": "need to provision",
    "start": "410479",
    "end": "411680"
  },
  {
    "text": "uh an inferencing uh port with a",
    "start": "411680",
    "end": "414880"
  },
  {
    "text": "ml model and attach it to a gpu so that",
    "start": "414880",
    "end": "417919"
  },
  {
    "text": "we can start doing processing this",
    "start": "417919",
    "end": "419520"
  },
  {
    "text": "inferencing port needs to understand",
    "start": "419520",
    "end": "420880"
  },
  {
    "text": "what are all the frame server",
    "start": "420880",
    "end": "422000"
  },
  {
    "text": "port assigned to it so it can pull the",
    "start": "422000",
    "end": "424000"
  },
  {
    "text": "frames and start processing them",
    "start": "424000",
    "end": "426400"
  },
  {
    "text": "and then when when the processing is",
    "start": "426400",
    "end": "428479"
  },
  {
    "text": "complete",
    "start": "428479",
    "end": "429919"
  },
  {
    "text": "uh and the predator is discovered we",
    "start": "429919",
    "end": "431599"
  },
  {
    "text": "send an alert the same way as we did",
    "start": "431599",
    "end": "433360"
  },
  {
    "text": "but in the cloud time now what happens",
    "start": "433360",
    "end": "436800"
  },
  {
    "text": "if",
    "start": "436800",
    "end": "437199"
  },
  {
    "text": "a po if a camera goes down so maybe say",
    "start": "437199",
    "end": "439840"
  },
  {
    "text": "it goes disconnected or it's",
    "start": "439840",
    "end": "441360"
  },
  {
    "text": "malfunctioning",
    "start": "441360",
    "end": "442639"
  },
  {
    "text": "well now you have a frame server pod",
    "start": "442639",
    "end": "444400"
  },
  {
    "text": "sitting in your cluster",
    "start": "444400",
    "end": "446160"
  },
  {
    "text": "and either idling or it just keeps",
    "start": "446160",
    "end": "448319"
  },
  {
    "text": "restarting that's not great just",
    "start": "448319",
    "end": "450080"
  },
  {
    "text": "consuming resources",
    "start": "450080",
    "end": "451599"
  },
  {
    "text": "so you might need to send an operator to",
    "start": "451599",
    "end": "453680"
  },
  {
    "text": "go and",
    "start": "453680",
    "end": "455440"
  },
  {
    "text": "dis remove it from from your cluster",
    "start": "455440",
    "end": "459199"
  },
  {
    "text": "next say you want to scale well now you",
    "start": "459199",
    "end": "461680"
  },
  {
    "text": "need to again go",
    "start": "461680",
    "end": "462960"
  },
  {
    "text": "schedule multiple frames reports",
    "start": "462960",
    "end": "464960"
  },
  {
    "text": "provision them individually with the",
    "start": "464960",
    "end": "466560"
  },
  {
    "text": "connection string to the cameras so that",
    "start": "466560",
    "end": "468560"
  },
  {
    "text": "they can pull",
    "start": "468560",
    "end": "469360"
  },
  {
    "text": "on the individual frames uh",
    "start": "469360",
    "end": "472800"
  },
  {
    "text": "say you want to scale your cluster okay",
    "start": "472800",
    "end": "474720"
  },
  {
    "text": "you deploy a new node",
    "start": "474720",
    "end": "476479"
  },
  {
    "text": "you need to again go and manually deploy",
    "start": "476479",
    "end": "478960"
  },
  {
    "text": "the inferencing port to take advantage",
    "start": "478960",
    "end": "480720"
  },
  {
    "text": "of the other gpu",
    "start": "480720",
    "end": "482879"
  },
  {
    "text": "uh what if any node goes down well maybe",
    "start": "482879",
    "end": "485919"
  },
  {
    "text": "you",
    "start": "485919",
    "end": "486160"
  },
  {
    "text": "re-partitioned maybe you re-partitioned",
    "start": "486160",
    "end": "488879"
  },
  {
    "text": "uh",
    "start": "488879",
    "end": "489840"
  },
  {
    "text": "you will need to re-partition which",
    "start": "489840",
    "end": "491199"
  },
  {
    "text": "frame server port goes to our process on",
    "start": "491199",
    "end": "493520"
  },
  {
    "text": "which",
    "start": "493520",
    "end": "494479"
  },
  {
    "text": "gpu and so there is a lot of manual",
    "start": "494479",
    "end": "497440"
  },
  {
    "text": "steps you kind of have to go along the",
    "start": "497440",
    "end": "499039"
  },
  {
    "text": "way",
    "start": "499039",
    "end": "499680"
  },
  {
    "text": "in order to create an application that",
    "start": "499680",
    "end": "502240"
  },
  {
    "text": "can react to changes in the physical",
    "start": "502240",
    "end": "504400"
  },
  {
    "text": "environment surrounding the cluster",
    "start": "504400",
    "end": "507360"
  },
  {
    "start": "507000",
    "end": "507000"
  },
  {
    "text": "and so let's see how we can simplify",
    "start": "507360",
    "end": "509440"
  },
  {
    "text": "this flow with acry",
    "start": "509440",
    "end": "511120"
  },
  {
    "text": "we'll start with the same set of cameras",
    "start": "511120",
    "end": "513039"
  },
  {
    "text": "we'll deploy the same kubernetes cluster",
    "start": "513039",
    "end": "515680"
  },
  {
    "text": "but but we're going to deploy acry onto",
    "start": "515680",
    "end": "517680"
  },
  {
    "text": "this cluster that's the green box",
    "start": "517680",
    "end": "520159"
  },
  {
    "text": "kate will later show us what are the",
    "start": "520159",
    "end": "523279"
  },
  {
    "text": "uh pieces of akri but for now let's",
    "start": "523279",
    "end": "525760"
  },
  {
    "text": "focus on high level",
    "start": "525760",
    "end": "527680"
  },
  {
    "text": "so with acre in place instead of",
    "start": "527680",
    "end": "530080"
  },
  {
    "text": "manually deploying the frame server pods",
    "start": "530080",
    "end": "531760"
  },
  {
    "text": "we'll deploy",
    "start": "531760",
    "end": "532640"
  },
  {
    "text": "accrete configuration this is a custom",
    "start": "532640",
    "end": "534640"
  },
  {
    "text": "resource which allows you to",
    "start": "534640",
    "end": "536440"
  },
  {
    "text": "declaratively",
    "start": "536440",
    "end": "537920"
  },
  {
    "text": "state what are the devices you want to",
    "start": "537920",
    "end": "540480"
  },
  {
    "text": "expose",
    "start": "540480",
    "end": "541040"
  },
  {
    "text": "into your cluster it's composed of two",
    "start": "541040",
    "end": "544399"
  },
  {
    "text": "main",
    "start": "544399",
    "end": "544880"
  },
  {
    "text": "pieces so first we request a discovery",
    "start": "544880",
    "end": "548320"
  },
  {
    "text": "handler",
    "start": "548320",
    "end": "549200"
  },
  {
    "text": "we are using here onwave to discover ip",
    "start": "549200",
    "end": "551600"
  },
  {
    "text": "cameras",
    "start": "551600",
    "end": "552480"
  },
  {
    "text": "in practice there will be additional",
    "start": "552480",
    "end": "553920"
  },
  {
    "text": "configurations such as filters",
    "start": "553920",
    "end": "556240"
  },
  {
    "text": "and then second you specify in for the",
    "start": "556240",
    "end": "559440"
  },
  {
    "text": "plug-and-play part you specify the",
    "start": "559440",
    "end": "561279"
  },
  {
    "text": "broker you want to deploy",
    "start": "561279",
    "end": "563680"
  },
  {
    "text": "uh that will take an advent that will",
    "start": "563680",
    "end": "566640"
  },
  {
    "text": "expose the device into the cluster",
    "start": "566640",
    "end": "569600"
  },
  {
    "text": "now in our case that's the frame server",
    "start": "569600",
    "end": "571839"
  },
  {
    "text": "pod",
    "start": "571839",
    "end": "572880"
  },
  {
    "text": "this broker will be automatically",
    "start": "572880",
    "end": "574640"
  },
  {
    "text": "provisioned with the configuration",
    "start": "574640",
    "end": "577279"
  },
  {
    "text": "to access the individual cameras in our",
    "start": "577279",
    "end": "579360"
  },
  {
    "text": "case it's a rtsp url",
    "start": "579360",
    "end": "582080"
  },
  {
    "text": "furthermore akri also deploys a",
    "start": "582080",
    "end": "585519"
  },
  {
    "text": "service that's the blue box sitting",
    "start": "585519",
    "end": "587760"
  },
  {
    "text": "behind the frame server pods and this",
    "start": "587760",
    "end": "590240"
  },
  {
    "text": "aggregates",
    "start": "590240",
    "end": "591279"
  },
  {
    "text": "and load balances across all broker pods",
    "start": "591279",
    "end": "593920"
  },
  {
    "text": "that are",
    "start": "593920",
    "end": "594560"
  },
  {
    "text": "deployed on behalf of single accurate",
    "start": "594560",
    "end": "597120"
  },
  {
    "text": "configuration",
    "start": "597120",
    "end": "598160"
  },
  {
    "text": "and this allows us to access all the",
    "start": "598160",
    "end": "600240"
  },
  {
    "text": "frames and reports",
    "start": "600240",
    "end": "601440"
  },
  {
    "text": "in a uniform fashion",
    "start": "601440",
    "end": "604480"
  },
  {
    "text": "next we need to take advantage of the",
    "start": "604480",
    "end": "606880"
  },
  {
    "text": "gpu we need to do the inferencing",
    "start": "606880",
    "end": "609120"
  },
  {
    "text": "so similarly we can use acry in this",
    "start": "609120",
    "end": "611360"
  },
  {
    "text": "case our udev discovery handler",
    "start": "611360",
    "end": "613839"
  },
  {
    "text": "to detect the gpu and when a gpu is",
    "start": "613839",
    "end": "615920"
  },
  {
    "text": "detected deploy the inferencing port",
    "start": "615920",
    "end": "620240"
  },
  {
    "text": "now in this case say again if any camera",
    "start": "620560",
    "end": "623279"
  },
  {
    "text": "goes down",
    "start": "623279",
    "end": "624000"
  },
  {
    "text": "that's okay acrylic will discover that",
    "start": "624000",
    "end": "626000"
  },
  {
    "text": "the device is no longer available",
    "start": "626000",
    "end": "628079"
  },
  {
    "text": "and it will automatically evict the",
    "start": "628079",
    "end": "629760"
  },
  {
    "text": "frames report",
    "start": "629760",
    "end": "631200"
  },
  {
    "text": "if we want to scale all we need to do is",
    "start": "631200",
    "end": "634079"
  },
  {
    "text": "we just connect the ip cameras",
    "start": "634079",
    "end": "635920"
  },
  {
    "text": "acre will automatically discover them",
    "start": "635920",
    "end": "638160"
  },
  {
    "text": "provision the frame server pods",
    "start": "638160",
    "end": "639680"
  },
  {
    "text": "configure them correctly",
    "start": "639680",
    "end": "641519"
  },
  {
    "text": "and our inferencing solution didn't have",
    "start": "641519",
    "end": "644640"
  },
  {
    "text": "our application didn't have to be",
    "start": "644640",
    "end": "645839"
  },
  {
    "text": "changed in any way on from the operator",
    "start": "645839",
    "end": "647680"
  },
  {
    "text": "site",
    "start": "647680",
    "end": "648959"
  },
  {
    "text": "if you want to scale the cluster we add",
    "start": "648959",
    "end": "650880"
  },
  {
    "text": "a new node",
    "start": "650880",
    "end": "652320"
  },
  {
    "text": "acrylic will automatically detect it",
    "start": "652320",
    "end": "654079"
  },
  {
    "text": "because we have provided the gpu",
    "start": "654079",
    "end": "655920"
  },
  {
    "text": "configuration",
    "start": "655920",
    "end": "656880"
  },
  {
    "text": "deploy new inferencing both and again",
    "start": "656880",
    "end": "659600"
  },
  {
    "text": "application scaled in completely",
    "start": "659600",
    "end": "661200"
  },
  {
    "text": "kubernetes native way",
    "start": "661200",
    "end": "663040"
  },
  {
    "text": "without the operator having to go and",
    "start": "663040",
    "end": "665200"
  },
  {
    "text": "make changes",
    "start": "665200",
    "end": "666160"
  },
  {
    "text": "based on the changes that happen in the",
    "start": "666160",
    "end": "668399"
  },
  {
    "text": "physical environment surrounding the",
    "start": "668399",
    "end": "669920"
  },
  {
    "text": "cluster",
    "start": "669920",
    "end": "672160"
  },
  {
    "text": "so with that i'll transition over to",
    "start": "672160",
    "end": "674480"
  },
  {
    "text": "kate who's going to walk us through",
    "start": "674480",
    "end": "676320"
  },
  {
    "text": "the details of the green box",
    "start": "676320",
    "end": "679519"
  },
  {
    "text": "awesome yeah let's dive into this green",
    "start": "679519",
    "end": "681440"
  },
  {
    "text": "box that's awkwary's architecture",
    "start": "681440",
    "end": "683680"
  },
  {
    "text": "so ocari is kubernetes native it's made",
    "start": "683680",
    "end": "686000"
  },
  {
    "start": "684000",
    "end": "684000"
  },
  {
    "text": "completely of kubernetes components",
    "start": "686000",
    "end": "688399"
  },
  {
    "text": "the first of which we saw earlier is",
    "start": "688399",
    "end": "690079"
  },
  {
    "text": "awkry's configuration",
    "start": "690079",
    "end": "691920"
  },
  {
    "text": "and that's where you tell ocry what you",
    "start": "691920",
    "end": "693440"
  },
  {
    "text": "want to find and you do that by",
    "start": "693440",
    "end": "695200"
  },
  {
    "text": "specifying what discovery handler you",
    "start": "695200",
    "end": "697040"
  },
  {
    "text": "want to use to discover devices",
    "start": "697040",
    "end": "699279"
  },
  {
    "text": "so this could be onvif like we saw",
    "start": "699279",
    "end": "700959"
  },
  {
    "text": "earlier for ip cameras udev",
    "start": "700959",
    "end": "702800"
  },
  {
    "text": "for local devices such as gpu or it",
    "start": "702800",
    "end": "705600"
  },
  {
    "text": "could be opcwa for industrial machinery",
    "start": "705600",
    "end": "707920"
  },
  {
    "text": "or it could be your own custom discovery",
    "start": "707920",
    "end": "709920"
  },
  {
    "text": "handler and we'll talk a little bit more",
    "start": "709920",
    "end": "711519"
  },
  {
    "text": "about the development lifecycle of",
    "start": "711519",
    "end": "712959"
  },
  {
    "text": "creating your own discovery handler",
    "start": "712959",
    "end": "714399"
  },
  {
    "text": "later",
    "start": "714399",
    "end": "715519"
  },
  {
    "text": "also in this configuration you specify",
    "start": "715519",
    "end": "717440"
  },
  {
    "text": "what custom workload",
    "start": "717440",
    "end": "718720"
  },
  {
    "text": "if any you want deployed automatically",
    "start": "718720",
    "end": "721120"
  },
  {
    "text": "to discovered devices",
    "start": "721120",
    "end": "722320"
  },
  {
    "text": "we call this our broker so once you",
    "start": "722320",
    "end": "725600"
  },
  {
    "text": "apply your configuration to the cluster",
    "start": "725600",
    "end": "727279"
  },
  {
    "text": "the hawker",
    "start": "727279",
    "end": "727920"
  },
  {
    "text": "agent will see it and it will tell that",
    "start": "727920",
    "end": "729760"
  },
  {
    "text": "discovery handler to start looking",
    "start": "729760",
    "end": "731360"
  },
  {
    "text": "across the network or locally on the",
    "start": "731360",
    "end": "732959"
  },
  {
    "text": "node for those devices",
    "start": "732959",
    "end": "734560"
  },
  {
    "text": "for every device that discovery handler",
    "start": "734560",
    "end": "736480"
  },
  {
    "text": "discovers",
    "start": "736480",
    "end": "737600"
  },
  {
    "text": "the agent will expose it to the cluster",
    "start": "737600",
    "end": "739600"
  },
  {
    "text": "using the device plug-in framework",
    "start": "739600",
    "end": "741600"
  },
  {
    "text": "and also create our second custom",
    "start": "741600",
    "end": "743279"
  },
  {
    "text": "resource the opry instance to represent",
    "start": "743279",
    "end": "745519"
  },
  {
    "text": "it and its usage",
    "start": "745519",
    "end": "747279"
  },
  {
    "text": "the controller will then see this",
    "start": "747279",
    "end": "749120"
  },
  {
    "text": "instance and if a broker pod was",
    "start": "749120",
    "end": "751360"
  },
  {
    "text": "specified",
    "start": "751360",
    "end": "752079"
  },
  {
    "text": "it will automatically deploy this broker",
    "start": "752079",
    "end": "754079"
  },
  {
    "text": "to the discover device",
    "start": "754079",
    "end": "755839"
  },
  {
    "text": "and inject in it as environment",
    "start": "755839",
    "end": "757440"
  },
  {
    "text": "variables all the information it needs",
    "start": "757440",
    "end": "759200"
  },
  {
    "text": "to connect to that specific device",
    "start": "759200",
    "end": "761279"
  },
  {
    "text": "so for example if these were ip cameras",
    "start": "761279",
    "end": "763279"
  },
  {
    "text": "were discovering maybe that would be an",
    "start": "763279",
    "end": "764959"
  },
  {
    "text": "rtsp url for the specific device",
    "start": "764959",
    "end": "768959"
  },
  {
    "start": "768000",
    "end": "768000"
  },
  {
    "text": "let's look at the flow of how you could",
    "start": "768959",
    "end": "770720"
  },
  {
    "text": "use ocry and in this case",
    "start": "770720",
    "end": "772240"
  },
  {
    "text": "say we have some custom application that",
    "start": "772240",
    "end": "774560"
  },
  {
    "text": "wants to utilize the frames from ip",
    "start": "774560",
    "end": "777040"
  },
  {
    "text": "cameras that are around the cluster",
    "start": "777040",
    "end": "780160"
  },
  {
    "text": "so the first thing you need is a",
    "start": "780160",
    "end": "781680"
  },
  {
    "text": "kubernetes cluster so here we have one",
    "start": "781680",
    "end": "783680"
  },
  {
    "text": "with a control plane and",
    "start": "783680",
    "end": "785440"
  },
  {
    "text": "two worker nodes and it has all the",
    "start": "785440",
    "end": "788000"
  },
  {
    "text": "kubernetes components already a part of",
    "start": "788000",
    "end": "789519"
  },
  {
    "text": "it",
    "start": "789519",
    "end": "790000"
  },
  {
    "text": "so at this point uh we can go ahead and",
    "start": "790000",
    "end": "792880"
  },
  {
    "text": "deploy our custom application that's",
    "start": "792880",
    "end": "794560"
  },
  {
    "text": "going to benefit from the work that",
    "start": "794560",
    "end": "795839"
  },
  {
    "text": "ocari is going to do",
    "start": "795839",
    "end": "797200"
  },
  {
    "text": "and we'll say that this custom",
    "start": "797200",
    "end": "798320"
  },
  {
    "text": "application has been pre-configured to",
    "start": "798320",
    "end": "800240"
  },
  {
    "text": "point to a service that will",
    "start": "800240",
    "end": "801440"
  },
  {
    "text": "automatically be created by ocari",
    "start": "801440",
    "end": "804560"
  },
  {
    "text": "now we're ready to install ocry an ocry",
    "start": "804560",
    "end": "806639"
  },
  {
    "text": "can be installed using its helm chart",
    "start": "806639",
    "end": "808240"
  },
  {
    "text": "it's just a simple helm installation",
    "start": "808240",
    "end": "810560"
  },
  {
    "text": "so once you do that you see all of the",
    "start": "810560",
    "end": "812880"
  },
  {
    "text": "aquarius components that we saw",
    "start": "812880",
    "end": "814079"
  },
  {
    "text": "previously on our architecture slide pop",
    "start": "814079",
    "end": "815920"
  },
  {
    "text": "up",
    "start": "815920",
    "end": "816320"
  },
  {
    "text": "so we have our controller running in the",
    "start": "816320",
    "end": "818399"
  },
  {
    "text": "control plane",
    "start": "818399",
    "end": "819440"
  },
  {
    "text": "and our onvif discovery handler and",
    "start": "819440",
    "end": "821360"
  },
  {
    "text": "agents running on each worker node",
    "start": "821360",
    "end": "824480"
  },
  {
    "text": "at this point we can tell ocry to start",
    "start": "824480",
    "end": "826399"
  },
  {
    "text": "discovery by applying our configuration",
    "start": "826399",
    "end": "828800"
  },
  {
    "text": "to the cluster",
    "start": "828800",
    "end": "830000"
  },
  {
    "text": "in this case because we want to discover",
    "start": "830000",
    "end": "831600"
  },
  {
    "text": "ip cameras we're going to specify that",
    "start": "831600",
    "end": "833279"
  },
  {
    "text": "we want to use the onvif discovery",
    "start": "833279",
    "end": "834720"
  },
  {
    "text": "handler",
    "start": "834720",
    "end": "835600"
  },
  {
    "text": "and since we do want workloads",
    "start": "835600",
    "end": "837040"
  },
  {
    "text": "automatically deployed to the discovered",
    "start": "837040",
    "end": "838639"
  },
  {
    "text": "devices",
    "start": "838639",
    "end": "839440"
  },
  {
    "text": "we're going to specify the image for our",
    "start": "839440",
    "end": "841199"
  },
  {
    "text": "workload and in this case we'll say it's",
    "start": "841199",
    "end": "842880"
  },
  {
    "text": "a frame server",
    "start": "842880",
    "end": "844240"
  },
  {
    "text": "like we saw in our previous scenarios so",
    "start": "844240",
    "end": "846079"
  },
  {
    "text": "this upload will connect to a camera",
    "start": "846079",
    "end": "848160"
  },
  {
    "text": "grab frames from it and serve those",
    "start": "848160",
    "end": "849680"
  },
  {
    "text": "frames over some grpc interface",
    "start": "849680",
    "end": "852160"
  },
  {
    "text": "the last thing to know about this",
    "start": "852160",
    "end": "853360"
  },
  {
    "text": "configuration is this capacity setting",
    "start": "853360",
    "end": "855519"
  },
  {
    "text": "that's where you tell ocarie how many",
    "start": "855519",
    "end": "857199"
  },
  {
    "text": "nodes can utilize a device at once",
    "start": "857199",
    "end": "859360"
  },
  {
    "text": "so here we're going to say only one can",
    "start": "859360",
    "end": "861680"
  },
  {
    "text": "deploy a broker to use this device at a",
    "start": "861680",
    "end": "863440"
  },
  {
    "text": "single time",
    "start": "863440",
    "end": "865040"
  },
  {
    "text": "so once you've applied your",
    "start": "865040",
    "end": "866000"
  },
  {
    "text": "configuration to the cluster the ocry",
    "start": "866000",
    "end": "867839"
  },
  {
    "text": "agent will tell the onvif discovery",
    "start": "867839",
    "end": "869600"
  },
  {
    "text": "handler",
    "start": "869600",
    "end": "870320"
  },
  {
    "text": "hey start looking across the network for",
    "start": "870320",
    "end": "871920"
  },
  {
    "text": "these ip cameras",
    "start": "871920",
    "end": "873519"
  },
  {
    "text": "we don't see any ip cameras right here",
    "start": "873519",
    "end": "875440"
  },
  {
    "text": "on this uh slide",
    "start": "875440",
    "end": "876560"
  },
  {
    "text": "so let's go ahead and connect a camera",
    "start": "876560",
    "end": "879600"
  },
  {
    "text": "so this could have been done before",
    "start": "879600",
    "end": "881360"
  },
  {
    "text": "deploying ocry but let's say that you do",
    "start": "881360",
    "end": "883279"
  },
  {
    "text": "it now",
    "start": "883279",
    "end": "885040"
  },
  {
    "text": "so the discovery handler will see this",
    "start": "885040",
    "end": "887279"
  },
  {
    "text": "camera and tell the agent",
    "start": "887279",
    "end": "889360"
  },
  {
    "text": "and the agents will create an instance",
    "start": "889360",
    "end": "892160"
  },
  {
    "text": "to represent this camera",
    "start": "892160",
    "end": "894240"
  },
  {
    "text": "the controller then sees that instance",
    "start": "894240",
    "end": "896240"
  },
  {
    "text": "and automatically deploys our broker pod",
    "start": "896240",
    "end": "898480"
  },
  {
    "text": "to one of the nodes that could see this",
    "start": "898480",
    "end": "899920"
  },
  {
    "text": "camera",
    "start": "899920",
    "end": "900880"
  },
  {
    "text": "it also automatically creates a service",
    "start": "900880",
    "end": "902959"
  },
  {
    "text": "for all of the frames from all the",
    "start": "902959",
    "end": "904800"
  },
  {
    "text": "cameras",
    "start": "904800",
    "end": "905920"
  },
  {
    "text": "and that's the one that the custom",
    "start": "905920",
    "end": "907519"
  },
  {
    "text": "application was pre-configured to point",
    "start": "907519",
    "end": "909120"
  },
  {
    "text": "to",
    "start": "909120",
    "end": "910000"
  },
  {
    "text": "so at this point the application",
    "start": "910000",
    "end": "910800"
  },
  {
    "text": "application's doing the work it was",
    "start": "910800",
    "end": "912079"
  },
  {
    "text": "intended to do it's getting those camera",
    "start": "912079",
    "end": "913920"
  },
  {
    "text": "frames and doing whatever it wanted to",
    "start": "913920",
    "end": "915360"
  },
  {
    "text": "do",
    "start": "915360",
    "end": "916240"
  },
  {
    "text": "but what happens if this node were to go",
    "start": "916240",
    "end": "918399"
  },
  {
    "text": "down",
    "start": "918399",
    "end": "919279"
  },
  {
    "text": "well since the other node said that it",
    "start": "919279",
    "end": "921040"
  },
  {
    "text": "could also see this camera",
    "start": "921040",
    "end": "922320"
  },
  {
    "text": "the controller will notice that the node",
    "start": "922320",
    "end": "924160"
  },
  {
    "text": "went down and automatically rescheduled",
    "start": "924160",
    "end": "926000"
  },
  {
    "text": "the broker",
    "start": "926000",
    "end": "927279"
  },
  {
    "text": "so that once again that camera's being",
    "start": "927279",
    "end": "928880"
  },
  {
    "text": "utilized however there was",
    "start": "928880",
    "end": "930480"
  },
  {
    "text": "a little bit of downtime so in order to",
    "start": "930480",
    "end": "932800"
  },
  {
    "text": "create a more highly available scenario",
    "start": "932800",
    "end": "934639"
  },
  {
    "text": "you could have set that capacity number",
    "start": "934639",
    "end": "936480"
  },
  {
    "text": "to two when deploying the configuration",
    "start": "936480",
    "end": "938800"
  },
  {
    "text": "and then from the start the controller",
    "start": "938800",
    "end": "940399"
  },
  {
    "text": "would have deployed a broker pod to each",
    "start": "940399",
    "end": "942000"
  },
  {
    "text": "one of these worker nodes",
    "start": "942000",
    "end": "943600"
  },
  {
    "text": "so that if the node went down there was",
    "start": "943600",
    "end": "945360"
  },
  {
    "text": "no lag and down time for this custom",
    "start": "945360",
    "end": "947040"
  },
  {
    "text": "application",
    "start": "947040",
    "end": "949600"
  },
  {
    "start": "949000",
    "end": "949000"
  },
  {
    "text": "all of that flow that we just saw could",
    "start": "949600",
    "end": "952480"
  },
  {
    "text": "have been initiated with one helm",
    "start": "952480",
    "end": "954000"
  },
  {
    "text": "installation so you'll see here",
    "start": "954000",
    "end": "955839"
  },
  {
    "text": "um you can install just helms controller",
    "start": "955839",
    "end": "958480"
  },
  {
    "text": "agent and discovery handlers and",
    "start": "958480",
    "end": "960079"
  },
  {
    "text": "separately you can uh create your",
    "start": "960079",
    "end": "962160"
  },
  {
    "text": "configuration yaml",
    "start": "962160",
    "end": "963360"
  },
  {
    "text": "and use cubectl to apply it to your",
    "start": "963360",
    "end": "965199"
  },
  {
    "text": "cluster or you can do that all",
    "start": "965199",
    "end": "967199"
  },
  {
    "text": "in our using our helm template and",
    "start": "967199",
    "end": "970560"
  },
  {
    "text": "helm installation let's look at one of",
    "start": "970560",
    "end": "974160"
  },
  {
    "start": "973000",
    "end": "973000"
  },
  {
    "text": "ocari's latest enhancements",
    "start": "974160",
    "end": "975759"
  },
  {
    "text": "and that is ocry's discovery handler",
    "start": "975759",
    "end": "977920"
  },
  {
    "text": "model so",
    "start": "977920",
    "end": "979519"
  },
  {
    "text": "our discovery handlers do discovery so",
    "start": "979519",
    "end": "981920"
  },
  {
    "text": "they're they're the ones who that",
    "start": "981920",
    "end": "983120"
  },
  {
    "text": "discover all the devices that are either",
    "start": "983120",
    "end": "984880"
  },
  {
    "text": "embedded in your nodes",
    "start": "984880",
    "end": "986240"
  },
  {
    "text": "of your cluster attached to it or around",
    "start": "986240",
    "end": "988880"
  },
  {
    "text": "the nodes",
    "start": "988880",
    "end": "989839"
  },
  {
    "text": "and these can be protocol",
    "start": "989839",
    "end": "991759"
  },
  {
    "text": "implementations like",
    "start": "991759",
    "end": "992959"
  },
  {
    "text": "onvif or opcwa and it could even be your",
    "start": "992959",
    "end": "996720"
  },
  {
    "text": "own proprietary protocol that discovers",
    "start": "996720",
    "end": "998720"
  },
  {
    "text": "your own unique devices",
    "start": "998720",
    "end": "1000720"
  },
  {
    "text": "originally these discovery handlers were",
    "start": "1000720",
    "end": "1002880"
  },
  {
    "text": "embedded in",
    "start": "1002880",
    "end": "1003759"
  },
  {
    "text": "the awkward agent which meant that if",
    "start": "1003759",
    "end": "1005519"
  },
  {
    "text": "you wanted to",
    "start": "1005519",
    "end": "1007199"
  },
  {
    "text": "extend ocarina to discover even more",
    "start": "1007199",
    "end": "1009120"
  },
  {
    "text": "devices you had to fork the agent",
    "start": "1009120",
    "end": "1011759"
  },
  {
    "text": "and work within its code which is all",
    "start": "1011759",
    "end": "1014399"
  },
  {
    "text": "rust",
    "start": "1014399",
    "end": "1015120"
  },
  {
    "text": "to include your discovery handler this",
    "start": "1015120",
    "end": "1017199"
  },
  {
    "text": "was also",
    "start": "1017199",
    "end": "1018240"
  },
  {
    "text": "this was clearly inhibiting and we heard",
    "start": "1018240",
    "end": "1020720"
  },
  {
    "text": "that feedback from the community",
    "start": "1020720",
    "end": "1022399"
  },
  {
    "text": "and now our discovery handlers live",
    "start": "1022399",
    "end": "1024240"
  },
  {
    "text": "behind a grpc interface",
    "start": "1024240",
    "end": "1025918"
  },
  {
    "text": "and we'll look a little bit more at that",
    "start": "1025919",
    "end": "1028000"
  },
  {
    "text": "in detail in a second",
    "start": "1028000",
    "end": "1030240"
  },
  {
    "text": "uh what this means now is that discovery",
    "start": "1030240",
    "end": "1032400"
  },
  {
    "text": "handlers are deployed their own pods",
    "start": "1032400",
    "end": "1035280"
  },
  {
    "text": "and they can be implemented in any",
    "start": "1035280",
    "end": "1036880"
  },
  {
    "text": "language and",
    "start": "1036880",
    "end": "1039120"
  },
  {
    "text": "there they can easily be deployed using",
    "start": "1039120",
    "end": "1041120"
  },
  {
    "text": "our helm chart so you can just specify",
    "start": "1041120",
    "end": "1042959"
  },
  {
    "text": "the image for your discovery handler",
    "start": "1042959",
    "end": "1045280"
  },
  {
    "text": "and they'll automatically be deployed in",
    "start": "1045280",
    "end": "1046959"
  },
  {
    "text": "a demon set fashion like our agents",
    "start": "1046959",
    "end": "1050080"
  },
  {
    "start": "1050000",
    "end": "1050000"
  },
  {
    "text": "so for the developers that may be",
    "start": "1050080",
    "end": "1051440"
  },
  {
    "text": "watching this right now let's go ahead",
    "start": "1051440",
    "end": "1053440"
  },
  {
    "text": "and look at this discovery handler",
    "start": "1053440",
    "end": "1055679"
  },
  {
    "text": "um interface so it consists of",
    "start": "1055679",
    "end": "1058799"
  },
  {
    "text": "two services the first of which is this",
    "start": "1058799",
    "end": "1060880"
  },
  {
    "text": "registration service",
    "start": "1060880",
    "end": "1062320"
  },
  {
    "text": "and that's hosted by the ocari agent and",
    "start": "1062320",
    "end": "1065520"
  },
  {
    "text": "that is the service where when a",
    "start": "1065520",
    "end": "1067440"
  },
  {
    "text": "discovery handler comes online it will",
    "start": "1067440",
    "end": "1069200"
  },
  {
    "text": "register with the agent saying",
    "start": "1069200",
    "end": "1071200"
  },
  {
    "text": "hey this is my name this is where i live",
    "start": "1071200",
    "end": "1074720"
  },
  {
    "text": "and i discover shared devices such as ip",
    "start": "1074720",
    "end": "1077440"
  },
  {
    "text": "cameras that are visible to multiple",
    "start": "1077440",
    "end": "1079039"
  },
  {
    "text": "nodes or unshared devices such as",
    "start": "1079039",
    "end": "1081440"
  },
  {
    "text": "local usb devices and the name that a",
    "start": "1081440",
    "end": "1084960"
  },
  {
    "text": "discovery handler registers with",
    "start": "1084960",
    "end": "1086799"
  },
  {
    "text": "is the name that you specify in your",
    "start": "1086799",
    "end": "1088320"
  },
  {
    "text": "configuration so when you specify you",
    "start": "1088320",
    "end": "1090559"
  },
  {
    "text": "use that discovery handler when you",
    "start": "1090559",
    "end": "1092480"
  },
  {
    "text": "apply the configuration the agent will",
    "start": "1092480",
    "end": "1094880"
  },
  {
    "text": "say oh that's the discovery handler that",
    "start": "1094880",
    "end": "1096799"
  },
  {
    "text": "i need to ask to do discovery",
    "start": "1096799",
    "end": "1098720"
  },
  {
    "text": "and it will pass the discovery details",
    "start": "1098720",
    "end": "1100640"
  },
  {
    "text": "that are also set in that configuration",
    "start": "1100640",
    "end": "1102400"
  },
  {
    "text": "to that discovery handler when it calls",
    "start": "1102400",
    "end": "1104240"
  },
  {
    "text": "discover on it",
    "start": "1104240",
    "end": "1105600"
  },
  {
    "text": "we previously abstracted away these",
    "start": "1105600",
    "end": "1107760"
  },
  {
    "text": "details in our previous slides",
    "start": "1107760",
    "end": "1109600"
  },
  {
    "text": "but discovery details are how you tell a",
    "start": "1109600",
    "end": "1112160"
  },
  {
    "text": "discovery handler what subset of devices",
    "start": "1112160",
    "end": "1114320"
  },
  {
    "text": "you want to discover",
    "start": "1114320",
    "end": "1115679"
  },
  {
    "text": "so for udev we don't want to discover",
    "start": "1115679",
    "end": "1117679"
  },
  {
    "text": "all the devices in the linux device file",
    "start": "1117679",
    "end": "1119600"
  },
  {
    "text": "system",
    "start": "1119600",
    "end": "1120320"
  },
  {
    "text": "so the uw discovery handler allows you",
    "start": "1120320",
    "end": "1122320"
  },
  {
    "text": "to specify a uw rule for filtering",
    "start": "1122320",
    "end": "1124559"
  },
  {
    "text": "in this case we want to discover only",
    "start": "1124559",
    "end": "1127039"
  },
  {
    "text": "video devices",
    "start": "1127039",
    "end": "1129840"
  },
  {
    "start": "1129000",
    "end": "1129000"
  },
  {
    "text": "let's review um all of awkry's",
    "start": "1129919",
    "end": "1131760"
  },
  {
    "text": "functionality that we've talked about so",
    "start": "1131760",
    "end": "1133280"
  },
  {
    "text": "far",
    "start": "1133280",
    "end": "1134320"
  },
  {
    "text": "so awkari is a kubernetes resource",
    "start": "1134320",
    "end": "1136240"
  },
  {
    "text": "interface and just like container",
    "start": "1136240",
    "end": "1138160"
  },
  {
    "text": "network interface abstracts away the",
    "start": "1138160",
    "end": "1139760"
  },
  {
    "text": "networking details from a kubernetes",
    "start": "1139760",
    "end": "1141679"
  },
  {
    "text": "operator",
    "start": "1141679",
    "end": "1142480"
  },
  {
    "text": "ocry aims to abstract away all the",
    "start": "1142480",
    "end": "1145039"
  },
  {
    "text": "details of finding and utilizing iot",
    "start": "1145039",
    "end": "1147120"
  },
  {
    "text": "devices",
    "start": "1147120",
    "end": "1148080"
  },
  {
    "text": "and aims to be a standard way to connect",
    "start": "1148080",
    "end": "1150000"
  },
  {
    "text": "these iot devices to your kubernetes",
    "start": "1150000",
    "end": "1151919"
  },
  {
    "text": "clusters",
    "start": "1151919",
    "end": "1152880"
  },
  {
    "text": "it can handle devices coming and going",
    "start": "1152880",
    "end": "1155039"
  },
  {
    "text": "so when devices appear it'll create",
    "start": "1155039",
    "end": "1156880"
  },
  {
    "text": "resources to represent these devices",
    "start": "1156880",
    "end": "1159039"
  },
  {
    "text": "when they go away it'll remove that",
    "start": "1159039",
    "end": "1160559"
  },
  {
    "text": "kubernetes resource that represents that",
    "start": "1160559",
    "end": "1162400"
  },
  {
    "text": "device",
    "start": "1162400",
    "end": "1163440"
  },
  {
    "text": "and it can enable a plug-and-play",
    "start": "1163440",
    "end": "1165360"
  },
  {
    "text": "scenario so that when devices are",
    "start": "1165360",
    "end": "1167039"
  },
  {
    "text": "discovered ocry can automatically deploy",
    "start": "1167039",
    "end": "1169039"
  },
  {
    "text": "workloads to utilize them",
    "start": "1169039",
    "end": "1170960"
  },
  {
    "text": "and it also makes it so that multiple",
    "start": "1170960",
    "end": "1172559"
  },
  {
    "text": "nodes can utilize the same device at",
    "start": "1172559",
    "end": "1174480"
  },
  {
    "text": "once",
    "start": "1174480",
    "end": "1175120"
  },
  {
    "text": "allowing these devices to be shared",
    "start": "1175120",
    "end": "1177039"
  },
  {
    "text": "using that capacity setting that we",
    "start": "1177039",
    "end": "1178559"
  },
  {
    "text": "discussed earlier",
    "start": "1178559",
    "end": "1180160"
  },
  {
    "text": "it can automatically deploy services for",
    "start": "1180160",
    "end": "1182400"
  },
  {
    "text": "you that point to",
    "start": "1182400",
    "end": "1183520"
  },
  {
    "text": "specific devices or all devices of the",
    "start": "1183520",
    "end": "1185760"
  },
  {
    "text": "same type or configuration",
    "start": "1185760",
    "end": "1188080"
  },
  {
    "text": "and we currently support several",
    "start": "1188080",
    "end": "1190640"
  },
  {
    "text": "discovery handlers that we've discussed",
    "start": "1190640",
    "end": "1192160"
  },
  {
    "text": "so far",
    "start": "1192160",
    "end": "1192880"
  },
  {
    "text": "and we have community contributions",
    "start": "1192880",
    "end": "1194640"
  },
  {
    "text": "underway for",
    "start": "1194640",
    "end": "1195919"
  },
  {
    "text": "um zero comp discovery for mdns based",
    "start": "1195919",
    "end": "1198720"
  },
  {
    "text": "devices and co-op discovery for",
    "start": "1198720",
    "end": "1201120"
  },
  {
    "text": "devices in constrained environments but",
    "start": "1201120",
    "end": "1203360"
  },
  {
    "text": "as we saw earlier we really are trying",
    "start": "1203360",
    "end": "1205120"
  },
  {
    "text": "to make our discovery handler model as",
    "start": "1205120",
    "end": "1206799"
  },
  {
    "text": "extensible as possible so that community",
    "start": "1206799",
    "end": "1208640"
  },
  {
    "text": "members can",
    "start": "1208640",
    "end": "1209679"
  },
  {
    "text": "easily add more and we can continue to",
    "start": "1209679",
    "end": "1211520"
  },
  {
    "text": "discover even more",
    "start": "1211520",
    "end": "1213360"
  },
  {
    "text": "devices another way that ocari is",
    "start": "1213360",
    "end": "1215840"
  },
  {
    "text": "extensible is via its broker pods",
    "start": "1215840",
    "end": "1218240"
  },
  {
    "text": "so you can specify any image for the",
    "start": "1218240",
    "end": "1221200"
  },
  {
    "text": "workload that you want to automatically",
    "start": "1221200",
    "end": "1222880"
  },
  {
    "text": "be deployed to discover devices",
    "start": "1222880",
    "end": "1225200"
  },
  {
    "text": "and one way that we see broker pods",
    "start": "1225200",
    "end": "1227200"
  },
  {
    "text": "being used is as protocol translation",
    "start": "1227200",
    "end": "1229520"
  },
  {
    "text": "gateways",
    "start": "1229520",
    "end": "1230320"
  },
  {
    "text": "so maybe you have awkry discover some",
    "start": "1230320",
    "end": "1232240"
  },
  {
    "text": "usb video cameras",
    "start": "1232240",
    "end": "1234480"
  },
  {
    "text": "and your broker pod will automatically",
    "start": "1234480",
    "end": "1237679"
  },
  {
    "text": "translate that usb camera into being an",
    "start": "1237679",
    "end": "1240000"
  },
  {
    "text": "ip camera",
    "start": "1240000",
    "end": "1242400"
  },
  {
    "start": "1242000",
    "end": "1242000"
  },
  {
    "text": "so what's next for ocry more discovery",
    "start": "1242400",
    "end": "1245280"
  },
  {
    "text": "handlers",
    "start": "1245280",
    "end": "1246240"
  },
  {
    "text": "the more that ocry can discover the more",
    "start": "1246240",
    "end": "1248159"
  },
  {
    "text": "powerful a solution kubernetes will be",
    "start": "1248159",
    "end": "1250159"
  },
  {
    "text": "on the edge",
    "start": "1250159",
    "end": "1251440"
  },
  {
    "text": "we also want uh to support more",
    "start": "1251440",
    "end": "1253280"
  },
  {
    "text": "deployment strategies so currently",
    "start": "1253280",
    "end": "1255520"
  },
  {
    "text": "ocari has a microservice approach to",
    "start": "1255520",
    "end": "1257440"
  },
  {
    "text": "utilizing these iot devices",
    "start": "1257440",
    "end": "1259679"
  },
  {
    "text": "it discovers and we'd like to have",
    "start": "1259679",
    "end": "1262080"
  },
  {
    "text": "multiple approaches there",
    "start": "1262080",
    "end": "1263840"
  },
  {
    "text": "and finally and most importantly we want",
    "start": "1263840",
    "end": "1265679"
  },
  {
    "text": "to grow our community",
    "start": "1265679",
    "end": "1267120"
  },
  {
    "text": "um awkry open sourced only in october of",
    "start": "1267120",
    "end": "1270159"
  },
  {
    "text": "last year we're still very young",
    "start": "1270159",
    "end": "1272080"
  },
  {
    "text": "and we're really excited to look to the",
    "start": "1272080",
    "end": "1274080"
  },
  {
    "text": "community for direction",
    "start": "1274080",
    "end": "1275360"
  },
  {
    "text": "and see where ocarie is most powerful",
    "start": "1275360",
    "end": "1279280"
  },
  {
    "start": "1278000",
    "end": "1278000"
  },
  {
    "text": "if you find acrylic interesting you can",
    "start": "1279360",
    "end": "1282159"
  },
  {
    "text": "come and",
    "start": "1282159",
    "end": "1282960"
  },
  {
    "text": "deploy our end-to-end demo for yourself",
    "start": "1282960",
    "end": "1285120"
  },
  {
    "text": "and try it out",
    "start": "1285120",
    "end": "1286720"
  },
  {
    "text": "you can also learn more about aquari by",
    "start": "1286720",
    "end": "1289200"
  },
  {
    "text": "visiting our",
    "start": "1289200",
    "end": "1290000"
  },
  {
    "text": "documentation everything we talked about",
    "start": "1290000",
    "end": "1292559"
  },
  {
    "text": "there today and much more",
    "start": "1292559",
    "end": "1294000"
  },
  {
    "text": "is described in our docs we are",
    "start": "1294000",
    "end": "1297679"
  },
  {
    "text": "available you know if you if you",
    "start": "1297679",
    "end": "1299120"
  },
  {
    "text": "encounter any issues please let us know",
    "start": "1299120",
    "end": "1301120"
  },
  {
    "text": "on github",
    "start": "1301120",
    "end": "1302159"
  },
  {
    "text": "or you can talk to us on kubernetes",
    "start": "1302159",
    "end": "1306000"
  },
  {
    "text": "like accurate channel we are always",
    "start": "1306000",
    "end": "1308000"
  },
  {
    "text": "available there for any thoughts",
    "start": "1308000",
    "end": "1309840"
  },
  {
    "text": "feedback or help with any issues",
    "start": "1309840",
    "end": "1312960"
  },
  {
    "text": "we are always open to proposals as well",
    "start": "1312960",
    "end": "1315280"
  },
  {
    "text": "so if you find something that you think",
    "start": "1315280",
    "end": "1316960"
  },
  {
    "text": "akri should do for everybody or even",
    "start": "1316960",
    "end": "1319200"
  },
  {
    "text": "just for yourself",
    "start": "1319200",
    "end": "1320400"
  },
  {
    "text": "please let us know send us a proposal uh",
    "start": "1320400",
    "end": "1323280"
  },
  {
    "text": "we are open to contributions",
    "start": "1323280",
    "end": "1325120"
  },
  {
    "text": "if you want to contribute that would be",
    "start": "1325120",
    "end": "1326480"
  },
  {
    "text": "great otherwise you can also come meet",
    "start": "1326480",
    "end": "1328960"
  },
  {
    "text": "us at our community meetings",
    "start": "1328960",
    "end": "1330640"
  },
  {
    "text": "we have a once a month community",
    "start": "1330640",
    "end": "1332240"
  },
  {
    "text": "meetings on zoom uh",
    "start": "1332240",
    "end": "1333679"
  },
  {
    "text": "where we can discuss other ideas that",
    "start": "1333679",
    "end": "1336000"
  },
  {
    "text": "you might have",
    "start": "1336000",
    "end": "1338159"
  },
  {
    "text": "thank you all for your time uh we will",
    "start": "1338159",
    "end": "1340480"
  },
  {
    "text": "be here for a little while longer for",
    "start": "1340480",
    "end": "1342159"
  },
  {
    "text": "those of you watching live",
    "start": "1342159",
    "end": "1343520"
  },
  {
    "text": "to answer any questions otherwise like i",
    "start": "1343520",
    "end": "1345760"
  },
  {
    "text": "said feel free to reach out to us on any",
    "start": "1345760",
    "end": "1347520"
  },
  {
    "text": "other channels",
    "start": "1347520",
    "end": "1348720"
  },
  {
    "text": "and i hope talk to you soon bye",
    "start": "1348720",
    "end": "1354320"
  }
]