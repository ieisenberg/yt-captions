[
  {
    "text": "three days it's long man give yourselves a round of applause you made",
    "start": "560",
    "end": "6799"
  },
  {
    "text": "it heck yeah all right I'm going to start the timer i said I'd forget it and",
    "start": "7320",
    "end": "12639"
  },
  {
    "text": "I didn't nice hi everybody my name is Dan i work at a company called",
    "start": "12639",
    "end": "18840"
  },
  {
    "text": "Serbos this is CubeCon in London in 2025 that is my title slide thanks for",
    "start": "18840",
    "end": "25199"
  },
  {
    "text": "joining me today uh I get to work at Serbos and I get to work at Serbos on open source and before",
    "start": "25199",
    "end": "31519"
  },
  {
    "text": "this I worked at lots of neat places like Ubisoft and Mozilla and data dog and I say this only as context to let",
    "start": "31519",
    "end": "37280"
  },
  {
    "text": "you understand where I'm coming from for the remainder of this talk i've gotten to dabble a lot in infrastructure uh and",
    "start": "37280",
    "end": "42719"
  },
  {
    "text": "development and also in security and a thing that I've learned uh along this path I've learned a lot of things but",
    "start": "42719",
    "end": "48320"
  },
  {
    "text": "one of those things is that authorization different from authentication thank you very much isn't just a security problem although it's",
    "start": "48320",
    "end": "55199"
  },
  {
    "text": "often relegated to that it's actually a developer experience problem as well and that's really what I want to talk about",
    "start": "55199",
    "end": "60960"
  },
  {
    "text": "today um let's start with what I call and I'm not the only one who calls it this is the authorization paradox okay",
    "start": "60960",
    "end": "68479"
  },
  {
    "text": "every single request in every single application especially in today's modern whisbang cloudnative environment right",
    "start": "68479",
    "end": "75040"
  },
  {
    "text": "needs to answer the question at every single encounter is this user allowed to do this thing under what conditions",
    "start": "75040",
    "end": "81759"
  },
  {
    "text": "right it's unavoidable it's important for security but authorization is actually treated as an afterthought uh",
    "start": "81759",
    "end": "88159"
  },
  {
    "text": "in our architectures and our workflows especially as developers especially even as infrastructure people and we've",
    "start": "88159",
    "end": "93360"
  },
  {
    "text": "actually seen this pattern before uh I'm a man of a certain age and I remember when deploying was just a collection of",
    "start": "93360",
    "end": "99759"
  },
  {
    "text": "bash scripts or like setting and grepping and stuff like this right um",
    "start": "99759",
    "end": "104799"
  },
  {
    "text": "you probably remember when observability meant grepping through log files as opposed to like a single pain you got your graphana and your data dog and",
    "start": "104799",
    "end": "111119"
  },
  {
    "text": "stuff right now uh our industry basically recognized these pain points and was like we don't want to feel this",
    "start": "111119",
    "end": "117600"
  },
  {
    "text": "pain anymore what can we do but authorization hasn't gone through",
    "start": "117600",
    "end": "122960"
  },
  {
    "text": "this elegant developer transformation yet right it remains stuck in this sort of a weird strange place it's something",
    "start": "122960",
    "end": "129200"
  },
  {
    "text": "that every developer has to implement but few have good tools or or patterns",
    "start": "129200",
    "end": "134879"
  },
  {
    "text": "really for building it right so it creates friction rather than flow and when something creates friction we find",
    "start": "134879",
    "end": "141280"
  },
  {
    "text": "ways around it and sometimes not very good ways right uh this leads to this disconnect and that's kind of what I",
    "start": "141280",
    "end": "147280"
  },
  {
    "text": "want to talk about today okay but let's step back and look at how uh how we got here right so how has it evolved over",
    "start": "147280",
    "end": "153680"
  },
  {
    "text": "the past decade um remember networking i remember networking i remember plugging in stuff right went from manually",
    "start": "153680",
    "end": "160080"
  },
  {
    "text": "configured load balancers and firewall rules to declarative service meshes CNI plugins right so we we did that leap uh",
    "start": "160080",
    "end": "167120"
  },
  {
    "text": "infrastructure concerns have now become developer concerns with clean primitives and clean abstractions storage followed",
    "start": "167120",
    "end": "173440"
  },
  {
    "text": "a similar path right moved from managing volumes and mount points to just declaring persistent volume claims etc",
    "start": "173440",
    "end": "179440"
  },
  {
    "text": "etc right uh CSI standards deployments you know we transferred from errorprone",
    "start": "179440",
    "end": "185200"
  },
  {
    "text": "shell scripts and stuff being done by hand and I'm just going to super quick SCP this over to prod we don't do that anymore you don't do that anymore don't",
    "start": "185200",
    "end": "193360"
  },
  {
    "text": "do that anymore okay and in this case transformation made developers more productive whilst simultaneously",
    "start": "193360",
    "end": "200000"
  },
  {
    "text": "improving security improving reliability right that was the idea um so the pattern is clear like you have good",
    "start": "200000",
    "end": "205280"
  },
  {
    "text": "abstractions and those good abstractions don't just hide the complexity they they really change how we work and and that's",
    "start": "205280",
    "end": "210879"
  },
  {
    "text": "a good thing so why has authorization remained kind of stuck um well it hasn't",
    "start": "210879",
    "end": "217840"
  },
  {
    "text": "really followed the same evolution path and it's part of the problem is that it's really often deeply coupled with application logic which I'm going to",
    "start": "217840",
    "end": "224480"
  },
  {
    "text": "address in a moment um it tends to like live inside business logic it's not outside of it like networking or storage",
    "start": "224480",
    "end": "230879"
  },
  {
    "text": "right these are just things we need to do the business authorization is much more of a business level problem so it",
    "start": "230879",
    "end": "236080"
  },
  {
    "text": "makes it harder to extract it makes it harder to standardize it makes it hard to rationalize about especially like our like weird developer brains we don't",
    "start": "236080",
    "end": "241920"
  },
  {
    "text": "often times think about the business and uh second authorization requirements tend to be domain specific like",
    "start": "241920",
    "end": "248799"
  },
  {
    "text": "financial services tend to have different controls than a SAS product or different controls than like Uber for",
    "start": "248799",
    "end": "254720"
  },
  {
    "text": "dogs right there's no single model that works for everyone and and that's rough",
    "start": "254720",
    "end": "260079"
  },
  {
    "text": "uh third modern applications have like incredibly complex relationship needs and like objects and resource",
    "start": "260079",
    "end": "265360"
  },
  {
    "text": "constraints and stuff like this you think about like I don't know Google Drive permissions or Slack permissions right it actually gets really really",
    "start": "265360",
    "end": "271840"
  },
  {
    "text": "tangled up really fast and these aren't simple matrices of users and actions right you think oh like user A can",
    "start": "271840",
    "end": "278160"
  },
  {
    "text": "access document B and has CRUD access on it like that doesn't exist anymore it hasn't existed since the '90s right it's",
    "start": "278160",
    "end": "284320"
  },
  {
    "text": "it's much more complex than that there's no one-izefits-all solution it doesn't exist a lot of people will try to tell",
    "start": "284320",
    "end": "290160"
  },
  {
    "text": "you it exists those people are trying to sell you something i'm trying to sell you something that's beside the point",
    "start": "290160",
    "end": "296000"
  },
  {
    "text": "the reality is there is no one you know fits all solution it doesn't exist so as a result authorization as I said remains",
    "start": "296000",
    "end": "302240"
  },
  {
    "text": "in this weird space between infrastructure and application and business it's too complex to be standardized too common to be solved",
    "start": "302240",
    "end": "309280"
  },
  {
    "text": "aresh every time right in principle at least so this complexity has real costs",
    "start": "309280",
    "end": "317800"
  },
  {
    "text": "uh it can't just be ignored it actually costs money which is the issue right",
    "start": "317800",
    "end": "323280"
  },
  {
    "text": "developers constantly context switch between implementing features enforcing permissions you can look like controller",
    "start": "323280",
    "end": "328479"
  },
  {
    "text": "code business logic intertwined with authorization checks and this tangled rat's nest of if then else statements",
    "start": "328479",
    "end": "334960"
  },
  {
    "text": "it's freaking disgusting and it's super hard to maintain especially you've got like multiple mobile apps and like",
    "start": "334960",
    "end": "340000"
  },
  {
    "text": "multiple this multiple that and deploying that it sucks these scattered implementations they create security gaps it's hard to verify permissions are",
    "start": "340000",
    "end": "347120"
  },
  {
    "text": "being enforced consistently uh when they're spread throughout the codebase it slows velocity no one wants a slow",
    "start": "347120",
    "end": "352240"
  },
  {
    "text": "velocity we got to go fast we got to break things except when the things break and then then what",
    "start": "352240",
    "end": "357960"
  },
  {
    "text": "right so if making changes to these permission models requires extensive",
    "start": "357960",
    "end": "363039"
  },
  {
    "text": "testing oftentimes like regression testing because it's difficult to understand the full impact of these changes and it creates this massive",
    "start": "363039",
    "end": "369360"
  },
  {
    "text": "friction especially for onboarding new team members right are you a new team member waiting into this codebase for",
    "start": "369360",
    "end": "374479"
  },
  {
    "text": "the first time and you're spending the first three months you're there just trying to figure out permission structures before you actually touch any features that sucks right so it's not a",
    "start": "374479",
    "end": "382800"
  },
  {
    "text": "security problem it's not an infrastructure problem it's it's a developer experience problem and poor developer experience makes everybody",
    "start": "382800",
    "end": "389440"
  },
  {
    "text": "feel bad but what if we approach this differently right as like a workflow issue um what if authorization could be",
    "start": "389440",
    "end": "395680"
  },
  {
    "text": "a creative tool instead of a constraint yeah developer experience is fundamentally about enabling flow right",
    "start": "395680",
    "end": "402080"
  },
  {
    "text": "that flow state that we all love that state where you're fully immersed in solving the problem right super super",
    "start": "402080",
    "end": "407680"
  },
  {
    "text": "good authorization tends to break that flow but it doesn't have to okay um it",
    "start": "407680",
    "end": "413120"
  },
  {
    "text": "can be declarative rather than imperative that's really important it can live in well-defined places instead",
    "start": "413120",
    "end": "418639"
  },
  {
    "text": "of just scattershot across your application's codebase and with the right abstractions it becomes intuitive",
    "start": "418639",
    "end": "425280"
  },
  {
    "text": "it becomes maintainable that's the idea and so the the key insight really if you if you take nothing else away from this",
    "start": "425280",
    "end": "431840"
  },
  {
    "text": "talk and I'm going to give it to you right now is that you got to focus on the workflow first right focus on",
    "start": "431840",
    "end": "438800"
  },
  {
    "text": "solving that how developers interact with authorization during development is a big big big element and we can create",
    "start": "438800",
    "end": "446240"
  },
  {
    "text": "better security outcomes better developer experiences and that's what we're going to explore next so when we",
    "start": "446240",
    "end": "451360"
  },
  {
    "text": "architect uh let's go ahead and say cloudnative applications because look where we are right we typically give uh",
    "start": "451360",
    "end": "457360"
  },
  {
    "text": "authentication the architectural attention that it deserves right authentications usernames passwords passphrases identities oh yeah we get",
    "start": "457360",
    "end": "464400"
  },
  {
    "text": "that we get putting in a password we get putting in a security token and that has a big architecture around it right but",
    "start": "464400",
    "end": "471199"
  },
  {
    "text": "authorization often degrades into these scattered if then else statements like I said earlier and and separating out business logic from database access and",
    "start": "471199",
    "end": "477680"
  },
  {
    "text": "so on and so forth it's important to make these clear boundaries right we separate business logic from database",
    "start": "477680",
    "end": "484160"
  },
  {
    "text": "sources uh database access rather we create clear boundaries between business logic and permission logic and this",
    "start": "484160",
    "end": "490000"
  },
  {
    "text": "means authorization becomes a service right a service rather than just a bunch",
    "start": "490000",
    "end": "495440"
  },
  {
    "text": "of lines of code it could have its own APIs its own contracts its own testing",
    "start": "495440",
    "end": "500960"
  },
  {
    "text": "strategy its own development life cycle if we wanted to and these are all sorts of things",
    "start": "500960",
    "end": "507360"
  },
  {
    "text": "we're comfortable with and familiar with as developers these are things that allow us to have flow right um Netflix",
    "start": "507360",
    "end": "514800"
  },
  {
    "text": "actually famously took this approach on really really early uh with their microservices ecosystem and they found",
    "start": "514800",
    "end": "520320"
  },
  {
    "text": "that centralizing authorization improved security and actually accelerated feature development they have some",
    "start": "520320",
    "end": "525680"
  },
  {
    "text": "really good white papers on this that you should go read uh when you have a moment if you don't believe me um their",
    "start": "525680",
    "end": "532480"
  },
  {
    "text": "whole thing was focusing on core business logic without getting like bogged down in permission checks it's a really good paper so definitely go read",
    "start": "532480",
    "end": "537600"
  },
  {
    "text": "it up and so there's a really crucial mindset shift here right uh we frame",
    "start": "537600",
    "end": "543440"
  },
  {
    "text": "authorization as a constraint what can't users do and this negative framing pushes authorization to the realm of",
    "start": "543440",
    "end": "549839"
  },
  {
    "text": "security restrictions and the better question really is how do we enable the right access that's the right question",
    "start": "549839",
    "end": "556959"
  },
  {
    "text": "we should be asking right it's a positive framing it turns permissions into a product feature whoa whoa right",
    "start": "556959",
    "end": "564399"
  },
  {
    "text": "when we make this shift permissions become part of product discussions they're not just relegated to security",
    "start": "564399",
    "end": "569440"
  },
  {
    "text": "reviews and stuff you don't want to touch they shape user experience through progressive disclosure of functionality",
    "start": "569440",
    "end": "574560"
  },
  {
    "text": "based on you know uh context and constructs look at how Slack approaches",
    "start": "574560",
    "end": "580800"
  },
  {
    "text": "workspace permissions for example right they're not just security controls they're collaborative features that",
    "start": "580800",
    "end": "585839"
  },
  {
    "text": "enhance how teams work together that's powerful that's the difference between authorization as a constraint and",
    "start": "585839",
    "end": "592480"
  },
  {
    "text": "authorization as a product capability right so to be clear about what we're",
    "start": "592480",
    "end": "597519"
  },
  {
    "text": "trying to avoid we're trying to avoid authorization that's added as an afterthought we're trying to avoid context switching that kills that that",
    "start": "597519",
    "end": "603519"
  },
  {
    "text": "developer flow uh authorization logic that's tightly coupled with business logic becomes resistant to change so we",
    "start": "603519",
    "end": "610160"
  },
  {
    "text": "have to you know we have to deal with that permission models need to evolve over time they always do and you end up",
    "start": "610160",
    "end": "615920"
  },
  {
    "text": "refactoring core functionality and I actually did a talk in Denver a couple weeks ago at an OASP talk about how",
    "start": "615920",
    "end": "621040"
  },
  {
    "text": "Facebook refactored a UI model and destroyed their permissions and made 15 million private posts public one time",
    "start": "621040",
    "end": "627600"
  },
  {
    "text": "that was a fun white paper too avoid that right um the idea is that",
    "start": "627600",
    "end": "634600"
  },
  {
    "text": "authorization shouldn't be a secondary thought you should treat it as a first class architectural concern so let's",
    "start": "634600",
    "end": "640079"
  },
  {
    "text": "talk about core design principles for workflow first authorization the first",
    "start": "640079",
    "end": "646000"
  },
  {
    "text": "is domain driven authorization this means modeling permissions around business domains not technical constructs right and we think about the",
    "start": "646000",
    "end": "651519"
  },
  {
    "text": "business i know as developers we don't want to but we got it don't think in terms of CRUD operations on database",
    "start": "651519",
    "end": "657040"
  },
  {
    "text": "tables i know that feels familiar to you we're done with that we have moved past that now okay think in the language of",
    "start": "657040",
    "end": "663279"
  },
  {
    "text": "your product permission should speak the language of that product not the codebase necessarily right this creates",
    "start": "663279",
    "end": "668720"
  },
  {
    "text": "a ubiquitous language between product and development and security teams and everyone understands what editor means",
    "start": "668720",
    "end": "674640"
  },
  {
    "text": "for example and a document system but like update documents is a technical implementation detail so which one of",
    "start": "674640",
    "end": "680959"
  },
  {
    "text": "those two should you actually use right um a document collaboration system might model permissions like editor reviewer",
    "start": "680959",
    "end": "687040"
  },
  {
    "text": "and viewer rather than read write and delete because that's what the product actually expects um these map directly",
    "start": "687040",
    "end": "694160"
  },
  {
    "text": "how users think and ultimately how the the the business and the product thinks about itself and this is an alignment",
    "start": "694160",
    "end": "699600"
  },
  {
    "text": "when you start to feel this way um it makes authorization more intuitive for you the developer for other people in",
    "start": "699600",
    "end": "705839"
  },
  {
    "text": "your organization and it makes the product more maintainable as it evolves which is really really nice the next",
    "start": "705839",
    "end": "712000"
  },
  {
    "text": "principle is using declarative declarative policies rather than imperative checks okay uh traditional",
    "start": "712000",
    "end": "718320"
  },
  {
    "text": "code bases are filled with imperative permission checks they're scattered all the way like if user has permission then",
    "start": "718320",
    "end": "723839"
  },
  {
    "text": "allow this to happen right um these checks are they're hard to audit they're hard to test uh they're hard to maintain",
    "start": "723839",
    "end": "731200"
  },
  {
    "text": "notably uh declarative policies in turn describe intent what should be allowed",
    "start": "731200",
    "end": "736959"
  },
  {
    "text": "rather than how to check permissions right they become human readable artifacts that can be version controlled",
    "start": "736959",
    "end": "743680"
  },
  {
    "text": "they can be reviewed uh they can be tested independently of your application code this is critical your policy should",
    "start": "743680",
    "end": "750160"
  },
  {
    "text": "clearly express who can do what who can do what based on business rules it should live outside of your",
    "start": "750160",
    "end": "757360"
  },
  {
    "text": "application code it could be tested independently to be updated without changing your application you don't want",
    "start": "757360",
    "end": "762959"
  },
  {
    "text": "to actually have to reroll your app and redeploy your app when permission models change this is an antiattern remember",
    "start": "762959",
    "end": "769360"
  },
  {
    "text": "that declarative approach scales with complexity as your permission model grows more sophisticated the policies",
    "start": "769360",
    "end": "775839"
  },
  {
    "text": "remain readable they maintainable while imperative checks would create a tangled mess chopped that earlier third",
    "start": "775839",
    "end": "781200"
  },
  {
    "text": "principle use external decision points for authorization externalize your authorization super important decouple",
    "start": "781200",
    "end": "788079"
  },
  {
    "text": "authorization from application logic and I've been hinting at this now I'm saying it out loud",
    "start": "788079",
    "end": "793880"
  },
  {
    "text": "right instead of embedding permission checks in your code and your application asks an external service can user do",
    "start": "793880",
    "end": "800399"
  },
  {
    "text": "thing this architectural pattern enables consistent enforcement across all of",
    "start": "800399",
    "end": "805440"
  },
  {
    "text": "your software that's what it does that's the magic of it right that's what's so",
    "start": "805440",
    "end": "811279"
  },
  {
    "text": "cool about it all your microservices call the same authorization service it's uniform it's easy to reason about Okay",
    "start": "811279",
    "end": "819519"
  },
  {
    "text": "your application grows and authorization decisions then don't become a bottleneck that have to be updated okay you can",
    "start": "819519",
    "end": "825360"
  },
  {
    "text": "verify your permission model without spinning up your entire stack that's pretty sweet right this doesn't mean",
    "start": "825360",
    "end": "830880"
  },
  {
    "text": "authorization becomes a black box it shouldn't be a black box right it should be treated just the same way the rest of",
    "start": "830880",
    "end": "836399"
  },
  {
    "text": "your code and the rest of everything you work with works it's not a black box it's a service okay it's a service it's",
    "start": "836399",
    "end": "843519"
  },
  {
    "text": "probably got an API and we're developers we love APIs right fourth principle is",
    "start": "843519",
    "end": "848880"
  },
  {
    "text": "about making authorization context aware aware simple rule-based access control",
    "start": "848880",
    "end": "854079"
  },
  {
    "text": "or arbback uh isn't enough for modern applications it was enough when it the pol you know our backb 96 right that's",
    "start": "854079",
    "end": "860800"
  },
  {
    "text": "that's when it was ratified uh we've done a lot since 1996 so we need to",
    "start": "860800",
    "end": "865839"
  },
  {
    "text": "consider attributes like time like uh location resource properties relationship contexts all these sorts of",
    "start": "865839",
    "end": "871040"
  },
  {
    "text": "things so contextware authorization adapts to this situation a healthare",
    "start": "871040",
    "end": "876240"
  },
  {
    "text": "system might allow access to patient records during business hours but require additional approval after hours",
    "start": "876240",
    "end": "882000"
  },
  {
    "text": "something as simple as that implemented as code especially if you have a lot of exceptions especially you have a lot of doctors and a lot of sites and a lot of",
    "start": "882000",
    "end": "888519"
  },
  {
    "text": "patients right a collaboration tool might check document status before allowing certain adjectics uh actions so",
    "start": "888519",
    "end": "895279"
  },
  {
    "text": "the idea is TF might like fine grain access control uh so moving from arbback to something like dynamic arbback or",
    "start": "895279",
    "end": "901440"
  },
  {
    "text": "even Aback attribute-based access control which I can talk about for hours afterwards if you're",
    "start": "901440",
    "end": "906519"
  },
  {
    "text": "interested um let's talk about Aback for a little",
    "start": "906519",
    "end": "911680"
  },
  {
    "text": "bit actually you know what let's do it let's talk about some CNCF projects a little bit later on that do some Aback i",
    "start": "911680",
    "end": "917120"
  },
  {
    "text": "think that's going to be good so let's look at how these principles integrate throughout sort of this development life cycle right so during requirements",
    "start": "917120",
    "end": "923519"
  },
  {
    "text": "gathering um you need to look at your permission models and those permission models should be defined alongside your",
    "start": "923519",
    "end": "929600"
  },
  {
    "text": "features remember we're not talking about tacking on permissions at the end anymore your these permissions and this authorization now becomes part of your",
    "start": "929600",
    "end": "937040"
  },
  {
    "text": "product thinking what access patterns does this feature need uh how do permissions integrate with those",
    "start": "937040",
    "end": "942800"
  },
  {
    "text": "existing models right and we're talking about API design uh authorization requirements should be explicitly",
    "start": "942800",
    "end": "948800"
  },
  {
    "text": "documented in the API specs themselves right these aren't separate things these are integrated in who can call the",
    "start": "948800",
    "end": "955199"
  },
  {
    "text": "endpoint what context is required for that call to be successful or not right during implementation those clear",
    "start": "955199",
    "end": "961120"
  },
  {
    "text": "interfaces for authorization checks make the integration consistent and this helps with that",
    "start": "961120",
    "end": "966480"
  },
  {
    "text": "developer workflow that we alluded to earlier developers should never have to invent new ways to check permissions if",
    "start": "966480",
    "end": "972480"
  },
  {
    "text": "you're inventing new ways to check permissions something has gone wrong you have gone off the rails okay testing you need dedicated",
    "start": "972480",
    "end": "980560"
  },
  {
    "text": "testing for your authorization just like you have dedicated testing for your tests we're all highle super good test",
    "start": "980560",
    "end": "985680"
  },
  {
    "text": "driven developers here uh we have 100% code coverage at all times because that's how we roll here in this room i",
    "start": "985680",
    "end": "991839"
  },
  {
    "text": "believe it i believe in you your policies and your authorization should not be any different",
    "start": "991839",
    "end": "998079"
  },
  {
    "text": "um and you know in operations where I spent a lot of time monitoring observability for authorization",
    "start": "998079",
    "end": "1003839"
  },
  {
    "text": "decisions helps you to identify problems right so actually integrating policy checks integrating authorization checks",
    "start": "1003839",
    "end": "1010240"
  },
  {
    "text": "into your logs into your audit trails right it's not just about did library fail or wasn't I I not be able to",
    "start": "1010240",
    "end": "1016399"
  },
  {
    "text": "connect to this database like what permission checks are being made and how are they affecting the behavior of the system right monitor that it's it's not",
    "start": "1016399",
    "end": "1024558"
  },
  {
    "text": "an afterthought right it's woven in in every stage And the payoff here from this approach is substantial it's substantial okay we",
    "start": "1024559",
    "end": "1031360"
  },
  {
    "text": "talked about how this costs money this is how it stops costing you as much money maybe even starts making you money",
    "start": "1031360",
    "end": "1036880"
  },
  {
    "text": "it's developer experience uh reduced context switching uh the permission logic lives in well- definfined spaces",
    "start": "1036880",
    "end": "1042959"
  },
  {
    "text": "it's easier to reason about you have clear contracts between components that makes integration simpler services know exactly how to request authorization",
    "start": "1042959",
    "end": "1049360"
  },
  {
    "text": "decisions so the actual code to develop those services is more straightforward self-documenting permission models heck",
    "start": "1049360",
    "end": "1055919"
  },
  {
    "text": "why not right uh team members can now grasp those permission models instead of",
    "start": "1055919",
    "end": "1060960"
  },
  {
    "text": "having to spend weeks mired in the swamp right this leads to faster onboarding",
    "start": "1060960",
    "end": "1066080"
  },
  {
    "text": "this leads to faster feature development these benefits are not theoretical to be clear okay i'm not making this up",
    "start": "1066080",
    "end": "1072400"
  },
  {
    "text": "they're practical improvements to everyday development work that we see in our customer phase okay they're",
    "start": "1072400",
    "end": "1078720"
  },
  {
    "text": "achievable with these tools and these patterns so let's talk a little bit about the authorization ecosystem",
    "start": "1078720",
    "end": "1084280"
  },
  {
    "text": "um let's look at some of the tools right over the past few years there's been a",
    "start": "1084280",
    "end": "1090000"
  },
  {
    "text": "increasingly rich ecosystem of tools that's become available uh in the open source world i'm only going to talk",
    "start": "1090000",
    "end": "1095280"
  },
  {
    "text": "about open source stuff because I'm a hardcore open source nerd um many have found homes actually in the CNCF which",
    "start": "1095280",
    "end": "1101039"
  },
  {
    "text": "is really super uh so that is excellent so we're going to talk about a couple of those and this has helped drive",
    "start": "1101039",
    "end": "1106320"
  },
  {
    "text": "standardization it's helped to drive adoption uh they take different approaches to authorization challenges",
    "start": "1106320",
    "end": "1111440"
  },
  {
    "text": "just remember I said at the outset that there's no such thing as a one-sizefits-all solution so different approaches different ways of thinking",
    "start": "1111440",
    "end": "1116960"
  },
  {
    "text": "about it right some prioritize scalability some prioritize relationships and so on and so forth",
    "start": "1116960",
    "end": "1122320"
  },
  {
    "text": "they all share a common goal of making authorization more manageable okay um let's see how this fits in first I want",
    "start": "1122320",
    "end": "1128480"
  },
  {
    "text": "to talk about is OPA OPA or open policy agent which you may have encountered uh if you're on the sponsor floor over the",
    "start": "1128480",
    "end": "1134480"
  },
  {
    "text": "past few days uh a number of people here talking about hey let's do OPA right it's a graduated CNCF project it's seen",
    "start": "1134480",
    "end": "1140799"
  },
  {
    "text": "wide adoption some adoption not as much I imagine as we'd like across the industry",
    "start": "1140799",
    "end": "1147919"
  },
  {
    "text": "uh it's a general purpose policy engine it's a general purpose policy engine right um it can enforce policies for",
    "start": "1147919",
    "end": "1154320"
  },
  {
    "text": "systems uh I don't know Kubernetes admission you know admission control microser API authorization and at its",
    "start": "1154320",
    "end": "1160160"
  },
  {
    "text": "core something called RIO rio is a purpose-built policy language for expressing rules it's uh it's a real",
    "start": "1160160",
    "end": "1167039"
  },
  {
    "text": "language right so you're like programming your policies it's quite powerful it's super interesting um the",
    "start": "1167039",
    "end": "1173200"
  },
  {
    "text": "architecture completely decouples policy from code we talked about externalization right so it aligns with that principle that we talked about",
    "start": "1173200",
    "end": "1179440"
  },
  {
    "text": "earlier um it is used at some pretty big companies i alluded to Netflix earlier uh last I checked Netflix is based on",
    "start": "1179440",
    "end": "1186000"
  },
  {
    "text": "OPA although I'm sure that my head of product will correct me on that after this talk if I am wrong",
    "start": "1186000",
    "end": "1192360"
  },
  {
    "text": "um it's really good at what it does if it is what you need but like a lot of",
    "start": "1192360",
    "end": "1198960"
  },
  {
    "text": "general purpose tools it's not particularly excellent at any one thing and it can be difficult to struggle a",
    "start": "1198960",
    "end": "1204720"
  },
  {
    "text": "little bit with Rio which is probably why OPA hasn't seen the level of adoption uh maybe that the project in",
    "start": "1204720",
    "end": "1210320"
  },
  {
    "text": "some ways deserves so keep that in mind also we have Open FGA uh Open FGA is a",
    "start": "1210320",
    "end": "1216960"
  },
  {
    "text": "CNCF sandbox project which is really cool it's focused on relationship based authorizations at at fairly large scales",
    "start": "1216960",
    "end": "1223840"
  },
  {
    "text": "open FGA is based on Google's Zanzibar paper uh super super interesting computer science stuff if you're into",
    "start": "1223840",
    "end": "1229440"
  },
  {
    "text": "that uh which describes uh the system that powers their permissions like for Google Drive and like YouTube and all of",
    "start": "1229440",
    "end": "1235280"
  },
  {
    "text": "their services right the sort of planet scale relationshipbased architecture right um",
    "start": "1235280",
    "end": "1242240"
  },
  {
    "text": "Offzero created an open source implementation that's part of the CNCF uh it's specifically optimized for like",
    "start": "1242240",
    "end": "1248159"
  },
  {
    "text": "doing relatively high performance uh at scale but again it's all about modeling",
    "start": "1248159",
    "end": "1255799"
  },
  {
    "text": "complex arbitrary relationships between objects and if that sounds like a little",
    "start": "1255799",
    "end": "1262080"
  },
  {
    "text": "bit abstract it's because it is you know it it's for example not very good at arbback right it's it's only marginally",
    "start": "1262080",
    "end": "1268960"
  },
  {
    "text": "good at AVAC so if your problem is your Google this is probably what you want if",
    "start": "1268960",
    "end": "1274559"
  },
  {
    "text": "your problem is we're anything other than Google it might not be what you need but",
    "start": "1274559",
    "end": "1280240"
  },
  {
    "text": "it's really really interesting and I highly recommend taking a look at it um I do want to mention and we're going to",
    "start": "1280240",
    "end": "1285520"
  },
  {
    "text": "step away from the CNCF here for a moment and talk about some other open standards which are important is the open uh ID foundation uh the open idea",
    "start": "1285520",
    "end": "1292960"
  },
  {
    "text": "uh foundation has established the offsen working group to uh standardize authorization APIs and interfaces",
    "start": "1292960",
    "end": "1299600"
  },
  {
    "text": "effectively right so taking this whole smorgesborg of possibilities that exist out there i'm going like hey like can we",
    "start": "1299600",
    "end": "1305919"
  },
  {
    "text": "can we get together as an industry and come to some conclusions about how we want to work together and this group's",
    "start": "1305919",
    "end": "1311120"
  },
  {
    "text": "building on the success of oath 2 on the success of open ID connect notably if you've ever encountered these things",
    "start": "1311120",
    "end": "1316559"
  },
  {
    "text": "before which has solved similar standard and challenges for authentication uh the focus is on interoperability",
    "start": "1316559",
    "end": "1322960"
  },
  {
    "text": "between authorization systems creating sort of common interfaces that different implementations can support this work is",
    "start": "1322960",
    "end": "1329880"
  },
  {
    "text": "around creating an open dialogue right uh for authorization systems across platforms across vendors and it's super",
    "start": "1329880",
    "end": "1336799"
  },
  {
    "text": "important work it's slowgoing because how do you get enemies to talk to each other it takes a little while enemies",
    "start": "1336799",
    "end": "1342840"
  },
  {
    "text": "competitors right to talk to each other that's how it is um it's less about specific",
    "start": "1342840",
    "end": "1348960"
  },
  {
    "text": "implementations to be clear although they do have reference models and more about ensuring that different systems can work together coherently and Ozen",
    "start": "1348960",
    "end": "1356240"
  },
  {
    "text": "which you see up here Ozen represents an important sort of effort for the long-term evolution of the authorization",
    "start": "1356240",
    "end": "1361280"
  },
  {
    "text": "ecosystem so if this is a world you're getting into this is a working group that you need to get familiar with right",
    "start": "1361280",
    "end": "1367200"
  },
  {
    "text": "um Serbos takes a different approach uh Serbos is involved in that open ID uh",
    "start": "1367200",
    "end": "1373039"
  },
  {
    "text": "working group is involved in Ozen uses human readable YAML policies that product teams can understand review uh",
    "start": "1373039",
    "end": "1380000"
  },
  {
    "text": "these policies sort of clearly express who can do what to which resources under what conditions and the thing I want to point out here is that I think it",
    "start": "1380000",
    "end": "1386000"
  },
  {
    "text": "actually has pretty good developer experience which is maybe a little different from the other model are the other tools we mentioned earlier um you",
    "start": "1386000",
    "end": "1393200"
  },
  {
    "text": "know playground for testing policies as an in-built testing framework I think which is pretty good um simulating",
    "start": "1393200",
    "end": "1399280"
  },
  {
    "text": "requests examining traces it it feels more like a more like a developer tool than some of the other ones which feel",
    "start": "1399280",
    "end": "1404880"
  },
  {
    "text": "more like a bit of an obscure endpoint or service uh if you know if your priority is",
    "start": "1404880",
    "end": "1410880"
  },
  {
    "text": "making authorization accessible I think Serbos is probably worth taking a look so how do you choose among these options",
    "start": "1410880",
    "end": "1417120"
  },
  {
    "text": "i just gave you a bunch right uh there's no oneizefits-all as I said earlier your",
    "start": "1417120",
    "end": "1422799"
  },
  {
    "text": "choice should really depend on your architecture it should depend on your need okay uh consider OPA if you need",
    "start": "1422799",
    "end": "1429440"
  },
  {
    "text": "broad policy enforcement beyond just sort of authorization so you know we might choose OPA for example if you need",
    "start": "1429440",
    "end": "1435120"
  },
  {
    "text": "configuration validation or Kubernetes admission control or uh something like",
    "start": "1435120",
    "end": "1440960"
  },
  {
    "text": "that right there a broad service okay uh you can look at open FGA if you have",
    "start": "1440960",
    "end": "1446400"
  },
  {
    "text": "complex relationshipbased permissions at planetary scales uh particularly for",
    "start": "1446400",
    "end": "1452799"
  },
  {
    "text": "those user-to-user sharing scenarios um you should look to seros if you like those developer workflow integrations",
    "start": "1452799",
    "end": "1458000"
  },
  {
    "text": "and and a certain level of simplicity belying that complexity is is what you're interested in um many teams",
    "start": "1458000",
    "end": "1464000"
  },
  {
    "text": "actually end up using multiple tools this isn't necessarily weird you probably have multiple tools to do more or less the same thing in your",
    "start": "1464000",
    "end": "1469760"
  },
  {
    "text": "environment pick the one that makes sense and if two makes sense pick two it's okay right the important thing",
    "start": "1469760",
    "end": "1476400"
  },
  {
    "text": "again is is is to settle on those principles we talked about earlier so let's see how to implement these tools a",
    "start": "1476400",
    "end": "1482080"
  },
  {
    "text": "little bit more effectively in the five minutes we've got left good luck Daniel now that we",
    "start": "1482080",
    "end": "1487679"
  },
  {
    "text": "understand the principles and the logic Let's talk about some overviews these",
    "start": "1487679",
    "end": "1493520"
  },
  {
    "text": "are battle tested approaches architectural patterns development patterns testing patterns each",
    "start": "1493520",
    "end": "1500360"
  },
  {
    "text": "pattern addresses a different aspect of the authorization challenge so first we have an architectural pattern so policy",
    "start": "1500360",
    "end": "1506960"
  },
  {
    "text": "as a service this pattern encapsulates all of the authorization logic in a dedicated service that your applications",
    "start": "1506960",
    "end": "1513760"
  },
  {
    "text": "can call to make authorization requests your applications can make explicit authorization requests can user X",
    "start": "1513760",
    "end": "1519039"
  },
  {
    "text": "perform action Y on resource zed or Z this policy service returns a simple yes",
    "start": "1519039",
    "end": "1525120"
  },
  {
    "text": "or no right you just get that yes or no back done right it enables consistent enforcement across services and the same",
    "start": "1525120",
    "end": "1532640"
  },
  {
    "text": "policies apply everywhere uh simplifies policy updates when the rules change you",
    "start": "1532640",
    "end": "1538000"
  },
  {
    "text": "update the policy service without touching the application right um you want to have like maybe a REST API or",
    "start": "1538000",
    "end": "1543840"
  },
  {
    "text": "something you make gRPC requests against this is what we're looking at here when we're thinking about policy as a service",
    "start": "1543840",
    "end": "1549279"
  },
  {
    "text": "this is what we're aiming at right a pattern works really really well for example in microser architectures or",
    "start": "1549279",
    "end": "1556640"
  },
  {
    "text": "anywhere where centralized governance is important um and and policy changes end up being frequent",
    "start": "1556640",
    "end": "1563320"
  },
  {
    "text": "okay we also sidecar uh because we're at CNZF everybody likes Kubernetes right",
    "start": "1563320",
    "end": "1569039"
  },
  {
    "text": "this takes a different approach so instead of calling like a a centralized service that exists somewhere in your",
    "start": "1569039",
    "end": "1574080"
  },
  {
    "text": "whatever um each application instance has its own authorization sort of engine that's applied along with it or it's",
    "start": "1574080",
    "end": "1580240"
  },
  {
    "text": "deployed along with it right uh typically as like a container sidecar or maybe it's part of a damon set I mean",
    "start": "1580240",
    "end": "1585600"
  },
  {
    "text": "you do you right uh this gives you very low latency for those authorization checks uh since there's no network hop",
    "start": "1585600",
    "end": "1592159"
  },
  {
    "text": "or minimal network hop uh depending on how you're doing things sidecar runs in the same pod it makes those local calls really fast and especially if you're",
    "start": "1592159",
    "end": "1598480"
  },
  {
    "text": "putting authorization in the critical path and you should be putting in your critical path this is a really good model for dealing with network latency",
    "start": "1598480",
    "end": "1605760"
  },
  {
    "text": "for dealing with environments where maybe you don't necessarily have the time or the luxury to wait for a round",
    "start": "1605760",
    "end": "1611279"
  },
  {
    "text": "trip right uh obviously it shines in Kubernetes environments uh you can implement it you know with Envoy if you",
    "start": "1611279",
    "end": "1617200"
  },
  {
    "text": "felt like it it works super nice right the idea is to eliminate those network dependencies instead of having a central service whilst still getting the",
    "start": "1617200",
    "end": "1624559"
  },
  {
    "text": "advantages of having an API or an endpoint that you can just call programmatically uh you can also look at multi-layer",
    "start": "1624559",
    "end": "1631000"
  },
  {
    "text": "authorization right so patterns that recognize different types of authorization belonging in different",
    "start": "1631000",
    "end": "1637200"
  },
  {
    "text": "layers of your stack uh your API gateway your ingress layer was maybe we're going",
    "start": "1637200",
    "end": "1642240"
  },
  {
    "text": "to have some coarse grain checks uh where you might be even just validating the authentication to a certain degree",
    "start": "1642240",
    "end": "1647760"
  },
  {
    "text": "right you also do API check verification uh basic ro checks could occur at this layer for example and then you can move",
    "start": "1647760",
    "end": "1654159"
  },
  {
    "text": "to the service layer right so where you can enforce the business logic authorization And you can use this to perform uh user",
    "start": "1654159",
    "end": "1660720"
  },
  {
    "text": "checks right can user perform this action at their current level of access and these current conditions time of day etc etc um and then you get into the",
    "start": "1660720",
    "end": "1668240"
  },
  {
    "text": "data layer and the data layer you might be implementing like rowle checks authorization checks object level",
    "start": "1668240",
    "end": "1673679"
  },
  {
    "text": "authorization checks right security for that really fine grained access control at a fundamental primitive level uh each",
    "start": "1673679",
    "end": "1681840"
  },
  {
    "text": "layer handles what it's best at and this creates among other things and I know we want to talk about security but I'm",
    "start": "1681840",
    "end": "1687200"
  },
  {
    "text": "going to talk about security for a moment because I really like opsec it it actually helps creating this defense in depth model if you've ever read about",
    "start": "1687200",
    "end": "1693039"
  },
  {
    "text": "that or heard about that um so this is again what you want to kind of be aiming at but I'm getting off track so",
    "start": "1693039",
    "end": "1698320"
  },
  {
    "text": "practical implementation of this would sort of integrate all of these and I realize I'm going super fast but h don't",
    "start": "1698320",
    "end": "1703679"
  },
  {
    "text": "have a lot of time so moving to development patterns policydriven design flips the traditional implementation",
    "start": "1703679",
    "end": "1709120"
  },
  {
    "text": "sequence right Instead of writing code first and adding authorization later you start with authorization requirements",
    "start": "1709120",
    "end": "1715200"
  },
  {
    "text": "this is the O Z equivalent of test driven development right so write your tests",
    "start": "1715200",
    "end": "1722240"
  },
  {
    "text": "test them and if your policies are spitting back to you what you expect them to then write the code that uses",
    "start": "1722240",
    "end": "1727559"
  },
  {
    "text": "them right this works really really well because it means you know that your authorization is going to do what you",
    "start": "1727559",
    "end": "1734000"
  },
  {
    "text": "expect and you can bundle that into your feature set um you can even use these policies to like drive API design if",
    "start": "1734000",
    "end": "1741200"
  },
  {
    "text": "your policy says managers can approve dispense expenses for example then your API needs endpoints that expose that",
    "start": "1741200",
    "end": "1746640"
  },
  {
    "text": "capability appropriately right you can use this to drive your API design in an intelligent way um like shout out sir",
    "start": "1746640",
    "end": "1755440"
  },
  {
    "text": "boss we're really good at this okay you also have request context enrichment um this pattern addresses an important but",
    "start": "1755440",
    "end": "1761360"
  },
  {
    "text": "like really practical challenge which is that authorization decisions tend to need rich context right right you need a",
    "start": "1761360",
    "end": "1767120"
  },
  {
    "text": "lot of context to make a good authorization decision these include user attributes resource metadata environmental factors relationship",
    "start": "1767120",
    "end": "1773760"
  },
  {
    "text": "information right this is where our box starts to fall apart you need to be able to bundle all of that together and go",
    "start": "1773760",
    "end": "1779039"
  },
  {
    "text": "\"Hey we have got these complex distributed emergent systems with a ton of rich contextual information use that",
    "start": "1779039",
    "end": "1786000"
  },
  {
    "text": "contextual information to design good authorization policies implement that in a request middleware or in integrate",
    "start": "1786000",
    "end": "1792240"
  },
  {
    "text": "that in an interceptor somewhere right um this rich context makes your authorization rules a lot more powerful",
    "start": "1792240",
    "end": "1798880"
  },
  {
    "text": "a lot more flexible uh I'm running out of time so very very quickly i have so much I want",
    "start": "1798880",
    "end": "1804240"
  },
  {
    "text": "to say i have so much I want to share with you because this is such a huge thing to mine and I love it",
    "start": "1804240",
    "end": "1809720"
  },
  {
    "text": "okay policy testing you have to test everything you have to test your policies if your authorization solution",
    "start": "1809720",
    "end": "1816080"
  },
  {
    "text": "doesn't have tests built into it yeet you need something better than that all right you got to have the testing super",
    "start": "1816080",
    "end": "1822880"
  },
  {
    "text": "important test fixtures oh my god practical workflow integrations ide plugins ah",
    "start": "1822880",
    "end": "1828799"
  },
  {
    "text": "it's all so good",
    "start": "1828799",
    "end": "1832720"
  },
  {
    "text": "okay these transformations aren't just theoretical okay they're in",
    "start": "1835000",
    "end": "1840159"
  },
  {
    "text": "organizations around the world today i'm not talking out of my butt here about stuff that doesn't exist this is how we move from friction",
    "start": "1840159",
    "end": "1846720"
  },
  {
    "text": "to flow in the authorization process this is how authorization becomes part of your creative workflow rather than an obstacle developers spend more time",
    "start": "1846720",
    "end": "1854080"
  },
  {
    "text": "building features this way right less time wrestling with permissions that sounds good we shift from security as an",
    "start": "1854080",
    "end": "1860240"
  },
  {
    "text": "add-on to security by design defense and depth it becomes integrated into the architecture right from the beginning",
    "start": "1860240",
    "end": "1866240"
  },
  {
    "text": "it's inherent in how you build that's the goal we create a situation where we",
    "start": "1866240",
    "end": "1871679"
  },
  {
    "text": "can empower developers to make better security decisions we can allow developers to make better product",
    "start": "1871679",
    "end": "1878679"
  },
  {
    "text": "decisions that's huge teams understand the why in a way that they wouldn't have",
    "start": "1878679",
    "end": "1884600"
  },
  {
    "text": "before we create friction we eliminate friction to create flow we get that",
    "start": "1884600",
    "end": "1891120"
  },
  {
    "text": "security by design we get that empowering of the developers so where do you go from here where you go from here",
    "start": "1891120",
    "end": "1897679"
  },
  {
    "text": "is Discord and Slack and Docs because this is the start of your journey",
    "start": "1897679",
    "end": "1905799"
  },
  {
    "text": "thanks i appreciate y'all hanging out with me i'm a little over time uh I will",
    "start": "1909880",
    "end": "1915039"
  },
  {
    "text": "hang out over here if you have any questions otherwise safe travels be well everyone",
    "start": "1915039",
    "end": "1921440"
  }
]