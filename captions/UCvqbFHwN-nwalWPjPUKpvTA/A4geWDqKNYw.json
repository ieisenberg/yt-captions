[
  {
    "text": "all right it's 4:45 I think it's time to get started I'm Mike Denice I'm gonna",
    "start": "30",
    "end": "6420"
  },
  {
    "text": "give a talk about caller ID and kubernetes today a little bit more about",
    "start": "6420",
    "end": "11790"
  },
  {
    "text": "me I'm a software engineer working on gke the past four years",
    "start": "11790",
    "end": "16920"
  },
  {
    "text": "currently the TL of gke identity and I'm also active in the kubernetes special",
    "start": "16920",
    "end": "24480"
  },
  {
    "text": "interest group for authentication and authorization so the first topic I",
    "start": "24480",
    "end": "31380"
  },
  {
    "text": "wanted to touch on is user data it plays a crucial role in many amazing",
    "start": "31380",
    "end": "38940"
  },
  {
    "text": "applications that provide tremendous value value to customers however when a",
    "start": "38940",
    "end": "44760"
  },
  {
    "text": "user hands over data to a to a company",
    "start": "44760",
    "end": "50370"
  },
  {
    "text": "they do so with an expectation of privacy and expectations on how that",
    "start": "50370",
    "end": "56129"
  },
  {
    "text": "data will be accessed and as application developers it is our responsibility to",
    "start": "56129",
    "end": "63379"
  },
  {
    "text": "uphold those expectations which brings",
    "start": "63379",
    "end": "69060"
  },
  {
    "text": "us to the problem that I want to cover in this talk so how can we create an",
    "start": "69060",
    "end": "75330"
  },
  {
    "text": "environment that maintains a sufficiently high level of assurance on user data so what is sufficient here",
    "start": "75330",
    "end": "84920"
  },
  {
    "text": "what is assurance this is far too big to be turned into a feature request however",
    "start": "84920",
    "end": "93799"
  },
  {
    "text": "to better understand this problem I would like to go through a game of",
    "start": "93799",
    "end": "101759"
  },
  {
    "text": "telephone between services running on kubernetes will add some requirements",
    "start": "101759",
    "end": "107729"
  },
  {
    "text": "along the way in the spirit of better protecting user data and we'll see how",
    "start": "107729",
    "end": "113490"
  },
  {
    "text": "those requirements can be met with solutions built into and on top of",
    "start": "113490",
    "end": "119009"
  },
  {
    "text": "kubernetes but before we get into our game of telephone",
    "start": "119009",
    "end": "124469"
  },
  {
    "text": "I wanted to cover just a couple concepts that I'm going to use refer to",
    "start": "124469",
    "end": "130289"
  },
  {
    "text": "throughout the the first distinction that I want to make between coarse-grained",
    "start": "130289",
    "end": "135550"
  },
  {
    "text": "authorization and fine-grained authorization so coarse-grained authorization is a broad privilege",
    "start": "135550",
    "end": "141730"
  },
  {
    "text": "independent of the object targeted by the request so you can think of a",
    "start": "141730",
    "end": "147990"
  },
  {
    "text": "coarse-grained authorization as permission to call the get book RPC and",
    "start": "147990",
    "end": "154800"
  },
  {
    "text": "fine-grained authorization is narrow privilege specific to the object targeted by the request so fine-grained",
    "start": "154800",
    "end": "161500"
  },
  {
    "text": "authorization would be you can get book",
    "start": "161500",
    "end": "166410"
  },
  {
    "text": "Noah's Ark or if that was a book cool",
    "start": "166770",
    "end": "172060"
  },
  {
    "text": "the second distinction that I want to make is around credentials I want to I'm",
    "start": "172060",
    "end": "179500"
  },
  {
    "text": "going to talk about channel bound credentials which are bound to the channel that they received on TLS is an",
    "start": "179500",
    "end": "186310"
  },
  {
    "text": "example of a channel bound credential where it's bound where the channel is the TCP connection that the TLS session",
    "start": "186310",
    "end": "193840"
  },
  {
    "text": "is established on and then on the flip",
    "start": "193840",
    "end": "198910"
  },
  {
    "text": "side there are forwardable credentials which are credentials are not bound to the channel in which they arrived on so",
    "start": "198910",
    "end": "204550"
  },
  {
    "text": "an example of this is a bearer token you can send the Baird token down a TCP connection close that connection and",
    "start": "204550",
    "end": "211410"
  },
  {
    "text": "open another one send the Barrett up and down it again we call these forwardable",
    "start": "211410",
    "end": "216580"
  },
  {
    "text": "credentials because the person that you send it to can turn around and forward",
    "start": "216580",
    "end": "222130"
  },
  {
    "text": "it to another party if that other party accepts that same bearer token and the",
    "start": "222130",
    "end": "229000"
  },
  {
    "text": "last thing that I want to discuss before we hop into our game is direct",
    "start": "229000",
    "end": "234190"
  },
  {
    "text": "authentication versus delegated authentication so direct authentication happens when a server authenticates the",
    "start": "234190",
    "end": "244480"
  },
  {
    "text": "approximate or adjacent requester or the peer delegated authentication happens",
    "start": "244480",
    "end": "252930"
  },
  {
    "text": "when when a server authenticates a",
    "start": "252930",
    "end": "258870"
  },
  {
    "text": "requester and not by the direct direct requester but by the",
    "start": "258870",
    "end": "264210"
  },
  {
    "text": "of the request so an example of a delegated authentication would occur if a back-end authenticates a end-user that",
    "start": "264210",
    "end": "276930"
  },
  {
    "text": "made a request that traversed through a friend so that's a delegated",
    "start": "276930",
    "end": "282539"
  },
  {
    "text": "authentication so now with that background we went to that Bret rather",
    "start": "282539",
    "end": "288180"
  },
  {
    "text": "quick but hopefully as we go through our scenario some of these concepts will be",
    "start": "288180",
    "end": "293669"
  },
  {
    "text": "clear with examples so let's hop into our game of telephone I want to",
    "start": "293669",
    "end": "299820"
  },
  {
    "text": "introduce back-end it sits inside a secure production network it has a lot",
    "start": "299820",
    "end": "306389"
  },
  {
    "text": "of interesting sensitive data but it's not very interesting when it's all by itself so if we zoom out a little bit",
    "start": "306389",
    "end": "312660"
  },
  {
    "text": "we'll see that it lives alongside a couple of other services we have a service front-end which is responsible",
    "start": "312660",
    "end": "319259"
  },
  {
    "text": "for serving the front-end of my application and we have a widget service which is responsible for serving widgets",
    "start": "319259",
    "end": "325710"
  },
  {
    "text": "and so far the front-end and the widget",
    "start": "325710",
    "end": "331889"
  },
  {
    "text": "service can communicate freely with the backend we write this all down in the",
    "start": "331889",
    "end": "339419"
  },
  {
    "text": "design dock and submit this design back to our security team for review and they come back to us and say hey widget",
    "start": "339419",
    "end": "346259"
  },
  {
    "text": "service really has no reason to be able to talk to back-end back-end holds a lot",
    "start": "346259",
    "end": "353280"
  },
  {
    "text": "of sensitive data and widget doesn't need access to any of it in order to perform its function so enter the first",
    "start": "353280",
    "end": "361770"
  },
  {
    "text": "requirement of this talk",
    "start": "361770",
    "end": "366289"
  },
  {
    "text": "the security team asks us to grant",
    "start": "367159",
    "end": "372199"
  },
  {
    "text": "permission to call back-end only to our front-end so this is an example of a",
    "start": "372199",
    "end": "379349"
  },
  {
    "text": "coarse-grained authorization rule we",
    "start": "379349",
    "end": "385070"
  },
  {
    "text": "think that a possible Avenue for implementing this feature request is to",
    "start": "385070",
    "end": "392630"
  },
  {
    "text": "implement some form of caller ID within our service stack so let's embark down that journey as it",
    "start": "392630",
    "end": "401130"
  },
  {
    "text": "turns out kubernetes has a built in concept of a service account of a",
    "start": "401130",
    "end": "407880"
  },
  {
    "text": "service identity kubernetes service accounts are a resource type they live",
    "start": "407880",
    "end": "413220"
  },
  {
    "text": "in a namespace and each namespace has a default service account I'll put all",
    "start": "413220",
    "end": "418380"
  },
  {
    "text": "pods are already running as a service account they integrate with access",
    "start": "418380",
    "end": "424380"
  },
  {
    "text": "control they can be the subject of an hour back policy or a pod security policy and probably the most important",
    "start": "424380",
    "end": "431040"
  },
  {
    "text": "thing to us is that they have automated credential management to an extent so",
    "start": "431040",
    "end": "438300"
  },
  {
    "text": "let's dive into that last bullet a little further to see how it can address our problem so the the tokens are the",
    "start": "438300",
    "end": "449100"
  },
  {
    "text": "built in credential credentials provided to services to service accounts",
    "start": "449100",
    "end": "454500"
  },
  {
    "text": "they are exposed to pods via keyboard volume they are flexibly verifiable they",
    "start": "454500",
    "end": "462510"
  },
  {
    "text": "can be verified either centrally by communicating to the token Review API or",
    "start": "462510",
    "end": "468240"
  },
  {
    "text": "by distributing a verification key and",
    "start": "468240",
    "end": "473640"
  },
  {
    "text": "you can do a standard jot verification against these tokens they are revocable",
    "start": "473640",
    "end": "479160"
  },
  {
    "text": "via the API to an extent and then the last three bullets are true of the",
    "start": "479160",
    "end": "486060"
  },
  {
    "text": "new-style service count against our beta in 112 kubernetes they have limited TTL with",
    "start": "486060",
    "end": "492060"
  },
  {
    "text": "automatic rotation and they support audience scoping and they're never stored in NCD so they have a lot of good",
    "start": "492060",
    "end": "498810"
  },
  {
    "text": "good security properties that make them seem like they might be useful for our use case there's quite a complicated",
    "start": "498810",
    "end": "509190"
  },
  {
    "text": "flow that goes into making these tokens available that starts on pod creation",
    "start": "509190",
    "end": "515099"
  },
  {
    "text": "the cubelet will request a token from the api server and it will continue to",
    "start": "515099",
    "end": "520110"
  },
  {
    "text": "request tokens to the from the api server throughout the lifetime of the pod and we're going to make sure that",
    "start": "520110",
    "end": "526650"
  },
  {
    "text": "those are refreshed this is a pretty complex diagram I'm not going to step through it because",
    "start": "526650",
    "end": "533130"
  },
  {
    "text": "most of this is handled by the infrastructure and what you really have",
    "start": "533130",
    "end": "538720"
  },
  {
    "text": "to care about is your front end and your back end so your front end reads a token",
    "start": "538720",
    "end": "544180"
  },
  {
    "text": "from disk presents it to your back-end and back-end authenticates that token and possibly returns a response based on",
    "start": "544180",
    "end": "553270"
  },
  {
    "text": "the policy enforcement policy however there is a major downside to this",
    "start": "553270",
    "end": "561730"
  },
  {
    "text": "approach so tokens are an example of a forwardable credential so they may be",
    "start": "561730",
    "end": "568720"
  },
  {
    "text": "replayed what this means is that you actually have to be very careful with who you send these tokens to the other",
    "start": "568720",
    "end": "576130"
  },
  {
    "text": "thing that we haven't solved is is server authentication when front-end dials back-end it wants to be fairly",
    "start": "576130",
    "end": "583420"
  },
  {
    "text": "certain that it's talking to back-end and not something else and I just we",
    "start": "583420",
    "end": "589480"
  },
  {
    "text": "would like to we would rather not have to trust trust the network for security properties like this the way that you'd",
    "start": "589480",
    "end": "596380"
  },
  {
    "text": "traditionally do this is with a server TLS certificates but we're in kind of a",
    "start": "596380",
    "end": "602890"
  },
  {
    "text": "pickle we need to be careful with who we send these tokens to but we are unable to authenticate servers so this seems",
    "start": "602890",
    "end": "610810"
  },
  {
    "text": "like it's going to be incompatible with our requirements so if we move forward a",
    "start": "610810",
    "end": "618610"
  },
  {
    "text": "little bit we can also provision mutual TLS",
    "start": "618610",
    "end": "624670"
  },
  {
    "text": "certificates for service accounts these are awesome because they provide both",
    "start": "624670",
    "end": "631930"
  },
  {
    "text": "server authentication and they are channel bound meaning we don't have to worry about we don't have to worry about",
    "start": "631930",
    "end": "638829"
  },
  {
    "text": "these credentials being replayed kubernetes does have support for a",
    "start": "638829",
    "end": "644520"
  },
  {
    "text": "certificate provisioning via the certificates API it's very flexible but it requires I would say substantial",
    "start": "644520",
    "end": "651670"
  },
  {
    "text": "integration to get working for your use case there is another equally complex",
    "start": "651670",
    "end": "658510"
  },
  {
    "text": "flow that starts with the front end submitting a certificate signing request to the API",
    "start": "658510",
    "end": "664420"
  },
  {
    "text": "an approver which you have to write observes that CSR and does some",
    "start": "664420",
    "end": "669490"
  },
  {
    "text": "authorization check and approves it a signer separately signs that into a",
    "start": "669490",
    "end": "675250"
  },
  {
    "text": "certificate friend and reads the certificate and I can now use that to establish mutual TLS channel between",
    "start": "675250",
    "end": "682330"
  },
  {
    "text": "front end and back end and of course back end also has to do the same flow in order for it to get in serving",
    "start": "682330",
    "end": "688120"
  },
  {
    "text": "certificates so there's not an easy",
    "start": "688120",
    "end": "694140"
  },
  {
    "text": "there's not an easy way to get to this where we're only worrying about the same thing",
    "start": "694140",
    "end": "699690"
  },
  {
    "text": "we're only worrying about the things that we care about however if we do introduce Sto it actually provides a lot",
    "start": "699690",
    "end": "708340"
  },
  {
    "text": "of a heavy lifting for you so sto has a component called citadel which is the CA component it provides an",
    "start": "708340",
    "end": "716470"
  },
  {
    "text": "API to exchange a community service account token for an M TLS certificate",
    "start": "716470",
    "end": "724380"
  },
  {
    "text": "the ISTE Ono dejan actually automatically does all this for you and exposes those TLS secrets to your pod",
    "start": "724380",
    "end": "732400"
  },
  {
    "text": "automatically so if we do decide to adopt this deal we get back to the",
    "start": "732400",
    "end": "739570"
  },
  {
    "text": "picture that we like where we're only worried about the things that we care",
    "start": "739570",
    "end": "744850"
  },
  {
    "text": "about front end has a certificate it presents it to back end mutual",
    "start": "744850",
    "end": "750540"
  },
  {
    "text": "authentication is established and the response is returned so this sounds",
    "start": "750540",
    "end": "756640"
  },
  {
    "text": "pretty good for now let's apply it let's apply let's apply this to our game of",
    "start": "756640",
    "end": "763300"
  },
  {
    "text": "telephone so armed with mutual TLS to secure services service communication we",
    "start": "763300",
    "end": "771670"
  },
  {
    "text": "can implement some enforcement policy in the backend that says the front-end identity is allowed to call back in but",
    "start": "771670",
    "end": "778630"
  },
  {
    "text": "the widget service is not and this looks pretty good",
    "start": "778630",
    "end": "784830"
  },
  {
    "text": "the security team is happy with this and",
    "start": "785010",
    "end": "790490"
  },
  {
    "text": "we can move on however the we were still",
    "start": "790880",
    "end": "797280"
  },
  {
    "text": "a little bit too narrowly focused we're still focused only on her internal",
    "start": "797280",
    "end": "802980"
  },
  {
    "text": "network and as we zoom out we noticed",
    "start": "802980",
    "end": "808740"
  },
  {
    "text": "that not everything is in containment tucked inside our internal network we",
    "start": "808740",
    "end": "814260"
  },
  {
    "text": "actually have a gateway which is the conduit between users and our services",
    "start": "814260",
    "end": "821130"
  },
  {
    "text": "this is awesome because it means that the front-end and the widget service in",
    "start": "821130",
    "end": "826650"
  },
  {
    "text": "the backend can provide value to customers that sort of a broad network however it does create some new",
    "start": "826650",
    "end": "834630"
  },
  {
    "text": "challenges the security team zoomed out a little bit too and they",
    "start": "834630",
    "end": "842640"
  },
  {
    "text": "gave us a new feature requirement this new future requirement is slightly different than the first one",
    "start": "842640",
    "end": "848550"
  },
  {
    "text": "they want to model our authorization policy it's such that only user a can",
    "start": "848550",
    "end": "855810"
  },
  {
    "text": "can access user a's data so this is an example of a fine-grained authorization",
    "start": "855810",
    "end": "861630"
  },
  {
    "text": "policy but this presents a little bit of an issue because user a talks to the",
    "start": "861630",
    "end": "868890"
  },
  {
    "text": "gateway where a user a is authenticated and the attributes that come out of that",
    "start": "868890",
    "end": "876450"
  },
  {
    "text": "authentication actually have to are the input to the policy of the backend so we",
    "start": "876450",
    "end": "883140"
  },
  {
    "text": "have to figure out how to transport those attributes all the way to the backend this is an example of a",
    "start": "883140",
    "end": "890270"
  },
  {
    "text": "delegated authentication problem however",
    "start": "890270",
    "end": "895610"
  },
  {
    "text": "sto will is currently working on a solution for you sto is developing this",
    "start": "895610",
    "end": "906660"
  },
  {
    "text": "concept of a request contact context token it's all designed implementation",
    "start": "906660",
    "end": "911760"
  },
  {
    "text": "is ongoing it is pretty alpha so it's not something that you can use when you leave but I'd like to describe",
    "start": "911760",
    "end": "917960"
  },
  {
    "text": "some of the theory behind it to you today the idea is that this request",
    "start": "917960",
    "end": "924770"
  },
  {
    "text": "context token and captures captures request context a tinge ingress packages it in a jot so that it",
    "start": "924770",
    "end": "932840"
  },
  {
    "text": "can be sent downstream and validated and it supports attributes like source IP but it also supports identity attributes",
    "start": "932840",
    "end": "939890"
  },
  {
    "text": "like end-user identity or request originator and that last attribute is",
    "start": "939890",
    "end": "945800"
  },
  {
    "text": "the one that we really care about here so to dig into how this actually works",
    "start": "945800",
    "end": "955180"
  },
  {
    "text": "the user sends potentially a barrier token or some other form of end user",
    "start": "956050",
    "end": "961880"
  },
  {
    "text": "authentication to the gateway gateway sends that their token and some request context to the token service token",
    "start": "961880",
    "end": "969650"
  },
  {
    "text": "service return returns an RC token a gateway passes that RC token in a side channel down the",
    "start": "969650",
    "end": "976550"
  },
  {
    "text": "down the service call stack in an out-of-band channel an RC token",
    "start": "976550",
    "end": "982760"
  },
  {
    "text": "verification key is pushed to all applications running in the cluster so that they can verify those n company RC",
    "start": "982760",
    "end": "989030"
  },
  {
    "text": "tokens and Trust these trusts that those assertions were made by the Gateway in the token service so if we hop back to",
    "start": "989030",
    "end": "999980"
  },
  {
    "text": "our game of telephone we now have a user authenticates to the",
    "start": "999980",
    "end": "1006160"
  },
  {
    "text": "gateway the Gateway creates an RC token those RC tokens are forwarded upstream",
    "start": "1006160",
    "end": "1012130"
  },
  {
    "text": "and back-end is able to validate that RC token and use those attributes to feed",
    "start": "1012130",
    "end": "1018490"
  },
  {
    "text": "its policy so now we can implement the policy that user a is has permission to",
    "start": "1018490",
    "end": "1026860"
  },
  {
    "text": "access user a's data however we actually",
    "start": "1026860",
    "end": "1031900"
  },
  {
    "text": "have a little bit of a regression with this change suppose widget service gets",
    "start": "1031900",
    "end": "1039220"
  },
  {
    "text": "a remote code execution those RC tokens are passed down to up streams",
    "start": "1039220",
    "end": "1046630"
  },
  {
    "text": "indiscriminately so widgets in RC e in which service would have access to the same RC",
    "start": "1046630",
    "end": "1052190"
  },
  {
    "text": "token and would forward and could forward that to back-end to gain access to sensitive data so potentially we were",
    "start": "1052190",
    "end": "1059659"
  },
  {
    "text": "overzealous with our shift and what we really wanted to do is simultaneously",
    "start": "1059659",
    "end": "1066250"
  },
  {
    "text": "enforce that coarse-grained authorization policy and the fine-grained authorization policy so we",
    "start": "1066250",
    "end": "1072769"
  },
  {
    "text": "grant access to front-end to call back end and we grant access to user a to",
    "start": "1072769",
    "end": "1078950"
  },
  {
    "text": "read user ace data and what we get is a",
    "start": "1078950",
    "end": "1083960"
  },
  {
    "text": "picture that looks like this this is pretty good",
    "start": "1083960",
    "end": "1089120"
  },
  {
    "text": "this feels like this feels like we're our security team wants to be I want to",
    "start": "1089120",
    "end": "1095539"
  },
  {
    "text": "dig into that final authorization policy that we had in the last slide and",
    "start": "1095539",
    "end": "1102399"
  },
  {
    "text": "rephrase it a little bit so a rephrasing of that is with proof of recent",
    "start": "1102399",
    "end": "1110000"
  },
  {
    "text": "interaction with user a the front-end can access user ace data so we've we've",
    "start": "1110000",
    "end": "1117799"
  },
  {
    "text": "created an explicit requirement that the access to user ace data is always on",
    "start": "1117799",
    "end": "1123320"
  },
  {
    "text": "behalf of user a in this specific scenario we're actually requiring that",
    "start": "1123320",
    "end": "1130100"
  },
  {
    "text": "the access take taken on behalf of the user must be in response to a recent action",
    "start": "1130100",
    "end": "1135559"
  },
  {
    "text": "taken by the user and we're also requiring that the access err the direct",
    "start": "1135559",
    "end": "1141830"
  },
  {
    "text": "access our proves that this interaction occurred so we've basically remodeled",
    "start": "1141830",
    "end": "1149389"
  },
  {
    "text": "our access management story around the idea that the user owns their own data",
    "start": "1149389",
    "end": "1154460"
  },
  {
    "text": "but furthermore using those coarse-grained authorization policies",
    "start": "1154460",
    "end": "1160460"
  },
  {
    "text": "we've constrained how the powerful user",
    "start": "1160460",
    "end": "1165500"
  },
  {
    "text": "authority can flow through our system and we've restricted the past to the Past required for us to for to fulfill",
    "start": "1165500",
    "end": "1174019"
  },
  {
    "text": "business requirements",
    "start": "1174019",
    "end": "1177279"
  },
  {
    "text": "so the future creep never ends you may",
    "start": "1181760",
    "end": "1188250"
  },
  {
    "text": "want to restrict service calls I that",
    "start": "1188250",
    "end": "1196590"
  },
  {
    "text": "originated in your proud BBC you may want to restrict service requests based on a code identity of the service we",
    "start": "1196590",
    "end": "1206190"
  },
  {
    "text": "talked we didn't talk about this persona at all but there is also an administrative persona may be the",
    "start": "1206190",
    "end": "1212610"
  },
  {
    "text": "administrative persona does not need proof of user interaction to read to",
    "start": "1212610",
    "end": "1219419"
  },
  {
    "text": "access to surveys data may be just a justification in the form of a support",
    "start": "1219419",
    "end": "1225780"
  },
  {
    "text": "ticket or a bug ID is sufficient and you also might want to require that requests",
    "start": "1225780",
    "end": "1233000"
  },
  {
    "text": "administrative requests originated on company-issued devices and we don't have time to go into how all these different",
    "start": "1233000",
    "end": "1240169"
  },
  {
    "text": "authorization policies could be implemented but we do have the",
    "start": "1240169",
    "end": "1245250"
  },
  {
    "text": "groundwork and the extension points where we could start to build infinite",
    "start": "1245250",
    "end": "1252390"
  },
  {
    "text": "where we could start to expose attributes like these to policy another",
    "start": "1252390",
    "end": "1261120"
  },
  {
    "text": "side effect of of this approach is now",
    "start": "1261120",
    "end": "1267630"
  },
  {
    "text": "if we record that who what when and why all these accesses occurred we can with",
    "start": "1267630",
    "end": "1277020"
  },
  {
    "text": "with the improvements that we made of our authors in our authorization system the context of why these accesses are",
    "start": "1277020",
    "end": "1285240"
  },
  {
    "text": "occurred are actually much more meaningful and significant and",
    "start": "1285240",
    "end": "1290669"
  },
  {
    "text": "actionable it's incredibly useful when you need to do forensics to figure out",
    "start": "1290669",
    "end": "1297750"
  },
  {
    "text": "why something happened when things go south so our talk began as a talk about",
    "start": "1297750",
    "end": "1308580"
  },
  {
    "text": "responsibility and you can't have responsibility for that accountability",
    "start": "1308580",
    "end": "1314059"
  },
  {
    "text": "so this is the sudoers lecture respect the privacy of users think before you",
    "start": "1314470",
    "end": "1321110"
  },
  {
    "text": "type and with great power comes great responsibility the the reshift of this authorization",
    "start": "1321110",
    "end": "1332480"
  },
  {
    "text": "model to to include both fine-grained",
    "start": "1332480",
    "end": "1338390"
  },
  {
    "text": "authorization that takes into account the user and also coarse-grained authorization to control the flow of",
    "start": "1338390",
    "end": "1344919"
  },
  {
    "text": "user authority through our system actually has a actually moves the",
    "start": "1344919",
    "end": "1353419"
  },
  {
    "text": "responsibility of data protection on to individual sres service owners administrators as as",
    "start": "1353419",
    "end": "1362539"
  },
  {
    "text": "these teams as these teams develop code",
    "start": "1362539",
    "end": "1368419"
  },
  {
    "text": "or debug problems in production they make decisions that are conscious of the",
    "start": "1368419",
    "end": "1378940"
  },
  {
    "text": "that are conscious of the of the privacy of the users so I think that potentially",
    "start": "1380049",
    "end": "1388970"
  },
  {
    "text": "the thesis of this talk is that is that",
    "start": "1388970",
    "end": "1395840"
  },
  {
    "text": "the is that by implementing these",
    "start": "1395840",
    "end": "1403970"
  },
  {
    "text": "controls we are actually moving the idea of user data protection user data",
    "start": "1403970",
    "end": "1410630"
  },
  {
    "text": "protection into a shared ownership or",
    "start": "1410630",
    "end": "1416419"
  },
  {
    "text": "shared responsibility rather than a responsibility of another team and that helps bring it that helps",
    "start": "1416419",
    "end": "1424760"
  },
  {
    "text": "push it towards the core principle of a company or engineering team so how did",
    "start": "1424760",
    "end": "1431750"
  },
  {
    "text": "we do with our original problem did we",
    "start": "1431750",
    "end": "1436909"
  },
  {
    "text": "solve it with authentication the bad news is probably not it's a pretty",
    "start": "1436909",
    "end": "1444169"
  },
  {
    "text": "complex problem it requires a holistic approach and",
    "start": "1444169",
    "end": "1449289"
  },
  {
    "text": "sustained diligence and you're never going to have a perfect solution however",
    "start": "1449289",
    "end": "1454539"
  },
  {
    "text": "we did laid the foundations for this holistic approach by allowing granular",
    "start": "1454539",
    "end": "1461679"
  },
  {
    "text": "authorization which enables lease privileged access and a complete audit history which builds in an environment",
    "start": "1461679",
    "end": "1469029"
  },
  {
    "text": "of accountability within the within organization",
    "start": "1469029",
    "end": "1475109"
  },
  {
    "text": "so in closing I wanted to talk about what I look at when I evaluate solutions",
    "start": "1475710",
    "end": "1483460"
  },
  {
    "text": "in this space I like to see solutions that are easy to adopt hard to use and",
    "start": "1483460",
    "end": "1489609"
  },
  {
    "text": "correctly and noisy to circumvent applied consistently across the",
    "start": "1489609",
    "end": "1494830"
  },
  {
    "text": "infrastructure this usually means that it is a core service provided by the",
    "start": "1494830",
    "end": "1499960"
  },
  {
    "text": "infrastructure built on open standards and easy to develop an annex and extend",
    "start": "1499960",
    "end": "1507690"
  },
  {
    "text": "so the other thing that I wanted to touch on is what belongs in kubernetes",
    "start": "1508649",
    "end": "1513789"
  },
  {
    "text": "core and probably not a lot of this right now we want to build extension",
    "start": "1513789",
    "end": "1520179"
  },
  {
    "text": "points that allow experimentation outside of core we also do want to adopt",
    "start": "1520179",
    "end": "1528659"
  },
  {
    "text": "features that improve and harden our core infrastructure we have to actually move very cautiously because anything",
    "start": "1528659",
    "end": "1536139"
  },
  {
    "text": "that we incorporate into core kubernetes will be stuck with for a long time including any mistakes so that brings us",
    "start": "1536139",
    "end": "1546909"
  },
  {
    "text": "to the call to action what can you do when you leave this room continue thinking about this problem start from",
    "start": "1546909",
    "end": "1555489"
  },
  {
    "text": "the basics this isn't going to happen overnight if you don't have service identity it's a great great spot to",
    "start": "1555489",
    "end": "1560799"
  },
  {
    "text": "start if you decide that you need want to embark down this path please give us",
    "start": "1560799",
    "end": "1568899"
  },
  {
    "text": "plenty of feedback of what works well and what doesn't work and what we can do better",
    "start": "1568899",
    "end": "1574619"
  },
  {
    "text": "I also want to point out that there are a few communities that are doing great",
    "start": "1575130",
    "end": "1581070"
  },
  {
    "text": "work in the space Sagat which I am involved in spiffing",
    "start": "1581070",
    "end": "1588120"
  },
  {
    "text": "inspires are building great identity solutions and the sto security working",
    "start": "1588120",
    "end": "1593549"
  },
  {
    "text": "group developed many of the features that I discussed today built on top of kubernetes and they're working hard to",
    "start": "1593549",
    "end": "1599520"
  },
  {
    "text": "build a platform that integrates very smoothly with kubernetes and that's it",
    "start": "1599520",
    "end": "1606840"
  },
  {
    "text": "and I think we have some time for questions any questions don't be shy to",
    "start": "1606840",
    "end": "1629658"
  },
  {
    "text": "some of the older solutions I'm thinking Kerberos and sam'l have a place in a",
    "start": "1633200",
    "end": "1640440"
  },
  {
    "text": "cloud native world I think that it's",
    "start": "1640440",
    "end": "1646380"
  },
  {
    "text": "going to be a requirement to to support",
    "start": "1646380",
    "end": "1651720"
  },
  {
    "text": "these in some capacity especially not",
    "start": "1651720",
    "end": "1657659"
  },
  {
    "text": "not every application is going to be greenfield we need to have support for migrating so we talked about a gateway",
    "start": "1657659",
    "end": "1667039"
  },
  {
    "text": "Kerberos is often used for administrator identity that gateway should probably be",
    "start": "1667039",
    "end": "1672510"
  },
  {
    "text": "able to authenticate using Kerberos and support ad for Kerberos to services",
    "start": "1672510",
    "end": "1681020"
  },
  {
    "text": "first Kerberos for service identity I think that's a less of a clear space for",
    "start": "1681020",
    "end": "1687539"
  },
  {
    "text": "me but I think that it is important we're just looking for we're looking for",
    "start": "1687539",
    "end": "1693419"
  },
  {
    "text": "users and use cases that need that and people that are motivated to start to sketch out what a solution would look",
    "start": "1693419",
    "end": "1699630"
  },
  {
    "text": "like we're happy to build in the extension points that are needed for",
    "start": "1699630",
    "end": "1705090"
  },
  {
    "text": "that and explore it we just don't have the motivation yet",
    "start": "1705090",
    "end": "1711970"
  },
  {
    "text": "any videos it's a nice idea to build",
    "start": "1712840",
    "end": "1728870"
  },
  {
    "text": "things up well layer well am have you compiled a sort of matrix of that",
    "start": "1728870",
    "end": "1735970"
  },
  {
    "text": "feature creep use cases lists which build up layer by layer to show what",
    "start": "1735970",
    "end": "1743150"
  },
  {
    "text": "solutions can be applied at each layer so you could from that derive your",
    "start": "1743150",
    "end": "1749900"
  },
  {
    "text": "security architecture that fits your particular needs and it would probably",
    "start": "1749900",
    "end": "1755180"
  },
  {
    "text": "help a lot of people to start and see which layers combine which are orthogonal to each other and stuff like",
    "start": "1755180",
    "end": "1761660"
  },
  {
    "text": "that right yeah I I think that there were naively I can probably categorize",
    "start": "1761660",
    "end": "1770930"
  },
  {
    "text": "three without thinking about it there was the layer where we could only",
    "start": "1770930",
    "end": "1777410"
  },
  {
    "text": "authenticate to the kubernetes control plan to get certificates because we don't we could only trust the kubernetes",
    "start": "1777410",
    "end": "1783590"
  },
  {
    "text": "control plane and there was when we established service to service identity and then there was the layer where we",
    "start": "1783590",
    "end": "1789110"
  },
  {
    "text": "started to plumb the ng zaroor request originator identity through the system and that could I tried as best I could",
    "start": "1789110",
    "end": "1797120"
  },
  {
    "text": "to expose those but maybe a blog post or something along the line I would be able",
    "start": "1797120",
    "end": "1802610"
  },
  {
    "text": "to fill in all those details this is a good recommendation thank you",
    "start": "1802610",
    "end": "1809380"
  },
  {
    "text": "yes so in the description for the lecture I you wrote something about the",
    "start": "1820920",
    "end": "1827190"
  },
  {
    "text": "newly released proof of POD identity and did you refer to the service accounts or",
    "start": "1827190",
    "end": "1834330"
  },
  {
    "text": "something new if you can elaborate on that a little bit maybe I didn't call",
    "start": "1834330",
    "end": "1841740"
  },
  {
    "text": "that out the new proof of identity was the service count token so in 112",
    "start": "1841740",
    "end": "1850670"
  },
  {
    "text": "there's a two new features called the token projection which most of the",
    "start": "1850670",
    "end": "1858290"
  },
  {
    "text": "security properties that were improved were actually properties of only the new",
    "start": "1858290",
    "end": "1865380"
  },
  {
    "text": "service grant again so those are automatic rotation time that time",
    "start": "1865380",
    "end": "1870480"
  },
  {
    "text": "bounding and also audience counting and",
    "start": "1870480",
    "end": "1875570"
  },
  {
    "text": "they're not they're not stored in a CD so they don't depend on secret mechanisms so I should have called out",
    "start": "1877250",
    "end": "1883860"
  },
  {
    "text": "that that was the improvement but yeah these slides are up online so you can",
    "start": "1883860",
    "end": "1889700"
  },
  {
    "text": "read about that sure can talk a little",
    "start": "1889700",
    "end": "1899340"
  },
  {
    "text": "bit about the token service I guess you have to change the nebera token to something like sto understand is that",
    "start": "1899340",
    "end": "1906600"
  },
  {
    "text": "like extensible it is it supports",
    "start": "1906600",
    "end": "1913140"
  },
  {
    "text": "arbitrary attributes that can be asserted by the Gateway it is extensible",
    "start": "1913140",
    "end": "1919110"
  },
  {
    "text": "in that it will support different identity providers it is currently",
    "start": "1919110",
    "end": "1924680"
  },
  {
    "text": "expected to be a jot that is verifiable and using the token services",
    "start": "1924680",
    "end": "1930680"
  },
  {
    "text": "verification key",
    "start": "1930680",
    "end": "1933830"
  },
  {
    "text": "yes so the Gateway is responsible for verifying that the token is a valid user",
    "start": "1940700",
    "end": "1947670"
  },
  {
    "text": "cookie the Gateway the system of the token service in the Gateway so the",
    "start": "1947670",
    "end": "1953010"
  },
  {
    "text": "token service is actually the Gateway for example sends headers and source IP",
    "start": "1953010",
    "end": "1960000"
  },
  {
    "text": "to the Gateway and the Gateway does sorry the Gateway sends headers and",
    "start": "1960000",
    "end": "1965490"
  },
  {
    "text": "source IP and some other requests ambient request attributes to the token service the token service performs",
    "start": "1965490",
    "end": "1972330"
  },
  {
    "text": "authentication and builds a jot containing the request context that can",
    "start": "1972330",
    "end": "1978960"
  },
  {
    "text": "be then forwarded downstream and authenticated by downstream services or",
    "start": "1978960",
    "end": "1984870"
  },
  {
    "text": "upstream and it is extensible to arbitrary attributes and hopefully",
    "start": "1984870",
    "end": "1992460"
  },
  {
    "text": "arbitrary identity providers hi my",
    "start": "1992460",
    "end": "2005780"
  },
  {
    "text": "background is I am NOT kubernetes I'm here trying to learn so I don't totally understand the use case but it sounds",
    "start": "2005780",
    "end": "2012410"
  },
  {
    "text": "like this is some permeation of a two-legged OAuth solution did you guys",
    "start": "2012410",
    "end": "2018380"
  },
  {
    "text": "look at a lot and the spec and you know sort of validate things case against that so it could be you could use OAuth",
    "start": "2018380",
    "end": "2028160"
  },
  {
    "text": "coming into the Gateway however the the",
    "start": "2028160",
    "end": "2033230"
  },
  {
    "text": "RC token is not a barrier token it's is less powerful because it because it can",
    "start": "2033230",
    "end": "2044030"
  },
  {
    "text": "only be presented by specific peers so that was the idea that you control the",
    "start": "2044030",
    "end": "2049790"
  },
  {
    "text": "flow of the RC token through the system so they're not actually usable generally",
    "start": "2049790",
    "end": "2055460"
  },
  {
    "text": "like a bearer token is so a bearer token is defined as something that any client can use without proof cryptographic",
    "start": "2055460",
    "end": "2061790"
  },
  {
    "text": "proof does that make sense yeah absolutely the idea is that that RC",
    "start": "2061790",
    "end": "2071128"
  },
  {
    "text": "token is actually much less powerful than the energies are very token which is the the motivation for exchanging it",
    "start": "2071129",
    "end": "2077780"
  },
  {
    "text": "because it we do control the paths that it flows through the system but happy to",
    "start": "2077780",
    "end": "2083760"
  },
  {
    "text": "talk about it after anybody else one",
    "start": "2083760",
    "end": "2095280"
  },
  {
    "text": "more thank you yeah just a question I",
    "start": "2095280",
    "end": "2104550"
  },
  {
    "text": "heard about it but I'm not sure if you can elaborate on it process identity like distinguishing between the actual",
    "start": "2104550",
    "end": "2111090"
  },
  {
    "text": "stuff that runs on the pole versus somebody running to cattle exec on it getting giving a different access if I",
    "start": "2111090",
    "end": "2118050"
  },
  {
    "text": "sound like I don't know Bates or some caramel tributes that is a hard hard",
    "start": "2118050",
    "end": "2130170"
  },
  {
    "text": "question and it is not it is not going to be covered by this talk although",
    "start": "2130170",
    "end": "2141619"
  },
  {
    "text": "there is there is ongoing work in the",
    "start": "2142550",
    "end": "2148190"
  },
  {
    "text": "Linux audit subsystem to build out container ID hashes on processes so you",
    "start": "2148190",
    "end": "2156960"
  },
  {
    "text": "can actually distinguish between processes based on a container ID that",
    "start": "2156960",
    "end": "2164430"
  },
  {
    "text": "was probably not covered in stock and it is not in the mainland Linux kernel but eventually there could be some",
    "start": "2164430",
    "end": "2171260"
  },
  {
    "text": "integration here with workload identity and the container idea of the process",
    "start": "2171260",
    "end": "2177069"
  },
  {
    "text": "I it's something that a team's eye at",
    "start": "2177069",
    "end": "2183279"
  },
  {
    "text": "Google are working on integrating but those teams are actually pretty far away",
    "start": "2183279",
    "end": "2189130"
  },
  {
    "text": "from where I sit but once it's ready happy to figure out how to integrate",
    "start": "2189130",
    "end": "2194739"
  },
  {
    "text": "with it anybody else thank you everyone",
    "start": "2194739",
    "end": "2206910"
  },
  {
    "text": "[Applause]",
    "start": "2206910",
    "end": "2210980"
  }
]