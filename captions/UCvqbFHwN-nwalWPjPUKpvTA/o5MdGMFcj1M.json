[
  {
    "text": "so a little introduction I'm Duffy kouy I'm the field CTO at isovalent isovalent is now part of Cisco we're still doing",
    "start": "560",
    "end": "6799"
  },
  {
    "text": "all the same things we were doing before we were a part of Cisco nothing's really changed for us um and we're continuing",
    "start": "6799",
    "end": "12240"
  },
  {
    "text": "to go to market so if you ever want to hear more about psyllium ebpf tetron any of those things definitely find the guy",
    "start": "12240",
    "end": "18119"
  },
  {
    "text": "in the Hat and ask him questions my name is Natalia I'm the product lead for runtime security at",
    "start": "18119",
    "end": "24439"
  },
  {
    "text": "Island which is now part of CIS",
    "start": "24439",
    "end": "29160"
  },
  {
    "text": "so this is our agenda we're going to kind of introduce a few of the ideas like talking about like what is setc comp get into some evf stuff maybe do a",
    "start": "30160",
    "end": "36920"
  },
  {
    "text": "little demon demonstration of some things and then we're going to talk about kind of the advantages and disadvantages of each",
    "start": "36920",
    "end": "43680"
  },
  {
    "text": "technology so to get started I wanted to introduce set comp set comp is uh actually stands for secure Computing it",
    "start": "43680",
    "end": "49320"
  },
  {
    "text": "was introduced in 2005 well before many of the other Primitives of containers right we didn't really have a lot of the",
    "start": "49320",
    "end": "55480"
  },
  {
    "text": "other things that make up a container today and it was initially help introduced to help limit applications that were",
    "start": "55480",
    "end": "62559"
  },
  {
    "text": "running on a server in the old style without containers um that share a",
    "start": "62559",
    "end": "68000"
  },
  {
    "text": "kernel between each other right so like limiting that and what are they actually limiting they're limiting things like you know any application that opens a",
    "start": "68000",
    "end": "74479"
  },
  {
    "text": "file might be I I I need to be I would need a system system call that's called open at or if you're opening a socket",
    "start": "74479",
    "end": "81040"
  },
  {
    "text": "but there are a bunch of other system calls in that API that perhaps you wouldn't want that application to be able to have right like shutdown or",
    "start": "81040",
    "end": "88079"
  },
  {
    "text": "reboot or like you know some of the more obvious like system calls that don't really you wouldn't really necessarily",
    "start": "88079",
    "end": "93159"
  },
  {
    "text": "want applications that are sharing a Linux kernel to have that kind of control over over the Linux kernel it",
    "start": "93159",
    "end": "100200"
  },
  {
    "text": "was also one of the first sandbox mechanisms and from then we've seen so many more sandboxes which is a term I",
    "start": "100200",
    "end": "106560"
  },
  {
    "text": "absolutely love like anybody who's ever seen a Sandbox like why are they call them sandboxes",
    "start": "106560",
    "end": "112159"
  },
  {
    "text": "but but that idea of basically trying to contain or constrain an application",
    "start": "112159",
    "end": "117360"
  },
  {
    "text": "within within a specific scope of like what it's able to do against the shared resource has just come a long way one of",
    "start": "117360",
    "end": "123560"
  },
  {
    "text": "the examples is like the browser based stuff right so like what web assembly a lot of these things kind of uh all sort",
    "start": "123560",
    "end": "129959"
  },
  {
    "text": "of generated out of things like secure Computing right like that that was the beginning and we've continued to iterate",
    "start": "129959",
    "end": "135680"
  },
  {
    "text": "continue to improve continue to like create more uh tools out there that create these",
    "start": "135680",
    "end": "142400"
  },
  {
    "text": "sandboxes excuse me so secure Computing in practicality like how it actually works is when you um start process and",
    "start": "143400",
    "end": "150599"
  },
  {
    "text": "you've defined a setcom profile that setcom profile must be available before the process starts and when that process",
    "start": "150599",
    "end": "157560"
  },
  {
    "text": "starts and based on that profile it it represents a one-way change into a secure mode where all of the system",
    "start": "157560",
    "end": "164400"
  },
  {
    "text": "calls that that application can make must be within the list that you've provided now there's lots of ways to",
    "start": "164400",
    "end": "169560"
  },
  {
    "text": "configure this you can configure setc comp to actually just warn you or tell you when the particular system call",
    "start": "169560",
    "end": "174879"
  },
  {
    "text": "happens but you can also constrain a given application to a set of system calls and you you can also do a",
    "start": "174879",
    "end": "180760"
  },
  {
    "text": "combination of both of them any system call outside of that",
    "start": "180760",
    "end": "185840"
  },
  {
    "text": "list if you're in a more enforced mode will will will resent will could result in either recording an event or in",
    "start": "185840",
    "end": "192239"
  },
  {
    "text": "killing the killing the process that tries to make that system call the other one of the challenges of",
    "start": "192239",
    "end": "198799"
  },
  {
    "text": "of of set comp as I mentioned before is that you kind of need to know ahead of time like what that list of system calls",
    "start": "198799",
    "end": "206200"
  },
  {
    "text": "like what type of protections you're trying to apply before you start the process and if you wanted to change that",
    "start": "206200",
    "end": "212200"
  },
  {
    "text": "list you have to like make a new profile with the changed list stop the process",
    "start": "212200",
    "end": "217599"
  },
  {
    "text": "we start the process against the new set of profile so this it's a little I mean when you think about like when it was",
    "start": "217599",
    "end": "223720"
  },
  {
    "text": "created and what it was created for this kind of makes sense but now we're in this Dynamic container age and things are a little bit",
    "start": "223720",
    "end": "231280"
  },
  {
    "text": "different as far as like how we use it inside of kubernetes or in a cloud native way there is actually an",
    "start": "233200",
    "end": "239840"
  },
  {
    "text": "incredible project that's called the security profiles operator definitely worth checking out if you're interested",
    "start": "239840",
    "end": "245120"
  },
  {
    "text": "in set comp app armor or SE Linux this in my mind is the state-of-the-art for",
    "start": "245120",
    "end": "250879"
  },
  {
    "text": "this right because as I said you have to kind of know like you have to create a profile you have to make that profile available on disk and all of that has to",
    "start": "250879",
    "end": "258280"
  },
  {
    "text": "line up before you can even start the application because set comp when you when you're using uh secure Computing",
    "start": "258280",
    "end": "264479"
  },
  {
    "text": "you have to know that before you start the application up and this means like before Docker run happens",
    "start": "264479",
    "end": "270240"
  },
  {
    "text": "all of those pieces have to be in place and this tool makes that way way easier not only does it make it easier to",
    "start": "270240",
    "end": "276600"
  },
  {
    "text": "actually handle the distribution of security profiles but it also makes it easier to do the discovery of them to",
    "start": "276600",
    "end": "281919"
  },
  {
    "text": "learn like what is normal for your application all right so I will talk",
    "start": "281919",
    "end": "288240"
  },
  {
    "text": "about like what is ebpf so I think many of you know like what is EF at this point there has been",
    "start": "288240",
    "end": "294919"
  },
  {
    "text": "a lot of talks in this conference around it so I will just do like a very quick High l",
    "start": "294919",
    "end": "300520"
  },
  {
    "text": "introduction so ebpf allows you to extend the Linux kernel and then",
    "start": "300520",
    "end": "305919"
  },
  {
    "text": "basically it allows you write some C code or C program load it into the kernel with some restrictions of course",
    "start": "305919",
    "end": "312080"
  },
  {
    "text": "it has to be safe it cannot crash the kernel it also cannot run forever right",
    "start": "312080",
    "end": "318080"
  },
  {
    "text": "and then what the C coder C program allows you to do it allows you to extract information run some logic or",
    "start": "318080",
    "end": "325319"
  },
  {
    "text": "make decisions and there are lot of layers and at all almost everywhere we",
    "start": "325319",
    "end": "331120"
  },
  {
    "text": "can actually hook into the kernel related to for example networking like tcpip on the socket level related to for",
    "start": "331120",
    "end": "338840"
  },
  {
    "text": "example file access using file descriptors or for example at the system call layer and then this part will be",
    "start": "338840",
    "end": "346440"
  },
  {
    "text": "actually important for this talk and then I would like to call out like two really nice advantages here so this can",
    "start": "346440",
    "end": "354120"
  },
  {
    "text": "be done dynamically so imagine this is very useful if you have like multiple clusters multiple name spaces multiple",
    "start": "354120",
    "end": "361160"
  },
  {
    "text": "Cloud providers and then basically you can just like flip your BPF program on",
    "start": "361160",
    "end": "366440"
  },
  {
    "text": "the Fly imagine you want to block for example a new set of sensitive system calls or you would like to block a new",
    "start": "366440",
    "end": "372840"
  },
  {
    "text": "CV you could actually do this without even uh rebooting your node rebooting",
    "start": "372840",
    "end": "378720"
  },
  {
    "text": "your for example management pod or even rebooting for example your application so during this like upgrade everything",
    "start": "378720",
    "end": "385919"
  },
  {
    "text": "keeps running and then the upgrade fway is seamless and then the other nice aspect that it's",
    "start": "385919",
    "end": "392599"
  },
  {
    "text": "like minimally invasive so since you don't need to wake up user space all the time like it just takes a way more less",
    "start": "392599",
    "end": "400160"
  },
  {
    "text": "CPU and memory and then so why is it interesting like what are the answers that or what",
    "start": "400160",
    "end": "407080"
  },
  {
    "text": "are the questions that we can answer with DPF so you can ask questions like okay what binaries have run in the past",
    "start": "407080",
    "end": "413720"
  },
  {
    "text": "or are running now in my system and then this system can be for example kubernetes nodes kubernetes work clads",
    "start": "413720",
    "end": "420080"
  },
  {
    "text": "external VMS or what version of these like binaries or libraries are running",
    "start": "420080",
    "end": "425440"
  },
  {
    "text": "now like are there any for example vulnerable openl versions or what",
    "start": "425440",
    "end": "431080"
  },
  {
    "text": "network connections have been made for example from myties workload like let's",
    "start": "431080",
    "end": "436120"
  },
  {
    "text": "imagine you have like a KU is sp running and that for an hour and then it just like start to reach out the malicious",
    "start": "436120",
    "end": "443080"
  },
  {
    "text": "bucket you kind of would like to know that or for example were there any sensitive file accessed um um from that",
    "start": "443080",
    "end": "450800"
  },
  {
    "text": "workload and then of course like what system calls have been executed from my workload were there any sensitive system",
    "start": "450800",
    "end": "457560"
  },
  {
    "text": "calls invoked were there anv exploited and so on and then we would like to Bas",
    "start": "457560",
    "end": "465639"
  },
  {
    "text": "this Solution on tetragon which is basically like an ebpf based runtime security observability and enforcement",
    "start": "465639",
    "end": "472639"
  },
  {
    "text": "tool and then it's actually just an agent like it runs on on the top of any",
    "start": "472639",
    "end": "478199"
  },
  {
    "text": "Linux operating system in in case of kubernetes it's actually a demon set and",
    "start": "478199",
    "end": "483319"
  },
  {
    "text": "then in case of like external VMS it's a system Dem manage binary and then it's uses ebpf to extract data from uh from",
    "start": "483319",
    "end": "492720"
  },
  {
    "text": "many layers and then you can see it on the pictures we have visibility into Data access file access we have",
    "start": "492720",
    "end": "500000"
  },
  {
    "text": "visibility into Linux namespaces process capabilities and then actually exchanges",
    "start": "500000",
    "end": "506280"
  },
  {
    "text": "and then network connectivity s3f for on the soot layer or S7 TLS HTTP DNS and",
    "start": "506280",
    "end": "514279"
  },
  {
    "text": "then what's going to be important is actually the process execution and the system",
    "start": "514279",
    "end": "521440"
  },
  {
    "text": "activity awesome yeah so in my mind the tetron piece is definitely state-of-the-art for the other side of",
    "start": "522279",
    "end": "527480"
  },
  {
    "text": "the right so we talked about set comp profile operator being the state of the art for set comp ebpf absolutely tetron",
    "start": "527480",
    "end": "534360"
  },
  {
    "text": "is the state-of-the art so I want to give a huge shout out to Sasha guner and the team that are actually working on this project because it is a a a big",
    "start": "534360",
    "end": "542000"
  },
  {
    "text": "undertaking the SBO does like I said does all of the hard work of generating and pushing security profiles to all of",
    "start": "542000",
    "end": "547040"
  },
  {
    "text": "the nodes and the and as I mentioned before the profile must be present on the disk before the container can",
    "start": "547040",
    "end": "554560"
  },
  {
    "text": "start now this is actually I thought this was pretty fascinating when I was doing this work but what I learned when",
    "start": "554600",
    "end": "560160"
  },
  {
    "text": "I was kind of looking at the security profile operator is that like you can actually use it to say start a container",
    "start": "560160",
    "end": "566640"
  },
  {
    "text": "on the pause container which doesn't make any system calls itself right and if you do that you can see all of the",
    "start": "566640",
    "end": "571920"
  },
  {
    "text": "system calls that the given container runtime requires now this is interesting",
    "start": "571920",
    "end": "577120"
  },
  {
    "text": "because it means that in setcom right you have to include the system the",
    "start": "577120",
    "end": "582200"
  },
  {
    "text": "system calls that the container runtime requires as well as any system calls",
    "start": "582200",
    "end": "587720"
  },
  {
    "text": "that your application requires right so depending on if you're using crun or run",
    "start": "587720",
    "end": "593519"
  },
  {
    "text": "C like they're actually different sets I mean they differ one uh crun uses 65 system calls just for the runtime and",
    "start": "593519",
    "end": "600760"
  },
  {
    "text": "run C uses 78 and some of those system calls seem kind of risky right like some of those things like unshare or being",
    "start": "600760",
    "end": "607480"
  },
  {
    "text": "able to change the permissions of a of an a binary and make it available to anything or like there are some system",
    "start": "607480",
    "end": "613880"
  },
  {
    "text": "calls in that sit that could represent risk to allowing you to do container escapes and that sort of",
    "start": "613880",
    "end": "619720"
  },
  {
    "text": "stuff so that was kind of a surprise for me when I was actually digging into this",
    "start": "619720",
    "end": "625680"
  },
  {
    "text": "but yeah it's it's super interesting that they that they use different sets of uh of system",
    "start": "625680",
    "end": "631240"
  },
  {
    "text": "calls so one of the things I like about the EF and the set comp thing is that",
    "start": "631240",
    "end": "636760"
  },
  {
    "text": "you don't it's not one or the other like you're not required to just use one or the other you could actually use them",
    "start": "636760",
    "end": "642519"
  },
  {
    "text": "both together right so if because of the list of system calls that you must include for the container runtime if you",
    "start": "642519",
    "end": "649880"
  },
  {
    "text": "said well okay it's fine if the container runtime uses them but I want to be notified when my application",
    "start": "649880",
    "end": "655639"
  },
  {
    "text": "drives to use unshare right I want to be notified when my application does try to make these restricted or or what I",
    "start": "655639",
    "end": "662240"
  },
  {
    "text": "consider to be high-risk system calls I have to allow them because I'm in a container runtime but that doesn't mean",
    "start": "662240",
    "end": "667639"
  },
  {
    "text": "I don't want to know when they happen right and that's where I feel like that's where the T the two of them",
    "start": "667639",
    "end": "672720"
  },
  {
    "text": "together really represent an incredible capability all right so I will talk",
    "start": "672720",
    "end": "678560"
  },
  {
    "text": "about like for example how ebpf and tetragon could actually like restick those system cause like the known bad",
    "start": "678560",
    "end": "685320"
  },
  {
    "text": "sensitive um system cause so how petragon implements likees",
    "start": "685320",
    "end": "691200"
  },
  {
    "text": "identity of enforcement where it implements it implements it via a custom resource definition it's called sandbox",
    "start": "691200",
    "end": "697959"
  },
  {
    "text": "policies and then I will just talk about like how does it work and then what the",
    "start": "697959",
    "end": "703279"
  },
  {
    "text": "engineering team needed to implement in the BPF side to work correctly so we have like three main",
    "start": "703279",
    "end": "709839"
  },
  {
    "text": "components here and then I will just start with the first which is the policy definition itself so as you can see on",
    "start": "709839",
    "end": "717720"
  },
  {
    "text": "the on the left side or on the right side these uh sandbox policies can be",
    "start": "717720",
    "end": "723480"
  },
  {
    "text": "namespaced or cluster wide with pod label selectors and then it's important to call out that these are like very",
    "start": "723480",
    "end": "730600"
  },
  {
    "text": "declarative so you can you can actually specify like okay this is the name space that I would like to apply this policy",
    "start": "730600",
    "end": "737160"
  },
  {
    "text": "on or this is the Pod that I would like to apply the policy on and then after",
    "start": "737160",
    "end": "742399"
  },
  {
    "text": "that you can just say like hey these are the known bad sensitive system cause that I would like to take some action on",
    "start": "742399",
    "end": "749959"
  },
  {
    "text": "and then after that you can actually say like hey I would like to get an alert like AIT or I actually want to block",
    "start": "749959",
    "end": "756240"
  },
  {
    "text": "those system Cs and then two nice advantages here one is them that it's",
    "start": "756240",
    "end": "762199"
  },
  {
    "text": "actually Dynamic so you can just like modify this policies on the Fly you can just do like CU CLE apply and then you",
    "start": "762199",
    "end": "769240"
  },
  {
    "text": "could do that after the P has started and then the second advantages here is",
    "start": "769240",
    "end": "774839"
  },
  {
    "text": "that um it's like very high level so engineering the BPF engineer can still",
    "start": "774839",
    "end": "779880"
  },
  {
    "text": "innovate and then use um newer BPF or kernel features meanwhile the user",
    "start": "779880",
    "end": "785320"
  },
  {
    "text": "doesn't even have to do anything it just they just need to modify this policy and then this can be like one",
    "start": "785320",
    "end": "792279"
  },
  {
    "text": "example alert that you would get like during a sensitive system calling book so for example you could see like hey on",
    "start": "792279",
    "end": "799199"
  },
  {
    "text": "the sensitive namespace Comm namespace there was an engine xod and then well it",
    "start": "799199",
    "end": "804360"
  },
  {
    "text": "invoked the CIS Mount system call and tried to mount like Dev SD to the dev as",
    "start": "804360",
    "end": "809760"
  },
  {
    "text": "the um f system from the node to the TMP directory and then you could see like",
    "start": "809760",
    "end": "815680"
  },
  {
    "text": "the capabilities Linux name spaces and then the process credentials so the second part is like",
    "start": "815680",
    "end": "822519"
  },
  {
    "text": "doent is identity of our selectors and then so this can be like",
    "start": "822519",
    "end": "827800"
  },
  {
    "text": "the namespace policies itself or the Pod label filters and then it's important to",
    "start": "827800",
    "end": "833800"
  },
  {
    "text": "note that for observability the inernal filtering is important for like like",
    "start": "833800",
    "end": "839519"
  },
  {
    "text": "performance reasons so we can keep the CPU and the memory low but you can leave",
    "start": "839519",
    "end": "845759"
  },
  {
    "text": "with the filtering or at least some of the filtering living in user space but for enforcement it's important to note",
    "start": "845759",
    "end": "853120"
  },
  {
    "text": "that user space filtering is not an option like the filtering has to happen in kernel in line with the operation and",
    "start": "853120",
    "end": "860279"
  },
  {
    "text": "then what that means like those kubernetes identity of our selectors like both on the workload side needs to",
    "start": "860279",
    "end": "866720"
  },
  {
    "text": "map to the BPF code so how we how we implemented it well we",
    "start": "866720",
    "end": "872480"
  },
  {
    "text": "actually map the these workloads to c groups so c groups are a Linux Linux",
    "start": "872480",
    "end": "878199"
  },
  {
    "text": "mechanism to actually manage and isolate containers so for example container RS",
    "start": "878199",
    "end": "883560"
  },
  {
    "text": "container the cryo they create their own C group like Hier this is just like a very simple example you can see uh",
    "start": "883560",
    "end": "891440"
  },
  {
    "text": "systemd on the top and then you can see the kuties pods um under Cube pods and",
    "start": "891440",
    "end": "898680"
  },
  {
    "text": "then us usually you have like one C group per spot and then basically one C",
    "start": "898680",
    "end": "904079"
  },
  {
    "text": "group per container so what what we do on the tetragon side it's actually pretty",
    "start": "904079",
    "end": "909800"
  },
  {
    "text": "simple we create a BPF map and then basically on that map we assign a unique",
    "start": "909800",
    "end": "916199"
  },
  {
    "text": "ID to each policy and that that Maps another map where we keep actually the",
    "start": "916199",
    "end": "923040"
  },
  {
    "text": "siges for the containers uh to which this policy applies so whenever you actually apply a",
    "start": "923040",
    "end": "930319"
  },
  {
    "text": "new policy you say like hey keep Cal apply well tetragon actually updates or",
    "start": "930319",
    "end": "935639"
  },
  {
    "text": "initializes the map so it looks up actually that like three group um hierarchy under the three group uh file",
    "start": "935639",
    "end": "942759"
  },
  {
    "text": "system checks like which commities work clads m m matches to which C group and",
    "start": "942759",
    "end": "948040"
  },
  {
    "text": "then whether it whether the policy actually applies to it and then puts it into the map and then after that while",
    "start": "948040",
    "end": "954920"
  },
  {
    "text": "tetron loads the BPF programs into the kernel and add this point you have the",
    "start": "954920",
    "end": "960480"
  },
  {
    "text": "BPF program loaded and then basically they check if the policy applies to that",
    "start": "960480",
    "end": "965839"
  },
  {
    "text": "certain process and then whenever there is like new pods coming or there are like pod",
    "start": "965839",
    "end": "971920"
  },
  {
    "text": "label updates well we tetr the datron agent gets a notification from the API",
    "start": "971920",
    "end": "978000"
  },
  {
    "text": "server and then it just like keeps updating the map and then the last piece is we call",
    "start": "978000",
    "end": "985759"
  },
  {
    "text": "it like reuse time window or for example like an advanced conf configuration so it can happen that you",
    "start": "985759",
    "end": "993880"
  },
  {
    "text": "for example keep Cal apply aod the KU his API server reaches out to cuet cuat",
    "start": "993880",
    "end": "1000040"
  },
  {
    "text": "reaches out to The Container run time and then it starts the container but it can still happen that this container",
    "start": "1000040",
    "end": "1006480"
  },
  {
    "text": "starts with a policy appli to it but without the policy actually being",
    "start": "1006480",
    "end": "1012800"
  },
  {
    "text": "loaded it's because the tetron agent didn't get the notification from the",
    "start": "1012800",
    "end": "1018000"
  },
  {
    "text": "kubernetes AP server yet so I didn't actually have time to set up um the BPF",
    "start": "1018000",
    "end": "1024640"
  },
  {
    "text": "programs so as an advanced configuration what we did we actually like um",
    "start": "1024640",
    "end": "1030558"
  },
  {
    "text": "implemented a demon set and then what it does is just hooks into the underlying",
    "start": "1030559",
    "end": "1036520"
  },
  {
    "text": "container run time by using configuring runtime Hooks and then say whenever",
    "start": "1036520",
    "end": "1043079"
  },
  {
    "text": "there is like a new container starting then please execute this binary um from",
    "start": "1043079",
    "end": "1048919"
  },
  {
    "text": "from the demon set and then what it does it actually just reaches out to the tetragon agent the tetragon agent",
    "start": "1048919",
    "end": "1057280"
  },
  {
    "text": "basically Updates this map and then say it goes back to the demon set and then",
    "start": "1057280",
    "end": "1062440"
  },
  {
    "text": "it goes back to the container run time I say like hey the the policy filter BPF",
    "start": "1062440",
    "end": "1067679"
  },
  {
    "text": "map is set up the policy is actually configured and then uh you can actually start that",
    "start": "1067679",
    "end": "1074520"
  },
  {
    "text": "container and then one Minor Details if the tetron agent is done then basically",
    "start": "1074520",
    "end": "1080760"
  },
  {
    "text": "we say okay we cannot actually guarantee that the policy is set up and then it will be applied so please don't start",
    "start": "1080760",
    "end": "1087720"
  },
  {
    "text": "the container and then of course it's actually like configurable so you can say like okay this Nam space is actually",
    "start": "1087720",
    "end": "1093799"
  },
  {
    "text": "trusted and then or for example these workloads are trusted and then um those",
    "start": "1093799",
    "end": "1100200"
  },
  {
    "text": "Nam spaces or those pods can start so for example this can be Cube system so",
    "start": "1100200",
    "end": "1105960"
  },
  {
    "text": "the main services and tetragon agent are actually able to start and then after that I will just",
    "start": "1105960",
    "end": "1114080"
  },
  {
    "text": "like play a quick demo video which would actually like block sensitive system",
    "start": "1114080",
    "end": "1120400"
  },
  {
    "text": "calls uh or like bad known system calls or on a sensitive kuties namespace so",
    "start": "1120400",
    "end": "1127080"
  },
  {
    "text": "what I did here is like we used on AWS cluster 10 nodes the running Amazon Lin",
    "start": "1127080",
    "end": "1133679"
  },
  {
    "text": "tetron is running on each node as a demon set you will see the tetron runtime hooks also so as a demon set and",
    "start": "1133679",
    "end": "1140600"
  },
  {
    "text": "then I I configured a sensitive name space kubernetes name space and then",
    "start": "1140600",
    "end": "1145679"
  },
  {
    "text": "there will be like an engine export running on it and then what I will do I will apply a sensitive C calls tetragon",
    "start": "1145679",
    "end": "1153280"
  },
  {
    "text": "sandbox policy and then what I will do after that I will just like keep Catal exac into the engine xod try to execute",
    "start": "1153280",
    "end": "1160840"
  },
  {
    "text": "some commands and then which would invoke sensitive system calls and then you would see that all of those will be",
    "start": "1160840",
    "end": "1167360"
  },
  {
    "text": "blocked so I will just play the",
    "start": "1167360",
    "end": "1173240"
  },
  {
    "text": "video so here I'm already connected to the uh kubernetes cluster and then we",
    "start": "1178440",
    "end": "1184360"
  },
  {
    "text": "can actually see that um on the sensitive Nam space kubernetes name space there is an engine explode up and",
    "start": "1184360",
    "end": "1192080"
  },
  {
    "text": "running and then in the middle I will actually show the tetron sento policy um",
    "start": "1192080",
    "end": "1199360"
  },
  {
    "text": "which I will apply to this sensitive namespace this namespace and",
    "start": "1199360",
    "end": "1204760"
  },
  {
    "text": "then this is going to be um thiso and",
    "start": "1204760",
    "end": "1209880"
  },
  {
    "text": "then what it does is actually pretty simple it enforces us set of like known",
    "start": "1209880",
    "end": "1216480"
  },
  {
    "text": "bad system calls for example C Sage route CIS clock set time CIS pivot route",
    "start": "1216480",
    "end": "1222400"
  },
  {
    "text": "C Mound c medis um C on share C sets and",
    "start": "1222400",
    "end": "1227919"
  },
  {
    "text": "so on and then in additionally blocking the system calls we will get like one event",
    "start": "1227919",
    "end": "1235360"
  },
  {
    "text": "when the system calls are going to be invoked so I will just apply this um",
    "start": "1235360",
    "end": "1241240"
  },
  {
    "text": "sensitive CIS CS tetron sandbox policy on this specific kubernetes name",
    "start": "1241240",
    "end": "1247280"
  },
  {
    "text": "space we can actually see that it was created and then I will just double",
    "start": "1247280",
    "end": "1253159"
  },
  {
    "text": "check if the policy got installed um very quickly and then we can see that um",
    "start": "1253159",
    "end": "1259960"
  },
  {
    "text": "it was it was installed 11 seconds ago and then up and running and then as a next step on the",
    "start": "1259960",
    "end": "1267720"
  },
  {
    "text": "bottom terminal I'm actually inside the tetragon uh container on the same node",
    "start": "1267720",
    "end": "1274039"
  },
  {
    "text": "where the engine xod is running so I can actually start to observe these like uh",
    "start": "1274039",
    "end": "1279520"
  },
  {
    "text": "security audit or enforcement Json event which will be uh coming from the engine",
    "start": "1279520",
    "end": "1285279"
  },
  {
    "text": "X pod so I will just start to do",
    "start": "1285279",
    "end": "1291520"
  },
  {
    "text": "that and then as a last step I will just keep P exac into the um engine X pod on",
    "start": "1291840",
    "end": "1298559"
  },
  {
    "text": "the top and then I will execute some commands which would invoke those sensitive system",
    "start": "1298559",
    "end": "1305760"
  },
  {
    "text": "CS so we can actually see that uh on the on the bottom that the bean bash binary",
    "start": "1305760",
    "end": "1312000"
  },
  {
    "text": "was executed from the engine xod this is one um runtime execution event and then",
    "start": "1312000",
    "end": "1318960"
  },
  {
    "text": "as a first command I will just try to run Sage",
    "start": "1318960",
    "end": "1324360"
  },
  {
    "text": "root and then we can see that the operation was not permitted which means that the um Cisco enforcement policy was",
    "start": "1324360",
    "end": "1331919"
  },
  {
    "text": "actually working and then if we go to the bottom we can actually see the alert",
    "start": "1331919",
    "end": "1337720"
  },
  {
    "text": "as well so we can see that on the sensitive name space um from the engine",
    "start": "1337720",
    "end": "1343799"
  },
  {
    "text": "X pod there was a user as being Sage root binary which tried to actually",
    "start": "1343799",
    "end": "1349000"
  },
  {
    "text": "invoke the CCH sensitive system call and then we can actually say that um it was",
    "start": "1349000",
    "end": "1354799"
  },
  {
    "text": "enforced so as a next step I will I will try to execute for example Mount and",
    "start": "1354799",
    "end": "1361240"
  },
  {
    "text": "then Mount the T sd1 5 system from the note to the TMP directory on the Pod and",
    "start": "1361240",
    "end": "1367600"
  },
  {
    "text": "then we can actually see um that it was not successful as well we got um",
    "start": "1367600",
    "end": "1373520"
  },
  {
    "text": "permission denied error and then in the events we can actually see that the um",
    "start": "1373520",
    "end": "1379440"
  },
  {
    "text": "the CIS mode system call was enforced from the users SB Mount binary on the",
    "start": "1379440",
    "end": "1384480"
  },
  {
    "text": "engine export and then as a last step I can I can just try to execute for",
    "start": "1384480",
    "end": "1390159"
  },
  {
    "text": "example pivot route and then we will see that the",
    "start": "1390159",
    "end": "1396000"
  },
  {
    "text": "operation failed as well and then in the alerts we can actually see the",
    "start": "1396000",
    "end": "1401320"
  },
  {
    "text": "enforcement event the same way as we saw before on from the engine xod on the",
    "start": "1401320",
    "end": "1407080"
  },
  {
    "text": "sensitive name space um the C pivot rout system call was not s successful from",
    "start": "1407080",
    "end": "1413360"
  },
  {
    "text": "the user as being pivot rout binary all right and then as a last step",
    "start": "1413360",
    "end": "1422200"
  },
  {
    "text": "we will just do a quick comparision um between the two because",
    "start": "1422200",
    "end": "1428320"
  },
  {
    "text": "both of both of those Technologies has like um advantages and then",
    "start": "1428320",
    "end": "1433400"
  },
  {
    "text": "disadvantages so as Duffy mentioned so on the ebpf side advantages can be like",
    "start": "1433400",
    "end": "1439919"
  },
  {
    "text": "it's Dynamic right so the kues application doesn't need to be restarted for the policy to take effect or the",
    "start": "1439919",
    "end": "1446640"
  },
  {
    "text": "underlying cuberes node doesn't need to be reputed it can be also very flexible",
    "start": "1446640",
    "end": "1451799"
  },
  {
    "text": "so you mentioned like kuties identity of our metadata like pod labels name spaces but you could do like binaries hashes or",
    "start": "1451799",
    "end": "1459720"
  },
  {
    "text": "you could actually filter on like process capabilities Linux name spasic Unix credentials well disadvantages can be",
    "start": "1459720",
    "end": "1467159"
  },
  {
    "text": "like since we are using ebpf the BTF metadata file needs to be present on the Node and then of course like newor",
    "start": "1467159",
    "end": "1474440"
  },
  {
    "text": "kernel would be needed for example for advanced features so for example if you want to like multi support you might",
    "start": "1474440",
    "end": "1481760"
  },
  {
    "text": "need like a 6.1 kernel to be able to load the policy faster but on the secum",
    "start": "1481760",
    "end": "1490159"
  },
  {
    "text": "side so on the secum side some one of the advantages is that there is no window of time between the process",
    "start": "1490159",
    "end": "1496039"
  },
  {
    "text": "starting and and the process being protected um however so and and there's also",
    "start": "1496039",
    "end": "1501480"
  },
  {
    "text": "really good tooling like the like the security operator tooling that I was talking about before gives you the ability to actually discover what system",
    "start": "1501480",
    "end": "1507760"
  },
  {
    "text": "calls your application is making at runtime you can create like basically a profile recording and then learn from",
    "start": "1507760",
    "end": "1513480"
  },
  {
    "text": "that profile recording what that list of system calls needs to be to be able to allow your application and you can",
    "start": "1513480",
    "end": "1518559"
  },
  {
    "text": "actually record that for as long as it takes for you to feel comfortable with the fact that you've made all the system calls you're going to make right so",
    "start": "1518559",
    "end": "1524840"
  },
  {
    "text": "really good tooling out there some of the disadvantages are it's hard to iterate right if you're going to make a",
    "start": "1524840",
    "end": "1530159"
  },
  {
    "text": "change if you need to make a change to that policy that means restarting the application and that's not something",
    "start": "1530159",
    "end": "1535440"
  },
  {
    "text": "that a lot of people like can to do in production um uh the you also and as I mentioned",
    "start": "1535440",
    "end": "1542600"
  },
  {
    "text": "before you also have to you also have to allow for all of the system calls required by the container runtime not",
    "start": "1542600",
    "end": "1548320"
  },
  {
    "text": "just those for your application which is a surprise and that's where again I feel like the the combination of these two",
    "start": "1548320",
    "end": "1554399"
  },
  {
    "text": "really shines because you can actually you can you can allow for the container run time and then further limit um one",
    "start": "1554399",
    "end": "1560520"
  },
  {
    "text": "of the other pieces to this is set comp again because it was built in a time when there were just applications on",
    "start": "1560520",
    "end": "1565760"
  },
  {
    "text": "servers it wasn't a container time it means that when you get events if you're trying to do learning that that profile",
    "start": "1565760",
    "end": "1572000"
  },
  {
    "text": "learning stuff you're not going to get all of the metadata that like tetron gives you right tetron for each of those",
    "start": "1572000",
    "end": "1577919"
  },
  {
    "text": "events actually says it was this pod it was this node it was this time Etc s comp is like it was this it was this PID",
    "start": "1577919",
    "end": "1585200"
  },
  {
    "text": "that tried to make this system call and you're like I'll figure that out",
    "start": "1585200",
    "end": "1591559"
  },
  {
    "text": "yeah all right so yeah thank you everyone for coming and I will open up for K if you're in interested in",
    "start": "1592480",
    "end": "1599760"
  },
  {
    "text": "tetragon please go to the celium tetragon repository or join the USS lection now and actually the engineer",
    "start": "1599760",
    "end": "1606200"
  },
  {
    "text": "who implemented the kuber's identity of selectors are sitting over there so if you have questions then you can also ask",
    "start": "1606200",
    "end": "1614120"
  },
  {
    "text": "thank you thank you so much for being here",
    "start": "1614120",
    "end": "1618799"
  },
  {
    "text": "if you have questions there's two microphones right in the middle you hello so um is there any",
    "start": "1621960",
    "end": "1630679"
  },
  {
    "text": "plans to add like host based policies for tetron so that you could Define like",
    "start": "1630679",
    "end": "1637000"
  },
  {
    "text": "a you know for this node group um you can have these rules on the host itself",
    "start": "1637000",
    "end": "1643120"
  },
  {
    "text": "so kuet can and cannot do certain things for example yeah I mean so you could",
    "start": "1643120",
    "end": "1648440"
  },
  {
    "text": "specify like the host bid right so you could actually match on like host level processes as well oh perfect thank",
    "start": "1648440",
    "end": "1655919"
  },
  {
    "text": "you um for the set comp profiles are they host wide or are they per container",
    "start": "1655919",
    "end": "1661720"
  },
  {
    "text": "to be defined yeah so the setcom profiles can actually be per container per process really right so if you had",
    "start": "1661720",
    "end": "1667120"
  },
  {
    "text": "multiple containers in a pod you can define a profile for each of the containers um but it is per process the",
    "start": "1667120",
    "end": "1674399"
  },
  {
    "text": "way the way you should think about it um do I still need SE Linux or up",
    "start": "1674399",
    "end": "1681760"
  },
  {
    "text": "armor uh if I use tetron so they do different things right SE comp is more about protecting the kernel app armor",
    "start": "1681760",
    "end": "1688720"
  },
  {
    "text": "and SE Linux are more they they go a lot farther into protecting a lot of the other shared resources in the host right",
    "start": "1688720",
    "end": "1695240"
  },
  {
    "text": "like the file system access like whether you know like if you look into SE Linux and the container orchestration side of",
    "start": "1695240",
    "end": "1701279"
  },
  {
    "text": "things it actually cares that the uh uid of the process running and its",
    "start": "1701279",
    "end": "1706480"
  },
  {
    "text": "permissions as it relates to any file system access that might be on the underlying host so even mounting a",
    "start": "1706480",
    "end": "1711760"
  },
  {
    "text": "volume in with SE Linux you have to be very specific about making sure you have the right um the right permissions to",
    "start": "1711760",
    "end": "1717600"
  },
  {
    "text": "actually even allow for that uh so they do they do different things I do think that it's a belt and suspenders approach",
    "start": "1717600",
    "end": "1723279"
  },
  {
    "text": "I don't think it's just one or the other however like what's what's really interesting I guess to your point is",
    "start": "1723279",
    "end": "1729120"
  },
  {
    "text": "like when you look at the ebpf capabilities it is actually much more wide ranging right so like if you get into like enforcing these things with",
    "start": "1729120",
    "end": "1735960"
  },
  {
    "text": "tetron you can actually care more about file system you can care more about lots more of these things than just set comp",
    "start": "1735960",
    "end": "1742120"
  },
  {
    "text": "and I think that's pretty interesting for um datr if I have a",
    "start": "1742120",
    "end": "1750080"
  },
  {
    "text": "cluster with many nodes let's say 20 nodes the how does the policies get",
    "start": "1750080",
    "end": "1756279"
  },
  {
    "text": "updated dynamically how easy is that do I have to touch each note to get a policy update or there's a system behind",
    "start": "1756279",
    "end": "1762600"
  },
  {
    "text": "that I'm having a hard time with you can you get a little closer to the microphone sorry sorry no I think I understood the question okay so",
    "start": "1762600",
    "end": "1768799"
  },
  {
    "text": "basically we have like the tetron agent and then we have like an operator and then the operator actually takes care of",
    "start": "1768799",
    "end": "1774720"
  },
  {
    "text": "the crd management So when you say like CU CLE apply like it will get automatically updated on each node",
    "start": "1774720",
    "end": "1781399"
  },
  {
    "text": "depending where the operator is so it's a synchronous update immediate update",
    "start": "1781399",
    "end": "1787519"
  },
  {
    "text": "thank you you mentioned that uh to do the blocking uh you have to do the filtering",
    "start": "1787519",
    "end": "1793880"
  },
  {
    "text": "in the kernel um is that a global parameter so so that if uh if I want to",
    "start": "1793880",
    "end": "1799360"
  },
  {
    "text": "do blocking I have to do all my processing of stuff in the kernel or is is uh is stuff still able to go out um",
    "start": "1799360",
    "end": "1807120"
  },
  {
    "text": "for external processing as well it's in the Kel but if you interested in the BPF",
    "start": "1807120",
    "end": "1812600"
  },
  {
    "text": "detail implementation I think Jan corus can chime in here it is interesting I think May oh sorry I think maybe part of",
    "start": "1812600",
    "end": "1818640"
  },
  {
    "text": "your question is like if I write an ebpf program can I have that filter on like everything that's happening against that",
    "start": "1818640",
    "end": "1825039"
  },
  {
    "text": "against that pattern that I'm watching for as opposed to can I hook this to specific applications and watch for",
    "start": "1825039",
    "end": "1830519"
  },
  {
    "text": "those applications to make things to do things they don't expect is that where you're going yeah granularity there so",
    "start": "1830519",
    "end": "1835600"
  },
  {
    "text": "that um you can you don't that you can have the best of both worlds where you can still send stuff out for external",
    "start": "1835600",
    "end": "1841440"
  },
  {
    "text": "processing but then block if you need to inside yeah in that scenario it's a kind you can do a little bit of both right",
    "start": "1841440",
    "end": "1846960"
  },
  {
    "text": "like you can actually watch for like any system calls we made and you can correlate them based on the events that",
    "start": "1846960",
    "end": "1852360"
  },
  {
    "text": "we're catching for like what's actually watching but when it comes to enforcement like you're kind of you you are trying to",
    "start": "1852360",
    "end": "1858480"
  },
  {
    "text": "key that enforcement on specific applications that you're matching right but if you're just if you just want to be inundated with like what is",
    "start": "1858480",
    "end": "1864720"
  },
  {
    "text": "everything doing we can definitely show you",
    "start": "1864720",
    "end": "1868360"
  },
  {
    "text": "that all right well thank you again thank you so much",
    "start": "1871919",
    "end": "1877919"
  }
]