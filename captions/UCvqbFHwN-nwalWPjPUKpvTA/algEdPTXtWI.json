[
  {
    "text": "good afternoon everyone once again so uh I think today's topic is",
    "start": "3000",
    "end": "8400"
  },
  {
    "text": "very different it is Dapper so it's distributed application runtime not sure",
    "start": "8400",
    "end": "13759"
  },
  {
    "text": "how many of you have heard about it because uh relatively new topic uh in",
    "start": "13759",
    "end": "19039"
  },
  {
    "text": "open source world uh almost threey old uh project to cncf it is a uh incubating",
    "start": "19039",
    "end": "25840"
  },
  {
    "text": "incubating cncf Cloud native Computing foundation and now it from last years it's taking really traction and as you",
    "start": "25840",
    "end": "32880"
  },
  {
    "text": "can see this is basically uh we use deer to build the distributed application faster so it's",
    "start": "32880",
    "end": "39079"
  },
  {
    "text": "all about you know distributed application so kind of a advanced topic so just a kind of a heads up uh you know",
    "start": "39079",
    "end": "46239"
  },
  {
    "text": "prerequisite or I understand or you know target audience are kind of at least",
    "start": "46239",
    "end": "51360"
  },
  {
    "text": "well aware about the microservice architecture some of the patterns uh majorly the docker",
    "start": "51360",
    "end": "58280"
  },
  {
    "text": "kubernetes part of it some of the contain stuff and you know how we build the even driven architecture basically or how do we build the even driven",
    "start": "58280",
    "end": "64920"
  },
  {
    "text": "application okay so that way it will be easy for you to",
    "start": "64920",
    "end": "70438"
  },
  {
    "text": "understand okay so I'm on my first slide and um I think as I talked about right so deer is all about distributed",
    "start": "73080",
    "end": "79000"
  },
  {
    "text": "application runtime right so it's all about for distributed application so let's understand distribute application",
    "start": "79000",
    "end": "84640"
  },
  {
    "text": "we all know that but just to understand to give a high level idea so we all know distrib application right as you can see",
    "start": "84640",
    "end": "91320"
  },
  {
    "text": "my screen it's all about uh the application which runs on multiple",
    "start": "91320",
    "end": "96840"
  },
  {
    "text": "devices together to achieve a common goal and uh it spread across various",
    "start": "96840",
    "end": "102040"
  },
  {
    "text": "computational nodes right and typically know it typically communicate with various mechanism messages is one of the",
    "start": "102040",
    "end": "108439"
  },
  {
    "text": "major way to communicate and of course they have a shared objective so just a if you look at the distribut application",
    "start": "108439",
    "end": "116079"
  },
  {
    "text": "workflow over here you can see shopping cart notification checkout payment",
    "start": "116079",
    "end": "121560"
  },
  {
    "text": "inventory shipping are some of these applications it's microservices or you can assume it's application and they are",
    "start": "121560",
    "end": "128679"
  },
  {
    "text": "talking to each other via message okay so this is a standard distributed application",
    "start": "128679",
    "end": "134120"
  },
  {
    "text": "workflow now uh if you look at as a developer right what are the challenges if I'll ask you to build a distributed",
    "start": "134120",
    "end": "140840"
  },
  {
    "text": "application uh of course you're a new developer let's say what kind of challenges you will face or what kind of let's say uh difficulties you'll face so",
    "start": "140840",
    "end": "148239"
  },
  {
    "text": "that's always a you know area so let let's so let's move forward so the first",
    "start": "148239",
    "end": "155440"
  },
  {
    "text": "challenge generally developer faces is this cration so as you can see my screen if uh there are new developers or they",
    "start": "155440",
    "end": "162319"
  },
  {
    "text": "don't have right in various uh you know microservices development service",
    "start": "162319",
    "end": "167480"
  },
  {
    "text": "orchestration and all the major challenge is how do we orchestrate services so you can see how do",
    "start": "167480",
    "end": "173879"
  },
  {
    "text": "orchestrate business logic across Services right there are multiple services I don't know how the checkout",
    "start": "173879",
    "end": "179040"
  },
  {
    "text": "Service uh and the notification service or inventory service will work together okay what is the",
    "start": "179040",
    "end": "184480"
  },
  {
    "text": "dependency how can I take some logic from this service and take some logic from this service aggregate the logic",
    "start": "184480",
    "end": "190200"
  },
  {
    "text": "over here and you know pass on the the final output to let's say shipping service right so the orchestration is",
    "start": "190200",
    "end": "195920"
  },
  {
    "text": "always one of the challenge in the distributed application development if I'll move forward another",
    "start": "195920",
    "end": "203519"
  },
  {
    "text": "challenge is the tracing observability monitoring right how do I keep a trace",
    "start": "203519",
    "end": "209120"
  },
  {
    "text": "on the application right so there is another challenge if you can see how can this request across services and message",
    "start": "209120",
    "end": "215280"
  },
  {
    "text": "Brokers right so in a complex application architecture there are various messages various Brokers right",
    "start": "215280",
    "end": "221080"
  },
  {
    "text": "and you don't understand how can I keep a track on this how can I see what is working fine what is not working fine",
    "start": "221080",
    "end": "226439"
  },
  {
    "text": "how many services are up and running there are uh you know hundreds of questions which comes to your mind so",
    "start": "226439",
    "end": "231720"
  },
  {
    "text": "that is another problem uh while work on distributed application kind of a tracing right it is typically like a",
    "start": "231720",
    "end": "238840"
  },
  {
    "text": "observ if I move forward another very interesting challenge is of course",
    "start": "238840",
    "end": "243920"
  },
  {
    "text": "access control as a developer you don't know how do you configure access to services",
    "start": "243920",
    "end": "249400"
  },
  {
    "text": "and other resour access is required right what kind of read write or execute or there are different permissions there",
    "start": "249400",
    "end": "256280"
  },
  {
    "text": "are different security aspect there are different walls so you don't understand you don't know exactly what are the best",
    "start": "256280",
    "end": "261320"
  },
  {
    "text": "ways best practices to give the excess controller to use access control because it's not a distribut architecture are",
    "start": "261320",
    "end": "268440"
  },
  {
    "text": "generally complex in nature as compared to normal architecture where you definitely have multiple Services",
    "start": "268440",
    "end": "274120"
  },
  {
    "text": "multiple backend uh components Downstream systems right so so that's where the access control also become one",
    "start": "274120",
    "end": "280800"
  },
  {
    "text": "of the challenge if I will move forward resiliency the fourth part of it we all",
    "start": "280800",
    "end": "286960"
  },
  {
    "text": "know about resiliency it's typically how do I handle failed calls and perform R rise right so I mean there are",
    "start": "286960",
    "end": "293919"
  },
  {
    "text": "mechanism if something fails you retry it at three times five times and retry interval should be this right there are",
    "start": "293919",
    "end": "300680"
  },
  {
    "text": "different API has a different mechanism but as a developer have solid experience right",
    "start": "300680",
    "end": "306720"
  },
  {
    "text": "you will always face problem and you don't want to handle this honestly you feel boss I don't know how to handle",
    "start": "306720",
    "end": "312000"
  },
  {
    "text": "this you wish somebody you know would have handled for you so that is another for developing distributed",
    "start": "312000",
    "end": "318759"
  },
  {
    "text": "application now about all the challenges so finally",
    "start": "318759",
    "end": "323800"
  },
  {
    "text": "all these challenges lead to you know the microservices development is in one area so when I I'm talking about",
    "start": "323800",
    "end": "329680"
  },
  {
    "text": "distributed application majorly I'm talking about based application where we have various services and the entire uh",
    "start": "329680",
    "end": "336919"
  },
  {
    "text": "distribution is among the components right so finally all these challenges and that's the reason you know is is",
    "start": "336919",
    "end": "344479"
  },
  {
    "text": "driving developers crazy right so developers some sometimes feels so many services development the older monolith",
    "start": "344479",
    "end": "351840"
  },
  {
    "text": "was good you know we know everything it was all was all well defined but now it looks like there are hiccups so that is",
    "start": "351840",
    "end": "358880"
  },
  {
    "text": "always a problem with a distributed application development or you can say microservices development which is kind",
    "start": "358880",
    "end": "364479"
  },
  {
    "text": "of a major use case of distributed uh app workflow so I talked about it so",
    "start": "364479",
    "end": "369560"
  },
  {
    "text": "communication Security scalability operation complexity are we talked about",
    "start": "369560",
    "end": "374919"
  },
  {
    "text": "it major challenge even if you talk about runtime right so runtime engine I'm talking about there are very limited",
    "start": "374919",
    "end": "380960"
  },
  {
    "text": "tools available you know and run times available to build your application very few tools you don't know the tools or",
    "start": "380960",
    "end": "386120"
  },
  {
    "text": "tools are not compatible with one language some tools are compatible for Java not for net not for go not for",
    "start": "386120",
    "end": "392520"
  },
  {
    "text": "python or V whatsa and then the limited language support so not all tools will",
    "start": "392520",
    "end": "398039"
  },
  {
    "text": "provide support to all languages and then of course you know the tools some time have very they have very specific",
    "start": "398039",
    "end": "405120"
  },
  {
    "text": "infrastructure you know kind of a components or very specific Solutions not they will not give you entire",
    "start": "405120",
    "end": "410800"
  },
  {
    "text": "solution so those are the problems uh what we feel as of now and the problem",
    "start": "410800",
    "end": "416919"
  },
  {
    "text": "is depper or topic for today this distributed application runtime for distributed AP stands for",
    "start": "416919",
    "end": "423960"
  },
  {
    "text": "application and R stands for runtime sometime people says distributed application platform runtime as well but",
    "start": "423960",
    "end": "430280"
  },
  {
    "text": "officially it's distributed application runtime we call it Dapper as the future of microservice communication so why I'm",
    "start": "430280",
    "end": "437199"
  },
  {
    "text": "saying communication because the entire focuses the problem I'm facing while",
    "start": "437199",
    "end": "442400"
  },
  {
    "text": "developing microservices majorly the communication among Services right with respect to",
    "start": "442400",
    "end": "448400"
  },
  {
    "text": "their state maintenance or their retries or fails resiliencies security how to overcome that so the",
    "start": "448400",
    "end": "456120"
  },
  {
    "text": "answer lies in Deer that's where uh we'll discuss today as you can see depper makes microservices development",
    "start": "456120",
    "end": "462479"
  },
  {
    "text": "very simple and productive so that's the goal of depper and why it provides API",
    "start": "462479",
    "end": "467759"
  },
  {
    "text": "basically to simplify your connectivity okay so this is what it is now let me",
    "start": "467759",
    "end": "473319"
  },
  {
    "text": "quickly move forward and uh this is basically dea. the application the site",
    "start": "473319",
    "end": "479639"
  },
  {
    "text": "is dep.io you all can have a look and see the site it's standard site available and it is one of the cncf",
    "start": "479639",
    "end": "486520"
  },
  {
    "text": "project it's a Inc project I will show you on cncf page as well and you can see this is API for so DEA API for building",
    "start": "486520",
    "end": "494080"
  },
  {
    "text": "secure and reliable microservices so it provides you uh various way to communicate it provides you various",
    "start": "494080",
    "end": "500400"
  },
  {
    "text": "components we are calling it we'll call it building blocks in future blocks y API which will help you to build these",
    "start": "500400",
    "end": "507639"
  },
  {
    "text": "services and try to take most of your pain basically you know the pain I talked about okay some of the use cases",
    "start": "507639",
    "end": "514560"
  },
  {
    "text": "you can see uh now let's learn more about deer some introduction I think as",
    "start": "514560",
    "end": "521599"
  },
  {
    "text": "I talked about right it is not a very old project started uh you know it was accepted in cncf on 2021 so hardly uh 3",
    "start": "521599",
    "end": "528600"
  },
  {
    "text": "years now at uh incubating uh it is a self-hosted",
    "start": "528600",
    "end": "533880"
  },
  {
    "text": "project open source project of course gives you it works through API and the API we call building block so building",
    "start": "533880",
    "end": "540040"
  },
  {
    "text": "block is a very common term in depper okay and the building block is something which is going to simplify our",
    "start": "540040",
    "end": "545079"
  },
  {
    "text": "microservices connectivity so we'll talk on building blocks we'll talk on what all building blocks are available how to",
    "start": "545079",
    "end": "550440"
  },
  {
    "text": "implement those building blocks and how can we make our microservices development faster and you can say you",
    "start": "550440",
    "end": "557120"
  },
  {
    "text": "know the API I was talked about so API is available for communication State maintenance workflows and so many other",
    "start": "557120",
    "end": "562839"
  },
  {
    "text": "things okay and good part is all these apis the the you know the building",
    "start": "562839",
    "end": "568279"
  },
  {
    "text": "blocks they cover the entire best practices so they have written uh of course using the best standards",
    "start": "568279",
    "end": "574519"
  },
  {
    "text": "architecture security standards so that you don't want bother about right whether you followed the right practice",
    "start": "574519",
    "end": "580920"
  },
  {
    "text": "underlying components ensure that they follow the best practice and guideline so that's what it typically builds for",
    "start": "580920",
    "end": "588160"
  },
  {
    "text": "security resiliency and observability so or focus on code right so that is the goal of deer you focus only on your code",
    "start": "588160",
    "end": "596360"
  },
  {
    "text": "rest everything you leave it to us and we will try to take care of more most of the stuff right the most heavy loading work or you can task or you can say",
    "start": "596360",
    "end": "603600"
  },
  {
    "text": "peripheral task okay and uh typically you know developer productivity is",
    "start": "603600",
    "end": "609040"
  },
  {
    "text": "Improvement is what deer claims okay and I think we have one use case in our unit",
    "start": "609040",
    "end": "614480"
  },
  {
    "text": "Molina Molina where we have implemented deer so I think they are and they also liking the uh deer features and of",
    "start": "614480",
    "end": "622480"
  },
  {
    "text": "course out of the box support so I'll talk on feature but typically workflows pups up State Management Secret store",
    "start": "622480",
    "end": "629320"
  },
  {
    "text": "configuration bindings dis blocking security with cryptography lot of stuff which will will",
    "start": "629320",
    "end": "635519"
  },
  {
    "text": "be so I'll move forward and I'll I'll just try to show a video so please have",
    "start": "635519",
    "end": "640880"
  },
  {
    "text": "a see this video and then you'll get some uh idea about it let me run play",
    "start": "640880",
    "end": "646200"
  },
  {
    "text": "the video okay here you",
    "start": "646200",
    "end": "649399"
  },
  {
    "text": "go as a developer you're asked to create resilient scalable distributed",
    "start": "658240",
    "end": "663279"
  },
  {
    "text": "applications as microservices but you face the same challenges over and over",
    "start": "663279",
    "end": "668800"
  },
  {
    "text": "again challenges such as recovering state after failures managing Secrets or",
    "start": "668800",
    "end": "674680"
  },
  {
    "text": "discovering and securely calling other microservices what if there was a solution that allowed you to focus only",
    "start": "674680",
    "end": "680800"
  },
  {
    "text": "on building your application and not solving these distributed system challenges that's where Dapper comes in",
    "start": "680800",
    "end": "687760"
  },
  {
    "text": "the distributed application runtime it's an event-driven portable runtime for easily building microservices on cloud",
    "start": "687760",
    "end": "694920"
  },
  {
    "text": "or Edge Dapper meets you where you are today you can use Dapper with any language on any and run anywhere at the",
    "start": "694920",
    "end": "703360"
  },
  {
    "text": "heart of dapper are building blocks that encapsulate industry best practice simplify the challenges faced when",
    "start": "703360",
    "end": "709959"
  },
  {
    "text": "building microservices through building blocks such as service to service invocation State Management or Pub up",
    "start": "709959",
    "end": "716600"
  },
  {
    "text": "messaging dler provides consistent AP P abstracting away the implementation",
    "start": "716600",
    "end": "722040"
  },
  {
    "text": "details and keeping your code simple and portable you can use Dapper with your existing applications starting with a",
    "start": "722040",
    "end": "729000"
  },
  {
    "text": "single building block and incrementally adding more when needed let's say you're building an app that requires you to",
    "start": "729000",
    "end": "734880"
  },
  {
    "text": "store State using the simple State Management API you can quickly create long running resilient stateful Services",
    "start": "734880",
    "end": "742760"
  },
  {
    "text": "Dapper does the heavy lifting for you your code remains simple and agnostic to any specific store implementation",
    "start": "742760",
    "end": "749880"
  },
  {
    "text": "and you can easily swap out what's under the hood without changing your code and just to make life a little bit easier",
    "start": "749880",
    "end": "756399"
  },
  {
    "text": "Dapper provides extensive security and observability by default encrypting requests between services and",
    "start": "756399",
    "end": "762600"
  },
  {
    "text": "integrating with standards such as open Telemetry for tracing metrics and logs that can be visualized by any monitoring",
    "start": "762600",
    "end": "769639"
  },
  {
    "text": "tool so how does it work Dapper runs alongside your application as a",
    "start": "769639",
    "end": "775519"
  },
  {
    "text": "sidecar whether on your local Dev box on an edge device or in the cloud when",
    "start": "775519",
    "end": "781120"
  },
  {
    "text": "hosting your application on kubernetes Dapper runs as another container in your application pods and when your",
    "start": "781120",
    "end": "787360"
  },
  {
    "text": "application scales Dapper scales with it Dapper is an open source project with a",
    "start": "787360",
    "end": "792600"
  },
  {
    "text": "growing worldwide community of developers working together want to learn more simply get",
    "start": "792600",
    "end": "800480"
  },
  {
    "text": "started. okay so hope you're able to see the video can you give me a thumbs up if you saw the what some idea just to get a",
    "start": "804120",
    "end": "811440"
  },
  {
    "text": "response from you guys okay thank you",
    "start": "811440",
    "end": "817600"
  },
  {
    "text": "okay great thanks for his so I think so now we got uh hope now we got a",
    "start": "817600",
    "end": "824240"
  },
  {
    "text": "basic idea about what is Dapper and why do we use it of course to solve the distributed application problems now",
    "start": "824240",
    "end": "831680"
  },
  {
    "text": "quickly I'll move forward in the interest of time so you know if you I talked about building blocks so deer has",
    "start": "831680",
    "end": "836839"
  },
  {
    "text": "various building blocks uh exactly how to use deer what are the ways how what are the offerings so let's talk to that",
    "start": "836839",
    "end": "843880"
  },
  {
    "text": "so deer building blocks is a very important thing you can see on my slide almost 11 build over here these building",
    "start": "843880",
    "end": "850959"
  },
  {
    "text": "blocks are the component you can say or that's where that API thater provides API for all these major building blocks",
    "start": "850959",
    "end": "858600"
  },
  {
    "text": "and if you can see the so if you look at building blocks uh typically uh typically in one for what format so you",
    "start": "858600",
    "end": "865120"
  },
  {
    "text": "can directly use any of the building block we'll talk on the building blocks as well in detail just like an API so you can call your",
    "start": "865120",
    "end": "872480"
  },
  {
    "text": "application with HTTP or grpc API from your code use one of this component so",
    "start": "872480",
    "end": "878240"
  },
  {
    "text": "if you want to uh let's say for example service to service invocation very standard use case where you are building",
    "start": "878240",
    "end": "884639"
  },
  {
    "text": "a micro service architecture and talk to another Services service to service invocation so one way is directly",
    "start": "884639",
    "end": "891000"
  },
  {
    "text": "calling services but of course you will there are challenges there are issues right so use service to service",
    "start": "891000",
    "end": "896199"
  },
  {
    "text": "invocation component which is available within dier as a building build block it will help you you see perform direct",
    "start": "896199",
    "end": "902120"
  },
  {
    "text": "source secure to service method calls publ pops up very prominent pattern we",
    "start": "902120",
    "end": "908440"
  },
  {
    "text": "all know even through architecture we all know Kafka or rbit mq right so if you are using psup mostly we are using",
    "start": "908440",
    "end": "914680"
  },
  {
    "text": "any of the architecture right so uh you use depper PBS up building block okay",
    "start": "914680",
    "end": "920480"
  },
  {
    "text": "every building block will come will give you apis you need to use that API",
    "start": "920480",
    "end": "925720"
  },
  {
    "text": "building log as a as a kind of a binary in your code and then start using those component classes functions and then",
    "start": "925720",
    "end": "932680"
  },
  {
    "text": "deer will take care of rest of the other workflows State Management bindings",
    "start": "932680",
    "end": "938279"
  },
  {
    "text": "actors actors again if you know the microservices one of the which typically uses for one",
    "start": "938279",
    "end": "944800"
  },
  {
    "text": "currency Secrets configuration distributed locking for for Securities",
    "start": "944800",
    "end": "950040"
  },
  {
    "text": "cryptography and you know various scheduling almost for all these 11 building blocks deer has a component",
    "start": "950040",
    "end": "956639"
  },
  {
    "text": "okay we will see two or three in detail uh with more you know some examples but",
    "start": "956639",
    "end": "961720"
  },
  {
    "text": "we won't be able to cover all but yeah this is all 11 building blocks build the deer so if you want to understand what",
    "start": "961720",
    "end": "967920"
  },
  {
    "text": "is dier diaper is all about these building blocks okay and every building block is as I talked about it's an API",
    "start": "967920",
    "end": "974720"
  },
  {
    "text": "call from your application okay uh before I move forward the very important",
    "start": "974720",
    "end": "980079"
  },
  {
    "text": "statement how deer works so I think you would have seen that video as well deer injects a",
    "start": "980079",
    "end": "985600"
  },
  {
    "text": "site which is a container or process to each compute unit okay so side car is very important word over here because",
    "start": "985600",
    "end": "991639"
  },
  {
    "text": "the entire uh in next slides you know next discussion we'll use the words so side car typically you know you",
    "start": "991639",
    "end": "999319"
  },
  {
    "text": "know a unit attached to your bike typically that what we remember right side car is typically a pattern it's a",
    "start": "999319",
    "end": "1005759"
  },
  {
    "text": "microservices design pattern is nothing but adding another uh secondary container or a process or a unit to your",
    "start": "1005759",
    "end": "1013240"
  },
  {
    "text": "primary process okay in secondary process or container will take care of all the peripheral work and main main",
    "start": "1013240",
    "end": "1019600"
  },
  {
    "text": "application can take care of major application work right so car is all about let let's talk more on site car",
    "start": "1019600",
    "end": "1027160"
  },
  {
    "text": "here we go so deer user side car PN you see what is site car just try to understand this",
    "start": "1027160",
    "end": "1033120"
  },
  {
    "text": "is very important because usage of depper is based on how site car works",
    "start": "1033120",
    "end": "1039160"
  },
  {
    "text": "okay and see again standard uh uh workflow there are various processes you",
    "start": "1039160",
    "end": "1045038"
  },
  {
    "text": "see shopping cart checkout payment shipping right and and you see there are",
    "start": "1045039",
    "end": "1050440"
  },
  {
    "text": "site car attached to each process or each application so the so why I'm saying site car because those are the",
    "start": "1050440",
    "end": "1057320"
  },
  {
    "text": "another secondary process or secondary unit which is attached to your primary unit okay so you see all these instances",
    "start": "1057320",
    "end": "1063440"
  },
  {
    "text": "so if you have let's say all these Services you have site each service or",
    "start": "1063440",
    "end": "1068760"
  },
  {
    "text": "each component okay or each unit and you see 1 2 3 4 5 site car right and you see",
    "start": "1068760",
    "end": "1075039"
  },
  {
    "text": "this is an example of site car so finally you can also refer site car as as supporting processes okay or a",
    "start": "1075039",
    "end": "1080720"
  },
  {
    "text": "Services attached to your main Services okay and that is where now what is the use of site car what kind of peripheral",
    "start": "1080720",
    "end": "1087960"
  },
  {
    "text": "work they will do I think we have discussed in the brief but let's let's see more on that so before that I think",
    "start": "1087960",
    "end": "1094440"
  },
  {
    "text": "just want to just uh talk let's say talk on two minutes and what to side car I think if you microservices you would be",
    "start": "1094440",
    "end": "1101200"
  },
  {
    "text": "aware about site car pattern so typically is a design pattern it helps you you know involving",
    "start": "1101200",
    "end": "1107120"
  },
  {
    "text": "the deployment of secondary containers or site car along with your primary services or your micros service instances right and these site cars are",
    "start": "1107120",
    "end": "1113880"
  },
  {
    "text": "typically task I think you know we talked about all the task so logging proxy configuration security stuff State",
    "start": "1113880",
    "end": "1120000"
  },
  {
    "text": "Management right all these are the uh auxiliary task or secondary task so you see with each primary application we",
    "start": "1120000",
    "end": "1127120"
  },
  {
    "text": "will attach a site car okay and over here site car is nothing but a Dapper instance or a depper unit or a depper",
    "start": "1127120",
    "end": "1134480"
  },
  {
    "text": "process so that the entire communication will not be direct it will be V Dapper why side car okay so side typically I",
    "start": "1134480",
    "end": "1142799"
  },
  {
    "text": "mean hope so you are aware about the proxy right we use any API Gateway or proxy so all call goes to proxy and",
    "start": "1142799",
    "end": "1150039"
  },
  {
    "text": "proxy redirected to the right place and then you know get back to you so you are behind proxy similarly over here you are",
    "start": "1150039",
    "end": "1156240"
  },
  {
    "text": "behind side car which is nothing but a diaper instance okay and as you can see",
    "start": "1156240",
    "end": "1161280"
  },
  {
    "text": "side car is not like majorly you can connected uh work with your application wherever your application is okay so I",
    "start": "1161280",
    "end": "1168320"
  },
  {
    "text": "think now you know the site car let me move forward okay so this is a very important",
    "start": "1168320",
    "end": "1176360"
  },
  {
    "text": "slide uh it will give you end to endend view as to what D deer is all about whatever we have learned so far so this",
    "start": "1176360",
    "end": "1183640"
  },
  {
    "text": "is from development to hosting if you look at the overall uh deer architecture you can see on top we",
    "start": "1183640",
    "end": "1190039"
  },
  {
    "text": "have various runtime beat node python. net go rust Java C++ PHP all almost all",
    "start": "1190039",
    "end": "1198440"
  },
  {
    "text": "uh languages are supported that means we have a SDK available from Deer so you",
    "start": "1198440",
    "end": "1203840"
  },
  {
    "text": "can say we have SDK from Deer net SDK for from deer or deer Java SDK deer PHP",
    "start": "1203840",
    "end": "1210159"
  },
  {
    "text": "SDK so so that means it has support to all clients all languages okay and of",
    "start": "1210159",
    "end": "1216880"
  },
  {
    "text": "app using any of the language when you're developing app of course you would like to deploy your app on various",
    "start": "1216880",
    "end": "1223000"
  },
  {
    "text": "onr or Cloud containers or you want to integrate with your backend systems databases service right so you see in",
    "start": "1223000",
    "end": "1230120"
  },
  {
    "text": "between you know in between the intermediate layer is the Dapper okay so you're talking to your services uh to",
    "start": "1230120",
    "end": "1237600"
  },
  {
    "text": "your in to provider for various needs you will talk via deer okay VI deer",
    "start": "1237600",
    "end": "1243120"
  },
  {
    "text": "building blocks because deer is a you know kind of a runtime environment but finally down the line it will give you",
    "start": "1243120",
    "end": "1248720"
  },
  {
    "text": "building blocks okay and how do you call building blocks why HTTP or grpc standard way you have to call from your",
    "start": "1248720",
    "end": "1255000"
  },
  {
    "text": "any of the code call make a API call to deer and and use any of the building block based on a requirement now",
    "start": "1255000",
    "end": "1262240"
  },
  {
    "text": "workflow building block for workflow needs pups up building block for pups up needs service invocation if you want to",
    "start": "1262240",
    "end": "1267880"
  },
  {
    "text": "invoke another Services if you want to State uh State save the state of your object you can do that act jobs",
    "start": "1267880",
    "end": "1275520"
  },
  {
    "text": "scheduling configuration Secrets binding which is typically adapter security",
    "start": "1275520",
    "end": "1281520"
  },
  {
    "text": "locking middleware everything right and the cross cutting concern observability security resiliency is by default added",
    "start": "1281520",
    "end": "1287840"
  },
  {
    "text": "by the uh leer I talked about it they have specific you know offering available in their own libraries okay",
    "start": "1287840",
    "end": "1295760"
  },
  {
    "text": "and down the line you these applications on are integrate on any Cloud infrastructure okay so that part of it",
    "start": "1295760",
    "end": "1303600"
  },
  {
    "text": "and how you you going to work of course as I talked about every app to attach a",
    "start": "1303600",
    "end": "1308720"
  },
  {
    "text": "site car inject a site car as a container or process to your compute unit okay finally the site car whatever",
    "start": "1308720",
    "end": "1316039"
  },
  {
    "text": "we are calling a deer they are going to interact with your triggers and they're going to",
    "start": "1316039",
    "end": "1321440"
  },
  {
    "text": "communicate with your computer unit and then give you you know final uh basical Discovery okay so I'll take a pause over",
    "start": "1321440",
    "end": "1327600"
  },
  {
    "text": "here uh if any questions before we move forward you can unmute yourself and ask a",
    "start": "1327600",
    "end": "1334440"
  },
  {
    "text": "question uh hi it's",
    "start": "1339120",
    "end": "1343960"
  },
  {
    "text": "explain sorry Nishan sorry can you please repeat your",
    "start": "1347520",
    "end": "1352919"
  },
  {
    "text": "question yeah sure like am I AUD so can you",
    "start": "1353120",
    "end": "1360200"
  },
  {
    "text": "repeat okay so you're talking how deer helps developer is it that is the question yeah yeah okay so I think you",
    "start": "1366080",
    "end": "1373600"
  },
  {
    "text": "know as I talked about right I think uh we talked about the see we are talking about distributed application runtime",
    "start": "1373600",
    "end": "1379200"
  },
  {
    "text": "deer and before deer if deer is not there what we do when we do the",
    "start": "1379200",
    "end": "1385240"
  },
  {
    "text": "distributed application development when we work on microservices application development there are major challenges",
    "start": "1385240",
    "end": "1391159"
  },
  {
    "text": "developer faces challenges I talked about of course you know the State Management the communication among",
    "start": "1391159",
    "end": "1397200"
  },
  {
    "text": "various Services the security stuff right down the line you call various retri if there is a service fail how do",
    "start": "1397200",
    "end": "1404039"
  },
  {
    "text": "you want to ensure that retri are there are there right and and then how do you",
    "start": "1404039",
    "end": "1409320"
  },
  {
    "text": "trace your services I mean I'm talking about observability over here how do you ensure the resiliency how do you ensure",
    "start": "1409320",
    "end": "1414960"
  },
  {
    "text": "the security stuff right so there are so many problems down the line which is there now you have to have someone to",
    "start": "1414960",
    "end": "1422200"
  },
  {
    "text": "solve your problem so what I talk depper is there to help you with all the problem depper is going to make your",
    "start": "1422200",
    "end": "1429600"
  },
  {
    "text": "distributed application development easy or it will solve your microservices",
    "start": "1429600",
    "end": "1435200"
  },
  {
    "text": "development at least at some level so that you can only only focus on code you means the developer can only focus on",
    "start": "1435200",
    "end": "1440919"
  },
  {
    "text": "code okay now how deer will help that's what we're talking about using the building",
    "start": "1440919",
    "end": "1446120"
  },
  {
    "text": "blocks each building block will help you to achieve some of the objective right so for",
    "start": "1446120",
    "end": "1451240"
  },
  {
    "text": "example know popup right we are using Kasa Reit mq but if if I'll ask you okay",
    "start": "1451240",
    "end": "1456360"
  },
  {
    "text": "let let me directly call A kka Q I don't know about standards from my application",
    "start": "1456360",
    "end": "1462200"
  },
  {
    "text": "how can I pass the parameters how can I pass the actual retrice how can we give me the configuration right so what if if",
    "start": "1462200",
    "end": "1467440"
  },
  {
    "text": "someone is there as a intermediate uh helper or a process or a unit which will help me to do all these things and say",
    "start": "1467440",
    "end": "1474039"
  },
  {
    "text": "hey you only call this API directly rest everything I'll take care and that's how the pubs up the entire event driven uh",
    "start": "1474039",
    "end": "1481279"
  },
  {
    "text": "process for publish publisher subscriber will be easy for a developer similarly for State Management if you are saving a",
    "start": "1481279",
    "end": "1487679"
  },
  {
    "text": "state you don't know you can always save a state right we have various let's say you are using redis now down the line in",
    "start": "1487679",
    "end": "1495080"
  },
  {
    "text": "uh in future another application is using some other component some other application is another so that means three different",
    "start": "1495080",
    "end": "1501200"
  },
  {
    "text": "applications are using three different State Management component of Technology how you going to really ensure that down",
    "start": "1501200",
    "end": "1507919"
  },
  {
    "text": "the line your service your code will only call one API I don't care down the line you are calling redis calling",
    "start": "1507919",
    "end": "1515080"
  },
  {
    "text": "Google Firebase I have no idea I need someone who can help me someone who can",
    "start": "1515080",
    "end": "1520480"
  },
  {
    "text": "create that okay what we use for something Discovery",
    "start": "1520480",
    "end": "1526000"
  },
  {
    "text": "service yeah very good yeah very good point Discovery is one of the area I will talk on that because Discovery I",
    "start": "1526000",
    "end": "1532399"
  },
  {
    "text": "mean I I don't want to move forward I'll tell you the example uh you know I'll tell you example of pup up service",
    "start": "1532399",
    "end": "1538080"
  },
  {
    "text": "invocation the detail like where deer is going to help bear with me for some more time okay okay uh with this architecture guys",
    "start": "1538080",
    "end": "1545760"
  },
  {
    "text": "let's move forward quickly I'll move forward to the component now this is where you will see ocean you know if you",
    "start": "1545760",
    "end": "1551080"
  },
  {
    "text": "look at again I'll go back I'm talking about pup I'm talking about State Management right those are some standard",
    "start": "1551080",
    "end": "1556480"
  },
  {
    "text": "uh you know or cross cutting concern or some Enterprise great features now how deer can help and what are the various",
    "start": "1556480",
    "end": "1563600"
  },
  {
    "text": "areas language platform deer can help look at this side this is a very",
    "start": "1563600",
    "end": "1569320"
  },
  {
    "text": "important slide deer always gives always always support 100 plus integration deer",
    "start": "1569320",
    "end": "1574679"
  },
  {
    "text": "gives me or help me with 100 plus integration so far I mean it is still increasing it's open source project guys",
    "start": "1574679",
    "end": "1581320"
  },
  {
    "text": "it's open source project I think somebody's asking it is it is a it is the whole source code is avilable on GitHub it is maintained by Cloud Ned",
    "start": "1581320",
    "end": "1588399"
  },
  {
    "text": "Computing Foundation cncf okay it is threeyear old project to cncf and now it",
    "start": "1588399",
    "end": "1593840"
  },
  {
    "text": "is very popular and I'll tell you who is using it statistics but look at the",
    "start": "1593840",
    "end": "1599120"
  },
  {
    "text": "slide now why I showing you this slide these are some of the examples deer can help and definitely you will relate to",
    "start": "1599120",
    "end": "1605679"
  },
  {
    "text": "your environment for sure for example State Management I think I talked about State Management right so I am using red",
    "start": "1605679",
    "end": "1611960"
  },
  {
    "text": "somebody DB somebody's using Dynamo DB somebody using Cassandra for State Management okay one application may use",
    "start": "1611960",
    "end": "1619399"
  },
  {
    "text": "multiple State Management or multiple application in a distrib environment can State management technology platform",
    "start": "1619399",
    "end": "1626039"
  },
  {
    "text": "libraries tools right I don't want to really uh you know get influence and I",
    "start": "1626039",
    "end": "1631679"
  },
  {
    "text": "don't want to really deal with all who can depper so what we are saying is hey",
    "start": "1631679",
    "end": "1636919"
  },
  {
    "text": "I am I'm the developer I'm writing this app I will only call a depper API and I",
    "start": "1636919",
    "end": "1642520"
  },
  {
    "text": "will say hey I I am calling a deer API and I'm calling a deer State Management API that's it Tapper down the line will",
    "start": "1642520",
    "end": "1649720"
  },
  {
    "text": "help me out with all these implementation okay I will only call my if I'm using redis what is best practice",
    "start": "1649720",
    "end": "1656399"
  },
  {
    "text": "for redis what is best practice for Cassandra interchangeably in future redis will change to Cassandra I'm okay",
    "start": "1656399",
    "end": "1663360"
  },
  {
    "text": "I don't care because I am behind deer I am I'm behind deer deer is attached as a",
    "start": "1663360",
    "end": "1668679"
  },
  {
    "text": "site car deer is doing State Management for me not I'm doing directly right so down the line depth of all the pin",
    "start": "1668679",
    "end": "1675360"
  },
  {
    "text": "publisher subscriber I think we talked about various thing right that is uh you know sqs or service bus or rebit",
    "start": "1675360",
    "end": "1681240"
  },
  {
    "text": "mq you use any implementation finally deer will support all these things because down the line deer code the Deer",
    "start": "1681240",
    "end": "1689039"
  },
  {
    "text": "uh Library support for these technology these platform these tools okay it is",
    "start": "1689039",
    "end": "1695480"
  },
  {
    "text": "increasing they are adding more uh components more integration but for now it is helpful for all those things you",
    "start": "1695480",
    "end": "1702039"
  },
  {
    "text": "can see all the major names are here what a secret manager or your heshi Corp Vault or Aur key W or gcp secret man you",
    "start": "1702039",
    "end": "1710039"
  },
  {
    "text": "know for configuration locking workflows cryptography and they are still evolving so what I'm trying to say",
    "start": "1710039",
    "end": "1716880"
  },
  {
    "text": "is if in your application you are using any of the technology let's say you are using rabbit mq okay you directly attack",
    "start": "1716880",
    "end": "1724279"
  },
  {
    "text": "use deer and you call deer instance deer API via grpc or https request and then",
    "start": "1724279",
    "end": "1731000"
  },
  {
    "text": "let deer handle your AQ stuff for you or configuration stuff for you okay that is a power we'll see that we'll see some",
    "start": "1731000",
    "end": "1737080"
  },
  {
    "text": "example let me move forward guys okay so I think now you know I'm talking about deer will help deer will but will help",
    "start": "1737080",
    "end": "1744279"
  },
  {
    "text": "okay so of course and I'm talking about if you look at some various languages over here right various languages I talked about in this diagram so deer",
    "start": "1744279",
    "end": "1751679"
  },
  {
    "text": "provides sdks the great thing deer sdks are the easiest way to get into a Dapper in your application so you can see uh",
    "start": "1751679",
    "end": "1759039"
  },
  {
    "text": "deer has SDK for net Java python PHP go C++ rust and some n eight to nine",
    "start": "1759039",
    "end": "1764279"
  },
  {
    "text": "languages as of now this is one example of where is Java SDK you can go to the site and see the Java SDK where you will",
    "start": "1764279",
    "end": "1770200"
  },
  {
    "text": "find the Javas SDK now uh if you are using if you are jav Java developer working on a Javas spring boot",
    "start": "1770200",
    "end": "1777120"
  },
  {
    "text": "microservices base implementation use depper Javas SDK to make your life easy",
    "start": "1777120",
    "end": "1782360"
  },
  {
    "text": "if you are data science guy use Python else use. net or or JavaScript if you're using angular react based application",
    "start": "1782360",
    "end": "1788039"
  },
  {
    "text": "based on your application development deer available so you don't bother about it you just need to call deer API down",
    "start": "1788039",
    "end": "1794559"
  },
  {
    "text": "the line based on some configuration deer will ensure that it will give you uh the right connectivity based on your",
    "start": "1794559",
    "end": "1801320"
  },
  {
    "text": "inputs so that is a power let me move forward okay so now we are moving",
    "start": "1801320",
    "end": "1807000"
  },
  {
    "text": "towards development guys just uh so let's say okay so now we understood what is depper what is site car what are the",
    "start": "1807000",
    "end": "1812840"
  },
  {
    "text": "problems we trying to solve now how to develop how to use depper you know as a local development how to use Lo start",
    "start": "1812840",
    "end": "1820080"
  },
  {
    "text": "with get started with deer that's a slide is all about standard three steps deer CLI deer init and Deer Run you only",
    "start": "1820080",
    "end": "1828880"
  },
  {
    "text": "uh you know remember these three commands give you complete basic",
    "start": "1828880",
    "end": "1834000"
  },
  {
    "text": "installation of deer package deer init will initialize most of the libraries",
    "start": "1834000",
    "end": "1839120"
  },
  {
    "text": "container what is required okay I think you can see example deer init will initialize red container for you Zipkin",
    "start": "1839120",
    "end": "1845880"
  },
  {
    "text": "Zipkin is for project for tracing typically for observability default compound folder",
    "start": "1845880",
    "end": "1852000"
  },
  {
    "text": "placement Dapper schedular service container so it will initialize everything for you you know just a",
    "start": "1852000",
    "end": "1857240"
  },
  {
    "text": "command in it in it and then you can run depper based on what uh of course using",
    "start": "1857240",
    "end": "1862399"
  },
  {
    "text": "API for whatever building block you are looking for okay major thing is remember depper requires Docker so the you know",
    "start": "1862399",
    "end": "1870480"
  },
  {
    "text": "prerequisite to run should you should have Docker on your machine okay I mean without Docker you can start it but most",
    "start": "1870480",
    "end": "1877320"
  },
  {
    "text": "of the stuff okay even I don't have Dapper on sorry Docker on my machine because infosis restrict Docker at least",
    "start": "1877320",
    "end": "1884159"
  },
  {
    "text": "so far I don't have that so I don't have full implementation I will show you a small part part of it without depper you can install uh you know without Docker",
    "start": "1884159",
    "end": "1892000"
  },
  {
    "text": "you can install depper but a slim version which will give you some features okay so overall you can see the",
    "start": "1892000",
    "end": "1897919"
  },
  {
    "text": "diagram you install the docker desktop that's it run three command CLI in it and run you know for initialization uh",
    "start": "1897919",
    "end": "1906080"
  },
  {
    "text": "and then running your process and then you're good to go that's it okay so let me move forward yeah so uh now if",
    "start": "1906080",
    "end": "1914200"
  },
  {
    "text": "somebody wants to get started you can start it get started with deer so install the about Docker is a prerequisite use deer",
    "start": "1914200",
    "end": "1922080"
  },
  {
    "text": "C command there are standard command is available you can use this command to uh",
    "start": "1922080",
    "end": "1927200"
  },
  {
    "text": "run the deer CLI it's the power shell command this command you can use it and of course sell the uh set the deer CLI",
    "start": "1927200",
    "end": "1933799"
  },
  {
    "text": "as a path variable okay that's important environment VAR once you run the C this",
    "start": "1933799",
    "end": "1939480"
  },
  {
    "text": "will install the deer on your laptop desktop and then you initialize it so",
    "start": "1939480",
    "end": "1945159"
  },
  {
    "text": "ini nothing but depper init command it will initialize your depper and it will uh you know it runs as site car right so",
    "start": "1945159",
    "end": "1950679"
  },
  {
    "text": "typically it will install all the binaries on your local machine binaries we talked about whatever depper will",
    "start": "1950679",
    "end": "1956320"
  },
  {
    "text": "provide it creates the environment as well for you okay and then you can start using deer using depper run for example",
    "start": "1956320",
    "end": "1962200"
  },
  {
    "text": "over here I am using this command Deer Run and I saying hey run the depper for my application I giving application ID",
    "start": "1962200",
    "end": "1970039"
  },
  {
    "text": "which is running on a specifi port okay so this is just a I have let's say I have a net application or Java",
    "start": "1970039",
    "end": "1975360"
  },
  {
    "text": "application or angular application I'm running the deer for the applic on the specify Port so these are the three",
    "start": "1975360",
    "end": "1981279"
  },
  {
    "text": "command now because let's say which for an example I would I'll use the State",
    "start": "1981279",
    "end": "1986639"
  },
  {
    "text": "Management building block over here I think the the State Management so for that I have deer State Management API",
    "start": "1986639",
    "end": "1992279"
  },
  {
    "text": "which is provided from that so how can I use that let's say I'm using redis for my State Management very standard uh you",
    "start": "1992279",
    "end": "1998799"
  },
  {
    "text": "know if you want to save a state object call this command standard you Pro you know provide the key value payer and of",
    "start": "1998799",
    "end": "2006039"
  },
  {
    "text": "course your standard API AP definition okay and your state store whatever state",
    "start": "2006039",
    "end": "2011120"
  },
  {
    "text": "store you have you will you'll be able to save the object you means you are calling deer but depper State Management",
    "start": "2011120",
    "end": "2017559"
  },
  {
    "text": "API will help you to save the object okay you're not directly talking similarly if you want to get the object",
    "start": "2017559",
    "end": "2023399"
  },
  {
    "text": "you will call this it'll give you Deer uh side car instance will give you the value from of course using the State",
    "start": "2023399",
    "end": "2029760"
  },
  {
    "text": "Management API and then you can delete his El this is an example this is like how deer will initialize it okay so let",
    "start": "2029760",
    "end": "2036399"
  },
  {
    "text": "me take a pause over here and now try to show you uh how deer is running on my",
    "start": "2036399",
    "end": "2042279"
  },
  {
    "text": "machine with me guys can you please uh raise your hand or give a thumbs",
    "start": "2042279",
    "end": "2049279"
  },
  {
    "text": "up okay thanks VI okay so I think guys I'll quickly show you you know okay so",
    "start": "2051480",
    "end": "2056839"
  },
  {
    "text": "if you can see my uh CMD command you can see deer is installed so uh you know I",
    "start": "2056839",
    "end": "2062280"
  },
  {
    "text": "can check the deer minus version okay I have already installed deer CLI so deer minus ver version you can see the C",
    "start": "2062280",
    "end": "2069200"
  },
  {
    "text": "version 14.1 and if I would like to check the depper uh installation you I'll run deer",
    "start": "2069200",
    "end": "2075560"
  },
  {
    "text": "minus H so deer minus H will typically you see the depper it'll install the deer run time on my laptop but",
    "start": "2075560",
    "end": "2083079"
  },
  {
    "text": "unfortunately I don't have Docker so I won't be able to show you the processes because that requires Docker without",
    "start": "2083079",
    "end": "2089000"
  },
  {
    "text": "Docker you can't do most of the stuff okay and these are the commands so you know you see the commands you can you",
    "start": "2089000",
    "end": "2094878"
  },
  {
    "text": "know which you can use you can list out all the proc process invoke it publish",
    "start": "2094879",
    "end": "2100599"
  },
  {
    "text": "you can run the command you can status uninstall upgrade version dashboard dashboard is a command which will show",
    "start": "2100599",
    "end": "2106359"
  },
  {
    "text": "you all the running processes on your machine on your Dapper okay so let me run Dapper dashboard okay so you can say",
    "start": "2106359",
    "end": "2112760"
  },
  {
    "text": "Dapper dashboard this command deer dashboard on this prompt yeah you see the deer",
    "start": "2112760",
    "end": "2118400"
  },
  {
    "text": "dashboard you see the deer I'm using deer dashboard it it it is it it'll give",
    "start": "2118400",
    "end": "2123640"
  },
  {
    "text": "me UI on on my local host and it'll show me all the processor let me show you the UI if you can see my",
    "start": "2123640",
    "end": "2130200"
  },
  {
    "text": "screen can you see the deer uh dashboard screen you see it is running on 80 it's",
    "start": "2130200",
    "end": "2135680"
  },
  {
    "text": "a local depper UI which depper will initialize it for your yeah thanks po uh",
    "start": "2135680",
    "end": "2142200"
  },
  {
    "text": "for your you know application so you can see uh this is a in this is a react application basically you can see compon",
    "start": "2142200",
    "end": "2148359"
  },
  {
    "text": "component unfortunately without Docker you can't do anything so else if you have Docker you can always use State",
    "start": "2148359",
    "end": "2154200"
  },
  {
    "text": "Management popup or any secret manager and do some handson on this you see",
    "start": "2154200",
    "end": "2159240"
  },
  {
    "text": "configuration but but just to show you like this is a dashboard okay in a real",
    "start": "2159240",
    "end": "2164440"
  },
  {
    "text": "uh in a in a real manner it will show you all the components which you are using in your depper let's say you are using four five or five building blocks",
    "start": "2164440",
    "end": "2170560"
  },
  {
    "text": "all the components along with the process will be available over here okay so this is a deer",
    "start": "2170560",
    "end": "2176040"
  },
  {
    "text": "dashboard okay and yeah I was showing you deer right I mean now I'm since we are here this is cncf project and if you",
    "start": "2176040",
    "end": "2182200"
  },
  {
    "text": "can see uh depper is one of the uh incubating project it is here okay on",
    "start": "2182200",
    "end": "2187880"
  },
  {
    "text": "Dapper side on C okay so let's move forward guys uh we talked about uh how to use Dapper how to",
    "start": "2187880",
    "end": "2195319"
  },
  {
    "text": "install it what are the problems it is solving now where can we deploy you you",
    "start": "2195319",
    "end": "2200720"
  },
  {
    "text": "know you can deploy it's almost everywhere so this is standard you know I think all the environments what you're talking about so you can deploy uh",
    "start": "2200720",
    "end": "2207800"
  },
  {
    "text": "deaper on any of the cloud uh and good part think that is where it is most uh",
    "start": "2207800",
    "end": "2214319"
  },
  {
    "text": "you know kind of close to on Virtual machines or physical machines okay so now let's see how you can deploy",
    "start": "2214319",
    "end": "2220720"
  },
  {
    "text": "Dapper on kubernetes I think are I think fascinated about kubernetes right so okay here we go so this is a",
    "start": "2220720",
    "end": "2227760"
  },
  {
    "text": "architecture diagram how depper can be deployed in kubernetes cluster okay so this again standard processes you can",
    "start": "2227760",
    "end": "2234520"
  },
  {
    "text": "have a look you know that in kuties we have various pods and standard pattern",
    "start": "2234520",
    "end": "2239880"
  },
  {
    "text": "is depper Will inject a site car to each application overair application is B so",
    "start": "2239880",
    "end": "2245880"
  },
  {
    "text": "if you have let's say six or five Parts you have six or five depper instances which is typically a site car you see",
    "start": "2245880",
    "end": "2252480"
  },
  {
    "text": "depper everywhere you have C depper for various purposes okay so and of course you can",
    "start": "2252480",
    "end": "2258720"
  },
  {
    "text": "see the deer with the main pod over here so idea is same you initialize your uh",
    "start": "2258720",
    "end": "2264800"
  },
  {
    "text": "you know kubernetes application run the ports attach uh you know side car or deer instance uh with the PS whenever",
    "start": "2264800",
    "end": "2272800"
  },
  {
    "text": "you are talking to any application of course your micros service communication communicate it V depper apis VI depper",
    "start": "2272800",
    "end": "2280599"
  },
  {
    "text": "State Management API or a service to service invocation API okay that's a way right don't directly talk and then down",
    "start": "2280599",
    "end": "2287920"
  },
  {
    "text": "the line down the line uher will help you out okay so for example if",
    "start": "2287920",
    "end": "2293160"
  },
  {
    "text": "kubernetes ports will scale in scale out depper will also scale in scale out that's a power so it will it will it's a",
    "start": "2293160",
    "end": "2299720"
  },
  {
    "text": "it's a process and of see you can host on any component okay so this is typically how deer works on kubernetes",
    "start": "2299720",
    "end": "2306720"
  },
  {
    "text": "we don't want to go in detail but just if you are a cuberes developer you can use deer or cuber as well it's idea to",
    "start": "2306720",
    "end": "2313560"
  },
  {
    "text": "talk on that Community is very strong guys I think cncf it's one of the powerful",
    "start": "2313560",
    "end": "2320040"
  },
  {
    "text": "project now it's three years old you can see almost number 12 in the largest CNC",
    "start": "2320040",
    "end": "2325680"
  },
  {
    "text": "of project 120 Community components 3K contributors 7K discode members for for",
    "start": "2325680",
    "end": "2331480"
  },
  {
    "text": "you know for you know helping you out and of course 700k plus Docker Hub pull up month per month because it's all with",
    "start": "2331480",
    "end": "2337200"
  },
  {
    "text": "dock okay unique views gith up start so I think it is very popular and now it is becoming popular because of the",
    "start": "2337200",
    "end": "2342800"
  },
  {
    "text": "microservices development challenges because of the distributed application development okay so that's what it now",
    "start": "2342800",
    "end": "2348640"
  },
  {
    "text": "people are started using it so let me move forward who is contributing it infosis can contribute it I know this is",
    "start": "2348640",
    "end": "2354960"
  },
  {
    "text": "open source program office we are we all are part of opo and we proud to be",
    "start": "2354960",
    "end": "2360720"
  },
  {
    "text": "really part of hect October firstest where we are trying to see the open source Journey these are the",
    "start": "2360720",
    "end": "2365760"
  },
  {
    "text": "contributors guys so you know huai Microsoft Amazon they all are contributing to Dapper they are building",
    "start": "2365760",
    "end": "2371960"
  },
  {
    "text": "they are ensuring that they have the connection they have the integration they have the building block available",
    "start": "2371960",
    "end": "2377240"
  },
  {
    "text": "for their component so they all are working you can also do that and who is",
    "start": "2377240",
    "end": "2383280"
  },
  {
    "text": "using it's not like it's very new even if it's three year old most of the major players in Industries are using depper",
    "start": "2383280",
    "end": "2390280"
  },
  {
    "text": "even in India HDFC is using deer just for an example I showed you in the beginning IBM PWC Intel all these folks",
    "start": "2390280",
    "end": "2396640"
  },
  {
    "text": "are using deer at some way or another so majorly even Z scaler we are on right they that is also using Dapper so they",
    "start": "2396640",
    "end": "2402720"
  },
  {
    "text": "all are using Dapper for various purposes but because down the line they all are you know dealing with distributed application okay uh quick I",
    "start": "2402720",
    "end": "2411560"
  },
  {
    "text": "think we not go in the detail now you all can read it it's a self-explanation slide where now you know what is the",
    "start": "2411560",
    "end": "2417119"
  },
  {
    "text": "goal of deer it is enabling developers life easy for any language it is solving the somebody was asking about heart",
    "start": "2417119",
    "end": "2423480"
  },
  {
    "text": "problem problems are about you know how do you really uh use the building blocks can someone help me with various uh uh",
    "start": "2423480",
    "end": "2430760"
  },
  {
    "text": "various technology uh cross cutting concern which is required for building an application it is vendor neutral so",
    "start": "2430760",
    "end": "2437400"
  },
  {
    "text": "doesn't matter AWS gcp a Alibaba it it'll typically work on all consistency",
    "start": "2437400",
    "end": "2442680"
  },
  {
    "text": "with open API it is embracing the extensibility right there are plug-in play component okay so those are some of",
    "start": "2442680",
    "end": "2450160"
  },
  {
    "text": "and moving to Features uh I'll not spend time on that but typically you can see it supports all programming languages",
    "start": "2450160",
    "end": "2457079"
  },
  {
    "text": "why HTTP and grpc I think we all are somehow using HTTP grpc so it's the easy way to call whatever you're doing just",
    "start": "2457079",
    "end": "2463319"
  },
  {
    "text": "you need to call your deer uh you know wi depper API but it's multi cloud enabled and good part is very",
    "start": "2463319",
    "end": "2469079"
  },
  {
    "text": "lightweight so if you'll install the entire depper on your machine 58 MB is the binary size that's it with 4 MB",
    "start": "2469079",
    "end": "2475040"
  },
  {
    "text": "physical memory that's what that's it it's very lightweight runs as a site car you all know and what is the benefit of",
    "start": "2475040",
    "end": "2480960"
  },
  {
    "text": "site car we saw that but typically it removes the need of sdks you don't want to bother about sdks you choose your",
    "start": "2480960",
    "end": "2486119"
  },
  {
    "text": "language diaper all you use your SDK is command I'll show you some examples how to write how",
    "start": "2486119",
    "end": "2492040"
  },
  {
    "text": "to use those commands for some of the stuff dedicated CLI uh again client for",
    "start": "2492040",
    "end": "2497720"
  },
  {
    "text": "all uh even Ren pubs some system you know I think State Management secret",
    "start": "2497720",
    "end": "2502800"
  },
  {
    "text": "management observ is inbuilt using theet I think you would have seen in the video",
    "start": "2502800",
    "end": "2507880"
  },
  {
    "text": "and natively runs on kubernetes okay so that's another good part of it so I'll again take a pause any",
    "start": "2507880",
    "end": "2514839"
  },
  {
    "text": "questions before we move yeah I have few",
    "start": "2514839",
    "end": "2521200"
  },
  {
    "text": "questions I see some overlap in terms of functionality between Dapper",
    "start": "2522079",
    "end": "2528240"
  },
  {
    "text": "Ando yeah do you think Dapper can be a replacement for uh",
    "start": "2528240",
    "end": "2535119"
  },
  {
    "text": "that's a very good and vast question I don't think I mean sto is there from long Right started feeling that you're",
    "start": "2535119",
    "end": "2541800"
  },
  {
    "text": "right there are overlaps I know steo is more mature as of now uh I depper is kind of a new guy",
    "start": "2541800",
    "end": "2548680"
  },
  {
    "text": "in this world but yeah gradually things may be better but for now I would say still steo is there so you can't let's",
    "start": "2548680",
    "end": "2555680"
  },
  {
    "text": "let you can't assume it's typically a service mesh okay just like sto so could be some part of is popular some part is",
    "start": "2555680",
    "end": "2562480"
  },
  {
    "text": "overlapping but still I would say they are two different product and it'll take some time to mature in my",
    "start": "2562480",
    "end": "2568960"
  },
  {
    "text": "view do you see any possibility that can we use both the and da for uh I I I out",
    "start": "2568960",
    "end": "2577200"
  },
  {
    "text": "I don't yeah I didn't try that combination sorry for that I I can't tell you whether we we can use both",
    "start": "2577200",
    "end": "2583400"
  },
  {
    "text": "should be but I didn't use it so not",
    "start": "2583400",
    "end": "2588520"
  },
  {
    "text": "sure",
    "start": "2591559",
    "end": "2594559"
  },
  {
    "text": "question the name injection equal",
    "start": "2602200",
    "end": "2607240"
  },
  {
    "text": "side card is it the same way da yeah yeah you're right yeah you're right same way yes I'll show you that yeah so you",
    "start": "2609280",
    "end": "2616000"
  },
  {
    "text": "just yes correct correct yeah sorry",
    "start": "2616000",
    "end": "2621119"
  },
  {
    "text": "mad prox so what is a typical typical",
    "start": "2628400",
    "end": "2634720"
  },
  {
    "text": "Warhead of dapper that we talking",
    "start": "2634720",
    "end": "2639040"
  },
  {
    "text": "that's percentage Yeah mad so let me answer",
    "start": "2640160",
    "end": "2645559"
  },
  {
    "text": "based on my very I would say some four five month experience with deer as of now you're right I mean see when you say",
    "start": "2645559",
    "end": "2652240"
  },
  {
    "text": "over application is small and you don't have uh you don't see lot of interdependency you know multiple",
    "start": "2652240",
    "end": "2658920"
  },
  {
    "text": "communication Downstream components various integration different technology languages I don't think deer is required",
    "start": "2658920",
    "end": "2665640"
  },
  {
    "text": "because you're not there you are typically you know rather than you should avoid using any other you know",
    "start": "2665640",
    "end": "2671160"
  },
  {
    "text": "component as a additional architecture component and build the complexity but down the line what I've seen is wherever",
    "start": "2671160",
    "end": "2677440"
  },
  {
    "text": "there are very complex use cases and situation there are various languages different languages diverse set of",
    "start": "2677440",
    "end": "2683960"
  },
  {
    "text": "components and you know systems or various Integrations right that's where it is making more sense so I would say",
    "start": "2683960",
    "end": "2690160"
  },
  {
    "text": "if based on the application complexity we can decide and define whether we really need to introduce Dapper I think",
    "start": "2690160",
    "end": "2697119"
  },
  {
    "text": "that's what like Molina we have introduced it because the use case was there I mean I think we'll try to that",
    "start": "2697119",
    "end": "2702559"
  },
  {
    "text": "as well in a separate session I think so but in the net net upon application",
    "start": "2702559",
    "end": "2708520"
  },
  {
    "text": "complexity Madan that's what I would like to summarize",
    "start": "2708520",
    "end": "2713400"
  },
  {
    "text": "with essentially I saying that when there is complexity there's acceptance for the overhead yes yes because yeah",
    "start": "2713960",
    "end": "2721079"
  },
  {
    "text": "you're right and for example the building blocks I talked about right so wherever you there are cases where using you're using multiple secret manager",
    "start": "2721079",
    "end": "2727720"
  },
  {
    "text": "multiple session management multiple pops up big application like I don't know vard or or or Bank of America where",
    "start": "2727720",
    "end": "2734839"
  },
  {
    "text": "you see multiple line of businesses are interacting right and you don't have any one common uh technology down the line I",
    "start": "2734839",
    "end": "2741559"
  },
  {
    "text": "think then in those area dper will be helpful because it's going to really easy with various uh Integrations and",
    "start": "2741559",
    "end": "2748800"
  },
  {
    "text": "various diverse set of",
    "start": "2748800",
    "end": "2752359"
  },
  {
    "text": "Technology got it thank you one it's in a very good thing in a poly",
    "start": "2754319",
    "end": "2760760"
  },
  {
    "text": "Cloud situation yeah definitely you're right poly cloud is that's what I mentioned the poly Cloud example po",
    "start": "2760760",
    "end": "2766760"
  },
  {
    "text": "Cloud po Cloud yeah yes see one advantage with daer is that if you have multiple applications that need P typ or",
    "start": "2766760",
    "end": "2774319"
  },
  {
    "text": "State Management any of the building blocks we just I mean using Dapper you can just plug in application can just",
    "start": "2774319",
    "end": "2780960"
  },
  {
    "text": "plug in those blending blocks instead of deploying each of those services for each application it's a TDS correct",
    "start": "2780960",
    "end": "2787720"
  },
  {
    "text": "correct yep yep okay so I think quickly I think in the interest of time I'll quickly move",
    "start": "2787720",
    "end": "2793960"
  },
  {
    "text": "forward so I now I'll two or three building blocks with some examples we'll take State Management pubsub and the",
    "start": "2793960",
    "end": "2800800"
  },
  {
    "text": "service to service invocation in the interest of time I won't be able to cover other building blocks that we can",
    "start": "2800800",
    "end": "2806040"
  },
  {
    "text": "cover maybe in further sessions which we can request from opo group okay so quickly the State Management I think I",
    "start": "2806040",
    "end": "2812400"
  },
  {
    "text": "talked about State Management you can see how State Management can be helpful again you can use State Management API",
    "start": "2812400",
    "end": "2818119"
  },
  {
    "text": "to read save query your key value payers your data via depper and you can see over service if you're calling you are",
    "start": "2818119",
    "end": "2825440"
  },
  {
    "text": "you'll call a deer instance deer API and then deer down the line will have a store management uh state store",
    "start": "2825440",
    "end": "2830960"
  },
  {
    "text": "component which will resolve your query based on whatever implementation you using okay so that's a state management",
    "start": "2830960",
    "end": "2836880"
  },
  {
    "text": "example and down the line somebody can mother right so simple is fine but",
    "start": "2836880",
    "end": "2841960"
  },
  {
    "text": "complex situation is where State Management cases where depper will be helpful like this one where you are",
    "start": "2841960",
    "end": "2847359"
  },
  {
    "text": "setting the choices on concy Control Data consistency where you have bulk updates right with you where bulk",
    "start": "2847359",
    "end": "2852440"
  },
  {
    "text": "updates are there based on your multiple request various scenarios so all these scenario where bulk update or or delete",
    "start": "2852440",
    "end": "2859960"
  },
  {
    "text": "or or add on your multiple operation right those are the scenarios where State Management API from DEA is going",
    "start": "2859960",
    "end": "2867160"
  },
  {
    "text": "to be more helpful normal key value get set is not a big deal but and of course the major implementation wherever the",
    "start": "2867160",
    "end": "2873359"
  },
  {
    "text": "implementation is varying or changing or there are multiple impl mentation right and you need to get the response from",
    "start": "2873359",
    "end": "2879760"
  },
  {
    "text": "various uh you know product or various line of business on the line okay uh okay this is an example guys I mean just",
    "start": "2879760",
    "end": "2886160"
  },
  {
    "text": "a kind of a small coding you know this building block and this is a JavaScript SDK right so what I'm trying to show is",
    "start": "2886160",
    "end": "2892480"
  },
  {
    "text": "over here is how to write how to use the JavaScript uh Dapper SDK for State",
    "start": "2892480",
    "end": "2897960"
  },
  {
    "text": "Management and how do you write a small uh code snippet for saving and getting",
    "start": "2897960",
    "end": "2903160"
  },
  {
    "text": "okay so typically the deer client of course based on language support and provide your host and Port name and then",
    "start": "2903160",
    "end": "2910079"
  },
  {
    "text": "get the state from this and then you know save the state so you know it typically await clear Cent state. save",
    "start": "2910079",
    "end": "2916599"
  },
  {
    "text": "is you will be able to save your state and this state can be fetch using of course get state so this is standard",
    "start": "2916599",
    "end": "2921800"
  },
  {
    "text": "JavaScript but now rather than the normal coding you are using deer client so the whole libraries is is is driven",
    "start": "2921800",
    "end": "2928480"
  },
  {
    "text": "from Deer so you are using deer specific SDK code okay that development kit basically uh let me move on to Second uh",
    "start": "2928480",
    "end": "2935240"
  },
  {
    "text": "invoke second building block service to service invocation I think we talked about it I think somebody asked it I",
    "start": "2935240",
    "end": "2941520"
  },
  {
    "text": "have the you know I said you please stay so just look at this slide you will get the answer so when we are talking with",
    "start": "2941520",
    "end": "2946599"
  },
  {
    "text": "multiple Services how can we reliably and securely communicate with each others you know typically this is always",
    "start": "2946599",
    "end": "2951920"
  },
  {
    "text": "a challenge and these are the problem I was referring to right which deer will help service Discovery how do I discover",
    "start": "2951920",
    "end": "2957040"
  },
  {
    "text": "my different Services Discovery is always a problem until you have a discovery API or Discover it",
    "start": "2957040",
    "end": "2963119"
  },
  {
    "text": "standardizing your API call between Services how can I standardize the various services how between Services",
    "start": "2963119",
    "end": "2968480"
  },
  {
    "text": "among Services intercommunication you always talk it like how do I call services securely and based on uh you",
    "start": "2968480",
    "end": "2974359"
  },
  {
    "text": "know Access Control level which method needs to call mitigating request time out of failure if there is a failure how",
    "start": "2974359",
    "end": "2979760"
  },
  {
    "text": "do I mitigate it what are the transient error right and then implementing observ and tracing there is no way to observe",
    "start": "2979760",
    "end": "2985520"
  },
  {
    "text": "you know trace and track your stuff so these are generally uh comes down for a",
    "start": "2985520",
    "end": "2991119"
  },
  {
    "text": "developer in a service to service invocation in environment and that's where deer shines over here and IT",
    "start": "2991119",
    "end": "2997960"
  },
  {
    "text": "addresses challenges and how can you do that depper has a service invocation API you which typically use as reverse proxy",
    "start": "2997960",
    "end": "3004599"
  },
  {
    "text": "we all know what which holds buil-in service discovery which you can use it",
    "start": "3004599",
    "end": "3009839"
  },
  {
    "text": "down the line it also has distributed tracing there is a uh you know tool called uh zkin metrix error handling",
    "start": "3009839",
    "end": "3017960"
  },
  {
    "text": "encryption and more so typically you invoke deer API on deer instance okay",
    "start": "3017960",
    "end": "3023040"
  },
  {
    "text": "based on your stuff deer instance will discover and communicate with each other so overall communication I will show you",
    "start": "3023040",
    "end": "3029119"
  },
  {
    "text": "the example as well this is example you can this very good workflow as to how",
    "start": "3029119",
    "end": "3034880"
  },
  {
    "text": "deer can help in service to service invocation you see service a and service B service a wants to talk to service B",
    "start": "3034880",
    "end": "3041280"
  },
  {
    "text": "the direct communication is always there but there are challenges we know that so see service a has a depper side car",
    "start": "3041280",
    "end": "3046760"
  },
  {
    "text": "service B has a deer side car they are talking via Deer Side car via deer service a will call",
    "start": "3046760",
    "end": "3052760"
  },
  {
    "text": "deer instance which is a process and deer will call another deer instance",
    "start": "3052760",
    "end": "3057839"
  },
  {
    "text": "which is part of service B and this will invoke this will find the name resolution component and find the name",
    "start": "3057839",
    "end": "3063160"
  },
  {
    "text": "of service B and this instance will call service B service B will resolve your query and get the answer to uh forward",
    "start": "3063160",
    "end": "3070480"
  },
  {
    "text": "the answer to this deer site car and this will forward to this dier and finally this will send response back to",
    "start": "3070480",
    "end": "3076000"
  },
  {
    "text": "service a so an example has to how you can invoke multi services without any",
    "start": "3076000",
    "end": "3081960"
  },
  {
    "text": "issues securely VI depper okay and there an example uh I mean standard code AS to",
    "start": "3081960",
    "end": "3088280"
  },
  {
    "text": "JavaScript SDK again so how can you use it you are use the deer host and",
    "start": "3088280",
    "end": "3093319"
  },
  {
    "text": "response and you fetch the URL and then pass on your deer application ID and",
    "start": "3093319",
    "end": "3099200"
  },
  {
    "text": "then try to process it so typically this is how you can invoke services to services in Deer okay third is the and",
    "start": "3099200",
    "end": "3107319"
  },
  {
    "text": "last uh building block for today is pops up very very popular we know right communicate with each other via messages",
    "start": "3107319",
    "end": "3113880"
  },
  {
    "text": "so you know down the line problems are there right we talked about about it queing or you know how do we failure",
    "start": "3113880",
    "end": "3119720"
  },
  {
    "text": "delivery and all that right for example using ccon and all that so all these are the problem and again deer shines here",
    "start": "3119720",
    "end": "3126440"
  },
  {
    "text": "as well it helps you via you know same it has a deer Pub sub building block API",
    "start": "3126440",
    "end": "3132400"
  },
  {
    "text": "that is a name you use that API and you let DEA do everything I will show you the uh diagram that will be easy yeah",
    "start": "3132400",
    "end": "3139319"
  },
  {
    "text": "this diagram you see the diagram now uh there's a deer sub API building blog example this is a publisher the",
    "start": "3139319",
    "end": "3145599"
  },
  {
    "text": "subscriber you see see and in between there are components there are four five component could be more deer can support",
    "start": "3145599",
    "end": "3150760"
  },
  {
    "text": "any red you know you have your net streaming or your aure service bus or gcp pup sub right anything so over here",
    "start": "3150760",
    "end": "3158000"
  },
  {
    "text": "again all the the cart publisher and these are the services so you see deer",
    "start": "3158000",
    "end": "3163119"
  },
  {
    "text": "has already subscribed uh your services so so rather than so dier is subscribing",
    "start": "3163119",
    "end": "3168240"
  },
  {
    "text": "on behalf of you you can see to receive the messages on topic DEA subscribe to the pup up Compound on your so every",
    "start": "3168240",
    "end": "3175200"
  },
  {
    "text": "service is subscribed by DEA okay you see the Subscribe a depper now uh cart will call a depper instance okay",
    "start": "3175200",
    "end": "3182240"
  },
  {
    "text": "based on the configuration this depper will find out it is redis or gcp or something else it will invoke the right",
    "start": "3182240",
    "end": "3188240"
  },
  {
    "text": "component and then down we call another deer instance which will have this shipping and for email whatever wherever",
    "start": "3188240",
    "end": "3195119"
  },
  {
    "text": "you subscribe if there's a message for you deer will be invoked we'll get the response and then down the line deer",
    "start": "3195119",
    "end": "3200400"
  },
  {
    "text": "will send back the response to the caller so that's typically an example of how uh Dapper API can work",
    "start": "3200400",
    "end": "3207280"
  },
  {
    "text": "so I'll take a pause over here guys and uh yeah this is an example again publishing I think we talked about it",
    "start": "3207280",
    "end": "3213359"
  },
  {
    "text": "this is Javascript again deer client you use it and use the standard pops up method for publishing and subscriber",
    "start": "3213359",
    "end": "3219799"
  },
  {
    "text": "there's a method called subscribe okay and these are the resources for deer I think it is a quick",
    "start": "3219799",
    "end": "3226559"
  },
  {
    "text": "in intro have more sessions with handson",
    "start": "3226559",
    "end": "3232599"
  },
  {
    "text": "[Music]",
    "start": "3233030",
    "end": "3239269"
  }
]