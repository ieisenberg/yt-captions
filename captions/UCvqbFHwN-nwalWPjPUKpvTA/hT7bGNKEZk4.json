[
  {
    "text": "all right welcome everyone to our",
    "start": "359",
    "end": "3120"
  },
  {
    "text": "session about securely interacting with",
    "start": "3120",
    "end": "5460"
  },
  {
    "text": "Edge devices in kubernetes",
    "start": "5460",
    "end": "9319"
  },
  {
    "text": "so my name is Eugen I'm a product",
    "start": "9780",
    "end": "12179"
  },
  {
    "text": "manager at Microsoft and my fellow Dev",
    "start": "12179",
    "end": "16560"
  },
  {
    "text": "Aditya could not be here today in person",
    "start": "16560",
    "end": "19640"
  },
  {
    "text": "but without further Ado let's get into",
    "start": "19640",
    "end": "22680"
  },
  {
    "text": "it",
    "start": "22680",
    "end": "24980"
  },
  {
    "text": "so I'll just kind of go over the problem",
    "start": "25199",
    "end": "27900"
  },
  {
    "text": "of iot devices at the edge and then I'll",
    "start": "27900",
    "end": "31260"
  },
  {
    "text": "briefly explain what is awkary and how",
    "start": "31260",
    "end": "33840"
  },
  {
    "text": "does it work and then the problem with",
    "start": "33840",
    "end": "36600"
  },
  {
    "text": "secret management at the edge",
    "start": "36600",
    "end": "38940"
  },
  {
    "text": "then I'll talk about our solution",
    "start": "38940",
    "end": "41160"
  },
  {
    "text": "proposal and I'll show a quick demo for",
    "start": "41160",
    "end": "44340"
  },
  {
    "text": "a proof of concept and then a couple",
    "start": "44340",
    "end": "46980"
  },
  {
    "text": "more considerations with our solution",
    "start": "46980",
    "end": "51140"
  },
  {
    "text": "so as you may know at the edge there's a",
    "start": "52680",
    "end": "55680"
  },
  {
    "text": "heterogeneous ecosystem of devices they",
    "start": "55680",
    "end": "59039"
  },
  {
    "text": "all have different amount of computes so",
    "start": "59039",
    "end": "61199"
  },
  {
    "text": "you may have servers PCS as well as iot",
    "start": "61199",
    "end": "64080"
  },
  {
    "text": "devices that can act as controllers",
    "start": "64080",
    "end": "66840"
  },
  {
    "text": "sensors and more",
    "start": "66840",
    "end": "69119"
  },
  {
    "text": "and this iot environment is constantly",
    "start": "69119",
    "end": "71760"
  },
  {
    "text": "scaling up or down with devices and they",
    "start": "71760",
    "end": "74220"
  },
  {
    "text": "often depend on network availability as",
    "start": "74220",
    "end": "76260"
  },
  {
    "text": "well",
    "start": "76260",
    "end": "77340"
  },
  {
    "text": "so since these iot devices are too small",
    "start": "77340",
    "end": "80700"
  },
  {
    "text": "too old and too locked down to run",
    "start": "80700",
    "end": "82920"
  },
  {
    "text": "kubernetes on themselves today how can",
    "start": "82920",
    "end": "85680"
  },
  {
    "text": "we manage and coordinate these from a",
    "start": "85680",
    "end": "87780"
  },
  {
    "text": "cluster",
    "start": "87780",
    "end": "90200"
  },
  {
    "text": "so the solution for this is awkary which",
    "start": "91380",
    "end": "94439"
  },
  {
    "text": "stands for a kubernetes resource",
    "start": "94439",
    "end": "96479"
  },
  {
    "text": "interface and agree is currently a",
    "start": "96479",
    "end": "98820"
  },
  {
    "text": "Sandbox project and it makes connections",
    "start": "98820",
    "end": "101220"
  },
  {
    "text": "to iot Leaf devices via their protocols",
    "start": "101220",
    "end": "103920"
  },
  {
    "text": "So currently awkward supports common",
    "start": "103920",
    "end": "107040"
  },
  {
    "text": "protocols like OPC UA onvif and UW but",
    "start": "107040",
    "end": "111119"
  },
  {
    "text": "users can also use our template for",
    "start": "111119",
    "end": "113579"
  },
  {
    "text": "writing Custom Custom protocol handlers",
    "start": "113579",
    "end": "115979"
  },
  {
    "text": "as well",
    "start": "115979",
    "end": "117899"
  },
  {
    "text": "so new devices are detected",
    "start": "117899",
    "end": "120180"
  },
  {
    "text": "automatically which makes scaling really",
    "start": "120180",
    "end": "122460"
  },
  {
    "text": "easy and devices that are taken off or",
    "start": "122460",
    "end": "125759"
  },
  {
    "text": "down due to network availability will",
    "start": "125759",
    "end": "127740"
  },
  {
    "text": "also automatically disappear",
    "start": "127740",
    "end": "130560"
  },
  {
    "text": "so these devices will be exposed as",
    "start": "130560",
    "end": "133020"
  },
  {
    "text": "kubernetes resources on your cluster",
    "start": "133020",
    "end": "135360"
  },
  {
    "text": "just like memory or CPUs and the augery",
    "start": "135360",
    "end": "138540"
  },
  {
    "text": "Brokers will allow you to use the signal",
    "start": "138540",
    "end": "140819"
  },
  {
    "text": "from these devices in your applications",
    "start": "140819",
    "end": "143000"
  },
  {
    "text": "and workloads can be assigned to",
    "start": "143000",
    "end": "146160"
  },
  {
    "text": "specific devices or groups of devices",
    "start": "146160",
    "end": "148680"
  },
  {
    "text": "even if they're attached to other nodes",
    "start": "148680",
    "end": "151680"
  },
  {
    "text": "so this means you can get direct signal",
    "start": "151680",
    "end": "154080"
  },
  {
    "text": "by running on the Node closest to the",
    "start": "154080",
    "end": "155879"
  },
  {
    "text": "device which eliminates latency and if",
    "start": "155879",
    "end": "158640"
  },
  {
    "text": "you have multiple devices connected to",
    "start": "158640",
    "end": "160620"
  },
  {
    "text": "the network all the Clusters and nodes",
    "start": "160620",
    "end": "162720"
  },
  {
    "text": "can see the awkward devices",
    "start": "162720",
    "end": "165000"
  },
  {
    "text": "and also if a node or cluster goes down",
    "start": "165000",
    "end": "168060"
  },
  {
    "text": "then the others can continue to pick up",
    "start": "168060",
    "end": "170519"
  },
  {
    "text": "the work for you",
    "start": "170519",
    "end": "171959"
  },
  {
    "text": "and as per developers augery makes it",
    "start": "171959",
    "end": "174599"
  },
  {
    "text": "easy for you to deliver containerized",
    "start": "174599",
    "end": "176760"
  },
  {
    "text": "workloads meant for iot devices with",
    "start": "176760",
    "end": "178860"
  },
  {
    "text": "ease so you don't need to code for each",
    "start": "178860",
    "end": "181920"
  },
  {
    "text": "and every specific camera you can just",
    "start": "181920",
    "end": "184200"
  },
  {
    "text": "write a more generic code for each type",
    "start": "184200",
    "end": "186660"
  },
  {
    "text": "of device or groups of devices",
    "start": "186660",
    "end": "190340"
  },
  {
    "text": "so here's a brief overview of how",
    "start": "194280",
    "end": "197040"
  },
  {
    "text": "awkward works there's five main",
    "start": "197040",
    "end": "199260"
  },
  {
    "text": "components that you should know so the",
    "start": "199260",
    "end": "201959"
  },
  {
    "text": "first is the augury configuration and",
    "start": "201959",
    "end": "204180"
  },
  {
    "text": "this is a crd which tells augri what",
    "start": "204180",
    "end": "207239"
  },
  {
    "text": "kind of device to look for and you can",
    "start": "207239",
    "end": "209580"
  },
  {
    "text": "also tell it to deploy a broker for",
    "start": "209580",
    "end": "211800"
  },
  {
    "text": "those devices",
    "start": "211800",
    "end": "213900"
  },
  {
    "text": "then you have the discovery Handler",
    "start": "213900",
    "end": "215819"
  },
  {
    "text": "which uses its protocols to find the",
    "start": "215819",
    "end": "218159"
  },
  {
    "text": "devices and then it will inform the",
    "start": "218159",
    "end": "220680"
  },
  {
    "text": "agent which runs on all the worker nodes",
    "start": "220680",
    "end": "223260"
  },
  {
    "text": "and the agent connects to the cubelet",
    "start": "223260",
    "end": "225659"
  },
  {
    "text": "according to the kubernetes device",
    "start": "225659",
    "end": "227580"
  },
  {
    "text": "plugin framework to expose availability",
    "start": "227580",
    "end": "230040"
  },
  {
    "text": "changes to the kubernetes scheduler",
    "start": "230040",
    "end": "233519"
  },
  {
    "text": "and then the awkward instance is an",
    "start": "233519",
    "end": "236220"
  },
  {
    "text": "instant crd created by the agent to",
    "start": "236220",
    "end": "238860"
  },
  {
    "text": "track the availability and usage of the",
    "start": "238860",
    "end": "240959"
  },
  {
    "text": "device and then the controller which",
    "start": "240959",
    "end": "243360"
  },
  {
    "text": "runs on the master node in the cluster",
    "start": "243360",
    "end": "245340"
  },
  {
    "text": "deploys the Brokers for the devices to",
    "start": "245340",
    "end": "247920"
  },
  {
    "text": "connect to them and utilize them and it",
    "start": "247920",
    "end": "250680"
  },
  {
    "text": "can also handle any node of",
    "start": "250680",
    "end": "252480"
  },
  {
    "text": "disappearances to modify the relevant",
    "start": "252480",
    "end": "254879"
  },
  {
    "text": "instances",
    "start": "254879",
    "end": "257359"
  },
  {
    "text": "so this is kind of like the workflow of",
    "start": "261060",
    "end": "263880"
  },
  {
    "text": "how awkward works so the cluster",
    "start": "263880",
    "end": "265800"
  },
  {
    "text": "operator first applies the augery",
    "start": "265800",
    "end": "268740"
  },
  {
    "text": "configuration then accuracy which is the",
    "start": "268740",
    "end": "271680"
  },
  {
    "text": "config crd is created and detected by",
    "start": "271680",
    "end": "274800"
  },
  {
    "text": "the agent",
    "start": "274800",
    "end": "276000"
  },
  {
    "text": "then the discovery Handler that is",
    "start": "276000",
    "end": "278340"
  },
  {
    "text": "specified in the configuration is",
    "start": "278340",
    "end": "280080"
  },
  {
    "text": "deployed and it will go and find those",
    "start": "280080",
    "end": "282720"
  },
  {
    "text": "devices and then tell the agent of the",
    "start": "282720",
    "end": "285240"
  },
  {
    "text": "discovered devices",
    "start": "285240",
    "end": "287040"
  },
  {
    "text": "then the agent creates the instance ERD",
    "start": "287040",
    "end": "289919"
  },
  {
    "text": "which is auguryi for each discovered",
    "start": "289919",
    "end": "292320"
  },
  {
    "text": "device",
    "start": "292320",
    "end": "293580"
  },
  {
    "text": "and the awkward controller detects the",
    "start": "293580",
    "end": "295979"
  },
  {
    "text": "changes in the instances and schedules",
    "start": "295979",
    "end": "298620"
  },
  {
    "text": "broker pods for those devices",
    "start": "298620",
    "end": "301620"
  },
  {
    "text": "then the broker is allocated and the",
    "start": "301620",
    "end": "304500"
  },
  {
    "text": "instance is updated with the reserved",
    "start": "304500",
    "end": "306660"
  },
  {
    "text": "slot and the broker pod begins to run",
    "start": "306660",
    "end": "309479"
  },
  {
    "text": "and it'll establish connection with the",
    "start": "309479",
    "end": "311820"
  },
  {
    "text": "device",
    "start": "311820",
    "end": "314000"
  },
  {
    "text": "so there are several challenges with",
    "start": "316139",
    "end": "318540"
  },
  {
    "text": "credential management at the edge right",
    "start": "318540",
    "end": "320220"
  },
  {
    "text": "now",
    "start": "320220",
    "end": "321300"
  },
  {
    "text": "um currently you know passing",
    "start": "321300",
    "end": "322620"
  },
  {
    "text": "credentials into augery would be plain",
    "start": "322620",
    "end": "324539"
  },
  {
    "text": "text which that might not be as secure",
    "start": "324539",
    "end": "326880"
  },
  {
    "text": "as attackers can just easily spoof that",
    "start": "326880",
    "end": "330139"
  },
  {
    "text": "Secrets might also get changed and we",
    "start": "330139",
    "end": "332759"
  },
  {
    "text": "need to be able to monitor the updates",
    "start": "332759",
    "end": "334680"
  },
  {
    "text": "and pass in the updated credentials",
    "start": "334680",
    "end": "337800"
  },
  {
    "text": "and devices also have heterogeneous",
    "start": "337800",
    "end": "340080"
  },
  {
    "text": "requirements for authentication and",
    "start": "340080",
    "end": "342240"
  },
  {
    "text": "storing secrets so for example OPC UA",
    "start": "342240",
    "end": "345660"
  },
  {
    "text": "uses certificates whereas onvif may use",
    "start": "345660",
    "end": "348840"
  },
  {
    "text": "connection strings like urls",
    "start": "348840",
    "end": "352880"
  },
  {
    "text": "so our proposal is to have the awkward",
    "start": "354539",
    "end": "357840"
  },
  {
    "text": "agent retrieve the secrets or other data",
    "start": "357840",
    "end": "360479"
  },
  {
    "text": "and pass it to the Discovery Handler as",
    "start": "360479",
    "end": "362580"
  },
  {
    "text": "a part of its Discovery request",
    "start": "362580",
    "end": "364740"
  },
  {
    "text": "and we wanted to have a native",
    "start": "364740",
    "end": "366660"
  },
  {
    "text": "kubernetes experience and we plan to",
    "start": "366660",
    "end": "369120"
  },
  {
    "text": "support both secrets and config maps to",
    "start": "369120",
    "end": "372539"
  },
  {
    "text": "be able to enable the credential",
    "start": "372539",
    "end": "374880"
  },
  {
    "text": "management",
    "start": "374880",
    "end": "377180"
  },
  {
    "text": "so on the right you can see our example",
    "start": "378000",
    "end": "380940"
  },
  {
    "text": "configuration yaml and we have added a",
    "start": "380940",
    "end": "384000"
  },
  {
    "text": "new discovery field called Discovery",
    "start": "384000",
    "end": "386160"
  },
  {
    "text": "properties which can refer to config map",
    "start": "386160",
    "end": "389460"
  },
  {
    "text": "data Secrets or plain text",
    "start": "389460",
    "end": "392340"
  },
  {
    "text": "so at the top you see like our normal",
    "start": "392340",
    "end": "395280"
  },
  {
    "text": "configuration yaml with the spec and the",
    "start": "395280",
    "end": "398220"
  },
  {
    "text": "discovery Handler and in the details",
    "start": "398220",
    "end": "400319"
  },
  {
    "text": "section you can do filtering like",
    "start": "400319",
    "end": "402900"
  },
  {
    "text": "excluding certain IP or Mac addresses",
    "start": "402900",
    "end": "405900"
  },
  {
    "text": "Etc",
    "start": "405900",
    "end": "407460"
  },
  {
    "text": "and then in the discovery properties",
    "start": "407460",
    "end": "409319"
  },
  {
    "text": "section where we'll be passing the",
    "start": "409319",
    "end": "411419"
  },
  {
    "text": "secret data it's in the form of a key",
    "start": "411419",
    "end": "414180"
  },
  {
    "text": "value pair list and so these get",
    "start": "414180",
    "end": "416699"
  },
  {
    "text": "initialized as a part of the",
    "start": "416699",
    "end": "418319"
  },
  {
    "text": "configuration by the user",
    "start": "418319",
    "end": "420840"
  },
  {
    "text": "and these properties can apply to a",
    "start": "420840",
    "end": "424139"
  },
  {
    "text": "single device or a group of devices so",
    "start": "424139",
    "end": "426600"
  },
  {
    "text": "that we can provision all the cameras in",
    "start": "426600",
    "end": "428940"
  },
  {
    "text": "a particular area the same way",
    "start": "428940",
    "end": "432240"
  },
  {
    "text": "and then there's also an optional",
    "start": "432240",
    "end": "434340"
  },
  {
    "text": "parameter and this is defaulted to false",
    "start": "434340",
    "end": "436919"
  },
  {
    "text": "so if the key doesn't exist in the",
    "start": "436919",
    "end": "439259"
  },
  {
    "text": "secret or config map then the",
    "start": "439259",
    "end": "440940"
  },
  {
    "text": "configuration deployment will fail but",
    "start": "440940",
    "end": "443400"
  },
  {
    "text": "if it's set to true and the key doesn't",
    "start": "443400",
    "end": "445319"
  },
  {
    "text": "exist then the agent will just not add",
    "start": "445319",
    "end": "448259"
  },
  {
    "text": "the entry to the list passed to the",
    "start": "448259",
    "end": "450120"
  },
  {
    "text": "Discovery Handler and the deployment",
    "start": "450120",
    "end": "451979"
  },
  {
    "text": "will still succeed so that's up to the",
    "start": "451979",
    "end": "454020"
  },
  {
    "text": "user",
    "start": "454020",
    "end": "456379"
  },
  {
    "text": "so now let's look at our new workflow",
    "start": "457259",
    "end": "459360"
  },
  {
    "text": "I've highlighted the changes here so",
    "start": "459360",
    "end": "461520"
  },
  {
    "text": "before everything it's up to the cluster",
    "start": "461520",
    "end": "463919"
  },
  {
    "text": "operator to set up the secrets and make",
    "start": "463919",
    "end": "466380"
  },
  {
    "text": "sure that they're all properly",
    "start": "466380",
    "end": "467759"
  },
  {
    "text": "provisioned",
    "start": "467759",
    "end": "469020"
  },
  {
    "text": "then the cluster operator will apply the",
    "start": "469020",
    "end": "471599"
  },
  {
    "text": "configuration and when the accuracy is",
    "start": "471599",
    "end": "474360"
  },
  {
    "text": "created the agent will pull down or",
    "start": "474360",
    "end": "477120"
  },
  {
    "text": "update the necessary Secrets since it",
    "start": "477120",
    "end": "479460"
  },
  {
    "text": "has the API server access to do that",
    "start": "479460",
    "end": "482520"
  },
  {
    "text": "and then it will start and the discovery",
    "start": "482520",
    "end": "484620"
  },
  {
    "text": "Handler is deployed and then the",
    "start": "484620",
    "end": "486780"
  },
  {
    "text": "discovery Handler gets the credentials",
    "start": "486780",
    "end": "489599"
  },
  {
    "text": "from the agent and verifies that they",
    "start": "489599",
    "end": "492120"
  },
  {
    "text": "can connect",
    "start": "492120",
    "end": "493979"
  },
  {
    "text": "so the rest of the workflow is the same",
    "start": "493979",
    "end": "496139"
  },
  {
    "text": "and as of now the agent can't monitor",
    "start": "496139",
    "end": "499259"
  },
  {
    "text": "changes in the secret data after the",
    "start": "499259",
    "end": "501599"
  },
  {
    "text": "configuration is deployed so in the case",
    "start": "501599",
    "end": "504000"
  },
  {
    "text": "that it has changed I'm currently the",
    "start": "504000",
    "end": "506160"
  },
  {
    "text": "operator would need to manually redeploy",
    "start": "506160",
    "end": "508500"
  },
  {
    "text": "the configuration yaml",
    "start": "508500",
    "end": "511759"
  },
  {
    "text": "so I'll be showing like a quick proof of",
    "start": "514320",
    "end": "517320"
  },
  {
    "text": "concept demo of how this all works",
    "start": "517320",
    "end": "520860"
  },
  {
    "text": "um so let's look at the configuration",
    "start": "520860",
    "end": "522240"
  },
  {
    "text": "yaml so in the first half um we have the",
    "start": "522240",
    "end": "525420"
  },
  {
    "text": "secrets we have the demo odd secret",
    "start": "525420",
    "end": "527880"
  },
  {
    "text": "which is a kubernetes secret and we used",
    "start": "527880",
    "end": "530339"
  },
  {
    "text": "string data to pass in the username and",
    "start": "530339",
    "end": "533100"
  },
  {
    "text": "password so we'll be using an on the",
    "start": "533100",
    "end": "535440"
  },
  {
    "text": "device today and for OPC UA you can pass",
    "start": "535440",
    "end": "538500"
  },
  {
    "text": "inserts and keys for example",
    "start": "538500",
    "end": "542160"
  },
  {
    "text": "um then you can use the endpoint",
    "start": "542160",
    "end": "543720"
  },
  {
    "text": "reference for the on the camera to get",
    "start": "543720",
    "end": "545940"
  },
  {
    "text": "the device uid for the username and",
    "start": "545940",
    "end": "548279"
  },
  {
    "text": "password lookup",
    "start": "548279",
    "end": "550080"
  },
  {
    "text": "and then on the right we have the actual",
    "start": "550080",
    "end": "552360"
  },
  {
    "text": "auger configuration yaml where we",
    "start": "552360",
    "end": "554399"
  },
  {
    "text": "specify the protocol for the discovery",
    "start": "554399",
    "end": "556560"
  },
  {
    "text": "Handler so again we're using onvif and",
    "start": "556560",
    "end": "559620"
  },
  {
    "text": "then you can filter out any cameras you",
    "start": "559620",
    "end": "561600"
  },
  {
    "text": "don't want to discover through the IP",
    "start": "561600",
    "end": "563459"
  },
  {
    "text": "address Mac address or URL strings then",
    "start": "563459",
    "end": "567180"
  },
  {
    "text": "in the discovery properties we specify",
    "start": "567180",
    "end": "569700"
  },
  {
    "text": "the username and password keys",
    "start": "569700",
    "end": "572339"
  },
  {
    "text": "then we're just specifying that at the",
    "start": "572339",
    "end": "575279"
  },
  {
    "text": "end we want our broker container to be",
    "start": "575279",
    "end": "577560"
  },
  {
    "text": "deployed for the devices that are",
    "start": "577560",
    "end": "579540"
  },
  {
    "text": "discovered",
    "start": "579540",
    "end": "582019"
  },
  {
    "text": "so first I can verify that my camera is",
    "start": "584760",
    "end": "588060"
  },
  {
    "text": "working properly by using the on this",
    "start": "588060",
    "end": "590279"
  },
  {
    "text": "device manager on my host so at first",
    "start": "590279",
    "end": "592680"
  },
  {
    "text": "you can see that we can't watch the live",
    "start": "592680",
    "end": "594720"
  },
  {
    "text": "stream because it has authentication but",
    "start": "594720",
    "end": "597120"
  },
  {
    "text": "when I log in using my credentials which",
    "start": "597120",
    "end": "599160"
  },
  {
    "text": "is admin admin in this case I can log in",
    "start": "599160",
    "end": "601980"
  },
  {
    "text": "and see the live stream properly",
    "start": "601980",
    "end": "605899"
  },
  {
    "text": "and then I have a k3s cluster running on",
    "start": "606839",
    "end": "610920"
  },
  {
    "text": "my device here now usually we can just",
    "start": "610920",
    "end": "613320"
  },
  {
    "text": "deploy awkward really easily through",
    "start": "613320",
    "end": "615180"
  },
  {
    "text": "Helm charts but for this demo I'm",
    "start": "615180",
    "end": "617399"
  },
  {
    "text": "running it locally so each terminal is",
    "start": "617399",
    "end": "619620"
  },
  {
    "text": "running the agent Discovery Handler and",
    "start": "619620",
    "end": "621720"
  },
  {
    "text": "controller",
    "start": "621720",
    "end": "623820"
  },
  {
    "text": "and then I've already applied the",
    "start": "623820",
    "end": "625620"
  },
  {
    "text": "configuration and secrets yaml so now if",
    "start": "625620",
    "end": "629339"
  },
  {
    "text": "I do Coupe control get accuracy you can",
    "start": "629339",
    "end": "632220"
  },
  {
    "text": "see the configuration crd and the",
    "start": "632220",
    "end": "634080"
  },
  {
    "text": "capacity which I set to five cameras",
    "start": "634080",
    "end": "637140"
  },
  {
    "text": "then you can do Cube control get augury",
    "start": "637140",
    "end": "639480"
  },
  {
    "text": "eye and you can see that the instance",
    "start": "639480",
    "end": "641700"
  },
  {
    "text": "has been created by the agent for my",
    "start": "641700",
    "end": "643740"
  },
  {
    "text": "Discover device",
    "start": "643740",
    "end": "645779"
  },
  {
    "text": "and now when I do get secrets you can",
    "start": "645779",
    "end": "648959"
  },
  {
    "text": "see my demo off secret and here I'm just",
    "start": "648959",
    "end": "651480"
  },
  {
    "text": "inserting a screenshot of the",
    "start": "651480",
    "end": "653339"
  },
  {
    "text": "description and you can see the key",
    "start": "653339",
    "end": "655680"
  },
  {
    "text": "pairs",
    "start": "655680",
    "end": "657660"
  },
  {
    "text": "and then from there if I look at the",
    "start": "657660",
    "end": "659760"
  },
  {
    "text": "pause you can see that my broker pod is",
    "start": "659760",
    "end": "662579"
  },
  {
    "text": "running for that device so let's look at",
    "start": "662579",
    "end": "664980"
  },
  {
    "text": "the logs of the broker",
    "start": "664980",
    "end": "668519"
  },
  {
    "text": "here we can see that it's properly",
    "start": "668519",
    "end": "670560"
  },
  {
    "text": "receiving the frames from my camera and",
    "start": "670560",
    "end": "673260"
  },
  {
    "text": "it's accessing the rtsp stream and for",
    "start": "673260",
    "end": "676320"
  },
  {
    "text": "the demo we've logged The Source URL of",
    "start": "676320",
    "end": "678720"
  },
  {
    "text": "the stream which it's accessing with the",
    "start": "678720",
    "end": "681180"
  },
  {
    "text": "username and password as you can see in",
    "start": "681180",
    "end": "683160"
  },
  {
    "text": "the URL",
    "start": "683160",
    "end": "685140"
  },
  {
    "text": "and then from here you could have an app",
    "start": "685140",
    "end": "687360"
  },
  {
    "text": "something like a web application for",
    "start": "687360",
    "end": "689160"
  },
  {
    "text": "example running on your cluster and then",
    "start": "689160",
    "end": "691740"
  },
  {
    "text": "you can have that connect to the broker",
    "start": "691740",
    "end": "693720"
  },
  {
    "text": "so that you can use the video stream in",
    "start": "693720",
    "end": "695880"
  },
  {
    "text": "your application",
    "start": "695880",
    "end": "698540"
  },
  {
    "text": "so there are a couple more",
    "start": "700740",
    "end": "702180"
  },
  {
    "text": "considerations for the solution that I",
    "start": "702180",
    "end": "704459"
  },
  {
    "text": "want to talk about so the first thing is",
    "start": "704459",
    "end": "706980"
  },
  {
    "text": "obviously you want to use the best",
    "start": "706980",
    "end": "709079"
  },
  {
    "text": "practices for kubernetes Secrets augery",
    "start": "709079",
    "end": "712380"
  },
  {
    "text": "accesses the secrets objects via the",
    "start": "712380",
    "end": "714720"
  },
  {
    "text": "kubernetes resource API and it relies on",
    "start": "714720",
    "end": "717720"
  },
  {
    "text": "the cluster owner to encrypt secret",
    "start": "717720",
    "end": "720000"
  },
  {
    "text": "objects and arrange access permission",
    "start": "720000",
    "end": "722339"
  },
  {
    "text": "properly to ensure that secret objects",
    "start": "722339",
    "end": "724980"
  },
  {
    "text": "are secured and to reduce the risk of",
    "start": "724980",
    "end": "727800"
  },
  {
    "text": "accidental exposure",
    "start": "727800",
    "end": "730620"
  },
  {
    "text": "and then depending on the cluster",
    "start": "730620",
    "end": "732600"
  },
  {
    "text": "configuration you may also store",
    "start": "732600",
    "end": "734940"
  },
  {
    "text": "sensitive data in the cloud and you may",
    "start": "734940",
    "end": "737700"
  },
  {
    "text": "need to pull the secrets from a",
    "start": "737700",
    "end": "739320"
  },
  {
    "text": "cloud-backed Key Management Service like",
    "start": "739320",
    "end": "741720"
  },
  {
    "text": "Hashi Corp Vault AWS Azure key Vault or",
    "start": "741720",
    "end": "744839"
  },
  {
    "text": "whatever it may be",
    "start": "744839",
    "end": "746459"
  },
  {
    "text": "and in this case you can actually use",
    "start": "746459",
    "end": "749220"
  },
  {
    "text": "the kubernetes Secret store CSI driver",
    "start": "749220",
    "end": "751640"
  },
  {
    "text": "and this allows you to mount the",
    "start": "751640",
    "end": "754140"
  },
  {
    "text": "existing Key Management Service backed",
    "start": "754140",
    "end": "756360"
  },
  {
    "text": "Secrets or certs as a native kubernetes",
    "start": "756360",
    "end": "759180"
  },
  {
    "text": "secret and then you can use them in our",
    "start": "759180",
    "end": "761700"
  },
  {
    "text": "Discovery properties just like before",
    "start": "761700",
    "end": "764639"
  },
  {
    "text": "and this allows our solution to be",
    "start": "764639",
    "end": "767220"
  },
  {
    "text": "vendor agnostic",
    "start": "767220",
    "end": "770040"
  },
  {
    "text": "some other things in our roadmap for",
    "start": "770040",
    "end": "772200"
  },
  {
    "text": "secret management is improving the agent",
    "start": "772200",
    "end": "774720"
  },
  {
    "text": "so that it can continually monitor the",
    "start": "774720",
    "end": "777000"
  },
  {
    "text": "secret data so anytime the data source",
    "start": "777000",
    "end": "780899"
  },
  {
    "text": "is changed it will reissue the discovery",
    "start": "780899",
    "end": "783779"
  },
  {
    "text": "request anytime",
    "start": "783779",
    "end": "785540"
  },
  {
    "text": "and then if the mandatory properties are",
    "start": "785540",
    "end": "788940"
  },
  {
    "text": "ever deleted from the data source then",
    "start": "788940",
    "end": "791220"
  },
  {
    "text": "augury agents should be able to monitor",
    "start": "791220",
    "end": "793260"
  },
  {
    "text": "for that as well and revoke the",
    "start": "793260",
    "end": "795180"
  },
  {
    "text": "discovery request",
    "start": "795180",
    "end": "797959"
  },
  {
    "text": "we're also looking at how we can",
    "start": "798779",
    "end": "801000"
  },
  {
    "text": "organize our secrets a little better",
    "start": "801000",
    "end": "802800"
  },
  {
    "text": "within this discovery properties section",
    "start": "802800",
    "end": "805160"
  },
  {
    "text": "So currently in this demo I just showed",
    "start": "805160",
    "end": "808740"
  },
  {
    "text": "us mapping the enviv credentials",
    "start": "808740",
    "end": "811380"
  },
  {
    "text": "directly to each device ID to the",
    "start": "811380",
    "end": "814100"
  },
  {
    "text": "credential using the key names in the",
    "start": "814100",
    "end": "816600"
  },
  {
    "text": "format of device ID attended appended to",
    "start": "816600",
    "end": "820500"
  },
  {
    "text": "either credential field category so",
    "start": "820500",
    "end": "823500"
  },
  {
    "text": "device ID username or password",
    "start": "823500",
    "end": "826320"
  },
  {
    "text": "and eventually we might want to have a",
    "start": "826320",
    "end": "829260"
  },
  {
    "text": "list that contains an array of objects",
    "start": "829260",
    "end": "831720"
  },
  {
    "text": "where the device ID is referred to the",
    "start": "831720",
    "end": "834240"
  },
  {
    "text": "username and password Keys which point",
    "start": "834240",
    "end": "836459"
  },
  {
    "text": "to the actual kubernetes secret",
    "start": "836459",
    "end": "838320"
  },
  {
    "text": "information or you know you can use",
    "start": "838320",
    "end": "840420"
  },
  {
    "text": "certs and keys as well",
    "start": "840420",
    "end": "843560"
  },
  {
    "text": "eventually we also want to modify the",
    "start": "845660",
    "end": "849240"
  },
  {
    "text": "discovery Handler and broker to have",
    "start": "849240",
    "end": "851040"
  },
  {
    "text": "several stages of authentication and",
    "start": "851040",
    "end": "853800"
  },
  {
    "text": "conditional on what we pass in so this",
    "start": "853800",
    "end": "856380"
  },
  {
    "text": "would allow us to have separate sets of",
    "start": "856380",
    "end": "858600"
  },
  {
    "text": "credentials each with different access",
    "start": "858600",
    "end": "860639"
  },
  {
    "text": "roles so for example a sensor read",
    "start": "860639",
    "end": "863940"
  },
  {
    "text": "credential can only read sensor data and",
    "start": "863940",
    "end": "867000"
  },
  {
    "text": "a separate set of credentials would be",
    "start": "867000",
    "end": "868560"
  },
  {
    "text": "needed to update firmware so this has",
    "start": "868560",
    "end": "871980"
  },
  {
    "text": "much more many more stages of security",
    "start": "871980",
    "end": "876959"
  },
  {
    "text": "and this is just one of many ways to do",
    "start": "876959",
    "end": "880380"
  },
  {
    "text": "this",
    "start": "880380",
    "end": "881220"
  },
  {
    "text": "um we showed a more kubernetes native",
    "start": "881220",
    "end": "883680"
  },
  {
    "text": "fashion here but there's a plethora of",
    "start": "883680",
    "end": "886260"
  },
  {
    "text": "cncf projects that could simplify this",
    "start": "886260",
    "end": "888600"
  },
  {
    "text": "so for example Dapper has a secret",
    "start": "888600",
    "end": "891600"
  },
  {
    "text": "management feature and they leverage",
    "start": "891600",
    "end": "893760"
  },
  {
    "text": "this a lot they leverage a lot of the",
    "start": "893760",
    "end": "896160"
  },
  {
    "text": "same native components and special",
    "start": "896160",
    "end": "898500"
  },
  {
    "text": "interest group work so one could try to",
    "start": "898500",
    "end": "901500"
  },
  {
    "text": "spin up a separate pod from Dapper that",
    "start": "901500",
    "end": "904440"
  },
  {
    "text": "manages secrets and then passes them",
    "start": "904440",
    "end": "906600"
  },
  {
    "text": "into either the discovery Handler or the",
    "start": "906600",
    "end": "909420"
  },
  {
    "text": "agent",
    "start": "909420",
    "end": "911220"
  },
  {
    "text": "and in general we wanted to keep the",
    "start": "911220",
    "end": "913620"
  },
  {
    "text": "solution as open as possible so that",
    "start": "913620",
    "end": "916500"
  },
  {
    "text": "individual operators can customize this",
    "start": "916500",
    "end": "919320"
  },
  {
    "text": "as needed",
    "start": "919320",
    "end": "922100"
  },
  {
    "text": "so you can read more about our secret",
    "start": "925440",
    "end": "928139"
  },
  {
    "text": "management proposal in the docs PR which",
    "start": "928139",
    "end": "931680"
  },
  {
    "text": "is linked here you can also take a look",
    "start": "931680",
    "end": "934079"
  },
  {
    "text": "at the openpr in our GitHub for",
    "start": "934079",
    "end": "936980"
  },
  {
    "text": "implementation and we're always open to",
    "start": "936980",
    "end": "940019"
  },
  {
    "text": "feedback and review so feel free to take",
    "start": "940019",
    "end": "942240"
  },
  {
    "text": "a look and comment on the pr",
    "start": "942240",
    "end": "944940"
  },
  {
    "text": "um",
    "start": "944940",
    "end": "945600"
  },
  {
    "text": "we're planning to have a new release",
    "start": "945600",
    "end": "947579"
  },
  {
    "text": "this week so keep an eye out for that it",
    "start": "947579",
    "end": "950760"
  },
  {
    "text": "will include lots of bug fixes and",
    "start": "950760",
    "end": "953699"
  },
  {
    "text": "improvements to the uwev Discovery",
    "start": "953699",
    "end": "955740"
  },
  {
    "text": "Handler and Etc",
    "start": "955740",
    "end": "958560"
  },
  {
    "text": "you can also join our slack channel to",
    "start": "958560",
    "end": "961440"
  },
  {
    "text": "ask questions and stay up to date with",
    "start": "961440",
    "end": "963540"
  },
  {
    "text": "augri and our community meetings take",
    "start": "963540",
    "end": "966480"
  },
  {
    "text": "place on the first Tuesday of every",
    "start": "966480",
    "end": "968880"
  },
  {
    "text": "month at this time",
    "start": "968880",
    "end": "971660"
  },
  {
    "text": "and with that I'll open it up to",
    "start": "972060",
    "end": "974579"
  },
  {
    "text": "questions",
    "start": "974579",
    "end": "977000"
  },
  {
    "text": "[Applause]",
    "start": "978790",
    "end": "982509"
  },
  {
    "text": "if anybody's got a question let me bring",
    "start": "982639",
    "end": "985199"
  },
  {
    "text": "you the mic",
    "start": "985199",
    "end": "987680"
  },
  {
    "text": "hi would it be possible to also",
    "start": "998820",
    "end": "1001399"
  },
  {
    "text": "integrate something like industry",
    "start": "1001399",
    "end": "1003560"
  },
  {
    "text": "cameras which are usually uh used as USB",
    "start": "1003560",
    "end": "1007459"
  },
  {
    "text": "cams sorry what kind of cameras industry",
    "start": "1007459",
    "end": "1010880"
  },
  {
    "text": "cameras USB cameras yeah yes yes",
    "start": "1010880",
    "end": "1015380"
  },
  {
    "text": "so I think yeah you can use the similar",
    "start": "1015380",
    "end": "1018139"
  },
  {
    "text": "like our Discovery properties to pass in",
    "start": "1018139",
    "end": "1020420"
  },
  {
    "text": "the authentication and then from there",
    "start": "1020420",
    "end": "1022399"
  },
  {
    "text": "you can just use our U Dev Discovery",
    "start": "1022399",
    "end": "1024500"
  },
  {
    "text": "Handler to connect to the USB camera",
    "start": "1024500",
    "end": "1028540"
  },
  {
    "text": "anybody else got a question",
    "start": "1029299",
    "end": "1032500"
  },
  {
    "text": "well okay thank you that was a great",
    "start": "1035959",
    "end": "1037579"
  },
  {
    "text": "talk",
    "start": "1037579",
    "end": "1038780"
  },
  {
    "text": "all right thank you everyone",
    "start": "1038780",
    "end": "1040920"
  },
  {
    "text": "[Applause]",
    "start": "1040920",
    "end": "1044869"
  }
]