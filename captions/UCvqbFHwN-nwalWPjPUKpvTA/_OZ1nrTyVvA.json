[
  {
    "text": "Welcome to our session titled as harnessing emerging data plan Technologies for next generation of load",
    "start": "799",
    "end": "8639"
  },
  {
    "text": "balancers I am sataki Mishra working as a senior software engineer in Marvel I",
    "start": "8639",
    "end": "14960"
  },
  {
    "text": "have three plus years of experience in implementing programmable data plane using P4 and optimizing data path of",
    "start": "14960",
    "end": "22439"
  },
  {
    "text": "loading for cloud native Solutions like uh cni service MH and load",
    "start": "22439",
    "end": "28840"
  },
  {
    "text": "balancers so in this talk we're going to focus on two main aspects that are load balancers",
    "start": "28960",
    "end": "35879"
  },
  {
    "text": "and the data plan technologies that are used behind them uh over time load balancers have",
    "start": "35879",
    "end": "43039"
  },
  {
    "text": "evolved significantly from just Distributing workloads across backend servers to",
    "start": "43039",
    "end": "50039"
  },
  {
    "text": "supporting a wide range of advanced features that uh ensure seamless application",
    "start": "50039",
    "end": "56719"
  },
  {
    "text": "delivery now the wide range of advanced features we just talk about are like uh",
    "start": "56719",
    "end": "63199"
  },
  {
    "text": "load balancers can support layer 4 layer 7 and DNS based load balancing they",
    "start": "63199",
    "end": "69080"
  },
  {
    "text": "canect Tex reverse proxy as well they support security features like",
    "start": "69080",
    "end": "74360"
  },
  {
    "text": "SSL offloading TLS termination mtls and DDS protection they can do health checks",
    "start": "74360",
    "end": "81439"
  },
  {
    "text": "and monitoring they can scale automatically according to the dynamic change in",
    "start": "81439",
    "end": "86600"
  },
  {
    "text": "environment and uh integrated certificate management systems are also present in the current load balancers",
    "start": "86600",
    "end": "93520"
  },
  {
    "text": "and also they can maintain uh user information for a particular",
    "start": "93520",
    "end": "100840"
  },
  {
    "text": "session so are load balancers truly that important absolutely and that's why",
    "start": "100840",
    "end": "107680"
  },
  {
    "text": "there's a wide array of solutions that are available in the market like engine X Plus ha proxy load balancers Camp load",
    "start": "107680",
    "end": "115960"
  },
  {
    "text": "master and there is a long list of those all these support subset of features",
    "start": "115960",
    "end": "122960"
  },
  {
    "text": "that we just talk about in the previous slide now data plan technology serve as",
    "start": "122960",
    "end": "128560"
  },
  {
    "text": "the backbone of these Solutions enabling them to support a multitude of features",
    "start": "128560",
    "end": "135519"
  },
  {
    "text": "that we just now discussed some of these Solutions are open source some are proprietary so now",
    "start": "135519",
    "end": "142640"
  },
  {
    "text": "in the upcoming slides we'll going to talk about the open- source data plane solutions that are being used widely",
    "start": "142640",
    "end": "149160"
  },
  {
    "text": "Behind These load balancers broadly speaking evf is the",
    "start": "149160",
    "end": "156319"
  },
  {
    "text": "one that is uh used mostly some of the high performing load",
    "start": "156319",
    "end": "161640"
  },
  {
    "text": "balancers are also using dpdk and very few but are still using",
    "start": "161640",
    "end": "168560"
  },
  {
    "text": "VPP so load balancers like Loy Unimog celium catran they are using ebpf with",
    "start": "168560",
    "end": "177040"
  },
  {
    "text": "XDP hook to perform load balancing logic at the device driver layer so you can",
    "start": "177040",
    "end": "182959"
  },
  {
    "text": "per you you can perform load balancing as at the device driver layer and can take all the actions and decisions on",
    "start": "182959",
    "end": "190120"
  },
  {
    "text": "that layer itself without sending traffic to the",
    "start": "190120",
    "end": "195840"
  },
  {
    "text": "kernel then um comes the VPP based Solutions so high density scalable load",
    "start": "195840",
    "end": "202120"
  },
  {
    "text": "balancer and vp's own load balancing plug-in allows us to perform load",
    "start": "202120",
    "end": "207879"
  },
  {
    "text": "balancing logic at the user space now Inver proxy which is being used widely",
    "start": "207879",
    "end": "214920"
  },
  {
    "text": "as a for layer 7 load balancing yeah Inver proxy which is been",
    "start": "214920",
    "end": "222480"
  },
  {
    "text": "used widely for years seven load balancing in many of the open source projects also support VPP networking",
    "start": "222480",
    "end": "229959"
  },
  {
    "text": "stack and Alibaba Cloud Server load balancer used dpdk and load balancers",
    "start": "229959",
    "end": "236360"
  },
  {
    "text": "like F5 citric a and thunder in their ADC models they support dpdk for fast",
    "start": "236360",
    "end": "242840"
  },
  {
    "text": "packet IO so yeah we will going to talk in",
    "start": "242840",
    "end": "248920"
  },
  {
    "text": "detail about these three first we'll get to know what are data planes so in networking data plane",
    "start": "248920",
    "end": "256280"
  },
  {
    "text": "or also known as forwarding plane is the part of the network which carries or",
    "start": "256280",
    "end": "261359"
  },
  {
    "text": "handles the actual user traffic dpdk data plane development kit",
    "start": "261359",
    "end": "267160"
  },
  {
    "text": "that's a high performance user space packet processing framework mostly used for packet IO it bypasses the kernel",
    "start": "267160",
    "end": "273919"
  },
  {
    "text": "networking stack and allows you to send your traffic directly to the user space ebpf extended Buckle packet filter a",
    "start": "273919",
    "end": "281520"
  },
  {
    "text": "powerful inernal packet processing engine which allows custom processing inside the kernel and then VPP which is",
    "start": "281520",
    "end": "289360"
  },
  {
    "text": "Vector packet processor a highspeed modular open source software Network stch that helps in performing efficient",
    "start": "289360",
    "end": "295680"
  },
  {
    "text": "packet processing inside the user space",
    "start": "295680",
    "end": "300600"
  },
  {
    "text": "so yeah some more detail about all three of them dpdk reduces latency by by",
    "start": "303720",
    "end": "310120"
  },
  {
    "text": "passing the kernel layer continuous packet polling",
    "start": "310120",
    "end": "315479"
  },
  {
    "text": "via dpdk provided pole mode drivers where CPU continuously PLL Nick for",
    "start": "315479",
    "end": "321240"
  },
  {
    "text": "incoming traffic instead of relying on the interrupts dpq also optimizes memory",
    "start": "321240",
    "end": "326919"
  },
  {
    "text": "with large pages and pools with the help of uge Pages dpdk offers libraries and",
    "start": "326919",
    "end": "332720"
  },
  {
    "text": "drivers for secure communication and cryptographic operations and it allows Nick to DM package directly to",
    "start": "332720",
    "end": "339520"
  },
  {
    "text": "application address space then comes the ebpf which allows you uh which actually runs in a secure",
    "start": "339520",
    "end": "346199"
  },
  {
    "text": "kernel environment allows us to run custom ebpf program on on demand inside",
    "start": "346199",
    "end": "351280"
  },
  {
    "text": "the kernel ebpf programs get triggered in response to network events or system",
    "start": "351280",
    "end": "358440"
  },
  {
    "text": "calls jit comp filer has been used to convert ebpf B code to Native machine",
    "start": "358440",
    "end": "363560"
  },
  {
    "text": "code and evf is being used widely with XDP hook which allows us to launch a BPF",
    "start": "363560",
    "end": "370000"
  },
  {
    "text": "program as soon as packet is hit on the net",
    "start": "370000",
    "end": "375039"
  },
  {
    "text": "interface then comes the VPP which is a universal data plane it supports l22 L4",
    "start": "375039",
    "end": "380199"
  },
  {
    "text": "networking runs in user space and can be deployed on Virtual machines bare metal containers BPP is based on a graph based",
    "start": "380199",
    "end": "388280"
  },
  {
    "text": "architecture for packet processing that's why it's also like a kind of pluggable architecture you can add or",
    "start": "388280",
    "end": "394919"
  },
  {
    "text": "delete functionality with the help of graph nodes and uh it also offers fast lookup",
    "start": "394919",
    "end": "400960"
  },
  {
    "text": "tables optimized for cook data retrieval BPP is been enhanced through the ex uh",
    "start": "400960",
    "end": "406479"
  },
  {
    "text": "extensive use of plugins and dpdk is also one of the example of those kind of",
    "start": "406479",
    "end": "413800"
  },
  {
    "text": "plugins so these two diagrams effectively illustrate the working mechanism of of the data plane model we",
    "start": "414800",
    "end": "420919"
  },
  {
    "text": "just discussed providing a clear comparison of their architecture and workflow and uh we're going to discuss",
    "start": "420919",
    "end": "427879"
  },
  {
    "text": "them on the basis of how load balancing can be done with the help of them",
    "start": "427879",
    "end": "434240"
  },
  {
    "text": "so first come the ebpf XDP model as soon as the packet comes you can run your",
    "start": "434240",
    "end": "441160"
  },
  {
    "text": "ebpf program with the help of XDP hooking and device driver layer there you can perform the load balancing logic",
    "start": "441160",
    "end": "447560"
  },
  {
    "text": "according to uh whatever action is been done and uh whatever decision is been",
    "start": "447560",
    "end": "453479"
  },
  {
    "text": "made you can either send traffic directly out of that device driver layer",
    "start": "453479",
    "end": "458599"
  },
  {
    "text": "instead of sending it to the kernel networking stack if not required you can directly bypass the packet to the user",
    "start": "458599",
    "end": "466360"
  },
  {
    "text": "space pod or containers using AFX DP driver or you can send traffic to",
    "start": "466360",
    "end": "472960"
  },
  {
    "text": "networking kernel networking stch as well if some kernel processing is been required and uh inside Cal networking",
    "start": "472960",
    "end": "480759"
  },
  {
    "text": "stack there are multiple ebpf hook present at certain points like TC hook socket hook then comes the VPP dpdk",
    "start": "480759",
    "end": "489639"
  },
  {
    "text": "model so as soon as traffic comes with the help of Kernel modules like vfi PCI",
    "start": "489639",
    "end": "497280"
  },
  {
    "text": "driver and um with the help of dpdk provided pole mode driver you can bypass",
    "start": "497280",
    "end": "502879"
  },
  {
    "text": "the kernal networking stack layer and can send traffic directly to the user space where your load balancing logic",
    "start": "502879",
    "end": "508840"
  },
  {
    "text": "will be running also with the help of dpdk you can ED uh acceler accelerator units provided",
    "start": "508840",
    "end": "517320"
  },
  {
    "text": "by the specialized Hardware like crypto flow classifier dma so you can also send",
    "start": "517320",
    "end": "523880"
  },
  {
    "text": "traffic to your specialized Hardware units where there are certain blocks or",
    "start": "523880",
    "end": "529120"
  },
  {
    "text": "uh will be present to perform certain specific op uh operations and to accelerate those",
    "start": "529120",
    "end": "537640"
  },
  {
    "text": "operations so we did some",
    "start": "537640",
    "end": "542880"
  },
  {
    "text": "benchmarking now there isn't any specific load balancer present that supports all the data PR that we",
    "start": "542880",
    "end": "549279"
  },
  {
    "text": "discussed earlier while these Technologies can achieve uh line rate performance with proper setup and tuning",
    "start": "549279",
    "end": "556760"
  },
  {
    "text": "comparing different load balancers for different data planes with",
    "start": "556760",
    "end": "561839"
  },
  {
    "text": "varying features will be like comparing apples and oranges so that's why to address this in a cloud native context",
    "start": "561839",
    "end": "568399"
  },
  {
    "text": "we choose scal Calo cni which supports multiple data",
    "start": "568399",
    "end": "574079"
  },
  {
    "text": "planes ebpf VPP IP tables are one of them so we conducted some basic",
    "start": "574079",
    "end": "582440"
  },
  {
    "text": "benchmarking now Calico with VPP support some five six different primary network",
    "start": "582440",
    "end": "588480"
  },
  {
    "text": "interfaces from which they claims that AF xtp gives out the uh gives the out of",
    "start": "588480",
    "end": "594160"
  },
  {
    "text": "the box performance where other Alternatives also give good performance but require complex setup so that's why",
    "start": "594160",
    "end": "600480"
  },
  {
    "text": "we used e uh AFX DP with VPP which gives good performance",
    "start": "600480",
    "end": "606399"
  },
  {
    "text": "as well as easily integratable the only thing you need is like the appropriate kernel version to",
    "start": "606399",
    "end": "611839"
  },
  {
    "text": "run this so this is how the numbers are now VPP has the potential to perform",
    "start": "611839",
    "end": "619399"
  },
  {
    "text": "better as it process packet in burst but",
    "start": "619399",
    "end": "624440"
  },
  {
    "text": "AFX DP currently does not support burst packet processing features hence it is",
    "start": "624440",
    "end": "629519"
  },
  {
    "text": "these numbers hence VPP performance is not up to the Mark if we move to network",
    "start": "629519",
    "end": "634920"
  },
  {
    "text": "interfaces like uh if we move to options like dpdk and other VPP native drivers",
    "start": "634920",
    "end": "640399"
  },
  {
    "text": "which have the ability to send packets in burst then we'll see the enhanced performance in terms of",
    "start": "640399",
    "end": "646240"
  },
  {
    "text": "VPP so we are working on those uh different drivers that VP supports and",
    "start": "646240",
    "end": "652399"
  },
  {
    "text": "that's still with our Octan processors and that is still work in progress but",
    "start": "652399",
    "end": "657800"
  },
  {
    "text": "still without any acceleration p p is able to show near performance number to ebpf and in the UDP cases is much",
    "start": "657800",
    "end": "667000"
  },
  {
    "text": "higher VPP UDP is faster than TCP",
    "start": "674399",
    "end": "680120"
  },
  {
    "text": "actually yeah so that uh the thing is that if the burst Packer processing is there then TCP will show more numbers",
    "start": "681440",
    "end": "690160"
  },
  {
    "text": "so your question is uh why UDP is not much higher yeah my question is actually",
    "start": "690160",
    "end": "696560"
  },
  {
    "text": "why iscp so much fter my thinking is that PCP is working",
    "start": "696560",
    "end": "702360"
  },
  {
    "text": "at a much higher and there's so much more processing happening in order and all of that stuff right should actually",
    "start": "702360",
    "end": "708639"
  },
  {
    "text": "be much faster right uh so I think it's about the pack uh files which are used in the",
    "start": "708639",
    "end": "715279"
  },
  {
    "text": "exact test okay so yeah",
    "start": "715279",
    "end": "721240"
  },
  {
    "text": "so yeah in in terms of CPU usage VPP is showing the maximum numbers because of",
    "start": "723320",
    "end": "729560"
  },
  {
    "text": "continuous polling VPP has more CPO usage and evf is showing the least",
    "start": "729560",
    "end": "736920"
  },
  {
    "text": "numbers and yeah we did some wire guard Benchmark as as well and this is how the",
    "start": "736920",
    "end": "742880"
  },
  {
    "text": "numbers are so now we'll discuss in detail is",
    "start": "742880",
    "end": "749360"
  },
  {
    "text": "the benefits and limitations of all these three data planes ebpf first so coming to the",
    "start": "749360",
    "end": "757720"
  },
  {
    "text": "benefits ebpr programs are very lightweight that's why they offer low performance overhead minimal CPU and",
    "start": "757720",
    "end": "764040"
  },
  {
    "text": "memory consumption is there then uh evf allow us to write",
    "start": "764040",
    "end": "769279"
  },
  {
    "text": "custom EF program that are tailored for specific needs so that offers",
    "start": "769279",
    "end": "774600"
  },
  {
    "text": "adaptability and flexibility and then also BPF programs allows your to use kernel resources and features instead of",
    "start": "774600",
    "end": "782399"
  },
  {
    "text": "bypassing the kernel start uh instead of bypassing the kernel layer which it's alternatives are doing coming to the",
    "start": "782399",
    "end": "790199"
  },
  {
    "text": "limitations ebf will not be good for CPU intensive tasks like uh cryptographic operations",
    "start": "790199",
    "end": "797680"
  },
  {
    "text": "for decryption and recption you need to build a structure and do a look up for",
    "start": "797680",
    "end": "803079"
  },
  {
    "text": "every each and every packet for 7 if there there are like several GTP",
    "start": "803079",
    "end": "809399"
  },
  {
    "text": "connections on a single TCP connection ebpf will detect every packet and apply",
    "start": "809399",
    "end": "814680"
  },
  {
    "text": "policy on per packet basis and it also lacks support for offloading cryptographic task and",
    "start": "814680",
    "end": "821279"
  },
  {
    "text": "Hardware acceleration framework and it also uses kernel libraries for performing um encryption and decryption",
    "start": "821279",
    "end": "828519"
  },
  {
    "text": "not like the third party operations which its alternative are",
    "start": "828519",
    "end": "834000"
  },
  {
    "text": "using then comes VPP VPP gives high performance because it pro packets in",
    "start": "834000",
    "end": "840240"
  },
  {
    "text": "burst with the appropriate driver it gives high performance then VPP offloads",
    "start": "840240",
    "end": "846120"
  },
  {
    "text": "cryptographic tasks to specialize Hardware using dpdk cryptodev libraries enabling better performance and Hardware",
    "start": "846120",
    "end": "852480"
  },
  {
    "text": "based acceleration and then VPP also have highly optimized",
    "start": "852480",
    "end": "859720"
  },
  {
    "text": "implementation for a widely used channeling protocol that is IPC for secure networking coming to the",
    "start": "859720",
    "end": "866639"
  },
  {
    "text": "limitations VPP requires integr setup and tuning which can complicate the deploy which can complicate the",
    "start": "866639",
    "end": "873000"
  },
  {
    "text": "deployment in rapidly changing microservice architecture where your ports are getting deleted and created",
    "start": "873000",
    "end": "878160"
  },
  {
    "text": "every second then comes memory consumption so",
    "start": "878160",
    "end": "885000"
  },
  {
    "text": "because uh VPP is using polling mode memory consumption is little high VPP",
    "start": "885000",
    "end": "891839"
  },
  {
    "text": "manages its own memory and resources and also it's depend on directed craft architecture that's why",
    "start": "891839",
    "end": "898759"
  },
  {
    "text": "for for adding or deleting new policies in a dynamic environment uh we we required to",
    "start": "898759",
    "end": "905839"
  },
  {
    "text": "continuously realign the graph which will be complex and time",
    "start": "905839",
    "end": "911360"
  },
  {
    "text": "consuming then comes dpdk so dpdk gives you high performance",
    "start": "911440",
    "end": "918079"
  },
  {
    "text": "because of the use of numo optimization which allows for better performance by ensuring that memory allocations are",
    "start": "918079",
    "end": "924160"
  },
  {
    "text": "local to the processing codes dpdk offers po mode drivers that means um you",
    "start": "924160",
    "end": "931600"
  },
  {
    "text": "can directly take packets from the interface these driver continuously pull network interfaces for the traffic and",
    "start": "931600",
    "end": "939440"
  },
  {
    "text": "uh disabling the need for in relying on interrupts then comes the m multicore",
    "start": "939440",
    "end": "945120"
  },
  {
    "text": "scalability so dpq is designed to exploit multicore architecture it allow",
    "start": "945120",
    "end": "950440"
  },
  {
    "text": "parallel processing across multiple core significantly increasing the performance coming to the limitations of",
    "start": "950440",
    "end": "957199"
  },
  {
    "text": "dpdk ports that used dpdk must run in privilege mode to access vfi devices",
    "start": "957199",
    "end": "963279"
  },
  {
    "text": "raising security concerns by granting excessive extensive permission to the",
    "start": "963279",
    "end": "968319"
  },
  {
    "text": "containers now if uh you give a Nick VF",
    "start": "968319",
    "end": "973639"
  },
  {
    "text": "if it has been passed to a p as a device then it will not be available for other ports on the same note limiting the UT",
    "start": "973639",
    "end": "981079"
  },
  {
    "text": "resource utilization and flexibility and then comes to the Dynamics scalability",
    "start": "981079",
    "end": "986120"
  },
  {
    "text": "so dpk runs an old thread outside the Cal with a dedicated scur so for every",
    "start": "986120",
    "end": "991600"
  },
  {
    "text": "change you need a full reset of the",
    "start": "991600",
    "end": "996480"
  },
  {
    "text": "application so after talking about all these three data planes we will come to some futuristic data planes that are",
    "start": "996880",
    "end": "1004519"
  },
  {
    "text": "also programmable so P4 programmable data planes P4 is programming protocol",
    "start": "1004519",
    "end": "1010279"
  },
  {
    "text": "independent Packer processor which is a domain specific language for networking",
    "start": "1010279",
    "end": "1015800"
  },
  {
    "text": "devices it describe how the process how the packets can be processed by the",
    "start": "1015800",
    "end": "1021240"
  },
  {
    "text": "networking device it allows custom packet processing on your Hardware devices that are tailored for load",
    "start": "1021240",
    "end": "1028199"
  },
  {
    "text": "baling balancing strategies and different algorithms now there are no P4 based",
    "start": "1028199",
    "end": "1034918"
  },
  {
    "text": "load balancer in production but there are still some proposals and research offers like Sharon ecmp and server load",
    "start": "1034919",
    "end": "1042640"
  },
  {
    "text": "balancer P4 is a protocol independent language it allows Dynamic reconfig uh",
    "start": "1042640",
    "end": "1048880"
  },
  {
    "text": "fation of the hardware pipeline it's highly programmable and good for rapid",
    "start": "1048880",
    "end": "1055279"
  },
  {
    "text": "prototyping and it supports some Advanced features and also it has a support for sdn like an sdn based",
    "start": "1055320",
    "end": "1064280"
  },
  {
    "text": "controller so coming to the benefits and tradeoffs of P4 a P4 based load balancer",
    "start": "1064559",
    "end": "1071240"
  },
  {
    "text": "runs in a programmable switch so eliminates the deployment soft running and actual load",
    "start": "1071240",
    "end": "1076320"
  },
  {
    "text": "balancer then a programmable Asic BAS implementation is faster and supports Dynamic configuration of the pipeline",
    "start": "1076320",
    "end": "1082400"
  },
  {
    "text": "without a reboot so without resetting and rebooting your Hardware you can change Pipeline on the go and then a p4b",
    "start": "1082400",
    "end": "1090440"
  },
  {
    "text": "load balancer can be installed on multiple programmable Asic with minimum modification as long as it supports",
    "start": "1090440",
    "end": "1097120"
  },
  {
    "text": "P4 now P4 load balancer often require external controller to maintain session",
    "start": "1097120",
    "end": "1102400"
  },
  {
    "text": "session information and monitoring service health so natively doesn't supports that you need additional",
    "start": "1102400",
    "end": "1107840"
  },
  {
    "text": "controllers as additional sdn controllers for that heal checks and P4",
    "start": "1107840",
    "end": "1112880"
  },
  {
    "text": "are complex requiring extra logic at L to a controller level which makes Autos",
    "start": "1112880",
    "end": "1118039"
  },
  {
    "text": "scaling and group monitoring harder to implement and then also P4 has the",
    "start": "1118039",
    "end": "1123640"
  },
  {
    "text": "necessity of programmable Hardware so you cannot run P4 until your",
    "start": "1123640",
    "end": "1129480"
  },
  {
    "text": "programmable is Hardware sorry until your Hardware is programmable and those Hardware are usually specialized but",
    "start": "1129480",
    "end": "1137520"
  },
  {
    "text": "very less support programmability the hardware that are available now they mostly for they are specialized for",
    "start": "1137520",
    "end": "1144919"
  },
  {
    "text": "certain task but program lacking in programmability so some key use cases in",
    "start": "1144919",
    "end": "1151919"
  },
  {
    "text": "application of load balancing and how you can use these two according to the",
    "start": "1151919",
    "end": "1158159"
  },
  {
    "text": "feature they support So for microservice architecture kubernetes environment",
    "start": "1158159",
    "end": "1163480"
  },
  {
    "text": "where ports are getting deleted created every minute every second ebpf ebpf xdb",
    "start": "1163480",
    "end": "1169280"
  },
  {
    "text": "which is more programmable would be a greater option evf runs on different",
    "start": "1169280",
    "end": "1174600"
  },
  {
    "text": "hooks that are inside the kernel at various places so observability and monitoring would",
    "start": "1174600",
    "end": "1180960"
  },
  {
    "text": "be like EVP will be good for that then for virtualized Network",
    "start": "1180960",
    "end": "1186440"
  },
  {
    "text": "function high traffic web services where you need high performance VPP dpdk will",
    "start": "1186440",
    "end": "1192159"
  },
  {
    "text": "be beneficial when security is concerned dpdk provided libraries for",
    "start": "1192159",
    "end": "1198760"
  },
  {
    "text": "cryptographic operations and drivers would be beneficial for secure networking application Ed Computing",
    "start": "1198760",
    "end": "1205679"
  },
  {
    "text": "Solutions so this is how for various use cases one technology excels whether",
    "start": "1205679",
    "end": "1212280"
  },
  {
    "text": "other limits now we're talking about data plan",
    "start": "1212280",
    "end": "1217679"
  },
  {
    "text": "and Technologies we will also talk about load balancing with specialized Hardware unit so these devices have been designed",
    "start": "1217679",
    "end": "1225559"
  },
  {
    "text": "to accelerate specific workloads rather than um do Journal purpose",
    "start": "1225559",
    "end": "1231080"
  },
  {
    "text": "Computing so some of the examples are dpus that are data processing units fpgs",
    "start": "1231080",
    "end": "1236799"
  },
  {
    "text": "advanc or smart Nick and as6 dpus can be used uh combine the dpus combine the",
    "start": "1236799",
    "end": "1243760"
  },
  {
    "text": "efficiency of custom Hardware with the programmability of a software to deliver high performance fpj can offer",
    "start": "1243760",
    "end": "1250960"
  },
  {
    "text": "unparallel flexibility and raw packet processing for load balancing task smart next with built-in load balancing",
    "start": "1250960",
    "end": "1257760"
  },
  {
    "text": "support and traffic management features can drastically improve the overall",
    "start": "1257760",
    "end": "1262960"
  },
  {
    "text": "system performance and then there are A6 that can be used like can can be",
    "start": "1262960",
    "end": "1269240"
  },
  {
    "text": "dedicatedly used for performing high for performing load balancing with",
    "start": "1269240",
    "end": "1276760"
  },
  {
    "text": "some for perform for having like high performance load",
    "start": "1276760",
    "end": "1282200"
  },
  {
    "text": "balancers so yeah some of the advantages of using specialized hardware for your",
    "start": "1282200",
    "end": "1287600"
  },
  {
    "text": "load balancing they give uh they offers low latency dedicated Hardware can process traffic",
    "start": "1287600",
    "end": "1294000"
  },
  {
    "text": "and make load balancing decision much faster as compared to the software Alternatives then offloading offloading",
    "start": "1294000",
    "end": "1301320"
  },
  {
    "text": "complex networking tasks to Dedicated Hardware frees up your CPU Cycles on your server to perform some other",
    "start": "1301320",
    "end": "1307760"
  },
  {
    "text": "critical op operations and then comes high high density more processing power can be",
    "start": "1307760",
    "end": "1313640"
  },
  {
    "text": "packed into smaller areas specialized unit can handle massive volume of network traffic",
    "start": "1313640",
    "end": "1320000"
  },
  {
    "text": "without any bottleneck or performance degradation this uh efficiency not only",
    "start": "1320000",
    "end": "1326840"
  },
  {
    "text": "reduces operational C but cost but also minimizes the environmental impact on data centers making them more suitable",
    "start": "1326840",
    "end": "1334159"
  },
  {
    "text": "and then they're optimized for specific workload so this optimization allows these units to handle tasks that would",
    "start": "1334159",
    "end": "1340000"
  },
  {
    "text": "otherwise be inefficient on uh Journal purpose",
    "start": "1340000",
    "end": "1346919"
  },
  {
    "text": "processors so yeah some of the key takeaway so we talked about the different data plane options that are",
    "start": "1347520",
    "end": "1353799"
  },
  {
    "text": "there some they all have some benefits but also some limitations now growing",
    "start": "1353799",
    "end": "1359720"
  },
  {
    "text": "security demands and increasing packet rates are like making us to",
    "start": "1359720",
    "end": "1366080"
  },
  {
    "text": "reevolu what are the current data plan architecture V supports and whether they",
    "start": "1366080",
    "end": "1371200"
  },
  {
    "text": "are fulfilling all the needs of the upcoming challenges then the future will require",
    "start": "1371200",
    "end": "1377880"
  },
  {
    "text": "advanced security protocol which will require complex cryptographic operation where specialized Hardware accelerator",
    "start": "1377880",
    "end": "1385120"
  },
  {
    "text": "will be a need and as IML application expense Network must provide realtime high",
    "start": "1385120",
    "end": "1391799"
  },
  {
    "text": "performance and secure data processing so for that we will be needing programmable data plans to meet the",
    "start": "1391799",
    "end": "1398520"
  },
  {
    "text": "future requirements So yeah thank you we can",
    "start": "1398520",
    "end": "1404240"
  },
  {
    "text": "start with the Q&A also we have Ravi Chandra here from Marvel who has 14 plus",
    "start": "1404240",
    "end": "1410200"
  },
  {
    "text": "years of experience with VPP and dpdk so he can join for the",
    "start": "1410200",
    "end": "1415690"
  },
  {
    "text": "[Music]",
    "start": "1415690",
    "end": "1418748"
  },
  {
    "text": "Q&A yeah if anyone has any questions we can go over",
    "start": "1420799",
    "end": "1426559"
  },
  {
    "text": "them yes that doesn't support policies yeah",
    "start": "1430080",
    "end": "1437080"
  },
  {
    "text": "that is one of the limitations but but if you have uh L4 load balancing or at L3 if you want to do uh load balancing",
    "start": "1437080",
    "end": "1444520"
  },
  {
    "text": "based on let's say uh dscp Fields like there is there are some algorithms like L3 DSR okay which operate at L3 level so",
    "start": "1444520",
    "end": "1452120"
  },
  {
    "text": "if the logic is not too complex like you don't need to uh decrypt the payload and",
    "start": "1452120",
    "end": "1457760"
  },
  {
    "text": "see what is inside and then take a decision so for such use cases ebpf",
    "start": "1457760",
    "end": "1463400"
  },
  {
    "text": "based is what we are since I see the performance is",
    "start": "1463400",
    "end": "1469799"
  },
  {
    "text": "almost same actually whatever we have shown here is with AFX DP in uh and VPP",
    "start": "1469799",
    "end": "1478440"
  },
  {
    "text": "combination uh but with Native drivers and dpdk drivers or plug-in in VPP it",
    "start": "1478440",
    "end": "1485640"
  },
  {
    "text": "can be significantly higher okay but currently there is no support for",
    "start": "1485640",
    "end": "1491039"
  },
  {
    "text": "it we we are working on it how it can be done but uh um coming to AFX DP with",
    "start": "1491039",
    "end": "1498840"
  },
  {
    "text": "vbp uh ebpf based is almost same and in some cases better okay so that's why",
    "start": "1498840",
    "end": "1506440"
  },
  {
    "text": "with the current support and the integration capabilities ebpf is the right choice for",
    "start": "1506440",
    "end": "1514080"
  },
  {
    "text": "now also I think is supported by theel",
    "start": "1514240",
    "end": "1519679"
  },
  {
    "text": "right so that means that anything which driver has a dri",
    "start": "1519679",
    "end": "1525440"
  },
  {
    "text": "support so it's not it it's a hook actually it's a XDP hook and you have to",
    "start": "1525440",
    "end": "1531799"
  },
  {
    "text": "write ebpf code and you have to compile it and load it it matter which dpu you",
    "start": "1531799",
    "end": "1538120"
  },
  {
    "text": "use or which you use or to do TCP loing and all that of",
    "start": "1538120",
    "end": "1543799"
  },
  {
    "text": "stuff what the mention",
    "start": "1543799",
    "end": "1550720"
  },
  {
    "text": "right Basics and all these new ones are controll",
    "start": "1551640",
    "end": "1558799"
  },
  {
    "text": "so does it matter what for evf yeah for evf at the XDP",
    "start": "1558799",
    "end": "1566440"
  },
  {
    "text": "hook layer uh at the driver level we don't need any support for external",
    "start": "1566440",
    "end": "1571559"
  },
  {
    "text": "hardware but if we are doing some XDP offload there are some proposals like H",
    "start": "1571559",
    "end": "1578000"
  },
  {
    "text": "XDP Hardware based XDP then you need appropriate hardware for",
    "start": "1578000",
    "end": "1583320"
  },
  {
    "text": "that the uh features supported by XD ebpf are very limited because the",
    "start": "1583320",
    "end": "1589240"
  },
  {
    "text": "instructions are itself limited because kernel doesn't want to you don't want to violate anything in the kernel",
    "start": "1589240",
    "end": "1597399"
  },
  {
    "text": "space yes yes right right as long as you have",
    "start": "1599240",
    "end": "1605840"
  },
  {
    "text": "drivers for them uh supporting the standard Frameworks you can get best performance compared to even evf that's",
    "start": "1605840",
    "end": "1612960"
  },
  {
    "text": "what you're saying",
    "start": "1612960",
    "end": "1616320"
  },
  {
    "text": "do you want to throw some numbers if you have t performance yeah we have shown some",
    "start": "1619080",
    "end": "1624679"
  },
  {
    "text": "numbers the okay maybe we can just uh go",
    "start": "1624679",
    "end": "1631559"
  },
  {
    "text": "over so yeah we we did uh performance for p top and P to service Communication",
    "start": "1633880",
    "end": "1641840"
  },
  {
    "text": "number ofat through these are throughput wise",
    "start": "1641840",
    "end": "1648440"
  },
  {
    "text": "can you show the next one CPU",
    "start": "1648440",
    "end": "1652519"
  },
  {
    "text": "andp there's not much difference between the client and the",
    "start": "1655360",
    "end": "1660200"
  },
  {
    "text": "server I mean all of them tax roughly tax both the sides right right yeah there nothing",
    "start": "1660600",
    "end": "1667840"
  },
  {
    "text": "that the server is more l or whatever yeah it's it's right now what we did is",
    "start": "1667840",
    "end": "1673200"
  },
  {
    "text": "very basic uh IP of TCP test and UDP test I think depending upon the protocol",
    "start": "1673200",
    "end": "1679159"
  },
  {
    "text": "I think it might vary the same CPU yeah they're on the same CPU yeah",
    "start": "1679159",
    "end": "1686760"
  },
  {
    "text": "yeah both are same x86 systems",
    "start": "1686760",
    "end": "1691840"
  },
  {
    "text": "yeah yeah if You observe here VPP has slight higher CPU usage because it",
    "start": "1692519",
    "end": "1698440"
  },
  {
    "text": "operates in pole mode and most of the time the threads are polling for the uh",
    "start": "1698440",
    "end": "1703880"
  },
  {
    "text": "data basically yeah that's where it comes in right so it has capability to do more",
    "start": "1703880",
    "end": "1710960"
  },
  {
    "text": "but current uh uh feature which we have using right AFX DP it is not giving",
    "start": "1710960",
    "end": "1716320"
  },
  {
    "text": "enough workload for it yeah most of the time it is IDE but just pull right so",
    "start": "1716320",
    "end": "1722679"
  },
  {
    "text": "there is a metric in BPP where you can see uh what is the average vectors you",
    "start": "1722679",
    "end": "1728360"
  },
  {
    "text": "get I think that as per our test it is very less it can even do more processing",
    "start": "1728360",
    "end": "1736360"
  },
  {
    "text": "right no no so uh we are yet we are in the process of trying with the dedicated",
    "start": "1748519",
    "end": "1754399"
  },
  {
    "text": "native drivers right that's what you saying dedicate hard Hardware with their native drivers in VPP so we have native",
    "start": "1754399",
    "end": "1761279"
  },
  {
    "text": "drivers for that we are yet to do that performance comparison yes",
    "start": "1761279",
    "end": "1769600"
  },
  {
    "text": "right right yeah yeah so this is this is very uh yeah this is for whatever we",
    "start": "1773720",
    "end": "1779880"
  },
  {
    "text": "have already so we are in the process of doing it I think we will see if we can",
    "start": "1779880",
    "end": "1787159"
  },
  {
    "text": "produce them in the next",
    "start": "1787159",
    "end": "1790120"
  },
  {
    "text": "session anyone else",
    "start": "1794679",
    "end": "1799080"
  },
  {
    "text": "VPP and dpdk and ebpf flexibility you",
    "start": "1805120",
    "end": "1813840"
  },
  {
    "text": "mean yeah correct so that that is the limitation there so if your logic is very simple uh it's about just looking",
    "start": "1816840",
    "end": "1823720"
  },
  {
    "text": "at some fields in the existing packet and make the decision EVP suits for such",
    "start": "1823720",
    "end": "1829640"
  },
  {
    "text": "use cases but if there is a use case where you have to decrypt the packet just an example I'm okay so in such",
    "start": "1829640",
    "end": "1836200"
  },
  {
    "text": "cases ebpf doesn't provide a way to do that okay because it's very limited the",
    "start": "1836200",
    "end": "1841440"
  },
  {
    "text": "the kind of instructions which are supported at the colel space is very less so for such use cases uh dpdk suits",
    "start": "1841440",
    "end": "1849000"
  },
  {
    "text": "better or dpdk or BPP based anything suits better VPP and dpdk are kind of similar",
    "start": "1849000",
    "end": "1856440"
  },
  {
    "text": "only thing is that VPP comes with extra features as in like you already have a software stack which supports L2 to L4",
    "start": "1856440",
    "end": "1864159"
  },
  {
    "text": "processing okay",
    "start": "1864159",
    "end": "1867679"
  }
]