[
  {
    "text": "hello all today we are going to see what is chaos engineering how to do chaos engineering",
    "start": "1740",
    "end": "7980"
  },
  {
    "text": "with litmus chaos how to use chaos engineering to test resiliency and reliability of a system",
    "start": "7980",
    "end": "14400"
  },
  {
    "text": "let me first quickly introduce myself I am rudras creditkar and I am working as",
    "start": "14400",
    "end": "19680"
  },
  {
    "text": "a senior SRE at infra Cloud Technologies",
    "start": "19680",
    "end": "23720"
  },
  {
    "text": "as you can see these are some of the famous companies and you might be wondering what is",
    "start": "26519",
    "end": "32040"
  },
  {
    "text": "common in all these companies let me answer that these companies have faced major outages",
    "start": "32040",
    "end": "39120"
  },
  {
    "text": "in the past few years now let us look at some statistics around the outages",
    "start": "39120",
    "end": "46399"
  },
  {
    "text": "according to the latest uptime institutes outages report there are these are the 10 major outages",
    "start": "47700",
    "end": "53879"
  },
  {
    "text": "in 2022 and 2023 going with the latest one that is Federal Aviation Administration it faced",
    "start": "53879",
    "end": "61680"
  },
  {
    "text": "a major outage due to a configuration issue which cost all the U.S flights to",
    "start": "61680",
    "end": "67020"
  },
  {
    "text": "be grounded most of the flights were canceled or delayed and it incurred a major business",
    "start": "67020",
    "end": "73500"
  },
  {
    "text": "loss",
    "start": "73500",
    "end": "75979"
  },
  {
    "text": "domains in your system after exit executing the resiliency test",
    "start": "225420",
    "end": "231739"
  },
  {
    "text": "reliability reliability is getting consistently stable results over the period of time",
    "start": "232200",
    "end": "239040"
  },
  {
    "text": "without facing any issues with reliability you can achieve higher",
    "start": "239040",
    "end": "245220"
  },
  {
    "text": "slas and accordingly you can set higher slos for your business",
    "start": "245220",
    "end": "252560"
  },
  {
    "text": "another metric for reliability is mtbf mean time between the failures the higher the mtbf the higher is the",
    "start": "252720",
    "end": "260220"
  },
  {
    "text": "reliability of your system now there might be a question like why to",
    "start": "260220",
    "end": "267060"
  },
  {
    "text": "test resilience we have seen that okay there are outages we have to resolve these outages but again one can claim",
    "start": "267060",
    "end": "274320"
  },
  {
    "text": "that okay I don't face any outage but then why why to test the resilience",
    "start": "274320",
    "end": "280280"
  },
  {
    "text": "so to answer to that is uh",
    "start": "280500",
    "end": "287340"
  },
  {
    "text": "it it may avoid down times so you have not faced down times earlier but there",
    "start": "287340",
    "end": "293220"
  },
  {
    "text": "is a possibility always testing resiliency provides us with the correct understanding of overall",
    "start": "293220",
    "end": "299759"
  },
  {
    "text": "behavior of your system when subjected to failures and by mitigating these failures we",
    "start": "299759",
    "end": "306240"
  },
  {
    "text": "eliminate the system weaknesses thereby minimizing the unexpected issues in the production",
    "start": "306240",
    "end": "312660"
  },
  {
    "text": "this will increase the mean time between the failures which will increase the reliability of your system thereby",
    "start": "312660",
    "end": "318600"
  },
  {
    "text": "helping you to achieve the agreed SLA it will enhance the end user experience",
    "start": "318600",
    "end": "325860"
  },
  {
    "text": "now sometimes it may occur that your system is working correctly but some intermediate or intermittent issues may",
    "start": "325860",
    "end": "333060"
  },
  {
    "text": "affect the system responses and degrade the user experiences lastly many Industries and regulations",
    "start": "333060",
    "end": "341039"
  },
  {
    "text": "require that the systems have a certain level of resilience and uptime",
    "start": "341039",
    "end": "346199"
  },
  {
    "text": "you can use this testing to ensure your system meets these requirements and avoids potential legal or regulatory",
    "start": "346199",
    "end": "353699"
  },
  {
    "text": "issues so next why to test resiliency in",
    "start": "353699",
    "end": "360300"
  },
  {
    "text": "kubernetes we already know that kubernetes is operating in high value High",
    "start": "360300",
    "end": "366419"
  },
  {
    "text": "availability mode then specifically going for this test what is the reason for that",
    "start": "366419",
    "end": "372660"
  },
  {
    "text": "with micro Services application hosted on kubernetes the underlying architecture may become complex and",
    "start": "372660",
    "end": "379440"
  },
  {
    "text": "critical with lot of in the interconnected services any minor issues can become a domino",
    "start": "379440",
    "end": "386819"
  },
  {
    "text": "effect and may turn into a disaster it is a distributed system you know many",
    "start": "386819",
    "end": "393120"
  },
  {
    "text": "people working on different pieces that that needs to be put all together",
    "start": "393120",
    "end": "398819"
  },
  {
    "text": "there may be several human errors or people sometimes not following the best",
    "start": "398819",
    "end": "404460"
  },
  {
    "text": "practices which may lead to failures and lastly the kubernetes is evolving at",
    "start": "404460",
    "end": "413039"
  },
  {
    "text": "a rapid speed there might be incidences where some apis are getting deprecated and that go",
    "start": "413039",
    "end": "419460"
  },
  {
    "text": "unnoticed causing failures in your production",
    "start": "419460",
    "end": "424159"
  },
  {
    "text": "now since we have talked around what uh how to test resiliency what are failure",
    "start": "425580",
    "end": "432419"
  },
  {
    "text": "domains let's just deep deep deep dig into the failure domains",
    "start": "432419",
    "end": "439740"
  },
  {
    "text": "we have seen earlier that failure domains are the critical areas which can cause major issues in your system",
    "start": "439740",
    "end": "446699"
  },
  {
    "text": "so what are the failure domains in kubernetes first is the network",
    "start": "446699",
    "end": "453300"
  },
  {
    "text": "some latency some packet loss or some Jitter in the network can cause major outages in your system",
    "start": "453300",
    "end": "460259"
  },
  {
    "text": "so this is the first failure domain next is the Pod crash crashing so we",
    "start": "460259",
    "end": "467759"
  },
  {
    "text": "know that sometimes the power crashes abruptly it is ephemeral in nature so",
    "start": "467759",
    "end": "473099"
  },
  {
    "text": "after life cycle Newport comes or the part gets stuck into the crash loop back off",
    "start": "473099",
    "end": "478259"
  },
  {
    "text": "there might be init containers which gets stuck into their uh respective processes and uh it may cause the effect",
    "start": "478259",
    "end": "485340"
  },
  {
    "text": "in your overall uh scalability of your system the Pod may not be able to scale properly there might be issues with the",
    "start": "485340",
    "end": "492300"
  },
  {
    "text": "image Registries where the particular image is not able to pull into your",
    "start": "492300",
    "end": "497639"
  },
  {
    "text": "kubernetes from the image repo there might be issues with the processes",
    "start": "497639",
    "end": "503160"
  },
  {
    "text": "like cubelet or container runtime sometimes abruptly the cubelet may stop",
    "start": "503160",
    "end": "508259"
  },
  {
    "text": "working on a particular node or a container runtime may stop working on a particular node",
    "start": "508259",
    "end": "514440"
  },
  {
    "text": "there might be issues with the nodes like abruptly termination of the nodes",
    "start": "514440",
    "end": "520020"
  },
  {
    "text": "resource saturation on a particular node uh resource saturation in terms of compute or storage",
    "start": "520020",
    "end": "526940"
  },
  {
    "text": "the disc full uh errors might be there which may cause issues uh",
    "start": "526940",
    "end": "532920"
  },
  {
    "text": "or in your system then there is there is an issue of load",
    "start": "532920",
    "end": "538920"
  },
  {
    "text": "pattern so let's say you need to test your system with burst reload patterns or spiky load patterns so that you need",
    "start": "538920",
    "end": "544860"
  },
  {
    "text": "to understand what is the behavior of your system when uh this load uh are",
    "start": "544860",
    "end": "549959"
  },
  {
    "text": "subjected onto your system lastly uh we can you know categorize the",
    "start": "549959",
    "end": "556080"
  },
  {
    "text": "configuration or human errors like randomly changing the configurations randomly changing the environment",
    "start": "556080",
    "end": "562740"
  },
  {
    "text": "variables the service depends dependencies a particular service is not",
    "start": "562740",
    "end": "568380"
  },
  {
    "text": "able to resolve that dependency or if one particular service is depending on other another service that may not be",
    "start": "568380",
    "end": "574800"
  },
  {
    "text": "reachable so like this we can categorize the failure domains inside kubernetes",
    "start": "574800",
    "end": "579839"
  },
  {
    "text": "and accordingly we can create the chaos for the system in the kubernetes",
    "start": "579839",
    "end": "587100"
  },
  {
    "text": "now we know that applications are not just hosted in kubernetes",
    "start": "587100",
    "end": "593519"
  },
  {
    "text": "failure domains can be Beyond kubernetes and the first category uh which is there",
    "start": "593519",
    "end": "599339"
  },
  {
    "text": "it is databases so many uh companies they host databases outside of",
    "start": "599339",
    "end": "605399"
  },
  {
    "text": "kubernetes uh in the cloud or on-prem so what are the failure domains for",
    "start": "605399",
    "end": "610920"
  },
  {
    "text": "these first is Network partitioning so there might be a issue with your database",
    "start": "610920",
    "end": "617940"
  },
  {
    "text": "cluster let's say there are three nodes in your cluster and one particular node is out creating a network partition this",
    "start": "617940",
    "end": "625620"
  },
  {
    "text": "may create data inconsistency a split brain scenario uh it may have a",
    "start": "625620",
    "end": "630779"
  },
  {
    "text": "cascading effect on the entire system due to such uh the node is taken out and",
    "start": "630779",
    "end": "637260"
  },
  {
    "text": "you know the recovery of uh the data is gets very complex it may impact the",
    "start": "637260",
    "end": "643080"
  },
  {
    "text": "replication so you need to address these issues uh whenever uh any network partitioning",
    "start": "643080",
    "end": "649620"
  },
  {
    "text": "incident occurs next is time travel again uh sort of",
    "start": "649620",
    "end": "655079"
  },
  {
    "text": "like connected to that network but with the synchronization issue of the ntp",
    "start": "655079",
    "end": "660240"
  },
  {
    "text": "again it will create data inconsistency it may create security vulnerabilities",
    "start": "660240",
    "end": "665360"
  },
  {
    "text": "uh it may create event synchronous synchronization issues uh due to",
    "start": "665360",
    "end": "672380"
  },
  {
    "text": "incorrect uh timestamp there might be issues with the log analysis and",
    "start": "672380",
    "end": "677579"
  },
  {
    "text": "debugging this in turn will impact the legal and compliance issues",
    "start": "677579",
    "end": "684980"
  },
  {
    "text": "you need to check with like latency and packet loss on your databases what is the impact of of that there might be",
    "start": "685079",
    "end": "692220"
  },
  {
    "text": "issues with accesses uh which can be categorized again as incorrect credentials whether you're uh",
    "start": "692220",
    "end": "699959"
  },
  {
    "text": "you are able to connect with the database with the incorrect credentials are there any authorization bypass",
    "start": "699959",
    "end": "706380"
  },
  {
    "text": "what are the effect of expired tokens or expired credentials and that there can",
    "start": "706380",
    "end": "712200"
  },
  {
    "text": "be lot many uh in terms of access issues like permissions and all so you need to categorize them as access uh failure",
    "start": "712200",
    "end": "719820"
  },
  {
    "text": "domain there might be again no termination as we have seen it can create network",
    "start": "719820",
    "end": "726540"
  },
  {
    "text": "partitioning or the issue may be smaller but again you need to address and you",
    "start": "726540",
    "end": "731940"
  },
  {
    "text": "need to see the system Behavior accordingly",
    "start": "731940",
    "end": "736699"
  },
  {
    "text": "you need to have different types of load patterns on your databases so that the",
    "start": "737279",
    "end": "743399"
  },
  {
    "text": "read and write Cycles uh are working properly or not you need to ensure that",
    "start": "743399",
    "end": "750620"
  },
  {
    "text": "the next category of failure domains Beyond kubernetes is cloud services",
    "start": "751620",
    "end": "758420"
  },
  {
    "text": "uh the one main uh issue with cloud is uh instance termination and restarts and",
    "start": "758519",
    "end": "764399"
  },
  {
    "text": "uh there might be random or abrupt uh instant instance terminations and you",
    "start": "764399",
    "end": "770639"
  },
  {
    "text": "need to evaluate what is the impact of that let's say uh a new instance is coming up",
    "start": "770639",
    "end": "777600"
  },
  {
    "text": "and it takes around one or two minutes is your system is able to cope up with",
    "start": "777600",
    "end": "782940"
  },
  {
    "text": "this short time span there might be like uh a use traffic during that time and",
    "start": "782940",
    "end": "788639"
  },
  {
    "text": "this two minute can cause you some business loss around that time",
    "start": "788639",
    "end": "793160"
  },
  {
    "text": "next is security group or knuckle configuration there might be accidental",
    "start": "793860",
    "end": "798899"
  },
  {
    "text": "human errors while configurating security groups and Echo configuration which may cause uh huge business losses",
    "start": "798899",
    "end": "807060"
  },
  {
    "text": "uh because directly the communication is uh hampered over there",
    "start": "807060",
    "end": "813839"
  },
  {
    "text": "you can check for load balance load balancers uh inject High load onto these",
    "start": "813839",
    "end": "820200"
  },
  {
    "text": "load balancers check whether they are able to cope up with that uh in AWS scenario you can check whether",
    "start": "820200",
    "end": "828060"
  },
  {
    "text": "the target if the targets is healthy and if it is not healthy then what is the",
    "start": "828060",
    "end": "834480"
  },
  {
    "text": "impact on your system what is the impact of draining this Targets on your system",
    "start": "834480",
    "end": "841740"
  },
  {
    "text": "lastly you can simulate a particular easy Downs scenario considering that",
    "start": "841740",
    "end": "847740"
  },
  {
    "text": "your application is hosted in a completely ha mode you have let's say",
    "start": "847740",
    "end": "852959"
  },
  {
    "text": "multiple your application is spanned into multiple multiple eases",
    "start": "852959",
    "end": "858660"
  },
  {
    "text": "availability availability zones and you take down one particular availability Zone and measure the impact on on your",
    "start": "858660",
    "end": "865920"
  },
  {
    "text": "system ideally there should not be any impact because your application is is",
    "start": "865920",
    "end": "871019"
  },
  {
    "text": "hosted into ha but still there might be some issues and you need to evaluate",
    "start": "871019",
    "end": "876240"
  },
  {
    "text": "them beforehand now we have seen like the basics or the",
    "start": "876240",
    "end": "883079"
  },
  {
    "text": "context around resiliency and reliability and how chaos engineering",
    "start": "883079",
    "end": "888839"
  },
  {
    "text": "plays an important role in testing the resiliency and reliability",
    "start": "888839",
    "end": "894060"
  },
  {
    "text": "now let's take a step further into chaos engineering and how to do the stuff with",
    "start": "894060",
    "end": "900600"
  },
  {
    "text": "chaos engineering let's just start with principles of",
    "start": "900600",
    "end": "906060"
  },
  {
    "text": "chaos engineering the first thing is you need to hypothesize about the steady state",
    "start": "906060",
    "end": "913339"
  },
  {
    "text": "on a normal day on a normal traffic how your system is responding it can be",
    "start": "913800",
    "end": "919980"
  },
  {
    "text": "considered as a steady state so once you know that this is your steady",
    "start": "919980",
    "end": "925740"
  },
  {
    "text": "state you need to identify the failure domains identify where",
    "start": "925740",
    "end": "932459"
  },
  {
    "text": "what things can go wrong and accordingly create the chaos scenarios",
    "start": "932459",
    "end": "938399"
  },
  {
    "text": "and run those experiments in your system and fine and then you check or you",
    "start": "938399",
    "end": "946260"
  },
  {
    "text": "verify whether your hypothesis and the Practical uh scenario are matching or",
    "start": "946260",
    "end": "951779"
  },
  {
    "text": "not if there are any differences try to mitigate them and you know improve the",
    "start": "951779",
    "end": "958620"
  },
  {
    "text": "your system so you can start with like uh minimum blast radius first and you can",
    "start": "958620",
    "end": "966360"
  },
  {
    "text": "slowly increase your blast radius so whenever any unexpected issue comes into",
    "start": "966360",
    "end": "972540"
  },
  {
    "text": "into your production you can you know you know the what what are the solution",
    "start": "972540",
    "end": "979440"
  },
  {
    "text": "you need to implement and you can minimize the overall blast radius around it",
    "start": "979440",
    "end": "985760"
  },
  {
    "text": "what are the tools available for chaos engineering is litmus chaos Gremlin is",
    "start": "986100",
    "end": "992459"
  },
  {
    "text": "there a chaos monkey chaos mesh you can also use AWS FIS",
    "start": "992459",
    "end": "998339"
  },
  {
    "text": "uh all these tools mainly do the work for you there you you need to create a",
    "start": "998339",
    "end": "1005899"
  },
  {
    "text": "chaos you need to inject using them but for this talk and personally why I",
    "start": "1005899",
    "end": "1012860"
  },
  {
    "text": "feel litmus chaos is first thing it is open source so you can anybody can use",
    "start": "1012860",
    "end": "1019459"
  },
  {
    "text": "it easily you can use it in a centralized or distributed way so one of the use case",
    "start": "1019459",
    "end": "1026900"
  },
  {
    "text": "which I found very helpful was if there are multiple accounts in your uh",
    "start": "1026900",
    "end": "1034220"
  },
  {
    "text": "organization and you need to execute chaos from a centralized way so let's",
    "start": "1034220",
    "end": "1039678"
  },
  {
    "text": "say one Central account and there are multiple spoke accounts you can do that easily with litmus chaos so litmus chaos",
    "start": "1039679",
    "end": "1046880"
  },
  {
    "text": "has uh the agents which you can deploy in different environments and execute the chaos over",
    "start": "1046880",
    "end": "1053900"
  },
  {
    "text": "there next thing it is flexible it can be uh",
    "start": "1053900",
    "end": "1059600"
  },
  {
    "text": "the scoring around uh the chaos scenarios or designing the chaos",
    "start": "1059600",
    "end": "1065059"
  },
  {
    "text": "scenarios it is very flexible and easy to use and lastly uh the other use case which I",
    "start": "1065059",
    "end": "1072020"
  },
  {
    "text": "personally found good was uh it it has a good integration with AWS SSM so what is",
    "start": "1072020",
    "end": "1077720"
  },
  {
    "text": "AWS SSM is uh in AWS you can write the scripts around whatever functionality",
    "start": "1077720",
    "end": "1084140"
  },
  {
    "text": "you want to execute you can create a session manager document around that and",
    "start": "1084140",
    "end": "1089600"
  },
  {
    "text": "then you can run that document so litmus can integrate easily with that document and you can induce the chaos in your AWS",
    "start": "1089600",
    "end": "1099520"
  },
  {
    "text": "accounts also so whatever we have seen uh failure domains Beyond kubernetes if",
    "start": "1099520",
    "end": "1107000"
  },
  {
    "text": "you have AWS account litmus can be very much litmus can be useful in that scenarios",
    "start": "1107000",
    "end": "1114140"
  },
  {
    "text": "also so let's say we have seen what is chaos",
    "start": "1114140",
    "end": "1119600"
  },
  {
    "text": "engineering how how to do chaos engineering and increase the resiliency",
    "start": "1119600",
    "end": "1125059"
  },
  {
    "text": "and reliability of your system you created the experiments around chaos you",
    "start": "1125059",
    "end": "1130460"
  },
  {
    "text": "executed them what now so it is a cycle this chaos engineering and",
    "start": "1130460",
    "end": "1138020"
  },
  {
    "text": "resiliency testing is not a one-time this resiliency testing should be",
    "start": "1138020",
    "end": "1143179"
  },
  {
    "text": "periodic in your organization you can have a resiliency framework as the",
    "start": "1143179",
    "end": "1148580"
  },
  {
    "text": "points we have discussed earlier Define a steady state go with the hypothesis execute chaos",
    "start": "1148580",
    "end": "1154880"
  },
  {
    "text": "verify the steady state what is the difference between uh whatever you have hypothesized and whatever you are",
    "start": "1154880",
    "end": "1160820"
  },
  {
    "text": "getting practical Creator reports mitigate those problems again Define the steady state with the",
    "start": "1160820",
    "end": "1167600"
  },
  {
    "text": "new vision again create a hypothesis and create the experiments and in this way",
    "start": "1167600",
    "end": "1174200"
  },
  {
    "text": "you can you know minimize all the outages that are happening in your system by minimizing the unexpected",
    "start": "1174200",
    "end": "1181580"
  },
  {
    "text": "failures in your production secondly you can have a resiliency scoring around like uh let's say if a",
    "start": "1181580",
    "end": "1189620"
  },
  {
    "text": "pod crash chaos is there the part can be uh spawned a new uh if",
    "start": "1189620",
    "end": "1196280"
  },
  {
    "text": "one particular pod part is terminated in that case uh you can score this chaos",
    "start": "1196280",
    "end": "1202400"
  },
  {
    "text": "with a minimum points and whichever chaos which you are introducing in your",
    "start": "1202400",
    "end": "1207799"
  },
  {
    "text": "system which may affect uh or which may have a greater blast radius",
    "start": "1207799",
    "end": "1213380"
  },
  {
    "text": "you can score those uh experiments accordingly you can have game days wherein you have you can have one",
    "start": "1213380",
    "end": "1220820"
  },
  {
    "text": "particular day uh where you execute chaos and let other teams to",
    "start": "1220820",
    "end": "1227120"
  },
  {
    "text": "um resolve those issues so that the system knowledge in your uh Team uh can be increased you",
    "start": "1227120",
    "end": "1235700"
  },
  {
    "text": "can have period periodic resiliency checks and Reporting you can have resiliency checks in the CD pipelines",
    "start": "1235700",
    "end": "1241880"
  },
  {
    "text": "let's say you are giving a new release you can have a chaos experiment uh",
    "start": "1241880",
    "end": "1247600"
  },
  {
    "text": "uh integrated with your CD pipelines which will test the chaos on your new",
    "start": "1247600",
    "end": "1252980"
  },
  {
    "text": "release and you can see what are the failures or what is the effect of your",
    "start": "1252980",
    "end": "1259580"
  },
  {
    "text": "release beforehand and lastly uh it will it will improve your observability",
    "start": "1259580",
    "end": "1266360"
  },
  {
    "text": "posture as we get we have seen earlier that you will to gauge you will be able",
    "start": "1266360",
    "end": "1272780"
  },
  {
    "text": "to gauge what is the impact of the chaos and if there is something wrong in your system you can easily find out and",
    "start": "1272780",
    "end": "1280340"
  },
  {
    "text": "quickly find out what is going on now let's see",
    "start": "1280340",
    "end": "1285679"
  },
  {
    "text": "how to run this chaos experiments with litmus chaos in practical",
    "start": "1285679",
    "end": "1291440"
  },
  {
    "text": "so let's just go with the setup I have set up a small eks cluster in AWS",
    "start": "1291440",
    "end": "1298580"
  },
  {
    "text": "and I have majorly three name spaces where I",
    "start": "1298580",
    "end": "1305659"
  },
  {
    "text": "have divided all the application the first is the litmus namespace",
    "start": "1305659",
    "end": "1312020"
  },
  {
    "text": "so let's get the pods in litmus namespace",
    "start": "1312020",
    "end": "1319480"
  },
  {
    "text": "as you can see uh the litmus is deployed in lit muscle",
    "start": "1320419",
    "end": "1325480"
  },
  {
    "text": "litmus namespace and I have used the litmus Helm chart",
    "start": "1325480",
    "end": "1332380"
  },
  {
    "text": "to deploy delete Mustang",
    "start": "1336860",
    "end": "1342039"
  },
  {
    "text": "with this Helm chart you will deploy the litmus control plane and the litmus",
    "start": "1342740",
    "end": "1348559"
  },
  {
    "text": "agent now this agent is being deployed on the same cluster where the control",
    "start": "1348559",
    "end": "1354380"
  },
  {
    "text": "plane is deployed hence it is called as a self agent whenever you are deploying",
    "start": "1354380",
    "end": "1359840"
  },
  {
    "text": "the agent outside of the the same cluster then it is called as external",
    "start": "1359840",
    "end": "1365659"
  },
  {
    "text": "agents the next namespace is uh the Prometheus stack as we need to observe",
    "start": "1365659",
    "end": "1373039"
  },
  {
    "text": "whatever the chaos we are doing we need to observe that so let's see parts and put on stack",
    "start": "1373039",
    "end": "1383679"
  },
  {
    "text": "so in this namespace I have deployed the Prometheus tag including grafana",
    "start": "1384380",
    "end": "1391460"
  },
  {
    "text": "and for uh test purpose I have used a microservices",
    "start": "1391460",
    "end": "1398360"
  },
  {
    "text": "demo application that is sock shop so here",
    "start": "1398360",
    "end": "1404980"
  },
  {
    "text": "I have deployed this test micro Services application called sock shop so with this uh this is the bare minimum",
    "start": "1406940",
    "end": "1415760"
  },
  {
    "text": "small setup that I have done for this demo now let's uh look into how litmus",
    "start": "1415760",
    "end": "1422780"
  },
  {
    "text": "chaos looks so whenever you log into litmus chaos you",
    "start": "1422780",
    "end": "1431419"
  },
  {
    "text": "will see this UI which is called chaos Center and here we you can see chaos",
    "start": "1431419",
    "end": "1438080"
  },
  {
    "text": "scenarios so chaos scenario is nothing but um um many chaos experiments bind together",
    "start": "1438080",
    "end": "1445940"
  },
  {
    "text": "so it may be one experiment chaos scenario or it may be multiple uh kiosk",
    "start": "1445940",
    "end": "1452840"
  },
  {
    "text": "experiments inside a chaos scenario so if you see this is a chaos scenario and",
    "start": "1452840",
    "end": "1459500"
  },
  {
    "text": "if I say this is one experiment which I have uh executed inside uh this one",
    "start": "1459500",
    "end": "1466039"
  },
  {
    "text": "chaos scenario then uh you can see the delegates as I",
    "start": "1466039",
    "end": "1471799"
  },
  {
    "text": "mentioned earlier since the agent is running in the same cluster as the",
    "start": "1471799",
    "end": "1477020"
  },
  {
    "text": "litmus control plane so it is called a self agent then you have chaos hubs",
    "start": "1477020",
    "end": "1485539"
  },
  {
    "text": "uh where you have predefined templates of the",
    "start": "1485539",
    "end": "1491000"
  },
  {
    "text": "chaos experiments which you want to execute you can have like AWS SSM azure",
    "start": "1491000",
    "end": "1498799"
  },
  {
    "text": "you can have for Cassandra pod deletion of core DNS",
    "start": "1498799",
    "end": "1505100"
  },
  {
    "text": "there are some experiments around gcp then there are generic modulate you can",
    "start": "1505100",
    "end": "1510260"
  },
  {
    "text": "delete this is a template from which you can delete any uh particular pod",
    "start": "1510260",
    "end": "1516500"
  },
  {
    "text": "or you can kill any control container you can increase the CPU or memory",
    "start": "1516500",
    "end": "1522799"
  },
  {
    "text": "or you can have network network corruption so all these failure domains",
    "start": "1522799",
    "end": "1528200"
  },
  {
    "text": "which we have seen in our uh uh previously in this talk we can uh able",
    "start": "1528200",
    "end": "1535340"
  },
  {
    "text": "to run those failure domains with liquidos so this is uh the chaos Hub containing",
    "start": "1535340",
    "end": "1545020"
  },
  {
    "text": "all the kiosk templates then there is a section for analytics",
    "start": "1545440",
    "end": "1550460"
  },
  {
    "text": "litmus provides its own uh analytics uh",
    "start": "1550460",
    "end": "1555679"
  },
  {
    "text": "for whatever the scenario you have executed and",
    "start": "1555679",
    "end": "1562760"
  },
  {
    "text": "again you can use statistics",
    "start": "1562760",
    "end": "1566679"
  },
  {
    "text": "I think there is some issue",
    "start": "1568220",
    "end": "1571600"
  },
  {
    "text": "yeah so how many users are there what are the",
    "start": "1575659",
    "end": "1580700"
  },
  {
    "text": "projects how many chaos delegates are there what are the total chaos experiment runs what are the Cure",
    "start": "1580700",
    "end": "1586640"
  },
  {
    "text": "scenarios and when those chaos scenarios are scheduled accordingly you can get all",
    "start": "1586640",
    "end": "1593360"
  },
  {
    "text": "the statistics let's just visit analytics once again so here you can get all the Analytics",
    "start": "1593360",
    "end": "1599960"
  },
  {
    "text": "uh how many times what are the number of runs schedule stats",
    "start": "1599960",
    "end": "1605360"
  },
  {
    "text": "uh how many experiments failed or uh what",
    "start": "1605360",
    "end": "1610460"
  },
  {
    "text": "what was the success ratio if you come to a particular statistics",
    "start": "1610460",
    "end": "1615740"
  },
  {
    "text": "of any one particular scenario you can get the statistics over there",
    "start": "1615740",
    "end": "1622760"
  },
  {
    "text": "uh so for this experiment I had given 10 points and it is passed",
    "start": "1622760",
    "end": "1628279"
  },
  {
    "text": "you can see this resiliency score over here so for each experiment as we have",
    "start": "1628279",
    "end": "1634940"
  },
  {
    "text": "discussed earlier you can give a particular score for Quad crashing you can give a smaller score for CPU or",
    "start": "1634940",
    "end": "1641840"
  },
  {
    "text": "memory uh chaos you can increase the resiliency",
    "start": "1641840",
    "end": "1647659"
  },
  {
    "text": "score and accordingly you can get the statistics around those chaos uh scenarios or chaos experiments over here",
    "start": "1647659",
    "end": "1657039"
  },
  {
    "text": "and let's see uh for this demo we will Target uh one creating one chaos",
    "start": "1657880",
    "end": "1665419"
  },
  {
    "text": "scenario from the chaos hub and executing inside the",
    "start": "1665419",
    "end": "1670600"
  },
  {
    "text": "cluster itself and one chaos scenario we will induce in beyond kubernetes that is",
    "start": "1670600",
    "end": "1677960"
  },
  {
    "text": "in the uh AWS account let's see so",
    "start": "1677960",
    "end": "1684020"
  },
  {
    "text": "whenever you want to schedule a new chaos scenario or execute new cure scenario you have to click over here uh",
    "start": "1684020",
    "end": "1691820"
  },
  {
    "text": "schedule your scenario then",
    "start": "1691820",
    "end": "1696639"
  },
  {
    "text": "you can go with like whatever the agent let's say if it is a different cluster there there will be a external agent you",
    "start": "1697340",
    "end": "1703640"
  },
  {
    "text": "can select that particular agent and you can uh proceed further",
    "start": "1703640",
    "end": "1710259"
  },
  {
    "text": "let's say I am you will select a particular experiment",
    "start": "1711559",
    "end": "1717500"
  },
  {
    "text": "from the chaos hub and",
    "start": "1717500",
    "end": "1723380"
  },
  {
    "text": "we will name it as memory fog",
    "start": "1723620",
    "end": "1729460"
  },
  {
    "text": "if you click next you will see uh that in this scenario you need to add the",
    "start": "1730940",
    "end": "1738140"
  },
  {
    "text": "experiment so we will add the experiment for memory",
    "start": "1738140",
    "end": "1743659"
  },
  {
    "text": "hogging and we will take this particular template that is generic for memory Hawk",
    "start": "1743659",
    "end": "1751960"
  },
  {
    "text": "now the good part is from here itself we can tune your experiment accordingly",
    "start": "1752840",
    "end": "1760240"
  },
  {
    "text": "so where you want to induce the chaos on which particular part you want to increase the memory let's say I am going",
    "start": "1760580",
    "end": "1767240"
  },
  {
    "text": "uh with the softshop namespace and I am taking the deployment uh let's",
    "start": "1767240",
    "end": "1774620"
  },
  {
    "text": "say catalog okay then you can click on next if you have",
    "start": "1774620",
    "end": "1781100"
  },
  {
    "text": "any health checks or probes you can mention over here uh then",
    "start": "1781100",
    "end": "1787220"
  },
  {
    "text": "you can tune the memory consumption or the total chaos duration for what for",
    "start": "1787220",
    "end": "1793700"
  },
  {
    "text": "which the memory should be increased currently I am for demo purpose I am reducing that",
    "start": "1793700",
    "end": "1799760"
  },
  {
    "text": "and we can reduce it to maybe 30 seconds",
    "start": "1799760",
    "end": "1806260"
  },
  {
    "text": "so if you want to run this experiment Parts onto a particular node you can use",
    "start": "1807799",
    "end": "1814580"
  },
  {
    "text": "node selector over here and you can provide the node selector value key",
    "start": "1814580",
    "end": "1819980"
  },
  {
    "text": "value over here but right now we will not go for that uh",
    "start": "1819980",
    "end": "1825260"
  },
  {
    "text": "we'll just click finish and we will reboot the schedule so whatever uh the pods are getting",
    "start": "1825260",
    "end": "1832039"
  },
  {
    "text": "scheduled uh for this chaos scenario in your cluster after the Cure scenario is",
    "start": "1832039",
    "end": "1838100"
  },
  {
    "text": "executed successfully it will clean those particular parts so that's why uh",
    "start": "1838100",
    "end": "1843380"
  },
  {
    "text": "we click on reward schedule over here and",
    "start": "1843380",
    "end": "1849860"
  },
  {
    "text": "click next so in this step you can give like what points you want to do let's",
    "start": "1849860",
    "end": "1855020"
  },
  {
    "text": "say we give eight points for this experiments and then we click next",
    "start": "1855020",
    "end": "1861700"
  },
  {
    "text": "we want to schedule it now and we'll click on finish",
    "start": "1862760",
    "end": "1870440"
  },
  {
    "text": "so here you can see that the chaos scenario",
    "start": "1870440",
    "end": "1877460"
  },
  {
    "text": "is running will say show the chaos scenario",
    "start": "1877460",
    "end": "1884200"
  },
  {
    "text": "and this chaos scenario is in progress so meanwhile let's just uh see uh",
    "start": "1886159",
    "end": "1893600"
  },
  {
    "text": "and login to grafana",
    "start": "1893600",
    "end": "1898360"
  },
  {
    "text": "so here I have created uh okay let's see if the dashboard is in place",
    "start": "1911779",
    "end": "1919000"
  },
  {
    "text": "so we will create a new dashboard",
    "start": "1941360",
    "end": "1945460"
  },
  {
    "text": "you can see uh the basic memory Statistics over here for in this",
    "start": "1974840",
    "end": "1981740"
  },
  {
    "text": "dashboard for the sockshop applications for catalog you can see the CPU usage",
    "start": "1981740",
    "end": "1986960"
  },
  {
    "text": "and memory usage similarly for payment a user and front end whatever uh we have plotted over here",
    "start": "1986960",
    "end": "1994940"
  },
  {
    "text": "let's just go back to what is the status of our chaos scenario and you can see",
    "start": "1994940",
    "end": "2001840"
  },
  {
    "text": "that uh first the chaos scenario has run in this",
    "start": "2001840",
    "end": "2007000"
  },
  {
    "text": "it has installed the chaos experiments so whenever it installs kiosk experiment",
    "start": "2007000",
    "end": "2012279"
  },
  {
    "text": "it is nothing but it will deploy all the custom resources for that particular uh chaos scenario",
    "start": "2012279",
    "end": "2020399"
  },
  {
    "text": "and then it will execute uh the the or it will trigger the custom",
    "start": "2020399",
    "end": "2027820"
  },
  {
    "text": "resources in this step now here we have seen this pod memory uh hog is in progress and we",
    "start": "2027820",
    "end": "2035980"
  },
  {
    "text": "will be able to monitor that uh in catalog so you can see this memory",
    "start": "2035980",
    "end": "2042340"
  },
  {
    "text": "has increased like a lot",
    "start": "2042340",
    "end": "2047679"
  },
  {
    "text": "so for since it is a demo application we have not increased the memory too much so whatever we are we have induced a",
    "start": "2047679",
    "end": "2055780"
  },
  {
    "text": "cures we are able to observe that so first thing is you need to uh",
    "start": "2055780",
    "end": "2061898"
  },
  {
    "text": "create all the observability solutions or you should have all the observability",
    "start": "2061899",
    "end": "2067480"
  },
  {
    "text": "solution in place so practically if we want to map it let's say if the memory is increase I should have an alert okay",
    "start": "2067480",
    "end": "2074378"
  },
  {
    "text": "for this particular part my memory is increased so with chaos you need to identify the",
    "start": "2074379",
    "end": "2081878"
  },
  {
    "text": "gaps in your observability also you can see the chaos scenario is",
    "start": "2081879",
    "end": "2089200"
  },
  {
    "text": "Success it has reverted all the uh chaos pods also well let's just say",
    "start": "2089200",
    "end": "2097960"
  },
  {
    "text": "uh Cube CTL",
    "start": "2097960",
    "end": "2101280"
  },
  {
    "text": "you won't be able to see any new part over here so all the pods or all the",
    "start": "2110800",
    "end": "2116200"
  },
  {
    "text": "custom resources which were created for the that experiment our first completely",
    "start": "2116200",
    "end": "2123780"
  },
  {
    "text": "and you can see the memory has increased over here",
    "start": "2123839",
    "end": "2129599"
  },
  {
    "text": "let's just take a look around the next scenario that is uh the scenario is such",
    "start": "2130540",
    "end": "2137560"
  },
  {
    "text": "that I have created a test uh instance uh in AWS and I am able to",
    "start": "2137560",
    "end": "2146460"
  },
  {
    "text": "ping that instance now with our experiment we will change the security",
    "start": "2146680",
    "end": "2152320"
  },
  {
    "text": "group and uh this ping should not be successful so idea behind this is",
    "start": "2152320",
    "end": "2159599"
  },
  {
    "text": "whenever you can you know change the configurations and check what is the",
    "start": "2159599",
    "end": "2164680"
  },
  {
    "text": "impact check whether you have alerts or observability in place if somebody",
    "start": "2164680",
    "end": "2170020"
  },
  {
    "text": "changes the security group by mistake are you able to uh or is it noticeable",
    "start": "2170020",
    "end": "2175720"
  },
  {
    "text": "to you uh quickly so that you can minimize the downtime around uh which",
    "start": "2175720",
    "end": "2182020"
  },
  {
    "text": "has caused due to that Security Group Change so with this example let's just",
    "start": "2182020",
    "end": "2188740"
  },
  {
    "text": "start with our experiment for this we will use a different approach uh what I",
    "start": "2188740",
    "end": "2196180"
  },
  {
    "text": "have done is I have taken the template of uh foreign",
    "start": "2196180",
    "end": "2201240"
  },
  {
    "text": "and I have modified that so let's just see how we can use that",
    "start": "2201240",
    "end": "2208900"
  },
  {
    "text": "so whenever you again we are scheduling a new cure scenario with new experiment",
    "start": "2208900",
    "end": "2215700"
  },
  {
    "text": "I think this is a bit slow",
    "start": "2216099",
    "end": "2220200"
  },
  {
    "text": "so this time we will import a kiosk yaml so I have created a yaml",
    "start": "2225820",
    "end": "2232420"
  },
  {
    "text": "uh the workflow is into the yaml and which we will be applying over here so",
    "start": "2232420",
    "end": "2238780"
  },
  {
    "text": "whenever this kind of experiments you have to induce in AWS there are majorly uh",
    "start": "2238780",
    "end": "2248680"
  },
  {
    "text": "two steps as we have seen that for AWS uh whatever",
    "start": "2248680",
    "end": "2254079"
  },
  {
    "text": "you want to execute the chaos in AWS you have to go through uh you have to write SSM documents so what is SSM documents",
    "start": "2254079",
    "end": "2260740"
  },
  {
    "text": "is nothing but let's say you go in systems manager",
    "start": "2260740",
    "end": "2266740"
  },
  {
    "text": "and you write a script whatever you want to do in the cloud you write a script for",
    "start": "2266740",
    "end": "2272560"
  },
  {
    "text": "that in terms of documents so if you click on documents over here it will",
    "start": "2272560",
    "end": "2280859"
  },
  {
    "text": "you know there are predefined documents given by AWS whatever you want to do you",
    "start": "2280980",
    "end": "2286300"
  },
  {
    "text": "can refer those and you can create your own documents and we create our own",
    "start": "2286300",
    "end": "2292119"
  },
  {
    "text": "document and then that document so let's say if this is my document right test",
    "start": "2292119",
    "end": "2297280"
  },
  {
    "text": "cares uh through SSN which we through which we will change our",
    "start": "2297280",
    "end": "2303040"
  },
  {
    "text": "security code configuration so for this demo we are keeping it basic",
    "start": "2303040",
    "end": "2308079"
  },
  {
    "text": "minimalistic design and you can see that I am just revoking one Ingress rule uh",
    "start": "2308079",
    "end": "2314320"
  },
  {
    "text": "in the security group so this is how AWS document looks like",
    "start": "2314320",
    "end": "2320380"
  },
  {
    "text": "what we will do is we will put this AWS document",
    "start": "2320380",
    "end": "2326260"
  },
  {
    "text": "inside a config map and pass it to the litmus so how it is done is you can see",
    "start": "2326260",
    "end": "2332320"
  },
  {
    "text": "I have created a revoke Security Group config map",
    "start": "2332320",
    "end": "2337480"
  },
  {
    "text": "and this is just a config map and in the data section I have just pasted",
    "start": "2337480",
    "end": "2344200"
  },
  {
    "text": "the my SSM document over here and then I have applied this uh config map with",
    "start": "2344200",
    "end": "2351339"
  },
  {
    "text": "cubesatel apply command next once your config map is in place we have to design",
    "start": "2351339",
    "end": "2357400"
  },
  {
    "text": "a workflow so with uh the template which was there uh I have utilized the same",
    "start": "2357400",
    "end": "2365140"
  },
  {
    "text": "template and I modified a bit so as you can see and this is the workflow and this",
    "start": "2365140",
    "end": "2371560"
  },
  {
    "text": "scenario has three steps as we have seen earlier it will uh install the experiment then our main experiment will",
    "start": "2371560",
    "end": "2379240"
  },
  {
    "text": "be executed and then the chaos will be reverted these are the three steps in",
    "start": "2379240",
    "end": "2384400"
  },
  {
    "text": "this workflow what changes you have to do is uh if you see the workflow has all",
    "start": "2384400",
    "end": "2390520"
  },
  {
    "text": "the custom resource creation here you can see uh the resources which",
    "start": "2390520",
    "end": "2396220"
  },
  {
    "text": "are created over here chaos engine chaos experiments what is the chaos result so",
    "start": "2396220",
    "end": "2401320"
  },
  {
    "text": "from this resource uh it will showcase into the UI what was the result and all",
    "start": "2401320",
    "end": "2407520"
  },
  {
    "text": "and here is uh the chaos engine I have passed my config map over here uh you",
    "start": "2407520",
    "end": "2414940"
  },
  {
    "text": "can see litmus revoke Security Group and I mounted this config map in this",
    "start": "2414940",
    "end": "2420880"
  },
  {
    "text": "workflow second change what I have done is uh I have taken in the document path I have",
    "start": "2420880",
    "end": "2427420"
  },
  {
    "text": "given a litmus revoke HD what was the document name and the path for that I",
    "start": "2427420",
    "end": "2433480"
  },
  {
    "text": "have specified the path I have specified the instance uh let's just revisit the",
    "start": "2433480",
    "end": "2439359"
  },
  {
    "text": "instance one once again so that uh we are sure that whatever instance we",
    "start": "2439359",
    "end": "2445660"
  },
  {
    "text": "have taken it is correct",
    "start": "2445660",
    "end": "2449099"
  },
  {
    "text": "so",
    "start": "2460359",
    "end": "2463200"
  },
  {
    "text": "let's just copy this instance ID",
    "start": "2467140",
    "end": "2471779"
  },
  {
    "text": "and paste it over here",
    "start": "2501220",
    "end": "2508960"
  },
  {
    "text": "so that for running that particular uh SSM document it will take this",
    "start": "2508960",
    "end": "2514960"
  },
  {
    "text": "particular instance ID and then in the last step you can see it is deleting the chaos engine uh from the",
    "start": "2514960",
    "end": "2521200"
  },
  {
    "text": "litmus namespace so the revert chaos scenario is in the third step so we will",
    "start": "2521200",
    "end": "2527920"
  },
  {
    "text": "take this chaos scenario and we will upload it uh into the",
    "start": "2527920",
    "end": "2536800"
  },
  {
    "text": "QR Center so let's just select our workflow",
    "start": "2536800",
    "end": "2542099"
  },
  {
    "text": "okay and then if I click next and I remember rename it as remove",
    "start": "2542099",
    "end": "2551079"
  },
  {
    "text": "SG new and I will be scheduling it now you can",
    "start": "2551079",
    "end": "2559000"
  },
  {
    "text": "see the code is fine if there are any issues with the yaml it will uh",
    "start": "2559000",
    "end": "2564280"
  },
  {
    "text": "showcase over here that there is a issue with the linking or something and let's",
    "start": "2564280",
    "end": "2569619"
  },
  {
    "text": "just uh click on finish if we go to the chaos scenario",
    "start": "2569619",
    "end": "2576160"
  },
  {
    "text": "we can click on show the chaos scenario and we you can see that it is in progress",
    "start": "2576160",
    "end": "2582760"
  },
  {
    "text": "now it is installing the chaos experiments we can see over here",
    "start": "2582760",
    "end": "2588040"
  },
  {
    "text": "that the new pods are getting created from that particular",
    "start": "2588040",
    "end": "2595740"
  },
  {
    "text": "chaos experiment you can see there is a new pod revocation SG new",
    "start": "2596740",
    "end": "2602079"
  },
  {
    "text": "and if I get some chaos",
    "start": "2602079",
    "end": "2609880"
  },
  {
    "text": "engine you can see the chaos engine running",
    "start": "2609880",
    "end": "2615700"
  },
  {
    "text": "over here so it is showing AWS SSM chaos by ID",
    "start": "2615700",
    "end": "2623440"
  },
  {
    "text": "because we have used that particular template over here",
    "start": "2623440",
    "end": "2627960"
  },
  {
    "text": "let's just see the experiment is in progress now we can see",
    "start": "2630520",
    "end": "2635980"
  },
  {
    "text": "that let's just say see whether it is in action or not so",
    "start": "2635980",
    "end": "2645119"
  },
  {
    "text": "behind the scene it is executing this AWS SM document and Whatever Whenever",
    "start": "2646420",
    "end": "2652359"
  },
  {
    "text": "AWS SSM document is uh getting executed it uses the Run command we have seen",
    "start": "2652359",
    "end": "2658900"
  },
  {
    "text": "over a clicked over here in the Run command and you can see either in the",
    "start": "2658900",
    "end": "2664000"
  },
  {
    "text": "command or in the command history so",
    "start": "2664000",
    "end": "2668700"
  },
  {
    "text": "this is uh repo case G command as of now and we can see that it is success",
    "start": "2669880",
    "end": "2678660"
  },
  {
    "text": "you can check the output for this",
    "start": "2678660",
    "end": "2683680"
  },
  {
    "text": "is it has written true and we can verify",
    "start": "2683680",
    "end": "2691800"
  },
  {
    "text": "we can verify it by checking the security group",
    "start": "2693300",
    "end": "2698819"
  },
  {
    "text": "you can go to the security group",
    "start": "2699160",
    "end": "2702780"
  },
  {
    "text": "and check it let me go to the instance first",
    "start": "2709740",
    "end": "2715780"
  },
  {
    "text": "thank you",
    "start": "2715780",
    "end": "2717960"
  },
  {
    "text": "so you can see there is no security group that will allow icmp packages",
    "start": "2730420",
    "end": "2735520"
  },
  {
    "text": "and now let's just check whether we are able to Ping or not",
    "start": "2735520",
    "end": "2741280"
  },
  {
    "text": "so you can see that we are not able to uh",
    "start": "2741280",
    "end": "2747339"
  },
  {
    "text": "ping so whatever the rule was there it was removed and this is the impact that",
    "start": "2747339",
    "end": "2752800"
  },
  {
    "text": "there is no connectivity as of now so this is how you can execute any uh",
    "start": "2752800",
    "end": "2759040"
  },
  {
    "text": "scenario in your AWS maybe instance deletion maybe whatever we have discussed like if your databases are",
    "start": "2759040",
    "end": "2766000"
  },
  {
    "text": "hosted in AWS you can execute you can write a SSM document you can put it in",
    "start": "2766000",
    "end": "2772540"
  },
  {
    "text": "uh config map and using litmus you can",
    "start": "2772540",
    "end": "2778900"
  },
  {
    "text": "execute that particular chaos so coming back to our Analytics",
    "start": "2778900",
    "end": "2786420"
  },
  {
    "text": "if you see again it there will be",
    "start": "2786700",
    "end": "2791800"
  },
  {
    "text": "okay",
    "start": "2791800",
    "end": "2794160"
  },
  {
    "text": "so these are the parts that it is completed you can see",
    "start": "2811180",
    "end": "2817720"
  },
  {
    "text": "the chaos result",
    "start": "2817720",
    "end": "2823140"
  },
  {
    "text": "this is the latest one",
    "start": "2838780",
    "end": "2842040"
  },
  {
    "text": "so it is awaiting the result",
    "start": "2865000",
    "end": "2870000"
  },
  {
    "text": "so in this way you can execute any chaos inside a AWS account using",
    "start": "2873640",
    "end": "2882520"
  },
  {
    "text": "AWS SSM document and litmus so",
    "start": "2882520",
    "end": "2889119"
  },
  {
    "text": "that's all uh for this talk we have seen uh what is chaos what is resiliency and how",
    "start": "2889119",
    "end": "2897400"
  },
  {
    "text": "to increase reliability of your system using chaos engineering and resiliency testing we have seen litmus chaos uh why",
    "start": "2897400",
    "end": "2905920"
  },
  {
    "text": "it was you know use useful for our use case is firstly because it was open",
    "start": "2905920",
    "end": "2911740"
  },
  {
    "text": "source it was flexible it had centralized uh approach for executing",
    "start": "2911740",
    "end": "2918099"
  },
  {
    "text": "chaos into multiple accounts and mainly it has the integration for awss system documents through which we",
    "start": "2918099",
    "end": "2926079"
  },
  {
    "text": "executed chaos uh inside kubernetes and outside of kubernetes in AWS",
    "start": "2926079",
    "end": "2932200"
  },
  {
    "text": "so that's it thank you foreign",
    "start": "2932200",
    "end": "2939460"
  }
]