[
  {
    "text": "all right good afternoon we'll start the next session in the security identity",
    "start": "30",
    "end": "5370"
  },
  {
    "text": "and policy tract with us is Miguel Martinez Miguel is a contributor to helm",
    "start": "5370",
    "end": "12059"
  },
  {
    "text": "and monocular is that right like a binocular but yeah but only one lens he",
    "start": "12059",
    "end": "21029"
  },
  {
    "text": "also works on Kubb apps which is an open-source dashboard for kubernetes and with that I'll hand it over to Miguel",
    "start": "21029",
    "end": "28650"
  },
  {
    "text": "sorry hello everyone I'm actually",
    "start": "28650",
    "end": "36180"
  },
  {
    "text": "impressed by how many people are interested in a authentication of 3 p.m. it's awesome so I'm Miguel that photo",
    "start": "36180",
    "end": "45210"
  },
  {
    "text": "actually is from a happy day the day that I got my one wheel which is kind of like that skateboard I like it a lot",
    "start": "45210",
    "end": "51510"
  },
  {
    "text": "actually my wife is mad at me because she says that I take more pictures of nothing done anything else but I know I",
    "start": "51510",
    "end": "58500"
  },
  {
    "text": "don't understand I actually disagree because I also take pictures of my wife I don't know anyway so I'm sober and",
    "start": "58500",
    "end": "65309"
  },
  {
    "text": "ended up in Miami I am mention I'm called contributor at Q Bob's application touch for communities",
    "start": "65309",
    "end": "72080"
  },
  {
    "text": "monocular which is the engine behind helm hub and human self so the agenda is",
    "start": "72080",
    "end": "79320"
  },
  {
    "text": "very simple top gender is very straightforward it's just I'm gonna explain the problem that we run into",
    "start": "79320",
    "end": "84710"
  },
  {
    "text": "give you a key a couple of takeaways of our journey implementing OID C and all the",
    "start": "84710",
    "end": "90630"
  },
  {
    "text": "challenges that we run into I'm very I'm going to show you a couple of workarounds to basically bypass those",
    "start": "90630",
    "end": "96659"
  },
  {
    "text": "limitations so cubes is one of the",
    "start": "96659",
    "end": "102000"
  },
  {
    "text": "predator I contribute to and it's an application - before kubernetes in other words is a web user interface the gene",
    "start": "102000",
    "end": "109049"
  },
  {
    "text": "star on your cluster and at that point you can install or you can find browse",
    "start": "109049",
    "end": "115200"
  },
  {
    "text": "and install and manage applications there but the first thing the young user needs to do is to provide their",
    "start": "115200",
    "end": "121680"
  },
  {
    "text": "community's credentials and that time the only way to do that was by providing",
    "start": "121680",
    "end": "127560"
  },
  {
    "text": "their community service account tokens and that means of somebody needs to go to the",
    "start": "127560",
    "end": "132810"
  },
  {
    "text": "blaster either the user or a cluster operator find that talking and provided",
    "start": "132810",
    "end": "138000"
  },
  {
    "text": "not was an adoption barrier and because configuring that talking and configuring our bug was actually pretty hard for the",
    "start": "138000",
    "end": "146370"
  },
  {
    "text": "kind of users that we're targeting that was an adoption barrier as well for security practices they were even sharing the tokens so we asked the",
    "start": "146370",
    "end": "154290"
  },
  {
    "text": "community at the answer was place implement single thing on here so we",
    "start": "154290",
    "end": "160290"
  },
  {
    "text": "quickly realized that the problem that we are running into we're not the only ones this applies to every single",
    "start": "160290",
    "end": "166799"
  },
  {
    "text": "application that wants to offer authentication be a single thing on and",
    "start": "166799",
    "end": "172019"
  },
  {
    "text": "that applications talks to the communities API server on behalf of the user and that's the case for cubes but",
    "start": "172019",
    "end": "178769"
  },
  {
    "text": "it's also the communities - where and it's also cube cuttle that we use to control that we use every day so looking",
    "start": "178769",
    "end": "185940"
  },
  {
    "text": "into the scope of the program we realized actually our problem is more associated to authentication i'm also",
    "start": "185940",
    "end": "193500"
  },
  {
    "text": "that we only care about humans in our case we just care about users that sign up in these cubes in our case and most",
    "start": "193500",
    "end": "202950"
  },
  {
    "text": "importantly we want the solution that works everywhere so we took a look at",
    "start": "202950",
    "end": "208980"
  },
  {
    "text": "the state of the authentication in kubernetes I left out some some other",
    "start": "208980",
    "end": "214410"
  },
  {
    "text": "solutions but we basically took the main ones and created four categories the",
    "start": "214410",
    "end": "220590"
  },
  {
    "text": "first one is how easy it is to self-service those kind of credentials can you do it by yourself do you need",
    "start": "220590",
    "end": "226950"
  },
  {
    "text": "the intervention of a cluster operator then what how is there is there any",
    "start": "226950",
    "end": "233340"
  },
  {
    "text": "built-in rotation for those tokens for those credentials and what about revoking those credentials how is it and",
    "start": "233340",
    "end": "239609"
  },
  {
    "text": "then they user experience when you have set up those finishes so the first one",
    "start": "239609",
    "end": "244859"
  },
  {
    "text": "is our client certs and client search a little more experience require our",
    "start": "244859",
    "end": "250650"
  },
  {
    "text": "authority more classified operation team to verify who I was graph those",
    "start": "250650",
    "end": "256169"
  },
  {
    "text": "credentials either manually or an automated way and then send them over securely so cell service was an option",
    "start": "256169",
    "end": "264510"
  },
  {
    "text": "in our case rotating and revoking he was saying great either actually in this case",
    "start": "264510",
    "end": "269530"
  },
  {
    "text": "sometimes if you want to revoke a single certificate you might actually end up we walk in the hall all the users that use",
    "start": "269530",
    "end": "275980"
  },
  {
    "text": "the same certificate authority for example and then user experience was fine it's once you set it up in your give",
    "start": "275980",
    "end": "281980"
  },
  {
    "text": "config was fine then we got tokens which can be either service accounts or static static tokens next to the API server and",
    "start": "281980",
    "end": "289020"
  },
  {
    "text": "self-serve it is the same issue but then rotating rotation mentor vocation actually got better because you can",
    "start": "289020",
    "end": "295270"
  },
  {
    "text": "rotate the thing you you can debug and Protel programmatically and a single user basic auth was very it's very",
    "start": "295270",
    "end": "304750"
  },
  {
    "text": "similar to the token and then we got single sign-on so single second once you",
    "start": "304750",
    "end": "309970"
  },
  {
    "text": "set it up when the cluster operator sets it up you got cell service in most cases it has built-in rotation we refresh",
    "start": "309970",
    "end": "318400"
  },
  {
    "text": "tokens and then provoking revocation has a caveat because the talking might have",
    "start": "318400",
    "end": "324100"
  },
  {
    "text": "a lifespan so during that period they might be tricky by user experience actually we put it in green just because",
    "start": "324100",
    "end": "330310"
  },
  {
    "text": "it's not the only useful for users it's good for you it's also for cluster operators so su meaning a little bit",
    "start": "330310",
    "end": "337960"
  },
  {
    "text": "down Y single thing you need is for user is done like a no-brainer they use it",
    "start": "337960",
    "end": "344169"
  },
  {
    "text": "every day they can with Facebook github with all these providers and they don't",
    "start": "344169",
    "end": "349570"
  },
  {
    "text": "want to have an additional set of credentials and they also like the instant ratification of signing up I'm",
    "start": "349570",
    "end": "356440"
  },
  {
    "text": "start using it right away but then for cluster operators which i think is more",
    "start": "356440",
    "end": "361479"
  },
  {
    "text": "interesting is they don't need to generate or transfer credentials anymore",
    "start": "361479",
    "end": "366840"
  },
  {
    "text": "they don't need to care do you know about rotation of revoking",
    "start": "366840",
    "end": "372490"
  },
  {
    "text": "those credentials because that gets delegated to a third party identity provider I'm some of those identity",
    "start": "372490",
    "end": "378430"
  },
  {
    "text": "providers in support advanced features like groups and scopes so we started",
    "start": "378430",
    "end": "383950"
  },
  {
    "text": "looking into let's implement this it seems the right thing and that's what the users are asking for reading the",
    "start": "383950",
    "end": "391300"
  },
  {
    "text": "documentation I saw that communities already supported support single sign-on",
    "start": "391300",
    "end": "396700"
  },
  {
    "text": "Beebop via open I think on but what's the difference between open idea Connect involves - I honestly",
    "start": "396700",
    "end": "402400"
  },
  {
    "text": "didn't know the difference so open idea Connect is an identity layer thus this",
    "start": "402400",
    "end": "408490"
  },
  {
    "text": "is official description it's a identity layer on top of the last two also recession protocol and to",
    "start": "408490",
    "end": "415420"
  },
  {
    "text": "understand a little bit better I created this diagram on the right side which is an over simplified version of the flow",
    "start": "415420",
    "end": "420640"
  },
  {
    "text": "and which we have three actors actually they're coming up for the user and",
    "start": "420640",
    "end": "426190"
  },
  {
    "text": "client the authentication provider and the resource that the client wants to access to the first step will be the",
    "start": "426190",
    "end": "433510"
  },
  {
    "text": "user will be redirected to the authentication provider saying can you please grant access to this client to",
    "start": "433510",
    "end": "439350"
  },
  {
    "text": "this kind of resources via the scope and as a result you will get an access token",
    "start": "439350",
    "end": "445720"
  },
  {
    "text": "the client will get an access token and then they can use to to access the protected resource and I said that or",
    "start": "445720",
    "end": "454720"
  },
  {
    "text": "through some authorization protocol is not an authentication protocol but actually there are solutions out there",
    "start": "454720",
    "end": "459970"
  },
  {
    "text": "that implemented authentication on top of it by using creating basically user",
    "start": "459970",
    "end": "465700"
  },
  {
    "text": "info endpoints that are treated like any other protected resource which are the two lines dunder so what's stopping ID",
    "start": "465700",
    "end": "473520"
  },
  {
    "text": "open ID connected open the connecting practice means that there is one more",
    "start": "473520",
    "end": "478570"
  },
  {
    "text": "scope to you pass and as a result you get an ID token and that ID token",
    "start": "478570",
    "end": "484420"
  },
  {
    "text": "contains all the information for the user in a standardized and click to sign",
    "start": "484420",
    "end": "490300"
  },
  {
    "text": "way and that format itself it's called JSON web token and as a side effect of",
    "start": "490300",
    "end": "499300"
  },
  {
    "text": "having all the information already in there are you talking we don't need or whoever is implemented implementing this",
    "start": "499300",
    "end": "506020"
  },
  {
    "text": "this flow we don't need to to have a new string for endpoint animal so it",
    "start": "506020",
    "end": "511420"
  },
  {
    "text": "simplifies things to understand how the validation how the verification of this",
    "start": "511420",
    "end": "517150"
  },
  {
    "text": "token works we're going to actually think about a real-world example and that example is basically me traveling",
    "start": "517150",
    "end": "524800"
  },
  {
    "text": "to the US the first thing I need is to go to an identity provider which",
    "start": "524800",
    "end": "530510"
  },
  {
    "text": "jung-yoon IAM or staying my case and they will verify my identity and they will grab the passport the passport is",
    "start": "530510",
    "end": "538550"
  },
  {
    "text": "that entities the better I've entertained to take with me at all times when I land to the US they will take my",
    "start": "538550",
    "end": "546170"
  },
  {
    "text": "passport and they will check is it from a trusted source they will say sure you know we we still accept Spanish",
    "start": "546170",
    "end": "553580"
  },
  {
    "text": "passports hasn't been tampered with they will check that if it's a new passport though they will check it you know no no",
    "start": "553580",
    "end": "560030"
  },
  {
    "text": "pages are being broken water it is not expired and the key takeaway here is",
    "start": "560030",
    "end": "566270"
  },
  {
    "text": "that US Customs in theory doesn't contact Spain for every single Spaniard",
    "start": "566270",
    "end": "572240"
  },
  {
    "text": "that goes to the border there is some mechanism already in place to validate those passports if we extrapolate this",
    "start": "572240",
    "end": "579830"
  },
  {
    "text": "to kubernetes is basically the same thing we got a set of identity providers that can be either managed or or on-prem",
    "start": "579830",
    "end": "587420"
  },
  {
    "text": "and I much like Active Directory of Google accounts of self hostility xop",
    "start": "587420",
    "end": "592640"
  },
  {
    "text": "o'clock and then there is not a passport what we have instead is the ID token that I mentioned before which is a JSON",
    "start": "592640",
    "end": "599480"
  },
  {
    "text": "web token the JSON web token has three parts a header that tells you what kind",
    "start": "599480",
    "end": "605450"
  },
  {
    "text": "of signature has a payload that contains who you are who provisioned this token",
    "start": "605450",
    "end": "610600"
  },
  {
    "text": "who is we who is their audience and when does it expire among other things and",
    "start": "610600",
    "end": "616850"
  },
  {
    "text": "all these informations store director called claims but the most important",
    "start": "616850",
    "end": "624590"
  },
  {
    "text": "part of this token is a signature which will be used on the relying party end which will be the Kunis API server in",
    "start": "624590",
    "end": "631160"
  },
  {
    "text": "our case to check if it has been tampered with there is a signature plus",
    "start": "631160",
    "end": "636410"
  },
  {
    "text": "a plot at the public key and they will very verify that nobody has changed the",
    "start": "636410",
    "end": "641480"
  },
  {
    "text": "token but they will also check if it's from a trusted source via the issuer claim they will also check that I am the",
    "start": "641480",
    "end": "647690"
  },
  {
    "text": "receiver via the audience hasn't expired so on and so forth so how do you",
    "start": "647690",
    "end": "653360"
  },
  {
    "text": "configure this incriminating it is building you just need to use a set of",
    "start": "653360",
    "end": "658790"
  },
  {
    "text": "flags the most important ones are the two first ones and which you say what's the provided that you want to trust and what",
    "start": "658790",
    "end": "666510"
  },
  {
    "text": "client should be in the issuer part and then there are two two optional flux",
    "start": "666510",
    "end": "673350"
  },
  {
    "text": "that basically will sense how to extract what information you want to trap from the talking once you configure the API",
    "start": "673350",
    "end": "680790"
  },
  {
    "text": "set up with these flags you can use ID tokens via the authorization bearer",
    "start": "680790",
    "end": "686850"
  },
  {
    "text": "token so going back to the problem statement we want an application that",
    "start": "686850",
    "end": "693420"
  },
  {
    "text": "offers single sign-on and talks directly that application wants to talk to the community api server so how do we solve",
    "start": "693420",
    "end": "700560"
  },
  {
    "text": "that dissolution the first solution that",
    "start": "700560",
    "end": "705930"
  },
  {
    "text": "we can think of is we can put a proxy which is the green box in front of your",
    "start": "705930",
    "end": "712470"
  },
  {
    "text": "application on the user application and the kunais api that will basically be configured exactly the same way that the",
    "start": "712470",
    "end": "718530"
  },
  {
    "text": "communities api is in terms of oh i DC identity provider settings and this",
    "start": "718530",
    "end": "724290"
  },
  {
    "text": "proxy will be in charge of enforcing authentication basically capturing the user doing all the earth dance coming",
    "start": "724290",
    "end": "730860"
  },
  {
    "text": "back getting the talking exchange it refreshing and refreshing it and what's",
    "start": "730860",
    "end": "736560"
  },
  {
    "text": "more important it will inject the headers that you wanna get a new set of headers upstream so the API server will",
    "start": "736560",
    "end": "744390"
  },
  {
    "text": "understand the new the forwarded calls so my first demo is going to be my first",
    "start": "744390",
    "end": "753510"
  },
  {
    "text": "demo is going to be configured in single sign-on on top of the unit is dashboard by adding this proxy that I just showed",
    "start": "753510",
    "end": "760110"
  },
  {
    "text": "and I'm also configuring the API server and because my success ratio in the most",
    "start": "760110",
    "end": "765990"
  },
  {
    "text": "is about 5% I'm going to play a video okay so so we have mini cube",
    "start": "765990",
    "end": "777589"
  },
  {
    "text": "and we have the communities - for install and the first thing that echo need is touch was going to ask you is who are you",
    "start": "779640",
    "end": "786180"
  },
  {
    "text": "basically because it needs to interact on your behalf and the goal of this demo or the this exercise is to remove this",
    "start": "786180",
    "end": "792480"
  },
  {
    "text": "page and offer a single sign-on instead so we're going to install and proxy and",
    "start": "792480",
    "end": "799350"
  },
  {
    "text": "that proxy one of the things are going to do is actually inject a new set of headers as a sin and to understand it a",
    "start": "799350",
    "end": "805140"
  },
  {
    "text": "bit better we're going to do first the exercise by using this echo server which",
    "start": "805140",
    "end": "810329"
  },
  {
    "text": "is just a very simple web server that exposes the headers are injected so we",
    "start": "810329",
    "end": "816149"
  },
  {
    "text": "have the echo server running and we're going to do next is to is to install the",
    "start": "816149",
    "end": "827190"
  },
  {
    "text": "proxy so the proxy I'm going to be using is called keep your gatekeeper you can use all two proxy and there are others",
    "start": "827190",
    "end": "833209"
  },
  {
    "text": "but all of them work the same way you configure you configure the OID C",
    "start": "833209",
    "end": "840029"
  },
  {
    "text": "settings to say what you haven't a provider that you want to trust and then you said and then you're going to set an",
    "start": "840029",
    "end": "847260"
  },
  {
    "text": "upstream URL which all the requests are going to be upstream to so if you try to",
    "start": "847260",
    "end": "856769"
  },
  {
    "text": "access now the - were the the echo the echo server you get intercepted by the",
    "start": "856769",
    "end": "862110"
  },
  {
    "text": "by the proxy which is more motor functions and now we see the echo server",
    "start": "862110",
    "end": "867149"
  },
  {
    "text": "we way more information it contains information like who I am my email",
    "start": "867149",
    "end": "873510"
  },
  {
    "text": "address my name I'm also talking and",
    "start": "873510",
    "end": "880170"
  },
  {
    "text": "what's more important it has an authorization header that says it's going to be injected in every request so",
    "start": "880170",
    "end": "888149"
  },
  {
    "text": "let's take a look at the other token because it should be adjacent with token so we got two JWT dot io and here we can",
    "start": "888149",
    "end": "894240"
  },
  {
    "text": "decode the token so we're decoding the token now and we can see that has been issued by accounts",
    "start": "894240",
    "end": "899370"
  },
  {
    "text": "of welcome as expected it contains my information",
    "start": "899370",
    "end": "905930"
  },
  {
    "text": "and it will say that expires in one hour so let's actually try to to hit the API",
    "start": "907640",
    "end": "915470"
  },
  {
    "text": "server with this token I'm doing a call to the API server and it says for one this expected the API server though",
    "start": "915470",
    "end": "923029"
  },
  {
    "text": "saying understand this token yet so the next thing that we need to do the missing piece here is configuring the",
    "start": "923029",
    "end": "928760"
  },
  {
    "text": "API server and this is trivial this is doable in mini cube because you can",
    "start": "928760",
    "end": "937670"
  },
  {
    "text": "actually pass extra conflict class so what we're doing here is actually the configuring mini cube by setting the the",
    "start": "937670",
    "end": "943190"
  },
  {
    "text": "same issue your own and client ID that that the proxy has that way the tokens",
    "start": "943190",
    "end": "949220"
  },
  {
    "text": "generated by the proxy will be understood by the API server so once this finishes we can do a call again and",
    "start": "949220",
    "end": "960980"
  },
  {
    "text": "it should work okay so we have now the API server than the stands I did talking generating by the by the proxy so the",
    "start": "960980",
    "end": "968180"
  },
  {
    "text": "last step is just to put just put another instance of the proxy in front",
    "start": "968180",
    "end": "973550"
  },
  {
    "text": "of the dashboard and the world winter it's moving forward so it is exposed on",
    "start": "973550",
    "end": "983209"
  },
  {
    "text": "the dashboard you see the mean equivalent net self signed certificate",
    "start": "983209",
    "end": "992230"
  },
  {
    "text": "so we get intercepted that's good but",
    "start": "993680",
    "end": "999240"
  },
  {
    "text": "this time this should work and as we can see now the dashboard says you know then",
    "start": "999240",
    "end": "1005930"
  },
  {
    "text": "together with the earth headers and this is because they also the - work has built-in functionality to create this",
    "start": "1005930",
    "end": "1011690"
  },
  {
    "text": "token that has been injected by the approximate so we went from experience that require our we manually add your",
    "start": "1011690",
    "end": "1018890"
  },
  {
    "text": "credentials to basically getting access automatically to that with Azure be a single sign-on okay so that was good",
    "start": "1018890",
    "end": "1029500"
  },
  {
    "text": "but that birthing work everywhere one of the one of the conditions is this needs",
    "start": "1029500",
    "end": "1035959"
  },
  {
    "text": "to work at work and this mean in order to make it work as we serve we need to",
    "start": "1035959",
    "end": "1041600"
  },
  {
    "text": "modify the API server and in many cases we cannot do that and actually in many cases we might not",
    "start": "1041600",
    "end": "1047630"
  },
  {
    "text": "even want to do it so regarding",
    "start": "1047630",
    "end": "1052850"
  },
  {
    "text": "modifying the API server we look into different distributions in some manner",
    "start": "1052850",
    "end": "1058790"
  },
  {
    "text": "services that actually can be tricky in cases like GK or yes this actually might",
    "start": "1058790",
    "end": "1063950"
  },
  {
    "text": "have changed already because it changes everyday but G ke ke s you cannot modify those flags in a case and oke you can do",
    "start": "1063950",
    "end": "1072980"
  },
  {
    "text": "it but only selecting their specific identity providers so this is actually",
    "start": "1072980",
    "end": "1078170"
  },
  {
    "text": "the biggest the biggest problem that you might run into another interesting",
    "start": "1078170",
    "end": "1085420"
  },
  {
    "text": "interesting another issue is that in communities you can authenticate not only you can reference as you seen user",
    "start": "1085420",
    "end": "1092810"
  },
  {
    "text": "not only by its user but also by its group and the good news is that you can",
    "start": "1092810",
    "end": "1099410"
  },
  {
    "text": "actually you can actually preference or take information from each other talking",
    "start": "1099410",
    "end": "1105020"
  },
  {
    "text": "a map it to internal referencing are back and you can do it by the flag type",
    "start": "1105020",
    "end": "1110120"
  },
  {
    "text": "food under but Newser that as always these system work everywhere either so",
    "start": "1110120",
    "end": "1116810"
  },
  {
    "text": "you need to make sure that you choose the right one okay so we know that if we",
    "start": "1116810",
    "end": "1122570"
  },
  {
    "text": "modify the API server this is easy its building",
    "start": "1122570",
    "end": "1127670"
  },
  {
    "text": "this is great but how do we do it if we cannot make those changes so we looked",
    "start": "1127670",
    "end": "1134840"
  },
  {
    "text": "into a couple of workarounds called workarounds hugs whatever but the idea",
    "start": "1134840",
    "end": "1140600"
  },
  {
    "text": "is that this was kind of like that the it was the one that made sense at the beginning because the Dutch were already",
    "start": "1140600",
    "end": "1146330"
  },
  {
    "text": "supports service account tokens cube app sources support service accounts tokens",
    "start": "1146330",
    "end": "1152270"
  },
  {
    "text": "of what if we have some kind of some kind of like system that will take the ID token we will do the verification",
    "start": "1152270",
    "end": "1158800"
  },
  {
    "text": "require and extract the claims on the other side you will get a service",
    "start": "1158800",
    "end": "1163850"
  },
  {
    "text": "account or that was kind of like a no-brainer and to do that we could actually rely on some when it is primitive like we had a",
    "start": "1163850",
    "end": "1170900"
  },
  {
    "text": "controller that will interface using an account CRD and all that good stuff and even though this is actually cool this",
    "start": "1170900",
    "end": "1178670"
  },
  {
    "text": "is difficult this was very difficult so we looked into another solution which is",
    "start": "1178670",
    "end": "1184640"
  },
  {
    "text": "community impersonation impersonation is a feature in communities that's building",
    "start": "1184640",
    "end": "1193040"
  },
  {
    "text": "and basically allows any user to act on",
    "start": "1193040",
    "end": "1198140"
  },
  {
    "text": "behalf of another one so you can do things like cube cut or get paws as full",
    "start": "1198140",
    "end": "1203690"
  },
  {
    "text": "user and then on the API side they be a server-side asset of like authorization",
    "start": "1203690",
    "end": "1209420"
  },
  {
    "text": "checks will happen the first one is can impersonate a user impersonate the full user sure and then kind of who user",
    "start": "1209420",
    "end": "1216230"
  },
  {
    "text": "access pots because that was the initial command and you might think this is kind",
    "start": "1216230",
    "end": "1221690"
  },
  {
    "text": "of like impersonation has come dangerous because you might actually have a user that has god mode or sudo you can",
    "start": "1221690",
    "end": "1228890"
  },
  {
    "text": "limited you can actually make the impersonator only impersonate specific groups so in some ways you can restrict",
    "start": "1228890",
    "end": "1235850"
  },
  {
    "text": "that the interesting part about impersonation is that actually using it",
    "start": "1235850",
    "end": "1241460"
  },
  {
    "text": "is not different if you just need to pass a new set of headers there are two",
    "start": "1241460",
    "end": "1246800"
  },
  {
    "text": "new headers impersonate user which is required and impersonate group which is optional and something something to note",
    "start": "1246800",
    "end": "1255080"
  },
  {
    "text": "is that the authorization rather this time is not from the user it is from the impersonator so this is a",
    "start": "1255080",
    "end": "1261619"
  },
  {
    "text": "difference so by knowing this we can just put up another proxy I'm gonna have",
    "start": "1261619",
    "end": "1268759"
  },
  {
    "text": "two proxies that will take the ID token to the verification and I'm just on the",
    "start": "1268759",
    "end": "1275719"
  },
  {
    "text": "other end inject those new modified attestation header and inject this to",
    "start": "1275719",
    "end": "1281419"
  },
  {
    "text": "those two new headers and the way that we can set it up is we can put it",
    "start": "1281419",
    "end": "1288830"
  },
  {
    "text": "between your app and the conus API server and if you see how the flow will",
    "start": "1288830",
    "end": "1294499"
  },
  {
    "text": "work is the user will enter in your application it will be intercepted let's say about the first proxy the one that",
    "start": "1294499",
    "end": "1300710"
  },
  {
    "text": "will generate the talking for you at that point your application we have a token which the API server dosing",
    "start": "1300710",
    "end": "1306739"
  },
  {
    "text": "understand and those anchor but your application will think that is talking to the communities API directly by this",
    "start": "1306739",
    "end": "1312710"
  },
  {
    "text": "node is actually going through that proxy which is translating decided token that the API server doesn't care and",
    "start": "1312710",
    "end": "1318649"
  },
  {
    "text": "those understand onto something that will actually care and it will work and",
    "start": "1318649",
    "end": "1324440"
  },
  {
    "text": "if you notice there is no line between the Queenie's api and why DCI the identity provider",
    "start": "1324440",
    "end": "1330279"
  },
  {
    "text": "we're basically extracting the logic or the verification that will happen in the current this api to our own piece of",
    "start": "1330279",
    "end": "1337099"
  },
  {
    "text": "software like our own middleware so this is gonna be the second demo the second",
    "start": "1337099",
    "end": "1343460"
  },
  {
    "text": "demo is exactly the same thing we're going to take when it is - work and we're going to add single single the",
    "start": "1343460",
    "end": "1350029"
  },
  {
    "text": "main difference is that here we can modify the api server we're running in GK and we're gonna use impersonation",
    "start": "1350029",
    "end": "1357320"
  },
  {
    "text": "step",
    "start": "1357320",
    "end": "1359738"
  },
  {
    "text": "so I have running a cool GK I have running the - were behind the first proxy so we get intercepted a.m. but",
    "start": "1372560",
    "end": "1383930"
  },
  {
    "text": "this time doesn't work so we can see",
    "start": "1383930",
    "end": "1393380"
  },
  {
    "text": "that there is a token what we're gonna do it's actually because I don't trust so far in general let's actually do a",
    "start": "1393380",
    "end": "1399440"
  },
  {
    "text": "quorum directly to the API server so we're gonna have to organise this token",
    "start": "1399440",
    "end": "1405770"
  },
  {
    "text": "to try to talk to the API server as we did in the first demo so we're calling",
    "start": "1405770",
    "end": "1411230"
  },
  {
    "text": "the the GK API server here and we get 401 okay so confirm this doesn't work so",
    "start": "1411230",
    "end": "1419570"
  },
  {
    "text": "what we're going to do next is to a new a new proxy this impersonation proxy and",
    "start": "1419570",
    "end": "1425960"
  },
  {
    "text": "the good news the good news are that actually it already exists",
    "start": "1425960",
    "end": "1431150"
  },
  {
    "text": "our friends from jet stock have already built one this is awesome and it does",
    "start": "1431150",
    "end": "1437330"
  },
  {
    "text": "what we need you configure it to trust an identity provider they will take an ID token it will do all the",
    "start": "1437330",
    "end": "1444020"
  },
  {
    "text": "verifications that the API server Akshay will do and inject the new headers and",
    "start": "1444020",
    "end": "1449810"
  },
  {
    "text": "impersonation headers proxy into the API server so have it running and what we're",
    "start": "1449810",
    "end": "1458450"
  },
  {
    "text": "gonna do now is let's actually call the API server with the same token but through the proxy to see what happens",
    "start": "1458450",
    "end": "1464330"
  },
  {
    "text": "so I'm poor for what in the the port and the proxy I'm doing a call through",
    "start": "1464330",
    "end": "1471680"
  },
  {
    "text": "localhost this time remember the first one failed and this one is going through the proxy so it seems I've worked let's",
    "start": "1471680",
    "end": "1481550"
  },
  {
    "text": "take a look at the logs so looking at impersonation proxy and I know this is",
    "start": "1481550",
    "end": "1488450"
  },
  {
    "text": "very very bossy because in debug but what we're going to",
    "start": "1488450",
    "end": "1494270"
  },
  {
    "text": "see here is we're gonna see that there is a new",
    "start": "1494270",
    "end": "1501000"
  },
  {
    "text": "header calling personal user with Miguel admin my own that was extracted by by this proxy from from jet stock the other",
    "start": "1501000",
    "end": "1509400"
  },
  {
    "text": "thing that it did was to pass the authorization header which we're going",
    "start": "1509400",
    "end": "1514410"
  },
  {
    "text": "to actually introspect now to see what it has inside so we're going to Jason Webb talk in the dialogue we did before",
    "start": "1514410",
    "end": "1521060"
  },
  {
    "text": "and weird economy so we can see here is that this token doesn't contain any",
    "start": "1521060",
    "end": "1528270"
  },
  {
    "text": "information about me as a user it basically has been issued by a service account and it's actually in the",
    "start": "1528270",
    "end": "1535860"
  },
  {
    "text": "the user that represents is the service account default in the Qi DC proxy so this is the this is the impersonator and",
    "start": "1535860",
    "end": "1543740"
  },
  {
    "text": "impersonator has been configured to be able to impersonate my account okay so",
    "start": "1543740",
    "end": "1551820"
  },
  {
    "text": "we have a proxy that it seems to work so next we just need to take the Queenie",
    "start": "1551820",
    "end": "1558150"
  },
  {
    "text": "this dashboard and click it we're going to actually make it think that's talking",
    "start": "1558150",
    "end": "1563190"
  },
  {
    "text": "to the APS server but it's going to be talking through the process through the proxy and you can do that by just",
    "start": "1563190",
    "end": "1568890"
  },
  {
    "text": "overriding that environment where oh you",
    "start": "1568890",
    "end": "1575100"
  },
  {
    "text": "also need to override some certificates to do the tag lines and verification so",
    "start": "1575100",
    "end": "1583650"
  },
  {
    "text": "I have it running under - well impersonation we need this whatever and then you get interested by",
    "start": "1583650",
    "end": "1590460"
  },
  {
    "text": "the first proxy we have seen that before but now works the - were detects that",
    "start": "1590460",
    "end": "1599670"
  },
  {
    "text": "okay it was an authorization header but this now is actually responding the API server it's okay with it so let's",
    "start": "1599670",
    "end": "1605580"
  },
  {
    "text": "actually take a look at the logs",
    "start": "1605580",
    "end": "1608539"
  },
  {
    "text": "so in the local we're gonna see is that there is a call to API v1 default services which is the best I'm seeing in",
    "start": "1611950",
    "end": "1618160"
  },
  {
    "text": "the dashboard right now and it's impersonating my user and just a quick",
    "start": "1618160",
    "end": "1623380"
  },
  {
    "text": "note this works also works because I have a cluster or Pro binding for me get up in a meal to come they already set up",
    "start": "1623380",
    "end": "1631440"
  },
  {
    "text": "okay so so some some thoughts single",
    "start": "1631440",
    "end": "1642400"
  },
  {
    "text": "second coordinate is commit vendor law can be challenging but the good thing is that we can actually work around it we",
    "start": "1642400",
    "end": "1649300"
  },
  {
    "text": "can use communities primitives and just you know knowing where to put them you can offer a single single experience",
    "start": "1649300",
    "end": "1655330"
  },
  {
    "text": "that works everywhere if you want to learn more we wrote in dev document",
    "start": "1655330",
    "end": "1662470"
  },
  {
    "text": "about about all these workarounds that we did there we also we also touch all",
    "start": "1662470",
    "end": "1668950"
  },
  {
    "text": "the validation part I actually left out in this case I also recommend to take a",
    "start": "1668950",
    "end": "1674470"
  },
  {
    "text": "look at the community stock from yo composure check out - the proxy I use",
    "start": "1674470",
    "end": "1684460"
  },
  {
    "text": "for my second demo from jet stocks awesome and you can find the files the demo files that my colleague unknown",
    "start": "1684460",
    "end": "1691060"
  },
  {
    "text": "help me with",
    "start": "1691060",
    "end": "1693780"
  },
  {
    "text": "all right who's got questions we have time yes",
    "start": "1702580",
    "end": "1707940"
  },
  {
    "text": "how do you manage a CDP I mean so in this impersonation setup how does the",
    "start": "1707940",
    "end": "1715270"
  },
  {
    "text": "proxy manage HTTP streaming the requests like coops ETL exact oil coop city logs",
    "start": "1715270",
    "end": "1722620"
  },
  {
    "text": "I honestly don't know I haven't you mean like doing like an",
    "start": "1722620",
    "end": "1729700"
  },
  {
    "text": "exec for example through the proxy I don't know I don't know how we'll do that will be actually a good thing to check so I have two questions actually",
    "start": "1729700",
    "end": "1740920"
  },
  {
    "text": "first one is how does MFA get into all",
    "start": "1740920",
    "end": "1746260"
  },
  {
    "text": "these and the second one is is there any ID or something that correlates the",
    "start": "1746260",
    "end": "1754530"
  },
  {
    "text": "impersonator with the user so I can track down what every single user does because I don't I because I want to see",
    "start": "1754530",
    "end": "1762520"
  },
  {
    "text": "what has been done by whom so multi-factor off I believe that you know",
    "start": "1762520",
    "end": "1771820"
  },
  {
    "text": "that's one day I'm identity provider side so before you actually get back to the final of callback that will you know",
    "start": "1771820",
    "end": "1779710"
  },
  {
    "text": "basically with enough it will not affect on our end so it shouldn't be it shouldn't be a problem regarding the",
    "start": "1779710",
    "end": "1785740"
  },
  {
    "text": "identity on so you are talking about some kind of auditing on the side who is impersonating whom I mean the",
    "start": "1785740",
    "end": "1793420"
  },
  {
    "text": "impersonator in this case is a single one right so if you actually go back to tonight the other the other so this one",
    "start": "1793420",
    "end": "1807070"
  },
  {
    "text": "for example for auditing is actually much much better because you will have all those series that you will actually",
    "start": "1807070",
    "end": "1812320"
  },
  {
    "text": "be able to to check who sign up Wayne and when the talking about creating so on so forth on",
    "start": "1812320",
    "end": "1818720"
  },
  {
    "text": "the other side you have that issue that the impersonator is a single one so how do you know that loads I don't know you",
    "start": "1818720",
    "end": "1828500"
  },
  {
    "text": "can always put something some kind of like side car that will create some kind of block anywhere but I don't know I",
    "start": "1828500",
    "end": "1838280"
  },
  {
    "text": "have a question so as I understand as long as you are using web web browser so",
    "start": "1838280",
    "end": "1845090"
  },
  {
    "text": "for example your log in to web console it's really simple and seamless you just",
    "start": "1845090",
    "end": "1850540"
  },
  {
    "text": "basically go to web to page and you get sign-on automatically but if you are",
    "start": "1850540",
    "end": "1856820"
  },
  {
    "text": "going through command line I still have to go to web browser obtain the token and then copy it manually to the command",
    "start": "1856820",
    "end": "1864200"
  },
  {
    "text": "line so I've seen that you so I believe",
    "start": "1864200",
    "end": "1869330"
  },
  {
    "text": "that when you have a command line tool what will happen is some kind of like local web server will appear and then",
    "start": "1869330",
    "end": "1876080"
  },
  {
    "text": "they call back from their wealth to will go to a local port and I believe that",
    "start": "1876080",
    "end": "1881900"
  },
  {
    "text": "you don't need to copy the talking in that case the problem should be smart enough to so I just want to explain I",
    "start": "1881900",
    "end": "1889940"
  },
  {
    "text": "asked this because we have implemented a similar solution but it's very particular case so I just want to know",
    "start": "1889940",
    "end": "1896150"
  },
  {
    "text": "if there's any general solution for that",
    "start": "1896150",
    "end": "1899530"
  },
  {
    "text": "thank you",
    "start": "1901240",
    "end": "1904270"
  },
  {
    "text": "okay so first you can use the client credentials flow - don't use MFA at all",
    "start": "1907340",
    "end": "1913830"
  },
  {
    "text": "and you get your token so you can use it for service to service communication without from the command line so",
    "start": "1913830",
    "end": "1923070"
  },
  {
    "text": "question does this work with eks also because so it doesn't allow you to",
    "start": "1923070",
    "end": "1928710"
  },
  {
    "text": "modify the open ID connect legs on the API server and it is it forces you to use the unrolls so basically you should",
    "start": "1928710",
    "end": "1934890"
  },
  {
    "text": "kind of impersonate reusing a jumble is it possible to use this proxy only case also it should be able yeah okay and",
    "start": "1934890",
    "end": "1945870"
  },
  {
    "text": "another short one does it have a breaking glass because on the API server for example I can have multiple",
    "start": "1945870",
    "end": "1951090"
  },
  {
    "text": "authentication modules and even identity provider goes down I want like use the",
    "start": "1951090",
    "end": "1956460"
  },
  {
    "text": "certificates or something else is it possible to have a break glass with it  Thanks anyone else",
    "start": "1956460",
    "end": "1966500"
  },
  {
    "text": "all right let's give another round of applause to Miguel [Music]",
    "start": "1967780",
    "end": "1975650"
  }
]