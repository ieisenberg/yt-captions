[
  {
    "text": "all right let's go ahead and get",
    "start": "80",
    "end": "2439"
  },
  {
    "text": "started Good morning everyone My name's",
    "start": "2439",
    "end": "5680"
  },
  {
    "text": "Oliver And I'm Pete And",
    "start": "5680",
    "end": "8920"
  },
  {
    "text": "um Pete grew up uh uh just close around",
    "start": "8920",
    "end": "12559"
  },
  {
    "text": "here Do you want to tell us uh any",
    "start": "12559",
    "end": "14080"
  },
  {
    "text": "stories from your childhood Uh nothing",
    "start": "14080",
    "end": "15839"
  },
  {
    "text": "that I'm willing to put on the record",
    "start": "15839",
    "end": "17039"
  },
  {
    "text": "unfortunately Okay Well then maybe later",
    "start": "17039",
    "end": "19439"
  },
  {
    "text": "at uh at Pete's favorite",
    "start": "19439",
    "end": "22119"
  },
  {
    "text": "pub But anyway we um we both wound up in",
    "start": "22119",
    "end": "25920"
  },
  {
    "text": "uh in Stockholm um working for Spotify",
    "start": "25920",
    "end": "28960"
  },
  {
    "text": "and we work in core infrastructure which",
    "start": "28960",
    "end": "30800"
  },
  {
    "text": "is right down at the bottom of Spotify's",
    "start": "30800",
    "end": "32960"
  },
  {
    "text": "platform organization and uh we're happy",
    "start": "32960",
    "end": "35760"
  },
  {
    "text": "to be here We we hope you're all excited",
    "start": "35760",
    "end": "37600"
  },
  {
    "text": "to hear lots about Envoy today And um we",
    "start": "37600",
    "end": "41760"
  },
  {
    "text": "have plenty of rate limiting use cases",
    "start": "41760",
    "end": "43520"
  },
  {
    "text": "at at Spotify but today we're going to",
    "start": "43520",
    "end": "45760"
  },
  {
    "text": "talk about rate limiting in our",
    "start": "45760",
    "end": "47320"
  },
  {
    "text": "perimeter Um we have some history and",
    "start": "47320",
    "end": "49840"
  },
  {
    "text": "experience using the global rate",
    "start": "49840",
    "end": "51760"
  },
  {
    "text": "limiting uh in our um perimeter And we",
    "start": "51760",
    "end": "55520"
  },
  {
    "text": "we had some issues with that So we",
    "start": "55520",
    "end": "57280"
  },
  {
    "text": "wanted to explore a more scalable",
    "start": "57280",
    "end": "60120"
  },
  {
    "text": "solution So what are we going to cover",
    "start": "60120",
    "end": "62320"
  },
  {
    "text": "today We're going to talk about uh the",
    "start": "62320",
    "end": "64158"
  },
  {
    "text": "rate limiting landscape and why we",
    "start": "64159",
    "end": "66159"
  },
  {
    "text": "decided to write our own rate limiter",
    "start": "66159",
    "end": "68400"
  },
  {
    "text": "Pete is going to talk in depth about the",
    "start": "68400",
    "end": "70479"
  },
  {
    "text": "rate limiter that we wrote Uh we're",
    "start": "70479",
    "end": "72560"
  },
  {
    "text": "going to talk about the different",
    "start": "72560",
    "end": "73680"
  },
  {
    "text": "options that you have extending envoy",
    "start": "73680",
    "end": "76000"
  },
  {
    "text": "and how we eventually chose to use Go",
    "start": "76000",
    "end": "78880"
  },
  {
    "text": "And then we're going to talk about our",
    "start": "78880",
    "end": "80640"
  },
  {
    "text": "experience actually writing the rate",
    "start": "80640",
    "end": "82159"
  },
  {
    "text": "limiter in Go But before we get to it",
    "start": "82159",
    "end": "84960"
  },
  {
    "text": "Pete's going to give us a little general",
    "start": "84960",
    "end": "86720"
  },
  {
    "text": "background on rate",
    "start": "86720",
    "end": "89759"
  },
  {
    "text": "limiting I'm sure we're all roughly",
    "start": "90520",
    "end": "92799"
  },
  {
    "text": "aware of what rate limiting is but just",
    "start": "92799",
    "end": "94240"
  },
  {
    "text": "to make sure we're on the same page what",
    "start": "94240",
    "end": "96240"
  },
  {
    "text": "is it Well we want to take some",
    "start": "96240",
    "end": "98320"
  },
  {
    "text": "attributes of requests We're talking",
    "start": "98320",
    "end": "100320"
  },
  {
    "text": "about like L7 HTTP requests here Um",
    "start": "100320",
    "end": "104880"
  },
  {
    "text": "count the number of requests in a time",
    "start": "104880",
    "end": "106560"
  },
  {
    "text": "window and whenever that limit is",
    "start": "106560",
    "end": "107840"
  },
  {
    "text": "exceeded start rejecting them because",
    "start": "107840",
    "end": "109439"
  },
  {
    "text": "it's it's too many And the key key",
    "start": "109439",
    "end": "111439"
  },
  {
    "text": "terminology here that may be unfamiliar",
    "start": "111439",
    "end": "113280"
  },
  {
    "text": "to some is this idea of buckets which is",
    "start": "113280",
    "end": "115360"
  },
  {
    "text": "essentially some group of attributes IP",
    "start": "115360",
    "end": "118000"
  },
  {
    "text": "address uh path whatever And these can",
    "start": "118000",
    "end": "121280"
  },
  {
    "text": "be thought of as static which are",
    "start": "121280",
    "end": "122880"
  },
  {
    "text": "generally things that you can uh know",
    "start": "122880",
    "end": "125040"
  },
  {
    "text": "before you deploy your system URLs um",
    "start": "125040",
    "end": "128560"
  },
  {
    "text": "upstream clusters inside your",
    "start": "128560",
    "end": "130000"
  },
  {
    "text": "organization And then there are like",
    "start": "130000",
    "end": "131599"
  },
  {
    "text": "dynamic buckets which may be the IP",
    "start": "131599",
    "end": "133840"
  },
  {
    "text": "address uh requests are coming through",
    "start": "133840",
    "end": "135440"
  },
  {
    "text": "via the internet or the user that's",
    "start": "135440",
    "end": "137120"
  },
  {
    "text": "making those requests just so we're all",
    "start": "137120",
    "end": "139040"
  },
  {
    "text": "on the same page Um there",
    "start": "139040",
    "end": "141840"
  },
  {
    "text": "okay thank you",
    "start": "141840",
    "end": "144520"
  },
  {
    "text": "Pete So now there's there's quite a few",
    "start": "144520",
    "end": "147520"
  },
  {
    "text": "approaches for rate limiting Let's take",
    "start": "147520",
    "end": "149360"
  },
  {
    "text": "a look at the options that we have So",
    "start": "149360",
    "end": "151840"
  },
  {
    "text": "I'm going to cover four options today We",
    "start": "151840",
    "end": "153920"
  },
  {
    "text": "have local rate limiting we have global",
    "start": "153920",
    "end": "155920"
  },
  {
    "text": "rate limiting there's RLQS and what you",
    "start": "155920",
    "end": "159519"
  },
  {
    "text": "might get from a cloud provider And a",
    "start": "159519",
    "end": "162160"
  },
  {
    "text": "shout out at this point to Gemini for",
    "start": "162160",
    "end": "164080"
  },
  {
    "text": "our clip",
    "start": "164080",
    "end": "165720"
  },
  {
    "text": "art So uh first let's talk about Envoy's",
    "start": "165720",
    "end": "169599"
  },
  {
    "text": "local rate limiter Uh as you might have",
    "start": "169599",
    "end": "172000"
  },
  {
    "text": "assumed from the name it's scoped to a",
    "start": "172000",
    "end": "173680"
  },
  {
    "text": "single envoy It's super flexible and um",
    "start": "173680",
    "end": "176879"
  },
  {
    "text": "it can limit based on a variety of",
    "start": "176879",
    "end": "178800"
  },
  {
    "text": "requests and and envoy metadata But it's",
    "start": "178800",
    "end": "181760"
  },
  {
    "text": "also useful to note that although it",
    "start": "181760",
    "end": "184080"
  },
  {
    "text": "supports dynamic buckets uh as Pete",
    "start": "184080",
    "end": "186239"
  },
  {
    "text": "talked about um it has a hard limit on",
    "start": "186239",
    "end": "188319"
  },
  {
    "text": "the number of values that it can support",
    "start": "188319",
    "end": "190159"
  },
  {
    "text": "I think the default is like 20 or",
    "start": "190159",
    "end": "192000"
  },
  {
    "text": "something So and this limitation makes",
    "start": "192000",
    "end": "194080"
  },
  {
    "text": "it impractical to support common",
    "start": "194080",
    "end": "196080"
  },
  {
    "text": "perimeter use cases uh where you might",
    "start": "196080",
    "end": "198480"
  },
  {
    "text": "have dynamic buckets with high cardality",
    "start": "198480",
    "end": "201200"
  },
  {
    "text": "So all in all local rate limiting it",
    "start": "201200",
    "end": "203280"
  },
  {
    "text": "works pretty good but uh it doesn't",
    "start": "203280",
    "end": "205120"
  },
  {
    "text": "support common common perimeter use",
    "start": "205120",
    "end": "207360"
  },
  {
    "text": "cases like you know IP uh based rate",
    "start": "207360",
    "end": "210560"
  },
  {
    "text": "limiting or userbased rate",
    "start": "210560",
    "end": "212599"
  },
  {
    "text": "limiting So next let's take a look at",
    "start": "212599",
    "end": "215760"
  },
  {
    "text": "envoys global rate limiter So it has",
    "start": "215760",
    "end": "218560"
  },
  {
    "text": "distributed state So buckets are shared",
    "start": "218560",
    "end": "220720"
  },
  {
    "text": "between uh all the envoys that you might",
    "start": "220720",
    "end": "223280"
  },
  {
    "text": "have in a group and uh it functions in",
    "start": "223280",
    "end": "226400"
  },
  {
    "text": "the request path So that means that uh",
    "start": "226400",
    "end": "229120"
  },
  {
    "text": "on every incoming request it has to",
    "start": "229120",
    "end": "231519"
  },
  {
    "text": "consult an external rate limiter process",
    "start": "231519",
    "end": "233680"
  },
  {
    "text": "that decides if the if the request",
    "start": "233680",
    "end": "235440"
  },
  {
    "text": "should pass or be blocked and this of",
    "start": "235440",
    "end": "237599"
  },
  {
    "text": "course adds uh necess necessarily adds",
    "start": "237599",
    "end": "240200"
  },
  {
    "text": "latency But let's talk for a minute",
    "start": "240200",
    "end": "242400"
  },
  {
    "text": "about scaling the rate limiter",
    "start": "242400",
    "end": "244080"
  },
  {
    "text": "architecture itself Um so there's the",
    "start": "244080",
    "end": "246959"
  },
  {
    "text": "there's the external rate limiter",
    "start": "246959",
    "end": "248480"
  },
  {
    "text": "process There's the the the reference",
    "start": "248480",
    "end": "250560"
  },
  {
    "text": "implementation from the envoy project Um",
    "start": "250560",
    "end": "253360"
  },
  {
    "text": "and we also need to have some kind of uh",
    "start": "253360",
    "end": "256160"
  },
  {
    "text": "state storage like Reddus So at scale",
    "start": "256160",
    "end": "259919"
  },
  {
    "text": "we're talking about lots of rate",
    "start": "259919",
    "end": "261600"
  },
  {
    "text": "limiting processes um some kind of",
    "start": "261600",
    "end": "264240"
  },
  {
    "text": "clustered in-memory state storage and",
    "start": "264240",
    "end": "266400"
  },
  {
    "text": "needless to say this is uh uh it's a lot",
    "start": "266400",
    "end": "269120"
  },
  {
    "text": "of operational complexity Um uh about",
    "start": "269120",
    "end": "272320"
  },
  {
    "text": "five years ago I think Tinder gave an",
    "start": "272320",
    "end": "274160"
  },
  {
    "text": "envoy talk that said that the the rate",
    "start": "274160",
    "end": "276800"
  },
  {
    "text": "limiter pod that they that they were",
    "start": "276800",
    "end": "278479"
  },
  {
    "text": "using the uh the OSS version it it got",
    "start": "278479",
    "end": "281280"
  },
  {
    "text": "about 5,000 RPS So you can see where",
    "start": "281280",
    "end": "284160"
  },
  {
    "text": "this goes If you need to support a few",
    "start": "284160",
    "end": "286400"
  },
  {
    "text": "million",
    "start": "286400",
    "end": "288360"
  },
  {
    "text": "RPS So RLQS uh the rate limit quota",
    "start": "288360",
    "end": "292400"
  },
  {
    "text": "service we found this pretty interesting",
    "start": "292400",
    "end": "294800"
  },
  {
    "text": "It avoids the latency issues with the",
    "start": "294800",
    "end": "296560"
  },
  {
    "text": "global rate limiter by operating outside",
    "start": "296560",
    "end": "298880"
  },
  {
    "text": "of the request path So there's an RLQS",
    "start": "298880",
    "end": "301280"
  },
  {
    "text": "server that issues quotas to your envoys",
    "start": "301280",
    "end": "303919"
  },
  {
    "text": "for each configured bucket and a",
    "start": "303919",
    "end": "306000"
  },
  {
    "text": "feedback loop to aggregate the",
    "start": "306000",
    "end": "307520"
  },
  {
    "text": "consumption on each envoy and issue new",
    "start": "307520",
    "end": "309800"
  },
  {
    "text": "quotas Um however it's very clearly",
    "start": "309800",
    "end": "312960"
  },
  {
    "text": "marked as a work in progress and not",
    "start": "312960",
    "end": "315120"
  },
  {
    "text": "ready for production use but still it's",
    "start": "315120",
    "end": "317280"
  },
  {
    "text": "pretty interesting",
    "start": "317280",
    "end": "319600"
  },
  {
    "text": "And lastly looking at some of the non-",
    "start": "319600",
    "end": "321600"
  },
  {
    "text": "envoy options that you might use um",
    "start": "321600",
    "end": "323919"
  },
  {
    "text": "downstream from your perimeter layer you",
    "start": "323919",
    "end": "326000"
  },
  {
    "text": "might have a CDN like Fastly or cloud",
    "start": "326000",
    "end": "328960"
  },
  {
    "text": "provider load balancer like GCLB And",
    "start": "328960",
    "end": "331600"
  },
  {
    "text": "these work great if it fits your use",
    "start": "331600",
    "end": "333280"
  },
  {
    "text": "case You know it's a managed service You",
    "start": "333280",
    "end": "335039"
  },
  {
    "text": "don't like you pay for it but you don't",
    "start": "335039",
    "end": "336960"
  },
  {
    "text": "have to operate it So that's kind of",
    "start": "336960",
    "end": "338479"
  },
  {
    "text": "great Uh however you can only rate limit",
    "start": "338479",
    "end": "341919"
  },
  {
    "text": "using um you can only rate limit on",
    "start": "341919",
    "end": "344080"
  },
  {
    "text": "aspects of your traffic which is visible",
    "start": "344080",
    "end": "345919"
  },
  {
    "text": "to that layer So um for instance if you",
    "start": "345919",
    "end": "348720"
  },
  {
    "text": "want to scope your rate limiting to",
    "start": "348720",
    "end": "350639"
  },
  {
    "text": "upstream clusters in your envoy layer",
    "start": "350639",
    "end": "352960"
  },
  {
    "text": "the the load balancers can't see that So",
    "start": "352960",
    "end": "355520"
  },
  {
    "text": "it's not useful there So again these",
    "start": "355520",
    "end": "357919"
  },
  {
    "text": "options uh it really depends whether it",
    "start": "357919",
    "end": "360000"
  },
  {
    "text": "fits your use",
    "start": "360000",
    "end": "361960"
  },
  {
    "text": "case So now let's take another look at",
    "start": "361960",
    "end": "364960"
  },
  {
    "text": "this list through the lens of uh",
    "start": "364960",
    "end": "366720"
  },
  {
    "text": "Spotify's perimeter use case Um so can",
    "start": "366720",
    "end": "369440"
  },
  {
    "text": "we use the lo the local rate limiter",
    "start": "369440",
    "end": "371919"
  },
  {
    "text": "Well we have hundreds of envoys in our",
    "start": "371919",
    "end": "373680"
  },
  {
    "text": "perimeter layer and we want a rate limit",
    "start": "373680",
    "end": "375680"
  },
  {
    "text": "on IP or user ID So no that's not going",
    "start": "375680",
    "end": "378800"
  },
  {
    "text": "to work The global rate limiter as I",
    "start": "378800",
    "end": "381919"
  },
  {
    "text": "mentioned before we've run this in the",
    "start": "381919",
    "end": "383680"
  },
  {
    "text": "past Uh we found that operational",
    "start": "383680",
    "end": "385520"
  },
  {
    "text": "complexity was just way too high Um",
    "start": "385520",
    "end": "388560"
  },
  {
    "text": "scaling the rate limiting infrastructure",
    "start": "388560",
    "end": "390639"
  },
  {
    "text": "It's also a pricey proposition because",
    "start": "390639",
    "end": "392560"
  },
  {
    "text": "you're going to have to you're going to",
    "start": "392560",
    "end": "393840"
  },
  {
    "text": "have to scale it for higher than your",
    "start": "393840",
    "end": "395360"
  },
  {
    "text": "peak traffic and that alongside the",
    "start": "395360",
    "end": "398479"
  },
  {
    "text": "performance of the the poor performance",
    "start": "398479",
    "end": "400160"
  },
  {
    "text": "of the OSS rate limiter process Um it",
    "start": "400160",
    "end": "403039"
  },
  {
    "text": "meant that our rate limiting",
    "start": "403039",
    "end": "404160"
  },
  {
    "text": "infrastructure could cost more than our",
    "start": "404160",
    "end": "405919"
  },
  {
    "text": "envoy infrastructure and so it just",
    "start": "405919",
    "end": "408240"
  },
  {
    "text": "wasn't worth it for this",
    "start": "408240",
    "end": "409800"
  },
  {
    "text": "case Uh RQS as I mentioned were pretty",
    "start": "409800",
    "end": "413680"
  },
  {
    "text": "interested in some of the aspects of",
    "start": "413680",
    "end": "415039"
  },
  {
    "text": "this approach Um there are a few",
    "start": "415039",
    "end": "417680"
  },
  {
    "text": "technical reasons we can't use it and",
    "start": "417680",
    "end": "419360"
  },
  {
    "text": "Pete's going to go into that in much",
    "start": "419360",
    "end": "420720"
  },
  {
    "text": "more depth Um but the fact that it was",
    "start": "420720",
    "end": "423120"
  },
  {
    "text": "only a work in progress meant that it",
    "start": "423120",
    "end": "424639"
  },
  {
    "text": "was a",
    "start": "424639",
    "end": "426440"
  },
  {
    "text": "non-starter And just to touch on the",
    "start": "426440",
    "end": "428560"
  },
  {
    "text": "non- envoy options um I said we we want",
    "start": "428560",
    "end": "431919"
  },
  {
    "text": "to limit based on user ID We only decode",
    "start": "431919",
    "end": "434720"
  },
  {
    "text": "that in our envoy layer So it's not",
    "start": "434720",
    "end": "436720"
  },
  {
    "text": "something that we could practically",
    "start": "436720",
    "end": "438759"
  },
  {
    "text": "use And then there were no more options",
    "start": "438759",
    "end": "441360"
  },
  {
    "text": "So where does that leave us It looks",
    "start": "441360",
    "end": "443280"
  },
  {
    "text": "like Pete finally gets to write his rate",
    "start": "443280",
    "end": "447440"
  },
  {
    "text": "limiter Thank you So of course um the",
    "start": "447479",
    "end": "450400"
  },
  {
    "text": "most Can you hold that for a second The",
    "start": "450400",
    "end": "452080"
  },
  {
    "text": "most important thing in any project to",
    "start": "452080",
    "end": "454000"
  },
  {
    "text": "start with is a name We chose the name",
    "start": "454000",
    "end": "456319"
  },
  {
    "text": "uh Time Cop Why did we choose this name",
    "start": "456319",
    "end": "459199"
  },
  {
    "text": "Well it's very funny to say JeanClaude",
    "start": "459199",
    "end": "460720"
  },
  {
    "text": "Vanam quite a lot in many contexts The",
    "start": "460720",
    "end": "463440"
  },
  {
    "text": "second most important thing is to have a",
    "start": "463440",
    "end": "465120"
  },
  {
    "text": "design Okay so what is it that we are",
    "start": "465120",
    "end": "467199"
  },
  {
    "text": "actually trying to do and how can we",
    "start": "467199",
    "end": "469039"
  },
  {
    "text": "actually do it So let's take a step back",
    "start": "469039",
    "end": "472400"
  },
  {
    "text": "What what what is it that we actually",
    "start": "472400",
    "end": "473680"
  },
  {
    "text": "want to achieve with our rate limiter",
    "start": "473680",
    "end": "475039"
  },
  {
    "text": "And why is it we can't get there with",
    "start": "475039",
    "end": "476400"
  },
  {
    "text": "the options Oliver has just discussed So",
    "start": "476400",
    "end": "478560"
  },
  {
    "text": "with rate limiting you have to define",
    "start": "478560",
    "end": "480400"
  },
  {
    "text": "some number of requests that are allowed",
    "start": "480400",
    "end": "482000"
  },
  {
    "text": "within a given window And there's a",
    "start": "482000",
    "end": "483520"
  },
  {
    "text": "tension here between choosing a limit",
    "start": "483520",
    "end": "485120"
  },
  {
    "text": "that is generous enough to affect uh to",
    "start": "485120",
    "end": "487120"
  },
  {
    "text": "avoid affecting normal users and low",
    "start": "487120",
    "end": "489280"
  },
  {
    "text": "enough that it defends against unwant",
    "start": "489280",
    "end": "490879"
  },
  {
    "text": "unwanted activity A rate limit of say",
    "start": "490879",
    "end": "492960"
  },
  {
    "text": "like 10 million requests per second is",
    "start": "492960",
    "end": "494639"
  },
  {
    "text": "probably not never going to affect like",
    "start": "494639",
    "end": "496160"
  },
  {
    "text": "a normal user but it's obviously not",
    "start": "496160",
    "end": "497520"
  },
  {
    "text": "going to help you very much Typically",
    "start": "497520",
    "end": "499440"
  },
  {
    "text": "whenever this limit is exceeded or you",
    "start": "499440",
    "end": "501199"
  },
  {
    "text": "could call this like the nth plus one",
    "start": "501199",
    "end": "502479"
  },
  {
    "text": "request in the window you reject that",
    "start": "502479",
    "end": "504680"
  },
  {
    "text": "request This should all be very obvious",
    "start": "504680",
    "end": "506960"
  },
  {
    "text": "to everyone Uh enforcing such a hard",
    "start": "506960",
    "end": "509520"
  },
  {
    "text": "limit for every single bucket so that's",
    "start": "509520",
    "end": "511199"
  },
  {
    "text": "you know some group of attributes a user",
    "start": "511199",
    "end": "512880"
  },
  {
    "text": "IPs services etc is expensive and it's",
    "start": "512880",
    "end": "516159"
  },
  {
    "text": "also somewhat unnecessary The vast",
    "start": "516159",
    "end": "518240"
  },
  {
    "text": "majority of our clients and our users",
    "start": "518240",
    "end": "519760"
  },
  {
    "text": "are well behaved the vast majority of",
    "start": "519760",
    "end": "521680"
  },
  {
    "text": "our time and in many cases it's not",
    "start": "521680",
    "end": "523599"
  },
  {
    "text": "particularly an issue if a user does",
    "start": "523599",
    "end": "525279"
  },
  {
    "text": "stray over a limit accidentally it would",
    "start": "525279",
    "end": "528000"
  },
  {
    "text": "actually be a bad user experience for",
    "start": "528000",
    "end": "529360"
  },
  {
    "text": "them They maybe see an error in the app",
    "start": "529360",
    "end": "531040"
  },
  {
    "text": "or whatever they're doing takes longer",
    "start": "531040",
    "end": "532880"
  },
  {
    "text": "because they have to wait for their like",
    "start": "532880",
    "end": "534240"
  },
  {
    "text": "uh um tokens to refresh and get more",
    "start": "534240",
    "end": "537200"
  },
  {
    "text": "access It it also doesn't really help us",
    "start": "537200",
    "end": "539360"
  },
  {
    "text": "very much either if we stop you know one",
    "start": "539360",
    "end": "541120"
  },
  {
    "text": "or two people a day having five requests",
    "start": "541120",
    "end": "543040"
  },
  {
    "text": "in a second rather than six requests in",
    "start": "543040",
    "end": "544640"
  },
  {
    "text": "a second for",
    "start": "544640",
    "end": "545560"
  },
  {
    "text": "example This is the activity that we",
    "start": "545560",
    "end": "547760"
  },
  {
    "text": "actually want to stop like way way in",
    "start": "547760",
    "end": "550160"
  },
  {
    "text": "excess of any reasonable um like usage",
    "start": "550160",
    "end": "552959"
  },
  {
    "text": "any fair usage any limit that we could",
    "start": "552959",
    "end": "554640"
  },
  {
    "text": "possibly stop And if we like loosen the",
    "start": "554640",
    "end": "557040"
  },
  {
    "text": "requirements and the constraints of our",
    "start": "557040",
    "end": "558399"
  },
  {
    "text": "system such that we target this kind of",
    "start": "558399",
    "end": "560320"
  },
  {
    "text": "activity and we don't try and enforce",
    "start": "560320",
    "end": "562080"
  },
  {
    "text": "like a particularly hard limit on",
    "start": "562080",
    "end": "563519"
  },
  {
    "text": "everyone everywhere all the time we can",
    "start": "563519",
    "end": "565839"
  },
  {
    "text": "get great great uh greatly improved like",
    "start": "565839",
    "end": "567920"
  },
  {
    "text": "scaling characteristics of the system",
    "start": "567920",
    "end": "569760"
  },
  {
    "text": "and okay so what is the scale that we're",
    "start": "569760",
    "end": "571519"
  },
  {
    "text": "talking about here Uh this is a graph of",
    "start": "571519",
    "end": "573440"
  },
  {
    "text": "the incoming um HTTP requests to Spotify",
    "start": "573440",
    "end": "577200"
  },
  {
    "text": "over over a week It peaks at about 10",
    "start": "577200",
    "end": "579519"
  },
  {
    "text": "million requests per second on a typical",
    "start": "579519",
    "end": "581120"
  },
  {
    "text": "day And if certain famous artists",
    "start": "581120",
    "end": "583200"
  },
  {
    "text": "release albums you might imagine who I'm",
    "start": "583200",
    "end": "585360"
  },
  {
    "text": "talking about Uh this can easily exceed",
    "start": "585360",
    "end": "587760"
  },
  {
    "text": "that We have about 675 million monthly",
    "start": "587760",
    "end": "590640"
  },
  {
    "text": "active users 1.5 million Kubernetes pods",
    "start": "590640",
    "end": "593839"
  },
  {
    "text": "and about 3,500 microservices in",
    "start": "593839",
    "end": "596320"
  },
  {
    "text": "production It's quite big and unless you",
    "start": "596320",
    "end": "598560"
  },
  {
    "text": "design for scale with with this scale in",
    "start": "598560",
    "end": "600800"
  },
  {
    "text": "mind at the start you will spend a lot",
    "start": "600800",
    "end": "602080"
  },
  {
    "text": "of money on your rate limiting uh",
    "start": "602080",
    "end": "603600"
  },
  {
    "text": "infrastructure which is kind of waste",
    "start": "603600",
    "end": "606560"
  },
  {
    "text": "So fundamentally all we have to do is is",
    "start": "606560",
    "end": "609920"
  },
  {
    "text": "count and aggregate right rate limiting",
    "start": "609920",
    "end": "611920"
  },
  {
    "text": "is really a matter of distributed",
    "start": "611920",
    "end": "613360"
  },
  {
    "text": "counting and summation We have hundreds",
    "start": "613360",
    "end": "616160"
  },
  {
    "text": "of envoys in our perimeter and uh the",
    "start": "616160",
    "end": "618399"
  },
  {
    "text": "way it's designed essentially any envoy",
    "start": "618399",
    "end": "620160"
  },
  {
    "text": "can serve any request even consecutive",
    "start": "620160",
    "end": "622399"
  },
  {
    "text": "requests from the same user There's no",
    "start": "622399",
    "end": "624320"
  },
  {
    "text": "affinity There's no sharding you know",
    "start": "624320",
    "end": "625920"
  },
  {
    "text": "with some like minor exceptions Um this",
    "start": "625920",
    "end": "628640"
  },
  {
    "text": "means that no particular envoy in the",
    "start": "628640",
    "end": "630640"
  },
  {
    "text": "perimeter has enough data on its own",
    "start": "630640",
    "end": "632800"
  },
  {
    "text": "outside of extreme cases to make rate",
    "start": "632800",
    "end": "635040"
  },
  {
    "text": "limiting decisions So in the words of",
    "start": "635040",
    "end": "637360"
  },
  {
    "text": "Patrick what we need to do is take all",
    "start": "637360",
    "end": "639040"
  },
  {
    "text": "of these counts and push them somewhere",
    "start": "639040",
    "end": "640760"
  },
  {
    "text": "else Now if you're if you're aware of",
    "start": "640760",
    "end": "643360"
  },
  {
    "text": "RQS you you might be thinking well isn't",
    "start": "643360",
    "end": "645600"
  },
  {
    "text": "this what RQS does And yes it is And",
    "start": "645600",
    "end": "648560"
  },
  {
    "text": "really time cop is RQS with a fancy hat",
    "start": "648560",
    "end": "652079"
  },
  {
    "text": "So what is it about RQS that doesn't",
    "start": "652079",
    "end": "654560"
  },
  {
    "text": "really work for our use case",
    "start": "654560",
    "end": "656880"
  },
  {
    "text": "So RQS has two major problems for us and",
    "start": "656880",
    "end": "659600"
  },
  {
    "text": "our use case So firstly there's this",
    "start": "659600",
    "end": "661279"
  },
  {
    "text": "behavior and I'm quoting the uh the",
    "start": "661279",
    "end": "662880"
  },
  {
    "text": "documentation here The rate limit",
    "start": "662880",
    "end": "664880"
  },
  {
    "text": "quotota filter RQS requests quotota",
    "start": "664880",
    "end": "666959"
  },
  {
    "text": "assignments from the RQS server when the",
    "start": "666959",
    "end": "669839"
  },
  {
    "text": "request matches to a bucket for the",
    "start": "669839",
    "end": "671279"
  },
  {
    "text": "first time Due to the nature of our",
    "start": "671279",
    "end": "673360"
  },
  {
    "text": "traffic and because it's horizontally",
    "start": "673360",
    "end": "675040"
  },
  {
    "text": "scalable and stateless uh nearly every",
    "start": "675040",
    "end": "677600"
  },
  {
    "text": "request to one of our envoys will be",
    "start": "677600",
    "end": "679360"
  },
  {
    "text": "unique within a short time window which",
    "start": "679360",
    "end": "681680"
  },
  {
    "text": "ultimately means that about one request",
    "start": "681680",
    "end": "683680"
  },
  {
    "text": "uh means that we will have to make one",
    "start": "683680",
    "end": "685279"
  },
  {
    "text": "request per request to an RQS server Uh",
    "start": "685279",
    "end": "688720"
  },
  {
    "text": "which is essentially the same behavior",
    "start": "688720",
    "end": "690000"
  },
  {
    "text": "as a global rate limiter although",
    "start": "690000",
    "end": "691600"
  },
  {
    "text": "admittedly that is not in the hot",
    "start": "691600",
    "end": "692880"
  },
  {
    "text": "request path Millions of requests to our",
    "start": "692880",
    "end": "695200"
  },
  {
    "text": "perimeter will then be millions of",
    "start": "695200",
    "end": "696880"
  },
  {
    "text": "internal requests to the R request",
    "start": "696880",
    "end": "698240"
  },
  {
    "text": "servers per second And secondly there's",
    "start": "698240",
    "end": "700480"
  },
  {
    "text": "no sharding of the data from the envoys",
    "start": "700480",
    "end": "702560"
  },
  {
    "text": "to the RQS servers You end up having to",
    "start": "702560",
    "end": "704800"
  },
  {
    "text": "shuffle uh all the the data the buckets",
    "start": "704800",
    "end": "707040"
  },
  {
    "text": "and accounts between the RQS servers or",
    "start": "707040",
    "end": "709680"
  },
  {
    "text": "to some shared storage like Reddius",
    "start": "709680",
    "end": "711440"
  },
  {
    "text": "which is another fairly large set of",
    "start": "711440",
    "end": "713120"
  },
  {
    "text": "data moving over the",
    "start": "713120",
    "end": "715800"
  },
  {
    "text": "network Time solves these two issues by",
    "start": "715800",
    "end": "718480"
  },
  {
    "text": "using consistent hashing of buckets to",
    "start": "718480",
    "end": "720160"
  },
  {
    "text": "aggregators and only ever periodically",
    "start": "720160",
    "end": "722399"
  },
  {
    "text": "reporting counts whether or not the",
    "start": "722399",
    "end": "723760"
  },
  {
    "text": "buckets are new to the envoy Instead of",
    "start": "723760",
    "end": "725760"
  },
  {
    "text": "having to make essentially one request",
    "start": "725760",
    "end": "727200"
  },
  {
    "text": "per request to uh one request per",
    "start": "727200",
    "end": "729680"
  },
  {
    "text": "request to our perimeter to our rate",
    "start": "729680",
    "end": "731519"
  },
  {
    "text": "limiting system we now only have to make",
    "start": "731519",
    "end": "733440"
  },
  {
    "text": "as many requests per time window as we",
    "start": "733440",
    "end": "735279"
  },
  {
    "text": "have aggregator service In practice this",
    "start": "735279",
    "end": "737440"
  },
  {
    "text": "is a fraction of the number of requests",
    "start": "737440",
    "end": "738800"
  },
  {
    "text": "each would otherwise have to make",
    "start": "738800",
    "end": "740399"
  },
  {
    "text": "Instead of tens of thousands per time",
    "start": "740399",
    "end": "742079"
  },
  {
    "text": "window it's tens per time window We can",
    "start": "742079",
    "end": "744720"
  },
  {
    "text": "now also be sure that the counts for a",
    "start": "744720",
    "end": "746399"
  },
  {
    "text": "given bucket are in memory on a",
    "start": "746399",
    "end": "748000"
  },
  {
    "text": "particular aggregator That means we can",
    "start": "748000",
    "end": "749760"
  },
  {
    "text": "make local decisions on each aggregator",
    "start": "749760",
    "end": "751440"
  },
  {
    "text": "and no longer have to shuffle data",
    "start": "751440",
    "end": "752800"
  },
  {
    "text": "around at all",
    "start": "752800",
    "end": "755760"
  },
  {
    "text": "Similar to RQS Tomcop uses GBC streams",
    "start": "755760",
    "end": "758240"
  },
  {
    "text": "between the filter and the aggregator to",
    "start": "758240",
    "end": "760240"
  },
  {
    "text": "receive uh blocking actions which is to",
    "start": "760240",
    "end": "762000"
  },
  {
    "text": "say \"Please block this bucket is made",
    "start": "762000",
    "end": "763839"
  },
  {
    "text": "too many requests.\" But the astute",
    "start": "763839",
    "end": "765920"
  },
  {
    "text": "amongst you may have noticed a problem",
    "start": "765920",
    "end": "767440"
  },
  {
    "text": "If rate limiting decisions are being",
    "start": "767440",
    "end": "768880"
  },
  {
    "text": "made locally per aggregator how do we",
    "start": "768880",
    "end": "770720"
  },
  {
    "text": "let all of our envoys know which buckets",
    "start": "770720",
    "end": "772720"
  },
  {
    "text": "to",
    "start": "772720",
    "end": "773399"
  },
  {
    "text": "block Each envoy is not connected to",
    "start": "773399",
    "end": "775920"
  },
  {
    "text": "every uh aggregator via a GBC stream",
    "start": "775920",
    "end": "780720"
  },
  {
    "text": "Well we we use Google Cloud PubSub to",
    "start": "780720",
    "end": "782560"
  },
  {
    "text": "distribute the blocking actions between",
    "start": "782560",
    "end": "784000"
  },
  {
    "text": "aggregators which then push them to all",
    "start": "784000",
    "end": "785920"
  },
  {
    "text": "the envoys they're actually connected to",
    "start": "785920",
    "end": "787760"
  },
  {
    "text": "Our perimeter system already depends on",
    "start": "787760",
    "end": "789360"
  },
  {
    "text": "PubSub So this isn't a new like",
    "start": "789360",
    "end": "790800"
  },
  {
    "text": "component we're adding to the system nor",
    "start": "790800",
    "end": "792560"
  },
  {
    "text": "does it affect our SLOs's It does",
    "start": "792560",
    "end": "794399"
  },
  {
    "text": "increase the delay in a blocking action",
    "start": "794399",
    "end": "796079"
  },
  {
    "text": "to take effect but usually not by",
    "start": "796079",
    "end": "798079"
  },
  {
    "text": "particularly much And as I've said we're",
    "start": "798079",
    "end": "799600"
  },
  {
    "text": "like happy to like loosen the",
    "start": "799600",
    "end": "801120"
  },
  {
    "text": "requirements of the system loosen the",
    "start": "801120",
    "end": "802639"
  },
  {
    "text": "strictness of the system in order to",
    "start": "802639",
    "end": "804240"
  },
  {
    "text": "make it scale you know much more",
    "start": "804240",
    "end": "806320"
  },
  {
    "text": "efficiently But again some of you may",
    "start": "806320",
    "end": "809120"
  },
  {
    "text": "may have noticed another problem What",
    "start": "809120",
    "end": "811040"
  },
  {
    "text": "happens if we lose one of our",
    "start": "811040",
    "end": "812120"
  },
  {
    "text": "aggregators Uh well we don't really care",
    "start": "812120",
    "end": "814800"
  },
  {
    "text": "Most of the data stored in the",
    "start": "814800",
    "end": "816000"
  },
  {
    "text": "aggregators is unimportant Existing",
    "start": "816000",
    "end": "818079"
  },
  {
    "text": "blocking actions will still take effect",
    "start": "818079",
    "end": "819519"
  },
  {
    "text": "They've already been distributed to all",
    "start": "819519",
    "end": "820720"
  },
  {
    "text": "of the other aggregators all of the",
    "start": "820720",
    "end": "822200"
  },
  {
    "text": "envoys And any bucket that is like",
    "start": "822200",
    "end": "824639"
  },
  {
    "text": "teetering on the edge of being blocked",
    "start": "824639",
    "end": "826240"
  },
  {
    "text": "will be found and caught by another",
    "start": "826240",
    "end": "827959"
  },
  {
    "text": "aggregator when the consistent hashing",
    "start": "827959",
    "end": "830240"
  },
  {
    "text": "roots it to another aggregator Uh note",
    "start": "830240",
    "end": "832639"
  },
  {
    "text": "that you will have a similar problem",
    "start": "832639",
    "end": "833920"
  },
  {
    "text": "though to a lesser degree if you're",
    "start": "833920",
    "end": "835279"
  },
  {
    "text": "using the global rate limiter as that",
    "start": "835279",
    "end": "837040"
  },
  {
    "text": "uses reddis for storage by default",
    "start": "837040",
    "end": "838880"
  },
  {
    "text": "You're unlikely to lose the cluster but",
    "start": "838880",
    "end": "840720"
  },
  {
    "text": "you might Now Oliver is going to discuss",
    "start": "840720",
    "end": "842880"
  },
  {
    "text": "how we actually built this Mhm Thank you",
    "start": "842880",
    "end": "845360"
  },
  {
    "text": "Pete So let's take a step back for a",
    "start": "845360",
    "end": "848399"
  },
  {
    "text": "minute So now we have a good",
    "start": "848399",
    "end": "849600"
  },
  {
    "text": "understanding of the architecture we",
    "start": "849600",
    "end": "851040"
  },
  {
    "text": "want to build So let's figure out how",
    "start": "851040",
    "end": "852560"
  },
  {
    "text": "we're going to build it into",
    "start": "852560",
    "end": "855000"
  },
  {
    "text": "envoy So we can start by looking at the",
    "start": "855000",
    "end": "857760"
  },
  {
    "text": "approaches that that we can take uh to",
    "start": "857760",
    "end": "860000"
  },
  {
    "text": "extend envoy We'll take a look at C++",
    "start": "860000",
    "end": "862560"
  },
  {
    "text": "We'll take a look at Lua We'll take a W",
    "start": "862560",
    "end": "864160"
  },
  {
    "text": "was and we'll take a look at Go as well",
    "start": "864160",
    "end": "867199"
  },
  {
    "text": "And a quick note we were looking at this",
    "start": "867199",
    "end": "868800"
  },
  {
    "text": "list at the beginning of last year So",
    "start": "868800",
    "end": "870959"
  },
  {
    "text": "the landscape has changed a bit since",
    "start": "870959",
    "end": "872639"
  },
  {
    "text": "then And thank you again to Gemini for",
    "start": "872639",
    "end": "875360"
  },
  {
    "text": "our",
    "start": "875360",
    "end": "877320"
  },
  {
    "text": "logos So first off we have the gold",
    "start": "877320",
    "end": "880079"
  },
  {
    "text": "standard C++ Um when you write filters",
    "start": "880079",
    "end": "883120"
  },
  {
    "text": "in C++ you get a mature API fullfeatured",
    "start": "883120",
    "end": "886079"
  },
  {
    "text": "API Most of envoy is already built this",
    "start": "886079",
    "end": "888480"
  },
  {
    "text": "way essentially dog fooding the APIs Um",
    "start": "888480",
    "end": "891440"
  },
  {
    "text": "but writing C++ filters it does mean",
    "start": "891440",
    "end": "893839"
  },
  {
    "text": "that you have to take on uh the whole",
    "start": "893839",
    "end": "896000"
  },
  {
    "text": "aspect of building your Envoy binary You",
    "start": "896000",
    "end": "898399"
  },
  {
    "text": "may not have been doing that before and",
    "start": "898399",
    "end": "899760"
  },
  {
    "text": "like like setting up an entire build",
    "start": "899760",
    "end": "901760"
  },
  {
    "text": "process Um that that's a pretty pretty",
    "start": "901760",
    "end": "904880"
  },
  {
    "text": "weighty thing that you have to worry",
    "start": "904880",
    "end": "906279"
  },
  {
    "text": "about So as long as you have C++",
    "start": "906279",
    "end": "909519"
  },
  {
    "text": "expertise and you don't blink at running",
    "start": "909519",
    "end": "911760"
  },
  {
    "text": "your own builds then you can't go wrong",
    "start": "911760",
    "end": "913920"
  },
  {
    "text": "with C++",
    "start": "913920",
    "end": "916160"
  },
  {
    "text": "What about Lua It's simple it's easy but",
    "start": "916160",
    "end": "919440"
  },
  {
    "text": "what does that mean Uh by design it has",
    "start": "919440",
    "end": "921600"
  },
  {
    "text": "a a fairly narrow API surface and it",
    "start": "921600",
    "end": "924560"
  },
  {
    "text": "doesn't have any support for background",
    "start": "924560",
    "end": "926000"
  },
  {
    "text": "processing or custom uh",
    "start": "926000",
    "end": "929240"
  },
  {
    "text": "statistics So WASOM Wassom looks kind of",
    "start": "929240",
    "end": "932800"
  },
  {
    "text": "interesting Uh you can write in various",
    "start": "932800",
    "end": "934720"
  },
  {
    "text": "languages It seems to have fairly wide",
    "start": "934720",
    "end": "936560"
  },
  {
    "text": "API coverage Uh it has a mechanism to do",
    "start": "936560",
    "end": "939839"
  },
  {
    "text": "things outside the request cycle but",
    "start": "939839",
    "end": "942160"
  },
  {
    "text": "it's also clearly marked as experimental",
    "start": "942160",
    "end": "944800"
  },
  {
    "text": "The documentation's a bit confusing I've",
    "start": "944800",
    "end": "947120"
  },
  {
    "text": "heard in the past that uh performance",
    "start": "947120",
    "end": "948959"
  },
  {
    "text": "hasn't been so good Maybe it's better",
    "start": "948959",
    "end": "950959"
  },
  {
    "text": "now I I don't know Um so let's take a",
    "start": "950959",
    "end": "954560"
  },
  {
    "text": "look at Go Uh you can write filters",
    "start": "954560",
    "end": "956720"
  },
  {
    "text": "directly in Go but at least you know at",
    "start": "956720",
    "end": "959120"
  },
  {
    "text": "the um at the beginning of last year",
    "start": "959120",
    "end": "961279"
  },
  {
    "text": "experimental was quite new Um it was in",
    "start": "961279",
    "end": "964399"
  },
  {
    "text": "contrib and not in core Um and the API",
    "start": "964399",
    "end": "968160"
  },
  {
    "text": "like it doesn't support background",
    "start": "968160",
    "end": "969839"
  },
  {
    "text": "processing but you know we're like \"Oh",
    "start": "969839",
    "end": "972160"
  },
  {
    "text": "you can spin up Go routines and do",
    "start": "972160",
    "end": "973920"
  },
  {
    "text": "things outside of uh the request cycle.\"",
    "start": "973920",
    "end": "976560"
  },
  {
    "text": "So it has uh it has support for native",
    "start": "976560",
    "end": "978959"
  },
  {
    "text": "envoy uh statistics And we looked at the",
    "start": "978959",
    "end": "981920"
  },
  {
    "text": "code It looked like a fairly simple",
    "start": "981920",
    "end": "983600"
  },
  {
    "text": "implementation So it it's interesting",
    "start": "983600",
    "end": "985600"
  },
  {
    "text": "It's",
    "start": "985600",
    "end": "987000"
  },
  {
    "text": "interesting Uh but before we try and",
    "start": "987000",
    "end": "989759"
  },
  {
    "text": "evaluate which option we're actually",
    "start": "989759",
    "end": "991279"
  },
  {
    "text": "going to use let's look again at our",
    "start": "991279",
    "end": "992959"
  },
  {
    "text": "requirements So we need the API surface",
    "start": "992959",
    "end": "995440"
  },
  {
    "text": "to support background processing Um so",
    "start": "995440",
    "end": "998399"
  },
  {
    "text": "we can make we can batch up request",
    "start": "998399",
    "end": "1000160"
  },
  {
    "text": "counts and send them to the aggregators",
    "start": "1000160",
    "end": "1002399"
  },
  {
    "text": "Obviously we need to send requests to",
    "start": "1002399",
    "end": "1004160"
  },
  {
    "text": "the aggregators and we need support for",
    "start": "1004160",
    "end": "1006560"
  },
  {
    "text": "custom uh metrics so that we can be good",
    "start": "1006560",
    "end": "1009440"
  },
  {
    "text": "S sur citizens of course and from a DevX",
    "start": "1009440",
    "end": "1012639"
  },
  {
    "text": "perspective we'd really like a language",
    "start": "1012639",
    "end": "1014560"
  },
  {
    "text": "that we uh that we already use in our",
    "start": "1014560",
    "end": "1016720"
  },
  {
    "text": "org um that allows us to develop quickly",
    "start": "1016720",
    "end": "1019759"
  },
  {
    "text": "and clearly for production we need to",
    "start": "1019759",
    "end": "1022160"
  },
  {
    "text": "make sure it can",
    "start": "1022160",
    "end": "1024799"
  },
  {
    "text": "scale So okay now given our requirements",
    "start": "1025160",
    "end": "1028079"
  },
  {
    "text": "let's look at this list again Should we",
    "start": "1028079",
    "end": "1030160"
  },
  {
    "text": "use C++ We know it's going to work but",
    "start": "1030160",
    "end": "1033678"
  },
  {
    "text": "we're worried about spending too much",
    "start": "1033679",
    "end": "1035438"
  },
  {
    "text": "time using C++ and developing in C++",
    "start": "1035439",
    "end": "1038480"
  },
  {
    "text": "rather than trying to prove that our our",
    "start": "1038480",
    "end": "1040240"
  },
  {
    "text": "rate limiter actually works And let's",
    "start": "1040240",
    "end": "1042480"
  },
  {
    "text": "face it C++ is not common in our org We",
    "start": "1042480",
    "end": "1045600"
  },
  {
    "text": "do have some motivated individuals",
    "start": "1045600",
    "end": "1047360"
  },
  {
    "text": "however So we'll give this a",
    "start": "1047360",
    "end": "1049880"
  },
  {
    "text": "maybe Lua simple and easy yes but for",
    "start": "1049880",
    "end": "1053760"
  },
  {
    "text": "our use case it's too simple So it's",
    "start": "1053760",
    "end": "1055600"
  },
  {
    "text": "just not going to not going to cut it",
    "start": "1055600",
    "end": "1058559"
  },
  {
    "text": "uh wasome in the end there were just too",
    "start": "1058559",
    "end": "1061760"
  },
  {
    "text": "many red flags uh the fact that it was",
    "start": "1061760",
    "end": "1064080"
  },
  {
    "text": "experimental there were concerns about",
    "start": "1064080",
    "end": "1066240"
  },
  {
    "text": "performance um like seemingly high",
    "start": "1066240",
    "end": "1068799"
  },
  {
    "text": "complexity documentation's a little",
    "start": "1068799",
    "end": "1070480"
  },
  {
    "text": "weird uh maybe we didn't give it a fair",
    "start": "1070480",
    "end": "1072880"
  },
  {
    "text": "shake but in our case uh was it w it",
    "start": "1072880",
    "end": "1075600"
  },
  {
    "text": "just wasn't sparking joy for the team so",
    "start": "1075600",
    "end": "1078320"
  },
  {
    "text": "it gets a big X uh lastly should we",
    "start": "1078320",
    "end": "1081760"
  },
  {
    "text": "write it and go um it's experimental",
    "start": "1081760",
    "end": "1084559"
  },
  {
    "text": "it's in",
    "start": "1084559",
    "end": "1085480"
  },
  {
    "text": "contrib but it ticks many of our other",
    "start": "1085480",
    "end": "1088000"
  },
  {
    "text": "box is especially for initial",
    "start": "1088000",
    "end": "1089760"
  },
  {
    "text": "development velocity So we'll give this",
    "start": "1089760",
    "end": "1092080"
  },
  {
    "text": "a",
    "start": "1092080",
    "end": "1094240"
  },
  {
    "text": "maybe So now we're left with two very",
    "start": "1094600",
    "end": "1097280"
  },
  {
    "text": "different options On one hand we have",
    "start": "1097280",
    "end": "1099919"
  },
  {
    "text": "C++ It's the de facto choice for our use",
    "start": "1099919",
    "end": "1102400"
  },
  {
    "text": "case but we're not a C++ shop uh down in",
    "start": "1102400",
    "end": "1106240"
  },
  {
    "text": "the basement where we develop our",
    "start": "1106240",
    "end": "1107880"
  },
  {
    "text": "infrastructure Uh on the other hand we",
    "start": "1107880",
    "end": "1109919"
  },
  {
    "text": "have Go Um it's a language that we",
    "start": "1109919",
    "end": "1112559"
  },
  {
    "text": "actively use in our in our org to extend",
    "start": "1112559",
    "end": "1114960"
  },
  {
    "text": "parts of our infrastructure many many of",
    "start": "1114960",
    "end": "1117120"
  },
  {
    "text": "our employees uh like use go and they",
    "start": "1117120",
    "end": "1119760"
  },
  {
    "text": "love it Um so by this point it had kind",
    "start": "1119760",
    "end": "1122799"
  },
  {
    "text": "of become clear to us that we couldn't",
    "start": "1122799",
    "end": "1124400"
  },
  {
    "text": "make one decision that would cover both",
    "start": "1124400",
    "end": "1126799"
  },
  {
    "text": "development and",
    "start": "1126799",
    "end": "1129760"
  },
  {
    "text": "production So in the end we chose go um",
    "start": "1129880",
    "end": "1133760"
  },
  {
    "text": "we chose it for developer experience",
    "start": "1133760",
    "end": "1136080"
  },
  {
    "text": "qualities which would lead us to an MVP",
    "start": "1136080",
    "end": "1138080"
  },
  {
    "text": "much more quickly But we made this",
    "start": "1138080",
    "end": "1140320"
  },
  {
    "text": "decision with a couple big asterisks Uh",
    "start": "1140320",
    "end": "1143200"
  },
  {
    "text": "one the filter lacked maturity",
    "start": "1143200",
    "end": "1145840"
  },
  {
    "text": "um and it was only in contrib so we",
    "start": "1145840",
    "end": "1148000"
  },
  {
    "text": "weren't really sure about the level of",
    "start": "1148000",
    "end": "1149520"
  },
  {
    "text": "community support and we weren't really",
    "start": "1149520",
    "end": "1152400"
  },
  {
    "text": "sure what our development and",
    "start": "1152400",
    "end": "1153919"
  },
  {
    "text": "operational experience would uncover So",
    "start": "1153919",
    "end": "1156480"
  },
  {
    "text": "I'm going to hand it over to Pete who's",
    "start": "1156480",
    "end": "1158400"
  },
  {
    "text": "going to tell us how did it actually go",
    "start": "1158400",
    "end": "1161919"
  },
  {
    "text": "Sorry for the pun So uh the truth is it",
    "start": "1161919",
    "end": "1165200"
  },
  {
    "text": "started off very badly Um most",
    "start": "1165200",
    "end": "1167360"
  },
  {
    "text": "developers at Spotify develop on",
    "start": "1167360",
    "end": "1169039"
  },
  {
    "text": "MacBooks and as I'm sure everyone knows",
    "start": "1169039",
    "end": "1171280"
  },
  {
    "text": "MacBooks have moved to ARM processes uh",
    "start": "1171280",
    "end": "1173440"
  },
  {
    "text": "in recent years We do have an our own",
    "start": "1173440",
    "end": "1176640"
  },
  {
    "text": "internal build of Envoy which we apply",
    "start": "1176640",
    "end": "1178960"
  },
  {
    "text": "some uh patches to for internal use but",
    "start": "1178960",
    "end": "1181440"
  },
  {
    "text": "um our production servers and our build",
    "start": "1181440",
    "end": "1183039"
  },
  {
    "text": "servers are all you know x8464 machines",
    "start": "1183039",
    "end": "1186000"
  },
  {
    "text": "and it turns out it's extremely hard to",
    "start": "1186000",
    "end": "1187760"
  },
  {
    "text": "cross-co compile the uh go contribs",
    "start": "1187760",
    "end": "1192320"
  },
  {
    "text": "uh for OSX on um an",
    "start": "1192320",
    "end": "1195960"
  },
  {
    "text": "x8464 build pipeline It's something to",
    "start": "1195960",
    "end": "1198240"
  },
  {
    "text": "do with these CPU flags Um what we ended",
    "start": "1198240",
    "end": "1201039"
  },
  {
    "text": "up uh sorry compiler flags What we ended",
    "start": "1201039",
    "end": "1203600"
  },
  {
    "text": "up doing was just building Envoy locally",
    "start": "1203600",
    "end": "1205200"
  },
  {
    "text": "on our uh machines which thankfully is",
    "start": "1205200",
    "end": "1207039"
  },
  {
    "text": "pretty quick on an on an M1 or MX uh Mac",
    "start": "1207039",
    "end": "1210799"
  },
  {
    "text": "This was very frustrating and difficult",
    "start": "1210799",
    "end": "1213039"
  },
  {
    "text": "to work out Obviously once you know how",
    "start": "1213039",
    "end": "1214720"
  },
  {
    "text": "it's very easy but like getting past",
    "start": "1214720",
    "end": "1216160"
  },
  {
    "text": "that was actually quite annoying So once",
    "start": "1216160",
    "end": "1218160"
  },
  {
    "text": "we had done that we decided to do some",
    "start": "1218160",
    "end": "1219840"
  },
  {
    "text": "benchmarking of simply the overhead of",
    "start": "1219840",
    "end": "1221919"
  },
  {
    "text": "calling a filter written in Go versus a",
    "start": "1221919",
    "end": "1224000"
  },
  {
    "text": "filter written in C++ Now I know this",
    "start": "1224000",
    "end": "1226000"
  },
  {
    "text": "graph is not very clear You'll see there",
    "start": "1226000",
    "end": "1227919"
  },
  {
    "text": "are two two lines that are very very",
    "start": "1227919",
    "end": "1229840"
  },
  {
    "text": "close together And what this benchmark",
    "start": "1229840",
    "end": "1231840"
  },
  {
    "text": "actually showed was calling a Go filter",
    "start": "1231840",
    "end": "1233600"
  },
  {
    "text": "is faster than calling a C++ filter Now",
    "start": "1233600",
    "end": "1235840"
  },
  {
    "text": "clearly that cannot possibly be true The",
    "start": "1235840",
    "end": "1237760"
  },
  {
    "text": "benchmark has some limitations But what",
    "start": "1237760",
    "end": "1239679"
  },
  {
    "text": "it shows really is that the difference",
    "start": "1239679",
    "end": "1240880"
  },
  {
    "text": "is immaterial right But out of the box",
    "start": "1240880",
    "end": "1243520"
  },
  {
    "text": "there is no particular like uh um",
    "start": "1243520",
    "end": "1246240"
  },
  {
    "text": "performance hit for calling the the Go",
    "start": "1246240",
    "end": "1248080"
  },
  {
    "text": "filter Obviously that will change when",
    "start": "1248080",
    "end": "1249520"
  },
  {
    "text": "you put more code instead and we'll see",
    "start": "1249520",
    "end": "1250880"
  },
  {
    "text": "some better benchmarks",
    "start": "1250880",
    "end": "1253000"
  },
  {
    "text": "later The the first trouble we ran into",
    "start": "1253000",
    "end": "1255760"
  },
  {
    "text": "while uh writing the actual code was the",
    "start": "1255760",
    "end": "1258080"
  },
  {
    "text": "support for metrics metrics are",
    "start": "1258080",
    "end": "1259760"
  },
  {
    "text": "supported However tagging them is not",
    "start": "1259760",
    "end": "1262480"
  },
  {
    "text": "supported So we ended up with some like",
    "start": "1262480",
    "end": "1263840"
  },
  {
    "text": "Frankenstein metrics with names like",
    "start": "1263840",
    "end": "1265520"
  },
  {
    "text": "this Now thankfully the uh most of the",
    "start": "1265520",
    "end": "1268640"
  },
  {
    "text": "metrics we want to provide to our",
    "start": "1268640",
    "end": "1269840"
  },
  {
    "text": "customers internally we can generate",
    "start": "1269840",
    "end": "1271600"
  },
  {
    "text": "from our aggregators where we have as",
    "start": "1271600",
    "end": "1273600"
  },
  {
    "text": "much metric support as we like Um but",
    "start": "1273600",
    "end": "1276799"
  },
  {
    "text": "this was sorely missed and um you know",
    "start": "1276799",
    "end": "1278640"
  },
  {
    "text": "there is we would rather not have to",
    "start": "1278640",
    "end": "1280400"
  },
  {
    "text": "make metrics like that But perhaps the",
    "start": "1280400",
    "end": "1283280"
  },
  {
    "text": "biggest issue was the lack of a sort of",
    "start": "1283280",
    "end": "1285840"
  },
  {
    "text": "direct uh API to call uh listeners or",
    "start": "1285840",
    "end": "1289039"
  },
  {
    "text": "clusters in in uh envoy So as I said",
    "start": "1289039",
    "end": "1292720"
  },
  {
    "text": "time cop is essentially rqs but uses",
    "start": "1292720",
    "end": "1296000"
  },
  {
    "text": "unary gpc with mag lev and mag lev is",
    "start": "1296000",
    "end": "1299200"
  },
  {
    "text": "supported by envoy out of the box So um",
    "start": "1299200",
    "end": "1302880"
  },
  {
    "text": "what we wanted to do was just like call",
    "start": "1302880",
    "end": "1304640"
  },
  {
    "text": "via envoy to our aggregators and all the",
    "start": "1304640",
    "end": "1307280"
  },
  {
    "text": "the sharding would happen like that",
    "start": "1307280",
    "end": "1309280"
  },
  {
    "text": "Unfortunately since there's no way to do",
    "start": "1309280",
    "end": "1310960"
  },
  {
    "text": "that directly from go code what we had",
    "start": "1310960",
    "end": "1312880"
  },
  {
    "text": "to do was expose a Unix domain socket on",
    "start": "1312880",
    "end": "1315520"
  },
  {
    "text": "our our pods have the filter connect via",
    "start": "1315520",
    "end": "1318000"
  },
  {
    "text": "the Unix domain socket and then pipe it",
    "start": "1318000",
    "end": "1320159"
  },
  {
    "text": "through envoy I mean of course we could",
    "start": "1320159",
    "end": "1322240"
  },
  {
    "text": "have like done that in the go code but",
    "start": "1322240",
    "end": "1323919"
  },
  {
    "text": "that's really doesn't make any sense",
    "start": "1323919",
    "end": "1325520"
  },
  {
    "text": "when you you have you're inside envoy",
    "start": "1325520",
    "end": "1327440"
  },
  {
    "text": "itself So this was like another sorely",
    "start": "1327440",
    "end": "1329440"
  },
  {
    "text": "missed feature So how did it actually",
    "start": "1329440",
    "end": "1332799"
  },
  {
    "text": "work out once we had built everything Uh",
    "start": "1332799",
    "end": "1334559"
  },
  {
    "text": "these are two benchmarks of uh our",
    "start": "1334559",
    "end": "1336960"
  },
  {
    "text": "vanilla envoice So our internal build",
    "start": "1336960",
    "end": "1339039"
  },
  {
    "text": "that does no rate limiting of any kinds",
    "start": "1339039",
    "end": "1341120"
  },
  {
    "text": "no time cop no other filter And uh the",
    "start": "1341120",
    "end": "1344960"
  },
  {
    "text": "the same build but with our time cop",
    "start": "1344960",
    "end": "1346480"
  },
  {
    "text": "filter turned on And you'll see that uh",
    "start": "1346480",
    "end": "1348480"
  },
  {
    "text": "we pushed our our P50 latency up by 3",
    "start": "1348480",
    "end": "1351039"
  },
  {
    "text": "milliseconds and our P99 uh latency went",
    "start": "1351039",
    "end": "1354000"
  },
  {
    "text": "up by a slightly disappointing 11",
    "start": "1354000",
    "end": "1356320"
  },
  {
    "text": "milliseconds Now while that isn't uh",
    "start": "1356320",
    "end": "1359440"
  },
  {
    "text": "fantastic and maybe we can improve that",
    "start": "1359440",
    "end": "1361600"
  },
  {
    "text": "with some you further work further",
    "start": "1361600",
    "end": "1363080"
  },
  {
    "text": "optimization what it's worth uh worth",
    "start": "1363080",
    "end": "1366000"
  },
  {
    "text": "realizing is that when we did run the",
    "start": "1366000",
    "end": "1367760"
  },
  {
    "text": "global uh rate limiting service we had a",
    "start": "1367760",
    "end": "1370159"
  },
  {
    "text": "per request timeout of 8 milliseconds",
    "start": "1370159",
    "end": "1373840"
  },
  {
    "text": "Now obviously that that was not hit you",
    "start": "1373840",
    "end": "1375919"
  },
  {
    "text": "know very often If the rate limit",
    "start": "1375919",
    "end": "1378159"
  },
  {
    "text": "cluster uh went down though it would be",
    "start": "1378159",
    "end": "1379919"
  },
  {
    "text": "hit for every single request So there",
    "start": "1379919",
    "end": "1381760"
  },
  {
    "text": "were points where while running that we",
    "start": "1381760",
    "end": "1383440"
  },
  {
    "text": "were doing plus 8 milliseconds on every",
    "start": "1383440",
    "end": "1385360"
  },
  {
    "text": "single request So in in comparison there",
    "start": "1385360",
    "end": "1388400"
  },
  {
    "text": "not not too shabby Fundamentally though",
    "start": "1388400",
    "end": "1391120"
  },
  {
    "text": "we did ship it This did go to production",
    "start": "1391120",
    "end": "1393120"
  },
  {
    "text": "for some uh test uh services not test",
    "start": "1393120",
    "end": "1396000"
  },
  {
    "text": "services It was being tested by some",
    "start": "1396000",
    "end": "1398080"
  },
  {
    "text": "production services It did work and it",
    "start": "1398080",
    "end": "1400240"
  },
  {
    "text": "did block traffic So this is the end of",
    "start": "1400240",
    "end": "1402799"
  },
  {
    "text": "our story This is the end Thank you Pete",
    "start": "1402799",
    "end": "1405120"
  },
  {
    "text": "Uh so thanks everyone That's all We",
    "start": "1405120",
    "end": "1407200"
  },
  {
    "text": "wrote time cop and go We have it in",
    "start": "1407200",
    "end": "1409039"
  },
  {
    "text": "production Mission",
    "start": "1409039",
    "end": "1411400"
  },
  {
    "text": "accomplished Although not quite yet Not",
    "start": "1411400",
    "end": "1414640"
  },
  {
    "text": "quite yet not so fast So we've shown",
    "start": "1414640",
    "end": "1417760"
  },
  {
    "text": "that the whole time cop system works end",
    "start": "1417760",
    "end": "1420000"
  },
  {
    "text": "to end but we reconsidered our decision",
    "start": "1420000",
    "end": "1422799"
  },
  {
    "text": "to use the go uh to use go for the envoy",
    "start": "1422799",
    "end": "1425600"
  },
  {
    "text": "filter So we we reframed the decision um",
    "start": "1425600",
    "end": "1428720"
  },
  {
    "text": "as to what would be acceptable for",
    "start": "1428720",
    "end": "1430640"
  },
  {
    "text": "production and there were some downsides",
    "start": "1430640",
    "end": "1432240"
  },
  {
    "text": "that we just couldn't ignore So number",
    "start": "1432240",
    "end": "1434640"
  },
  {
    "text": "one using the Golang filter introduced",
    "start": "1434640",
    "end": "1437200"
  },
  {
    "text": "an additional language and technology",
    "start": "1437200",
    "end": "1439039"
  },
  {
    "text": "into our data plane which made us a bit",
    "start": "1439039",
    "end": "1441280"
  },
  {
    "text": "nervous Uh it turned out that the API",
    "start": "1441280",
    "end": "1443919"
  },
  {
    "text": "surface exposed by the Golang filter",
    "start": "1443919",
    "end": "1446159"
  },
  {
    "text": "just it wasn't quite sufficient for our",
    "start": "1446159",
    "end": "1447840"
  },
  {
    "text": "use case and caused uh some significant",
    "start": "1447840",
    "end": "1449919"
  },
  {
    "text": "technical debt that we'd prefer not to",
    "start": "1449919",
    "end": "1451600"
  },
  {
    "text": "carry and the Golang extension wasn't",
    "start": "1451600",
    "end": "1454480"
  },
  {
    "text": "mature to the point of just working So",
    "start": "1454480",
    "end": "1456960"
  },
  {
    "text": "we decided to double down and uh uh and",
    "start": "1456960",
    "end": "1460080"
  },
  {
    "text": "rewrite time cop in",
    "start": "1460080",
    "end": "1463360"
  },
  {
    "text": "C++ And of course as we expected porting",
    "start": "1463559",
    "end": "1466960"
  },
  {
    "text": "time top time cop to C++ wasn't without",
    "start": "1466960",
    "end": "1469760"
  },
  {
    "text": "its own issues Uh at this point in time",
    "start": "1469760",
    "end": "1472480"
  },
  {
    "text": "we've almost completely ported the",
    "start": "1472480",
    "end": "1474400"
  },
  {
    "text": "filter from Golang to C++ And the team",
    "start": "1474400",
    "end": "1476640"
  },
  {
    "text": "has experienced a bunch of new language",
    "start": "1476640",
    "end": "1479520"
  },
  {
    "text": "uh like new skill set problems like how",
    "start": "1479520",
    "end": "1481919"
  },
  {
    "text": "to set up your IDE adding support to the",
    "start": "1481919",
    "end": "1484960"
  },
  {
    "text": "to the build pipeline debugging testing",
    "start": "1484960",
    "end": "1488000"
  },
  {
    "text": "various language issues like coding",
    "start": "1488000",
    "end": "1489679"
  },
  {
    "text": "styles and uh uh compiler problems I",
    "start": "1489679",
    "end": "1492880"
  },
  {
    "text": "think it's fair to say the velocity",
    "start": "1492880",
    "end": "1494400"
  },
  {
    "text": "developing in Go was faster but we think",
    "start": "1494400",
    "end": "1496880"
  },
  {
    "text": "that the end result in C++ will result",
    "start": "1496880",
    "end": "1499520"
  },
  {
    "text": "in a more sustainable uh end",
    "start": "1499520",
    "end": "1503240"
  },
  {
    "text": "goal So okay now we're actually at the",
    "start": "1503240",
    "end": "1506400"
  },
  {
    "text": "end of our story Uh but I want you all",
    "start": "1506400",
    "end": "1508480"
  },
  {
    "text": "to take away two main points Number one",
    "start": "1508480",
    "end": "1511200"
  },
  {
    "text": "rate limiting at scale is hard and none",
    "start": "1511200",
    "end": "1513520"
  },
  {
    "text": "of the available options may work for",
    "start": "1513520",
    "end": "1515279"
  },
  {
    "text": "you And number two writing complex envoy",
    "start": "1515279",
    "end": "1518400"
  },
  {
    "text": "filters is also hard and you'll have to",
    "start": "1518400",
    "end": "1520720"
  },
  {
    "text": "do it in C++ because no other options",
    "start": "1520720",
    "end": "1523360"
  },
  {
    "text": "are mature enough And one request to the",
    "start": "1523360",
    "end": "1526400"
  },
  {
    "text": "community can we please have a stable",
    "start": "1526400",
    "end": "1528880"
  },
  {
    "text": "mature option for developing filters",
    "start": "1528880",
    "end": "1530640"
  },
  {
    "text": "that's not in",
    "start": "1530640",
    "end": "1532120"
  },
  {
    "text": "C++ and I see one of the lightning talks",
    "start": "1532120",
    "end": "1534799"
  },
  {
    "text": "later might address some of that So um",
    "start": "1534799",
    "end": "1537360"
  },
  {
    "text": "but with that um thank you all for",
    "start": "1537360",
    "end": "1540000"
  },
  {
    "text": "staying awake to listen to us and you",
    "start": "1540000",
    "end": "1542240"
  },
  {
    "text": "can see that in our request to write uh",
    "start": "1542240",
    "end": "1544720"
  },
  {
    "text": "a rate limiter we wound up in quite a",
    "start": "1544720",
    "end": "1546960"
  },
  {
    "text": "different place than we had expected and",
    "start": "1546960",
    "end": "1549200"
  },
  {
    "text": "indeed it was an adventure",
    "start": "1549200",
    "end": "1551960"
  },
  {
    "text": "So with that we're happy to take any",
    "start": "1551960",
    "end": "1554640"
  },
  {
    "text": "questions now afterwards",
    "start": "1554640",
    "end": "1558520"
  },
  {
    "text": "[Applause]",
    "start": "1561470",
    "end": "1564640"
  },
  {
    "text": "Uh we've got time for one question I",
    "start": "1564880",
    "end": "1566720"
  },
  {
    "text": "think And yeah do we have content for",
    "start": "1566720",
    "end": "1568159"
  },
  {
    "text": "you coming up at 12:15 I think The new",
    "start": "1568159",
    "end": "1571360"
  },
  {
    "text": "dynamic module stuff Okay you're closest",
    "start": "1571360",
    "end": "1576120"
  },
  {
    "text": "Good day Nice talk Uh could you explain",
    "start": "1577440",
    "end": "1579440"
  },
  {
    "text": "how you're resilient to the aggregator",
    "start": "1579440",
    "end": "1581600"
  },
  {
    "text": "um failing You mentioned the data with",
    "start": "1581600",
    "end": "1583279"
  },
  {
    "text": "PubSub but how are you resilient in",
    "start": "1583279",
    "end": "1584880"
  },
  {
    "text": "terms of the envoy connecting to the",
    "start": "1584880",
    "end": "1586320"
  },
  {
    "text": "aggregators",
    "start": "1586320",
    "end": "1589320"
  },
  {
    "text": "Um yeah So I mean we the envoy is",
    "start": "1590000",
    "end": "1593120"
  },
  {
    "text": "obviously just using it standards um",
    "start": "1593120",
    "end": "1596000"
  },
  {
    "text": "cluster uh mechanisms So the the the",
    "start": "1596000",
    "end": "1599360"
  },
  {
    "text": "transport is gc it the aggregators are",
    "start": "1599360",
    "end": "1602000"
  },
  {
    "text": "registered as a gc uh cluster they have",
    "start": "1602000",
    "end": "1604480"
  },
  {
    "text": "active health checking So if uh you know",
    "start": "1604480",
    "end": "1607120"
  },
  {
    "text": "one a pod gets killed or we're",
    "start": "1607120",
    "end": "1608559"
  },
  {
    "text": "redeploying on something uh it does a",
    "start": "1608559",
    "end": "1610159"
  },
  {
    "text": "graceful shutdown drains moves on and",
    "start": "1610159",
    "end": "1612960"
  },
  {
    "text": "again like we're not super worried about",
    "start": "1612960",
    "end": "1614720"
  },
  {
    "text": "the data inside the aggregator we're",
    "start": "1614720",
    "end": "1616480"
  },
  {
    "text": "happy we're happy to lose it So um yeah",
    "start": "1616480",
    "end": "1619039"
  },
  {
    "text": "it's just standard envoy custom",
    "start": "1619039",
    "end": "1620559"
  },
  {
    "text": "management stuff",
    "start": "1620559",
    "end": "1623520"
  },
  {
    "text": "Cool We are up on time I assume these",
    "start": "1623520",
    "end": "1625200"
  },
  {
    "text": "folks will be around yet There is a",
    "start": "1625200",
    "end": "1626400"
  },
  {
    "text": "coffee break Uh now it's outside for 30",
    "start": "1626400",
    "end": "1628640"
  },
  {
    "text": "minutes If anybody could be back at",
    "start": "1628640",
    "end": "1630400"
  },
  {
    "text": "10:40 we've got some folks from Google",
    "start": "1630400",
    "end": "1632159"
  },
  {
    "text": "talking about LMS",
    "start": "1632159",
    "end": "1634320"
  },
  {
    "text": "Tongs",
    "start": "1634320",
    "end": "1636880"
  }
]