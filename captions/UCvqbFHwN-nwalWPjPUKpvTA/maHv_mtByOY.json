[
  {
    "start": "0",
    "end": "120000"
  },
  {
    "text": "okay all right thank you very much hi everybody thanks for coming today",
    "start": "30",
    "end": "5580"
  },
  {
    "text": "we're going to talk about how to scale your your cluster",
    "start": "5580",
    "end": "10790"
  },
  {
    "text": "so first I'm Patrick Chan assume I'm a cloud advocate at Microsoft and",
    "start": "10790",
    "end": "16730"
  },
  {
    "text": "initially we were supposed to do a geo with my colleague Scott Colton who is a",
    "start": "16730",
    "end": "25109"
  },
  {
    "text": "cloud advocate at Microsoft as well but he's based in Australia there are some fires around Sydney so he had to stay",
    "start": "25109",
    "end": "31470"
  },
  {
    "text": "home so he won't be there well show you his code and his demo all",
    "start": "31470",
    "end": "38309"
  },
  {
    "text": "right so we're going to talk about several aspect of scaling one is the",
    "start": "38309",
    "end": "44550"
  },
  {
    "text": "horizontal part of the scalar then we'll talk about how to scale compute in your cluster in general and then we'll talk",
    "start": "44550",
    "end": "52230"
  },
  {
    "text": "about scaling to zero which is super useful when you want to do serverless",
    "start": "52230",
    "end": "57300"
  },
  {
    "text": "types in i/o on top of kubernetes and then I'll show you a demo that wraps it",
    "start": "57300",
    "end": "62640"
  },
  {
    "text": "all up together so first the horizontal part of the",
    "start": "62640",
    "end": "68040"
  },
  {
    "text": "autoscaler kubernetes is an Orchestrator for containers when you when you launch",
    "start": "68040",
    "end": "74820"
  },
  {
    "text": "containers you want sometimes to scale your app in an automatic way and the",
    "start": "74820",
    "end": "81119"
  },
  {
    "text": "horizontal path autoscaler is there for you it helps you automatically scale the number of pods",
    "start": "81119",
    "end": "88320"
  },
  {
    "text": "in a replication controller or replicas set based on looking at CPU utilization",
    "start": "88320",
    "end": "94890"
  },
  {
    "text": "or different metrics out there so it's a",
    "start": "94890",
    "end": "99930"
  },
  {
    "text": "component of kubernetes it's looking at that metric server and based on the metrics that are coming",
    "start": "99930",
    "end": "107369"
  },
  {
    "text": "back and depending on how you program it you can do it will manage your",
    "start": "107369",
    "end": "113369"
  },
  {
    "text": "deployment and scale the pods automatically okay so that's the",
    "start": "113369",
    "end": "121020"
  },
  {
    "start": "120000",
    "end": "160000"
  },
  {
    "text": "horizontal part of the scaler now what happens when when you schedule some pods",
    "start": "121020",
    "end": "126479"
  },
  {
    "text": "on your cluster and and the pods there's no more computer resources if",
    "start": "126479",
    "end": "133070"
  },
  {
    "text": "you are in the cloud there are several several ways of doing",
    "start": "133070",
    "end": "138680"
  },
  {
    "text": "that there are two options one of them is through virtual machines adding some",
    "start": "138680",
    "end": "143780"
  },
  {
    "text": "compute nodes to your kubernetes cluster and if you are in the cloud you don't need to go roll a new physical server",
    "start": "143780",
    "end": "151700"
  },
  {
    "text": "and plug it and install all that stuff and then add it to the cluster you can",
    "start": "151700",
    "end": "156830"
  },
  {
    "text": "provision VMs in a pretty automated way the other option that's getting more and",
    "start": "156830",
    "end": "163970"
  },
  {
    "start": "160000",
    "end": "398000"
  },
  {
    "text": "more popular is called the virtual couplet in kubernetes the component that",
    "start": "163970",
    "end": "168980"
  },
  {
    "text": "is scheduling your containers is typically is called the couplet and that's that's a piece of software that's",
    "start": "168980",
    "end": "176630"
  },
  {
    "text": "running on the physical node and that's leveraging some primitives from the operating system in order to create",
    "start": "176630",
    "end": "183610"
  },
  {
    "text": "containers or these isolate isolated units of compute so typically it's doing",
    "start": "183610",
    "end": "190910"
  },
  {
    "text": "that using primitives from the Linux kernel Hey good to see you Ben Bangor is here so",
    "start": "190910",
    "end": "198980"
  },
  {
    "text": "primitives from the Linux kernel or from the Windows kernel sometimes you can use things like like a VMware isolation",
    "start": "198980",
    "end": "206930"
  },
  {
    "text": "primitives to create these these containers what the virtual couplet is",
    "start": "206930",
    "end": "212000"
  },
  {
    "text": "is an implementation of the couplet that responds to the same to the same API but",
    "start": "212000",
    "end": "220220"
  },
  {
    "text": "creates virtual machines in different cloud providers or leverages the cloud",
    "start": "220220",
    "end": "227690"
  },
  {
    "text": "providers api's to create these units of compute so to scale your compute with",
    "start": "227690",
    "end": "234500"
  },
  {
    "text": "virtual machine this is for many cloud providers there are some implementations",
    "start": "234500",
    "end": "241450"
  },
  {
    "text": "of what is called the cluster autoscaler when you schedule your pod if there's no",
    "start": "241450",
    "end": "248840"
  },
  {
    "text": "more capacity you can configure the cluster autoscaler to automatically go",
    "start": "248840",
    "end": "253910"
  },
  {
    "text": "add some new nodes to your cluster for example they like media sure",
    "start": "253910",
    "end": "259389"
  },
  {
    "text": "implementation and then once the the node has been added to the cluster",
    "start": "259389",
    "end": "266430"
  },
  {
    "text": "automatically the pods can be scheduled on that node so that's a pretty simple",
    "start": "266430",
    "end": "272020"
  },
  {
    "text": "way of doing that it's a there's a high level of granularity where there were",
    "start": "272020",
    "end": "278250"
  },
  {
    "text": "you provisioned a whole new machine potentially for just one more container",
    "start": "278250",
    "end": "283419"
  },
  {
    "text": "that's coming in and so the the other option of using the virtual Kubla gives",
    "start": "283419",
    "end": "290530"
  },
  {
    "text": "you more granularity there so most clouds allow you to scale the",
    "start": "290530",
    "end": "296860"
  },
  {
    "text": "machines up when there's some load or scales machine back down to a specific",
    "start": "296860",
    "end": "302349"
  },
  {
    "text": "number now let's talk about the the virtual couplet there it really removed",
    "start": "302349",
    "end": "308139"
  },
  {
    "text": "the dependency on servers for worker nodes when when kubernetes was designed",
    "start": "308139",
    "end": "313419"
  },
  {
    "text": "it was really designed to create containers based on the docker run time",
    "start": "313419",
    "end": "320259"
  },
  {
    "text": "that was leveraging Linux primitives to isolate the processes then the windows",
    "start": "320259",
    "end": "327880"
  },
  {
    "text": "runtime was was was a Windows support was added in darker and so kubernetes is",
    "start": "327880",
    "end": "333820"
  },
  {
    "text": "still using that to schedule - schedule containers on Windows nodes with a",
    "start": "333820",
    "end": "341620"
  },
  {
    "text": "virtual couplet you just get rid of the dependency on server nodes and you're",
    "start": "341620",
    "end": "347469"
  },
  {
    "text": "just leveraging your cloud providers api's to provision virtual machines that",
    "start": "347469",
    "end": "356560"
  },
  {
    "text": "correspond to one container and so it's it's it allows for it's very good for",
    "start": "356560",
    "end": "362020"
  },
  {
    "text": "scenarios where you have burstable workloads for example when you have workloads that depend on the length of",
    "start": "362020",
    "end": "367389"
  },
  {
    "text": "the queue you can leverage your cloud providers capacity there instead of",
    "start": "367389",
    "end": "372759"
  },
  {
    "text": "having to do capacity planning for the number of nodes that you would need there so the way the virtual couplet",
    "start": "372759",
    "end": "379509"
  },
  {
    "text": "works is it's like the couplet but it's leveraging API there are specific to",
    "start": "379509",
    "end": "384849"
  },
  {
    "text": "which twitch cloud provider in order to schedule your your workloads",
    "start": "384849",
    "end": "391530"
  },
  {
    "text": "and so when and so when when you add the",
    "start": "391530",
    "end": "399220"
  },
  {
    "start": "398000",
    "end": "485000"
  },
  {
    "text": "virtual couplet to your to your cluster you'll be able to specify that you want",
    "start": "399220",
    "end": "404260"
  },
  {
    "text": "to use that type of that type of node or that type of a container for for the",
    "start": "404260",
    "end": "411760"
  },
  {
    "text": "container that you schedule and so the implementation that I'll show you here is based on ECI as your container",
    "start": "411760",
    "end": "419500"
  },
  {
    "text": "instance which is the technology on Azure and that's what that looks like",
    "start": "419500",
    "end": "425370"
  },
  {
    "text": "where you can really burst and create all these all these VMs automatically",
    "start": "425370",
    "end": "430900"
  },
  {
    "text": "and there will be one pod per VM they",
    "start": "430900",
    "end": "436870"
  },
  {
    "text": "are virtual cubelet is an open source project there are many other implementations for Alibaba AWS and",
    "start": "436870",
    "end": "445990"
  },
  {
    "text": "others and it supports Linux containers",
    "start": "445990",
    "end": "451150"
  },
  {
    "text": "Windows containers and nodes with GPUs so you specify that in the characteristics of your deployment for",
    "start": "451150",
    "end": "458920"
  },
  {
    "text": "your for your pod so in order to deploy",
    "start": "458920",
    "end": "465010"
  },
  {
    "text": "an application to the virtual cubelet once you have one here once you have configured your cluster to implement the",
    "start": "465010",
    "end": "473770"
  },
  {
    "text": "virtual couplet and configure the virtual Kubla to be able to to leverage that it looks something like that with a",
    "start": "473770",
    "end": "480040"
  },
  {
    "text": "node selector when you specify the US and the type will be virtual cubelet and",
    "start": "480040",
    "end": "486040"
  },
  {
    "start": "485000",
    "end": "532000"
  },
  {
    "text": "then you can add some toleration x' and the toleration here is that here",
    "start": "486040",
    "end": "492640"
  },
  {
    "text": "when i'm scheduling my my pod I want to make sure [Music]",
    "start": "492640",
    "end": "498770"
  },
  {
    "text": "Ezard come / a CI provider for the virtual couplet is already is",
    "start": "498770",
    "end": "505129"
  },
  {
    "text": "provisioned on the cluster so you can specify these with durations now scaling",
    "start": "505129",
    "end": "511789"
  },
  {
    "text": "to zero this there's a project by Microsoft that's an open source project",
    "start": "511789",
    "end": "517250"
  },
  {
    "text": "and there are a lot of other people participating in it that's called kada the kubernetes even driven auto scale",
    "start": "517250",
    "end": "523969"
  },
  {
    "text": "auto scaling and so kada is an open source project that you can run in your",
    "start": "523969",
    "end": "530540"
  },
  {
    "text": "kubernetes cluster it can run in the cloud or at the edge and it integrates",
    "start": "530540",
    "end": "537050"
  },
  {
    "start": "532000",
    "end": "606000"
  },
  {
    "text": "it's one of these solutions that helps you build your own server less implementation on your own on top of",
    "start": "537050",
    "end": "544760"
  },
  {
    "text": "kubernetes so there are lots of projects up there doing that one of the characteristics of Kedah",
    "start": "544760",
    "end": "551000"
  },
  {
    "text": "is that it is very I'd say kubernetes centric where it's leveraging what",
    "start": "551000",
    "end": "557510"
  },
  {
    "text": "kubernetes has for example the horizontal pod autoscaler and there is no external dependencies like a specific",
    "start": "557510",
    "end": "564440"
  },
  {
    "text": "service mesh or things like that in order to use kata-kata 100 was announced",
    "start": "564440",
    "end": "571490"
  },
  {
    "text": "yesterday so you can go see the blog post what it means that it's ready for production so you can start kicking the",
    "start": "571490",
    "end": "579920"
  },
  {
    "text": "tires with it and see how it works so how Kara works so kada performs two",
    "start": "579920",
    "end": "587480"
  },
  {
    "text": "roles in kubernetes first it's an agent to activate and deactivate a deployment",
    "start": "587480",
    "end": "594440"
  },
  {
    "text": "scale it from from off to 0 when there are no events so Kara really allows you",
    "start": "594440",
    "end": "602360"
  },
  {
    "text": "to implement these surveillance architectures where you have a compute that is triggered by events and that can",
    "start": "602360",
    "end": "611209"
  },
  {
    "start": "606000",
    "end": "652000"
  },
  {
    "text": "scale up automatically based on the number of events in a queue or scale",
    "start": "611209",
    "end": "616519"
  },
  {
    "text": "down to 0 which is very good from a cost perspective so Kara is the component",
    "start": "616519",
    "end": "623870"
  },
  {
    "text": "that is activating and deactivating your deployment based on what's in that queue",
    "start": "623870",
    "end": "629320"
  },
  {
    "text": "and then the second as that kaida acts as a metric server for",
    "start": "629320",
    "end": "635300"
  },
  {
    "text": "kubernetes so it exposes some of these events data that you can use to make",
    "start": "635300",
    "end": "640910"
  },
  {
    "text": "decisions about whether you want to to",
    "start": "640910",
    "end": "646460"
  },
  {
    "text": "schedule more containers things like queue length or stream lag and then",
    "start": "646460",
    "end": "652310"
  },
  {
    "start": "652000",
    "end": "719000"
  },
  {
    "text": "you'll be able to decide based on that and that is driving the autoscaler to",
    "start": "652310",
    "end": "658790"
  },
  {
    "text": "scale up and down your your deployments so it's Kida is leveraging the horrid",
    "start": "658790",
    "end": "665990"
  },
  {
    "text": "own horizontal but autoscaler behind the scenes that's I would say one of the big",
    "start": "665990",
    "end": "671420"
  },
  {
    "text": "difference with other server last type of projects who are implementing their own for this this is using the native",
    "start": "671420",
    "end": "678950"
  },
  {
    "text": "kubernetes primitives that are in there and then so this allows a rich",
    "start": "678950",
    "end": "687350"
  },
  {
    "text": "integration with the events themselves and so you can do things like completing or abandoning queue messages and so",
    "start": "687350",
    "end": "696980"
  },
  {
    "text": "that's the that's okay de architecture it's a it's a it's a server that runs in",
    "start": "696980",
    "end": "703400"
  },
  {
    "text": "a pod in a service in your kubernetes cluster you just install it with helm or [Music]",
    "start": "703400",
    "end": "709390"
  },
  {
    "text": "with a you know deployment but it's pretty simple to install and then it's",
    "start": "709390",
    "end": "715730"
  },
  {
    "text": "working in conjunction with the kubernetes pattern autoscaler in order",
    "start": "715730",
    "end": "720830"
  },
  {
    "start": "719000",
    "end": "752000"
  },
  {
    "text": "to create your deployments and in order to to scale your deployments so there's",
    "start": "720830",
    "end": "730550"
  },
  {
    "text": "a rich library of events sources that kada implements out of the box",
    "start": "730550",
    "end": "736610"
  },
  {
    "text": "things like Kafka RabbitMQ azure storage use Azure service bus queues",
    "start": "736610",
    "end": "744830"
  },
  {
    "text": "AWS sqs and Prometheus and there's constantly new ones who are added in the",
    "start": "744830",
    "end": "750380"
  },
  {
    "text": "open source project so you can use that with lots of different type of event",
    "start": "750380",
    "end": "755480"
  },
  {
    "start": "752000",
    "end": "780000"
  },
  {
    "text": "source okay so now demo time I think",
    "start": "755480",
    "end": "760490"
  },
  {
    "text": "I'll do a little bit of explanation before doing the demo so that you have a better and",
    "start": "760490",
    "end": "766260"
  },
  {
    "text": "understanding of how it works so first you need to install kara I've done that",
    "start": "766260",
    "end": "772080"
  },
  {
    "text": "already in the cluster here but typically you can install it with helm like this by added the Kara core repo in",
    "start": "772080",
    "end": "779640"
  },
  {
    "text": "there and doing a ham install with it and you can pass a few parameters in",
    "start": "779640",
    "end": "785010"
  },
  {
    "start": "780000",
    "end": "810000"
  },
  {
    "text": "there in the in the test that we're going to do here in the demo I'm going to show you a necklace an azure",
    "start": "785010",
    "end": "793500"
  },
  {
    "text": "kubernetes service cluster that is configured with a virtual couplet to use",
    "start": "793500",
    "end": "800910"
  },
  {
    "text": "a CI and that has Kara installed and we're going to scale our application",
    "start": "800910",
    "end": "806100"
  },
  {
    "text": "based on rabbitmq so we have we have",
    "start": "806100",
    "end": "811140"
  },
  {
    "start": "810000",
    "end": "838000"
  },
  {
    "text": "installed RabbitMQ in that cluster and then where we're going to deploy we're",
    "start": "811140",
    "end": "819990"
  },
  {
    "text": "going to deploy a consumer who's going to consume the rabbitmq events and so",
    "start": "819990",
    "end": "827580"
  },
  {
    "text": "when you were when you are deploying the consumer here you can see that I have",
    "start": "827580",
    "end": "833850"
  },
  {
    "text": "the node selector that tells me that that consumer that container that I",
    "start": "833850",
    "end": "839850"
  },
  {
    "start": "838000",
    "end": "879000"
  },
  {
    "text": "deploy as a RabbitMQ consumer that's going to consume events from rabbit I",
    "start": "839850",
    "end": "845760"
  },
  {
    "text": "want that to be deployed with with a CI and so that's the the snippet of text",
    "start": "845760",
    "end": "851940"
  },
  {
    "text": "that you saw in the mo before and then",
    "start": "851940",
    "end": "857880"
  },
  {
    "text": "we can deploy our scaled object and so here you can see that Kara defines an",
    "start": "857880",
    "end": "863610"
  },
  {
    "text": "API KDOT kubernetes dot io and it defines a",
    "start": "863610",
    "end": "870150"
  },
  {
    "text": "new kind that's called a scale object and in there we can specify things like",
    "start": "870150",
    "end": "875220"
  },
  {
    "text": "polling interval cooldown period match max replica count and we can pass some",
    "start": "875220",
    "end": "884580"
  },
  {
    "start": "879000",
    "end": "914000"
  },
  {
    "text": "parameters like which which rabbit server should I get my events from",
    "start": "884580",
    "end": "891990"
  },
  {
    "text": "and then once I have deployed all that and I have configured all this what I can do is start to deploy a publisher so",
    "start": "891990",
    "end": "900300"
  },
  {
    "text": "that's a simple pot that's going to send some events inside of rabbit and then I'm going to watch",
    "start": "900300",
    "end": "906390"
  },
  {
    "text": "kaida look at that rabbitmq I'm going to",
    "start": "906390",
    "end": "911970"
  },
  {
    "text": "watch the pod the horizontal part autoscaler create all these all these",
    "start": "911970",
    "end": "920390"
  },
  {
    "text": "ACI instances based on the load that it's receiving from the RabbitMQ filling",
    "start": "920390",
    "end": "927390"
  },
  {
    "text": "up and then I just I just kill the the even producer and you will see that Kara",
    "start": "927390",
    "end": "933990"
  },
  {
    "text": "is going to scale down the number of sei instances so that's that's what I'm",
    "start": "933990",
    "end": "942510"
  },
  {
    "text": "going to show and then so there's an additional and a fun thing that you can",
    "start": "942510",
    "end": "949350"
  },
  {
    "text": "do with this which is there's lots of component to install with it",
    "start": "949350",
    "end": "954440"
  },
  {
    "text": "Microsoft and doctor had created a spec a few months ago that's advancing a lot",
    "start": "954440",
    "end": "962190"
  },
  {
    "text": "and that's getting more and more useful that's called see NAB the cloud native application bundle so that's a",
    "start": "962190",
    "end": "967890"
  },
  {
    "start": "963000",
    "end": "1029000"
  },
  {
    "text": "specification there are two implementations one of them is docker",
    "start": "967890",
    "end": "973110"
  },
  {
    "text": "apps so dr. implements in AB for docker apps the other implementation by",
    "start": "973110",
    "end": "979770"
  },
  {
    "text": "Microsoft is called Porter and Scott has created a whole like that all the",
    "start": "979770",
    "end": "987330"
  },
  {
    "text": "containers involving the demo like installing kada in stunning RabbitMQ the producer of the consumer all that",
    "start": "987330",
    "end": "993810"
  },
  {
    "text": "wrapped together inside of a single bundle and there are some instructions there for how to do that okay so let's",
    "start": "993810",
    "end": "1004269"
  },
  {
    "text": "let's now do the demo so just going to",
    "start": "1004630",
    "end": "1012080"
  },
  {
    "text": "go there okay so I'm just going to clear my",
    "start": "1012080",
    "end": "1019690"
  },
  {
    "text": "screen so is it big enough can you can",
    "start": "1019690",
    "end": "1025360"
  },
  {
    "text": "you read correctly yes okay cool so first I'm going to do a coop card or get",
    "start": "1025360",
    "end": "1036730"
  },
  {
    "start": "1029000",
    "end": "1496000"
  },
  {
    "text": "notes just to show you that I'm using",
    "start": "1036730",
    "end": "1043050"
  },
  {
    "text": "kubernetes cluster that's in I don't",
    "start": "1043050",
    "end": "1050650"
  },
  {
    "text": "remember which region it is in but it's it's an aqueous cluster that has been configured with Kara in it so let's take",
    "start": "1050650",
    "end": "1057790"
  },
  {
    "text": "a look at what Caden looks like if I do cook card or get namespaces let's see",
    "start": "1057790",
    "end": "1067450"
  },
  {
    "text": "the namespaces we have in that in that cluster so you can see I have a few new",
    "start": "1067450",
    "end": "1076690"
  },
  {
    "text": "faces in there that must be a demo and then we have Kade out there so if I do",
    "start": "1076690",
    "end": "1082710"
  },
  {
    "text": "coop coop CTL I never know if it's a coop cuddle or coop CTL I know there are",
    "start": "1082710",
    "end": "1089650"
  },
  {
    "text": "two camps there - NS k da get all so",
    "start": "1089650",
    "end": "1097110"
  },
  {
    "text": "sorry [Music]",
    "start": "1097110",
    "end": "1103739"
  },
  {
    "text": "- - namespace audition yeah yeah okay so let's take a",
    "start": "1113309",
    "end": "1121600"
  },
  {
    "text": "look at what's in that what's in that namespace so here you see we have the",
    "start": "1121600",
    "end": "1127600"
  },
  {
    "text": "cadet pod that's running in there and we have a service and this is where the",
    "start": "1127600",
    "end": "1133809"
  },
  {
    "text": "quedagh Takeda matrix server is going to",
    "start": "1133809",
    "end": "1139360"
  },
  {
    "text": "be exposed so then I'm going to go I'm",
    "start": "1139360",
    "end": "1144490"
  },
  {
    "text": "going to make that one bigger and here",
    "start": "1144490",
    "end": "1153549"
  },
  {
    "text": "I'm going to do a coop Caudill get horizontal pod autoscaler to look at",
    "start": "1153549",
    "end": "1159730"
  },
  {
    "text": "what's in the autoscaler right now so",
    "start": "1159730",
    "end": "1169270"
  },
  {
    "text": "that's what I installed there and they are here I'm just going to take a look at the pods here I'm going to do a",
    "start": "1169270",
    "end": "1180100"
  },
  {
    "text": "weight on the pods to look at the pods that are scheduled in that kubernetes cluster so here I have just one for",
    "start": "1180100",
    "end": "1189370"
  },
  {
    "text": "rabbitmq for now and it's it's in watch mode so so I'm going to see see them",
    "start": "1189370",
    "end": "1195880"
  },
  {
    "text": "coming in and then that's the horizontal part autoscaler so now what I can do here is I'm going",
    "start": "1195880",
    "end": "1206200"
  },
  {
    "text": "to deploy the producer in events so here",
    "start": "1206200",
    "end": "1211480"
  },
  {
    "text": "this is the so that's the delete command so here I'm going to do I'm going to",
    "start": "1211480",
    "end": "1219570"
  },
  {
    "text": "could cut all apply this this job there",
    "start": "1219570",
    "end": "1226059"
  },
  {
    "text": "that has a container that's the RabbitMQ client I'm going to give it to give to it the the address of the",
    "start": "1226059",
    "end": "1234159"
  },
  {
    "text": "RabbitMQ service that is in my cluster and what that client does is that it's",
    "start": "1234159",
    "end": "1239710"
  },
  {
    "text": "it's just putting a bunch of events in the RabbitMQ so I'm just going to deploy",
    "start": "1239710",
    "end": "1246610"
  },
  {
    "text": "that I just paste it from the dogs here",
    "start": "1246610",
    "end": "1262169"
  },
  {
    "text": "so all these instruction that I'm showing there are a github repo so that",
    "start": "1262169",
    "end": "1267610"
  },
  {
    "text": "you can reproduce that at home and I tweet about where the code is after the",
    "start": "1267610",
    "end": "1273820"
  },
  {
    "text": "after the talk and you can find all that all these instructions as well as the sample code in the deck so I'm going to",
    "start": "1273820",
    "end": "1284860"
  },
  {
    "text": "do that cube apply ok so it has created",
    "start": "1284860",
    "end": "1291100"
  },
  {
    "text": "a batch job with the rabbit with the RabbitMQ client who's going to add a",
    "start": "1291100",
    "end": "1298809"
  },
  {
    "text": "bunch of events in rabbit so now let's take a look at here so on the horizontal",
    "start": "1298809",
    "end": "1304960"
  },
  {
    "text": "part autoscaler I don't have anything yet but here I start to have some",
    "start": "1304960",
    "end": "1310210"
  },
  {
    "text": "interesting things so here I have a",
    "start": "1310210",
    "end": "1316240"
  },
  {
    "text": "bunch of RabbitMQ consumers boom so lots of them are pending some of them are",
    "start": "1316240",
    "end": "1321759"
  },
  {
    "text": "creating so you can see that there's lots of consumers that are and so what happens behind the scenes is that once I",
    "start": "1321759",
    "end": "1329200"
  },
  {
    "text": "have done that once I have launched the producer events it's loading RabbitMQ",
    "start": "1329200",
    "end": "1336039"
  },
  {
    "text": "with a bunch of events then kada is listening to that RabbitMQ and using the",
    "start": "1336039",
    "end": "1344080"
  },
  {
    "text": "horizontal potahto scaler to tell it hey we need more of this of this deployment",
    "start": "1344080",
    "end": "1349210"
  },
  {
    "text": "and that's what that's what the positive",
    "start": "1349210",
    "end": "1355600"
  },
  {
    "text": "scalar is just adding more these pods to the deployment and these pods as you",
    "start": "1355600",
    "end": "1362529"
  },
  {
    "text": "remember they were specified as a CI so these are virtual node a CI Linux in",
    "start": "1362529",
    "end": "1368649"
  },
  {
    "text": "there in terms of types I think I have limited it to 30 not to grow my Asha",
    "start": "1368649",
    "end": "1375340"
  },
  {
    "text": "bill too much let's take a look here we can see some of the metrics that are",
    "start": "1375340",
    "end": "1380529"
  },
  {
    "text": "coming to say hey we have one replica we have four we have eight",
    "start": "1380529",
    "end": "1386730"
  },
  {
    "text": "and boom we reach the thirty max here and here you have things like the number",
    "start": "1386730",
    "end": "1395130"
  },
  {
    "text": "of average time that it takes to to do them so now what I'm going to do is I'm",
    "start": "1395130",
    "end": "1401610"
  },
  {
    "text": "going to delete the deployment in order to in order to show that Kara is going",
    "start": "1401610",
    "end": "1411150"
  },
  {
    "text": "to scale down to zero by itself so I don't have anything to do there so I'm",
    "start": "1411150",
    "end": "1418650"
  },
  {
    "text": "just I delete that I did it that bad and in there I should start seeing some",
    "start": "1418650",
    "end": "1426000"
  },
  {
    "text": "interesting things in the in the HP a where the horizontal potahto scalar is",
    "start": "1426000",
    "end": "1431160"
  },
  {
    "text": "going to notice that so Kira is going to tell it that there is no more events in there that we we know need as many year",
    "start": "1431160",
    "end": "1437900"
  },
  {
    "text": "as many of these containers and you can see they're all terminating in there",
    "start": "1437900",
    "end": "1445010"
  },
  {
    "text": "boom boom boom so it's scaling down my my deployment back to zero because",
    "start": "1445250",
    "end": "1453360"
  },
  {
    "text": "there's no more events to consume in there so that's that's the demo and",
    "start": "1453360",
    "end": "1461840"
  },
  {
    "text": "yeah please from current slide yeah so so that's the demo you can find",
    "start": "1470850",
    "end": "1479919"
  },
  {
    "text": "the coudn't the demo either at this URL or as another from it's part of that",
    "start": "1479919",
    "end": "1488390"
  },
  {
    "text": "demo is part of a whole set of learning content that the cloud that we Casey team at Microsoft that we build for a",
    "start": "1488390",
    "end": "1496130"
  },
  {
    "text": "series of events that we are doing around the world called ignite the tour and all our learning paths for ignite",
    "start": "1496130",
    "end": "1502490"
  },
  {
    "text": "the tour are online I'm going to actually I can show you the the link to",
    "start": "1502490",
    "end": "1510410"
  },
  {
    "text": "it directly in my browser and Scott has a version of that that's that is using a",
    "start": "1510410",
    "end": "1518929"
  },
  {
    "text": "Cinnabon Porter if you want to do more on the cutting edge side",
    "start": "1518929",
    "end": "1526360"
  },
  {
    "text": "okay so that's so that's it for the for the presentation and the demo I'll tweet",
    "start": "1535420",
    "end": "1541850"
  },
  {
    "text": "the link to the demo I went when that when that presentation is finished and",
    "start": "1541850",
    "end": "1549670"
  },
  {
    "text": "to summarize what I presented today is different ways to scale your workloads",
    "start": "1549670",
    "end": "1557809"
  },
  {
    "text": "with kubernetes one of them is to use the horizontal potahto scalar then in",
    "start": "1557809",
    "end": "1563660"
  },
  {
    "text": "order to scale the compute you can use either the cluster autoscaler",
    "start": "1563660",
    "end": "1568850"
  },
  {
    "text": "or the virtual couplet that's going to create pods using all your cloud as a",
    "start": "1568850",
    "end": "1575540"
  },
  {
    "start": "1573000",
    "end": "1847000"
  },
  {
    "text": "resource and then I talked about this open source project called kada that has",
    "start": "1575540",
    "end": "1581530"
  },
  {
    "text": "that has event adapters for a whole series of events that lets you scale",
    "start": "1581530",
    "end": "1587870"
  },
  {
    "text": "your compute or your specific applications down to zero and auto scale",
    "start": "1587870",
    "end": "1594110"
  },
  {
    "text": "them up and kada works really well in conjunction with a virtual couplet and i",
    "start": "1594110",
    "end": "1601040"
  },
  {
    "text": "think i'm nearly on time so so that's it for now do you have other any questions",
    "start": "1601040",
    "end": "1607400"
  },
  {
    "text": "or do some of you have tried these technologies before all there's some",
    "start": "1607400",
    "end": "1612530"
  },
  {
    "text": "specific use cases that you think would be useful for that",
    "start": "1612530",
    "end": "1618730"
  },
  {
    "text": "yes so the question is how far can you",
    "start": "1622710",
    "end": "1631480"
  },
  {
    "text": "scale it with Keita and the answer is it depends on your provider so here I have",
    "start": "1631480",
    "end": "1637809"
  },
  {
    "text": "setup kada to go between 0 and 30 using an ECI implementation so there are some",
    "start": "1637809",
    "end": "1646510"
  },
  {
    "text": "limits to I actually don't know from the top of my head what the limit for sei is in a specific region but the limit",
    "start": "1646510",
    "end": "1654640"
  },
  {
    "text": "becomes the limit of your of your provider implementation yes so the",
    "start": "1654640",
    "end": "1672700"
  },
  {
    "text": "question as I understand it is can they be a kind of race condition where both",
    "start": "1672700",
    "end": "1677770"
  },
  {
    "text": "HPA and Cade are going to try to scale the same workloads I guess in that case",
    "start": "1677770",
    "end": "1683830"
  },
  {
    "text": "it depends on how you have configured your workloads you can deploy it by",
    "start": "1683830",
    "end": "1689410"
  },
  {
    "text": "asking the horizontal part autoscaler to take care of it then if you're using Keita you're configuring you're putting",
    "start": "1689410",
    "end": "1697150"
  },
  {
    "text": "some data in there to say hey I want this deployment to be managed by Kara so",
    "start": "1697150",
    "end": "1703390"
  },
  {
    "text": "I guess you want to be careful about your deployment to target to one or the",
    "start": "1703390",
    "end": "1708940"
  },
  {
    "text": "other yes",
    "start": "1708940",
    "end": "1713760"
  },
  {
    "text": "so that's a good question is there work to merge kaida with K native I don't",
    "start": "1715940",
    "end": "1723450"
  },
  {
    "text": "know I don't know the answer to that I guess you would have to go ask the Qaeda team some of the team members I think",
    "start": "1723450",
    "end": "1731370"
  },
  {
    "text": "are at the Microsoft booth this week or else just ping me on Twitter with a",
    "start": "1731370",
    "end": "1737160"
  },
  {
    "text": "question and I'll try to find the answer for you one of the things that I see there is that K native has a lot of",
    "start": "1737160",
    "end": "1744960"
  },
  {
    "text": "components in there I'm pretty sure that parts of what kada provides must be",
    "start": "1744960",
    "end": "1751049"
  },
  {
    "text": "implemented in a different way in there so I don't know what Kira is a much",
    "start": "1751049",
    "end": "1756299"
  },
  {
    "text": "smaller system that is very integrated with primeras and doesn't need any additional things like ECU or you can",
    "start": "1756299",
    "end": "1764220"
  },
  {
    "text": "use it with any service mesh that you want there so it's I'd say it's a slightly different design philosophy",
    "start": "1764220",
    "end": "1770730"
  },
  {
    "text": "than K native and I think yes one more",
    "start": "1770730",
    "end": "1775919"
  },
  {
    "text": "question maybe so what is the startup",
    "start": "1775919",
    "end": "1782280"
  },
  {
    "text": "time for these workloads for the virtual cubelet so what is the start time for",
    "start": "1782280",
    "end": "1789360"
  },
  {
    "text": "the four containers created with the virtual couplet the answer is it depends",
    "start": "1789360",
    "end": "1795390"
  },
  {
    "text": "it depends on your provider so for a CI I am pretty sure we must have that in the documentation I I don't know it from",
    "start": "1795390",
    "end": "1802350"
  },
  {
    "text": "the top of my from the top of my mind that said I know if you saw the demo",
    "start": "1802350",
    "end": "1808679"
  },
  {
    "text": "it's so yeah or you can try it at home",
    "start": "1808679",
    "end": "1815059"
  },
  {
    "text": "so is there a cold start up time like lambda for a CI I don't know that's it",
    "start": "1818150",
    "end": "1827640"
  },
  {
    "text": "I'll be outside of the room if you have any additional questions and don't hesitate to ping me on Twitter and I",
    "start": "1827640",
    "end": "1835530"
  },
  {
    "text": "will share this deck later tonight and you can find the the codon on github Thanks",
    "start": "1835530",
    "end": "1846640"
  },
  {
    "text": "[Applause]",
    "start": "1846640",
    "end": "1849089"
  }
]