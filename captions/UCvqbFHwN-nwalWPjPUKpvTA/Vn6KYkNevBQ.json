[
  {
    "start": "0",
    "end": "34000"
  },
  {
    "text": "all righty I think we'll get started thanks all for coming just before lunch",
    "start": "0",
    "end": "5310"
  },
  {
    "text": "I know but hopefully I'll hold your interest a little bit better than the thoughts of thoughts of lunch so my name",
    "start": "5310",
    "end": "12240"
  },
  {
    "text": "is Casey calendar ello I am at Red Hat formerly core OS and I want to talk about kubernetes the CNI and how these",
    "start": "12240",
    "end": "19680"
  },
  {
    "text": "two interact this is an intermediate level talk so I'm gonna assume that you more or less have an idea of what what's",
    "start": "19680",
    "end": "26640"
  },
  {
    "text": "going on and try and get sort of technical trying to go into some details so let me so yeah so let's have some fun",
    "start": "26640",
    "end": "33360"
  },
  {
    "text": "Who am I I am a rocket developer i maintainer of the cni project I'm a firm",
    "start": "33360",
    "end": "39059"
  },
  {
    "start": "34000",
    "end": "34000"
  },
  {
    "text": "believer in ipv6 which is awesome so uh",
    "start": "39059",
    "end": "44579"
  },
  {
    "text": "this is just what we're going to talk about today four basic topics plus a quick introduction so starting out what",
    "start": "44579",
    "end": "51660"
  },
  {
    "start": "50000",
    "end": "50000"
  },
  {
    "text": "is CNI actually and it's okay that it's a little bit of a confusing term because",
    "start": "51660",
    "end": "57149"
  },
  {
    "text": "in this particular community this term has come to mean a couple different things it's a bit overloaded and then",
    "start": "57149",
    "end": "62969"
  },
  {
    "text": "another question is sort of a historical question of why is it designed the way that it is so in this particular",
    "start": "62969",
    "end": "68790"
  },
  {
    "start": "68000",
    "end": "68000"
  },
  {
    "text": "community CNI means three different and slightly related things first of all and",
    "start": "68790",
    "end": "74909"
  },
  {
    "text": "most formally it is a vendor-neutral protocol that is used by container run",
    "start": "74909",
    "end": "80070"
  },
  {
    "text": "time engines to make requests to networking providers that is by definition what CNI is right so and it's",
    "start": "80070",
    "end": "87000"
  },
  {
    "text": "not just for communities in fact it was started part of the rocket project initially CNI has also come to mean a",
    "start": "87000",
    "end": "93810"
  },
  {
    "text": "set of commonly used networking plugins that are maintained by the CNI community as opposed to the kubernetes community",
    "start": "93810",
    "end": "100409"
  },
  {
    "text": "or by a specific vendor and CNI is also shorthand for a plug-in for the cubelet",
    "start": "100409",
    "end": "107640"
  },
  {
    "text": "called CNI oops in other words when you type Network",
    "start": "107640",
    "end": "112680"
  },
  {
    "text": "plug-in equals CNI on the command line the cubelet is going to run one code path versus another one and how does it",
    "start": "112680",
    "end": "119460"
  },
  {
    "start": "118000",
    "end": "118000"
  },
  {
    "text": "all come together then with kubernetes this is there are other talks that have",
    "start": "119460",
    "end": "124530"
  },
  {
    "text": "outlined this a little bit better so I'm going to go very quickly does three thing it does these things you write a configuration file you put it on disk",
    "start": "124530",
    "end": "130259"
  },
  {
    "text": "you put some binary on disk at some point in time later you use to create a pod kubernetes executes",
    "start": "130259",
    "end": "136200"
  },
  {
    "text": "those binaries passes this configuration file into standard in and then your pod is online like magic okay so this is the",
    "start": "136200",
    "end": "144540"
  },
  {
    "text": "basic of this is the base of where we are today as for why it is designed the",
    "start": "144540",
    "end": "150329"
  },
  {
    "start": "148000",
    "end": "148000"
  },
  {
    "text": "way it is if you think about every other extension point in the kubernetes ecosystem it's always always always",
    "start": "150329",
    "end": "156750"
  },
  {
    "text": "protobuf G RPC daemon CSI device plugins everything so why isn't CNI like this",
    "start": "156750",
    "end": "162900"
  },
  {
    "text": "why is you why does CNI unique well CNI came out originally out of rocket and rocket is a daemon 'less container",
    "start": "162900",
    "end": "168689"
  },
  {
    "text": "runtime engine so it wouldn't really have matched the architecture for CNI to have a deeper to require plugins to be a",
    "start": "168689",
    "end": "175169"
  },
  {
    "text": "demon and rocket has always focused on really clean really simple integration points and C and I fell out of that",
    "start": "175169",
    "end": "180959"
  },
  {
    "text": "effort additionally as some of you may have discovered either hopefully with",
    "start": "180959",
    "end": "186569"
  },
  {
    "start": "183000",
    "end": "183000"
  },
  {
    "text": "the blog post or not so hopefully with bugs in production managing network names faces managing any sort of",
    "start": "186569",
    "end": "192000"
  },
  {
    "text": "namespace and go is not reliable this is only fixed and go 1.10 which kubernetes",
    "start": "192000",
    "end": "198479"
  },
  {
    "text": "still doesn't build with right so you have to use sub priceless you have to fork an exec to safely manage networking",
    "start": "198479",
    "end": "204959"
  },
  {
    "text": "namespaces and golang so you might as well just make that fork and exec protocol your execution protocol so that",
    "start": "204959",
    "end": "210989"
  },
  {
    "text": "is in effect CNI all right so now we all are on the same page we all know",
    "start": "210989",
    "end": "216209"
  },
  {
    "text": "everything let's talk about how CNI is used in kubernetes and I really want to emphasize that CNI is not just for",
    "start": "216209",
    "end": "222540"
  },
  {
    "text": "creepy Nettie's and so this is so how kubernetes uses CNI might be different from how other container runtime engines",
    "start": "222540",
    "end": "227579"
  },
  {
    "text": "use CNI just to get some terminology really quickly you probably have seen",
    "start": "227579",
    "end": "233459"
  },
  {
    "text": "this but on the right we have a node and it has and it has an Ethernet interface",
    "start": "233459",
    "end": "239609"
  },
  {
    "text": "it has an IP address on that node is some pod that pod also has an address and IP and this state corresponds in the",
    "start": "239609",
    "end": "247799"
  },
  {
    "text": "API server it's reflected here this is the node object and the important things you can see that it is the node has",
    "start": "247799",
    "end": "254040"
  },
  {
    "text": "reported its internal IP and the node has been assigned something called a pod cider and this is the block of IP",
    "start": "254040",
    "end": "259680"
  },
  {
    "text": "addresses that the node is going to use for the IP addresses in the pod likewise",
    "start": "259680",
    "end": "264900"
  },
  {
    "text": "this is reflected in the pods data structure in the server it has a host IP which is useful",
    "start": "264900",
    "end": "272009"
  },
  {
    "text": "and it has the pod IP that has been assigned to the east zero inside the pod",
    "start": "272009",
    "end": "277310"
  },
  {
    "text": "as you can see of course the pod IP is inside the pod cider although this is not actually a requirement and more",
    "start": "277310",
    "end": "285090"
  },
  {
    "text": "importantly the pod IP and the pod cider are not in the hosts network interface",
    "start": "285090",
    "end": "292560"
  },
  {
    "text": "this is important this slide is for the benefit of people who have downloaded",
    "start": "292560",
    "end": "297810"
  },
  {
    "text": "the slides and don't feel like watching through the video skip that so how does C and I play into this little dance here",
    "start": "297810",
    "end": "305280"
  },
  {
    "start": "300000",
    "end": "300000"
  },
  {
    "text": "so when a pod is added to a node a C and I plugin needs to do three things a CNI",
    "start": "305280",
    "end": "310440"
  },
  {
    "text": "plugin for kubernetes needs to do three things it needs to create this easy row",
    "start": "310440",
    "end": "315990"
  },
  {
    "text": "inside the container inside the pods network namespace in other words it needs to connect the pod to the network",
    "start": "315990",
    "end": "321919"
  },
  {
    "text": "it needs to allocate the pod IP so CNI plugins are responsible for IP address",
    "start": "321919",
    "end": "328319"
  },
  {
    "text": "allocation the pod cider is a hint however Cadiz does not actually require",
    "start": "328319",
    "end": "333810"
  },
  {
    "text": "that the pods IP be inside the pod cider and the third thing that the CNI plugin",
    "start": "333810",
    "end": "339509"
  },
  {
    "text": "needs to do is it needs to make this pod IP reachable by the whole cluster so in",
    "start": "339509",
    "end": "346050"
  },
  {
    "text": "other words a CNI plugin is expected to do two related but distinct tasks it",
    "start": "346050",
    "end": "351840"
  },
  {
    "text": "needs to provide connectivity to an isolation domain in other words it needs to put each 0 inside this network",
    "start": "351840",
    "end": "357960"
  },
  {
    "text": "namespace or it could also be required to do each 0 inside say a virtual machine that's connectivity from the",
    "start": "357960",
    "end": "364289"
  },
  {
    "text": "domain to the host it also needs to provide reach ability in other words this pot IP needs to be reachable to the",
    "start": "364289",
    "end": "371849"
  },
  {
    "text": "entire cluster now a question that's probably worth asking just so we all",
    "start": "371849",
    "end": "377940"
  },
  {
    "start": "374000",
    "end": "374000"
  },
  {
    "text": "understand why this is the way it is is why do we have plugins to do this at all and the answer is that it's a really",
    "start": "377940",
    "end": "384419"
  },
  {
    "text": "diverse space and everybody has quite distinct requirements for how to solve these problems connectivity in other",
    "start": "384419",
    "end": "390690"
  },
  {
    "text": "words bringing your pod online so it can go to Google or whatever it might defend it depends on your networking interface",
    "start": "390690",
    "end": "397349"
  },
  {
    "text": "hardware on the host it depends on the isolation technology that you're using whether you're using namespaces or",
    "start": "397349",
    "end": "403389"
  },
  {
    "text": "virtual machines and it depends on performance requirements and that of course means it depends on your budget",
    "start": "403389",
    "end": "409349"
  },
  {
    "text": "reach ability depends on your networking hardware just the same but not your networking hardware on the host it",
    "start": "409349",
    "end": "414939"
  },
  {
    "text": "depends on your networking hardware inside your broader network right so can you touch your networking hardware can",
    "start": "414939",
    "end": "420849"
  },
  {
    "text": "you touch the people who can touch your networking hardware are the as the networking hardware and are the people that can touch a networking hard there",
    "start": "420849",
    "end": "426580"
  },
  {
    "text": "are they yours or are they in the cloud right like there's no such cloud that's just other people's routers but nevertheless how do you talk to your",
    "start": "426580",
    "end": "434409"
  },
  {
    "text": "networking hardware do you talk something sort of traditional like BGP or OSPF do you have a custom rest",
    "start": "434409",
    "end": "439509"
  },
  {
    "text": "interface and of course what's your performance requirements and what's your budget right all of these things have wildly different answers for wildly",
    "start": "439509",
    "end": "446110"
  },
  {
    "text": "different circumstances so it's natural to think that we should have a plug-in system for that reach ability really is",
    "start": "446110",
    "end": "454389"
  },
  {
    "text": "a really rich topic and it is important to understand that kubernetes doesn't",
    "start": "454389",
    "end": "460749"
  },
  {
    "text": "match sort of the traditional networking environment traditional networking environments the general practices nodes",
    "start": "460749",
    "end": "467860"
  },
  {
    "text": "or participants in the network have long relatively predictable lifetimes",
    "start": "467860",
    "end": "472889"
  },
  {
    "text": "importantly address allocation is semi manual and is most importantly as",
    "start": "472889",
    "end": "478389"
  },
  {
    "text": "topology aware so you have a subnet for your rack you have a subnet for your row you have a subnet for your data center",
    "start": "478389",
    "end": "483399"
  },
  {
    "text": "everything is nicely aggregated and this is the big one for ipv4 environments how",
    "start": "483399",
    "end": "489699"
  },
  {
    "text": "many of you have run out of net ten right one interface even if you're using entirely private ip's one interface in",
    "start": "489699",
    "end": "495009"
  },
  {
    "text": "your network generally equals one IP address till we all move to v6 whereas",
    "start": "495009",
    "end": "501490"
  },
  {
    "text": "kubernetes basically flips this entirely on its head right it's generally IP allocation is topology unaware there are",
    "start": "501490",
    "end": "507639"
  },
  {
    "text": "cases where this is not the case generally it's topology unaware kubernetes will happily allocate",
    "start": "507639",
    "end": "512888"
  },
  {
    "text": "hundreds or more of IP addresses per node which means that each physical port on your router infrastructure needs to",
    "start": "512889",
    "end": "519159"
  },
  {
    "text": "be able to handle much more addressing and lifetimes are short churn is high",
    "start": "519159",
    "end": "524529"
  },
  {
    "text": "addressing is constantly changing nodes or participants in the network are coming and going so there really is a",
    "start": "524529",
    "end": "529720"
  },
  {
    "text": "disconnect between how traditional networking environments work and how kubernetes intends to use those",
    "start": "529720",
    "end": "534850"
  },
  {
    "text": "networking environments all this is to say that reach ability is a very rich and complicated topic when you're trying to",
    "start": "534850",
    "end": "541450"
  },
  {
    "text": "bring kubernetes into into your world so how do CNI plugins work with kubernetes",
    "start": "541450",
    "end": "547780"
  },
  {
    "text": "let's talk a little bit more in detail like I said CNI plugins need to do two",
    "start": "547780",
    "end": "553270"
  },
  {
    "start": "549000",
    "end": "549000"
  },
  {
    "text": "things they often have two separate components they typically have a CNI binary so this is the CNI spec binary",
    "start": "553270",
    "end": "560830"
  },
  {
    "text": "executed by the cubelet that configures the pods interface this is for technical",
    "start": "560830",
    "end": "565870"
  },
  {
    "text": "reasons this is for lifecycle reasons this is the code that is actually going to be doing the namespace switch so this",
    "start": "565870",
    "end": "571330"
  },
  {
    "text": "needs to be a separate process that is providing your connectivity separately essentially all CNI systems for",
    "start": "571330",
    "end": "580270"
  },
  {
    "text": "kubernetes also include a daemon that is going to manage routing in other words you're going to have a daemon that is",
    "start": "580270",
    "end": "585970"
  },
  {
    "text": "going to be providing the reach ability solution for your network connectivity",
    "start": "585970",
    "end": "591010"
  },
  {
    "start": "590000",
    "end": "590000"
  },
  {
    "text": "is almost exclusively done the same way if you're using network namespaces you're going to create a Vieth pair",
    "start": "591010",
    "end": "596560"
  },
  {
    "text": "which is a point-to-point virtual tunnel most of you probably seen this if not there is an excellent tutorial by lwn",
    "start": "596560",
    "end": "603700"
  },
  {
    "text": "where you can do this in a couple command lines this is all entirely supported with the IP binary so IP like",
    "start": "603700",
    "end": "609550"
  },
  {
    "text": "the IP binary the IP binary is effectively a container runtime because you can do IP net NS new so now you have",
    "start": "609550",
    "end": "615970"
  },
  {
    "text": "a command line container runtime engine I highly recommend all of you just search for namespaces and operation you",
    "start": "615970",
    "end": "622390"
  },
  {
    "text": "all should subscribe to LW N or Linux weekly news anyways they are a really important source of news and and a",
    "start": "622390",
    "end": "628120"
  },
  {
    "text": "commentary for all of us in the open source and Linux community so connectivity almost always solved in",
    "start": "628120",
    "end": "633550"
  },
  {
    "text": "this particular manner reach ability has one reach ability is much more diverse",
    "start": "633550",
    "end": "639400"
  },
  {
    "start": "635000",
    "end": "635000"
  },
  {
    "text": "reach ability has one goal which is to make every pod cider which is assigned dynamically reachable from every node in",
    "start": "639400",
    "end": "646810"
  },
  {
    "text": "your kubernetes cluster another way of thinking about this is that reach",
    "start": "646810",
    "end": "652090"
  },
  {
    "text": "ability is you need to announce some semi dynamic routes to some peers so",
    "start": "652090",
    "end": "658360"
  },
  {
    "text": "does this sound familiar right this is every routing protocol ever existed this is the solution they need to solve and",
    "start": "658360",
    "end": "664920"
  },
  {
    "text": "essentially all CNI plugins contain a daemon that the host that programs the network with",
    "start": "664920",
    "end": "671170"
  },
  {
    "text": "the pod cider however programming the network in other words programming this pod cider can",
    "start": "671170",
    "end": "677050"
  },
  {
    "text": "take a lot of different forms you can program not your network but you can program the routing tables on every node",
    "start": "677050",
    "end": "683589"
  },
  {
    "text": "that is an overlay network you the excellent IP and IP or even no no no",
    "start": "683589",
    "end": "690040"
  },
  {
    "text": "encapsulation however if your routers don't know about your pod cider then you have an overlay Network you can program",
    "start": "690040",
    "end": "696970"
  },
  {
    "text": "your networks routing tables via rest in which case you are paying Amazon that is",
    "start": "696970",
    "end": "702459"
  },
  {
    "text": "any sort of cloud provider based API route table manipulation you need to be",
    "start": "702459",
    "end": "708670"
  },
  {
    "text": "careful you need to watch your resource limits but this is a very effective way it's a great way to avoid encapsulation",
    "start": "708670",
    "end": "713709"
  },
  {
    "text": "while still having full reach ability you can also program your network using traditional networking protocols in",
    "start": "713709",
    "end": "721600"
  },
  {
    "text": "other words OSPF or bgp and some of the plugins that provide this are calico and Romana and this has an awesome feature",
    "start": "721600",
    "end": "727899"
  },
  {
    "text": "where your pod ciders are now real addresses inside your network and they're reachable not just internal to",
    "start": "727899",
    "end": "733240"
  },
  {
    "text": "your cluster but external to your cluster but this comes at a cost you need to have routers that you can",
    "start": "733240",
    "end": "738850"
  },
  {
    "text": "talk to and you need to make sure that your routers have enough memory and hardware to be able to accept the scale",
    "start": "738850",
    "end": "744100"
  },
  {
    "text": "and churn of kubernetes so it's a trade-off so a important thing to",
    "start": "744100",
    "end": "750579"
  },
  {
    "text": "understand is why are these two separate components why do we have this daemon and why do we have a binary while we can't make them the same thing and it",
    "start": "750579",
    "end": "757600"
  },
  {
    "text": "really comes down to the fact that the cni spec only covers the connectivity case it doesn't cover reach ability but",
    "start": "757600",
    "end": "764350"
  },
  {
    "text": "kubernetes has broader expectations right so CNI has essentially two verbs that has ADD container and the lead",
    "start": "764350",
    "end": "771100"
  },
  {
    "text": "container and it only understands pod lifecycle but route lifecycle which is",
    "start": "771100",
    "end": "777430"
  },
  {
    "text": "to say the lifecycle of the pod Sider is different from that it's per node so you",
    "start": "777430",
    "end": "783430"
  },
  {
    "text": "can't get away with having you have to have a long-running process right if you have an overlay Network you already know",
    "start": "783430",
    "end": "788920"
  },
  {
    "text": "this because you need to program every node anytime any node changes so you",
    "start": "788920",
    "end": "794500"
  },
  {
    "text": "have to have a demon that is programming every node and watching every node in the API server if you're talking a",
    "start": "794500",
    "end": "800290"
  },
  {
    "text": "routing protocol if you're talking be droopy or OSPF those protocols also require persistent sessions right if your bgp session goes",
    "start": "800290",
    "end": "806000"
  },
  {
    "text": "down your routes are withdrawn your notice gone and more importantly deletion is always hard you never really",
    "start": "806000",
    "end": "812930"
  },
  {
    "text": "know when you can delete the pod cider because you need to delete the pod cider when the node goes down but C&I doesn't",
    "start": "812930",
    "end": "818540"
  },
  {
    "text": "tell you when the node goes down because no it's got down all right so that's what CNI and the CNI infrastructure is",
    "start": "818540",
    "end": "825950"
  },
  {
    "text": "expected to provide into kubernetes now I'm going to talk about the some best practices for operators the best",
    "start": "825950",
    "end": "832100"
  },
  {
    "text": "practices for users of kubernetes because it is still a little rough around the edges there are still a lot of gotchas the first best practice is to",
    "start": "832100",
    "end": "839480"
  },
  {
    "start": "838000",
    "end": "838000"
  },
  {
    "text": "understand how the cubelet is configured for CNI so this is a bit of a pop",
    "start": "839480",
    "end": "845570"
  },
  {
    "text": "question this is a bit of a quiz which of these command line flags tells you which CNI configuration file to use for",
    "start": "845570",
    "end": "852470"
  },
  {
    "text": "the cubelet anybody know none of them it",
    "start": "852470",
    "end": "858530"
  },
  {
    "text": "doesn't take it the couplet does something that seems insane but is",
    "start": "858530",
    "end": "863600"
  },
  {
    "text": "actually for a very good reason and that is the cubelet scans a directory every 5 seconds and picks whichever",
    "start": "863600",
    "end": "869720"
  },
  {
    "text": "configuration file has the lowest ordered name it keeps scanning and re parsing forever so the first best",
    "start": "869720",
    "end": "876650"
  },
  {
    "text": "practice is to only ever write one CNI configuration file to this directory a corollary is to don't test in production",
    "start": "876650",
    "end": "883610"
  },
  {
    "text": "if you want to test this deference different anyways why does it do this it does this so that you can start the",
    "start": "883610",
    "end": "889700"
  },
  {
    "text": "cubelet and then use a pod to deploy a CNI configuration file so it seems a",
    "start": "889700",
    "end": "896150"
  },
  {
    "text": "little awkward but in fact there's a very good reason right now you have this nice decoupling comes in a bit of a cost though which is if you accidentally",
    "start": "896150",
    "end": "902450"
  },
  {
    "text": "write to CNI configuration files to disk you may get yourself into a bit of a race condition where you parse Beacom",
    "start": "902450",
    "end": "908150"
  },
  {
    "text": "add a pod onto the B Network then you drop in a.com and you try and delete the same pod in the a network and it goes",
    "start": "908150",
    "end": "914570"
  },
  {
    "text": "huh so first best practice only write one to disk this has caused production outages",
    "start": "914570",
    "end": "920330"
  },
  {
    "text": "don't do it the second thing is to understand some of the new changes in",
    "start": "920330",
    "end": "926120"
  },
  {
    "text": "CNI CNI now supports something called plug-in chaining which is a really",
    "start": "926120",
    "end": "931310"
  },
  {
    "text": "powerful tool for you if you want to tweak your network plugin chaining operate execute",
    "start": "931310",
    "end": "936470"
  },
  {
    "text": "multiple plugins for a single container execute them in a row and it passes the result of the previous one into the next",
    "start": "936470",
    "end": "943220"
  },
  {
    "text": "one and what this means is that if you as an operator want to do something very simple let's say that you want to tag",
    "start": "943220",
    "end": "950450"
  },
  {
    "text": "all of your pods with a certain QoS class it means that you can write a small amount of go code call it 100",
    "start": "950450",
    "end": "957890"
  },
  {
    "text": "lines of code maximum to accomplish this without having to know how to write a",
    "start": "957890",
    "end": "962900"
  },
  {
    "text": "full cni plug-in without having to know how to write a full interface plugin plugin chaining means that you can",
    "start": "962900",
    "end": "968360"
  },
  {
    "text": "adjust your network means you can tweak your network with a few JSON changes as opposed to building a whole new binary",
    "start": "968360",
    "end": "974350"
  },
  {
    "text": "there are some existing production plugins now that rely on plug-in chaining the big one the first one that",
    "start": "974350",
    "end": "981320"
  },
  {
    "text": "really motivated this is host port forwarding any of you want to have something listening on port 80 on the",
    "start": "981320",
    "end": "986720"
  },
  {
    "text": "host you need to do port forwarding you can write in a second plug-in in the",
    "start": "986720",
    "end": "992480"
  },
  {
    "text": "chain that just as host port forwarding otherwise it's entirely interface agnostic also is you can tweak CTL",
    "start": "992480",
    "end": "999590"
  },
  {
    "text": "parameters right this is sort of a typical CNI configuration file it might look something like this it's a bit extreme but only the first one creates",
    "start": "999590",
    "end": "1006340"
  },
  {
    "text": "the interface all of the other ones might adjust firewalls might adjust CTLs and like I said these are really easy to",
    "start": "1006340",
    "end": "1012700"
  },
  {
    "text": "write we have a skel plug-in that you can copy and paste and hundred lines of",
    "start": "1012700",
    "end": "1018070"
  },
  {
    "text": "code you can do almost anything you want and adjust your network another best",
    "start": "1018070",
    "end": "1023170"
  },
  {
    "start": "1022000",
    "end": "1022000"
  },
  {
    "text": "practice with CNI is to self host you",
    "start": "1023170",
    "end": "1028329"
  },
  {
    "text": "know we need to run a daemon on every node and man like does anyone know how to run a daemon on every node right so",
    "start": "1028330",
    "end": "1034510"
  },
  {
    "text": "you should deploy your plugins using kubernetes this takes a little bit of subtlety to get it to use the binaries",
    "start": "1034510",
    "end": "1041339"
  },
  {
    "text": "your manifest needs to do this sort of funny dance where the first thing they",
    "start": "1041340",
    "end": "1046569"
  },
  {
    "text": "do is install and activate the routing daemon then they copy the plug-in binaries onto the host into a configured",
    "start": "1046570",
    "end": "1053890"
  },
  {
    "text": "directory and then they copy the configuration file and it's really important that the last thing you do is",
    "start": "1053890",
    "end": "1060400"
  },
  {
    "text": "to copy the configuration file because copying the cni configuration file to disk is the secret signal that says to",
    "start": "1060400",
    "end": "1066970"
  },
  {
    "text": "the cubelet the network is up and you may now start pods that are not host networking pods this",
    "start": "1066970",
    "end": "1073360"
  },
  {
    "text": "is a little bit of an awkward API but this is the API that we use to say yes the host is up give it to me some",
    "start": "1073360",
    "end": "1083380"
  },
  {
    "text": "important things to get right when you're writing these manifests especially for the daemon this might seem obvious but should be said you need",
    "start": "1083380",
    "end": "1090340"
  },
  {
    "text": "to run the daemon in the host Network you also need to make sure that your daemon ignores all taints because master",
    "start": "1090340",
    "end": "1097090"
  },
  {
    "text": "should be able to reach pods master in fact has to be able to reach pods so you definitely need to run your routing",
    "start": "1097090",
    "end": "1102130"
  },
  {
    "text": "daemon on master and this is a little bit of a funny tweak you need to you should use the magic grace period here",
    "start": "1102130",
    "end": "1108340"
  },
  {
    "text": "which will let you restart your daemon very quickly minimizing the amount of time that your daemon is down in the",
    "start": "1108340",
    "end": "1114460"
  },
  {
    "text": "event of an upgrade or a crash now most of your vendors will provide a manifest",
    "start": "1114460",
    "end": "1120429"
  },
  {
    "text": "file for you that will do this automatically so you shouldn't necessarily have to write these but you might want to check and make sure that",
    "start": "1120429",
    "end": "1126010"
  },
  {
    "text": "they follow these best practices another best practice that requires a lot of",
    "start": "1126010",
    "end": "1131169"
  },
  {
    "start": "1128000",
    "end": "1128000"
  },
  {
    "text": "careful thought is disaster recovery especially if you have a self hosted control plan you need to understand the",
    "start": "1131169",
    "end": "1137230"
  },
  {
    "text": "dependencies that your CNI plugin has you need to always run your API server as well in host networking because if",
    "start": "1137230",
    "end": "1143830"
  },
  {
    "text": "your API server is down nothing may start and you need to understand the exact dependency chain and make sure",
    "start": "1143830",
    "end": "1150340"
  },
  {
    "text": "that your daemon set your routing daemon will start up without any other running services you know in system D if you",
    "start": "1150340",
    "end": "1157029"
  },
  {
    "text": "have a dependency system people very happily tell you that a transaction is not achievable right it will tell you nope can't do it whereas the kubernetes",
    "start": "1157029",
    "end": "1163600"
  },
  {
    "text": "general practice is to just if if the conditions are not met for whatever your conditions are retry retry retry so",
    "start": "1163600",
    "end": "1169570"
  },
  {
    "text": "you'll never actually get any sort of fairly failure all you'll know is that all of a sudden your control plane is down and you have no idea why and you",
    "start": "1169570",
    "end": "1176169"
  },
  {
    "text": "have no idea how to start it so be really careful think about this very carefully all right yes exactly the time",
    "start": "1176169",
    "end": "1185409"
  },
  {
    "start": "1182000",
    "end": "1182000"
  },
  {
    "text": "so now that's best practices for run executors but this is cube con where",
    "start": "1185409",
    "end": "1191049"
  },
  {
    "text": "your cube root of these developers and so I'm really excited to talk about best practices for plugin developers a lot of",
    "start": "1191049",
    "end": "1196480"
  },
  {
    "text": "these slides just come from questions and discussions we've had in the various slacks and I think there's a lot to learn from this even if you're never",
    "start": "1196480",
    "end": "1201940"
  },
  {
    "text": "going to develop a CNI plugin first of all because a you should develop a CNI plugin because they're awesome and really easy and",
    "start": "1201940",
    "end": "1207040"
  },
  {
    "text": "second of all it's really I think it's important one of the values of coming to a conference like this is that you get",
    "start": "1207040",
    "end": "1212590"
  },
  {
    "text": "to meet the maintainer --zz and you get to talk about the sort of things that they're worrying about and you get to understand why the software that you're",
    "start": "1212590",
    "end": "1217930"
  },
  {
    "text": "running is built the way it is so I think it's really great I love hearing about people talking about all sorts of difficult things to develop because I",
    "start": "1217930",
    "end": "1223660"
  },
  {
    "text": "really learn a lot even if I'm never going to go into that world so jumping in what are the best practices for you to write a CNI plugin",
    "start": "1223660",
    "end": "1230610"
  },
  {
    "text": "the first thing you need to do and we should all really do this is to understand the lifecycle of pods and",
    "start": "1230610",
    "end": "1237820"
  },
  {
    "start": "1231000",
    "end": "1231000"
  },
  {
    "text": "cubelet and how things are executed the cubelet is massively parallel has hundreds of go routines and it has very",
    "start": "1237820",
    "end": "1244390"
  },
  {
    "text": "few guarantees it gives you exactly one guarantee in the world of CNI C&I has",
    "start": "1244390",
    "end": "1250360"
  },
  {
    "text": "the notion of a sorry about that CNI has the notion of a container ID some sort",
    "start": "1250360",
    "end": "1255880"
  },
  {
    "text": "of UUID a free text field that identifies a container it's a meaningless thing",
    "start": "1255880",
    "end": "1261160"
  },
  {
    "text": "it's expected to be righted by the runtime the spec requires and the cubelet does guarantee that you're going",
    "start": "1261160",
    "end": "1267130"
  },
  {
    "text": "to see exactly one ad request for each CNI container ID and this is the only thing you can rely on you cannot assume",
    "start": "1267130",
    "end": "1276070"
  },
  {
    "text": "that you will see a delete a short amount of time after a sandbox or a pod",
    "start": "1276070",
    "end": "1281500"
  },
  {
    "text": "is deleted you can't assume that you'll see a delete before the node has been rebooted you may see the delete after",
    "start": "1281500",
    "end": "1287020"
  },
  {
    "text": "the reboot you might not see a delete before you've got a crash looking pod that runs a thousand times and you run out of IP addresses on the node no",
    "start": "1287020",
    "end": "1293920"
  },
  {
    "text": "guarantees and you might not see a delete ever because your node might get chaos monkey eater have a bad disk or going to space so you need to be",
    "start": "1293920",
    "end": "1301540"
  },
  {
    "text": "prepared as a CNI plug an author to garbage collect resources externally and a really common best practice is to",
    "start": "1301540",
    "end": "1307090"
  },
  {
    "text": "store state that dies after a reboot in slash run really simple guaranteed post",
    "start": "1307090",
    "end": "1313300"
  },
  {
    "text": "reboot delete if you use any other identifier as your primary key it might",
    "start": "1313300",
    "end": "1319809"
  },
  {
    "text": "be reused by the cubelet you cannot doubt you even pod they may be reused this has caused production bugs in in",
    "start": "1319809",
    "end": "1327070"
  },
  {
    "text": "commercial CNI plugins the where the race condition is something like this if",
    "start": "1327070",
    "end": "1333429"
  },
  {
    "text": "you have a pod with the same name but two different pot IDs add a one a Crash's at some point in time the cubit",
    "start": "1333429",
    "end": "1340750"
  },
  {
    "text": "is going to restart it and it might restart it and do an ad of a two before it does the delete you delete a one but",
    "start": "1340750",
    "end": "1349150"
  },
  {
    "text": "if you're using a as your primary key a two is now offline right all this comes from you need to understand how the",
    "start": "1349150",
    "end": "1354760"
  },
  {
    "text": "cubelet works the second thing you need to understand is you need to understand the host network the host networking",
    "start": "1354760",
    "end": "1361330"
  },
  {
    "start": "1356000",
    "end": "1356000"
  },
  {
    "text": "environment kubernetes generally expects that all packets leaving a pod traverse",
    "start": "1361330",
    "end": "1366580"
  },
  {
    "text": "the host and this has a lot of subtle implications so most plugins for reasons of",
    "start": "1366580",
    "end": "1372850"
  },
  {
    "text": "efficiency do all of their work in the host networking namespace for a lot of reasons right duplicating functionality",
    "start": "1372850",
    "end": "1379240"
  },
  {
    "text": "duplicating IP tables rules duplicating routing tables rules and every single pods networking namespace would be a waste these are this is all non payable",
    "start": "1379240",
    "end": "1386680"
  },
  {
    "text": "memory right and more IP tables rules mulch more traversal is a waste of time and energy there's also a requirement",
    "start": "1386680",
    "end": "1393220"
  },
  {
    "text": "that host networking pods be more or less equivalent right so anything that a non host networking pocket access a host",
    "start": "1393220",
    "end": "1399700"
  },
  {
    "text": "networking pod should also be able to access right they should be uniform and also in some cases it may be that if",
    "start": "1399700",
    "end": "1406690"
  },
  {
    "text": "you're programming the pods networking namespace it's a little bit of a leak right you don't necessarily want to set",
    "start": "1406690",
    "end": "1411940"
  },
  {
    "text": "up your service rules for every single service inside every single pod because now those pods can enumerate all",
    "start": "1411940",
    "end": "1418420"
  },
  {
    "text": "your services so you have to program the host network you might as well only program the host network not only in CNI",
    "start": "1418420",
    "end": "1426820"
  },
  {
    "text": "but also non CNI functionality is also generally generally only implemented on the host network so cube proxy love it",
    "start": "1426820",
    "end": "1434170"
  },
  {
    "text": "or hate it cube proxy does but it does Dena it rewrites destinations these rules are",
    "start": "1434170",
    "end": "1439810"
  },
  {
    "text": "almost always only installed in the hosts IP tables space right uses IP tables or now uses IP vs which is",
    "start": "1439810",
    "end": "1446770"
  },
  {
    "text": "awesome and really high performance it only does this in the hosts networking namespace most Network policy providers",
    "start": "1446770",
    "end": "1452920"
  },
  {
    "text": "also only provision only program their firewall rules in the hosts IP tables namespace traffic shaping and overlay",
    "start": "1452920",
    "end": "1460090"
  },
  {
    "text": "networks of course if you're programming a routing table you only want to do it once so you did in the host networking namespace so once you understand what",
    "start": "1460090",
    "end": "1467920"
  },
  {
    "text": "the hosts networking names what-what-what has generally done inside the host network you can decide whether or not you want",
    "start": "1467920",
    "end": "1474250"
  },
  {
    "text": "to give it up you can choose to re-implement this for example psyllium reimplemented I don't",
    "start": "1474250",
    "end": "1481330"
  },
  {
    "text": "care about this now that you know I don't care about this I want to do something I want to connect my container",
    "start": "1481330",
    "end": "1486940"
  },
  {
    "text": "directly to the network this works really well it's really fast it's very high-performance you can do Mac VLAN you",
    "start": "1486940",
    "end": "1492520"
  },
  {
    "text": "can do SR iov and and pull off and give it a chunk of a PCI device and so lesson",
    "start": "1492520",
    "end": "1498220"
  },
  {
    "text": "from all of this is that as with all systems you can take these nice clean",
    "start": "1498220",
    "end": "1503679"
  },
  {
    "text": "abstractions and you can give them up a little bit in exchange for speed you just need to understand the trade-off that you're making the third thing to be",
    "start": "1503679",
    "end": "1512200"
  },
  {
    "start": "1510000",
    "end": "1510000"
  },
  {
    "text": "aware of if you are a plugin author is to be wary of hairpin now a hairpin is",
    "start": "1512200",
    "end": "1518980"
  },
  {
    "text": "anytime a packet goes back to its destination and CNI plugins must handle",
    "start": "1518980",
    "end": "1524799"
  },
  {
    "text": "these two cases see and I expect that kubernetes must be fully connected so",
    "start": "1524799",
    "end": "1529840"
  },
  {
    "text": "you have to handle anytime a pod talks to a service talks to a pod on the same host and you have to handle anytime a",
    "start": "1529840",
    "end": "1537130"
  },
  {
    "text": "pod talks to a service talks back to itself and this has caused production",
    "start": "1537130",
    "end": "1543070"
  },
  {
    "text": "outages and it was my fault yeah so how",
    "start": "1543070",
    "end": "1549580"
  },
  {
    "text": "do you solve this the solution if you want to talk technical the solution is to masquerade the source IP address but",
    "start": "1549580",
    "end": "1555159"
  },
  {
    "text": "the real solution is to make sure that you have a test case for this if your C and I plug an author make sure you test",
    "start": "1555159",
    "end": "1560679"
  },
  {
    "text": "for this if you are evaluating cni plugins make sure that your acceptance criteria includes this as a test",
    "start": "1560679",
    "end": "1566320"
  },
  {
    "text": "otherwise you will get bitten some CNI plugins this does work only if you",
    "start": "1566320",
    "end": "1571780"
  },
  {
    "text": "configure it in the correct manner so you absolutely need to test for this when you're evaluating evaluating your CNI plugins and the fourth best practice",
    "start": "1571780",
    "end": "1581260"
  },
  {
    "start": "1579000",
    "end": "1579000"
  },
  {
    "text": "if you are a CNI plugin author is to use this cool new feature that came with C",
    "start": "1581260",
    "end": "1586299"
  },
  {
    "text": "and is only a year old called capability arguments so the cubelet now will fill",
    "start": "1586299",
    "end": "1593770"
  },
  {
    "text": "in dynamic configuration into the cni configuration file previously it basically just copied the file from disk",
    "start": "1593770",
    "end": "1600190"
  },
  {
    "text": "and spit it right out directly to the plugins standard in this is really",
    "start": "1600190",
    "end": "1605230"
  },
  {
    "text": "awesome because it means that you can reduce your dependency in the API server which means that you have less of a",
    "start": "1605230",
    "end": "1610450"
  },
  {
    "text": "bootstrapping problem and you have higher performance capability arguments are defined in the cni spec and need to",
    "start": "1610450",
    "end": "1616510"
  },
  {
    "text": "be implemented in the cubelet the current capability right now is host port mappings in other words host port",
    "start": "1616510",
    "end": "1622600"
  },
  {
    "text": "mappings is defined in the pod spec and Hubert Eddy's will automatically put",
    "start": "1622600",
    "end": "1628179"
  },
  {
    "text": "that into each pull into each each pod that has port mappings installed future",
    "start": "1628179",
    "end": "1636460"
  },
  {
    "text": "capabilities that are going to be coming with probably Korea DS 112 maybe 111 if",
    "start": "1636460",
    "end": "1641710"
  },
  {
    "text": "we get our stuff together is going to be passing the pod cider inside the network configuration and bandwidth limits",
    "start": "1641710",
    "end": "1648400"
  },
  {
    "text": "inside the networking configuration and the real goal of the cni project is to",
    "start": "1648400",
    "end": "1654010"
  },
  {
    "text": "be able to get up a pod using kubernetes get it bring up at kubernetes pod",
    "start": "1654010",
    "end": "1659290"
  },
  {
    "text": "without having to talk to the api api server at all right this is a any sort of dynamic configuration that",
    "start": "1659290",
    "end": "1664419"
  },
  {
    "text": "communities passes we should be able to represent in our configuration file so if you find something where this isn't",
    "start": "1664419",
    "end": "1669970"
  },
  {
    "text": "the case file a bug and we will we will try and fix it capability arguments look",
    "start": "1669970",
    "end": "1675580"
  },
  {
    "text": "a little bit like this this is the structure on disk you need to flag as an",
    "start": "1675580",
    "end": "1681010"
  },
  {
    "text": "administrator writing your configuration file you need to flag which capabilities your plugins are capable of your vendor",
    "start": "1681010",
    "end": "1687790"
  },
  {
    "text": "should tell you this if you are using any sort of vendored manifest and the reason we do this is that we don't necessarily want to care in the",
    "start": "1687790",
    "end": "1694360"
  },
  {
    "text": "kubernetes side about how port mappings are implemented that depends on if you're using BPF that depends on if you",
    "start": "1694360",
    "end": "1700480"
  },
  {
    "text": "get two pass of the hosts IP tables or kubernetes can make no assumptions as to how this can actually be accomplished so instead kubernetes only can see if a",
    "start": "1700480",
    "end": "1709240"
  },
  {
    "text": "particular configuration declares that it supports port mappings so if you say that my configuration has a port mapping",
    "start": "1709240",
    "end": "1716169"
  },
  {
    "text": "capability what kubernetes will do is the standard in that is passed to the actual plugin we'll have this section",
    "start": "1716169",
    "end": "1722350"
  },
  {
    "text": "replaced with this the runtime config with the port mapping key and that will",
    "start": "1722350",
    "end": "1727809"
  },
  {
    "text": "contain the dynamic and mate information from the api server another best",
    "start": "1727809",
    "end": "1735460"
  },
  {
    "text": "practice for the developers is to be aware of plug I mentioned it on the administrator side",
    "start": "1735460",
    "end": "1740799"
  },
  {
    "text": "plug-in chaining is awesome plugin chaining is a great way for you as an administrator to write a very simple plugin that does just what you want",
    "start": "1740799",
    "end": "1747610"
  },
  {
    "text": "plug-in chaining is also super useful if you are a networking vendor because",
    "start": "1747610",
    "end": "1753270"
  },
  {
    "text": "sorry about that because it means that you can now expose your functionality as",
    "start": "1753270",
    "end": "1758950"
  },
  {
    "text": "to something you provide say firewall rules without necessarily having to dictate the entire networking stack it",
    "start": "1758950",
    "end": "1765880"
  },
  {
    "text": "allows you to be flexible and allows your plugin to be more available to more customers so this is super common for",
    "start": "1765880",
    "end": "1772299"
  },
  {
    "text": "post setup tweaking this is how it looks this is the cni plugin this is the CI",
    "start": "1772299",
    "end": "1778270"
  },
  {
    "start": "1774000",
    "end": "1774000"
  },
  {
    "text": "configuration file on disk and then this in green is what your binary is actually",
    "start": "1778270",
    "end": "1784330"
  },
  {
    "text": "going to see from the cubelet you can see there I'm imagining the second",
    "start": "1784330",
    "end": "1790690"
  },
  {
    "text": "plug-in that's going to be executed it executes some in row from top to bottom this plugin is called IP tables allow and what that plugin is going to see is",
    "start": "1790690",
    "end": "1797289"
  },
  {
    "text": "it's going to see its configuration and it's also going to see the previous result from the previous plug-in and",
    "start": "1797289",
    "end": "1804340"
  },
  {
    "text": "this is really cool because now you can do things that rely exactly on the previous result you can do things like",
    "start": "1804340",
    "end": "1809679"
  },
  {
    "text": "in this case this plugin is going to do add an IP tables rule to bring to allow either this interface or to allow this",
    "start": "1809679",
    "end": "1816220"
  },
  {
    "text": "IP address this is something you can only do with dynamic plug-in chaining the details of this specified but",
    "start": "1816220",
    "end": "1824950"
  },
  {
    "start": "1821000",
    "end": "1821000"
  },
  {
    "text": "important to understand that the plugins are executed first to last and the previous output is passed to the next",
    "start": "1824950",
    "end": "1830080"
  },
  {
    "text": "one and only the last plugin dictates what cubelet understands to be the IP",
    "start": "1830080",
    "end": "1835299"
  },
  {
    "text": "address so the last plug-in writes the result back to the cubelet now for delete plugins are run in reverse order",
    "start": "1835299",
    "end": "1841240"
  },
  {
    "text": "this is a problem with the spec as written which is that they plugin that runs last gets to know the IP address on",
    "start": "1841240",
    "end": "1846940"
  },
  {
    "text": "add but it doesn't know the IP address on delete so we're actually fixing this in spec as you're 0.4 with essentially",
    "start": "1846940",
    "end": "1853090"
  },
  {
    "text": "cached results so this is going to be a lot more usable if you're writing a plug-in in I think 0.4 is going to be",
    "start": "1853090",
    "end": "1860530"
  },
  {
    "text": "released in the next month or two so what this means what I really want to",
    "start": "1860530",
    "end": "1865929"
  },
  {
    "text": "emphasize for networking vendors is that if your plugin only touches the host side or if it operates in a mode where",
    "start": "1865929",
    "end": "1871539"
  },
  {
    "text": "it only touches the hoe side then it can easily be a chained plug-in right and for example imagine a",
    "start": "1871539",
    "end": "1877059"
  },
  {
    "text": "firewall plugin let's say calico right calico is a networking network policy provider but calico could",
    "start": "1877059",
    "end": "1882940"
  },
  {
    "text": "it doesn't right now hey Brian it doesn't right now but it should be able to for example say work with virtual",
    "start": "1882940",
    "end": "1889030"
  },
  {
    "text": "machines you should allow you should use chain plugins to allow administrators to swap out the connectivity plug-in wire",
    "start": "1889030",
    "end": "1896110"
  },
  {
    "text": "as you can provide perhaps your policy or reach ability plugins that's separate from connectivity cool there's a lot of",
    "start": "1896110",
    "end": "1903190"
  },
  {
    "text": "information but I kind of wanted to get technical very briefly I'm going to talk about what's next CNI 0.4 is going to be released in the",
    "start": "1903190",
    "end": "1911410"
  },
  {
    "start": "1908000",
    "end": "1908000"
  },
  {
    "text": "next month or so and the big thing that it has is a get verb result caching and more capability arguments get has wound",
    "start": "1911410",
    "end": "1919030"
  },
  {
    "text": "up with a lot of corner cases so it took us a really long time to figure out how to do this exactly correct the spec",
    "start": "1919030",
    "end": "1924130"
  },
  {
    "text": "language still needs a little cleanup the big one is result caching which shouldn't matter to most administrators",
    "start": "1924130",
    "end": "1929290"
  },
  {
    "text": "but it's going to allow chain plugins to provide a lot more functionality and for them to not necessarily have to write",
    "start": "1929290",
    "end": "1935290"
  },
  {
    "text": "state to disk if anybody's writing say it's a disk it should be the runtime or a stable layer",
    "start": "1935290",
    "end": "1941580"
  },
  {
    "text": "also coming soon is CNI 1.0 hopefully it will have no new features hopefully it",
    "start": "1941580",
    "end": "1948160"
  },
  {
    "text": "will just have a better specification what's next ipv6 CNI has supported ipv6 for years",
    "start": "1948160",
    "end": "1955620"
  },
  {
    "start": "1951000",
    "end": "1951000"
  },
  {
    "text": "kubernetes has not kubernetes has alpha p v6 points alfe ipv6 and 1.9 dual stack",
    "start": "1955620",
    "end": "1962890"
  },
  {
    "text": "support is sort of being designed but not a lot of progress has been made on",
    "start": "1962890",
    "end": "1968169"
  },
  {
    "text": "that yet I'll still a lot of work to do still looking for contributors still looking for people to review the design",
    "start": "1968169",
    "end": "1973380"
  },
  {
    "text": "a big one that everybody wants that everybody in this particular community",
    "start": "1973380",
    "end": "1979480"
  },
  {
    "start": "1975000",
    "end": "1975000"
  },
  {
    "text": "is working very hard on is multi networking CNI always has been and always will be a single network per",
    "start": "1979480",
    "end": "1986500"
  },
  {
    "text": "configuration file more or less there should be one interface in your pod for a single network configuration file",
    "start": "1986500",
    "end": "1993309"
  },
  {
    "text": "however there are is a use case there's lots of use cases for multiple networks there is a CNI pseudo plugin right now",
    "start": "1993309",
    "end": "2000660"
  },
  {
    "text": "that will just execute multiple CNI plugins it's a bit of a hack but it has wide adoption that tells us that we need",
    "start": "2000660",
    "end": "2005669"
  },
  {
    "text": "to do better supporting this in kubernetes right so there's a lot of things to figure out in",
    "start": "2005669",
    "end": "2011760"
  },
  {
    "text": "this design a lot of subtle questions that need to be answered for example well pods always have this default",
    "start": "2011760",
    "end": "2017160"
  },
  {
    "text": "network well pods always have this a.com and the answer that we've decided on is yes pods always pods should assume that",
    "start": "2017160",
    "end": "2024180"
  },
  {
    "text": "any additional CNI configurations that are executed will be additional it real",
    "start": "2024180",
    "end": "2029250"
  },
  {
    "text": "always be an easy row this will be directly connected to the node a big",
    "start": "2029250",
    "end": "2034260"
  },
  {
    "text": "question that we've decided to punt on for now is how to expose additional interfaces or how to expose additional",
    "start": "2034260",
    "end": "2039840"
  },
  {
    "text": "IP addresses if you remember way back in the beginning PAH type II was a single object that is not changing for now so",
    "start": "2039840",
    "end": "2047070"
  },
  {
    "text": "you will need to use these endpoints manually that problem is not going to be",
    "start": "2047070",
    "end": "2052169"
  },
  {
    "text": "solved for you right now this might change we're looking for good solutions for this what about security no idea not",
    "start": "2052170",
    "end": "2060570"
  },
  {
    "text": "on the plan for right now there is no plan as of yet to implement to include this in for something along the lines of",
    "start": "2060570",
    "end": "2066090"
  },
  {
    "text": "pod security policy so if you don't trust your administrators if you have access to a network that you think is",
    "start": "2066090",
    "end": "2071280"
  },
  {
    "text": "needing to be need need to be secure that is not yet supported in the current draft for multi networking and then what",
    "start": "2071280",
    "end": "2078030"
  },
  {
    "text": "about hairpin yeah good question we figured it out yet part of the multi",
    "start": "2078030",
    "end": "2084510"
  },
  {
    "start": "2081000",
    "end": "2081000"
  },
  {
    "text": "networking app wrote part of the multi networking working group is also a lot seeking a way to combine device plugins so the device plug-in interface inside",
    "start": "2084510",
    "end": "2092010"
  },
  {
    "text": "kubernetes combine that with multi networking right makes a lot of sense there's a lot of common features that we're that could be thought of",
    "start": "2092010",
    "end": "2098120"
  },
  {
    "text": "functionality that should be shared right device plug-ins allocated device device plugins managed schedule",
    "start": "2098120",
    "end": "2103440"
  },
  {
    "text": "resources none of these things are in CNI CNI knows how to initialize the network CNI knows how to hand an IP",
    "start": "2103440",
    "end": "2108750"
  },
  {
    "text": "address back to the cubelet for it to expose right so there is a sort of an",
    "start": "2108750",
    "end": "2113970"
  },
  {
    "text": "interesting daemon right now that works entirely with annotations if this is something you're interested in and",
    "start": "2113970",
    "end": "2119340"
  },
  {
    "text": "getting it into core kubernetes join sig network because this is InDesign and this is a really cool feature that's",
    "start": "2119340",
    "end": "2125010"
  },
  {
    "text": "coming so what's next really that's up to you right this is a wide open community we take lots of pull requests",
    "start": "2125010",
    "end": "2131880"
  },
  {
    "text": "we have hundreds of contributors and we're going to have a meet the maintainer x' later today it's an active",
    "start": "2131880",
    "end": "2138360"
  },
  {
    "text": "specification there's lots to do so I'm really excited this community knows so much there's so much more we",
    "start": "2138360",
    "end": "2144140"
  },
  {
    "text": "can be so much more we can do that working is really complicated it's really diverse and I'm really excited to see what's next so thank you so much for",
    "start": "2144140",
    "end": "2152599"
  },
  {
    "text": "sticking through these technical details are there any questions so the question",
    "start": "2152599",
    "end": "2184010"
  },
  {
    "text": "was what happens when you change the configure the CI configuration file on disk what happens one of the how those",
    "start": "2184010",
    "end": "2190400"
  },
  {
    "text": "changes propagated and the answer is for existing networks for existing interfaces those changes are never",
    "start": "2190400",
    "end": "2195530"
  },
  {
    "text": "propagated because there is no change verb in CNI essentially only all new interfaces going forward will have the",
    "start": "2195530",
    "end": "2202130"
  },
  {
    "text": "configuration changes so if you change your configuration file in a substantial way you should just reboot the node yes",
    "start": "2202130",
    "end": "2211809"
  },
  {
    "text": "okay I know I'm late for lunch Oh so CNI",
    "start": "2211809",
    "end": "2222799"
  },
  {
    "text": "is used by rocket it's used by mezzos and it's used by Cloud Foundry yep all",
    "start": "2222799",
    "end": "2231710"
  },
  {
    "text": "right thank you very much enjoy lunch",
    "start": "2231710",
    "end": "2234880"
  }
]