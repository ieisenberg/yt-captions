[
  {
    "text": "all right thank you Anna uh hi uh my",
    "start": "599",
    "end": "3639"
  },
  {
    "text": "name is Victor I work at Cosmic we work",
    "start": "3639",
    "end": "5759"
  },
  {
    "text": "on an open source uh web assembly host",
    "start": "5759",
    "end": "9240"
  },
  {
    "text": "called wasm Cloud uh and I want to talk",
    "start": "9240",
    "end": "11799"
  },
  {
    "text": "today about the uh using otel uh and how",
    "start": "11799",
    "end": "16560"
  },
  {
    "text": "observability looks and can look in web",
    "start": "16560",
    "end": "20000"
  },
  {
    "text": "assembly uh so just a quick agenda first",
    "start": "20000",
    "end": "22560"
  },
  {
    "text": "we're going to talk about observability",
    "start": "22560",
    "end": "24519"
  },
  {
    "text": "right just just a quick level set on",
    "start": "24519",
    "end": "26439"
  },
  {
    "text": "what I assume everyone's doing and and",
    "start": "26439",
    "end": "28119"
  },
  {
    "text": "sort of looking to do in their own",
    "start": "28119",
    "end": "29480"
  },
  {
    "text": "observ",
    "start": "29480",
    "end": "30480"
  },
  {
    "text": "Stacks uh the web assembly the sort of",
    "start": "30480",
    "end": "33000"
  },
  {
    "text": "what and the why for people who aren't",
    "start": "33000",
    "end": "35040"
  },
  {
    "text": "familiar with it uh and then sort of how",
    "start": "35040",
    "end": "37280"
  },
  {
    "text": "these come together right uh a quick",
    "start": "37280",
    "end": "39480"
  },
  {
    "text": "show of hands how many people have used",
    "start": "39480",
    "end": "41399"
  },
  {
    "text": "web assembly",
    "start": "41399",
    "end": "42719"
  },
  {
    "text": "before okay all right so um for people",
    "start": "42719",
    "end": "45719"
  },
  {
    "text": "who are watching that's about let's say",
    "start": "45719",
    "end": "47680"
  },
  {
    "text": "10 people um which is more than more",
    "start": "47680",
    "end": "51239"
  },
  {
    "text": "than uh more than has been in the past",
    "start": "51239",
    "end": "54199"
  },
  {
    "text": "um but just going on to",
    "start": "54199",
    "end": "56160"
  },
  {
    "text": "observability um this I think is pretty",
    "start": "56160",
    "end": "58800"
  },
  {
    "text": "pretty standard for everyone in this",
    "start": "58800",
    "end": "60039"
  },
  {
    "text": "track and everyone's kind of used to",
    "start": "60039",
    "end": "61680"
  },
  {
    "text": "this stuff but in general when I say",
    "start": "61680",
    "end": "63399"
  },
  {
    "text": "observability I mean getting metrics",
    "start": "63399",
    "end": "65799"
  },
  {
    "text": "traces logging uh and visualization um",
    "start": "65799",
    "end": "69560"
  },
  {
    "text": "as previous talks have mentioned there's",
    "start": "69560",
    "end": "70680"
  },
  {
    "text": "also profiling now is is is now part of",
    "start": "70680",
    "end": "72520"
  },
  {
    "text": "otel but um but primarily we're looking",
    "start": "72520",
    "end": "75000"
  },
  {
    "text": "at getting these um hooked up to our",
    "start": "75000",
    "end": "76840"
  },
  {
    "text": "apps and figuring out how our apps",
    "start": "76840",
    "end": "78960"
  },
  {
    "text": "perform uh and how they",
    "start": "78960",
    "end": "82799"
  },
  {
    "text": "behave uh what I think is new to to most",
    "start": "82799",
    "end": "85479"
  },
  {
    "text": "people in the in in the room is web",
    "start": "85479",
    "end": "88720"
  },
  {
    "text": "assembly right so what is web assembly",
    "start": "88720",
    "end": "90960"
  },
  {
    "text": "this is something I want to sort of",
    "start": "90960",
    "end": "92040"
  },
  {
    "text": "level set here as well web assembly is a",
    "start": "92040",
    "end": "95600"
  },
  {
    "text": "compile Target so just like you'd",
    "start": "95600",
    "end": "98880"
  },
  {
    "text": "compile let's say like a go binary or uh",
    "start": "98880",
    "end": "102119"
  },
  {
    "text": "rust binary or um other other languages",
    "start": "102119",
    "end": "105920"
  },
  {
    "text": "to a program that can run on x86 right",
    "start": "105920",
    "end": "108840"
  },
  {
    "text": "that's just binary data if you open the",
    "start": "108840",
    "end": "110520"
  },
  {
    "text": "file there's just you know gibberish in",
    "start": "110520",
    "end": "112640"
  },
  {
    "text": "there uh binary in there um web assembly",
    "start": "112640",
    "end": "115880"
  },
  {
    "text": "is a kind of binary format that you",
    "start": "115880",
    "end": "117759"
  },
  {
    "text": "compile your programs to right so you",
    "start": "117759",
    "end": "120920"
  },
  {
    "text": "just like if you compiling to a binary",
    "start": "120920",
    "end": "122920"
  },
  {
    "text": "that runs on uh a certain architecture",
    "start": "122920",
    "end": "126479"
  },
  {
    "text": "you compile your code to a binary that",
    "start": "126479",
    "end": "129440"
  },
  {
    "text": "runs on web assembly or runs on a web",
    "start": "129440",
    "end": "131640"
  },
  {
    "text": "assembly",
    "start": "131640",
    "end": "133040"
  },
  {
    "text": "runtime uh this is similar to the jar",
    "start": "133040",
    "end": "135720"
  },
  {
    "text": "and the Java model right so in Java you",
    "start": "135720",
    "end": "138120"
  },
  {
    "text": "compile a jar uh you compile Java code",
    "start": "138120",
    "end": "140440"
  },
  {
    "text": "to a jar and that runs you know on a uh",
    "start": "140440",
    "end": "144200"
  },
  {
    "text": "Java virtual machine right uh and that's",
    "start": "144200",
    "end": "146519"
  },
  {
    "text": "a very very similar uh experience to web",
    "start": "146519",
    "end": "148840"
  },
  {
    "text": "assembly except that you probably",
    "start": "148840",
    "end": "150760"
  },
  {
    "text": "wouldn't try and embed Java or the JRE",
    "start": "150760",
    "end": "154599"
  },
  {
    "text": "anywhere in uh that isn't you know",
    "start": "154599",
    "end": "156760"
  },
  {
    "text": "already Java U but this you can do with",
    "start": "156760",
    "end": "159319"
  },
  {
    "text": "web assembly so uh wasm time is the uh",
    "start": "159319",
    "end": "162800"
  },
  {
    "text": "Flagship web assembly runtime and it",
    "start": "162800",
    "end": "164599"
  },
  {
    "text": "embeds very very easily uh along with",
    "start": "164599",
    "end": "167800"
  },
  {
    "text": "being able to embed easily you have",
    "start": "167800",
    "end": "169920"
  },
  {
    "text": "really good security so this is uh",
    "start": "169920",
    "end": "171840"
  },
  {
    "text": "everything is isolated by default right",
    "start": "171840",
    "end": "173720"
  },
  {
    "text": "there there you can't access the file",
    "start": "173720",
    "end": "175280"
  },
  {
    "text": "system you can't uh make Network calls",
    "start": "175280",
    "end": "177319"
  },
  {
    "text": "by default in web assembly and and there",
    "start": "177319",
    "end": "180440"
  },
  {
    "text": "is a lot of support across many",
    "start": "180440",
    "end": "182440"
  },
  {
    "text": "different ecosystems so one of the",
    "start": "182440",
    "end": "184599"
  },
  {
    "text": "things about web assembly that's",
    "start": "184599",
    "end": "185680"
  },
  {
    "text": "different and uh sort of different",
    "start": "185680",
    "end": "187239"
  },
  {
    "text": "especially with that jar example uh and",
    "start": "187239",
    "end": "189599"
  },
  {
    "text": "Java in general is that many languages",
    "start": "189599",
    "end": "192080"
  },
  {
    "text": "compile to web assembly uh and this list",
    "start": "192080",
    "end": "194760"
  },
  {
    "text": "is actually growing uh basically every",
    "start": "194760",
    "end": "197360"
  },
  {
    "text": "month and as more languages sort of push",
    "start": "197360",
    "end": "199680"
  },
  {
    "text": "changes Upstream that uh enable support",
    "start": "199680",
    "end": "202080"
  },
  {
    "text": "for web assembly so it's sort of uh",
    "start": "202080",
    "end": "205799"
  },
  {
    "text": "organized with best support in the top",
    "start": "205799",
    "end": "208000"
  },
  {
    "text": "left and sort of continuing continuing",
    "start": "208000",
    "end": "209640"
  },
  {
    "text": "over to the right um but a lot of great",
    "start": "209640",
    "end": "211879"
  },
  {
    "text": "support is in Rust and then go has uh",
    "start": "211879",
    "end": "214439"
  },
  {
    "text": "very good support uh including big go",
    "start": "214439",
    "end": "216959"
  },
  {
    "text": "and a smaller subset called tiny go uh",
    "start": "216959",
    "end": "220159"
  },
  {
    "text": "and then many of the other languages",
    "start": "220159",
    "end": "221879"
  },
  {
    "text": "there have great um web assembly support",
    "start": "221879",
    "end": "224040"
  },
  {
    "text": "and this list is",
    "start": "224040",
    "end": "225720"
  },
  {
    "text": "growing so in general why should you",
    "start": "225720",
    "end": "228360"
  },
  {
    "text": "care right uh web assembly is a new",
    "start": "228360",
    "end": "231519"
  },
  {
    "text": "binary format you may not be writing",
    "start": "231519",
    "end": "233560"
  },
  {
    "text": "code that targets it yet um but I think",
    "start": "233560",
    "end": "236319"
  },
  {
    "text": "in the future you will uh it is lighter",
    "start": "236319",
    "end": "240000"
  },
  {
    "text": "faster uh and in general U more secure",
    "start": "240000",
    "end": "243000"
  },
  {
    "text": "than containers in general and we right",
    "start": "243000",
    "end": "245879"
  },
  {
    "text": "now spend most of our time deploying to",
    "start": "245879",
    "end": "247640"
  },
  {
    "text": "containers and deploying often very very",
    "start": "247640",
    "end": "250040"
  },
  {
    "text": "large containers and that's something",
    "start": "250040",
    "end": "251519"
  },
  {
    "text": "that you don't have to do with web",
    "start": "251519",
    "end": "252599"
  },
  {
    "text": "assembly web assembly artifacts so like",
    "start": "252599",
    "end": "255159"
  },
  {
    "text": "your program once it's compiled should",
    "start": "255159",
    "end": "257239"
  },
  {
    "text": "be on the order of kilobytes so",
    "start": "257239",
    "end": "259199"
  },
  {
    "text": "kilobytes maybe megabytes and honestly",
    "start": "259199",
    "end": "262360"
  },
  {
    "text": "megabytes is is too big uh but you know",
    "start": "262360",
    "end": "265360"
  },
  {
    "text": "we deal with sometimes with components",
    "start": "265360",
    "end": "267000"
  },
  {
    "text": "that are on the order of 10 megabytes",
    "start": "267000",
    "end": "269120"
  },
  {
    "text": "when we um build interpreters and have",
    "start": "269120",
    "end": "271639"
  },
  {
    "text": "to we have to stuff the whole",
    "start": "271639",
    "end": "272919"
  },
  {
    "text": "interpreter inside but in general you",
    "start": "272919",
    "end": "274720"
  },
  {
    "text": "should be dealing with much much smaller",
    "start": "274720",
    "end": "276199"
  },
  {
    "text": "artifacts and this means faster boot",
    "start": "276199",
    "end": "278160"
  },
  {
    "text": "times this means faster response time um",
    "start": "278160",
    "end": "281800"
  },
  {
    "text": "for when you're um uh doing like",
    "start": "281800",
    "end": "283720"
  },
  {
    "text": "something like a cold start uh and it",
    "start": "283720",
    "end": "285840"
  },
  {
    "text": "means just everything running faster in",
    "start": "285840",
    "end": "288120"
  },
  {
    "text": "general uh one thing that's important",
    "start": "288120",
    "end": "291080"
  },
  {
    "text": "about web assembly is that it's not a",
    "start": "291080",
    "end": "293479"
  },
  {
    "text": "web assembly or containers or a web",
    "start": "293479",
    "end": "296120"
  },
  {
    "text": "assembly or kubernetes uh scenario they",
    "start": "296120",
    "end": "299759"
  },
  {
    "text": "work together so web assembly can run",
    "start": "299759",
    "end": "302039"
  },
  {
    "text": "very well in a container um we develop",
    "start": "302039",
    "end": "303720"
  },
  {
    "text": "WM Cloud which is a completely open",
    "start": "303720",
    "end": "305199"
  },
  {
    "text": "source uh project that runs web assembly",
    "start": "305199",
    "end": "307800"
  },
  {
    "text": "it makes it easy to run and we run in",
    "start": "307800",
    "end": "310240"
  },
  {
    "text": "containers we run on kubernetes we run",
    "start": "310240",
    "end": "312199"
  },
  {
    "text": "on bare metal you know we run on your",
    "start": "312199",
    "end": "313840"
  },
  {
    "text": "local machine uh you don't have to this",
    "start": "313840",
    "end": "316080"
  },
  {
    "text": "is not sort of a big cloud Tech if that",
    "start": "316080",
    "end": "318199"
  },
  {
    "text": "makes",
    "start": "318199",
    "end": "318960"
  },
  {
    "text": "sense uh and one important thing about",
    "start": "318960",
    "end": "321199"
  },
  {
    "text": "web assembly and how we use web assembly",
    "start": "321199",
    "end": "323360"
  },
  {
    "text": "in particular at Cosmic and what we do",
    "start": "323360",
    "end": "325600"
  },
  {
    "text": "with WM cloud is that you can avoid",
    "start": "325600",
    "end": "328759"
  },
  {
    "text": "patching multiple Tendencies uh in",
    "start": "328759",
    "end": "331360"
  },
  {
    "text": "multiple places so we built a",
    "start": "331360",
    "end": "334199"
  },
  {
    "text": "distributed web assembly or a way to run",
    "start": "334199",
    "end": "335919"
  },
  {
    "text": "web assembly in a distributed manner so",
    "start": "335919",
    "end": "337680"
  },
  {
    "text": "you can patch one area and have all your",
    "start": "337680",
    "end": "339919"
  },
  {
    "text": "apps update so most famously in recent",
    "start": "339919",
    "end": "343520"
  },
  {
    "text": "uh recent time the log forj",
    "start": "343520",
    "end": "345039"
  },
  {
    "text": "vulnerability sort of affected a lot of",
    "start": "345039",
    "end": "346560"
  },
  {
    "text": "systems at the same time and led to the",
    "start": "346560",
    "end": "348639"
  },
  {
    "text": "patching of multiple uh multiple",
    "start": "348639",
    "end": "350600"
  },
  {
    "text": "environments so obviously this means a",
    "start": "350600",
    "end": "353400"
  },
  {
    "text": "lot of people spent a lot of time sort",
    "start": "353400",
    "end": "355520"
  },
  {
    "text": "of just running around and doing nothing",
    "start": "355520",
    "end": "357360"
  },
  {
    "text": "but updating log forj and if you've",
    "start": "357360",
    "end": "359000"
  },
  {
    "text": "written any like Java you know that",
    "start": "359000",
    "end": "360440"
  },
  {
    "text": "that's like opening a pal XML somewhere",
    "start": "360440",
    "end": "363680"
  },
  {
    "text": "trying to figure out where the",
    "start": "363680",
    "end": "364560"
  },
  {
    "text": "dependencies are and like going through",
    "start": "364560",
    "end": "366520"
  },
  {
    "text": "and honestly probably having a pretty",
    "start": "366520",
    "end": "367880"
  },
  {
    "text": "bad time but one of the ways we can get",
    "start": "367880",
    "end": "371199"
  },
  {
    "text": "away from this and really centralize",
    "start": "371199",
    "end": "374560"
  },
  {
    "text": "this problem so that we can fix it",
    "start": "374560",
    "end": "375919"
  },
  {
    "text": "really easily is with web",
    "start": "375919",
    "end": "378919"
  },
  {
    "text": "assembly web assembly is also Cloud",
    "start": "378919",
    "end": "381039"
  },
  {
    "text": "native so it's growing in its adoption",
    "start": "381039",
    "end": "384520"
  },
  {
    "text": "amongst Cloud native companies and this",
    "start": "384520",
    "end": "386880"
  },
  {
    "text": "is only going to continue uh obviously",
    "start": "386880",
    "end": "389280"
  },
  {
    "text": "the native landscape is huge but as more",
    "start": "389280",
    "end": "391840"
  },
  {
    "text": "and more teams figure out that web",
    "start": "391840",
    "end": "393319"
  },
  {
    "text": "assembly is useful and web assembly can",
    "start": "393319",
    "end": "395680"
  },
  {
    "text": "be used to enhance their apps and also",
    "start": "395680",
    "end": "397759"
  },
  {
    "text": "to deploy their apps faster uh this is",
    "start": "397759",
    "end": "401160"
  },
  {
    "text": "going to grow uh I think that over the",
    "start": "401160",
    "end": "403960"
  },
  {
    "text": "coming years more and more companies",
    "start": "403960",
    "end": "405639"
  },
  {
    "text": "will be deploying web assembly and so um",
    "start": "405639",
    "end": "408160"
  },
  {
    "text": "as people who deal with observability or",
    "start": "408160",
    "end": "410000"
  },
  {
    "text": "as platform maintainers it's important",
    "start": "410000",
    "end": "411319"
  },
  {
    "text": "to know about it and to to know what to",
    "start": "411319",
    "end": "414800"
  },
  {
    "text": "expect so let's say you believe me and",
    "start": "414800",
    "end": "417840"
  },
  {
    "text": "um we're going to be going more and more",
    "start": "417840",
    "end": "420319"
  },
  {
    "text": "web assembly uh into applications onto",
    "start": "420319",
    "end": "423759"
  },
  {
    "text": "computers and servers in the in the",
    "start": "423759",
    "end": "425560"
  },
  {
    "text": "future um you say you compile your web",
    "start": "425560",
    "end": "428759"
  },
  {
    "text": "assembly what do you do right so you've",
    "start": "428759",
    "end": "431000"
  },
  {
    "text": "taken your code and I've I've got a a",
    "start": "431000",
    "end": "433639"
  },
  {
    "text": "very simple example here of um a very",
    "start": "433639",
    "end": "436160"
  },
  {
    "text": "overly complicated uh addition function",
    "start": "436160",
    "end": "438720"
  },
  {
    "text": "but let's just imagine that we're doing",
    "start": "438720",
    "end": "440199"
  },
  {
    "text": "some key value things and then we're",
    "start": "440199",
    "end": "442160"
  },
  {
    "text": "doing some HTTP things right so web",
    "start": "442160",
    "end": "444960"
  },
  {
    "text": "assembly can be written in terms of",
    "start": "444960",
    "end": "446960"
  },
  {
    "text": "interfaces and in terms of the",
    "start": "446960",
    "end": "449560"
  },
  {
    "text": "functionality that you want to access if",
    "start": "449560",
    "end": "452199"
  },
  {
    "text": "your platform grants you access to that",
    "start": "452199",
    "end": "454080"
  },
  {
    "text": "and by platform I mean let's for example",
    "start": "454080",
    "end": "456240"
  },
  {
    "text": "a wasm cloud instance a wasm cloud host",
    "start": "456240",
    "end": "458840"
  },
  {
    "text": "if it grants you that access as a as a",
    "start": "458840",
    "end": "460759"
  },
  {
    "text": "web assembly uh program you'll be able",
    "start": "460759",
    "end": "463400"
  },
  {
    "text": "to do all these operations and deliver a",
    "start": "463400",
    "end": "465919"
  },
  {
    "text": "result uh on the right is a small",
    "start": "465919",
    "end": "468120"
  },
  {
    "text": "illustration of how we connect uh web",
    "start": "468120",
    "end": "471520"
  },
  {
    "text": "assembly so web assembly modules over",
    "start": "471520",
    "end": "473479"
  },
  {
    "text": "there in purple and the capabilities",
    "start": "473479",
    "end": "475840"
  },
  {
    "text": "that they require so here you can see",
    "start": "475840",
    "end": "477639"
  },
  {
    "text": "that the code on the left clearly uses",
    "start": "477639",
    "end": "479520"
  },
  {
    "text": "some key value operations and then some",
    "start": "479520",
    "end": "481759"
  },
  {
    "text": "HTP stuff so we've got um on the right a",
    "start": "481759",
    "end": "485159"
  },
  {
    "text": "sort of illustration of a component",
    "start": "485159",
    "end": "486800"
  },
  {
    "text": "using a key value provider um and",
    "start": "486800",
    "end": "489759"
  },
  {
    "text": "provider is a wasm cloud term since it",
    "start": "489759",
    "end": "492039"
  },
  {
    "text": "provides functionality and then using a",
    "start": "492039",
    "end": "494879"
  },
  {
    "text": "HTTP provider to do sort of HTTP based",
    "start": "494879",
    "end": "497560"
  },
  {
    "text": "functionality um these the strongly",
    "start": "497560",
    "end": "499960"
  },
  {
    "text": "typed uh nature of these interfaces",
    "start": "499960",
    "end": "502120"
  },
  {
    "text": "means that generally you you need to ask",
    "start": "502120",
    "end": "505120"
  },
  {
    "text": "for permission to do certain actions and",
    "start": "505120",
    "end": "507159"
  },
  {
    "text": "then Grant it at the platform level",
    "start": "507159",
    "end": "511080"
  },
  {
    "text": "so you don't have to really focus on",
    "start": "511080",
    "end": "512240"
  },
  {
    "text": "this slide too much but this is uh a",
    "start": "512240",
    "end": "514200"
  },
  {
    "text": "little bit about how wasum Cloud runs",
    "start": "514200",
    "end": "517080"
  },
  {
    "text": "and how wasm cloud makes available all",
    "start": "517080",
    "end": "519599"
  },
  {
    "text": "the capabilities so what we talked about",
    "start": "519599",
    "end": "521200"
  },
  {
    "text": "a little bit um just now is on is on the",
    "start": "521200",
    "end": "523760"
  },
  {
    "text": "bottom right here where we have",
    "start": "523760",
    "end": "525680"
  },
  {
    "text": "interfaces um for secrets we have",
    "start": "525680",
    "end": "528040"
  },
  {
    "text": "interfaces for things like key value",
    "start": "528040",
    "end": "530120"
  },
  {
    "text": "we've got things uh like interfaces for",
    "start": "530120",
    "end": "531800"
  },
  {
    "text": "postgress so accessing databases and",
    "start": "531800",
    "end": "534040"
  },
  {
    "text": "this means that you don't have to worry",
    "start": "534040",
    "end": "536080"
  },
  {
    "text": "about for example setting up a",
    "start": "536080",
    "end": "537320"
  },
  {
    "text": "connection to your database right the",
    "start": "537320",
    "end": "539480"
  },
  {
    "text": "connection is just there you can write",
    "start": "539480",
    "end": "541079"
  },
  {
    "text": "your code for your component just your",
    "start": "541079",
    "end": "542680"
  },
  {
    "text": "business logic as if the connection is",
    "start": "542680",
    "end": "544680"
  },
  {
    "text": "there and then at runtime when you need",
    "start": "544680",
    "end": "546480"
  },
  {
    "text": "to uh instantiate your component when",
    "start": "546480",
    "end": "548519"
  },
  {
    "text": "you need to run your component you can",
    "start": "548519",
    "end": "550160"
  },
  {
    "text": "hook up the",
    "start": "550160",
    "end": "551279"
  },
  {
    "text": "database uh this means a lot of things",
    "start": "551279",
    "end": "554040"
  },
  {
    "text": "but um some of the most important things",
    "start": "554040",
    "end": "555200"
  },
  {
    "text": "is that you get really fast cold start",
    "start": "555200",
    "end": "557800"
  },
  {
    "text": "right your when your component comes up",
    "start": "557800",
    "end": "560160"
  },
  {
    "text": "to server requests you don't start",
    "start": "560160",
    "end": "561760"
  },
  {
    "text": "connecting to the database database",
    "start": "561760",
    "end": "563160"
  },
  {
    "text": "connections already there right um You",
    "start": "563160",
    "end": "565279"
  },
  {
    "text": "have pluggable databases right so if you",
    "start": "565279",
    "end": "567040"
  },
  {
    "text": "have an interface for a SQL database you",
    "start": "567040",
    "end": "568920"
  },
  {
    "text": "can plug SQL to it you can plug post",
    "start": "568920",
    "end": "571120"
  },
  {
    "text": "postris to it you can plug anything else",
    "start": "571120",
    "end": "573079"
  },
  {
    "text": "that speaks sort of SQL if you have the",
    "start": "573079",
    "end": "575279"
  },
  {
    "text": "contract written correctly now whether",
    "start": "575279",
    "end": "576959"
  },
  {
    "text": "you should do that or not is a is a",
    "start": "576959",
    "end": "578160"
  },
  {
    "text": "different question some people like uh",
    "start": "578160",
    "end": "579560"
  },
  {
    "text": "specific databases but um another thing",
    "start": "579560",
    "end": "582399"
  },
  {
    "text": "this enables is really high density so",
    "start": "582399",
    "end": "584600"
  },
  {
    "text": "we can fit a lot of just business uh",
    "start": "584600",
    "end": "587519"
  },
  {
    "text": "business logic components on the same",
    "start": "587519",
    "end": "591399"
  },
  {
    "text": "machine so we're here for observability",
    "start": "591440",
    "end": "593959"
  },
  {
    "text": "right so what does all this have to do",
    "start": "593959",
    "end": "595839"
  },
  {
    "text": "with observability so wasm Cloud comes",
    "start": "595839",
    "end": "598040"
  },
  {
    "text": "with observability out of the box",
    "start": "598040",
    "end": "600000"
  },
  {
    "text": "so when you perform an invocation and",
    "start": "600000",
    "end": "601760"
  },
  {
    "text": "this is a screenshot of uh graffo",
    "start": "601760",
    "end": "604560"
  },
  {
    "text": "dashboard but when you perform an",
    "start": "604560",
    "end": "606680"
  },
  {
    "text": "invocation we know that an HTTP request",
    "start": "606680",
    "end": "609560"
  },
  {
    "text": "for example comes in or for example if",
    "start": "609560",
    "end": "611360"
  },
  {
    "text": "if it's not an HTP request if it's like",
    "start": "611360",
    "end": "612800"
  },
  {
    "text": "from Kafka a message from kofka depends",
    "start": "612800",
    "end": "614480"
  },
  {
    "text": "on how your component is triggered if a",
    "start": "614480",
    "end": "617040"
  },
  {
    "text": "HTTP request comes in we know that an",
    "start": "617040",
    "end": "618880"
  },
  {
    "text": "HTP HTP request is started an invocation",
    "start": "618880",
    "end": "621720"
  },
  {
    "text": "has happened right so your component's",
    "start": "621720",
    "end": "623279"
  },
  {
    "text": "been called and then uh inside your",
    "start": "623279",
    "end": "625920"
  },
  {
    "text": "component um you can instrument and show",
    "start": "625920",
    "end": "628880"
  },
  {
    "text": "even you can show even uh a more",
    "start": "628880",
    "end": "630600"
  },
  {
    "text": "detailed Trace right if you're if you've",
    "start": "630600",
    "end": "632480"
  },
  {
    "text": "hooked up your component or your",
    "start": "632480",
    "end": "633760"
  },
  {
    "text": "providers um NE uh with the right with",
    "start": "633760",
    "end": "636519"
  },
  {
    "text": "the right code but this you know this",
    "start": "636519",
    "end": "639000"
  },
  {
    "text": "costs something this means you have to",
    "start": "639000",
    "end": "640760"
  },
  {
    "text": "instrument your component you have to",
    "start": "640760",
    "end": "642279"
  },
  {
    "text": "write code you have to sort of add to",
    "start": "642279",
    "end": "644440"
  },
  {
    "text": "what you have",
    "start": "644440",
    "end": "646320"
  },
  {
    "text": "already so um how do web assembly and",
    "start": "646320",
    "end": "651279"
  },
  {
    "text": "observability and otel go together we",
    "start": "651279",
    "end": "654279"
  },
  {
    "text": "think they work better together um what",
    "start": "654279",
    "end": "657040"
  },
  {
    "text": "we are aiming for is a world where",
    "start": "657040",
    "end": "658440"
  },
  {
    "text": "there's no migration step so you don't",
    "start": "658440",
    "end": "662120"
  },
  {
    "text": "um moving your code",
    "start": "662120",
    "end": "664079"
  },
  {
    "text": "from let's say regular go code to web",
    "start": "664079",
    "end": "666680"
  },
  {
    "text": "assembly should be easy and should be",
    "start": "666680",
    "end": "668160"
  },
  {
    "text": "seamless and your observability code",
    "start": "668160",
    "end": "670360"
  },
  {
    "text": "that's currently present right so the",
    "start": "670360",
    "end": "672279"
  },
  {
    "text": "ult SDK that you're using should just",
    "start": "672279",
    "end": "674360"
  },
  {
    "text": "work that's the world we want to live in",
    "start": "674360",
    "end": "676959"
  },
  {
    "text": "but a little bit farther or further than",
    "start": "676959",
    "end": "679880"
  },
  {
    "text": "that is we want instruction level",
    "start": "679880",
    "end": "682680"
  },
  {
    "text": "visibility this is something that we",
    "start": "682680",
    "end": "684279"
  },
  {
    "text": "wouldn't dare to do in any other",
    "start": "684279",
    "end": "686440"
  },
  {
    "text": "compiled language right you probably",
    "start": "686440",
    "end": "688200"
  },
  {
    "text": "wouldn't try and edit assembly yourself",
    "start": "688200",
    "end": "690839"
  },
  {
    "text": "or take apart you know the binary in an",
    "start": "690839",
    "end": "693839"
  },
  {
    "text": "executable and try and insert",
    "start": "693839",
    "end": "695200"
  },
  {
    "text": "instructions no one would do that but",
    "start": "695200",
    "end": "697200"
  },
  {
    "text": "web assembly you can uh and we want",
    "start": "697200",
    "end": "700320"
  },
  {
    "text": "essentially cross- language traces that",
    "start": "700320",
    "end": "702360"
  },
  {
    "text": "just",
    "start": "702360",
    "end": "704600"
  },
  {
    "text": "work so I'm going to show a demo uh of",
    "start": "704639",
    "end": "708839"
  },
  {
    "text": "the case where you want a regular Go app",
    "start": "708839",
    "end": "711839"
  },
  {
    "text": "with observability you already have to",
    "start": "711839",
    "end": "713959"
  },
  {
    "text": "just work um thanks Big thanks to Lucas",
    "start": "713959",
    "end": "717079"
  },
  {
    "text": "and uh Jonas who work at cosonic with me",
    "start": "717079",
    "end": "720680"
  },
  {
    "text": "as they help me put together this demo",
    "start": "720680",
    "end": "722959"
  },
  {
    "text": "uh and I'm going to switch to it right",
    "start": "722959",
    "end": "726200"
  },
  {
    "text": "now",
    "start": "726200",
    "end": "727760"
  },
  {
    "text": "okay can everyone see that is the text",
    "start": "727760",
    "end": "730639"
  },
  {
    "text": "large enough see some nodding okay",
    "start": "730639",
    "end": "733680"
  },
  {
    "text": "awesome all right so on the left we've",
    "start": "733680",
    "end": "736360"
  },
  {
    "text": "got our sort of usual go code right and",
    "start": "736360",
    "end": "740240"
  },
  {
    "text": "this is using the um Regular go otel SDK",
    "start": "740240",
    "end": "744440"
  },
  {
    "text": "right this is the kind of stuff this is",
    "start": "744440",
    "end": "745680"
  },
  {
    "text": "code honestly very similar to what you",
    "start": "745680",
    "end": "747760"
  },
  {
    "text": "would find in the getting started guide",
    "start": "747760",
    "end": "750240"
  },
  {
    "text": "right there's nothing nothing um fancy",
    "start": "750240",
    "end": "753000"
  },
  {
    "text": "here except for this little piece which",
    "start": "753000",
    "end": "757240"
  },
  {
    "text": "is actually a custom um reporter or",
    "start": "757240",
    "end": "761399"
  },
  {
    "text": "custom exporter for traces that are sent",
    "start": "761399",
    "end": "764440"
  },
  {
    "text": "so this is quite normal like if youve if",
    "start": "764440",
    "end": "766920"
  },
  {
    "text": "you've used um otel before obviously",
    "start": "766920",
    "end": "768519"
  },
  {
    "text": "you've dealt with like oh now we want to",
    "start": "768519",
    "end": "770079"
  },
  {
    "text": "push our traces somewhere else or we",
    "start": "770079",
    "end": "771959"
  },
  {
    "text": "want to push our traces to a different",
    "start": "771959",
    "end": "773040"
  },
  {
    "text": "provider you might have you might have",
    "start": "773040",
    "end": "774360"
  },
  {
    "text": "done this in the past and Chang the um",
    "start": "774360",
    "end": "776399"
  },
  {
    "text": "change the way you reported your traces",
    "start": "776399",
    "end": "778440"
  },
  {
    "text": "but the rest of this is pretty standard",
    "start": "778440",
    "end": "780639"
  },
  {
    "text": "right we've got sort of like you know",
    "start": "780639",
    "end": "782040"
  },
  {
    "text": "your Tracer start we sort of defer the",
    "start": "782040",
    "end": "784360"
  },
  {
    "text": "end of the span to the end of the",
    "start": "784360",
    "end": "785880"
  },
  {
    "text": "function um the code is pretty is pretty",
    "start": "785880",
    "end": "788880"
  },
  {
    "text": "standard um and what I'm going to show",
    "start": "788880",
    "end": "792160"
  },
  {
    "text": "here is an example of this basically",
    "start": "792160",
    "end": "795480"
  },
  {
    "text": "normal go code compiled as a web",
    "start": "795480",
    "end": "798399"
  },
  {
    "text": "component um with tracing and",
    "start": "798399",
    "end": "800920"
  },
  {
    "text": "observability",
    "start": "800920",
    "end": "803680"
  },
  {
    "text": "working so some of this will be a little",
    "start": "803680",
    "end": "806000"
  },
  {
    "text": "bit wasm Cloud specific but I want to",
    "start": "806000",
    "end": "808480"
  },
  {
    "text": "make it really clear that this is a",
    "start": "808480",
    "end": "810240"
  },
  {
    "text": "general web like this is General web",
    "start": "810240",
    "end": "811959"
  },
  {
    "text": "assembly code that actually can run in",
    "start": "811959",
    "end": "813240"
  },
  {
    "text": "multiple run times so one of the great",
    "start": "813240",
    "end": "814959"
  },
  {
    "text": "things about web assembly is that it's",
    "start": "814959",
    "end": "816399"
  },
  {
    "text": "an open standard that's being worked on",
    "start": "816399",
    "end": "818560"
  },
  {
    "text": "by many companies and many groups uh so",
    "start": "818560",
    "end": "822040"
  },
  {
    "text": "what I've done is actually I've started",
    "start": "822040",
    "end": "823279"
  },
  {
    "text": "a wasm cloud host which is we don't need",
    "start": "823279",
    "end": "825800"
  },
  {
    "text": "to focus on that too much but just this",
    "start": "825800",
    "end": "827680"
  },
  {
    "text": "is the thing that will run our web",
    "start": "827680",
    "end": "830440"
  },
  {
    "text": "assembly and what I'm going to do is I'm",
    "start": "830440",
    "end": "834160"
  },
  {
    "text": "going to",
    "start": "834160",
    "end": "836720"
  },
  {
    "text": "deploy uh I'll show it a little bit here",
    "start": "837680",
    "end": "840880"
  },
  {
    "text": "we've got um this looks very somewhat",
    "start": "840880",
    "end": "843320"
  },
  {
    "text": "kubernetes like uh in form in that it's",
    "start": "843320",
    "end": "846560"
  },
  {
    "text": "it's a it's a format and some yaml that",
    "start": "846560",
    "end": "849639"
  },
  {
    "text": "we use to declaratively um deploy",
    "start": "849639",
    "end": "852040"
  },
  {
    "text": "applications but this again you don't",
    "start": "852040",
    "end": "853920"
  },
  {
    "text": "have to worry too much about it except",
    "start": "853920",
    "end": "856040"
  },
  {
    "text": "for here where I'm specifying the web",
    "start": "856040",
    "end": "860000"
  },
  {
    "text": "assembly binary and again that is a file",
    "start": "860000",
    "end": "862120"
  },
  {
    "text": "that was produced by our build process",
    "start": "862120",
    "end": "864839"
  },
  {
    "text": "um so a wasm binary um and deploying",
    "start": "864839",
    "end": "868120"
  },
  {
    "text": "that binary to wasm cloud or just",
    "start": "868120",
    "end": "871000"
  },
  {
    "text": "running that",
    "start": "871000",
    "end": "872199"
  },
  {
    "text": "binary so I'm going to run",
    "start": "872199",
    "end": "876040"
  },
  {
    "text": "this okay so lots of output but in",
    "start": "876040",
    "end": "881000"
  },
  {
    "text": "general um what's happening now at this",
    "start": "881000",
    "end": "883839"
  },
  {
    "text": "point is that there is an HTP server",
    "start": "883839",
    "end": "885839"
  },
  {
    "text": "provider which let's say listens on a",
    "start": "885839",
    "end": "887839"
  },
  {
    "text": "port and when it gets a web request in",
    "start": "887839",
    "end": "890160"
  },
  {
    "text": "on that Port it triggers the component",
    "start": "890160",
    "end": "893199"
  },
  {
    "text": "that we have that we saw earlier the go",
    "start": "893199",
    "end": "895199"
  },
  {
    "text": "code that we saw on the",
    "start": "895199",
    "end": "897399"
  },
  {
    "text": "left and it triggers that component and",
    "start": "897399",
    "end": "900480"
  },
  {
    "text": "then um after it triggers that component",
    "start": "900480",
    "end": "902480"
  },
  {
    "text": "we're going to see uh otel traces get",
    "start": "902480",
    "end": "905240"
  },
  {
    "text": "generated so let's set up um I don't",
    "start": "905240",
    "end": "907800"
  },
  {
    "text": "know if y'all are familiar with this",
    "start": "907800",
    "end": "909120"
  },
  {
    "text": "project but there's a little project",
    "start": "909120",
    "end": "910560"
  },
  {
    "text": "called otel Tui or terminal user face",
    "start": "910560",
    "end": "914120"
  },
  {
    "text": "for for otel uh and what it does is it",
    "start": "914120",
    "end": "917959"
  },
  {
    "text": "shows you uh it sort of spins up a sort",
    "start": "917959",
    "end": "920639"
  },
  {
    "text": "of local observability stack uh and",
    "start": "920639",
    "end": "923320"
  },
  {
    "text": "shows you traces as they come in so what",
    "start": "923320",
    "end": "925279"
  },
  {
    "text": "we're going to do is we're going to hit",
    "start": "925279",
    "end": "926279"
  },
  {
    "text": "this",
    "start": "926279",
    "end": "927120"
  },
  {
    "text": "endpoint uh",
    "start": "927120",
    "end": "929519"
  },
  {
    "text": "the endpoint happens to be at 8080 so",
    "start": "929519",
    "end": "932319"
  },
  {
    "text": "and that's um a configuration thing sort",
    "start": "932319",
    "end": "934600"
  },
  {
    "text": "of down here not not not terribly",
    "start": "934600",
    "end": "936399"
  },
  {
    "text": "important but just to so it doesn't look",
    "start": "936399",
    "end": "938720"
  },
  {
    "text": "like a um complete mystery but so we're",
    "start": "938720",
    "end": "941319"
  },
  {
    "text": "going to curl this component and so",
    "start": "941319",
    "end": "943079"
  },
  {
    "text": "we've got our component uh it's already",
    "start": "943079",
    "end": "944839"
  },
  {
    "text": "responded right and so uh the component",
    "start": "944839",
    "end": "947079"
  },
  {
    "text": "that's running is actually a dog image",
    "start": "947079",
    "end": "949399"
  },
  {
    "text": "fetcher so I I'm not going to open this",
    "start": "949399",
    "end": "952199"
  },
  {
    "text": "in the in the browser but for those who",
    "start": "952199",
    "end": "953639"
  },
  {
    "text": "are watching online or want to or type",
    "start": "953639",
    "end": "955240"
  },
  {
    "text": "really fast you can try and uh visit",
    "start": "955240",
    "end": "957319"
  },
  {
    "text": "that URL and see see what breed comes up",
    "start": "957319",
    "end": "960759"
  },
  {
    "text": "but um what's really important is that",
    "start": "960759",
    "end": "962399"
  },
  {
    "text": "here at the",
    "start": "962399",
    "end": "963639"
  },
  {
    "text": "bottom we have uh an oel span that came",
    "start": "963639",
    "end": "967880"
  },
  {
    "text": "through right uh and so we have a",
    "start": "967880",
    "end": "972319"
  },
  {
    "text": "service that's reporting sort of like",
    "start": "972319",
    "end": "974199"
  },
  {
    "text": "performing its request uh performing",
    "start": "974199",
    "end": "976160"
  },
  {
    "text": "this HTP request uh and coming back and",
    "start": "976160",
    "end": "979399"
  },
  {
    "text": "it's pretty seamless right the what I'm",
    "start": "979399",
    "end": "981880"
  },
  {
    "text": "trying to convince you of here is that",
    "start": "981880",
    "end": "983120"
  },
  {
    "text": "your code actually doesn't change much",
    "start": "983120",
    "end": "984800"
  },
  {
    "text": "your code will just compile to a smaller",
    "start": "984800",
    "end": "987560"
  },
  {
    "text": "size um go to different places um",
    "start": "987560",
    "end": "990959"
  },
  {
    "text": "honestly boot faster uh and uh be a lot",
    "start": "990959",
    "end": "994279"
  },
  {
    "text": "more secure without much work on your",
    "start": "994279",
    "end": "995920"
  },
  {
    "text": "part right you wouldn't have to do too",
    "start": "995920",
    "end": "997199"
  },
  {
    "text": "much um most of the go code is pretty",
    "start": "997199",
    "end": "999079"
  },
  {
    "text": "standard",
    "start": "999079",
    "end": "1001480"
  },
  {
    "text": "here so just to go again uh and explain",
    "start": "1002839",
    "end": "1006199"
  },
  {
    "text": "sort of what",
    "start": "1006199",
    "end": "1007920"
  },
  {
    "text": "happened so I showed you a mostly normal",
    "start": "1007920",
    "end": "1011720"
  },
  {
    "text": "go code with the small caveat that it",
    "start": "1011720",
    "end": "1013720"
  },
  {
    "text": "was tinyo so these are these are where",
    "start": "1013720",
    "end": "1015199"
  },
  {
    "text": "the sort of Lies get lies get shown um",
    "start": "1015199",
    "end": "1018639"
  },
  {
    "text": "and",
    "start": "1018639",
    "end": "1020000"
  },
  {
    "text": "that compiling that code that's pretty",
    "start": "1020000",
    "end": "1021800"
  },
  {
    "text": "standard looking go code down to web",
    "start": "1021800",
    "end": "1023240"
  },
  {
    "text": "assembly was easy uh and obviously it",
    "start": "1023240",
    "end": "1027120"
  },
  {
    "text": "can't all be that easy right so the two",
    "start": "1027120",
    "end": "1030160"
  },
  {
    "text": "caveats here that are really important",
    "start": "1030160",
    "end": "1031520"
  },
  {
    "text": "is that we are using a custom exporter",
    "start": "1031520",
    "end": "1033678"
  },
  {
    "text": "which to be honest is not a huge caveat",
    "start": "1033679",
    "end": "1035520"
  },
  {
    "text": "because we are uh that that's a common",
    "start": "1035520",
    "end": "1037360"
  },
  {
    "text": "thing to do if you're moving between",
    "start": "1037360",
    "end": "1039319"
  },
  {
    "text": "environments uh or let's say providers",
    "start": "1039319",
    "end": "1042240"
  },
  {
    "text": "uh of of of votel and we're using um the",
    "start": "1042240",
    "end": "1045760"
  },
  {
    "text": "code from a newly soon to be released so",
    "start": "1045760",
    "end": "1047839"
  },
  {
    "text": "not yet released version of tinyo right",
    "start": "1047839",
    "end": "1050200"
  },
  {
    "text": "there are some bugs in the tinyo code",
    "start": "1050200",
    "end": "1051720"
  },
  {
    "text": "that like we had to work around",
    "start": "1051720",
    "end": "1052880"
  },
  {
    "text": "essentially they're actually fixed",
    "start": "1052880",
    "end": "1054440"
  },
  {
    "text": "Upstream now which is great and sorry",
    "start": "1054440",
    "end": "1056720"
  },
  {
    "text": "these these bugs weren't really related",
    "start": "1056720",
    "end": "1058240"
  },
  {
    "text": "to web assembly but they just you know",
    "start": "1058240",
    "end": "1059799"
  },
  {
    "text": "they're things we ran into as we were as",
    "start": "1059799",
    "end": "1061760"
  },
  {
    "text": "we're building this um but this should",
    "start": "1061760",
    "end": "1063799"
  },
  {
    "text": "be released soon hopefully um up",
    "start": "1063799",
    "end": "1066960"
  },
  {
    "text": "upstream and Tiny go and of course when",
    "start": "1066960",
    "end": "1068919"
  },
  {
    "text": "changes um when web assembly lands more",
    "start": "1068919",
    "end": "1072240"
  },
  {
    "text": "um so right now there's some web",
    "start": "1072240",
    "end": "1073400"
  },
  {
    "text": "assembly landed in big go so that's not",
    "start": "1073400",
    "end": "1075360"
  },
  {
    "text": "tiny go um but as that as some of that",
    "start": "1075360",
    "end": "1078360"
  },
  {
    "text": "stuff lands it just becomes more and",
    "start": "1078360",
    "end": "1079720"
  },
  {
    "text": "more seamless right so these cavi",
    "start": "1079720",
    "end": "1081480"
  },
  {
    "text": "disappear over",
    "start": "1081480",
    "end": "1083240"
  },
  {
    "text": "time so I actually have one more demo uh",
    "start": "1083240",
    "end": "1086360"
  },
  {
    "text": "this would have been the end except for",
    "start": "1086360",
    "end": "1088360"
  },
  {
    "text": "what I think uh many people probably",
    "start": "1088360",
    "end": "1089720"
  },
  {
    "text": "came to this talk for was to see Dynamic",
    "start": "1089720",
    "end": "1092400"
  },
  {
    "text": "instrumentation so I mentioned earlier",
    "start": "1092400",
    "end": "1094280"
  },
  {
    "text": "that you'd probably wouldn't ever try",
    "start": "1094280",
    "end": "1095640"
  },
  {
    "text": "and take a x86 binary look at the",
    "start": "1095640",
    "end": "1097760"
  },
  {
    "text": "assembly and try and rewrite it right",
    "start": "1097760",
    "end": "1099200"
  },
  {
    "text": "that's kind of silly or well extremely",
    "start": "1099200",
    "end": "1101799"
  },
  {
    "text": "hard so most people wouldn't try and do",
    "start": "1101799",
    "end": "1104159"
  },
  {
    "text": "that but with web assembly we actually",
    "start": "1104159",
    "end": "1106240"
  },
  {
    "text": "can right the the web assembly text form",
    "start": "1106240",
    "end": "1109159"
  },
  {
    "text": "or called it's called watt is actually",
    "start": "1109159",
    "end": "1111679"
  },
  {
    "text": "relatively simple to read but even more",
    "start": "1111679",
    "end": "1114000"
  },
  {
    "text": "importantly there are tools to",
    "start": "1114000",
    "end": "1116480"
  },
  {
    "text": "programmatically uh manipulate it and",
    "start": "1116480",
    "end": "1119000"
  },
  {
    "text": "change it so what I'm going to demo next",
    "start": "1119000",
    "end": "1121760"
  },
  {
    "text": "is taking a web assembly binary that was",
    "start": "1121760",
    "end": "1125000"
  },
  {
    "text": "compiled like so let's say thing you can",
    "start": "1125000",
    "end": "1126480"
  },
  {
    "text": "think of rust code in this case it'll be",
    "start": "1126480",
    "end": "1128400"
  },
  {
    "text": "rust code but you can think of go code",
    "start": "1128400",
    "end": "1130559"
  },
  {
    "text": "um and I'm going to give it essentially",
    "start": "1130559",
    "end": "1132520"
  },
  {
    "text": "a list of function names and we're going",
    "start": "1132520",
    "end": "1134640"
  },
  {
    "text": "to automatically instrument those",
    "start": "1134640",
    "end": "1136240"
  },
  {
    "text": "functions without changing the original",
    "start": "1136240",
    "end": "1138000"
  },
  {
    "text": "code so I'll get started here and try to",
    "start": "1138000",
    "end": "1141320"
  },
  {
    "text": "explain as I",
    "start": "1141320",
    "end": "1143960"
  },
  {
    "text": "go",
    "start": "1146280",
    "end": "1147919"
  },
  {
    "text": "okay I don't think we'll need that just",
    "start": "1147919",
    "end": "1150080"
  },
  {
    "text": "yet but okay we'll uh we'll start here",
    "start": "1150080",
    "end": "1154159"
  },
  {
    "text": "and so I'm using a a tool called just",
    "start": "1154159",
    "end": "1155799"
  },
  {
    "text": "which is just you a little task Runner",
    "start": "1155799",
    "end": "1158200"
  },
  {
    "text": "and uh what we're going to do is first",
    "start": "1158200",
    "end": "1160640"
  },
  {
    "text": "we're going to",
    "start": "1160640",
    "end": "1163159"
  },
  {
    "text": "deploy the uninstrumented version",
    "start": "1163960",
    "end": "1168720"
  },
  {
    "text": "and let me show you a little bit of what",
    "start": "1172240",
    "end": "1176120"
  },
  {
    "text": "that what that uh file looks like and",
    "start": "1177840",
    "end": "1180760"
  },
  {
    "text": "this is should be familiar at this point",
    "start": "1180760",
    "end": "1182360"
  },
  {
    "text": "since you've seen it once before this is",
    "start": "1182360",
    "end": "1184480"
  },
  {
    "text": "a uh declarative uh deployment file for",
    "start": "1184480",
    "end": "1188240"
  },
  {
    "text": "this web assembly component right and",
    "start": "1188240",
    "end": "1190760"
  },
  {
    "text": "this file of course if you try and open",
    "start": "1190760",
    "end": "1194240"
  },
  {
    "text": "it is just binary right gibberish so",
    "start": "1194240",
    "end": "1198200"
  },
  {
    "text": "this is a compiled application that",
    "start": "1198200",
    "end": "1199960"
  },
  {
    "text": "already exists uh we're going to see",
    "start": "1199960",
    "end": "1201919"
  },
  {
    "text": "what it",
    "start": "1201919",
    "end": "1203200"
  },
  {
    "text": "does just by just by hitting",
    "start": "1203200",
    "end": "1207240"
  },
  {
    "text": "it so I'm going to run a few commands",
    "start": "1208120",
    "end": "1212919"
  },
  {
    "text": "here uh one second I'm",
    "start": "1214240",
    "end": "1217200"
  },
  {
    "text": "gonna turn off this host here because",
    "start": "1217200",
    "end": "1220559"
  },
  {
    "text": "this is still",
    "start": "1220559",
    "end": "1223039"
  },
  {
    "text": "running and I'm going to run wash up",
    "start": "1223120",
    "end": "1226400"
  },
  {
    "text": "which and this bring simil similar to",
    "start": "1226400",
    "end": "1228320"
  },
  {
    "text": "the uh previous example this brings up",
    "start": "1228320",
    "end": "1230600"
  },
  {
    "text": "um wasm Cloud the host I'm going to list",
    "start": "1230600",
    "end": "1233600"
  },
  {
    "text": "the apps so the name of this app is",
    "start": "1233600",
    "end": "1235440"
  },
  {
    "text": "called uninstrumented just so we can be",
    "start": "1235440",
    "end": "1237159"
  },
  {
    "text": "really clear and know which one is uh",
    "start": "1237159",
    "end": "1239039"
  },
  {
    "text": "which one is is running there so I'm",
    "start": "1239039",
    "end": "1241679"
  },
  {
    "text": "going to delete the go app",
    "start": "1241679",
    "end": "1245519"
  },
  {
    "text": "here uh and so we only have one running",
    "start": "1248600",
    "end": "1252200"
  },
  {
    "text": "which I'll show you here so we've got",
    "start": "1252200",
    "end": "1254200"
  },
  {
    "text": "one app running we've got uninstrumented",
    "start": "1254200",
    "end": "1256080"
  },
  {
    "text": "now sort of similar to what we had",
    "start": "1256080",
    "end": "1258320"
  },
  {
    "text": "before",
    "start": "1258320",
    "end": "1259520"
  },
  {
    "text": "uh I just know that the uh the port this",
    "start": "1259520",
    "end": "1261720"
  },
  {
    "text": "thing is listening on is 880 so we're",
    "start": "1261720",
    "end": "1264720"
  },
  {
    "text": "going to try and curl it and see what we",
    "start": "1264720",
    "end": "1269520"
  },
  {
    "text": "get all right so this is just nothing's",
    "start": "1269720",
    "end": "1272960"
  },
  {
    "text": "happened yet this is just the regular uh",
    "start": "1272960",
    "end": "1275120"
  },
  {
    "text": "sort of HTTP code being run in web",
    "start": "1275120",
    "end": "1277400"
  },
  {
    "text": "assembly uh on a wassom cloud host right",
    "start": "1277400",
    "end": "1280200"
  },
  {
    "text": "but what we want to do is we want to",
    "start": "1280200",
    "end": "1282559"
  },
  {
    "text": "instrument this code so that we can um",
    "start": "1282559",
    "end": "1287080"
  },
  {
    "text": "get a trace and sort of know a certain",
    "start": "1287080",
    "end": "1289400"
  },
  {
    "text": "function has entered and exited right so",
    "start": "1289400",
    "end": "1292120"
  },
  {
    "text": "when the Handler when the uh Handler is",
    "start": "1292120",
    "end": "1293880"
  },
  {
    "text": "actually entered and",
    "start": "1293880",
    "end": "1296559"
  },
  {
    "text": "exited so what I'm going to do now is",
    "start": "1297000",
    "end": "1299559"
  },
  {
    "text": "I'm going to run a program that I've",
    "start": "1299559",
    "end": "1300919"
  },
  {
    "text": "written that will take this",
    "start": "1300919",
    "end": "1304159"
  },
  {
    "text": "binary and it's well it's already done",
    "start": "1304159",
    "end": "1306799"
  },
  {
    "text": "so there's there's there's really uh",
    "start": "1306799",
    "end": "1308480"
  },
  {
    "text": "there's really not much to discuss there",
    "start": "1308480",
    "end": "1309760"
  },
  {
    "text": "but it's going to take in and read in",
    "start": "1309760",
    "end": "1312360"
  },
  {
    "text": "that uh web simply binary we're running",
    "start": "1312360",
    "end": "1314279"
  },
  {
    "text": "originally without changing the original",
    "start": "1314279",
    "end": "1316279"
  },
  {
    "text": "one it's going to instrument it so",
    "start": "1316279",
    "end": "1317840"
  },
  {
    "text": "change the instruction that are running",
    "start": "1317840",
    "end": "1319400"
  },
  {
    "text": "when that web assembly binary runs uh",
    "start": "1319400",
    "end": "1321600"
  },
  {
    "text": "and it's going to make a separate second",
    "start": "1321600",
    "end": "1324080"
  },
  {
    "text": "binary that is uh instrumented so if we",
    "start": "1324080",
    "end": "1326760"
  },
  {
    "text": "open this second second binary",
    "start": "1326760",
    "end": "1329720"
  },
  {
    "text": "here this instrumented one you can see",
    "start": "1329720",
    "end": "1332480"
  },
  {
    "text": "it's just gibberish again right like um",
    "start": "1332480",
    "end": "1334880"
  },
  {
    "text": "there are there is a there's a textual",
    "start": "1334880",
    "end": "1337039"
  },
  {
    "text": "format uh which we can actually",
    "start": "1337039",
    "end": "1340919"
  },
  {
    "text": "read which i' I've printed out here",
    "start": "1340919",
    "end": "1342960"
  },
  {
    "text": "ahead of time uh and this is actually",
    "start": "1342960",
    "end": "1344799"
  },
  {
    "text": "pretty easy to read uh I don't know if",
    "start": "1344799",
    "end": "1346400"
  },
  {
    "text": "many people have read assembly uh in the",
    "start": "1346400",
    "end": "1348520"
  },
  {
    "text": "the room but this is sort of like lispy",
    "start": "1348520",
    "end": "1350640"
  },
  {
    "text": "and is a little bit a little bit easier",
    "start": "1350640",
    "end": "1352159"
  },
  {
    "text": "to read than um assembly would be but",
    "start": "1352159",
    "end": "1354440"
  },
  {
    "text": "you can see how you try and you can try",
    "start": "1354440",
    "end": "1355960"
  },
  {
    "text": "and actually change this change this",
    "start": "1355960",
    "end": "1357480"
  },
  {
    "text": "format but what we're going to do next",
    "start": "1357480",
    "end": "1359360"
  },
  {
    "text": "is we're going to um deploy the",
    "start": "1359360",
    "end": "1362360"
  },
  {
    "text": "instrumented version of this",
    "start": "1362360",
    "end": "1365960"
  },
  {
    "text": "app uh",
    "start": "1367080",
    "end": "1370240"
  },
  {
    "text": "and I'm going to show",
    "start": "1370240",
    "end": "1373520"
  },
  {
    "text": "you what it looks like when this",
    "start": "1373520",
    "end": "1375960"
  },
  {
    "text": "instrumented version of the app is",
    "start": "1375960",
    "end": "1377200"
  },
  {
    "text": "called we have a provider that actually",
    "start": "1377200",
    "end": "1381799"
  },
  {
    "text": "hooks into when the function we're we're",
    "start": "1381799",
    "end": "1384919"
  },
  {
    "text": "looking at is called and when it exits",
    "start": "1384919",
    "end": "1387480"
  },
  {
    "text": "so we'll see two messages that sort of",
    "start": "1387480",
    "end": "1389440"
  },
  {
    "text": "indicate that the function has been",
    "start": "1389440",
    "end": "1391360"
  },
  {
    "text": "entered uh and the function has been",
    "start": "1391360",
    "end": "1393480"
  },
  {
    "text": "exited and after after we see that I'll",
    "start": "1393480",
    "end": "1395559"
  },
  {
    "text": "show you exactly what the function looks",
    "start": "1395559",
    "end": "1396919"
  },
  {
    "text": "like so you can see what the uh sort of",
    "start": "1396919",
    "end": "1398600"
  },
  {
    "text": "delay",
    "start": "1398600",
    "end": "1399799"
  },
  {
    "text": "was okay so now if I just show you",
    "start": "1399799",
    "end": "1405278"
  },
  {
    "text": "again so we've got two we've got two",
    "start": "1406120",
    "end": "1408520"
  },
  {
    "text": "applications running one is instrumented",
    "start": "1408520",
    "end": "1410080"
  },
  {
    "text": "one is not instrumented uninstrumented",
    "start": "1410080",
    "end": "1411760"
  },
  {
    "text": "app hasn't hasn't changed um it's just",
    "start": "1411760",
    "end": "1414760"
  },
  {
    "text": "there I happen to know that the uh",
    "start": "1414760",
    "end": "1417120"
  },
  {
    "text": "instrumented app is running at Local",
    "start": "1417120",
    "end": "1419080"
  },
  {
    "text": "Host",
    "start": "1419080",
    "end": "1419799"
  },
  {
    "text": "881 right so I'm going to curl it and",
    "start": "1419799",
    "end": "1423799"
  },
  {
    "text": "here we go we've got two",
    "start": "1423799",
    "end": "1426480"
  },
  {
    "text": "messages from when the function was",
    "start": "1426480",
    "end": "1430159"
  },
  {
    "text": "entered uh and when it was exited so",
    "start": "1430159",
    "end": "1433480"
  },
  {
    "text": "taking the binary just just from just",
    "start": "1433480",
    "end": "1436640"
  },
  {
    "text": "taking the binary that we built",
    "start": "1436640",
    "end": "1438000"
  },
  {
    "text": "originally without changing the actual",
    "start": "1438000",
    "end": "1439640"
  },
  {
    "text": "code we got instrumentation for a",
    "start": "1439640",
    "end": "1441440"
  },
  {
    "text": "function inside the actual code now let",
    "start": "1441440",
    "end": "1443919"
  },
  {
    "text": "me show you what that code looks like so",
    "start": "1443919",
    "end": "1445120"
  },
  {
    "text": "you know why this was worth",
    "start": "1445120",
    "end": "1446919"
  },
  {
    "text": "instrumenting uh it's pretty it's a",
    "start": "1446919",
    "end": "1449440"
  },
  {
    "text": "pretty trivial",
    "start": "1449440",
    "end": "1450640"
  },
  {
    "text": "component",
    "start": "1450640",
    "end": "1452279"
  },
  {
    "text": "but um it's interesting because there's",
    "start": "1452279",
    "end": "1455799"
  },
  {
    "text": "a random slowdown right so it's just a",
    "start": "1455799",
    "end": "1457840"
  },
  {
    "text": "regular HTP Handler but there's actually",
    "start": "1457840",
    "end": "1459559"
  },
  {
    "text": "some code in there that just Waits one",
    "start": "1459559",
    "end": "1461200"
  },
  {
    "text": "to 3 seconds uh and we can see from when",
    "start": "1461200",
    "end": "1464960"
  },
  {
    "text": "the messages the messages that came",
    "start": "1464960",
    "end": "1467039"
  },
  {
    "text": "in uh when it started when it stopped",
    "start": "1467039",
    "end": "1469600"
  },
  {
    "text": "that it actually waited 1 second right",
    "start": "1469600",
    "end": "1472279"
  },
  {
    "text": "so we can see that we were able to find",
    "start": "1472279",
    "end": "1475559"
  },
  {
    "text": "out essentially the the hard way how",
    "start": "1475559",
    "end": "1478000"
  },
  {
    "text": "much random random weight was injected",
    "start": "1478000",
    "end": "1481080"
  },
  {
    "text": "and of course I don't control this",
    "start": "1481080",
    "end": "1482080"
  },
  {
    "text": "weight so if we hit the if we hit the",
    "start": "1482080",
    "end": "1483840"
  },
  {
    "text": "end point again we get a different uh we",
    "start": "1483840",
    "end": "1486360"
  },
  {
    "text": "likely to get a different time right uh",
    "start": "1486360",
    "end": "1489240"
  },
  {
    "text": "uh time elapse in",
    "start": "1489240",
    "end": "1492278"
  },
  {
    "text": "between so just to just to wrap up again",
    "start": "1495360",
    "end": "1498799"
  },
  {
    "text": "uh and I'm almost out of time here but",
    "start": "1498799",
    "end": "1500919"
  },
  {
    "text": "I'll I'll jump through these really",
    "start": "1500919",
    "end": "1502600"
  },
  {
    "text": "quick so what happened we built a web",
    "start": "1502600",
    "end": "1504840"
  },
  {
    "text": "assembly component uh we added",
    "start": "1504840",
    "end": "1507000"
  },
  {
    "text": "instrumentation automatically to the",
    "start": "1507000",
    "end": "1508200"
  },
  {
    "text": "binary that was produced not in our code",
    "start": "1508200",
    "end": "1510760"
  },
  {
    "text": "without doing anything to change our",
    "start": "1510760",
    "end": "1511919"
  },
  {
    "text": "original code in fact we looked at the",
    "start": "1511919",
    "end": "1513679"
  },
  {
    "text": "code at the end uh and we used a wasm",
    "start": "1513679",
    "end": "1516760"
  },
  {
    "text": "cloud provider which is sort of sort of",
    "start": "1516760",
    "end": "1519120"
  },
  {
    "text": "spooky action in a distance you can kind",
    "start": "1519120",
    "end": "1520600"
  },
  {
    "text": "of ignore it but to catch IND individual",
    "start": "1520600",
    "end": "1524559"
  },
  {
    "text": "invocations so obviously can't be this",
    "start": "1524559",
    "end": "1527799"
  },
  {
    "text": "easy right right uh well there's a few",
    "start": "1527799",
    "end": "1530880"
  },
  {
    "text": "caveats one you need to make sure your",
    "start": "1530880",
    "end": "1532880"
  },
  {
    "text": "language doesn't inline your function",
    "start": "1532880",
    "end": "1535320"
  },
  {
    "text": "right so if you want to trace a function",
    "start": "1535320",
    "end": "1536760"
  },
  {
    "text": "and it gets inlined there's nothing to",
    "start": "1536760",
    "end": "1538600"
  },
  {
    "text": "trace right it's inside of another",
    "start": "1538600",
    "end": "1540520"
  },
  {
    "text": "another uh another function uh that and",
    "start": "1540520",
    "end": "1543279"
  },
  {
    "text": "of course along with traces we need logs",
    "start": "1543279",
    "end": "1544799"
  },
  {
    "text": "and metrics to really be fully",
    "start": "1544799",
    "end": "1546679"
  },
  {
    "text": "observable uh and the tooling built here",
    "start": "1546679",
    "end": "1549600"
  },
  {
    "text": "um obviously needs to be tested polished",
    "start": "1549600",
    "end": "1551039"
  },
  {
    "text": "released so you know this stuff is early",
    "start": "1551039",
    "end": "1553880"
  },
  {
    "text": "but this is basically what people hope",
    "start": "1553880",
    "end": "1556279"
  },
  {
    "text": "for when they want sort of toil free",
    "start": "1556279",
    "end": "1561679"
  },
  {
    "text": "observability thank",
    "start": "1561679",
    "end": "1564880"
  },
  {
    "text": "you I know we're out of time but all",
    "start": "1566880",
    "end": "1569640"
  },
  {
    "text": "right thanks a lot Victor if you have",
    "start": "1569640",
    "end": "1572159"
  },
  {
    "text": "questions for Victoria we have time for",
    "start": "1572159",
    "end": "1574080"
  },
  {
    "text": "one question and after that you'll be",
    "start": "1574080",
    "end": "1576520"
  },
  {
    "text": "able to find Victor around if you have",
    "start": "1576520",
    "end": "1580960"
  },
  {
    "text": "more uh hi Victor so how are you",
    "start": "1581880",
    "end": "1584399"
  },
  {
    "text": "supplying the function names here",
    "start": "1584399",
    "end": "1588600"
  },
  {
    "text": "yes uh thanks thanks for the question",
    "start": "1588600",
    "end": "1590480"
  },
  {
    "text": "the um so the question was uh how am I",
    "start": "1590480",
    "end": "1592480"
  },
  {
    "text": "supplying the function names so the",
    "start": "1592480",
    "end": "1593960"
  },
  {
    "text": "function names can be provided actually",
    "start": "1593960",
    "end": "1595720"
  },
  {
    "text": "dynamically um what happens is uh the",
    "start": "1595720",
    "end": "1598840"
  },
  {
    "text": "script essentially takes a list of",
    "start": "1598840",
    "end": "1601440"
  },
  {
    "text": "function names and because this is",
    "start": "1601440",
    "end": "1602960"
  },
  {
    "text": "written for rust I actually turn those",
    "start": "1602960",
    "end": "1605080"
  },
  {
    "text": "function names um into rust identifiers",
    "start": "1605080",
    "end": "1608880"
  },
  {
    "text": "and then look into the binary and find",
    "start": "1608880",
    "end": "1611480"
  },
  {
    "text": "those identifiers and then inject code",
    "start": "1611480",
    "end": "1616600"
  }
]