[
  {
    "start": "0",
    "end": "16000"
  },
  {
    "text": "hello i'm patrick coutz i am the head of edge infrastructure at dot ki",
    "start": "80",
    "end": "6080"
  },
  {
    "text": "ah hello this is uh nikolai klev i am technical lead in the office of the cto",
    "start": "6240",
    "end": "11759"
  },
  {
    "text": "for kuma at the conch",
    "start": "11759",
    "end": "17600"
  },
  {
    "start": "16000",
    "end": "47000"
  },
  {
    "text": "so today we're going to go over a few topics the first one for those who",
    "start": "17600",
    "end": "23760"
  },
  {
    "text": "of you who are unfamiliar with what is network service mesh and then we're going to go into a new",
    "start": "23760",
    "end": "28800"
  },
  {
    "text": "set of things that we have been working on so we have a new sdk we have a new use",
    "start": "28800",
    "end": "33840"
  },
  {
    "text": "case that we have been uh working on we have integration with multiple cncf projects and",
    "start": "33840",
    "end": "41520"
  },
  {
    "text": "uh and we'll discuss what we've um what we've been accomplishing",
    "start": "41520",
    "end": "47760"
  },
  {
    "start": "47000",
    "end": "181000"
  },
  {
    "text": "so um nikolai can you describe a little bit about what network service meshes",
    "start": "48960",
    "end": "55920"
  },
  {
    "text": "yeah network service mesh is different things to different people when when it was designed um",
    "start": "56320",
    "end": "64000"
  },
  {
    "text": "we the project was targeting uh the developers operators",
    "start": "64000",
    "end": "70479"
  },
  {
    "text": "and network function vendors point of view um so from a developer's perspective",
    "start": "70479",
    "end": "76880"
  },
  {
    "text": "it makes developers lives easier because they just ask for connectivity and",
    "start": "76880",
    "end": "83759"
  },
  {
    "text": "they work with high level primitives they don't have to to bother with the details of networking",
    "start": "83759",
    "end": "89680"
  },
  {
    "text": "which usually is complex and hard to to to work with from operators",
    "start": "89680",
    "end": "97840"
  },
  {
    "text": "perspective",
    "start": "97840",
    "end": "100479"
  },
  {
    "text": "you actually uh again you can conceptualize about these small uh",
    "start": "102880",
    "end": "108640"
  },
  {
    "text": "details that that but usually the operators have to deal with so it's easier to",
    "start": "108640",
    "end": "116399"
  },
  {
    "text": "automate and to do all the life cycle management of the of your",
    "start": "116399",
    "end": "123040"
  },
  {
    "text": "workloads you can also easier isolate them you can easy you know",
    "start": "123040",
    "end": "128160"
  },
  {
    "text": "monitor so that's that's that's also one of the goals for network service match when it",
    "start": "128160",
    "end": "134400"
  },
  {
    "text": "started uh and from uh network function vendors point of view um here we have an example firewall",
    "start": "134400",
    "end": "141599"
  },
  {
    "text": "vendor um you can actually focus on the functionality on the business logic of",
    "start": "141599",
    "end": "147840"
  },
  {
    "text": "your function you don't have to worry how it connects to the rest of the world uh which",
    "start": "147840",
    "end": "153760"
  },
  {
    "text": "typically was was a big problem back in the days",
    "start": "153760",
    "end": "160080"
  },
  {
    "text": "now with cloud native and with network service mesh this is not so but overall if we",
    "start": "160080",
    "end": "166959"
  },
  {
    "text": "have to complete this slide network service mesh gives the right tools to",
    "start": "166959",
    "end": "173360"
  },
  {
    "text": "actually apply cloud cloud native in the traditionally hard to manage networking",
    "start": "173360",
    "end": "178640"
  },
  {
    "text": "world so one of the things that we've been",
    "start": "178640",
    "end": "185920"
  },
  {
    "start": "181000",
    "end": "298000"
  },
  {
    "text": "working on in network service mesh is we've been working to simplify the overall system",
    "start": "185920",
    "end": "191920"
  },
  {
    "text": "and so before we had a code a code base that was disjoint from the",
    "start": "191920",
    "end": "197599"
  },
  {
    "text": "work that the uh that the vendors would would use so in other words the",
    "start": "197599",
    "end": "202959"
  },
  {
    "text": "the the vendors who are building a network function would use a different set of apis",
    "start": "202959",
    "end": "208159"
  },
  {
    "text": "than the people who were building the actual network service mention the network service mesh infrastructure",
    "start": "208159",
    "end": "214799"
  },
  {
    "text": "and application itself and so what we've done is we've rewritten the network service mesh",
    "start": "214799",
    "end": "221760"
  },
  {
    "text": "system itself within the same sdk within the same set of apis so that the same apis that we are asking",
    "start": "221760",
    "end": "229360"
  },
  {
    "text": "people to build the network services on is the same is the same api",
    "start": "229360",
    "end": "234720"
  },
  {
    "text": "that we are building the network service manager the discovery work the uh the",
    "start": "234720",
    "end": "241680"
  },
  {
    "text": "authentication and authorization work so it ends up being the same code base and what's nice about this is that this ends up",
    "start": "241680",
    "end": "248879"
  },
  {
    "text": "setting the system up so that we run into the problems first ourselves",
    "start": "248879",
    "end": "254080"
  },
  {
    "text": "and we are able to get a higher quality of a system before we ask other people to go and",
    "start": "254080",
    "end": "260720"
  },
  {
    "text": "build on that api and we ensure that people who who learn how to build the network",
    "start": "260720",
    "end": "268800"
  },
  {
    "text": "services that are integrating in firewalls it also makes it very easy for them to come back in and contribute because once they",
    "start": "268800",
    "end": "275600"
  },
  {
    "text": "understand how to build a network service then they understand how the internals of it work",
    "start": "275600",
    "end": "281280"
  },
  {
    "text": "and how does the authorization work of course is details that they may have to read but it's a it's a",
    "start": "281280",
    "end": "287840"
  },
  {
    "text": "much it's a much simpler pattern and they understand the architectural pattern with uh once once they understand how to",
    "start": "287840",
    "end": "294880"
  },
  {
    "text": "write a network service itself so this is the network service",
    "start": "294880",
    "end": "303039"
  },
  {
    "start": "298000",
    "end": "488000"
  },
  {
    "text": "api and so we have everything is that we do is a",
    "start": "303039",
    "end": "309759"
  },
  {
    "text": "grpc api so we start off with at the very top what is the network service and it comes",
    "start": "309759",
    "end": "315600"
  },
  {
    "text": "down to two primary calls we have a request and a close a client can make a request for a",
    "start": "315600",
    "end": "321919"
  },
  {
    "text": "service and a client can close their service and simultaneously the same thing is true about responses",
    "start": "321919",
    "end": "328960"
  },
  {
    "text": "one of the things that we have done as well is what we when the connection",
    "start": "328960",
    "end": "335680"
  },
  {
    "text": "when a connection is established we return a connection object and so that connection object gets passed through the system it",
    "start": "335680",
    "end": "342800"
  },
  {
    "text": "gathers context like a snowball and once the system has enough context to complete",
    "start": "342800",
    "end": "348960"
  },
  {
    "text": "the establishment of that connection that same connection context gets",
    "start": "348960",
    "end": "354479"
  },
  {
    "text": "returned back all the way back to the user which includes information which may have ip addresses dns",
    "start": "354479",
    "end": "362319"
  },
  {
    "text": "may have ethernet information if you're dealing with l2 may also have information about",
    "start": "362319",
    "end": "369520"
  },
  {
    "text": "who you've gone through uh with cryptographic tokens that demonstrate that you've gone through a specific set",
    "start": "369520",
    "end": "374639"
  },
  {
    "text": "of firewalls you've gone through a certain vpn or so on and this also by passing those",
    "start": "374639",
    "end": "380240"
  },
  {
    "text": "cryptographic tokens through it also gives you the capability to reason using uh your auth your authorization",
    "start": "380240",
    "end": "386720"
  },
  {
    "text": "system can reason about what's within those uh those tokens and so these are the api is a little bit",
    "start": "386720",
    "end": "394400"
  },
  {
    "text": "richer than what we've shown here but these these are the the core apis that represent the uh",
    "start": "394400",
    "end": "400800"
  },
  {
    "text": "the heart of nsm i would like to outline one very",
    "start": "400800",
    "end": "406000"
  },
  {
    "text": "important thing here in the api it's the path and the paths segment on the left",
    "start": "406000",
    "end": "412240"
  },
  {
    "text": "so this is a relatively new concept that was introduced recently to again not so recently",
    "start": "412240",
    "end": "419680"
  },
  {
    "text": "already but i was kind of new to nsm it it is inspired by some of the",
    "start": "419680",
    "end": "427039"
  },
  {
    "text": "more lower level networking concepts uh but this uh is brought to this new high",
    "start": "427039",
    "end": "432639"
  },
  {
    "text": "level grpc api are much easier to consume much easier to process",
    "start": "432639",
    "end": "438400"
  },
  {
    "text": "essentially it gives you an idea like from a vendor like a network service",
    "start": "438400",
    "end": "445680"
  },
  {
    "text": "vendor point of view when you get this parts you like the the the",
    "start": "445680",
    "end": "451840"
  },
  {
    "text": "implementation knows where uh it actually this packet or actually its connectivity",
    "start": "451840",
    "end": "459680"
  },
  {
    "text": "is going to pass who are the other players in the system if you need to know that and uh for people that have built uh",
    "start": "459680",
    "end": "467680"
  },
  {
    "text": "networking solutions in the virtualization world are familiar with the service function chaining or",
    "start": "467680",
    "end": "474000"
  },
  {
    "text": "as we prefer to call it service composition here in nsm this is this is really",
    "start": "474000",
    "end": "480240"
  },
  {
    "text": "really important improvement and information that you can have at runtime so",
    "start": "480240",
    "end": "492720"
  },
  {
    "start": "488000",
    "end": "615000"
  },
  {
    "text": "here we have a very basic example this is an example of a grpc client",
    "start": "492720",
    "end": "500160"
  },
  {
    "text": "and a client is connecting to a network service manager and is making a request for a",
    "start": "500160",
    "end": "507759"
  },
  {
    "text": "network service and so you can see the request object being created using this the standard",
    "start": "507759",
    "end": "513120"
  },
  {
    "text": "jrbc path we ask for the name that connection has been established",
    "start": "513120",
    "end": "519599"
  },
  {
    "text": "with uh spiffy inspire which we'll get into soon and you can see the request has been made",
    "start": "519599",
    "end": "524800"
  },
  {
    "text": "and the response is a from grpc as a connection or an error as to why the connection",
    "start": "524800",
    "end": "530720"
  },
  {
    "text": "failed in the top you can see the",
    "start": "530720",
    "end": "536000"
  },
  {
    "text": "the the general flow of how this ends up looking you see a request coming from",
    "start": "536000",
    "end": "541200"
  },
  {
    "text": "from the pod from a client goes to nsm and assemble for that request to the",
    "start": "541200",
    "end": "546880"
  },
  {
    "text": "network service and then we'll configure the data plane in order to make sure that the pod and",
    "start": "546880",
    "end": "552560"
  },
  {
    "text": "the network service are capable of communicating with each other what's key here though is that nsm itself",
    "start": "552560",
    "end": "559200"
  },
  {
    "text": "does not sit in the data plane it's it sits in the control plane so nsm does not slow you down in the data",
    "start": "559200",
    "end": "565519"
  },
  {
    "text": "plane if you have a faster data plane that you want to bring in uh also when we",
    "start": "565519",
    "end": "573920"
  },
  {
    "text": "conceptualize here when we say uh nsm and data plane when we talk about control plane",
    "start": "573920",
    "end": "579120"
  },
  {
    "text": "uh it's a key thing to mention that uh it is a distributed one it's not a",
    "start": "579120",
    "end": "586160"
  },
  {
    "text": "center it's not like the traditional sdn software defined networking control planes",
    "start": "586160",
    "end": "591519"
  },
  {
    "text": "uh it's a distributed one very much in the in the concepts and inspired by uh the consoles behind cloud",
    "start": "591519",
    "end": "599040"
  },
  {
    "text": "native uh the same is for the data plane it's not a single entity",
    "start": "599040",
    "end": "605360"
  },
  {
    "text": "we're probably not going to go into details you can go and check out our docs and see how it is implemented but",
    "start": "605360",
    "end": "611279"
  },
  {
    "text": "essentially it's a distributed one",
    "start": "611279",
    "end": "619120"
  },
  {
    "start": "615000",
    "end": "816000"
  },
  {
    "text": "so in terms of how these are set up so we described that",
    "start": "619120",
    "end": "624880"
  },
  {
    "text": "network services uses the request and close api the same api as we use internally so",
    "start": "624880",
    "end": "632480"
  },
  {
    "text": "we have here what's called a network service we call it a chain so the chain in the",
    "start": "632480",
    "end": "639839"
  },
  {
    "text": "case of a client when that client was called saying i want to connect to something",
    "start": "639839",
    "end": "644880"
  },
  {
    "text": "the connection goes through a series of microservices that literally follow the exact same grpc api",
    "start": "644880",
    "end": "652560"
  },
  {
    "text": "that we showed you before and so each so we have authorized as a as a",
    "start": "652560",
    "end": "659760"
  },
  {
    "text": "grpc service set id and heal and so on but they don't connect out to the",
    "start": "659760",
    "end": "665120"
  },
  {
    "text": "outside world they simply reuse the api mechanisms itself the actual api",
    "start": "665120",
    "end": "671200"
  },
  {
    "text": "interfaces so these are all internal services that are within the process",
    "start": "671200",
    "end": "677040"
  },
  {
    "text": "so the system will will run it through an authorized service and then a set id service a",
    "start": "677040",
    "end": "682560"
  },
  {
    "text": "healed service and each of these have been componentized and have been isolated from each other",
    "start": "682560",
    "end": "688800"
  },
  {
    "text": "and that connection object passes through each of these before it gets emitted to the network service manager which",
    "start": "688800",
    "end": "695200"
  },
  {
    "text": "then runs it through its chain which includes the authorized the token generator",
    "start": "695200",
    "end": "700240"
  },
  {
    "text": "doing discovery and so on and finally running through the connect which then itself goes through to the",
    "start": "700240",
    "end": "707360"
  },
  {
    "text": "endpoint which then itself goes through the entire set of things that are like authorized",
    "start": "707360",
    "end": "712639"
  },
  {
    "text": "monitor making sure that there's a timeout for the connection and uh and so on until it finally",
    "start": "712639",
    "end": "718160"
  },
  {
    "text": "reaches the additional uh the the additional functionality",
    "start": "718160",
    "end": "723440"
  },
  {
    "text": "which represents your network service which is the thing that configures your firewall",
    "start": "723440",
    "end": "729839"
  },
  {
    "text": "or configures your data plane and so this so this pattern is is followed",
    "start": "729839",
    "end": "735360"
  },
  {
    "text": "over and over again and uh and so when we said that we that we're",
    "start": "735360",
    "end": "740959"
  },
  {
    "text": "normalizing and make and making it follow the same pattern like we we really do mean it",
    "start": "740959",
    "end": "746560"
  },
  {
    "text": "like this is this is a this is a pattern that allows us to to make sure that we have things that",
    "start": "746560",
    "end": "754000"
  },
  {
    "text": "are easily isolated that we can easily test we can reuse in other components you can compose the things that you want",
    "start": "754000",
    "end": "760240"
  },
  {
    "text": "or don't want to leave out the things you don't want and build out a network service that that",
    "start": "760240",
    "end": "766480"
  },
  {
    "text": "allows you to also replace portions like if you don't use the same authorization that we use",
    "start": "766480",
    "end": "771680"
  },
  {
    "text": "maybe you have your own your own service if you can write that that microservice or if your vendor",
    "start": "771680",
    "end": "778320"
  },
  {
    "text": "provides one in the future then you can plug that in and off you go",
    "start": "778320",
    "end": "785600"
  },
  {
    "text": "um interesting fact this whole idea started uh back in 2018 in cubecon seattle",
    "start": "785680",
    "end": "792240"
  },
  {
    "text": "uh where we were trying to design the very first version of the sdk and then we ended up with so good design",
    "start": "792240",
    "end": "800079"
  },
  {
    "text": "that we decided that the whole project should be slowly uh migrating to to to the idea of",
    "start": "800079",
    "end": "807519"
  },
  {
    "text": "um chaining uh components so yeah",
    "start": "807519",
    "end": "815839"
  },
  {
    "text": "well cool so we have here an example of uh some code",
    "start": "817920",
    "end": "825440"
  },
  {
    "text": "that we pulled out so this code um what it is is uh is uh journaling specifically so it's",
    "start": "825440",
    "end": "832480"
  },
  {
    "text": "not it's not ipam as the example says on the top it's uh journal link and so what we're doing is we're we're",
    "start": "832480",
    "end": "838800"
  },
  {
    "text": "taking a result from ipad and if you look in the first step is creating the new server and that new server is now living",
    "start": "838800",
    "end": "846560"
  },
  {
    "text": "within the um within your your service or your endpoint",
    "start": "846560",
    "end": "852399"
  },
  {
    "text": "then when the connection goes through this the very first thing that it does is you can see on the right hand side",
    "start": "852399",
    "end": "859839"
  },
  {
    "text": "about five or six lines down you see this connection comma error is equal to next server request",
    "start": "859839",
    "end": "867519"
  },
  {
    "text": "and so what that is doing is it's forwarding it's it's it is evaluating the rest of the week of",
    "start": "867519",
    "end": "873920"
  },
  {
    "text": "the request first and sending it through the chain first and when it gets the response back because it itself is a client so",
    "start": "873920",
    "end": "880800"
  },
  {
    "text": "when the connection comes back that's been resolved as a client then it's going to look at the information",
    "start": "880800",
    "end": "887120"
  },
  {
    "text": "it's going to introspect it and say what ip interested yet what seeders were were in there what connection paths do you have",
    "start": "887120",
    "end": "894000"
  },
  {
    "text": "and it's going to then publish that to mats and so this specific one was designed so",
    "start": "894000",
    "end": "899600"
  },
  {
    "text": "that we could have ipam and you could use whatever ipam you want and then you could stick a journal on top of it so that if your ipad ever",
    "start": "899600",
    "end": "905839"
  },
  {
    "text": "fails then you can using yet another service replay that",
    "start": "905839",
    "end": "911279"
  },
  {
    "text": "set of decisions through your ipam and get you that resiliency in an easy way without having to",
    "start": "911279",
    "end": "917360"
  },
  {
    "text": "to mix together the journaling and the ipam together so it makes them split up it splits them out of a nice way that",
    "start": "917360",
    "end": "924079"
  },
  {
    "text": "allows you to have the same mechanism the same set of code that interacts with",
    "start": "924079",
    "end": "929920"
  },
  {
    "text": "any form of ipad that you that you want and so we wanted to show this as an",
    "start": "929920",
    "end": "935600"
  },
  {
    "text": "example of of the of the api and how simple the api itself can",
    "start": "935600",
    "end": "941199"
  },
  {
    "text": "can be and as a working as a working",
    "start": "941199",
    "end": "946480"
  },
  {
    "start": "951000",
    "end": "1297000"
  },
  {
    "text": "example well so um nikolai we have this uh",
    "start": "952839",
    "end": "959279"
  },
  {
    "text": "virtual uh l3 use case that we've been uh working with can you describe a little",
    "start": "959279",
    "end": "964959"
  },
  {
    "text": "bit for us yeah uh it uh apparently it turns out",
    "start": "964959",
    "end": "971600"
  },
  {
    "text": "that it's a this is a very very common uh use case and um once it was shown uh we",
    "start": "971600",
    "end": "979360"
  },
  {
    "text": "we got a really big interest people coming and talking to us",
    "start": "979360",
    "end": "985680"
  },
  {
    "text": "um so um the virtual layer 3 is effectively being",
    "start": "985680",
    "end": "992079"
  },
  {
    "text": "able to build a distributed virtualized layer 3 connectivity",
    "start": "992079",
    "end": "998720"
  },
  {
    "text": "for example for things are that you can build a high level",
    "start": "998720",
    "end": "1005199"
  },
  {
    "text": "like interconnection of higher level service meshes like we have comma here and this you uh",
    "start": "1005759",
    "end": "1014320"
  },
  {
    "text": "given as an example but not only uh we have seen examples with being able to sync",
    "start": "1014320",
    "end": "1019839"
  },
  {
    "text": "databases crazies like cross data center database replication are built on on",
    "start": "1019839",
    "end": "1025918"
  },
  {
    "text": "that and and other other things uh the basic idea is that",
    "start": "1025919",
    "end": "1031760"
  },
  {
    "text": "um you build out a set of small network service meshes",
    "start": "1031760",
    "end": "1038000"
  },
  {
    "text": "and you have kind of um gateway uh which is",
    "start": "1038000",
    "end": "1044640"
  },
  {
    "text": "not really the gateway that you you would see in the traditional kubernetes on or other setups it effectively is a very",
    "start": "1044640",
    "end": "1052480"
  },
  {
    "text": "transparent one but as you can see here on the picture okay",
    "start": "1052480",
    "end": "1059120"
  },
  {
    "text": "it's a router uh but effectively the idea is that it consumes the other remote uh",
    "start": "1059120",
    "end": "1067039"
  },
  {
    "text": "routers as services so it's a kind of um like a service machine or servicemen so",
    "start": "1067039",
    "end": "1073760"
  },
  {
    "text": "you have your own network service messaging in your uh clusters and then the inter connectivity",
    "start": "1073760",
    "end": "1079760"
  },
  {
    "text": "in between them is again a kind of a network service mesh on its own and when all when these two",
    "start": "1079760",
    "end": "1087039"
  },
  {
    "text": "concepts bind together you effectively get a kind of a flat network",
    "start": "1087039",
    "end": "1092720"
  },
  {
    "text": "um but also a controlled lan one like it's not that uh every each and every service in",
    "start": "1092720",
    "end": "1099440"
  },
  {
    "text": "cluster one will see each and every service in cluster two it's only the members of the particular service mesh",
    "start": "1099440",
    "end": "1105360"
  },
  {
    "text": "with the right securities settings right authentication set",
    "start": "1105360",
    "end": "1112400"
  },
  {
    "text": "and etc this effectively allows you to build a set of such virtual regulatory",
    "start": "1112400",
    "end": "1120840"
  },
  {
    "text": "networks uh that can interconnect all these uh clusters and in the same time they can",
    "start": "1120840",
    "end": "1127520"
  },
  {
    "text": "work in parallel as if as if this connectivity doesn't exist so the workloads that",
    "start": "1127520",
    "end": "1132559"
  },
  {
    "text": "live in one of these virtual layer 3 won't see",
    "start": "1132559",
    "end": "1138000"
  },
  {
    "text": "like the the services won't see the other services and this actually unlocks a lot of a lot",
    "start": "1138000",
    "end": "1143280"
  },
  {
    "text": "of other use cases we have seen people that are",
    "start": "1143280",
    "end": "1148480"
  },
  {
    "text": "building much more complex solutions and i'm sure federer can can give better examples here",
    "start": "1148480",
    "end": "1156240"
  },
  {
    "text": "but essentially everyone that was trying to interconnect data centers uh and",
    "start": "1156240",
    "end": "1164240"
  },
  {
    "text": "distribute services have uh have some autobahn upon the obstacles of how do you",
    "start": "1164240",
    "end": "1170559"
  },
  {
    "text": "interconnect what's the ip of this of this data center what's the subnet in the other data center",
    "start": "1170559",
    "end": "1176799"
  },
  {
    "text": "are there conflicts which dns i use and etc and with this you effectively",
    "start": "1176799",
    "end": "1183840"
  },
  {
    "text": "get the unified view cross data center of the same network and your workloads can can consume the",
    "start": "1183840",
    "end": "1190240"
  },
  {
    "text": "same dns server and et cetera et cetera so um that's kind of the high level",
    "start": "1190240",
    "end": "1197679"
  },
  {
    "text": "overview of what this is use case is about and a quick note so we have a core dns",
    "start": "1197679",
    "end": "1205520"
  },
  {
    "text": "plugin that we've linked in here so we've our community",
    "start": "1205520",
    "end": "1211039"
  },
  {
    "text": "created this plug-in it's called a fanoplugin that's designed to to",
    "start": "1211039",
    "end": "1217679"
  },
  {
    "text": "take multiple dns service servers and allows you to make a call to a specific",
    "start": "1217679",
    "end": "1222720"
  },
  {
    "text": "one and then have them fan out the request to others and found them back in and you can control that dynamically so you",
    "start": "1222720",
    "end": "1229360"
  },
  {
    "text": "can add and remove servers as you add and remove networks within your within your system",
    "start": "1229360",
    "end": "1235440"
  },
  {
    "text": "and so the one of the next steps that we are going to accomplish in the near future is the",
    "start": "1235440",
    "end": "1241600"
  },
  {
    "text": "injection of that dns into information into network service mesh so we already have",
    "start": "1241600",
    "end": "1247360"
  },
  {
    "text": "something to pass the dns configuration in and out but making sure that it works within the vl3 use case so that",
    "start": "1247360",
    "end": "1253679"
  },
  {
    "text": "we solve not only the l2 and l3 use case of getting that connectivity or specifically the l3 connectivity in this",
    "start": "1253679",
    "end": "1259440"
  },
  {
    "text": "scenario but we also solve for the dns problems that or at least give the tools to solve",
    "start": "1259440",
    "end": "1265760"
  },
  {
    "text": "those dns problems that are part of a complete l3 solution",
    "start": "1265760",
    "end": "1272320"
  },
  {
    "text": "one addition that i would i would like to add here is uh when we say clusters it it's not",
    "start": "1272720",
    "end": "1278480"
  },
  {
    "text": "necessarily only big data centers it could be an edge uh the deployment of workloads etc",
    "start": "1278480",
    "end": "1284400"
  },
  {
    "text": "so it's a kind of a way to unify your distributed infrastructure so it's not necessarily",
    "start": "1284400",
    "end": "1289679"
  },
  {
    "text": "connecting big deployments it can be small a large number of small deployments",
    "start": "1289679",
    "end": "1296799"
  },
  {
    "start": "1297000",
    "end": "1419000"
  },
  {
    "text": "okay well so part of how we accomplish this",
    "start": "1297520",
    "end": "1304159"
  },
  {
    "text": "though is that we also want to make sure that we accomplish what we described before but also ensuring that we also",
    "start": "1304159",
    "end": "1311840"
  },
  {
    "text": "maintain a good level of security and so we start with the same cryptographic",
    "start": "1311840",
    "end": "1318640"
  },
  {
    "text": "identities that the application service meshes use and when we say application mesh we",
    "start": "1318640",
    "end": "1324640"
  },
  {
    "text": "usually mean l4 and l7 they're talking tcp udp payloads",
    "start": "1324640",
    "end": "1329760"
  },
  {
    "text": "they are manipulating http so network service mesh focuses primarily on",
    "start": "1329760",
    "end": "1335760"
  },
  {
    "text": "layer two and layer three and you'll see a little bit more in this soon we have layer two and layer three uh",
    "start": "1335760",
    "end": "1341760"
  },
  {
    "text": "identities that that get attested and get added and the idea behind that is that we can",
    "start": "1341760",
    "end": "1348000"
  },
  {
    "text": "cryptographically identify one service to another and so we can cryptographically identify",
    "start": "1348000",
    "end": "1354240"
  },
  {
    "text": "the uh the thing that controls your firewall the thing that controls your vpn and make sure that when they can",
    "start": "1354240",
    "end": "1359679"
  },
  {
    "text": "communicate with each other that not only do they know who they are but that we can then build that policy on",
    "start": "1359679",
    "end": "1365360"
  },
  {
    "text": "top of them so that we have that cryptographic uh assurance that they are who they who",
    "start": "1365360",
    "end": "1371520"
  },
  {
    "text": "they say they are and we use spire which is a reference implementation of spiffy for that",
    "start": "1371520",
    "end": "1378320"
  },
  {
    "text": "i think that it's a this is a pretty revolutionary use of uh the whole spifi and spire",
    "start": "1378400",
    "end": "1386000"
  },
  {
    "text": "of course there's a concrete implementation of a runtime uh because we're actually mo the tradition",
    "start": "1386000",
    "end": "1392080"
  },
  {
    "text": "when it was designed and the additional way that they that that it's used in other projects is that you actually",
    "start": "1392080",
    "end": "1398159"
  },
  {
    "text": "uh do this authentication on the higher level as you said layer four and seven but here uh you",
    "start": "1398159",
    "end": "1404000"
  },
  {
    "text": "we're actually doing a much much lower level uh the connectivity level and",
    "start": "1404000",
    "end": "1409919"
  },
  {
    "text": "uh effectively this is this is a new way of using the whole concept",
    "start": "1409919",
    "end": "1417840"
  },
  {
    "start": "1419000",
    "end": "1460000"
  },
  {
    "text": "and so when we look at how this ends up working and so we have this broken up into two slides",
    "start": "1420559",
    "end": "1426240"
  },
  {
    "text": "so the first part is we have this separation of control plane from your data plane",
    "start": "1426240",
    "end": "1431840"
  },
  {
    "text": "that we mentioned before so you have something that you have your pod that has your application you have your",
    "start": "1431840",
    "end": "1438240"
  },
  {
    "text": "firewall endpoint that controls your firewall your intrusion detection endpoint that that allows you to control",
    "start": "1438240",
    "end": "1444400"
  },
  {
    "text": "your intrusion detection system and etc etc as you as you go down for the chain",
    "start": "1444400",
    "end": "1449679"
  },
  {
    "text": "so there's a separation between control plane and data plane that exists here",
    "start": "1449679",
    "end": "1456320"
  },
  {
    "text": "when we start looking at how to do this how do we integrate spiffy what it looks like is something that",
    "start": "1456320",
    "end": "1462960"
  },
  {
    "start": "1460000",
    "end": "1575000"
  },
  {
    "text": "looks like this every major service gets an identity so the firewall has an identity your intrusion",
    "start": "1462960",
    "end": "1469360"
  },
  {
    "text": "detection system has an identity so when the pod makes a request for secure corporate internet access uh",
    "start": "1469360",
    "end": "1477360"
  },
  {
    "text": "that the these are the identities that the operator can say the system must traverse through",
    "start": "1477360",
    "end": "1483440"
  },
  {
    "text": "in order for that service to be rendered in order for that service to",
    "start": "1483440",
    "end": "1488799"
  },
  {
    "text": "to be successfully connected",
    "start": "1488799",
    "end": "1492799"
  },
  {
    "text": "one of the interesting things here is that actually some of these can be hardware accelerated or even implemented",
    "start": "1495360",
    "end": "1501520"
  },
  {
    "text": "in hardware so effectively we can say that with nsm we",
    "start": "1501520",
    "end": "1506880"
  },
  {
    "text": "unlock the ability to use spf on hardware accelerated",
    "start": "1506880",
    "end": "1514080"
  },
  {
    "text": "resources yeah and possibly in some scenarios",
    "start": "1514080",
    "end": "1522080"
  },
  {
    "text": "not only bring it down to the hardware to for that performance but also in the in the future it should",
    "start": "1522080",
    "end": "1530320"
  },
  {
    "text": "be possible to have if if you're running your network services on in kubernetes itself you should be",
    "start": "1530320",
    "end": "1537279"
  },
  {
    "text": "able to actually tie them down to the tpm module until you can verify the hardware that it's running on that indeed came from you as",
    "start": "1537279",
    "end": "1543520"
  },
  {
    "text": "well so there's a lot of really interesting work that's going on in spiffy that that is above and beyond this",
    "start": "1543520",
    "end": "1550240"
  },
  {
    "text": "that's cutting edge so there's new work that's going on with transitive identity and new work that's going on towards how",
    "start": "1550240",
    "end": "1556720"
  },
  {
    "text": "to um how to federate uh spiffy's uh",
    "start": "1556720",
    "end": "1561840"
  },
  {
    "text": "trust domains together so there's a lot of more interesting work that's coming out of this and we're hoping uh not hoping but we're",
    "start": "1561840",
    "end": "1568799"
  },
  {
    "text": "in the process of helping them work out what some of those things look like as well within those communities",
    "start": "1568799",
    "end": "1575200"
  },
  {
    "start": "1575000",
    "end": "1604000"
  },
  {
    "text": "and so finally when you do the connection this is what it ends up looking like from a testation",
    "start": "1576880",
    "end": "1582320"
  },
  {
    "text": "perspective perspective you have your app your vpn gateway those in fact those have their spf id",
    "start": "1582320",
    "end": "1588159"
  },
  {
    "text": "entities you have a trust between the two organizations so it gets you this gives you the ability to multi",
    "start": "1588159",
    "end": "1594960"
  },
  {
    "text": "organizational trust with uh spivey inspire for your for your workloads",
    "start": "1594960",
    "end": "1601840"
  },
  {
    "start": "1604000",
    "end": "1719000"
  },
  {
    "text": "so the the last thing to really tie these things together is open policy agent and so i pulled an",
    "start": "1605120",
    "end": "1612480"
  },
  {
    "text": "example from the repository and was from nsm itself and what this",
    "start": "1612480",
    "end": "1618480"
  },
  {
    "text": "policy is doing is it's checking is this token the tokens that come in so a token that represents the identity of",
    "start": "1618480",
    "end": "1624559"
  },
  {
    "text": "everything that it's gone through are the tokens expired so the if and what we do is we run them",
    "start": "1624559",
    "end": "1631360"
  },
  {
    "text": "through a uh through a thing that says tokens expired must be false and that's the last line",
    "start": "1631360",
    "end": "1638399"
  },
  {
    "text": "in the go code that you can see here and so this allows us to create that policy",
    "start": "1638399",
    "end": "1644799"
  },
  {
    "text": "using something that's declarative and create advanced policies that are backed by data backed by databases",
    "start": "1644799",
    "end": "1652559"
  },
  {
    "text": "and uh are able to be changed over time in a controlled way so policy becomes pull requests and so",
    "start": "1652559",
    "end": "1660799"
  },
  {
    "text": "this uh and this so this is making use of open policy agent which is another cncf project spiffy inspire our cncf projects",
    "start": "1660799",
    "end": "1669360"
  },
  {
    "text": "as well and so we're integrating these things together in order to",
    "start": "1669360",
    "end": "1674559"
  },
  {
    "text": "in order to provide that that cryptographic secure policy",
    "start": "1674559",
    "end": "1683440"
  },
  {
    "text": "okay and tying it into the previous graph that we",
    "start": "1683440",
    "end": "1689600"
  },
  {
    "text": "see these are the places that we have injected open policy agents so it's not just a connection on the outbound",
    "start": "1689600",
    "end": "1696320"
  },
  {
    "text": "but also the connections on the inbound like the client also has to ask a question that the server renders",
    "start": "1696320",
    "end": "1702000"
  },
  {
    "text": "something to me that i did i trust that i that that fits my policy so your policy from the from the server",
    "start": "1702000",
    "end": "1708320"
  },
  {
    "text": "side you have policy from the client side identity on the server and client both validating each other and ensuring that",
    "start": "1708320",
    "end": "1714799"
  },
  {
    "text": "they that they indeed follow policy",
    "start": "1714799",
    "end": "1719039"
  },
  {
    "start": "1719000",
    "end": "1784000"
  },
  {
    "text": "so with that we want to thank you for your time and for hearing what's new within the network",
    "start": "1720399",
    "end": "1726159"
  },
  {
    "text": "service mesh community feel free to come join us we have links here on how to join in",
    "start": "1726159",
    "end": "1732080"
  },
  {
    "text": "in the community section we have mailing lists we have slack our slack community is very active uh if",
    "start": "1732080",
    "end": "1739279"
  },
  {
    "text": "you post a message on the slack community you're very likely to get an answer uh quickly and we also",
    "start": "1739279",
    "end": "1745840"
  },
  {
    "text": "just had nsmcon eu which just happened the videos if they're not posted already",
    "start": "1745840",
    "end": "1750880"
  },
  {
    "text": "they will be posted in this location so come find it over here and as of now we have all of our weekly",
    "start": "1750880",
    "end": "1757919"
  },
  {
    "text": "meetings at 7 30 a.m for the weekly developer pr meetings and at 8 am pacific",
    "start": "1757919",
    "end": "1764000"
  },
  {
    "text": "every tuesday for the general nsm meetings as well so please come come and talk with us",
    "start": "1764000",
    "end": "1771039"
  },
  {
    "text": "join in join us in slack have conversations with us and uh we will be around for a few more minutes to",
    "start": "1771039",
    "end": "1777840"
  },
  {
    "text": "answer questions so thank you very much thank you",
    "start": "1777840",
    "end": "1784480"
  },
  {
    "start": "1784000",
    "end": "2259000"
  },
  {
    "text": "hello so let me uh check with our sound engineer uh we can",
    "start": "1790320",
    "end": "1796960"
  },
  {
    "text": "uh i can be heard properly right i can see in the chat anyways uh just a",
    "start": "1796960",
    "end": "1804640"
  },
  {
    "text": "little housekeeping so the slack community i mentioned is pound nsm in the",
    "start": "1804640",
    "end": "1812080"
  },
  {
    "text": "cncf slack which many of you have already joined and also the event videos from nsm",
    "start": "1812080",
    "end": "1819840"
  },
  {
    "text": "con eu are already published so you can go and see them through there",
    "start": "1819840",
    "end": "1826240"
  },
  {
    "text": "let's see in terms of the questions so the first question is uh i'd like to",
    "start": "1826240",
    "end": "1832880"
  },
  {
    "text": "write my first app that uses nsm your slides show sarah's app you have sample code that implements a simple app that i",
    "start": "1832880",
    "end": "1838799"
  },
  {
    "text": "can use is the basis from building my own simple app that makes use of nsm does such a repo exist",
    "start": "1838799",
    "end": "1846080"
  },
  {
    "text": "in github so what i showed you right now with the sdk is something very",
    "start": "1846080",
    "end": "1851360"
  },
  {
    "text": "new that we've that we've uh built we have a an older version of nsm where we have",
    "start": "1851360",
    "end": "1857039"
  },
  {
    "text": "an examples repository and i i will post that example repository in",
    "start": "1857039",
    "end": "1863600"
  },
  {
    "text": "in slack in a short while but there's some examples there that",
    "start": "1863600",
    "end": "1869600"
  },
  {
    "text": "that you can follow that'll be very close so there's two levels of integration",
    "start": "1869600",
    "end": "1874640"
  },
  {
    "text": "that i expect to see very common uh at least in the kubernetes space",
    "start": "1874640",
    "end": "1880159"
  },
  {
    "text": "it didn't i'm expecting there to be uh pre-canned apps like if someone wants to connect two",
    "start": "1880159",
    "end": "1886399"
  },
  {
    "text": "things together that are in different clouds uh that's primarily a configuration thing and so",
    "start": "1886399",
    "end": "1892480"
  },
  {
    "text": "we want to be able to have nsm uh basically do a helm install on it to get",
    "start": "1892480",
    "end": "1899039"
  },
  {
    "text": "the things running that you that you need and then you request for the service",
    "start": "1899039",
    "end": "1904240"
  },
  {
    "text": "after you've done some basic configuration and it just works the second um the second thing that we",
    "start": "1904240",
    "end": "1911360"
  },
  {
    "text": "are expecting to see is we're expecting to see people we're expecting to see people",
    "start": "1911360",
    "end": "1918159"
  },
  {
    "text": "eventually build out their own custom set of services and the place to look in in that uh",
    "start": "1918159",
    "end": "1924240"
  },
  {
    "text": "i see i don't think i have a good way to to show this particular part off but i'll",
    "start": "1924240",
    "end": "1930559"
  },
  {
    "text": "post another link on there that shows the the code that i showed before that showed a chain",
    "start": "1930559",
    "end": "1936880"
  },
  {
    "text": "you you can base you can build off the same uh the same set of patterns so you would you would start off with a with a",
    "start": "1936880",
    "end": "1943120"
  },
  {
    "text": "network service endpoint chain you would implement your network service",
    "start": "1943120",
    "end": "1948480"
  },
  {
    "text": "uh using the api and then when you instantiate that uh that chain then that chain uh will",
    "start": "1948480",
    "end": "1955279"
  },
  {
    "text": "then make use of all the machinery that we showed just now and we'll also run your section of code",
    "start": "1955279",
    "end": "1962880"
  },
  {
    "text": "and i'll link to where that chain is as well so that you can so you can see that how that works",
    "start": "1962880",
    "end": "1970720"
  },
  {
    "text": "in terms of the new sdk we should have it all up and running pretty soon there's a there's a couple more",
    "start": "1970720",
    "end": "1976320"
  },
  {
    "text": "things that we have to work we do have it working we have uh we have uh uh traffic flowing between",
    "start": "1976320",
    "end": "1984320"
  },
  {
    "text": "systems using the new sdk but there's a few things that we need to do in order to make it usable",
    "start": "1984320",
    "end": "1989360"
  },
  {
    "text": "so that people can can start building on it so thank you very much for that question",
    "start": "1989360",
    "end": "1996240"
  },
  {
    "text": "um let's see i don't see any other questions so we still have a few more minutes so if",
    "start": "1999679",
    "end": "2005200"
  },
  {
    "text": "anyone wants to ask any other questions then it'd be fantastic and i'll get you an answer",
    "start": "2005200",
    "end": "2019840"
  },
  {
    "text": "cool it will uh stand by for a minute or so",
    "start": "2030840",
    "end": "2039200"
  },
  {
    "text": "oh great question um so next one um what is the relationship to other projects um",
    "start": "2039200",
    "end": "2046000"
  },
  {
    "text": "so other projects uh the the projects that i showed i assume you",
    "start": "2046000",
    "end": "2051599"
  },
  {
    "text": "mean the the ones in uh in the video so",
    "start": "2051599",
    "end": "2057200"
  },
  {
    "text": "the other projects that we discussed were spiffy inspire spiffy inspire",
    "start": "2057200",
    "end": "2064398"
  },
  {
    "text": "spiffy is a specification on how to rotate identities and to test them spire",
    "start": "2064399",
    "end": "2071118"
  },
  {
    "text": "is a reference implementation of that specification and so spire is a",
    "start": "2071119",
    "end": "2078079"
  },
  {
    "text": "cncf project as is network service mesh and for those of you who are unfamiliar",
    "start": "2078079",
    "end": "2085839"
  },
  {
    "text": "cncf is the parent organization of kubernetes so we're all sibling projects",
    "start": "2085839",
    "end": "2091520"
  },
  {
    "text": "simultaneously there's also open policy agent which is also another cncf project",
    "start": "2091520",
    "end": "2098000"
  },
  {
    "text": "and so these particular projects are we we've",
    "start": "2098000",
    "end": "2105359"
  },
  {
    "text": "they were just they're they're loosely coupled in that they don't require each other to to run",
    "start": "2105359",
    "end": "2111200"
  },
  {
    "text": "in fact nsm does not require spiffy inspire or robot to actually run but we've implemented them in default",
    "start": "2111200",
    "end": "2117760"
  },
  {
    "text": "implementation so that um and so so that's how that that particular part",
    "start": "2117760",
    "end": "2124240"
  },
  {
    "text": "is like the relationship between them now there there is another thing so uh one uh an additional",
    "start": "2124240",
    "end": "2131920"
  },
  {
    "text": "question on top of that is what about things like uh like damon and uh multis and similar",
    "start": "2131920",
    "end": "2137760"
  },
  {
    "text": "so nsm is uh has a different set of goals from from them so groups like damen from",
    "start": "2137760",
    "end": "2144880"
  },
  {
    "text": "nokia are designed to create a interface that is within a",
    "start": "2144880",
    "end": "2150720"
  },
  {
    "text": "pod like that is their primary purpose is to be what's called a cni multiplexer nsm is orthogonal to cni",
    "start": "2150720",
    "end": "2159040"
  },
  {
    "text": "uh and in fact it's also unopinionated about whether you decide to use a cmi or not so you could uh",
    "start": "2159040",
    "end": "2166960"
  },
  {
    "text": "you you could integrate an sm uh if you choose to do so and i have a working",
    "start": "2166960",
    "end": "2172400"
  },
  {
    "text": "thing with that or rather i have something that i'm going to be working on soon which hopefully will",
    "start": "2172400",
    "end": "2178000"
  },
  {
    "text": "show such an integration but basically showing the setup of a denim or a multis network",
    "start": "2178000",
    "end": "2184560"
  },
  {
    "text": "in the custom resources and apis that they provide and nsm then focuses on the high level",
    "start": "2184560",
    "end": "2190240"
  },
  {
    "text": "stuff like how do i connect these pods together or how do i create the service function chain together across",
    "start": "2190240",
    "end": "2195680"
  },
  {
    "text": "across systems or how do i configure the sdn to do something special based upon",
    "start": "2195680",
    "end": "2201359"
  },
  {
    "text": "the requirements provided by by the operator so to to be precise damn is specifically",
    "start": "2201359",
    "end": "2208400"
  },
  {
    "text": "about how do i land using a cmi plugin a secondary interface in my pod",
    "start": "2208400",
    "end": "2214079"
  },
  {
    "text": "while for network service mesh that's a implementation detail and we're working to coordinate what",
    "start": "2214079",
    "end": "2220480"
  },
  {
    "text": "happens around and enable enabling the",
    "start": "2220480",
    "end": "2226480"
  },
  {
    "text": "machinery behind that that interface through the configuration of",
    "start": "2226480",
    "end": "2231599"
  },
  {
    "text": "other sdns or or other resources so hopefully that answers the question and",
    "start": "2231599",
    "end": "2237599"
  },
  {
    "text": "i want to thank everyone for your time and feel free to reach to reach out to",
    "start": "2237599",
    "end": "2243200"
  },
  {
    "text": "me we're in uh uh channel two dash kubecon dash maintainer",
    "start": "2243200",
    "end": "2248560"
  },
  {
    "text": "there is a thread where we can continue these conversations and simultaneously also come join us in the",
    "start": "2248560",
    "end": "2254320"
  },
  {
    "text": "nsm channel within within cncf slack take care",
    "start": "2254320",
    "end": "2261359"
  }
]