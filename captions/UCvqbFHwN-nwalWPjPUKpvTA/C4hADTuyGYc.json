[
  {
    "text": "so uh hey everyone and uh thanks for attending this session today uh can everyone hear me",
    "start": "440",
    "end": "5960"
  },
  {
    "text": "okay okay great uh I'm nanen uh I'm currently a",
    "start": "5960",
    "end": "12360"
  },
  {
    "text": "software engineer working on the io add-on uh for AKs at Microsoft um",
    "start": "12360",
    "end": "18400"
  },
  {
    "text": "specifically right now um I'm focusing on multicluster very topical um Edge",
    "start": "18400",
    "end": "24640"
  },
  {
    "text": "traffic management and uh various other ddio features that we are incorporating into our",
    "start": "24640",
    "end": "31119"
  },
  {
    "text": "add-on uh so today uh I wanted to cover some important uh security considerations of using itdo um both",
    "start": "31119",
    "end": "38680"
  },
  {
    "text": "based on some uh feature requests and uh frequent questions that we've received for our add-on um as well as some",
    "start": "38680",
    "end": "47280"
  },
  {
    "text": "broader guidelines and best practices that have been adopted throughout the sto",
    "start": "47280",
    "end": "53160"
  },
  {
    "text": "community so throughout the ecosystem um it's become pretty common to refer to IO",
    "start": "53160",
    "end": "59440"
  },
  {
    "text": "as being uh secure by default but uh to borrow a phrase from the book itdo in",
    "start": "59440",
    "end": "65360"
  },
  {
    "text": "action which I highly recommend everyone here check out at some point um it's",
    "start": "65360",
    "end": "70439"
  },
  {
    "text": "more appropriate to consider itdo almost secure by default um so even though a",
    "start": "70439",
    "end": "76680"
  },
  {
    "text": "lot of sto's uh security capabilities like mtls and automated certificate",
    "start": "76680",
    "end": "81920"
  },
  {
    "text": "management uh are enabled out of the box um there are still various vulnerabilities and loopholes that",
    "start": "81920",
    "end": "89000"
  },
  {
    "text": "operators need to to be aware of and take actions accordingly now there is being work done by the project",
    "start": "89000",
    "end": "95399"
  },
  {
    "text": "maintainers and various stakeholders um to make the default settings more secure",
    "start": "95399",
    "end": "101920"
  },
  {
    "text": "uh but there's a a limit to how um robust these Baseline security settings",
    "start": "101920",
    "end": "107680"
  },
  {
    "text": "can be uh just given the variation in architectures and networking topologies",
    "start": "107680",
    "end": "112960"
  },
  {
    "text": "with uh itdo and kubernetes a one-sized fits-all approach to security uh is just",
    "start": "112960",
    "end": "119159"
  },
  {
    "text": "not feasible uh in terms of what these potential",
    "start": "119159",
    "end": "125880"
  },
  {
    "text": "attack vectors and security risks are um there are quite a few that are worth considering uh we still haven't fully",
    "start": "125880",
    "end": "132800"
  },
  {
    "text": "locked down communication especially when it comes to restricting inbound and outbound traffic um we haven't addressed",
    "start": "132800",
    "end": "140280"
  },
  {
    "text": "the possibility of misconfiguration and configuration drift uh which is a problem throughout the cloud native and",
    "start": "140280",
    "end": "146640"
  },
  {
    "text": "kubernetes ecosystem um staying on out itdo versions with cves is another major",
    "start": "146640",
    "end": "153879"
  },
  {
    "text": "one and even after we take some steps to harden our environment uh there's still Avenues of bypassing our security",
    "start": "153879",
    "end": "160560"
  },
  {
    "text": "controls and a lot of that stems from relying exclusively on iO as a mechanism",
    "start": "160560",
    "end": "166519"
  },
  {
    "text": "to secure our applications um and also without the right level of telemetry uh we might not",
    "start": "166519",
    "end": "172519"
  },
  {
    "text": "be having enough insight into our environment to detect anomalous behavior",
    "start": "172519",
    "end": "177599"
  },
  {
    "text": "um or on the other hand uh we might be uh end up being two verbos with our",
    "start": "177599",
    "end": "182680"
  },
  {
    "text": "logging and inadvertently leak sensitive information so what we should be",
    "start": "182680",
    "end": "188440"
  },
  {
    "text": "striving for uh is to implement zero trust principles so uh never trust and",
    "start": "188440",
    "end": "194879"
  },
  {
    "text": "always verify least Privileges and assuming that an attacker is already in our Network and attempting to limit the",
    "start": "194879",
    "end": "201879"
  },
  {
    "text": "damage that they can do but fully putting these principles into practice requires some additional steps on our",
    "start": "201879",
    "end": "208760"
  },
  {
    "text": "end we also want to achieve defense in depth so building a holistic security",
    "start": "208760",
    "end": "215360"
  },
  {
    "text": "architecture so that there isn't any single point of failure so not only do we have more IO configurations uh that",
    "start": "215360",
    "end": "222439"
  },
  {
    "text": "we need to tweak um but we also need to look beyond the service mesh itself to",
    "start": "222439",
    "end": "227920"
  },
  {
    "text": "incorporate additional tools to establish guard rails at multiple",
    "start": "227920",
    "end": "233400"
  },
  {
    "text": "layers so some of the areas uh we'll be looking at will be authentication and",
    "start": "233400",
    "end": "238720"
  },
  {
    "text": "authorization Edge traffic pki and a few others and uh to conclude I'll showcase",
    "start": "238720",
    "end": "245480"
  },
  {
    "text": "a brief demo of what a more secure setup um that incorporates multiple controls",
    "start": "245480",
    "end": "251040"
  },
  {
    "text": "could look like in practice uh I also just wanted to point out that this list is not all inclusive",
    "start": "251040",
    "end": "256799"
  },
  {
    "text": "or exhaustive um it's pretty much impossible to uh squeeze in every single",
    "start": "256799",
    "end": "262199"
  },
  {
    "text": "threat you might face in a 25 minute session believe me I tried um but at the",
    "start": "262199",
    "end": "267880"
  },
  {
    "text": "same time uh you don't necessarily need to account for all of these risks or uh take all of these measures so uh the",
    "start": "267880",
    "end": "274800"
  },
  {
    "text": "goal of this talk is to um provide an overview of various uh security risks",
    "start": "274800",
    "end": "280479"
  },
  {
    "text": "that could be applicable to you um and propose some solutions and tactics for you to explore",
    "start": "280479",
    "end": "287680"
  },
  {
    "text": "later so to start off uh let's talk about authentication and encryption as I",
    "start": "287919",
    "end": "293479"
  },
  {
    "text": "was highlighting earlier uh itdo does um enable auto mtls uh out of the box but",
    "start": "293479",
    "end": "300560"
  },
  {
    "text": "um it's important to delve deeper into what exactly this means um there are two levels to mtls uh one is what kind of",
    "start": "300560",
    "end": "307759"
  },
  {
    "text": "traffic are servers accepting which is governed by the peer authentication resource and uh the other is what kind",
    "start": "307759",
    "end": "315320"
  },
  {
    "text": "of traffic the client side cars are ascending out uh which is controlled by the destination",
    "start": "315320",
    "end": "321720"
  },
  {
    "text": "rule um so the default peer authentication setting in itso is permissive mode uh meaning that even",
    "start": "321720",
    "end": "328560"
  },
  {
    "text": "though Auto mtls is enabled uh by default these side cars can still accept",
    "start": "328560",
    "end": "334000"
  },
  {
    "text": "PL Tex traffic uh from non- meshed workloads and uh the reason of uh having",
    "start": "334000",
    "end": "339520"
  },
  {
    "text": "it as permissive uh is to make it easier to migrate your applications uh to the mesh uh especially for uh larger",
    "start": "339520",
    "end": "346639"
  },
  {
    "text": "organizations where onboarding can be a very complex process uh but once you're done",
    "start": "346639",
    "end": "353160"
  },
  {
    "text": "onboarding all your applications to dtoo uh you should set the mtls mode to strict to uh force that mtls is used um",
    "start": "353160",
    "end": "362479"
  },
  {
    "text": "so after migrating all of your workloads uh you can create a PR authentication like this uh in the DDO system namespace",
    "start": "362479",
    "end": "369880"
  },
  {
    "text": "to configure uh strict mtls at a global level uh however uh this setting of",
    "start": "369880",
    "end": "376960"
  },
  {
    "text": "global mtls can be bypassed um in itdo a",
    "start": "376960",
    "end": "382199"
  },
  {
    "text": "uh workload level configuration would take precedence over a namespace level configuration and in turn the namespace",
    "start": "382199",
    "end": "389440"
  },
  {
    "text": "uh would take precedence over a global configuration so um if a non-admin for",
    "start": "389440",
    "end": "395080"
  },
  {
    "text": "example creates a peer authentication with the mode as disable uh our",
    "start": "395080",
    "end": "400759"
  },
  {
    "text": "permissive um or or permissive uh that targets a particular workload uh then",
    "start": "400759",
    "end": "406960"
  },
  {
    "text": "this would override our Global strict mtls policy uh the Same by the way also",
    "start": "406960",
    "end": "414160"
  },
  {
    "text": "applies to destination Rules by setting the TLs mode as simple or disable uh we",
    "start": "414160",
    "end": "420120"
  },
  {
    "text": "can override the uh Global Auto mtls setting uh as I'll talk about in more",
    "start": "420120",
    "end": "425960"
  },
  {
    "text": "depth later uh the solution to prevent bypassing of the peer authentication and",
    "start": "425960",
    "end": "431240"
  },
  {
    "text": "destination rule settings that we want is to leverage policy",
    "start": "431240",
    "end": "436440"
  },
  {
    "text": "enforcement uh so now that we've touched on authenticating and encrypting communication um we can use the",
    "start": "436720",
    "end": "443000"
  },
  {
    "text": "authorization policy resource in its Doo to set access controls so uh which",
    "start": "443000",
    "end": "448240"
  },
  {
    "text": "workloads are authorized to communicate with each other um and we can also be pretty granular about how we set these",
    "start": "448240",
    "end": "454680"
  },
  {
    "text": "rules uh for instance um authorizing requests based on the originating namespace or uh service account or also",
    "start": "454680",
    "end": "463199"
  },
  {
    "text": "based on specific HTTP methods or request",
    "start": "463199",
    "end": "468440"
  },
  {
    "text": "headers so a recommended best practice is to create a uh deny by default",
    "start": "468440",
    "end": "474039"
  },
  {
    "text": "authorization policy in the root name space and then from there uh explicitly",
    "start": "474039",
    "end": "480000"
  },
  {
    "text": "set your allow permissions uh so now uh we're implementing the principle of least privileges uh by explicitly",
    "start": "480000",
    "end": "487639"
  },
  {
    "text": "permitting communication on a caseby Case basis and also uh as per the itdo",
    "start": "487639",
    "end": "493960"
  },
  {
    "text": "documentation um some recommended safe patterns for uh authorization are to use",
    "start": "493960",
    "end": "499840"
  },
  {
    "text": "allow with positive and deny with negative matching and to also use uh URL",
    "start": "499840",
    "end": "505120"
  },
  {
    "text": "normalization uh to prevent bypassing or policy mismatches",
    "start": "505120",
    "end": "511440"
  },
  {
    "text": "uh while it Doo's uh authorization policy um on its own is pretty powerful and flexible um it's possible that you",
    "start": "512159",
    "end": "519599"
  },
  {
    "text": "might need to use a more sophisticated uh authorization mechanism like open",
    "start": "519599",
    "end": "524680"
  },
  {
    "text": "policy agent or oath 2 proxy for instance um if this applies to you uh",
    "start": "524680",
    "end": "530360"
  },
  {
    "text": "you could configure an uh external authorization provider through the itdoes config and uh set a custom action",
    "start": "530360",
    "end": "538360"
  },
  {
    "text": "in the authorization policy uh to delegate the authorization decision uh to the external",
    "start": "538360",
    "end": "546079"
  },
  {
    "text": "Service uh we also need to validate that the end user has valid uh credentials",
    "start": "547160",
    "end": "553200"
  },
  {
    "text": "from an identity provider so you could use the request authentication uh",
    "start": "553200",
    "end": "558279"
  },
  {
    "text": "resource to verify the end user jot token uh based on the URL of the",
    "start": "558279",
    "end": "563600"
  },
  {
    "text": "provider's uh public key Set uh and then uh the request Authentication will",
    "start": "563600",
    "end": "569680"
  },
  {
    "text": "extract the claims um but if you actually want to uh deny requests or set",
    "start": "569680",
    "end": "575279"
  },
  {
    "text": "access controls based on the claims or deny requests without jots um then you",
    "start": "575279",
    "end": "582560"
  },
  {
    "text": "need an authorization policy on top of the request authentication uh sometimes folks forget about the authorization",
    "start": "582560",
    "end": "589560"
  },
  {
    "text": "policy um and in itdo this end user authentication and authorization would",
    "start": "589560",
    "end": "595360"
  },
  {
    "text": "typically be done at the Ingress Gateway um at least in most cases",
    "start": "595360",
    "end": "601320"
  },
  {
    "text": "uh it is worth pointing out though that uh while you could use jots at a workload level uh for a communication",
    "start": "602160",
    "end": "608760"
  },
  {
    "text": "inside your mesh uh this is typically considered less secure compared to mtls um but if you want to use jots or",
    "start": "608760",
    "end": "617800"
  },
  {
    "text": "uh end user verification for intres traffic uh I would advise to use some",
    "start": "617800",
    "end": "623040"
  },
  {
    "text": "kind of token exchange mechanism um and use jot authentication on top of mtls uh",
    "start": "623040",
    "end": "629000"
  },
  {
    "text": "inside ins the mesh not as a replacement for it um also because it Doo can't get",
    "start": "629000",
    "end": "635360"
  },
  {
    "text": "access to all the jot Fields uh besides the issuer and uh different providers",
    "start": "635360",
    "end": "640680"
  },
  {
    "text": "might put uh more information in other fields uh you likely need to integrate",
    "start": "640680",
    "end": "645880"
  },
  {
    "text": "with an external authorizer uh to write more granular",
    "start": "645880",
    "end": "651079"
  },
  {
    "text": "policies uh the next crucial consideration for uh improving itdo security posture is how we manage",
    "start": "651600",
    "end": "658240"
  },
  {
    "text": "traffic at the edge so A good rule of thumb is to have the uh Ingress and egress gateways uh in",
    "start": "658240",
    "end": "664279"
  },
  {
    "text": "their own separate name spaces uh and then we can restrict access and",
    "start": "664279",
    "end": "669399"
  },
  {
    "text": "configuration of the gateways uh to administrators or whichever team in your organization is managing traffic at the",
    "start": "669399",
    "end": "676480"
  },
  {
    "text": "network boundaries and when we expose our services uh externally uh in the Gateway",
    "start": "676480",
    "end": "682800"
  },
  {
    "text": "custom resource uh we want to Define them individually and explicitly like",
    "start": "682800",
    "end": "687920"
  },
  {
    "text": "the configuration on the right um instead of using a wild card hosts as is",
    "start": "687920",
    "end": "694360"
  },
  {
    "text": "the case with the example here on the",
    "start": "694360",
    "end": "698800"
  },
  {
    "text": "left uh to secure traffic through the Ingress gateways uh we want to ensure that the incoming traffic is encrypted",
    "start": "700160",
    "end": "707160"
  },
  {
    "text": "uh we could either use uh do that by using Sni pass through or TLS termination uh depending on whether the",
    "start": "707160",
    "end": "714320"
  },
  {
    "text": "backend application uh is serving HTTP or https and and um as touched on earlier",
    "start": "714320",
    "end": "721120"
  },
  {
    "text": "uh we could also have the request authentications and authorization policies um that Target our Ingress",
    "start": "721120",
    "end": "728959"
  },
  {
    "text": "gateways it's also not uncommon for users to integrate their Ingress Gateway with uh some web application firewall uh",
    "start": "729920",
    "end": "737839"
  },
  {
    "text": "to help prevents against uh various type of web exploits uh like SQL injection uh",
    "start": "737839",
    "end": "743839"
  },
  {
    "text": "cross-site scripting or DDOS attacks uh you could either do this by integrating",
    "start": "743839",
    "end": "748959"
  },
  {
    "text": "with an open source Tool uh like oasp coraza um into your Engish Gateway with",
    "start": "748959",
    "end": "755440"
  },
  {
    "text": "a wasum Plugin or um you could also have a cloud-based W um in front of your",
    "start": "755440",
    "end": "761639"
  },
  {
    "text": "gateway uh another option is if you're looking uh specifically for rate limiting uh you can configure this",
    "start": "761639",
    "end": "768440"
  },
  {
    "text": "through an Envoy filter uh I would add though that uh we're though we're talking specifically",
    "start": "768440",
    "end": "774760"
  },
  {
    "text": "about Ingress uh right now um you can use web application firewall",
    "start": "774760",
    "end": "780199"
  },
  {
    "text": "or Global or local rate limiting for inesh traffic as well um there is a great lightning talk",
    "start": "780199",
    "end": "787480"
  },
  {
    "text": "from earlier today that unpacked this more now for managing egress traffic uh",
    "start": "787480",
    "end": "794480"
  },
  {
    "text": "the first thing we need to do is set the outbound traffic policy mode uh to registry only from the default value of",
    "start": "794480",
    "end": "801839"
  },
  {
    "text": "allow any uh and then the mesh administrators can create uh service",
    "start": "801839",
    "end": "807199"
  },
  {
    "text": "entries to selectively add add external hosts uh to itdo service registry uh to",
    "start": "807199",
    "end": "813600"
  },
  {
    "text": "make them accessible from inside the mesh then uh once we Route traffic uh",
    "start": "813600",
    "end": "819959"
  },
  {
    "text": "through the Eris Gateway um there are two layers of controls we could use to ensure that the egis Gateway isn't",
    "start": "819959",
    "end": "826680"
  },
  {
    "text": "bypassed uh one we could use the sidecar custom resource in it in its Doo um to",
    "start": "826680",
    "end": "833199"
  },
  {
    "text": "limit the scope of the outbound listeners in the proxies themselves and on top of that uh we can use kubernetes",
    "start": "833199",
    "end": "839720"
  },
  {
    "text": "Network policies uh to block any traffic from pods that aren't destined uh for",
    "start": "839720",
    "end": "845040"
  },
  {
    "text": "the ESS name space uh another piece of advice is to",
    "start": "845040",
    "end": "851160"
  },
  {
    "text": "perform TLS origination uh at the Eis Gateway and have mtls set between your",
    "start": "851160",
    "end": "857560"
  },
  {
    "text": "side cars and gateways uh in your destination rules as opposed to uh",
    "start": "857560",
    "end": "862759"
  },
  {
    "text": "originating https traffic from the applications directly so the advantage here is that you can then uh Target the",
    "start": "862759",
    "end": "869920"
  },
  {
    "text": "egis Gateway with authorization policies and have even more fine green control of",
    "start": "869920",
    "end": "874959"
  },
  {
    "text": "your outbound traffic um it's also best practice to have the eagr Gateway deployed onto its uh own dedicated node",
    "start": "874959",
    "end": "883440"
  },
  {
    "text": "pool and then you have Cloud firewall rules to block any requests uh that",
    "start": "883440",
    "end": "888560"
  },
  {
    "text": "aren't routed through the egis Gateway nodes um if you're interested in diving deeper into egress traffic management",
    "start": "888560",
    "end": "895240"
  },
  {
    "text": "with IO uh I cover this more in Greater detail in a previous lightning talk for",
    "start": "895240",
    "end": "901360"
  },
  {
    "text": "last year's itdo con uh next uh let's talk about some",
    "start": "901360",
    "end": "908120"
  },
  {
    "text": "additional steps for certificate management with DDO uh so by default uh ddod will act as",
    "start": "908120",
    "end": "914600"
  },
  {
    "text": "both the certificate Authority and the registration authority meaning that it both verifies the certificate signing",
    "start": "914600",
    "end": "921920"
  },
  {
    "text": "requests uh and uh issues and signs workload certificates and to do that it",
    "start": "921920",
    "end": "927800"
  },
  {
    "text": "uses a self-sign root certificate meaning that your root of trust is",
    "start": "927800",
    "end": "933000"
  },
  {
    "text": "generated by its Doo itself and uh that signing key is just living as a secret",
    "start": "933000",
    "end": "938839"
  },
  {
    "text": "directly in your cluster so um that typically isn't really safe for",
    "start": "938839",
    "end": "945079"
  },
  {
    "text": "production so one alternative framework um is to use a plug insert model so here",
    "start": "945079",
    "end": "951560"
  },
  {
    "text": "uh it dood would have an intermediate certificate uh issued by a root CA that",
    "start": "951560",
    "end": "956839"
  },
  {
    "text": "lives offline and the root sirt uh can be secured for instance in um some Cloud",
    "start": "956839",
    "end": "964160"
  },
  {
    "text": "key Vault or Key Management Service and then uh DDO would use that intermediate",
    "start": "964160",
    "end": "969360"
  },
  {
    "text": "CT to issue and sign the workload certificates the other approach would be",
    "start": "969360",
    "end": "975880"
  },
  {
    "text": "to use an external CA um so here uh we'd be delegating the",
    "start": "975880",
    "end": "981120"
  },
  {
    "text": "responsibility of issuing and signing certificates to an external service",
    "start": "981120",
    "end": "986399"
  },
  {
    "text": "altogether um there are multiple options here uh you could use CT manager uh",
    "start": "986399",
    "end": "992360"
  },
  {
    "text": "Spire kubernetes CSR or um even different combinations of all of these",
    "start": "992360",
    "end": "998759"
  },
  {
    "text": "so uh in the example up here for instance uh you have cert manager uh acting as the rootca to uh issue",
    "start": "998759",
    "end": "1007000"
  },
  {
    "text": "certificates to its DOD and the Spire server and uh you have Spire receiving",
    "start": "1007000",
    "end": "1012399"
  },
  {
    "text": "the csrs and issuing the workload certificates as for which one of these",
    "start": "1012399",
    "end": "1019240"
  },
  {
    "text": "pki models is better um it really depends uh each one has its own respective advantages and disadvantages",
    "start": "1019240",
    "end": "1027038"
  },
  {
    "text": "um and organizations are also using different deployment models and uh they have varying requirements uh in terms of",
    "start": "1027039",
    "end": "1033959"
  },
  {
    "text": "their uh PK infrastructure uh if you want a more detailed overview of the pros and cons",
    "start": "1033959",
    "end": "1040319"
  },
  {
    "text": "of each of these approaches um I would highly suggest checking out some additional resources online and uh these",
    "start": "1040319",
    "end": "1046760"
  },
  {
    "text": "two talks uh right here from last year's cucon and and Ito day uh would be really",
    "start": "1046760",
    "end": "1052280"
  },
  {
    "text": "good places to start uh another important mechanism for",
    "start": "1052280",
    "end": "1058280"
  },
  {
    "text": "enhancing our security framework uh is to use policy enforcement so uh as I was",
    "start": "1058280",
    "end": "1063880"
  },
  {
    "text": "mentioning earlier uh we could use Solutions like gatekeeper or Cavo uh to",
    "start": "1063880",
    "end": "1069480"
  },
  {
    "text": "block peer authentications and destination rules that could override our desired Global uh mtls setting um an",
    "start": "1069480",
    "end": "1077600"
  },
  {
    "text": "administrator might also want to enforce that all workloads are injected with a",
    "start": "1077600",
    "end": "1082640"
  },
  {
    "text": "side car say for instance if a malicious user uh was trying to uh bypass Envoy",
    "start": "1082640",
    "end": "1089159"
  },
  {
    "text": "and uh they could do that by rejecting pods uh that try to disable a sidecar injection through a resource level",
    "start": "1089159",
    "end": "1097360"
  },
  {
    "text": "annotation additionally uh given that U misconfiguration can easily undermine",
    "start": "1098120",
    "end": "1103760"
  },
  {
    "text": "our overall system security uh it would be prudent to block or set Li",
    "start": "1103760",
    "end": "1109919"
  },
  {
    "text": "uh around some of the higher risk and error prone features uh like for example Envoy filters allowing them in more",
    "start": "1109919",
    "end": "1116559"
  },
  {
    "text": "limited capacities and also um it's a good idea to uh disallow custom resources that are",
    "start": "1116559",
    "end": "1123240"
  },
  {
    "text": "experimental or Alpha and uh you can get more details on that in the itdo uh",
    "start": "1123240",
    "end": "1128280"
  },
  {
    "text": "feature status doc um we also might want to set some fine grain validations uh",
    "start": "1128280",
    "end": "1134799"
  },
  {
    "text": "around um say authorization policies and Gateway uh to enforce that some of these safe",
    "start": "1134799",
    "end": "1141280"
  },
  {
    "text": "patterns I was alluding to earlier like broad hosts um are actually being adhere",
    "start": "1141280",
    "end": "1149360"
  },
  {
    "text": "to uh to secure our environment uh we also need adequate visibility to",
    "start": "1149559",
    "end": "1154880"
  },
  {
    "text": "determine who did what and when um so either through the mesh config or the",
    "start": "1154880",
    "end": "1160360"
  },
  {
    "text": "Telemetry API uh we can enable Envoy access logging uh and then from there",
    "start": "1160360",
    "end": "1166360"
  },
  {
    "text": "you could forward these access logging to some uh analytics workspace for your specific",
    "start": "1166360",
    "end": "1171760"
  },
  {
    "text": "cloud provider and uh from there you could leverage some rich alerting and visualization",
    "start": "1171760",
    "end": "1178919"
  },
  {
    "text": "tools at the same time however um it's important to verify that our Telemetry isn't leaking any sensitive information",
    "start": "1178919",
    "end": "1186720"
  },
  {
    "text": "uh for instance if some of your logging data has personally identifiable information uh you want to redact or",
    "start": "1186720",
    "end": "1193240"
  },
  {
    "text": "encode that information accordingly um there's also some request and resp response headers that DDO",
    "start": "1193240",
    "end": "1200360"
  },
  {
    "text": "injects uh that users often want to remove um the X Envoy peer metadata is a",
    "start": "1200360",
    "end": "1207120"
  },
  {
    "text": "particularly notorious one um though it's possible to remove or uh reformat",
    "start": "1207120",
    "end": "1213679"
  },
  {
    "text": "some of these headers with uh Envoy filters and uh leis scripts and uh",
    "start": "1213679",
    "end": "1218960"
  },
  {
    "text": "virtual Services uh there is some ongoing work by the community and the project maintainers uh to help simplify",
    "start": "1218960",
    "end": "1225520"
  },
  {
    "text": "this process further uh finally I wanted to quickly touch on some other honorable mentions",
    "start": "1225520",
    "end": "1233480"
  },
  {
    "text": "uh to harden our environment even further we want to be mindful of workload and image security so uh a very",
    "start": "1233480",
    "end": "1241120"
  },
  {
    "text": "useful tip here is to use the itdo chain cni plugin uh instead of the itdo init",
    "start": "1241120",
    "end": "1247159"
  },
  {
    "text": "container uh because the init container requires root capabilities uh to write IP tables rules um and you should also",
    "start": "1247159",
    "end": "1255280"
  },
  {
    "text": "be prioritizing upgrades and staying on an HDO minor version uh that's still",
    "start": "1255280",
    "end": "1260440"
  },
  {
    "text": "receiving security patches uh one helpful way to avoid remaining on outdated uh or older",
    "start": "1260440",
    "end": "1268400"
  },
  {
    "text": "versions of ddio or Envoy uh that still have cves is to uh deploy and upgrade",
    "start": "1268400",
    "end": "1274640"
  },
  {
    "text": "its Doo through a gitops workflow like Argo CD and uh this way uh you also get",
    "start": "1274640",
    "end": "1280760"
  },
  {
    "text": "the added benefit of uh minimizing configuration drift and lastly uh to re to reiterate",
    "start": "1280760",
    "end": "1288600"
  },
  {
    "text": "the importance of Defense in depth uh you'd want to use kubernetes Network policies to",
    "start": "1288600",
    "end": "1294200"
  },
  {
    "text": "address uh ports and protocols that aren't captured um by",
    "start": "1294200",
    "end": "1300480"
  },
  {
    "text": "itdo uh so to conclude um I wanted to offer uh some suggestions uh regarding",
    "start": "1300919",
    "end": "1307000"
  },
  {
    "text": "um just uh how many of these security controls and mechanisms uh you need to",
    "start": "1307000",
    "end": "1312200"
  },
  {
    "text": "incorporate uh one caveat is that the way that I went about describing these",
    "start": "1312200",
    "end": "1317520"
  },
  {
    "text": "layers um it's just one conceptual framework uh other users and IO",
    "start": "1317520",
    "end": "1322799"
  },
  {
    "text": "community members uh might Define these uh layers differently um for instance uh",
    "start": "1322799",
    "end": "1329640"
  },
  {
    "text": "some other guidelines and talks on the subject have used the OSI model to describe the various threats and",
    "start": "1329640",
    "end": "1336400"
  },
  {
    "text": "mitigation strategies and that's also a perfectly valid way of considering",
    "start": "1336400",
    "end": "1342360"
  },
  {
    "text": "it but uh regardless of how you define these layers uh what's more important um",
    "start": "1342360",
    "end": "1347600"
  },
  {
    "text": "is that you have uh comprehensive and um holistic coverage over all of them so as an",
    "start": "1347600",
    "end": "1355240"
  },
  {
    "text": "analogy um if you were preparing to dress up for a snowstorm or a very cold",
    "start": "1355240",
    "end": "1361000"
  },
  {
    "text": "weather um it wouldn't make much sense to have a thick jacket uh on top of a",
    "start": "1361000",
    "end": "1366039"
  },
  {
    "text": "sweater on top of thermals uh but to go out walking barefoot with shorts um",
    "start": "1366039",
    "end": "1371640"
  },
  {
    "text": "right so uh likewise if you have a setup that incorporates all the io security",
    "start": "1371640",
    "end": "1377240"
  },
  {
    "text": "tools uh but as and take advantage of the controls offered by uh kubernetes or",
    "start": "1377240",
    "end": "1383360"
  },
  {
    "text": "your cloud provider or other extensions uh then you're going to be uh vulnerable",
    "start": "1383360",
    "end": "1388640"
  },
  {
    "text": "to various threat types and malicious",
    "start": "1388640",
    "end": "1393279"
  },
  {
    "text": "actors so uh as one example of what a more hardened setup could look like in",
    "start": "1393760",
    "end": "1398880"
  },
  {
    "text": "production um in this demo I've used various sdo security features and",
    "start": "1398880",
    "end": "1403919"
  },
  {
    "text": "configuration options like the uh chain cni plugin uh outbound traffic policy",
    "start": "1403919",
    "end": "1409840"
  },
  {
    "text": "and strict peer authentication um and I'm also using gatekeeper uh to prevent bypassing of a",
    "start": "1409840",
    "end": "1416279"
  },
  {
    "text": "lot of these settings uh at the Ingress Gateway uh I'm authorizing requests",
    "start": "1416279",
    "end": "1421679"
  },
  {
    "text": "based on the jot token and I also have a web application firewall installed as a",
    "start": "1421679",
    "end": "1427200"
  },
  {
    "text": "wasm plugin uh to protect against other types of web-based attacks um I also",
    "start": "1427200",
    "end": "1433400"
  },
  {
    "text": "explicitly needed to create a natat rule um to make the Ingress Gateway accessible through the firewall uh so",
    "start": "1433400",
    "end": "1440640"
  },
  {
    "text": "another layer of security right there and um I'm also controlling outbound traffic policy uh through the Eris",
    "start": "1440640",
    "end": "1447120"
  },
  {
    "text": "Gateway and network policies um and then I have the firewall as another line of",
    "start": "1447120",
    "end": "1453039"
  },
  {
    "text": "defense um that only allows traffic to leave the nodes uh if it's routed through the Eris Gateway",
    "start": "1453039",
    "end": "1460080"
  },
  {
    "text": "nodes um and on top of that I have a cloud-based key Vault to secure uh the root certificate and I'm also forwarding",
    "start": "1460080",
    "end": "1467159"
  },
  {
    "text": "the access logs that I've enabled to an analytics",
    "start": "1467159",
    "end": "1472760"
  },
  {
    "text": "workspace uh so now just for a quick run through to take a closer look at the security",
    "start": "1473000",
    "end": "1479759"
  },
  {
    "text": "architecture um yeah so as you can see here leveraging G Ops as a handy tool to",
    "start": "1480919",
    "end": "1487880"
  },
  {
    "text": "facilitate installations and upgrades through Argo CD and also monitor configuration",
    "start": "1487880",
    "end": "1494600"
  },
  {
    "text": "drift um for my pki model um I'm using a plug insert uh with Azure key Vault uh",
    "start": "1494600",
    "end": "1502279"
  },
  {
    "text": "to store the certificate in Keys um so you could see the uh CA Sears uh secret",
    "start": "1502279",
    "end": "1508440"
  },
  {
    "text": "here in the itdo system namespace um and then you could see the secret provider class that Maps the",
    "start": "1508440",
    "end": "1514679"
  },
  {
    "text": "secret to the key Vault um now let's see what happens to incoming traffic entering the",
    "start": "1514679",
    "end": "1521960"
  },
  {
    "text": "mesh uh we see that a request without a jot token uh gets rejected by the",
    "start": "1521960",
    "end": "1527080"
  },
  {
    "text": "authorization policy with the 403 request with an invalid token gets denied by the request",
    "start": "1527080",
    "end": "1533960"
  },
  {
    "text": "authentication um now request with a valid Bearer token succeeds as",
    "start": "1533960",
    "end": "1540039"
  },
  {
    "text": "expected uh but what happens if I tried say a cross- scripting attack um because",
    "start": "1540039",
    "end": "1546080"
  },
  {
    "text": "I have the Kaza web application firewall uh running in the Ingress gateway to",
    "start": "1546080",
    "end": "1551360"
  },
  {
    "text": "detect these kinds of exploits uh we could see that that malicious attempt also gets blocked and if you see the",
    "start": "1551360",
    "end": "1557600"
  },
  {
    "text": "Ingress Gateway logs uh we could see Kaza doing its work and Reporting the",
    "start": "1557600",
    "end": "1564640"
  },
  {
    "text": "anomaly so now let's take a look at communication uh inside the mesh um I",
    "start": "1565159",
    "end": "1570880"
  },
  {
    "text": "have a strict peer authentication in the DDO system",
    "start": "1570880",
    "end": "1576320"
  },
  {
    "text": "namespace um and if I try creating a permissive policy that overrides that we",
    "start": "1576320",
    "end": "1581840"
  },
  {
    "text": "see that it will get blocked by",
    "start": "1581840",
    "end": "1585600"
  },
  {
    "text": "GateKeeper right um I also have a deny by default",
    "start": "1587240",
    "end": "1593279"
  },
  {
    "text": "authorization policy uh so um if I have my sleep",
    "start": "1593279",
    "end": "1598520"
  },
  {
    "text": "application trying to communicate with HTTP bin um it'll return a 403 because",
    "start": "1598520",
    "end": "1603840"
  },
  {
    "text": "that communication is not",
    "start": "1603840",
    "end": "1607200"
  },
  {
    "text": "authorized okay cool um now let's take a look at e",
    "start": "1613320",
    "end": "1619039"
  },
  {
    "text": "traffic so here I needed to explicitly add a service entry for",
    "start": "1619039",
    "end": "1624840"
  },
  {
    "text": "cnn.com uh to make it accessible from inside the mesh and um that's because I",
    "start": "1624840",
    "end": "1630840"
  },
  {
    "text": "have the outbound traffic policy and the mesh config set to registry",
    "start": "1630840",
    "end": "1637360"
  },
  {
    "text": "only yeah great but if uh",
    "start": "1643279",
    "end": "1648919"
  },
  {
    "text": "sure sure sorry",
    "start": "1648919",
    "end": "1655720"
  },
  {
    "text": "okay yeah uh for the interesting time I'm just going to uh wrap that up um but",
    "start": "1655720",
    "end": "1661600"
  },
  {
    "text": "yeah the main thing there is just multiple lines of defense and um",
    "start": "1661600",
    "end": "1666640"
  },
  {
    "text": "basically even if the traffic is bypassed to the Eis gateway then the request would end up getting",
    "start": "1666640",
    "end": "1673320"
  },
  {
    "text": "denied and uh if you wanted to try any of this on your own um on a different cloud provider uh here are the",
    "start": "1674039",
    "end": "1680799"
  },
  {
    "text": "equivalents for GK and AKs or and eks um also the slides will be available",
    "start": "1680799",
    "end": "1687399"
  },
  {
    "text": "uh online so feel free to download and take a closer look",
    "start": "1687399",
    "end": "1692559"
  },
  {
    "text": "later uh yeah a few other additional resources if you want to download the slides and check these out later um also",
    "start": "1693720",
    "end": "1701240"
  },
  {
    "text": "Zach has done a lot of work with ISO and zero trust so um he is the go-to person for",
    "start": "1701240",
    "end": "1707120"
  },
  {
    "text": "that so yeah that's it for my talk today uh I hope you found it helpful and uh",
    "start": "1707120",
    "end": "1712399"
  },
  {
    "text": "thanks so much for attending uh please feel free to reach out on LinkedIn uh please scan the QR code and leave",
    "start": "1712399",
    "end": "1718440"
  },
  {
    "text": "feedback if you enjoy the session and um yeah um that's pretty much it for me",
    "start": "1718440",
    "end": "1724760"
  },
  {
    "text": "today and please enjoy the rest of Ito [Applause]",
    "start": "1724760",
    "end": "1734120"
  },
  {
    "text": "day thank you so much N I don't think we will have much time uh actually we might",
    "start": "1734120",
    "end": "1741120"
  },
  {
    "text": "be able to take one question as John you come up and set up the laptop if there's",
    "start": "1741120",
    "end": "1747240"
  },
  {
    "text": "any question uh to Nan um can you pass",
    "start": "1747240",
    "end": "1755880"
  },
  {
    "text": "the yeah thank you um so she was trying to tell you like five minutes before",
    "start": "1758200",
    "end": "1763240"
  },
  {
    "text": "yeah I forgot you I have a question yes um oh you want to answer the question",
    "start": "1763240",
    "end": "1768440"
  },
  {
    "text": "what is your opinion uh on using security Frameworks like SE Linux or EP",
    "start": "1768440",
    "end": "1774640"
  },
  {
    "text": "aror to together with kubernetes and is still sorry uh could you repeat the question I I didn't hear about the use",
    "start": "1774640",
    "end": "1782200"
  },
  {
    "text": "of uh SE Linux or app armor within Linux uh to to harden the containers this is",
    "start": "1782200",
    "end": "1790120"
  },
  {
    "text": "the question what is your opinion about this uh I'm not uh as familiar with uh the",
    "start": "1790120",
    "end": "1797679"
  },
  {
    "text": "specific uh container security tools but I think um yeah there there are various",
    "start": "1797679",
    "end": "1804640"
  },
  {
    "text": "uh ways you could go about like uh hardening your container images and you",
    "start": "1804640",
    "end": "1810200"
  },
  {
    "text": "do want to have that in your uh environment um along with the other",
    "start": "1810200",
    "end": "1816720"
  },
  {
    "text": "uh uh like ddio and kubernetes security controls um I did have something briefly there about workload security but",
    "start": "1816720",
    "end": "1825360"
  },
  {
    "text": "um but yeah hardening your container images using uh dist list is always good",
    "start": "1825360",
    "end": "1830799"
  },
  {
    "text": "practice okay thank you",
    "start": "1830799",
    "end": "1834919"
  }
]