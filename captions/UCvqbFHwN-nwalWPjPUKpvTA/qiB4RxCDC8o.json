[
  {
    "start": "0",
    "end": "120000"
  },
  {
    "text": "please welcome to the stage Aaron pleasanter hey guys everybody hear me OK",
    "start": "260",
    "end": "12240"
  },
  {
    "text": "in the back yeah great as you said my name is Aaron Schlesinger I'm senior engineer at dais come down to",
    "start": "12240",
    "end": "19590"
  },
  {
    "text": "our booth get some free socks we'd love to see you I will be down there after this talk actually I also sit on a",
    "start": "19590",
    "end": "26279"
  },
  {
    "text": "leadership board of the Service Catalog sig so drop in there if you're ever interested in what we're doing so today",
    "start": "26279",
    "end": "33410"
  },
  {
    "text": "as mentioned I think in the program this is a deep dive we're going to actually go look at some code before we show a",
    "start": "33410",
    "end": "40020"
  },
  {
    "text": "demo before all that we're going to go through some use cases including some stuff that we do a dais with the go",
    "start": "40020",
    "end": "46260"
  },
  {
    "text": "client library and then we're going to wrap up with some patterns and if there's some time left over I will run",
    "start": "46260",
    "end": "52140"
  },
  {
    "text": "out into the audience and take questions from people on the mic hopefully so",
    "start": "52140",
    "end": "58320"
  },
  {
    "text": "first of all why would you ever use the go client library ever why not just",
    "start": "58320",
    "end": "63510"
  },
  {
    "text": "script cubes ETL would bash or just manually do stuff at your computer why not just do that",
    "start": "63510",
    "end": "69119"
  },
  {
    "text": "well to get there let's talk about how anyone how I or any one of you guys",
    "start": "69119",
    "end": "74430"
  },
  {
    "text": "probably started with kubernetes I call it the twelve days of kubernetes I came up with that at about 2:00 a.m. this",
    "start": "74430",
    "end": "80340"
  },
  {
    "text": "morning in my hotel room you would probably start something like this right",
    "start": "80340",
    "end": "85380"
  },
  {
    "text": "you would start with something I've called like the Zen of kubernetes that's something like learning why kubernetes",
    "start": "85380",
    "end": "91799"
  },
  {
    "text": "learning about immutable deployments learning about pods learning about other basic resource types services",
    "start": "91799",
    "end": "98159"
  },
  {
    "text": "deployments replicas sets so on and so forth obviously learning how to use cubes ETL that's pretty important right",
    "start": "98159",
    "end": "104460"
  },
  {
    "text": "you might even go a step higher and learn about helm or some higher-level tools like helm I have a soft spot in my",
    "start": "104460",
    "end": "111329"
  },
  {
    "text": "heart for helm because that was started at Deus but there are other plenty of other high level tools for kubernetes",
    "start": "111329",
    "end": "119659"
  },
  {
    "text": "then on what I've called the 13th day not bad luck this is actually a really",
    "start": "119719",
    "end": "125460"
  },
  {
    "start": "120000",
    "end": "235000"
  },
  {
    "text": "good day for you in kubernetes you're probably going to go start automating a few things right so",
    "start": "125460",
    "end": "131250"
  },
  {
    "text": "probably the primary thing is going to be CI how do you get someone's code on a development team through a CI pipeline",
    "start": "131250",
    "end": "138849"
  },
  {
    "text": "through all the tests stress tests staging all that good stuff into an image you probably have figured that out",
    "start": "138849",
    "end": "145510"
  },
  {
    "text": "by now by the 13th days and then how do you get that image onto a cluster maybe",
    "start": "145510",
    "end": "151000"
  },
  {
    "text": "you're going to go to a staging cluster first or pre prod cluster I've heard it called sometimes and then you're going",
    "start": "151000",
    "end": "157480"
  },
  {
    "text": "to promote to real production for the big show right how do you go through",
    "start": "157480",
    "end": "162579"
  },
  {
    "text": "that process well first step might be to start scripting keep CTL write a bash script or write it in groovy in Jenkins",
    "start": "162579",
    "end": "169690"
  },
  {
    "text": "or something like that and then you're going to do a couple cubes ETL commands to move through this process right you",
    "start": "169690",
    "end": "177670"
  },
  {
    "text": "also might start scripting some things like backup run a script to do some cube cgl stuff inside of a pad inside of a",
    "start": "177670",
    "end": "184000"
  },
  {
    "text": "pod and put that in a cron job for example and start doing some backup or",
    "start": "184000",
    "end": "189099"
  },
  {
    "text": "analytics on your cluster or troubleshooting or maybe email out a report to your team on how your clusters",
    "start": "189099",
    "end": "194829"
  },
  {
    "text": "doing we're going to talk about the 14th day here today this is when you start",
    "start": "194829",
    "end": "201099"
  },
  {
    "text": "leveling up in your automation and you've got to do stuff that maybe bash or just cube CTL or something at that",
    "start": "201099",
    "end": "208329"
  },
  {
    "text": "level is not really going to be enough and you have to start talking directly to kubernetes directly to the kubernetes",
    "start": "208329",
    "end": "215470"
  },
  {
    "text": "core api doing things like watching the event stream and reacting to events in a",
    "start": "215470",
    "end": "221980"
  },
  {
    "text": "meaningful really deep way right that's just one example and that happens to be",
    "start": "221980",
    "end": "227470"
  },
  {
    "text": "something we're going to demo today and we're going to see some code for today and there's plenty of other examples out",
    "start": "227470",
    "end": "232930"
  },
  {
    "text": "there right so here are some examples who here has heard of a third party",
    "start": "232930",
    "end": "239560"
  },
  {
    "start": "235000",
    "end": "499000"
  },
  {
    "text": "resource in kubernetes Wow awesome we're going to touch on",
    "start": "239560",
    "end": "244599"
  },
  {
    "text": "kubernetes third party resources today and in the demo I'm really really happy to see everyone raised their hands here",
    "start": "244599",
    "end": "250900"
  },
  {
    "text": "today I love pprs I call them CPR they could have called three PRS by some",
    "start": "250900",
    "end": "256269"
  },
  {
    "text": "people too or whatever other abbreviation who here has heard of ingress",
    "start": "256269",
    "end": "261640"
  },
  {
    "text": "controllers that's amazing - thank you you guys are a great crowd thank you very much",
    "start": "261640",
    "end": "267320"
  },
  {
    "text": "give yourselves a round of applause anybody yeah okay awesome awesome we heard yesterday from the",
    "start": "267320",
    "end": "274130"
  },
  {
    "text": "Philips keynote at the end of yesterday they wrote their own horizontal pod autoscaler one of the easiest ways to",
    "start": "274130",
    "end": "279860"
  },
  {
    "text": "get there is to use the go client library writing your goal writing your",
    "start": "279860",
    "end": "285260"
  },
  {
    "text": "horizontal pod autoscaler and go it's probably one of the lowest friction ways to get something meaningful done",
    "start": "285260",
    "end": "291020"
  },
  {
    "text": "you could probably script something there might even be a bash kubernetes client out there and if there is come",
    "start": "291020",
    "end": "297140"
  },
  {
    "text": "find me later we'll have a discussion I'd love to see that but the go client library is sort",
    "start": "297140",
    "end": "302570"
  },
  {
    "text": "of made for tasks like this and then that last one their user aggregated services or user aggregated API this is",
    "start": "302570",
    "end": "310010"
  },
  {
    "text": "an up-and-coming technology we're actually using it in Service Catalog right now and this is a way to extend",
    "start": "310010",
    "end": "316460"
  },
  {
    "text": "the kubernetes api without touching the kubernetes kubernetes core code base at",
    "start": "316460",
    "end": "321740"
  },
  {
    "text": "all right you can build your own API and starting in one six I believe it's an",
    "start": "321740",
    "end": "326870"
  },
  {
    "text": "alpha support now kubernetes will figure out how to route traffic from the kubernetes core api to your api but your",
    "start": "326870",
    "end": "334820"
  },
  {
    "text": "api here is a catch it has to look like kubernetes api it has to be coop CTL",
    "start": "334820",
    "end": "340310"
  },
  {
    "text": "compatible it has to have resources has to have off you're not going to probably",
    "start": "340310",
    "end": "345380"
  },
  {
    "text": "be able to write that and bash right I'm bashing bash a lot I actually love that but you're probably not going to write",
    "start": "345380",
    "end": "352040"
  },
  {
    "text": "it in bash and that's probably not a good fit in this case you might be able to write it in some other languages too and there are some up-and-coming",
    "start": "352040",
    "end": "357920"
  },
  {
    "text": "libraries to do that but the gold client library as of now is probably the best fit and then let's go to some things",
    "start": "357920",
    "end": "365660"
  },
  {
    "text": "that deus and others have done we have deus workflow that's an open source project where we've started maybe almost",
    "start": "365660",
    "end": "372710"
  },
  {
    "text": "two years ago now and it's a path platform as a service that runs on top of kubernetes there are a bunch of pods",
    "start": "372710",
    "end": "379880"
  },
  {
    "text": "I believe we have 12 projects under the workflow umbrella they run a bunch of pods inside of kubernetes and they do",
    "start": "379880",
    "end": "386210"
  },
  {
    "text": "almost everything under the Sun you could think of - the kubernetes api to make kubernetes look like something like",
    "start": "386210",
    "end": "393800"
  },
  {
    "text": "Heroku right you can get pushed to this thing and it will go and build your code with",
    "start": "393800",
    "end": "399840"
  },
  {
    "text": "the flood builder or if you push something with a docker file it'll do a docker build on it it does do that in a",
    "start": "399840",
    "end": "406620"
  },
  {
    "text": "different pod and then it'll figure out when that pod done and it'll create an image for you and it will push that",
    "start": "406620",
    "end": "411990"
  },
  {
    "text": "image to a registry of your choosing it could be inside the cluster or it can be docker hub or quaid i/o or GC R or",
    "start": "411990",
    "end": "418889"
  },
  {
    "text": "anything else right and then after that's done then it will somehow",
    "start": "418889",
    "end": "424080"
  },
  {
    "text": "magically it will push that and it will get it into kubernetes right it'll",
    "start": "424080",
    "end": "429960"
  },
  {
    "text": "trigger a deployment or it will use the replication controller in the old-school version or it might launch a job",
    "start": "429960",
    "end": "436050"
  },
  {
    "text": "background job many other possibilities there and then if it's network routable",
    "start": "436050",
    "end": "441509"
  },
  {
    "text": "it'll create a service and then the router component the thing called the",
    "start": "441509",
    "end": "447150"
  },
  {
    "text": "router mash will figure out but that new service exists using the watch stream and then there's a logging component and",
    "start": "447150",
    "end": "454110"
  },
  {
    "text": "then there's monitoring and then there's this and then there's that and if you build a pass inside of your company if",
    "start": "454110",
    "end": "460289"
  },
  {
    "text": "you're on the SRE team or the dev ops team or the dev team that's in charge of the pass you're going to add feature ace",
    "start": "460289",
    "end": "466770"
  },
  {
    "text": "and then you're going to have to have feature B and then this new team is going to come along and start using your kubernetes pass feature C and D and this",
    "start": "466770",
    "end": "474870"
  },
  {
    "text": "is a really great problem to have right I'll hit the wall soon you're going to have all these features that people want",
    "start": "474870",
    "end": "480629"
  },
  {
    "text": "because kubernetes is so great for deploying apps and your path is going to be the way to build it right your",
    "start": "480629",
    "end": "488159"
  },
  {
    "text": "developers are going to want more and more features in the go client library I can almost like it stand up here and",
    "start": "488159",
    "end": "493649"
  },
  {
    "text": "almost guarantee that's going to be the fastest way to get these features out the door for your developers and then we",
    "start": "493649",
    "end": "500129"
  },
  {
    "start": "499000",
    "end": "558000"
  },
  {
    "text": "have wizard levels these are some things we've done a dataset have turned out to be really fancy in some cases they've",
    "start": "500129",
    "end": "507419"
  },
  {
    "text": "been overkill but we've got things like distributed coordination right this is a primitive a distributed lock or",
    "start": "507419",
    "end": "513510"
  },
  {
    "text": "distributed lease that's waiting for something else to complete and putting",
    "start": "513510",
    "end": "518518"
  },
  {
    "text": "that in a critical section so that nobody else can touch it we got leader election anybody heard of",
    "start": "518519",
    "end": "523890"
  },
  {
    "text": "leader election cool cool that's having a process do all the work and",
    "start": "523890",
    "end": "529670"
  },
  {
    "text": "having a bunch of other processes wait and if that main process fails one of",
    "start": "529670",
    "end": "534920"
  },
  {
    "text": "those other guys would pick up the slack and they'll start doing the work but only one of them is going to do the work at a single time distributed latch",
    "start": "534920",
    "end": "541580"
  },
  {
    "text": "that's again photo like coordination that's waiting for someone else to finish work elsewhere in the cluster and",
    "start": "541580",
    "end": "547910"
  },
  {
    "text": "then you continue your work okay just some of the use cases for going in and",
    "start": "547910",
    "end": "554480"
  },
  {
    "text": "starting to look at the client go library go SDK let's go into code mode now let's start talking about what this",
    "start": "554480",
    "end": "561350"
  },
  {
    "start": "558000",
    "end": "631000"
  },
  {
    "text": "really looks like okay first of all what is the SDK it's a go package you can go",
    "start": "561350",
    "end": "567860"
  },
  {
    "text": "get it or use your favorite go dependency manager it's there it's called Kate's Kas io / client go it is",
    "start": "567860",
    "end": "576320"
  },
  {
    "text": "focused as the name might imply on building clients it's outside of the",
    "start": "576320",
    "end": "581330"
  },
  {
    "text": "mono repo it's outside of kubernetes flash kubernetes it's specific to clients right you get full access to the",
    "start": "581330",
    "end": "588290"
  },
  {
    "text": "core Cunha's api that's everything all the resources watching all the event streams everything and you're going to",
    "start": "588290",
    "end": "595700"
  },
  {
    "text": "get the best bang for your buck starting they're starting access to the core API instead of using coop CTL to do it I",
    "start": "595700",
    "end": "602330"
  },
  {
    "text": "think there was coop cuddles is another name I'll use coop CTL today but there's also more right there's higher level",
    "start": "602330",
    "end": "609200"
  },
  {
    "text": "constructs I'm not going to be able to show today but there's higher level constructs to build really rich controllers or to do really fancy",
    "start": "609200",
    "end": "616610"
  },
  {
    "text": "caching on the client side and encourage you that's kind of wizard level two as",
    "start": "616610",
    "end": "621650"
  },
  {
    "text": "you start using the client library and then you want to go build something even more high-level go look at those",
    "start": "621650",
    "end": "627320"
  },
  {
    "text": "packages - and they're all inside of this package client go so let's talk",
    "start": "627320",
    "end": "632780"
  },
  {
    "start": "631000",
    "end": "755000"
  },
  {
    "text": "about some of the relevant packages in client go ok these are the ones we're",
    "start": "632780",
    "end": "638120"
  },
  {
    "text": "going to see today there's tons more so first of all starting from the top kubernetes is the first sub package that",
    "start": "638120",
    "end": "644960"
  },
  {
    "text": "you'll hit when you use client go so the kubernetes package basically contains",
    "start": "644960",
    "end": "650780"
  },
  {
    "text": "this big old thing this big old struct and go and that will give you access to",
    "start": "650780",
    "end": "656660"
  },
  {
    "text": "everything the whole gamut of resources including you get access to the core API groups",
    "start": "656660",
    "end": "663640"
  },
  {
    "text": "extensions so on and so forth and there's rest the second one down that",
    "start": "663640",
    "end": "669350"
  },
  {
    "text": "contains a raw rest client you can literally talk to kubernetes using get",
    "start": "669350",
    "end": "674480"
  },
  {
    "text": "this path or HTTP POST to this path with a body and it also contains config and",
    "start": "674480",
    "end": "681200"
  },
  {
    "text": "you'll use it most for config and that's just how do I locate authenticate and",
    "start": "681200",
    "end": "686780"
  },
  {
    "text": "authorize with the kubernetes core API server another is dynamic now dynamic is",
    "start": "686780",
    "end": "693710"
  },
  {
    "text": "sort of a smaller client that sits inside of the kubernetes master client and that we're going to use today to",
    "start": "693710",
    "end": "699500"
  },
  {
    "text": "talk with third-party resources I told you I'd come back to third-party resources we're going to come back with",
    "start": "699500",
    "end": "704930"
  },
  {
    "text": "a vengence in a second and then that last one PKG api that dot dot dot means",
    "start": "704930",
    "end": "711440"
  },
  {
    "text": "there's a whole bunch of stuff under PKG api that's well you're where you will",
    "start": "711440",
    "end": "716900"
  },
  {
    "text": "find all of the resources that you know of in kubernetes there is a ghost struct for pod services namespaces deployments",
    "start": "716900",
    "end": "726080"
  },
  {
    "text": "nodes everything they're all accessible there and they're all go struck so you",
    "start": "726080",
    "end": "731960"
  },
  {
    "text": "can work with them in memory as you go now PKG api also has some smaller data",
    "start": "731960",
    "end": "739310"
  },
  {
    "text": "types that you'll use if you start working with things like third-party resources so you will compose some of",
    "start": "739310",
    "end": "746750"
  },
  {
    "text": "these data types into your own structs in order to make kubernetes compatible things we'll see that as well in the",
    "start": "746750",
    "end": "753410"
  },
  {
    "text": "code okay so we always start with something like hello world right now",
    "start": "753410",
    "end": "759770"
  },
  {
    "start": "755000",
    "end": "874000"
  },
  {
    "text": "this is sort of the simplest thing to show off some of the concepts that we",
    "start": "759770",
    "end": "764930"
  },
  {
    "text": "can put on paper on ePaper right so that first line there is a really handy",
    "start": "764930",
    "end": "770960"
  },
  {
    "text": "convenience function and what that is is give me a configuration for talking to",
    "start": "770960",
    "end": "776300"
  },
  {
    "text": "the kubernetes core API just given all the stuff that any pod and the kubernetes cluster will already have so",
    "start": "776300",
    "end": "783770"
  },
  {
    "text": "kubernetes will inject all pods almost all pods at least with a file with a",
    "start": "783770",
    "end": "788780"
  },
  {
    "text": "service account in it and a couple environment variables that hold the location of the kubernetes core API that is one of the most convenient",
    "start": "788780",
    "end": "797220"
  },
  {
    "text": "things I've ever seen in the go client library or the mono repo you call one thing you don't have to",
    "start": "797220",
    "end": "803820"
  },
  {
    "text": "know where any of this information is and it'll just give you back a config or an error and that you'll find that error",
    "start": "803820",
    "end": "810060"
  },
  {
    "text": "a lot of times if you accidentally run your program outside of kubernetes and there are some ways around that that I I",
    "start": "810060",
    "end": "816360"
  },
  {
    "text": "can get to after if you come find me then that second line given a",
    "start": "816360",
    "end": "821580"
  },
  {
    "text": "configuration that I got in the first line create that new massive client right create me a client given that",
    "start": "821580",
    "end": "829020"
  },
  {
    "text": "configuration that I can use to do everything if I want to and then that",
    "start": "829020",
    "end": "834630"
  },
  {
    "text": "third line that's basically just lists all the pods in a given namespace right",
    "start": "834630",
    "end": "840180"
  },
  {
    "text": "that can be pretty handy you can also list all the pods in all namespaces will",
    "start": "840180",
    "end": "845220"
  },
  {
    "text": "see that in use in the code as well but there are tons and tons of other uses",
    "start": "845220",
    "end": "851040"
  },
  {
    "text": "here right you can call core v1 that that first",
    "start": "851040",
    "end": "856410"
  },
  {
    "text": "function on CL and that will give you access to all the core kubernetes resources pod services again if the list",
    "start": "856410",
    "end": "863670"
  },
  {
    "text": "goes on and on you can call extensions and extensions will give you access to",
    "start": "863670",
    "end": "868680"
  },
  {
    "text": "all the things in the API group called extensions and so on and so forth but",
    "start": "868680",
    "end": "876330"
  },
  {
    "start": "874000",
    "end": "936000"
  },
  {
    "text": "that's just hello world let's talk about something real more real something you might actually use let's talk about a",
    "start": "876330",
    "end": "883620"
  },
  {
    "text": "program that can backup the state of a cluster right let's talk about something where I can take I can tell it to backup",
    "start": "883620",
    "end": "891120"
  },
  {
    "text": "pod and when I tell it that it's going to grab all the pods just as we saw on",
    "start": "891120",
    "end": "896580"
  },
  {
    "text": "the previous slide that third line but it's going to grab all the pods in all",
    "start": "896580",
    "end": "902430"
  },
  {
    "text": "the namespaces and it's going to back them up somewhere so that I can see over time what did my cluster look like what",
    "start": "902430",
    "end": "909180"
  },
  {
    "text": "pods were running right that can be pretty useful but furthermore I want to",
    "start": "909180",
    "end": "914730"
  },
  {
    "text": "make this thing a little simple right I don't want to have to open up a port and serve on a REST API and create a client",
    "start": "914730",
    "end": "921810"
  },
  {
    "text": "for that right API I want to just cube CTO creates - F a third-party resource just like I create",
    "start": "921810",
    "end": "928829"
  },
  {
    "text": "anything else including Eddie's and I want that to trigger the backup processing so that's the context let's",
    "start": "928829",
    "end": "937800"
  },
  {
    "text": "talk about how this thing will look before we go into the code I promised last slide before code who here was",
    "start": "937800",
    "end": "944009"
  },
  {
    "text": "waiting for code and saying shut up let's get to the code okay fair fair enough we'll get there I want",
    "start": "944009",
    "end": "950759"
  },
  {
    "text": "to show this before we get into the code so you guys know kind of what's going on so first of all our main function every",
    "start": "950759",
    "end": "956370"
  },
  {
    "text": "go program starts with the main right a lot of other programming languages do that too now that's the thing that's",
    "start": "956370",
    "end": "962759"
  },
  {
    "text": "going to create a watcher the thing that consumes the watch events it's going to use the dynamic client to do that it's",
    "start": "962759",
    "end": "969029"
  },
  {
    "text": "going to send every watch event down into the watch event filter that's just going to decode stuff into those backups",
    "start": "969029",
    "end": "975420"
  },
  {
    "text": "third party resources that I'll show the filter is going to send those decoded events back up into the watch loop and",
    "start": "975420",
    "end": "982560"
  },
  {
    "text": "the watch loop is just going to multiplex it's going to figure out what resources did the user ask me to back up",
    "start": "982560",
    "end": "989089"
  },
  {
    "text": "once it figures that out it's going to send a function call to the sync all of that your logger so based on if you say",
    "start": "989089",
    "end": "996600"
  },
  {
    "text": "I want to backup pod it's going to go and say hey fetch your logger go back up the pod and log them out to standard out",
    "start": "996600",
    "end": "1003199"
  },
  {
    "text": "of course in a more more advanced version of this program let's say you",
    "start": "1003199",
    "end": "1009199"
  },
  {
    "text": "might instead of logs to stand it out you might put them into a file and send them up to s3 something along those",
    "start": "1009199",
    "end": "1014809"
  },
  {
    "text": "lines I told you let's go to the code",
    "start": "1014809",
    "end": "1022329"
  },
  {
    "start": "1016000",
    "end": "1554000"
  },
  {
    "text": "all righty make this a little bigger can",
    "start": "1026209",
    "end": "1034589"
  },
  {
    "text": "anybody not see this how about now we'll",
    "start": "1034589",
    "end": "1045720"
  },
  {
    "text": "make it a little bigger good are those",
    "start": "1045720",
    "end": "1051150"
  },
  {
    "text": "thumbs up or make it bigger okay good all right so here's our main this is",
    "start": "1051150",
    "end": "1057090"
  },
  {
    "text": "where it all starts you guys probably know that here's that pattern again in cluster config this thing is going to work in",
    "start": "1057090",
    "end": "1063450"
  },
  {
    "text": "pods without me having to figure out what environment variables here what file is there same thing let's create",
    "start": "1063450",
    "end": "1069660"
  },
  {
    "text": "that big master client from the config now we get a little fancy from that same",
    "start": "1069660",
    "end": "1075390"
  },
  {
    "text": "config let's create a dynamic client this is the thing that we're going to use to talk to third party resources",
    "start": "1075390",
    "end": "1080750"
  },
  {
    "text": "okay next line we care about let's create the watcher that was the Box on",
    "start": "1080750",
    "end": "1086940"
  },
  {
    "text": "the left the bottom left-hand side right the watch is going to be that thing that watches these third-party resources next",
    "start": "1086940",
    "end": "1094550"
  },
  {
    "text": "let's run that loop that's the loop that's going to consume those watch events it's going to wait for an event",
    "start": "1094550",
    "end": "1100710"
  },
  {
    "text": "to come in it's going to multiplex to the right set your logger and then it's going to call that fetcher logger to do",
    "start": "1100710",
    "end": "1106200"
  },
  {
    "text": "the work the real work that we care about okay next the third party resource",
    "start": "1106200",
    "end": "1113100"
  },
  {
    "text": "itself this backup object struct in go language this is the thing that we're",
    "start": "1113100",
    "end": "1120179"
  },
  {
    "text": "going to decode from the watch stream into right those first two lines on version dot type meta and API object",
    "start": "1120179",
    "end": "1128280"
  },
  {
    "text": "meta that will call it boilerplate right you probably have seen of the pod struct",
    "start": "1128280",
    "end": "1134040"
  },
  {
    "text": "or the namespace struct all of the in-memory kubernetes object types have",
    "start": "1134040",
    "end": "1139530"
  },
  {
    "text": "these two lines in them and they're very convenient and if you try to write a kubernetes resource type and a",
    "start": "1139530",
    "end": "1145530"
  },
  {
    "text": "third-party resource for example without those you're going to have a hard time so I recommend first two lines always",
    "start": "1145530",
    "end": "1150929"
  },
  {
    "text": "put those and then the thing that we care about today is resource type that's the parameter that's going to",
    "start": "1150929",
    "end": "1157250"
  },
  {
    "text": "tell our watch loop what do I want to back up it's just like calling a function and saying these are the",
    "start": "1157250",
    "end": "1163250"
  },
  {
    "text": "resource types I want to back up next the watch loop itself excuse me if you",
    "start": "1163250",
    "end": "1170150"
  },
  {
    "text": "watcher itself we create a watcher right here from the dynamic client that I",
    "start": "1170150",
    "end": "1176870"
  },
  {
    "text": "showed we created in the main ok so we're watching backup the backup",
    "start": "1176870",
    "end": "1182570"
  },
  {
    "text": "resource type in a given namespace and then down here we're going to send all",
    "start": "1182570",
    "end": "1188059"
  },
  {
    "text": "those watch events through a filter ok let's go down to the filter this is a",
    "start": "1188059",
    "end": "1194179"
  },
  {
    "text": "big decode and encode job right we get objects coming in as this unstructured",
    "start": "1194179",
    "end": "1201200"
  },
  {
    "text": "type that's a bucket of bytes kubernetes says I've never heard of a backup I'm",
    "start": "1201200",
    "end": "1206600"
  },
  {
    "text": "just going to dump you some bytes and you figure out what to do with it and we will figure out what to do with it on the next line ok so we're going to",
    "start": "1206600",
    "end": "1213919"
  },
  {
    "text": "marshal and then unmarshal into our backup object that I just showed before",
    "start": "1213919",
    "end": "1219549"
  },
  {
    "text": "ok once we do that assuming all went well we're going to return a new watch",
    "start": "1219549",
    "end": "1225200"
  },
  {
    "text": "event that looks pretty similar to the old watch event except this new thing is going to have a backup in it and that's",
    "start": "1225200",
    "end": "1231559"
  },
  {
    "text": "the thing that we know how to deal with in our watch loop speaking of here is",
    "start": "1231559",
    "end": "1238370"
  },
  {
    "text": "the watch loop lots of code in here let's focus on two things first thing",
    "start": "1238370",
    "end": "1243980"
  },
  {
    "text": "here we're going to consume from a go channel that represents these watch events coming in right either in memory",
    "start": "1243980",
    "end": "1251240"
  },
  {
    "text": "watch events that we're going to figure out what to do it second thing up here",
    "start": "1251240",
    "end": "1256520"
  },
  {
    "text": "on line 18 this is an infinite for loop that is not a bug ok this watch event on",
    "start": "1256520",
    "end": "1263419"
  },
  {
    "text": "line 26 can close at any time this is a channel that if the server decides no",
    "start": "1263419",
    "end": "1269510"
  },
  {
    "text": "more watch events for you it'll sever the connection and will figure out that the connection is severed by that channel closing if that",
    "start": "1269510",
    "end": "1276500"
  },
  {
    "text": "channel closes we're going to bail out of this inner for loop we're going to log and guess what we're going to go",
    "start": "1276500",
    "end": "1283039"
  },
  {
    "text": "back up to line 18 and start all over again ok and then finally there's a switch",
    "start": "1283039",
    "end": "1289539"
  },
  {
    "text": "statement here we're only going to support pause in this demo I'll get to in just a second but you had more cases",
    "start": "1289539",
    "end": "1295809"
  },
  {
    "text": "there your watch Lube thing and start supporting all kinds of other resources and then finally here is the fetcher",
    "start": "1295809",
    "end": "1306279"
  },
  {
    "text": "lager for pods remember this oops remember that the only difference",
    "start": "1306279",
    "end": "1312399"
  },
  {
    "text": "between that and what we showed in our hello world example is this is grabbing pods from every single namespace",
    "start": "1312399",
    "end": "1318360"
  },
  {
    "text": "that's what that open parentheses closed parentheses means you can do that that's",
    "start": "1318360",
    "end": "1324730"
  },
  {
    "text": "valid in kubernetes not recommended in lots of clusters because when you get to",
    "start": "1324730",
    "end": "1329740"
  },
  {
    "text": "let's say a hundred pod that's going to take forever lots of data is going to go over the wire if you ask for a bunch of",
    "start": "1329740",
    "end": "1335110"
  },
  {
    "text": "pods so I wouldn't recommend doing that on a production cluster instead I would probably iterate through namespaces and",
    "start": "1335110",
    "end": "1341049"
  },
  {
    "text": "do it one namespace after another all right let's see this thing in action put",
    "start": "1341049",
    "end": "1349179"
  },
  {
    "text": "your hands together pray for the demo God in this case if this doesn't work it's a hundred percent my fault alright",
    "start": "1349179",
    "end": "1356850"
  },
  {
    "text": "so you can follow along with the code here at this github address everything",
    "start": "1356850",
    "end": "1362559"
  },
  {
    "text": "is open-source everything get pushed to master from my computer and the first",
    "start": "1362559",
    "end": "1369880"
  },
  {
    "text": "thing I'm going to do is I'm going to install this watcher I'm pretty sure no one can see this so let's do this anyone",
    "start": "1369880",
    "end": "1377980"
  },
  {
    "text": "can not see this thumbs up all around great alright we're going to install the",
    "start": "1377980",
    "end": "1384399"
  },
  {
    "text": "watcher it's going to download this from",
    "start": "1384399",
    "end": "1390250"
  },
  {
    "text": "kway teow we're good thanks to Wi-Fi",
    "start": "1390250",
    "end": "1395700"
  },
  {
    "text": "we're going to look at log remember when we get a backup third-party resource",
    "start": "1395700",
    "end": "1400899"
  },
  {
    "text": "coming in we're going to fetch all the pods and print the standard out so when we create that backup third party",
    "start": "1400899",
    "end": "1406210"
  },
  {
    "text": "resource we're going to see a big huge chunk of JSON that represents all the",
    "start": "1406210",
    "end": "1412000"
  },
  {
    "text": "pause in our cluster and we're going to see it there just to make sure we can see it let's do that",
    "start": "1412000",
    "end": "1417760"
  },
  {
    "text": "okay second step let's install a backup",
    "start": "1417760",
    "end": "1424020"
  },
  {
    "text": "before we do that I want to show you what a backup looks like okay this is",
    "start": "1424020",
    "end": "1430960"
  },
  {
    "text": "probably familiar I want to point out one thing that's different from this and a kubernetes built-in resource that",
    "start": "1430960",
    "end": "1439650"
  },
  {
    "text": "because kubernetes ever heard of a backup resource have any of you guys heard of a backup resource in the",
    "start": "1439650",
    "end": "1445450"
  },
  {
    "text": "kubernetes core okay that's good believe it or not and the reason is because in",
    "start": "1445450",
    "end": "1451090"
  },
  {
    "text": "the watcher I created a third-party resource called backup so after this was",
    "start": "1451090",
    "end": "1456670"
  },
  {
    "text": "submitted in that Hjelm install command that I just ran now kubernetes knows what a backup is so when I do the second",
    "start": "1456670",
    "end": "1465010"
  },
  {
    "text": "helm install I will now be creating a thing that kubernetes knows what to do",
    "start": "1465010",
    "end": "1470500"
  },
  {
    "text": "with okay when we create this I'll go",
    "start": "1470500",
    "end": "1475930"
  },
  {
    "text": "back to the first tab in my in my terminal and we're going to see it picks up the backup and it prints out all the",
    "start": "1475930",
    "end": "1482650"
  },
  {
    "text": "pods here's where the rubber should make the road all right we got pod 0 through",
    "start": "1482650",
    "end": "1492630"
  },
  {
    "text": "4 let's make sure this thing actually worked let's get all the pods ourselves",
    "start": "1492630",
    "end": "1502050"
  },
  {
    "text": "and there you have it there's five pod pod zero through four now this is a pod",
    "start": "1502740",
    "end": "1508570"
  },
  {
    "text": "here that we actually care about but the purpose of this thing was to dump all",
    "start": "1508570",
    "end": "1513640"
  },
  {
    "text": "the pods and again as I mentioned before you might want to extend this thing and maybe dump it to persistent storage put",
    "start": "1513640",
    "end": "1520150"
  },
  {
    "text": "in an s3 maybe send an email out with a report and also it's not that useful to",
    "start": "1520150",
    "end": "1526090"
  },
  {
    "text": "print out pods right you might want to print out all the services or the network ingress policies and the",
    "start": "1526090",
    "end": "1531190"
  },
  {
    "text": "namespaces something like that you just go in and you add a case statement to that code that I showed you and now",
    "start": "1531190",
    "end": "1536860"
  },
  {
    "text": "you've got you've got access to those two and you just pass in a backup TPR with the resource type called namespace",
    "start": "1536860",
    "end": "1545110"
  },
  {
    "text": "if you add namespace support or service if you have service support so on and so forth",
    "start": "1545110",
    "end": "1550160"
  },
  {
    "text": "okay so let's do a little recap on what",
    "start": "1550160",
    "end": "1558050"
  },
  {
    "start": "1554000",
    "end": "1660000"
  },
  {
    "text": "we just wrote I've got some patterns out of this okay so what we built in",
    "start": "1558050",
    "end": "1564230"
  },
  {
    "text": "kubernetes land you're probably familiar with this name is called a controller or a controller manager this is the thing",
    "start": "1564230",
    "end": "1570710"
  },
  {
    "text": "that generally doesn't really have a meaningful network interface you don't really call like get something on a",
    "start": "1570710",
    "end": "1578030"
  },
  {
    "text": "controller it's watching it's watching for event the kubernetes has some built-in controllers that watch for",
    "start": "1578030",
    "end": "1584390"
  },
  {
    "text": "events on the core api server and then they reconcile space we did the same thing",
    "start": "1584390",
    "end": "1589640"
  },
  {
    "text": "we watched events on the kubernetes core api server for those backup tt-rs and",
    "start": "1589640",
    "end": "1594680"
  },
  {
    "text": "our reconciling a state was we just did another call on the core API to get pods",
    "start": "1594680",
    "end": "1600110"
  },
  {
    "text": "and then we printed it out reconciled right also remember those two for loops",
    "start": "1600110",
    "end": "1606310"
  },
  {
    "text": "we were prepared with that outside for loop that went on forever we were prepared for the watch stream to close",
    "start": "1606310",
    "end": "1612560"
  },
  {
    "text": "at any time now there's another way you can do that you can just crash and if",
    "start": "1612560",
    "end": "1617810"
  },
  {
    "text": "you crash and you're running inside of a deployment replica set replication control or what have you kubernetes will just restart you we be",
    "start": "1617810",
    "end": "1626810"
  },
  {
    "text": "able to know we built our own resource we built the TPR called backup I showed you the template for that that's a great",
    "start": "1626810",
    "end": "1634340"
  },
  {
    "text": "way I think I mentioned this before too it's a great way to super easily extend kubernetes I'd recommend looking in that",
    "start": "1634340",
    "end": "1642590"
  },
  {
    "text": "if you want to add some custom functionality before you go and look inside of kubernetes proper and submit a",
    "start": "1642590",
    "end": "1649190"
  },
  {
    "text": "pull request to file an issue or anything like that these can go a very long way okay forgot my little clicker",
    "start": "1649190",
    "end": "1659620"
  },
  {
    "text": "so with that I want to say thanks we've",
    "start": "1659860",
    "end": "1664880"
  },
  {
    "start": "1660000",
    "end": "2099000"
  },
  {
    "text": "got 7 minutes and 27 seconds left for questions so I'm actually going to run",
    "start": "1664880",
    "end": "1672050"
  },
  {
    "text": "around the room if anyone has questions raise your hand all right go do I'm going to run to you",
    "start": "1672050",
    "end": "1677930"
  },
  {
    "text": "with this little fancy thing and have you say your question into the microphone",
    "start": "1677930",
    "end": "1683380"
  },
  {
    "text": "so I can get it off in my head I could do that but this is more fun okay chase",
    "start": "1683380",
    "end": "1689510"
  },
  {
    "text": "thank you so my question is to you and to the audience is okay controllers are great things for a synchronously",
    "start": "1689510",
    "end": "1695290"
  },
  {
    "text": "processing events but what if you want to be in line so for example you want to prevent the pod mostly spinning up for",
    "start": "1695290",
    "end": "1704360"
  },
  {
    "text": "whatever conditions you want to have or customer polarization whatever or whatever thing you want to be in line",
    "start": "1704360",
    "end": "1709670"
  },
  {
    "text": "masters interests thank you yeah so that's a great question so the",
    "start": "1709670",
    "end": "1716150"
  },
  {
    "text": "question was I'm going to summarize what if you don't want to have a controller running in the background what if you",
    "start": "1716150",
    "end": "1721940"
  },
  {
    "text": "want to do something such that let's say you cube ptl's do things and it should fail just right then in there not not",
    "start": "1721940",
    "end": "1729050"
  },
  {
    "text": "have to go and wait for the controller to do some work and then have someone look in the controller status field my",
    "start": "1729050",
    "end": "1735470"
  },
  {
    "text": "summarization was longer than your question so sorry about that so what",
    "start": "1735470",
    "end": "1740720"
  },
  {
    "text": "you're going to have to do there is look into the user aggregated service thing you can google it user aggregated",
    "start": "1740720",
    "end": "1746390"
  },
  {
    "text": "services just came out in 1:6 and again just to recap what those things are kubernetes core the core API server will",
    "start": "1746390",
    "end": "1753890"
  },
  {
    "text": "route traffic to your API server right your API server then can do the action",
    "start": "1753890",
    "end": "1759170"
  },
  {
    "text": "to intercept a request fail the request if necessary and that gives that feedback back to cube CTL writing a UAS",
    "start": "1759170",
    "end": "1766790"
  },
  {
    "text": "your user I created service that's probably another top and once it's tables to be honest I'll probably submit",
    "start": "1766790",
    "end": "1773870"
  },
  {
    "text": "a CFP for that and we can talk about that next time so still in alpha so probably worth reading but probably not",
    "start": "1773870",
    "end": "1780980"
  },
  {
    "text": "worth putting a production yet other questions oh okay shout it out",
    "start": "1780980",
    "end": "1789400"
  },
  {
    "text": "cool yep",
    "start": "1807920",
    "end": "1813690"
  },
  {
    "text": "the question was shouldn't you just fail fast with the watch stream in our case if the watch stream is broken why not",
    "start": "1813690",
    "end": "1819210"
  },
  {
    "text": "just fail fast and what kubernetes we started assuming you're running inside of a replication controller or a replica",
    "start": "1819210",
    "end": "1824670"
  },
  {
    "text": "set stellar question and yes you could fail fast but totally valid the problem",
    "start": "1824670",
    "end": "1830580"
  },
  {
    "text": "in both cases actually in my code and the fail fast case is that you'll you'll miss watch event right either way if",
    "start": "1830580",
    "end": "1837510"
  },
  {
    "text": "this if the watch string gets broken you'll miss like a couple hundred milliseconds probably of watch events if",
    "start": "1837510",
    "end": "1842670"
  },
  {
    "text": "you fail fast more epic kubernetes how many wash events you'll miss and the solution in either case is that you have",
    "start": "1842670",
    "end": "1849810"
  },
  {
    "text": "to lift you have to relist the resource that you're looking for and that's where we get into the controller",
    "start": "1849810",
    "end": "1855900"
  },
  {
    "text": "infrastructure that lives inside of client go so what the controller infrastructure does is that double for",
    "start": "1855900",
    "end": "1861840"
  },
  {
    "text": "loop just to make it a tiny little bit more robust and not have controllers continuously failing but they",
    "start": "1861840",
    "end": "1868200"
  },
  {
    "text": "periodically relist so they'll relist backups in our case and when the relist",
    "start": "1868200",
    "end": "1874110"
  },
  {
    "text": "happened they then reconcile again they reconcile a base to base on what backups haven't",
    "start": "1874110",
    "end": "1881250"
  },
  {
    "text": "been processed yet so failing fast is a great place to start once you go into",
    "start": "1881250",
    "end": "1888030"
  },
  {
    "text": "the controller infrastructure they'll take care of the double four loop stuff for you so that seems to be the de facto",
    "start": "1888030",
    "end": "1893940"
  },
  {
    "text": "standard is to kind of build a little bit more resilience into the app but I would actually recommend failing fast to",
    "start": "1893940",
    "end": "1900750"
  },
  {
    "text": "start so yes yes yep want to shout it out",
    "start": "1900750",
    "end": "1905990"
  },
  {
    "text": "sir yes so the question was is there a way to select portions of a response so",
    "start": "1917440",
    "end": "1922580"
  },
  {
    "text": "for example if your listing pause instead of having a big huge massive response body can I drill into just a",
    "start": "1922580",
    "end": "1929360"
  },
  {
    "text": "specific part of the pod spec for the pod status the answer is yes so when you",
    "start": "1929360",
    "end": "1934580"
  },
  {
    "text": "get Tod back you'll get back a list called a pod less convenient name right the pod list will have an items field in",
    "start": "1934580",
    "end": "1941900"
  },
  {
    "text": "destruct which will be a go slice to another word for an array a pod pod",
    "start": "1941900",
    "end": "1947540"
  },
  {
    "text": "types right and each pod type will have individual fields and destruct and from those you can just select one of one or",
    "start": "1947540",
    "end": "1954050"
  },
  {
    "text": "more the field ah gotcha gotcha so",
    "start": "1954050",
    "end": "1964160"
  },
  {
    "text": "that's not as easy to ask communities to just give a specific part it will return",
    "start": "1964160",
    "end": "1969230"
  },
  {
    "text": "the whole pods back the whole pod manifests actually to you and that's",
    "start": "1969230",
    "end": "1974360"
  },
  {
    "text": "where the paging comes in or if paging is too much for you just selecting all",
    "start": "1974360",
    "end": "1979580"
  },
  {
    "text": "the pods in a single namespace instead of all the namespaces so no support currently built into client go",
    "start": "1979580",
    "end": "1985340"
  },
  {
    "text": "unfortunately to do subpod resources we've got two minutes so say one more",
    "start": "1985340",
    "end": "1992630"
  },
  {
    "text": "question yeah",
    "start": "1992630",
    "end": "1995230"
  },
  {
    "text": "no select your name anyway yes yes sure",
    "start": "2001389",
    "end": "2020360"
  },
  {
    "text": "yeah so first question was there a way to do label selectors as one of the examples there is my slides are gone for",
    "start": "2020360",
    "end": "2027919"
  },
  {
    "text": "some reason I think my computer died if you go to the github repository or go to",
    "start": "2027919",
    "end": "2033350"
  },
  {
    "text": "the slides which I'll post when it lists all a pod there's a v1 dot list option",
    "start": "2033350",
    "end": "2039379"
  },
  {
    "text": "at the end of that call list options is where you can do label selectors and there's a field selector as well",
    "start": "2039379",
    "end": "2045740"
  },
  {
    "text": "field selectors are start to getting subpod resource fields back they don't",
    "start": "2045740",
    "end": "2051378"
  },
  {
    "text": "go all the way down that road but they I imagine they will soon probably in 1 7",
    "start": "2051379",
    "end": "2056628"
  },
  {
    "text": "second question was what do you want or what if I want to update client goes submit a pull request on it or something",
    "start": "2056629",
    "end": "2063020"
  },
  {
    "text": "like that so client go currently as it stands right now gets copied from a",
    "start": "2063020",
    "end": "2068690"
  },
  {
    "text": "staging directory inside of kubernetes kubernetes so I would recommend starting with an issue or full request on",
    "start": "2068690",
    "end": "2074868"
  },
  {
    "text": "kubernetes kubernetes and then waiting for the next release to get it copied over if you're impatient like me I would",
    "start": "2074869",
    "end": "2081740"
  },
  {
    "text": "probably just go into client go it self submit a pull request and then have someone else figure out how to get it in",
    "start": "2081740",
    "end": "2087710"
  },
  {
    "text": "faster that's the best I got for you right now so that's all I have for now",
    "start": "2087710",
    "end": "2092898"
  },
  {
    "text": "for today I really thank you guys for coming thanks for switching rooms with me it's been great",
    "start": "2092899",
    "end": "2100630"
  }
]