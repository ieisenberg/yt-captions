[
  {
    "text": "okay so some background on a wo we",
    "start": "1199",
    "end": "5940"
  },
  {
    "text": "started as many companies do hosting",
    "start": "5940",
    "end": "10019"
  },
  {
    "text": "api's for customers to access different",
    "start": "10019",
    "end": "13620"
  },
  {
    "text": "Adobe products from their desktop",
    "start": "13620",
    "end": "16320"
  },
  {
    "text": "Creative Suite to their enterprise",
    "start": "16320",
    "end": "18439"
  },
  {
    "text": "applications like a.m. and Target and",
    "start": "18439",
    "end": "22529"
  },
  {
    "text": "then eventually we added the W console",
    "start": "22529",
    "end": "26279"
  },
  {
    "text": "which enable developers to create",
    "start": "26279",
    "end": "30080"
  },
  {
    "text": "integrations and these are similar to",
    "start": "30080",
    "end": "33630"
  },
  {
    "text": "something like Facebook apps which most",
    "start": "33630",
    "end": "36329"
  },
  {
    "text": "people are a little bit more familiar",
    "start": "36329",
    "end": "37590"
  },
  {
    "text": "with where the developer can create a",
    "start": "37590",
    "end": "41969"
  },
  {
    "text": "workflow where users grant authorization",
    "start": "41969",
    "end": "44879"
  },
  {
    "text": "to creative assets and data and then the",
    "start": "44879",
    "end": "47969"
  },
  {
    "text": "application can perform processing on",
    "start": "47969",
    "end": "50910"
  },
  {
    "text": "those to create these kind of integrated",
    "start": "50910",
    "end": "54510"
  },
  {
    "text": "apps to stitch together workflows at",
    "start": "54510",
    "end": "57030"
  },
  {
    "text": "customers applications with Adobe",
    "start": "57030",
    "end": "59460"
  },
  {
    "text": "products and then we added a dhobi IO",
    "start": "59460",
    "end": "62940"
  },
  {
    "text": "runtime which is the service platform",
    "start": "62940",
    "end": "65549"
  },
  {
    "text": "we're now in the best case scenario the",
    "start": "65549",
    "end": "68970"
  },
  {
    "text": "developer doesn't need to host the app",
    "start": "68970",
    "end": "70979"
  },
  {
    "text": "anymore they can they can construct the",
    "start": "70979",
    "end": "73320"
  },
  {
    "text": "app using functions within the server",
    "start": "73320",
    "end": "75210"
  },
  {
    "text": "this platform so why would we do this",
    "start": "75210",
    "end": "82229"
  },
  {
    "text": "and the answer is not to compete with",
    "start": "82229",
    "end": "86130"
  },
  {
    "text": "things like AWS lambda or Google or or",
    "start": "86130",
    "end": "90049"
  },
  {
    "text": "it's sort of we can provide Adobe",
    "start": "90049",
    "end": "94079"
  },
  {
    "text": "customers with an adobe based platform",
    "start": "94079",
    "end": "96900"
  },
  {
    "text": "customers don't need to care about cloud",
    "start": "96900",
    "end": "100860"
  },
  {
    "text": "infrastructure accounts or anything",
    "start": "100860",
    "end": "103470"
  },
  {
    "text": "except for their Adobe products when",
    "start": "103470",
    "end": "105630"
  },
  {
    "text": "they buy Adobe products they can gain",
    "start": "105630",
    "end": "108810"
  },
  {
    "text": "access to this extensibility engine and",
    "start": "108810",
    "end": "111930"
  },
  {
    "text": "they can stay within the Adobe ecosystem",
    "start": "111930",
    "end": "115049"
  },
  {
    "text": "for the lifetime of their application",
    "start": "115049",
    "end": "118219"
  },
  {
    "text": "and the other reason is so that we can",
    "start": "118219",
    "end": "120780"
  },
  {
    "text": "provide custom environments so we can do",
    "start": "120780",
    "end": "123659"
  },
  {
    "text": "things like run custom images or custom",
    "start": "123659",
    "end": "126930"
  },
  {
    "text": "hardware or whatever we want so we can",
    "start": "126930",
    "end": "130739"
  },
  {
    "text": "do things like",
    "start": "130739",
    "end": "133200"
  },
  {
    "text": "Photoshop environments that become",
    "start": "133200",
    "end": "135180"
  },
  {
    "text": "serverless endpoints that customers can",
    "start": "135180",
    "end": "138420"
  },
  {
    "text": "remotely control so a little bit of",
    "start": "138420",
    "end": "144150"
  },
  {
    "text": "background on the architecture of Adobe",
    "start": "144150",
    "end": "146700"
  },
  {
    "text": "I run time we're using Apache open whisk",
    "start": "146700",
    "end": "149190"
  },
  {
    "text": "and we like open whisk it has a great",
    "start": "149190",
    "end": "153780"
  },
  {
    "text": "community has a consistent simple stable",
    "start": "153780",
    "end": "157709"
  },
  {
    "text": "set of api's and one of the really nice",
    "start": "157709",
    "end": "161310"
  },
  {
    "text": "things about open whisk is it's a",
    "start": "161310",
    "end": "163050"
  },
  {
    "text": "turnkey system so if anybody's thinking",
    "start": "163050",
    "end": "165750"
  },
  {
    "text": "about leveling up from hosting api's to",
    "start": "165750",
    "end": "170090"
  },
  {
    "text": "hosting a server this platform you can",
    "start": "170090",
    "end": "173220"
  },
  {
    "text": "take open whisk and drop it into your",
    "start": "173220",
    "end": "177230"
  },
  {
    "text": "infrastructure environment and have a",
    "start": "177230",
    "end": "180450"
  },
  {
    "text": "server the solution dedicated to your",
    "start": "180450",
    "end": "183660"
  },
  {
    "text": "customers in a relatively short",
    "start": "183660",
    "end": "185640"
  },
  {
    "text": "timeframe we went GA in June this year",
    "start": "185640",
    "end": "190650"
  },
  {
    "text": "that's going well it's currently used by",
    "start": "190650",
    "end": "193170"
  },
  {
    "text": "a couple of different types of customers",
    "start": "193170",
    "end": "194940"
  },
  {
    "text": "one is third-party Adobe customers and",
    "start": "194940",
    "end": "197190"
  },
  {
    "text": "these are folks like Yamaha Microsoft",
    "start": "197190",
    "end": "200730"
  },
  {
    "text": "where they they purchase Adobe",
    "start": "200730",
    "end": "203040"
  },
  {
    "text": "enterprise products for hosting CMS",
    "start": "203040",
    "end": "206489"
  },
  {
    "text": "systems doing data analytics and then we",
    "start": "206489",
    "end": "210630"
  },
  {
    "text": "have Adobe teams and these are first",
    "start": "210630",
    "end": "213090"
  },
  {
    "text": "party internal Adobe folks that are",
    "start": "213090",
    "end": "216359"
  },
  {
    "text": "using the runtime system to build",
    "start": "216359",
    "end": "219239"
  },
  {
    "text": "features that aren't directly exposed as",
    "start": "219239",
    "end": "221549"
  },
  {
    "text": "runtime to customers but they are",
    "start": "221549",
    "end": "225090"
  },
  {
    "text": "providing extensibility through some",
    "start": "225090",
    "end": "227519"
  },
  {
    "text": "custom add-ons to their products and",
    "start": "227519",
    "end": "231060"
  },
  {
    "text": "some examples there are W experience",
    "start": "231060",
    "end": "233430"
  },
  {
    "text": "manager and Adobe Tariq target",
    "start": "233430",
    "end": "238219"
  },
  {
    "text": "so I want to talk a little bit about",
    "start": "240740",
    "end": "243080"
  },
  {
    "text": "some use cases that we are going after",
    "start": "243080",
    "end": "245990"
  },
  {
    "text": "supporting within Adobe and for Adobe",
    "start": "245990",
    "end": "248990"
  },
  {
    "text": "customers in general we try to support",
    "start": "248990",
    "end": "251630"
  },
  {
    "text": "all the use cases this isn't work",
    "start": "251630",
    "end": "253990"
  },
  {
    "text": "everywhere has haven't pointed out",
    "start": "253990",
    "end": "256250"
  },
  {
    "text": "there's there's some cases that just",
    "start": "256250",
    "end": "258650"
  },
  {
    "text": "don't slot into server this great but",
    "start": "258650",
    "end": "262660"
  },
  {
    "text": "some examples that we're supporting",
    "start": "262660",
    "end": "266060"
  },
  {
    "text": "today on the extremes are large memory",
    "start": "266060",
    "end": "270290"
  },
  {
    "text": "footprint long timeout type of functions",
    "start": "270290",
    "end": "272780"
  },
  {
    "text": "require lots of disk space limited",
    "start": "272780",
    "end": "275300"
  },
  {
    "text": "concurrency where they have to operate",
    "start": "275300",
    "end": "276620"
  },
  {
    "text": "in and basically a single threaded model",
    "start": "276620",
    "end": "279160"
  },
  {
    "text": "and a common case for this is something",
    "start": "279160",
    "end": "282470"
  },
  {
    "text": "like image processing or video",
    "start": "282470",
    "end": "284060"
  },
  {
    "text": "processing we have teams doing this and",
    "start": "284060",
    "end": "288170"
  },
  {
    "text": "on the other extreme is low memory",
    "start": "288170",
    "end": "290930"
  },
  {
    "text": "footprint low latency high concurrency",
    "start": "290930",
    "end": "293360"
  },
  {
    "text": "and these are things like user facing",
    "start": "293360",
    "end": "296600"
  },
  {
    "text": "browser applications where latency is",
    "start": "296600",
    "end": "299330"
  },
  {
    "text": "the name of the game and keeping things",
    "start": "299330",
    "end": "302060"
  },
  {
    "text": "fast and reliable and this is also a",
    "start": "302060",
    "end": "306140"
  },
  {
    "text": "similar concept to running functions at",
    "start": "306140",
    "end": "309110"
  },
  {
    "text": "the edge so wherever you have content",
    "start": "309110",
    "end": "311660"
  },
  {
    "text": "delivery networks and you want to make",
    "start": "311660",
    "end": "313400"
  },
  {
    "text": "those that content more dynamic latency",
    "start": "313400",
    "end": "318500"
  },
  {
    "text": "becomes really key and then everything",
    "start": "318500",
    "end": "321920"
  },
  {
    "text": "else we kind of bucket into this generic",
    "start": "321920",
    "end": "326210"
  },
  {
    "text": "use case where it's a deployment",
    "start": "326210",
    "end": "329630"
  },
  {
    "text": "replacement for micro service deployment",
    "start": "329630",
    "end": "333100"
  },
  {
    "text": "you know instead of building an",
    "start": "333100",
    "end": "335210"
  },
  {
    "text": "application and running it as a micro",
    "start": "335210",
    "end": "336650"
  },
  {
    "text": "service now you can build a function and",
    "start": "336650",
    "end": "339940"
  },
  {
    "text": "still access it and treat it from the",
    "start": "339940",
    "end": "342650"
  },
  {
    "text": "outside as a micro service effectively",
    "start": "342650",
    "end": "346360"
  },
  {
    "text": "so what we've been building a wo runtime",
    "start": "348430",
    "end": "351710"
  },
  {
    "text": "things have been going on outside of",
    "start": "351710",
    "end": "354440"
  },
  {
    "text": "Adobe and a few of those things that are",
    "start": "354440",
    "end": "358220"
  },
  {
    "text": "kind of interesting are things that",
    "start": "358220",
    "end": "360889"
  },
  {
    "text": "folks at cloud flower are doing Kay",
    "start": "360889",
    "end": "363320"
  },
  {
    "text": "native everybody I'm sure here is well",
    "start": "363320",
    "end": "366470"
  },
  {
    "text": "aware of Kay native and open with is",
    "start": "366470",
    "end": "369620"
  },
  {
    "text": "evolving constantly on its own so we're",
    "start": "369620",
    "end": "372919"
  },
  {
    "text": "gonna talk about some of these",
    "start": "372919",
    "end": "374740"
  },
  {
    "text": "evolutions so cloud flower is kind of",
    "start": "374740",
    "end": "379490"
  },
  {
    "text": "interesting where they take v8 isolates",
    "start": "379490",
    "end": "383000"
  },
  {
    "text": "and effectively run multiple functions",
    "start": "383000",
    "end": "386810"
  },
  {
    "text": "inside of the same process",
    "start": "386810",
    "end": "389510"
  },
  {
    "text": "and this is kind of interesting because",
    "start": "389510",
    "end": "392360"
  },
  {
    "text": "it adds yet another layer of scaling to",
    "start": "392360",
    "end": "395900"
  },
  {
    "text": "the system where we've talked about",
    "start": "395900",
    "end": "399110"
  },
  {
    "text": "scaling not at the VM level but",
    "start": "399110",
    "end": "401600"
  },
  {
    "text": "container level for a long time now",
    "start": "401600",
    "end": "404120"
  },
  {
    "text": "we're talking about scaling inside the",
    "start": "404120",
    "end": "405950"
  },
  {
    "text": "process inside a container on a VM so",
    "start": "405950",
    "end": "410120"
  },
  {
    "text": "they're adding new low latency ways to",
    "start": "410120",
    "end": "412940"
  },
  {
    "text": "scale for they primarily deliver for the",
    "start": "412940",
    "end": "416840"
  },
  {
    "text": "functions at the edge type of use case",
    "start": "416840",
    "end": "419500"
  },
  {
    "text": "Kay native service connait observing is",
    "start": "419500",
    "end": "423289"
  },
  {
    "text": "a good candidate for things like",
    "start": "423289",
    "end": "426820"
  },
  {
    "text": "general-purpose processing where we have",
    "start": "426820",
    "end": "430729"
  },
  {
    "text": "one function per image one function per",
    "start": "430729",
    "end": "433580"
  },
  {
    "text": "container we can scale it out on a",
    "start": "433580",
    "end": "435979"
  },
  {
    "text": "system that is good at running",
    "start": "435979",
    "end": "438080"
  },
  {
    "text": "containers kubernetes",
    "start": "438080",
    "end": "441160"
  },
  {
    "text": "and we can use kubernetes primitives for",
    "start": "441160",
    "end": "445789"
  },
  {
    "text": "handling how that scaling works so it",
    "start": "445789",
    "end": "448610"
  },
  {
    "text": "looks from the outside potentially",
    "start": "448610",
    "end": "450410"
  },
  {
    "text": "similar to how we handle our micro",
    "start": "450410",
    "end": "453590"
  },
  {
    "text": "services that might be running on",
    "start": "453590",
    "end": "454820"
  },
  {
    "text": "kubernetes also and then open wisk has",
    "start": "454820",
    "end": "459050"
  },
  {
    "text": "evolved on its own and some of the",
    "start": "459050",
    "end": "462560"
  },
  {
    "text": "interesting things that happen within",
    "start": "462560",
    "end": "464000"
  },
  {
    "text": "open wisk are the ability to create more",
    "start": "464000",
    "end": "468710"
  },
  {
    "text": "complex workflows like sequences and",
    "start": "468710",
    "end": "471410"
  },
  {
    "text": "compositions where you can take multiple",
    "start": "471410",
    "end": "474860"
  },
  {
    "text": "functions and stitch them together and",
    "start": "474860",
    "end": "476990"
  },
  {
    "text": "treat them as a single unit of work and",
    "start": "476990",
    "end": "478760"
  },
  {
    "text": "have the system man at",
    "start": "478760",
    "end": "480370"
  },
  {
    "text": "the state that is transitioning in",
    "start": "480370",
    "end": "482949"
  },
  {
    "text": "between each element and while Cerberus",
    "start": "482949",
    "end": "489729"
  },
  {
    "text": "has evolved technology-wise API gateways",
    "start": "489729",
    "end": "493990"
  },
  {
    "text": "and approaches to API gateways have also",
    "start": "493990",
    "end": "496900"
  },
  {
    "text": "evolved and specifically a lot of us are",
    "start": "496900",
    "end": "501280"
  },
  {
    "text": "following the evolution of envoy and it",
    "start": "501280",
    "end": "505419"
  },
  {
    "text": "has some interesting features that are",
    "start": "505419",
    "end": "507419"
  },
  {
    "text": "potentially really handy for a server",
    "start": "507419",
    "end": "509680"
  },
  {
    "text": "this platform so these are things that I",
    "start": "509680",
    "end": "512909"
  },
  {
    "text": "would just rather not do in open wisk if",
    "start": "512909",
    "end": "515890"
  },
  {
    "text": "we don't have to so things like",
    "start": "515890",
    "end": "519120"
  },
  {
    "text": "authorization and rate limiting these",
    "start": "519120",
    "end": "522279"
  },
  {
    "text": "are our boilerplate functionality that",
    "start": "522279",
    "end": "525520"
  },
  {
    "text": "is required by any server this platform",
    "start": "525520",
    "end": "528820"
  },
  {
    "text": "or any API gateway in general and so why",
    "start": "528820",
    "end": "534580"
  },
  {
    "text": "should we handle that in the server this",
    "start": "534580",
    "end": "536020"
  },
  {
    "text": "platform it would be great to use Envoy",
    "start": "536020",
    "end": "538540"
  },
  {
    "text": "for that so if we look at things from a",
    "start": "538540",
    "end": "543880"
  },
  {
    "text": "use case perspective what we'd really",
    "start": "543880",
    "end": "547180"
  },
  {
    "text": "like to be able to do as a server this",
    "start": "547180",
    "end": "549550"
  },
  {
    "text": "platform operator is to be able to use",
    "start": "549550",
    "end": "551560"
  },
  {
    "text": "the right tool for the right use case so",
    "start": "551560",
    "end": "554050"
  },
  {
    "text": "for latency-sensitive services where",
    "start": "554050",
    "end": "557290"
  },
  {
    "text": "performance is really key it would be",
    "start": "557290",
    "end": "560950"
  },
  {
    "text": "great to use something like a v8 isolate",
    "start": "560950",
    "end": "563050"
  },
  {
    "text": "type of approach where we where we get a",
    "start": "563050",
    "end": "565950"
  },
  {
    "text": "lower startup and initialization cost",
    "start": "565950",
    "end": "569970"
  },
  {
    "text": "for general-purpose micro service",
    "start": "569970",
    "end": "572650"
  },
  {
    "text": "scaling it would be great to just rely",
    "start": "572650",
    "end": "575529"
  },
  {
    "text": "on Canada for doing that because that",
    "start": "575529",
    "end": "577839"
  },
  {
    "text": "works well with kdn is serving for",
    "start": "577839",
    "end": "580690"
  },
  {
    "text": "complex function workflows we're using",
    "start": "580690",
    "end": "583150"
  },
  {
    "text": "open Wis for that already we'd like to",
    "start": "583150",
    "end": "585279"
  },
  {
    "text": "keep using open Wis for that because",
    "start": "585279",
    "end": "586540"
  },
  {
    "text": "open was does that nicely and then for",
    "start": "586540",
    "end": "591070"
  },
  {
    "text": "consistent handling of ingress envoy is",
    "start": "591070",
    "end": "595589"
  },
  {
    "text": "coming up as a leader in that kind of",
    "start": "595589",
    "end": "597850"
  },
  {
    "text": "space and so we'd like to be able to",
    "start": "597850",
    "end": "600430"
  },
  {
    "text": "just delegate all of that type of",
    "start": "600430",
    "end": "602920"
  },
  {
    "text": "functionality to envoy so before I go",
    "start": "602920",
    "end": "606790"
  },
  {
    "text": "into talking about how we can apply",
    "start": "606790",
    "end": "610390"
  },
  {
    "text": "those technologies",
    "start": "610390",
    "end": "612589"
  },
  {
    "text": "a little bit of background about open",
    "start": "612589",
    "end": "615019"
  },
  {
    "text": "wisk architecture I won't go too deep",
    "start": "615019",
    "end": "617300"
  },
  {
    "text": "here but just some basics",
    "start": "617300",
    "end": "619730"
  },
  {
    "text": "so the basic operational components in",
    "start": "619730",
    "end": "623209"
  },
  {
    "text": "open wisk are the controller and the",
    "start": "623209",
    "end": "625459"
  },
  {
    "text": "invoker and the controller is the kind",
    "start": "625459",
    "end": "629660"
  },
  {
    "text": "of ingress portion of the system where",
    "start": "629660",
    "end": "633230"
  },
  {
    "text": "both function developers and function",
    "start": "633230",
    "end": "634910"
  },
  {
    "text": "users arrive within this component and",
    "start": "634910",
    "end": "639160"
  },
  {
    "text": "the controller handles both the crud",
    "start": "639160",
    "end": "642889"
  },
  {
    "text": "operations for developers and the",
    "start": "642889",
    "end": "644600"
  },
  {
    "text": "invocation workflow for routing to a",
    "start": "644600",
    "end": "648220"
  },
  {
    "text": "invoker component that does the actual",
    "start": "648220",
    "end": "650600"
  },
  {
    "text": "container and initialization and",
    "start": "650600",
    "end": "652879"
  },
  {
    "text": "function management so what's",
    "start": "652879",
    "end": "656749"
  },
  {
    "text": "interesting here is that right now the",
    "start": "656749",
    "end": "658670"
  },
  {
    "text": "controller handles the both the data",
    "start": "658670",
    "end": "660800"
  },
  {
    "text": "plane and the control plane ingress and",
    "start": "660800",
    "end": "665439"
  },
  {
    "text": "the invoker is focused on container",
    "start": "665439",
    "end": "667999"
  },
  {
    "text": "management so some keys - if we go back",
    "start": "667999",
    "end": "672319"
  },
  {
    "text": "to thinking about the different",
    "start": "672319",
    "end": "673730"
  },
  {
    "text": "technologies if we think about how we",
    "start": "673730",
    "end": "677420"
  },
  {
    "text": "can apply those one of the keys is",
    "start": "677420",
    "end": "681019"
  },
  {
    "text": "separating these planes in Oakland with",
    "start": "681019",
    "end": "684050"
  },
  {
    "text": "so getting away from having a central",
    "start": "684050",
    "end": "686269"
  },
  {
    "text": "place where both the data plane and a",
    "start": "686269",
    "end": "687920"
  },
  {
    "text": "control plane have to flow through we",
    "start": "687920",
    "end": "691490"
  },
  {
    "text": "also want to be able to delegate",
    "start": "691490",
    "end": "692600"
  },
  {
    "text": "delegate the ingress features so taking",
    "start": "692600",
    "end": "695750"
  },
  {
    "text": "some of these features out of the",
    "start": "695750",
    "end": "696889"
  },
  {
    "text": "controller I'm leveling them up into the",
    "start": "696889",
    "end": "699620"
  },
  {
    "text": "ingress gateway we want to be able to",
    "start": "699620",
    "end": "702500"
  },
  {
    "text": "delegate execution so instead of forcing",
    "start": "702500",
    "end": "705529"
  },
  {
    "text": "everything to be executed inside of open",
    "start": "705529",
    "end": "707569"
  },
  {
    "text": "wisk we want to be able to choose either",
    "start": "707569",
    "end": "710259"
  },
  {
    "text": "declaratively or dynamically so that the",
    "start": "710259",
    "end": "716209"
  },
  {
    "text": "right execution environment for the",
    "start": "716209",
    "end": "718970"
  },
  {
    "text": "function at the right time is is what's",
    "start": "718970",
    "end": "721730"
  },
  {
    "text": "used and they also want to normalize the",
    "start": "721730",
    "end": "726319"
  },
  {
    "text": "process so that what a developer sees",
    "start": "726319",
    "end": "729379"
  },
  {
    "text": "from the outside looks the same no",
    "start": "729379",
    "end": "732050"
  },
  {
    "text": "matter what execution environment",
    "start": "732050",
    "end": "733550"
  },
  {
    "text": "they're using so you know this is",
    "start": "733550",
    "end": "735949"
  },
  {
    "text": "different than saying well just tell",
    "start": "735949",
    "end": "738920"
  },
  {
    "text": "people to use lambda or k native because",
    "start": "738920",
    "end": "741709"
  },
  {
    "text": "it looks different when you're using",
    "start": "741709",
    "end": "743660"
  },
  {
    "text": "those independently so",
    "start": "743660",
    "end": "745800"
  },
  {
    "text": "we need a way to normalize that usage so",
    "start": "745800",
    "end": "753779"
  },
  {
    "text": "going through each of these first",
    "start": "753779",
    "end": "756389"
  },
  {
    "text": "separating the plans this is pretty",
    "start": "756389",
    "end": "758249"
  },
  {
    "text": "straightforward",
    "start": "758249",
    "end": "759839"
  },
  {
    "text": "we're just separating out the open Wis",
    "start": "759839",
    "end": "762629"
  },
  {
    "text": "controller to be dedicated to our",
    "start": "762629",
    "end": "765629"
  },
  {
    "text": "control plane and now we have a new",
    "start": "765629",
    "end": "767309"
  },
  {
    "text": "component this is the open twist router",
    "start": "767309",
    "end": "769410"
  },
  {
    "text": "and this is gonna be dedicated to our",
    "start": "769410",
    "end": "772829"
  },
  {
    "text": "data plane management for this system so",
    "start": "772829",
    "end": "776239"
  },
  {
    "text": "most of my talk will be more focused on",
    "start": "776239",
    "end": "779699"
  },
  {
    "text": "the bonus router point so if we look at",
    "start": "779699",
    "end": "787739"
  },
  {
    "text": "these in detail the control plane stays",
    "start": "787739",
    "end": "789809"
  },
  {
    "text": "as is and the data plane is now provided",
    "start": "789809",
    "end": "792959"
  },
  {
    "text": "by the open Wisc router and it's going",
    "start": "792959",
    "end": "795899"
  },
  {
    "text": "to be a dedicated data plane controller",
    "start": "795899",
    "end": "797399"
  },
  {
    "text": "and what do we need to do to get there",
    "start": "797399",
    "end": "800100"
  },
  {
    "text": "well this is a brand new component so we",
    "start": "800100",
    "end": "802889"
  },
  {
    "text": "are working on building that and we're",
    "start": "802889",
    "end": "806339"
  },
  {
    "text": "also building execution providers for",
    "start": "806339",
    "end": "809399"
  },
  {
    "text": "different types of solutions open wisk",
    "start": "809399",
    "end": "812639"
  },
  {
    "text": "and k native and v8 isolates are the",
    "start": "812639",
    "end": "815399"
  },
  {
    "text": "kind of primary cases that we're",
    "start": "815399",
    "end": "817410"
  },
  {
    "text": "targeting right now and then really to",
    "start": "817410",
    "end": "822240"
  },
  {
    "text": "be able to optimize the system for reuse",
    "start": "822240",
    "end": "825439"
  },
  {
    "text": "we want to allow the system to have its",
    "start": "825439",
    "end": "829860"
  },
  {
    "text": "own notion of resource allocation that's",
    "start": "829860",
    "end": "832740"
  },
  {
    "text": "independent of the execution providers",
    "start": "832740",
    "end": "835079"
  },
  {
    "text": "but available for these providers to use",
    "start": "835079",
    "end": "838110"
  },
  {
    "text": "so that we can maximize the reusability",
    "start": "838110",
    "end": "841709"
  },
  {
    "text": "of containers because ultimately when",
    "start": "841709",
    "end": "845699"
  },
  {
    "text": "we're talking about scaling to zero and",
    "start": "845699",
    "end": "848759"
  },
  {
    "text": "then continued traffic the reuse becomes",
    "start": "848759",
    "end": "852600"
  },
  {
    "text": "the key component to minimizing latency",
    "start": "852600",
    "end": "855480"
  },
  {
    "text": "and avoiding those cold-start type of",
    "start": "855480",
    "end": "857309"
  },
  {
    "text": "situations so next up in our technology",
    "start": "857309",
    "end": "866850"
  },
  {
    "text": "Keys is the ability to delegate ingress",
    "start": "866850",
    "end": "871230"
  },
  {
    "text": "features so what we're doing is taking",
    "start": "871230",
    "end": "875040"
  },
  {
    "text": "the ingress functionality that's",
    "start": "875040",
    "end": "877019"
  },
  {
    "text": "currently baked into the open whiskey",
    "start": "877019",
    "end": "878730"
  },
  {
    "text": "and moving that out into our envoy",
    "start": "878730",
    "end": "883020"
  },
  {
    "text": "gateway system and this just simplifies",
    "start": "883020",
    "end": "887100"
  },
  {
    "text": "the controller and the router and it",
    "start": "887100",
    "end": "890970"
  },
  {
    "text": "also makes it so that we can use the",
    "start": "890970",
    "end": "892800"
  },
  {
    "text": "same system now for both our server this",
    "start": "892800",
    "end": "896010"
  },
  {
    "text": "platform and our API system so we can",
    "start": "896010",
    "end": "899790"
  },
  {
    "text": "leverage the same authentication",
    "start": "899790",
    "end": "900870"
  },
  {
    "text": "rate-limiting features and we could do",
    "start": "900870",
    "end": "908550"
  },
  {
    "text": "that with envoy by using some kind of",
    "start": "908550",
    "end": "912000"
  },
  {
    "text": "off-the-shelf functionality for",
    "start": "912000",
    "end": "915750"
  },
  {
    "text": "authorization there's the external",
    "start": "915750",
    "end": "917340"
  },
  {
    "text": "authorization filter where we can",
    "start": "917340",
    "end": "919440"
  },
  {
    "text": "provide a dedicated service for",
    "start": "919440",
    "end": "920910"
  },
  {
    "text": "authorization authorizing requests that",
    "start": "920910",
    "end": "925050"
  },
  {
    "text": "applies to both the control plane and",
    "start": "925050",
    "end": "926520"
  },
  {
    "text": "the data plane and same with the rate",
    "start": "926520",
    "end": "929040"
  },
  {
    "text": "living where there's a rate limiting",
    "start": "929040",
    "end": "931260"
  },
  {
    "text": "filter that we can use for that one of",
    "start": "931260",
    "end": "934200"
  },
  {
    "text": "the features and open wisk that we want",
    "start": "934200",
    "end": "936060"
  },
  {
    "text": "to keep parity with is a concurrency",
    "start": "936060",
    "end": "939450"
  },
  {
    "text": "based limiting and this is similar to",
    "start": "939450",
    "end": "943950"
  },
  {
    "text": "what the experimental adaptive",
    "start": "943950",
    "end": "946800"
  },
  {
    "text": "concurrency filter in envoy provides so",
    "start": "946800",
    "end": "954860"
  },
  {
    "text": "once you get into the open with router",
    "start": "954860",
    "end": "958070"
  },
  {
    "text": "getting to the point of execution",
    "start": "958070",
    "end": "961460"
  },
  {
    "text": "becomes a workflow in mapping the",
    "start": "961460",
    "end": "966330"
  },
  {
    "text": "function to a particular execution",
    "start": "966330",
    "end": "968610"
  },
  {
    "text": "environment and within the open with",
    "start": "968610",
    "end": "974790"
  },
  {
    "text": "router we have this logic that is able",
    "start": "974790",
    "end": "979140"
  },
  {
    "text": "to map the function to the appropriate",
    "start": "979140",
    "end": "983790"
  },
  {
    "text": "execution environment either either by",
    "start": "983790",
    "end": "986330"
  },
  {
    "text": "defining annotations on function or by",
    "start": "986330",
    "end": "989520"
  },
  {
    "text": "specifying as part of the request giving",
    "start": "989520",
    "end": "993450"
  },
  {
    "text": "it hints if you will to see which",
    "start": "993450",
    "end": "996150"
  },
  {
    "text": "execution environment is appropriate for",
    "start": "996150",
    "end": "998190"
  },
  {
    "text": "those function calls so if we look at an",
    "start": "998190",
    "end": "1003560"
  },
  {
    "text": "example kind of up close Kay native is",
    "start": "1003560",
    "end": "1007340"
  },
  {
    "text": "kind of interesting for this we're",
    "start": "1007340",
    "end": "1010780"
  },
  {
    "text": "really in order to",
    "start": "1010780",
    "end": "1012499"
  },
  {
    "text": "use k native in this way we move away",
    "start": "1012499",
    "end": "1015079"
  },
  {
    "text": "from the notion of one function per",
    "start": "1015079",
    "end": "1019219"
  },
  {
    "text": "image in K native and we are more in",
    "start": "1019219",
    "end": "1023719"
  },
  {
    "text": "line with one function per K native",
    "start": "1023719",
    "end": "1027079"
  },
  {
    "text": "service and really the function",
    "start": "1027079",
    "end": "1032538"
  },
  {
    "text": "allocation to the service is done lazily",
    "start": "1032539",
    "end": "1035298"
  },
  {
    "text": "and in open wisk this is a concept of",
    "start": "1035299",
    "end": "1039829"
  },
  {
    "text": "stem cells that helps avoid those cold",
    "start": "1039829",
    "end": "1043788"
  },
  {
    "text": "start times where we start the K native",
    "start": "1043789",
    "end": "1046308"
  },
  {
    "text": "service or the pod or the container",
    "start": "1046309",
    "end": "1048129"
  },
  {
    "text": "ahead of time and then the code for the",
    "start": "1048129",
    "end": "1052159"
  },
  {
    "text": "actual function is injected lazily",
    "start": "1052159",
    "end": "1054590"
  },
  {
    "text": "whenever traffic starts for that",
    "start": "1054590",
    "end": "1057320"
  },
  {
    "text": "particular function so we have a",
    "start": "1057320",
    "end": "1060980"
  },
  {
    "text": "workflow that looks like this where",
    "start": "1060980",
    "end": "1062600"
  },
  {
    "text": "before traffic we create some",
    "start": "1062600",
    "end": "1064820"
  },
  {
    "text": "general-purpose K native services and",
    "start": "1064820",
    "end": "1066830"
  },
  {
    "text": "you can think of those as stem cells and",
    "start": "1066830",
    "end": "1070309"
  },
  {
    "text": "then when traffic begins we start by",
    "start": "1070309",
    "end": "1073970"
  },
  {
    "text": "allocating a specific service to a",
    "start": "1073970",
    "end": "1076970"
  },
  {
    "text": "specific function and then we just start",
    "start": "1076970",
    "end": "1080690"
  },
  {
    "text": "routing traffic to that function and of",
    "start": "1080690",
    "end": "1082759"
  },
  {
    "text": "course within the K native space the",
    "start": "1082759",
    "end": "1086360"
  },
  {
    "text": "function doesn't exist there yet and so",
    "start": "1086360",
    "end": "1088190"
  },
  {
    "text": "the container that's actually running",
    "start": "1088190",
    "end": "1091250"
  },
  {
    "text": "needs to be of be aware that it needs to",
    "start": "1091250",
    "end": "1094700"
  },
  {
    "text": "install the function and when traffic",
    "start": "1094700",
    "end": "1096860"
  },
  {
    "text": "increases we scale the service and we",
    "start": "1096860",
    "end": "1099320"
  },
  {
    "text": "end up with additional pods and they",
    "start": "1099320",
    "end": "1101419"
  },
  {
    "text": "those pods get the function installed so",
    "start": "1101419",
    "end": "1106700"
  },
  {
    "text": "if we look at this visually it's a",
    "start": "1106700",
    "end": "1109369"
  },
  {
    "text": "little bit simpler so we have the open",
    "start": "1109369",
    "end": "1113090"
  },
  {
    "text": "wes router on the left side here where",
    "start": "1113090",
    "end": "1117039"
  },
  {
    "text": "step 0 so basically when the router",
    "start": "1117039",
    "end": "1119990"
  },
  {
    "text": "starts up we allocate some stem cells",
    "start": "1119990",
    "end": "1122840"
  },
  {
    "text": "and these these surface and k native as",
    "start": "1122840",
    "end": "1125450"
  },
  {
    "text": "separate services that are unallocated",
    "start": "1125450",
    "end": "1128360"
  },
  {
    "text": "and then step 1 is we get a request to",
    "start": "1128360",
    "end": "1132950"
  },
  {
    "text": "handle function 1 and the first step for",
    "start": "1132950",
    "end": "1135860"
  },
  {
    "text": "that particular function is to allocate",
    "start": "1135860",
    "end": "1138200"
  },
  {
    "text": "a particular service so we in this case",
    "start": "1138200",
    "end": "1141950"
  },
  {
    "text": "we're allocating service 2 and we",
    "start": "1141950",
    "end": "1144379"
  },
  {
    "text": "started routing that traffic to so",
    "start": "1144379",
    "end": "1146059"
  },
  {
    "text": "- and with inkay native the the",
    "start": "1146059",
    "end": "1150619"
  },
  {
    "text": "lifecycle the function goes into play",
    "start": "1150619",
    "end": "1153080"
  },
  {
    "text": "where that service instance",
    "start": "1153080",
    "end": "1155629"
  },
  {
    "text": "now each pod will get the function",
    "start": "1155629",
    "end": "1159739"
  },
  {
    "text": "installed on its first use so for",
    "start": "1159739",
    "end": "1167119"
  },
  {
    "text": "normalizing the input and output of the",
    "start": "1167119",
    "end": "1170330"
  },
  {
    "text": "system what we're looking at is this",
    "start": "1170330",
    "end": "1174979"
  },
  {
    "text": "type of workflow where on the router",
    "start": "1174979",
    "end": "1178129"
  },
  {
    "text": "side we can transform the incoming",
    "start": "1178129",
    "end": "1181190"
  },
  {
    "text": "request and we can transform the",
    "start": "1181190",
    "end": "1182749"
  },
  {
    "text": "response so that the developers dealing",
    "start": "1182749",
    "end": "1185450"
  },
  {
    "text": "with one system the the Adobe serverless",
    "start": "1185450",
    "end": "1188690"
  },
  {
    "text": "system and they're not dealing with",
    "start": "1188690",
    "end": "1190309"
  },
  {
    "text": "whatever different types of execution",
    "start": "1190309",
    "end": "1193009"
  },
  {
    "text": "environments that we have so the the",
    "start": "1193009",
    "end": "1195529"
  },
  {
    "text": "developer doesn't need to know any",
    "start": "1195529",
    "end": "1196969"
  },
  {
    "text": "details about Kay native or kubernetes",
    "start": "1196969",
    "end": "1199219"
  },
  {
    "text": "or v8 isolates or open Wisc they just",
    "start": "1199219",
    "end": "1204529"
  },
  {
    "text": "need to know the the api's of the Adobe",
    "start": "1204529",
    "end": "1209869"
  },
  {
    "text": "server this platform and either they can",
    "start": "1209869",
    "end": "1212809"
  },
  {
    "text": "shoot we can allow them to choose or we",
    "start": "1212809",
    "end": "1214580"
  },
  {
    "text": "can choose for them",
    "start": "1214580",
    "end": "1215659"
  },
  {
    "text": "what execution environment they use but",
    "start": "1215659",
    "end": "1218589"
  },
  {
    "text": "we handle their request and the response",
    "start": "1218589",
    "end": "1221149"
  },
  {
    "text": "in a consistent manner and this also",
    "start": "1221149",
    "end": "1224029"
  },
  {
    "text": "becomes really important for logging and",
    "start": "1224029",
    "end": "1225679"
  },
  {
    "text": "metrics so that we can consistently",
    "start": "1225679",
    "end": "1228169"
  },
  {
    "text": "handle things like monitoring billing",
    "start": "1228169",
    "end": "1233529"
  },
  {
    "text": "where we want to be able to have a",
    "start": "1233529",
    "end": "1236389"
  },
  {
    "text": "consistent view of the system so just a",
    "start": "1236389",
    "end": "1243200"
  },
  {
    "text": "quick summary of what is involved with",
    "start": "1243200",
    "end": "1247219"
  },
  {
    "text": "the opener sprouter",
    "start": "1247219",
    "end": "1248299"
  },
  {
    "text": "it's it's similar to a proxy but it's",
    "start": "1248299",
    "end": "1250999"
  },
  {
    "text": "not exactly it's a little bit more than",
    "start": "1250999",
    "end": "1253219"
  },
  {
    "text": "that so some of the requirements are",
    "start": "1253219",
    "end": "1256549"
  },
  {
    "text": "providing a data plan API for function",
    "start": "1256549",
    "end": "1258320"
  },
  {
    "text": "execution resolving functions to",
    "start": "1258320",
    "end": "1260869"
  },
  {
    "text": "execution environments request response",
    "start": "1260869",
    "end": "1264679"
  },
  {
    "text": "normalization and providing consistent",
    "start": "1264679",
    "end": "1267440"
  },
  {
    "text": "metadata per invocation so whatever we",
    "start": "1267440",
    "end": "1271369"
  },
  {
    "text": "do for developers on a per invocation",
    "start": "1271369",
    "end": "1273320"
  },
  {
    "text": "basis needs to be consistent across all",
    "start": "1273320",
    "end": "1275479"
  },
  {
    "text": "of those environments",
    "start": "1275479",
    "end": "1278159"
  },
  {
    "text": "providing state management cash and this",
    "start": "1278159",
    "end": "1280770"
  },
  {
    "text": "is really getting back to the giving you",
    "start": "1280770",
    "end": "1286080"
  },
  {
    "text": "know different types of execution",
    "start": "1286080",
    "end": "1287850"
  },
  {
    "text": "environments the ability to optimize",
    "start": "1287850",
    "end": "1290330"
  },
  {
    "text": "resource reuse so that we can steer",
    "start": "1290330",
    "end": "1296039"
  },
  {
    "text": "folks to the best possible path for",
    "start": "1296039",
    "end": "1298770"
  },
  {
    "text": "lower latency and whenever we're dealing",
    "start": "1298770",
    "end": "1302460"
  },
  {
    "text": "with resource allocation on the flip",
    "start": "1302460",
    "end": "1304320"
  },
  {
    "text": "side we also have to deal with resource",
    "start": "1304320",
    "end": "1306210"
  },
  {
    "text": "cleanup and garbage collection so just",
    "start": "1306210",
    "end": "1311789"
  },
  {
    "text": "to call out some negative requirements",
    "start": "1311789",
    "end": "1313830"
  },
  {
    "text": "the things that we are not wanting to do",
    "start": "1313830",
    "end": "1316080"
  },
  {
    "text": "so we're not using container primitives",
    "start": "1316080",
    "end": "1318150"
  },
  {
    "text": "in this particular component this is",
    "start": "1318150",
    "end": "1320580"
  },
  {
    "text": "this is just for managing resources and",
    "start": "1320580",
    "end": "1323580"
  },
  {
    "text": "delegating execution to the execution",
    "start": "1323580",
    "end": "1326850"
  },
  {
    "text": "providers and we're not using static",
    "start": "1326850",
    "end": "1329730"
  },
  {
    "text": "routes so we don't want to end up with a",
    "start": "1329730",
    "end": "1333380"
  },
  {
    "text": "routing table that has the function per",
    "start": "1333380",
    "end": "1338120"
  },
  {
    "text": "route per function type of map in memory",
    "start": "1338120",
    "end": "1341669"
  },
  {
    "text": "with millions or billions of different",
    "start": "1341669",
    "end": "1345240"
  },
  {
    "text": "functions that are changing you know at",
    "start": "1345240",
    "end": "1347400"
  },
  {
    "text": "the whims of our developers and this",
    "start": "1347400",
    "end": "1350070"
  },
  {
    "text": "this routing is loaded dynamically on",
    "start": "1350070",
    "end": "1353220"
  },
  {
    "text": "demand and it changes constantly and",
    "start": "1353220",
    "end": "1359130"
  },
  {
    "text": "then some potential features that we can",
    "start": "1359130",
    "end": "1361110"
  },
  {
    "text": "add at this layer of abstraction or",
    "start": "1361110",
    "end": "1363559"
  },
  {
    "text": "things like streaming where we don't",
    "start": "1363559",
    "end": "1366900"
  },
  {
    "text": "really allow users to connect directly",
    "start": "1366900",
    "end": "1370169"
  },
  {
    "text": "to containers today but we could allow",
    "start": "1370169",
    "end": "1373020"
  },
  {
    "text": "them to connect to this router and proxy",
    "start": "1373020",
    "end": "1376559"
  },
  {
    "text": "that streaming behavior into the",
    "start": "1376559",
    "end": "1379049"
  },
  {
    "text": "container whether or not the execution",
    "start": "1379049",
    "end": "1381750"
  },
  {
    "text": "provider supports it doesn't really",
    "start": "1381750",
    "end": "1383309"
  },
  {
    "text": "matter at that point and some other",
    "start": "1383309",
    "end": "1386610"
  },
  {
    "text": "interesting things that we can do are",
    "start": "1386610",
    "end": "1388580"
  },
  {
    "text": "things like outsourcing burst processing",
    "start": "1388580",
    "end": "1391799"
  },
  {
    "text": "so if we get up to cluster capacity or",
    "start": "1391799",
    "end": "1394940"
  },
  {
    "text": "whatever we deem is too much to manage",
    "start": "1394940",
    "end": "1398250"
  },
  {
    "text": "and our in our cluster pool we can",
    "start": "1398250",
    "end": "1400440"
  },
  {
    "text": "either delegate to other clusters or",
    "start": "1400440",
    "end": "1402090"
  },
  {
    "text": "even outside cloud providers like AWS",
    "start": "1402090",
    "end": "1405419"
  },
  {
    "text": "Soares or Google",
    "start": "1405419",
    "end": "1408529"
  },
  {
    "text": "so the current states of the open west",
    "start": "1410020",
    "end": "1413059"
  },
  {
    "text": "router it's a prototype coming soon to",
    "start": "1413059",
    "end": "1416000"
  },
  {
    "text": "the Oakland whisk or repo if folks are",
    "start": "1416000",
    "end": "1419059"
  },
  {
    "text": "interested in this I encourage you to",
    "start": "1419059",
    "end": "1420710"
  },
  {
    "text": "tap into the open whisk project",
    "start": "1420710",
    "end": "1423650"
  },
  {
    "text": "it's an Apache project we're on github",
    "start": "1423650",
    "end": "1426650"
  },
  {
    "text": "and slack and the usual places thanks",
    "start": "1426650",
    "end": "1432950"
  },
  {
    "text": "for listening",
    "start": "1432950",
    "end": "1435309"
  },
  {
    "text": "all right any questions so how does the",
    "start": "1438340",
    "end": "1447799"
  },
  {
    "text": "deployment model work because the way",
    "start": "1447799",
    "end": "1449809"
  },
  {
    "text": "you deploy code to open risk is",
    "start": "1449809",
    "end": "1451910"
  },
  {
    "text": "different and we do two key Native is",
    "start": "1451910",
    "end": "1454190"
  },
  {
    "text": "different right",
    "start": "1454190",
    "end": "1454910"
  },
  {
    "text": "open whisk I believe it's toast the code",
    "start": "1454910",
    "end": "1457160"
  },
  {
    "text": "in a document database and caner do",
    "start": "1457160",
    "end": "1460070"
  },
  {
    "text": "requires at a docker image so that is",
    "start": "1460070",
    "end": "1462860"
  },
  {
    "text": "also handled by the separate component",
    "start": "1462860",
    "end": "1464990"
  },
  {
    "text": "yes so this is kind of what I was",
    "start": "1464990",
    "end": "1466700"
  },
  {
    "text": "getting at we're open which provides",
    "start": "1466700",
    "end": "1468559"
  },
  {
    "text": "kind of a turnkey system that includes",
    "start": "1468559",
    "end": "1471110"
  },
  {
    "text": "an API for deploying code and it's true",
    "start": "1471110",
    "end": "1475490"
  },
  {
    "text": "that today that code is stored in a",
    "start": "1475490",
    "end": "1478280"
  },
  {
    "text": "document database but what's important",
    "start": "1478280",
    "end": "1480290"
  },
  {
    "text": "for the developer perspective is that",
    "start": "1480290",
    "end": "1482419"
  },
  {
    "text": "there's an API for injecting a blob of",
    "start": "1482419",
    "end": "1485540"
  },
  {
    "text": "code into the system any other questions",
    "start": "1485540",
    "end": "1492970"
  },
  {
    "text": "hi good morning",
    "start": "1498550",
    "end": "1500840"
  },
  {
    "text": "what sort of tooling you provide to",
    "start": "1500840",
    "end": "1502910"
  },
  {
    "text": "developers to interact with a platform",
    "start": "1502910",
    "end": "1504710"
  },
  {
    "text": "as in to make it easy for them to",
    "start": "1504710",
    "end": "1506570"
  },
  {
    "text": "actually develop these functions do you",
    "start": "1506570",
    "end": "1508970"
  },
  {
    "text": "have some sort of local environment for",
    "start": "1508970",
    "end": "1510650"
  },
  {
    "text": "that as well or how do you handle that",
    "start": "1510650",
    "end": "1512270"
  },
  {
    "text": "so tooling I think is a sore spot across",
    "start": "1512270",
    "end": "1516920"
  },
  {
    "text": "the service platform spectrum including",
    "start": "1516920",
    "end": "1520910"
  },
  {
    "text": "Adobe IO runtime so from an open wisk",
    "start": "1520910",
    "end": "1525680"
  },
  {
    "text": "perspective",
    "start": "1525680",
    "end": "1527210"
  },
  {
    "text": "the tooling options available are",
    "start": "1527210",
    "end": "1530020"
  },
  {
    "text": "there's a CLI there's the API there is a",
    "start": "1530020",
    "end": "1534380"
  },
  {
    "text": "debugger and there is a a kind of",
    "start": "1534380",
    "end": "1539420"
  },
  {
    "text": "functional prototype of a composition",
    "start": "1539420",
    "end": "1541450"
  },
  {
    "text": "visualizer so it's it's getting better I",
    "start": "1541450",
    "end": "1546680"
  },
  {
    "text": "think one of our colleagues built a",
    "start": "1546680",
    "end": "1549020"
  },
  {
    "text": "debugger that's very cool that I think",
    "start": "1549020",
    "end": "1553040"
  },
  {
    "text": "really closes a lot of that gap there's",
    "start": "1553040",
    "end": "1557300"
  },
  {
    "text": "also a browser-based editor that was",
    "start": "1557300",
    "end": "1561020"
  },
  {
    "text": "recently built by another company called",
    "start": "1561020",
    "end": "1564020"
  },
  {
    "text": "the Impella so it's you know it's not as",
    "start": "1564020",
    "end": "1569360"
  },
  {
    "text": "broad as desktop development or probably",
    "start": "1569360",
    "end": "1573050"
  },
  {
    "text": "some of the tools that you can get with",
    "start": "1573050",
    "end": "1574520"
  },
  {
    "text": "with lambda but it's it's growing and",
    "start": "1574520",
    "end": "1578060"
  },
  {
    "text": "the gap is closing thank you any other",
    "start": "1578060",
    "end": "1583160"
  },
  {
    "text": "questions",
    "start": "1583160",
    "end": "1585550"
  },
  {
    "text": "so with Enid of execution you have",
    "start": "1593250",
    "end": "1596700"
  },
  {
    "text": "specific containers for Java for",
    "start": "1596700",
    "end": "1598529"
  },
  {
    "text": "JavaScript and that works yeah so the",
    "start": "1598529",
    "end": "1603690"
  },
  {
    "text": "notion of using stem cells requires that",
    "start": "1603690",
    "end": "1606299"
  },
  {
    "text": "you have a fixed you know set of runtime",
    "start": "1606299",
    "end": "1612090"
  },
  {
    "text": "environments that you support so we skip",
    "start": "1612090",
    "end": "1615690"
  },
  {
    "text": "some of the challenge on our particular",
    "start": "1615690",
    "end": "1618080"
  },
  {
    "text": "product by only supporting nodejs",
    "start": "1618080",
    "end": "1623360"
  },
  {
    "text": "but but Java has its own set of",
    "start": "1623480",
    "end": "1626309"
  },
  {
    "text": "challenges for forgetting dynamic code",
    "start": "1626309",
    "end": "1628980"
  },
  {
    "text": "into a running container could you",
    "start": "1628980",
    "end": "1630899"
  },
  {
    "text": "explain your point about static routes I",
    "start": "1630899",
    "end": "1633360"
  },
  {
    "text": "didn't get it so in general a lot of you",
    "start": "1633360",
    "end": "1640860"
  },
  {
    "text": "know a lot of systems today work by",
    "start": "1640860",
    "end": "1644720"
  },
  {
    "text": "having a whenever you add a function to",
    "start": "1644720",
    "end": "1647970"
  },
  {
    "text": "the system you have a route in the",
    "start": "1647970",
    "end": "1649950"
  },
  {
    "text": "system and open which doesn't work that",
    "start": "1649950",
    "end": "1653700"
  },
  {
    "text": "way and that's that's one of the things",
    "start": "1653700",
    "end": "1656309"
  },
  {
    "text": "that I like about it is because you can",
    "start": "1656309",
    "end": "1659909"
  },
  {
    "text": "have a infinitely large set of functions",
    "start": "1659909",
    "end": "1664620"
  },
  {
    "text": "in the system without having a crazy",
    "start": "1664620",
    "end": "1668340"
  },
  {
    "text": "huge routing table that's that's",
    "start": "1668340",
    "end": "1671669"
  },
  {
    "text": "constantly changing because when you're",
    "start": "1671669",
    "end": "1674850"
  },
  {
    "text": "dealing with operating the platform",
    "start": "1674850",
    "end": "1677610"
  },
  {
    "text": "yourself you have to deal with all the",
    "start": "1677610",
    "end": "1680789"
  },
  {
    "text": "notion of changing the routing table",
    "start": "1680789",
    "end": "1684059"
  },
  {
    "text": "constantly whenever somebody changes a",
    "start": "1684059",
    "end": "1686070"
  },
  {
    "text": "function and so we avoid that case",
    "start": "1686070",
    "end": "1690750"
  },
  {
    "text": "completely by only loading the routes on",
    "start": "1690750",
    "end": "1693720"
  },
  {
    "text": "demand all right thanks so there's no",
    "start": "1693720",
    "end": "1696000"
  },
  {
    "text": "there's no retrying there's no changing",
    "start": "1696000",
    "end": "1699090"
  },
  {
    "text": "the routing table got time for one more",
    "start": "1699090",
    "end": "1704508"
  },
  {
    "text": "yeah I just wondering you're talking",
    "start": "1708960",
    "end": "1711370"
  },
  {
    "text": "about one of the potential to support",
    "start": "1711370",
    "end": "1712900"
  },
  {
    "text": "streaming functions I guess could you",
    "start": "1712900",
    "end": "1715510"
  },
  {
    "text": "you know elaborate a little more do you",
    "start": "1715510",
    "end": "1717790"
  },
  {
    "text": "have a use case for this not off the top",
    "start": "1717790",
    "end": "1721720"
  },
  {
    "text": "of my head",
    "start": "1721720",
    "end": "1722860"
  },
  {
    "text": "although every once in a while one of",
    "start": "1722860",
    "end": "1725380"
  },
  {
    "text": "our customers asks us if we support",
    "start": "1725380",
    "end": "1727420"
  },
  {
    "text": "things like WebSockets and you know",
    "start": "1727420",
    "end": "1731590"
  },
  {
    "text": "where they want to have a persistent",
    "start": "1731590",
    "end": "1733270"
  },
  {
    "text": "connection that is fed multiple",
    "start": "1733270",
    "end": "1735520"
  },
  {
    "text": "responses for a single a single function",
    "start": "1735520",
    "end": "1739800"
  },
  {
    "text": "things like that and when you have a",
    "start": "1739800",
    "end": "1743200"
  },
  {
    "text": "server this model where you're",
    "start": "1743200",
    "end": "1744700"
  },
  {
    "text": "delegating the lifecycle away to a",
    "start": "1744700",
    "end": "1747450"
  },
  {
    "text": "provider that intrinsically wants to",
    "start": "1747450",
    "end": "1751870"
  },
  {
    "text": "scale things to zero you can't maintain",
    "start": "1751870",
    "end": "1754150"
  },
  {
    "text": "a connection there and so this is this",
    "start": "1754150",
    "end": "1757930"
  },
  {
    "text": "is a type of way to address that type of",
    "start": "1757930",
    "end": "1760510"
  },
  {
    "text": "problem all right and with that I think",
    "start": "1760510",
    "end": "1764470"
  },
  {
    "text": "we're done Thank You Tyson thank you",
    "start": "1764470",
    "end": "1768750"
  }
]