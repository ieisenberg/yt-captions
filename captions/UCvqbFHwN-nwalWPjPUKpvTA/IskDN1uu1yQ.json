[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "hey everyone my name is steven tirana i'm a chief engineer at booz allen hamilton and today we're going to be",
    "start": "1599",
    "end": "6960"
  },
  {
    "text": "talking about supply chain security with the jenkins templating engine",
    "start": "6960",
    "end": "12400"
  },
  {
    "text": "so before we start i want to take a step back and and look at",
    "start": "12400",
    "end": "18000"
  },
  {
    "text": "what is software supply chain at a glance uh where it covers everything from",
    "start": "18000",
    "end": "23680"
  },
  {
    "text": "uh trusting who is contributing to your code base how is that codebase getting pulled into",
    "start": "23680",
    "end": "29519"
  },
  {
    "text": "your automated devsecops pipeline what dependencies are being pulled into that pipeline how do",
    "start": "29519",
    "end": "36000"
  },
  {
    "text": "you trust the infrastructure of that ci pipeline how do you make sure that the artifacts",
    "start": "36000",
    "end": "41920"
  },
  {
    "text": "published to your artifact repository are the ones that got built from your",
    "start": "41920",
    "end": "47200"
  },
  {
    "text": "devsecops pipeline and finally how do you make sure that the artifacts that you're running in production are the",
    "start": "47200",
    "end": "53280"
  },
  {
    "text": "artifacts that you expect to be running in production each one of these arrows could really be its own conference talk",
    "start": "53280",
    "end": "60559"
  },
  {
    "text": "um so i want to you know acknowledge that and say that today we're we're going to be focusing on",
    "start": "60559",
    "end": "66240"
  },
  {
    "text": "uh your devsecops pipeline and more specifically uh what are the elements of a devsecops",
    "start": "66240",
    "end": "72799"
  },
  {
    "text": "pipeline to make sure that you're doing everything you can from a security perspective",
    "start": "72799",
    "end": "78799"
  },
  {
    "text": "to make sure the applications that you build are secure and then you know what are some of the challenges",
    "start": "78799",
    "end": "84880"
  },
  {
    "text": "that organizations face as they start to scale these devsecops pipelines from one team",
    "start": "84880",
    "end": "90640"
  },
  {
    "text": "to dozens or hundreds of teams throughout the organization",
    "start": "90640",
    "end": "96880"
  },
  {
    "text": "so let's start with a overview of devsecops",
    "start": "96880",
    "end": "102079"
  },
  {
    "start": "97000",
    "end": "97000"
  },
  {
    "text": "one of the privileges of of my role is i get to talk to dozens of teams and hundreds of",
    "start": "102079",
    "end": "107920"
  },
  {
    "text": "developers about devops and the first thing i learned is that no one has the same definition",
    "start": "107920",
    "end": "114320"
  },
  {
    "text": "of what devsecops actually means the way i look at it devsecops means incorporating security into every step",
    "start": "114320",
    "end": "121520"
  },
  {
    "text": "of the software development lifecycle and that manifests itself in a couple different ways the first is",
    "start": "121520",
    "end": "129440"
  },
  {
    "text": "application dependency scanning right so as we build applications",
    "start": "129440",
    "end": "134640"
  },
  {
    "text": "how do we make sure that the third-party dependencies that we're pulling into our environment don't have known vulnerabilities",
    "start": "134640",
    "end": "141360"
  },
  {
    "text": "there is lots of great tools out there in the industry to do this today from an open source perspective you've got a west",
    "start": "141360",
    "end": "147840"
  },
  {
    "text": "dependency checker but there's also a ton of great vendors in this space around sonotype",
    "start": "147840",
    "end": "153840"
  },
  {
    "text": "nexus with their firewall and lifecycle products you've got artifactory with x-ray",
    "start": "153840",
    "end": "158959"
  },
  {
    "text": "black duck there's plenty of options to make sure that the applications or the",
    "start": "158959",
    "end": "164959"
  },
  {
    "text": "dependencies that you're pulling into your applications don't have known issues and these dependencies are like the sort",
    "start": "164959",
    "end": "171840"
  },
  {
    "text": "of the raw materials you're pulling into your your assembly line that's going to produce your your artifact you want to",
    "start": "171840",
    "end": "178640"
  },
  {
    "text": "make sure that these to the best of your knowledge are aren't compromised once you've pulled in those",
    "start": "178640",
    "end": "185599"
  },
  {
    "text": "dependencies you have your own code right the code that you have written to comprise your application",
    "start": "185599",
    "end": "192720"
  },
  {
    "text": "how do we make sure that that code doesn't have known vulnerabilities",
    "start": "192720",
    "end": "198800"
  },
  {
    "text": "so tools for that would be static code analysis so you've got your sonar cube fortify",
    "start": "198800",
    "end": "205680"
  },
  {
    "text": "and what these tools are looking for is really you know how do we make sure",
    "start": "205680",
    "end": "210959"
  },
  {
    "text": "that there aren't hard-coded password variables you know there's certainly more sophisticated examples like how do",
    "start": "210959",
    "end": "218319"
  },
  {
    "text": "we make sure that there aren't memory vulnerabilities if you're writing code and see for example",
    "start": "218319",
    "end": "225200"
  },
  {
    "text": "once we know that the raw materials of our application are secure and we know that the code",
    "start": "225200",
    "end": "232159"
  },
  {
    "text": "that we've written is secure from a static perspective we can actually build an artifact here",
    "start": "232159",
    "end": "239200"
  },
  {
    "text": "so that would mean you know we're at day zero of kubecon building a container image",
    "start": "239200",
    "end": "246080"
  },
  {
    "text": "so with the container image comes a whole new artifact which means a whole new set of scans that we get to do",
    "start": "246080",
    "end": "253519"
  },
  {
    "text": "so this is where container image scanning comes in there's tons of different",
    "start": "253519",
    "end": "259440"
  },
  {
    "text": "tools in this space i live in the the federal space doing",
    "start": "259440",
    "end": "264560"
  },
  {
    "text": "software delivery so you know our team works closely with",
    "start": "264560",
    "end": "269759"
  },
  {
    "text": "the department of defense's iron bank which is an accredited container registry",
    "start": "269759",
    "end": "274800"
  },
  {
    "text": "um that anyone across the dod can use with hardened container images",
    "start": "274800",
    "end": "279840"
  },
  {
    "text": "the container hardening pipeline for iron bank comprises three or four different scanning tools",
    "start": "279840",
    "end": "284880"
  },
  {
    "text": "from anchor to twist lock to you know open s-cap",
    "start": "284880",
    "end": "291280"
  },
  {
    "text": "you name it they're scanning for for stig compliance and cve compliance with",
    "start": "291280",
    "end": "296320"
  },
  {
    "text": "a couple different tools once you scan these images you know",
    "start": "296320",
    "end": "302000"
  },
  {
    "text": "vulnerabilities really come in two different flavors you've got cves so i pulled in you know compromised",
    "start": "302000",
    "end": "309199"
  },
  {
    "text": "code into my ecosystem but then you also have vulnerabilities that stem from",
    "start": "309199",
    "end": "315320"
  },
  {
    "text": "misconfigurations and this is where continuous compliance comes in so continuous compliance means",
    "start": "315320",
    "end": "322160"
  },
  {
    "text": "you know these same tools that do container image scanning can also do uh scanning of the configuration right",
    "start": "322160",
    "end": "329120"
  },
  {
    "text": "so does the container expose port 22 uh within the federal space there's all",
    "start": "329120",
    "end": "335280"
  },
  {
    "text": "kinds of federally regulated guidelines around the way you have to configure",
    "start": "335280",
    "end": "341520"
  },
  {
    "text": "your infrastructure most of those policies have a control",
    "start": "341520",
    "end": "346560"
  },
  {
    "text": "profile associated with them that these continuous compliance scanning tools can validate",
    "start": "346560",
    "end": "352400"
  },
  {
    "text": "making sure that you you know have configured your infrastructure in a way that's secure",
    "start": "352400",
    "end": "358080"
  },
  {
    "text": "once you have a container you can actually go and deploy it to an environment and from there there's still more testing to do right you can do",
    "start": "358080",
    "end": "365120"
  },
  {
    "text": "penetration testing to make sure that your application is not susceptible to some of the more common",
    "start": "365120",
    "end": "371440"
  },
  {
    "text": "uh attacks things like sql injection or you know not parsing user input and",
    "start": "371440",
    "end": "377120"
  },
  {
    "text": "ending up with a remote code execution vulnerability and then the same vein of compliance i",
    "start": "377120",
    "end": "382160"
  },
  {
    "text": "think it's important to mention accessibility assurance so your devsecops pipeline once you've got a deployed application in a test",
    "start": "382160",
    "end": "388720"
  },
  {
    "text": "environment can also scan it from a compliance standpoint to see if it's compatible with 508",
    "start": "388720",
    "end": "396000"
  },
  {
    "text": "there's no tool out there that i've seen yet that can tell you with 100 certainty if your application is accessible but it",
    "start": "396000",
    "end": "403600"
  },
  {
    "text": "can definitely tell you if you're not right so if you're missing some obvious accessibility features you know things",
    "start": "403600",
    "end": "411120"
  },
  {
    "text": "like i don't have an alt text on on this image these tools will catch that for you which really",
    "start": "411120",
    "end": "417120"
  },
  {
    "text": "gives the folks that are doing manual accessibility testing",
    "start": "417120",
    "end": "422319"
  },
  {
    "text": "the ability to focus on the more complex areas of accessibility",
    "start": "422319",
    "end": "427280"
  },
  {
    "text": "so there's a lot of content there but now we need to string it all together into a devsecops pipeline",
    "start": "428319",
    "end": "434479"
  },
  {
    "text": "and things start to get complicated uh so if we look at our our path to production here all the way from plan",
    "start": "434479",
    "end": "440880"
  },
  {
    "text": "and develop up to monitor we have all the different kinds of testing pull a word at a dictionary and",
    "start": "440880",
    "end": "447520"
  },
  {
    "text": "add testing at the end of it and i guarantee you it's probably got a place in your devsecops pipeline",
    "start": "447520",
    "end": "454000"
  },
  {
    "text": "at scale across an organization different types of applications are",
    "start": "454000",
    "end": "459599"
  },
  {
    "text": "going to use different tools to implement these gates right so let's take a",
    "start": "459599",
    "end": "464639"
  },
  {
    "text": "simpler example if i've got a java application versus a",
    "start": "464639",
    "end": "469919"
  },
  {
    "text": "node application my java application for unit tests and for building the application",
    "start": "469919",
    "end": "475360"
  },
  {
    "text": "i is going to probably use gradle or maven if it's an ultra application you might",
    "start": "475360",
    "end": "480560"
  },
  {
    "text": "be using something like ant if i've got my node application it's probably using npm or yarn or",
    "start": "480560",
    "end": "487599"
  },
  {
    "text": "gulp so you know even though on the screen right",
    "start": "487599",
    "end": "493039"
  },
  {
    "text": "here we've got a generic devsecops pipeline representing a path",
    "start": "493039",
    "end": "498560"
  },
  {
    "text": "to production that integrates all these different kinds of security testing",
    "start": "498560",
    "end": "504080"
  },
  {
    "text": "the implementation of this pipeline across your organization requires",
    "start": "504080",
    "end": "509120"
  },
  {
    "text": "the ability to integrate with different combinations of tools for each of these boxes depending upon",
    "start": "509120",
    "end": "516240"
  },
  {
    "text": "the tech stack right and for some tech stacks teams might be using multiple combinations of those tools",
    "start": "516240",
    "end": "523919"
  },
  {
    "text": "so what let's talk about what happens in in practice right so",
    "start": "523919",
    "end": "529200"
  },
  {
    "start": "524000",
    "end": "524000"
  },
  {
    "text": "typically there's when you're first starting your devsecops journey a lot of organizations",
    "start": "529200",
    "end": "535040"
  },
  {
    "text": "will choose you know what us consultants would call a champion so who's your team that's going to be",
    "start": "535040",
    "end": "541200"
  },
  {
    "text": "the first to try this out um and you'll build a pipeline for them it will",
    "start": "541200",
    "end": "547519"
  },
  {
    "text": "be moderately successful there'll be some bumps in the road as they experience their first",
    "start": "547519",
    "end": "553360"
  },
  {
    "text": "security scans there's a ton of patching that always happens the first time you start in incorporating these practices",
    "start": "553360",
    "end": "559360"
  },
  {
    "text": "into your teams but you did it you have a devsecops pipeline for a specific team",
    "start": "559360",
    "end": "564959"
  },
  {
    "text": "um so you know you deal with that learning curve you you successfully get the team",
    "start": "564959",
    "end": "570880"
  },
  {
    "text": "integrated and you say awesome like let's scale this across the organization uh our",
    "start": "570880",
    "end": "576880"
  },
  {
    "text": "pilot was successful so what happens next you wrote your pipeline presumably",
    "start": "576880",
    "end": "583360"
  },
  {
    "text": "um in one of the more popular ci cd tools these days like uh jenkins or",
    "start": "583360",
    "end": "590800"
  },
  {
    "text": "gitlab and to do that you needed to have a pipeline artifact",
    "start": "590800",
    "end": "596959"
  },
  {
    "text": "that defined you know what what is our software delivery process as code um so there's a there's a file in",
    "start": "596959",
    "end": "604240"
  },
  {
    "text": "your source code repository called a jenkins file or called a dot gitlab ci diamo file",
    "start": "604240",
    "end": "610240"
  },
  {
    "text": "that's outlining what exactly is supposed to happen when developers make changes to this repository",
    "start": "610240",
    "end": "616720"
  },
  {
    "text": "so we want to take that artifact we want to apply it to multiple teams so what do we do we copy and paste it uh to the",
    "start": "616720",
    "end": "622959"
  },
  {
    "text": "next repository that we want to onboard and we start tweaking it right where we were doing",
    "start": "622959",
    "end": "629279"
  },
  {
    "text": "i don't know the gradle test execution before we'll swap that out to",
    "start": "629279",
    "end": "634560"
  },
  {
    "text": "uh maven or to npm or yarn and you know that that works for a while",
    "start": "634560",
    "end": "640880"
  },
  {
    "text": "so we you know if we look at the two axes of this graph here we've got scale",
    "start": "640880",
    "end": "646399"
  },
  {
    "text": "on the x-axis that's you know corresponds roughly to the number of teams or applications that you're",
    "start": "646399",
    "end": "651920"
  },
  {
    "text": "integrating and on the y-axis here we've got complexity and the subtext being pain",
    "start": "651920",
    "end": "658959"
  },
  {
    "text": "so that's you know as we start to onboard more than one application and we're copying and pasting and tweaking",
    "start": "658959",
    "end": "665120"
  },
  {
    "text": "uh our complexity starts to go up at a pretty steady rate as we start to onboard things eventually",
    "start": "665120",
    "end": "671839"
  },
  {
    "text": "you hit a point where you start to realize like i either need every development team in my",
    "start": "671839",
    "end": "677600"
  },
  {
    "text": "organization to understand how to create a devsecops pipeline and",
    "start": "677600",
    "end": "683440"
  },
  {
    "text": "maintain these pipeline artifacts or i need to find a better way um you know we're",
    "start": "683440",
    "end": "689120"
  },
  {
    "text": "running into all sorts of challenges teams don't know how to edit these files these files are",
    "start": "689120",
    "end": "694560"
  },
  {
    "text": "changing for every single team because there's no standardization so usually",
    "start": "694560",
    "end": "699839"
  },
  {
    "text": "someone has a great idea of we should modularize these these pipelines make them a little bit more reasonable",
    "start": "699839",
    "end": "706480"
  },
  {
    "text": "you know in jenkins that would mean let's create a jenkins shared library where we can pull out common steps and",
    "start": "706480",
    "end": "711600"
  },
  {
    "text": "that will really simplify our pipeline as we scale it and you know it does at first you do",
    "start": "711600",
    "end": "717120"
  },
  {
    "text": "simplify uh your larger scale pipeline development that way um over time as you add more and more",
    "start": "717120",
    "end": "724079"
  },
  {
    "text": "teams you find yourself adding more and more modules to those shared libraries or modularized pipeline implementations",
    "start": "724079",
    "end": "730800"
  },
  {
    "text": "eventually you say this isn't working either you know we've probably hit 50 to 75 percent of of our",
    "start": "730800",
    "end": "738959"
  },
  {
    "text": "you know organization's application portfolio but things are getting way too complicated this this you know shared",
    "start": "738959",
    "end": "745519"
  },
  {
    "text": "library is gigantic um so i have a better idea and i've you know it's it's really interesting that",
    "start": "745519",
    "end": "752480"
  },
  {
    "text": "i've probably seen this pattern six or seven times just independently like what teams end up doing once they",
    "start": "752480",
    "end": "758639"
  },
  {
    "text": "reach this scale is they simplify their pipeline to just say let's call an entry point method",
    "start": "758639",
    "end": "764720"
  },
  {
    "text": "inside the shared library so your you know for example your jenkins file would just say",
    "start": "764720",
    "end": "771040"
  },
  {
    "text": "pipeline.run and you'd pass it a bunch of arguments and that would try to abstract away",
    "start": "771040",
    "end": "776800"
  },
  {
    "text": "all of the complicated bits of this devsecops pipeline so you know you simplified the",
    "start": "776800",
    "end": "783839"
  },
  {
    "text": "configuration for an individual team they had to just copy and paste this you know file into",
    "start": "783839",
    "end": "790880"
  },
  {
    "text": "their repository and pass it some input parameters but on the back end you have a",
    "start": "790880",
    "end": "797040"
  },
  {
    "text": "massively complex shared library and over time as you scale more and more teams and applications the number of",
    "start": "797040",
    "end": "803760"
  },
  {
    "text": "possible input arguments starts to go way up to support all these different use cases",
    "start": "803760",
    "end": "809760"
  },
  {
    "text": "so let's the gist here if i had to do a tldr is that the more teams that you're trying",
    "start": "809760",
    "end": "816399"
  },
  {
    "text": "to apply or have adopt devsecops the more pain your organization is going to feel",
    "start": "816399",
    "end": "823279"
  },
  {
    "text": "let's talk about why that pain happens the root of this pain",
    "start": "823279",
    "end": "829040"
  },
  {
    "start": "824000",
    "end": "824000"
  },
  {
    "text": "from my experience is that every cicd tool in the industry today is focused on",
    "start": "829040",
    "end": "834800"
  },
  {
    "text": "how do i build a devsecops pipeline for one team for one application",
    "start": "834800",
    "end": "841120"
  },
  {
    "text": "and that often means that you define your uh your cicd pipeline",
    "start": "841120",
    "end": "847040"
  },
  {
    "text": "as code inside each and every source code repository and",
    "start": "847040",
    "end": "852639"
  },
  {
    "text": "that by itself from a software supply chain perspective poses issues that we'll get to in a second",
    "start": "852639",
    "end": "858399"
  },
  {
    "text": "uh so the the first yeah the first sub bullet under i've got to duplicate my pipeline",
    "start": "858399",
    "end": "865199"
  },
  {
    "text": "is that most pipelines couple the business logic and the technical implementation so",
    "start": "865199",
    "end": "870399"
  },
  {
    "text": "inside the same file you're saying you know this is what i want to happen when right when i open a pull request to this",
    "start": "870399",
    "end": "876240"
  },
  {
    "text": "particular branch these are the series of tests that i want to happen um",
    "start": "876240",
    "end": "881360"
  },
  {
    "text": "and within those conditionals you're also putting the specific technical implementation logic of",
    "start": "881360",
    "end": "886959"
  },
  {
    "text": "you know go run java or go run my node app and do tests or do scans",
    "start": "886959",
    "end": "893199"
  },
  {
    "text": "so that that has two main issues with it right the first is time i need to duplicate my pipeline across every",
    "start": "893199",
    "end": "899680"
  },
  {
    "text": "single source code repository which is really cumbersome it's a",
    "start": "899680",
    "end": "905120"
  },
  {
    "text": "typically a manual process sometimes you'll add some automation to bootstrap or repository but at the end of the day",
    "start": "905120",
    "end": "911680"
  },
  {
    "text": "you still have duplicated your python definition the second is complexity right all those different combinations",
    "start": "911680",
    "end": "918399"
  },
  {
    "text": "of tools uh mean different pipelines even though at the end of the day we're really trying to automate",
    "start": "918399",
    "end": "924639"
  },
  {
    "text": "a generic path to production that incorporates security",
    "start": "924639",
    "end": "930959"
  },
  {
    "text": "we have multiple definitions of those pipelines and then the the second issue here is",
    "start": "930959",
    "end": "936959"
  },
  {
    "text": "because we're duplicating pipeline definitions where we've got separate artifacts for",
    "start": "936959",
    "end": "943759"
  },
  {
    "text": "every single application there's no way to know that these teams are actually following the",
    "start": "943759",
    "end": "950240"
  },
  {
    "text": "process they're supposed to right from a supply chain security perspective like",
    "start": "950240",
    "end": "955440"
  },
  {
    "text": "what's to stop a developer from going and editing their jenkins file in their",
    "start": "955440",
    "end": "960560"
  },
  {
    "text": "feature branch and saying deploy to production all right we would like to think that",
    "start": "960560",
    "end": "966320"
  },
  {
    "text": "the developers that we work with wouldn't do that but you know sometimes our accounts get compromised there's",
    "start": "966320",
    "end": "971839"
  },
  {
    "text": "real world scenarios that happen where the fact that developers have direct access to",
    "start": "971839",
    "end": "978560"
  },
  {
    "text": "the cicd pipeline in their source code repository at many organizations uh",
    "start": "978560",
    "end": "983759"
  },
  {
    "text": "poses a challenging situation and then the last major issue here is",
    "start": "983759",
    "end": "988959"
  },
  {
    "text": "sustainment i've been on teams where we have to maintain the devsecops",
    "start": "988959",
    "end": "995120"
  },
  {
    "text": "pipeline that's used by you know a bunch of different development teams throughout an organization",
    "start": "995120",
    "end": "1001040"
  },
  {
    "text": "and trying to keep up with that complexity is just not sustainable you either have to scale",
    "start": "1001040",
    "end": "1006800"
  },
  {
    "text": "this def ops team linearly to support you know the number of apps that are being onboarded or you need every dev",
    "start": "1006800",
    "end": "1013279"
  },
  {
    "text": "team to become devops engineers which itself is not super sustainable so let's talk about how we can",
    "start": "1013279",
    "end": "1019680"
  },
  {
    "text": "make this a bit better um pipeline templates when we pulled up that",
    "start": "1019680",
    "end": "1025120"
  },
  {
    "text": "you know graph earlier i'll shoot back to it when we looked at this devsecops pipeline we didn't call out a tool here",
    "start": "1025120",
    "end": "1033199"
  },
  {
    "text": "we just said every app regardless of the type of app is going to do these things",
    "start": "1033199",
    "end": "1039280"
  },
  {
    "text": "to simplify this picture a bit everyone is going to run some tests everyone is going to build an artifact",
    "start": "1039280",
    "end": "1045360"
  },
  {
    "text": "hopefully sign that artifact and publish it to an artifact repository they're going to scan that artifact they're",
    "start": "1045360",
    "end": "1051760"
  },
  {
    "text": "going to deploy it somewhere they're going to run some more tests and then if everything's good they're going to deploy to production",
    "start": "1051760",
    "end": "1057520"
  },
  {
    "text": "nothing about what i just said calls out a specific type of application a specific build tool specific scanning",
    "start": "1057520",
    "end": "1064080"
  },
  {
    "text": "tool what have you however when we build our pipelines we couple them to specific tools so what if",
    "start": "1064080",
    "end": "1070400"
  },
  {
    "text": "we didn't have to right what if we were able to create tool agnostic pipeline templates",
    "start": "1070400",
    "end": "1078080"
  },
  {
    "text": "that call out those generic steps and then let us plug and play with what tools are being used to implement the",
    "start": "1078080",
    "end": "1083840"
  },
  {
    "text": "gates so you know this fancy gif here is stepping through we can apply the",
    "start": "1083840",
    "end": "1089919"
  },
  {
    "text": "same template to different combinations of tools without having to create a new pipeline from scratch",
    "start": "1089919",
    "end": "1095280"
  },
  {
    "text": "and let's dive into like a real world example that talks through what that looks like",
    "start": "1095280",
    "end": "1100799"
  },
  {
    "text": "using the jenkins templating engine so step one defining our software",
    "start": "1100799",
    "end": "1105840"
  },
  {
    "start": "1103000",
    "end": "1103000"
  },
  {
    "text": "delivery process in the upper left in the upper right i have two admittedly contract pipelines to",
    "start": "1105840",
    "end": "1112400"
  },
  {
    "text": "demonstrate the concept here on the left we have a application using maven as their build tool and on",
    "start": "1112400",
    "end": "1118799"
  },
  {
    "text": "the right we have an application using gradle as their build tool on the left you'll see that we're going",
    "start": "1118799",
    "end": "1124880"
  },
  {
    "text": "to do a build with maven running maven clean package and then we're going to do static code analysis with sonar cube",
    "start": "1124880",
    "end": "1131840"
  },
  {
    "text": "on the right we are going to do our build with gradle and we're also going to do static code",
    "start": "1131840",
    "end": "1137280"
  },
  {
    "text": "analysis you know the big aha moment here is that regardless of the build",
    "start": "1137280",
    "end": "1142960"
  },
  {
    "text": "tool being used the process is largely the same we're going to do a build now we're going to do static code analysis",
    "start": "1142960",
    "end": "1149760"
  },
  {
    "text": "so on the bottom half of the screen you know you can see a reusable pipeline template that calls out those two steps",
    "start": "1149760",
    "end": "1157840"
  },
  {
    "text": "build in static code analysis so wouldn't it be great if instead of needing to define my pipeline",
    "start": "1157840",
    "end": "1165679"
  },
  {
    "text": "for each of these teams individually i could put you know in a central source code repository",
    "start": "1165679",
    "end": "1171520"
  },
  {
    "text": "this is our reusable pipeline template build and static code analysis and then we're going to plug and play",
    "start": "1171520",
    "end": "1176880"
  },
  {
    "text": "with each team gets to pick are you using maven or are you using gradle and i can enforce that you're going to",
    "start": "1176880",
    "end": "1182880"
  },
  {
    "text": "use sonarcube from a static code analysis perspective so how do we make that possible",
    "start": "1182880",
    "end": "1189039"
  },
  {
    "start": "1189000",
    "end": "1189000"
  },
  {
    "text": "you know the first step on the left we have a pipeline configuration repository so this is a central location",
    "start": "1189039",
    "end": "1196160"
  },
  {
    "text": "where you're able to define your common pipeline template",
    "start": "1196160",
    "end": "1201200"
  },
  {
    "text": "and some libraries so that pipeline configuration directory",
    "start": "1201200",
    "end": "1206240"
  },
  {
    "text": "has a jenkins file this jenkins file is that reusable pipeline template we talked about on the",
    "start": "1206240",
    "end": "1212240"
  },
  {
    "text": "last slide where it's going to say build and static code analysis in the center we have what are called",
    "start": "1212240",
    "end": "1217600"
  },
  {
    "text": "libraries so we have a build step in our template that has two implementations from maven",
    "start": "1217600",
    "end": "1224080"
  },
  {
    "text": "and gradle and then we have a static code analysis step from center cube",
    "start": "1224080",
    "end": "1229280"
  },
  {
    "text": "if we look at our library's structure you'll see that just as you would expect",
    "start": "1229280",
    "end": "1234400"
  },
  {
    "text": "there's a library for maven a library for gradle and a library for sonarcube",
    "start": "1234400",
    "end": "1239600"
  },
  {
    "text": "the maven and gradle libraries have a build.groovy file and the center cube",
    "start": "1239600",
    "end": "1245520"
  },
  {
    "text": "directory has a static code docker ruby file these files the base name of the file",
    "start": "1245520",
    "end": "1251679"
  },
  {
    "text": "becomes the step name when these libraries are loaded if we look at the center we can see the source code within those",
    "start": "1251679",
    "end": "1258720"
  },
  {
    "text": "the steps as we call them this pipeline code is the exact",
    "start": "1258720",
    "end": "1263840"
  },
  {
    "text": "same pipeline code you would have written before just modularized in a way and wrapped in a call method",
    "start": "1263840",
    "end": "1270080"
  },
  {
    "text": "so that it can be plug and played right or rather we can pull in different libraries to the same template",
    "start": "1270080",
    "end": "1277200"
  },
  {
    "text": "to get different implementations of the pipeline",
    "start": "1277200",
    "end": "1282559"
  },
  {
    "text": "in the bottom right there's pipeline configuration so it's specifying you know from a",
    "start": "1282720",
    "end": "1289360"
  },
  {
    "text": "library's perspective i want to load maven and center cube from the griddle apps perspective i want",
    "start": "1289360",
    "end": "1295360"
  },
  {
    "text": "to run griddle in sonarqube so let's step forward so these libraries become",
    "start": "1295360",
    "end": "1302159"
  },
  {
    "start": "1299000",
    "end": "1299000"
  },
  {
    "text": "the building blocks of your dev tech apps pipeline within your organization and they're only as valuable",
    "start": "1302159",
    "end": "1309120"
  },
  {
    "text": "as they are reusable right so how do we make that possible when you load your libraries on the left",
    "start": "1309120",
    "end": "1316880"
  },
  {
    "text": "separate from your pipeline template you have a pipeline configuration file which makes",
    "start": "1316880",
    "end": "1322960"
  },
  {
    "text": "the template mean something so this is an example for the maven application where we're saying load the",
    "start": "1322960",
    "end": "1328400"
  },
  {
    "text": "maven library which you know is another way to say my build step should come from the maven",
    "start": "1328400",
    "end": "1334159"
  },
  {
    "text": "library the sonar cube library in this example is defining a couple parameters",
    "start": "1334159",
    "end": "1341360"
  },
  {
    "text": "it's defining like the scanner version and the whether or not we should enforce the quality gate",
    "start": "1341360",
    "end": "1347039"
  },
  {
    "text": "these parameters from the pipeline configuration file get auto wired to a",
    "start": "1347039",
    "end": "1352480"
  },
  {
    "text": "config variable available within your your library so from a developer perspective",
    "start": "1352480",
    "end": "1358799"
  },
  {
    "text": "if i'm writing or contributing to a library within my organization i can define whatever input parameters",
    "start": "1358799",
    "end": "1364799"
  },
  {
    "text": "are needed and then you know that makes these libraries reusable across teams if some",
    "start": "1364799",
    "end": "1370720"
  },
  {
    "text": "teams are just starting out on their devsecops journey and aren't quite ready to enforce the quality gate",
    "start": "1370720",
    "end": "1376720"
  },
  {
    "text": "as a purist i wouldn't recommend that but you could provide a pipeline configuration",
    "start": "1376720",
    "end": "1383760"
  },
  {
    "text": "variable for this anarchy library that allows teams to tailor tailor it on the next slide let's talk about how",
    "start": "1383760",
    "end": "1390159"
  },
  {
    "text": "we can govern these pipeline configuration files a bit more so",
    "start": "1390159",
    "end": "1396000"
  },
  {
    "start": "1393000",
    "end": "1393000"
  },
  {
    "text": "you know each repository needs to end up with a pipeline",
    "start": "1396000",
    "end": "1401200"
  },
  {
    "text": "configuration that says which build tool to use and the fact that they're using sonar key",
    "start": "1401200",
    "end": "1406880"
  },
  {
    "text": "we don't want every team to have to define the fact that they're using sonar cube we want to be able to enforce that",
    "start": "1406880",
    "end": "1413280"
  },
  {
    "text": "from a compliance or governance perspective we want to be able to say you have to use sonar cube but tell me",
    "start": "1413280",
    "end": "1419120"
  },
  {
    "text": "what build tool to use the way we can achieve that in the jenkins templing engine is through",
    "start": "1419120",
    "end": "1425440"
  },
  {
    "text": "hierarchical pipeline configuration files so the way that works is i can define in",
    "start": "1425440",
    "end": "1431520"
  },
  {
    "text": "a central location this is the pipeline configuration everyone has to inherit",
    "start": "1431520",
    "end": "1436880"
  },
  {
    "text": "in our example we're saying that everyone has to use the sounder cube library so by default in the jenkins",
    "start": "1436880",
    "end": "1445039"
  },
  {
    "text": "templing engine that means that teams aren't going to be able to override the fact that they're using",
    "start": "1445039",
    "end": "1451520"
  },
  {
    "text": "sonar cube but if you'll notice in the global pipeline configuration",
    "start": "1451520",
    "end": "1456960"
  },
  {
    "text": "we have an annotation there that says at merge so what that does is it says you know",
    "start": "1456960",
    "end": "1462080"
  },
  {
    "text": "development teams are going to be allowed to add additional libraries to this",
    "start": "1462080",
    "end": "1467279"
  },
  {
    "text": "pipeline configuration you can't change the fact that you're using sonar cube but you can add your",
    "start": "1467279",
    "end": "1473120"
  },
  {
    "text": "build tool to the library's block at runtime when the pipeline kicks off",
    "start": "1473120",
    "end": "1478640"
  },
  {
    "text": "we aggregate these pipeline configurations together and we end up with the",
    "start": "1478640",
    "end": "1484000"
  },
  {
    "text": "resultant aggregated pipeline configuration that the application needs right so one team is using maven and",
    "start": "1484000",
    "end": "1490720"
  },
  {
    "text": "center cube the other team is using gradle and center cube so there's",
    "start": "1490720",
    "end": "1496480"
  },
  {
    "text": "there's a lot of abstractions that go on in this framework",
    "start": "1496480",
    "end": "1501679"
  },
  {
    "start": "1499000",
    "end": "1499000"
  },
  {
    "text": "um you know the heart of it is to stop creating",
    "start": "1501679",
    "end": "1507200"
  },
  {
    "text": "pipelines for individual applications and start creating reusable pipeline templates",
    "start": "1507200",
    "end": "1512880"
  },
  {
    "text": "so in the upper left we have our pipeline template right that defines in tool agnostic terms",
    "start": "1512880",
    "end": "1518720"
  },
  {
    "text": "what is our team's our organization's software delivery process right and that can look like",
    "start": "1518720",
    "end": "1525279"
  },
  {
    "text": "build scan publish deploy in practice these can get more sophisticated to call out branching",
    "start": "1525279",
    "end": "1531440"
  },
  {
    "text": "strategies in practice you can have multiple pipeline templates for your organization and let teams choose but",
    "start": "1531440",
    "end": "1537600"
  },
  {
    "text": "the idea is that we're going to define them in a central location and",
    "start": "1537600",
    "end": "1542640"
  },
  {
    "text": "teams will inherit these templates so what types of things can we templatize right what can i inject into",
    "start": "1542640",
    "end": "1549679"
  },
  {
    "text": "that pipeline template to make it mean something and we have our steps like build and",
    "start": "1549679",
    "end": "1554960"
  },
  {
    "text": "static code analysis and there's other objects that can be created that",
    "start": "1554960",
    "end": "1561520"
  },
  {
    "text": "in our framework we call the pipeline primitives so there are steps stages keywords and application environments",
    "start": "1561520",
    "end": "1568159"
  },
  {
    "text": "that can be injected at runtime to the pipeline template so how do i define those things in my",
    "start": "1568159",
    "end": "1575520"
  },
  {
    "text": "pipeline configuration file and in the bottom right we've got a couple the different blocks that you can configure",
    "start": "1575520",
    "end": "1582960"
  },
  {
    "text": "to define what is your template going to do and then where do i define this pipeline configuration and where do i define this",
    "start": "1582960",
    "end": "1589760"
  },
  {
    "text": "template that lives in your jenkins folder settings so",
    "start": "1589760",
    "end": "1595120"
  },
  {
    "text": "you can have libraries and pipeline configurations applied globally",
    "start": "1595120",
    "end": "1600640"
  },
  {
    "text": "uh jenkins wide and then the manage jenkins you know settings page set that",
    "start": "1600640",
    "end": "1606159"
  },
  {
    "text": "up and then you can create an arbitrarily complex folder structure to map whatever",
    "start": "1606159",
    "end": "1611760"
  },
  {
    "text": "governance hierarchy you need so in every folder in jenkins you can say here's another pipeline",
    "start": "1611760",
    "end": "1618480"
  },
  {
    "text": "configuration that applies to this level of the hierarchy the teams or jobs within this folder are",
    "start": "1618480",
    "end": "1625200"
  },
  {
    "text": "going to inherit and then finally you can have the application specific pipeline configuration file which can live at the",
    "start": "1625200",
    "end": "1631520"
  },
  {
    "text": "root of the team's source code repository so through this approach",
    "start": "1631520",
    "end": "1636799"
  },
  {
    "text": "you can set up as complex a governance hierarchy",
    "start": "1636799",
    "end": "1641840"
  },
  {
    "text": "as you have a permissions hierarchy within your organization if some applications are",
    "start": "1641840",
    "end": "1648480"
  },
  {
    "text": "super critical and they shouldn't be allowed to change anything you can create a folder with more locked down",
    "start": "1648480",
    "end": "1654159"
  },
  {
    "text": "permissions on those pipeline configuration files than something that's you know a rapid",
    "start": "1654159",
    "end": "1659520"
  },
  {
    "text": "prototyping not production facing application yet that might need some more lenient",
    "start": "1659520",
    "end": "1665360"
  },
  {
    "text": "permissions at first so what are the the key takeaways here",
    "start": "1665360",
    "end": "1671120"
  },
  {
    "start": "1669000",
    "end": "1669000"
  },
  {
    "text": "um the first is that the jenkins tumbling engine is a framework for developing tool agnostic",
    "start": "1671120",
    "end": "1678799"
  },
  {
    "text": "templated workflows that can be reused by multiple teams simultaneously regardless of the tools being used",
    "start": "1678799",
    "end": "1685600"
  },
  {
    "text": "right and the reason that provides value is because most ci cd tools in most organizations",
    "start": "1685600",
    "end": "1692320"
  },
  {
    "text": "are defining pipelines on a per application basis which leads to",
    "start": "1692320",
    "end": "1698080"
  },
  {
    "text": "a ton of complexity it allows developers in many cases to directly",
    "start": "1698080",
    "end": "1703760"
  },
  {
    "text": "edit the definition of the pipeline bypass those checks and do a diploma to",
    "start": "1703760",
    "end": "1708960"
  },
  {
    "text": "production and over time it's very difficult to sustain the second key takeaway here is that",
    "start": "1708960",
    "end": "1715600"
  },
  {
    "text": "this approach separates the business logic defined in your pipeline template from the technical implementation",
    "start": "1715600",
    "end": "1722480"
  },
  {
    "text": "of your steps of your pipeline through pipeline libraries allowing teams to",
    "start": "1722480",
    "end": "1727679"
  },
  {
    "text": "configure their pipelines instead of build them from scratch right separating business logic and",
    "start": "1727679",
    "end": "1733679"
  },
  {
    "text": "technical implementation is a software best practice we've talked about for years just hasn't made its way to",
    "start": "1733679",
    "end": "1738799"
  },
  {
    "text": "pipeline development yet at a large scale for some reason right and then finally through the",
    "start": "1738799",
    "end": "1744880"
  },
  {
    "text": "jenkins sampling engine you can apply organizational governance by defining these reusable templates that",
    "start": "1744880",
    "end": "1751440"
  },
  {
    "text": "incorporate security all right while making sure that developers can't bypass these checks",
    "start": "1751440",
    "end": "1757679"
  },
  {
    "text": "you can optimize pipeline code reuse through these plug-and-play libraries in a way that is scalable and then finally you can",
    "start": "1757679",
    "end": "1765039"
  },
  {
    "text": "simplify pipeline maintainability in my experience it's a lot easier to manage a centralized pipeline template",
    "start": "1765039",
    "end": "1771919"
  },
  {
    "text": "with plug and play pipeline libraries than it is to try to maintain copied and pasted new tweaks tweaked",
    "start": "1771919",
    "end": "1779039"
  },
  {
    "text": "pipeline definitions across your entire organization so i hope this talk was helpful to help",
    "start": "1779039",
    "end": "1784799"
  },
  {
    "text": "you understand how the jenkins sampling engine serves a super small role of governing your devsecops pipeline",
    "start": "1784799",
    "end": "1792320"
  },
  {
    "text": "as part of your supply chain security feel free to you know check out the repository and",
    "start": "1792320",
    "end": "1798559"
  },
  {
    "text": "reach out if you have any questions thank you",
    "start": "1798559",
    "end": "1803200"
  }
]