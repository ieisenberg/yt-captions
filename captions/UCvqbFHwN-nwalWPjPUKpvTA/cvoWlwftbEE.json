[
  {
    "text": "uh hello welcome I am Andy from control plane and I am standing in for my uh",
    "start": "120",
    "end": "7740"
  },
  {
    "text": "right honorable head of security Dr Ron Baker who very sadly has gastroenteritis",
    "start": "7740",
    "end": "13200"
  },
  {
    "text": "and did not deem it fit to get on a plane very sensibly and a lot of the",
    "start": "13200",
    "end": "19680"
  },
  {
    "text": "work in this talk is uh part of the collaboration with Henry Mortimer as",
    "start": "19680",
    "end": "24779"
  },
  {
    "text": "well one of our Cloud native Engineers so a huge thanks and greetings gentlemen from the past",
    "start": "24779",
    "end": "31560"
  },
  {
    "text": "thank you for the work you put in today and I hope that as much justice as possible we will be talking about",
    "start": "31560",
    "end": "38520"
  },
  {
    "text": "infrastructures code potholes with Cloud controllers this is the uh reverse",
    "start": "38520",
    "end": "45780"
  },
  {
    "text": "intersection of uh of get Ops essentially and uh",
    "start": "45780",
    "end": "51780"
  },
  {
    "text": "event driven automation so when we're trying to do infrastructure as code with",
    "start": "51780",
    "end": "59640"
  },
  {
    "text": "with Adventure of an automation where are the foot guns how do we fix things and where can existing tooling come into",
    "start": "59640",
    "end": "66960"
  },
  {
    "text": "play so we're going to talk about some pain points we've seen around configuring",
    "start": "66960",
    "end": "72360"
  },
  {
    "text": "infrastructure securely at scale within large organizations using cloud and policy controllers in",
    "start": "72360",
    "end": "80939"
  },
  {
    "text": "kubernetes to address some of these issues and as I say a huge thanks to Rowan and",
    "start": "80939",
    "end": "87180"
  },
  {
    "text": "Henry very briefly Rowan runs the security team at control plane control",
    "start": "87180",
    "end": "93060"
  },
  {
    "text": "plane is a cloud native security consultancy we are based out of London UK we have offices in North America and",
    "start": "93060",
    "end": "101100"
  },
  {
    "text": "Asia Pacific and mostly do Consulting for regulated Industries we are as",
    "start": "101100",
    "end": "107220"
  },
  {
    "text": "always hiring if you're a security engineer a supply chain specialist an architect or threat modeler please do",
    "start": "107220",
    "end": "114000"
  },
  {
    "text": "come and have a word and the great disembodied Dr Baker",
    "start": "114000",
    "end": "120740"
  },
  {
    "text": "well that hasn't quite worked how I hoped if you wanted to try one more time",
    "start": "127740",
    "end": "133920"
  },
  {
    "text": "um should be coming out of here I've got any luck",
    "start": "133920",
    "end": "140480"
  },
  {
    "text": "perhaps not uh",
    "start": "141480",
    "end": "146480"
  },
  {
    "text": "I think should be oh my God food poisoning a couple of days ago so I've",
    "start": "147000",
    "end": "152940"
  },
  {
    "text": "been uh unable to uh to travel just wanted to introduce the talk before",
    "start": "152940",
    "end": "158400"
  },
  {
    "text": "my uh distinguished role playing colleagues take over today we're looking to show how",
    "start": "158400",
    "end": "164940"
  },
  {
    "text": "kubernetes provisioning infrastructure such as load balances can cause issues for large organizations in regulated",
    "start": "164940",
    "end": "172200"
  },
  {
    "text": "Industries their security architectures are typically uh dependent on",
    "start": "172200",
    "end": "180080"
  },
  {
    "text": "infrastructures code pipelines featuring policy checks so kubernetes provisioning",
    "start": "180080",
    "end": "185160"
  },
  {
    "text": "infrastructure just uh isn't part of the plan uh we'll describe how that kubernetes",
    "start": "185160",
    "end": "190860"
  },
  {
    "text": "provision infrastructure can be secured using uh policy agents at cluster",
    "start": "190860",
    "end": "195900"
  },
  {
    "text": "admission time and then we'll look uh onwards as to how we can start using this patent to secure infrastructure",
    "start": "195900",
    "end": "202260"
  },
  {
    "text": "provision by uh exciting New Generation of uh Cloud infrastructure controllers",
    "start": "202260",
    "end": "208400"
  },
  {
    "text": "such as crossplay then towards the end of the talk we'll",
    "start": "208400",
    "end": "213720"
  },
  {
    "text": "show how we can work towards securing that infrastructure in a manner where we",
    "start": "213720",
    "end": "219000"
  },
  {
    "text": "achieve both um automated compliance against",
    "start": "219000",
    "end": "224180"
  },
  {
    "text": "standards and simultaneous enforcement of uh preventive controls preventing",
    "start": "224180",
    "end": "232220"
  },
  {
    "text": "misconfigured infrastructure from being launched all via a single oscow document that",
    "start": "232220",
    "end": "240180"
  },
  {
    "text": "forms the single source of Truth for for both and illness notwithstanding we hope to",
    "start": "240180",
    "end": "247980"
  },
  {
    "text": "open source the repo of example policies and oscale component definitions for AWS",
    "start": "247980",
    "end": "254819"
  },
  {
    "text": "Services shortly so with that I'll leave it to my uh my colleagues",
    "start": "254819",
    "end": "260639"
  },
  {
    "text": "I hope you enjoy the rest of the talk and the rest of the conference",
    "start": "260639",
    "end": "266180"
  },
  {
    "text": "thank you Ron right there are some demos fortunately they have been um ASCII cinemod for me",
    "start": "266280",
    "end": "273180"
  },
  {
    "text": "so I can't book to them let's rock and roll so",
    "start": "273180",
    "end": "278580"
  },
  {
    "text": "using infrastructure as code policy I'm sorry my slides a little bit booked",
    "start": "278580",
    "end": "283919"
  },
  {
    "text": "with policy gates to ensure infrastructure is securely provisioned should form the backbone of any Cloud",
    "start": "283919",
    "end": "290100"
  },
  {
    "text": "security program we can create infrastructures code templates using terraform at Al",
    "start": "290100",
    "end": "296639"
  },
  {
    "text": "that hard codes secure by default configurations that we can distribute and reuse for",
    "start": "296639",
    "end": "304020"
  },
  {
    "text": "consumers of cloud infrastructure in large organizations and we can back this up by allowing users some degree of",
    "start": "304020",
    "end": "310380"
  },
  {
    "text": "customization adding policy Gates into pipelines using tools such as Sentinel",
    "start": "310380",
    "end": "315960"
  },
  {
    "text": "policy opa check of Etc however this does not",
    "start": "315960",
    "end": "321060"
  },
  {
    "text": "account for infrastructure provisions in an event driven basis by Cloud",
    "start": "321060",
    "end": "327080"
  },
  {
    "text": "infrastructure most organizations have some non-kubernetes based workloads into",
    "start": "327080",
    "end": "332220"
  },
  {
    "text": "Cloud first and it's often months or years before a cloud migration uh and please keep and that is which",
    "start": "332220",
    "end": "339120"
  },
  {
    "text": "then throws a metaphorical hand grenade into the Enterprise security architect's",
    "start": "339120",
    "end": "344340"
  },
  {
    "text": "office most obviously kubernetes Provisions service load balancer types",
    "start": "344340",
    "end": "352440"
  },
  {
    "text": "this happens rapidly and flexibly at a developer's request via the cloud controller apis",
    "start": "352440",
    "end": "360000"
  },
  {
    "text": "however this can bypass infrastructure as code controls um going back to everything to finders",
    "start": "360000",
    "end": "365759"
  },
  {
    "text": "code and get Ops these things just appear in our dashboards rather than being defined and subject to policy",
    "start": "365759",
    "end": "371840"
  },
  {
    "text": "annotations can Define that load balances configuration and if unrestricted can create insecure",
    "start": "371840",
    "end": "378240"
  },
  {
    "text": "infrastructure by adding routes and punching through otherwise theoretically",
    "start": "378240",
    "end": "384840"
  },
  {
    "text": "secure policies and firewalls we can see from this example that the SSL cert is",
    "start": "384840",
    "end": "390180"
  },
  {
    "text": "commented out and the load balancer is internet facing it is easy to footgun or",
    "start": "390180",
    "end": "395460"
  },
  {
    "text": "intentionally bypass policy in this way trying to provision a load balancer via",
    "start": "395460",
    "end": "400740"
  },
  {
    "text": "infrastructure is code like terraform and then integrate it with kubernetes which gives us something that we can",
    "start": "400740",
    "end": "406560"
  },
  {
    "text": "apply policy to is more difficult PODS of node scale with non-static IPS",
    "start": "406560",
    "end": "412560"
  },
  {
    "text": "of course and encoding these targets into the balancing pool of a load balancer is difficult",
    "start": "412560",
    "end": "418919"
  },
  {
    "text": "in fact you can end up using a controller to do this whilst you might end up with something",
    "start": "418919",
    "end": "424440"
  },
  {
    "text": "that's compliant to policy you complicate life for developers and operators",
    "start": "424440",
    "end": "430139"
  },
  {
    "text": "so The Logical way to ensure these types these Services of type load balancer are",
    "start": "430139",
    "end": "436319"
  },
  {
    "text": "secure is to use a policy engine such as caverno or open GateKeeper",
    "start": "436319",
    "end": "443099"
  },
  {
    "text": "we install those as an admission controller and those emission controllers intercept the requests",
    "start": "443099",
    "end": "449280"
  },
  {
    "text": "as the objects are written to the kubernetes API server of course prior to the Persistence of the objects",
    "start": "449280",
    "end": "455940"
  },
  {
    "text": "and so today we'll talk mostly about validating admission controllers that simply send back a positive or negative",
    "start": "455940",
    "end": "462000"
  },
  {
    "text": "response to allow or prevent an object being persisted that persistence then feeds into the",
    "start": "462000",
    "end": "468360"
  },
  {
    "text": "policy into the provisioning engine and then the infrastructure is either permitted to deploy or not based on the",
    "start": "468360",
    "end": "474660"
  },
  {
    "text": "presence of that entity using admission controllers and Cloud",
    "start": "474660",
    "end": "480240"
  },
  {
    "text": "controllers in tandem we have a single enforcement points for application and infrastructure with policy defined as",
    "start": "480240",
    "end": "487319"
  },
  {
    "text": "code for completeness cluster admission is",
    "start": "487319",
    "end": "493380"
  },
  {
    "text": "not the best time to discover that something is misconfigured of course and the reality is that we can't always run",
    "start": "493380",
    "end": "499379"
  },
  {
    "text": "admission controllers to fail closed if there are errors or issues with them an example being running at a mission",
    "start": "499379",
    "end": "505740"
  },
  {
    "text": "controller outside of a cluster experiencing High latency and then essentially bricking a cluster",
    "start": "505740",
    "end": "512760"
  },
  {
    "text": "so we need to integrate checks into the deployment pipelines for these",
    "start": "512760",
    "end": "518339"
  },
  {
    "text": "infrastructures with things like caverno and GateKeeper",
    "start": "518339",
    "end": "524279"
  },
  {
    "text": "tooling exists that allow us to integrate the CLI and the with the CLI and gate or respectively",
    "start": "524279",
    "end": "531120"
  },
  {
    "text": "this is also helpful if we're looking to prove to stakeholders that we have equivalent security gates to",
    "start": "531120",
    "end": "537480"
  },
  {
    "text": "infrastructures infrastructures code pipelines where tooling runs statically on the repository or before requests are",
    "start": "537480",
    "end": "544080"
  },
  {
    "text": "made to the cloud apis so we're looking to gain parity between statically analyze the clarity configuration and",
    "start": "544080",
    "end": "551760"
  },
  {
    "text": "dynamically provisioned ad hoc infrastructure",
    "start": "551760",
    "end": "556820"
  },
  {
    "text": "looking beyond the service of type load balancer Engineers have started to",
    "start": "556860",
    "end": "562200"
  },
  {
    "text": "realize the benefits of using controllers to provision back-end infrastructure for kubernetes hosted",
    "start": "562200",
    "end": "567540"
  },
  {
    "text": "applications such as storage buckets or databases",
    "start": "567540",
    "end": "572640"
  },
  {
    "text": "there are now quite a few Cloud infrastructure controller projects such as AWS ack Google config connects and",
    "start": "572640",
    "end": "580920"
  },
  {
    "text": "cross plane and these broadly follow the operator pattern custom resources within",
    "start": "580920",
    "end": "586800"
  },
  {
    "text": "the cluster paired with reconciling controllers for managing Cloud infrastructure",
    "start": "586800",
    "end": "592500"
  },
  {
    "text": "the benefits of this approach there is potentially less developer complexity",
    "start": "592500",
    "end": "598680"
  },
  {
    "text": "as plus the tenants are consuming a single kubernetes deployment pipeline for applications and related",
    "start": "598680",
    "end": "604200"
  },
  {
    "text": "infrastructure there is a uh you build it you run it concertina of uh of",
    "start": "604200",
    "end": "610320"
  },
  {
    "text": "runtime SRE devopsy style risk and management here this won't work for all organizations",
    "start": "610320",
    "end": "616800"
  },
  {
    "text": "this also enables git Ops for infrastructure configuration not just applications",
    "start": "616800",
    "end": "623180"
  },
  {
    "text": "um so of course this is then Reliant upon a lack of mutation for these",
    "start": "623519",
    "end": "629220"
  },
  {
    "text": "entities coming through the kubernetes API because we get back into the same",
    "start": "629220",
    "end": "634320"
  },
  {
    "text": "situation where if we don't have a an offline representation of the",
    "start": "634320",
    "end": "639959"
  },
  {
    "text": "realized cluster State well then we've got a Reconciliation Gap even if the",
    "start": "639959",
    "end": "645000"
  },
  {
    "text": "operator thinks it's done the right thing because the mutate mutating admission controller has added in those",
    "start": "645000",
    "end": "650880"
  },
  {
    "text": "extra annotations or sidecars all custom resource definitions in this",
    "start": "650880",
    "end": "656519"
  },
  {
    "text": "case the controller pattern provides some drift protection with those caveats",
    "start": "656519",
    "end": "663420"
  },
  {
    "text": "for example you have to rerun the infrastructure as code pipelines to Stamp Out the drifts",
    "start": "663420",
    "end": "669720"
  },
  {
    "text": "and finally we can secure this with policy engines which of course is the",
    "start": "669720",
    "end": "675120"
  },
  {
    "text": "counterbalance to statically analyzing the infrastructure's code configuration that we would do traditionally",
    "start": "675120",
    "end": "683420"
  },
  {
    "text": "so some early projects in this space to find the single controller per cloud service API",
    "start": "683640",
    "end": "690480"
  },
  {
    "text": "but the reality is that creating infrastructure securely is not only about creating one service and setting",
    "start": "690480",
    "end": "696959"
  },
  {
    "text": "specific configuration options uh these are the guard rails removing knobs and",
    "start": "696959",
    "end": "702240"
  },
  {
    "text": "dials in order to stand up a secure by default configuration often we also require other",
    "start": "702240",
    "end": "709920"
  },
  {
    "text": "pieces of infrastructure in place take S3 which we will discuss a little",
    "start": "709920",
    "end": "715019"
  },
  {
    "text": "bit more today not only do we need to create the buckets and configure it",
    "start": "715019",
    "end": "720300"
  },
  {
    "text": "properly but additionally we need to create the IM roles and users for access to those",
    "start": "720300",
    "end": "725700"
  },
  {
    "text": "buckets the KMS keys for back-end encryption etc etc presumably some population of",
    "start": "725700",
    "end": "733200"
  },
  {
    "text": "the bucket as well cross plane as a project looks to address some of this issue for us",
    "start": "733200",
    "end": "741180"
  },
  {
    "text": "it is a cncf incidentally this is a project that control plane is often",
    "start": "741180",
    "end": "746640"
  },
  {
    "text": "mistaken for cross-plane is a cncf incubating project that enables platform",
    "start": "746640",
    "end": "751920"
  },
  {
    "text": "teams to build abstractions the tenants can consume obviously backed by providers to provision the",
    "start": "751920",
    "end": "758399"
  },
  {
    "text": "infrastructure these abstractions are called composite resources",
    "start": "758399",
    "end": "765320"
  },
  {
    "text": "so in our hypothetical organization a platform team defines the composite",
    "start": "765899",
    "end": "771120"
  },
  {
    "text": "resources that developers and operators as human operators can consume",
    "start": "771120",
    "end": "777360"
  },
  {
    "text": "the composite Resources Group managed resources together a managed resource correlates to an",
    "start": "777360",
    "end": "783660"
  },
  {
    "text": "individual Cloud resource for example an S3 bucket or an IM role and providers in turn manage sorry",
    "start": "783660",
    "end": "792480"
  },
  {
    "text": "providers turn manage resources into external resources in the cloud EG S3",
    "start": "792480",
    "end": "798480"
  },
  {
    "text": "buckets so we have our resources grouped into composite resources",
    "start": "798480",
    "end": "805740"
  },
  {
    "text": "and they're then managed by providers which are then deployed this simplifies",
    "start": "805740",
    "end": "812459"
  },
  {
    "text": "the life of cluster tenants application developers system deployers who can",
    "start": "812459",
    "end": "817920"
  },
  {
    "text": "claim a composite resource for their applications for example to cure S3 and IM roles as a single entity and there",
    "start": "817920",
    "end": "825959"
  },
  {
    "text": "are providers for AWS gcp and azure",
    "start": "825959",
    "end": "831320"
  },
  {
    "text": "so why is adoption not more widespread well enablers have only been around for",
    "start": "831500",
    "end": "838200"
  },
  {
    "text": "a few years the controllers themselves are maturing in much",
    "start": "838200",
    "end": "843660"
  },
  {
    "text": "excuse me I'm having trouble with this guy in much the same way as terraform providers take some time to come to",
    "start": "843660",
    "end": "849060"
  },
  {
    "text": "maturity so we see the same um sort of underlying integration Point here",
    "start": "849060",
    "end": "854700"
  },
  {
    "text": "ultimately we are configuring distributed systems and so we expect",
    "start": "854700",
    "end": "860339"
  },
  {
    "text": "things to fail resilience needs to be built into controllers and shaking out bugs just takes a bit of time",
    "start": "860339",
    "end": "867540"
  },
  {
    "text": "we might not be able to migrate everything under a cloud account into cross-plane just yet there is also the",
    "start": "867540",
    "end": "874740"
  },
  {
    "text": "cluster zero problem we need a cluster on which to install cross plane itself",
    "start": "874740",
    "end": "881360"
  },
  {
    "text": "unironically that's provisioned via terraform in the repo that we will open source to support this talk",
    "start": "881360",
    "end": "888180"
  },
  {
    "text": "but the biggest issues that we see for many large organizations they have all infrastructure defined as code with",
    "start": "888180",
    "end": "895440"
  },
  {
    "text": "configurations vetted using policy engines they then build teams around this",
    "start": "895440",
    "end": "901019"
  },
  {
    "text": "pattern that satisfies c-suite and auditors kubernetes provisioning infrastructure",
    "start": "901019",
    "end": "906959"
  },
  {
    "text": "does not fit into the model that we have taken so long to try and educate upwards",
    "start": "906959",
    "end": "912360"
  },
  {
    "text": "to the audit space about so we need to establish trust in a",
    "start": "912360",
    "end": "918060"
  },
  {
    "text": "security model for provisioning cloud infrastructure via kubernetes controllers",
    "start": "918060",
    "end": "923160"
  },
  {
    "text": "and we will look at how we do that we have a proof of concept project that",
    "start": "923160",
    "end": "928920"
  },
  {
    "text": "demonstrates that we can address these controls and be in a good place from a",
    "start": "928920",
    "end": "934320"
  },
  {
    "text": "security standpoint when widespread adoption occurs",
    "start": "934320",
    "end": "939680"
  },
  {
    "text": "the library that we will open open source here to be made public soon I",
    "start": "940079",
    "end": "945839"
  },
  {
    "text": "will do that after the talk contains libraries of validating policy for S3 and RDS provisioned using the",
    "start": "945839",
    "end": "953760"
  },
  {
    "text": "cross plain Community AWS provider these libraries are aligned to nist",
    "start": "953760",
    "end": "959240"
  },
  {
    "text": "853 Rev 5. and instead of generating mountains of policy and yaml that might",
    "start": "959240",
    "end": "965880"
  },
  {
    "text": "ultimately be forgotten we also started to look at how to make those policies enable the documentation of compliance",
    "start": "965880",
    "end": "972600"
  },
  {
    "text": "in an automated manner so let's see",
    "start": "972600",
    "end": "980040"
  },
  {
    "text": "this isn't reticent so there we go ah",
    "start": "980040",
    "end": "985560"
  },
  {
    "text": "that was unsuccessful I might have to pop this in window",
    "start": "985560",
    "end": "991459"
  },
  {
    "text": "okay incoming",
    "start": "994260",
    "end": "997459"
  },
  {
    "text": "can't see the target there we go",
    "start": "1002240",
    "end": "1006040"
  },
  {
    "text": "um can anybody see the bottom of that scroll okay there we go it's still",
    "start": "1031939",
    "end": "1037938"
  },
  {
    "text": "rolling oh there it is",
    "start": "1037939",
    "end": "1041500"
  },
  {
    "text": "okay so what we've been doing is making sure there are no existing cluster policies the cluster has just had",
    "start": "1046100",
    "end": "1052160"
  },
  {
    "text": "caverno and cross plane installed on it the policies we've created for S3 exists",
    "start": "1052160",
    "end": "1057500"
  },
  {
    "text": "in the ls policy from the previous moments um preventing Public Access encryption enforcement HTTP get requests Etc this",
    "start": "1057500",
    "end": "1065600"
  },
  {
    "text": "is what a typical caverno cluster policy looks like in this case we're ensuring the S3",
    "start": "1065600",
    "end": "1071539"
  },
  {
    "text": "bucket object was configured with KMS server-side encryption by default",
    "start": "1071539",
    "end": "1077960"
  },
  {
    "text": "and a validation failed in that case the object was rejected from the cluster preventing the launch of insecure",
    "start": "1077960",
    "end": "1083419"
  },
  {
    "text": "configuration this policy is now applied we can see it's correctly installed",
    "start": "1083419",
    "end": "1089840"
  },
  {
    "text": "this is our minimal S3 bucket configuration",
    "start": "1089840",
    "end": "1095260"
  },
  {
    "text": "you can see from within the provider Fields encryption at rest using KMS was not defined we've tried to apply this to",
    "start": "1097520",
    "end": "1103700"
  },
  {
    "text": "the cluster and that has been rejected on the basis that the S3 encryption was",
    "start": "1103700",
    "end": "1109280"
  },
  {
    "text": "not enabled of course now we'll apply the rest of the policies shown earlier in the cluster",
    "start": "1109280",
    "end": "1116780"
  },
  {
    "text": "so we'll just check the cluster policies are applied there we go there's the deploy and we'll",
    "start": "1116780",
    "end": "1123440"
  },
  {
    "text": "check momentarily",
    "start": "1123440",
    "end": "1126399"
  },
  {
    "text": "okay we've validated that they exist so we've created a bucket called the authorized bucket that satisfies all of",
    "start": "1133820",
    "end": "1140419"
  },
  {
    "text": "these policies this is the first 30 odd lines of that documents",
    "start": "1140419",
    "end": "1145940"
  },
  {
    "text": "but when we apply it on its own to the cluster it will fail because a bucket policy to deny HTTP get requests needs",
    "start": "1145940",
    "end": "1153620"
  },
  {
    "text": "to firstly exist and reference our buckets to satisfy the security requirements as per that",
    "start": "1153620",
    "end": "1163000"
  },
  {
    "text": "next we will look at the required cross-plane bucket policy this is attached to our authorized bucket",
    "start": "1165080",
    "end": "1171440"
  },
  {
    "text": "through the bucket name reffield which is incoming",
    "start": "1171440",
    "end": "1177580"
  },
  {
    "text": "on eight and nine lines eight and nine there as you can see the policy denies",
    "start": "1177580",
    "end": "1182960"
  },
  {
    "text": "all requests that have AWS secure transport set the false on lines 18 19",
    "start": "1182960",
    "end": "1188600"
  },
  {
    "text": "and 24 and 25.",
    "start": "1188600",
    "end": "1193120"
  },
  {
    "text": "so we will now apply these prerequisites and the buckets will deploy successfully",
    "start": "1194360",
    "end": "1200179"
  },
  {
    "text": "to the cluster without being rejected by the security policy so we'd expect the bucket definition",
    "start": "1200179",
    "end": "1207039"
  },
  {
    "text": "policy definition and other prerequisites to be wrapped up into a cross-plane composite resource for",
    "start": "1207039",
    "end": "1213980"
  },
  {
    "text": "tenants to consume we will then try and request the bucket itself",
    "start": "1213980",
    "end": "1221240"
  },
  {
    "text": "it will take a moment for the bucket to show as ready because the S3 server logging is on a",
    "start": "1221240",
    "end": "1228200"
  },
  {
    "text": "best effort basis and it can take some time for the bucket itself to report it's ready",
    "start": "1228200",
    "end": "1234740"
  },
  {
    "text": "and then finally when applying the basic buckets it will be rejected on multiple counts there we go so that is the bucket",
    "start": "1234740",
    "end": "1242000"
  },
  {
    "text": "which we expected but now the basic bucket will be rejected and with a caverno test filed for sure",
    "start": "1242000",
    "end": "1248480"
  },
  {
    "text": "ensure the policies are behaving as expected to be clear we expect these policies to",
    "start": "1248480",
    "end": "1255200"
  },
  {
    "text": "be triggered by the platform teams when they're creating compositions compositions should never contain",
    "start": "1255200",
    "end": "1261860"
  },
  {
    "text": "violations these were a selection of demos if they did they would be self-defeating and useless",
    "start": "1261860",
    "end": "1270640"
  },
  {
    "text": "okay so",
    "start": "1273020",
    "end": "1278059"
  },
  {
    "text": "that's a first view for how this can be achieved so we've just created more yaml",
    "start": "1278059",
    "end": "1284000"
  },
  {
    "text": "to throw at the cluster without fully defining where our controls come from",
    "start": "1284000",
    "end": "1289340"
  },
  {
    "text": "and I appreciate the frustration this brings and how difficult managing yaml policy at scale truly is",
    "start": "1289340",
    "end": "1296179"
  },
  {
    "text": "there are entire talks on that one of our colleagues control plane by the name of Mr Chris Nesbitt Smith has a",
    "start": "1296179",
    "end": "1303440"
  },
  {
    "text": "fantastic talk called versioned policy as code which looks at how to make policy changes across massive government",
    "start": "1303440",
    "end": "1310580"
  },
  {
    "text": "organizations the tldr is ensure people are allowed to test and have warning",
    "start": "1310580",
    "end": "1317179"
  },
  {
    "text": "before enforcement various different ways but one thing we did look at here is how",
    "start": "1317179",
    "end": "1324140"
  },
  {
    "text": "to create traceability between controls on the cluster and compliance requirements which gives meaning to the",
    "start": "1324140",
    "end": "1330620"
  },
  {
    "text": "controls in the library here we get into oscow",
    "start": "1330620",
    "end": "1336919"
  },
  {
    "text": "so using our scale documents as a source of Truth for the enforced policies a",
    "start": "1336919",
    "end": "1342559"
  },
  {
    "text": "huge thanks to Mr Brent Keller who is the author of The tooling that we'll look at in a moment",
    "start": "1342559",
    "end": "1348020"
  },
  {
    "text": "uh we have the open security controls assessment language going on here this is a collaborative project run by nist",
    "start": "1348020",
    "end": "1355159"
  },
  {
    "text": "it is machine readable representations of control catalogs control based lines",
    "start": "1355159",
    "end": "1360919"
  },
  {
    "text": "system security plans and assessment plans and results",
    "start": "1360919",
    "end": "1366020"
  },
  {
    "text": "tldr automated policy verification",
    "start": "1366020",
    "end": "1371440"
  },
  {
    "text": "this enables an ecosystem of tooling for creating manipulating and validating compliance artifacts around that machine",
    "start": "1372020",
    "end": "1379280"
  },
  {
    "text": "readable formats this removes resilience on out-of-date documents spreadsheets screenshots and",
    "start": "1379280",
    "end": "1387080"
  },
  {
    "text": "manual assessments for compliance activities which I'm sure any of us who have gone through an audit are all too",
    "start": "1387080",
    "end": "1393140"
  },
  {
    "text": "painfully familiar with and this leverages the tool called Lula to validate controls in oscow",
    "start": "1393140",
    "end": "1399740"
  },
  {
    "text": "documentation against reality and generate enforcing policy from Oscar",
    "start": "1399740",
    "end": "1406600"
  },
  {
    "text": "so there are three documents that we will dig into here catalogs are collections of controls",
    "start": "1408200",
    "end": "1415520"
  },
  {
    "text": "maintained by an organization or by a standards body so in this case we'll be referencing",
    "start": "1415520",
    "end": "1420980"
  },
  {
    "text": "nist 853 which has been codified into our scale forests at 173 000 lines of",
    "start": "1420980",
    "end": "1427880"
  },
  {
    "text": "yaml profiles baselines of selected controls",
    "start": "1427880",
    "end": "1433520"
  },
  {
    "text": "and so nist has high medium and low bass lines for at least 853 but we can also",
    "start": "1433520",
    "end": "1440120"
  },
  {
    "text": "create profiles for specific components such as an S3 profile that details all",
    "start": "1440120",
    "end": "1445700"
  },
  {
    "text": "of the nist 1800 853 controls applicable to S3",
    "start": "1445700",
    "end": "1453519"
  },
  {
    "text": "finally component definitions are a more detailed description of controls",
    "start": "1454580",
    "end": "1460820"
  },
  {
    "text": "supported in a given implementation referencing a control from a profile",
    "start": "1460820",
    "end": "1468340"
  },
  {
    "text": "so to build Oscar documents for S3 we were lucky enough to have this information available to us the AWS",
    "start": "1468500",
    "end": "1475039"
  },
  {
    "text": "config rule set mapped to the list 853 rev 5 I'm sure he's taking the",
    "start": "1475039",
    "end": "1481460"
  },
  {
    "text": "Mickey out of me now is public shown in the top left table here",
    "start": "1481460",
    "end": "1487340"
  },
  {
    "text": "from this we distill the nist IDS into oscow profile for S3 which is shown on",
    "start": "1487340",
    "end": "1493880"
  },
  {
    "text": "the right and we wrote Governor policy equivalent to intent and spirits of the AWS config",
    "start": "1493880",
    "end": "1501140"
  },
  {
    "text": "rules Cal component document for Lula to Leverage",
    "start": "1501140",
    "end": "1508100"
  },
  {
    "text": "I'll just repeat that last bit some semi butchered it we wrote Governor policy for Lula",
    "start": "1508100",
    "end": "1514400"
  },
  {
    "text": "into Oscar so the documentation here shows how the aforementioned this",
    "start": "1514400",
    "end": "1519919"
  },
  {
    "text": "standard control IDs from the S3 profile are addressed you can see on this slide references to",
    "start": "1519919",
    "end": "1526340"
  },
  {
    "text": "the S3 profile documents the nist control IDs within that profile",
    "start": "1526340",
    "end": "1531740"
  },
  {
    "text": "followed by a description of the control and a caverno policy block",
    "start": "1531740",
    "end": "1537919"
  },
  {
    "text": "this block is an amendment to the Oscar component definition leveraged by Lula and proposed by the",
    "start": "1537919",
    "end": "1545120"
  },
  {
    "text": "lular team and for context oscow is still a format under development designed to stimulate",
    "start": "1545120",
    "end": "1551900"
  },
  {
    "text": "discussion and an ecosystem of tooling so nist are collaborative when taking suggestions from the industry around",
    "start": "1551900",
    "end": "1558260"
  },
  {
    "text": "modifications to Oscar document structures Lula is a tool by the right honorable Mr",
    "start": "1558260",
    "end": "1564919"
  },
  {
    "text": "Brandt Keller and team at defense unicorns the bridge the gap between the expected configuration required for",
    "start": "1564919",
    "end": "1571640"
  },
  {
    "text": "compliance and the actual reality of configuration it takes the component definition as shown previously and",
    "start": "1571640",
    "end": "1578419"
  },
  {
    "text": "leverages the caverno CLI to run generated Governor policies against the cluster or static manifests",
    "start": "1578419",
    "end": "1586400"
  },
  {
    "text": "uh my colleague Henry recently had a PR submitted in this project to simplify sorry to Simply add",
    "start": "1586400",
    "end": "1593480"
  },
  {
    "text": "a generate flag and save those rendered policies to disk so we can then get at them running incuberno and forcing them",
    "start": "1593480",
    "end": "1600799"
  },
  {
    "text": "at admission time",
    "start": "1600799",
    "end": "1603820"
  },
  {
    "text": "okay demo time again I'm going to reset the cluster back",
    "start": "1606919",
    "end": "1612980"
  },
  {
    "text": "to its original states",
    "start": "1612980",
    "end": "1616120"
  },
  {
    "text": "hit the target button there lovely okay so",
    "start": "1620480",
    "end": "1626240"
  },
  {
    "text": "um we have a draft we have a policy here that we've drafted for S3 that is just resetting the cluster back",
    "start": "1626240",
    "end": "1633440"
  },
  {
    "text": "the important lines we're looking for are lines 28 when they turn up again",
    "start": "1633440",
    "end": "1640539"
  },
  {
    "text": "yep line 28 where we reference the nist 853 catalog and then from line 30",
    "start": "1640820",
    "end": "1647600"
  },
  {
    "text": "downwards we can see the list of control IDs from nists which can be satisfied",
    "start": "1647600",
    "end": "1653600"
  },
  {
    "text": "with the correct configuration of S3 and the rest of the file continues like",
    "start": "1653600",
    "end": "1660380"
  },
  {
    "text": "so so what we will have next yes that is",
    "start": "1660380",
    "end": "1668419"
  },
  {
    "text": "further controls so to remind you component definitions show how the control IDs in the profile",
    "start": "1668419",
    "end": "1675799"
  },
  {
    "text": "are interpreted this is a cut down version of the component definition for the demo to",
    "start": "1675799",
    "end": "1681200"
  },
  {
    "text": "reduce time under control implementation field on line 28 29 and 30.",
    "start": "1681200",
    "end": "1688220"
  },
  {
    "text": "we reference the S3 profile shown previously and then the implemented requirements",
    "start": "1688220",
    "end": "1693559"
  },
  {
    "text": "for that profile are listed below each requirement has its own uid line 34",
    "start": "1693559",
    "end": "1701020"
  },
  {
    "text": "the control of these references the control from the nist profile which is line 35 followed by a description field",
    "start": "1701120",
    "end": "1707960"
  },
  {
    "text": "where we place the name corresponding to the AWS config rule we have Rewritten in",
    "start": "1707960",
    "end": "1713539"
  },
  {
    "text": "caverno and the rules block which is a port of proveno policy used by Lula",
    "start": "1713539",
    "end": "1719960"
  },
  {
    "text": "in the component definition we have just I mean just have implemented One",
    "start": "1719960",
    "end": "1726559"
  },
  {
    "text": "requirement and that is the S3 version life cycle policy enablement",
    "start": "1726559",
    "end": "1733000"
  },
  {
    "text": "so moving on we will look at the basic bucket which does not have the the fine that we're looking for the S3 version",
    "start": "1735740",
    "end": "1742700"
  },
  {
    "text": "lifecycle yes it is absent so without policy we",
    "start": "1742700",
    "end": "1749480"
  },
  {
    "text": "can launch this into the cluster and have a vulnerable bucket in our estate that is not what we want we're proving",
    "start": "1749480",
    "end": "1756620"
  },
  {
    "text": "the negative case in order to lock it down bad news for the cluster",
    "start": "1756620",
    "end": "1763299"
  },
  {
    "text": "so we'll now run Lula to assess compliance against requirements in the component definition",
    "start": "1763760",
    "end": "1770059"
  },
  {
    "text": "and see that it fails as expected there is a compliance violation which when you",
    "start": "1770059",
    "end": "1775159"
  },
  {
    "text": "look up the uid and the component definition is the lack of S3 version life cycle policy",
    "start": "1775159",
    "end": "1782500"
  },
  {
    "text": "we should also note that Lula does produce compliant support to disk as well and so Lula could be leveraged in a",
    "start": "1782840",
    "end": "1788299"
  },
  {
    "text": "number of ways to assess compliance in an automated manner",
    "start": "1788299",
    "end": "1793760"
  },
  {
    "text": "so let's proceed to remove the vulnerable bucket",
    "start": "1793760",
    "end": "1799419"
  },
  {
    "text": "there we go we can also then run Lula in a generate mode this time against the full S3",
    "start": "1805039",
    "end": "1812419"
  },
  {
    "text": "component definition because it is quicker this will create the governor policies",
    "start": "1812419",
    "end": "1818539"
  },
  {
    "text": "from the S3 component definition thus we have the S3 component definition becoming the source of Truth for",
    "start": "1818539",
    "end": "1825559"
  },
  {
    "text": "compliance and ultimately enforcement",
    "start": "1825559",
    "end": "1830419"
  },
  {
    "text": "okay these policies are currently named by their euids and their duplicates as",
    "start": "1836840",
    "end": "1842000"
  },
  {
    "text": "rules such as version life cycle policy are mapped to many nist control IDs we",
    "start": "1842000",
    "end": "1848240"
  },
  {
    "text": "don't want to push these into a cluster just yet so we will have a look at the component",
    "start": "1848240",
    "end": "1853700"
  },
  {
    "text": "definition which we have looked at before we've written a script that uses the",
    "start": "1853700",
    "end": "1859279"
  },
  {
    "text": "uids to match the policy to match the policy files with implemented requirements in the S3",
    "start": "1859279",
    "end": "1865880"
  },
  {
    "text": "component definition and renamed the file and caverno policy name according",
    "start": "1865880",
    "end": "1871399"
  },
  {
    "text": "to the first word in the description for the corresponding implemented requirements",
    "start": "1871399",
    "end": "1876620"
  },
  {
    "text": "which is our AWS config rule online 37. yes there we go",
    "start": "1876620",
    "end": "1883720"
  },
  {
    "text": "we will run that script and observe the policies that are created by it",
    "start": "1883820",
    "end": "1889820"
  },
  {
    "text": "as if by Magic there we go",
    "start": "1889820",
    "end": "1896600"
  },
  {
    "text": "and these are the polishes for the cluster let's install them as we did previously",
    "start": "1896600",
    "end": "1902000"
  },
  {
    "text": "we would expect them to fail with the basic buckets once these are",
    "start": "1902000",
    "end": "1907880"
  },
  {
    "text": "deployed",
    "start": "1907880",
    "end": "1910299"
  },
  {
    "text": "Zoom forward slightly so the policies are created we're now deploying the basic bucket which we do not expect to",
    "start": "1923419",
    "end": "1929299"
  },
  {
    "text": "be permitted because we've applied our policy that we've gone through and generated",
    "start": "1929299",
    "end": "1934760"
  },
  {
    "text": "and finally when we deploy the authorized buckets it is permitted to",
    "start": "1934760",
    "end": "1940460"
  },
  {
    "text": "the cluster because it is compliant with all of our policy",
    "start": "1940460",
    "end": "1946460"
  },
  {
    "text": "magical fabulous and wonderful we can subsequently validate compliance using Lula with the added benefit of",
    "start": "1946460",
    "end": "1953360"
  },
  {
    "text": "preventing a vulnerable bucket being launched in the first place",
    "start": "1953360",
    "end": "1958840"
  },
  {
    "text": "okay doki so obviously at this point in the demo",
    "start": "1964700",
    "end": "1972559"
  },
  {
    "text": "we've just scripted and glued a few things together with the Majesty of Bash",
    "start": "1972559",
    "end": "1978260"
  },
  {
    "text": "what we're looking for is the final step for a policy um to be generated outside",
    "start": "1978260",
    "end": "1983539"
  },
  {
    "text": "by something slightly better tested of course we'd like to understand whether that's something we can build into the tool if that is found useful we welcome",
    "start": "1983539",
    "end": "1992299"
  },
  {
    "text": "any feedback on the next steps this is something that we have some utility uh with from clients at the moment",
    "start": "1992299",
    "end": "2000279"
  },
  {
    "text": "uh it would be logical to cover all of the AWS config rules in nist 853 Rev 5.",
    "start": "2000279",
    "end": "2008740"
  },
  {
    "text": "we'll also be looking at gcp or other controllers such as config connector",
    "start": "2008740",
    "end": "2014320"
  },
  {
    "text": "and in conclusion policy engines for event-driven workflows and",
    "start": "2014320",
    "end": "2020140"
  },
  {
    "text": "infrastructure as code are a must from day one we need to build them into security",
    "start": "2020140",
    "end": "2025480"
  },
  {
    "text": "architectures for kubernetes and Beyond any of our Cloud infrastructure deployment techniques they enable not",
    "start": "2025480",
    "end": "2032440"
  },
  {
    "text": "only the initial case the load balancer service but can also be used more widely",
    "start": "2032440",
    "end": "2038080"
  },
  {
    "text": "across a large organization to enable self-service infrastructure provisioned by infrastructure controllers there are",
    "start": "2038080",
    "end": "2045399"
  },
  {
    "text": "a lot of developments in that space that could prove exciting in the next months",
    "start": "2045399",
    "end": "2050500"
  },
  {
    "text": "and years we have some policies enforcing compliance to Nest 853 for AWS S3 and RDS that you can use",
    "start": "2050500",
    "end": "2059679"
  },
  {
    "text": "with cross-plane provisioned infrastructure under the collie repo that I will open up shortly",
    "start": "2059679",
    "end": "2065919"
  },
  {
    "text": "and through oscarl Lula and caverno and Cloud controllers we're starting to get",
    "start": "2065919",
    "end": "2071440"
  },
  {
    "text": "to a place where we can tell in an automated way sorry where you can in an automated way",
    "start": "2071440",
    "end": "2078280"
  },
  {
    "text": "tell if audio infrastructure and kubernetes applications are compliant with policy standards while",
    "start": "2078280",
    "end": "2084878"
  },
  {
    "text": "simultaneously enforcing those standards from a single source of Truth thank you very much to the authors of",
    "start": "2084879",
    "end": "2092020"
  },
  {
    "text": "this talk I hope I did them Justice and thank you for your attention",
    "start": "2092020",
    "end": "2097440"
  },
  {
    "text": "[Applause] uh would anyone like to ask questions I",
    "start": "2097500",
    "end": "2104260"
  },
  {
    "text": "may delegate them to somebody else",
    "start": "2104260",
    "end": "2108180"
  },
  {
    "text": "uh do we know if anyone has implemented anything like this with anything other",
    "start": "2114520",
    "end": "2120700"
  },
  {
    "text": "Oscar with anything other my first delegation Mr Heller",
    "start": "2120700",
    "end": "2126838"
  },
  {
    "text": "I wouldn't say this",
    "start": "2128380",
    "end": "2131400"
  },
  {
    "text": "it's like a real runtime environment um but definitely from the perspective",
    "start": "2133599",
    "end": "2138880"
  },
  {
    "text": "of like establishing those control catalogs um those are available for a variety of",
    "start": "2138880",
    "end": "2144520"
  },
  {
    "text": "different standards and then from there you know I think we've seen a couple different",
    "start": "2144520",
    "end": "2150460"
  },
  {
    "text": "entities that are starting to dive in and kind of own PCI for instance has been explored",
    "start": "2150460",
    "end": "2157180"
  },
  {
    "text": "um pretty pretty recently as well as other kind of oscow related tooling such as",
    "start": "2157180",
    "end": "2163960"
  },
  {
    "text": "compliance Trestle kind of exploring these same spaces thank you very much",
    "start": "2163960",
    "end": "2170140"
  },
  {
    "text": "is there another hand somewhere hello",
    "start": "2170140",
    "end": "2174299"
  },
  {
    "text": "are also not",
    "start": "2199060",
    "end": "2201960"
  },
  {
    "text": "some mathematics so if I want to say I can cover it in all of my companions",
    "start": "2204339",
    "end": "2212519"
  },
  {
    "text": "can I see all of the",
    "start": "2219099",
    "end": "2222599"
  },
  {
    "text": "foreign",
    "start": "2229420",
    "end": "2231660"
  },
  {
    "text": "so is the question is it possible to see a macro view of all policy across the cluster",
    "start": "2236380",
    "end": "2243240"
  },
  {
    "text": "like from this perspective I'd say no um maybe there are tools out there maybe there are different ways of",
    "start": "2244599",
    "end": "2249640"
  },
  {
    "text": "accomplishing this that can do the job and maybe the answer is yes in those cases Lula from this perspective is very",
    "start": "2249640",
    "end": "2256359"
  },
  {
    "text": "highly focused on like kind of a inheritance model of like this is my infrastructure or this is my application",
    "start": "2256359",
    "end": "2262960"
  },
  {
    "text": "here are the controls that it satisfies or that you can inherit but then from",
    "start": "2262960",
    "end": "2268660"
  },
  {
    "text": "that perspective right it's very focused in nature so that you might still utilize like a GRC tool governance",
    "start": "2268660",
    "end": "2275500"
  },
  {
    "text": "risk compliance to provide you with that you know high level abstraction of Lula",
    "start": "2275500",
    "end": "2281079"
  },
  {
    "text": "might be the the runtime component that's looking at very specific composable modules that's then you know",
    "start": "2281079",
    "end": "2287859"
  },
  {
    "text": "producing compliance reports and then exporting those out to a GRC tool that is defining relationships defining like",
    "start": "2287859",
    "end": "2295780"
  },
  {
    "text": "how to look at the high level picture of all of your environment or you know provide filtering into different aspects",
    "start": "2295780",
    "end": "2303040"
  },
  {
    "text": "that might you know you might want to focus in on and try and find what's what's currently validated and compliant",
    "start": "2303040",
    "end": "2309760"
  },
  {
    "text": "versus what is not so it's one tool in a you know possible ecosystem that you",
    "start": "2309760",
    "end": "2316960"
  },
  {
    "text": "know could be developed around oscow and system security plans all the rest of the oscow models that are available",
    "start": "2316960",
    "end": "2325140"
  },
  {
    "text": "thanks again uh we might have time for one more question if anybody would like to post something to Brent hello",
    "start": "2326140",
    "end": "2333760"
  },
  {
    "text": "uh so the question perhaps is um when different standards have similar",
    "start": "2348640",
    "end": "2353980"
  },
  {
    "text": "requirements for enforcement is there a way of deduplicating them",
    "start": "2353980",
    "end": "2359099"
  },
  {
    "text": "I'd say largely the answer is no um right now it's going to be kind of based upon how are you crafting the",
    "start": "2360099",
    "end": "2366460"
  },
  {
    "text": "inputs that you're providing to like a tool such as Lula um and they're trying to develop like if",
    "start": "2366460",
    "end": "2374320"
  },
  {
    "text": "there is a you know duplication across those how are you performing that and",
    "start": "2374320",
    "end": "2379839"
  },
  {
    "text": "another thing that we kind of want to look at here in the very short term is you know having this evolve from not",
    "start": "2379839",
    "end": "2385119"
  },
  {
    "text": "only CLI driven but also like something that is maybe more event driven in your",
    "start": "2385119",
    "end": "2390160"
  },
  {
    "text": "environment that can be able to perform this validation at a kind of a lower",
    "start": "2390160",
    "end": "2396160"
  },
  {
    "text": "layer so that you know if only this one piece has changed then maybe we can go",
    "start": "2396160",
    "end": "2401200"
  },
  {
    "text": "and find you know not only one identify where there are duplicates but then it",
    "start": "2401200",
    "end": "2406900"
  },
  {
    "text": "with that be able to you know prevent the need to rerun validation against the",
    "start": "2406900",
    "end": "2412119"
  },
  {
    "text": "whole environment over again and hey only this application in this namespace has changed here are the compliance",
    "start": "2412119",
    "end": "2418480"
  },
  {
    "text": "information for it and let's go and validate that right huge thanks to my co-presenter Mr",
    "start": "2418480",
    "end": "2426040"
  },
  {
    "text": "Frank Heller thank you to everyone else have a wonderful day",
    "start": "2426040",
    "end": "2431460"
  }
]