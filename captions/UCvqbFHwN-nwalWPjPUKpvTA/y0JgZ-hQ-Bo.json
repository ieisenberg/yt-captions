[
  {
    "text": "good morning um feels great to see um a",
    "start": "80",
    "end": "4000"
  },
  {
    "text": "lot of you here in this talk uh where we",
    "start": "4000",
    "end": "6640"
  },
  {
    "text": "talk about how do you extend KRM beyond",
    "start": "6640",
    "end": "9280"
  },
  {
    "text": "Kubernetes workloads and reach to a",
    "start": "9280",
    "end": "11920"
  },
  {
    "text": "state like",
    "start": "11920",
    "end": "13639"
  },
  {
    "text": "KRM++ um",
    "start": "13639",
    "end": "17599"
  },
  {
    "text": "so so I'm MJ i'm one of the maintainers",
    "start": "18439",
    "end": "22080"
  },
  {
    "text": "at KCP i work for Casti we basically do",
    "start": "22080",
    "end": "25920"
  },
  {
    "text": "funky things with Kubernetes",
    "start": "25920",
    "end": "29199"
  },
  {
    "text": "i am Navarun i do some Kubernetes",
    "start": "29199",
    "end": "32200"
  },
  {
    "text": "maintenance and I also contribute to KCP",
    "start": "32200",
    "end": "34800"
  },
  {
    "text": "on the side and you can find me on these",
    "start": "34800",
    "end": "37960"
  },
  {
    "text": "socials so let's get started with the",
    "start": "37960",
    "end": "41200"
  },
  {
    "text": "talk so we're going to see three things",
    "start": "41200",
    "end": "43760"
  },
  {
    "text": "in this talk in part one we're going to",
    "start": "43760",
    "end": "45680"
  },
  {
    "text": "see um what is scarm if you are not",
    "start": "45680",
    "end": "49440"
  },
  {
    "text": "really familiar with it or um don't know",
    "start": "49440",
    "end": "52640"
  },
  {
    "text": "the gotchas or nitty-g gritties of it",
    "start": "52640",
    "end": "55440"
  },
  {
    "text": "and we will come to know like why it got",
    "start": "55440",
    "end": "57760"
  },
  {
    "text": "such success then we will explore how",
    "start": "57760",
    "end": "60879"
  },
  {
    "text": "does KCP add to it and how uh the KCP",
    "start": "60879",
    "end": "65360"
  },
  {
    "text": "project is pushing for the next",
    "start": "65360",
    "end": "67680"
  },
  {
    "text": "evolution of KRM and later on uh we will",
    "start": "67680",
    "end": "71680"
  },
  {
    "text": "try to show you a demo of how do you",
    "start": "71680",
    "end": "74640"
  },
  {
    "text": "create custom APIs without using CDs but",
    "start": "74640",
    "end": "77920"
  },
  {
    "text": "still the Kubernetes API machinery",
    "start": "77920",
    "end": "80159"
  },
  {
    "text": "through",
    "start": "80159",
    "end": "81159"
  },
  {
    "text": "KCP so let's get into a problem like why",
    "start": "81159",
    "end": "84560"
  },
  {
    "text": "are we here and why are APIs so hard to",
    "start": "84560",
    "end": "87680"
  },
  {
    "text": "do so imagine you are a tech company",
    "start": "87680",
    "end": "90400"
  },
  {
    "text": "running a hybrid cloud setup and you",
    "start": "90400",
    "end": "93840"
  },
  {
    "text": "want to create infra resources like",
    "start": "93840",
    "end": "96960"
  },
  {
    "text": "compute or some networking stuff or some",
    "start": "96960",
    "end": "99200"
  },
  {
    "text": "storage things so you'd be interacting",
    "start": "99200",
    "end": "101600"
  },
  {
    "text": "with a lot of different cloud providers",
    "start": "101600",
    "end": "103840"
  },
  {
    "text": "if you are on multiple clouds the",
    "start": "103840",
    "end": "107759"
  },
  {
    "text": "problem that comes is consistency across",
    "start": "107759",
    "end": "111640"
  },
  {
    "text": "providers every provider has their own",
    "start": "111640",
    "end": "114720"
  },
  {
    "text": "different APIs",
    "start": "114720",
    "end": "116840"
  },
  {
    "text": "interoperability between them and then",
    "start": "116840",
    "end": "119520"
  },
  {
    "text": "the whole ecosystem how do you build",
    "start": "119520",
    "end": "122600"
  },
  {
    "text": "things when you try to integrate all of",
    "start": "122600",
    "end": "125560"
  },
  {
    "text": "it it surely becomes a little",
    "start": "125560",
    "end": "128840"
  },
  {
    "text": "overwhelming and at that point you might",
    "start": "128840",
    "end": "132239"
  },
  {
    "text": "ask yourself a lot of questions what are",
    "start": "132239",
    "end": "133840"
  },
  {
    "text": "we even doing and often why we do that",
    "start": "133840",
    "end": "139520"
  },
  {
    "text": "is we really like reinventing things we",
    "start": "139520",
    "end": "142800"
  },
  {
    "text": "like to build our own new standards",
    "start": "142800",
    "end": "146640"
  },
  {
    "text": "but then should we as a tech company who",
    "start": "146640",
    "end": "150239"
  },
  {
    "text": "knows what their business goals are what",
    "start": "150239",
    "end": "152160"
  },
  {
    "text": "their business metrics are you should",
    "start": "152160",
    "end": "154959"
  },
  {
    "text": "ideally do what you know the best you",
    "start": "154959",
    "end": "158560"
  },
  {
    "text": "know your area of business you know",
    "start": "158560",
    "end": "160239"
  },
  {
    "text": "where is your value proposition and you",
    "start": "160239",
    "end": "162800"
  },
  {
    "text": "should start to stop inventing outside",
    "start": "162800",
    "end": "166800"
  },
  {
    "text": "those areas and you need to start seeing",
    "start": "166800",
    "end": "170959"
  },
  {
    "text": "something which is more like a standard",
    "start": "170959",
    "end": "173120"
  },
  {
    "text": "and used by a lot of people",
    "start": "173120",
    "end": "176400"
  },
  {
    "text": "so we do really have an answer that we",
    "start": "176400",
    "end": "180080"
  },
  {
    "text": "should do not try to reinvent if there",
    "start": "180080",
    "end": "183120"
  },
  {
    "text": "are existing patterns that you can use",
    "start": "183120",
    "end": "185519"
  },
  {
    "text": "and there comes the Kubernetes resource",
    "start": "185519",
    "end": "188120"
  },
  {
    "text": "model you all have been using it through",
    "start": "188120",
    "end": "191360"
  },
  {
    "text": "the Kubernetes API it's basically the",
    "start": "191360",
    "end": "193280"
  },
  {
    "text": "API surface of Kubernetes and how things",
    "start": "193280",
    "end": "195360"
  },
  {
    "text": "are done what are the key properties of",
    "start": "195360",
    "end": "197680"
  },
  {
    "text": "those first declariveness so you don't",
    "start": "197680",
    "end": "201200"
  },
  {
    "text": "ask the Kubernetes API to do things step",
    "start": "201200",
    "end": "203599"
  },
  {
    "text": "by step you don't ask it to hey can you",
    "start": "203599",
    "end": "206159"
  },
  {
    "text": "start creating a pod of this and this",
    "start": "206159",
    "end": "208239"
  },
  {
    "text": "basically say one by one what you",
    "start": "208239",
    "end": "210239"
  },
  {
    "text": "essentially do is you tell it directly",
    "start": "210239",
    "end": "212640"
  },
  {
    "text": "hey I want to create a pod with this",
    "start": "212640",
    "end": "214959"
  },
  {
    "text": "image with this resources and here is",
    "start": "214959",
    "end": "218400"
  },
  {
    "text": "where it should be located it's",
    "start": "218400",
    "end": "220080"
  },
  {
    "text": "basically the declariveness of",
    "start": "220080",
    "end": "223480"
  },
  {
    "text": "KRM and when you start creating those",
    "start": "223480",
    "end": "226959"
  },
  {
    "text": "resources using KRM you have a structure",
    "start": "226959",
    "end": "230000"
  },
  {
    "text": "which is pretty consistent across the",
    "start": "230000",
    "end": "232959"
  },
  {
    "text": "whole surface and it has been consistent",
    "start": "232959",
    "end": "235680"
  },
  {
    "text": "across um probably decade now so what do",
    "start": "235680",
    "end": "240640"
  },
  {
    "text": "you see when you create a Kubernetes",
    "start": "240640",
    "end": "242239"
  },
  {
    "text": "resource you have an API version you",
    "start": "242239",
    "end": "244159"
  },
  {
    "text": "have a kind what kind of API it is then",
    "start": "244159",
    "end": "246799"
  },
  {
    "text": "you have certain properties of the",
    "start": "246799",
    "end": "248239"
  },
  {
    "text": "resource like its name some metadata",
    "start": "248239",
    "end": "250640"
  },
  {
    "text": "associated like annotations labels then",
    "start": "250640",
    "end": "253439"
  },
  {
    "text": "you have two key properties what is the",
    "start": "253439",
    "end": "257199"
  },
  {
    "text": "state of the resource that you want when",
    "start": "257199",
    "end": "259359"
  },
  {
    "text": "I explained about the pod that's your",
    "start": "259359",
    "end": "261600"
  },
  {
    "text": "desired state and then you expect the",
    "start": "261600",
    "end": "264800"
  },
  {
    "text": "system to return you back like stamp",
    "start": "264800",
    "end": "268080"
  },
  {
    "text": "your resource with something like a",
    "start": "268080",
    "end": "269600"
  },
  {
    "text": "status now all of this is known to us",
    "start": "269600",
    "end": "272080"
  },
  {
    "text": "right it's sounds very trivial now and",
    "start": "272080",
    "end": "275280"
  },
  {
    "text": "when you try to create any object in the",
    "start": "275280",
    "end": "278759"
  },
  {
    "text": "Kubernetes control plane you essentially",
    "start": "278759",
    "end": "282320"
  },
  {
    "text": "um have this specific format no matter",
    "start": "282320",
    "end": "284560"
  },
  {
    "text": "what you are dealing with um other than",
    "start": "284560",
    "end": "287360"
  },
  {
    "text": "probably two outliers config map and",
    "start": "287360",
    "end": "289600"
  },
  {
    "text": "secrets but uh maybe we can skip those",
    "start": "289600",
    "end": "293440"
  },
  {
    "text": "when talking about this and it just",
    "start": "293440",
    "end": "297040"
  },
  {
    "text": "works right nobody questions the",
    "start": "297040",
    "end": "299520"
  },
  {
    "text": "structure anymore everyone is quite okay",
    "start": "299520",
    "end": "301600"
  },
  {
    "text": "with",
    "start": "301600",
    "end": "303240"
  },
  {
    "text": "it and the next important part is when",
    "start": "303240",
    "end": "306479"
  },
  {
    "text": "you tell the system that this is the",
    "start": "306479",
    "end": "308400"
  },
  {
    "text": "state I",
    "start": "308400",
    "end": "310440"
  },
  {
    "text": "desire there are some processes running",
    "start": "310440",
    "end": "313479"
  },
  {
    "text": "asynchronously reading your objects",
    "start": "313479",
    "end": "315680"
  },
  {
    "text": "reading your resources and then trying",
    "start": "315680",
    "end": "318080"
  },
  {
    "text": "to reach that desired state if it can",
    "start": "318080",
    "end": "321600"
  },
  {
    "text": "reach that it will stamp back with some",
    "start": "321600",
    "end": "323919"
  },
  {
    "text": "good successful statuses",
    "start": "323919",
    "end": "327039"
  },
  {
    "text": "or if it is not um able to reach that",
    "start": "327039",
    "end": "330720"
  },
  {
    "text": "state due to some error condition or",
    "start": "330720",
    "end": "332560"
  },
  {
    "text": "some unfulfilled um states or anything",
    "start": "332560",
    "end": "336240"
  },
  {
    "text": "it will report back the same status back",
    "start": "336240",
    "end": "338479"
  },
  {
    "text": "to um the resource itself so these three",
    "start": "338479",
    "end": "342479"
  },
  {
    "text": "things make the Kubernetes resource",
    "start": "342479",
    "end": "345280"
  },
  {
    "text": "model really powerful for your use cases",
    "start": "345280",
    "end": "348639"
  },
  {
    "text": "but do you think it's that easy like do",
    "start": "348639",
    "end": "351680"
  },
  {
    "text": "can you just start writing some go types",
    "start": "351680",
    "end": "354080"
  },
  {
    "text": "use kubernetes code generator and then",
    "start": "354080",
    "end": "356560"
  },
  {
    "text": "create crds",
    "start": "356560",
    "end": "359560"
  },
  {
    "text": "um does sound easy but then you can do",
    "start": "359560",
    "end": "362560"
  },
  {
    "text": "really u weird things with it so there",
    "start": "362560",
    "end": "365759"
  },
  {
    "text": "are some pitfalls there are some gotchas",
    "start": "365759",
    "end": "367360"
  },
  {
    "text": "that you have to know when writing uh km",
    "start": "367360",
    "end": "371800"
  },
  {
    "text": "APIs some quotes from Albert Einstein",
    "start": "371800",
    "end": "375800"
  },
  {
    "text": "um so let's come to the things that you",
    "start": "375800",
    "end": "378400"
  },
  {
    "text": "should avoid when writing KM APIs first",
    "start": "378400",
    "end": "383120"
  },
  {
    "text": "mixing the business logic into the CRDS",
    "start": "383120",
    "end": "385680"
  },
  {
    "text": "design so we talked about spec and",
    "start": "385680",
    "end": "387840"
  },
  {
    "text": "status right two very segregated",
    "start": "387840",
    "end": "390880"
  },
  {
    "text": "u parts of the object sometimes what",
    "start": "390880",
    "end": "393840"
  },
  {
    "text": "happens is we might try to put too much",
    "start": "393840",
    "end": "397600"
  },
  {
    "text": "logic into spec that's not something",
    "start": "397600",
    "end": "399440"
  },
  {
    "text": "that we should do we should just put",
    "start": "399440",
    "end": "402240"
  },
  {
    "text": "things which mention how the desired",
    "start": "402240",
    "end": "405280"
  },
  {
    "text": "state of the system should look like in",
    "start": "405280",
    "end": "407039"
  },
  {
    "text": "a spec and not too much of procedural",
    "start": "407039",
    "end": "410520"
  },
  {
    "text": "knowledge and not clearly separating the",
    "start": "410520",
    "end": "413759"
  },
  {
    "text": "speck and status for example here in the",
    "start": "413759",
    "end": "416080"
  },
  {
    "text": "case of service right when you uh when",
    "start": "416080",
    "end": "418400"
  },
  {
    "text": "you ask the Kubernetes API to create a",
    "start": "418400",
    "end": "420880"
  },
  {
    "text": "service um do you really give cluster",
    "start": "420880",
    "end": "423840"
  },
  {
    "text": "API cluster IP always not really you say",
    "start": "423840",
    "end": "427599"
  },
  {
    "text": "like what port I need to expose and it",
    "start": "427599",
    "end": "430479"
  },
  {
    "text": "comes and stamps cluster IP in the spec",
    "start": "430479",
    "end": "434639"
  },
  {
    "text": "whereas should it should it have been in",
    "start": "434639",
    "end": "436720"
  },
  {
    "text": "the status i mean this is all debatable",
    "start": "436720",
    "end": "439639"
  },
  {
    "text": "but ideally your desired state should be",
    "start": "439639",
    "end": "443039"
  },
  {
    "text": "like obviously you can specify your own",
    "start": "443039",
    "end": "445520"
  },
  {
    "text": "cluster IP but should the field have",
    "start": "445520",
    "end": "447440"
  },
  {
    "text": "been called like desired cluster IP and",
    "start": "447440",
    "end": "449120"
  },
  {
    "text": "then you have the actual cluster IP in u",
    "start": "449120",
    "end": "451919"
  },
  {
    "text": "the status so things like this you need",
    "start": "451919",
    "end": "454479"
  },
  {
    "text": "to think about when you design your um",
    "start": "454479",
    "end": "457759"
  },
  {
    "text": "KRM API and then if you ignore",
    "start": "457759",
    "end": "461680"
  },
  {
    "text": "established API conventions you again",
    "start": "461680",
    "end": "464400"
  },
  {
    "text": "run into pitfalls for example here when",
    "start": "464400",
    "end": "467120"
  },
  {
    "text": "you define a CRD you tell what kind it",
    "start": "467120",
    "end": "471680"
  },
  {
    "text": "should be named when you do keep codle",
    "start": "471680",
    "end": "474000"
  },
  {
    "text": "get so and so um for example here if you",
    "start": "474000",
    "end": "477520"
  },
  {
    "text": "see DB connection it should ideally be",
    "start": "477520",
    "end": "480160"
  },
  {
    "text": "ideally have been named capital D",
    "start": "480160",
    "end": "481919"
  },
  {
    "text": "capital B capital C and then the rest of",
    "start": "481919",
    "end": "483840"
  },
  {
    "text": "it but if you see it it is not that",
    "start": "483840",
    "end": "487039"
  },
  {
    "text": "clear how do I read and then when",
    "start": "487039",
    "end": "491120"
  },
  {
    "text": "specifying the plural it should ideally",
    "start": "491120",
    "end": "493039"
  },
  {
    "text": "be a plural name and not just a singular",
    "start": "493039",
    "end": "495680"
  },
  {
    "text": "again which creates more confusion um",
    "start": "495680",
    "end": "499120"
  },
  {
    "text": "pretty um interesting example is if you",
    "start": "499120",
    "end": "501919"
  },
  {
    "text": "have an um API called sheep what do you",
    "start": "501919",
    "end": "506160"
  },
  {
    "text": "define the plural as um should sheeps",
    "start": "506160",
    "end": "509840"
  },
  {
    "text": "should be flock again",
    "start": "509840",
    "end": "513959"
  },
  {
    "text": "questions um and then when I talk about",
    "start": "513959",
    "end": "517680"
  },
  {
    "text": "uh creating like writing a go type like",
    "start": "517680",
    "end": "520560"
  },
  {
    "text": "gostruct putting fields you should",
    "start": "520560",
    "end": "523680"
  },
  {
    "text": "really leverage the things that KRM is",
    "start": "523680",
    "end": "526320"
  },
  {
    "text": "giving you like open API schema",
    "start": "526320",
    "end": "528560"
  },
  {
    "text": "validation then you have when you",
    "start": "528560",
    "end": "531480"
  },
  {
    "text": "properly tag your fields correctly the",
    "start": "531480",
    "end": "534800"
  },
  {
    "text": "open API uh schema will have enough",
    "start": "534800",
    "end": "537200"
  },
  {
    "text": "information for your uh API clients to",
    "start": "537200",
    "end": "540880"
  },
  {
    "text": "actually derive information from the",
    "start": "540880",
    "end": "542399"
  },
  {
    "text": "object itself things like if you want to",
    "start": "542399",
    "end": "544800"
  },
  {
    "text": "do some pattern validation or do some",
    "start": "544800",
    "end": "547279"
  },
  {
    "text": "sort of simple validation or maybe even",
    "start": "547279",
    "end": "549360"
  },
  {
    "text": "let's take it a little bit ahead with u",
    "start": "549360",
    "end": "551760"
  },
  {
    "text": "cell expression validations you can",
    "start": "551760",
    "end": "554080"
  },
  {
    "text": "essentially run uh small expressions as",
    "start": "554080",
    "end": "557519"
  },
  {
    "text": "part of the Kubernetes API servers",
    "start": "557519",
    "end": "559200"
  },
  {
    "text": "admission process to validate your",
    "start": "559200",
    "end": "563360"
  },
  {
    "text": "uh custom resources so things like this",
    "start": "563360",
    "end": "566320"
  },
  {
    "text": "really make it powerful but you need to",
    "start": "566320",
    "end": "568959"
  },
  {
    "text": "use those if you don't use those then",
    "start": "568959",
    "end": "571440"
  },
  {
    "text": "you again run into",
    "start": "571440",
    "end": "574560"
  },
  {
    "text": "problems um and then again like classic",
    "start": "574920",
    "end": "578680"
  },
  {
    "text": "example like if your if your request was",
    "start": "578680",
    "end": "582240"
  },
  {
    "text": "actually not fulfilled but you are",
    "start": "582240",
    "end": "584399"
  },
  {
    "text": "returning a 200 okay with the payload",
    "start": "584399",
    "end": "586320"
  },
  {
    "text": "being status code 400 and status being",
    "start": "586320",
    "end": "590320"
  },
  {
    "text": "bad request that's not how you should",
    "start": "590320",
    "end": "592800"
  },
  {
    "text": "write your APIs so this kind this kind",
    "start": "592800",
    "end": "595120"
  },
  {
    "text": "of pitfalls are again to be avoided",
    "start": "595120",
    "end": "599279"
  },
  {
    "text": "and then let's talk about evolution of",
    "start": "599279",
    "end": "601120"
  },
  {
    "text": "APIs let's say you wrote your API once",
    "start": "601120",
    "end": "604640"
  },
  {
    "text": "but you keep on adding fields there",
    "start": "604640",
    "end": "606800"
  },
  {
    "text": "needs to be a proper upgrade strategy",
    "start": "606800",
    "end": "608560"
  },
  {
    "text": "there needs to be proper versioning",
    "start": "608560",
    "end": "610720"
  },
  {
    "text": "converting between two versions those",
    "start": "610720",
    "end": "612800"
  },
  {
    "text": "kind of problems you run into right so",
    "start": "612800",
    "end": "615519"
  },
  {
    "text": "in in the KCV project we uh ran into a",
    "start": "615519",
    "end": "619560"
  },
  {
    "text": "similar situation where we have this",
    "start": "619560",
    "end": "623040"
  },
  {
    "text": "workspace API but it has been around for",
    "start": "623040",
    "end": "625519"
  },
  {
    "text": "like since the inception of the project",
    "start": "625519",
    "end": "627360"
  },
  {
    "text": "but we have been adding new things to it",
    "start": "627360",
    "end": "629839"
  },
  {
    "text": "um recently we made a small breaking",
    "start": "629839",
    "end": "632240"
  },
  {
    "text": "change not for consumers but anyone who",
    "start": "632240",
    "end": "634880"
  },
  {
    "text": "consumes the um workspace API through um",
    "start": "634880",
    "end": "639440"
  },
  {
    "text": "like the go",
    "start": "639440",
    "end": "641240"
  },
  {
    "text": "library that started a that started a",
    "start": "641240",
    "end": "644399"
  },
  {
    "text": "discussion like hey I have the next",
    "start": "644399",
    "end": "646560"
  },
  {
    "text": "version v1 alpha 2 but then is that the",
    "start": "646560",
    "end": "649760"
  },
  {
    "text": "correct",
    "start": "649760",
    "end": "650920"
  },
  {
    "text": "one how what are the differences between",
    "start": "650920",
    "end": "653360"
  },
  {
    "text": "v1 alpha 1 and v1 alpha 2 a simple",
    "start": "653360",
    "end": "657240"
  },
  {
    "text": "conversation started a thread of 309",
    "start": "657240",
    "end": "660079"
  },
  {
    "text": "replies and I'm pretty sure by the end",
    "start": "660079",
    "end": "662160"
  },
  {
    "text": "of the conference we would reach like",
    "start": "662160",
    "end": "663680"
  },
  {
    "text": "500 replies on the same thread so it's",
    "start": "663680",
    "end": "666959"
  },
  {
    "text": "very essential to actually discuss",
    "start": "666959",
    "end": "669240"
  },
  {
    "text": "things when you upgrade your APIs or",
    "start": "669240",
    "end": "672959"
  },
  {
    "text": "create new versions on how and you you",
    "start": "672959",
    "end": "675440"
  },
  {
    "text": "need to really think how your consumers",
    "start": "675440",
    "end": "677519"
  },
  {
    "text": "are going to consume the API",
    "start": "677519",
    "end": "681200"
  },
  {
    "text": "um sometimes we really don't know how to",
    "start": "681200",
    "end": "683920"
  },
  {
    "text": "do it but then we have to discuss uh",
    "start": "683920",
    "end": "687279"
  },
  {
    "text": "with everyone all the stakeholders and",
    "start": "687279",
    "end": "689680"
  },
  {
    "text": "as you saw here like things escalated",
    "start": "689680",
    "end": "691680"
  },
  {
    "text": "really quickly I think um once the",
    "start": "691680",
    "end": "694480"
  },
  {
    "text": "thread was created by probably a couple",
    "start": "694480",
    "end": "697200"
  },
  {
    "text": "of hours there were 100 replies in there",
    "start": "697200",
    "end": "699200"
  },
  {
    "text": "like discussing how this evolution",
    "start": "699200",
    "end": "700880"
  },
  {
    "text": "should work out and how how do we",
    "start": "700880",
    "end": "703360"
  },
  {
    "text": "actually do the conversion",
    "start": "703360",
    "end": "705880"
  },
  {
    "text": "strategy then again another pitfall is",
    "start": "705880",
    "end": "708560"
  },
  {
    "text": "like we have been talking about APIs all",
    "start": "708560",
    "end": "710720"
  },
  {
    "text": "throughout right but what about the",
    "start": "710720",
    "end": "712640"
  },
  {
    "text": "reconciliation rule so Kubernetes",
    "start": "712640",
    "end": "715680"
  },
  {
    "text": "provides you some tools and resources to",
    "start": "715680",
    "end": "719120"
  },
  {
    "text": "write your own reconcilers",
    "start": "719120",
    "end": "721480"
  },
  {
    "text": "um if you if you wrote reconilers like",
    "start": "721480",
    "end": "724560"
  },
  {
    "text": "let's say six years back like if you see",
    "start": "724560",
    "end": "727040"
  },
  {
    "text": "some uh Kubernetes controllers probably",
    "start": "727040",
    "end": "729920"
  },
  {
    "text": "all of them are migrated now really old",
    "start": "729920",
    "end": "732079"
  },
  {
    "text": "controllers they're written in like work",
    "start": "732079",
    "end": "734399"
  },
  {
    "text": "q and by manually creating worker",
    "start": "734399",
    "end": "737639"
  },
  {
    "text": "processes managing",
    "start": "737639",
    "end": "740200"
  },
  {
    "text": "them that pattern is now slowly evolving",
    "start": "740200",
    "end": "744600"
  },
  {
    "text": "um if you really need to use controller",
    "start": "744600",
    "end": "747760"
  },
  {
    "text": "runtime um so here you see some good",
    "start": "747760",
    "end": "751120"
  },
  {
    "text": "patterns right when you are writing your",
    "start": "751120",
    "end": "754720"
  },
  {
    "text": "reconciliation loop there might be a",
    "start": "754720",
    "end": "756720"
  },
  {
    "text": "certain set of actions that you want um",
    "start": "756720",
    "end": "759200"
  },
  {
    "text": "the controller to do now what you can do",
    "start": "759200",
    "end": "761920"
  },
  {
    "text": "is you can atomically divide each of",
    "start": "761920",
    "end": "763920"
  },
  {
    "text": "these operations into its own reconciler",
    "start": "763920",
    "end": "766399"
  },
  {
    "text": "now what it does is each of these",
    "start": "766399",
    "end": "768800"
  },
  {
    "text": "reconcilers can be easy to write easy to",
    "start": "768800",
    "end": "772079"
  },
  {
    "text": "test easy to mock and the the complete",
    "start": "772079",
    "end": "775440"
  },
  {
    "text": "reconciler would be very easy to read by",
    "start": "775440",
    "end": "779720"
  },
  {
    "text": "anyone and when you aggregate statuses",
    "start": "779720",
    "end": "782720"
  },
  {
    "text": "across it it's very easy for you to also",
    "start": "782720",
    "end": "785120"
  },
  {
    "text": "like atomically think um okay there was",
    "start": "785120",
    "end": "788320"
  },
  {
    "text": "an error here now what kind of error it",
    "start": "788320",
    "end": "790399"
  },
  {
    "text": "was was it something which is",
    "start": "790399",
    "end": "792720"
  },
  {
    "text": "recoverable was it something like a",
    "start": "792720",
    "end": "794399"
  },
  {
    "text": "state of the system which is transient",
    "start": "794399",
    "end": "795920"
  },
  {
    "text": "but if I recue it down the line maybe 5",
    "start": "795920",
    "end": "798399"
  },
  {
    "text": "minutes later I would be able to",
    "start": "798399",
    "end": "799839"
  },
  {
    "text": "successfully process the object so you",
    "start": "799839",
    "end": "804079"
  },
  {
    "text": "need to think about all of this you need",
    "start": "804079",
    "end": "805880"
  },
  {
    "text": "to",
    "start": "805880",
    "end": "807959"
  },
  {
    "text": "aggressively think about how do you",
    "start": "807959",
    "end": "810519"
  },
  {
    "text": "reconcile um do you result in a proper",
    "start": "810519",
    "end": "813279"
  },
  {
    "text": "error state do you result in a transient",
    "start": "813279",
    "end": "814959"
  },
  {
    "text": "error state or do you result in a uh",
    "start": "814959",
    "end": "818079"
  },
  {
    "text": "good state as part of that reconcile",
    "start": "818079",
    "end": "820880"
  },
  {
    "text": "iteration um here are some examples like",
    "start": "820880",
    "end": "824079"
  },
  {
    "text": "what can we do in um each of these",
    "start": "824079",
    "end": "828279"
  },
  {
    "text": "cases now there are a lot of other",
    "start": "828279",
    "end": "830959"
  },
  {
    "text": "patterns that you can learn from the",
    "start": "830959",
    "end": "833680"
  },
  {
    "text": "Kubernetes code base or a lot of other",
    "start": "833680",
    "end": "835920"
  },
  {
    "text": "projects in the CNCF ecosystem who are",
    "start": "835920",
    "end": "838320"
  },
  {
    "text": "doing KRM APIs um a very neat example",
    "start": "838320",
    "end": "841760"
  },
  {
    "text": "here is like how do you do the committer",
    "start": "841760",
    "end": "843600"
  },
  {
    "text": "pattern um I would just tell you it in",
    "start": "843600",
    "end": "846399"
  },
  {
    "text": "like 30 seconds the committed pattern",
    "start": "846399",
    "end": "849240"
  },
  {
    "text": "essentially disallows you to change the",
    "start": "849240",
    "end": "853199"
  },
  {
    "text": "spec and the status in the same",
    "start": "853199",
    "end": "854800"
  },
  {
    "text": "reconcile loop there are obviously some",
    "start": "854800",
    "end": "856560"
  },
  {
    "text": "hacks around it but those are not",
    "start": "856560",
    "end": "858160"
  },
  {
    "text": "suggested to be followed ideally in the",
    "start": "858160",
    "end": "860399"
  },
  {
    "text": "same reconcile loop you should only",
    "start": "860399",
    "end": "862240"
  },
  {
    "text": "change one and a controller should",
    "start": "862240",
    "end": "864320"
  },
  {
    "text": "ideally only change the status and not",
    "start": "864320",
    "end": "866240"
  },
  {
    "text": "the spec um that's how things should",
    "start": "866240",
    "end": "869440"
  },
  {
    "text": "work and there are other patterns that",
    "start": "869440",
    "end": "871680"
  },
  {
    "text": "you can learn from controller runtime",
    "start": "871680",
    "end": "873120"
  },
  {
    "text": "cube builder they all help you to write",
    "start": "873120",
    "end": "875680"
  },
  {
    "text": "um your reconcilers",
    "start": "875680",
    "end": "879079"
  },
  {
    "text": "effectively but how is CRM better than",
    "start": "879079",
    "end": "883199"
  },
  {
    "text": "what you have in your company now you",
    "start": "883199",
    "end": "885600"
  },
  {
    "text": "have a custom solution that you wrote um",
    "start": "885600",
    "end": "889360"
  },
  {
    "text": "that works for you but you might also",
    "start": "889360",
    "end": "893440"
  },
  {
    "text": "think like hey Navarun is talking about",
    "start": "893440",
    "end": "895199"
  },
  {
    "text": "creating a 16th standard and I already",
    "start": "895199",
    "end": "898079"
  },
  {
    "text": "have the 15th one why should I go to the",
    "start": "898079",
    "end": "900399"
  },
  {
    "text": "next one actually it's not the 16",
    "start": "900399",
    "end": "902160"
  },
  {
    "text": "standard it's the same thing that you",
    "start": "902160",
    "end": "904720"
  },
  {
    "text": "have been using all",
    "start": "904720",
    "end": "907079"
  },
  {
    "text": "throughout as consumers of like",
    "start": "907079",
    "end": "909920"
  },
  {
    "text": "Kubernetes or other CNCF projects you",
    "start": "909920",
    "end": "912399"
  },
  {
    "text": "might be using one or more KRM style",
    "start": "912399",
    "end": "915040"
  },
  {
    "text": "APIs already in your tech stack and",
    "start": "915040",
    "end": "918639"
  },
  {
    "text": "that's why it's nothing new that you're",
    "start": "918639",
    "end": "920639"
  },
  {
    "text": "trying to do it's just a it's just",
    "start": "920639",
    "end": "923839"
  },
  {
    "text": "sticking to the um the general flow that",
    "start": "923839",
    "end": "928880"
  },
  {
    "text": "everyone is using so why not just stick",
    "start": "928880",
    "end": "933040"
  },
  {
    "text": "with something that you are already",
    "start": "933040",
    "end": "934920"
  },
  {
    "text": "using so now MJ will take over so let's",
    "start": "934920",
    "end": "938480"
  },
  {
    "text": "switch the gears a bit so now KCP and",
    "start": "938480",
    "end": "940959"
  },
  {
    "text": "how it makes it better so let's say you",
    "start": "940959",
    "end": "944000"
  },
  {
    "text": "sold you want to use KRM you want to",
    "start": "944000",
    "end": "945839"
  },
  {
    "text": "build your internal cloud or external",
    "start": "945839",
    "end": "948160"
  },
  {
    "text": "cloud for your organization and you kind",
    "start": "948160",
    "end": "951360"
  },
  {
    "text": "of usually end up with something like",
    "start": "951360",
    "end": "952800"
  },
  {
    "text": "this this is usual microser architecture",
    "start": "952800",
    "end": "954959"
  },
  {
    "text": "which you would have in your platform or",
    "start": "954959",
    "end": "957839"
  },
  {
    "text": "cloud you want kubernetes kubernetes",
    "start": "957839",
    "end": "960000"
  },
  {
    "text": "microser calls virtual machine microser",
    "start": "960000",
    "end": "962880"
  },
  {
    "text": "virtual machine calls compute microser",
    "start": "962880",
    "end": "965199"
  },
  {
    "text": "that need storage networking and you",
    "start": "965199",
    "end": "966959"
  },
  {
    "text": "have this mesh of interconnectivity like",
    "start": "966959",
    "end": "969600"
  },
  {
    "text": "this is nothing new like everybody who",
    "start": "969600",
    "end": "971759"
  },
  {
    "text": "works for hypervisors knows you run this",
    "start": "971759",
    "end": "974240"
  },
  {
    "text": "already everybody who runs for a bigger",
    "start": "974240",
    "end": "976320"
  },
  {
    "text": "corporate has this so this is look like",
    "start": "976320",
    "end": "979600"
  },
  {
    "text": "this so okay we still sold to KRM let's",
    "start": "979600",
    "end": "982800"
  },
  {
    "text": "use Kubernetes model to implement",
    "start": "982800",
    "end": "984959"
  },
  {
    "text": "something like this so the flow as I",
    "start": "984959",
    "end": "987279"
  },
  {
    "text": "mentioned would be like request flow and",
    "start": "987279",
    "end": "990560"
  },
  {
    "text": "a pattern so that looks good it's like",
    "start": "990560",
    "end": "994160"
  },
  {
    "text": "we've been doing this for a decade now",
    "start": "994160",
    "end": "996880"
  },
  {
    "text": "but usually what you build is this now",
    "start": "996880",
    "end": "999360"
  },
  {
    "text": "you have a second region now you want to",
    "start": "999360",
    "end": "1001040"
  },
  {
    "text": "serve your US customers European",
    "start": "1001040",
    "end": "1002880"
  },
  {
    "text": "customers maybe some customer wants",
    "start": "1002880",
    "end": "1005279"
  },
  {
    "text": "isolated environment",
    "start": "1005279",
    "end": "1007639"
  },
  {
    "text": "and at some point you reached this point",
    "start": "1007639",
    "end": "1010320"
  },
  {
    "text": "where now you started with one",
    "start": "1010320",
    "end": "1011839"
  },
  {
    "text": "Kubernetes cluster many operators",
    "start": "1011839",
    "end": "1014160"
  },
  {
    "text": "everybody's reconciling everything",
    "start": "1014160",
    "end": "1016800"
  },
  {
    "text": "Kubernetes team popped up and said like",
    "start": "1016800",
    "end": "1018560"
  },
  {
    "text": "we are too big now let's do our own",
    "start": "1018560",
    "end": "1021519"
  },
  {
    "text": "Kubernetes cluster now you're going to",
    "start": "1021519",
    "end": "1023120"
  },
  {
    "text": "talk",
    "start": "1023120",
    "end": "1023959"
  },
  {
    "text": "crossclusters and now you've been",
    "start": "1023959",
    "end": "1026160"
  },
  {
    "text": "creating like CRS and CRDs across",
    "start": "1026160",
    "end": "1028640"
  },
  {
    "text": "clusters threeilers and there's many",
    "start": "1028640",
    "end": "1031120"
  },
  {
    "text": "projects out there who's doing that",
    "start": "1031120",
    "end": "1032678"
  },
  {
    "text": "stuff and is it bad no it's like we've",
    "start": "1032679",
    "end": "1036079"
  },
  {
    "text": "been doing this for a decade Now",
    "start": "1036079",
    "end": "1038360"
  },
  {
    "text": "totally the same flow would be here like",
    "start": "1038360",
    "end": "1041918"
  },
  {
    "text": "if the compute team needs a storage most",
    "start": "1041919",
    "end": "1045360"
  },
  {
    "text": "case storage cluster contains some",
    "start": "1045360",
    "end": "1047360"
  },
  {
    "text": "naming pattern how you separate tenants",
    "start": "1047360",
    "end": "1050080"
  },
  {
    "text": "by name spaces where you create your",
    "start": "1050080",
    "end": "1052960"
  },
  {
    "text": "requests like storage requests compute",
    "start": "1052960",
    "end": "1055280"
  },
  {
    "text": "requests it get implemented so you get",
    "start": "1055280",
    "end": "1058039"
  },
  {
    "text": "this reconciliation mesh between",
    "start": "1058039",
    "end": "1061280"
  },
  {
    "text": "multiple",
    "start": "1061280",
    "end": "1062840"
  },
  {
    "text": "clusters and once things start to move",
    "start": "1062840",
    "end": "1067039"
  },
  {
    "text": "like storage team updates an API maybe",
    "start": "1067039",
    "end": "1069120"
  },
  {
    "text": "we add new field did some breaking",
    "start": "1069120",
    "end": "1071160"
  },
  {
    "text": "change things break down so okay we",
    "start": "1071160",
    "end": "1076240"
  },
  {
    "text": "still want to use KM we still want to",
    "start": "1076240",
    "end": "1077919"
  },
  {
    "text": "use Kubernetes but like how would you do",
    "start": "1077919",
    "end": "1080440"
  },
  {
    "text": "that",
    "start": "1080440",
    "end": "1081960"
  },
  {
    "text": "so what we have here is we have many",
    "start": "1081960",
    "end": "1084799"
  },
  {
    "text": "clusters problem like why KRM well KRM",
    "start": "1084799",
    "end": "1088000"
  },
  {
    "text": "itself as API standard is amazing it's",
    "start": "1088000",
    "end": "1091039"
  },
  {
    "text": "is great everybody used this for the",
    "start": "1091039",
    "end": "1092640"
  },
  {
    "text": "decade it's vessel its ability to",
    "start": "1092640",
    "end": "1095280"
  },
  {
    "text": "fragmentate tenency isolation and have",
    "start": "1095280",
    "end": "1098160"
  },
  {
    "text": "an API management behind it it's not so",
    "start": "1098160",
    "end": "1101280"
  },
  {
    "text": "we have an API standard we don't have a",
    "start": "1101280",
    "end": "1103840"
  },
  {
    "text": "way maybe we do but we don't have a way",
    "start": "1103840",
    "end": "1106000"
  },
  {
    "text": "to manage it alternatives is Bclusters",
    "start": "1106000",
    "end": "1110320"
  },
  {
    "text": "like you say okay we don't want to have",
    "start": "1110320",
    "end": "1112240"
  },
  {
    "text": "many clusters let's run pod per tenant",
    "start": "1112240",
    "end": "1115919"
  },
  {
    "text": "but that doesn't solve the problems it",
    "start": "1115919",
    "end": "1117600"
  },
  {
    "text": "reduces the costs but you still have",
    "start": "1117600",
    "end": "1119919"
  },
  {
    "text": "many clusters problems API management is",
    "start": "1119919",
    "end": "1122080"
  },
  {
    "text": "not still addressed we have a generic",
    "start": "1122080",
    "end": "1124559"
  },
  {
    "text": "control plane which is a kiddo project",
    "start": "1124559",
    "end": "1126880"
  },
  {
    "text": "under kcp which does very similar as",
    "start": "1126880",
    "end": "1130240"
  },
  {
    "text": "vclusters but again same challenges",
    "start": "1130240",
    "end": "1133160"
  },
  {
    "text": "stays you just save some few bucks and",
    "start": "1133160",
    "end": "1135919"
  },
  {
    "text": "maybe operational",
    "start": "1135919",
    "end": "1137320"
  },
  {
    "text": "costs so what's the elephant in a",
    "start": "1137320",
    "end": "1140960"
  },
  {
    "text": "like we need strong multi-tenency for",
    "start": "1140960",
    "end": "1142720"
  },
  {
    "text": "CFDs for the APIs we need API management",
    "start": "1142720",
    "end": "1145799"
  },
  {
    "text": "interconnectivity for those things like",
    "start": "1145799",
    "end": "1148559"
  },
  {
    "text": "all the",
    "start": "1148559",
    "end": "1150200"
  },
  {
    "text": "API things which we don't at this point",
    "start": "1150200",
    "end": "1153679"
  },
  {
    "text": "so KCP Kubernetes control Kubernetes",
    "start": "1153679",
    "end": "1156960"
  },
  {
    "text": "like control planes so if the Kubernetes",
    "start": "1156960",
    "end": "1159280"
  },
  {
    "text": "cluster looks like this where your",
    "start": "1159280",
    "end": "1161280"
  },
  {
    "text": "tenants is name spaces you have airback",
    "start": "1161280",
    "end": "1163280"
  },
  {
    "text": "rules some magic",
    "start": "1163280",
    "end": "1165080"
  },
  {
    "text": "controllers in a KCP land this would be",
    "start": "1165080",
    "end": "1168160"
  },
  {
    "text": "like This KCP is just yet another",
    "start": "1168160",
    "end": "1171840"
  },
  {
    "text": "application running on your Kubernetes",
    "start": "1171840",
    "end": "1173679"
  },
  {
    "text": "cluster it's not a replacement to your",
    "start": "1173679",
    "end": "1176240"
  },
  {
    "text": "Kubernetes clusters it's just a flavor",
    "start": "1176240",
    "end": "1179600"
  },
  {
    "text": "of Kubernetes API server which allows",
    "start": "1179600",
    "end": "1182240"
  },
  {
    "text": "you to do stronger multi-tenency and API",
    "start": "1182240",
    "end": "1185960"
  },
  {
    "text": "management so previous picture which we",
    "start": "1185960",
    "end": "1189039"
  },
  {
    "text": "had",
    "start": "1189039",
    "end": "1189799"
  },
  {
    "text": "before so how the same architecture",
    "start": "1189799",
    "end": "1192240"
  },
  {
    "text": "would look like in a KCP land is every",
    "start": "1192240",
    "end": "1195120"
  },
  {
    "text": "team gets its own box where we can",
    "start": "1195120",
    "end": "1197039"
  },
  {
    "text": "manage the APIs we can do own things but",
    "start": "1197039",
    "end": "1200640"
  },
  {
    "text": "we still operate a single control plane",
    "start": "1200640",
    "end": "1202880"
  },
  {
    "text": "so now we kind of trying to eliminate",
    "start": "1202880",
    "end": "1204720"
  },
  {
    "text": "the many clusters problem and we create",
    "start": "1204720",
    "end": "1208080"
  },
  {
    "text": "this we did that in a KCP community and",
    "start": "1208080",
    "end": "1210559"
  },
  {
    "text": "it's like okay so what's next so we",
    "start": "1210559",
    "end": "1212880"
  },
  {
    "text": "added this ability",
    "start": "1212880",
    "end": "1214840"
  },
  {
    "text": "to life cycle APIs too so we got",
    "start": "1214840",
    "end": "1218799"
  },
  {
    "text": "stronger multi-tenency we split those",
    "start": "1218799",
    "end": "1221039"
  },
  {
    "text": "box aparts we still have in that same",
    "start": "1221039",
    "end": "1223520"
  },
  {
    "text": "box application less",
    "start": "1223520",
    "end": "1226039"
  },
  {
    "text": "fragmentations and we've working still",
    "start": "1226039",
    "end": "1229840"
  },
  {
    "text": "working it's very much work in progress",
    "start": "1229840",
    "end": "1231760"
  },
  {
    "text": "about how to support multiple versions",
    "start": "1231760",
    "end": "1234000"
  },
  {
    "text": "of APIs and how we do that and this is",
    "start": "1234000",
    "end": "1237120"
  },
  {
    "text": "very important thing is like in a normal",
    "start": "1237120",
    "end": "1239520"
  },
  {
    "text": "Kubernetes cluster when you install a",
    "start": "1239520",
    "end": "1242120"
  },
  {
    "text": "CRD you install a CRD API extension",
    "start": "1242120",
    "end": "1245280"
  },
  {
    "text": "server accepts it installs it say it's",
    "start": "1245280",
    "end": "1247280"
  },
  {
    "text": "like done and the CRS live in the same",
    "start": "1247280",
    "end": "1250159"
  },
  {
    "text": "cluster so it's a one to",
    "start": "1250159",
    "end": "1252039"
  },
  {
    "text": "relationship what we did we split this",
    "start": "1252039",
    "end": "1254880"
  },
  {
    "text": "logic we say API provider owns",
    "start": "1254880",
    "end": "1258280"
  },
  {
    "text": "CRDs instantiations of those CRs on the",
    "start": "1258280",
    "end": "1263039"
  },
  {
    "text": "consumer side and we put a boundary in",
    "start": "1263039",
    "end": "1265600"
  },
  {
    "text": "the middle we call it API bindings and",
    "start": "1265600",
    "end": "1267600"
  },
  {
    "text": "API exports what this means now you can",
    "start": "1267600",
    "end": "1270960"
  },
  {
    "text": "have a one to many relationship where",
    "start": "1270960",
    "end": "1273039"
  },
  {
    "text": "Kubernetes cluster is very much onetoone",
    "start": "1273039",
    "end": "1276320"
  },
  {
    "text": "you have a API provider API resource",
    "start": "1276320",
    "end": "1279520"
  },
  {
    "text": "schema which represents a CRDS and you",
    "start": "1279520",
    "end": "1281919"
  },
  {
    "text": "have a consumers which represent",
    "start": "1281919",
    "end": "1284280"
  },
  {
    "text": "CRS on top of",
    "start": "1284280",
    "end": "1286440"
  },
  {
    "text": "that tenency we isolate them in a",
    "start": "1286440",
    "end": "1289840"
  },
  {
    "text": "virtual API servers where now your team",
    "start": "1289840",
    "end": "1292960"
  },
  {
    "text": "C can become a consumer of team DB API",
    "start": "1292960",
    "end": "1298720"
  },
  {
    "text": "posgress SQL database and I'm rushing a",
    "start": "1298720",
    "end": "1302000"
  },
  {
    "text": "bit because I want to get to the demo to",
    "start": "1302000",
    "end": "1303679"
  },
  {
    "text": "want to show that in action",
    "start": "1303679",
    "end": "1307039"
  },
  {
    "text": "so some of you might seen this already",
    "start": "1307080",
    "end": "1309760"
  },
  {
    "text": "this is the tree representation of KCP",
    "start": "1309760",
    "end": "1313520"
  },
  {
    "text": "workspace tree this means this is how",
    "start": "1313520",
    "end": "1315840"
  },
  {
    "text": "you organize your virtual API servers",
    "start": "1315840",
    "end": "1319600"
  },
  {
    "text": "you would say your application tower",
    "start": "1319600",
    "end": "1322720"
  },
  {
    "text": "which has application platform X manage",
    "start": "1322720",
    "end": "1325600"
  },
  {
    "text": "Kubernetes your compute tower which has",
    "start": "1325600",
    "end": "1328320"
  },
  {
    "text": "virtual machines networking and things",
    "start": "1328320",
    "end": "1330159"
  },
  {
    "text": "like that so it's a logical",
    "start": "1330159",
    "end": "1333280"
  },
  {
    "text": "organizational structure represented in",
    "start": "1333280",
    "end": "1335280"
  },
  {
    "text": "a in a tree structure and that would be",
    "start": "1335280",
    "end": "1338320"
  },
  {
    "text": "basically what's what you built so you",
    "start": "1338320",
    "end": "1341520"
  },
  {
    "text": "have different",
    "start": "1341520",
    "end": "1343559"
  },
  {
    "text": "teams interacting with single control",
    "start": "1343559",
    "end": "1346240"
  },
  {
    "text": "plane calling to each other you have",
    "start": "1346240",
    "end": "1348320"
  },
  {
    "text": "this medium to do all these things",
    "start": "1348320",
    "end": "1352320"
  },
  {
    "text": "so and that's not a new thing like if",
    "start": "1352320",
    "end": "1355440"
  },
  {
    "text": "you look this and it's like oh this is",
    "start": "1355440",
    "end": "1357440"
  },
  {
    "text": "very much overwhelming like why I should",
    "start": "1357440",
    "end": "1359919"
  },
  {
    "text": "do that like you doing this daily I bet",
    "start": "1359919",
    "end": "1363200"
  },
  {
    "text": "every one of you like this is a free API",
    "start": "1363200",
    "end": "1365760"
  },
  {
    "text": "from Google cloud like clusters API a",
    "start": "1365760",
    "end": "1369039"
  },
  {
    "text": "SQL admin API for creating managed",
    "start": "1369039",
    "end": "1371280"
  },
  {
    "text": "databases and a compute to create VMs",
    "start": "1371280",
    "end": "1374320"
  },
  {
    "text": "like it's it's literally represents the",
    "start": "1374320",
    "end": "1376880"
  },
  {
    "text": "picture here so while we have",
    "start": "1376880",
    "end": "1379960"
  },
  {
    "text": "this we use it daily we might not see it",
    "start": "1379960",
    "end": "1383200"
  },
  {
    "text": "mentally but the control pattern and how",
    "start": "1383200",
    "end": "1386000"
  },
  {
    "text": "we do is out there when you I bet when",
    "start": "1386000",
    "end": "1390159"
  },
  {
    "text": "you create a Google manage compute",
    "start": "1390159",
    "end": "1392080"
  },
  {
    "text": "engine it talks to the compute instance",
    "start": "1392080",
    "end": "1394400"
  },
  {
    "text": "to get VMs it talks to database to get",
    "start": "1394400",
    "end": "1398720"
  },
  {
    "text": "some etc flavor stuff and it constructs",
    "start": "1398720",
    "end": "1401520"
  },
  {
    "text": "a managed service hence how it works so",
    "start": "1401520",
    "end": "1406159"
  },
  {
    "text": "what is KCP began to replay it it's a",
    "start": "1406159",
    "end": "1409840"
  },
  {
    "text": "single platform to manage multiple",
    "start": "1409840",
    "end": "1412400"
  },
  {
    "text": "Kubernetes resources APIs and",
    "start": "1412400",
    "end": "1415559"
  },
  {
    "text": "tenants by shifting API surface out of",
    "start": "1415559",
    "end": "1418960"
  },
  {
    "text": "Kubernetes cluster like all your compute",
    "start": "1418960",
    "end": "1422799"
  },
  {
    "text": "all your controllers and everything",
    "start": "1422799",
    "end": "1424880"
  },
  {
    "text": "still runs in your cube clusters they",
    "start": "1424880",
    "end": "1427200"
  },
  {
    "text": "don't go away they just run a workload",
    "start": "1427200",
    "end": "1429440"
  },
  {
    "text": "like any other workload but what we do",
    "start": "1429440",
    "end": "1431840"
  },
  {
    "text": "we externalize the APIs they shift a bit",
    "start": "1431840",
    "end": "1436480"
  },
  {
    "text": "left or right depends on your",
    "start": "1436480",
    "end": "1438679"
  },
  {
    "text": "perspective and this is how we enable to",
    "start": "1438679",
    "end": "1442240"
  },
  {
    "text": "build platforms basically so now",
    "start": "1442240",
    "end": "1445760"
  },
  {
    "text": "database as a service example so this",
    "start": "1445760",
    "end": "1449039"
  },
  {
    "text": "example was done yesterday in a workshop",
    "start": "1449039",
    "end": "1451520"
  },
  {
    "text": "with had about GCP so if you if you want",
    "start": "1451520",
    "end": "1455039"
  },
  {
    "text": "to replicate it just go to the this",
    "start": "1455039",
    "end": "1457360"
  },
  {
    "text": "repository there is a very much",
    "start": "1457360",
    "end": "1459400"
  },
  {
    "text": "well-driven instruction how to do",
    "start": "1459400",
    "end": "1462120"
  },
  {
    "text": "that mr robert sitting in second wrote",
    "start": "1462120",
    "end": "1465520"
  },
  {
    "text": "the most of the writing so kudos to him",
    "start": "1465520",
    "end": "1468640"
  },
  {
    "text": "so let's try so demo god so I have I",
    "start": "1468640",
    "end": "1474640"
  },
  {
    "text": "have two tenants",
    "start": "1474640",
    "end": "1477080"
  },
  {
    "text": "here so two tenants basically two",
    "start": "1477080",
    "end": "1479919"
  },
  {
    "text": "logical clusters you will see they have",
    "start": "1479919",
    "end": "1481760"
  },
  {
    "text": "a different URLs is it enough should I",
    "start": "1481760",
    "end": "1484799"
  },
  {
    "text": "make it",
    "start": "1484799",
    "end": "1487000"
  },
  {
    "text": "bigger i make it a little bigger yep",
    "start": "1487000",
    "end": "1491039"
  },
  {
    "text": "let's see how it goes so so my tenant",
    "start": "1491039",
    "end": "1494039"
  },
  {
    "text": "one is a consumer of database as a",
    "start": "1494039",
    "end": "1496880"
  },
  {
    "text": "service so if I do get clusters that",
    "start": "1496880",
    "end": "1500159"
  },
  {
    "text": "represent the database I have a database",
    "start": "1500159",
    "end": "1503559"
  },
  {
    "text": "cluster which if I get out which has",
    "start": "1503559",
    "end": "1506799"
  },
  {
    "text": "very overwhelming spec which kind of",
    "start": "1506799",
    "end": "1510799"
  },
  {
    "text": "should be need",
    "start": "1510799",
    "end": "1512279"
  },
  {
    "text": "cleaning if I find the type I can see",
    "start": "1512279",
    "end": "1514960"
  },
  {
    "text": "that that's a posgress database i have a",
    "start": "1514960",
    "end": "1517679"
  },
  {
    "text": "tenant two if I do get",
    "start": "1517679",
    "end": "1522399"
  },
  {
    "text": "clusters it's same cluster name same",
    "start": "1524039",
    "end": "1528400"
  },
  {
    "text": "object type and how this object type now",
    "start": "1528400",
    "end": "1531520"
  },
  {
    "text": "is appeared in this cluster it has this",
    "start": "1531520",
    "end": "1533880"
  },
  {
    "text": "uh API binding which we talked about so",
    "start": "1533880",
    "end": "1537279"
  },
  {
    "text": "I have a API binding to the posgress",
    "start": "1537279",
    "end": "1539360"
  },
  {
    "text": "database",
    "start": "1539360",
    "end": "1540360"
  },
  {
    "text": "team like I will not go into details how",
    "start": "1540360",
    "end": "1543360"
  },
  {
    "text": "the providers are wired up and",
    "start": "1543360",
    "end": "1544960"
  },
  {
    "text": "everything like you feel free to go into",
    "start": "1544960",
    "end": "1546640"
  },
  {
    "text": "this uh workshop or other talks and that",
    "start": "1546640",
    "end": "1550000"
  },
  {
    "text": "but how this is now represented at the",
    "start": "1550000",
    "end": "1552720"
  },
  {
    "text": "provider side like a database team owns",
    "start": "1552720",
    "end": "1555840"
  },
  {
    "text": "a Kubernetes cluster and if you notice",
    "start": "1555840",
    "end": "1558919"
  },
  {
    "text": "here like what I have is I have two",
    "start": "1558919",
    "end": "1562400"
  },
  {
    "text": "different namespaces",
    "start": "1562400",
    "end": "1564440"
  },
  {
    "text": "running same name databases is out",
    "start": "1564440",
    "end": "1569120"
  },
  {
    "text": "there so basically what and if I do",
    "start": "1572120",
    "end": "1576559"
  },
  {
    "text": "let's say still have few minutes so",
    "start": "1576559",
    "end": "1579520"
  },
  {
    "text": "let's try to improvise",
    "start": "1579520",
    "end": "1581960"
  },
  {
    "text": "something API clust consumer one",
    "start": "1581960",
    "end": "1588100"
  },
  {
    "text": "[Music]",
    "start": "1588100",
    "end": "1591000"
  },
  {
    "text": "cluster so I basically rename it",
    "start": "1591000",
    "end": "1596679"
  },
  {
    "text": "It's always interesting typing in a live",
    "start": "1599600",
    "end": "1603360"
  },
  {
    "text": "demos if I create a new one okay secrets",
    "start": "1603480",
    "end": "1606640"
  },
  {
    "text": "are present you know consumer one i see",
    "start": "1606640",
    "end": "1610320"
  },
  {
    "text": "that that's basically getting being set",
    "start": "1610320",
    "end": "1613080"
  },
  {
    "text": "up and on the side I can see that tenant",
    "start": "1613080",
    "end": "1617600"
  },
  {
    "text": "namespace representing here is being",
    "start": "1617600",
    "end": "1619520"
  },
  {
    "text": "instantiated so that's very high",
    "start": "1619520",
    "end": "1622840"
  },
  {
    "text": "level but idea is",
    "start": "1622840",
    "end": "1625799"
  },
  {
    "text": "that you have your compute cluster where",
    "start": "1625799",
    "end": "1628159"
  },
  {
    "text": "all the database team spins up the",
    "start": "1628159",
    "end": "1629840"
  },
  {
    "text": "things and everything and you have many",
    "start": "1629840",
    "end": "1631520"
  },
  {
    "text": "consumers which don't talk to each other",
    "start": "1631520",
    "end": "1633279"
  },
  {
    "text": "they interact they own virtual",
    "start": "1633279",
    "end": "1634919"
  },
  {
    "text": "environments and in the same way that",
    "start": "1634919",
    "end": "1638799"
  },
  {
    "text": "consumer could be other team using",
    "start": "1638799",
    "end": "1640960"
  },
  {
    "text": "databases to build something else so",
    "start": "1640960",
    "end": "1643559"
  },
  {
    "text": "we basically did a control plane as a",
    "start": "1643559",
    "end": "1647039"
  },
  {
    "text": "service and database as a service so KCP",
    "start": "1647039",
    "end": "1651360"
  },
  {
    "text": "has quite a lot of talks already in a",
    "start": "1651360",
    "end": "1653360"
  },
  {
    "text": "YouTube channel and everywhere so we had",
    "start": "1653360",
    "end": "1655919"
  },
  {
    "text": "a tutorial yesterday which we had linked",
    "start": "1655919",
    "end": "1658080"
  },
  {
    "text": "which if you like the database as",
    "start": "1658080",
    "end": "1660159"
  },
  {
    "text": "service you can go in there and do it",
    "start": "1660159",
    "end": "1662279"
  },
  {
    "text": "yourself you are here now we have one",
    "start": "1662279",
    "end": "1665120"
  },
  {
    "text": "more talk related to KCP which is will",
    "start": "1665120",
    "end": "1667520"
  },
  {
    "text": "be very interesting i would strongly",
    "start": "1667520",
    "end": "1669039"
  },
  {
    "text": "recommend to go into that it's about a",
    "start": "1669039",
    "end": "1671120"
  },
  {
    "text": "new kid on a blog uh how to build",
    "start": "1671120",
    "end": "1674080"
  },
  {
    "text": "multicluster controllers controller",
    "start": "1674080",
    "end": "1676399"
  },
  {
    "text": "runtime",
    "start": "1676399",
    "end": "1678540"
  },
  {
    "text": "[Music]",
    "start": "1678540",
    "end": "1679880"
  },
  {
    "text": "so and so that's basically it",
    "start": "1679880",
    "end": "1684360"
  },
  {
    "text": "and platform engineering in general is",
    "start": "1684360",
    "end": "1687120"
  },
  {
    "text": "reaching a I would say a quite a",
    "start": "1687120",
    "end": "1689120"
  },
  {
    "text": "milestone now because more and more",
    "start": "1689120",
    "end": "1690720"
  },
  {
    "text": "people are reaching this point where we",
    "start": "1690720",
    "end": "1692640"
  },
  {
    "text": "have many cluster problems so if you",
    "start": "1692640",
    "end": "1696640"
  },
  {
    "text": "like what you see if you want to join",
    "start": "1696640",
    "end": "1699720"
  },
  {
    "text": "us come and talk to us we have stickers",
    "start": "1699720",
    "end": "1703760"
  },
  {
    "text": "you can find us at Kubernetes",
    "start": "1703760",
    "end": "1707799"
  },
  {
    "text": "Slackpev or Twitter X and your feedback",
    "start": "1707799",
    "end": "1711679"
  },
  {
    "text": "is very much welcome any final words",
    "start": "1711679",
    "end": "1715200"
  },
  {
    "text": "this one over the cool so we still have",
    "start": "1715200",
    "end": "1719360"
  },
  {
    "text": "I think few minutes for questions if",
    "start": "1719360",
    "end": "1721360"
  },
  {
    "text": "there is any um just to add one thing if",
    "start": "1721360",
    "end": "1724720"
  },
  {
    "text": "in case you are uh interested to go to",
    "start": "1724720",
    "end": "1726559"
  },
  {
    "text": "the like do the demo yourself uh the one",
    "start": "1726559",
    "end": "1729600"
  },
  {
    "text": "easy link is you can go to",
    "start": "1729600",
    "end": "1730720"
  },
  {
    "text": "docs.kcb.io/contrib",
    "start": "1730720",
    "end": "1733720"
  },
  {
    "text": "um that's a website with all the demos",
    "start": "1735039",
    "end": "1737679"
  },
  {
    "text": "and all the presentations that have been",
    "start": "1737679",
    "end": "1739600"
  },
  {
    "text": "done for KCB in the recent",
    "start": "1739600",
    "end": "1743679"
  },
  {
    "text": "past cool",
    "start": "1744520",
    "end": "1748520"
  }
]