[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "hi i'm ryan hamilton an engineer at",
    "start": "2080",
    "end": "4480"
  },
  {
    "text": "google working on envoy i've been at",
    "start": "4480",
    "end": "6640"
  },
  {
    "text": "google for a little bit over 10 years",
    "start": "6640",
    "end": "9360"
  },
  {
    "text": "during which time i was involved in the",
    "start": "9360",
    "end": "11840"
  },
  {
    "text": "design development and deployment of",
    "start": "11840",
    "end": "14639"
  },
  {
    "text": "http 3 at google",
    "start": "14639",
    "end": "16960"
  },
  {
    "text": "i'm here today with elizabeth to talk",
    "start": "16960",
    "end": "19359"
  },
  {
    "text": "about http 3 and envoy",
    "start": "19359",
    "end": "23599"
  },
  {
    "text": "this talk is in three parts",
    "start": "23680",
    "end": "25680"
  },
  {
    "text": "i'll talk about the first two an",
    "start": "25680",
    "end": "28080"
  },
  {
    "text": "overview of http 3 and the benefits it",
    "start": "28080",
    "end": "30640"
  },
  {
    "text": "provides",
    "start": "30640",
    "end": "31679"
  },
  {
    "text": "and the experience we gained deploying",
    "start": "31679",
    "end": "33760"
  },
  {
    "text": "http 3 at scale then alissa will take",
    "start": "33760",
    "end": "37120"
  },
  {
    "text": "over and cover the third part envoy",
    "start": "37120",
    "end": "39680"
  },
  {
    "text": "integration",
    "start": "39680",
    "end": "41040"
  },
  {
    "text": "let's dive in",
    "start": "41040",
    "end": "43200"
  },
  {
    "text": "we'll start with an overview of http 3",
    "start": "43200",
    "end": "46239"
  },
  {
    "text": "and the benefits it provides but first",
    "start": "46239",
    "end": "48960"
  },
  {
    "text": "let's start with why http 3 is so",
    "start": "48960",
    "end": "51840"
  },
  {
    "text": "exciting",
    "start": "51840",
    "end": "54399"
  },
  {
    "text": "namely",
    "start": "54480",
    "end": "55520"
  },
  {
    "text": "http 3 is simply faster let's look at",
    "start": "55520",
    "end": "58559"
  },
  {
    "text": "two metrics from google which show how",
    "start": "58559",
    "end": "61120"
  },
  {
    "text": "much",
    "start": "61120",
    "end": "62160"
  },
  {
    "text": "the first is search",
    "start": "62160",
    "end": "64559"
  },
  {
    "text": "res uh search result page latency how",
    "start": "64559",
    "end": "67680"
  },
  {
    "text": "long it takes",
    "start": "67680",
    "end": "68960"
  },
  {
    "text": "for search results to arrive",
    "start": "68960",
    "end": "71600"
  },
  {
    "text": "when http 3 is used instead of http 2",
    "start": "71600",
    "end": "75680"
  },
  {
    "text": "the page loads 8 percent faster",
    "start": "75680",
    "end": "78240"
  },
  {
    "text": "this is pretty significant when you",
    "start": "78240",
    "end": "80000"
  },
  {
    "text": "consider just how optimized the google",
    "start": "80000",
    "end": "82400"
  },
  {
    "text": "search page already is for fast delivery",
    "start": "82400",
    "end": "87840"
  },
  {
    "text": "the second metric",
    "start": "87920",
    "end": "89520"
  },
  {
    "text": "is from youtube you probably recognize",
    "start": "89520",
    "end": "92640"
  },
  {
    "text": "the spinner that happens when you're",
    "start": "92640",
    "end": "94960"
  },
  {
    "text": "paused waiting for more of your video to",
    "start": "94960",
    "end": "97360"
  },
  {
    "text": "load this is called buffering youtube",
    "start": "97360",
    "end": "99600"
  },
  {
    "text": "calls this buffering and the time",
    "start": "99600",
    "end": "101520"
  },
  {
    "text": "between buffering events",
    "start": "101520",
    "end": "103920"
  },
  {
    "text": "is the is the mtbr the longer",
    "start": "103920",
    "end": "107759"
  },
  {
    "text": "it goes between rebuffers the better the",
    "start": "107759",
    "end": "110399"
  },
  {
    "text": "fewer rebuffers the better",
    "start": "110399",
    "end": "112880"
  },
  {
    "text": "with http 3 enabled youtube mtbr",
    "start": "112880",
    "end": "117280"
  },
  {
    "text": "improves by 30",
    "start": "117280",
    "end": "120159"
  },
  {
    "text": "that's huge",
    "start": "120159",
    "end": "122798"
  },
  {
    "start": "122000",
    "end": "122000"
  },
  {
    "text": "okay but what is http 3",
    "start": "123119",
    "end": "126399"
  },
  {
    "text": "http 3 is simply the next generation of",
    "start": "126399",
    "end": "129920"
  },
  {
    "text": "http",
    "start": "129920",
    "end": "131200"
  },
  {
    "text": "following creatively from http 2 and",
    "start": "131200",
    "end": "134319"
  },
  {
    "text": "http 1.",
    "start": "134319",
    "end": "136000"
  },
  {
    "text": "it was created at google about 10 years",
    "start": "136000",
    "end": "138480"
  },
  {
    "text": "ago and recently standardized at the",
    "start": "138480",
    "end": "141440"
  },
  {
    "text": "ietf",
    "start": "141440",
    "end": "142640"
  },
  {
    "text": "it's supported in all major browsers in",
    "start": "142640",
    "end": "145840"
  },
  {
    "text": "many mobile apps in server stacks and",
    "start": "145840",
    "end": "149680"
  },
  {
    "text": "server deployments",
    "start": "149680",
    "end": "151920"
  },
  {
    "text": "according to cloudflare radar 17",
    "start": "151920",
    "end": "155120"
  },
  {
    "text": "of internet traffic is currently http 3.",
    "start": "155120",
    "end": "159040"
  },
  {
    "text": "and for services like facebook which",
    "start": "159040",
    "end": "161200"
  },
  {
    "text": "have leaned heavily into http 3 they're",
    "start": "161200",
    "end": "164640"
  },
  {
    "text": "seeing something like 75",
    "start": "164640",
    "end": "167519"
  },
  {
    "text": "of their traffic coming in over http3",
    "start": "167519",
    "end": "171519"
  },
  {
    "text": "and quite simply it's designed to be",
    "start": "171519",
    "end": "174000"
  },
  {
    "text": "fast on the internet so let's look at",
    "start": "174000",
    "end": "178159"
  },
  {
    "text": "let's look at how uh http 3 delivers",
    "start": "178159",
    "end": "181440"
  },
  {
    "text": "these benefits",
    "start": "181440",
    "end": "184400"
  },
  {
    "start": "183000",
    "end": "183000"
  },
  {
    "text": "first let's take a look at the stack",
    "start": "184400",
    "end": "186640"
  },
  {
    "text": "traditionally with http 2 and http 3",
    "start": "186640",
    "end": "192159"
  },
  {
    "text": "we have ip packets at the bottom over",
    "start": "192239",
    "end": "194480"
  },
  {
    "text": "which we run tcp on top of which we",
    "start": "194480",
    "end": "197440"
  },
  {
    "text": "stack tls and then finally",
    "start": "197440",
    "end": "200239"
  },
  {
    "text": "http 1 or http 2.",
    "start": "200239",
    "end": "203280"
  },
  {
    "text": "with http 3 this is quite different",
    "start": "203280",
    "end": "206319"
  },
  {
    "text": "instead of using tcp",
    "start": "206319",
    "end": "209519"
  },
  {
    "text": "we use udp",
    "start": "209519",
    "end": "211760"
  },
  {
    "text": "on top of that runs a new protocol",
    "start": "211760",
    "end": "214640"
  },
  {
    "text": "called quick which",
    "start": "214640",
    "end": "216560"
  },
  {
    "text": "consumes the reliability",
    "start": "216560",
    "end": "219120"
  },
  {
    "text": "features of tcp",
    "start": "219120",
    "end": "221360"
  },
  {
    "text": "and the multiplexing features of http 2",
    "start": "221360",
    "end": "226239"
  },
  {
    "text": "and internally makes use of tls 1 3",
    "start": "226239",
    "end": "230560"
  },
  {
    "text": "for the handshake and for packet",
    "start": "230560",
    "end": "233760"
  },
  {
    "text": "encryption and then on top of that",
    "start": "233760",
    "end": "236640"
  },
  {
    "text": "is http 3. and let's look at two",
    "start": "236640",
    "end": "239200"
  },
  {
    "text": "features",
    "start": "239200",
    "end": "240560"
  },
  {
    "text": "that give http 3 its performance wins",
    "start": "240560",
    "end": "245840"
  },
  {
    "start": "245000",
    "end": "245000"
  },
  {
    "text": "the first is faster connection",
    "start": "245840",
    "end": "248480"
  },
  {
    "text": "establishment time through the zero rtt",
    "start": "248480",
    "end": "251680"
  },
  {
    "text": "handshake the zero round trip handshake",
    "start": "251680",
    "end": "254560"
  },
  {
    "text": "so with tcp there's the common synack",
    "start": "254560",
    "end": "258239"
  },
  {
    "text": "exchange the three-way handshake between",
    "start": "258239",
    "end": "261199"
  },
  {
    "text": "a client",
    "start": "261199",
    "end": "262400"
  },
  {
    "text": "and a server so after one round-trip of",
    "start": "262400",
    "end": "264639"
  },
  {
    "text": "packets between the client and the",
    "start": "264639",
    "end": "266160"
  },
  {
    "text": "server the client is able to send",
    "start": "266160",
    "end": "268400"
  },
  {
    "text": "application data",
    "start": "268400",
    "end": "270080"
  },
  {
    "text": "but of course these days we don't just",
    "start": "270080",
    "end": "271440"
  },
  {
    "text": "want to send data between clients and",
    "start": "271440",
    "end": "273199"
  },
  {
    "text": "servers we want to send that data",
    "start": "273199",
    "end": "275199"
  },
  {
    "text": "securely",
    "start": "275199",
    "end": "276560"
  },
  {
    "text": "so we need to run",
    "start": "276560",
    "end": "278639"
  },
  {
    "text": "a security layer on top typically tls",
    "start": "278639",
    "end": "281520"
  },
  {
    "text": "which adds its own",
    "start": "281520",
    "end": "283199"
  },
  {
    "text": "set of round trips into the handshake so",
    "start": "283199",
    "end": "286000"
  },
  {
    "text": "with tcp plus tls12 we're looking at",
    "start": "286000",
    "end": "289040"
  },
  {
    "text": "somewhere between two to three round",
    "start": "289040",
    "end": "290880"
  },
  {
    "text": "trips before",
    "start": "290880",
    "end": "292479"
  },
  {
    "text": "application data can be sent to the",
    "start": "292479",
    "end": "294840"
  },
  {
    "text": "server with quick",
    "start": "294840",
    "end": "296960"
  },
  {
    "text": "which is equivalent to tcp plus tls",
    "start": "296960",
    "end": "299600"
  },
  {
    "text": "we're down to between zero and one if a",
    "start": "299600",
    "end": "302880"
  },
  {
    "text": "client has spoken to a quick server",
    "start": "302880",
    "end": "304720"
  },
  {
    "text": "before the server will give that client",
    "start": "304720",
    "end": "306960"
  },
  {
    "text": "an encrypted token which the client is",
    "start": "306960",
    "end": "309280"
  },
  {
    "text": "able to use",
    "start": "309280",
    "end": "310479"
  },
  {
    "text": "in subsequent connections so it sends",
    "start": "310479",
    "end": "313039"
  },
  {
    "text": "the client hello and can immediately",
    "start": "313039",
    "end": "315199"
  },
  {
    "text": "follow that up with encrypted data",
    "start": "315199",
    "end": "319120"
  },
  {
    "text": "round trip times on the internet cannot",
    "start": "319120",
    "end": "321360"
  },
  {
    "text": "uncommonly be",
    "start": "321360",
    "end": "322880"
  },
  {
    "text": "in the range of 250 milliseconds so if",
    "start": "322880",
    "end": "325759"
  },
  {
    "text": "you're doing two three round trips",
    "start": "325759",
    "end": "327520"
  },
  {
    "text": "before you're able to send data that's",
    "start": "327520",
    "end": "329600"
  },
  {
    "text": "somewhere between you know a half and",
    "start": "329600",
    "end": "331680"
  },
  {
    "text": "one second",
    "start": "331680",
    "end": "333360"
  },
  {
    "text": "waiting for the connection to be",
    "start": "333360",
    "end": "334880"
  },
  {
    "text": "established that's a long time so with",
    "start": "334880",
    "end": "336960"
  },
  {
    "text": "quick if you can get that down to zero",
    "start": "336960",
    "end": "339759"
  },
  {
    "text": "that's a big win",
    "start": "339759",
    "end": "342560"
  },
  {
    "text": "next let's talk a little bit about head",
    "start": "343360",
    "end": "345199"
  },
  {
    "text": "of line blocking and the evolution of",
    "start": "345199",
    "end": "347840"
  },
  {
    "text": "http",
    "start": "347840",
    "end": "350160"
  },
  {
    "text": "back in the http one days each request",
    "start": "350160",
    "end": "353440"
  },
  {
    "text": "would go on a dedicated tcp connection",
    "start": "353440",
    "end": "356800"
  },
  {
    "text": "if you wanted to have",
    "start": "356800",
    "end": "358639"
  },
  {
    "text": "multiple requests in flight at once you",
    "start": "358639",
    "end": "362080"
  },
  {
    "text": "would need multiple tcp connections if",
    "start": "362080",
    "end": "364800"
  },
  {
    "text": "you went a lot of requests inflate you",
    "start": "364800",
    "end": "367600"
  },
  {
    "text": "would need a lot of tcp connections",
    "start": "367600",
    "end": "370400"
  },
  {
    "text": "but of course you can't have an infinite",
    "start": "370400",
    "end": "371919"
  },
  {
    "text": "number so browsers impose limits on the",
    "start": "371919",
    "end": "374400"
  },
  {
    "text": "number of sockets that they'll open to a",
    "start": "374400",
    "end": "376960"
  },
  {
    "text": "particular site",
    "start": "376960",
    "end": "378800"
  },
  {
    "text": "unfortunately each of these tcp",
    "start": "378800",
    "end": "380560"
  },
  {
    "text": "connections competes with the others for",
    "start": "380560",
    "end": "383520"
  },
  {
    "text": "congestion control they often spend time",
    "start": "383520",
    "end": "386560"
  },
  {
    "text": "idle while waiting for the time between",
    "start": "386560",
    "end": "389840"
  },
  {
    "text": "a request and a response so this leads",
    "start": "389840",
    "end": "392720"
  },
  {
    "text": "to really sub-optimal resource",
    "start": "392720",
    "end": "394880"
  },
  {
    "text": "utilization",
    "start": "394880",
    "end": "397280"
  },
  {
    "text": "this is where http 2 comes in",
    "start": "397280",
    "end": "400080"
  },
  {
    "text": "in which a single connection is created",
    "start": "400080",
    "end": "403680"
  },
  {
    "text": "between the client and the server and",
    "start": "403680",
    "end": "406240"
  },
  {
    "text": "all of the requests are multiplexed onto",
    "start": "406240",
    "end": "408639"
  },
  {
    "text": "the single tcp connection",
    "start": "408639",
    "end": "411440"
  },
  {
    "text": "this is great because it allows us to do",
    "start": "411440",
    "end": "413520"
  },
  {
    "text": "new things with http like compress",
    "start": "413520",
    "end": "415919"
  },
  {
    "text": "headers for increased efficiency and",
    "start": "415919",
    "end": "418639"
  },
  {
    "text": "introduce prioritization by which low",
    "start": "418639",
    "end": "421199"
  },
  {
    "text": "priority requests can get delayed in",
    "start": "421199",
    "end": "423520"
  },
  {
    "text": "favor of high priority",
    "start": "423520",
    "end": "427198"
  },
  {
    "text": "however because it's a single tcp",
    "start": "427280",
    "end": "429919"
  },
  {
    "text": "connection and a single in-order",
    "start": "429919",
    "end": "432800"
  },
  {
    "text": "sequence of bytes packet loss can be",
    "start": "432800",
    "end": "435280"
  },
  {
    "text": "quite problematic",
    "start": "435280",
    "end": "437199"
  },
  {
    "text": "when packets make their way onto the",
    "start": "437199",
    "end": "438880"
  },
  {
    "text": "internet the internet sometimes decides",
    "start": "438880",
    "end": "441440"
  },
  {
    "text": "to drop those packets and on a tcp",
    "start": "441440",
    "end": "443440"
  },
  {
    "text": "connection any data after the lost",
    "start": "443440",
    "end": "445919"
  },
  {
    "text": "packet can't be delivered up to the",
    "start": "445919",
    "end": "448000"
  },
  {
    "text": "application",
    "start": "448000",
    "end": "449199"
  },
  {
    "text": "until that data is retransmitted and",
    "start": "449199",
    "end": "452240"
  },
  {
    "text": "arrives at the server this is called",
    "start": "452240",
    "end": "454240"
  },
  {
    "text": "head of line blocking and it's a real",
    "start": "454240",
    "end": "456240"
  },
  {
    "text": "problem for latency",
    "start": "456240",
    "end": "459759"
  },
  {
    "text": "and here's where http 3 comes in using",
    "start": "459759",
    "end": "463039"
  },
  {
    "text": "quick quick runs over udp which doesn't",
    "start": "463039",
    "end": "466879"
  },
  {
    "text": "present a single in order sequence of",
    "start": "466879",
    "end": "469120"
  },
  {
    "text": "bytes instead it's a series of datagrams",
    "start": "469120",
    "end": "472160"
  },
  {
    "text": "sent from the client to the server that",
    "start": "472160",
    "end": "474400"
  },
  {
    "text": "are each capable of being processed",
    "start": "474400",
    "end": "476840"
  },
  {
    "text": "independently so",
    "start": "476840",
    "end": "478800"
  },
  {
    "text": "in the case of http 3 each stream is a",
    "start": "478800",
    "end": "482639"
  },
  {
    "text": "series of quick packets which go off",
    "start": "482639",
    "end": "485759"
  },
  {
    "text": "onto the internet some of them",
    "start": "485759",
    "end": "488879"
  },
  {
    "text": "may be dropped but when they are the",
    "start": "488879",
    "end": "492479"
  },
  {
    "text": "data in other streams is still able to",
    "start": "492479",
    "end": "496160"
  },
  {
    "text": "be processed so this removes the head of",
    "start": "496160",
    "end": "498879"
  },
  {
    "text": "line blocking completely",
    "start": "498879",
    "end": "502319"
  },
  {
    "start": "502000",
    "end": "502000"
  },
  {
    "text": "all right let's switch gears and talk a",
    "start": "503440",
    "end": "505199"
  },
  {
    "text": "little bit about the deployment",
    "start": "505199",
    "end": "506879"
  },
  {
    "text": "experience that we gain",
    "start": "506879",
    "end": "508639"
  },
  {
    "text": "when we turn http 3 up",
    "start": "508639",
    "end": "512479"
  },
  {
    "start": "512000",
    "end": "512000"
  },
  {
    "text": "the biggest is that fallback is simply",
    "start": "512479",
    "end": "515039"
  },
  {
    "text": "required",
    "start": "515039",
    "end": "517518"
  },
  {
    "text": "http 3 is new tcp is not the internet is",
    "start": "517519",
    "end": "521680"
  },
  {
    "text": "old and tcp has been a part of it from",
    "start": "521680",
    "end": "523518"
  },
  {
    "text": "the beginning so basically all internet",
    "start": "523519",
    "end": "525680"
  },
  {
    "text": "infrastructure",
    "start": "525680",
    "end": "527279"
  },
  {
    "text": "is expected to allow tcp traffic to pass",
    "start": "527279",
    "end": "530480"
  },
  {
    "text": "if you're if you're on a network and",
    "start": "530480",
    "end": "532640"
  },
  {
    "text": "your tcp traffic doesn't get through",
    "start": "532640",
    "end": "534480"
  },
  {
    "text": "your network is basically broken and",
    "start": "534480",
    "end": "536320"
  },
  {
    "text": "it's time to complain to somebody about",
    "start": "536320",
    "end": "537760"
  },
  {
    "text": "it uh",
    "start": "537760",
    "end": "539200"
  },
  {
    "text": "unfortunately that's not true for quick",
    "start": "539200",
    "end": "541360"
  },
  {
    "text": "that's not true for http 3. there are",
    "start": "541360",
    "end": "543519"
  },
  {
    "text": "lots of devices out there that block all",
    "start": "543519",
    "end": "547279"
  },
  {
    "text": "sorts of things",
    "start": "547279",
    "end": "548399"
  },
  {
    "text": "including quick and hd v3 and so an h3",
    "start": "548399",
    "end": "552320"
  },
  {
    "text": "client needs to be able to fall back to",
    "start": "552320",
    "end": "555040"
  },
  {
    "text": "http 1 or http 2",
    "start": "555040",
    "end": "558160"
  },
  {
    "text": "in these situations",
    "start": "558160",
    "end": "560160"
  },
  {
    "text": "some data we have from chrome suggests",
    "start": "560160",
    "end": "562959"
  },
  {
    "text": "that currently something like 10 of all",
    "start": "562959",
    "end": "565760"
  },
  {
    "text": "users will be unable to ever make quick",
    "start": "565760",
    "end": "568720"
  },
  {
    "text": "connections and will always need to be",
    "start": "568720",
    "end": "570720"
  },
  {
    "text": "doing",
    "start": "570720",
    "end": "572399"
  },
  {
    "text": "http 1 or http 2.",
    "start": "572399",
    "end": "576320"
  },
  {
    "start": "576000",
    "end": "576000"
  },
  {
    "text": "and there are a couple of network",
    "start": "576320",
    "end": "577839"
  },
  {
    "text": "pathologies which lead to this behavior",
    "start": "577839",
    "end": "582080"
  },
  {
    "text": "one",
    "start": "582080",
    "end": "583279"
  },
  {
    "text": "which is most common is that all quick",
    "start": "583279",
    "end": "586399"
  },
  {
    "text": "traffic will be blocked so when a client",
    "start": "586399",
    "end": "589600"
  },
  {
    "text": "tries to establish a quick connection",
    "start": "589600",
    "end": "591839"
  },
  {
    "text": "that quick handshake fails the",
    "start": "591839",
    "end": "593600"
  },
  {
    "text": "connection is never established the",
    "start": "593600",
    "end": "595600"
  },
  {
    "text": "client notices this",
    "start": "595600",
    "end": "597680"
  },
  {
    "text": "switches to",
    "start": "597680",
    "end": "599279"
  },
  {
    "text": "a",
    "start": "599279",
    "end": "600320"
  },
  {
    "text": "tcp connection instead and sends",
    "start": "600320",
    "end": "602399"
  },
  {
    "text": "requests over that",
    "start": "602399",
    "end": "604480"
  },
  {
    "text": "clients are often smart and will notice",
    "start": "604480",
    "end": "607040"
  },
  {
    "text": "that quick is broken and avoid",
    "start": "607040",
    "end": "609200"
  },
  {
    "text": "attempting subsequent quick connections",
    "start": "609200",
    "end": "611839"
  },
  {
    "text": "as performance optimization",
    "start": "611839",
    "end": "614880"
  },
  {
    "text": "however some networks are worse some",
    "start": "614880",
    "end": "617680"
  },
  {
    "text": "networks will",
    "start": "617680",
    "end": "619200"
  },
  {
    "text": "cause failures after the handshake by",
    "start": "619200",
    "end": "622560"
  },
  {
    "text": "blackholing",
    "start": "622560",
    "end": "623839"
  },
  {
    "text": "all packets or sometimes connectivity",
    "start": "623839",
    "end": "627360"
  },
  {
    "text": "will randomly drop in the middle of a",
    "start": "627360",
    "end": "629680"
  },
  {
    "text": "connection and so clients need",
    "start": "629680",
    "end": "632000"
  },
  {
    "text": "mitigations for this the first thing",
    "start": "632000",
    "end": "633680"
  },
  {
    "text": "they need is detection clients need to",
    "start": "633680",
    "end": "635360"
  },
  {
    "text": "be able to notice that they're sending",
    "start": "635360",
    "end": "637440"
  },
  {
    "text": "packets into a black hole that",
    "start": "637440",
    "end": "639040"
  },
  {
    "text": "everything they send results in nothing",
    "start": "639040",
    "end": "641200"
  },
  {
    "text": "coming back but what do you do once",
    "start": "641200",
    "end": "643120"
  },
  {
    "text": "you've detected that it turns out a",
    "start": "643120",
    "end": "645040"
  },
  {
    "text": "really simple thing you can do as a",
    "start": "645040",
    "end": "647600"
  },
  {
    "text": "client is change the source port that",
    "start": "647600",
    "end": "650079"
  },
  {
    "text": "your traffic is going out on",
    "start": "650079",
    "end": "652480"
  },
  {
    "text": "because quick isn't tied it isn't",
    "start": "652480",
    "end": "654560"
  },
  {
    "text": "running over udp or it isn't running",
    "start": "654560",
    "end": "656800"
  },
  {
    "text": "over tcp it's not tied to a single",
    "start": "656800",
    "end": "660000"
  },
  {
    "text": "source port and when the client switches",
    "start": "660000",
    "end": "662399"
  },
  {
    "text": "to a new port for some reason magically",
    "start": "662399",
    "end": "665600"
  },
  {
    "text": "traffic seems to get through much of the",
    "start": "665600",
    "end": "667760"
  },
  {
    "text": "time",
    "start": "667760",
    "end": "669519"
  },
  {
    "text": "another option is when you walk from",
    "start": "669519",
    "end": "672959"
  },
  {
    "text": "your house to your car sometimes you",
    "start": "672959",
    "end": "675600"
  },
  {
    "text": "will walk from wi-fi",
    "start": "675600",
    "end": "677519"
  },
  {
    "text": "coverage to out of wi-fi coverage and",
    "start": "677519",
    "end": "680240"
  },
  {
    "text": "experience a connectivity bullet",
    "start": "680240",
    "end": "682800"
  },
  {
    "text": "one thing that quick is able to do is",
    "start": "682800",
    "end": "684800"
  },
  {
    "text": "notice that this isn't working notice",
    "start": "684800",
    "end": "686800"
  },
  {
    "text": "that",
    "start": "686800",
    "end": "687839"
  },
  {
    "text": "your cell connection is available and",
    "start": "687839",
    "end": "690560"
  },
  {
    "text": "swing the connection from wi-fi to cell",
    "start": "690560",
    "end": "694320"
  },
  {
    "text": "and your connection is",
    "start": "694320",
    "end": "696399"
  },
  {
    "text": "seamlessly",
    "start": "696399",
    "end": "697760"
  },
  {
    "text": "uh continues",
    "start": "697760",
    "end": "700079"
  },
  {
    "text": "all of these problems are solved today",
    "start": "700079",
    "end": "702480"
  },
  {
    "text": "or will be solved very shortly in envoy",
    "start": "702480",
    "end": "705920"
  },
  {
    "text": "and environmental so this is a great set",
    "start": "705920",
    "end": "708959"
  },
  {
    "text": "of technologies to use",
    "start": "708959",
    "end": "710880"
  },
  {
    "text": "for doing http 3 in production",
    "start": "710880",
    "end": "714800"
  },
  {
    "text": "let me turn it over to alyssa to talk",
    "start": "714800",
    "end": "717200"
  },
  {
    "start": "717000",
    "end": "717000"
  },
  {
    "text": "about envoy integration",
    "start": "717200",
    "end": "719440"
  },
  {
    "text": "hey",
    "start": "719440",
    "end": "720240"
  },
  {
    "text": "i'm melissa uh one of the unvoiced",
    "start": "720240",
    "end": "722000"
  },
  {
    "text": "singer maintainers and a long time",
    "start": "722000",
    "end": "723839"
  },
  {
    "text": "server and protocols developer at google",
    "start": "723839",
    "end": "726160"
  },
  {
    "text": "before i dive into how this all works i",
    "start": "726160",
    "end": "727839"
  },
  {
    "text": "want to do a call to dan the google",
    "start": "727839",
    "end": "729760"
  },
  {
    "text": "engineer who did the heavy lifting for",
    "start": "729760",
    "end": "731120"
  },
  {
    "text": "all this work",
    "start": "731120",
    "end": "732399"
  },
  {
    "text": "she's actually heads down closing off",
    "start": "732399",
    "end": "733839"
  },
  {
    "text": "the last few mpv blockers to get envoy",
    "start": "733839",
    "end": "736320"
  },
  {
    "text": "quick to ga for an upcoming launch so as",
    "start": "736320",
    "end": "738560"
  },
  {
    "text": "i've been doing much of the quick",
    "start": "738560",
    "end": "739519"
  },
  {
    "text": "client-side integration i'm standing in",
    "start": "739519",
    "end": "741440"
  },
  {
    "text": "to talk about how it all hangs together",
    "start": "741440",
    "end": "744880"
  },
  {
    "text": "envoy has this amazing series of api",
    "start": "744880",
    "end": "747040"
  },
  {
    "text": "abstractions with a clean separation of",
    "start": "747040",
    "end": "748800"
  },
  {
    "text": "function",
    "start": "748800",
    "end": "749760"
  },
  {
    "text": "as new requests land on the machine they",
    "start": "749760",
    "end": "751680"
  },
  {
    "text": "get accepted and assigned to a worker",
    "start": "751680",
    "end": "753279"
  },
  {
    "text": "thread",
    "start": "753279",
    "end": "754320"
  },
  {
    "text": "data is read from and written to a",
    "start": "754320",
    "end": "756000"
  },
  {
    "text": "transport socket for example the tls",
    "start": "756000",
    "end": "758079"
  },
  {
    "text": "socket where the transport socket is",
    "start": "758079",
    "end": "759600"
  },
  {
    "text": "responsible for decrypting data from the",
    "start": "759600",
    "end": "761200"
  },
  {
    "text": "wire and encrypting data that it writes",
    "start": "761200",
    "end": "763440"
  },
  {
    "text": "out",
    "start": "763440",
    "end": "764399"
  },
  {
    "text": "as data is read it's passed through a",
    "start": "764399",
    "end": "765920"
  },
  {
    "text": "configurable series of l4 filters which",
    "start": "765920",
    "end": "768079"
  },
  {
    "text": "can inspect the data or do",
    "start": "768079",
    "end": "769279"
  },
  {
    "text": "transformations on it",
    "start": "769279",
    "end": "770720"
  },
  {
    "text": "for hdp the last l4 filter in the chain",
    "start": "770720",
    "end": "773600"
  },
  {
    "text": "is the hdb connection manager which does",
    "start": "773600",
    "end": "775600"
  },
  {
    "text": "a transformation from l4 to l7",
    "start": "775600",
    "end": "778399"
  },
  {
    "text": "it does this by setting the l4 data to a",
    "start": "778399",
    "end": "780079"
  },
  {
    "text": "codec previously only http 1 or hdb2 and",
    "start": "780079",
    "end": "783360"
  },
  {
    "text": "the codec is responsible for",
    "start": "783360",
    "end": "784639"
  },
  {
    "text": "understanding the framing for that wire",
    "start": "784639",
    "end": "786000"
  },
  {
    "text": "format reading in data and spitting out",
    "start": "786000",
    "end": "788240"
  },
  {
    "text": "strings headers body data etc",
    "start": "788240",
    "end": "790880"
  },
  {
    "text": "each of the streams has its own series",
    "start": "790880",
    "end": "792720"
  },
  {
    "text": "of l7 filters culminating in the router",
    "start": "792720",
    "end": "795040"
  },
  {
    "text": "filter which ships the data upstream",
    "start": "795040",
    "end": "797360"
  },
  {
    "text": "things don't work quite the same way for",
    "start": "797360",
    "end": "799040"
  },
  {
    "text": "http 3.",
    "start": "799040",
    "end": "800399"
  },
  {
    "text": "to start with getting the packets to a",
    "start": "800399",
    "end": "802880"
  },
  {
    "text": "connection from a connection to a worker",
    "start": "802880",
    "end": "804720"
  },
  {
    "text": "thread is a little bit more complicated",
    "start": "804720",
    "end": "806720"
  },
  {
    "text": "where accepting a tcp connection makes",
    "start": "806720",
    "end": "808480"
  },
  {
    "text": "it really simple for pcb data to land on",
    "start": "808480",
    "end": "810480"
  },
  {
    "text": "the right worker thread",
    "start": "810480",
    "end": "811839"
  },
  {
    "text": "the kernel doesn't know about http 3.",
    "start": "811839",
    "end": "814000"
  },
  {
    "text": "the default kernel mechanism for",
    "start": "814000",
    "end": "815360"
  },
  {
    "text": "shipping ud packets to threads is",
    "start": "815360",
    "end": "817279"
  },
  {
    "text": "hashing on ip imports which is great if",
    "start": "817279",
    "end": "819680"
  },
  {
    "text": "you have a stable connection but less",
    "start": "819680",
    "end": "821680"
  },
  {
    "text": "good if you want to handle port",
    "start": "821680",
    "end": "822720"
  },
  {
    "text": "migration or connection migration",
    "start": "822720",
    "end": "825040"
  },
  {
    "text": "instead of worrying about these",
    "start": "825040",
    "end": "826079"
  },
  {
    "text": "misrouted packets we install a berkeley",
    "start": "826079",
    "end": "828320"
  },
  {
    "text": "packet filter which effectively teaches",
    "start": "828320",
    "end": "830079"
  },
  {
    "text": "a kernel how to hash on quick connection",
    "start": "830079",
    "end": "831680"
  },
  {
    "text": "ids ensuring packets will land on the",
    "start": "831680",
    "end": "833680"
  },
  {
    "text": "right worker thread",
    "start": "833680",
    "end": "836480"
  },
  {
    "text": "now that we've solved the problem of",
    "start": "836639",
    "end": "837920"
  },
  {
    "text": "landing packets on the right threads we",
    "start": "837920",
    "end": "839600"
  },
  {
    "text": "need to get them to the right",
    "start": "839600",
    "end": "840480"
  },
  {
    "text": "connections",
    "start": "840480",
    "end": "841680"
  },
  {
    "text": "all the packets for this thread's",
    "start": "841680",
    "end": "843279"
  },
  {
    "text": "connections will land on the same",
    "start": "843279",
    "end": "844320"
  },
  {
    "text": "listener and something needs to sort",
    "start": "844320",
    "end": "846000"
  },
  {
    "text": "them into individual connections that",
    "start": "846000",
    "end": "848079"
  },
  {
    "text": "entity is the dispatcher",
    "start": "848079",
    "end": "850000"
  },
  {
    "text": "it takes in all the udp packets for that",
    "start": "850000",
    "end": "851760"
  },
  {
    "text": "thread creates new logical connections",
    "start": "851760",
    "end": "854000"
  },
  {
    "text": "for new handshake packets and for",
    "start": "854000",
    "end": "855680"
  },
  {
    "text": "established connections just route the",
    "start": "855680",
    "end": "857120"
  },
  {
    "text": "packets to those connections",
    "start": "857120",
    "end": "859360"
  },
  {
    "text": "quick has one option for crypto and it's",
    "start": "859360",
    "end": "861440"
  },
  {
    "text": "tls13 so the server simply won't start",
    "start": "861440",
    "end": "863920"
  },
  {
    "text": "up if you configure a different",
    "start": "863920",
    "end": "865120"
  },
  {
    "text": "transport socket for quick",
    "start": "865120",
    "end": "867120"
  },
  {
    "text": "as the dispatcher handles forwarding",
    "start": "867120",
    "end": "868560"
  },
  {
    "text": "packets to the right connections there's",
    "start": "868560",
    "end": "870160"
  },
  {
    "text": "no need for the transport socket's",
    "start": "870160",
    "end": "871680"
  },
  {
    "text": "traditional read write support",
    "start": "871680",
    "end": "873760"
  },
  {
    "text": "there's also currently not support for",
    "start": "873760",
    "end": "875360"
  },
  {
    "text": "l4 filters for http 3. each quick stream",
    "start": "875360",
    "end": "878399"
  },
  {
    "text": "is logically an l4 connection and an l7",
    "start": "878399",
    "end": "881120"
  },
  {
    "text": "stream and we treat them as a ladder",
    "start": "881120",
    "end": "883600"
  },
  {
    "text": "there is the same need to turn the",
    "start": "883600",
    "end": "885279"
  },
  {
    "text": "stream of packets for connection into a",
    "start": "885279",
    "end": "886959"
  },
  {
    "text": "series of streams",
    "start": "886959",
    "end": "888480"
  },
  {
    "text": "the onboard quick server session does",
    "start": "888480",
    "end": "890079"
  },
  {
    "text": "this creating new server streams for",
    "start": "890079",
    "end": "891920"
  },
  {
    "text": "each http 3 stream these map one-to-one",
    "start": "891920",
    "end": "895360"
  },
  {
    "text": "with the streams inside the http",
    "start": "895360",
    "end": "896880"
  },
  {
    "text": "connection manager so as headers bodies",
    "start": "896880",
    "end": "899360"
  },
  {
    "text": "and data arrive at the quick server",
    "start": "899360",
    "end": "901120"
  },
  {
    "text": "streams they're passed to the on voice",
    "start": "901120",
    "end": "902800"
  },
  {
    "text": "stream representation and pass through",
    "start": "902800",
    "end": "904639"
  },
  {
    "text": "the l7 filters just as stream data does",
    "start": "904639",
    "end": "906880"
  },
  {
    "text": "for http 1 and http 2.",
    "start": "906880",
    "end": "910399"
  },
  {
    "start": "910000",
    "end": "910000"
  },
  {
    "text": "okay",
    "start": "910560",
    "end": "911360"
  },
  {
    "text": "now that we've established how http 3",
    "start": "911360",
    "end": "912959"
  },
  {
    "text": "works in envoy the real question is how",
    "start": "912959",
    "end": "914399"
  },
  {
    "text": "do we use it",
    "start": "914399",
    "end": "915600"
  },
  {
    "text": "i'm going to run through three example",
    "start": "915600",
    "end": "917040"
  },
  {
    "text": "configurations using hp downstream and",
    "start": "917040",
    "end": "919680"
  },
  {
    "text": "using http upstream all of these",
    "start": "919680",
    "end": "921760"
  },
  {
    "text": "examples are linked to the online repo",
    "start": "921760",
    "end": "923600"
  },
  {
    "text": "so if you have an envoy instance you can",
    "start": "923600",
    "end": "925199"
  },
  {
    "text": "run them pretty easily just by setting",
    "start": "925199",
    "end": "927040"
  },
  {
    "text": "the config path flag to one of the files",
    "start": "927040",
    "end": "929040"
  },
  {
    "text": "listed above",
    "start": "929040",
    "end": "931600"
  },
  {
    "text": "the first thing that we're going to run",
    "start": "932000",
    "end": "933199"
  },
  {
    "text": "through is how to use envoy to terminate",
    "start": "933199",
    "end": "934880"
  },
  {
    "text": "http3 traffic if you have edge envoy",
    "start": "934880",
    "end": "937759"
  },
  {
    "text": "deployments today you can pretty",
    "start": "937759",
    "end": "939440"
  },
  {
    "text": "trivially get the latency and quality of",
    "start": "939440",
    "end": "941279"
  },
  {
    "text": "experience gains for all major browser",
    "start": "941279",
    "end": "943199"
  },
  {
    "text": "traffic just by adding these sections to",
    "start": "943199",
    "end": "945040"
  },
  {
    "text": "your config file",
    "start": "945040",
    "end": "947040"
  },
  {
    "text": "for hdb3 deployments you still need to",
    "start": "947040",
    "end": "948959"
  },
  {
    "text": "maintain a tcp ttp lessener doing tls",
    "start": "948959",
    "end": "952079"
  },
  {
    "text": "for hp1 or hdb2 responses from that",
    "start": "952079",
    "end": "955040"
  },
  {
    "text": "listener should inform clients you now",
    "start": "955040",
    "end": "956399"
  },
  {
    "text": "support each to b3",
    "start": "956399",
    "end": "958240"
  },
  {
    "text": "we do this here by sticking an alt",
    "start": "958240",
    "end": "959759"
  },
  {
    "text": "service header in response headers to",
    "start": "959759",
    "end": "961600"
  },
  {
    "text": "add",
    "start": "961600",
    "end": "962320"
  },
  {
    "text": "so for this route browsers will now try",
    "start": "962320",
    "end": "964320"
  },
  {
    "text": "to do http 3 for all the hostnames they",
    "start": "964320",
    "end": "966480"
  },
  {
    "text": "encounter and they'll direct that http 3",
    "start": "966480",
    "end": "968880"
  },
  {
    "text": "to port 1000. now normally in production",
    "start": "968880",
    "end": "971519"
  },
  {
    "text": "that would be 443 but for the example",
    "start": "971519",
    "end": "973680"
  },
  {
    "text": "configs we wanted folks to be able to",
    "start": "973680",
    "end": "975360"
  },
  {
    "text": "play around without needing root",
    "start": "975360",
    "end": "976800"
  },
  {
    "text": "credentials so we picked an alternate",
    "start": "976800",
    "end": "978160"
  },
  {
    "text": "port",
    "start": "978160",
    "end": "980320"
  },
  {
    "text": "of course you also have to have the http",
    "start": "980320",
    "end": "981920"
  },
  {
    "text": "3 listener or rather a udp listener",
    "start": "981920",
    "end": "983839"
  },
  {
    "text": "configured to do http 3 and this is what",
    "start": "983839",
    "end": "986000"
  },
  {
    "text": "that looks like",
    "start": "986000",
    "end": "987199"
  },
  {
    "text": "it's a standard udp listener with quick",
    "start": "987199",
    "end": "989120"
  },
  {
    "text": "options to tell the listener code it'll",
    "start": "989120",
    "end": "990880"
  },
  {
    "text": "be doing quick and then a transport",
    "start": "990880",
    "end": "992800"
  },
  {
    "text": "socket with a quick crypto config to",
    "start": "992800",
    "end": "994480"
  },
  {
    "text": "make sure it does it's tls13 correctly",
    "start": "994480",
    "end": "996880"
  },
  {
    "text": "the listener is running on port 10000",
    "start": "996880",
    "end": "998480"
  },
  {
    "text": "since that's what the alt service",
    "start": "998480",
    "end": "999680"
  },
  {
    "text": "advertisement is set to",
    "start": "999680",
    "end": "1001519"
  },
  {
    "text": "you can also get fancier with your alt",
    "start": "1001519",
    "end": "1002959"
  },
  {
    "text": "service headers directing quick traffic",
    "start": "1002959",
    "end": "1004720"
  },
  {
    "text": "to a set of canary clusters rather than",
    "start": "1004720",
    "end": "1006560"
  },
  {
    "text": "having your quick server and tcp servers",
    "start": "1006560",
    "end": "1008240"
  },
  {
    "text": "in the same process if you want to scale",
    "start": "1008240",
    "end": "1010000"
  },
  {
    "text": "up more slowly and carefully",
    "start": "1010000",
    "end": "1013199"
  },
  {
    "text": "getting envoy to do h3 upstream is even",
    "start": "1013600",
    "end": "1016000"
  },
  {
    "text": "simpler you just configure the cluster's",
    "start": "1016000",
    "end": "1017920"
  },
  {
    "text": "protocol options to do h2b3 and",
    "start": "1017920",
    "end": "1020320"
  },
  {
    "text": "configure a quick transport socket",
    "start": "1020320",
    "end": "1022639"
  },
  {
    "text": "now note this particular setup is great",
    "start": "1022639",
    "end": "1024480"
  },
  {
    "text": "for a lab environment or local service",
    "start": "1024480",
    "end": "1026400"
  },
  {
    "text": "mesh where you can guarantee that hv3",
    "start": "1026400",
    "end": "1028160"
  },
  {
    "text": "will work on that network it's not a",
    "start": "1028160",
    "end": "1029839"
  },
  {
    "text": "sensible thing to do for internet facing",
    "start": "1029839",
    "end": "1031280"
  },
  {
    "text": "deployments",
    "start": "1031280",
    "end": "1032558"
  },
  {
    "text": "it's hardcoded to do only http 3 and",
    "start": "1032559",
    "end": "1034558"
  },
  {
    "text": "there's no failover to tcp if udp443 is",
    "start": "1034559",
    "end": "1037438"
  },
  {
    "text": "blocked",
    "start": "1037439",
    "end": "1039839"
  },
  {
    "start": "1039000",
    "end": "1039000"
  },
  {
    "text": "this example shows envoy negotiating the",
    "start": "1040559",
    "end": "1042720"
  },
  {
    "text": "upstream protocol in this case we've",
    "start": "1042720",
    "end": "1045038"
  },
  {
    "text": "switched from the explicit http config",
    "start": "1045039",
    "end": "1047120"
  },
  {
    "text": "to auto config meaning envoy will use",
    "start": "1047120",
    "end": "1049360"
  },
  {
    "text": "the best available protocol",
    "start": "1049360",
    "end": "1051520"
  },
  {
    "text": "here it'll start out doing tcp tls and",
    "start": "1051520",
    "end": "1054480"
  },
  {
    "text": "do alpn to negotiate if it's using http",
    "start": "1054480",
    "end": "1056720"
  },
  {
    "text": "1 or http 2.",
    "start": "1056720",
    "end": "1058400"
  },
  {
    "text": "if it gets a response with alt service",
    "start": "1058400",
    "end": "1060000"
  },
  {
    "text": "headers for http 3 only will cache that",
    "start": "1060000",
    "end": "1062480"
  },
  {
    "text": "the endpoint uses http 3 and attempt to",
    "start": "1062480",
    "end": "1064880"
  },
  {
    "text": "use that going forward",
    "start": "1064880",
    "end": "1066480"
  },
  {
    "text": "if each v3 fails consistently despite",
    "start": "1066480",
    "end": "1068960"
  },
  {
    "text": "the l-service advertisement onway will",
    "start": "1068960",
    "end": "1070880"
  },
  {
    "text": "keep on using tcp connections and",
    "start": "1070880",
    "end": "1072880"
  },
  {
    "text": "eventually h3 gets marked broken the",
    "start": "1072880",
    "end": "1075360"
  },
  {
    "text": "important part is that with this",
    "start": "1075360",
    "end": "1076559"
  },
  {
    "text": "configuration envoy will try to use the",
    "start": "1076559",
    "end": "1078640"
  },
  {
    "text": "best available protocol but we'll make",
    "start": "1078640",
    "end": "1080400"
  },
  {
    "text": "sure at the end of the day the queries",
    "start": "1080400",
    "end": "1081840"
  },
  {
    "text": "get through as quickly as possible",
    "start": "1081840",
    "end": "1084240"
  },
  {
    "text": "there's more data about the timing of",
    "start": "1084240",
    "end": "1085840"
  },
  {
    "text": "trying http 3 failing over to tcp how",
    "start": "1085840",
    "end": "1088640"
  },
  {
    "text": "connections get marked broken in the",
    "start": "1088640",
    "end": "1090320"
  },
  {
    "text": "envoy docs so feel free to check those",
    "start": "1090320",
    "end": "1092400"
  },
  {
    "text": "out if you want the gritty details we've",
    "start": "1092400",
    "end": "1094240"
  },
  {
    "text": "largely set up the default timings to",
    "start": "1094240",
    "end": "1095760"
  },
  {
    "text": "match what chrome's been doing for",
    "start": "1095760",
    "end": "1096799"
  },
  {
    "text": "failover which has been tested at scale",
    "start": "1096799",
    "end": "1098640"
  },
  {
    "text": "of the real world it does a great job of",
    "start": "1098640",
    "end": "1100240"
  },
  {
    "text": "balancing the desire to do each v3 where",
    "start": "1100240",
    "end": "1102080"
  },
  {
    "text": "it's possible while minimizing time",
    "start": "1102080",
    "end": "1103840"
  },
  {
    "text": "waiting on http connections on networks",
    "start": "1103840",
    "end": "1105679"
  },
  {
    "text": "where it's blocked",
    "start": "1105679",
    "end": "1108400"
  },
  {
    "start": "1108000",
    "end": "1108000"
  },
  {
    "text": "one last thing i want to call out before",
    "start": "1108400",
    "end": "1109679"
  },
  {
    "text": "we go to q a the quick j is coming",
    "start": "1109679",
    "end": "1111840"
  },
  {
    "text": "really soon the config is stabilized and",
    "start": "1111840",
    "end": "1114080"
  },
  {
    "text": "is being tested at scale and production",
    "start": "1114080",
    "end": "1115760"
  },
  {
    "text": "as we speak we're down to four blockers",
    "start": "1115760",
    "end": "1117520"
  },
  {
    "text": "which are all pretty small i was",
    "start": "1117520",
    "end": "1119200"
  },
  {
    "text": "honestly hoping it would land this week",
    "start": "1119200",
    "end": "1120559"
  },
  {
    "text": "rather than in a week or two so i could",
    "start": "1120559",
    "end": "1122000"
  },
  {
    "text": "announce it here but we'd really rather",
    "start": "1122000",
    "end": "1123600"
  },
  {
    "text": "have it solid than rush anything",
    "start": "1123600",
    "end": "1125679"
  },
  {
    "text": "after that our team is going to be head",
    "start": "1125679",
    "end": "1127600"
  },
  {
    "text": "down getting fully functional http 3 for",
    "start": "1127600",
    "end": "1129520"
  },
  {
    "text": "onslaught mobile this is largely making",
    "start": "1129520",
    "end": "1131440"
  },
  {
    "text": "sure that things like the alt surface",
    "start": "1131440",
    "end": "1132799"
  },
  {
    "text": "entries and zero run trip credentials",
    "start": "1132799",
    "end": "1134640"
  },
  {
    "text": "are cached persistently across",
    "start": "1134640",
    "end": "1135919"
  },
  {
    "text": "application restarts you lose some of",
    "start": "1135919",
    "end": "1137760"
  },
  {
    "text": "the latency benefits that every time",
    "start": "1137760",
    "end": "1139039"
  },
  {
    "text": "your app loses focus it forgets to use",
    "start": "1139039",
    "end": "1140880"
  },
  {
    "text": "http 3 and has to do a full handshake",
    "start": "1140880",
    "end": "1142880"
  },
  {
    "text": "but there's also work to be done for the",
    "start": "1142880",
    "end": "1144160"
  },
  {
    "text": "black hole detection and port migration",
    "start": "1144160",
    "end": "1146000"
  },
  {
    "text": "things that ryan mentioned earlier",
    "start": "1146000",
    "end": "1147760"
  },
  {
    "text": "hopefully we'll be able to finish that",
    "start": "1147760",
    "end": "1148960"
  },
  {
    "text": "work quickly and start using h3 for",
    "start": "1148960",
    "end": "1150880"
  },
  {
    "text": "online mobile early next year",
    "start": "1150880",
    "end": "1153039"
  },
  {
    "text": "we should have time for q a after this",
    "start": "1153039",
    "end": "1155120"
  },
  {
    "text": "but if you're watching this online or",
    "start": "1155120",
    "end": "1156480"
  },
  {
    "text": "have questions we didn't get to feel",
    "start": "1156480",
    "end": "1158080"
  },
  {
    "text": "free to reach out to us on voice slack",
    "start": "1158080",
    "end": "1159919"
  },
  {
    "text": "we keep an eye on the envoy udp quick",
    "start": "1159919",
    "end": "1162160"
  },
  {
    "text": "dev channel so it's a great place to",
    "start": "1162160",
    "end": "1163679"
  },
  {
    "text": "keep in touch with what's going on or",
    "start": "1163679",
    "end": "1165120"
  },
  {
    "text": "ask questions about what's coming",
    "start": "1165120",
    "end": "1167360"
  },
  {
    "text": "so thanks and any questions",
    "start": "1167360",
    "end": "1171559"
  }
]