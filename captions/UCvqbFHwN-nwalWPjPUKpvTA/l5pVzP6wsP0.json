[
  {
    "text": "hello and welcome to today's cloud native webinar on flux and oci",
    "start": "2080",
    "end": "11040"
  },
  {
    "text": "my name is max i'm a core flux maintainer i've been on that role for",
    "start": "11040",
    "end": "17440"
  },
  {
    "text": "about a year now and i'm a senior software engineer at wiefworks and there i'm",
    "start": "17440",
    "end": "23039"
  },
  {
    "text": "working mostly on multi-cluster kubernetes with weave get ops",
    "start": "23039",
    "end": "29359"
  },
  {
    "text": "and also on flux itself yeah as it says on the slide i love",
    "start": "29359",
    "end": "35440"
  },
  {
    "text": "working on distributed system i love programming and go which is a language i",
    "start": "35440",
    "end": "43440"
  },
  {
    "text": "quickly learned to like very much because of its simplicity",
    "start": "43440",
    "end": "49440"
  },
  {
    "text": "and ease of deployment i should say",
    "start": "49440",
    "end": "54800"
  },
  {
    "text": "and i'm very passionate about free and open source software",
    "start": "54800",
    "end": "60559"
  },
  {
    "text": "our agenda for this webinar will be as follows i will introduce you to",
    "start": "61199",
    "end": "68960"
  },
  {
    "text": "the terminology and semantics of getups and flux itself what flux is and",
    "start": "68960",
    "end": "77600"
  },
  {
    "text": "how it got to be and i will introduce you also to oci",
    "start": "77920",
    "end": "84000"
  },
  {
    "text": "what these three letters stand for and where is it coming from",
    "start": "84000",
    "end": "91520"
  },
  {
    "text": "and then we're gonna get our hands dirty looking into",
    "start": "91520",
    "end": "96799"
  },
  {
    "text": "what flux can offer with oci and conjunction",
    "start": "96799",
    "end": "102799"
  },
  {
    "text": "um i'm gonna show you that it's still getups and we're going to run through",
    "start": "102799",
    "end": "109600"
  },
  {
    "text": "two demos one for helm and one for customize",
    "start": "109600",
    "end": "115560"
  },
  {
    "text": "so what is get ups to begin with get ups evolved into these four",
    "start": "117520",
    "end": "123759"
  },
  {
    "text": "principles that are outlined on the slide the first one is",
    "start": "123759",
    "end": "128959"
  },
  {
    "text": "um a git up system is declarative that means the system managed by ghettos must",
    "start": "128959",
    "end": "135120"
  },
  {
    "text": "have its desired state expressed declaratively for example kubernetes",
    "start": "135120",
    "end": "140879"
  },
  {
    "text": "where each state for example a deployment",
    "start": "140879",
    "end": "146879"
  },
  {
    "text": "is declared in a manifest file getups means",
    "start": "146879",
    "end": "152720"
  },
  {
    "text": "state is versioned and immutable so the desired state is in a way that",
    "start": "152720",
    "end": "158560"
  },
  {
    "text": "enforces immutability as with git where an object reference",
    "start": "158560",
    "end": "164720"
  },
  {
    "text": "cannot change it provides versioning and retains a",
    "start": "164720",
    "end": "169920"
  },
  {
    "text": "complete version history the third principle pulled automatically",
    "start": "169920",
    "end": "176959"
  },
  {
    "text": "means that software agents running on the system",
    "start": "176959",
    "end": "182319"
  },
  {
    "text": "that uses githubs pull the desired state from the source which is from a get repository or as",
    "start": "182319",
    "end": "190319"
  },
  {
    "text": "we'll see today from an oci distribution getups also means and that's the fourth",
    "start": "190319",
    "end": "197040"
  },
  {
    "text": "principle that the state is continuously reconciled so",
    "start": "197040",
    "end": "202400"
  },
  {
    "text": "it's not only that you declare your manifests you store them in a version way",
    "start": "202400",
    "end": "207840"
  },
  {
    "text": "and then an agent pulls them but this agent continuously observes",
    "start": "207840",
    "end": "213519"
  },
  {
    "text": "not only the the state of of the source of these manifests for example a gate repository",
    "start": "213519",
    "end": "220480"
  },
  {
    "text": "but it always tries to match the actual state of the system",
    "start": "220480",
    "end": "226319"
  },
  {
    "text": "with the desired state of the system so any system that follows these four",
    "start": "226319",
    "end": "231440"
  },
  {
    "text": "principles can be called a get up system",
    "start": "231440",
    "end": "236159"
  },
  {
    "text": "and why would people want to use get ups in the first place",
    "start": "237840",
    "end": "242959"
  },
  {
    "text": "and i've put some bullets on this slide who lay out the major benefits you get stronger security",
    "start": "243040",
    "end": "250000"
  },
  {
    "text": "guarantees you have much more developer and operational productivity",
    "start": "250000",
    "end": "256720"
  },
  {
    "text": "you have a better developer experience developers can just write their manifest files push them to",
    "start": "256720",
    "end": "263759"
  },
  {
    "text": "get have a ci pick them up and then the system will reconcile them",
    "start": "263759",
    "end": "269440"
  },
  {
    "text": "you have an improved stability especially because of the immutability",
    "start": "269440",
    "end": "277280"
  },
  {
    "text": "principle you have a higher reliability because the agents continuously",
    "start": "277600",
    "end": "283199"
  },
  {
    "text": "try to reconcile the desired state with",
    "start": "283199",
    "end": "288240"
  },
  {
    "text": "the act with the actual state and it also provides a way to be",
    "start": "288240",
    "end": "294639"
  },
  {
    "text": "consistent and standardized and now what is flux",
    "start": "294639",
    "end": "301280"
  },
  {
    "text": "flux is at first an implementation of the four getups principles",
    "start": "301280",
    "end": "307199"
  },
  {
    "text": "and it also is a cncf open source project",
    "start": "307199",
    "end": "312160"
  },
  {
    "text": "flux in one sentence is a git centric package manager for your applications",
    "start": "312320",
    "end": "319840"
  },
  {
    "text": "and it is a set of continuous and progressive delivery solutions for kubernetes",
    "start": "319840",
    "end": "325280"
  },
  {
    "text": "so it's very much fit for any kubernetes deployment",
    "start": "325280",
    "end": "331039"
  },
  {
    "text": "the benefits are very much aligned with the benefits of git ups",
    "start": "331039",
    "end": "337120"
  },
  {
    "text": "in general you reduce developer burden when you use",
    "start": "337120",
    "end": "342479"
  },
  {
    "text": "flux it is very extensible it even provides a goal api where you",
    "start": "342479",
    "end": "348400"
  },
  {
    "text": "can build your own components on top of the core flux components",
    "start": "348400",
    "end": "355360"
  },
  {
    "text": "it comes with out of the box support for customizing helm and as i said before it is designed for",
    "start": "355360",
    "end": "362000"
  },
  {
    "text": "kubernetes so kubernetes is like a first class citizen",
    "start": "362000",
    "end": "368000"
  },
  {
    "text": "in the flux world",
    "start": "368000",
    "end": "370880"
  },
  {
    "text": "so it provides githubs for not only your apps but also your infrastructure",
    "start": "373039",
    "end": "378880"
  },
  {
    "text": "so you can have your cluster completely declared and and a get repository and",
    "start": "378880",
    "end": "385520"
  },
  {
    "text": "flux will make sure to install all the applications and",
    "start": "385520",
    "end": "391520"
  },
  {
    "text": "infrastructure components it integrates well with existing tooling",
    "start": "391520",
    "end": "398720"
  },
  {
    "text": "so it is as opinionated as necessary",
    "start": "398720",
    "end": "404000"
  },
  {
    "text": "but as dynamic as possible",
    "start": "404000",
    "end": "409360"
  },
  {
    "text": "it works with kubernetes multi-tenancy is built in so the flux cli for example provides",
    "start": "409360",
    "end": "416560"
  },
  {
    "text": "commands for for managing multiple tenants on a",
    "start": "416560",
    "end": "422319"
  },
  {
    "text": "cluster plexus ways to alert and notify users",
    "start": "422319",
    "end": "428960"
  },
  {
    "text": "upon certain actions this is done using crds you are very flexible with which",
    "start": "428960",
    "end": "436560"
  },
  {
    "text": "actions you want to trigger an alert from uses trust flux so we have a huge user",
    "start": "436560",
    "end": "442639"
  },
  {
    "text": "base among the cloud native community and flux itself has a very lovely",
    "start": "442639",
    "end": "449840"
  },
  {
    "text": "community and i myself experienced that when i first got in touch with flux",
    "start": "449840",
    "end": "456400"
  },
  {
    "text": "around one and a half years ago it's just a",
    "start": "456400",
    "end": "462319"
  },
  {
    "text": "very lovely experience being in touch with the flux community in general",
    "start": "462319",
    "end": "469440"
  },
  {
    "text": "flux is a set of controllers so it does all what is laid out here",
    "start": "469919",
    "end": "479840"
  },
  {
    "text": "in one of these controllers so there's source controller for example",
    "start": "482960",
    "end": "488560"
  },
  {
    "text": "that actually clones a git repository or",
    "start": "488560",
    "end": "493759"
  },
  {
    "text": "fetches a home repository index or fetches an oci image",
    "start": "493759",
    "end": "499840"
  },
  {
    "text": "from an oci registry as we'll see later in the demo then we have customized controller that",
    "start": "499840",
    "end": "506960"
  },
  {
    "text": "implements um flux's opinionated way of applying customize",
    "start": "506960",
    "end": "514719"
  },
  {
    "text": "it as a helm controller so you can very easily use flux to deploy home charts",
    "start": "514719",
    "end": "519839"
  },
  {
    "text": "and create homolysis notification controller",
    "start": "519839",
    "end": "524959"
  },
  {
    "text": "is a separate component that is configured using crds",
    "start": "524959",
    "end": "530720"
  },
  {
    "text": "then there's image reflector controller that you can leverage",
    "start": "530880",
    "end": "536320"
  },
  {
    "text": "for image automations",
    "start": "536320",
    "end": "541440"
  },
  {
    "text": "but also for other things so image reflector controller basically tracks",
    "start": "541440",
    "end": "546880"
  },
  {
    "text": "an image registry which is also an oci registry um and",
    "start": "546880",
    "end": "553440"
  },
  {
    "text": "for example reflects the the latest tag of a certain image",
    "start": "553440",
    "end": "559120"
  },
  {
    "text": "in the cluster and makes it very easy to act upon new images being pushed to",
    "start": "559120",
    "end": "564399"
  },
  {
    "text": "registry for example which is something that image automation controller does so",
    "start": "564399",
    "end": "569839"
  },
  {
    "text": "image reflector controller and image automation controller taken together let you",
    "start": "569839",
    "end": "575279"
  },
  {
    "text": "automatically update your applications based on the images that are available",
    "start": "575279",
    "end": "581279"
  },
  {
    "text": "and flux can even commit to your git repository automatically if you configure it",
    "start": "581279",
    "end": "587600"
  },
  {
    "text": "so so the next thing that i quickly want to dive into is what is oci",
    "start": "588839",
    "end": "594959"
  },
  {
    "text": "so oci stands for the open containers initiative that was founded in 2015 by docker and",
    "start": "594959",
    "end": "602000"
  },
  {
    "text": "others so basically docker the company took what they had and",
    "start": "602000",
    "end": "608240"
  },
  {
    "text": "brought it to the uci um to have a more like to have a bigger community around",
    "start": "608240",
    "end": "615680"
  },
  {
    "text": "docker containers and it is part of the linux foundation",
    "start": "615680",
    "end": "621360"
  },
  {
    "text": "it provides several specifications for image formats distribution and execution",
    "start": "621920",
    "end": "630240"
  },
  {
    "text": "and these three brought together pro provide a very powerful tool set and",
    "start": "630240",
    "end": "636160"
  },
  {
    "text": "as you can see here when i issue docker run and provide it with a certain image",
    "start": "636160",
    "end": "643839"
  },
  {
    "text": "um and a registry name these three specifications work together",
    "start": "643839",
    "end": "650800"
  },
  {
    "text": "so there's execution which is uh symbolized here by docker run so there's",
    "start": "650800",
    "end": "657040"
  },
  {
    "text": "a runtime running on the computer that takes care of executing the image",
    "start": "657040",
    "end": "662160"
  },
  {
    "text": "and then there's the address of the registry docker.io",
    "start": "662160",
    "end": "668240"
  },
  {
    "text": "which implements the distribution specification and eventually the image itself that is",
    "start": "668240",
    "end": "675839"
  },
  {
    "text": "pulled from the registry um is specified by the image from that",
    "start": "675839",
    "end": "683360"
  },
  {
    "text": "specification",
    "start": "683360",
    "end": "686360"
  },
  {
    "text": "and ever since the oci was founded um usage of its specifications",
    "start": "690160",
    "end": "698160"
  },
  {
    "text": "as soon as they came out has transformed from only docker containers that run a",
    "start": "698160",
    "end": "705120"
  },
  {
    "text": "certain application in a certain way in a certain run time",
    "start": "705120",
    "end": "710160"
  },
  {
    "text": "to a very generic application and configuration container format",
    "start": "710160",
    "end": "717440"
  },
  {
    "text": "so it is becoming an application delivery format",
    "start": "717440",
    "end": "723040"
  },
  {
    "text": "there's several prototype and also product ready",
    "start": "725279",
    "end": "730720"
  },
  {
    "text": "solutions out there that show what is possible with oci",
    "start": "730720",
    "end": "736720"
  },
  {
    "text": "so there's car which is a personal project from chris nova",
    "start": "736720",
    "end": "743120"
  },
  {
    "text": "where you can save your configuration of the application together with the actual",
    "start": "743120",
    "end": "748880"
  },
  {
    "text": "application in the form of a container image in one container image",
    "start": "748880",
    "end": "754480"
  },
  {
    "text": "and then when you want to run it you have like only a single image that you pull or that you distribute it to your",
    "start": "754480",
    "end": "760480"
  },
  {
    "text": "users and they have everything in that single image the",
    "start": "760480",
    "end": "765600"
  },
  {
    "text": "configuration as well as the executable",
    "start": "765600",
    "end": "770399"
  },
  {
    "text": "application and then there's customizer a project by",
    "start": "770839",
    "end": "776079"
  },
  {
    "text": "one of flux's core maintainer stefan and that's very very similar to what flux",
    "start": "776079",
    "end": "782079"
  },
  {
    "text": "does with customize and what we're going to see in the demos there's also a quite new project",
    "start": "782079",
    "end": "790560"
  },
  {
    "text": "and a company that has been founded around it called acorn",
    "start": "790560",
    "end": "796240"
  },
  {
    "text": "and acorn uses oci for bundling",
    "start": "796240",
    "end": "801360"
  },
  {
    "text": "applications as oci images so you have a very nice front end a very simple way of",
    "start": "801360",
    "end": "807839"
  },
  {
    "text": "declaring an application and then acorn pulls all the",
    "start": "807839",
    "end": "813200"
  },
  {
    "text": "definition coming from that front-end configuration creates an ocr image from it pushes it",
    "start": "813200",
    "end": "820320"
  },
  {
    "text": "to a container registry and then the acorn agent warning in kubernetes",
    "start": "820320",
    "end": "826480"
  },
  {
    "text": "makes sure to execute the application as it is configured",
    "start": "826480",
    "end": "832160"
  },
  {
    "text": "and google is also heavily invested into oci for example with config sync",
    "start": "832160",
    "end": "839199"
  },
  {
    "text": "which is part of google anthos and can also consume various kinds of oci images",
    "start": "839199",
    "end": "847040"
  },
  {
    "text": "and the great thing about oci besides its open specifications is that oci",
    "start": "848560",
    "end": "856000"
  },
  {
    "text": "registries are already a commodity in the cloud space so every",
    "start": "856000",
    "end": "862480"
  },
  {
    "text": "cloud provider has an oci registry warning that hosts",
    "start": "862480",
    "end": "867839"
  },
  {
    "text": "the application images so the docker images if you will",
    "start": "867839",
    "end": "873199"
  },
  {
    "text": "but there's also lots of other implementations out there and the auros project actually provides a list of",
    "start": "873199",
    "end": "879440"
  },
  {
    "text": "these implementations the simplest one is shown here below",
    "start": "879440",
    "end": "886720"
  },
  {
    "text": "which is distributed in the form of the registry container image",
    "start": "886720",
    "end": "893199"
  },
  {
    "text": "that you can just run using docker run registry column 2 and then you have a full-blown",
    "start": "893199",
    "end": "899279"
  },
  {
    "text": "oci registry warning on your machine",
    "start": "899279",
    "end": "904000"
  },
  {
    "text": "and now when oci and flux come together oftentimes people ask",
    "start": "906560",
    "end": "912639"
  },
  {
    "text": "how is this still get ups like flux when it only pulls images from a",
    "start": "912639",
    "end": "918399"
  },
  {
    "text": "container registry it's not pulling anything from git so",
    "start": "918399",
    "end": "923440"
  },
  {
    "text": "can we still call it get ups but if you look closely at the",
    "start": "923440",
    "end": "929920"
  },
  {
    "text": "principles that i described above oci satisfies",
    "start": "929920",
    "end": "936240"
  },
  {
    "text": "all four principles and eventually git is still the source",
    "start": "936240",
    "end": "941279"
  },
  {
    "text": "of truth it's just that an rci registry now serves as an intermediary",
    "start": "941279",
    "end": "948160"
  },
  {
    "text": "where all the manifests are pushed to and that flux pulls from",
    "start": "948160",
    "end": "953440"
  },
  {
    "text": "right so before oci you push to get and then flux directly",
    "start": "953440",
    "end": "960079"
  },
  {
    "text": "clone the get repository and reconcile the cluster state with the",
    "start": "960079",
    "end": "966160"
  },
  {
    "text": "desired state and get and now you push you push to get",
    "start": "966160",
    "end": "972959"
  },
  {
    "text": "you have a ci running that creates artifacts pushes them to an oci registry",
    "start": "972959",
    "end": "978720"
  },
  {
    "text": "and flux pulls from there so it's not very different",
    "start": "978720",
    "end": "984480"
  },
  {
    "text": "but eventually it provides better security and much better scalability",
    "start": "986399",
    "end": "993680"
  },
  {
    "text": "so pulling an oci image is much less resource intensive compared to full or even a shallow git",
    "start": "993680",
    "end": "1000720"
  },
  {
    "text": "clone high available registries as i said before are available everywhere so if",
    "start": "1000720",
    "end": "1007600"
  },
  {
    "text": "you're running on aws if you're running on gcp or azure",
    "start": "1007600",
    "end": "1012959"
  },
  {
    "text": "you will have an oci registry available available for your purposes",
    "start": "1012959",
    "end": "1019680"
  },
  {
    "text": "and in terms of security flux leverages kubernetes workload identity",
    "start": "1020240",
    "end": "1025438"
  },
  {
    "text": "and iim on pulling lci artifacts so you don't have to manage any keys anymore on",
    "start": "1025439",
    "end": "1032319"
  },
  {
    "text": "your cluster or even in your git repository there's no more ssh keys to wrangle and",
    "start": "1032319",
    "end": "1038880"
  },
  {
    "text": "to generate to make sure they are revoked from time to time",
    "start": "1038880",
    "end": "1044480"
  },
  {
    "text": "and there's no more proprietary api usage for example having to head up the github api to create a token with a",
    "start": "1044480",
    "end": "1052559"
  },
  {
    "text": "certain scope it's actually using the same mechanism that's used for pulling containers",
    "start": "1052559",
    "end": "1059440"
  },
  {
    "text": "because pulling containers and pulling anything else from an oci registry is just the same thing in terms of",
    "start": "1059440",
    "end": "1067440"
  },
  {
    "text": "security authentication",
    "start": "1067440",
    "end": "1071440"
  },
  {
    "text": "and very soon we'll be merging a pr that lets you",
    "start": "1072480",
    "end": "1078400"
  },
  {
    "text": "verify the images that flux pull down using cosine",
    "start": "1078400",
    "end": "1083840"
  },
  {
    "text": "we're currently working on that and trying hard to make it available as soon as possible in flux",
    "start": "1083840",
    "end": "1092840"
  },
  {
    "text": "and i want to show a demo how you use and leverage oci in flux for",
    "start": "1094000",
    "end": "1100000"
  },
  {
    "text": "helm and for customize",
    "start": "1100000",
    "end": "1103600"
  },
  {
    "text": "we are at the terminal now and i would like to start this demonstration",
    "start": "1105919",
    "end": "1110960"
  },
  {
    "text": "by showing how you can leverage oci registries to deploy home charts",
    "start": "1110960",
    "end": "1118880"
  },
  {
    "text": "i have cluster running locally here simple kind cluster",
    "start": "1118880",
    "end": "1126320"
  },
  {
    "text": "and we are going to start by creating the helm demo namespace",
    "start": "1126320",
    "end": "1134799"
  },
  {
    "text": "now i'm going to use the flux cli a lot however for",
    "start": "1134799",
    "end": "1140960"
  },
  {
    "text": "90 of the actions that i'm showing here",
    "start": "1141120",
    "end": "1146400"
  },
  {
    "text": "the flux cli is not really necessary because",
    "start": "1146400",
    "end": "1152559"
  },
  {
    "text": "all it does in this demo is it creates kubernetes",
    "start": "1152559",
    "end": "1158320"
  },
  {
    "text": "objects and in a production workflow you would just store these kubernetes objects in",
    "start": "1158320",
    "end": "1164720"
  },
  {
    "text": "your get repository all right there's one exception",
    "start": "1164720",
    "end": "1170799"
  },
  {
    "text": "and i'm going to call that out later when we get to it all right let's create a source",
    "start": "1170799",
    "end": "1180720"
  },
  {
    "text": "of type helm call it pod info because that's what the",
    "start": "1181360",
    "end": "1186559"
  },
  {
    "text": "application that we're going to deploy is called",
    "start": "1186559",
    "end": "1191880"
  },
  {
    "text": "and now the difference compared to",
    "start": "1192080",
    "end": "1197600"
  },
  {
    "text": "https based plain old helm rep repositories is that the url",
    "start": "1197600",
    "end": "1205039"
  },
  {
    "text": "starts with the oci scheme now and it's pointing to ghcr which is",
    "start": "1205039",
    "end": "1211840"
  },
  {
    "text": "github's own container registry",
    "start": "1211840",
    "end": "1216159"
  },
  {
    "text": "as you can see it just generates a home repository that we can just inspect",
    "start": "1217679",
    "end": "1225679"
  },
  {
    "text": "and if you're used to using helm with flux this doesn't look very different",
    "start": "1230720",
    "end": "1238080"
  },
  {
    "text": "with the exception that the type is now set to oci here and the url as i",
    "start": "1238080",
    "end": "1245679"
  },
  {
    "text": "said before starts with the oci scheme and not https",
    "start": "1245679",
    "end": "1252320"
  },
  {
    "text": "and now based on this source we can create",
    "start": "1252320",
    "end": "1257360"
  },
  {
    "text": "a homolyse we're going to call it pod info as well",
    "start": "1260400",
    "end": "1266000"
  },
  {
    "text": "you're pointing it to the helmet repository that we just created and to the chart that we want to deploy",
    "start": "1273600",
    "end": "1282720"
  },
  {
    "text": "so what you can also do if you don't want to maintain",
    "start": "1286720",
    "end": "1291919"
  },
  {
    "text": "a home repository per chart",
    "start": "1291919",
    "end": "1296720"
  },
  {
    "text": "or even per per oci namespace is you can create a home repository that just",
    "start": "1297440",
    "end": "1304480"
  },
  {
    "text": "points to the to the domain or to the base of the oci registry",
    "start": "1304480",
    "end": "1310480"
  },
  {
    "text": "so basically just just point it to ghcr.io",
    "start": "1310480",
    "end": "1317039"
  },
  {
    "text": "and then if you do that you have to provide the the complete path to the chart so in",
    "start": "1317039",
    "end": "1324559"
  },
  {
    "text": "that case we would have to do something like this",
    "start": "1324559",
    "end": "1330000"
  },
  {
    "text": "and the homilies that's something that has come up in the community and being asked for and one of",
    "start": "1330000",
    "end": "1336880"
  },
  {
    "text": "the latest additions um [Music] to flux so that you don't have to maintain",
    "start": "1336880",
    "end": "1344000"
  },
  {
    "text": "a lot of home repository objects in your cluster for the purposes of this demo",
    "start": "1344000",
    "end": "1350960"
  },
  {
    "text": "we're gonna keep it simple",
    "start": "1350960",
    "end": "1356000"
  },
  {
    "text": "it's generating the homilies the homilies pardon four has become",
    "start": "1357039",
    "end": "1363440"
  },
  {
    "text": "ready and we can have a look at it",
    "start": "1363440",
    "end": "1370240"
  },
  {
    "text": "and again if you're used to using with flux this",
    "start": "1370240",
    "end": "1375840"
  },
  {
    "text": "is 100 looking the same as before as you it would if",
    "start": "1375840",
    "end": "1382640"
  },
  {
    "text": "this was based on a chart served through an http hum",
    "start": "1382640",
    "end": "1388880"
  },
  {
    "text": "repository so if you're already using that the only thing that you would have to change is",
    "start": "1388880",
    "end": "1396799"
  },
  {
    "text": "the the source the home repository and not your homogeneous which makes migration",
    "start": "1396799",
    "end": "1402720"
  },
  {
    "text": "to oci a lot simpler",
    "start": "1402720",
    "end": "1407039"
  },
  {
    "text": "let's verify that pods are there and that the service is there everything",
    "start": "1408799",
    "end": "1415520"
  },
  {
    "text": "has become ready and it's as simple as that",
    "start": "1415520",
    "end": "1421120"
  },
  {
    "text": "so consuming health charts from oci registries",
    "start": "1421120",
    "end": "1427600"
  },
  {
    "text": "doesn't change very much in terms of your workflow especially if you're",
    "start": "1427600",
    "end": "1432960"
  },
  {
    "text": "consuming third-party charts and you don't have to to upload them to an oci registry",
    "start": "1432960",
    "end": "1440320"
  },
  {
    "text": "now two things that are different though are",
    "start": "1440320",
    "end": "1445750"
  },
  {
    "text": "[Music] our supporting workflows and one of these is",
    "start": "1445750",
    "end": "1451840"
  },
  {
    "text": "updating chart versions automatically",
    "start": "1451840",
    "end": "1457039"
  },
  {
    "text": "so you might know that in homilies you can specify not only the exact version of",
    "start": "1457039",
    "end": "1463279"
  },
  {
    "text": "the chart that you want to deploy but also a semantic versioning range",
    "start": "1463279",
    "end": "1469200"
  },
  {
    "text": "but in that case the the concrete the actual version being",
    "start": "1469200",
    "end": "1475679"
  },
  {
    "text": "deployed wouldn't be reflected in your source in your get repository",
    "start": "1475679",
    "end": "1480960"
  },
  {
    "text": "for example if you need this to be the case you can now use automated updates to get",
    "start": "1480960",
    "end": "1488799"
  },
  {
    "text": "with oci repositories because flux has an",
    "start": "1488799",
    "end": "1494320"
  },
  {
    "text": "image automation component built into it",
    "start": "1494320",
    "end": "1499440"
  },
  {
    "text": "it needs to be explicitly enabled though but it's just a command line flag when",
    "start": "1499440",
    "end": "1505120"
  },
  {
    "text": "you're using the flux cli so it's one more controller that's running in the system then",
    "start": "1505120",
    "end": "1511360"
  },
  {
    "text": "that watches container registries and that of course can also watch any oci registry",
    "start": "1511360",
    "end": "1519679"
  },
  {
    "text": "and it can apply image update automations",
    "start": "1519679",
    "end": "1525120"
  },
  {
    "text": "based on a chart version for example um",
    "start": "1525120",
    "end": "1530559"
  },
  {
    "text": "so now if you're consuming health charts from oci you can use this image update",
    "start": "1530559",
    "end": "1536799"
  },
  {
    "text": "automation [Music] in that workflow too and you will get",
    "start": "1536799",
    "end": "1542960"
  },
  {
    "text": "git commits for every version bump and you don't have to do that yourself",
    "start": "1542960",
    "end": "1549039"
  },
  {
    "text": "you can also let it um [Music] you can specify the branch that the",
    "start": "1549039",
    "end": "1554720"
  },
  {
    "text": "change is being pushed to here in the spec of the image automation object",
    "start": "1554720",
    "end": "1561679"
  },
  {
    "text": "and have it push to a certain branch that another workflow will take off from",
    "start": "1561679",
    "end": "1570080"
  },
  {
    "text": "and create a gita pr for example if you don't want flux to directly push to your",
    "start": "1570080",
    "end": "1575919"
  },
  {
    "text": "main or production branch",
    "start": "1575919",
    "end": "1579759"
  },
  {
    "text": "and one more thing that's possible with oci based home repositories",
    "start": "1581120",
    "end": "1587600"
  },
  {
    "text": "is that you can use the provider field so the dotsback.provider field of helm",
    "start": "1587600",
    "end": "1594640"
  },
  {
    "text": "repositories let's you specify one of these four",
    "start": "1594640",
    "end": "1599760"
  },
  {
    "text": "providers um and we support the three major cloud providers aws azure and",
    "start": "1599760",
    "end": "1607520"
  },
  {
    "text": "google gcp in the current version of flux",
    "start": "1607520",
    "end": "1613360"
  },
  {
    "text": "and then you can make use of um of your node",
    "start": "1613360",
    "end": "1618960"
  },
  {
    "text": "worker node authentication so you don't have to",
    "start": "1618960",
    "end": "1625200"
  },
  {
    "text": "store any secrets any credentials in your cluster and provide them to flux",
    "start": "1625279",
    "end": "1632000"
  },
  {
    "text": "in order to access private registries for example right and we have",
    "start": "1632000",
    "end": "1638400"
  },
  {
    "text": "examples for all these three cloud providers in the documentation so i want to encourage you to have a",
    "start": "1638400",
    "end": "1645679"
  },
  {
    "text": "look at this documentation if you're on one of these three cloud providers",
    "start": "1645679",
    "end": "1652000"
  },
  {
    "text": "and don't want to maintain any credentials and get or on your",
    "start": "1652000",
    "end": "1658400"
  },
  {
    "text": "cluster anymore",
    "start": "1658400",
    "end": "1661440"
  },
  {
    "text": "that's it for helm",
    "start": "1664240",
    "end": "1669320"
  },
  {
    "text": "let's clean up and let's proceed to",
    "start": "1669520",
    "end": "1675520"
  },
  {
    "text": "how using customizations now works with oci because that's",
    "start": "1675520",
    "end": "1682159"
  },
  {
    "text": "even more exciting in my book",
    "start": "1682159",
    "end": "1688080"
  },
  {
    "text": "all right so we are in the pardon for directory this is the source code i fork pod info",
    "start": "1688080",
    "end": "1695120"
  },
  {
    "text": "from from stefan's repository and it has a customized directory here",
    "start": "1695120",
    "end": "1702640"
  },
  {
    "text": "that has a customization file that doesn't look very exciting if",
    "start": "1702640",
    "end": "1708399"
  },
  {
    "text": "you're used to customize it pulls in three",
    "start": "1708399",
    "end": "1715120"
  },
  {
    "text": "kubernetes manifest files creating a deployment horizontal part autoscaler and a",
    "start": "1717039",
    "end": "1724159"
  },
  {
    "text": "kubernetes service so how do we deploy this customization",
    "start": "1724159",
    "end": "1730480"
  },
  {
    "text": "using oci",
    "start": "1730480",
    "end": "1733880"
  },
  {
    "text": "info okay so let's say we want to deploy",
    "start": "1744480",
    "end": "1752919"
  },
  {
    "text": "version 002 of our deployment customization",
    "start": "1755919",
    "end": "1763200"
  },
  {
    "text": "manifests",
    "start": "1763200",
    "end": "1766200"
  },
  {
    "text": "now with oci support for customizations the flux cli also got some new",
    "start": "1768720",
    "end": "1775840"
  },
  {
    "text": "artifact uh some new commands one of these is flux push artifacts",
    "start": "1775840",
    "end": "1782640"
  },
  {
    "text": "artifact rather that",
    "start": "1782640",
    "end": "1787679"
  },
  {
    "text": "is provided with the url",
    "start": "1787679",
    "end": "1793720"
  },
  {
    "text": "of the artifact that i want to push the path",
    "start": "1796399",
    "end": "1803039"
  },
  {
    "text": "that i want the artifact um",
    "start": "1803919",
    "end": "1808960"
  },
  {
    "text": "to contain or to be built from",
    "start": "1808960",
    "end": "1813759"
  },
  {
    "text": "and i'm going to tell it this is the source of this artifact",
    "start": "1820480",
    "end": "1825600"
  },
  {
    "text": "we're going to see later how this comes into play",
    "start": "1825600",
    "end": "1830640"
  },
  {
    "text": "and the revision this both of these",
    "start": "1830640",
    "end": "1838240"
  },
  {
    "text": "annotations that are put onto the resulting oci image",
    "start": "1838240",
    "end": "1845279"
  },
  {
    "text": "are there to facilitate tracking back an oci artifact to its source so that",
    "start": "1845279",
    "end": "1851840"
  },
  {
    "text": "you can know okay this is coming from this git repository um",
    "start": "1851840",
    "end": "1856990"
  },
  {
    "text": "[Music] so if i need to change anything i'm gonna clone this repository and push the",
    "start": "1856990",
    "end": "1862720"
  },
  {
    "text": "changes to it all right",
    "start": "1862720",
    "end": "1869120"
  },
  {
    "text": "and here is the output of the successful run of flux push artifact",
    "start": "1869120",
    "end": "1875600"
  },
  {
    "text": "it says i'm pushing the artifact to this registry",
    "start": "1875600",
    "end": "1882158"
  },
  {
    "text": "it has been done successfully and it also spits out the the actual image digest so",
    "start": "1882880",
    "end": "1890640"
  },
  {
    "text": "this looks very similar to [Music] the workflow that you use when you push",
    "start": "1890640",
    "end": "1897519"
  },
  {
    "text": "a docker image and in fact it's not very different",
    "start": "1897519",
    "end": "1903760"
  },
  {
    "text": "let's have a look at the registry real quick",
    "start": "1903919",
    "end": "1912158"
  },
  {
    "text": "get up provides a nice user interface for its registry and you can see",
    "start": "1912399",
    "end": "1917519"
  },
  {
    "text": "um version 002 has been pushed here are all the tags that i've created",
    "start": "1917519",
    "end": "1924000"
  },
  {
    "text": "before so 01 has been created and like one day ago",
    "start": "1924000",
    "end": "1929519"
  },
  {
    "text": "and now we are at version 002.",
    "start": "1929519",
    "end": "1934200"
  },
  {
    "text": "you can also make use of a tool called called crane",
    "start": "1940480",
    "end": "1947080"
  },
  {
    "text": "to check all the tags but the flexi line",
    "start": "1950240",
    "end": "1956559"
  },
  {
    "text": "also has a command for that",
    "start": "1956799",
    "end": "1963720"
  },
  {
    "text": "i'm sorry need to provide the oci scheme",
    "start": "1964559",
    "end": "1970240"
  },
  {
    "text": "and then flux is going to pull down all the tags and",
    "start": "1970799",
    "end": "1977840"
  },
  {
    "text": "show the source and the revision these are the two or",
    "start": "1978159",
    "end": "1984720"
  },
  {
    "text": "the two uh data points that come from dash dash source and dash dash revision",
    "start": "1984720",
    "end": "1990960"
  },
  {
    "text": "when we push the artifact so this is very valuable information when you need to",
    "start": "1990960",
    "end": "1997360"
  },
  {
    "text": "work with these artifacts right you don't have to provide them by the",
    "start": "1997360",
    "end": "2003279"
  },
  {
    "text": "way but it is highly highly encouraged to do that because otherwise it'd be hard to",
    "start": "2003279",
    "end": "2010799"
  },
  {
    "text": "track these back to their sources all right so now",
    "start": "2010799",
    "end": "2016399"
  },
  {
    "text": "we have pushed our artifact",
    "start": "2016399",
    "end": "2021120"
  },
  {
    "text": "let's see how it looks like what does a flux oci artifact actually",
    "start": "2022960",
    "end": "2030240"
  },
  {
    "text": "look like and i'm going to use the queen tool again",
    "start": "2030240",
    "end": "2036320"
  },
  {
    "text": "to pull down the manifest file and this looks",
    "start": "2040320",
    "end": "2045360"
  },
  {
    "text": "very very similar if not equal to a manifest file for a docker image it",
    "start": "2045360",
    "end": "2052720"
  },
  {
    "text": "has a config flux is currently not making use of these configs",
    "start": "2052720",
    "end": "2058638"
  },
  {
    "text": "but it's still there the important thing is the layers",
    "start": "2058639",
    "end": "2065440"
  },
  {
    "text": "um flux by default creates one layer but you can actually push",
    "start": "2065440",
    "end": "2071800"
  },
  {
    "text": "[Music] um oci artifacts with several layers and tell flux",
    "start": "2071800",
    "end": "2078240"
  },
  {
    "text": "um which one to pick based on the media type right so you can have a layer for",
    "start": "2078240",
    "end": "2085040"
  },
  {
    "text": "configuration a layer for your artifact and maybe a layer for your",
    "start": "2085040",
    "end": "2091520"
  },
  {
    "text": "actual docker images and then you tell flux please pull the artifact from this",
    "start": "2091520",
    "end": "2096720"
  },
  {
    "text": "media type and um let's have a look at the actual",
    "start": "2096720",
    "end": "2104720"
  },
  {
    "text": "image content",
    "start": "2104720",
    "end": "2108320"
  },
  {
    "text": "so every content in oci is addressable via digest",
    "start": "2112079",
    "end": "2118400"
  },
  {
    "text": "and of course that's a binary blob",
    "start": "2119920",
    "end": "2124160"
  },
  {
    "text": "so flux basically just takes the path that we provided it with uh with this",
    "start": "2126800",
    "end": "2134320"
  },
  {
    "text": "flag it creates a tower archive and gzips it",
    "start": "2134320",
    "end": "2140320"
  },
  {
    "text": "and that's the the content of the layer so what you see here is just the same",
    "start": "2140320",
    "end": "2148800"
  },
  {
    "text": "as we have in the customized directory and it's as simple as that",
    "start": "2148800",
    "end": "2154400"
  },
  {
    "text": "so a flux artifact is basically an oci image with the tar archive",
    "start": "2154400",
    "end": "2161839"
  },
  {
    "text": "as a layer so let's",
    "start": "2161839",
    "end": "2167359"
  },
  {
    "text": "consume it we're going to create a source of type",
    "start": "2167359",
    "end": "2172960"
  },
  {
    "text": "oci",
    "start": "2172960",
    "end": "2175520"
  },
  {
    "text": "and we're gonna tell it to consume this tag",
    "start": "2184800",
    "end": "2190800"
  },
  {
    "text": "and you'll see here that it's telling us that it's creating an oci repository",
    "start": "2195280",
    "end": "2201599"
  },
  {
    "text": "ocr repository is a new type",
    "start": "2201599",
    "end": "2206599"
  },
  {
    "text": "that we created to support um these kinds of workflows",
    "start": "2214640",
    "end": "2221119"
  },
  {
    "text": "see here this this kind oci repository",
    "start": "2221119",
    "end": "2227480"
  },
  {
    "text": "also has a spec field as to all flux",
    "start": "2228240",
    "end": "2234480"
  },
  {
    "text": "resources and it looks very similar to other source",
    "start": "2234480",
    "end": "2240560"
  },
  {
    "text": "crds where you can provide an interval you can provide",
    "start": "2240560",
    "end": "2245839"
  },
  {
    "text": "a provider here as well so this is the same as with oci based home repositories",
    "start": "2245839",
    "end": "2253040"
  },
  {
    "text": "so if you want to access a private oci repository and you're running on one of",
    "start": "2253040",
    "end": "2258640"
  },
  {
    "text": "the three major cloud providers you can just tell it provider aws for",
    "start": "2258640",
    "end": "2264800"
  },
  {
    "text": "example and then flux will",
    "start": "2264800",
    "end": "2271760"
  },
  {
    "text": "use the cloud providers um authentication mechanism for example",
    "start": "2271760",
    "end": "2278560"
  },
  {
    "text": "um iam in the aws case to authenticate against the ocr",
    "start": "2278560",
    "end": "2283839"
  },
  {
    "text": "repository since this is a public repository the provider is just",
    "start": "2283839",
    "end": "2289920"
  },
  {
    "text": "set to generic and then you can also provide a secret that contains the actual credentials",
    "start": "2289920",
    "end": "2298680"
  },
  {
    "text": "and here you'll see that flux also pull down the annotations from the image",
    "start": "2301440",
    "end": "2308480"
  },
  {
    "text": "and stores them and the status of the of the of the object which is also very",
    "start": "2308720",
    "end": "2314560"
  },
  {
    "text": "helpful so you don't have to pull down the image yourself to know where the source comes from or",
    "start": "2314560",
    "end": "2320400"
  },
  {
    "text": "where the oci or effect comes from um all right so i have another terminal",
    "start": "2320400",
    "end": "2327280"
  },
  {
    "text": "open on the right side we're going to watch for parts being",
    "start": "2327280",
    "end": "2332320"
  },
  {
    "text": "created in the default namespace because now we are finally going to create",
    "start": "2332320",
    "end": "2339560"
  },
  {
    "text": "the pod info customization this now comes from an oci repository",
    "start": "2340480",
    "end": "2346800"
  },
  {
    "text": "that's called pod info the path is customized as we saw when we pull down",
    "start": "2346800",
    "end": "2354800"
  },
  {
    "text": "the actual layer contents",
    "start": "2354800",
    "end": "2360079"
  },
  {
    "text": "and we want the target's name target namespace to be default",
    "start": "2360400",
    "end": "2366880"
  },
  {
    "text": "so that everything from coming from this customization is created",
    "start": "2366880",
    "end": "2371920"
  },
  {
    "text": "it's namespace dash dash prune tells customize or flux",
    "start": "2371920",
    "end": "2377359"
  },
  {
    "text": "to remove every objects that the customization created as soon",
    "start": "2377359",
    "end": "2383920"
  },
  {
    "text": "as the customization is deleted from the cluster",
    "start": "2383920",
    "end": "2388640"
  },
  {
    "text": "now the pod is being created it's running and it's going to get ready",
    "start": "2391760",
    "end": "2398400"
  },
  {
    "text": "in a couple seconds",
    "start": "2398400",
    "end": "2401599"
  },
  {
    "text": "ah yeah",
    "start": "2406720",
    "end": "2410040"
  },
  {
    "text": "the deployment is scaled to two pods so we have two parts running of pardon",
    "start": "2412000",
    "end": "2418079"
  },
  {
    "text": "for now we have a servers running and the cluster and everything's",
    "start": "2418079",
    "end": "2424720"
  },
  {
    "text": "fine let's have a look at the customization",
    "start": "2424720",
    "end": "2431280"
  },
  {
    "text": "oops",
    "start": "2437280",
    "end": "2439839"
  },
  {
    "text": "and this also looks very similar to all the other customizations that you use that are based on for example get",
    "start": "2442400",
    "end": "2448400"
  },
  {
    "text": "repository source the path here um",
    "start": "2448400",
    "end": "2454320"
  },
  {
    "text": "tells flux to only create the customization objects from this path and this actually",
    "start": "2454320",
    "end": "2461440"
  },
  {
    "text": "helps you when you want to deploy the same ocr ice oci artifact",
    "start": "2461440",
    "end": "2467359"
  },
  {
    "text": "on different clusters for example a dev cluster and a prod cluster so you can store the configuration for both in the",
    "start": "2467359",
    "end": "2474880"
  },
  {
    "text": "same artifact just a different path and then on the",
    "start": "2474880",
    "end": "2480000"
  },
  {
    "text": "dev cluster you point it to the path def and on the prod cluster you would point it to the path prod just as you would",
    "start": "2480000",
    "end": "2487200"
  },
  {
    "text": "with the get repository",
    "start": "2487200",
    "end": "2490800"
  },
  {
    "text": "now we see that a service of type cluster ip has been created so if you",
    "start": "2492480",
    "end": "2497760"
  },
  {
    "text": "don't have an ingress controller warning or we don't have any kind of ingress on that cluster",
    "start": "2497760",
    "end": "2503520"
  },
  {
    "text": "um we don't have a way to access the pattern info ui",
    "start": "2503520",
    "end": "2509040"
  },
  {
    "text": "without any port forwarding for example so let's change that",
    "start": "2509040",
    "end": "2514319"
  },
  {
    "text": "we're going to change the service type from cluster ip to load balancer",
    "start": "2514319",
    "end": "2521880"
  },
  {
    "text": "and we are going to change the version that we",
    "start": "2526640",
    "end": "2531280"
  },
  {
    "text": "are going to push so i changed the service manifest",
    "start": "2533520",
    "end": "2540560"
  },
  {
    "text": "and now i'm going to run flux push artifact again",
    "start": "2540560",
    "end": "2546079"
  },
  {
    "text": "and create another version oo3",
    "start": "2546079",
    "end": "2551640"
  },
  {
    "text": "and now since we uh",
    "start": "2551680",
    "end": "2557520"
  },
  {
    "text": "since we pointed flux to the specific version 002 i need to",
    "start": "2557520",
    "end": "2565520"
  },
  {
    "text": "change the reference here to 003",
    "start": "2565520",
    "end": "2570440"
  },
  {
    "text": "and as soon as i exit here take a look at the right side",
    "start": "2575119",
    "end": "2579838"
  },
  {
    "text": "and now the pattern for service has changed from cluster ip to load balancer",
    "start": "2581359",
    "end": "2587920"
  },
  {
    "text": "so you can take the ip address 9898 is the default port",
    "start": "2587920",
    "end": "2596000"
  },
  {
    "text": "and we get our greetings from pod info",
    "start": "2596000",
    "end": "2600880"
  },
  {
    "text": "right so everything that i had to do was change",
    "start": "2602640",
    "end": "2607680"
  },
  {
    "text": "the manifest push another artifact and change the ocr repository now if we want to",
    "start": "2607680",
    "end": "2614720"
  },
  {
    "text": "skip the last step changing the ocr repository",
    "start": "2614720",
    "end": "2620760"
  },
  {
    "text": "we can just tell flux to use a semantic versioning range",
    "start": "2623280",
    "end": "2629280"
  },
  {
    "text": "in this case the asterisk asterisk tells flux to always use the latest version",
    "start": "2629280",
    "end": "2638000"
  },
  {
    "text": "now let's change our service back to cluster ip",
    "start": "2640160",
    "end": "2646880"
  },
  {
    "text": "because maybe we now have an ingress controller running in the cluster",
    "start": "2646880",
    "end": "2652640"
  },
  {
    "text": "i'm gonna set the version variable to 004",
    "start": "2652960",
    "end": "2658240"
  },
  {
    "text": "and create and push another artifact now version004",
    "start": "2658800",
    "end": "2666200"
  },
  {
    "text": "and now since the interval of the ocri repository is set to one minute",
    "start": "2668319",
    "end": "2674240"
  },
  {
    "text": "it can take up to one minute for this change to be applied",
    "start": "2674240",
    "end": "2679760"
  },
  {
    "text": "and here we go and we can also inspect",
    "start": "2679760",
    "end": "2687119"
  },
  {
    "text": "the ocr repository",
    "start": "2687680",
    "end": "2691480"
  },
  {
    "text": "one get too much and we can see that the revision is",
    "start": "2696640",
    "end": "2704640"
  },
  {
    "text": "this digest starts with a9a and this is actually the same revision",
    "start": "2704640",
    "end": "2711200"
  },
  {
    "text": "that we just pushed when we pushed version 004",
    "start": "2711200",
    "end": "2716400"
  },
  {
    "text": "this one here a9a",
    "start": "2716400",
    "end": "2719838"
  },
  {
    "text": "now oftentimes the question comes up",
    "start": "2721520",
    "end": "2726560"
  },
  {
    "text": "how to track back a certain resource to the source that is it is being",
    "start": "2726560",
    "end": "2734240"
  },
  {
    "text": "created from in a github's workflow so let's say",
    "start": "2734240",
    "end": "2740079"
  },
  {
    "text": "we have this deployment here that is called pod info how do i know",
    "start": "2740079",
    "end": "2745599"
  },
  {
    "text": "which actual source repository or get repository it",
    "start": "2745599",
    "end": "2751200"
  },
  {
    "text": "is coming from when for example i want to change it from two replicas to three",
    "start": "2751200",
    "end": "2759119"
  },
  {
    "text": "and flux has this handy trace command",
    "start": "2759599",
    "end": "2765760"
  },
  {
    "text": "um which i can ask this exact same question",
    "start": "2766000",
    "end": "2774160"
  },
  {
    "text": "so i run flux trace and search in the default namespace for",
    "start": "2774160",
    "end": "2780560"
  },
  {
    "text": "the deployment pod info and tell me where it's coming from",
    "start": "2780560",
    "end": "2786400"
  },
  {
    "text": "and here you can see flux prints out the path back to its actual",
    "start": "2786400",
    "end": "2792400"
  },
  {
    "text": "source so this is the deployment that we are asking information on",
    "start": "2792400",
    "end": "2797760"
  },
  {
    "text": "it is being created by the customization called pod",
    "start": "2797760",
    "end": "2802880"
  },
  {
    "text": "namespace flux system and that customization actually consumes",
    "start": "2802960",
    "end": "2809599"
  },
  {
    "text": "um manifests from the oci repository called pod",
    "start": "2809599",
    "end": "2814839"
  },
  {
    "text": "info and the flux system namespace and since we annotated",
    "start": "2814839",
    "end": "2820560"
  },
  {
    "text": "the artifact when we pushed it we also know the exact revision",
    "start": "2820560",
    "end": "2827119"
  },
  {
    "text": "and the get repository so this is this contains the branch",
    "start": "2827119",
    "end": "2832480"
  },
  {
    "text": "and the tag uh i'm sorry um the sha of so the commit",
    "start": "2832480",
    "end": "2838560"
  },
  {
    "text": "char and the path like the url of its repository",
    "start": "2838560",
    "end": "2846720"
  },
  {
    "text": "this doesn't need to be a url by the way it can be anything that makes sense in",
    "start": "2846720",
    "end": "2851920"
  },
  {
    "text": "the environment that you're working in um but usually it's it's a url pointing to",
    "start": "2851920",
    "end": "2860240"
  },
  {
    "text": "the actual git repository that you can clone um so in this case we would know i need",
    "start": "2860240",
    "end": "2866560"
  },
  {
    "text": "to clone this repository and check out this commit to know",
    "start": "2866560",
    "end": "2872640"
  },
  {
    "text": "what exactly is being created now if i want to change that i can just change the files in that repository and",
    "start": "2872640",
    "end": "2879839"
  },
  {
    "text": "create another artifact so flux trace",
    "start": "2879839",
    "end": "2885200"
  },
  {
    "text": "and flux push artifact are or any any artifact command and the flux",
    "start": "2885200",
    "end": "2892560"
  },
  {
    "text": "cli rather like flux list artifacts flush flux push artifact there's also",
    "start": "2892560",
    "end": "2898079"
  },
  {
    "text": "flux pull artifact which is very much the same as flux as",
    "start": "2898079",
    "end": "2904319"
  },
  {
    "text": "the crane blob command that we that we saw before um",
    "start": "2904319",
    "end": "2910319"
  },
  {
    "text": "are the commands that i that i called out before when i said like",
    "start": "2910559",
    "end": "2916000"
  },
  {
    "text": "everything can be done without the flux cli in this case in order to",
    "start": "2916000",
    "end": "2922559"
  },
  {
    "text": "for example trace back sources without having to use the flux cli you'd have to build",
    "start": "2922559",
    "end": "2929520"
  },
  {
    "text": "obviously something yourself but that is pretty simple because the flex cell also",
    "start": "2929520",
    "end": "2935680"
  },
  {
    "text": "just consumes the objects and the clusters so there's no magic behind that it's just",
    "start": "2935680",
    "end": "2942400"
  },
  {
    "text": "a nice way of of representing for example the trace path here",
    "start": "2942400",
    "end": "2949359"
  },
  {
    "text": "but this and this isn't specific to a ci i just want to point that out real quick",
    "start": "2951440",
    "end": "2958559"
  },
  {
    "text": "um this has always been the case with flux it applies labels so that you can",
    "start": "2958559",
    "end": "2964000"
  },
  {
    "text": "track back each resource back to its source so here the label says",
    "start": "2964000",
    "end": "2971599"
  },
  {
    "text": "this resource has been created by the customization of this name coming from this namespace and there you can trace",
    "start": "2971599",
    "end": "2978720"
  },
  {
    "text": "back your way using cubecolor for example and for flux push artifact it's",
    "start": "2978720",
    "end": "2986400"
  },
  {
    "text": "very similar you can create your own artifacts that just have um to have the",
    "start": "2986400",
    "end": "2991440"
  },
  {
    "text": "same structure so like the the layer that you're pointing flux to",
    "start": "2991440",
    "end": "2997119"
  },
  {
    "text": "has to be a atar archive gzipped archive",
    "start": "2997119",
    "end": "3002559"
  },
  {
    "text": "containing the manifest files or the customization",
    "start": "3002559",
    "end": "3008680"
  },
  {
    "text": "all right so this is how you use oci and flux",
    "start": "3012480",
    "end": "3019280"
  },
  {
    "text": "today and i want to point out one more benefit",
    "start": "3019280",
    "end": "3024559"
  },
  {
    "text": "of using oci if all the other benefits that are called out now",
    "start": "3024559",
    "end": "3030480"
  },
  {
    "text": "haven't convinced you yet to at least try out oci with flux and one of them is",
    "start": "3030480",
    "end": "3036720"
  },
  {
    "text": "that more and more cloud providers and oci implementers are starting to support immutable image",
    "start": "3036720",
    "end": "3044240"
  },
  {
    "text": "tags for example here's the announcement from from aws from two years ago",
    "start": "3044240",
    "end": "3050720"
  },
  {
    "text": "where they announced that they are going to support immutable image tags and this is a major benefit",
    "start": "3051200",
    "end": "3058480"
  },
  {
    "text": "um over get for example because when you consume a git tag",
    "start": "3058480",
    "end": "3064240"
  },
  {
    "text": "um you there is a chance that you're not",
    "start": "3064240",
    "end": "3069520"
  },
  {
    "text": "consuming the exact same content as maybe in a week or one week ago because",
    "start": "3069520",
    "end": "3077760"
  },
  {
    "text": "git allows you to just force push a tag and overwrite the",
    "start": "3077760",
    "end": "3083359"
  },
  {
    "text": "the tag with the new content using immutable image tags",
    "start": "3083359",
    "end": "3089920"
  },
  {
    "text": "and oci this is not possible anymore um so this is a major",
    "start": "3089920",
    "end": "3096640"
  },
  {
    "text": "step forward when you need to have um",
    "start": "3096640",
    "end": "3103440"
  },
  {
    "text": "better accountability in your in your deployment pipeline",
    "start": "3104400",
    "end": "3110880"
  },
  {
    "text": "because when this tag has been deployed and immutable image tag policies are in place you exactly know the content that",
    "start": "3110880",
    "end": "3118559"
  },
  {
    "text": "is being deployed which is very important especially to security or rare people",
    "start": "3118559",
    "end": "3125838"
  },
  {
    "text": "now if you found all this",
    "start": "3129200",
    "end": "3134000"
  },
  {
    "text": "helpful and if you want to try out flux yourself i encourage you to have a look at the",
    "start": "3134480",
    "end": "3140640"
  },
  {
    "text": "getting started guide this is part of our own documentation",
    "start": "3140640",
    "end": "3146000"
  },
  {
    "text": "that we maintain at fluxcd.io [Music] and it helps you just getting started",
    "start": "3146000",
    "end": "3152640"
  },
  {
    "text": "installing flux bootstrapping with your own cluster and everything um",
    "start": "3152640",
    "end": "3157980"
  },
  {
    "text": "[Music] and then if you want to take it a step further you can browse our docs a little",
    "start": "3157980",
    "end": "3165280"
  },
  {
    "text": "more we have documentation on all the available components source controller customize",
    "start": "3165280",
    "end": "3172319"
  },
  {
    "text": "and so on so this is also a very very helpful",
    "start": "3172319",
    "end": "3177359"
  },
  {
    "text": "reference when you're using flux on a day-to-day basis",
    "start": "3177359",
    "end": "3183200"
  },
  {
    "text": "we also have covered use cases that we",
    "start": "3183200",
    "end": "3189359"
  },
  {
    "text": "usually stumble upon and that we hear from people using flux we have guides on",
    "start": "3189359",
    "end": "3195280"
  },
  {
    "text": "for example using cl secrets or mozilla subs if you need to store",
    "start": "3195280",
    "end": "3200800"
  },
  {
    "text": "your secrets in a secure way in your get repository",
    "start": "3200800",
    "end": "3207280"
  },
  {
    "text": "and all that so i really encourage you browsing the docs",
    "start": "3207280",
    "end": "3212720"
  },
  {
    "text": "and if you want to get a contact with the broader flux community or the flux maintainers",
    "start": "3212880",
    "end": "3220240"
  },
  {
    "text": "just join the cncf slack at cloud-native.slack.com",
    "start": "3221040",
    "end": "3226920"
  },
  {
    "text": "and join the flux channel there i myself",
    "start": "3227119",
    "end": "3232480"
  },
  {
    "text": "have experienced the community to be very very polite very very",
    "start": "3232480",
    "end": "3240079"
  },
  {
    "text": "welcoming and helpful so if you have any questions please don't",
    "start": "3240079",
    "end": "3245280"
  },
  {
    "text": "hesitate to reach out in that channel we also have a mailing list where we put",
    "start": "3245280",
    "end": "3251280"
  },
  {
    "text": "out monthly updates and announcements",
    "start": "3251280",
    "end": "3256319"
  },
  {
    "text": "and all of flux's source code is spread across github and the fluxity",
    "start": "3256319",
    "end": "3263520"
  },
  {
    "text": "organization but it's best to start with a flux to repository",
    "start": "3263520",
    "end": "3269680"
  },
  {
    "text": "where we also have many discussions going on [Music]",
    "start": "3269680",
    "end": "3275680"
  },
  {
    "text": "um for example enhancements to flux so if someone",
    "start": "3275680",
    "end": "3281040"
  },
  {
    "text": "um has wants to propose an enhancement to flux they usually start a discussion on",
    "start": "3281040",
    "end": "3288160"
  },
  {
    "text": "github and the flux tool repository",
    "start": "3288160",
    "end": "3292520"
  },
  {
    "text": "and with this i wanna thank you for taking part in this webinar",
    "start": "3294079",
    "end": "3300640"
  },
  {
    "text": "and have fun with flux",
    "start": "3300640",
    "end": "3305240"
  }
]