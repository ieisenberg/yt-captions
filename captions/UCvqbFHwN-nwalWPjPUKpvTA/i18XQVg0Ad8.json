[
  {
    "text": "hey everyone welcome welcome welcome uh to the Jaeger maintainer talk uh we're",
    "start": "4220",
    "end": "11160"
  },
  {
    "text": "going to be talking about a lot of cool stuff I'm Jonah Cowell and I'm also joined on stage by Joe Elliott nice to",
    "start": "11160",
    "end": "18480"
  },
  {
    "text": "meet you and we're going to be covering a lot of things about Jaeger open Telemetry uh",
    "start": "18480",
    "end": "25619"
  },
  {
    "text": "where the project is going kind of where it is as you know Jaeger's a graduated project one of a handful uh very mature",
    "start": "25619",
    "end": "33840"
  },
  {
    "text": "and well adopted in the ecosystem Joe tell us a little bit about yourself sure",
    "start": "33840",
    "end": "39239"
  },
  {
    "text": "I'm Joe and you can tell by the images up here I work on Jaeger I'm a Jager",
    "start": "39239",
    "end": "44640"
  },
  {
    "text": "maintainer I work at grafana and that's a very terrible picture of my bike I",
    "start": "44640",
    "end": "50160"
  },
  {
    "text": "like to bike around my city quite a bit and um I don't know if you found your",
    "start": "50160",
    "end": "56460"
  },
  {
    "text": "bike at the fountain or that's right I just walked out and picked it up it's been my bike ever",
    "start": "56460",
    "end": "62460"
  },
  {
    "text": "since and I'm Jonah Cowell I'm the CTO at logs IO also work on Jaeger among",
    "start": "62460",
    "end": "68280"
  },
  {
    "text": "other projects I do a lot of diving because I live in a nice place for that so that's what I tend to do when I'm not",
    "start": "68280",
    "end": "75060"
  },
  {
    "text": "working uh some photos I've shot recently underwater and",
    "start": "75060",
    "end": "81600"
  },
  {
    "text": "um yeah so in the agenda today we're going to talk about distributed tracing and Jaeger a little bit deeper into open",
    "start": "81600",
    "end": "88140"
  },
  {
    "text": "Telemetry and then kind of as we go through we'll get a little bit deeper into certain features that we built out",
    "start": "88140",
    "end": "94740"
  },
  {
    "text": "we're going to do a really quick live demo of some of the stuff that we're doing hopefully I'm going to do it over",
    "start": "94740",
    "end": "100799"
  },
  {
    "text": "Wi-Fi too which will be really fun and then I doubt we're gonna have time for questions but come up after we also have",
    "start": "100799",
    "end": "108299"
  },
  {
    "text": "a slack Channel which will hit on right at the end so with that I'm going to dive into a really quick intro for those",
    "start": "108299",
    "end": "116579"
  },
  {
    "text": "of you that are just getting started or or maybe don't know a lot about distributed tracing and Jaeger as Joe",
    "start": "116579",
    "end": "124380"
  },
  {
    "text": "gets deeper into what you can do with open Telemetry we wanted to just talk a",
    "start": "124380",
    "end": "129479"
  },
  {
    "text": "little bit about a few of the semantics so a trace is an end-to-end transaction",
    "start": "129479",
    "end": "135000"
  },
  {
    "text": "going through lots of different Hops and different microservices each of those",
    "start": "135000",
    "end": "140700"
  },
  {
    "text": "hops or steps that are going through is a span and that's kind of a little teeny piece",
    "start": "140700",
    "end": "147120"
  },
  {
    "text": "of the end-to-end transaction inside the span you can have all kinds of metadata",
    "start": "147120",
    "end": "152640"
  },
  {
    "text": "you can have tags you can attach logs you can attach all kinds of interesting",
    "start": "152640",
    "end": "157980"
  },
  {
    "text": "data that's going to help you either do analytics or troubleshooting",
    "start": "157980",
    "end": "163440"
  },
  {
    "text": "um and there's just a lot of different use cases and interesting stuff you can do with tracing which is kind of the",
    "start": "163440",
    "end": "171000"
  },
  {
    "text": "most advanced signal in uh Telemetry today uh in general and",
    "start": "171000",
    "end": "176459"
  },
  {
    "text": "observability um so with that uh kind of talk a little bit about the relationships it's really",
    "start": "176459",
    "end": "183720"
  },
  {
    "text": "important in a trace to understand how those spans all come together and roll",
    "start": "183720",
    "end": "189060"
  },
  {
    "text": "into uh into what's actually happening with the end user or the API that's",
    "start": "189060",
    "end": "195659"
  },
  {
    "text": "being used or exercised and so here you can see some visualizations and you'll",
    "start": "195659",
    "end": "201000"
  },
  {
    "text": "see more of them inside the Jaeger UI that explain how the different components of a trace come together and",
    "start": "201000",
    "end": "208319"
  },
  {
    "text": "roll into that so obviously inside the data itself there are Pointers that say",
    "start": "208319",
    "end": "214200"
  },
  {
    "text": "this is the root span where I came from and this is the next hop that I'm going",
    "start": "214200",
    "end": "219360"
  },
  {
    "text": "to and kind of shows the different pieces in the relationship and now what you can do is you can also",
    "start": "219360",
    "end": "226080"
  },
  {
    "text": "calculate the data off of that to understand errors and latency and do all",
    "start": "226080",
    "end": "232019"
  },
  {
    "text": "kinds of cool stuff that we're going to talk about a little bit later and here's the visualization you get when you use",
    "start": "232019",
    "end": "237900"
  },
  {
    "text": "Jaeger so if you do install Jaeger we make it really easy to get started we'll",
    "start": "237900",
    "end": "243420"
  },
  {
    "text": "talk about that and you can get these cool visualizations of the tracing data",
    "start": "243420",
    "end": "249659"
  },
  {
    "text": "that you're looking at and with that Joe's going to talk talk a little bit about Auto instrumentation",
    "start": "249659",
    "end": "256440"
  },
  {
    "text": "cool so we're going to talk about the open Telemetry clients uh those of you",
    "start": "256440",
    "end": "261900"
  },
  {
    "text": "who are already using Jaeger may have in the past year or so seen maybe a message",
    "start": "261900",
    "end": "267419"
  },
  {
    "text": "or a warning like this in the docs or on your Jaeger client so about a year ago",
    "start": "267419",
    "end": "272940"
  },
  {
    "text": "Jaeger deprecated all of its clients for all of the major languages in favor of the open Telemetry clients the community",
    "start": "272940",
    "end": "280080"
  },
  {
    "text": "decided to kind of converge on the open Telemetry clients as they kind of",
    "start": "280080",
    "end": "285240"
  },
  {
    "text": "implemented the final features that Yeager already supported the final one kind of being remote sampling if you're",
    "start": "285240",
    "end": "290460"
  },
  {
    "text": "familiar with that so Jaeger clients have been deprecated and the communities encouraged to move to the open Telemetry",
    "start": "290460",
    "end": "297000"
  },
  {
    "text": "clients which now are feature complete with what you could used to be able to do with your with your Jaeger clients",
    "start": "297000",
    "end": "304680"
  },
  {
    "text": "um the good news here is that there is very very wide language support for jaeger in fact I'm pretty sure it's a super I'm sorry for the open Telemetry",
    "start": "304680",
    "end": "310800"
  },
  {
    "text": "clients which I'm pretty sure is a super set of the originally supported languages in Jaeger I was surprised to",
    "start": "310800",
    "end": "317759"
  },
  {
    "text": "see for instance Swift is supported so for all of you you know writing your back end applications in Swift however",
    "start": "317759",
    "end": "324060"
  },
  {
    "text": "many of that is you can also instrument with Jager but you'll see some of the major players up there like net and Java",
    "start": "324060",
    "end": "331320"
  },
  {
    "text": "and go and node and all of these kind of uh major back-end languages and platforms all already supported by open",
    "start": "331320",
    "end": "337800"
  },
  {
    "text": "telemetry I'll also point out that all of these languages also have a shim",
    "start": "337800",
    "end": "343139"
  },
  {
    "text": "between open tracing and open Telemetry so if you're using Jaeger Jaeger",
    "start": "343139",
    "end": "349139"
  },
  {
    "text": "implements the open tracing shim as well and it's quite possible you can very easily swap out the Jaeger back end I",
    "start": "349139",
    "end": "356880"
  },
  {
    "text": "mean your client for the open Telemetry implementation of open tracing with maybe little or no code changes so open",
    "start": "356880",
    "end": "364440"
  },
  {
    "text": "tracing is a older standard that was an API standard Jaeger implemented open Telemetry also supports that standard",
    "start": "364440",
    "end": "371340"
  },
  {
    "text": "and I have a good Link in the bottom of this slide I'll also say over my part of",
    "start": "371340",
    "end": "377160"
  },
  {
    "text": "this presentation there's a lot of languages and a lot of details and it's impossible to get into all of it so I've",
    "start": "377160",
    "end": "383520"
  },
  {
    "text": "tried to include links in all the slides the PDF we've attached to the schedule should have this all of these links I",
    "start": "383520",
    "end": "390780"
  },
  {
    "text": "encourage you to go get that and use this presentation as a jumping off point to you know get into the details of your",
    "start": "390780",
    "end": "396180"
  },
  {
    "text": "own systems another piece of good news is that the configuration of open Telemetry clients",
    "start": "396180",
    "end": "403319"
  },
  {
    "text": "is very similar to the configuration of your Jaeger clients all through environment variables and in a lot of",
    "start": "403319",
    "end": "408600"
  },
  {
    "text": "cases or even kind of like a one-to-one mapping so like service name there's service names in open Telemetry the you",
    "start": "408600",
    "end": "415020"
  },
  {
    "text": "know the data model is very similar so a lot of this configuration is just going to be able to translate right over and",
    "start": "415020",
    "end": "420300"
  },
  {
    "text": "this is of course not exhaustive I just wanted to show a few examples of uh of environment variable rules you were",
    "start": "420300",
    "end": "426720"
  },
  {
    "text": "likely using to configure your Jaeger clients and you know showing you that all these same options are going to",
    "start": "426720",
    "end": "432780"
  },
  {
    "text": "exist over here for your open Telemetry clients so we have like sampling options of course is very important in tracing",
    "start": "432780",
    "end": "438720"
  },
  {
    "text": "and you can see open Telemetry is of course going to support that as well um you know your Jager agent host where",
    "start": "438720",
    "end": "444479"
  },
  {
    "text": "you're pointing your agent the propagation which is very important we're going to talk about in a second all of these kind of configuration",
    "start": "444479",
    "end": "451080"
  },
  {
    "text": "points should be available in open Telemetry or something similar and again that link at the bottom has every",
    "start": "451080",
    "end": "457560"
  },
  {
    "text": "environment variable in every silly little combination of parameters you can pass",
    "start": "457560",
    "end": "462860"
  },
  {
    "text": "to talk about the autoness of this instrumentation everybody gets excited about tracing Auto instrumentation",
    "start": "462860",
    "end": "469860"
  },
  {
    "text": "because sometimes tracing can feel a little manual we wanted to talk about open Telemetry is capable of in this",
    "start": "469860",
    "end": "475139"
  },
  {
    "text": "case and I have used maybe three or four of the different open Telemetry clients at different times and I think uh the",
    "start": "475139",
    "end": "482340"
  },
  {
    "text": "the good news here is that open Telemetry generally does a good job in its clients of meeting the expectations",
    "start": "482340",
    "end": "489000"
  },
  {
    "text": "of the community and the Frameworks that they're serving so in Java there's often",
    "start": "489000",
    "end": "494460"
  },
  {
    "text": "an expectation of heavy Auto instrumentation spring in particular has a lot of hooks where you can do what you",
    "start": "494460",
    "end": "500580"
  },
  {
    "text": "want after events like hdb calls and other events in your in your framework.net also kind of has a history",
    "start": "500580",
    "end": "506580"
  },
  {
    "text": "of some of this a lot of these Powers whereas maybe go is a language where people expect a little bit more manual",
    "start": "506580",
    "end": "512099"
  },
  {
    "text": "work a little bit more manual coding so in my experience diving into these languages I'd say your expectations as a",
    "start": "512099",
    "end": "520500"
  },
  {
    "text": "developer is Hope are hopefully met by the community I'd certainly communicate that back if you're struggling and",
    "start": "520500",
    "end": "525660"
  },
  {
    "text": "another really good point here is for all these languages even ones I don't develop into day to day they're a really",
    "start": "525660",
    "end": "531720"
  },
  {
    "text": "good getting started documentation every language if you just jump into the uh the link there at the bottom you'll find",
    "start": "531720",
    "end": "538380"
  },
  {
    "text": "your own language hopefully and they'll be like the you know hello World style getting started guide and you hopefully",
    "start": "538380",
    "end": "544620"
  },
  {
    "text": "in an hour or two can have very basic instrumentation set up and you can be writing to Jaeger and you can start",
    "start": "544620",
    "end": "550380"
  },
  {
    "text": "seeing that you know open Telemetry and Jager is going to work just fine and you can migrate you find a migration path",
    "start": "550380",
    "end": "555720"
  },
  {
    "text": "for your existing applications there's also I just wanted to add there's actually a new Go Auto",
    "start": "555720",
    "end": "562440"
  },
  {
    "text": "instrumentation based on ebpf that's pretty interesting it's super new but I",
    "start": "562440",
    "end": "567600"
  },
  {
    "text": "think we're going to see more and more innovation of using things like ebpf to",
    "start": "567600",
    "end": "572880"
  },
  {
    "text": "do more automated data collection so definitely keep watching the profiling and ebpf with open Telemetry because",
    "start": "572880",
    "end": "579899"
  },
  {
    "text": "it's really interesting stuff and it'll make it even easier and deeper data collection sorry to chime in no",
    "start": "579899",
    "end": "586140"
  },
  {
    "text": "absolutely not yeah um Trace propagation is also going to be very important so you have like a fleet",
    "start": "586140",
    "end": "592860"
  },
  {
    "text": "of applications and they're all using the Jaeger clients and they're using what are called the Jaeger headers probably so Jaeger propagates Trace",
    "start": "592860",
    "end": "600899"
  },
  {
    "text": "information with the headers and if you don't Deep dive into tracing you might not know this but you're going to need",
    "start": "600899",
    "end": "606060"
  },
  {
    "text": "to know this real soon if you start rolling out open Telemetry clients because open Telemetry by default",
    "start": "606060",
    "end": "611100"
  },
  {
    "text": "communicates with w3c headers Jaeger by default communicates with jaeger headers and there is some of overlap there most",
    "start": "611100",
    "end": "619320"
  },
  {
    "text": "open Telemetry clients also support Jager headers most Jaeger clients can talk with w3c headers but as you start",
    "start": "619320",
    "end": "626040"
  },
  {
    "text": "rolling out some of the first apps with open Telemetry you might find some traces are broken you might need to go",
    "start": "626040",
    "end": "631920"
  },
  {
    "text": "look at how you're propagating header values maybe double checking standardize on one of the two whatever is more",
    "start": "631920",
    "end": "637380"
  },
  {
    "text": "whatever is easier for your particular environment and then you can get your full traces as they pass through both",
    "start": "637380",
    "end": "643440"
  },
  {
    "text": "you know your your instrumented applications and your open Telemetry instrument applications",
    "start": "643440",
    "end": "650420"
  },
  {
    "text": "uh and finally I wanted to show an example of Auto instrumentation so these are some screenshots from a Java Auto",
    "start": "650459",
    "end": "656459"
  },
  {
    "text": "instrumented app that I threw together I'm not a Java developer all I did was take a restful application that uh you",
    "start": "656459",
    "end": "663660"
  },
  {
    "text": "know has git and post endpoints and then hits a relational database we've all seen this kind of application a million",
    "start": "663660",
    "end": "668820"
  },
  {
    "text": "times and then I threw the Java agent jar I just linked it using the uh using",
    "start": "668820",
    "end": "674760"
  },
  {
    "text": "the instructions on the getting started page in open Telemetry and I was immediately able to get some basic",
    "start": "674760",
    "end": "680100"
  },
  {
    "text": "tracing going I had very nice attributes from both my hdp side as well as my",
    "start": "680100",
    "end": "685320"
  },
  {
    "text": "database site I'm not sure how visible that is hopefully it's okay but you can see that there are the HTTP method the",
    "start": "685320",
    "end": "692760"
  },
  {
    "text": "HTTP path the URL the HTTP version that was in use are all automatically being",
    "start": "692760",
    "end": "698040"
  },
  {
    "text": "added as a tributes to my spans my trace and then on the database side I was kind of a surprise to also see a lot of deep",
    "start": "698040",
    "end": "704760"
  },
  {
    "text": "information about the database call automatically added with no code changes I'm seeing like the database query",
    "start": "704760",
    "end": "710940"
  },
  {
    "text": "string the name of the database the name of the table that was accessed the kind of operation that was performed and it",
    "start": "710940",
    "end": "717600"
  },
  {
    "text": "was a really a rich set of information for almost no effort I really made no code changes just linked that jar file",
    "start": "717600",
    "end": "724320"
  },
  {
    "text": "and it was ready to go so if you are in the Java Spring World you might have some nice surprises on your the ease of",
    "start": "724320",
    "end": "730380"
  },
  {
    "text": "moving to open Telemetry and maybe also some of the other more Auto auto instrumented kind of languages",
    "start": "730380",
    "end": "738079"
  },
  {
    "text": "next let's talk about I'm moving to open Telemetry I have these clients going I",
    "start": "738620",
    "end": "744660"
  },
  {
    "text": "maybe I found my migration path and I'm happy with my setup what kind of pipelines are available now that I have",
    "start": "744660",
    "end": "751140"
  },
  {
    "text": "open Telemetry and I'm more comfortable in that ecosystem along with my existing Jaeger back end",
    "start": "751140",
    "end": "756660"
  },
  {
    "text": "so the good news here is that the open Telemetry collector and the clients speak every Jaeger protocol so the",
    "start": "756660",
    "end": "764160"
  },
  {
    "text": "Jaeger agents expect one of two protocols which you might be aware of thrift compact or Thrift binary there's",
    "start": "764160",
    "end": "769920"
  },
  {
    "text": "the port numbers up there The Collector supports one of two protocols normally it's grpc from the agents and there's",
    "start": "769920",
    "end": "777360"
  },
  {
    "text": "also a lot of us might have a Kafka queue in our Jaeger Pipeline and our Trace pipeline um the open celebrity collector can read",
    "start": "777360",
    "end": "784560"
  },
  {
    "text": "and write all of these protocols and it can write to the Kafka queue in the formats that Jaeger expects so that",
    "start": "784560",
    "end": "790740"
  },
  {
    "text": "means you can really mix and match open Telemetry components along with your Jaeger components in almost any",
    "start": "790740",
    "end": "796920"
  },
  {
    "text": "combination you want I also put a little uh link up there it's something important about the collector itself is",
    "start": "796920",
    "end": "804240"
  },
  {
    "text": "there's two there's two distributions of The Collector there's one the core distribution does not have Jaeger",
    "start": "804240",
    "end": "809940"
  },
  {
    "text": "support but there's one called contrib and I've linked the uh the docker image there the contrib open Telemetry",
    "start": "809940",
    "end": "816180"
  },
  {
    "text": "collector does have Jager support so that's the one you're probably going to be using along with your Jaeger ecosystem",
    "start": "816180",
    "end": "824040"
  },
  {
    "text": "um the reason we might consider using that's also probably impossible to read the reason we might consider using the",
    "start": "824160",
    "end": "829980"
  },
  {
    "text": "open Telemetry collector along with our Jaeger pipeline is the open Geometry collector has a lot of really nice uh",
    "start": "829980",
    "end": "836820"
  },
  {
    "text": "processors and ability to mutate our spans as they move through it you might find that some of these nice abilities",
    "start": "836820",
    "end": "844019"
  },
  {
    "text": "for instance I've highlighted a processor called the redaction processor and you can use it to look for maybe pii",
    "start": "844019",
    "end": "850740"
  },
  {
    "text": "or other patterns other kind of information you don't want to pass into your back end and it will redact that",
    "start": "850740",
    "end": "855959"
  },
  {
    "text": "but there's other processors that will add or delete attributes there's processors that will decorate spans with",
    "start": "855959",
    "end": "861779"
  },
  {
    "text": "additional metadata the open television collector is very rich in its ability to modify and work with Trace data so I",
    "start": "861779",
    "end": "870000"
  },
  {
    "text": "would encourage you to explore the collector as you are kind of getting into the open Telemetry ecosystem",
    "start": "870000",
    "end": "876660"
  },
  {
    "text": "um because the collector supports like we said all of the same protocols that the uh that the the Java I'm sorry the",
    "start": "876660",
    "end": "884160"
  },
  {
    "text": "Jaeger pipeline supports we can really kind of mix and match how we want so I have over here in the green box the",
    "start": "884160",
    "end": "889560"
  },
  {
    "text": "Jaeger back end The Collector writing to a database and the querier reading from that database and then on the left side",
    "start": "889560",
    "end": "896880"
  },
  {
    "text": "we have our applications and they're instrumented now with the open Telemetry client I can use the Jaeger agent like I",
    "start": "896880",
    "end": "902399"
  },
  {
    "text": "always have because the open Trail make open Telemetry client can write directly to it or I could swap that out with the",
    "start": "902399",
    "end": "908040"
  },
  {
    "text": "open Telemetry collector there's you know these applications can do both can do the same thing they can both read the",
    "start": "908040",
    "end": "913620"
  },
  {
    "text": "same protocols they can both write to The Collector successfully so you have a lot of flexibility in your pipeline",
    "start": "913620",
    "end": "919740"
  },
  {
    "text": "um a lot of people use queuing in a in a in Jaeger and like we said before because the open Telemetry collector can",
    "start": "919740",
    "end": "926760"
  },
  {
    "text": "put uh Trace data in the Kaka queue in the format Jaeger expects we can use",
    "start": "926760",
    "end": "932339"
  },
  {
    "text": "open television collectors in this situation as well so my client maybe I'm writing to a mix of the Jaeger Pipeline",
    "start": "932339",
    "end": "938639"
  },
  {
    "text": "and the open Telemetry collector Pipeline and then I can still use my Kafka queue I'm pulling with my Jaeger",
    "start": "938639",
    "end": "944040"
  },
  {
    "text": "and Jester and now I'm writing into the database like I always have so there's a lot of flexibility here there's a lot of",
    "start": "944040",
    "end": "949680"
  },
  {
    "text": "power a lot of a lot of configuration and a lot of documents to read I would",
    "start": "949680",
    "end": "954959"
  },
  {
    "text": "recommend digging in and seeing what you can start doing with your Trace Pipeline and so what the reason why you may want",
    "start": "954959",
    "end": "961560"
  },
  {
    "text": "to move from simple to Advanced is either scale reasons resiliency reasons",
    "start": "961560",
    "end": "967560"
  },
  {
    "text": "or other kinds of business requirements that you may have but that's typically why people ask Kafka add Kafka one of",
    "start": "967560",
    "end": "975959"
  },
  {
    "text": "the common questions we get all the time is my collectors are overloaded or my back end is overloaded how do I help how",
    "start": "975959",
    "end": "983820"
  },
  {
    "text": "do we help and in the Jaeger Channel we're going to tell you you have to look at where the pressure is and probably",
    "start": "983820",
    "end": "989459"
  },
  {
    "text": "add some kind of cue some kind of back pressure mechanism I mean you really have to scale this stuff as you see fit",
    "start": "989459",
    "end": "997620"
  },
  {
    "text": "yep so uh final slide for me just kind of trying to be silly here the point it",
    "start": "997620",
    "end": "1003440"
  },
  {
    "text": "being because these applique or these uh these two processors are so easily interchangeable you know you can do",
    "start": "1003440",
    "end": "1009740"
  },
  {
    "text": "almost anything you want this particular pipeline is highly unrecommended but if you want to do repeatedly write from",
    "start": "1009740",
    "end": "1015560"
  },
  {
    "text": "collectors to agents to Kafka and back you can do it and maybe you have some bizarre business reason to go about",
    "start": "1015560",
    "end": "1022820"
  },
  {
    "text": "building a pipeline as complicated as this but yeah with that I think we're heading back to Jonah sure cool yeah so",
    "start": "1022820",
    "end": "1030678"
  },
  {
    "text": "we're going to talk a little bit about Joe mentioned the processors there's so many powerful ones and new ones being",
    "start": "1030679",
    "end": "1037040"
  },
  {
    "text": "built constantly like you just started building some of the cool things that show uh architectures service Maps",
    "start": "1037040",
    "end": "1044839"
  },
  {
    "text": "exactly these are all processors so one of the cool things that we built over the new the last year was actually a new",
    "start": "1044839",
    "end": "1052280"
  },
  {
    "text": "processor and I'm going to talk about that and how it comes forward in uh in Jaeger so Jaeger is a distributed",
    "start": "1052280",
    "end": "1060140"
  },
  {
    "text": "tracing system as you saw in the screenshots it can help you debug and understand where your transactions are",
    "start": "1060140",
    "end": "1066140"
  },
  {
    "text": "going but a lot of people today need APM I want performance monitoring",
    "start": "1066140",
    "end": "1071600"
  },
  {
    "text": "performance data so how do we move from distributed tracing to understanding performance it's about introducing new",
    "start": "1071600",
    "end": "1079280"
  },
  {
    "text": "signals aside from traces we also need metrics and we need to understand that",
    "start": "1079280",
    "end": "1085280"
  },
  {
    "text": "so that we can look at my services slowing down I'm seeing more errors trending data this type of thing we need",
    "start": "1085280",
    "end": "1092539"
  },
  {
    "text": "metrics on so we decided to build some additional components the first piece is",
    "start": "1092539",
    "end": "1098360"
  },
  {
    "text": "the span map metrics processor and so you can see here and I'm going to use my cool little thing is we've we've built",
    "start": "1098360",
    "end": "1106280"
  },
  {
    "text": "uh we basically built as the traces come into the open Telemetry collector we",
    "start": "1106280",
    "end": "1111980"
  },
  {
    "text": "then can send them through this processor which not only sends the data",
    "start": "1111980",
    "end": "1117080"
  },
  {
    "text": "to Jaeger but it also creates metrics in the process so we're actually able to",
    "start": "1117080",
    "end": "1122600"
  },
  {
    "text": "derive metrics from the traces and you'll see why this is important in a second because then we can now start",
    "start": "1122600",
    "end": "1129799"
  },
  {
    "text": "surfacing these metrics and give you information about what's happening in the application",
    "start": "1129799",
    "end": "1135500"
  },
  {
    "text": "so inside you're open Telemetry collector this is a typical configuration that that you would see",
    "start": "1135500",
    "end": "1142039"
  },
  {
    "text": "for the span metrics processor and how it fits into the pipeline in the top is",
    "start": "1142039",
    "end": "1147740"
  },
  {
    "text": "the definition of the processor and you can see exactly how it's calculating the",
    "start": "1147740",
    "end": "1153020"
  },
  {
    "text": "different buckets that it's that it's collecting and how it's looking at the data in terms of breaking it up into",
    "start": "1153020",
    "end": "1158780"
  },
  {
    "text": "metrics and down in the bottom you can see how this fits into a pipeline where",
    "start": "1158780",
    "end": "1163940"
  },
  {
    "text": "you're calling the trace metrics processor and sorry it's so small within",
    "start": "1163940",
    "end": "1168980"
  },
  {
    "text": "the pipeline right here and the result of this is that we then",
    "start": "1168980",
    "end": "1174200"
  },
  {
    "text": "generate metrics from these traces and we're able to do cool things like show",
    "start": "1174200",
    "end": "1179840"
  },
  {
    "text": "you the metric data from your applications without any additional instrumentation and I'm going to show",
    "start": "1179840",
    "end": "1186320"
  },
  {
    "text": "you this in a live demo but we can show these Prometheus metrics you can visualize them in grafana you can alert",
    "start": "1186320",
    "end": "1193039"
  },
  {
    "text": "on them in alert manager you can use any Prometheus compatible back end with this",
    "start": "1193039",
    "end": "1199100"
  },
  {
    "text": "feature and so that includes obviously Prometheus cortex Thanos memir m3db you",
    "start": "1199100",
    "end": "1209120"
  },
  {
    "text": "name it anything that does prom ql will work with this and has the right exporter in open telemetry",
    "start": "1209120",
    "end": "1216380"
  },
  {
    "text": "and I'm going to show you a really quick demo of how this looks in grafana",
    "start": "1216380",
    "end": "1223460"
  },
  {
    "text": "just so that you can see hopefully I'm not logged out so we've built a couple",
    "start": "1223460",
    "end": "1228679"
  },
  {
    "text": "of dashboards here one is service performance monitoring dashboard and",
    "start": "1228679",
    "end": "1234980"
  },
  {
    "text": "really quickly here we can look at the total number of spans we're looking at six hours latency by service we can",
    "start": "1234980",
    "end": "1242480"
  },
  {
    "text": "actually look at the breakdown of all the metrics and then each particular service you can",
    "start": "1242480",
    "end": "1248600"
  },
  {
    "text": "actually see my catalog service the latency the spans the error rates",
    "start": "1248600",
    "end": "1253720"
  },
  {
    "text": "and then the second really cool dashboard is the service level view so",
    "start": "1253720",
    "end": "1259760"
  },
  {
    "text": "if your team has a particular service like I own the front end of my application you can actually look at all",
    "start": "1259760",
    "end": "1267860"
  },
  {
    "text": "of the particular metrics for your individual service and these are just coming right off Prometheus",
    "start": "1267860",
    "end": "1274419"
  },
  {
    "text": "broken down by by the operation so it's pretty powerful to have this data",
    "start": "1274419",
    "end": "1281080"
  },
  {
    "text": "available to the team because these metrics are very tied to your business",
    "start": "1281080",
    "end": "1286100"
  },
  {
    "text": "in particular and the second thing that we did aside from creating the metrics is we made",
    "start": "1286100",
    "end": "1291799"
  },
  {
    "text": "them usable inside the Jaeger UI so when you run Jaeger you can actually see uh",
    "start": "1291799",
    "end": "1298100"
  },
  {
    "text": "in this new monitoring tab how it's visualized and I'm going to show you a live demo of this as well",
    "start": "1298100",
    "end": "1304340"
  },
  {
    "text": "so in Jaeger if you haven't updated recently you'll notice that there is a",
    "start": "1304340",
    "end": "1310400"
  },
  {
    "text": "new tab right here called monitor when you click on monitor what it's",
    "start": "1310400",
    "end": "1315440"
  },
  {
    "text": "going to do is you pick the service that you want and it's going to show you the latency and you see here we've got",
    "start": "1315440",
    "end": "1322280"
  },
  {
    "text": "percentile buckets hopefully it's not too small the error rate the request",
    "start": "1322280",
    "end": "1327799"
  },
  {
    "text": "rate and then I could actually go down and see the different operations and",
    "start": "1327799",
    "end": "1333320"
  },
  {
    "text": "let's say I'm starting to see oh look here this is showing 11 errors on my order service I can actually drill in",
    "start": "1333320",
    "end": "1340880"
  },
  {
    "text": "directly by clicking on that link and it's going to pull up the specific traces related to that service so just",
    "start": "1340880",
    "end": "1348559"
  },
  {
    "text": "give it a second so these are the the traces specifically related to the service so the idea here is it gives you",
    "start": "1348559",
    "end": "1357140"
  },
  {
    "text": "a little bit of a monitoring workflow obviously we don't do alerting in Jaeger yet I mean you know that is something",
    "start": "1357140",
    "end": "1364100"
  },
  {
    "text": "that if anyone wants to contribute or work on we definitely would love to have alert manager integration and there's",
    "start": "1364100",
    "end": "1371480"
  },
  {
    "text": "all kinds of cool things that that we can do with this data so that's kind of some of the new stuff that we've done",
    "start": "1371480",
    "end": "1379780"
  },
  {
    "text": "so I did want to also hit on a couple of new features and for those of you that",
    "start": "1379780",
    "end": "1385880"
  },
  {
    "text": "were at the keynote this morning I summarized these in a 45 second video so",
    "start": "1385880",
    "end": "1391880"
  },
  {
    "text": "it might be a little redundant one of the things that we did that allowed for some of what Joe talked",
    "start": "1391880",
    "end": "1397940"
  },
  {
    "text": "about was was adding I think you did the work for adding otlp so no you're eating",
    "start": "1397940",
    "end": "1403580"
  },
  {
    "text": "oh Yuri I said I'd do it for like a year and never got to it and he finally got fed up with me and did it I think yeah",
    "start": "1403580",
    "end": "1409159"
  },
  {
    "text": "so so right now Jaeger takes open Telemetry line protocol that's the raw",
    "start": "1409159",
    "end": "1414860"
  },
  {
    "text": "uh protocol for open Telemetry so you can send Trace data directly from",
    "start": "1414860",
    "end": "1420500"
  },
  {
    "text": "anything speaking open Telemetry into the collector which then gets stored",
    "start": "1420500",
    "end": "1425539"
  },
  {
    "text": "onto disk the other piece which Joe mentioned was adaptive sampling we added",
    "start": "1425539",
    "end": "1432080"
  },
  {
    "text": "that specifically into open Telemetry and do you want to talk a little bit about that one because you you did more",
    "start": "1432080",
    "end": "1438260"
  },
  {
    "text": "on that that's the one I actually it yeah so adaptive to handling is a a new",
    "start": "1438260",
    "end": "1444260"
  },
  {
    "text": "feature sampling feature in Jaeger that allows you to adjust your sample rates in response to your volume or your Trace",
    "start": "1444260",
    "end": "1452120"
  },
  {
    "text": "volume dynamically so for a long time Jaeger has been able to remote sample which means like pull a document",
    "start": "1452120",
    "end": "1459080"
  },
  {
    "text": "remotely from a remote source and then use that to adjust sample parameters but it was always a static document what",
    "start": "1459080",
    "end": "1465799"
  },
  {
    "text": "this new feature adaptive sampling does is it will watch your Trace data and if maybe one particular service or one",
    "start": "1465799",
    "end": "1472100"
  },
  {
    "text": "particular endpoint starts overwhelming your back end you can dynamically or the system will dynamically reduce the",
    "start": "1472100",
    "end": "1477980"
  },
  {
    "text": "sample rate for that particular endpoint or service and allow your back end knot to fall over also if the maybe the",
    "start": "1477980",
    "end": "1485539"
  },
  {
    "text": "throughput of a particular endpoint goes down you could increase your sample rate so you have a larger percentage of",
    "start": "1485539",
    "end": "1491120"
  },
  {
    "text": "traces from that particular service so it's just like a dynamic the ability to dynamically adjust your sample rates",
    "start": "1491120",
    "end": "1497419"
  },
  {
    "text": "based on your current traffic yeah and there's a lot of getting back to those processors and open telemetry there's a",
    "start": "1497419",
    "end": "1503780"
  },
  {
    "text": "lot of really interesting sampling strategies you can Implement and sampling and tracing is a really",
    "start": "1503780",
    "end": "1510200"
  },
  {
    "text": "important topic and Big Talk unto itself the next feature that was added is you",
    "start": "1510200",
    "end": "1517400"
  },
  {
    "text": "saw the kind of tabular views in Jaeger we actually had a community contribution",
    "start": "1517400",
    "end": "1522500"
  },
  {
    "text": "for flame graphs which is kind of another interesting way to look at the trace data",
    "start": "1522500",
    "end": "1528919"
  },
  {
    "text": "um Joe mentioned earlier that the Jaeger sdks are deprecated so that's just",
    "start": "1528919",
    "end": "1534260"
  },
  {
    "text": "another I guess it's not a feature but like an anti-feature yeah exactly we",
    "start": "1534260",
    "end": "1539659"
  },
  {
    "text": "like cleaning things up so that's that's important too um so some of the things that we want to",
    "start": "1539659",
    "end": "1546620"
  },
  {
    "text": "do today in Jaeger those of you that are users there's a few different dependency graphs it would be nice to have one and",
    "start": "1546620",
    "end": "1554120"
  },
  {
    "text": "potentially one of the other things that we've discussed is using those new service views that you've been working",
    "start": "1554120",
    "end": "1559700"
  },
  {
    "text": "on to generate that because today you have to run spark to generate the dependency views in Jaeger or you can",
    "start": "1559700",
    "end": "1567140"
  },
  {
    "text": "run like we do at my company we run Kafka streams to generate those but either way it's more stuff for the team",
    "start": "1567140",
    "end": "1574760"
  },
  {
    "text": "to manage and run so trying to simplify that is definitely a good idea and",
    "start": "1574760",
    "end": "1580820"
  },
  {
    "text": "something that we need to do something general is hinting at there is there we talked about those processors in The Collector there is a new processor",
    "start": "1580820",
    "end": "1586820"
  },
  {
    "text": "called the service map processor I think which generates service graph metrics and then graphonic can currently",
    "start": "1586820",
    "end": "1593600"
  },
  {
    "text": "visualize those I don't know if there's any other place I can visualize them but they're open Telemetry metrics and they're an open standard at this point",
    "start": "1593600",
    "end": "1599900"
  },
  {
    "text": "so you know you can use those metrics yourself to generate visualizations grafana can also do it yeah so the more context we can add on",
    "start": "1599900",
    "end": "1607460"
  },
  {
    "text": "to those graphs the visual views the the more useful the tool becomes and",
    "start": "1607460",
    "end": "1612799"
  },
  {
    "text": "obviously that's super important uh in when you're doing troubleshooting or monitoring uh the other piece is uh",
    "start": "1612799",
    "end": "1620779"
  },
  {
    "text": "eventually we've had stops and starts on the second major bullet here which is how do we move away from the Jaeger",
    "start": "1620779",
    "end": "1628340"
  },
  {
    "text": "collector which today writes the data to the back end and implements something like a paired down open Telemetry",
    "start": "1628340",
    "end": "1635419"
  },
  {
    "text": "collector instead it's just less code for us to manage in the project and it's",
    "start": "1635419",
    "end": "1640700"
  },
  {
    "text": "somewhat redundant so this one of the other maintainers Pavel was working on",
    "start": "1640700",
    "end": "1646940"
  },
  {
    "text": "this but then he kind of took a break on it and I don't know where it is but it's",
    "start": "1646940",
    "end": "1652520"
  },
  {
    "text": "something that we want to do as the projects uh matures and continues so",
    "start": "1652520",
    "end": "1658159"
  },
  {
    "text": "more convergence with open Telemetry is definitely the the trend with jaeger",
    "start": "1658159",
    "end": "1664000"
  },
  {
    "text": "and we've got probably five minutes for any questions",
    "start": "1664000",
    "end": "1671480"
  },
  {
    "text": "so feel free to raise your hand and we will take the questions",
    "start": "1671480",
    "end": "1676520"
  },
  {
    "text": "go ahead Joe pick I think we did",
    "start": "1676520",
    "end": "1681520"
  },
  {
    "text": "one sec",
    "start": "1682880",
    "end": "1685600"
  },
  {
    "text": "hi thanks for the talk does the go evpf uh collector that you mentioned does",
    "start": "1692120",
    "end": "1697520"
  },
  {
    "text": "that do automatic context propagation yeah they just added that into the",
    "start": "1697520",
    "end": "1702559"
  },
  {
    "text": "project about two weeks ago you'll want to search for key Val k e y v a l is the",
    "start": "1702559",
    "end": "1709520"
  },
  {
    "text": "little startup that built that and just do key Val go and you'll see it we've",
    "start": "1709520",
    "end": "1715700"
  },
  {
    "text": "tested it out and it definitely works well and does context propagation with",
    "start": "1715700",
    "end": "1720740"
  },
  {
    "text": "ebpf which is really cool that they're able to do that that is cool yeah yeah that is very cool thank you",
    "start": "1720740",
    "end": "1729640"
  },
  {
    "text": "oh it I guess it's in the main Hotel repository now so I stand corrected",
    "start": "1730640",
    "end": "1737059"
  },
  {
    "text": "thank you thanks what other questions",
    "start": "1737059",
    "end": "1743380"
  },
  {
    "text": "sure uh I guess in the green over there or sorry no over here you're next",
    "start": "1743900",
    "end": "1750980"
  },
  {
    "text": "uh differently a great talk Joe and Jonah so I definitely helped to understand",
    "start": "1750980",
    "end": "1757220"
  },
  {
    "text": "different things in open Telemetry and eager but what's the future of eager so today we definitely love the eager UI",
    "start": "1757220",
    "end": "1763640"
  },
  {
    "text": "and the storage Integrations are really good for Cassandra elasticsearch and recently the grbc integration has been",
    "start": "1763640",
    "end": "1770059"
  },
  {
    "text": "added uh but what's the future for eager and or how do we separate out the",
    "start": "1770059",
    "end": "1775820"
  },
  {
    "text": "boundaries between open Telemetry and eager this one's always a debate I mean we",
    "start": "1775820",
    "end": "1781880"
  },
  {
    "text": "would love to have one database right ideally to do this but everyone kind of",
    "start": "1781880",
    "end": "1787940"
  },
  {
    "text": "wants something different so we have people that love Cassandra and use that and people that want to use elastic or",
    "start": "1787940",
    "end": "1793700"
  },
  {
    "text": "open search and then obviously there's other data stores like uh like uh what",
    "start": "1793700",
    "end": "1800179"
  },
  {
    "text": "is it prom scale time time scale DB I believe that guy right there works on it",
    "start": "1800179",
    "end": "1806720"
  },
  {
    "text": "yeah yeah so there's there's other options so they're compatible there's a bunch of plugable things and I know",
    "start": "1806720",
    "end": "1812960"
  },
  {
    "text": "you're working on some stuff on tempo right to do I don't know I've considered",
    "start": "1812960",
    "end": "1818539"
  },
  {
    "text": "it but no I've not done any work on it but yeah you mentioned the grpc plugin which is a great thing to mention so",
    "start": "1818539",
    "end": "1823700"
  },
  {
    "text": "there is a grpc back end so you could write a plug-in for any back end you wanted at this point",
    "start": "1823700",
    "end": "1829640"
  },
  {
    "text": "um and I think there might be a Proto well whatever I'm not sure definitely a jrpc back end which allows for extension",
    "start": "1829640",
    "end": "1836419"
  },
  {
    "text": "yeah so I there's a lot of back end options and uh I don't know it's the",
    "start": "1836419",
    "end": "1842419"
  },
  {
    "text": "test Suites get crazy right now for us to test every one of the back end types uh and I'm not sure where that's going",
    "start": "1842419",
    "end": "1849860"
  },
  {
    "text": "to go but yep yeah sorry I think we're back here yet great talk I have two questions for you first",
    "start": "1849860",
    "end": "1856760"
  },
  {
    "text": "one is do you have plans to introduce other streaming Solutions other than Kafka for example nuts just stream and",
    "start": "1856760",
    "end": "1864679"
  },
  {
    "text": "the second question is um do your metrics also provide exemplars for example the trace ID so",
    "start": "1864679",
    "end": "1872600"
  },
  {
    "text": "that let's say if I have a graphang dashboard I can see a spike I can click on that Spike and go to the particular",
    "start": "1872600",
    "end": "1878240"
  },
  {
    "text": "Trace graph sure does the open Telemetry collector support exemplars uh is it remote right",
    "start": "1878240",
    "end": "1885200"
  },
  {
    "text": "exemplars too it I believe that the The Collector does but in this case the",
    "start": "1885200",
    "end": "1893860"
  },
  {
    "text": "uh the individual traces don't really matter on the metric itself because you",
    "start": "1893860",
    "end": "1901340"
  },
  {
    "text": "already know the context because the uh the dimensions that you define in the",
    "start": "1901340",
    "end": "1907100"
  },
  {
    "text": "processor for example the path or whatever tag you decide to use is already going to show you the examples",
    "start": "1907100",
    "end": "1913880"
  },
  {
    "text": "for the metrics so it's not necessarily relevant but I guess we could if you",
    "start": "1913880",
    "end": "1920419"
  },
  {
    "text": "want to contribute something that puts uh you know a trace ID and there is an",
    "start": "1920419",
    "end": "1925460"
  },
  {
    "text": "Exemplar that's totally possible I don't see why not yeah I guess I don't know off the top of my head what the open",
    "start": "1925460",
    "end": "1931820"
  },
  {
    "text": "Telemetry support for exemplars right now is I'm getting a thumbs up from gerasi so yes open teleporary supports",
    "start": "1931820",
    "end": "1937880"
  },
  {
    "text": "exemplars so I would uh presume that right we could do if it doesn't already generate",
    "start": "1937880",
    "end": "1944779"
  },
  {
    "text": "exemplars out of this or out of the span metrics processor which would make for a compelling use case like it's really",
    "start": "1944779",
    "end": "1950960"
  },
  {
    "text": "nice to see metrics generated from your traces and very quickly be able to jump over so I would review the docs if it's",
    "start": "1950960",
    "end": "1957440"
  },
  {
    "text": "not there it's probably an easy ad frankly it might be a good good first issue in that for that repo and that",
    "start": "1957440",
    "end": "1963980"
  },
  {
    "text": "view traces button basically brings you to the traces related to the metric anyway so it's already kind of been",
    "start": "1963980",
    "end": "1970520"
  },
  {
    "text": "there but um was there a second part of the question I kind of missed the beginning piece did you hear the I don't know I",
    "start": "1970520",
    "end": "1977960"
  },
  {
    "text": "had a second question if you are planning to support a different streaming solution like nuts or not J",
    "start": "1977960",
    "end": "1983480"
  },
  {
    "text": "stream instead of Kafka uh there are no plans at this moment to support other ones the current implications kind of like a very bespoke",
    "start": "1983480",
    "end": "1990799"
  },
  {
    "text": "Kafka implementation there's no I don't think there's a general shim there so a",
    "start": "1990799",
    "end": "1996260"
  },
  {
    "text": "new implementation will require some effort from someone else if you are interested in uh contributing something like that I would start an issue first",
    "start": "1996260",
    "end": "2002200"
  },
  {
    "text": "and discuss with the maintainers like how you want to implement it and we could talk about it I think the",
    "start": "2002200",
    "end": "2008380"
  },
  {
    "text": "collector the open Telemetry collector also only supports Kafka I'm not sure on that yeah I'm going to look at Jurassic",
    "start": "2008380",
    "end": "2013899"
  },
  {
    "text": "it does for sure it definitely does yeah okay",
    "start": "2013899",
    "end": "2019360"
  },
  {
    "text": "um and I think we might have time for one last one yeah we'll take one more",
    "start": "2019360",
    "end": "2026679"
  },
  {
    "text": "question uh thank you guys for the presentation great job uh so at my company we use.net uh we create.net apis",
    "start": "2026679",
    "end": "2033220"
  },
  {
    "text": "uh and that's a couple months ago or a couple years ago actually or a year ago whatever",
    "start": "2033220",
    "end": "2038620"
  },
  {
    "text": "um we were trying to get Jaeger set up but uh we didn't have the auto instrumentation yet uh and I'm curious",
    "start": "2038620",
    "end": "2045340"
  },
  {
    "text": "does the auto instrumentation mean that there is no application uh code changes",
    "start": "2045340",
    "end": "2051460"
  },
  {
    "text": "needed and we can just set the environment variables via uh config Maps",
    "start": "2051460",
    "end": "2057398"
  },
  {
    "text": "or whatever to instrument the app without the developers themselves having to uh pull in some type of package yeah",
    "start": "2057399",
    "end": "2064540"
  },
  {
    "text": "that's that's correct so there's a few ways to to instrument in.net and you can either install the instrumentation or it",
    "start": "2064540",
    "end": "2072099"
  },
  {
    "text": "can be included as a package inside your build if you're going somewhere that's serverless in.net basically so it",
    "start": "2072099",
    "end": "2079300"
  },
  {
    "text": "depends on how you want to deploy but the auto instrumentation is there there's no code changes needed and",
    "start": "2079300",
    "end": "2085240"
  },
  {
    "text": "there's a great team uh in that Community uh that are that's working on it and we're happy to take questions",
    "start": "2085240",
    "end": "2092200"
  },
  {
    "text": "after also uh happy for you to jump on our slack which is up on the screen uh",
    "start": "2092200",
    "end": "2099040"
  },
  {
    "text": "we're definitely always there and collaborating and we're always looking for contributors and folks to",
    "start": "2099040",
    "end": "2105400"
  },
  {
    "text": "participate and users to come and talk so thank you very much for coming and",
    "start": "2105400",
    "end": "2111220"
  },
  {
    "text": "great to see everyone at kubecon thank you [Applause]",
    "start": "2111220",
    "end": "2116820"
  }
]