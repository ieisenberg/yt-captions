[
  {
    "text": "alright let's get started thanks for coming everyone so kind of continuing in",
    "start": "30",
    "end": "7140"
  },
  {
    "text": "this this theme that's been going on in this room of identity we're gonna be giving kind of an overview kind of",
    "start": "7140",
    "end": "13799"
  },
  {
    "text": "taking a step back at container and and workload identity in kubernetes I'm Mike",
    "start": "13799",
    "end": "21570"
  },
  {
    "text": "Denise I work on the GK security team I've worked primarily on identity out",
    "start": "21570",
    "end": "26580"
  },
  {
    "text": "here in Seattle I am also the co-chair of the special interest group for",
    "start": "26580",
    "end": "32910"
  },
  {
    "text": "authentication in kubernetes and I in Spike Curtis I'm a senior software engineer at tae Guerra I'm also a",
    "start": "32910",
    "end": "39930"
  },
  {
    "text": "longtime contributor and core maintainer on calico and I co-chair the ISTE Oh",
    "start": "39930",
    "end": "45930"
  },
  {
    "text": "security working group and I am a maintainer of spiffy standards and those",
    "start": "45930",
    "end": "51420"
  },
  {
    "text": "last two sto and spiffy we're going to be covering in a little bit of detail later on in the talk so this is a talk",
    "start": "51420",
    "end": "59760"
  },
  {
    "text": "about workload identity so it's probably worth taking just a few moments to kind of make sure we're all on the same page",
    "start": "59760",
    "end": "64978"
  },
  {
    "text": "about what we what we mean when we say this phrase workload identity so what we",
    "start": "64979",
    "end": "70470"
  },
  {
    "text": "mean by a workload is an instance of running code that does the work of your",
    "start": "70470",
    "end": "76350"
  },
  {
    "text": "application so we're not talking necessarily about code that provides your platform or code that provide or",
    "start": "76350",
    "end": "82380"
  },
  {
    "text": "that runs your infrastructure workloads are the bits of your application that are running in your environment talking",
    "start": "82380",
    "end": "89340"
  },
  {
    "text": "to each other and so in kubernetes a workload is typically a pod and to get a",
    "start": "89340",
    "end": "97110"
  },
  {
    "text": "sort of unique identifier for a pod in kubernetes that's the name and namespace you're also often interested in what",
    "start": "97110",
    "end": "105149"
  },
  {
    "text": "code is being executed for your workload and so for kubernetes that's the image",
    "start": "105149",
    "end": "111119"
  },
  {
    "text": "name or the Mushaf and lastly you're often interested in extra kind of",
    "start": "111119",
    "end": "117290"
  },
  {
    "text": "identifying information about the workload like what kind of environment is it running in is it dev or prod what",
    "start": "117290",
    "end": "123810"
  },
  {
    "text": "application is it attached to or other kinds of configuration and for that identifying configuration sort of",
    "start": "123810",
    "end": "129720"
  },
  {
    "text": "affordance that we have in kubernetes is labels for that kind of identifying information and this talk is",
    "start": "129720",
    "end": "137510"
  },
  {
    "text": "going to be not sort of about like what is the data that that makes up a workload identity but more about how",
    "start": "137510",
    "end": "144409"
  },
  {
    "text": "workloads prove their identity in a cluster so in particular we're",
    "start": "144409",
    "end": "149750"
  },
  {
    "text": "interested in kind of three use cases sort of generally speaking about this so we're talking about proving identity",
    "start": "149750",
    "end": "156290"
  },
  {
    "text": "over a network and one of these use case is we're not going to cover because it's pretty well taken care of in kubernetes",
    "start": "156290",
    "end": "163099"
  },
  {
    "text": "that use case is how a pod connects to the kubernetes api server if it needs to access kubernetes itself and proves its",
    "start": "163099",
    "end": "172370"
  },
  {
    "text": "identity and for that we have service account tokens so the the two use cases that have been kind of a gap in",
    "start": "172370",
    "end": "177650"
  },
  {
    "text": "kubernetes are pods being able to prove their identity to other pods in the",
    "start": "177650",
    "end": "182720"
  },
  {
    "text": "application so they can get access to services or resources and pods being able to sort of export their identity to",
    "start": "182720",
    "end": "189950"
  },
  {
    "text": "external systems so maybe you're running kubernetes inside of a public cloud and",
    "start": "189950",
    "end": "195829"
  },
  {
    "text": "you want to get access to some of the managed services that that cloud provides likes a big table or some other",
    "start": "195829",
    "end": "202400"
  },
  {
    "text": "service and you want only a particular subset of the pods in your cluster to have access to those services or those",
    "start": "202400",
    "end": "208579"
  },
  {
    "text": "resources you want to be able to prove who those pods are when they make that connection or maybe you have a third",
    "start": "208579",
    "end": "215209"
  },
  {
    "text": "party service that you're using that has nothing to do with the provider of your infrastructure but you still want to be",
    "start": "215209",
    "end": "220310"
  },
  {
    "text": "able to give differential access to different parts of your application maybe only one pod actually needs to",
    "start": "220310",
    "end": "225620"
  },
  {
    "text": "access that data only or only one pod needs to actually access that service all right I'm gonna hand it over to Mike",
    "start": "225620",
    "end": "232400"
  },
  {
    "text": "to talk about desirable properties so I want to get into desirable properties that you might want to consider when",
    "start": "232400",
    "end": "238699"
  },
  {
    "text": "picking an identity solution for kubernetes so these are some very",
    "start": "238699",
    "end": "244189"
  },
  {
    "text": "high-level properties that you want to consider they're actually fairly complex so I'll try to summarize them quickly so",
    "start": "244189",
    "end": "249650"
  },
  {
    "text": "strongly authenticated what does that mean in this context so strongly authenticated to me means unforgeable",
    "start": "249650",
    "end": "256820"
  },
  {
    "text": "'ti so we want to pick in to strongly",
    "start": "256820",
    "end": "261859"
  },
  {
    "text": "vet and thoroughly vet any attributes that we placed inside the identity assertion and we want to pick a",
    "start": "261859",
    "end": "268580"
  },
  {
    "text": "communication protocol for communicating this assertion that does not compromise",
    "start": "268580",
    "end": "273920"
  },
  {
    "text": "the security and certainty of that identity proof so prevent escalation we",
    "start": "273920",
    "end": "280400"
  },
  {
    "text": "want to be aware of the security boundary that exists in kubernetes today for example we wouldn't want a node",
    "start": "280400",
    "end": "287450"
  },
  {
    "text": "compromise to compromise all identities in a cluster so a good user experience",
    "start": "287450",
    "end": "292840"
  },
  {
    "text": "this is about removing hurdles or barriers to adoption we want our",
    "start": "292840",
    "end": "299660"
  },
  {
    "text": "identity solutions to be easy to deploy and operate on kubernetes and we also",
    "start": "299660",
    "end": "304700"
  },
  {
    "text": "want them to be easily consumed by application developers performance and",
    "start": "304700",
    "end": "309920"
  },
  {
    "text": "availability kubernetes is designed in a way that if the control plane goes down",
    "start": "309920",
    "end": "315110"
  },
  {
    "text": "the data plane coasts we don't want to undo any of that hard work by taking a",
    "start": "315110",
    "end": "321560"
  },
  {
    "text": "strong dependency on the control plane to perform workload to workload authentication so what we'd like to do",
    "start": "321560",
    "end": "331490"
  },
  {
    "text": "in this talk is give a kind of high-level overview of four options",
    "start": "331490",
    "end": "337310"
  },
  {
    "text": "options that you might want to consider if your goal is to establish this kind of workload identity in your",
    "start": "337310",
    "end": "343280"
  },
  {
    "text": "applications this is no by no means an exhaustive list but a good place to start in terms of what's available to",
    "start": "343280",
    "end": "350120"
  },
  {
    "text": "you in kubernetes and in some projects that are designed to work well with kubernetes so we're gonna talk about the",
    "start": "350120",
    "end": "355760"
  },
  {
    "text": "kubernetes certificates api we're gonna talk about the sort of new and improved kubernetes service account tokens we're",
    "start": "355760",
    "end": "362000"
  },
  {
    "text": "going to talk about sto and then we're gonna talk about spire so to start off",
    "start": "362000",
    "end": "368450"
  },
  {
    "text": "we're going to talk about the kubernetes certificate API so kubernetes has native",
    "start": "368450",
    "end": "373490"
  },
  {
    "text": "support for some certificate provisioning flows these were actually originally introduced to support a",
    "start": "373490",
    "end": "379370"
  },
  {
    "text": "cubelet TLS credential bootstrap however they were designed to be general-purpose",
    "start": "379370",
    "end": "385910"
  },
  {
    "text": "and they're actually useful for workload to workload identity the entire provisioning flow is made up of a series",
    "start": "385910",
    "end": "393770"
  },
  {
    "text": "of controllers communicating through the API server it models a fall the model of kubernetes control",
    "start": "393770",
    "end": "399620"
  },
  {
    "text": "processes so let's dive in and understand how this provisioning process",
    "start": "399620",
    "end": "404660"
  },
  {
    "text": "works so the first step of the provisioning process the pod generates a",
    "start": "404660",
    "end": "411380"
  },
  {
    "text": "key locally builds the CSR and submits that CSR to the kubernetes certificates",
    "start": "411380",
    "end": "416450"
  },
  {
    "text": "API then an approver observes the pending CSR it does some authorization",
    "start": "416450",
    "end": "422990"
  },
  {
    "text": "checks and we're gonna dive into what those actually mean in a couple slides and assuming the authorization check",
    "start": "422990",
    "end": "429440"
  },
  {
    "text": "passes it approves the CSR then another signer observes the newly approved CSR",
    "start": "429440",
    "end": "436460"
  },
  {
    "text": "it signs a certificate and uploads that back to the kubernetes api the pod then",
    "start": "436460",
    "end": "442190"
  },
  {
    "text": "downloads its certificate and uses that certificate to authenticate to other",
    "start": "442190",
    "end": "447650"
  },
  {
    "text": "applications so what in this entire flow are you responsible for if you're using",
    "start": "447650",
    "end": "454310"
  },
  {
    "text": "the certificates API for workload to workload identity its these components",
    "start": "454310",
    "end": "461090"
  },
  {
    "text": "so you're responsible for linking in SSL",
    "start": "461090",
    "end": "466340"
  },
  {
    "text": "libraries to your pod and any relying party so that they can communicate and",
    "start": "466340",
    "end": "472370"
  },
  {
    "text": "authenticate client TLS you're also responsible for this approver component",
    "start": "472370",
    "end": "477950"
  },
  {
    "text": "so this approver component is the gatekeeper of the certificate API it",
    "start": "477950",
    "end": "483220"
  },
  {
    "text": "decides whether or not two certificates are signs so it's actually fairly high",
    "start": "483220",
    "end": "488570"
  },
  {
    "text": "privileged and sensitive component at a very high level this authorization check",
    "start": "488570",
    "end": "496250"
  },
  {
    "text": "can be divided into verifying two requirements of any CSR so the first",
    "start": "496250",
    "end": "504020"
  },
  {
    "text": "requirement that we have is that a workload is the origin of the CSR so",
    "start": "504020",
    "end": "509590"
  },
  {
    "text": "what this means is we don't want workload a to submit to be able to",
    "start": "509590",
    "end": "514880"
  },
  {
    "text": "submit CSRs for workload B the second requirement is that the workload is",
    "start": "514880",
    "end": "520729"
  },
  {
    "text": "authorized to act in the request context so what that means is if workload a is",
    "start": "520730",
    "end": "527450"
  },
  {
    "text": "requesting to serve service B we want to make sure that it's",
    "start": "527450",
    "end": "533970"
  },
  {
    "text": "authorized to do that we want to make sure that it's standing behind that specific service or we want to make sure",
    "start": "533970",
    "end": "542490"
  },
  {
    "text": "that any extensions that it has or any usages that are specified in the CSR are authorized extensions to be allocated to",
    "start": "542490",
    "end": "550709"
  },
  {
    "text": "that service or to that workload so once those two are satisfied we can then go",
    "start": "550709",
    "end": "558630"
  },
  {
    "text": "ahead and approve the CSR for later signing by the signing controller so",
    "start": "558630",
    "end": "565220"
  },
  {
    "text": "that's a very high-level view of the requirements of the CSR at CSR I prefer",
    "start": "565220",
    "end": "572010"
  },
  {
    "text": "controller however since this is an asynchronous control loop it is free to",
    "start": "572010",
    "end": "577110"
  },
  {
    "text": "do anything out-of-band it can do the challenges that are outlined in the Acne",
    "start": "577110",
    "end": "582329"
  },
  {
    "text": "spec that let's encrypt does or it can it can wait for a approver manual intervention by maybe an operator so",
    "start": "582329",
    "end": "590279"
  },
  {
    "text": "really it's up to you on how you satisfy or how you decide these super requirements are satisfied so that wraps",
    "start": "590279",
    "end": "598470"
  },
  {
    "text": "up a summary of the certificate provisioning flow it's really flexible",
    "start": "598470",
    "end": "605820"
  },
  {
    "text": "and pluggable however it does require a bit of upfront work to build that",
    "start": "605820",
    "end": "611399"
  },
  {
    "text": "approver and to retrofit your your workloads to be able to consume consumer",
    "start": "611399",
    "end": "617910"
  },
  {
    "text": "this certificate provisioning flow so the second option that I wanted to talk",
    "start": "617910",
    "end": "624510"
  },
  {
    "text": "about today is the kubernetes service account check-ins so these have been around since pre 1 dot o kubernetes so",
    "start": "624510",
    "end": "633120"
  },
  {
    "text": "you many of you are probably familiar with them we've actually done a ton of work on them over the last three or",
    "start": "633120",
    "end": "638790"
  },
  {
    "text": "three releases or so that make them generally useful for workload 2 workload",
    "start": "638790",
    "end": "644600"
  },
  {
    "text": "authentication these are actually useful",
    "start": "644600",
    "end": "650010"
  },
  {
    "text": "in circumstances where a certain client TLS is that breaks down for example",
    "start": "650010",
    "end": "655410"
  },
  {
    "text": "these tokens can traverse l7 proxies which make them often useful for",
    "start": "655410",
    "end": "662580"
  },
  {
    "text": "for communicating to external systems like AWS or vault so at a high level",
    "start": "662580",
    "end": "672240"
  },
  {
    "text": "this is the diagram of the provisioning flow for tokens it's pretty complex but",
    "start": "672240",
    "end": "680430"
  },
  {
    "text": "the key takeaway is that the cubelet upon starting a pod will request a token",
    "start": "680430",
    "end": "687149"
  },
  {
    "text": "for that pod it exposes that token to the pod via a volume the volume can then",
    "start": "687149",
    "end": "694890"
  },
  {
    "text": "the application running inside the pod can then read the token from that volume and present it applications the couplet",
    "start": "694890",
    "end": "703440"
  },
  {
    "text": "is also responsible for refreshing that token making sure it stays up to date however I'm not going to step through",
    "start": "703440",
    "end": "710279"
  },
  {
    "text": "this flow because as a user and consumer of the token api's this is actually all",
    "start": "710279",
    "end": "716970"
  },
  {
    "text": "you care about the pod reads the token from disk and presents the token to other apps so let's look at the first",
    "start": "716970",
    "end": "725399"
  },
  {
    "text": "half of this the the client-side part of this diagram the token volume config so",
    "start": "725399",
    "end": "732959"
  },
  {
    "text": "this is a config for a token projection all you have to specify is the path that",
    "start": "732959",
    "end": "739410"
  },
  {
    "text": "you want the token at the audience of the token and the expiration of the desired expiration or TTL of the token",
    "start": "739410",
    "end": "746870"
  },
  {
    "text": "if we zoom out a little bit this is an almost valid pod spec here we're asking",
    "start": "746870",
    "end": "753690"
  },
  {
    "text": "for the projection which is in the gray area at the bottom of this config to be",
    "start": "753690",
    "end": "758700"
  },
  {
    "text": "injected into the pod at bar talked to spike token path so all the application",
    "start": "758700",
    "end": "764760"
  },
  {
    "text": "has to do is periodically read from that path and use that token in a bearer",
    "start": "764760",
    "end": "770820"
  },
  {
    "text": "token header so part two of this diagram",
    "start": "770820",
    "end": "777540"
  },
  {
    "text": "what does the other app have to do what's its responsibility so that other",
    "start": "777540",
    "end": "782940"
  },
  {
    "text": "app is responsible for a token validation and to understand token validation let's take a closer look at",
    "start": "782940",
    "end": "789690"
  },
  {
    "text": "the token that we're sending around so the kubernetes token is a",
    "start": "789690",
    "end": "795410"
  },
  {
    "text": "jot it's a jws so it's a sign jot it contains the standard jot claims like",
    "start": "795410",
    "end": "803029"
  },
  {
    "text": "subject an audience it also contains some kubernetes specific metadata it's",
    "start": "803029",
    "end": "809269"
  },
  {
    "text": "how do you see compliant as an ID token so it can be verified like any other I",
    "start": "809269",
    "end": "816379"
  },
  {
    "text": "already see the ID token if you are",
    "start": "816379",
    "end": "821589"
  },
  {
    "text": "running inside the cluster we also expose an API from the API server called",
    "start": "821589",
    "end": "827749"
  },
  {
    "text": "the token review API so if you if this is easier for you and you don't want to",
    "start": "827749",
    "end": "833689"
  },
  {
    "text": "worry about validating jots correctly you can implement a flow where the pod",
    "start": "833689",
    "end": "840529"
  },
  {
    "text": "presents a token to the other app other app performs a token review with that",
    "start": "840529",
    "end": "846139"
  },
  {
    "text": "token the kubernetes api server will then validate the jot and return",
    "start": "846139",
    "end": "852379"
  },
  {
    "text": "authentication info contained inside the jawed the other app can then freely",
    "start": "852379",
    "end": "857989"
  },
  {
    "text": "apply authorization to the authentication info and if authorization",
    "start": "857989",
    "end": "863720"
  },
  {
    "text": "checks pass return the response so this is great if you're running inside the",
    "start": "863720",
    "end": "870470"
  },
  {
    "text": "cluster some drawbacks to it it's it's a",
    "start": "870470",
    "end": "877489"
  },
  {
    "text": "dependency on the control plane being up in order for workloads to do authentication to each other and it's",
    "start": "877489",
    "end": "884269"
  },
  {
    "text": "not available everywhere like I I wouldn't expect AWS to call into your",
    "start": "884269",
    "end": "890319"
  },
  {
    "text": "kubernetes cluster to do a token review so that's some downsides the kubernetes",
    "start": "890319",
    "end": "896539"
  },
  {
    "text": "api server also does some extra validation beyond a normal or a DC validation it actually does verifies",
    "start": "896539",
    "end": "904249"
  },
  {
    "text": "that the pod that the token was provisioned to is still running and this implements a form of token revocation",
    "start": "904249",
    "end": "910939"
  },
  {
    "text": "where you can delete the pod and then any tokens allocated to that pod will be invalidated",
    "start": "910939",
    "end": "918399"
  },
  {
    "text": "so to summarize this option it's a more",
    "start": "919930",
    "end": "925070"
  },
  {
    "text": "fully managed solution however it doesn't solve server authentication like",
    "start": "925070",
    "end": "930980"
  },
  {
    "text": "the certificates flow certificate identity provisioning could have so now",
    "start": "930980",
    "end": "938090"
  },
  {
    "text": "I want to hand it over to spike to talk a little bit about Sto so the mechanisms that Mike just talked",
    "start": "938090",
    "end": "946400"
  },
  {
    "text": "about sort of rely on your workloads kind of understanding that they're",
    "start": "946400",
    "end": "952130"
  },
  {
    "text": "running in kubernetes and calling kubernetes specifically API is to get",
    "start": "952130",
    "end": "957200"
  },
  {
    "text": "their identity information and to use the identity information that they get what I'm going to talk about are a",
    "start": "957200",
    "end": "962420"
  },
  {
    "text": "couple of ways to do workload identity that are kind of built to run on top of",
    "start": "962420",
    "end": "967460"
  },
  {
    "text": "kubernetes but don't take a hard dependency on kubernetes itself in order to work so the first one is sto and sto",
    "start": "967460",
    "end": "974540"
  },
  {
    "text": "is is is a big project it does a lot of things and workload identity is kind of",
    "start": "974540",
    "end": "981770"
  },
  {
    "text": "one small corner of it so I want to sort of preface this this discussion of this tio2 saying that we're taking a little",
    "start": "981770",
    "end": "987710"
  },
  {
    "text": "tiny piece of what a sto is and if you're interested in that there are other talks and lots of documentation",
    "start": "987710",
    "end": "993740"
  },
  {
    "text": "about sto and so with respect to workload identity and security really",
    "start": "993740",
    "end": "1001240"
  },
  {
    "text": "we're talking about being able to do this use case of a workload talking to some other workload or a pod talking to",
    "start": "1001240",
    "end": "1007540"
  },
  {
    "text": "some other pod inside kubernetes and sto is going to handle not just that",
    "start": "1007540",
    "end": "1013210"
  },
  {
    "text": "identity provisioning but it's actually gonna handle all the way up through secure encrypted communication so what",
    "start": "1013210",
    "end": "1021520"
  },
  {
    "text": "is co is designed to do is inject envoy which is a proxy into your pod so it'll",
    "start": "1021520",
    "end": "1030250"
  },
  {
    "text": "be running alongside each of the workloads and that proxy then transparently",
    "start": "1030250",
    "end": "1035439"
  },
  {
    "text": "intercepts all the traffic that your workload is sending and it can then sort",
    "start": "1035440",
    "end": "1041560"
  },
  {
    "text": "of upgrade any all of your traffic to talk over mutually authenticated TLS so",
    "start": "1041560",
    "end": "1047020"
  },
  {
    "text": "you don't have to make any application changes you can just insert sto into your cluster and",
    "start": "1047020",
    "end": "1053049"
  },
  {
    "text": "boy running capturing your traffic and sort of upgrading that connection from plain text that your application might",
    "start": "1053049",
    "end": "1058869"
  },
  {
    "text": "be speaking to mutually authenticated TLS so by mutually authenticated TLS I",
    "start": "1058869",
    "end": "1064059"
  },
  {
    "text": "mean that both the the clients checks that the server certificate is valid and",
    "start": "1064059",
    "end": "1069070"
  },
  {
    "text": "is who they think they should be talking to and the server checks that the client certificate and that it matches who they",
    "start": "1069070",
    "end": "1076149"
  },
  {
    "text": "think they should be talking to so you can do this basically transparently so",
    "start": "1076149",
    "end": "1081220"
  },
  {
    "text": "this certificates and the keys that go along with them are provided to envoys",
    "start": "1081220",
    "end": "1086230"
  },
  {
    "text": "via kubernetes secrets and sto has a component called sto Citadel whose",
    "start": "1086230",
    "end": "1092080"
  },
  {
    "text": "responsibility is to mint and refresh those certificates the certificates are",
    "start": "1092080",
    "end": "1097539"
  },
  {
    "text": "tied to kubernetes service accounts sort of like the service account tokens that Mike just discussed so you sort of",
    "start": "1097539",
    "end": "1104889"
  },
  {
    "text": "provision identities in your kubernetes cluster by creating service accounts and associating pods with those service",
    "start": "1104889",
    "end": "1111309"
  },
  {
    "text": "accounts and then sto sort of handles the rest of actually getting you that mutually authenticated TLS connection so",
    "start": "1111309",
    "end": "1118090"
  },
  {
    "text": "this sort of is is kind of contrasting to the kubernetes certificates API which",
    "start": "1118090",
    "end": "1123850"
  },
  {
    "text": "is which is very flexible but requires you to do a lot more work to actually get to that end goal of having mutual",
    "start": "1123850",
    "end": "1131830"
  },
  {
    "text": "TLS connection the other project that I want to talk about is spire and we",
    "start": "1131830",
    "end": "1138700"
  },
  {
    "text": "actually just had to talk about spire and I'll be able to cover it in a little bit of detail but there's also another",
    "start": "1138700",
    "end": "1144220"
  },
  {
    "text": "talk tomorrow at 1:45 if you're interested in a more deep dial in spire",
    "start": "1144220",
    "end": "1150029"
  },
  {
    "text": "so spire is a CN CF project and it",
    "start": "1150029",
    "end": "1155799"
  },
  {
    "text": "implements spiffy standards so spiffy is the secure production identity framework",
    "start": "1155799",
    "end": "1161289"
  },
  {
    "text": "for everyone and spiffy is basically trying to design platform independent api's and specs for workload identity so",
    "start": "1161289",
    "end": "1170830"
  },
  {
    "text": "spire implements spiffy api's and this allows you to do kind of both of these",
    "start": "1170830",
    "end": "1178059"
  },
  {
    "text": "use cases that were concerned about in this talk both work load 2 workload communication where you can easily",
    "start": "1178059",
    "end": "1184230"
  },
  {
    "text": "provision TLS certificates and and set up TLS between your workloads or",
    "start": "1184230",
    "end": "1189330"
  },
  {
    "text": "Jah tokens which can be useful for taking some identity inside a cluster",
    "start": "1189330",
    "end": "1194560"
  },
  {
    "text": "and making a proof of that identity to something outside the cluster by providing it with a jaunt that it's able",
    "start": "1194560",
    "end": "1200830"
  },
  {
    "text": "to verify independently so as I said",
    "start": "1200830",
    "end": "1207190"
  },
  {
    "text": "spiffy is this set of API is one of the api's is called the workload API and this is the primary API that your pod is",
    "start": "1207190",
    "end": "1214240"
  },
  {
    "text": "going to use to communicate with spire so instead of talking to the kubernetes",
    "start": "1214240",
    "end": "1220810"
  },
  {
    "text": "api and using kind of kubernetes specific idioms to get TLS certificates or jobs you can use this platform",
    "start": "1220810",
    "end": "1226060"
  },
  {
    "text": "independent mechanism which can be useful if you have workloads that are running outside of kubernetes or trying",
    "start": "1226060",
    "end": "1232090"
  },
  {
    "text": "to build kind of an identity system that can span your entire organization if you're not all kind of in on kubernetes",
    "start": "1232090",
    "end": "1237790"
  },
  {
    "text": "so for TLS certificates this is pretty straightforward your pod wakes up it",
    "start": "1237790",
    "end": "1244180"
  },
  {
    "text": "knows a well-known UNIX domain socket endpoint and asks that endpoint for a",
    "start": "1244180",
    "end": "1250750"
  },
  {
    "text": "certificate over a GOG RPC service call and of this aspire control plane",
    "start": "1250750",
    "end": "1257290"
  },
  {
    "text": "responds with a certificate and private key that it should use and that's basically it",
    "start": "1257290",
    "end": "1263290"
  },
  {
    "text": "spire will automatically push new updates to your certificate before your certificate expires so you just need to",
    "start": "1263290",
    "end": "1269410"
  },
  {
    "text": "keep listening on that API and you'll get new certificates that you can rollover to before the ones that you",
    "start": "1269410",
    "end": "1275830"
  },
  {
    "text": "have expired if you want to do jots it's also over the workload API and pretty",
    "start": "1275830",
    "end": "1282190"
  },
  {
    "text": "simple the pod wakes up it says give me the job that represents my identity also",
    "start": "1282190",
    "end": "1288130"
  },
  {
    "text": "passing all along the audience that you want as part of the job and then the control plane sends you the",
    "start": "1288130",
    "end": "1295000"
  },
  {
    "text": "response which is now a bearer token that you can put on requests and if the",
    "start": "1295000",
    "end": "1300910"
  },
  {
    "text": "if you are a workload that's trying to to validate jobs you can either use standard jot libraries sort of in the",
    "start": "1300910",
    "end": "1307840"
  },
  {
    "text": "same way as as Mike just talked about for kubernetes or there is this end",
    "start": "1307840",
    "end": "1313780"
  },
  {
    "text": "point on the workload API that you can just hand it a jot and say please verify this job for me",
    "start": "1313780",
    "end": "1319559"
  },
  {
    "text": "it'll send you back the authentication info including whether or not that job was valid and if so what claims can we",
    "start": "1319559",
    "end": "1324840"
  },
  {
    "text": "extract from that job that tells me about what that workload was so the last",
    "start": "1324840",
    "end": "1332789"
  },
  {
    "text": "thing that we want to do is is kind of give you some some high-level advice",
    "start": "1332789",
    "end": "1338370"
  },
  {
    "text": "about about how to maybe choose between these these different options and I want to sort of preface this discussion by",
    "start": "1338370",
    "end": "1345059"
  },
  {
    "text": "saying this is not the sort of end all kind of opinion about what what you should use more of a starting place to",
    "start": "1345059",
    "end": "1351059"
  },
  {
    "text": "kind of tell you where to look and get more information because there are more to these systems than can fit in a 30 minute talk we haven't really been able",
    "start": "1351059",
    "end": "1357360"
  },
  {
    "text": "to dive into how these things stack up in terms of the desirable property is that Mike was talking about at the",
    "start": "1357360",
    "end": "1364080"
  },
  {
    "text": "beginning so with that said thinking about what are your use cases are if",
    "start": "1364080",
    "end": "1370710"
  },
  {
    "text": "your primary goal is to get this kind of secure communication from an application",
    "start": "1370710",
    "end": "1376649"
  },
  {
    "text": "pod to other application pods in your cluster using using TLS then you can use",
    "start": "1376649",
    "end": "1383220"
  },
  {
    "text": "the kubernetes certificates API and get those TLS certificates if you want to",
    "start": "1383220",
    "end": "1389309"
  },
  {
    "text": "control very carefully what those certificate are in those certificates and how they're approved or if you want",
    "start": "1389309",
    "end": "1396299"
  },
  {
    "text": "a kind of more fully automatic system especially if you're kind of bought into the rest of the value that sto is going",
    "start": "1396299",
    "end": "1402450"
  },
  {
    "text": "to provide your cluster then use do is a great solution for this use case as well",
    "start": "1402450",
    "end": "1408499"
  },
  {
    "text": "so for the second case if you're interested in authenticating to external systems such as vault or AWS or GCP we",
    "start": "1409249",
    "end": "1418710"
  },
  {
    "text": "recommend that you use kubernetes service Kentuckians so these go where",
    "start": "1418710",
    "end": "1424409"
  },
  {
    "text": "some of the other peer authentication mechanisms can't go because they can traverse l7 load balancers they're also",
    "start": "1424409",
    "end": "1432409"
  },
  {
    "text": "verification is also built on standards and these standards are actually already",
    "start": "1432409",
    "end": "1437639"
  },
  {
    "text": "supported by many external systems and lastly if your use case involves either",
    "start": "1437639",
    "end": "1445950"
  },
  {
    "text": "multiple kubernetes clusters that you need to federate the control over these these identities or if you need to",
    "start": "1445950",
    "end": "1452970"
  },
  {
    "text": "both do both Ponta pod communication and being able to use jots and get out to",
    "start": "1452970",
    "end": "1458520"
  },
  {
    "text": "external entities or if you are concerned about kind of tying your identity system too closely to",
    "start": "1458520",
    "end": "1464910"
  },
  {
    "text": "kubernetes itself if you have other platforms that you want to be able to control identity on then the spiffy",
    "start": "1464910",
    "end": "1471060"
  },
  {
    "text": "standards are our great solution for this and of course spire is the CN CF project that sort of best implementing",
    "start": "1471060",
    "end": "1478260"
  },
  {
    "text": "these spiffy standards all right that is",
    "start": "1478260",
    "end": "1484380"
  },
  {
    "text": "all we have what questions can we answer for you we've still got a few minutes",
    "start": "1484380",
    "end": "1491960"
  },
  {
    "text": "thank you yeah",
    "start": "1495260",
    "end": "1500690"
  },
  {
    "text": "it does it does not so the question was do we do do any of the I guess do are",
    "start": "1510480",
    "end": "1517890"
  },
  {
    "text": "you asking specifically about there's kubernetes certificate API or all of them okay so the question was does the",
    "start": "1517890",
    "end": "1525210"
  },
  {
    "text": "kubernetes certificate API support replication the kubernetes certificate",
    "start": "1525210",
    "end": "1531750"
  },
  {
    "text": "API it does not support revocation what what was that correct that's the current",
    "start": "1531750",
    "end": "1546180"
  },
  {
    "text": "situation so the kubernetes certificate API does not support a certificate revocation I think in general my",
    "start": "1546180",
    "end": "1553500"
  },
  {
    "text": "recommendation would be signed certificates for very short durations that gets around some of the long-term",
    "start": "1553500",
    "end": "1561690"
  },
  {
    "text": "issues you might have with leak certificates two days is a lot better",
    "start": "1561690",
    "end": "1566850"
  },
  {
    "text": "than a year but yes that that is currently unsolved there's open issues",
    "start": "1566850",
    "end": "1572030"
  },
  {
    "text": "we're just looking for the right solution yeah yeah",
    "start": "1572030",
    "end": "1579020"
  },
  {
    "text": "so the question was what is the best pattern to integrate with enterprise PKI",
    "start": "1581730",
    "end": "1588390"
  },
  {
    "text": "so I think that yes Tio's story here is",
    "start": "1588390",
    "end": "1596040"
  },
  {
    "text": "pretty good which is that if you you have to issue an intermediate CA",
    "start": "1596040",
    "end": "1601950"
  },
  {
    "text": "certificate and then sort of delegate that to sto so sto will still be will",
    "start": "1601950",
    "end": "1607780"
  },
  {
    "text": "still be signing but it can be an intermediate CEA in the kind of rest of your TLS hierarchy",
    "start": "1607780",
    "end": "1614800"
  },
  {
    "text": "I believe spire also supports that mode where you issue an intermediate CA does",
    "start": "1614800",
    "end": "1620320"
  },
  {
    "text": "the kubernetes api kubernetes root CA that is used to provision cubelet",
    "start": "1620320",
    "end": "1627450"
  },
  {
    "text": "identities should probably exist one per cluster so it does not mesh well with a",
    "start": "1627450",
    "end": "1634300"
  },
  {
    "text": "company-wide PKI and that's because coop cubelet identities are currently",
    "start": "1634300",
    "end": "1640420"
  },
  {
    "text": "unscoped they're not scoped to a single cluster so the recommendation right now",
    "start": "1640420",
    "end": "1645880"
  },
  {
    "text": "is to have a single see a hierarchy per cluster however that might change",
    "start": "1645880",
    "end": "1651120"
  },
  {
    "text": "depending on if people have time to fix that yeah and I will say that that both",
    "start": "1651120",
    "end": "1656350"
  },
  {
    "text": "sto inspire are on the roadmap is support for not just having sort of",
    "start": "1656350",
    "end": "1663730"
  },
  {
    "text": "intermediate CAS but actually completely delegating the signing tasks to another",
    "start": "1663730",
    "end": "1669190"
  },
  {
    "text": "program like vault or your your own enterprise CA yeah",
    "start": "1669190",
    "end": "1677610"
  },
  {
    "text": "so the question was does spire supports any sv IDs which is spiffy verifiable ID",
    "start": "1682119",
    "end": "1690589"
  },
  {
    "text": "documents other than x.509 and the answer is yes spire also supports the",
    "start": "1690589",
    "end": "1696529"
  },
  {
    "text": "kind of newly SPECT jot best fits so that that's the jot use case that I was",
    "start": "1696529",
    "end": "1702769"
  },
  {
    "text": "talking about we actually have spiffy standards for for that type of aspect",
    "start": "1702769",
    "end": "1709989"
  },
  {
    "text": "I'm gonna get into so many invites if I answer that question so the question was",
    "start": "1726849",
    "end": "1736909"
  },
  {
    "text": "in two years what is going to be the most mature and widely adopted yeah so I",
    "start": "1736909",
    "end": "1747079"
  },
  {
    "text": "think that it is it's pretty it's a pretty safe bet that kubernetes itself",
    "start": "1747079",
    "end": "1753979"
  },
  {
    "text": "is going to be supported and adopted so those those kubernetes api s are pretty",
    "start": "1753979",
    "end": "1760759"
  },
  {
    "text": "safe st also feels like it has a big kind of not not just a single company",
    "start": "1760759",
    "end": "1768469"
  },
  {
    "text": "and kind of behind it so spire right now is kind of the newest kid on the block",
    "start": "1768469",
    "end": "1775909"
  },
  {
    "text": "and is starting to get get some community behind it but is still largely",
    "start": "1775909",
    "end": "1782569"
  },
  {
    "text": "I think being worked on or invested in by a single company that's not to say",
    "start": "1782569",
    "end": "1787639"
  },
  {
    "text": "that that they're not going to move on that and they are they are now part of the CN CF so I think it may not be the",
    "start": "1787639",
    "end": "1797899"
  },
  {
    "text": "safest bet from our position today but that that doesn't necessarily mean that",
    "start": "1797899",
    "end": "1806829"
  },
  {
    "text": "it kind of become this like wide widely kind of Community Supported project I",
    "start": "1806829",
    "end": "1812370"
  },
  {
    "text": "will also say that the core kubernetes primitives are not designed to be fully",
    "start": "1812370",
    "end": "1818429"
  },
  {
    "text": "feature --fill they're designed to enable bootstrapping feature 'full systems on top of kubernetes as they're",
    "start": "1818429",
    "end": "1826920"
  },
  {
    "text": "designed as extension points for something like spire and sto to sit on top of I yes that's definitely a",
    "start": "1826920",
    "end": "1843360"
  },
  {
    "text": "consideration all right so the question was will this core functionality enable",
    "start": "1843360",
    "end": "1851160"
  },
  {
    "text": "multi cluster use cases and the answer is yes that is definitely always a",
    "start": "1851160",
    "end": "1857400"
  },
  {
    "text": "consideration and I think it's already enabling multi cluster in sto 1.1 which",
    "start": "1857400",
    "end": "1863640"
  },
  {
    "text": "depends now on the service Kentuckians to bootstrap trust into their Citadel's",
    "start": "1863640",
    "end": "1869820"
  },
  {
    "text": "certificate authority so yes it is a consideration always yeah the question",
    "start": "1869820",
    "end": "1879330"
  },
  {
    "text": "was is anybody planning on working on delegation I think that as if he had",
    "start": "1879330",
    "end": "1889320"
  },
  {
    "text": "talked about delegation for a little bit we've talked about it a little bit in the context of kubernetes the one issue",
    "start": "1889320",
    "end": "1896429"
  },
  {
    "text": "with delegation is it's often modeled differently per identity system and it's",
    "start": "1896429",
    "end": "1904740"
  },
  {
    "text": "not an identity focused it's not entirely identity it kind of is both",
    "start": "1904740",
    "end": "1910160"
  },
  {
    "text": "authorization and identity so there's like weird sticky things where you kind",
    "start": "1910160",
    "end": "1916650"
  },
  {
    "text": "of want an employee to deploy a job but if I deploy chain employee changes teams",
    "start": "1916650",
    "end": "1921690"
  },
  {
    "text": "you want that job to keep running so it's like an authorization check at a point in time that grants some",
    "start": "1921690",
    "end": "1927690"
  },
  {
    "text": "permission that might be renewable and very sticky and complex and sometimes",
    "start": "1927690",
    "end": "1932820"
  },
  {
    "text": "depends a lot on how you want to use that delegation so we might design one for kubernetes for the asynchronous",
    "start": "1932820",
    "end": "1939660"
  },
  {
    "text": "control process flows I'm not sure if it'll be generally useful",
    "start": "1939660",
    "end": "1945240"
  },
  {
    "text": "we aren't thinking about it in the context of kubernetes oh yeah and we have those conversations in the yes do",
    "start": "1945240",
    "end": "1952450"
  },
  {
    "text": "security working group I don't think there are concrete plans yet about what we are going to do there and same thing",
    "start": "1952450",
    "end": "1958600"
  },
  {
    "text": "with spiffy the topic kind of comes up but we don't have concrete plans at the",
    "start": "1958600",
    "end": "1964750"
  },
  {
    "text": "moment yeah there's end-user that for example there's end-user delegation delegating",
    "start": "1964750",
    "end": "1969970"
  },
  {
    "text": "end-user authority through a stack of services that's an entirely different problem than the kubernetes control",
    "start": "1969970",
    "end": "1976510"
  },
  {
    "text": "process problem so yeah it's very nuanced and hard yeah so the question",
    "start": "1976510",
    "end": "1988780"
  },
  {
    "text": "was can we go back to the approvers duty slide did you just want to get a picture",
    "start": "1988780",
    "end": "1993910"
  },
  {
    "text": "of it or do you have a question before",
    "start": "1993910",
    "end": "2000420"
  },
  {
    "text": "we this way",
    "start": "2000420",
    "end": "2002810"
  },
  {
    "text": "yeah that's a good question so the question was what are the other apps how are they validating the certificate so",
    "start": "2007690",
    "end": "2014440"
  },
  {
    "text": "kubernetes through its service account token that mechanism actually",
    "start": "2014440",
    "end": "2020679"
  },
  {
    "text": "distributes the ca cert of the cluster to every pot in the cluster by default so that see a cert exists on disk",
    "start": "2020679",
    "end": "2028549"
  },
  {
    "text": "somewhere unless you turn it off so the pods client certificate will be",
    "start": "2028549",
    "end": "2035330"
  },
  {
    "text": "signed by CA cert that that lives inside the container",
    "start": "2035330",
    "end": "2040809"
  },
  {
    "text": "so the the cert so the question was whether this is asserting that the the",
    "start": "2051200",
    "end": "2057470"
  },
  {
    "text": "certificate was was signed by the cluster and whether that's scoped to the pod and so it sort of depends on how",
    "start": "2057470",
    "end": "2065260"
  },
  {
    "text": "you're assigning identity in this system right so you're responsible for for",
    "start": "2065260",
    "end": "2070878"
  },
  {
    "text": "writing this approver and so the pod will send a CSR that that has an",
    "start": "2070879",
    "end": "2076730"
  },
  {
    "text": "identity attached to it and then your approver has to decide should I sign that certificate and then if you do sign",
    "start": "2076730",
    "end": "2083299"
  },
  {
    "text": "it then that pod can now act as that identity so you might scope that identity down to just the pod you might",
    "start": "2083299",
    "end": "2089690"
  },
  {
    "text": "scope that identity to an entire micro service you might scope that identity to a particular DNS name etc so whatever",
    "start": "2089690",
    "end": "2096589"
  },
  {
    "text": "whatever scope you you have approved that's what the pot is going to be able",
    "start": "2096589",
    "end": "2102589"
  },
  {
    "text": "to prove to the referring party or to the other apps and that certificate changes up to a cluster wide root and",
    "start": "2102589",
    "end": "2110059"
  },
  {
    "text": "that root certificate the public part of that is distributed in all pods so you",
    "start": "2110059",
    "end": "2115190"
  },
  {
    "text": "just validate the certificate chain up to the root and and the root is available everywhere and that's just",
    "start": "2115190",
    "end": "2121160"
  },
  {
    "text": "standard TLS or SSL library stuff you just put this this CA in and then say",
    "start": "2121160",
    "end": "2126890"
  },
  {
    "text": "okay here's my certificate please validate it",
    "start": "2126890",
    "end": "2130599"
  },
  {
    "text": "yeah so so the question was if I want to allow a specific pod to talk to me I",
    "start": "2134630",
    "end": "2140160"
  },
  {
    "text": "have to build that in and and in general what we've been talking about is is identity there's a whole separate",
    "start": "2140160",
    "end": "2146520"
  },
  {
    "text": "question which is authorization right is is the identity question is like is this",
    "start": "2146520",
    "end": "2152730"
  },
  {
    "text": "thing that I'm talking to what it claims to be and that that's the identity question but there's a separate question",
    "start": "2152730",
    "end": "2159150"
  },
  {
    "text": "which is are they allowed to be doing what they are trying to do and that's authorization and you you you can't",
    "start": "2159150",
    "end": "2165150"
  },
  {
    "text": "really get a good authorization decision without the identity piece first and that's what we're focused on focusing on",
    "start": "2165150",
    "end": "2171960"
  },
  {
    "text": "in this yeah so the question was how",
    "start": "2171960",
    "end": "2181320"
  },
  {
    "text": "does the approver get any information that it can rely on to make the decision so the approver can do stuff out of",
    "start": "2181320",
    "end": "2189210"
  },
  {
    "text": "out-of-band and there are lots of interesting things that you could do you could do TPMS you",
    "start": "2189210",
    "end": "2194280"
  },
  {
    "text": "could do all kinds of interesting out-of-band stuff but but just out of the box though the csr gets marked by",
    "start": "2194280",
    "end": "2201060"
  },
  {
    "text": "kubernetes itself with the service account of the pod that submitted the csr so if all you want to do is tie a",
    "start": "2201060",
    "end": "2207960"
  },
  {
    "text": "certificate to a particular service account or pod you can just read that",
    "start": "2207960",
    "end": "2213420"
  },
  {
    "text": "information out of the kubernetes api server what we record the authentication information on the CSR creation yeah yes",
    "start": "2213420",
    "end": "2224150"
  },
  {
    "text": "so the question was if the CA gets compromised do we have a mechanism to",
    "start": "2232550",
    "end": "2239560"
  },
  {
    "text": "regenerate secrets and kind of recover from that so in this certificate flow we didn't",
    "start": "2239560",
    "end": "2245180"
  },
  {
    "text": "actually use any secrets so we don't actually have to modify any data and SCD",
    "start": "2245180",
    "end": "2250430"
  },
  {
    "text": "I think that process would look like",
    "start": "2250430",
    "end": "2254440"
  },
  {
    "text": "provision a new CA add both CAS to the bundle wait a little while for all the",
    "start": "2255520",
    "end": "2262220"
  },
  {
    "text": "applications to re-apply for the process",
    "start": "2262220",
    "end": "2267980"
  },
  {
    "text": "and once everything everybody has a CA a certificate signed by the new CA you can",
    "start": "2267980",
    "end": "2273950"
  },
  {
    "text": "remove the old CA from the bundle there's no automation for that that's a very painful process there was a",
    "start": "2273950",
    "end": "2281780"
  },
  {
    "text": "question in the back there I'm sorry I can't hear",
    "start": "2281780",
    "end": "2289180"
  },
  {
    "text": "okay so if I heard correctly the question is how how do I see the future or how do we see the future of multi",
    "start": "2305310",
    "end": "2311130"
  },
  {
    "text": "cluster identity and whether we imagine that there's going to be a kind of",
    "start": "2311130",
    "end": "2318650"
  },
  {
    "text": "hierarchy of of assertions kind of back to it to a root and I can answer kind of",
    "start": "2318650",
    "end": "2325440"
  },
  {
    "text": "from the perspective of our discussions in in spiffy and the answer that we kind",
    "start": "2325440",
    "end": "2335370"
  },
  {
    "text": "of have have settled on in spiffy is that you create different trust domains",
    "start": "2335370",
    "end": "2340980"
  },
  {
    "text": "maybe you associate those with with clusters or maybe you associate them we can put multiple clusters in a trust",
    "start": "2340980",
    "end": "2346800"
  },
  {
    "text": "domain but there's one kind of control plane that issuing identities for that and the sort of root of trust for that",
    "start": "2346800",
    "end": "2354720"
  },
  {
    "text": "control plane is is a single certificate and it doesn't have to be part of a central hierarchy and then we have",
    "start": "2354720",
    "end": "2362250"
  },
  {
    "text": "spiffy api's that allow you to federate that trust and basically say okay well for this trust domain i want to believe",
    "start": "2362250",
    "end": "2368250"
  },
  {
    "text": "this root certificate for this other trust and may know and believe this other root certificate and automatically handle distributing that information",
    "start": "2368250",
    "end": "2374700"
  },
  {
    "text": "around the clusters so that that Federation API makes it much like the",
    "start": "2374700",
    "end": "2380190"
  },
  {
    "text": "the sort of chaining up to a root is largely about making it less painful to",
    "start": "2380190",
    "end": "2388010"
  },
  {
    "text": "delegate that signing Authority and so you can have some sub route that you",
    "start": "2388010",
    "end": "2394230"
  },
  {
    "text": "hide in a vault or something like that and it never has to change but when we build these api's that allow us to have",
    "start": "2394230",
    "end": "2401730"
  },
  {
    "text": "more agility around building and and and distributing these chains of are these",
    "start": "2401730",
    "end": "2407880"
  },
  {
    "text": "these routes of trust you don't necessarily have to go to that common root model in order to get the",
    "start": "2407880",
    "end": "2413460"
  },
  {
    "text": "functionality that you want which is sort of distributed signing of certificates that's my view anyway",
    "start": "2413460",
    "end": "2419330"
  },
  {
    "text": "sto is already already have support for multi cluster meshes and trusted means",
    "start": "2419330",
    "end": "2425880"
  },
  {
    "text": "have span multiple clusters so while the kubernetes native primitives are very",
    "start": "2425880",
    "end": "2434670"
  },
  {
    "text": "cluster centric at this time they are capable of being bootstrapped into level systems that support trust means",
    "start": "2434670",
    "end": "2442560"
  },
  {
    "text": "that spend many clusters and we got the lights so I think that is at the end of",
    "start": "2442560",
    "end": "2447810"
  },
  {
    "text": "our sort of public you and I but I'll at least be up here if you want to come up and have any any chance",
    "start": "2447810",
    "end": "2455420"
  }
]