[
  {
    "text": "hi everyone welcome to the talk on intro uh introduction and deep dive for uh Sig",
    "start": "199",
    "end": "5400"
  },
  {
    "text": "instrumentation I am Richa I'm a software engineer at Google and I'm also a contributor to Sig instrumentation",
    "start": "5400",
    "end": "11240"
  },
  {
    "text": "since around last year hello everyone I'm Damian uh I'm working for rat I'm a maintainer of Cate",
    "start": "11240",
    "end": "18320"
  },
  {
    "text": "metric metric server and prit adapter and I'm also a co- Tech lead for S",
    "start": "18320",
    "end": "24599"
  },
  {
    "text": "instrumentation hi everyone I'm David ashpole um I'm also co-lead or co- Tech",
    "start": "24599",
    "end": "29759"
  },
  {
    "text": "lead and I work at Google hi everyone I'm Han I'm also",
    "start": "29759",
    "end": "35280"
  },
  {
    "text": "software engineer Google and I am uh one of the chairs for S",
    "start": "35280",
    "end": "40879"
  },
  {
    "text": "instrumentation all right so our agenda for today is to First go through a quick introduction of uh the S instrumentation",
    "start": "40920",
    "end": "48160"
  },
  {
    "text": "our group uh what we do and what's our purpose uh and then we'll dive into the concrete subject which are um the sub",
    "start": "48160",
    "end": "55239"
  },
  {
    "text": "project that we are responsible for as well as the Tre principal signals are like cability signal that we can see",
    "start": "55239",
    "end": "61440"
  },
  {
    "text": "every day that are metrics logs and traces um and then we'll go over our future plans for the group and how you",
    "start": "61440",
    "end": "68600"
  },
  {
    "text": "can help us and contribute so what do we do um for those",
    "start": "68600",
    "end": "74439"
  },
  {
    "text": "who are not familiar about the kubernetes structure and the project it is separated into uh groups of interest",
    "start": "74439",
    "end": "82560"
  },
  {
    "text": "that have each uh a specific area to work on and in our case our Charter is to cover the best practices for cluster",
    "start": "82560",
    "end": "89360"
  },
  {
    "text": "observability across all the kuties components and to also create new component to cover some",
    "start": "89360",
    "end": "95799"
  },
  {
    "text": "of the gaps that we are seeing uh and for the sub project that are covering those gaps uh we have for",
    "start": "95799",
    "end": "102399"
  },
  {
    "text": "example cuate metric kog and Metric server and but we have way more um and we're also responsible for",
    "start": "102399",
    "end": "110240"
  },
  {
    "text": "uh so the signal metric logs and traces and we have also events in kuties that are similar to",
    "start": "110240",
    "end": "116719"
  },
  {
    "text": "logs um and how do we do it um so we try and fix all the issues that are relevant",
    "start": "116719",
    "end": "122560"
  },
  {
    "text": "to instrumentation in kubernetes and the sub project that we have we also review",
    "start": "122560",
    "end": "127880"
  },
  {
    "text": "all the code changes that are made to any signaling kubernetes uh metric log",
    "start": "127880",
    "end": "133599"
  },
  {
    "text": "and traces uh and we developed new features and announcement to drive",
    "start": "133599",
    "end": "138879"
  },
  {
    "text": "observability in kubernetes further um but we also still remain like we still need to maintain all the sub project",
    "start": "138879",
    "end": "145519"
  },
  {
    "text": "that we have um to not abandon them so talking about sub projects today we",
    "start": "145519",
    "end": "153160"
  },
  {
    "text": "will dive into four of them a metric server PR adapter usage metric collector",
    "start": "153160",
    "end": "158200"
  },
  {
    "text": "and Cube State metric so the first one is one of our oldest uh and even if you don't know its",
    "start": "158200",
    "end": "165640"
  },
  {
    "text": "name metric server you might have used it at some point because it is the source of cube cutle top the command",
    "start": "165640",
    "end": "172519"
  },
  {
    "text": "that you can use to introspect um part utilization no utilization um and it does that by",
    "start": "172519",
    "end": "180440"
  },
  {
    "text": "implementing the resource metrix API that is our way to connect to the autoscaling pipeline and for metrix Ser",
    "start": "180440",
    "end": "187959"
  },
  {
    "text": "to expose uh resource based or like resource utilization metrics to",
    "start": "187959",
    "end": "193400"
  },
  {
    "text": "kubernetes um so you would see it uh via the HPA or the vpa that would use this",
    "start": "193400",
    "end": "199920"
  },
  {
    "text": "API to autoscale your application based on uh the CPU usage of your port for",
    "start": "199920",
    "end": "206519"
  },
  {
    "text": "example and the metric that it gets uh it comes from cuet and you have one",
    "start": "206519",
    "end": "213000"
  },
  {
    "text": "instance on each of your node and metrix server will scrap that and expose it via Qi server to any",
    "start": "213000",
    "end": "220879"
  },
  {
    "text": "application but um metri server is very lightweight and has a dedicated purpose",
    "start": "220879",
    "end": "225920"
  },
  {
    "text": "and only support resource usage autoscaling um but if you want to do more than that uh you can use another",
    "start": "225920",
    "end": "233200"
  },
  {
    "text": "project that we own that is pit adapter that uh Implement three API instead of",
    "start": "233200",
    "end": "238760"
  },
  {
    "text": "just the resource metrix C it also implements the custom and external metric one um and does allow autoscaling",
    "start": "238760",
    "end": "246000"
  },
  {
    "text": "based on any kind of metric um so for example if you want to autoscale your application based on the rate of request",
    "start": "246000",
    "end": "253680"
  },
  {
    "text": "that it is receiving you can use a project such as pritus adapter and how it works is it scrapes or like it",
    "start": "253680",
    "end": "260600"
  },
  {
    "text": "queries pritus uh and then expose those metrics to cube API server that then exposes",
    "start": "260600",
    "end": "267080"
  },
  {
    "text": "them to your Autos scaling pipeline uh and because uh it queries pritus it",
    "start": "267080",
    "end": "274080"
  },
  {
    "text": "mean that any metric that you collect in your prome backend will be able to be used uh for",
    "start": "274080",
    "end": "281440"
  },
  {
    "text": "autoscaling um and nowadays there are even like solution that goes even further such as kada that allows you to",
    "start": "281440",
    "end": "287919"
  },
  {
    "text": "do that on any kind of source of data not only prits for example um the next project that I want",
    "start": "287919",
    "end": "295000"
  },
  {
    "text": "to talk about is pretty new and it was pretty exciting because it was given to us earlier this year um and it covers a",
    "start": "295000",
    "end": "302960"
  },
  {
    "text": "gap that we've noticed quite recently which is that when scraping resource uh",
    "start": "302960",
    "end": "308639"
  },
  {
    "text": "usage metrics um it doesn't scale well uh and there are some limits in terms of",
    "start": "308639",
    "end": "314520"
  },
  {
    "text": "performance that we were eating that were preventing us from reducing the uh",
    "start": "314520",
    "end": "319759"
  },
  {
    "text": "resolution to let's say uh 1 second to get even more data than we used to have",
    "start": "319759",
    "end": "325120"
  },
  {
    "text": "for example for capacity planning um and that particular tool is very specialized",
    "start": "325120",
    "end": "331600"
  },
  {
    "text": "for these metrics uh and allow for one second scrape so that uh in your uh",
    "start": "331600",
    "end": "337720"
  },
  {
    "text": "dashboard you can get a lot of data points for the resource utilization of your pod of your workload um for every",
    "start": "337720",
    "end": "346199"
  },
  {
    "text": "second uh it also perform aggregation at collection time which means that instead of having all the time series for",
    "start": "346199",
    "end": "353039"
  },
  {
    "text": "resource station stored in your monitoring back end uh the project",
    "start": "353039",
    "end": "358840"
  },
  {
    "text": "Aggregates them them ahead of time so only the key information are stored in your database and also one of the",
    "start": "358840",
    "end": "366639"
  },
  {
    "text": "advantage of um this project is that it doesn't require any PQ knowledge which",
    "start": "366639",
    "end": "372039"
  },
  {
    "text": "can be quite difficult uh to work with sometime and I will show you an example after afterward but one thing that is",
    "start": "372039",
    "end": "379280"
  },
  {
    "text": "important to mention is that uh it currently only works with C group Z1 so which means that from kubernetes 126",
    "start": "379280",
    "end": "386360"
  },
  {
    "text": "onward you need to disable coup Z2 in order to make it work and we are actually looking for contributors to",
    "start": "386360",
    "end": "392599"
  },
  {
    "text": "help us uh figuring out how we can uh fix that problem uh and contribution",
    "start": "392599",
    "end": "399120"
  },
  {
    "text": "welcome for sure so an example to get the P95",
    "start": "399120",
    "end": "404360"
  },
  {
    "text": "utilization for your workload with a sampling of 1 second would be um the one on the screen right now uh so as you can",
    "start": "404360",
    "end": "410919"
  },
  {
    "text": "see there is no promql at all um you have your uh aggregation that is",
    "start": "410919",
    "end": "416919"
  },
  {
    "text": "explained uh and also which operation you want to perform so it's prettyy straightforward and then it gives you",
    "start": "416919",
    "end": "423360"
  },
  {
    "text": "the metrics uh that you want um so then cuate metric which is",
    "start": "423360",
    "end": "429599"
  },
  {
    "text": "one of the most active sub project that we maintain today uh it is used to",
    "start": "429599",
    "end": "434680"
  },
  {
    "text": "generate preter style metrics based on any kubernetes API for example metrics",
    "start": "434680",
    "end": "440160"
  },
  {
    "text": "from pods deployment and in the example I shared below uh these two metrics can",
    "start": "440160",
    "end": "445199"
  },
  {
    "text": "give you for example an idea on how a an upgrade or like a rolling update went",
    "start": "445199",
    "end": "451639"
  },
  {
    "text": "with your deployment which is really insightful for cluster admins and there was a request from",
    "start": "451639",
    "end": "458240"
  },
  {
    "text": "quite some time to also add this support for crds because a cluster ad me wared",
    "start": "458240",
    "end": "463680"
  },
  {
    "text": "metrics about their crd so we added a new uh feature to support those and Via",
    "start": "463680",
    "end": "470440"
  },
  {
    "text": "configuration any cluster admin can add their metrics for their crds and here is an example for up time on a full uh",
    "start": "470440",
    "end": "478400"
  },
  {
    "text": "resource um however we've noticed when working on that that the original implementation",
    "start": "478400",
    "end": "485120"
  },
  {
    "text": "wasn't ideal uh and we are currently trying to improve it by first moving to a CD so that we don't need to restart",
    "start": "485120",
    "end": "491639"
  },
  {
    "text": "cuid metric every time and also try to simplify the configuration because with",
    "start": "491639",
    "end": "497080"
  },
  {
    "text": "some limit and there was some coron cases that we didn't handle well as well as the original syntax of the",
    "start": "497080",
    "end": "503759"
  },
  {
    "text": "configuration um wasn't as uh what we wanted like wasn't the best for the",
    "start": "503759",
    "end": "510240"
  },
  {
    "text": "users so we are trying to figure that out uh right now so if you want to contribute also feel free to to join",
    "start": "510240",
    "end": "517279"
  },
  {
    "text": "us and that's it for the sub project I will let an uh work you through uh re",
    "start": "517279",
    "end": "522399"
  },
  {
    "text": "richar works you through the metrix thanks Daman so let's talk about metrics",
    "start": "522399",
    "end": "527640"
  },
  {
    "text": "and kuties uh kuties uses Prometheus to instrument a ton of metrics that can be",
    "start": "527640",
    "end": "534160"
  },
  {
    "text": "consumed by software that understand the Prometheus metric format and these software apps can then develop",
    "start": "534160",
    "end": "540600"
  },
  {
    "text": "monitoring in the form of dashboards and um alerts on top of these consumed metrics uh to monitor commun workloads",
    "start": "540600",
    "end": "548600"
  },
  {
    "text": "uh because Prometheus has a client server architecture so kues components are instrumented using Prometheus client",
    "start": "548600",
    "end": "555079"
  },
  {
    "text": "libraries and the metrics are exposed via HTTP on a/ metrics endpoint that is",
    "start": "555079",
    "end": "560440"
  },
  {
    "text": "text based so before I jump into one of the bigger projects that uh falls under Sig",
    "start": "560440",
    "end": "567720"
  },
  {
    "text": "instrumentation metrics AR I wanted to give a bit of context a few years ago",
    "start": "567720",
    "end": "572800"
  },
  {
    "text": "Sig instrumentation was involved in a metrics overhaul project in which what we were trying to do was trying to bring",
    "start": "572800",
    "end": "579800"
  },
  {
    "text": "the then current uh kues metrics up to the recommended or Prometheus standard",
    "start": "579800",
    "end": "586160"
  },
  {
    "text": "uh and as a part of that project uh what we ended up doing was we renamed a bunch",
    "start": "586160",
    "end": "592000"
  },
  {
    "text": "of then existing metrics now renaming a metric is tricky because when you do that the original metric it seizes to",
    "start": "592000",
    "end": "599680"
  },
  {
    "text": "exist and what you've done is you've created a new metric in place of the original metric so all the dashboards",
    "start": "599680",
    "end": "606560"
  },
  {
    "text": "and the alerts that were still referencing the original metrics they stop working they break and that's what",
    "start": "606560",
    "end": "613200"
  },
  {
    "text": "we ended up doing so we broke monitoring for all the community's users who were still relying on these original metrics",
    "start": "613200",
    "end": "618720"
  },
  {
    "text": "that we had renamed as a part of metrics overhaul and that's how we realize that",
    "start": "618720",
    "end": "623880"
  },
  {
    "text": "one cannot just simply rename metrics and so to prevent this from",
    "start": "623880",
    "end": "629120"
  },
  {
    "text": "happening again Sig instrumentation came up with the concept of having a metric framework around kubernetes metrics to",
    "start": "629120",
    "end": "635279"
  },
  {
    "text": "express certain stability guarantees uh this framework also helped us have some",
    "start": "635279",
    "end": "640360"
  },
  {
    "text": "automation uh in the form of certain checks to prevent contributors from introducing changes to metrics that can",
    "start": "640360",
    "end": "647000"
  },
  {
    "text": "cause breakage in the functionality for the end user of these metrics uh it also provided a mechanism",
    "start": "647000",
    "end": "653440"
  },
  {
    "text": "to centralize all the instrumentation related code and processes in one place and here is a link that you can visit to",
    "start": "653440",
    "end": "659480"
  },
  {
    "text": "read more about uh communi metrics framework so stability for communi",
    "start": "659480",
    "end": "666360"
  },
  {
    "text": "metrics uh currently is expressed in the form of stability levels or classes and",
    "start": "666360",
    "end": "671560"
  },
  {
    "text": "right now we have these four classes initially we started with just having Alpha metrics and stable metrics so for",
    "start": "671560",
    "end": "678760"
  },
  {
    "text": "Alpha metrics uh they can change any time they do not have any stability guarantees but a stable metric they",
    "start": "678760",
    "end": "685480"
  },
  {
    "text": "cannot change arbitrarily they have certain well- defined stabil guarantees for example if you wanted to deprecate a",
    "start": "685480",
    "end": "691920"
  },
  {
    "text": "stable metric you would have to provide a public announcement for its deprecation and even after the",
    "start": "691920",
    "end": "697000"
  },
  {
    "text": "deprecation the metric is going to be uh supported for a specific period of time but with these two levels we",
    "start": "697000",
    "end": "704399"
  },
  {
    "text": "realized that going from having no stability guarantees to suddenly making a metric immutable was too much of a",
    "start": "704399",
    "end": "711839"
  },
  {
    "text": "change and there was a need for introducing two more levels so we had uh internal and beta levels come up uh beta",
    "start": "711839",
    "end": "719839"
  },
  {
    "text": "level was introduced as this transitory phase for a metric that was on its journey to becoming a stable metric so a",
    "start": "719839",
    "end": "727160"
  },
  {
    "text": "beta level metrics uh they are likely to have more stability guarantees than Alpha metrics uh but internal metrics these",
    "start": "727160",
    "end": "734519"
  },
  {
    "text": "are uh more fluid kind of metrics they're very tightly coupled with the kuber codebase and as the code base",
    "start": "734519",
    "end": "740120"
  },
  {
    "text": "evolves these metrics can change structure so they do not have any uh stability guarantees associated with",
    "start": "740120",
    "end": "745920"
  },
  {
    "text": "them and it's not even recommended to use intern uh level metrics for monitoring kuties",
    "start": "745920",
    "end": "752600"
  },
  {
    "text": "workloads you can read more about the stability levels in the first link that's mentioned here and if you want to",
    "start": "752600",
    "end": "757839"
  },
  {
    "text": "know more about the process around deprecating a metric the second link is",
    "start": "757839",
    "end": "762920"
  },
  {
    "text": "helpful uh talking about some of the recent additions that we have made for metrics uh we recently released",
    "start": "762920",
    "end": "768680"
  },
  {
    "text": "autogenerated documentation for every single metric that exists in the kubernetes code base except for internal",
    "start": "768680",
    "end": "775360"
  },
  {
    "text": "level metrics uh we have done this using a very lab at static analysis pipeline",
    "start": "775360",
    "end": "780800"
  },
  {
    "text": "which pares all the files that exist for uh the kuber's code identifies all the",
    "start": "780800",
    "end": "786519"
  },
  {
    "text": "metrics definitions along with their stability classes and as you can see in the picture it generates a very nicely",
    "start": "786519",
    "end": "792519"
  },
  {
    "text": "formatted uh documentation uh along with the metric name a description about the",
    "start": "792519",
    "end": "798040"
  },
  {
    "text": "metric uh the stability level which it is at the type of the metric and the labels that it exposes uh this",
    "start": "798040",
    "end": "804560"
  },
  {
    "text": "documentation we hope can become uh handy in the time when you are debugging",
    "start": "804560",
    "end": "809680"
  },
  {
    "text": "some cluster issues and you want to quickly Identify some signals that the components are emitting that you that",
    "start": "809680",
    "end": "814839"
  },
  {
    "text": "can be useful uh during troubleshooting for your cluster issues uh there is a new metrics",
    "start": "814839",
    "end": "821600"
  },
  {
    "text": "endpoint also that we have introduced recently for all the kuun control plan components this recently went GA in",
    "start": "821600",
    "end": "828440"
  },
  {
    "text": "129 uh I worked personally on this when I had joined uh Sig instrumentation last",
    "start": "828440",
    "end": "834000"
  },
  {
    "text": "year uh so it'll be cool if you guys can check this out and let me know if you have any questions so this endpoint uh",
    "start": "834000",
    "end": "840560"
  },
  {
    "text": "Returns the SLI Health Data regarding um the different kubernetes control plan",
    "start": "840560",
    "end": "846120"
  },
  {
    "text": "components health so there are different health checks that are performed and when uh you invoke this endpoint it's",
    "start": "846120",
    "end": "853800"
  },
  {
    "text": "going to give you uh details about uh the health checks that were done for the for those components this endpoint it",
    "start": "853800",
    "end": "860279"
  },
  {
    "text": "exposes um two metrics one is a gauge denoting the current state of the health",
    "start": "860279",
    "end": "865519"
  },
  {
    "text": "check that was performed for the component and the second one is a counter that denotes the cumulative result for the health check that was",
    "start": "865519",
    "end": "871920"
  },
  {
    "text": "done for that particular component uh the example is showing the metrics sli's endpoint for uh uh Cube API server uh",
    "start": "871920",
    "end": "880279"
  },
  {
    "text": "and as I said before the first metric here is the gauge that's telling you that uh the result for the pink health",
    "start": "880279",
    "end": "887160"
  },
  {
    "text": "check that it did was a success and the second metric is the kuun health checks",
    "start": "887160",
    "end": "892320"
  },
  {
    "text": "total it's telling you that the result of the Ping health check scene so far was like success twice",
    "start": "892320",
    "end": "899959"
  },
  {
    "text": "uh this metric is intended to be scraped at a higher frequency because these are low cardinality metrics and uh because",
    "start": "899959",
    "end": "908800"
  },
  {
    "text": "they can be scraped at higher frequency they can give you more granular signal about the health of your kubernetes",
    "start": "908800",
    "end": "913920"
  },
  {
    "text": "components uh and can be useful to compute SLO or availability stats for your cluster you can read more about",
    "start": "913920",
    "end": "921320"
  },
  {
    "text": "these endpoints in the link that's provided here and we have also introduced a beta",
    "start": "921320",
    "end": "929160"
  },
  {
    "text": "level metric uh it's called the feature enablement metric which exposes all the",
    "start": "929160",
    "end": "934639"
  },
  {
    "text": "feature Gates that exist in the kuties version your cluster is currently using and it'll also tell you whether uh the",
    "start": "934639",
    "end": "941480"
  },
  {
    "text": "feature is enabled or uh disabled at a given point in time so in the example you can see that API priority and",
    "start": "941480",
    "end": "948079"
  },
  {
    "text": "fairness a beta feature is enabled in the cluster but uh API server identity",
    "start": "948079",
    "end": "953279"
  },
  {
    "text": "and Alpha feature is currently disabled in your cluster uh that's it about",
    "start": "953279",
    "end": "958920"
  },
  {
    "text": "metrics and up next to talk about logs is Han thanks hi everyone my name is Han uh",
    "start": "958920",
    "end": "966240"
  },
  {
    "text": "my GitHub handle is logical Han but today I'm going to be talking about logs so I guess you can call me logs",
    "start": "966240",
    "end": "976000"
  },
  {
    "text": "ealon sorry uh I didn't actually run this by my",
    "start": "976399",
    "end": "981720"
  },
  {
    "text": "co-speaker here because I I feared that they would veto me but I had to make the",
    "start": "981720",
    "end": "987160"
  },
  {
    "text": "joke uh so serious business logging uh so in kubernetes we use this Library",
    "start": "987160",
    "end": "993480"
  },
  {
    "text": "called klog it's short for kubernetes logger um it is actually forked from a",
    "start": "993480",
    "end": "998880"
  },
  {
    "text": "different Library called glog which was short for Google logger and it's been",
    "start": "998880",
    "end": "1004519"
  },
  {
    "text": "heavily modified and adapted for kubernetes as you can see by the snippet here it knows how to parse kubernetes",
    "start": "1004519",
    "end": "1010600"
  },
  {
    "text": "objects into a string friendly format also conforms to the logger",
    "start": "1010600",
    "end": "1016480"
  },
  {
    "text": "interface so for those of you who don't know logg ER it is a side project by Tim Hawkin to introduce a log",
    "start": "1016480",
    "end": "1024079"
  },
  {
    "text": "API and what this does is it decouples the implementation of the log from the",
    "start": "1024079",
    "end": "1031400"
  },
  {
    "text": "writing of the log so basically it's an API over",
    "start": "1031400",
    "end": "1036600"
  },
  {
    "text": "loggers um and the reason for this is because oftentimes the people who are writing logs are different from the",
    "start": "1036600",
    "end": "1043000"
  },
  {
    "text": "people who consume them so kubernetes de developers are the ones writing the logs",
    "start": "1043000",
    "end": "1049559"
  },
  {
    "text": "often during development and it is cluster administrators who care about ingesting logs because they want to",
    "start": "1049559",
    "end": "1056160"
  },
  {
    "text": "debug their cluster so what we have done is uh integrated logger directly into",
    "start": "1056160",
    "end": "1062520"
  },
  {
    "text": "klog so kog is not only an implementation of a logger it also",
    "start": "1062520",
    "end": "1068400"
  },
  {
    "text": "exposes an API that allows you to inject other loggers into it which is a little bit confusing but basically that allows",
    "start": "1068400",
    "end": "1075960"
  },
  {
    "text": "you to have to Output l in multiple formats and specifically uh",
    "start": "1075960",
    "end": "1082559"
  },
  {
    "text": "we support today text and Json",
    "start": "1082559",
    "end": "1087360"
  },
  {
    "text": "output uh logs are notoriously problematic I don't know how many of you out here have probably run a grep for",
    "start": "1089400",
    "end": "1097919"
  },
  {
    "text": "logs using an error string like literally grep error uh probably all of",
    "start": "1097919",
    "end": "1103400"
  },
  {
    "text": "you I've done it myself um but that isn't really the best way to to look for",
    "start": "1103400",
    "end": "1109919"
  },
  {
    "text": "logs right and we can do better than that so one of the efforts that um our",
    "start": "1109919",
    "end": "1115520"
  },
  {
    "text": "Sig embarked on was structured logging which basically allows you to append key",
    "start": "1115520",
    "end": "1120640"
  },
  {
    "text": "value pairs typed key value pairs to your logs in order to get typed",
    "start": "1120640",
    "end": "1125720"
  },
  {
    "text": "information in your output and this allows you to have a systematic output for log messages so",
    "start": "1125720",
    "end": "1134480"
  },
  {
    "text": "that makes it easier for you to find the specific log line that you looking looking for or even uh output the stuff",
    "start": "1134480",
    "end": "1142480"
  },
  {
    "text": "into a nicely structured Json so what this looks like in practice is",
    "start": "1142480",
    "end": "1148640"
  },
  {
    "text": "this uh this is text Bas format and as you can see uh you have your log header",
    "start": "1148640",
    "end": "1154280"
  },
  {
    "text": "which is a timestamp you have your message and then you have random key value Pairs and you can see an example",
    "start": "1154280",
    "end": "1159559"
  },
  {
    "text": "of for instance a pod and you can see how easy it would be to GP for",
    "start": "1159559",
    "end": "1167240"
  },
  {
    "text": "that in Json you would have nicely output format like this and you could",
    "start": "1167240",
    "end": "1174760"
  },
  {
    "text": "ingest this into a database and query against uh you know whatever relevant",
    "start": "1174760",
    "end": "1179840"
  },
  {
    "text": "Fields you would want so pretty helpful but we realized that there was",
    "start": "1179840",
    "end": "1186679"
  },
  {
    "text": "something missing and that's uh you know not everywhere in the",
    "start": "1186679",
    "end": "1192400"
  },
  {
    "text": "kubernetes code base is it easy to pass parameters around for logs and it's not",
    "start": "1192400",
    "end": "1199400"
  },
  {
    "text": "always practical to just start appending a bunch of parameters to Method names just so you can pass parameters into",
    "start": "1199400",
    "end": "1206080"
  },
  {
    "text": "structured logs so we embarked on this other effort called contextual logging",
    "start": "1206080",
    "end": "1211240"
  },
  {
    "text": "which allows you to append key value pairs to a context and it is actually",
    "start": "1211240",
    "end": "1218280"
  },
  {
    "text": "good golang practice to pass context along and so your go routines know when",
    "start": "1218280",
    "end": "1224520"
  },
  {
    "text": "to stop um and so what we can do is we can piggy back off of an existing best",
    "start": "1224520",
    "end": "1230880"
  },
  {
    "text": "practice we can append metadata about a request that we want instrumented and",
    "start": "1230880",
    "end": "1238080"
  },
  {
    "text": "then we can pass that to a logger so that we have access to data where",
    "start": "1238080",
    "end": "1243240"
  },
  {
    "text": "normally you might not be able to get it and this allows us to have like pod level information in maybe deeply nested",
    "start": "1243240",
    "end": "1250159"
  },
  {
    "text": "request methods right so that makes stuff a lot easier this effort is currently in beta and um we could we",
    "start": "1250159",
    "end": "1259240"
  },
  {
    "text": "have converted Cube scheduler but we are looking for contributors to help us migrate the rest of the codebase so Cube",
    "start": "1259240",
    "end": "1266400"
  },
  {
    "text": "controller manager and API server and cuet would be",
    "start": "1266400",
    "end": "1270600"
  },
  {
    "text": "next uh so if you are interested in helping out with our logging efforts we",
    "start": "1272000",
    "end": "1277080"
  },
  {
    "text": "have spun out a working group and uh the organizers are American Patrick and",
    "start": "1277080",
    "end": "1284080"
  },
  {
    "text": "they're available on slack and there is a regular working group meeting uh that",
    "start": "1284080",
    "end": "1289799"
  },
  {
    "text": "deals with the structured logging contextual logging issues that we have mentioned here and next I believe is",
    "start": "1289799",
    "end": "1297919"
  },
  {
    "text": "David cool hey everyone I'm David um and I'm going to tell you about tracing in",
    "start": "1298600",
    "end": "1304360"
  },
  {
    "text": "kubernetes so to start out with um metrics and logs have been around in Cube for quite a while but tracing is",
    "start": "1304360",
    "end": "1311400"
  },
  {
    "text": "relatively new um so for those who aren't familiar distributed tracing um",
    "start": "1311400",
    "end": "1317039"
  },
  {
    "text": "is a way to Telemetry from multiple different applications and somehow",
    "start": "1317039",
    "end": "1322679"
  },
  {
    "text": "combine them back together to get a picture of what happen to a single request along the way so user might make",
    "start": "1322679",
    "end": "1329919"
  },
  {
    "text": "a request to a front end um and then that might require making a request to a",
    "start": "1329919",
    "end": "1335159"
  },
  {
    "text": "back end and you'd like to be able to combine those into a single view um for that particular request to kind of get",
    "start": "1335159",
    "end": "1342440"
  },
  {
    "text": "context around what was going on what maybe caused it to be fast or slow Etc",
    "start": "1342440",
    "end": "1349080"
  },
  {
    "text": "um and in order to do that distributed tracing attaches generates and attaches",
    "start": "1349080",
    "end": "1354640"
  },
  {
    "text": "an ID to that specific request we call that a trace context and it's a w3c",
    "start": "1354640",
    "end": "1361480"
  },
  {
    "text": "standard um and that way the front end in this case when it writes Telemetry",
    "start": "1361480",
    "end": "1367200"
  },
  {
    "text": "can attach that ID and so can the back end and then at the end you can Group by it in order to reconstruct this tree um",
    "start": "1367200",
    "end": "1375320"
  },
  {
    "text": "so that's the basics and in Cube we use um open Telemetry which has um been",
    "start": "1375320",
    "end": "1380919"
  },
  {
    "text": "gaining traction recently but we only use it for tracing today so there's a few places in",
    "start": "1380919",
    "end": "1387679"
  },
  {
    "text": "kubernetes that sort of match that um server with nested server model one of",
    "start": "1387679",
    "end": "1393159"
  },
  {
    "text": "those is the API server and etcd where it might be very difficult if you're debugging an API server issue to figure",
    "start": "1393159",
    "end": "1400559"
  },
  {
    "text": "out okay I see a log here about this request but then how do I know which",
    "start": "1400559",
    "end": "1406400"
  },
  {
    "text": "etcd transaction that's a associated with so if you're using distributed tracing here you'll get a span for the",
    "start": "1406400",
    "end": "1413640"
  },
  {
    "text": "API server and then you'll see the matching Span in etcd um that'll help you figure out that um maybe the problem",
    "start": "1413640",
    "end": "1421360"
  },
  {
    "text": "was because ET CD's right was slow or maybe it was in the API server waiting on authorization or something like",
    "start": "1421360",
    "end": "1428880"
  },
  {
    "text": "that and the other place where we have this model is between the cuet and the container runtime right where you might",
    "start": "1428880",
    "end": "1435279"
  },
  {
    "text": "you're creating a pod and that involves pulling the image and starting the container um and you don't know",
    "start": "1435279",
    "end": "1440799"
  },
  {
    "text": "necessarily if your pod's starting up slowly because it's the cuit waiting on",
    "start": "1440799",
    "end": "1446159"
  },
  {
    "text": "the API server or if it's because the container runtime um is slow creating",
    "start": "1446159",
    "end": "1451279"
  },
  {
    "text": "files or um doing cgroup stuff right so it' be nice to know where exactly the",
    "start": "1451279",
    "end": "1456400"
  },
  {
    "text": "problem is um and we've been hard at work on this for quite a few releases now and",
    "start": "1456400",
    "end": "1462799"
  },
  {
    "text": "they both of these features API server and cuet tracing went beta in 127",
    "start": "1462799",
    "end": "1468840"
  },
  {
    "text": "um and that was two releases ago so um since then we've been getting a lot of",
    "start": "1468840",
    "end": "1474919"
  },
  {
    "text": "feedback we've been making a lot of small bug fixes and we hope to promote both of them to GA in the near future",
    "start": "1474919",
    "end": "1481520"
  },
  {
    "text": "but not a whole lot has changed if you say watched this talk last",
    "start": "1481520",
    "end": "1486799"
  },
  {
    "text": "year um to give you an example of what this looks like because I think these are pretty cool um this is an example of",
    "start": "1487200",
    "end": "1494080"
  },
  {
    "text": "an API server Trace um and you can see the ETD Span in there and uh you can see",
    "start": "1494080",
    "end": "1501760"
  },
  {
    "text": "that actually you can't see but there's um a little authentication span here that it's doing so you can sort of see",
    "start": "1501760",
    "end": "1508360"
  },
  {
    "text": "the breakdown of where it's spending time on its requests and if there was something wrong this would be very useful for identifying exactly where in",
    "start": "1508360",
    "end": "1515679"
  },
  {
    "text": "the API server where in at CD the problem was likely to",
    "start": "1515679",
    "end": "1520440"
  },
  {
    "text": "lie um and same thing with the cuet the current state is that if you create a",
    "start": "1521039",
    "end": "1526480"
  },
  {
    "text": "pod and that request or in that Trace is sampled then you'll get a view that looks like this that shows the breakdown",
    "start": "1526480",
    "end": "1531840"
  },
  {
    "text": "of here's pulling the object and creating the sandbox and starting the containers Etc um can be really helpful",
    "start": "1531840",
    "end": "1539200"
  },
  {
    "text": "especially if you're trying to optimize for fast pod",
    "start": "1539200",
    "end": "1543398"
  },
  {
    "text": "startup um so that's all well and good let's talk about where we're going in",
    "start": "1544480",
    "end": "1549520"
  },
  {
    "text": "the future with this now that tracing is sort of entering a more mature phase in",
    "start": "1549520",
    "end": "1555559"
  },
  {
    "text": "kubernetes so I I this says current but really this is maybe the previous way",
    "start": "1555559",
    "end": "1561399"
  },
  {
    "text": "that most people would debug things kubernetes components is that you would get an alert right for some Metric",
    "start": "1561399",
    "end": "1568600"
  },
  {
    "text": "that's not behaving the way you expect um you go check out your dashboards and",
    "start": "1568600",
    "end": "1573880"
  },
  {
    "text": "you find kind of approximately what's wrong maybe it's a problem isolated to one node maybe it's a problem isolated",
    "start": "1573880",
    "end": "1581360"
  },
  {
    "text": "to a particular replica of the API server um and you find some metadata",
    "start": "1581360",
    "end": "1586880"
  },
  {
    "text": "that correlates with the problems you're seeing right and so the next thing you do is you go search through the logs for",
    "start": "1586880",
    "end": "1593320"
  },
  {
    "text": "that particular node you know what was the cuet doing at this time what was the container runtime doing at this time see",
    "start": "1593320",
    "end": "1598799"
  },
  {
    "text": "if you can find any clues about what might be going wrong and then traces today are mostly still used as like kind",
    "start": "1598799",
    "end": "1607360"
  },
  {
    "text": "of a special debugging tool right you turn it on you generate some data you maybe run some test scenarios to get",
    "start": "1607360",
    "end": "1614559"
  },
  {
    "text": "this really cool detailed tracing stuff but you don't generally run it all the time at least in kubernetes",
    "start": "1614559",
    "end": "1620320"
  },
  {
    "text": "today uh but we hope for a better future so",
    "start": "1620320",
    "end": "1625559"
  },
  {
    "text": "ideally we want to be able to get from the metrics we start with right we get an alert and we'd like to be able to",
    "start": "1625559",
    "end": "1632039"
  },
  {
    "text": "look at our dashboards and use things like exemplars to link from you know the",
    "start": "1632039",
    "end": "1637919"
  },
  {
    "text": "latency spike in our dashboard to an example Trace that shows us exactly what was going on or or an example like pod",
    "start": "1637919",
    "end": "1645679"
  },
  {
    "text": "startup or API server request that demonstrates the issue that we were seeing that generated the alert for us",
    "start": "1645679",
    "end": "1652039"
  },
  {
    "text": "so one of our plans is to add exemplars to the metrics that we produce um the other thing is you can",
    "start": "1652039",
    "end": "1661039"
  },
  {
    "text": "actually move between traces and logs so you can start with logs or start with traces um and move back and forth if you",
    "start": "1661039",
    "end": "1668600"
  },
  {
    "text": "attach the trace metadata that I talked about earlier that context to your logs",
    "start": "1668600",
    "end": "1674799"
  },
  {
    "text": "that you write and so the feature that Han was talking about earlier contextual logging will allow us to easily do that",
    "start": "1674799",
    "end": "1681559"
  },
  {
    "text": "um everywhere that we have tracing so that if you have a trace that shows an example of what's going on you can",
    "start": "1681559",
    "end": "1687480"
  },
  {
    "text": "easily go find the logs that are associated with exactly what was happening at that point in time um so",
    "start": "1687480",
    "end": "1693480"
  },
  {
    "text": "this is where we'd really like to get to and uh yeah that's kind of the things",
    "start": "1693480",
    "end": "1698559"
  },
  {
    "text": "that we're going to work on moving forward so we're an open Sig we're all",
    "start": "1698559",
    "end": "1704799"
  },
  {
    "text": "friendly I promise um and we love new contributors or people who have",
    "start": "1704799",
    "end": "1710240"
  },
  {
    "text": "experience trying to use any of the features we've talked about today that's all very helpful for us so we' love your",
    "start": "1710240",
    "end": "1715799"
  },
  {
    "text": "involvement um the best way is probably to attend our Sig meetings or message us on slack um we definitely need help with",
    "start": "1715799",
    "end": "1723840"
  },
  {
    "text": "reviews or debugging issues that people have um and especially some of our sub",
    "start": "1723840",
    "end": "1729279"
  },
  {
    "text": "projects could really use contributors um if you're interested in Cube State or the Prometheus adapter you're welcome to",
    "start": "1729279",
    "end": "1736640"
  },
  {
    "text": "contact Daman here um the metric server is um you can contact mer if you're",
    "start": "1736640",
    "end": "1743000"
  },
  {
    "text": "interested in helping with that and if you're interested again in contextual logging or any of the logging efforts uh",
    "start": "1743000",
    "end": "1749159"
  },
  {
    "text": "Patrick is a great contact for that and um this is when we meet where",
    "start": "1749159",
    "end": "1755679"
  },
  {
    "text": "we meet and we'd be happy to see",
    "start": "1755679",
    "end": "1759480"
  },
  {
    "text": "everyone and that's it for our talk thank you everyone for coming I think we have a couple minutes for",
    "start": "1764840",
    "end": "1771650"
  },
  {
    "text": "[Applause] questions yeah I guess use the",
    "start": "1771650",
    "end": "1777600"
  },
  {
    "text": "microphone there if you have questions hey uh good to hear about the",
    "start": "1777600",
    "end": "1784080"
  },
  {
    "text": "development uh I want to ask so you're using LLP for traces now uh but the",
    "start": "1784080",
    "end": "1790000"
  },
  {
    "text": "metrics are exposed in promethus format right that's correct do you think it's uh reasonable feasible is it on a road",
    "start": "1790000",
    "end": "1797039"
  },
  {
    "text": "map to start exposing metrics or logs maybe sending them inlp to an OTL so",
    "start": "1797039",
    "end": "1803799"
  },
  {
    "text": "that's something we've talked about kind of informally um I think right now we",
    "start": "1803799",
    "end": "1809440"
  },
  {
    "text": "have to just balance like the tradeoffs of having an extra format we support",
    "start": "1809440",
    "end": "1815120"
  },
  {
    "text": "right which means like maybe more ways that people can report issues with the",
    "start": "1815120",
    "end": "1820399"
  },
  {
    "text": "potential benefits of it so um people have been very pleased with our Prometheus metrics for a long time and",
    "start": "1820399",
    "end": "1826840"
  },
  {
    "text": "um there a lot of dashboards built around them so we OTL is super cool and",
    "start": "1826840",
    "end": "1832760"
  },
  {
    "text": "is definitely uh becoming more popular but I think for us we just have to evaluate the the pros and cons of doing",
    "start": "1832760",
    "end": "1839960"
  },
  {
    "text": "it versus the cost of maintaining the addition additional um format so we're certainly not against it in any way but",
    "start": "1839960",
    "end": "1846840"
  },
  {
    "text": "we're really uh we haven't put together yet like a justification for why we would do something like that makes sense",
    "start": "1846840",
    "end": "1853120"
  },
  {
    "text": "so definitely not Crossing it out but not necessarily at the moment no no rush",
    "start": "1853120",
    "end": "1859080"
  },
  {
    "text": "with it no rush if you think if you have a compelling reason why you really want OTL from something reach out to us and",
    "start": "1859080",
    "end": "1866039"
  },
  {
    "text": "like we can evaluate that and yeah makes sense uh actually don't know I think",
    "start": "1866039",
    "end": "1871320"
  },
  {
    "text": "it's maybe you could quickly describe what exemplars work like in Prometheus",
    "start": "1871320",
    "end": "1877039"
  },
  {
    "text": "how they're exposed I actually don't know yeah so Prometheus does have support or it's a little complex open",
    "start": "1877039",
    "end": "1884240"
  },
  {
    "text": "metrics which is very very similar to Prometheus support exemplars um if you've ever seen like the hash and then",
    "start": "1884240",
    "end": "1891720"
  },
  {
    "text": "a big like Trace ID equals blah like that's what an Exemplar would look like in the text format for open metrics uh",
    "start": "1891720",
    "end": "1898960"
  },
  {
    "text": "we currently use Prometheus and not open metrics so that's sort of part of what we're trying to figure out as we try and",
    "start": "1898960",
    "end": "1905559"
  },
  {
    "text": "get to that ideal end state that I put up",
    "start": "1905559",
    "end": "1912240"
  },
  {
    "text": "welcome hi I'm not sure if this is the right place for the talk uh this question but uh",
    "start": "1912279",
    "end": "1917960"
  },
  {
    "text": "we we would like to get like the ephemeral storage usage of our pods and",
    "start": "1917960",
    "end": "1923200"
  },
  {
    "text": "I think we have to install some third party is that something that would be considered uh to be taken up by the any",
    "start": "1923200",
    "end": "1931679"
  },
  {
    "text": "of the sub projects that were talked about here this is very likely Sig node um",
    "start": "1931679",
    "end": "1938399"
  },
  {
    "text": "there funnily enough in my previous Life as a sign node approver I implemented",
    "start": "1938399",
    "end": "1944600"
  },
  {
    "text": "the ephemeral store or I worked on the ephemeral storage feature and the metrics for it um so I'd be happy to",
    "start": "1944600",
    "end": "1950039"
  },
  {
    "text": "chat afterwards as well",
    "start": "1950039",
    "end": "1954799"
  },
  {
    "text": "yeah all right thank you so much everyone for attending um we really appreciate it having everyone here and",
    "start": "1966240",
    "end": "1972159"
  },
  {
    "text": "have a nice cubec con come chat with us if you want",
    "start": "1972159",
    "end": "1979039"
  }
]