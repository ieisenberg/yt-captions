[
  {
    "text": "hello everyone hi my name is michael and um",
    "start": "80",
    "end": "5759"
  },
  {
    "text": "i'm sorry i can't be here you know i really want to be a business meeting person but um it's not meant to be",
    "start": "5759",
    "end": "12000"
  },
  {
    "text": "anyway so um the the title of my talk is running javascript python and ruby in web",
    "start": "12000",
    "end": "17680"
  },
  {
    "text": "assembly so essentially running scripting language in web assembly right you know so",
    "start": "17680",
    "end": "22880"
  },
  {
    "text": "since we had a technical audience so i would just cut to the checks right you know a heart started you know web",
    "start": "22880",
    "end": "28560"
  },
  {
    "text": "assembly was originally designed not to be a scripting language runtime right you know it's uh because we were",
    "start": "28560",
    "end": "34719"
  },
  {
    "text": "unsatisfied with javascript performance we want to run cc plus plus code rust",
    "start": "34719",
    "end": "39920"
  },
  {
    "text": "code and the compiled language code you know those um with close native performance right you know",
    "start": "39920",
    "end": "45840"
  },
  {
    "text": "those applications alongside um javascript you know so that javascript",
    "start": "45840",
    "end": "51039"
  },
  {
    "text": "applications can take advantage of that so it's meant as a supplement to javascript so as such inside the browser",
    "start": "51039",
    "end": "57920"
  },
  {
    "text": "the web assembly runtime route side by side of this javascript right you know so you have a you have a javascript",
    "start": "57920",
    "end": "64720"
  },
  {
    "text": "runtime and webassembly runtime there is a bridge between them and if you are writing",
    "start": "64720",
    "end": "70560"
  },
  {
    "text": "rust applications and comparing web assembly you would have something called the watson bike and if you are running",
    "start": "70560",
    "end": "77600"
  },
  {
    "text": "compiling c applications it would be something else so essentially there would be a web",
    "start": "77600",
    "end": "83680"
  },
  {
    "text": "assembly runtime with a bridge that goes to javascript the javascript runtime",
    "start": "83680",
    "end": "89439"
  },
  {
    "text": "acts as a host for the website meaning the web is something wrong time just to draw the computation but the",
    "start": "89439",
    "end": "96920"
  },
  {
    "text": "the networking data file system and all apps were provided by the javascript",
    "start": "96920",
    "end": "102399"
  },
  {
    "text": "runtime and made available to the web assembly application through the bridge right you know so that's",
    "start": "102399",
    "end": "109119"
  },
  {
    "text": "the original design you know so our original design web assembly really is to run compiler applications not to run",
    "start": "109119",
    "end": "115920"
  },
  {
    "text": "a java screen language application like javascript you know so",
    "start": "115920",
    "end": "121520"
  },
  {
    "text": "what has changed so how it's going you know why are we talking about web assembly running you",
    "start": "121520",
    "end": "127600"
  },
  {
    "text": "know javascript running inside web assignment now well before we get to why you know let's see you know how it",
    "start": "127600",
    "end": "133440"
  },
  {
    "text": "starts you know that's because again we are technical audience here right you know so strictly speaking",
    "start": "133440",
    "end": "139360"
  },
  {
    "text": "it can be done right you know because as um we just talked about whether somebody runs",
    "start": "139360",
    "end": "145120"
  },
  {
    "text": "applications compiled from c superspace and rust and then you know um although in the",
    "start": "145120",
    "end": "151440"
  },
  {
    "text": "browser is typically around side by side with javascript right but you know what is written in c surprise",
    "start": "151440",
    "end": "157840"
  },
  {
    "text": "plus or last practical practically everything right including all the javascript a lot of those",
    "start": "157840",
    "end": "164640"
  },
  {
    "text": "javascript runtimes interpreters python runtime interpreters ruby around having interpreters those are all written in cc",
    "start": "164640",
    "end": "171280"
  },
  {
    "text": "plus plus or rust so they can be compiled into webassembly once you compile those into webassembly",
    "start": "171280",
    "end": "177280"
  },
  {
    "text": "you would have a webassembly application that then you can feed the javascript source code python source code or ruby",
    "start": "177280",
    "end": "183360"
  },
  {
    "text": "source code to run them inside webassembly so to run web to run javascript inside webassembly you do",
    "start": "183360",
    "end": "191200"
  },
  {
    "text": "a nested architecture you know so you have a web assembly wrong time on the outer shell and it has a compiled",
    "start": "191200",
    "end": "198959"
  },
  {
    "text": "javascript runtime or python runtime whatever what have you inside it and as a web assembly application and then you",
    "start": "198959",
    "end": "205840"
  },
  {
    "text": "have um you know different api modules to provide access you know like networking or you know we're going to",
    "start": "205840",
    "end": "211280"
  },
  {
    "text": "talk about those later but then the scripting language application itself is feed",
    "start": "211280",
    "end": "216799"
  },
  {
    "text": "into the web assembly application and get executed there right you know so that's the overall activity so we know",
    "start": "216799",
    "end": "223360"
  },
  {
    "text": "it can be done a lot of the content in this talk is um you know we have that on our our website",
    "start": "223360",
    "end": "230319"
  },
  {
    "text": "so the example applications and all that so um you know so if you missed anything you you know don't worry that's you know",
    "start": "230319",
    "end": "236720"
  },
  {
    "text": "all the source codes available and so you know we know it can be done but why you know that's uh why do you",
    "start": "236720",
    "end": "242959"
  },
  {
    "text": "need to run um screaming language applications such as javascript python ruby side web",
    "start": "242959",
    "end": "248879"
  },
  {
    "text": "assembly so the reason really is because web assembly is growing",
    "start": "248879",
    "end": "254480"
  },
  {
    "text": "in popularity you know people are you know because although it's start from the use case where the native compiled",
    "start": "254480",
    "end": "261600"
  },
  {
    "text": "native applications running inside this browser is now on the server side on the edge on mobile devices on other places",
    "start": "261600",
    "end": "268400"
  },
  {
    "text": "and the people wants to you know",
    "start": "268400",
    "end": "273759"
  },
  {
    "text": "the the traditional c surprise plus developers or rus developers are using web assembly but new developers also",
    "start": "273759",
    "end": "279199"
  },
  {
    "text": "want to use webassembly and a lot of those new developers want to use javascript and python you know so",
    "start": "279199",
    "end": "285680"
  },
  {
    "text": "there's has been increasing need i think in the last um maybe two years that's uh",
    "start": "285680",
    "end": "291199"
  },
  {
    "text": "we have heard a lot from our customers from our community you know how you know how they want to use",
    "start": "291199",
    "end": "297840"
  },
  {
    "text": "javascript and python and ruby to let to a lesser extent in webassembly because simply because those are very popular",
    "start": "297840",
    "end": "304479"
  },
  {
    "text": "languages a lot of people know that a lot of people knows you know um to write",
    "start": "304479",
    "end": "310880"
  },
  {
    "text": "especially to write simple embedded functions that's uh that's that that are ideally suited for web assembly",
    "start": "310880",
    "end": "317199"
  },
  {
    "text": "so next let let's look at some use cases of web assembly to understand why the scripting languages are so important",
    "start": "317199",
    "end": "324960"
  },
  {
    "text": "so here are some use cases you know we we touched on them casually just um you know",
    "start": "324960",
    "end": "330160"
  },
  {
    "text": "just now so the first of course you know um it's what web summary has been",
    "start": "330160",
    "end": "336320"
  },
  {
    "text": "been very successful is to extend existing applications with user defined functions you know so um you",
    "start": "336320",
    "end": "342479"
  },
  {
    "text": "have applications that written in um any number of languages you know just to see",
    "start": "342479",
    "end": "347520"
  },
  {
    "text": "java you know whatever and then you want to turn your software into a platform into a pass right you know by allowing",
    "start": "347520",
    "end": "353919"
  },
  {
    "text": "your users or other people to customize it by adding their own functions to your",
    "start": "353919",
    "end": "358960"
  },
  {
    "text": "software right you know essentially turning your um you know this is what we call application serverless right you",
    "start": "358960",
    "end": "365120"
  },
  {
    "text": "know that's uh you know adding some for the user to add serverless functions or user defined functions into your",
    "start": "365120",
    "end": "371280"
  },
  {
    "text": "application and that customize it to do the jobs that they want right you know so um",
    "start": "371280",
    "end": "376800"
  },
  {
    "text": "in that case the user the application itself may be written in say rust or go you know whatever but",
    "start": "376800",
    "end": "385199"
  },
  {
    "text": "but the extension functions or the serverless functions is oftentimes written in the",
    "start": "385199",
    "end": "390400"
  },
  {
    "text": "in a language that is low code so you know javascript and python are i would say you know a fairly popular languages",
    "start": "390400",
    "end": "397360"
  },
  {
    "text": "that people want to use for this particular use case right and then there's um called h-cloud use",
    "start": "397360",
    "end": "403360"
  },
  {
    "text": "cases i mean you know that's uh you know um for instance the the the compute node on",
    "start": "403360",
    "end": "410000"
  },
  {
    "text": "cdn networks or um you know five gm ecs you know those are data centers um on",
    "start": "410000",
    "end": "417120"
  },
  {
    "text": "the edge that outside of the cloud big cloud data centers that are closer to the to the end users and you know so",
    "start": "417120",
    "end": "424000"
  },
  {
    "text": "there are a number of application use cases there so for instance there's uh isomorphic rendering",
    "start": "424000",
    "end": "430160"
  },
  {
    "text": "you know so meaning the server-side rendering of react or server-side rendering of popular javascript",
    "start": "430160",
    "end": "435360"
  },
  {
    "text": "frameworks you know today you know those are um those are rendered inside say",
    "start": "435360",
    "end": "441840"
  },
  {
    "text": "node.js or the node.js or dnode running inside docker right you know all inside of vm and easier way to run those",
    "start": "441840",
    "end": "448800"
  },
  {
    "text": "javascripts in in a lightweight environment such as web assembly and there's ai inference right you know so",
    "start": "448800",
    "end": "454560"
  },
  {
    "text": "you have um you know pictures or other data captured by edge",
    "start": "454560",
    "end": "459599"
  },
  {
    "text": "devices and it's we are economical to send it all all the way back to the to the cloud data center to process them",
    "start": "459599",
    "end": "466319"
  },
  {
    "text": "and we can process them right on the edge in edge cloud and uh um you know and have the results stored there or",
    "start": "466319",
    "end": "472800"
  },
  {
    "text": "have you know generate actions from there and you know things like that and then there's edgewise there's age",
    "start": "472800",
    "end": "478479"
  },
  {
    "text": "devices use cases you know webassembly because websimply is a lightweight runtime so it can run on mobile devices",
    "start": "478479",
    "end": "485520"
  },
  {
    "text": "as a cross-platform runtime uh essentially replacing the jvm in a lot of cases so you can you can embed a",
    "start": "485520",
    "end": "492240"
  },
  {
    "text": "website runtime inside a mobile application like uh like amazon has done",
    "start": "492240",
    "end": "497440"
  },
  {
    "text": "with amazon prime video you know that so they have a though the video player they have",
    "start": "497440",
    "end": "502479"
  },
  {
    "text": "um needs to run um you know c c based um you know applications and in order to",
    "start": "502479",
    "end": "509759"
  },
  {
    "text": "um simplify the the work to put the",
    "start": "509759",
    "end": "515839"
  },
  {
    "text": "to run the c based applications across um you know according to their blog over 8 000 different devices types you know",
    "start": "515839",
    "end": "523279"
  },
  {
    "text": "uh all kinds of android devices and and ios and you know things like that and so they need uh in the middle layer that's",
    "start": "523279",
    "end": "529839"
  },
  {
    "text": "that provide cross-platform compatibility and web assembly the uh with ability to",
    "start": "529839",
    "end": "535120"
  },
  {
    "text": "um you know wherever somebody would be you know one looks ideal you um you know runtimes for this purpose right so but",
    "start": "535120",
    "end": "541120"
  },
  {
    "text": "yeah but in this case whether somebody not should not only be able to run say c or us um compile native code but can",
    "start": "541120",
    "end": "548080"
  },
  {
    "text": "should also be able to run um say you know javascript and python things like that",
    "start": "548080",
    "end": "553440"
  },
  {
    "text": "and then um last you know there's a um you know um",
    "start": "553440",
    "end": "559200"
  },
  {
    "text": "there's um a very big set of use cases that we have",
    "start": "559200",
    "end": "564800"
  },
  {
    "text": "seen uh we're probably seeing today from from this um from the cognitive washing day is that",
    "start": "564800",
    "end": "571279"
  },
  {
    "text": "um you know a very interesting use case of web assembly is to use it as a standalone um",
    "start": "571279",
    "end": "578880"
  },
  {
    "text": "container you know directly managed by kubernetes right you know so you could have a you could have a service mesh",
    "start": "578880",
    "end": "585760"
  },
  {
    "text": "that has you know docker based or linux based services and but also have web",
    "start": "585760",
    "end": "590959"
  },
  {
    "text": "summary-based services and and in this case you know there's uh um",
    "start": "590959",
    "end": "596560"
  },
  {
    "text": "you know for a lot of computing tasks we especially embedded computing tasks you know dark linux containers could be too",
    "start": "596560",
    "end": "603360"
  },
  {
    "text": "heavyweight and i'm so you know we we want to write the service we want to write the microservices in",
    "start": "603360",
    "end": "609200"
  },
  {
    "text": "webassembly and uh and in this case you know java javascript and the python both provide",
    "start": "609200",
    "end": "616240"
  },
  {
    "text": "very you know compelling um you know um service frameworks for you know for",
    "start": "616240",
    "end": "622320"
  },
  {
    "text": "running those micro services so those are so those are the reasons why you know the use cases why do you want to",
    "start": "622320",
    "end": "628640"
  },
  {
    "text": "run javascript or python inside a web assembly",
    "start": "628640",
    "end": "633680"
  },
  {
    "text": "so um for today's talk you know we're gonna spend perhaps um you know um most of the",
    "start": "633680",
    "end": "639760"
  },
  {
    "text": "time talk about javascript you know because that's like we said this is one this is this is",
    "start": "639760",
    "end": "645600"
  },
  {
    "text": "the most important use case and we're going to talk about python and ruby at the end of this talk",
    "start": "645600",
    "end": "651360"
  },
  {
    "text": "so the way to run javascript inside webassembly like i've just said is to",
    "start": "651360",
    "end": "656640"
  },
  {
    "text": "take a c c plus plus space to javascript um interpreter or javascript runtime",
    "start": "656640",
    "end": "662079"
  },
  {
    "text": "engine and compile it into web assembly around you can do every single byte code and run as a web assembly application",
    "start": "662079",
    "end": "668160"
  },
  {
    "text": "right you know so um this is work that's that people have done you know that's we have done this as well but you know um",
    "start": "668160",
    "end": "674320"
  },
  {
    "text": "the community you know um you know have have been supported one of the you know most",
    "start": "674320",
    "end": "680160"
  },
  {
    "text": "lightweight and quickest um you know javascript um interpreter called quickjs um into",
    "start": "680160",
    "end": "686079"
  },
  {
    "text": "web assembly so as you can see the example here it's about leveraging the web assembly was it standard meaning",
    "start": "686079",
    "end": "693120"
  },
  {
    "text": "that um you know to have this quick js runtime running inside the",
    "start": "693120",
    "end": "698640"
  },
  {
    "text": "webassembly runtime in this particular case it was managed runtime it would have access to the operating system it",
    "start": "698640",
    "end": "704160"
  },
  {
    "text": "would access to the um to the command line argument for instance and it will have access to the local directory so it",
    "start": "704160",
    "end": "710880"
  },
  {
    "text": "will be able to read files and read from the command line you know and you know basically around a very standard um",
    "start": "710880",
    "end": "718399"
  },
  {
    "text": "javascript so it can essentially you can put any javascript content here and be able to",
    "start": "718399",
    "end": "723920"
  },
  {
    "text": "run it right you know so that's um you know that's the basic stuff you know that's uh to",
    "start": "723920",
    "end": "729360"
  },
  {
    "text": "have um to have a quick js runtime compiling webassembly to run any pure",
    "start": "729360",
    "end": "734800"
  },
  {
    "text": "javascript content and with this with quickjs um it's um",
    "start": "734800",
    "end": "741920"
  },
  {
    "text": "you know um it's very easy to have you know es6 module you know so meaning that's um now",
    "start": "741920",
    "end": "749040"
  },
  {
    "text": "we can um you know with um with the quickjs runtime inside webassembly you know inside say boss",
    "start": "749040",
    "end": "755760"
  },
  {
    "text": "match it can have access to the operating system so it can read multiple js files right you know so you can now",
    "start": "755760",
    "end": "762959"
  },
  {
    "text": "have um you know es6 syntax to um you know to export and import",
    "start": "762959",
    "end": "769120"
  },
  {
    "text": "functions across different files you know so here is example you know so at the top panel you have a you have an",
    "start": "769120",
    "end": "775279"
  },
  {
    "text": "exported function called hello and then you have uh on the top panel on the on the other side you have a synchronously",
    "start": "775279",
    "end": "781519"
  },
  {
    "text": "exported function and also a variable a string right and then you",
    "start": "781519",
    "end": "787040"
  },
  {
    "text": "know uh in the middle panel you have the um you know the the the javascript",
    "start": "787040",
    "end": "792320"
  },
  {
    "text": "application that imports the um you know the es6 modules because the",
    "start": "792320",
    "end": "797519"
  },
  {
    "text": "imports was imported from the file system so it's a it could be a synchronous",
    "start": "797519",
    "end": "802560"
  },
  {
    "text": "operation it could also be a a synchronous operation right you know so it depends on the the",
    "start": "802560",
    "end": "808800"
  },
  {
    "text": "the the syntax flavor that you want to use you could do it asynchronously or synchronously and so both are fine and",
    "start": "808800",
    "end": "816320"
  },
  {
    "text": "we want to demonstrate both use cases and then you know using the quickjs runtime you can you can load this and",
    "start": "816320",
    "end": "822880"
  },
  {
    "text": "run inside web assembly and you can see the results here you know that's uh you know it would be able to execute it would be",
    "start": "822880",
    "end": "829199"
  },
  {
    "text": "able to import those functions from those modules and execute them right you know so that's a very simple example of",
    "start": "829199",
    "end": "835760"
  },
  {
    "text": "you know um how to run uh yes six modules inside the web",
    "start": "835760",
    "end": "841040"
  },
  {
    "text": "inside webassembly and uh um the um so es6 module is uh it's a it's a",
    "start": "841040",
    "end": "848240"
  },
  {
    "text": "relatively new standard for javascript um for a lot of older javascripts um you",
    "start": "848240",
    "end": "853920"
  },
  {
    "text": "know especially the ones that in the in the node.js ecosystem um we are still using the the common.js",
    "start": "853920",
    "end": "860160"
  },
  {
    "text": "module cjs module you know to um there's a lot of javascript libraries are",
    "start": "860160",
    "end": "865199"
  },
  {
    "text": "written in that way so in order to use cjs we have uh we use another tool called um",
    "start": "865199",
    "end": "871600"
  },
  {
    "text": "uh called raw app so you know that's essentially you know there's uh um",
    "start": "871600",
    "end": "876959"
  },
  {
    "text": "you use rob.js to to package a javascript application that",
    "start": "876959",
    "end": "882720"
  },
  {
    "text": "imports those npm modules into a single file you know that's essentially it",
    "start": "882720",
    "end": "887839"
  },
  {
    "text": "takes down also it's it's pulls down all those um module files from from npm repository",
    "start": "887839",
    "end": "894639"
  },
  {
    "text": "and then combine them into a big file and then you know you can use website you can use the uh the quickjs",
    "start": "894639",
    "end": "901199"
  },
  {
    "text": "environment inside web or something to run the entire file right you know so that's um you know so we also have a demonstration here you know that's",
    "start": "901199",
    "end": "907519"
  },
  {
    "text": "basically it takes uh um you know the um digital signature module and then",
    "start": "907519",
    "end": "913600"
  },
  {
    "text": "computes md5 and it's also that's one you know takes one of the math libraries",
    "start": "913600",
    "end": "918720"
  },
  {
    "text": "and computes that so you know so those are so you know uh through rawa.js we can also support um",
    "start": "918720",
    "end": "925600"
  },
  {
    "text": "you know commonjs modules and a large part of the npm ecosystem a lot of npm modules can",
    "start": "925600",
    "end": "931440"
  },
  {
    "text": "be supported this way but if that's you know",
    "start": "931440",
    "end": "937040"
  },
  {
    "text": "if we just support es6 and and cgs they'll be you know it'll be interesting but um perhaps not yet",
    "start": "937040",
    "end": "943680"
  },
  {
    "text": "competing and what i find most compelling that adds new features to um you know to running javascript inside",
    "start": "943680",
    "end": "950000"
  },
  {
    "text": "webassembly is really to uh is to allow um rust-based implementations and",
    "start": "950000",
    "end": "956000"
  },
  {
    "text": "webassembly and javascript to interact with each other meaning that so you know you could",
    "start": "956000",
    "end": "961360"
  },
  {
    "text": "have you could write a function in rust and then expose this function as a javascript api so as a so as a",
    "start": "961360",
    "end": "968079"
  },
  {
    "text": "javascript developer they would not need to know the rust implementation behind it they just need to call the api so so",
    "start": "968079",
    "end": "974959"
  },
  {
    "text": "um a lot of this api is provided by um by quickjs itself and our roster wrap is",
    "start": "974959",
    "end": "980880"
  },
  {
    "text": "around quickjs right you know so um on on the left side you can see there's a",
    "start": "980880",
    "end": "986560"
  },
  {
    "text": "there's a there's a rust function that is um you know designed to interact with",
    "start": "986560",
    "end": "992079"
  },
  {
    "text": "javascript so it has constructs like the js function and js value and things like that",
    "start": "992079",
    "end": "998160"
  },
  {
    "text": "and then on the on the right side is that we we",
    "start": "998160",
    "end": "1003199"
  },
  {
    "text": "when we compile the the quickjs runtime we now have hooks to",
    "start": "1003199",
    "end": "1009600"
  },
  {
    "text": "import this function this function is a struct called slow fn right and give it name you know in the context given name",
    "start": "1009600",
    "end": "1015839"
  },
  {
    "text": "called hi so so then we run a javascript um",
    "start": "1015839",
    "end": "1021440"
  },
  {
    "text": "you know in the javascript we can simply refer this function as high right you know so the the the javascript code is uh",
    "start": "1021440",
    "end": "1029360"
  },
  {
    "text": "um you know it's is on the right panel it's code equals to high one two three right you know that's uh so meaning in",
    "start": "1029360",
    "end": "1035839"
  },
  {
    "text": "javascript we just call hi one two three and the javascript interpreter sees the",
    "start": "1035839",
    "end": "1041438"
  },
  {
    "text": "symbol knows it's a building function that it can find its implementation in rust so it goes to rust to find this",
    "start": "1041439",
    "end": "1048000"
  },
  {
    "text": "implementation and execute this function and then give you the results right you know so the um you know on the right you",
    "start": "1048000",
    "end": "1054640"
  },
  {
    "text": "can also see the the um the result from this so you know um oh",
    "start": "1054640",
    "end": "1059919"
  },
  {
    "text": "why do we do that the way the the reason to do that is that you know um so for the um for a lot of tasks that pure",
    "start": "1059919",
    "end": "1066080"
  },
  {
    "text": "javascript is kind of slow or it's difficult to do you know so the ability to have the ability to use um to write",
    "start": "1066080",
    "end": "1073440"
  },
  {
    "text": "those tasks in rust and then have the whole thing compiled into webassembly allows us to mix the ease of use of",
    "start": "1073440",
    "end": "1080960"
  },
  {
    "text": "javascript and the high performance of rust right you know that's really taking advantage of web assembly's capability",
    "start": "1080960",
    "end": "1087280"
  },
  {
    "text": "to run both right you know to be able to run you know rust compiled applications and also javascript",
    "start": "1087280",
    "end": "1093760"
  },
  {
    "text": "applications as interpreter right you know so i think this is one of the um you know",
    "start": "1093760",
    "end": "1099600"
  },
  {
    "text": "compelling cases of why you want to you want to run javascript inside web assembly because you could potentially",
    "start": "1099600",
    "end": "1105120"
  },
  {
    "text": "run faster and safer right so with that in mind you know so um we um",
    "start": "1105120",
    "end": "1112880"
  },
  {
    "text": "you know i want to introduce you to some some of the um you know rust apis that we have already",
    "start": "1112880",
    "end": "1118960"
  },
  {
    "text": "built with our um you know because i work at united internet at um at wasm",
    "start": "1118960",
    "end": "1124960"
  },
  {
    "text": "edge you know so at one mesh we have um some rust extensions sdk extensions to",
    "start": "1124960",
    "end": "1130000"
  },
  {
    "text": "web assembly you know that's uh so we build some of the functionalities um as javascript apis using the approach that",
    "start": "1130000",
    "end": "1136640"
  },
  {
    "text": "i've just mentioned right you know so um for instance here that's uh you know as we know um a networking socket has been",
    "start": "1136640",
    "end": "1144640"
  },
  {
    "text": "a long amazing feature from wazi but at watson edge we added our own non-blocking asynchronous networking um",
    "start": "1144640",
    "end": "1151919"
  },
  {
    "text": "you know socket support right and we have a rust sdk for that so in our quick gs",
    "start": "1151919",
    "end": "1157679"
  },
  {
    "text": "implementation we have on your quick js setup we have uh we have a rust module",
    "start": "1157679",
    "end": "1165039"
  },
  {
    "text": "that implements http module inside javascript so meaning that's when running quickjs inside was an edge you",
    "start": "1165039",
    "end": "1172799"
  },
  {
    "text": "could write javascript that's uh that does http request and does http and",
    "start": "1172799",
    "end": "1177919"
  },
  {
    "text": "become http server as well as because http server could be asynchronous meaning that it's not blocking right you",
    "start": "1177919",
    "end": "1183760"
  },
  {
    "text": "know it can handle um multiple concurrent um you know connections at the same time from the",
    "start": "1183760",
    "end": "1189760"
  },
  {
    "text": "same port you know using the same thread right you know so so there's uh so by",
    "start": "1189760",
    "end": "1195039"
  },
  {
    "text": "incorporating a roster-based io library that was made has provided for",
    "start": "1195039",
    "end": "1200320"
  },
  {
    "text": "for each web assembly implementation we would be able to support you know networking based java the javascript",
    "start": "1200320",
    "end": "1206000"
  },
  {
    "text": "applications invoice match just using the uh the",
    "start": "1206000",
    "end": "1211200"
  },
  {
    "text": "the techniques i have just mentioned right that along the same line of sort you can",
    "start": "1211200",
    "end": "1217039"
  },
  {
    "text": "we can do the fetch api right you know we can do http because we can do the simple http request and the http server",
    "start": "1217039",
    "end": "1224799"
  },
  {
    "text": "so we can do the fetch um you know that's uh we're going to talk about the significance of this api in a couple of slides and you can also",
    "start": "1224799",
    "end": "1232159"
  },
  {
    "text": "do the um you know um one of the interesting features of",
    "start": "1232159",
    "end": "1237760"
  },
  {
    "text": "watson edge is it provides uh extension for tensorflow so it also have was a",
    "start": "1237760",
    "end": "1243280"
  },
  {
    "text": "wasting extension for openminder you know meaning that's um you know um",
    "start": "1243280",
    "end": "1248640"
  },
  {
    "text": "you can use rust to write ai inference applications and have them compiled into webassembly and runs",
    "start": "1248640",
    "end": "1255039"
  },
  {
    "text": "inside was made you would know to use the gpu or to use other",
    "start": "1255039",
    "end": "1260240"
  },
  {
    "text": "you know hardware or software components available on the device to do the ai inference and because this is a rust api",
    "start": "1260240",
    "end": "1268000"
  },
  {
    "text": "for that extension we can also incorporate that into javascript api using the technique we have just",
    "start": "1268000",
    "end": "1273360"
  },
  {
    "text": "mentioned right so here is a is an example of javascript application that",
    "start": "1273360",
    "end": "1278640"
  },
  {
    "text": "you can run inside inside was managed to take advantage of the um",
    "start": "1278640",
    "end": "1283679"
  },
  {
    "text": "the tensorflow extension so now we have talked about you know that's",
    "start": "1283679",
    "end": "1289360"
  },
  {
    "text": "uh we have we have networking we can have you know those um those those native functions in inside the web",
    "start": "1289360",
    "end": "1295200"
  },
  {
    "text": "assembly so one of the when we combine those together one of the more interesting things that we can do on",
    "start": "1295200",
    "end": "1300559"
  },
  {
    "text": "watson edge is really to do server-side rendering for",
    "start": "1300559",
    "end": "1305600"
  },
  {
    "text": "for for react applications so in react 18 there's a there's a a way to do server side running called",
    "start": "1305600",
    "end": "1311840"
  },
  {
    "text": "streaming ssr and the way it works is to fetch the data from the from other servers first build the model",
    "start": "1311840",
    "end": "1318880"
  },
  {
    "text": "and render html and then send the html across the wire to the to the browser to do",
    "start": "1318880",
    "end": "1324559"
  },
  {
    "text": "and then be rendered as uh as a ui in the browser right you know so this whole generating the html dom",
    "start": "1324559",
    "end": "1332480"
  },
  {
    "text": "components and the rendered content interest you know can all be done on the on the",
    "start": "1332480",
    "end": "1337919"
  },
  {
    "text": "edge server you know um inside the web is somebody around time now so in the past you know you have to",
    "start": "1337919",
    "end": "1343120"
  },
  {
    "text": "have node.js or dno and then have them wrapped inside a docker container to do that you know now we have you know and",
    "start": "1343120",
    "end": "1350000"
  },
  {
    "text": "now we have a web somebody run time that is that is much much faster um that is much much smaller and almost as fast",
    "start": "1350000",
    "end": "1356559"
  },
  {
    "text": "right so there's a um there's a uh example website and tutorials that you",
    "start": "1356559",
    "end": "1363919"
  },
  {
    "text": "can you can try on your own you know so you can take a react 18 application and make little changes to um how the ssr",
    "start": "1363919",
    "end": "1371840"
  },
  {
    "text": "server is wrong because you are not no longer using node.js you are using um you know the non-blocking socket",
    "start": "1371840",
    "end": "1377679"
  },
  {
    "text": "involves a mesh so there's um there's a tiny bit of code changes there and once you do that you know you will",
    "start": "1377679",
    "end": "1383760"
  },
  {
    "text": "be able to you would build launch it and run it on the you know on your edge server",
    "start": "1383760",
    "end": "1389679"
  },
  {
    "text": "so you know now you know one of the common questions i get is uh you know when",
    "start": "1389679",
    "end": "1395120"
  },
  {
    "text": "you're choosing quickjs you know how does that compare with v8 you know that's because we ate",
    "start": "1395120",
    "end": "1400320"
  },
  {
    "text": "behind node.js and dino as the high-performance javascript engine can be as fast as v8 lan says no quickjs is",
    "start": "1400320",
    "end": "1407840"
  },
  {
    "text": "an interpreter it's uh it doesn't have git so it's much slower than v8 however",
    "start": "1407840",
    "end": "1413120"
  },
  {
    "text": "as we said you know one of the things is that a lot of those bottlenecks like you",
    "start": "1413120",
    "end": "1418480"
  },
  {
    "text": "know a huge time consuming um you know tasks like generating strings you know ai inference and you know network",
    "start": "1418480",
    "end": "1424960"
  },
  {
    "text": "concurrent networking and all that stuff it can be done in rust you know so you don't have to do them in in javascript",
    "start": "1424960",
    "end": "1431120"
  },
  {
    "text": "in that case you know the overall performance of application may not necessarily be much slower you know just",
    "start": "1431120",
    "end": "1436799"
  },
  {
    "text": "of course the true benefit of using quickjs and webassembly is that it's much much smaller so v8 is like 40",
    "start": "1436799",
    "end": "1442400"
  },
  {
    "text": "megabytes in memory but uh quickjs is like less than one megabyte so uh even",
    "start": "1442400",
    "end": "1448000"
  },
  {
    "text": "adding web assembly it's still much smaller than say you know um a v8 inside docker right you know and the um",
    "start": "1448000",
    "end": "1456080"
  },
  {
    "text": "quickjs in web assembly is also safer because um um web assembly runtime",
    "start": "1456080",
    "end": "1461600"
  },
  {
    "text": "itself is a security sandbox and uh it has much smaller attack service for um",
    "start": "1461600",
    "end": "1467279"
  },
  {
    "text": "you know for security issues and it's also more manageable you know because whether somebody runtime itself is uh is",
    "start": "1467279",
    "end": "1472960"
  },
  {
    "text": "oci containers can be managed by kubernetes and the same uh you know in order for v8 to do that you have to wrap",
    "start": "1472960",
    "end": "1478320"
  },
  {
    "text": "it around in in linux container which make it much much bigger and heavier right",
    "start": "1478320",
    "end": "1483600"
  },
  {
    "text": "you know so of course there's other approaches to run javascript inside um inside the web assembly you know one of",
    "start": "1483600",
    "end": "1490240"
  },
  {
    "text": "the leading exam alternatives is spider monkey you know that's uh the javascript engine the",
    "start": "1490240",
    "end": "1497760"
  },
  {
    "text": "javascript engine that's used in firefox so there's articles um and and also code",
    "start": "1497760",
    "end": "1503360"
  },
  {
    "text": "on how to do that and then there's uh shopify has a project called javi and",
    "start": "1503360",
    "end": "1508559"
  },
  {
    "text": "it's also a set of rust wrappers and tools around quickjs that shopify has developed you know that's uh",
    "start": "1508559",
    "end": "1516480"
  },
  {
    "text": "that allows um you know um a pretty much uh it's it's a similar approach that than the one that that i have just uh",
    "start": "1516480",
    "end": "1523279"
  },
  {
    "text": "that i've just that i've just described so check it out so the other way to do that is really to um incorporate v8 into",
    "start": "1523279",
    "end": "1530880"
  },
  {
    "text": "webassembly using v8 as a host function you know meaning that you pass javascript evaluation directly into v8",
    "start": "1530880",
    "end": "1537360"
  },
  {
    "text": "but that's something you know that's something that we are experimenting with and you know if you are interested you know we we could talk more after this",
    "start": "1537360",
    "end": "1543840"
  },
  {
    "text": "talk yeah so you know that's the same thing about web assembly now we have a couple minutes left so we want to talk a little",
    "start": "1543840",
    "end": "1549600"
  },
  {
    "text": "bit about python and uh um and uh and ruby as well so for python you know",
    "start": "1549600",
    "end": "1555919"
  },
  {
    "text": "so for javascript we took a javascript interpreter and compiled into web assembly we can do the same thing for",
    "start": "1555919",
    "end": "1562240"
  },
  {
    "text": "python so python there's a python interpreter written in rust right",
    "start": "1562240",
    "end": "1567440"
  },
  {
    "text": "you know it's called rust python you know so you can take that project you can take that project and",
    "start": "1567440",
    "end": "1573520"
  },
  {
    "text": "compile it into whether something towards it you know using use your favorite use your you know rust compiler",
    "start": "1573520",
    "end": "1579600"
  },
  {
    "text": "to do that and then you can just run um you know um a python command shell you",
    "start": "1579600",
    "end": "1585120"
  },
  {
    "text": "know you can run any pure python applications in there right um however you know that's uh um",
    "start": "1585120",
    "end": "1592000"
  },
  {
    "text": "you know um there's still a lot of work that needs to be done because most python applications out there are",
    "start": "1592000",
    "end": "1598240"
  },
  {
    "text": "not pure python applications those are python wrappers around c applications you know it's uh",
    "start": "1598240",
    "end": "1603840"
  },
  {
    "text": "it's pretty much you know same approach that we have just described right you know we have javascript application wraps around rust applications right you",
    "start": "1603840",
    "end": "1611039"
  },
  {
    "text": "know so they cannot simply be interpreted by russell tyson because they have native libraries and uh um however those c libraries",
    "start": "1611039",
    "end": "1617679"
  },
  {
    "text": "could potentially be compiled into web somebody as well you know using the same approach that we have just described with javascript so this",
    "start": "1617679",
    "end": "1624640"
  },
  {
    "text": "is pretty much uh uh you know a very exciting area that's that's uh you",
    "start": "1624640",
    "end": "1629760"
  },
  {
    "text": "know i think people should be working on you know of course there's uh um you know um",
    "start": "1629760",
    "end": "1635279"
  },
  {
    "text": "because the the networking uh socket support in what is lacking so",
    "start": "1635279",
    "end": "1640799"
  },
  {
    "text": "we can't quite do python networking applications yet we have to incorporate if we want to run the e-waste match we",
    "start": "1640799",
    "end": "1646880"
  },
  {
    "text": "have to do we have we can incorporate the wasa mesh socket api into python and uh and then supports python frameworks",
    "start": "1646880",
    "end": "1653600"
  },
  {
    "text": "like fast api to turn that into a microservice framework right you know so so there are things like that you know",
    "start": "1653600",
    "end": "1659360"
  },
  {
    "text": "so um you know that's uh that's still pretty much working progress and we'd love to collect collaborate with the",
    "start": "1659360",
    "end": "1666840"
  },
  {
    "text": "community then there's a another interesting approach is just to compile python to c right you know turn the",
    "start": "1666840",
    "end": "1673840"
  },
  {
    "text": "python code into c code and then turn c code into webassembly and run inside web",
    "start": "1673840",
    "end": "1679200"
  },
  {
    "text": "somewhere on time so that is another um you know interesting approach people have been trying that but uh you know",
    "start": "1679200",
    "end": "1685679"
  },
  {
    "text": "we can also see some roadblocks because you know primarily because um you know not all c apis are supported in wazi so",
    "start": "1685679",
    "end": "1692320"
  },
  {
    "text": "you're gonna find something that things that are missing and um you know so basically you may your your",
    "start": "1692320",
    "end": "1698320"
  },
  {
    "text": "management may vary uh using this approach and then one of the exciting um you know",
    "start": "1698320",
    "end": "1704559"
  },
  {
    "text": "happenings last year was um the ruby team the c ruby team has figured out how to compile the c based ruby interpreter",
    "start": "1704559",
    "end": "1711919"
  },
  {
    "text": "into webassembly so they even provide a very simple tool for that you know so",
    "start": "1711919",
    "end": "1716960"
  },
  {
    "text": "from their repository you can just uh you know compile you can compile that and run that team was made and you would",
    "start": "1716960",
    "end": "1722559"
  },
  {
    "text": "be able to you know run ruby pure ruby applications that way uh of course you know that's uh um",
    "start": "1722559",
    "end": "1727919"
  },
  {
    "text": "that's um you know ruby has more language features than weber somebody can support for instance that's threat it has",
    "start": "1727919",
    "end": "1733760"
  },
  {
    "text": "operating system processes and you know things like that so those things has to um has to be",
    "start": "1733760",
    "end": "1739760"
  },
  {
    "text": "you know worked out before this scan can be um it can be a generic ruby runtime",
    "start": "1739760",
    "end": "1744799"
  },
  {
    "text": "right so yeah that's uh um you know",
    "start": "1744799",
    "end": "1750840"
  },
  {
    "text": "um you know we have got a very quick overview of you know um of scripting language support in web assembly using",
    "start": "1750840",
    "end": "1757520"
  },
  {
    "text": "was managed as an example you know that's uh um and uh like i said javascript is probably the most",
    "start": "1757520",
    "end": "1763919"
  },
  {
    "text": "um it's the one that has most application but and also the one has the most mature",
    "start": "1763919",
    "end": "1770320"
  },
  {
    "text": "support and uh um and but python are getting there you know i think because",
    "start": "1770320",
    "end": "1776000"
  },
  {
    "text": "there's lots of python developers and lots of people are interested in that and there's a clear roadmap of you know",
    "start": "1776000",
    "end": "1781440"
  },
  {
    "text": "adding more features to both javascript and python you know to have them run better um",
    "start": "1781440",
    "end": "1787919"
  },
  {
    "text": "in web assembly right you know and uh ruby is not far behind as well so you know i think um",
    "start": "1787919",
    "end": "1794799"
  },
  {
    "text": "hopefully by by this time next year by the cloud of awesome day next year that we would be able to see um a whole slew",
    "start": "1794799",
    "end": "1801760"
  },
  {
    "text": "of you know um scripting language applications running inside the web assembly these are",
    "start": "1801760",
    "end": "1806960"
  },
  {
    "text": "running inside as serverless functions or as extensions for other platforms you know so um thank you very much so um i",
    "start": "1806960",
    "end": "1814159"
  },
  {
    "text": "think that's that's all the time i have um so um come check out the watchmatch and",
    "start": "1814159",
    "end": "1820240"
  },
  {
    "text": "i'll talk to you later thanks",
    "start": "1820240",
    "end": "1823840"
  }
]