[
  {
    "text": "hey folks my name is dan mangum and i",
    "start": "480",
    "end": "2560"
  },
  {
    "text": "work at a company called upbound and i'm",
    "start": "2560",
    "end": "4480"
  },
  {
    "text": "joined today by john johnson from google",
    "start": "4480",
    "end": "7120"
  },
  {
    "text": "first of all we want to thank you for",
    "start": "7120",
    "end": "8800"
  },
  {
    "text": "taking time out of your kubecon",
    "start": "8800",
    "end": "10320"
  },
  {
    "text": "experience whether attending virtually",
    "start": "10320",
    "end": "12320"
  },
  {
    "text": "or in person to attend our talk today we",
    "start": "12320",
    "end": "15120"
  },
  {
    "text": "hope that wherever you are you are safe",
    "start": "15120",
    "end": "16880"
  },
  {
    "text": "and well",
    "start": "16880",
    "end": "17840"
  },
  {
    "text": "today we are going to spend some time",
    "start": "17840",
    "end": "19760"
  },
  {
    "text": "talking about what you have likely heard",
    "start": "19760",
    "end": "21359"
  },
  {
    "text": "referred to as container registries the",
    "start": "21359",
    "end": "23840"
  },
  {
    "text": "reason i say likely is because these",
    "start": "23840",
    "end": "25680"
  },
  {
    "text": "so-called container registries don't",
    "start": "25680",
    "end": "27760"
  },
  {
    "text": "actually have much to do with containers",
    "start": "27760",
    "end": "29439"
  },
  {
    "text": "at all",
    "start": "29439",
    "end": "30400"
  },
  {
    "text": "john and i have grown to become fast",
    "start": "30400",
    "end": "32238"
  },
  {
    "text": "friends with registries through our work",
    "start": "32239",
    "end": "33680"
  },
  {
    "text": "on crossplane go container registry and",
    "start": "33680",
    "end": "36079"
  },
  {
    "text": "gcr and we for one feel like they are a",
    "start": "36079",
    "end": "38480"
  },
  {
    "text": "misunderstood bunch you may think that",
    "start": "38480",
    "end": "40719"
  },
  {
    "text": "registries are boring that they don't",
    "start": "40719",
    "end": "42399"
  },
  {
    "text": "know how to have fun but we are here to",
    "start": "42399",
    "end": "44399"
  },
  {
    "text": "tell you that registries are much",
    "start": "44399",
    "end": "45840"
  },
  {
    "text": "crazier than you may have thought",
    "start": "45840",
    "end": "47920"
  },
  {
    "text": "you just have to get to know them",
    "start": "47920",
    "end": "49920"
  },
  {
    "text": "throughout the four acts of this talk",
    "start": "49920",
    "end": "51760"
  },
  {
    "text": "we'll get to know who the registries",
    "start": "51760",
    "end": "53120"
  },
  {
    "text": "really are not just who they are said to",
    "start": "53120",
    "end": "54879"
  },
  {
    "text": "be on twitter and hacker news",
    "start": "54879",
    "end": "58399"
  },
  {
    "text": "thanks dan",
    "start": "58399",
    "end": "59760"
  },
  {
    "text": "so let's talk about the registry",
    "start": "59760",
    "end": "63520"
  },
  {
    "text": "most people don't have to think about",
    "start": "63520",
    "end": "65518"
  },
  {
    "text": "how a registry works",
    "start": "65519",
    "end": "67280"
  },
  {
    "text": "you docker build docker push docker pool",
    "start": "67280",
    "end": "70080"
  },
  {
    "text": "and docker run images for the most part",
    "start": "70080",
    "end": "72640"
  },
  {
    "text": "that's a good thing it just works and",
    "start": "72640",
    "end": "74799"
  },
  {
    "text": "the registry is a very boring part of",
    "start": "74799",
    "end": "76240"
  },
  {
    "text": "your life",
    "start": "76240",
    "end": "78640"
  },
  {
    "text": "i think that's a little sad i also think",
    "start": "78640",
    "end": "80560"
  },
  {
    "text": "it's not true",
    "start": "80560",
    "end": "82320"
  },
  {
    "text": "so let's look at how the registry sees",
    "start": "82320",
    "end": "84400"
  },
  {
    "text": "the world and what happens when you",
    "start": "84400",
    "end": "85759"
  },
  {
    "text": "interact with it",
    "start": "85759",
    "end": "87119"
  },
  {
    "text": "so first let's go over all the data",
    "start": "87119",
    "end": "89280"
  },
  {
    "text": "structures that a registry has to deal",
    "start": "89280",
    "end": "91119"
  },
  {
    "text": "with it's going to be more or less oci",
    "start": "91119",
    "end": "93840"
  },
  {
    "text": "101",
    "start": "93840",
    "end": "96240"
  },
  {
    "text": "so the fundamental primitive in oci is",
    "start": "96240",
    "end": "99280"
  },
  {
    "text": "what's called a content descriptor you",
    "start": "99280",
    "end": "101280"
  },
  {
    "text": "can see here it's a very simple",
    "start": "101280",
    "end": "102720"
  },
  {
    "text": "structure with three fields there's a",
    "start": "102720",
    "end": "104320"
  },
  {
    "text": "media type the digest and the size",
    "start": "104320",
    "end": "107119"
  },
  {
    "text": "so for a given piece of content a",
    "start": "107119",
    "end": "108720"
  },
  {
    "text": "descriptor tells us how to interpret",
    "start": "108720",
    "end": "110560"
  },
  {
    "text": "those bytes",
    "start": "110560",
    "end": "111920"
  },
  {
    "text": "how many bytes we should expect to read",
    "start": "111920",
    "end": "113920"
  },
  {
    "text": "when we're fetching it and the exact",
    "start": "113920",
    "end": "115759"
  },
  {
    "text": "hash of the content of those bytes so we",
    "start": "115759",
    "end": "117600"
  },
  {
    "text": "know exactly what we get when we go to",
    "start": "117600",
    "end": "119520"
  },
  {
    "text": "fetch it uh and this allows us to fetch",
    "start": "119520",
    "end": "122399"
  },
  {
    "text": "content over the internet safely and",
    "start": "122399",
    "end": "124719"
  },
  {
    "text": "this is the most crucial bit of oci and",
    "start": "124719",
    "end": "127520"
  },
  {
    "text": "what i think is most interesting",
    "start": "127520",
    "end": "130879"
  },
  {
    "text": "you might notice that those three",
    "start": "130959",
    "end": "132640"
  },
  {
    "text": "properties map pretty directly onto http",
    "start": "132640",
    "end": "135040"
  },
  {
    "text": "headers so it's very straightforward to",
    "start": "135040",
    "end": "137120"
  },
  {
    "text": "serve this content via http",
    "start": "137120",
    "end": "139440"
  },
  {
    "text": "and as you might have guessed the",
    "start": "139440",
    "end": "140800"
  },
  {
    "text": "registry api speaks over http http",
    "start": "140800",
    "end": "145680"
  },
  {
    "text": "so",
    "start": "145680",
    "end": "146720"
  },
  {
    "text": "the media type maps to this content type",
    "start": "146720",
    "end": "149200"
  },
  {
    "text": "size maps to a content length and the",
    "start": "149200",
    "end": "151680"
  },
  {
    "text": "digest maps to this oci kind of specific",
    "start": "151680",
    "end": "154400"
  },
  {
    "text": "thing docker content digest",
    "start": "154400",
    "end": "157840"
  },
  {
    "text": "so in a registry this is an image an",
    "start": "158239",
    "end": "160480"
  },
  {
    "text": "image is a json document that contains",
    "start": "160480",
    "end": "163519"
  },
  {
    "text": "content descriptors pointing to",
    "start": "163519",
    "end": "165680"
  },
  {
    "text": "one config file and one or more layers",
    "start": "165680",
    "end": "168800"
  },
  {
    "text": "so the config file mostly just describes",
    "start": "168800",
    "end": "170879"
  },
  {
    "text": "how to actually run a container but the",
    "start": "170879",
    "end": "172640"
  },
  {
    "text": "layers make up that container's file",
    "start": "172640",
    "end": "174400"
  },
  {
    "text": "system",
    "start": "174400",
    "end": "175440"
  },
  {
    "text": "and layers are usually gzipped tarballs",
    "start": "175440",
    "end": "178080"
  },
  {
    "text": "but some folks have started doing a lot",
    "start": "178080",
    "end": "180080"
  },
  {
    "text": "more interesting things recently",
    "start": "180080",
    "end": "183519"
  },
  {
    "text": "uh beyond just an image there is an",
    "start": "183519",
    "end": "185920"
  },
  {
    "text": "image index which similarly is a json",
    "start": "185920",
    "end": "188720"
  },
  {
    "text": "document that contains content",
    "start": "188720",
    "end": "190080"
  },
  {
    "text": "descriptors",
    "start": "190080",
    "end": "191200"
  },
  {
    "text": "those point to images",
    "start": "191200",
    "end": "193440"
  },
  {
    "text": "and this is commonly used to represent",
    "start": "193440",
    "end": "194959"
  },
  {
    "text": "multi-platform images",
    "start": "194959",
    "end": "196959"
  },
  {
    "text": "and that's basically it that's pretty",
    "start": "196959",
    "end": "198879"
  },
  {
    "text": "much all of the primitives in the oci",
    "start": "198879",
    "end": "201440"
  },
  {
    "text": "universe",
    "start": "201440",
    "end": "203200"
  },
  {
    "text": "if we drew some lines between these",
    "start": "203200",
    "end": "204879"
  },
  {
    "text": "objects we'd have",
    "start": "204879",
    "end": "206400"
  },
  {
    "text": "this wonderful graph",
    "start": "206400",
    "end": "208720"
  },
  {
    "text": "and you can see",
    "start": "208720",
    "end": "210799"
  },
  {
    "text": "anywhere there's an arrow is kind of a",
    "start": "210799",
    "end": "212480"
  },
  {
    "text": "content descriptor from one object that",
    "start": "212480",
    "end": "214080"
  },
  {
    "text": "references another and you can see here",
    "start": "214080",
    "end": "216000"
  },
  {
    "text": "that",
    "start": "216000",
    "end": "216720"
  },
  {
    "text": "while some objects are manifest",
    "start": "216720",
    "end": "219280"
  },
  {
    "text": "other objects are blobs that the",
    "start": "219280",
    "end": "221040"
  },
  {
    "text": "registry doesn't really know that much",
    "start": "221040",
    "end": "223200"
  },
  {
    "text": "about right we just have arrows coming",
    "start": "223200",
    "end": "224959"
  },
  {
    "text": "into those and then coming out",
    "start": "224959",
    "end": "228159"
  },
  {
    "text": "there are a couple other interesting",
    "start": "229040",
    "end": "231200"
  },
  {
    "text": "features that the registry knows about",
    "start": "231200",
    "end": "232959"
  },
  {
    "text": "that",
    "start": "232959",
    "end": "234000"
  },
  {
    "text": "might as well mention so",
    "start": "234000",
    "end": "235760"
  },
  {
    "text": "for legal reasons you might not want",
    "start": "235760",
    "end": "237599"
  },
  {
    "text": "clients uploading certain pieces of",
    "start": "237599",
    "end": "239200"
  },
  {
    "text": "content as an example say microsoft",
    "start": "239200",
    "end": "241840"
  },
  {
    "text": "doesn't want you distributing the",
    "start": "241840",
    "end": "243040"
  },
  {
    "text": "windows based layers",
    "start": "243040",
    "end": "244720"
  },
  {
    "text": "to work around this the registry has to",
    "start": "244720",
    "end": "246319"
  },
  {
    "text": "understand this concept of foreign",
    "start": "246319",
    "end": "247840"
  },
  {
    "text": "layers that need to be downloaded from",
    "start": "247840",
    "end": "249519"
  },
  {
    "text": "somewhere else say microsoft.com",
    "start": "249519",
    "end": "252400"
  },
  {
    "text": "not the registry you're pulling from",
    "start": "252400",
    "end": "255840"
  },
  {
    "text": "another interesting feature is similar",
    "start": "256320",
    "end": "258720"
  },
  {
    "text": "to kubernetes manifests oci has this",
    "start": "258720",
    "end": "260720"
  },
  {
    "text": "concept of an annotation map where you",
    "start": "260720",
    "end": "262880"
  },
  {
    "text": "can just stuff arbitrary strings",
    "start": "262880",
    "end": "266320"
  },
  {
    "text": "so",
    "start": "266320",
    "end": "267120"
  },
  {
    "text": "we're not really just serving tar balls",
    "start": "267120",
    "end": "270000"
  },
  {
    "text": "right uh we have",
    "start": "270000",
    "end": "271680"
  },
  {
    "text": "one this nice content addressable object",
    "start": "271680",
    "end": "273919"
  },
  {
    "text": "storage",
    "start": "273919",
    "end": "274880"
  },
  {
    "text": "thing for blobs uh we also have this",
    "start": "274880",
    "end": "277680"
  },
  {
    "text": "interesting merkle dag api for the",
    "start": "277680",
    "end": "279759"
  },
  {
    "text": "manifest",
    "start": "279759",
    "end": "281520"
  },
  {
    "text": "so",
    "start": "281520",
    "end": "282479"
  },
  {
    "text": "and beyond that like there's this",
    "start": "282479",
    "end": "284000"
  },
  {
    "text": "generic uh api where you can store",
    "start": "284000",
    "end": "287280"
  },
  {
    "text": "arbitrary things uh",
    "start": "287280",
    "end": "289440"
  },
  {
    "text": "that have type safety features",
    "start": "289440",
    "end": "291600"
  },
  {
    "text": "and are memory safe because you know how",
    "start": "291600",
    "end": "293199"
  },
  {
    "text": "large they should be",
    "start": "293199",
    "end": "294560"
  },
  {
    "text": "they're tamper proof thanks to their",
    "start": "294560",
    "end": "295840"
  },
  {
    "text": "digest and they're human readable",
    "start": "295840",
    "end": "297280"
  },
  {
    "text": "because they're json",
    "start": "297280",
    "end": "298880"
  },
  {
    "text": "thanks to kubernetes are also ubiquitous",
    "start": "298880",
    "end": "301039"
  },
  {
    "text": "and that you always have access to a",
    "start": "301039",
    "end": "302880"
  },
  {
    "text": "registry more or less because it's cloud",
    "start": "302880",
    "end": "304960"
  },
  {
    "text": "native uh and most registries support",
    "start": "304960",
    "end": "307199"
  },
  {
    "text": "some kind of garbage collection but you",
    "start": "307199",
    "end": "309199"
  },
  {
    "text": "can also you know put interesting",
    "start": "309199",
    "end": "311039"
  },
  {
    "text": "arbitrary metadata on things",
    "start": "311039",
    "end": "314320"
  },
  {
    "text": "so this is amazing in theory but what's",
    "start": "314320",
    "end": "316960"
  },
  {
    "text": "important is that it actually exists and",
    "start": "316960",
    "end": "318320"
  },
  {
    "text": "you can use it",
    "start": "318320",
    "end": "319680"
  },
  {
    "text": "so",
    "start": "319680",
    "end": "320880"
  },
  {
    "text": "what else might you want to do with",
    "start": "320880",
    "end": "323199"
  },
  {
    "text": "these primitives",
    "start": "323199",
    "end": "324560"
  },
  {
    "text": "this is where things start to get a",
    "start": "324560",
    "end": "326400"
  },
  {
    "text": "little weird",
    "start": "326400",
    "end": "329039"
  },
  {
    "text": "when we talk about sending data between",
    "start": "329680",
    "end": "331680"
  },
  {
    "text": "computers we often make distinctions",
    "start": "331680",
    "end": "333680"
  },
  {
    "text": "between different types of data for",
    "start": "333680",
    "end": "335759"
  },
  {
    "text": "instance you likely don't feel like",
    "start": "335759",
    "end": "337680"
  },
  {
    "text": "pulling a container image is the same",
    "start": "337680",
    "end": "339440"
  },
  {
    "text": "operation as watching a video on youtube",
    "start": "339440",
    "end": "341840"
  },
  {
    "text": "and in some respects it's not",
    "start": "341840",
    "end": "344240"
  },
  {
    "text": "however all data transmission ultimately",
    "start": "344240",
    "end": "346880"
  },
  {
    "text": "boils down to an order of operations and",
    "start": "346880",
    "end": "349520"
  },
  {
    "text": "bits on a wire",
    "start": "349520",
    "end": "351039"
  },
  {
    "text": "as john mentioned the distribution spec",
    "start": "351039",
    "end": "353199"
  },
  {
    "text": "broadly defines two categories of data",
    "start": "353199",
    "end": "355919"
  },
  {
    "text": "blobs and manifests let's start out by",
    "start": "355919",
    "end": "358560"
  },
  {
    "text": "talking about the former",
    "start": "358560",
    "end": "360240"
  },
  {
    "text": "in the common case blobs often represent",
    "start": "360240",
    "end": "362720"
  },
  {
    "text": "gzip tarballs containing a file system",
    "start": "362720",
    "end": "364880"
  },
  {
    "text": "layer or in simpler terms a compressed",
    "start": "364880",
    "end": "367440"
  },
  {
    "text": "directory of files however this is",
    "start": "367440",
    "end": "369919"
  },
  {
    "text": "certainly not a requirement as while the",
    "start": "369919",
    "end": "371759"
  },
  {
    "text": "oci image spec defines a set of",
    "start": "371759",
    "end": "373680"
  },
  {
    "text": "acceptable media types the distribution",
    "start": "373680",
    "end": "375919"
  },
  {
    "text": "spec has no such requirement",
    "start": "375919",
    "end": "378240"
  },
  {
    "text": "learning all of this was a surprise to",
    "start": "378240",
    "end": "380000"
  },
  {
    "text": "me because i had only ever seen the",
    "start": "380000",
    "end": "381520"
  },
  {
    "text": "registry in professional settings little",
    "start": "381520",
    "end": "383680"
  },
  {
    "text": "did i know that the registry was",
    "start": "383680",
    "end": "385199"
  },
  {
    "text": "actually very open-minded so different",
    "start": "385199",
    "end": "387280"
  },
  {
    "text": "than the image spec",
    "start": "387280",
    "end": "390160"
  },
  {
    "text": "registries are frequently referred to as",
    "start": "390479",
    "end": "392319"
  },
  {
    "text": "a form of content addressable storage",
    "start": "392319",
    "end": "395280"
  },
  {
    "text": "what does that mean",
    "start": "395280",
    "end": "396800"
  },
  {
    "text": "if you have ever used a blob storage",
    "start": "396800",
    "end": "398560"
  },
  {
    "text": "solution let's say an s3 bucket you know",
    "start": "398560",
    "end": "401280"
  },
  {
    "text": "that you can download content from the",
    "start": "401280",
    "end": "402880"
  },
  {
    "text": "bucket using a url this url frequently",
    "start": "402880",
    "end": "405919"
  },
  {
    "text": "indicates the location of the content",
    "start": "405919",
    "end": "408080"
  },
  {
    "text": "but may not inform about the actual bits",
    "start": "408080",
    "end": "410240"
  },
  {
    "text": "in the content this means that when you",
    "start": "410240",
    "end": "412240"
  },
  {
    "text": "request content from a given location",
    "start": "412240",
    "end": "414319"
  },
  {
    "text": "the onus is on you to check and make",
    "start": "414319",
    "end": "416080"
  },
  {
    "text": "sure that you are given what you asked",
    "start": "416080",
    "end": "417440"
  },
  {
    "text": "for this is frequently referred to as",
    "start": "417440",
    "end": "419759"
  },
  {
    "text": "location addressed",
    "start": "419759",
    "end": "421360"
  },
  {
    "text": "content address on the other hand means",
    "start": "421360",
    "end": "423440"
  },
  {
    "text": "that we can ask for exactly what we want",
    "start": "423440",
    "end": "425280"
  },
  {
    "text": "by submitting a digest of the content",
    "start": "425280",
    "end": "427360"
  },
  {
    "text": "rather than a location",
    "start": "427360",
    "end": "428960"
  },
  {
    "text": "now there is nothing that says that a",
    "start": "428960",
    "end": "430319"
  },
  {
    "text": "registry may not return some malicious",
    "start": "430319",
    "end": "432240"
  },
  {
    "text": "content even in a content address system",
    "start": "432240",
    "end": "434800"
  },
  {
    "text": "so clients should still check that the",
    "start": "434800",
    "end": "436319"
  },
  {
    "text": "digest of the content they receive",
    "start": "436319",
    "end": "438240"
  },
  {
    "text": "matches what they ask for",
    "start": "438240",
    "end": "440160"
  },
  {
    "text": "so you could say the registry is pretty",
    "start": "440160",
    "end": "441919"
  },
  {
    "text": "well connected it's rare that i ever ask",
    "start": "441919",
    "end": "444240"
  },
  {
    "text": "it to find some content for me and it's",
    "start": "444240",
    "end": "446160"
  },
  {
    "text": "unable to do so",
    "start": "446160",
    "end": "448720"
  },
  {
    "text": "another thing you may not know is that",
    "start": "448720",
    "end": "450720"
  },
  {
    "text": "the registry is a great listener it",
    "start": "450720",
    "end": "452960"
  },
  {
    "text": "knows that folks communicate in",
    "start": "452960",
    "end": "454400"
  },
  {
    "text": "different ways so it offers a few",
    "start": "454400",
    "end": "456160"
  },
  {
    "text": "different mechanisms to submit content",
    "start": "456160",
    "end": "458560"
  },
  {
    "text": "when pushing a blob a client may be able",
    "start": "458560",
    "end": "460800"
  },
  {
    "text": "to upload all of the content in a single",
    "start": "460800",
    "end": "463120"
  },
  {
    "text": "request or it may require doing so",
    "start": "463120",
    "end": "465840"
  },
  {
    "text": "incrementally",
    "start": "465840",
    "end": "467120"
  },
  {
    "text": "the distribution spec accommodates both",
    "start": "467120",
    "end": "469280"
  },
  {
    "text": "of these scenarios by supporting",
    "start": "469280",
    "end": "470879"
  },
  {
    "text": "multiple upload workflows let's take a",
    "start": "470879",
    "end": "473520"
  },
  {
    "text": "brief look at the different strategies",
    "start": "473520",
    "end": "475440"
  },
  {
    "text": "and the advantages and drawbacks to each",
    "start": "475440",
    "end": "478720"
  },
  {
    "text": "the most common method for uploading a",
    "start": "478720",
    "end": "481280"
  },
  {
    "text": "blob is chunked typically this doesn't",
    "start": "481280",
    "end": "484160"
  },
  {
    "text": "actually mean that the blob is being",
    "start": "484160",
    "end": "485520"
  },
  {
    "text": "uploaded in multiple chunks for instance",
    "start": "485520",
    "end": "488000"
  },
  {
    "text": "we'll see in a moment that docker will",
    "start": "488000",
    "end": "489599"
  },
  {
    "text": "upload via the chunked method but then",
    "start": "489599",
    "end": "491759"
  },
  {
    "text": "send the full blob in the patch step",
    "start": "491759",
    "end": "494400"
  },
  {
    "text": "the advantage to this method and one",
    "start": "494400",
    "end": "496080"
  },
  {
    "text": "reason it is most commonly used is that",
    "start": "496080",
    "end": "498400"
  },
  {
    "text": "it supports resumable pushes this means",
    "start": "498400",
    "end": "501120"
  },
  {
    "text": "that if a connectivity is lost during",
    "start": "501120",
    "end": "503199"
  },
  {
    "text": "upload a client can resume pushing",
    "start": "503199",
    "end": "505280"
  },
  {
    "text": "content without re-uploading what is",
    "start": "505280",
    "end": "507120"
  },
  {
    "text": "already there",
    "start": "507120",
    "end": "508240"
  },
  {
    "text": "another advantage is that if the content",
    "start": "508240",
    "end": "510240"
  },
  {
    "text": "is stored uncompressed the client can",
    "start": "510240",
    "end": "512240"
  },
  {
    "text": "compress and calculate the digest of the",
    "start": "512240",
    "end": "514159"
  },
  {
    "text": "compressed content in a streaming",
    "start": "514159",
    "end": "516000"
  },
  {
    "text": "fashion without having to actually write",
    "start": "516000",
    "end": "518000"
  },
  {
    "text": "the compressed content to disk first",
    "start": "518000",
    "end": "520959"
  },
  {
    "text": "the distribution spec also supports",
    "start": "520959",
    "end": "523120"
  },
  {
    "text": "uploading a blob monolithically via two",
    "start": "523120",
    "end": "525600"
  },
  {
    "text": "different strategies the first post then",
    "start": "525600",
    "end": "528320"
  },
  {
    "text": "put is similar to the chunked upload",
    "start": "528320",
    "end": "530640"
  },
  {
    "text": "however using this strategy we lose the",
    "start": "530640",
    "end": "532720"
  },
  {
    "text": "ability to resume pushing in the event",
    "start": "532720",
    "end": "534720"
  },
  {
    "text": "that are put with the blobs is is",
    "start": "534720",
    "end": "537120"
  },
  {
    "text": "unsuccessful",
    "start": "537120",
    "end": "539279"
  },
  {
    "text": "the last strategy is a single post and",
    "start": "539279",
    "end": "541600"
  },
  {
    "text": "it is specified as optional and in",
    "start": "541600",
    "end": "543440"
  },
  {
    "text": "practice is hardly ever used why",
    "start": "543440",
    "end": "546000"
  },
  {
    "text": "well an important thing to note in the",
    "start": "546000",
    "end": "547519"
  },
  {
    "text": "previous two workflows is the step of",
    "start": "547519",
    "end": "549680"
  },
  {
    "text": "obtaining a session id",
    "start": "549680",
    "end": "551680"
  },
  {
    "text": "this is returned in the form of a",
    "start": "551680",
    "end": "553200"
  },
  {
    "text": "location url but that location does not",
    "start": "553200",
    "end": "555600"
  },
  {
    "text": "necessarily have to point back to the",
    "start": "555600",
    "end": "557120"
  },
  {
    "text": "registry this means that a registry may",
    "start": "557120",
    "end": "559600"
  },
  {
    "text": "offload the actual upload to a different",
    "start": "559600",
    "end": "562000"
  },
  {
    "text": "service something that would not be",
    "start": "562000",
    "end": "563680"
  },
  {
    "text": "possible in the single post scenario",
    "start": "563680",
    "end": "566720"
  },
  {
    "text": "so now that we've seen the multiple",
    "start": "566720",
    "end": "569040"
  },
  {
    "text": "different methods for uploading blobs",
    "start": "569040",
    "end": "571040"
  },
  {
    "text": "and manifest the registry let's actually",
    "start": "571040",
    "end": "573279"
  },
  {
    "text": "look at how a real client goes about",
    "start": "573279",
    "end": "575600"
  },
  {
    "text": "uploading a multi-arch image in this",
    "start": "575600",
    "end": "577519"
  },
  {
    "text": "case so here we're at iaker.o cubecon",
    "start": "577519",
    "end": "581120"
  },
  {
    "text": "which is the namespace that we're going",
    "start": "581120",
    "end": "582640"
  },
  {
    "text": "to push this image to and we're using",
    "start": "582640",
    "end": "585360"
  },
  {
    "text": "crane copy here which is going to take",
    "start": "585360",
    "end": "587440"
  },
  {
    "text": "the crossplane crossplane v 1.4 image",
    "start": "587440",
    "end": "591040"
  },
  {
    "text": "from docker hub and copy it over into",
    "start": "591040",
    "end": "594240"
  },
  {
    "text": "our yacker registry here",
    "start": "594240",
    "end": "596320"
  },
  {
    "text": "in the ui here you're going to see the",
    "start": "596320",
    "end": "598160"
  },
  {
    "text": "different operations that are taking",
    "start": "598160",
    "end": "599680"
  },
  {
    "text": "place as it goes through this so let's",
    "start": "599680",
    "end": "602000"
  },
  {
    "text": "go ahead and kick it off",
    "start": "602000",
    "end": "605720"
  },
  {
    "text": "all right so you'll immediately see some",
    "start": "605839",
    "end": "607440"
  },
  {
    "text": "operations start to flow through and",
    "start": "607440",
    "end": "609519"
  },
  {
    "text": "i'll go ahead and move this out of the",
    "start": "609519",
    "end": "610720"
  },
  {
    "text": "way since it has completed",
    "start": "610720",
    "end": "612880"
  },
  {
    "text": "pushing all the different components",
    "start": "612880",
    "end": "616399"
  },
  {
    "text": "and we have a time delay here so it's a",
    "start": "616399",
    "end": "618240"
  },
  {
    "text": "little more visible but what you're",
    "start": "618240",
    "end": "619680"
  },
  {
    "text": "going to see happening is basically",
    "start": "619680",
    "end": "621519"
  },
  {
    "text": "checking for the existence of those",
    "start": "621519",
    "end": "623200"
  },
  {
    "text": "blobs",
    "start": "623200",
    "end": "624640"
  },
  {
    "text": "and then starting an upload",
    "start": "624640",
    "end": "627040"
  },
  {
    "text": "for the content of a blob",
    "start": "627040",
    "end": "629040"
  },
  {
    "text": "before eventually committing the blob",
    "start": "629040",
    "end": "631920"
  },
  {
    "text": "and storing it and once all the blobs",
    "start": "631920",
    "end": "634560"
  },
  {
    "text": "for a given manifest are present then",
    "start": "634560",
    "end": "637440"
  },
  {
    "text": "we'll upload the manifest itself",
    "start": "637440",
    "end": "640160"
  },
  {
    "text": "and since this is a multi-arch image",
    "start": "640160",
    "end": "642079"
  },
  {
    "text": "when we actually get to",
    "start": "642079",
    "end": "644079"
  },
  {
    "text": "the end of uploading our four different",
    "start": "644079",
    "end": "646399"
  },
  {
    "text": "architectures you'll also see a manifest",
    "start": "646399",
    "end": "649120"
  },
  {
    "text": "list that points with our v1.4.0 tag",
    "start": "649120",
    "end": "653120"
  },
  {
    "text": "to those manifests so that'll pop up",
    "start": "653120",
    "end": "655600"
  },
  {
    "text": "here in just a moment",
    "start": "655600",
    "end": "657440"
  },
  {
    "text": "there you'll see",
    "start": "657440",
    "end": "659360"
  },
  {
    "text": "and see that it points to each of these",
    "start": "659360",
    "end": "662000"
  },
  {
    "text": "and if we also look at the different",
    "start": "662000",
    "end": "663600"
  },
  {
    "text": "operations that took place starting off",
    "start": "663600",
    "end": "665839"
  },
  {
    "text": "the beginning you'll see that we first",
    "start": "665839",
    "end": "667519"
  },
  {
    "text": "checked to find the existence of the",
    "start": "667519",
    "end": "669279"
  },
  {
    "text": "various blobs we were going to upload",
    "start": "669279",
    "end": "671600"
  },
  {
    "text": "before then starting to do our uploads",
    "start": "671600",
    "end": "674560"
  },
  {
    "text": "we are patch requests and eventually",
    "start": "674560",
    "end": "676240"
  },
  {
    "text": "committing an upload",
    "start": "676240",
    "end": "677920"
  },
  {
    "text": "for each with a put request",
    "start": "677920",
    "end": "680720"
  },
  {
    "text": "while we have established that the",
    "start": "680720",
    "end": "682000"
  },
  {
    "text": "distribution spec is rather",
    "start": "682000",
    "end": "683519"
  },
  {
    "text": "unopinionated some registries are more",
    "start": "683519",
    "end": "686000"
  },
  {
    "text": "picky than others that means that",
    "start": "686000",
    "end": "687680"
  },
  {
    "text": "submitting arbitrary content to a",
    "start": "687680",
    "end": "689360"
  },
  {
    "text": "registry may not be accepted",
    "start": "689360",
    "end": "691680"
  },
  {
    "text": "however nearly every registry will",
    "start": "691680",
    "end": "693839"
  },
  {
    "text": "accept content that adheres to the oci",
    "start": "693839",
    "end": "695920"
  },
  {
    "text": "image spec which specifies that layers",
    "start": "695920",
    "end": "698399"
  },
  {
    "text": "come in one of a few media types that",
    "start": "698399",
    "end": "700320"
  },
  {
    "text": "are meant to represent a file system",
    "start": "700320",
    "end": "702160"
  },
  {
    "text": "change set",
    "start": "702160",
    "end": "703440"
  },
  {
    "text": "if you have ever authored a docker file",
    "start": "703440",
    "end": "705360"
  },
  {
    "text": "you're likely familiar with these chain",
    "start": "705360",
    "end": "707040"
  },
  {
    "text": "sets they are the layers that are",
    "start": "707040",
    "end": "708959"
  },
  {
    "text": "generated when you add or remove files",
    "start": "708959",
    "end": "711440"
  },
  {
    "text": "or perform other operations",
    "start": "711440",
    "end": "713600"
  },
  {
    "text": "however unless the image is actually",
    "start": "713600",
    "end": "715839"
  },
  {
    "text": "passed to a container runtime these",
    "start": "715839",
    "end": "717920"
  },
  {
    "text": "layers are nothing more than tarbles",
    "start": "717920",
    "end": "720639"
  },
  {
    "text": "knowing this we can take advantage of",
    "start": "720639",
    "end": "722399"
  },
  {
    "text": "the fact that we can add",
    "start": "722399",
    "end": "724240"
  },
  {
    "text": "any content to a tarball and as long as",
    "start": "724240",
    "end": "726720"
  },
  {
    "text": "the client that uses it in the future is",
    "start": "726720",
    "end": "728639"
  },
  {
    "text": "able to extract it these layers can be",
    "start": "728639",
    "end": "730880"
  },
  {
    "text": "used as a general container for",
    "start": "730880",
    "end": "732560"
  },
  {
    "text": "distributing content",
    "start": "732560",
    "end": "735680"
  },
  {
    "text": "one place the strategy is exercised in",
    "start": "737920",
    "end": "740720"
  },
  {
    "text": "practice is a cross plane project",
    "start": "740720",
    "end": "742800"
  },
  {
    "text": "crossplan includes a package manager",
    "start": "742800",
    "end": "744639"
  },
  {
    "text": "which is responsible for installing",
    "start": "744639",
    "end": "746160"
  },
  {
    "text": "various sets of kubernetes resources and",
    "start": "746160",
    "end": "748560"
  },
  {
    "text": "maintaining controllers for custom",
    "start": "748560",
    "end": "750320"
  },
  {
    "text": "resource definitions",
    "start": "750320",
    "end": "752240"
  },
  {
    "text": "the manifests for these resources are",
    "start": "752240",
    "end": "754000"
  },
  {
    "text": "bundled into an oci image for easy",
    "start": "754000",
    "end": "756079"
  },
  {
    "text": "distribution by building a stream of",
    "start": "756079",
    "end": "757839"
  },
  {
    "text": "yaml writing it to a file named",
    "start": "757839",
    "end": "760000"
  },
  {
    "text": "package.yaml then packaging it up in a",
    "start": "760000",
    "end": "762399"
  },
  {
    "text": "gzip tarble the result is an artifact",
    "start": "762399",
    "end": "765040"
  },
  {
    "text": "that can be pushed to any registry even",
    "start": "765040",
    "end": "767279"
  },
  {
    "text": "ones that are on the more picky side",
    "start": "767279",
    "end": "770880"
  },
  {
    "text": "strategies like the one crossplan",
    "start": "771440",
    "end": "773279"
  },
  {
    "text": "employs are useful but there is nothing",
    "start": "773279",
    "end": "775040"
  },
  {
    "text": "that says a given image is a crossplain",
    "start": "775040",
    "end": "776959"
  },
  {
    "text": "package outside of the way that we parse",
    "start": "776959",
    "end": "779040"
  },
  {
    "text": "it this presents some pros and cons and",
    "start": "779040",
    "end": "781680"
  },
  {
    "text": "some of the negatives of the approach",
    "start": "781680",
    "end": "783040"
  },
  {
    "text": "are attempting to be solved by the oci",
    "start": "783040",
    "end": "785040"
  },
  {
    "text": "artifacts initiative which aims to take",
    "start": "785040",
    "end": "787200"
  },
  {
    "text": "the flexibility of the distribution spec",
    "start": "787200",
    "end": "789600"
  },
  {
    "text": "and provide a standardized method for",
    "start": "789600",
    "end": "791360"
  },
  {
    "text": "defining new artifact types",
    "start": "791360",
    "end": "793760"
  },
  {
    "text": "these artifacts take advantage of the",
    "start": "793760",
    "end": "795519"
  },
  {
    "text": "existing manifest spec by optionally",
    "start": "795519",
    "end": "797839"
  },
  {
    "text": "defining custom media types for the",
    "start": "797839",
    "end": "800079"
  },
  {
    "text": "config and layer blobs this means that",
    "start": "800079",
    "end": "802720"
  },
  {
    "text": "something like a helm chart can define",
    "start": "802720",
    "end": "804560"
  },
  {
    "text": "helm-specific configuration rather than",
    "start": "804560",
    "end": "806880"
  },
  {
    "text": "providing an empty or mostly empty image",
    "start": "806880",
    "end": "809519"
  },
  {
    "text": "config",
    "start": "809519",
    "end": "810560"
  },
  {
    "text": "it also means that the dedicated tooling",
    "start": "810560",
    "end": "812800"
  },
  {
    "text": "can identify the type of artifact before",
    "start": "812800",
    "end": "815040"
  },
  {
    "text": "attempting to handle it",
    "start": "815040",
    "end": "817519"
  },
  {
    "text": "a drawback to this approach is that the",
    "start": "817519",
    "end": "819600"
  },
  {
    "text": "explosion of media types and the",
    "start": "819600",
    "end": "821120"
  },
  {
    "text": "fragmentation of tooling to handle oci",
    "start": "821120",
    "end": "823279"
  },
  {
    "text": "artifacts",
    "start": "823279",
    "end": "824639"
  },
  {
    "text": "is really exacerbated",
    "start": "824639",
    "end": "826560"
  },
  {
    "text": "when designing the crossplane packages",
    "start": "826560",
    "end": "828720"
  },
  {
    "text": "one of the things we wanted to ensure",
    "start": "828720",
    "end": "830399"
  },
  {
    "text": "was that while we do offer dedicated",
    "start": "830399",
    "end": "832399"
  },
  {
    "text": "tooling users could interact with",
    "start": "832399",
    "end": "834320"
  },
  {
    "text": "crossland packages using nothing more",
    "start": "834320",
    "end": "836320"
  },
  {
    "text": "than their existing registry client of",
    "start": "836320",
    "end": "838399"
  },
  {
    "text": "choice",
    "start": "838399",
    "end": "839600"
  },
  {
    "text": "as more and more artifact and media",
    "start": "839600",
    "end": "841360"
  },
  {
    "text": "types are introduced we start to lose",
    "start": "841360",
    "end": "843440"
  },
  {
    "text": "out on the original benefit of the",
    "start": "843440",
    "end": "845040"
  },
  {
    "text": "registry and related tooling that it's",
    "start": "845040",
    "end": "846880"
  },
  {
    "text": "ubiquitous",
    "start": "846880",
    "end": "848079"
  },
  {
    "text": "remember though from just the",
    "start": "848079",
    "end": "849760"
  },
  {
    "text": "perspective of the distribution spec we",
    "start": "849760",
    "end": "851839"
  },
  {
    "text": "don't care",
    "start": "851839",
    "end": "854320"
  },
  {
    "text": "so now we've seen two ways that",
    "start": "855199",
    "end": "856800"
  },
  {
    "text": "registries can be used to distribute",
    "start": "856800",
    "end": "858480"
  },
  {
    "text": "data that is not meant to be run as a",
    "start": "858480",
    "end": "860320"
  },
  {
    "text": "container but we really haven't pushed",
    "start": "860320",
    "end": "862320"
  },
  {
    "text": "it to the limit yet if we look at the",
    "start": "862320",
    "end": "864399"
  },
  {
    "text": "two data types in the distribution spec",
    "start": "864399",
    "end": "866639"
  },
  {
    "text": "manifests and blobs it's clear that",
    "start": "866639",
    "end": "868800"
  },
  {
    "text": "manifests are the limiting factor here",
    "start": "868800",
    "end": "871040"
  },
  {
    "text": "after all a blob is just content and",
    "start": "871040",
    "end": "873360"
  },
  {
    "text": "content is just bits in the previous two",
    "start": "873360",
    "end": "875600"
  },
  {
    "text": "examples we either shoehorned our",
    "start": "875600",
    "end": "877120"
  },
  {
    "text": "content into an accepted media type or",
    "start": "877120",
    "end": "879519"
  },
  {
    "text": "defined a new one",
    "start": "879519",
    "end": "881040"
  },
  {
    "text": "however if we don't ever have a manifest",
    "start": "881040",
    "end": "883360"
  },
  {
    "text": "referencing our blog",
    "start": "883360",
    "end": "885279"
  },
  {
    "text": "the content is irrelevant let's take a",
    "start": "885279",
    "end": "887760"
  },
  {
    "text": "look at some arbitrary content we might",
    "start": "887760",
    "end": "890160"
  },
  {
    "text": "upload",
    "start": "890160",
    "end": "892560"
  },
  {
    "text": "so",
    "start": "892880",
    "end": "893600"
  },
  {
    "text": "as mentioned the distribution spec",
    "start": "893600",
    "end": "895920"
  },
  {
    "text": "actually doesn't require that a blob",
    "start": "895920",
    "end": "898079"
  },
  {
    "text": "ever be tied to a manifest",
    "start": "898079",
    "end": "900240"
  },
  {
    "text": "in practice a lot of registries will",
    "start": "900240",
    "end": "902079"
  },
  {
    "text": "require that a blob be tied to a",
    "start": "902079",
    "end": "903839"
  },
  {
    "text": "manifest or it'll eventually be garbage",
    "start": "903839",
    "end": "906000"
  },
  {
    "text": "collected but we're going to show some",
    "start": "906000",
    "end": "908160"
  },
  {
    "text": "examples of what you could do if you",
    "start": "908160",
    "end": "909920"
  },
  {
    "text": "weren't",
    "start": "909920",
    "end": "910959"
  },
  {
    "text": "tied to any of the restrictions around",
    "start": "910959",
    "end": "913199"
  },
  {
    "text": "various media types that a registry",
    "start": "913199",
    "end": "915199"
  },
  {
    "text": "might",
    "start": "915199",
    "end": "916079"
  },
  {
    "text": "impro impose so we're going to use some",
    "start": "916079",
    "end": "918800"
  },
  {
    "text": "potentially non-traditional blobs",
    "start": "918800",
    "end": "921600"
  },
  {
    "text": "and see what it looks like to upload",
    "start": "921600",
    "end": "922959"
  },
  {
    "text": "them actually manually just using curl",
    "start": "922959",
    "end": "926079"
  },
  {
    "text": "so",
    "start": "926079",
    "end": "926880"
  },
  {
    "text": "in my kubecon directory here i have our",
    "start": "926880",
    "end": "930639"
  },
  {
    "text": "hello.tar and a cubecon.jpg",
    "start": "930639",
    "end": "934160"
  },
  {
    "text": "i'll start off by",
    "start": "934160",
    "end": "935759"
  },
  {
    "text": "doing the kubecon.jpg",
    "start": "935759",
    "end": "937839"
  },
  {
    "text": "so if we open this up this is just the",
    "start": "937839",
    "end": "939920"
  },
  {
    "text": "logo for kubecon",
    "start": "939920",
    "end": "942399"
  },
  {
    "text": "and i'm going to manually do what many",
    "start": "942399",
    "end": "944560"
  },
  {
    "text": "registry clients are actually going to",
    "start": "944560",
    "end": "946959"
  },
  {
    "text": "do",
    "start": "946959",
    "end": "947920"
  },
  {
    "text": "and start off with our chunked upload",
    "start": "947920",
    "end": "950800"
  },
  {
    "text": "by doing a post",
    "start": "950800",
    "end": "953040"
  },
  {
    "text": "to get our location",
    "start": "953040",
    "end": "955120"
  },
  {
    "text": "that gets sent to us by the registry",
    "start": "955120",
    "end": "958639"
  },
  {
    "text": "so once we get this and let me move this",
    "start": "958639",
    "end": "960560"
  },
  {
    "text": "up a little bit so folks can see",
    "start": "960560",
    "end": "963920"
  },
  {
    "text": "you're going to see that we're given a",
    "start": "964240",
    "end": "966639"
  },
  {
    "text": "location in our response",
    "start": "966639",
    "end": "968480"
  },
  {
    "text": "so i need to take this uuid and make",
    "start": "968480",
    "end": "970959"
  },
  {
    "text": "sure i use it in my next request and",
    "start": "970959",
    "end": "973120"
  },
  {
    "text": "i'll go ahead and craft that",
    "start": "973120",
    "end": "976959"
  },
  {
    "text": "so the next thing i'm going to do after",
    "start": "978240",
    "end": "979519"
  },
  {
    "text": "i've gotten my location is make a patch",
    "start": "979519",
    "end": "982399"
  },
  {
    "text": "request",
    "start": "982399",
    "end": "983680"
  },
  {
    "text": "with the content of my",
    "start": "983680",
    "end": "986639"
  },
  {
    "text": "upload",
    "start": "986639",
    "end": "989120"
  },
  {
    "text": "and you'll see here that in our ui we",
    "start": "989440",
    "end": "991759"
  },
  {
    "text": "actually see that upload that's present",
    "start": "991759",
    "end": "993839"
  },
  {
    "text": "but it hasn't yet tied to been tied to a",
    "start": "993839",
    "end": "996160"
  },
  {
    "text": "blob yet um so the next thing we need to",
    "start": "996160",
    "end": "998399"
  },
  {
    "text": "do is actually commit this upload um and",
    "start": "998399",
    "end": "1001519"
  },
  {
    "text": "say that you know this is the the full",
    "start": "1001519",
    "end": "1004160"
  },
  {
    "text": "amount of content that's present in this",
    "start": "1004160",
    "end": "1005920"
  },
  {
    "text": "blob and also provide the digest uh that",
    "start": "1005920",
    "end": "1008480"
  },
  {
    "text": "should exist for the blob",
    "start": "1008480",
    "end": "1010880"
  },
  {
    "text": "so i'm just going to take the sha-256 of",
    "start": "1010880",
    "end": "1013600"
  },
  {
    "text": "this kubecon",
    "start": "1013600",
    "end": "1014959"
  },
  {
    "text": "jpeg and then i'm going to append that",
    "start": "1014959",
    "end": "1017519"
  },
  {
    "text": "for our put request and our put request",
    "start": "1017519",
    "end": "1020160"
  },
  {
    "text": "goes to the same location but it appends",
    "start": "1020160",
    "end": "1022480"
  },
  {
    "text": "a parameter to the url",
    "start": "1022480",
    "end": "1024480"
  },
  {
    "text": "with our digest the one we just",
    "start": "1024480",
    "end": "1026079"
  },
  {
    "text": "calculated",
    "start": "1026079",
    "end": "1027600"
  },
  {
    "text": "when we submit this you'll see that our",
    "start": "1027600",
    "end": "1029600"
  },
  {
    "text": "blob is now actually present",
    "start": "1029600",
    "end": "1031839"
  },
  {
    "text": "in the registry and we have a nice",
    "start": "1031839",
    "end": "1033839"
  },
  {
    "text": "pointer here to our upload",
    "start": "1033839",
    "end": "1036480"
  },
  {
    "text": "the last thing i want to do is go ahead",
    "start": "1036480",
    "end": "1038798"
  },
  {
    "text": "and pull this blob",
    "start": "1038799",
    "end": "1041199"
  },
  {
    "text": "and that can easily be done with a get",
    "start": "1041199",
    "end": "1043360"
  },
  {
    "text": "request as well and i'm just going to",
    "start": "1043360",
    "end": "1045360"
  },
  {
    "text": "give the output of this bob uh into a",
    "start": "1045360",
    "end": "1047918"
  },
  {
    "text": "different jpeg pull.jpg",
    "start": "1047919",
    "end": "1050480"
  },
  {
    "text": "and you'll see that uh we we",
    "start": "1050480",
    "end": "1053760"
  },
  {
    "text": "uh represented that poll here in the uh",
    "start": "1053760",
    "end": "1057440"
  },
  {
    "text": "in the ui",
    "start": "1057440",
    "end": "1058559"
  },
  {
    "text": "and if we go ahead and open up our",
    "start": "1058559",
    "end": "1061039"
  },
  {
    "text": "port.jpg we'll see that we got the exact",
    "start": "1061039",
    "end": "1063840"
  },
  {
    "text": "same image back",
    "start": "1063840",
    "end": "1066480"
  },
  {
    "text": "thanks dan it seems like this registry",
    "start": "1066480",
    "end": "1068880"
  },
  {
    "text": "is a really helpful person",
    "start": "1068880",
    "end": "1070799"
  },
  {
    "text": "but can we trust them",
    "start": "1070799",
    "end": "1073919"
  },
  {
    "text": "so generally if you're pulling an image",
    "start": "1073919",
    "end": "1075919"
  },
  {
    "text": "from a registry you intend to run it",
    "start": "1075919",
    "end": "1078880"
  },
  {
    "text": "often in prod",
    "start": "1078880",
    "end": "1080799"
  },
  {
    "text": "this makes the registry a really juicy",
    "start": "1080799",
    "end": "1082480"
  },
  {
    "text": "target for bad actors",
    "start": "1082480",
    "end": "1084480"
  },
  {
    "text": "if hackers could manipulate what's in",
    "start": "1084480",
    "end": "1086080"
  },
  {
    "text": "your registry it's trivial for them to",
    "start": "1086080",
    "end": "1088080"
  },
  {
    "text": "execute arbitrary code on your cluster",
    "start": "1088080",
    "end": "1092159"
  },
  {
    "text": "i stole this diagram from the salsa",
    "start": "1092400",
    "end": "1094320"
  },
  {
    "text": "project project yeah",
    "start": "1094320",
    "end": "1096960"
  },
  {
    "text": "one two three",
    "start": "1096960",
    "end": "1099120"
  },
  {
    "text": "i stole this excellent diagram from the",
    "start": "1099120",
    "end": "1100880"
  },
  {
    "text": "salsa project",
    "start": "1100880",
    "end": "1102640"
  },
  {
    "text": "these last two hops are what we're",
    "start": "1102640",
    "end": "1104640"
  },
  {
    "text": "worried about here how do we avoid",
    "start": "1104640",
    "end": "1107200"
  },
  {
    "text": "the bad red things so",
    "start": "1107200",
    "end": "1110160"
  },
  {
    "text": "if someone compromises the registry we",
    "start": "1110160",
    "end": "1113280"
  },
  {
    "text": "don't want them to be able to get things",
    "start": "1113280",
    "end": "1115280"
  },
  {
    "text": "into our cluster",
    "start": "1115280",
    "end": "1118160"
  },
  {
    "text": "the answer to can i trust the registry",
    "start": "1119039",
    "end": "1121200"
  },
  {
    "text": "is if you deploy by digest yes",
    "start": "1121200",
    "end": "1124400"
  },
  {
    "text": "the answer is that you should always",
    "start": "1124400",
    "end": "1125840"
  },
  {
    "text": "deploy by digest write that down because",
    "start": "1125840",
    "end": "1128400"
  },
  {
    "text": "that's going to be the key takeaway",
    "start": "1128400",
    "end": "1130640"
  },
  {
    "text": "if you deploy by digest you get all the",
    "start": "1130640",
    "end": "1132720"
  },
  {
    "text": "benefits of content addressability that",
    "start": "1132720",
    "end": "1134480"
  },
  {
    "text": "dan mentioned earlier for free",
    "start": "1134480",
    "end": "1136640"
  },
  {
    "text": "and you don't have to worry about what",
    "start": "1136640",
    "end": "1137840"
  },
  {
    "text": "i'm about to show you",
    "start": "1137840",
    "end": "1140640"
  },
  {
    "text": "however",
    "start": "1140640",
    "end": "1141679"
  },
  {
    "text": "if you deploy things by tag like most",
    "start": "1141679",
    "end": "1143840"
  },
  {
    "text": "people your trusted computing base just",
    "start": "1143840",
    "end": "1146160"
  },
  {
    "text": "got a lot bigger",
    "start": "1146160",
    "end": "1147919"
  },
  {
    "text": "can you trust",
    "start": "1147919",
    "end": "1149280"
  },
  {
    "text": "your registry domain",
    "start": "1149280",
    "end": "1151039"
  },
  {
    "text": "can you trust that no one's management",
    "start": "1151039",
    "end": "1153360"
  },
  {
    "text": "in your client or manipulating what",
    "start": "1153360",
    "end": "1155760"
  },
  {
    "text": "mirrors you use or have stolen",
    "start": "1155760",
    "end": "1158320"
  },
  {
    "text": "credentials for your registry or even",
    "start": "1158320",
    "end": "1160480"
  },
  {
    "text": "have bypassed your registry credentials",
    "start": "1160480",
    "end": "1165000"
  },
  {
    "text": "most people know that piping curl into",
    "start": "1165280",
    "end": "1167200"
  },
  {
    "text": "bash is not a great idea",
    "start": "1167200",
    "end": "1169280"
  },
  {
    "text": "this is bad enough to happen on your",
    "start": "1169280",
    "end": "1170720"
  },
  {
    "text": "workstation but the stakes are a lot",
    "start": "1170720",
    "end": "1172640"
  },
  {
    "text": "higher with a registry",
    "start": "1172640",
    "end": "1174480"
  },
  {
    "text": "when you deploy by tag you're basically",
    "start": "1174480",
    "end": "1176480"
  },
  {
    "text": "piping curl into bash in production",
    "start": "1176480",
    "end": "1180240"
  },
  {
    "text": "don't do that",
    "start": "1180240",
    "end": "1182400"
  },
  {
    "text": "again",
    "start": "1182400",
    "end": "1183360"
  },
  {
    "text": "you should always deploy to production",
    "start": "1183360",
    "end": "1184960"
  },
  {
    "text": "by digest if you can't do this for some",
    "start": "1184960",
    "end": "1187360"
  },
  {
    "text": "reason i would invite you to rethink the",
    "start": "1187360",
    "end": "1189440"
  },
  {
    "text": "design of your supply chain",
    "start": "1189440",
    "end": "1192880"
  },
  {
    "text": "why am i so passionate about this",
    "start": "1192880",
    "end": "1196799"
  },
  {
    "text": "the answer is typos",
    "start": "1196799",
    "end": "1198640"
  },
  {
    "text": "and if you know me you'll think that's",
    "start": "1198640",
    "end": "1199919"
  },
  {
    "text": "funny but when i first started at google",
    "start": "1199919",
    "end": "1202159"
  },
  {
    "text": "i noticed a pattern",
    "start": "1202159",
    "end": "1203919"
  },
  {
    "text": "a lot of our customer support requests",
    "start": "1203919",
    "end": "1206320"
  },
  {
    "text": "including from internal teams ended in",
    "start": "1206320",
    "end": "1208320"
  },
  {
    "text": "the exact same way eventually someone",
    "start": "1208320",
    "end": "1210880"
  },
  {
    "text": "noticed there's a typo and they close",
    "start": "1210880",
    "end": "1212720"
  },
  {
    "text": "the book",
    "start": "1212720",
    "end": "1213919"
  },
  {
    "text": "this one in particular happened a lot",
    "start": "1213919",
    "end": "1216080"
  },
  {
    "text": "you notice we run the google container",
    "start": "1216080",
    "end": "1217919"
  },
  {
    "text": "registry not the google registry",
    "start": "1217919",
    "end": "1219919"
  },
  {
    "text": "container",
    "start": "1219919",
    "end": "1222240"
  },
  {
    "text": "you might be thinking who cares that",
    "start": "1222240",
    "end": "1224400"
  },
  {
    "text": "pool failed and they eventually noticed",
    "start": "1224400",
    "end": "1226159"
  },
  {
    "text": "the typo",
    "start": "1226159",
    "end": "1227440"
  },
  {
    "text": "well",
    "start": "1227440",
    "end": "1228320"
  },
  {
    "text": "what if the pool didn't fail",
    "start": "1228320",
    "end": "1230880"
  },
  {
    "text": "in the case where you're trying to pull",
    "start": "1230880",
    "end": "1232000"
  },
  {
    "text": "by a digest your client would check the",
    "start": "1232000",
    "end": "1234080"
  },
  {
    "text": "response it gets from the server against",
    "start": "1234080",
    "end": "1235919"
  },
  {
    "text": "the digest you requested and it would",
    "start": "1235919",
    "end": "1237840"
  },
  {
    "text": "immediately fail if they didn't match",
    "start": "1237840",
    "end": "1240799"
  },
  {
    "text": "but if you're trying to pull an image by",
    "start": "1240799",
    "end": "1242400"
  },
  {
    "text": "tag",
    "start": "1242400",
    "end": "1244280"
  },
  {
    "text": "grc.io could respond with any valid",
    "start": "1244280",
    "end": "1246880"
  },
  {
    "text": "image and your client wouldn't complain",
    "start": "1246880",
    "end": "1250080"
  },
  {
    "text": "when i first realized this i was kind of",
    "start": "1250080",
    "end": "1252000"
  },
  {
    "text": "terrified",
    "start": "1252000",
    "end": "1253120"
  },
  {
    "text": "i immediately tried to register grc.io",
    "start": "1253120",
    "end": "1255840"
  },
  {
    "text": "but found that somebody already owns it",
    "start": "1255840",
    "end": "1258320"
  },
  {
    "text": "what would happen if that person was a",
    "start": "1258320",
    "end": "1260960"
  },
  {
    "text": "malicious uh i eventually convinced",
    "start": "1260960",
    "end": "1263360"
  },
  {
    "text": "myself that this wasn't a huge problem i",
    "start": "1263360",
    "end": "1265760"
  },
  {
    "text": "just don't make typos right that's easy",
    "start": "1265760",
    "end": "1267679"
  },
  {
    "text": "enough",
    "start": "1267679",
    "end": "1268799"
  },
  {
    "text": "however a few years later i saw this",
    "start": "1268799",
    "end": "1271200"
  },
  {
    "text": "defcon talk by arden dynaberg and i have",
    "start": "1271200",
    "end": "1274159"
  },
  {
    "text": "been perpetually terrified ever since",
    "start": "1274159",
    "end": "1277120"
  },
  {
    "text": "so let's talk about bit squatting",
    "start": "1277120",
    "end": "1281039"
  },
  {
    "text": "so when you pull an image from a",
    "start": "1281200",
    "end": "1282480"
  },
  {
    "text": "registry you're making a bunch of http",
    "start": "1282480",
    "end": "1284720"
  },
  {
    "text": "requests to some server",
    "start": "1284720",
    "end": "1286320"
  },
  {
    "text": "in this case we end up making an http",
    "start": "1286320",
    "end": "1288720"
  },
  {
    "text": "request to dockerhub to get the manifest",
    "start": "1288720",
    "end": "1290880"
  },
  {
    "text": "for this tag 2 of the registry",
    "start": "1290880",
    "end": "1293840"
  },
  {
    "text": "image",
    "start": "1293840",
    "end": "1296158"
  },
  {
    "text": "and http is generally layered on top of",
    "start": "1296240",
    "end": "1298880"
  },
  {
    "text": "tcpip so the first thing we need to do",
    "start": "1298880",
    "end": "1301600"
  },
  {
    "text": "is resolve docker.io to some ip address",
    "start": "1301600",
    "end": "1304960"
  },
  {
    "text": "this generally works and we send the",
    "start": "1304960",
    "end": "1307280"
  },
  {
    "text": "request to dockerhub which we trust more",
    "start": "1307280",
    "end": "1310240"
  },
  {
    "text": "or less",
    "start": "1310240",
    "end": "1311200"
  },
  {
    "text": "but how could this go wrong",
    "start": "1311200",
    "end": "1314480"
  },
  {
    "text": "so i highly recommend just watching",
    "start": "1314880",
    "end": "1317120"
  },
  {
    "text": "artem's talk or reading the blog post",
    "start": "1317120",
    "end": "1319520"
  },
  {
    "text": "but i'm going to give a very hand-wavy",
    "start": "1319520",
    "end": "1321120"
  },
  {
    "text": "explanation of bit squatting so",
    "start": "1321120",
    "end": "1323520"
  },
  {
    "text": "computers are imperfect",
    "start": "1323520",
    "end": "1325840"
  },
  {
    "text": "sometimes a bit will go rogue and just",
    "start": "1325840",
    "end": "1328080"
  },
  {
    "text": "flip from a 0 to a 1 or vice versa many",
    "start": "1328080",
    "end": "1331280"
  },
  {
    "text": "things can cause this for example just a",
    "start": "1331280",
    "end": "1333600"
  },
  {
    "text": "lot of heat or faulty manufacturing",
    "start": "1333600",
    "end": "1335840"
  },
  {
    "text": "process or even cosmic rays from outer",
    "start": "1335840",
    "end": "1338240"
  },
  {
    "text": "space",
    "start": "1338240",
    "end": "1339600"
  },
  {
    "text": "if you happen to get remarkably unlucky",
    "start": "1339600",
    "end": "1342240"
  },
  {
    "text": "this can happen to your machine and flip",
    "start": "1342240",
    "end": "1344000"
  },
  {
    "text": "a bit somewhere in a domain name for",
    "start": "1344000",
    "end": "1346080"
  },
  {
    "text": "example in an image reference",
    "start": "1346080",
    "end": "1349760"
  },
  {
    "text": "boom",
    "start": "1349760",
    "end": "1350799"
  },
  {
    "text": "we flipped a bit in this first character",
    "start": "1350799",
    "end": "1353200"
  },
  {
    "text": "of docker.io",
    "start": "1353200",
    "end": "1354960"
  },
  {
    "text": "what now",
    "start": "1354960",
    "end": "1357440"
  },
  {
    "text": "as before the first thing we need to do",
    "start": "1358720",
    "end": "1361039"
  },
  {
    "text": "is just resolve an ip address",
    "start": "1361039",
    "end": "1363120"
  },
  {
    "text": "unfortunately we're looking for the",
    "start": "1363120",
    "end": "1365120"
  },
  {
    "text": "wrong server",
    "start": "1365120",
    "end": "1366480"
  },
  {
    "text": "instead of docker hub our client ends up",
    "start": "1366480",
    "end": "1368400"
  },
  {
    "text": "talking to whoever owns each or dot io",
    "start": "1368400",
    "end": "1373559"
  },
  {
    "text": "so i happen to own ioka.io",
    "start": "1374640",
    "end": "1377760"
  },
  {
    "text": "this was an enticing purchase because",
    "start": "1377760",
    "end": "1379679"
  },
  {
    "text": "it's both a single bit flip and a single",
    "start": "1379679",
    "end": "1382000"
  },
  {
    "text": "character away from docker.io on a",
    "start": "1382000",
    "end": "1384080"
  },
  {
    "text": "qwerty keyboard",
    "start": "1384080",
    "end": "1385600"
  },
  {
    "text": "um",
    "start": "1385600",
    "end": "1386799"
  },
  {
    "text": "it would take a little too long and",
    "start": "1386799",
    "end": "1388640"
  },
  {
    "text": "probably be unsafe to actually flip a",
    "start": "1388640",
    "end": "1391200"
  },
  {
    "text": "bit via radiation so i'm going to cheat",
    "start": "1391200",
    "end": "1393200"
  },
  {
    "text": "for a demo and just pull from yakker.io",
    "start": "1393200",
    "end": "1395440"
  },
  {
    "text": "directly",
    "start": "1395440",
    "end": "1397200"
  },
  {
    "text": "so first let's establish a control group",
    "start": "1397200",
    "end": "1399600"
  },
  {
    "text": "to see what we expect to happen",
    "start": "1399600",
    "end": "1401520"
  },
  {
    "text": "so if we docker run this registry image",
    "start": "1401520",
    "end": "1404480"
  },
  {
    "text": "we're going to have locally a registry",
    "start": "1404480",
    "end": "1406559"
  },
  {
    "text": "running",
    "start": "1406559",
    "end": "1408880"
  },
  {
    "text": "so we're going to pull from docker hub",
    "start": "1409120",
    "end": "1411440"
  },
  {
    "text": "and it's up and running and",
    "start": "1411440",
    "end": "1413679"
  },
  {
    "text": "just to demonstrate that",
    "start": "1413679",
    "end": "1415840"
  },
  {
    "text": "let's actually copy something into there",
    "start": "1415840",
    "end": "1418400"
  },
  {
    "text": "so",
    "start": "1418400",
    "end": "1420559"
  },
  {
    "text": "you can see",
    "start": "1420880",
    "end": "1422559"
  },
  {
    "text": "lots of traffic it worked i copied the",
    "start": "1422559",
    "end": "1424799"
  },
  {
    "text": "thing",
    "start": "1424799",
    "end": "1426480"
  },
  {
    "text": "so",
    "start": "1426480",
    "end": "1428640"
  },
  {
    "text": "that's what we expect to happen",
    "start": "1429520",
    "end": "1431279"
  },
  {
    "text": "now",
    "start": "1431279",
    "end": "1432480"
  },
  {
    "text": "instead of",
    "start": "1432480",
    "end": "1434400"
  },
  {
    "text": "running this from docker hub what",
    "start": "1434400",
    "end": "1435840"
  },
  {
    "text": "happens if by some magical unlikely",
    "start": "1435840",
    "end": "1438960"
  },
  {
    "text": "sequence of events we accidentally pull",
    "start": "1438960",
    "end": "1440880"
  },
  {
    "text": "this from yacker dot io",
    "start": "1440880",
    "end": "1444080"
  },
  {
    "text": "so",
    "start": "1444080",
    "end": "1445120"
  },
  {
    "text": "can't find it locally we pull from",
    "start": "1445120",
    "end": "1447200"
  },
  {
    "text": "ryokar",
    "start": "1447200",
    "end": "1448320"
  },
  {
    "text": "and it starts up in the same way but",
    "start": "1448320",
    "end": "1449919"
  },
  {
    "text": "you'll notice",
    "start": "1449919",
    "end": "1452320"
  },
  {
    "text": "this log line which wasn't in the",
    "start": "1452320",
    "end": "1454240"
  },
  {
    "text": "previous image",
    "start": "1454240",
    "end": "1457120"
  },
  {
    "text": "interesting and you'll also notice",
    "start": "1457200",
    "end": "1459840"
  },
  {
    "text": "that",
    "start": "1459840",
    "end": "1460640"
  },
  {
    "text": "it still works and i could still",
    "start": "1460640",
    "end": "1462960"
  },
  {
    "text": "copy images to it",
    "start": "1462960",
    "end": "1465120"
  },
  {
    "text": "and i can still",
    "start": "1465120",
    "end": "1467679"
  },
  {
    "text": "list",
    "start": "1467679",
    "end": "1469919"
  },
  {
    "text": "what i've pushed there it works as a",
    "start": "1470159",
    "end": "1472159"
  },
  {
    "text": "registry",
    "start": "1472159",
    "end": "1474400"
  },
  {
    "text": "so what just happened",
    "start": "1474400",
    "end": "1477360"
  },
  {
    "text": "imagine that an attacker wants to access",
    "start": "1477360",
    "end": "1480080"
  },
  {
    "text": "your production cluster",
    "start": "1480080",
    "end": "1482799"
  },
  {
    "text": "they could serve you a bitcoin miner and",
    "start": "1482799",
    "end": "1485200"
  },
  {
    "text": "that might just work for a little bit",
    "start": "1485200",
    "end": "1487279"
  },
  {
    "text": "but you would probably notice pretty",
    "start": "1487279",
    "end": "1488559"
  },
  {
    "text": "quickly that your deployments weren't",
    "start": "1488559",
    "end": "1489919"
  },
  {
    "text": "doing what they're supposed to do and",
    "start": "1489919",
    "end": "1491279"
  },
  {
    "text": "then they were instead just mining",
    "start": "1491279",
    "end": "1492960"
  },
  {
    "text": "bitcoin",
    "start": "1492960",
    "end": "1494000"
  },
  {
    "text": "so what i've done for the demo is set up",
    "start": "1494000",
    "end": "1496080"
  },
  {
    "text": "a registry that just proxies your",
    "start": "1496080",
    "end": "1498080"
  },
  {
    "text": "requests back to docker hub but before",
    "start": "1498080",
    "end": "1500720"
  },
  {
    "text": "serving it to you mutates the image to",
    "start": "1500720",
    "end": "1503039"
  },
  {
    "text": "inject a malicious payload",
    "start": "1503039",
    "end": "1505760"
  },
  {
    "text": "in this case that malicious payload just",
    "start": "1505760",
    "end": "1507919"
  },
  {
    "text": "logs a message and immediately runs your",
    "start": "1507919",
    "end": "1509520"
  },
  {
    "text": "intended image but you could certainly",
    "start": "1509520",
    "end": "1511440"
  },
  {
    "text": "imagine doing something much more",
    "start": "1511440",
    "end": "1512880"
  },
  {
    "text": "nefarious like bitcoin mining a reverse",
    "start": "1512880",
    "end": "1516000"
  },
  {
    "text": "shell",
    "start": "1516000",
    "end": "1517120"
  },
  {
    "text": "proxying all the traffic to your pod",
    "start": "1517120",
    "end": "1520480"
  },
  {
    "text": "really anything",
    "start": "1520480",
    "end": "1522480"
  },
  {
    "text": "uh you can see here that i've just",
    "start": "1522480",
    "end": "1523919"
  },
  {
    "text": "replaced the entry point with something",
    "start": "1523919",
    "end": "1525600"
  },
  {
    "text": "a little evil",
    "start": "1525600",
    "end": "1529000"
  },
  {
    "text": "but how likely is that actually to",
    "start": "1529039",
    "end": "1531520"
  },
  {
    "text": "happen",
    "start": "1531520",
    "end": "1532480"
  },
  {
    "text": "ever",
    "start": "1532480",
    "end": "1533520"
  },
  {
    "text": "uh maybe one in a billion one in a",
    "start": "1533520",
    "end": "1535600"
  },
  {
    "text": "trillion maybe this isn't really",
    "start": "1535600",
    "end": "1537200"
  },
  {
    "text": "something to worry about",
    "start": "1537200",
    "end": "1539760"
  },
  {
    "text": "uh so it's hard to really say concretely",
    "start": "1539760",
    "end": "1541679"
  },
  {
    "text": "how likely that's to happen but",
    "start": "1541679",
    "end": "1543840"
  },
  {
    "text": "uh based on some numbers docker have put",
    "start": "1543840",
    "end": "1545760"
  },
  {
    "text": "out earlier this year i think that maybe",
    "start": "1545760",
    "end": "1547760"
  },
  {
    "text": "possibly this is something you should",
    "start": "1547760",
    "end": "1549360"
  },
  {
    "text": "worry about",
    "start": "1549360",
    "end": "1550480"
  },
  {
    "text": "uh at 300 billion pools we're getting",
    "start": "1550480",
    "end": "1553360"
  },
  {
    "text": "close to just very large numbers",
    "start": "1553360",
    "end": "1556400"
  },
  {
    "text": "so this stuff does happen in practice",
    "start": "1556400",
    "end": "1558480"
  },
  {
    "text": "you don't have to take my word for it",
    "start": "1558480",
    "end": "1559760"
  },
  {
    "text": "check out these awesome sources for",
    "start": "1559760",
    "end": "1561600"
  },
  {
    "text": "further reading",
    "start": "1561600",
    "end": "1563760"
  },
  {
    "text": "and one more time i always deploy by",
    "start": "1563760",
    "end": "1566000"
  },
  {
    "text": "digest because computers are broken and",
    "start": "1566000",
    "end": "1567840"
  },
  {
    "text": "terrible and you never know who's on the",
    "start": "1567840",
    "end": "1569360"
  },
  {
    "text": "other side of that tcp connection",
    "start": "1569360",
    "end": "1572799"
  },
  {
    "text": "but john didn't we just say that the",
    "start": "1573279",
    "end": "1575039"
  },
  {
    "text": "registry is our friend",
    "start": "1575039",
    "end": "1576640"
  },
  {
    "text": "surely if we did trust the registry",
    "start": "1576640",
    "end": "1578240"
  },
  {
    "text": "there could be some pretty interesting",
    "start": "1578240",
    "end": "1579600"
  },
  {
    "text": "things we could do i think we should",
    "start": "1579600",
    "end": "1581440"
  },
  {
    "text": "wrap this up with a nice little chat",
    "start": "1581440",
    "end": "1582960"
  },
  {
    "text": "with the registry",
    "start": "1582960",
    "end": "1584559"
  },
  {
    "text": "so where have we been so far in this",
    "start": "1584559",
    "end": "1586240"
  },
  {
    "text": "talk we covered that the registry stores",
    "start": "1586240",
    "end": "1588320"
  },
  {
    "text": "content and that content is just bits we",
    "start": "1588320",
    "end": "1591039"
  },
  {
    "text": "also covered how manifest can provide",
    "start": "1591039",
    "end": "1592880"
  },
  {
    "text": "some structure to those bits and when",
    "start": "1592880",
    "end": "1594880"
  },
  {
    "text": "used recklessly can lead to some pretty",
    "start": "1594880",
    "end": "1596880"
  },
  {
    "text": "severe repercussions",
    "start": "1596880",
    "end": "1598480"
  },
  {
    "text": "but what if we threw caution to the wind",
    "start": "1598480",
    "end": "1600159"
  },
  {
    "text": "and really took advantage of the",
    "start": "1600159",
    "end": "1601600"
  },
  {
    "text": "flexibility of the distribution spec",
    "start": "1601600",
    "end": "1604000"
  },
  {
    "text": "well",
    "start": "1604000",
    "end": "1604799"
  },
  {
    "text": "we could build",
    "start": "1604799",
    "end": "1606240"
  },
  {
    "text": "a chat service and in fact we did since",
    "start": "1606240",
    "end": "1608960"
  },
  {
    "text": "we aren't able to be in person with",
    "start": "1608960",
    "end": "1610640"
  },
  {
    "text": "folks at kubecon this year we thought we",
    "start": "1610640",
    "end": "1612480"
  },
  {
    "text": "could at least do a live demo as we",
    "start": "1612480",
    "end": "1614799"
  },
  {
    "text": "round out this talk with one of the most",
    "start": "1614799",
    "end": "1616320"
  },
  {
    "text": "extreme examples of pushing the registry",
    "start": "1616320",
    "end": "1618320"
  },
  {
    "text": "to the limit feel free to join us at",
    "start": "1618320",
    "end": "1620320"
  },
  {
    "text": "eocor.io",
    "start": "1620320",
    "end": "1622240"
  },
  {
    "text": "chat to talk about how this presentation",
    "start": "1622240",
    "end": "1624159"
  },
  {
    "text": "went and ask any questions you might",
    "start": "1624159",
    "end": "1626240"
  },
  {
    "text": "have",
    "start": "1626240",
    "end": "1627919"
  },
  {
    "text": "so how does this work it's built on what",
    "start": "1627919",
    "end": "1630080"
  },
  {
    "text": "john has advised us to never do pull by",
    "start": "1630080",
    "end": "1632559"
  },
  {
    "text": "tag since the content of a tag is",
    "start": "1632559",
    "end": "1634640"
  },
  {
    "text": "dynamic we can essentially build our",
    "start": "1634640",
    "end": "1636400"
  },
  {
    "text": "manifest just in time",
    "start": "1636400",
    "end": "1638559"
  },
  {
    "text": "each layer of our chat image contains a",
    "start": "1638559",
    "end": "1640559"
  },
  {
    "text": "log of messages",
    "start": "1640559",
    "end": "1642080"
  },
  {
    "text": "in between polls new messages are",
    "start": "1642080",
    "end": "1643919"
  },
  {
    "text": "appended to an in-progress upload the",
    "start": "1643919",
    "end": "1646159"
  },
  {
    "text": "next time someone pulls the chat image",
    "start": "1646159",
    "end": "1648320"
  },
  {
    "text": "we commit that upload as a blob then",
    "start": "1648320",
    "end": "1650480"
  },
  {
    "text": "serve a manifest that points to it and",
    "start": "1650480",
    "end": "1652480"
  },
  {
    "text": "all the other blobs",
    "start": "1652480",
    "end": "1655200"
  },
  {
    "text": "on the client side when the image is run",
    "start": "1655200",
    "end": "1657919"
  },
  {
    "text": "all previous chat messages are sent to",
    "start": "1657919",
    "end": "1659919"
  },
  {
    "text": "standard out the binary connects to a",
    "start": "1659919",
    "end": "1661919"
  },
  {
    "text": "websocket service on yakker.io and the",
    "start": "1661919",
    "end": "1664320"
  },
  {
    "text": "user is shown any new messages that are",
    "start": "1664320",
    "end": "1666240"
  },
  {
    "text": "sent and is able to send their own",
    "start": "1666240",
    "end": "1668720"
  },
  {
    "text": "the websocket service not only brokers",
    "start": "1668720",
    "end": "1671039"
  },
  {
    "text": "communication between users running the",
    "start": "1671039",
    "end": "1672799"
  },
  {
    "text": "chat image but also uploads new messages",
    "start": "1672799",
    "end": "1675520"
  },
  {
    "text": "to the in-progress upload in the chat",
    "start": "1675520",
    "end": "1677360"
  },
  {
    "text": "repository and the registry",
    "start": "1677360",
    "end": "1679600"
  },
  {
    "text": "therefore when the image is pulled again",
    "start": "1679600",
    "end": "1681840"
  },
  {
    "text": "the user has all messages that have been",
    "start": "1681840",
    "end": "1683679"
  },
  {
    "text": "sent up to that point and starts",
    "start": "1683679",
    "end": "1685120"
  },
  {
    "text": "receiving new ones from the chat service",
    "start": "1685120",
    "end": "1688960"
  },
  {
    "text": "we hope you have enjoyed our",
    "start": "1688960",
    "end": "1690000"
  },
  {
    "text": "presentation and we especially hope you",
    "start": "1690000",
    "end": "1692240"
  },
  {
    "text": "now see the registry in a new light and",
    "start": "1692240",
    "end": "1694559"
  },
  {
    "text": "next time you dock or pull remember that",
    "start": "1694559",
    "end": "1696640"
  },
  {
    "text": "thing you're talking to is more than",
    "start": "1696640",
    "end": "1698159"
  },
  {
    "text": "just the glorified ftp server you are",
    "start": "1698159",
    "end": "1700480"
  },
  {
    "text": "led to believe it is",
    "start": "1700480",
    "end": "1704278"
  }
]