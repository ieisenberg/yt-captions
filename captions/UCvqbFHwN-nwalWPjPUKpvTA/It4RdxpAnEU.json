[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": "okay good morning everyone thank you for",
    "start": "0",
    "end": "3510"
  },
  {
    "text": "coming to this session",
    "start": "3510",
    "end": "4890"
  },
  {
    "text": "this session is multi-cloud Ingres lb",
    "start": "4890",
    "end": "8990"
  },
  {
    "text": "Kimball use case in October and Yahoo",
    "start": "8990",
    "end": "12540"
  },
  {
    "text": "Japan so today we're gonna talk about",
    "start": "12540",
    "end": "15929"
  },
  {
    "text": "gimbal overview and how Yahoo Japan use",
    "start": "15929",
    "end": "20220"
  },
  {
    "text": "it and operate gimbal first let us",
    "start": "20220",
    "end": "27330"
  },
  {
    "start": "25000",
    "end": "25000"
  },
  {
    "text": "introduce ourselves",
    "start": "27330",
    "end": "29070"
  },
  {
    "text": "I'm hero each color and engineer of",
    "start": "29070",
    "end": "33210"
  },
  {
    "text": "October at",
    "start": "33210",
    "end": "35370"
  },
  {
    "text": "octuple I cover a wide range of",
    "start": "35370",
    "end": "38480"
  },
  {
    "text": "infrastructure engineering from data",
    "start": "38480",
    "end": "41670"
  },
  {
    "text": "center to crowd it's a fruit stack",
    "start": "41670",
    "end": "46039"
  },
  {
    "text": "infrastructure engineering then what",
    "start": "46039",
    "end": "52230"
  },
  {
    "start": "50000",
    "end": "50000"
  },
  {
    "text": "octa-pie octa-pie is the US subsidiary",
    "start": "52230",
    "end": "58020"
  },
  {
    "text": "of yahoo japan we are based in",
    "start": "58020",
    "end": "61109"
  },
  {
    "text": "Washington State in Washington State",
    "start": "61109",
    "end": "65040"
  },
  {
    "text": "we operate data center for Yahoo Japan",
    "start": "65040",
    "end": "68060"
  },
  {
    "text": "we have just one data center now but",
    "start": "68060",
    "end": "72090"
  },
  {
    "text": "next week we're gonna open the second",
    "start": "72090",
    "end": "74970"
  },
  {
    "text": "one it is big and it has a capacity of",
    "start": "74970",
    "end": "78720"
  },
  {
    "text": "up to 16 megawatt we also work for",
    "start": "78720",
    "end": "84210"
  },
  {
    "text": "accelerating software powered",
    "start": "84210",
    "end": "86840"
  },
  {
    "text": "infrastructure solutions such as road",
    "start": "86840",
    "end": "90540"
  },
  {
    "text": "balancing application monitoring strage",
    "start": "90540",
    "end": "93720"
  },
  {
    "text": "and so on we cooperate with the fu Japan",
    "start": "93720",
    "end": "99119"
  },
  {
    "text": "on these efforts hi",
    "start": "99119",
    "end": "104820"
  },
  {
    "text": "I'm in literally no way I'm senior",
    "start": "104820",
    "end": "108090"
  },
  {
    "text": "manager of Yahoo Japan private cloud",
    "start": "108090",
    "end": "110520"
  },
  {
    "text": "division I'm in charge of OpenStack OS",
    "start": "110520",
    "end": "114450"
  },
  {
    "text": "yes Lea in general I was responsible for",
    "start": "114450",
    "end": "118649"
  },
  {
    "text": "Network Szigeti in the past I also have",
    "start": "118649",
    "end": "122070"
  },
  {
    "text": "knowledge about network and security",
    "start": "122070",
    "end": "126170"
  },
  {
    "start": "126000",
    "end": "126000"
  },
  {
    "text": "let me introduce about Yahoo Japan",
    "start": "126439",
    "end": "129479"
  },
  {
    "text": "Yahoo Japan is joint venture between",
    "start": "129479",
    "end": "132880"
  },
  {
    "text": "Softbank and here Fink but Yahoo Inc was",
    "start": "132880",
    "end": "136480"
  },
  {
    "text": "bought by Verizon we are independent but",
    "start": "136480",
    "end": "140020"
  },
  {
    "text": "we are independent we are many services",
    "start": "140020",
    "end": "143230"
  },
  {
    "text": "for example a news auction wizard there",
    "start": "143230",
    "end": "147850"
  },
  {
    "text": "are over 100 services we have 72 video",
    "start": "147850",
    "end": "152230"
  },
  {
    "text": "page bill per month and 10 datacenters",
    "start": "152230",
    "end": "155230"
  },
  {
    "text": "and 100,000 servers over 60 OpenStack",
    "start": "155230",
    "end": "159820"
  },
  {
    "text": "Craster's most of our service services",
    "start": "159820",
    "end": "163630"
  },
  {
    "text": "than OpenStack currently we are",
    "start": "163630",
    "end": "167650"
  },
  {
    "text": "migrating our infrastructure to",
    "start": "167650",
    "end": "169810"
  },
  {
    "text": "kubernetes and curved boundary from",
    "start": "169810",
    "end": "172210"
  },
  {
    "text": "OpenStack ok let's start talking about",
    "start": "172210",
    "end": "179340"
  },
  {
    "text": "bball what Kimble Kimble is rare 7",
    "start": "179340",
    "end": "187330"
  },
  {
    "start": "182000",
    "end": "182000"
  },
  {
    "text": "ingress rod branching platform built by",
    "start": "187330",
    "end": "190600"
  },
  {
    "text": "help you with octopus and Yahoo Japan",
    "start": "190600",
    "end": "194700"
  },
  {
    "text": "Kimble works on kubernetes ecosystem and",
    "start": "194700",
    "end": "198510"
  },
  {
    "text": "provides us scalable mod team and a peer",
    "start": "198510",
    "end": "203440"
  },
  {
    "text": "driven ingress fear",
    "start": "203440",
    "end": "205560"
  },
  {
    "text": "Kimbo is capable of routing Internet",
    "start": "205560",
    "end": "209590"
  },
  {
    "text": "traffic to multiple upstream crowd such",
    "start": "209590",
    "end": "213250"
  },
  {
    "text": "as Cuban Aires and OpenStack before",
    "start": "213250",
    "end": "219760"
  },
  {
    "text": "talking about detail of gimble I would",
    "start": "219760",
    "end": "223000"
  },
  {
    "text": "explain about to whites and our",
    "start": "223000",
    "end": "226240"
  },
  {
    "text": "background the first question is why we",
    "start": "226240",
    "end": "232060"
  },
  {
    "start": "229000",
    "end": "229000"
  },
  {
    "text": "need Kimble the purpose of this project",
    "start": "232060",
    "end": "235870"
  },
  {
    "text": "is bridging the gap between virtual",
    "start": "235870",
    "end": "239590"
  },
  {
    "text": "machines and container as beautiful as",
    "start": "239590",
    "end": "245800"
  },
  {
    "text": "many being best work rod on there",
    "start": "245800",
    "end": "248820"
  },
  {
    "text": "OpenStack private cloud for supporting",
    "start": "248820",
    "end": "252250"
  },
  {
    "text": "over hundred services we have studied",
    "start": "252250",
    "end": "256420"
  },
  {
    "text": "migrating to kubernetes but it is very",
    "start": "256420",
    "end": "259930"
  },
  {
    "text": "hard to migrate our services to new",
    "start": "259930",
    "end": "263140"
  },
  {
    "text": "platform at the",
    "start": "263140",
    "end": "264590"
  },
  {
    "text": "time we required solution that helps",
    "start": "264590",
    "end": "269290"
  },
  {
    "text": "migration and coexistence of multiple",
    "start": "269290",
    "end": "272870"
  },
  {
    "text": "platform so we approached building multi",
    "start": "272870",
    "end": "278330"
  },
  {
    "text": "crossroad bouncer it's support both of",
    "start": "278330",
    "end": "282260"
  },
  {
    "text": "VM and container crowd and making",
    "start": "282260",
    "end": "287870"
  },
  {
    "text": "migration from V empty container easy",
    "start": "287870",
    "end": "290990"
  },
  {
    "text": "and optimizing operation cost by",
    "start": "290990",
    "end": "294440"
  },
  {
    "text": "providing Raj single advancing tear",
    "start": "294440",
    "end": "299450"
  },
  {
    "text": "across crowd in addition we expected for",
    "start": "299450",
    "end": "306770"
  },
  {
    "start": "303000",
    "end": "303000"
  },
  {
    "text": "modernizing our traditional application",
    "start": "306770",
    "end": "309620"
  },
  {
    "text": "delivery application delivery at scale",
    "start": "309620",
    "end": "313430"
  },
  {
    "text": "is key to our business we needed faster",
    "start": "313430",
    "end": "317870"
  },
  {
    "text": "service discovery and current deployment",
    "start": "317870",
    "end": "320270"
  },
  {
    "text": "capability that provides instant robic",
    "start": "320270",
    "end": "323690"
  },
  {
    "text": "and performance measurement gimble",
    "start": "323690",
    "end": "328070"
  },
  {
    "text": "enables our developers to address these",
    "start": "328070",
    "end": "331039"
  },
  {
    "text": "challenges which at the macro level",
    "start": "331039",
    "end": "333880"
  },
  {
    "text": "helps them increase their productivity",
    "start": "333880",
    "end": "336639"
  },
  {
    "text": "and optimize system performance the",
    "start": "336639",
    "end": "344750"
  },
  {
    "start": "343000",
    "end": "343000"
  },
  {
    "text": "second question is why we cooperate with",
    "start": "344750",
    "end": "347539"
  },
  {
    "text": "help you to achieve these challenges we",
    "start": "347539",
    "end": "352070"
  },
  {
    "text": "asked heftier for help they're deeply",
    "start": "352070",
    "end": "356690"
  },
  {
    "text": "expertise around Canaries and crowd",
    "start": "356690",
    "end": "360740"
  },
  {
    "text": "native technologies also they have tight",
    "start": "360740",
    "end": "364910"
  },
  {
    "text": "connection to open source community by",
    "start": "364910",
    "end": "369320"
  },
  {
    "text": "cooperating with hefty o we could reach",
    "start": "369320",
    "end": "372349"
  },
  {
    "text": "out to hire other solution proceeding",
    "start": "372349",
    "end": "376849"
  },
  {
    "text": "with the project in open source world",
    "start": "376849",
    "end": "379930"
  },
  {
    "text": "enabled us to provide the environment",
    "start": "379930",
    "end": "383030"
  },
  {
    "text": "where we could create more sophisticated",
    "start": "383030",
    "end": "386060"
  },
  {
    "text": "solution with people who had the same",
    "start": "386060",
    "end": "389510"
  },
  {
    "text": "challenges",
    "start": "389510",
    "end": "391840"
  },
  {
    "text": "I would direct to take this opportunity",
    "start": "394169",
    "end": "397680"
  },
  {
    "text": "to express our appreciation to the help",
    "start": "397680",
    "end": "401279"
  },
  {
    "text": "to project members thank you very much",
    "start": "401279",
    "end": "403199"
  },
  {
    "text": "it there ok let's move on to the gimbal",
    "start": "403199",
    "end": "410789"
  },
  {
    "text": "technical part this ride showed that",
    "start": "410789",
    "end": "416990"
  },
  {
    "start": "414000",
    "end": "414000"
  },
  {
    "text": "gimbal architecture overview gimbal",
    "start": "416990",
    "end": "420990"
  },
  {
    "text": "consists of couple of components and",
    "start": "420990",
    "end": "424129"
  },
  {
    "text": "they work on single kubernetes cluster",
    "start": "424129",
    "end": "428599"
  },
  {
    "text": "this cluster works as rod balancing tier",
    "start": "428599",
    "end": "432379"
  },
  {
    "text": "from here ingress traffic is routed to",
    "start": "432379",
    "end": "436520"
  },
  {
    "text": "background upstream crusted in gimbal",
    "start": "436520",
    "end": "441569"
  },
  {
    "text": "there are three main functions routing",
    "start": "441569",
    "end": "445979"
  },
  {
    "text": "and party service discovery and",
    "start": "445979",
    "end": "449180"
  },
  {
    "text": "monitoring the bureau pods can control",
    "start": "449180",
    "end": "453539"
  },
  {
    "text": "routing policy by themselves using",
    "start": "453539",
    "end": "456539"
  },
  {
    "text": "publicity l within the scope of their",
    "start": "456539",
    "end": "460710"
  },
  {
    "text": "granted authority service discovery",
    "start": "460710",
    "end": "465750"
  },
  {
    "text": "function shows developers a bearable",
    "start": "465750",
    "end": "469139"
  },
  {
    "text": "service resources to configure",
    "start": "469139",
    "end": "471949"
  },
  {
    "text": "appropriate routing rules it follows the",
    "start": "471949",
    "end": "477300"
  },
  {
    "text": "change of upstream instance and pot and",
    "start": "477300",
    "end": "480139"
  },
  {
    "text": "apprised changes to routing person",
    "start": "480139",
    "end": "484669"
  },
  {
    "text": "gimbal export metrics to pro mirrors",
    "start": "484669",
    "end": "489169"
  },
  {
    "text": "developers are able to see their request",
    "start": "489169",
    "end": "492689"
  },
  {
    "text": "activity and operators are able to see",
    "start": "492689",
    "end": "496050"
  },
  {
    "text": "cross the activity let's see each",
    "start": "496050",
    "end": "500580"
  },
  {
    "text": "feature details first service discovery",
    "start": "500580",
    "end": "507710"
  },
  {
    "text": "gimbal discovered services and endpoints",
    "start": "507710",
    "end": "511770"
  },
  {
    "text": "from upstream crustal discovered",
    "start": "511770",
    "end": "515010"
  },
  {
    "text": "services from upstream crusted stored in",
    "start": "515010",
    "end": "518789"
  },
  {
    "text": "gimbal crustal the bill pods can find",
    "start": "518789",
    "end": "522479"
  },
  {
    "text": "those services in their name stays",
    "start": "522479",
    "end": "524940"
  },
  {
    "text": "namespace on gimbal crust",
    "start": "524940",
    "end": "528980"
  },
  {
    "text": "discovery agent deployed to gimble",
    "start": "528980",
    "end": "532470"
  },
  {
    "text": "Craster for each upstream Craster",
    "start": "532470",
    "end": "535880"
  },
  {
    "text": "country kubernetes and OpenStack",
    "start": "535880",
    "end": "539190"
  },
  {
    "text": "Discoverer is a bearable regarding",
    "start": "539190",
    "end": "543660"
  },
  {
    "text": "kubernetes Discoverer it watch it",
    "start": "543660",
    "end": "546840"
  },
  {
    "text": "upstream Craster event and synchronize",
    "start": "546840",
    "end": "550230"
  },
  {
    "text": "services and end point to gimbal Craster",
    "start": "550230",
    "end": "555140"
  },
  {
    "text": "regarding OpenStack Discoverer it pods",
    "start": "555140",
    "end": "559170"
  },
  {
    "text": "OpenStack Neutron API and imports Airbus",
    "start": "559170",
    "end": "563100"
  },
  {
    "text": "data OpenStack Discoverer to reads",
    "start": "563100",
    "end": "566940"
  },
  {
    "text": "OpenStack project as kubernetes",
    "start": "566940",
    "end": "569430"
  },
  {
    "text": "namespace this thread shows wandering",
    "start": "569430",
    "end": "578190"
  },
  {
    "start": "574000",
    "end": "574000"
  },
  {
    "text": "output of discovered services discover",
    "start": "578190",
    "end": "583890"
  },
  {
    "text": "us towards upstream services has local",
    "start": "583890",
    "end": "587220"
  },
  {
    "text": "service and endpoints services are",
    "start": "587220",
    "end": "591300"
  },
  {
    "text": "created as headrest service so there's",
    "start": "591300",
    "end": "594420"
  },
  {
    "text": "no crust",
    "start": "594420",
    "end": "595170"
  },
  {
    "text": "IP it has upstream crossed our name at",
    "start": "595170",
    "end": "598890"
  },
  {
    "text": "the beginning of service name once",
    "start": "598890",
    "end": "603210"
  },
  {
    "text": "synchronized services show up in that",
    "start": "603210",
    "end": "606570"
  },
  {
    "text": "team namespace with cross domain related",
    "start": "606570",
    "end": "614660"
  },
  {
    "text": "services imported from to the native",
    "start": "614660",
    "end": "617790"
  },
  {
    "text": "upstream Craster Bimbo's towards",
    "start": "617790",
    "end": "621360"
  },
  {
    "text": "upstream pod IPS as endpoints read",
    "start": "621360",
    "end": "628860"
  },
  {
    "text": "record our services from OpenStack",
    "start": "628860",
    "end": "631980"
  },
  {
    "text": "upstream crustal load balancer UUID from",
    "start": "631980",
    "end": "636960"
  },
  {
    "text": "OpenStack as used for service name",
    "start": "636960",
    "end": "640280"
  },
  {
    "text": "endpoint IPS our VMs IP addresses second",
    "start": "640280",
    "end": "649160"
  },
  {
    "start": "648000",
    "end": "648000"
  },
  {
    "text": "routing and policy",
    "start": "649160",
    "end": "651410"
  },
  {
    "text": "this part is the most important and",
    "start": "651410",
    "end": "654620"
  },
  {
    "text": "supported by heftier contour contour is",
    "start": "654620",
    "end": "658950"
  },
  {
    "text": "ingress controller powered by",
    "start": "658950",
    "end": "661320"
  },
  {
    "text": "homeboy unlike standard ingress control",
    "start": "661320",
    "end": "665670"
  },
  {
    "text": "it has advanced capability such as wet",
    "start": "665670",
    "end": "669810"
  },
  {
    "text": "shifting Road balancing method and cross",
    "start": "669810",
    "end": "673500"
  },
  {
    "text": "cross tobacco end to achieve this",
    "start": "673500",
    "end": "677160"
  },
  {
    "text": "capability contour introduces new",
    "start": "677160",
    "end": "681000"
  },
  {
    "text": "ingress API using custom resource",
    "start": "681000",
    "end": "684090"
  },
  {
    "text": "definition contour is closely related",
    "start": "684090",
    "end": "688250"
  },
  {
    "text": "gimble but I don't mention so much about",
    "start": "688250",
    "end": "692250"
  },
  {
    "text": "contour and decision sorry about that",
    "start": "692250",
    "end": "696230"
  },
  {
    "start": "697000",
    "end": "697000"
  },
  {
    "text": "this is an example ingress route",
    "start": "698180",
    "end": "701040"
  },
  {
    "text": "configuration developer creates ingress",
    "start": "701040",
    "end": "705300"
  },
  {
    "text": "route ingress router configuration in",
    "start": "705300",
    "end": "708270"
  },
  {
    "text": "accordance with their discovered",
    "start": "708270",
    "end": "710580"
  },
  {
    "text": "services in this case it has two",
    "start": "710580",
    "end": "715020"
  },
  {
    "text": "services with Wade Barrett and",
    "start": "715020",
    "end": "718050"
  },
  {
    "text": "destination port ingress traffic will be",
    "start": "718050",
    "end": "722190"
  },
  {
    "text": "flooded to pod or BM directory it",
    "start": "722190",
    "end": "726600"
  },
  {
    "text": "doesn't go through the service one",
    "start": "726600",
    "end": "729230"
  },
  {
    "text": "Albert Road bouncer because of this",
    "start": "729230",
    "end": "733770"
  },
  {
    "text": "direct flooding we aimed at simplifying",
    "start": "733770",
    "end": "737300"
  },
  {
    "text": "network and reducing network hops to",
    "start": "737300",
    "end": "741390"
  },
  {
    "text": "maximize performance Russ tree",
    "start": "741390",
    "end": "747590"
  },
  {
    "start": "746000",
    "end": "746000"
  },
  {
    "text": "monitoring app and observability gimbal",
    "start": "747590",
    "end": "751770"
  },
  {
    "text": "provides paramitas",
    "start": "751770",
    "end": "753150"
  },
  {
    "text": "monitoring and graph on a dashboard",
    "start": "753150",
    "end": "756170"
  },
  {
    "text": "country there are three types of",
    "start": "756170",
    "end": "758850"
  },
  {
    "text": "dashboard the first one is my dashboard",
    "start": "758850",
    "end": "762930"
  },
  {
    "text": "it showed our PS CPS and radiancy for",
    "start": "762930",
    "end": "768680"
  },
  {
    "text": "each upstream services developers can",
    "start": "768680",
    "end": "774750"
  },
  {
    "text": "control branching wait in accordance",
    "start": "774750",
    "end": "778080"
  },
  {
    "text": "with upstream service activities",
    "start": "778080",
    "end": "782450"
  },
  {
    "text": "the others are gimbal dashboard and",
    "start": "784220",
    "end": "788060"
  },
  {
    "text": "contour dashboard these are mainly for",
    "start": "788060",
    "end": "792270"
  },
  {
    "text": "operators",
    "start": "792270",
    "end": "793860"
  },
  {
    "text": "this shows the number of upstream",
    "start": "793860",
    "end": "796620"
  },
  {
    "text": "crosswords lubrications Dara's and",
    "start": "796620",
    "end": "799500"
  },
  {
    "text": "ingress routes Kimbo is ready to use now",
    "start": "799500",
    "end": "809600"
  },
  {
    "start": "804000",
    "end": "804000"
  },
  {
    "text": "but as I mentioned it still has a",
    "start": "809600",
    "end": "813300"
  },
  {
    "text": "limitation regarding a network for Cuba",
    "start": "813300",
    "end": "816990"
  },
  {
    "text": "needs upstream Craster pods should be",
    "start": "816990",
    "end": "819660"
  },
  {
    "text": "reachable from outside the crustal",
    "start": "819660",
    "end": "823110"
  },
  {
    "text": "directory it means we need to configure",
    "start": "823110",
    "end": "827040"
  },
  {
    "text": "a host network true on pod configuration",
    "start": "827040",
    "end": "830730"
  },
  {
    "text": "or at abates pod network to outside of",
    "start": "830730",
    "end": "835020"
  },
  {
    "text": "the cluster in our case we use caracal",
    "start": "835020",
    "end": "839250"
  },
  {
    "text": "to advertise pod network to outside this",
    "start": "839250",
    "end": "844050"
  },
  {
    "text": "limitation will be the next step to be",
    "start": "844050",
    "end": "846780"
  },
  {
    "text": "solved ok let's move on to gimbal case",
    "start": "846780",
    "end": "854250"
  },
  {
    "text": "study at Yahoo Japan",
    "start": "854250",
    "end": "857390"
  },
  {
    "start": "859000",
    "end": "859000"
  },
  {
    "text": "we built this crystal structure in our",
    "start": "859940",
    "end": "863760"
  },
  {
    "text": "production environment we will put this",
    "start": "863760",
    "end": "867570"
  },
  {
    "text": "structure to each data center hardware",
    "start": "867570",
    "end": "871110"
  },
  {
    "text": "specs are no wasting for insurance",
    "start": "871110",
    "end": "872910"
  },
  {
    "text": "showing the table this traffic from",
    "start": "872910",
    "end": "876990"
  },
  {
    "text": "internet and other data centers goes",
    "start": "876990",
    "end": "879810"
  },
  {
    "text": "through hardware for LP and into gimbal",
    "start": "879810",
    "end": "884310"
  },
  {
    "text": "crystal and why we use is DSR direct",
    "start": "884310",
    "end": "888420"
  },
  {
    "text": "Samaritan so Botanica traffic doesn't go",
    "start": "888420",
    "end": "892290"
  },
  {
    "text": "through fov and has better performance",
    "start": "892290",
    "end": "895140"
  },
  {
    "text": "in die mode by increasing the number of",
    "start": "895140",
    "end": "900210"
  },
  {
    "text": "my pots we can scale the performance",
    "start": "900210",
    "end": "903180"
  },
  {
    "text": "linearly within the performance range of",
    "start": "903180",
    "end": "905820"
  },
  {
    "text": "FLV Kimbo is running on kubernetes there",
    "start": "905820",
    "end": "911130"
  },
  {
    "text": "are three master and ATC dinos and Tim",
    "start": "911130",
    "end": "914610"
  },
  {
    "text": "workers nodes each node has Dinka",
    "start": "914610",
    "end": "917850"
  },
  {
    "text": "interface and one worker node has one my",
    "start": "917850",
    "end": "922200"
  },
  {
    "text": "pot and my pot uses hosta network to",
    "start": "922200",
    "end": "925560"
  },
  {
    "text": "maximize up",
    "start": "925560",
    "end": "926610"
  },
  {
    "text": "Romans this trial shows how we use",
    "start": "926610",
    "end": "932970"
  },
  {
    "text": "Kimball at Yahoo Japan applications",
    "start": "932970",
    "end": "936779"
  },
  {
    "text": "developed and operated for each service",
    "start": "936779",
    "end": "939920"
  },
  {
    "text": "gilbert must have namespace isolation",
    "start": "939920",
    "end": "942810"
  },
  {
    "text": "function each service Audrey manages",
    "start": "942810",
    "end": "946260"
  },
  {
    "text": "virtual machines and the ports on the",
    "start": "946260",
    "end": "949019"
  },
  {
    "text": "end of point side and has pump has",
    "start": "949019",
    "end": "952370"
  },
  {
    "text": "permission to edit coffee on gimbal",
    "start": "952370",
    "end": "955019"
  },
  {
    "text": "namespace for service here for example",
    "start": "955019",
    "end": "959339"
  },
  {
    "text": "News Service Adam II has the airport",
    "start": "959339",
    "end": "963410"
  },
  {
    "text": "brilliance and news namespace in gimble",
    "start": "963529",
    "end": "967820"
  },
  {
    "text": "also there is gimbal cross soldering the",
    "start": "967820",
    "end": "972029"
  },
  {
    "text": "quinoa crusted we manages the entire",
    "start": "972029",
    "end": "973829"
  },
  {
    "text": "clusters and has permission to other in",
    "start": "973829",
    "end": "976860"
  },
  {
    "text": "namespace yes at Yahoo Japan Kimber is",
    "start": "976860",
    "end": "984870"
  },
  {
    "start": "982000",
    "end": "982000"
  },
  {
    "text": "used as false when beginning of use",
    "start": "984870",
    "end": "988790"
  },
  {
    "text": "firstly service auto means sends the",
    "start": "988790",
    "end": "991860"
  },
  {
    "text": "request",
    "start": "991860",
    "end": "992610"
  },
  {
    "text": "involving be a ticketing system we use",
    "start": "992610",
    "end": "995820"
  },
  {
    "text": "JIRA this request contains namespace and",
    "start": "995820",
    "end": "999570"
  },
  {
    "text": "fqdn information Lombardi makes a cuba",
    "start": "999570",
    "end": "1004610"
  },
  {
    "text": "config file with authority for service",
    "start": "1004610",
    "end": "1007010"
  },
  {
    "text": "namespace that was specified in the",
    "start": "1007010",
    "end": "1009740"
  },
  {
    "text": "first step the gimbal Ottoman creates",
    "start": "1009740",
    "end": "1014140"
  },
  {
    "text": "fqdn in the a domain name space we use",
    "start": "1014140",
    "end": "1017930"
  },
  {
    "text": "default namespace as admin namespace I",
    "start": "1017930",
    "end": "1020720"
  },
  {
    "text": "will explain this step in detail later",
    "start": "1020720",
    "end": "1025270"
  },
  {
    "text": "next gimbal Tommy sensor since the",
    "start": "1025270",
    "end": "1028548"
  },
  {
    "text": "kuvikavi to service as I mean Sammy Sado",
    "start": "1028549",
    "end": "1031730"
  },
  {
    "text": "mean starts to edit Kimber ingress route",
    "start": "1031730",
    "end": "1033949"
  },
  {
    "text": "with the equivocal and then service",
    "start": "1033949",
    "end": "1038120"
  },
  {
    "text": "admittance their service DNS a record",
    "start": "1038120",
    "end": "1041120"
  },
  {
    "text": "into gimbal Craster's IP then service",
    "start": "1041120",
    "end": "1045980"
  },
  {
    "text": "will be able to use gimbal",
    "start": "1045980",
    "end": "1049510"
  },
  {
    "text": "next we're modifying",
    "start": "1049510",
    "end": "1051919"
  },
  {
    "text": "modifying ingress route Kimber Ottoman",
    "start": "1051919",
    "end": "1054980"
  },
  {
    "text": "doesn't need to do any work",
    "start": "1054980",
    "end": "1057250"
  },
  {
    "text": "sorry sodomy modifiers game Barca stock",
    "start": "1057250",
    "end": "1059770"
  },
  {
    "text": "config any time setting is immediately",
    "start": "1059770",
    "end": "1063190"
  },
  {
    "text": "applied and there is no connection loss",
    "start": "1063190",
    "end": "1066660"
  },
  {
    "text": "when service oddly modifies their back",
    "start": "1066660",
    "end": "1069910"
  },
  {
    "text": "end keyboardist begin bar discovers this",
    "start": "1069910",
    "end": "1073180"
  },
  {
    "text": "automatically and apprise the changed to",
    "start": "1073180",
    "end": "1076060"
  },
  {
    "text": "ingress route other is out when in the",
    "start": "1076060",
    "end": "1079510"
  },
  {
    "text": "pointer is update traffic or suppose to",
    "start": "1079510",
    "end": "1082210"
  },
  {
    "text": "newly added in the point automatically",
    "start": "1082210",
    "end": "1086309"
  },
  {
    "start": "1087000",
    "end": "1087000"
  },
  {
    "text": "this is an example config",
    "start": "1087570",
    "end": "1090130"
  },
  {
    "text": "there are two namespaces other in",
    "start": "1090130",
    "end": "1092920"
  },
  {
    "text": "namespace service namespace other in",
    "start": "1092920",
    "end": "1098380"
  },
  {
    "text": "namespace can be edited by gimbal",
    "start": "1098380",
    "end": "1100480"
  },
  {
    "text": "crostini only service other wing can",
    "start": "1100480",
    "end": "1103720"
  },
  {
    "text": "edit coffee in their own service name",
    "start": "1103720",
    "end": "1106060"
  },
  {
    "text": "space we use contact delegation function",
    "start": "1106060",
    "end": "1109960"
  },
  {
    "text": "to prevent disorder and duplication of",
    "start": "1109960",
    "end": "1112870"
  },
  {
    "text": "fqdn fqdn can only be defined in other",
    "start": "1112870",
    "end": "1117370"
  },
  {
    "text": "in namespace it means only invoke",
    "start": "1117370",
    "end": "1121210"
  },
  {
    "text": "crostata mean can define fqdn and",
    "start": "1121210",
    "end": "1124110"
  },
  {
    "text": "delegate coffee to service names this",
    "start": "1124110",
    "end": "1128040"
  },
  {
    "text": "envelope was a delegation function to",
    "start": "1128040",
    "end": "1130690"
  },
  {
    "text": "work the name of delegation in the admin",
    "start": "1130690",
    "end": "1133900"
  },
  {
    "text": "namespace here must be the same as the",
    "start": "1133900",
    "end": "1139240"
  },
  {
    "text": "name of English field here and then",
    "start": "1139240",
    "end": "1143830"
  },
  {
    "text": "Service administers specifies the endow",
    "start": "1143830",
    "end": "1146590"
  },
  {
    "text": "point and it spot a ratio and etc in the",
    "start": "1146590",
    "end": "1152380"
  },
  {
    "text": "namespace we were born to the",
    "start": "1152380",
    "end": "1157240"
  },
  {
    "text": "performance system now we conducted",
    "start": "1157240",
    "end": "1161080"
  },
  {
    "start": "1159000",
    "end": "1159000"
  },
  {
    "text": "performance testing in this environment",
    "start": "1161080",
    "end": "1163530"
  },
  {
    "text": "there were 10 virtual machines in the",
    "start": "1163530",
    "end": "1166630"
  },
  {
    "text": "workload crustle we used hei hei as",
    "start": "1166630",
    "end": "1172000"
  },
  {
    "text": "growth generator this is fast HTTP draw",
    "start": "1172000",
    "end": "1175330"
  },
  {
    "text": "the generator software in the al",
    "start": "1175330",
    "end": "1178300"
  },
  {
    "text": "Kresta we used one my pot in one",
    "start": "1178300",
    "end": "1181180"
  },
  {
    "text": "physical machine this machine has total",
    "start": "1181180",
    "end": "1184870"
  },
  {
    "text": "32 corn 60 phosphates",
    "start": "1184870",
    "end": "1187360"
  },
  {
    "text": "my bottom was one point six point zero",
    "start": "1187360",
    "end": "1190390"
  },
  {
    "text": "in the background Rasta we have",
    "start": "1190390",
    "end": "1193180"
  },
  {
    "text": "temperature machines and used injects",
    "start": "1193180",
    "end": "1196410"
  },
  {
    "text": "injects has three data size of contents",
    "start": "1196410",
    "end": "1199570"
  },
  {
    "text": "one byte one kilobyte 22q bite 22q body",
    "start": "1199570",
    "end": "1204850"
  },
  {
    "text": "is average data size at yahoo japan we",
    "start": "1204850",
    "end": "1209020"
  },
  {
    "text": "connected these three clusters with 10g",
    "start": "1209020",
    "end": "1212170"
  },
  {
    "text": "interface then carried out performance",
    "start": "1212170",
    "end": "1214990"
  },
  {
    "text": "testing this is the test result of p99",
    "start": "1214990",
    "end": "1220840"
  },
  {
    "start": "1218000",
    "end": "1218000"
  },
  {
    "text": "latency at each RPS we emit radiation",
    "start": "1220840",
    "end": "1225520"
  },
  {
    "text": "risks and satima seconds tanga 10g",
    "start": "1225520",
    "end": "1230650"
  },
  {
    "text": "bandwidth became saturated when the data",
    "start": "1230650",
    "end": "1233410"
  },
  {
    "text": "size was 20 Tokyo byte and RPS reached",
    "start": "1233410",
    "end": "1236680"
  },
  {
    "text": "over 50 key requests per seconds so it",
    "start": "1236680",
    "end": "1240670"
  },
  {
    "text": "was impossible to miss any more piece in",
    "start": "1240670",
    "end": "1243460"
  },
  {
    "text": "this environment we can't get DS value",
    "start": "1243460",
    "end": "1246760"
  },
  {
    "text": "yes in other data sizes",
    "start": "1246760",
    "end": "1251380"
  },
  {
    "text": "Sarita she was getting worse in stage",
    "start": "1251380",
    "end": "1253690"
  },
  {
    "text": "but clear thirty Mexicans as a target",
    "start": "1253690",
    "end": "1256930"
  },
  {
    "text": "body there was not much difference in",
    "start": "1256930",
    "end": "1261130"
  },
  {
    "text": "relationship between one bite and one",
    "start": "1261130",
    "end": "1263440"
  },
  {
    "text": "key white this is a result of Shiva",
    "start": "1263440",
    "end": "1269560"
  },
  {
    "start": "1266000",
    "end": "1266000"
  },
  {
    "text": "usage in my port at each RPS the trend",
    "start": "1269560",
    "end": "1273910"
  },
  {
    "text": "was the same was that with latency at 22",
    "start": "1273910",
    "end": "1277390"
  },
  {
    "text": "kilo byte data size 50 key requests per",
    "start": "1277390",
    "end": "1280330"
  },
  {
    "text": "second was the remand the ship usage was",
    "start": "1280330",
    "end": "1285490"
  },
  {
    "text": "rising in proportion to RPS but 300 euro",
    "start": "1285490",
    "end": "1290020"
  },
  {
    "text": "requests per second the shipping usage",
    "start": "1290020",
    "end": "1292270"
  },
  {
    "text": "was about 80 percent so they appeared to",
    "start": "1292270",
    "end": "1296680"
  },
  {
    "text": "be more capacity but we couldn't test",
    "start": "1296680",
    "end": "1299920"
  },
  {
    "text": "further B's because of back-end what",
    "start": "1299920",
    "end": "1302590"
  },
  {
    "text": "limits",
    "start": "1302590",
    "end": "1304980"
  },
  {
    "start": "1305000",
    "end": "1305000"
  },
  {
    "text": "this is a comparison of latency when",
    "start": "1305700",
    "end": "1309070"
  },
  {
    "text": "increasing the number in English and in",
    "start": "1309070",
    "end": "1311950"
  },
  {
    "text": "the points the number endpoints could",
    "start": "1311950",
    "end": "1315340"
  },
  {
    "text": "not be set to 100 or more duties our",
    "start": "1315340",
    "end": "1318640"
  },
  {
    "text": "imitation mutation always a testing",
    "start": "1318640",
    "end": "1320920"
  },
  {
    "text": "environment",
    "start": "1320920",
    "end": "1322420"
  },
  {
    "text": "even if the number of ingress route and",
    "start": "1322420",
    "end": "1325010"
  },
  {
    "text": "end points increased there was no effect",
    "start": "1325010",
    "end": "1327800"
  },
  {
    "text": "on latency these curves are fat so the",
    "start": "1327800",
    "end": "1334820"
  },
  {
    "start": "1334000",
    "end": "1334000"
  },
  {
    "text": "conclusion of a performance testing our",
    "start": "1334820",
    "end": "1338270"
  },
  {
    "text": "name we put achieves 300 cure requests",
    "start": "1338270",
    "end": "1341450"
  },
  {
    "text": "per second at one key white data size",
    "start": "1341450",
    "end": "1344560"
  },
  {
    "text": "they appeared to be further CPU capacity",
    "start": "1344560",
    "end": "1348170"
  },
  {
    "text": "so it could potentially achieve 350 key",
    "start": "1348170",
    "end": "1352400"
  },
  {
    "text": "requests per second",
    "start": "1352400",
    "end": "1353540"
  },
  {
    "text": "maybe it scales linearly in terms of",
    "start": "1353540",
    "end": "1357410"
  },
  {
    "text": "structure 10 my pots will achieve 3",
    "start": "1357410",
    "end": "1360620"
  },
  {
    "text": "million requests per second if it is not",
    "start": "1360620",
    "end": "1363740"
  },
  {
    "text": "enough we can increase the number of my",
    "start": "1363740",
    "end": "1366410"
  },
  {
    "text": "pot history the knowledge no degradation",
    "start": "1366410",
    "end": "1370940"
  },
  {
    "text": "of latency was observed when increasing",
    "start": "1370940",
    "end": "1374720"
  },
  {
    "text": "the number of increases or endpoints",
    "start": "1374720",
    "end": "1379090"
  },
  {
    "text": "then what we will be doing in the future",
    "start": "1379930",
    "end": "1383300"
  },
  {
    "start": "1380000",
    "end": "1380000"
  },
  {
    "text": "includes a fast expansion of usage in",
    "start": "1383300",
    "end": "1388190"
  },
  {
    "text": "Yahoo Japan production environment",
    "start": "1388190",
    "end": "1390130"
  },
  {
    "text": "currently is released in one",
    "start": "1390130",
    "end": "1393590"
  },
  {
    "text": "environment at Yahoo Japan developing",
    "start": "1393590",
    "end": "1398240"
  },
  {
    "text": "fast open stock discover we currently",
    "start": "1398240",
    "end": "1401150"
  },
  {
    "text": "have 4,000 open stock projects and",
    "start": "1401150",
    "end": "1404000"
  },
  {
    "text": "thousand of open stock runners-up VIPs",
    "start": "1404000",
    "end": "1407410"
  },
  {
    "text": "it takes 30 minutes to discover our VIPs",
    "start": "1407410",
    "end": "1411490"
  },
  {
    "text": "however it is not necessary to discover",
    "start": "1411490",
    "end": "1414980"
  },
  {
    "text": "all these VIPs we are migrating our if",
    "start": "1414980",
    "end": "1419570"
  },
  {
    "text": "Ross infrastructure from open stock to",
    "start": "1419570",
    "end": "1422180"
  },
  {
    "text": "kubernetes",
    "start": "1422180",
    "end": "1422870"
  },
  {
    "text": "so the number of OpenStack VIPs that",
    "start": "1422870",
    "end": "1426830"
  },
  {
    "text": "Kimber actually has to deal with will be",
    "start": "1426830",
    "end": "1429830"
  },
  {
    "text": "small we would like to implement a",
    "start": "1429830",
    "end": "1432860"
  },
  {
    "text": "function that judge can specify which",
    "start": "1432860",
    "end": "1435860"
  },
  {
    "text": "project to discover this will speed up",
    "start": "1435860",
    "end": "1440030"
  },
  {
    "text": "the discovering currently there are",
    "start": "1440030",
    "end": "1444500"
  },
  {
    "text": "harder airfoil with in a post Ramon",
    "start": "1444500",
    "end": "1446990"
  },
  {
    "text": "gimbal we would like to change this to",
    "start": "1446990",
    "end": "1449540"
  },
  {
    "text": "software or l4v this will our own gimbal",
    "start": "1449540",
    "end": "1453920"
  },
  {
    "text": "to scale father",
    "start": "1453920",
    "end": "1456730"
  },
  {
    "text": "developing GUI currently the ingress",
    "start": "1458260",
    "end": "1462050"
  },
  {
    "text": "route setting is made via cookie cutter",
    "start": "1462050",
    "end": "1464510"
  },
  {
    "text": "command but not all employees are used",
    "start": "1464510",
    "end": "1468290"
  },
  {
    "text": "to click on Cuba cutter operation at",
    "start": "1468290",
    "end": "1470810"
  },
  {
    "text": "yahoo japan so we would like to have a",
    "start": "1470810",
    "end": "1474080"
  },
  {
    "text": "more user-friendly configure system by",
    "start": "1474080",
    "end": "1476510"
  },
  {
    "text": "dropping a GUI that can be set up y'see",
    "start": "1476510",
    "end": "1481810"
  },
  {
    "text": "to summarize this session we introduced",
    "start": "1485770",
    "end": "1490100"
  },
  {
    "text": "Gimbel overview and how Japan is Gimbel",
    "start": "1490100",
    "end": "1494090"
  },
  {
    "text": "and a performance test gimbal is radius",
    "start": "1494090",
    "end": "1498560"
  },
  {
    "text": "7 ingress controller for most cloud",
    "start": "1498560",
    "end": "1501320"
  },
  {
    "text": "environment and bridge the gap between",
    "start": "1501320",
    "end": "1504220"
  },
  {
    "text": "VM and container world it also provide",
    "start": "1504220",
    "end": "1509960"
  },
  {
    "text": "modern application deploy features to",
    "start": "1509960",
    "end": "1512780"
  },
  {
    "text": "ingress tear this envoy based rod",
    "start": "1512780",
    "end": "1517310"
  },
  {
    "text": "balancer is well tested at yahoo japan",
    "start": "1517310",
    "end": "1520250"
  },
  {
    "text": "production environment they will expand",
    "start": "1520250",
    "end": "1524690"
  },
  {
    "text": "the use of gimbal in their production",
    "start": "1524690",
    "end": "1527330"
  },
  {
    "text": "environment and reacts to request a is",
    "start": "1527330",
    "end": "1530900"
  },
  {
    "text": "welcome thank you very much",
    "start": "1530900",
    "end": "1537640"
  },
  {
    "text": "[Applause]",
    "start": "1537910",
    "end": "1544030"
  },
  {
    "text": "if you have any questions we are",
    "start": "1544030",
    "end": "1546590"
  },
  {
    "text": "available at happy of booze from 12:15",
    "start": "1546590",
    "end": "1550100"
  },
  {
    "text": "into 1345 thank you",
    "start": "1550100",
    "end": "1555820"
  }
]