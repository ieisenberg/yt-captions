[
  {
    "text": "all right hi everyone um my name is itaisha curry I lead the open source team at Aqua",
    "start": "420",
    "end": "7379"
  },
  {
    "text": "security I was supposed to give this talk together with my colleague Jose but he",
    "start": "7379",
    "end": "13860"
  },
  {
    "text": "got stuck in the storm so um Jose was the inevitable part of this",
    "start": "13860",
    "end": "20100"
  },
  {
    "text": "presentation but unfortunately he couldn't make it um so we're going to talk today about",
    "start": "20100",
    "end": "27599"
  },
  {
    "text": "something you probably haven't heard yet in this conference which is supply chain",
    "start": "27599",
    "end": "32640"
  },
  {
    "text": "security yeah but I hope it will be a refreshing uh",
    "start": "32640",
    "end": "39420"
  },
  {
    "text": "one for you because we want to see if we can take um Concepts or principles from the runtime",
    "start": "39420",
    "end": "47520"
  },
  {
    "text": "security practice which we have some experience in and apply those into the",
    "start": "47520",
    "end": "52800"
  },
  {
    "text": "build time specifically when I say random security experience I'm referring to our open",
    "start": "52800",
    "end": "61500"
  },
  {
    "text": "source project that is called Tracy I know if you heard about it so I need to just set the level",
    "start": "61500",
    "end": "69119"
  },
  {
    "text": "um Tracy uses evpf to tap into your system",
    "start": "69119",
    "end": "74400"
  },
  {
    "text": "and give you access to hundreds of events that unveil how your system",
    "start": "74400",
    "end": "80280"
  },
  {
    "text": "actually behaves moreover it can help you detect suspicious",
    "start": "80280",
    "end": "87080"
  },
  {
    "text": "behavioral patterns in those events and either using a library of building",
    "start": "87080",
    "end": "94560"
  },
  {
    "text": "signatures that we ship with with Tracy or you can write your own",
    "start": "94560",
    "end": "100079"
  },
  {
    "text": "we call them behavioral signatures based on the event stream that we generate",
    "start": "100079",
    "end": "105420"
  },
  {
    "text": "that's Tracy it's open source go check it out on GitHub just to make sure when",
    "start": "105420",
    "end": "110579"
  },
  {
    "text": "I say Tracy you know what I mean all right so um I said we want to see if we can take",
    "start": "110579",
    "end": "116759"
  },
  {
    "text": "random security Concepts like Tracy and apply them in the real time to explain the motivation for that I",
    "start": "116759",
    "end": "123540"
  },
  {
    "text": "need to take you back a little bit just a couple of years ago",
    "start": "123540",
    "end": "128640"
  },
  {
    "text": "um different times in Cloud native times you know a lot have happened in two years very early days for the supply",
    "start": "128640",
    "end": "136440"
  },
  {
    "text": "chain security category before all the",
    "start": "136440",
    "end": "144860"
  },
  {
    "text": "s-bomb craze before the executive order before tools and standards that didn't exist so",
    "start": "144860",
    "end": "153000"
  },
  {
    "text": "early days um some meaningful attacks that happened and opened the our eyes and everyone",
    "start": "153000",
    "end": "161099"
  },
  {
    "text": "else to look into this stuff specifically for us it was the code Cove",
    "start": "161099",
    "end": "166500"
  },
  {
    "text": "a bridge I don't know if anyone here remembers that but basically he targeted",
    "start": "166500",
    "end": "172200"
  },
  {
    "text": "GitHub actions users by um so the attackers were able to compromise",
    "start": "172200",
    "end": "177959"
  },
  {
    "text": "a very popular GitHub action called Cove in code coverage scanning tool and",
    "start": "177959",
    "end": "184140"
  },
  {
    "text": "through the Upstream of that Upstream they were able to actually compromise you or your build so classic supply",
    "start": "184140",
    "end": "192120"
  },
  {
    "text": "chain attack and it made us and others things think what we can do",
    "start": "192120",
    "end": "197879"
  },
  {
    "text": "to to protect against that at that time we still had the Tracy open sourced for",
    "start": "197879",
    "end": "205200"
  },
  {
    "text": "a while Tracy was open source in 2019 so we thought why not why not just try and",
    "start": "205200",
    "end": "211440"
  },
  {
    "text": "use Tracy in the pipeline um I was actually a little bit skeptical",
    "start": "211440",
    "end": "217560"
  },
  {
    "text": "like can we run ebpf in a managed service like GitHub so apparently yes",
    "start": "217560",
    "end": "223920"
  },
  {
    "text": "they don't care at all and Tracy just ran we wrapped it in a GitHub action",
    "start": "223920",
    "end": "229440"
  },
  {
    "text": "that was the first incarnation of the Tracy action we just wrapped it in a GitHub action you add it to your",
    "start": "229440",
    "end": "235260"
  },
  {
    "text": "pipeline it starts running in the background um it look it is looking for any of the",
    "start": "235260",
    "end": "241739"
  },
  {
    "text": "suspicious behavioral patterns that are indicating and uh it worked it was a very",
    "start": "241739",
    "end": "249299"
  },
  {
    "text": "um nice first step but",
    "start": "249299",
    "end": "254400"
  },
  {
    "text": "first lesson that we learned is that the build time",
    "start": "254400",
    "end": "260220"
  },
  {
    "text": "is not the same as production specifically Tracy had back then a",
    "start": "260220",
    "end": "266520"
  },
  {
    "text": "limited set of signatures that we shipped it with and they were very",
    "start": "266520",
    "end": "271560"
  },
  {
    "text": "tailored to production so um for example one of the signatures looked",
    "start": "271560",
    "end": "280259"
  },
  {
    "text": "for let's take an example so enforcing immutable infrastructure this is",
    "start": "280259",
    "end": "286259"
  },
  {
    "text": "something that we wanted to do in production you know immutable infrastructure basically you need to pre-bake your",
    "start": "286259",
    "end": "292259"
  },
  {
    "text": "containers ship them to production you don't need to introduce any new software to production directly so that signature",
    "start": "292259",
    "end": "298139"
  },
  {
    "text": "looked for any new executables being introduced in production",
    "start": "298139",
    "end": "304440"
  },
  {
    "text": "a very good probably best practice to do in in the production but very bad thing",
    "start": "304440",
    "end": "310080"
  },
  {
    "text": "to do in build time because the build server pretty much has only one job which is to produce new executables so",
    "start": "310080",
    "end": "317520"
  },
  {
    "text": "didn't work out so we had to fine tune the list but I think the more important",
    "start": "317520",
    "end": "322740"
  },
  {
    "text": "lesson here is that we we could make assumptions in the",
    "start": "322740",
    "end": "330180"
  },
  {
    "text": "build time that we could not have make in the in the production so Tracy was",
    "start": "330180",
    "end": "335880"
  },
  {
    "text": "built with production in mind all of the signatures had to be very generic and Abstract we didn't want to",
    "start": "335880",
    "end": "343680"
  },
  {
    "text": "assume anything about what you are running in production what tools you're using what's your Tech stock",
    "start": "343680",
    "end": "350039"
  },
  {
    "text": "we don't care we just want to look from the below from the underneath and to see if something suspicient looking for us",
    "start": "350039",
    "end": "357300"
  },
  {
    "text": "but in the build we actually can assume some things like I know you're a go shop",
    "start": "357300",
    "end": "363000"
  },
  {
    "text": "you know which tools you're using you know your tool chain you're not going to switch to be a python shop every other",
    "start": "363000",
    "end": "369479"
  },
  {
    "text": "day right so we know how the pipeline is going to look more or less it's going to",
    "start": "369479",
    "end": "375780"
  },
  {
    "text": "be pretty much consistent so we can leverage that to write more specific",
    "start": "375780",
    "end": "381780"
  },
  {
    "text": "signatures things that we could not have afforded to do in production we can do here for",
    "start": "381780",
    "end": "387060"
  },
  {
    "text": "example um let's do something specific to a go build pipeline like",
    "start": "387060",
    "end": "394819"
  },
  {
    "text": "the go mod file should never change during the build right if you want to change it change it before make a full",
    "start": "394819",
    "end": "400860"
  },
  {
    "text": "request have someone review it but it should not change during the build so we can do specific things like that and we",
    "start": "400860",
    "end": "407460"
  },
  {
    "text": "started to do specific things like that like to write signatures that look for very specific",
    "start": "407460",
    "end": "413160"
  },
  {
    "text": "things but as you can imagine it's like a very it's long list of bad things that",
    "start": "413160",
    "end": "419280"
  },
  {
    "text": "can happen going to be very hard to maintain so then we thought why don't we do the",
    "start": "419280",
    "end": "425759"
  },
  {
    "text": "inverse instead of looking for the bad stuff let's just Define what is the good",
    "start": "425759",
    "end": "432600"
  },
  {
    "text": "normal behavior of your pipeline and just enforce it",
    "start": "432600",
    "end": "437699"
  },
  {
    "text": "so in other words we started to do profiling with Tracy this was the second incarnation of this",
    "start": "437699",
    "end": "445259"
  },
  {
    "text": "project and we introduced a profiling feature to Tracy you still introduced it the same",
    "start": "445259",
    "end": "450960"
  },
  {
    "text": "way to your pipeline it builds the profile automatically for you so we ditch the signatures we build the",
    "start": "450960",
    "end": "456660"
  },
  {
    "text": "profile of every executable that we encounter doing the the Run",
    "start": "456660",
    "end": "463500"
  },
  {
    "text": "and it's supposed to represent more or less the composition like not a composition but um",
    "start": "463500",
    "end": "470039"
  },
  {
    "text": "what your pipeline is made of how does it normally behaves like I sometimes",
    "start": "470039",
    "end": "475199"
  },
  {
    "text": "think about it like an s-bomb for the runtime or something like that maybe that's another talk but",
    "start": "475199",
    "end": "481020"
  },
  {
    "text": "um we generate the profile everything that was executed during the",
    "start": "481020",
    "end": "486599"
  },
  {
    "text": "the uh the build and then you review this you",
    "start": "486599",
    "end": "492180"
  },
  {
    "text": "accept it as the Baseline and then next time it runs again if we see something else if we see",
    "start": "492180",
    "end": "498960"
  },
  {
    "text": "something that we didn't expect to see we will let you know",
    "start": "498960",
    "end": "503840"
  },
  {
    "text": "um another lesson learned here is that building a profile is not that easy",
    "start": "504120",
    "end": "509599"
  },
  {
    "text": "especially when we consider executions and things like that because there's a",
    "start": "509599",
    "end": "515459"
  },
  {
    "text": "lot of very volatile information involved there that that",
    "start": "515459",
    "end": "520760"
  },
  {
    "text": "you know that's going to change like for example if there's a process ID some somewhere in the profile right",
    "start": "520760",
    "end": "527040"
  },
  {
    "text": "we're dealing with executions so probably the process ID recorded here",
    "start": "527040",
    "end": "532200"
  },
  {
    "text": "and there you know that it's going to change the next time you run it so",
    "start": "532200",
    "end": "538200"
  },
  {
    "text": "um it's a very difficult thing to balance between [Music] um collecting enough information to make",
    "start": "538200",
    "end": "545459"
  },
  {
    "text": "the profile meaningful but not too much information",
    "start": "545459",
    "end": "550620"
  },
  {
    "text": "to make it annoying so we had to to go through some iteration to fine-tune what",
    "start": "550620",
    "end": "558180"
  },
  {
    "text": "we do and what we don't want to include in the profile and we removed a lot of things from the profile to make it",
    "start": "558180",
    "end": "565200"
  },
  {
    "text": "stable and we thought that we can compensate",
    "start": "565200",
    "end": "570839"
  },
  {
    "text": "on the information that we removed from the profile with signatures",
    "start": "570839",
    "end": "576180"
  },
  {
    "text": "that will help balance that and that brings me to the third incarnation of",
    "start": "576180",
    "end": "581220"
  },
  {
    "text": "this project and the current one where we basically take the both The Best of Both Worlds so you still into those",
    "start": "581220",
    "end": "589200"
  },
  {
    "text": "places to pipeline the same way does the GitHub action you add it to the pipeline and it runs in the background",
    "start": "589200",
    "end": "595860"
  },
  {
    "text": "um it will uh it will look for any of the suspicious",
    "start": "595860",
    "end": "601260"
  },
  {
    "text": "behavioral patterns using the built-in signatures since then it was greatly expanded but",
    "start": "601260",
    "end": "608760"
  },
  {
    "text": "uh still the same thing you can also write your own signatures on top of that and using that tool you can find a",
    "start": "608760",
    "end": "616260"
  },
  {
    "text": "specific bad behaviors that you want to look for that's a very good tool but at",
    "start": "616260",
    "end": "624360"
  },
  {
    "text": "the same time we also build a profile uh we also expanded the profile to include more than executables we also",
    "start": "624360",
    "end": "631440"
  },
  {
    "text": "look for file modifications that happen during the pipeline and network activity that happened during the pipeline",
    "start": "631440",
    "end": "638279"
  },
  {
    "text": "and the profile lets you represent the the normal",
    "start": "638279",
    "end": "644339"
  },
  {
    "text": "behavior so it's kind of like an allow list and denialist approach the signatures lets you declare what is",
    "start": "644339",
    "end": "651360"
  },
  {
    "text": "the bad stuff that you're looking for the profile lets you declare what is the good stuff that you want to enforce and",
    "start": "651360",
    "end": "658320"
  },
  {
    "text": "you can pick the the best tool when you want to introduce a new security control you can pick either",
    "start": "658320",
    "end": "665839"
  },
  {
    "text": "so um so that's the the current version let's let's see before we dive into it let's",
    "start": "665940",
    "end": "672060"
  },
  {
    "text": "see how it looks like all right so uh we have a go project",
    "start": "672060",
    "end": "680640"
  },
  {
    "text": "here um you see a main.go and go mod and we",
    "start": "680640",
    "end": "686220"
  },
  {
    "text": "have a pipeline in GitHub that builds it so you see the the normal actions you see go mode",
    "start": "686220",
    "end": "693420"
  },
  {
    "text": "verify go test go build and you can see the Tracy start and stop actions that uh",
    "start": "693420",
    "end": "699959"
  },
  {
    "text": "to this Tracy you can also see a suspicious action here fake upload right",
    "start": "699959",
    "end": "705360"
  },
  {
    "text": "now it's good it will turn row later on uh so so far so good let's push this",
    "start": "705360",
    "end": "713220"
  },
  {
    "text": "a project into GitHub and this is the first commit so it's the",
    "start": "713220",
    "end": "719579"
  },
  {
    "text": "first time um we are running this workflow in GitHub and um",
    "start": "719579",
    "end": "726300"
  },
  {
    "text": "the the Gita workflow we run and",
    "start": "726300",
    "end": "732959"
  },
  {
    "text": "we will see soon see that it fails the reason why it failed is because",
    "start": "732959",
    "end": "739380"
  },
  {
    "text": "Tracy failed it because it's the first time you run it there's an unknown profile you need to",
    "start": "739380",
    "end": "746220"
  },
  {
    "text": "acknowledge it so we created a new pull request this is the the pull request that asks",
    "start": "746220",
    "end": "754260"
  },
  {
    "text": "you to review and commit the profile you can see here all of the things that we",
    "start": "754260",
    "end": "759720"
  },
  {
    "text": "saw that should happen during the pro the the pipeline this is the DNS profile execution",
    "start": "759720",
    "end": "766440"
  },
  {
    "text": "profile and files being modified three files introduced so we reviewed everything looks good we",
    "start": "766440",
    "end": "773700"
  },
  {
    "text": "merge this this pull request again this is not a pull request that we",
    "start": "773700",
    "end": "779399"
  },
  {
    "text": "made this is the pull request that Tracy made and now we need to go back to our pull request",
    "start": "779399",
    "end": "784920"
  },
  {
    "text": "and update it because um now there's a profile so we go back to the code we update main",
    "start": "784920",
    "end": "792980"
  },
  {
    "text": "Let's uh check out our uh our branch",
    "start": "792980",
    "end": "798360"
  },
  {
    "text": "and merge it with main so basically now we update our pull request with the the",
    "start": "798360",
    "end": "807959"
  },
  {
    "text": "newly built profile go back to to GitHub and this is the",
    "start": "807959",
    "end": "813300"
  },
  {
    "text": "sample request that we had in the beginning now the pipeline is uh we ran and it passed this time because nothing",
    "start": "813300",
    "end": "821760"
  },
  {
    "text": "changed from the from the profile that it knows to the current execution",
    "start": "821760",
    "end": "826860"
  },
  {
    "text": "means that we can merge it safely nothing looks wrong here",
    "start": "826860",
    "end": "832920"
  },
  {
    "text": "all right so some time passed someone working on this project wants to",
    "start": "832920",
    "end": "838260"
  },
  {
    "text": "introduce a new feature so they update Main they would create a branch",
    "start": "838260",
    "end": "845700"
  },
  {
    "text": "let's call it this is a new feature",
    "start": "845700",
    "end": "852060"
  },
  {
    "text": "and we have a new Branch it doesn't really matter so it's going to be an empty commit we just want to re-trigger",
    "start": "852060",
    "end": "858540"
  },
  {
    "text": "the the workflow it doesn't matter which change we make because what we want to demonstrate here",
    "start": "858540",
    "end": "864300"
  },
  {
    "text": "is that it might be that one of the GitHub actions that we used",
    "start": "864300",
    "end": "870000"
  },
  {
    "text": "has been also updated during this time like happened in the code bridge that we",
    "start": "870000",
    "end": "875700"
  },
  {
    "text": "discussed earlier and let's say now we're at the maintainer of that action let's say we push the new version",
    "start": "875700",
    "end": "881459"
  },
  {
    "text": "of that action and and we use the same tag and it means",
    "start": "881459",
    "end": "888120"
  },
  {
    "text": "that our pipeline will now use this new code automatically",
    "start": "888120",
    "end": "893339"
  },
  {
    "text": "so we go back to our feature and we create a new pull request to",
    "start": "893339",
    "end": "898740"
  },
  {
    "text": "introduce our cool new feature this new pull request will trigger the",
    "start": "898740",
    "end": "905760"
  },
  {
    "text": "workflow the workflow will use the the fake uploader action which is now",
    "start": "905760",
    "end": "914339"
  },
  {
    "text": "have been updated and you can see that this time unlike the previous time this time this pull",
    "start": "914339",
    "end": "920820"
  },
  {
    "text": "request failed the the pipeline failed also we see a",
    "start": "920820",
    "end": "926880"
  },
  {
    "text": "comment here from Tracy saying that we saw something suspicious happening during the pipeline specifically a minor",
    "start": "926880",
    "end": "933540"
  },
  {
    "text": "domain something that looks like a minor in the pipeline we have all the raw data",
    "start": "933540",
    "end": "939480"
  },
  {
    "text": "here and also a new pull request was created to show us what is changed",
    "start": "939480",
    "end": "945959"
  },
  {
    "text": "what exactly was changed so we see that a new process was executed we see the",
    "start": "945959",
    "end": "951480"
  },
  {
    "text": "the the shaft for it we see the arguments and we also see that the file was modified main.go was modified during",
    "start": "951480",
    "end": "958440"
  },
  {
    "text": "the pipelines it didn't happen before it shouldn't happen so we use the pull request here as a",
    "start": "958440",
    "end": "964680"
  },
  {
    "text": "kind of a user interface to show you what is wrong between what is different between the last time",
    "start": "964680",
    "end": "971279"
  },
  {
    "text": "and this time so that's that's how it's looking like",
    "start": "971279",
    "end": "976800"
  },
  {
    "text": "um and let's talk a little bit more in depth",
    "start": "976800",
    "end": "982800"
  },
  {
    "text": "about what uh what we saw and what we had to do in order to make it work",
    "start": "982800",
    "end": "989399"
  },
  {
    "text": "so there's the workload and you already saw that the way that we introduced",
    "start": "989399",
    "end": "994500"
  },
  {
    "text": "Tracy is using GitHub action actually a pair of actions one to start the trace",
    "start": "994500",
    "end": "1002959"
  },
  {
    "text": "and one to stop the trace everything in between",
    "start": "1002959",
    "end": "1008300"
  },
  {
    "text": "will be captured and monitored the first challenge that we faced and",
    "start": "1008300",
    "end": "1016160"
  },
  {
    "text": "we're trying to recap like the past couple of years of this project uh was that running eppf",
    "start": "1016160",
    "end": "1023540"
  },
  {
    "text": "um at least a couple of years ago was not that trivial um especially in a remote service or a",
    "start": "1023540",
    "end": "1030438"
  },
  {
    "text": "managed service um and in the beginning Tracy was basically",
    "start": "1030439",
    "end": "1038438"
  },
  {
    "text": "compiling the ebpf code on the Node this is this was the common practice it still",
    "start": "1038439",
    "end": "1044178"
  },
  {
    "text": "is in some cases compiling the abpf code on the Node when it runs",
    "start": "1044179",
    "end": "1049340"
  },
  {
    "text": "it means that it it carries a very heavyweight tool change a tool chain in",
    "start": "1049340",
    "end": "1055460"
  },
  {
    "text": "in the container of Tracy itself in order to just perform the compilation but also it means that it needs",
    "start": "1055460",
    "end": "1061520"
  },
  {
    "text": "some dependencies like kernel headers depending on the machine that you're running on it's a very complicated",
    "start": "1061520",
    "end": "1066980"
  },
  {
    "text": "process a airplane as well depending on a external environment that",
    "start": "1066980",
    "end": "1075740"
  },
  {
    "text": "is not up to us like does the machine have kernel headers available is it in the past that we expect it to be in will",
    "start": "1075740",
    "end": "1082880"
  },
  {
    "text": "not always show so one of the very significant changes that we made",
    "start": "1082880",
    "end": "1088840"
  },
  {
    "text": "was to make the the eppf portion of Tracy",
    "start": "1088840",
    "end": "1097419"
  },
  {
    "text": "compile ones run everywhere this is how it's called in the ebtf world basically",
    "start": "1097640",
    "end": "1102860"
  },
  {
    "text": "means to make it portable in simple world it's simple words but it's very hard to",
    "start": "1102860",
    "end": "1108620"
  },
  {
    "text": "achieve in the code and in order to make it happen again there are some",
    "start": "1108620",
    "end": "1114140"
  },
  {
    "text": "dependencies on the on the on the machine not every Linux",
    "start": "1114140",
    "end": "1119960"
  },
  {
    "text": "kernel supports this in the same way Etc and we had to create like a separate",
    "start": "1119960",
    "end": "1125240"
  },
  {
    "text": "project it's called BTF Hub uh to to solve the problem of evpf portability but anyway",
    "start": "1125240",
    "end": "1132799"
  },
  {
    "text": "long story short it it works now and uh it's it's one of the first projects to",
    "start": "1132799",
    "end": "1139340"
  },
  {
    "text": "do something like that so it's not very easy to run Tracy everywhere including",
    "start": "1139340",
    "end": "1145400"
  },
  {
    "text": "in your pipeline another thing that we had to implement here and that we learned the hard way",
    "start": "1145400",
    "end": "1153020"
  },
  {
    "text": "was that when we are tracing stuff especially for security purposes",
    "start": "1153020",
    "end": "1158600"
  },
  {
    "text": "um you need to be very certain that you capture every single event every single bit you can't afford to lose any",
    "start": "1158600",
    "end": "1166100"
  },
  {
    "text": "information um and the way that this orchestration of",
    "start": "1166100",
    "end": "1172700"
  },
  {
    "text": "Tracy in the pipeline worked um in the beginning we were losing some",
    "start": "1172700",
    "end": "1178760"
  },
  {
    "text": "events because Tracy was starting the pipeline was starting there was kind of an opportunity there to lose events what",
    "start": "1178760",
    "end": "1185660"
  },
  {
    "text": "we had to do is to make Tracy block the pipeline until it finished initializing we had to",
    "start": "1185660",
    "end": "1193640"
  },
  {
    "text": "like introduce this again not so trivial feature to Tracy and in order to block the pipeline until",
    "start": "1193640",
    "end": "1201080"
  },
  {
    "text": "Tracy says I'm finished I'm all ready for tracing and then the pipeline starts",
    "start": "1201080",
    "end": "1207080"
  },
  {
    "text": "running so there's a minimum delay here but because we switched from compiling the ebpf code",
    "start": "1207080",
    "end": "1215179"
  },
  {
    "text": "on the Node to the compound ones run everywhere it means that Tracy boots",
    "start": "1215179",
    "end": "1220460"
  },
  {
    "text": "much much faster than it used to so these two goes hand in hand",
    "start": "1220460",
    "end": "1227620"
  },
  {
    "text": "um what else so another thing uh we need to consider here is that there's the",
    "start": "1227780",
    "end": "1233539"
  },
  {
    "text": "GitHub gives you basically a VM to run your code right in this VM there is the",
    "start": "1233539",
    "end": "1239720"
  },
  {
    "text": "workflow itself that uh that is running and in order to avoid",
    "start": "1239720",
    "end": "1245780"
  },
  {
    "text": "um noise from the machine itself like this is Linux a lot of things are happening",
    "start": "1245780",
    "end": "1251720"
  },
  {
    "text": "at any given time I don't know uh a system update might start sometime and",
    "start": "1251720",
    "end": "1258140"
  },
  {
    "text": "we will see it because Tracy is running uh in the kernel so in order to focus",
    "start": "1258140",
    "end": "1264020"
  },
  {
    "text": "Tracy to look only on what's interesting for us um we have we have this filtering",
    "start": "1264020",
    "end": "1272000"
  },
  {
    "text": "mechanism in Tracy that we can use it's an old feature you can tell it exactly what uh what to filter on so for in this",
    "start": "1272000",
    "end": "1279320"
  },
  {
    "text": "example we identified the way that GitHub sets up the the",
    "start": "1279320",
    "end": "1285520"
  },
  {
    "text": "Runner and we saw that there is a one process if we trace this process tree",
    "start": "1285520",
    "end": "1291700"
  },
  {
    "text": "basically this processing everything underneath it is basically means we're tracing only the the pipeline so this",
    "start": "1291700",
    "end": "1298520"
  },
  {
    "text": "was um not too hard to do but uh considering",
    "start": "1298520",
    "end": "1304159"
  },
  {
    "text": "that there are other areas in the machine that we needed to look into as well",
    "start": "1304159",
    "end": "1310159"
  },
  {
    "text": "started to face some problems for example some things will run as Docker containers",
    "start": "1310159",
    "end": "1315919"
  },
  {
    "text": "these Docker containers will not will not be under this process tree that",
    "start": "1315919",
    "end": "1322120"
  },
  {
    "text": "that is basically the the workflow itself the workflow would",
    "start": "1322120",
    "end": "1327620"
  },
  {
    "text": "start the container but the container process itself would appear under the docker demon or something like that",
    "start": "1327620",
    "end": "1333980"
  },
  {
    "text": "so we need visibility into that as well right but if we filtered to see only the",
    "start": "1333980",
    "end": "1339860"
  },
  {
    "text": "process three it will conflict another thing is that sometimes we need",
    "start": "1339860",
    "end": "1345740"
  },
  {
    "text": "visibility into the host itself as generally because remember we have the",
    "start": "1345740",
    "end": "1351020"
  },
  {
    "text": "generic signatures that we bought from Tracy from the production kind of use case then why not use them to look into",
    "start": "1351020",
    "end": "1359419"
  },
  {
    "text": "the host as well so we have now um a challenge that we want to trace",
    "start": "1359419",
    "end": "1367400"
  },
  {
    "text": "different scopes for different purposes for the for the host I want to see this",
    "start": "1367400",
    "end": "1375500"
  },
  {
    "text": "kind of events for the workflow I want to see another set of events only only",
    "start": "1375500",
    "end": "1381500"
  },
  {
    "text": "the things that I need to build the profile for example for Docker I want to see other things that help me detect",
    "start": "1381500",
    "end": "1387460"
  },
  {
    "text": "Docker specific suspicious Behavior so this was uh something that we were",
    "start": "1387460",
    "end": "1392900"
  },
  {
    "text": "dragging along for a while but recently we finally launched a very significant",
    "start": "1392900",
    "end": "1398900"
  },
  {
    "text": "feature in Tracy that we called multiscopes basically allowing us to",
    "start": "1398900",
    "end": "1404000"
  },
  {
    "text": "to score to trace different to create Scopes basically a scope is",
    "start": "1404000",
    "end": "1410360"
  },
  {
    "text": "basically a set of filters that are independent of uh of one another",
    "start": "1410360",
    "end": "1416600"
  },
  {
    "text": "so we have for example one scope this is the syntax how it is uh",
    "start": "1416600",
    "end": "1423080"
  },
  {
    "text": "in Tracy so you tell Tracy to trace and we create scope number one this will be",
    "start": "1423080",
    "end": "1429320"
  },
  {
    "text": "just the list of all the signatures that we want to to observe on the host so",
    "start": "1429320",
    "end": "1436280"
  },
  {
    "text": "file is execution is one signature hidden file created is another signature these are the events that you want Tracy",
    "start": "1436280",
    "end": "1443000"
  },
  {
    "text": "to trace and we don't apply any special filter here except by saying this is one",
    "start": "1443000",
    "end": "1449240"
  },
  {
    "text": "scope and then there's another scope that says that we want to look for file",
    "start": "1449240",
    "end": "1455900"
  },
  {
    "text": "modification events this is a kind of events that Tracy emits but in this",
    "start": "1455900",
    "end": "1462080"
  },
  {
    "text": "scope number two well the file modification event is in we want to also",
    "start": "1462080",
    "end": "1468679"
  },
  {
    "text": "um limit the the file modifications only from",
    "start": "1468679",
    "end": "1474200"
  },
  {
    "text": "the GitHub workspace directory basically were GitHub checks your code into otherwise we will just",
    "start": "1474200",
    "end": "1481640"
  },
  {
    "text": "see all the files that are changed on the host which is not going to help anyone the third scope is basically to say",
    "start": "1481640",
    "end": "1489799"
  },
  {
    "text": "let's look at the the guitar 3 and the docker tree and in these cases",
    "start": "1489799",
    "end": "1497059"
  },
  {
    "text": "we want to see uh the executions and the network activity in order to build the",
    "start": "1497059",
    "end": "1502280"
  },
  {
    "text": "profile I will show you more about this in a second but the the point here is that",
    "start": "1502280",
    "end": "1508159"
  },
  {
    "text": "um scoping the the trace into different use",
    "start": "1508159",
    "end": "1513440"
  },
  {
    "text": "cases and for every use case tracing the only the the relevant events for that",
    "start": "1513440",
    "end": "1520039"
  },
  {
    "text": "scope is uh it was a very very critical thing to do",
    "start": "1520039",
    "end": "1526179"
  },
  {
    "text": "all right so let's uh look a little bit deeper",
    "start": "1526340",
    "end": "1532039"
  },
  {
    "text": "into what what Tracy can tell you about every",
    "start": "1532039",
    "end": "1537380"
  },
  {
    "text": "category um executions is one category in the",
    "start": "1537380",
    "end": "1544700"
  },
  {
    "text": "executions category there is a bunch of signatures that uh are introduced just by the nature of",
    "start": "1544700",
    "end": "1552020"
  },
  {
    "text": "Tracy is there so looking for suspicious things that might happen",
    "start": "1552020",
    "end": "1557539"
  },
  {
    "text": "on the on the hosts like suspicious executions patterns",
    "start": "1557539",
    "end": "1563120"
  },
  {
    "text": "let's pick just one for example code injection some process is trying to",
    "start": "1563120",
    "end": "1568580"
  },
  {
    "text": "inject code to running another process running instance or uh",
    "start": "1568580",
    "end": "1574820"
  },
  {
    "text": "um a LD preload someone is messing with the",
    "start": "1574820",
    "end": "1580820"
  },
  {
    "text": "dynamic Linker or something like that so this you get for free like in quotes from just Tracy being there",
    "start": "1580820",
    "end": "1587779"
  },
  {
    "text": "uh in addition Tracy also Builds an execution profile of what happened during the build what is in this profile",
    "start": "1587779",
    "end": "1595220"
  },
  {
    "text": "first of all binary paths like what's the binary that was ran the binary hash very important to know if",
    "start": "1595220",
    "end": "1602659"
  },
  {
    "text": "this process that is called LS is the same as another positive it's called LS the user who created it",
    "start": "1602659",
    "end": "1610700"
  },
  {
    "text": "this was this was there for ages and it's kind of",
    "start": "1610700",
    "end": "1618140"
  },
  {
    "text": "um goes without saying but then we found out another lesson that we're missing by",
    "start": "1618140",
    "end": "1626000"
  },
  {
    "text": "not including the arguments for the process uh just to give an example let's say you have in your pipeline a curl",
    "start": "1626000",
    "end": "1633260"
  },
  {
    "text": "into codecov.com and then someone managed to change it to",
    "start": "1633260",
    "end": "1638480"
  },
  {
    "text": "curl into my bedminer.com it's the same curl it's the same hush if you just Trace",
    "start": "1638480",
    "end": "1645140"
  },
  {
    "text": "executables nothing changed right all good but no just by changing an argument",
    "start": "1645140",
    "end": "1650179"
  },
  {
    "text": "I dramatically changed the behavior of the pipeline so we needed to include that information as well but",
    "start": "1650179",
    "end": "1656120"
  },
  {
    "text": "the problem was that a process arguments includes a lot of",
    "start": "1656120",
    "end": "1664220"
  },
  {
    "text": "volatile information like for example when when you do a git clone or",
    "start": "1664220",
    "end": "1669679"
  },
  {
    "text": "something like that GitHub creates a temporary directory and",
    "start": "1669679",
    "end": "1675200"
  },
  {
    "text": "that directory name is changed every time you run the pipeline and that is being passed as an argument so a lot of",
    "start": "1675200",
    "end": "1681620"
  },
  {
    "text": "volatile information that we that would just pollute the profile so to solve",
    "start": "1681620",
    "end": "1686840"
  },
  {
    "text": "this we have to introduce another kind of feature that is a ignore system that",
    "start": "1686840",
    "end": "1692240"
  },
  {
    "text": "lets you basically say these these kind of things I know that they will happen I want to",
    "start": "1692240",
    "end": "1699260"
  },
  {
    "text": "ignore them um and another kind of blind spot was the environment variables that every",
    "start": "1699260",
    "end": "1706100"
  },
  {
    "text": "process had access to so we wanted to include that as well",
    "start": "1706100",
    "end": "1711140"
  },
  {
    "text": "but that created another problem of so you know environment variables",
    "start": "1711140",
    "end": "1717620"
  },
  {
    "text": "contain Secrets usually and if we are including that in the profile we're",
    "start": "1717620",
    "end": "1722779"
  },
  {
    "text": "basically committing your secrets to the source code not something that we want to do now you have the ignore system so",
    "start": "1722779",
    "end": "1728960"
  },
  {
    "text": "you could ignore this kind of environment variables and say something that is called GitHub token",
    "start": "1728960",
    "end": "1735559"
  },
  {
    "text": "just don't include it in the profile that will solve the problem but just out of precaution we decided to make it an",
    "start": "1735559",
    "end": "1743779"
  },
  {
    "text": "opt-in feature just the environment variables if you want you can enable it we would include environment variables",
    "start": "1743779",
    "end": "1749659"
  },
  {
    "text": "in your profile and then you are encouraged to filter the the secrets out",
    "start": "1749659",
    "end": "1756559"
  },
  {
    "text": "another interesting interesting thing is how do we even detect an execution how",
    "start": "1756559",
    "end": "1762260"
  },
  {
    "text": "do we know that something was executed so the the obvious like the Nave thought",
    "start": "1762260",
    "end": "1768080"
  },
  {
    "text": "would be to look into the system call that is invoking new executables it's called executive e it's very commonly",
    "start": "1768080",
    "end": "1775039"
  },
  {
    "text": "used in tracing tools but we found out that it was not good for our use case",
    "start": "1775039",
    "end": "1781100"
  },
  {
    "text": "for a few reasons I would say categorically tracing system course was a little bit problematic for a number of",
    "start": "1781100",
    "end": "1788240"
  },
  {
    "text": "reasons first of all we need to understand that the system call is not really like",
    "start": "1788240",
    "end": "1794840"
  },
  {
    "text": "invoking function it's more like the user requesting the system to do something",
    "start": "1794840",
    "end": "1800240"
  },
  {
    "text": "it's not necessarily what will end up being invoked and now that we know that",
    "start": "1800240",
    "end": "1808340"
  },
  {
    "text": "um there are cases where the user might request to do something and by the time that the system actually",
    "start": "1808340",
    "end": "1815360"
  },
  {
    "text": "got to do it the user might change the request so we traced X but the system",
    "start": "1815360",
    "end": "1820940"
  },
  {
    "text": "invoked y so that is a kind of attack called the time of check time of use",
    "start": "1820940",
    "end": "1826760"
  },
  {
    "text": "that for us as a security tool we just didn't want to be in this position another problem with the system calls",
    "start": "1826760",
    "end": "1834380"
  },
  {
    "text": "and exact V is that the user might pass arguments that are high level because",
    "start": "1834380",
    "end": "1839779"
  },
  {
    "text": "this is like an interface from the user to the system so let's say I'm I'm telling the system",
    "start": "1839779",
    "end": "1845600"
  },
  {
    "text": "to invoke this binary I'm giving it a path that path may be relative to some",
    "start": "1845600",
    "end": "1852500"
  },
  {
    "text": "other directory that path might be a file descriptor that I opened and",
    "start": "1852500",
    "end": "1857960"
  },
  {
    "text": "obtained earlier and I don't know it that path might be a Sim link for example that the scenes",
    "start": "1857960",
    "end": "1865760"
  },
  {
    "text": "that the system needs to resolve so if we're just tracing the exact ve calls",
    "start": "1865760",
    "end": "1871520"
  },
  {
    "text": "it might be that we were seeing meaningless information for us we would see for example that file descriptor 5",
    "start": "1871520",
    "end": "1877940"
  },
  {
    "text": "was executed what does it mean no one knows unless they had access to in the entire",
    "start": "1877940",
    "end": "1883179"
  },
  {
    "text": "capture of that Trace so our solution was to switch and use",
    "start": "1883179",
    "end": "1890360"
  },
  {
    "text": "another event that Tracy produces it's called the sketch process exec it's like",
    "start": "1890360",
    "end": "1896360"
  },
  {
    "text": "an internal transport in Linux it solved all of those problems it's not vulnerable to time of check",
    "start": "1896360",
    "end": "1901760"
  },
  {
    "text": "time of use it it gives us the real path how we call it like the the resolved",
    "start": "1901760",
    "end": "1907159"
  },
  {
    "text": "path that is the absolute path to the file on the disk it also gives us the",
    "start": "1907159",
    "end": "1912380"
  },
  {
    "text": "hash and many more information that we include on that event so that's another kind of uh",
    "start": "1912380",
    "end": "1918559"
  },
  {
    "text": "lesson that we took all right let's move on to uh another",
    "start": "1918559",
    "end": "1924880"
  },
  {
    "text": "category of things that we include files being modified",
    "start": "1924880",
    "end": "1930260"
  },
  {
    "text": "um first of all there's a bunch of signatures same here that look into",
    "start": "1930260",
    "end": "1935360"
  },
  {
    "text": "suspicious file access buttons for example someone changed the suders files on the system",
    "start": "1935360",
    "end": "1943279"
  },
  {
    "text": "shouldn't happen definitely not doing the build this is the kind of thing you get again",
    "start": "1943279",
    "end": "1948559"
  },
  {
    "text": "in quotes for free just by tracing being there uh the profile also includes file being",
    "start": "1948559",
    "end": "1955159"
  },
  {
    "text": "modified and and I mentioned this before we want to limit this to only the",
    "start": "1955159",
    "end": "1961100"
  },
  {
    "text": "the Gita workspace directory we don't want any file that was touched we just want the source code files that we",
    "start": "1961100",
    "end": "1967940"
  },
  {
    "text": "touched how do we know what is source code we just say everything in the GitHub workspace directly",
    "start": "1967940",
    "end": "1973940"
  },
  {
    "text": "um again here with the trigger it was a little bit tricky if you want to know",
    "start": "1973940",
    "end": "1979220"
  },
  {
    "text": "when a file has been written to then the the intuitive approach would be okay there's a system code for that it's",
    "start": "1979220",
    "end": "1985580"
  },
  {
    "text": "called write if you trace write system call in your system it's totally unmanageable because",
    "start": "1985580",
    "end": "1992720"
  },
  {
    "text": "there's so many rights happening at any given point especially on like on Unix",
    "start": "1992720",
    "end": "1998480"
  },
  {
    "text": "Linux everything is a file so basically uh impossible to deal with",
    "start": "1998480",
    "end": "2003820"
  },
  {
    "text": "and it created a little bit of a challenge our solution to that",
    "start": "2003820",
    "end": "2009399"
  },
  {
    "text": "was instead of tracing the the actual rights",
    "start": "2009399",
    "end": "2014919"
  },
  {
    "text": "to the files we're tracing when a file has been opened",
    "start": "2014919",
    "end": "2020260"
  },
  {
    "text": "for writing so this is this is an action that the the program has to take if if",
    "start": "2020260",
    "end": "2025659"
  },
  {
    "text": "you want to write to a file you need first to open it technically this is how it works uh and you need to pass the",
    "start": "2025659",
    "end": "2032140"
  },
  {
    "text": "right flag so this is what we capture instead it's a nice trick and",
    "start": "2032140",
    "end": "2037179"
  },
  {
    "text": "um we use it later on again like to to trace the intent to do something and not",
    "start": "2037179",
    "end": "2042519"
  },
  {
    "text": "necessarily the something itself because uh it's a lot more manageable",
    "start": "2042519",
    "end": "2049500"
  },
  {
    "text": "another piece of the of this puzzle is network activity that Tracy also",
    "start": "2050740",
    "end": "2056260"
  },
  {
    "text": "includes again some signatures there by the way network is a relatively new thing in",
    "start": "2056260",
    "end": "2062740"
  },
  {
    "text": "Tracy we have a very robust Network tracing capability that also",
    "start": "2062740",
    "end": "2069040"
  },
  {
    "text": "includes protocol parsing so this is unique kind of in the tracing world that",
    "start": "2069040",
    "end": "2075398"
  },
  {
    "text": "you you don't just Trace accept system core for example and then you get gibberish you actually like you can",
    "start": "2075399",
    "end": "2082960"
  },
  {
    "text": "trace HTTP calls for example and know that this process did an HTTP get to",
    "start": "2082960",
    "end": "2088898"
  },
  {
    "text": "this um IP Etc and what we would like to do here is to",
    "start": "2088899",
    "end": "2097180"
  },
  {
    "text": "know which which web services my pipeline interacted with right this is",
    "start": "2097180",
    "end": "2104200"
  },
  {
    "text": "this is what we want to do the problem is that there isn't a concept of a",
    "start": "2104200",
    "end": "2109240"
  },
  {
    "text": "service in the network world it's like it's it's a very high level concept but in the in the low level Network there",
    "start": "2109240",
    "end": "2115180"
  },
  {
    "text": "isn't such a thing there is just TCP to an IP but we cannot even deal with IPS",
    "start": "2115180",
    "end": "2121599"
  },
  {
    "text": "because IPS are also very dynamic they will change for good reasons",
    "start": "2121599",
    "end": "2127119"
  },
  {
    "text": "um and uh and again um touching back on the lesson from",
    "start": "2127119",
    "end": "2132760"
  },
  {
    "text": "before that instead of tracing the actual thing sometimes it's easier to think about",
    "start": "2132760",
    "end": "2138940"
  },
  {
    "text": "tracing the intent in this case if I want to communicate with another service before I do that I need to do",
    "start": "2138940",
    "end": "2146320"
  },
  {
    "text": "a dnsl solution this is like the file open from before so if my pipeline communicated with an",
    "start": "2146320",
    "end": "2154359"
  },
  {
    "text": "external service using a domain name we would catch that because there would",
    "start": "2154359",
    "end": "2161440"
  },
  {
    "text": "be a domain resolution and we are catching domain resolutions we give you a list of all the domains if we didn't",
    "start": "2161440",
    "end": "2167079"
  },
  {
    "text": "use the domain name then this is something that we consider a suspicious Behavior like contacting a bear IP and",
    "start": "2167079",
    "end": "2173619"
  },
  {
    "text": "there's a signature for that there's also like uh other network",
    "start": "2173619",
    "end": "2178900"
  },
  {
    "text": "related signatures like someone opened the reverse shell like trying to create",
    "start": "2178900",
    "end": "2185380"
  },
  {
    "text": "a connection outbound that tunnels your shell to an external endpoint and stuff",
    "start": "2185380",
    "end": "2190839"
  },
  {
    "text": "like that the number of signatures you can review them later in Tracy but network activity is another section that",
    "start": "2190839",
    "end": "2197859"
  },
  {
    "text": "was added today GitHub action of Tracy",
    "start": "2197859",
    "end": "2204420"
  },
  {
    "text": "um all right and now after we understood that",
    "start": "2205420",
    "end": "2212400"
  },
  {
    "text": "it was another kind of aha moment that I don't think we have yet uh",
    "start": "2213280",
    "end": "2219160"
  },
  {
    "text": "to fully understand it but just wanted to share it even at this row point that we have a lot of good information at",
    "start": "2219160",
    "end": "2226060"
  },
  {
    "text": "hand right we have executions profile we have network activity we have files",
    "start": "2226060",
    "end": "2232599"
  },
  {
    "text": "being modified during the pipeline a lot of good information we use it in Tracy to tell you if something",
    "start": "2232599",
    "end": "2238240"
  },
  {
    "text": "doesn't look right in your pipeline but maybe you can use it for other purposes as well",
    "start": "2238240",
    "end": "2243780"
  },
  {
    "text": "specifically there is the salsa um specification that deals with",
    "start": "2243780",
    "end": "2253240"
  },
  {
    "text": "um so they Define it like they Define a provenance as the verifiable information",
    "start": "2253240",
    "end": "2259320"
  },
  {
    "text": "about software artifact describing where when and how something was produced so",
    "start": "2259320",
    "end": "2266859"
  },
  {
    "text": "we have a lot to add about the how something was produced right we know exactly how it was produced so can we",
    "start": "2266859",
    "end": "2274000"
  },
  {
    "text": "use this information in this context and then we saw um not too long ago actually that there",
    "start": "2274000",
    "end": "2280420"
  },
  {
    "text": "is a proposal to create a formal attestation format it's called a runtime",
    "start": "2280420",
    "end": "2286359"
  },
  {
    "text": "Trace that should complement the salsa",
    "start": "2286359",
    "end": "2291839"
  },
  {
    "text": "predicate and from that spec I'm quoting the random Trace can prove that the",
    "start": "2291839",
    "end": "2297880"
  },
  {
    "text": "build was invoked via script that the build was executed in a hermetic environment with no access and so on so",
    "start": "2297880",
    "end": "2304720"
  },
  {
    "text": "this is exactly the kind of information that we already collect and definitely when this thing is is a little bit more",
    "start": "2304720",
    "end": "2313540"
  },
  {
    "text": "matured we would emit the the the the information in this format as well so",
    "start": "2313540",
    "end": "2320920"
  },
  {
    "text": "that you can use it for other purposes like complementing the salsa station",
    "start": "2320920",
    "end": "2330240"
  },
  {
    "text": "all right so uh we're at the end this is like a",
    "start": "2331420",
    "end": "2336820"
  },
  {
    "text": "recap of the Lessons Learned runtime is not a build time we learn something there",
    "start": "2336820",
    "end": "2342460"
  },
  {
    "text": "um we were able to increase the coverage by using signatures as a deny and",
    "start": "2342460",
    "end": "2349660"
  },
  {
    "text": "profile as an allow kind of controls we looked at how the blind spot of tracing",
    "start": "2349660",
    "end": "2356380"
  },
  {
    "text": "tools how we overcome them with the specific features of Tracy we talked",
    "start": "2356380",
    "end": "2362680"
  },
  {
    "text": "about system call tracing as opposed to other approaches what are the triggers",
    "start": "2362680",
    "end": "2368079"
  },
  {
    "text": "Etc and this is how you can",
    "start": "2368079",
    "end": "2374820"
  },
  {
    "text": "look at all of this actually Tracy on GitHub or Tracy action on GitHub and",
    "start": "2374920",
    "end": "2383320"
  },
  {
    "text": "I'm here if you have any more questions thank you very much and enjoy the conference [Applause]",
    "start": "2383680",
    "end": "2393630"
  }
]