[
  {
    "start": "0",
    "end": "16000"
  },
  {
    "text": "all right welcome everybody uh today",
    "start": "1120",
    "end": "3360"
  },
  {
    "text": "clemens and i are going to be talking to",
    "start": "3360",
    "end": "4720"
  },
  {
    "text": "you about cloud events",
    "start": "4720",
    "end": "5839"
  },
  {
    "text": "in particular the uh the status of the",
    "start": "5839",
    "end": "8000"
  },
  {
    "text": "cloud events project and where we're",
    "start": "8000",
    "end": "9120"
  },
  {
    "text": "headed in the future",
    "start": "9120",
    "end": "10480"
  },
  {
    "text": "um hopefully we'll have time for",
    "start": "10480",
    "end": "11679"
  },
  {
    "text": "questions at the end so let's go ahead",
    "start": "11679",
    "end": "13280"
  },
  {
    "text": "and jump right into it because we have a",
    "start": "13280",
    "end": "14240"
  },
  {
    "text": "lot of material here so",
    "start": "14240",
    "end": "17039"
  },
  {
    "start": "16000",
    "end": "299000"
  },
  {
    "text": "first of all quick agenda give you a",
    "start": "17039",
    "end": "18880"
  },
  {
    "text": "quick update on where we are with cloud",
    "start": "18880",
    "end": "20480"
  },
  {
    "text": "events project and then very quickly",
    "start": "20480",
    "end": "22080"
  },
  {
    "text": "jump over to some of the new work that",
    "start": "22080",
    "end": "23600"
  },
  {
    "text": "we're doing here",
    "start": "23600",
    "end": "24960"
  },
  {
    "text": "so let's start with cloud events itself",
    "start": "24960",
    "end": "27119"
  },
  {
    "text": "so not going to go into too",
    "start": "27119",
    "end": "28400"
  },
  {
    "text": "deep detail here but for those of you",
    "start": "28400",
    "end": "30640"
  },
  {
    "text": "who don't know what cloud events is",
    "start": "30640",
    "end": "31920"
  },
  {
    "text": "it is a specification for defining",
    "start": "31920",
    "end": "34160"
  },
  {
    "text": "common metadata",
    "start": "34160",
    "end": "35840"
  },
  {
    "text": "for events and where that metadata",
    "start": "35840",
    "end": "38000"
  },
  {
    "text": "appears and the messages that are",
    "start": "38000",
    "end": "39360"
  },
  {
    "text": "transporting those events",
    "start": "39360",
    "end": "41040"
  },
  {
    "text": "now it seems very simple they're a very",
    "start": "41040",
    "end": "42800"
  },
  {
    "text": "high level and it is",
    "start": "42800",
    "end": "44079"
  },
  {
    "text": "but we're really doing this mainly to",
    "start": "44079",
    "end": "45840"
  },
  {
    "text": "aid in delivery of events from",
    "start": "45840",
    "end": "47600"
  },
  {
    "text": "point a to point b this is not about",
    "start": "47600",
    "end": "49760"
  },
  {
    "text": "defining yet another common event format",
    "start": "49760",
    "end": "51760"
  },
  {
    "text": "or anything like that i'll show you an",
    "start": "51760",
    "end": "52879"
  },
  {
    "text": "example in a minute",
    "start": "52879",
    "end": "54000"
  },
  {
    "text": "this is simply about aiding in the",
    "start": "54000",
    "end": "55520"
  },
  {
    "text": "delivery of events across middleware",
    "start": "55520",
    "end": "58000"
  },
  {
    "text": "to its final destination and most",
    "start": "58000",
    "end": "60160"
  },
  {
    "text": "importantly to enable people to do that",
    "start": "60160",
    "end": "62239"
  },
  {
    "text": "without having to understand or",
    "start": "62239",
    "end": "63840"
  },
  {
    "text": "parse the business logic of the event",
    "start": "63840",
    "end": "65518"
  },
  {
    "text": "itself okay so let's",
    "start": "65519",
    "end": "67439"
  },
  {
    "text": "jump into a quick example to show you",
    "start": "67439",
    "end": "68720"
  },
  {
    "text": "what that actually means so let's say",
    "start": "68720",
    "end": "70720"
  },
  {
    "text": "you have this event flowing over http",
    "start": "70720",
    "end": "72560"
  },
  {
    "text": "right nothing in here too special looks",
    "start": "72560",
    "end": "74000"
  },
  {
    "text": "like a normal http event",
    "start": "74000",
    "end": "76000"
  },
  {
    "text": "in order to turn this into a cloud event",
    "start": "76000",
    "end": "77520"
  },
  {
    "text": "though you add a couple bit of",
    "start": "77520",
    "end": "79520"
  },
  {
    "text": "extra metadata as http headers in this",
    "start": "79520",
    "end": "81600"
  },
  {
    "text": "case and you can see",
    "start": "81600",
    "end": "83119"
  },
  {
    "text": "just four little bits of metadata these",
    "start": "83119",
    "end": "84720"
  },
  {
    "text": "are the only four that are required the",
    "start": "84720",
    "end": "86240"
  },
  {
    "text": "spec version",
    "start": "86240",
    "end": "87040"
  },
  {
    "text": "to see the cloud of inspect version that",
    "start": "87040",
    "end": "88720"
  },
  {
    "text": "is uh the type of the event so this",
    "start": "88720",
    "end": "90799"
  },
  {
    "text": "tells you",
    "start": "90799",
    "end": "91759"
  },
  {
    "text": "for example whether it's a create versus",
    "start": "91759",
    "end": "94240"
  },
  {
    "text": "a delete type of event",
    "start": "94240",
    "end": "95680"
  },
  {
    "text": "um where the event came from you know",
    "start": "95680",
    "end": "97759"
  },
  {
    "text": "what is the entity that was sending out",
    "start": "97759",
    "end": "99200"
  },
  {
    "text": "the events",
    "start": "99200",
    "end": "100079"
  },
  {
    "text": "and then just some unique identifier",
    "start": "100079",
    "end": "101840"
  },
  {
    "text": "okay now obviously look at that",
    "start": "101840",
    "end": "103920"
  },
  {
    "text": "it doesn't seem too exciting but with",
    "start": "103920",
    "end": "105840"
  },
  {
    "text": "that basic information",
    "start": "105840",
    "end": "107600"
  },
  {
    "text": "middleware can now route the message",
    "start": "107600",
    "end": "110079"
  },
  {
    "text": "appropriately",
    "start": "110079",
    "end": "111840"
  },
  {
    "text": "to make its way to its final destination",
    "start": "111840",
    "end": "113920"
  },
  {
    "text": "much in the same way you can actually",
    "start": "113920",
    "end": "115360"
  },
  {
    "text": "see",
    "start": "115360",
    "end": "115920"
  },
  {
    "text": "the http header is doing that for the",
    "start": "115920",
    "end": "117840"
  },
  {
    "text": "http layer okay like i said",
    "start": "117840",
    "end": "119840"
  },
  {
    "text": "it's actually a very very simple concept",
    "start": "119840",
    "end": "121840"
  },
  {
    "text": "but with that one little",
    "start": "121840",
    "end": "123360"
  },
  {
    "text": "extra bit of information middleware can",
    "start": "123360",
    "end": "126000"
  },
  {
    "text": "now be",
    "start": "126000",
    "end": "126719"
  },
  {
    "text": "inventing agnostic in terms of",
    "start": "126719",
    "end": "128319"
  },
  {
    "text": "understanding the business logic all",
    "start": "128319",
    "end": "129599"
  },
  {
    "text": "they need to do is look for these common",
    "start": "129599",
    "end": "130879"
  },
  {
    "text": "bits of metadata",
    "start": "130879",
    "end": "131920"
  },
  {
    "text": "to route the event appropriately okay",
    "start": "131920",
    "end": "134080"
  },
  {
    "text": "very very simple concept but we're",
    "start": "134080",
    "end": "135200"
  },
  {
    "text": "hearing lots of kudos from the community",
    "start": "135200",
    "end": "137120"
  },
  {
    "text": "how this is making life easier because",
    "start": "137120",
    "end": "138640"
  },
  {
    "text": "they no longer have to have specialized",
    "start": "138640",
    "end": "140319"
  },
  {
    "text": "middleware for every type of event",
    "start": "140319",
    "end": "142319"
  },
  {
    "text": "that flows through the system now",
    "start": "142319",
    "end": "143840"
  },
  {
    "text": "obviously the final destination still",
    "start": "143840",
    "end": "145280"
  },
  {
    "text": "needs to understand the event and the",
    "start": "145280",
    "end": "146400"
  },
  {
    "text": "business logic to get its job done",
    "start": "146400",
    "end": "148160"
  },
  {
    "text": "but in terms of routing this is the type",
    "start": "148160",
    "end": "150640"
  },
  {
    "text": "of information that should be the bare",
    "start": "150640",
    "end": "152000"
  },
  {
    "text": "minimum that people need to get their",
    "start": "152000",
    "end": "153200"
  },
  {
    "text": "job done",
    "start": "153200",
    "end": "154239"
  },
  {
    "text": "now this example right here is what we",
    "start": "154239",
    "end": "156000"
  },
  {
    "text": "call the binary format just adds a",
    "start": "156000",
    "end": "157440"
  },
  {
    "text": "couple http headers so your",
    "start": "157440",
    "end": "159040"
  },
  {
    "text": "your original message should remain",
    "start": "159040",
    "end": "160560"
  },
  {
    "text": "basically unchanged however there are",
    "start": "160560",
    "end": "162640"
  },
  {
    "text": "some people who wanted to",
    "start": "162640",
    "end": "163840"
  },
  {
    "text": "have everything encapsulated inside the",
    "start": "163840",
    "end": "165440"
  },
  {
    "text": "body as for those particular cases we",
    "start": "165440",
    "end": "167440"
  },
  {
    "text": "actually define",
    "start": "167440",
    "end": "168400"
  },
  {
    "text": "some syntax for example here in this",
    "start": "168400",
    "end": "170080"
  },
  {
    "text": "json version where we actually put",
    "start": "170080",
    "end": "171920"
  },
  {
    "text": "everything into the body itself but you",
    "start": "171920",
    "end": "173280"
  },
  {
    "text": "can see it's the exact same data right",
    "start": "173280",
    "end": "174800"
  },
  {
    "text": "you got the same four pieces of metadata",
    "start": "174800",
    "end": "176720"
  },
  {
    "text": "the content type of the data attribute",
    "start": "176720",
    "end": "179200"
  },
  {
    "text": "and the data",
    "start": "179200",
    "end": "179920"
  },
  {
    "text": "can hold the business logic right all",
    "start": "179920",
    "end": "182000"
  },
  {
    "text": "the exact same information",
    "start": "182000",
    "end": "183519"
  },
  {
    "text": "now the content type of http header",
    "start": "183519",
    "end": "185120"
  },
  {
    "text": "level obviously tells you that this is",
    "start": "185120",
    "end": "186640"
  },
  {
    "text": "not just a normal json object",
    "start": "186640",
    "end": "188159"
  },
  {
    "text": "or json payload but it's a cloud event",
    "start": "188159",
    "end": "190080"
  },
  {
    "text": "json payload so that's how you can",
    "start": "190080",
    "end": "191440"
  },
  {
    "text": "distinguish between the left-hand side",
    "start": "191440",
    "end": "193120"
  },
  {
    "text": "which is just application json which is",
    "start": "193120",
    "end": "194879"
  },
  {
    "text": "binary",
    "start": "194879",
    "end": "195920"
  },
  {
    "text": "and the structure side on the right hand",
    "start": "195920",
    "end": "197599"
  },
  {
    "text": "side which is application slash json or",
    "start": "197599",
    "end": "199599"
  },
  {
    "text": "a slash cloud events station okay",
    "start": "199599",
    "end": "202879"
  },
  {
    "text": "so that's it at a very very high level",
    "start": "202879",
    "end": "204319"
  },
  {
    "text": "very simple thing but we're getting lots",
    "start": "204319",
    "end": "205599"
  },
  {
    "text": "of kudos about it and lots of different",
    "start": "205599",
    "end": "206959"
  },
  {
    "text": "people are picking it up",
    "start": "206959",
    "end": "208159"
  },
  {
    "text": "across the industry um in terms of",
    "start": "208159",
    "end": "210879"
  },
  {
    "text": "deliverables",
    "start": "210879",
    "end": "211599"
  },
  {
    "text": "this is the big news we did go 1.0",
    "start": "211599",
    "end": "213840"
  },
  {
    "text": "fairly recently so yay for that",
    "start": "213840",
    "end": "216000"
  },
  {
    "text": "and in terms of what we're actually",
    "start": "216000",
    "end": "217280"
  },
  {
    "text": "producing we have different",
    "start": "217280",
    "end": "218720"
  },
  {
    "text": "specifications not just the spec itself",
    "start": "218720",
    "end": "220640"
  },
  {
    "text": "in terms of what the metadata is",
    "start": "220640",
    "end": "222480"
  },
  {
    "text": "but also how it appears in different",
    "start": "222480",
    "end": "224480"
  },
  {
    "text": "formats right http versus mqp that kind",
    "start": "224480",
    "end": "226640"
  },
  {
    "text": "of stuff",
    "start": "226640",
    "end": "227519"
  },
  {
    "text": "different encoding right i showed you",
    "start": "227519",
    "end": "229200"
  },
  {
    "text": "the json we also avro",
    "start": "229200",
    "end": "230879"
  },
  {
    "text": "and we also included a primer because",
    "start": "230879",
    "end": "232959"
  },
  {
    "text": "there are a lot of uh technical",
    "start": "232959",
    "end": "234239"
  },
  {
    "text": "decisions we made",
    "start": "234239",
    "end": "235360"
  },
  {
    "text": "which don't really go into a spec itself",
    "start": "235360",
    "end": "238560"
  },
  {
    "text": "but um we wanted to understand why we",
    "start": "238560",
    "end": "240480"
  },
  {
    "text": "made the decisions we made so we created",
    "start": "240480",
    "end": "241760"
  },
  {
    "text": "a primer as a background for people to",
    "start": "241760",
    "end": "243200"
  },
  {
    "text": "understand",
    "start": "243200",
    "end": "244000"
  },
  {
    "text": "some of the decisions we made and some",
    "start": "244000",
    "end": "245519"
  },
  {
    "text": "of the design choices now we do have",
    "start": "245519",
    "end": "247280"
  },
  {
    "text": "some sdks out there with a whole bunch",
    "start": "247280",
    "end": "248799"
  },
  {
    "text": "of different languages which you can see",
    "start": "248799",
    "end": "250000"
  },
  {
    "text": "on the screen",
    "start": "250000",
    "end": "251040"
  },
  {
    "text": "most of them are very very active um in",
    "start": "251040",
    "end": "253599"
  },
  {
    "text": "particular",
    "start": "253599",
    "end": "254080"
  },
  {
    "text": "the go one and the c sharp and",
    "start": "254080",
    "end": "255519"
  },
  {
    "text": "javascript and java are very very active",
    "start": "255519",
    "end": "257199"
  },
  {
    "text": "so please take a look at those and get a",
    "start": "257199",
    "end": "258560"
  },
  {
    "text": "chance",
    "start": "258560",
    "end": "259199"
  },
  {
    "text": "they're not that complicated they're",
    "start": "259199",
    "end": "260479"
  },
  {
    "text": "just mainly there helping you to",
    "start": "260479",
    "end": "261680"
  },
  {
    "text": "serialize and deserialize these cloud",
    "start": "261680",
    "end": "263199"
  },
  {
    "text": "events",
    "start": "263199",
    "end": "263840"
  },
  {
    "text": "okay so what's next for us obviously",
    "start": "263840",
    "end": "266000"
  },
  {
    "text": "more customer feedback now that it's out",
    "start": "266000",
    "end": "267440"
  },
  {
    "text": "there people tend to wait until things",
    "start": "267440",
    "end": "269120"
  },
  {
    "text": "go 1.0 before they adopt it",
    "start": "269120",
    "end": "270880"
  },
  {
    "text": "so we're hoping to get more feedback",
    "start": "270880",
    "end": "272080"
  },
  {
    "text": "from there and we have been getting",
    "start": "272080",
    "end": "273919"
  },
  {
    "text": "a lot of kudos so far as i said and",
    "start": "273919",
    "end": "276720"
  },
  {
    "text": "however beyond that though we're not",
    "start": "276720",
    "end": "278320"
  },
  {
    "text": "just you know sitting back and waiting",
    "start": "278320",
    "end": "279520"
  },
  {
    "text": "for that feedback we are",
    "start": "279520",
    "end": "280560"
  },
  {
    "text": "starting to look at what additional pain",
    "start": "280560",
    "end": "282560"
  },
  {
    "text": "points the community has",
    "start": "282560",
    "end": "283919"
  },
  {
    "text": "relative to the eventing space not just",
    "start": "283919",
    "end": "286720"
  },
  {
    "text": "for functions and services and stuff",
    "start": "286720",
    "end": "288320"
  },
  {
    "text": "like that but in general what are the",
    "start": "288320",
    "end": "289840"
  },
  {
    "text": "pain points",
    "start": "289840",
    "end": "290479"
  },
  {
    "text": "that people are experiencing okay and",
    "start": "290479",
    "end": "292639"
  },
  {
    "text": "with that let me then turn it over to",
    "start": "292639",
    "end": "294160"
  },
  {
    "text": "clements is going to talk about some of",
    "start": "294160",
    "end": "295280"
  },
  {
    "text": "these additional work items we're doing",
    "start": "295280",
    "end": "296880"
  },
  {
    "text": "specifically aimed at addressing some of",
    "start": "296880",
    "end": "298320"
  },
  {
    "text": "those paint points",
    "start": "298320",
    "end": "300080"
  },
  {
    "start": "299000",
    "end": "842000"
  },
  {
    "text": "yes and for those we have two",
    "start": "300080",
    "end": "303199"
  },
  {
    "text": "areas uh discovery in the subscription",
    "start": "303199",
    "end": "305280"
  },
  {
    "text": "apis and the schema registry which i'm",
    "start": "305280",
    "end": "307120"
  },
  {
    "text": "going to discuss",
    "start": "307120",
    "end": "308639"
  },
  {
    "text": "both um and um what's important to note",
    "start": "308639",
    "end": "312639"
  },
  {
    "text": "is that",
    "start": "312639",
    "end": "313199"
  },
  {
    "text": "we in cloud events we talk in the cloud",
    "start": "313199",
    "end": "315600"
  },
  {
    "text": "event core specification where we",
    "start": "315600",
    "end": "317919"
  },
  {
    "text": "um or set of specifications where we",
    "start": "317919",
    "end": "319600"
  },
  {
    "text": "have transport bindings",
    "start": "319600",
    "end": "321360"
  },
  {
    "text": "um and encodings we're really mostly",
    "start": "321360",
    "end": "324000"
  },
  {
    "text": "focusing on",
    "start": "324000",
    "end": "324880"
  },
  {
    "text": "on delivery of cloud events but that's",
    "start": "324880",
    "end": "327600"
  },
  {
    "text": "just the end of the story because before",
    "start": "327600",
    "end": "329600"
  },
  {
    "text": "you can deliver a cloud event you",
    "start": "329600",
    "end": "331120"
  },
  {
    "text": "obviously have to",
    "start": "331120",
    "end": "332560"
  },
  {
    "text": "um indicate um your interest in that",
    "start": "332560",
    "end": "336080"
  },
  {
    "text": "cloud event and then you also have to",
    "start": "336080",
    "end": "337840"
  },
  {
    "text": "find who's actually publishing that",
    "start": "337840",
    "end": "339520"
  },
  {
    "text": "cloud event and that's",
    "start": "339520",
    "end": "340880"
  },
  {
    "text": "the thing that we're tackling in this",
    "start": "340880",
    "end": "342880"
  },
  {
    "text": "next round of specifications that we're",
    "start": "342880",
    "end": "344479"
  },
  {
    "text": "working on",
    "start": "344479",
    "end": "346160"
  },
  {
    "text": "so the first element is how to",
    "start": "346160",
    "end": "349440"
  },
  {
    "text": "discover which cloud events are",
    "start": "349440",
    "end": "352000"
  },
  {
    "text": "available",
    "start": "352000",
    "end": "353039"
  },
  {
    "text": "for subscription today what you do",
    "start": "353039",
    "end": "356319"
  },
  {
    "text": "is you read read documentation typically",
    "start": "356319",
    "end": "360000"
  },
  {
    "text": "so you go on on the website",
    "start": "360000",
    "end": "361360"
  },
  {
    "text": "documentation website and you find a",
    "start": "361360",
    "end": "363199"
  },
  {
    "text": "list of",
    "start": "363199",
    "end": "364240"
  },
  {
    "text": "events that's being raised and for that",
    "start": "364240",
    "end": "366639"
  },
  {
    "text": "to be automatable we need to have a way",
    "start": "366639",
    "end": "368800"
  },
  {
    "text": "to",
    "start": "368800",
    "end": "369270"
  },
  {
    "text": "[Music]",
    "start": "369270",
    "end": "370880"
  },
  {
    "text": "learn about services be able to",
    "start": "370880",
    "end": "374560"
  },
  {
    "text": "filter those services based on some",
    "start": "374560",
    "end": "376960"
  },
  {
    "text": "criteria",
    "start": "376960",
    "end": "378160"
  },
  {
    "text": "and then learn about which",
    "start": "378160",
    "end": "381440"
  },
  {
    "text": "services exposed with which events or",
    "start": "381440",
    "end": "384319"
  },
  {
    "text": "reversely",
    "start": "384319",
    "end": "385440"
  },
  {
    "text": "um allow a knowing about some events",
    "start": "385440",
    "end": "388880"
  },
  {
    "text": "that you can handle",
    "start": "388880",
    "end": "389680"
  },
  {
    "text": "and then learning which services in your",
    "start": "389680",
    "end": "392080"
  },
  {
    "text": "vicinity",
    "start": "392080",
    "end": "393120"
  },
  {
    "text": "um or you know some other criteria are",
    "start": "393120",
    "end": "395840"
  },
  {
    "text": "supporting those events",
    "start": "395840",
    "end": "397759"
  },
  {
    "text": "so question is questions that we have is",
    "start": "397759",
    "end": "400080"
  },
  {
    "text": "who produces events",
    "start": "400080",
    "end": "401360"
  },
  {
    "text": "which represent events are produced uh",
    "start": "401360",
    "end": "403759"
  },
  {
    "text": "which subscription options are available",
    "start": "403759",
    "end": "405600"
  },
  {
    "text": "how do i",
    "start": "405600",
    "end": "406319"
  },
  {
    "text": "get the events delivered to to me and",
    "start": "406319",
    "end": "408880"
  },
  {
    "text": "then",
    "start": "408880",
    "end": "409520"
  },
  {
    "text": "where and how do i subscribe",
    "start": "409520",
    "end": "413520"
  },
  {
    "text": "next um so",
    "start": "413520",
    "end": "416560"
  },
  {
    "text": "what we've done here is we're not very",
    "start": "416560",
    "end": "419280"
  },
  {
    "text": "prescriptive and that's a",
    "start": "419280",
    "end": "420880"
  },
  {
    "text": "theme in cloud events overall as a",
    "start": "420880",
    "end": "423039"
  },
  {
    "text": "principle",
    "start": "423039",
    "end": "423919"
  },
  {
    "text": "that we're not prescriptive about how",
    "start": "423919",
    "end": "426400"
  },
  {
    "text": "you really how you should implement your",
    "start": "426400",
    "end": "428080"
  },
  {
    "text": "service",
    "start": "428080",
    "end": "428639"
  },
  {
    "text": "and there's no there may be some",
    "start": "428639",
    "end": "431199"
  },
  {
    "text": "reference implementations of these",
    "start": "431199",
    "end": "432560"
  },
  {
    "text": "things down the road but ultimately what",
    "start": "432560",
    "end": "434160"
  },
  {
    "text": "we're defining here are interfaces",
    "start": "434160",
    "end": "436240"
  },
  {
    "text": "so we are defining this abstractly a",
    "start": "436240",
    "end": "440319"
  },
  {
    "text": "data model that defines for instance",
    "start": "440319",
    "end": "443440"
  },
  {
    "text": "here in this in this way what a",
    "start": "443440",
    "end": "445759"
  },
  {
    "text": "service is for discovery and also",
    "start": "445759",
    "end": "448639"
  },
  {
    "text": "defines",
    "start": "448639",
    "end": "449599"
  },
  {
    "text": "and that's of obviously leaning on the",
    "start": "449599",
    "end": "451440"
  },
  {
    "text": "core specification that we have for",
    "start": "451440",
    "end": "452960"
  },
  {
    "text": "cloud events",
    "start": "452960",
    "end": "454000"
  },
  {
    "text": "and that defines what a type is",
    "start": "454000",
    "end": "457120"
  },
  {
    "text": "and then um in based on this",
    "start": "457120",
    "end": "460160"
  },
  {
    "text": "we then define a http",
    "start": "460160",
    "end": "463360"
  },
  {
    "text": "and a grpc api that we have today in the",
    "start": "463360",
    "end": "466400"
  },
  {
    "text": "drafts",
    "start": "466400",
    "end": "467360"
  },
  {
    "text": "and we might have further protocols such",
    "start": "467360",
    "end": "470560"
  },
  {
    "text": "as amqp",
    "start": "470560",
    "end": "472479"
  },
  {
    "text": "later so we define an interface and when",
    "start": "472479",
    "end": "475199"
  },
  {
    "text": "you",
    "start": "475199",
    "end": "475520"
  },
  {
    "text": "implement that interface then you have a",
    "start": "475520",
    "end": "478240"
  },
  {
    "text": "discovery service",
    "start": "478240",
    "end": "479840"
  },
  {
    "text": "um the the notion of service that's the",
    "start": "479840",
    "end": "482639"
  },
  {
    "text": "concept inside of the discovery service",
    "start": "482639",
    "end": "485520"
  },
  {
    "text": "is very simple it's just some software",
    "start": "485520",
    "end": "487280"
  },
  {
    "text": "entity that emits events",
    "start": "487280",
    "end": "488800"
  },
  {
    "text": "so that gets registered in the discovery",
    "start": "488800",
    "end": "490879"
  },
  {
    "text": "service",
    "start": "490879",
    "end": "492639"
  },
  {
    "text": "that service since it emits events",
    "start": "492639",
    "end": "495840"
  },
  {
    "text": "maintains a subscription endpoint and",
    "start": "495840",
    "end": "497440"
  },
  {
    "text": "really what the service description here",
    "start": "497440",
    "end": "499039"
  },
  {
    "text": "does",
    "start": "499039",
    "end": "499680"
  },
  {
    "text": "it just enumerates the types of events",
    "start": "499680",
    "end": "502160"
  },
  {
    "text": "um that are available for subscription",
    "start": "502160",
    "end": "504240"
  },
  {
    "text": "with some further uh information and",
    "start": "504240",
    "end": "507199"
  },
  {
    "text": "then",
    "start": "507199",
    "end": "507680"
  },
  {
    "text": "we have a type collection type",
    "start": "507680",
    "end": "509199"
  },
  {
    "text": "collections really for the reverse",
    "start": "509199",
    "end": "511280"
  },
  {
    "text": "lookup",
    "start": "511280",
    "end": "512000"
  },
  {
    "text": "of which services um are available and",
    "start": "512000",
    "end": "515039"
  },
  {
    "text": "um this is an interface that can be",
    "start": "515039",
    "end": "517200"
  },
  {
    "text": "implemented in one place or can be",
    "start": "517200",
    "end": "519200"
  },
  {
    "text": "implemented in multiple places",
    "start": "519200",
    "end": "521518"
  },
  {
    "text": "and it's obviously also allowed to",
    "start": "521519",
    "end": "523360"
  },
  {
    "text": "federate those discovery services so you",
    "start": "523360",
    "end": "525279"
  },
  {
    "text": "can really create a",
    "start": "525279",
    "end": "526959"
  },
  {
    "text": "um a catalog of services and you can",
    "start": "526959",
    "end": "529839"
  },
  {
    "text": "make those",
    "start": "529839",
    "end": "530480"
  },
  {
    "text": "that catalog available everywhere with",
    "start": "530480",
    "end": "532320"
  },
  {
    "text": "the same interface you can imagine",
    "start": "532320",
    "end": "534080"
  },
  {
    "text": "having a local cache that exists",
    "start": "534080",
    "end": "537920"
  },
  {
    "text": "somewhere near your consumers and makes",
    "start": "537920",
    "end": "540720"
  },
  {
    "text": "those available and of course",
    "start": "540720",
    "end": "542320"
  },
  {
    "text": "the discovery mechanism will also allow",
    "start": "542320",
    "end": "545760"
  },
  {
    "text": "the the catalog to be adjusted to",
    "start": "545760",
    "end": "548800"
  },
  {
    "text": "the circumstances that you have um you",
    "start": "548800",
    "end": "551200"
  },
  {
    "text": "know near your endpoint so if",
    "start": "551200",
    "end": "553040"
  },
  {
    "text": "it's required to subscribe via a",
    "start": "553040",
    "end": "555920"
  },
  {
    "text": "different subscription manager we're",
    "start": "555920",
    "end": "557519"
  },
  {
    "text": "going to get to that in a second",
    "start": "557519",
    "end": "559040"
  },
  {
    "text": "um to be able to deliver those",
    "start": "559040",
    "end": "562320"
  },
  {
    "text": "events into your um into your respective",
    "start": "562320",
    "end": "565519"
  },
  {
    "text": "endpoint that you have",
    "start": "565519",
    "end": "566959"
  },
  {
    "text": "and then that sort of um translation can",
    "start": "566959",
    "end": "569920"
  },
  {
    "text": "also be done",
    "start": "569920",
    "end": "570880"
  },
  {
    "text": "um in that discovery model it's not",
    "start": "570880",
    "end": "572480"
  },
  {
    "text": "expressed it's not it's not expressed or",
    "start": "572480",
    "end": "575200"
  },
  {
    "text": "explicitly because the interface is kept",
    "start": "575200",
    "end": "577360"
  },
  {
    "text": "very simple",
    "start": "577360",
    "end": "579040"
  },
  {
    "text": "but the flexibility is there to allow",
    "start": "579040",
    "end": "581600"
  },
  {
    "text": "this",
    "start": "581600",
    "end": "582959"
  },
  {
    "text": "next once you have discovered which",
    "start": "582959",
    "end": "586000"
  },
  {
    "text": "events are available",
    "start": "586000",
    "end": "588240"
  },
  {
    "text": "then you want to be able to um subscribe",
    "start": "588240",
    "end": "590959"
  },
  {
    "text": "to them and again today",
    "start": "590959",
    "end": "592640"
  },
  {
    "text": "in cloud events in the base car event",
    "start": "592640",
    "end": "594399"
  },
  {
    "text": "spec it's something that we've made",
    "start": "594399",
    "end": "596720"
  },
  {
    "text": "a matter of um of out of bands",
    "start": "596720",
    "end": "601279"
  },
  {
    "text": "agreements some protocols um for",
    "start": "601680",
    "end": "604880"
  },
  {
    "text": "instance amqp",
    "start": "604880",
    "end": "606160"
  },
  {
    "text": "or mqtt or",
    "start": "606160",
    "end": "610720"
  },
  {
    "text": "kafka already have built-in facilities",
    "start": "610959",
    "end": "614399"
  },
  {
    "text": "to subscribe so if you are designating a",
    "start": "614399",
    "end": "617040"
  },
  {
    "text": "subscription manager",
    "start": "617040",
    "end": "618079"
  },
  {
    "text": "that is a um a queue or sorry",
    "start": "618079",
    "end": "621920"
  },
  {
    "text": "or a topic inside of an event a message",
    "start": "621920",
    "end": "624160"
  },
  {
    "text": "broker then it's",
    "start": "624160",
    "end": "625680"
  },
  {
    "text": "implied effectively what that",
    "start": "625680",
    "end": "627279"
  },
  {
    "text": "subscription protocol is",
    "start": "627279",
    "end": "630000"
  },
  {
    "text": "if you're using mqp for instance and but",
    "start": "630000",
    "end": "632720"
  },
  {
    "text": "for",
    "start": "632720",
    "end": "633120"
  },
  {
    "text": "other for hdp for instance http doesn't",
    "start": "633120",
    "end": "635600"
  },
  {
    "text": "have a built-in",
    "start": "635600",
    "end": "637519"
  },
  {
    "text": "subscription notion so and even though",
    "start": "637519",
    "end": "640800"
  },
  {
    "text": "those subscription services are fairly",
    "start": "640800",
    "end": "643040"
  },
  {
    "text": "common or these construction patterns",
    "start": "643040",
    "end": "644640"
  },
  {
    "text": "are fairly common with",
    "start": "644640",
    "end": "646000"
  },
  {
    "text": "with web hooks it's something that we",
    "start": "646000",
    "end": "649040"
  },
  {
    "text": "have not",
    "start": "649040",
    "end": "649600"
  },
  {
    "text": "seen being sufficiently standardized",
    "start": "649600",
    "end": "652959"
  },
  {
    "text": "so we have to find a way to go and",
    "start": "652959",
    "end": "656720"
  },
  {
    "text": "create a specification that acknowledges",
    "start": "656720",
    "end": "658880"
  },
  {
    "text": "the existence of",
    "start": "658880",
    "end": "660480"
  },
  {
    "text": "these um existing protocols like mqp and",
    "start": "660480",
    "end": "664320"
  },
  {
    "text": "mqtt which have built-in subscription",
    "start": "664320",
    "end": "666240"
  },
  {
    "text": "notions",
    "start": "666240",
    "end": "667200"
  },
  {
    "text": "and then at the same time add a ability",
    "start": "667200",
    "end": "670000"
  },
  {
    "text": "for",
    "start": "670000",
    "end": "670880"
  },
  {
    "text": "protocols that don't have that like http",
    "start": "670880",
    "end": "673440"
  },
  {
    "text": "to also",
    "start": "673440",
    "end": "674399"
  },
  {
    "text": "allow you to do a subscription gesture",
    "start": "674399",
    "end": "676399"
  },
  {
    "text": "that's why we wrote the subscription api",
    "start": "676399",
    "end": "678480"
  },
  {
    "text": "the subscription api",
    "start": "678480",
    "end": "679839"
  },
  {
    "text": "specification acknowledges those or",
    "start": "679839",
    "end": "682720"
  },
  {
    "text": "enumerates the",
    "start": "682720",
    "end": "683839"
  },
  {
    "text": "subscription facilities that exist in",
    "start": "683839",
    "end": "686240"
  },
  {
    "text": "those other protocols",
    "start": "686240",
    "end": "688560"
  },
  {
    "text": "supported by cloud events and then",
    "start": "688560",
    "end": "691600"
  },
  {
    "text": "explicitly introduces an api which",
    "start": "691600",
    "end": "694640"
  },
  {
    "text": "can then be implemented using http or",
    "start": "694640",
    "end": "696880"
  },
  {
    "text": "can be implemented using grpc or",
    "start": "696880",
    "end": "699040"
  },
  {
    "text": "implemented any other",
    "start": "699040",
    "end": "700480"
  },
  {
    "text": "protocol that specifically needs this to",
    "start": "700480",
    "end": "703200"
  },
  {
    "text": "go",
    "start": "703200",
    "end": "703519"
  },
  {
    "text": "and effectively manage subscriptions",
    "start": "703519",
    "end": "706640"
  },
  {
    "text": "and for that we've introduced the notion",
    "start": "706640",
    "end": "708880"
  },
  {
    "text": "of a subscription manager",
    "start": "708880",
    "end": "710639"
  },
  {
    "text": "next so the subscription manager",
    "start": "710639",
    "end": "715279"
  },
  {
    "text": "is the one that implements the",
    "start": "715279",
    "end": "716639"
  },
  {
    "text": "subscription api and the subscription",
    "start": "716639",
    "end": "718320"
  },
  {
    "text": "manager might act",
    "start": "718320",
    "end": "719600"
  },
  {
    "text": "on behalf of itself so it may really be",
    "start": "719600",
    "end": "723200"
  },
  {
    "text": "the",
    "start": "723200",
    "end": "724079"
  },
  {
    "text": "the entity that emits those events but",
    "start": "724079",
    "end": "726000"
  },
  {
    "text": "it also may",
    "start": "726000",
    "end": "727279"
  },
  {
    "text": "act on behalf of others and so you have",
    "start": "727279",
    "end": "729680"
  },
  {
    "text": "that very often in",
    "start": "729680",
    "end": "731519"
  },
  {
    "text": "larger setups where you are you have",
    "start": "731519",
    "end": "734160"
  },
  {
    "text": "very very many producers",
    "start": "734160",
    "end": "735839"
  },
  {
    "text": "and those many producers produce events",
    "start": "735839",
    "end": "737920"
  },
  {
    "text": "into a",
    "start": "737920",
    "end": "739120"
  },
  {
    "text": "middleware of sorts and then if you are",
    "start": "739120",
    "end": "741200"
  },
  {
    "text": "interested in",
    "start": "741200",
    "end": "742880"
  },
  {
    "text": "events from a particular publisher or a",
    "start": "742880",
    "end": "745200"
  },
  {
    "text": "group of publishers then you are",
    "start": "745200",
    "end": "746880"
  },
  {
    "text": "subscribing on that middleware on behalf",
    "start": "746880",
    "end": "750320"
  },
  {
    "text": "of those producers so",
    "start": "750320",
    "end": "752000"
  },
  {
    "text": "one of the obvious examples here is",
    "start": "752000",
    "end": "754240"
  },
  {
    "text": "versus iot",
    "start": "754240",
    "end": "755519"
  },
  {
    "text": "where you have sometimes thousands and",
    "start": "755519",
    "end": "758320"
  },
  {
    "text": "or hundreds of thousands of devices",
    "start": "758320",
    "end": "760160"
  },
  {
    "text": "switching into a cloud endpoint and if",
    "start": "760160",
    "end": "762720"
  },
  {
    "text": "you're interested in",
    "start": "762720",
    "end": "763839"
  },
  {
    "text": "specific events um emitted by those",
    "start": "763839",
    "end": "767360"
  },
  {
    "text": "devices you would not subscribe to every",
    "start": "767360",
    "end": "769120"
  },
  {
    "text": "single device but you really would go",
    "start": "769120",
    "end": "770800"
  },
  {
    "text": "and go to the subscription manager",
    "start": "770800",
    "end": "772560"
  },
  {
    "text": "which has the pool of events to go and",
    "start": "772560",
    "end": "774639"
  },
  {
    "text": "pull out the events that you need",
    "start": "774639",
    "end": "776880"
  },
  {
    "text": "um for those subscription for the",
    "start": "776880",
    "end": "778959"
  },
  {
    "text": "subscription manager",
    "start": "778959",
    "end": "780240"
  },
  {
    "text": "um as said we're enumerating the",
    "start": "780240",
    "end": "782320"
  },
  {
    "text": "existing mechanisms of",
    "start": "782320",
    "end": "783760"
  },
  {
    "text": "existing protocols that we have defined",
    "start": "783760",
    "end": "785680"
  },
  {
    "text": "this http api",
    "start": "785680",
    "end": "787440"
  },
  {
    "text": "to help with the cases where more",
    "start": "787440",
    "end": "790560"
  },
  {
    "text": "api and api abstraction to help with the",
    "start": "790560",
    "end": "793279"
  },
  {
    "text": "cases where",
    "start": "793279",
    "end": "794480"
  },
  {
    "text": "that is not available we also have two",
    "start": "794480",
    "end": "797519"
  },
  {
    "text": "delivery styles and that is the push",
    "start": "797519",
    "end": "800880"
  },
  {
    "text": "delivery",
    "start": "800880",
    "end": "801600"
  },
  {
    "text": "and the pull delivery so we're we're",
    "start": "801600",
    "end": "803680"
  },
  {
    "text": "just distinguishing between those two",
    "start": "803680",
    "end": "806320"
  },
  {
    "text": "where typically for cloud events as",
    "start": "806320",
    "end": "809120"
  },
  {
    "text": "we've defined it",
    "start": "809120",
    "end": "810639"
  },
  {
    "text": "today most mostly the delivery is",
    "start": "810639",
    "end": "813519"
  },
  {
    "text": "assumed to be push",
    "start": "813519",
    "end": "814720"
  },
  {
    "text": "which means the producer or the",
    "start": "814720",
    "end": "817920"
  },
  {
    "text": "subscription manager acting on its",
    "start": "817920",
    "end": "819600"
  },
  {
    "text": "behalf pushes those events by",
    "start": "819600",
    "end": "821760"
  },
  {
    "text": "establishing connection",
    "start": "821760",
    "end": "823199"
  },
  {
    "text": "and sending the event along or",
    "start": "823199",
    "end": "827199"
  },
  {
    "text": "this can also now the definition here",
    "start": "827199",
    "end": "829920"
  },
  {
    "text": "allows for pull delivery style where you",
    "start": "829920",
    "end": "831760"
  },
  {
    "text": "are",
    "start": "831760",
    "end": "832399"
  },
  {
    "text": "effectively having the subscription",
    "start": "832399",
    "end": "834320"
  },
  {
    "text": "manager uh maintaining",
    "start": "834320",
    "end": "836480"
  },
  {
    "text": "a queue for instance on behalf of the",
    "start": "836480",
    "end": "839360"
  },
  {
    "text": "producer so both of those things are",
    "start": "839360",
    "end": "840959"
  },
  {
    "text": "possible",
    "start": "840959",
    "end": "843040"
  },
  {
    "start": "842000",
    "end": "1125000"
  },
  {
    "text": "next um so those were effectively",
    "start": "843040",
    "end": "845519"
  },
  {
    "text": "complementing the",
    "start": "845519",
    "end": "846560"
  },
  {
    "text": "the the mechanisms that we have today in",
    "start": "846560",
    "end": "849199"
  },
  {
    "text": "uh cloud events by",
    "start": "849199",
    "end": "850560"
  },
  {
    "text": "you know closing the loop we have",
    "start": "850560",
    "end": "852320"
  },
  {
    "text": "delivery something that's defined now",
    "start": "852320",
    "end": "854480"
  },
  {
    "text": "and now we have discovery and",
    "start": "854480",
    "end": "855600"
  },
  {
    "text": "subscription that we're adding to it",
    "start": "855600",
    "end": "858320"
  },
  {
    "text": "a really important further element is",
    "start": "858320",
    "end": "860079"
  },
  {
    "text": "schema registry next",
    "start": "860079",
    "end": "863440"
  },
  {
    "text": "every cloud event can carry a payload",
    "start": "865040",
    "end": "867600"
  },
  {
    "text": "with event details mostly formal",
    "start": "867600",
    "end": "869519"
  },
  {
    "text": "structured data",
    "start": "869519",
    "end": "871519"
  },
  {
    "text": "structured data if you're sending it or",
    "start": "871519",
    "end": "874000"
  },
  {
    "text": "sending it",
    "start": "874000",
    "end": "875040"
  },
  {
    "text": "to another party will require often for",
    "start": "875040",
    "end": "878079"
  },
  {
    "text": "that",
    "start": "878079",
    "end": "878480"
  },
  {
    "text": "other party to be able to validate",
    "start": "878480",
    "end": "880240"
  },
  {
    "text": "whether that structured data is correct",
    "start": "880240",
    "end": "882959"
  },
  {
    "text": "based on some syntactic rules that can",
    "start": "882959",
    "end": "886240"
  },
  {
    "text": "be expressed in",
    "start": "886240",
    "end": "887920"
  },
  {
    "text": "a schema and then there's",
    "start": "887920",
    "end": "890959"
  },
  {
    "text": "often also a need for serialization",
    "start": "890959",
    "end": "893120"
  },
  {
    "text": "where you want to have",
    "start": "893120",
    "end": "894160"
  },
  {
    "text": "an in-memory data structure to be",
    "start": "894160",
    "end": "895839"
  },
  {
    "text": "serialized out",
    "start": "895839",
    "end": "897199"
  },
  {
    "text": "using an efficient format",
    "start": "897199",
    "end": "900720"
  },
  {
    "text": "and those efficient formats often leave",
    "start": "900720",
    "end": "903199"
  },
  {
    "text": "the structural metadata out",
    "start": "903199",
    "end": "905279"
  },
  {
    "text": "like you're familiar with with what json",
    "start": "905279",
    "end": "907680"
  },
  {
    "text": "looks like json is very repetitive",
    "start": "907680",
    "end": "910079"
  },
  {
    "text": "and puts all the metadata elements and",
    "start": "910079",
    "end": "911839"
  },
  {
    "text": "the type information kind of",
    "start": "911839",
    "end": "913519"
  },
  {
    "text": "into the document itself and there's a",
    "start": "913519",
    "end": "915760"
  },
  {
    "text": "number of",
    "start": "915760",
    "end": "916720"
  },
  {
    "text": "far more efficient serialization formats",
    "start": "916720",
    "end": "919360"
  },
  {
    "text": "which don't do that and they keep",
    "start": "919360",
    "end": "921120"
  },
  {
    "text": "that information outside in in schema",
    "start": "921120",
    "end": "923440"
  },
  {
    "text": "documents but then once you use that",
    "start": "923440",
    "end": "925440"
  },
  {
    "text": "the question is where do you put those",
    "start": "925440",
    "end": "927360"
  },
  {
    "text": "documents so",
    "start": "927360",
    "end": "928639"
  },
  {
    "text": "the goal of the schema registry is to",
    "start": "928639",
    "end": "931120"
  },
  {
    "text": "allow",
    "start": "931120",
    "end": "931680"
  },
  {
    "text": "you to store these documents and access",
    "start": "931680",
    "end": "933680"
  },
  {
    "text": "access those documents in a consistent",
    "start": "933680",
    "end": "935600"
  },
  {
    "text": "way",
    "start": "935600",
    "end": "936079"
  },
  {
    "text": "so that you can go and pro and build",
    "start": "936079",
    "end": "938639"
  },
  {
    "text": "software elements",
    "start": "938639",
    "end": "940399"
  },
  {
    "text": "a serializer and a validator that can",
    "start": "940399",
    "end": "942959"
  },
  {
    "text": "then lean on those schemas and on hints",
    "start": "942959",
    "end": "944959"
  },
  {
    "text": "that come",
    "start": "944959",
    "end": "945680"
  },
  {
    "text": "with the event and then can go and",
    "start": "945680",
    "end": "949199"
  },
  {
    "text": "deserialize that structured data or",
    "start": "949199",
    "end": "950720"
  },
  {
    "text": "serialize that structured data",
    "start": "950720",
    "end": "952320"
  },
  {
    "text": "and the goal is for that to be project",
    "start": "952320",
    "end": "955600"
  },
  {
    "text": "neutral",
    "start": "955600",
    "end": "956240"
  },
  {
    "text": "and vendor neutral so that that works",
    "start": "956240",
    "end": "958720"
  },
  {
    "text": "for",
    "start": "958720",
    "end": "959680"
  },
  {
    "text": "cloud events but that also works for",
    "start": "959680",
    "end": "962320"
  },
  {
    "text": "other messaging and inventing",
    "start": "962320",
    "end": "963519"
  },
  {
    "text": "infrastructures because",
    "start": "963519",
    "end": "964720"
  },
  {
    "text": "we often see that things get born as",
    "start": "964720",
    "end": "967519"
  },
  {
    "text": "cloud events but then get forwarded",
    "start": "967519",
    "end": "969279"
  },
  {
    "text": "through other messaging infrastructures",
    "start": "969279",
    "end": "970959"
  },
  {
    "text": "as well",
    "start": "970959",
    "end": "971680"
  },
  {
    "text": "and so we don't want to constrain this",
    "start": "971680",
    "end": "973279"
  },
  {
    "text": "to the case of cloud events and cloud",
    "start": "973279",
    "end": "974880"
  },
  {
    "text": "events also",
    "start": "974880",
    "end": "976160"
  },
  {
    "text": "is um just using in",
    "start": "976160",
    "end": "979440"
  },
  {
    "text": "in the the binary format is just using a",
    "start": "979440",
    "end": "982320"
  },
  {
    "text": "message payload like any other",
    "start": "982320",
    "end": "984639"
  },
  {
    "text": "message or eventing use case would so it",
    "start": "984639",
    "end": "986959"
  },
  {
    "text": "would it doesn't simply doesn't make",
    "start": "986959",
    "end": "988399"
  },
  {
    "text": "sense to constrain the registry",
    "start": "988399",
    "end": "990560"
  },
  {
    "text": "just to cloud events use cases",
    "start": "990560",
    "end": "993600"
  },
  {
    "text": "next so that's one of the principles",
    "start": "993600",
    "end": "995759"
  },
  {
    "text": "that we have is",
    "start": "995759",
    "end": "997120"
  },
  {
    "text": "at the bottom what i just said that it",
    "start": "997120",
    "end": "998800"
  },
  {
    "text": "should be scenario neutral",
    "start": "998800",
    "end": "1000560"
  },
  {
    "text": "it should also be protocol neutral so",
    "start": "1000560",
    "end": "1002720"
  },
  {
    "text": "the registry data model is abstractly",
    "start": "1002720",
    "end": "1004800"
  },
  {
    "text": "defined and",
    "start": "1004800",
    "end": "1005680"
  },
  {
    "text": "the http binding that we have so setting",
    "start": "1005680",
    "end": "1009120"
  },
  {
    "text": "and receiving message schemas",
    "start": "1009120",
    "end": "1012399"
  },
  {
    "text": "via http that's well defined right now",
    "start": "1012399",
    "end": "1014639"
  },
  {
    "text": "with an open api document",
    "start": "1014639",
    "end": "1016560"
  },
  {
    "text": "but the the registry per se the the data",
    "start": "1016560",
    "end": "1019600"
  },
  {
    "text": "model is abstract",
    "start": "1019600",
    "end": "1020880"
  },
  {
    "text": "find and we allow it allows protocol",
    "start": "1020880",
    "end": "1024319"
  },
  {
    "text": "bindings and",
    "start": "1024319",
    "end": "1025199"
  },
  {
    "text": "we certainly anticipate to have an amqp",
    "start": "1025199",
    "end": "1027038"
  },
  {
    "text": "binding for this and",
    "start": "1027039",
    "end": "1028720"
  },
  {
    "text": "uh hopefully more bindings that somewhat",
    "start": "1028720",
    "end": "1031839"
  },
  {
    "text": "depends because it's a request",
    "start": "1031839",
    "end": "1033438"
  },
  {
    "text": "response model and request depends on",
    "start": "1033439",
    "end": "1036240"
  },
  {
    "text": "the capabilities of the respective",
    "start": "1036240",
    "end": "1037760"
  },
  {
    "text": "protocols but grpc is also certainly in",
    "start": "1037760",
    "end": "1039760"
  },
  {
    "text": "the cards",
    "start": "1039760",
    "end": "1041839"
  },
  {
    "text": "and of course we want to keep this as",
    "start": "1041839",
    "end": "1043038"
  },
  {
    "text": "simple as possible we don't want to turn",
    "start": "1043039",
    "end": "1044720"
  },
  {
    "text": "this into",
    "start": "1044720",
    "end": "1045678"
  },
  {
    "text": "a massive metadata store with",
    "start": "1045679",
    "end": "1050000"
  },
  {
    "text": "super powerful capabilities so there's",
    "start": "1050000",
    "end": "1052080"
  },
  {
    "text": "no um",
    "start": "1052080",
    "end": "1053520"
  },
  {
    "text": "goal here to rival the capabilities of",
    "start": "1053520",
    "end": "1056080"
  },
  {
    "text": "apache atlas or something like this",
    "start": "1056080",
    "end": "1058240"
  },
  {
    "text": "but really is like you should be able to",
    "start": "1058240",
    "end": "1060720"
  },
  {
    "text": "implement this",
    "start": "1060720",
    "end": "1061679"
  },
  {
    "text": "registry api over a plain file system or",
    "start": "1061679",
    "end": "1064480"
  },
  {
    "text": "a cloud blob store",
    "start": "1064480",
    "end": "1066000"
  },
  {
    "text": "and it's just there to store",
    "start": "1066000",
    "end": "1069600"
  },
  {
    "text": "those um store those schemas and manage",
    "start": "1069600",
    "end": "1072400"
  },
  {
    "text": "those schemas in the simplest possible",
    "start": "1072400",
    "end": "1073919"
  },
  {
    "text": "way while",
    "start": "1073919",
    "end": "1074799"
  },
  {
    "text": "while providing the core capabilities we",
    "start": "1074799",
    "end": "1077200"
  },
  {
    "text": "need next",
    "start": "1077200",
    "end": "1079440"
  },
  {
    "text": "so this complements the event delivery",
    "start": "1079440",
    "end": "1081280"
  },
  {
    "text": "model that i just talked about",
    "start": "1081280",
    "end": "1084080"
  },
  {
    "text": "um by allowing you the producers",
    "start": "1084080",
    "end": "1087120"
  },
  {
    "text": "to manage and validate or someone on",
    "start": "1087120",
    "end": "1089679"
  },
  {
    "text": "behalf of the producers to manage the",
    "start": "1089679",
    "end": "1091039"
  },
  {
    "text": "value of the schemas",
    "start": "1091039",
    "end": "1093360"
  },
  {
    "text": "and then really think about the data",
    "start": "1093360",
    "end": "1095919"
  },
  {
    "text": "field in the cloud event and how",
    "start": "1095919",
    "end": "1097760"
  },
  {
    "text": "that can be serialized and deserialized",
    "start": "1097760",
    "end": "1099840"
  },
  {
    "text": "and that model here what's in the green",
    "start": "1099840",
    "end": "1102240"
  },
  {
    "text": "um works for cloud events um as we have",
    "start": "1102240",
    "end": "1105280"
  },
  {
    "text": "defined it but also works for",
    "start": "1105280",
    "end": "1107840"
  },
  {
    "text": "other eventing scenarios as",
    "start": "1107840",
    "end": "1111280"
  },
  {
    "text": "well so this is kind of you for you to",
    "start": "1111280",
    "end": "1113280"
  },
  {
    "text": "to get visualize what this is about it's",
    "start": "1113280",
    "end": "1115520"
  },
  {
    "text": "really for serialization deserializing",
    "start": "1115520",
    "end": "1117360"
  },
  {
    "text": "or validation",
    "start": "1117360",
    "end": "1118480"
  },
  {
    "text": "on either side and it really pertains to",
    "start": "1118480",
    "end": "1120320"
  },
  {
    "text": "the data element",
    "start": "1120320",
    "end": "1121520"
  },
  {
    "text": "that sits inside of the cloud event next",
    "start": "1121520",
    "end": "1126160"
  },
  {
    "text": "finally the structure of the schemes of",
    "start": "1126799",
    "end": "1128960"
  },
  {
    "text": "this schema registry",
    "start": "1128960",
    "end": "1130640"
  },
  {
    "text": "we've structured this such that there is",
    "start": "1130640",
    "end": "1132160"
  },
  {
    "text": "a notion of groups",
    "start": "1132160",
    "end": "1134320"
  },
  {
    "text": "the group they can group so a schema",
    "start": "1134320",
    "end": "1136799"
  },
  {
    "text": "registry is split up into groups those",
    "start": "1136799",
    "end": "1138799"
  },
  {
    "text": "groups can be",
    "start": "1138799",
    "end": "1139919"
  },
  {
    "text": "by application or by some other criteria",
    "start": "1139919",
    "end": "1143120"
  },
  {
    "text": "they're really also there as an anchor",
    "start": "1143120",
    "end": "1145120"
  },
  {
    "text": "for access control so you may want to go",
    "start": "1145120",
    "end": "1147120"
  },
  {
    "text": "and",
    "start": "1147120",
    "end": "1147679"
  },
  {
    "text": "limit access to schemas by groups",
    "start": "1147679",
    "end": "1150480"
  },
  {
    "text": "because they may carry",
    "start": "1150480",
    "end": "1152400"
  },
  {
    "text": "important secrets so you don't want to",
    "start": "1152400",
    "end": "1154559"
  },
  {
    "text": "you know make them accessible to",
    "start": "1154559",
    "end": "1155760"
  },
  {
    "text": "everybody",
    "start": "1155760",
    "end": "1156640"
  },
  {
    "text": "then within that you have schemas which",
    "start": "1156640",
    "end": "1158400"
  },
  {
    "text": "really are containers for",
    "start": "1158400",
    "end": "1160480"
  },
  {
    "text": "sets of schema documents that represent",
    "start": "1160480",
    "end": "1162240"
  },
  {
    "text": "the same data structures",
    "start": "1162240",
    "end": "1164000"
  },
  {
    "text": "and then of course those those schemas",
    "start": "1164000",
    "end": "1166799"
  },
  {
    "text": "evolve and so the documents are really",
    "start": "1166799",
    "end": "1169600"
  },
  {
    "text": "the leaves of this we have various",
    "start": "1169600",
    "end": "1172240"
  },
  {
    "text": "schema versions starting with",
    "start": "1172240",
    "end": "1173760"
  },
  {
    "text": "schema version one where if you're",
    "start": "1173760",
    "end": "1176480"
  },
  {
    "text": "adding fields or if you're making fields",
    "start": "1176480",
    "end": "1178880"
  },
  {
    "text": "obsolete but you don't remove them then",
    "start": "1178880",
    "end": "1181280"
  },
  {
    "text": "you're still within the same bad words",
    "start": "1181280",
    "end": "1183120"
  },
  {
    "text": "compatible schema",
    "start": "1183120",
    "end": "1184480"
  },
  {
    "text": "um of generate generations",
    "start": "1184480",
    "end": "1187520"
  },
  {
    "text": "line of generations and that's why you",
    "start": "1187520",
    "end": "1189679"
  },
  {
    "text": "simply add schema versions we have some",
    "start": "1189679",
    "end": "1191360"
  },
  {
    "text": "rules for how to add and",
    "start": "1191360",
    "end": "1195120"
  },
  {
    "text": "manage those schemas so it's a very",
    "start": "1195120",
    "end": "1196960"
  },
  {
    "text": "simple structure",
    "start": "1196960",
    "end": "1198480"
  },
  {
    "text": "to manage effectively schema documents",
    "start": "1198480",
    "end": "1200960"
  },
  {
    "text": "next",
    "start": "1200960",
    "end": "1203279"
  },
  {
    "start": "1202000",
    "end": "1254000"
  },
  {
    "text": "and that's where we are uh we will",
    "start": "1204000",
    "end": "1207520"
  },
  {
    "text": "take some live questions um in",
    "start": "1207520",
    "end": "1210960"
  },
  {
    "text": "at the end of this presentation",
    "start": "1210960",
    "end": "1212400"
  },
  {
    "text": "following now um if you want to learn",
    "start": "1212400",
    "end": "1214880"
  },
  {
    "text": "more about cloud events go to cloud",
    "start": "1214880",
    "end": "1216320"
  },
  {
    "text": "events io",
    "start": "1216320",
    "end": "1218000"
  },
  {
    "text": "our specification repository is on",
    "start": "1218000",
    "end": "1220720"
  },
  {
    "text": "github on cloudevent",
    "start": "1220720",
    "end": "1222320"
  },
  {
    "text": "spec that's where you also will find the",
    "start": "1222320",
    "end": "1223760"
  },
  {
    "text": "latest versions of all of those things",
    "start": "1223760",
    "end": "1225280"
  },
  {
    "text": "and we also have",
    "start": "1225280",
    "end": "1226080"
  },
  {
    "text": "weekly calls thursdays at 12 p.m",
    "start": "1226080",
    "end": "1229679"
  },
  {
    "text": "eastern time us or 1800",
    "start": "1229679",
    "end": "1233039"
  },
  {
    "text": "central european time and in the repo is",
    "start": "1233039",
    "end": "1236320"
  },
  {
    "text": "also",
    "start": "1236320",
    "end": "1237039"
  },
  {
    "text": "the dial in information and then",
    "start": "1237039",
    "end": "1240320"
  },
  {
    "text": "um you can also follow doug and myself",
    "start": "1240320",
    "end": "1242720"
  },
  {
    "text": "on twitter or send us email if you have",
    "start": "1242720",
    "end": "1244559"
  },
  {
    "text": "any further",
    "start": "1244559",
    "end": "1247039"
  },
  {
    "text": "all questions cool thank you comments",
    "start": "1247760",
    "end": "1249360"
  },
  {
    "text": "all right thank you everybody we'll stop",
    "start": "1249360",
    "end": "1250480"
  },
  {
    "text": "recording here and take questions uh",
    "start": "1250480",
    "end": "1252159"
  },
  {
    "text": "live thank you all",
    "start": "1252159",
    "end": "1256240"
  }
]