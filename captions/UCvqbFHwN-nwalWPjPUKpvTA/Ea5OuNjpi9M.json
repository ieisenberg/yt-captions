[
  {
    "text": "hi everyone my name is Katina Onesik and",
    "start": "240",
    "end": "2879"
  },
  {
    "text": "I currently work as a SRA docker and",
    "start": "2879",
    "end": "4720"
  },
  {
    "text": "also a maintainer of envoy proxy project",
    "start": "4720",
    "end": "7279"
  },
  {
    "text": "uh very excited to attend CubeCon this",
    "start": "7279",
    "end": "9280"
  },
  {
    "text": "year here in London and share our",
    "start": "9280",
    "end": "11360"
  },
  {
    "text": "migration journey with you i'm here",
    "start": "11360",
    "end": "13200"
  },
  {
    "text": "today virtually with Ryan",
    "start": "13200",
    "end": "16960"
  },
  {
    "text": "hello everyone i'm Ryan and I'm an",
    "start": "16960",
    "end": "18800"
  },
  {
    "text": "infrastructure engineer at Docker and",
    "start": "18800",
    "end": "20400"
  },
  {
    "text": "I'm also really excited to be here with",
    "start": "20400",
    "end": "21840"
  },
  {
    "text": "you at CubeCon virtually i wish I could",
    "start": "21840",
    "end": "24240"
  },
  {
    "text": "have made it in person but I'm tuning in",
    "start": "24240",
    "end": "26000"
  },
  {
    "text": "for my honeymoon today we're going to",
    "start": "26000",
    "end": "28320"
  },
  {
    "text": "share how Docker redesigned its ingress",
    "start": "28320",
    "end": "30000"
  },
  {
    "text": "system and made the leap from our legacy",
    "start": "30000",
    "end": "31840"
  },
  {
    "text": "standalone harroxy and engineext stack",
    "start": "31840",
    "end": "34160"
  },
  {
    "text": "to a modern envoy gateway",
    "start": "34160",
    "end": "36760"
  },
  {
    "text": "solution we're going to dive right in",
    "start": "36760",
    "end": "39440"
  },
  {
    "text": "here we have a simplified overview of",
    "start": "39440",
    "end": "41680"
  },
  {
    "text": "our legacy ingress stack the typical",
    "start": "41680",
    "end": "44480"
  },
  {
    "text": "Docker Hub request follows this pattern",
    "start": "44480",
    "end": "46960"
  },
  {
    "text": "the client's request will go through the",
    "start": "46960",
    "end": "48800"
  },
  {
    "text": "external AWS network load balancer which",
    "start": "48800",
    "end": "51680"
  },
  {
    "text": "then arrives at our haroxy external",
    "start": "51680",
    "end": "54600"
  },
  {
    "text": "haroxy haroxy will determine here if",
    "start": "54600",
    "end": "57360"
  },
  {
    "text": "there are any abuse rate limits that are",
    "start": "57360",
    "end": "58960"
  },
  {
    "text": "being hit if not it's going to send the",
    "start": "58960",
    "end": "61440"
  },
  {
    "text": "request to engine",
    "start": "61440",
    "end": "62840"
  },
  {
    "text": "X once it sets EngineX it's going to",
    "start": "62840",
    "end": "65518"
  },
  {
    "text": "validate JWT tokens with Louisis scripts",
    "start": "65519",
    "end": "68240"
  },
  {
    "text": "it's going to check Reddus for session",
    "start": "68240",
    "end": "69680"
  },
  {
    "text": "revocation and it's going to forward",
    "start": "69680",
    "end": "71439"
  },
  {
    "text": "authenticated requests to the internal",
    "start": "71439",
    "end": "73360"
  },
  {
    "text": "network load balancer and internal",
    "start": "73360",
    "end": "77040"
  },
  {
    "text": "haroxy from here it's going to load",
    "start": "77240",
    "end": "79680"
  },
  {
    "text": "balance the request to the expected back",
    "start": "79680",
    "end": "81840"
  },
  {
    "text": "end",
    "start": "81840",
    "end": "83439"
  },
  {
    "text": "now this system has served us well over",
    "start": "83439",
    "end": "85520"
  },
  {
    "text": "the years uh but I'm going to be",
    "start": "85520",
    "end": "87520"
  },
  {
    "text": "covering three core components that make",
    "start": "87520",
    "end": "89360"
  },
  {
    "text": "the legacy stack unique and create major",
    "start": "89360",
    "end": "91600"
  },
  {
    "text": "pain points at Docker i'll be reviewing",
    "start": "91600",
    "end": "94079"
  },
  {
    "text": "the legacy console reliance engine X and",
    "start": "94079",
    "end": "96960"
  },
  {
    "text": "sidecar",
    "start": "96960",
    "end": "99240"
  },
  {
    "text": "blowup now I know this diagram is a lot",
    "start": "99240",
    "end": "101840"
  },
  {
    "text": "to digest and you don't need to fully",
    "start": "101840",
    "end": "103840"
  },
  {
    "text": "understand it we just wanted to",
    "start": "103840",
    "end": "105600"
  },
  {
    "text": "highlight the complexity of our previous",
    "start": "105600",
    "end": "107200"
  },
  {
    "text": "consensus protocol-based systems where",
    "start": "107200",
    "end": "110000"
  },
  {
    "text": "we heavily relied on console clients and",
    "start": "110000",
    "end": "112079"
  },
  {
    "text": "servers for key value store dynamic",
    "start": "112079",
    "end": "115320"
  },
  {
    "text": "reconfiguration and even in some cases",
    "start": "115320",
    "end": "117680"
  },
  {
    "text": "service",
    "start": "117680",
    "end": "118680"
  },
  {
    "text": "discovery running the console server and",
    "start": "118680",
    "end": "121040"
  },
  {
    "text": "client had introduced another critical",
    "start": "121040",
    "end": "122960"
  },
  {
    "text": "component that must remain highly",
    "start": "122960",
    "end": "125040"
  },
  {
    "text": "available for our ingress systems to",
    "start": "125040",
    "end": "126560"
  },
  {
    "text": "function this made our systems a lot",
    "start": "126560",
    "end": "128640"
  },
  {
    "text": "more fragile if console ever experienced",
    "start": "128640",
    "end": "130479"
  },
  {
    "text": "downtime or networking issues this led",
    "start": "130479",
    "end": "133120"
  },
  {
    "text": "us to look for a solution that could",
    "start": "133120",
    "end": "134560"
  },
  {
    "text": "solve this problem without all the extra",
    "start": "134560",
    "end": "136640"
  },
  {
    "text": "services and sidecars that we needed to",
    "start": "136640",
    "end": "140239"
  },
  {
    "text": "maintain engine X became a painoint",
    "start": "140280",
    "end": "142640"
  },
  {
    "text": "because it was introduced nearly 10",
    "start": "142640",
    "end": "144080"
  },
  {
    "text": "years ago to handle requirements haroxy",
    "start": "144080",
    "end": "146319"
  },
  {
    "text": "couldn't fulfill at the time this is",
    "start": "146319",
    "end": "148800"
  },
  {
    "text": "also handled by an external team which",
    "start": "148800",
    "end": "150879"
  },
  {
    "text": "creates an even larger functional gap",
    "start": "150879",
    "end": "152560"
  },
  {
    "text": "between the proxies it operates as an",
    "start": "152560",
    "end": "155280"
  },
  {
    "text": "additional proxy hop for nearly all of",
    "start": "155280",
    "end": "156959"
  },
  {
    "text": "our traffic which introduces unnecessary",
    "start": "156959",
    "end": "159440"
  },
  {
    "text": "latency complexity and maintenance",
    "start": "159440",
    "end": "162120"
  },
  {
    "text": "overhead enginex uses a set of Louisis",
    "start": "162120",
    "end": "165040"
  },
  {
    "text": "scripts that handle JWT-based",
    "start": "165040",
    "end": "167080"
  },
  {
    "text": "authentication rate limiting session",
    "start": "167080",
    "end": "169519"
  },
  {
    "text": "management and course configuration as a",
    "start": "169519",
    "end": "172319"
  },
  {
    "text": "result we're managing multiple rate",
    "start": "172319",
    "end": "174080"
  },
  {
    "text": "limiting and authentication mechanisms",
    "start": "174080",
    "end": "175760"
  },
  {
    "text": "across different layers which again",
    "start": "175760",
    "end": "177840"
  },
  {
    "text": "increases the operational overhead and",
    "start": "177840",
    "end": "179840"
  },
  {
    "text": "introduces a lot more potential points",
    "start": "179840",
    "end": "181599"
  },
  {
    "text": "of failure we needed a proxy that would",
    "start": "181599",
    "end": "184400"
  },
  {
    "text": "be able to consolidate haroxy and",
    "start": "184400",
    "end": "186560"
  },
  {
    "text": "engineext into a single",
    "start": "186560",
    "end": "189840"
  },
  {
    "text": "service running haroxy in our",
    "start": "190519",
    "end": "192800"
  },
  {
    "text": "environment required a complex ecosystem",
    "start": "192800",
    "end": "195200"
  },
  {
    "text": "of sidecars and supporting components in",
    "start": "195200",
    "end": "197280"
  },
  {
    "text": "order to meet our needs we had two init",
    "start": "197280",
    "end": "200319"
  },
  {
    "text": "containers that we needed for a healthy",
    "start": "200319",
    "end": "203280"
  },
  {
    "text": "haroxy startup we had our haroxy",
    "start": "203280",
    "end": "206239"
  },
  {
    "text": "container for handling all of our",
    "start": "206239",
    "end": "207760"
  },
  {
    "text": "traffic we had two sidecars for handling",
    "start": "207760",
    "end": "210560"
  },
  {
    "text": "dynamic configuration generation we had",
    "start": "210560",
    "end": "213120"
  },
  {
    "text": "two sidecars for log management two side",
    "start": "213120",
    "end": "215599"
  },
  {
    "text": "cars for additional monitoring and",
    "start": "215599",
    "end": "217519"
  },
  {
    "text": "lastly the haroxy controller as you can",
    "start": "217519",
    "end": "220720"
  },
  {
    "text": "imagine this increases our risk of",
    "start": "220720",
    "end": "222480"
  },
  {
    "text": "cascading failures requires careful",
    "start": "222480",
    "end": "224720"
  },
  {
    "text": "coordination across all of our",
    "start": "224720",
    "end": "226000"
  },
  {
    "text": "components it consumes a lot more",
    "start": "226000",
    "end": "228000"
  },
  {
    "text": "resources than we'd like and in general",
    "start": "228000",
    "end": "230080"
  },
  {
    "text": "it's just not a good time to debug",
    "start": "230080",
    "end": "232959"
  },
  {
    "text": "lastly Hgroxy does not natively support",
    "start": "232959",
    "end": "235599"
  },
  {
    "text": "open telemetry which is what all",
    "start": "235599",
    "end": "237439"
  },
  {
    "text": "services at Docker are using for our",
    "start": "237439",
    "end": "239159"
  },
  {
    "text": "tracing this left a massive hole in our",
    "start": "239159",
    "end": "241680"
  },
  {
    "text": "observability and was one of the many",
    "start": "241680",
    "end": "243439"
  },
  {
    "text": "selling points to this",
    "start": "243439",
    "end": "244920"
  },
  {
    "text": "migration overall this left us with a",
    "start": "244920",
    "end": "247599"
  },
  {
    "text": "lot to think about for what we needed to",
    "start": "247599",
    "end": "249439"
  },
  {
    "text": "fulfill uh for our next",
    "start": "249439",
    "end": "252519"
  },
  {
    "text": "proxy so we wrote down all of our",
    "start": "252519",
    "end": "254640"
  },
  {
    "text": "requirements and we started evaluating",
    "start": "254640",
    "end": "256959"
  },
  {
    "text": "proxies against them we've added our",
    "start": "256959",
    "end": "259359"
  },
  {
    "text": "technical requirements and criteria",
    "start": "259359",
    "end": "261040"
  },
  {
    "text": "evaluation for your benefit later if you",
    "start": "261040",
    "end": "262800"
  },
  {
    "text": "want to take a look uh but we're not",
    "start": "262800",
    "end": "264479"
  },
  {
    "text": "going to be covering everything here",
    "start": "264479",
    "end": "266639"
  },
  {
    "text": "when evaluating our proxies we heavily",
    "start": "266639",
    "end": "268880"
  },
  {
    "text": "favored features that were supported",
    "start": "268880",
    "end": "270479"
  },
  {
    "text": "natively rather than requiring any",
    "start": "270479",
    "end": "272639"
  },
  {
    "text": "custom extensibility to avoid that",
    "start": "272639",
    "end": "274960"
  },
  {
    "text": "script and sidecar blowout",
    "start": "274960",
    "end": "278240"
  },
  {
    "text": "we narrowed our proxy selection to envoy",
    "start": "278240",
    "end": "280400"
  },
  {
    "text": "and traffic with traffic offering",
    "start": "280400",
    "end": "282479"
  },
  {
    "text": "simpler runtime updates and golink based",
    "start": "282479",
    "end": "284759"
  },
  {
    "text": "extensibility but falling behind envoy",
    "start": "284759",
    "end": "287199"
  },
  {
    "text": "and high load performance and advanced",
    "start": "287199",
    "end": "288960"
  },
  {
    "text": "native",
    "start": "288960",
    "end": "289960"
  },
  {
    "text": "features envoy's dynamic XDS",
    "start": "289960",
    "end": "292840"
  },
  {
    "text": "reconfiguration robust community and",
    "start": "292840",
    "end": "295280"
  },
  {
    "text": "potential for go- based Wom extensions",
    "start": "295280",
    "end": "297600"
  },
  {
    "text": "made it the most efficient and strategic",
    "start": "297600",
    "end": "299280"
  },
  {
    "text": "choice for us it has a steeper learning",
    "start": "299280",
    "end": "301840"
  },
  {
    "text": "curve but our ability to contribute",
    "start": "301840",
    "end": "303600"
  },
  {
    "text": "upstream upstream thanks to uh Katarina",
    "start": "303600",
    "end": "306800"
  },
  {
    "text": "as an envoy maintainer gave us",
    "start": "306800",
    "end": "308400"
  },
  {
    "text": "confidence to move forward ultimately",
    "start": "308400",
    "end": "311280"
  },
  {
    "text": "both proxies were viable but Envoy",
    "start": "311280",
    "end": "313680"
  },
  {
    "text": "aligned best with our scale performance",
    "start": "313680",
    "end": "315600"
  },
  {
    "text": "efficiency and long-term strategy making",
    "start": "315600",
    "end": "318400"
  },
  {
    "text": "it the foundation for our ingress",
    "start": "318400",
    "end": "321720"
  },
  {
    "text": "migration so now we needed a way to",
    "start": "321720",
    "end": "325039"
  },
  {
    "text": "control and manage our new envoy",
    "start": "325039",
    "end": "327440"
  },
  {
    "text": "implementation so we debated three",
    "start": "327440",
    "end": "329919"
  },
  {
    "text": "custom uh custom methods a fully custom",
    "start": "329919",
    "end": "334080"
  },
  {
    "text": "control plane using envoys XDS APIs the",
    "start": "334080",
    "end": "337360"
  },
  {
    "text": "standard ingress object and the gateway",
    "start": "337360",
    "end": "339720"
  },
  {
    "text": "API we wanted to be able to provide our",
    "start": "339720",
    "end": "342320"
  },
  {
    "text": "internal developers an easy way to",
    "start": "342320",
    "end": "344240"
  },
  {
    "text": "manage their own routing and since our",
    "start": "344240",
    "end": "346400"
  },
  {
    "text": "application teams are already deeply",
    "start": "346400",
    "end": "347840"
  },
  {
    "text": "involved in Kubernetes having a",
    "start": "347840",
    "end": "349600"
  },
  {
    "text": "Kubernetes native solution was a major",
    "start": "349600",
    "end": "351600"
  },
  {
    "text": "selling point so although the fully",
    "start": "351600",
    "end": "354560"
  },
  {
    "text": "custom XDS approach offered full control",
    "start": "354560",
    "end": "356639"
  },
  {
    "text": "over onvoice configuration it required",
    "start": "356639",
    "end": "359199"
  },
  {
    "text": "significant engineering effort to build",
    "start": "359199",
    "end": "361360"
  },
  {
    "text": "maintain and to be easily consumed by",
    "start": "361360",
    "end": "363120"
  },
  {
    "text": "our developers this operational overhead",
    "start": "363120",
    "end": "365680"
  },
  {
    "text": "was too significant for our team to",
    "start": "365680",
    "end": "367280"
  },
  {
    "text": "manage so we leaned towards an already",
    "start": "367280",
    "end": "369520"
  },
  {
    "text": "built",
    "start": "369520",
    "end": "371080"
  },
  {
    "text": "solution off the bat Ingress was ruled",
    "start": "371080",
    "end": "373680"
  },
  {
    "text": "out quite early because it lacked the",
    "start": "373680",
    "end": "375120"
  },
  {
    "text": "complexity and customization that we",
    "start": "375120",
    "end": "377319"
  },
  {
    "text": "needed but that's when gateway API came",
    "start": "377319",
    "end": "379840"
  },
  {
    "text": "into focus at this time Envoy Gateway",
    "start": "379840",
    "end": "382319"
  },
  {
    "text": "had just graduated to general",
    "start": "382319",
    "end": "384000"
  },
  {
    "text": "availability and it looked pretty",
    "start": "384000",
    "end": "385360"
  },
  {
    "text": "promising it provided advanced routing",
    "start": "385360",
    "end": "387600"
  },
  {
    "text": "capabilities without forcing us to build",
    "start": "387600",
    "end": "389199"
  },
  {
    "text": "everything from scratch plus because it",
    "start": "389199",
    "end": "391440"
  },
  {
    "text": "was Kubernetes native it fits seamlessly",
    "start": "391440",
    "end": "393520"
  },
  {
    "text": "into the existing workflows and enabled",
    "start": "393520",
    "end": "395440"
  },
  {
    "text": "self-service routing for teams we",
    "start": "395440",
    "end": "398080"
  },
  {
    "text": "ultimately chose the gateway API for its",
    "start": "398080",
    "end": "399840"
  },
  {
    "text": "richer routing model operational",
    "start": "399840",
    "end": "401520"
  },
  {
    "text": "simplicity and alignment with Kubernetes",
    "start": "401520",
    "end": "403720"
  },
  {
    "text": "conventions this allowed us to focus on",
    "start": "403720",
    "end": "406000"
  },
  {
    "text": "delivering value rather than reinventing",
    "start": "406000",
    "end": "408240"
  },
  {
    "text": "infrastructure",
    "start": "408240",
    "end": "411240"
  },
  {
    "text": "next Katarina is going to review what",
    "start": "411520",
    "end": "413919"
  },
  {
    "text": "our new ingress architecture looks like",
    "start": "413919",
    "end": "417759"
  },
  {
    "text": "so on this slide you can see the highle",
    "start": "417759",
    "end": "419680"
  },
  {
    "text": "overview of how our new ingress looks",
    "start": "419680",
    "end": "422039"
  },
  {
    "text": "like uh the request flow starts with the",
    "start": "422039",
    "end": "425039"
  },
  {
    "text": "client or docker engineer connecting to",
    "start": "425039",
    "end": "426880"
  },
  {
    "text": "the dual stock Amazon elastic load",
    "start": "426880",
    "end": "428960"
  },
  {
    "text": "balancer which is L7 load balancer also",
    "start": "428960",
    "end": "431520"
  },
  {
    "text": "known as LB uh LB serve as entry point",
    "start": "431520",
    "end": "434479"
  },
  {
    "text": "to Docker network uh we split entry",
    "start": "434479",
    "end": "436880"
  },
  {
    "text": "point by traffic type it can e either be",
    "start": "436880",
    "end": "438960"
  },
  {
    "text": "external or internal traffic external",
    "start": "438960",
    "end": "441120"
  },
  {
    "text": "clients can connect with HTTPS or JRPC",
    "start": "441120",
    "end": "443360"
  },
  {
    "text": "while Docker engineers connect with uh",
    "start": "443360",
    "end": "445520"
  },
  {
    "text": "VPN plus HTTPS or JPC uh the role of Alb",
    "start": "445520",
    "end": "449520"
  },
  {
    "text": "is to perform the TLS termination do",
    "start": "449520",
    "end": "451599"
  },
  {
    "text": "hostbased routing and to load balance",
    "start": "451599",
    "end": "453520"
  },
  {
    "text": "traffic across the target proxy group",
    "start": "453520",
    "end": "455520"
  },
  {
    "text": "based on the health and capacity",
    "start": "455520",
    "end": "457039"
  },
  {
    "text": "statuses uh next after traffic has been",
    "start": "457039",
    "end": "460000"
  },
  {
    "text": "decrypted at LB host and path through",
    "start": "460000",
    "end": "462080"
  },
  {
    "text": "have been evaluated request is sent over",
    "start": "462080",
    "end": "464400"
  },
  {
    "text": "H1 or H2 connection to the selected envy",
    "start": "464400",
    "end": "466800"
  },
  {
    "text": "proxy instance proxies which are also",
    "start": "466800",
    "end": "468960"
  },
  {
    "text": "called data plane are grouped by pro",
    "start": "468960",
    "end": "470800"
  },
  {
    "text": "gateway each gateway serving specific",
    "start": "470800",
    "end": "472880"
  },
  {
    "text": "traffic type like for example external",
    "start": "472880",
    "end": "474720"
  },
  {
    "text": "or internal stable or canary and they",
    "start": "474720",
    "end": "476960"
  },
  {
    "text": "aggregate specific business logic for a",
    "start": "476960",
    "end": "478800"
  },
  {
    "text": "given traffic type uh for example at a",
    "start": "478800",
    "end": "480879"
  },
  {
    "text": "very high level let's take the external",
    "start": "480879",
    "end": "482560"
  },
  {
    "text": "gateway which offers rate limiting",
    "start": "482560",
    "end": "484080"
  },
  {
    "text": "geolocation decoration and",
    "start": "484080",
    "end": "485440"
  },
  {
    "text": "authentication for the external requests",
    "start": "485440",
    "end": "487759"
  },
  {
    "text": "envy proxy run request to their",
    "start": "487759",
    "end": "489440"
  },
  {
    "text": "corresponding filter chain applying the",
    "start": "489440",
    "end": "491120"
  },
  {
    "text": "business logic on the way and if the",
    "start": "491120",
    "end": "492960"
  },
  {
    "text": "request doesn't terminate at the proxy",
    "start": "492960",
    "end": "494639"
  },
  {
    "text": "instance for example due to the direct",
    "start": "494639",
    "end": "496160"
  },
  {
    "text": "response it is 10 load balance and proxy",
    "start": "496160",
    "end": "498479"
  },
  {
    "text": "to an instance of an upstream or back",
    "start": "498479",
    "end": "500160"
  },
  {
    "text": "end uh service user either H1 or JRPC",
    "start": "500160",
    "end": "504639"
  },
  {
    "text": "uh Docker makes heavy use of rate",
    "start": "504639",
    "end": "506240"
  },
  {
    "text": "limiting for the incoming request",
    "start": "506240",
    "end": "507759"
  },
  {
    "text": "therefore most of the traffic which",
    "start": "507759",
    "end": "509599"
  },
  {
    "text": "arrives to the proxy will be routed over",
    "start": "509599",
    "end": "511360"
  },
  {
    "text": "JRPC to a global rate limit service",
    "start": "511360",
    "end": "513760"
  },
  {
    "text": "first prior to being sent upstream uh we",
    "start": "513760",
    "end": "516240"
  },
  {
    "text": "utilize an implementation um uh uh open",
    "start": "516240",
    "end": "519440"
  },
  {
    "text": "source implementation of rate limiter",
    "start": "519440",
    "end": "521039"
  },
  {
    "text": "service called envoy proxy rate limiter",
    "start": "521039",
    "end": "522800"
  },
  {
    "text": "which is a go service and a part of",
    "start": "522800",
    "end": "524480"
  },
  {
    "text": "envoy ecosystem under the hood rate",
    "start": "524480",
    "end": "526880"
  },
  {
    "text": "limit component consist of the rate",
    "start": "526880",
    "end": "528480"
  },
  {
    "text": "limit service and the managed radius",
    "start": "528480",
    "end": "530080"
  },
  {
    "text": "instances uh rate limit service is",
    "start": "530080",
    "end": "532160"
  },
  {
    "text": "dynamically configured with XDS by the",
    "start": "532160",
    "end": "534320"
  },
  {
    "text": "control plane also called envoy gateway",
    "start": "534320",
    "end": "537120"
  },
  {
    "text": "speaking of the control plane which is",
    "start": "537120",
    "end": "538720"
  },
  {
    "text": "also known as anway gateway you can see",
    "start": "538720",
    "end": "540399"
  },
  {
    "text": "it here on the left hand side of the",
    "start": "540399",
    "end": "542160"
  },
  {
    "text": "diagram it is the foundational component",
    "start": "542160",
    "end": "544480"
  },
  {
    "text": "of the docker ingress ecosystem which",
    "start": "544480",
    "end": "546720"
  },
  {
    "text": "implements kubernetes gateway API",
    "start": "546720",
    "end": "548560"
  },
  {
    "text": "provision and manages infrastructure",
    "start": "548560",
    "end": "550320"
  },
  {
    "text": "components uh like data plane rate limit",
    "start": "550320",
    "end": "552800"
  },
  {
    "text": "service etc it is also responsible for",
    "start": "552800",
    "end": "555040"
  },
  {
    "text": "dynamic configuration of the data plane",
    "start": "555040",
    "end": "557040"
  },
  {
    "text": "layer and red limit service via delta",
    "start": "557040",
    "end": "559240"
  },
  {
    "text": "xds uh last but not least it consumes",
    "start": "559240",
    "end": "562000"
  },
  {
    "text": "validates and transforms a user",
    "start": "562000",
    "end": "563760"
  },
  {
    "text": "submitted kubernetes object like for",
    "start": "563760",
    "end": "565360"
  },
  {
    "text": "example http route back and traffic",
    "start": "565360",
    "end": "567279"
  },
  {
    "text": "policy into the native envoy",
    "start": "567279",
    "end": "569200"
  },
  {
    "text": "configuration",
    "start": "569200",
    "end": "571279"
  },
  {
    "text": "uh while working with envoy gateway API",
    "start": "571279",
    "end": "573279"
  },
  {
    "text": "the Ingress team made a decision to",
    "start": "573279",
    "end": "574880"
  },
  {
    "text": "introduce an internal abstraction layer",
    "start": "574880",
    "end": "576959"
  },
  {
    "text": "on top of that API docker engineers",
    "start": "576959",
    "end": "579519"
  },
  {
    "text": "would rely on that custom internal API",
    "start": "579519",
    "end": "581440"
  },
  {
    "text": "to configure routing for the service in",
    "start": "581440",
    "end": "583120"
  },
  {
    "text": "a decentralized manner uh internal API",
    "start": "583120",
    "end": "586480"
  },
  {
    "text": "acts at the wrapper chart for an gateway",
    "start": "586480",
    "end": "588560"
  },
  {
    "text": "API chart decision to introduce such a",
    "start": "588560",
    "end": "591600"
  },
  {
    "text": "abstraction layer was due to multiple",
    "start": "591600",
    "end": "593120"
  },
  {
    "text": "factors first of all we offer a bunch of",
    "start": "593120",
    "end": "595279"
  },
  {
    "text": "sensible defaults for the backend",
    "start": "595279",
    "end": "596720"
  },
  {
    "text": "service owners that covers most of the",
    "start": "596720",
    "end": "598399"
  },
  {
    "text": "use cases for Docker ecosystem and at",
    "start": "598399",
    "end": "600800"
  },
  {
    "text": "the same time we're making sure that our",
    "start": "600800",
    "end": "602560"
  },
  {
    "text": "increase system is being used in a",
    "start": "602560",
    "end": "604000"
  },
  {
    "text": "sensible way for example no one can",
    "start": "604000",
    "end": "606320"
  },
  {
    "text": "configure request amount for one hour",
    "start": "606320",
    "end": "608560"
  },
  {
    "text": "which would make our proxy buffer",
    "start": "608560",
    "end": "609920"
  },
  {
    "text": "requests for the service for 1 hour in",
    "start": "609920",
    "end": "611519"
  },
  {
    "text": "the worst case exhausting proxy memory",
    "start": "611519",
    "end": "614079"
  },
  {
    "text": "uh we abstract the complexity of gateway",
    "start": "614079",
    "end": "616079"
  },
  {
    "text": "API configuration surface for the",
    "start": "616079",
    "end": "617760"
  },
  {
    "text": "engineers so they can focus on",
    "start": "617760",
    "end": "619200"
  },
  {
    "text": "delivering features for the company uh",
    "start": "619200",
    "end": "621600"
  },
  {
    "text": "when users want to configure routing",
    "start": "621600",
    "end": "623360"
  },
  {
    "text": "through the our system we need to add uh",
    "start": "623360",
    "end": "625680"
  },
  {
    "text": "they just need to add our internal",
    "start": "625680",
    "end": "627040"
  },
  {
    "text": "gateway routing API chart as a",
    "start": "627040",
    "end": "628640"
  },
  {
    "text": "dependency here you can see the example",
    "start": "628640",
    "end": "630800"
  },
  {
    "text": "of such dependency on the right right",
    "start": "630800",
    "end": "632640"
  },
  {
    "text": "hand side uh and then uh after adding",
    "start": "632640",
    "end": "636000"
  },
  {
    "text": "such dependency it will download bunch",
    "start": "636000",
    "end": "637839"
  },
  {
    "text": "of handy templates like for example HTTP",
    "start": "637839",
    "end": "639680"
  },
  {
    "text": "router backend traffic policy uh and",
    "start": "639680",
    "end": "641680"
  },
  {
    "text": "they can use it for their configuration",
    "start": "641680",
    "end": "644800"
  },
  {
    "text": "uh here on the left hand side you can",
    "start": "644800",
    "end": "646640"
  },
  {
    "text": "see the example template for the back",
    "start": "646640",
    "end": "648240"
  },
  {
    "text": "end traffic policy where we prepopulate",
    "start": "648240",
    "end": "650399"
  },
  {
    "text": "bunch of default settings for the health",
    "start": "650399",
    "end": "651839"
  },
  {
    "text": "checkin and timeouts house check",
    "start": "651839",
    "end": "653839"
  },
  {
    "text": "configuration in envoy is rich and",
    "start": "653839",
    "end": "655440"
  },
  {
    "text": "complex so we abstract bunch of config",
    "start": "655440",
    "end": "657279"
  },
  {
    "text": "options from our users on the right hand",
    "start": "657279",
    "end": "659680"
  },
  {
    "text": "side there is an example of HTTP route",
    "start": "659680",
    "end": "661920"
  },
  {
    "text": "configuration where we hide the details",
    "start": "661920",
    "end": "663760"
  },
  {
    "text": "of attaching such route to the correct",
    "start": "663760",
    "end": "665760"
  },
  {
    "text": "set of the gateways user just need to",
    "start": "665760",
    "end": "667680"
  },
  {
    "text": "specify if it is uh if they expose uh",
    "start": "667680",
    "end": "670240"
  },
  {
    "text": "their traffic on external or internal",
    "start": "670240",
    "end": "673720"
  },
  {
    "text": "ingress and uh here on the slide you can",
    "start": "673720",
    "end": "676480"
  },
  {
    "text": "see uh the user how does the user flow",
    "start": "676480",
    "end": "679040"
  },
  {
    "text": "looks like when a user wants to expose a",
    "start": "679040",
    "end": "681360"
  },
  {
    "text": "service via new ingress it starts with",
    "start": "681360",
    "end": "683279"
  },
  {
    "text": "docker engineer defining HTTP routes",
    "start": "683279",
    "end": "685360"
  },
  {
    "text": "using our custom gateway routing API",
    "start": "685360",
    "end": "687760"
  },
  {
    "text": "chart uh the conflict links in their",
    "start": "687760",
    "end": "689920"
  },
  {
    "text": "service repository user submits the",
    "start": "689920",
    "end": "692000"
  },
  {
    "text": "conflict to Kubernetes cluster via",
    "start": "692000",
    "end": "693600"
  },
  {
    "text": "deployment pipeline within the cluster",
    "start": "693600",
    "end": "695680"
  },
  {
    "text": "there is an OPA agent running for those",
    "start": "695680",
    "end": "697600"
  },
  {
    "text": "who don't know OPA stands for open",
    "start": "697600",
    "end": "699200"
  },
  {
    "text": "policy agent uh the OPA agent validates",
    "start": "699200",
    "end": "702160"
  },
  {
    "text": "the routing config against its admission",
    "start": "702160",
    "end": "704000"
  },
  {
    "text": "rules uh one of such examples is it",
    "start": "704000",
    "end": "706399"
  },
  {
    "text": "checks that domain and path is not",
    "start": "706399",
    "end": "708000"
  },
  {
    "text": "already in use if the configuration",
    "start": "708000",
    "end": "710240"
  },
  {
    "text": "passes the OPA validation it's can",
    "start": "710240",
    "end": "712240"
  },
  {
    "text": "admitted and deployed to the Kubernetes",
    "start": "712240",
    "end": "713920"
  },
  {
    "text": "cluster after that it gets picked up by",
    "start": "713920",
    "end": "716240"
  },
  {
    "text": "the envoy gateway which monitors u the",
    "start": "716240",
    "end": "718800"
  },
  {
    "text": "objects like for example HTTP routes and",
    "start": "718800",
    "end": "720959"
  },
  {
    "text": "gets validated against gateway API",
    "start": "720959",
    "end": "722959"
  },
  {
    "text": "schema uh if validation is successful",
    "start": "722959",
    "end": "725200"
  },
  {
    "text": "the new routing config is transformed",
    "start": "725200",
    "end": "727120"
  },
  {
    "text": "into raw XDS representation and sent",
    "start": "727120",
    "end": "729200"
  },
  {
    "text": "over to the proxy layer uh proxy in turn",
    "start": "729200",
    "end": "731680"
  },
  {
    "text": "will also validate the supplied XDS",
    "start": "731680",
    "end": "733519"
  },
  {
    "text": "configuration and consume it if",
    "start": "733519",
    "end": "734959"
  },
  {
    "text": "validation is",
    "start": "734959",
    "end": "736600"
  },
  {
    "text": "passing so to sum it up we have managed",
    "start": "736600",
    "end": "739279"
  },
  {
    "text": "to s bunch of pain points with the new",
    "start": "739279",
    "end": "741120"
  },
  {
    "text": "ingress system we have reduced the",
    "start": "741120",
    "end": "743120"
  },
  {
    "text": "technology fragmentation by merging",
    "start": "743120",
    "end": "744880"
  },
  {
    "text": "multiple previously used proxy",
    "start": "744880",
    "end": "746320"
  },
  {
    "text": "technologies into a single envoy proxy",
    "start": "746320",
    "end": "748160"
  },
  {
    "text": "stack we have improved user experience",
    "start": "748160",
    "end": "750720"
  },
  {
    "text": "by providing Kubernetes native unified",
    "start": "750720",
    "end": "752720"
  },
  {
    "text": "routing API that users can interact with",
    "start": "752720",
    "end": "755040"
  },
  {
    "text": "in the centralized manner the overall",
    "start": "755040",
    "end": "757440"
  },
  {
    "text": "system reliability and availability has",
    "start": "757440",
    "end": "759440"
  },
  {
    "text": "been greatly improved with LB switch",
    "start": "759440",
    "end": "761279"
  },
  {
    "text": "canary support and splitting control and",
    "start": "761279",
    "end": "763200"
  },
  {
    "text": "enter plane layers uh we improved",
    "start": "763200",
    "end": "766079"
  },
  {
    "text": "request latency by eliminating multiple",
    "start": "766079",
    "end": "768160"
  },
  {
    "text": "proxy hops in the request path uh we",
    "start": "768160",
    "end": "770639"
  },
  {
    "text": "improved system throughput four times",
    "start": "770639",
    "end": "772320"
  },
  {
    "text": "and reduce number of used cores by 50%",
    "start": "772320",
    "end": "774639"
  },
  {
    "text": "which can uh even improved even more by",
    "start": "774639",
    "end": "777200"
  },
  {
    "text": "fine-tuning uh we offer our customers",
    "start": "777200",
    "end": "779440"
  },
  {
    "text": "more detailed observability and richer",
    "start": "779440",
    "end": "781279"
  },
  {
    "text": "tracing we switch to technology ST that",
    "start": "781279",
    "end": "783760"
  },
  {
    "text": "supports richer feature set and is",
    "start": "783760",
    "end": "785200"
  },
  {
    "text": "easier to extend in open for our future",
    "start": "785200",
    "end": "787519"
  },
  {
    "text": "needs instead of relying on the",
    "start": "787519",
    "end": "789360"
  },
  {
    "text": "enterprise features and now Ryan will",
    "start": "789360",
    "end": "792000"
  },
  {
    "text": "talk about how the u our migration",
    "start": "792000",
    "end": "794000"
  },
  {
    "text": "journey in more detail",
    "start": "794000",
    "end": "797519"
  },
  {
    "text": "to make our systems more dynamic for our",
    "start": "797519",
    "end": "799519"
  },
  {
    "text": "migration the first thing we had to do",
    "start": "799519",
    "end": "801120"
  },
  {
    "text": "was swap out our layer 4 network load",
    "start": "801120",
    "end": "803360"
  },
  {
    "text": "balancer or NLB with an application load",
    "start": "803360",
    "end": "806320"
  },
  {
    "text": "balancer or ALB operating on layer 7 in",
    "start": "806320",
    "end": "810320"
  },
  {
    "text": "order to handle the migration from NLB",
    "start": "810320",
    "end": "812320"
  },
  {
    "text": "to ALB we used Route 53 DNS weight",
    "start": "812320",
    "end": "815279"
  },
  {
    "text": "shifting to move a small slice of",
    "start": "815279",
    "end": "817279"
  },
  {
    "text": "traffic from the NLB to the ALB and",
    "start": "817279",
    "end": "819760"
  },
  {
    "text": "gradually increase the percentage as we",
    "start": "819760",
    "end": "821519"
  },
  {
    "text": "monitored the metrics one of the",
    "start": "821519",
    "end": "823680"
  },
  {
    "text": "challenges we saw during this migration",
    "start": "823680",
    "end": "825680"
  },
  {
    "text": "was the ALB's different way of appending",
    "start": "825680",
    "end": "828000"
  },
  {
    "text": "X forwarded four headers to be specific",
    "start": "828000",
    "end": "830800"
  },
  {
    "text": "it adds an additional internal IP",
    "start": "830800",
    "end": "832800"
  },
  {
    "text": "address of the load balancer itself onto",
    "start": "832800",
    "end": "835040"
  },
  {
    "text": "the into the XFFF chain this required",
    "start": "835040",
    "end": "837519"
  },
  {
    "text": "some modification on our applications to",
    "start": "837519",
    "end": "839120"
  },
  {
    "text": "account for",
    "start": "839120",
    "end": "840279"
  },
  {
    "text": "this weighted route 53 routing was an",
    "start": "840279",
    "end": "843839"
  },
  {
    "text": "amazing resource during our migration",
    "start": "843839",
    "end": "846160"
  },
  {
    "text": "but still has the limitations of DNS",
    "start": "846160",
    "end": "848959"
  },
  {
    "text": "specifically DNS caching at multiple",
    "start": "848959",
    "end": "851440"
  },
  {
    "text": "layers can delay changes and create",
    "start": "851440",
    "end": "853199"
  },
  {
    "text": "unpredictable traffic distribution which",
    "start": "853199",
    "end": "855600"
  },
  {
    "text": "means real-time failover is limited",
    "start": "855600",
    "end": "857440"
  },
  {
    "text": "because DNS updates take time to",
    "start": "857440",
    "end": "859480"
  },
  {
    "text": "propagate this makes rapid rerouting",
    "start": "859480",
    "end": "862519"
  },
  {
    "text": "difficult and since DNS operates only at",
    "start": "862519",
    "end": "865120"
  },
  {
    "text": "the domain level we couldn't rely on",
    "start": "865120",
    "end": "866880"
  },
  {
    "text": "this mechanism for service specific",
    "start": "866880",
    "end": "868480"
  },
  {
    "text": "path-based routing but once we had our",
    "start": "868480",
    "end": "871360"
  },
  {
    "text": "ALB serving our traffic we gained a lot",
    "start": "871360",
    "end": "873360"
  },
  {
    "text": "more",
    "start": "873360",
    "end": "875240"
  },
  {
    "text": "control in our previous architecture our",
    "start": "875240",
    "end": "878399"
  },
  {
    "text": "original setup traffic comes from the",
    "start": "878399",
    "end": "880800"
  },
  {
    "text": "client and goes through an NLB operating",
    "start": "880800",
    "end": "882720"
  },
  {
    "text": "on layer 4 it routes straight to haroxy",
    "start": "882720",
    "end": "885760"
  },
  {
    "text": "then the backend service this design was",
    "start": "885760",
    "end": "888480"
  },
  {
    "text": "simple and efficient but offered limited",
    "start": "888480",
    "end": "890560"
  },
  {
    "text": "flexibility for a",
    "start": "890560",
    "end": "892920"
  },
  {
    "text": "migration with the AOB now serving all",
    "start": "892920",
    "end": "895680"
  },
  {
    "text": "of our traffic we had powerful routing",
    "start": "895680",
    "end": "897680"
  },
  {
    "text": "rules that could be applied to domain",
    "start": "897680",
    "end": "899600"
  },
  {
    "text": "names and paths which allowed us to",
    "start": "899600",
    "end": "901519"
  },
  {
    "text": "migrate individual services one at a",
    "start": "901519",
    "end": "903680"
  },
  {
    "text": "time and unlike DNS weight shifting ALB",
    "start": "903680",
    "end": "907040"
  },
  {
    "text": "allowed instantaneous and accurate",
    "start": "907040",
    "end": "909199"
  },
  {
    "text": "traffic shifting mechanisms this was",
    "start": "909199",
    "end": "911279"
  },
  {
    "text": "huge if something went wrong in our",
    "start": "911279",
    "end": "913199"
  },
  {
    "text": "tests we could quickly roll back traffic",
    "start": "913199",
    "end": "915120"
  },
  {
    "text": "to use haroxy again we were now able to",
    "start": "915120",
    "end": "918480"
  },
  {
    "text": "do things like route 10% of service A",
    "start": "918480",
    "end": "920800"
  },
  {
    "text": "traffic to Envoy and leaving the other",
    "start": "920800",
    "end": "923040"
  },
  {
    "text": "90% on Haroxy and then we would continue",
    "start": "923040",
    "end": "926000"
  },
  {
    "text": "to do this with every single service",
    "start": "926000",
    "end": "927839"
  },
  {
    "text": "until all of them were migrated",
    "start": "927839",
    "end": "930560"
  },
  {
    "text": "this allowed for a slow controlled roll",
    "start": "930560",
    "end": "932959"
  },
  {
    "text": "out of Envoy with instantaneous",
    "start": "932959",
    "end": "934959"
  },
  {
    "text": "rollbacks if required the only caveat",
    "start": "934959",
    "end": "937519"
  },
  {
    "text": "being that ALB limits the number of",
    "start": "937519",
    "end": "939360"
  },
  {
    "text": "rules it can have to a hard limit of 200",
    "start": "939360",
    "end": "942160"
  },
  {
    "text": "but this was okay for",
    "start": "942160",
    "end": "944440"
  },
  {
    "text": "Docker so once we had all of our",
    "start": "944440",
    "end": "946800"
  },
  {
    "text": "services transitioned over to Envoy we",
    "start": "946800",
    "end": "948880"
  },
  {
    "text": "could simplify our environment we left",
    "start": "948880",
    "end": "951199"
  },
  {
    "text": "haroxy in the background in case of any",
    "start": "951199",
    "end": "953199"
  },
  {
    "text": "emergencies but our standard routes now",
    "start": "953199",
    "end": "955839"
  },
  {
    "text": "go through envoy and our ALB listener",
    "start": "955839",
    "end": "958079"
  },
  {
    "text": "defaulted to",
    "start": "958079",
    "end": "959480"
  },
  {
    "text": "envoy the ALB still sits in front and we",
    "start": "959480",
    "end": "962320"
  },
  {
    "text": "can use it to send a small traffic to",
    "start": "962320",
    "end": "964079"
  },
  {
    "text": "Canary envoy service if we're doing a",
    "start": "964079",
    "end": "965839"
  },
  {
    "text": "new version or feature rollout and",
    "start": "965839",
    "end": "967680"
  },
  {
    "text": "because it's an ALB we can specify",
    "start": "967680",
    "end": "969519"
  },
  {
    "text": "exactly how much traffic we want going",
    "start": "969519",
    "end": "971120"
  },
  {
    "text": "to that canary so it doesn't have to",
    "start": "971120",
    "end": "972959"
  },
  {
    "text": "depend on a ratio of pod counts or other",
    "start": "972959",
    "end": "975120"
  },
  {
    "text": "imprecise methods this kind of fine",
    "start": "975120",
    "end": "977680"
  },
  {
    "text": "grain control lets us push changes more",
    "start": "977680",
    "end": "979680"
  },
  {
    "text": "confidently and keep an easy roll back",
    "start": "979680",
    "end": "981600"
  },
  {
    "text": "path open if any issues come",
    "start": "981600",
    "end": "984839"
  },
  {
    "text": "up so all of our application load",
    "start": "984839",
    "end": "987519"
  },
  {
    "text": "balancer or ALB components are built",
    "start": "987519",
    "end": "989839"
  },
  {
    "text": "managing built and managed using the AWS",
    "start": "989839",
    "end": "992639"
  },
  {
    "text": "load balancer controller this allows us",
    "start": "992639",
    "end": "995199"
  },
  {
    "text": "to manage these components on the fly",
    "start": "995199",
    "end": "997040"
  },
  {
    "text": "without needing to use slow yet powerful",
    "start": "997040",
    "end": "999120"
  },
  {
    "text": "building tools like Terraform to the",
    "start": "999120",
    "end": "1001600"
  },
  {
    "text": "left is where we manage the traffic",
    "start": "1001600",
    "end": "1003440"
  },
  {
    "text": "weight shifting to where the ALB will",
    "start": "1003440",
    "end": "1005199"
  },
  {
    "text": "send its traffic",
    "start": "1005199",
    "end": "1006639"
  },
  {
    "text": "each load balancer forwarding rule has",
    "start": "1006639",
    "end": "1008480"
  },
  {
    "text": "specified weights designated for each",
    "start": "1008480",
    "end": "1010720"
  },
  {
    "text": "backend which gives us the flexibility",
    "start": "1010720",
    "end": "1012560"
  },
  {
    "text": "to control our traffic at a high",
    "start": "1012560",
    "end": "1014759"
  },
  {
    "text": "level and to the right is how we set the",
    "start": "1014759",
    "end": "1017440"
  },
  {
    "text": "domains paths and references for the",
    "start": "1017440",
    "end": "1020320"
  },
  {
    "text": "unique forwarding rules that are built",
    "start": "1020320",
    "end": "1022639"
  },
  {
    "text": "in the",
    "start": "1022639",
    "end": "1023480"
  },
  {
    "text": "annotations this allows us to migrate",
    "start": "1023480",
    "end": "1025918"
  },
  {
    "text": "single services one at a time",
    "start": "1025919",
    "end": "1030360"
  },
  {
    "text": "so to clarify what this configuration",
    "start": "1030480",
    "end": "1032480"
  },
  {
    "text": "looks like in action here's an example",
    "start": "1032480",
    "end": "1034400"
  },
  {
    "text": "of how we would consume that Helm chart",
    "start": "1034400",
    "end": "1037038"
  },
  {
    "text": "the first service registry is a fully",
    "start": "1037039",
    "end": "1039520"
  },
  {
    "text": "migrated service in this example we're",
    "start": "1039520",
    "end": "1042000"
  },
  {
    "text": "sending 90% of registry traffic to Envoy",
    "start": "1042000",
    "end": "1044640"
  },
  {
    "text": "with 10% of our canary traffic 10% of",
    "start": "1044640",
    "end": "1047760"
  },
  {
    "text": "our traffic to Canary Envoy whereas for",
    "start": "1047760",
    "end": "1050720"
  },
  {
    "text": "the second example with accounts this",
    "start": "1050720",
    "end": "1052880"
  },
  {
    "text": "represents an ongoing migration service",
    "start": "1052880",
    "end": "1055440"
  },
  {
    "text": "where 90% of our traffic is still being",
    "start": "1055440",
    "end": "1057520"
  },
  {
    "text": "sent to our legacy HA proxy stack and",
    "start": "1057520",
    "end": "1060160"
  },
  {
    "text": "10% to our new envoy stack as you can",
    "start": "1060160",
    "end": "1063440"
  },
  {
    "text": "see this level of flexibility and roll",
    "start": "1063440",
    "end": "1065200"
  },
  {
    "text": "back controls control allows for smooth",
    "start": "1065200",
    "end": "1068000"
  },
  {
    "text": "migration",
    "start": "1068000",
    "end": "1069559"
  },
  {
    "text": "process anyway that's all for me so",
    "start": "1069559",
    "end": "1072000"
  },
  {
    "text": "thank you for listening and I hope you",
    "start": "1072000",
    "end": "1073280"
  },
  {
    "text": "enjoy your CubeCon uh next Katarina is",
    "start": "1073280",
    "end": "1075919"
  },
  {
    "text": "going to be reflecting on our migration",
    "start": "1075919",
    "end": "1077600"
  },
  {
    "text": "and technology adoptions",
    "start": "1077600",
    "end": "1081280"
  },
  {
    "text": "uh building a more than reliable and",
    "start": "1083360",
    "end": "1085360"
  },
  {
    "text": "performance system for our customers was",
    "start": "1085360",
    "end": "1087679"
  },
  {
    "text": "still an was and still an exciting",
    "start": "1087679",
    "end": "1090000"
  },
  {
    "text": "journey for us rich feature set offered",
    "start": "1090000",
    "end": "1092160"
  },
  {
    "text": "by Anvoy and Envoy Gateway project",
    "start": "1092160",
    "end": "1094080"
  },
  {
    "text": "covered most of our needed use cases we",
    "start": "1094080",
    "end": "1096400"
  },
  {
    "text": "are pleased to collaborate with friendly",
    "start": "1096400",
    "end": "1097919"
  },
  {
    "text": "and supportive envoy community who",
    "start": "1097919",
    "end": "1099600"
  },
  {
    "text": "helped us to navigate the tech landscape",
    "start": "1099600",
    "end": "1101360"
  },
  {
    "text": "to troubleshoot issues to deliver",
    "start": "1101360",
    "end": "1103039"
  },
  {
    "text": "features and to review our PRs ability",
    "start": "1103039",
    "end": "1105919"
  },
  {
    "text": "to do canary deployments and fast",
    "start": "1105919",
    "end": "1107440"
  },
  {
    "text": "rollbacks with LB gave us confidence",
    "start": "1107440",
    "end": "1109200"
  },
  {
    "text": "during the migration and help us to",
    "start": "1109200",
    "end": "1110720"
  },
  {
    "text": "detect problems early however there were",
    "start": "1110720",
    "end": "1113280"
  },
  {
    "text": "also certain challenges that slowed us",
    "start": "1113280",
    "end": "1115120"
  },
  {
    "text": "down there was definitely a learning",
    "start": "1115120",
    "end": "1117280"
  },
  {
    "text": "curve for adopting new complex",
    "start": "1117280",
    "end": "1118720"
  },
  {
    "text": "technologies getting familiar with",
    "start": "1118720",
    "end": "1120160"
  },
  {
    "text": "Kubernetes gateway API and anway",
    "start": "1120160",
    "end": "1122200"
  },
  {
    "text": "ecosystem uh the uh envoy gateway",
    "start": "1122200",
    "end": "1125039"
  },
  {
    "text": "documentation sometimes uh lagged behind",
    "start": "1125039",
    "end": "1127120"
  },
  {
    "text": "the actual implementation so we had to",
    "start": "1127120",
    "end": "1129280"
  },
  {
    "text": "use uh the source code to understand",
    "start": "1129280",
    "end": "1131200"
  },
  {
    "text": "what's going on and at the time of the",
    "start": "1131200",
    "end": "1133280"
  },
  {
    "text": "migration the multiple features were not",
    "start": "1133280",
    "end": "1134960"
  },
  {
    "text": "supported by gateway API so we had to",
    "start": "1134960",
    "end": "1136880"
  },
  {
    "text": "fall back to the raw XDS anway",
    "start": "1136880",
    "end": "1140760"
  },
  {
    "text": "API uh as previously mentioned some",
    "start": "1140760",
    "end": "1143120"
  },
  {
    "text": "features at the moment of the migration",
    "start": "1143120",
    "end": "1144320"
  },
  {
    "text": "were not yet implemented in an gateway",
    "start": "1144320",
    "end": "1146000"
  },
  {
    "text": "API like for example GI global rate",
    "start": "1146000",
    "end": "1148080"
  },
  {
    "text": "limiting and IP tagging uh that didn't",
    "start": "1148080",
    "end": "1150400"
  },
  {
    "text": "mean that we couldn't configure those",
    "start": "1150400",
    "end": "1151760"
  },
  {
    "text": "features uh in Anva gateway API there is",
    "start": "1151760",
    "end": "1154240"
  },
  {
    "text": "two alternatives how you can uh",
    "start": "1154240",
    "end": "1156000"
  },
  {
    "text": "configure features that are not yet",
    "start": "1156000",
    "end": "1157440"
  },
  {
    "text": "supported in the API uh one option is",
    "start": "1157440",
    "end": "1160160"
  },
  {
    "text": "users can extend the functionality by",
    "start": "1160160",
    "end": "1161919"
  },
  {
    "text": "extending the uh control plane and",
    "start": "1161919",
    "end": "1163919"
  },
  {
    "text": "adding JPC hooks to modify the generated",
    "start": "1163919",
    "end": "1166000"
  },
  {
    "text": "XDS configuration and another",
    "start": "1166000",
    "end": "1168080"
  },
  {
    "text": "alternative is to use envoy uh patch",
    "start": "1168080",
    "end": "1170320"
  },
  {
    "text": "policy mechanism which is unstable uh",
    "start": "1170320",
    "end": "1172240"
  },
  {
    "text": "API that allows users to modify the",
    "start": "1172240",
    "end": "1174559"
  },
  {
    "text": "generated envoy XDS configuration uh",
    "start": "1174559",
    "end": "1177039"
  },
  {
    "text": "that envoy gateway generates before",
    "start": "1177039",
    "end": "1178720"
  },
  {
    "text": "sending it to envoy proxy we selected",
    "start": "1178720",
    "end": "1181039"
  },
  {
    "text": "the second option uh because we didn't",
    "start": "1181039",
    "end": "1182799"
  },
  {
    "text": "want to develop and maintain yet another",
    "start": "1182799",
    "end": "1184720"
  },
  {
    "text": "new service uh plus envoy patch policy",
    "start": "1184720",
    "end": "1187440"
  },
  {
    "text": "acted as an extension of Kubernetes",
    "start": "1187440",
    "end": "1189200"
  },
  {
    "text": "native API which was allows us for",
    "start": "1189200",
    "end": "1191200"
  },
  {
    "text": "smooth integration to our custom",
    "start": "1191200",
    "end": "1192960"
  },
  {
    "text": "policies into Kubernetes so on the right",
    "start": "1192960",
    "end": "1195919"
  },
  {
    "text": "hand side here you can see uh the",
    "start": "1195919",
    "end": "1198080"
  },
  {
    "text": "configuration for the entire filter",
    "start": "1198080",
    "end": "1199760"
  },
  {
    "text": "chain how it looks like in the XDS patch",
    "start": "1199760",
    "end": "1201760"
  },
  {
    "text": "policy format it's quite verbose and",
    "start": "1201760",
    "end": "1203679"
  },
  {
    "text": "requires underlying knowledge on how to",
    "start": "1203679",
    "end": "1205360"
  },
  {
    "text": "configure each individual filter in",
    "start": "1205360",
    "end": "1207280"
  },
  {
    "text": "envoy format um and you may ask yourself",
    "start": "1207280",
    "end": "1210480"
  },
  {
    "text": "so why do you need to configure entire",
    "start": "1210480",
    "end": "1212400"
  },
  {
    "text": "filter chain via XDS patching policy if",
    "start": "1212400",
    "end": "1214480"
  },
  {
    "text": "some features are already available in g",
    "start": "1214480",
    "end": "1216400"
  },
  {
    "text": "API can't you do like a partial enable",
    "start": "1216400",
    "end": "1218320"
  },
  {
    "text": "some gateway API and some via patch",
    "start": "1218320",
    "end": "1220000"
  },
  {
    "text": "policy so good question turn out there",
    "start": "1220000",
    "end": "1222559"
  },
  {
    "text": "is no definite merge strategy support",
    "start": "1222559",
    "end": "1224960"
  },
  {
    "text": "for features defined in gateway API and",
    "start": "1224960",
    "end": "1226880"
  },
  {
    "text": "XDS patching API uh when partially",
    "start": "1226880",
    "end": "1229360"
  },
  {
    "text": "enabling features in Gway API we got",
    "start": "1229360",
    "end": "1231280"
  },
  {
    "text": "unpredictable merging results and it's",
    "start": "1231280",
    "end": "1233120"
  },
  {
    "text": "also not possible to specify in order in",
    "start": "1233120",
    "end": "1235280"
  },
  {
    "text": "which such features will be merged for",
    "start": "1235280",
    "end": "1237280"
  },
  {
    "text": "example if you wanted rate limiter",
    "start": "1237280",
    "end": "1238799"
  },
  {
    "text": "filter to go first in the filter chain",
    "start": "1238799",
    "end": "1241200"
  },
  {
    "text": "maybe Aron knows it's possible now but",
    "start": "1241200",
    "end": "1243039"
  },
  {
    "text": "at the moment it wasn't uh so here is an",
    "start": "1243039",
    "end": "1245919"
  },
  {
    "text": "example for you where we did one",
    "start": "1245919",
    "end": "1247280"
  },
  {
    "text": "experiment and we tried to enable the",
    "start": "1247280",
    "end": "1249200"
  },
  {
    "text": "connection limit feature um this is a",
    "start": "1249200",
    "end": "1251919"
  },
  {
    "text": "kind of overload protection feature in",
    "start": "1251919",
    "end": "1254080"
  },
  {
    "text": "envoy where uh you can limit the number",
    "start": "1254080",
    "end": "1256400"
  },
  {
    "text": "of downstream connections which would",
    "start": "1256400",
    "end": "1258000"
  },
  {
    "text": "transform into anoway filter so we did a",
    "start": "1258000",
    "end": "1260480"
  },
  {
    "text": "test and we patched a client traffic",
    "start": "1260480",
    "end": "1262159"
  },
  {
    "text": "policy and enabled this uh connection",
    "start": "1262159",
    "end": "1265120"
  },
  {
    "text": "limit feature you can see 1,00 uh value",
    "start": "1265120",
    "end": "1267919"
  },
  {
    "text": "here so we uh patched the client traffic",
    "start": "1267919",
    "end": "1270000"
  },
  {
    "text": "policy we submitted it to Kubernetes",
    "start": "1270000",
    "end": "1271760"
  },
  {
    "text": "cluster it got picked up so the",
    "start": "1271760",
    "end": "1273679"
  },
  {
    "text": "expectation was this feature gets merged",
    "start": "1273679",
    "end": "1275440"
  },
  {
    "text": "with the previous filter chain that you",
    "start": "1275440",
    "end": "1277200"
  },
  {
    "text": "saw on the previous slide uh but when we",
    "start": "1277200",
    "end": "1279679"
  },
  {
    "text": "checked the resultant filter chain on",
    "start": "1279679",
    "end": "1281120"
  },
  {
    "text": "envoys um all the previous filters were",
    "start": "1281120",
    "end": "1283520"
  },
  {
    "text": "nuked the ones that were the business",
    "start": "1283520",
    "end": "1285360"
  },
  {
    "text": "logic and we all only had this",
    "start": "1285360",
    "end": "1287679"
  },
  {
    "text": "connection limit and like terminal",
    "start": "1287679",
    "end": "1289120"
  },
  {
    "text": "router filter so uh it didn't work for",
    "start": "1289120",
    "end": "1291520"
  },
  {
    "text": "us but it worked for rate limiter",
    "start": "1291520",
    "end": "1293679"
  },
  {
    "text": "surprisingly",
    "start": "1293679",
    "end": "1295440"
  },
  {
    "text": "um another challenge that we faced",
    "start": "1295440",
    "end": "1297120"
  },
  {
    "text": "during the production rollout was the",
    "start": "1297120",
    "end": "1298640"
  },
  {
    "text": "lack of native canary support in an",
    "start": "1298640",
    "end": "1300480"
  },
  {
    "text": "gateway API both for data and control",
    "start": "1300480",
    "end": "1302480"
  },
  {
    "text": "plane uh we did experiment with Argo CD",
    "start": "1302480",
    "end": "1305039"
  },
  {
    "text": "rollout but it didn't work well with an",
    "start": "1305039",
    "end": "1307039"
  },
  {
    "text": "gateway API argo rollouts is uh wasn't a",
    "start": "1307039",
    "end": "1309840"
  },
  {
    "text": "good fit for us due to the uh current",
    "start": "1309840",
    "end": "1311440"
  },
  {
    "text": "architecture of the system so uh the",
    "start": "1311440",
    "end": "1313600"
  },
  {
    "text": "beauty of Argo is that uh one only needs",
    "start": "1313600",
    "end": "1315840"
  },
  {
    "text": "to duplicate the service resource for",
    "start": "1315840",
    "end": "1317360"
  },
  {
    "text": "Canary and underneath the rollout",
    "start": "1317360",
    "end": "1319440"
  },
  {
    "text": "controller would have applied the same",
    "start": "1319440",
    "end": "1320960"
  },
  {
    "text": "configuration to Canary first and then",
    "start": "1320960",
    "end": "1322720"
  },
  {
    "text": "to stable uh in our case configuration",
    "start": "1322720",
    "end": "1325280"
  },
  {
    "text": "and envoy service are dynamically",
    "start": "1325280",
    "end": "1326799"
  },
  {
    "text": "managed by envoy gateway it means we",
    "start": "1326799",
    "end": "1328640"
  },
  {
    "text": "need to duplicate bunch of config",
    "start": "1328640",
    "end": "1330080"
  },
  {
    "text": "objects for canary like for example",
    "start": "1330080",
    "end": "1332000"
  },
  {
    "text": "gateway gateway class envoy proxy and",
    "start": "1332000",
    "end": "1334480"
  },
  {
    "text": "angor roll all rollouts will not be able",
    "start": "1334480",
    "end": "1335840"
  },
  {
    "text": "to automatically promote change to",
    "start": "1335840",
    "end": "1337520"
  },
  {
    "text": "stable a human will need to update",
    "start": "1337520",
    "end": "1339280"
  },
  {
    "text": "stable config so it gets picked up by",
    "start": "1339280",
    "end": "1341280"
  },
  {
    "text": "envoy gateway uh and propagated to the",
    "start": "1341280",
    "end": "1343120"
  },
  {
    "text": "stable service via",
    "start": "1343120",
    "end": "1344440"
  },
  {
    "text": "xds um so uh we ended up having a custom",
    "start": "1344440",
    "end": "1349120"
  },
  {
    "text": "canary setup for data plane and no",
    "start": "1349120",
    "end": "1351520"
  },
  {
    "text": "canary at all for control plane we also",
    "start": "1351520",
    "end": "1353919"
  },
  {
    "text": "expressed our needs and uh created the",
    "start": "1353919",
    "end": "1355919"
  },
  {
    "text": "feature request upstream and we're",
    "start": "1355919",
    "end": "1357360"
  },
  {
    "text": "really looking forward to collaborate on",
    "start": "1357360",
    "end": "1358840"
  },
  {
    "text": "that uh and on the right hand side you",
    "start": "1358840",
    "end": "1361600"
  },
  {
    "text": "can see that uh we basically had to",
    "start": "1361600",
    "end": "1363200"
  },
  {
    "text": "duplicate all the resources with the",
    "start": "1363200",
    "end": "1365039"
  },
  {
    "text": "custom solution and we ended up having",
    "start": "1365039",
    "end": "1366640"
  },
  {
    "text": "four gateways that we need to manage and",
    "start": "1366640",
    "end": "1368799"
  },
  {
    "text": "each uh gateway maps to a uh to a single",
    "start": "1368799",
    "end": "1372960"
  },
  {
    "text": "Argo CD application then the rollout",
    "start": "1372960",
    "end": "1375600"
  },
  {
    "text": "process is quite manual but at least we",
    "start": "1375600",
    "end": "1377600"
  },
  {
    "text": "have Canary now",
    "start": "1377600",
    "end": "1381120"
  },
  {
    "text": "so another challenge that we faced uh",
    "start": "1381120",
    "end": "1383039"
  },
  {
    "text": "that there is a no easy solution or at",
    "start": "1383039",
    "end": "1385200"
  },
  {
    "text": "least no documentation example on how to",
    "start": "1385200",
    "end": "1387200"
  },
  {
    "text": "configure role based access to write",
    "start": "1387200",
    "end": "1389280"
  },
  {
    "text": "admin endpoints in the envoy admin",
    "start": "1389280",
    "end": "1391360"
  },
  {
    "text": "console for those who are familiar with",
    "start": "1391360",
    "end": "1392880"
  },
  {
    "text": "the admin console uh nowadays anyone who",
    "start": "1392880",
    "end": "1395360"
  },
  {
    "text": "has access to the cluster can invoke",
    "start": "1395360",
    "end": "1397360"
  },
  {
    "text": "write endpoints uh and for example drain",
    "start": "1397360",
    "end": "1399679"
  },
  {
    "text": "all the traffic on ingress um please",
    "start": "1399679",
    "end": "1402240"
  },
  {
    "text": "don't try to do that uh it is also a",
    "start": "1402240",
    "end": "1404640"
  },
  {
    "text": "common use case that envoy operators",
    "start": "1404640",
    "end": "1406159"
  },
  {
    "text": "need to perform a fleetwide admin",
    "start": "1406159",
    "end": "1408000"
  },
  {
    "text": "operations like for example draining",
    "start": "1408000",
    "end": "1410159"
  },
  {
    "text": "traffic on entire gateway during the",
    "start": "1410159",
    "end": "1411679"
  },
  {
    "text": "incident or if we are wondering like",
    "start": "1411679",
    "end": "1413760"
  },
  {
    "text": "during incident I want to check some",
    "start": "1413760",
    "end": "1415200"
  },
  {
    "text": "specific stats uh proxy wide and you",
    "start": "1415200",
    "end": "1417840"
  },
  {
    "text": "don't necessarily expose u export the",
    "start": "1417840",
    "end": "1419840"
  },
  {
    "text": "stats to graphana because envy has a lot",
    "start": "1419840",
    "end": "1422080"
  },
  {
    "text": "of stats so unfortunately there is no",
    "start": "1422080",
    "end": "1424559"
  },
  {
    "text": "support for secure remote access to",
    "start": "1424559",
    "end": "1426320"
  },
  {
    "text": "envoy admin console so let's say you",
    "start": "1426320",
    "end": "1428240"
  },
  {
    "text": "wanted to check uh envoy server status",
    "start": "1428240",
    "end": "1430640"
  },
  {
    "text": "during the incident and you have like 10",
    "start": "1430640",
    "end": "1432480"
  },
  {
    "text": "instances running so it would have been",
    "start": "1432480",
    "end": "1435440"
  },
  {
    "text": "easy and amazing just to cor each envoy",
    "start": "1435440",
    "end": "1437520"
  },
  {
    "text": "instance by port IP and hit that server",
    "start": "1437520",
    "end": "1439440"
  },
  {
    "text": "status endpoint uh but as remote access",
    "start": "1439440",
    "end": "1442320"
  },
  {
    "text": "is uh not enabled or it's rather",
    "start": "1442320",
    "end": "1444400"
  },
  {
    "text": "disabled one has to do a port forward in",
    "start": "1444400",
    "end": "1446720"
  },
  {
    "text": "the loop to access that info on each",
    "start": "1446720",
    "end": "1448559"
  },
  {
    "text": "envoy proxy instance as all we all know",
    "start": "1448559",
    "end": "1451039"
  },
  {
    "text": "that's a much slower approach since one",
    "start": "1451039",
    "end": "1453360"
  },
  {
    "text": "needs to wait until port forward process",
    "start": "1453360",
    "end": "1455919"
  },
  {
    "text": "gets open in the background then it will",
    "start": "1455919",
    "end": "1458080"
  },
  {
    "text": "spill bunch of garbage output into the",
    "start": "1458080",
    "end": "1459840"
  },
  {
    "text": "console and then it needs to be closed",
    "start": "1459840",
    "end": "1461919"
  },
  {
    "text": "until you can proceed to the next uh",
    "start": "1461919",
    "end": "1463600"
  },
  {
    "text": "iteration uh in the loop so uh quite",
    "start": "1463600",
    "end": "1466400"
  },
  {
    "text": "slow troubleshooting during the",
    "start": "1466400",
    "end": "1468279"
  },
  {
    "text": "incident uh while working on the",
    "start": "1468279",
    "end": "1470480"
  },
  {
    "text": "migration our mission as well was to",
    "start": "1470480",
    "end": "1472159"
  },
  {
    "text": "contribute back to the community we did",
    "start": "1472159",
    "end": "1474320"
  },
  {
    "text": "discover multiple bugs on the way like",
    "start": "1474320",
    "end": "1476159"
  },
  {
    "text": "for example issuing draining behavior in",
    "start": "1476159",
    "end": "1477919"
  },
  {
    "text": "envoy gateway when it didn't",
    "start": "1477919",
    "end": "1479760"
  },
  {
    "text": "consistently send connection close or go",
    "start": "1479760",
    "end": "1481840"
  },
  {
    "text": "away as part of the draining sequence we",
    "start": "1481840",
    "end": "1484159"
  },
  {
    "text": "contributed multiple features to envoy",
    "start": "1484159",
    "end": "1486000"
  },
  {
    "text": "gateway project like for example global",
    "start": "1486000",
    "end": "1487840"
  },
  {
    "text": "global rate limiting feature or",
    "start": "1487840",
    "end": "1489679"
  },
  {
    "text": "configurable panic threshold we also",
    "start": "1489679",
    "end": "1491679"
  },
  {
    "text": "contributed to envoy project there is a",
    "start": "1491679",
    "end": "1493360"
  },
  {
    "text": "work in progress PR for dynamic",
    "start": "1493360",
    "end": "1494880"
  },
  {
    "text": "filebased IPAC supports in the IP tag",
    "start": "1494880",
    "end": "1497520"
  },
  {
    "text": "and filter apart from that we have",
    "start": "1497520",
    "end": "1499679"
  },
  {
    "text": "opened bunch of feature requests some of",
    "start": "1499679",
    "end": "1501360"
  },
  {
    "text": "them you have already seen like uh",
    "start": "1501360",
    "end": "1502880"
  },
  {
    "text": "canary support or being able to tweak",
    "start": "1502880",
    "end": "1505200"
  },
  {
    "text": "global uh overload settings or GP",
    "start": "1505200",
    "end": "1507600"
  },
  {
    "text": "support uh we are really looking forward",
    "start": "1507600",
    "end": "1509520"
  },
  {
    "text": "to collaborate on those feature",
    "start": "1509520",
    "end": "1511799"
  },
  {
    "text": "requests and uh what's next for us uh we",
    "start": "1511799",
    "end": "1514720"
  },
  {
    "text": "are excited to start working on zone",
    "start": "1514720",
    "end": "1516720"
  },
  {
    "text": "aware routing we know that uh the",
    "start": "1516720",
    "end": "1518640"
  },
  {
    "text": "feature has been maybe already merged to",
    "start": "1518640",
    "end": "1520880"
  },
  {
    "text": "Anva Gateway project uh and we want to",
    "start": "1520880",
    "end": "1523360"
  },
  {
    "text": "cut the cross zone egress uh costs uh we",
    "start": "1523360",
    "end": "1526240"
  },
  {
    "text": "are very interested to have canary",
    "start": "1526240",
    "end": "1527760"
  },
  {
    "text": "control plane support to be more",
    "start": "1527760",
    "end": "1529200"
  },
  {
    "text": "confident in the rollout of control",
    "start": "1529200",
    "end": "1530720"
  },
  {
    "text": "plane upgrades uh the next big project",
    "start": "1530720",
    "end": "1533200"
  },
  {
    "text": "for us uh is the deprecation of",
    "start": "1533200",
    "end": "1534720"
  },
  {
    "text": "engineext component that Ryan mentioned",
    "start": "1534720",
    "end": "1536480"
  },
  {
    "text": "before and to move all that business",
    "start": "1536480",
    "end": "1538000"
  },
  {
    "text": "logic into envoy and last but not least",
    "start": "1538000",
    "end": "1540720"
  },
  {
    "text": "we are hyped and are planning to join",
    "start": "1540720",
    "end": "1542159"
  },
  {
    "text": "the envoy gateway steering committee to",
    "start": "1542159",
    "end": "1544000"
  },
  {
    "text": "increase the involvement with the",
    "start": "1544000",
    "end": "1545200"
  },
  {
    "text": "project and to be able to impact the",
    "start": "1545200",
    "end": "1546559"
  },
  {
    "text": "road",
    "start": "1546559",
    "end": "1547799"
  },
  {
    "text": "map during our journey we got a lot of",
    "start": "1547799",
    "end": "1550400"
  },
  {
    "text": "help from the community we would like to",
    "start": "1550400",
    "end": "1552080"
  },
  {
    "text": "say thanks to Arco who is Anway gateway",
    "start": "1552080",
    "end": "1554320"
  },
  {
    "text": "maintainer for inspiration support and",
    "start": "1554320",
    "end": "1556240"
  },
  {
    "text": "hard work and to entire Anvway gateway",
    "start": "1556240",
    "end": "1558880"
  },
  {
    "text": "community and below you can find useful",
    "start": "1558880",
    "end": "1561279"
  },
  {
    "text": "links for the technologies mentioned in",
    "start": "1561279",
    "end": "1562799"
  },
  {
    "text": "this",
    "start": "1562799",
    "end": "1563720"
  },
  {
    "text": "talk thank you",
    "start": "1563720",
    "end": "1565980"
  },
  {
    "text": "[Applause]",
    "start": "1565980",
    "end": "1575700"
  }
]