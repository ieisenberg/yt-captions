[
  {
    "text": "and so I'm Freddie Holland and with me",
    "start": "0",
    "end": "3959"
  },
  {
    "text": "is Adrian kiris we are software",
    "start": "3959",
    "end": "5940"
  },
  {
    "text": "engineers at Nvidia part of the cloud",
    "start": "5940",
    "end": "8400"
  },
  {
    "text": "operation team in the networking",
    "start": "8400",
    "end": "10440"
  },
  {
    "text": "business unit",
    "start": "10440",
    "end": "11460"
  },
  {
    "text": "or that today work is to enable",
    "start": "11460",
    "end": "13500"
  },
  {
    "text": "networking Technologies in kubernetes",
    "start": "13500",
    "end": "16320"
  },
  {
    "text": "today we'll talk about Dynamic resource",
    "start": "16320",
    "end": "18420"
  },
  {
    "text": "allocation also known as dra",
    "start": "18420",
    "end": "21060"
  },
  {
    "text": "is a new API for requesting resources in",
    "start": "21060",
    "end": "24180"
  },
  {
    "text": "kubernetes",
    "start": "24180",
    "end": "26220"
  },
  {
    "text": "okay so let's take a look at the agenda",
    "start": "26220",
    "end": "28380"
  },
  {
    "text": "first we'll uh",
    "start": "28380",
    "end": "30359"
  },
  {
    "text": "we'll go over the different resources",
    "start": "30359",
    "end": "32460"
  },
  {
    "text": "available for your workload and how do",
    "start": "32460",
    "end": "34680"
  },
  {
    "text": "you actually request them then we'll",
    "start": "34680",
    "end": "36540"
  },
  {
    "text": "talk about the device Plugin or do they",
    "start": "36540",
    "end": "38940"
  },
  {
    "text": "work and what are the limitations and",
    "start": "38940",
    "end": "41820"
  },
  {
    "text": "that will go over the array and its main",
    "start": "41820",
    "end": "43620"
  },
  {
    "text": "apis after that we go and go deep dive",
    "start": "43620",
    "end": "46920"
  },
  {
    "text": "into the generator flows and also we",
    "start": "46920",
    "end": "49860"
  },
  {
    "text": "will go over the steps that we need to",
    "start": "49860",
    "end": "52860"
  },
  {
    "text": "do in order to build your own direct",
    "start": "52860",
    "end": "54660"
  },
  {
    "text": "driver",
    "start": "54660",
    "end": "56399"
  },
  {
    "text": "lastly we'll cover CDI CDI is a",
    "start": "56399",
    "end": "59219"
  },
  {
    "text": "container device interface which is part",
    "start": "59219",
    "end": "61140"
  },
  {
    "text": "of the container runtime that is",
    "start": "61140",
    "end": "63719"
  },
  {
    "text": "required by the DI drivers",
    "start": "63719",
    "end": "66900"
  },
  {
    "text": "okay let's start",
    "start": "66900",
    "end": "69479"
  },
  {
    "text": "so",
    "start": "69479",
    "end": "71700"
  },
  {
    "text": "so Kubota is all about running workloads",
    "start": "71700",
    "end": "74400"
  },
  {
    "text": "inside containers right but not every",
    "start": "74400",
    "end": "77280"
  },
  {
    "text": "workloads are the same requirements for",
    "start": "77280",
    "end": "79799"
  },
  {
    "text": "example if you have a CNF application",
    "start": "79799",
    "end": "81479"
  },
  {
    "text": "like router or firewall you need some",
    "start": "81479",
    "end": "84360"
  },
  {
    "text": "networking very specific requirements or",
    "start": "84360",
    "end": "87960"
  },
  {
    "text": "if you're using the predicate for this",
    "start": "87960",
    "end": "89939"
  },
  {
    "text": "application when you use pages right and",
    "start": "89939",
    "end": "92400"
  },
  {
    "text": "in AI for example gpus are required both",
    "start": "92400",
    "end": "95520"
  },
  {
    "text": "for training and insurance in trending",
    "start": "95520",
    "end": "98700"
  },
  {
    "text": "you will need multiple gpus among",
    "start": "98700",
    "end": "101400"
  },
  {
    "text": "multiple nodes and maybe we required",
    "start": "101400",
    "end": "103680"
  },
  {
    "text": "some fast networking in in order to be",
    "start": "103680",
    "end": "105840"
  },
  {
    "text": "able to sell efficiency data within them",
    "start": "105840",
    "end": "108119"
  },
  {
    "text": "maybe using GPU direct or dma",
    "start": "108119",
    "end": "111420"
  },
  {
    "text": "so what are the resources that we want",
    "start": "111420",
    "end": "113399"
  },
  {
    "text": "we can allocate to our workload so first",
    "start": "113399",
    "end": "116579"
  },
  {
    "text": "we have the regular one CPU memory your",
    "start": "116579",
    "end": "118860"
  },
  {
    "text": "Treasures then we have storage related",
    "start": "118860",
    "end": "121740"
  },
  {
    "text": "workload and eventually you also have",
    "start": "121740",
    "end": "124259"
  },
  {
    "text": "the device Plugin or workload resources",
    "start": "124259",
    "end": "127439"
  },
  {
    "text": "so what are the device plugin resources",
    "start": "127439",
    "end": "129060"
  },
  {
    "text": "for example android.com GPU",
    "start": "129060",
    "end": "133160"
  },
  {
    "text": "okay so where do we see this resources",
    "start": "133379",
    "end": "136020"
  },
  {
    "text": "we have in the north status actually two",
    "start": "136020",
    "end": "139500"
  },
  {
    "text": "sections the first one is the capacity",
    "start": "139500",
    "end": "141239"
  },
  {
    "text": "second one is allocatable the capacity",
    "start": "141239",
    "end": "143879"
  },
  {
    "text": "is a wall full of resources that we have",
    "start": "143879",
    "end": "146580"
  },
  {
    "text": "on this specific node and the local",
    "start": "146580",
    "end": "148800"
  },
  {
    "text": "table is what is still available to a",
    "start": "148800",
    "end": "151980"
  },
  {
    "text": "scheduled future",
    "start": "151980",
    "end": "153860"
  },
  {
    "text": "workloads so cubelet is in charge of",
    "start": "153860",
    "end": "157080"
  },
  {
    "text": "reporting the not status and it is also",
    "start": "157080",
    "end": "159180"
  },
  {
    "text": "in charge of recording the the available",
    "start": "159180",
    "end": "161580"
  },
  {
    "text": "resources",
    "start": "161580",
    "end": "162840"
  },
  {
    "text": "so you see in the first part what we can",
    "start": "162840",
    "end": "165000"
  },
  {
    "text": "call the built-in resources like CPU",
    "start": "165000",
    "end": "167819"
  },
  {
    "text": "utilities and memory and second part we",
    "start": "167819",
    "end": "170700"
  },
  {
    "text": "have some example of some device plugin",
    "start": "170700",
    "end": "172680"
  },
  {
    "text": "resources",
    "start": "172680",
    "end": "175280"
  },
  {
    "text": "sorry",
    "start": "177660",
    "end": "180660"
  },
  {
    "text": "okay next",
    "start": "181560",
    "end": "183180"
  },
  {
    "text": "here an example of allocating CPU memory",
    "start": "183180",
    "end": "185760"
  },
  {
    "text": "and H3 so under the spec of your board",
    "start": "185760",
    "end": "188160"
  },
  {
    "text": "on on the edge container you have two",
    "start": "188160",
    "end": "190200"
  },
  {
    "text": "section",
    "start": "190200",
    "end": "191220"
  },
  {
    "text": "request on limit so the scheduler will",
    "start": "191220",
    "end": "194159"
  },
  {
    "text": "look at the request part and we'll",
    "start": "194159",
    "end": "195900"
  },
  {
    "text": "search for a node that has enough",
    "start": "195900",
    "end": "198120"
  },
  {
    "text": "resources to actually answer this",
    "start": "198120",
    "end": "201239"
  },
  {
    "text": "request and according to it you will",
    "start": "201239",
    "end": "203879"
  },
  {
    "text": "decide where this board will be",
    "start": "203879",
    "end": "205560"
  },
  {
    "text": "eventually scheduled",
    "start": "205560",
    "end": "209159"
  },
  {
    "text": "so in storage we have several options",
    "start": "209159",
    "end": "212099"
  },
  {
    "text": "first we have the available storage some",
    "start": "212099",
    "end": "213959"
  },
  {
    "text": "will call it the scratch space so if for",
    "start": "213959",
    "end": "216239"
  },
  {
    "text": "example if you want to download some",
    "start": "216239",
    "end": "217379"
  },
  {
    "text": "large file or have some State uh serve",
    "start": "217379",
    "end": "221159"
  },
  {
    "text": "the neural in your local files you can",
    "start": "221159",
    "end": "223319"
  },
  {
    "text": "use this one but you need to understand",
    "start": "223319",
    "end": "225420"
  },
  {
    "text": "that it is not persisted so if your part",
    "start": "225420",
    "end": "228120"
  },
  {
    "text": "is restarted all your data will be lost",
    "start": "228120",
    "end": "231599"
  },
  {
    "text": "regarding a persistent storage we have a",
    "start": "231599",
    "end": "234480"
  },
  {
    "text": "few options first one is what we call",
    "start": "234480",
    "end": "236580"
  },
  {
    "text": "the entry storage volume plug-ins so in",
    "start": "236580",
    "end": "240060"
  },
  {
    "text": "this example we are an NFS Mount that",
    "start": "240060",
    "end": "242780"
  },
  {
    "text": "you can just specify the NFS server and",
    "start": "242780",
    "end": "246180"
  },
  {
    "text": "although the needed parameters and we'll",
    "start": "246180",
    "end": "247799"
  },
  {
    "text": "get the mod inside your pod",
    "start": "247799",
    "end": "250439"
  },
  {
    "text": "so what is it called entry and it is",
    "start": "250439",
    "end": "253439"
  },
  {
    "text": "because that the implementation of this",
    "start": "253439",
    "end": "255420"
  },
  {
    "text": "volume plugins are part of the",
    "start": "255420",
    "end": "257280"
  },
  {
    "text": "kubernetes core code and it it was",
    "start": "257280",
    "end": "260340"
  },
  {
    "text": "actually not very convenient for storage",
    "start": "260340",
    "end": "262199"
  },
  {
    "text": "vendor to have this code inside the",
    "start": "262199",
    "end": "264900"
  },
  {
    "text": "kubernetes base code because so it's our",
    "start": "264900",
    "end": "268380"
  },
  {
    "text": "tightly coupled with the Cadence of",
    "start": "268380",
    "end": "270479"
  },
  {
    "text": "releasing kubernetes so if you have a",
    "start": "270479",
    "end": "272400"
  },
  {
    "text": "bug or they want to release a new",
    "start": "272400",
    "end": "273720"
  },
  {
    "text": "feature they need to wait for the next",
    "start": "273720",
    "end": "275639"
  },
  {
    "text": "stories so as an evolution from the",
    "start": "275639",
    "end": "277919"
  },
  {
    "text": "entry volume plugins we got the CSI CSI",
    "start": "277919",
    "end": "281820"
  },
  {
    "text": "is container storage interface and it",
    "start": "281820",
    "end": "284639"
  },
  {
    "text": "gave actually the storage render a full",
    "start": "284639",
    "end": "287479"
  },
  {
    "text": "freedom to implement a other own",
    "start": "287479",
    "end": "291479"
  },
  {
    "text": "contents and they are releasing other",
    "start": "291479",
    "end": "292740"
  },
  {
    "text": "content so they can fix bugs and add",
    "start": "292740",
    "end": "295500"
  },
  {
    "text": "features",
    "start": "295500",
    "end": "296460"
  },
  {
    "text": "then just need to implement the apis",
    "start": "296460",
    "end": "298500"
  },
  {
    "text": "that was defined by by CSI so what we",
    "start": "298500",
    "end": "302639"
  },
  {
    "text": "have in CSI we have a storage class in",
    "start": "302639",
    "end": "305220"
  },
  {
    "text": "the storage class you have a name and",
    "start": "305220",
    "end": "306780"
  },
  {
    "text": "you have the CSI driver that will",
    "start": "306780",
    "end": "308639"
  },
  {
    "text": "eventually provision and expose these",
    "start": "308639",
    "end": "311460"
  },
  {
    "text": "volumes to your port",
    "start": "311460",
    "end": "313020"
  },
  {
    "text": "in addition you have a possibility to",
    "start": "313020",
    "end": "314759"
  },
  {
    "text": "have a bunch of parameters these",
    "start": "314759",
    "end": "316979"
  },
  {
    "text": "parameters are freestyle it means that",
    "start": "316979",
    "end": "319080"
  },
  {
    "text": "you can do whatever you want there but",
    "start": "319080",
    "end": "322080"
  },
  {
    "text": "they are very limited inside",
    "start": "322080",
    "end": "323280"
  },
  {
    "text": "infrastructure because they are just a",
    "start": "323280",
    "end": "325500"
  },
  {
    "text": "strength to string key map kind of",
    "start": "325500",
    "end": "328800"
  },
  {
    "text": "structure",
    "start": "328800",
    "end": "330240"
  },
  {
    "text": "so next we have the persistence volume",
    "start": "330240",
    "end": "332280"
  },
  {
    "text": "claim the volume Cam that you specify",
    "start": "332280",
    "end": "335220"
  },
  {
    "text": "some parameters like for example access",
    "start": "335220",
    "end": "337139"
  },
  {
    "text": "mode and size and most importantly you",
    "start": "337139",
    "end": "340979"
  },
  {
    "text": "can also specify the storage class name",
    "start": "340979",
    "end": "343560"
  },
  {
    "text": "which will actually stay which provider",
    "start": "343560",
    "end": "346620"
  },
  {
    "text": "will eventually provision your volume",
    "start": "346620",
    "end": "349620"
  },
  {
    "text": "so there are the dynamical source",
    "start": "349620",
    "end": "351780"
  },
  {
    "text": "allocation it is taken from this API the",
    "start": "351780",
    "end": "355020"
  },
  {
    "text": "main approach so it will it will take",
    "start": "355020",
    "end": "357780"
  },
  {
    "text": "the van ID of a storage class and the",
    "start": "357780",
    "end": "359880"
  },
  {
    "text": "claim and it will extend it it actually",
    "start": "359880",
    "end": "363120"
  },
  {
    "text": "for any resources not only storage",
    "start": "363120",
    "end": "366539"
  },
  {
    "text": "okay so how do you actually request the",
    "start": "366539",
    "end": "369720"
  },
  {
    "text": "volume inside the Pod so you have a",
    "start": "369720",
    "end": "371580"
  },
  {
    "text": "volume part under the spec and then you",
    "start": "371580",
    "end": "374699"
  },
  {
    "text": "can actually say what is the PVC that",
    "start": "374699",
    "end": "377580"
  },
  {
    "text": "you want to have in your in your",
    "start": "377580",
    "end": "380220"
  },
  {
    "text": "workload in this case the PVC was",
    "start": "380220",
    "end": "382620"
  },
  {
    "text": "already created before",
    "start": "382620",
    "end": "386160"
  },
  {
    "text": "okay next next method that we have is",
    "start": "386160",
    "end": "389580"
  },
  {
    "text": "the device plugin",
    "start": "389580",
    "end": "391080"
  },
  {
    "text": "so why do we need device plugin so",
    "start": "391080",
    "end": "394139"
  },
  {
    "text": "sometimes as your node you have",
    "start": "394139",
    "end": "395520"
  },
  {
    "text": "specialized hardware and for example",
    "start": "395520",
    "end": "398100"
  },
  {
    "text": "here we have a Bluetooth we have a gpui",
    "start": "398100",
    "end": "402300"
  },
  {
    "text": "100 and connect 67 Nick and we want to",
    "start": "402300",
    "end": "406080"
  },
  {
    "text": "be able to utilize this Hardware inside",
    "start": "406080",
    "end": "408960"
  },
  {
    "text": "your workload and like we saw kubernetes",
    "start": "408960",
    "end": "412259"
  },
  {
    "text": "don't the not support specialize",
    "start": "412259",
    "end": "413940"
  },
  {
    "text": "Hardware that's only a set of limited",
    "start": "413940",
    "end": "417000"
  },
  {
    "text": "resources that is aware of",
    "start": "417000",
    "end": "419520"
  },
  {
    "text": "so here comes the device plugin to help",
    "start": "419520",
    "end": "421380"
  },
  {
    "text": "us actually to utilize this resources so",
    "start": "421380",
    "end": "425819"
  },
  {
    "text": "how does it works",
    "start": "425819",
    "end": "427440"
  },
  {
    "text": "so device plugin is a couplet plugin it",
    "start": "427440",
    "end": "430020"
  },
  {
    "text": "means you know in the node it will first",
    "start": "430020",
    "end": "432620"
  },
  {
    "text": "advertise himself to coblet and we say",
    "start": "432620",
    "end": "435240"
  },
  {
    "text": "okay this is the resource that I'm",
    "start": "435240",
    "end": "437100"
  },
  {
    "text": "working on and then it will expose a",
    "start": "437100",
    "end": "439440"
  },
  {
    "text": "grpc interface to qubit",
    "start": "439440",
    "end": "442199"
  },
  {
    "text": "and the most important method here is",
    "start": "442199",
    "end": "445919"
  },
  {
    "text": "the list and watch so the cookware will",
    "start": "445919",
    "end": "447840"
  },
  {
    "text": "has to plug in give me a list of the",
    "start": "447840",
    "end": "449940"
  },
  {
    "text": "available resources and it is a",
    "start": "449940",
    "end": "452639"
  },
  {
    "text": "streaming API so if there is a change on",
    "start": "452639",
    "end": "455039"
  },
  {
    "text": "the status the device plugin can update",
    "start": "455039",
    "end": "457139"
  },
  {
    "text": "kublet with a change",
    "start": "457139",
    "end": "459000"
  },
  {
    "text": "and the second important part will be",
    "start": "459000",
    "end": "460979"
  },
  {
    "text": "allocate allocate will be called by",
    "start": "460979",
    "end": "463259"
  },
  {
    "text": "couplet just before creating the port",
    "start": "463259",
    "end": "466199"
  },
  {
    "text": "and the vast beginning we give the",
    "start": "466199",
    "end": "468419"
  },
  {
    "text": "couplet loss a list of instruction or to",
    "start": "468419",
    "end": "471900"
  },
  {
    "text": "be passed on to The Container runtime",
    "start": "471900",
    "end": "475039"
  },
  {
    "text": "explaining exactly what you need to do",
    "start": "475039",
    "end": "477300"
  },
  {
    "text": "to be able to access this this resource",
    "start": "477300",
    "end": "481139"
  },
  {
    "text": "okay so as I mentioned we can see this",
    "start": "481139",
    "end": "484220"
  },
  {
    "text": "this resource is also available on the",
    "start": "484220",
    "end": "487139"
  },
  {
    "text": "North status here we have two example",
    "start": "487139",
    "end": "489240"
  },
  {
    "text": "once the GPU second one will be above",
    "start": "489240",
    "end": "491699"
  },
  {
    "text": "SRV resource",
    "start": "491699",
    "end": "494039"
  },
  {
    "text": "and or do you actually require them",
    "start": "494039",
    "end": "495840"
  },
  {
    "text": "inside your pod under the resource you",
    "start": "495840",
    "end": "499560"
  },
  {
    "text": "have the request and then it goes like",
    "start": "499560",
    "end": "501599"
  },
  {
    "text": "domain slash name of the resource okay",
    "start": "501599",
    "end": "505199"
  },
  {
    "text": "so here we are requesting one GPU and",
    "start": "505199",
    "end": "507780"
  },
  {
    "text": "one siob resources",
    "start": "507780",
    "end": "509819"
  },
  {
    "text": "so I can see this interface is uh you",
    "start": "509819",
    "end": "512099"
  },
  {
    "text": "can see call it countable it's just a",
    "start": "512099",
    "end": "514200"
  },
  {
    "text": "number",
    "start": "514200",
    "end": "516060"
  },
  {
    "text": "so what are the issue with",
    "start": "516060",
    "end": "519419"
  },
  {
    "text": "with a device plugin framework first of",
    "start": "519419",
    "end": "521880"
  },
  {
    "text": "all you cannot have shared resources",
    "start": "521880",
    "end": "523560"
  },
  {
    "text": "let's say for example you have a GPU",
    "start": "523560",
    "end": "525660"
  },
  {
    "text": "that is able to work with different",
    "start": "525660",
    "end": "527519"
  },
  {
    "text": "workload at the same time using device",
    "start": "527519",
    "end": "530160"
  },
  {
    "text": "plugin you cannot do that why is that",
    "start": "530160",
    "end": "532440"
  },
  {
    "text": "because osrc don't have a name it's just",
    "start": "532440",
    "end": "534660"
  },
  {
    "text": "a number so if you would like to request",
    "start": "534660",
    "end": "536580"
  },
  {
    "text": "another one or you one that has already",
    "start": "536580",
    "end": "538620"
  },
  {
    "text": "been created you don't have the",
    "start": "538620",
    "end": "540600"
  },
  {
    "text": "possibility to do that",
    "start": "540600",
    "end": "542459"
  },
  {
    "text": "second point is unlimited resources",
    "start": "542459",
    "end": "545160"
  },
  {
    "text": "so if you are familiar for example with",
    "start": "545160",
    "end": "547200"
  },
  {
    "text": "codeword which is running VMS inside in",
    "start": "547200",
    "end": "549779"
  },
  {
    "text": "kubernetes they have a device plugin for",
    "start": "549779",
    "end": "552120"
  },
  {
    "text": "KVM and it has a count of 1000 and it",
    "start": "552120",
    "end": "555600"
  },
  {
    "text": "really doesn't make sense because KVM is",
    "start": "555600",
    "end": "557700"
  },
  {
    "text": "not a limited resources it's just a",
    "start": "557700",
    "end": "560339"
  },
  {
    "text": "configuration of the of the CPU",
    "start": "560339",
    "end": "563339"
  },
  {
    "text": "but since they want to use all the",
    "start": "563339",
    "end": "565560"
  },
  {
    "text": "things that are part of the device",
    "start": "565560",
    "end": "567180"
  },
  {
    "text": "plugin in firmware they still need to",
    "start": "567180",
    "end": "570260"
  },
  {
    "text": "publicize a number account so it's kind",
    "start": "570260",
    "end": "573600"
  },
  {
    "text": "of hard but actually it doesn't have any",
    "start": "573600",
    "end": "576120"
  },
  {
    "text": "any meaning",
    "start": "576120",
    "end": "578660"
  },
  {
    "text": "you don't have the possibility to do",
    "start": "578660",
    "end": "580740"
  },
  {
    "text": "Advanced configuration let's say for",
    "start": "580740",
    "end": "582899"
  },
  {
    "text": "example that you have two gpus and you",
    "start": "582899",
    "end": "585779"
  },
  {
    "text": "want to have different configuration on",
    "start": "585779",
    "end": "587640"
  },
  {
    "text": "10. the device plugin framework don't",
    "start": "587640",
    "end": "589560"
  },
  {
    "text": "have the possibility to do that",
    "start": "589560",
    "end": "591120"
  },
  {
    "text": "everything will be configured the same",
    "start": "591120",
    "end": "592980"
  },
  {
    "text": "the same",
    "start": "592980",
    "end": "595459"
  },
  {
    "text": "so here comes the area to actually",
    "start": "595560",
    "end": "597899"
  },
  {
    "text": "answer of all of this issues that we",
    "start": "597899",
    "end": "601260"
  },
  {
    "text": "mentioned",
    "start": "601260",
    "end": "602459"
  },
  {
    "text": "so what is the array it is a new way of",
    "start": "602459",
    "end": "604560"
  },
  {
    "text": "requesting requesting resources in",
    "start": "604560",
    "end": "606600"
  },
  {
    "text": "kubernetes it started in one",
    "start": "606600",
    "end": "609600"
  },
  {
    "text": "not 26. you will need to have a",
    "start": "609600",
    "end": "613040"
  },
  {
    "text": "container runtime that is support CDI",
    "start": "613040",
    "end": "616019"
  },
  {
    "text": "CDI is container device interface you",
    "start": "616019",
    "end": "619320"
  },
  {
    "text": "can see here the version phone",
    "start": "619320",
    "end": "620640"
  },
  {
    "text": "containerd and Kyle that do already have",
    "start": "620640",
    "end": "623160"
  },
  {
    "text": "this support",
    "start": "623160",
    "end": "625200"
  },
  {
    "text": "it is still in Alpha meaning that if you",
    "start": "625200",
    "end": "627540"
  },
  {
    "text": "if you want to start to tie that we need",
    "start": "627540",
    "end": "629760"
  },
  {
    "text": "to enable a feature guide",
    "start": "629760",
    "end": "631680"
  },
  {
    "text": "and the idea behind it is actually to",
    "start": "631680",
    "end": "633660"
  },
  {
    "text": "give an alternative of the device plugin",
    "start": "633660",
    "end": "635640"
  },
  {
    "text": "framework that we mentioned earlier",
    "start": "635640",
    "end": "639240"
  },
  {
    "text": "so and similar to csis that is to give",
    "start": "639240",
    "end": "642600"
  },
  {
    "text": "the full control to the vendors like we",
    "start": "642600",
    "end": "645600"
  },
  {
    "text": "mentioned storage van dorno can release",
    "start": "645600",
    "end": "647519"
  },
  {
    "text": "anything other on Cadence we want to do",
    "start": "647519",
    "end": "649980"
  },
  {
    "text": "the same regarding resources and it can",
    "start": "649980",
    "end": "652860"
  },
  {
    "text": "and it it actually takes the same",
    "start": "652860",
    "end": "654899"
  },
  {
    "text": "approach so if you remember we have a",
    "start": "654899",
    "end": "657420"
  },
  {
    "text": "storage class now we have a resource",
    "start": "657420",
    "end": "659399"
  },
  {
    "text": "class",
    "start": "659399",
    "end": "661519"
  },
  {
    "text": "we have a resource claim so the idea is",
    "start": "664100",
    "end": "667620"
  },
  {
    "text": "similar but in addition we have also",
    "start": "667620",
    "end": "670380"
  },
  {
    "text": "some things that are a little better so",
    "start": "670380",
    "end": "672779"
  },
  {
    "text": "for each resource class you can have a",
    "start": "672779",
    "end": "674760"
  },
  {
    "text": "crd defined by the vendor that can be a",
    "start": "674760",
    "end": "677760"
  },
  {
    "text": "class parameter so if you remember we",
    "start": "677760",
    "end": "680160"
  },
  {
    "text": "have the list of string in this in the",
    "start": "680160",
    "end": "682200"
  },
  {
    "text": "storage class now we have a full",
    "start": "682200",
    "end": "684180"
  },
  {
    "text": "possibility that the vendor of the",
    "start": "684180",
    "end": "686880"
  },
  {
    "text": "resource of the dra driver can have",
    "start": "686880",
    "end": "690660"
  },
  {
    "text": "whatever you want into parameters it can",
    "start": "690660",
    "end": "692700"
  },
  {
    "text": "be a really much more complex at what we",
    "start": "692700",
    "end": "695339"
  },
  {
    "text": "had before",
    "start": "695339",
    "end": "696480"
  },
  {
    "text": "any addition to the resource time also",
    "start": "696480",
    "end": "699060"
  },
  {
    "text": "have the same thing you can point to a",
    "start": "699060",
    "end": "701579"
  },
  {
    "text": "vendor defined crd with a lot of",
    "start": "701579",
    "end": "704100"
  },
  {
    "text": "parameter for each resource claim",
    "start": "704100",
    "end": "706920"
  },
  {
    "text": "and we also have a resource line",
    "start": "706920",
    "end": "708959"
  },
  {
    "text": "template which we will explain in a few",
    "start": "708959",
    "end": "711540"
  },
  {
    "text": "sides",
    "start": "711540",
    "end": "713760"
  },
  {
    "text": "okay so first of all although the track",
    "start": "713760",
    "end": "716279"
  },
  {
    "text": "of the Pod change most important thing",
    "start": "716279",
    "end": "718740"
  },
  {
    "text": "as end user what would you need to do so",
    "start": "718740",
    "end": "721200"
  },
  {
    "text": "it's a little bit more verbos but we",
    "start": "721200",
    "end": "723420"
  },
  {
    "text": "need to keep in mind that it will give",
    "start": "723420",
    "end": "725220"
  },
  {
    "text": "us a lot of more flexibility on on the",
    "start": "725220",
    "end": "728940"
  },
  {
    "text": "when using these resources so on the",
    "start": "728940",
    "end": "731880"
  },
  {
    "text": "left we have the device plugin",
    "start": "731880",
    "end": "734240"
  },
  {
    "text": "configuration there's a count that we",
    "start": "734240",
    "end": "736380"
  },
  {
    "text": "mentioned earlier so we want two gpus on",
    "start": "736380",
    "end": "740100"
  },
  {
    "text": "the new way you have a new section on",
    "start": "740100",
    "end": "742380"
  },
  {
    "text": "the resources it's called claims and",
    "start": "742380",
    "end": "744720"
  },
  {
    "text": "then you give a list of names the name",
    "start": "744720",
    "end": "746700"
  },
  {
    "text": "of the claims as a resource claim that",
    "start": "746700",
    "end": "748560"
  },
  {
    "text": "you want to use",
    "start": "748560",
    "end": "749760"
  },
  {
    "text": "then you have also a new section it's",
    "start": "749760",
    "end": "752220"
  },
  {
    "text": "called resource claim and here there you",
    "start": "752220",
    "end": "754620"
  },
  {
    "text": "need to configure for each claim that",
    "start": "754620",
    "end": "757200"
  },
  {
    "text": "you want to use what is its source in",
    "start": "757200",
    "end": "760320"
  },
  {
    "text": "this example it is a resource claim",
    "start": "760320",
    "end": "762060"
  },
  {
    "text": "template that is configured on the right",
    "start": "762060",
    "end": "764360"
  },
  {
    "text": "and each time that we reference this",
    "start": "764360",
    "end": "767040"
  },
  {
    "text": "resource time template a new resource",
    "start": "767040",
    "end": "768660"
  },
  {
    "text": "claim will be created with a spec",
    "start": "768660",
    "end": "770700"
  },
  {
    "text": "defined in the resource claim template",
    "start": "770700",
    "end": "773940"
  },
  {
    "text": "so the idea is that every time you use a",
    "start": "773940",
    "end": "776940"
  },
  {
    "text": "resource template the new resource claim",
    "start": "776940",
    "end": "779040"
  },
  {
    "text": "is created it's not reusing an existing",
    "start": "779040",
    "end": "782100"
  },
  {
    "text": "one",
    "start": "782100",
    "end": "783060"
  },
  {
    "text": "and lastly we can see that in the spec",
    "start": "783060",
    "end": "785160"
  },
  {
    "text": "we have a reference to as a resource",
    "start": "785160",
    "end": "788700"
  },
  {
    "text": "class",
    "start": "788700",
    "end": "790820"
  },
  {
    "text": "okay let's take a look at the resource",
    "start": "791279",
    "end": "793200"
  },
  {
    "text": "class",
    "start": "793200",
    "end": "793980"
  },
  {
    "text": "first of all all the examples here are",
    "start": "793980",
    "end": "796440"
  },
  {
    "text": "from an existing",
    "start": "796440",
    "end": "798139"
  },
  {
    "text": "dra driver a quantity zero driver for",
    "start": "798139",
    "end": "801300"
  },
  {
    "text": "gpus that has been implemented by Kevin",
    "start": "801300",
    "end": "803519"
  },
  {
    "text": "close from Nvidia he also did a great",
    "start": "803519",
    "end": "806579"
  },
  {
    "text": "talk about it with Alexa for men conform",
    "start": "806579",
    "end": "809639"
  },
  {
    "text": "Intel you can check it out from the last",
    "start": "809639",
    "end": "811620"
  },
  {
    "text": "clipcon we'll give a link at the end",
    "start": "811620",
    "end": "814500"
  },
  {
    "text": "so the resource class will Define the",
    "start": "814500",
    "end": "816779"
  },
  {
    "text": "first of all the name of the result and",
    "start": "816779",
    "end": "818880"
  },
  {
    "text": "then the dra driver that will actually",
    "start": "818880",
    "end": "820860"
  },
  {
    "text": "be bind to this resource",
    "start": "820860",
    "end": "823920"
  },
  {
    "text": "it will be created same as the storage",
    "start": "823920",
    "end": "826019"
  },
  {
    "text": "class created by the Cs admin",
    "start": "826019",
    "end": "829500"
  },
  {
    "text": "okay next we mentioned that we also have",
    "start": "829500",
    "end": "831839"
  },
  {
    "text": "a possibility to have parameters for the",
    "start": "831839",
    "end": "833880"
  },
  {
    "text": "resource class so how do we do that we",
    "start": "833880",
    "end": "835920"
  },
  {
    "text": "just configure a reference in the in the",
    "start": "835920",
    "end": "839940"
  },
  {
    "text": "in the form of the API Group kind name",
    "start": "839940",
    "end": "841800"
  },
  {
    "text": "which is a crd that the array driver",
    "start": "841800",
    "end": "844260"
  },
  {
    "text": "will Implement and then you can have a",
    "start": "844260",
    "end": "847740"
  },
  {
    "text": "specific parameters so in this example",
    "start": "847740",
    "end": "849779"
  },
  {
    "text": "we want dpus that are not non-shareable",
    "start": "849779",
    "end": "854839"
  },
  {
    "text": "okay so we have a resource contemplate",
    "start": "855480",
    "end": "858420"
  },
  {
    "text": "and resource claim so what is the",
    "start": "858420",
    "end": "859800"
  },
  {
    "text": "difference like I mentioned earlier a",
    "start": "859800",
    "end": "861540"
  },
  {
    "text": "resource content that creates a new",
    "start": "861540",
    "end": "863040"
  },
  {
    "text": "resource claim for each time they are",
    "start": "863040",
    "end": "864720"
  },
  {
    "text": "reference and the resource claim will",
    "start": "864720",
    "end": "867120"
  },
  {
    "text": "refer to the exact same object",
    "start": "867120",
    "end": "871519"
  },
  {
    "text": "all right so now",
    "start": "872040",
    "end": "874160"
  },
  {
    "text": "we have we mentioned that also the",
    "start": "874160",
    "end": "876899"
  },
  {
    "text": "resource claim can have a",
    "start": "876899",
    "end": "880620"
  },
  {
    "text": "parameter and it gave us a lot of",
    "start": "880620",
    "end": "883920"
  },
  {
    "text": "possibility so here in this example we",
    "start": "883920",
    "end": "886380"
  },
  {
    "text": "have a GPU selector on the resource",
    "start": "886380",
    "end": "888720"
  },
  {
    "text": "plane meaning",
    "start": "888720",
    "end": "890240"
  },
  {
    "text": "here we can we actually want either a",
    "start": "890240",
    "end": "893040"
  },
  {
    "text": "default GPU or other either a V100 with",
    "start": "893040",
    "end": "896459"
  },
  {
    "text": "less than 16 gig memory so you can",
    "start": "896459",
    "end": "899639"
  },
  {
    "text": "imagine that there's a lot of",
    "start": "899639",
    "end": "900720"
  },
  {
    "text": "flexibility and and possibility that you",
    "start": "900720",
    "end": "903420"
  },
  {
    "text": "can configure your resources with the",
    "start": "903420",
    "end": "905639"
  },
  {
    "text": "same type of resources but with",
    "start": "905639",
    "end": "907079"
  },
  {
    "text": "different configuration on each instance",
    "start": "907079",
    "end": "911120"
  },
  {
    "text": "okay next how can we share actually",
    "start": "911820",
    "end": "914639"
  },
  {
    "text": "resources between a workload so here an",
    "start": "914639",
    "end": "917519"
  },
  {
    "text": "example on the same port different",
    "start": "917519",
    "end": "918959"
  },
  {
    "text": "containers you just point to the same",
    "start": "918959",
    "end": "922440"
  },
  {
    "text": "claim since now we have a name it's",
    "start": "922440",
    "end": "924300"
  },
  {
    "text": "quite easy so we have GPU name and then",
    "start": "924300",
    "end": "927240"
  },
  {
    "text": "on the resource link",
    "start": "927240",
    "end": "929899"
  },
  {
    "text": "section you will Define the cells so",
    "start": "929899",
    "end": "933480"
  },
  {
    "text": "where you pre-create your resource and",
    "start": "933480",
    "end": "935459"
  },
  {
    "text": "then you can actually refer it in from",
    "start": "935459",
    "end": "938040"
  },
  {
    "text": "different two different containers in",
    "start": "938040",
    "end": "939779"
  },
  {
    "text": "the sample",
    "start": "939779",
    "end": "941820"
  },
  {
    "text": "and it goes the same regarding sharing",
    "start": "941820",
    "end": "944699"
  },
  {
    "text": "between different ports so you again",
    "start": "944699",
    "end": "947880"
  },
  {
    "text": "using the name of the pre-cutter",
    "start": "947880",
    "end": "949980"
  },
  {
    "text": "resources one thing to mention that the",
    "start": "949980",
    "end": "952860"
  },
  {
    "text": "dairy driver implementer needs to",
    "start": "952860",
    "end": "954839"
  },
  {
    "text": "specify in the resource claim that this",
    "start": "954839",
    "end": "957360"
  },
  {
    "text": "resource is actually shareable otherwise",
    "start": "957360",
    "end": "959339"
  },
  {
    "text": "the scheduler won't allow this kind of",
    "start": "959339",
    "end": "961320"
  },
  {
    "text": "configuration",
    "start": "961320",
    "end": "963120"
  },
  {
    "text": "so we saw that direct comes and solve us",
    "start": "963120",
    "end": "966120"
  },
  {
    "text": "the share issue that we mentioned like",
    "start": "966120",
    "end": "968579"
  },
  {
    "text": "we just saw it also solved the unlimited",
    "start": "968579",
    "end": "972240"
  },
  {
    "text": "resources because you don't have to",
    "start": "972240",
    "end": "974160"
  },
  {
    "text": "actually expose the number of resources",
    "start": "974160",
    "end": "976560"
  },
  {
    "text": "that you you want to support it's not",
    "start": "976560",
    "end": "978540"
  },
  {
    "text": "required and you can easily implement",
    "start": "978540",
    "end": "981240"
  },
  {
    "text": "the direct driver that don't have any",
    "start": "981240",
    "end": "983040"
  },
  {
    "text": "limits and last one is a lot of more",
    "start": "983040",
    "end": "986519"
  },
  {
    "text": "flexibility regarding the configuration",
    "start": "986519",
    "end": "988440"
  },
  {
    "text": "each different instance of the same",
    "start": "988440",
    "end": "990600"
  },
  {
    "text": "resource can easily have different",
    "start": "990600",
    "end": "992339"
  },
  {
    "text": "configuration",
    "start": "992339",
    "end": "995180"
  },
  {
    "text": "will take us in a more deeper dive about",
    "start": "996199",
    "end": "999360"
  },
  {
    "text": "different flow",
    "start": "999360",
    "end": "1002259"
  },
  {
    "text": "all right thanks Freddy for providing us",
    "start": "1002779",
    "end": "1004759"
  },
  {
    "text": "an overview of dra so yeah we're a bit",
    "start": "1004759",
    "end": "1007519"
  },
  {
    "text": "short on time but let's try to make it I",
    "start": "1007519",
    "end": "1010579"
  },
  {
    "text": "will go through some high level flows",
    "start": "1010579",
    "end": "1012259"
  },
  {
    "text": "here to understand what happens a bit",
    "start": "1012259",
    "end": "1014180"
  },
  {
    "text": "under the hood with the array as well as",
    "start": "1014180",
    "end": "1017420"
  },
  {
    "text": "we'll go ahead and see what it what is",
    "start": "1017420",
    "end": "1019880"
  },
  {
    "text": "required to implement a resource driver",
    "start": "1019880",
    "end": "1021320"
  },
  {
    "text": "and some helpers for that and then we'll",
    "start": "1021320",
    "end": "1024438"
  },
  {
    "text": "have some time for a question hopefully",
    "start": "1024439",
    "end": "1026839"
  },
  {
    "text": "all right so what is the anatomy of a",
    "start": "1026839",
    "end": "1029360"
  },
  {
    "text": "dra resource driver essentially it's a",
    "start": "1029360",
    "end": "1031819"
  },
  {
    "text": "composed of two components separate by",
    "start": "1031819",
    "end": "1033860"
  },
  {
    "text": "coordinating a centralized controller",
    "start": "1033860",
    "end": "1035780"
  },
  {
    "text": "which is running with high availability",
    "start": "1035780",
    "end": "1037760"
  },
  {
    "text": "and the node local couplet plugin",
    "start": "1037760",
    "end": "1039438"
  },
  {
    "text": "running as a demon set",
    "start": "1039439",
    "end": "1041480"
  },
  {
    "text": "uh and we also have a set of crds as",
    "start": "1041480",
    "end": "1044959"
  },
  {
    "text": "Freddie explained",
    "start": "1044959",
    "end": "1046339"
  },
  {
    "text": "the centralized controller coordinates",
    "start": "1046339",
    "end": "1048500"
  },
  {
    "text": "with codependence is scheduler to decide",
    "start": "1048500",
    "end": "1050360"
  },
  {
    "text": "which nodes",
    "start": "1050360",
    "end": "1051799"
  },
  {
    "text": "um an incoming resource claim can be",
    "start": "1051799",
    "end": "1053720"
  },
  {
    "text": "serviced on it allocates the resource",
    "start": "1053720",
    "end": "1055940"
  },
  {
    "text": "claim uh once the schedule repeats the",
    "start": "1055940",
    "end": "1058100"
  },
  {
    "text": "node and it also in charge of the",
    "start": "1058100",
    "end": "1060260"
  },
  {
    "text": "allocation",
    "start": "1060260",
    "end": "1061640"
  },
  {
    "text": "the Google plugin essentially is in",
    "start": "1061640",
    "end": "1063679"
  },
  {
    "text": "charge of doing all of the node local",
    "start": "1063679",
    "end": "1065120"
  },
  {
    "text": "operations it will publish the node",
    "start": "1065120",
    "end": "1067340"
  },
  {
    "text": "local state to the central controller it",
    "start": "1067340",
    "end": "1069500"
  },
  {
    "text": "will perform any allocation requests",
    "start": "1069500",
    "end": "1072220"
  },
  {
    "text": "requested by kublet we'll see that later",
    "start": "1072220",
    "end": "1074720"
  },
  {
    "text": "and it will also perform some",
    "start": "1074720",
    "end": "1076460"
  },
  {
    "text": "deallocation requests",
    "start": "1076460",
    "end": "1079220"
  },
  {
    "text": "the crd is essentially each resource",
    "start": "1079220",
    "end": "1082700"
  },
  {
    "text": "driver can Define its own it's it's a",
    "start": "1082700",
    "end": "1085059"
  },
  {
    "text": "driver-specific resource class",
    "start": "1085059",
    "end": "1086780"
  },
  {
    "text": "parameters resource claim parameters",
    "start": "1086780",
    "end": "1089679"
  },
  {
    "text": "additional crds which can be optionally",
    "start": "1089679",
    "end": "1092539"
  },
  {
    "text": "added for example to store the global",
    "start": "1092539",
    "end": "1095120"
  },
  {
    "text": "State or the per node state to keep",
    "start": "1095120",
    "end": "1097400"
  },
  {
    "text": "track of allocated resources",
    "start": "1097400",
    "end": "1100000"
  },
  {
    "text": "and that's it",
    "start": "1100000",
    "end": "1102380"
  },
  {
    "text": "in regards to the allocation modes okay",
    "start": "1102380",
    "end": "1104960"
  },
  {
    "text": "there are two allocation modes used one",
    "start": "1104960",
    "end": "1107419"
  },
  {
    "text": "is immediate allocation",
    "start": "1107419",
    "end": "1109039"
  },
  {
    "text": "which means that the allocation happens",
    "start": "1109039",
    "end": "1111140"
  },
  {
    "text": "immediately for resource claim",
    "start": "1111140",
    "end": "1114200"
  },
  {
    "text": "um once the resource game is created uh",
    "start": "1114200",
    "end": "1116240"
  },
  {
    "text": "the user driver will allocate the",
    "start": "1116240",
    "end": "1117559"
  },
  {
    "text": "resource on a specific node and then pod",
    "start": "1117559",
    "end": "1119600"
  },
  {
    "text": "which references claim will get",
    "start": "1119600",
    "end": "1121520"
  },
  {
    "text": "scheduled onto that node",
    "start": "1121520",
    "end": "1123200"
  },
  {
    "text": "delay the location or also known as wait",
    "start": "1123200",
    "end": "1125840"
  },
  {
    "text": "for first consumer we'll delay the",
    "start": "1125840",
    "end": "1127520"
  },
  {
    "text": "allocation of Verizon's claim until a",
    "start": "1127520",
    "end": "1129020"
  },
  {
    "text": "pod is referencing it at that point",
    "start": "1129020",
    "end": "1131960"
  },
  {
    "text": "essentially the the resource",
    "start": "1131960",
    "end": "1134960"
  },
  {
    "text": "availability will be considered as part",
    "start": "1134960",
    "end": "1136640"
  },
  {
    "text": "of the Pod scheduling in a sense where",
    "start": "1136640",
    "end": "1139100"
  },
  {
    "text": "the entirety request of the Pod the",
    "start": "1139100",
    "end": "1141380"
  },
  {
    "text": "resources CPUs device plugin other",
    "start": "1141380",
    "end": "1143960"
  },
  {
    "text": "claims will be taken into consideration",
    "start": "1143960",
    "end": "1145700"
  },
  {
    "text": "in the scheduling decision and we'll see",
    "start": "1145700",
    "end": "1147200"
  },
  {
    "text": "how this happens",
    "start": "1147200",
    "end": "1148580"
  },
  {
    "text": "right let's dig into the immediate flow",
    "start": "1148580",
    "end": "1152419"
  },
  {
    "text": "um right so we have like uh the the",
    "start": "1152419",
    "end": "1155600"
  },
  {
    "text": "floor is the same at the beginning so",
    "start": "1155600",
    "end": "1157039"
  },
  {
    "text": "the admin will deploy uh the J resource",
    "start": "1157039",
    "end": "1159140"
  },
  {
    "text": "driver the Google plugin the crds and",
    "start": "1159140",
    "end": "1161299"
  },
  {
    "text": "we'll Define a resource class a user",
    "start": "1161299",
    "end": "1163400"
  },
  {
    "text": "will create",
    "start": "1163400",
    "end": "1164500"
  },
  {
    "text": "the the resource claim",
    "start": "1164500",
    "end": "1167059"
  },
  {
    "text": "for the resource class",
    "start": "1167059",
    "end": "1169280"
  },
  {
    "text": "okay at that point the centralized",
    "start": "1169280",
    "end": "1170720"
  },
  {
    "text": "controller picks that up",
    "start": "1170720",
    "end": "1172460"
  },
  {
    "text": "and proceeds with allocation of this",
    "start": "1172460",
    "end": "1174620"
  },
  {
    "text": "resource it will allocate it on some",
    "start": "1174620",
    "end": "1176539"
  },
  {
    "text": "node in the cluster",
    "start": "1176539",
    "end": "1178059"
  },
  {
    "text": "once it's allocated it will essentially",
    "start": "1178059",
    "end": "1180860"
  },
  {
    "text": "update the recess claim status with a",
    "start": "1180860",
    "end": "1182720"
  },
  {
    "text": "resource Handler this one contains",
    "start": "1182720",
    "end": "1185419"
  },
  {
    "text": "essentially a string blob which is",
    "start": "1185419",
    "end": "1187640"
  },
  {
    "text": "passed through the system essentially by",
    "start": "1187640",
    "end": "1190160"
  },
  {
    "text": "the couplet plugin to the dra driver",
    "start": "1190160",
    "end": "1191720"
  },
  {
    "text": "again",
    "start": "1191720",
    "end": "1193580"
  },
  {
    "text": "um",
    "start": "1193580",
    "end": "1194240"
  },
  {
    "text": "as well as setting the node on which the",
    "start": "1194240",
    "end": "1197480"
  },
  {
    "text": "resource was allocated on",
    "start": "1197480",
    "end": "1200240"
  },
  {
    "text": "at that point a user will create a pod",
    "start": "1200240",
    "end": "1202220"
  },
  {
    "text": "which references that resource claim and",
    "start": "1202220",
    "end": "1204740"
  },
  {
    "text": "the kubernetes schedule will kick in",
    "start": "1204740",
    "end": "1206299"
  },
  {
    "text": "here inspect the Pod it will see that it",
    "start": "1206299",
    "end": "1208220"
  },
  {
    "text": "has a resource claim referencing and",
    "start": "1208220",
    "end": "1211520"
  },
  {
    "text": "will proceed a proceed in scheduling",
    "start": "1211520",
    "end": "1213380"
  },
  {
    "text": "this pod onto the node where the",
    "start": "1213380",
    "end": "1215539"
  },
  {
    "text": "resource was allocated on",
    "start": "1215539",
    "end": "1217940"
  },
  {
    "text": "it's a long process right so once the",
    "start": "1217940",
    "end": "1220640"
  },
  {
    "text": "Pod the node was selected then the",
    "start": "1220640",
    "end": "1223100"
  },
  {
    "text": "couplet will pick that up it will then",
    "start": "1223100",
    "end": "1225380"
  },
  {
    "text": "again see that this port is referencing",
    "start": "1225380",
    "end": "1227900"
  },
  {
    "text": "a resource claim it will call the",
    "start": "1227900",
    "end": "1229940"
  },
  {
    "text": "couplet plugin via grpc passing in the",
    "start": "1229940",
    "end": "1232100"
  },
  {
    "text": "claim information the code plugin will",
    "start": "1232100",
    "end": "1234320"
  },
  {
    "text": "perform the allocation needed and return",
    "start": "1234320",
    "end": "1236660"
  },
  {
    "text": "a set of CDI device identifiers we'll",
    "start": "1236660",
    "end": "1239360"
  },
  {
    "text": "discuss them at the end which will then",
    "start": "1239360",
    "end": "1241640"
  },
  {
    "text": "pass to The Container runtime",
    "start": "1241640",
    "end": "1243640"
  },
  {
    "text": "and the containing span up exposing the",
    "start": "1243640",
    "end": "1246500"
  },
  {
    "text": "the devices",
    "start": "1246500",
    "end": "1249020"
  },
  {
    "text": "all right that was the immediate",
    "start": "1249020",
    "end": "1250820"
  },
  {
    "text": "allocation now we'll see like we'll sort",
    "start": "1250820",
    "end": "1253100"
  },
  {
    "text": "of complete the picture for the delay",
    "start": "1253100",
    "end": "1254539"
  },
  {
    "text": "the location",
    "start": "1254539",
    "end": "1255679"
  },
  {
    "text": "the initial flow is essentially the same",
    "start": "1255679",
    "end": "1257840"
  },
  {
    "text": "right the admin will deploy whatever is",
    "start": "1257840",
    "end": "1259820"
  },
  {
    "text": "needed the user will create the resource",
    "start": "1259820",
    "end": "1261200"
  },
  {
    "text": "claim",
    "start": "1261200",
    "end": "1262100"
  },
  {
    "text": "at that point yeah one thing to note is",
    "start": "1262100",
    "end": "1264679"
  },
  {
    "text": "that the centralized control does not",
    "start": "1264679",
    "end": "1266480"
  },
  {
    "text": "kick in again it's wait for first",
    "start": "1266480",
    "end": "1268340"
  },
  {
    "text": "consumer it will not kick in the the",
    "start": "1268340",
    "end": "1271400"
  },
  {
    "text": "user will create a pod referencing in",
    "start": "1271400",
    "end": "1273020"
  },
  {
    "text": "the resource claim at that point",
    "start": "1273020",
    "end": "1275480"
  },
  {
    "text": "uh the kubernetes schedule picks that up",
    "start": "1275480",
    "end": "1277700"
  },
  {
    "text": "and now",
    "start": "1277700",
    "end": "1278900"
  },
  {
    "text": "um it essentially looks at the Pod looks",
    "start": "1278900",
    "end": "1280760"
  },
  {
    "text": "at the resource claim it creates an",
    "start": "1280760",
    "end": "1283280"
  },
  {
    "text": "object called pod scheduling context",
    "start": "1283280",
    "end": "1284840"
  },
  {
    "text": "this object is used to coordinate",
    "start": "1284840",
    "end": "1286760"
  },
  {
    "text": "operation between different dra drivers",
    "start": "1286760",
    "end": "1288679"
  },
  {
    "text": "and the kubernetes scheduler for the pod",
    "start": "1288679",
    "end": "1292220"
  },
  {
    "text": "it will set a set of potential nodes",
    "start": "1292220",
    "end": "1294760"
  },
  {
    "text": "essentially these are node where where",
    "start": "1294760",
    "end": "1296840"
  },
  {
    "text": "the Pod may run on",
    "start": "1296840",
    "end": "1298940"
  },
  {
    "text": "and on the other hand the central",
    "start": "1298940",
    "end": "1300200"
  },
  {
    "text": "controller will read those potential",
    "start": "1300200",
    "end": "1302780"
  },
  {
    "text": "nodes and we'll sort of try to narrow",
    "start": "1302780",
    "end": "1304640"
  },
  {
    "text": "down the list",
    "start": "1304640",
    "end": "1305780"
  },
  {
    "text": "by updating this object with a set of",
    "start": "1305780",
    "end": "1308419"
  },
  {
    "text": "unsuitable nodes so it's a subset of",
    "start": "1308419",
    "end": "1310880"
  },
  {
    "text": "nodes which this spot should not be",
    "start": "1310880",
    "end": "1312980"
  },
  {
    "text": "scheduled on this operation is repeated",
    "start": "1312980",
    "end": "1315880"
  },
  {
    "text": "for all resource drivers until a",
    "start": "1315880",
    "end": "1319400"
  },
  {
    "text": "scheduling decision is made once this",
    "start": "1319400",
    "end": "1321980"
  },
  {
    "text": "scheduling decision is made a kubernetes",
    "start": "1321980",
    "end": "1324620"
  },
  {
    "text": "schedule will update the Pod scratching",
    "start": "1324620",
    "end": "1327140"
  },
  {
    "text": "in context with the selected node so a",
    "start": "1327140",
    "end": "1328880"
  },
  {
    "text": "node was chosen",
    "start": "1328880",
    "end": "1330679"
  },
  {
    "text": "at that point the centralized controller",
    "start": "1330679",
    "end": "1332659"
  },
  {
    "text": "will pick that up the selected node and",
    "start": "1332659",
    "end": "1334100"
  },
  {
    "text": "will proceed with the allocation onto",
    "start": "1334100",
    "end": "1336140"
  },
  {
    "text": "that node same as it was in immediate",
    "start": "1336140",
    "end": "1339799"
  },
  {
    "text": "allocation",
    "start": "1339799",
    "end": "1341360"
  },
  {
    "text": "so this was like a quick rundown yeah of",
    "start": "1341360",
    "end": "1345140"
  },
  {
    "text": "the two allocation loan and how it works",
    "start": "1345140",
    "end": "1346520"
  },
  {
    "text": "with kubernetes and now let's discuss",
    "start": "1346520",
    "end": "1348679"
  },
  {
    "text": "like at high level how you would write a",
    "start": "1348679",
    "end": "1350419"
  },
  {
    "text": "dra driver",
    "start": "1350419",
    "end": "1352760"
  },
  {
    "text": "um yeah so essentially what you would",
    "start": "1352760",
    "end": "1354320"
  },
  {
    "text": "need you need to First of course Define",
    "start": "1354320",
    "end": "1356240"
  },
  {
    "text": "a name for your driver",
    "start": "1356240",
    "end": "1358520"
  },
  {
    "text": "um Define the crds which are are to be",
    "start": "1358520",
    "end": "1362059"
  },
  {
    "text": "referenced in the resource class and",
    "start": "1362059",
    "end": "1363380"
  },
  {
    "text": "resource claim parameters",
    "start": "1363380",
    "end": "1365120"
  },
  {
    "text": "uh essentially these are costume",
    "start": "1365120",
    "end": "1367220"
  },
  {
    "text": "parameters for your resource which may",
    "start": "1367220",
    "end": "1368780"
  },
  {
    "text": "be Global or per resource allocation",
    "start": "1368780",
    "end": "1371480"
  },
  {
    "text": "you decide how the the controller and",
    "start": "1371480",
    "end": "1373760"
  },
  {
    "text": "the plugin are going to coordinate or",
    "start": "1373760",
    "end": "1375200"
  },
  {
    "text": "communicate is it per node crds is it",
    "start": "1375200",
    "end": "1378020"
  },
  {
    "text": "some grpc with some database combination",
    "start": "1378020",
    "end": "1380000"
  },
  {
    "text": "of the two the key Concepts here that",
    "start": "1380000",
    "end": "1382159"
  },
  {
    "text": "you need to you essentially need to",
    "start": "1382159",
    "end": "1383600"
  },
  {
    "text": "represents the following into represents",
    "start": "1383600",
    "end": "1385159"
  },
  {
    "text": "the set of available resources in the",
    "start": "1385159",
    "end": "1387140"
  },
  {
    "text": "cluster or on the Node the set of",
    "start": "1387140",
    "end": "1389360"
  },
  {
    "text": "allocated resources and the set of",
    "start": "1389360",
    "end": "1391340"
  },
  {
    "text": "prepared resources",
    "start": "1391340",
    "end": "1393440"
  },
  {
    "text": "you will need in addition to provide a",
    "start": "1393440",
    "end": "1395059"
  },
  {
    "text": "default implementation of your resource",
    "start": "1395059",
    "end": "1396559"
  },
  {
    "text": "class to be distributed with your driver",
    "start": "1396559",
    "end": "1398000"
  },
  {
    "text": "so user can use it and then of course",
    "start": "1398000",
    "end": "1400580"
  },
  {
    "text": "there's the implementation",
    "start": "1400580",
    "end": "1402320"
  },
  {
    "text": "implementation of the controller and",
    "start": "1402320",
    "end": "1404360"
  },
  {
    "text": "implementation of the couplet plugin",
    "start": "1404360",
    "end": "1405740"
  },
  {
    "text": "both of them include some boilerplate",
    "start": "1405740",
    "end": "1407419"
  },
  {
    "text": "code in order to interact with",
    "start": "1407419",
    "end": "1408440"
  },
  {
    "text": "codeburnettes apis in controller case or",
    "start": "1408440",
    "end": "1410960"
  },
  {
    "text": "interact with couplet",
    "start": "1410960",
    "end": "1412580"
  },
  {
    "text": "as well as of course the business Logic",
    "start": "1412580",
    "end": "1414620"
  },
  {
    "text": "for the two",
    "start": "1414620",
    "end": "1417340"
  },
  {
    "text": "okay so this was a long list so to help",
    "start": "1417380",
    "end": "1419900"
  },
  {
    "text": "you do that essentially what we have is",
    "start": "1419900",
    "end": "1422960"
  },
  {
    "text": "a bunch of packages like upgraded by the",
    "start": "1422960",
    "end": "1425120"
  },
  {
    "text": "kubernetes ecosystem to help you do that",
    "start": "1425120",
    "end": "1427820"
  },
  {
    "text": "the first one is the controller package",
    "start": "1427820",
    "end": "1429620"
  },
  {
    "text": "from the dynamic users allocation",
    "start": "1429620",
    "end": "1431240"
  },
  {
    "text": "controller project which implements most",
    "start": "1431240",
    "end": "1433220"
  },
  {
    "text": "of the boilerplate code to interact with",
    "start": "1433220",
    "end": "1434780"
  },
  {
    "text": "the kubernetes dra API object",
    "start": "1434780",
    "end": "1437419"
  },
  {
    "text": "you it defines a driver interface which",
    "start": "1437419",
    "end": "1441020"
  },
  {
    "text": "you need to implement and we'll go over",
    "start": "1441020",
    "end": "1442640"
  },
  {
    "text": "that and once you implement that you",
    "start": "1442640",
    "end": "1444980"
  },
  {
    "text": "provide it to the new method and you",
    "start": "1444980",
    "end": "1447260"
  },
  {
    "text": "just you get a controller and just call",
    "start": "1447260",
    "end": "1448520"
  },
  {
    "text": "run",
    "start": "1448520",
    "end": "1449480"
  },
  {
    "text": "over simplifying it a bit but that's at",
    "start": "1449480",
    "end": "1451640"
  },
  {
    "text": "high level how it works for the complete",
    "start": "1451640",
    "end": "1454220"
  },
  {
    "text": "part there is an implementation for of",
    "start": "1454220",
    "end": "1456140"
  },
  {
    "text": "the registration with couplet",
    "start": "1456140",
    "end": "1459320"
  },
  {
    "text": "grpc so this is all like the",
    "start": "1459320",
    "end": "1461780"
  },
  {
    "text": "registration is already provided for you",
    "start": "1461780",
    "end": "1463640"
  },
  {
    "text": "you just need to provide the grpc",
    "start": "1463640",
    "end": "1465980"
  },
  {
    "text": "implementation for the node server so",
    "start": "1465980",
    "end": "1467780"
  },
  {
    "text": "it's like the JPC server which will",
    "start": "1467780",
    "end": "1469640"
  },
  {
    "text": "allocate and deallocate resources and",
    "start": "1469640",
    "end": "1471860"
  },
  {
    "text": "again call a run method there as well",
    "start": "1471860",
    "end": "1475240"
  },
  {
    "text": "grpc is defined in the couplet like apis",
    "start": "1475240",
    "end": "1478880"
  },
  {
    "text": "and the kubernetes project and",
    "start": "1478880",
    "end": "1481700"
  },
  {
    "text": "that's for the kubernetes part we have",
    "start": "1481700",
    "end": "1483440"
  },
  {
    "text": "like a bunch of CD hype CDI helpers here",
    "start": "1483440",
    "end": "1486440"
  },
  {
    "text": "so you can reference them later",
    "start": "1486440",
    "end": "1488000"
  },
  {
    "text": "essentially they will help you create",
    "start": "1488000",
    "end": "1489140"
  },
  {
    "text": "CDI device specification",
    "start": "1489140",
    "end": "1491960"
  },
  {
    "text": "um to be used later on but container",
    "start": "1491960",
    "end": "1493700"
  },
  {
    "text": "runtime and I think most importantly",
    "start": "1493700",
    "end": "1496000"
  },
  {
    "text": "importantly here is the example driver",
    "start": "1496000",
    "end": "1498740"
  },
  {
    "text": "there's a dra example driver which is",
    "start": "1498740",
    "end": "1501320"
  },
  {
    "text": "fully functional on top of like mock",
    "start": "1501320",
    "end": "1503360"
  },
  {
    "text": "gpus you just need a kind cluster to",
    "start": "1503360",
    "end": "1506539"
  },
  {
    "text": "bring it up and it there is like a",
    "start": "1506539",
    "end": "1508340"
  },
  {
    "text": "pretty good readme with step-by-step",
    "start": "1508340",
    "end": "1510500"
  },
  {
    "text": "instruction how to run it there you can",
    "start": "1510500",
    "end": "1512480"
  },
  {
    "text": "expect the different parts it serves as",
    "start": "1512480",
    "end": "1513980"
  },
  {
    "text": "a reference implementation where you can",
    "start": "1513980",
    "end": "1515900"
  },
  {
    "text": "sort of take reference for it for kit",
    "start": "1515900",
    "end": "1518900"
  },
  {
    "text": "and extend or rewrite yeah",
    "start": "1518900",
    "end": "1522620"
  },
  {
    "text": "all right so in regards to the driver",
    "start": "1522620",
    "end": "1525020"
  },
  {
    "text": "interface in the controller so",
    "start": "1525020",
    "end": "1527600"
  },
  {
    "text": "um that's the driver interface so it has",
    "start": "1527600",
    "end": "1529220"
  },
  {
    "text": "a couple of methods we'll quickly go",
    "start": "1529220",
    "end": "1531020"
  },
  {
    "text": "over them",
    "start": "1531020",
    "end": "1532640"
  },
  {
    "text": "um there is the get class parameters and",
    "start": "1532640",
    "end": "1534740"
  },
  {
    "text": "get claim parameters",
    "start": "1534740",
    "end": "1536299"
  },
  {
    "text": "nothing too fancy here if we discuss the",
    "start": "1536299",
    "end": "1539059"
  },
  {
    "text": "vendor specific",
    "start": "1539059",
    "end": "1541539"
  },
  {
    "text": "crds for the class and claim this",
    "start": "1541539",
    "end": "1543740"
  },
  {
    "text": "discussions claim these are the Getters",
    "start": "1543740",
    "end": "1545539"
  },
  {
    "text": "for them",
    "start": "1545539",
    "end": "1546500"
  },
  {
    "text": "they will return the specific instance",
    "start": "1546500",
    "end": "1550279"
  },
  {
    "text": "of the event of the crd",
    "start": "1550279",
    "end": "1553840"
  },
  {
    "text": "there is the allocate call so the",
    "start": "1553880",
    "end": "1556039"
  },
  {
    "text": "allocate will essentially perform the",
    "start": "1556039",
    "end": "1557659"
  },
  {
    "text": "allocation of a resource notice the",
    "start": "1557659",
    "end": "1560419"
  },
  {
    "text": "selected node field so this guy is empty",
    "start": "1560419",
    "end": "1562940"
  },
  {
    "text": "in case of immediate allocation where",
    "start": "1562940",
    "end": "1565520"
  },
  {
    "text": "you need to choose your own node and it",
    "start": "1565520",
    "end": "1568520"
  },
  {
    "text": "will have a value in case of delay the",
    "start": "1568520",
    "end": "1570799"
  },
  {
    "text": "location because of the whole pod",
    "start": "1570799",
    "end": "1572240"
  },
  {
    "text": "scheduling context which we went through",
    "start": "1572240",
    "end": "1573919"
  },
  {
    "text": "again it will essentially you can you",
    "start": "1573919",
    "end": "1576500"
  },
  {
    "text": "will get all the claim the claim",
    "start": "1576500",
    "end": "1577760"
  },
  {
    "text": "parameters the class the resource class",
    "start": "1577760",
    "end": "1579200"
  },
  {
    "text": "there is class parameters and you need",
    "start": "1579200",
    "end": "1581360"
  },
  {
    "text": "to return a location result this struct",
    "start": "1581360",
    "end": "1584120"
  },
  {
    "text": "will contain eventually that string blob",
    "start": "1584120",
    "end": "1587000"
  },
  {
    "text": "which will contain information of the",
    "start": "1587000",
    "end": "1589220"
  },
  {
    "text": "allocated Resource as well as the node",
    "start": "1589220",
    "end": "1591679"
  },
  {
    "text": "where the resource is available on",
    "start": "1591679",
    "end": "1593659"
  },
  {
    "text": "uh the allocate call essentially the",
    "start": "1593659",
    "end": "1595760"
  },
  {
    "text": "allocates the resource it's called when",
    "start": "1595760",
    "end": "1597200"
  },
  {
    "text": "the resource claim is deleted",
    "start": "1597200",
    "end": "1599419"
  },
  {
    "text": "um it should essentially free resources",
    "start": "1599419",
    "end": "1601220"
  },
  {
    "text": "uh which were created by this claim",
    "start": "1601220",
    "end": "1605620"
  },
  {
    "text": "unsuitable nodes so uh these guys gets",
    "start": "1605840",
    "end": "1608720"
  },
  {
    "text": "called when uh",
    "start": "1608720",
    "end": "1611179"
  },
  {
    "text": "this guide gets called when um",
    "start": "1611179",
    "end": "1613659"
  },
  {
    "text": "during the wait for first consumer flow",
    "start": "1613659",
    "end": "1616700"
  },
  {
    "text": "where we need to negotiate with the",
    "start": "1616700",
    "end": "1618440"
  },
  {
    "text": "scheduler on which nodes we are",
    "start": "1618440",
    "end": "1620000"
  },
  {
    "text": "scheduled on",
    "start": "1620000",
    "end": "1621039"
  },
  {
    "text": "essentially we need to it accepts like",
    "start": "1621039",
    "end": "1623840"
  },
  {
    "text": "potential nodes and it needs to update",
    "start": "1623840",
    "end": "1626600"
  },
  {
    "text": "in in the pasting claim allocation",
    "start": "1626600",
    "end": "1628820"
  },
  {
    "text": "object",
    "start": "1628820",
    "end": "1629860"
  },
  {
    "text": "the unsuitable nodes for each claim",
    "start": "1629860",
    "end": "1633620"
  },
  {
    "text": "um again as I discussed before so you",
    "start": "1633620",
    "end": "1635600"
  },
  {
    "text": "update the struct with what you don't",
    "start": "1635600",
    "end": "1637100"
  },
  {
    "text": "want to be scheduled on",
    "start": "1637100",
    "end": "1638720"
  },
  {
    "text": "in this one",
    "start": "1638720",
    "end": "1640400"
  },
  {
    "text": "for the note part so there is the node",
    "start": "1640400",
    "end": "1642020"
  },
  {
    "text": "prepare and unprepared resource uh this",
    "start": "1642020",
    "end": "1644720"
  },
  {
    "text": "again run on each node by the equivalent",
    "start": "1644720",
    "end": "1646340"
  },
  {
    "text": "plugin and not prepare resource will",
    "start": "1646340",
    "end": "1648620"
  },
  {
    "text": "prepare the resource it will generate a",
    "start": "1648620",
    "end": "1651440"
  },
  {
    "text": "CDI device specification and return the",
    "start": "1651440",
    "end": "1653480"
  },
  {
    "text": "CDI device IDs one thing to note here is",
    "start": "1653480",
    "end": "1656659"
  },
  {
    "text": "uh and of course the resource handle",
    "start": "1656659",
    "end": "1658100"
  },
  {
    "text": "that you will get the new source handle",
    "start": "1658100",
    "end": "1659419"
  },
  {
    "text": "in the request which is that string blob",
    "start": "1659419",
    "end": "1661520"
  },
  {
    "text": "which we talked about earlier",
    "start": "1661520",
    "end": "1663799"
  },
  {
    "text": "um one thing to note the call must be",
    "start": "1663799",
    "end": "1665059"
  },
  {
    "text": "the potent and you have under 10 seconds",
    "start": "1665059",
    "end": "1667100"
  },
  {
    "text": "to finish the call currently at least",
    "start": "1667100",
    "end": "1670460"
  },
  {
    "text": "with the kubernetes",
    "start": "1670460",
    "end": "1672940"
  },
  {
    "text": "unprepared it does like the opposite of",
    "start": "1672940",
    "end": "1676159"
  },
  {
    "text": "prepare resource it's get called when I",
    "start": "1676159",
    "end": "1679340"
  },
  {
    "text": "didn't mention that the first one gets",
    "start": "1679340",
    "end": "1680419"
  },
  {
    "text": "called when the port is created and it",
    "start": "1680419",
    "end": "1681559"
  },
  {
    "text": "references claim this one will get",
    "start": "1681559",
    "end": "1682880"
  },
  {
    "text": "called when a port is deleted and you",
    "start": "1682880",
    "end": "1684679"
  },
  {
    "text": "need to perform cleanup",
    "start": "1684679",
    "end": "1687620"
  },
  {
    "text": "um for their for their resource and",
    "start": "1687620",
    "end": "1690020"
  },
  {
    "text": "again this call must be the important as",
    "start": "1690020",
    "end": "1691880"
  },
  {
    "text": "well",
    "start": "1691880",
    "end": "1693980"
  },
  {
    "text": "um and uh yeah and let's like talk a",
    "start": "1693980",
    "end": "1697460"
  },
  {
    "text": "little bit about what is CDI like we",
    "start": "1697460",
    "end": "1698900"
  },
  {
    "text": "mentioned before a couple of times CDs",
    "start": "1698900",
    "end": "1701299"
  },
  {
    "text": "stands for container device interface",
    "start": "1701299",
    "end": "1702740"
  },
  {
    "text": "it's essentially a specification",
    "start": "1702740",
    "end": "1705880"
  },
  {
    "text": "which it's a json's formatted",
    "start": "1705880",
    "end": "1708919"
  },
  {
    "text": "specification which which describes how",
    "start": "1708919",
    "end": "1711380"
  },
  {
    "text": "a device should be exposed to a",
    "start": "1711380",
    "end": "1713539"
  },
  {
    "text": "container it contains essentially",
    "start": "1713539",
    "end": "1716059"
  },
  {
    "text": "information such as device nodes which",
    "start": "1716059",
    "end": "1717980"
  },
  {
    "text": "needs to be exposed like chart devices",
    "start": "1717980",
    "end": "1719960"
  },
  {
    "text": "as environment variables host mounts and",
    "start": "1719960",
    "end": "1723080"
  },
  {
    "text": "hooks that needs to be run",
    "start": "1723080",
    "end": "1724820"
  },
  {
    "text": "it's sort of a standardized way to",
    "start": "1724820",
    "end": "1727100"
  },
  {
    "text": "export devices to container it's big",
    "start": "1727100",
    "end": "1728539"
  },
  {
    "text": "it's getting it's getting consumed by",
    "start": "1728539",
    "end": "1730039"
  },
  {
    "text": "the container runtime like container the",
    "start": "1730039",
    "end": "1731539"
  },
  {
    "text": "cryo",
    "start": "1731539",
    "end": "1732919"
  },
  {
    "text": "um",
    "start": "1732919",
    "end": "1733720"
  },
  {
    "text": "to to export devices to container and",
    "start": "1733720",
    "end": "1736520"
  },
  {
    "text": "that's like an example of a CDI device",
    "start": "1736520",
    "end": "1738380"
  },
  {
    "text": "specification",
    "start": "1738380",
    "end": "1740480"
  },
  {
    "text": "um",
    "start": "1740480",
    "end": "1741260"
  },
  {
    "text": "just contains as I said you can dig into",
    "start": "1741260",
    "end": "1743299"
  },
  {
    "text": "it you know later",
    "start": "1743299",
    "end": "1746620"
  },
  {
    "text": "um and like next thing is just link of a",
    "start": "1747080",
    "end": "1749240"
  },
  {
    "text": "couple of resources which we added uh",
    "start": "1749240",
    "end": "1751700"
  },
  {
    "text": "throughout this presentation so it's all",
    "start": "1751700",
    "end": "1753559"
  },
  {
    "text": "here uh you can reference later and with",
    "start": "1753559",
    "end": "1757220"
  },
  {
    "text": "that I think we are done 12 seconds to",
    "start": "1757220",
    "end": "1758899"
  },
  {
    "text": "go",
    "start": "1758899",
    "end": "1760279"
  },
  {
    "text": "thank you",
    "start": "1760279",
    "end": "1762820"
  },
  {
    "text": "[Applause]",
    "start": "1763960",
    "end": "1766489"
  }
]