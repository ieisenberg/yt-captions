[
  {
    "text": "hi my name is ola and i'm jarek",
    "start": "240",
    "end": "3040"
  },
  {
    "text": "greetings from warsaw we are devops",
    "start": "3040",
    "end": "5120"
  },
  {
    "text": "engineers and we help developers in",
    "start": "5120",
    "end": "6960"
  },
  {
    "text": "optimizing build and deployment",
    "start": "6960",
    "end": "8320"
  },
  {
    "text": "processes on different environments",
    "start": "8320",
    "end": "10080"
  },
  {
    "text": "mostly kubernetes",
    "start": "10080",
    "end": "11519"
  },
  {
    "text": "we would like to tell you about two",
    "start": "11519",
    "end": "13280"
  },
  {
    "text": "great pieces of technology",
    "start": "13280",
    "end": "14960"
  },
  {
    "text": "namely network service mesh and the",
    "start": "14960",
    "end": "16720"
  },
  {
    "text": "tungsten fabric virtual network",
    "start": "16720",
    "end": "18400"
  },
  {
    "text": "controller",
    "start": "18400",
    "end": "19439"
  },
  {
    "text": "and how to make them work together to",
    "start": "19439",
    "end": "22320"
  },
  {
    "text": "form a nice multi-cloud setup",
    "start": "22320",
    "end": "24880"
  },
  {
    "text": "if you have ever deployed an application",
    "start": "24880",
    "end": "27119"
  },
  {
    "text": "in a kubernetes environment",
    "start": "27119",
    "end": "28720"
  },
  {
    "text": "there is a high chance that you",
    "start": "28720",
    "end": "30560"
  },
  {
    "text": "encountered some problems when trying to",
    "start": "30560",
    "end": "32880"
  },
  {
    "text": "connect to the outside world",
    "start": "32880",
    "end": "34800"
  },
  {
    "text": "everything works perfectly as long as",
    "start": "34800",
    "end": "37120"
  },
  {
    "text": "all your dependencies",
    "start": "37120",
    "end": "38480"
  },
  {
    "text": "are contained inside a single kubernetes",
    "start": "38480",
    "end": "40559"
  },
  {
    "text": "cluster but when you start to",
    "start": "40559",
    "end": "42879"
  },
  {
    "text": "integrate with some external services",
    "start": "42879",
    "end": "45680"
  },
  {
    "text": "you need to deal with stuff like routers",
    "start": "45680",
    "end": "48079"
  },
  {
    "text": "firewalls security policies and",
    "start": "48079",
    "end": "50480"
  },
  {
    "text": "different vpn applications",
    "start": "50480",
    "end": "52559"
  },
  {
    "text": "that don't really fit into the cloud",
    "start": "52559",
    "end": "55039"
  },
  {
    "text": "native automation provided by kubernetes",
    "start": "55039",
    "end": "57760"
  },
  {
    "text": "and",
    "start": "57760",
    "end": "58320"
  },
  {
    "text": "they actually shouldn't be a concern for",
    "start": "58320",
    "end": "60399"
  },
  {
    "text": "your application",
    "start": "60399",
    "end": "62160"
  },
  {
    "text": "network service mesh is a tool that aims",
    "start": "62160",
    "end": "64720"
  },
  {
    "text": "to solve this exact cloud native",
    "start": "64720",
    "end": "66560"
  },
  {
    "text": "networking problem",
    "start": "66560",
    "end": "67680"
  },
  {
    "text": "and be a game changer in this field it",
    "start": "67680",
    "end": "70400"
  },
  {
    "text": "brings cloud native to the networking",
    "start": "70400",
    "end": "72479"
  },
  {
    "text": "world by exposing an api that allows you",
    "start": "72479",
    "end": "75200"
  },
  {
    "text": "to dynamically",
    "start": "75200",
    "end": "76400"
  },
  {
    "text": "create and attach your workloads to",
    "start": "76400",
    "end": "78479"
  },
  {
    "text": "services inside and outside",
    "start": "78479",
    "end": "80479"
  },
  {
    "text": "of your deployment environment and",
    "start": "80479",
    "end": "82880"
  },
  {
    "text": "tungsten fabric appears to be a great",
    "start": "82880",
    "end": "84799"
  },
  {
    "text": "complementary technology",
    "start": "84799",
    "end": "86240"
  },
  {
    "text": "for network service mesh and we would",
    "start": "86240",
    "end": "88640"
  },
  {
    "text": "like to show you why",
    "start": "88640",
    "end": "90240"
  },
  {
    "text": "so here comes the agenda for today",
    "start": "90240",
    "end": "93920"
  },
  {
    "text": "we will start with a brief introduction",
    "start": "93920",
    "end": "95759"
  },
  {
    "text": "about network service mesh",
    "start": "95759",
    "end": "97759"
  },
  {
    "text": "so what it is and what architecture it",
    "start": "97759",
    "end": "100079"
  },
  {
    "text": "has",
    "start": "100079",
    "end": "101119"
  },
  {
    "text": "then we'll explain on a high level how",
    "start": "101119",
    "end": "103280"
  },
  {
    "text": "the connectivity between",
    "start": "103280",
    "end": "104560"
  },
  {
    "text": "apple and external world can be",
    "start": "104560",
    "end": "106479"
  },
  {
    "text": "established with nsm",
    "start": "106479",
    "end": "108640"
  },
  {
    "text": "then we'll say a few words about what is",
    "start": "108640",
    "end": "110880"
  },
  {
    "text": "tungsten fabric",
    "start": "110880",
    "end": "112079"
  },
  {
    "text": "and we will give um overview of the",
    "start": "112079",
    "end": "114799"
  },
  {
    "text": "implementation",
    "start": "114799",
    "end": "116000"
  },
  {
    "text": "of a tungsten fabric for water for nsm",
    "start": "116000",
    "end": "118880"
  },
  {
    "text": "which we've prepared for this",
    "start": "118880",
    "end": "120079"
  },
  {
    "text": "presentation",
    "start": "120079",
    "end": "121200"
  },
  {
    "text": "at the end we'll give a demo of tungsten",
    "start": "121200",
    "end": "123600"
  },
  {
    "text": "fabric for water",
    "start": "123600",
    "end": "125200"
  },
  {
    "text": "with openstack cluster and kubernetes",
    "start": "125200",
    "end": "128160"
  },
  {
    "text": "cluster",
    "start": "128160",
    "end": "129520"
  },
  {
    "text": "okay so let's start with a question what",
    "start": "129520",
    "end": "132400"
  },
  {
    "text": "is network service mesh",
    "start": "132400",
    "end": "134160"
  },
  {
    "text": "so network service mesh is cncf",
    "start": "134160",
    "end": "136720"
  },
  {
    "text": "standalone project",
    "start": "136720",
    "end": "138000"
  },
  {
    "text": "that extends networking solutions",
    "start": "138000",
    "end": "139840"
  },
  {
    "text": "implemented in kubernetes",
    "start": "139840",
    "end": "142080"
  },
  {
    "text": "and it provides l2 l3 networking for",
    "start": "142080",
    "end": "145200"
  },
  {
    "text": "applications deployed in kubernetes and",
    "start": "145200",
    "end": "147280"
  },
  {
    "text": "facilitates the configuration of",
    "start": "147280",
    "end": "149440"
  },
  {
    "text": "connectivity",
    "start": "149440",
    "end": "150640"
  },
  {
    "text": "between a pod and external services for",
    "start": "150640",
    "end": "153519"
  },
  {
    "text": "example pods from different cluster",
    "start": "153519",
    "end": "156640"
  },
  {
    "text": "basically you can think of it as a way",
    "start": "156640",
    "end": "159440"
  },
  {
    "text": "to dynamically",
    "start": "159440",
    "end": "160560"
  },
  {
    "text": "attach additional network interface to a",
    "start": "160560",
    "end": "162640"
  },
  {
    "text": "pod",
    "start": "162640",
    "end": "164879"
  },
  {
    "text": "let's take a look at a few network",
    "start": "165680",
    "end": "167920"
  },
  {
    "text": "service mesh components relevant for",
    "start": "167920",
    "end": "169599"
  },
  {
    "text": "this presentation",
    "start": "169599",
    "end": "171200"
  },
  {
    "text": "so network service registry",
    "start": "171200",
    "end": "174480"
  },
  {
    "text": "it's here and it contains all the",
    "start": "174480",
    "end": "177599"
  },
  {
    "text": "available",
    "start": "177599",
    "end": "178239"
  },
  {
    "text": "virtual networks in this case it's alice",
    "start": "178239",
    "end": "180879"
  },
  {
    "text": "and bob",
    "start": "180879",
    "end": "182640"
  },
  {
    "text": "network service manager uh it is a",
    "start": "182640",
    "end": "185680"
  },
  {
    "text": "control plane component",
    "start": "185680",
    "end": "187360"
  },
  {
    "text": "it is a demon set deployed on each node",
    "start": "187360",
    "end": "189760"
  },
  {
    "text": "in a cluster",
    "start": "189760",
    "end": "191519"
  },
  {
    "text": "it accepts network service requests from",
    "start": "191519",
    "end": "193599"
  },
  {
    "text": "pods verifies network service presence",
    "start": "193599",
    "end": "195920"
  },
  {
    "text": "in network service registry",
    "start": "195920",
    "end": "197599"
  },
  {
    "text": "and forwards the request to the",
    "start": "197599",
    "end": "199120"
  },
  {
    "text": "forwarder and",
    "start": "199120",
    "end": "201040"
  },
  {
    "text": "network service mesh forwarders so ford",
    "start": "201040",
    "end": "204319"
  },
  {
    "text": "is a data plane component it provides",
    "start": "204319",
    "end": "207840"
  },
  {
    "text": "the connectivity requested by the",
    "start": "207840",
    "end": "209680"
  },
  {
    "text": "manager",
    "start": "209680",
    "end": "210879"
  },
  {
    "text": "and this is a plugable component so",
    "start": "210879",
    "end": "213360"
  },
  {
    "text": "official network service mesh called",
    "start": "213360",
    "end": "214879"
  },
  {
    "text": "repository provides implementation for",
    "start": "214879",
    "end": "217040"
  },
  {
    "text": "vpp",
    "start": "217040",
    "end": "217760"
  },
  {
    "text": "and kernel but we want to show you",
    "start": "217760",
    "end": "221680"
  },
  {
    "text": "how the new implementation can be done",
    "start": "221680",
    "end": "223680"
  },
  {
    "text": "on tungsten fabric",
    "start": "223680",
    "end": "225280"
  },
  {
    "text": "example so let's talk",
    "start": "225280",
    "end": "228720"
  },
  {
    "text": "now about how network service mesh is",
    "start": "228720",
    "end": "231519"
  },
  {
    "text": "used to establish connectivity between a",
    "start": "231519",
    "end": "233360"
  },
  {
    "text": "kubernetes board",
    "start": "233360",
    "end": "234480"
  },
  {
    "text": "and an external service",
    "start": "234480",
    "end": "237920"
  },
  {
    "text": "so we have a kubernetes node with a pod",
    "start": "237920",
    "end": "241360"
  },
  {
    "text": "pod a inside and how can we connect with",
    "start": "241360",
    "end": "245760"
  },
  {
    "text": "an",
    "start": "245760",
    "end": "246080"
  },
  {
    "text": "external network from the pod so first",
    "start": "246080",
    "end": "249760"
  },
  {
    "text": "we need to install network service mesh",
    "start": "249760",
    "end": "251599"
  },
  {
    "text": "in the cluster",
    "start": "251599",
    "end": "253120"
  },
  {
    "text": "so this part and it will provide",
    "start": "253120",
    "end": "256880"
  },
  {
    "text": "network service manager and for other",
    "start": "256880",
    "end": "259680"
  },
  {
    "text": "modules",
    "start": "259680",
    "end": "260720"
  },
  {
    "text": "and network services manager maintains a",
    "start": "260720",
    "end": "263040"
  },
  {
    "text": "list of available folders and network",
    "start": "263040",
    "end": "265440"
  },
  {
    "text": "services",
    "start": "265440",
    "end": "266560"
  },
  {
    "text": "and it's called network service registry",
    "start": "266560",
    "end": "269919"
  },
  {
    "text": "and in this example we have two",
    "start": "269919",
    "end": "271440"
  },
  {
    "text": "forwarders",
    "start": "271440",
    "end": "272960"
  },
  {
    "text": "here and two networks",
    "start": "272960",
    "end": "276160"
  },
  {
    "text": "already registered so",
    "start": "276160",
    "end": "279440"
  },
  {
    "text": "what happens next pod a creates network",
    "start": "279440",
    "end": "283199"
  },
  {
    "text": "service requests to network service",
    "start": "283199",
    "end": "284960"
  },
  {
    "text": "manager",
    "start": "284960",
    "end": "285840"
  },
  {
    "text": "to attach to a new service to a new",
    "start": "285840",
    "end": "288240"
  },
  {
    "text": "network service",
    "start": "288240",
    "end": "290479"
  },
  {
    "text": "in request it specifies to which service",
    "start": "290479",
    "end": "293199"
  },
  {
    "text": "it wants to be connected to",
    "start": "293199",
    "end": "294639"
  },
  {
    "text": "and which mechanism should it should be",
    "start": "294639",
    "end": "296720"
  },
  {
    "text": "used with",
    "start": "296720",
    "end": "297680"
  },
  {
    "text": "uh which for order so it wants to be",
    "start": "297680",
    "end": "300720"
  },
  {
    "text": "connected to alice and it wants to use",
    "start": "300720",
    "end": "303199"
  },
  {
    "text": "vpp forwarder in this case",
    "start": "303199",
    "end": "306800"
  },
  {
    "text": "and and this request can be sent",
    "start": "307520",
    "end": "309759"
  },
  {
    "text": "whenever application needs to connect to",
    "start": "309759",
    "end": "311919"
  },
  {
    "text": "the network uh so yeah now",
    "start": "311919",
    "end": "315680"
  },
  {
    "text": "uh manager takes over and manager",
    "start": "315680",
    "end": "319120"
  },
  {
    "text": "verifies",
    "start": "319120",
    "end": "319919"
  },
  {
    "text": "if alice network is available in the",
    "start": "319919",
    "end": "321840"
  },
  {
    "text": "registry",
    "start": "321840",
    "end": "323120"
  },
  {
    "text": "so yes it is available the response",
    "start": "323120",
    "end": "326000"
  },
  {
    "text": "positive response goes back",
    "start": "326000",
    "end": "328160"
  },
  {
    "text": "and now network service manager forwards",
    "start": "328160",
    "end": "331600"
  },
  {
    "text": "the request to the forwarder",
    "start": "331600",
    "end": "333440"
  },
  {
    "text": "to the vbp forwarder because this is",
    "start": "333440",
    "end": "335360"
  },
  {
    "text": "what pod a requested",
    "start": "335360",
    "end": "338240"
  },
  {
    "text": "and forwarder adds an interface to port",
    "start": "338240",
    "end": "341520"
  },
  {
    "text": "a",
    "start": "341520",
    "end": "342080"
  },
  {
    "text": "and enables connectivity to alice",
    "start": "342080",
    "end": "344880"
  },
  {
    "text": "network",
    "start": "344880",
    "end": "346160"
  },
  {
    "text": "and that's it we have pod a connected to",
    "start": "346160",
    "end": "349600"
  },
  {
    "text": "the",
    "start": "349600",
    "end": "349919"
  },
  {
    "text": "external service through newly created",
    "start": "349919",
    "end": "352000"
  },
  {
    "text": "network service",
    "start": "352000",
    "end": "353520"
  },
  {
    "text": "network interface sorry",
    "start": "353520",
    "end": "356639"
  },
  {
    "text": "but of course default kubernetes bot",
    "start": "356639",
    "end": "359039"
  },
  {
    "text": "network",
    "start": "359039",
    "end": "359680"
  },
  {
    "text": "is still available so",
    "start": "359680",
    "end": "363680"
  },
  {
    "text": "this is how network service mesh works",
    "start": "363680",
    "end": "366400"
  },
  {
    "text": "and",
    "start": "366400",
    "end": "367360"
  },
  {
    "text": "each forwarder has its own mechanism for",
    "start": "367360",
    "end": "369680"
  },
  {
    "text": "providing connectivity to the services",
    "start": "369680",
    "end": "372720"
  },
  {
    "text": "today we want to show you how tungsten",
    "start": "372720",
    "end": "375520"
  },
  {
    "text": "fabric",
    "start": "375520",
    "end": "376160"
  },
  {
    "text": "can be used as such mechanism so to do",
    "start": "376160",
    "end": "379280"
  },
  {
    "text": "so we've prepared our own forwarder",
    "start": "379280",
    "end": "381840"
  },
  {
    "text": "which we'll present later on but let's",
    "start": "381840",
    "end": "384560"
  },
  {
    "text": "talk about tungsten fabric first",
    "start": "384560",
    "end": "387919"
  },
  {
    "text": "so what is tungsten fabric tungsten",
    "start": "387919",
    "end": "390800"
  },
  {
    "text": "fabric is networking backend for",
    "start": "390800",
    "end": "392479"
  },
  {
    "text": "kubernetes",
    "start": "392479",
    "end": "393360"
  },
  {
    "text": "openstack and for public clouds for",
    "start": "393360",
    "end": "396479"
  },
  {
    "text": "example",
    "start": "396479",
    "end": "397280"
  },
  {
    "text": "it allows to create virtual networks",
    "start": "397280",
    "end": "400720"
  },
  {
    "text": "to provide connectivity between virtual",
    "start": "400720",
    "end": "402960"
  },
  {
    "text": "machines on openstack",
    "start": "402960",
    "end": "404240"
  },
  {
    "text": "and bottom kubernetes and in the demo",
    "start": "404240",
    "end": "407600"
  },
  {
    "text": "we will show interoperability between",
    "start": "407600",
    "end": "410560"
  },
  {
    "text": "kubernetes and openstack",
    "start": "410560",
    "end": "412720"
  },
  {
    "text": "but the same approach can be used to",
    "start": "412720",
    "end": "415039"
  },
  {
    "text": "connect ports to",
    "start": "415039",
    "end": "416240"
  },
  {
    "text": "any other environment supported by by",
    "start": "416240",
    "end": "418400"
  },
  {
    "text": "tungsten fabric",
    "start": "418400",
    "end": "419759"
  },
  {
    "text": "so it gives you an opportunity to create",
    "start": "419759",
    "end": "421440"
  },
  {
    "text": "multi-cloud architectures",
    "start": "421440",
    "end": "424319"
  },
  {
    "text": "so on the slide we have an example of",
    "start": "424319",
    "end": "426479"
  },
  {
    "text": "timestamp fabric",
    "start": "426479",
    "end": "427840"
  },
  {
    "text": "installed on openstack environment",
    "start": "427840",
    "end": "431440"
  },
  {
    "text": "and tanks fabric is the main network",
    "start": "431440",
    "end": "433520"
  },
  {
    "text": "provider in this cluster",
    "start": "433520",
    "end": "435680"
  },
  {
    "text": "so tungsten fabric connects virtual",
    "start": "435680",
    "end": "438319"
  },
  {
    "text": "machines and private networks",
    "start": "438319",
    "end": "440319"
  },
  {
    "text": "it provides overlay networking",
    "start": "440319",
    "end": "443360"
  },
  {
    "text": "in the picture you have four",
    "start": "443360",
    "end": "446720"
  },
  {
    "text": "virtual machines on two openstack hosts",
    "start": "446720",
    "end": "450319"
  },
  {
    "text": "with tanks and fabric v routers",
    "start": "450319",
    "end": "452639"
  },
  {
    "text": "installed within",
    "start": "452639",
    "end": "454560"
  },
  {
    "text": "and tungsten fabric maintains a global",
    "start": "454560",
    "end": "456880"
  },
  {
    "text": "routing",
    "start": "456880",
    "end": "457680"
  },
  {
    "text": "table and keeps it synchronized between",
    "start": "457680",
    "end": "460639"
  },
  {
    "text": "the vibrators",
    "start": "460639",
    "end": "462479"
  },
  {
    "text": "so now we'd like to connect this word to",
    "start": "462479",
    "end": "465599"
  },
  {
    "text": "a kubernetes cluster",
    "start": "465599",
    "end": "467919"
  },
  {
    "text": "so here comes network service mesh for",
    "start": "467919",
    "end": "470639"
  },
  {
    "text": "border for tax and fabric",
    "start": "470639",
    "end": "473599"
  },
  {
    "text": "so first let's get back to the setup of",
    "start": "473599",
    "end": "475599"
  },
  {
    "text": "kubernetes cluster with network service",
    "start": "475599",
    "end": "477360"
  },
  {
    "text": "mesh already",
    "start": "477360",
    "end": "478080"
  },
  {
    "text": "installed and let's add the tungsten",
    "start": "478080",
    "end": "481120"
  },
  {
    "text": "fabric cluster to the picture",
    "start": "481120",
    "end": "483759"
  },
  {
    "text": "so what we need to do is to install two",
    "start": "483759",
    "end": "486479"
  },
  {
    "text": "new components",
    "start": "486479",
    "end": "487759"
  },
  {
    "text": "a tungsten fabric v router and thanks a",
    "start": "487759",
    "end": "490560"
  },
  {
    "text": "fabric forwarder for",
    "start": "490560",
    "end": "492160"
  },
  {
    "text": "network service mesh so that v router is",
    "start": "492160",
    "end": "496000"
  },
  {
    "text": "data plane component",
    "start": "496000",
    "end": "497440"
  },
  {
    "text": "it is responsible for packets tunneling",
    "start": "497440",
    "end": "500400"
  },
  {
    "text": "to other v routers",
    "start": "500400",
    "end": "502240"
  },
  {
    "text": "and the forwarder is control plane and",
    "start": "502240",
    "end": "505039"
  },
  {
    "text": "it carries out stitching the port",
    "start": "505039",
    "end": "506639"
  },
  {
    "text": "together with the v router",
    "start": "506639",
    "end": "509599"
  },
  {
    "text": "okay so again",
    "start": "509599",
    "end": "512640"
  },
  {
    "text": "pod a wants to connect to the network",
    "start": "512640",
    "end": "516000"
  },
  {
    "text": "so it creates a request to network",
    "start": "516000",
    "end": "517760"
  },
  {
    "text": "service manager to attach",
    "start": "517760",
    "end": "519120"
  },
  {
    "text": "to a network",
    "start": "519120",
    "end": "521839"
  },
  {
    "text": "but this time it says it wants to use",
    "start": "522240",
    "end": "524480"
  },
  {
    "text": "tanks and fabric for order",
    "start": "524480",
    "end": "526000"
  },
  {
    "text": "and it still wants to connect to alice",
    "start": "526000",
    "end": "527839"
  },
  {
    "text": "network",
    "start": "527839",
    "end": "529440"
  },
  {
    "text": "okay so network service manager takes",
    "start": "529440",
    "end": "532240"
  },
  {
    "text": "over",
    "start": "532240",
    "end": "533200"
  },
  {
    "text": "and it asks network service registries",
    "start": "533200",
    "end": "535920"
  },
  {
    "text": "is there",
    "start": "535920",
    "end": "537120"
  },
  {
    "text": "and yes it is so response go back",
    "start": "537120",
    "end": "540640"
  },
  {
    "text": "and now thanks for fabric forwarder",
    "start": "540640",
    "end": "543519"
  },
  {
    "text": "takes over",
    "start": "543519",
    "end": "545120"
  },
  {
    "text": "so thanks and fabric for links port",
    "start": "545120",
    "end": "548320"
  },
  {
    "text": "a to alice network by adding an",
    "start": "548320",
    "end": "551440"
  },
  {
    "text": "interface to a pod",
    "start": "551440",
    "end": "553680"
  },
  {
    "text": "an interface is plugged into v router",
    "start": "553680",
    "end": "557760"
  },
  {
    "text": "an entry is added to the tungsten fabric",
    "start": "557760",
    "end": "560160"
  },
  {
    "text": "writing table",
    "start": "560160",
    "end": "561440"
  },
  {
    "text": "with a new ip address associated with",
    "start": "561440",
    "end": "564720"
  },
  {
    "text": "kubernetes node",
    "start": "564720",
    "end": "567600"
  },
  {
    "text": "and in result we have configuration set",
    "start": "567600",
    "end": "570880"
  },
  {
    "text": "up",
    "start": "570880",
    "end": "571200"
  },
  {
    "text": "in v router and virtual network routing",
    "start": "571200",
    "end": "573519"
  },
  {
    "text": "table",
    "start": "573519",
    "end": "574560"
  },
  {
    "text": "and that enables pod a to have two-way",
    "start": "574560",
    "end": "576720"
  },
  {
    "text": "communication with virtual hosts",
    "start": "576720",
    "end": "578800"
  },
  {
    "text": "in the tungsten fabric network so now",
    "start": "578800",
    "end": "582000"
  },
  {
    "text": "thanks the fabric controller ensures",
    "start": "582000",
    "end": "584000"
  },
  {
    "text": "that",
    "start": "584000",
    "end": "585920"
  },
  {
    "text": "all the routers have a consistent view",
    "start": "585920",
    "end": "588640"
  },
  {
    "text": "of the network",
    "start": "588640",
    "end": "590640"
  },
  {
    "text": "all the routing table entries are",
    "start": "590640",
    "end": "592640"
  },
  {
    "text": "continuously synchronized among",
    "start": "592640",
    "end": "594560"
  },
  {
    "text": "all the hosts so that",
    "start": "594560",
    "end": "598480"
  },
  {
    "text": "in this way virtual machines can talk to",
    "start": "598480",
    "end": "600399"
  },
  {
    "text": "the pod and vice versa",
    "start": "600399",
    "end": "602959"
  },
  {
    "text": "uh our example covers connectivity to",
    "start": "602959",
    "end": "605279"
  },
  {
    "text": "openstack",
    "start": "605279",
    "end": "606079"
  },
  {
    "text": "but it's not the only cloud computing",
    "start": "606079",
    "end": "609120"
  },
  {
    "text": "platform supported",
    "start": "609120",
    "end": "611519"
  },
  {
    "text": "so yeah that's it",
    "start": "611519",
    "end": "614560"
  },
  {
    "text": "uh that's it when it comes to the theory",
    "start": "614560",
    "end": "617920"
  },
  {
    "text": "but",
    "start": "617920",
    "end": "618800"
  },
  {
    "text": "now i'm giving the floor to yarik who",
    "start": "618800",
    "end": "621120"
  },
  {
    "text": "will show you",
    "start": "621120",
    "end": "622160"
  },
  {
    "text": "how it works in practice",
    "start": "622160",
    "end": "625279"
  },
  {
    "text": "okay thanks and welcome back i will now",
    "start": "625279",
    "end": "628000"
  },
  {
    "text": "show you a short demo of the integration",
    "start": "628000",
    "end": "630959"
  },
  {
    "text": "between a kubernetes cluster and an",
    "start": "630959",
    "end": "633200"
  },
  {
    "text": "openstack cluster",
    "start": "633200",
    "end": "634800"
  },
  {
    "text": "i will connect a pod to",
    "start": "634800",
    "end": "638160"
  },
  {
    "text": "a network l3 network with",
    "start": "638160",
    "end": "641360"
  },
  {
    "text": "virtual machines using a network service",
    "start": "641360",
    "end": "644079"
  },
  {
    "text": "mesh and the tags and fabric",
    "start": "644079",
    "end": "646240"
  },
  {
    "text": "virtual network controller so let's",
    "start": "646240",
    "end": "648160"
  },
  {
    "text": "start with",
    "start": "648160",
    "end": "649360"
  },
  {
    "text": "our environment we have a plain empty",
    "start": "649360",
    "end": "652720"
  },
  {
    "text": "openstack cluster over here we view it",
    "start": "652720",
    "end": "656079"
  },
  {
    "text": "using the",
    "start": "656079",
    "end": "657600"
  },
  {
    "text": "graphical interface horizon and we also",
    "start": "657600",
    "end": "661200"
  },
  {
    "text": "have a working kubernetes cluster",
    "start": "661200",
    "end": "665600"
  },
  {
    "text": "with the nsm installation",
    "start": "666240",
    "end": "669360"
  },
  {
    "text": "already provisioned and we can see the",
    "start": "669360",
    "end": "672160"
  },
  {
    "text": "network service manager",
    "start": "672160",
    "end": "673680"
  },
  {
    "text": "and the network service mesh tax and",
    "start": "673680",
    "end": "676079"
  },
  {
    "text": "fabric forwarder",
    "start": "676079",
    "end": "678640"
  },
  {
    "text": "already registered over here so we can",
    "start": "678640",
    "end": "681120"
  },
  {
    "text": "use it",
    "start": "681120",
    "end": "681839"
  },
  {
    "text": "to service network service meshware",
    "start": "681839",
    "end": "686839"
  },
  {
    "text": "applications okay",
    "start": "686839",
    "end": "689040"
  },
  {
    "text": "and we also have the our data plane",
    "start": "689040",
    "end": "692240"
  },
  {
    "text": "which will be the toxin fabric virtual",
    "start": "692240",
    "end": "694240"
  },
  {
    "text": "network controller",
    "start": "694240",
    "end": "696079"
  },
  {
    "text": "and taxon fabric is already",
    "start": "696079",
    "end": "699440"
  },
  {
    "text": "connected to the openstack cluster as a",
    "start": "699440",
    "end": "702800"
  },
  {
    "text": "neutron plug-in so it's servicing all",
    "start": "702800",
    "end": "705200"
  },
  {
    "text": "the interfaces all the network",
    "start": "705200",
    "end": "706880"
  },
  {
    "text": "interfaces for virtual machines in the",
    "start": "706880",
    "end": "708959"
  },
  {
    "text": "cluster",
    "start": "708959",
    "end": "709839"
  },
  {
    "text": "however it's not configured as a cni for",
    "start": "709839",
    "end": "713519"
  },
  {
    "text": "kubernetes",
    "start": "713519",
    "end": "714639"
  },
  {
    "text": "and it's just to show you that you don't",
    "start": "714639",
    "end": "716959"
  },
  {
    "text": "need you you may",
    "start": "716959",
    "end": "718560"
  },
  {
    "text": "use it as a cni because it it has the",
    "start": "718560",
    "end": "721279"
  },
  {
    "text": "feature",
    "start": "721279",
    "end": "721839"
  },
  {
    "text": "but you don't have to use it as a cni so",
    "start": "721839",
    "end": "723760"
  },
  {
    "text": "you can use a totally different",
    "start": "723760",
    "end": "725600"
  },
  {
    "text": "cni in your kubernetes blaster and at",
    "start": "725600",
    "end": "728480"
  },
  {
    "text": "the same time",
    "start": "728480",
    "end": "729360"
  },
  {
    "text": "use tf as a networking",
    "start": "729360",
    "end": "732399"
  },
  {
    "text": "back-end as a data plane back-end for",
    "start": "732399",
    "end": "735120"
  },
  {
    "text": "network service mesh to achieve the",
    "start": "735120",
    "end": "737040"
  },
  {
    "text": "connectivity for uh for the multi-cloud",
    "start": "737040",
    "end": "740639"
  },
  {
    "text": "architecture okay so right now we don't",
    "start": "740639",
    "end": "743600"
  },
  {
    "text": "have",
    "start": "743600",
    "end": "744079"
  },
  {
    "text": "any any networking configured",
    "start": "744079",
    "end": "748560"
  },
  {
    "text": "in our environment so let's start with",
    "start": "748560",
    "end": "750800"
  },
  {
    "text": "creating our infrastructure on the",
    "start": "750800",
    "end": "752720"
  },
  {
    "text": "openstack side",
    "start": "752720",
    "end": "754160"
  },
  {
    "text": "and i will create two networks red and",
    "start": "754160",
    "end": "757120"
  },
  {
    "text": "blue",
    "start": "757120",
    "end": "758079"
  },
  {
    "text": "to demonstrate the connectivity and to",
    "start": "758079",
    "end": "761120"
  },
  {
    "text": "show you that we can use",
    "start": "761120",
    "end": "764079"
  },
  {
    "text": "different we can use different networks",
    "start": "764079",
    "end": "767760"
  },
  {
    "text": "and choose them using network service",
    "start": "767760",
    "end": "769920"
  },
  {
    "text": "mesh requests",
    "start": "769920",
    "end": "771279"
  },
  {
    "text": "so we'll create first red subnet with a",
    "start": "771279",
    "end": "775320"
  },
  {
    "text": "10.1.1 addresses",
    "start": "775320",
    "end": "779120"
  },
  {
    "text": "and then a blue network",
    "start": "779440",
    "end": "787040"
  },
  {
    "text": "with a subnet of 10.2.2.0",
    "start": "787040",
    "end": "793040"
  },
  {
    "text": "okay and with both networks configured",
    "start": "795519",
    "end": "798880"
  },
  {
    "text": "we can see that",
    "start": "798880",
    "end": "800720"
  },
  {
    "text": "tungsten fabric is synchronized with the",
    "start": "800720",
    "end": "804320"
  },
  {
    "text": "openstack cluster",
    "start": "804320",
    "end": "805839"
  },
  {
    "text": "and it already shows the networks with",
    "start": "805839",
    "end": "809839"
  },
  {
    "text": "proper proper configuration",
    "start": "809839",
    "end": "813680"
  },
  {
    "text": "and let's go ahead and create",
    "start": "813680",
    "end": "818639"
  },
  {
    "text": "two virtual machines",
    "start": "819360",
    "end": "822480"
  },
  {
    "text": "in the red network this will be our",
    "start": "822480",
    "end": "826839"
  },
  {
    "text": "first",
    "start": "826839",
    "end": "828240"
  },
  {
    "text": "experiment okay we are choosing the red",
    "start": "828240",
    "end": "831920"
  },
  {
    "text": "network so we want uh",
    "start": "831920",
    "end": "833760"
  },
  {
    "text": "the virtual machines to be attached to",
    "start": "833760",
    "end": "836160"
  },
  {
    "text": "the red network",
    "start": "836160",
    "end": "837360"
  },
  {
    "text": "okay they are running and and",
    "start": "837360",
    "end": "841120"
  },
  {
    "text": "on the tanks and fabric side we should",
    "start": "841120",
    "end": "844320"
  },
  {
    "text": "see them",
    "start": "844320",
    "end": "846800"
  },
  {
    "text": "the interface is attached to the virtual",
    "start": "847519",
    "end": "849839"
  },
  {
    "text": "router okay here",
    "start": "849839",
    "end": "851760"
  },
  {
    "text": "and we can see the two interfaces in the",
    "start": "851760",
    "end": "855440"
  },
  {
    "text": "red network",
    "start": "855440",
    "end": "856639"
  },
  {
    "text": "1.3 and 1.4",
    "start": "856639",
    "end": "859839"
  },
  {
    "text": "and just for the sake of this",
    "start": "859839",
    "end": "862160"
  },
  {
    "text": "presentation",
    "start": "862160",
    "end": "863279"
  },
  {
    "text": "just and just for the purpose of this",
    "start": "863279",
    "end": "865519"
  },
  {
    "text": "presentation we will use",
    "start": "865519",
    "end": "867519"
  },
  {
    "text": "uh the router internal interface to",
    "start": "867519",
    "end": "871440"
  },
  {
    "text": "connect to them",
    "start": "871440",
    "end": "872800"
  },
  {
    "text": "so ssh",
    "start": "872800",
    "end": "875839"
  },
  {
    "text": "okay go cubs go",
    "start": "878079",
    "end": "882399"
  },
  {
    "text": "and we are in and we can see that we are",
    "start": "882399",
    "end": "885040"
  },
  {
    "text": "on the",
    "start": "885040",
    "end": "886399"
  },
  {
    "text": "first virtual machine 1.3 and from here",
    "start": "886399",
    "end": "890480"
  },
  {
    "text": "we can ssh to",
    "start": "890480",
    "end": "894880"
  },
  {
    "text": "10.1.1.4",
    "start": "896839",
    "end": "899839"
  },
  {
    "text": "okay and this is 1.4 virtual machine",
    "start": "903760",
    "end": "909040"
  },
  {
    "text": "and going back",
    "start": "909040",
    "end": "913120"
  },
  {
    "text": "there's a two-way connectivity so i did",
    "start": "913120",
    "end": "915040"
  },
  {
    "text": "it just to check if everything's working",
    "start": "915040",
    "end": "917040"
  },
  {
    "text": "okay",
    "start": "917040",
    "end": "917839"
  },
  {
    "text": "and it's obvious that the openstack",
    "start": "917839",
    "end": "920959"
  },
  {
    "text": "virtual machines in the same network",
    "start": "920959",
    "end": "922639"
  },
  {
    "text": "can communicate with each other okay so",
    "start": "922639",
    "end": "925680"
  },
  {
    "text": "now",
    "start": "925680",
    "end": "927680"
  },
  {
    "text": "it's time for the network service mesh",
    "start": "927680",
    "end": "930399"
  },
  {
    "text": "pod",
    "start": "930399",
    "end": "931360"
  },
  {
    "text": "i will use pod manifests",
    "start": "931360",
    "end": "935680"
  },
  {
    "text": "that are located over here and they are",
    "start": "935680",
    "end": "939759"
  },
  {
    "text": "adapted from the official",
    "start": "939759",
    "end": "942880"
  },
  {
    "text": "network service mesh examples and here",
    "start": "942880",
    "end": "945199"
  },
  {
    "text": "you can see",
    "start": "945199",
    "end": "946000"
  },
  {
    "text": "uh a pod uh with a busy box container",
    "start": "946000",
    "end": "951360"
  },
  {
    "text": "inside the deployment with an annotation",
    "start": "951360",
    "end": "954079"
  },
  {
    "text": "network service mesh",
    "start": "954079",
    "end": "955680"
  },
  {
    "text": "io and the what's called the",
    "start": "955680",
    "end": "960079"
  },
  {
    "text": "fully qualified name of the network",
    "start": "960079",
    "end": "963680"
  },
  {
    "text": "inside the",
    "start": "963680",
    "end": "965040"
  },
  {
    "text": "tanks and fabric database so we have a",
    "start": "965040",
    "end": "967279"
  },
  {
    "text": "default domain",
    "start": "967279",
    "end": "968160"
  },
  {
    "text": "the project name which is admin and then",
    "start": "968160",
    "end": "970639"
  },
  {
    "text": "the network name",
    "start": "970639",
    "end": "972320"
  },
  {
    "text": "so let's create this part this",
    "start": "972320",
    "end": "974639"
  },
  {
    "text": "deployment",
    "start": "974639",
    "end": "977040"
  },
  {
    "text": "apply red deployment",
    "start": "977040",
    "end": "980839"
  },
  {
    "text": "okay",
    "start": "980839",
    "end": "983839"
  },
  {
    "text": "now let's see what's happening inside",
    "start": "983920",
    "end": "985839"
  },
  {
    "text": "our namespace",
    "start": "985839",
    "end": "987199"
  },
  {
    "text": "the red part",
    "start": "987199",
    "end": "990959"
  },
  {
    "text": "is initializing and",
    "start": "990959",
    "end": "994959"
  },
  {
    "text": "you can see that there is something",
    "start": "994959",
    "end": "997199"
  },
  {
    "text": "unexpected going over here because",
    "start": "997199",
    "end": "999920"
  },
  {
    "text": "uh we see that it's running some in it",
    "start": "999920",
    "end": "1002959"
  },
  {
    "text": "containers",
    "start": "1002959",
    "end": "1003759"
  },
  {
    "text": "while our original deployment",
    "start": "1003759",
    "end": "1006800"
  },
  {
    "text": "has got just only a single main",
    "start": "1006800",
    "end": "1009839"
  },
  {
    "text": "container and i will explain this",
    "start": "1009839",
    "end": "1011759"
  },
  {
    "text": "in a minute but for now it's already",
    "start": "1011759",
    "end": "1013759"
  },
  {
    "text": "running",
    "start": "1013759",
    "end": "1015680"
  },
  {
    "text": "so we can see what's inside",
    "start": "1015680",
    "end": "1019279"
  },
  {
    "text": "and",
    "start": "1022839",
    "end": "1025839"
  },
  {
    "text": "okay and we can see that we have two",
    "start": "1026480",
    "end": "1028480"
  },
  {
    "text": "interfaces first one is the default",
    "start": "1028480",
    "end": "1031438"
  },
  {
    "text": "uh pod network cluster pod network",
    "start": "1031439",
    "end": "1035280"
  },
  {
    "text": "this is the default interface and then",
    "start": "1035280",
    "end": "1036720"
  },
  {
    "text": "we have um interface with a random name",
    "start": "1036720",
    "end": "1039918"
  },
  {
    "text": "which is a member of the red network and",
    "start": "1039919",
    "end": "1042640"
  },
  {
    "text": "we can",
    "start": "1042640",
    "end": "1045120"
  },
  {
    "text": "see if we are able to connect to the",
    "start": "1045600",
    "end": "1049039"
  },
  {
    "text": "virtual machines in openstack and yes",
    "start": "1049039",
    "end": "1051520"
  },
  {
    "text": "both three and four are reachable",
    "start": "1051520",
    "end": "1054720"
  },
  {
    "text": "from our pod so",
    "start": "1054720",
    "end": "1057840"
  },
  {
    "text": "the tanks and fabric forwarder",
    "start": "1057840",
    "end": "1059679"
  },
  {
    "text": "successfully",
    "start": "1059679",
    "end": "1061200"
  },
  {
    "text": "uh bridged us to the uh onto the red",
    "start": "1061200",
    "end": "1064559"
  },
  {
    "text": "network on openstack",
    "start": "1064559",
    "end": "1067520"
  },
  {
    "text": "okay and now let's explain how it all",
    "start": "1067520",
    "end": "1069520"
  },
  {
    "text": "happened as you can see here",
    "start": "1069520",
    "end": "1073200"
  },
  {
    "text": "we have a network service mesh",
    "start": "1073679",
    "end": "1076720"
  },
  {
    "text": "admission webhook pod",
    "start": "1076720",
    "end": "1080000"
  },
  {
    "text": "over here and it's uh and it's a piece",
    "start": "1080000",
    "end": "1083440"
  },
  {
    "text": "of an sam that is listening",
    "start": "1083440",
    "end": "1085760"
  },
  {
    "text": "to all the objects that are onboarded",
    "start": "1085760",
    "end": "1089200"
  },
  {
    "text": "into",
    "start": "1089200",
    "end": "1089840"
  },
  {
    "text": "the namespace and if it detects a",
    "start": "1089840",
    "end": "1092320"
  },
  {
    "text": "network service mesh annotation",
    "start": "1092320",
    "end": "1094320"
  },
  {
    "text": "it will modify the pod",
    "start": "1094320",
    "end": "1097600"
  },
  {
    "text": "the manifest and it will add",
    "start": "1097600",
    "end": "1100270"
  },
  {
    "text": "[Music]",
    "start": "1100270",
    "end": "1101360"
  },
  {
    "text": "sidecar containers that will configure",
    "start": "1101360",
    "end": "1104160"
  },
  {
    "text": "the appropriate interface and it will",
    "start": "1104160",
    "end": "1106240"
  },
  {
    "text": "they will handle",
    "start": "1106240",
    "end": "1107360"
  },
  {
    "text": "a communication with the nsm api",
    "start": "1107360",
    "end": "1110559"
  },
  {
    "text": "so let's see how the modified",
    "start": "1110559",
    "end": "1113880"
  },
  {
    "text": "specification of the of the red part",
    "start": "1113880",
    "end": "1118400"
  },
  {
    "text": "looks like",
    "start": "1118400",
    "end": "1123840"
  },
  {
    "text": "okay so we have the the container the",
    "start": "1127120",
    "end": "1130880"
  },
  {
    "text": "base container",
    "start": "1130880",
    "end": "1131919"
  },
  {
    "text": "that we we've seen inside the original",
    "start": "1131919",
    "end": "1134720"
  },
  {
    "text": "manifest",
    "start": "1134720",
    "end": "1135600"
  },
  {
    "text": "and then we have additional nsm monitor",
    "start": "1135600",
    "end": "1139039"
  },
  {
    "text": "container",
    "start": "1139039",
    "end": "1140480"
  },
  {
    "text": "and then the important part in it",
    "start": "1140480",
    "end": "1142960"
  },
  {
    "text": "containers",
    "start": "1142960",
    "end": "1143679"
  },
  {
    "text": "dns in it container and the nsm init",
    "start": "1143679",
    "end": "1146880"
  },
  {
    "text": "container and the",
    "start": "1146880",
    "end": "1147840"
  },
  {
    "text": "nsm in it is responsible for",
    "start": "1147840",
    "end": "1150880"
  },
  {
    "text": "talking to the network service mesh api",
    "start": "1150880",
    "end": "1153840"
  },
  {
    "text": "and creating",
    "start": "1153840",
    "end": "1154799"
  },
  {
    "text": "the interface according to this uh",
    "start": "1154799",
    "end": "1158160"
  },
  {
    "text": "network service request and in our case",
    "start": "1158160",
    "end": "1160400"
  },
  {
    "text": "the network service",
    "start": "1160400",
    "end": "1161600"
  },
  {
    "text": "is the network itself so we are",
    "start": "1161600",
    "end": "1163840"
  },
  {
    "text": "requesting",
    "start": "1163840",
    "end": "1164880"
  },
  {
    "text": "connectivity and we are requesting to be",
    "start": "1164880",
    "end": "1167919"
  },
  {
    "text": "joined to this particular tungsten",
    "start": "1167919",
    "end": "1170160"
  },
  {
    "text": "fabric network",
    "start": "1170160",
    "end": "1171919"
  },
  {
    "text": "uh okay so",
    "start": "1171919",
    "end": "1175280"
  },
  {
    "text": "you can see that there is a pretty nice",
    "start": "1175280",
    "end": "1178240"
  },
  {
    "text": "separation of concerns",
    "start": "1178240",
    "end": "1180400"
  },
  {
    "text": "in the application manifest",
    "start": "1180400",
    "end": "1184559"
  },
  {
    "text": "the the application is just this part",
    "start": "1184559",
    "end": "1187120"
  },
  {
    "text": "like it's a regular",
    "start": "1187120",
    "end": "1188880"
  },
  {
    "text": "application that is totally unaware of",
    "start": "1188880",
    "end": "1191520"
  },
  {
    "text": "any",
    "start": "1191520",
    "end": "1192160"
  },
  {
    "text": "nsm machinery right and while using the",
    "start": "1192160",
    "end": "1195760"
  },
  {
    "text": "deployment",
    "start": "1195760",
    "end": "1197200"
  },
  {
    "text": "while creating the deployment we are",
    "start": "1197200",
    "end": "1199520"
  },
  {
    "text": "adding",
    "start": "1199520",
    "end": "1200240"
  },
  {
    "text": "a network service mesh annotation that",
    "start": "1200240",
    "end": "1202640"
  },
  {
    "text": "tells",
    "start": "1202640",
    "end": "1204080"
  },
  {
    "text": "the orchestrator to connect us to some",
    "start": "1204080",
    "end": "1207039"
  },
  {
    "text": "specific",
    "start": "1207039",
    "end": "1208320"
  },
  {
    "text": "network so we have we have nice layer",
    "start": "1208320",
    "end": "1211280"
  },
  {
    "text": "nice layers",
    "start": "1211280",
    "end": "1212400"
  },
  {
    "text": "so we have the application running on a",
    "start": "1212400",
    "end": "1215039"
  },
  {
    "text": "cluster",
    "start": "1215039",
    "end": "1215679"
  },
  {
    "text": "that is equipped with nsm and by",
    "start": "1215679",
    "end": "1219120"
  },
  {
    "text": "modifying metadata of the application",
    "start": "1219120",
    "end": "1222559"
  },
  {
    "text": "we are making it a part of some network",
    "start": "1222559",
    "end": "1225679"
  },
  {
    "text": "environments",
    "start": "1225679",
    "end": "1226559"
  },
  {
    "text": "so i think that this is a really nice",
    "start": "1226559",
    "end": "1228159"
  },
  {
    "text": "way a really nice cloud-native way",
    "start": "1228159",
    "end": "1231039"
  },
  {
    "text": "of specifying which",
    "start": "1231039",
    "end": "1234799"
  },
  {
    "text": "network connectivity our applications",
    "start": "1234799",
    "end": "1237360"
  },
  {
    "text": "should",
    "start": "1237360",
    "end": "1237840"
  },
  {
    "text": "receive on the target deployment",
    "start": "1237840",
    "end": "1241520"
  },
  {
    "text": "okay and to see that uh the tanks and",
    "start": "1241520",
    "end": "1245039"
  },
  {
    "text": "fabric forwarder",
    "start": "1245039",
    "end": "1246000"
  },
  {
    "text": "is flexible i will now create",
    "start": "1246000",
    "end": "1249679"
  },
  {
    "text": "a second third instance",
    "start": "1249679",
    "end": "1252799"
  },
  {
    "text": "in the blue network a blue demo network",
    "start": "1252799",
    "end": "1256960"
  },
  {
    "text": "with the same configuration except for",
    "start": "1256960",
    "end": "1260000"
  },
  {
    "text": "the network",
    "start": "1260000",
    "end": "1263840"
  },
  {
    "text": "it's creating let's wait for it",
    "start": "1265039",
    "end": "1270399"
  },
  {
    "text": "and the tax on fabric interface we can",
    "start": "1272880",
    "end": "1275120"
  },
  {
    "text": "see",
    "start": "1275120",
    "end": "1277840"
  },
  {
    "text": "okay and create",
    "start": "1278720",
    "end": "1282640"
  },
  {
    "text": "the blue part",
    "start": "1286559",
    "end": "1291840"
  },
  {
    "text": "okay this is going through the same",
    "start": "1292480",
    "end": "1295360"
  },
  {
    "text": "sequence",
    "start": "1295360",
    "end": "1296159"
  },
  {
    "text": "that the red part",
    "start": "1296159",
    "end": "1299440"
  },
  {
    "text": "okay it's finished and",
    "start": "1301280",
    "end": "1305840"
  },
  {
    "text": "let's go inside",
    "start": "1308960",
    "end": "1311919"
  },
  {
    "text": "and see that we have 10.2.2.4",
    "start": "1314080",
    "end": "1317679"
  },
  {
    "text": "interface so we are inside the blue",
    "start": "1317679",
    "end": "1319280"
  },
  {
    "text": "network and we can",
    "start": "1319280",
    "end": "1321679"
  },
  {
    "text": "in the same way see the interface in a",
    "start": "1321679",
    "end": "1324880"
  },
  {
    "text": "blue network on the",
    "start": "1324880",
    "end": "1326240"
  },
  {
    "text": "tanks and fabric site",
    "start": "1326240",
    "end": "1329360"
  },
  {
    "text": "okay so this is it for this part we",
    "start": "1329760",
    "end": "1332720"
  },
  {
    "text": "created the taxon fabric for warder",
    "start": "1332720",
    "end": "1335679"
  },
  {
    "text": "as a poc so it has the basic",
    "start": "1335679",
    "end": "1338240"
  },
  {
    "text": "functionality of",
    "start": "1338240",
    "end": "1340080"
  },
  {
    "text": "creating interfaces and hooking them up",
    "start": "1340080",
    "end": "1342720"
  },
  {
    "text": "to the v",
    "start": "1342720",
    "end": "1343360"
  },
  {
    "text": "router and there's much more to do but i",
    "start": "1343360",
    "end": "1346799"
  },
  {
    "text": "think that",
    "start": "1346799",
    "end": "1347520"
  },
  {
    "text": "uh it's a nice way to first",
    "start": "1347520",
    "end": "1350640"
  },
  {
    "text": "show you how the uh how the tyson fabric",
    "start": "1350640",
    "end": "1355280"
  },
  {
    "text": "is a nice fit to the network service",
    "start": "1355280",
    "end": "1357679"
  },
  {
    "text": "mesh and its",
    "start": "1357679",
    "end": "1358640"
  },
  {
    "text": "philosophy of cloud native network",
    "start": "1358640",
    "end": "1361039"
  },
  {
    "text": "connectivity",
    "start": "1361039",
    "end": "1362080"
  },
  {
    "text": "and one of the one of the nice appealing",
    "start": "1362080",
    "end": "1365039"
  },
  {
    "text": "features of tanks and fabric is also",
    "start": "1365039",
    "end": "1367120"
  },
  {
    "text": "that it",
    "start": "1367120",
    "end": "1367600"
  },
  {
    "text": "is able to connect",
    "start": "1367600",
    "end": "1371760"
  },
  {
    "text": "different workloads into service chains",
    "start": "1371760",
    "end": "1374080"
  },
  {
    "text": "so for example",
    "start": "1374080",
    "end": "1375520"
  },
  {
    "text": "uh cloud native network functions",
    "start": "1375520",
    "end": "1377760"
  },
  {
    "text": "running spots and kubernetes",
    "start": "1377760",
    "end": "1379840"
  },
  {
    "text": "with virtual network functions running",
    "start": "1379840",
    "end": "1383520"
  },
  {
    "text": "as instances on openstack for example",
    "start": "1383520",
    "end": "1386840"
  },
  {
    "text": "and physical network functions and",
    "start": "1386840",
    "end": "1389600"
  },
  {
    "text": "physical appliances",
    "start": "1389600",
    "end": "1390880"
  },
  {
    "text": "because it is able to bridge them to",
    "start": "1390880",
    "end": "1396159"
  },
  {
    "text": "overlay networks with switches that are",
    "start": "1396159",
    "end": "1399600"
  },
  {
    "text": "vxlan capable and the second part is",
    "start": "1399600",
    "end": "1402640"
  },
  {
    "text": "that",
    "start": "1402640",
    "end": "1404480"
  },
  {
    "text": "our source code may",
    "start": "1404480",
    "end": "1407520"
  },
  {
    "text": "serve as a as an example",
    "start": "1407520",
    "end": "1410640"
  },
  {
    "text": "for for other forwarders and for other",
    "start": "1410640",
    "end": "1414000"
  },
  {
    "text": "people that want to customize the",
    "start": "1414000",
    "end": "1416880"
  },
  {
    "text": "network service mesh and add their own",
    "start": "1416880",
    "end": "1419039"
  },
  {
    "text": "functionality or at their own data plane",
    "start": "1419039",
    "end": "1421440"
  },
  {
    "text": "support",
    "start": "1421440",
    "end": "1422400"
  },
  {
    "text": "so you can go ahead and see",
    "start": "1422400",
    "end": "1425440"
  },
  {
    "text": "the code in our repo and i also would",
    "start": "1425440",
    "end": "1427840"
  },
  {
    "text": "like to",
    "start": "1427840",
    "end": "1429120"
  },
  {
    "text": "mention that this idea was inspired",
    "start": "1429120",
    "end": "1432400"
  },
  {
    "text": "by radoslav's talk",
    "start": "1432400",
    "end": "1435520"
  },
  {
    "text": "as the open networking summit europe",
    "start": "1435520",
    "end": "1437679"
  },
  {
    "text": "last year when",
    "start": "1437679",
    "end": "1439039"
  },
  {
    "text": "he talked about his kernel forwarder",
    "start": "1439039",
    "end": "1442640"
  },
  {
    "text": "which",
    "start": "1442640",
    "end": "1443200"
  },
  {
    "text": "was also meant as a similar thing to",
    "start": "1443200",
    "end": "1446880"
  },
  {
    "text": "inspire other people to write their own",
    "start": "1446880",
    "end": "1449039"
  },
  {
    "text": "plugins",
    "start": "1449039",
    "end": "1449760"
  },
  {
    "text": "for the network service mesh okay i hope",
    "start": "1449760",
    "end": "1452159"
  },
  {
    "text": "that you",
    "start": "1452159",
    "end": "1452799"
  },
  {
    "text": "liked our idea and our talk and it's now",
    "start": "1452799",
    "end": "1456559"
  },
  {
    "text": "a time for the qa part thanks",
    "start": "1456559",
    "end": "1462880"
  }
]