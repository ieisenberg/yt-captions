[
  {
    "text": "all right well welcome everyone today's talk is about um building reliable cross Cloud kubernetes clusters on spot",
    "start": "1959",
    "end": "8080"
  },
  {
    "text": "instances with drafter and pvm and I realized it's quite a mouthful it's quite a lot so we're going to take this step by step first of all we're going to",
    "start": "8080",
    "end": "15040"
  },
  {
    "text": "start with commoditization that fundamental idea why you would want to do something like that and we're going",
    "start": "15040",
    "end": "20519"
  },
  {
    "text": "to take a look at pvm which is an interesting C technology we're going to be using to start VMS inside of vmss",
    "start": "20519",
    "end": "26560"
  },
  {
    "text": "without hardare acceleration support on them and without NE virualization support going to take a look at Silo a",
    "start": "26560",
    "end": "32880"
  },
  {
    "text": "lopol apps project to migrate a lot of data between hosts very efficiently and you will take a look at",
    "start": "32880",
    "end": "38600"
  },
  {
    "text": "drafter which is an open source project again baps that combines the two tools into a single framework then we will",
    "start": "38600",
    "end": "44840"
  },
  {
    "text": "take a look at conduit which will take care of our Network migrations and finally we will take a look at architect which is the actual more or less product",
    "start": "44840",
    "end": "51280"
  },
  {
    "text": "that you can use today so let's get started a little bit about myself I'm Felicitas you can find me on the fediverse if you interested and I of",
    "start": "51280",
    "end": "57719"
  },
  {
    "text": "course work at lalabs mostly on drafter yeah let's get started first of all I",
    "start": "57719",
    "end": "63160"
  },
  {
    "text": "want to talk to you about an actual quite interesting article on Cor of net called loss of tech commoditize your",
    "start": "63160",
    "end": "69240"
  },
  {
    "text": "complement and the fundamental proposal of this article is that Smart Companies",
    "start": "69240",
    "end": "74400"
  },
  {
    "text": "try to commoditize their products compliments now you might be wondering what exactly a complement refers to here",
    "start": "74400",
    "end": "80840"
  },
  {
    "text": "and I think the best way to explain it is by giving you some examples for example if you have a car your your complement is usually electricity or gas",
    "start": "80840",
    "end": "87759"
  },
  {
    "text": "without that you can't do much with it if you have if you put physical computers you need software to be your complement because without software your",
    "start": "87759",
    "end": "94640"
  },
  {
    "text": "Hardware is just kind of a shiny piece of metal if you're Shipping Company you need a railroad or you need a road for",
    "start": "94640",
    "end": "101360"
  },
  {
    "text": "for it to function so all of these companies usually require some other thing in order to function as their",
    "start": "101360",
    "end": "106399"
  },
  {
    "text": "complement now this might seem a bit abstract in terms of tech at first but it's a pattern that shows over shows up over and over again because companies",
    "start": "106399",
    "end": "113360"
  },
  {
    "text": "that produce cars want to make gas cheap companies that ship a lot of um one second",
    "start": "113360",
    "end": "121079"
  },
  {
    "text": "companies to ship a lot of goods they want cheap transport they want rail to be available they want a road to be available and hard manufacturers want",
    "start": "123479",
    "end": "129879"
  },
  {
    "text": "software to be cheap and commoditized so a very famous example of",
    "start": "129879",
    "end": "136000"
  },
  {
    "text": "this commoditization happening is actually with Netscape for example Netscape open source their browser and a lot of people at first thought oh yeah",
    "start": "136000",
    "end": "141800"
  },
  {
    "text": "it's because of like open source and like a lot of like um ideological stuff behind it which certainly a part of it",
    "start": "141800",
    "end": "147680"
  },
  {
    "text": "but also keep in mind Netscape sells or solds servers right so having a free web browser is very interesting because it",
    "start": "147680",
    "end": "153400"
  },
  {
    "text": "just can drive a lot of more people to your server it's the complement to a we to web server transmeta is one of the",
    "start": "153400",
    "end": "159239"
  },
  {
    "text": "first companies that actually hired liners to work on Linux and you might never have heard of them again you might think it's a obesity stunt but also keep",
    "start": "159239",
    "end": "165640"
  },
  {
    "text": "in mind transmitter made CPUs right and the natural complement to a CPU is the operating system so having a cheap",
    "start": "165640",
    "end": "171599"
  },
  {
    "text": "commoditized open source operating system is exactly what you're looking for and also actually I'm running Norman",
    "start": "171599",
    "end": "177480"
  },
  {
    "text": "Fedora on the system here um lot of companies like sun and HP paid for most of the development of that in early on",
    "start": "177480",
    "end": "183319"
  },
  {
    "text": "right and again you might be thinking oh yeah it's because of a different approach to software development but fundamentally you have to keep in mind",
    "start": "183319",
    "end": "189400"
  },
  {
    "text": "that these companies used to sell and still sell in one case all of desktop computers the compliment computer is the",
    "start": "189400",
    "end": "195440"
  },
  {
    "text": "operating system and you want it to be cheap open source commoditized transferable so you might be wondering I",
    "start": "195440",
    "end": "201560"
  },
  {
    "text": "presume almost everyone here is either a software engineer or kind of adjacent in the field so you might be wondering if",
    "start": "201560",
    "end": "207319"
  },
  {
    "text": "you produce software modern software what is your compliment today and what I would argue personally",
    "start": "207319",
    "end": "213280"
  },
  {
    "text": "is that that's probably mostly your Cloud providers without your Cloud providers there's not much you can do yes you can of course host it in your",
    "start": "213280",
    "end": "219319"
  },
  {
    "text": "basement on your home lab but realistically speaking most production workloads will be in public cloud and",
    "start": "219319",
    "end": "224560"
  },
  {
    "text": "mostly like AWS as gcp the big ones right and you might be thinking well",
    "start": "224560",
    "end": "229599"
  },
  {
    "text": "that's kind of already commoditized but we have to look at a little bit more how how such a commoditized comp compute um",
    "start": "229599",
    "end": "235879"
  },
  {
    "text": "element actually look like so fundamentally I would argue that something that is a true commodity in a",
    "start": "235879",
    "end": "242879"
  },
  {
    "text": "software in a cloud space is something that can run absolutely anything you throw in it so if you can run it on one",
    "start": "242879",
    "end": "248760"
  },
  {
    "text": "of these systems you should be able to run it in a universal one it should also be able to run everywhere yes you can of",
    "start": "248760",
    "end": "255079"
  },
  {
    "text": "course create like a cloud image for like every single provider there's subtle differences between them subtle",
    "start": "255079",
    "end": "260400"
  },
  {
    "text": "differences in CPU Behavior you can't move them between each other and so on and so forth like it's not really a free",
    "start": "260400",
    "end": "265840"
  },
  {
    "text": "choice if if the price of gcp changes by a scent you can't just move to gcp that's just not going to work like from",
    "start": "265840",
    "end": "271400"
  },
  {
    "text": "Azure or somewhere else um right now that's not really an option but if you're thinking of okay let's try and",
    "start": "271400",
    "end": "276919"
  },
  {
    "text": "imagine such a commoditized form of compute your first thought well since we're talking about this is might be",
    "start": "276919",
    "end": "282400"
  },
  {
    "text": "containers um like either I mean we're at coupon right so like a lot of people probably think okay if I want a uh if I",
    "start": "282400",
    "end": "288600"
  },
  {
    "text": "want to Define my application in a way that works across Cloud providers easiest way is probably to run",
    "start": "288600",
    "end": "293880"
  },
  {
    "text": "containers but keep in mind containers can't actually run absolutely everything the easiest example you can always ask",
    "start": "293880",
    "end": "299039"
  },
  {
    "text": "is hey is it hosting can you run kubernetes instead of kubernetes which yes of course you can run the coulet",
    "start": "299039",
    "end": "304560"
  },
  {
    "text": "right you can some run some components there's options for virtualization but fundamentally um you can't run like a",
    "start": "304560",
    "end": "309720"
  },
  {
    "text": "custom cni you can't custom CSI you can't just load a kernel module from within kues in AED kues cluster so our I",
    "start": "309720",
    "end": "317240"
  },
  {
    "text": "would be that like in order for it to be a true commodity it can't just be a container it has to be exactly what it is replacing which is virtual machines",
    "start": "317240",
    "end": "325280"
  },
  {
    "text": "and thankfully we have a lot of existing tting around it I mean kbm is in the k right um these days and there's so many",
    "start": "325280",
    "end": "331560"
  },
  {
    "text": "different hypervisors we have Kimu we have the cloud hypervisor we am like last week just announced that they're",
    "start": "331560",
    "end": "336919"
  },
  {
    "text": "also switching over to KVM and firecracker is probably also a very popular one but there is one core",
    "start": "336919",
    "end": "342319"
  },
  {
    "text": "problem with this KVM based approach and that is that it requires a vendor",
    "start": "342319",
    "end": "347520"
  },
  {
    "text": "implementation of KVM that is usually implemented by using the um virtualization instructions on the CPU",
    "start": "347520",
    "end": "353800"
  },
  {
    "text": "so for example if you're running on int CPU probably need vtd enabled on your bias if you run um an AM CPU you",
    "start": "353800",
    "end": "360280"
  },
  {
    "text": "probably need like the KVM AMD mod loaded right and you can be sure that cloud providers will not let you do that",
    "start": "360280",
    "end": "366080"
  },
  {
    "text": "unless you get a very expensive per metal machine there's no way you can run virtual machines on top of an existing cloud provider they will not allow you",
    "start": "366080",
    "end": "372319"
  },
  {
    "text": "to commoditize the cloud provider away at least until very recently of course there's one workaround that's",
    "start": "372319",
    "end": "379479"
  },
  {
    "text": "viralization on this system for example something I usually use to develop but nested virtualization really is only",
    "start": "379479",
    "end": "385479"
  },
  {
    "text": "available on gcp in this cluster or if you buy a very expensive metal machine which again you wanted to run on",
    "start": "385479",
    "end": "391199"
  },
  {
    "text": "everything including your regular Cloud VMS that you can run today most people run for most of their workloads and also nested viralization",
    "start": "391199",
    "end": "398599"
  },
  {
    "text": "has significant performance drawbacks a lot of people might have a lot of you might have tried this um in like gcp for example but this is um a pretty good um",
    "start": "398599",
    "end": "407039"
  },
  {
    "text": "definition I think some SS cards have Fair low overhead but anything that is like massively concurrent there's a lot",
    "start": "407039",
    "end": "412599"
  },
  {
    "text": "of actual computes underneath it is going to lead to to problems if you use it with Nest virtualization and this is",
    "start": "412599",
    "end": "418560"
  },
  {
    "text": "where the first component I want talk about today in order to solve this this big commodation question um comes in and",
    "start": "418560",
    "end": "424080"
  },
  {
    "text": "that is pvm pvm is a very recent set of petas with Linux colel published in February by um Alibaba and end group and",
    "start": "424080",
    "end": "431840"
  },
  {
    "text": "what it effectively implements is a KVM vendor implementation that does not require the hardware virtualization",
    "start": "431840",
    "end": "437759"
  },
  {
    "text": "instructions and does not require nested virtualization I won't go into too much detail today on how thises is",
    "start": "437759",
    "end": "443560"
  },
  {
    "text": "implemented it's out of the scope of this presentation but if you want to learn more about that later feel free to talk to us but fundamentally once the",
    "start": "443560",
    "end": "449280"
  },
  {
    "text": "didn't kernel in user space then uses a switcher in kernel space that is implemented as part of thatc to actually",
    "start": "449280",
    "end": "455680"
  },
  {
    "text": "do the hyper calls and stuff like that and the most interesting thing is I just said there's no Hardware acceleration",
    "start": "455680",
    "end": "461160"
  },
  {
    "text": "there's no nested word right the first thought might be okay this has to be super slow but the the actual cases it's",
    "start": "461160",
    "end": "466759"
  },
  {
    "text": "not actually the case it's actually faster than KVM in some use cases just like with the actual official vendor implementation BM here stands for bare",
    "start": "466759",
    "end": "473680"
  },
  {
    "text": "metal and is forested and so for example if you take a look at if you take a look at the hyper call latency for for",
    "start": "473680",
    "end": "479240"
  },
  {
    "text": "example example KVM and pvm um just natively it's like within 10% for most",
    "start": "479240",
    "end": "484360"
  },
  {
    "text": "of the cases and if you compare it to running nested virtualization versus AVM with pvm's Curel module you see a",
    "start": "484360",
    "end": "491360"
  },
  {
    "text": "drastic difference especially if you take a look at this in a little bit of a graph um on the very left hand side you can see cable running with a lot of",
    "start": "491360",
    "end": "497840"
  },
  {
    "text": "concurrent processes if you do a lot of like compilation or see ACD in your Cloud that's something that really matters to you and you can see the um",
    "start": "497840",
    "end": "504039"
  },
  {
    "text": "the Shaded uh the the second um bar from the from the right hand side um is is",
    "start": "504039",
    "end": "509960"
  },
  {
    "text": "nested KVM and you can see how the N just spikes out of control when you more threats and more heavy heavy compute",
    "start": "509960",
    "end": "516399"
  },
  {
    "text": "whereas with pvm there's a very gradual very slight decrease in performance and in most cases it's actually pretty much",
    "start": "516399",
    "end": "523039"
  },
  {
    "text": "unnoticeable so with pvm what we can do supposedly is set a VM and S run it",
    "start": "523039",
    "end": "528560"
  },
  {
    "text": "inside of existing virtual machines but can we run it this VM everywhere",
    "start": "528560",
    "end": "535560"
  },
  {
    "text": "so everywhere means a lot of things right you really mean everywhere one of these interesting use",
    "start": "539800",
    "end": "545640"
  },
  {
    "text": "cases a spot instances if you've ever had a big AWS bill you might have like been tempted to like switch on a little",
    "start": "545640",
    "end": "551680"
  },
  {
    "text": "um like check mark when you create a new new virtual machine it says oh yeah use a spot instance because those can be really cheap up to 90% cheaper simply",
    "start": "551680",
    "end": "558360"
  },
  {
    "text": "because the the price is um is um it's just yeah but it comes with a big cost",
    "start": "558360",
    "end": "563519"
  },
  {
    "text": "and that cost us that such a spot instance can be interrupted within 2 minutes on AWS and 30 seconds on GC CP",
    "start": "563519",
    "end": "570000"
  },
  {
    "text": "which means that at any time it could just completely go away all of your data is gone so for any kind of stateful workload that's usually not something",
    "start": "570000",
    "end": "576480"
  },
  {
    "text": "you can use even with pvm it's not that useful right and that's where the second component here comes in which is life",
    "start": "576480",
    "end": "582079"
  },
  {
    "text": "migration and I get start of that I'm going to introduce a new component to this this greater puzzle and it's",
    "start": "582079",
    "end": "587600"
  },
  {
    "text": "firecracker so firecracker you might have already used in maybe with C containers maybe just for like your own",
    "start": "587600",
    "end": "592760"
  },
  {
    "text": "micr VMS it's an interesting um hypervisor but based on R VM from um AWS",
    "start": "592760",
    "end": "598399"
  },
  {
    "text": "and it comes with a very interesting feature that I haven't seen in many other hypervisors which is CPU templates",
    "start": "598399",
    "end": "604320"
  },
  {
    "text": "so if you deploy to a bunch of different Cloud providers each of them is going to have slightly different CPU instructions some of them have AVX virtualized some",
    "start": "604320",
    "end": "610880"
  },
  {
    "text": "of them don't some of them have different CPU frequencies different features different vendor IDs so um by",
    "start": "610880",
    "end": "617760"
  },
  {
    "text": "using um by using the the righted on specific platforms you can actually make every single um every single um constant",
    "start": "617760",
    "end": "625160"
  },
  {
    "text": "look exactly the same to the guest that you're running instead of PBM which means that VMS become truly portable so essentially",
    "start": "625160",
    "end": "633079"
  },
  {
    "text": "we can take a single VM image deployed on every single Noe and it behaves exactly the same it doesn't matter whether you run on ec2 AWS or anywhere",
    "start": "633079",
    "end": "639680"
  },
  {
    "text": "else it's the exact same behavior this becomes a very interesting proposal when you combine it with another F feature",
    "start": "639680",
    "end": "645440"
  },
  {
    "text": "which is Snapshot and restore because if snapshot and restore and the right CPU templet for for your specific set of",
    "start": "645440",
    "end": "651279"
  },
  {
    "text": "heterogeneous hosts you actually have portable snapshots so say for example",
    "start": "651279",
    "end": "656600"
  },
  {
    "text": "you on a spot instance you can snapshot it on one instance evacuate it",
    "start": "656600",
    "end": "661760"
  },
  {
    "text": "off the host to other instance and just resume it there even if the CPU is different even if the CPU frequency is",
    "start": "661760",
    "end": "666959"
  },
  {
    "text": "different even if there's different CPU IDs and different CPU features simply because we have CPU templates and sub",
    "start": "666959",
    "end": "673040"
  },
  {
    "text": "restore and we have to make some changes to fer in order to actually get pvm to work but have pretty basic and it's all",
    "start": "673040",
    "end": "678639"
  },
  {
    "text": "open source a link will be at the end for our specific fer Fork that R of pvm today now snapshot restore is",
    "start": "678639",
    "end": "685519"
  },
  {
    "text": "interesting but keep in mind snap restore is a quite expensive operation keep in mind we have 30 seconds maybe to evacuate so um just SN store is kind of",
    "start": "685519",
    "end": "693240"
  },
  {
    "text": "useless in the context of Spun senses when the host can go away um because we have to dump a lot of data right every",
    "start": "693240",
    "end": "699720"
  },
  {
    "text": "single time the entire memory has to be dumped with um with our patches St we have implemented a way to basically do",
    "start": "699720",
    "end": "705959"
  },
  {
    "text": "continuous snapshotting as the virtual machine is running and we take care of and take care of this by using map",
    "start": "705959",
    "end": "711200"
  },
  {
    "text": "shared basically letting the kernel sync back changes asynchronously to the underlying snapshot as it is running",
    "start": "711200",
    "end": "716880"
  },
  {
    "text": "without having to stop time and without having to waste it um and and without having to um having to dump everything",
    "start": "716880",
    "end": "722000"
  },
  {
    "text": "to desk which makes it very very fast but again this lot more information on this later so let's just uh just",
    "start": "722000",
    "end": "727320"
  },
  {
    "text": "continue but I just argued if you write to changes to a file now we're migrating across instances though so files aren't",
    "start": "727320",
    "end": "733120"
  },
  {
    "text": "particularly useful you just don't have enough time to migrated in 30 seconds over to next house right that is where",
    "start": "733120",
    "end": "738440"
  },
  {
    "text": "next component Silo which is our open source storage engine comes into play Silo creates a virtual file actually",
    "start": "738440",
    "end": "745040"
  },
  {
    "text": "it's it's a block device that we Mount somewhere but it behaves as file and essentially is able to track changes",
    "start": "745040",
    "end": "750839"
  },
  {
    "text": "that that firer or the kernel dumps from our map memory region into um a um into",
    "start": "750839",
    "end": "757800"
  },
  {
    "text": "the into that U data plane and we can then use this data plane to migrate between the notes very very efficiently",
    "start": "757800",
    "end": "763560"
  },
  {
    "text": "and we can amortise most of the startup there's a peer-to-peer mode directly where basically we can take a existing",
    "start": "763560",
    "end": "768839"
  },
  {
    "text": "snapshot that's currently running We can surf the snapshot and then migrate it in with a hybrid pre and post copy",
    "start": "768839",
    "end": "774399"
  },
  {
    "text": "migration or we also have the option to continuously synchronize that snapshot up to S3 as it is running basically",
    "start": "774399",
    "end": "780279"
  },
  {
    "text": "creating a continuous stream of backups that we can advertise and Stream in once it is gone so using all of this",
    "start": "780279",
    "end": "785600"
  },
  {
    "text": "technology we're able to actually evacuate off much much more quickly than 30 seconds from a snapshot from a sunus",
    "start": "785600",
    "end": "791240"
  },
  {
    "text": "that is going away and another interesting feature of um of Silo is that it can actually forward um forward",
    "start": "791240",
    "end": "798639"
  },
  {
    "text": "discs as well into the guest using a using a guest col module and a host col module usually you might do this with",
    "start": "798639",
    "end": "804320"
  },
  {
    "text": "vers but vers has a few drawbacks performance- wise mostly because it's a fuse with this pure VFS implementation",
    "start": "804320",
    "end": "810079"
  },
  {
    "text": "in actual kernel space and a v module for zero copy this gets very very fast and it allows you to to do a lot more",
    "start": "810079",
    "end": "815920"
  },
  {
    "text": "interesting things that's the compute part now we to talk about drafter drafter takes the components I mentioned",
    "start": "815920",
    "end": "822000"
  },
  {
    "text": "so far data plane and fire quicker and puts them into one single component it's also an open source budget by the way",
    "start": "822000",
    "end": "827959"
  },
  {
    "text": "under both of them are hpl and you can just use that today and what drafter provides you is a very simple and easy",
    "start": "827959",
    "end": "833600"
  },
  {
    "text": "to use library to start virtual machines with pvm firecracker exactly on the setups we just mentioned you can here",
    "start": "833600",
    "end": "839399"
  },
  {
    "text": "like for example resuming a snapshot is literally just you call resume on it and just takes care of all of the heavy lifting for you um drafter also allows",
    "start": "839399",
    "end": "846399"
  },
  {
    "text": "you to go in and actually create guest services so you can script your VMS in the way you might do with containers you",
    "start": "846399",
    "end": "851560"
  },
  {
    "text": "can talk to the guest VM with VTO you call ipcs for example if you want to like set the guest mtus or execute a",
    "start": "851560",
    "end": "857199"
  },
  {
    "text": "command this is actually a super primitive proxy implementation like kind of like a reverse proxy it's very easy",
    "start": "857199",
    "end": "862320"
  },
  {
    "text": "to do with this kind of library but it's more than just that drafter also is a reference implementation C wi for um the",
    "start": "862320",
    "end": "870360"
  },
  {
    "text": "library right so we have a net in there and a port forwarding tool so you can start networking environments we have a",
    "start": "870360",
    "end": "875759"
  },
  {
    "text": "liess check that can notify the host when the snot should be taken and we have an agent that can um basically um",
    "start": "875759",
    "end": "882160"
  },
  {
    "text": "run command out of the guest depending on things that change on the host and the other way around we have a snapshot",
    "start": "882160",
    "end": "887199"
  },
  {
    "text": "tool you just pass in your blueprint you get out a snapshot in like in a second or so we have a runner sorry a packager",
    "start": "887199",
    "end": "893920"
  },
  {
    "text": "which can create a universal redistributable package for your running application with it state that you can",
    "start": "893920",
    "end": "899160"
  },
  {
    "text": "copy to any host on the world and resume there with any it will just work the state will be consistent we have the",
    "start": "899160",
    "end": "904759"
  },
  {
    "text": "runner of course which actually runs the these packages and we have the registry in the mounter which can serve these",
    "start": "904759",
    "end": "911360"
  },
  {
    "text": "packages these Universal packages um across the instances and then Mount them in stream them in basically so you don't",
    "start": "911360",
    "end": "916399"
  },
  {
    "text": "have to like download the entire um Image First and start it you can actually stream it in while you're doing it which is a lot faster than than doing",
    "start": "916399",
    "end": "922040"
  },
  {
    "text": "it the other way around and finally the pier which combines a lot of this functionality into a single component a",
    "start": "922040",
    "end": "927880"
  },
  {
    "text": "pier can take a local SN shot start it make itself migratable over the network and when you point another Pier at this",
    "start": "927880",
    "end": "933920"
  },
  {
    "text": "pier it just migrates to itself or sorry to the destination of course in this use case um and you can also of course stop",
    "start": "933920",
    "end": "940120"
  },
  {
    "text": "the VM sub so on and so forth but with all on way very very abstract so switch",
    "start": "940120",
    "end": "946480"
  },
  {
    "text": "over to a demo which in this case it's there's two demos this the first one and this one will be a life migration of",
    "start": "946480",
    "end": "951519"
  },
  {
    "text": "valky which is the r successor um between Cloud providers and um between Cloud providers with drafter and for",
    "start": "951519",
    "end": "957759"
  },
  {
    "text": "that I will quickly switch over to screen Ming hope that works perfect okay um as",
    "start": "957759",
    "end": "965000"
  },
  {
    "text": "a part of the preparation for this I have a provisioned a bunch of um Cloud incenses we have some some here over on",
    "start": "965000",
    "end": "971000"
  },
  {
    "text": "AWS some on Azure some on gcp and these are just regular old Cloud incenses there's no B metal no as the virtualization this is also all linked",
    "start": "971000",
    "end": "978120"
  },
  {
    "text": "later there's a terraform you can terraform um temp you can run to actually start all of this now um I have",
    "start": "978120",
    "end": "984000"
  },
  {
    "text": "picked a few hosts um for the specific demo so there is a few hosts here running on the East Coast there's one in",
    "start": "984000",
    "end": "989360"
  },
  {
    "text": "8 there's one in the central us asure and there's one running in gcp we also have one running in Hillsboro for",
    "start": "989360",
    "end": "994920"
  },
  {
    "text": "headstar but we won't be using that today for the demo and I'm just going to get started here so first of all I want to show you that it's actually running",
    "start": "994920",
    "end": "1001680"
  },
  {
    "text": "not on bare metal but it's actually virtualized I've prepared this little script that will just run off run over all of our nodes and you can see over",
    "start": "1001680",
    "end": "1008519"
  },
  {
    "text": "here this is running instead of the so we run system D detect word so this is actually like properly virtualized it's not by metal and you can see here for",
    "start": "1008519",
    "end": "1014959"
  },
  {
    "text": "example this one is using the proprietary Amazon hypervisor this one is using hyperv and the last two is gcp",
    "start": "1014959",
    "end": "1020000"
  },
  {
    "text": "and headster these are using KVM so these are completely different um completely different hypervisors under",
    "start": "1020000",
    "end": "1025240"
  },
  {
    "text": "the hood right so usually if you want to like life maker be that pretty much impossible and you can also see different processor types it's not the",
    "start": "1025240",
    "end": "1031199"
  },
  {
    "text": "exact same thing different core counts different even address sizes and different uh CPU speeds so usually not",
    "start": "1031199",
    "end": "1036760"
  },
  {
    "text": "something you would be able to migrate around right so what I'm doing the first is I'm going to start a bunch of services on this and I should mention um",
    "start": "1036760",
    "end": "1044760"
  },
  {
    "text": "this is a live demo I'm on conference Wi-Fi so things here might break I have a video in case that happen and I will also be linking the entire reproduction",
    "start": "1044760",
    "end": "1051160"
  },
  {
    "text": "steps that you can run at home for for all of this um at the end but let's just hope at first that it just works why",
    "start": "1051160",
    "end": "1057520"
  },
  {
    "text": "this be working well so fine okay I will also start the port forwarding here we are forwarding um Redd to Port 333 from",
    "start": "1057520",
    "end": "1065120"
  },
  {
    "text": "the normal Port this is actually based on the drafter net and the drafter foring I showed you",
    "start": "1065120",
    "end": "1070400"
  },
  {
    "text": "earlier here we go that's our running and yeah now we just follow this little little guide I wrote and what we going",
    "start": "1070400",
    "end": "1076799"
  },
  {
    "text": "to be doing here is first of all I'm going to create a snapshot and I'm starting it on the first first note so I'm creating it immediately immediately",
    "start": "1076799",
    "end": "1082919"
  },
  {
    "text": "resuming it I'm using the t2a template for fire CER here which is exactly what um which is the it is common across all",
    "start": "1082919",
    "end": "1089880"
  },
  {
    "text": "AMD Milan CPU so as long as it's newer than AMD Milan they all look the same from the bm's perspective as you can see",
    "start": "1089880",
    "end": "1095720"
  },
  {
    "text": "here the snapshot is currently happening you might see that the snapshot itself takes a while right that is the reason why you can't just use Snapshot Restore",
    "start": "1095720",
    "end": "1102039"
  },
  {
    "text": "for this kind of Life migration stuff it's just too slow there's too much IO happening so this is how long it takes to start it and there we go we have or",
    "start": "1102039",
    "end": "1108960"
  },
  {
    "text": "thing running and we now I have VY running on here and if I jump back into top here we have a little open source",
    "start": "1108960",
    "end": "1116320"
  },
  {
    "text": "cool open source tool called latency which is creatively named but essentially just connects to the VY of",
    "start": "1116320",
    "end": "1122000"
  },
  {
    "text": "this instance and basically runs a few commands after connection is running without breaking the connection so in",
    "start": "1122000",
    "end": "1127320"
  },
  {
    "text": "this case I can simply start it sorry I put the wrong port in here um as I mentioned earlier",
    "start": "1127320",
    "end": "1133280"
  },
  {
    "text": "we forwarded it to 333 not the actual R part",
    "start": "1133280",
    "end": "1139240"
  },
  {
    "text": "there we go it works and like Yeah The Ping is not that great and the servers are on the East Coast right now we're on conference Wi-Fi but just bear with me",
    "start": "1139240",
    "end": "1145039"
  },
  {
    "text": "for a second so we now have this VM running and again this is a universal snapshot right um this is currently running inside of a nested VM on AWS ec2",
    "start": "1145039",
    "end": "1153600"
  },
  {
    "text": "now we want to take this um virtual machine and we want to migrate it in our case we actually we can pick any",
    "start": "1153600",
    "end": "1158679"
  },
  {
    "text": "provider here that we really want to migrate to I'm going to pick um Azure for the next one so um again different",
    "start": "1158679",
    "end": "1164360"
  },
  {
    "text": "CPU type everything is completely different between these two systems and I'm simply pointing this one um this",
    "start": "1164360",
    "end": "1170760"
  },
  {
    "text": "pier to the last Pier using a listening address right that's all I have to do and I'm just going to paste this over",
    "start": "1170760",
    "end": "1175919"
  },
  {
    "text": "here and you will see that the live migration is starting it's pretty fast you can see everything continues to run",
    "start": "1175919",
    "end": "1181360"
  },
  {
    "text": "um while this is doing there should shouldn't be any spikes in this this demo as well and you can see that like it's SL migrating of the data over now",
    "start": "1181360",
    "end": "1187320"
  },
  {
    "text": "usually if you have a if you deployment on spot instances you would use S3 to continuously synchronize it before it's",
    "start": "1187320",
    "end": "1192760"
  },
  {
    "text": "even been interrupted right so you only migrate the smallest amount of data at the end PE top for this demo though",
    "start": "1192760",
    "end": "1197960"
  },
  {
    "text": "we're doing it full P top just for the sake of Simplicity as you can see we're migrating something like I think it's 30",
    "start": "1197960",
    "end": "1203159"
  },
  {
    "text": "gigs between these two notes this is a a 4 CPU course and 2 gigs of RAM not the biggest VM but this was what this is",
    "start": "1203159",
    "end": "1209559"
  },
  {
    "text": "what we were able to fit inside of our AWS quota in the SC case so um yeah should be done any",
    "start": "1209559",
    "end": "1215360"
  },
  {
    "text": "second now and this is over this is over like a public internet link so this is like less than a gigabit in terms of",
    "start": "1215360",
    "end": "1221159"
  },
  {
    "text": "speed so that's why it's taking a little bit longer to actually covery everything over but you can see while this is happening everything just kind of",
    "start": "1221159",
    "end": "1227240"
  },
  {
    "text": "continues to run and what you will see us actually so we can see the live migration happening over here we get",
    "start": "1227240",
    "end": "1232799"
  },
  {
    "text": "speciic M spikes um but fundamentally everything keeps running there's no data loss however once you mic it over you",
    "start": "1232799",
    "end": "1239000"
  },
  {
    "text": "see that this breaks at first right which makes sense we move from host a to host B different IP address so what do",
    "start": "1239000",
    "end": "1244960"
  },
  {
    "text": "we do next we use the IP address of our asro server oh I forgot the uh first update",
    "start": "1244960",
    "end": "1254200"
  },
  {
    "text": "here we go and we restarted and we have taken a",
    "start": "1254200",
    "end": "1259320"
  },
  {
    "text": "snapshot that we started on a on AWS we've moved it over to Azure and resumed",
    "start": "1259320",
    "end": "1264480"
  },
  {
    "text": "it over there and it just keeps running and just for some results this took about 66 milliseconds here usually it's",
    "start": "1264480",
    "end": "1269679"
  },
  {
    "text": "faster you will see this in dat demos as well there's a bunch of rgts that that come into play with this specific demo",
    "start": "1269679",
    "end": "1274840"
  },
  {
    "text": "but yeah we've moved now we've moved now from AWS to Azure let's move further let's just move to let's see what what",
    "start": "1274840",
    "end": "1280679"
  },
  {
    "text": "else I puted I think the next demo is gcp yeah so let's take that snapshot that running virtual machine and we're",
    "start": "1280679",
    "end": "1286400"
  },
  {
    "text": "just going to migrate it right over to gcp again this one actually has like like like 2 GHz CPU like it's a",
    "start": "1286400",
    "end": "1292200"
  },
  {
    "text": "completely different vcpu but yeah we can see again same story it's now copying the data over this is actually",
    "start": "1292200",
    "end": "1298120"
  },
  {
    "text": "this Ser is running in Iowa the other one is running in like I think Virginia so it's a little bit of a little bit of an rtt here at play but as you can see",
    "start": "1298120",
    "end": "1304360"
  },
  {
    "text": "in a second we are migrating um the blocks over everything just kind of keeps running and I'm going to",
    "start": "1304360",
    "end": "1310000"
  },
  {
    "text": "pre-prepare this time latency to switch its IP address over to the destination",
    "start": "1310000",
    "end": "1315679"
  },
  {
    "text": "why is this happening a little bit tight on time so I might have to skip a few",
    "start": "1315679",
    "end": "1321159"
  },
  {
    "text": "slides a second but yeah essentially right now",
    "start": "1321159",
    "end": "1326440"
  },
  {
    "text": "what you're seeing it's just like a bunch of data being transed over it's like 30 gigs so it just takes a while and usually you would amortise this using S3 instead of running it peer",
    "start": "1326440",
    "end": "1333039"
  },
  {
    "text": "to-peer at the time where you're migrating and here we",
    "start": "1333039",
    "end": "1339520"
  },
  {
    "text": "go it's doing the final migration steps and you can see again our original",
    "start": "1339520",
    "end": "1345480"
  },
  {
    "text": "host stopped it has resumed on the other end this time it took 350 m milliseconds even though this is like across the",
    "start": "1345480",
    "end": "1350720"
  },
  {
    "text": "American continent right and we can go in here we can use our new destination IP",
    "start": "1350720",
    "end": "1356440"
  },
  {
    "text": "address and we can resume it and voila we have migrated our life data all data is consistent the CPU side is exactly",
    "start": "1356440",
    "end": "1362760"
  },
  {
    "text": "the same and again this is on without ination across different child providers so that is our first demo let's quickly",
    "start": "1362760",
    "end": "1370840"
  },
  {
    "text": "jump over to Jo our displace again oops these are",
    "start": "1370840",
    "end": "1376039"
  },
  {
    "text": "not supposed to be on that screen uh one second here we",
    "start": "1376039",
    "end": "1384080"
  },
  {
    "text": "go VOA so this was the first demo we've M I've M VY between Cloud providers on",
    "start": "1384080",
    "end": "1390279"
  },
  {
    "text": "top of their regular um instances as virtual machines um but you might have noticed we had to change the IP address",
    "start": "1390279",
    "end": "1395760"
  },
  {
    "text": "right this was the life migration in theory but from the users perspective the connection dropped that is where our",
    "start": "1395760",
    "end": "1400840"
  },
  {
    "text": "next connection our next um um idea here comes in next component which is Conduit conduit allows us to life migrate not",
    "start": "1400840",
    "end": "1407960"
  },
  {
    "text": "just like the State the diss all of the like registers all that kind of stuff it also allows us to migrate the network",
    "start": "1407960",
    "end": "1413400"
  },
  {
    "text": "connections from host a to host B with zero downtime for example this has very very interesting ramifications um for",
    "start": "1413400",
    "end": "1419960"
  },
  {
    "text": "example let's imagine we have a database in the EU and we have sorry database in Canada and a server in the EU right if",
    "start": "1419960",
    "end": "1425200"
  },
  {
    "text": "you want to migrate the if I want to migrate the database over to Canada well the connections are going to break in",
    "start": "1425200",
    "end": "1430679"
  },
  {
    "text": "two places first and foremost it's going to break between us and the web server right since the IP address changed and",
    "start": "1430679",
    "end": "1436960"
  },
  {
    "text": "also if you migrate something would would expect the TCP connections to break but also the connection between the database and the web server has",
    "start": "1436960",
    "end": "1442919"
  },
  {
    "text": "broken what convert effectively does is it can migrate those connections for you so you can make this applies to both",
    "start": "1442919",
    "end": "1448840"
  },
  {
    "text": "eress and Ingress connections so for example if your server is making an outbound request during a migration that",
    "start": "1448840",
    "end": "1455279"
  },
  {
    "text": "request will not be interrupted if you are connected like with with like uh with like I'll show later again with r",
    "start": "1455279",
    "end": "1460960"
  },
  {
    "text": "for example or with something something like like like netcat or you're streaming data you're doing a video conference whatever all that kind of",
    "start": "1460960",
    "end": "1466760"
  },
  {
    "text": "says kind of just continues to work There's an actual migration of the underlying of the underlying connections",
    "start": "1466760",
    "end": "1472600"
  },
  {
    "text": "and that means you can just kind of move it at random if if if if you're if you're not really worried about daty for",
    "start": "1472600",
    "end": "1477640"
  },
  {
    "text": "example and today you notice okay spot instances and like I don't know Ed like us central region are super cheap and",
    "start": "1477640",
    "end": "1483320"
  },
  {
    "text": "I'm just using a lot of lot of a lot of offload offload processing you can just move it over and once it gets cheaper",
    "start": "1483320",
    "end": "1488799"
  },
  {
    "text": "back where you're origin running them you just move them over again if you notice that a spot instance on for example gcp is cheaper than an AWS you",
    "start": "1488799",
    "end": "1495120"
  },
  {
    "text": "can just move it over to AWS um and there will be no interuption to your inbound connections your outbound",
    "start": "1495120",
    "end": "1500640"
  },
  {
    "text": "connections or any CBU state from the users perspective it will be completely transparent and the product that allows",
    "start": "1500640",
    "end": "1506799"
  },
  {
    "text": "you to take all of these individual components conduit drafter pvm F and so on and wrap them into a nice API a nice",
    "start": "1506799",
    "end": "1513279"
  },
  {
    "text": "reusable actual product is architect and architect is exactly what I'm going to be using in a second demo of today where",
    "start": "1513279",
    "end": "1520159"
  },
  {
    "text": "we will take a kuet tuster and we make the entire kuber tuster between Cloud",
    "start": "1520159",
    "end": "1525200"
  },
  {
    "text": "providers using architect so again one of the demos of the things I mentioned in the beginning is that a comti piece",
    "start": "1525200",
    "end": "1531640"
  },
  {
    "text": "of compute can run absolutely everything and when I mean everything I mean everything you can run a kubernetes tester inside of it right and that c",
    "start": "1531640",
    "end": "1538399"
  },
  {
    "text": "tester should be able to run absolutely everywhere so what we're going to be doing next is exactly that we're going to start a c tester inside of",
    "start": "1538399",
    "end": "1546559"
  },
  {
    "text": "architect and for that mirror my screen again let's hope that the demo gots uh",
    "start": "1546559",
    "end": "1551799"
  },
  {
    "text": "also I happy with the second demo and again just to clarify I have um",
    "start": "1551799",
    "end": "1557000"
  },
  {
    "text": "created a bunch of um virtual machines here earlier a lot of time to start and you",
    "start": "1557000",
    "end": "1562520"
  },
  {
    "text": "can see we have a bunch we have some of them in AWS we have some of them over here at Azure some of them gcp some of them in in other environments and what",
    "start": "1562520",
    "end": "1568919"
  },
  {
    "text": "you want and you can see again all of these run a specific hypervisor there's no M visualization this is not bare metal these are running VMS on VMS using",
    "start": "1568919",
    "end": "1576880"
  },
  {
    "text": "pvm and architect so yeah our first step of of business of course is to actually start a Comm tester for that to work I'm",
    "start": "1576880",
    "end": "1583919"
  },
  {
    "text": "going to quickly start two components actually I'm going to start all of them one already",
    "start": "1583919",
    "end": "1590559"
  },
  {
    "text": "here so these are exactly the five notes I just showed you earlier that I'm connecting to again I'm excluding header",
    "start": "1592399",
    "end": "1597480"
  },
  {
    "text": "for the specific demo and we can see everything starting up while this is running I'm going to quickly configure the local CLI for architect which is",
    "start": "1597480",
    "end": "1604320"
  },
  {
    "text": "called Arc and we just jump in here already configured it there we go now the first the first thing I'm going to",
    "start": "1604320",
    "end": "1610240"
  },
  {
    "text": "do is I'm going to start the K tester as I just mentioned and again all of this is um is documented if you want to try that home",
    "start": "1610240",
    "end": "1617440"
  },
  {
    "text": "so first of all I'm going to start a server again t2a template for CPU course 2 G of ram very small but for the demo",
    "start": "1617440",
    "end": "1623200"
  },
  {
    "text": "again it's what we could fit in within the the qua that is being started right now we",
    "start": "1623200",
    "end": "1628919"
  },
  {
    "text": "creating the snapshot first of all first and foremost take a little bit of time and again like like when you see these",
    "start": "1628919",
    "end": "1634679"
  },
  {
    "text": "kinds of things taking longer like this initial snapshot that is exactly why you cannot just use Snapshot restore with um",
    "start": "1634679",
    "end": "1640039"
  },
  {
    "text": "sponsors you really need that life migration piece because it just takes too long to happen um yeah and the big",
    "start": "1640039",
    "end": "1645399"
  },
  {
    "text": "benefit of course there something that separates the SN restore from the life piece like architect does is like you can actually advertise something like",
    "start": "1645399",
    "end": "1651279"
  },
  {
    "text": "this you can just precreate your snapshots instances you actually start a new cluster you just take that snapshot",
    "start": "1651279",
    "end": "1658000"
  },
  {
    "text": "and you resume it which is instantaneous like 100 milliseconds so you can add like a new commes node for example in",
    "start": "1658000",
    "end": "1663120"
  },
  {
    "text": "like 100 milliseconds to it which is kind of a useful feature and actually that is actually safe in our use case as well it's not just something you you can",
    "start": "1663120",
    "end": "1669200"
  },
  {
    "text": "do is actually it's actually safe as all of the like crypto stuff um gets free",
    "start": "1669200",
    "end": "1675559"
  },
  {
    "text": "restarted all right um I'm starting our instance and you can see on the left hand side we have just started our",
    "start": "1675559",
    "end": "1681159"
  },
  {
    "text": "Factory instance it resumed in like I think 100 milliseconds over here and I quickly going to grab the running",
    "start": "1681159",
    "end": "1686519"
  },
  {
    "text": "Upstream case 3 inside of this but any Works um so in this case just going to",
    "start": "1686519",
    "end": "1691679"
  },
  {
    "text": "have to quickly unjam this terminal uh there we",
    "start": "1691679",
    "end": "1698480"
  },
  {
    "text": "go let's see how long it takes until I get the reset there we go now going to",
    "start": "1698679",
    "end": "1704240"
  },
  {
    "text": "copy out the coup config from our destination",
    "start": "1704240",
    "end": "1710120"
  },
  {
    "text": "it's a little bit cumbersome on the small screen all right I'm just going to place this into my local.",
    "start": "1714360",
    "end": "1721919"
  },
  {
    "text": "coup config and again k3s usually uses Local Host so we're just going to swap this out with the IP address of our",
    "start": "1722360",
    "end": "1729039"
  },
  {
    "text": "instance",
    "start": "1729039",
    "end": "1732039"
  },
  {
    "text": "and I hope this works there we go we have a connection to our instance again this is running inside of a VM inside of",
    "start": "1739559",
    "end": "1746440"
  },
  {
    "text": "VM in this case I think on AWS in this use case and you have full access to it this is a full case vs cluster you can",
    "start": "1746440",
    "end": "1751640"
  },
  {
    "text": "like open up a shell into here I don't know if C this it doesn't actually have one you can lose the locks of stuff is",
    "start": "1751640",
    "end": "1757600"
  },
  {
    "text": "actual Upstream communities and again this image is actually also open source you can retry this at home if you want to okay for the next thing we have to we",
    "start": "1757600",
    "end": "1764240"
  },
  {
    "text": "have to actually start another thing which is of course an agent so far we have one manager and want to make this a multi-node cluster so I will definitely",
    "start": "1764240",
    "end": "1770679"
  },
  {
    "text": "connect to our second node now which is a running over on",
    "start": "1770679",
    "end": "1776480"
  },
  {
    "text": "gcp and you can see much the same process as last time we started the um node will now while is scen the snapshot",
    "start": "1776480",
    "end": "1782559"
  },
  {
    "text": "using the liess component I mentioned earlier it will notify the host once it has actually connected to the Upstream",
    "start": "1782559",
    "end": "1788039"
  },
  {
    "text": "Community server and then it will shut itself down and is ready as a snapshot you can see here the note just popped up",
    "start": "1788039",
    "end": "1793799"
  },
  {
    "text": "that one is again running on gcp completely separate node and just connected to the first so we have started and we're now taking a snapshot",
    "start": "1793799",
    "end": "1800399"
  },
  {
    "text": "again usually of course you would advertise this so you only start a snapshot once you don't have to create a new one each and every",
    "start": "1800399",
    "end": "1807240"
  },
  {
    "text": "time and once this is finished there we go we can actually start our cluster sorry our our worker",
    "start": "1807240",
    "end": "1814600"
  },
  {
    "text": "our agent I guess is the correct German k3s terminology and here we",
    "start": "1814600",
    "end": "1820120"
  },
  {
    "text": "go time to start well we started that so now we",
    "start": "1820120",
    "end": "1825720"
  },
  {
    "text": "have two notes in this cluster and this should slowly start to start to actually pull the images while it's it's happening we'll check back on this in",
    "start": "1825720",
    "end": "1831720"
  },
  {
    "text": "just a second first of all though I'm going to quickly prepare a small um y",
    "start": "1831720",
    "end": "1836880"
  },
  {
    "text": "file I have prepared this is just a standard valky part again like I mentioned last time and what we can take",
    "start": "1836880",
    "end": "1841960"
  },
  {
    "text": "here is we can simply replace a note name so we schedule it to the correct note jump over back to architect and I",
    "start": "1841960",
    "end": "1849279"
  },
  {
    "text": "think by now this note yes it's ready it has fully provisioned itself and we can simply hit apply over here you'll see",
    "start": "1849279",
    "end": "1855480"
  },
  {
    "text": "the pop number go up to two there we go and now we a p inside of a Comm cluster running across Cloud providers on on like in",
    "start": "1855480",
    "end": "1862960"
  },
  {
    "text": "this case normal Cloud VMS right you can see it just started we have published a port earlier so we can now access it in",
    "start": "1862960",
    "end": "1868960"
  },
  {
    "text": "the same way we did earlier my touchpad has just decided to stop working I",
    "start": "1868960",
    "end": "1874320"
  },
  {
    "text": "cannot click um give just one",
    "start": "1874320",
    "end": "1880159"
  },
  {
    "text": "second more luck yes there we go we're back sorry about that um yeah so the",
    "start": "1881360",
    "end": "1886519"
  },
  {
    "text": "first thing we can of course do we can point lat latency um again at our little tool which you will be doing right over",
    "start": "1886519",
    "end": "1894039"
  },
  {
    "text": "here just going to replace the destination IP address with the one we're using earlier and this is just the",
    "start": "1894039",
    "end": "1899399"
  },
  {
    "text": "first note in the test I showed earlier and here we go we have latency running we can connect to the servers we just started inside communities of the VM",
    "start": "1899399",
    "end": "1906240"
  },
  {
    "text": "from the outside and the next thing I want to do is I want to live migrate this node to a different system",
    "start": "1906240",
    "end": "1911960"
  },
  {
    "text": "um and so first of all I'm going to make the note migratable we're going to do this man",
    "start": "1911960",
    "end": "1917320"
  },
  {
    "text": "here just to show like what is actually happen in Hood usually you just type in um migrate from and we will quickly replace it down",
    "start": "1917320",
    "end": "1926600"
  },
  {
    "text": "here I will switch over to the EXO so we're now migrating from gcp over to",
    "start": "1926799",
    "end": "1933080"
  },
  {
    "text": "AWS going to clean up this note just to sure that we don't have anything left over and finally we start the actual",
    "start": "1933240",
    "end": "1939639"
  },
  {
    "text": "migration as you can see now this system is migrating over here migrating to this node and you can see the connection just",
    "start": "1939639",
    "end": "1946000"
  },
  {
    "text": "kind of keeps working I really hope last time we had some we had some hangups cuz we were using a mobile hotspot I hope this doesn't happen this time around but",
    "start": "1946000",
    "end": "1953000"
  },
  {
    "text": "this tool uses a single connection right so this is like the connection should now not break between the between the migrations still going to take a little",
    "start": "1953000",
    "end": "1959320"
  },
  {
    "text": "bit of time just because there a lot of data and we're not using S3 in this case this is purely peer to-peer in this case we're not amortizing the The Continuous",
    "start": "1959320",
    "end": "1965240"
  },
  {
    "text": "Su Shing but you can see while this migration is happening everything just kind of keeps working we can like we can send new commands here you can I don't",
    "start": "1965240",
    "end": "1971399"
  },
  {
    "text": "know go into the VM the the kubernetes cluster is still running right like we have the Noe up here the stus is is just is running everything just kind of keeps",
    "start": "1971399",
    "end": "1977880"
  },
  {
    "text": "working and now over here we can see that the final migration stuff is happening and we can see over here that",
    "start": "1977880",
    "end": "1983000"
  },
  {
    "text": "it's going to resume in just a second hopefully are we yeah and usually that",
    "start": "1983000",
    "end": "1989960"
  },
  {
    "text": "spike is much much shorter but you can see over here we have just moved that note between AWS or to TCP we get about",
    "start": "1989960",
    "end": "1997399"
  },
  {
    "text": "1.3 seconds usually that's more like in like 50 milliseconds I can actually show you how long it actually takes to to to",
    "start": "1997399",
    "end": "2002519"
  },
  {
    "text": "resume this node over here so the ex resumption time was 260 milliseconds everything else we have here is rtt from",
    "start": "2002519",
    "end": "2008399"
  },
  {
    "text": "us locally accessing it right so if you were a cent connected to this node we could now have moved it between Cloud",
    "start": "2008399",
    "end": "2013519"
  },
  {
    "text": "providers with zero downtime technically speaking on spot instances right we also have more technically speaking we would",
    "start": "2013519",
    "end": "2020000"
  },
  {
    "text": "have more demos now but I just see we only have very short amount of time left so I'm really going to skip the rest of the migrations but this again this works",
    "start": "2020000",
    "end": "2026279"
  },
  {
    "text": "the exact same way if you're migrating over to a AWS your own on premise infrastructure or oh sorry or anything",
    "start": "2026279",
    "end": "2032960"
  },
  {
    "text": "else um I'm not sure what's happening here just going to use this view so yeah",
    "start": "2032960",
    "end": "2038720"
  },
  {
    "text": "that is fundamentally what um what this new commodified computer can do it can run absolutely anything including all of",
    "start": "2038720",
    "end": "2044200"
  },
  {
    "text": "kubernetes and it can run it absolutely anywhere and move between them at any time depending on what the price changes",
    "start": "2044200",
    "end": "2049878"
  },
  {
    "text": "whenever you kind of feel like it and there's absolutely no downtime between you moving from A to B so there's pretty much no cost associated with you",
    "start": "2049879",
    "end": "2055679"
  },
  {
    "text": "migrating from a Tob anymore no reconfiguration no Dro connection stuff like that we also have as part of",
    "start": "2055679",
    "end": "2061079"
  },
  {
    "text": "architect an actual native ktic integation not part of this talk if you're interested just repe to talk class afterwards all you have to do just",
    "start": "2061079",
    "end": "2067079"
  },
  {
    "text": "register a single runtime class use the runtime class in your normal average kuties um part everything which kind of",
    "start": "2067079",
    "end": "2073760"
  },
  {
    "text": "work including storage like I mentioned with Silo earlier networking and for example you can run like xotic on here",
    "start": "2073760",
    "end": "2078878"
  },
  {
    "text": "this also works for UTP traffic not just TCP you can use any protocol for what we don't really care about that and you can",
    "start": "2078879",
    "end": "2084118"
  },
  {
    "text": "also run Val key with it and again if you want demo of this just let us know and of course the final one I can't do",
    "start": "2084119",
    "end": "2089398"
  },
  {
    "text": "this demo now don't have enough time for it but you can also use this for like C iccd which is a very useful instance for",
    "start": "2089399",
    "end": "2094560"
  },
  {
    "text": "example you can we have a dashboard on AR run just sign in give your a s account and your giup account you can",
    "start": "2094560",
    "end": "2099760"
  },
  {
    "text": "switch out the the the hosting to your to to run an architect instead of the nor communties Runners and then you just",
    "start": "2099760",
    "end": "2106800"
  },
  {
    "text": "schedule them over resp instances the instance dies during a build not a problem you just m it over to the next one and to the next one next one if gcp",
    "start": "2106800",
    "end": "2113520"
  },
  {
    "text": "becomes cheaper than AWS we just move to gcp if your own on PR infrastructure gets cheaper we can just move over there",
    "start": "2113520",
    "end": "2120280"
  },
  {
    "text": "and yeah as a very short recap we took a look today at what commoditized compute could look like then looked at pvm to do",
    "start": "2120280",
    "end": "2126280"
  },
  {
    "text": "the underlying actual um virtual machine startups and the C implementation that",
    "start": "2126280",
    "end": "2131920"
  },
  {
    "text": "Silo for data transfer very fast ones between them that drafter as a tool that combines all these things together into",
    "start": "2131920",
    "end": "2137640"
  },
  {
    "text": "a single unified Library you looked at conduit which can actually take not only the cbes and stuff but the actual",
    "start": "2137640",
    "end": "2143880"
  },
  {
    "text": "network connections between them and migr them without downtime um while the life migration is happening and that",
    "start": "2143880",
    "end": "2149079"
  },
  {
    "text": "architect which takes all the things together gra a pretty nice API and makes them available for you to use and yeah",
    "start": "2149079",
    "end": "2155319"
  },
  {
    "text": "all L and resources including a complete reproduction guide to this all open source repositories and sign up links",
    "start": "2155319",
    "end": "2160760"
  },
  {
    "text": "including my script for this demo if you're interested is all under this link and these slides are also up don't get if you can't um take the screenshot in",
    "start": "2160760",
    "end": "2167520"
  },
  {
    "text": "here in time and um yeah I think that's pretty much it for this talk thank you very much for listening I hope this was",
    "start": "2167520",
    "end": "2173480"
  },
  {
    "text": "uh interesting and yeah if you want to follow me again on Blue Skype feel free to um and of course fundamentally if you",
    "start": "2173480",
    "end": "2179240"
  },
  {
    "text": "want to use this stuff for your own actual product take a look at architect. run we we have a wait list over there",
    "start": "2179240",
    "end": "2184839"
  },
  {
    "text": "you can just sign up and we will text you once we have um C running which actually pretty around the corner now",
    "start": "2184839",
    "end": "2190240"
  },
  {
    "text": "the commet integation all of it feel free to to just check out that link and yeah thanks a lot",
    "start": "2190240",
    "end": "2196580"
  },
  {
    "text": "[Applause]",
    "start": "2196580",
    "end": "2200489"
  }
]