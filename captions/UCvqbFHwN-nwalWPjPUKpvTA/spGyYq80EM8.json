[
  {
    "text": "good morning everyone good morning hi um thank you",
    "start": "160",
    "end": "6040"
  },
  {
    "text": "thank you so much for for coming to our talk uh this is this is our our first cubec con and and we're we're really",
    "start": "6040",
    "end": "11639"
  },
  {
    "text": "excited to be here uh my my name is patima bannery I'm here with my colleague kangan uh we're both research",
    "start": "11639",
    "end": "17840"
  },
  {
    "text": "Engineers from a small business called uh realtime Innovations which is based out of Sunny Bale California and we're",
    "start": "17840",
    "end": "24640"
  },
  {
    "text": "here today to speak on the topic of bringing real-time performance to the edge Cloud uh more specific specifically",
    "start": "24640",
    "end": "30720"
  },
  {
    "text": "we're we're here to introduce the data distribution service or or DDS and",
    "start": "30720",
    "end": "35840"
  },
  {
    "text": "realtime publish subscribe or rtps standards uh to the to the cubec con audience here uh so I'm going to start",
    "start": "35840",
    "end": "42000"
  },
  {
    "text": "the talk with an overview of DDS and rtps and the standards and the benefits that they bring to the edge Cloud um",
    "start": "42000",
    "end": "49399"
  },
  {
    "text": "environment and then kyungho is going to conclude uh by showing some DDS performance benchmarks that really",
    "start": "49399",
    "end": "55640"
  },
  {
    "text": "highlight the power that these Open Standards uh can can bring",
    "start": "55640",
    "end": "61920"
  },
  {
    "text": "uh so before we get started uh just just a little bit of background about us uh so so realtime Innovations or RTI was",
    "start": "62280",
    "end": "69799"
  },
  {
    "text": "founded um back in 1991 by a group of researchers from the robotics Lab at",
    "start": "69799",
    "end": "74960"
  },
  {
    "text": "Stanford University so they were interested in building um software that could provide the the kind of fast",
    "start": "74960",
    "end": "81960"
  },
  {
    "text": "reliable Communications that are needed by robots uh that that uh operate in ad",
    "start": "81960",
    "end": "87840"
  },
  {
    "text": "hoc teams so uh you know for communicating things like sensor data control messages events and Status um",
    "start": "87840",
    "end": "94680"
  },
  {
    "text": "and their work really became the foundation for what later became uh the DDS and and rtps",
    "start": "94680",
    "end": "102040"
  },
  {
    "text": "standards so to continue on that thread uh today RTI provides communication",
    "start": "102040",
    "end": "108040"
  },
  {
    "text": "software for domains such as autonomous systems uh including like commercial automotive healthc Care so including",
    "start": "108040",
    "end": "114600"
  },
  {
    "text": "things like tele medicine and patient monitoring Industrial Automation so things like smart manufactur facturing",
    "start": "114600",
    "end": "120280"
  },
  {
    "text": "and uh industrial robotics um energy uh with like smart grids renewable energy",
    "start": "120280",
    "end": "126320"
  },
  {
    "text": "um and in defense and Aerospace so a few of these are highlighted um on the slide here but in addition to these product",
    "start": "126320",
    "end": "132480"
  },
  {
    "text": "Solutions we've also been involved in a lot of um uh standards associated with these domains so things like autosar and",
    "start": "132480",
    "end": "139440"
  },
  {
    "text": "abcc and the automotive space uh things like ice and open FMB and like the medical space and then in the robotic",
    "start": "139440",
    "end": "147200"
  },
  {
    "text": "space uh for those of you who might be familiar with with Ros 2 or the or the Robot Operating System uh DDS is",
    "start": "147200",
    "end": "153599"
  },
  {
    "text": "actually the underlying uh Communications protocol used by by the Ros 2 operating",
    "start": "153599",
    "end": "160120"
  },
  {
    "text": "system so the interesting thing is that all of these different domains um have a",
    "start": "160120",
    "end": "166400"
  },
  {
    "text": "certain set of of challenges in common and they all have requirements for",
    "start": "166400",
    "end": "171519"
  },
  {
    "text": "communications that span Edge systems where you need very very uh you need to",
    "start": "171519",
    "end": "178080"
  },
  {
    "text": "require very very strict timing to enable uh device to device Communications and uh and and you might",
    "start": "178080",
    "end": "184360"
  },
  {
    "text": "include embedded systems in those areas um they also have a need to communicate",
    "start": "184360",
    "end": "189840"
  },
  {
    "text": "at the edge Cloud systems which have slightly less strict timing requirements but they're still very very sensitive to",
    "start": "189840",
    "end": "195959"
  },
  {
    "text": "latency and finally they have a need to provide connectivity up to Cloud environments that uh can support you",
    "start": "195959",
    "end": "203040"
  },
  {
    "text": "know a little bit more latency tolerant use cases so our approach to addressing",
    "start": "203040",
    "end": "210200"
  },
  {
    "text": "these challenges um is rooted in the data distribution Service uh or DDS and",
    "start": "210200",
    "end": "215640"
  },
  {
    "text": "realtime published subscriber rtps uh family of Standards so these are open",
    "start": "215640",
    "end": "220920"
  },
  {
    "text": "standards for secure interoperable real-time data Centric Communications they enable uh platform independent",
    "start": "220920",
    "end": "227920"
  },
  {
    "text": "transport agnostic and Loosely coupled peer-to-peer interactions and they provide controls and patterns that so",
    "start": "227920",
    "end": "235079"
  },
  {
    "text": "that you know we can achieve really ultra low latency um at the edge in the edge clouds so I'm I'm going to I'm",
    "start": "235079",
    "end": "240920"
  },
  {
    "text": "going to get into each of these points in a little bit more detail um in in the slides that are that are coming up but",
    "start": "240920",
    "end": "246360"
  },
  {
    "text": "but from an overview perspective these are really you know kind of the key benefits that the DDS and rtps bring to",
    "start": "246360",
    "end": "252799"
  },
  {
    "text": "the edge in the edge Cloud so uh just just a quick note here",
    "start": "252799",
    "end": "260840"
  },
  {
    "text": "um so DDS and rtps aren't really Standalone standards um they're they",
    "start": "260840",
    "end": "268440"
  },
  {
    "text": "they're actually uh you know you can think of them really more as a family of Standards um so they are governed by the",
    "start": "268440",
    "end": "275479"
  },
  {
    "text": "object Management Group or or the OMG and the family of Standards uh",
    "start": "275479",
    "end": "281840"
  },
  {
    "text": "around DDS and rtps are actually provide a comp uh comprehensive framework for",
    "start": "281840",
    "end": "287600"
  },
  {
    "text": "real-time data communication and interoperability so uh so there are kind of the core so on the slide here you can",
    "start": "287600",
    "end": "294039"
  },
  {
    "text": "kind of see the core standards um for DDS and and rtps um for the API and the",
    "start": "294039",
    "end": "300560"
  },
  {
    "text": "wire protocol but then also around that you can see that there are language bindings for specific programming",
    "start": "300560",
    "end": "305759"
  },
  {
    "text": "languages uh there are standards for security that get layered on top of the DDS communication protocols there are",
    "start": "305759",
    "end": "312759"
  },
  {
    "text": "type definition format standards uh in IDL XML and njs and then uh finally",
    "start": "312759",
    "end": "318919"
  },
  {
    "text": "there are uh specifications for uh lighter weight versions of DDS uh for",
    "start": "318919",
    "end": "324440"
  },
  {
    "text": "resource constrained environments and that's the the DDS xrc standard that that actually just just recently came",
    "start": "324440",
    "end": "331160"
  },
  {
    "text": "out so one one one of the things that we that we wanted wanted to explore with",
    "start": "331160",
    "end": "336680"
  },
  {
    "text": "this talk is to under uh is to understand where there might be synergies between these standards that",
    "start": "336680",
    "end": "341759"
  },
  {
    "text": "have been developed in in the OMG um and also uh so that so that we can kind of",
    "start": "341759",
    "end": "347319"
  },
  {
    "text": "Leverage opportunities um for for maybe um understanding where the synergies",
    "start": "347319",
    "end": "352960"
  },
  {
    "text": "might be between these standards at the OMG and then the Open Standards that are developed as a part of the uh the cube",
    "start": "352960",
    "end": "359560"
  },
  {
    "text": "and the cloud native community so so what is DDS and what is",
    "start": "359560",
    "end": "366000"
  },
  {
    "text": "and what is it it all about um so the core of the DDS standard is the data",
    "start": "366000",
    "end": "371479"
  },
  {
    "text": "Centric published subscribe model and we can kind of think of this as a shared",
    "start": "371479",
    "end": "376639"
  },
  {
    "text": "global data space so applications interact with one another by directly",
    "start": "376639",
    "end": "381720"
  },
  {
    "text": "accessing that shared State and the interactions with the communications protocol revolve around interacting with",
    "start": "381720",
    "end": "388120"
  },
  {
    "text": "the data itself rather than focusing on the endpoints or the communication",
    "start": "388120",
    "end": "393280"
  },
  {
    "text": "channels so in a way you know you can think of it that the applications are actually behaving as though all the data",
    "start": "393280",
    "end": "400400"
  },
  {
    "text": "that they need to operate is actually available to them locally even though the data producers and consumers are",
    "start": "400400",
    "end": "407080"
  },
  {
    "text": "really part of a really large distributed Network and another way of thinking about it is that the interface",
    "start": "407080",
    "end": "414039"
  },
  {
    "text": "to the state distribution system is actually the data structures themselves",
    "start": "414039",
    "end": "420639"
  },
  {
    "text": "um so uh and and just one one thing to note here um persistence data",
    "start": "420639",
    "end": "427120"
  },
  {
    "text": "persistance and data storage are actually orthogonal to this whole state distribution mechanism so so that",
    "start": "427120",
    "end": "433319"
  },
  {
    "text": "there's actually um services that that you can actually Link in to the to the",
    "start": "433319",
    "end": "438400"
  },
  {
    "text": "DDS data bus to actually store the data off to to persistent storage as as you can kind of see on uh represented on the",
    "start": "438400",
    "end": "445120"
  },
  {
    "text": "slide here and another key point to make about",
    "start": "445120",
    "end": "450520"
  },
  {
    "text": "DDS is that it only uses peer-to-peer Communications so this allows for Direct",
    "start": "450520",
    "end": "456319"
  },
  {
    "text": "Communications between the data producers and the data consumers without relying on a centralized server or a",
    "start": "456319",
    "end": "462039"
  },
  {
    "text": "broker and it reduces bottlenecks um and and enhances system reliability so that your system cannot",
    "start": "462039",
    "end": "468759"
  },
  {
    "text": "be you know uh affected by by the loss of of of one or more Brokers that are",
    "start": "468759",
    "end": "473840"
  },
  {
    "text": "that are in charge of of managing the data so DDS is Loosely coupled which",
    "start": "473840",
    "end": "479080"
  },
  {
    "text": "means means that components can interact independently without prior knowledge of each other and this kind of architecture",
    "start": "479080",
    "end": "485000"
  },
  {
    "text": "promotes flexibility and adaptability um so that you know DDS is is optimally",
    "start": "485000",
    "end": "490520"
  },
  {
    "text": "useful for um complex distributed systems so I also want to note here that",
    "start": "490520",
    "end": "496000"
  },
  {
    "text": "the rtps standard um actually includes the wire protocol for DDS which is which is called the common data representation",
    "start": "496000",
    "end": "502840"
  },
  {
    "text": "or or CDR uh serialization format and that specifies how data is transmitted",
    "start": "502840",
    "end": "508960"
  },
  {
    "text": "between between the producers and the consumers and so the end result here is that we can achieve the key benefit of",
    "start": "508960",
    "end": "515719"
  },
  {
    "text": "interoperability um between producers and consumers that are located on like vastly different platforms um and",
    "start": "515719",
    "end": "523039"
  },
  {
    "text": "transport so you can have you know people running on a a really a plethora of different architectures and still",
    "start": "523039",
    "end": "529080"
  },
  {
    "text": "able to exchange data using this this common uh wire protocol",
    "start": "529080",
    "end": "535519"
  },
  {
    "text": "mechanism uh so the final uh key feature here that we wanted to highlight here is",
    "start": "536480",
    "end": "541760"
  },
  {
    "text": "that DDS offers a very granular quality of service configurability um and that",
    "start": "541760",
    "end": "548200"
  },
  {
    "text": "configuration can be done per individual data flow so per uh you know individual data flows from uh within uh specific",
    "start": "548200",
    "end": "556560"
  },
  {
    "text": "producers and consumers and four specific data types that that make up that that shared data space so this",
    "start": "556560",
    "end": "563480"
  },
  {
    "text": "allows users to tailor communication parameters like reliability latency resource uses uh resource usage for",
    "start": "563480",
    "end": "571120"
  },
  {
    "text": "individual data streams so by customizing the qos for each data flow DDS can optimize the resource",
    "start": "571120",
    "end": "578720"
  },
  {
    "text": "allocation and network efficiency so for example you know you can send uh critical data at with a really high",
    "start": "578720",
    "end": "586800"
  },
  {
    "text": "reliability setting and uh and optimized for very very low latencies while you",
    "start": "586800",
    "end": "592480"
  },
  {
    "text": "know less critical data you can you can set those configuration parameters a little bit more Loosely so that um you",
    "start": "592480",
    "end": "598760"
  },
  {
    "text": "know you might not need that same stringent level of reliability or those same latency",
    "start": "598760",
    "end": "604920"
  },
  {
    "text": "guarantees and uh this kind of flexibility ensures the DDS can adapt to",
    "start": "604920",
    "end": "610760"
  },
  {
    "text": "a variety of different requirements for real-time systems um which you know",
    "start": "610760",
    "end": "616000"
  },
  {
    "text": "which which can which can vary widely um depending on on what domain you happen to be deploying to so one one way um of",
    "start": "616000",
    "end": "624320"
  },
  {
    "text": "thinking about the kinds of qos that that you can configure in in DDS is is in terms of the the cap theorem so you",
    "start": "624320",
    "end": "632959"
  },
  {
    "text": "can optimize for message delivery you can optimize for consistency and Andor",
    "start": "632959",
    "end": "638000"
  },
  {
    "text": "you know availability too so you can you can kind of tune uh your configuration parameters to to kind of optimize you",
    "start": "638000",
    "end": "644720"
  },
  {
    "text": "know based on uh the the types of guarantees um offered in each of these areas and",
    "start": "644720",
    "end": "653079"
  },
  {
    "text": "again it's important to note that there you know I mean this is kind of the real world so there are going to be trade-offs right you know you're always",
    "start": "653079",
    "end": "658800"
  },
  {
    "text": "going to have to make tradeoffs between between the the the different types of guarantees that you want to enforce um",
    "start": "658800",
    "end": "665920"
  },
  {
    "text": "but the nice thing about DDS is it is it offers a lot of very fine grained uh",
    "start": "665920",
    "end": "671000"
  },
  {
    "text": "tunables so that you can really um ensure that that you're getting the exact type of performance guarantees",
    "start": "671000",
    "end": "677959"
  },
  {
    "text": "that that that you need all right so to summarize uh DDS",
    "start": "677959",
    "end": "684560"
  },
  {
    "text": "offers a powerful framework for the edge cloud with a range of benefits um so the",
    "start": "684560",
    "end": "690160"
  },
  {
    "text": "the first one is uh customized reliability so DDS can accommodate situation uh specific tradeoffs um so as",
    "start": "690160",
    "end": "697360"
  },
  {
    "text": "we were just saying we can we can allow for very um we can allow for very fine",
    "start": "697360",
    "end": "702399"
  },
  {
    "text": "grain tuning of reliability resource utilization and determinism and based on",
    "start": "702399",
    "end": "708040"
  },
  {
    "text": "specific requirements um it allows you to uh set up mechanisms for efficient",
    "start": "708040",
    "end": "714160"
  },
  {
    "text": "data transfer so you can set things up like sender side filtering to limit the amount of data",
    "start": "714160",
    "end": "719800"
  },
  {
    "text": "that's actually getting put um on The Wire um DDS also enables eventual",
    "start": "719800",
    "end": "727120"
  },
  {
    "text": "consistency um but but but in this environment eventual consistency actually uh takes place within the um",
    "start": "727120",
    "end": "735560"
  },
  {
    "text": "within the the timing requirements needed for real-time systems so when we're talking about achieving eventual",
    "start": "735560",
    "end": "741079"
  },
  {
    "text": "consistency across all subscribers for a given set of data we're talking about a",
    "start": "741079",
    "end": "746639"
  },
  {
    "text": "consistency that's achieved within micros seconds um you know so so that so",
    "start": "746639",
    "end": "751680"
  },
  {
    "text": "that's really the the kind of of of time scale that that we're that we're talking about the the eventual consistency",
    "start": "751680",
    "end": "757920"
  },
  {
    "text": "guarantees um you know being being achieved in and then uh",
    "start": "757920",
    "end": "763880"
  },
  {
    "text": "finally data model Evolution so the DDS type system supports the definition and",
    "start": "763880",
    "end": "769639"
  },
  {
    "text": "and evolution of data models over time while maintaining interoperability so uh we saw earlier that that there was a",
    "start": "769639",
    "end": "776240"
  },
  {
    "text": "type extensibility standard so uh so as a part of that standard the DDS type system can actually be evolved um within",
    "start": "776240",
    "end": "785320"
  },
  {
    "text": "within a a deployed environment so that um you know new applications can evolve",
    "start": "785320",
    "end": "790920"
  },
  {
    "text": "to using new types Without Really disrupting any Legacy applications that that that need to be",
    "start": "790920",
    "end": "798560"
  },
  {
    "text": "maintained so it was It was kind of our expectation um you know that that not",
    "start": "799000",
    "end": "804760"
  },
  {
    "text": "too many people in this audience um would be familiar with with Duds we were were pleasantly surprised a little while",
    "start": "804760",
    "end": "811320"
  },
  {
    "text": "ago to to find that that there there might be at least a few people who who are a bit familiar um but to to to kind",
    "start": "811320",
    "end": "819000"
  },
  {
    "text": "of help um maybe drive home some some of the points that that we were talking about we we just wanted to offer a uh",
    "start": "819000",
    "end": "826399"
  },
  {
    "text": "comparison Exemplar between uh DDS and Apache kfka which which some of you",
    "start": "826399",
    "end": "831480"
  },
  {
    "text": "might be a little bit more uh familiar with so at at a high level right if if",
    "start": "831480",
    "end": "836759"
  },
  {
    "text": "we're kind of doing this this side by side DDS is designed for realtime",
    "start": "836759",
    "end": "842079"
  },
  {
    "text": "applications uh providing determinism and it provides this like findra quality of service uh you know",
    "start": "842079",
    "end": "849320"
  },
  {
    "text": "configurability in contrast kka kofka is optimized for high throughput streaming data and log based data streams and it's",
    "start": "849320",
    "end": "856639"
  },
  {
    "text": "commonly used for like a lot of analytics uh applications and it's used for a lot of data",
    "start": "856639",
    "end": "861759"
  },
  {
    "text": "integration so the Kafka architecture is cluster based um and it requires producers and consumers to interact with",
    "start": "861759",
    "end": "868759"
  },
  {
    "text": "with the central broker uh DDS is brokerless so all the interactions are are peer-to-peer as as we were just uh",
    "start": "868759",
    "end": "875959"
  },
  {
    "text": "discussing DDS supports both the published subscribe and the request",
    "start": "875959",
    "end": "881079"
  },
  {
    "text": "reply model and Kafka is primarily uh published subscribe kfka runs over TCP DDS is",
    "start": "881079",
    "end": "888800"
  },
  {
    "text": "actually transport independent um and it can run over UDP and um and and most recently there's",
    "start": "888800",
    "end": "895920"
  },
  {
    "text": "there's actually a spec in place for time sensitive networking um which is which is a a realtime uh",
    "start": "895920",
    "end": "901360"
  },
  {
    "text": "networking protocol um so so so uh for latency critical applications you can",
    "start": "901360",
    "end": "906720"
  },
  {
    "text": "actually run over um the these other these other protocols as",
    "start": "906720",
    "end": "911959"
  },
  {
    "text": "well um and finally kfka is agnostic to the type system um whereas part of the",
    "start": "911959",
    "end": "919240"
  },
  {
    "text": "definition of DDS actually includes uh the the the type system as a part of the",
    "start": "919240",
    "end": "924720"
  },
  {
    "text": "protocol and that type system is what's used to define the global data space that that we were that we were talking",
    "start": "924720",
    "end": "930120"
  },
  {
    "text": "about earlier so just just to give a little",
    "start": "930120",
    "end": "938040"
  },
  {
    "text": "bit of context and and and to kind of you know um show a you know kind of a",
    "start": "938040",
    "end": "943240"
  },
  {
    "text": "real world uh or a couple of real world use cases for how for how DDS is is used",
    "start": "943240",
    "end": "949120"
  },
  {
    "text": "um we're going to go through uh a couple of uh usage scenarios uh for DDS so the",
    "start": "949120",
    "end": "955279"
  },
  {
    "text": "so the first is what we're going to be looking at at um an autonomous driving you know",
    "start": "955279",
    "end": "961079"
  },
  {
    "text": "type of of application so in this scenario the DDS layer data bus is uh is",
    "start": "961079",
    "end": "968000"
  },
  {
    "text": "used for the vehicle control system and so we can see the structure",
    "start": "968000",
    "end": "973360"
  },
  {
    "text": "has uh you know a few distinct layers here so the first layer you know kind of in the green box there is the sensor and",
    "start": "973360",
    "end": "980759"
  },
  {
    "text": "Sensor Fusion layer so at that lowest level the various sensors uh sensors like the lar the radar um the cameras",
    "start": "980759",
    "end": "988720"
  },
  {
    "text": "Etc uh are actually collecting the real-time data uh about the vehicle surroundings and doing things like",
    "start": "988720",
    "end": "995279"
  },
  {
    "text": "object detection uh you know looking at road conditions traffic information stuff like that so so so there's kind of",
    "start": "995279",
    "end": "1001519"
  },
  {
    "text": "the the the sensing layer of the data bus then there's the controls layer which is kind of that middle layer which",
    "start": "1001519",
    "end": "1007319"
  },
  {
    "text": "is that first orange arrow there and that acts as like the brain of the",
    "start": "1007319",
    "end": "1012839"
  },
  {
    "text": "vehicle so at that layer there's um aggregation that's that's going on that",
    "start": "1012839",
    "end": "1018680"
  },
  {
    "text": "is enabling uh decision-making components like situation awareness and vehicle control so so you kind of have",
    "start": "1018680",
    "end": "1024319"
  },
  {
    "text": "that at like the middle layer so you can kind of think that as as the The Edge Cloud uh type layer in this in this",
    "start": "1024319",
    "end": "1032160"
  },
  {
    "text": "scenario and then finally there's the connectivity layer so it's that top Cloud layer um up up uh you know up up",
    "start": "1032160",
    "end": "1040558"
  },
  {
    "text": "on the upper uh right hand side and that layer implements connectivity and reach back to off vehicle data sources uh for",
    "start": "1040559",
    "end": "1048438"
  },
  {
    "text": "functions like traffic management Maps um things like that so a key point to",
    "start": "1048439",
    "end": "1054080"
  },
  {
    "text": "note here though is this green arrow along the left hand side and that's that",
    "start": "1054080",
    "end": "1059240"
  },
  {
    "text": "there's a single shared data model and again you know kind of kind of going back to that shared global data space so",
    "start": "1059240",
    "end": "1065919"
  },
  {
    "text": "there's a single share data model that spans all of the different layers here so that you don't need to do any uh data",
    "start": "1065919",
    "end": "1073799"
  },
  {
    "text": "or protocol translations as you're going up through the different layers so from The Edge layer up to the edge Cloud",
    "start": "1073799",
    "end": "1080240"
  },
  {
    "text": "layer up to the you know top layer uh in the cloud you really you know have a",
    "start": "1080240",
    "end": "1085559"
  },
  {
    "text": "consistent set of data structures which which makes the the architecture um blend seamlessly",
    "start": "1085559",
    "end": "1093120"
  },
  {
    "text": "together so the the Second Use case um and it and it follows kind of a very",
    "start": "1094000",
    "end": "1099640"
  },
  {
    "text": "similar pattern to the to the first one is from the medical uh industrial internet of things or iot domain so here",
    "start": "1099640",
    "end": "1107000"
  },
  {
    "text": "again you know you kind of see the the same uh layer datab bus architecture and you see at the very lowest level you",
    "start": "1107000",
    "end": "1113200"
  },
  {
    "text": "have the devices within a given hospital room so you have the the given sensors um and monitoring equipment within the",
    "start": "1113200",
    "end": "1121200"
  },
  {
    "text": "uh you know within a given hospital room and then that gets aggregated up to the",
    "start": "1121200",
    "end": "1126480"
  },
  {
    "text": "higher level um hospital system so it might be like a hospital Ward or like a nurses station so that's kind of your Edge",
    "start": "1126480",
    "end": "1133360"
  },
  {
    "text": "Cloud layer there and then finally at the top layer you have your cloud or data Center layer where there's a higher",
    "start": "1133360",
    "end": "1140840"
  },
  {
    "text": "level of data aggregation happening and you know you have maybe your data lakes or your like long-term data storage",
    "start": "1140840",
    "end": "1147080"
  },
  {
    "text": "actually attached to that top layer and once again we see that there is this single unified data model that's",
    "start": "1147080",
    "end": "1152919"
  },
  {
    "text": "actually spanning all those layers so you don't need to waste time in processing doing a lot of of data",
    "start": "1152919",
    "end": "1158520"
  },
  {
    "text": "translations data mappings or protocol translations um so at this point I am",
    "start": "1158520",
    "end": "1166360"
  },
  {
    "text": "actually going to hand off to kungo talk more about DDS performance yeah thank you",
    "start": "1166360",
    "end": "1173520"
  },
  {
    "text": "pra yeah so uh from this slide i' like to um introduce some of the DDS",
    "start": "1173520",
    "end": "1179520"
  },
  {
    "text": "performance number that we measured in the edge and Cloud environments and uh I",
    "start": "1179520",
    "end": "1185840"
  },
  {
    "text": "believe these numbers are uh going to provide some of the insights into uh expected performance that you can",
    "start": "1185840",
    "end": "1192960"
  },
  {
    "text": "achieve when uh deploying TDS applications in such environments so we actually offer a",
    "start": "1192960",
    "end": "1200799"
  },
  {
    "text": "performance testing tool called a perf test uh for users to assess DDS performance within their own",
    "start": "1200799",
    "end": "1207320"
  },
  {
    "text": "environments and this tool evaluates two critical performance metrics uh",
    "start": "1207320",
    "end": "1212360"
  },
  {
    "text": "throughput and latency and uh we actually use this Tool uh for our",
    "start": "1212360",
    "end": "1218000"
  },
  {
    "text": "performance experiments to measure the latency numbers and one challenge we encounter uh when we measure the you",
    "start": "1218000",
    "end": "1225840"
  },
  {
    "text": "know performance in a distributed environment is the clock time uh variance across the different machines",
    "start": "1225840",
    "end": "1232799"
  },
  {
    "text": "and this variability can significantly impact uh latency number especially",
    "start": "1232799",
    "end": "1238280"
  },
  {
    "text": "latency number is in a micro you know microsc range so that to uh address this",
    "start": "1238280",
    "end": "1244320"
  },
  {
    "text": "issue um this tool is actually calculates a round robing uh sorry round",
    "start": "1244320",
    "end": "1249760"
  },
  {
    "text": "trip uh latency and then uh divided that in half to uh derive the one-way latency",
    "start": "1249760",
    "end": "1257400"
  },
  {
    "text": "uh which actually providing a more accurate representation of uh latency experience in the",
    "start": "1257400",
    "end": "1264799"
  },
  {
    "text": "network so we um conducted performance measurements with uh kubernetes to gain",
    "start": "1265960",
    "end": "1272120"
  },
  {
    "text": "insights into how uh containerization and uh virtual networks",
    "start": "1272120",
    "end": "1277760"
  },
  {
    "text": "impact uh realtime applications our approach was uh deploying per test",
    "start": "1277760",
    "end": "1283760"
  },
  {
    "text": "application in a kuber ntic cluster and um before jumping into the performance",
    "start": "1283760",
    "end": "1289919"
  },
  {
    "text": "numbers I just want to give you some idea of how DDS operates and how we",
    "start": "1289919",
    "end": "1295360"
  },
  {
    "text": "measure DDS performance in this environment so DDS by default operates on uh publish And subscribe messaging",
    "start": "1295360",
    "end": "1302760"
  },
  {
    "text": "pattern uh and to measure the performance uh we deploy publisher pod",
    "start": "1302760",
    "end": "1308240"
  },
  {
    "text": "and subscriber pod and measured uh message from a Publishers to subscribe",
    "start": "1308240",
    "end": "1313679"
  },
  {
    "text": "uh to get the latency number and as pra mentioned it it is important to note",
    "start": "1313679",
    "end": "1319279"
  },
  {
    "text": "that DDS is fully decentralized peer-to-peer uh architecture so that",
    "start": "1319279",
    "end": "1324799"
  },
  {
    "text": "there's no brokers in between uh between publisher and subscribers and so that we",
    "start": "1324799",
    "end": "1330760"
  },
  {
    "text": "we don't need to deploy additional component uh for communications between the subscriber and a publish and",
    "start": "1330760",
    "end": "1336120"
  },
  {
    "text": "subscriber they directly communicating each other and DDS uh utilizes multi for",
    "start": "1336120",
    "end": "1342679"
  },
  {
    "text": "its built-in uh Discovery but most of kubernetes cnis do not support support",
    "start": "1342679",
    "end": "1349120"
  },
  {
    "text": "multicast so that to um resolve this issues uh we need to deploy a component",
    "start": "1349120",
    "end": "1354720"
  },
  {
    "text": "called the cloud Discovery service which is going to provide a discovery for you know publish and subscriber applications",
    "start": "1354720",
    "end": "1361200"
  },
  {
    "text": "to you know discover each other and communicating uh each other but after you know Discovery phase is done they",
    "start": "1361200",
    "end": "1367679"
  },
  {
    "text": "communicating directly each other peer-to-peer but uh to access this Cloud",
    "start": "1367679",
    "end": "1372760"
  },
  {
    "text": "Discovery Service uh we needed to create a cluster IP Service uh for perf test application to access uh Cloud Discovery",
    "start": "1372760",
    "end": "1382240"
  },
  {
    "text": "service and then the last one that I want to talk about is that we use node label for uh the experiments because you",
    "start": "1382880",
    "end": "1390679"
  },
  {
    "text": "know we uh want to uh we don't want to deploy publish And subscribe uh",
    "start": "1390679",
    "end": "1396480"
  },
  {
    "text": "applications on the same node because we want to measure the performance over Network so that we assigned uh different",
    "start": "1396480",
    "end": "1402559"
  },
  {
    "text": "node labels uh to uh deploy it in the different machines",
    "start": "1402559",
    "end": "1409880"
  },
  {
    "text": "so from here I would like to talk about the performance uh me uh measurements in",
    "start": "1410000",
    "end": "1415799"
  },
  {
    "text": "uh three different environments first uh performance uh at the edge uh with bare",
    "start": "1415799",
    "end": "1422240"
  },
  {
    "text": "metal servers and then second is uh uh performance numbers in the edge with",
    "start": "1422240",
    "end": "1428760"
  },
  {
    "text": "kubernetes and the last one is uh cloud with the kubernetes so let's uh first",
    "start": "1428760",
    "end": "1434480"
  },
  {
    "text": "let's begin uh by looking at the performance number from the edge with bare metal servers uh which actually",
    "start": "1434480",
    "end": "1441480"
  },
  {
    "text": "specifically located in the RTI office in California uh for all experiments we",
    "start": "1441480",
    "end": "1447360"
  },
  {
    "text": "measured um median latency uh while changing two different uh parameters the",
    "start": "1447360",
    "end": "1453400"
  },
  {
    "text": "first one is sample size uh ranging from a small 64 bytes uh to the large like a",
    "start": "1453400",
    "end": "1459840"
  },
  {
    "text": "63 kilobytes uh sample and then different quality of service settings uh",
    "start": "1459840",
    "end": "1466159"
  },
  {
    "text": "reliable and best effort uh so DDS by default is operating over UDP it does not provide uh you know",
    "start": "1466159",
    "end": "1473799"
  },
  {
    "text": "reliability of the message transmission but DDS implemented reliable uh reliability reliable protocols on top so",
    "start": "1473799",
    "end": "1481360"
  },
  {
    "text": "that for users to decide you know if they want to reliably sending a message",
    "start": "1481360",
    "end": "1486440"
  },
  {
    "text": "they can do otherwise they can do a best effort as the data shows uh DDS delivers",
    "start": "1486440",
    "end": "1494240"
  },
  {
    "text": "uh incredibly low latency with small message sizes you know we're seeing latency as low as like 20 microc seconds",
    "start": "1494240",
    "end": "1502120"
  },
  {
    "text": "and uh even with the large message sizes like it's around like 180 microc for",
    "start": "1502120",
    "end": "1507360"
  },
  {
    "text": "both best effort and reliable continuing our um performance",
    "start": "1507360",
    "end": "1514640"
  },
  {
    "text": "evaluation Journey we shifted our focus into the uh same H server but using uh",
    "start": "1514640",
    "end": "1521760"
  },
  {
    "text": "kubernetes with Calico as uh the cni and we use the default setting of Calico",
    "start": "1521760",
    "end": "1527240"
  },
  {
    "text": "here and the results uh provided insights into the impact of container",
    "start": "1527240",
    "end": "1532760"
  },
  {
    "text": "orchestration at the edge and uh incorporating kubernetes with Calico uh cni we observe a slight",
    "start": "1532760",
    "end": "1540679"
  },
  {
    "text": "increase in medium latency uh when compared to the bare metal servers uh in",
    "start": "1540679",
    "end": "1545960"
  },
  {
    "text": "the previous slide for small message uh latency is around like a 30 microc and",
    "start": "1545960",
    "end": "1552640"
  },
  {
    "text": "uh for large message sizes it is extended to uh around like uh 300",
    "start": "1552640",
    "end": "1560120"
  },
  {
    "text": "microc Let's uh let's now take a look at a plot that draws a comparison uh",
    "start": "1560360",
    "end": "1566279"
  },
  {
    "text": "between the performance of bareal servers and kubernetes and this comparison uh reveals that how kuber",
    "start": "1566279",
    "end": "1574200"
  },
  {
    "text": "netti particularly like virtual networks uh introduce uh different degrees of",
    "start": "1574200",
    "end": "1580320"
  },
  {
    "text": "overhead depending on the message size and kuber netti with virtual networks",
    "start": "1580320",
    "end": "1585399"
  },
  {
    "text": "introduces a modest overhead uh especially for small messages uh where the difference in latency is",
    "start": "1585399",
    "end": "1592720"
  },
  {
    "text": "around like a 10 microc seconds uh compared to the bare metal servers and this indicates that um it is well suited",
    "start": "1592720",
    "end": "1601279"
  },
  {
    "text": "for small messages uh like a command and control type of message which typically",
    "start": "1601279",
    "end": "1606360"
  },
  {
    "text": "folds it into a small size and uh however it is important to note that as",
    "start": "1606360",
    "end": "1613360"
  },
  {
    "text": "message size grows the absolute latency uh difference becomes more",
    "start": "1613360",
    "end": "1618880"
  },
  {
    "text": "noticeable um for larger messages there is indeed measurable um overhead with",
    "start": "1618880",
    "end": "1625000"
  },
  {
    "text": "kubernetes um even so this uh overhead um remains below 300 microc uh this",
    "start": "1625000",
    "end": "1631799"
  },
  {
    "text": "means that you know even for large messages uh I think kuber netti remains a viable options uh you know providing",
    "start": "1631799",
    "end": "1638760"
  },
  {
    "text": "uh acceptable performance lastly uh let's uh let's",
    "start": "1638760",
    "end": "1645960"
  },
  {
    "text": "look at um you know cloud en environments spe uh specifically uh that",
    "start": "1645960",
    "end": "1651320"
  },
  {
    "text": "we uh we used um AWS elastic kubernetes service",
    "start": "1651320",
    "end": "1657279"
  },
  {
    "text": "eks and in this scenario we um anticipated certain changes as Cloud you",
    "start": "1657279",
    "end": "1664240"
  },
  {
    "text": "know environments often introduce more overhead because uh you know it is shared resources and also additional",
    "start": "1664240",
    "end": "1671559"
  },
  {
    "text": "virtualization layers so for small messages we observe a latency of",
    "start": "1671559",
    "end": "1677000"
  },
  {
    "text": "approximately 230 microc and while for larger messages the Laten increased to",
    "start": "1677000",
    "end": "1683399"
  },
  {
    "text": "around 700 to 800 micr seconds now uh let's uh take a look at",
    "start": "1683399",
    "end": "1691000"
  },
  {
    "text": "the comparison of performance between the edge and the cloud environments uh but both uh using kuet",
    "start": "1691000",
    "end": "1699080"
  },
  {
    "text": "in this case uh as the graph shows the performance difference is quite",
    "start": "1699080",
    "end": "1705159"
  },
  {
    "text": "significant um however you know the variation is uh in line with what we",
    "start": "1705159",
    "end": "1710440"
  },
  {
    "text": "expected given the inherent difference between you know Edge and the cloud um uh it is important note that we",
    "start": "1710440",
    "end": "1718519"
  },
  {
    "text": "connected this uh test on T2 small instances that means it's definitely",
    "start": "1718519",
    "end": "1724960"
  },
  {
    "text": "there's a room for uh you know improvements with larger and dedicated",
    "start": "1724960",
    "end": "1731320"
  },
  {
    "text": "instances so here just you know the key thing we want to you know talk about is that we provide a you know performance",
    "start": "1731320",
    "end": "1737640"
  },
  {
    "text": "tool as I mentioned that helps you uh to gauge the expected performance in your",
    "start": "1737640",
    "end": "1743159"
  },
  {
    "text": "own environments and this Tool uh serve as a very useful resource uh for",
    "start": "1743159",
    "end": "1748720"
  },
  {
    "text": "understanding how DDS you know will perform in your specific setting taking a closer look at this",
    "start": "1748720",
    "end": "1756480"
  },
  {
    "text": "graph um you'll notice that the best effort latency uh is uh tends to be higher than",
    "start": "1756480",
    "end": "1765600"
  },
  {
    "text": "uh reliable latency interestingly as I mentioned you know reliable uh QA",
    "start": "1765600",
    "end": "1771000"
  },
  {
    "text": "setting you need to do additional kind of work you know just to make sure your messages is delivering reliably you know",
    "start": "1771000",
    "end": "1778559"
  },
  {
    "text": "just by sending a heartbit or E neck messages but interesting for large",
    "start": "1778559",
    "end": "1783760"
  },
  {
    "text": "message side like a 16k and 163k messages best for um you know latency",
    "start": "1783760",
    "end": "1789679"
  },
  {
    "text": "High because we actually use the DDS fragmentation feature here uh we actually selectively apply this DDS",
    "start": "1789679",
    "end": "1797000"
  },
  {
    "text": "fragment M mentation uh for Reliable setting and and then the message size is larger than",
    "start": "1797000",
    "end": "1803880"
  },
  {
    "text": "the MTU size which is which is around 9,000 in AWS um so the reason why I",
    "start": "1803880",
    "end": "1811080"
  },
  {
    "text": "apply this is that we we could see some of the high latency when the message",
    "start": "1811080",
    "end": "1816600"
  },
  {
    "text": "size is higher than MTU size in AWS so that we um we apply this features so",
    "start": "1816600",
    "end": "1822279"
  },
  {
    "text": "that DDS is fragmenting the messages instead of relying on the IP fragmentations under Hood so so that",
    "start": "1822279",
    "end": "1829640"
  },
  {
    "text": "yeah we could see that incorporation of DDS fragmentation generating a substantial like performance",
    "start": "1829640",
    "end": "1835480"
  },
  {
    "text": "improvements",
    "start": "1835480",
    "end": "1838158"
  },
  {
    "text": "here so this is actually all we have today and uh I want to wrap up uh these",
    "start": "1842440",
    "end": "1850159"
  },
  {
    "text": "presentations with this two questions that would guide us to our next step um",
    "start": "1850159",
    "end": "1856440"
  },
  {
    "text": "so as we presented today DDS uh uh standard support data Centric and uh",
    "start": "1856440",
    "end": "1863000"
  },
  {
    "text": "peer-to-peer Communications offer incredibly low latency for realtime use",
    "start": "1863000",
    "end": "1868600"
  },
  {
    "text": "cases and it is a wellestablished like connectivity communication technology",
    "start": "1868600",
    "end": "1873720"
  },
  {
    "text": "for the edge uh while it has found its place in the edge we would like to",
    "start": "1873720",
    "end": "1879840"
  },
  {
    "text": "explore um you know potential needs and benefits of extending its capabilities",
    "start": "1879840",
    "end": "1885679"
  },
  {
    "text": "into the cloud environments uh you know as an example you know we can look into",
    "start": "1885679",
    "end": "1890760"
  },
  {
    "text": "like Cloud native extensions for DDS and these extensions could uh enable DDS to",
    "start": "1890760",
    "end": "1897360"
  },
  {
    "text": "seamlessly integrate into Cloud native architectures for applications require",
    "start": "1897360",
    "end": "1902760"
  },
  {
    "text": "low latency and realtime communication uh requirements and so here like we're",
    "start": "1902760",
    "end": "1909399"
  },
  {
    "text": "really looking forward to hearing uh from you about any kind of you know",
    "start": "1909399",
    "end": "1914600"
  },
  {
    "text": "Cloud use cases that require low lat Y and realtime",
    "start": "1914600",
    "end": "1920440"
  },
  {
    "text": "Communications thank you for joining us today and we look forward to uh the",
    "start": "1921200",
    "end": "1926679"
  },
  {
    "text": "insightful discussions and collaborations ahead and if you have any questions or feedback please use this QR",
    "start": "1926679",
    "end": "1932960"
  },
  {
    "text": "code to leave uh leave leave them thank [Applause]",
    "start": "1932960",
    "end": "1940470"
  },
  {
    "text": "you yeah I think we can take questions now yep",
    "start": "1943200",
    "end": "1949080"
  },
  {
    "text": "than uh thanks for the talk so I'm Tom with Sony uh by the way I'm uh the",
    "start": "1954399",
    "end": "1959799"
  },
  {
    "text": "member of the TSC for Robot Operating System and I got a question about as you",
    "start": "1959799",
    "end": "1965000"
  },
  {
    "text": "mentioned about cni implementation most likely doesn't support multicast because it's uh generates the different problem",
    "start": "1965000",
    "end": "1972720"
  },
  {
    "text": "to unnecessary packets to you know using a multicast are you guys is working on",
    "start": "1972720",
    "end": "1977880"
  },
  {
    "text": "with some like a cni implementation to enable multicast so are you asking we are aware",
    "start": "1977880",
    "end": "1984919"
  },
  {
    "text": "of any cnis supporting multicast no are you guys working on",
    "start": "1984919",
    "end": "1991080"
  },
  {
    "text": "specific cni implementation to enable Mast as far as I know the we War weet",
    "start": "1991080",
    "end": "1997120"
  },
  {
    "text": "used to used to be right okay but it's EOL now for the open source project right right right I'm working for the",
    "start": "1997120",
    "end": "2004559"
  },
  {
    "text": "cni that works with multicast yeah so we typic we don't work on like",
    "start": "2004559",
    "end": "2010320"
  },
  {
    "text": "our own cni implementation but we recommend you know some of the cni that to support multicast like you mentioned",
    "start": "2010320",
    "end": "2017200"
  },
  {
    "text": "weet or others so if they want to use multicast for Discovery and also for",
    "start": "2017200",
    "end": "2023159"
  },
  {
    "text": "user data if they want to that's what we do now uh but I don't we don't have any",
    "start": "2023159",
    "end": "2028480"
  },
  {
    "text": "kind of plan that we kind of develop kind of our own kind of cni to support multicast yeah okay thank you yeah",
    "start": "2028480",
    "end": "2035960"
  },
  {
    "text": "thanks hi um so if I've got you know some",
    "start": "2035960",
    "end": "2042440"
  },
  {
    "text": "objects out in the real world and then I want to you know potentially send that",
    "start": "2042440",
    "end": "2048240"
  },
  {
    "text": "data back to like a cloud provider to you know make some very quick real-time decisions on it like what",
    "start": "2048240",
    "end": "2054520"
  },
  {
    "text": "what the the diagrams of you know like you have a relay where one datab bus",
    "start": "2054520",
    "end": "2059839"
  },
  {
    "text": "plugs into another one what what sort of latency are we looking at between those two",
    "start": "2059839",
    "end": "2065240"
  },
  {
    "text": "points yeah so so I I think I think that that kind of you know it is it is situation",
    "start": "2065240",
    "end": "2072638"
  },
  {
    "text": "specific um I and I and I think some some of the benchmarks that that we've done um and and those were between the",
    "start": "2072639",
    "end": "2080480"
  },
  {
    "text": "offices in California going up to you know like like Amazon environments were on the order of I mean still below a",
    "start": "2080480",
    "end": "2088240"
  },
  {
    "text": "millisecond but on the order of like a few hundred microsc so so so it's it's it's those levels of of latency nice",
    "start": "2088240",
    "end": "2094839"
  },
  {
    "text": "okay so so still within the the micros range but not in like the tens of microsc maybe yeah awesome",
    "start": "2094839",
    "end": "2103079"
  },
  {
    "text": "thanks hello M Martinez John Deere ER",
    "start": "2103079",
    "end": "2108400"
  },
  {
    "text": "first time hearing about the specification I'm interested to know H to if you know about adopting canos as a",
    "start": "2108400",
    "end": "2117520"
  },
  {
    "text": "as as part of the protocols that DDS supports maybe it's a question for the",
    "start": "2117520",
    "end": "2122640"
  },
  {
    "text": "specification itself but I'm not sure if you know about",
    "start": "2122640",
    "end": "2128800"
  },
  {
    "text": "uh I think like uh you know some of our like users in the automotive uh you know",
    "start": "2129560",
    "end": "2135839"
  },
  {
    "text": "uh space they're using canvas and they're adopting DDS as well so that uh",
    "start": "2135839",
    "end": "2142800"
  },
  {
    "text": "um instead of like adopting canas as part of DDS you know maybe we can kind of look into kind of Gateway so that if",
    "start": "2142800",
    "end": "2149760"
  },
  {
    "text": "you want to convert in kind of canas data into DDS space and vice versa that might be a kind of way to go if you",
    "start": "2149760",
    "end": "2155839"
  },
  {
    "text": "already have system running out you know over canas but in addition you want to",
    "start": "2155839",
    "end": "2161440"
  },
  {
    "text": "do more kind of additional more complicated things like autonomous uh",
    "start": "2161440",
    "end": "2166560"
  },
  {
    "text": "you know driving logic and you can develop DDS and then you can have that kind of gateway to get the data from the",
    "start": "2166560",
    "end": "2172359"
  },
  {
    "text": "canas and vice versa yeah yeah thank you well maybe I didn't get the",
    "start": "2172359",
    "end": "2180920"
  },
  {
    "text": "comment my understanding is we need to do a layer between cambos and",
    "start": "2180920",
    "end": "2187240"
  },
  {
    "text": "specification right so we can adapt it yeah and also we are part of the osar uh community so that um I can just",
    "start": "2187240",
    "end": "2196440"
  },
  {
    "text": "provide you uh you know kind of specific things that we are do in our TI regarding automotive and canas yeah yeah",
    "start": "2196440",
    "end": "2204319"
  },
  {
    "text": "thank you yep hi I'm Abe from HP we we have some",
    "start": "2204319",
    "end": "2209560"
  },
  {
    "text": "customers in the automotive domain where um the subject of latency does come up now looking at your performance charts",
    "start": "2209560",
    "end": "2216160"
  },
  {
    "text": "where uh for the larger packets it showed that on kubernetes the latency was about double the bare metal scenario",
    "start": "2216160",
    "end": "2223079"
  },
  {
    "text": "have you considered uh introducing a way to uh artificially add latency so people",
    "start": "2223079",
    "end": "2229000"
  },
  {
    "text": "can tell at what point they need to start getting worried about latency like",
    "start": "2229000",
    "end": "2234480"
  },
  {
    "text": "um you know it could be that 300 milliseconds latency versus 150 is",
    "start": "2234480",
    "end": "2239800"
  },
  {
    "text": "critical to the application or it could not be an issue at all so how do people know when to you know what what order of",
    "start": "2239800",
    "end": "2246680"
  },
  {
    "text": "magnitude of latency starts being a problem for them oh so I I I I think I",
    "start": "2246680",
    "end": "2252720"
  },
  {
    "text": "think that's that's kind of um situation dependent so so uh there there",
    "start": "2252720",
    "end": "2258440"
  },
  {
    "text": "are um metrics that that can be recorded so so there are statistics that are",
    "start": "2258440",
    "end": "2264640"
  },
  {
    "text": "actually part of the of the protocol so you can actually gather those latency statistics um so that you know all that",
    "start": "2264640",
    "end": "2271640"
  },
  {
    "text": "all that information like like all of the uh statistics around not only",
    "start": "2271640",
    "end": "2276720"
  },
  {
    "text": "latency but also around like loss messages uh you know if if there are like a you know like ACAC types of",
    "start": "2276720",
    "end": "2283480"
  },
  {
    "text": "Statistics um all that is actually provided by the protocol that can be recorded that people can um actually put",
    "start": "2283480",
    "end": "2290200"
  },
  {
    "text": "like thresholds on to indicate whether or not there's there's a there's a critical condition or like a warning",
    "start": "2290200",
    "end": "2296240"
  },
  {
    "text": "level that that that that needs to be addressed so yeah th those those those things are all are all kind of part of",
    "start": "2296240",
    "end": "2302160"
  },
  {
    "text": "the um statistics API that's included in in DD",
    "start": "2302160",
    "end": "2307599"
  },
  {
    "text": "sounds good thank you think we can stop here yeah I think",
    "start": "2307599",
    "end": "2314880"
  },
  {
    "text": "we St yeah thank you thank you everyone thank [Applause] you",
    "start": "2314880",
    "end": "2322800"
  }
]