[
  {
    "text": "hello everybody Welcome to our session about uh vendor agnostic service functions",
    "start": "179",
    "end": "7080"
  },
  {
    "text": "we will be presenting today with Mohit so first let's introduce ourselves my name is robotic I'm based in Czech",
    "start": "7080",
    "end": "14160"
  },
  {
    "text": "Republic I'm in general working at redhat in openshift serverless team I'm a member of creative community so",
    "start": "14160",
    "end": "21900"
  },
  {
    "text": "I'm a member of community POC I'm also maintainer of projected so if you have any questions on those two projects feel",
    "start": "21900",
    "end": "28859"
  },
  {
    "text": "free to ask me good afternoon everyone my name is Mohit",
    "start": "28859",
    "end": "35460"
  },
  {
    "text": "subin and I work at red hat and I'm a senior product manager working around Red Hat developer tools I'm based out of",
    "start": "35460",
    "end": "42300"
  },
  {
    "text": "India and today we are going through some of the cool stuffs what we do around serverless K native and functions",
    "start": "42300",
    "end": "50180"
  },
  {
    "text": "cool so this is the shoulder agenda so we will do some introduction this will",
    "start": "50280",
    "end": "55440"
  },
  {
    "text": "be done right and then we are talking about serverless functions so maybe we'll say what the servers actually is",
    "start": "55440",
    "end": "62239"
  },
  {
    "text": "then then we will show show the demo okay so what is serverless I I bet the",
    "start": "62239",
    "end": "70320"
  },
  {
    "text": "majority of people when they serve serverless they think okay that's AWS Lambda right but there might be",
    "start": "70320",
    "end": "76280"
  },
  {
    "text": "different different ways how to achieve those similar capabilities uh so for example this is a definition",
    "start": "76280",
    "end": "82920"
  },
  {
    "text": "from cncf I won't read the whole definition but basically the the main point is that uh serverless there are",
    "start": "82920",
    "end": "89340"
  },
  {
    "text": "applications that do not require server management and they have like a very simple deployment model and they should",
    "start": "89340",
    "end": "94979"
  },
  {
    "text": "be executed and scaled uh based on the demand in the in the in the very",
    "start": "94979",
    "end": "100020"
  },
  {
    "text": "specific moment so if I can summarize this in a few bullet points so serverless it's like",
    "start": "100020",
    "end": "106680"
  },
  {
    "text": "Auto scaling right this is important feature of serverless so scale to zero simplified development and deployment",
    "start": "106680",
    "end": "112799"
  },
  {
    "text": "model and by its nature the service server services or functions are even driven so",
    "start": "112799",
    "end": "118920"
  },
  {
    "text": "they should be asynchronous so we need to take this into consideration when we are let's say building our our solution",
    "start": "118920",
    "end": "124979"
  },
  {
    "text": "based on the serverless approaches also the serverless I don't want to deal",
    "start": "124979",
    "end": "130200"
  },
  {
    "text": "with the server configuration or or with the infrastructure configuration this should be very very simple with a very",
    "start": "130200",
    "end": "136440"
  },
  {
    "text": "nice ux also when we are talking about serverless there's like serverless",
    "start": "136440",
    "end": "143640"
  },
  {
    "text": "functions function as a service there are different opinions on this on this on these terms so this is how we",
    "start": "143640",
    "end": "150720"
  },
  {
    "text": "see it actually so for us the serverless is a deployment model that basically abstracts the the way the the way that",
    "start": "150720",
    "end": "157980"
  },
  {
    "text": "we deploy the application on the on the infrastructure so I've started the infrastructure it provides the capabilities to scale the workloads uh",
    "start": "157980",
    "end": "165300"
  },
  {
    "text": "save uh save the configuration and all this stuff functions on the other hand",
    "start": "165300",
    "end": "170459"
  },
  {
    "text": "isn't for us is more like a programming model so because it it has like a certain",
    "start": "170459",
    "end": "176580"
  },
  {
    "text": "function signature that you need to need to need to match to actually deploy the function so once you once you build this",
    "start": "176580",
    "end": "182819"
  },
  {
    "text": "function then you can deploy it as a serverless workload so serverless you can take basically any of your",
    "start": "182819",
    "end": "188700"
  },
  {
    "text": "containers or whatever deployed as a serverless but functions is more like a glue so you have like a strict strict",
    "start": "188700",
    "end": "194879"
  },
  {
    "text": "thing to follow and it's usually like a smaller smaller services",
    "start": "194879",
    "end": "200599"
  },
  {
    "text": "so what is the idle service workload it might be workload that is stateless because with the serverless we would",
    "start": "200760",
    "end": "206700"
  },
  {
    "text": "like to scale very fast so we don't want to keep the state but we don't want to keep the state inside application we can",
    "start": "206700",
    "end": "212400"
  },
  {
    "text": "keep the state outside the application in some key value store for example radius but we should not have a state it",
    "start": "212400",
    "end": "219000"
  },
  {
    "text": "should be ideally short running so if your application is running it's ideal candidate for for service workload because it will do its job and it will",
    "start": "219000",
    "end": "225360"
  },
  {
    "text": "scale in and if your application is HTTP based or event driven then also it is a good",
    "start": "225360",
    "end": "230819"
  },
  {
    "text": "candidate for for a servers workload so let me explain more like this let's",
    "start": "230819",
    "end": "236819"
  },
  {
    "text": "say this is the serverless pattern we call it so on the left hand side you can see event it could be like a HTTP",
    "start": "236819",
    "end": "242040"
  },
  {
    "text": "request it could be Kafka message it could be some other event and this event triggers our application and this application does some does some work and",
    "start": "242040",
    "end": "249239"
  },
  {
    "text": "produces some results based on this those events once the once the job is done the application should be should be",
    "start": "249239",
    "end": "254760"
  },
  {
    "text": "scaling also if there are more requests the application will will scale out so this is the serverless that's basically a",
    "start": "254760",
    "end": "261000"
  },
  {
    "text": "nutshell and since we are on kubecon so let's let's take a look on on the serverless",
    "start": "261000",
    "end": "267180"
  },
  {
    "text": "approach from let's say from the from the kubernetes way because this this might have several benefits because for",
    "start": "267180",
    "end": "273240"
  },
  {
    "text": "example if you have your traditional applications your legacy applications already deployed or on your kubernetes",
    "start": "273240",
    "end": "278520"
  },
  {
    "text": "cluster and you would like to maybe connect a bunch of services and make them like let's say serverless ready",
    "start": "278520",
    "end": "283860"
  },
  {
    "text": "then then you can use the new usk native basically to have all the workloads in a",
    "start": "283860",
    "end": "288960"
  },
  {
    "text": "single single environment in a single uh let's say cluster if you use like for example AWS Lambda you might have some",
    "start": "288960",
    "end": "294720"
  },
  {
    "text": "some services in the in this runtime and the other uh might be in another cluster so having everything in one cluster is a",
    "start": "294720",
    "end": "301919"
  },
  {
    "text": "benefit that basically you approach the all the workloads the similar way you can have same CI Etc",
    "start": "301919",
    "end": "308780"
  },
  {
    "text": "Okay so yeah so uh let's get started with what we",
    "start": "308880",
    "end": "315120"
  },
  {
    "text": "have with K native so this was a cncf incubating project started in March 2022 and we have seen a lot of community",
    "start": "315120",
    "end": "321300"
  },
  {
    "text": "growth we have a dedicated uh booth in the project maintenance track for K native and these are the sites where you",
    "start": "321300",
    "end": "327240"
  },
  {
    "text": "can read more about K native and how you want to work ahead with so the demo will be focusing more on that",
    "start": "327240",
    "end": "333419"
  },
  {
    "text": "these are the three specific aspects of K native currently serving Eventing and functions uh serving basically is",
    "start": "333419",
    "end": "339479"
  },
  {
    "text": "allowing your container to have your applications from scale 0 and Eventing is basically monitoring your",
    "start": "339479",
    "end": "345479"
  },
  {
    "text": "infrastructure like let's say you have some events which are there and you want to simulate your applications through the Eventing process you can do that and",
    "start": "345479",
    "end": "352740"
  },
  {
    "text": "functions is something which we are focusing a lot in the demo today so you'll be having more understanding that how you can do serverless functions and",
    "start": "352740",
    "end": "359520"
  },
  {
    "text": "with a vendor agnostic approach so let's see how that exactly works when we say",
    "start": "359520",
    "end": "364800"
  },
  {
    "text": "vendor agnostic so right now if you want to deploy a serverless function it should not be dedicated to a specific",
    "start": "364800",
    "end": "370259"
  },
  {
    "text": "cloud provider right it can work on any kubernetes platform it can be a raw kubernetes or it can be in hybrid Cloud",
    "start": "370259",
    "end": "375720"
  },
  {
    "text": "let's just working on red hat open shift Microsoft Azure AWS or gcp and the best",
    "start": "375720",
    "end": "381900"
  },
  {
    "text": "Advantage is any runtime you want to select or deploy your functions will work out of the box on any cloud",
    "start": "381900",
    "end": "387300"
  },
  {
    "text": "provider so that's a major advantage we are trying to Showcase here and in the demo you will be seeing how we can",
    "start": "387300",
    "end": "392400"
  },
  {
    "text": "replicate the same logic onto multiple clouds uh to help the developers more we have",
    "start": "392400",
    "end": "400380"
  },
  {
    "text": "also integrated this serverless workflow into multiple ways like you can do the same using CLI or you can also do",
    "start": "400380",
    "end": "406500"
  },
  {
    "text": "through your ID extensions so you as a developer need not switch between multiple tools to perform one task so",
    "start": "406500",
    "end": "413220"
  },
  {
    "text": "the idea is if you are a developer who resides in their specific ID let's say you are comfortable with the studio code",
    "start": "413220",
    "end": "418860"
  },
  {
    "text": "or you are comfortable with IntelliJ so the idea is you want to do all those serverless tasks directly from your ID",
    "start": "418860",
    "end": "425100"
  },
  {
    "text": "so you have your application open in a workspace and you want to deploy that application creating a function building",
    "start": "425100",
    "end": "431520"
  },
  {
    "text": "that function and deploying everything can be done directly from your ID so we have a dedicated extensions for them",
    "start": "431520",
    "end": "437400"
  },
  {
    "text": "which is known as vs code K native and IntelliJ K native so it goes by the community name of K native so we have",
    "start": "437400",
    "end": "444539"
  },
  {
    "text": "lot of community participants who are contributing to that extension and it has a multiple releases across every",
    "start": "444539",
    "end": "451199"
  },
  {
    "text": "three weeks so we are continuously working on that and these are some of the stuffs which will be also focusing",
    "start": "451199",
    "end": "456660"
  },
  {
    "text": "in the demo there so right now let's get started with what",
    "start": "456660",
    "end": "462300"
  },
  {
    "text": "we have for the demo because that's the most exciting part here so let's get started with it",
    "start": "462300",
    "end": "468599"
  },
  {
    "text": "so right now if you see we have uh openshift uh running on AWS and we have our",
    "start": "468599",
    "end": "474660"
  },
  {
    "text": "application already deployed for the demo so this is this will showcase your front-end application which is written",
    "start": "474660",
    "end": "480360"
  },
  {
    "text": "on react and already deployed on openshift if you can see the view the application is already deployed here if",
    "start": "480360",
    "end": "485699"
  },
  {
    "text": "you click on it you can see all the routes are already created and it's currently running so let's go and see",
    "start": "485699",
    "end": "490740"
  },
  {
    "text": "how that application currently looks this is where we have already hosted our application you can see the URL it's it",
    "start": "490740",
    "end": "497340"
  },
  {
    "text": "might be a bit smaller but this is how the application looks and this is a simple react application which we have",
    "start": "497340",
    "end": "502860"
  },
  {
    "text": "written and let's say what the functionality so right now I want to search any neighborhood in Amsterdam City and I want to see the latitude and",
    "start": "502860",
    "end": "510360"
  },
  {
    "text": "longitude of the area so let's say right now we are in Amsterdam rise so let's type",
    "start": "510360",
    "end": "515399"
  },
  {
    "text": "and see okay so we have multiple places here which mentions that so let's",
    "start": "515399",
    "end": "520560"
  },
  {
    "text": "type that okay so we have got this so you can see",
    "start": "520560",
    "end": "526140"
  },
  {
    "text": "it automatically fetches okay this is the location and this is the latitude and longitude here so we have already",
    "start": "526140",
    "end": "531540"
  },
  {
    "text": "defined that so this application is deployed so the next step is how we can connect multiple functions to it and we",
    "start": "531540",
    "end": "537300"
  },
  {
    "text": "can see okay for this location what's the specific weather and if we know okay what's the specific weather then we have",
    "start": "537300",
    "end": "542940"
  },
  {
    "text": "the second task which we will be showcasing later on so let's go back to the",
    "start": "542940",
    "end": "549540"
  },
  {
    "text": "slides again so in this demo we already have as I mentioned we have a react application",
    "start": "549540",
    "end": "554640"
  },
  {
    "text": "with a node.js backend and which is already running in a kubernetes deployment this deployment is currently",
    "start": "554640",
    "end": "559980"
  },
  {
    "text": "openshift on AWS but it will also seamlessly work on any kubernetes platform you have with this front-end",
    "start": "559980",
    "end": "566040"
  },
  {
    "text": "application the socket IO communication does with the back end which is on node and we have a cloud event emitter and",
    "start": "566040",
    "end": "571980"
  },
  {
    "text": "the rest apis which communicate together to send the data given on that street what's the longitude and longitude and",
    "start": "571980",
    "end": "577800"
  },
  {
    "text": "what's the weather which only coming from the functions we have so the back end here emits Cloud event and also",
    "start": "577800",
    "end": "583800"
  },
  {
    "text": "exposes the rest apis which basically communicate to the front end when I say cloud event these are some of",
    "start": "583800",
    "end": "590160"
  },
  {
    "text": "the examples that how you you see the cloud event look like you can specify what type of endpoint it needs uh what",
    "start": "590160",
    "end": "597120"
  },
  {
    "text": "type of content it has it's an application type and you can also pass the exact format here that you want to",
    "start": "597120",
    "end": "603019"
  },
  {
    "text": "provide the name the quantity the price it's it has an SDK which is available across languages like from golang to",
    "start": "603019",
    "end": "609839"
  },
  {
    "text": "node.js and basically the data here contains the payload what payload you want to pass on to it",
    "start": "609839",
    "end": "617519"
  },
  {
    "text": "the next part comes to the Eventing part here uh there are three specific types what when we talk about Eventing one of",
    "start": "617519",
    "end": "624360"
  },
  {
    "text": "them is a broker which is an event mesh right now in the demo we will be going through in memory but you can also",
    "start": "624360",
    "end": "629399"
  },
  {
    "text": "configure your Kafka or your rabbit mq instance the second part comes for the triggering that when you have a workload",
    "start": "629399",
    "end": "635279"
  },
  {
    "text": "which is already subscribed to that broker to receive those Cloud events it will trigger that task and the third one",
    "start": "635279",
    "end": "641880"
  },
  {
    "text": "is pretty important here because it does a sync binding basically your standard application will be connected to that",
    "start": "641880",
    "end": "647459"
  },
  {
    "text": "broker together and your application can listen to all the communications coming from that cloud even so the back end",
    "start": "647459",
    "end": "653640"
  },
  {
    "text": "so this is uh you can read more about it from the Eventing documentation we have",
    "start": "653640",
    "end": "659100"
  },
  {
    "text": "so this is how the exactly the application looks so right now what I showcase on the demo this is the front-end app which already has a",
    "start": "659100",
    "end": "664980"
  },
  {
    "text": "backend connected to it and now what it will do is it will do a cloud event emitting to connect to that broker so",
    "start": "664980",
    "end": "671040"
  },
  {
    "text": "let's go to vs code and see how it does so this is my application which is",
    "start": "671040",
    "end": "676380"
  },
  {
    "text": "already open in my visual studio code uh instance and I have my broker dot yaml",
    "start": "676380",
    "end": "682140"
  },
  {
    "text": "already open if you can see these are the configuration which we need to Define here and this is the sync binding",
    "start": "682140",
    "end": "687959"
  },
  {
    "text": "which will be added to it and so let's run this code",
    "start": "687959",
    "end": "693360"
  },
  {
    "text": "and we do",
    "start": "693360",
    "end": "696320"
  },
  {
    "text": "okay yeah so you can see uh the sink binding is already created and if you go to the K",
    "start": "699240",
    "end": "704760"
  },
  {
    "text": "native extension",
    "start": "704760",
    "end": "707660"
  },
  {
    "text": "so this is the K native ID extension what we have on Visual Studio code I can and the similar experience will be there",
    "start": "709920",
    "end": "716760"
  },
  {
    "text": "on IntelliJ also so let's say if you're a developer who is comfortable more on the intelligent side we'll have the similar experience and if you see I",
    "start": "716760",
    "end": "723120"
  },
  {
    "text": "already have deployed my broker so it will be present here and my sync binding is also added here",
    "start": "723120",
    "end": "729060"
  },
  {
    "text": "and if I go to my topology view you can see as soon as previously it was just",
    "start": "729060",
    "end": "734160"
  },
  {
    "text": "having this react application deployed but now it also has the broker and the sync binding connected to it",
    "start": "734160",
    "end": "740720"
  },
  {
    "text": "so I'll pass on to benik to discuss more about what next we can do with the functions experience thank you very much",
    "start": "742019",
    "end": "748320"
  },
  {
    "text": "so what you just saw it's the standard application and as I mentioned you can mix your standard applications with the",
    "start": "748320",
    "end": "753360"
  },
  {
    "text": "service functions so let's let's build a function so let's build a function that will tell us what is the weather",
    "start": "753360",
    "end": "759000"
  },
  {
    "text": "actually on that location so what can I do I can open the K native",
    "start": "759000",
    "end": "765000"
  },
  {
    "text": "okay native view in the vs code then I just okay say okay okay let's create the function I will call it weather",
    "start": "765000",
    "end": "772320"
  },
  {
    "text": "uh I need to select the runtime so we documented functions we support multiple runtimes so I will write this this",
    "start": "772320",
    "end": "778500"
  },
  {
    "text": "function and go and we have several templates so when I was talking about Community",
    "start": "778500",
    "end": "783959"
  },
  {
    "text": "functions it's like this programming model so we offer like different templates for like for for the developers so they can just create a",
    "start": "783959",
    "end": "790980"
  },
  {
    "text": "function on a specific template and then uh it will it will serve the request so it could be it could be template based",
    "start": "790980",
    "end": "797399"
  },
  {
    "text": "based on HTTP so it will accept incoming HTTP requests or it could it could parse Cloud events because our Standalone",
    "start": "797399",
    "end": "803579"
  },
  {
    "text": "application exposes Cloud events we will we will use the cloud events one and we will just create it in the in our",
    "start": "803579",
    "end": "810300"
  },
  {
    "text": "uh in our directory so let me just select the location and create a function",
    "start": "810300",
    "end": "817279"
  },
  {
    "text": "okay so and I will add it to my workspace so as you can see they're on the left hand side I hope it's visible",
    "start": "818160",
    "end": "823339"
  },
  {
    "text": "it's a it's a pretty standard go function there is a go mode and there is uh the most important thing is this",
    "start": "823339",
    "end": "828899"
  },
  {
    "text": "handle.go so basically this is a this is all I need to do to implement the",
    "start": "828899",
    "end": "834300"
  },
  {
    "text": "business logic so this is the function signature and it accepts the cloud event and I just need to to write the code in",
    "start": "834300",
    "end": "840839"
  },
  {
    "text": "here so I will need need to fetch fetch the weather information from some endpoint I will cheat a little bit",
    "start": "840839",
    "end": "846600"
  },
  {
    "text": "because we don't have much time so I will I will just copy paste the the source code but I will I will explain it",
    "start": "846600",
    "end": "852420"
  },
  {
    "text": "a little bit so and I will I will actually deploy this",
    "start": "852420",
    "end": "858540"
  },
  {
    "text": "function so I can do it through UI or through this command line so all I need to do is to run a Fung deploy which is",
    "start": "858540",
    "end": "865500"
  },
  {
    "text": "our CLI tool and now it will start building the building the function image and it will deploy the image what the",
    "start": "865500",
    "end": "871440"
  },
  {
    "text": "function does is basically it just it just calls the API endpoint on this location and sends a new Cloud event",
    "start": "871440",
    "end": "877740"
  },
  {
    "text": "back to the broker with our information about the weather information let me go back to the slides",
    "start": "877740",
    "end": "884399"
  },
  {
    "text": "so this is what I was just talking about we have this connective functions which provides the developer experience and we",
    "start": "884399",
    "end": "892560"
  },
  {
    "text": "have the templates and we support multiple runtimes and you can you can you can you can trigger the functions",
    "start": "892560",
    "end": "897600"
  },
  {
    "text": "based on HTTP or Cloud events so how how do we build the function from",
    "start": "897600",
    "end": "903600"
  },
  {
    "text": "the source code we are using a build packs or we can use s2i strategies and we also planning to add more strategies",
    "start": "903600",
    "end": "910380"
  },
  {
    "text": "for building the image so if you don't know what our build packs it's a cool cncf project that lets you automate the",
    "start": "910380",
    "end": "916800"
  },
  {
    "text": "process of building the container which is based on the based on the runtime that you have so away with the functions",
    "start": "916800",
    "end": "922920"
  },
  {
    "text": "provide like the set of runtimes instead of prepared built build packs builders that will automatically",
    "start": "922920",
    "end": "928860"
  },
  {
    "text": "package our application and produce and container image when this container image is ready",
    "start": "928860",
    "end": "934199"
  },
  {
    "text": "then it's been pushed to container registry and then it has been deployed as a connective service",
    "start": "934199",
    "end": "939660"
  },
  {
    "text": "so creative service is the is the one of the main components of creative is the serverless serverless deployment model",
    "start": "939660",
    "end": "946320"
  },
  {
    "text": "for for the service application applications and what it provides is basically I can just tell it this is my",
    "start": "946320",
    "end": "953040"
  },
  {
    "text": "container it will deploy the container as a as a creative service and it will automatically scale my application based",
    "start": "953040",
    "end": "959339"
  },
  {
    "text": "on incoming HTTP requests I would like to stop a little bit on here because scaling based on incoming activity",
    "start": "959339",
    "end": "966540"
  },
  {
    "text": "request is another simple task because imagine you have your application this accepting HTTP request let's say I'll",
    "start": "966540",
    "end": "974220"
  },
  {
    "text": "scale this application to zero replicas and guess guess what I would like to reach this application so if I do a",
    "start": "974220",
    "end": "981300"
  },
  {
    "text": "request I need to somehow catch the incoming request to hold it for a while scale out my application and then",
    "start": "981300",
    "end": "987060"
  },
  {
    "text": "forward the forward the request further down so this is all been handled by by K native for you so you don't need to take",
    "start": "987060",
    "end": "993000"
  },
  {
    "text": "care of this we there is also separation of code and configuration so let's say I",
    "start": "993000",
    "end": "998279"
  },
  {
    "text": "deployed my application in version one then I can deploy a version two and uh creative automatically starts let's say",
    "start": "998279",
    "end": "1004820"
  },
  {
    "text": "let's say snapshot of the configuration so you can easily roll back between the versions or you can even specify",
    "start": "1004820",
    "end": "1010759"
  },
  {
    "text": "multiple uh traffic splitting uh multiple rollout strategies so let's say I would like to",
    "start": "1010759",
    "end": "1016519"
  },
  {
    "text": "send 80 of the traffic to my previous version and 20 uh percent traffic to my new version so our function is being",
    "start": "1016519",
    "end": "1023660"
  },
  {
    "text": "built by build packs as a container and then uh deployed as a as a standard kubernetes standard K native service",
    "start": "1023660",
    "end": "1029540"
  },
  {
    "text": "so this is what the application looks like now so the the application should",
    "start": "1029540",
    "end": "1035178"
  },
  {
    "text": "send a cloud event to our broker with the coordinates the the we should we should connect the weather application",
    "start": "1035179",
    "end": "1041178"
  },
  {
    "text": "to the broker and then it will it will reply back so so our our function has been already",
    "start": "1041179",
    "end": "1047660"
  },
  {
    "text": "deployed as you can see in here and it has been already uh scaled scale to zero replicas because there is no traffic I",
    "start": "1047660",
    "end": "1053480"
  },
  {
    "text": "just need to connect my my app to this to this broker so I will I will connect this uh this uh",
    "start": "1053480",
    "end": "1059419"
  },
  {
    "text": "this function to to the broker and because I know that the Standalone application emits Cloud events",
    "start": "1059419",
    "end": "1066620"
  },
  {
    "text": "Cloud events as let's say let's say some metadata about the cloud event and then the payload and in the metadata there is",
    "start": "1066620",
    "end": "1073039"
  },
  {
    "text": "a field which is called type so I can filter filter these code events uh based on the type for example so this is very",
    "start": "1073039",
    "end": "1079700"
  },
  {
    "text": "useful when you are connecting different uh different let's say event providers it could be Kafka it could be I don't",
    "start": "1079700",
    "end": "1085940"
  },
  {
    "text": "know some some some customs Customs some rabbit stuff and everything has been bundled as a cloud event so you can",
    "start": "1085940",
    "end": "1092600"
  },
  {
    "text": "imagine the cloud event as a let's say as a wrapper around your arbitrary workload and you can access the cloud",
    "start": "1092600",
    "end": "1098059"
  },
  {
    "text": "event all the cloud events uh unified way this is a very huge benefit I would say so let's let's filter let's filter",
    "start": "1098059",
    "end": "1104000"
  },
  {
    "text": "based on type and I know the type is is coordinates",
    "start": "1104000",
    "end": "1109100"
  },
  {
    "text": "and now my function now my function receives the the coordinates uh it it queries the the end",
    "start": "1109100",
    "end": "1116720"
  },
  {
    "text": "point and it receives the weather data and now I need to talk back to my uh to my Standalone application",
    "start": "1116720",
    "end": "1122179"
  },
  {
    "text": "I can do it from the from the function or I can write another function that will do that for me",
    "start": "1122179",
    "end": "1127340"
  },
  {
    "text": "so let me let me go back to the vs code and I will create another function this",
    "start": "1127340",
    "end": "1132559"
  },
  {
    "text": "time it will be it will be a node function I will call it the responder so it will respond back to the uh back to the",
    "start": "1132559",
    "end": "1141260"
  },
  {
    "text": "back to the application and it will also accept the cloud event so it will accept the cloud event from the from the weather function and it will it will",
    "start": "1141260",
    "end": "1148039"
  },
  {
    "text": "reply back to my Standalone application so let's create this function I'll add it to the workspace",
    "start": "1148039",
    "end": "1154820"
  },
  {
    "text": "and again this is the responder and it is very standard note project there is index.js where you need to implement",
    "start": "1154820",
    "end": "1160520"
  },
  {
    "text": "your business logic again I will overachieve because we don't have much time so I will I will",
    "start": "1160520",
    "end": "1166340"
  },
  {
    "text": "I will just copy paste the code and I will put it into my index.js",
    "start": "1166340",
    "end": "1172580"
  },
  {
    "text": "and what we are doing here uh let me let me so this is the handle function which receives an event",
    "start": "1172580",
    "end": "1179360"
  },
  {
    "text": "and it's it's uh if you haven't this type of weather which is the one from the function it will send it to the to",
    "start": "1179360",
    "end": "1185480"
  },
  {
    "text": "the back end on the on the rest endpoint and that's it okay so let's let's deploy this function",
    "start": "1185480",
    "end": "1191840"
  },
  {
    "text": "again all I need to do is to write a func deploy responder",
    "start": "1191840",
    "end": "1198080"
  },
  {
    "text": "and this will build the function and respond uh and it will it will deploy it",
    "start": "1198080",
    "end": "1203419"
  },
  {
    "text": "on the on a kubernetes cluster so if we go back to the slides",
    "start": "1203419",
    "end": "1210440"
  },
  {
    "text": "so this this setup this setup should be okay and now we are building this stuff so we are building this responder",
    "start": "1210440",
    "end": "1215780"
  },
  {
    "text": "function that takes the takes the event from the broker and making a HTTP request to our to our app",
    "start": "1215780",
    "end": "1222980"
  },
  {
    "text": "I did I did a deployment through the command line but uh we also have the extension where you can for for",
    "start": "1222980",
    "end": "1230000"
  },
  {
    "text": "functions you can you can you can you can do this through through the uh through the ID so you can build the",
    "start": "1230000",
    "end": "1235340"
  },
  {
    "text": "function deploy the function or you can invoke your function invoking the functions means that for example you would like to test your function and you",
    "start": "1235340",
    "end": "1241520"
  },
  {
    "text": "know that the function accepts a certain code event so you can you can send the test payload to this uh to this directly",
    "start": "1241520",
    "end": "1247460"
  },
  {
    "text": "to this function and this function can run all your cluster or it can run locally so for example this is node",
    "start": "1247460",
    "end": "1253160"
  },
  {
    "text": "application so you can just run npm start it will start on your localhost or you can run it locally in your container",
    "start": "1253160",
    "end": "1260780"
  },
  {
    "text": "so I can see that my application my second function has been deployed so let's let's quickly check okay my",
    "start": "1260780",
    "end": "1266660"
  },
  {
    "text": "responder function is here so I will also connect it to the to the broker",
    "start": "1266660",
    "end": "1272179"
  },
  {
    "text": "and I'm interested in Cloud event type of weather",
    "start": "1272179",
    "end": "1276760"
  },
  {
    "text": "so that's it so all done so now if I if I search for an address",
    "start": "1277760",
    "end": "1284900"
  },
  {
    "text": "I hope that we will see we will see some some weather information in the in between so",
    "start": "1284900",
    "end": "1290120"
  },
  {
    "text": "you can see that now we can see the weather weather information about the specific location I just want to highlight that this is a",
    "start": "1290120",
    "end": "1296419"
  },
  {
    "text": "simple demo so I know that you can do all this stuff maybe in a single single application but really just want to",
    "start": "1296419",
    "end": "1301460"
  },
  {
    "text": "showcase how you can how you can use this event driven approach so we can have multiple functions and each function has been scaled based on the",
    "start": "1301460",
    "end": "1307760"
  },
  {
    "text": "specific needs so maybe some part of the application requires higher load some some requires a lower load so this is",
    "start": "1307760",
    "end": "1313640"
  },
  {
    "text": "this is the current state so what can we do now so it looks like a very uh good weather and with a good wind speed so I want to",
    "start": "1313640",
    "end": "1320240"
  },
  {
    "text": "rent a e-bike can you help me with that sure sure let's write a function for this right so",
    "start": "1320240",
    "end": "1327279"
  },
  {
    "text": "we promised Amsterdam city data so Amsterdam city data is or Amsterdam City",
    "start": "1328100",
    "end": "1333200"
  },
  {
    "text": "provides a provides an open data on this on this on this endpoint it's in Dutch",
    "start": "1333200",
    "end": "1338600"
  },
  {
    "text": "so I needed to use a translator because I don't speak any Dash but this particular endpoint is telling me like",
    "start": "1338600",
    "end": "1344179"
  },
  {
    "text": "what are the scooters uh e-scooters available uh in Amsterdam so we will",
    "start": "1344179",
    "end": "1349940"
  },
  {
    "text": "just query this endpoint we will get the list of the scooters and we will try to find the closest few close scooters that are",
    "start": "1349940",
    "end": "1357620"
  },
  {
    "text": "to this to this coordinator we specify in the in the application so basically so basically we will implement this so",
    "start": "1357620",
    "end": "1363679"
  },
  {
    "text": "we will Implement another function that will receive the very same coordinates from the from the from the broker and respond back and respond to the to the",
    "start": "1363679",
    "end": "1370880"
  },
  {
    "text": "responder so let's go uh again I will I will use golang",
    "start": "1370880",
    "end": "1376039"
  },
  {
    "text": "because I'll go so let's call this scooters let's use go again we will use cloud",
    "start": "1376039",
    "end": "1383179"
  },
  {
    "text": "events and we will use use our directory we will create a function",
    "start": "1383179",
    "end": "1390500"
  },
  {
    "text": "we will edit to the first space and if you look at the scooters again it's a it's a good function again I will",
    "start": "1390500",
    "end": "1396080"
  },
  {
    "text": "cheat so I will I will put the implementation in there",
    "start": "1396080",
    "end": "1401320"
  },
  {
    "text": "in here I just replied so if we look at the at",
    "start": "1403059",
    "end": "1408260"
  },
  {
    "text": "the function it's simple also it receives the it receives the coordinates then it talks to the endpoint",
    "start": "1408260",
    "end": "1414320"
  },
  {
    "text": "and then it it checks if the scooter is available because they're in the in the rest API",
    "start": "1414320",
    "end": "1420500"
  },
  {
    "text": "there's also like unavailable scooters so and it will sort them by distance and it will it will give me five cozy",
    "start": "1420500",
    "end": "1426320"
  },
  {
    "text": "scooters and again I will respond back in a code event this this current this type it",
    "start": "1426320",
    "end": "1431659"
  },
  {
    "text": "will be type of type scooters so let's let's deploy this deploy this function",
    "start": "1431659",
    "end": "1438880"
  },
  {
    "text": "so right now again it's very very simple just provide a business logic and uh",
    "start": "1441140",
    "end": "1446539"
  },
  {
    "text": "the build packs are building the application and then deploying deploying as a connective service",
    "start": "1446539",
    "end": "1452059"
  },
  {
    "text": "so I'll just refresh the project view so we",
    "start": "1452059",
    "end": "1458059"
  },
  {
    "text": "need to wait a little bit in the meantime what we can do we can we can quickly",
    "start": "1458059",
    "end": "1463520"
  },
  {
    "text": "check again the extension so you can see that I have like the I have all the functions",
    "start": "1463520",
    "end": "1469340"
  },
  {
    "text": "here I can see that if they are local or if they are deployed already on the cluster I can deploy them and deploy them I can",
    "start": "1469340",
    "end": "1475100"
  },
  {
    "text": "build them here I can see all the Eventing infrastructure so the Eventing infrastructure is really for for",
    "start": "1475100",
    "end": "1480140"
  },
  {
    "text": "plugging all the stuff together and we can see that our our function has been deployed so let's let's quickly",
    "start": "1480140",
    "end": "1486620"
  },
  {
    "text": "check okay is here perfect so I will also connect it to my to my broker I can do it through the UI I can",
    "start": "1486620",
    "end": "1493340"
  },
  {
    "text": "do it through the command line that we have we have uh can a CLI for this or or I can use uh Yama file so this type I",
    "start": "1493340",
    "end": "1501860"
  },
  {
    "text": "would like to receive a coordinates to this coordinates and also I will need to",
    "start": "1501860",
    "end": "1507380"
  },
  {
    "text": "actually update my responder because my responder function if you recall my responder function just accepts the",
    "start": "1507380",
    "end": "1515179"
  },
  {
    "text": "type of cloud event type of weather I need to extend it with the type of scooters which provides my my new uh my",
    "start": "1515179",
    "end": "1522380"
  },
  {
    "text": "new my new function so I will need to update this function and build it so is there any other way which you can do",
    "start": "1522380",
    "end": "1528500"
  },
  {
    "text": "this well yeah yeah so basically at the moment we are building the function locally this might not be option for",
    "start": "1528500",
    "end": "1534679"
  },
  {
    "text": "everybody because some some maybe I don't want to run Docker on my machine I don't want to run Broadband on my machine or maybe my company doesn't",
    "start": "1534679",
    "end": "1540860"
  },
  {
    "text": "allow me to run around this kind of stuff on my machines or I I just want to use use the Ci or something like that so",
    "start": "1540860",
    "end": "1548419"
  },
  {
    "text": "what we can do can we can build a function on a cluster because we have the we have the power in the cluster so let's let's use use this one",
    "start": "1548419",
    "end": "1555440"
  },
  {
    "text": "and how we can achieve that we will for that we will we will use uh because uh approach we call it on",
    "start": "1555440",
    "end": "1562340"
  },
  {
    "text": "cluster build so on cluster build uh takes my source code it uh it forwards it to the cluster to a",
    "start": "1562340",
    "end": "1569840"
  },
  {
    "text": "volume and it will initiate the tecton pipeline if you don't know tecton tecton is a",
    "start": "1569840",
    "end": "1575419"
  },
  {
    "text": "kubernetes CI let's say and it will execute the pipeline it will build the",
    "start": "1575419",
    "end": "1580700"
  },
  {
    "text": "function again and it will again deploy it as a as a as a key native service",
    "start": "1580700",
    "end": "1586360"
  },
  {
    "text": "what I want to show you today is uh something a little bit more advanced it's called pipelines the code so the",
    "start": "1586360",
    "end": "1592940"
  },
  {
    "text": "pipeline definition lifts lives with the source code of my function and I can submit it to the git repository and this",
    "start": "1592940",
    "end": "1599900"
  },
  {
    "text": "uh this function will will be automatically built with each let's say commit or each action uh against this",
    "start": "1599900",
    "end": "1606020"
  },
  {
    "text": "repository so I can easily easily easily build build a function on cluster triggered from the from the GitHub",
    "start": "1606020",
    "end": "1613100"
  },
  {
    "text": "so let me update the function again I will I will cheat a little bit",
    "start": "1613100",
    "end": "1618500"
  },
  {
    "text": "so I just need to add this in this case",
    "start": "1618500",
    "end": "1622659"
  },
  {
    "text": "here so in this case I have I have two cases and I will talk to different endpoint on my on my",
    "start": "1624559",
    "end": "1630880"
  },
  {
    "text": "uh on my on my application so what I need to do I need to configure configure",
    "start": "1630880",
    "end": "1637340"
  },
  {
    "text": "this this function to to actually actually do this stuff so what I need to do I can run this this",
    "start": "1637340",
    "end": "1643640"
  },
  {
    "text": "command I can run fan config which is like a for configuration of the of the function and I would like to configure",
    "start": "1643640",
    "end": "1649400"
  },
  {
    "text": "git and I would like to set set the git but before I can do it before I will do it I will actually initially initiate",
    "start": "1649400",
    "end": "1654860"
  },
  {
    "text": "the the git with repository on my on my responder function so I will go to the",
    "start": "1654860",
    "end": "1660320"
  },
  {
    "text": "responder directory okay and I also have like this",
    "start": "1660320",
    "end": "1667539"
  },
  {
    "text": "so basically what I'm doing I'm just initializing a new new git repo in this and I've already created a GitHub",
    "start": "1668000",
    "end": "1674120"
  },
  {
    "text": "project so what I did I just uh initiated a git repo and now I need to run run my my",
    "start": "1674120",
    "end": "1681020"
  },
  {
    "text": "configuration for for the git so it will ask me a couple of questions uh it will it will find like the correct",
    "start": "1681020",
    "end": "1688220"
  },
  {
    "text": "correct uh URL for the for the function uh are we targeting the main event so we are targeting the main branch we can",
    "start": "1688220",
    "end": "1694340"
  },
  {
    "text": "Target multiple branches and it could be subpath whatever and this is like it asks me if I want to",
    "start": "1694340",
    "end": "1699980"
  },
  {
    "text": "configure the web hook so it means that it will automatically uh build the function for me when there is new",
    "start": "1699980",
    "end": "1705020"
  },
  {
    "text": "comments yes I would like to do it and I need to provide my access token so I",
    "start": "1705020",
    "end": "1710240"
  },
  {
    "text": "will copy it and I will just provide access token sorry I just need to probably copy paste",
    "start": "1710240",
    "end": "1717679"
  },
  {
    "text": "it okay",
    "start": "1717679",
    "end": "1723700"
  },
  {
    "text": "the layout isn't really broken so here it is so what's happening",
    "start": "1723919",
    "end": "1729260"
  },
  {
    "text": "um in my in my source code of repo there are new new pipeline definitions created on the cluster the cluster is configured",
    "start": "1729260",
    "end": "1735140"
  },
  {
    "text": "to to talk to the to the GitHub repo and the GitHub repo has been it's been",
    "start": "1735140",
    "end": "1740179"
  },
  {
    "text": "hopefully set up for for like the the action I can see some error but I hope",
    "start": "1740179",
    "end": "1745279"
  },
  {
    "text": "that it will be work so what I need to do I just need to accommit these changes to to migrade report so I'll okay let's",
    "start": "1745279",
    "end": "1751279"
  },
  {
    "text": "add edit CI I will commit this stuff and I will publish",
    "start": "1751279",
    "end": "1758260"
  },
  {
    "text": "so if we go to my uh to my this is the GitHub repository I will just refresh it and we should see",
    "start": "1759260",
    "end": "1766220"
  },
  {
    "text": "the the new code and here is a small action running uh running on the on this on",
    "start": "1766220",
    "end": "1771919"
  },
  {
    "text": "this latest comment and it is running the the build of the function on my cluster so I will go back to my cluster",
    "start": "1771919",
    "end": "1778460"
  },
  {
    "text": "and switch to Pipelines and on the pipelines we can see that there is a new pipeline run running and",
    "start": "1778460",
    "end": "1785360"
  },
  {
    "text": "it has three tasks so the first task is is pulling the the git repo the second task uh is is just finished it'll build",
    "start": "1785360",
    "end": "1792799"
  },
  {
    "text": "a builder function using build text and the third first step it will it will actually deploy deploy the function",
    "start": "1792799",
    "end": "1800620"
  },
  {
    "text": "so we just need to wait a little bit hopefully a little bit",
    "start": "1800899",
    "end": "1808360"
  },
  {
    "text": "okay so the deploy step is still running",
    "start": "1810679",
    "end": "1816700"
  },
  {
    "text": "and once once the function is updated I will see a new new revision new revision on my of my function",
    "start": "1820340",
    "end": "1828278"
  },
  {
    "text": "seems like on Democrats are not with us today",
    "start": "1829399",
    "end": "1835419"
  },
  {
    "text": "okay okay but trust me this this actually",
    "start": "1838700",
    "end": "1844520"
  },
  {
    "text": "works so let me let me fall back to to my backup solution",
    "start": "1844520",
    "end": "1850399"
  },
  {
    "text": "which is the which is the application that is been deployed in different namespace the very same application and",
    "start": "1850399",
    "end": "1855919"
  },
  {
    "text": "I'll show that it actually works so if I if I select some address",
    "start": "1855919",
    "end": "1861919"
  },
  {
    "text": "now if we go back to the topology view Just Let me refresh maybe the internet connection is not good",
    "start": "1861919",
    "end": "1868100"
  },
  {
    "text": "it it already like uh forever made me like the the Cozy scooters to this to",
    "start": "1868100",
    "end": "1874340"
  },
  {
    "text": "this location and really what it does it just talks to through this through these functions and uh do do all the stuff",
    "start": "1874340",
    "end": "1882580"
  },
  {
    "text": "so this is the this is the final solution and uh thanks thanks for the feedback if anyone has any questions",
    "start": "1883640",
    "end": "1888919"
  },
  {
    "text": "feel free to watch",
    "start": "1888919",
    "end": "1891940"
  },
  {
    "text": "so are there any questions yeah there's a question",
    "start": "1897200",
    "end": "1903039"
  },
  {
    "text": "can I tell you a little bit louder",
    "start": "1908059",
    "end": "1912340"
  },
  {
    "text": "it is it is kubernetes so it's like the kubernetes schedule so how fast we can schedule the port but what we can do we",
    "start": "1915440",
    "end": "1921980"
  },
  {
    "text": "can set the minimum replicas to to one so we always have one one instead of the function is running and we'll just scale",
    "start": "1921980",
    "end": "1928580"
  },
  {
    "text": "out but we are using kubernetes so there are some drawbacks in this and this is relates to to the scheduler",
    "start": "1928580",
    "end": "1935860"
  },
  {
    "text": "any other questions so we are also available at Red Hat Booth so if you have more questions",
    "start": "1936440",
    "end": "1941960"
  },
  {
    "text": "around this feel free to drop by and we'll be glad to answer so thank you guys thank you [Applause]",
    "start": "1941960",
    "end": "1949619"
  }
]