[
  {
    "start": "0",
    "end": "85000"
  },
  {
    "text": "welcome to building effective attack detection in the cloud uh today presenting you've got nick",
    "start": "80",
    "end": "5200"
  },
  {
    "text": "jones and alfie champion um i'm nick i run our global cloud security team at f-secure uh when i'm not",
    "start": "5200",
    "end": "11759"
  },
  {
    "text": "working on people's cloud security i do attack detection which is why i'm here um and alfie's sort of the reverse alfie",
    "start": "11759",
    "end": "18000"
  },
  {
    "text": "yeah yeah absolutely uh so i lead up the uh global attack detection service for rescue consulting uh and likewise much like",
    "start": "18000",
    "end": "24320"
  },
  {
    "text": "nick in my spare time i've kind of flipped focus on on building some really wonderful things in cloud",
    "start": "24320",
    "end": "31840"
  },
  {
    "text": "so first up and we're going to be talking about the differences between on-premise and cloud attack detection and there's quite a few key differences",
    "start": "35360",
    "end": "41760"
  },
  {
    "text": "there i think to focus in on um secondly what's an attack are likely to do",
    "start": "41760",
    "end": "46800"
  },
  {
    "text": "and what are they going to try in your environments what should you be looking for and then lastly um one of the things",
    "start": "46800",
    "end": "52719"
  },
  {
    "text": "we've learned over our last year or two working on this is very much that there's an awful lot we can learn from the the devops",
    "start": "52719",
    "end": "59920"
  },
  {
    "text": "um you know tips and tricks things to do that really help level up your cloud attack detection capability long term",
    "start": "59920",
    "end": "67680"
  },
  {
    "text": "absolutely so first thing to consider then is the difference when it comes to on-prem versus cloud is this already a solved",
    "start": "69520",
    "end": "76640"
  },
  {
    "text": "problem and can we apply the same learnings from on-premises section that we've done for a while now",
    "start": "76640",
    "end": "82000"
  },
  {
    "text": "and apply those to cloud well we take a look um in some ways yes yes there are some very",
    "start": "82000",
    "end": "88720"
  },
  {
    "start": "85000",
    "end": "179000"
  },
  {
    "text": "very obvious similarities so you consider things like the the automation of attacks or scalability of",
    "start": "88720",
    "end": "94320"
  },
  {
    "text": "those we see this kind of never-ending cycle of um exploits being released and then kind of proof of concepts being released and",
    "start": "94320",
    "end": "100240"
  },
  {
    "text": "then some some widespread scanning and an exploitation taking place that's still a thing there are some kind",
    "start": "100240",
    "end": "105600"
  },
  {
    "text": "of cloud variations of that so you see um exposure credentials in things like public s3 buckets or",
    "start": "105600",
    "end": "111920"
  },
  {
    "text": "inadvertently kind of pushed to public code repositories like github and then there's also kind of a new",
    "start": "111920",
    "end": "117600"
  },
  {
    "text": "flavor um of attack which is that kind of as mata defines it as resource hijacking kind of the crypto mining type stuff",
    "start": "117600",
    "end": "124320"
  },
  {
    "text": "obviously even more so with this kind of a similarity there with on-prem when it comes to ransomware being",
    "start": "124320",
    "end": "130319"
  },
  {
    "text": "definitely in vogue as it were so there's a lot of that going on but a lot of that to some degree",
    "start": "130319",
    "end": "136000"
  },
  {
    "text": "is covered by some of the the managed service kind of the idf stuff that you see from cloud providers the likes of",
    "start": "136000",
    "end": "141599"
  },
  {
    "text": "guard duty that provide things um there relating to kind of scanning activity to",
    "start": "141599",
    "end": "146800"
  },
  {
    "text": "kind of beaking out to known bad ips that kind of thing what we're looking at and certainly is where we spend most of our time kind of pushes up that",
    "start": "146800",
    "end": "153760"
  },
  {
    "text": "that pyramid from the opportunistic exploitation so um using the instance of metadata",
    "start": "153760",
    "end": "159440"
  },
  {
    "text": "service which has obviously been um quite quite well known when it comes to cloud instance exploitation",
    "start": "159440",
    "end": "165040"
  },
  {
    "text": "and then moving up into that targeted attack where it's like rather than just that indiscriminate or opportunistic what would it look like for a",
    "start": "165040",
    "end": "171440"
  },
  {
    "text": "sophisticated uh attacker to target you specifically and the assets that you you have within cloud",
    "start": "171440",
    "end": "176480"
  },
  {
    "text": "so that's where we've been focusing really um when we look at this from a detective",
    "start": "176480",
    "end": "182159"
  },
  {
    "start": "179000",
    "end": "225000"
  },
  {
    "text": "standpoint we start looking at the telemetry that's like the raw ingredients for detection right um on-prem there's there's three obvious",
    "start": "182159",
    "end": "188720"
  },
  {
    "text": "sources there so the first is is kind of endpoint telemetry so you know like endpoint detection and response edr agents are obviously",
    "start": "188720",
    "end": "195360"
  },
  {
    "text": "hugely valuable there for process creations and kind of registry changes et cetera et cetera",
    "start": "195360",
    "end": "200400"
  },
  {
    "text": "we've also got network telemetry which hosts talks to each other things like kind of port scanning or kind of domain enumeration would end up",
    "start": "200400",
    "end": "206799"
  },
  {
    "text": "with some some noise coming from that and then we've also got application telemetry as well so the way that people are",
    "start": "206799",
    "end": "211840"
  },
  {
    "text": "interacting with potentially our internet-facing assets um what telemetry does that provide is",
    "start": "211840",
    "end": "216879"
  },
  {
    "text": "there any way that we can provide some kind of insight into mrs activity using that if we now look at cloud all of that is",
    "start": "216879",
    "end": "224720"
  },
  {
    "text": "is relevant um but we now have this this layer above the control plane telemetry that kind of",
    "start": "224720",
    "end": "229920"
  },
  {
    "start": "225000",
    "end": "297000"
  },
  {
    "text": "almost encompassing everything we've just spoken about you consider an environment um for just a kind of classic on-prem",
    "start": "229920",
    "end": "236400"
  },
  {
    "text": "application tech stack you could be that you have the endpoint telemetry still from the operating systems hosting that stuff",
    "start": "236400",
    "end": "242080"
  },
  {
    "text": "it could be that you have the network's limitatory of how those the various kind of front-end and back-end services interact with each other and then you've got the",
    "start": "242080",
    "end": "248560"
  },
  {
    "text": "application telemetry of the thing that you've written and you're now hosting but now we have this this surrounding layer which is the",
    "start": "248560",
    "end": "254560"
  },
  {
    "text": "control plane where we're interacting with that api so all of the major providers expose that api that you",
    "start": "254560",
    "end": "260000"
  },
  {
    "text": "can use to do any number of things within the account that could be from spinning up and um virtual machines to provisioning",
    "start": "260000",
    "end": "267360"
  },
  {
    "text": "um accounts with new permissions that kind of thing so there's a whole load of new telemetry that we have our disposal as",
    "start": "267360",
    "end": "272800"
  },
  {
    "text": "defenders and there's also these three sources within that that square there that are",
    "start": "272800",
    "end": "278639"
  },
  {
    "text": "of varying importance depending on what your stack actually looks like what you're hosting in cloud if obviously you're not using any endpoint anymore",
    "start": "278639",
    "end": "285120"
  },
  {
    "text": "there's no equivalent there's no ec2 or virtual machines there then obviously that doesn't really come into play anymore",
    "start": "285120",
    "end": "290479"
  },
  {
    "text": "and that's one of the key learnings for us is kind of where telemetry sources are applicable and where maybe they aren't anymore",
    "start": "290479",
    "end": "297840"
  },
  {
    "start": "297000",
    "end": "359000"
  },
  {
    "text": "another major finding or kind of experience point for us i guess is around context and that comes down to",
    "start": "298479",
    "end": "304000"
  },
  {
    "text": "when you're dealing with an environment that is purpose built the actions that take place in that environment are very much based on the",
    "start": "304000",
    "end": "310320"
  },
  {
    "text": "purpose of everything in there every asset in there so we consider a given kind of i am user for instance in aws",
    "start": "310320",
    "end": "316880"
  },
  {
    "text": "if that's upgraded it's privileges so in some for some reason it is now kind of an admin it can do",
    "start": "316880",
    "end": "321919"
  },
  {
    "text": "from high level actions and cause a major impact how that user obtained those privileges",
    "start": "321919",
    "end": "327520"
  },
  {
    "text": "could be of of huge kind of significance and if that that change is done by a",
    "start": "327520",
    "end": "333120"
  },
  {
    "text": "cicd continuous integration continuous delivery user it could be that's completely benign that's the expected behavior in which case",
    "start": "333120",
    "end": "339280"
  },
  {
    "text": "we're okay with that but the very same change made by an admin user that has no 2fa potentially was like a gip enriched",
    "start": "339280",
    "end": "347360"
  },
  {
    "text": "location there you could say this is entirely odd you know this is completely unexpected and in which case",
    "start": "347360",
    "end": "352720"
  },
  {
    "text": "this is something that we should raise and we should pursue as an investigation so context is key",
    "start": "352720",
    "end": "359039"
  },
  {
    "start": "359000",
    "end": "450000"
  },
  {
    "text": "and all of that kind of stuff considered and kind of acknowledged what we're facing now is is far more",
    "start": "360000",
    "end": "366639"
  },
  {
    "text": "complicated than that in terms of things like the interconnectivity between these services you start dealing with tons of third-party services where your",
    "start": "366639",
    "end": "373199"
  },
  {
    "text": "crown jewels as it were are no longer in in a single place in a data center you can kind of point to",
    "start": "373199",
    "end": "378560"
  },
  {
    "text": "they're obviously hosted in a plethora of other services that we see there so be that cloud providers in the traditional kind of aws as your",
    "start": "378560",
    "end": "385039"
  },
  {
    "text": "gcp kind of sense but that could also be um using like office 365 or slack for our communications et cetera and the trust",
    "start": "385039",
    "end": "391440"
  },
  {
    "text": "boundary between those is obviously a major point for us to investigate and the visibility into",
    "start": "391440",
    "end": "396720"
  },
  {
    "text": "those various um third-party services and the log sources they provide is going to be hugely important as we go forward so",
    "start": "396720",
    "end": "402479"
  },
  {
    "text": "nick i know you've got a point on this one yes so we've had some recent experience with one client were working with for",
    "start": "402479",
    "end": "407680"
  },
  {
    "text": "example where they had a primary cloud provider that they were hosting all their applications in but their source code was in github they",
    "start": "407680",
    "end": "413520"
  },
  {
    "text": "were running jenkins for their ci cd they had uh what else g suite for their and their",
    "start": "413520",
    "end": "419520"
  },
  {
    "text": "mail and their documents and all these kinds of things and so we had quite a variety of different um",
    "start": "419520",
    "end": "424800"
  },
  {
    "text": "sort of infrastructure service platforms and service and software as a service and packages that were were in play that",
    "start": "424800",
    "end": "431039"
  },
  {
    "text": "we were ingesting logs from and that we were able to use to track attacker activity platform to platform and you know that works out",
    "start": "431039",
    "end": "437759"
  },
  {
    "text": "quite well but it did take a bit of effort to get all of that together yeah and so you know i think one of the",
    "start": "437759",
    "end": "445520"
  },
  {
    "text": "the key things that we've learned is around um actually like how you design your cloud detection stack",
    "start": "445520",
    "end": "451360"
  },
  {
    "text": "um so first off um centralizing everything is pretty important i wouldn't necessarily say we need to go",
    "start": "451360",
    "end": "457680"
  },
  {
    "text": "for feeding all the data into one central location particularly but you need to make sure that it is",
    "start": "457680",
    "end": "462880"
  },
  {
    "text": "easy for your analysts to take a look at one incidence in one thing and then",
    "start": "462880",
    "end": "468240"
  },
  {
    "text": "pivot from that data point into other data sources in other applications cloud providers and whatever makes sense",
    "start": "468240",
    "end": "474400"
  },
  {
    "text": "and you know one of the things we've noticed is that the harder it is for analysts to jump between data sources from different systems and",
    "start": "474400",
    "end": "480879"
  },
  {
    "text": "environments uh the less likely they are to actively track down and investigate um some of these things to the degree",
    "start": "480879",
    "end": "486720"
  },
  {
    "text": "that it needs to or it takes so long that they don't have the bandwidth to handle everything that's coming in so",
    "start": "486720",
    "end": "492160"
  },
  {
    "text": "very important that that is right i think and that we support the analysts in generating uh or",
    "start": "492160",
    "end": "497440"
  },
  {
    "text": "in developing their use cases right and having that sort of access and first up though and data sources",
    "start": "497440",
    "end": "504479"
  },
  {
    "start": "502000",
    "end": "607000"
  },
  {
    "text": "before we start talking about where we put this data and there's a couple of key data sources i think that we need to dive in on",
    "start": "504479",
    "end": "509680"
  },
  {
    "text": "and first off you've got the control plane audit logs and secondly the the service specific looks so by control",
    "start": "509680",
    "end": "515919"
  },
  {
    "text": "plane audit logs what i mean there are cloud trail for aws audit log in azure terms and",
    "start": "515919",
    "end": "521518"
  },
  {
    "text": "kubernetes um what these give you is visibility of all administrative actions",
    "start": "521519",
    "end": "526959"
  },
  {
    "text": "taken within an environment any api call that's made gets logged there right so we can track",
    "start": "526959",
    "end": "532000"
  },
  {
    "text": "creation modification deletion of resources and we can track access in some cases and we've got",
    "start": "532000",
    "end": "538320"
  },
  {
    "text": "essentially all the visibility we could want of everything that's happening at the control plane layer coming out of that one data source",
    "start": "538320",
    "end": "544000"
  },
  {
    "text": "so that really is critical if you only get one data source turned on in your environment that's the one to pick and then for",
    "start": "544000",
    "end": "550160"
  },
  {
    "text": "service specific logs um essentially what these are are logs generated by",
    "start": "550160",
    "end": "555440"
  },
  {
    "text": "your s3 buckets by your lambda functions by your kms key access",
    "start": "555440",
    "end": "561279"
  },
  {
    "text": "cases where the the cloud native services the the past things you're using are generating their own logs and those",
    "start": "561279",
    "end": "567600"
  },
  {
    "text": "those tend to be very high fidelity uh if you analyze them right they also tend to generate",
    "start": "567600",
    "end": "573120"
  },
  {
    "text": "a lot of data and so typically we find clients benefit from turning these on on a case-by-case basis",
    "start": "573120",
    "end": "579279"
  },
  {
    "text": "so you might have an s3 bucket that's full of really important information having access logs for that is probably worthwhile",
    "start": "579279",
    "end": "584720"
  },
  {
    "text": "equally if you've got an s3 bucket set up to just serve our um static content for a website for",
    "start": "584720",
    "end": "589760"
  },
  {
    "text": "instance you probably don't need the logs for that so much right so it's about turning these on case by case",
    "start": "589760",
    "end": "595680"
  },
  {
    "text": "working out what you need them for and then enabling them accordingly rather than just blanket drowning your analysts in data from them i think",
    "start": "595680",
    "end": "605839"
  },
  {
    "text": "yeah absolutely so when we're kind of well equipped we know what it is we should be logging we're going to",
    "start": "606959",
    "end": "612399"
  },
  {
    "text": "know what the data sources are the question then comes in terms of what is it that we're looking for then",
    "start": "612399",
    "end": "617519"
  },
  {
    "text": "and then that comes down to the threat intelligence problem when it comes to cloud so if we just look here left and right",
    "start": "617519",
    "end": "622880"
  },
  {
    "text": "we've got the the mitre attack um matrix there and on the left you can see the on-premise",
    "start": "622880",
    "end": "628000"
  },
  {
    "text": "version of that and on the right you can see um the cloud equivalent there and i think it's obvious um that the on-premise version",
    "start": "628000",
    "end": "634560"
  },
  {
    "text": "is far more populated with with the techniques across the kill chain um than the cloud one is and i think",
    "start": "634560",
    "end": "640399"
  },
  {
    "text": "there's obvious reasons for that the first of course is that the on-prem version has been around for much longer um but the way that this this matrix",
    "start": "640399",
    "end": "648079"
  },
  {
    "text": "ultimately gets populated is through threatened so it through reports um findings there of malicious activity",
    "start": "648079",
    "end": "654399"
  },
  {
    "text": "that have been found um and that's what ultimately it makes its way into this and that's how we know",
    "start": "654399",
    "end": "659440"
  },
  {
    "text": "kind of what to look for so it's a little bit of a chicken and egg in terms of we need to know what to look for so we rely on attack for that kind of",
    "start": "659440",
    "end": "664640"
  },
  {
    "text": "visibility but then attack itself relies on us providing those reports um to kind of fulfill it in terms of its potential",
    "start": "664640",
    "end": "671680"
  },
  {
    "text": "so there's a lot there that you know we need to know what to look for right",
    "start": "671680",
    "end": "677120"
  },
  {
    "start": "677000",
    "end": "735000"
  },
  {
    "text": "so what is an attacker likely to do well for us the most obvious place for us to",
    "start": "677120",
    "end": "682720"
  },
  {
    "text": "kind of rely on to find that information is in the environments that we exploit as part of our consultancy work",
    "start": "682720",
    "end": "689120"
  },
  {
    "text": "um and i think probably it's fair to say they can be distilled into one of these kind of four categories and the first is identity",
    "start": "689120",
    "end": "695200"
  },
  {
    "text": "management or mismanagement um and using our ability to kind of exploit those misconfigurations that",
    "start": "695200",
    "end": "701440"
  },
  {
    "text": "allow us to elevate privileges and ultimately take control of cloud environments the second is pivoting from other environments so that",
    "start": "701440",
    "end": "708160"
  },
  {
    "text": "could be starting off on premise that could be through some other um kind of internet facing asset",
    "start": "708160",
    "end": "713519"
  },
  {
    "text": "obtaining some level of access escalating to the point where we can put ourselves in the relevant groups potentially if there's some kind of",
    "start": "713519",
    "end": "718720"
  },
  {
    "text": "single sign-on to ultimately arrive at the cloud environment with administrative privilege",
    "start": "718720",
    "end": "723839"
  },
  {
    "text": "um the third is is source code management and continuous delivery which we'll cover up in a second and",
    "start": "723839",
    "end": "729279"
  },
  {
    "text": "then the last is application vulnerabilities so we're going to take a little a little look into that that source code management one now",
    "start": "729279",
    "end": "736639"
  },
  {
    "start": "735000",
    "end": "818000"
  },
  {
    "text": "so when we talk about source code management and continuous delivery here and really what we're talking about is an attacker targeting either the code",
    "start": "738880",
    "end": "745360"
  },
  {
    "text": "repositories where your application code or your infrastructure's code is stored or the delivery pipelines um that",
    "start": "745360",
    "end": "753279"
  },
  {
    "text": "take what's in those repositories and either build the relevant cloud resources or deploy the right application containers in the",
    "start": "753279",
    "end": "759440"
  },
  {
    "text": "right places and in many respects this is sort of tier zero for your cloud security",
    "start": "759440",
    "end": "764800"
  },
  {
    "text": "everyone always thinks about hardening down what's in the cloud and we've seen quite a few cases where",
    "start": "764800",
    "end": "770000"
  },
  {
    "text": "people don't apply the same diligence to the supporting systems especially from a from a detection",
    "start": "770000",
    "end": "775120"
  },
  {
    "text": "standpoint um you know being able to track who's doing what to your pipelines into your source code actually is pretty",
    "start": "775120",
    "end": "781120"
  },
  {
    "text": "important now that these are core components of the security of your entire platform if an attacker compromises either the pipelines or the",
    "start": "781120",
    "end": "787680"
  },
  {
    "text": "source code delivery they can take control of basically everything right yeah you know we can we can deploy pretty much anything we want into",
    "start": "787680",
    "end": "794560"
  },
  {
    "text": "the cloud from there and especially when we often find that the roles that those pipelines are",
    "start": "794560",
    "end": "799920"
  },
  {
    "text": "running as the access they have um is very privileged perhaps often more so than it needs to be",
    "start": "799920",
    "end": "805040"
  },
  {
    "text": "so i think that's quite a key thing to factor in really um it's one that we we exploit regularly ourselves on",
    "start": "805040",
    "end": "810560"
  },
  {
    "text": "consultancy engagements and i think it's a matter of time before we start hearing about attackers doing that um you know if we're not already",
    "start": "810560",
    "end": "817440"
  },
  {
    "text": "so we've covered off then the telemetry sources so you know what are we going to use for our detections and we're taking a look",
    "start": "817440",
    "end": "823839"
  },
  {
    "start": "818000",
    "end": "936000"
  },
  {
    "text": "at some of the attacks that we've seen um over there kind of kind of four key areas there so",
    "start": "823839",
    "end": "829120"
  },
  {
    "text": "how do we start then how do we action this how do we build the effective attack detection and i think the the",
    "start": "829120",
    "end": "834720"
  },
  {
    "text": "methodology that we've employed over the past year um is kind of summed up with this model here so the first thing that we're gonna",
    "start": "834720",
    "end": "840639"
  },
  {
    "text": "do is threat model the environment understand which could be targeted what would the",
    "start": "840639",
    "end": "845680"
  },
  {
    "text": "attack paths look like hypothetic hypothetically going from initial compromise right through to achieving some",
    "start": "845680",
    "end": "851839"
  },
  {
    "text": "objective and what that objective is is again defined by the the specifics of your environment",
    "start": "851839",
    "end": "857120"
  },
  {
    "text": "if you're hosting some some sensitive data there then likely is that that's going to be um the objective for those attack paths",
    "start": "857120",
    "end": "862480"
  },
  {
    "text": "that's going to be the end goal so once you've defined what those attack paths could look like we need to prioritize we'd",
    "start": "862480",
    "end": "868399"
  },
  {
    "text": "say which of these have the highest impact which of them potentially is going to get the the attacker from a to b in the most expedient way if",
    "start": "868399",
    "end": "874639"
  },
  {
    "text": "there's an obvious part and obvious exposure and then that's the kind of path that we need to be paying most attention to",
    "start": "874639",
    "end": "880560"
  },
  {
    "text": "and then we need to understand the like atomic attacker actions that comprise those those end-to-end attacks so the",
    "start": "880560",
    "end": "886720"
  },
  {
    "text": "ttps the tactics the techniques the procedures what is an attacker going to do step by step to achieve this objective",
    "start": "886720",
    "end": "894320"
  },
  {
    "text": "and then the most obvious step is verifying that us as defenders have the telemetry we need",
    "start": "894320",
    "end": "899760"
  },
  {
    "text": "um to spot those things so if we have a given attack type against a given service we can take a",
    "start": "899760",
    "end": "904959"
  },
  {
    "text": "look at that and say do we have the service specific logs do we have the cloud travel api commands that relate to that",
    "start": "904959",
    "end": "910800"
  },
  {
    "text": "and in which case we're probably in a good place to start step five which is actually executing those attacker actions",
    "start": "910800",
    "end": "916160"
  },
  {
    "text": "and understand end to end if we have the detection cases that work or even as like a step zero",
    "start": "916160",
    "end": "921680"
  },
  {
    "text": "understanding what they might look like so we can say okay this is the specific api events um",
    "start": "921680",
    "end": "926720"
  },
  {
    "text": "that we can look for we can start building detections and fine-tuning those um to ultimately detect them should we",
    "start": "926720",
    "end": "931920"
  },
  {
    "text": "replay those attacks at a later date so i think one of the key messages that",
    "start": "931920",
    "end": "938399"
  },
  {
    "start": "936000",
    "end": "1017000"
  },
  {
    "text": "we've learned and working with a combination of this sort of the operational teams in some of these uh",
    "start": "938399",
    "end": "943839"
  },
  {
    "text": "these environments but also from the perspective of detection one of the most powerful things you can do as a",
    "start": "943839",
    "end": "950959"
  },
  {
    "text": "detection team in general not just in the cloud but especially in the cloud space and is move towards",
    "start": "950959",
    "end": "956079"
  },
  {
    "text": "detection as code basically and define your detections in a machine readable format something",
    "start": "956079",
    "end": "962800"
  },
  {
    "text": "that you can easily version control and that you can update over time and it provides an easy mean",
    "start": "962800",
    "end": "968000"
  },
  {
    "text": "to share knowledge within the team if it's a common format that everyone can read and then rather than just talking about",
    "start": "968000",
    "end": "973920"
  },
  {
    "text": "particular attacker activity at a higher level and how it works and explain these things and to your more junior analysts they",
    "start": "973920",
    "end": "979440"
  },
  {
    "text": "can go in and read the detections and really understand um you know exactly what this this particular technique's going to do under",
    "start": "979440",
    "end": "984880"
  },
  {
    "text": "the hood and we've seen a few key projects in the open source space around that um already and not least sigma and which is an",
    "start": "984880",
    "end": "992720"
  },
  {
    "text": "agnostic set of rules and that you can compile down then to splunk or queue whilst you're running um we've also seen",
    "start": "992720",
    "end": "999440"
  },
  {
    "text": "some interesting efforts with um jupiter notebooks um to build out a set of playbooks that",
    "start": "999440",
    "end": "1005440"
  },
  {
    "text": "you can run to hunt for specific attacker activity um so we took all of this and over the",
    "start": "1005440",
    "end": "1011040"
  },
  {
    "text": "course of the last year or so we've been working on um moving a lot of this stuff into the cloud at which point",
    "start": "1011040",
    "end": "1017040"
  },
  {
    "start": "1017000",
    "end": "1069000"
  },
  {
    "text": "we ended up with leonidas which is an open source tool we've we've released um so essentially the idea with leonidas",
    "start": "1017040",
    "end": "1024400"
  },
  {
    "text": "is that you have your security team your analysts the purple team as red teamers who are executing these test cases as well",
    "start": "1024400",
    "end": "1031120"
  },
  {
    "text": "and and they define themselves a new ttp that's committed into a into a repository",
    "start": "1031120",
    "end": "1036400"
  },
  {
    "text": "and we then have a cicd pipeline that actually builds out a serverless function based on those um definitions uh we then",
    "start": "1036400",
    "end": "1044240"
  },
  {
    "text": "expose that serverless function to the purple team and they can use that to execute attacks so you make a single web",
    "start": "1044240",
    "end": "1049919"
  },
  {
    "text": "request and to execute a particular attack at ttp um that's executed against whatever",
    "start": "1049919",
    "end": "1055440"
  },
  {
    "text": "target resources you've got set up and we then feed those logs uh straight into the the scene",
    "start": "1055440",
    "end": "1060880"
  },
  {
    "text": "and you can then have your analysts hunt for the activity that we just executed and by this api that we've exposed",
    "start": "1060880",
    "end": "1069039"
  },
  {
    "start": "1069000",
    "end": "1110000"
  },
  {
    "text": "so i think one of the most critical things to it is that um it's a fairly easy format to work with the definitions are quite short and",
    "start": "1069280",
    "end": "1075440"
  },
  {
    "text": "sweet and the underlying framework takes care of basically everything about how the api itself functions um including how",
    "start": "1075440",
    "end": "1082880"
  },
  {
    "text": "different identities within the cloud are handled you know for aws you can hand it roles to assume you can hand it um",
    "start": "1082880",
    "end": "1088799"
  },
  {
    "text": "access keys and secret access key pairs and all the analyst has to do is write a single one or two of python to say",
    "start": "1088799",
    "end": "1096000"
  },
  {
    "text": "essentially call this botox 3 function for aws or the azure apis for azure um and so we uh",
    "start": "1096000",
    "end": "1102240"
  },
  {
    "text": "we then generate that into an api that runs inside that service function",
    "start": "1102240",
    "end": "1107679"
  },
  {
    "text": "these definitions also then contain um detection cases so we write the",
    "start": "1107679",
    "end": "1113440"
  },
  {
    "start": "1110000",
    "end": "1132000"
  },
  {
    "text": "sigma rules into the same place that we we write the detection so that you've got a single file that defines exactly how to execute the",
    "start": "1113440",
    "end": "1120559"
  },
  {
    "text": "attack uh exactly how to detect it and that lives as a single source of truth for this attacker ttp that we",
    "start": "1120559",
    "end": "1126160"
  },
  {
    "text": "we have here and we can take this definition and we can compile it down to to work with the same platform that we're using",
    "start": "1126160",
    "end": "1132799"
  },
  {
    "start": "1132000",
    "end": "1159000"
  },
  {
    "text": "and we can also generate documentation off it so one of the really powerful things we've found with this is it's an opportunity to embed",
    "start": "1132799",
    "end": "1139600"
  },
  {
    "text": "uh human contacts and notes about your organization's specific environments within your organization to say things like this probably is",
    "start": "1139600",
    "end": "1146000"
  },
  {
    "text": "usually malicious but in the case of these two particular projects their aws accounts do this all the time for business reasons x y and z",
    "start": "1146000",
    "end": "1152400"
  },
  {
    "text": "so therefore factor that in when you're triaging these events um and that's that's proven pretty",
    "start": "1152400",
    "end": "1157440"
  },
  {
    "text": "useful too so um let's let's demo it so this is",
    "start": "1157440",
    "end": "1162960"
  },
  {
    "start": "1159000",
    "end": "1705000"
  },
  {
    "text": "leonidas this is the web api that we expose that uh allows you to execute those test cases that",
    "start": "1162960",
    "end": "1168960"
  },
  {
    "text": "i've just been talking about and this is built by a aws native ci cd pipeline for azure and gcp we're",
    "start": "1168960",
    "end": "1175840"
  },
  {
    "text": "building out using their native tooling as well right now this is hosted in a lambda function with an api gateway in front of",
    "start": "1175840",
    "end": "1181600"
  },
  {
    "text": "it and you can see here we've got a range of different test cases across the miter kill chain so let's dig into to one of them as an",
    "start": "1181600",
    "end": "1188720"
  },
  {
    "text": "example perhaps we have some i am access and we have a user that we've created as a",
    "start": "1188720",
    "end": "1195120"
  },
  {
    "text": "backdoor and so let's add a policy to to that user and you can see here not only can we pass in",
    "start": "1195120",
    "end": "1200400"
  },
  {
    "text": "the user in the policy that we're trying to target here but also actually we can pass in a variety of identity based data",
    "start": "1200400",
    "end": "1206880"
  },
  {
    "text": "to allow leonidas to execute the test case as something other than itself and it",
    "start": "1206880",
    "end": "1212880"
  },
  {
    "text": "comes with an i am role and the permissions for that i am role are automatically generated",
    "start": "1212880",
    "end": "1218720"
  },
  {
    "text": "by the build scripts but it's beneficial to be able to trigger test cases as a range of different identities so in the",
    "start": "1218720",
    "end": "1224720"
  },
  {
    "text": "case of aws uh we can also pass in an arm that's for a role that we wish to assume or we",
    "start": "1224720",
    "end": "1230799"
  },
  {
    "text": "can pass in an access key secret access key key pair we can also specify obviously the the region that we're trying to target",
    "start": "1230799",
    "end": "1237360"
  },
  {
    "text": "now this interface is quite nice for exploring the api but for security reasons in order to",
    "start": "1237360",
    "end": "1243039"
  },
  {
    "text": "trigger any of these test cases you need to supply an api parameter api key parameter sorry alongside it",
    "start": "1243039",
    "end": "1249520"
  },
  {
    "text": "um in order to to get that executing properly so you can either use leo which is a",
    "start": "1249520",
    "end": "1255520"
  },
  {
    "text": "command line tool that runs uh encapsulates these apis you run it locally and it speaks to",
    "start": "1255520",
    "end": "1261200"
  },
  {
    "text": "the leonidas api but actually we've had quite a lot of success uh working with jupiter so jupiter for",
    "start": "1261200",
    "end": "1267280"
  },
  {
    "text": "those who aren't familiar is uh essentially a web-based interface to a python interpreter and that allows you",
    "start": "1267280",
    "end": "1273760"
  },
  {
    "text": "to embed code in and long documents document content and generate graphs and tables and all of these kinds",
    "start": "1273760",
    "end": "1280000"
  },
  {
    "text": "of things it's a pretty popular data science tool but we've also found it very effective in the detection and purple teaming",
    "start": "1280000",
    "end": "1285360"
  },
  {
    "text": "space so here what we're doing is uh you know we've got this leonidas api endpoint it's the same one we were",
    "start": "1285360",
    "end": "1291600"
  },
  {
    "text": "looking at previously um and so we're going to load in the set of test cases",
    "start": "1291600",
    "end": "1297120"
  },
  {
    "text": "from this case config and the leonidas framework will also generate this this yaml file for you that defines all the",
    "start": "1297120",
    "end": "1302480"
  },
  {
    "text": "test cases but you can see here we've got all the test cases then loaded in into this jupyter notebook and so for",
    "start": "1302480",
    "end": "1309760"
  },
  {
    "text": "instance we were looking at the adding policy to a user one before you",
    "start": "1309760",
    "end": "1315840"
  },
  {
    "text": "can see that here row number 35 and so we'll make use of that in a bit but then to start actually triggering some test",
    "start": "1315840",
    "end": "1321280"
  },
  {
    "text": "cases uh you can see here we're calling run case as a simple wrapper function around that um that http api",
    "start": "1321280",
    "end": "1328880"
  },
  {
    "text": "and we're going to call get caller identity which you run to tell you who you are what the",
    "start": "1328880",
    "end": "1334080"
  },
  {
    "text": "identity of the the current user or entity is and so here you can see um leonidas has assumed a role",
    "start": "1334080",
    "end": "1339919"
  },
  {
    "text": "um it's this leonardo's devop role and so that's the the default i am role that the lambda function has assigned to it",
    "start": "1339919",
    "end": "1345600"
  },
  {
    "text": "when it executes to allow it to interact with the aws apis themselves so let's assume now that",
    "start": "1345600",
    "end": "1352000"
  },
  {
    "text": "we are an attacker we have a vulnerability in this lambda function that has allowed us to gain",
    "start": "1352000",
    "end": "1358000"
  },
  {
    "text": "some sort of code execution or command injection or something and so we're now um executing these uh attacker actions",
    "start": "1358000",
    "end": "1365200"
  },
  {
    "text": "against the underlying aws account so first off let's uh enumerate these",
    "start": "1365200",
    "end": "1371200"
  },
  {
    "text": "guard duty detectors that might be listening to us and so in this case we can see guard duty uh is running we've got detector id here",
    "start": "1371200",
    "end": "1378720"
  },
  {
    "text": "so if we try and do anything too obvious guard duty might spot us um but also let's take a look at whether",
    "start": "1378720",
    "end": "1384320"
  },
  {
    "text": "they've got any cloud trails in the current region so here we can see we've actually got two cloud trails listening to us if",
    "start": "1384320",
    "end": "1390480"
  },
  {
    "text": "their defenders are paying attention we probably will get spotted but we're going to carry on anyway and what we're going to try and do now",
    "start": "1390480",
    "end": "1397200"
  },
  {
    "text": "is add an iron user the leonardis function i am role comes",
    "start": "1397200",
    "end": "1402640"
  },
  {
    "text": "with a certain set permissions defined in the test cases to allow it to always execute these these particular",
    "start": "1402640",
    "end": "1408480"
  },
  {
    "text": "test cases that it's built with so we know this is going to succeed obviously if you've got permissions boundaries or other things configured it",
    "start": "1408480",
    "end": "1414720"
  },
  {
    "text": "might not but for the sake of this exercise um you know we're going to create a new user um so we've got this new user created um we",
    "start": "1414720",
    "end": "1422159"
  },
  {
    "text": "passed in here into uh into that api call and we're now going to add an api key to that user to",
    "start": "1422159",
    "end": "1427919"
  },
  {
    "text": "make sure that we can interact with aws as that user for good measure we're also going to add on the",
    "start": "1427919",
    "end": "1433360"
  },
  {
    "text": "administrator access managed policy obviously pretty bad practice but it makes the rest of the demo work quite nicely",
    "start": "1433360",
    "end": "1438480"
  },
  {
    "text": "so we've now done that and what we can now start doing is running other test cases using those",
    "start": "1438480",
    "end": "1443760"
  },
  {
    "text": "access keys that we generated previously that are in our jupyter notebook so i'm going to rerun that get caller",
    "start": "1443760",
    "end": "1449360"
  },
  {
    "text": "identity test case but you can see now we're actually passing in this set of credentials that we've defined here and so if we run that now you'll",
    "start": "1449360",
    "end": "1457039"
  },
  {
    "text": "see that when we come back from the caller identity call we're now",
    "start": "1457039",
    "end": "1462240"
  },
  {
    "text": "running as a user account in fact the user account we just created and so we've changed the entity that",
    "start": "1462240",
    "end": "1469039"
  },
  {
    "text": "we're executing these test cases as and this allows us to simulate a variety of different",
    "start": "1469039",
    "end": "1474320"
  },
  {
    "text": "sort of attackers start points and assume different types of breaches these kinds of things so then what we can do from here we can",
    "start": "1474320",
    "end": "1482240"
  },
  {
    "text": "list the secrets in secrets manager um you know we're now an attacker who's poking around uh trying to find uh secret data or",
    "start": "1482240",
    "end": "1489760"
  },
  {
    "text": "steal further uh access keys credentials to get further into the environment um and it turns out we've got a secret",
    "start": "1489760",
    "end": "1496960"
  },
  {
    "text": "it's called leonardo's created secrets so what we're going to do is uh grab the contents of that with",
    "start": "1496960",
    "end": "1502400"
  },
  {
    "text": "another leonardo's test case and you can see here we've got some some secret data coming back from the",
    "start": "1502400",
    "end": "1508080"
  },
  {
    "text": "aws apis there so what we've done is we've executed an entire kill chain and we've simulated an application",
    "start": "1508080",
    "end": "1513919"
  },
  {
    "text": "vulnerability inside the lambda function as a start point we've done some enumeration to see who",
    "start": "1513919",
    "end": "1518960"
  },
  {
    "text": "we are what uh defenses are likely to be watching for us um we've created a persistence mechanism",
    "start": "1518960",
    "end": "1525360"
  },
  {
    "text": "by creating an ion user adding an api key to it adding some iron permissions to that",
    "start": "1525360",
    "end": "1531039"
  },
  {
    "text": "user that we just created and then we've used that new user to enumerate the contents of secrets manager",
    "start": "1531039",
    "end": "1536159"
  },
  {
    "text": "and dump some secrets out and we've done all of that in a programmatic fashion and in a way that doesn't rely on the",
    "start": "1536159",
    "end": "1542000"
  },
  {
    "text": "analysts having an underlying understanding of what these test cases are how the aws apis work",
    "start": "1542000",
    "end": "1547360"
  },
  {
    "text": "and we're simply triggering the test cases and the individual ttps one by one as part of this larger kill chain",
    "start": "1547360",
    "end": "1557440"
  },
  {
    "text": "now one of the benefits to leonidas is not only do we have the ability to trigger these test cases automatically it also generates",
    "start": "1557440",
    "end": "1564480"
  },
  {
    "text": "its own logs so you can compare and contrast them with what you're seeing in your scene and what alerts you've got firing",
    "start": "1564480",
    "end": "1570240"
  },
  {
    "text": "so let's jump into the the latest set of logs here and so what we'll find is yeah looking",
    "start": "1570240",
    "end": "1577200"
  },
  {
    "text": "at the top you can see we've got an sts get caller identity call followed by lisgaard duty detectors",
    "start": "1577200",
    "end": "1582880"
  },
  {
    "text": "enumerate cloud trails for a given region these are are all the test cases and you can see here that the arguments",
    "start": "1582880",
    "end": "1589120"
  },
  {
    "text": "we're passing in are also represented so we can track uh exactly how the test cases were executed what parameters were passed in",
    "start": "1589120",
    "end": "1595760"
  },
  {
    "text": "and if we go down to where we then run the second caller identity you can see also that the access key id",
    "start": "1595760",
    "end": "1601840"
  },
  {
    "text": "that we passed in is recorded and we have that on record so that we can understand what uh entity these these test cases",
    "start": "1601840",
    "end": "1609039"
  },
  {
    "text": "will run as we can feed all this data into a centralized logging platform or leave it",
    "start": "1609039",
    "end": "1614080"
  },
  {
    "text": "in cloudwatch in fact if you prefer but we can diff this then against what we're seeing in the scene",
    "start": "1614080",
    "end": "1619120"
  },
  {
    "text": "and it allows us to get a better understanding of whether our test cases worked or not",
    "start": "1619120",
    "end": "1624320"
  },
  {
    "text": "and we have those logs there for posterity uh it doesn't require the analysts to take detailed notes as they",
    "start": "1624320",
    "end": "1629600"
  },
  {
    "text": "go because everything they do is recorded automatically for you",
    "start": "1629600",
    "end": "1634158"
  },
  {
    "text": "okay so one of the other really powerful things then is off the back of that we've got leonidas running we can",
    "start": "1634799",
    "end": "1640399"
  },
  {
    "text": "execute these test cases we can look at the logs in our scene but actually leonidas itself also",
    "start": "1640399",
    "end": "1645440"
  },
  {
    "text": "produces his own set of logs as to what attacker actions were executed and you know what parameters what context",
    "start": "1645440",
    "end": "1651760"
  },
  {
    "text": "what resources they targeted and we can actually feed all of that somewhere as well into your scene or to",
    "start": "1651760",
    "end": "1656880"
  },
  {
    "text": "another platform and we can then essentially diff the use cases that were triggered in leonidas",
    "start": "1656880",
    "end": "1662000"
  },
  {
    "text": "against the events in the scene and we can see whether the detections that we were expecting to",
    "start": "1662000",
    "end": "1667440"
  },
  {
    "text": "trigger and you know either as alerts or as tags or whatever else whether those happen in the correct way",
    "start": "1667440",
    "end": "1673440"
  },
  {
    "text": "and that means that over time actually we can regression test improvements to our detective capability right",
    "start": "1673440",
    "end": "1679200"
  },
  {
    "text": "we can add additional test cases uh additional use cases even we can then",
    "start": "1679200",
    "end": "1685039"
  },
  {
    "text": "verify that doing so hasn't broken any others we can update uh test cases to to match new changes by the cloud",
    "start": "1685039",
    "end": "1691440"
  },
  {
    "text": "providers catch additional things uh we can verify that we've not backslid in the process and actually that means",
    "start": "1691440",
    "end": "1696559"
  },
  {
    "text": "then we can iterate much faster because we're confident in our ability to catch mistakes as we go",
    "start": "1696559",
    "end": "1703279"
  },
  {
    "start": "1705000",
    "end": "1780000"
  },
  {
    "text": "yeah absolutely so conclusions then well it might sound corny but i guess the ultimate thing here is that",
    "start": "1705440",
    "end": "1711520"
  },
  {
    "text": "detection is a journey right so your cloud environments are changing all the time and that could be because",
    "start": "1711520",
    "end": "1716720"
  },
  {
    "text": "you're implementing new features you're changing the way you do that you're changing the services that you utilize so ultimately your detection has to",
    "start": "1716720",
    "end": "1723200"
  },
  {
    "text": "change with it um we can also think about context think about how important that is",
    "start": "1723200",
    "end": "1728880"
  },
  {
    "text": "and not only is that case of you know it might seem as though that's an issue for you that's that's to your disadvantage",
    "start": "1728880",
    "end": "1734320"
  },
  {
    "text": "you can actually use that to make more effective detections if you know the behaviors of your environment inside",
    "start": "1734320",
    "end": "1739360"
  },
  {
    "text": "out any deviation from that could build a high fidelity alert so you can use that to your advantage um",
    "start": "1739360",
    "end": "1745600"
  },
  {
    "text": "and then lastly as we kind of discussed here that threat intelligence problem not knowing what bad looks like what we should hunt for",
    "start": "1745600",
    "end": "1752720"
  },
  {
    "text": "the ability to codify and ultimately share the use cases that you build is going to aid knowledge sharing and",
    "start": "1752720",
    "end": "1758000"
  },
  {
    "text": "ultimately help all of us to to build more effective crowd detection really and then we talked about that threat",
    "start": "1758000",
    "end": "1763919"
  },
  {
    "text": "modelling process going end-to-end identifying attack paths identifying potential needs for new telemetry or to kind of decommission",
    "start": "1763919",
    "end": "1770399"
  },
  {
    "text": "something we're not using anymore that constant cycle is something we can use to make sure that we're always kind of the most equipped we can be to",
    "start": "1770399",
    "end": "1776960"
  },
  {
    "text": "detect malicious activity in the cloud",
    "start": "1776960",
    "end": "1781840"
  },
  {
    "text": "and then lastly um you know please do a go with leonidas let me know what you think of it and it's available up on",
    "start": "1782720",
    "end": "1788080"
  },
  {
    "text": "github f-secure labs slash leonidas we currently support aws",
    "start": "1788080",
    "end": "1793279"
  },
  {
    "text": "azure and gcp are actually pretty close to being done we're getting pretty far with that now um at the moment we've got 45 test cases",
    "start": "1793279",
    "end": "1799440"
  },
  {
    "text": "for aws you know you saw some of the demo earlier there's quite a few others too um go play with it see what you think",
    "start": "1799440",
    "end": "1805279"
  },
  {
    "text": "and let me know uh you know equally those test cases are up there because they've what we've needed so far",
    "start": "1805279",
    "end": "1810559"
  },
  {
    "text": "but actually um they're pretty easy to write so please do contribute your own pull requests more than welcome",
    "start": "1810559",
    "end": "1816080"
  },
  {
    "text": "awesome yeah and that's it from us thank you",
    "start": "1816080",
    "end": "1821200"
  }
]