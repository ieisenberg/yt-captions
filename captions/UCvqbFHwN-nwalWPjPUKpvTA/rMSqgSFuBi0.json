[
  {
    "start": "0",
    "end": "120000"
  },
  {
    "text": "all right hello everyone welcome thanks for joining us on this talk where we're gonna talk a lot about the complexities",
    "start": "30",
    "end": "5490"
  },
  {
    "text": "of micro service based architectures and how information that can be extracted from Detroit distributed tracing",
    "start": "5490",
    "end": "11309"
  },
  {
    "text": "information specifically the aggregate information can be very useful in troubleshooting these types of environments as the title of the slide",
    "start": "11309",
    "end": "18210"
  },
  {
    "text": "indicates we're actually going to be using visualization extensively throughout this talk to show some of the power of the eye or get information that",
    "start": "18210",
    "end": "24840"
  },
  {
    "text": "you can extract now the claim that we're going to make is that systems that are",
    "start": "24840",
    "end": "30599"
  },
  {
    "text": "moving to more micro services based and some of the biggest cloud providers and vendors in the market today the really dealing with the issue of the",
    "start": "30599",
    "end": "37170"
  },
  {
    "text": "complexity of their back-end infrastructure and they've really reached the the level where it's really",
    "start": "37170",
    "end": "42899"
  },
  {
    "text": "hard to understand all the nuances of how the architecture works end to end in fact I'm sure URI will tell you at uber",
    "start": "42899",
    "end": "49110"
  },
  {
    "text": "probably no one understands how the entire architecture can they can frame it in their mind visually from an",
    "start": "49110",
    "end": "54210"
  },
  {
    "text": "end-to-end perspective but at the end of the day they do understand how their application functions and that's",
    "start": "54210",
    "end": "60539"
  },
  {
    "text": "critical in order to operate it and make sure that's available to end-users like if you're on the uber app today and",
    "start": "60539",
    "end": "66960"
  },
  {
    "text": "you're in like some neighborhood that you're not too comfortable with and the uber app is like sorry we're down for",
    "start": "66960",
    "end": "72510"
  },
  {
    "text": "maintenance you probably wouldn't be very happy about that and as you think about SAS based applications or cloud",
    "start": "72510",
    "end": "78840"
  },
  {
    "text": "providers providing cloud services natively to end-users there's kind of an expectation that that service is always",
    "start": "78840",
    "end": "85049"
  },
  {
    "text": "available like downtime really is not an option and when downtime happens it",
    "start": "85049",
    "end": "90150"
  },
  {
    "text": "really impacts the business as well as end users experience so developers spend",
    "start": "90150",
    "end": "96869"
  },
  {
    "text": "a lot of time making sure that their application is highly available there's been a lot of time testing it before",
    "start": "96869",
    "end": "102060"
  },
  {
    "text": "they release the production they go through fully automated CIC IDIC D delivery pipelines and they follow",
    "start": "102060",
    "end": "108720"
  },
  {
    "text": "really good DevOps culture and best practices to try to minimize the likelihood of an incident or an outage",
    "start": "108720",
    "end": "114899"
  },
  {
    "text": "occurring button at the end of the day outages are inevitable in fact if we",
    "start": "114899",
    "end": "120840"
  },
  {
    "text": "look over one month this past summer we can point out at least four unique significant outages that occurred that",
    "start": "120840",
    "end": "127560"
  },
  {
    "text": "were publicly known about from four major vendors or cloud providers big names companies that you would",
    "start": "127560",
    "end": "134420"
  },
  {
    "text": "expect to have this kind of solved but because they're dealing with really complex architectures really complex",
    "start": "134420",
    "end": "140629"
  },
  {
    "text": "backends that dynamically change the dependencies between them change the communication paths change it can be",
    "start": "140629",
    "end": "146810"
  },
  {
    "text": "really difficult to ensure that things are behaving the way that you expect now if you're on call you have to deal with",
    "start": "146810",
    "end": "154760"
  },
  {
    "text": "some of these issues I guess quick show of hands how my feel we're on call today",
    "start": "154760",
    "end": "159790"
  },
  {
    "text": "percentage maybe 40 50 percent so a fair number of people this may resonate with you as part of the on call one of the",
    "start": "160319",
    "end": "167340"
  },
  {
    "text": "most important things that you need to do actually mitigate the issue as quickly as possible",
    "start": "167340",
    "end": "172379"
  },
  {
    "text": "sure you want to know why it happens you want to prevent it from happening again you want to learn lessons to improve",
    "start": "172379",
    "end": "177989"
  },
  {
    "text": "your processes so that you can ensure that your system is available but knowing that an outage is going to be",
    "start": "177989",
    "end": "183900"
  },
  {
    "text": "inevitable anyway as an on-call person you want to mitigate as quickly as possible the reason for this is because it's",
    "start": "183900",
    "end": "190230"
  },
  {
    "text": "impacting your business could be costing the business a lot of money and of course it's impacting end-users they're",
    "start": "190230",
    "end": "195629"
  },
  {
    "text": "trying to leverage the services that you are providing and they have an expectation that is available all the",
    "start": "195629",
    "end": "200790"
  },
  {
    "text": "time now if you're following some good practices like for example you deployed your application multiple different",
    "start": "200790",
    "end": "206639"
  },
  {
    "text": "availability zones you might be able to do something like failover traffic to a different availability zone to mitigate",
    "start": "206639",
    "end": "212699"
  },
  {
    "text": "the issue but can you really do that without understanding the implications or the blast radius of the current",
    "start": "212699",
    "end": "217889"
  },
  {
    "text": "incident that's going on what happens if that incidents impacting the entire region well then that mitigation tactics",
    "start": "217889",
    "end": "224069"
  },
  {
    "text": "not going to help so at the end of the day you need to be able to investigate you need to be able to do it quickly so",
    "start": "224069",
    "end": "229169"
  },
  {
    "text": "you can figure out what happened and where and then you can get to the why after the fact now that's why we're here",
    "start": "229169",
    "end": "235109"
  },
  {
    "start": "234000",
    "end": "397000"
  },
  {
    "text": "today to talk about observability because observability allows you to ask questions of your system to figure out",
    "start": "235109",
    "end": "240329"
  },
  {
    "text": "what's going on we're gonna spend a lot of time showing you visually how through traces and aggregate information",
    "start": "240329",
    "end": "245689"
  },
  {
    "text": "observability can really lay the groundwork for you to deal with issues in these complex environment",
    "start": "245689",
    "end": "252259"
  },
  {
    "text": "thanks Steve so as a as an agenda for this talk we will give a little bit more",
    "start": "252650",
    "end": "258979"
  },
  {
    "text": "introduction into why distributive tracing and most people are familiar with it and we'll go quickly just really",
    "start": "258979",
    "end": "264860"
  },
  {
    "text": "just to make a point rather than give you an in-depth introduction to tracing I will talk about our sorry",
    "start": "264860",
    "end": "273550"
  },
  {
    "text": "well I will talk about why so white race",
    "start": "273870",
    "end": "280060"
  },
  {
    "text": "is a very good tool to tell you a story about what's going on in your system right and then will tell you why they",
    "start": "280060",
    "end": "286389"
  },
  {
    "text": "are not a good tool and what we can do better and especially with the visualizations and we'll have a time for",
    "start": "286389",
    "end": "292029"
  },
  {
    "text": "Q&A hopefully so I skipped you the slide so there's an introduction I work at",
    "start": "292029",
    "end": "297189"
  },
  {
    "text": "uber for about four four four four four and a half years all this time on observability team and my primary focus",
    "start": "297189",
    "end": "305469"
  },
  {
    "text": "is distributed tracing at uber we started the project Jager which is now",
    "start": "305469",
    "end": "311319"
  },
  {
    "text": "agency of graduated project we graduated in October I also like very much",
    "start": "311319",
    "end": "317439"
  },
  {
    "text": "involved in open tracing and open telemetry and so happens I wrote a book earlier this year about the tracing so",
    "start": "317439",
    "end": "323590"
  },
  {
    "text": "you can find it on my website if you interested it talks about a lot of things related to tracing on how you",
    "start": "323590",
    "end": "328960"
  },
  {
    "text": "deploy it how Iran and production etc and Steve will give you a bit more intro",
    "start": "328960",
    "end": "335680"
  },
  {
    "text": "for himself thank you my name's Steve Flanders I was previously at a company called a mission where I was head of",
    "start": "335680",
    "end": "341890"
  },
  {
    "text": "products recently we required by Splunk so now director of engineering at Splunk we actually helped co-create what's",
    "start": "341890",
    "end": "348790"
  },
  {
    "text": "known as the open census collector are open sent to service and the opens limit tree collector these are open source",
    "start": "348790",
    "end": "354280"
  },
  {
    "text": "projects that make it really easy to get telemetry data both metrics and distributed traces in to process that",
    "start": "354280",
    "end": "360850"
  },
  {
    "text": "data and to send it to the back end or back ends of your choice it actually supports a broad range of open source",
    "start": "360850",
    "end": "366940"
  },
  {
    "text": "projects including Jaeger and Prometheus it has the ability of performing some advanced features on top of the data",
    "start": "366940",
    "end": "372340"
  },
  {
    "text": "it's collecting including tag addition as well as redaction compression retry encryption features like tail based",
    "start": "372340",
    "end": "379090"
  },
  {
    "text": "sampling are all natively built-in and then it has the ability of sending to a variety of different backends both open",
    "start": "379090",
    "end": "384610"
  },
  {
    "text": "source and commercial so it serves as a vendor agnostic way to help collect limitary information in your",
    "start": "384610",
    "end": "389830"
  },
  {
    "text": "environments and then you can process it in the backend if you're interested in learning more about me I have a blog and",
    "start": "389830",
    "end": "395560"
  },
  {
    "text": "Twitter information on this alright so with that we're gonna kick off the why of distributed tracing I guess I'll ask",
    "start": "395560",
    "end": "402190"
  },
  {
    "start": "397000",
    "end": "450000"
  },
  {
    "text": "another question how many people leverage micro services or moving to a micro services based architecture in",
    "start": "402190",
    "end": "407440"
  },
  {
    "text": "their environment today a 8090 percent not too surprising how many of you are",
    "start": "407440",
    "end": "412840"
  },
  {
    "text": "leveraging distributed tracing information to observe those environments Wow good number of hands",
    "start": "412840",
    "end": "418660"
  },
  {
    "text": "even more than I expected at least at least half that percentage raised sprays hands now distributed tracing is very",
    "start": "418660",
    "end": "424030"
  },
  {
    "text": "very powerful because it can help you figure out what's going on in your environment where other telemetry points",
    "start": "424030",
    "end": "429790"
  },
  {
    "text": "they may not be able to as you are kind of mentioned we're not going to cover some of the fundamental pieces of like",
    "start": "429790",
    "end": "435340"
  },
  {
    "text": "what distributed tracing is or some of the core concepts like definitions of spans if you're interested in that",
    "start": "435340",
    "end": "440950"
  },
  {
    "text": "information both you and I have done previous talks at cube cons you can look that up so what I do want to talk about",
    "start": "440950",
    "end": "446170"
  },
  {
    "text": "is why you should care about distributed tracing information and really it can be summarized in in these few words as we",
    "start": "446170",
    "end": "453610"
  },
  {
    "text": "start dealing with more complex micro services based architectures those deep systems if you will it can be very",
    "start": "453610",
    "end": "460270"
  },
  {
    "text": "difficult to figure out what's going on and if you read any paper on distributed trait on distributed systems you",
    "start": "460270",
    "end": "466129"
  },
  {
    "text": "probably seen the assumption that's communication between nodes is unreliable and in the microservices",
    "start": "466129",
    "end": "472969"
  },
  {
    "text": "world the answer to that is to actually double down on those unreliable connections so as you move from a",
    "start": "472969",
    "end": "478669"
  },
  {
    "text": "monolithic application to a microservices based application the number of failure modes and failure possibilities grow exponentially and you",
    "start": "478669",
    "end": "486709"
  },
  {
    "text": "need to be able to deal with these scenarios to ensure that your system is highly available now many of you have",
    "start": "486709",
    "end": "492439"
  },
  {
    "text": "probably seen this slide before yearing I actually talked about potentially swapping it out with another image but it really does capture the",
    "start": "492439",
    "end": "498619"
  },
  {
    "text": "problem statement pretty well so we decided to keep it in this is a visual representation of ubers back-end",
    "start": "498619",
    "end": "505149"
  },
  {
    "text": "microservice is based they have north of 3000 microservices today this is actually a visual representation",
    "start": "505149",
    "end": "511339"
  },
  {
    "text": "depicted from the Jaeger UI every circle represents a service the size of that",
    "start": "511339",
    "end": "516800"
  },
  {
    "text": "circle represents the amount of traffic that is receiving and then the lines connecting them as the services service communication that's going on now if you",
    "start": "516800",
    "end": "524660"
  },
  {
    "text": "were to open the uber app and go ahead and click the button to order an uber right now that would go ahead and issue",
    "start": "524660",
    "end": "529939"
  },
  {
    "text": "a request through ubers backends which would call a variety of different micro services and of course depending on the",
    "start": "529939",
    "end": "535459"
  },
  {
    "text": "operation that you're doing whether you're a driver or an end user whether you're entering payment information the request paths are going to be very",
    "start": "535459",
    "end": "541250"
  },
  {
    "text": "different but on the surface this is basically a request or trace through the backend system and things could go wrong",
    "start": "541250",
    "end": "548149"
  },
  {
    "text": "at any step there and you need to understand how the system behaves so you can mitigate that when issues arise as you can see",
    "start": "548149",
    "end": "554750"
  },
  {
    "text": "distribute transactions can be very complex this was one example but there's hundreds of thousands of these happening",
    "start": "554750",
    "end": "559939"
  },
  {
    "text": "every second in this environments an investigation for actual incidents usually starts with a high-level",
    "start": "559939",
    "end": "565399"
  },
  {
    "text": "business metric like for example let's say the number of ubers being booked in New York City is currently down why well",
    "start": "565399",
    "end": "572930"
  },
  {
    "text": "I need to go look at my observability information to really answer those questions and when the art architecture",
    "start": "572930",
    "end": "578449"
  },
  {
    "text": "is so complex it's actually hard to troubleshoot the outage and get to root cause quickly at the end of the day you",
    "start": "578449",
    "end": "584990"
  },
  {
    "text": "want to know what caused it but arguably that's usually more that's usually easier than determining what happened",
    "start": "584990",
    "end": "591709"
  },
  {
    "text": "and where it happened in the environments think of it this way I'm a service owner you tell me there's something wrong with my service you can",
    "start": "591709",
    "end": "597529"
  },
  {
    "text": "reproduce the issue quickly I probably have ways of investigating that particular issue and mitigating it",
    "start": "597529",
    "end": "603510"
  },
  {
    "text": "very quickly but how did we get to that state where I knew that this service and this particular path was causing all the",
    "start": "603510",
    "end": "608970"
  },
  {
    "text": "problems as an on-call engineer you typically don't have that insights so it's your responsibility to quickly",
    "start": "608970",
    "end": "614520"
  },
  {
    "text": "figure out what and where in the environment this is happening this can be extremely difficult and typically takes more time and practice than",
    "start": "614520",
    "end": "621330"
  },
  {
    "text": "determining the why and the root cause and remediating that for the long term now this is where observability comes in",
    "start": "621330",
    "end": "627840"
  },
  {
    "text": "and in a way it's a word that captures the system's ability to really answer questions about the particular",
    "start": "627840",
    "end": "633150"
  },
  {
    "text": "environment this should not be confused with monitoring now there's many different ways to look at the differences between monitoring",
    "start": "633150",
    "end": "639330"
  },
  {
    "text": "observability but one particular way that I like is monitoring is typically from more of the known knowns I know",
    "start": "639330",
    "end": "646650"
  },
  {
    "text": "what's going to happen I know the behavior I have created processes to address these I have alerts in place to",
    "start": "646650",
    "end": "652620"
  },
  {
    "text": "tell me maybe proactively before they happen I have run books that articulate how to remediate it or I have Auto remediation",
    "start": "652620",
    "end": "658650"
  },
  {
    "text": "in place observability on the other side is really for the unknown unknowns I don't know how the system is going to",
    "start": "658650",
    "end": "664740"
  },
  {
    "text": "behave the system is dynamically changing I need to be able to ask questions of this telemetry data to figure out what's going on and to",
    "start": "664740",
    "end": "671010"
  },
  {
    "text": "actually mitigate issues so observability is trying to solve a",
    "start": "671010",
    "end": "676769"
  },
  {
    "start": "674000",
    "end": "712000"
  },
  {
    "text": "couple key things what went wrong now if you think about it from a tracing perspective this typically includes your",
    "start": "676769",
    "end": "682679"
  },
  {
    "text": "red metrics or requests errors and duration so this could be issues with increase the number of requests some",
    "start": "682679",
    "end": "688829"
  },
  {
    "text": "sort of timeout going on or an error that's propagating through your system the where did it go wrong it could be",
    "start": "688829",
    "end": "694410"
  },
  {
    "text": "service to service communication it could be a dependency on a third party service that you're leveraging it could",
    "start": "694410",
    "end": "699629"
  },
  {
    "text": "be infrastructure related things and then of course why did it go wrong is this a network contention issue is it",
    "start": "699629",
    "end": "706079"
  },
  {
    "text": "a deploy issue it is a configuration issue in my environment and how can I remediate that very quickly now as it",
    "start": "706079",
    "end": "712859"
  },
  {
    "start": "712000",
    "end": "768000"
  },
  {
    "text": "turns out distributed tracing is actually a unique position to address all of these problems and that's because",
    "start": "712859",
    "end": "718589"
  },
  {
    "text": "it has context and correlation so if you look at other telemetry data points like metrics and logs they can tell you that",
    "start": "718589",
    "end": "724919"
  },
  {
    "text": "something happens but can't necessarily stick stitch together the entire picture in a microservices based architecture",
    "start": "724919",
    "end": "731359"
  },
  {
    "text": "distributed tracing actually relies on context propagation so it can it understands a request through your",
    "start": "731359",
    "end": "737339"
  },
  {
    "text": "system as it's calling other micro services it understands where errors originated from and how they propagate",
    "start": "737339",
    "end": "742439"
  },
  {
    "text": "through your stack this is extremely powerful because it can actually enhance metrics and logs and help you in",
    "start": "742439",
    "end": "747959"
  },
  {
    "text": "investigating incidents doing performance analysis dealing with deployment issues and the like so next",
    "start": "747959",
    "end": "755129"
  },
  {
    "text": "Yuri will walk you through the pros and cons of individual traces as well as looking at traces in aggregate and give",
    "start": "755129",
    "end": "761429"
  },
  {
    "text": "you some rather detailed examples of how you can leverage the power of distributed tracing information thank",
    "start": "761429",
    "end": "767309"
  },
  {
    "text": "you so as I promised I will go through this section fairly quickly because I assume most people are familiar with it",
    "start": "767309",
    "end": "773939"
  },
  {
    "start": "768000",
    "end": "902000"
  },
  {
    "text": "but the main strength of tracing comes from its ability to reconstruct the path of the request that is it takes through",
    "start": "773939",
    "end": "780119"
  },
  {
    "text": "the micro services architecture and visualize it in some this complex transaction so that we can try to reason",
    "start": "780119",
    "end": "786600"
  },
  {
    "text": "about this and and the ants the questions that we posed in the previous",
    "start": "786600",
    "end": "792869"
  },
  {
    "text": "slide you can actually try and get to those answers fairly quickly from just a single trace and so for that I want to",
    "start": "792869",
    "end": "799289"
  },
  {
    "text": "show this is the very classic representation of a distributed tracing use the Gantt chart which is the over",
    "start": "799289",
    "end": "804749"
  },
  {
    "text": "time sequel diagram where you basically have a time line left right services vertically and",
    "start": "804749",
    "end": "810170"
  },
  {
    "text": "then you plot the operations that every service is doing right and there are a",
    "start": "810170",
    "end": "816050"
  },
  {
    "text": "few things that are very obvious like we we can immediately reason about what was the overall shape of the Cole graph like",
    "start": "816050",
    "end": "822380"
  },
  {
    "text": "how services are calling each other because on the Left we see there's a hierarchy of coat depicted right the",
    "start": "822380",
    "end": "828500"
  },
  {
    "text": "other thing is that also very obvious is latency is very easy to spot in this case because clearly this is a blocking",
    "start": "828500",
    "end": "835370"
  },
  {
    "text": "operation that takes like three like 60% of the overall trade duration so if you were to optimize it that well not even",
    "start": "835370",
    "end": "841850"
  },
  {
    "text": "optimize it maybe it's an outage even investigating it so it draws your attention immediately you don't need to",
    "start": "841850",
    "end": "846890"
  },
  {
    "text": "understand much to figure out that this is a bottleneck right it may be another one on a staircase pattern on the right",
    "start": "846890",
    "end": "852740"
  },
  {
    "text": "below that as well there's a bunch of sequential iterations could be done in parallel perhaps so another option and",
    "start": "852740",
    "end": "858470"
  },
  {
    "text": "finally when there are errors if you have good instrumentation then the errors will be captured in the traces",
    "start": "858470",
    "end": "864620"
  },
  {
    "text": "and this same Gantt chart you can surface them with some additional annotations and Nokia there's an error",
    "start": "864620",
    "end": "871040"
  },
  {
    "text": "in this operation you can drill down and to see what what actually was going on in that right and finally distributed",
    "start": "871040",
    "end": "877970"
  },
  {
    "text": "tracing is an interesting tool because it gives you a macro and micro view of",
    "start": "877970",
    "end": "883579"
  },
  {
    "text": "the transaction marker in the sense that you see all the services participating in one transaction and how they interact",
    "start": "883579",
    "end": "889339"
  },
  {
    "text": "and the micro is that at every step you can actually drill down and get very rich information about each step for",
    "start": "889339",
    "end": "894950"
  },
  {
    "text": "example here you can see SQL queries you can get the bunch of logs all tightly correlated with the single execution",
    "start": "894950",
    "end": "901339"
  },
  {
    "text": "so to summarize a single trace is is by itself is still a very powerful tool if",
    "start": "901339",
    "end": "907040"
  },
  {
    "start": "902000",
    "end": "1060000"
  },
  {
    "text": "you can use it correctly right it tells the story of a transaction and it's",
    "start": "907040",
    "end": "915970"
  },
  {
    "text": "it allows you to sort of drill down into your individual details of every operation and and reason about them",
    "start": "917990",
    "end": "924530"
  },
  {
    "text": "and finally if you are like used to debugging something in monitors",
    "start": "924530",
    "end": "931970"
  },
  {
    "text": "applications then you probably always look for stacktrace like now imagine you have Micro Services and you don't have a",
    "start": "931970",
    "end": "937460"
  },
  {
    "text": "stack trace so distributed tracing actually acts as a stack trace so that single trace you is certain you can think of it as a step",
    "start": "937460",
    "end": "943400"
  },
  {
    "text": "trace right however that same view has a couple of challenges which are actually",
    "start": "943400",
    "end": "948640"
  },
  {
    "text": "what sometimes make tracing not as effective as sumantra VISTA mentioned in his talk right and one of them is well",
    "start": "948640",
    "end": "955880"
  },
  {
    "text": "you know that you troubleshoot the problem and production you need to have a representative trace like something",
    "start": "955880",
    "end": "962150"
  },
  {
    "text": "that actually happens and did when you start looking at the trace it has to represent correctly to what would the",
    "start": "962150",
    "end": "967940"
  },
  {
    "text": "behavior or the erroneous behavior the system but how do you get to that maybe the trace that you picked up even if you",
    "start": "967940",
    "end": "973730"
  },
  {
    "text": "looked it to some some parameters today that could still be anomaly rather than the steady state behavior whether good",
    "start": "973730",
    "end": "979370"
  },
  {
    "text": "or bad and the second issue is in the more complex and deep systems the traces",
    "start": "979370",
    "end": "985760"
  },
  {
    "text": "themselves are actually becoming so complex that the Gantt chart is becoming just too unwieldy to use by itself I",
    "start": "985760",
    "end": "993560"
  },
  {
    "text": "will in this example this is a real production trace from uber it's probably",
    "start": "993560",
    "end": "999740"
  },
  {
    "text": "like one of the front end requests like either pickup or maybe up start so there",
    "start": "999740",
    "end": "1005890"
  },
  {
    "text": "are 30 more or more services involved in that trace model Condit RPC calls and",
    "start": "1005890",
    "end": "1012550"
  },
  {
    "text": "this is a concise representation of that call graph a bit condensed so imagine if",
    "start": "1012550",
    "end": "1018580"
  },
  {
    "text": "you go back to the Gantt chart of that thing well even the the number of steps and this is going to take you like",
    "start": "1018580",
    "end": "1024310"
  },
  {
    "text": "multiple pages of scrolling through through the Gantt chart plus there are so many operations going on that every",
    "start": "1024310",
    "end": "1030730"
  },
  {
    "text": "one individual operation is going to be tiny so you've really not even can I see much on that trace so if you know which",
    "start": "1030730",
    "end": "1036280"
  },
  {
    "text": "specific region you want to zoom in you can obviously zoom in and get rich details but on the top surface if you",
    "start": "1036280",
    "end": "1041829"
  },
  {
    "text": "are in the outer Shiva tation need to find out quickly what's going on wrong it's very hard still and",
    "start": "1041830",
    "end": "1048950"
  },
  {
    "text": "and this is not like the most complex trades like some of the Amazon homepage",
    "start": "1048950",
    "end": "1053960"
  },
  {
    "text": "traces have like several hundred services involved right so so what what",
    "start": "1053960",
    "end": "1061400"
  },
  {
    "text": "we're trying to solve in it with the solutions in the stock is really trying to achieve it the failure to a specific",
    "start": "1061400",
    "end": "1067910"
  },
  {
    "text": "place in the architecture because we said this is one of the most challenging problems and how do we do that well",
    "start": "1067910",
    "end": "1073820"
  },
  {
    "text": "looking at one thing is not the best thing like if you get a pool request or a patch you're not going to apply it to your",
    "start": "1073820",
    "end": "1079370"
  },
  {
    "text": "source code and then start reading source code front layout right which is what we're doing with a single trace instead you're going to look at the",
    "start": "1079370",
    "end": "1085490"
  },
  {
    "text": "differences and the same thing if you perform an optimization let's say memory leak you take a snapshot before",
    "start": "1085490",
    "end": "1091370"
  },
  {
    "text": "Schnauzer separate after you compare them you look at the differences so we want to do the same thing with traces looks at the differences because that",
    "start": "1091370",
    "end": "1097610"
  },
  {
    "text": "will highlight us a lot quicker some of the things that may be going wrong and I presented last year so again I'm not",
    "start": "1097610",
    "end": "1103760"
  },
  {
    "text": "going to go very long on this one but one of the thing that we've built and Jaeger and open source is the comparison",
    "start": "1103760",
    "end": "1110030"
  },
  {
    "text": "of traces where you can structure and compared to two traces and using the typical like code diff color code in red",
    "start": "1110030",
    "end": "1117350"
  },
  {
    "text": "missing now it's green and extra nodes right so your attention is immediately drawn to the bottom part of this saying",
    "start": "1117350",
    "end": "1122750"
  },
  {
    "text": "oh there's something going on with that execution right like a bunch of calls that normally happens on the left side",
    "start": "1122750",
    "end": "1127790"
  },
  {
    "text": "didn't happen on the right side so this is the kind of simple visualization allows you to to droop down into a",
    "start": "1127790",
    "end": "1133040"
  },
  {
    "text": "problem much quicker and color coding could be different you could for example if you investigate in a latency then",
    "start": "1133040",
    "end": "1139070"
  },
  {
    "text": "again we can use a heat map color code in here and you can see immediately the red path of the nodes we again this is a",
    "start": "1139070",
    "end": "1145310"
  },
  {
    "text": "differences right so one of those nodes which are in gray could be actually",
    "start": "1145310",
    "end": "1150380"
  },
  {
    "text": "taking 80% of your total transaction but that 80% may be normal everyday whereas the things that in red are",
    "start": "1150380",
    "end": "1156590"
  },
  {
    "text": "different between these two things and that's what you want to focus on when you investigation things and so",
    "start": "1156590",
    "end": "1161810"
  },
  {
    "start": "1161000",
    "end": "1184000"
  },
  {
    "text": "nonetheless these two differences different views they still have kind of",
    "start": "1161810",
    "end": "1167420"
  },
  {
    "text": "the same challenges that individual traces could be outliers now we have two of them but we still have to pick them",
    "start": "1167420",
    "end": "1172970"
  },
  {
    "text": "somehow and it's up to the user to actually pick the right one which is not great so the question is can we do",
    "start": "1172970",
    "end": "1178820"
  },
  {
    "text": "better what if the system kind of did that for us and we didn't have to guess and so",
    "start": "1178820",
    "end": "1184090"
  },
  {
    "start": "1184000",
    "end": "1326000"
  },
  {
    "text": "that's the approach that I want to talk about here so we want to use and we",
    "start": "1184090",
    "end": "1190029"
  },
  {
    "text": "built that the tuber by the way it's an introduction so we want to aggregate a bunch of traces that will now represent",
    "start": "1190029",
    "end": "1196899"
  },
  {
    "text": "a good behavior of the system and we'll learn from them a statistical model of that behavior and then when something",
    "start": "1196899",
    "end": "1202960"
  },
  {
    "text": "bad happens we can take that bad request and overlay it with the good model and compare them and see what the",
    "start": "1202960",
    "end": "1208570"
  },
  {
    "text": "differences are right but when we create this good model first we doing that in a",
    "start": "1208570",
    "end": "1215590"
  },
  {
    "text": "business specific way this is by the way this tool is not open source because it's really tied to the way the uber does business and I'll talk about this",
    "start": "1215590",
    "end": "1222940"
  },
  {
    "text": "in a bit more so the way this monetary solution works it's called black box",
    "start": "1222940",
    "end": "1228789"
  },
  {
    "text": "money generated so we have uber users drivers and riders they have their phones their phones talking to doober",
    "start": "1228789",
    "end": "1234760"
  },
  {
    "text": "back-end all the time right this is production and what if we did the same thing but with a synthetic kind of a",
    "start": "1234760",
    "end": "1242230"
  },
  {
    "text": "black box problem which simulates the same executions and it does that in the",
    "start": "1242230",
    "end": "1247630"
  },
  {
    "text": "whole scenario saying rider like driver coming online right there asking for request driver accepting the request",
    "start": "1247630",
    "end": "1254409"
  },
  {
    "text": "going to pick up the whole sequence of steps when when the execution simulates",
    "start": "1254409",
    "end": "1260559"
  },
  {
    "text": "this it kind of knows what they expect to the system from the system and when something breaks it can flag it and so",
    "start": "1260559",
    "end": "1267190"
  },
  {
    "text": "we have traces immediately from that that we can use for for the approach that I'm discussing and by the way there",
    "start": "1267190",
    "end": "1273190"
  },
  {
    "text": "isn't the uber built this is not specifically for tracing or even or outage resolution it was actually for",
    "start": "1273190",
    "end": "1279399"
  },
  {
    "text": "outage detection uber is a very sent City centric business like if you go to",
    "start": "1279399",
    "end": "1284440"
  },
  {
    "text": "another city there's probably going to be hundreds of different experiments runyan which are not like in New York",
    "start": "1284440",
    "end": "1289809"
  },
  {
    "text": "and there's tons of features that may be enabled on a procedure level so if you think about how all those features",
    "start": "1289809",
    "end": "1296500"
  },
  {
    "text": "affect the call graph in the backend you you may have very different called call graphs or disability traces between New",
    "start": "1296500",
    "end": "1303880"
  },
  {
    "text": "York and San Francisco for example right and so the proper is is specific to the",
    "start": "1303880",
    "end": "1309039"
  },
  {
    "text": "city so it executes the execution one city so it knows what to expect within that city and that",
    "start": "1309039",
    "end": "1314630"
  },
  {
    "text": "way it can build a logical model of what the normal execution looks like gradually I mean it's the stunt I'm",
    "start": "1314630",
    "end": "1320750"
  },
  {
    "text": "sliding windows so if something changes it will readjust itself",
    "start": "1320750",
    "end": "1325269"
  },
  {
    "start": "1326000",
    "end": "1358000"
  },
  {
    "text": "and so but when this black monitor so it was very helpful for us in isolating the",
    "start": "1326770",
    "end": "1334210"
  },
  {
    "text": "outages sometimes we couldn't even detect an outage from the usual metrics because if it happens in one of the cities in uber support like a thousand",
    "start": "1334210",
    "end": "1340570"
  },
  {
    "text": "cities then you may not notice the blip on the metrics but with the specific like test within a city it fails and we",
    "start": "1340570",
    "end": "1346630"
  },
  {
    "text": "can we can raise an alert to people right but once that alert goes off we are back to that same problem okay then",
    "start": "1346630",
    "end": "1352450"
  },
  {
    "text": "now what we have 3,000 services how do you go and debug what's actually causing the issue and and that's where this the",
    "start": "1352450",
    "end": "1359770"
  },
  {
    "start": "1358000",
    "end": "1583000"
  },
  {
    "text": "test executor actually is tied to the tracing because every requested sends its traced it's a synthetic traffic we",
    "start": "1359770",
    "end": "1366550"
  },
  {
    "text": "can afford to trace all of it right and so it executes specific business scenarios which allow us to form the",
    "start": "1366550",
    "end": "1372130"
  },
  {
    "text": "baseline the city the baseline for one city might be different from now on does matter but but we still keep them and",
    "start": "1372130",
    "end": "1379090"
  },
  {
    "text": "then when some step steps fail it gives us a trace which has like a clear signal",
    "start": "1379090",
    "end": "1384280"
  },
  {
    "text": "yes this is a bad trace or while the other ones with good traces which leads us to this architecture where the test",
    "start": "1384280",
    "end": "1391480"
  },
  {
    "text": "executors constantly run in this test and sent in the data to well the the data is being collected as form in the",
    "start": "1391480",
    "end": "1398200"
  },
  {
    "text": "form of traces in the Jaeger and then we have this extra aggregator which kinda",
    "start": "1398200",
    "end": "1404170"
  },
  {
    "text": "keeps the good traces from the black box and says okay from the good ones I'm going to construct a statistical model of what the normal execution looks like",
    "start": "1404170",
    "end": "1410650"
  },
  {
    "text": "and then when the text accuses oh no this is a bad trace it tags the trace with a special signal that we can detect",
    "start": "1410650",
    "end": "1417910"
  },
  {
    "text": "in the back and it it indicates an a failure so there now we have two",
    "start": "1417910",
    "end": "1423460"
  },
  {
    "text": "basically pieces that we can compare fully automatically we didn't have human involved in choosing either of those",
    "start": "1423460",
    "end": "1428950"
  },
  {
    "text": "right and so we do the difference and then we can investigate let the human investigate the difference only and the",
    "start": "1428950",
    "end": "1435429"
  },
  {
    "text": "visualization for the difference is very similar to what what I showed before but again there is no human choice involved",
    "start": "1435429",
    "end": "1441790"
  },
  {
    "text": "in selecting the pieces to diff in this case right it's not thrown on the",
    "start": "1441790",
    "end": "1447309"
  },
  {
    "text": "screenshot but on the left you actually have those steps that they constitute the scenario so you can you can get like",
    "start": "1447309",
    "end": "1453340"
  },
  {
    "text": "select individual steps and every step has its own call graph so this one is just a cold graph for a",
    "start": "1453340",
    "end": "1460510"
  },
  {
    "text": "single step so at the top we can see this is the specific operation name that was done so again multiple steps you",
    "start": "1460510",
    "end": "1466360"
  },
  {
    "text": "know which one is is failing you can also see on the right is there's a link back to Jaeger where because again we",
    "start": "1466360",
    "end": "1473950"
  },
  {
    "text": "will have a bad trace that we can pair in with a model we can actually go and look into that bad trace and get all the",
    "start": "1473950",
    "end": "1480340"
  },
  {
    "text": "rich information that we typically get from a single trace especially if you know where to look an island here we do",
    "start": "1480340",
    "end": "1485680"
  },
  {
    "text": "know where to look for it because every node and this graph can be deep linked into the trace because they're all like",
    "start": "1485680",
    "end": "1491260"
  },
  {
    "text": "connected so the nodes themselves this",
    "start": "1491260",
    "end": "1496510"
  },
  {
    "text": "is again this is just a call graph with nodes chronologically sorted some of the nodes are collapsed because if you have",
    "start": "1496510",
    "end": "1502750"
  },
  {
    "text": "a service called another series multiple times we don't want to show that it can they get too noisy again as I mentioned",
    "start": "1502750",
    "end": "1508270"
  },
  {
    "text": "like hundreds RPC calls there's fewer knows definitely here than in the actual trace so that that's what makes this",
    "start": "1508270",
    "end": "1514900"
  },
  {
    "text": "visualization actually consumable by human and finally with the color coding",
    "start": "1514900",
    "end": "1520450"
  },
  {
    "text": "white means looks okay well black means the nodes are missing in in the failed",
    "start": "1520450",
    "end": "1525520"
  },
  {
    "text": "execution right it's such an interesting like we didn't use red and green here because it's very unusual in this tool",
    "start": "1525520",
    "end": "1531310"
  },
  {
    "text": "to have extra nodes in the failed trace because typically a fail scenario means you didn't execute some of the steps",
    "start": "1531310",
    "end": "1537700"
  },
  {
    "text": "that normally get executed but we could have used color coding with red and green as well here but we just reserved",
    "start": "1537700",
    "end": "1543520"
  },
  {
    "text": "the red for the errors and so you can see that okay this node represents two spans each of them had errors in them",
    "start": "1543520",
    "end": "1551230"
  },
  {
    "text": "and on the right side we can kind of drill down without leaving the tool to see what specific error messages were",
    "start": "1551230",
    "end": "1557200"
  },
  {
    "text": "recorded in those steps and so again if you look at visually at this graph you kinda see again okay well the black top",
    "start": "1557200",
    "end": "1564510"
  },
  {
    "text": "section at the top is certain some things that didn't go well right away there are some error so there's you know",
    "start": "1564510",
    "end": "1570850"
  },
  {
    "text": "that you might click around and figure out okay well this is the problematic area that I want to investigate you can",
    "start": "1570850",
    "end": "1577030"
  },
  {
    "text": "actually run machine learning on this divs afterwards but that's probably for the next year if we if production eliza's and so in summary the visual",
    "start": "1577030",
    "end": "1585250"
  },
  {
    "start": "1583000",
    "end": "1907000"
  },
  {
    "text": "comparisons a very useful tool for for actually making trace distributed tracing",
    "start": "1585250",
    "end": "1591090"
  },
  {
    "text": "information useful one of them is they surface a lot more in a lot less information by condensing it and they",
    "start": "1591090",
    "end": "1597360"
  },
  {
    "text": "emphasize the differences rather than sure and it's the whole picture and that figuring out what what to do and when we",
    "start": "1597360",
    "end": "1604260"
  },
  {
    "text": "compared with aggregations it gives us additional features like we actually look in ad we rule out outliers from",
    "start": "1604260",
    "end": "1612090"
  },
  {
    "text": "this comparison right because we don't have to worry about them and finally this tool was specifically done to attribute failures much quicker than",
    "start": "1612090",
    "end": "1619110"
  },
  {
    "text": "normal production would allow us to do because it used to take our operations like 30 minutes to figure out which",
    "start": "1619110",
    "end": "1624150"
  },
  {
    "text": "services is behaving now they're down to 2 minutes with this tool so we kinda run out of time yeah",
    "start": "1624150",
    "end": "1630780"
  },
  {
    "text": "ok so I'll give it a sniff to go very quickly yeah all right close the time so",
    "start": "1630780",
    "end": "1636120"
  },
  {
    "text": "I kind of go through this information very quickly I want to show some aggregate analysis leveraging visualizations all powered by",
    "start": "1636120",
    "end": "1642270"
  },
  {
    "text": "distributed tracing information so as I mentioned in microservices based architecture is complexity makes it very",
    "start": "1642270",
    "end": "1648330"
  },
  {
    "text": "hard to troubleshoot from an on call perspective but one of the main problems you're trying to solve for is what I like to call the who to wake up problem",
    "start": "1648330",
    "end": "1654390"
  },
  {
    "text": "as you have multiple micro services it's not uncommon that if one micro service has an issue that upstream and",
    "start": "1654390",
    "end": "1660390"
  },
  {
    "text": "downstream micro-services from that service experience issues at the same time and as you move to more polyglot",
    "start": "1660390",
    "end": "1665550"
  },
  {
    "text": "architectures you kind of decouple and have different service owner teams from an on-call perspective you only want to",
    "start": "1665550",
    "end": "1671430"
  },
  {
    "text": "wake up the people that where the issues actually happening from and distribute trace and it's actually possible because",
    "start": "1671430",
    "end": "1677280"
  },
  {
    "text": "you have context in correlation you know where the error originated from and that means you can actually show it on a service graph so here's an example where",
    "start": "1677280",
    "end": "1684390"
  },
  {
    "text": "every circle represents a service the size of the service again represents the amount of traffic it's receiving and the",
    "start": "1684390",
    "end": "1690000"
  },
  {
    "text": "arrows indicate the directionality of traffic you can clearly see here that the currency service is experiencing a",
    "start": "1690000",
    "end": "1695430"
  },
  {
    "text": "large number of errors you can also see that the check out service is seeing errors but not actually originating them",
    "start": "1695430",
    "end": "1701340"
  },
  {
    "text": "they're actually propagating from the currency service so in this particular case if we were to page an on call it's",
    "start": "1701340",
    "end": "1706830"
  },
  {
    "text": "really the currency service that we want to get involved to figure out what's going on now in order to figure out",
    "start": "1706830",
    "end": "1711930"
  },
  {
    "text": "what's going on we have to get to problem isolation and so in addition to the typical red metrics that you can get",
    "start": "1711930",
    "end": "1717510"
  },
  {
    "text": "are distributed tracing information like there Quest's and the errors in the duration you can actually tag rich metadata on to",
    "start": "1717510",
    "end": "1723570"
  },
  {
    "text": "your spans as well this could be build information infrastructure environments it's deployed on whatever is applicable",
    "start": "1723570",
    "end": "1730019"
  },
  {
    "text": "to the application that you're running and then you can start asking questions of your data like for example if I just",
    "start": "1730019",
    "end": "1735779"
  },
  {
    "text": "look at the currency service and its dependencies and I break down the currency service I can see that it's",
    "start": "1735779",
    "end": "1740879"
  },
  {
    "text": "running in two different regions and only one region is having an issue this is helping me isolate the problem and",
    "start": "1740879",
    "end": "1746669"
  },
  {
    "text": "focus my efforts really where the problem is happening from if I want to take that one step further there are actually nested levels of metadata so",
    "start": "1746669",
    "end": "1753659"
  },
  {
    "text": "maybe I then want to know for that given region which crew brandies pods is this service deployed on and are any of them",
    "start": "1753659",
    "end": "1759779"
  },
  {
    "text": "being impacted this nested analysis or going like multiple layers deep is also",
    "start": "1759779",
    "end": "1765029"
  },
  {
    "text": "critical from an analysis perspective to help isolate the problem and here we can quickly see there's that actually only a",
    "start": "1765029",
    "end": "1770340"
  },
  {
    "text": "single pod in the US west to region that's experiencing issues now as an on-call person if my responsibility is",
    "start": "1770340",
    "end": "1776999"
  },
  {
    "text": "really to mitigate the issue I now have some options I could terminate that pod I can quarantine that host I can try to",
    "start": "1776999",
    "end": "1783179"
  },
  {
    "text": "get the system back online and then I can take the why of why this happened in the first place offline and get to my",
    "start": "1783179",
    "end": "1788549"
  },
  {
    "text": "root cause after the effect so it's really critical that you have the ability to ask any question of your data",
    "start": "1788549",
    "end": "1794220"
  },
  {
    "text": "and that means you have to enrich it with things like things that are applicable to your particular environments this could be like tag",
    "start": "1794220",
    "end": "1800909"
  },
  {
    "text": "analysis of breaking it down by all the additional additional metadata that you add to the spans this could be from a",
    "start": "1800909",
    "end": "1806070"
  },
  {
    "text": "performance standpoint looking at the performance across its different dimensions as well as also looking at",
    "start": "1806070",
    "end": "1811379"
  },
  {
    "text": "things like metric comparisons where I'm actually looking at metrics that are being extracted from the rich distributed tracing data that I'm",
    "start": "1811379",
    "end": "1817470"
  },
  {
    "text": "collecting finally this doesn't just apply to incident management or performance analysis it also applies to",
    "start": "1817470",
    "end": "1824340"
  },
  {
    "text": "like CI CD pipelines and continuous deployments like if you're doing a canary release you want to be able to",
    "start": "1824340",
    "end": "1829919"
  },
  {
    "text": "compare that against what you currently have running in production and be able to determine very quickly and easily whether or not there's an issue and",
    "start": "1829919",
    "end": "1836249"
  },
  {
    "text": "whether or not you need to roll back again distributed tracings in a unique position to really help answer these questions if you just add like a version",
    "start": "1836249",
    "end": "1843419"
  },
  {
    "text": "number tag to the spans for your service you can start answering that question because you have baseline information",
    "start": "1843419",
    "end": "1848669"
  },
  {
    "text": "about how a previous version is behaving and you can compare that again the canary released that you're rolling out so from a takeaways perspective",
    "start": "1848669",
    "end": "1856750"
  },
  {
    "text": "really distributed tracing makes it possible to deal with the complexities of a microservices based architecture it",
    "start": "1856750",
    "end": "1862539"
  },
  {
    "text": "provides the missing link of context and correlation that's critical from a durability standpoint and can help",
    "start": "1862539",
    "end": "1867789"
  },
  {
    "text": "highlight and enhance the metrics and logs and you're likely leveraging today it's really the aggregate analysis",
    "start": "1867789",
    "end": "1873340"
  },
  {
    "text": "though that you get the most value from individual traces can be valuable but you want to understand how it behaves in",
    "start": "1873340",
    "end": "1879129"
  },
  {
    "text": "the system overall and really these creative visualizations makes it much easier to consume the distribute rates",
    "start": "1879129",
    "end": "1884679"
  },
  {
    "text": "and data that you have so you can actually ask the questions that you care about so definitely take a look at",
    "start": "1884679",
    "end": "1890350"
  },
  {
    "text": "distribute tracing options that are out there as you move to micro services you'll probably see that it really provides some rich insights and curious",
    "start": "1890350",
    "end": "1896740"
  },
  {
    "text": "to see what others come up with visualization standpoint in order to really enhance the data that they're collecting with that I think we're at",
    "start": "1896740",
    "end": "1903159"
  },
  {
    "text": "time but thank you so much",
    "start": "1903159",
    "end": "1906179"
  }
]