[
  {
    "text": "hey everyone we're super excited to be here today we came to talk with you",
    "start": "359",
    "end": "5520"
  },
  {
    "text": "about kubernetes secrets we had a lot of experience using kubernetes secrets and",
    "start": "5520",
    "end": "10740"
  },
  {
    "text": "we want to share with you what we learned along the way by using them in real world systems and the best solution",
    "start": "10740",
    "end": "16920"
  },
  {
    "text": "to manage them but before we deep dive let's start with a little background about Who We Are",
    "start": "16920",
    "end": "23039"
  },
  {
    "text": "I'm gal I'm back in engineered Firefly Firefly is cloud Asset Management solution we scan the entire",
    "start": "23039",
    "end": "30060"
  },
  {
    "text": "infrastructure of our customers and we automatically transform their interest",
    "start": "30060",
    "end": "35899"
  },
  {
    "text": "their resources to code Firefly helps devops SRE and platforms",
    "start": "35899",
    "end": "42120"
  },
  {
    "text": "engineers in order to regain the control on their environment",
    "start": "42120",
    "end": "48140"
  },
  {
    "text": "hi my name is liave I'm an engineer team lead at Firefly as well I recently had",
    "start": "48960",
    "end": "54539"
  },
  {
    "text": "the privilege of speaking about migrating to kubernetes job at kubernetes Community Days Amsterdam so",
    "start": "54539",
    "end": "60660"
  },
  {
    "text": "I'm super excited to be here again and today we're going to share with you everything we learned during our journey",
    "start": "60660",
    "end": "67260"
  },
  {
    "text": "with kubernetes secrets so here we go let's get started kubernetes",
    "start": "67260",
    "end": "74100"
  },
  {
    "text": "just hit me that yesterday we deployed a new service into production cluster that",
    "start": "74100",
    "end": "79560"
  },
  {
    "text": "authenticate with mongodb and we put the mongodb credentials in kubernetes secret",
    "start": "79560",
    "end": "85619"
  },
  {
    "text": "as you already know gal that's not the most secure solution out there it's actually not encrypted at all",
    "start": "85619",
    "end": "92280"
  },
  {
    "text": "wow then I guess we have to think of our options for changing this that's funny what that's because that's",
    "start": "92280",
    "end": "99180"
  },
  {
    "text": "exactly what I'm planning to do here today so let's get started",
    "start": "99180",
    "end": "105900"
  },
  {
    "text": "um have you ever questioned the security level of your organization secrets when I'm talking about secret I'm",
    "start": "105900",
    "end": "111479"
  },
  {
    "text": "referring to database passwords private Keys service tokens all those secrets",
    "start": "111479",
    "end": "117000"
  },
  {
    "text": "that all of our application and all of our sensitive data is being protected with",
    "start": "117000",
    "end": "122520"
  },
  {
    "text": "well we did it we did it because of the importance of our very own and our",
    "start": "122520",
    "end": "128039"
  },
  {
    "text": "customer sensitive data and we think that everyone should do so today we're gonna share with you",
    "start": "128039",
    "end": "134220"
  },
  {
    "text": "everything you need to know about safe secret Management in kubernetes we will go over the Technologies and tools that",
    "start": "134220",
    "end": "140940"
  },
  {
    "text": "will help you manage your secrets in a more secure way and we will wrap up with a demo for using the secret star CSI",
    "start": "140940",
    "end": "148200"
  },
  {
    "text": "driver but girl first thing first what is the secret at all so a secret is an object that contains",
    "start": "148200",
    "end": "155459"
  },
  {
    "text": "sensitive data like an access key a token or a password as developers we use",
    "start": "155459",
    "end": "160560"
  },
  {
    "text": "them all the time and I'm not talking about your Tick Tock account password",
    "start": "160560",
    "end": "165920"
  },
  {
    "text": "but really I more commonly usage are for connecting to a database accessing a",
    "start": "166260",
    "end": "171660"
  },
  {
    "text": "third-party service decrypt a message and much more these are just a few examples this is because secrets are",
    "start": "171660",
    "end": "178800"
  },
  {
    "text": "essential to fulfill the goals of our applications without them our code just",
    "start": "178800",
    "end": "184140"
  },
  {
    "text": "simply won't function as it's supposed to or expected to however we cannot put them in our",
    "start": "184140",
    "end": "191879"
  },
  {
    "text": "Version Control Systems we because this will export them to the world hence we",
    "start": "191879",
    "end": "197940"
  },
  {
    "text": "must find a way to retrieve them from an external source during runtime",
    "start": "197940",
    "end": "203400"
  },
  {
    "text": "when it comes to kubernetes Secrets comes in a form of a kubernetes Secrets which is the kubernetes representation",
    "start": "203400",
    "end": "209879"
  },
  {
    "text": "to a resource that contains sensitive data in order to integrate and consume the",
    "start": "209879",
    "end": "216599"
  },
  {
    "text": "sensitive data with a kubernetes application we can use two common ways",
    "start": "216599",
    "end": "221940"
  },
  {
    "text": "the first one is using volume we Mount the value of the secret the sensitive data into the Container file system",
    "start": "221940",
    "end": "228720"
  },
  {
    "text": "during runtime the second one is using environment variable which is the most",
    "start": "228720",
    "end": "234000"
  },
  {
    "text": "common one where the value is being injected into the runtime during execution both of them are easy to use",
    "start": "234000",
    "end": "240900"
  },
  {
    "text": "and effortlessly integrates with other kubernetes resources such as deployment",
    "start": "240900",
    "end": "247080"
  },
  {
    "text": "stateful set jobs and eventually pods so now that we know what secret and",
    "start": "247080",
    "end": "252720"
  },
  {
    "text": "kubernetes secrets are and how to use them let's see how we create and manage them manage them sorry",
    "start": "252720",
    "end": "259320"
  },
  {
    "text": "so like every other kubernetes resource we can create Secrets manually using one",
    "start": "259320",
    "end": "265380"
  },
  {
    "text": "Cube control command but that's not the most recommended way to do it actually",
    "start": "265380",
    "end": "272100"
  },
  {
    "text": "in Firefly we have a term to such an operation as you can see here we call it",
    "start": "272100",
    "end": "278520"
  },
  {
    "text": "click Ops click Ops is when you create an asset manually and the best way to",
    "start": "278520",
    "end": "284880"
  },
  {
    "text": "manage your resources is with infrastructure as code",
    "start": "284880",
    "end": "289819"
  },
  {
    "text": "by adapting the infrastructure as code Concepts you can manage your and control your in your environment at scale and",
    "start": "290699",
    "end": "298680"
  },
  {
    "text": "kubernetes resource like every other infrastructure resource can be created with any infrastructure as code tool",
    "start": "298680",
    "end": "304860"
  },
  {
    "text": "outer such as Helm terraform even pulumi so it sounds great",
    "start": "304860",
    "end": "312479"
  },
  {
    "text": "um but it's not that perfect there is always a problem",
    "start": "312479",
    "end": "319280"
  },
  {
    "text": "this is a quotient taken from actual kubernetes Docs and it says that",
    "start": "319979",
    "end": "326100"
  },
  {
    "text": "kubernetes secrets are by default stored unencrypted in the API servers",
    "start": "326100",
    "end": "332460"
  },
  {
    "text": "underlying data data store 80cd anyone with API access can retrieve or modify a",
    "start": "332460",
    "end": "338580"
  },
  {
    "text": "secret and so can anyone who is access to etcd additionally anyone who is",
    "start": "338580",
    "end": "344160"
  },
  {
    "text": "authorized to create a pod in a namespace can use the two axis in use that access to read any Secret in",
    "start": "344160",
    "end": "351660"
  },
  {
    "text": "that namespace so we understand that kubernetes secrets",
    "start": "351660",
    "end": "357960"
  },
  {
    "text": "are not perfect for most of the cases for that and for some other reasons",
    "start": "357960",
    "end": "365160"
  },
  {
    "text": "the first one is that it's unencrypted the secret value as are being stored in",
    "start": "365160",
    "end": "370620"
  },
  {
    "text": "base 64 format which means that a simple encode will retrieve your sensitive",
    "start": "370620",
    "end": "376919"
  },
  {
    "text": "precious values secondly it has limited role-based",
    "start": "376919",
    "end": "383160"
  },
  {
    "text": "access control as limited privilege policies instruct",
    "start": "383160",
    "end": "389280"
  },
  {
    "text": "um we wish to give a user the minimal permissions to the minimal scope of data",
    "start": "389280",
    "end": "395880"
  },
  {
    "text": "and as we know kubernetes implementation has limited capabilities when it comes",
    "start": "395880",
    "end": "401400"
  },
  {
    "text": "to complex access policies another thing is the secret rotations",
    "start": "401400",
    "end": "407699"
  },
  {
    "text": "secret rotation is the principle of regenerating your secrets over time in",
    "start": "407699",
    "end": "413460"
  },
  {
    "text": "order to prevent them from being compromised or outdated it's also important from a compliance regulation",
    "start": "413460",
    "end": "419759"
  },
  {
    "text": "point of view and the organizations should always rotate their secrets",
    "start": "419759",
    "end": "425520"
  },
  {
    "text": "another thing is that Secrets tend to be shared between multiple applications and",
    "start": "425520",
    "end": "431039"
  },
  {
    "text": "multiple users they tend to repeat themselves at scale it can create an infrastructure mess we must have one",
    "start": "431039",
    "end": "438419"
  },
  {
    "text": "place one source of truth that will hold the secrets for all applications",
    "start": "438419",
    "end": "443460"
  },
  {
    "text": "and the last thing is that there is no audit it's a challenge to check who retrieve modified or deleted the secret",
    "start": "443460",
    "end": "452060"
  },
  {
    "text": "God those issues are very serious very problematic but you can be assured that",
    "start": "452280",
    "end": "457860"
  },
  {
    "text": "the kubernetes community won't let us down and once again they deliver the",
    "start": "457860",
    "end": "463800"
  },
  {
    "text": "solution so if we go back to the official docs again we can see a variety",
    "start": "463800",
    "end": "469020"
  },
  {
    "text": "of action a user can take in order to start manage a secret and use them in a safer way today we are going to focus on",
    "start": "469020",
    "end": "476280"
  },
  {
    "text": "the fourth option considering using an external Secrets provider",
    "start": "476280",
    "end": "482160"
  },
  {
    "text": "but before we go down let's understand what in what is an external provider and what should we consider why we should",
    "start": "482160",
    "end": "489180"
  },
  {
    "text": "even consider using it an external secret provider is a",
    "start": "489180",
    "end": "494940"
  },
  {
    "text": "software component that integrates with kubernetes and enables it to enables",
    "start": "494940",
    "end": "500280"
  },
  {
    "text": "kubernetes to retrieve a secret from from an external Source such as cloudway secret manager or third third party Key",
    "start": "500280",
    "end": "509039"
  },
  {
    "text": "Management Service or just a database the market of secret stores is huge and",
    "start": "509039",
    "end": "516779"
  },
  {
    "text": "there are a lot of competitors even open source like ashiko Vault there are of",
    "start": "516779",
    "end": "522779"
  },
  {
    "text": "course the cloud providers one AWS equation manager Google secret manager",
    "start": "522779",
    "end": "528000"
  },
  {
    "text": "Azure keyword personally I had the pleasure to contribute to another open source project secret provider named",
    "start": "528000",
    "end": "535680"
  },
  {
    "text": "cyber konjour so we understand that the secret is the the secrets slope of either Market is",
    "start": "535680",
    "end": "541980"
  },
  {
    "text": "used let's see why we should use it so there are several several reasons why",
    "start": "541980",
    "end": "548519"
  },
  {
    "text": "we should want to do it because first of all it performs as a single source of truth if you want to update or change or",
    "start": "548519",
    "end": "555540"
  },
  {
    "text": "just receive a value of a secret there is one place we can get it from secondly it's a secured solution unlike",
    "start": "555540",
    "end": "563399"
  },
  {
    "text": "a normal kubernetes secret the data is being kept encrypted and secured by a",
    "start": "563399",
    "end": "569040"
  },
  {
    "text": "third party and an authorized one in addition it's easy to share secrets",
    "start": "569040",
    "end": "574980"
  },
  {
    "text": "between application and users and we can share it and efficiently because the",
    "start": "574980",
    "end": "580440"
  },
  {
    "text": "secret is at one place and everybody can consume it we don't have an",
    "start": "580440",
    "end": "586260"
  },
  {
    "text": "infrastructure mess at scale in addition those providers are have SDK or software",
    "start": "586260",
    "end": "595260"
  },
  {
    "text": "developer kit in any programming language out there which we can then use in our services",
    "start": "595260",
    "end": "602279"
  },
  {
    "text": "last thing and most importantly is the least privilege concept those solution follows the this concept that a user or",
    "start": "602279",
    "end": "610140"
  },
  {
    "text": "an application should get the minimum scope of a permission to receive its data and that way we can reduce the",
    "start": "610140",
    "end": "617399"
  },
  {
    "text": "risks but provide any necessary data to the application or the user",
    "start": "617399",
    "end": "623700"
  },
  {
    "text": "so it sounds pretty good to me I actually prefer go land so let's",
    "start": "623700",
    "end": "629459"
  },
  {
    "text": "Implement our new Services let's add the software developer kit of ashiko Vault it's an open source it's a open source",
    "start": "629459",
    "end": "636600"
  },
  {
    "text": "secure and centralized solution including your new service girl",
    "start": "636600",
    "end": "641880"
  },
  {
    "text": "um that's the probably the first thing that comes in mind after realizing all the",
    "start": "641880",
    "end": "646980"
  },
  {
    "text": "benefits of using an external secret provider but actually consuming the data",
    "start": "646980",
    "end": "652320"
  },
  {
    "text": "from the external secret provider directly is not that recommended",
    "start": "652320",
    "end": "657360"
  },
  {
    "text": "for example we have this quote from the ashicop website and application need only",
    "start": "657360",
    "end": "664440"
  },
  {
    "text": "concern themselves with finding a secret at the file system rather than managing",
    "start": "664440",
    "end": "670200"
  },
  {
    "text": "tokens connection to an external or other mechanism Direction interaction with vault",
    "start": "670200",
    "end": "676500"
  },
  {
    "text": "so even as you call themselves discourage us to their to directly communicate with",
    "start": "676500",
    "end": "683640"
  },
  {
    "text": "the external secret provider but let's Deep dive on why we should know though so",
    "start": "683640",
    "end": "689600"
  },
  {
    "text": "there are mainly three three reasons why we don't wish to do it first of all it",
    "start": "689880",
    "end": "695339"
  },
  {
    "text": "requires some code adjustment in order to consume this API or software developer kit and we also have to take",
    "start": "695339",
    "end": "701519"
  },
  {
    "text": "into consideration that this API might have its own limitation such as API rate",
    "start": "701519",
    "end": "707279"
  },
  {
    "text": "limit and much more secondly you quickly become coupled to this to this service you become very no",
    "start": "707279",
    "end": "714540"
  },
  {
    "text": "locked in if you wish to change your Secret store provider or use another one",
    "start": "714540",
    "end": "721860"
  },
  {
    "text": "it will take a tremendous amount of work and lastly",
    "start": "721860",
    "end": "727140"
  },
  {
    "text": "in order to access such a provider you will probably need a programmatic access",
    "start": "727140",
    "end": "732600"
  },
  {
    "text": "tokens which is a secret by themselves so where would you start that and actually it's a super secret because",
    "start": "732600",
    "end": "739440"
  },
  {
    "text": "this secret holds the key to all of our organization Secret so what are we left with",
    "start": "739440",
    "end": "746459"
  },
  {
    "text": "on the one hand we want to use an external secret provider as it provides",
    "start": "746459",
    "end": "751680"
  },
  {
    "text": "a secured place to store our secrets on",
    "start": "751680",
    "end": "756839"
  },
  {
    "text": "the other end we don't want to invest so many hours of work of work and we want",
    "start": "756839",
    "end": "763980"
  },
  {
    "text": "to do it fast gal do you happen to know any solution that can help us manage our",
    "start": "763980",
    "end": "769620"
  },
  {
    "text": "secrets in a much safer way but with a minimal effort sure",
    "start": "769620",
    "end": "775079"
  },
  {
    "text": "CSI comes to the rescue Cy CSI is one of the most recent",
    "start": "775079",
    "end": "782160"
  },
  {
    "text": "emergence solution to manage kubernetes secrets but let's start with the basic",
    "start": "782160",
    "end": "787440"
  },
  {
    "text": "what is CSI CSI stands for container storage interface it is",
    "start": "787440",
    "end": "793800"
  },
  {
    "text": "specifications that Define a standard interface for container orchestration systems like kubernetes in order to",
    "start": "793800",
    "end": "801300"
  },
  {
    "text": "communicate with external storage systems and when it comes to Secret",
    "start": "801300",
    "end": "807360"
  },
  {
    "text": "store CSI we talk about the solution to sync kubernetes secret from external",
    "start": "807360",
    "end": "815160"
  },
  {
    "text": "Secret store into the cluster and how it works so since I allow",
    "start": "815160",
    "end": "821519"
  },
  {
    "text": "kubernetes to mount multiple secrets that stored in external Secrets provider into the cluster via CSI volumes once",
    "start": "821519",
    "end": "830519"
  },
  {
    "text": "the volume is attached to the code the data is mounted into the containers file system and it's accessible for the",
    "start": "830519",
    "end": "837060"
  },
  {
    "text": "application let's have a deep dive into this architecture of the CSI Secret store",
    "start": "837060",
    "end": "843000"
  },
  {
    "text": "driver first thing in our architecture is the",
    "start": "843000",
    "end": "848700"
  },
  {
    "text": "external Secret store The hashicorp Vault we chose hashicor Vault since it's an open source and it gives us all the",
    "start": "848700",
    "end": "855120"
  },
  {
    "text": "benefits of the external Secret store and connected to our hashicorp world we",
    "start": "855120",
    "end": "860820"
  },
  {
    "text": "can see the first demon set the Vault CSI demon set this demon set is",
    "start": "860820",
    "end": "866820"
  },
  {
    "text": "responsible for communicating and pulling the data from hashicorp vault",
    "start": "866820",
    "end": "872279"
  },
  {
    "text": "connected to this we have another demon set the CSI Secret store this demon set",
    "start": "872279",
    "end": "878579"
  },
  {
    "text": "is a generic component it supports reading secrets from multiple Secrets",
    "start": "878579",
    "end": "884399"
  },
  {
    "text": "provider it supports reading secrets from AWS secret management from a",
    "start": "884399",
    "end": "890820"
  },
  {
    "text": "Azure key Vault from hashicor Vault of course and Google Cloud secret management",
    "start": "890820",
    "end": "896820"
  },
  {
    "text": "and here we can see our applications connected to the Pod we have our service account",
    "start": "896820",
    "end": "902880"
  },
  {
    "text": "next to it we have our volume this volume holds the actual Secrets value",
    "start": "902880",
    "end": "908820"
  },
  {
    "text": "and we have the secret provider class custom resource definitions this",
    "start": "908820",
    "end": "914399"
  },
  {
    "text": "component is the magic component why because this component actually holds",
    "start": "914399",
    "end": "920220"
  },
  {
    "text": "the pointer for the locations of the secrets in the external Secret store and",
    "start": "920220",
    "end": "926160"
  },
  {
    "text": "it holds the role with the permissions to the external Secret store so now we're going to see a demo of this",
    "start": "926160",
    "end": "935339"
  },
  {
    "text": "architecture running live in our cluster",
    "start": "935339",
    "end": "940100"
  },
  {
    "text": "so in the demo we will examine the two demons that God mentions",
    "start": "941760",
    "end": "946860"
  },
  {
    "text": "and we're going to create a deployment that will consume a vault a vault secret",
    "start": "946860",
    "end": "954260"
  },
  {
    "text": "using the secret provider class magic component and then we will change the secret value",
    "start": "954260",
    "end": "961740"
  },
  {
    "text": "and we will see it changes in the deployment as well",
    "start": "961740",
    "end": "967100"
  },
  {
    "text": "so just a second okay",
    "start": "969839",
    "end": "976079"
  },
  {
    "text": "here we can see a vault server with a predefined secret",
    "start": "976079",
    "end": "981720"
  },
  {
    "text": "and the secret is in Json format and we have the key then the name of the secret",
    "start": "981720",
    "end": "987959"
  },
  {
    "text": "is full the key is bar and we have the secret here so now if we will move to the cluster",
    "start": "987959",
    "end": "996839"
  },
  {
    "text": "and we will start to bringing our in our architecture to life",
    "start": "996839",
    "end": "1002420"
  },
  {
    "text": "the first thing we're going to do is to examine the two demon sets which we pre-installed on this particular cluster",
    "start": "1002420",
    "end": "1009680"
  },
  {
    "text": "we will use the CSI namespace to deploy our application and now we will see all the helm chart",
    "start": "1009680",
    "end": "1018199"
  },
  {
    "text": "that's installed we will see here The Secret store CSI which can be installed",
    "start": "1018199",
    "end": "1023600"
  },
  {
    "text": "using two simple commands you can find it in the GitHub page of Secrets secret",
    "start": "1023600",
    "end": "1029360"
  },
  {
    "text": "CSI there they are and the demon set of Vault can be",
    "start": "1029360",
    "end": "1034520"
  },
  {
    "text": "installed using a yaml file they also have it in the vault CSI provider Gita",
    "start": "1034520",
    "end": "1040100"
  },
  {
    "text": "page so those are our two demon sets and they",
    "start": "1040100",
    "end": "1046579"
  },
  {
    "text": "are running now let's start with the deployment of the application",
    "start": "1046579",
    "end": "1053120"
  },
  {
    "text": "the first component will be the first component will be the secret",
    "start": "1053120",
    "end": "1058460"
  },
  {
    "text": "provider class here we can see that we have a secret provide class volt 4 which",
    "start": "1058460",
    "end": "1064760"
  },
  {
    "text": "is the provider and the name of the secret we are using a provider Vault we",
    "start": "1064760",
    "end": "1071000"
  },
  {
    "text": "explicitly Define which provider we want to use what what is the address of default",
    "start": "1071000",
    "end": "1078080"
  },
  {
    "text": "server and we are giving the full path to the secret we also defining a role this is this is",
    "start": "1078080",
    "end": "1086179"
  },
  {
    "text": "a role that we created on our vault server it's pretty easy to create it and",
    "start": "1086179",
    "end": "1092419"
  },
  {
    "text": "that way we can authenticate to the Vault server and so after filling all the details",
    "start": "1092419",
    "end": "1100940"
  },
  {
    "text": "and we can create our secret provider class and that's the magic about this",
    "start": "1100940",
    "end": "1106100"
  },
  {
    "text": "component because I couldn't create another secret provider class point to AWS equipment manager and after",
    "start": "1106100",
    "end": "1112700"
  },
  {
    "text": "installing the AWS CSI Secret store CSI will help me will help me",
    "start": "1112700",
    "end": "1119380"
  },
  {
    "text": "retrieve secret from there as well so I can use two sequence provider on the",
    "start": "1119380",
    "end": "1125660"
  },
  {
    "text": "same deployment if you need it now let's see the application we have a",
    "start": "1125660",
    "end": "1131240"
  },
  {
    "text": "simple service and to a demo a demo image that will",
    "start": "1131240",
    "end": "1137660"
  },
  {
    "text": "create a simple rest API um the main the main focus should be on",
    "start": "1137660",
    "end": "1145820"
  },
  {
    "text": "the volume part so here we can see that we create a volume",
    "start": "1145820",
    "end": "1151220"
  },
  {
    "text": "for the deployment the volume points to the CSI driver and we are we're using the secret",
    "start": "1151220",
    "end": "1157220"
  },
  {
    "text": "provider class with that we just created and we will Mount the volume to the Pod",
    "start": "1157220",
    "end": "1164120"
  },
  {
    "text": "under the MNT Secret store folder in a read-only permission of course",
    "start": "1164120",
    "end": "1170419"
  },
  {
    "text": "so that way we will be able to receive the secret value as a file",
    "start": "1170419",
    "end": "1178039"
  },
  {
    "text": "so this again the definition of this the",
    "start": "1178039",
    "end": "1185059"
  },
  {
    "text": "secret provider class there is no mention for volunteer just the secret provided class and the Secret store CSI",
    "start": "1185059",
    "end": "1191900"
  },
  {
    "text": "help us to be like provide us with an interface to work with any Secret store",
    "start": "1191900",
    "end": "1198380"
  },
  {
    "text": "provider out there so now we deploy the application we will check that everything is running and and the",
    "start": "1198380",
    "end": "1206179"
  },
  {
    "text": "deployment and the service is up then we will create a port forwarding",
    "start": "1206179",
    "end": "1211280"
  },
  {
    "text": "to receive the secret value so the deployment is running the service",
    "start": "1211280",
    "end": "1217580"
  },
  {
    "text": "is up there and this is me doing a typo",
    "start": "1217580",
    "end": "1223039"
  },
  {
    "text": "so if",
    "start": "1223039",
    "end": "1229179"
  },
  {
    "text": "let's say that's there's a typo I'm missing one so",
    "start": "1230000",
    "end": "1236419"
  },
  {
    "text": "this is the note found problem but uh again now we will create the a we will",
    "start": "1236419",
    "end": "1243919"
  },
  {
    "text": "create the post folding and when we go to our browser and",
    "start": "1243919",
    "end": "1249500"
  },
  {
    "text": "we will address a the API and we can see that the secret data has passed successfully",
    "start": "1249500",
    "end": "1256400"
  },
  {
    "text": "and so first of all we managed to achieve what we've been looking for we didn't",
    "start": "1256400",
    "end": "1263240"
  },
  {
    "text": "create any kubernetes secret and our application have a generic interface to",
    "start": "1263240",
    "end": "1269360"
  },
  {
    "text": "communicate with any external secret provider out there the data is being transferred secured",
    "start": "1269360",
    "end": "1275059"
  },
  {
    "text": "and it doesn't exist on our environment variables now let's change the value",
    "start": "1275059",
    "end": "1282679"
  },
  {
    "text": "of the secret involved and by changing the value we would like",
    "start": "1282679",
    "end": "1288559"
  },
  {
    "text": "to receive the new version of The Secret in our deployment",
    "start": "1288559",
    "end": "1295159"
  },
  {
    "text": "um our way to do it will be a scale down and scale up the deployment and gal will",
    "start": "1295159",
    "end": "1300799"
  },
  {
    "text": "talk about it pretty soon so here we go we're scaling the",
    "start": "1300799",
    "end": "1306140"
  },
  {
    "text": "deployment down and bring it back to life",
    "start": "1306140",
    "end": "1312380"
  },
  {
    "text": "the Pod is being terminated in a new pod is going back online so just checking up",
    "start": "1312380",
    "end": "1320659"
  },
  {
    "text": "that everything runs well now create the port forwarding without the typo",
    "start": "1320659",
    "end": "1328840"
  },
  {
    "text": "and if we will refresh the page we'll see that the value has been changed successfully",
    "start": "1328880",
    "end": "1335360"
  },
  {
    "text": "and pretty much that's it",
    "start": "1335360",
    "end": "1340059"
  },
  {
    "text": "wow we just saw that secretary suicide driver for kubernetes Secrets is such a",
    "start": "1340760",
    "end": "1347419"
  },
  {
    "text": "powerful solution we managed to retrieve the secrets from our vault server into",
    "start": "1347419",
    "end": "1353179"
  },
  {
    "text": "our applications without any code changes and results any major security risk",
    "start": "1353179",
    "end": "1360559"
  },
  {
    "text": "so Secret store CSI driver for kubernetes secret is one of the best practices to manage kubernetes secrets",
    "start": "1360559",
    "end": "1367780"
  },
  {
    "text": "also we must talk about its pain points first of all is the complexity adding a",
    "start": "1367780",
    "end": "1377000"
  },
  {
    "text": "CSI secret star to a cluster can add complexity to the cluster since its",
    "start": "1377000",
    "end": "1382700"
  },
  {
    "text": "required required additional components and configuration to be added to the",
    "start": "1382700",
    "end": "1387740"
  },
  {
    "text": "cluster secondly accessing a CSI value vehicle accessing",
    "start": "1387740",
    "end": "1396740"
  },
  {
    "text": "CSI volume can add performance overhead since it requires additional Network",
    "start": "1396740",
    "end": "1402799"
  },
  {
    "text": "calls and can potentially cause slower access times and the last thing is the auto reload",
    "start": "1402799",
    "end": "1411620"
  },
  {
    "text": "currently when a secret value changes there is no automatically a auto reload",
    "start": "1411620",
    "end": "1417620"
  },
  {
    "text": "to the pods Secrets can be expired and needed to be changed during runtime and",
    "start": "1417620",
    "end": "1423740"
  },
  {
    "text": "in that cases you will need to Auto reload your pod because right now the",
    "start": "1423740",
    "end": "1428900"
  },
  {
    "text": "driver does not offer out of the box solution for that cases",
    "start": "1428900",
    "end": "1434200"
  },
  {
    "text": "that's a wrap so what we talked about today today we talked about what secrets are What",
    "start": "1436100",
    "end": "1442880"
  },
  {
    "text": "kubernetes secrets are how to deploy the kubernetes secrets and problems with kubernetes secrets and",
    "start": "1442880",
    "end": "1449720"
  },
  {
    "text": "then we talked about the ways to overcome these problems we focused on one solution which is the",
    "start": "1449720",
    "end": "1456440"
  },
  {
    "text": "Secret store Seaside driver and then we had this architecture and demo",
    "start": "1456440",
    "end": "1463840"
  },
  {
    "text": "overall native kubernetes Secrets can be useful to store sensitive data within a cluster",
    "start": "1464720",
    "end": "1473179"
  },
  {
    "text": "however it requires additional management and security measures in",
    "start": "1473179",
    "end": "1478820"
  },
  {
    "text": "order to keep them protected properly there are many great Solutions out there",
    "start": "1478820",
    "end": "1485059"
  },
  {
    "text": "we recommend you to analyze the needs of your sick of your organizations and find",
    "start": "1485059",
    "end": "1491000"
  },
  {
    "text": "the best solution that will help your organization keep its Secrets properly",
    "start": "1491000",
    "end": "1496220"
  },
  {
    "text": "today we give you we gave you a quick overview of how Firefly keeps its",
    "start": "1496220",
    "end": "1501620"
  },
  {
    "text": "secrets and of our architecture but don't tell",
    "start": "1501620",
    "end": "1507260"
  },
  {
    "text": "anyone can you keep a secret thank you very much [Applause]",
    "start": "1507260",
    "end": "1518720"
  },
  {
    "text": "so I think we have some time for a questions",
    "start": "1518720",
    "end": "1523880"
  },
  {
    "text": "um if some of the other questions yes",
    "start": "1523880",
    "end": "1528640"
  },
  {
    "text": "who wanted to ask here is the QR if you want to scan it you would like to hear your feedback",
    "start": "1531980",
    "end": "1538820"
  },
  {
    "text": "thank you all hello thanks for the presentation I'm probably not the only one term noticed",
    "start": "1538820",
    "end": "1544700"
  },
  {
    "text": "and you went already with faster than that but you mentioned that the need to authenticate to the Vault and you",
    "start": "1544700",
    "end": "1550039"
  },
  {
    "text": "created the configuration to authenticate this world so where is that secret",
    "start": "1550039",
    "end": "1555640"
  },
  {
    "text": "one ticket I didn't hear so well um I will repeat um it wasn't clear how we authenticate",
    "start": "1557960",
    "end": "1565159"
  },
  {
    "text": "to the Vault what was the mechanism in order to authenticate to the Vault server which is as I said what",
    "start": "1565159",
    "end": "1572419"
  },
  {
    "text": "what is the secret it's a okay",
    "start": "1572419",
    "end": "1578380"
  },
  {
    "text": "Vol server The Vault console if you remember there",
    "start": "1580700",
    "end": "1588140"
  },
  {
    "text": "we created the role and that is and this Rose uh gets permissions in order to",
    "start": "1588140",
    "end": "1593720"
  },
  {
    "text": "pull the secrets and this is the role that the secret provider class the crd use",
    "start": "1593720",
    "end": "1600039"
  },
  {
    "text": "the role was predefined with um all these certificates and we had to",
    "start": "1600039",
    "end": "1608120"
  },
  {
    "text": "create it and by attaching the service account to the Pod as God showed in the",
    "start": "1608120",
    "end": "1613279"
  },
  {
    "text": "architecture we could have used this role or and talk with world with",
    "start": "1613279",
    "end": "1618940"
  },
  {
    "text": "authentication less is that answering your question",
    "start": "1618940",
    "end": "1624740"
  },
  {
    "text": "okay a question in regards to scalability so",
    "start": "1624740",
    "end": "1630500"
  },
  {
    "text": "we're in your experience where do you sit in the balance between least privilege and uh and actually scaling",
    "start": "1630500",
    "end": "1638659"
  },
  {
    "text": "your secrets providers because every time every time you have brand new application let's take the example of",
    "start": "1638659",
    "end": "1645799"
  },
  {
    "text": "AWS Cloud you have to create new IAM roles various recruit providers and probably another service account that",
    "start": "1645799",
    "end": "1651200"
  },
  {
    "text": "needs to be able to grab those secrets and that's not exactly a great developer experience because the developers should",
    "start": "1651200",
    "end": "1656539"
  },
  {
    "text": "be like I deploy all of this is abstracted to me I don't need to think about service accounts so where do you",
    "start": "1656539",
    "end": "1661700"
  },
  {
    "text": "sit in your experience behind this so each secret provider has its own",
    "start": "1661700",
    "end": "1669260"
  },
  {
    "text": "different capabilities you mentioned AWS so in order to consume seekers in NWS",
    "start": "1669260",
    "end": "1674539"
  },
  {
    "text": "there is a policy language like it has involved and in the AWS the expansion",
    "start": "1674539",
    "end": "1681799"
  },
  {
    "text": "process with adding more and more secrets can be a bit challenging than",
    "start": "1681799",
    "end": "1688100"
  },
  {
    "text": "involved because in AWS Secrets manager is a regional Regional resource so if I",
    "start": "1688100",
    "end": "1694700"
  },
  {
    "text": "have my application and developed a month on multiple regions like it's a",
    "start": "1694700",
    "end": "1701299"
  },
  {
    "text": "best it's a best practice to do so and it will be hard to maintain two",
    "start": "1701299",
    "end": "1706460"
  },
  {
    "text": "Secrets provider that's why we chose ashicob because it was the best for us we're just heading another abstraction",
    "start": "1706460",
    "end": "1713179"
  },
  {
    "text": "layer in our vault of the environment that we are managing so that way we can",
    "start": "1713179",
    "end": "1718460"
  },
  {
    "text": "scale to multiple environments pretty easily we are using a specified",
    "start": "1718460",
    "end": "1724059"
  },
  {
    "text": "specified words as possible this is you know this was just a demo in our",
    "start": "1724059",
    "end": "1729320"
  },
  {
    "text": "production as we said we use the CSI and we are creating a creating some general",
    "start": "1729320",
    "end": "1735860"
  },
  {
    "text": "walls to some general applications according to the minimal scope of data",
    "start": "1735860",
    "end": "1741080"
  },
  {
    "text": "that they need yes it takes some effort but we are preferring to invest this",
    "start": "1741080",
    "end": "1747020"
  },
  {
    "text": "effort instead of have security security problems or um risks so is that",
    "start": "1747020",
    "end": "1753260"
  },
  {
    "text": "answering your question thank you another question uh",
    "start": "1753260",
    "end": "1758299"
  },
  {
    "text": "question over here on the right side hi hi sorry um there was a previous",
    "start": "1758299",
    "end": "1764600"
  },
  {
    "text": "limitation in csi's Secret store driver where you can't select uh like",
    "start": "1764600",
    "end": "1771620"
  },
  {
    "text": "star select um all like you have to know the name of every secret you want and not just like",
    "start": "1771620",
    "end": "1777500"
  },
  {
    "text": "a path is that still a limitation do you mean like with",
    "start": "1777500",
    "end": "1783440"
  },
  {
    "text": "um like referring to a secret in like reg or something yes or this is something",
    "start": "1783440",
    "end": "1789140"
  },
  {
    "text": "that say external Secrets provider supports but I think Secret store CSI",
    "start": "1789140",
    "end": "1795020"
  },
  {
    "text": "driver you have showed that like in our using Azure Corp Vault we gave the path",
    "start": "1795020",
    "end": "1800120"
  },
  {
    "text": "in the vault and the pest can contain the few keys inside if that answer is",
    "start": "1800120",
    "end": "1805580"
  },
  {
    "text": "request your questions what if I don't know the name of all my keys I just know like a a",
    "start": "1805580",
    "end": "1814100"
  },
  {
    "text": "the starting part of the string like like using regex in order to pull all",
    "start": "1814100",
    "end": "1820580"
  },
  {
    "text": "the secrets that match this regex um we'll have to get back with you with",
    "start": "1820580",
    "end": "1827000"
  },
  {
    "text": "that because we are using explicit definitions but that's a very good question yeah thank you thank you for",
    "start": "1827000",
    "end": "1833899"
  },
  {
    "text": "that any other question I think I saw you",
    "start": "1833899",
    "end": "1839860"
  },
  {
    "text": "so for for that actual secret itself is that namespace scoped or if we say well",
    "start": "1842600",
    "end": "1848779"
  },
  {
    "text": "get me the provider or the storage class itself is it going to list all the secrets",
    "start": "1848779",
    "end": "1854539"
  },
  {
    "text": "or is that specific to a namespace",
    "start": "1854539",
    "end": "1858820"
  },
  {
    "text": "so for now namespace isolation here that well is there a chance to adjust the",
    "start": "1859820",
    "end": "1865399"
  },
  {
    "text": "volume somehow the sound no okay have you heard him",
    "start": "1865399",
    "end": "1873520"
  },
  {
    "text": "can you repeat it please sorry let me come closer and speak to you uh with regards to that actual secret that",
    "start": "1873919",
    "end": "1879799"
  },
  {
    "text": "you're you're creating is that namespace scoped or is that cluster scope to us yeah the provider class",
    "start": "1879799",
    "end": "1885980"
  },
  {
    "text": "okay so let's just name space you're not seeing everybody's Secrets because if we're looking at 10 million Secrets okay",
    "start": "1885980",
    "end": "1891559"
  },
  {
    "text": "perfect and that and that is then also secured with our back then in that",
    "start": "1891559",
    "end": "1897080"
  },
  {
    "text": "namespace",
    "start": "1897080",
    "end": "1899620"
  },
  {
    "text": "all right thank you so much oh sorry yes he asked whether the secret",
    "start": "1909020",
    "end": "1915440"
  },
  {
    "text": "provider class is a namespaced uh it's a namespaced resource that we manage by",
    "start": "1915440",
    "end": "1922940"
  },
  {
    "text": "namespace like pod or something like that yes we said it is and then it asked",
    "start": "1922940",
    "end": "1928520"
  },
  {
    "text": "if a role-based access can be applied on these results and the answer is yes like",
    "start": "1928520",
    "end": "1933679"
  },
  {
    "text": "any other resource we can create rules and cluster roles with the exact API",
    "start": "1933679",
    "end": "1939919"
  },
  {
    "text": "version and the resource and the verbs we want to apply of course we can go to the resource name but",
    "start": "1939919",
    "end": "1947299"
  },
  {
    "text": "um this is it um can I have a yes",
    "start": "1947299",
    "end": "1952940"
  },
  {
    "text": "um our way in term wise okay three more minutes um I was curious how do you deal with",
    "start": "1952940",
    "end": "1958760"
  },
  {
    "text": "the potential downtime when you have to Auto redeploy when you change the secret",
    "start": "1958760",
    "end": "1965679"
  },
  {
    "text": "you mean the down times of of yeah let's say you change the secret in your",
    "start": "1966500",
    "end": "1973460"
  },
  {
    "text": "uh in your Vault um then you have to change that in all your words oh oh they they're rolling",
    "start": "1973460",
    "end": "1980000"
  },
  {
    "text": "update yeah um so um",
    "start": "1980000",
    "end": "1985580"
  },
  {
    "text": "it's pretty specific to Firefly but we kind of have the privilege of using some",
    "start": "1985580",
    "end": "1992240"
  },
  {
    "text": "more a constant secret but regarding the uh uh the time term secret",
    "start": "1992240",
    "end": "2001000"
  },
  {
    "text": "um we always we haven't kubernetes operator that is responsible for implementing all",
    "start": "2001000",
    "end": "2007600"
  },
  {
    "text": "our jobs before uh before we are before the job starts and we have a",
    "start": "2007600",
    "end": "2016000"
  },
  {
    "text": "validation that validates not against the walls as I said you don't want to be",
    "start": "2016000",
    "end": "2021220"
  },
  {
    "text": "dependent on that we have our own kind of refresh a rotating Secrets service",
    "start": "2021220",
    "end": "2028059"
  },
  {
    "text": "and we're using a we're using its uh it's Pro it's it's a log then Matrix and",
    "start": "2028059",
    "end": "2036220"
  },
  {
    "text": "we are using crds to you know to update update we have crds per integration and",
    "start": "2036220",
    "end": "2041740"
  },
  {
    "text": "we will updating the last time we did last time we rotate the secret what it",
    "start": "2041740",
    "end": "2049118"
  },
  {
    "text": "will be the expiration and we are a will run the job only if it's it's a if it's",
    "start": "2049119",
    "end": "2057398"
  },
  {
    "text": "available then we if not we will put it back in the queue and the queue will delay it for several more minutes okay",
    "start": "2057399",
    "end": "2064240"
  },
  {
    "text": "so the workload validates if it's correct enough yes we have a kubernetes operators that executes uh Executives",
    "start": "2064240",
    "end": "2071200"
  },
  {
    "text": "all of our uh all of our all of our jobs yes okay thank you thank you",
    "start": "2071200",
    "end": "2077320"
  },
  {
    "text": "hi when it comes to storing secrets in each CD then you can enable encryption",
    "start": "2077320",
    "end": "2082919"
  },
  {
    "text": "I'm thinking about Version Control Systems and you shouldn't Store Plain secrets in there but there are systems",
    "start": "2082919",
    "end": "2088720"
  },
  {
    "text": "like soaps Mozilla Subs that allows you to store encrypted secrets and how does",
    "start": "2088720",
    "end": "2095020"
  },
  {
    "text": "this compare um",
    "start": "2095020",
    "end": "2098639"
  },
  {
    "text": "Subs is also a great solution in order to Inc store secrets in like a VCS but it's",
    "start": "2100240",
    "end": "2109000"
  },
  {
    "text": "actually encrypted and this is also a great solution we have like we said there are many great Solutions we have",
    "start": "2109000",
    "end": "2116020"
  },
  {
    "text": "the CSI and I'm sure many of them also heard of external Secrets operator and",
    "start": "2116020",
    "end": "2122140"
  },
  {
    "text": "also soaps there are many great Solutions it just depends on the needs of the application",
    "start": "2122140",
    "end": "2127240"
  },
  {
    "text": "thank you so when we done it so okay and here are",
    "start": "2127240",
    "end": "2133480"
  },
  {
    "text": "some useful links uh Firefly has two open source Solutions one of them is",
    "start": "2133480",
    "end": "2139359"
  },
  {
    "text": "aiac more than two thousand a thousand GitHub we artificial artificial",
    "start": "2139359",
    "end": "2145060"
  },
  {
    "text": "intelligence infrastructure as code generator we also have valid IAC which",
    "start": "2145060",
    "end": "2150820"
  },
  {
    "text": "is another open source to ensures infrastructure is called best practices on your infrastructure code AS gal said",
    "start": "2150820",
    "end": "2158800"
  },
  {
    "text": "go Firefly a an application that can help devops a certain platform teams",
    "start": "2158800",
    "end": "2164380"
  },
  {
    "text": "manage the cloud complexity you can start for free in any time this is our company LinkedIn page mine and the most",
    "start": "2164380",
    "end": "2172420"
  },
  {
    "text": "talented girl coin and thank you very much again thank you for being here and we have one our last question and you",
    "start": "2172420",
    "end": "2179320"
  },
  {
    "text": "can all catch us yeah I just really want to chip in um we're doing the same thing",
    "start": "2179320",
    "end": "2184540"
  },
  {
    "text": "in my team and the CSI can be very Troublesome when it comes to heavy load",
    "start": "2184540",
    "end": "2189760"
  },
  {
    "text": "so you need to think about um there are three containers in the CSI driver so if you are going to use it",
    "start": "2189760",
    "end": "2195460"
  },
  {
    "text": "under heavy load you need to think about the node register and the Secret store increasing the capacity and then you",
    "start": "2195460",
    "end": "2201820"
  },
  {
    "text": "need to think about resource quotas and then you need to think about you know making sure that there's priority on the",
    "start": "2201820",
    "end": "2208920"
  },
  {
    "text": "demon set pod because what happens when your node is auto scaling is the Secret",
    "start": "2208920",
    "end": "2214300"
  },
  {
    "text": "store pod can be kicked out and all your applications are needed would wait until",
    "start": "2214300",
    "end": "2219339"
  },
  {
    "text": "that happens so when you're thinking about your cluster has a lot of load you have to think about other things to make",
    "start": "2219339",
    "end": "2225280"
  },
  {
    "text": "sure that the onset pod is not evicted I just wanted to add up",
    "start": "2225280",
    "end": "2230940"
  },
  {
    "text": "again thank you very much thank you thank you all [Applause]",
    "start": "2236859",
    "end": "2244070"
  }
]