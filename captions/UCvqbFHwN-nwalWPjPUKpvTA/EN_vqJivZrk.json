[
  {
    "text": "um it's a tutorial form uh so we're gonna like you know hands-on develop a crossband provider which is like you",
    "start": "399",
    "end": "6480"
  },
  {
    "text": "know a set of kubernetes controllers with their own crds so uh before starting how many uh",
    "start": "6480",
    "end": "14240"
  },
  {
    "text": "like hands up if you have been using cross playing with like you know other providers right now",
    "start": "14240",
    "end": "21279"
  },
  {
    "text": "nice uh so how many of you just heard crossplane but not using it yet or just",
    "start": "21840",
    "end": "27760"
  },
  {
    "text": "like you know at the consideration phase nice and how many of you started",
    "start": "27760",
    "end": "33200"
  },
  {
    "text": "actually developing provider and like you know got stuck somewhere so you're looking like how to",
    "start": "33200",
    "end": "39120"
  },
  {
    "text": "develop that yeah cool all right cool um so yeah writing cross pain providers so",
    "start": "39120",
    "end": "45520"
  },
  {
    "text": "cross paying providers allow you to bring any external resource external api",
    "start": "45520",
    "end": "51199"
  },
  {
    "text": "into your cluster as is as crds so this is not like you know really like",
    "start": "51199",
    "end": "57360"
  },
  {
    "text": "a unknown or like a very novel thing but like you know with the tools and runtime and code generation",
    "start": "57360",
    "end": "63440"
  },
  {
    "text": "tooling we built we have now a framework optimized for interacting with crud",
    "start": "63440",
    "end": "69600"
  },
  {
    "text": "external resource apis for for example like you know the main thing with the kubernetes control is like apply logic",
    "start": "69600",
    "end": "77360"
  },
  {
    "text": "like hey update if it already exists and like you know create only if it doesn't et cetera so like all these are like you",
    "start": "77360",
    "end": "84159"
  },
  {
    "text": "know handled uh towards like you know optimus optimized for assuming that the external api is like",
    "start": "84159",
    "end": "91360"
  },
  {
    "text": "you know uh in design in corrupt method not like in a declarative fashion so",
    "start": "91360",
    "end": "97200"
  },
  {
    "text": "essentially what we do here like you know have a framework that contains like",
    "start": "97200",
    "end": "102320"
  },
  {
    "text": "you know runtime and code generation tooling that will allow you to",
    "start": "102320",
    "end": "108399"
  },
  {
    "text": "take an imperative api and expose it as declarative api and use",
    "start": "108399",
    "end": "114320"
  },
  {
    "text": "cross-plain primitives abstractions and compositions on top of it",
    "start": "114320",
    "end": "119920"
  },
  {
    "text": "so yeah a little bit up about us so i'm well uh i work at that",
    "start": "121040",
    "end": "126560"
  },
  {
    "text": "pound and i make i've been a crosstalk maintainer since v 0.3 which is around like three years now",
    "start": "126560",
    "end": "133360"
  },
  {
    "text": "and i had worked at sap before that again developing kubernetes controllers",
    "start": "133360",
    "end": "138560"
  },
  {
    "text": "in sun yeah i'm hasan and just like i'm working at",
    "start": "138560",
    "end": "144879"
  },
  {
    "text": "upbound and i am the newest maintainer of crossplane uh with crossplane 1.7",
    "start": "144879",
    "end": "150959"
  },
  {
    "text": "release we shipped the external secret store feature and after that uh i am honored",
    "start": "150959",
    "end": "157840"
  },
  {
    "text": "to be a uh crossband maintainer yeah",
    "start": "157840",
    "end": "162879"
  },
  {
    "text": "and there are lots of like you know provider maintainers which are like you know on the orders of 10 so",
    "start": "162879",
    "end": "168080"
  },
  {
    "text": "feel free to like after this tutorial feel free to go ahead and contribute and like you know become a maintainer",
    "start": "168080",
    "end": "174319"
  },
  {
    "text": "cool so we can we can start so what is a cross pin provider as i just mentioned",
    "start": "174319",
    "end": "180640"
  },
  {
    "text": "just like you create pods and deployment resources crosspin providers brings the ability to",
    "start": "180640",
    "end": "187040"
  },
  {
    "text": "your cluster to create external resources like buckets for example this is from provider aws",
    "start": "187040",
    "end": "194239"
  },
  {
    "text": "s3 database cross pane io and you can create a bucket with like you know a lot of uh like all the configurations that",
    "start": "194239",
    "end": "201360"
  },
  {
    "text": "are available via aws cli or the api so this is like you know in its essence",
    "start": "201360",
    "end": "207920"
  },
  {
    "text": "that's what like you know what it adds to your cluster and then so",
    "start": "207920",
    "end": "214159"
  },
  {
    "text": "technically though like you know what makes up a crosspin provider is first custom resource definition for this type",
    "start": "214159",
    "end": "220319"
  },
  {
    "text": "which is like a schema and one thing that is different like you know then the generic kubernetes",
    "start": "220319",
    "end": "225599"
  },
  {
    "text": "controllers is that we have this concept of xrm crosspin resource model which we will go into details in a minute",
    "start": "225599",
    "end": "233120"
  },
  {
    "text": "and then implementation of the kubernetes controller reconciling that crd",
    "start": "233120",
    "end": "238480"
  },
  {
    "text": "and then provider config type which is also a little bit like a crosspin specific term that",
    "start": "238480",
    "end": "244560"
  },
  {
    "text": "tells like you know for every resource you need to tell how it will authenticate to the target api for aws",
    "start": "244560",
    "end": "251280"
  },
  {
    "text": "for example this points to a secret with a like aws access key and stuff so per",
    "start": "251280",
    "end": "256560"
  },
  {
    "text": "resource you have to like you know say okay this is the provider config that you should use for this resource and the",
    "start": "256560",
    "end": "262160"
  },
  {
    "text": "package metadata these cont these providers are packaged as oca oci images",
    "start": "262160",
    "end": "268720"
  },
  {
    "text": "and you can use crosspin package manager to install them",
    "start": "268720",
    "end": "273280"
  },
  {
    "text": "um yeah cross pay resource model so this is uh i think the crux of like you know",
    "start": "273919",
    "end": "279680"
  },
  {
    "text": "cross pm providers and like why would you develop a crosspin provider as opposed like you know a standard",
    "start": "279680",
    "end": "285360"
  },
  {
    "text": "kubernetes controller uh this resource model is based on kubernetes resource model krm which like",
    "start": "285360",
    "end": "292720"
  },
  {
    "text": "you know you can take a look at after the session uh which is like you know a bowl of",
    "start": "292720",
    "end": "298400"
  },
  {
    "text": "text with like api conventions uh references optionality and everything",
    "start": "298400",
    "end": "304240"
  },
  {
    "text": "so on top of that as a superset of that krm model we have many conventions that",
    "start": "304240",
    "end": "310720"
  },
  {
    "text": "make up crosspin resource model for example the first and most important one is high fidelity",
    "start": "310720",
    "end": "316720"
  },
  {
    "text": "so on the right ucdb instance which is like you know rds from aws",
    "start": "316720",
    "end": "322479"
  },
  {
    "text": "high fidelity says that you should be able to do everything with that crd that",
    "start": "322479",
    "end": "328560"
  },
  {
    "text": "api allows so like you know there are only a couple of fields right now to make it like you",
    "start": "328560",
    "end": "334560"
  },
  {
    "text": "know fit there but there are close to 100 fields of rds instance so like you know at because this is like",
    "start": "334560",
    "end": "341199"
  },
  {
    "text": "you know the lowest level primitive in your cluster that we will build on top of it has to expose everything like it's",
    "start": "341199",
    "end": "346639"
  },
  {
    "text": "not an abstraction but more like representation of the external resource so it has to show all knobs and toggles",
    "start": "346639",
    "end": "354960"
  },
  {
    "text": "and in the status it should show like you know everything that you can't configure like you know health of the db",
    "start": "354960",
    "end": "360800"
  },
  {
    "text": "instance for example or the uh url generated by the by the cloud provider",
    "start": "360800",
    "end": "366960"
  },
  {
    "text": "and then there are like you know other uh features like for provider at provider so when you when you are targeting",
    "start": "366960",
    "end": "373919"
  },
  {
    "text": "like any external resource that it's really hard to come up with like you know common denominators right",
    "start": "373919",
    "end": "380479"
  },
  {
    "text": "like summaries some apis are like uh they have different names and different",
    "start": "380479",
    "end": "385840"
  },
  {
    "text": "structs and everything so what this one says like you know the spec specification should go under four",
    "start": "385840",
    "end": "392240"
  },
  {
    "text": "provider struct so other than that like you know deletion policy and like you know highest level",
    "start": "392240",
    "end": "398080"
  },
  {
    "text": "things are cross pin specific so at every cross pin provider you can expect to see deletion policy you can expect to",
    "start": "398080",
    "end": "405039"
  },
  {
    "text": "see provider config for example but inside for provider that is resource specific",
    "start": "405039",
    "end": "411039"
  },
  {
    "text": "and then under status you have ad provider so status that ad provider would be like you know what that",
    "start": "411039",
    "end": "416880"
  },
  {
    "text": "specific provider returns from the api and similar to deletion policy for example you can find a ready condition",
    "start": "416880",
    "end": "424400"
  },
  {
    "text": "which is also like you know signaled by the cloud provider so you can for example have a standard there",
    "start": "424400",
    "end": "430479"
  },
  {
    "text": "like you know hey if a resource reports ready then it's definitely like ready to be used and that is across all club club",
    "start": "430479",
    "end": "437280"
  },
  {
    "text": "providers and all apis and i i don't want to go to like in the",
    "start": "437280",
    "end": "443360"
  },
  {
    "text": "detail of all of them because like you know i know everyone is safe to start coding but like you know just at the",
    "start": "443360",
    "end": "449199"
  },
  {
    "text": "high level external name and tagging we have the standard identification for all apis so like you know you don't have to",
    "start": "449199",
    "end": "456319"
  },
  {
    "text": "find vpcid rds id and everything it's always external name and we handle the",
    "start": "456319",
    "end": "462000"
  },
  {
    "text": "binding to like you know actual identification in the code and no sensitive information as you can",
    "start": "462000",
    "end": "467199"
  },
  {
    "text": "see here there cannot be a master user password field on the cr so",
    "start": "467199",
    "end": "473199"
  },
  {
    "text": "you have to like a reference a secret and then controller will take the password from there and references i",
    "start": "473199",
    "end": "478639"
  },
  {
    "text": "think this is like you know one of the best features of crosspin providers and we'll go into detail how we handle that",
    "start": "478639",
    "end": "484879"
  },
  {
    "text": "it is about like you know referencing other resources only with their custom resource name for example vpc id right",
    "start": "484879",
    "end": "493280"
  },
  {
    "text": "if you create a vpc its id is assigned later so if you you can you are able to",
    "start": "493280",
    "end": "499599"
  },
  {
    "text": "give its name metadata name cr name in a folder like in a bit bunch of infrastructure and when you keep ctl",
    "start": "499599",
    "end": "505680"
  },
  {
    "text": "apply it it will wait for vpc id to appear and then use it so it will become",
    "start": "505680",
    "end": "510720"
  },
  {
    "text": "eventually consistent you don't have to like you know create vpc take the id and copy it to other resource so that it can",
    "start": "510720",
    "end": "517200"
  },
  {
    "text": "start creating and then connection secret is also like you know as standard right connection",
    "start": "517200",
    "end": "523279"
  },
  {
    "text": "secret to ref so when i create this rdsdb instance it publishes once it's ready it publishes a connection secret",
    "start": "523279",
    "end": "530560"
  },
  {
    "text": "that you can mount to your pods which we will do as part of the demo to connect",
    "start": "530560",
    "end": "535680"
  },
  {
    "text": "planet scale database to wordpress uh via connection secret",
    "start": "535680",
    "end": "540800"
  },
  {
    "text": "and then deletion policy is like you know if you if you don't want dbst to be ever deleted you can keep it orphaned",
    "start": "540800",
    "end": "547760"
  },
  {
    "text": "and even though you delete this resource it's going to be like you know still in aws",
    "start": "547760",
    "end": "553440"
  },
  {
    "text": "um and yeah and others uh readiness conditions crd categories which",
    "start": "553440",
    "end": "559519"
  },
  {
    "text": "we can take a look later and there is this link to for the whole xrm spec",
    "start": "559519",
    "end": "565839"
  },
  {
    "text": "yeah so um so all these external features as i said in the beginning we have a framework",
    "start": "565839",
    "end": "572959"
  },
  {
    "text": "that composed of like you know a runtime code generation and some scaffolding so that it's like you know you already have",
    "start": "572959",
    "end": "580080"
  },
  {
    "text": "to re write only the cloud provider's specific stuff right so for example this",
    "start": "580080",
    "end": "585920"
  },
  {
    "text": "is a usual gcp cloud sql instance crd here you see like you know we have",
    "start": "585920",
    "end": "592640"
  },
  {
    "text": "inline xpv one resource spec that comes from cross plane runtime and it has the",
    "start": "592640",
    "end": "598320"
  },
  {
    "text": "standard fields so under four provider",
    "start": "598320",
    "end": "603440"
  },
  {
    "text": "then you start to give like you know hey cloud sql instance requires these parameters to work with so that's like",
    "start": "603440",
    "end": "609920"
  },
  {
    "text": "you know this this is like scaffold file which we will create with a command and then populate inside these parameters",
    "start": "609920",
    "end": "617360"
  },
  {
    "text": "and observation structs because like you know they are the ones that are like you know api specific and the rest is like",
    "start": "617360",
    "end": "624399"
  },
  {
    "text": "you know cross plane generic so as an example the resource specs",
    "start": "624399",
    "end": "629440"
  },
  {
    "text": "struck from cross plane runtime contains this right connection secret ref provider config graph and deletion",
    "start": "629440",
    "end": "635680"
  },
  {
    "text": "policy so you can be sure that like you know at every crosspin provider and crd you can find these",
    "start": "635680",
    "end": "642079"
  },
  {
    "text": "fields and build your assumptions on top of them",
    "start": "642079",
    "end": "647560"
  },
  {
    "text": "and then the controller i think this is one of the key parts so when you develop a crossplane provider",
    "start": "648320",
    "end": "654480"
  },
  {
    "text": "you yourself don't actually write the whole controller logic and what i mean by control controller logic uh if if you",
    "start": "654480",
    "end": "661200"
  },
  {
    "text": "have developed kubernetes controllers before this function signature should be like you know really familiar to you",
    "start": "661200",
    "end": "666560"
  },
  {
    "text": "because it's what upstream controller runtime requires right so in crossplan runtime we actually",
    "start": "666560",
    "end": "673360"
  },
  {
    "text": "develop that signature for you and then ask only the crowd methods of the api so you don't",
    "start": "673360",
    "end": "680959"
  },
  {
    "text": "have to think about like you know okay is this function i'd important is this function like you know uh if if at the",
    "start": "680959",
    "end": "687760"
  },
  {
    "text": "same two controllers reconcile at the same time will create be called two times for example",
    "start": "687760",
    "end": "694000"
  },
  {
    "text": "how does the like you know calls uh are made for like no deletion for",
    "start": "694000",
    "end": "699279"
  },
  {
    "text": "example so all these like you know basic logic that you have to write for every api",
    "start": "699279",
    "end": "704399"
  },
  {
    "text": "are handled in this controller so for example if you can see here like we uh",
    "start": "704399",
    "end": "711600"
  },
  {
    "text": "get the resource like new managed and i will go into like you know i will show you the interface there so it works with",
    "start": "711600",
    "end": "717120"
  },
  {
    "text": "like you know interface and like you know i'll show how it's generated and then here the logic starts right",
    "start": "717120",
    "end": "724160"
  },
  {
    "text": "for example it's like if if the resource is deleted and if if it's orphan like you know don't touch it if it's not",
    "start": "724160",
    "end": "730079"
  },
  {
    "text": "orphan like you do that and do this like you know the whole logic is implemented here so in order for this controller to work",
    "start": "730079",
    "end": "737120"
  },
  {
    "text": "that is like you know what you need to provide as uh functions of the crowd functions in your actual",
    "start": "737120",
    "end": "744560"
  },
  {
    "text": "implementation because like you know that is the point that we cannot generalize across all apis right we",
    "start": "744560",
    "end": "751200"
  },
  {
    "text": "cannot know like you know observe implementation of cloud sql instance",
    "start": "751200",
    "end": "757519"
  },
  {
    "text": "while we write we'll write this like you know in cross pin runtime so that's where you come in and like you know add",
    "start": "757519",
    "end": "763120"
  },
  {
    "text": "these functions which we will do for two resources in a minute like observe create update and delete",
    "start": "763120",
    "end": "770880"
  },
  {
    "text": "and then uh this is the you remember there was a new managed call and this is like you know another interface that has",
    "start": "770880",
    "end": "777839"
  },
  {
    "text": "to be satisfied by your crd and that is like you know how we impose these standards",
    "start": "777839",
    "end": "783839"
  },
  {
    "text": "at a technical level so like you know it's not only a convention whenever we can we impose those like you",
    "start": "783839",
    "end": "790000"
  },
  {
    "text": "know as technical limitations for example it has to have like provider config reference interface it has to",
    "start": "790000",
    "end": "795760"
  },
  {
    "text": "implement that it has to implement conditional interface which is like already conditioned sync condition",
    "start": "795760",
    "end": "802000"
  },
  {
    "text": "and it has to like you know have connection secret writer to interface implemented and for all these because",
    "start": "802000",
    "end": "808320"
  },
  {
    "text": "they are like generic across all resources we have code generation tools that will help you just to like you know",
    "start": "808320",
    "end": "815600"
  },
  {
    "text": "scaffold make your changes run make generate and all is filled and like you know ready to be used",
    "start": "815600",
    "end": "823040"
  },
  {
    "text": "and this is an example of generated code by our angry jet tool so as you can see",
    "start": "823040",
    "end": "829199"
  },
  {
    "text": "cloud sql instance get condition get deletion policy these are all and like your code is analyzed",
    "start": "829199",
    "end": "834959"
  },
  {
    "text": "statically and then like you know if it sees resource spec in line it generates all of these automatically so that you",
    "start": "834959",
    "end": "841839"
  },
  {
    "text": "don't have to think about okay like you know now what do i need to like you know implement extra to to to satisfy this",
    "start": "841839",
    "end": "848800"
  },
  {
    "text": "interface because we want to keep as little as possible",
    "start": "848800",
    "end": "853920"
  },
  {
    "text": "to for implementation so that you can focus on your api bindings like the crud methods that i showed earlier",
    "start": "853920",
    "end": "861839"
  },
  {
    "text": "and the next one is the referencing that i mentioned in the xrm and this is like",
    "start": "861839",
    "end": "866880"
  },
  {
    "text": "you know one of the key differences between like you know other infrastructure as code tools is that it",
    "start": "866880",
    "end": "872560"
  },
  {
    "text": "works just like kubernetes references right in kubernetes you refer to like",
    "start": "872560",
    "end": "877839"
  },
  {
    "text": "you know specific like with label selector you refer to services from services to parts for example and that",
    "start": "877839",
    "end": "884240"
  },
  {
    "text": "is like you know how we do the same thing with infrastructure for example you can refer from rds instance to three",
    "start": "884240",
    "end": "890639"
  },
  {
    "text": "subnets and vpcs and security groups all in the similar way with kubernetes and",
    "start": "890639",
    "end": "896800"
  },
  {
    "text": "that is like you know how we technically implement this you add reference and selector and these are",
    "start": "896800",
    "end": "902160"
  },
  {
    "text": "like same as kubernetes structs and then we annotate this field so that",
    "start": "902160",
    "end": "908720"
  },
  {
    "text": "it generates the actual reference dissolving function for example in other tools you you whenever you need to uh",
    "start": "908720",
    "end": "915760"
  },
  {
    "text": "reference another object you have to give the field pass like hey go and take this information from spec",
    "start": "915760",
    "end": "922320"
  },
  {
    "text": "for provider vpc id and that and then maybe normalize it with like you know",
    "start": "922320",
    "end": "927600"
  },
  {
    "text": "concatenate it and do that all this is built in in the in the in the provider code so",
    "start": "927600",
    "end": "933279"
  },
  {
    "text": "you only need to give always like you know the custom resource name and the eventual consistency and like",
    "start": "933279",
    "end": "939199"
  },
  {
    "text": "you know with one cube ctl apply you can bring up the whole world of cloud resources",
    "start": "939199",
    "end": "945680"
  },
  {
    "text": "yeah and this is the actual like you know generated code for the reference reserval and this is also like you know",
    "start": "948160",
    "end": "953680"
  },
  {
    "text": "what we will say in a minute i'm just like you know keeping giving you like a little peaks of the code that we will be",
    "start": "953680",
    "end": "960320"
  },
  {
    "text": "working with uh you see it like resolve references and then we use the fields and report like you know it's not",
    "start": "960320",
    "end": "966079"
  },
  {
    "text": "resolved so yeah it's it's uh it's all generated code",
    "start": "966079",
    "end": "972160"
  },
  {
    "text": "um and yeah now uh we will start the implementation",
    "start": "972160",
    "end": "977199"
  },
  {
    "text": "uh hassan will be helping here so plan a scale provider we",
    "start": "977199",
    "end": "982240"
  },
  {
    "text": "will implement a database crd and it requires password password api is",
    "start": "982240",
    "end": "987839"
  },
  {
    "text": "a different api so we have to implement a different crd for that and then we will have we will write a composition",
    "start": "987839",
    "end": "994560"
  },
  {
    "text": "cross plane composition that has one database one password and one wordpress installation with helm so",
    "start": "994560",
    "end": "1002320"
  },
  {
    "text": "with composition we will have a new api we will define it via yaml xrd and we",
    "start": "1002320",
    "end": "1008399"
  },
  {
    "text": "will go into details after the implementation and then like you know with one namespace yaml you will have",
    "start": "1008399",
    "end": "1014959"
  },
  {
    "text": "both you will have all these three like you know provisioned immediately",
    "start": "1014959",
    "end": "1020720"
  },
  {
    "text": "and yeah so i will uh let hassan take over and start the implementation",
    "start": "1020720",
    "end": "1026558"
  },
  {
    "text": "thank you um yeah so maybe i should quickly uh talk",
    "start": "1026559",
    "end": "1033199"
  },
  {
    "text": "about why we choose planet scale in our implementation so plan scale is a",
    "start": "1033199",
    "end": "1040000"
  },
  {
    "text": "managed service with cool features and it's based on or works on top of open source vts project",
    "start": "1040000",
    "end": "1046720"
  },
  {
    "text": "and uh the the first point is it does not have a crossplan provider yet so we will",
    "start": "1046720",
    "end": "1053440"
  },
  {
    "text": "implement it here together from scratch uh another thing is like it allows you to have one database for a",
    "start": "1053440",
    "end": "1062240"
  },
  {
    "text": "free account so that you can just uh you know like try that out by creating an",
    "start": "1062240",
    "end": "1068080"
  },
  {
    "text": "account and getting an access token so uh this is why we choose planetscale",
    "start": "1068080",
    "end": "1075360"
  },
  {
    "text": "yeah so let me start so uh",
    "start": "1075360",
    "end": "1080960"
  },
  {
    "text": "first of all uh we will start i don't know like i i believe there will be someone who will try following the uh",
    "start": "1080960",
    "end": "1088960"
  },
  {
    "text": "implementation so i will try to be as slow as possible so first of all we",
    "start": "1088960",
    "end": "1094320"
  },
  {
    "text": "will need to go to crossplane slash provider",
    "start": "1094320",
    "end": "1102480"
  },
  {
    "text": "template so this is a template github template",
    "start": "1102559",
    "end": "1108559"
  },
  {
    "text": "and it has all the you know like scaffold or all the",
    "start": "1108559",
    "end": "1115919"
  },
  {
    "text": "functionalities including ci including builds",
    "start": "1116760",
    "end": "1122559"
  },
  {
    "text": "make files etc so we can just make a quick start from here",
    "start": "1122559",
    "end": "1127919"
  },
  {
    "text": "and then it will be easier to build our provider so first thing is",
    "start": "1127919",
    "end": "1135039"
  },
  {
    "text": "we'll need to hit this use this template button and then",
    "start": "1135039",
    "end": "1141280"
  },
  {
    "text": "select an organization i will start this under crossplane contrib but you can select it",
    "start": "1141280",
    "end": "1147600"
  },
  {
    "text": "select your own gita pork planet scale",
    "start": "1147600",
    "end": "1154799"
  },
  {
    "text": "provider plan scale so now i'm hitting create repository",
    "start": "1154799",
    "end": "1161559"
  },
  {
    "text": "all right so now i'm cloning it to my",
    "start": "1168559",
    "end": "1174799"
  },
  {
    "text": "demo directory",
    "start": "1174799",
    "end": "1178679"
  },
  {
    "text": "this text size is good for everyone okay",
    "start": "1184559",
    "end": "1190320"
  },
  {
    "text": "so cd provider planet scale and let me open my goland",
    "start": "1190320",
    "end": "1199679"
  },
  {
    "text": "so um [Applause]",
    "start": "1204880",
    "end": "1213130"
  },
  {
    "text": "so right now everything uh like we only have template inside the repository you",
    "start": "1222159",
    "end": "1228320"
  },
  {
    "text": "can see like in the readme we have provider template in image names we have template template",
    "start": "1228320",
    "end": "1234480"
  },
  {
    "text": "controller we have a sample api and we only have a sample controller",
    "start": "1234480",
    "end": "1242559"
  },
  {
    "text": "like in this state you can already build and run this controller and it will have a sample api you can play with it but",
    "start": "1242559",
    "end": "1250720"
  },
  {
    "text": "now we will not do that we will immediately start building our own providers so first step is",
    "start": "1250720",
    "end": "1257200"
  },
  {
    "text": "as you would expect to replace the name template with planet scale so that",
    "start": "1257200",
    "end": "1262720"
  },
  {
    "text": "we can you know like we can have the correct name of our provider so we have recently",
    "start": "1262720",
    "end": "1268720"
  },
  {
    "text": "added uh a helper utility helper make targets i",
    "start": "1268720",
    "end": "1274480"
  },
  {
    "text": "would say so let me open my notes",
    "start": "1274480",
    "end": "1281840"
  },
  {
    "text": "yeah so first of all after you know cloning we need to run make sub",
    "start": "1284080",
    "end": "1291039"
  },
  {
    "text": "modules so that we get build sub module uh which is a common sub module that is",
    "start": "1291039",
    "end": "1297760"
  },
  {
    "text": "you know under a pound uh organization but it contains",
    "start": "1297760",
    "end": "1303520"
  },
  {
    "text": "like really useful utilities for building and pushing images and help charts etc",
    "start": "1303520",
    "end": "1309760"
  },
  {
    "text": "so we have we got it and the make target that i mentioned is",
    "start": "1309760",
    "end": "1316559"
  },
  {
    "text": "make provider.prepare and then we gave the provider name and it will be planetscale",
    "start": "1316559",
    "end": "1324960"
  },
  {
    "text": "yeah so let's check what happened yeah as you can see all the name",
    "start": "1325039",
    "end": "1331360"
  },
  {
    "text": "template names replaced with planet scale and we got rid of the sample api",
    "start": "1331360",
    "end": "1338799"
  },
  {
    "text": "we don't have any api yet in this controller so now let's use the other",
    "start": "1338799",
    "end": "1345600"
  },
  {
    "text": "you know helper make target and to generate and generate the",
    "start": "1345600",
    "end": "1352960"
  },
  {
    "text": "database type so for any type you would need to define a group",
    "start": "1352960",
    "end": "1359600"
  },
  {
    "text": "and a kind in kubernetes and also a api version so",
    "start": "1359600",
    "end": "1365600"
  },
  {
    "text": "i will not give api version and it will default to v1 alpha one but",
    "start": "1365600",
    "end": "1371120"
  },
  {
    "text": "i will need to find a group and a you know a kind so typically",
    "start": "1371120",
    "end": "1378320"
  },
  {
    "text": "for aws services for example you can have ec2 as group name",
    "start": "1378320",
    "end": "1384400"
  },
  {
    "text": "and then instance as kind but in the case of planet scale like we",
    "start": "1384400",
    "end": "1390159"
  },
  {
    "text": "have database and we could of course say it's database and kind as instance but i",
    "start": "1390159",
    "end": "1396240"
  },
  {
    "text": "choose to use a database group and database as the name of the kind so",
    "start": "1396240",
    "end": "1402720"
  },
  {
    "text": "so now i'm running this command provider at type provider name group database and",
    "start": "1402720",
    "end": "1408080"
  },
  {
    "text": "kind database yeah so",
    "start": "1408080",
    "end": "1414080"
  },
  {
    "text": "yeah here at this time i don't know if i can make this bigger",
    "start": "1414640",
    "end": "1420400"
  },
  {
    "text": "but does anybody know that experience",
    "start": "1421760",
    "end": "1428840"
  },
  {
    "text": "i can try this one",
    "start": "1430000",
    "end": "1433279"
  },
  {
    "text": "okay",
    "start": "1435440",
    "end": "1438440"
  },
  {
    "text": "it doesn't work well so tools",
    "start": "1455279",
    "end": "1461200"
  },
  {
    "text": "are the windows",
    "start": "1461600",
    "end": "1464480"
  },
  {
    "text": "okay anyway so here you can see like database api is created with just some placeholder",
    "start": "1466720",
    "end": "1474559"
  },
  {
    "text": "but this part is just common we don't have to do anything specific to",
    "start": "1474559",
    "end": "1480640"
  },
  {
    "text": "our resource at this section but here you can see like spec has a database spec",
    "start": "1480640",
    "end": "1487120"
  },
  {
    "text": "and database the database spec contains the crossplane runtimes resource spec which",
    "start": "1487120",
    "end": "1493440"
  },
  {
    "text": "already has the built-in or common xram",
    "start": "1493440",
    "end": "1498640"
  },
  {
    "text": "methods or functions or types so here you can see right connection secret publish connection details",
    "start": "1498640",
    "end": "1505120"
  },
  {
    "text": "provider config reference deletion policy we don't have to do anything uh for for those so they they just come for",
    "start": "1505120",
    "end": "1513039"
  },
  {
    "text": "free we only need to change this database parameters section and here you",
    "start": "1513039",
    "end": "1518799"
  },
  {
    "text": "can see like it is a placeholder configurable field and we will change this in a minute so but",
    "start": "1518799",
    "end": "1525360"
  },
  {
    "text": "but before that let's also generate the other type which is a branch password uh",
    "start": "1525360",
    "end": "1532000"
  },
  {
    "text": "in in plan scale after after you create a database to use that database you will",
    "start": "1532000",
    "end": "1537279"
  },
  {
    "text": "need to create a password this is a different step like in ui you can uh click and get the password but behind",
    "start": "1537279",
    "end": "1544480"
  },
  {
    "text": "the scenes it it makes another api call and uh for the branch that you selected",
    "start": "1544480",
    "end": "1549679"
  },
  {
    "text": "you can create a password so uh this this time we use group name",
    "start": "1549679",
    "end": "1556720"
  },
  {
    "text": "as branch and kind will be password so",
    "start": "1556720",
    "end": "1562720"
  },
  {
    "text": "yeah this this password type is also added there is two steps that is not automated",
    "start": "1563760",
    "end": "1570880"
  },
  {
    "text": "yet with this make targets but they are relatively simple so",
    "start": "1570880",
    "end": "1577039"
  },
  {
    "text": "first of all we need to register our apis in this api slash plan scale.go file and then we",
    "start": "1577039",
    "end": "1584320"
  },
  {
    "text": "also need to register our controllers so let's go there",
    "start": "1584320",
    "end": "1589840"
  },
  {
    "text": "yeah here you can see we got rid of actually the sample and",
    "start": "1589840",
    "end": "1596159"
  },
  {
    "text": "we now have database and this should be",
    "start": "1596159",
    "end": "1601760"
  },
  {
    "text": "database we want alpha one database we want iphone",
    "start": "1601760",
    "end": "1608240"
  },
  {
    "text": "and then we also have a branch group",
    "start": "1608240",
    "end": "1614880"
  },
  {
    "text": "crunch so",
    "start": "1618799",
    "end": "1624279"
  },
  {
    "text": "okay so we have registered our apis under apis directory now the next thing",
    "start": "1630000",
    "end": "1636080"
  },
  {
    "text": "is uh to register our controllers so",
    "start": "1636080",
    "end": "1641279"
  },
  {
    "text": "you can see we have database type and password type and we no longer have my type so let's",
    "start": "1641279",
    "end": "1647760"
  },
  {
    "text": "change it database database dot setup",
    "start": "1647760",
    "end": "1655600"
  },
  {
    "text": "and password",
    "start": "1655600",
    "end": "1661039"
  },
  {
    "text": "and password.setup okay so we have",
    "start": "1661120",
    "end": "1667520"
  },
  {
    "text": "types generated controllers generated as placeholders or",
    "start": "1667520",
    "end": "1673200"
  },
  {
    "text": "as scaffold and registered those apis and controllers now",
    "start": "1673200",
    "end": "1680480"
  },
  {
    "text": "if we check here like in schema builder register it fails like",
    "start": "1680480",
    "end": "1687120"
  },
  {
    "text": "gives an error like some methods are missing deep copy object etc so",
    "start": "1687120",
    "end": "1693600"
  },
  {
    "text": "at this point we use code generation tools uh controller runtime controller tools uh",
    "start": "1693600",
    "end": "1701200"
  },
  {
    "text": "will generate these deep copy methods like the the methods common to any kubernetes object like just like you",
    "start": "1701200",
    "end": "1707760"
  },
  {
    "text": "are building a normal crossplane kubernetes operator but",
    "start": "1707760",
    "end": "1714480"
  },
  {
    "text": "the cross plane tools will also do the same and generate the required methods for",
    "start": "1714480",
    "end": "1721120"
  },
  {
    "text": "cross-plane x-ray so let's call make that generate",
    "start": "1721120",
    "end": "1729640"
  },
  {
    "text": "okay so let's see what we had generated yeah so you can see like",
    "start": "1746640",
    "end": "1753679"
  },
  {
    "text": "generated that deep copy this is generated by uh controller tools",
    "start": "1753679",
    "end": "1759120"
  },
  {
    "text": "and we also have generated that managed managed resource managed is a concept in kubernetes in",
    "start": "1759120",
    "end": "1767279"
  },
  {
    "text": "crossplane we call external resource representations as managed resources so",
    "start": "1767279",
    "end": "1773120"
  },
  {
    "text": "here we see like the generated methods for to satisfy crossplane xram",
    "start": "1773120",
    "end": "1780960"
  },
  {
    "text": "so i think we are in a good state so it's good to commit these changes not to",
    "start": "1780960",
    "end": "1788080"
  },
  {
    "text": "lose so i will just add everything",
    "start": "1788080",
    "end": "1795480"
  },
  {
    "text": "and generate types generate and register",
    "start": "1795600",
    "end": "1803840"
  },
  {
    "text": "types so now we have our controller with types",
    "start": "1803840",
    "end": "1808880"
  },
  {
    "text": "but there is no business logic in it so let's let's do that right now",
    "start": "1808880",
    "end": "1815120"
  },
  {
    "text": "so first of all uh since this is uh you know like the controllers are implemented in",
    "start": "1815120",
    "end": "1821919"
  },
  {
    "text": "golang we will need to find a go client for the api that we will be interacting",
    "start": "1821919",
    "end": "1827279"
  },
  {
    "text": "with so i will search for planet scale",
    "start": "1827279",
    "end": "1832399"
  },
  {
    "text": "go client yeah",
    "start": "1832960",
    "end": "1839840"
  },
  {
    "text": "so let's see what we have in database",
    "start": "1839919",
    "end": "1846080"
  },
  {
    "text": "yeah so here you can see create database request and it has these fields so in",
    "start": "1846320",
    "end": "1852799"
  },
  {
    "text": "our spec we will also need the same fields so i will just",
    "start": "1852799",
    "end": "1857840"
  },
  {
    "text": "copy them here and go to api database database type and",
    "start": "1857840",
    "end": "1866320"
  },
  {
    "text": "parameters four parameters and database parameters so i will just put them here",
    "start": "1866320",
    "end": "1872080"
  },
  {
    "text": "and do some minor modifications first of all i will need to",
    "start": "1872080",
    "end": "1878480"
  },
  {
    "text": "you know add a json tag for this as well",
    "start": "1878480",
    "end": "1884799"
  },
  {
    "text": "and it is organization",
    "start": "1884799",
    "end": "1889960"
  },
  {
    "text": "we don't need name because we will use the metadata.name of our custom resource",
    "start": "1890080",
    "end": "1895200"
  },
  {
    "text": "so i'm yeah our external name yeah external name uh",
    "start": "1895200",
    "end": "1900640"
  },
  {
    "text": "and i'm getting rid of this and one thing uh like one important point here like uh",
    "start": "1900640",
    "end": "1908399"
  },
  {
    "text": "notes and region has empty text which indicates that these are optional fields uh",
    "start": "1908399",
    "end": "1915919"
  },
  {
    "text": "you can verify this by you know like creating a database from ui and you see that those are optional",
    "start": "1915919",
    "end": "1922240"
  },
  {
    "text": "so since they are optional we will need to change their type from",
    "start": "1922240",
    "end": "1927279"
  },
  {
    "text": "string to pointer to string type so when it is string pointer we can",
    "start": "1927279",
    "end": "1933279"
  },
  {
    "text": "you know like check whether it is nil or not if it is nil we we just uh do not pass anything",
    "start": "1933279",
    "end": "1940640"
  },
  {
    "text": "so for optional types in crossplane we uh you know set this",
    "start": "1940640",
    "end": "1947600"
  },
  {
    "text": "so let's also add the q builder tag optional",
    "start": "1947600",
    "end": "1954398"
  },
  {
    "text": "optional yeah so i think we are good to continue",
    "start": "1955279",
    "end": "1962399"
  },
  {
    "text": "so in the observation section uh this will be the output of the uh or",
    "start": "1962399",
    "end": "1968960"
  },
  {
    "text": "add status part so let's see what we have we can always add you know like more",
    "start": "1968960",
    "end": "1975039"
  },
  {
    "text": "along the way but let's say we have a created at fields",
    "start": "1975039",
    "end": "1980720"
  },
  {
    "text": "and a state that would be interesting at the end of the day we will add all of them but let's start with just having",
    "start": "1980720",
    "end": "1987360"
  },
  {
    "text": "state here so states and",
    "start": "1987360",
    "end": "1992960"
  },
  {
    "text": "have it as string for the sake of simplicity and states",
    "start": "1992960",
    "end": "2001120"
  },
  {
    "text": "okay so we con we added our parameters and observation",
    "start": "2002000",
    "end": "2008000"
  },
  {
    "text": "fields and now we can continue with the controller part so",
    "start": "2008000",
    "end": "2013519"
  },
  {
    "text": "here is the controller this is uh just this just has uh the",
    "start": "2013519",
    "end": "2020240"
  },
  {
    "text": "you know uh crap methods that mo fact showed uh with a you know like a good",
    "start": "2020240",
    "end": "2026159"
  },
  {
    "text": "level of initial initialization code so we will implement observe creates",
    "start": "2026159",
    "end": "2032880"
  },
  {
    "text": "updates and deletes and for that first of all we will need to implement the connect method",
    "start": "2032880",
    "end": "2040320"
  },
  {
    "text": "in the connect method we we need to initialize a client of the external",
    "start": "2040320",
    "end": "2045440"
  },
  {
    "text": "service which is a planet scale service and for that of course we need to",
    "start": "2045440",
    "end": "2051440"
  },
  {
    "text": "extract some credentials or find some credentials from somewhere so in cross plane this is done by",
    "start": "2051440",
    "end": "2058158"
  },
  {
    "text": "reading the provider config and usually or typically this provider configs refer",
    "start": "2058159",
    "end": "2064079"
  },
  {
    "text": "to a kubernetes secret and that secret contains the actual api credential",
    "start": "2064079",
    "end": "2070079"
  },
  {
    "text": "so these placeholder codes",
    "start": "2070079",
    "end": "2075358"
  },
  {
    "text": "will extract the uh you know secret that we need and then pass to new",
    "start": "2075359",
    "end": "2082560"
  },
  {
    "text": "service function and new service function gets a credentials as a credential as",
    "start": "2082560",
    "end": "2089440"
  },
  {
    "text": "input and then returns an interface so we will need to define this interface",
    "start": "2089440",
    "end": "2094560"
  },
  {
    "text": "like we no longer need to use knob service so i will replace it as",
    "start": "2094560",
    "end": "2101040"
  },
  {
    "text": "a planet scale okay so we will initialize the planet",
    "start": "2101040",
    "end": "2108000"
  },
  {
    "text": "scale service and before that let me",
    "start": "2108000",
    "end": "2114480"
  },
  {
    "text": "just go and get planet scale go client",
    "start": "2114480",
    "end": "2122079"
  },
  {
    "text": "so that uh goland could help me to you know autocomplete",
    "start": "2122079",
    "end": "2129119"
  },
  {
    "text": "so i get i got the plant scale goat client so now",
    "start": "2129119",
    "end": "2134400"
  },
  {
    "text": "in this plant scale clients blendscape service we will have a",
    "start": "2134400",
    "end": "2140000"
  },
  {
    "text": "pcli and this pcli",
    "start": "2140000",
    "end": "2145119"
  },
  {
    "text": "should be type of planet scale dot",
    "start": "2145119",
    "end": "2151920"
  },
  {
    "text": "client and we will need to",
    "start": "2151920",
    "end": "2157200"
  },
  {
    "text": "initialize this client somehow credits and",
    "start": "2157200",
    "end": "2162560"
  },
  {
    "text": "return it so let's so there are two ways uh in class case",
    "start": "2162560",
    "end": "2169520"
  },
  {
    "text": "service to authenticate to api one is service account tokens the other is access token",
    "start": "2169520",
    "end": "2175839"
  },
  {
    "text": "somehow i couldn't make it with make it work with service account tokens",
    "start": "2175839",
    "end": "2181680"
  },
  {
    "text": "but it works with access tokens so i already have my access token",
    "start": "2181680",
    "end": "2187359"
  },
  {
    "text": "configured if anyone interested i can show you how you can get it because it's not",
    "start": "2187359",
    "end": "2192400"
  },
  {
    "text": "straightforward you cannot just get it from the ui uh i had to initialize",
    "start": "2192400",
    "end": "2197599"
  },
  {
    "text": "client and read from a local directory so but the point is",
    "start": "2197599",
    "end": "2204079"
  },
  {
    "text": "uh now we we assume that this grads is access token and uh",
    "start": "2204079",
    "end": "2209599"
  },
  {
    "text": "let's initialize uh our client",
    "start": "2209599",
    "end": "2214880"
  },
  {
    "text": "planet scale dots new clients and planet scale that",
    "start": "2214880",
    "end": "2221680"
  },
  {
    "text": "with access token and access token is actually coming as crates",
    "start": "2221680",
    "end": "2228800"
  },
  {
    "text": "so string and this also returns an error",
    "start": "2228800",
    "end": "2236880"
  },
  {
    "text": "and if error is not oh i think i don't even need that",
    "start": "2236880",
    "end": "2243920"
  },
  {
    "text": "pcli c and error okay now new planet scale service",
    "start": "2243920",
    "end": "2252640"
  },
  {
    "text": "function returns a client initializes and returns the client for us",
    "start": "2252640",
    "end": "2259440"
  },
  {
    "text": "okay so this should be pointer to",
    "start": "2260079",
    "end": "2265920"
  },
  {
    "text": "planet scale service and uh",
    "start": "2265920",
    "end": "2271599"
  },
  {
    "text": "this signature has changed so we also need to change the signatures",
    "start": "2271599",
    "end": "2277480"
  },
  {
    "text": "[Applause]",
    "start": "2277480",
    "end": "2283200"
  },
  {
    "text": "okay i think we are good to go",
    "start": "2283200",
    "end": "2287359"
  },
  {
    "text": "so we have our client initialized and now we will need to implement those crude",
    "start": "2288240",
    "end": "2294160"
  },
  {
    "text": "methods and here we of course need to pass",
    "start": "2294160",
    "end": "2302800"
  },
  {
    "text": "service as planet scale service and let's go and implement our observer",
    "start": "2302800",
    "end": "2308720"
  },
  {
    "text": "methods okay we can also",
    "start": "2308720",
    "end": "2314480"
  },
  {
    "text": "start with create to make it uh more exciting so",
    "start": "2314480",
    "end": "2319920"
  },
  {
    "text": "uh let's implement the create so what we have we have that external",
    "start": "2319920",
    "end": "2328320"
  },
  {
    "text": "and service and it has our plan scale client now i can call",
    "start": "2328320",
    "end": "2335119"
  },
  {
    "text": "databases create we have context and it requires a planet",
    "start": "2335119",
    "end": "2340960"
  },
  {
    "text": "scale database database creates",
    "start": "2340960",
    "end": "2347599"
  },
  {
    "text": "requests or create database requests yeah",
    "start": "2347599",
    "end": "2354960"
  },
  {
    "text": "so fill all fields and this requires a pointer",
    "start": "2354960",
    "end": "2360240"
  },
  {
    "text": "okay now we need an organization and uh in the ui",
    "start": "2360240",
    "end": "2366079"
  },
  {
    "text": "i have my organization as turkan here to can h so",
    "start": "2366079",
    "end": "2371760"
  },
  {
    "text": "let's use that oh actually we will just get what we have from spec so cr",
    "start": "2371760",
    "end": "2379359"
  },
  {
    "text": "dot spec spec.for provider dot organization so we get our uh",
    "start": "2379359",
    "end": "2386160"
  },
  {
    "text": "organization and for metadata for for name actually we",
    "start": "2386160",
    "end": "2391440"
  },
  {
    "text": "will use uh the external name so metadata",
    "start": "2391440",
    "end": "2397200"
  },
  {
    "text": "get external name of custom resource and these are optional fields so let's",
    "start": "2397200",
    "end": "2403599"
  },
  {
    "text": "check if they are really set spec dot for provider that notes if it is",
    "start": "2403599",
    "end": "2411599"
  },
  {
    "text": "not nil let's say note",
    "start": "2411599",
    "end": "2416960"
  },
  {
    "text": "empty nodes equals",
    "start": "2417520",
    "end": "2422599"
  },
  {
    "text": "okay do the same for region",
    "start": "2426160",
    "end": "2430520"
  },
  {
    "text": "okay so this returns a db",
    "start": "2447440",
    "end": "2452720"
  },
  {
    "text": "and an error and now",
    "start": "2452720",
    "end": "2458240"
  },
  {
    "text": "we can check the state of the db cr dot situs dot",
    "start": "2458240",
    "end": "2467000"
  },
  {
    "text": "states and",
    "start": "2471200",
    "end": "2477680"
  },
  {
    "text": "no not set conditions",
    "start": "2477680",
    "end": "2481280"
  },
  {
    "text": "state equals db dot states and let's convert it to a string because",
    "start": "2483200",
    "end": "2489599"
  },
  {
    "text": "it has it is an enum okay so now",
    "start": "2489599",
    "end": "2496559"
  },
  {
    "text": "we don't get any connection details here i can show it so you can see like what are returned from",
    "start": "2496720",
    "end": "2503440"
  },
  {
    "text": "the api nodes region state atm html url name created and updated it so",
    "start": "2503440",
    "end": "2511040"
  },
  {
    "text": "as we said in the beginning we will need to implement another resource for that",
    "start": "2511040",
    "end": "2516400"
  },
  {
    "text": "okay now i think we are good to give it a try just to make it a bit more exciting",
    "start": "2516400",
    "end": "2523520"
  },
  {
    "text": "so what i will do is i will run make generate once",
    "start": "2523520",
    "end": "2529119"
  },
  {
    "text": "what is that",
    "start": "2533280",
    "end": "2536680"
  },
  {
    "text": "this happens",
    "start": "2543280",
    "end": "2546520"
  },
  {
    "text": "okay so i have a brand new",
    "start": "2560480",
    "end": "2566720"
  },
  {
    "text": "kind cluster so first of all i will apply the",
    "start": "2566720",
    "end": "2573359"
  },
  {
    "text": "crds that were already generated for me you can see password database provider",
    "start": "2573839",
    "end": "2579760"
  },
  {
    "text": "config and others and now i can run my controller with make",
    "start": "2579760",
    "end": "2585680"
  },
  {
    "text": "run so while it is",
    "start": "2585680",
    "end": "2590720"
  },
  {
    "text": "running",
    "start": "2590720",
    "end": "2593720"
  },
  {
    "text": "okay so let's find an example here and",
    "start": "2608160",
    "end": "2614079"
  },
  {
    "text": "just i think i can just rename it factory name database",
    "start": "2614079",
    "end": "2623839"
  },
  {
    "text": "and refactor rename database",
    "start": "2623839",
    "end": "2629200"
  },
  {
    "text": "and i have databases group plan scale and then database",
    "start": "2630480",
    "end": "2637520"
  },
  {
    "text": "and for provider i have organization here",
    "start": "2637520",
    "end": "2642720"
  },
  {
    "text": "here and it is my organization and let's also add a note",
    "start": "2644000",
    "end": "2651359"
  },
  {
    "text": "hello from crossplane",
    "start": "2651359",
    "end": "2655519"
  },
  {
    "text": "and i will also need to create a provider config let's make it default",
    "start": "2656720",
    "end": "2663760"
  },
  {
    "text": "so an example provider config i have my token secret so i'm deleting",
    "start": "2663760",
    "end": "2670400"
  },
  {
    "text": "this one and let's use it okay so uh cube ctl apply f",
    "start": "2670400",
    "end": "2680318"
  },
  {
    "text": "p scale token secret",
    "start": "2682640",
    "end": "2688359"
  },
  {
    "text": "and i will create my provider config",
    "start": "2693280",
    "end": "2701319"
  },
  {
    "text": "all right so now i can create our database so let's have a final look",
    "start": "2707200",
    "end": "2712880"
  },
  {
    "text": "if everything is looking good so it will be named as example and it",
    "start": "2712880",
    "end": "2718880"
  },
  {
    "text": "will be under to turkey and h organization and it will have this uh",
    "start": "2718880",
    "end": "2724160"
  },
  {
    "text": "note so cuba ctrl create examples database database.tml",
    "start": "2724160",
    "end": "2732560"
  },
  {
    "text": "ctl get database let's watch it",
    "start": "2732560",
    "end": "2741319"
  },
  {
    "text": "okay so it says it is synced but since we didn't set any ready",
    "start": "2750400",
    "end": "2756640"
  },
  {
    "text": "condition yet uh it didn't report ready we usually set this in observe method so",
    "start": "2756640",
    "end": "2762480"
  },
  {
    "text": "we observe and verify that it's really exist and its state is ready after that",
    "start": "2762480",
    "end": "2767920"
  },
  {
    "text": "we set it as ready so let's see what we have in here",
    "start": "2767920",
    "end": "2775520"
  },
  {
    "text": "we don't have anything so",
    "start": "2775520",
    "end": "2781040"
  },
  {
    "text": "let's see external resources up to date",
    "start": "2781040",
    "end": "2788920"
  },
  {
    "text": "okay so we should implement observe as well yeah so we couldn't make it fast",
    "start": "2793599",
    "end": "2800720"
  },
  {
    "text": "anyway so i will stop and uh create method is not called because in",
    "start": "2800720",
    "end": "2806800"
  },
  {
    "text": "observe we should observe and make sure that it is not existing so we will also need to",
    "start": "2806800",
    "end": "2813040"
  },
  {
    "text": "implement observe method so let's do it quickly",
    "start": "2813040",
    "end": "2819040"
  },
  {
    "text": "so see that service dot pcli",
    "start": "2819040",
    "end": "2825839"
  },
  {
    "text": "databases get ctx",
    "start": "2825839",
    "end": "2830960"
  },
  {
    "text": "planetscale.getdatabase request",
    "start": "2830960",
    "end": "2836560"
  },
  {
    "text": "fill all fields organization cr dot inspect that for provider organization",
    "start": "2836560",
    "end": "2843280"
  },
  {
    "text": "and meta dots get external name cr",
    "start": "2843280",
    "end": "2849119"
  },
  {
    "text": "and okay",
    "start": "2849119",
    "end": "2854240"
  },
  {
    "text": "so tb error and now we need to check like we get we",
    "start": "2854240",
    "end": "2862240"
  },
  {
    "text": "try to get the database and now we need to check whether it's really it's it is an not found error or",
    "start": "2862240",
    "end": "2868880"
  },
  {
    "text": "something else so we do that like that",
    "start": "2868880",
    "end": "2874960"
  },
  {
    "text": "and error planet scale",
    "start": "2874960",
    "end": "2880079"
  },
  {
    "text": "errors and if it is planet scale error and its code",
    "start": "2880079",
    "end": "2888240"
  },
  {
    "text": "is a not found",
    "start": "2888640",
    "end": "2894800"
  },
  {
    "text": "then so these group methods expect this",
    "start": "2894800",
    "end": "2901359"
  },
  {
    "text": "you know like managed external observation result and",
    "start": "2901359",
    "end": "2906880"
  },
  {
    "text": "return managed external observation and",
    "start": "2906880",
    "end": "2912880"
  },
  {
    "text": "if it does not exist we should just say resource exists as",
    "start": "2912880",
    "end": "2918640"
  },
  {
    "text": "false and if it exists",
    "start": "2918640",
    "end": "2923480"
  },
  {
    "text": "[Music] nil and if it exists then we will need to",
    "start": "2927600",
    "end": "2933200"
  },
  {
    "text": "uh you know if db dot state equals planet scale that database",
    "start": "2933200",
    "end": "2941119"
  },
  {
    "text": "ready then cr dot status dot set condition",
    "start": "2941119",
    "end": "2946319"
  },
  {
    "text": "xp v1 dot available",
    "start": "2946319",
    "end": "2952319"
  },
  {
    "text": "okay so in the database spec there is no field",
    "start": "2952319",
    "end": "2957760"
  },
  {
    "text": "to to be updated in in scale database u api so if it exists we",
    "start": "2957760",
    "end": "2964800"
  },
  {
    "text": "just return as existent uh that's it so now we can just run it again",
    "start": "2964800",
    "end": "2972319"
  },
  {
    "text": "we didn't make any api changes so we don't need to regenerate anything",
    "start": "2972319",
    "end": "2980440"
  },
  {
    "text": "okay what's this",
    "start": "2984640",
    "end": "2988440"
  },
  {
    "text": "error is not filling its scale errors",
    "start": "2999119",
    "end": "3003760"
  },
  {
    "text": "okay this one",
    "start": "3005599",
    "end": "3010599"
  },
  {
    "text": "okay now it says true let's check yeah as you can see our database is created",
    "start": "3019760",
    "end": "3026800"
  },
  {
    "text": "and our node is available here and",
    "start": "3026800",
    "end": "3032800"
  },
  {
    "text": "we are almost done with the database resource one one last method that we will need to",
    "start": "3032800",
    "end": "3038559"
  },
  {
    "text": "implement this delete method but at this point if there are any questions",
    "start": "3038559",
    "end": "3044800"
  },
  {
    "text": "we can try to respond any questions up to this point",
    "start": "3044800",
    "end": "3051520"
  },
  {
    "text": "okay so um",
    "start": "3051920",
    "end": "3057359"
  },
  {
    "text": "we have our database ready and also the last method that we will need to implement is just delete",
    "start": "3057440",
    "end": "3064160"
  },
  {
    "text": "and cr dot not cr c dot",
    "start": "3064160",
    "end": "3070000"
  },
  {
    "text": "service dot cli databases delete",
    "start": "3070000",
    "end": "3075040"
  },
  {
    "text": "context and planet scale delete database requests fill all fields",
    "start": "3075040",
    "end": "3082240"
  },
  {
    "text": "cr dot spec that for provider organization",
    "start": "3082240",
    "end": "3087359"
  },
  {
    "text": "and for the database name meta dot get external name",
    "start": "3087359",
    "end": "3094000"
  },
  {
    "text": "and we have cr here this only returns an error so we can just",
    "start": "3094000",
    "end": "3100880"
  },
  {
    "text": "return its results back in the delete",
    "start": "3100880",
    "end": "3105119"
  },
  {
    "text": "all right so let's run it again",
    "start": "3106960",
    "end": "3112880"
  },
  {
    "text": "and also verify delete as well",
    "start": "3112880",
    "end": "3119520"
  },
  {
    "text": "how can i do that",
    "start": "3121760",
    "end": "3125480"
  },
  {
    "text": "okay here you can see the database is gone and uh we have completed the",
    "start": "3137040",
    "end": "3142240"
  },
  {
    "text": "implementation of the database so let us it's adds",
    "start": "3142240",
    "end": "3149040"
  },
  {
    "text": "commits",
    "start": "3149040",
    "end": "3152040"
  },
  {
    "text": "database okay now the next resource that we need to implement is password i will try to",
    "start": "3156079",
    "end": "3163599"
  },
  {
    "text": "be as fast as possible because most of the parts will be just duplicate",
    "start": "3163599",
    "end": "3170559"
  },
  {
    "text": "so i'm just copying this part here ideally we should",
    "start": "3170559",
    "end": "3177040"
  },
  {
    "text": "not repeat ourselves but just to be fast i'm copying here",
    "start": "3177040",
    "end": "3183040"
  },
  {
    "text": "so and new service function",
    "start": "3183040",
    "end": "3189480"
  },
  {
    "text": "service so we don't have to do anything here",
    "start": "3197680",
    "end": "3204960"
  },
  {
    "text": "let's kill service",
    "start": "3205920",
    "end": "3211359"
  },
  {
    "text": "okay in observe we get c dot service dot pcli",
    "start": "3211680",
    "end": "3218400"
  },
  {
    "text": "passwords gets ctx",
    "start": "3218400",
    "end": "3224319"
  },
  {
    "text": "scale get password or",
    "start": "3224480",
    "end": "3229839"
  },
  {
    "text": "password his branch password requests",
    "start": "3229839",
    "end": "3235599"
  },
  {
    "text": "and here",
    "start": "3235599",
    "end": "3238880"
  },
  {
    "text": "oh we need to fill the api first so we cannot be that fast",
    "start": "3240720",
    "end": "3248240"
  },
  {
    "text": "so we need to check the passwords here",
    "start": "3248240",
    "end": "3253920"
  },
  {
    "text": "and we again have organization database branch display",
    "start": "3253920",
    "end": "3260400"
  },
  {
    "text": "name so i will just",
    "start": "3260400",
    "end": "3266559"
  },
  {
    "text": "get them from database and",
    "start": "3266559",
    "end": "3272000"
  },
  {
    "text": "password yes organization",
    "start": "3274480",
    "end": "3281680"
  },
  {
    "text": "create what is the create",
    "start": "3281760",
    "end": "3286838"
  },
  {
    "text": "transition database branch",
    "start": "3296720",
    "end": "3301000"
  },
  {
    "text": "wrench",
    "start": "3318160",
    "end": "3321160"
  },
  {
    "text": "[Applause] okay",
    "start": "3328630",
    "end": "3333160"
  },
  {
    "text": "we also have a display name",
    "start": "3334000",
    "end": "3337760"
  },
  {
    "text": "we can use display name as metadata name so i'm deleting this one as well",
    "start": "3345520",
    "end": "3352559"
  },
  {
    "text": "and password id",
    "start": "3354319",
    "end": "3358599"
  },
  {
    "text": "uh",
    "start": "3371520",
    "end": "3374520"
  },
  {
    "text": "okay so let's get back to implementation password",
    "start": "3378000",
    "end": "3383280"
  },
  {
    "text": "spec for provider organization and",
    "start": "3383280",
    "end": "3389880"
  },
  {
    "text": "cr dot expect that for provider.database",
    "start": "3390079",
    "end": "3396440"
  },
  {
    "text": "and cr.spec.forprovider.com",
    "start": "3396799",
    "end": "3400680"
  },
  {
    "text": "[Music] see all that name",
    "start": "3403000",
    "end": "3409200"
  },
  {
    "text": "letter. it's external name cr",
    "start": "3409680",
    "end": "3414720"
  },
  {
    "text": "and p error",
    "start": "3414720",
    "end": "3420079"
  },
  {
    "text": "and return error here",
    "start": "3420400",
    "end": "3425480"
  },
  {
    "text": "all right so let's also have create",
    "start": "3438559",
    "end": "3444839"
  },
  {
    "text": "implemented see that service dot pcli password",
    "start": "3444839",
    "end": "3450640"
  },
  {
    "text": "create context planet scale",
    "start": "3450640",
    "end": "3455920"
  },
  {
    "text": "database branch password request fill all fields",
    "start": "3455920",
    "end": "3462240"
  },
  {
    "text": "cr dot spec that provider organization",
    "start": "3462240",
    "end": "3467760"
  },
  {
    "text": "for provider database",
    "start": "3469040",
    "end": "3473720"
  },
  {
    "text": "and cr dot spec dot for provider branch",
    "start": "3474400",
    "end": "3482400"
  },
  {
    "text": "and this is an optional field we can implement it later and metadata",
    "start": "3482400",
    "end": "3490799"
  },
  {
    "text": "name display name is just method cr.name",
    "start": "3491040",
    "end": "3499599"
  },
  {
    "text": "okay so this is create",
    "start": "3499760",
    "end": "3504240"
  },
  {
    "text": "p the p error",
    "start": "3505599",
    "end": "3510880"
  },
  {
    "text": "and and now",
    "start": "3510880",
    "end": "3516400"
  },
  {
    "text": "uh cr dot status that's its provider that id password",
    "start": "3516400",
    "end": "3523599"
  },
  {
    "text": "from the id okay so this is create we don't have any update and finally we will need",
    "start": "3523599",
    "end": "3530400"
  },
  {
    "text": "to have the delete method uh sorry starts",
    "start": "3530400",
    "end": "3538480"
  },
  {
    "text": "cli password tx when it's scale that",
    "start": "3538480",
    "end": "3546799"
  },
  {
    "text": "password [Music]",
    "start": "3547760",
    "end": "3551909"
  },
  {
    "text": "not this one",
    "start": "3554079",
    "end": "3557559"
  },
  {
    "text": "okay",
    "start": "3565520",
    "end": "3567839"
  },
  {
    "text": "so these three i don't believe",
    "start": "3570960",
    "end": "3578599"
  },
  {
    "text": "okay so password should also be available now",
    "start": "3591040",
    "end": "3596240"
  },
  {
    "text": "and let's also create an example for it",
    "start": "3596240",
    "end": "3602798"
  },
  {
    "text": "password",
    "start": "3603359",
    "end": "3606359"
  },
  {
    "text": "vector password okay so",
    "start": "3616319",
    "end": "3621760"
  },
  {
    "text": "it is under branch group its name is password",
    "start": "3621760",
    "end": "3627319"
  },
  {
    "text": "and it has a database",
    "start": "3629359",
    "end": "3636160"
  },
  {
    "text": "okay so uh our password implementation is also ready",
    "start": "3641680",
    "end": "3646720"
  },
  {
    "text": "so let's uh try it now uh",
    "start": "3646720",
    "end": "3652480"
  },
  {
    "text": "yeah before that we also need to publish the connection details",
    "start": "3652480",
    "end": "3657760"
  },
  {
    "text": "so um and create",
    "start": "3657760",
    "end": "3663119"
  },
  {
    "text": "yeah so host we need to find this somewhere",
    "start": "3663119",
    "end": "3670240"
  },
  {
    "text": "and i'm just starting and",
    "start": "3670240",
    "end": "3675440"
  },
  {
    "text": "username password",
    "start": "3675440",
    "end": "3683000"
  },
  {
    "text": "and database",
    "start": "3684880",
    "end": "3688559"
  },
  {
    "text": "so for host i remember it was",
    "start": "3692000",
    "end": "3698680"
  },
  {
    "text": "yeah this one and this should be a byte array so let's convert it",
    "start": "3701119",
    "end": "3709558"
  },
  {
    "text": "p dot p dot public id",
    "start": "3720240",
    "end": "3727838"
  },
  {
    "text": "writes p dot plain text",
    "start": "3728720",
    "end": "3734559"
  },
  {
    "text": "and finally p dots",
    "start": "3734559",
    "end": "3741680"
  },
  {
    "text": "do we have it here now cr dots expect that",
    "start": "3741680",
    "end": "3748880"
  },
  {
    "text": "for provider database",
    "start": "3748880",
    "end": "3753720"
  },
  {
    "text": "all right so this should be good to go",
    "start": "3754319",
    "end": "3760400"
  },
  {
    "text": "uh since we have api changes in password i i will need to regenerate and reapply",
    "start": "3760400",
    "end": "3767119"
  },
  {
    "text": "the name types",
    "start": "3767119",
    "end": "3769838"
  },
  {
    "text": "ctl apply f package crds",
    "start": "3775039",
    "end": "3782440"
  },
  {
    "text": "okay so make run which one",
    "start": "3783200",
    "end": "3789119"
  },
  {
    "text": "has",
    "start": "3789119",
    "end": "3792119"
  },
  {
    "text": "okay",
    "start": "3801039",
    "end": "3803440"
  },
  {
    "text": "now we don't have any managed resources so let's create the database again so",
    "start": "3806559",
    "end": "3813440"
  },
  {
    "text": "that we can create a password for it and",
    "start": "3813440",
    "end": "3818799"
  },
  {
    "text": "pass search",
    "start": "3818799",
    "end": "3822200"
  },
  {
    "text": "fingers crossed did we have a right connection secret to",
    "start": "3824319",
    "end": "3830559"
  },
  {
    "text": "refilled i guess not in the example",
    "start": "3830559",
    "end": "3836160"
  },
  {
    "text": "okay so we also need to set to see the connection",
    "start": "3836160",
    "end": "3843240"
  },
  {
    "text": "so i'm deleting this one",
    "start": "3856720",
    "end": "3861160"
  },
  {
    "text": "um",
    "start": "3879920",
    "end": "3882920"
  },
  {
    "text": "okay so our database is ready i will create the password now before i would like to check if we are in a",
    "start": "3905039",
    "end": "3912319"
  },
  {
    "text": "clean state because we stopped in the middle so",
    "start": "3912319",
    "end": "3919520"
  },
  {
    "text": "yeah that one let me clean this okay now i will create the password",
    "start": "3919599",
    "end": "3926400"
  },
  {
    "text": "again",
    "start": "3926400",
    "end": "3928720"
  },
  {
    "text": "write connection secret to ref",
    "start": "3931680",
    "end": "3936599"
  },
  {
    "text": "okay cuba city i'll get passwords",
    "start": "3938880",
    "end": "3943920"
  },
  {
    "text": "yeah we have our uh password is also created we didn't set the uh",
    "start": "3948079",
    "end": "3956000"
  },
  {
    "text": "available so it's not reporting ready but we will fix it so but before that let's see if our",
    "start": "3956000",
    "end": "3962559"
  },
  {
    "text": "connection secret also available get secrets",
    "start": "3962559",
    "end": "3968480"
  },
  {
    "text": "yeah here you can see the db con and if we check its content",
    "start": "3968799",
    "end": "3976079"
  },
  {
    "text": "yeah we have all the fields filled so let's see what we have as host",
    "start": "3976400",
    "end": "3982880"
  },
  {
    "text": "just as an example this is our host generated by",
    "start": "3982880",
    "end": "3988319"
  },
  {
    "text": "planetscale for us so let's do the final touches",
    "start": "3988319",
    "end": "3993920"
  },
  {
    "text": "and then we will continue with using it from the application",
    "start": "3993920",
    "end": "3999839"
  },
  {
    "text": "so the final touch number one is uh",
    "start": "3999839",
    "end": "4004880"
  },
  {
    "text": "that's number two number one is yeah to mark it as a as ready after",
    "start": "4004880",
    "end": "4011920"
  },
  {
    "text": "observing we observed it is available and now we",
    "start": "4011920",
    "end": "4017280"
  },
  {
    "text": "can cr dot status dot set conditions",
    "start": "4017280",
    "end": "4023920"
  },
  {
    "text": "xp v1 available",
    "start": "4023920",
    "end": "4029520"
  },
  {
    "text": "yeah this is first one the next one is as you might have noticed we have",
    "start": "4029520",
    "end": "4035200"
  },
  {
    "text": "the database here and actually database is another managed resource and instead of giving its name",
    "start": "4035200",
    "end": "4043920"
  },
  {
    "text": "hardcore as hard coded we can also create references and this is especially",
    "start": "4043920",
    "end": "4049599"
  },
  {
    "text": "important in the case of composition because you would like to usually you would like to",
    "start": "4049599",
    "end": "4055839"
  },
  {
    "text": "combine resources in the same composition with each other so that you can refer for",
    "start": "4055839",
    "end": "4062400"
  },
  {
    "text": "example to the database in the same composition so we will also need to",
    "start": "4062400",
    "end": "4068400"
  },
  {
    "text": "implement references actually this is just auto generation so let's continue",
    "start": "4068400",
    "end": "4074799"
  },
  {
    "text": "let's do that password and uh we will have database",
    "start": "4074799",
    "end": "4082559"
  },
  {
    "text": "ref in fact do you remember the exact type reference okay",
    "start": "4082559",
    "end": "4088799"
  },
  {
    "text": "and json database ref",
    "start": "4088799",
    "end": "4096559"
  },
  {
    "text": "and call it empty",
    "start": "4096880",
    "end": "4102000"
  },
  {
    "text": "and we also have a selector",
    "start": "4102000",
    "end": "4105838"
  },
  {
    "text": "database selector empty",
    "start": "4107759",
    "end": "4113278"
  },
  {
    "text": "selector and now we will need to say that we will refer to that",
    "start": "4113440",
    "end": "4121278"
  },
  {
    "text": "previous resource we have so",
    "start": "4121279",
    "end": "4125600"
  },
  {
    "text": "let me check quickly cross plane tools",
    "start": "4126319",
    "end": "4132920"
  },
  {
    "text": "it says that how to define resolvers",
    "start": "4134640",
    "end": "4139199"
  },
  {
    "text": "okay so we will need to show the reference type",
    "start": "4140480",
    "end": "4148400"
  },
  {
    "text": "dot com slash cross plane",
    "start": "4148400",
    "end": "4153758"
  },
  {
    "text": "contrib slash provider planet",
    "start": "4153759",
    "end": "4158838"
  },
  {
    "text": "scale then apis right mophack",
    "start": "4158839",
    "end": "4164080"
  },
  {
    "text": "and database is this enough or should i go down",
    "start": "4164080",
    "end": "4171839"
  },
  {
    "text": "that database this one",
    "start": "4173279",
    "end": "4179920"
  },
  {
    "text": "is it okay yes take a look at the example",
    "start": "4180480",
    "end": "4186880"
  },
  {
    "text": "uh",
    "start": "4186880",
    "end": "4189838"
  },
  {
    "text": "okay not this one",
    "start": "4193120",
    "end": "4197760"
  },
  {
    "text": "one not that database okay",
    "start": "4201280",
    "end": "4206880"
  },
  {
    "text": "so one thing what is our goal module name",
    "start": "4206880",
    "end": "4212800"
  },
  {
    "text": "it is this one so i would need to use that instead",
    "start": "4212800",
    "end": "4219280"
  },
  {
    "text": "instead of repo okay so let's run make generates",
    "start": "4219280",
    "end": "4227559"
  },
  {
    "text": "okay so what did happened is uh this new method is generated this new",
    "start": "4235280",
    "end": "4242960"
  },
  {
    "text": "file generated and here we can see like the result references function resolves",
    "start": "4242960",
    "end": "4249600"
  },
  {
    "text": "the reference from password to uh database so this is also good",
    "start": "4249600",
    "end": "4258600"
  },
  {
    "text": "ctl get managed i think",
    "start": "4259520",
    "end": "4266320"
  },
  {
    "text": "one last try and okay since crd has changed i need to apply",
    "start": "4266320",
    "end": "4273120"
  },
  {
    "text": "this again and make run and after seeing it as true true",
    "start": "4273120",
    "end": "4282760"
  },
  {
    "text": "why is that",
    "start": "4287760",
    "end": "4291239"
  },
  {
    "text": "uh",
    "start": "4334880",
    "end": "4337880"
  },
  {
    "text": "foreign it's managed",
    "start": "4366719",
    "end": "4374239"
  },
  {
    "text": "so what's wrong here",
    "start": "4374239",
    "end": "4379800"
  },
  {
    "text": "i'm guessing we hit some intermediary state during development so",
    "start": "4408880",
    "end": "4414719"
  },
  {
    "text": "let's",
    "start": "4414719",
    "end": "4417719"
  },
  {
    "text": "hmm",
    "start": "4435520",
    "end": "4438520"
  },
  {
    "text": "okay ctl gets managed",
    "start": "4441199",
    "end": "4447199"
  },
  {
    "text": "search",
    "start": "4452560",
    "end": "4455560"
  },
  {
    "text": "okay i think we are good to go except this one",
    "start": "4462080",
    "end": "4469520"
  },
  {
    "text": "reset that right",
    "start": "4469520",
    "end": "4472960"
  },
  {
    "text": "controller password observe here",
    "start": "4475440",
    "end": "4482360"
  },
  {
    "text": "okay we need to set the external name here cr dot set",
    "start": "4500320",
    "end": "4506480"
  },
  {
    "text": "external name letter set external name cr",
    "start": "4506480",
    "end": "4514080"
  },
  {
    "text": "then uh p dot public id",
    "start": "4514080",
    "end": "4520640"
  },
  {
    "text": "okay this was missing",
    "start": "4520640",
    "end": "4524840"
  },
  {
    "text": "jack",
    "start": "4526800",
    "end": "4529800"
  },
  {
    "text": "okay so let's see",
    "start": "4551600",
    "end": "4556960"
  },
  {
    "text": "how it goes let's also clean this",
    "start": "4556960",
    "end": "4564198"
  },
  {
    "text": "okay okay",
    "start": "4576159",
    "end": "4581600"
  },
  {
    "text": "so uh i think something messed up during the",
    "start": "4581600",
    "end": "4586719"
  },
  {
    "text": "development but uh we hope that like with composition with clean installation it will work",
    "start": "4586719",
    "end": "4594320"
  },
  {
    "text": "yeah so now we will use this now we will use these resources in a",
    "start": "4594320",
    "end": "4600080"
  },
  {
    "text": "composition and consume them from wordpress so that wordpress works with planet scale uses",
    "start": "4600080",
    "end": "4606800"
  },
  {
    "text": "as database maybe a bit",
    "start": "4606800",
    "end": "4612239"
  },
  {
    "text": "somebody about",
    "start": "4612640",
    "end": "4615440"
  },
  {
    "text": "yeah maybe a bit about the composition so here is the composition",
    "start": "4619120",
    "end": "4624159"
  },
  {
    "text": "that we are going to use so the main point of composition is that you don't have to like you know you don't have to",
    "start": "4624159",
    "end": "4629600"
  },
  {
    "text": "create database password and everything else every time so you expose an api that",
    "start": "4629600",
    "end": "4637679"
  },
  {
    "text": "that is like specific to your use case and then like you know let crossplane create those for you by with the",
    "start": "4637679",
    "end": "4644719"
  },
  {
    "text": "configuration you give so for example in this case we are defining a new api with composite",
    "start": "4644719",
    "end": "4650480"
  },
  {
    "text": "resource definition type from core crossplane and it has only one",
    "start": "4650480",
    "end": "4656880"
  },
  {
    "text": "parameters parameter block name right and then we are saying that like you know for",
    "start": "4656880",
    "end": "4662960"
  },
  {
    "text": "every instance of that api go ahead and create one planet scale database",
    "start": "4662960",
    "end": "4669679"
  },
  {
    "text": "one password and one hand release that installs",
    "start": "4669679",
    "end": "4675280"
  },
  {
    "text": "the the wordpress to the existing cluster in cluster the kind cluster that right now",
    "start": "4675280",
    "end": "4681120"
  },
  {
    "text": "we are using and there are like you know some details like the one example is",
    "start": "4681120",
    "end": "4686960"
  },
  {
    "text": "here so we say that like you know the customer that the user gives like you",
    "start": "4686960",
    "end": "4693280"
  },
  {
    "text": "know this small claim let me show you they only create this one and we take",
    "start": "4693280",
    "end": "4700040"
  },
  {
    "text": "spec.blog name here in composition to say okay like you know",
    "start": "4700040",
    "end": "4705280"
  },
  {
    "text": "use this as the as the block name here by adding a patch",
    "start": "4705280",
    "end": "4712560"
  },
  {
    "text": "so we don't write a controller for like you know aggregating all these resources but we only instruct it via ammo so",
    "start": "4712960",
    "end": "4719760"
  },
  {
    "text": "without writing code you can compose everything like that and similarly for example",
    "start": "4719760",
    "end": "4725520"
  },
  {
    "text": "uh we can build like you know similar apis for clusters for example you can",
    "start": "4725520",
    "end": "4730719"
  },
  {
    "text": "have like you know in one composition just like database and password you can have vpc three subnet security group",
    "start": "4730719",
    "end": "4737040"
  },
  {
    "text": "internet gateway and if you go to crossplan.io you can see an example like more complex examples like this",
    "start": "4737040",
    "end": "4743920"
  },
  {
    "text": "so right now what we are going to do is first to create our abstraction api",
    "start": "4743920",
    "end": "4752320"
  },
  {
    "text": "which will be like kubecon wordpress type [Music]",
    "start": "4752320",
    "end": "4759900"
  },
  {
    "text": "okay so cube city um composition",
    "start": "4763600",
    "end": "4768640"
  },
  {
    "text": "cube ctl apply apply f",
    "start": "4768640",
    "end": "4774800"
  },
  {
    "text": "xrd so once i create this there will be two crds created by crossplane as a result",
    "start": "4774800",
    "end": "4782000"
  },
  {
    "text": "you should need to install crosstalk oh crossplane is not installed so i have not created",
    "start": "4782000",
    "end": "4790360"
  },
  {
    "text": "[Music] yeah for xrd's and compositions you need",
    "start": "4791480",
    "end": "4798080"
  },
  {
    "text": "crossplane itself so far we haven't needed it because of like you know with local development we don't need to",
    "start": "4798080",
    "end": "4803360"
  },
  {
    "text": "package the whole provider we just run make run and we run it locally",
    "start": "4803360",
    "end": "4808639"
  },
  {
    "text": "so um yeah so now cuba cross plane is installed",
    "start": "4808639",
    "end": "4815440"
  },
  {
    "text": "still get ports dash and okay so now i'm going to say cube ctl",
    "start": "4815679",
    "end": "4823840"
  },
  {
    "text": "apply define my crd xrd and then i will apply my",
    "start": "4823840",
    "end": "4830880"
  },
  {
    "text": "composition which you can see one database one password and then hand release",
    "start": "4830880",
    "end": "4836159"
  },
  {
    "text": "and by default it uses the same cluster in cluster and for that i need to install hand",
    "start": "4836159",
    "end": "4842400"
  },
  {
    "text": "provider so i am going to use crosspin cli",
    "start": "4842400",
    "end": "4849040"
  },
  {
    "text": "to install hand provider in a minute okay",
    "start": "4849040",
    "end": "4855280"
  },
  {
    "text": "because like you know all the providers used in one composition should be ready and installed before",
    "start": "4855280",
    "end": "4861520"
  },
  {
    "text": "you create your clay so now i'm going to create my composition",
    "start": "4861520",
    "end": "4868560"
  },
  {
    "text": "so now i have the api definition and i told crossplane to what's what",
    "start": "4868560",
    "end": "4873600"
  },
  {
    "text": "what i need to happen when an instance of that api is created i see our custom",
    "start": "4873600",
    "end": "4879120"
  },
  {
    "text": "resources created so now i will first check whether",
    "start": "4879120",
    "end": "4884400"
  },
  {
    "text": "all providers are in place in cross plane system yeah provider helm is up now and i locally",
    "start": "4884400",
    "end": "4892080"
  },
  {
    "text": "run the the planet skid provider",
    "start": "4892080",
    "end": "4899678"
  },
  {
    "text": "so what i will do is to first create the provider configs",
    "start": "4900239",
    "end": "4905440"
  },
  {
    "text": "landscape provider config is already there so what i will do is to create provider config of hand provider",
    "start": "4905440",
    "end": "4912320"
  },
  {
    "text": "because i am going to use the service account of hand provider to deploy the same cluster i need to give",
    "start": "4912320",
    "end": "4918239"
  },
  {
    "text": "it uh more permissions by default it doesn't have the permissions to deploy to your own cluster you would need to",
    "start": "4918239",
    "end": "4924239"
  },
  {
    "text": "give a quick config to target another cluster so i'm just like now with the small",
    "start": "4924239",
    "end": "4930239"
  },
  {
    "text": "quicks i will give permission with cluster roll binding",
    "start": "4930239",
    "end": "4938000"
  },
  {
    "text": "cool so now i can create the provider config for ham saying like you know hey use this uh same cluster",
    "start": "4938000",
    "end": "4945840"
  },
  {
    "text": "f unprovided",
    "start": "4949199",
    "end": "4953360"
  },
  {
    "text": "ctrl get matched so get",
    "start": "4955679",
    "end": "4961440"
  },
  {
    "text": "managed just to make sure that there is nothing in the cluster so um",
    "start": "4961440",
    "end": "4967840"
  },
  {
    "text": "and because right now we run the provider call uh the provider",
    "start": "4967840",
    "end": "4973360"
  },
  {
    "text": "plans k scale locally it the cross plane itself does not have",
    "start": "4973360",
    "end": "4979040"
  },
  {
    "text": "the permissions to deploy its crds so we will need to give that permission to crosby instead normally you would",
    "start": "4979040",
    "end": "4985679"
  },
  {
    "text": "install it just like provider hand and get the permissions so what i'm going to do is to do the same thing",
    "start": "4985679",
    "end": "4992800"
  },
  {
    "text": "with [Music] cross plane cluster roll as well",
    "start": "4992800",
    "end": "4998000"
  },
  {
    "text": "just for the sake of demo",
    "start": "4998000",
    "end": "5002239"
  },
  {
    "text": "service accounts",
    "start": "5010800",
    "end": "5014280"
  },
  {
    "text": "yeah okay",
    "start": "5048400",
    "end": "5052280"
  },
  {
    "text": "cool so now crossplane has the permissions as i said like you know when it's sold through the package manager you don't need to do that so i'm going",
    "start": "5057360",
    "end": "5064159"
  },
  {
    "text": "to create this claim with like you know cross painting kubecon blog name so cubectl apply",
    "start": "5064159",
    "end": "5073600"
  },
  {
    "text": "claim to my namespace which is default",
    "start": "5073600",
    "end": "5078880"
  },
  {
    "text": "so now i'm going to like you know see it started to what",
    "start": "5078880",
    "end": "5086158"
  },
  {
    "text": "keep ctl managed",
    "start": "5090239",
    "end": "5096960"
  },
  {
    "text": "see all these three objects are created by cross plane with the with the configuration that you gave with",
    "start": "5097600",
    "end": "5103280"
  },
  {
    "text": "composition so i did not have to go like and create each one of them",
    "start": "5103280",
    "end": "5108320"
  },
  {
    "text": "um so well i think we have five minutes left so maybe we can leave that to the questions until it's uh yeah",
    "start": "5108320",
    "end": "5115600"
  },
  {
    "text": "getting ready yeah so uh yeah we need to wrap up so let me get",
    "start": "5115600",
    "end": "5120719"
  },
  {
    "text": "back to the slides while it's getting ready um",
    "start": "5120719",
    "end": "5126400"
  },
  {
    "text": "so yeah this is like you know how you uh develop a provider we had to like you",
    "start": "5126400",
    "end": "5132239"
  },
  {
    "text": "know develop to manage resources so that like you know it we can have a connection secret with the host and password details",
    "start": "5132239",
    "end": "5138639"
  },
  {
    "text": "and mount mounted to pro wordpress which is also done in that composition so like you know",
    "start": "5138639",
    "end": "5144159"
  },
  {
    "text": "composition allows you to like you know make all sorts of like you know relations between resources from",
    "start": "5144159",
    "end": "5149600"
  },
  {
    "text": "different providers so right now for example my cluster has a cube convert",
    "start": "5149600",
    "end": "5154639"
  },
  {
    "text": "press api available for my developers so whenever they need they can just create that cr and like you know get database",
    "start": "5154639",
    "end": "5161520"
  },
  {
    "text": "password and wordpress um",
    "start": "5161520",
    "end": "5167560"
  },
  {
    "text": "so yeah uh you can go to crosspin io for more compositions",
    "start": "5168239",
    "end": "5173600"
  },
  {
    "text": "and like you know go multi-cloud or multi-tire cloud or like you know use planet scale azure aws together",
    "start": "5173600",
    "end": "5180800"
  },
  {
    "text": "everything like you know composition is not opinionated on like you know which providers you need to use but it is",
    "start": "5180800",
    "end": "5186560"
  },
  {
    "text": "opinionated that it needs to be a crossband provider",
    "start": "5186560",
    "end": "5191920"
  },
  {
    "text": "and packages there are a lot more details about the packages so you can package providers",
    "start": "5192080",
    "end": "5197360"
  },
  {
    "text": "and also the configurations which is like you know xrd and composition together so you can publish them just",
    "start": "5197360",
    "end": "5202560"
  },
  {
    "text": "like you know terraform modules and registry and lastly terrajet terajet is one of",
    "start": "5202560",
    "end": "5208480"
  },
  {
    "text": "the latest uh code generation framework we have and it generates all the all",
    "start": "5208480",
    "end": "5213840"
  },
  {
    "text": "what we did uh just a minute ago like you know using its own generic controller to call terraform providers",
    "start": "5213840",
    "end": "5220000"
  },
  {
    "text": "under the hood so you don't have to write the cloud vendor specific stuff",
    "start": "5220000",
    "end": "5226400"
  },
  {
    "text": "so yeah if you have any questions ready to answer",
    "start": "5227440",
    "end": "5234400"
  },
  {
    "text": "and it's i think wordpress might be ready now",
    "start": "5234639",
    "end": "5240159"
  },
  {
    "text": "okay yeah it's it's probably something small messed up so um",
    "start": "5242239",
    "end": "5247520"
  },
  {
    "text": "yeah we will uh like shortly after this demo we will commit that provider planet scale to",
    "start": "5247520",
    "end": "5254239"
  },
  {
    "text": "crossplane contrib organization so you can check the code stage like this",
    "start": "5254239",
    "end": "5260080"
  },
  {
    "text": "uh the code that we have implemented live here will be available for you",
    "start": "5260080",
    "end": "5265840"
  },
  {
    "text": "and we will also share the composition that we are showing here",
    "start": "5265840",
    "end": "5271280"
  },
  {
    "text": "yeah and there are like you know other compositions like for example right now we use the existing cluster but you can",
    "start": "5271280",
    "end": "5277040"
  },
  {
    "text": "have for example gk cluster from provider gcp and connect it to like you know handle release object so like you know once you",
    "start": "5277040",
    "end": "5284560"
  },
  {
    "text": "create wordpress on kubecon it will create a cluster it would install uh it would create database",
    "start": "5284560",
    "end": "5291199"
  },
  {
    "text": "password and then install hand release of wordpress and then connect everything and you will get a url saying",
    "start": "5291199",
    "end": "5298239"
  },
  {
    "text": "like you know wordpress is ready to be accessed",
    "start": "5298239",
    "end": "5303440"
  },
  {
    "text": "yeah go ahead",
    "start": "5304480",
    "end": "5307880"
  },
  {
    "text": "yeah yeah yeah yeah exactly",
    "start": "5315040",
    "end": "5320560"
  },
  {
    "text": "yeah that is uh by default on and i actually you can't really turn it off so like you know it's",
    "start": "5320560",
    "end": "5326639"
  },
  {
    "text": "checks like you know uh for every event it checks the custom resource and runs the whole reconciliation logic and if",
    "start": "5326639",
    "end": "5333760"
  },
  {
    "text": "there is no event there is no change in your kubernetes cluster for every minute it checks it still runs the",
    "start": "5333760",
    "end": "5338800"
  },
  {
    "text": "reconciliation we checks the external api for example if i went to planet",
    "start": "5338800",
    "end": "5343920"
  },
  {
    "text": "scale and change the description like nodes field then it will see that it will correct that so source of the truth",
    "start": "5343920",
    "end": "5350159"
  },
  {
    "text": "is the custom resource and it continues to reconcile for example in aws if you",
    "start": "5350159",
    "end": "5355280"
  },
  {
    "text": "change a parameter it will likely fix that as well so it continuously fixes just like deployment and pod",
    "start": "5355280",
    "end": "5362080"
  },
  {
    "text": "deployment here is the database custom resource and pod here is the resource in the cloud so for example if",
    "start": "5362080",
    "end": "5369040"
  },
  {
    "text": "you delete pod deployment will recreate it immediately and same thing with cross plain",
    "start": "5369040",
    "end": "5374639"
  },
  {
    "text": "providers if you like you know delete the database right now it will create a new one with the same name",
    "start": "5374639",
    "end": "5381519"
  },
  {
    "text": "yeah yeah exactly so that is that is one part that we kind of skipped so you see there",
    "start": "5386159",
    "end": "5393280"
  },
  {
    "text": "is a function there is a field here resource up to date so what you do here",
    "start": "5393280",
    "end": "5398639"
  },
  {
    "text": "like you know in the logic you have the p available here right and cr available",
    "start": "5398639",
    "end": "5404639"
  },
  {
    "text": "so you say like you know hey if p like let's say something like this",
    "start": "5404639",
    "end": "5410400"
  },
  {
    "text": "p dot like um i don't know name is not equal to c r that",
    "start": "5410400",
    "end": "5417280"
  },
  {
    "text": "get name let's say like you know notes and not like in both sides so you report that and then reconciler sees it and it",
    "start": "5417280",
    "end": "5424239"
  },
  {
    "text": "calls the update method so that it fixes the the the changes and",
    "start": "5424239",
    "end": "5430080"
  },
  {
    "text": "that is goes like you know both ways fix the corrections and then also for every",
    "start": "5430080",
    "end": "5435120"
  },
  {
    "text": "event in the cr it it calls the update if it's necessary yeah actually the the two resources that we have implemented",
    "start": "5435120",
    "end": "5441920"
  },
  {
    "text": "today are a bit special in a way that like they don't have updatable fields so you cannot update",
    "start": "5441920",
    "end": "5448719"
  },
  {
    "text": "anything on the password resource and also for the database there is no updatable parameters but for",
    "start": "5448719",
    "end": "5455679"
  },
  {
    "text": "example if it was an aws rds database there was a storage size and",
    "start": "5455679",
    "end": "5461520"
  },
  {
    "text": "in the desired state you specify the storage size and then if you go to aws",
    "start": "5461520",
    "end": "5466719"
  },
  {
    "text": "console and change it to something else a crossband controller will go and actively reconcile it back to the",
    "start": "5466719",
    "end": "5474000"
  },
  {
    "text": "desired state yeah please",
    "start": "5474000",
    "end": "5480800"
  },
  {
    "text": "uh i can repeat the question yeah yeah here is my preference",
    "start": "5482719",
    "end": "5488000"
  },
  {
    "text": "so thank you for a nice talk uh really impressive work could you maybe uh",
    "start": "5488080",
    "end": "5495120"
  },
  {
    "text": "also judge a bit on the subject of importing already existing resources",
    "start": "5495120",
    "end": "5500480"
  },
  {
    "text": "yeah and how the create method gets a little bit more complicated in in that sense yeah yeah so uh if you noticed",
    "start": "5500480",
    "end": "5509040"
  },
  {
    "text": "there is this external name notion here right like we don't actually use the",
    "start": "5509040",
    "end": "5514400"
  },
  {
    "text": "custom resource name because like there are certain names that kubernetes does not allow you to name the custom",
    "start": "5514400",
    "end": "5519440"
  },
  {
    "text": "resource and you may not know it beforehand right so we use the external name annotation to get and like you know",
    "start": "5519440",
    "end": "5525920"
  },
  {
    "text": "if provider allows we also use that like you know for example for database you are able to give its name right in the",
    "start": "5525920",
    "end": "5532400"
  },
  {
    "text": "create so we use get external name so if you create the custom resource with an",
    "start": "5532400",
    "end": "5538000"
  },
  {
    "text": "existing external name annotation what's going to happen is that first observe is run for every reconcile and it will not",
    "start": "5538000",
    "end": "5545840"
  },
  {
    "text": "report that resource does not exist right because create is called only if you return false here",
    "start": "5545840",
    "end": "5552480"
  },
  {
    "text": "so if it's going to like you know run the get call and just continue as if it was the one who created it so crosspin",
    "start": "5552480",
    "end": "5559600"
  },
  {
    "text": "does not care whether it created the resource or not so it's just like you know if there's an external name it hits",
    "start": "5559600",
    "end": "5566000"
  },
  {
    "text": "the api says like you know hey does that exist and if it exists it starts to reconcile it just like as if it was the",
    "start": "5566000",
    "end": "5572639"
  },
  {
    "text": "one who created it okay is it okay that i ask another question yeah um so you specified a password on uh for",
    "start": "5572639",
    "end": "5581120"
  },
  {
    "text": "this database right let's say that i compromised my password somehow is there",
    "start": "5581120",
    "end": "5586960"
  },
  {
    "text": "a way to like do key rollovers with this like so i could roll over my password and then",
    "start": "5586960",
    "end": "5594000"
  },
  {
    "text": "my app could like get it automatically do you have like a way of changing like terraform yeah so so in this specific",
    "start": "5594000",
    "end": "5601679"
  },
  {
    "text": "example planet scale does not allow you to give a password in plain text right so it's only like you know we request",
    "start": "5601679",
    "end": "5607679"
  },
  {
    "text": "the password it returns and we save it to the connection secret so in this implementation for example it's only",
    "start": "5607679",
    "end": "5614159"
  },
  {
    "text": "published in create right but in a you know like you know in an implementation that we would merge",
    "start": "5614159",
    "end": "5620400"
  },
  {
    "text": "upstream it would also like you know publish it here in observe as well right if if the plan scale landscape returns",
    "start": "5620400",
    "end": "5628080"
  },
  {
    "text": "it but a lot of times they either allow it to like you know to send over create or return as the result of create and",
    "start": "5628080",
    "end": "5634719"
  },
  {
    "text": "not return it via get because it's like available for one time but like you know for the reso for example eks cluster is",
    "start": "5634719",
    "end": "5641440"
  },
  {
    "text": "a great example it refreshes its token for every 15 minutes so at every observe we actually",
    "start": "5641440",
    "end": "5648320"
  },
  {
    "text": "fetch the eks cluster and then publish it so that like you know new token is published and then you get it updated",
    "start": "5648320",
    "end": "5654560"
  },
  {
    "text": "and your application gets like you know refresh token and keep working so like it depends on the api like you know if",
    "start": "5654560",
    "end": "5661679"
  },
  {
    "text": "the api allows it uh we do that but one main difference with terraform there",
    "start": "5661679",
    "end": "5666800"
  },
  {
    "text": "for example in this case password change would require deletion of the password",
    "start": "5666800",
    "end": "5672000"
  },
  {
    "text": "right we don't delete it like you know just to get the refresh token you have to keep ctl deleted in terraform like you know",
    "start": "5672000",
    "end": "5679360"
  },
  {
    "text": "if you i don't know like change it it would delete and recreate it there is no logic such logic in cross play like it",
    "start": "5679360",
    "end": "5685920"
  },
  {
    "text": "always has to like you need to delete the resource and new one could be created which is",
    "start": "5685920",
    "end": "5691520"
  },
  {
    "text": "like you know a great use case for composition like you know it's all deployed everywhere okay i want to refresh the password you",
    "start": "5691520",
    "end": "5698480"
  },
  {
    "text": "go and delete the manage resource password and composition will create a new one automatically because that's how",
    "start": "5698480",
    "end": "5703920"
  },
  {
    "text": "you configured it like you know in in your composition yaml so like to summarize changing would be",
    "start": "5703920",
    "end": "5710480"
  },
  {
    "text": "deleting my resource and then getting a new one in this specific case yes cool thank you you're welcome",
    "start": "5710480",
    "end": "5717119"
  },
  {
    "text": "uh any other yeah last one yeah i think we're a little bit over time",
    "start": "5717119",
    "end": "5723520"
  },
  {
    "text": "hi sorry i had two questions but maybe we'll see how much time we have um if i make my own custom resource do i need to",
    "start": "5723520",
    "end": "5730000"
  },
  {
    "text": "observe for every possible configuration out there so for example if i'm getting a database",
    "start": "5730000",
    "end": "5735600"
  },
  {
    "text": "right i might just observe like name size whatever but what if there's a configuration configuration change down",
    "start": "5735600",
    "end": "5742159"
  },
  {
    "text": "the line that i didn't monitor for and that changes is cross been able to detect as a change or only on things i'm",
    "start": "5742159",
    "end": "5748560"
  },
  {
    "text": "trying to monitor so if i understand you're asking like you know do i have to like you know the",
    "start": "5748560",
    "end": "5754239"
  },
  {
    "text": "comparison logic that i mentioned do i have to do that for every field",
    "start": "5754239",
    "end": "5759679"
  },
  {
    "text": "right so uh actually yes like you know for example idea systems has like you know",
    "start": "5759679",
    "end": "5765440"
  },
  {
    "text": "75 fields let's say so like you know what what i do is like you know look at",
    "start": "5765440",
    "end": "5770639"
  },
  {
    "text": "the update api to see what's what can be updated and you check like you know every field they're like you know with",
    "start": "5770639",
    "end": "5776560"
  },
  {
    "text": "if conditions and stuff and like you know report back hey there's a uh we need to update the resource and",
    "start": "5776560",
    "end": "5783440"
  },
  {
    "text": "then update start so they're like you know every every upgradable field needs to be checked one",
    "start": "5783440",
    "end": "5788480"
  },
  {
    "text": "by one okay that makes sense thank you yep and the second part is what happens",
    "start": "5788480",
    "end": "5793520"
  },
  {
    "text": "when this cluster goes down what happens when this cluster goes down yeah yeah so this is like a control",
    "start": "5793520",
    "end": "5799440"
  },
  {
    "text": "plane it's not a data plane so like you know if this cut if i do kind delete",
    "start": "5799440",
    "end": "5804719"
  },
  {
    "text": "database will still be there password will still be there because i can unless you keep ctl deleted and provided a css",
    "start": "5804719",
    "end": "5811280"
  },
  {
    "text": "and calls the delete implementation we don't touch it so it's not like a data plane that will like you know",
    "start": "5811280",
    "end": "5817119"
  },
  {
    "text": "stop the the data flow it's like a control plane that is just like you know",
    "start": "5817119",
    "end": "5822239"
  },
  {
    "text": "provisions and deletes and like you know make sure everything is is correct yeah actually one thing that we uh",
    "start": "5822239",
    "end": "5829280"
  },
  {
    "text": "you know like for the sake of simplicity in the demo we use that control plane",
    "start": "5829280",
    "end": "5834560"
  },
  {
    "text": "to deploy our application as well so this is not the typical use case of cross plane so in cross plane you don't",
    "start": "5834560",
    "end": "5841679"
  },
  {
    "text": "have the application workloads on the control plane so as muffak said if control plane goes",
    "start": "5841679",
    "end": "5847840"
  },
  {
    "text": "down you only lose active reconciliation if you recover it back it will just",
    "start": "5847840",
    "end": "5854080"
  },
  {
    "text": "automatically get reconciling again but in the in the meantime your resources",
    "start": "5854080",
    "end": "5859600"
  },
  {
    "text": "are just running there yeah yeah usually like you know you have one control plane like special to crossplane and not run",
    "start": "5859600",
    "end": "5866159"
  },
  {
    "text": "wordpress on it for example and like you know you would have an existing cluster let's say and your composition for",
    "start": "5866159",
    "end": "5872000"
  },
  {
    "text": "example you can point to that or in your claim api you can say okay give me a cluster name that is already available",
    "start": "5872000",
    "end": "5877679"
  },
  {
    "text": "in the cluster so that i can use that so like you know i mean there are like you know different deployment architectures",
    "start": "5877679",
    "end": "5883920"
  },
  {
    "text": "like you know one is like this one and but like you know the more like you know we see more and more people using like",
    "start": "5883920",
    "end": "5890080"
  },
  {
    "text": "you know one control plane specific to cross plane and manage like you know all their deployments and infrastructure",
    "start": "5890080",
    "end": "5896719"
  },
  {
    "text": "through that with composition okay thank you yeah welcome",
    "start": "5896719",
    "end": "5901840"
  },
  {
    "text": "right cool uh i think that's it you can find uh me and hassan at either crosstalk booth",
    "start": "5901840",
    "end": "5908320"
  },
  {
    "text": "or upbound booth thank you for listening [Applause]",
    "start": "5908320",
    "end": "5915448"
  }
]