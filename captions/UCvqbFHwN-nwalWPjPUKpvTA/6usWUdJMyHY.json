[
  {
    "text": "thanks for joining us um today we were going to talk about what we have been",
    "start": "240",
    "end": "5359"
  },
  {
    "text": "working on for like the 12 18 months ago um we're going to share what we are",
    "start": "5359",
    "end": "11519"
  },
  {
    "text": "working on like security discovery integrations and job sync and also uh",
    "start": "11519",
    "end": "17039"
  },
  {
    "text": "event transform i'm Pangelo and I'm software engineer radar i also have um",
    "start": "17039",
    "end": "23439"
  },
  {
    "text": "be the working group lead inventing and uh here's Kristoff yeah hello and",
    "start": "23439",
    "end": "31359"
  },
  {
    "text": "welcome from my side as well my name is Kristoff i'm also working at Redhead as a software engineer on serverless topics",
    "start": "31359",
    "end": "38000"
  },
  {
    "text": "and I'm also a maintainer of different Canative eventing projects so let's see what we have on",
    "start": "38000",
    "end": "45280"
  },
  {
    "text": "agenda for today and what we'll show you first we'll give you a quick update on the latest eventing security features",
    "start": "45280",
    "end": "52239"
  },
  {
    "text": "including support for transport encryption and authorization afterwards um we show you",
    "start": "52239",
    "end": "58719"
  },
  {
    "text": "the latest updates on eventing integrations how we for example can connect to third party services like AWS",
    "start": "58719",
    "end": "65360"
  },
  {
    "text": "SQS now natively with eventing afterwards Panchul will give us an",
    "start": "65360",
    "end": "71799"
  },
  {
    "text": "update and introduction on event discovery and the new chopsync feature",
    "start": "71799",
    "end": "77920"
  },
  {
    "text": "and finally we'll give you an overview about the brand new event transform",
    "start": "77920",
    "end": "83600"
  },
  {
    "text": "which helps which help which helps you to kind of reshape your events and which",
    "start": "83600",
    "end": "88720"
  },
  {
    "text": "is an often asked feature from your site okay let's first start with security in",
    "start": "88720",
    "end": "95439"
  },
  {
    "text": "canative eventing by default canative eventing does not",
    "start": "95439",
    "end": "101119"
  },
  {
    "text": "enforce security on event delivery meaning traffic is unencrypted unauthorized and",
    "start": "101119",
    "end": "107399"
  },
  {
    "text": "unauthenticated and we all know this poses risks in not only production environments and enterprises need secure",
    "start": "107399",
    "end": "114399"
  },
  {
    "text": "event- driven architectures and to address those needs Kative Eventing",
    "start": "114399",
    "end": "121159"
  },
  {
    "text": "provides in its or provided in its latest or recent versions three new key",
    "start": "121159",
    "end": "126880"
  },
  {
    "text": "security features and also transport encryption via TLS through HTTP endpoints to make sure event traffic is",
    "start": "126880",
    "end": "134680"
  },
  {
    "text": "encrypted then authentication via Open ID connect to allow event consumers to",
    "start": "134680",
    "end": "141040"
  },
  {
    "text": "verify who sent an event and finally authorization via event policies which plays together with",
    "start": "141040",
    "end": "147319"
  },
  {
    "text": "authentication to allow you to restrict who can send events to your",
    "start": "147319",
    "end": "153000"
  },
  {
    "text": "resources okay let's start with transport encryption as said by default",
    "start": "153000",
    "end": "158160"
  },
  {
    "text": "Kative eventing does not um enforce security or does not encrypt",
    "start": "158160",
    "end": "165239"
  },
  {
    "text": "um events and we all know that as soon as somebody has access to the network",
    "start": "165239",
    "end": "171840"
  },
  {
    "text": "they could potentially intercept those events and this poses risks and by providing HTTPS endpoints for",
    "start": "171840",
    "end": "178000"
  },
  {
    "text": "addressables we now can or addressables now accept TLS encrypted and events and",
    "start": "178000",
    "end": "184239"
  },
  {
    "text": "this is done on two sides first addressables provide their HTTPS endpoints or provide an",
    "start": "184239",
    "end": "191680"
  },
  {
    "text": "HTTPS endpoint and depending on the transport encryption feature flag config configuration they provide only an HTTPS",
    "start": "191680",
    "end": "199040"
  },
  {
    "text": "endpoint when the configuration is set to strict if the transport encryption mode",
    "start": "199040",
    "end": "205760"
  },
  {
    "text": "is set to permissive they provide an HTTP and an HTTPS endpoints or both and",
    "start": "205760",
    "end": "211280"
  },
  {
    "text": "when it's disabled of course then we fall back to the current behavior what is providing only an HTTP",
    "start": "211280",
    "end": "218440"
  },
  {
    "text": "endpoint and event producers on the other hand they prefer sending events to the HTTPS",
    "start": "218440",
    "end": "225879"
  },
  {
    "text": "endpoint and for the certificate generation for the HTTPS endpoints we",
    "start": "225879",
    "end": "232480"
  },
  {
    "text": "use cluster manager under the hood so no service mesh or anything else is needed from your",
    "start": "232480",
    "end": "239480"
  },
  {
    "text": "side on the resource side this looks the following um here on on uh example on a",
    "start": "239480",
    "end": "245360"
  },
  {
    "text": "broker and addressable we have now the status addresses fields maybe you know from before we had only the status",
    "start": "245360",
    "end": "251760"
  },
  {
    "text": "address fields but since we can since we now can have um at least two addresses",
    "start": "251760",
    "end": "257199"
  },
  {
    "text": "the HTTP and the HTTPS one in case it's permissive um it's now simply the plural",
    "start": "257199",
    "end": "262919"
  },
  {
    "text": "form and there we have the HTTPS address with the certificate and the HTTP",
    "start": "262919",
    "end": "269600"
  },
  {
    "text": "address okay so TLS helps us on encrypting the",
    "start": "269600",
    "end": "276440"
  },
  {
    "text": "events but what happens if you want to kind of protect your broker that not everybody can send events to it so for",
    "start": "276440",
    "end": "283280"
  },
  {
    "text": "example define some access rules or some policies and protect your broker that only source XY Z can send events to it",
    "start": "283280",
    "end": "290880"
  },
  {
    "text": "therefore we need first authentication to verify where the request comes from or who sent it and finally authorization",
    "start": "290880",
    "end": "297880"
  },
  {
    "text": "to implement the policies and for authentication as said",
    "start": "297880",
    "end": "305040"
  },
  {
    "text": "it helps us to verify who sent the request and therefore we use we are",
    "start": "305040",
    "end": "310320"
  },
  {
    "text": "using or integrated open ID connect to help us or to ensure that we can",
    "start": "310320",
    "end": "317520"
  },
  {
    "text": "verify who who sent the request and this is also done on on two sides",
    "start": "317520",
    "end": "322960"
  },
  {
    "text": "first addressables they provide the so-called OIDC audience in the status this is an autogenerated unique field",
    "start": "322960",
    "end": "329199"
  },
  {
    "text": "and it will be automatically prepopulated for you when the OIDC authentication feature is",
    "start": "329199",
    "end": "335800"
  },
  {
    "text": "enabled event producers on the other hand they also create or they create a service account uh service account under",
    "start": "335800",
    "end": "342160"
  },
  {
    "text": "the hood for you also automatically and this new service account serves as their",
    "start": "342160",
    "end": "347639"
  },
  {
    "text": "identity um when sending events so um",
    "start": "347639",
    "end": "352720"
  },
  {
    "text": "when event producer now sends an request or sends wants to send an event it requests a new ODC token for their",
    "start": "352720",
    "end": "359840"
  },
  {
    "text": "identity service account and for the audience of the target and attaches it",
    "start": "359840",
    "end": "365039"
  },
  {
    "text": "to the to the request in the in the header and then the addressable on the other hand when it receives an an a",
    "start": "365039",
    "end": "372479"
  },
  {
    "text": "request then it checks the authorization header or the the token when it's okay it passes it through and continues with",
    "start": "372479",
    "end": "378720"
  },
  {
    "text": "the um event processing when it's not okay um for example because the token expired or because it",
    "start": "378720",
    "end": "384960"
  },
  {
    "text": "was for the wrong audience then it declines it by a 41 on the resource side looks the",
    "start": "384960",
    "end": "392639"
  },
  {
    "text": "following that um on the source side on the event centers we now have the the identity of the service account um",
    "start": "392639",
    "end": "399280"
  },
  {
    "text": "provided in the status or service account name field and for the addressables as they",
    "start": "399280",
    "end": "404960"
  },
  {
    "text": "have their audience this is also automatically populated for you it is the status address audience field and",
    "start": "404960",
    "end": "411199"
  },
  {
    "text": "it's of course also in the addresses field as we saw in the TLS slides but for simplicity we have it",
    "start": "411199",
    "end": "417800"
  },
  {
    "text": "here okay uh sorry yes okay so now we know",
    "start": "417800",
    "end": "424960"
  },
  {
    "text": "who sent an request but with authorization we can now or a",
    "start": "424960",
    "end": "430720"
  },
  {
    "text": "authorization should help us to restrict who can send events to your resources",
    "start": "430720",
    "end": "435919"
  },
  {
    "text": "and we do this by um as we added a new um custom resource called event policy",
    "start": "435919",
    "end": "442560"
  },
  {
    "text": "and in this um event policy you can specify who can send events to whom and",
    "start": "442560",
    "end": "449759"
  },
  {
    "text": "the event policy has two mains main fields first the spec.2 where you can",
    "start": "449759",
    "end": "456120"
  },
  {
    "text": "specify which resources are going to be protected um for example you can do this",
    "start": "456120",
    "end": "461680"
  },
  {
    "text": "by providing a direct reference as in this case to a broker or you can also do this by a selector by selecting multiple",
    "start": "461680",
    "end": "469360"
  },
  {
    "text": "um resources which are kind of protected by this event policy also as a side note when the spec",
    "start": "469360",
    "end": "476479"
  },
  {
    "text": "two is empty then the event policy applies to all resources in the namespace and the other important",
    "start": "476479",
    "end": "483280"
  },
  {
    "text": "section is the spec from section where you specify who is allowed to send events uh to the above resources and you",
    "start": "483280",
    "end": "490479"
  },
  {
    "text": "can also do this by specifying a direct reference as we do here for ping source and this can also be come from another",
    "start": "490479",
    "end": "498599"
  },
  {
    "text": "namespace and you also can uh directly specify the service account names or the",
    "start": "498599",
    "end": "504879"
  },
  {
    "text": "identities via this sub field and a nice thing about a sub field is that it",
    "start": "504879",
    "end": "510080"
  },
  {
    "text": "allows you to use prefixes followed by a star like in the second sub um and that",
    "start": "510080",
    "end": "516240"
  },
  {
    "text": "way you can for example allow all requests from all namespaces from or",
    "start": "516240",
    "end": "521839"
  },
  {
    "text": "from all service accounts from from a namespace and this third section are the",
    "start": "521839",
    "end": "527680"
  },
  {
    "text": "filters and they are optional and they allow you to even shrink it more down which events are allowed for example",
    "start": "527680",
    "end": "533600"
  },
  {
    "text": "that way you can restrict that only certain event types are allowed to be sent to your",
    "start": "533600",
    "end": "540519"
  },
  {
    "text": "resource okay let's uh check on a quick example how this looks like imagine we",
    "start": "540519",
    "end": "546560"
  },
  {
    "text": "have namespace one having uh ping source one and namespace 2 having ping source 2 and a broker and this broker is",
    "start": "546560",
    "end": "552720"
  },
  {
    "text": "protected by an event policy and in event policy we define that only ping",
    "start": "552720",
    "end": "557760"
  },
  {
    "text": "source one from namespace one is allowed to send events to obviously meaning that ping source one is or ping source 2 is",
    "start": "557760",
    "end": "564080"
  },
  {
    "text": "not allowed to send events to the broker now you might wonder what happens",
    "start": "564080",
    "end": "569600"
  },
  {
    "text": "if you don't have defined any event policy for some resources for that case we define some",
    "start": "569600",
    "end": "577120"
  },
  {
    "text": "fallback mechanisms or some default authorization modes which jump in in case no event",
    "start": "577120",
    "end": "584480"
  },
  {
    "text": "policy is in place for a resource so and there we have three different",
    "start": "584480",
    "end": "589839"
  },
  {
    "text": "options you can choose from first allow all which means that yeah all requests",
    "start": "589839",
    "end": "595680"
  },
  {
    "text": "are allowed if no event policy is in place deny all meaning that all requests",
    "start": "595680",
    "end": "600720"
  },
  {
    "text": "are denied by default which kind of forces the user to create an event policy and assign it to the resource and",
    "start": "600720",
    "end": "607920"
  },
  {
    "text": "the third option is the allow same namespace option which means that only requests from the same name space as",
    "start": "607920",
    "end": "613279"
  },
  {
    "text": "where the resource lives in is allowed to be sent and as this is default um",
    "start": "613279",
    "end": "619360"
  },
  {
    "text": "this could be seen as some breaking change but as you can simply update or",
    "start": "619360",
    "end": "624800"
  },
  {
    "text": "set the default authorization mode um you will be",
    "start": "624800",
    "end": "630200"
  },
  {
    "text": "fine okay so going back to the previous example where we had the two name spaces and a broker um in this example we don't",
    "start": "630200",
    "end": "638399"
  },
  {
    "text": "have an event policy which would mean the broker would fall back to the default authorization mode which is the",
    "start": "638399",
    "end": "644720"
  },
  {
    "text": "allow same namespace um policy which would then mean that only requests from",
    "start": "644720",
    "end": "649760"
  },
  {
    "text": "the same namespace would be allowed to the broker in this case this is only the case for Pingosource 2 and as Pinkour",
    "start": "649760",
    "end": "656560"
  },
  {
    "text": "one is in another namespace as the broker it would be declined and by declined I mean they would receive a",
    "start": "656560",
    "end": "662079"
  },
  {
    "text": "four or three status code okay that's it from for security",
    "start": "662079",
    "end": "668880"
  },
  {
    "text": "now let's check what we have or which kind of news we have on the integration side",
    "start": "668880",
    "end": "676600"
  },
  {
    "text": "um previously we had only or can native eventing was kind of limited to a small",
    "start": "676680",
    "end": "682880"
  },
  {
    "text": "number of built-in event sources and things for example we had the API server source or the ping source and when users",
    "start": "682880",
    "end": "689440"
  },
  {
    "text": "wanted to connect to third party services they needed to create for example or to leverage the container",
    "start": "689440",
    "end": "695360"
  },
  {
    "text": "source or write their own source and of course this is some some burden and um",
    "start": "695360",
    "end": "700800"
  },
  {
    "text": "maintenance work of course you could also use some third party sources but",
    "start": "700800",
    "end": "706320"
  },
  {
    "text": "some of them are not maintained very well anymore or even got shut down",
    "start": "706320",
    "end": "713040"
  },
  {
    "text": "but maybe you know the Apache camel project which have and the Apache camel project they have the camellets which",
    "start": "713040",
    "end": "719680"
  },
  {
    "text": "run Kubernetes and provide you some connectors to various third party",
    "start": "719680",
    "end": "724959"
  },
  {
    "text": "services for example service to AWS or to Google cloud services or um message",
    "start": "724959",
    "end": "731839"
  },
  {
    "text": "services or JMS workers and so we thought okay it would",
    "start": "731839",
    "end": "737200"
  },
  {
    "text": "be nice to have support for connecting to third party services natively in K native eventing core and this is done",
    "start": "737200",
    "end": "744320"
  },
  {
    "text": "now by the new so-called integration source and integration sync and those",
    "start": "744320",
    "end": "749920"
  },
  {
    "text": "two new sources or those new sources and sync allow you now to get events and",
    "start": "749920",
    "end": "756000"
  },
  {
    "text": "send events from AWS S3 um SQS SNS or",
    "start": "756000",
    "end": "761760"
  },
  {
    "text": "Dyn Dynamo DB streams and it's now super easy for you",
    "start": "761760",
    "end": "767920"
  },
  {
    "text": "for example if you want to receive events from AWS SQS you simply create integration source add the SQS",
    "start": "767920",
    "end": "774560"
  },
  {
    "text": "configuration options the O secret specify the sync as you usually do for a source and you're done afterwards your",
    "start": "774560",
    "end": "780959"
  },
  {
    "text": "sync in this case the broker will receive the events from SQS similar if you want to send events",
    "start": "780959",
    "end": "788480"
  },
  {
    "text": "back to SQS you simply create an integration sync specify the AWS SQS",
    "start": "788480",
    "end": "795200"
  },
  {
    "text": "configuration options the O secret and you're done the sync will create an an",
    "start": "795200",
    "end": "800480"
  },
  {
    "text": "status where you can send send events to and that's it and by having this natively in",
    "start": "800480",
    "end": "807680"
  },
  {
    "text": "um K native eventing you also get this in the in the usual release cycles and also it um supports for example",
    "start": "807680",
    "end": "814639"
  },
  {
    "text": "integrating into existing systems what we have like or um so that for example",
    "start": "814639",
    "end": "820560"
  },
  {
    "text": "it it comes with TLS support out of the box okay that's it",
    "start": "820560",
    "end": "827160"
  },
  {
    "text": "for eventing integration so handing over to um event",
    "start": "827160",
    "end": "833880"
  },
  {
    "text": "discovery so the first part is like understanding why we talking about event discovery and so as we saw like when we",
    "start": "833880",
    "end": "842320"
  },
  {
    "text": "building event- driven systems usually we connect to all sorts of systems that are like either public cloud services or",
    "start": "842320",
    "end": "849440"
  },
  {
    "text": "like private internal system services and um the idea is that to know how to",
    "start": "849440",
    "end": "857360"
  },
  {
    "text": "consume them we need to have either good documentations in way that every field",
    "start": "857360",
    "end": "863120"
  },
  {
    "text": "is like documented and well known or we have like schemas as",
    "start": "863120",
    "end": "869240"
  },
  {
    "text": "well and um so far like what we had we had like on the documentation website we",
    "start": "869240",
    "end": "875760"
  },
  {
    "text": "had like a long list and you had to dig through each individual source to understand what is was producing what",
    "start": "875760",
    "end": "882399"
  },
  {
    "text": "are the kinds of events I'm going to be able to consume with that source and and",
    "start": "882399",
    "end": "888399"
  },
  {
    "text": "what's also the shape of that event uh in a way that I can you know uh dialize",
    "start": "888399",
    "end": "894160"
  },
  {
    "text": "it and do something useful with it and yeah that's the idea So what do I",
    "start": "894160",
    "end": "901360"
  },
  {
    "text": "do next when I visit the documentation is not very helpful usually these days you know we go to charge BT or cloud or",
    "start": "901360",
    "end": "908720"
  },
  {
    "text": "whatever you like we ask it for example in this game in this case I'm asking like what is the type of event I can",
    "start": "908720",
    "end": "916560"
  },
  {
    "text": "consume from AWS DB streams um it's kind of very lengthy at some point is kind of",
    "start": "916560",
    "end": "923360"
  },
  {
    "text": "being useful and it gives me kind of an example shape so maybe we don't need to",
    "start": "923360",
    "end": "930480"
  },
  {
    "text": "do anything you know we have LLMs we we can solve some of these problems the",
    "start": "930480",
    "end": "935600"
  },
  {
    "text": "issue comes when you know if you assume that public services you know they are",
    "start": "935600",
    "end": "941199"
  },
  {
    "text": "well doumented LLM maybe can help on on some of those internal systems are not",
    "start": "941199",
    "end": "946480"
  },
  {
    "text": "that well documented we know that you know um documentation is not first class",
    "start": "946480",
    "end": "952079"
  },
  {
    "text": "citizen in many like legacy or enterprise systems and so we need some",
    "start": "952079",
    "end": "958000"
  },
  {
    "text": "tools for that and so probably um that's that's basically the other solution that we",
    "start": "958000",
    "end": "964959"
  },
  {
    "text": "have currently is basically create a functions for that event consume it and log it and maybe extract the schema of",
    "start": "964959",
    "end": "972079"
  },
  {
    "text": "that event in that way that's pretty much what everybody's doing",
    "start": "972079",
    "end": "977519"
  },
  {
    "text": "so that's why we created this API it's called event type API this was present",
    "start": "977519",
    "end": "982639"
  },
  {
    "text": "for a while inventing uh we kind of evolved it in a way that you can describe basically uh a reference to a",
    "start": "982639",
    "end": "989920"
  },
  {
    "text": "resource that is emitting that particular type and also the attributes",
    "start": "989920",
    "end": "995120"
  },
  {
    "text": "and in these attributes as you can see you have the name and the value the value can also be some sort of template",
    "start": "995120",
    "end": "1001839"
  },
  {
    "text": "as you can see in the source value there is a variable ID in there so that you can describe kind of complex and then",
    "start": "1001839",
    "end": "1008720"
  },
  {
    "text": "there is we usually in in these attributes list you can put whatever but we recommend at least type source and",
    "start": "1008720",
    "end": "1015519"
  },
  {
    "text": "data schema because data schema is also a link to your schema registry that you",
    "start": "1015519",
    "end": "1022160"
  },
  {
    "text": "may have you know people use I don't know confluent or there are like some other open source it could be also a",
    "start": "1022160",
    "end": "1028160"
  },
  {
    "text": "github repo somewhere on your private",
    "start": "1028160",
    "end": "1033640"
  },
  {
    "text": "um so that that's That's the idea of like having these APIs like a cube API",
    "start": "1033640",
    "end": "1039120"
  },
  {
    "text": "natively we can consume it and so as usual you can list it with CLI cubectl",
    "start": "1039120",
    "end": "1044720"
  },
  {
    "text": "get event type and get the list um the other issue is that how do we get like",
    "start": "1044720",
    "end": "1050000"
  },
  {
    "text": "these event types created you either can create them manually you know you can type the full YAML create them in the",
    "start": "1050000",
    "end": "1056480"
  },
  {
    "text": "cluster and there is also another way of creating them we create them automatically as you go through the",
    "start": "1056480",
    "end": "1062400"
  },
  {
    "text": "broker as we saw in the previous slide in this slide as they go through the broker we basically create these APIs",
    "start": "1062400",
    "end": "1069200"
  },
  {
    "text": "for you so that you can get a head start let's say and this is that's the idea",
    "start": "1069200",
    "end": "1076880"
  },
  {
    "text": "like as the event goes through the broker we create that CRD um event type",
    "start": "1076880",
    "end": "1083440"
  },
  {
    "text": "that event type CRD for for you um there are obviously downsides to do this And",
    "start": "1083440",
    "end": "1090080"
  },
  {
    "text": "you know uh but this is is at least a good start experience you can kind of",
    "start": "1090080",
    "end": "1096000"
  },
  {
    "text": "get it going at least in development and then maybe in production you just turn it off the automatic creation and use",
    "start": "1096000",
    "end": "1102880"
  },
  {
    "text": "you know the the manual one uh okay so last year we had also part of",
    "start": "1102880",
    "end": "1112240"
  },
  {
    "text": "this we presented this at cubecon na so we have we had also a demo a full demo if you're like using a backstage this",
    "start": "1112240",
    "end": "1119679"
  },
  {
    "text": "there is a plug-in for backstage you can visualize your catalog with this API it's kind of cool go watch it um it's",
    "start": "1119679",
    "end": "1128080"
  },
  {
    "text": "called uh what even discovering Kubernetes uh it's on YouTube so there",
    "start": "1128080",
    "end": "1134320"
  },
  {
    "text": "is a demo there uh job sync jobs sync is is",
    "start": "1134320",
    "end": "1139760"
  },
  {
    "text": "another feature we have been working on and uh the idea is that when you uh work",
    "start": "1139760",
    "end": "1145440"
  },
  {
    "text": "on like lambda type of systems or like serverless type of systems you have a",
    "start": "1145440",
    "end": "1151120"
  },
  {
    "text": "hard limit on how long that processing is can take you know it can be in the",
    "start": "1151120",
    "end": "1158160"
  },
  {
    "text": "order of minutes uh let's say but there are like lots of workloads where you you",
    "start": "1158160",
    "end": "1165039"
  },
  {
    "text": "have this processing and it's going to take long time to kind of process and complete and so that's the idea of job",
    "start": "1165039",
    "end": "1171280"
  },
  {
    "text": "sync is really to be able to have a request coming in to an event and then",
    "start": "1171280",
    "end": "1177440"
  },
  {
    "text": "do basically offload these uh longunning processing in the background",
    "start": "1177440",
    "end": "1184120"
  },
  {
    "text": "um so the idea is that I have an event source so you can use whatever whatever",
    "start": "1184120",
    "end": "1190160"
  },
  {
    "text": "source you're using and as you can saw as you can see so uh as we discussed",
    "start": "1190160",
    "end": "1195440"
  },
  {
    "text": "earlier we can this can come from any system and basically create uh when the",
    "start": "1195440",
    "end": "1201919"
  },
  {
    "text": "event comes in to job sync you can what we do is basically create a job for you",
    "start": "1201919",
    "end": "1207280"
  },
  {
    "text": "and the event is going to be mounted on the file system on that path and so you",
    "start": "1207280",
    "end": "1212400"
  },
  {
    "text": "can read that event as a JSON and then do your processing and this can",
    "start": "1212400",
    "end": "1217600"
  },
  {
    "text": "basically takes as long as you you need to um another thing that I want to talk",
    "start": "1217600",
    "end": "1224640"
  },
  {
    "text": "about is that part of this is um a pattern basically on now we see people",
    "start": "1224640",
    "end": "1229840"
  },
  {
    "text": "use this uh job sync also to create like complex workflow that are like event driven so very scalable in a way and the",
    "start": "1229840",
    "end": "1238240"
  },
  {
    "text": "idea of um is the idea is that before shutting down your job basically",
    "start": "1238240",
    "end": "1243600"
  },
  {
    "text": "completing your job is to produce a new event so that that event can also trigger further processing basically",
    "start": "1243600",
    "end": "1251400"
  },
  {
    "text": "Okay so um to do that we we also reuse some of like existing features uh if",
    "start": "1251400",
    "end": "1258320"
  },
  {
    "text": "you're not familiar with sync binding the idea of sync commanding is to inject an address",
    "start": "1258320",
    "end": "1264760"
  },
  {
    "text": "into a resource that looks like a pod so it could be a deployment a job it could",
    "start": "1264760",
    "end": "1271520"
  },
  {
    "text": "be stateful sets could be demon sets um up to you or even custom resources is to",
    "start": "1271520",
    "end": "1278559"
  },
  {
    "text": "inject this as an environment variable inject an address as an environment variable we call this case sync and so",
    "start": "1278559",
    "end": "1286559"
  },
  {
    "text": "basically before completing your job you're just going to fire a new event and that event is going to basically say",
    "start": "1286559",
    "end": "1292960"
  },
  {
    "text": "I've completed my processing with this uh with this event and so that you can",
    "start": "1292960",
    "end": "1298320"
  },
  {
    "text": "basically further consume that event for for more processing",
    "start": "1298320",
    "end": "1305120"
  },
  {
    "text": "event transform so uh we we didn't do like an",
    "start": "1305120",
    "end": "1310400"
  },
  {
    "text": "introduction but like uh eventing pretty much is based on cloud events cloud events is a CNCF also is mainly focused",
    "start": "1310400",
    "end": "1318559"
  },
  {
    "text": "on specifications but also um we we produce a bunch of SDKs for different",
    "start": "1318559",
    "end": "1324960"
  },
  {
    "text": "languages so Python Java Node or uh others and uh it's a specification what",
    "start": "1324960",
    "end": "1333159"
  },
  {
    "text": "what it's really trying to do is to standardize how you transport events",
    "start": "1333159",
    "end": "1339679"
  },
  {
    "text": "across different protocols or different formats um in eventing",
    "start": "1339679",
    "end": "1345720"
  },
  {
    "text": "we primarily we support binary HTTP so it means that as a compact form and the",
    "start": "1345720",
    "end": "1354000"
  },
  {
    "text": "attributes of the event are in the headers and the body of the request is the data",
    "start": "1354000",
    "end": "1359799"
  },
  {
    "text": "payload and then also there is a structured JSON this is a little bit less efficient because we need to",
    "start": "1359799",
    "end": "1366640"
  },
  {
    "text": "dialize the JSON when we need to apply filters um but you know you can use both",
    "start": "1366640",
    "end": "1373679"
  },
  {
    "text": "of these and adopting adopting this format is um is relative s relatively",
    "start": "1373679",
    "end": "1381440"
  },
  {
    "text": "simple you need to add a bunch of attributes but it's still something you need to do additional the idea is that",
    "start": "1381440",
    "end": "1388720"
  },
  {
    "text": "for with even transform you want to like bring systems like that already existing easily into uh eventing and so have this",
    "start": "1388720",
    "end": "1396799"
  },
  {
    "text": "kind of more cloud native processing for even um event driven on",
    "start": "1396799",
    "end": "1401960"
  },
  {
    "text": "systems and um not only that we don't want people to write a bunch of code",
    "start": "1401960",
    "end": "1408240"
  },
  {
    "text": "that is just not even lifting or like kind of transformation stuff um and",
    "start": "1408240",
    "end": "1413280"
  },
  {
    "text": "that's the idea of even transform maybe kind of declarative transformations of events",
    "start": "1413280",
    "end": "1419880"
  },
  {
    "text": "um so we started with JSON obviously JSON is very popular for like API or or",
    "start": "1419880",
    "end": "1427320"
  },
  {
    "text": "or similar and the the idea A is that we use this JSON uh expression language to",
    "start": "1427320",
    "end": "1435360"
  },
  {
    "text": "uh transform events from one JSON to another pretty much um it's relatively simple idea but is very effective and",
    "start": "1435360",
    "end": "1444000"
  },
  {
    "text": "out with like less code to maintain for you all this is an expression example",
    "start": "1444000",
    "end": "1449679"
  },
  {
    "text": "expression it looks like JSON but is not as you can see the value these are variables they are not quoted so um",
    "start": "1449679",
    "end": "1456960"
  },
  {
    "text": "that's how you can tell it's not JSON um so here I have an example in in my",
    "start": "1456960",
    "end": "1465200"
  },
  {
    "text": "example uh I have a broker and event transform and in this example I'm using",
    "start": "1465200",
    "end": "1470960"
  },
  {
    "text": "the broker reply feature in the broker reply feature you can basically have a processing of an event and then reply",
    "start": "1470960",
    "end": "1478000"
  },
  {
    "text": "back with a new event and that event is going to be get cued as a normal event would be um sent by a different source",
    "start": "1478000",
    "end": "1486480"
  },
  {
    "text": "in this case the idea is that I want to extract the the payment method from the",
    "start": "1486480",
    "end": "1492360"
  },
  {
    "text": "data and put that as a attribute of the cloud event so that I can filter and",
    "start": "1492360",
    "end": "1498000"
  },
  {
    "text": "maybe have a processing only for like credit card type of payments and this is what it looks like",
    "start": "1498000",
    "end": "1505760"
  },
  {
    "text": "in YAML um it's like",
    "start": "1505760",
    "end": "1510159"
  },
  {
    "text": "um so in in this is is another example on how to use event transform there is",
    "start": "1510919",
    "end": "1517039"
  },
  {
    "text": "another way of like instead of replying back with the new event I'm going to forward that to a different sync and",
    "start": "1517039",
    "end": "1523520"
  },
  {
    "text": "that sync can be also a any sort of HTTP URL could be outside the cluster even in",
    "start": "1523520",
    "end": "1530880"
  },
  {
    "text": "this case I'm just um uh shaping the event to be proper",
    "start": "1530880",
    "end": "1536880"
  },
  {
    "text": "cloud event and this is what it looks like you have a if you're familiar with K native",
    "start": "1536880",
    "end": "1544080"
  },
  {
    "text": "you usually have this specs sync and that sync usually is the basically the",
    "start": "1544080",
    "end": "1549440"
  },
  {
    "text": "target of the event so that was the presentation",
    "start": "1549440",
    "end": "1554960"
  },
  {
    "text": "hopefully it was useful and we have some time for questions if you have uh",
    "start": "1554960",
    "end": "1560159"
  },
  {
    "text": "otherwise we are going to be at the project pavon kios",
    "start": "1560159",
    "end": "1565799"
  },
  {
    "text": "3a feel free to leave also feedback that's QR code for",
    "start": "1565799",
    "end": "1571640"
  },
  {
    "text": "feedback thank you [Music]",
    "start": "1571640",
    "end": "1579510"
  },
  {
    "text": "oh yeah thank you very much for the presentation just one question regarding um is there going to be support for",
    "start": "1590840",
    "end": "1597039"
  },
  {
    "text": "client uh certificate as well with HTTPS encryption is it going to be both way or",
    "start": "1597039",
    "end": "1602080"
  },
  {
    "text": "just server side that's question one and question two regarding the AWS support for um for sources are we is there going",
    "start": "1602080",
    "end": "1608720"
  },
  {
    "text": "to be support for IRSA so for TLS we don't have plans for",
    "start": "1608720",
    "end": "1617279"
  },
  {
    "text": "like mutual TLS so also client but you know feel free to open an issue we just",
    "start": "1617279",
    "end": "1624320"
  },
  {
    "text": "didn't have the ask uh for uh AWS also there was no ask but so I I don't know",
    "start": "1624320",
    "end": "1631919"
  },
  {
    "text": "there is no yet plan Okay any more question oh yeah uh thank",
    "start": "1631919",
    "end": "1637919"
  },
  {
    "text": "thank you much for your presentation a great talk um I'm working as a platform engineer like I need to provide Kennedy",
    "start": "1637919",
    "end": "1644480"
  },
  {
    "text": "venting to multiple teams like in in the uh in in the organization i'm um and I",
    "start": "1644480",
    "end": "1650640"
  },
  {
    "text": "understand that like uh the broker increase like right now is a share a",
    "start": "1650640",
    "end": "1655840"
  },
  {
    "text": "kind of share within control pane right i'm wondering if is there any plan to",
    "start": "1655840",
    "end": "1662080"
  },
  {
    "text": "support you know like multi-tendency okay broker in grace like I mean to spread broker in grace to another name",
    "start": "1662080",
    "end": "1669000"
  },
  {
    "text": "space thing like that so when when you",
    "start": "1669000",
    "end": "1674240"
  },
  {
    "text": "know multi-tenency is like comp like every organization kind of defines it differently the way like currently",
    "start": "1674240",
    "end": "1682320"
  },
  {
    "text": "eventing is like designed is like similar to how you would consume cube",
    "start": "1682320",
    "end": "1687600"
  },
  {
    "text": "you know you have an API server that is shared and that's also what is implementing the logic behind the broker",
    "start": "1687600",
    "end": "1694480"
  },
  {
    "text": "the broker is just a logical representation there is no power running behind the broker usually at least in",
    "start": "1694480",
    "end": "1699840"
  },
  {
    "text": "the like the multi- the shared implementations okay so that's the idea it's kind of",
    "start": "1699840",
    "end": "1706799"
  },
  {
    "text": "depending on like there are some organizations that say okay multi-tenency for me means a power",
    "start": "1706799",
    "end": "1712159"
  },
  {
    "text": "running in a specific name space because I'm going to segregate that with like network policies for example that is not",
    "start": "1712159",
    "end": "1717840"
  },
  {
    "text": "going to work with eventing but if you if you combine with the security features that we have with like allow",
    "start": "1717840",
    "end": "1724559"
  },
  {
    "text": "same name space you're going to have a pretty good solution like around at least being secure segregated now we can",
    "start": "1724559",
    "end": "1732399"
  },
  {
    "text": "talk about like the shared data plane that we have there is no like proper",
    "start": "1732399",
    "end": "1737760"
  },
  {
    "text": "let's say um multi-tenant segregation in a way that you know one tenant can",
    "start": "1737760",
    "end": "1743760"
  },
  {
    "text": "overload the data plane and it goes down you know it's similar to cube you know",
    "start": "1743760",
    "end": "1749520"
  },
  {
    "text": "so there are some solutions um we also have if some of the native features",
    "start": "1749520",
    "end": "1755440"
  },
  {
    "text": "don't work and you use service mesh for example some sort of service mesh you can also integrate with that and we have",
    "start": "1755440",
    "end": "1762000"
  },
  {
    "text": "native integration withto because that's the most software we have but you can also do something interesting in there",
    "start": "1762000",
    "end": "1768240"
  },
  {
    "text": "is it depends on like how you want to offer that but it's possible we we",
    "start": "1768240",
    "end": "1773760"
  },
  {
    "text": "definitely have people using you know eventing as a shared uh there are like",
    "start": "1773760",
    "end": "1779039"
  },
  {
    "text": "also CNCF case studies talking about this",
    "start": "1779039",
    "end": "1784120"
  },
  {
    "text": "okay thank you for for the presentation for the authorization part",
    "start": "1784840",
    "end": "1791360"
  },
  {
    "text": "do you support uh label based authorization like uh network",
    "start": "1791360",
    "end": "1796840"
  },
  {
    "text": "policies for example uh can we accept only from the same name space but from",
    "start": "1796840",
    "end": "1803440"
  },
  {
    "text": "some sanders with label A or label B do you see what I mean yeah so we we don't",
    "start": "1803440",
    "end": "1810880"
  },
  {
    "text": "we don't have that u when you when you see when you say label A and label B",
    "start": "1810880",
    "end": "1816799"
  },
  {
    "text": "label on what in the sender sender being an event source yes",
    "start": "1816799",
    "end": "1823120"
  },
  {
    "text": "so no there is no because the way it works is basically we create service accounts Kubernetes service accounts and",
    "start": "1823120",
    "end": "1829600"
  },
  {
    "text": "they live in a specific name space uh so there is no labeling also because",
    "start": "1829600",
    "end": "1835440"
  },
  {
    "text": "everybody can kind of add labels to to those so it's it's kind of I'm not sure",
    "start": "1835440",
    "end": "1840559"
  },
  {
    "text": "like what exactly that entails in terms of like the threat model you know of the",
    "start": "1840559",
    "end": "1845600"
  },
  {
    "text": "system yeah okay thank you",
    "start": "1845600",
    "end": "1850760"
  },
  {
    "text": "any more questions all right thank you so much",
    "start": "1850760",
    "end": "1856930"
  },
  {
    "text": "[Applause]",
    "start": "1856930",
    "end": "1860329"
  }
]