[
  {
    "text": "hello everyone thank you for joining our",
    "start": "719",
    "end": "2960"
  },
  {
    "text": "talk on envoy vasum filters",
    "start": "2960",
    "end": "4960"
  },
  {
    "text": "for supporting yahoo headers my name is",
    "start": "4960",
    "end": "7440"
  },
  {
    "text": "mirinmei dhume and i'm a principal",
    "start": "7440",
    "end": "9200"
  },
  {
    "text": "software engineer at verizon media",
    "start": "9200",
    "end": "11440"
  },
  {
    "text": "in the core infrastructure team hi",
    "start": "11440",
    "end": "14080"
  },
  {
    "text": "everyone",
    "start": "14080",
    "end": "14880"
  },
  {
    "text": "my name is michael cheflak and i'm a",
    "start": "14880",
    "end": "17119"
  },
  {
    "text": "software engineer here at verizon media",
    "start": "17119",
    "end": "19600"
  },
  {
    "text": "as well",
    "start": "19600",
    "end": "21840"
  },
  {
    "text": "so today at verizon media formerly yahoo",
    "start": "21840",
    "end": "24560"
  },
  {
    "text": "we have over 30 kubernetes clusters",
    "start": "24560",
    "end": "26800"
  },
  {
    "text": "across multiple regions each of these",
    "start": "26800",
    "end": "29279"
  },
  {
    "text": "has an istio service mesh deployed on it",
    "start": "29279",
    "end": "32320"
  },
  {
    "text": "we have two parallel ingress layers",
    "start": "32320",
    "end": "34640"
  },
  {
    "text": "fronting our kubernetes clusters",
    "start": "34640",
    "end": "36800"
  },
  {
    "text": "one is powered by apache traffic server",
    "start": "36800",
    "end": "39280"
  },
  {
    "text": "serving two million",
    "start": "39280",
    "end": "40399"
  },
  {
    "text": "peak requests per second and the other",
    "start": "40399",
    "end": "42960"
  },
  {
    "text": "by envoy which serves 230k requests per",
    "start": "42960",
    "end": "45680"
  },
  {
    "text": "second",
    "start": "45680",
    "end": "46800"
  },
  {
    "text": "by the beginning of 2021 our goal is to",
    "start": "46800",
    "end": "49360"
  },
  {
    "text": "migrate all the traffic from our ats",
    "start": "49360",
    "end": "51360"
  },
  {
    "text": "layer to envoy",
    "start": "51360",
    "end": "53360"
  },
  {
    "text": "today our istio service mesh is running",
    "start": "53360",
    "end": "55680"
  },
  {
    "text": "at a scale of 6700",
    "start": "55680",
    "end": "58160"
  },
  {
    "text": "application pods all bundled with the",
    "start": "58160",
    "end": "60399"
  },
  {
    "text": "envoy sidecar proxy",
    "start": "60399",
    "end": "62800"
  },
  {
    "text": "some of the key features of envoy that",
    "start": "62800",
    "end": "64720"
  },
  {
    "text": "we are utilizing today are as follows",
    "start": "64720",
    "end": "67119"
  },
  {
    "text": "we make use of its multiple protocol",
    "start": "67119",
    "end": "69200"
  },
  {
    "text": "support such as for http https",
    "start": "69200",
    "end": "72080"
  },
  {
    "text": "grpc tcp including the sni pass through",
    "start": "72080",
    "end": "75200"
  },
  {
    "text": "mode",
    "start": "75200",
    "end": "76400"
  },
  {
    "text": "we allow our users to take advantage of",
    "start": "76400",
    "end": "78799"
  },
  {
    "text": "the http request manipulation options",
    "start": "78799",
    "end": "80960"
  },
  {
    "text": "that it provides",
    "start": "80960",
    "end": "82799"
  },
  {
    "text": "in terms of security a majority of our",
    "start": "82799",
    "end": "84960"
  },
  {
    "text": "applications delegate the mutual tls",
    "start": "84960",
    "end": "87439"
  },
  {
    "text": "authentication and authorization to the",
    "start": "87439",
    "end": "89360"
  },
  {
    "text": "envoy sidecar proxy",
    "start": "89360",
    "end": "91439"
  },
  {
    "text": "and in terms of observability we make",
    "start": "91439",
    "end": "93520"
  },
  {
    "text": "use of the tracing attributes",
    "start": "93520",
    "end": "95200"
  },
  {
    "text": "and the prometheus metrics that are",
    "start": "95200",
    "end": "96720"
  },
  {
    "text": "generated by envoy",
    "start": "96720",
    "end": "100000"
  },
  {
    "text": "so now i'd like to talk a little bit",
    "start": "100000",
    "end": "101360"
  },
  {
    "text": "about the request flow that we see",
    "start": "101360",
    "end": "102880"
  },
  {
    "text": "through envoy proxy",
    "start": "102880",
    "end": "104640"
  },
  {
    "text": "so as you can see in this diagram if a",
    "start": "104640",
    "end": "106880"
  },
  {
    "text": "request originates from outside of the",
    "start": "106880",
    "end": "108720"
  },
  {
    "text": "kubernetes cluster",
    "start": "108720",
    "end": "110000"
  },
  {
    "text": "it must pass through our envoy ingress",
    "start": "110000",
    "end": "111920"
  },
  {
    "text": "layer",
    "start": "111920",
    "end": "113119"
  },
  {
    "text": "and the envoy layer is then responsible",
    "start": "113119",
    "end": "115119"
  },
  {
    "text": "for sending the request to the target",
    "start": "115119",
    "end": "117040"
  },
  {
    "text": "board of the appropriate application",
    "start": "117040",
    "end": "120079"
  },
  {
    "text": "in addition if you have two services say",
    "start": "120079",
    "end": "122640"
  },
  {
    "text": "a and b",
    "start": "122640",
    "end": "123280"
  },
  {
    "text": "which need to communicate with each",
    "start": "123280",
    "end": "124719"
  },
  {
    "text": "other and both of them are residing on",
    "start": "124719",
    "end": "126560"
  },
  {
    "text": "our kubernetes cluster",
    "start": "126560",
    "end": "128000"
  },
  {
    "text": "they are able to communicate directly",
    "start": "128000",
    "end": "129599"
  },
  {
    "text": "with one another using the envoy sidecar",
    "start": "129599",
    "end": "132080"
  },
  {
    "text": "so that the request will directly go",
    "start": "132080",
    "end": "133599"
  },
  {
    "text": "from a board of service a to a port of",
    "start": "133599",
    "end": "135440"
  },
  {
    "text": "service b",
    "start": "135440",
    "end": "136319"
  },
  {
    "text": "and not have to go through our ingress",
    "start": "136319",
    "end": "137840"
  },
  {
    "text": "layer another point that i would like to",
    "start": "137840",
    "end": "140560"
  },
  {
    "text": "mention here",
    "start": "140560",
    "end": "141440"
  },
  {
    "text": "is that the configuration that is",
    "start": "141440",
    "end": "143040"
  },
  {
    "text": "provided to all of these",
    "start": "143040",
    "end": "144560"
  },
  {
    "text": "envoy proxies is provided by our istio",
    "start": "144560",
    "end": "147440"
  },
  {
    "text": "service mesh",
    "start": "147440",
    "end": "148239"
  },
  {
    "text": "control plane component called stod",
    "start": "148239",
    "end": "152319"
  },
  {
    "text": "so like i mentioned previously envoy is",
    "start": "153120",
    "end": "155200"
  },
  {
    "text": "a rich featured",
    "start": "155200",
    "end": "156239"
  },
  {
    "text": "powerful l3 l4 and l7 proxy and we",
    "start": "156239",
    "end": "159440"
  },
  {
    "text": "utilize a number of the features that",
    "start": "159440",
    "end": "161040"
  },
  {
    "text": "are available today",
    "start": "161040",
    "end": "162640"
  },
  {
    "text": "however there are some custom features",
    "start": "162640",
    "end": "164319"
  },
  {
    "text": "that we would like to add and extend",
    "start": "164319",
    "end": "166160"
  },
  {
    "text": "envoy",
    "start": "166160",
    "end": "167519"
  },
  {
    "text": "envoy provides a number of extension",
    "start": "167519",
    "end": "169519"
  },
  {
    "text": "points such as through",
    "start": "169519",
    "end": "170959"
  },
  {
    "text": "custom http filters network filters",
    "start": "170959",
    "end": "173599"
  },
  {
    "text": "access loggers among others",
    "start": "173599",
    "end": "176160"
  },
  {
    "text": "in order to implement these extensions",
    "start": "176160",
    "end": "178239"
  },
  {
    "text": "there are a couple of options",
    "start": "178239",
    "end": "180400"
  },
  {
    "text": "one option is to write a c plus native",
    "start": "180400",
    "end": "182959"
  },
  {
    "text": "filter",
    "start": "182959",
    "end": "183840"
  },
  {
    "text": "using the extensive api that envoy",
    "start": "183840",
    "end": "185840"
  },
  {
    "text": "exposes",
    "start": "185840",
    "end": "187280"
  },
  {
    "text": "in order to do this a developer would",
    "start": "187280",
    "end": "188800"
  },
  {
    "text": "take the envoy source code",
    "start": "188800",
    "end": "190560"
  },
  {
    "text": "add their own custom filter to it and",
    "start": "190560",
    "end": "192560"
  },
  {
    "text": "then compile it together to form a",
    "start": "192560",
    "end": "194159"
  },
  {
    "text": "custom envoy binary",
    "start": "194159",
    "end": "196319"
  },
  {
    "text": "of course if this use case is generic",
    "start": "196319",
    "end": "198159"
  },
  {
    "text": "enough they do have the option",
    "start": "198159",
    "end": "199920"
  },
  {
    "text": "of merging it with the upstream envoy",
    "start": "199920",
    "end": "201920"
  },
  {
    "text": "main source code",
    "start": "201920",
    "end": "204000"
  },
  {
    "text": "the second option that we have is to",
    "start": "204000",
    "end": "205760"
  },
  {
    "text": "write a lua based filter",
    "start": "205760",
    "end": "207760"
  },
  {
    "text": "onward provides a lua api so that",
    "start": "207760",
    "end": "209920"
  },
  {
    "text": "developers can write their custom lua",
    "start": "209920",
    "end": "211680"
  },
  {
    "text": "script",
    "start": "211680",
    "end": "212080"
  },
  {
    "text": "using it this api is intentionally",
    "start": "212080",
    "end": "215280"
  },
  {
    "text": "small so that the lua scripts are simple",
    "start": "215280",
    "end": "217680"
  },
  {
    "text": "and safe to use",
    "start": "217680",
    "end": "219280"
  },
  {
    "text": "for more complex use cases developers",
    "start": "219280",
    "end": "221519"
  },
  {
    "text": "are encouraged to use one of the other",
    "start": "221519",
    "end": "223040"
  },
  {
    "text": "approaches",
    "start": "223040",
    "end": "224640"
  },
  {
    "text": "the newest option available to extend",
    "start": "224640",
    "end": "227280"
  },
  {
    "text": "envoy is to write a webassembly based",
    "start": "227280",
    "end": "229360"
  },
  {
    "text": "filter",
    "start": "229360",
    "end": "230480"
  },
  {
    "text": "i will talk more about this one in the",
    "start": "230480",
    "end": "232319"
  },
  {
    "text": "upcoming slides",
    "start": "232319",
    "end": "235120"
  },
  {
    "text": "so what is web assembly the official",
    "start": "235120",
    "end": "237680"
  },
  {
    "text": "definition states that it is a safe",
    "start": "237680",
    "end": "239760"
  },
  {
    "text": "portable low level code format designed",
    "start": "239760",
    "end": "242640"
  },
  {
    "text": "for efficient execution and compact",
    "start": "242640",
    "end": "244640"
  },
  {
    "text": "representation",
    "start": "244640",
    "end": "246400"
  },
  {
    "text": "we chose webassembly as the mode of",
    "start": "246400",
    "end": "248480"
  },
  {
    "text": "extension for envoy for a couple of",
    "start": "248480",
    "end": "250560"
  },
  {
    "text": "reasons",
    "start": "250560",
    "end": "251599"
  },
  {
    "text": "firstly it the binary that gets created",
    "start": "251599",
    "end": "254080"
  },
  {
    "text": "has a small size",
    "start": "254080",
    "end": "255519"
  },
  {
    "text": "and also this vason modules are loaded",
    "start": "255519",
    "end": "258000"
  },
  {
    "text": "very fast which",
    "start": "258000",
    "end": "259040"
  },
  {
    "text": "reduces the time required for startup",
    "start": "259040",
    "end": "262240"
  },
  {
    "text": "vassam also has support for multiple",
    "start": "262240",
    "end": "264000"
  },
  {
    "text": "languages so if you have any dependency",
    "start": "264000",
    "end": "266080"
  },
  {
    "text": "on existing libraries",
    "start": "266080",
    "end": "267440"
  },
  {
    "text": "you can continue to write your vassam",
    "start": "267440",
    "end": "269120"
  },
  {
    "text": "filter in the same language",
    "start": "269120",
    "end": "270639"
  },
  {
    "text": "and then together you can compile them",
    "start": "270639",
    "end": "272160"
  },
  {
    "text": "to form a vassal module",
    "start": "272160",
    "end": "274720"
  },
  {
    "text": "these passive modules run in a memory",
    "start": "274720",
    "end": "276880"
  },
  {
    "text": "safe and sandboxed environment",
    "start": "276880",
    "end": "278720"
  },
  {
    "text": "where the host environment is",
    "start": "278720",
    "end": "280160"
  },
  {
    "text": "responsible for the memory allocation",
    "start": "280160",
    "end": "282080"
  },
  {
    "text": "for the vessel module",
    "start": "282080",
    "end": "283360"
  },
  {
    "text": "and also to define what are the",
    "start": "283360",
    "end": "285040"
  },
  {
    "text": "functions that are available to it",
    "start": "285040",
    "end": "287680"
  },
  {
    "text": "this binary format can be pretty printed",
    "start": "287680",
    "end": "290080"
  },
  {
    "text": "in a textual format",
    "start": "290080",
    "end": "291360"
  },
  {
    "text": "so that it is easy to debug and to",
    "start": "291360",
    "end": "293199"
  },
  {
    "text": "optimize",
    "start": "293199",
    "end": "294880"
  },
  {
    "text": "another advantage that we saw is that",
    "start": "294880",
    "end": "297280"
  },
  {
    "text": "the vasom filter that we write",
    "start": "297280",
    "end": "299040"
  },
  {
    "text": "does not have to be recompiled with the",
    "start": "299040",
    "end": "300720"
  },
  {
    "text": "envoy source code",
    "start": "300720",
    "end": "302320"
  },
  {
    "text": "so we can continue to consume the envoy",
    "start": "302320",
    "end": "306080"
  },
  {
    "text": "open source versions and binaries and we",
    "start": "306080",
    "end": "308320"
  },
  {
    "text": "can keep in sync with any new releases",
    "start": "308320",
    "end": "310240"
  },
  {
    "text": "or new security fixes",
    "start": "310240",
    "end": "311759"
  },
  {
    "text": "and once we have fetched the latest",
    "start": "311759",
    "end": "313360"
  },
  {
    "text": "versions we can deploy our vassam",
    "start": "313360",
    "end": "315280"
  },
  {
    "text": "filters on top of it",
    "start": "315280",
    "end": "318479"
  },
  {
    "text": "so now that i've spoken a little bit",
    "start": "318880",
    "end": "320400"
  },
  {
    "text": "about web assembly in general",
    "start": "320400",
    "end": "322080"
  },
  {
    "text": "i would like to talk more about how",
    "start": "322080",
    "end": "323919"
  },
  {
    "text": "envoy in particular implements",
    "start": "323919",
    "end": "325520"
  },
  {
    "text": "webassembly",
    "start": "325520",
    "end": "326800"
  },
  {
    "text": "so envoy embeds today a v8 vassam vm",
    "start": "326800",
    "end": "331840"
  },
  {
    "text": "so if you take a look at this diagram",
    "start": "331840",
    "end": "333520"
  },
  {
    "text": "you can see that when the request",
    "start": "333520",
    "end": "334880"
  },
  {
    "text": "streams come in",
    "start": "334880",
    "end": "335919"
  },
  {
    "text": "they are serviced by one of the envoy",
    "start": "335919",
    "end": "337680"
  },
  {
    "text": "worker threads",
    "start": "337680",
    "end": "339199"
  },
  {
    "text": "each of these worker threads embeds a",
    "start": "339199",
    "end": "341120"
  },
  {
    "text": "thread local vasom vm",
    "start": "341120",
    "end": "343360"
  },
  {
    "text": "so if you write a vasim filter that is",
    "start": "343360",
    "end": "345520"
  },
  {
    "text": "required to perform some per request",
    "start": "345520",
    "end": "347360"
  },
  {
    "text": "based manipulation",
    "start": "347360",
    "end": "348720"
  },
  {
    "text": "that filter will be executed in one of",
    "start": "348720",
    "end": "350560"
  },
  {
    "text": "these thread local vasim vms",
    "start": "350560",
    "end": "353199"
  },
  {
    "text": "in addition you may also have a use case",
    "start": "353199",
    "end": "355520"
  },
  {
    "text": "where you want to perform certain",
    "start": "355520",
    "end": "356960"
  },
  {
    "text": "non-request specific",
    "start": "356960",
    "end": "358720"
  },
  {
    "text": "functionality for example you may want",
    "start": "358720",
    "end": "360800"
  },
  {
    "text": "to aggregate the metrics across multiple",
    "start": "360800",
    "end": "362720"
  },
  {
    "text": "requests",
    "start": "362720",
    "end": "363759"
  },
  {
    "text": "for such use cases you can write a",
    "start": "363759",
    "end": "365520"
  },
  {
    "text": "singleton filter",
    "start": "365520",
    "end": "367039"
  },
  {
    "text": "this filter then gets executed in the",
    "start": "367039",
    "end": "369039"
  },
  {
    "text": "base wasm vm",
    "start": "369039",
    "end": "370400"
  },
  {
    "text": "which is embedded as a part of the main",
    "start": "370400",
    "end": "372319"
  },
  {
    "text": "envoy thread",
    "start": "372319",
    "end": "374720"
  },
  {
    "text": "in general there is a number of api that",
    "start": "374720",
    "end": "376560"
  },
  {
    "text": "are available for the vason module",
    "start": "376560",
    "end": "378960"
  },
  {
    "text": "they can you make use of the stats and",
    "start": "378960",
    "end": "381280"
  },
  {
    "text": "logs api",
    "start": "381280",
    "end": "382160"
  },
  {
    "text": "in case they want to take the metrics",
    "start": "382160",
    "end": "384240"
  },
  {
    "text": "and logs that are generated by the",
    "start": "384240",
    "end": "385680"
  },
  {
    "text": "worker threads and then expose them to",
    "start": "385680",
    "end": "387280"
  },
  {
    "text": "an external sync",
    "start": "387280",
    "end": "389120"
  },
  {
    "text": "vaso modules can make use of http or",
    "start": "389120",
    "end": "391360"
  },
  {
    "text": "grpc api in order to make external http",
    "start": "391360",
    "end": "394479"
  },
  {
    "text": "or grpc calls the timer api can be used",
    "start": "394479",
    "end": "398000"
  },
  {
    "text": "in case there is some functionality that",
    "start": "398000",
    "end": "399680"
  },
  {
    "text": "needs to be",
    "start": "399680",
    "end": "400560"
  },
  {
    "text": "performed at regular intervals there is",
    "start": "400560",
    "end": "403280"
  },
  {
    "text": "also provision for a shared data which",
    "start": "403280",
    "end": "405280"
  },
  {
    "text": "is basically a key value",
    "start": "405280",
    "end": "406639"
  },
  {
    "text": "a pair store and a message queue so for",
    "start": "406639",
    "end": "409759"
  },
  {
    "text": "any kind of operations that require the",
    "start": "409759",
    "end": "411680"
  },
  {
    "text": "worker threads to",
    "start": "411680",
    "end": "412720"
  },
  {
    "text": "store certain data which can then later",
    "start": "412720",
    "end": "414800"
  },
  {
    "text": "on maybe be consumed",
    "start": "414800",
    "end": "416000"
  },
  {
    "text": "consumed by your singleton filter these",
    "start": "416000",
    "end": "418560"
  },
  {
    "text": "two are useful",
    "start": "418560",
    "end": "422000"
  },
  {
    "text": "the api that i described in the",
    "start": "422000",
    "end": "423599"
  },
  {
    "text": "preceding slide is defined by a proxy",
    "start": "423599",
    "end": "426000"
  },
  {
    "text": "agnostic",
    "start": "426000",
    "end": "426880"
  },
  {
    "text": "abi standard which is called proxy vasim",
    "start": "426880",
    "end": "430080"
  },
  {
    "text": "so by proxy agnostic i mean that if once",
    "start": "430080",
    "end": "433199"
  },
  {
    "text": "you write a vasiv module it can be",
    "start": "433199",
    "end": "435199"
  },
  {
    "text": "executed in a number of different",
    "start": "435199",
    "end": "436880"
  },
  {
    "text": "proxies such as",
    "start": "436880",
    "end": "437759"
  },
  {
    "text": "envoy apache traffic server h.a proxy",
    "start": "437759",
    "end": "441199"
  },
  {
    "text": "as long as these proxies implement the",
    "start": "441199",
    "end": "443520"
  },
  {
    "text": "proxy vessel standard",
    "start": "443520",
    "end": "445599"
  },
  {
    "text": "so proxy vasim defines a number of event",
    "start": "445599",
    "end": "448080"
  },
  {
    "text": "driven streaming apis",
    "start": "448080",
    "end": "449759"
  },
  {
    "text": "which govern the interaction between",
    "start": "449759",
    "end": "451680"
  },
  {
    "text": "envoy and the vassar module that is",
    "start": "451680",
    "end": "453280"
  },
  {
    "text": "being executed",
    "start": "453280",
    "end": "455039"
  },
  {
    "text": "these interactions are in the form of",
    "start": "455039",
    "end": "456800"
  },
  {
    "text": "functions and callbacks that are wrapped",
    "start": "456800",
    "end": "458560"
  },
  {
    "text": "by a context object",
    "start": "458560",
    "end": "460560"
  },
  {
    "text": "so as a developer if you want to write a",
    "start": "460560",
    "end": "462319"
  },
  {
    "text": "vasim filter there are two context",
    "start": "462319",
    "end": "464400"
  },
  {
    "text": "objects that you need to keep in mind",
    "start": "464400",
    "end": "467759"
  },
  {
    "text": "the first one is the root context so the",
    "start": "467759",
    "end": "470319"
  },
  {
    "text": "root context is created at bootstrap and",
    "start": "470319",
    "end": "472319"
  },
  {
    "text": "has a lifetime which is equal to the vm",
    "start": "472319",
    "end": "474240"
  },
  {
    "text": "in which it gets created",
    "start": "474240",
    "end": "476080"
  },
  {
    "text": "there are a number of methods that you",
    "start": "476080",
    "end": "477599"
  },
  {
    "text": "can override in the root context like",
    "start": "477599",
    "end": "479280"
  },
  {
    "text": "onstart or onconfigure",
    "start": "479280",
    "end": "481280"
  },
  {
    "text": "and it can be used to perform certain",
    "start": "481280",
    "end": "483039"
  },
  {
    "text": "initial setup operations that may be",
    "start": "483039",
    "end": "484960"
  },
  {
    "text": "required for your vassam filters",
    "start": "484960",
    "end": "488319"
  },
  {
    "text": "additionally as the requests come in",
    "start": "488319",
    "end": "490319"
  },
  {
    "text": "there is a new stream context that gets",
    "start": "490319",
    "end": "492080"
  },
  {
    "text": "created for every request",
    "start": "492080",
    "end": "493599"
  },
  {
    "text": "and similarly a new stream context",
    "start": "493599",
    "end": "495440"
  },
  {
    "text": "object so this stream context object has",
    "start": "495440",
    "end": "498000"
  },
  {
    "text": "a lifetime which is equal to the request",
    "start": "498000",
    "end": "499840"
  },
  {
    "text": "stream",
    "start": "499840",
    "end": "500479"
  },
  {
    "text": "in which it gets created again there are",
    "start": "500479",
    "end": "502960"
  },
  {
    "text": "a number of methods that can be",
    "start": "502960",
    "end": "504160"
  },
  {
    "text": "overridden here",
    "start": "504160",
    "end": "505520"
  },
  {
    "text": "so for example if your wasm filter needs",
    "start": "505520",
    "end": "507599"
  },
  {
    "text": "to make certain request header",
    "start": "507599",
    "end": "508879"
  },
  {
    "text": "manipulation",
    "start": "508879",
    "end": "509840"
  },
  {
    "text": "it would overwrite the on request",
    "start": "509840",
    "end": "511440"
  },
  {
    "text": "headers function",
    "start": "511440",
    "end": "512880"
  },
  {
    "text": "in case it wants to append certain data",
    "start": "512880",
    "end": "514640"
  },
  {
    "text": "to the response body it would overwrite",
    "start": "514640",
    "end": "516560"
  },
  {
    "text": "the on response body function",
    "start": "516560",
    "end": "519839"
  },
  {
    "text": "as new requests come in there will be a",
    "start": "519839",
    "end": "521440"
  },
  {
    "text": "new stream context created for each one",
    "start": "521440",
    "end": "523200"
  },
  {
    "text": "of them and the stream context object",
    "start": "523200",
    "end": "524880"
  },
  {
    "text": "also will be created",
    "start": "524880",
    "end": "526000"
  },
  {
    "text": "independently so this describes a little",
    "start": "526000",
    "end": "529120"
  },
  {
    "text": "bit about",
    "start": "529120",
    "end": "529920"
  },
  {
    "text": "webassembly in general and also some",
    "start": "529920",
    "end": "532160"
  },
  {
    "text": "specifics about how envoy has gone about",
    "start": "532160",
    "end": "534399"
  },
  {
    "text": "implementing bassem",
    "start": "534399",
    "end": "536160"
  },
  {
    "text": "we will now take a closer look at our",
    "start": "536160",
    "end": "538240"
  },
  {
    "text": "specific use case of yahoo headers",
    "start": "538240",
    "end": "542000"
  },
  {
    "text": "so what are yahoo headers so yahoo",
    "start": "542000",
    "end": "544959"
  },
  {
    "text": "headers can be defined as a set of",
    "start": "544959",
    "end": "546800"
  },
  {
    "text": "custom headers that are used to securely",
    "start": "546800",
    "end": "549279"
  },
  {
    "text": "identify a request",
    "start": "549279",
    "end": "550720"
  },
  {
    "text": "its remote source and the path that the",
    "start": "550720",
    "end": "552800"
  },
  {
    "text": "request takes through the network",
    "start": "552800",
    "end": "554959"
  },
  {
    "text": "so there are a couple of headers that we",
    "start": "554959",
    "end": "556640"
  },
  {
    "text": "were considering the first one was rid",
    "start": "556640",
    "end": "559440"
  },
  {
    "text": "or request identifier this is generated",
    "start": "559440",
    "end": "562399"
  },
  {
    "text": "based on the unix timestamp and a",
    "start": "562399",
    "end": "564080"
  },
  {
    "text": "randomly generated number",
    "start": "564080",
    "end": "566240"
  },
  {
    "text": "this is similar to the x request id that",
    "start": "566240",
    "end": "568480"
  },
  {
    "text": "is provided by envoy",
    "start": "568480",
    "end": "570640"
  },
  {
    "text": "the primary purpose for this is to use",
    "start": "570640",
    "end": "572800"
  },
  {
    "text": "is that it aids in debugging if you want",
    "start": "572800",
    "end": "574560"
  },
  {
    "text": "to trace",
    "start": "574560",
    "end": "575120"
  },
  {
    "text": "how the request has flown through your",
    "start": "575120",
    "end": "576560"
  },
  {
    "text": "network an example for rid",
    "start": "576560",
    "end": "579279"
  },
  {
    "text": "is shown here on the slide the next set",
    "start": "579279",
    "end": "582640"
  },
  {
    "text": "of headers that we were concerned with",
    "start": "582640",
    "end": "584160"
  },
  {
    "text": "were",
    "start": "584160",
    "end": "584480"
  },
  {
    "text": "ra rp and rs which stand for remote",
    "start": "584480",
    "end": "587519"
  },
  {
    "text": "address",
    "start": "587519",
    "end": "588160"
  },
  {
    "text": "remote port and remote signature",
    "start": "588160",
    "end": "589920"
  },
  {
    "text": "respectively",
    "start": "589920",
    "end": "591279"
  },
  {
    "text": "so ra and rp are used to are used for",
    "start": "591279",
    "end": "594240"
  },
  {
    "text": "the",
    "start": "594240",
    "end": "594640"
  },
  {
    "text": "address and port of where this request",
    "start": "594640",
    "end": "596640"
  },
  {
    "text": "actually originated from",
    "start": "596640",
    "end": "598959"
  },
  {
    "text": "rs in turn is com is generated by",
    "start": "598959",
    "end": "602160"
  },
  {
    "text": "making an md5 signature of the ra and rp",
    "start": "602160",
    "end": "605120"
  },
  {
    "text": "values",
    "start": "605120",
    "end": "605680"
  },
  {
    "text": "with a secret and then base64 encoding",
    "start": "605680",
    "end": "608160"
  },
  {
    "text": "it",
    "start": "608160",
    "end": "609440"
  },
  {
    "text": "the primary purpose for rs is to make",
    "start": "609440",
    "end": "611680"
  },
  {
    "text": "sure that the array and rp values",
    "start": "611680",
    "end": "613920"
  },
  {
    "text": "do not get tampered with as this request",
    "start": "613920",
    "end": "615839"
  },
  {
    "text": "moves through the network",
    "start": "615839",
    "end": "617839"
  },
  {
    "text": "sample ra rp and rs headers are shown",
    "start": "617839",
    "end": "620240"
  },
  {
    "text": "here on the screen",
    "start": "620240",
    "end": "622320"
  },
  {
    "text": "so in phase one of our filter",
    "start": "622320",
    "end": "624000"
  },
  {
    "text": "development we focused on these set of",
    "start": "624000",
    "end": "626240"
  },
  {
    "text": "headers",
    "start": "626240",
    "end": "627360"
  },
  {
    "text": "in phase two we have a couple of other",
    "start": "627360",
    "end": "629120"
  },
  {
    "text": "headers that we wish to implement",
    "start": "629120",
    "end": "631279"
  },
  {
    "text": "the first one is the path header so the",
    "start": "631279",
    "end": "634160"
  },
  {
    "text": "path header is used to track a request",
    "start": "634160",
    "end": "636000"
  },
  {
    "text": "as it goes through multiple hops in the",
    "start": "636000",
    "end": "637519"
  },
  {
    "text": "network",
    "start": "637519",
    "end": "638160"
  },
  {
    "text": "so it represents an ordered list of hops",
    "start": "638160",
    "end": "640560"
  },
  {
    "text": "so this is similar to the x forwarded",
    "start": "640560",
    "end": "642480"
  },
  {
    "text": "for header but it includes some",
    "start": "642480",
    "end": "644000"
  },
  {
    "text": "additional attributes",
    "start": "644000",
    "end": "645839"
  },
  {
    "text": "some of the per hop attributes that are",
    "start": "645839",
    "end": "647519"
  },
  {
    "text": "added are the address",
    "start": "647519",
    "end": "649040"
  },
  {
    "text": "and port of where the request was sent",
    "start": "649040",
    "end": "651920"
  },
  {
    "text": "from",
    "start": "651920",
    "end": "652560"
  },
  {
    "text": "the address and port of where the",
    "start": "652560",
    "end": "654000"
  },
  {
    "text": "request landed and whether that hop was",
    "start": "654000",
    "end": "656640"
  },
  {
    "text": "ssl enabled or not",
    "start": "656640",
    "end": "659040"
  },
  {
    "text": "in addition we also add a signature",
    "start": "659040",
    "end": "660959"
  },
  {
    "text": "which is similar to the rs signature",
    "start": "660959",
    "end": "662480"
  },
  {
    "text": "that we defined previously",
    "start": "662480",
    "end": "664240"
  },
  {
    "text": "again this is used to ensure the",
    "start": "664240",
    "end": "666160"
  },
  {
    "text": "integrity of this header",
    "start": "666160",
    "end": "668560"
  },
  {
    "text": "in the example shown here you can see",
    "start": "668560",
    "end": "670399"
  },
  {
    "text": "that there were two hops that took place",
    "start": "670399",
    "end": "673200"
  },
  {
    "text": "the information or the attributes for",
    "start": "673200",
    "end": "675839"
  },
  {
    "text": "every hop are",
    "start": "675839",
    "end": "677040"
  },
  {
    "text": "separated by semicolons and each hop",
    "start": "677040",
    "end": "679519"
  },
  {
    "text": "itself is",
    "start": "679519",
    "end": "680480"
  },
  {
    "text": "separated by a comma in the example",
    "start": "680480",
    "end": "683120"
  },
  {
    "text": "shown here",
    "start": "683120",
    "end": "683920"
  },
  {
    "text": "the first hop has ssl enabled as is",
    "start": "683920",
    "end": "686480"
  },
  {
    "text": "indicated by the s",
    "start": "686480",
    "end": "687519"
  },
  {
    "text": "equal to one flag while the second hop",
    "start": "687519",
    "end": "689839"
  },
  {
    "text": "does not have it",
    "start": "689839",
    "end": "692160"
  },
  {
    "text": "the next header that we are concerned",
    "start": "692160",
    "end": "693760"
  },
  {
    "text": "with is the wire header",
    "start": "693760",
    "end": "695519"
  },
  {
    "text": "so there is a default uh implementation",
    "start": "695519",
    "end": "697920"
  },
  {
    "text": "that envoy provides",
    "start": "697920",
    "end": "699120"
  },
  {
    "text": "however it relies on a static value in",
    "start": "699120",
    "end": "702000"
  },
  {
    "text": "our use case we want to have a dynamic",
    "start": "702000",
    "end": "703920"
  },
  {
    "text": "value for the via header",
    "start": "703920",
    "end": "705519"
  },
  {
    "text": "where we can specify attributes such as",
    "start": "705519",
    "end": "707839"
  },
  {
    "text": "the protocol the protocol version",
    "start": "707839",
    "end": "709839"
  },
  {
    "text": "and the specific proxy through which",
    "start": "709839",
    "end": "711600"
  },
  {
    "text": "this request was passed",
    "start": "711600",
    "end": "713600"
  },
  {
    "text": "so if you take a look at the example",
    "start": "713600",
    "end": "715040"
  },
  {
    "text": "over here you can see that there is the",
    "start": "715040",
    "end": "716560"
  },
  {
    "text": "protocol and the protocol version",
    "start": "716560",
    "end": "718320"
  },
  {
    "text": "that is the actual pod through ingress",
    "start": "718320",
    "end": "720480"
  },
  {
    "text": "pod through which this particular",
    "start": "720480",
    "end": "721920"
  },
  {
    "text": "request was sent",
    "start": "721920",
    "end": "723279"
  },
  {
    "text": "and then that's followed by a uuid so",
    "start": "723279",
    "end": "725279"
  },
  {
    "text": "this is a unique identifier of",
    "start": "725279",
    "end": "727120"
  },
  {
    "text": "the specific proxy that it passed",
    "start": "727120",
    "end": "728880"
  },
  {
    "text": "through and this is followed by the",
    "start": "728880",
    "end": "730720"
  },
  {
    "text": "proxy and the proxy version",
    "start": "730720",
    "end": "732560"
  },
  {
    "text": "since we use sto it says envoy sto and",
    "start": "732560",
    "end": "734959"
  },
  {
    "text": "the istio version that we use",
    "start": "734959",
    "end": "737680"
  },
  {
    "text": "the uuid can be used to detect multi-hop",
    "start": "737680",
    "end": "740320"
  },
  {
    "text": "cycles",
    "start": "740320",
    "end": "741519"
  },
  {
    "text": "apart from this wire can also be used",
    "start": "741519",
    "end": "743279"
  },
  {
    "text": "for general tracing",
    "start": "743279",
    "end": "744639"
  },
  {
    "text": "of the request and also to identify the",
    "start": "744639",
    "end": "746880"
  },
  {
    "text": "request and response protocols",
    "start": "746880",
    "end": "749360"
  },
  {
    "text": "so this summarizes what yahoo headers",
    "start": "749360",
    "end": "752240"
  },
  {
    "text": "are",
    "start": "752240",
    "end": "752880"
  },
  {
    "text": "and now i would like to pass it to my",
    "start": "752880",
    "end": "754560"
  },
  {
    "text": "co-presenter michael who will talk more",
    "start": "754560",
    "end": "756720"
  },
  {
    "text": "about our design goals challenges and",
    "start": "756720",
    "end": "758800"
  },
  {
    "text": "the architecture that we came up with",
    "start": "758800",
    "end": "760880"
  },
  {
    "text": "thank you okay thank you mr mai",
    "start": "760880",
    "end": "764720"
  },
  {
    "text": "so now let's talk a little bit about",
    "start": "764720",
    "end": "766880"
  },
  {
    "text": "some of the design",
    "start": "766880",
    "end": "767839"
  },
  {
    "text": "rules and challenges that we face",
    "start": "767839",
    "end": "769920"
  },
  {
    "text": "throughout our implementation",
    "start": "769920",
    "end": "772000"
  },
  {
    "text": "so the primary goal that we had is we",
    "start": "772000",
    "end": "774720"
  },
  {
    "text": "wanted to implement support for yahoo",
    "start": "774720",
    "end": "776959"
  },
  {
    "text": "headers",
    "start": "776959",
    "end": "777680"
  },
  {
    "text": "while reusing the existing core yahoo",
    "start": "777680",
    "end": "780160"
  },
  {
    "text": "c-plus plus",
    "start": "780160",
    "end": "781120"
  },
  {
    "text": "libraries so we actually have a yahoo",
    "start": "781120",
    "end": "784320"
  },
  {
    "text": "connection plugin",
    "start": "784320",
    "end": "786000"
  },
  {
    "text": "for apache traffic server which does",
    "start": "786000",
    "end": "788959"
  },
  {
    "text": "have",
    "start": "788959",
    "end": "789360"
  },
  {
    "text": "the rs essentially header validation",
    "start": "789360",
    "end": "793120"
  },
  {
    "text": "and generation flows in place so the",
    "start": "793120",
    "end": "795920"
  },
  {
    "text": "main",
    "start": "795920",
    "end": "796240"
  },
  {
    "text": "idea here is we wanted to reuse that",
    "start": "796240",
    "end": "799120"
  },
  {
    "text": "functionality",
    "start": "799120",
    "end": "800240"
  },
  {
    "text": "so we did not need to re-implement it",
    "start": "800240",
    "end": "803040"
  },
  {
    "text": "and also to stay up to date",
    "start": "803040",
    "end": "804880"
  },
  {
    "text": "in case there are any changes there and",
    "start": "804880",
    "end": "807839"
  },
  {
    "text": "also if there are any security fixes",
    "start": "807839",
    "end": "810079"
  },
  {
    "text": "as well okay so now let's talk a little",
    "start": "810079",
    "end": "813600"
  },
  {
    "text": "bit about",
    "start": "813600",
    "end": "814079"
  },
  {
    "text": "some of the challenges that we ran into",
    "start": "814079",
    "end": "816880"
  },
  {
    "text": "so",
    "start": "816880",
    "end": "817200"
  },
  {
    "text": "the existing rid generation depends on",
    "start": "817200",
    "end": "820480"
  },
  {
    "text": "read access to dev random to generate a",
    "start": "820480",
    "end": "823120"
  },
  {
    "text": "unique seed",
    "start": "823120",
    "end": "824320"
  },
  {
    "text": "to actually be able to generate uh",
    "start": "824320",
    "end": "826959"
  },
  {
    "text": "unique",
    "start": "826959",
    "end": "827519"
  },
  {
    "text": "rid headers for user requests so the",
    "start": "827519",
    "end": "830639"
  },
  {
    "text": "problem inside of our web assembly",
    "start": "830639",
    "end": "832639"
  },
  {
    "text": "filter",
    "start": "832639",
    "end": "833440"
  },
  {
    "text": "is that we do not have access to file",
    "start": "833440",
    "end": "835680"
  },
  {
    "text": "reads here",
    "start": "835680",
    "end": "837920"
  },
  {
    "text": "okay another challenge that we ran into",
    "start": "837920",
    "end": "841279"
  },
  {
    "text": "is the rs secret is stored in the yahoo",
    "start": "841279",
    "end": "844240"
  },
  {
    "text": "key management service",
    "start": "844240",
    "end": "846000"
  },
  {
    "text": "so here we ran into a couple of problems",
    "start": "846000",
    "end": "848720"
  },
  {
    "text": "as well",
    "start": "848720",
    "end": "849920"
  },
  {
    "text": "so the first one being is the existing",
    "start": "849920",
    "end": "852560"
  },
  {
    "text": "client for the key management",
    "start": "852560",
    "end": "854399"
  },
  {
    "text": "service relies on the curl library which",
    "start": "854399",
    "end": "857519"
  },
  {
    "text": "requires",
    "start": "857519",
    "end": "858320"
  },
  {
    "text": "access to the underlying network socket",
    "start": "858320",
    "end": "860959"
  },
  {
    "text": "which we do not have inside of our web",
    "start": "860959",
    "end": "863279"
  },
  {
    "text": "assembly filter",
    "start": "863279",
    "end": "864959"
  },
  {
    "text": "also we need to make multiple calls to",
    "start": "864959",
    "end": "868160"
  },
  {
    "text": "this key management service to get",
    "start": "868160",
    "end": "870000"
  },
  {
    "text": "the rs secret so every time we're",
    "start": "870000",
    "end": "872560"
  },
  {
    "text": "waiting for a response",
    "start": "872560",
    "end": "874160"
  },
  {
    "text": "we would essentially be blocking uh to",
    "start": "874160",
    "end": "877040"
  },
  {
    "text": "wait for that response",
    "start": "877040",
    "end": "878720"
  },
  {
    "text": "which is essentially a busy weight this",
    "start": "878720",
    "end": "881680"
  },
  {
    "text": "blocks the envoy threads",
    "start": "881680",
    "end": "883440"
  },
  {
    "text": "actually from executing and also from",
    "start": "883440",
    "end": "885760"
  },
  {
    "text": "coming up",
    "start": "885760",
    "end": "887760"
  },
  {
    "text": "another issue is that we cannot take the",
    "start": "887760",
    "end": "890880"
  },
  {
    "text": "rs secret",
    "start": "890880",
    "end": "892079"
  },
  {
    "text": "and write a file into the envoy",
    "start": "892079",
    "end": "894399"
  },
  {
    "text": "container with it",
    "start": "894399",
    "end": "895839"
  },
  {
    "text": "because once again as part of our",
    "start": "895839",
    "end": "898240"
  },
  {
    "text": "webassembly filter",
    "start": "898240",
    "end": "899839"
  },
  {
    "text": "we do not have access to file reads",
    "start": "899839",
    "end": "903519"
  },
  {
    "text": "okay so let's take a look at the",
    "start": "903519",
    "end": "905560"
  },
  {
    "text": "architecture that we came up with to get",
    "start": "905560",
    "end": "908240"
  },
  {
    "text": "around some of these challenges",
    "start": "908240",
    "end": "910480"
  },
  {
    "text": "so here we have an ingress node which is",
    "start": "910480",
    "end": "913519"
  },
  {
    "text": "running a daemon set pod",
    "start": "913519",
    "end": "915600"
  },
  {
    "text": "with the ingress util server which has a",
    "start": "915600",
    "end": "918880"
  },
  {
    "text": "localhost server",
    "start": "918880",
    "end": "920079"
  },
  {
    "text": "inside of it when this is coming up it's",
    "start": "920079",
    "end": "923199"
  },
  {
    "text": "going to make a request to the key",
    "start": "923199",
    "end": "925120"
  },
  {
    "text": "management server",
    "start": "925120",
    "end": "926880"
  },
  {
    "text": "get the rs secret and put it inside of",
    "start": "926880",
    "end": "929680"
  },
  {
    "text": "its own memory",
    "start": "929680",
    "end": "931440"
  },
  {
    "text": "so because we have this localhost server",
    "start": "931440",
    "end": "934480"
  },
  {
    "text": "basically the vm filters themselves do",
    "start": "934480",
    "end": "937360"
  },
  {
    "text": "not need to make your request to the key",
    "start": "937360",
    "end": "939600"
  },
  {
    "text": "management server",
    "start": "939600",
    "end": "940800"
  },
  {
    "text": "as well so here we have the ingress",
    "start": "940800",
    "end": "944480"
  },
  {
    "text": "pod with the envoy container when it is",
    "start": "944480",
    "end": "947279"
  },
  {
    "text": "coming up",
    "start": "947279",
    "end": "948079"
  },
  {
    "text": "it has a singleton vm which is running",
    "start": "948079",
    "end": "950320"
  },
  {
    "text": "as part of the main envoy thread",
    "start": "950320",
    "end": "952720"
  },
  {
    "text": "as previously described and this will go",
    "start": "952720",
    "end": "955600"
  },
  {
    "text": "ahead and call this localhost service",
    "start": "955600",
    "end": "958399"
  },
  {
    "text": "get the rs secret and then write it to",
    "start": "958399",
    "end": "961120"
  },
  {
    "text": "the shared data",
    "start": "961120",
    "end": "962480"
  },
  {
    "text": "which will then be available to be read",
    "start": "962480",
    "end": "964560"
  },
  {
    "text": "by other vms inside of the envoy",
    "start": "964560",
    "end": "966959"
  },
  {
    "text": "container",
    "start": "966959",
    "end": "969040"
  },
  {
    "text": "okay so now when we have the envoy",
    "start": "969040",
    "end": "971680"
  },
  {
    "text": "worker threads which are coming up",
    "start": "971680",
    "end": "974079"
  },
  {
    "text": "initially what will happen is they will",
    "start": "974079",
    "end": "976320"
  },
  {
    "text": "use their start time as a seed for the",
    "start": "976320",
    "end": "978720"
  },
  {
    "text": "rid",
    "start": "978720",
    "end": "979759"
  },
  {
    "text": "so that we can have unique rids for the",
    "start": "979759",
    "end": "982639"
  },
  {
    "text": "user request",
    "start": "982639",
    "end": "984240"
  },
  {
    "text": "and then they will go ahead and read the",
    "start": "984240",
    "end": "986639"
  },
  {
    "text": "rs secret",
    "start": "986639",
    "end": "987680"
  },
  {
    "text": "from the shared data and load it into",
    "start": "987680",
    "end": "990320"
  },
  {
    "text": "its own memory",
    "start": "990320",
    "end": "992639"
  },
  {
    "text": "okay so now let's go into the secret",
    "start": "992639",
    "end": "995279"
  },
  {
    "text": "fetch flow",
    "start": "995279",
    "end": "996000"
  },
  {
    "text": "itself so when the envoy main thread is",
    "start": "996000",
    "end": "999040"
  },
  {
    "text": "being initialized",
    "start": "999040",
    "end": "1000320"
  },
  {
    "text": "it will call into our webassembly module",
    "start": "1000320",
    "end": "1003680"
  },
  {
    "text": "which has a root context defined here we",
    "start": "1003680",
    "end": "1006480"
  },
  {
    "text": "have two functions in place",
    "start": "1006480",
    "end": "1008399"
  },
  {
    "text": "so the first one is the onstart which",
    "start": "1008399",
    "end": "1010880"
  },
  {
    "text": "will go ahead and make an",
    "start": "1010880",
    "end": "1012480"
  },
  {
    "text": "http call to the ingress util server for",
    "start": "1012480",
    "end": "1015519"
  },
  {
    "text": "the secret",
    "start": "1015519",
    "end": "1017680"
  },
  {
    "text": "and then we have the on http call",
    "start": "1017680",
    "end": "1020160"
  },
  {
    "text": "response",
    "start": "1020160",
    "end": "1021040"
  },
  {
    "text": "which will go ahead and get invoked when",
    "start": "1021040",
    "end": "1023360"
  },
  {
    "text": "the ingress util server response",
    "start": "1023360",
    "end": "1025678"
  },
  {
    "text": "actually comes back and here is where we",
    "start": "1025679",
    "end": "1028400"
  },
  {
    "text": "actually write the secret to the shared",
    "start": "1028400",
    "end": "1030558"
  },
  {
    "text": "data",
    "start": "1030559",
    "end": "1032558"
  },
  {
    "text": "okay now let's talk about the user",
    "start": "1032559",
    "end": "1035199"
  },
  {
    "text": "request flow itself",
    "start": "1035199",
    "end": "1036798"
  },
  {
    "text": "so here we have the envoy worker thread",
    "start": "1036799",
    "end": "1039520"
  },
  {
    "text": "on the right we have our web assembly",
    "start": "1039520",
    "end": "1041520"
  },
  {
    "text": "filter",
    "start": "1041520",
    "end": "1042160"
  },
  {
    "text": "which has a root context defined with an",
    "start": "1042160",
    "end": "1044720"
  },
  {
    "text": "onstart function",
    "start": "1044720",
    "end": "1046480"
  },
  {
    "text": "so here inside of the onstart we read",
    "start": "1046480",
    "end": "1048960"
  },
  {
    "text": "the secret from the shared data",
    "start": "1048960",
    "end": "1051679"
  },
  {
    "text": "populate an in-memory variable with the",
    "start": "1051679",
    "end": "1055039"
  },
  {
    "text": "rs secret that we can use",
    "start": "1055039",
    "end": "1057039"
  },
  {
    "text": "then to generate and validate the rs",
    "start": "1057039",
    "end": "1059360"
  },
  {
    "text": "header which is coming in",
    "start": "1059360",
    "end": "1062240"
  },
  {
    "text": "now when the user requests are coming",
    "start": "1062240",
    "end": "1064240"
  },
  {
    "text": "the stream filter chain will call",
    "start": "1064240",
    "end": "1066160"
  },
  {
    "text": "into our filter where a context object",
    "start": "1066160",
    "end": "1069120"
  },
  {
    "text": "will be created",
    "start": "1069120",
    "end": "1070480"
  },
  {
    "text": "so here inside of the constructor",
    "start": "1070480",
    "end": "1073679"
  },
  {
    "text": "if the in-memory variable with the rs",
    "start": "1073679",
    "end": "1075840"
  },
  {
    "text": "secret is not set",
    "start": "1075840",
    "end": "1077360"
  },
  {
    "text": "we will actually go ahead and also read",
    "start": "1077360",
    "end": "1079919"
  },
  {
    "text": "the secret from the shared data",
    "start": "1079919",
    "end": "1082000"
  },
  {
    "text": "this is used as a backup just in case",
    "start": "1082000",
    "end": "1084480"
  },
  {
    "text": "the ingress utils server took a little",
    "start": "1084480",
    "end": "1086640"
  },
  {
    "text": "bit longer to respond",
    "start": "1086640",
    "end": "1088880"
  },
  {
    "text": "and for the main functionality we have",
    "start": "1088880",
    "end": "1091360"
  },
  {
    "text": "the on request headers implemented so",
    "start": "1091360",
    "end": "1093840"
  },
  {
    "text": "here is where we generate the rid",
    "start": "1093840",
    "end": "1096480"
  },
  {
    "text": "and also validate and generate the rate",
    "start": "1096480",
    "end": "1099280"
  },
  {
    "text": "rp",
    "start": "1099280",
    "end": "1099760"
  },
  {
    "text": "and rs and this will occur for every",
    "start": "1099760",
    "end": "1102720"
  },
  {
    "text": "user request which is coming in",
    "start": "1102720",
    "end": "1106160"
  },
  {
    "text": "okay so now let me show you the envoy",
    "start": "1106160",
    "end": "1109039"
  },
  {
    "text": "configuration",
    "start": "1109039",
    "end": "1110320"
  },
  {
    "text": "so we are running envoy 1.13.x with",
    "start": "1110320",
    "end": "1113520"
  },
  {
    "text": "istio 1.5.x",
    "start": "1113520",
    "end": "1115919"
  },
  {
    "text": "inside of the bootstrap configuration we",
    "start": "1115919",
    "end": "1118400"
  },
  {
    "text": "have the ingress util server cluster",
    "start": "1118400",
    "end": "1120640"
  },
  {
    "text": "defined",
    "start": "1120640",
    "end": "1121200"
  },
  {
    "text": "and also the singleton filter in the",
    "start": "1121200",
    "end": "1124480"
  },
  {
    "text": "filter chain configuration we have the",
    "start": "1124480",
    "end": "1126400"
  },
  {
    "text": "yahoo headers filter defined",
    "start": "1126400",
    "end": "1128799"
  },
  {
    "text": "so here this is the bootstrap",
    "start": "1128799",
    "end": "1130720"
  },
  {
    "text": "configuration",
    "start": "1130720",
    "end": "1132080"
  },
  {
    "text": "as you can see here we have a static",
    "start": "1132080",
    "end": "1134640"
  },
  {
    "text": "cluster resource defined",
    "start": "1134640",
    "end": "1136080"
  },
  {
    "text": "for the ingress util server pointing to",
    "start": "1136080",
    "end": "1138559"
  },
  {
    "text": "localhost",
    "start": "1138559",
    "end": "1139760"
  },
  {
    "text": "this will be used by the actual",
    "start": "1139760",
    "end": "1141679"
  },
  {
    "text": "singleton vm",
    "start": "1141679",
    "end": "1142799"
  },
  {
    "text": "to make a request into to fetch the rs",
    "start": "1142799",
    "end": "1145919"
  },
  {
    "text": "secret",
    "start": "1145919",
    "end": "1147600"
  },
  {
    "text": "down here we have our singleton filter",
    "start": "1147600",
    "end": "1150240"
  },
  {
    "text": "definition with the singleton boolean",
    "start": "1150240",
    "end": "1152559"
  },
  {
    "text": "set to true",
    "start": "1152559",
    "end": "1154480"
  },
  {
    "text": "now inside of the filter chain we",
    "start": "1154480",
    "end": "1157360"
  },
  {
    "text": "basically have our yahoo header",
    "start": "1157360",
    "end": "1159200"
  },
  {
    "text": "configuration",
    "start": "1159200",
    "end": "1162080"
  },
  {
    "text": "now let's go into demo to see how this",
    "start": "1162480",
    "end": "1165039"
  },
  {
    "text": "functionality looks like",
    "start": "1165039",
    "end": "1166799"
  },
  {
    "text": "so when a user request is actually",
    "start": "1166799",
    "end": "1169039"
  },
  {
    "text": "coming in",
    "start": "1169039",
    "end": "1170000"
  },
  {
    "text": "we will check if these three headers are",
    "start": "1170000",
    "end": "1172160"
  },
  {
    "text": "actually defined",
    "start": "1172160",
    "end": "1173520"
  },
  {
    "text": "if they are we will validate the rs",
    "start": "1173520",
    "end": "1176000"
  },
  {
    "text": "signature",
    "start": "1176000",
    "end": "1176880"
  },
  {
    "text": "if the signature is valid we will go",
    "start": "1176880",
    "end": "1178960"
  },
  {
    "text": "ahead and continue the http request",
    "start": "1178960",
    "end": "1182240"
  },
  {
    "text": "if it is invalid we will generate an",
    "start": "1182240",
    "end": "1185200"
  },
  {
    "text": "rarp",
    "start": "1185200",
    "end": "1186320"
  },
  {
    "text": "and rs from the incoming client",
    "start": "1186320",
    "end": "1189039"
  },
  {
    "text": "connection",
    "start": "1189039",
    "end": "1190080"
  },
  {
    "text": "we will get its address and port and",
    "start": "1190080",
    "end": "1192799"
  },
  {
    "text": "generate an",
    "start": "1192799",
    "end": "1193600"
  },
  {
    "text": "rs and then continue the http request",
    "start": "1193600",
    "end": "1198320"
  },
  {
    "text": "now if the headers are not set what we",
    "start": "1198320",
    "end": "1200960"
  },
  {
    "text": "will do is we will generate new ones",
    "start": "1200960",
    "end": "1203360"
  },
  {
    "text": "and then continue the http request",
    "start": "1203360",
    "end": "1207679"
  },
  {
    "text": "okay so now for the rid flow it's a",
    "start": "1207679",
    "end": "1210720"
  },
  {
    "text": "little bit simpler so here if the rid",
    "start": "1210720",
    "end": "1213440"
  },
  {
    "text": "is set we will just continue the http",
    "start": "1213440",
    "end": "1216400"
  },
  {
    "text": "request",
    "start": "1216400",
    "end": "1217440"
  },
  {
    "text": "if it is not set then we will generate a",
    "start": "1217440",
    "end": "1220159"
  },
  {
    "text": "new one",
    "start": "1220159",
    "end": "1221039"
  },
  {
    "text": "so now let me show you a demo of how",
    "start": "1221039",
    "end": "1223360"
  },
  {
    "text": "this functionality looks like",
    "start": "1223360",
    "end": "1225360"
  },
  {
    "text": "so i have an echo server which is behind",
    "start": "1225360",
    "end": "1228240"
  },
  {
    "text": "an istio ingress",
    "start": "1228240",
    "end": "1229520"
  },
  {
    "text": "pod so here i am not passing in any",
    "start": "1229520",
    "end": "1232320"
  },
  {
    "text": "headers",
    "start": "1232320",
    "end": "1233039"
  },
  {
    "text": "so what you will see is that basically a",
    "start": "1233039",
    "end": "1235679"
  },
  {
    "text": "new set of headers",
    "start": "1235679",
    "end": "1237039"
  },
  {
    "text": "will be defined here created so the rid",
    "start": "1237039",
    "end": "1240640"
  },
  {
    "text": "rs rp and r8 are brand new which were",
    "start": "1240640",
    "end": "1244159"
  },
  {
    "text": "generated from my incoming client",
    "start": "1244159",
    "end": "1246840"
  },
  {
    "text": "information",
    "start": "1246840",
    "end": "1248000"
  },
  {
    "text": "now if i go ahead and i pass in a set of",
    "start": "1248000",
    "end": "1251120"
  },
  {
    "text": "headers inside of my curl",
    "start": "1251120",
    "end": "1253200"
  },
  {
    "text": "since these are valid they will be",
    "start": "1253200",
    "end": "1255360"
  },
  {
    "text": "persisted throughout the",
    "start": "1255360",
    "end": "1257120"
  },
  {
    "text": "connection life cycle so here as you can",
    "start": "1257120",
    "end": "1260080"
  },
  {
    "text": "see",
    "start": "1260080",
    "end": "1260799"
  },
  {
    "text": "these headers persisted because the",
    "start": "1260799",
    "end": "1262799"
  },
  {
    "text": "validation was successful",
    "start": "1262799",
    "end": "1265679"
  },
  {
    "text": "now if i slightly modify the signature",
    "start": "1265679",
    "end": "1268559"
  },
  {
    "text": "making it invalid",
    "start": "1268559",
    "end": "1270240"
  },
  {
    "text": "what you will see is the validation will",
    "start": "1270240",
    "end": "1272559"
  },
  {
    "text": "fail",
    "start": "1272559",
    "end": "1273280"
  },
  {
    "text": "and then we will generate new ones from",
    "start": "1273280",
    "end": "1275440"
  },
  {
    "text": "the incoming client connection",
    "start": "1275440",
    "end": "1277840"
  },
  {
    "text": "so as you can see here basically these",
    "start": "1277840",
    "end": "1280960"
  },
  {
    "text": "three",
    "start": "1280960",
    "end": "1281440"
  },
  {
    "text": "are new the rsrp and ra from my incoming",
    "start": "1281440",
    "end": "1285200"
  },
  {
    "text": "client connection",
    "start": "1285200",
    "end": "1287919"
  },
  {
    "text": "okay so let's talk about some other",
    "start": "1287919",
    "end": "1290320"
  },
  {
    "text": "functionality that we have",
    "start": "1290320",
    "end": "1292080"
  },
  {
    "text": "so the proxy was some stats api allows",
    "start": "1292080",
    "end": "1295200"
  },
  {
    "text": "you to have custom metrics",
    "start": "1295200",
    "end": "1297280"
  },
  {
    "text": "so here we define essentially metrics",
    "start": "1297280",
    "end": "1300159"
  },
  {
    "text": "for our",
    "start": "1300159",
    "end": "1300720"
  },
  {
    "text": "filter to see how it's behaving and also",
    "start": "1300720",
    "end": "1304240"
  },
  {
    "text": "to increment",
    "start": "1304240",
    "end": "1305039"
  },
  {
    "text": "in case there are any failure scenarios",
    "start": "1305039",
    "end": "1306960"
  },
  {
    "text": "so that we can alert",
    "start": "1306960",
    "end": "1308240"
  },
  {
    "text": "upon them as well so as you can see here",
    "start": "1308240",
    "end": "1311440"
  },
  {
    "text": "if you hit the envoy stats api",
    "start": "1311440",
    "end": "1314880"
  },
  {
    "text": "you can access the metrics which you are",
    "start": "1314880",
    "end": "1317120"
  },
  {
    "text": "setting",
    "start": "1317120",
    "end": "1319760"
  },
  {
    "text": "okay now let's talk a little bit about",
    "start": "1319760",
    "end": "1322240"
  },
  {
    "text": "some of the performance metrics",
    "start": "1322240",
    "end": "1324320"
  },
  {
    "text": "so here we wanted to run a load test to",
    "start": "1324320",
    "end": "1326480"
  },
  {
    "text": "see how our filter behaved under load",
    "start": "1326480",
    "end": "1329360"
  },
  {
    "text": "so we have one istio ingress pod running",
    "start": "1329360",
    "end": "1332400"
  },
  {
    "text": "with 24",
    "start": "1332400",
    "end": "1333360"
  },
  {
    "text": "envoy worker threads meaning 24 cpu with",
    "start": "1333360",
    "end": "1336480"
  },
  {
    "text": "our filter",
    "start": "1336480",
    "end": "1337600"
  },
  {
    "text": "we run 4k rps for 10 minutes and we have",
    "start": "1337600",
    "end": "1341039"
  },
  {
    "text": "vegetal load test",
    "start": "1341039",
    "end": "1342480"
  },
  {
    "text": "pods generating the client load with an",
    "start": "1342480",
    "end": "1345200"
  },
  {
    "text": "echo server",
    "start": "1345200",
    "end": "1346080"
  },
  {
    "text": "upstream so as you can see here we have",
    "start": "1346080",
    "end": "1349440"
  },
  {
    "text": "multiple scenarios which we are testing",
    "start": "1349440",
    "end": "1351760"
  },
  {
    "text": "which is similar to the demo",
    "start": "1351760",
    "end": "1353840"
  },
  {
    "text": "essentially the generation flow if there",
    "start": "1353840",
    "end": "1356320"
  },
  {
    "text": "are no headers coming in",
    "start": "1356320",
    "end": "1358080"
  },
  {
    "text": "the validation flow if headers are",
    "start": "1358080",
    "end": "1361039"
  },
  {
    "text": "passed in",
    "start": "1361039",
    "end": "1361840"
  },
  {
    "text": "and the validation and generation flow",
    "start": "1361840",
    "end": "1364640"
  },
  {
    "text": "where the incoming headers were invalid",
    "start": "1364640",
    "end": "1367120"
  },
  {
    "text": "and then regenerating new ones",
    "start": "1367120",
    "end": "1369440"
  },
  {
    "text": "so here i pointing pointed out the worst",
    "start": "1369440",
    "end": "1371840"
  },
  {
    "text": "case scenario",
    "start": "1371840",
    "end": "1373039"
  },
  {
    "text": "where essentially when the incoming",
    "start": "1373039",
    "end": "1375840"
  },
  {
    "text": "headers are invalid and we generate",
    "start": "1375840",
    "end": "1378000"
  },
  {
    "text": "new ones so the p99 here increased by",
    "start": "1378000",
    "end": "1381360"
  },
  {
    "text": "half a millisecond",
    "start": "1381360",
    "end": "1382880"
  },
  {
    "text": "and the cpu increased by three percent",
    "start": "1382880",
    "end": "1386720"
  },
  {
    "text": "and for the memory and rss it increased",
    "start": "1386720",
    "end": "1389520"
  },
  {
    "text": "by 0.66",
    "start": "1389520",
    "end": "1391280"
  },
  {
    "text": "here so this is a little bit to be",
    "start": "1391280",
    "end": "1393520"
  },
  {
    "text": "expected",
    "start": "1393520",
    "end": "1394640"
  },
  {
    "text": "because you are copying the requests",
    "start": "1394640",
    "end": "1396799"
  },
  {
    "text": "into and out of the vm",
    "start": "1396799",
    "end": "1399840"
  },
  {
    "text": "okay so now let's talk a little bit",
    "start": "1399840",
    "end": "1401840"
  },
  {
    "text": "about some of our key learnings",
    "start": "1401840",
    "end": "1403840"
  },
  {
    "text": "so the first one is we have that the web",
    "start": "1403840",
    "end": "1406799"
  },
  {
    "text": "assembly eases the developer experience",
    "start": "1406799",
    "end": "1409679"
  },
  {
    "text": "it allows you to implement a filter in",
    "start": "1409679",
    "end": "1412080"
  },
  {
    "text": "your programming language of choice that",
    "start": "1412080",
    "end": "1414080"
  },
  {
    "text": "you're comfortable with",
    "start": "1414080",
    "end": "1415360"
  },
  {
    "text": "and then you can compile down into the",
    "start": "1415360",
    "end": "1417520"
  },
  {
    "text": "web assembly filter",
    "start": "1417520",
    "end": "1419840"
  },
  {
    "text": "also the envoy deployment itself",
    "start": "1419840",
    "end": "1423200"
  },
  {
    "text": "is separate from the webassembly filter",
    "start": "1423200",
    "end": "1425919"
  },
  {
    "text": "so this means that the teams can work",
    "start": "1425919",
    "end": "1428000"
  },
  {
    "text": "independently to implement their logic",
    "start": "1428000",
    "end": "1431039"
  },
  {
    "text": "okay so now let's talk a little bit",
    "start": "1431039",
    "end": "1433039"
  },
  {
    "text": "about the wasan vm",
    "start": "1433039",
    "end": "1434880"
  },
  {
    "text": "sandbox so first of all it ensures",
    "start": "1434880",
    "end": "1437960"
  },
  {
    "text": "reliability",
    "start": "1437960",
    "end": "1439279"
  },
  {
    "text": "so if there are any issues with your",
    "start": "1439279",
    "end": "1441600"
  },
  {
    "text": "filter",
    "start": "1441600",
    "end": "1442400"
  },
  {
    "text": "and it's crashing it will not bring down",
    "start": "1442400",
    "end": "1444720"
  },
  {
    "text": "the envoy process",
    "start": "1444720",
    "end": "1446000"
  },
  {
    "text": "itself also there's the security aspect",
    "start": "1446000",
    "end": "1449279"
  },
  {
    "text": "here as well",
    "start": "1449279",
    "end": "1450320"
  },
  {
    "text": "so essentially the vm filter cannot",
    "start": "1450320",
    "end": "1453360"
  },
  {
    "text": "access",
    "start": "1453360",
    "end": "1453919"
  },
  {
    "text": "anything on the envoy host as uh",
    "start": "1453919",
    "end": "1458159"
  },
  {
    "text": "it does not have any access to it only",
    "start": "1458159",
    "end": "1460559"
  },
  {
    "text": "what is defined through the proxy was",
    "start": "1460559",
    "end": "1462559"
  },
  {
    "text": "some apis",
    "start": "1462559",
    "end": "1464400"
  },
  {
    "text": "also there are a couple of restrictions",
    "start": "1464400",
    "end": "1467120"
  },
  {
    "text": "in place",
    "start": "1467120",
    "end": "1467919"
  },
  {
    "text": "so like i mentioned previously you do",
    "start": "1467919",
    "end": "1470240"
  },
  {
    "text": "not have access to",
    "start": "1470240",
    "end": "1471520"
  },
  {
    "text": "file reads you cannot do busy weights",
    "start": "1471520",
    "end": "1474159"
  },
  {
    "text": "you don't have access to the network",
    "start": "1474159",
    "end": "1476000"
  },
  {
    "text": "socket",
    "start": "1476000",
    "end": "1476960"
  },
  {
    "text": "and also the threading and exception",
    "start": "1476960",
    "end": "1479440"
  },
  {
    "text": "support",
    "start": "1479440",
    "end": "1480000"
  },
  {
    "text": "is not there but those two will be there",
    "start": "1480000",
    "end": "1482640"
  },
  {
    "text": "sometime in the future",
    "start": "1482640",
    "end": "1484720"
  },
  {
    "text": "and also you do get a little bit of a",
    "start": "1484720",
    "end": "1486559"
  },
  {
    "text": "performance overhead which i mentioned",
    "start": "1486559",
    "end": "1488640"
  },
  {
    "text": "previously",
    "start": "1488640",
    "end": "1490320"
  },
  {
    "text": "also one thing that i want to mention is",
    "start": "1490320",
    "end": "1493200"
  },
  {
    "text": "that compiling with",
    "start": "1493200",
    "end": "1494320"
  },
  {
    "text": "external libraries is also not",
    "start": "1494320",
    "end": "1496320"
  },
  {
    "text": "straightforward",
    "start": "1496320",
    "end": "1498000"
  },
  {
    "text": "so what we had to do is we needed to",
    "start": "1498000",
    "end": "1500159"
  },
  {
    "text": "compile down",
    "start": "1500159",
    "end": "1501279"
  },
  {
    "text": "with the core yaku c plus plus libraries",
    "start": "1501279",
    "end": "1504000"
  },
  {
    "text": "and",
    "start": "1504000",
    "end": "1504320"
  },
  {
    "text": "also open ssl for md5",
    "start": "1504320",
    "end": "1507760"
  },
  {
    "text": "so due to this we you had to we had to",
    "start": "1507760",
    "end": "1510080"
  },
  {
    "text": "essentially compile them down",
    "start": "1510080",
    "end": "1511600"
  },
  {
    "text": "into what's known as llvm bitcode",
    "start": "1511600",
    "end": "1514640"
  },
  {
    "text": "which then can be used to import and",
    "start": "1514640",
    "end": "1516799"
  },
  {
    "text": "compile down with your webassembly",
    "start": "1516799",
    "end": "1518880"
  },
  {
    "text": "module",
    "start": "1518880",
    "end": "1519840"
  },
  {
    "text": "so that was a little bit of a learning",
    "start": "1519840",
    "end": "1521760"
  },
  {
    "text": "curve and wasn't straightforward so that",
    "start": "1521760",
    "end": "1524159"
  },
  {
    "text": "is something you should also be aware of",
    "start": "1524159",
    "end": "1527200"
  },
  {
    "text": "and finally the envoy was sem is still",
    "start": "1527200",
    "end": "1530000"
  },
  {
    "text": "an alpha stage",
    "start": "1530000",
    "end": "1531279"
  },
  {
    "text": "so it is in the process of being",
    "start": "1531279",
    "end": "1532960"
  },
  {
    "text": "upstream to envoy so not all of the",
    "start": "1532960",
    "end": "1535360"
  },
  {
    "text": "functionality is in place",
    "start": "1535360",
    "end": "1537679"
  },
  {
    "text": "also proxy was sam apis are still a work",
    "start": "1537679",
    "end": "1540159"
  },
  {
    "text": "in progress",
    "start": "1540159",
    "end": "1541039"
  },
  {
    "text": "so there are some things that they do",
    "start": "1541039",
    "end": "1543760"
  },
  {
    "text": "not have yet for example",
    "start": "1543760",
    "end": "1545440"
  },
  {
    "text": "sds support so one idea is we could have",
    "start": "1545440",
    "end": "1548799"
  },
  {
    "text": "had our rs secret",
    "start": "1548799",
    "end": "1550400"
  },
  {
    "text": "be inside of the sds and then we",
    "start": "1550400",
    "end": "1553120"
  },
  {
    "text": "wouldn't have needed the ingress util",
    "start": "1553120",
    "end": "1555279"
  },
  {
    "text": "server",
    "start": "1555279",
    "end": "1556159"
  },
  {
    "text": "but unfortunately since this is not",
    "start": "1556159",
    "end": "1558000"
  },
  {
    "text": "there yet we we didn't",
    "start": "1558000",
    "end": "1559919"
  },
  {
    "text": "do that but it will be coming sometime",
    "start": "1559919",
    "end": "1562000"
  },
  {
    "text": "in the future",
    "start": "1562000",
    "end": "1564640"
  },
  {
    "text": "okay so we had a couple of",
    "start": "1564640",
    "end": "1566320"
  },
  {
    "text": "acknowledgements so we wanted to thank",
    "start": "1566320",
    "end": "1568720"
  },
  {
    "text": "the envoy was some community and also",
    "start": "1568720",
    "end": "1571600"
  },
  {
    "text": "specifically john plebiac from there",
    "start": "1571600",
    "end": "1574080"
  },
  {
    "text": "the istio team and also from the core",
    "start": "1574080",
    "end": "1576880"
  },
  {
    "text": "infrastructure team",
    "start": "1576880",
    "end": "1578000"
  },
  {
    "text": "suresh baskram and catherine as well",
    "start": "1578000",
    "end": "1582400"
  },
  {
    "text": "okay so thank you so much for coming to",
    "start": "1582400",
    "end": "1584880"
  },
  {
    "text": "our talk",
    "start": "1584880",
    "end": "1585679"
  },
  {
    "text": "and listening to our experience for",
    "start": "1585679",
    "end": "1589039"
  },
  {
    "text": "implementing yahoo headers using the web",
    "start": "1589039",
    "end": "1591120"
  },
  {
    "text": "assembly filter",
    "start": "1591120",
    "end": "1592480"
  },
  {
    "text": "if you have any questions then please",
    "start": "1592480",
    "end": "1594799"
  },
  {
    "text": "let us know and we'd be happy to answer",
    "start": "1594799",
    "end": "1596960"
  },
  {
    "text": "them",
    "start": "1596960",
    "end": "1597360"
  },
  {
    "text": "thank you so much hello",
    "start": "1597360",
    "end": "1600720"
  },
  {
    "text": "can you hear us hello there can you hear",
    "start": "1600720",
    "end": "1603760"
  },
  {
    "text": "us",
    "start": "1603760",
    "end": "1604480"
  },
  {
    "text": "i believe so um so i can take the first",
    "start": "1604480",
    "end": "1607360"
  },
  {
    "text": "question which was regarding the",
    "start": "1607360",
    "end": "1608640"
  },
  {
    "text": "performance",
    "start": "1608640",
    "end": "1609600"
  },
  {
    "text": "so we did see some amount of performance",
    "start": "1609600",
    "end": "1611520"
  },
  {
    "text": "improvement in general",
    "start": "1611520",
    "end": "1612880"
  },
  {
    "text": "in terms of the throughput per box uh",
    "start": "1612880",
    "end": "1615039"
  },
  {
    "text": "but it does require a little bit of",
    "start": "1615039",
    "end": "1616640"
  },
  {
    "text": "tuning because",
    "start": "1616640",
    "end": "1617360"
  },
  {
    "text": "we've been using apache traffic server",
    "start": "1617360",
    "end": "1618960"
  },
  {
    "text": "for a while now at yahoo so",
    "start": "1618960",
    "end": "1621120"
  },
  {
    "text": "a lot of those uh have already been",
    "start": "1621120",
    "end": "1622880"
  },
  {
    "text": "tuned so with onboard that has been a",
    "start": "1622880",
    "end": "1624400"
  },
  {
    "text": "bit of a learning curve we're learning",
    "start": "1624400",
    "end": "1625679"
  },
  {
    "text": "how to tune",
    "start": "1625679",
    "end": "1626400"
  },
  {
    "text": "some of the aspects like especially if",
    "start": "1626400",
    "end": "1627919"
  },
  {
    "text": "there are large payloads we've had to",
    "start": "1627919",
    "end": "1629679"
  },
  {
    "text": "tune some of the settings on envoy so",
    "start": "1629679",
    "end": "1631919"
  },
  {
    "text": "there has been some performance",
    "start": "1631919",
    "end": "1633520"
  },
  {
    "text": "improvements but there's also been a",
    "start": "1633520",
    "end": "1634720"
  },
  {
    "text": "learning curve for us to get the maximum",
    "start": "1634720",
    "end": "1636720"
  },
  {
    "text": "performance out of envoy",
    "start": "1636720",
    "end": "1639840"
  },
  {
    "text": "and then yeah so in terms of the ssl",
    "start": "1639840",
    "end": "1642240"
  },
  {
    "text": "libraries that we're using to actually",
    "start": "1642240",
    "end": "1643760"
  },
  {
    "text": "generate the secret",
    "start": "1643760",
    "end": "1645200"
  },
  {
    "text": "so we're using the openssl",
    "start": "1645200",
    "end": "1648720"
  },
  {
    "text": "md5 library to generate the rs uh",
    "start": "1648720",
    "end": "1651919"
  },
  {
    "text": "secret itself basically with the base64",
    "start": "1651919",
    "end": "1655200"
  },
  {
    "text": "encoding and in terms of generating the",
    "start": "1655200",
    "end": "1657840"
  },
  {
    "text": "secret that is used for the md5 that's",
    "start": "1657840",
    "end": "1660240"
  },
  {
    "text": "actually part of the actual key",
    "start": "1660240",
    "end": "1662080"
  },
  {
    "text": "management service so i don't think",
    "start": "1662080",
    "end": "1664000"
  },
  {
    "text": "i can share too many details about that",
    "start": "1664000",
    "end": "1667600"
  },
  {
    "text": "and then another thing that i wanted",
    "start": "1667600",
    "end": "1669440"
  },
  {
    "text": "just to clarify because i know in one of",
    "start": "1669440",
    "end": "1671520"
  },
  {
    "text": "the last slides i mentioned that",
    "start": "1671520",
    "end": "1673840"
  },
  {
    "text": "basically the web assembly functionality",
    "start": "1673840",
    "end": "1676240"
  },
  {
    "text": "is not fully merged yet into",
    "start": "1676240",
    "end": "1678159"
  },
  {
    "text": "envoy so actually as of a few days ago",
    "start": "1678159",
    "end": "1681120"
  },
  {
    "text": "it did get merged into the actual",
    "start": "1681120",
    "end": "1683520"
  },
  {
    "text": "envoy upstream code base so the envoy",
    "start": "1683520",
    "end": "1686320"
  },
  {
    "text": "was",
    "start": "1686320",
    "end": "1687200"
  },
  {
    "text": "repo was basically archived and then",
    "start": "1687200",
    "end": "1689760"
  },
  {
    "text": "everything was upstream to envoy so that",
    "start": "1689760",
    "end": "1691679"
  },
  {
    "text": "functionality should be there now",
    "start": "1691679",
    "end": "1693600"
  },
  {
    "text": "so just wanted to clarify that as well",
    "start": "1693600",
    "end": "1697840"
  },
  {
    "text": "okay let's see yeah i think the last one",
    "start": "1698000",
    "end": "1701200"
  },
  {
    "text": "was regarding the language so we",
    "start": "1701200",
    "end": "1702799"
  },
  {
    "text": "actually",
    "start": "1702799",
    "end": "1703360"
  },
  {
    "text": "uh chose c plus plus as the language",
    "start": "1703360",
    "end": "1705520"
  },
  {
    "text": "because we had a lot of existing",
    "start": "1705520",
    "end": "1706960"
  },
  {
    "text": "yahoo libraries that we wanted to",
    "start": "1706960",
    "end": "1708480"
  },
  {
    "text": "compile with so that's the reason why we",
    "start": "1708480",
    "end": "1710320"
  },
  {
    "text": "chose that",
    "start": "1710320",
    "end": "1711919"
  },
  {
    "text": "yeah and yeah i mean in terms of",
    "start": "1711919",
    "end": "1714559"
  },
  {
    "text": "compiling with open ssl",
    "start": "1714559",
    "end": "1716559"
  },
  {
    "text": "yeah it was definitely a little bit",
    "start": "1716559",
    "end": "1718000"
  },
  {
    "text": "painful basically i",
    "start": "1718000",
    "end": "1719919"
  },
  {
    "text": "we had to compile the open ssl down into",
    "start": "1719919",
    "end": "1722880"
  },
  {
    "text": "llvm bitcode first",
    "start": "1722880",
    "end": "1724960"
  },
  {
    "text": "that we could then use to actually",
    "start": "1724960",
    "end": "1726640"
  },
  {
    "text": "compile down with our webassembly filter",
    "start": "1726640",
    "end": "1729919"
  },
  {
    "text": "so that was definitely of a learning",
    "start": "1729919",
    "end": "1731840"
  },
  {
    "text": "curve for us basically figuring out how",
    "start": "1731840",
    "end": "1733679"
  },
  {
    "text": "to do that compilation first before we",
    "start": "1733679",
    "end": "1735760"
  },
  {
    "text": "could use it",
    "start": "1735760",
    "end": "1736559"
  },
  {
    "text": "so",
    "start": "1736559",
    "end": "1738720"
  },
  {
    "text": "itself we only had to compile it with",
    "start": "1740480",
    "end": "1742000"
  },
  {
    "text": "like our filter so that definitely",
    "start": "1742000",
    "end": "1743440"
  },
  {
    "text": "simplified things",
    "start": "1743440",
    "end": "1745200"
  },
  {
    "text": "yeah that's like the biggest advantage",
    "start": "1745200",
    "end": "1746799"
  },
  {
    "text": "that we see with vasim is that we don't",
    "start": "1746799",
    "end": "1748320"
  },
  {
    "text": "have to recompile the convoy source code",
    "start": "1748320",
    "end": "1750080"
  },
  {
    "text": "itself",
    "start": "1750080",
    "end": "1750559"
  },
  {
    "text": "we can just you know build a filter",
    "start": "1750559",
    "end": "1753200"
  },
  {
    "text": "independent of it",
    "start": "1753200",
    "end": "1755440"
  },
  {
    "text": "exactly yeah definitely a large benefit",
    "start": "1755440",
    "end": "1760240"
  },
  {
    "text": "cool yeah please let us know if you have",
    "start": "1762320",
    "end": "1764720"
  },
  {
    "text": "any other questions in the chat",
    "start": "1764720",
    "end": "1766799"
  },
  {
    "text": "um yeah and then also if you have any",
    "start": "1766799",
    "end": "1768799"
  },
  {
    "text": "questions then",
    "start": "1768799",
    "end": "1769840"
  },
  {
    "text": "feel free to reach out to us as well so",
    "start": "1769840",
    "end": "1772559"
  },
  {
    "text": "uh basically our handles are mduma",
    "start": "1772559",
    "end": "1774960"
  },
  {
    "text": "and i'm chet black on the on voicetack",
    "start": "1774960",
    "end": "1777120"
  },
  {
    "text": "channel and also on github",
    "start": "1777120",
    "end": "1778799"
  },
  {
    "text": "so feel free to reach out to us as well",
    "start": "1778799",
    "end": "1781200"
  },
  {
    "text": "with any questions you have",
    "start": "1781200",
    "end": "1783679"
  },
  {
    "text": "thank you cool thank you",
    "start": "1783679",
    "end": "1786720"
  },
  {
    "text": "the next session is starting thank you",
    "start": "1786720",
    "end": "1788240"
  },
  {
    "text": "so much thank you",
    "start": "1788240",
    "end": "1792880"
  }
]