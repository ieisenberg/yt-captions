[
  {
    "text": "everybody uh we want to thank you in advance for coming to our session today um rodney and i are",
    "start": "80",
    "end": "6319"
  },
  {
    "text": "going to be talking about brigade",
    "start": "6319",
    "end": "10960"
  },
  {
    "text": "so brigade is event driven scripting for kubernetes and who",
    "start": "12799",
    "end": "19359"
  },
  {
    "text": "are we we're both software engineers at microsoft in a group that identifies uh outwardly as deus labs",
    "start": "19359",
    "end": "28480"
  },
  {
    "text": "we're both open source maintainers for brigade and a few other projects um as for myself my",
    "start": "28480",
    "end": "35040"
  },
  {
    "text": "info is down at the bottom there you can find me on twitter at crankcore um and i'm a dad a martial",
    "start": "35040",
    "end": "41600"
  },
  {
    "text": "arts instructor and a comic book nerd and i'll let radu introduce himself",
    "start": "41600",
    "end": "48559"
  },
  {
    "text": "hello everyone i'm radho you can find me on the internet if you uh if you need to contact me i",
    "start": "49200",
    "end": "56320"
  },
  {
    "text": "blog quite a bit about open source and distributed systems and webassembly",
    "start": "56320",
    "end": "61520"
  },
  {
    "text": "and things like that i'm trying to learn to play the piano i'm a cyclist and aspiring trail runner and a",
    "start": "61520",
    "end": "69040"
  },
  {
    "text": "webassembly tinker back to kent",
    "start": "69040",
    "end": "73840"
  },
  {
    "text": "all right thanks ronnie um so to talk about brigade we're going to",
    "start": "76000",
    "end": "82320"
  },
  {
    "text": "give a little bit of historical background about where the project comes from because it's it's kind of",
    "start": "82320",
    "end": "87840"
  },
  {
    "text": "interesting um so in fall of 2016 um davis and this is before deus was uh",
    "start": "87840",
    "end": "96400"
  },
  {
    "text": "later acquired by microsoft we were doing something that we called the shark tank exercise which was kind of modeled after",
    "start": "96400",
    "end": "102799"
  },
  {
    "text": "the television program shark tank and so engineers broke into groups and pitched new ideas to",
    "start": "102799",
    "end": "109759"
  },
  {
    "text": "management and the idea was that the winning pitch",
    "start": "109759",
    "end": "115840"
  },
  {
    "text": "spoiler alert brigade won that year um and helm won the the previous year",
    "start": "116960",
    "end": "123759"
  },
  {
    "text": "and the pitch began with the comparison of kubernetes to an operating system",
    "start": "123759",
    "end": "131039"
  },
  {
    "text": "um and and this is kind of also how the pitch for helm uh began also um both years the",
    "start": "131039",
    "end": "137760"
  },
  {
    "text": "the winning teams who came up with with these ideas ask the question if you if you think of",
    "start": "137760",
    "end": "143440"
  },
  {
    "text": "kubernetes like uh an operating system of sorts what um pieces of functionality that were",
    "start": "143440",
    "end": "150720"
  },
  {
    "text": "accustomed to in a real operating system are missing from kubernetes",
    "start": "150720",
    "end": "156800"
  },
  {
    "text": "so um just to you know dive into this analogy a little bit what is an operating system and this is",
    "start": "156800",
    "end": "163680"
  },
  {
    "text": "kind of like the you know the the wikipedia level um definition here but it's it's",
    "start": "163680",
    "end": "169440"
  },
  {
    "text": "a program that after being initially loaded into the computer manages all the other programs so",
    "start": "169440",
    "end": "177519"
  },
  {
    "text": "kubernetes um can be thought of as your cluster operating system the os manages processes on a machine",
    "start": "177519",
    "end": "184480"
  },
  {
    "text": "and kubernetes manages containers in a cluster kubernetes is an operating system of",
    "start": "184480",
    "end": "190800"
  },
  {
    "text": "sorts um so you know when help was conceived the thing that was obviously missing",
    "start": "190800",
    "end": "197280"
  },
  {
    "text": "from kubernetes at the time was a package manager and when brigade was conceived the thing",
    "start": "197280",
    "end": "203519"
  },
  {
    "text": "that was conspicuously missing was some kind of shell scripting",
    "start": "203519",
    "end": "208720"
  },
  {
    "text": "so in traditional shell scripting in on your desktop",
    "start": "208720",
    "end": "213840"
  },
  {
    "text": "operating system um it's flow control that wraps the execution processes but it's not opinionated about",
    "start": "213840",
    "end": "221120"
  },
  {
    "text": "what those processes do or how they run so what would shell scripting in a cluster",
    "start": "221120",
    "end": "227519"
  },
  {
    "text": "look like well it would be flow control that wraps the execution of containers but isn't particularly",
    "start": "227519",
    "end": "234879"
  },
  {
    "text": "opinionated about what the containers do so that's what led pretty directly to",
    "start": "234879",
    "end": "242400"
  },
  {
    "text": "to brigade um fast forward to the current day uh and we're a cloud native sandbox",
    "start": "242400",
    "end": "251760"
  },
  {
    "text": "project we are event driven scripting for kubernetes",
    "start": "252840",
    "end": "258880"
  },
  {
    "text": "we're extremely lightweight and kubernetes native and brigade chains together containers",
    "start": "258880",
    "end": "265520"
  },
  {
    "text": "to create workflows and radio will show us more about that as we get going um some key design",
    "start": "265520",
    "end": "272720"
  },
  {
    "text": "decisions that went into creating brigade what programming language to use if you're going to",
    "start": "272720",
    "end": "278320"
  },
  {
    "text": "create some kind of scripting engine um you know what language do you write",
    "start": "278320",
    "end": "283360"
  },
  {
    "text": "those scripts in um how can data be shared between containers if you",
    "start": "283360",
    "end": "288880"
  },
  {
    "text": "if you think about writing a traditional shell scripts like in your desktop um operating system um you know you have",
    "start": "288880",
    "end": "297120"
  },
  {
    "text": "several ways that data can can go into a process or come out of the process so you can pass",
    "start": "297120",
    "end": "303280"
  },
  {
    "text": "uh commands on the command line or you can use a file as inputs or you can",
    "start": "303280",
    "end": "310000"
  },
  {
    "text": "pipe some input in from standard in um same thing on the on the tail and",
    "start": "310000",
    "end": "315840"
  },
  {
    "text": "getting output out of a process you could be writing to a file or you could be writing something",
    "start": "315840",
    "end": "320880"
  },
  {
    "text": "to standard out and you could pipe that into another process",
    "start": "320880",
    "end": "326160"
  },
  {
    "text": "um when should scripts be executed um it's it's pretty simple in the desktop operating system uh a",
    "start": "326160",
    "end": "332320"
  },
  {
    "text": "script is executed when when you type its name and hit enter um but what are the the triggers for",
    "start": "332320",
    "end": "339840"
  },
  {
    "text": "executing the script um in a cloud environment so that's another thing that that had to be",
    "start": "339840",
    "end": "346080"
  },
  {
    "text": "considered so on the subject of of what language to use",
    "start": "346080",
    "end": "351520"
  },
  {
    "text": "um these uh stats that you're looking at here are a little bit out of date but i think that's okay i think it's",
    "start": "351520",
    "end": "357759"
  },
  {
    "text": "it's relevant to show um you know kind of point in time statistics um here so it was",
    "start": "357759",
    "end": "364960"
  },
  {
    "text": "it was 2016 when this decision was being made and javascript was then as is now overwhelmingly um",
    "start": "364960",
    "end": "372639"
  },
  {
    "text": "one of the most popular programming languages the the most popular programming language",
    "start": "372639",
    "end": "378720"
  },
  {
    "text": "and uh why javascript so yes popular we've established that rich ecosystem of tools and",
    "start": "378960",
    "end": "386880"
  },
  {
    "text": "extremely flexible um just to back up that uh second bullet point about the",
    "start": "386880",
    "end": "392639"
  },
  {
    "text": "rich ecosystem of tools um again this is a couple years ago",
    "start": "392639",
    "end": "398400"
  },
  {
    "text": "um npm which is the one of the package managers for",
    "start": "398400",
    "end": "406160"
  },
  {
    "text": "for uh javascript they surpassed one billion weekly package pulse so",
    "start": "406160",
    "end": "412319"
  },
  {
    "text": "if if that doesn't speak to uh how vibrant um the ecosystem is and how many tools",
    "start": "412319",
    "end": "419280"
  },
  {
    "text": "are available and how popular they are i i don't know what does so javascript um basically",
    "start": "419280",
    "end": "426160"
  },
  {
    "text": "slam dunk here so sharing data between containers we talked about that we know",
    "start": "426160",
    "end": "432000"
  },
  {
    "text": "what we know what sharing data between processes looks like on your desktop operating system what does it look like",
    "start": "432000",
    "end": "437680"
  },
  {
    "text": "um in the cloud so passing information to a container well it's not that different than",
    "start": "437680",
    "end": "443520"
  },
  {
    "text": "passing information to a process on your desktop you can pass things in",
    "start": "443520",
    "end": "448560"
  },
  {
    "text": "through the commands so command line flags or command arguments right you do specify a command",
    "start": "448560",
    "end": "456080"
  },
  {
    "text": "or arguments when you create a container so that's one way of getting information into the container",
    "start": "456080",
    "end": "462000"
  },
  {
    "text": "you have environment variables of course and you can pass information um to a process in a",
    "start": "462000",
    "end": "467440"
  },
  {
    "text": "container using a file how do you get information out of containers while you have standard out",
    "start": "467440",
    "end": "474080"
  },
  {
    "text": "you have exit codes what was the exit code of the containerized process and of course",
    "start": "474080",
    "end": "481759"
  },
  {
    "text": "you have files so in the end everything is just javascript",
    "start": "481759",
    "end": "489840"
  },
  {
    "text": "so i will quickly go through um this one little snippet i'll let raju go",
    "start": "489840",
    "end": "495120"
  },
  {
    "text": "into much more detail when he does his demos um but what we have here is we're",
    "start": "495120",
    "end": "501280"
  },
  {
    "text": "basically importing the brigadier library brigadier is just a library for javascript that exposes",
    "start": "501280",
    "end": "508240"
  },
  {
    "text": "the primitives that you need for um you know creating these pipelines so they have primitives like",
    "start": "508240",
    "end": "514479"
  },
  {
    "text": "um like jobs for instance and and we see that in use here so you say bar program equals new job we",
    "start": "514479",
    "end": "522159"
  },
  {
    "text": "give it a name and we tell it um what uh what docker container to base this job",
    "start": "522159",
    "end": "528800"
  },
  {
    "text": "on and we give it some tasks to do echo hello echo goodbye these will be executed in order we set",
    "start": "528800",
    "end": "536560"
  },
  {
    "text": "an environment variable we give the variable key the the value value",
    "start": "536560",
    "end": "541680"
  },
  {
    "text": "and then we say program.run so this is this is a pretty simple script that just runs one",
    "start": "541680",
    "end": "547440"
  },
  {
    "text": "container so there's still the question of when to execute um as i said if you were talking",
    "start": "547440",
    "end": "554959"
  },
  {
    "text": "about a desktop operating system things execute when you type the script's name and hit enter but that's not really the way",
    "start": "554959",
    "end": "562000"
  },
  {
    "text": "you're going to expect things to work with cloud right um so",
    "start": "562000",
    "end": "567279"
  },
  {
    "text": "as i understand it um some inspiration for this came actually from from applescript um",
    "start": "567279",
    "end": "573519"
  },
  {
    "text": "which is you know a little bit more event driven um in terms of you know you do something",
    "start": "573519",
    "end": "579279"
  },
  {
    "text": "on your mac desktop and that triggers subscript um so that's",
    "start": "579279",
    "end": "585200"
  },
  {
    "text": "how brigade works we are event driven and gateways um broker events from upstream",
    "start": "585200",
    "end": "591839"
  },
  {
    "text": "systems like github or docker hub or slack and there are others we have other integrations as",
    "start": "591839",
    "end": "597040"
  },
  {
    "text": "well and you can pretty easily build your own",
    "start": "597040",
    "end": "601759"
  },
  {
    "text": "and event handlers therefore become the entry points into your brigade scripts",
    "start": "602240",
    "end": "608160"
  },
  {
    "text": "so we'll uh so this is roughly what that looks like you have um over on the left you have some kind",
    "start": "608160",
    "end": "615680"
  },
  {
    "text": "of upstream event so this could be like a web hook coming from um github or slack or something like",
    "start": "615680",
    "end": "622399"
  },
  {
    "text": "that it comes into a gateway which is a little program that that understands the",
    "start": "622399",
    "end": "628160"
  },
  {
    "text": "events from the upstream system and uh turns them into events that it emits",
    "start": "628160",
    "end": "634160"
  },
  {
    "text": "into brigade which which triggers uh a build",
    "start": "634160",
    "end": "639839"
  },
  {
    "text": "so this is the same script we looked at before but adapted a little bit to look uh event",
    "start": "640800",
    "end": "647519"
  },
  {
    "text": "driven so you can see we're still importing some things from brigadier before we just imported jobs this time we",
    "start": "647519",
    "end": "654720"
  },
  {
    "text": "are importing events as well and you can see on the next line we're",
    "start": "654720",
    "end": "660079"
  },
  {
    "text": "saying events.on some event",
    "start": "660079",
    "end": "664800"
  },
  {
    "text": "then we want this container to execute and these lines that you see here are the same lines that we looked at earlier",
    "start": "665120",
    "end": "675120"
  },
  {
    "text": "so some popular use cases that we know brigade has been used to tackle um ci cd is probably the most popular",
    "start": "675120",
    "end": "684000"
  },
  {
    "text": "although i really want to note that brigade is not a ciacd platform it's just",
    "start": "684000",
    "end": "691680"
  },
  {
    "text": "that it's one popular use for it we know of teams that have done nightly",
    "start": "691680",
    "end": "698640"
  },
  {
    "text": "security audits of their source code repositories um you",
    "start": "698640",
    "end": "703920"
  },
  {
    "text": "can use it for things like aggregating and analyzing data to build reports um you could create complex sandbox",
    "start": "703920",
    "end": "710720"
  },
  {
    "text": "environments on demand so you know you could have some events",
    "start": "710720",
    "end": "717040"
  },
  {
    "text": "that might trigger a kind cluster being deployed within your kubernetes cluster",
    "start": "717040",
    "end": "722160"
  },
  {
    "text": "in order to facilitate uh end-to-end testing of some something",
    "start": "722160",
    "end": "730160"
  },
  {
    "text": "um so at this point i'm going to turn it over to uh raju um to do a little",
    "start": "730160",
    "end": "736959"
  },
  {
    "text": "demo and uh then uh will come back to me at the end to get some updates about future",
    "start": "736959",
    "end": "744720"
  },
  {
    "text": "projects hello everyone in this video we will get started with",
    "start": "744720",
    "end": "750000"
  },
  {
    "text": "brigade first of all you will need a kubernetes cluster you can use any cloud provided cluster or local one",
    "start": "750000",
    "end": "757040"
  },
  {
    "text": "in this case i'm using docker desktop and with a single node cluster everything you're about to see can be",
    "start": "757040",
    "end": "763040"
  },
  {
    "text": "found on the documentation website for brigade and to get started we will deploy",
    "start": "763040",
    "end": "768560"
  },
  {
    "text": "brigade in our cluster using helm i'm using helm3 to deploy brigade to its own namespace",
    "start": "768560",
    "end": "776560"
  },
  {
    "text": "uh and at this point we can start using the brigade cli which can be downloaded from",
    "start": "776560",
    "end": "782399"
  },
  {
    "text": "the release pages from the release page on github and run brick check which makes sure that",
    "start": "782399",
    "end": "789360"
  },
  {
    "text": "all of brigade's component uh components are properly uh deployed in our cluster and are",
    "start": "789360",
    "end": "795920"
  },
  {
    "text": "running so we can see an api server a controller which is listening for events",
    "start": "795920",
    "end": "801519"
  },
  {
    "text": "and an optional web dashboard and now we are ready to start writing brigade scripts what i did",
    "start": "801519",
    "end": "809279"
  },
  {
    "text": "previously i created a brigade project which is just a",
    "start": "809279",
    "end": "814639"
  },
  {
    "text": "logical grouping for data secrets and things like that so i didn't have to",
    "start": "814639",
    "end": "819680"
  },
  {
    "text": "create it right now it's called hello kubecon and we will reference it when uh generating events through the break",
    "start": "819680",
    "end": "826480"
  },
  {
    "text": "cli so the simplest brigade script requires",
    "start": "826480",
    "end": "831600"
  },
  {
    "text": "us to import brigadier which is the javascript api for brigade specifically we're using the",
    "start": "831600",
    "end": "838639"
  },
  {
    "text": "events and job objects which we will see throughout the examples in this video",
    "start": "838639",
    "end": "844000"
  },
  {
    "text": "brigade is a an event-driven scripting engine on top of kubernetes so",
    "start": "844000",
    "end": "850480"
  },
  {
    "text": "every every entry point in a brigade script is an event handler in this case we're reacting to an event",
    "start": "850480",
    "end": "857760"
  },
  {
    "text": "called exec and we're reacting by executing this particular function",
    "start": "857760",
    "end": "863519"
  },
  {
    "text": "so what this function does is every time there's an exec event we create a new job called do nothing",
    "start": "863519",
    "end": "870480"
  },
  {
    "text": "based on an alpine container and we execute the following two jobs echo hello and echo world and then we",
    "start": "870480",
    "end": "877360"
  },
  {
    "text": "run it and we can use break to generate an exact event which the",
    "start": "877360",
    "end": "884320"
  },
  {
    "text": "script and the controller are listening for",
    "start": "884320",
    "end": "889600"
  },
  {
    "text": "and we're passing the name of the project that we saw earlier and the name of the script file that we want to execute if this was",
    "start": "891680",
    "end": "899279"
  },
  {
    "text": "a real world scenario the brigade.js file will be somewhere in a github repo and the",
    "start": "899279",
    "end": "906160"
  },
  {
    "text": "event itself would be generated by an external system and right now uh the brigade",
    "start": "906160",
    "end": "914240"
  },
  {
    "text": "worker executed our script and we can start inspecting what happened in our cluster",
    "start": "914240",
    "end": "919839"
  },
  {
    "text": "uh brigade offers multiple ways of seeing what's happening in the cluster first of all we have",
    "start": "919839",
    "end": "925519"
  },
  {
    "text": "a web dashboard that i mentioned earlier uh and brick dashboard is a cli command",
    "start": "925519",
    "end": "931279"
  },
  {
    "text": "that tunnels traffic from your machine to inside a cluster using port forwarding",
    "start": "931279",
    "end": "937360"
  },
  {
    "text": "and you can see the name of the project there was uh an event from the brigade cli called",
    "start": "937360",
    "end": "943839"
  },
  {
    "text": "exec that ran a few seconds ago and there's a job called do nothing and if we click on",
    "start": "943839",
    "end": "949680"
  },
  {
    "text": "it we see the logs for for our jobs if you're not familiar with or",
    "start": "949680",
    "end": "954959"
  },
  {
    "text": "don't have access to a web dashboard or browser in your environment you can also use",
    "start": "954959",
    "end": "960720"
  },
  {
    "text": "a cli dashboard built by the community there's a brig term command that starts",
    "start": "960720",
    "end": "967040"
  },
  {
    "text": "this dashboard and you can see the same sort of information but in a terminal dashboard as well you can",
    "start": "967040",
    "end": "974160"
  },
  {
    "text": "see the logs type of job source and everything else",
    "start": "974160",
    "end": "980720"
  },
  {
    "text": "of course you can run multiple create multiple jobs job objects and run them the same way",
    "start": "981040",
    "end": "988880"
  },
  {
    "text": "but brigade also offers you a way of grouping multiple jobs imagine you have lots and lots of jobs",
    "start": "988880",
    "end": "994880"
  },
  {
    "text": "and you want to schedule and orchestrate their execution brigade offers an api called groups and",
    "start": "994880",
    "end": "1002480"
  },
  {
    "text": "one of the methods on the group object is run each which makes sure that your jobs are run",
    "start": "1002480",
    "end": "1008560"
  },
  {
    "text": "sequentially so hello started its execution is finished and then goodbye started",
    "start": "1008560",
    "end": "1015600"
  },
  {
    "text": "so if we executed this um this brigade script we would expect",
    "start": "1015600",
    "end": "1022240"
  },
  {
    "text": "that hello to start and finish and then goodbye to be executed and break term also offers a",
    "start": "1022240",
    "end": "1029760"
  },
  {
    "text": "very nice visual representation of the pipeline invocation and execution and here you can see brigade started and",
    "start": "1029760",
    "end": "1037360"
  },
  {
    "text": "then after it finished the goodbye job was started so and and the logs as well",
    "start": "1037360",
    "end": "1045918"
  },
  {
    "text": "because this is playing javascript you also have multiple ways of making sure you can await certain operations the run",
    "start": "1045919",
    "end": "1053760"
  },
  {
    "text": "function returns a javascript native promise so if you're familiar with the async",
    "start": "1053760",
    "end": "1060400"
  },
  {
    "text": "await functionality in javascript you can also use that as well if you're not if you're more familiar with",
    "start": "1060400",
    "end": "1067520"
  },
  {
    "text": "grouping api you can just use that",
    "start": "1067520",
    "end": "1071360"
  },
  {
    "text": "brigade also offers a on sim a very simple way of dealing with",
    "start": "1073200",
    "end": "1079200"
  },
  {
    "text": "storage in kubernetes there's an object called storage that",
    "start": "1079200",
    "end": "1084320"
  },
  {
    "text": "you can enable or disable per job and if you enable storage for for jobs",
    "start": "1084320",
    "end": "1090400"
  },
  {
    "text": "in your event execution the brigade worker will create a",
    "start": "1090400",
    "end": "1095440"
  },
  {
    "text": "persistent volume and attach it to each of these jobs that require it so if we run this",
    "start": "1095440",
    "end": "1104320"
  },
  {
    "text": "what we expect to happen is the persistent volume will be mounted on mount brigade share",
    "start": "1104320",
    "end": "1110799"
  },
  {
    "text": "by default you can change that of course uh the first job will write the first two jobs will write in the",
    "start": "1110799",
    "end": "1117360"
  },
  {
    "text": "file and the third file and the third job will uh will print the content of the file",
    "start": "1117360",
    "end": "1123280"
  },
  {
    "text": "so if we go to brigade term and the first one wrote into the file the",
    "start": "1123280",
    "end": "1129280"
  },
  {
    "text": "second one wrote as well and the third job printed the contents",
    "start": "1129280",
    "end": "1134320"
  },
  {
    "text": "of the particular file again what this does is it creates persistent volume storages",
    "start": "1134320",
    "end": "1140720"
  },
  {
    "text": "it attaches them to each of the jobs sequentially and then deletes them at the end of the execution",
    "start": "1140720",
    "end": "1147280"
  },
  {
    "text": "keep in mind that the the storage is volatile so it's deleted at the end of the execution but",
    "start": "1147280",
    "end": "1154480"
  },
  {
    "text": "it's a very simple way of attaching storage to event executions",
    "start": "1154480",
    "end": "1161919"
  },
  {
    "text": "there's also another type of storage that brigade surfaces in its api called the cache",
    "start": "1161919",
    "end": "1169440"
  },
  {
    "text": "the build storage is storage per event so on every exact on every new",
    "start": "1169440",
    "end": "1176720"
  },
  {
    "text": "exact event brigade will create a new persistent volume and it will attach it to each of these jobs",
    "start": "1176720",
    "end": "1182320"
  },
  {
    "text": "in the case of a cache it's uh the persistent volume survives multiple",
    "start": "1182320",
    "end": "1187360"
  },
  {
    "text": "invocations of the same events type so every time there's a new exact event",
    "start": "1187360",
    "end": "1192799"
  },
  {
    "text": "and then you cache your job it's by the name of the job and container uh the same persistent volume",
    "start": "1192799",
    "end": "1199760"
  },
  {
    "text": "will be attached and you can use that to uh for example build caches compiler caches and things",
    "start": "1199760",
    "end": "1206880"
  },
  {
    "text": "like that so if we execute",
    "start": "1206880",
    "end": "1211919"
  },
  {
    "text": "uh this particular script multiple times we expect um the same persistent volume to be",
    "start": "1211919",
    "end": "1219200"
  },
  {
    "text": "attached to this job and us to be able to write across multiple event executions so we",
    "start": "1219200",
    "end": "1226080"
  },
  {
    "text": "can see if we run it again it will append to that particular file and the same storage will be attached again",
    "start": "1226080",
    "end": "1234080"
  },
  {
    "text": "so so you can see it was it was attached again another type of",
    "start": "1234080",
    "end": "1240400"
  },
  {
    "text": "interesting thing we can do with uh with brigade is get results out of",
    "start": "1240400",
    "end": "1245679"
  },
  {
    "text": "job executions particularly standard output is one of the things we can get out of",
    "start": "1245679",
    "end": "1251679"
  },
  {
    "text": "event executions and here you can see another way of waiting for",
    "start": "1251679",
    "end": "1257039"
  },
  {
    "text": "uh jobs you can use the venable uh syntax in javascript is the same sort of",
    "start": "1257039",
    "end": "1262880"
  },
  {
    "text": "result as you would get with a waiting uh job runs",
    "start": "1262880",
    "end": "1268480"
  },
  {
    "text": "but specifically we start a new job called one we wait for it to finish we grab its",
    "start": "1268480",
    "end": "1274400"
  },
  {
    "text": "result which is the standard output and use it as input for job number two and use it to uh",
    "start": "1274400",
    "end": "1284000"
  },
  {
    "text": "echo whatever the input was so if we execute this",
    "start": "1284000",
    "end": "1290320"
  },
  {
    "text": "what we would expect to happen is job1 to start and finish its standard output captured",
    "start": "1290320",
    "end": "1296720"
  },
  {
    "text": "by brigade and used as input for uh job number two and if we look at this",
    "start": "1296720",
    "end": "1302960"
  },
  {
    "text": "we can see job1 started it finished and then job 2 exited and we can see the output for the",
    "start": "1302960",
    "end": "1309600"
  },
  {
    "text": "first one used as input for the second one which is rather difficult to do if you don't have",
    "start": "1309600",
    "end": "1316240"
  },
  {
    "text": "a way of capturing output with a real programming language uh the final thing i want to show you",
    "start": "1316240",
    "end": "1321760"
  },
  {
    "text": "with a real programming language is uh handling errors and",
    "start": "1321760",
    "end": "1327120"
  },
  {
    "text": "ways to handle cleanup for example if something goes wrong",
    "start": "1327120",
    "end": "1332559"
  },
  {
    "text": "we have a first job that will exit this text successfully and the second one which exits with an",
    "start": "1332559",
    "end": "1338640"
  },
  {
    "text": "error code every time what we want to do is make sure that we catch any sort of exceptions",
    "start": "1338640",
    "end": "1344880"
  },
  {
    "text": "in in the execution and make sure to clean up do some some",
    "start": "1344880",
    "end": "1350880"
  },
  {
    "text": "other operations if if it fails so if we execute this we expect the second",
    "start": "1350880",
    "end": "1358720"
  },
  {
    "text": "job to fail but only the job the the execution of",
    "start": "1358720",
    "end": "1363840"
  },
  {
    "text": "the script itself will continue and we can continue to",
    "start": "1363840",
    "end": "1369200"
  },
  {
    "text": "to execute code that does for example cleanup and as expected it failed to run to",
    "start": "1369520",
    "end": "1375280"
  },
  {
    "text": "completion but the second job failed but if we have a",
    "start": "1375280",
    "end": "1382880"
  },
  {
    "text": "look at the uh the logs for um for the worker",
    "start": "1382880",
    "end": "1388640"
  },
  {
    "text": "itself we can see that the execution continued and we could have done other things as well",
    "start": "1388640",
    "end": "1393840"
  },
  {
    "text": "this is just uh of these are a few things that you can do with brigade for a for a complete uh guide i",
    "start": "1393840",
    "end": "1402080"
  },
  {
    "text": "recommend you check out the brigade documentation everything you've seen here is detailed uh and described here",
    "start": "1402080",
    "end": "1409840"
  },
  {
    "text": "together with many more examples thanks enjoy your conference",
    "start": "1409840",
    "end": "1417840"
  },
  {
    "text": "you",
    "start": "1428840",
    "end": "1431840"
  },
  {
    "text": "okay so just to uh recap a few quick things from uh",
    "start": "1441279",
    "end": "1447919"
  },
  {
    "text": "rahu's demo this slide is for your reference if you want to get started quickly",
    "start": "1447919",
    "end": "1454320"
  },
  {
    "text": "just add an accounting repository for the page",
    "start": "1454320",
    "end": "1459520"
  },
  {
    "text": "here on this slide create a name space for it and install it then",
    "start": "1459520",
    "end": "1465440"
  },
  {
    "text": "wrong check to make sure that everything is up and running",
    "start": "1465440",
    "end": "1470720"
  },
  {
    "text": "okay so we'll talk quickly about community and integrations we have built-in support for uh cloud events uh integrations for",
    "start": "1471120",
    "end": "1480159"
  },
  {
    "text": "uh is that first bullet point shouldn't be there cloud events as i've mentioned already uh github checks api um",
    "start": "1480159",
    "end": "1488400"
  },
  {
    "text": "inspirations for prometheus virtual public others and also arbitrary",
    "start": "1488400",
    "end": "1495600"
  },
  {
    "text": "event data that can be adjusted via generic",
    "start": "1495600",
    "end": "1501840"
  },
  {
    "text": "um we have a growing ecosystem so we have uh costly you saw that in robbie's demo",
    "start": "1501919",
    "end": "1508960"
  },
  {
    "text": "is a web-based dashboard for looking at your brigade pipelines uh",
    "start": "1508960",
    "end": "1514880"
  },
  {
    "text": "brigade term which robbie also showed uh started as a community project and then actually got",
    "start": "1514880",
    "end": "1520559"
  },
  {
    "text": "folded into great cli itself um and there are uh several gateways listed",
    "start": "1520559",
    "end": "1527600"
  },
  {
    "text": "here um we have gateways for uh bitbucket uh a lot of things",
    "start": "1527600",
    "end": "1535120"
  },
  {
    "text": "um and uh of course we love developers brigade is for developers this isn't for end users",
    "start": "1535120",
    "end": "1543360"
  },
  {
    "text": "so we want you to get involved so ways of doing that there's",
    "start": "1543360",
    "end": "1549799"
  },
  {
    "text": "thoughts.sh which uh",
    "start": "1549799",
    "end": "1556559"
  },
  {
    "text": "and some other ways to get involved you can find us on github or on the kubernetes",
    "start": "1556559",
    "end": "1564720"
  },
  {
    "text": "we have our own channel there and we also have a bi-weekly community meeting",
    "start": "1564720",
    "end": "1571120"
  },
  {
    "text": "that we haven't been doing for a while we're going to be getting it started again very shortly so stay tuned for",
    "start": "1571120",
    "end": "1578640"
  },
  {
    "text": "that um now it's time to talk about brigade 2.0 in the the future",
    "start": "1578640",
    "end": "1584400"
  },
  {
    "text": "of the project um so brigade 2.0 is going to usher in sort",
    "start": "1584400",
    "end": "1590400"
  },
  {
    "text": "of a nuanced shift from brigade as an event-driven",
    "start": "1590400",
    "end": "1595440"
  },
  {
    "text": "scripting for kubernetes platform to one that is event driven scripting",
    "start": "1595440",
    "end": "1602880"
  },
  {
    "text": "for kubernetes so so notes the the parentheses there so kubernetes",
    "start": "1602880",
    "end": "1609039"
  },
  {
    "text": "fades into the background and becomes a little bit more of an implementation of detail um although you know we're not planning",
    "start": "1609039",
    "end": "1615440"
  },
  {
    "text": "on supporting anything other than kubernetes but we want kubernetes to be a little bit",
    "start": "1615440",
    "end": "1620799"
  },
  {
    "text": "less um in your face as it were because we want to make brigade useful to",
    "start": "1620799",
    "end": "1626559"
  },
  {
    "text": "developers who don't necessarily have kubernetes expertise if you were paying",
    "start": "1626559",
    "end": "1632159"
  },
  {
    "text": "close attention to raju's demos none of the scripts that he",
    "start": "1632159",
    "end": "1637200"
  },
  {
    "text": "showed really had anything that was especially kubernetes specific",
    "start": "1637200",
    "end": "1642240"
  },
  {
    "text": "um within them so we think there's a lot of potential here for uh the power of brigade to be leveraged",
    "start": "1642240",
    "end": "1648960"
  },
  {
    "text": "by people who aren't necessarily um we're going to be building for the",
    "start": "1648960",
    "end": "1654159"
  },
  {
    "text": "enterprise we're going to be doing some things that we haven't done previously up until this point we've been super lightweight",
    "start": "1654159",
    "end": "1660159"
  },
  {
    "text": "up until this point um we're going to be getting i don't want to say heavier but we're going to be getting a little bit",
    "start": "1660159",
    "end": "1665679"
  },
  {
    "text": "more robust so we're going to be persisting project and event data outside of kubernetes in",
    "start": "1665679",
    "end": "1671840"
  },
  {
    "text": "a document store and we're going to be for sustaining log data outside computer meetings the laws",
    "start": "1671840",
    "end": "1677760"
  },
  {
    "text": "from your job studies and utilizing a message bus to do things like limit concurrent work both globally",
    "start": "1677760",
    "end": "1684720"
  },
  {
    "text": "and on a per project basis and to do some fair scheduling and things like",
    "start": "1684720",
    "end": "1691679"
  },
  {
    "text": "that and we hope that this paves the way for uh an expanded",
    "start": "1691679",
    "end": "1698080"
  },
  {
    "text": "ecosystem um so we'll be introducing a new api um bindings to that api for go",
    "start": "1698080",
    "end": "1705840"
  },
  {
    "text": "and uh improved support for alternative worker images so everything that you've",
    "start": "1705840",
    "end": "1712240"
  },
  {
    "text": "seen demo here today uses javascript to define pipelines but lots of people",
    "start": "1712240",
    "end": "1718000"
  },
  {
    "text": "have asked about using yaml or typescript or something",
    "start": "1718000",
    "end": "1724320"
  },
  {
    "text": "else to um to find their pipelines and and actually the previous kubecon we showed",
    "start": "1724320",
    "end": "1731679"
  },
  {
    "text": "a demo of that being done so once we have better support for these",
    "start": "1731679",
    "end": "1737919"
  },
  {
    "text": "alternative workers into brigade 2.0 you can probably look for official support for declarative",
    "start": "1737919",
    "end": "1744399"
  },
  {
    "text": "pipelines to follow up with",
    "start": "1744399",
    "end": "1748080"
  },
  {
    "text": "subsequent okay and the uh proposal for brigade",
    "start": "1750840",
    "end": "1757600"
  },
  {
    "text": "2.0 was uh as we're reporting this either um",
    "start": "1757600",
    "end": "1762960"
  },
  {
    "text": "recently ratified or about to be ratified in which case development",
    "start": "1762960",
    "end": "1768480"
  },
  {
    "text": "will be starting so probably by the time you see this video it's underway",
    "start": "1768480",
    "end": "1774159"
  },
  {
    "text": "um we are targeting an alpha release by the end of the year and hoping to be",
    "start": "1774159",
    "end": "1780000"
  },
  {
    "text": "ga in the middle of 2021",
    "start": "1780000",
    "end": "1785279"
  },
  {
    "text": "and with that we'll open it up to questions and answers",
    "start": "1785279",
    "end": "1795840"
  },
  {
    "text": "okay good morning hello",
    "start": "1798480",
    "end": "1804799"
  },
  {
    "text": "i'm not centered in my all right uh any questions from anybody",
    "start": "1806320",
    "end": "1823840"
  },
  {
    "text": "okay um we have a a question from bridget um and let me see if uh",
    "start": "1863120",
    "end": "1871278"
  },
  {
    "text": "here i'm publishing the question um i believe everybody can see it now but uh i'll i'll answer it here um she asks",
    "start": "1871600",
    "end": "1879120"
  },
  {
    "text": "on the 2.0 proposal do we see this as being brigade's final form or will it change",
    "start": "1879120",
    "end": "1885440"
  },
  {
    "text": "further um you know i i i see i see it as uh",
    "start": "1885440",
    "end": "1894000"
  },
  {
    "text": "well it's it's hard to answer um because i can't tell the future but i see it as being much closer to where we want to be",
    "start": "1894000",
    "end": "1901200"
  },
  {
    "text": "long term um the the the main thing about brigade 2.0 is",
    "start": "1901200",
    "end": "1907919"
  },
  {
    "text": "that it makes kubernetes more of an implementation detail um than it is today so i i believe that you",
    "start": "1907919",
    "end": "1914960"
  },
  {
    "text": "know in the unlikely event and i mean really unlikely event that you know kubernetes like becomes",
    "start": "1914960",
    "end": "1922080"
  },
  {
    "text": "obsolete or fades into obscurity or something like that that you know you you might see uh someday uh",
    "start": "1922080",
    "end": "1928399"
  },
  {
    "text": "a brigade 3.0 that that you know introduces support for um you know some kind of uh alternative",
    "start": "1928399",
    "end": "1936640"
  },
  {
    "text": "orchestrator or something like that um but you know at the at the moment i i see um",
    "start": "1936640",
    "end": "1942720"
  },
  {
    "text": "2.0 is as getting us as close to where we know we want to be as",
    "start": "1942720",
    "end": "1948640"
  },
  {
    "text": "as as we are aware if that answers the question",
    "start": "1948640",
    "end": "1963840"
  },
  {
    "text": "okay and jonathan asks how does brigade scale in terms of the amount of data possible to pass between jobs",
    "start": "1968399",
    "end": "1976880"
  },
  {
    "text": "um and workers um you know i uh i'll i'll let radu jump in",
    "start": "1976880",
    "end": "1984720"
  },
  {
    "text": "here if he thinks that that i misspeak at all um but you know some of the",
    "start": "1984720",
    "end": "1990480"
  },
  {
    "text": "different ways that are available to you of sharing jobs between",
    "start": "1990480",
    "end": "1995840"
  },
  {
    "text": "uh sorry sharing data between jobs would uh include using uh the file system so",
    "start": "1995840",
    "end": "2002240"
  },
  {
    "text": "you can have a you can have a read write many volume",
    "start": "2002240",
    "end": "2009919"
  },
  {
    "text": "such as an nfs volume or something like that attached to all of your jobs and so",
    "start": "2009919",
    "end": "2016559"
  },
  {
    "text": "they can actually share a file system so i guess the the the question in terms of limits is you",
    "start": "2016559",
    "end": "2022559"
  },
  {
    "text": "know how big of a file can you write um and i'll i'll let radu correct me if",
    "start": "2022559",
    "end": "2028080"
  },
  {
    "text": "he thinks that's wrong yeah i think you're right in both cases essentially you can pass data either as",
    "start": "2028080",
    "end": "2034799"
  },
  {
    "text": "standard input or arguments for the job you're about to start or uh write the data in a volume that",
    "start": "2034799",
    "end": "2042559"
  },
  {
    "text": "you can share between jobs either way there's no technical limit that either brigade or",
    "start": "2042559",
    "end": "2047919"
  },
  {
    "text": "linux imposes on the file size that being said we've usually guided people towards uh using standard",
    "start": "2047919",
    "end": "2055520"
  },
  {
    "text": "input if they have very quick output from one container to the other and they can use standard input for that",
    "start": "2055520",
    "end": "2061679"
  },
  {
    "text": "and use actual kubernetes volumes for something more robust where you want to pass multiple files or larger amounts of data",
    "start": "2061679",
    "end": "2069679"
  },
  {
    "text": "that being said both of them should work as well",
    "start": "2069679",
    "end": "2075839"
  },
  {
    "text": "there's another question does running the script have the possibility of accessing the shared storage um",
    "start": "2083359",
    "end": "2091760"
  },
  {
    "text": "so this whenever running the script the script will actually orchestrate",
    "start": "2091760",
    "end": "2097680"
  },
  {
    "text": "starting the jobs and attaching the volumes uh so",
    "start": "2097680",
    "end": "2103040"
  },
  {
    "text": "technically i technically you do have access to it but it's not exposed in in the api that",
    "start": "2103040",
    "end": "2108960"
  },
  {
    "text": "you're using so if you if you need to access shared storage the recommended way of doing that",
    "start": "2108960",
    "end": "2114000"
  },
  {
    "text": "is by starting a job and accessing the storage there i would be curious to understand the the",
    "start": "2114000",
    "end": "2120720"
  },
  {
    "text": "use case for accessing the shared storage from brigadejs itself yeah can i comment on this as as well",
    "start": "2120720",
    "end": "2127760"
  },
  {
    "text": "radu um so so yeah the as things stand currently um the",
    "start": "2127760",
    "end": "2135200"
  },
  {
    "text": "shared storage um is created by the worker um so the worker is the",
    "start": "2135200",
    "end": "2140960"
  },
  {
    "text": "thing that's executing your brigade.js so during the execution",
    "start": "2140960",
    "end": "2146160"
  },
  {
    "text": "of the script um the shared storage gets created and and then control gets passed to your",
    "start": "2146160",
    "end": "2153440"
  },
  {
    "text": "script um because the shared storage is created",
    "start": "2153440",
    "end": "2158560"
  },
  {
    "text": "by the worker um it's too late to mount that volume into the worker so your your",
    "start": "2158560",
    "end": "2166160"
  },
  {
    "text": "script does not currently have direct access to that volume",
    "start": "2166160",
    "end": "2171280"
  },
  {
    "text": "um but this isn't the first time we've heard this question um people have asked about this before",
    "start": "2171280",
    "end": "2178240"
  },
  {
    "text": "um and while i might not be entirely clear about the use case it's it's been it's been requested often",
    "start": "2178240",
    "end": "2185359"
  },
  {
    "text": "enough that i i foresee this changing in brigade 2.0 especially because as",
    "start": "2185359",
    "end": "2193119"
  },
  {
    "text": "we're trying to add better support for alternative workers",
    "start": "2193119",
    "end": "2198160"
  },
  {
    "text": "we want to um lower the bar um for what it takes to",
    "start": "2198160",
    "end": "2203440"
  },
  {
    "text": "um you know implement um you know a custom worker which means",
    "start": "2203440",
    "end": "2208560"
  },
  {
    "text": "offloading as as much responsibility to kind of the brigade core",
    "start": "2208560",
    "end": "2215040"
  },
  {
    "text": "as possible so so definitely i foresee this changing in brigade 2.0 where by the time a",
    "start": "2215040",
    "end": "2224000"
  },
  {
    "text": "worker launches the shared volume um has already been created and can be mounted",
    "start": "2224000",
    "end": "2230160"
  },
  {
    "text": "into the worker itself if if it needs to be accessed so um i do foresee that changing and i",
    "start": "2230160",
    "end": "2236320"
  },
  {
    "text": "hope that answers your question and backing up on my question a little bit uh while we well",
    "start": "2236320",
    "end": "2243119"
  },
  {
    "text": "uh the workflow can describe is accurate for default shared storage in brigade",
    "start": "2243119",
    "end": "2248160"
  },
  {
    "text": "uh there's nothing stopping you from importing via kubernetes javascript library client",
    "start": "2248160",
    "end": "2254400"
  },
  {
    "text": "library in brigadejs and creating a volume there and then manually mounting it so you",
    "start": "2254400",
    "end": "2260800"
  },
  {
    "text": "have that option and i think the document on docs.brigade.sage we have a few examples",
    "start": "2260800",
    "end": "2265920"
  },
  {
    "text": "of actually importing the kubernetes javascript client and starting creating namespaces",
    "start": "2265920",
    "end": "2271839"
  },
  {
    "text": "and things like that so you definitely have that option there although it's not necessarily straightforward",
    "start": "2271839",
    "end": "2285838"
  },
  {
    "text": "okay and i think that's it uh for questions i guess so we're going to uh wrap up and thank you all for",
    "start": "2328720",
    "end": "2335839"
  },
  {
    "text": "um coming to our talk thank you enjoy the rest of your",
    "start": "2335839",
    "end": "2341240"
  },
  {
    "text": "conference",
    "start": "2341240",
    "end": "2344240"
  }
]