[
  {
    "text": "welcome this is the afternoon track of",
    "start": "199",
    "end": "2360"
  },
  {
    "text": "app developer con my name is Carlos",
    "start": "2360",
    "end": "4920"
  },
  {
    "text": "Santana I'm a senior specialist Essay",
    "start": "4920",
    "end": "7240"
  },
  {
    "text": "with",
    "start": "7240",
    "end": "7920"
  },
  {
    "text": "AWS and we have here my co-speaker",
    "start": "7920",
    "end": "12880"
  },
  {
    "text": "meik and we here to talk about mainly",
    "start": "14080",
    "end": "17720"
  },
  {
    "text": "orchestration versus choreography",
    "start": "17720",
    "end": "19880"
  },
  {
    "text": "patterns on uh event applications and um",
    "start": "19880",
    "end": "22840"
  },
  {
    "text": "instances in kubernetes we'll talk a",
    "start": "22840",
    "end": "24400"
  },
  {
    "text": "little bit about residency and",
    "start": "24400",
    "end": "26359"
  },
  {
    "text": "scalability so I'll give it to me soon",
    "start": "26359",
    "end": "28960"
  },
  {
    "text": "to get it started go",
    "start": "28960",
    "end": "32198"
  },
  {
    "text": "ahead hello everyone so let me start",
    "start": "32680",
    "end": "35600"
  },
  {
    "text": "with the whole context around why you",
    "start": "35600",
    "end": "37320"
  },
  {
    "text": "want to build event driven architectures",
    "start": "37320",
    "end": "39640"
  },
  {
    "text": "what is the whole reason why we are here",
    "start": "39640",
    "end": "42200"
  },
  {
    "text": "and what problem does it",
    "start": "42200",
    "end": "45199"
  },
  {
    "text": "solve so some of the benefits of",
    "start": "45199",
    "end": "47680"
  },
  {
    "text": "building event driven architectures",
    "start": "47680",
    "end": "49960"
  },
  {
    "text": "traditionally we have build apps which",
    "start": "49960",
    "end": "52199"
  },
  {
    "text": "use apis microservices one of the uh",
    "start": "52199",
    "end": "56440"
  },
  {
    "text": "service the front end service calling a",
    "start": "56440",
    "end": "58640"
  },
  {
    "text": "middle tier it or inter turn calls",
    "start": "58640",
    "end": "61039"
  },
  {
    "text": "another microservice using an API and it",
    "start": "61039",
    "end": "63359"
  },
  {
    "text": "fulfills a certain business",
    "start": "63359",
    "end": "64680"
  },
  {
    "text": "functionality but what it leads to is a",
    "start": "64680",
    "end": "67119"
  },
  {
    "text": "lot of interconnectivity lot of",
    "start": "67119",
    "end": "68960"
  },
  {
    "text": "dependencies and a lot of uh challenges",
    "start": "68960",
    "end": "71759"
  },
  {
    "text": "with respect to maintenance and building",
    "start": "71759",
    "end": "74080"
  },
  {
    "text": "making more agile systems so the goal of",
    "start": "74080",
    "end": "76759"
  },
  {
    "text": "event architecture is to make it more",
    "start": "76759",
    "end": "78920"
  },
  {
    "text": "fall tolerant so that if one of the",
    "start": "78920",
    "end": "80759"
  },
  {
    "text": "systems or microservices were to go down",
    "start": "80759",
    "end": "83040"
  },
  {
    "text": "you're still able to operate it gives",
    "start": "83040",
    "end": "85159"
  },
  {
    "text": "you that scalability since you're now",
    "start": "85159",
    "end": "87240"
  },
  {
    "text": "trying to build uh microservices with",
    "start": "87240",
    "end": "89960"
  },
  {
    "text": "are connected with events you're able to",
    "start": "89960",
    "end": "91960"
  },
  {
    "text": "scale them independently without having",
    "start": "91960",
    "end": "94399"
  },
  {
    "text": "to change everything that's that's",
    "start": "94399",
    "end": "97000"
  },
  {
    "text": "involved in it you're able to have small",
    "start": "97000",
    "end": "99439"
  },
  {
    "text": "systems and uh which are using",
    "start": "99439",
    "end": "101720"
  },
  {
    "text": "asynchronous communication to connect",
    "start": "101720",
    "end": "103799"
  },
  {
    "text": "each other it is extensible because",
    "start": "103799",
    "end": "106159"
  },
  {
    "text": "you're now able to bring in new",
    "start": "106159",
    "end": "108079"
  },
  {
    "text": "functionality as you need because you'll",
    "start": "108079",
    "end": "110439"
  },
  {
    "text": "be using what we call as an event broker",
    "start": "110439",
    "end": "113079"
  },
  {
    "text": "and that event broker is the channel",
    "start": "113079",
    "end": "115240"
  },
  {
    "text": "through which all these microservices",
    "start": "115240",
    "end": "117000"
  },
  {
    "text": "are able to communicate using what is",
    "start": "117000",
    "end": "118920"
  },
  {
    "text": "called as a publish sub describe type of",
    "start": "118920",
    "end": "120479"
  },
  {
    "text": "a pattern and it makes it more",
    "start": "120479",
    "end": "122560"
  },
  {
    "text": "extensible because you as your",
    "start": "122560",
    "end": "125079"
  },
  {
    "text": "businesses evolve you need to bring in",
    "start": "125079",
    "end": "127159"
  },
  {
    "text": "new functionality you simply connect",
    "start": "127159",
    "end": "129039"
  },
  {
    "text": "them to that event broker without",
    "start": "129039",
    "end": "130840"
  },
  {
    "text": "impacting any of the other pieces in",
    "start": "130840",
    "end": "132760"
  },
  {
    "text": "your architecture it gives you that",
    "start": "132760",
    "end": "134760"
  },
  {
    "text": "agility because you're not dependent so",
    "start": "134760",
    "end": "137879"
  },
  {
    "text": "your your teams can think more quickly",
    "start": "137879",
    "end": "140640"
  },
  {
    "text": "they can bring in new functionality uh",
    "start": "140640",
    "end": "143280"
  },
  {
    "text": "and they can build",
    "start": "143280",
    "end": "146160"
  },
  {
    "text": "faster so as I briefly mentioned in an",
    "start": "146239",
    "end": "149200"
  },
  {
    "text": "event of an architecture systems and",
    "start": "149200",
    "end": "150840"
  },
  {
    "text": "development teams communicate via events",
    "start": "150840",
    "end": "153640"
  },
  {
    "text": "so unlike the uh conventional API driven",
    "start": "153640",
    "end": "156959"
  },
  {
    "text": "way where you are making an arrest API",
    "start": "156959",
    "end": "159680"
  },
  {
    "text": "call for example here you basically use",
    "start": "159680",
    "end": "163200"
  },
  {
    "text": "a a middleware or an event broker to act",
    "start": "163200",
    "end": "166280"
  },
  {
    "text": "as that intermediary through which the",
    "start": "166280",
    "end": "168400"
  },
  {
    "text": "systems or microservices are able to",
    "start": "168400",
    "end": "170480"
  },
  {
    "text": "communicate uh as you can see here in",
    "start": "170480",
    "end": "172400"
  },
  {
    "text": "the picture you have the producer or the",
    "start": "172400",
    "end": "175920"
  },
  {
    "text": "application which generates that event",
    "start": "175920",
    "end": "178159"
  },
  {
    "text": "an event is nothing but a state change",
    "start": "178159",
    "end": "180480"
  },
  {
    "text": "it basically indicates uh for example an",
    "start": "180480",
    "end": "183720"
  },
  {
    "text": "order has been placed order has been",
    "start": "183720",
    "end": "185879"
  },
  {
    "text": "cancelled a transaction has been placed",
    "start": "185879",
    "end": "188239"
  },
  {
    "text": "and so on so anything that's has",
    "start": "188239",
    "end": "189920"
  },
  {
    "text": "happened in the past you that you cannot",
    "start": "189920",
    "end": "192000"
  },
  {
    "text": "change you can have another compensating",
    "start": "192000",
    "end": "194280"
  },
  {
    "text": "event but as such you cannot go and",
    "start": "194280",
    "end": "196280"
  },
  {
    "text": "change it so that event is then uh",
    "start": "196280",
    "end": "198599"
  },
  {
    "text": "transmitted onto an event broker and",
    "start": "198599",
    "end": "200879"
  },
  {
    "text": "based on rules you have subscribers",
    "start": "200879",
    "end": "203560"
  },
  {
    "text": "which basically consume that event and",
    "start": "203560",
    "end": "206120"
  },
  {
    "text": "communicate with each other as you can",
    "start": "206120",
    "end": "208200"
  },
  {
    "text": "see here the benefit here is that these",
    "start": "208200",
    "end": "210599"
  },
  {
    "text": "consumers are able to connect with that",
    "start": "210599",
    "end": "212560"
  },
  {
    "text": "event broker independently and there is",
    "start": "212560",
    "end": "215040"
  },
  {
    "text": "no direct dependency uh with the",
    "start": "215040",
    "end": "217480"
  },
  {
    "text": "producer the only thing that it needs to",
    "start": "217480",
    "end": "219480"
  },
  {
    "text": "be aware of is the schema for that",
    "start": "219480",
    "end": "223599"
  },
  {
    "text": "event so going further around",
    "start": "223720",
    "end": "226560"
  },
  {
    "text": "choreography and orchestration the the",
    "start": "226560",
    "end": "229280"
  },
  {
    "text": "whole idea of this talk was to take you",
    "start": "229280",
    "end": "231439"
  },
  {
    "text": "through some of these patterns so what",
    "start": "231439",
    "end": "233799"
  },
  {
    "text": "what does choreography and orchestration",
    "start": "233799",
    "end": "236079"
  },
  {
    "text": "solve so as you most of you would uh you",
    "start": "236079",
    "end": "240120"
  },
  {
    "text": "know know that in order to build",
    "start": "240120",
    "end": "242079"
  },
  {
    "text": "something which is customer facing you",
    "start": "242079",
    "end": "244840"
  },
  {
    "text": "need to have more than one micros",
    "start": "244840",
    "end": "247439"
  },
  {
    "text": "service talking to each other and this",
    "start": "247439",
    "end": "249519"
  },
  {
    "text": "is where you need to have something like",
    "start": "249519",
    "end": "252280"
  },
  {
    "text": "a orchestration or your choreography",
    "start": "252280",
    "end": "254760"
  },
  {
    "text": "coming into play as you can see here in",
    "start": "254760",
    "end": "257160"
  },
  {
    "text": "this picture the we are we have a order",
    "start": "257160",
    "end": "260040"
  },
  {
    "text": "that got created but as part of that",
    "start": "260040",
    "end": "262160"
  },
  {
    "text": "order creation the back end needs to do",
    "start": "262160",
    "end": "264600"
  },
  {
    "text": "multiple things right it may need to do",
    "start": "264600",
    "end": "267160"
  },
  {
    "text": "a pre-authorization on a credit card",
    "start": "267160",
    "end": "269280"
  },
  {
    "text": "just to make sure that the you know uh",
    "start": "269280",
    "end": "272240"
  },
  {
    "text": "the customer has has that uh amount",
    "start": "272240",
    "end": "275440"
  },
  {
    "text": "through his credit card or his credit",
    "start": "275440",
    "end": "277199"
  },
  {
    "text": "card and then uh we get a",
    "start": "277199",
    "end": "279199"
  },
  {
    "text": "pre-authorization once that",
    "start": "279199",
    "end": "280639"
  },
  {
    "text": "pre-authorization is done then you",
    "start": "280639",
    "end": "282320"
  },
  {
    "text": "actually make a a call to the payment",
    "start": "282320",
    "end": "284639"
  },
  {
    "text": "gateway to apply or deduct that kind of",
    "start": "284639",
    "end": "287320"
  },
  {
    "text": "an amount and finally you go and apply",
    "start": "287320",
    "end": "290320"
  },
  {
    "text": "the same transaction onto an accounting",
    "start": "290320",
    "end": "292400"
  },
  {
    "text": "system for that particular business",
    "start": "292400",
    "end": "294120"
  },
  {
    "text": "who's who's the merchant for this so all",
    "start": "294120",
    "end": "296440"
  },
  {
    "text": "these typically would be in different",
    "start": "296440",
    "end": "298639"
  },
  {
    "text": "microservices now given that we're",
    "start": "298639",
    "end": "300840"
  },
  {
    "text": "talking about uh event driven",
    "start": "300840",
    "end": "302720"
  },
  {
    "text": "architecture and you want to make",
    "start": "302720",
    "end": "304680"
  },
  {
    "text": "systems as Loosely coupled as possible",
    "start": "304680",
    "end": "308039"
  },
  {
    "text": "how do you achieve this you obviously",
    "start": "308039",
    "end": "310160"
  },
  {
    "text": "don't want to have like a two-phase",
    "start": "310160",
    "end": "312320"
  },
  {
    "text": "commit or you don't want to uh have a",
    "start": "312320",
    "end": "315080"
  },
  {
    "text": "transaction which is spanning across all",
    "start": "315080",
    "end": "317039"
  },
  {
    "text": "these microservices you may have a",
    "start": "317039",
    "end": "319199"
  },
  {
    "text": "situation where all these microservices",
    "start": "319199",
    "end": "321600"
  },
  {
    "text": "may have a purpose-built database right",
    "start": "321600",
    "end": "324199"
  },
  {
    "text": "one of them may be using a relational",
    "start": "324199",
    "end": "326280"
  },
  {
    "text": "database the other one may be using uh a",
    "start": "326280",
    "end": "329600"
  },
  {
    "text": "for example a no SQL database and so on",
    "start": "329600",
    "end": "332479"
  },
  {
    "text": "so how do you achieve such a business",
    "start": "332479",
    "end": "334280"
  },
  {
    "text": "functionality you may also need to have",
    "start": "334280",
    "end": "337160"
  },
  {
    "text": "ordering maintainance that needs to be",
    "start": "337160",
    "end": "339360"
  },
  {
    "text": "handled in the in a sequence and these",
    "start": "339360",
    "end": "342240"
  },
  {
    "text": "business requir requirements May evolve",
    "start": "342240",
    "end": "344759"
  },
  {
    "text": "so you don't want to be bringing in",
    "start": "344759",
    "end": "346520"
  },
  {
    "text": "coupling between these microservices",
    "start": "346520",
    "end": "348800"
  },
  {
    "text": "this is exactly",
    "start": "348800",
    "end": "350400"
  },
  {
    "text": "where the solution with a saga pattern",
    "start": "350400",
    "end": "353319"
  },
  {
    "text": "comes play it comes into picture so as",
    "start": "353319",
    "end": "355639"
  },
  {
    "text": "you can see here the what the Saga",
    "start": "355639",
    "end": "357440"
  },
  {
    "text": "pattern does is it basically a sequence",
    "start": "357440",
    "end": "359520"
  },
  {
    "text": "quence of local transactions so in other",
    "start": "359520",
    "end": "362479"
  },
  {
    "text": "words the first microservice for example",
    "start": "362479",
    "end": "365639"
  },
  {
    "text": "may be doing a certain transaction",
    "start": "365639",
    "end": "367800"
  },
  {
    "text": "applying it onto a relational database",
    "start": "367800",
    "end": "370319"
  },
  {
    "text": "and then generating an event that we",
    "start": "370319",
    "end": "372599"
  },
  {
    "text": "passed on to the second microservice and",
    "start": "372599",
    "end": "375000"
  },
  {
    "text": "then event of a failure in those cases",
    "start": "375000",
    "end": "378120"
  },
  {
    "text": "you need to be able to have something",
    "start": "378120",
    "end": "379639"
  },
  {
    "text": "called as a compensating transaction so",
    "start": "379639",
    "end": "382680"
  },
  {
    "text": "the picture as you can see here is",
    "start": "382680",
    "end": "384280"
  },
  {
    "text": "showing that each local transaction",
    "start": "384280",
    "end": "385800"
  },
  {
    "text": "updates the database publish a message",
    "start": "385800",
    "end": "388080"
  },
  {
    "text": "or EV went to trigger the next local",
    "start": "388080",
    "end": "389720"
  },
  {
    "text": "transaction and then for error handling",
    "start": "389720",
    "end": "392120"
  },
  {
    "text": "you need to have similarly like a uh",
    "start": "392120",
    "end": "394360"
  },
  {
    "text": "reversing transaction if you may or",
    "start": "394360",
    "end": "397840"
  },
  {
    "text": "compensating so the two options for",
    "start": "398199",
    "end": "400639"
  },
  {
    "text": "implementing Saga the first one is",
    "start": "400639",
    "end": "402759"
  },
  {
    "text": "called a choreography based Saga in the",
    "start": "402759",
    "end": "405240"
  },
  {
    "text": "case of a choreography based Saga what",
    "start": "405240",
    "end": "407560"
  },
  {
    "text": "happens is you have an event broker or a",
    "start": "407560",
    "end": "409880"
  },
  {
    "text": "message broker as we know more commonly",
    "start": "409880",
    "end": "413080"
  },
  {
    "text": "and the microservices basically just",
    "start": "413080",
    "end": "415639"
  },
  {
    "text": "independently publish And subscribe",
    "start": "415639",
    "end": "417840"
  },
  {
    "text": "events as they need to",
    "start": "417840",
    "end": "420039"
  },
  {
    "text": "what it means is that when a EV when a",
    "start": "420039",
    "end": "423199"
  },
  {
    "text": "uh event occurs the first microservice",
    "start": "423199",
    "end": "425319"
  },
  {
    "text": "may be putting it onto the bus or the",
    "start": "425319",
    "end": "427879"
  },
  {
    "text": "event broker or the event bus and then",
    "start": "427879",
    "end": "429879"
  },
  {
    "text": "the other microservices May Simply Be",
    "start": "429879",
    "end": "431759"
  },
  {
    "text": "subscribing to that event bus based on",
    "start": "431759",
    "end": "434280"
  },
  {
    "text": "certain rules for example uh when an",
    "start": "434280",
    "end": "437199"
  },
  {
    "text": "order is created you may have multiple",
    "start": "437199",
    "end": "440160"
  },
  {
    "text": "microservices which may need to act uh",
    "start": "440160",
    "end": "443120"
  },
  {
    "text": "on on that same event in different ways",
    "start": "443120",
    "end": "445520"
  },
  {
    "text": "one of them may be related to a",
    "start": "445520",
    "end": "447560"
  },
  {
    "text": "financial aspect of it meaning that it",
    "start": "447560",
    "end": "449800"
  },
  {
    "text": "may go and update the customers account",
    "start": "449800",
    "end": "452400"
  },
  {
    "text": "then may be one which may be just simply",
    "start": "452400",
    "end": "454080"
  },
  {
    "text": "taking that event and put it putting it",
    "start": "454080",
    "end": "456280"
  },
  {
    "text": "into a data Lake there will one which",
    "start": "456280",
    "end": "458440"
  },
  {
    "text": "may be more from an analytics point of",
    "start": "458440",
    "end": "460160"
  },
  {
    "text": "view and identifying if there is some",
    "start": "460160",
    "end": "462319"
  },
  {
    "text": "kind of a trend or some kind of an alert",
    "start": "462319",
    "end": "465159"
  },
  {
    "text": "that need generated because of some kind",
    "start": "465159",
    "end": "467440"
  },
  {
    "text": "of fraud kind of an event so all these",
    "start": "467440",
    "end": "470120"
  },
  {
    "text": "may just uh go and subscribe to that",
    "start": "470120",
    "end": "472960"
  },
  {
    "text": "same event broker based on certain",
    "start": "472960",
    "end": "475000"
  },
  {
    "text": "filters or certain subscription criteria",
    "start": "475000",
    "end": "478360"
  },
  {
    "text": "uh of of that event based on event",
    "start": "478360",
    "end": "480560"
  },
  {
    "text": "attribute orchestration based Saga on",
    "start": "480560",
    "end": "483039"
  },
  {
    "text": "the other hand is the one where uh you",
    "start": "483039",
    "end": "485759"
  },
  {
    "text": "have a central orchestrator so imagine",
    "start": "485759",
    "end": "488039"
  },
  {
    "text": "the use cases where you basically need",
    "start": "488039",
    "end": "490479"
  },
  {
    "text": "to execute them in in a certain sequence",
    "start": "490479",
    "end": "493520"
  },
  {
    "text": "and you want to control the order in",
    "start": "493520",
    "end": "495039"
  },
  {
    "text": "which this happens it also helps you",
    "start": "495039",
    "end": "497520"
  },
  {
    "text": "with uh visualizing that what are the",
    "start": "497520",
    "end": "500240"
  },
  {
    "text": "different microservices that are I'm",
    "start": "500240",
    "end": "501919"
  },
  {
    "text": "calling what happens if there's an",
    "start": "501919",
    "end": "503879"
  },
  {
    "text": "exception how many times do I need to",
    "start": "503879",
    "end": "505840"
  },
  {
    "text": "retry and you know how do I log these",
    "start": "505840",
    "end": "508479"
  },
  {
    "text": "errors so if your requirements are more",
    "start": "508479",
    "end": "511280"
  },
  {
    "text": "around that then you typically would",
    "start": "511280",
    "end": "513240"
  },
  {
    "text": "want to use what is called as an",
    "start": "513240",
    "end": "514599"
  },
  {
    "text": "orchestration based",
    "start": "514599",
    "end": "516479"
  },
  {
    "text": "Saga so diving deeper in the case of",
    "start": "516479",
    "end": "520279"
  },
  {
    "text": "event choreography as I briefly",
    "start": "520279",
    "end": "522440"
  },
  {
    "text": "mentioned that you have a event broker",
    "start": "522440",
    "end": "525040"
  },
  {
    "text": "on which you have different",
    "start": "525040",
    "end": "526240"
  },
  {
    "text": "microservices basically publishing and",
    "start": "526240",
    "end": "528440"
  },
  {
    "text": "subscribing uh the events there's no",
    "start": "528440",
    "end": "531399"
  },
  {
    "text": "centralized logic as such meaning that",
    "start": "531399",
    "end": "533720"
  },
  {
    "text": "you can have new microservice or new",
    "start": "533720",
    "end": "535800"
  },
  {
    "text": "Publishers subscribers coming in and uh",
    "start": "535800",
    "end": "539240"
  },
  {
    "text": "subscribing to these events as the need",
    "start": "539240",
    "end": "541200"
  },
  {
    "text": "to uh the only thing that need to they",
    "start": "541200",
    "end": "543360"
  },
  {
    "text": "need to do is basically have that",
    "start": "543360",
    "end": "544920"
  },
  {
    "text": "selection criteria for that",
    "start": "544920",
    "end": "547320"
  },
  {
    "text": "event this is mostly used for publishing",
    "start": "547320",
    "end": "549880"
  },
  {
    "text": "events across business domains so if",
    "start": "549880",
    "end": "552279"
  },
  {
    "text": "you're coming from a domain driven",
    "start": "552279",
    "end": "554000"
  },
  {
    "text": "design point of view and you have gone",
    "start": "554000",
    "end": "556120"
  },
  {
    "text": "through some of those Concepts you're",
    "start": "556120",
    "end": "558000"
  },
  {
    "text": "likely to have seen how you uh have",
    "start": "558000",
    "end": "561320"
  },
  {
    "text": "different uh business domains and how",
    "start": "561320",
    "end": "563880"
  },
  {
    "text": "you create this uh context maps and the",
    "start": "563880",
    "end": "566560"
  },
  {
    "text": "dependencies between them now as you",
    "start": "566560",
    "end": "569240"
  },
  {
    "text": "start building microservices that are",
    "start": "569240",
    "end": "571240"
  },
  {
    "text": "aligned to those domains domains you'll",
    "start": "571240",
    "end": "573920"
  },
  {
    "text": "you'll realize that you need to have",
    "start": "573920",
    "end": "575839"
  },
  {
    "text": "certain patterns on how you exchange",
    "start": "575839",
    "end": "577920"
  },
  {
    "text": "events that are across these business",
    "start": "577920",
    "end": "580240"
  },
  {
    "text": "domains and events that are within the",
    "start": "580240",
    "end": "582560"
  },
  {
    "text": "same business domain so the event craphy",
    "start": "582560",
    "end": "586079"
  },
  {
    "text": "typically is used when you your one",
    "start": "586079",
    "end": "588480"
  },
  {
    "text": "business domain is wants to generate an",
    "start": "588480",
    "end": "590720"
  },
  {
    "text": "event that needs to be consumed by",
    "start": "590720",
    "end": "592360"
  },
  {
    "text": "another business event and in those",
    "start": "592360",
    "end": "594320"
  },
  {
    "text": "cases an event bus acts as the most",
    "start": "594320",
    "end": "596839"
  },
  {
    "text": "scalable and the most flexible way to",
    "start": "596839",
    "end": "599120"
  },
  {
    "text": "publish those events and have an event",
    "start": "599120",
    "end": "602839"
  },
  {
    "text": "choreography event orchestration on the",
    "start": "603320",
    "end": "606040"
  },
  {
    "text": "other hand involves a centralized event",
    "start": "606040",
    "end": "608720"
  },
  {
    "text": "broker and what the centralized event",
    "start": "608720",
    "end": "610839"
  },
  {
    "text": "broker as I said is is you use another",
    "start": "610839",
    "end": "614040"
  },
  {
    "text": "service or another part or component in",
    "start": "614040",
    "end": "616800"
  },
  {
    "text": "your architecture whose sole",
    "start": "616800",
    "end": "618760"
  },
  {
    "text": "responsibility is to control the order",
    "start": "618760",
    "end": "622160"
  },
  {
    "text": "in which these micros services are being",
    "start": "622160",
    "end": "624000"
  },
  {
    "text": "executed most commonly you will see that",
    "start": "624000",
    "end": "626959"
  },
  {
    "text": "this pattern is used when you have",
    "start": "626959",
    "end": "629279"
  },
  {
    "text": "microservices which are within the same",
    "start": "629279",
    "end": "631360"
  },
  {
    "text": "domain as I showed you in the other",
    "start": "631360",
    "end": "633640"
  },
  {
    "text": "example previous example for payment",
    "start": "633640",
    "end": "636360"
  },
  {
    "text": "processing uh in in case of an",
    "start": "636360",
    "end": "638279"
  },
  {
    "text": "orchestration and we will see it in demo",
    "start": "638279",
    "end": "640120"
  },
  {
    "text": "as well uh where once you get a certain",
    "start": "640120",
    "end": "643200"
  },
  {
    "text": "event you may have to go through",
    "start": "643200",
    "end": "645360"
  },
  {
    "text": "multiple systems and look at multiple uh",
    "start": "645360",
    "end": "648839"
  },
  {
    "text": "flow sort of uh components in your",
    "start": "648839",
    "end": "651639"
  },
  {
    "text": "workflow before you generate a final",
    "start": "651639",
    "end": "653880"
  },
  {
    "text": "event and that is what orchestration",
    "start": "653880",
    "end": "655839"
  },
  {
    "text": "allows you to do it is easier to",
    "start": "655839",
    "end": "657519"
  },
  {
    "text": "visualize and you're able to to control",
    "start": "657519",
    "end": "659440"
  },
  {
    "text": "the order and uh it is typically used",
    "start": "659440",
    "end": "662839"
  },
  {
    "text": "for orchestrating events within the",
    "start": "662839",
    "end": "665320"
  },
  {
    "text": "business domain so I as I said that",
    "start": "665320",
    "end": "667680"
  },
  {
    "text": "across domains you would typically want",
    "start": "667680",
    "end": "669639"
  },
  {
    "text": "to use uh choreography but if you're",
    "start": "669639",
    "end": "672040"
  },
  {
    "text": "trying to coordinate or rather",
    "start": "672040",
    "end": "673440"
  },
  {
    "text": "orchestrate microservices within the",
    "start": "673440",
    "end": "675360"
  },
  {
    "text": "same business domain orchestrator uh or",
    "start": "675360",
    "end": "678320"
  },
  {
    "text": "orchestration gives you that flexibility",
    "start": "678320",
    "end": "680480"
  },
  {
    "text": "if you're using an orchestrator uh you",
    "start": "680480",
    "end": "682680"
  },
  {
    "text": "can not only use asynchronous",
    "start": "682680",
    "end": "685040"
  },
  {
    "text": "communication but also you can use",
    "start": "685040",
    "end": "687560"
  },
  {
    "text": "synchronous API call as well well you",
    "start": "687560",
    "end": "689600"
  },
  {
    "text": "have that flexibility uh in AWS we have",
    "start": "689600",
    "end": "692880"
  },
  {
    "text": "a service called AWS step functions",
    "start": "692880",
    "end": "695279"
  },
  {
    "text": "which basically gives you that",
    "start": "695279",
    "end": "696519"
  },
  {
    "text": "capability to have a cloud native",
    "start": "696519",
    "end": "699240"
  },
  {
    "text": "service for orchestrating microservice",
    "start": "699240",
    "end": "701360"
  },
  {
    "text": "it works across over 200 microservice",
    "start": "701360",
    "end": "704480"
  },
  {
    "text": "Services Integrations that you have uh",
    "start": "704480",
    "end": "706800"
  },
  {
    "text": "you can invoke for example uh a kuber",
    "start": "706800",
    "end": "709920"
  },
  {
    "text": "job you can have a Lambda function being",
    "start": "709920",
    "end": "712519"
  },
  {
    "text": "being invoked and you can orchestrate",
    "start": "712519",
    "end": "714600"
  },
  {
    "text": "them",
    "start": "714600",
    "end": "716920"
  },
  {
    "text": "together so we have a demo for a managed",
    "start": "716959",
    "end": "720560"
  },
  {
    "text": "care plan so this basically uh shows how",
    "start": "720560",
    "end": "724560"
  },
  {
    "text": "a Eda is in practice or how it is used",
    "start": "724560",
    "end": "728880"
  },
  {
    "text": "uh in a real world scenario so for",
    "start": "728880",
    "end": "731360"
  },
  {
    "text": "example in this case I'm showing one",
    "start": "731360",
    "end": "733760"
  },
  {
    "text": "domain which is like a provider uh",
    "start": "733760",
    "end": "735839"
  },
  {
    "text": "management so if folks coming from",
    "start": "735839",
    "end": "737760"
  },
  {
    "text": "Healthcare background uh this may",
    "start": "737760",
    "end": "740160"
  },
  {
    "text": "resonate uh much better let's say you",
    "start": "740160",
    "end": "743040"
  },
  {
    "text": "have a doctor or a nurse who's",
    "start": "743040",
    "end": "745320"
  },
  {
    "text": "publishing their availability in terms",
    "start": "745320",
    "end": "747079"
  },
  {
    "text": "of the services they provide so you have",
    "start": "747079",
    "end": "749480"
  },
  {
    "text": "this domain provider management where",
    "start": "749480",
    "end": "751360"
  },
  {
    "text": "they're saying that uh they published",
    "start": "751360",
    "end": "753120"
  },
  {
    "text": "their availability that I'm available at",
    "start": "753120",
    "end": "754880"
  },
  {
    "text": "this time and then you have something",
    "start": "754880",
    "end": "757120"
  },
  {
    "text": "called as a patient care plan so think",
    "start": "757120",
    "end": "759399"
  },
  {
    "text": "of it as like an app that you may have",
    "start": "759399",
    "end": "761560"
  },
  {
    "text": "on your phone for example and you simply",
    "start": "761560",
    "end": "763680"
  },
  {
    "text": "go there and say that hey I want to see",
    "start": "763680",
    "end": "766720"
  },
  {
    "text": "a doctor this is the speciality I have",
    "start": "766720",
    "end": "769240"
  },
  {
    "text": "this is the language that I want the my",
    "start": "769240",
    "end": "771639"
  },
  {
    "text": "provider to speak and you know these are",
    "start": "771639",
    "end": "773839"
  },
  {
    "text": "the times that I have I would like to",
    "start": "773839",
    "end": "775440"
  },
  {
    "text": "schedule it as you can imagine this can",
    "start": "775440",
    "end": "778120"
  },
  {
    "text": "be in two different sub systems Al",
    "start": "778120",
    "end": "780639"
  },
  {
    "text": "together and it gives you a classic way",
    "start": "780639",
    "end": "783440"
  },
  {
    "text": "of building a system which is event",
    "start": "783440",
    "end": "785480"
  },
  {
    "text": "driven or how events may be exchanged",
    "start": "785480",
    "end": "787720"
  },
  {
    "text": "between the two to achieve a certain",
    "start": "787720",
    "end": "789440"
  },
  {
    "text": "business",
    "start": "789440",
    "end": "791760"
  },
  {
    "text": "functionality so the architecture that",
    "start": "792760",
    "end": "794800"
  },
  {
    "text": "we used for that is all is based on",
    "start": "794800",
    "end": "797279"
  },
  {
    "text": "communities and uh uh it uses U most of",
    "start": "797279",
    "end": "800800"
  },
  {
    "text": "the components here are open source uh",
    "start": "800800",
    "end": "803600"
  },
  {
    "text": "we have we use spring boot as the",
    "start": "803600",
    "end": "806560"
  },
  {
    "text": "framework on which the core uh",
    "start": "806560",
    "end": "810000"
  },
  {
    "text": "functionality business functionality is",
    "start": "810000",
    "end": "811480"
  },
  {
    "text": "built for creating the apis and then we",
    "start": "811480",
    "end": "814560"
  },
  {
    "text": "use Kafka uh to act as that event bus",
    "start": "814560",
    "end": "817839"
  },
  {
    "text": "through which these events are exchanged",
    "start": "817839",
    "end": "820240"
  },
  {
    "text": "and once the uh once we publish those",
    "start": "820240",
    "end": "822680"
  },
  {
    "text": "events and we need to create a workflow",
    "start": "822680",
    "end": "824519"
  },
  {
    "text": "out of it uh we use Argo workflow for",
    "start": "824519",
    "end": "827880"
  },
  {
    "text": "that so as you see as I dive deeper into",
    "start": "827880",
    "end": "830800"
  },
  {
    "text": "this architecture uh there are different",
    "start": "830800",
    "end": "833240"
  },
  {
    "text": "parts that we have around provider",
    "start": "833240",
    "end": "834959"
  },
  {
    "text": "schedule the care plan and then uh the",
    "start": "834959",
    "end": "838560"
  },
  {
    "text": "the the part where I show the event",
    "start": "838560",
    "end": "840480"
  },
  {
    "text": "choreography this is where you have the",
    "start": "840480",
    "end": "843639"
  },
  {
    "text": "as the bookings are made for the same",
    "start": "843639",
    "end": "845959"
  },
  {
    "text": "booking there may be different states",
    "start": "845959",
    "end": "848360"
  },
  {
    "text": "for example uh when uh when a provider",
    "start": "848360",
    "end": "851000"
  },
  {
    "text": "says that okay I'm available at this",
    "start": "851000",
    "end": "853040"
  },
  {
    "text": "time you have the care plan which says I",
    "start": "853040",
    "end": "855320"
  },
  {
    "text": "have booked this particular slot for my",
    "start": "855320",
    "end": "857320"
  },
  {
    "text": "appointment now the the patient may",
    "start": "857320",
    "end": "859560"
  },
  {
    "text": "decide that I want to cancel it because",
    "start": "859560",
    "end": "861279"
  },
  {
    "text": "something else has come up once a",
    "start": "861279",
    "end": "863360"
  },
  {
    "text": "patient does the cancellation the state",
    "start": "863360",
    "end": "865600"
  },
  {
    "text": "of that event now changes but it's",
    "start": "865600",
    "end": "867759"
  },
  {
    "text": "published on that same topic so you see",
    "start": "867759",
    "end": "869920"
  },
  {
    "text": "here what is called as a care plan",
    "start": "869920",
    "end": "871160"
  },
  {
    "text": "bookings topic and based on this",
    "start": "871160",
    "end": "873480"
  },
  {
    "text": "attribute of that particular event be it",
    "start": "873480",
    "end": "876399"
  },
  {
    "text": "confirmed or cancelled you have",
    "start": "876399",
    "end": "878360"
  },
  {
    "text": "different handlers so this is how you",
    "start": "878360",
    "end": "881160"
  },
  {
    "text": "basically Implement what is called as",
    "start": "881160",
    "end": "883199"
  },
  {
    "text": "like a choreography where the events are",
    "start": "883199",
    "end": "885240"
  },
  {
    "text": "being published on the same uh topic or",
    "start": "885240",
    "end": "888000"
  },
  {
    "text": "the same event bus but based on the",
    "start": "888000",
    "end": "890160"
  },
  {
    "text": "attributes on that particular event you",
    "start": "890160",
    "end": "892839"
  },
  {
    "text": "have different consumers which are uh",
    "start": "892839",
    "end": "895240"
  },
  {
    "text": "consuming it processing it and maybe",
    "start": "895240",
    "end": "897680"
  },
  {
    "text": "submitting it back or sending it back on",
    "start": "897680",
    "end": "899360"
  },
  {
    "text": "the same event bus and then uh if you",
    "start": "899360",
    "end": "902399"
  },
  {
    "text": "dive deeper uh the other the use case",
    "start": "902399",
    "end": "905720"
  },
  {
    "text": "where orchestrate orchestration makes",
    "start": "905720",
    "end": "907880"
  },
  {
    "text": "the most sense is basically when an",
    "start": "907880",
    "end": "910040"
  },
  {
    "text": "event or a booking has been confirmed",
    "start": "910040",
    "end": "912240"
  },
  {
    "text": "you may want certain uh uh resources for",
    "start": "912240",
    "end": "915959"
  },
  {
    "text": "that for that booking in term in other",
    "start": "915959",
    "end": "918360"
  },
  {
    "text": "words let's say this is at a at a clinic",
    "start": "918360",
    "end": "921160"
  },
  {
    "text": "you will want to schedule personnels for",
    "start": "921160",
    "end": "923680"
  },
  {
    "text": "it for example the nurses you may want",
    "start": "923680",
    "end": "925560"
  },
  {
    "text": "to have a room booked for it so and",
    "start": "925560",
    "end": "927959"
  },
  {
    "text": "those may be different uh steps in a",
    "start": "927959",
    "end": "930360"
  },
  {
    "text": "workflow so this is where an event",
    "start": "930360",
    "end": "932279"
  },
  {
    "text": "orchestrator comes in and we use Argo",
    "start": "932279",
    "end": "934480"
  },
  {
    "text": "workflow for that to execute the",
    "start": "934480",
    "end": "937079"
  },
  {
    "text": "different steps uh in that particular",
    "start": "937079",
    "end": "939440"
  },
  {
    "text": "business",
    "start": "939440",
    "end": "940720"
  },
  {
    "text": "processing so for the demo I'll just",
    "start": "940720",
    "end": "943399"
  },
  {
    "text": "open",
    "start": "943399",
    "end": "945680"
  },
  {
    "text": "up I hope it's",
    "start": "952160",
    "end": "955639"
  },
  {
    "text": "visible",
    "start": "957600",
    "end": "960600"
  },
  {
    "text": "so this the demo will walk you through",
    "start": "964480",
    "end": "967680"
  },
  {
    "text": "some of the pieces of this particular",
    "start": "967680",
    "end": "970360"
  },
  {
    "text": "solution that we have built uh so this",
    "start": "970360",
    "end": "973040"
  },
  {
    "text": "is as I said we used uh data on eks so",
    "start": "973040",
    "end": "976839"
  },
  {
    "text": "if you are familiar uh with data on eks",
    "start": "976839",
    "end": "979880"
  },
  {
    "text": "this is basically our eks blueprints",
    "start": "979880",
    "end": "982560"
  },
  {
    "text": "where we have uh taken a lot of data uh",
    "start": "982560",
    "end": "985519"
  },
  {
    "text": "platforms and uh show you how to run",
    "start": "985519",
    "end": "988000"
  },
  {
    "text": "them on E s so uh this is the terraform",
    "start": "988000",
    "end": "991040"
  },
  {
    "text": "scripts that you uh templates that you",
    "start": "991040",
    "end": "993079"
  },
  {
    "text": "get with it and as you can see here the",
    "start": "993079",
    "end": "995839"
  },
  {
    "text": "Kafka and the Argo workflows are the",
    "start": "995839",
    "end": "998519"
  },
  {
    "text": "add-ons that we have used here uh to",
    "start": "998519",
    "end": "1001079"
  },
  {
    "text": "deploy that uh both gafka as well as",
    "start": "1001079",
    "end": "1004560"
  },
  {
    "text": "Argo workflow on uh eks so this shows",
    "start": "1004560",
    "end": "1008079"
  },
  {
    "text": "you the Kafka cluster it uses that stmy",
    "start": "1008079",
    "end": "1010880"
  },
  {
    "text": "operator uh to deploy that and then uh",
    "start": "1010880",
    "end": "1014920"
  },
  {
    "text": "we will I'll show you next the the Argo",
    "start": "1014920",
    "end": "1017480"
  },
  {
    "text": "workflow piece of it",
    "start": "1017480",
    "end": "1020480"
  },
  {
    "text": "yeah so as you can see here these are",
    "start": "1023000",
    "end": "1024600"
  },
  {
    "text": "this is the event bus uh that's there we",
    "start": "1024600",
    "end": "1027079"
  },
  {
    "text": "use the default event bus and then use",
    "start": "1027079",
    "end": "1029640"
  },
  {
    "text": "Kafka Event Source for it and then the",
    "start": "1029640",
    "end": "1033079"
  },
  {
    "text": "uh workflow is the is the uh sensor that",
    "start": "1033079",
    "end": "1036199"
  },
  {
    "text": "we have which basically gets",
    "start": "1036199",
    "end": "1039640"
  },
  {
    "text": "triggered and uh going through the code",
    "start": "1039760",
    "end": "1042319"
  },
  {
    "text": "this is basically the spring boot",
    "start": "1042319",
    "end": "1043839"
  },
  {
    "text": "application that I was talking about",
    "start": "1043839",
    "end": "1046120"
  },
  {
    "text": "which shows that business functionality",
    "start": "1046120",
    "end": "1047720"
  },
  {
    "text": "we have around booking an appointment it",
    "start": "1047720",
    "end": "1049960"
  },
  {
    "text": "uses a postgis database uh to store",
    "start": "1049960",
    "end": "1052840"
  },
  {
    "text": "these bookings and the uh availability",
    "start": "1052840",
    "end": "1056640"
  },
  {
    "text": "of the",
    "start": "1056640",
    "end": "1059000"
  },
  {
    "text": "providers these are the the deployment",
    "start": "1060640",
    "end": "1063000"
  },
  {
    "text": "artifacts that you have as you can see",
    "start": "1063000",
    "end": "1064640"
  },
  {
    "text": "here uh it's using uh the the same",
    "start": "1064640",
    "end": "1068600"
  },
  {
    "text": "Docker images that we have for these",
    "start": "1068600",
    "end": "1070440"
  },
  {
    "text": "different uh",
    "start": "1070440",
    "end": "1073039"
  },
  {
    "text": "components",
    "start": "1077400",
    "end": "1079559"
  },
  {
    "text": "all right so next uh I actually show you",
    "start": "1079559",
    "end": "1082520"
  },
  {
    "text": "how it exactly works so as I mentioned",
    "start": "1082520",
    "end": "1084960"
  },
  {
    "text": "here this is where we invoking the API",
    "start": "1084960",
    "end": "1088919"
  },
  {
    "text": "to uh submit like an availability so as",
    "start": "1088919",
    "end": "1091720"
  },
  {
    "text": "you can see the provider says that uh he",
    "start": "1091720",
    "end": "1093960"
  },
  {
    "text": "or she is available from this time to",
    "start": "1093960",
    "end": "1095720"
  },
  {
    "text": "this time the encounter type is onsite",
    "start": "1095720",
    "end": "1098159"
  },
  {
    "text": "what it means is that whether you're",
    "start": "1098159",
    "end": "1099280"
  },
  {
    "text": "doing a virtual visit or an in person so",
    "start": "1099280",
    "end": "1102120"
  },
  {
    "text": "this has now created uh the availability",
    "start": "1102120",
    "end": "1104840"
  },
  {
    "text": "for that provider now if you go to the",
    "start": "1104840",
    "end": "1107559"
  },
  {
    "text": "get all provider availability you see",
    "start": "1107559",
    "end": "1109559"
  },
  {
    "text": "the host URL has changed what that means",
    "start": "1109559",
    "end": "1112000"
  },
  {
    "text": "is that I'm invoking it on the care plan",
    "start": "1112000",
    "end": "1114120"
  },
  {
    "text": "side to see the uh availability that was",
    "start": "1114120",
    "end": "1117320"
  },
  {
    "text": "just posted in the previous API call",
    "start": "1117320",
    "end": "1119559"
  },
  {
    "text": "mind you these are two different",
    "start": "1119559",
    "end": "1120720"
  },
  {
    "text": "microservices that I showed you earlier",
    "start": "1120720",
    "end": "1123440"
  },
  {
    "text": "now uh this is where I'm creating the my",
    "start": "1123440",
    "end": "1127039"
  },
  {
    "text": "availability me uh sorry my booking so I",
    "start": "1127039",
    "end": "1129799"
  },
  {
    "text": "take that availability ID and I say that",
    "start": "1129799",
    "end": "1132120"
  },
  {
    "text": "I want to book an appointment I'm",
    "start": "1132120",
    "end": "1134559"
  },
  {
    "text": "waiting for confirmation if you remember",
    "start": "1134559",
    "end": "1136679"
  },
  {
    "text": "from the previous picture it send an",
    "start": "1136679",
    "end": "1138559"
  },
  {
    "text": "event to get the confirmation from the",
    "start": "1138559",
    "end": "1140559"
  },
  {
    "text": "provider side now if I go and check the",
    "start": "1140559",
    "end": "1143840"
  },
  {
    "text": "booking that I just made whether it has",
    "start": "1143840",
    "end": "1145559"
  },
  {
    "text": "been confirmed or not you'll see that",
    "start": "1145559",
    "end": "1148280"
  },
  {
    "text": "this is now showing as confirmed and the",
    "start": "1148280",
    "end": "1150760"
  },
  {
    "text": "payment mode is showing that you know",
    "start": "1150760",
    "end": "1152200"
  },
  {
    "text": "it's an insurance uh pay or versus a",
    "start": "1152200",
    "end": "1154960"
  },
  {
    "text": "self-pay uh similarly as soon as the",
    "start": "1154960",
    "end": "1157080"
  },
  {
    "text": "confirmation has happened this is where",
    "start": "1157080",
    "end": "1159799"
  },
  {
    "text": "our Argo workflow will get invoked uh",
    "start": "1159799",
    "end": "1163080"
  },
  {
    "text": "which basically shows the different",
    "start": "1163080",
    "end": "1164559"
  },
  {
    "text": "steps post confirmation for handling the",
    "start": "1164559",
    "end": "1167760"
  },
  {
    "text": "resources is in a actual provider",
    "start": "1167760",
    "end": "1170000"
  },
  {
    "text": "setting so once I take the token go into",
    "start": "1170000",
    "end": "1173720"
  },
  {
    "text": "my Argo workflow console and this is",
    "start": "1173720",
    "end": "1177600"
  },
  {
    "text": "where you see that uh there is a uh",
    "start": "1177600",
    "end": "1181120"
  },
  {
    "text": "workflow that just got executed the one",
    "start": "1181120",
    "end": "1183679"
  },
  {
    "text": "uh 50 seconds ago uh just just come to",
    "start": "1183679",
    "end": "1187280"
  },
  {
    "text": "it there you go so this is the one and",
    "start": "1187280",
    "end": "1191559"
  },
  {
    "text": "it then shows you the different steps so",
    "start": "1191559",
    "end": "1194480"
  },
  {
    "text": "for example this is the input this is",
    "start": "1194480",
    "end": "1196200"
  },
  {
    "text": "the event that I just received with the",
    "start": "1196200",
    "end": "1198360"
  },
  {
    "text": "respect to confirmation it's making a",
    "start": "1198360",
    "end": "1200240"
  },
  {
    "text": "room reservation that is needed and then",
    "start": "1200240",
    "end": "1202240"
  },
  {
    "text": "sending a confirmation to the patient",
    "start": "1202240",
    "end": "1204159"
  },
  {
    "text": "saying that hey your booking has been",
    "start": "1204159",
    "end": "1206000"
  },
  {
    "text": "confirmed and this is the clinic where",
    "start": "1206000",
    "end": "1207840"
  },
  {
    "text": "you need to show up and so",
    "start": "1207840",
    "end": "1210320"
  },
  {
    "text": "on so with that let's get into some of",
    "start": "1210320",
    "end": "1213240"
  },
  {
    "text": "the deployment pieces of this and I will",
    "start": "1213240",
    "end": "1216360"
  },
  {
    "text": "hand it over to",
    "start": "1216360",
    "end": "1219080"
  },
  {
    "text": "Kos thank you m so switching hats in",
    "start": "1219320",
    "end": "1223760"
  },
  {
    "text": "here literally so I'm going to switch",
    "start": "1223760",
    "end": "1226039"
  },
  {
    "text": "this hat from developer and I have one",
    "start": "1226039",
    "end": "1228600"
  },
  {
    "text": "here that says platform",
    "start": "1228600",
    "end": "1231960"
  },
  {
    "text": "engineer and is there's any any platform",
    "start": "1231960",
    "end": "1234600"
  },
  {
    "text": "Engineers",
    "start": "1234600",
    "end": "1236200"
  },
  {
    "text": "here yeah app developer account Rock",
    "start": "1236200",
    "end": "1239440"
  },
  {
    "text": "okay so two two components that we talk",
    "start": "1239440",
    "end": "1243640"
  },
  {
    "text": "in here we mention data ons but data ons",
    "start": "1243640",
    "end": "1246240"
  },
  {
    "text": "is is a Bas we work with the community",
    "start": "1246240",
    "end": "1248960"
  },
  {
    "text": "on data on kubernetes there a working",
    "start": "1248960",
    "end": "1251200"
  },
  {
    "text": "group people from our team working there",
    "start": "1251200",
    "end": "1253720"
  },
  {
    "text": "is how to run best uh how to run the",
    "start": "1253720",
    "end": "1256880"
  },
  {
    "text": "best way to run this state full",
    "start": "1256880",
    "end": "1258159"
  },
  {
    "text": "workloads in kubernetes um in AWS for",
    "start": "1258159",
    "end": "1261400"
  },
  {
    "text": "example we have manage uh msk Amazon msk",
    "start": "1261400",
    "end": "1265000"
  },
  {
    "text": "we say manage apach Kafka where you say",
    "start": "1265000",
    "end": "1267840"
  },
  {
    "text": "give me a Kafka service and I give you",
    "start": "1267840",
    "end": "1269840"
  },
  {
    "text": "just the broker URLs if you're familiar",
    "start": "1269840",
    "end": "1271919"
  },
  {
    "text": "with with Kafka uh basically that's the",
    "start": "1271919",
    "end": "1274559"
  },
  {
    "text": "only thing that you worry about when you",
    "start": "1274559",
    "end": "1276440"
  },
  {
    "text": "are deploying Kafka on kubernetes",
    "start": "1276440",
    "end": "1278760"
  },
  {
    "text": "there's different aspects of res",
    "start": "1278760",
    "end": "1281000"
  },
  {
    "text": "resiliency um and scalability you have",
    "start": "1281000",
    "end": "1283400"
  },
  {
    "text": "to take into account and one of them is",
    "start": "1283400",
    "end": "1285240"
  },
  {
    "text": "when you deploy kues you want to deploy",
    "start": "1285240",
    "end": "1287320"
  },
  {
    "text": "in different failure domains um in in in",
    "start": "1287320",
    "end": "1291039"
  },
  {
    "text": "the cloud you will have two availability",
    "start": "1291039",
    "end": "1293679"
  },
  {
    "text": "zones and these are like uh for example",
    "start": "1293679",
    "end": "1296480"
  },
  {
    "text": "different buildings if it's on premises",
    "start": "1296480",
    "end": "1298080"
  },
  {
    "text": "and things like that and the Brokers and",
    "start": "1298080",
    "end": "1300000"
  },
  {
    "text": "sueper they need to be close to each",
    "start": "1300000",
    "end": "1302159"
  },
  {
    "text": "other because there will be a lot of",
    "start": "1302159",
    "end": "1303440"
  },
  {
    "text": "communication between them and you want",
    "start": "1303440",
    "end": "1305400"
  },
  {
    "text": "to have them in the same uh availability",
    "start": "1305400",
    "end": "1307840"
  },
  {
    "text": "Zone and not not cross over the other",
    "start": "1307840",
    "end": "1310880"
  },
  {
    "text": "aspect is M who mentioned uh the",
    "start": "1310880",
    "end": "1313720"
  },
  {
    "text": "operator so using an operator to deploy",
    "start": "1313720",
    "end": "1316760"
  },
  {
    "text": "makes this uh set setup more scalable in",
    "start": "1316760",
    "end": "1319640"
  },
  {
    "text": "terms of like scaling the configuration",
    "start": "1319640",
    "end": "1321880"
  },
  {
    "text": "of them using streamz is very",
    "start": "1321880",
    "end": "1324400"
  },
  {
    "text": "recommended to run Kafka we use in in",
    "start": "1324400",
    "end": "1326600"
  },
  {
    "text": "our patterns and the other aspect",
    "start": "1326600",
    "end": "1329480"
  },
  {
    "text": "is having the consumers right the",
    "start": "1329480",
    "end": "1333080"
  },
  {
    "text": "microservices that will consume from",
    "start": "1333080",
    "end": "1335799"
  },
  {
    "text": "these uh state for workloads right um",
    "start": "1335799",
    "end": "1338960"
  },
  {
    "text": "and this will be your producers and",
    "start": "1338960",
    "end": "1340279"
  },
  {
    "text": "consumers they could be in the same uh",
    "start": "1340279",
    "end": "1343279"
  },
  {
    "text": "cluster but most likely you want them in",
    "start": "1343279",
    "end": "1346039"
  },
  {
    "text": "a different cluster but close to each so",
    "start": "1346039",
    "end": "1348400"
  },
  {
    "text": "you don't have you have low latency",
    "start": "1348400",
    "end": "1350279"
  },
  {
    "text": "between them remember that these are",
    "start": "1350279",
    "end": "1351880"
  },
  {
    "text": "like TCP connections when you're talking",
    "start": "1351880",
    "end": "1353480"
  },
  {
    "text": "about Kafka where you have producer",
    "start": "1353480",
    "end": "1355520"
  },
  {
    "text": "producing in events into CFA topics and",
    "start": "1355520",
    "end": "1358840"
  },
  {
    "text": "then consumers taking out those uh",
    "start": "1358840",
    "end": "1361760"
  },
  {
    "text": "messages that are sitting in partitions",
    "start": "1361760",
    "end": "1363919"
  },
  {
    "text": "in the Brokers so that's basically we",
    "start": "1363919",
    "end": "1367039"
  },
  {
    "text": "have different patterns uh there if",
    "start": "1367039",
    "end": "1369120"
  },
  {
    "text": "you're running on on eeks or data uh on",
    "start": "1369120",
    "end": "1372600"
  },
  {
    "text": "kubernetes there different patterns but",
    "start": "1372600",
    "end": "1374039"
  },
  {
    "text": "at least for us we have a project called",
    "start": "1374039",
    "end": "1375760"
  },
  {
    "text": "the E blueprints where you can deploy",
    "start": "1375760",
    "end": "1378559"
  },
  {
    "text": "um Kafka and then get it up and running",
    "start": "1378559",
    "end": "1380720"
  },
  {
    "text": "and we have helped a lot of users and",
    "start": "1380720",
    "end": "1383279"
  },
  {
    "text": "users running Kafka efficiently on on",
    "start": "1383279",
    "end": "1386480"
  },
  {
    "text": "kubernetes so that's come a few of the",
    "start": "1386480",
    "end": "1389080"
  },
  {
    "text": "tips of running Kafka in production if",
    "start": "1389080",
    "end": "1391279"
  },
  {
    "text": "you have run Kafka in production it",
    "start": "1391279",
    "end": "1394159"
  },
  {
    "text": "takes more than that but at the high",
    "start": "1394159",
    "end": "1396520"
  },
  {
    "text": "level this is a good good starting point",
    "start": "1396520",
    "end": "1398360"
  },
  {
    "text": "of what will be the aspects of when you",
    "start": "1398360",
    "end": "1400279"
  },
  {
    "text": "get you get started deploying uh cfan",
    "start": "1400279",
    "end": "1402960"
  },
  {
    "text": "kubernetes the second one is uh Argo",
    "start": "1402960",
    "end": "1406080"
  },
  {
    "text": "workflows but like we the demo we",
    "start": "1406080",
    "end": "1408720"
  },
  {
    "text": "mention Argo events and usually they go",
    "start": "1408720",
    "end": "1411279"
  },
  {
    "text": "together because that's the Event Source",
    "start": "1411279",
    "end": "1413559"
  },
  {
    "text": "for um Argo workflows and ARG ago events",
    "start": "1413559",
    "end": "1416760"
  },
  {
    "text": "has a sensor uh for Argo workflow",
    "start": "1416760",
    "end": "1419400"
  },
  {
    "text": "basically it it instantiates a workflow",
    "start": "1419400",
    "end": "1422760"
  },
  {
    "text": "so in terms of um uh scalability and you",
    "start": "1422760",
    "end": "1427000"
  },
  {
    "text": "know scaling these argue events talking",
    "start": "1427000",
    "end": "1429799"
  },
  {
    "text": "about argue events uh there's two aspect",
    "start": "1429799",
    "end": "1432279"
  },
  {
    "text": "on it it's the Event Source which in our",
    "start": "1432279",
    "end": "1434440"
  },
  {
    "text": "in our demo was gafka but it can be like",
    "start": "1434440",
    "end": "1437159"
  },
  {
    "text": "GitHub a GitHub uh po request event like",
    "start": "1437159",
    "end": "1440200"
  },
  {
    "text": "some type of events and there's a couple",
    "start": "1440200",
    "end": "1441679"
  },
  {
    "text": "of them there they scale um by",
    "start": "1441679",
    "end": "1444919"
  },
  {
    "text": "deployment so there's not that much",
    "start": "1444919",
    "end": "1446360"
  },
  {
    "text": "problems of scaling them it's just you",
    "start": "1446360",
    "end": "1448200"
  },
  {
    "text": "have a lot of deployments or pots",
    "start": "1448200",
    "end": "1449679"
  },
  {
    "text": "handling the the one that would be your",
    "start": "1449679",
    "end": "1452000"
  },
  {
    "text": "bottleneck or what you need to uh be",
    "start": "1452000",
    "end": "1455720"
  },
  {
    "text": "more concerned about is using the event",
    "start": "1455720",
    "end": "1458159"
  },
  {
    "text": "boss and in Argo workflow in Argo events",
    "start": "1458159",
    "end": "1461520"
  },
  {
    "text": "uh there's one that is um the one that",
    "start": "1461520",
    "end": "1463880"
  },
  {
    "text": "that we use in the demo which is um",
    "start": "1463880",
    "end": "1466159"
  },
  {
    "text": "using natat uh is the we call it the",
    "start": "1466159",
    "end": "1468559"
  },
  {
    "text": "native there's also jet streams which is",
    "start": "1468559",
    "end": "1470799"
  },
  {
    "text": "the next best one uh from that and then",
    "start": "1470799",
    "end": "1474159"
  },
  {
    "text": "you have not saying that it's the best",
    "start": "1474159",
    "end": "1475559"
  },
  {
    "text": "one but then we have folks using Kafka",
    "start": "1475559",
    "end": "1477559"
  },
  {
    "text": "because they are using Kafka anyway so",
    "start": "1477559",
    "end": "1479799"
  },
  {
    "text": "they want to reuse Kafka for the V boss",
    "start": "1479799",
    "end": "1482000"
  },
  {
    "text": "and that's that's will be uh one way of",
    "start": "1482000",
    "end": "1484600"
  },
  {
    "text": "G gaining that scalability resiliency",
    "start": "1484600",
    "end": "1486960"
  },
  {
    "text": "from Kafka that you already deploy with",
    "start": "1486960",
    "end": "1488880"
  },
  {
    "text": "streamy when it comes to Argo workflow",
    "start": "1488880",
    "end": "1492480"
  },
  {
    "text": "Argo workflow where you have to watch",
    "start": "1492480",
    "end": "1494880"
  },
  {
    "text": "out for uh scalability is the Argo",
    "start": "1494880",
    "end": "1497279"
  },
  {
    "text": "workflow controller the Argo workflare",
    "start": "1497279",
    "end": "1499480"
  },
  {
    "text": "controller the way it works it creates",
    "start": "1499480",
    "end": "1501600"
  },
  {
    "text": "uh when you create an Argo workflow",
    "start": "1501600",
    "end": "1503960"
  },
  {
    "text": "that's an instance of a of a running job",
    "start": "1503960",
    "end": "1506840"
  },
  {
    "text": "you can say and then any status that is",
    "start": "1506840",
    "end": "1510039"
  },
  {
    "text": "on that on that workflow or in in",
    "start": "1510039",
    "end": "1512880"
  },
  {
    "text": "outputs or inputs or outputs are safe on",
    "start": "1512880",
    "end": "1515360"
  },
  {
    "text": "the CR so you're runting back to the SD",
    "start": "1515360",
    "end": "1518320"
  },
  {
    "text": "and as you get you get a th000 2,000",
    "start": "1518320",
    "end": "1520919"
  },
  {
    "text": "like that many CRS it the Argo workflow",
    "start": "1520919",
    "end": "1524559"
  },
  {
    "text": "the Argo workflow controller has",
    "start": "1524559",
    "end": "1527799"
  },
  {
    "text": "scalability problem so you start need to",
    "start": "1527799",
    "end": "1529559"
  },
  {
    "text": "start Shing manually um on which",
    "start": "1529559",
    "end": "1532799"
  },
  {
    "text": "workflows match to each controller and",
    "start": "1532799",
    "end": "1534960"
  },
  {
    "text": "you can have multiple controllers but we",
    "start": "1534960",
    "end": "1537039"
  },
  {
    "text": "started a s in Argo called the S",
    "start": "1537039",
    "end": "1540000"
  },
  {
    "text": "scalability",
    "start": "1540000",
    "end": "1543000"
  },
  {
    "text": "between um we have a scalability where",
    "start": "1544520",
    "end": "1548640"
  },
  {
    "text": "we are looking into helping writing the",
    "start": "1548640",
    "end": "1550799"
  },
  {
    "text": "control Argos scaling Argo CD and Argo",
    "start": "1550799",
    "end": "1554120"
  },
  {
    "text": "and and Argo workflows and to finish um",
    "start": "1554120",
    "end": "1558799"
  },
  {
    "text": "as Argo workflows can run uh jobs in",
    "start": "1558799",
    "end": "1561399"
  },
  {
    "text": "parallels on diags the number of",
    "start": "1561399",
    "end": "1563799"
  },
  {
    "text": "workflows that you run in parallel at",
    "start": "1563799",
    "end": "1565440"
  },
  {
    "text": "the same time basically is uh how many",
    "start": "1565440",
    "end": "1567399"
  },
  {
    "text": "pots you can run on a e cluster and it",
    "start": "1567399",
    "end": "1569559"
  },
  {
    "text": "has Garber collection into",
    "start": "1569559",
    "end": "1571640"
  },
  {
    "text": "it um in terms of scaling Argo workflows",
    "start": "1571640",
    "end": "1575600"
  },
  {
    "text": "you have to take into account the type",
    "start": "1575600",
    "end": "1577039"
  },
  {
    "text": "the different type of storage so you if",
    "start": "1577039",
    "end": "1579559"
  },
  {
    "text": "you have uh ephemeral kind of storage",
    "start": "1579559",
    "end": "1582559"
  },
  {
    "text": "you go at the bottom like using SSD the",
    "start": "1582559",
    "end": "1584559"
  },
  {
    "text": "local storage of the node uh where you",
    "start": "1584559",
    "end": "1587000"
  },
  {
    "text": "have more resiliency and um uh more uh",
    "start": "1587000",
    "end": "1592679"
  },
  {
    "text": "better data uh for resiliency will be S3",
    "start": "1592679",
    "end": "1595799"
  },
  {
    "text": "and then between them there's different",
    "start": "1595799",
    "end": "1597480"
  },
  {
    "text": "aspects of what storage do you use that",
    "start": "1597480",
    "end": "1599880"
  },
  {
    "text": "would be also affecting your scalability",
    "start": "1599880",
    "end": "1602039"
  },
  {
    "text": "of Argo",
    "start": "1602039",
    "end": "1603399"
  },
  {
    "text": "workflows and with that uh we want to",
    "start": "1603399",
    "end": "1606080"
  },
  {
    "text": "say uh give it a try this is the URL for",
    "start": "1606080",
    "end": "1609480"
  },
  {
    "text": "the example out of the box you can if",
    "start": "1609480",
    "end": "1612159"
  },
  {
    "text": "you're a platform engineer you may know",
    "start": "1612159",
    "end": "1613640"
  },
  {
    "text": "theform you can the theform apply and it",
    "start": "1613640",
    "end": "1616000"
  },
  {
    "text": "deploys you can use things like the G",
    "start": "1616000",
    "end": "1617799"
  },
  {
    "text": "preach if you want to deploy the Hem",
    "start": "1617799",
    "end": "1619240"
  },
  {
    "text": "chart and all these and all the patterns",
    "start": "1619240",
    "end": "1621440"
  },
  {
    "text": "are under the data on eks where we have",
    "start": "1621440",
    "end": "1624000"
  },
  {
    "text": "patterns for Jupiter Hub spark Ray all",
    "start": "1624000",
    "end": "1627360"
  },
  {
    "text": "these stateful workloads to run in",
    "start": "1627360",
    "end": "1629399"
  },
  {
    "text": "cornetes they're kind of like um complex",
    "start": "1629399",
    "end": "1633159"
  },
  {
    "text": "to run but we have a patterns in there",
    "start": "1633159",
    "end": "1635159"
  },
  {
    "text": "that people are are are using and",
    "start": "1635159",
    "end": "1636679"
  },
  {
    "text": "sharing and open request is an open",
    "start": "1636679",
    "end": "1638480"
  },
  {
    "text": "source project the they don'ts so with",
    "start": "1638480",
    "end": "1640640"
  },
  {
    "text": "that I think we're done thank you so",
    "start": "1640640",
    "end": "1645000"
  },
  {
    "text": "much",
    "start": "1645360",
    "end": "1648360"
  }
]