[
  {
    "text": "good morning everyone welcome to the talk it is fantastic to be speaking at",
    "start": "520",
    "end": "7160"
  },
  {
    "text": "the cubec con once again in front of the awesome audience my name is nandakumar wenar aalam I'm a senior principal engineer at",
    "start": "7160",
    "end": "13879"
  },
  {
    "text": "yahu today I have my colleague P Patel with",
    "start": "13879",
    "end": "18960"
  },
  {
    "text": "me over the past 17 and a half years I have had the incredible opportunity to",
    "start": "19640",
    "end": "25080"
  },
  {
    "text": "work on various projects at yahu one of the groundbreaking projects that particularly exciting is the work we did",
    "start": "25080",
    "end": "32640"
  },
  {
    "text": "with the kubernetes today we thrilled to share our platform Journey with all of",
    "start": "32640",
    "end": "40039"
  },
  {
    "text": "you here's the quick agenda for the talk we'll be talking about the user interface on from adventures and the",
    "start": "40320",
    "end": "46600"
  },
  {
    "text": "digital transformation Journey let me share some quick history",
    "start": "46600",
    "end": "52359"
  },
  {
    "text": "of how it all started and the challenges inspired us to build this platform",
    "start": "52359",
    "end": "59559"
  },
  {
    "text": "looking at the tech landscape of 2016 especially most of our deployments were",
    "start": "60440",
    "end": "65478"
  },
  {
    "text": "in bare metal it took a long time to launch a new product especially it involved capital expenditure and took a",
    "start": "65479",
    "end": "72520"
  },
  {
    "text": "long time to set up application infrastructure there were a lot of duplications there were effort to",
    "start": "72520",
    "end": "78400"
  },
  {
    "text": "containerize the workload specifically finding the right container orchestration platform there were misos",
    "start": "78400",
    "end": "84520"
  },
  {
    "text": "and kubernetes and you know kubernetes stood out for the simplicity",
    "start": "84520",
    "end": "91400"
  },
  {
    "text": "building on to the success with the kubernetes it was very clear that Yahoo needed a robust and scalable",
    "start": "92560",
    "end": "99479"
  },
  {
    "text": "infrastructure to host its wor array of services it's not just the kuber",
    "start": "99479",
    "end": "104880"
  },
  {
    "text": "Simplicity its portability would allow one to deploy to multiple clouds including on",
    "start": "104880",
    "end": "111280"
  },
  {
    "text": "Prem so this versatility laid the foundation for our platform team which",
    "start": "111280",
    "end": "117920"
  },
  {
    "text": "we named Omega I know it sounds crazy it's a precursor to the",
    "start": "117920",
    "end": "125079"
  },
  {
    "text": "kubernetes so we have core principles that led success to our platform team",
    "start": "125799",
    "end": "132640"
  },
  {
    "text": "it's one team Focus everything on kubernetes solve common problems affecting many teams we built",
    "start": "132640",
    "end": "138879"
  },
  {
    "text": "lightweight set of tools and templates to make it straightforward for someone to deploy application onto the",
    "start": "138879",
    "end": "144640"
  },
  {
    "text": "kubernetes by means we take care of common nties of the use cases things like application identity and the",
    "start": "144640",
    "end": "151760"
  },
  {
    "text": "security and the networking whatnot one of the key aspect of our",
    "start": "151760",
    "end": "157480"
  },
  {
    "text": "platform is that the full kubernetes interface is still available to the users this is to empower the advanced",
    "start": "157480",
    "end": "163720"
  },
  {
    "text": "users to make use of full of the kubernetes",
    "start": "163720",
    "end": "167800"
  },
  {
    "text": "ecosystem we heard a lot about the abstraction but we believe that abstraction helps eliminate the",
    "start": "169080",
    "end": "175879"
  },
  {
    "text": "complexity especially 2016 we didn't want to let thousands of developers to",
    "start": "175879",
    "end": "181640"
  },
  {
    "text": "figure out how to deploy onto the kubernetes it was pretty new at that time so our team created this omega.",
    "start": "181640",
    "end": "188720"
  },
  {
    "text": "yaml it is an opinioned way to deploy containers workload onto any kubernetes",
    "start": "188720",
    "end": "196120"
  },
  {
    "text": "cluster it helps developers to focus on the code rather than the infrastructure so here's the sample",
    "start": "196120",
    "end": "203280"
  },
  {
    "text": "Omega yaml on your left hand side where user would input very few inputs about the deployments",
    "start": "203280",
    "end": "209959"
  },
  {
    "text": "what template to use and which cluster to deploy onto we had a screwdriver which is a cicd engine would build the",
    "start": "209959",
    "end": "216519"
  },
  {
    "text": "code and our Omega template will build a container image out of it and create the",
    "start": "216519",
    "end": "222040"
  },
  {
    "text": "versioned kubernetes Manifest and upload them to the artifactory and it will deploy to the kubernetes cluster of your",
    "start": "222040",
    "end": "228799"
  },
  {
    "text": "choice it could be onpro it could be Cloud the templates here are the simp",
    "start": "228799",
    "end": "234840"
  },
  {
    "text": "simple uh Helm templates which helps to standardize the deployments for example",
    "start": "234840",
    "end": "240400"
  },
  {
    "text": "it helps you to add any side cars to the um your deployment and tuning the",
    "start": "240400",
    "end": "245599"
  },
  {
    "text": "resources so for example if you can tune change a side car version example splank",
    "start": "245599",
    "end": "250959"
  },
  {
    "text": "or a container resource CPU or memory it would get deployed to all the",
    "start": "250959",
    "end": "256400"
  },
  {
    "text": "applications when they redeploy so we also have customized IO",
    "start": "256400",
    "end": "261680"
  },
  {
    "text": "which is available for the advanced users wants to add extra source to their deployment template",
    "start": "261680",
    "end": "269720"
  },
  {
    "text": "but one can imagine without standard tool which we have seen in the most of other talks like Argo helps to solve you",
    "start": "271000",
    "end": "277960"
  },
  {
    "text": "can say that there are at least 20 plus yaml files and multiple complex steps to",
    "start": "277960",
    "end": "283199"
  },
  {
    "text": "get the application deployed that's a lot of duplication that's exactly our team tapped on from",
    "start": "283199",
    "end": "290840"
  },
  {
    "text": "the day one I would say this is the day of Helm",
    "start": "290840",
    "end": "295880"
  },
  {
    "text": "teller when before even the helm was um",
    "start": "295880",
    "end": "301639"
  },
  {
    "text": "V1 so now that we completely masked the complexity of deployment pattern and",
    "start": "302440",
    "end": "308479"
  },
  {
    "text": "giving abstraction to the users we will see how we tackled some of the onr",
    "start": "308479",
    "end": "316240"
  },
  {
    "text": "complexity networking something special to me um coming from the bare metal word",
    "start": "316240",
    "end": "321680"
  },
  {
    "text": "we wanted to provide every part and Native routing be part of the on-prem network so we worked with the network",
    "start": "321680",
    "end": "328280"
  },
  {
    "text": "experts at Yahoo to advertise the part subnet to the rack which is your switch",
    "start": "328280",
    "end": "333479"
  },
  {
    "text": "using a well-known bgp protocol this simplified architecture helped us to",
    "start": "333479",
    "end": "338919"
  },
  {
    "text": "expand as needed without worrying about the IP exhaustion yet provide meaningful",
    "start": "338919",
    "end": "344199"
  },
  {
    "text": "functionality like public IP to the Pod anycast routing for load balancer use",
    "start": "344199",
    "end": "349400"
  },
  {
    "text": "cases we had even explored um dual networking as",
    "start": "349400",
    "end": "355639"
  },
  {
    "text": "well here the typical kubernetes in architecture on your left hand side",
    "start": "355639",
    "end": "360840"
  },
  {
    "text": "where you see the control plane and the authentication to the control plane we run dedicated machines for them the",
    "start": "360840",
    "end": "367599"
  },
  {
    "text": "authentication to the control plane is hooked up with our our Athens webbook this is our internal identity and rback",
    "start": "367599",
    "end": "374280"
  },
  {
    "text": "system it's also know open source so it's either screwdriver or",
    "start": "374280",
    "end": "379759"
  },
  {
    "text": "user would provide Athens credentials to get authenticated to the kubernetes",
    "start": "379759",
    "end": "385039"
  },
  {
    "text": "cluster for Ingress it was started with the ATS plugin directly routed into the",
    "start": "385039",
    "end": "390080"
  },
  {
    "text": "kubernetes parts later when we used EO it was complete stepping stone into the",
    "start": "390080",
    "end": "396000"
  },
  {
    "text": "application security and also provided Advanced routing features like service mesh as we contined to modernize our",
    "start": "396000",
    "end": "403800"
  },
  {
    "text": "node component migrating from rail 7 to rail 8 we were able to bring in celium",
    "start": "403800",
    "end": "409440"
  },
  {
    "text": "to provide Advanced layer for load balancer for certain use cases we also",
    "start": "409440",
    "end": "415039"
  },
  {
    "text": "able to migrate from doer to container D move away from QB proxy to celium based",
    "start": "415039",
    "end": "420560"
  },
  {
    "text": "um",
    "start": "420560",
    "end": "422879"
  },
  {
    "text": "cni this uh yeah this is our complete platform offering we feel that",
    "start": "426199",
    "end": "432680"
  },
  {
    "text": "kubernetes serves as the foundation for building the kubernetes uh Cloud native ecosystem for example we were able to",
    "start": "432680",
    "end": "439879"
  },
  {
    "text": "offer using um um Dynamic volum provisioning using the CSI drivers like",
    "start": "439879",
    "end": "446240"
  },
  {
    "text": "power flags and the Trident and that pushed the capabilities of running the",
    "start": "446240",
    "end": "451400"
  },
  {
    "text": "um stateful set workload for example our team wrote operators for deploying complex State full set applications like",
    "start": "451400",
    "end": "457879"
  },
  {
    "text": "Apache Stam and redis operator we were also able to Leverage The open source stmy to provide Kafka cluster",
    "start": "457879",
    "end": "466720"
  },
  {
    "text": "provisioning these numbers speaks for our scale as you can see we have 37",
    "start": "466720",
    "end": "472000"
  },
  {
    "text": "kubernetes clusters as of today in neon Prem there are, 1500 Omega yaml applications deployed through our",
    "start": "472000",
    "end": "478560"
  },
  {
    "text": "interface and on a daily average basis we see 1.8 million RPS at our EO Ingress",
    "start": "478560",
    "end": "488120"
  },
  {
    "text": "Gateway so that's that's pretty much our on-prem story but at 2023 Yahoo",
    "start": "490319",
    "end": "496199"
  },
  {
    "text": "finalized to move to the D uh public Cloud infrastructure by Transforming Our",
    "start": "496199",
    "end": "501400"
  },
  {
    "text": "on promis infrastructure into the cloud lot of working groups have formed to provide happy path recommendation",
    "start": "501400",
    "end": "508400"
  },
  {
    "text": "specifically for account man management and the network management and our team was challenged to provide the kubernetes",
    "start": "508400",
    "end": "514919"
  },
  {
    "text": "infrastructure on the public cloud and we accepted the challenge and",
    "start": "514919",
    "end": "520680"
  },
  {
    "text": "given that we managed the V huge amount of unpr clusters we had a good idea how",
    "start": "520680",
    "end": "528519"
  },
  {
    "text": "this would pan out in the cloud but we wanted to make sure we do the things right from the beginning which means we",
    "start": "528519",
    "end": "534839"
  },
  {
    "text": "had many product groups we wanted a separate account and a separate kubernetes cluster in instead of",
    "start": "534839",
    "end": "540160"
  },
  {
    "text": "gigantic kubernetes cluster we managed in non Prem this would help us to take care of",
    "start": "540160",
    "end": "545519"
  },
  {
    "text": "cost allocation uh from the beginning and also helps with easy with the",
    "start": "545519",
    "end": "550800"
  },
  {
    "text": "maintenance we know that cloud would provide uh AA for managing the",
    "start": "550800",
    "end": "557040"
  },
  {
    "text": "underlying infrastructure for provisioning the notes including the managed control plan we want to leverage that but it also thrown us some of the",
    "start": "557040",
    "end": "563600"
  },
  {
    "text": "challenges with respect to the network and how you secure your API and also the applications",
    "start": "563600",
    "end": "570360"
  },
  {
    "text": "this is again like if you can see that this is our Cloud kubernetes architecture it's much more simplified",
    "start": "573360",
    "end": "578880"
  },
  {
    "text": "on the left hand side you see the managed control plane we were able to tap onto the ethn oidc which is our uh",
    "start": "578880",
    "end": "585760"
  },
  {
    "text": "uh which is our internal arback system and we built a tool called cubal CTX um",
    "start": "585760",
    "end": "591160"
  },
  {
    "text": "it's not the open source version of CTX but this added a source to connect to the private control plane by means of",
    "start": "591160",
    "end": "598200"
  },
  {
    "text": "connecting to the through the SSM Bashan in case of AWS or gcp identity aware proxy for gcp so it",
    "start": "598200",
    "end": "605519"
  },
  {
    "text": "can create a tunnel to your private endpoint so the the screwdriver or um or the cube C from your Mac would pass in",
    "start": "605519",
    "end": "611920"
  },
  {
    "text": "the Athens credential then kubernetes you can get authenticated to the kubernetes control plan we were able to",
    "start": "611920",
    "end": "618040"
  },
  {
    "text": "lift and shift the sto into the cloud which would even further add more",
    "start": "618040",
    "end": "623680"
  },
  {
    "text": "sophisticated use cases in the cloud which I think pile would also be talking about as you can see",
    "start": "623680",
    "end": "630000"
  },
  {
    "text": "the the node component got much more simpler we make use of VPC native cni and",
    "start": "630000",
    "end": "636760"
  },
  {
    "text": "whatnot but wait um we can't just get started we need to make sure we",
    "start": "636920",
    "end": "642200"
  },
  {
    "text": "provision the networking in the cloud whereing the platform head we wanted to",
    "start": "642200",
    "end": "647480"
  },
  {
    "text": "make sure we centralized the VPC infrastructure so we came up with a set of design principles how we can manage",
    "start": "647480",
    "end": "654800"
  },
  {
    "text": "the VPC infrastructure for entire Yahoo so uh we created um terraform modules to",
    "start": "654800",
    "end": "661240"
  },
  {
    "text": "make sure that every team uses or every VPC uses the same a ID so that we can",
    "start": "661240",
    "end": "667040"
  },
  {
    "text": "avoid the cross AC charges wherever applicable and build common set of modules for VPC paing and and the Endo",
    "start": "667040",
    "end": "673399"
  },
  {
    "text": "endpoint creation use cases the shared VPC architecture as you",
    "start": "673399",
    "end": "679959"
  },
  {
    "text": "see here fits right right into our model of our design principle on the left most",
    "start": "679959",
    "end": "686040"
  },
  {
    "text": "side where you see your network account where that's where your all the VPC creation subnet management happens so a",
    "start": "686040",
    "end": "692440"
  },
  {
    "text": "lot of the participant accounts can just join the VPC and make use of your VPC to create the clusters for example Omega",
    "start": "692440",
    "end": "700160"
  },
  {
    "text": "would create the kubernetes Clusters either eks um and the and the application team can make use of it to",
    "start": "700160",
    "end": "706279"
  },
  {
    "text": "create elastic cash and Dynamo DB whatnot and the one interesting piece you can see here the last subnet which",
    "start": "706279",
    "end": "712519"
  },
  {
    "text": "is a private subnet for dedicated to the part by leveraging the separate cider",
    "start": "712519",
    "end": "719959"
  },
  {
    "text": "range for your part I you can expand you can scale your kubernetes workload",
    "start": "719959",
    "end": "725240"
  },
  {
    "text": "without bothering about primary cider for the notes so we also wanted to make",
    "start": "725240",
    "end": "730440"
  },
  {
    "text": "sure the enable the prefix delic which basically allocate /28 IPS /28 range to",
    "start": "730440",
    "end": "737240"
  },
  {
    "text": "your Podi which speeds up to your pod IP allocation so actually your pod comes up",
    "start": "737240",
    "end": "742279"
  },
  {
    "text": "much faster than not doing so it also helps you to if you're in abl",
    "start": "742279",
    "end": "748639"
  },
  {
    "text": "L you heard a team called NMU it helps you to you know reduce your pod um NMU",
    "start": "748639",
    "end": "754720"
  },
  {
    "text": "by 16x like because you you are say one one/ 28 prefix instead of unless",
    "start": "754720",
    "end": "760720"
  },
  {
    "text": "asending one IP for every part yeah so you can see that if you of",
    "start": "760720",
    "end": "767279"
  },
  {
    "text": "course you know this is not end of the world you can always add more ciders to your secondary range and keep expanding",
    "start": "767279",
    "end": "773079"
  },
  {
    "text": "your part IP so that's that's exactly why we want to leverage a separate CER and we also recommend creating a",
    "start": "773079",
    "end": "779959"
  },
  {
    "text": "separate service IP range or consistent service IP range for all the Clusters you",
    "start": "779959",
    "end": "785959"
  },
  {
    "text": "have this is the typical shared VPC architecture for gcp um we we can see",
    "start": "787040",
    "end": "794560"
  },
  {
    "text": "that we manage the similar infrastructure in AWS and similar infrastructure in gcp the only caveat",
    "start": "794560",
    "end": "800320"
  },
  {
    "text": "here is that we wanted to make sure we want to create a separate VPC per region",
    "start": "800320",
    "end": "805680"
  },
  {
    "text": "rather than utilizing the global VPC in the gcp so just to avoid the blast",
    "start": "805680",
    "end": "811920"
  },
  {
    "text": "radius there are few caveat but G gke by default gives you AAS IP range um so one",
    "start": "812279",
    "end": "819399"
  },
  {
    "text": "you need you may need to consider tuning your max Parts otherwise you would be unnecessarily wasting your",
    "start": "819399",
    "end": "825680"
  },
  {
    "text": "IP um we also uh realized that the service ciders used for GK needs to be",
    "start": "825680",
    "end": "831240"
  },
  {
    "text": "part of your secondary cider range so um we we didn't want to waste those service",
    "start": "831240",
    "end": "836320"
  },
  {
    "text": "side Arrangement especially in cloud eks or G once you create your cluster with a cider range for service cider you cannot",
    "start": "836320",
    "end": "843120"
  },
  {
    "text": "change it so you may have to recreate your cluster so that's why I would always recommend creating a SL 16 for",
    "start": "843120",
    "end": "848880"
  },
  {
    "text": "your sideway side range and you can always remove from your secondary CER range of your subnet so that you can",
    "start": "848880",
    "end": "855079"
  },
  {
    "text": "move on yeah now I'll hand it over to pile",
    "start": "855079",
    "end": "860120"
  },
  {
    "text": "we'll talk about some of the tools and The Operators we",
    "start": "860120",
    "end": "864360"
  },
  {
    "text": "have thank you Nanda I am P Patel I'm a principal engineer at Yahoo uh I work",
    "start": "866759",
    "end": "873880"
  },
  {
    "text": "for core infrastucture team at Yahoo where I mainly focus on creating and managing this kubernetes infrastructure",
    "start": "873880",
    "end": "880600"
  },
  {
    "text": "at Yahoo so now that we have we know about the overall ecosystem of Omega on",
    "start": "880600",
    "end": "888079"
  },
  {
    "text": "kubernetes let's talk about how do we create and manage it",
    "start": "888079",
    "end": "893360"
  },
  {
    "text": "infrastructure so when we started our journey almost a decade ago for on pram we had a tool called cble which helped",
    "start": "893360",
    "end": "900079"
  },
  {
    "text": "us to create this multiple kuties clusters at scale on Prem and when we",
    "start": "900079",
    "end": "905800"
  },
  {
    "text": "started early in 2021 we needed a similar tool which we can leverage in order to create a similar infrastructure",
    "start": "905800",
    "end": "912399"
  },
  {
    "text": "in GK as well as AWS we had internally developed tool called Flex which was mainly built in",
    "start": "912399",
    "end": "919040"
  },
  {
    "text": "using Ruby it used cloud formation under the hood in order to create and manage resources in cloud and however it only",
    "start": "919040",
    "end": "926199"
  },
  {
    "text": "supported the use case for AWS eks starting 2023 uh3 my team started",
    "start": "926199",
    "end": "932240"
  },
  {
    "text": "building a new tool called Cadence which is built using golang it is using Tera",
    "start": "932240",
    "end": "937319"
  },
  {
    "text": "from under the hood in order to create and manage your resources in cloud and as of this year it also supports eks the",
    "start": "937319",
    "end": "944360"
  },
  {
    "text": "reason for adding this eks support into Cadence is that we wanted to leverage a single tool which we can use to form the",
    "start": "944360",
    "end": "952040"
  },
  {
    "text": "multiple kubernetes cluster across the multiple uh Cloud environment and the experience should be seamless",
    "start": "952040",
    "end": "960800"
  },
  {
    "text": "so while we were building these tools there were some of the requirements which we came across of course as Nanda",
    "start": "960800",
    "end": "968480"
  },
  {
    "text": "mentioned one of the prerequisite for us was that it assumes that your underlying",
    "start": "968480",
    "end": "973560"
  },
  {
    "text": "networking layer is already laid out meaning that your VPC and subnets are already",
    "start": "973560",
    "end": "978800"
  },
  {
    "text": "pre-created along with that there were top most three requirements which we uh",
    "start": "978800",
    "end": "984560"
  },
  {
    "text": "try to include into our tools the first and foremost is that the interface should be very simple meaning that it",
    "start": "984560",
    "end": "991160"
  },
  {
    "text": "can be in the form of a unit of a file or a yl file which any user can just simply provide their cluster metadata",
    "start": "991160",
    "end": "997720"
  },
  {
    "text": "and they can form their cluster in a matter of minutes without even touching the underlying terraform or cloud",
    "start": "997720",
    "end": "1003000"
  },
  {
    "text": "formation the second requirement which we came across is that while we use this tool of course you can create and use",
    "start": "1003000",
    "end": "1009120"
  },
  {
    "text": "this tool to form the Comm cluster fly straight from your desktop but we also want to integrate the cicd automation so",
    "start": "1009120",
    "end": "1016160"
  },
  {
    "text": "tool should also support that where you are using any L user or cicd you should able to maintain your kubernetes cluster",
    "start": "1016160",
    "end": "1022759"
  },
  {
    "text": "using cicd automation as well last but not the least is that while this tool supports the creation of the vanilla",
    "start": "1022759",
    "end": "1029400"
  },
  {
    "text": "kubernetes cluster it should also provide an ability to a user to decorate your kubernetes cluster with the custom",
    "start": "1029400",
    "end": "1035959"
  },
  {
    "text": "plugin and add-ons meaning that if there is a requirement for any cluster where you need to install any specific plugins",
    "start": "1035959",
    "end": "1041160"
  },
  {
    "text": "and add-ons the interface should be the exactly same which they are using using in order to create their kubernetes",
    "start": "1041160",
    "end": "1047120"
  },
  {
    "text": "cluster so here is example for our tool C Flex",
    "start": "1047120",
    "end": "1052400"
  },
  {
    "text": "as you can see that it's a pretty simple yaml interface on the uh left hand side",
    "start": "1052400",
    "end": "1057679"
  },
  {
    "text": "top uh top left hand side you can see that it contains the cluster met data information along with the kubernetes version on the bottom left it contains",
    "start": "1057679",
    "end": "1064799"
  },
  {
    "text": "the your networking uh information in terms of VPC and subnets on the left hand side you can see it has the",
    "start": "1064799",
    "end": "1071120"
  },
  {
    "text": "configuration for code addons and top of that it has a custom add-on as well so as you can see that it's a pretty simple",
    "start": "1071120",
    "end": "1077240"
  },
  {
    "text": "yaml interface and your cluster should be up in a matter of minutes be a cicd or you are driving straight from your",
    "start": "1077240",
    "end": "1084200"
  },
  {
    "text": "desktop and here is our new interface face for the Cadence as you can see that it is pretty simple uh interface where",
    "start": "1084200",
    "end": "1091440"
  },
  {
    "text": "you can simply provide cluster metadata your node group information and you can create your GK cluster and as you can see that the",
    "start": "1091440",
    "end": "1098360"
  },
  {
    "text": "interface is no different than gke as I mentioned earlier that we have added the support for um sorry uh eks into the",
    "start": "1098360",
    "end": "1107480"
  },
  {
    "text": "Cadence as well so all all the experience is very seamless and you don't even have to touch B with the terraform or the cloud information while",
    "start": "1107480",
    "end": "1113559"
  },
  {
    "text": "you are using these tools so now that we discussed about uh",
    "start": "1113559",
    "end": "1118600"
  },
  {
    "text": "overall custom formation and the M uh and uh what about the maintenance before I go into the",
    "start": "1118600",
    "end": "1124919"
  },
  {
    "text": "maintenance for the cloud I want to touch base on some of the cluster maintenance details which we embarked on",
    "start": "1124919",
    "end": "1130320"
  },
  {
    "text": "to the our on Prime Journey Whenever there was a need for us in order to upgrade kubernetes version on Prem the",
    "start": "1130320",
    "end": "1137080"
  },
  {
    "text": "first and foremost thing my team did is to review the chain lock summary look for any breaking changes if there there",
    "start": "1137080",
    "end": "1143360"
  },
  {
    "text": "are any breaking changes we will prepare for the release before we layout for the mass kubernetes version upgrade as Nanda",
    "start": "1143360",
    "end": "1149720"
  },
  {
    "text": "mentioned earlier we have the presence in a seven regions on Prem and which contains about 8,000 plus physical host",
    "start": "1149720",
    "end": "1156760"
  },
  {
    "text": "so doing this kues version upgrad with live workload running on it it's a going to be a tedious",
    "start": "1156760",
    "end": "1162440"
  },
  {
    "text": "process along with that it used to take us some months in order to complete this upgrade due to the physical host nature",
    "start": "1162440",
    "end": "1168960"
  },
  {
    "text": "of our on pram in order to solve that problem my team built operator called a",
    "start": "1168960",
    "end": "1174039"
  },
  {
    "text": "node manager which helps us to automate this entire process where you can simply perform the kubernetes version upgrade",
    "start": "1174039",
    "end": "1180720"
  },
  {
    "text": "upgrade in a controlled manner where it can ensure that your cluster capacity is maintained if there are any failure or",
    "start": "1180720",
    "end": "1186320"
  },
  {
    "text": "error rate it will pause the upgrade along with that it will ensure that it is not impacting the live workload",
    "start": "1186320",
    "end": "1191600"
  },
  {
    "text": "running on into your workload worker notes so as you can see while we are",
    "start": "1191600",
    "end": "1197200"
  },
  {
    "text": "doing this you using this tool we could now finish our kubernetes version",
    "start": "1197200",
    "end": "1202720"
  },
  {
    "text": "upgrade from months to weeks because automation is in place and now you don't need to worry about it about the failure",
    "start": "1202720",
    "end": "1208559"
  },
  {
    "text": "rate or error rate while the upgrade is going on along with that we also combined our node o upgrade with our",
    "start": "1208559",
    "end": "1215400"
  },
  {
    "text": "kubernetes version upgrade so that we can save the tons of Time how do we do that in Cloud well",
    "start": "1215400",
    "end": "1222240"
  },
  {
    "text": "that's advantage of using a managed kubernetes service in Cloud because it gives you out of the box support for the",
    "start": "1222240",
    "end": "1227679"
  },
  {
    "text": "automated kubernetes verion upgrade it ensures that uh your cluster capacity is maintained automatically along with that",
    "start": "1227679",
    "end": "1234240"
  },
  {
    "text": "due to the elastic nature of your compute resource you don't have to um you know drain your node perform the",
    "start": "1234240",
    "end": "1240640"
  },
  {
    "text": "upgrade validate the upgrade and put back in into a red which is the case of on Prem for us so it is really fast and",
    "start": "1240640",
    "end": "1246840"
  },
  {
    "text": "smooth earlier you must have noticed that I mentioned that we are using a specific kubernetes version uh into our",
    "start": "1246840",
    "end": "1253760"
  },
  {
    "text": "configuration file the reason for is that uh we are using stto uh throughout into our ecosystem of Omega and we",
    "start": "1253760",
    "end": "1260120"
  },
  {
    "text": "wanted to ensure that we are using the correct version which is supported by St as well so that's the reason they both",
    "start": "1260120",
    "end": "1266400"
  },
  {
    "text": "should go hand inand however one of the cavat we came across with the GK infrastructure is that if you are",
    "start": "1266400",
    "end": "1272400"
  },
  {
    "text": "pinning specific version of kubernetes and if that specific version is getting EOL GK will move on with the upgrade",
    "start": "1272400",
    "end": "1280759"
  },
  {
    "text": "anyway so now that we talked about cluster management how about the cluster monitoring how do we ensure that after I",
    "start": "1281159",
    "end": "1288039"
  },
  {
    "text": "build and for my cluster the cluster state is stable at any given time along with that it should also ensure that my",
    "start": "1288039",
    "end": "1294400"
  },
  {
    "text": "workloads running on these clusters are also stable enough how do I ensure that I can get notified in the case of any",
    "start": "1294400",
    "end": "1300039"
  },
  {
    "text": "significant events we Leverage The Open Source tool called Prometheus which helps us to store the metric use alert",
    "start": "1300039",
    "end": "1306120"
  },
  {
    "text": "manager which can helps us to alert on a significant event use uh U Prometheus to",
    "start": "1306120",
    "end": "1311600"
  },
  {
    "text": "visualize this metric over time since we had a presence in a seven different regions we also leveraged the",
    "start": "1311600",
    "end": "1317240"
  },
  {
    "text": "Prometheans Federation solution to visualize all of this matrics into a single span of view along with that we",
    "start": "1317240",
    "end": "1324080"
  },
  {
    "text": "also use a Splunk at Yahoo which where we can log onto a signifant events and and potentially alert on that as well",
    "start": "1324080",
    "end": "1331039"
  },
  {
    "text": "how do we do that cloud we leverage same similar tools tool tool set into the cloud as well one of the things which we",
    "start": "1331039",
    "end": "1338279"
  },
  {
    "text": "also leverage when we moved to GK is that we leveraged uh out of the box solution for the OBS where we can trace",
    "start": "1338279",
    "end": "1345080"
  },
  {
    "text": "the specific application events uh and we can um alert uh based on",
    "start": "1345080",
    "end": "1352720"
  },
  {
    "text": "that so now that we talk enough about the cluster man maintenance how about",
    "start": "1354279",
    "end": "1359400"
  },
  {
    "text": "the app security how about the user which gets on to our kuties infrastructure the first and foremost",
    "start": "1359400",
    "end": "1365240"
  },
  {
    "text": "thing when any user uh on more to KU infrastructure is they create a service",
    "start": "1365240",
    "end": "1370400"
  },
  {
    "text": "into our athenz UI for those who don't know about the ethn it's an open source tool you can check out in our GitHub",
    "start": "1370400",
    "end": "1376440"
  },
  {
    "text": "repo which provides as a service identity the first thing you do is as a user is that you will go to Athens UI",
    "start": "1376440",
    "end": "1381799"
  },
  {
    "text": "you create a service along with that you will create the IM role for your given service with using IRS token as you can",
    "start": "1381799",
    "end": "1389000"
  },
  {
    "text": "see in this diagram using a c container which is responsible for giving you x19",
    "start": "1389000",
    "end": "1394279"
  },
  {
    "text": "certificate for your pod or a service all in all at the end of this entire operation you get your pod identity in",
    "start": "1394279",
    "end": "1400240"
  },
  {
    "text": "form of X1 certificate how do you do that in GK as you can see that it's no different than",
    "start": "1400240",
    "end": "1405880"
  },
  {
    "text": "eks except that we are using the uh IM service account in case of",
    "start": "1405880",
    "end": "1412080"
  },
  {
    "text": "gke here is example which uh mentions that how we user on boards our user",
    "start": "1413080",
    "end": "1419360"
  },
  {
    "text": "simply uses these three lines of terraform code where it will set up their whole environment in terms of",
    "start": "1419360",
    "end": "1425159"
  },
  {
    "text": "creating their service into EZ UI form the IM role and at the end of the day they their entire infrastructure is",
    "start": "1425159",
    "end": "1431360"
  },
  {
    "text": "already set up so let's talk about service to service communication now my part got",
    "start": "1431360",
    "end": "1437799"
  },
  {
    "text": "its identity how do I use this identity to communicate from one service to another service well everybody here in",
    "start": "1437799",
    "end": "1443480"
  },
  {
    "text": "the room knows that there comes the service mesh as you can see in this diagram whenever any request comes from",
    "start": "1443480",
    "end": "1449919"
  },
  {
    "text": "the external World it will comes through the S2 ing Gateway it will tunnel through that it will land into the esto",
    "start": "1449919",
    "end": "1455679"
  },
  {
    "text": "sidecar proxy each and every port into a kues ecosystem has a esto sidecar proxy attached with it and for example in this",
    "start": "1455679",
    "end": "1463159"
  },
  {
    "text": "diagram as you can see if service a wants to communicate to a service B they can talk to each other via sto side",
    "start": "1463159",
    "end": "1469080"
  },
  {
    "text": "proxy meaning that they can talk to each other through M mtls using x59 certificate and the traffic retains",
    "start": "1469080",
    "end": "1475559"
  },
  {
    "text": "within the cluster so meaning that the traffic doesn't need to get out of the cluster to communicate to a service B",
    "start": "1475559",
    "end": "1481799"
  },
  {
    "text": "all in all you can save the network cost because your traffic retains within the mesh another advantage of using S2",
    "start": "1481799",
    "end": "1487200"
  },
  {
    "text": "Andreas Gateway is that you can uh it retains the traffic into the same a",
    "start": "1487200",
    "end": "1492600"
  },
  {
    "text": "meaning that many of you must have heard the term locality based routing where if you have a service into a specific Zone",
    "start": "1492600",
    "end": "1499520"
  },
  {
    "text": "and if your targeted service also is retaining in the same Zone it will retain the traffic into the same a again",
    "start": "1499520",
    "end": "1505480"
  },
  {
    "text": "you can save the cost at the cross a level here using the service MH so now my user created a service it",
    "start": "1505480",
    "end": "1512960"
  },
  {
    "text": "has its own identity it can communicate and along with that they also provide the authorization policy for that",
    "start": "1512960",
    "end": "1519240"
  },
  {
    "text": "service meaning that they Define what service can talk to my service on what",
    "start": "1519240",
    "end": "1524520"
  },
  {
    "text": "resources and on what path we converge this authorization policy it into sto authorization policy at the kubernetes",
    "start": "1524520",
    "end": "1530919"
  },
  {
    "text": "cluster level so anytime any communication happens between service a to service B uh our infrastucture",
    "start": "1530919",
    "end": "1537360"
  },
  {
    "text": "ensures that it adds to that St authorization policy so now we talked about okay we",
    "start": "1537360",
    "end": "1543480"
  },
  {
    "text": "take care of the layer seven how about layer four there comes a network policy",
    "start": "1543480",
    "end": "1548520"
  },
  {
    "text": "what is a network policy it's just a specification for a pod or a service to communicate at a network level meaning",
    "start": "1548520",
    "end": "1553840"
  },
  {
    "text": "that you can control the traffic at the port or the IP level when we started our journey um",
    "start": "1553840",
    "end": "1561120"
  },
  {
    "text": "into Cloud we initially leveraged the awcc cni solution which helps us to",
    "start": "1561120",
    "end": "1566240"
  },
  {
    "text": "implement Network policy solution into Cloud however some of our services contain the dot into the name and due to",
    "start": "1566240",
    "end": "1572360"
  },
  {
    "text": "that AWS UPC cni was crashing for us in order to move on with our migration my",
    "start": "1572360",
    "end": "1578120"
  },
  {
    "text": "team leveraged the celm cni solution in AWS to implement the network policy",
    "start": "1578120",
    "end": "1585000"
  },
  {
    "text": "solution so while I uh reach towards the end I want to share some of the key takeaways which can be applicable to",
    "start": "1585000",
    "end": "1591360"
  },
  {
    "text": "somebody who's running their workload on on Prem or starting their journey into the cloud or they are just migrating",
    "start": "1591360",
    "end": "1597360"
  },
  {
    "text": "from on Prime to a cloud the first and foremost is the power of platform",
    "start": "1597360",
    "end": "1603440"
  },
  {
    "text": "engineering well giving abstraction layer to our users or customers really",
    "start": "1603440",
    "end": "1608520"
  },
  {
    "text": "helps them to focus onto their application meaning that our application user can simply focus on building and",
    "start": "1608520",
    "end": "1614320"
  },
  {
    "text": "developing their code com to the GitHub and my team will take care of from Comming to production they don't even",
    "start": "1614320",
    "end": "1619960"
  },
  {
    "text": "need to touch B with the underlying infrastructure at all that means they are totally privileged to just focus on their application and they don't need to",
    "start": "1619960",
    "end": "1626480"
  },
  {
    "text": "worry about anything else tools like Cadence which can really helps us to standardize this cluster creation",
    "start": "1626480",
    "end": "1632320"
  },
  {
    "text": "process across the fleet be it in a multicloud and as a user you don't even have to touch BS with the terraform or",
    "start": "1632320",
    "end": "1638600"
  },
  {
    "text": "the cloud formations bin packing for those on the clouds uh we always want to me ensure",
    "start": "1638600",
    "end": "1645320"
  },
  {
    "text": "that we are using the right sizing of the nodes meaning that you want want to leverage the full utilization of your",
    "start": "1645320",
    "end": "1650440"
  },
  {
    "text": "CPU and memory in order to save some cost using of service match loc based",
    "start": "1650440",
    "end": "1656360"
  },
  {
    "text": "routing as I mentioned earlier it can help you to save the network cost at the NLB layer as well as the cross a",
    "start": "1656360",
    "end": "1663320"
  },
  {
    "text": "layer in terms of in terms of cluster security using a tools like Opa which",
    "start": "1663320",
    "end": "1668559"
  },
  {
    "text": "can really helps us to ensure that only the resource can get admitted to our kubernetes ecosystem which are aing to",
    "start": "1668559",
    "end": "1674120"
  },
  {
    "text": "our admission policies tools like Cube bch can helps us to make make sure that we are adding to our CSI benchmarking uh",
    "start": "1674120",
    "end": "1681720"
  },
  {
    "text": "security and compliance rules tools like image policy vbook in the case of on Prime for us and ensures that only",
    "start": "1681720",
    "end": "1688120"
  },
  {
    "text": "signed Docker images are getting entered into our kubernetes ecosystem and many",
    "start": "1688120",
    "end": "1693159"
  },
  {
    "text": "more combining the upgrade uh in case of on Prem along with the no version and kubernetes version upgrade really helps",
    "start": "1693159",
    "end": "1699720"
  },
  {
    "text": "us to save time when your scale is really large last but not the least is",
    "start": "1699720",
    "end": "1705120"
  },
  {
    "text": "that having the well Architect reviews meaning that ensuring that your secure your cluster security posture is",
    "start": "1705120",
    "end": "1711240"
  },
  {
    "text": "maintained at any given time along with that ensuring that your application running on this kubernetes infrastructure is also aing to a",
    "start": "1711240",
    "end": "1718440"
  },
  {
    "text": "security and compliance at overall so as of this uh as of today we",
    "start": "1718440",
    "end": "1725720"
  },
  {
    "text": "have about 40 plus kubernetes cluster running into our multicloud we just successfully launched",
    "start": "1725720",
    "end": "1731960"
  },
  {
    "text": "our header bider pre prebid project which is serving about 50k RPS and it",
    "start": "1731960",
    "end": "1738200"
  },
  {
    "text": "using that our that team sold about one3 of their cost what is next for us well",
    "start": "1738200",
    "end": "1743600"
  },
  {
    "text": "2025 is all about the migration for us we want to migrate as many application as we can from the on Prem to the",
    "start": "1743600",
    "end": "1749640"
  },
  {
    "text": "multicloud environment and probably who knows we will come back next year and share our",
    "start": "1749640",
    "end": "1754919"
  },
  {
    "text": "stories so with that I want to thank you my team without them this entire Journey wouldn't have have been possible thank",
    "start": "1754919",
    "end": "1761760"
  },
  {
    "text": "you for joining into this session if you have any feedback for us please scan this QR code and uh we are I'm bring the",
    "start": "1761760",
    "end": "1768320"
  },
  {
    "text": "FL floor for any questions you may [Applause]",
    "start": "1768320",
    "end": "1779089"
  },
  {
    "text": "have hi uh thank you for the presentation uh I was wondering when you do automatic upgrades of the K version",
    "start": "1785919",
    "end": "1792720"
  },
  {
    "text": "how do you handle deprecations of manifest files like HPA recently got deprecate or it the the version got",
    "start": "1792720",
    "end": "1798559"
  },
  {
    "text": "upgraded so how do you handle that automatically that's where our templating would come in so not every",
    "start": "1798559",
    "end": "1806399"
  },
  {
    "text": "user need to figure out what hpo version like we have come through a crazy ages of from 2016 where we have seen V1 beta",
    "start": "1806399",
    "end": "1813840"
  },
  {
    "text": "1 finally uh got the HPA V1 yeah so we upgrade the template and and the good",
    "start": "1813840",
    "end": "1820760"
  },
  {
    "text": "thing about the kubernetes is that you have the version compatibility um before",
    "start": "1820760",
    "end": "1826279"
  },
  {
    "text": "they deprecate it so we follow up our users we change the template and promote it and let the user redeploy it to get",
    "start": "1826279",
    "end": "1833039"
  },
  {
    "text": "the changes so yeah it is an active followup with the users yeah so is there an automatic process for that or do you",
    "start": "1833039",
    "end": "1839399"
  },
  {
    "text": "manually after every release go through the docks and make those changes manually right now it's a manual",
    "start": "1839399",
    "end": "1845720"
  },
  {
    "text": "screening yeah thank",
    "start": "1845720",
    "end": "1849398"
  },
  {
    "text": "you hi um thank you so it sounds like Cadence was an internally developed Tool",
    "start": "1853519",
    "end": "1860440"
  },
  {
    "text": "uh Yahoo specific do you have any recommendations for similar tools that might be available on the open source",
    "start": "1860440",
    "end": "1866960"
  },
  {
    "text": "environment so there are multiple tools which we found which were available in the open source however when we came",
    "start": "1866960",
    "end": "1875279"
  },
  {
    "text": "across the you know over the research end of the research we couldn't find any specific tool which can helps us and",
    "start": "1875279",
    "end": "1881360"
  },
  {
    "text": "also add to our internal ecosystem for example we had a certain integration where we are following some internet",
    "start": "1881360",
    "end": "1887200"
  },
  {
    "text": "tools for setting up the bash and host we are using some internal tools which we can use to set up some pre-",
    "start": "1887200",
    "end": "1893519"
  },
  {
    "text": "infrastructure level so we had that challenge when we started you know considering that okay we want to build",
    "start": "1893519",
    "end": "1899080"
  },
  {
    "text": "our own tool another reason for like there when we started about 2018 earlier",
    "start": "1899080",
    "end": "1904360"
  },
  {
    "text": "we use a flex at that time there are not many tools available so based on our learning from the flex we thought okay",
    "start": "1904360",
    "end": "1911080"
  },
  {
    "text": "we need to reamp this tool we want to use goang instead of Ruby and you know which can helps us to create the cluster",
    "start": "1911080",
    "end": "1917360"
  },
  {
    "text": "in a wave of which we want thank you so much excellent presentation um I have two questions uh",
    "start": "1917360",
    "end": "1924480"
  },
  {
    "text": "first question I'm not sure if I missed this but I'm just curious why you guys have both GK and eks clusters um and",
    "start": "1924480",
    "end": "1931320"
  },
  {
    "text": "second question is I'm wondering if you're able to talk more about the internals of node manager like how it",
    "start": "1931320",
    "end": "1937320"
  },
  {
    "text": "facilitates cluster upgrades and like how you validate test um the",
    "start": "1937320",
    "end": "1942919"
  },
  {
    "text": "upgrades what was the first question um I'm not sure I heard the first question can you repeat your first question oh yeah the first question is why do you",
    "start": "1942919",
    "end": "1949440"
  },
  {
    "text": "have both GK and eks clusters why do we have both GK and EK clusters well when",
    "start": "1949440",
    "end": "1955360"
  },
  {
    "text": "we started this journey some of our application workloads which wants to use some of the manage service from the GG",
    "start": "1955360",
    "end": "1961279"
  },
  {
    "text": "which are not presently available in awsa of course there are a lot of cost aspect when you are acquiring any of the",
    "start": "1961279",
    "end": "1967760"
  },
  {
    "text": "cloud between AWS or GK that was the one reason uh so that's the reason based on",
    "start": "1967760",
    "end": "1972960"
  },
  {
    "text": "the use case we had to pick one Cloud out of the two what was your second question question um are you able to",
    "start": "1972960",
    "end": "1980399"
  },
  {
    "text": "share more about the internals of node manager how it helps cluster upgrades and how you do testing and validation",
    "start": "1980399",
    "end": "1987760"
  },
  {
    "text": "yes so when we wrote this node manager it's it's nothing but the kubernetes operator it's a crd base you create your",
    "start": "1987760",
    "end": "1994919"
  },
  {
    "text": "uh custom resource with the configurations it contains a bunch of node groups with its respective failure",
    "start": "1994919",
    "end": "2000480"
  },
  {
    "text": "threshold so we also have mul different category of a node groups so it's a entirely all in controller along with",
    "start": "2000480",
    "end": "2006519"
  },
  {
    "text": "that you can mount your kubernetes version steps into that or",
    "start": "2006519",
    "end": "2012039"
  },
  {
    "text": "you can provide as a config Mac which can go and run across on each and every kubernetes node and how do we validate",
    "start": "2012039",
    "end": "2019159"
  },
  {
    "text": "along with that kubernetes version upgrade we also have injected the validation step along with it so it goes",
    "start": "2019159",
    "end": "2024840"
  },
  {
    "text": "into like a phased manner for where you can see a typical controller world where you can say that it's a dispatch it's in",
    "start": "2024840",
    "end": "2031039"
  },
  {
    "text": "progress from that it can go to either failure or it can go to the complete state after the validation and it also",
    "start": "2031039",
    "end": "2037000"
  },
  {
    "text": "adds a retry all so all in know just a node management control I'm happy to talk to you offline if you need more information all right thank you so",
    "start": "2037000",
    "end": "2045360"
  },
  {
    "text": "much thank you every thanks everyone thanks everyone",
    "start": "2048720",
    "end": "2055599"
  }
]