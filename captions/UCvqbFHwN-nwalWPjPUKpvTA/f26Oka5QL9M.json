[
  {
    "text": "right good morning my name is Arun Gupta and I work for Amazon in the open source",
    "start": "30",
    "end": "5220"
  },
  {
    "text": "team how many of you are Java developers know almost 90% of you so I think this",
    "start": "5220",
    "end": "12990"
  },
  {
    "text": "talk is very relevant in that sense I've been a longtime Java developer I started",
    "start": "12990",
    "end": "18300"
  },
  {
    "text": "my Java journey back in 99 when we were doing jdk 1.6 now as a Java developer",
    "start": "18300",
    "end": "28410"
  },
  {
    "text": "I'm always thinking about where a new technology comes along how do I start",
    "start": "28410",
    "end": "33600"
  },
  {
    "text": "with that technology how do I start learning that technology applying my existing skills so this is how sort of",
    "start": "33600",
    "end": "40200"
  },
  {
    "text": "how I created this github workspace there are no slides and so this is purely gonna be code driven and workshop",
    "start": "40200",
    "end": "48000"
  },
  {
    "text": "here so in the next 35 minutes or so I hope to guide you what should your journey look like if you are a Java",
    "start": "48000",
    "end": "54300"
  },
  {
    "text": "developer and you want to get started with say kubernetes essentially that's sort of what it looks like okay now if",
    "start": "54300",
    "end": "60449"
  },
  {
    "text": "you look at it here as I said earlier all of the code is available on this",
    "start": "60449",
    "end": "66270"
  },
  {
    "text": "github repo so this is sort of the one that you wanna bookmark essentially and",
    "start": "66270",
    "end": "71670"
  },
  {
    "text": "the way I look at it is file issues send me pull requests star it fork it you",
    "start": "71670",
    "end": "78090"
  },
  {
    "text": "know whatever way you want to monitor it but that's sort of where all the content is sitting now as an application",
    "start": "78090",
    "end": "86009"
  },
  {
    "text": "developer what I'm going to do is I'm going to show you quickly what our application looks like it's a simple",
    "start": "86009",
    "end": "91350"
  },
  {
    "text": "spring good application just simple hello world that's the intent because you know how to build a lot more fancier",
    "start": "91350",
    "end": "98009"
  },
  {
    "text": "and more better applications essentially then I'm gonna show you how you build",
    "start": "98009",
    "end": "103290"
  },
  {
    "text": "and test that using maven then we start building that application that okay what is my first step in the journey for",
    "start": "103290",
    "end": "109470"
  },
  {
    "text": "kubernetes I need to make a docker image out of their java application what are",
    "start": "109470",
    "end": "114720"
  },
  {
    "text": "my choices around that so we'll talk about that briefly then we take it take a look at it particularly from the Java",
    "start": "114720",
    "end": "120240"
  },
  {
    "text": "perspective what are the things that I need to be aware of can I use JDK as a base image should I use JRE as the base",
    "start": "120240",
    "end": "126840"
  },
  {
    "text": "image with JDK 11 what are the things that I need to be concerned about",
    "start": "126840",
    "end": "132390"
  },
  {
    "text": "then we talk about how do I once I build the docker image how do I take that docker image and now run it on a Cuban",
    "start": "132390",
    "end": "140160"
  },
  {
    "text": "eros cluster and what are my choices for running kubernetes locally on my machine in the cloud so those are the different",
    "start": "140160",
    "end": "147120"
  },
  {
    "text": "options that we can consider then we're going to migrate the application from your development mode which is on your",
    "start": "147120",
    "end": "153300"
  },
  {
    "text": "laptop to the production mode which is in the in the cloud we'll talk a little bit about the relevance of surface mesh",
    "start": "153300",
    "end": "159750"
  },
  {
    "text": "what does it give you what does it by you why do you need it and what are your choices around that we'll talk a little",
    "start": "159750",
    "end": "168930"
  },
  {
    "text": "bit about deployment pipeline because that's a relevant aspect now as you are doing a good push to your application as",
    "start": "168930",
    "end": "174810"
  },
  {
    "text": "soon as you do git push we you want the application to be available in your development or in your deployment",
    "start": "174810",
    "end": "181260"
  },
  {
    "text": "environment so we'll talk about all of those different options okay so let's go look at our application first thing so",
    "start": "181260",
    "end": "187950"
  },
  {
    "text": "if you look at app this is a directory where my application is sitting and as I said this is a simple spring boot",
    "start": "187950",
    "end": "193980"
  },
  {
    "text": "application so if you look into the source and if you look at my greeting",
    "start": "193980",
    "end": "199890"
  },
  {
    "text": "controller it's a very simple Springwood application all it returns on line 14 is",
    "start": "199890",
    "end": "207090"
  },
  {
    "text": "hello so essentially when you run the application and you hit it on /hello it",
    "start": "207090",
    "end": "212100"
  },
  {
    "text": "would return that hello response to you okay if you look at my Palm D'Or XML",
    "start": "212100",
    "end": "219900"
  },
  {
    "text": "which is how I build my java application nothing fancy I'm using spring boot",
    "start": "219900",
    "end": "224970"
  },
  {
    "text": "starter as my parent I have the spring boot maven plug-in in there and we'll",
    "start": "224970",
    "end": "231150"
  },
  {
    "text": "talk about this profile a bit later but so very standard spring food application",
    "start": "231150",
    "end": "236459"
  },
  {
    "text": "no special dependencies required over there okay now if I were to run this",
    "start": "236459",
    "end": "242310"
  },
  {
    "text": "application it would return hello okay that's not the point though so if you go down here I'm going to say maven",
    "start": "242310",
    "end": "248340"
  },
  {
    "text": "spring good run and I say Karl and it returns hello yeah I've only 35 minutes so you can only do live demos so much so",
    "start": "248340",
    "end": "255330"
  },
  {
    "text": "I'm just gonna walk you through it essentially so now the second step for you is now that your application is up",
    "start": "255330",
    "end": "261450"
  },
  {
    "text": "and running you want to get the exact same out from the darker image because the first",
    "start": "261450",
    "end": "268380"
  },
  {
    "text": "step in your journey to cover notice is to create a darker image out of a java application okay so what are your",
    "start": "268380",
    "end": "273540"
  },
  {
    "text": "choices for creating darker image you can use docker file that is one of the",
    "start": "273540",
    "end": "278960"
  },
  {
    "text": "ways by which you create a darker image you can use a maven plug-in that is",
    "start": "278960",
    "end": "284460"
  },
  {
    "text": "another option and there are a lot of variety for the maven plugins that is available so we'll talk a little bit",
    "start": "284460",
    "end": "289650"
  },
  {
    "text": "about that now as you are using a darker image or a darker file what should be a base image B can I use",
    "start": "289650",
    "end": "296460"
  },
  {
    "text": "JDK as a base image or should I use JRE as a base image with JDK 11 or the other",
    "start": "296460",
    "end": "303060"
  },
  {
    "text": "nine onwards you can create custom Geri's so how does that work out you know because eventually when your",
    "start": "303060",
    "end": "309990"
  },
  {
    "text": "application is deployed in kubernetes and you're using a micro services based architecture your docker image is",
    "start": "309990",
    "end": "317070"
  },
  {
    "text": "downloaded on the fly at a particular node so it's very important that your",
    "start": "317070",
    "end": "323190"
  },
  {
    "text": "image size is small so if we use JDK the base image then you are unnecessarily",
    "start": "323190",
    "end": "330000"
  },
  {
    "text": "bundling the compiler and everything into the application itself that's where you start looking at it let me use JRE",
    "start": "330000",
    "end": "335850"
  },
  {
    "text": "as a base image okay so what I'm gonna do here is I'm going to go back to my",
    "start": "335850",
    "end": "341100"
  },
  {
    "text": "application here and I'm going to show you a docker file here okay",
    "start": "341100",
    "end": "348349"
  },
  {
    "text": "now in this dockerfile let's talk walk through this little bit okay so first of all on line one",
    "start": "351240",
    "end": "356460"
  },
  {
    "text": "I'm using maven as a base image okay and this is important because now I can give",
    "start": "356460",
    "end": "362400"
  },
  {
    "text": "this docker file to anywhere where docker is available and I don't need to deploy or install maven separately I'm",
    "start": "362400",
    "end": "369419"
  },
  {
    "text": "using maven as the base image itself that means it will download the maven docker image and it will have maven",
    "start": "369419",
    "end": "376139"
  },
  {
    "text": "pre-installed so once I do that then I can copy my source code and now I can",
    "start": "376139",
    "end": "382800"
  },
  {
    "text": "run maven itself now one of the steps that is commented out here is for example I can create my local maven",
    "start": "382800",
    "end": "390509"
  },
  {
    "text": "repository and upload it into the image itself this will save time by which when",
    "start": "390509",
    "end": "397590"
  },
  {
    "text": "the image is being built it will not download the maven every time into the image so that's some of the patterns",
    "start": "397590",
    "end": "403199"
  },
  {
    "text": "that you can see how it can make your image a bit more efficient now this is",
    "start": "403199",
    "end": "410370"
  },
  {
    "text": "first from statement in a darker file you can have multiple from statements",
    "start": "410370",
    "end": "416010"
  },
  {
    "text": "and those are called as a multi-stage darker file so for example in this case my first from statement is maven and I'm",
    "start": "416010",
    "end": "424080"
  },
  {
    "text": "calling it as a build stage okay now the second statement is from where I have",
    "start": "424080",
    "end": "429900"
  },
  {
    "text": "open JDK 8 JRE slim as the base image and in this case what I'm doing is I'm",
    "start": "429900",
    "end": "435990"
  },
  {
    "text": "saying from the build stage copy my jar file that was built into the second",
    "start": "435990",
    "end": "442530"
  },
  {
    "text": "stage this is a very important step because you don't want to have all the",
    "start": "442530",
    "end": "447870"
  },
  {
    "text": "classes all the jar files everything that may when downloaded to be included",
    "start": "447870",
    "end": "452940"
  },
  {
    "text": "in your eventual image which is the final image so what you do is you just copy the target directory because that's",
    "start": "452940",
    "end": "460409"
  },
  {
    "text": "exactly where everything is going to live you copy that and then you set up your java options which would be very",
    "start": "460409",
    "end": "466949"
  },
  {
    "text": "useful if you were to debug the application using your IDE of your choice and then you fire up your",
    "start": "466949",
    "end": "472349"
  },
  {
    "text": "application so basically you took the exact same java application and using a",
    "start": "472349",
    "end": "478229"
  },
  {
    "text": "multi-stage dockerfile you have downloaded maven and you have used the JDK slim or JRE slim as a base",
    "start": "478229",
    "end": "484620"
  },
  {
    "text": "image and created a new docker image for you now one of the tools that was",
    "start": "484620",
    "end": "493650"
  },
  {
    "text": "introduced in jelly canine or other two tools they are called as J link and J",
    "start": "493650",
    "end": "499470"
  },
  {
    "text": "depths and because Jerry canine kind of fundamentally change how the JDK itself is built",
    "start": "499470",
    "end": "504930"
  },
  {
    "text": "so what J depths does is it takes a look at your application and it says give me",
    "start": "504930",
    "end": "510570"
  },
  {
    "text": "the list of modules that your application depends upon okay so if you go down here",
    "start": "510570",
    "end": "517789"
  },
  {
    "text": "so what I've done is I've created my war file I rename it to a jar file now on my",
    "start": "524339",
    "end": "533959"
  },
  {
    "text": "jar file I'm saying run J dips okay so",
    "start": "533959",
    "end": "539279"
  },
  {
    "text": "take the target slash AB dot jar print all the module that it depends upon",
    "start": "539279",
    "end": "545209"
  },
  {
    "text": "because I don't want to include everything that is included as part of JDK as part of my JRE what I'm doing",
    "start": "545209",
    "end": "553290"
  },
  {
    "text": "here is essentially creating a custom JRE so with this custom GRE it gives me",
    "start": "553290",
    "end": "561689"
  },
  {
    "text": "the ability to print my custom modules and these are the modules that are required by spring boot as well so now",
    "start": "561689",
    "end": "568110"
  },
  {
    "text": "what I'm doing is I have the list of all the modules that are specified by this",
    "start": "568110",
    "end": "575240"
  },
  {
    "text": "then I'm using the tool J link saying add all the modules and create my custom",
    "start": "575240",
    "end": "581490"
  },
  {
    "text": "JRE so up until JDK 8 there was a standard Gerry that was being shipped",
    "start": "581490",
    "end": "588059"
  },
  {
    "text": "with Java but starting JDK 9 you have to build your custom jewelry so instead of",
    "start": "588059",
    "end": "594050"
  },
  {
    "text": "building the entire JDK or the JRE now you're building a custom GRE which is",
    "start": "594050",
    "end": "599129"
  },
  {
    "text": "very specific to your application and then using that as the base image essentially so if I go back here",
    "start": "599129",
    "end": "607339"
  },
  {
    "text": "if I go to my application now",
    "start": "610820",
    "end": "614620"
  },
  {
    "text": "and if I look at say dockerfile dorje re here so all I'm doing is I'm just saying",
    "start": "619110",
    "end": "625709"
  },
  {
    "text": "debian 9 slim as a base image then I'm copying app dot war into the root",
    "start": "625709",
    "end": "631820"
  },
  {
    "text": "copying the custom jewelry that was generated for me and that's it from there Jerry",
    "start": "631820",
    "end": "637500"
  },
  {
    "text": "is where my JVM is being available and I'm using that JVM to spin up my",
    "start": "637500",
    "end": "643500"
  },
  {
    "text": "application so it's a lot smaller darker image and as we talked about that is super important particularly because you",
    "start": "643500",
    "end": "650370"
  },
  {
    "text": "know in a micro-services environment you want the darker image to be small so that in case it needs to be downloaded",
    "start": "650370",
    "end": "655649"
  },
  {
    "text": "and of communities host it's easier to download another tool that is very",
    "start": "655649",
    "end": "662310"
  },
  {
    "text": "important particularly from a Java developer perspective is and that I want to highlight here is if you look at the",
    "start": "662310",
    "end": "669240"
  },
  {
    "text": "Palm D'Or XML it's called as a jib plugin now in my maven pom.xml I have a",
    "start": "669240",
    "end": "676500"
  },
  {
    "text": "jib profile and I'm using the jib maven plugin this is version 1.1.2 and this",
    "start": "676500",
    "end": "682649"
  },
  {
    "text": "plugin can us fits seamlessly with your entire pound or XML flow so what you do",
    "start": "682649",
    "end": "688560"
  },
  {
    "text": "is you define a profile here now when you say maven package and if you specify this profile it will actually generate a",
    "start": "688560",
    "end": "695490"
  },
  {
    "text": "darker image for you and this particular tool is particularly useful because in",
    "start": "695490",
    "end": "701070"
  },
  {
    "text": "this case thing for your spring application in spring application how",
    "start": "701070",
    "end": "706620"
  },
  {
    "text": "many times your dependencies change versus your application change so what it does it it says I'm gonna make the",
    "start": "706620",
    "end": "713430"
  },
  {
    "text": "dependency as an extra layer in darker image and the application as an extra",
    "start": "713430",
    "end": "718950"
  },
  {
    "text": "layer in darker image now if you take a step back the way your darker image is created is a bunch of layers altogether",
    "start": "718950",
    "end": "725490"
  },
  {
    "text": "and if only a single layer is changed and when your image needs to be the new",
    "start": "725490",
    "end": "731070"
  },
  {
    "text": "image needs to be downloaded it will download only that single layer so by splitting a spring boot application into",
    "start": "731070",
    "end": "738529"
  },
  {
    "text": "dependencies and application and other dependencies it makes it easy for you to",
    "start": "738529",
    "end": "744990"
  },
  {
    "text": "download only that specific layer so essentially your dependencies which may not have changed it will not download",
    "start": "744990",
    "end": "750930"
  },
  {
    "text": "them but it will download only the application layer that has changed for you so what I'm doing here is I'm in",
    "start": "750930",
    "end": "757560"
  },
  {
    "text": "this maven plug-in I'm saying use JRE slim as the base image and everything",
    "start": "757560",
    "end": "762570"
  },
  {
    "text": "that I specified in my darker file is now being specified here so same image",
    "start": "762570",
    "end": "768420"
  },
  {
    "text": "size but a little bit more optimized for your Java development environment particularly for a spring developer",
    "start": "768420",
    "end": "776330"
  },
  {
    "text": "so now you have a basic darker image ready for you okay now you need to",
    "start": "789170",
    "end": "795480"
  },
  {
    "text": "convert that darker image so that it can be understood by kubernetes so that's where you know you can start learning",
    "start": "795480",
    "end": "800700"
  },
  {
    "text": "about the kubernetes terminology you need to understand that the basic terminology in kubernetes is a pod",
    "start": "800700",
    "end": "806940"
  },
  {
    "text": "so you deploy a pod now pod is not something that you deploy by itself so",
    "start": "806940",
    "end": "812460"
  },
  {
    "text": "pod is typically done by a deployment because in deployment is a declarative",
    "start": "812460",
    "end": "818280"
  },
  {
    "text": "way of saying what the pod needs to have and how many replicas it needs to have so what you say is take this deployment",
    "start": "818280",
    "end": "825650"
  },
  {
    "text": "the deployment will create the pod the pod will have the container and how many",
    "start": "825650",
    "end": "831270"
  },
  {
    "text": "replicas of the part that you want and all of those are essentially your resource descriptions in kubernetes that",
    "start": "831270",
    "end": "838770"
  },
  {
    "text": "you need to create so you need to understand what the schema looks like and then essentially create your resource description accordingly now",
    "start": "838770",
    "end": "845450"
  },
  {
    "text": "just creating a pod and a deployment may not be sufficient because all of those",
    "start": "845450",
    "end": "851640"
  },
  {
    "text": "so the pod and the deployment they're given IP address but that IP address is",
    "start": "851640",
    "end": "857190"
  },
  {
    "text": "not accessible outside the cluster so what you end up doing is you also create",
    "start": "857190",
    "end": "862560"
  },
  {
    "text": "a service description and that service description depending upon how you write the service description is accessible",
    "start": "862560",
    "end": "869400"
  },
  {
    "text": "inside or outside the cluster okay so the three basic concepts that you need to understand it is a part a deployment",
    "start": "869400",
    "end": "876330"
  },
  {
    "text": "and a service those are three resources that you need to create ok so let me show you how does that work really so if",
    "start": "876330",
    "end": "884820"
  },
  {
    "text": "I go to the manifest directory here so I",
    "start": "884820",
    "end": "890670"
  },
  {
    "text": "have",
    "start": "890670",
    "end": "892910"
  },
  {
    "text": "app dot camel which is where all my app descriptions are available",
    "start": "895770",
    "end": "903240"
  },
  {
    "text": "okay so now in this app this is sort of",
    "start": "909190",
    "end": "914779"
  },
  {
    "text": "how my kubernetes manifest looks like so if you look at this on the line one I'm saying this is the app version 1 line 2",
    "start": "914779",
    "end": "920720"
  },
  {
    "text": "I describe this is of a kind deployment I specify some metadata then in the spec",
    "start": "920720",
    "end": "927350"
  },
  {
    "text": "which is a deployment spec I say 1 replicas and this is one replica of the pot then I specify certain match labels",
    "start": "927350",
    "end": "935870"
  },
  {
    "text": "that means this deployment will have the pod that are going to have these labels over there I keep going down over here",
    "start": "935870",
    "end": "942110"
  },
  {
    "text": "this way I define my template for the deployment and this is my part spec",
    "start": "942110",
    "end": "947450"
  },
  {
    "text": "essentially ok so this is sort of all what goes into the pod spec now I'm",
    "start": "947450",
    "end": "952730"
  },
  {
    "text": "saying this pod has one container of the tied greeting and it has the image Arun",
    "start": "952730",
    "end": "958070"
  },
  {
    "text": "Gupta slash greeting which is the image that we created earlier and this pod",
    "start": "958070",
    "end": "965779"
  },
  {
    "text": "also has a label app colon greeting and the good thing is because this pod has these well what are labels labels is",
    "start": "965779",
    "end": "971930"
  },
  {
    "text": "basically a key value pair so a key and a value you can pick them randomly whatever you want in this case I happen",
    "start": "971930",
    "end": "978740"
  },
  {
    "text": "to choose app : greeting so the pod has these two label this one label app :",
    "start": "978740",
    "end": "984170"
  },
  {
    "text": "greeting and in the deployment I'm saying match any part that has these labels ok the pod also expose a",
    "start": "984170",
    "end": "993649"
  },
  {
    "text": "container port 8080 but that is only available in the part itself okay so my",
    "start": "993649",
    "end": "999440"
  },
  {
    "text": "deployment has the pod spec so those are my two resources that I wanted to create earlier and now I also have a service in",
    "start": "999440",
    "end": "1006399"
  },
  {
    "text": "the service I'm giving the service has a selector and what the service is saying",
    "start": "1006399",
    "end": "1012149"
  },
  {
    "text": "pick any pod that has this label on it so app : greeting which is again the",
    "start": "1012149",
    "end": "1018490"
  },
  {
    "text": "same label that was on my pod created by the deployment so think about it this",
    "start": "1018490",
    "end": "1023560"
  },
  {
    "text": "way from your perspective you had your java application the java application you converted into a docker image the",
    "start": "1023560",
    "end": "1031720"
  },
  {
    "text": "docker image is what you've specified in your deployment spec and then you create",
    "start": "1031720",
    "end": "1037270"
  },
  {
    "text": "a service on top of that and the way the service and the are correlated is using labels and it",
    "start": "1037270",
    "end": "1044150"
  },
  {
    "text": "was a very loosely coupled architecture in that sense so now you have done a",
    "start": "1044150",
    "end": "1049610"
  },
  {
    "text": "deployment and you have a service service is a standard IP address that is",
    "start": "1049610",
    "end": "1055010"
  },
  {
    "text": "available to you that is accessible to you because pods are given IP address but if parts turbinate and if they come",
    "start": "1055010",
    "end": "1061490"
  },
  {
    "text": "up on a different host of your kubernetes cluster may be given a different IP address that's not",
    "start": "1061490",
    "end": "1066890"
  },
  {
    "text": "something that you can rely upon but service is given a standard IP address that is accessible and is fixed for the",
    "start": "1066890",
    "end": "1074299"
  },
  {
    "text": "duration of the service in this case I'm",
    "start": "1074299",
    "end": "1080510"
  },
  {
    "text": "also specifying a type as a load balancer and the advantage of that is depending upon where this service is",
    "start": "1080510",
    "end": "1086510"
  },
  {
    "text": "deployed whether it's deployed on your local cluster or in the cloud cluster if it's deployed in a cloud cluster or say",
    "start": "1086510",
    "end": "1093590"
  },
  {
    "text": "Amazon in that case so it will automatically instantiate an ELB for you so now the service is accessible to you",
    "start": "1093590",
    "end": "1099890"
  },
  {
    "text": "over ELB ok so you have a service ready to go accessible on a ELB and a load",
    "start": "1099890",
    "end": "1107270"
  },
  {
    "text": "balancer and then behind the scene you have a deployment and then you can scale the number of replicas up and down so",
    "start": "1107270",
    "end": "1114500"
  },
  {
    "text": "every time you hit the service is going to pick one of the parts that is available as part of the deployment",
    "start": "1114500",
    "end": "1120200"
  },
  {
    "text": "return that as a response back and that is the part that is serving your request",
    "start": "1120200",
    "end": "1126070"
  },
  {
    "text": "now another part as you need to understand is as you are building your application which is micro services",
    "start": "1130950",
    "end": "1137040"
  },
  {
    "text": "oriented typically you know your application will have a lot of micro services and each micro service in that",
    "start": "1137040",
    "end": "1143970"
  },
  {
    "text": "sense will map to a deployment and a service so how do you manage all of",
    "start": "1143970",
    "end": "1149220"
  },
  {
    "text": "these multiple deployments and services altogether well that's where the concept of help chart kicks in hem chart kind of",
    "start": "1149220",
    "end": "1156540"
  },
  {
    "text": "defines on how your application needs to be defined it's sort of the standard way or the de facto way by which you define",
    "start": "1156540",
    "end": "1162630"
  },
  {
    "text": "your kubernetes application so if I scroll down here a little bit actually",
    "start": "1162630",
    "end": "1170340"
  },
  {
    "text": "in my manifest directory itself if I",
    "start": "1170340",
    "end": "1176160"
  },
  {
    "text": "look at my app this directory is what",
    "start": "1176160",
    "end": "1181200"
  },
  {
    "text": "indicates what a help chart looks like okay now this is using version 2 version 3 is actively being developed and things",
    "start": "1181200",
    "end": "1188460"
  },
  {
    "text": "are changing over there but at least for version 2 what you have is a top-level chart dot y amyl which basically defines",
    "start": "1188460",
    "end": "1196380"
  },
  {
    "text": "you know the metadata about the application itself so you can say the API version the app version what the",
    "start": "1196380",
    "end": "1202080"
  },
  {
    "text": "description of the helmet chart looks like then in the values 30ml you define certain values so think of this as your",
    "start": "1202080",
    "end": "1209400"
  },
  {
    "text": "constants that can be used across your template files so if your application has multiple micro services that means",
    "start": "1209400",
    "end": "1216480"
  },
  {
    "text": "it has multiple resource and multiple description deployments and services these values can be templatized over",
    "start": "1216480",
    "end": "1224010"
  },
  {
    "text": "there in those description files so now if I go to my templates directory that's",
    "start": "1224010",
    "end": "1230190"
  },
  {
    "text": "where all the magic happens essentially so here I have my greeting deployment and greeting service so if I look at my",
    "start": "1230190",
    "end": "1236880"
  },
  {
    "text": "grading deployment essentially this looks very much like my deployment file",
    "start": "1236880",
    "end": "1242940"
  },
  {
    "text": "that I saw earlier but now it's a lot more templatized because what I'm doing is I'm saying the metadata is the",
    "start": "1242940",
    "end": "1249720"
  },
  {
    "text": "release name - greeting now this release name is the one that is defined in my",
    "start": "1249720",
    "end": "1254850"
  },
  {
    "text": "values gamma already similarly I can say values not replicas count and the idea",
    "start": "1254850",
    "end": "1261150"
  },
  {
    "text": "of whole idea over here is now you can have multiple deployment and a multiple service files and by using template language over",
    "start": "1261150",
    "end": "1269370"
  },
  {
    "text": "there it gives you a standard mechanism on how you can access or how you can define these values rather so for",
    "start": "1269370",
    "end": "1276870"
  },
  {
    "text": "example in my this is my deployment and in here I'm saying the part spec has",
    "start": "1276870",
    "end": "1284070"
  },
  {
    "text": "released dot name - gridding now if I look at my grading service here in",
    "start": "1284070",
    "end": "1291559"
  },
  {
    "text": "selector I'm saying the release dot name slash greeting so the chances of having",
    "start": "1291559",
    "end": "1297000"
  },
  {
    "text": "a typo occurring is a lot less because what you're using is a standard template language and those values are again",
    "start": "1297000",
    "end": "1303390"
  },
  {
    "text": "being specified in a single values or DML file for you so all that is fun now",
    "start": "1303390",
    "end": "1309750"
  },
  {
    "text": "what I want to do is I want to actually deploy this helmet art and I want to",
    "start": "1309750",
    "end": "1315900"
  },
  {
    "text": "test this application how do you test this application so then again you have multiple ways of spinning up a",
    "start": "1315900",
    "end": "1321330"
  },
  {
    "text": "kubernetes cluster first of all on your local machine you know I want to test the kubernetes cluster in my local machine so a couple of options you can",
    "start": "1321330",
    "end": "1328559"
  },
  {
    "text": "use docker for desktop so if you're using docker on Windows or Linux or on",
    "start": "1328559",
    "end": "1334470"
  },
  {
    "text": "Mac at least on Windows and Mac you can enable kubernetes very easily so if you",
    "start": "1334470",
    "end": "1340500"
  },
  {
    "text": "have darker running then you go to the preferences and say enable kubernetes and what that gives you is a single node",
    "start": "1340500",
    "end": "1348150"
  },
  {
    "text": "kubernetes cluster that is running on your local machine so very easy to get started with and start playing with it",
    "start": "1348150",
    "end": "1354540"
  },
  {
    "text": "well that's one option second option is to use mini cube so you can download mini cube which basically requires",
    "start": "1354540",
    "end": "1361169"
  },
  {
    "text": "something like VirtualBox to spin up a single node kubernetes cluster for you",
    "start": "1361169",
    "end": "1366240"
  },
  {
    "text": "as well but once you have either of those environments configured then you can",
    "start": "1366240",
    "end": "1371610"
  },
  {
    "text": "install helm charge into that kubernetes cluster and you can start testing your",
    "start": "1371610",
    "end": "1376710"
  },
  {
    "text": "application over there and the advantage is whatever works on a single node",
    "start": "1376710",
    "end": "1382530"
  },
  {
    "text": "kubernetes cluster then you can migrate that application to in the cloud where",
    "start": "1382530",
    "end": "1387570"
  },
  {
    "text": "you are possibly running a multi node kubernetes cluster okay",
    "start": "1387570",
    "end": "1392840"
  },
  {
    "text": "now in terms of running a kubernetes cluster now there are several cloud providers well I work for Amazon so my",
    "start": "1394040",
    "end": "1400500"
  },
  {
    "text": "preference is AWS and as a matter of fact more than 50% of kubernetes runs on",
    "start": "1400500",
    "end": "1407310"
  },
  {
    "text": "AWS this is per the latest CN CF survey so all that matters is where you run",
    "start": "1407310",
    "end": "1414000"
  },
  {
    "text": "your kubernetes because you need to have that wide variety of compute choices and the scalability and the resilience and",
    "start": "1414000",
    "end": "1420030"
  },
  {
    "text": "the availability of all of that as part of their eks cluster so Amazon eks",
    "start": "1420030",
    "end": "1425970"
  },
  {
    "text": "essentially is our our fully managed kubernetes service what it gives you is",
    "start": "1425970",
    "end": "1431580"
  },
  {
    "text": "a control plane and then you bring your data plane and attach to it and that becomes your kubernetes cluster very",
    "start": "1431580",
    "end": "1440310"
  },
  {
    "text": "easy way to get started with Amazon II cares you install this CL I",
    "start": "1440310",
    "end": "1445650"
  },
  {
    "text": "call as brew install V works tap eks Caudill and then literally you can say e",
    "start": "1445650",
    "end": "1451730"
  },
  {
    "text": "KS cuddle create cluster if I just give this command that will create our Amazon",
    "start": "1451730",
    "end": "1456750"
  },
  {
    "text": "eks cluster for me now I've specified some values over here at the region and the number of nodes I want in the",
    "start": "1456750",
    "end": "1462810"
  },
  {
    "text": "cluster but basically this will give me a for Lord Amazon eks cluster and if I",
    "start": "1462810",
    "end": "1470340"
  },
  {
    "text": "go to my terminal here",
    "start": "1470340",
    "end": "1474409"
  },
  {
    "text": "so now if I say cube cuddle config get",
    "start": "1479670",
    "end": "1485820"
  },
  {
    "text": "context it shows",
    "start": "1485820",
    "end": "1489019"
  },
  {
    "text": "I have multiple clusters running in the cloud okay so at any given point of time so if you look at this for example I",
    "start": "1492740",
    "end": "1499249"
  },
  {
    "text": "have a mini cube cluster running I have two darker desktop clusters running and I have a few clusters running up in the",
    "start": "1499249",
    "end": "1505789"
  },
  {
    "text": "cloud now once I have this application running on my local environment",
    "start": "1505789",
    "end": "1510970"
  },
  {
    "text": "switching that application to environment the cluster is pretty straightforward so for example right now I am running",
    "start": "1510970",
    "end": "1518240"
  },
  {
    "text": "this I'm running this on a GPU based cluster and if you see current it says",
    "start": "1518240",
    "end": "1525679"
  },
  {
    "text": "that is the current cluster over there okay so I can say a cube Caudill config use context and I can pick a different",
    "start": "1525679",
    "end": "1534740"
  },
  {
    "text": "cluster say I pick this cluster here",
    "start": "1534740",
    "end": "1539830"
  },
  {
    "text": "okay now the context switch to that and if I say a cue card I'll get nodes it will",
    "start": "1539830",
    "end": "1545990"
  },
  {
    "text": "show me the number of nodes that are available in that cluster so really all you need to do is just switch your",
    "start": "1545990",
    "end": "1551960"
  },
  {
    "text": "context from the cluster that is running on the desktop to the cluster that is running in the cloud",
    "start": "1551960",
    "end": "1557809"
  },
  {
    "text": "and then just redeploy the application and that is R as the recommended methodology as well",
    "start": "1557809",
    "end": "1564279"
  },
  {
    "text": "so that's sort of the way you migrate from death to prod now one of the common",
    "start": "1579360",
    "end": "1586290"
  },
  {
    "text": "things that you need from your applications is you want to use the right language for the right tool so you",
    "start": "1586290",
    "end": "1593460"
  },
  {
    "text": "may be using Java you may be using node you may be using go so a wide variety of languages because end of the day what",
    "start": "1593460",
    "end": "1599700"
  },
  {
    "text": "are these are micro services which are raised basically talking to each other using api's so the important part is now",
    "start": "1599700",
    "end": "1606480"
  },
  {
    "text": "you want to get observability into those micro services so how do you get observability well the if you start",
    "start": "1606480",
    "end": "1614130"
  },
  {
    "text": "doing the libraries for each specific language the java and load and go it",
    "start": "1614130",
    "end": "1620280"
  },
  {
    "text": "quickly becomes a framework explosion because then we need to start maintaining different versions of these",
    "start": "1620280",
    "end": "1625770"
  },
  {
    "text": "libraries then your application becomes cluttered so one of the common design patterns that we have seen in the real",
    "start": "1625770",
    "end": "1631890"
  },
  {
    "text": "world is where customers use envoy as a proxy and on Y is a CNC F graduated",
    "start": "1631890",
    "end": "1638250"
  },
  {
    "text": "project so we were happy to support it so customers what they do is if you",
    "start": "1638250",
    "end": "1643410"
  },
  {
    "text": "think about pod pod has one container which is your application container but",
    "start": "1643410",
    "end": "1649020"
  },
  {
    "text": "what you can do is in the pod you can have a sidecar container which is sort",
    "start": "1649020",
    "end": "1654960"
  },
  {
    "text": "of sitting along with the main application container but now the sidecar container and the application",
    "start": "1654960",
    "end": "1661380"
  },
  {
    "text": "container can talk to each other as if they are part on the same localhost so",
    "start": "1661380",
    "end": "1667380"
  },
  {
    "text": "what essentially happens is any communication between the application containers across the pod doesn't happen",
    "start": "1667380",
    "end": "1675210"
  },
  {
    "text": "directly it always happens through the sidecar and so if you think in terms of the logic the application container",
    "start": "1675210",
    "end": "1682170"
  },
  {
    "text": "talks to the sidecar container the sidecar container then looks at the policies that are being enforced at that",
    "start": "1682170",
    "end": "1688830"
  },
  {
    "text": "point of time and then it talks to the other side card container which then talks to the application container and",
    "start": "1688830",
    "end": "1694460"
  },
  {
    "text": "because all the network traffic is going through the sidecar it makes you to",
    "start": "1694460",
    "end": "1701820"
  },
  {
    "text": "allow some more observability in your application",
    "start": "1701820",
    "end": "1706429"
  },
  {
    "text": "so with on why being the basis for your network traffic you can do a lot of fun",
    "start": "1709770",
    "end": "1717100"
  },
  {
    "text": "things with it you can start doing things like canary deployment so you can",
    "start": "1717100",
    "end": "1723910"
  },
  {
    "text": "say that now my servers on one of the service is running I want to introduce",
    "start": "1723910",
    "end": "1729160"
  },
  {
    "text": "version two and then when I introduce the version two I only want to guide the traffic to five percent of the users or",
    "start": "1729160",
    "end": "1736330"
  },
  {
    "text": "maybe the users who are coming from a certain geography only so you can start kind of narrowing the traffic to a",
    "start": "1736330",
    "end": "1742000"
  },
  {
    "text": "particular part of the world okay now that is not entirely possible if you're using raw kubernetes and that's where",
    "start": "1742000",
    "end": "1748840"
  },
  {
    "text": "service measures are becoming extremely popular so essentially with unwise sidecar",
    "start": "1748840",
    "end": "1753910"
  },
  {
    "text": "what you're doing is you're running sidecar across all of your applications",
    "start": "1753910",
    "end": "1761250"
  },
  {
    "text": "you're running on way across all of your applications so what you need is a data",
    "start": "1769630",
    "end": "1776570"
  },
  {
    "text": "plane on top of it which manages all of those sidecar containers and that's",
    "start": "1776570",
    "end": "1781790"
  },
  {
    "text": "where things like Sto or AWS app mesh comes in now sto works very well on",
    "start": "1781790",
    "end": "1787400"
  },
  {
    "text": "Amazon he cares if you were to use it sure no no we support it I actually wrote the blog post on that on how is T",
    "start": "1787400",
    "end": "1793970"
  },
  {
    "text": "runs on Amazon ETS but AWS at mesh is a fully managed service that we provide",
    "start": "1793970",
    "end": "1799460"
  },
  {
    "text": "from Amazon as well so in this case I'm walking you through on how easy it is to",
    "start": "1799460",
    "end": "1805970"
  },
  {
    "text": "get started with App mesh particularly if you're using for Amazon II cares",
    "start": "1805970",
    "end": "1812110"
  },
  {
    "text": "excuse me so it walks you through that how do you",
    "start": "1812560",
    "end": "1817940"
  },
  {
    "text": "set up the iam permissions how do you configure the app mesh so essentially what I'm doing is I'm a neighboring an",
    "start": "1817940",
    "end": "1823580"
  },
  {
    "text": "aim space that anytime you deploy an application into that namespace it'll automatically inject the unwise sidecar",
    "start": "1823580",
    "end": "1831140"
  },
  {
    "text": "for you so it walks you through the entire process then just like you know",
    "start": "1831140",
    "end": "1837020"
  },
  {
    "text": "what you're doing is you know you're deploying your application into the kubernetes cluster you need to deploy certain app mesh specific constructs so",
    "start": "1837020",
    "end": "1845780"
  },
  {
    "text": "things like you know you need to create a mesh you need to create virtual node services and deployments and then you",
    "start": "1845780",
    "end": "1851420"
  },
  {
    "text": "can start doing traffic shifting so traffic shifting is the concept that where you are saying I'm introducing a",
    "start": "1851420",
    "end": "1857870"
  },
  {
    "text": "new version of the application and guide only 5% of the traffic to a certain type",
    "start": "1857870",
    "end": "1863540"
  },
  {
    "text": "of users so you could say if the users have a particular cookie set then guide",
    "start": "1863540",
    "end": "1869030"
  },
  {
    "text": "the traffic to them or if the user is coming from a certain part of the geography or I don't care of the entire",
    "start": "1869030",
    "end": "1875390"
  },
  {
    "text": "set of deployment guide only five percent of the traffic to the new service so all those things can be",
    "start": "1875390",
    "end": "1881150"
  },
  {
    "text": "magically done using these deployment descriptors over here and then there are",
    "start": "1881150",
    "end": "1886250"
  },
  {
    "text": "full details about how you can do that using is to you as well now the last",
    "start": "1886250",
    "end": "1892460"
  },
  {
    "text": "part that I want to talk about over here is how easy it is to get started with say deployment pipelines",
    "start": "1892460",
    "end": "1900640"
  },
  {
    "text": "scaffold is a tool that is available in the open source now typically what you do is as part of your development",
    "start": "1902299",
    "end": "1908850"
  },
  {
    "text": "experience you want to get started with that as soon as I make a change in my",
    "start": "1908850",
    "end": "1914490"
  },
  {
    "text": "source code somebody should compile it somebody should build a docker image out of it update the docker Kuban it is manifest",
    "start": "1914490",
    "end": "1922049"
  },
  {
    "text": "and redeploy the application to my kubernetes cluster and this is all happening in your local development",
    "start": "1922049",
    "end": "1927480"
  },
  {
    "text": "environment that is exactly what scaffold is used for and also essentially what you have is you",
    "start": "1927480",
    "end": "1933330"
  },
  {
    "text": "download scaffold you setup your configuration using a scaffold or camel and it heavily relies upon convention",
    "start": "1933330",
    "end": "1939720"
  },
  {
    "text": "over configuration so you put your files in a specific location it picks them up",
    "start": "1939720",
    "end": "1944820"
  },
  {
    "text": "and sets up your build environment where is constantly deploying files so as soon as in your IDE",
    "start": "1944820",
    "end": "1950580"
  },
  {
    "text": "if you make a change you save it it triggers the entire build cycle and your",
    "start": "1950580",
    "end": "1956070"
  },
  {
    "text": "application is automatically deployed to the cluster it's very good for iterative feedback and right away the field that",
    "start": "1956070",
    "end": "1962190"
  },
  {
    "text": "you get back now that's one part of it that is good for local development now",
    "start": "1962190",
    "end": "1967980"
  },
  {
    "text": "when you're going into the cloud that's where you need a full-blown deployment pipeline of course Jenkins is a good",
    "start": "1967980",
    "end": "1974909"
  },
  {
    "text": "solution and a lot of our customers use it but a lot of the time customers also want something that is fully managed and",
    "start": "1974909",
    "end": "1981059"
  },
  {
    "text": "that's exactly where AWS code pipeline kind of comes in so this section kind of",
    "start": "1981059",
    "end": "1987210"
  },
  {
    "text": "walks you through how easy it is to set up AWS quote pipeline based deployment",
    "start": "1987210",
    "end": "1992850"
  },
  {
    "text": "pipeline up in the cloud it's a fully managed service so there's nothing you need to download or manage on your local",
    "start": "1992850",
    "end": "1999539"
  },
  {
    "text": "machine and once AWS called pipeline is set up once again every time you make a",
    "start": "1999539",
    "end": "2004639"
  },
  {
    "text": "change you know you do a good push it triggers the entire development pipeline",
    "start": "2004639",
    "end": "2009649"
  },
  {
    "text": "or a deployment pipeline up in the cloud and guides you through the entire process okay so you need to set up your",
    "start": "2009649",
    "end": "2015559"
  },
  {
    "text": "github token setup here I am roll cluster name and then what you see is",
    "start": "2015559",
    "end": "2022039"
  },
  {
    "text": "how the code pipeline looks like so it says here's my source it is my build what's being billed and then it walks",
    "start": "2022039",
    "end": "2028429"
  },
  {
    "text": "you through the entire deployment pipeline and then of course you can see the instructions for Jenkins X as well",
    "start": "2028429",
    "end": "2033840"
  },
  {
    "text": "so let's go back through the entire lifecycle on how it would look like on",
    "start": "2033840",
    "end": "2040140"
  },
  {
    "text": "if you were to building your application from a Java developer perspective first thing is make sure you choose your base",
    "start": "2040140",
    "end": "2047070"
  },
  {
    "text": "image wisely choose your tools wisely are you using a multi-stage darker file or a maven plug-in or a Gradle plugin",
    "start": "2047070",
    "end": "2054600"
  },
  {
    "text": "there are lots of options make sure to leverage the custom JRE that is available JDK 9 onwards on how you can",
    "start": "2054600",
    "end": "2062070"
  },
  {
    "text": "use that that those are some of the things you need to look at when then you convert that darker image into a",
    "start": "2062070",
    "end": "2067560"
  },
  {
    "text": "kubernetes manifest file you can test that on your local machine docker for desktop and a mini cube lots of",
    "start": "2067560",
    "end": "2074280"
  },
  {
    "text": "different options over there then as you are migrating those applications to the cloud consider Amazon eks you know this",
    "start": "2074280",
    "end": "2081120"
  },
  {
    "text": "is a managed service up in the cloud you click no eks cuttle create cluster gives",
    "start": "2081120",
    "end": "2086460"
  },
  {
    "text": "you Amazon eks cluster switch the context and then you migrate your application over there then you start",
    "start": "2086460",
    "end": "2092610"
  },
  {
    "text": "looking at ok how do I get observability into my application because a lot of these services are running that's where",
    "start": "2092610",
    "end": "2098400"
  },
  {
    "text": "your service mesh comes in and then last but not the least think about what are your deployment pipelines looking like",
    "start": "2098400",
    "end": "2104040"
  },
  {
    "text": "so there are certain steps you need to think about it hopefully this repo helps you get started and once again as I said",
    "start": "2104040",
    "end": "2110310"
  },
  {
    "text": "all the code is here if anything is missing from this I would encourage filing issues or send me a pull request",
    "start": "2110310",
    "end": "2116610"
  },
  {
    "text": "I'm going to be around rest of the day at the AWS booth and would love to talk thank you so much",
    "start": "2116610",
    "end": "2122590"
  },
  {
    "text": "[Applause]",
    "start": "2122590",
    "end": "2128050"
  }
]