[
  {
    "text": "uh welcome everyone to our talk um my name is Anna and today with me is my",
    "start": "880",
    "end": "8040"
  },
  {
    "text": "colleague Cornelius and we are going to talk about what we are working on so",
    "start": "8040",
    "end": "13759"
  },
  {
    "text": "runtime security with ebpf so let's start with quick intro um my name is",
    "start": "13759",
    "end": "20960"
  },
  {
    "text": "Anna I work at is of Valen on observability mainly observability for",
    "start": "20960",
    "end": "26119"
  },
  {
    "text": "networking and security these days I'm focusing on uh tetragon which is",
    "start": "26119",
    "end": "32640"
  },
  {
    "text": "observability tool that uh we develop Cornelius can you introduce yourself um",
    "start": "32640",
    "end": "37760"
  },
  {
    "text": "hi hopefully you can hear me I'm Cornelius I'm a software engineer uh withan now part of Cisco and I work on",
    "start": "37760",
    "end": "45440"
  },
  {
    "text": "tetr all right so our goal today is to",
    "start": "45440",
    "end": "50960"
  },
  {
    "text": "move from observability to enforcement uh we work on two aspects of",
    "start": "50960",
    "end": "57280"
  },
  {
    "text": "runtime security with BPF observability and enforcement and observability in security context often means um",
    "start": "57280",
    "end": "65158"
  },
  {
    "text": "inspecting interactions between applications between workloads and uh operating system um because um",
    "start": "65159",
    "end": "74080"
  },
  {
    "text": "applications need to ask uh operating system for many many things they uh need",
    "start": "74080",
    "end": "80600"
  },
  {
    "text": "to do but also many attack vectors uh essentially are abusing uh what",
    "start": "80600",
    "end": "86720"
  },
  {
    "text": "application can do can ask operating system to do do uh for example um a pot",
    "start": "86720",
    "end": "94079"
  },
  {
    "text": "might attempt to load a kernel module uh when it shouldn't really do it um or uh",
    "start": "94079",
    "end": "101920"
  },
  {
    "text": "might access a secret file that it shouldn't really access uh when we are doing observability for security we can",
    "start": "101920",
    "end": "110320"
  },
  {
    "text": "alert on such events and then uh ask a user a security engineer to investigate",
    "start": "110320",
    "end": "117240"
  },
  {
    "text": "it to process data stor in some cm and do something with it we want to move",
    "start": "117240",
    "end": "123759"
  },
  {
    "text": "step further and do enforcement so instead of just alerting on whenever a",
    "start": "123759",
    "end": "129360"
  },
  {
    "text": "ker module is loaded we want to block it instead of just alerting a user whenever",
    "start": "129360",
    "end": "135599"
  },
  {
    "text": "um a file is accessed a secret file is access accessed we want to just block it",
    "start": "135599",
    "end": "141080"
  },
  {
    "text": "and not allow um the application to access this file uh in the first place",
    "start": "141080",
    "end": "148120"
  },
  {
    "text": "uh so there are outline of our talk first we will uh briefly talk about how",
    "start": "148120",
    "end": "154640"
  },
  {
    "text": "ebpf is used for security observability and enforcement we won't cover how",
    "start": "154640",
    "end": "161080"
  },
  {
    "text": "ebpf Works under the hood this is not really necessary for the stock so if uh",
    "start": "161080",
    "end": "166840"
  },
  {
    "text": "you don't know BPF internals don't worry about it uh then we'll cover how um to",
    "start": "166840",
    "end": "173120"
  },
  {
    "text": "build a tetron enforcement policy and uh how this works in a",
    "start": "173120",
    "end": "180040"
  },
  {
    "text": "kubernetes world so BPF Works within Linux kernel that means on a single",
    "start": "180040",
    "end": "185879"
  },
  {
    "text": "machine kubernetes is a distributed system of them with a kubernetes cluster can have like thousand machines um",
    "start": "185879",
    "end": "192599"
  },
  {
    "text": "distributed globally some interaction between these two worlds like local and",
    "start": "192599",
    "end": "197799"
  },
  {
    "text": "globally distributed are interesting so we are going to cover this two and we show some uh exam more examples of um",
    "start": "197799",
    "end": "205879"
  },
  {
    "text": "policies and some more resources to get started all right with this I will uh",
    "start": "205879",
    "end": "211640"
  },
  {
    "text": "give to Cornelius Cornelius can you tell us how ebpf is used for observability and enforcement of course thanks so",
    "start": "211640",
    "end": "219599"
  },
  {
    "text": "we're going to Let's assume that we have a system and this system we have a bunch of applications running and we have a",
    "start": "219599",
    "end": "226560"
  },
  {
    "text": "user and the user has a simple request they want to generate an alert if an",
    "start": "226560",
    "end": "233560"
  },
  {
    "text": "application other than A1 accesses or opens file X",
    "start": "233560",
    "end": "240040"
  },
  {
    "text": "the standard way to do that is to create a user space agent let's call it an observer and forward all file accesses",
    "start": "240040",
    "end": "247319"
  },
  {
    "text": "from all applications from the kernel to this Observer then as events happen The",
    "start": "247319",
    "end": "254480"
  },
  {
    "text": "Observer will process a messages and try to figure out whether the condition set",
    "start": "254480",
    "end": "259840"
  },
  {
    "text": "by the user is satisfied or not and if it happens it will generate an alert so",
    "start": "259840",
    "end": "265520"
  },
  {
    "text": "this architecture has the benefit that the kernel part which is the privilege part is really really simple because we",
    "start": "265520",
    "end": "272320"
  },
  {
    "text": "just forward all the events and this means that it has a higher probability of being safe",
    "start": "272320",
    "end": "280160"
  },
  {
    "text": "which is really really important for code that runs inside the kernel the downside however is that we",
    "start": "280160",
    "end": "288479"
  },
  {
    "text": "have to copy all of the data from kernel to user space which wastes both memory",
    "start": "288479",
    "end": "295120"
  },
  {
    "text": "and CPU and so what BPF provides is a way to get",
    "start": "295120",
    "end": "301440"
  },
  {
    "text": "both benefits uh in this situation so uh ebpf is a programmable and performant in",
    "start": "301440",
    "end": "308000"
  },
  {
    "text": "kernel virtual machine that can safely execute native code on certain hooks you",
    "start": "308000",
    "end": "314720"
  },
  {
    "text": "can think of it as JavaScript for the kernel and exactly because it's safe um",
    "start": "314720",
    "end": "321039"
  },
  {
    "text": "there is a kernel verifier we will not go into the details but exactly because it's safe we can get whatever users has",
    "start": "321039",
    "end": "328080"
  },
  {
    "text": "requested compiling into in BPF and put it as a filter into the kernel and this",
    "start": "328080",
    "end": "334840"
  },
  {
    "text": "means that as events happen we can filter them at their source and so we",
    "start": "334840",
    "end": "340400"
  },
  {
    "text": "can avoid a lot of copying we can avoid a lot of memory and just generate the alert by going from the kernel to The",
    "start": "340400",
    "end": "347080"
  },
  {
    "text": "Observer and then to the user the other benefit is now we are in",
    "start": "347080",
    "end": "353080"
  },
  {
    "text": "the inline path of the operation which means that we can also block the operation so we can now",
    "start": "353080",
    "end": "360360"
  },
  {
    "text": "Implement other semantics which are block any application which is not",
    "start": "360360",
    "end": "366240"
  },
  {
    "text": "application a but tries to act open file X um",
    "start": "366240",
    "end": "373960"
  },
  {
    "text": "and ebpf gives us the ability to do that um so the benefit in the previous",
    "start": "373960",
    "end": "381120"
  },
  {
    "text": "architecture that I showed you is that the filtering logic Remains the Same",
    "start": "381120",
    "end": "386840"
  },
  {
    "text": "there is no difference the only difference is what what do you do whenever you match and specifically we",
    "start": "386840",
    "end": "394360"
  },
  {
    "text": "have a different enforcement actions that we support one is block the operation um before it actually happens",
    "start": "394360",
    "end": "401479"
  },
  {
    "text": "and return an error to the user application and we can also send a signal to terminate the",
    "start": "401479",
    "end": "407280"
  },
  {
    "text": "application however enforcement is different from observability in one crucial aspect the logic for filtering",
    "start": "407280",
    "end": "415720"
  },
  {
    "text": "has to be implemented in the kernel in observability use cases in many cases you can just sit and do the filtering or",
    "start": "415720",
    "end": "423400"
  },
  {
    "text": "part of the filtering in user space when we are talking about enforcement we need",
    "start": "423400",
    "end": "429160"
  },
  {
    "text": "to push all the logic into the kernel which is a great use case for ebpf and I",
    "start": "429160",
    "end": "434599"
  },
  {
    "text": "put a bookmark there because this is something that's going to come up later again so now I'll pass it to Anna to uh",
    "start": "434599",
    "end": "442160"
  },
  {
    "text": "tell us about tetragon all right so tetragon is at toll we are working on um",
    "start": "442160",
    "end": "449599"
  },
  {
    "text": "it's a open source tool under the selum project umbrella so it's part of cncf",
    "start": "449599",
    "end": "455840"
  },
  {
    "text": "and it's using qpf um it's using evf in a pretty pretty generic way so uh it's",
    "start": "455840",
    "end": "463280"
  },
  {
    "text": "really a tool that allow you to hook into any point in the Linux",
    "start": "463280",
    "end": "469639"
  },
  {
    "text": "kernel and get um events or metrics for",
    "start": "469639",
    "end": "475240"
  },
  {
    "text": "whenever this hook point is executed um it has in kernal filtering and",
    "start": "475240",
    "end": "482159"
  },
  {
    "text": "enforcement as Coria said and it is kubernetes native so that means that it",
    "start": "482159",
    "end": "488479"
  },
  {
    "text": "operates on kubernetes metadata like Nam spaces or poort labels not just lowlevel",
    "start": "488479",
    "end": "494599"
  },
  {
    "text": "ker stuff uh W tetragon policies are configured with um with kuber there",
    "start": "494599",
    "end": "502520"
  },
  {
    "text": "kubernetes crds but they um are configured with kubernetes metadata and",
    "start": "502520",
    "end": "508639"
  },
  {
    "text": "events and met produced by tetragon um also contain this kubernetes metadata so",
    "start": "508639",
    "end": "515518"
  },
  {
    "text": "this is uh like a picture from the front page of tetragon documentation uh there",
    "start": "515519",
    "end": "521760"
  },
  {
    "text": "is a lot happening here so I will uh go through different sections quickly um so",
    "start": "521760",
    "end": "528080"
  },
  {
    "text": "because tetragon is pretty generic tool it can support gazillion different use",
    "start": "528080",
    "end": "534120"
  },
  {
    "text": "cases uh starting from Basic things like uh process execution uh this is kind of",
    "start": "534120",
    "end": "541600"
  },
  {
    "text": "the basic use case uh that tetron users start with um two things like network",
    "start": "541600",
    "end": "548839"
  },
  {
    "text": "connections file access and uh various",
    "start": "548839",
    "end": "553880"
  },
  {
    "text": "um events that may IND indicate a privilege escalation like Nam SPAC",
    "start": "553880",
    "end": "559640"
  },
  {
    "text": "changes or uh capability changes because we use EF um tetragon is",
    "start": "559640",
    "end": "568800"
  },
  {
    "text": "very reliable and gives us security with very low overhead thanks to evf verifier",
    "start": "568800",
    "end": "574399"
  },
  {
    "text": "the programs are safe to run and they give us complete visibility meaning that",
    "start": "574399",
    "end": "580480"
  },
  {
    "text": "they see everything that is happening on the Note the applications running on the",
    "start": "580480",
    "end": "585600"
  },
  {
    "text": "Note can't hide from tetragon this is something very important from security standpoint because security Engineers",
    "start": "585600",
    "end": "591800"
  },
  {
    "text": "are not happy if you tell them that oh some applications can just hide and we",
    "start": "591800",
    "end": "598440"
  },
  {
    "text": "just can't see them no this doesn't happen with tetragon it um because it runs BPF programs in caral it can see",
    "start": "598440",
    "end": "605800"
  },
  {
    "text": "everything um there is internal uh enforcement and filtering um and because",
    "start": "605800",
    "end": "613399"
  },
  {
    "text": "uh we are saving on this uh user kernel uh context switches and we also filter",
    "start": "613399",
    "end": "619160"
  },
  {
    "text": "and aggregate in kernel um we generally can do a lot",
    "start": "619160",
    "end": "624360"
  },
  {
    "text": "efficiently um the tetragon uh agent running in user space um and um loading",
    "start": "624360",
    "end": "634800"
  },
  {
    "text": "uh BPF programs into the kernel it can run on any Linux system it can run on",
    "start": "634800",
    "end": "640480"
  },
  {
    "text": "kubernetes this is something we are going to focus on today because well this is ccon uh but it can also run",
    "start": "640480",
    "end": "646680"
  },
  {
    "text": "outside of kubernetes on uh in VMS or mer metal machines and uh tetron doesn't",
    "start": "646680",
    "end": "652279"
  },
  {
    "text": "care about what applications are really running on the Note they can be written in any language use any framework um",
    "start": "652279",
    "end": "661160"
  },
  {
    "text": "when tetragon uh starts um observing them or enforcing security policies um",
    "start": "661160",
    "end": "669000"
  },
  {
    "text": "these applications don't need to be reconfigured restarted nothing they just keep running as they were and last but",
    "start": "669000",
    "end": "675959"
  },
  {
    "text": "not least um tetragon Integrations so tetragon use as security observability",
    "start": "675959",
    "end": "681839"
  },
  {
    "text": "tool produces events and metrics that then can be pushed into your favorite",
    "start": "681839",
    "end": "688800"
  },
  {
    "text": "security observability vendor essentially so uh things like stun elastic U metrics are usually scaved by",
    "start": "688800",
    "end": "695360"
  },
  {
    "text": "Prometheus um we also see we are also seeing people using tetragon to like",
    "start": "695360",
    "end": "702079"
  },
  {
    "text": "build some more specialized custom data pipelines on top of it because again it",
    "start": "702079",
    "end": "708320"
  },
  {
    "text": "is so generic it can be used as a sort of building block for a building more",
    "start": "708320",
    "end": "713800"
  },
  {
    "text": "specialized tool all right so that was a quick overview of tetragon now let's",
    "start": "713800",
    "end": "719839"
  },
  {
    "text": "actually get uh to the the topic of this talk and let's try to build a tetragon",
    "start": "719839",
    "end": "725680"
  },
  {
    "text": "enforcement policy so uh our quest for today is to block access to a secret",
    "start": "725680",
    "end": "732079"
  },
  {
    "text": "file let's say the secret file might be some password token whatever uh we don't",
    "start": "732079",
    "end": "737320"
  },
  {
    "text": "want an attacker to access it and this is my first policy I I wrote to do this",
    "start": "737320",
    "end": "744000"
  },
  {
    "text": "uh tetragon is configured bya tracing policy CD and this is very low level",
    "start": "744000",
    "end": "750160"
  },
  {
    "text": "configuration it's almost like a way to interact and build uh interact with",
    "start": "750160",
    "end": "756639"
  },
  {
    "text": "kernel and buil an evf based tool but without writing BPF code we are",
    "start": "756639",
    "end": "763360"
  },
  {
    "text": "operating here on um kernel functions and arguments they they take so in a",
    "start": "763360",
    "end": "771360"
  },
  {
    "text": "tetragon policy we defined exactly where we want to hook in the kernel in this",
    "start": "771360",
    "end": "776680"
  },
  {
    "text": "case it's it's a c rope and it's actually system call uh open up system call a system call responsible for",
    "start": "776680",
    "end": "783000"
  },
  {
    "text": "opening a file uh so we are hooking there and we Define an action so an",
    "start": "783000",
    "end": "788120"
  },
  {
    "text": "action is the thing in the policy that does the enforcement bit not just",
    "start": "788120",
    "end": "793880"
  },
  {
    "text": "observability and my action is to S kill um send a s kill signal so kill a",
    "start": "793880",
    "end": "800880"
  },
  {
    "text": "process that is trying to uh read my extremely secret file so I tried to I",
    "start": "800880",
    "end": "806839"
  },
  {
    "text": "load this policy I run it and tried to uh read cut the file the process was",
    "start": "806839",
    "end": "812959"
  },
  {
    "text": "killed it works Cornelius what do you think about my policy so I think this is a great policy and it definitely",
    "start": "812959",
    "end": "819760"
  },
  {
    "text": "achieves what we want but it has a minor minor issue which is it blocks access to",
    "start": "819760",
    "end": "826800"
  },
  {
    "text": "every file in the system which some people might not want uh so",
    "start": "826800",
    "end": "832680"
  },
  {
    "text": "for example if you try to act another file the process will still be killed uh which some people will say it's not",
    "start": "832680",
    "end": "839920"
  },
  {
    "text": "ideal so what we can do is that we can take the policy a step further uh you can see this is the same policy with the",
    "start": "839920",
    "end": "847079"
  },
  {
    "text": "changes being highlighted and tetragon policies allow you to access arguments",
    "start": "847079",
    "end": "852560"
  },
  {
    "text": "and then filter on these arguments so the first argument of the system code that we're using is the file name so now",
    "start": "852560",
    "end": "859800"
  },
  {
    "text": "we can filter and only apply this policy if the first argument is equal to my",
    "start": "859800",
    "end": "865480"
  },
  {
    "text": "extremely uh secret file which is um what we want how does it look Anna okay",
    "start": "865480",
    "end": "872959"
  },
  {
    "text": "this looks definitely better but I see a problem with this policy tool because",
    "start": "872959",
    "end": "880519"
  },
  {
    "text": "blocking all access to the file is not what we usually want like let's assume",
    "start": "880519",
    "end": "886000"
  },
  {
    "text": "this file is some secret like it's some password um there is probably an",
    "start": "886000",
    "end": "892360"
  },
  {
    "text": "application that actually needs to read this file needs to read this password to do something so",
    "start": "892360",
    "end": "899880"
  },
  {
    "text": "when I um whatever application um",
    "start": "899880",
    "end": "907800"
  },
  {
    "text": "is trying to read this file um it is",
    "start": "907800",
    "end": "913720"
  },
  {
    "text": "just blocked um I have another binary here my cut that I want actually uh to",
    "start": "913720",
    "end": "921920"
  },
  {
    "text": "read this file and not to be killed and I can't do this um this policy blocks",
    "start": "921920",
    "end": "928240"
  },
  {
    "text": "access for every single process uh on a system so what we can do is we can",
    "start": "928240",
    "end": "937759"
  },
  {
    "text": "block file access only for specific binaries in this case um we are allowing",
    "start": "937759",
    "end": "946079"
  },
  {
    "text": "access to a file only to my cut binary and blocking everything all other",
    "start": "946079",
    "end": "953959"
  },
  {
    "text": "binaries and this is better um I think what do you think Cornelius so I I think",
    "start": "953959",
    "end": "959600"
  },
  {
    "text": "it's definitely better um but turns out writing tetragon policies is kind of",
    "start": "959600",
    "end": "966399"
  },
  {
    "text": "tricky sometimes and there are some issues with this policy so the first",
    "start": "966399",
    "end": "972040"
  },
  {
    "text": "issue is that we are uh hooking into the open ad system call and most",
    "start": "972040",
    "end": "979199"
  },
  {
    "text": "applications including cut the standard Unix utility use this system call but",
    "start": "979199",
    "end": "984560"
  },
  {
    "text": "they don't have to there are other applications that use other system calls for example open I've written one here",
    "start": "984560",
    "end": "990839"
  },
  {
    "text": "called it evil cut and using this application I can actually access a",
    "start": "990839",
    "end": "995880"
  },
  {
    "text": "file furthermore um because we are hooking into this Trace point which is a",
    "start": "995880",
    "end": "1002440"
  },
  {
    "text": "system call the file name which where we're filtering resides in user memory",
    "start": "1002440",
    "end": "1009000"
  },
  {
    "text": "and this means that we just introduced a time of check time of use bug um so what",
    "start": "1009000",
    "end": "1018000"
  },
  {
    "text": "happens is is that because the memory is in user space the user program is",
    "start": "1018000",
    "end": "1023880"
  },
  {
    "text": "allowed to change it and this means that at a point after the BPF check where",
    "start": "1023880",
    "end": "1029480"
  },
  {
    "text": "everything seems okay something like another thread from a user process can go and change the",
    "start": "1029480",
    "end": "1036880"
  },
  {
    "text": "binary and this means that the open will be actually executed with not the one",
    "start": "1036880",
    "end": "1042280"
  },
  {
    "text": "that we checked but another uh file name and then this is a way to bypass um the",
    "start": "1042280",
    "end": "1049799"
  },
  {
    "text": "policy um fortunately um oh and there is there are a couple more issues so",
    "start": "1049799",
    "end": "1057240"
  },
  {
    "text": "another issue that we specify the full path as access to the Sy stem call but",
    "start": "1057240",
    "end": "1063520"
  },
  {
    "text": "obviously we can call with different path names we can s into a directory and",
    "start": "1063520",
    "end": "1068840"
  },
  {
    "text": "call the from the current directory and then again the the policy will not be",
    "start": "1068840",
    "end": "1075200"
  },
  {
    "text": "applied finally and this is a bit tricky there are cases where when we Define a",
    "start": "1075200",
    "end": "1082320"
  },
  {
    "text": "signal as an action um the system called side effects will STI still take place",
    "start": "1082320",
    "end": "1089559"
  },
  {
    "text": "so for example there are instances where if we say write this buffer into the file and then we enforce on that system",
    "start": "1089559",
    "end": "1096520"
  },
  {
    "text": "call with a cill then again there are certain situations where this happens",
    "start": "1096520",
    "end": "1102320"
  },
  {
    "text": "but it is possible that the data will actually be written to the file which is not what we want",
    "start": "1102320",
    "end": "1109640"
  },
  {
    "text": "um so yeah there are several problems with this policy um Anna any ideas yeah",
    "start": "1109640",
    "end": "1115640"
  },
  {
    "text": "so the problem here is that we are hooking to to a CIS call and to open up",
    "start": "1115640",
    "end": "1122320"
  },
  {
    "text": "CIS call and um it turns out this is not actually good place to hook into for",
    "start": "1122320",
    "end": "1128120"
  },
  {
    "text": "enforcement it might be good for observability to observe like cisal um calls but uh for enforcement um not",
    "start": "1128120",
    "end": "1137159"
  },
  {
    "text": "really this is the um signature of the CIS in in the Kel",
    "start": "1137159",
    "end": "1142679"
  },
  {
    "text": "and uh as corus pointed out the first problem is that an argument to this",
    "start": "1142679",
    "end": "1147720"
  },
  {
    "text": "function that we are trying to filter on is a pointer to user memory so um an",
    "start": "1147720",
    "end": "1154360"
  },
  {
    "text": "attacker that has access to this memory can manipulate it somehow it pretend",
    "start": "1154360",
    "end": "1159400"
  },
  {
    "text": "that they they are doing something else that they are doing uh and second thing is enforcement action so sending a c",
    "start": "1159400",
    "end": "1168919"
  },
  {
    "text": "signal is not enough what we want to do for enforcement is we would like to",
    "start": "1168919",
    "end": "1175039"
  },
  {
    "text": "override the value returned by aernal function and for cisos this might be not",
    "start": "1175039",
    "end": "1183240"
  },
  {
    "text": "supported sometimes so what we need really need to do here is we need to",
    "start": "1183240",
    "end": "1188480"
  },
  {
    "text": "find a better hook point for enforcement and such a better hook point is a",
    "start": "1188480",
    "end": "1194159"
  },
  {
    "text": "security hook uh that uh which is um expit defined for Linux security modules",
    "start": "1194159",
    "end": "1202120"
  },
  {
    "text": "uh Linux security modules cover certain areas of uh Linux kernel and security",
    "start": "1202120",
    "end": "1208200"
  },
  {
    "text": "file open is um LSM hook um that is called on all",
    "start": "1208200",
    "end": "1215880"
  },
  {
    "text": "file open operations an argument here is uh file stru which is not pointer to",
    "start": "1215880",
    "end": "1223480"
  },
  {
    "text": "user memory but actual struct that is actually used by uh the to do the",
    "start": "1223480",
    "end": "1229600"
  },
  {
    "text": "operation so uh it's much more secure to um actually use in the enforcement mode",
    "start": "1229600",
    "end": "1237280"
  },
  {
    "text": "um and here we have uh a better enforcement policy uh that is uh achieving a similar thing that that the",
    "start": "1237280",
    "end": "1244400"
  },
  {
    "text": "previous policy do but we instead of hooking to uh open at CIS we are hooking",
    "start": "1244400",
    "end": "1250320"
  },
  {
    "text": "to uh this LSM hook security fire open which is not as is called uh instead of",
    "start": "1250320",
    "end": "1255600"
  },
  {
    "text": "filtering on the file path we um filter on this file struct um the filtering",
    "start": "1255600",
    "end": "1263159"
  },
  {
    "text": "section look kind of similar but um this is this low level detail that we are using actual different piece of memory",
    "start": "1263159",
    "end": "1271080"
  },
  {
    "text": "in different argument for um filtering and uh in the action section",
    "start": "1271080",
    "end": "1278440"
  },
  {
    "text": "we are still sending a sec signal but we also want to override the value returned",
    "start": "1278440",
    "end": "1285400"
  },
  {
    "text": "uh by the function to uh not return zero that would indicate successful um",
    "start": "1285400",
    "end": "1291960"
  },
  {
    "text": "operation but um to over to uh return",
    "start": "1291960",
    "end": "1297279"
  },
  {
    "text": "negative value so this is our finite policy for enforce for enforcing access to my",
    "start": "1297279",
    "end": "1304760"
  },
  {
    "text": "extremely secret file and block uh attacker access to it now let's move on",
    "start": "1304760",
    "end": "1311080"
  },
  {
    "text": "to the kubernetes world how do we apply this all of this in the kubernetes world",
    "start": "1311080",
    "end": "1319400"
  },
  {
    "text": "so in the kubernetes world one of the things that we need to do is to selectively apply these policies in",
    "start": "1319440",
    "end": "1325880"
  },
  {
    "text": "different types of workloads uh otherwise there's not much sense in having a global policy for every",
    "start": "1325880",
    "end": "1331640"
  },
  {
    "text": "workload that runs in our nodes and in tetragon will achieve this with two ways",
    "start": "1331640",
    "end": "1336919"
  },
  {
    "text": "the first is with namespaced policies so this is a policy that has a nam space",
    "start": "1336919",
    "end": "1343279"
  },
  {
    "text": "kind of scope and it will only be applied to workloads running in this name space",
    "start": "1343279",
    "end": "1349039"
  },
  {
    "text": "and then in addition to that we have a more flexible pod label filter construct where you can Define Expressions on pod",
    "start": "1349039",
    "end": "1356120"
  },
  {
    "text": "label filters deciding whether a policy will be applied or not and as I",
    "start": "1356120",
    "end": "1361440"
  },
  {
    "text": "mentioned in the beginning for enforcement it's crucial that these semantics are pushed down to the kernel",
    "start": "1361440",
    "end": "1368880"
  },
  {
    "text": "pushed down to the ebpf level and next I'm going to discuss how we actually do that",
    "start": "1368880",
    "end": "1375440"
  },
  {
    "text": "so um the way we do it is by using c groups so c groups are one of the two me",
    "start": "1375440",
    "end": "1382240"
  },
  {
    "text": "main mechanism the other being name spaces that kubernetes and container run times used to implement containers in",
    "start": "1382240",
    "end": "1390039"
  },
  {
    "text": "Linux uh c groups are basically a way to hierarchically",
    "start": "1390039",
    "end": "1395679"
  },
  {
    "text": "organized kind of applications and resources so think of",
    "start": "1395679",
    "end": "1402000"
  },
  {
    "text": "it as a tree where there is a root which is basically the machine and then what",
    "start": "1402000",
    "end": "1407240"
  },
  {
    "text": "you would see in a t typical kubernetes node is that the first split between",
    "start": "1407240",
    "end": "1412279"
  },
  {
    "text": "kubernetes pods uh which is kind of one node and another which is host workloads",
    "start": "1412279",
    "end": "1420039"
  },
  {
    "text": "uh typically managed by System D but we don't really care about that at this point and then at the kubernetes level",
    "start": "1420039",
    "end": "1428520"
  },
  {
    "text": "there is still a split based on the quality of service of the different pods and then you also get one C group per",
    "start": "1428520",
    "end": "1435880"
  },
  {
    "text": "pod and then for every container you also get one level deeper um one C group",
    "start": "1435880",
    "end": "1443840"
  },
  {
    "text": "per container so basically what we do is that for the filtering we match the",
    "start": "1443840",
    "end": "1451760"
  },
  {
    "text": "container to the C group and then inside the kernel we filter based on the C group and the way we do that",
    "start": "1451760",
    "end": "1460240"
  },
  {
    "text": "is uh by having State uh we keep the state into a BPF map that is accessed by",
    "start": "1460240",
    "end": "1466520"
  },
  {
    "text": "the program and then we add ask does this C group",
    "start": "1466520",
    "end": "1472600"
  },
  {
    "text": "uh or rather does this policy is um should be applied to a given C group and",
    "start": "1472600",
    "end": "1479120"
  },
  {
    "text": "then if yes we continue with the execution of the BPF code um so if a policy is loaded then we",
    "start": "1479120",
    "end": "1487200"
  },
  {
    "text": "update the map the BPF map uh if something changes in the kubernetes API",
    "start": "1487200",
    "end": "1494480"
  },
  {
    "text": "server for example a new pod is created a new container is created or a new or",
    "start": "1494480",
    "end": "1499799"
  },
  {
    "text": "maybe a p label changed then we go and update them map to keep the state up to",
    "start": "1499799",
    "end": "1505240"
  },
  {
    "text": "dat so let's see an example let's see the example of starting a container so",
    "start": "1505240",
    "end": "1512120"
  },
  {
    "text": "tetragon agent is informed about this uh new pod so or this and then it it scans",
    "start": "1512120",
    "end": "1521039"
  },
  {
    "text": "all of its containers and then for every container we find it C group and then we add it to the",
    "start": "1521039",
    "end": "1527000"
  },
  {
    "text": "map then uh the Cub the cuet talks to the uh container run time and then the",
    "start": "1527000",
    "end": "1533159"
  },
  {
    "text": "container is created it does the operation and then everything work expected however this is not necessarily",
    "start": "1533159",
    "end": "1541360"
  },
  {
    "text": "the order that the events can happen there is no guarantee in fact the events can happen in the opposite order first",
    "start": "1541360",
    "end": "1549480"
  },
  {
    "text": "the container is created and then it starts running and it might even start executing operations before the state is",
    "start": "1549480",
    "end": "1556640"
  },
  {
    "text": "actually updated and and this is problematic because the policy will not be applied in this case so we need to do",
    "start": "1556640",
    "end": "1563320"
  },
  {
    "text": "something better um and what we do is we use runtime hooks so runtime hooks are a way",
    "start": "1563320",
    "end": "1570799"
  },
  {
    "text": "for tetragon or any other application to hook into the Container runtime system",
    "start": "1570799",
    "end": "1576840"
  },
  {
    "text": "and what we do when we hook is basically we say to The Container runtime system every time you create a new container do",
    "start": "1576840",
    "end": "1584520"
  },
  {
    "text": "this and by this in this case we contact the tetragon agent before the container",
    "start": "1584520",
    "end": "1590720"
  },
  {
    "text": "starts set everything up the state is ready and then once we're done we go",
    "start": "1590720",
    "end": "1596600"
  },
  {
    "text": "back to the run time and say yeah everything's good you can now start the container the container starts and we",
    "start": "1596600",
    "end": "1603039"
  },
  {
    "text": "have ensured that every operation will be subject to the policy if the uh",
    "start": "1603039",
    "end": "1609279"
  },
  {
    "text": "corresponding labels match so Ted Dragon runtime Hoops are",
    "start": "1609279",
    "end": "1617120"
  },
  {
    "text": "implemented in a different demon Set uh it's called tetron Uh tic Hooks and",
    "start": "1617120",
    "end": "1622880"
  },
  {
    "text": "there are two interfaces one which is oci hooks where basically you drop a",
    "start": "1622880",
    "end": "1628320"
  },
  {
    "text": "file into a directory this is this is something that we use for cryo and there",
    "start": "1628320",
    "end": "1633360"
  },
  {
    "text": "is another interface called NRI um which is uh used for",
    "start": "1633360",
    "end": "1639000"
  },
  {
    "text": "continuity uh recently NRI was enabled by default in the recent release of",
    "start": "1639000",
    "end": "1645440"
  },
  {
    "text": "container D for 2.0 and it's also supported um by cryo",
    "start": "1645440",
    "end": "1651840"
  },
  {
    "text": "so this is very useful for us uh because it lets us do things in security that we",
    "start": "1651840",
    "end": "1658279"
  },
  {
    "text": "wouldn't otherwise be able to do so I don't know if you work on NRI or you",
    "start": "1658279",
    "end": "1663480"
  },
  {
    "text": "know somebody working on NRI uh say thank you from",
    "start": "1663480",
    "end": "1669159"
  },
  {
    "text": "us another issue that exists in kubernetes uh setups is what happens if",
    "start": "1669159",
    "end": "1675120"
  },
  {
    "text": "the agent Goes Down And there are some agents that never go down but the",
    "start": "1675120",
    "end": "1680799"
  },
  {
    "text": "tetragon agent T there are some cases where it will go down for example if we want to do an upgrade so if we want to",
    "start": "1680799",
    "end": "1686960"
  },
  {
    "text": "do an upgrade we need to take the stop the old version of tetragon running and",
    "start": "1686960",
    "end": "1692399"
  },
  {
    "text": "start the new one and the question is what happens with the enforcement so by",
    "start": "1692399",
    "end": "1700000"
  },
  {
    "text": "default the ton agent will unload all the BPF programs which means that the",
    "start": "1700000",
    "end": "1706440"
  },
  {
    "text": "enforcement will stop working for as long as the agent is down in certain situations this is undesirable so uh",
    "start": "1706440",
    "end": "1715559"
  },
  {
    "text": "We've introduced a flag uh where basically you can say to tetragon if you",
    "start": "1715559",
    "end": "1721399"
  },
  {
    "text": "exit keep don't remove the BPF programs and so let's say that the",
    "start": "1721399",
    "end": "1728039"
  },
  {
    "text": "tetragon starts the tetragon agent starts we load the BPF programs we load the BBF marks everything's running",
    "start": "1728039",
    "end": "1735360"
  },
  {
    "text": "enforcement is working and then the tagon agent goes down at this point if",
    "start": "1735360",
    "end": "1741279"
  },
  {
    "text": "this flag is enabled the program skips running this means that enforcement will",
    "start": "1741279",
    "end": "1747880"
  },
  {
    "text": "continue to happen based on the Old State since the tetragon agent is not",
    "start": "1747880",
    "end": "1753240"
  },
  {
    "text": "running there's no way to update I don't know any state that I've talked about",
    "start": "1753240",
    "end": "1759799"
  },
  {
    "text": "either new pods or changes in containers or new pod",
    "start": "1759799",
    "end": "1764840"
  },
  {
    "text": "labels um once the tetragon agent starts again it will kind of move to the new",
    "start": "1764840",
    "end": "1771399"
  },
  {
    "text": "version it will install new programs and then um everything would work as before",
    "start": "1771399",
    "end": "1777399"
  },
  {
    "text": "and then if you want to remove the programs um you can set this flag to fals which means that once the T Dragon",
    "start": "1777399",
    "end": "1784240"
  },
  {
    "text": "agent stops all the programs will be removed",
    "start": "1784240",
    "end": "1789960"
  },
  {
    "text": "um yeah so Anna now is going to tell us how to get started with the dragon enforcement",
    "start": "1789960",
    "end": "1795840"
  },
  {
    "text": "policies all right so so uh just to to",
    "start": "1795840",
    "end": "1801360"
  },
  {
    "text": "reiterate um what uh cornelus was talking about we can use in petragon",
    "start": "1801360",
    "end": "1808760"
  },
  {
    "text": "tracing policy we can use um kubernetes labels SP labels as uh filters and uh",
    "start": "1808760",
    "end": "1816360"
  },
  {
    "text": "this PO we Define them in a pot selector uh section of policy and this this is the thing that will actually be",
    "start": "1816360",
    "end": "1823919"
  },
  {
    "text": "propagated to the Kel um start in BPF Maps so that we can do filtering in",
    "start": "1823919",
    "end": "1830600"
  },
  {
    "text": "kernel and going step further um there are a few other selectors available in",
    "start": "1830600",
    "end": "1837399"
  },
  {
    "text": "um tagon policy uh but one that is very interesting in kubernetes context is",
    "start": "1837399",
    "end": "1842559"
  },
  {
    "text": "that we can uh restrict file access for example only um to allow access only",
    "start": "1842559",
    "end": "1850519"
  },
  {
    "text": "from the pot but not allow it from everywhere else for example not allow",
    "start": "1850519",
    "end": "1856320"
  },
  {
    "text": "users manually run c c exac to read some",
    "start": "1856320",
    "end": "1861720"
  },
  {
    "text": "um secret file so uh in this policy it's trated to fit on a side but in this policy we uh",
    "start": "1861720",
    "end": "1869679"
  },
  {
    "text": "still allow uh secret file access to the pot but we use a pit filter to not allow",
    "start": "1869679",
    "end": "1877639"
  },
  {
    "text": "um users running to Cle xac to to access this file um another example uh that uh",
    "start": "1877639",
    "end": "1884840"
  },
  {
    "text": "we mentioned in the first slide uh blocking",
    "start": "1884840",
    "end": "1889960"
  },
  {
    "text": "um Lo loading kernel modules loading kernel modules is highly privileged operation that some tools do some tools",
    "start": "1889960",
    "end": "1897960"
  },
  {
    "text": "that um haven't uh discovered BPF yet for example uh but it's not something",
    "start": "1897960",
    "end": "1903440"
  },
  {
    "text": "that's just should happen randomly in uh in a system uh to block loading kernel modules we can use uh this three uh hook",
    "start": "1903440",
    "end": "1912639"
  },
  {
    "text": "points again these are um LSM hooks a security Kernel module request kernel",
    "start": "1912639",
    "end": "1918000"
  },
  {
    "text": "file uh Kel low data and uh again we can overwrite um the return value to return",
    "start": "1918000",
    "end": "1926039"
  },
  {
    "text": "an error and send ail signal uh we will need to filter on arguments to this",
    "start": "1926039",
    "end": "1932600"
  },
  {
    "text": "functions to um filter only the module uh Cent module um operations I won't",
    "start": "1932600",
    "end": "1939440"
  },
  {
    "text": "show a full policy for this I will leave it as homework for you all to write a",
    "start": "1939440",
    "end": "1945000"
  },
  {
    "text": "policy that is blocking Uh current mods from being clouded uh but if you don't",
    "start": "1945000",
    "end": "1950360"
  },
  {
    "text": "feel like writing a policy you can also check out um examples directory examples",
    "start": "1950360",
    "end": "1955720"
  },
  {
    "text": "tracing policy directory in tetron repository uh so tetron policies are",
    "start": "1955720",
    "end": "1961120"
  },
  {
    "text": "very low level and we know that it's not an easy task to write them in general",
    "start": "1961120",
    "end": "1966760"
  },
  {
    "text": "this is why um tetragon Community is collecting lots and lots of example",
    "start": "1966760",
    "end": "1972320"
  },
  {
    "text": "policies for different use cases in this um examples directory uh there's also a",
    "start": "1972320",
    "end": "1978120"
  },
  {
    "text": "policy Library which is sort of U more curated and better documented collection",
    "start": "1978120",
    "end": "1983639"
  },
  {
    "text": "of example policies in ton documentation um test.io you can find uh like document",
    "start": "1983639",
    "end": "1989919"
  },
  {
    "text": "policies for uh several specific use cases um to learn more uh visit tetragon",
    "start": "1989919",
    "end": "1998000"
  },
  {
    "text": "documentation um tetragon doio uh tetragon is on GitHub is open source as",
    "start": "1998000",
    "end": "2004159"
  },
  {
    "text": "under organization and uh we also have Labs like Hands-On Labs where you",
    "start": "2004159",
    "end": "2011480"
  },
  {
    "text": "can try out tetragon without uh messing up with your machine um and we have",
    "start": "2011480",
    "end": "2019760"
  },
  {
    "text": "books which can be downloaded for free from ISO valent website um if you visit",
    "start": "2019760",
    "end": "2025519"
  },
  {
    "text": "Isa valent Bo then you can do Labs over there and you will get some like batch",
    "start": "2025519",
    "end": "2030600"
  },
  {
    "text": "like a sticker for for completing a batch uh and we also have a book book sinning so uh today just after this talk",
    "start": "2030600",
    "end": "2039000"
  },
  {
    "text": "I think um there is book signing with uh Le rice um and tomorrow lunchtime uh",
    "start": "2039000",
    "end": "2046480"
  },
  {
    "text": "there will be book signing with our colleague Natalia uh with security uh",
    "start": "2046480",
    "end": "2052320"
  },
  {
    "text": "security observability with evf book which covers some of the stuff that we talked about today",
    "start": "2052320",
    "end": "2058638"
  },
  {
    "text": "um we also have a contest the first ever Country Fest uh tetragon Country Fest",
    "start": "2058639",
    "end": "2064679"
  },
  {
    "text": "which is tomorrow um come to contribute or learn help getting started submit",
    "start": "2064679",
    "end": "2071839"
  },
  {
    "text": "your homework that I gave you or discuss your ideas um and uh at this point I",
    "start": "2071839",
    "end": "2078158"
  },
  {
    "text": "would like to also thank all the dragon contributors uh who helped with uh code",
    "start": "2078159",
    "end": "2085638"
  },
  {
    "text": "with writing policies documentation or reported uh bugs to us uh this is uh",
    "start": "2085639",
    "end": "2092280"
  },
  {
    "text": "really really helpful and after ccon let's stay in touch uh we have tetragon community",
    "start": "2092280",
    "end": "2098000"
  },
  {
    "text": "meeting tetragon community meeting is happening monthly um the you can find",
    "start": "2098000",
    "end": "2104480"
  },
  {
    "text": "information um on this link on the slide and uh we are also on slack we are all",
    "start": "2104480",
    "end": "2111119"
  },
  {
    "text": "on SBP slack in tetragon channel so uh you can ask all your questions um there",
    "start": "2111119",
    "end": "2119079"
  },
  {
    "text": "and that's it from us thank you very much",
    "start": "2119079",
    "end": "2125240"
  },
  {
    "text": "right if you have any questions then mics are over there and you can also",
    "start": "2129400",
    "end": "2134599"
  },
  {
    "text": "find us around over the",
    "start": "2134599",
    "end": "2139680"
  },
  {
    "text": "week I have a quick question is there a possibility of deploying the hooks on",
    "start": "2148000",
    "end": "2153560"
  },
  {
    "text": "the drron demon set itself instead of separate one like this already too many demon sets out there the oci hooks you",
    "start": "2153560",
    "end": "2161520"
  },
  {
    "text": "talked about can you repeat sorry I didn't um for the deploying the hooks into the",
    "start": "2161520",
    "end": "2167440"
  },
  {
    "text": "kubernetes you mention that is deployed with the demon set right the AR isn't in",
    "start": "2167440",
    "end": "2174400"
  },
  {
    "text": "the oi hooks you talked about so are you talking how you deploy the tetragon",
    "start": "2174400",
    "end": "2180119"
  },
  {
    "text": "policy or no the hooks the H the C hooks yeah runtime hooks how they are deployed",
    "start": "2180119",
    "end": "2187280"
  },
  {
    "text": "is yeah I think you mentioned that it's deployed using demon set but the dragon itself also deployed using separate",
    "start": "2187280",
    "end": "2193560"
  },
  {
    "text": "demon set right yeah that that's a good question so they are deployed by the helm uh chart so the helm chart has",
    "start": "2193560",
    "end": "2201000"
  },
  {
    "text": "configuration and then if you do Helm install tetragon with the purple configuration it will also inst install",
    "start": "2201000",
    "end": "2207240"
  },
  {
    "text": "the tetragon AR hooks demon set yeah that's correct but like there's already two demon set what is that possible",
    "start": "2207240",
    "end": "2213599"
  },
  {
    "text": "merching into one is the question why do we need two demon sets why two demon sets yeah yeah so the",
    "start": "2213599",
    "end": "2221079"
  },
  {
    "text": "first version was actually on the same demon set but this doesn't work well because we need the hook to be to run",
    "start": "2221079",
    "end": "2228400"
  },
  {
    "text": "even if the agent is down because then we can actually say to the configure the",
    "start": "2228400",
    "end": "2235319"
  },
  {
    "text": "hook to stop the container from starting because if the agent if if we",
    "start": "2235319",
    "end": "2241839"
  },
  {
    "text": "restart the agent or the tetragon demon set there will be no hook",
    "start": "2241839",
    "end": "2248800"
  },
  {
    "text": "okay got it could be like in container that could apply the hook too right so",
    "start": "2248800",
    "end": "2254640"
  },
  {
    "text": "for NRI it needs to be a service it needs to be running I see okay if you want more details feel free to to kind",
    "start": "2254640",
    "end": "2261200"
  },
  {
    "text": "of grab me and we can discuss uh for a long time is there another question yeah",
    "start": "2261200",
    "end": "2266680"
  },
  {
    "text": "I have another one uh on that policy you were uh specifying uh that U argument uh with",
    "start": "2266680",
    "end": "2274839"
  },
  {
    "text": "some specific index index zero if I would uh provide uh additional argument",
    "start": "2274839",
    "end": "2281480"
  },
  {
    "text": "and the position will change how that policy would work I mean you are in the policy you",
    "start": "2281480",
    "end": "2289040"
  },
  {
    "text": "operate on um kernel functions right so the arguments you specified there are",
    "start": "2289040",
    "end": "2296640"
  },
  {
    "text": "arguments taken by this kernel function that you are hooking",
    "start": "2296640",
    "end": "2301680"
  },
  {
    "text": "into if um different so in general when",
    "start": "2301680",
    "end": "2306920"
  },
  {
    "text": "writing policies you know part of the whole difficulty writing policies is finding right hook points that are first",
    "start": "2306920",
    "end": "2313440"
  },
  {
    "text": "secure and second stable uh that means working on multiple Cal versions that we",
    "start": "2313440",
    "end": "2319920"
  },
  {
    "text": "want to support and also multiple distributions if it happens that um now on different um colal vs this function",
    "start": "2319920",
    "end": "2330040"
  },
  {
    "text": "has different arguments then the policy will not support both of them right um",
    "start": "2330040",
    "end": "2336960"
  },
  {
    "text": "but yeah but these arguments there are you know you you kind of read them from",
    "start": "2336960",
    "end": "2342599"
  },
  {
    "text": "the kernel code and you just Define in the policy which uh arguments you want",
    "start": "2342599",
    "end": "2350079"
  },
  {
    "text": "to filter on also which arguments you want to for example include in the",
    "start": "2350079",
    "end": "2356280"
  },
  {
    "text": "events that are exported so uh it's not the argument in the command line so uh",
    "start": "2356280",
    "end": "2361960"
  },
  {
    "text": "where we were uh putting a cat uh some file and uh that that wasn't that okay",
    "start": "2361960",
    "end": "2368280"
  },
  {
    "text": "it's the argument of the hook okay okay I see thanks thank you thank you thank",
    "start": "2368280",
    "end": "2373880"
  },
  {
    "text": "you yeah thanks all the talk uh this looks like pretty much perfect thing for",
    "start": "2373880",
    "end": "2380480"
  },
  {
    "text": "you know put the security run time so how do you think how do you describe the situation what's missing and",
    "start": "2380480",
    "end": "2387839"
  },
  {
    "text": "milestones for future development oh future development yeah",
    "start": "2387839",
    "end": "2393680"
  },
  {
    "text": "what do you how do you describe what's missing and uh what what kind of like a",
    "start": "2393680",
    "end": "2399200"
  },
  {
    "text": "features are you guys going to work can I start yeah yeah",
    "start": "2399200",
    "end": "2405000"
  },
  {
    "text": "so we have the mechanism but writing policies is really tricky and what we",
    "start": "2405000",
    "end": "2412319"
  },
  {
    "text": "started doing is providing some policies an example but specifically for",
    "start": "2412319",
    "end": "2419119"
  },
  {
    "text": "enforcement this can be really problematic because like observability wor case scenario will generate an event",
    "start": "2419119",
    "end": "2424720"
  },
  {
    "text": "but if you start killing somebody's processes then then that's not a very good thing so like having a way so in my",
    "start": "2424720",
    "end": "2432839"
  },
  {
    "text": "mind the challenges are two having a way to write these policies enable people",
    "start": "2432839",
    "end": "2438800"
  },
  {
    "text": "for different platforms for different setups to write these policies and also have a way to explain to the operator",
    "start": "2438800",
    "end": "2447119"
  },
  {
    "text": "what happened so because we generate an event or we we can enforce",
    "start": "2447119",
    "end": "2453079"
  },
  {
    "text": "somewhere because I don't know like some privilege change like a very low level",
    "start": "2453079",
    "end": "2458359"
  },
  {
    "text": "um kernal thing but it might not be clear to the operator what actually went",
    "start": "2458359",
    "end": "2463920"
  },
  {
    "text": "wrong so I I think the mechanism is in a pretty good State the challenge is like",
    "start": "2463920",
    "end": "2469800"
  },
  {
    "text": "how can we bring it to the end user if if that makes sense so you're talking about like a user experience right yes",
    "start": "2469800",
    "end": "2477839"
  },
  {
    "text": "okay yeah yeah so I think that's I'm I'm seeing T Tron as um kind of a building",
    "start": "2477839",
    "end": "2484760"
  },
  {
    "text": "block almost for um more specialized tools this is what we",
    "start": "2484760",
    "end": "2490160"
  },
  {
    "text": "are starting to to see in the community that people are taking tetragon and",
    "start": "2490160",
    "end": "2495280"
  },
  {
    "text": "using it as a building block to uh build some more specialized tool um for for",
    "start": "2495280",
    "end": "2500800"
  },
  {
    "text": "specific security use cases so write a policy and then either uh either write",
    "start": "2500800",
    "end": "2506319"
  },
  {
    "text": "an enforcement policy or write an observability policy and then process",
    "start": "2506319",
    "end": "2511800"
  },
  {
    "text": "the events somehow so yeah I think like what is what is uh um difficult there",
    "start": "2511800",
    "end": "2519160"
  },
  {
    "text": "and what is what is kind of U missing and where we could get uh could use more",
    "start": "2519160",
    "end": "2525280"
  },
  {
    "text": "help from from the community is like like writing policies and kind of using",
    "start": "2525280",
    "end": "2530599"
  },
  {
    "text": "tetragon for specific use cases and improving his experience for specific kind okay thanks good to",
    "start": "2530599",
    "end": "2538640"
  },
  {
    "text": "know if there are other questions please come and grab us yeah we'll be around",
    "start": "2540520",
    "end": "2545640"
  },
  {
    "text": "thank you very much",
    "start": "2545640",
    "end": "2549078"
  }
]