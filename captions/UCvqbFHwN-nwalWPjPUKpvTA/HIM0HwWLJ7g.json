[
  {
    "start": "0",
    "end": "105000"
  },
  {
    "text": "we're going to do this presentation we have about an hour-long presentation we have to do in about 35 minutes so we're",
    "start": "390",
    "end": "6359"
  },
  {
    "text": "going to try to go as fast as possible a lot of the presentations going to be demo so that's all live demo well 90%",
    "start": "6359",
    "end": "12870"
  },
  {
    "text": "live demo a little bit of recording so today my name is Dan Walsh I am a",
    "start": "12870",
    "end": "18770"
  },
  {
    "text": "longtime Red Hat employee and I'm in charge of the container team contain a",
    "start": "18770",
    "end": "24720"
  },
  {
    "text": "runtime team at Red Hat basically we do everything that is underneath kubernetes everything that runs underneath",
    "start": "24720",
    "end": "31289"
  },
  {
    "text": "kubernetes on a host as well as other container runtimes yeah it won't it won't happen and ronald",
    "start": "31289",
    "end": "38399"
  },
  {
    "text": "is film hi so I'm a cryo maintainer OC I mean dinner run sea maintainer primarily",
    "start": "38399",
    "end": "44820"
  },
  {
    "text": "focusing on cryo for the past couple of years okay so the name of this talk was actually security considerations for",
    "start": "44820",
    "end": "51510"
  },
  {
    "text": "container runtimes but I actually like to talk about it differently it's it's really we're talking about container",
    "start": "51510",
    "end": "57000"
  },
  {
    "text": "engine saya there's one of the problems in the container world is that we have these overlapping terms so a lot of",
    "start": "57000",
    "end": "62489"
  },
  {
    "text": "people call these things they call docker or contain a runtime but really all these things are engines what I'm",
    "start": "62489",
    "end": "67890"
  },
  {
    "text": "talking about engine it's the thing that actually pulls images to a host execute containers on top of it but usually",
    "start": "67890",
    "end": "73619"
  },
  {
    "text": "contain their engines are actually launching OCI runtimes underneath so we're gonna go through all that today",
    "start": "73619",
    "end": "78720"
  },
  {
    "text": "and show you some runtimes running underneath so really think of things to things like darker cryo pod men build a",
    "start": "78720",
    "end": "87570"
  },
  {
    "text": "container d they're all container engines and then run times the things underneath so we're talking about things",
    "start": "87570",
    "end": "93509"
  },
  {
    "text": "like kada containers run sea containers G visor nabla and a host of others I",
    "start": "93509",
    "end": "100049"
  },
  {
    "text": "guess one was announced by AWS this week called flat firecracker so anyways",
    "start": "100049",
    "end": "107960"
  },
  {
    "text": "everybody's done this I like to do an interactive with my crowd so let's go stand up everybody everybody stretch",
    "start": "107960",
    "end": "116189"
  },
  {
    "text": "your legs a little bit all right ready please read out loud all text in",
    "start": "116189",
    "end": "123439"
  },
  {
    "text": "excellent excellent okay",
    "start": "123439",
    "end": "127549"
  },
  {
    "text": "okay okay so content containers are more",
    "start": "159930",
    "end": "167470"
  },
  {
    "text": "than just this just docker right docker sort of revolutionized this thing but containers are much more than really a",
    "start": "167470",
    "end": "173650"
  },
  {
    "text": "Linux concept and we're gonna go through that but let's look at what it means to run a container a lot of system what do",
    "start": "173650",
    "end": "180460"
  },
  {
    "text": "you have to do to run a container so really when I looked at darker years ago and I've been working on docker pretty",
    "start": "180460",
    "end": "186640"
  },
  {
    "start": "181000",
    "end": "226000"
  },
  {
    "text": "much you know not since the beginning but since it really exploded onto the scene",
    "start": "186640",
    "end": "191890"
  },
  {
    "text": "what dock it does is it does multiple different things it handles multiple different kinds of workloads and really",
    "start": "191890",
    "end": "198160"
  },
  {
    "text": "in some ways didn't follow it sort of the traditional UNIX model ways that you do individual tools to do individual",
    "start": "198160",
    "end": "204970"
  },
  {
    "text": "tasks and then do them well so really what we wanted to do is to break a pot sort of what darker is doing and try to",
    "start": "204970",
    "end": "212110"
  },
  {
    "text": "figure out different ways of doing some of those functions and of course since I'm from Red Hat we have to insert the",
    "start": "212110",
    "end": "218620"
  },
  {
    "text": "system D joke at this point okay so we'll get that out of the way so don't",
    "start": "218620",
    "end": "224709"
  },
  {
    "text": "ask me what about system D so we wanted a separate use case there's separate container use cases when we're dealing",
    "start": "224709",
    "end": "230980"
  },
  {
    "start": "226000",
    "end": "293000"
  },
  {
    "text": "with containers we have separate ways we want to deal with containers and I break them down to three main use cases the",
    "start": "230980",
    "end": "238090"
  },
  {
    "text": "one I push the hottest is containers in production so most of the people that came to come to this conference they",
    "start": "238090",
    "end": "243100"
  },
  {
    "text": "here for kubernetes so kubernetes is all about running containers in production right it's not about developing",
    "start": "243100",
    "end": "248170"
  },
  {
    "text": "containers it's not about playing with containers it's running containers and productions really moving them out and",
    "start": "248170",
    "end": "253300"
  },
  {
    "text": "the security goals of running containers and production is much different than developing containers or even building",
    "start": "253300",
    "end": "259329"
  },
  {
    "text": "containers so the second use case for containers is building container images so when I want to build a container",
    "start": "259330",
    "end": "265000"
  },
  {
    "text": "image building image that I'm going to push to a container registry that requires more privileges than running a",
    "start": "265000",
    "end": "270940"
  },
  {
    "text": "container in production okay so because I'm actually writing to the images writing content into the image stuff",
    "start": "270940",
    "end": "276580"
  },
  {
    "text": "lastly there's developing and playing and sort of getting familiar with what it means to be a container ok so just",
    "start": "276580",
    "end": "282310"
  },
  {
    "text": "playing around with the Catana and that's a different use case as well alright so there what we wanted to do is",
    "start": "282310",
    "end": "288250"
  },
  {
    "text": "we wanted to build tools for those three different use case and not basically lump them all together so when we looked at it you know we're",
    "start": "288250",
    "end": "296280"
  },
  {
    "text": "here for mainly for a kubernetes conference what does kubernetes need to do to run a container so the first thing kubernetes",
    "start": "296280",
    "end": "303090"
  },
  {
    "text": "needs to do to run a container is identify what the hell a container is right we have this art but what is a",
    "start": "303090",
    "end": "308129"
  },
  {
    "text": "container so container really means a container image right so people say I want to run the nginx container Irana",
    "start": "308129",
    "end": "314939"
  },
  {
    "text": "run the yo fedora container or the httpd container and what we needed to do is",
    "start": "314939",
    "end": "320849"
  },
  {
    "text": "have a definition of what a container is and this is really what docker invented so doctrine invented the idea of a",
    "start": "320849",
    "end": "326669"
  },
  {
    "text": "container image right it was basically a tower ball and some JSON files that describes what's inside the tab wall",
    "start": "326669",
    "end": "331860"
  },
  {
    "text": "really it's a root of s that I put content in or this thing directory in my system that sort of looks like slash I",
    "start": "331860",
    "end": "338129"
  },
  {
    "text": "put content to do it and then I create a JSON file that describes that what's the entry point when environmental variables",
    "start": "338129",
    "end": "344340"
  },
  {
    "text": "and that's really what a container image is and what we needed is we needed a standard to define what goes in that",
    "start": "344340",
    "end": "351240"
  },
  {
    "text": "JSON file so early on in the container process when darka came out we need you",
    "start": "351240",
    "end": "357569"
  },
  {
    "text": "know docker basically on the standard in this history of that being a problem when one company owns a standard write",
    "start": "357569",
    "end": "364500"
  },
  {
    "text": "our de-facto standard and the problem is called Microsoft well most of us Linux",
    "start": "364500",
    "end": "369569"
  },
  {
    "text": "guys like Microsoft now but back in the bad old days Microsoft owned dock and every time they",
    "start": "369569",
    "end": "375089"
  },
  {
    "text": "released a new version of opening of Office is they change dot docx format",
    "start": "375089",
    "end": "380189"
  },
  {
    "text": "and so everybody that was trying to build tools to deal with dot docx would suddenly be broken so we needed to do is",
    "start": "380189",
    "end": "386039"
  },
  {
    "text": "get a standard and get a standard on extend his bodies together to do that Koro West came along before red had",
    "start": "386039",
    "end": "392729"
  },
  {
    "text": "acquired them and they said we're going to generate a specification they generated a specification for what they",
    "start": "392729",
    "end": "397949"
  },
  {
    "text": "defined as a container and they generated the app C spec the FC spec came along and suddenly we had two ways",
    "start": "397949",
    "end": "405060"
  },
  {
    "text": "of doing containers we had docker containers and we adapt C containers and what happened is the bunch of companies",
    "start": "405060",
    "end": "410669"
  },
  {
    "text": "got together at that point and said we have to have a standard we can't have debian in rpm again right 20 years 25",
    "start": "410669",
    "end": "417089"
  },
  {
    "text": "years ago debian and RP red had in in other open source developers couldn't get together on a standard or mint",
    "start": "417089",
    "end": "423210"
  },
  {
    "text": "software on Linux so we ended up with two formats so anybody wants to ship software and in Linux has to ship in the",
    "start": "423210",
    "end": "428940"
  },
  {
    "text": "two formats so the companies that got together with Google Microsoft Red Hat IBM core OS might be the same company at",
    "start": "428940",
    "end": "436560"
  },
  {
    "text": "some point darker and a few others and I",
    "start": "436560",
    "end": "441720"
  },
  {
    "text": "always forget the others and if they're in the room they can shout what but basically they get together and created OSI ISO OCIE image specifications bundle",
    "start": "441720",
    "end": "448740"
  },
  {
    "text": "specification came out a year ago and that basically says this is what it means to be a container image and those",
    "start": "448740",
    "end": "454380"
  },
  {
    "text": "container images consider the container registries so the next thing you need to do after you define what a container is",
    "start": "454380",
    "end": "459870"
  },
  {
    "start": "456000",
    "end": "754000"
  },
  {
    "text": "you have to get it off of the registry to the host and we developed a tool several years ago called scope EO and",
    "start": "459870",
    "end": "465509"
  },
  {
    "text": "scope EO was meant met remote viewing and basically it was a tool to look at container images eventually that evolved",
    "start": "465509",
    "end": "471419"
  },
  {
    "text": "into a tool that could pull images off of the hose back and forth well quarter o West a year ago a year and half ago",
    "start": "471419",
    "end": "476880"
  },
  {
    "text": "came to us and said we want to use scope EO to pull in container images for rocket to use but they said they didn't",
    "start": "476880",
    "end": "483599"
  },
  {
    "text": "want to execute the scope EO command they wanted us to create a separate library so CLI on top of scope EO split",
    "start": "483599",
    "end": "490229"
  },
  {
    "text": "into a CL a library in a separate executable and so we created containers image so containers image is a full",
    "start": "490229",
    "end": "496680"
  },
  {
    "text": "library go library that can be used for pulling and pushing images from container registries the next thing you",
    "start": "496680",
    "end": "503159"
  },
  {
    "text": "need to do after you pull the image to the host is the image usually comes in a bunch of layers so I need to be able to take those layers of that image bundles",
    "start": "503159",
    "end": "510000"
  },
  {
    "text": "and untier it onto my system so I need to untier on to several different yeah",
    "start": "510000",
    "end": "515459"
  },
  {
    "text": "well the way we do it is we do it with a layered file system called a copy on write file system so if you played with",
    "start": "515459",
    "end": "521669"
  },
  {
    "text": "darker you've seen overlay device mapper so we have we have a library out there that actually was you know originally a",
    "start": "521669",
    "end": "528660"
  },
  {
    "text": "lot of it was written by Red Hat some of it came from darker and other people it's called container storage and what's",
    "start": "528660",
    "end": "534120"
  },
  {
    "text": "inside a container storage is overlay driver a ufs driver XFS butter efest",
    "start": "534120",
    "end": "539910"
  },
  {
    "text": "device mapper and BFS I believe that the ones so basically we have a library that",
    "start": "539910",
    "end": "545279"
  },
  {
    "text": "can be used to store container images onto a host the last thing you need to",
    "start": "545279",
    "end": "550920"
  },
  {
    "text": "do you know so basically I have the ability to identify a container I have ability to pull a container image off a",
    "start": "550920",
    "end": "556550"
  },
  {
    "text": "container registry I have the ability to store it on disk now I have to execute the container so the last thing was done",
    "start": "556550",
    "end": "563210"
  },
  {
    "text": "was the OCI standard for runtime so we defined OC I got together and defined",
    "start": "563210",
    "end": "568460"
  },
  {
    "text": "what it means to be a runtime so when I run a container I have three people that participate in defining what means to",
    "start": "568460",
    "end": "575720"
  },
  {
    "text": "run the container first of all I have the container image that has that JSON file associated way at the image bundle",
    "start": "575720",
    "end": "581270"
  },
  {
    "text": "spec the second thing I have is the container engine it has sort of hard-coded constants inside of it that",
    "start": "581270",
    "end": "588200"
  },
  {
    "text": "it defines to run a container and lastly I have the user of that you know like kubernetes or something like that that's",
    "start": "588200",
    "end": "593930"
  },
  {
    "text": "talking to the container engine and said I don't want to use the defaults I want to use these separate separate other",
    "start": "593930",
    "end": "599120"
  },
  {
    "text": "things what the container engine then does is it takes the input from the image its own hard-coded image content",
    "start": "599120",
    "end": "606230"
  },
  {
    "text": "and the content from the user combines it all together invites a JSON file that",
    "start": "606230",
    "end": "612080"
  },
  {
    "text": "JSON file is what the image specification is then there's a tool that can run that read that image spec",
    "start": "612080",
    "end": "617750"
  },
  {
    "text": "the read that JSON file which points to the root of s that was created on the copy-on-write filesystem and it's taught",
    "start": "617750",
    "end": "624110"
  },
  {
    "text": "to execute the container basically configures the kernel to set up the container and run paid one run C was",
    "start": "624110",
    "end": "630070"
  },
  {
    "text": "actually came out of Lib Lib container which was donated to the OCI by darker",
    "start": "630070",
    "end": "635780"
  },
  {
    "text": "and then we built a tool and sadly it continues to be developed while all these years a year and a half to 23",
    "start": "635780",
    "end": "642350"
  },
  {
    "text": "years later and it's continued still isn't 1.0 but pretty much everybody in the world that runs containers right now",
    "start": "642350",
    "end": "647570"
  },
  {
    "text": "so to the traditional containers that's using run see darker uses it try out all",
    "start": "647570",
    "end": "652850"
  },
  {
    "text": "the toast tools we're going to be talking about today I'll use run C is",
    "start": "652850",
    "end": "657920"
  },
  {
    "text": "that like an OC I runtimes that have come along like cada containers G Weiser those other ones that I talked about",
    "start": "657920",
    "end": "663320"
  },
  {
    "text": "earlier they've all implemented OC I all they do is read the specification and then they launch a container everybody",
    "start": "663320",
    "end": "669200"
  },
  {
    "text": "got it so far so the last step of what kubernetes needed around a container is",
    "start": "669200",
    "end": "675410"
  },
  {
    "text": "also triggered by core OS so core OS sadly all this happened before Carlos got bought by Red Hat by the way so",
    "start": "675410",
    "end": "681200"
  },
  {
    "text": "congratulation to chloro West so core OS came along and they wanted they had rocket and what they did is they came to",
    "start": "681200",
    "end": "688040"
  },
  {
    "text": "kuben and said we want to run rocket under kubernetes and at the time kubernetes",
    "start": "688040",
    "end": "693890"
  },
  {
    "text": "this is three three years ago or so at the time all kubernetes did is call out",
    "start": "693890",
    "end": "699230"
  },
  {
    "text": "to the docker api all they did is talk to darker so core OS team got together and they wrote a huge patch set that",
    "start": "699230",
    "end": "705620"
  },
  {
    "text": "came to kubernetes and said if def docker do it this way else def do it",
    "start": "705620",
    "end": "711140"
  },
  {
    "text": "Rockets way and the kubernetes developers teams basically at that point said hold on",
    "start": "711140",
    "end": "717230"
  },
  {
    "text": "you know the people have pibbles gonna come and they're gonna say if def gear do it this way right and so they didn't",
    "start": "717230",
    "end": "723230"
  },
  {
    "text": "want to have all these different container engines sort of specifying what it meant to run the container out of kubernetes and they turned it on its",
    "start": "723230",
    "end": "729920"
  },
  {
    "text": "ear and said instead of you guys coming to us and embedding your you know secret sauce into us we will call out an api to",
    "start": "729920",
    "end": "737029"
  },
  {
    "text": "you to run a container and that was called the CRI container runtime interface so the container runtime",
    "start": "737029",
    "end": "743690"
  },
  {
    "text": "interface was developed like by kubernetes team and at that point one of",
    "start": "743690",
    "end": "749630"
  },
  {
    "text": "the members of my team Marla Patel came to me and said hey we can build one of those right so quiet",
    "start": "749630",
    "end": "757790"
  },
  {
    "start": "754000",
    "end": "1006000"
  },
  {
    "text": "what is growl growl basically loves cuban artists so cryos only purpose is",
    "start": "757790",
    "end": "764209"
  },
  {
    "text": "to implement the cuban it is CRI interface nothing more and nothing less",
    "start": "764209",
    "end": "769360"
  },
  {
    "text": "doesn't care about my so spare some care about anything else so it lost cuban it",
    "start": "769360",
    "end": "775730"
  },
  {
    "text": "is basically so dan talked about all these pieces that we used to to make up",
    "start": "775730",
    "end": "782150"
  },
  {
    "text": "the container runtime and let's see what cuban at this node looks like when we're using cryos a runtime so on the left",
    "start": "782150",
    "end": "788060"
  },
  {
    "text": "here you see the cubelet and on the right is a cryo demon and the GRP capi",
    "start": "788060",
    "end": "794089"
  },
  {
    "text": "is basically the CRI which is implemented by the crowd demon and cubelet is using the client side of the",
    "start": "794089",
    "end": "800060"
  },
  {
    "text": "DPI to talk to cryo to to create and run images so CRI comprises of the image",
    "start": "800060",
    "end": "807920"
  },
  {
    "text": "service and the runtime service and the image service is basically responsible for pulling down images so cubelet",
    "start": "807920",
    "end": "814300"
  },
  {
    "text": "basically asks over CRI hey pull this image because the container I'm going to launch is going to need that and we use",
    "start": "814300",
    "end": "822360"
  },
  {
    "text": "the containers image library to implement the image service and the runtime service uses takes that image",
    "start": "822360",
    "end": "830130"
  },
  {
    "text": "and uses the storage library to create the copy-on-write filesystem using like",
    "start": "830130",
    "end": "835170"
  },
  {
    "text": "overlay or device mapper or whatever the whatever it is configured to use as a",
    "start": "835170",
    "end": "840300"
  },
  {
    "text": "driver and then it uses another OCR library called the OCR generate library it's basically takes all the CRI",
    "start": "840300",
    "end": "847650"
  },
  {
    "text": "configuration and converts it into a JSON that that Co CIA runtime spec JSON",
    "start": "847650",
    "end": "855930"
  },
  {
    "text": "so runs he can understand it and for networking we have been using CNI so any",
    "start": "855930",
    "end": "862590"
  },
  {
    "text": "plug-in that is CNI compatible can be used with cryo you just write down the",
    "start": "862590",
    "end": "867720"
  },
  {
    "text": "CNI config and pick flannel or calico or any other CNS solution and then finally",
    "start": "867720",
    "end": "873930"
  },
  {
    "text": "for the runtime today it calls out to any OC i incompatible runtime so if you",
    "start": "873930",
    "end": "880560"
  },
  {
    "text": "have a part to your OC i binary by default it's run C but we also added support for cotta working with Intel so",
    "start": "880560",
    "end": "888500"
  },
  {
    "text": "we have support for both of those and any other I think even G visor works",
    "start": "888500",
    "end": "893820"
  },
  {
    "text": "through that interface and on top you see a couple of pods running and so what",
    "start": "893820",
    "end": "900870"
  },
  {
    "text": "actually makes up a pod so if you're talking run see we have an infra",
    "start": "900870",
    "end": "906810"
  },
  {
    "text": "container which is kind of the holder container for for the C groups and all",
    "start": "906810",
    "end": "912270"
  },
  {
    "text": "the shared namespaces between the containers running in the pod so you when you when you when cubelet says",
    "start": "912270",
    "end": "919110"
  },
  {
    "text": "start a sandbox we launch that in for a container and then when it asks us to create containers inside that pod those",
    "start": "919110",
    "end": "926610"
  },
  {
    "text": "containers come and join the namespaces of the pod and they are all run under",
    "start": "926610",
    "end": "931800"
  },
  {
    "text": "the C group slice that is assigned to that pod so they are kind of contained inside",
    "start": "931800",
    "end": "937800"
  },
  {
    "text": "that pod and then on the right you see one more little thing called conmen now what is con one so we wanted to design a",
    "start": "937800",
    "end": "945150"
  },
  {
    "text": "cryo from the big to be able to like restart cryo without taking down the containers that are",
    "start": "945150",
    "end": "951330"
  },
  {
    "text": "started by cryo so Kahneman is a small program written in C and it stands this",
    "start": "951330",
    "end": "959460"
  },
  {
    "text": "for caught like container monitoring so what it's doing is it's basically watching the container process and it's",
    "start": "959460",
    "end": "965880"
  },
  {
    "text": "it just records when it exits it and it it can so it can return the is it could",
    "start": "965880",
    "end": "971400"
  },
  {
    "text": "back to the cubelet in addition it's also responsible for all the logging needs so CRI defines a logging format",
    "start": "971400",
    "end": "978480"
  },
  {
    "text": "and con one is responsible for reading the logs from that the container process is spewing out and writing them out in",
    "start": "978480",
    "end": "984900"
  },
  {
    "text": "the CRI format it is also responsible for handling like attach exact and oome",
    "start": "984900",
    "end": "990990"
  },
  {
    "text": "events however like on Mon I mean you see so many common processes running so for efficiency we have written carmen",
    "start": "990990",
    "end": "997350"
  },
  {
    "text": "using c and shared libraries so your memory usage overall even if you spawn",
    "start": "997350",
    "end": "1002510"
  },
  {
    "text": "hundreds of containers shouldn't be a lot so what's the status of cryo so we",
    "start": "1002510",
    "end": "1009980"
  },
  {
    "start": "1006000",
    "end": "1069000"
  },
  {
    "text": "have like nine test suites passing on each p are like more than a thousand",
    "start": "1009980",
    "end": "1016100"
  },
  {
    "text": "tests and no pull request is merged without running all these tests including cuban at this end to end test",
    "start": "1016100",
    "end": "1022070"
  },
  {
    "text": "so all the branches all the peers that go in there are always passing the cuban",
    "start": "1022070",
    "end": "1027110"
  },
  {
    "text": "a distress right now we are supporting versions one ten through one thirteen so we said like krylov's kubernetes right",
    "start": "1027110",
    "end": "1033890"
  },
  {
    "text": "so can you guess what version of claro works what version of q very simple you",
    "start": "1033890",
    "end": "1039740"
  },
  {
    "text": "just take one ten for cube 110 111 for cube 111 and 113 for cube 113 which was",
    "start": "1039740",
    "end": "1045680"
  },
  {
    "text": "just really used last week and one more additional points of openshift for dotto",
    "start": "1045680",
    "end": "1051260"
  },
  {
    "text": "which is red adds well distribution of cuban artists is going to use cryo by",
    "start": "1051260",
    "end": "1058160"
  },
  {
    "text": "default for food or dough it's already available as a preview you can try it out it's using graph and also openshift",
    "start": "1058160",
    "end": "1065600"
  },
  {
    "text": "online is using crime and production today so now i'm going to demonstrate a",
    "start": "1065600",
    "end": "1072260"
  },
  {
    "start": "1069000",
    "end": "1446000"
  },
  {
    "text": "few security focus features that we have added to cry",
    "start": "1072260",
    "end": "1077770"
  },
  {
    "text": "so here I have the cry of demon running",
    "start": "1079029",
    "end": "1088809"
  },
  {
    "text": "and here I was at a local Cuban Redis cluster that is talking to the crier",
    "start": "1088809",
    "end": "1095840"
  },
  {
    "text": "socket let's do a get notes and you see",
    "start": "1095840",
    "end": "1102979"
  },
  {
    "text": "we are using cube 113 1 let's start a",
    "start": "1102979",
    "end": "1110499"
  },
  {
    "text": "simple web application which just returns a hollow hollow hollow open ship",
    "start": "1110499",
    "end": "1115999"
  },
  {
    "text": "string so with solely started",
    "start": "1115999",
    "end": "1124840"
  },
  {
    "text": "so you can see that it's running let's see if we can actually hit it so it's up",
    "start": "1128640",
    "end": "1139679"
  },
  {
    "text": "and running now I'm gonna start another container and sorry",
    "start": "1139679",
    "end": "1153648"
  },
  {
    "text": "so this is an interactive container and it's using the attached API so you get an interactive shell here now let's jump",
    "start": "1158080",
    "end": "1167350"
  },
  {
    "text": "to the cryo configuration for a second so this is a cryo configuration file",
    "start": "1167350",
    "end": "1174580"
  },
  {
    "text": "where you setup the cryo daemon this is the part to the socket for example and",
    "start": "1174580",
    "end": "1180120"
  },
  {
    "text": "right now we care about the capabilities",
    "start": "1180120",
    "end": "1185470"
  },
  {
    "text": "so if you take a look at the capabilities here it's a list is lot shorter than what docker does by default",
    "start": "1185470",
    "end": "1192160"
  },
  {
    "text": "and the reason is like Crowl is configured to run containers in production and it doesn't support bills",
    "start": "1192160",
    "end": "1197770"
  },
  {
    "text": "a lot of other things that docker does by default so that's why we have been able to trim down this list and like it",
    "start": "1197770",
    "end": "1205240"
  },
  {
    "text": "can be trimmed down even further if you can figure out what capabilities your containers aren't going to need so one",
    "start": "1205240",
    "end": "1212860"
  },
  {
    "text": "thing to note here is that we don't have cap Metro now let's go to our container",
    "start": "1212860",
    "end": "1219970"
  },
  {
    "text": "and see what capabilities we have so you",
    "start": "1219970",
    "end": "1225100"
  },
  {
    "text": "can see that the list here matches what we saw in the config and now remember",
    "start": "1225100",
    "end": "1233290"
  },
  {
    "text": "that we don't we don't have kept not draw now let's see if we can actually",
    "start": "1233290",
    "end": "1239220"
  },
  {
    "text": "ping this other pot that we started earlier yes we can so if anyone was like",
    "start": "1239220",
    "end": "1250780"
  },
  {
    "text": "ping requires cap Nitro how are we still able to bring the other container right",
    "start": "1250780",
    "end": "1257200"
  },
  {
    "text": "so we are taking advantage of a new kernel feature that was added so basically it's a sis cuttle that you can",
    "start": "1257200",
    "end": "1263380"
  },
  {
    "text": "enable that allows you to use ping and without having captain I draw the",
    "start": "1263380",
    "end": "1269620"
  },
  {
    "text": "advantages like cap nitro has been involved in many security issues over the years and if you give it to your containers they have the ability to",
    "start": "1269620",
    "end": "1275830"
  },
  {
    "text": "craft packages and potentially cause security issues so cryo allows you to",
    "start": "1275830",
    "end": "1282220"
  },
  {
    "text": "like set defaults as cuddles remove capabilities at the daemon level so all your containers are more are more secure by default let's take a",
    "start": "1282220",
    "end": "1292640"
  },
  {
    "text": "look at one more thing so let's see if I can actually write or touch any files so",
    "start": "1292640",
    "end": "1297650"
  },
  {
    "text": "I cannot and why is that well I made use",
    "start": "1297650",
    "end": "1303080"
  },
  {
    "text": "of another feature here which is called read-only equal to true so what this",
    "start": "1303080",
    "end": "1308570"
  },
  {
    "text": "means is all of my containers are running with no write table top layer so",
    "start": "1308570",
    "end": "1314390"
  },
  {
    "text": "if you if you're if you're given a write table top layer to your containers they can end up writing content over there",
    "start": "1314390",
    "end": "1321560"
  },
  {
    "text": "and end up using this space which you would want to save so if you graph if",
    "start": "1321560",
    "end": "1327080"
  },
  {
    "text": "you write your containers well then the containers should be designed in such a",
    "start": "1327080",
    "end": "1332660"
  },
  {
    "text": "way that they are only writing to bind mounts that you provide to the container so in case of cuban it is you would you",
    "start": "1332660",
    "end": "1339230"
  },
  {
    "text": "would be using the appropriate amount like an empty door or a possession volume or something like that so cryo",
    "start": "1339230",
    "end": "1345500"
  },
  {
    "text": "allows you to like enable read-only just like how how one more tenets of being",
    "start": "1345500",
    "end": "1351950"
  },
  {
    "text": "secure is never run any container as route so this is a security feature similar to that one so anyone know for",
    "start": "1351950",
    "end": "1364550"
  },
  {
    "text": "bombs so the colonel added a feature a couple of years ago is basically a c",
    "start": "1364550",
    "end": "1370970"
  },
  {
    "text": "group for limiting the number of bits that are allowed within a c group and",
    "start": "1370970",
    "end": "1377320"
  },
  {
    "text": "let's see if we can four bombs of this container so what I've done here is cryo",
    "start": "1377320",
    "end": "1385340"
  },
  {
    "text": "exposes a bits limit setting and that is applied to each container started by",
    "start": "1385340",
    "end": "1391160"
  },
  {
    "text": "cryo and basically this says that you cannot start more than 50 processes inside your container and let's see how",
    "start": "1391160",
    "end": "1402530"
  },
  {
    "text": "this maps to a value that you can see inside your pod so you can see the limit",
    "start": "1402530",
    "end": "1411650"
  },
  {
    "text": "is 50 now I'm going to try and start sixty processes and see if that actually",
    "start": "1411650",
    "end": "1418700"
  },
  {
    "text": "works",
    "start": "1418700",
    "end": "1421240"
  },
  {
    "text": "so you can see like 49 plus the shell itself mix up the 50 and after that the",
    "start": "1424149",
    "end": "1430519"
  },
  {
    "text": "canal it stops you from creating any more processes so this is one more",
    "start": "1430519",
    "end": "1436010"
  },
  {
    "text": "setting that crowd provides out of the box and even just use it to make your containers more secure so earlier we",
    "start": "1436010",
    "end": "1446600"
  },
  {
    "start": "1446000",
    "end": "1651000"
  },
  {
    "text": "talked about kata and Friends of Intel",
    "start": "1446600",
    "end": "1452179"
  },
  {
    "text": "have created this nice little demo for us and so coupon it is recently add",
    "start": "1452179",
    "end": "1458269"
  },
  {
    "text": "added a feature called runtime class and what runtime class does is it allows you",
    "start": "1458269",
    "end": "1465649"
  },
  {
    "text": "to configure multiple runtimes and it allows you allows a way for you to pick",
    "start": "1465649",
    "end": "1472309"
  },
  {
    "text": "the runtime in your pod Yaman say for example if you want more security for a particular part then you would say you",
    "start": "1472309",
    "end": "1479870"
  },
  {
    "text": "would want to run that in a VM based container like kata so that's what this",
    "start": "1479870",
    "end": "1485659"
  },
  {
    "text": "feature does so I will try to this is a long presentation and will give the link and the the presentation if you want to",
    "start": "1485659",
    "end": "1490760"
  },
  {
    "text": "see the entirety or I would highly recommend going through all of it but because we don't have time I'll just jump to the relevant parts for now",
    "start": "1490760",
    "end": "1499059"
  },
  {
    "text": "so okay so here cryo is configured to",
    "start": "1508930",
    "end": "1518000"
  },
  {
    "text": "support two runtimes run C as well as kata and you give path to both the runtimes the default run",
    "start": "1518000",
    "end": "1524840"
  },
  {
    "text": "time is run C and the other one is SCADA",
    "start": "1524840",
    "end": "1529270"
  },
  {
    "text": "then we jump ahead and you can see a custom resource definition is cleared",
    "start": "1531040",
    "end": "1537350"
  },
  {
    "text": "for run time class and then another one is created for kata so now the cluster",
    "start": "1537350",
    "end": "1542690"
  },
  {
    "text": "understand this is another type of run time called kata then we launch a",
    "start": "1542690",
    "end": "1549110"
  },
  {
    "text": "default port using run C there is no runtime class added to this pod",
    "start": "1549110",
    "end": "1554900"
  },
  {
    "text": "definition here",
    "start": "1554900",
    "end": "1557830"
  },
  {
    "text": "just jumping ahead a little bit so the default pod is running then we check and",
    "start": "1566669",
    "end": "1572100"
  },
  {
    "text": "run see that the MU containers running there were 17 earlier they're 19 now 1",
    "start": "1572100",
    "end": "1577230"
  },
  {
    "text": "for the past in infra container and 1 for the actual container then we see",
    "start": "1577230",
    "end": "1591090"
  },
  {
    "text": "that there's nothing running under cotta containers right now then we create a",
    "start": "1591090",
    "end": "1597720"
  },
  {
    "text": "podium Alfa cotta and thing to note here is the runtime class is set to cotta so",
    "start": "1597720",
    "end": "1603119"
  },
  {
    "text": "this basically tells cryo that when you see this part and take a look at the",
    "start": "1603119",
    "end": "1609119"
  },
  {
    "text": "runtime class and use car time sort of run C to spawn that pod so now the cata",
    "start": "1609119",
    "end": "1616769"
  },
  {
    "text": "pod is started",
    "start": "1616769",
    "end": "1619669"
  },
  {
    "text": "nothing got added to run see but you see",
    "start": "1627040",
    "end": "1632770"
  },
  {
    "text": "two containers running under Cotter so the whole presentation goes over how",
    "start": "1632770",
    "end": "1638560"
  },
  {
    "text": "to set this up entirely Sophie orientation and details please check it out okay so that was basically cryo now",
    "start": "1638560",
    "end": "1655390"
  },
  {
    "start": "1651000",
    "end": "1747000"
  },
  {
    "text": "we're gonna be talking about Codman so one of the originally talked about the three ways you want to run containers well one of them was running",
    "start": "1655390",
    "end": "1662020"
  },
  {
    "text": "in production as we just saw we can take advantage of a lot of security features that aren't available when I want to",
    "start": "1662020",
    "end": "1667690"
  },
  {
    "text": "sort of play and test with the container so now we're going to look at what you want to do when you do on a test and play with a container and we introduced",
    "start": "1667690",
    "end": "1674410"
  },
  {
    "text": "a new project called pod man about a year and a half ago and we call a part",
    "start": "1674410",
    "end": "1679990"
  },
  {
    "text": "of the live pod project but basically pod man stands for a pod manager but really what we wanted to do is we want",
    "start": "1679990",
    "end": "1685990"
  },
  {
    "text": "to replace docker CLI so this is a different presentation I give sometimes called replacing Daka was replacing",
    "start": "1685990",
    "end": "1692980"
  },
  {
    "text": "Dhaka with God you fall asleep out there",
    "start": "1692980",
    "end": "1698100"
  },
  {
    "text": "okay so this is what you do you do a DNF install pod man and then you do a alias",
    "start": "1698100",
    "end": "1705400"
  },
  {
    "text": "doctor it goes pod man any questions but we'll hold off",
    "start": "1705400",
    "end": "1713800"
  },
  {
    "text": "questions to the end okay so and in the way I could prove that that's true here is this was my favorite tweet all time",
    "start": "1713800",
    "end": "1720670"
  },
  {
    "text": "this is alan moran who i don't know i said i completely forgot that two months",
    "start": "1720670",
    "end": "1725680"
  },
  {
    "text": "ago i set up an alias of dr. who those pod man and by the way this happened to me and it has been a dream and then he",
    "start": "1725680",
    "end": "1731230"
  },
  {
    "text": "says no big fat demons which is my mantra and down here someone responded to him and said how did you figure out",
    "start": "1731230",
    "end": "1737140"
  },
  {
    "text": "that you were running weren't running doctor and he said he ran docker help and of course pod man health came up so",
    "start": "1737140",
    "end": "1743040"
  },
  {
    "text": "let's jump and I'll give a quick demo to show you all the security features that",
    "start": "1743040",
    "end": "1748930"
  },
  {
    "start": "1747000",
    "end": "1885000"
  },
  {
    "text": "are in pod man so first of all a sort of Ronald's password when your does sudo ok",
    "start": "1748930",
    "end": "1758350"
  },
  {
    "text": "so the first thing we're gonna do here is just show you pod me inversion so",
    "start": "1758350",
    "end": "1764080"
  },
  {
    "text": "pretty much looks like docker version odd man info now the interesting thing here pod me an info pretty much like",
    "start": "1764080",
    "end": "1770380"
  },
  {
    "text": "doctor info except that unlike doctor we did not want to lock you into docker i/o so we wanted to",
    "start": "1770380",
    "end": "1776860"
  },
  {
    "text": "allow you to customize and pick which registries you want to have in your environment so if out of the boxes in",
    "start": "1776860",
    "end": "1782620"
  },
  {
    "text": "the fedora system so we have docker i/o for a project on Al Queda at i/o red",
    "start": "1782620",
    "end": "1788110"
  },
  {
    "text": "hats and sent to us as registry so if you give me just you know I want to run",
    "start": "1788110",
    "end": "1794260"
  },
  {
    "text": "the nginx it'll go through the list of registries and ask if you want to set up your own registry and remove all these",
    "start": "1794260",
    "end": "1800080"
  },
  {
    "text": "registries you can do that you can do whatever you want with the configuration of this tool right so it's any registry",
    "start": "1800080",
    "end": "1807280"
  },
  {
    "text": "so one of the things we talked about is building containers right so we talked about building containers as a third way",
    "start": "1807280",
    "end": "1812950"
  },
  {
    "text": "but we're not gonna have time to actually show you builder today but we're actually running builder right now",
    "start": "1812950",
    "end": "1818290"
  },
  {
    "text": "but what we were actually doing is we're running a container with builder inside of it and then we're using builder",
    "start": "1818290",
    "end": "1824020"
  },
  {
    "text": "inside of a container to build a container okay and it's a lovely wait wave yeah so we're actually just built",
    "start": "1824020",
    "end": "1829780"
  },
  {
    "text": "up up above we had docker file that actually had the three lines of",
    "start": "1829780",
    "end": "1836650"
  },
  {
    "text": "keep going up a little bit more basically have pulled Alpine set up a couple of environments of variable and a",
    "start": "1836650",
    "end": "1841720"
  },
  {
    "text": "label and actually traded an image inside of a catana now what that really demonstrates is using this tool there",
    "start": "1841720",
    "end": "1848410"
  },
  {
    "text": "are no demons right there's no reason to have a demon it's just a standard fork and exact process for running a",
    "start": "1848410",
    "end": "1853480"
  },
  {
    "text": "container underneath it and we can actually build containers inside the containers without leaking the darker",
    "start": "1853480",
    "end": "1859270"
  },
  {
    "text": "socket into containers and by the way access to the darkest socket means you have full route on the host and there's no logging to attract what you do so now",
    "start": "1859270",
    "end": "1866290"
  },
  {
    "text": "we are actually going to basically run container and show you that we have actually so here is the container image",
    "start": "1866290",
    "end": "1874150"
  },
  {
    "text": "that we built on the system so we built an Alpine image and we pulled the Alpine",
    "start": "1874150",
    "end": "1879730"
  },
  {
    "text": "damage and then we built it now we're just gonna remove and clean it up okay",
    "start": "1879730",
    "end": "1884550"
  },
  {
    "start": "1885000",
    "end": "1969000"
  },
  {
    "text": "so pretty much doctor can do that right you know somewhat everybody seen doctor do that what I'm about to show now was",
    "start": "1886300",
    "end": "1892690"
  },
  {
    "text": "something that doctor can't do we're actually gonna run the entire CLI as",
    "start": "1892690",
    "end": "1897700"
  },
  {
    "text": "non-root okay so the first thing we're gonna do here is we're gonna wow he's",
    "start": "1897700",
    "end": "1902740"
  },
  {
    "text": "already done it so he pulls the Alpine image as non-root so if you looked up above these pod man commands used to say",
    "start": "1902740",
    "end": "1909220"
  },
  {
    "text": "sudo and now they're not saying sudo he just ran an Alpine LS command inside of a container and now he's going to list",
    "start": "1909220",
    "end": "1914800"
  },
  {
    "text": "all the containers that we've written previously all the stuffs happening in the home directory right this is pod man",
    "start": "1914800",
    "end": "1920620"
  },
  {
    "text": "running inside the home directory when I present the customers customers are always asking me should I allow darker",
    "start": "1920620",
    "end": "1926440"
  },
  {
    "text": "socket to be leaked all the developers want to run with darker socket and I say darker socket is worse than giving sudo",
    "start": "1926440",
    "end": "1932500"
  },
  {
    "text": "with no password at least sudo with no password has logging okay and when I say",
    "start": "1932500",
    "end": "1937810"
  },
  {
    "text": "that everybody say doc has logging yes and I if I have ax as a darker socket do all my stuff and then I destroyed the",
    "start": "1937810",
    "end": "1943570"
  },
  {
    "text": "lock the container and I destroy the log at that time so if I do quod man images",
    "start": "1943570",
    "end": "1948700"
  },
  {
    "text": "you'll notice that I have two images inside of my home directory but now if I do sudo cloud man images you'll see that",
    "start": "1948700",
    "end": "1954760"
  },
  {
    "text": "I have a whole bunch of now that shows that there's a separation root images versus user injury user",
    "start": "1954760",
    "end": "1961480"
  },
  {
    "text": "directory images and that means that every user is going to have his own store inside of its own home directory",
    "start": "1961480",
    "end": "1967090"
  },
  {
    "text": "and that way they were isolated from each other that's taking advantage of the username space now if you come to the pot if you",
    "start": "1967090",
    "end": "1974890"
  },
  {
    "start": "1969000",
    "end": "2076000"
  },
  {
    "text": "want to see a demonstration username space takes too long right now I'll be at the bread that booth afterwards and I",
    "start": "1974890",
    "end": "1980830"
  },
  {
    "text": "can show you some of the stuff but all this is taking advantage to use the namespace to be able to do this functionality but using namespace is",
    "start": "1980830",
    "end": "1987160"
  },
  {
    "text": "actually even better than use the namespace means I can map non-root uses to route inside of a container so here",
    "start": "1987160",
    "end": "1994450"
  },
  {
    "text": "we are demonstrating we're going to create a container now we're going back to route and we're going to create a",
    "start": "1994450",
    "end": "1999520"
  },
  {
    "text": "container that map's zero to a hundred thousand and then the first five thousand you IDs after it so I'm by",
    "start": "1999520",
    "end": "2004980"
  },
  {
    "text": "mapping five thousand UID starting at zero inside like container in this they're actually UID 100,000 so one other things we added to",
    "start": "2004980",
    "end": "2012270"
  },
  {
    "text": "pod man is we added the ability to actually applaud me on top now has the ability to reveal what's going on inside",
    "start": "2012270",
    "end": "2018120"
  },
  {
    "text": "of a container so here we have used their ant host user so it shows you that you're running as root and UID a hundred",
    "start": "2018120",
    "end": "2024330"
  },
  {
    "text": "thousand the next line we did is like rep we did basically just a standard PS command and it shows that that container",
    "start": "2024330",
    "end": "2030660"
  },
  {
    "text": "even though it's running in a user name space is running as a hundred thousand on the host now we run a second container as two hundred thousand and",
    "start": "2030660",
    "end": "2037260"
  },
  {
    "text": "we're gonna see that's running it's rooted and two hundred thousand now we're going to do the PS command and",
    "start": "2037260",
    "end": "2043310"
  },
  {
    "text": "that you can see now is running at two hundred thousand so we have two processes running in container they both",
    "start": "2043310",
    "end": "2048810"
  },
  {
    "text": "think that route and but if they break out of the container they would be treated as UID 100,000 you undo you two",
    "start": "2048810",
    "end": "2054419"
  },
  {
    "text": "hundred thousand now this is used a namespace but it's never been used anywhere okay use the namespace of the",
    "start": "2054419",
    "end": "2060270"
  },
  {
    "text": "available inside of docket right now but it's a single user namespace for the entire all container run times all right",
    "start": "2060270",
    "end": "2065610"
  },
  {
    "text": "it's not even using the cryo yet and that's mainly because kubernetes is behind and being able to handle it if",
    "start": "2065610",
    "end": "2070888"
  },
  {
    "text": "we put in user name space but we're doing it in pod man we're experimenting we're also working with the Linux kernel",
    "start": "2070889",
    "end": "2076020"
  },
  {
    "start": "2076000",
    "end": "2209000"
  },
  {
    "text": "guys to make this fast to make it as fast as possible as far as handling it",
    "start": "2076020",
    "end": "2081148"
  },
  {
    "text": "so another interesting thing about pod man versus docker is docker is a client-server operation that means that",
    "start": "2081149",
    "end": "2087480"
  },
  {
    "text": "basically when you run the darker client the container is not a child of your processes child of the container daemon",
    "start": "2087480",
    "end": "2093929"
  },
  {
    "text": "pod man is different in that it is a fork and exact model so the process that you continue was actually a child yet process how",
    "start": "2093929",
    "end": "2100980"
  },
  {
    "text": "many people in here have ever heard of logging UID some of you care about security the",
    "start": "2100980",
    "end": "2107579"
  },
  {
    "text": "ollie hands should have gone up it's a really cool security feature when a user logs into a Linux system logging UID is",
    "start": "2107579",
    "end": "2114059"
  },
  {
    "text": "recorded the login program basically says this process was started by Dan Walsh or in this case Imran oh so you",
    "start": "2114059",
    "end": "2121470"
  },
  {
    "text": "can see that when I'll argue that the process is running as a thousand now we're gonna run sudo become root execute",
    "start": "2121470",
    "end": "2127769"
  },
  {
    "text": "pod man which is going to execute a container and then we're going to look at the sec logging UID okay so it comes",
    "start": "2127769",
    "end": "2136890"
  },
  {
    "text": "out as one thousand right now we do the exact same command with darker and",
    "start": "2136890",
    "end": "2142460"
  },
  {
    "text": "darker comes out as this really huge number which stands for minus one and the 64 bits okay so this means that the",
    "start": "2142460",
    "end": "2149460"
  },
  {
    "text": "darker daemon was never set right it wasn't created by a user process they never logged in so it ran the container",
    "start": "2149460",
    "end": "2155759"
  },
  {
    "text": "is that so why is that important let's look at the auditing subsystem so this command here basically says I'm going to",
    "start": "2155759",
    "end": "2161400"
  },
  {
    "text": "watch that see shadow okay it's gonna watch for anybody modifying it see shadow and we're gonna break out about",
    "start": "2161400",
    "end": "2166980"
  },
  {
    "text": "container we're gonna run pod man and actually modify it see shadow we do want to touch about see shadow now let's look",
    "start": "2166980",
    "end": "2172920"
  },
  {
    "text": "at the audit log it says right here that this evil human being up here just",
    "start": "2172920",
    "end": "2178200"
  },
  {
    "text": "hacked the system okay and then he did something weird on that gameplay okay so",
    "start": "2178200",
    "end": "2184170"
  },
  {
    "text": "monolith basically is modified that so now we just ran dark are the exact same break out of docker and now we're gonna",
    "start": "2184170",
    "end": "2190619"
  },
  {
    "text": "see what happens when darker does it and it comes up with an a UID is unset so if a container breaks out of docker and",
    "start": "2190619",
    "end": "2197279"
  },
  {
    "text": "affects the system you have no idea who created the container to do that where it's pod managed so it's just a way to",
    "start": "2197279",
    "end": "2202980"
  },
  {
    "text": "think about what's happening versus a client-server model versus a fork and exec model let's go next so other",
    "start": "2202980",
    "end": "2210180"
  },
  {
    "start": "2209000",
    "end": "2295000"
  },
  {
    "text": "features so containers if you've ever seen me talk about containers they always talk about all these security",
    "start": "2210180",
    "end": "2215940"
  },
  {
    "text": "features that are involved in containers and a lot of it's like me waving at hands and said Dan Walsh said this stuff",
    "start": "2215940",
    "end": "2221039"
  },
  {
    "text": "happens so we added to Padma and top the ability to actually reveal what's going on inside the container and the base of",
    "start": "2221039",
    "end": "2227430"
  },
  {
    "text": "the security features so the first one is we now have a kid in an age pit so kid tells you is a pit of the",
    "start": "2227430",
    "end": "2233400"
  },
  {
    "text": "container and then h p-- it tells you the process of the system so the next one we're gonna show is actually showing",
    "start": "2233400",
    "end": "2238890"
  },
  {
    "text": "you the SELinux label so this talk is showing you all the process of what SELinux labels associated this one's",
    "start": "2238890",
    "end": "2244200"
  },
  {
    "text": "showing you asset cop tells you whether or not sec comp is turned on and not in the system and the last one remember",
    "start": "2244200",
    "end": "2249480"
  },
  {
    "text": "mono was talking about capabilities so linux capabilities the ability to break root into multiple different you know",
    "start": "2249480",
    "end": "2255810"
  },
  {
    "text": "the power of root down it's different things so we actually go with because we're trying to modify you know mimic",
    "start": "2255810",
    "end": "2262080"
  },
  {
    "text": "what docker does this is the list of capabilities they did so if you saw in his presentation there's about eight capabilities but when I'm playing with",
    "start": "2262080",
    "end": "2268770"
  },
  {
    "text": "containers I actually have a lot more so for instance I have make node because I might want to do a build I might want to",
    "start": "2268770",
    "end": "2274170"
  },
  {
    "text": "create device notes I have as net raw write because I might want to ping and I",
    "start": "2274170",
    "end": "2281340"
  },
  {
    "text": "might not have that K that just calls this control set so there's a bunch of these things that dot yeah I have auto",
    "start": "2281340",
    "end": "2286590"
  },
  {
    "text": "write I don't know why Auto writes on at all but anyways that's the list of capabilities that no one knows they're hard-coded into the dock a demon right",
    "start": "2286590",
    "end": "2292950"
  },
  {
    "text": "so this basically shows you what's going on so quad Mian stands for pods pod",
    "start": "2292950",
    "end": "2298859"
  },
  {
    "start": "2295000",
    "end": "2343000"
  },
  {
    "text": "manager though pod is a concept from analytics from kubernetes that basically allows you to run one or more containers",
    "start": "2298859",
    "end": "2305040"
  },
  {
    "text": "inside of right inside of a pot or a group of basically the group your containers together inside the same",
    "start": "2305040",
    "end": "2311550"
  },
  {
    "text": "namespace so pod man actually manages not only containers but also pots so",
    "start": "2311550",
    "end": "2316770"
  },
  {
    "text": "here we are we just created a new pod called pod test and we're going to create two containers inside of it so we",
    "start": "2316770",
    "end": "2322890"
  },
  {
    "text": "joined the two containers and you can see that there's no containers running on my system right now so I'm gonna actually start the pod test and boom two",
    "start": "2322890",
    "end": "2330180"
  },
  {
    "text": "containers Ronnie so basically we're showing that containers are tied to the pod now and we can start to play around with pots",
    "start": "2330180",
    "end": "2335850"
  },
  {
    "text": "play around with the concept of pods so he's gonna stop the pods and now we should see no pods running inside like a",
    "start": "2335850",
    "end": "2342390"
  },
  {
    "text": "container no clods left and that's the end of the demo and I think we're just a",
    "start": "2342390",
    "end": "2349020"
  },
  {
    "start": "2343000",
    "end": "2489000"
  },
  {
    "text": "we'll take a few questions I think we're over time anybody any questions yes",
    "start": "2349020",
    "end": "2356510"
  },
  {
    "text": "is it possible to deny write and execute on memory",
    "start": "2360160",
    "end": "2366670"
  },
  {
    "text": "yeah I don't know of any way in the carnal to do that yeah yes what's the",
    "start": "2375420",
    "end": "2389140"
  },
  {
    "text": "difference between XFS and ext4 and Ubuntu and fedora and it's just",
    "start": "2389140",
    "end": "2395440"
  },
  {
    "text": "different ways of doing the same thing right that doesn't need to be only one way to rank containers on the kubernetes",
    "start": "2395440",
    "end": "2401560"
  },
  {
    "text": "so they're competing projects so we actually believe that cryo is better",
    "start": "2401560",
    "end": "2406690"
  },
  {
    "text": "they believe that container D is better anybody had any other questions yes",
    "start": "2406690",
    "end": "2414660"
  },
  {
    "text": "so Godin runtime container is a another competing project I don't think it runs on the kubernetes yet that's part of",
    "start": "2425300",
    "end": "2431780"
  },
  {
    "text": "pivotal so that's a different container runtime altogether I don't know if they support OCI yet or not last question yes",
    "start": "2431780",
    "end": "2440290"
  },
  {
    "text": "yeah",
    "start": "2441100",
    "end": "2444100"
  },
  {
    "text": "you can you can run builder as non-root so yes you can run build up inside of",
    "start": "2449980",
    "end": "2456680"
  },
  {
    "text": "you use the namespace inside of kubernetes yes so I could writing a bunch of containers doing builders",
    "start": "2456680",
    "end": "2462170"
  },
  {
    "text": "inside of kubernetes yeah can I safely",
    "start": "2462170",
    "end": "2467960"
  },
  {
    "text": "at alias start yes I can alias dr. equals pod man and I can do a pod man bill a docker build and it will do a pod",
    "start": "2467960",
    "end": "2473960"
  },
  {
    "text": "man build so builder is actually built into pod man for the pod man builds",
    "start": "2473960",
    "end": "2480410"
  },
  {
    "text": "capability yeah okay thank you for coming guys [Applause]",
    "start": "2480410",
    "end": "2491049"
  }
]