[
  {
    "text": "yeah i think first of all the thing to say is that i am absolutely shocked uh and grateful as well if the number of",
    "start": "80",
    "end": "5279"
  },
  {
    "text": "people that showed up to this is literally the last session of kubecon eu so thank you very much for showing you",
    "start": "5279",
    "end": "11360"
  },
  {
    "text": "must not have a plane that's leaving soon you're probably leaving after one of our speakers who has a plane at seven",
    "start": "11360",
    "end": "16800"
  },
  {
    "text": "so let's get this thing going and get get out of here all right so this is the introduction and deep dive session for the cross",
    "start": "16800",
    "end": "22640"
  },
  {
    "text": "plane project we are all maintainers and contributors on the project uh we're going to share some of our knowledge and experience",
    "start": "22640",
    "end": "28480"
  },
  {
    "text": "with you so first of all what is crossplane just a quick introduction to it you can think",
    "start": "28480",
    "end": "33600"
  },
  {
    "text": "of crossplane as being a framework that you can use for building your own cloud native control plane or",
    "start": "33600",
    "end": "39760"
  },
  {
    "text": "platform you can do it declaratively where you don't have to write any code to make this happen",
    "start": "39760",
    "end": "45120"
  },
  {
    "text": "but then let's also take a step back and say what is a control plane so a lot of good examples of control planes are",
    "start": "45120",
    "end": "50879"
  },
  {
    "text": "things like aws or gcp they've been using control planes for years if you ask for a cloud resource in in their",
    "start": "50879",
    "end": "56960"
  },
  {
    "text": "backend services they've got a control plane running to do all the orchestration of the machines the storage compute etc to provision and",
    "start": "56960",
    "end": "63280"
  },
  {
    "text": "dynamically give you services so that's a control plane kubernetes obviously a control plane as well orchestrating your",
    "start": "63280",
    "end": "69760"
  },
  {
    "text": "applications containers pods etc but there's a lot more resources than that right uh so crossplane is something",
    "start": "69760",
    "end": "76400"
  },
  {
    "text": "that will help you build your own control plane but with all sorts of resources beyond just you know containers and applications databases",
    "start": "76400",
    "end": "82400"
  },
  {
    "text": "caches buckets all sorts of things uh it allows you also to put your own opinion",
    "start": "82400",
    "end": "88000"
  },
  {
    "text": "into that control plan we're going to get into a lot of details on that as this is just the first slide but let's think about crossblade as two points of",
    "start": "88000",
    "end": "95119"
  },
  {
    "text": "extension so when you're building your control plane on the back end there's all sorts of ways with providers you can",
    "start": "95119",
    "end": "100400"
  },
  {
    "text": "extend the control plane and basically anything with an api you can now manage with crossplane you know all the cloud",
    "start": "100400",
    "end": "106640"
  },
  {
    "text": "providers on premises services etc then on the front-end side you know you can aggregate these",
    "start": "106640",
    "end": "111920"
  },
  {
    "text": "resources together and declaratively say hey this is an api or a",
    "start": "111920",
    "end": "117360"
  },
  {
    "text": "you know abstraction that i want to give to my developers to be able to access my control plane so we'll go into the more",
    "start": "117360",
    "end": "122799"
  },
  {
    "text": "details about the back end and front end extensions of crossplane as we get into more slides here so right this is part",
    "start": "122799",
    "end": "129200"
  },
  {
    "text": "of the maintainer track this is uh you know it's a cncf project we originally donated the crossplane project to the",
    "start": "129200",
    "end": "135599"
  },
  {
    "text": "cncf back in 2020 and then we moved to the incubation milestone late 2021. so",
    "start": "135599",
    "end": "142080"
  },
  {
    "text": "you know it's a neutral place for multiple vendors companies organizations individuals contributors etc to come",
    "start": "142080",
    "end": "148400"
  },
  {
    "text": "together and start enabling and building control plans together uh so it is a community and you know",
    "start": "148400",
    "end": "153440"
  },
  {
    "text": "that we're glad you all are here and we want you to be part of the project as well uh we're not going to go into these numbers here but the project is growing",
    "start": "153440",
    "end": "159200"
  },
  {
    "text": "right like we have this many people here at like 4 55 on the last day on a friday so you know we're growing and there's",
    "start": "159200",
    "end": "165040"
  },
  {
    "text": "lots of ways to get involved in the project to continue being a part of it so i'm going to hand it over now to",
    "start": "165040",
    "end": "170480"
  },
  {
    "text": "steven to start with some of the details about managed resources thank you jared is my microphone working",
    "start": "170480",
    "end": "177680"
  },
  {
    "text": "woo all right thank you so we're going to talk about probably the fundamental concept of cross plane if you understand",
    "start": "177680",
    "end": "182879"
  },
  {
    "text": "this it's really going to help you understand pretty much everything else about crossplane and this is something called a managed resource right so what",
    "start": "182879",
    "end": "188800"
  },
  {
    "text": "a managed resource is it's a kubernetes version of something that's external to the cluster it could be anything in our",
    "start": "188800",
    "end": "194720"
  },
  {
    "text": "demos today we're going to talk about cloud resources but if you've been to some of the other talks people been talking about managing things like ships",
    "start": "194720",
    "end": "200480"
  },
  {
    "text": "and trucks basically anything with an api can be managed by crossplane so let's talk about examples of this",
    "start": "200480",
    "end": "207519"
  },
  {
    "text": "in the case of aws what kind of things you want to configure there's hundreds of things you could configure on each of the cloud providers in the case of aws",
    "start": "207519",
    "end": "214720"
  },
  {
    "text": "it would be things like certificates uh queues uh eks clusters uh databases and",
    "start": "214720",
    "end": "219920"
  },
  {
    "text": "networking right so what crossplane you know our goal is with this project is with all these",
    "start": "219920",
    "end": "225760"
  },
  {
    "text": "resources that are available in aws can we manage these using kubernetes and using all the things um you know all the",
    "start": "225760",
    "end": "231599"
  },
  {
    "text": "tooling that you have the git ops tooling all the controls you have around it um you know things like validation",
    "start": "231599",
    "end": "236959"
  },
  {
    "text": "web hooks so what does this look like in a kubernetes context right so we're representing external objects in",
    "start": "236959",
    "end": "243360"
  },
  {
    "text": "kubernetes so that means that we have to translate things that are in a remote state into kubernetes so the first thing",
    "start": "243360",
    "end": "248720"
  },
  {
    "text": "i want to show here is um the yaml that we use in crossplane is basically 100",
    "start": "248720",
    "end": "253760"
  },
  {
    "text": "native kubernetes right so things like groups versions and kinds are supported uh we use the same kind of api",
    "start": "253760",
    "end": "259440"
  },
  {
    "text": "versioning that's used in kubernetes it's all standard and then you'll notice here that every single kind represents",
    "start": "259440",
    "end": "264479"
  },
  {
    "text": "one resource on the remote cluster in this case like in the case of aws some of the providers have over 700 of",
    "start": "264479",
    "end": "271120"
  },
  {
    "text": "these that they install and then we have metadata support right so every object like in kubernetes is",
    "start": "271120",
    "end": "276160"
  },
  {
    "text": "named um you could also add labels and annotations to this so like if you want to label that this resource is owned by your dev team you could just add it",
    "start": "276160",
    "end": "282720"
  },
  {
    "text": "there and um you can manage it however you manage labels in kubernetes and then finally we have the spec",
    "start": "282720",
    "end": "288400"
  },
  {
    "text": "the spec is the desired state this is what we want the remote object the state to be and we have a special stanza",
    "start": "288400",
    "end": "295120"
  },
  {
    "text": "called for provider so this is what we actually send to the remote api server and",
    "start": "295120",
    "end": "301520"
  },
  {
    "text": "this spec in a managed resource is high fidelity right what this means is that if the cloud provider has a hundred",
    "start": "301520",
    "end": "307199"
  },
  {
    "text": "different things that you can configure crossplane will have a hundred different settings here that's the goal of a",
    "start": "307199",
    "end": "312320"
  },
  {
    "text": "managed resource to be as high fidelity as possible to the remote resource",
    "start": "312320",
    "end": "318320"
  },
  {
    "text": "how does this work well when you apply a yaml to your cluster there's two things that get installed we install a cross",
    "start": "318800",
    "end": "324880"
  },
  {
    "text": "plane provider one is all those crds that we talked about and that could be dozens or hundreds of crds so those get",
    "start": "324880",
    "end": "330560"
  },
  {
    "text": "installed in the api server using the crd mechanism starts watching for changes in those and then we install a",
    "start": "330560",
    "end": "335919"
  },
  {
    "text": "pod which is a controller that actually manages and knows how to talk to a back end api server so what happens is this",
    "start": "335919",
    "end": "342400"
  },
  {
    "text": "is running all the time and it's watching for any creates updates or deletes on the api server um so when you",
    "start": "342400",
    "end": "347759"
  },
  {
    "text": "apply something to the cluster it's going to say i know i'm looking to manage rds kinds so when this gets applied any change update or",
    "start": "347759",
    "end": "354240"
  },
  {
    "text": "delete we'll go to this and then this will immediately start talking to the aws api now there's two things that a",
    "start": "354240",
    "end": "359280"
  },
  {
    "text": "controller does first it asks does this resource exist in the cloud and if it doesn't it's going to go do a create if",
    "start": "359280",
    "end": "366479"
  },
  {
    "text": "the resource exists already it's going to create a calculated difference and then it's going to go and change it",
    "start": "366479",
    "end": "372319"
  },
  {
    "text": "the controller runs continuously so this is a declarative state so anything you want here crossplane will attempt to get",
    "start": "372319",
    "end": "377840"
  },
  {
    "text": "this into the remote state",
    "start": "377840",
    "end": "381639"
  },
  {
    "text": "so that's the spec that's the desired state now we want to communicate there's a two way communication with remote apis so",
    "start": "383360",
    "end": "390400"
  },
  {
    "text": "what comes back is the status right and this is the at provider ford provider goes out at provider comes back and in",
    "start": "390400",
    "end": "396479"
  },
  {
    "text": "this case when we create a bucket um aws will give us an arm and then there's um the other thing that",
    "start": "396479",
    "end": "402560"
  },
  {
    "text": "comes back is events right like providers don't generate standard out or anything like that they generate events that you could use whatever venting",
    "start": "402560",
    "end": "408639"
  },
  {
    "text": "system so the kind of events you'll see you'll see errors you'll see inability to authenticate you'll see creates updates or deletes right so if you",
    "start": "408639",
    "end": "415280"
  },
  {
    "text": "collect your events this is how you can monitor things and i",
    "start": "415280",
    "end": "420840"
  },
  {
    "text": "think that's a very quick update and so i'd like to do a very",
    "start": "420840",
    "end": "426639"
  },
  {
    "text": "um a demo of a managed resource just to show you what this looks like in practice",
    "start": "426639",
    "end": "432160"
  },
  {
    "text": "so what i have here is just um let's see here",
    "start": "433199",
    "end": "439280"
  },
  {
    "text": "so i'm going to show you a bucket and you can see here again this is very simple there's hundreds of things we",
    "start": "440160",
    "end": "445360"
  },
  {
    "text": "could set but this is a minimum and you can see here we have a region selected a name you know we talked about groups",
    "start": "445360",
    "end": "451199"
  },
  {
    "text": "versions and kinds and we're going to create a bucket in eus 1 with private acl and we're going to add a tag to it",
    "start": "451199",
    "end": "458800"
  },
  {
    "text": "excuse me",
    "start": "459440",
    "end": "462759"
  },
  {
    "text": "so this is how you create objects in cross plane right like you're not running a script or anything like this you're just applying a desired state to",
    "start": "472319",
    "end": "477599"
  },
  {
    "text": "the cluster we've uh created it we're going to go and now we can just get this right",
    "start": "477599",
    "end": "484319"
  },
  {
    "text": "so immediately see it hasn't done anything yet so we can watch this right so what's happening now is that we're",
    "start": "484319",
    "end": "489919"
  },
  {
    "text": "just you know watching what's happening to this resource and crossplane is asynchronous right so it runs as all controllers it runs in a loop the",
    "start": "489919",
    "end": "496240"
  },
  {
    "text": "controller saw that something was requested so now what it's doing is it's syncing it's saying can i communicate with the remote api",
    "start": "496240",
    "end": "502400"
  },
  {
    "text": "um and then when it gets to be ready in a few seconds and now it's ready right so now the bucket has been created so",
    "start": "502400",
    "end": "507840"
  },
  {
    "text": "you're not like running a script or anything you just say hey create me a bucket and eventually the bucket will come to a ready state now if you're",
    "start": "507840",
    "end": "512959"
  },
  {
    "text": "doing things like creating a vpc or a subnet things that depend on that will not become ready until this becomes ready so",
    "start": "512959",
    "end": "519760"
  },
  {
    "text": "there's kind of like a internal dependency mechanism within cross plane but it's a little more decoupled",
    "start": "519760",
    "end": "526560"
  },
  {
    "text": "so we've created our resource and now what we could do",
    "start": "526560",
    "end": "530720"
  },
  {
    "text": "we can see what's going on there so we've just created this resource and you can see here we have a bunch of",
    "start": "531680",
    "end": "537600"
  },
  {
    "text": "conditions right we got our at provider that i talked about and then we have conditions right so all the things that came back",
    "start": "537600",
    "end": "543360"
  },
  {
    "text": "um so in cross plane you're not looking for like the output of a shell script you're looking at",
    "start": "543360",
    "end": "548720"
  },
  {
    "text": "the conditions and the other thing that's important to note is probably one of the more important con",
    "start": "548720",
    "end": "554080"
  },
  {
    "text": "is the concept of an external name right so um this is the way that cross plane can",
    "start": "554080",
    "end": "559680"
  },
  {
    "text": "match a kubernetes object to remote right if you don't have this crossplane thinks the object doesn't exist so in",
    "start": "559680",
    "end": "564959"
  },
  {
    "text": "terms of like backup or restore or something like that this is the one piece of data that crossplane uses to reconstruct in kubernetes what the",
    "start": "564959",
    "end": "571600"
  },
  {
    "text": "remote state is so this is and i think chris talks about this a little bit in this controller writing but this is really an important concept",
    "start": "571600",
    "end": "578399"
  },
  {
    "text": "in cross plane this is kind of the link between remote and on the cluster",
    "start": "578399",
    "end": "585200"
  },
  {
    "text": "and finally here",
    "start": "585200",
    "end": "591680"
  },
  {
    "text": "um sorry there's",
    "start": "591680",
    "end": "596680"
  },
  {
    "text": "sorry it's weird to type on this keyboard um and then yeah finally here you see the um",
    "start": "604959",
    "end": "610560"
  },
  {
    "text": "you see the events that are being created right like that we could create a brand new event here so this is how you know that it's been",
    "start": "610560",
    "end": "615680"
  },
  {
    "text": "um so i think in terms of my time that's um",
    "start": "615680",
    "end": "622320"
  },
  {
    "text": "yeah so yeah let's delete this bucket and then i'll move over to yuri he's going to talk about composition",
    "start": "622320",
    "end": "629399"
  },
  {
    "text": "thanks david can you folks hear me all good thank you so hi i'm yuri and i truly",
    "start": "633360",
    "end": "639600"
  },
  {
    "text": "believe that cross playing rocks sorry i always dreamed to say that from stage so",
    "start": "639600",
    "end": "647160"
  },
  {
    "text": "thank you [Applause] [Laughter] [Applause]",
    "start": "647839",
    "end": "654959"
  },
  {
    "text": "yeah just a quick one",
    "start": "655040",
    "end": "659160"
  },
  {
    "text": "okay",
    "start": "663200",
    "end": "665519"
  },
  {
    "text": "it's apparently a full screen issue yeah sorry for that small glitch",
    "start": "668480",
    "end": "675519"
  },
  {
    "text": "yeah so uh steven uh demonstrated the core ability of uh crossplane to be able",
    "start": "675519",
    "end": "681360"
  },
  {
    "text": "to describe any cloud resource kubernetes way so you inherit uh automated configuration drift uh",
    "start": "681360",
    "end": "688000"
  },
  {
    "text": "reconciliation loop and all that kubernetes core kubernetes powers but uh so it's already very powerful but cross",
    "start": "688000",
    "end": "694160"
  },
  {
    "text": "plane has more so crossplane uh provides you this ability to uh",
    "start": "694160",
    "end": "699519"
  },
  {
    "text": "just create your custom platform api is it which is very specific to your use case to your company to your teams",
    "start": "699519",
    "end": "705680"
  },
  {
    "text": "and with the help of a composition and composite resource definition you can implement all of this custom logic uh a",
    "start": "705680",
    "end": "712959"
  },
  {
    "text": "declarative way without any coding no need to write any kind of golden code",
    "start": "712959",
    "end": "719519"
  },
  {
    "text": "for controller or any kind of code everything is declarative so this is a simple illustration of uh",
    "start": "719519",
    "end": "727519"
  },
  {
    "text": "of the following concept so here we we define our custom cluster api so it's",
    "start": "727519",
    "end": "734079"
  },
  {
    "text": "purely coincidence it's not copy project it's just our custom cluster api which we implement uh to create a",
    "start": "734079",
    "end": "741040"
  },
  {
    "text": "managed services you know manage comprehensive service with associated",
    "start": "741040",
    "end": "747360"
  },
  {
    "text": "uh cloud cloud providers so we have a two composition in that case one is a ws and",
    "start": "747360",
    "end": "753120"
  },
  {
    "text": "another gcp and these compositions are actually like a collection of dependent resources which can",
    "start": "753120",
    "end": "758639"
  },
  {
    "text": "create your very custom clusters from manage tks down to helm chart and",
    "start": "758639",
    "end": "764720"
  },
  {
    "text": "services like primitives on top and same for gke the core concept",
    "start": "764720",
    "end": "769760"
  },
  {
    "text": "behind that is that you provide a stable api for your consumers like platform consumers frequently it's application",
    "start": "769760",
    "end": "776000"
  },
  {
    "text": "developers in your company and they are not exposed to any complexity of underlying infrastructure",
    "start": "776000",
    "end": "783839"
  },
  {
    "text": "so how actually we can do that so we have a special",
    "start": "783839",
    "end": "789839"
  },
  {
    "text": "client composite resource definition so it's called xrd so it's very similar to kubernetes",
    "start": "789839",
    "end": "796240"
  },
  {
    "text": "standard customers or definition but it extends as kubernetes resource model we can define a custom api group which",
    "start": "796240",
    "end": "803519"
  },
  {
    "text": "is very specific to a company and describes a desired api visa standard open ipa v3 schema so",
    "start": "803519",
    "end": "811519"
  },
  {
    "text": "pretty standard stuff very very similar to crd so how to actually implement the logic",
    "start": "811519",
    "end": "817040"
  },
  {
    "text": "behind this uh xrd definition so again you don't need to",
    "start": "817040",
    "end": "822160"
  },
  {
    "text": "cut anything up you can use a special kind composition",
    "start": "822160",
    "end": "827680"
  },
  {
    "text": "and which would satisfy the associated composite type and",
    "start": "827680",
    "end": "833360"
  },
  {
    "text": "you will list you will create a list of managed resources that this composition will",
    "start": "833360",
    "end": "840000"
  },
  {
    "text": "manage right so you can uh if you can create analogy from a",
    "start": "840000",
    "end": "846240"
  },
  {
    "text": "terraform world it will be like kind of terrifying model or as like a server side helm so everything is server side",
    "start": "846240",
    "end": "852000"
  },
  {
    "text": "there is no client job here at all so this is like a list of",
    "start": "852000",
    "end": "857839"
  },
  {
    "text": "static research right how so how to make it more dynamic so we have a concept of patches uh so we we can",
    "start": "857839",
    "end": "864959"
  },
  {
    "text": "propagate the data from uh composite resource uh which we",
    "start": "864959",
    "end": "871440"
  },
  {
    "text": "define uh create instantiate out of a compositor sort of definition and associated claim",
    "start": "871440",
    "end": "877680"
  },
  {
    "text": "and we can propagate this data down to a manager's source that is composed by the",
    "start": "877680",
    "end": "883440"
  },
  {
    "text": "composition right so you can expose only required uh",
    "start": "883440",
    "end": "889680"
  },
  {
    "text": "only required required api fields and you name this api api fields as you like",
    "start": "889680",
    "end": "895440"
  },
  {
    "text": "and in addition to that we provide like runtime transforms",
    "start": "895440",
    "end": "902399"
  },
  {
    "text": "for uh as a form of patch in this specific case we have like",
    "start": "902480",
    "end": "908399"
  },
  {
    "text": "we obstructing the instance types and some cloud provider and we can expose to",
    "start": "908399",
    "end": "913680"
  },
  {
    "text": "our teams only like internal namings like small medium large and the actual meaning of the small medium latch can be",
    "start": "913680",
    "end": "919839"
  },
  {
    "text": "defined by platform builders so we can actually",
    "start": "919839",
    "end": "927360"
  },
  {
    "text": "make a live demo of this stuff yeah",
    "start": "927360",
    "end": "933279"
  },
  {
    "text": "first of all what we actually trying to achieve right we want to expose",
    "start": "933279",
    "end": "939759"
  },
  {
    "text": "this minimalistic api to our customers we want to hide in",
    "start": "939759",
    "end": "945860"
  },
  {
    "text": "[Music] a complexity of underlying resource so if we just for",
    "start": "945860",
    "end": "953040"
  },
  {
    "text": "the sake of quick comparison right so that's a miniature source of rds instance in aws",
    "start": "953040",
    "end": "960399"
  },
  {
    "text": "and it's just some possible values there actually i don't know",
    "start": "960399",
    "end": "965680"
  },
  {
    "text": "hundreds of them uh for to configure the rda specific rds instance and we want to",
    "start": "965680",
    "end": "971519"
  },
  {
    "text": "encapsulate uh platform builder logic and parameters security all that stuff",
    "start": "971519",
    "end": "976720"
  },
  {
    "text": "within a composition and exposed to our developers only required parameters like in this case it's just",
    "start": "976720",
    "end": "984240"
  },
  {
    "text": "just the size of the database and a password secret to pick up from so that's the goal so how to implement that",
    "start": "985199",
    "end": "991680"
  },
  {
    "text": "so exactly as i mentioned in slide first we",
    "start": "991680",
    "end": "998639"
  },
  {
    "text": "want to describe an xrd a complex resource definition right so again open api visor",
    "start": "998639",
    "end": "1005279"
  },
  {
    "text": "schema it",
    "start": "1005279",
    "end": "1009000"
  },
  {
    "text": "it describes the required parameters of storage size and a referenced password secret name so",
    "start": "1010560",
    "end": "1017440"
  },
  {
    "text": "pretty straightforward so the only thing we should do is just",
    "start": "1017440",
    "end": "1024400"
  },
  {
    "text": "instantiated so we defined uh this custom platform api",
    "start": "1024400",
    "end": "1030400"
  },
  {
    "text": "right now what we should do next is actually to implement it",
    "start": "1030400",
    "end": "1035600"
  },
  {
    "text": "and we should we'll implement it in the form of associated composition so there",
    "start": "1035600",
    "end": "1040880"
  },
  {
    "text": "is a composition that satisfies uh this",
    "start": "1040880",
    "end": "1046880"
  },
  {
    "text": "previously created xrd right postgresql instance and it couple",
    "start": "1047039",
    "end": "1052880"
  },
  {
    "text": "composes a couple of resources the main one like rds instance itself and associated param custom parameter group",
    "start": "1052880",
    "end": "1059600"
  },
  {
    "text": "so here we have like just a couple of resource for demonstration but it can",
    "start": "1059600",
    "end": "1064640"
  },
  {
    "text": "provide you a picture how we can compose arbitrary amount of resources in the dependent one and we can create a",
    "start": "1064640",
    "end": "1071360"
  },
  {
    "text": "composition of different complexity and yeah we have again we have a purchase and",
    "start": "1071360",
    "end": "1078840"
  },
  {
    "text": "uh with which we can propagate the required data from uh claim instantiation so as you",
    "start": "1080000",
    "end": "1086880"
  },
  {
    "text": "can see uh here we propagating the size",
    "start": "1086880",
    "end": "1094679"
  },
  {
    "text": "uh with this from field pass to field paths of done of composed managed resource and",
    "start": "1095120",
    "end": "1101919"
  },
  {
    "text": "everything from the associated claim will be uh propagated",
    "start": "1101919",
    "end": "1107120"
  },
  {
    "text": "to the resources that are composed and one extremely important difference so a",
    "start": "1107120",
    "end": "1112320"
  },
  {
    "text": "composite resource is a cluster scoped one and a claim is almost the same but",
    "start": "1112320",
    "end": "1117760"
  },
  {
    "text": "it's a namespace scope to one resource which is designed to be consumed by",
    "start": "1117760",
    "end": "1124080"
  },
  {
    "text": "platform consumers and xrd is a scope of a platform builders so how we actually",
    "start": "1124080",
    "end": "1129840"
  },
  {
    "text": "now we are changing ahead and we are going to so we build our custom api we implemented in",
    "start": "1129840",
    "end": "1136320"
  },
  {
    "text": "the forum composition and we now can consume it as a platform as a application in",
    "start": "1136320",
    "end": "1142720"
  },
  {
    "text": "developers platform consumers right so we're just making uh we apply the claim",
    "start": "1142720",
    "end": "1151799"
  },
  {
    "text": "yeah so as you can see our claim is created it's our custom resource right our custom example or",
    "start": "1158400",
    "end": "1164559"
  },
  {
    "text": "database api group and a postgresql instance our custom obstructions that's exactly what",
    "start": "1164559",
    "end": "1170320"
  },
  {
    "text": "we want we have a sure shortcut get claims so we can see",
    "start": "1170320",
    "end": "1176640"
  },
  {
    "text": "the status you can obviously get describe any and a standard",
    "start": "1176640",
    "end": "1183679"
  },
  {
    "text": "standard api uh use any standard cube control commands over this resource",
    "start": "1183679",
    "end": "1190559"
  },
  {
    "text": "so as you can see [Music] this claim",
    "start": "1190559",
    "end": "1195840"
  },
  {
    "text": "is created so so we can use this",
    "start": "1195840",
    "end": "1201200"
  },
  {
    "text": "a full pass to it and see the status it's not yet ready is",
    "start": "1201200",
    "end": "1207120"
  },
  {
    "text": "a database takes some time so current status composite resource claim is waiting for",
    "start": "1207120",
    "end": "1213280"
  },
  {
    "text": "uh resource to become ready and we can get managed it's a standard cross plane",
    "start": "1213280",
    "end": "1220559"
  },
  {
    "text": "shortcut to get all the list of all managed resources that is uh uh current cross plane instances is",
    "start": "1220559",
    "end": "1227039"
  },
  {
    "text": "managing at the at the time so as you can see uh both composed managed resources were created so it's a",
    "start": "1227039",
    "end": "1234640"
  },
  {
    "text": "parameter group and rds instance itself and just for the sake of [Music]",
    "start": "1234640",
    "end": "1241200"
  },
  {
    "text": "end-to-end demonstration you can go to rds and double check the actual state",
    "start": "1241200",
    "end": "1247360"
  },
  {
    "text": "was it applied by crossplane and just refreshing the page now",
    "start": "1247360",
    "end": "1253600"
  },
  {
    "text": "yeah so we have a custom group it's visible but i'll go to database instances it's our cross plane deep dive",
    "start": "1253600",
    "end": "1261120"
  },
  {
    "text": "instance in creating stage that's why it's still waiting for for the database to be ready",
    "start": "1261120",
    "end": "1267520"
  },
  {
    "text": "and we can go to configuration and check",
    "start": "1267520",
    "end": "1272640"
  },
  {
    "text": "parameter groups yeah and so it is referencing a custom cross plane deep dive parameter group which was created",
    "start": "1272880",
    "end": "1280159"
  },
  {
    "text": "as a part of the composition so that's pretty much it for the demo",
    "start": "1280159",
    "end": "1286400"
  },
  {
    "text": "of a custom platform api and custom abstraction power and we can",
    "start": "1286400",
    "end": "1294159"
  },
  {
    "text": "proceed with the provider extension chris please change the stage and we",
    "start": "1294159",
    "end": "1299840"
  },
  {
    "text": "will do small magic of laptop laptop change",
    "start": "1299840",
    "end": "1305679"
  },
  {
    "text": "thank you",
    "start": "1305679",
    "end": "1308158"
  },
  {
    "text": "so microphone is working cool then hopefully also the beamer",
    "start": "1314720",
    "end": "1321360"
  },
  {
    "text": "okay so then let's talk about extending crossplan so as we said in the beginning",
    "start": "1327120",
    "end": "1332320"
  },
  {
    "text": "so crossbone is highly extensible and it's a framework to build uh universal cr control planes and there are both",
    "start": "1332320",
    "end": "1339600"
  },
  {
    "text": "sides so one is the back end side we call it providers and with the providers you can uh or you",
    "start": "1339600",
    "end": "1347520"
  },
  {
    "text": "in general can build providers and manage any anything or any api out of the world so you get crud operations for",
    "start": "1347520",
    "end": "1354799"
  },
  {
    "text": "cloud resources on premise and whatever you want um on the front-end perspective we call it",
    "start": "1354799",
    "end": "1360960"
  },
  {
    "text": "configurations so that means you can compose your resources from the providers together",
    "start": "1360960",
    "end": "1366080"
  },
  {
    "text": "um you can define your control plans declarative apis and abstractions like we see before",
    "start": "1366080",
    "end": "1372880"
  },
  {
    "text": "and this is at the end that what your deaf or your customers see and what i can consume from your control",
    "start": "1372880",
    "end": "1379919"
  },
  {
    "text": "plan and we also take care of the provider versions in general if",
    "start": "1379919",
    "end": "1385440"
  },
  {
    "text": "everything we have is available so let's have a look here at the",
    "start": "1385440",
    "end": "1390880"
  },
  {
    "text": "visualization in the middle of it we have our crossplane control plane running",
    "start": "1390880",
    "end": "1396960"
  },
  {
    "text": "we have on the bottom level the provider resources or the providers and the resources so thought about if you want",
    "start": "1396960",
    "end": "1403520"
  },
  {
    "text": "to create a kafka cluster for your customers and you have two cloud",
    "start": "1403520",
    "end": "1409520"
  },
  {
    "text": "providers available in that case aws and digitalocean and it doesn't matte it doesn't matter if the kafka cluster",
    "start": "1409520",
    "end": "1416960"
  },
  {
    "text": "is running on aws or digital ocean um as in creator of the infrastructure here",
    "start": "1416960",
    "end": "1422159"
  },
  {
    "text": "you can say okay aws we need the following version for digital ocean we need the following version and for kafka",
    "start": "1422159",
    "end": "1428000"
  },
  {
    "text": "we checks this if it's not available in your kubernetes cluster then we set it up for you and uh on top of it you have",
    "start": "1428000",
    "end": "1434720"
  },
  {
    "text": "all the configuration stuff so the composition compositions the uh the uh",
    "start": "1434720",
    "end": "1440480"
  },
  {
    "text": "representation uh what your app devs can consume in your control plane",
    "start": "1440480",
    "end": "1446559"
  },
  {
    "text": "um so let's talk a little bit about the ecosystem the ecosystem i think in the last months is growing and growing in",
    "start": "1446559",
    "end": "1453279"
  },
  {
    "text": "the community i think normally folks starting using the public cloud",
    "start": "1453279",
    "end": "1458640"
  },
  {
    "text": "providers so like aws google cloud azure digital ocean whatever and set up",
    "start": "1458640",
    "end": "1464559"
  },
  {
    "text": "for example kubernetes cluster and then you can thought about okay i need my kubernetes cluster if it's ready",
    "start": "1464559",
    "end": "1470640"
  },
  {
    "text": "and available hem charts um kubernetes manifests whatever and then",
    "start": "1470640",
    "end": "1475760"
  },
  {
    "text": "you start with the next providers and so you can get a lot of resources composed",
    "start": "1475760",
    "end": "1481279"
  },
  {
    "text": "from your control plan perspective and then you see a lot of guys uh starting using more and more so thought about",
    "start": "1481279",
    "end": "1487919"
  },
  {
    "text": "gitlab runners whatever then you also need um tokens what and you can",
    "start": "1487919",
    "end": "1494080"
  },
  {
    "text": "create it in the gitlab apis and then you can move it back to your cluster and yeah um as announcement i think today in",
    "start": "1494080",
    "end": "1502240"
  },
  {
    "text": "the ecosystem there's also now a provider available for uh ansible so you see for it's adopting more and more",
    "start": "1502240",
    "end": "1507840"
  },
  {
    "text": "stuff um in the ecosystem so um",
    "start": "1507840",
    "end": "1513520"
  },
  {
    "text": "let's talk about a little bit about the the internal stack how we build our pro virus in the platform",
    "start": "1513520",
    "end": "1519520"
  },
  {
    "text": "at the very bottom level we have kubernetes runtime so the runtime takes care of running our",
    "start": "1519520",
    "end": "1526400"
  },
  {
    "text": "controllers our docker containers and also things like ingress services",
    "start": "1526400",
    "end": "1531520"
  },
  {
    "text": "load balancer in front of the services and on top of it",
    "start": "1531520",
    "end": "1537440"
  },
  {
    "text": "if you're not aware of programming in kubernetes there's something like machinery so this is how the apis are",
    "start": "1537440",
    "end": "1544880"
  },
  {
    "text": "composed together in the cluster and a lot of other cool things around but the thing we need here is uh the",
    "start": "1544880",
    "end": "1551840"
  },
  {
    "text": "custom resource definitions so that means if you create custom types in your",
    "start": "1551840",
    "end": "1557440"
  },
  {
    "text": "cluster and you want to use it like real native kubernetes objects so thought about and subnet group for elastic cache",
    "start": "1557440",
    "end": "1564480"
  },
  {
    "text": "you can set it up then and it feels completely like kubernetes you can cube cuddle describe get delete",
    "start": "1564480",
    "end": "1571440"
  },
  {
    "text": "apply everything then the next layer is the controller runtime",
    "start": "1571440",
    "end": "1578799"
  },
  {
    "text": "so i think almost every kubernetes operators are using parts of the controller runtime",
    "start": "1578799",
    "end": "1585520"
  },
  {
    "text": "the controller runtime helps us in general for the reconsolation stuff in kubernetes",
    "start": "1585520",
    "end": "1591600"
  },
  {
    "text": "it helps also to watch for resources so if if someone changed",
    "start": "1591600",
    "end": "1597200"
  },
  {
    "text": "the resource in the cluster then it helps us to get or the the runtime knows what what",
    "start": "1597200",
    "end": "1603200"
  },
  {
    "text": "happened there um and on top of it there's the interesting thing from the community",
    "start": "1603200",
    "end": "1608960"
  },
  {
    "text": "here and uh this is cross-plane runtime so normally",
    "start": "1608960",
    "end": "1615279"
  },
  {
    "text": "a lot of things are built as operators for kubernetes but we build things in kubernetes for apis that we can manage",
    "start": "1615279",
    "end": "1623440"
  },
  {
    "text": "them so thought about everything we can manage an external api so create update",
    "start": "1623440",
    "end": "1629039"
  },
  {
    "text": "delete and um this is i would say like pre-configured",
    "start": "1629039",
    "end": "1635360"
  },
  {
    "text": "for you and you can thought about your custom logic so what",
    "start": "1635360",
    "end": "1640640"
  },
  {
    "text": "what do you need to do for for updating stuff etc and the rest is here",
    "start": "1640640",
    "end": "1646000"
  },
  {
    "text": "and the very cool part here is you can use your your tooling from your",
    "start": "1646000",
    "end": "1651679"
  },
  {
    "text": "kubernetes ecosystem so like ham customized flux ago cd whatever on top",
    "start": "1651679",
    "end": "1657760"
  },
  {
    "text": "of it and then you have your cloud infrastructure completely as kubernetes flows",
    "start": "1657760",
    "end": "1665440"
  },
  {
    "text": "so let's have a small demo how easy it is to implement a new resource in one of our providers",
    "start": "1665600",
    "end": "1673679"
  },
  {
    "text": "so i will change to my visual studio i think it's there okay",
    "start": "1673679",
    "end": "1680000"
  },
  {
    "text": "in general this is one provider here from crossplaying contribution repository it's provider jet aws",
    "start": "1680000",
    "end": "1686320"
  },
  {
    "text": "um let's have a short look i said to you we want to implement a custom type",
    "start": "1686320",
    "end": "1692080"
  },
  {
    "text": "subnet group for elastic so we open this and you see now a lot of",
    "start": "1692080",
    "end": "1697200"
  },
  {
    "text": "auto generated stuff so like the types from uh parameter groups replication",
    "start": "1697200",
    "end": "1702799"
  },
  {
    "text": "group clusters users in the elastic cache group and the specific api version and what",
    "start": "1702799",
    "end": "1708159"
  },
  {
    "text": "you want to do now is to go um implement the subnet group we can scroll",
    "start": "1708159",
    "end": "1713440"
  },
  {
    "text": "a little bit there's a config folder and in the config folder we have provider go this this one and as for reasons with",
    "start": "1713440",
    "end": "1721120"
  },
  {
    "text": "scaling issues with a lot of crds we need to enable or include",
    "start": "1721120",
    "end": "1727200"
  },
  {
    "text": "the resource for generation so we can do this here now so this is at the end",
    "start": "1727200",
    "end": "1732559"
  },
  {
    "text": "strings here for the resources and then we have configurations so config elastic configo",
    "start": "1732559",
    "end": "1741279"
  },
  {
    "text": "and what we see here is a configure function and what we can do now here is to add a",
    "start": "1741279",
    "end": "1747200"
  },
  {
    "text": "resource to the configurator so i prepared this so you can see now here",
    "start": "1747200",
    "end": "1752640"
  },
  {
    "text": "it's also avs elastic caches up in a group we specify now the",
    "start": "1752640",
    "end": "1758399"
  },
  {
    "text": "api version in the cluster so i pick it up from the other resources here",
    "start": "1758399",
    "end": "1764840"
  },
  {
    "text": "and steven talked about external name and we're using here name is identifier because",
    "start": "1764840",
    "end": "1770960"
  },
  {
    "text": "this is represented in the external api so let's save this and then it's very easy we have mac make script and steps",
    "start": "1770960",
    "end": "1778480"
  },
  {
    "text": "there and we make make generate and now the",
    "start": "1778480",
    "end": "1784399"
  },
  {
    "text": "resources are generated and it also looks for all the other generated stuff here and in a few seconds we can see",
    "start": "1784399",
    "end": "1791919"
  },
  {
    "text": "a new generated crd and we can apply it in the cluster i will show you this it takes a few seconds",
    "start": "1791919",
    "end": "1799440"
  },
  {
    "text": "i can scroll there we have here now a package folder and crds folder and they are all",
    "start": "1799440",
    "end": "1805279"
  },
  {
    "text": "crds inside so it's finished now you can see there was one green thing",
    "start": "1805279",
    "end": "1811440"
  },
  {
    "text": "and what we can see here now okay cool there's for elastic cache is upnet group",
    "start": "1811440",
    "end": "1816640"
  },
  {
    "text": "now available as a new crd we can apply this in my cluster so qfccn",
    "start": "1816640",
    "end": "1823279"
  },
  {
    "text": "apply [Music] the zubnet group",
    "start": "1823279",
    "end": "1829039"
  },
  {
    "text": "then the next thing we can do is to run the provider here locally because",
    "start": "1830559",
    "end": "1835760"
  },
  {
    "text": "it's now in my environment so we have also mac run and now the provider is starting up",
    "start": "1835760",
    "end": "1843200"
  },
  {
    "text": "looks for all the crds in the cluster and start managing them and also the stuff out of",
    "start": "1843200",
    "end": "1848840"
  },
  {
    "text": "it so clear keeps huge ctr get managed",
    "start": "1848840",
    "end": "1856559"
  },
  {
    "text": "so we pre-installed the vpc and two subnets because we need subnets for subnet groups for elastic cache",
    "start": "1856960",
    "end": "1863600"
  },
  {
    "text": "in aws you can see it everything available what we can do now cube ctl deployments f",
    "start": "1863600",
    "end": "1870240"
  },
  {
    "text": "examples subnet group i will show you the subnet group directly also set it up so you can see are using",
    "start": "1870240",
    "end": "1877679"
  },
  {
    "text": "now our new rcid we created so elastic cache here's here you can see the version the kind so it calls cubeco an",
    "start": "1877679",
    "end": "1885679"
  },
  {
    "text": "example in reaching us west one we have a description and the magic of references are used",
    "start": "1885679",
    "end": "1892320"
  },
  {
    "text": "here so we need from the subnets not only the metadata name we need the ideas",
    "start": "1892320",
    "end": "1898080"
  },
  {
    "text": "because aws api needs the ids to create this and let's have a look cube cdna get",
    "start": "1898080",
    "end": "1906799"
  },
  {
    "text": "we can have a look here so you see the new subnet group is",
    "start": "1906799",
    "end": "1914159"
  },
  {
    "text": "already choosing true i will go in the aws console and you can",
    "start": "1914159",
    "end": "1919679"
  },
  {
    "text": "see now here the kubecon example is there so we implemented a new resource in the controller",
    "start": "1919679",
    "end": "1926320"
  },
  {
    "text": "in the provider for aws",
    "start": "1926320",
    "end": "1930759"
  },
  {
    "text": "all right we'll uh finish the microphone on you yet all right so yeah we'll go ahead and",
    "start": "1938240",
    "end": "1943760"
  },
  {
    "text": "finish up this session here i think we just got one or two more minutes but as we said before you know this is a community project it was donated to the",
    "start": "1943760",
    "end": "1950000"
  },
  {
    "text": "cncf uh so you know there's lots of opportunities to get involved with the project uh you know if there's",
    "start": "1950000",
    "end": "1955360"
  },
  {
    "text": "functionality or things that's missing get involved you know open issues give us feedback contribute pull request etc",
    "start": "1955360",
    "end": "1962240"
  },
  {
    "text": "uh so a great place to start is crossplan.io that's the website there and then all these other links you can basically find from there but we're",
    "start": "1962240",
    "end": "1968559"
  },
  {
    "text": "super active on slack i mean you know we'd love to meet more of you all and talk to more of you all um so with that",
    "start": "1968559",
    "end": "1973919"
  },
  {
    "text": "we can go ahead on into i think maybe one question or so and then i'll be here i don't have a flight to catch so i'll",
    "start": "1973919",
    "end": "1979200"
  },
  {
    "text": "be here to continue talking afterwards if you want to come up uh yes you're right here on the first over here the second row",
    "start": "1979200",
    "end": "1985440"
  },
  {
    "text": "oh nice thank you so much brother",
    "start": "1985440",
    "end": "1989639"
  },
  {
    "text": "hello yeah my question is i'm i thought do",
    "start": "1991919",
    "end": "1997679"
  },
  {
    "text": "do we have any control on on the transition between one state and the other or it's up to the provider to",
    "start": "1997679",
    "end": "2003760"
  },
  {
    "text": "decide what to do because i can imagine for some resources you know it might be",
    "start": "2003760",
    "end": "2009519"
  },
  {
    "text": "important if i recreate or i modify like you know those kind of decisions",
    "start": "2009519",
    "end": "2015440"
  },
  {
    "text": "yeah yeah that i'll take that yeah so that's a good question um you know something that i think a pattern you'll",
    "start": "2015440",
    "end": "2020559"
  },
  {
    "text": "find in general is that you know much like other controllers uh in the crew radius control plane uh you know",
    "start": "2020559",
    "end": "2026799"
  },
  {
    "text": "everything running in crossplane is you know actively reconciling an eventual consistency is interesting there uh",
    "start": "2026799",
    "end": "2032159"
  },
  {
    "text": "interesting point there so you know when certain transitions can't necessarily happen yet uh you know the act of",
    "start": "2032159",
    "end": "2038080"
  },
  {
    "text": "reconciliation will continue to try to drive uh you know the desired state you have in the actual state to eventually",
    "start": "2038080",
    "end": "2044320"
  },
  {
    "text": "reach there if they're more complicated sequencing or you know other types of operations i think there's uh probably",
    "start": "2044320",
    "end": "2051440"
  },
  {
    "text": "some declarative ways to describe like this depends on this resource or you know we need this value from here and",
    "start": "2051440",
    "end": "2058079"
  },
  {
    "text": "once again eventual consistency and active reconciliation will make that happen over time so you don't need to intervene or you know be very specific",
    "start": "2058079",
    "end": "2064878"
  },
  {
    "text": "with it and then if there's further cases that in my experience over the years so far tend to be fairly minimal",
    "start": "2064879",
    "end": "2071118"
  },
  {
    "text": "uh then there is an upcoming feature that's going to be an alpha uh sometime soon where you can write some uh",
    "start": "2071119",
    "end": "2078480"
  },
  {
    "text": "let's say like imperative code to make some decisions and control the logic even further um you know right now you",
    "start": "2078480",
    "end": "2084158"
  },
  {
    "text": "can write the whole thing in code if you really wanted to to make sure exactly what you wanted to do is possible but then otherwise declarative stuff and",
    "start": "2084159",
    "end": "2091040"
  },
  {
    "text": "only when you need to pop into code then implement it in code awesome uh let's do a quick time check",
    "start": "2091040",
    "end": "2098160"
  },
  {
    "text": "yep so that is all the time but i'll be right here to keep talking if you want any more questions and thank you so much for",
    "start": "2098160",
    "end": "2103280"
  },
  {
    "text": "everybody for the whole kubecon week i'd say thanks [Applause]",
    "start": "2103280",
    "end": "2110550"
  }
]