[
  {
    "start": "0",
    "end": "39000"
  },
  {
    "text": "hello everyone good morning good",
    "start": "2240",
    "end": "3760"
  },
  {
    "text": "afternoon good evening wherever you are",
    "start": "3760",
    "end": "5920"
  },
  {
    "text": "i'm michael waving over from germany um",
    "start": "5920",
    "end": "9440"
  },
  {
    "text": "this time virtually um and today i want",
    "start": "9440",
    "end": "12240"
  },
  {
    "text": "to dive into practical kubernetes",
    "start": "12240",
    "end": "14559"
  },
  {
    "text": "monitoring with prometheus with you in",
    "start": "14559",
    "end": "17199"
  },
  {
    "text": "the next few minutes um before we",
    "start": "17199",
    "end": "19920"
  },
  {
    "text": "continue before we start um you can",
    "start": "19920",
    "end": "22560"
  },
  {
    "text": "reach out to me as dns michi on on",
    "start": "22560",
    "end": "25439"
  },
  {
    "text": "social media this is dns m-i-c-h-i",
    "start": "25439",
    "end": "29359"
  },
  {
    "text": "and without further ado let's jump into",
    "start": "29359",
    "end": "31599"
  },
  {
    "text": "action",
    "start": "31599",
    "end": "33440"
  },
  {
    "text": "when it comes to monitoring we probably",
    "start": "33440",
    "end": "35680"
  },
  {
    "text": "need to first start understand while we",
    "start": "35680",
    "end": "38399"
  },
  {
    "text": "need to change from the traditional host",
    "start": "38399",
    "end": "40960"
  },
  {
    "start": "39000",
    "end": "39000"
  },
  {
    "text": "and service objects monitoring we had",
    "start": "40960",
    "end": "44320"
  },
  {
    "text": "state-based monitoring with narios back",
    "start": "44320",
    "end": "46399"
  },
  {
    "text": "then",
    "start": "46399",
    "end": "47760"
  },
  {
    "text": "with more like",
    "start": "47760",
    "end": "49280"
  },
  {
    "text": "metric names tags volatile container",
    "start": "49280",
    "end": "51920"
  },
  {
    "text": "names coming up and other similarities",
    "start": "51920",
    "end": "54879"
  },
  {
    "text": "and needed to understand well",
    "start": "54879",
    "end": "56719"
  },
  {
    "text": "microservices and distributed systems",
    "start": "56719",
    "end": "58879"
  },
  {
    "text": "need a new approach in monitoring and",
    "start": "58879",
    "end": "61039"
  },
  {
    "text": "this is where we want to dive into today",
    "start": "61039",
    "end": "64080"
  },
  {
    "text": "like say okay we have kubernetes we have",
    "start": "64080",
    "end": "66479"
  },
  {
    "text": "containers microservices and how we can",
    "start": "66479",
    "end": "69760"
  },
  {
    "start": "69000",
    "end": "69000"
  },
  {
    "text": "we monitor that",
    "start": "69760",
    "end": "71439"
  },
  {
    "text": "changing",
    "start": "71439",
    "end": "72799"
  },
  {
    "text": "the ideas changing the knowledge is",
    "start": "72799",
    "end": "75280"
  },
  {
    "text": "oftentimes hard but here are a few tips",
    "start": "75280",
    "end": "77680"
  },
  {
    "text": "of saying well we have microservices in",
    "start": "77680",
    "end": "80159"
  },
  {
    "text": "containers which can run run anywhere in",
    "start": "80159",
    "end": "82799"
  },
  {
    "text": "the cluster so you actually don't know",
    "start": "82799",
    "end": "84400"
  },
  {
    "text": "the ip address you cannot really say",
    "start": "84400",
    "end": "86799"
  },
  {
    "text": "well it has a host name which i can ping",
    "start": "86799",
    "end": "89439"
  },
  {
    "text": "and say it's okay um the other thing is",
    "start": "89439",
    "end": "92400"
  },
  {
    "text": "a business process model doesn't work",
    "start": "92400",
    "end": "94479"
  },
  {
    "text": "with saying hey two out of three replica",
    "start": "94479",
    "end": "96960"
  },
  {
    "text": "sets",
    "start": "96960",
    "end": "97840"
  },
  {
    "text": "means that the state is still okay",
    "start": "97840",
    "end": "100000"
  },
  {
    "text": "because this is",
    "start": "100000",
    "end": "101360"
  },
  {
    "text": "different",
    "start": "101360",
    "end": "102399"
  },
  {
    "text": "similar to how kubernetes detects the",
    "start": "102399",
    "end": "105040"
  },
  {
    "text": "health state and might be repairing the",
    "start": "105040",
    "end": "107040"
  },
  {
    "text": "health state or even",
    "start": "107040",
    "end": "109520"
  },
  {
    "text": "add more resources to the pools in order",
    "start": "109520",
    "end": "112240"
  },
  {
    "text": "to ensure that the application is",
    "start": "112240",
    "end": "113840"
  },
  {
    "text": "running",
    "start": "113840",
    "end": "115040"
  },
  {
    "text": "because sometimes the service might",
    "start": "115040",
    "end": "116560"
  },
  {
    "text": "remain broken from the outside and in",
    "start": "116560",
    "end": "118799"
  },
  {
    "text": "the next second it it's already fixed",
    "start": "118799",
    "end": "120880"
  },
  {
    "text": "again and in a traditional monitoring",
    "start": "120880",
    "end": "123360"
  },
  {
    "text": "system this could be meant flapping",
    "start": "123360",
    "end": "125360"
  },
  {
    "text": "between states",
    "start": "125360",
    "end": "127200"
  },
  {
    "text": "and generate alerts which is not",
    "start": "127200",
    "end": "129440"
  },
  {
    "text": "something which is applicable to",
    "start": "129440",
    "end": "132160"
  },
  {
    "text": "kubernetes and microservices similar to",
    "start": "132160",
    "end": "135360"
  },
  {
    "text": "mapping states like like okay warning",
    "start": "135360",
    "end": "137760"
  },
  {
    "text": "critical",
    "start": "137760",
    "end": "139120"
  },
  {
    "text": "they don't necessarily fit kubernetes",
    "start": "139120",
    "end": "141200"
  },
  {
    "text": "objects and inside the cluster so forget",
    "start": "141200",
    "end": "143680"
  },
  {
    "text": "forget everything you know about this",
    "start": "143680",
    "end": "146080"
  },
  {
    "text": "when approaching kubernetes monitoring",
    "start": "146080",
    "end": "148400"
  },
  {
    "text": "and focus on metrics logs and and",
    "start": "148400",
    "end": "151200"
  },
  {
    "text": "everything else which is highly dynamic",
    "start": "151200",
    "end": "154080"
  },
  {
    "start": "154000",
    "end": "154000"
  },
  {
    "text": "now",
    "start": "154080",
    "end": "154959"
  },
  {
    "text": "where should we be starting our",
    "start": "154959",
    "end": "157200"
  },
  {
    "text": "monitoring journey should we be running",
    "start": "157200",
    "end": "159120"
  },
  {
    "text": "promises inside the cluster or outside",
    "start": "159120",
    "end": "161440"
  },
  {
    "text": "the cluster what what is needed because",
    "start": "161440",
    "end": "164000"
  },
  {
    "text": "well if the kubernetes cluster goes down",
    "start": "164000",
    "end": "166000"
  },
  {
    "text": "and kubernetes is running inside we",
    "start": "166000",
    "end": "168000"
  },
  {
    "text": "don't have any monitoring",
    "start": "168000",
    "end": "169840"
  },
  {
    "text": "the thing is",
    "start": "169840",
    "end": "171599"
  },
  {
    "text": "when we need to do external monitoring",
    "start": "171599",
    "end": "173680"
  },
  {
    "text": "we might be to need",
    "start": "173680",
    "end": "175680"
  },
  {
    "text": "we might need to open up the apis",
    "start": "175680",
    "end": "180159"
  },
  {
    "text": "if we don't have any side cars and there",
    "start": "180640",
    "end": "183360"
  },
  {
    "text": "is a potential for security problems",
    "start": "183360",
    "end": "185440"
  },
  {
    "text": "because we also expose certain route",
    "start": "185440",
    "end": "188159"
  },
  {
    "text": "access and",
    "start": "188159",
    "end": "189840"
  },
  {
    "text": "other things which are not really made",
    "start": "189840",
    "end": "192000"
  },
  {
    "text": "by design the design is to say hey i",
    "start": "192000",
    "end": "194640"
  },
  {
    "text": "want to run prometheus in the kubernetes",
    "start": "194640",
    "end": "196959"
  },
  {
    "text": "cluster use security policies which are",
    "start": "196959",
    "end": "200319"
  },
  {
    "text": "in there communicate with specific api",
    "start": "200319",
    "end": "204000"
  },
  {
    "text": "servers and other things and follow the",
    "start": "204000",
    "end": "206239"
  },
  {
    "text": "best practices with regards to",
    "start": "206239",
    "end": "208080"
  },
  {
    "text": "permissions",
    "start": "208080",
    "end": "210000"
  },
  {
    "text": "if i need external monitoring i can",
    "start": "210000",
    "end": "212400"
  },
  {
    "text": "install ping probes to monitor the",
    "start": "212400",
    "end": "214720"
  },
  {
    "text": "monitor which i need to do with a",
    "start": "214720",
    "end": "217760"
  },
  {
    "text": "traditional monitoring system already",
    "start": "217760",
    "end": "220400"
  },
  {
    "text": "now",
    "start": "220400",
    "end": "221280"
  },
  {
    "text": "if we dive into promisius and say hey",
    "start": "221280",
    "end": "223920"
  },
  {
    "text": "what is that what you probably know it",
    "start": "223920",
    "end": "227120"
  },
  {
    "text": "already but how can we approach this or",
    "start": "227120",
    "end": "229440"
  },
  {
    "start": "228000",
    "end": "228000"
  },
  {
    "text": "combine this with kubernetes monitoring",
    "start": "229440",
    "end": "231519"
  },
  {
    "text": "and getting the big bigger picture is",
    "start": "231519",
    "end": "233519"
  },
  {
    "text": "like prometheus crepes um",
    "start": "233519",
    "end": "237120"
  },
  {
    "text": "endpoints so have the http endpoints",
    "start": "237120",
    "end": "240720"
  },
  {
    "text": "and collects the metrics from there so",
    "start": "240720",
    "end": "243120"
  },
  {
    "text": "at a certain point we need to define the",
    "start": "243120",
    "end": "245680"
  },
  {
    "text": "promises targets and one thing uh which",
    "start": "245680",
    "end": "248239"
  },
  {
    "text": "comes into play with kubernetes is to",
    "start": "248239",
    "end": "250480"
  },
  {
    "text": "have service discovery which",
    "start": "250480",
    "end": "253680"
  },
  {
    "text": "promises um",
    "start": "253680",
    "end": "256079"
  },
  {
    "text": "discovers the targets in promisius uh in",
    "start": "256079",
    "end": "258959"
  },
  {
    "text": "in kubernetes sorry um using the file",
    "start": "258959",
    "end": "261519"
  },
  {
    "text": "service discovery for example and then",
    "start": "261519",
    "end": "264320"
  },
  {
    "text": "automatically adds the script targets to",
    "start": "264320",
    "end": "266560"
  },
  {
    "text": "the monitoring post them in a",
    "start": "266560",
    "end": "269040"
  },
  {
    "text": "in",
    "start": "269040",
    "end": "269840"
  },
  {
    "text": "in an interval and everything is fine",
    "start": "269840",
    "end": "272800"
  },
  {
    "text": "with all the collected data we of course",
    "start": "272800",
    "end": "274960"
  },
  {
    "text": "need to define alert rules for um",
    "start": "274960",
    "end": "277840"
  },
  {
    "text": "sending notifications and alerts and",
    "start": "277840",
    "end": "280240"
  },
  {
    "text": "also query the data with promql from the",
    "start": "280240",
    "end": "282880"
  },
  {
    "text": "promises web ui from grafana from",
    "start": "282880",
    "end": "285919"
  },
  {
    "text": "specific other api clients in that",
    "start": "285919",
    "end": "287840"
  },
  {
    "text": "regard",
    "start": "287840",
    "end": "289520"
  },
  {
    "text": "now when it comes to querying data keep",
    "start": "289520",
    "end": "292400"
  },
  {
    "text": "in mind prom ql",
    "start": "292400",
    "end": "294400"
  },
  {
    "text": "keep practicing that this because this",
    "start": "294400",
    "end": "296800"
  },
  {
    "text": "really comes in handy with um learning",
    "start": "296800",
    "end": "299680"
  },
  {
    "text": "kubernetes monitoring um specifically",
    "start": "299680",
    "end": "302479"
  },
  {
    "text": "knowing the basics and also using for",
    "start": "302479",
    "end": "305520"
  },
  {
    "text": "example prom lens as a",
    "start": "305520",
    "end": "307680"
  },
  {
    "text": "as a tool to test the quiz now the other",
    "start": "307680",
    "end": "310880"
  },
  {
    "start": "310000",
    "end": "310000"
  },
  {
    "text": "thing i mentioned is service discovery",
    "start": "310880",
    "end": "312639"
  },
  {
    "text": "and this is like",
    "start": "312639",
    "end": "314479"
  },
  {
    "text": "really using a dynamic list of targets",
    "start": "314479",
    "end": "317039"
  },
  {
    "text": "which prometheus can then add to the",
    "start": "317039",
    "end": "318960"
  },
  {
    "text": "monitoring this is something to keep in",
    "start": "318960",
    "end": "321039"
  },
  {
    "text": "mind",
    "start": "321039",
    "end": "322080"
  },
  {
    "text": "um to understand how this works with",
    "start": "322080",
    "end": "324720"
  },
  {
    "text": "kubernetes and prometheus",
    "start": "324720",
    "end": "328320"
  },
  {
    "text": "but let's get into action and say well",
    "start": "328320",
    "end": "331120"
  },
  {
    "text": "we want to monitor",
    "start": "331120",
    "end": "333199"
  },
  {
    "text": "kubernetes and what is needed to",
    "start": "333199",
    "end": "335199"
  },
  {
    "text": "actually do that and this is where the",
    "start": "335199",
    "end": "337280"
  },
  {
    "text": "promises operator and specifically cube",
    "start": "337280",
    "end": "339680"
  },
  {
    "text": "promises comes into play which allows to",
    "start": "339680",
    "end": "342560"
  },
  {
    "text": "install",
    "start": "342560",
    "end": "343680"
  },
  {
    "text": "um an entire package or the components",
    "start": "343680",
    "end": "345919"
  },
  {
    "start": "344000",
    "end": "344000"
  },
  {
    "text": "in a in a package which you would",
    "start": "345919",
    "end": "348080"
  },
  {
    "text": "otherwise install manually by using the",
    "start": "348080",
    "end": "350800"
  },
  {
    "text": "operator by using help charts and so on",
    "start": "350800",
    "end": "353840"
  },
  {
    "text": "so cooper mises provides",
    "start": "353840",
    "end": "356000"
  },
  {
    "text": "the promises or uses the premises",
    "start": "356000",
    "end": "357840"
  },
  {
    "text": "operator to install promises in a higher",
    "start": "357840",
    "end": "360160"
  },
  {
    "text": "availability setup next to the alert",
    "start": "360160",
    "end": "362639"
  },
  {
    "text": "manager next to node exporters",
    "start": "362639",
    "end": "365600"
  },
  {
    "text": "it also adds a promises adapter for the",
    "start": "365600",
    "end": "367520"
  },
  {
    "text": "kubernetes metrics api",
    "start": "367520",
    "end": "370160"
  },
  {
    "text": "so you don't need the metric server",
    "start": "370160",
    "end": "371840"
  },
  {
    "text": "anymore",
    "start": "371840",
    "end": "373360"
  },
  {
    "text": "you also get cube state metrics",
    "start": "373360",
    "end": "375919"
  },
  {
    "text": "pre-installed we will see in a bit what",
    "start": "375919",
    "end": "378479"
  },
  {
    "text": "is what it does and grafana to have uh",
    "start": "378479",
    "end": "381759"
  },
  {
    "text": "dashboards and um",
    "start": "381759",
    "end": "384080"
  },
  {
    "text": "fuse available in in addition to that",
    "start": "384080",
    "end": "386960"
  },
  {
    "text": "and this is the icing on the cake we get",
    "start": "386960",
    "end": "389199"
  },
  {
    "text": "pre-configured cluster monitoring for",
    "start": "389199",
    "end": "391440"
  },
  {
    "text": "for kubernetes meaning to say we have um",
    "start": "391440",
    "end": "394960"
  },
  {
    "text": "grafana dashboards and also alerting",
    "start": "394960",
    "end": "397680"
  },
  {
    "text": "mix-ins pre-installed and can actually",
    "start": "397680",
    "end": "400000"
  },
  {
    "text": "make use of that and have the like the",
    "start": "400000",
    "end": "402160"
  },
  {
    "text": "five-minute success of i'm deploying the",
    "start": "402160",
    "end": "404720"
  },
  {
    "text": "promises operator or cube promisius and",
    "start": "404720",
    "end": "407759"
  },
  {
    "text": "i can start playing i can start",
    "start": "407759",
    "end": "409599"
  },
  {
    "text": "investigating what's going on in my",
    "start": "409599",
    "end": "411599"
  },
  {
    "text": "kubernetes cluster in addition to that",
    "start": "411599",
    "end": "414319"
  },
  {
    "text": "um",
    "start": "414319",
    "end": "415520"
  },
  {
    "text": "the uh",
    "start": "415520",
    "end": "416880"
  },
  {
    "text": "q prometheus",
    "start": "416880",
    "end": "418319"
  },
  {
    "text": "allows us to dynamically create service",
    "start": "418319",
    "end": "420400"
  },
  {
    "text": "discovery objects which is helpful for",
    "start": "420400",
    "end": "423520"
  },
  {
    "text": "deploying own applications and adding",
    "start": "423520",
    "end": "426000"
  },
  {
    "text": "dynamically",
    "start": "426000",
    "end": "427680"
  },
  {
    "text": "the application endpoints or target",
    "start": "427680",
    "end": "429840"
  },
  {
    "text": "endpoints for application metrics for",
    "start": "429840",
    "end": "432720"
  },
  {
    "text": "example",
    "start": "432720",
    "end": "434560"
  },
  {
    "start": "434000",
    "end": "434000"
  },
  {
    "text": "now the installation is pretty",
    "start": "434560",
    "end": "435919"
  },
  {
    "text": "straightforward you just follow the",
    "start": "435919",
    "end": "437280"
  },
  {
    "text": "documentation apply um",
    "start": "437280",
    "end": "439840"
  },
  {
    "text": "the",
    "start": "439840",
    "end": "441280"
  },
  {
    "text": "manifest and wait a bit and then",
    "start": "441280",
    "end": "443599"
  },
  {
    "text": "basically everything is fine",
    "start": "443599",
    "end": "445840"
  },
  {
    "text": "um in order to familiarize yourself with",
    "start": "445840",
    "end": "448319"
  },
  {
    "start": "446000",
    "end": "446000"
  },
  {
    "text": "the deployment the first step is to add",
    "start": "448319",
    "end": "450800"
  },
  {
    "text": "port forwarding um",
    "start": "450800",
    "end": "453120"
  },
  {
    "text": "to",
    "start": "453120",
    "end": "453840"
  },
  {
    "text": "have the ports available um for",
    "start": "453840",
    "end": "456319"
  },
  {
    "text": "production environment use an ingress",
    "start": "456319",
    "end": "458080"
  },
  {
    "text": "controller like nginx or something else",
    "start": "458080",
    "end": "460800"
  },
  {
    "text": "in order to expose the http front-ends",
    "start": "460800",
    "end": "464479"
  },
  {
    "text": "one of the frontends is the promises ui",
    "start": "464479",
    "end": "466960"
  },
  {
    "text": "itself which you can use for basic",
    "start": "466960",
    "end": "468960"
  },
  {
    "text": "queries",
    "start": "468960",
    "end": "470240"
  },
  {
    "text": "visualizing the charts and so on so",
    "start": "470240",
    "end": "473120"
  },
  {
    "text": "basically testing and inspecting what",
    "start": "473120",
    "end": "474879"
  },
  {
    "text": "promises is doing",
    "start": "474879",
    "end": "476639"
  },
  {
    "text": "for more advanced uh user interfaces and",
    "start": "476639",
    "end": "479199"
  },
  {
    "text": "dashboards and panels and so on um you",
    "start": "479199",
    "end": "482160"
  },
  {
    "text": "get grafana",
    "start": "482160",
    "end": "484080"
  },
  {
    "text": "pre-installed which which comes with the",
    "start": "484080",
    "end": "486879"
  },
  {
    "text": "default password and so on and last but",
    "start": "486879",
    "end": "489360"
  },
  {
    "text": "not least we also get the alert manager",
    "start": "489360",
    "end": "491280"
  },
  {
    "start": "490000",
    "end": "490000"
  },
  {
    "text": "ui for that very reason and can start or",
    "start": "491280",
    "end": "495440"
  },
  {
    "text": "when when we trigger an alert we can",
    "start": "495440",
    "end": "498879"
  },
  {
    "text": "investigate the alert manager ui",
    "start": "498879",
    "end": "502400"
  },
  {
    "text": "now when it comes to specifically",
    "start": "502400",
    "end": "504800"
  },
  {
    "text": "monitoring kubernetes with prometheus",
    "start": "504800",
    "end": "507840"
  },
  {
    "text": "we",
    "start": "507840",
    "end": "508879"
  },
  {
    "text": "want to",
    "start": "508879",
    "end": "510400"
  },
  {
    "start": "509000",
    "end": "509000"
  },
  {
    "text": "have something available and the great",
    "start": "510400",
    "end": "512159"
  },
  {
    "text": "thing is q prometheus provides a long",
    "start": "512159",
    "end": "515039"
  },
  {
    "text": "list of grafana dashboards which we can",
    "start": "515039",
    "end": "517760"
  },
  {
    "text": "inspect and and and see what is going on",
    "start": "517760",
    "end": "520640"
  },
  {
    "text": "for example the kubernetes api server um",
    "start": "520640",
    "end": "523919"
  },
  {
    "text": "the compute resources in the cluster we",
    "start": "523919",
    "end": "526640"
  },
  {
    "text": "can access the cubelet we can get the",
    "start": "526640",
    "end": "528640"
  },
  {
    "text": "promises overview so seeing the health",
    "start": "528640",
    "end": "531279"
  },
  {
    "text": "of the monitor actually",
    "start": "531279",
    "end": "533040"
  },
  {
    "text": "and many many more things which come by",
    "start": "533040",
    "end": "535839"
  },
  {
    "text": "default which come out of the box like",
    "start": "535839",
    "end": "538959"
  },
  {
    "text": "this is actually like a production view",
    "start": "538959",
    "end": "541360"
  },
  {
    "text": "already on the kubernetes cluster itself",
    "start": "541360",
    "end": "544320"
  },
  {
    "text": "so oftentimes it's wise to just use that",
    "start": "544320",
    "end": "547360"
  },
  {
    "text": "as a production view and then learn from",
    "start": "547360",
    "end": "549760"
  },
  {
    "text": "the queries and from the panels",
    "start": "549760",
    "end": "552399"
  },
  {
    "text": "to create your own dashboards and panels",
    "start": "552399",
    "end": "554800"
  },
  {
    "text": "in grafana to monitor the kubernetes",
    "start": "554800",
    "end": "558080"
  },
  {
    "text": "cluster even even further",
    "start": "558080",
    "end": "560399"
  },
  {
    "text": "now",
    "start": "560399",
    "end": "561360"
  },
  {
    "start": "561000",
    "end": "561000"
  },
  {
    "text": "the other thing which comes to mind is",
    "start": "561360",
    "end": "563279"
  },
  {
    "text": "well if i deploy my own application into",
    "start": "563279",
    "end": "566000"
  },
  {
    "text": "the cluster",
    "start": "566000",
    "end": "567200"
  },
  {
    "text": "i also want to monitor it",
    "start": "567200",
    "end": "569760"
  },
  {
    "text": "and this example is um a fork from the",
    "start": "569760",
    "end": "573120"
  },
  {
    "text": "prometheus demo service from julius",
    "start": "573120",
    "end": "575440"
  },
  {
    "text": "waltz",
    "start": "575440",
    "end": "577600"
  },
  {
    "text": "which basically exposes some",
    "start": "577600",
    "end": "580480"
  },
  {
    "text": "synthetic metrics",
    "start": "580480",
    "end": "582080"
  },
  {
    "text": "and",
    "start": "582080",
    "end": "583120"
  },
  {
    "text": "in order to deploy it",
    "start": "583120",
    "end": "584959"
  },
  {
    "text": "by uh using the deployment and service",
    "start": "584959",
    "end": "588160"
  },
  {
    "text": "resources",
    "start": "588160",
    "end": "589519"
  },
  {
    "text": "we can actually like run it into the",
    "start": "589519",
    "end": "591680"
  },
  {
    "text": "kubernetes cluster and",
    "start": "591680",
    "end": "594800"
  },
  {
    "text": "later on start monitoring it so i would",
    "start": "594800",
    "end": "597120"
  },
  {
    "text": "totally encourage you to try it out",
    "start": "597120",
    "end": "599279"
  },
  {
    "text": "later on",
    "start": "599279",
    "end": "600720"
  },
  {
    "text": "deploy it into the kubernetes cluster",
    "start": "600720",
    "end": "603440"
  },
  {
    "start": "603000",
    "end": "603000"
  },
  {
    "text": "and then monitor the demo service which",
    "start": "603440",
    "end": "606160"
  },
  {
    "text": "basically means we need to create a new",
    "start": "606160",
    "end": "608800"
  },
  {
    "text": "custom resource definition called",
    "start": "608800",
    "end": "610640"
  },
  {
    "text": "service monitor and",
    "start": "610640",
    "end": "614079"
  },
  {
    "text": "make",
    "start": "614079",
    "end": "615120"
  },
  {
    "text": "promises aware that there's something",
    "start": "615120",
    "end": "617519"
  },
  {
    "text": "new a new service discovered to in in",
    "start": "617519",
    "end": "620480"
  },
  {
    "text": "that regard and",
    "start": "620480",
    "end": "622640"
  },
  {
    "text": "ensure that",
    "start": "622640",
    "end": "623839"
  },
  {
    "text": "it takes up the metrics endpoints",
    "start": "623839",
    "end": "626640"
  },
  {
    "text": "metrics endpoint and",
    "start": "626640",
    "end": "628880"
  },
  {
    "text": "starts monitoring it since there were",
    "start": "628880",
    "end": "631040"
  },
  {
    "start": "629000",
    "end": "629000"
  },
  {
    "text": "three replica sets defined um we can see",
    "start": "631040",
    "end": "634000"
  },
  {
    "text": "two of two of them already up as a",
    "start": "634000",
    "end": "635760"
  },
  {
    "text": "scrape target and one of them is still",
    "start": "635760",
    "end": "638079"
  },
  {
    "text": "unknown um which",
    "start": "638079",
    "end": "640399"
  },
  {
    "text": "means that at this at a later point we",
    "start": "640399",
    "end": "642640"
  },
  {
    "text": "have three targets available and based",
    "start": "642640",
    "end": "645600"
  },
  {
    "text": "on that",
    "start": "645600",
    "end": "646800"
  },
  {
    "text": "you can go ahead and",
    "start": "646800",
    "end": "649200"
  },
  {
    "text": "create a new",
    "start": "649200",
    "end": "651040"
  },
  {
    "text": "grafana dashboard a panel",
    "start": "651040",
    "end": "653680"
  },
  {
    "text": "selected a promisius data source search",
    "start": "653680",
    "end": "656480"
  },
  {
    "text": "for a specific cpu metric for example",
    "start": "656480",
    "end": "659440"
  },
  {
    "text": "and then",
    "start": "659440",
    "end": "660800"
  },
  {
    "text": "use a prom curl query in order to fetch",
    "start": "660800",
    "end": "663839"
  },
  {
    "text": "the data and visualize the graph",
    "start": "663839",
    "end": "667120"
  },
  {
    "text": "the other thing which you get out of the",
    "start": "667120",
    "end": "668720"
  },
  {
    "text": "box with q promises is container metrics",
    "start": "668720",
    "end": "672640"
  },
  {
    "text": "so the cubelets provide an embedded c",
    "start": "672640",
    "end": "675360"
  },
  {
    "text": "advisor exporter which comes at the",
    "start": "675360",
    "end": "678560"
  },
  {
    "text": "endpoint slash metrics",
    "start": "678560",
    "end": "680320"
  },
  {
    "text": "c advisor",
    "start": "680320",
    "end": "681760"
  },
  {
    "text": "and allows you to monitor the resource",
    "start": "681760",
    "end": "684320"
  },
  {
    "text": "usage specific out of memory kills and",
    "start": "684320",
    "end": "687440"
  },
  {
    "text": "so on",
    "start": "687440",
    "end": "689200"
  },
  {
    "text": "an example is it looks like this um",
    "start": "689200",
    "end": "692800"
  },
  {
    "text": "so",
    "start": "692800",
    "end": "693519"
  },
  {
    "text": "building on that and using that gives",
    "start": "693519",
    "end": "696079"
  },
  {
    "text": "you an insight of saying hey there is a",
    "start": "696079",
    "end": "697600"
  },
  {
    "text": "spike there is something which is",
    "start": "697600",
    "end": "699680"
  },
  {
    "text": "continuously going wrong in order to",
    "start": "699680",
    "end": "703120"
  },
  {
    "text": "really get an insight into for example",
    "start": "703120",
    "end": "705680"
  },
  {
    "text": "specific namespaces",
    "start": "705680",
    "end": "708720"
  },
  {
    "text": "using too many resources",
    "start": "708720",
    "end": "712240"
  },
  {
    "start": "711000",
    "end": "711000"
  },
  {
    "text": "the other thing",
    "start": "712240",
    "end": "713680"
  },
  {
    "text": "which we also get out of the box with q",
    "start": "713680",
    "end": "715600"
  },
  {
    "text": "permissions is cube state matrix which",
    "start": "715600",
    "end": "718800"
  },
  {
    "text": "queries the kubernetes api server for",
    "start": "718800",
    "end": "721279"
  },
  {
    "text": "specific health states like the",
    "start": "721279",
    "end": "723200"
  },
  {
    "text": "deployments the nodes the ports we can",
    "start": "723200",
    "end": "726000"
  },
  {
    "text": "query the replicas available and their",
    "start": "726000",
    "end": "728000"
  },
  {
    "text": "status",
    "start": "728000",
    "end": "729040"
  },
  {
    "text": "and everything is installed out of the",
    "start": "729040",
    "end": "731279"
  },
  {
    "text": "box which is super helpful to get an",
    "start": "731279",
    "end": "733760"
  },
  {
    "text": "insight",
    "start": "733760",
    "end": "735440"
  },
  {
    "text": "without any",
    "start": "735440",
    "end": "736720"
  },
  {
    "text": "further manual actions",
    "start": "736720",
    "end": "739680"
  },
  {
    "text": "now this is what we get as the basics so",
    "start": "739680",
    "end": "742720"
  },
  {
    "text": "we didn't do anything yet or we didn't",
    "start": "742720",
    "end": "745360"
  },
  {
    "text": "modify anything yet this is just out of",
    "start": "745360",
    "end": "748000"
  },
  {
    "text": "the box monitoring or out of the box",
    "start": "748000",
    "end": "750079"
  },
  {
    "text": "it's you install the prometheus operator",
    "start": "750079",
    "end": "752480"
  },
  {
    "text": "and q promises and you have everything",
    "start": "752480",
    "end": "755360"
  },
  {
    "text": "available but what if we want to",
    "start": "755360",
    "end": "757519"
  },
  {
    "text": "customize it so",
    "start": "757519",
    "end": "760079"
  },
  {
    "start": "758000",
    "end": "758000"
  },
  {
    "text": "q promises uses jsonnet and you can",
    "start": "760079",
    "end": "762800"
  },
  {
    "text": "develop your own rules and dashboards so",
    "start": "762800",
    "end": "764800"
  },
  {
    "text": "you can add them",
    "start": "764800",
    "end": "767040"
  },
  {
    "text": "you can also monitor other namespaces",
    "start": "767040",
    "end": "769279"
  },
  {
    "text": "and i tried this recently to monitor the",
    "start": "769279",
    "end": "772320"
  },
  {
    "text": "ecc the other one can contribute",
    "start": "772320",
    "end": "773920"
  },
  {
    "text": "namespace in our kubernetes cluster",
    "start": "773920",
    "end": "776800"
  },
  {
    "text": "and this is how it looks like to create",
    "start": "776800",
    "end": "779040"
  },
  {
    "text": "your own jsonnet file modify it and then",
    "start": "779040",
    "end": "782079"
  },
  {
    "text": "generate",
    "start": "782079",
    "end": "783360"
  },
  {
    "text": "the yaml configuration and deploy that",
    "start": "783360",
    "end": "786320"
  },
  {
    "text": "into your kubernetes cluster again",
    "start": "786320",
    "end": "788959"
  },
  {
    "text": "and this is like an ongoing process you",
    "start": "788959",
    "end": "792399"
  },
  {
    "text": "you can modify it you can add even more",
    "start": "792399",
    "end": "794480"
  },
  {
    "text": "things to it and use cube premises",
    "start": "794480",
    "end": "798000"
  },
  {
    "text": "really really as a basis and add your",
    "start": "798000",
    "end": "800560"
  },
  {
    "text": "customizations on top so you don't need",
    "start": "800560",
    "end": "802880"
  },
  {
    "text": "to reinvent the wheel all the time",
    "start": "802880",
    "end": "806000"
  },
  {
    "start": "806000",
    "end": "806000"
  },
  {
    "text": "the other thing around",
    "start": "806000",
    "end": "808160"
  },
  {
    "text": "more advanced monitoring or what i want",
    "start": "808160",
    "end": "810560"
  },
  {
    "text": "to bring to your attention is",
    "start": "810560",
    "end": "812399"
  },
  {
    "text": "what else can we do with the monitoring",
    "start": "812399",
    "end": "814480"
  },
  {
    "text": "data with the metrics collected and one",
    "start": "814480",
    "end": "816720"
  },
  {
    "text": "of the things in the sre handbook from",
    "start": "816720",
    "end": "819600"
  },
  {
    "text": "or in the sre book from google is the",
    "start": "819600",
    "end": "822240"
  },
  {
    "text": "foregone signals of monitoring like what",
    "start": "822240",
    "end": "824880"
  },
  {
    "text": "is needed to immediately see what it",
    "start": "824880",
    "end": "827120"
  },
  {
    "text": "that something is going wrong",
    "start": "827120",
    "end": "829519"
  },
  {
    "text": "with your application and this could be",
    "start": "829519",
    "end": "831440"
  },
  {
    "text": "latency this means traffic um this is",
    "start": "831440",
    "end": "835279"
  },
  {
    "text": "like errors and also saturation of the",
    "start": "835279",
    "end": "837600"
  },
  {
    "text": "service and oftentimes you need to think",
    "start": "837600",
    "end": "839839"
  },
  {
    "text": "about code instrumentation so actually",
    "start": "839839",
    "end": "842320"
  },
  {
    "text": "modifying your code and exposing the",
    "start": "842320",
    "end": "845279"
  },
  {
    "text": "metrics for promisius to see the http",
    "start": "845279",
    "end": "848160"
  },
  {
    "text": "requests to see",
    "start": "848160",
    "end": "850160"
  },
  {
    "text": "anything which has been failing and so",
    "start": "850160",
    "end": "852480"
  },
  {
    "text": "on and you need to correlate correlate",
    "start": "852480",
    "end": "854880"
  },
  {
    "text": "that in order to immediately see that",
    "start": "854880",
    "end": "857279"
  },
  {
    "text": "something is really going off",
    "start": "857279",
    "end": "860320"
  },
  {
    "text": "now",
    "start": "860320",
    "end": "861519"
  },
  {
    "text": "if you for example want to dive into",
    "start": "861519",
    "end": "864880"
  },
  {
    "text": "instrumenting your own applications",
    "start": "864880",
    "end": "867279"
  },
  {
    "text": "this is an example for python which i",
    "start": "867279",
    "end": "869440"
  },
  {
    "text": "created a while ago for a workshop um",
    "start": "869440",
    "end": "872639"
  },
  {
    "text": "on the other side i would encourage you",
    "start": "872639",
    "end": "874399"
  },
  {
    "text": "to check out all the promises client",
    "start": "874399",
    "end": "877519"
  },
  {
    "text": "libraries for ruby for rust for go for",
    "start": "877519",
    "end": "881680"
  },
  {
    "text": "anything which comes to mind and if it's",
    "start": "881680",
    "end": "883519"
  },
  {
    "text": "not there look into the existing",
    "start": "883519",
    "end": "885120"
  },
  {
    "text": "examples how",
    "start": "885120",
    "end": "887839"
  },
  {
    "text": "to really instrument your application",
    "start": "887839",
    "end": "889760"
  },
  {
    "text": "and deploy it and have it monitored",
    "start": "889760",
    "end": "893600"
  },
  {
    "text": "now",
    "start": "893600",
    "end": "894399"
  },
  {
    "text": "monitoring and metrics is fine but what",
    "start": "894399",
    "end": "896639"
  },
  {
    "text": "about alerts and escalations",
    "start": "896639",
    "end": "898800"
  },
  {
    "text": "as mentioned before the promises alert",
    "start": "898800",
    "end": "900800"
  },
  {
    "text": "manager comes pre-installed with cube",
    "start": "900800",
    "end": "902720"
  },
  {
    "text": "comm",
    "start": "902720",
    "end": "903519"
  },
  {
    "text": "cube promisius we can use the promises",
    "start": "903519",
    "end": "906480"
  },
  {
    "text": "alert rules like prom kill queries and",
    "start": "906480",
    "end": "908800"
  },
  {
    "text": "applying a certain threshold and times",
    "start": "908800",
    "end": "911120"
  },
  {
    "text": "and so on and the alert manager ensures",
    "start": "911120",
    "end": "913680"
  },
  {
    "text": "that there are no duplicated alerts that",
    "start": "913680",
    "end": "915839"
  },
  {
    "text": "you uh prevent um alerts which have been",
    "start": "915839",
    "end": "919120"
  },
  {
    "text": "fired already you can acknowledge and",
    "start": "919120",
    "end": "921279"
  },
  {
    "text": "silence specific alerts for a given time",
    "start": "921279",
    "end": "923680"
  },
  {
    "text": "you have high availability available the",
    "start": "923680",
    "end": "926320"
  },
  {
    "text": "transports are email or chat systems",
    "start": "926320",
    "end": "928720"
  },
  {
    "text": "everything which which is basically",
    "start": "928720",
    "end": "930720"
  },
  {
    "text": "known already",
    "start": "930720",
    "end": "932079"
  },
  {
    "text": "is similar",
    "start": "932079",
    "end": "933839"
  },
  {
    "text": "um here already",
    "start": "933839",
    "end": "935759"
  },
  {
    "start": "934000",
    "end": "934000"
  },
  {
    "text": "the main difference with defining the",
    "start": "935759",
    "end": "937600"
  },
  {
    "text": "alert rules is we need a promises rule",
    "start": "937600",
    "end": "940959"
  },
  {
    "text": "custom resource definition which wraps",
    "start": "940959",
    "end": "944000"
  },
  {
    "text": "the promises rules format and ensures",
    "start": "944000",
    "end": "946560"
  },
  {
    "text": "that",
    "start": "946560",
    "end": "947440"
  },
  {
    "text": "the alerts for example are being",
    "start": "947440",
    "end": "948959"
  },
  {
    "text": "deployed into the kubernetes cluster",
    "start": "948959",
    "end": "951360"
  },
  {
    "text": "into the promises configuration",
    "start": "951360",
    "end": "954480"
  },
  {
    "text": "but this seems rather strength",
    "start": "954480",
    "end": "956160"
  },
  {
    "text": "straightforward and the link",
    "start": "956160",
    "end": "957839"
  },
  {
    "text": "documentation for the promises operator",
    "start": "957839",
    "end": "959759"
  },
  {
    "text": "is pretty awesome",
    "start": "959759",
    "end": "962560"
  },
  {
    "text": "now jumping into",
    "start": "962560",
    "end": "965040"
  },
  {
    "text": "a related topic to alerts with sla slo",
    "start": "965040",
    "end": "968480"
  },
  {
    "text": "and sli",
    "start": "968480",
    "end": "970320"
  },
  {
    "start": "970000",
    "end": "970000"
  },
  {
    "text": "we define a specific service level",
    "start": "970320",
    "end": "973279"
  },
  {
    "text": "agreement which means",
    "start": "973279",
    "end": "974959"
  },
  {
    "text": "potentially with customers 99.5 percent",
    "start": "974959",
    "end": "977920"
  },
  {
    "text": "availability our objective is even",
    "start": "977920",
    "end": "980399"
  },
  {
    "text": "higher saying hey i want it to be a 99.9",
    "start": "980399",
    "end": "983839"
  },
  {
    "text": "percent well available",
    "start": "983839",
    "end": "985920"
  },
  {
    "text": "and for achieving that we need certain",
    "start": "985920",
    "end": "988560"
  },
  {
    "text": "indicators so what is hurting our um our",
    "start": "988560",
    "end": "992079"
  },
  {
    "text": "production system what is the error",
    "start": "992079",
    "end": "994160"
  },
  {
    "text": "budget what indicates that is it errors",
    "start": "994160",
    "end": "997120"
  },
  {
    "text": "is it latency saturation and so on so",
    "start": "997120",
    "end": "1000959"
  },
  {
    "text": "when we start thinking about this",
    "start": "1000959",
    "end": "1004000"
  },
  {
    "text": "we kind of",
    "start": "1004000",
    "end": "1006160"
  },
  {
    "text": "need to also think about slos and build",
    "start": "1006160",
    "end": "1008880"
  },
  {
    "text": "our alerting based on slos for example",
    "start": "1008880",
    "end": "1012320"
  },
  {
    "text": "now",
    "start": "1012320",
    "end": "1013120"
  },
  {
    "start": "1013000",
    "end": "1013000"
  },
  {
    "text": "slos",
    "start": "1013120",
    "end": "1014560"
  },
  {
    "text": "can be difficult or can be like you",
    "start": "1014560",
    "end": "1016720"
  },
  {
    "text": "write a lot of code you need to",
    "start": "1016720",
    "end": "1020880"
  },
  {
    "text": "define the prom cal queries um this and",
    "start": "1020880",
    "end": "1023519"
  },
  {
    "text": "the alerting rules for the alert manager",
    "start": "1023519",
    "end": "1025520"
  },
  {
    "text": "and so on",
    "start": "1025520",
    "end": "1026720"
  },
  {
    "text": "so it needs a common specification and",
    "start": "1026720",
    "end": "1029438"
  },
  {
    "text": "most recently openslo was formed",
    "start": "1029439",
    "end": "1032640"
  },
  {
    "text": "to unify that or to define the",
    "start": "1032640",
    "end": "1034798"
  },
  {
    "text": "specification for slos so that slo",
    "start": "1034799",
    "end": "1038240"
  },
  {
    "text": "generators like sloth for example always",
    "start": "1038240",
    "end": "1041678"
  },
  {
    "text": "generate",
    "start": "1041679",
    "end": "1043120"
  },
  {
    "text": "the requested format or the defined",
    "start": "1043120",
    "end": "1044959"
  },
  {
    "text": "format",
    "start": "1044959",
    "end": "1045918"
  },
  {
    "text": "and",
    "start": "1045919",
    "end": "1046959"
  },
  {
    "text": "you can also use slo management pura was",
    "start": "1046959",
    "end": "1050080"
  },
  {
    "text": "announced",
    "start": "1050080",
    "end": "1051840"
  },
  {
    "text": "most recently which allows you to grab",
    "start": "1051840",
    "end": "1054480"
  },
  {
    "text": "using a ui to manage",
    "start": "1054480",
    "end": "1057039"
  },
  {
    "text": "slos for promises for example",
    "start": "1057039",
    "end": "1059760"
  },
  {
    "text": "so you don't need to go into",
    "start": "1059760",
    "end": "1062400"
  },
  {
    "text": "manually copy pasting stuff in order to",
    "start": "1062400",
    "end": "1065280"
  },
  {
    "text": "manage slos for prometheus and and also",
    "start": "1065280",
    "end": "1068960"
  },
  {
    "text": "for kubernetes then",
    "start": "1068960",
    "end": "1070880"
  },
  {
    "text": "now um slos with promises can also be",
    "start": "1070880",
    "end": "1074080"
  },
  {
    "start": "1071000",
    "end": "1071000"
  },
  {
    "text": "used for for even more things like not",
    "start": "1074080",
    "end": "1077360"
  },
  {
    "text": "only for metrics and alert calculation",
    "start": "1077360",
    "end": "1079520"
  },
  {
    "text": "but also for quality gates",
    "start": "1079520",
    "end": "1081919"
  },
  {
    "text": "when something is deployed into staging",
    "start": "1081919",
    "end": "1083919"
  },
  {
    "text": "and you say hey if the slo is failing in",
    "start": "1083919",
    "end": "1086080"
  },
  {
    "text": "my staging environment i want to have a",
    "start": "1086080",
    "end": "1088400"
  },
  {
    "text": "quality gate for example with captain",
    "start": "1088400",
    "end": "1090880"
  },
  {
    "text": "and ci cd is red and it fails just",
    "start": "1090880",
    "end": "1094000"
  },
  {
    "text": "because",
    "start": "1094000",
    "end": "1095120"
  },
  {
    "text": "the slo is has failed and i don't want",
    "start": "1095120",
    "end": "1097919"
  },
  {
    "text": "to",
    "start": "1097919",
    "end": "1099039"
  },
  {
    "text": "deploy any performance regressions for",
    "start": "1099039",
    "end": "1100960"
  },
  {
    "text": "example into production and then debug",
    "start": "1100960",
    "end": "1103600"
  },
  {
    "text": "it at 3 am in the morning and burn out",
    "start": "1103600",
    "end": "1106080"
  },
  {
    "text": "from that",
    "start": "1106080",
    "end": "1107200"
  },
  {
    "text": "so this is one thing to keep in keep in",
    "start": "1107200",
    "end": "1109280"
  },
  {
    "text": "mind the other thing is i i can can",
    "start": "1109280",
    "end": "1112480"
  },
  {
    "text": "really touch it um i would want to like",
    "start": "1112480",
    "end": "1116240"
  },
  {
    "text": "talk talk about it for hours",
    "start": "1116240",
    "end": "1118559"
  },
  {
    "text": "for gitlab.com",
    "start": "1118559",
    "end": "1120400"
  },
  {
    "text": "the sas platform our sres and",
    "start": "1120400",
    "end": "1123360"
  },
  {
    "text": "infrastructure teams have also defined",
    "start": "1123360",
    "end": "1126080"
  },
  {
    "text": "um their own metrics catalog which is",
    "start": "1126080",
    "end": "1129360"
  },
  {
    "text": "something similar to jsonnet and this",
    "start": "1129360",
    "end": "1131600"
  },
  {
    "text": "also gets generated and the great thing",
    "start": "1131600",
    "end": "1134080"
  },
  {
    "text": "about generating all these",
    "start": "1134080",
    "end": "1136720"
  },
  {
    "text": "things is",
    "start": "1136720",
    "end": "1137919"
  },
  {
    "text": "we generate the alerts the dashboards",
    "start": "1137919",
    "end": "1140960"
  },
  {
    "text": "which allows us",
    "start": "1140960",
    "end": "1142480"
  },
  {
    "text": "to define the key metrics the thresholds",
    "start": "1142480",
    "end": "1145600"
  },
  {
    "text": "and also add description and",
    "start": "1145600",
    "end": "1146960"
  },
  {
    "text": "observability tools so when someone is",
    "start": "1146960",
    "end": "1149280"
  },
  {
    "text": "on call",
    "start": "1149280",
    "end": "1150480"
  },
  {
    "text": "and dslo alert is being fired they can",
    "start": "1150480",
    "end": "1152960"
  },
  {
    "text": "immediately see what is going on and",
    "start": "1152960",
    "end": "1154960"
  },
  {
    "text": "what is needed to fix the problem",
    "start": "1154960",
    "end": "1156960"
  },
  {
    "text": "hopefully so that um a",
    "start": "1156960",
    "end": "1159840"
  },
  {
    "text": "production incident can get resolved",
    "start": "1159840",
    "end": "1162400"
  },
  {
    "text": "rather quickly",
    "start": "1162400",
    "end": "1165720"
  },
  {
    "text": "now last but not least",
    "start": "1166799",
    "end": "1169039"
  },
  {
    "text": "we need to shift from just monitoring to",
    "start": "1169039",
    "end": "1172200"
  },
  {
    "text": "observability just for the reason we",
    "start": "1172200",
    "end": "1174880"
  },
  {
    "text": "have metrics with promisius the",
    "start": "1174880",
    "end": "1177120"
  },
  {
    "text": "exporters the side cars we have the",
    "start": "1177120",
    "end": "1179360"
  },
  {
    "text": "applications with",
    "start": "1179360",
    "end": "1180960"
  },
  {
    "text": "metrics instrumentation and also",
    "start": "1180960",
    "end": "1183039"
  },
  {
    "text": "integration outside of kubernetes",
    "start": "1183039",
    "end": "1185840"
  },
  {
    "text": "but this is probably not enough for",
    "start": "1185840",
    "end": "1188640"
  },
  {
    "text": "running operations in the sre",
    "start": "1188640",
    "end": "1191520"
  },
  {
    "text": "and so in that regard we shift into well",
    "start": "1191520",
    "end": "1194240"
  },
  {
    "text": "let's keep an eye out for logs",
    "start": "1194240",
    "end": "1196799"
  },
  {
    "text": "maybe we have a central lock management",
    "start": "1196799",
    "end": "1199039"
  },
  {
    "text": "available",
    "start": "1199039",
    "end": "1200400"
  },
  {
    "text": "probably have",
    "start": "1200400",
    "end": "1201919"
  },
  {
    "text": "either elasticsearch with beats sidecars",
    "start": "1201919",
    "end": "1204880"
  },
  {
    "text": "and demon sets with auto discovery and",
    "start": "1204880",
    "end": "1207200"
  },
  {
    "text": "keep",
    "start": "1207200",
    "end": "1208000"
  },
  {
    "text": "sorry kibana as a front end",
    "start": "1208000",
    "end": "1210880"
  },
  {
    "text": "or um using a more lightweight approach",
    "start": "1210880",
    "end": "1213679"
  },
  {
    "text": "with loki and and promptil and fluency",
    "start": "1213679",
    "end": "1217280"
  },
  {
    "text": "and then using grafana as a front-end",
    "start": "1217280",
    "end": "1219440"
  },
  {
    "text": "this is something you need to keep an",
    "start": "1219440",
    "end": "1220960"
  },
  {
    "text": "eye out for um and keep and make your",
    "start": "1220960",
    "end": "1223200"
  },
  {
    "text": "mind about it",
    "start": "1223200",
    "end": "1224480"
  },
  {
    "text": "next to metrics inside your kubernetes",
    "start": "1224480",
    "end": "1226640"
  },
  {
    "text": "cluster the other thing i want to bring",
    "start": "1226640",
    "end": "1228720"
  },
  {
    "text": "to your attention is traces which work a",
    "start": "1228720",
    "end": "1230880"
  },
  {
    "text": "little different to logs and allow you",
    "start": "1230880",
    "end": "1233039"
  },
  {
    "text": "to really get distributed insights into",
    "start": "1233039",
    "end": "1235679"
  },
  {
    "text": "application performance as well um and",
    "start": "1235679",
    "end": "1238640"
  },
  {
    "text": "for example investigates low queries the",
    "start": "1238640",
    "end": "1241039"
  },
  {
    "text": "tools in that regard are jaeger tracing",
    "start": "1241039",
    "end": "1243039"
  },
  {
    "text": "grafana tempo and and open telemetry",
    "start": "1243039",
    "end": "1246400"
  },
  {
    "text": "this is something to check out",
    "start": "1246400",
    "end": "1249280"
  },
  {
    "start": "1249000",
    "end": "1249000"
  },
  {
    "text": "and also pro profiling continuous",
    "start": "1249280",
    "end": "1251360"
  },
  {
    "text": "profiling providing application",
    "start": "1251360",
    "end": "1253200"
  },
  {
    "text": "performance insights for developers and",
    "start": "1253200",
    "end": "1255600"
  },
  {
    "text": "defining the four pillars of",
    "start": "1255600",
    "end": "1257280"
  },
  {
    "text": "observability in the future",
    "start": "1257280",
    "end": "1260720"
  },
  {
    "text": "last but not least secure monitoring um",
    "start": "1260799",
    "end": "1264080"
  },
  {
    "text": "is a hot topic it's needed so you pro",
    "start": "1264080",
    "end": "1267280"
  },
  {
    "start": "1265000",
    "end": "1265000"
  },
  {
    "text": "potentially have thought around",
    "start": "1267280",
    "end": "1268720"
  },
  {
    "text": "automation and for infrastructures code",
    "start": "1268720",
    "end": "1270799"
  },
  {
    "text": "and githubs like using the promises",
    "start": "1270799",
    "end": "1273200"
  },
  {
    "text": "operator and cube promisius extending it",
    "start": "1273200",
    "end": "1275919"
  },
  {
    "text": "customizing it with jsonnet",
    "start": "1275919",
    "end": "1278240"
  },
  {
    "text": "using um",
    "start": "1278240",
    "end": "1279919"
  },
  {
    "text": "infrastructure as code for inventory for",
    "start": "1279919",
    "end": "1282559"
  },
  {
    "text": "service discovery with terraform and",
    "start": "1282559",
    "end": "1284880"
  },
  {
    "text": "several and and the like",
    "start": "1284880",
    "end": "1286720"
  },
  {
    "text": "and deployed continuously practice git",
    "start": "1286720",
    "end": "1289840"
  },
  {
    "text": "ups with monitoring in your kubernetes",
    "start": "1289840",
    "end": "1291919"
  },
  {
    "text": "cluster",
    "start": "1291919",
    "end": "1293679"
  },
  {
    "text": "the other thing is like security",
    "start": "1293679",
    "end": "1295919"
  },
  {
    "start": "1294000",
    "end": "1294000"
  },
  {
    "text": "monitoring and security means you want",
    "start": "1295919",
    "end": "1298159"
  },
  {
    "text": "to detect vulnerabilities before they",
    "start": "1298159",
    "end": "1300640"
  },
  {
    "text": "hurt production this not only covers",
    "start": "1300640",
    "end": "1302880"
  },
  {
    "text": "like code vulnerabilities but also",
    "start": "1302880",
    "end": "1304880"
  },
  {
    "text": "container images security scanning with",
    "start": "1304880",
    "end": "1307919"
  },
  {
    "text": "dependencies and so on and kubernetes",
    "start": "1307919",
    "end": "1310960"
  },
  {
    "text": "security in a way of cluster image",
    "start": "1310960",
    "end": "1312960"
  },
  {
    "text": "scanning",
    "start": "1312960",
    "end": "1314320"
  },
  {
    "text": "but also ensuring that policies are",
    "start": "1314320",
    "end": "1316240"
  },
  {
    "text": "being applied like the open policy agent",
    "start": "1316240",
    "end": "1318480"
  },
  {
    "text": "kiverner policies and speaking of",
    "start": "1318480",
    "end": "1320640"
  },
  {
    "text": "kirvana policies i want to bring",
    "start": "1320640",
    "end": "1323760"
  },
  {
    "start": "1322000",
    "end": "1322000"
  },
  {
    "text": "the",
    "start": "1323760",
    "end": "1324640"
  },
  {
    "text": "promises exporter and the grafana",
    "start": "1324640",
    "end": "1326559"
  },
  {
    "text": "dashboards to your attention which",
    "start": "1326559",
    "end": "1329039"
  },
  {
    "text": "allows you to immediately see",
    "start": "1329039",
    "end": "1331280"
  },
  {
    "text": "what policy has been triggered when it",
    "start": "1331280",
    "end": "1333520"
  },
  {
    "text": "failed when someone tried to circumvent",
    "start": "1333520",
    "end": "1336320"
  },
  {
    "text": "it and so on",
    "start": "1336320",
    "end": "1338000"
  },
  {
    "text": "which is super helpful for production",
    "start": "1338000",
    "end": "1340080"
  },
  {
    "text": "environments",
    "start": "1340080",
    "end": "1341600"
  },
  {
    "text": "now last but not least getting through",
    "start": "1341600",
    "end": "1343840"
  },
  {
    "text": "ideas and some thoughts",
    "start": "1343840",
    "end": "1346799"
  },
  {
    "text": "maybe think about",
    "start": "1346799",
    "end": "1348640"
  },
  {
    "text": "writing the data from promises outside",
    "start": "1348640",
    "end": "1350880"
  },
  {
    "text": "to kubernetes like using re remote",
    "start": "1350880",
    "end": "1353120"
  },
  {
    "text": "rights with ops trace and the grafana",
    "start": "1353120",
    "end": "1355200"
  },
  {
    "text": "agent as an example",
    "start": "1355200",
    "end": "1357550"
  },
  {
    "text": "[Music]",
    "start": "1357550",
    "end": "1358640"
  },
  {
    "text": "look into the gitlab sov runbooks um how",
    "start": "1358640",
    "end": "1361200"
  },
  {
    "text": "it's being done",
    "start": "1361200",
    "end": "1363200"
  },
  {
    "text": "check out opentelemetry to unify metrics",
    "start": "1363200",
    "end": "1366000"
  },
  {
    "text": "logs and traces",
    "start": "1366000",
    "end": "1367440"
  },
  {
    "text": "and continue looking into continuous",
    "start": "1367440",
    "end": "1370240"
  },
  {
    "text": "profiling",
    "start": "1370240",
    "end": "1371679"
  },
  {
    "text": "now the resources which i've which",
    "start": "1371679",
    "end": "1374080"
  },
  {
    "start": "1372000",
    "end": "1372000"
  },
  {
    "text": "helped me over the past years to change",
    "start": "1374080",
    "end": "1376000"
  },
  {
    "text": "from traditional monitoring to cloud",
    "start": "1376000",
    "end": "1378159"
  },
  {
    "text": "native monitoring with kubernetes with",
    "start": "1378159",
    "end": "1380640"
  },
  {
    "text": "promisius are all linked here um special",
    "start": "1380640",
    "end": "1383840"
  },
  {
    "text": "thanks to julius for promlabs for the",
    "start": "1383840",
    "end": "1386240"
  },
  {
    "text": "trainings they are totally awesome",
    "start": "1386240",
    "end": "1388480"
  },
  {
    "text": "i would encourage you to use the",
    "start": "1388480",
    "end": "1389760"
  },
  {
    "text": "exercises in the slide deck to learn",
    "start": "1389760",
    "end": "1392320"
  },
  {
    "text": "even more async",
    "start": "1392320",
    "end": "1394480"
  },
  {
    "text": "and to think about what to prepare what",
    "start": "1394480",
    "end": "1397840"
  },
  {
    "text": "to instrument what to observe and how to",
    "start": "1397840",
    "end": "1400480"
  },
  {
    "text": "iterate on the specific things so like",
    "start": "1400480",
    "end": "1404159"
  },
  {
    "text": "throw in chaos engineering think about",
    "start": "1404159",
    "end": "1406640"
  },
  {
    "text": "quality gates and optimize everything",
    "start": "1406640",
    "end": "1409280"
  },
  {
    "text": "which is there so you you sleep well at",
    "start": "1409280",
    "end": "1411919"
  },
  {
    "text": "night and everything is",
    "start": "1411919",
    "end": "1414480"
  },
  {
    "text": "hopefully in good shape and",
    "start": "1414480",
    "end": "1417039"
  },
  {
    "text": "your monitoring is not red",
    "start": "1417039",
    "end": "1419679"
  },
  {
    "text": "thanks for attention i'm happy to answer",
    "start": "1419679",
    "end": "1422320"
  },
  {
    "text": "any questions and look forward to seeing",
    "start": "1422320",
    "end": "1425360"
  },
  {
    "text": "you online and hopefully soon in person",
    "start": "1425360",
    "end": "1427360"
  },
  {
    "text": "again",
    "start": "1427360",
    "end": "1430159"
  },
  {
    "text": "you",
    "start": "1430159",
    "end": "1432240"
  }
]