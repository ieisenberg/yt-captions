[
  {
    "text": "the how and why for building crossplan",
    "start": "80",
    "end": "1680"
  },
  {
    "text": "providers hello everyone",
    "start": "1680",
    "end": "3760"
  },
  {
    "text": "my name is krish and today we're going",
    "start": "3760",
    "end": "5359"
  },
  {
    "text": "to be going over uh",
    "start": "5359",
    "end": "7359"
  },
  {
    "text": "how and and why you might want to build",
    "start": "7359",
    "end": "10240"
  },
  {
    "text": "your own crossland provider",
    "start": "10240",
    "end": "12799"
  },
  {
    "text": "but first things first a little bit",
    "start": "12799",
    "end": "14080"
  },
  {
    "text": "about me i'm a software engineer",
    "start": "14080",
    "end": "16080"
  },
  {
    "text": "at red hat in the office of the cto and",
    "start": "16080",
    "end": "18800"
  },
  {
    "text": "i'm a maintainer on the provider aws",
    "start": "18800",
    "end": "20960"
  },
  {
    "text": "and provider in cluster projects under",
    "start": "20960",
    "end": "23359"
  },
  {
    "text": "crossplane",
    "start": "23359",
    "end": "25039"
  },
  {
    "text": "i'm also a member of the kubernetes 6",
    "start": "25039",
    "end": "27760"
  },
  {
    "text": "storage where i actively contribute to a",
    "start": "27760",
    "end": "29599"
  },
  {
    "text": "few projects",
    "start": "29599",
    "end": "31439"
  },
  {
    "text": "my twitter is chris ciao underscore and",
    "start": "31439",
    "end": "34000"
  },
  {
    "text": "my github is chris chow",
    "start": "34000",
    "end": "37280"
  },
  {
    "text": "uh so in this talk we're going to go",
    "start": "37280",
    "end": "40079"
  },
  {
    "text": "over the what where when",
    "start": "40079",
    "end": "41520"
  },
  {
    "text": "why and who for crossplan providers",
    "start": "41520",
    "end": "45680"
  },
  {
    "text": "as well as in the second part the",
    "start": "45680",
    "end": "49200"
  },
  {
    "text": "how for how you can create a provider",
    "start": "49200",
    "end": "51760"
  },
  {
    "text": "this will include talking about the main",
    "start": "51760",
    "end": "53280"
  },
  {
    "text": "components",
    "start": "53280",
    "end": "54000"
  },
  {
    "text": "and then eventually live coding a new",
    "start": "54000",
    "end": "56399"
  },
  {
    "text": "feature for the provider in cluster",
    "start": "56399",
    "end": "59199"
  },
  {
    "text": "so let's start with what so let's",
    "start": "59199",
    "end": "61359"
  },
  {
    "text": "quickly go over what crossplane is",
    "start": "61359",
    "end": "62960"
  },
  {
    "text": "so the crossband project allows you to",
    "start": "62960",
    "end": "64559"
  },
  {
    "text": "provision cloud resources",
    "start": "64559",
    "end": "66080"
  },
  {
    "text": "from within your kubernetes cluster",
    "start": "66080",
    "end": "68479"
  },
  {
    "text": "cross button is responsible for managing",
    "start": "68479",
    "end": "70320"
  },
  {
    "text": "the entire life cycle of these resources",
    "start": "70320",
    "end": "73040"
  },
  {
    "text": "including update delete create and",
    "start": "73040",
    "end": "75759"
  },
  {
    "text": "observe",
    "start": "75759",
    "end": "78159"
  },
  {
    "text": "on the note observing cross plane",
    "start": "78240",
    "end": "80320"
  },
  {
    "text": "providers expose information about these",
    "start": "80320",
    "end": "82400"
  },
  {
    "text": "resources",
    "start": "82400",
    "end": "83280"
  },
  {
    "text": "on an ongoing basis through kubernetes",
    "start": "83280",
    "end": "85759"
  },
  {
    "text": "fields on the crs as well as events",
    "start": "85759",
    "end": "89759"
  },
  {
    "text": "so from the cross plane docs we have",
    "start": "90079",
    "end": "92560"
  },
  {
    "text": "that providers are packages that enable",
    "start": "92560",
    "end": "94880"
  },
  {
    "text": "crossplane to provision",
    "start": "94880",
    "end": "96400"
  },
  {
    "text": "infrastructure on an external service",
    "start": "96400",
    "end": "99920"
  },
  {
    "text": "they bring in crds that map one to one",
    "start": "99920",
    "end": "103520"
  },
  {
    "text": "with external infrastructure resources",
    "start": "103520",
    "end": "106000"
  },
  {
    "text": "as well as the",
    "start": "106000",
    "end": "106880"
  },
  {
    "text": "controllers to manage these resources",
    "start": "106880",
    "end": "110880"
  },
  {
    "text": "so that's a good definition but what are",
    "start": "111200",
    "end": "112880"
  },
  {
    "text": "providers really right so essentially",
    "start": "112880",
    "end": "115040"
  },
  {
    "text": "providers are similar to operators",
    "start": "115040",
    "end": "117040"
  },
  {
    "text": "but you utilize the cross plane operator",
    "start": "117040",
    "end": "119280"
  },
  {
    "text": "for installation and management",
    "start": "119280",
    "end": "121439"
  },
  {
    "text": "uh and later on abstraction uh providers",
    "start": "121439",
    "end": "124399"
  },
  {
    "text": "use a lot of the same tooling as",
    "start": "124399",
    "end": "125600"
  },
  {
    "text": "operators such as cube builder",
    "start": "125600",
    "end": "127280"
  },
  {
    "text": "control runtime controller runtime and",
    "start": "127280",
    "end": "129679"
  },
  {
    "text": "controller tools",
    "start": "129679",
    "end": "131599"
  },
  {
    "text": "the main difference though is that",
    "start": "131599",
    "end": "133440"
  },
  {
    "text": "providers are really designed",
    "start": "133440",
    "end": "135200"
  },
  {
    "text": "to reference some external resource it's",
    "start": "135200",
    "end": "138239"
  },
  {
    "text": "responsible for mapping",
    "start": "138239",
    "end": "139520"
  },
  {
    "text": "one-to-one with some other resource",
    "start": "139520",
    "end": "142640"
  },
  {
    "text": "and representing that resource well",
    "start": "142640",
    "end": "145920"
  },
  {
    "text": "so for a developer the really nice thing",
    "start": "145920",
    "end": "147520"
  },
  {
    "text": "about providers is that you don't have",
    "start": "147520",
    "end": "148959"
  },
  {
    "text": "to worry about things like our back",
    "start": "148959",
    "end": "150959"
  },
  {
    "text": "deployment and bootstrapping since",
    "start": "150959",
    "end": "152959"
  },
  {
    "text": "there's already",
    "start": "152959",
    "end": "154160"
  },
  {
    "text": "solid tooling that exists to handle",
    "start": "154160",
    "end": "155920"
  },
  {
    "text": "those",
    "start": "155920",
    "end": "157680"
  },
  {
    "text": "uh so the where so where are providers",
    "start": "157680",
    "end": "159920"
  },
  {
    "text": "located",
    "start": "159920",
    "end": "161120"
  },
  {
    "text": "all crossbend providers are open source",
    "start": "161120",
    "end": "163120"
  },
  {
    "text": "and available on github",
    "start": "163120",
    "end": "164400"
  },
  {
    "text": "under usually either the crossplane or",
    "start": "164400",
    "end": "166720"
  },
  {
    "text": "crosspin control organizations",
    "start": "166720",
    "end": "169840"
  },
  {
    "text": "examples are the provider sql which",
    "start": "169840",
    "end": "172080"
  },
  {
    "text": "orchestrates sql servers by creating",
    "start": "172080",
    "end": "173920"
  },
  {
    "text": "users",
    "start": "173920",
    "end": "174560"
  },
  {
    "text": "grants and roles the provider helm is",
    "start": "174560",
    "end": "178080"
  },
  {
    "text": "similar",
    "start": "178080",
    "end": "178640"
  },
  {
    "text": "so that lets you manage and deploy helm",
    "start": "178640",
    "end": "180800"
  },
  {
    "text": "charts using custom resources",
    "start": "180800",
    "end": "182959"
  },
  {
    "text": "namely a release resource lastly the",
    "start": "182959",
    "end": "186480"
  },
  {
    "text": "provider aws",
    "start": "186480",
    "end": "187920"
  },
  {
    "text": "is responsible for provisioning",
    "start": "187920",
    "end": "189519"
  },
  {
    "text": "resources on aws",
    "start": "189519",
    "end": "191040"
  },
  {
    "text": "such as databases on rds or even",
    "start": "191040",
    "end": "194239"
  },
  {
    "text": "kubernetes clusters using eks and it's",
    "start": "194239",
    "end": "197440"
  },
  {
    "text": "really responsible for",
    "start": "197440",
    "end": "199440"
  },
  {
    "text": "representing those infrastructure",
    "start": "199440",
    "end": "202319"
  },
  {
    "text": "resources on aws",
    "start": "202319",
    "end": "205200"
  },
  {
    "text": "so the when so when does it make sense",
    "start": "205200",
    "end": "207840"
  },
  {
    "text": "to create a provider",
    "start": "207840",
    "end": "209040"
  },
  {
    "text": "well as i mentioned providers are",
    "start": "209040",
    "end": "212000"
  },
  {
    "text": "designed to interface with some",
    "start": "212000",
    "end": "213760"
  },
  {
    "text": "external api and manage the crud",
    "start": "213760",
    "end": "216239"
  },
  {
    "text": "lifecycle for those resources",
    "start": "216239",
    "end": "218720"
  },
  {
    "text": "so the focus then is really on high",
    "start": "218720",
    "end": "220560"
  },
  {
    "text": "fidelity resources",
    "start": "220560",
    "end": "222159"
  },
  {
    "text": "right if you have some external",
    "start": "222159",
    "end": "224080"
  },
  {
    "text": "resources that you can represent",
    "start": "224080",
    "end": "226159"
  },
  {
    "text": "with high fidelity on a granular level",
    "start": "226159",
    "end": "228720"
  },
  {
    "text": "it makes sense to create a provider",
    "start": "228720",
    "end": "230799"
  },
  {
    "text": "if you're looking to create your own",
    "start": "230799",
    "end": "231920"
  },
  {
    "text": "abstractions then you should probably",
    "start": "231920",
    "end": "233680"
  },
  {
    "text": "opt to use an operator as opposed to a",
    "start": "233680",
    "end": "235439"
  },
  {
    "text": "provider",
    "start": "235439",
    "end": "236879"
  },
  {
    "text": "another reason why you might want to use",
    "start": "236879",
    "end": "238480"
  },
  {
    "text": "a provider is if you want to use",
    "start": "238480",
    "end": "239760"
  },
  {
    "text": "compositions",
    "start": "239760",
    "end": "240799"
  },
  {
    "text": "so the so crossplan has a powerful",
    "start": "240799",
    "end": "242640"
  },
  {
    "text": "composition engine that allows you to",
    "start": "242640",
    "end": "244959"
  },
  {
    "text": "combine several resources and the best",
    "start": "244959",
    "end": "247200"
  },
  {
    "text": "way right now",
    "start": "247200",
    "end": "248239"
  },
  {
    "text": "to utilize this is to create a provider",
    "start": "248239",
    "end": "250239"
  },
  {
    "text": "that manages your resources",
    "start": "250239",
    "end": "253360"
  },
  {
    "text": "so why uh why should you creator",
    "start": "253360",
    "end": "255599"
  },
  {
    "text": "contribute to provider",
    "start": "255599",
    "end": "257280"
  },
  {
    "text": "uh crosspin is a cncf sandbox project",
    "start": "257280",
    "end": "260560"
  },
  {
    "text": "hopefully soon will be incubating and",
    "start": "260560",
    "end": "262479"
  },
  {
    "text": "many of the providers are open source",
    "start": "262479",
    "end": "264080"
  },
  {
    "text": "and anybody can contribute",
    "start": "264080",
    "end": "266080"
  },
  {
    "text": "their shared development and maintenance",
    "start": "266080",
    "end": "267919"
  },
  {
    "text": "of common resources",
    "start": "267919",
    "end": "270400"
  },
  {
    "text": "every organization shouldn't have to",
    "start": "270400",
    "end": "272320"
  },
  {
    "text": "write their own version of the provider",
    "start": "272320",
    "end": "273919"
  },
  {
    "text": "aws",
    "start": "273919",
    "end": "274800"
  },
  {
    "text": "we should be able to all contribute as a",
    "start": "274800",
    "end": "276720"
  },
  {
    "text": "community to one project that we can all",
    "start": "276720",
    "end": "278800"
  },
  {
    "text": "benefit from",
    "start": "278800",
    "end": "280800"
  },
  {
    "text": "cloud vendors can also expose their apis",
    "start": "280800",
    "end": "283199"
  },
  {
    "text": "in kubernetes through a common interface",
    "start": "283199",
    "end": "285520"
  },
  {
    "text": "of a cross plane provider",
    "start": "285520",
    "end": "288720"
  },
  {
    "text": "and lastly you should contribute or",
    "start": "288720",
    "end": "290479"
  },
  {
    "text": "create a provider",
    "start": "290479",
    "end": "292320"
  },
  {
    "text": "because of the streamlined development",
    "start": "292320",
    "end": "293919"
  },
  {
    "text": "and consumption process as i mentioned",
    "start": "293919",
    "end": "295840"
  },
  {
    "text": "before",
    "start": "295840",
    "end": "296639"
  },
  {
    "text": "crossfit helps a lot by handling a lot",
    "start": "296639",
    "end": "298560"
  },
  {
    "text": "of the messy parts",
    "start": "298560",
    "end": "301440"
  },
  {
    "text": "so who who is really creating and",
    "start": "301440",
    "end": "303680"
  },
  {
    "text": "maintaining these providers today",
    "start": "303680",
    "end": "305440"
  },
  {
    "text": "well there's three main groups from my",
    "start": "305440",
    "end": "307039"
  },
  {
    "text": "perspective there's the community",
    "start": "307039",
    "end": "309280"
  },
  {
    "text": "organizations and vendors so from the",
    "start": "309280",
    "end": "312479"
  },
  {
    "text": "vendor side there's engineers from",
    "start": "312479",
    "end": "314400"
  },
  {
    "text": "organizations like alibaba",
    "start": "314400",
    "end": "316080"
  },
  {
    "text": "ibm aws and equinix that contribute to",
    "start": "316080",
    "end": "319039"
  },
  {
    "text": "the development of their respective",
    "start": "319039",
    "end": "320400"
  },
  {
    "text": "providers",
    "start": "320400",
    "end": "322240"
  },
  {
    "text": "there's also contributors and engineers",
    "start": "322240",
    "end": "324400"
  },
  {
    "text": "from organizations like",
    "start": "324400",
    "end": "325600"
  },
  {
    "text": "upbound red hat squiz and accenture that",
    "start": "325600",
    "end": "328160"
  },
  {
    "text": "are contributing to the active",
    "start": "328160",
    "end": "329600"
  },
  {
    "text": "development and maintenance of providers",
    "start": "329600",
    "end": "331759"
  },
  {
    "text": "and lastly with any open source project",
    "start": "331759",
    "end": "334240"
  },
  {
    "text": "there's a lot of developers",
    "start": "334240",
    "end": "335840"
  },
  {
    "text": "in the open source community who",
    "start": "335840",
    "end": "337840"
  },
  {
    "text": "contribute code back to providers and",
    "start": "337840",
    "end": "339680"
  },
  {
    "text": "the main crossplane project",
    "start": "339680",
    "end": "342960"
  },
  {
    "text": "so let's get to the interesting part how",
    "start": "343039",
    "end": "345680"
  },
  {
    "text": "how can we create a crossplan provider",
    "start": "345680",
    "end": "347680"
  },
  {
    "text": "well the best way right now is to use",
    "start": "347680",
    "end": "349680"
  },
  {
    "text": "the provider template",
    "start": "349680",
    "end": "351440"
  },
  {
    "text": "which is a template that helps you",
    "start": "351440",
    "end": "352800"
  },
  {
    "text": "bootstrap your development and it",
    "start": "352800",
    "end": "354479"
  },
  {
    "text": "exposes some sample resources and the",
    "start": "354479",
    "end": "356240"
  },
  {
    "text": "basic structure of a controller",
    "start": "356240",
    "end": "359440"
  },
  {
    "text": "so the best way right now is to hit the",
    "start": "359440",
    "end": "361360"
  },
  {
    "text": "little green button that you see",
    "start": "361360",
    "end": "362720"
  },
  {
    "text": "called use this template and that'll",
    "start": "362720",
    "end": "364800"
  },
  {
    "text": "take you to this screen",
    "start": "364800",
    "end": "366240"
  },
  {
    "text": "which allows you to define the",
    "start": "366240",
    "end": "367759"
  },
  {
    "text": "repository name and owner",
    "start": "367759",
    "end": "369440"
  },
  {
    "text": "for your provider uh and just like that",
    "start": "369440",
    "end": "372960"
  },
  {
    "text": "you have your provider",
    "start": "372960",
    "end": "374720"
  },
  {
    "text": "and so now we're gonna go through a",
    "start": "374720",
    "end": "377360"
  },
  {
    "text": "little bit more in depth",
    "start": "377360",
    "end": "378560"
  },
  {
    "text": "into the provider in cluster that we",
    "start": "378560",
    "end": "380560"
  },
  {
    "text": "just created",
    "start": "380560",
    "end": "381840"
  },
  {
    "text": "uh followed by a live coding demo of us",
    "start": "381840",
    "end": "385039"
  },
  {
    "text": "creating",
    "start": "385039",
    "end": "385680"
  },
  {
    "text": "a redis managed resource in the provider",
    "start": "385680",
    "end": "387759"
  },
  {
    "text": "written cluster",
    "start": "387759",
    "end": "390400"
  },
  {
    "text": "so this is our freshly created and",
    "start": "391120",
    "end": "393440"
  },
  {
    "text": "cloned version",
    "start": "393440",
    "end": "394639"
  },
  {
    "text": "of the provider in cluster based on the",
    "start": "394639",
    "end": "397520"
  },
  {
    "text": "current structure",
    "start": "397520",
    "end": "398639"
  },
  {
    "text": "of the provider template so let's dig a",
    "start": "398639",
    "end": "401440"
  },
  {
    "text": "little deeper into the various",
    "start": "401440",
    "end": "402800"
  },
  {
    "text": "components",
    "start": "402800",
    "end": "403680"
  },
  {
    "text": "of the provider and cluster and break",
    "start": "403680",
    "end": "406160"
  },
  {
    "text": "down what they mean",
    "start": "406160",
    "end": "407280"
  },
  {
    "text": "and and how they affect our development",
    "start": "407280",
    "end": "410639"
  },
  {
    "text": "so from the top down let's take a look",
    "start": "410639",
    "end": "412560"
  },
  {
    "text": "at the apis folder first",
    "start": "412560",
    "end": "415120"
  },
  {
    "text": "the api folder contains first",
    "start": "415120",
    "end": "418400"
  },
  {
    "text": "the generate.go file which describes the",
    "start": "418400",
    "end": "421120"
  },
  {
    "text": "workflow for how we generate",
    "start": "421120",
    "end": "423360"
  },
  {
    "text": "crds along with",
    "start": "423360",
    "end": "426400"
  },
  {
    "text": "necessary files for kubernetes and",
    "start": "426400",
    "end": "430240"
  },
  {
    "text": "crossplane",
    "start": "430240",
    "end": "432560"
  },
  {
    "text": "the template.go is similar it describes",
    "start": "432560",
    "end": "436400"
  },
  {
    "text": "uh all of the schemes which we want to",
    "start": "436400",
    "end": "439199"
  },
  {
    "text": "add",
    "start": "439199",
    "end": "440000"
  },
  {
    "text": "uh into our",
    "start": "440000",
    "end": "443440"
  },
  {
    "text": "kubernetes runtime so in this example",
    "start": "443440",
    "end": "446639"
  },
  {
    "text": "we have two schemes here first there's",
    "start": "446639",
    "end": "449120"
  },
  {
    "text": "template v1",
    "start": "449120",
    "end": "450000"
  },
  {
    "text": "alpha 1 and sample v1 alpha 1.",
    "start": "450000",
    "end": "453440"
  },
  {
    "text": "so let's take a look at sample v1 alpha",
    "start": "453440",
    "end": "455360"
  },
  {
    "text": "1. so within the sample folder there is",
    "start": "455360",
    "end": "457759"
  },
  {
    "text": "another subfolder called view on alpha1",
    "start": "457759",
    "end": "460479"
  },
  {
    "text": "and this contains a doc.go file which",
    "start": "460479",
    "end": "463039"
  },
  {
    "text": "specifies the group name",
    "start": "463039",
    "end": "464560"
  },
  {
    "text": "and version name for this api group",
    "start": "464560",
    "end": "467759"
  },
  {
    "text": "within this we describe our uh",
    "start": "467759",
    "end": "472080"
  },
  {
    "text": "we describe our sample resource which",
    "start": "472080",
    "end": "475360"
  },
  {
    "text": "which is described in the types.go file",
    "start": "475360",
    "end": "478319"
  },
  {
    "text": "the name of this file doesn't matter",
    "start": "478319",
    "end": "479840"
  },
  {
    "text": "but more importantly it's important that",
    "start": "479840",
    "end": "482240"
  },
  {
    "text": "we have the necessary annotations",
    "start": "482240",
    "end": "484160"
  },
  {
    "text": "as well as the structs with our type",
    "start": "484160",
    "end": "486879"
  },
  {
    "text": "meta and object meta",
    "start": "486879",
    "end": "488400"
  },
  {
    "text": "this is the actual api api type that",
    "start": "488400",
    "end": "491199"
  },
  {
    "text": "this provider exposes",
    "start": "491199",
    "end": "493680"
  },
  {
    "text": "there's other generated files here along",
    "start": "493680",
    "end": "495680"
  },
  {
    "text": "with the register.go",
    "start": "495680",
    "end": "496960"
  },
  {
    "text": "which describes the type metadata as",
    "start": "496960",
    "end": "499280"
  },
  {
    "text": "well as",
    "start": "499280",
    "end": "500160"
  },
  {
    "text": "the initial scheme builder registration",
    "start": "500160",
    "end": "504160"
  },
  {
    "text": "next up let's take a look at the command",
    "start": "504800",
    "end": "506720"
  },
  {
    "text": "directory",
    "start": "506720",
    "end": "507919"
  },
  {
    "text": "this is the main dot go file that's",
    "start": "507919",
    "end": "509759"
  },
  {
    "text": "actually run inside of our docker image",
    "start": "509759",
    "end": "512479"
  },
  {
    "text": "when the provider is created",
    "start": "512479",
    "end": "515919"
  },
  {
    "text": "this includes uh all of the command line",
    "start": "515919",
    "end": "519360"
  },
  {
    "text": "argument parsing as well as the initial",
    "start": "519360",
    "end": "521680"
  },
  {
    "text": "setup",
    "start": "521680",
    "end": "522800"
  },
  {
    "text": "so here we can see we initially run",
    "start": "522800",
    "end": "526160"
  },
  {
    "text": "uh our apis when we add them all to the",
    "start": "526160",
    "end": "529360"
  },
  {
    "text": "scheme",
    "start": "529360",
    "end": "530720"
  },
  {
    "text": "and we also set up all of our",
    "start": "530720",
    "end": "533040"
  },
  {
    "text": "controllers",
    "start": "533040",
    "end": "535760"
  },
  {
    "text": "aside from that in here we describe our",
    "start": "535760",
    "end": "537920"
  },
  {
    "text": "manager as well as",
    "start": "537920",
    "end": "540320"
  },
  {
    "text": "the signal handler within the example",
    "start": "540320",
    "end": "543839"
  },
  {
    "text": "directory",
    "start": "543839",
    "end": "544480"
  },
  {
    "text": "we have examples of the different custom",
    "start": "544480",
    "end": "546959"
  },
  {
    "text": "resources that our provider exposes",
    "start": "546959",
    "end": "549600"
  },
  {
    "text": "this is a good practice because new",
    "start": "549600",
    "end": "551360"
  },
  {
    "text": "users can then see",
    "start": "551360",
    "end": "553120"
  },
  {
    "text": "what the different resources are as well",
    "start": "553120",
    "end": "554640"
  },
  {
    "text": "as examples that they can run directly",
    "start": "554640",
    "end": "558320"
  },
  {
    "text": "within the internal directory we're able",
    "start": "559760",
    "end": "561920"
  },
  {
    "text": "to see the different controllers",
    "start": "561920",
    "end": "564240"
  },
  {
    "text": "for our provider under some projects",
    "start": "564240",
    "end": "567680"
  },
  {
    "text": "you may see that instead of internal",
    "start": "567680",
    "end": "570080"
  },
  {
    "text": "this folder is called",
    "start": "570080",
    "end": "571680"
  },
  {
    "text": "pkg for package but in the provider",
    "start": "571680",
    "end": "574959"
  },
  {
    "text": "template",
    "start": "574959",
    "end": "575600"
  },
  {
    "text": "it's currently referred to as internal",
    "start": "575600",
    "end": "578399"
  },
  {
    "text": "so within this",
    "start": "578399",
    "end": "579360"
  },
  {
    "text": "we have our template.go file which",
    "start": "579360",
    "end": "582800"
  },
  {
    "text": "contains the main setup function for all",
    "start": "582800",
    "end": "585040"
  },
  {
    "text": "of our controllers",
    "start": "585040",
    "end": "586480"
  },
  {
    "text": "so for example we iterate over our",
    "start": "586480",
    "end": "588800"
  },
  {
    "text": "config",
    "start": "588800",
    "end": "589920"
  },
  {
    "text": "setup function and our my type setup",
    "start": "589920",
    "end": "592480"
  },
  {
    "text": "function",
    "start": "592480",
    "end": "593360"
  },
  {
    "text": "so this sets up both controllers as i",
    "start": "593360",
    "end": "595279"
  },
  {
    "text": "previously mentioned",
    "start": "595279",
    "end": "597839"
  },
  {
    "text": "within let's say the config one for",
    "start": "597839",
    "end": "600080"
  },
  {
    "text": "example we'll see the setup function",
    "start": "600080",
    "end": "602079"
  },
  {
    "text": "which describes how we initialize the",
    "start": "602079",
    "end": "604800"
  },
  {
    "text": "controller that reconciles provider",
    "start": "604800",
    "end": "606800"
  },
  {
    "text": "configs",
    "start": "606800",
    "end": "608000"
  },
  {
    "text": "uh and so in this example there isn't",
    "start": "608000",
    "end": "611040"
  },
  {
    "text": "much",
    "start": "611040",
    "end": "611519"
  },
  {
    "text": "but if we take a look at uh my my type",
    "start": "611519",
    "end": "614959"
  },
  {
    "text": "uh we'll see there is a setup function",
    "start": "614959",
    "end": "617920"
  },
  {
    "text": "as well as",
    "start": "617920",
    "end": "619040"
  },
  {
    "text": "a connector which describes how",
    "start": "619040",
    "end": "622240"
  },
  {
    "text": "we produce an external client when we",
    "start": "622240",
    "end": "625279"
  },
  {
    "text": "initially want to set up this controller",
    "start": "625279",
    "end": "629040"
  },
  {
    "text": "and additionally we have our external",
    "start": "629279",
    "end": "631760"
  },
  {
    "text": "struct",
    "start": "631760",
    "end": "632640"
  },
  {
    "text": "which has the create update and delete",
    "start": "632640",
    "end": "636240"
  },
  {
    "text": "methods",
    "start": "636240",
    "end": "637040"
  },
  {
    "text": "uh for our external resource",
    "start": "637040",
    "end": "640160"
  },
  {
    "text": "and the observe method is responsible",
    "start": "640160",
    "end": "642399"
  },
  {
    "text": "for",
    "start": "642399",
    "end": "643200"
  },
  {
    "text": "seeing the or examining the current",
    "start": "643200",
    "end": "645120"
  },
  {
    "text": "state of our",
    "start": "645120",
    "end": "646320"
  },
  {
    "text": "managed resource",
    "start": "646320",
    "end": "649200"
  },
  {
    "text": "the observe function returns a managed",
    "start": "650560",
    "end": "652800"
  },
  {
    "text": "to external observation",
    "start": "652800",
    "end": "654240"
  },
  {
    "text": "which contains references if the",
    "start": "654240",
    "end": "655600"
  },
  {
    "text": "resource exists if it's up to date",
    "start": "655600",
    "end": "657519"
  },
  {
    "text": "as well as connection details this is",
    "start": "657519",
    "end": "659680"
  },
  {
    "text": "vital because",
    "start": "659680",
    "end": "660880"
  },
  {
    "text": "if at any point a resource no longer",
    "start": "660880",
    "end": "662800"
  },
  {
    "text": "exists or it isn't up to date",
    "start": "662800",
    "end": "664560"
  },
  {
    "text": "we'll run the create or update process",
    "start": "664560",
    "end": "666480"
  },
  {
    "text": "as needed",
    "start": "666480",
    "end": "668800"
  },
  {
    "text": "so for example for create we'll see that",
    "start": "668800",
    "end": "672240"
  },
  {
    "text": "it creates our resource and returns",
    "start": "672240",
    "end": "674560"
  },
  {
    "text": "successfully without an error if the if",
    "start": "674560",
    "end": "676640"
  },
  {
    "text": "the resource was created",
    "start": "676640",
    "end": "678720"
  },
  {
    "text": "uh the same goes for update and delete",
    "start": "678720",
    "end": "681279"
  },
  {
    "text": "uh when a resource is deleted we'll call",
    "start": "681279",
    "end": "683200"
  },
  {
    "text": "delete",
    "start": "683200",
    "end": "684079"
  },
  {
    "text": "and um the reconciler will continue to",
    "start": "684079",
    "end": "687680"
  },
  {
    "text": "repeat for the managed resource",
    "start": "687680",
    "end": "690000"
  },
  {
    "text": "until the observe method returns",
    "start": "690000",
    "end": "692560"
  },
  {
    "text": "resource",
    "start": "692560",
    "end": "693120"
  },
  {
    "text": "exists equals false there's also a my",
    "start": "693120",
    "end": "696640"
  },
  {
    "text": "type underscore test file which contains",
    "start": "696640",
    "end": "698560"
  },
  {
    "text": "all of our tests for the observe",
    "start": "698560",
    "end": "701360"
  },
  {
    "text": "connect create update and delete",
    "start": "701360",
    "end": "703519"
  },
  {
    "text": "functions",
    "start": "703519",
    "end": "705920"
  },
  {
    "text": "next up we have the package directory",
    "start": "707440",
    "end": "709360"
  },
  {
    "text": "which contains our",
    "start": "709360",
    "end": "711760"
  },
  {
    "text": "crds that our provider exposes so",
    "start": "711760",
    "end": "715360"
  },
  {
    "text": "in this example there's not many crds",
    "start": "715360",
    "end": "717600"
  },
  {
    "text": "but in",
    "start": "717600",
    "end": "718399"
  },
  {
    "text": "another provider such as the aws",
    "start": "718399",
    "end": "720720"
  },
  {
    "text": "provider that has",
    "start": "720720",
    "end": "721839"
  },
  {
    "text": "dozens of resources you'll see quite a",
    "start": "721839",
    "end": "723360"
  },
  {
    "text": "few crds here",
    "start": "723360",
    "end": "725680"
  },
  {
    "text": "so that's all the main files that you",
    "start": "725680",
    "end": "727279"
  },
  {
    "text": "really need to look at as a developer",
    "start": "727279",
    "end": "729360"
  },
  {
    "text": "everything else is handled opaquely by",
    "start": "729360",
    "end": "731519"
  },
  {
    "text": "crossplane for you",
    "start": "731519",
    "end": "734000"
  },
  {
    "text": "and it's really that simple to get",
    "start": "734000",
    "end": "735279"
  },
  {
    "text": "started",
    "start": "735279",
    "end": "737680"
  },
  {
    "text": "in the first part of this talk we",
    "start": "738079",
    "end": "739760"
  },
  {
    "text": "explored what crossplan providers are",
    "start": "739760",
    "end": "742000"
  },
  {
    "text": "as well as when it makes sense to create",
    "start": "742000",
    "end": "744240"
  },
  {
    "text": "a provider",
    "start": "744240",
    "end": "745839"
  },
  {
    "text": "and how to actually create a provider in",
    "start": "745839",
    "end": "748959"
  },
  {
    "text": "this part of the talk we're going to go",
    "start": "748959",
    "end": "750399"
  },
  {
    "text": "through the process of actually",
    "start": "750399",
    "end": "751680"
  },
  {
    "text": "defining a new managed resource for the",
    "start": "751680",
    "end": "754000"
  },
  {
    "text": "provider and cluster",
    "start": "754000",
    "end": "755920"
  },
  {
    "text": "at a high level the goal of the provider",
    "start": "755920",
    "end": "757760"
  },
  {
    "text": "in cluster is to define",
    "start": "757760",
    "end": "759760"
  },
  {
    "text": "resources in cluster that follow the",
    "start": "759760",
    "end": "762959"
  },
  {
    "text": "same interface",
    "start": "762959",
    "end": "763839"
  },
  {
    "text": "as other cross pin providers such as the",
    "start": "763839",
    "end": "766399"
  },
  {
    "text": "provider aws",
    "start": "766399",
    "end": "767600"
  },
  {
    "text": "gcp and azure so the first part of",
    "start": "767600",
    "end": "770959"
  },
  {
    "text": "creating a new manage resource is",
    "start": "770959",
    "end": "772399"
  },
  {
    "text": "defining the api",
    "start": "772399",
    "end": "774160"
  },
  {
    "text": "we do this inside of the api's directory",
    "start": "774160",
    "end": "776240"
  },
  {
    "text": "more specifically we're going to create",
    "start": "776240",
    "end": "777760"
  },
  {
    "text": "a new",
    "start": "777760",
    "end": "778639"
  },
  {
    "text": "folder for cache v1 alpha 1. inside of",
    "start": "778639",
    "end": "782079"
  },
  {
    "text": "this",
    "start": "782079",
    "end": "782639"
  },
  {
    "text": "we define a doc.go file which contains",
    "start": "782639",
    "end": "785200"
  },
  {
    "text": "the group name which is",
    "start": "785200",
    "end": "788320"
  },
  {
    "text": "cache.incluster.crossplain.io",
    "start": "788440",
    "end": "789600"
  },
  {
    "text": "as well as the version which is the one",
    "start": "789600",
    "end": "791040"
  },
  {
    "text": "alpha one",
    "start": "791040",
    "end": "792800"
  },
  {
    "text": "we're also going to scaffold out an",
    "start": "792800",
    "end": "794399"
  },
  {
    "text": "empty resource for redis",
    "start": "794399",
    "end": "796639"
  },
  {
    "text": "which contains a spec and status struct",
    "start": "796639",
    "end": "800639"
  },
  {
    "text": "at this point this is all empty but",
    "start": "800639",
    "end": "802000"
  },
  {
    "text": "we're going to come back to this in a",
    "start": "802000",
    "end": "803120"
  },
  {
    "text": "minute",
    "start": "803120",
    "end": "804720"
  },
  {
    "text": "next up we're going to define our",
    "start": "804720",
    "end": "806000"
  },
  {
    "text": "register.go function which defines all",
    "start": "806000",
    "end": "808399"
  },
  {
    "text": "of our type metadata",
    "start": "808399",
    "end": "810079"
  },
  {
    "text": "and it also has an init function which",
    "start": "810079",
    "end": "812880"
  },
  {
    "text": "registers this resource our redis",
    "start": "812880",
    "end": "814800"
  },
  {
    "text": "resource with the scheme builder",
    "start": "814800",
    "end": "817600"
  },
  {
    "text": "this allows us to run our code",
    "start": "817600",
    "end": "819120"
  },
  {
    "text": "generation which",
    "start": "819120",
    "end": "820800"
  },
  {
    "text": "creates our deep copy managed and",
    "start": "820800",
    "end": "823199"
  },
  {
    "text": "managed list",
    "start": "823199",
    "end": "825839"
  },
  {
    "text": "files and so these are used internally",
    "start": "826480",
    "end": "828880"
  },
  {
    "text": "by kubernetes and crossplane",
    "start": "828880",
    "end": "832320"
  },
  {
    "text": "when we run our code generation it also",
    "start": "832320",
    "end": "834240"
  },
  {
    "text": "creates our crd",
    "start": "834240",
    "end": "835440"
  },
  {
    "text": "for the redis resource at this point",
    "start": "835440",
    "end": "838639"
  },
  {
    "text": "there's something exciting here but as",
    "start": "838639",
    "end": "840560"
  },
  {
    "text": "we build this out slowly this will get",
    "start": "840560",
    "end": "842320"
  },
  {
    "text": "filled in with all of our different",
    "start": "842320",
    "end": "843519"
  },
  {
    "text": "fields",
    "start": "843519",
    "end": "845839"
  },
  {
    "text": "uh now let's actually build our uh",
    "start": "845839",
    "end": "848639"
  },
  {
    "text": "controller out a little bit",
    "start": "848639",
    "end": "850720"
  },
  {
    "text": "so at this point our controller doesn't",
    "start": "850720",
    "end": "853120"
  },
  {
    "text": "really have any logic yet",
    "start": "853120",
    "end": "854880"
  },
  {
    "text": "but we've set it up within this regis.go",
    "start": "854880",
    "end": "858079"
  },
  {
    "text": "file",
    "start": "858079",
    "end": "858880"
  },
  {
    "text": "and we can see that we have a connector",
    "start": "858880",
    "end": "861680"
  },
  {
    "text": "struct here",
    "start": "861680",
    "end": "862399"
  },
  {
    "text": "which describes how we connect to",
    "start": "862399",
    "end": "864880"
  },
  {
    "text": "whatever api we're using",
    "start": "864880",
    "end": "866560"
  },
  {
    "text": "in our case we're just connecting to the",
    "start": "866560",
    "end": "869279"
  },
  {
    "text": "kubernetes",
    "start": "869279",
    "end": "870000"
  },
  {
    "text": "api server and we also define",
    "start": "870000",
    "end": "873120"
  },
  {
    "text": "our reconciler which has all of our crud",
    "start": "873120",
    "end": "875760"
  },
  {
    "text": "operations such as",
    "start": "875760",
    "end": "877199"
  },
  {
    "text": "observe create update and delete",
    "start": "877199",
    "end": "881120"
  },
  {
    "text": "at this point we can also add the",
    "start": "881120",
    "end": "883519"
  },
  {
    "text": "controller to the setup function",
    "start": "883519",
    "end": "885519"
  },
  {
    "text": "and what this does is it sets up or",
    "start": "885519",
    "end": "888480"
  },
  {
    "text": "creates all the controllers",
    "start": "888480",
    "end": "890480"
  },
  {
    "text": "with the loggers and rate limiters when",
    "start": "890480",
    "end": "894800"
  },
  {
    "text": "the the pod is started for the in",
    "start": "894800",
    "end": "896720"
  },
  {
    "text": "cluster provider",
    "start": "896720",
    "end": "899120"
  },
  {
    "text": "next we can start to scaffold out the",
    "start": "899120",
    "end": "901040"
  },
  {
    "text": "controller so before you actually write",
    "start": "901040",
    "end": "903040"
  },
  {
    "text": "your logic it's important to define",
    "start": "903040",
    "end": "904720"
  },
  {
    "text": "you know the different uh functions that",
    "start": "904720",
    "end": "906880"
  },
  {
    "text": "your client needs to have",
    "start": "906880",
    "end": "909040"
  },
  {
    "text": "and so in our case our client will have",
    "start": "909040",
    "end": "911120"
  },
  {
    "text": "a creator update function",
    "start": "911120",
    "end": "912639"
  },
  {
    "text": "as well as parse input secret and",
    "start": "912639",
    "end": "915920"
  },
  {
    "text": "two functions for deleting the",
    "start": "915920",
    "end": "917199"
  },
  {
    "text": "deployment and redis service",
    "start": "917199",
    "end": "920620"
  },
  {
    "text": "[Music]",
    "start": "920620",
    "end": "923199"
  },
  {
    "text": "at this point these methods aren't",
    "start": "923199",
    "end": "924720"
  },
  {
    "text": "defined yet but as we build this out",
    "start": "924720",
    "end": "926959"
  },
  {
    "text": "we'll slowly see that things come",
    "start": "926959",
    "end": "928399"
  },
  {
    "text": "together",
    "start": "928399",
    "end": "930240"
  },
  {
    "text": "we're also going to define four",
    "start": "930240",
    "end": "931519"
  },
  {
    "text": "functions here for",
    "start": "931519",
    "end": "933279"
  },
  {
    "text": "creating our kubernetes resources for",
    "start": "933279",
    "end": "935759"
  },
  {
    "text": "our redis deployment",
    "start": "935759",
    "end": "937040"
  },
  {
    "text": "containers as well as the service itself",
    "start": "937040",
    "end": "942240"
  },
  {
    "text": "so now we can head back to the api and",
    "start": "943040",
    "end": "945519"
  },
  {
    "text": "we can see that we've added a few new",
    "start": "945519",
    "end": "947120"
  },
  {
    "text": "fields here",
    "start": "947120",
    "end": "948399"
  },
  {
    "text": "so at this point for simplicity's sake",
    "start": "948399",
    "end": "950560"
  },
  {
    "text": "we have three fields",
    "start": "950560",
    "end": "952079"
  },
  {
    "text": "namely password secret ref config",
    "start": "952079",
    "end": "954399"
  },
  {
    "text": "variables and memory limit",
    "start": "954399",
    "end": "956399"
  },
  {
    "text": "memory limit states the maximum amount",
    "start": "956399",
    "end": "958240"
  },
  {
    "text": "of memory that we want to make available",
    "start": "958240",
    "end": "959920"
  },
  {
    "text": "to the redis pod in our deployment a",
    "start": "959920",
    "end": "962399"
  },
  {
    "text": "config variable",
    "start": "962399",
    "end": "963360"
  },
  {
    "text": "allows the users to inject arbitrary",
    "start": "963360",
    "end": "965759"
  },
  {
    "text": "environment variables",
    "start": "965759",
    "end": "967040"
  },
  {
    "text": "into the redis instance and lastly",
    "start": "967040",
    "end": "969279"
  },
  {
    "text": "password secret ref",
    "start": "969279",
    "end": "970399"
  },
  {
    "text": "references the secret uh which will be",
    "start": "970399",
    "end": "972959"
  },
  {
    "text": "which will contain the password for our",
    "start": "972959",
    "end": "974560"
  },
  {
    "text": "redis instance",
    "start": "974560",
    "end": "975759"
  },
  {
    "text": "uh if no reference is given here then we",
    "start": "975759",
    "end": "978880"
  },
  {
    "text": "will",
    "start": "978880",
    "end": "979920"
  },
  {
    "text": "expose redis without a password",
    "start": "979920",
    "end": "983839"
  },
  {
    "text": "once we define these",
    "start": "983839",
    "end": "986880"
  },
  {
    "text": "attributes we're going to run our code",
    "start": "987040",
    "end": "989360"
  },
  {
    "text": "generation again",
    "start": "989360",
    "end": "990320"
  },
  {
    "text": "and this will update deep copy as well",
    "start": "990320",
    "end": "992160"
  },
  {
    "text": "as our crt",
    "start": "992160",
    "end": "995040"
  },
  {
    "text": "now we can actually start the process of",
    "start": "995120",
    "end": "996880"
  },
  {
    "text": "implementing our client",
    "start": "996880",
    "end": "999120"
  },
  {
    "text": "so here uh we define",
    "start": "999120",
    "end": "1002160"
  },
  {
    "text": "parse input secret uh as a function",
    "start": "1002160",
    "end": "1004800"
  },
  {
    "text": "which",
    "start": "1004800",
    "end": "1005519"
  },
  {
    "text": "gets our secret and then extracts the",
    "start": "1005519",
    "end": "1008320"
  },
  {
    "text": "password data from it",
    "start": "1008320",
    "end": "1011040"
  },
  {
    "text": "delete redis deployment just validates",
    "start": "1011040",
    "end": "1014000"
  },
  {
    "text": "that",
    "start": "1014000",
    "end": "1014320"
  },
  {
    "text": "the deployment exists and then it",
    "start": "1014320",
    "end": "1015680"
  },
  {
    "text": "deletes it the same thing exists the",
    "start": "1015680",
    "end": "1017440"
  },
  {
    "text": "same thing happens for",
    "start": "1017440",
    "end": "1018560"
  },
  {
    "text": "our delete redis service function",
    "start": "1018560",
    "end": "1022240"
  },
  {
    "text": "next up uh inside of our insider make",
    "start": "1022959",
    "end": "1025678"
  },
  {
    "text": "redis deployment",
    "start": "1025679",
    "end": "1026720"
  },
  {
    "text": "we define our apps v1 deployment",
    "start": "1026720",
    "end": "1029520"
  },
  {
    "text": "resource",
    "start": "1029520",
    "end": "1030319"
  },
  {
    "text": "which contains the object meta and spec",
    "start": "1030319",
    "end": "1032720"
  },
  {
    "text": "for our deployment",
    "start": "1032720",
    "end": "1035038"
  },
  {
    "text": "the containers are defined in another",
    "start": "1035039",
    "end": "1036720"
  },
  {
    "text": "function down below",
    "start": "1036720",
    "end": "1039120"
  },
  {
    "text": "which first sets up all of our",
    "start": "1039120",
    "end": "1040798"
  },
  {
    "text": "environment variables",
    "start": "1040799",
    "end": "1042480"
  },
  {
    "text": "as well as our memory limit and then",
    "start": "1042480",
    "end": "1046319"
  },
  {
    "text": "we define the pod as a having container",
    "start": "1046319",
    "end": "1050000"
  },
  {
    "text": "which contains the bitnami redis image",
    "start": "1050000",
    "end": "1052640"
  },
  {
    "text": "uh as well as",
    "start": "1052640",
    "end": "1053919"
  },
  {
    "text": "which exp which exposes uh the default",
    "start": "1053919",
    "end": "1056559"
  },
  {
    "text": "redis port",
    "start": "1056559",
    "end": "1057400"
  },
  {
    "text": "6379 uh with the maximum memory and",
    "start": "1057400",
    "end": "1060640"
  },
  {
    "text": "environment variables",
    "start": "1060640",
    "end": "1062160"
  },
  {
    "text": "we also have a liveliness pope to",
    "start": "1062160",
    "end": "1063760"
  },
  {
    "text": "validate when the",
    "start": "1063760",
    "end": "1066080"
  },
  {
    "text": "pod or container is actually started",
    "start": "1066080",
    "end": "1070080"
  },
  {
    "text": "with our client defined we can actually",
    "start": "1070080",
    "end": "1072160"
  },
  {
    "text": "start the process",
    "start": "1072160",
    "end": "1073280"
  },
  {
    "text": "of now building out the controller",
    "start": "1073280",
    "end": "1075120"
  },
  {
    "text": "itself",
    "start": "1075120",
    "end": "1076799"
  },
  {
    "text": "and so here we can see that we've",
    "start": "1076799",
    "end": "1078080"
  },
  {
    "text": "defined our connector function as",
    "start": "1078080",
    "end": "1080880"
  },
  {
    "text": "extracting the provider config reference",
    "start": "1080880",
    "end": "1084480"
  },
  {
    "text": "getting the cube config from there and",
    "start": "1084480",
    "end": "1086559"
  },
  {
    "text": "creating a new client",
    "start": "1086559",
    "end": "1088000"
  },
  {
    "text": "with that specific cube config",
    "start": "1088000",
    "end": "1091600"
  },
  {
    "text": "our reconciler then has a reference to",
    "start": "1091600",
    "end": "1093760"
  },
  {
    "text": "the redis client",
    "start": "1093760",
    "end": "1094880"
  },
  {
    "text": "and it's responsible for observing the",
    "start": "1094880",
    "end": "1097520"
  },
  {
    "text": "current state",
    "start": "1097520",
    "end": "1098480"
  },
  {
    "text": "of our managed resource so namely we",
    "start": "1098480",
    "end": "1100960"
  },
  {
    "text": "check if the deployment exists",
    "start": "1100960",
    "end": "1102880"
  },
  {
    "text": "if the deployment is ready if it's",
    "start": "1102880",
    "end": "1105200"
  },
  {
    "text": "currently in the progress of scaling up",
    "start": "1105200",
    "end": "1107440"
  },
  {
    "text": "and we also validate if the service",
    "start": "1107440",
    "end": "1108720"
  },
  {
    "text": "exists and if any of these resources",
    "start": "1108720",
    "end": "1110720"
  },
  {
    "text": "don't exist",
    "start": "1110720",
    "end": "1112400"
  },
  {
    "text": "the controller will fail and and it'll",
    "start": "1112400",
    "end": "1115679"
  },
  {
    "text": "get put back in the retry loop for our",
    "start": "1115679",
    "end": "1117360"
  },
  {
    "text": "reconciler",
    "start": "1117360",
    "end": "1119760"
  },
  {
    "text": "if everything exists and it looks good",
    "start": "1119760",
    "end": "1122000"
  },
  {
    "text": "we'll return successfully that the",
    "start": "1122000",
    "end": "1123679"
  },
  {
    "text": "resource exists and it's up to date",
    "start": "1123679",
    "end": "1126160"
  },
  {
    "text": "we'll also expose the ip address of",
    "start": "1126160",
    "end": "1128720"
  },
  {
    "text": "redis",
    "start": "1128720",
    "end": "1130240"
  },
  {
    "text": "at a specific key in our secret namely",
    "start": "1130240",
    "end": "1132559"
  },
  {
    "text": "the endpoint key",
    "start": "1132559",
    "end": "1134480"
  },
  {
    "text": "the create function actually runs the",
    "start": "1134480",
    "end": "1137679"
  },
  {
    "text": "process of",
    "start": "1137679",
    "end": "1138799"
  },
  {
    "text": "creating our redis instance so this",
    "start": "1138799",
    "end": "1141280"
  },
  {
    "text": "means",
    "start": "1141280",
    "end": "1142240"
  },
  {
    "text": "deploying the deployment and service",
    "start": "1142240",
    "end": "1144400"
  },
  {
    "text": "resources",
    "start": "1144400",
    "end": "1146320"
  },
  {
    "text": "at the end once everything is created in",
    "start": "1146320",
    "end": "1149120"
  },
  {
    "text": "our secret we will expose the port",
    "start": "1149120",
    "end": "1151600"
  },
  {
    "text": "and password so in our case the port is",
    "start": "1151600",
    "end": "1154080"
  },
  {
    "text": "always",
    "start": "1154080",
    "end": "1154919"
  },
  {
    "text": "6379 and the password depends on the",
    "start": "1154919",
    "end": "1157520"
  },
  {
    "text": "input secret if it exists",
    "start": "1157520",
    "end": "1160080"
  },
  {
    "text": "uh update in in the redis resource at",
    "start": "1160080",
    "end": "1163039"
  },
  {
    "text": "this point is a no",
    "start": "1163039",
    "end": "1164000"
  },
  {
    "text": "up and delete simply just deletes the",
    "start": "1164000",
    "end": "1166640"
  },
  {
    "text": "deployment in the service",
    "start": "1166640",
    "end": "1169200"
  },
  {
    "text": "so with that our managed resource is",
    "start": "1169200",
    "end": "1171520"
  },
  {
    "text": "implemented",
    "start": "1171520",
    "end": "1172400"
  },
  {
    "text": "and we can define some examples in the",
    "start": "1172400",
    "end": "1175360"
  },
  {
    "text": "examples cache",
    "start": "1175360",
    "end": "1176559"
  },
  {
    "text": "folder and so this will have our",
    "start": "1176559",
    "end": "1179679"
  },
  {
    "text": "sample readiness resource with the",
    "start": "1179679",
    "end": "1181520"
  },
  {
    "text": "password reference as well as our",
    "start": "1181520",
    "end": "1183360"
  },
  {
    "text": "provider config",
    "start": "1183360",
    "end": "1184799"
  },
  {
    "text": "so just like that it was that easy to",
    "start": "1184799",
    "end": "1187039"
  },
  {
    "text": "create a managed resource",
    "start": "1187039",
    "end": "1188880"
  },
  {
    "text": "all in all this process took me about an",
    "start": "1188880",
    "end": "1190720"
  },
  {
    "text": "hour or less than an hour",
    "start": "1190720",
    "end": "1192799"
  },
  {
    "text": "and we have a v1 alpha 1 release of red",
    "start": "1192799",
    "end": "1196160"
  },
  {
    "text": "sn cluster",
    "start": "1196160",
    "end": "1197280"
  },
  {
    "text": "so we can add some additional features",
    "start": "1197280",
    "end": "1199440"
  },
  {
    "text": "there's still quite a bit of work to do",
    "start": "1199440",
    "end": "1200799"
  },
  {
    "text": "such as a redis cluster",
    "start": "1200799",
    "end": "1202720"
  },
  {
    "text": "or additional testing for redis because",
    "start": "1202720",
    "end": "1205280"
  },
  {
    "text": "at this point we haven't written any",
    "start": "1205280",
    "end": "1206640"
  },
  {
    "text": "tests",
    "start": "1206640",
    "end": "1207760"
  },
  {
    "text": "but we have enough now where somebody",
    "start": "1207760",
    "end": "1209679"
  },
  {
    "text": "can you know provision redis and cluster",
    "start": "1209679",
    "end": "1211919"
  },
  {
    "text": "using this provider so that concludes",
    "start": "1211919",
    "end": "1214960"
  },
  {
    "text": "this presentation",
    "start": "1214960",
    "end": "1216799"
  },
  {
    "text": "thank you for watching and if you have",
    "start": "1216799",
    "end": "1218480"
  },
  {
    "text": "any questions feel free to ping me on",
    "start": "1218480",
    "end": "1220640"
  },
  {
    "text": "slack",
    "start": "1220640",
    "end": "1221440"
  },
  {
    "text": "or add me on any of their socials my",
    "start": "1221440",
    "end": "1224480"
  },
  {
    "text": "linkedin is chris ciao",
    "start": "1224480",
    "end": "1226159"
  },
  {
    "text": "which is the same as my github and my my",
    "start": "1226159",
    "end": "1228240"
  },
  {
    "text": "twitter is chris chow underscore",
    "start": "1228240",
    "end": "1230799"
  },
  {
    "text": "thank you for your time and uh have a",
    "start": "1230799",
    "end": "1233039"
  },
  {
    "text": "good kubecon",
    "start": "1233039",
    "end": "1235840"
  }
]