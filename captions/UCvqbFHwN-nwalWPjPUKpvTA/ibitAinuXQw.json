[
  {
    "text": "and we are back again so uh you grab a coffee I guess and now we are ready for",
    "start": "199",
    "end": "6560"
  },
  {
    "text": "the next session we are with federo Valeri from redot and he's going to talk",
    "start": "6560",
    "end": "13080"
  },
  {
    "text": "about enhancing Kafka topic Management in kubernetes with the unidirectional topic operator so and over to you",
    "start": "13080",
    "end": "22160"
  },
  {
    "text": "fed okay so thanks Paulo uh thank you for having me here today I'm federo Val",
    "start": "22160",
    "end": "28439"
  },
  {
    "text": "and I work as a uh software engineer at rat specifically in the cka team where",
    "start": "28439",
    "end": "34239"
  },
  {
    "text": "we deal with streamy of course and cka um today I would like to talk you about",
    "start": "34239",
    "end": "40760"
  },
  {
    "text": "the topic operator which is one of the components that are provisioned",
    "start": "40760",
    "end": "46399"
  },
  {
    "text": "alongside with CFA with streamy sorry um and this um this component is one of the",
    "start": "46399",
    "end": "53559"
  },
  {
    "text": "operator that are included at the bundle together with streamy uh but let's first",
    "start": "53559",
    "end": "59120"
  },
  {
    "text": "have a step back and talk about the topics uh what topics are in Kafka and",
    "start": "59120",
    "end": "64760"
  },
  {
    "text": "how they are organized into the file system um which is something useful to",
    "start": "64760",
    "end": "70600"
  },
  {
    "text": "know um so you can think um of a topic as a table in a database but more",
    "start": "70600",
    "end": "77080"
  },
  {
    "text": "specifically it's a name feed where messages can be published and consumed",
    "start": "77080",
    "end": "82280"
  },
  {
    "text": "um these messages are immutable and they are stored in one or more partitions",
    "start": "82280",
    "end": "87880"
  },
  {
    "text": "these partitions can also be repeated for for tolerance uh if needed um each",
    "start": "87880",
    "end": "94200"
  },
  {
    "text": "of these partition is an a pend Only log made of a series of segments so if you",
    "start": "94200",
    "end": "99759"
  },
  {
    "text": "look at this picture on the right you see we have a a cluster a cka cluster",
    "start": "99759",
    "end": "105640"
  },
  {
    "text": "with a bunch of topics created inside it uh one of them for example topic C is uh",
    "start": "105640",
    "end": "113360"
  },
  {
    "text": "composed of a number of partitions in this case we have four partitions you can see and on the system they are",
    "start": "113360",
    "end": "120920"
  },
  {
    "text": "represented as folders so CF store them as folders named by the topic and the uh",
    "start": "120920",
    "end": "128239"
  },
  {
    "text": "partition number uh so they are really easy to identify and if we take one of",
    "start": "128239",
    "end": "134000"
  },
  {
    "text": "these partition for example partition two number two we see that it's divided",
    "start": "134000",
    "end": "139480"
  },
  {
    "text": "into a series of segments file these are actually files from the file system um",
    "start": "139480",
    "end": "144959"
  },
  {
    "text": "so you can see them U they are named by the offset of the message they contained",
    "start": "144959",
    "end": "151160"
  },
  {
    "text": "the first offset uh and if you notice we have one of them which is a little bit",
    "start": "151160",
    "end": "157120"
  },
  {
    "text": "darker with the color because I want to highlight that this is the active uh segment where messages are being",
    "start": "157120",
    "end": "164319"
  },
  {
    "text": "appended to all the orders are become Tre only when they they become full and",
    "start": "164319",
    "end": "169599"
  },
  {
    "text": "C automatically provision a new segment for for for you to store messages uh",
    "start": "169599",
    "end": "176560"
  },
  {
    "text": "these segments um as you can see uh represent the log so we say that a",
    "start": "176560",
    "end": "182599"
  },
  {
    "text": "partition is on the log and you can see that messages are store in this segment in this FES um along with a bunch of",
    "start": "182599",
    "end": "190319"
  },
  {
    "text": "indexes to make uh retrieval and consumer cons consuming Parts more",
    "start": "190319",
    "end": "197840"
  },
  {
    "text": "efficient um moving on the the real object that we have seen inside gka to",
    "start": "197840",
    "end": "204200"
  },
  {
    "text": "store your messages are partitions um so while the topic is a we concept",
    "start": "204200",
    "end": "210360"
  },
  {
    "text": "partitions as you have seen are real and they are stored on the file system they actually folders and files on the file",
    "start": "210360",
    "end": "216640"
  },
  {
    "text": "system um these partitions when when you create a topic are distributed evenly across the Brokers and there are a",
    "start": "216640",
    "end": "224159"
  },
  {
    "text": "number of configuration that that you can use for your use cases uh but there are two of them which are the most",
    "start": "224159",
    "end": "231640"
  },
  {
    "text": "important um which are replication factor and retention policy so first of",
    "start": "231640",
    "end": "236760"
  },
  {
    "text": "all replication factor for each partition your topic you can optionally",
    "start": "236760",
    "end": "242079"
  },
  {
    "text": "create more replicas to make it more robust and and to handle full tolerance",
    "start": "242079",
    "end": "248280"
  },
  {
    "text": "as you can see from the picture here we have one partition partition number two",
    "start": "248280",
    "end": "254720"
  },
  {
    "text": "which is composed which has three replicas uh that are hosted on three",
    "start": "254720",
    "end": "260359"
  },
  {
    "text": "different Brokers you can see broker zero broker one and broker two and one",
    "start": "260359",
    "end": "265680"
  },
  {
    "text": "of them is elected as a leader uh so the leader of a partition typically always get the the input the",
    "start": "265680",
    "end": "274120"
  },
  {
    "text": "messages from producers applications so they all come to the leader um and then",
    "start": "274120",
    "end": "279720"
  },
  {
    "text": "the the followers replicate from the leader all these messages uh and confirm to the leader the",
    "start": "279720",
    "end": "285560"
  },
  {
    "text": "replication um these ey Watermark uh marks which messages are confirmed to",
    "start": "285560",
    "end": "292039"
  },
  {
    "text": "the leader that have been replicated um so for example here you see that uh",
    "start": "292039",
    "end": "297680"
  },
  {
    "text": "follower number two here has replicated up to the offset number two",
    "start": "297680",
    "end": "304520"
  },
  {
    "text": "uh and and confirmed to the leader and follower the other follower here has",
    "start": "304520",
    "end": "310440"
  },
  {
    "text": "received messages but he have not confirmed to the leader so we see the AL Mar still need to advance but it will be",
    "start": "310440",
    "end": "316560"
  },
  {
    "text": "done in the next few nanc so this is just a picture taken in a specific",
    "start": "316560",
    "end": "321680"
  },
  {
    "text": "moment um along with the replication you need to know about the Instinct replica",
    "start": "321680",
    "end": "327680"
  },
  {
    "text": "set which means which contain means uh the replica that are in sync with the leader meaning that they are cff up with",
    "start": "327680",
    "end": "334720"
  },
  {
    "text": "the leader up to a certain Delta that it's also configurable um if some of the replica",
    "start": "334720",
    "end": "343520"
  },
  {
    "text": "which are a Brokers uh slow down because of some issue with the with the the server then",
    "start": "343520",
    "end": "351639"
  },
  {
    "text": "this replica is kicked out of the in sync set and why this is important because uh if you want to ensure for",
    "start": "351639",
    "end": "358880"
  },
  {
    "text": "tolerance for your and and the for your applications you typically want to",
    "start": "358880",
    "end": "365199"
  },
  {
    "text": "configure replication factor three with my ISR 2 that's the typical configuration which means um at any time",
    "start": "365199",
    "end": "373919"
  },
  {
    "text": "at least two replica must be in the in sync replica set so that if the leader for some reason fails then another",
    "start": "373919",
    "end": "383199"
  },
  {
    "text": "follower can take it over and start accepting the uh messages from from the",
    "start": "383199",
    "end": "389000"
  },
  {
    "text": "application um in this case application will automatically fail over to the to the",
    "start": "389000",
    "end": "394440"
  },
  {
    "text": "new leader so this is all handled automatically and you need you don't need to worry about that but if you just",
    "start": "394440",
    "end": "401319"
  },
  {
    "text": "have one one replica of course if the repli goes down your your um producer are stopped and they cannot consume",
    "start": "401319",
    "end": "408199"
  },
  {
    "text": "anymore uh on the producer side you need to remember to enable a all",
    "start": "408199",
    "end": "413400"
  },
  {
    "text": "configuration which means okay I want a confirmation of my message only one is",
    "start": "413400",
    "end": "419879"
  },
  {
    "text": "replicated fully to the in syn replica set to the to the replica",
    "start": "419879",
    "end": "425319"
  },
  {
    "text": "Set uh moving on we have the retention policy which is another fundamental um",
    "start": "425319",
    "end": "431919"
  },
  {
    "text": "uh configuration to to take it right uh when you create a new topic uh this this",
    "start": "431919",
    "end": "438319"
  },
  {
    "text": "along with the ingestion rate of messages determine how much this space is used um and by default CF C set only",
    "start": "438319",
    "end": "445759"
  },
  {
    "text": "retention of your messages by time uh and it's it's a week by default so your",
    "start": "445759",
    "end": "452280"
  },
  {
    "text": "message will start to be deleted after a week uh but usually we recommend to to",
    "start": "452280",
    "end": "459919"
  },
  {
    "text": "also set retention by sze uh because it can happen that uh one of your producer",
    "start": "459919",
    "end": "466199"
  },
  {
    "text": "applications has some clock drift some um clock issue on the server which is",
    "start": "466199",
    "end": "471680"
  },
  {
    "text": "running it and it may send a message with a time stamp into the future and",
    "start": "471680",
    "end": "476919"
  },
  {
    "text": "this time stamp is used to do the cleanup uh when the retention skips in uh and if the if just one um message in",
    "start": "476919",
    "end": "485000"
  },
  {
    "text": "a single segment file um has a temp into the future then it cannot be uh deleted",
    "start": "485000",
    "end": "494639"
  },
  {
    "text": "the whole segment cannot be deleted and by default the segment is one gigabyte inside so this gigabyte will stay there",
    "start": "494639",
    "end": "501039"
  },
  {
    "text": "for some time and maybe causing issues with your dis uh but if you also have retention do buice um set then when you",
    "start": "501039",
    "end": "510080"
  },
  {
    "text": "will reach the uh size limit that you configured at this point uh this the",
    "start": "510080",
    "end": "517320"
  },
  {
    "text": "broker will start deleting all the segment uh with the all the me messages so that's that's something that usually",
    "start": "517320",
    "end": "524279"
  },
  {
    "text": "is is also set finally one important property of of",
    "start": "524279",
    "end": "529760"
  },
  {
    "text": "a single partition is that it guarantees the message ordering so and it's only",
    "start": "529760",
    "end": "535560"
  },
  {
    "text": "guaranteed at the partition level so not across partitions if you have multiple partition message oring is not guaranteed across",
    "start": "535560",
    "end": "542680"
  },
  {
    "text": "them um and for example if you if you increase the partition number that that",
    "start": "542680",
    "end": "548680"
  },
  {
    "text": "is something that you can do in kfka then you are breaking ordering so if your use case absolutely requires",
    "start": "548680",
    "end": "555880"
  },
  {
    "text": "message ordering uh then you need to use one single partition or alternatively",
    "start": "555880",
    "end": "561800"
  },
  {
    "text": "you maybe can uh reorder on the consumer side in some way uh so that's that's",
    "start": "561800",
    "end": "567399"
  },
  {
    "text": "something you you need to know also referring to the water mark uh messages",
    "start": "567399",
    "end": "573560"
  },
  {
    "text": "are visible to Consumer only when um up to the water mark so we consider them",
    "start": "573560",
    "end": "579560"
  },
  {
    "text": "committed they are safe story in the cluster and and consumer can see them and consume",
    "start": "579560",
    "end": "586880"
  },
  {
    "text": "them uh So speaking about the challenges of managing C topics uh so you can",
    "start": "586880",
    "end": "593440"
  },
  {
    "text": "imagine to have a shared cluster maybe uh or a busy cluster with hundreds of",
    "start": "593440",
    "end": "598880"
  },
  {
    "text": "topics thousand of partitions it is running in production um so and you somehow have to",
    "start": "598880",
    "end": "605800"
  },
  {
    "text": "manage this uh this cluster with all these topics and the challenge here is to to maybe manage the the topic",
    "start": "605800",
    "end": "613360"
  },
  {
    "text": "configuration and creation declaratively uh using maybe giops pipelines which automate uh the",
    "start": "613360",
    "end": "620360"
  },
  {
    "text": "provisioning of the of the topics um and also you you can handle them centrally",
    "start": "620360",
    "end": "627720"
  },
  {
    "text": "maybe on a g repository uh so you can apply changing consistently um set some rules",
    "start": "627720",
    "end": "635200"
  },
  {
    "text": "automation stuff like that um another challenge is uh that you want your",
    "start": "635200",
    "end": "641839"
  },
  {
    "text": "cluster to support bu operations spikes in uh topic uh request uh topic changes",
    "start": "641839",
    "end": "648920"
  },
  {
    "text": "configuration changes this can happen as I said in in BC clusters where lots of",
    "start": "648920",
    "end": "654120"
  },
  {
    "text": "different teams are working on on the solutions creating topics uh in",
    "start": "654120",
    "end": "659519"
  },
  {
    "text": "partitions doing some changes and also maybe you you also want",
    "start": "659519",
    "end": "665000"
  },
  {
    "text": "to do some load testing on your cluster where you typically create a lot of",
    "start": "665000",
    "end": "670160"
  },
  {
    "text": "topics at the start of the test and then you delete all all of them at once uh",
    "start": "670160",
    "end": "675760"
  },
  {
    "text": "when the test is is over uh so you want to your solution your cka service to",
    "start": "675760",
    "end": "681959"
  },
  {
    "text": "support all of these Sly um and account for for this",
    "start": "681959",
    "end": "687560"
  },
  {
    "text": "PE then another need could be to delegate topic Management in a controlled way with that I mean your",
    "start": "687560",
    "end": "694760"
  },
  {
    "text": "admin administrators may want to limit all the possible configuration that you can do on a topic um so that the cka",
    "start": "694760",
    "end": "703880"
  },
  {
    "text": "service is more robust you you can enforce best practices uh so this is",
    "start": "703880",
    "end": "709120"
  },
  {
    "text": "another area where that can be challenging when ad missing um Kafka",
    "start": "709120",
    "end": "714560"
  },
  {
    "text": "cluster finally of course you want to monitor the topic State and be notified",
    "start": "714560",
    "end": "720120"
  },
  {
    "text": "about any issue that is happening uh CF already provide metrics uh a lot of",
    "start": "720120",
    "end": "726160"
  },
  {
    "text": "metrics uh but you need a way to organize them and and filter them to",
    "start": "726160",
    "end": "731200"
  },
  {
    "text": "what is really relevant for your use case may creating uh dashboards um and",
    "start": "731200",
    "end": "737680"
  },
  {
    "text": "of course connecting this Magics also to an alert system that can send you",
    "start": "737680",
    "end": "742760"
  },
  {
    "text": "messages and alerts when bad things happen so that you can react quickly in",
    "start": "742760",
    "end": "748240"
  },
  {
    "text": "stream Z we provide uh some examples of these uh dashboards using the St the",
    "start": "748240",
    "end": "754639"
  },
  {
    "text": "pero stack with grafana that can be taken as a base or to to create your own",
    "start": "754639",
    "end": "760240"
  },
  {
    "text": "custom dashboard now uh we can talk about the",
    "start": "760240",
    "end": "765480"
  },
  {
    "text": "topic operator which is the an application part of the streamy project",
    "start": "765480",
    "end": "771199"
  },
  {
    "text": "which extends the kubernetes CPI introducing the cfop custom resource",
    "start": "771199",
    "end": "776440"
  },
  {
    "text": "which is a way to uh Clare how your topet should look",
    "start": "776440",
    "end": "782760"
  },
  {
    "text": "like uh with a configuration file with a simple yam file and then this operation",
    "start": "782760",
    "end": "788440"
  },
  {
    "text": "that the the topic operator will um provision that for you will create",
    "start": "788440",
    "end": "794800"
  },
  {
    "text": "that on the target C cluster uh one important Point here is to remember that",
    "start": "794800",
    "end": "801320"
  },
  {
    "text": "a topic operator instance can reconcile cobic in a single name space for a single C cluster um so this can be seen",
    "start": "801320",
    "end": "810279"
  },
  {
    "text": "as a limitation but there are reason because it works like that so if you need if you need to have multiple",
    "start": "810279",
    "end": "816079"
  },
  {
    "text": "cluster or one to have multiple name spaces then you should have multiple instances of the topic operator which is",
    "start": "816079",
    "end": "822600"
  },
  {
    "text": "by the way really easy to achieve uh speaking about deployment",
    "start": "822600",
    "end": "827920"
  },
  {
    "text": "modes uh you can deploy the C the topic operator um as part of the Kafka custom",
    "start": "827920",
    "end": "834600"
  },
  {
    "text": "resource so you define your streamy Kafka custom resource uh with all the G",
    "start": "834600",
    "end": "839839"
  },
  {
    "text": "configuration to keeper configuration if you're using to keeper and then you can add the toic operator as one property in",
    "start": "839839",
    "end": "846160"
  },
  {
    "text": "there it's very easy and I call it standard model you you can see up here uh we have a single name space topic",
    "start": "846160",
    "end": "853320"
  },
  {
    "text": "operator and Kafka run running inside it and also you may want to also have your",
    "start": "853320",
    "end": "859199"
  },
  {
    "text": "cka topic Uh custom resource in there another deployment mode is the",
    "start": "859199",
    "end": "866680"
  },
  {
    "text": "Standalone where you have the topical run in its own name space Maybe we also",
    "start": "866680",
    "end": "873120"
  },
  {
    "text": "hosting the CFA topics but they could be hosted also in in a different name space if you want that's you can configure",
    "start": "873120",
    "end": "880040"
  },
  {
    "text": "that and the CFA service you can see is running in another name space which",
    "start": "880040",
    "end": "886120"
  },
  {
    "text": "could also be it can also be an external service to",
    "start": "886120",
    "end": "891320"
  },
  {
    "text": "the kubernetes cluster so it can be a cloud service Amazon msk for example so",
    "start": "891320",
    "end": "897360"
  },
  {
    "text": "the topic operator of you this flexibility to connect to external cka service if you really need it so you you",
    "start": "897360",
    "end": "903360"
  },
  {
    "text": "can only use the topic operator if it's needed for your use case of course the the topic op supports",
    "start": "903360",
    "end": "911720"
  },
  {
    "text": "various security methods TLS and S authentications against the target C claster so uh that's fully configurable",
    "start": "911720",
    "end": "921199"
  },
  {
    "text": "and you can make a use of it so how kab looks like you can see",
    "start": "921199",
    "end": "926759"
  },
  {
    "text": "here a simple example of that it's y file um you see that that we have a nam",
    "start": "926759",
    "end": "933319"
  },
  {
    "text": "space castr.io with a version for Davi the kind of cka topic and we have three",
    "start": "933319",
    "end": "941000"
  },
  {
    "text": "major sections that you have to Define uh metadata specification and Status um",
    "start": "941000",
    "end": "947279"
  },
  {
    "text": "which you don't have to Define but it's updated by the by the platform uh so in the metadata part you",
    "start": "947279",
    "end": "955319"
  },
  {
    "text": "you can see we have a specific labels which indicates what's thep CL cluster",
    "start": "955319",
    "end": "961079"
  },
  {
    "text": "uh and you can see that only specify one can only specify one cluster one set of",
    "start": "961079",
    "end": "966319"
  },
  {
    "text": "labels for for my cluster uh then we have the name of the topic of course and",
    "start": "966319",
    "end": "972399"
  },
  {
    "text": "the specification part is where you specify you say what's what's the",
    "start": "972399",
    "end": "978399"
  },
  {
    "text": "configuration for your topic what how many partitions you want and how many replicas for it partition in this case",
    "start": "978399",
    "end": "984399"
  },
  {
    "text": "we have five partitions and three replicas the status part is created and",
    "start": "984399",
    "end": "989800"
  },
  {
    "text": "updated by the topic operator so when I see a new cka topic it tries to",
    "start": "989800",
    "end": "994839"
  },
  {
    "text": "reconcile all the desired state for this topic into the target Kafka cluster and",
    "start": "994839",
    "end": "1001880"
  },
  {
    "text": "then you it reports back a status update in the in the same CA topic resource",
    "start": "1001880",
    "end": "1007480"
  },
  {
    "text": "that you created and you can see in this case it's ready we have a time stamp uh",
    "start": "1007480",
    "end": "1013000"
  },
  {
    "text": "you see that the observe generation matches with the generation in the metadata it means that uh the operator",
    "start": "1013000",
    "end": "1019519"
  },
  {
    "text": "I've seen your changes and is working on that or already applied them to the to",
    "start": "1019519",
    "end": "1026360"
  },
  {
    "text": "the Target C cluster and in the St section we also add some useful information like the",
    "start": "1026360",
    "end": "1032760"
  },
  {
    "text": "topic you can see here which represents the Incarnation of this topic and for",
    "start": "1032760",
    "end": "1038918"
  },
  {
    "text": "example if someone deletes the topic inside Kafka out of band and recreate",
    "start": "1038919",
    "end": "1044199"
  },
  {
    "text": "them um uh with the same name then this will have a topic ID so that's how you",
    "start": "1044199",
    "end": "1050880"
  },
  {
    "text": "can detect this operation uh now I would like to speak",
    "start": "1050880",
    "end": "1057600"
  },
  {
    "text": "about some history and and future for for the for this component um and what",
    "start": "1057600",
    "end": "1063799"
  },
  {
    "text": "we we want to do so we started in 2018 one of the first or the first",
    "start": "1063799",
    "end": "1069640"
  },
  {
    "text": "release of streamy that already included the topic operator we call it old generation now um it U it had uh the",
    "start": "1069640",
    "end": "1079760"
  },
  {
    "text": "So-Cal B directional reconciliation which kind of is is a",
    "start": "1079760",
    "end": "1085200"
  },
  {
    "text": "departure from the standard operator model where you typically um reconcile",
    "start": "1085200",
    "end": "1092559"
  },
  {
    "text": "cka uh kubernetes resources to a Target system it's one way so from kubernetes",
    "start": "1092559",
    "end": "1098919"
  },
  {
    "text": "to the Target system in this case um we uh opted for the B directional",
    "start": "1098919",
    "end": "1104600"
  },
  {
    "text": "reconciliation so reconciling C Copic changes from what is from Copic",
    "start": "1104600",
    "end": "1110679"
  },
  {
    "text": "resources and and uh changes coming from directly from CFA from people using for",
    "start": "1110679",
    "end": "1116360"
  },
  {
    "text": "example common line tools to create the on topic or the admin client uh so we",
    "start": "1116360",
    "end": "1122039"
  },
  {
    "text": "knew that uh Mo a lot of application create their their own topics so it's a",
    "start": "1122039",
    "end": "1127640"
  },
  {
    "text": "common practice and the platform and C allows you to do that so at the time we",
    "start": "1127640",
    "end": "1133240"
  },
  {
    "text": "thought that it was a good idea to uh provide B directional reconciliation so",
    "start": "1133240",
    "end": "1138600"
  },
  {
    "text": "that if you create some topic inside Kafka directly it will be materialized",
    "start": "1138600",
    "end": "1144000"
  },
  {
    "text": "of CFA topic resource in kubernetes but that that's came with their own",
    "start": "1144000",
    "end": "1149039"
  },
  {
    "text": "challenges and complexity um which for example made the",
    "start": "1149039",
    "end": "1154640"
  },
  {
    "text": "application stateful because in order to detect changes coming from both sides kubernetes and Kafka you need to compare",
    "start": "1154640",
    "end": "1163200"
  },
  {
    "text": "these changes against um source of truths uh which which is Tau in this",
    "start": "1163200",
    "end": "1169039"
  },
  {
    "text": "case locally in the local storage um uh with that you can detect what change um",
    "start": "1169039",
    "end": "1177080"
  },
  {
    "text": "and also for example if is needed if you get some Conflict for the same",
    "start": "1177080",
    "end": "1182200"
  },
  {
    "text": "configuration change on both sides at the same time the operator then needs to apply some winner policy or for example",
    "start": "1182200",
    "end": "1189000"
  },
  {
    "text": "with an error uh but it it needs to have this local storage the topic metad",
    "start": "1189000",
    "end": "1194320"
  },
  {
    "text": "stored locally in order to to do this three-way merage so as you see this added a lot of",
    "start": "1194320",
    "end": "1200799"
  },
  {
    "text": "complexity and during the time we also improved a little bit we fixed some some",
    "start": "1200799",
    "end": "1208080"
  },
  {
    "text": "bugs that came out um and also rewrite some parts using the C streams API um",
    "start": "1208080",
    "end": "1217320"
  },
  {
    "text": "but still we were were using B directional reconciliation and say it",
    "start": "1217320",
    "end": "1223480"
  },
  {
    "text": "was also Z reconciliation meaning one Topic at a time uh one topic event at a time",
    "start": "1223480",
    "end": "1229240"
  },
  {
    "text": "uh it was class but still had some limitation on the scaling side then in last year um we uh analyze",
    "start": "1229240",
    "end": "1240440"
  },
  {
    "text": "all these issues scaling issues and other issues that we had in the past with B directional uh reconciliation and",
    "start": "1240440",
    "end": "1248400"
  },
  {
    "text": "had to um Implement to reimplement topic operator with a new",
    "start": "1248400",
    "end": "1254559"
  },
  {
    "text": "architecture which is more maintainable has better scaling and the main thing here is that we",
    "start": "1254559",
    "end": "1262120"
  },
  {
    "text": "switch semantically the reconciliation from being B directional to being un",
    "start": "1262120",
    "end": "1267440"
  },
  {
    "text": "directional so now we are following exactly the operator pattern and uh all",
    "start": "1267440",
    "end": "1273600"
  },
  {
    "text": "your changes will be done inside kubernetes and this will be um",
    "start": "1273600",
    "end": "1279880"
  },
  {
    "text": "reconciled against the target C cluster and there is no way the other way around so if you do some changes out of band",
    "start": "1279880",
    "end": "1287919"
  },
  {
    "text": "directly in the operator will try to rever them according to your cka specification if",
    "start": "1287919",
    "end": "1293559"
  },
  {
    "text": "there is one um so if you create a new topic directly in Kafka it won't be",
    "start": "1293559",
    "end": "1300520"
  },
  {
    "text": "materialized automatically in kubernetes but you need to create the CF resource",
    "start": "1300520",
    "end": "1305679"
  },
  {
    "text": "and at that point the operator the topic operator will start managing and reconciling it um we also made made it B",
    "start": "1305679",
    "end": "1316200"
  },
  {
    "text": "so the conation is now um using batching together multiple topic",
    "start": "1316200",
    "end": "1322799"
  },
  {
    "text": "event and reconciling them with a single request against the cka target cluster",
    "start": "1322799",
    "end": "1330799"
  },
  {
    "text": "um because this is what the admin kka allows you to do and we take advantage",
    "start": "1330799",
    "end": "1336159"
  },
  {
    "text": "of that finally and most most importantly we also now support crust",
    "start": "1336159",
    "end": "1341799"
  },
  {
    "text": "which is as you know um as you know to keeper is um deprecated and will be",
    "start": "1341799",
    "end": "1349200"
  },
  {
    "text": "removed in CA for. and the old generation has a strong",
    "start": "1349200",
    "end": "1355159"
  },
  {
    "text": "dependency on on to and so the the the new one supports B mode so you can run",
    "start": "1355159",
    "end": "1360600"
  },
  {
    "text": "it with keeper or craft so the these are both supported the new generation became GA",
    "start": "1360600",
    "end": "1367840"
  },
  {
    "text": "in the latest release few weeks ago 041 where we also have a new feature big",
    "start": "1367840",
    "end": "1374400"
  },
  {
    "text": "feature which is called replication Factor change uh that makes really easy to to change the replication factor",
    "start": "1374400",
    "end": "1380919"
  },
  {
    "text": "which was one of the things that the old operator couldn't do uh and also of",
    "start": "1380919",
    "end": "1386000"
  },
  {
    "text": "course some minor improvements um we will talk a bit more about the replication Factor change",
    "start": "1386000",
    "end": "1392159"
  },
  {
    "text": "later on in the presentation and for the future uh so we",
    "start": "1392159",
    "end": "1397200"
  },
  {
    "text": "still have some backlog of things we would like to work on and and explore more uh this has not not ready yet but",
    "start": "1397200",
    "end": "1404760"
  },
  {
    "text": "uh some user ask for multi spin reconciliation and we will talk a bit about this at the",
    "start": "1404760",
    "end": "1411640"
  },
  {
    "text": "end of the presentation and also management allegation so I want to",
    "start": "1411640",
    "end": "1416880"
  },
  {
    "text": "restrict in some way uh what the user can do with topics uh so this is an area",
    "start": "1416880",
    "end": "1423320"
  },
  {
    "text": "that we can explore further and create new features",
    "start": "1423320",
    "end": "1428158"
  },
  {
    "text": "on here just a quick recap uh between the old generation and the new generation of the topic operator old",
    "start": "1428720",
    "end": "1435640"
  },
  {
    "text": "generation has B directional Ser consideration the new one is just unidirectional and bch",
    "start": "1435640",
    "end": "1442440"
  },
  {
    "text": "Reconciliation um stateful application for the old stateless application for the new generation which make it lighter",
    "start": "1442440",
    "end": "1449000"
  },
  {
    "text": "and faster uh and so out of this comes improved scalability of course um we",
    "start": "1449000",
    "end": "1455799"
  },
  {
    "text": "have a simplified architecture so the internal components of the topic operator application um well really well",
    "start": "1455799",
    "end": "1462279"
  },
  {
    "text": "defined and and they it's it's less moving Parts let me",
    "start": "1462279",
    "end": "1467480"
  },
  {
    "text": "say easier human team uh and of course we support both both zuk and craft in",
    "start": "1467480",
    "end": "1473559"
  },
  {
    "text": "the New Generation Um what were the old gener",
    "start": "1473559",
    "end": "1479320"
  },
  {
    "text": "generation issues mainly as I said it was hard to maintain because of internal",
    "start": "1479320",
    "end": "1484399"
  },
  {
    "text": "complexity some corer cases were are not still well understood there is we fix a",
    "start": "1484399",
    "end": "1490640"
  },
  {
    "text": "lot of bugs and and we did improvements and it was running fine uh for most",
    "start": "1490640",
    "end": "1496159"
  },
  {
    "text": "customers but some of them for example hit this invalid state store exception",
    "start": "1496159",
    "end": "1501279"
  },
  {
    "text": "issue which was really hard to work around and we kind of mitigated um the",
    "start": "1501279",
    "end": "1507880"
  },
  {
    "text": "occurrence of that issue but there is no proper fix um you now don't don't have",
    "start": "1507880",
    "end": "1513240"
  },
  {
    "text": "to worry about it because it's in the new the new implementation is not affected by that but if you are curious",
    "start": "1513240",
    "end": "1519000"
  },
  {
    "text": "and wants to know more and also find some work around you can you can go click on this link and you you go direct",
    "start": "1519000",
    "end": "1526200"
  },
  {
    "text": "to the issue in description and discussion uh limited scalability was another issue",
    "start": "1526200",
    "end": "1532399"
  },
  {
    "text": "some customer reported that when they start to creating lots of topics and partitions performance uh starts to uh",
    "start": "1532399",
    "end": "1540039"
  },
  {
    "text": "go down a little bit uh this is the result of some defign choices one of",
    "start": "1540039",
    "end": "1545840"
  },
  {
    "text": "them is that reconcile one Topic at a time another one is that he needs to update a persistent storage which makes",
    "start": "1545840",
    "end": "1552039"
  },
  {
    "text": "operations a lot um um slower uh and",
    "start": "1552039",
    "end": "1557840"
  },
  {
    "text": "then finally it requires to keeper which is going away soon in",
    "start": "1557840",
    "end": "1563520"
  },
  {
    "text": "gafka uh the new generation brings as I said a set of n features already and we",
    "start": "1563520",
    "end": "1571279"
  },
  {
    "text": "will see hopefully more in the future um first of all scale much better you can",
    "start": "1571279",
    "end": "1576520"
  },
  {
    "text": "see here on the right we have a small diagram that I created out of some custom load test uh so take the numbers",
    "start": "1576520",
    "end": "1584480"
  },
  {
    "text": "as they are uh but I I want just to compare perform perance on on a a",
    "start": "1584480",
    "end": "1590039"
  },
  {
    "text": "control environment like my laptop in this case um the workload that I'm",
    "start": "1590039",
    "end": "1595840"
  },
  {
    "text": "sending for this L test is a mixer workload with topic Creations um",
    "start": "1595840",
    "end": "1600880"
  },
  {
    "text": "configuration changes and topic deletions all executed in parallel by some uh clients uh and then you see on",
    "start": "1600880",
    "end": "1608440"
  },
  {
    "text": "the xaxis um a number of batches of events each data point represents a",
    "start": "1608440",
    "end": "1614360"
  },
  {
    "text": "batch of events so how many topic events I'm generating for this test and on the y axis you see the time so",
    "start": "1614360",
    "end": "1621120"
  },
  {
    "text": "the end to end reconciliation in seconds uh the blue line is the the new",
    "start": "1621120",
    "end": "1626399"
  },
  {
    "text": "implementation of the topic operator and you can see that this scills much better and has better performance",
    "start": "1626399",
    "end": "1634520"
  },
  {
    "text": "overall uh speaking about new features we now support some managing a topic uh",
    "start": "1634520",
    "end": "1640480"
  },
  {
    "text": "in addition to posing the reconciliation so this is useful for example if you",
    "start": "1640480",
    "end": "1645600"
  },
  {
    "text": "want to delete a cka custom Kafka topic results in kubernetes but don't want to",
    "start": "1645600",
    "end": "1651799"
  },
  {
    "text": "delete the topic inside CFA you you simply want to start and managing but the topic is still needed by some",
    "start": "1651799",
    "end": "1657080"
  },
  {
    "text": "application so in this case you with a simple annotation you you you create The annotation the Copic and the topic",
    "start": "1657080",
    "end": "1664919"
  },
  {
    "text": "operator will start to ignore uh this cpic results from now on so you can",
    "start": "1664919",
    "end": "1671880"
  },
  {
    "text": "delete it and the the garbage kubernetes garbage collector will remove it from",
    "start": "1671880",
    "end": "1677720"
  },
  {
    "text": "from the CL but the topic is still uh in in the Kafka Target",
    "start": "1677720",
    "end": "1682960"
  },
  {
    "text": "cluster as I said we support replication Factor change easily by editing the Copic results we will see more details",
    "start": "1682960",
    "end": "1690679"
  },
  {
    "text": "about that in a minute we enable finalizer by defa now which helps with topic topic deltion",
    "start": "1690679",
    "end": "1697880"
  },
  {
    "text": "events um there is a problem in the old implementation where for example your",
    "start": "1697880",
    "end": "1703240"
  },
  {
    "text": "your topic operator is not running for for any reason maybe there is some maintenance maybe there is some issue",
    "start": "1703240",
    "end": "1709640"
  },
  {
    "text": "but it's not running and if someone deletes a Copic inide kubernetes uh this",
    "start": "1709640",
    "end": "1715519"
  },
  {
    "text": "this event can be missed by the operator because it's not running and when it starts up it has no idea that there was",
    "start": "1715519",
    "end": "1721760"
  },
  {
    "text": "a division event but right now by default um the topic operator will",
    "start": "1721760",
    "end": "1728159"
  },
  {
    "text": "create a finalizer and attach to the cot topic resource so that if someone",
    "start": "1728159",
    "end": "1734559"
  },
  {
    "text": "deletes the topic the Copic resource is not actually delet by kubernetes it",
    "start": "1734559",
    "end": "1739960"
  },
  {
    "text": "stays there and the and when the topic opor starts again it will see the finalizer and complete the operation um",
    "start": "1739960",
    "end": "1747320"
  },
  {
    "text": "allowing then kubernetes to clean up the resource uh so that that's um a nice",
    "start": "1747320",
    "end": "1752960"
  },
  {
    "text": "Improvement in my opinion um and then we also in addition to the standard Magics",
    "start": "1752960",
    "end": "1759159"
  },
  {
    "text": "that you already had um in the old implementation because it's fully back",
    "start": "1759159",
    "end": "1765120"
  },
  {
    "text": "for compatible with the old implementation we added some additional Medics um you know that the topic",
    "start": "1765120",
    "end": "1772559"
  },
  {
    "text": "operator has to connect to external system in order to reconcile your cap",
    "start": "1772559",
    "end": "1778320"
  },
  {
    "text": "topics um and we track the performance um of this request to exteral system so",
    "start": "1778320",
    "end": "1784880"
  },
  {
    "text": "you have for each operation you have a metrix and this is disabled by default but if you enable it can use can be",
    "start": "1784880",
    "end": "1791440"
  },
  {
    "text": "useful for pinpointing performance issue to some specific uh stand service and by",
    "start": "1791440",
    "end": "1797679"
  },
  {
    "text": "that I I mean kubernetes API server cka cluster of course and now right now also",
    "start": "1797679",
    "end": "1805120"
  },
  {
    "text": "cruise control and can be also useful for law testing if you want to break it down uh",
    "start": "1805120",
    "end": "1811799"
  },
  {
    "text": "to the single or request performance replication Factor change so",
    "start": "1811799",
    "end": "1818679"
  },
  {
    "text": "that that's the one of the biggest new feature we we added recently um there",
    "start": "1818679",
    "end": "1825080"
  },
  {
    "text": "are some challenges here if you want to do replication Factor change for one of your topic",
    "start": "1825080",
    "end": "1832000"
  },
  {
    "text": "um cka provides a common line tool called cfar resign partitions which is",
    "start": "1832000",
    "end": "1838480"
  },
  {
    "text": "not complicated to use but the complicated part is to tell him which",
    "start": "1838480",
    "end": "1844080"
  },
  {
    "text": "leader and replica moments you have to do in order to increase your or decrease your replication",
    "start": "1844080",
    "end": "1849679"
  },
  {
    "text": "factor and you you need to do that without causing imbalance so that's really the complex part if you have a",
    "start": "1849679",
    "end": "1856240"
  },
  {
    "text": "cluster in production with hundreds of topic thousands of petitions",
    "start": "1856240",
    "end": "1861720"
  },
  {
    "text": "many users uh so basically what you need to do on your own uh and kfka does not",
    "start": "1861720",
    "end": "1868120"
  },
  {
    "text": "provide any support for that is to create a kind of workload model for your",
    "start": "1868120",
    "end": "1873880"
  },
  {
    "text": "cluster what's the incoming trafficing traffic how every broker is using the",
    "start": "1873880",
    "end": "1879880"
  },
  {
    "text": "CPU and the other resources like memory in dis uh because you want to move these",
    "start": "1879880",
    "end": "1885279"
  },
  {
    "text": "replicas partition replicas from one broker one other but without causing imbalance cluster imbalance so without",
    "start": "1885279",
    "end": "1891720"
  },
  {
    "text": "putting too much load on a broker maybe that is already overloaded so that's the tricky part and it's really you need to",
    "start": "1891720",
    "end": "1899519"
  },
  {
    "text": "develop your own custom model to in order to do that reliably uh that's where cruise control",
    "start": "1899519",
    "end": "1906159"
  },
  {
    "text": "helps uh it provides a resting Point called topic configuration which allows",
    "start": "1906159",
    "end": "1912000"
  },
  {
    "text": "you to exactly do that to change ration Factor leveraging the same ortic that is",
    "start": "1912000",
    "end": "1918039"
  },
  {
    "text": "for the balances which ensure that your movement are fine with the cluster",
    "start": "1918039",
    "end": "1924679"
  },
  {
    "text": "balance and the good news is also that it supports bch request um so we can",
    "start": "1924679",
    "end": "1930519"
  },
  {
    "text": "stack together multiple uh replication Factor changes if it's",
    "start": "1930519",
    "end": "1935840"
  },
  {
    "text": "needed uh I prepared a little demo here for you on this um you can see here on",
    "start": "1935840",
    "end": "1942360"
  },
  {
    "text": "the right I have my cluster already provisioned um it's it has for",
    "start": "1942360",
    "end": "1948880"
  },
  {
    "text": "three Brokers uh the topic operator deployed inside this entity operator pod",
    "start": "1948880",
    "end": "1955399"
  },
  {
    "text": "um along side with the user operator we deploy them together and also we have",
    "start": "1955399",
    "end": "1960880"
  },
  {
    "text": "cruise control so these are all part of the same cka results which deploy everything for you",
    "start": "1960880",
    "end": "1966360"
  },
  {
    "text": "automatically I also created the C topic this is similar to the definition we just saw in the",
    "start": "1966360",
    "end": "1973720"
  },
  {
    "text": "presentation um you can see we have in here five par s in the spe part and only",
    "start": "1973720",
    "end": "1980480"
  },
  {
    "text": "one replica um the topic is ready and we have some metadata like the topic ATD",
    "start": "1980480",
    "end": "1986360"
  },
  {
    "text": "available uh what I want to do now is to um ask to cka directly which is the",
    "start": "1986360",
    "end": "1993799"
  },
  {
    "text": "configuration of this topic and see if it matches what we asked for at to the",
    "start": "1993799",
    "end": "1999360"
  },
  {
    "text": "topic operator creating this C topic resource you can see here I'm just using the CFA topic command line tool provided",
    "start": "1999360",
    "end": "2007159"
  },
  {
    "text": "by Kafka connecting to my cka cluster provision here and I I'm telling I want",
    "start": "2007159",
    "end": "2013840"
  },
  {
    "text": "to description of this topic my top called my topic if I run this command a",
    "start": "2013840",
    "end": "2020000"
  },
  {
    "text": "new P will spin up uh just to do this operation okay you can see now that we",
    "start": "2020000",
    "end": "2026519"
  },
  {
    "text": "have the configuration printed out and we have five partitions and one replica",
    "start": "2026519",
    "end": "2033600"
  },
  {
    "text": "which match is exactly what we have here so you can can see that the topic",
    "start": "2033600",
    "end": "2039440"
  },
  {
    "text": "operator did this job well really well we have the same configurations that we",
    "start": "2039440",
    "end": "2044679"
  },
  {
    "text": "have specified in the uh spec part um you can see some additional",
    "start": "2044679",
    "end": "2050280"
  },
  {
    "text": "configuration here which are basically inherited by the cluster default so they",
    "start": "2050280",
    "end": "2055800"
  },
  {
    "text": "they are not part of the original specification but they added automatically by the by",
    "start": "2055800",
    "end": "2061480"
  },
  {
    "text": "cka um you can see that we have our five partitions and only one replica so now",
    "start": "2061480",
    "end": "2068919"
  },
  {
    "text": "in order to change the replication factor I just can simply edit the CTIC",
    "start": "2068919",
    "end": "2075079"
  },
  {
    "text": "result called my topic so I'm using the topic name here and then with the editor you prefer",
    "start": "2075079",
    "end": "2083240"
  },
  {
    "text": "then you go to the spec part replicas and I can change from one to three for example um and then I will save the",
    "start": "2083240",
    "end": "2091760"
  },
  {
    "text": "change and as you can see down here in the status part we now have a replic",
    "start": "2091760",
    "end": "2097960"
  },
  {
    "text": "change uh section which reveals that the topic operator detected your change and",
    "start": "2097960",
    "end": "2104599"
  },
  {
    "text": "it contacted cruise control creating a task for applying this uh configuration change creating the new in this case",
    "start": "2104599",
    "end": "2111760"
  },
  {
    "text": "creating the new um partition and it has a session ID which the operator uses to",
    "start": "2111760",
    "end": "2118800"
  },
  {
    "text": "pull periodically uh the outcome of this task you see that it already it was already",
    "start": "2118800",
    "end": "2124839"
  },
  {
    "text": "completed the task is executed asynchronously as we have seen R control",
    "start": "2124839",
    "end": "2130320"
  },
  {
    "text": "requires some time to apply the change but it's not too much depending on the volume of R change that you had uh and",
    "start": "2130320",
    "end": "2139320"
  },
  {
    "text": "now you don't have to trust me that we can check again the same command for the",
    "start": "2139320",
    "end": "2145800"
  },
  {
    "text": "C configuration and you can see that we now have five partitions replication",
    "start": "2145800",
    "end": "2151920"
  },
  {
    "text": "Factor count three and for each partition you see now we have uh three",
    "start": "2151920",
    "end": "2158079"
  },
  {
    "text": "replicas well balanced in the cluster so going back to the",
    "start": "2158079",
    "end": "2165440"
  },
  {
    "text": "presentation uh let's see multin name space reconciliation uh so this is",
    "start": "2166119",
    "end": "2172440"
  },
  {
    "text": "something that we currently do not support uh but it's something that came",
    "start": "2172440",
    "end": "2178640"
  },
  {
    "text": "out from from you from users from the community um they would like to see",
    "start": "2178640",
    "end": "2184520"
  },
  {
    "text": "support for reconciliation on multiple needs spaces um because the use case is",
    "start": "2184520",
    "end": "2191359"
  },
  {
    "text": "uh I have my applications here running um and I would like to restrict the",
    "start": "2191359",
    "end": "2197880"
  },
  {
    "text": "access to these name application name spaces so I would like them to also host",
    "start": "2197880",
    "end": "2203560"
  },
  {
    "text": "the cka toopics so each application will OST its own Copic so then the",
    "start": "2203560",
    "end": "2208680"
  },
  {
    "text": "administrator don't have to give permission to the infrastructure part which is topic operator for example",
    "start": "2208680",
    "end": "2214880"
  },
  {
    "text": "cka and it's also use case about share with kfka so you know that you can have",
    "start": "2214880",
    "end": "2221920"
  },
  {
    "text": "uh you can you can use Kafka to various use cases and with various applications",
    "start": "2221920",
    "end": "2227960"
  },
  {
    "text": "so you can have one shared cka cluster uh supporting all of them uh but the",
    "start": "2227960",
    "end": "2234440"
  },
  {
    "text": "problem here is that Kafka has limited support for multi tency so there is some",
    "start": "2234440",
    "end": "2240000"
  },
  {
    "text": "support but for example if you have uh some topic uh two topics with the same",
    "start": "2240000",
    "end": "2245040"
  },
  {
    "text": "name running on two different name spaces for example KT Z here uh so how do you",
    "start": "2245040",
    "end": "2252560"
  },
  {
    "text": "reconcile them how do you map them into the target CL class so that's something that is uh right now is not possible",
    "start": "2252560",
    "end": "2259440"
  },
  {
    "text": "it's not supported but we would like maybe to see implemented but uh we need to we just started to think about it we",
    "start": "2259440",
    "end": "2267520"
  },
  {
    "text": "need a formal propos the same proposal for that uh one one way to support that will be to of course um use a prefix",
    "start": "2267520",
    "end": "2276240"
  },
  {
    "text": "with with the topic name uh putting inside the name space and cka",
    "start": "2276240",
    "end": "2281640"
  },
  {
    "text": "support that using the create topic policy interface that can be used but",
    "start": "2281640",
    "end": "2287000"
  },
  {
    "text": "then you also need to think about Ro based Access Control reconciliation because the topic of it need need to",
    "start": "2287000",
    "end": "2293760"
  },
  {
    "text": "access the Copic and reconcile them in these various name spaces how you to",
    "start": "2293760",
    "end": "2298960"
  },
  {
    "text": "specify which name spaces to reconcile and uh it will be good also to have",
    "start": "2298960",
    "end": "2304560"
  },
  {
    "text": "coordination with what we do for the user operator which has the basically the same need and so",
    "start": "2304560",
    "end": "2311319"
  },
  {
    "text": "it we don't need proposal that covers both of them can be different but maybe",
    "start": "2311319",
    "end": "2318960"
  },
  {
    "text": "we we will need to share the solution and and apply um consistent pattern for",
    "start": "2318960",
    "end": "2324880"
  },
  {
    "text": "both of them uh finally I want to touch on some",
    "start": "2324880",
    "end": "2331000"
  },
  {
    "text": "risk conditions that you need to be aware of um you you can have multiple C topic",
    "start": "2331000",
    "end": "2338760"
  },
  {
    "text": "created at the same time the topic operator will reconcile them fine and",
    "start": "2338760",
    "end": "2344440"
  },
  {
    "text": "and for for the first one it will be actually reconciled will managing the",
    "start": "2344440",
    "end": "2350359"
  },
  {
    "text": "topic the other will get resource conflict pointing to the to the Copic",
    "start": "2350359",
    "end": "2356640"
  },
  {
    "text": "that was reconciled successfully so this can happen if you have multiple teams",
    "start": "2356640",
    "end": "2361720"
  },
  {
    "text": "working on the same cluster another risk condition that you need to be aware of is application automatic creating their",
    "start": "2361720",
    "end": "2368000"
  },
  {
    "text": "own topics this is why this is the reason why we initially use the B directional",
    "start": "2368000",
    "end": "2373839"
  },
  {
    "text": "reconciliation here you can the topic operator can do much you can for example",
    "start": "2373839",
    "end": "2379839"
  },
  {
    "text": "disable the automatic topic creation but then application can use the admin client to create their own topic so the",
    "start": "2379839",
    "end": "2386400"
  },
  {
    "text": "best uh suggestion is to call your applications to wait for the topic creation and finally the operator uh R",
    "start": "2386400",
    "end": "2395240"
  },
  {
    "text": "cruise control Dynamic throttle configs this this was a recent B report um and",
    "start": "2395240",
    "end": "2401800"
  },
  {
    "text": "the cruise control adds this Dynamic topic configurations while doing re balancy in order to reduce the impact of",
    "start": "2401800",
    "end": "2408359"
  },
  {
    "text": "moving that around onto the uh cluster client uh the operator should ignore",
    "start": "2408359",
    "end": "2414800"
  },
  {
    "text": "that instead it is tries to reverse it so we are already working on a fix and",
    "start": "2414800",
    "end": "2420400"
  },
  {
    "text": "if you go to this link you you can find the discussion and there is also workaround presented there which can be",
    "start": "2420400",
    "end": "2426480"
  },
  {
    "text": "applied in the me time uh that's basically it I'm leaving",
    "start": "2426480",
    "end": "2432520"
  },
  {
    "text": "you with list of um uh links useful links the first one is the official",
    "start": "2432520",
    "end": "2438839"
  },
  {
    "text": "documentation streamy documentation about the topic operator then you have an nice blog post where we introduce the",
    "start": "2438839",
    "end": "2445760"
  },
  {
    "text": "the new semantic un directional uh switch and we have some more details in",
    "start": "2445760",
    "end": "2452400"
  },
  {
    "text": "there if you're curious and then if you really want to know the the details of the mentation you have these three",
    "start": "2452400",
    "end": "2458640"
  },
  {
    "text": "design proposal uh one covering the initial Rel the design and then topic",
    "start": "2458640",
    "end": "2464960"
  },
  {
    "text": "replication Factor change and also we had some performance test to ensure that",
    "start": "2464960",
    "end": "2470880"
  },
  {
    "text": "the performance of the topic now in case of any big change can be",
    "start": "2470880",
    "end": "2477000"
  },
  {
    "text": "verified uh that's basically all I have to for you today thank you thank you for",
    "start": "2477160",
    "end": "2485040"
  },
  {
    "text": "watching thank you fed so we are actually on time there is no time for",
    "start": "2485040",
    "end": "2491839"
  },
  {
    "text": "questions maybe let's grab just one maybe a quick one sure uh and then you",
    "start": "2491839",
    "end": "2499960"
  },
  {
    "text": "can stick around answering the others uh from Patric am I understanding this",
    "start": "2499960",
    "end": "2505240"
  },
  {
    "text": "correctly that running cras control is a prerequisite for changing replicas via topic",
    "start": "2505240",
    "end": "2510280"
  },
  {
    "text": "operator yes yes if you don't have um cruise control enabled then you will get",
    "start": "2510280",
    "end": "2517000"
  },
  {
    "text": "an error like like the old Behavior with the old implementation so it will say okay change appication factor is not",
    "start": "2517000",
    "end": "2523839"
  },
  {
    "text": "supported but as soon as you enable the integration which is uh basically uh",
    "start": "2523839",
    "end": "2530359"
  },
  {
    "text": "just a change in the CF custom resource then your this possibility this functionality",
    "start": "2530359",
    "end": "2537280"
  },
  {
    "text": "will be automatically enabled and and then you will start getting this your F okay let me get just one um and then",
    "start": "2537280",
    "end": "2546520"
  },
  {
    "text": "you can answer the others there can you detect and report and manage topics that",
    "start": "2546520",
    "end": "2551599"
  },
  {
    "text": "are in the cluster yes yes of course you can you",
    "start": "2551599",
    "end": "2557400"
  },
  {
    "text": "can query using T CTL um and uh you mean maybe you mean if",
    "start": "2557400",
    "end": "2564800"
  },
  {
    "text": "there is any tool that can detect and manage topics uh so we don't have this right now this can be one of the",
    "start": "2564800",
    "end": "2571640"
  },
  {
    "text": "Improvement we can add so some tool that uh allows you to automatically create",
    "start": "2571640",
    "end": "2577200"
  },
  {
    "text": "looking at CF cluster the cfop results in sub kubernetes so that will be",
    "start": "2577200",
    "end": "2582880"
  },
  {
    "text": "something that we also mention in the design proposal original design proposal",
    "start": "2582880",
    "end": "2588520"
  },
  {
    "text": "like something that will be useful so looking looking at Kafka uh please",
    "start": "2588520",
    "end": "2593599"
  },
  {
    "text": "create Copic resource for each of the Copic you see there okay and then the last one and I",
    "start": "2593599",
    "end": "2600359"
  },
  {
    "text": "will leave uh I guess the most complex one on the chat um because I think that",
    "start": "2600359",
    "end": "2605720"
  },
  {
    "text": "this one is fast uh is the cube C Kafka command line tool something internal to Red that seems really useful no I guess",
    "start": "2605720",
    "end": "2612720"
  },
  {
    "text": "from the demo right yeah yeah so so that's just um a nice shortcut bash alas",
    "start": "2612720",
    "end": "2618760"
  },
  {
    "text": "that I created for me it's not anything complicated it's just keep C run command",
    "start": "2618760",
    "end": "2625720"
  },
  {
    "text": "specifying an image it's actually using the the official Kafka image which is",
    "start": "2625720",
    "end": "2630760"
  },
  {
    "text": "was released recently so it's just some good V areas that I can share if anyone",
    "start": "2630760",
    "end": "2636520"
  },
  {
    "text": "is interested it's just some way to quickly test uh uh with with the",
    "start": "2636520",
    "end": "2642240"
  },
  {
    "text": "standard uh Kafka clients okay thank you fed there is just",
    "start": "2642240",
    "end": "2647800"
  },
  {
    "text": "one question I will leave it to you on the chat right after yeah during the",
    "start": "2647800",
    "end": "2654559"
  },
  {
    "text": "break around so thank you very much for your session and uh for the yeah for the",
    "start": "2654559",
    "end": "2660520"
  },
  {
    "text": "attendees uh we'll see at this point in five minutes last coffee break before",
    "start": "2660520",
    "end": "2666720"
  },
  {
    "text": "the last session see you later thank you bye",
    "start": "2666720",
    "end": "2674359"
  }
]