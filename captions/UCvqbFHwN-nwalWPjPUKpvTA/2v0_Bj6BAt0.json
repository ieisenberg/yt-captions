[
  {
    "text": "welcome to the webinar on security provisioning Cloud resources using kivano and Crossbay",
    "start": "659",
    "end": "8220"
  },
  {
    "text": "before we get started just a quick blurb about me I'm ritesh Patel VP products",
    "start": "8220",
    "end": "14160"
  },
  {
    "text": "and co-founder at dermata nirmata is a company behind a popular open source policy engine called kuberno and nemata",
    "start": "14160",
    "end": "21300"
  },
  {
    "text": "provides policy and management and governance Solutions around kevarna in",
    "start": "21300",
    "end": "26699"
  },
  {
    "text": "terms of my background I have around 20 plus years experience in Enterprise software have worked in Motorola Nortel",
    "start": "26699",
    "end": "33899"
  },
  {
    "text": "trapeze brocade and also uh have an MBA from Berkeley as well as a masters in",
    "start": "33899",
    "end": "39960"
  },
  {
    "text": "computer science from Michigan State University so let's jump in",
    "start": "39960",
    "end": "45480"
  },
  {
    "text": "so as you all know kubernetes has become that de facto orchestrator for",
    "start": "45480",
    "end": "50820"
  },
  {
    "text": "containers and there's a lot of surveys talking about the adoption of kubernetes",
    "start": "50820",
    "end": "56879"
  },
  {
    "text": "the cncf survey mentions about 96 percent of Enterprises have either",
    "start": "56879",
    "end": "62640"
  },
  {
    "text": "started using kubernetes or other value evaluating it and what that what's also happening as",
    "start": "62640",
    "end": "69780"
  },
  {
    "text": "kubernetes becomes ubiquitous is that enterprises are building platforms on kubernetes so platform",
    "start": "69780",
    "end": "77880"
  },
  {
    "text": "engineering as as one of the top trends as as indicated by Gartner where",
    "start": "77880",
    "end": "83040"
  },
  {
    "text": "platform teams are leveraging kubernetes as that orchestration layer along with",
    "start": "83040",
    "end": "90780"
  },
  {
    "text": "other components uh could be open source could be proprietary components to build",
    "start": "90780",
    "end": "96780"
  },
  {
    "text": "internal developer platforms and then developers in those organizations are",
    "start": "96780",
    "end": "101939"
  },
  {
    "text": "consuming the internal platform and this really helps developers focus",
    "start": "101939",
    "end": "109680"
  },
  {
    "text": "on their applications focus on their workflows and not really have to deal",
    "start": "109680",
    "end": "115259"
  },
  {
    "text": "with the operations and and the nitty-gritty details of keeping the infrastructure up and running",
    "start": "115259",
    "end": "121520"
  },
  {
    "text": "configuring kubernetes securely things of that nature right so that's really",
    "start": "121520",
    "end": "126659"
  },
  {
    "text": "what's uh it's a key Trend as as we see it um there's a lot of you know",
    "start": "126659",
    "end": "133580"
  },
  {
    "text": "literature a lot of uh kind of content out there on on why platform engineering",
    "start": "133580",
    "end": "139260"
  },
  {
    "text": "the benefits but we won't get into that we'll focus more on on the topic um on",
    "start": "139260",
    "end": "144540"
  },
  {
    "text": "hand so as as uh we know and you know as as we've heard kubernetes is is really",
    "start": "144540",
    "end": "151680"
  },
  {
    "text": "effective really um you know um kind of helpful in in uh you know",
    "start": "151680",
    "end": "159239"
  },
  {
    "text": "managing applications containers at scale but it's also very complex to secure and and is you know scale the",
    "start": "159239",
    "end": "167280"
  },
  {
    "text": "platform itself uh there's a lot of uh you know uh different uh surveys that",
    "start": "167280",
    "end": "173819"
  },
  {
    "text": "have that have uh shown that you know in this increase in security issues as",
    "start": "173819",
    "end": "180840"
  },
  {
    "text": "you know uh 93 you know of users have reported at least one security incident",
    "start": "180840",
    "end": "187040"
  },
  {
    "text": "uh a lot of it is related to misconfigurations because kubernetes is is uh uses a declarative way of of",
    "start": "187040",
    "end": "195120"
  },
  {
    "text": "defining applications as well as the infrastructure and any misconfigurations could potentially open up uh an attack",
    "start": "195120",
    "end": "203400"
  },
  {
    "text": "Vector right so that's really why uh kubernetes has become very uh you know",
    "start": "203400",
    "end": "209159"
  },
  {
    "text": "uh kind of it's very difficult to scale kubernetes especially",
    "start": "209159",
    "end": "214319"
  },
  {
    "text": "um as as um you know the demand grows and as as the infrastructure itself grows so",
    "start": "214319",
    "end": "220260"
  },
  {
    "text": "kubernetes becomes more complex to scare to secure as one scales with",
    "start": "220260",
    "end": "226500"
  },
  {
    "text": "scales the infrastructure another challenge or another issue is",
    "start": "226500",
    "end": "232620"
  },
  {
    "text": "you know as misconfigurations are um are prevalent in kubernetes uh and and",
    "start": "232620",
    "end": "239700"
  },
  {
    "text": "one of the top issues the cost of of finding these configurations tends to be",
    "start": "239700",
    "end": "245640"
  },
  {
    "text": "high if if these misconfigurations are found late in your development cycle",
    "start": "245640",
    "end": "251280"
  },
  {
    "text": "right so there's research that shows that misconfigurations are",
    "start": "251280",
    "end": "256699"
  },
  {
    "text": "orders of magnitude costly to fix in production instead of you know finding them early",
    "start": "256699",
    "end": "263040"
  },
  {
    "text": "in your you know coding or testing cycle and and that",
    "start": "263040",
    "end": "268139"
  },
  {
    "text": "itself is is a is a huge Challenge and and something that enterprises are looking",
    "start": "268139",
    "end": "274500"
  },
  {
    "text": "to address so in the next few slides we'll talk about how some of these issues can be solved using a combination",
    "start": "274500",
    "end": "281699"
  },
  {
    "text": "of Open Source projects like uh cross plane and keyboard",
    "start": "281699",
    "end": "286759"
  },
  {
    "text": "so cross plane is uh is a kubernetes is an open source project it's a kubernetes",
    "start": "287940",
    "end": "293940"
  },
  {
    "text": "native uh you know provisioning engine for uh Cloud resources right so it",
    "start": "293940",
    "end": "302160"
  },
  {
    "text": "allows you to provision um Cloud resources or or it could be other applications it's it can be it's",
    "start": "302160",
    "end": "308880"
  },
  {
    "text": "actually very extensible um and and enables infrastructure as code so basically you can it it uh it",
    "start": "308880",
    "end": "317520"
  },
  {
    "text": "defines a set of Uh custom resource definitions that these controllers",
    "start": "317520",
    "end": "322800"
  },
  {
    "text": "um you know Monitor and then you can use kubernetes native yaml to describe",
    "start": "322800",
    "end": "329400"
  },
  {
    "text": "the resources and the controllers will um you know once those the yaml is",
    "start": "329400",
    "end": "335039"
  },
  {
    "text": "applied to the cluster the controllers will provision those resources based on the configuration described in the yaml",
    "start": "335039",
    "end": "341759"
  },
  {
    "text": "the benefit of this approach is that you can leverage full power of kubernetes like",
    "start": "341759",
    "end": "347340"
  },
  {
    "text": "policies namespaces you know role-based access controls and so on it also allows",
    "start": "347340",
    "end": "353460"
  },
  {
    "text": "you to you know it it can actually you know monitor state of your resources",
    "start": "353460",
    "end": "359639"
  },
  {
    "text": "that it can reconcile those resources from the uh from uh from from the cloud",
    "start": "359639",
    "end": "365639"
  },
  {
    "text": "right so that gives you uh you know a view into the the health or the status of your resources",
    "start": "365639",
    "end": "373139"
  },
  {
    "text": "um another benefit of using cross plane is you know creating abstraction so you",
    "start": "373139",
    "end": "378300"
  },
  {
    "text": "may have if you want to you know deploy multiple resources you can create an",
    "start": "378300",
    "end": "384060"
  },
  {
    "text": "abstraction to deploy multiple Cloud Resources with us with a single",
    "start": "384060",
    "end": "389819"
  },
  {
    "text": "um uh signal abstracted yaml and um now because this is uh done in a",
    "start": "389819",
    "end": "396600"
  },
  {
    "text": "kubernetes native manner it also allows for security and compliance",
    "start": "396600",
    "end": "402600"
  },
  {
    "text": "to be enforced uh at the at the the API",
    "start": "402600",
    "end": "408300"
  },
  {
    "text": "level level at the kubernetes level without exposing that complexity to developers so really enables that",
    "start": "408300",
    "end": "414060"
  },
  {
    "text": "self-service approach that enterprises are looking for and uh uh the community the crosswind",
    "start": "414060",
    "end": "421680"
  },
  {
    "text": "community has uh you know provide us for popular clouds like AWS gcp Azure so on",
    "start": "421680",
    "end": "429680"
  },
  {
    "text": "so for for enabling uh developer self-service using trust plane um kind of the way typically it's done",
    "start": "430440",
    "end": "437639"
  },
  {
    "text": "is by creating uh compositions cross brain compositions to",
    "start": "437639",
    "end": "443340"
  },
  {
    "text": "abstract all and infrastructure requirements uh that are needed to provision",
    "start": "443340",
    "end": "450479"
  },
  {
    "text": "um a particular you know service or or a particular kind of resource in in the",
    "start": "450479",
    "end": "456300"
  },
  {
    "text": "cloud right so for example if you want to provision",
    "start": "456300",
    "end": "461460"
  },
  {
    "text": "um you know a cluster in the cloud you may need you know to provision virtual VPN uh private networks maybe you need",
    "start": "461460",
    "end": "469919"
  },
  {
    "text": "to provision subnets security groups all of that can be complexity can be abstracted away from the developer and",
    "start": "469919",
    "end": "477300"
  },
  {
    "text": "the developer can just focus on um you know providing some basic information",
    "start": "477300",
    "end": "482699"
  },
  {
    "text": "um for for the resource and all of the details can be handled through composition so that makes it really help",
    "start": "482699",
    "end": "489720"
  },
  {
    "text": "useful for enabling developer self-service for cloud resources",
    "start": "489720",
    "end": "496919"
  },
  {
    "text": "so next let's look at Kevin so Kevin is a a policy inform enforcement a policy",
    "start": "496919",
    "end": "504479"
  },
  {
    "text": "engine and it can enforce policies in in kubernetes clusters so Cubano is a cncf",
    "start": "504479",
    "end": "511159"
  },
  {
    "text": "incubating project and it it runs as an admission controller in each cluster so",
    "start": "511159",
    "end": "517560"
  },
  {
    "text": "kubernet policies are written as kubernetes native yaml and can be",
    "start": "517560",
    "end": "524180"
  },
  {
    "text": "stored or you know in git or can be applied uh directly and uh you know when",
    "start": "524180",
    "end": "531839"
  },
  {
    "text": "when these policies are applied depending on how the policies are configured uh kibano can validate mutate",
    "start": "531839",
    "end": "538200"
  },
  {
    "text": "or generate configurations based on on policies you can also these policies typically",
    "start": "538200",
    "end": "545940"
  },
  {
    "text": "are used to prevent misconfigurations to ensure you know compliance with the",
    "start": "545940",
    "end": "552120"
  },
  {
    "text": "Enterprise standards or the or you know industry standards and these policies",
    "start": "552120",
    "end": "558720"
  },
  {
    "text": "can also be used to automate developer workflows um several examples in the community of",
    "start": "558720",
    "end": "564839"
  },
  {
    "text": "policies that can do automation for example when a new namespace is created it you know you can generate other",
    "start": "564839",
    "end": "572399"
  },
  {
    "text": "resources that may be needed for that namespace uh",
    "start": "572399",
    "end": "578279"
  },
  {
    "text": "in in the community there's tons of examples of policies",
    "start": "578279",
    "end": "583380"
  },
  {
    "text": "um you know right from Power security policies to workload security are back multi-tenancy Etc",
    "start": "583380",
    "end": "590360"
  },
  {
    "text": "so next let's look at the cavern architecture uh secure now as a uh",
    "start": "593580",
    "end": "599580"
  },
  {
    "text": "it runs as an admission controller so it it you know it when it is deployed web",
    "start": "599580",
    "end": "605399"
  },
  {
    "text": "hooks are configured uh you know validating and mutating where books are configured so that kuberno can receive",
    "start": "605399",
    "end": "612180"
  },
  {
    "text": "um every request that's made to the API server and then kivano has a collection of uh controllers which then act on the",
    "start": "612180",
    "end": "621240"
  },
  {
    "text": "APA on that request depending on the on the policy so it you know there's a controller that can",
    "start": "621240",
    "end": "627720"
  },
  {
    "text": "apply policies to that to the API request there's a background controller",
    "start": "627720",
    "end": "632880"
  },
  {
    "text": "which can keep checking if if uh if any of the policies I have been",
    "start": "632880",
    "end": "639120"
  },
  {
    "text": "um you know violated uh you know for by any of the existing resources so there's",
    "start": "639120",
    "end": "645600"
  },
  {
    "text": "uh there's a lot of um kind of checks uh that kuberno does to ensure that the the",
    "start": "645600",
    "end": "652680"
  },
  {
    "text": "the all the resources are um meet the meet the policy requirements",
    "start": "652680",
    "end": "658860"
  },
  {
    "text": "and if if they don't then give or know um reports uh policy violations in in",
    "start": "658860",
    "end": "666420"
  },
  {
    "text": "the policy reports um you can also specify exceptions policy exceptions that's a new",
    "start": "666420",
    "end": "672540"
  },
  {
    "text": "capability that was added to kivano recently in case you want a certain resources certain namespaces to be uh",
    "start": "672540",
    "end": "680100"
  },
  {
    "text": "kind of uh you know excluded from these policies",
    "start": "680100",
    "end": "686100"
  },
  {
    "text": "policy exceptions can be used but overall the architecture is designed to",
    "start": "686100",
    "end": "692060"
  },
  {
    "text": "handle the load um that that you know in in very large",
    "start": "692060",
    "end": "697079"
  },
  {
    "text": "cluster so it's highly distributed uh highly available there are separate controllers performing separate tasks so",
    "start": "697079",
    "end": "703500"
  },
  {
    "text": "if one controller um you know it has issues it doesn't impact other controllers and then the",
    "start": "703500",
    "end": "710279"
  },
  {
    "text": "common reporting layer provides uh the the ability to kind of get the",
    "start": "710279",
    "end": "717240"
  },
  {
    "text": "reports uh in in your cluster and then through other tools uh you know make",
    "start": "717240",
    "end": "722940"
  },
  {
    "text": "those reports available uh outside the cluster as well",
    "start": "722940",
    "end": "727759"
  },
  {
    "text": "so as as you saw both caverno and cross plain are kubernetes native tools and uh",
    "start": "729360",
    "end": "734880"
  },
  {
    "text": "one cross plane is foreign",
    "start": "734880",
    "end": "738260"
  },
  {
    "text": "CS code and there are several benefits of using kubernetes native approaches uh",
    "start": "740540",
    "end": "747300"
  },
  {
    "text": "in your platform you know for uh developer self-service",
    "start": "747300",
    "end": "752820"
  },
  {
    "text": "um for you know Automation and so on right so",
    "start": "752820",
    "end": "758100"
  },
  {
    "text": "one of the benefits is um obviously there since their kubernetes native they're using uh they let it Leverage",
    "start": "758100",
    "end": "764700"
  },
  {
    "text": "The kubernetes API Machinery uh a lot of the resources are defined as uh using",
    "start": "764700",
    "end": "770579"
  },
  {
    "text": "crds so as a kubernetes user the learning curve is is very low right so",
    "start": "770579",
    "end": "776579"
  },
  {
    "text": "you can use familiar tools you can use scoop curdle you can use sound you can",
    "start": "776579",
    "end": "781920"
  },
  {
    "text": "use githubs to to deploy uh some of these yamlers also out of the box",
    "start": "781920",
    "end": "788160"
  },
  {
    "text": "there's integration with external projects for example there's end points for collecting Prometheus metrics",
    "start": "788160",
    "end": "794760"
  },
  {
    "text": "that is uh ability to use you know Argo CD for deploying some of these uh",
    "start": "794760",
    "end": "800579"
  },
  {
    "text": "policies or other Cloud resources and then you know both kiberno and and cross",
    "start": "800579",
    "end": "806459"
  },
  {
    "text": "plain project have huge communities uh as well as an ecosystem that helps uh if",
    "start": "806459",
    "end": "813000"
  },
  {
    "text": "if you need any help you know or run into any issues so a community can help",
    "start": "813000",
    "end": "819839"
  },
  {
    "text": "with um you know issues the community also builds you know tools adapters providers",
    "start": "819839",
    "end": "826500"
  },
  {
    "text": "extensions around these uh uh core projects and then there are commercial",
    "start": "826500",
    "end": "832440"
  },
  {
    "text": "companies supporting uh these projects uh like nirmata for caverno like upbound",
    "start": "832440",
    "end": "837959"
  },
  {
    "text": "for crosslane that can that can also help if needed right so there's a lot of",
    "start": "837959",
    "end": "843899"
  },
  {
    "text": "benefits to using kubernetes native approach when um building developer platforms",
    "start": "843899",
    "end": "851000"
  },
  {
    "text": "so now let's let's focus on the use case um that we were we initially started the",
    "start": "851519",
    "end": "857940"
  },
  {
    "text": "discussion with right so self-service Cloud provisioning so we'll have have a demo of this uh use case a little bit",
    "start": "857940",
    "end": "864779"
  },
  {
    "text": "later but before that let's look at how uh through using cross plane uh",
    "start": "864779",
    "end": "871079"
  },
  {
    "text": "developer can provision a cloud resource right so here I have a management",
    "start": "871079",
    "end": "876240"
  },
  {
    "text": "cluster where uh cross plane is installed it's a kubernetes cluster",
    "start": "876240",
    "end": "881399"
  },
  {
    "text": "um you know I can see the API server as well as a database and then there's uh on the right you have your you know",
    "start": "881399",
    "end": "888540"
  },
  {
    "text": "cloud services in this case we'll look at AWS and then the developer uh let's say in",
    "start": "888540",
    "end": "896519"
  },
  {
    "text": "this case developer wants to create an S3 bucket so the developer would specify the yaml to create the S3 bucket we'll",
    "start": "896519",
    "end": "904260"
  },
  {
    "text": "see what it looks like but it's essentially a custom resource definition in uh in in the cluster uh configured by",
    "start": "904260",
    "end": "913320"
  },
  {
    "text": "created by cross plane controllers and then when the developer creates the S3",
    "start": "913320",
    "end": "920220"
  },
  {
    "text": "bucket uh you know the cross brain controller and and the AWS provider",
    "start": "920220",
    "end": "925680"
  },
  {
    "text": "that's that's uh part of the the cross plane uh",
    "start": "925680",
    "end": "931380"
  },
  {
    "text": "one of the Cross main components will actually detect the creation of",
    "start": "931380",
    "end": "937220"
  },
  {
    "text": "the the custom resource and it will trigger the creation of S3 bucket in the",
    "start": "937220",
    "end": "943920"
  },
  {
    "text": "uh using the AWS API right so that's kind of pretty straightforward uh the",
    "start": "943920",
    "end": "949560"
  },
  {
    "text": "developer applies the yaml and the controller the cross main the provider",
    "start": "949560",
    "end": "954959"
  },
  {
    "text": "actually picks it up and creates the S3 bucket it actually even you know periodically",
    "start": "954959",
    "end": "961279"
  },
  {
    "text": "synchronizes with the configuration in the cloud and the developer will will uh",
    "start": "961279",
    "end": "968480"
  },
  {
    "text": "will you know by looking at the the custom resource the developer would know",
    "start": "968480",
    "end": "974940"
  },
  {
    "text": "if the bucket has been created or not right in case of any address the developer would uh know that you know",
    "start": "974940",
    "end": "982260"
  },
  {
    "text": "would see the error um in in the CLI",
    "start": "982260",
    "end": "987480"
  },
  {
    "text": "so next uh now the challenge with this is obviously you know uh any",
    "start": "987480",
    "end": "993899"
  },
  {
    "text": "configuration any Cloud configuration has a lot of different knobs a lot of different um uh configuration parameters that have",
    "start": "993899",
    "end": "1001940"
  },
  {
    "text": "have to be uh kind of you know approved checked verified uh to ensure that these",
    "start": "1001940",
    "end": "1008959"
  },
  {
    "text": "these uh you know the configuration is not insecure for example the S3 bucket",
    "start": "1008959",
    "end": "1015259"
  },
  {
    "text": "being created is not public the SC bucket you know information or or",
    "start": "1015259",
    "end": "1022160"
  },
  {
    "text": "any operation is being logged there's a whole bunch of things that a platform",
    "start": "1022160",
    "end": "1027500"
  },
  {
    "text": "engineer may want to do or secure other maybe security requirements you know to",
    "start": "1027500",
    "end": "1032540"
  },
  {
    "text": "to and and to be enforced so for that uh now this is where uh kivano would come",
    "start": "1032540",
    "end": "1039678"
  },
  {
    "text": "in and uh help with um enforcing some of these or or setting some of these",
    "start": "1039679",
    "end": "1045798"
  },
  {
    "text": "guardrails as well as enforcing some policies right so um in this case uh now the kind of the",
    "start": "1045799",
    "end": "1052340"
  },
  {
    "text": "model changes a little bit you have a cluster management cluster with cross plane and Kevin both installed",
    "start": "1052340",
    "end": "1059960"
  },
  {
    "text": "um and then the platform engineer can create these policies beforehand let me",
    "start": "1059960",
    "end": "1065600"
  },
  {
    "text": "add these policies into the cluster and then the kuberno control controllers",
    "start": "1065600",
    "end": "1071000"
  },
  {
    "text": "will start monitoring the API server requests and anytime any resources",
    "start": "1071000",
    "end": "1077480"
  },
  {
    "text": "created that match the policies it will apply the policies and and allow or deny",
    "start": "1077480",
    "end": "1084620"
  },
  {
    "text": "those requests depending on how the policies are configured right so once",
    "start": "1084620",
    "end": "1089780"
  },
  {
    "text": "the policies are configured now the developer workflow Remains the Same for the crosswind controller can act on",
    "start": "1089780",
    "end": "1095720"
  },
  {
    "text": "those custom resources in this case creating the S3 bucket kivano can intercept and and apply the",
    "start": "1095720",
    "end": "1104299"
  },
  {
    "text": "policies uh and then if the policies all the policies are successful successfully applied and and",
    "start": "1104299",
    "end": "1111440"
  },
  {
    "text": "there are no issues then uh the request is completed and then the cross brain",
    "start": "1111440",
    "end": "1116840"
  },
  {
    "text": "controller can actually start processing the request and creating the S3 bucket",
    "start": "1116840",
    "end": "1122660"
  },
  {
    "text": "so that's kind of the flow it's uh it by adding these policies now you have been able to set the guard rails and enforce",
    "start": "1122660",
    "end": "1130220"
  },
  {
    "text": "uh various checks uh as needed in the developer workflow",
    "start": "1130220",
    "end": "1136460"
  },
  {
    "text": "and and all of this without without you know having developed developer having to",
    "start": "1136460",
    "end": "1142640"
  },
  {
    "text": "learn anything uh any policy violations will actually be available to the developer directly they don't have to",
    "start": "1142640",
    "end": "1149539"
  },
  {
    "text": "learn or know about a kivano at all",
    "start": "1149539",
    "end": "1155559"
  },
  {
    "text": "so let's jump into the demo",
    "start": "1156380",
    "end": "1160480"
  },
  {
    "text": "so I have a cluster that is already configured",
    "start": "1173360",
    "end": "1178460"
  },
  {
    "text": "and it has kivano it has cross plane already deployed so so before we start",
    "start": "1178460",
    "end": "1187600"
  },
  {
    "text": "actually verifying on the policies and and seeing",
    "start": "1187600",
    "end": "1193100"
  },
  {
    "text": "how it works let's look at the the policies and the configuration right",
    "start": "1193100",
    "end": "1199160"
  },
  {
    "text": "so so I have um here I have a set of policies",
    "start": "1199160",
    "end": "1204919"
  },
  {
    "text": "uh for S3 and these are uh these policies are",
    "start": "1204919",
    "end": "1210380"
  },
  {
    "text": "um you know written any ammo uh they operate on on this bucket resource which",
    "start": "1210380",
    "end": "1218179"
  },
  {
    "text": "is um a custom resource defined by by the AWS provider the cross plane AWS",
    "start": "1218179",
    "end": "1224480"
  },
  {
    "text": "provider and there's various checks you know there's policy checks for version",
    "start": "1224480",
    "end": "1230059"
  },
  {
    "text": "this policy checks if the SD bucket is configured to access for Public Access",
    "start": "1230059",
    "end": "1237160"
  },
  {
    "text": "we have a check here you know for region another check here for uh if",
    "start": "1237160",
    "end": "1245000"
  },
  {
    "text": "notification is enabled and then we have a check for logging right and then I",
    "start": "1245000",
    "end": "1250280"
  },
  {
    "text": "have two different uh you know SD buckets and I'll try to",
    "start": "1250280",
    "end": "1255980"
  },
  {
    "text": "create one in uscs2 and another one in US West one and we'll see how these um",
    "start": "1255980",
    "end": "1262640"
  },
  {
    "text": "on these whether these get created and what happens right so let's go back to",
    "start": "1262640",
    "end": "1268100"
  },
  {
    "text": "the command line and I'm in the S3 policies repo to apply these policies",
    "start": "1268100",
    "end": "1275299"
  },
  {
    "text": "just gonna apply all the policies in my folder",
    "start": "1275299",
    "end": "1280600"
  },
  {
    "text": "so uh it will take a couple of seconds for these policies to be applied once",
    "start": "1280640",
    "end": "1286220"
  },
  {
    "text": "the policies are applied you can actually um see these policies and and make sure",
    "start": "1286220",
    "end": "1293059"
  },
  {
    "text": "that they are ready so here all of these policies are ready and you can see which some of them are",
    "start": "1293059",
    "end": "1298820"
  },
  {
    "text": "in enforced mode others are in audit mode so now uh let me go to the resource",
    "start": "1298820",
    "end": "1307039"
  },
  {
    "text": "folder and let me try to apply the policy that or the or the the yaml to",
    "start": "1307039",
    "end": "1313460"
  },
  {
    "text": "create SC bucket in the east region",
    "start": "1313460",
    "end": "1319299"
  },
  {
    "text": "um actually before I do that let me show you what's running in the uh cross plane",
    "start": "1319940",
    "end": "1326840"
  },
  {
    "text": "uh namespace so here you can see the",
    "start": "1326840",
    "end": "1332000"
  },
  {
    "text": "assessment system namespace we have the cross grain components and then we have a provider for the AWS",
    "start": "1332000",
    "end": "1338840"
  },
  {
    "text": "cloud and um and if I do get crds",
    "start": "1338840",
    "end": "1345100"
  },
  {
    "text": "and grab on Cross plane you'll see all the crds that are installed in my",
    "start": "1345100",
    "end": "1350900"
  },
  {
    "text": "cluster and a lot of all of these are most of these are related to the AWS",
    "start": "1350900",
    "end": "1358000"
  },
  {
    "text": "provider right so these are created by AWS provider these mapped to AWS resources so for example",
    "start": "1358000",
    "end": "1366140"
  },
  {
    "text": "the one of the the custom resource that is available here is is the bucket",
    "start": "1366140",
    "end": "1371600"
  },
  {
    "text": "resource so we'll be creating that resource in the AWS",
    "start": "1371600",
    "end": "1377659"
  },
  {
    "text": "in in our AWS account so let's let's go ahead and do that",
    "start": "1377659",
    "end": "1384760"
  },
  {
    "text": "all right so this so when I try to create this resource I get some violations right so because I'm trying",
    "start": "1389960",
    "end": "1396260"
  },
  {
    "text": "to create this resource in in U.S east I have a policy which prevents me from",
    "start": "1396260",
    "end": "1401900"
  },
  {
    "text": "doing that uh which is this policy and then there are some other policy violations that are also",
    "start": "1401900",
    "end": "1408559"
  },
  {
    "text": "um that are also uh triggered because my uh bucket is not configured correctly",
    "start": "1408559",
    "end": "1416480"
  },
  {
    "text": "right the configuration for my bucket does not meet the policy requirements so that's kind of how you know immediately",
    "start": "1416480",
    "end": "1423380"
  },
  {
    "text": "developer gets feedback that you know they cannot configure this S3 bucket so",
    "start": "1423380",
    "end": "1428659"
  },
  {
    "text": "let's let's now try to configure the other uh SC bucket uh in the U.S west",
    "start": "1428659",
    "end": "1435500"
  },
  {
    "text": "region",
    "start": "1435500",
    "end": "1437980"
  },
  {
    "text": "right right so let's see if this works so yeah in this case the SC bucket got created",
    "start": "1441080",
    "end": "1446539"
  },
  {
    "text": "and if I do um if I check uh",
    "start": "1446539",
    "end": "1453260"
  },
  {
    "text": "and I should see that my SC bucket the class brain S3 bucket is created so",
    "start": "1453860",
    "end": "1459080"
  },
  {
    "text": "maybe uh just to verify I can go to the AWS account",
    "start": "1459080",
    "end": "1464299"
  },
  {
    "text": "and in my account I can see my demo West",
    "start": "1464299",
    "end": "1469840"
  },
  {
    "text": "SD demos bucket that's created so that kind of shows you now with this",
    "start": "1469840",
    "end": "1476900"
  },
  {
    "text": "um the S3 bucket got created it had uh it pretty much uh had all the",
    "start": "1476900",
    "end": "1483200"
  },
  {
    "text": "configuration that was correct we can actually see if there are any uh policy",
    "start": "1483200",
    "end": "1489799"
  },
  {
    "text": "violations and in this case we actually see that four of these",
    "start": "1489799",
    "end": "1497900"
  },
  {
    "text": "passed but then there was one uh audit violation which failed uh which was",
    "start": "1497900",
    "end": "1503299"
  },
  {
    "text": "around um the remain notifications being enabled so it failed and it actually uh",
    "start": "1503299",
    "end": "1509659"
  },
  {
    "text": "but it since it was said in audit mode uh we could go ahead and create the S3 bucket right so if you enforce policies",
    "start": "1509659",
    "end": "1517220"
  },
  {
    "text": "in enforce mode will prevent um the creation of the bucket but if it's in audit mode",
    "start": "1517220",
    "end": "1522860"
  },
  {
    "text": "um the the resource gets created but then you have a policy violation and you can actually",
    "start": "1522860",
    "end": "1529159"
  },
  {
    "text": "look at the policy violation in more detail by just using this command",
    "start": "1529159",
    "end": "1537220"
  },
  {
    "text": "so it tells you that this this this message tells you what happened and why",
    "start": "1537220",
    "end": "1542299"
  },
  {
    "text": "it failed great Jeanette now the other other aspect about using cross plane is you",
    "start": "1542299",
    "end": "1549200"
  },
  {
    "text": "can also use cross plane to actually um uh discover or or or or you know find",
    "start": "1549200",
    "end": "1556760"
  },
  {
    "text": "resources or uh from from your cloud account right so cross brain has the",
    "start": "1556760",
    "end": "1561799"
  },
  {
    "text": "ability to adopt resources and you can do that and and um and in in that case and you can still",
    "start": "1561799",
    "end": "1568640"
  },
  {
    "text": "apply policies even though those resources are already created in your cloud account you can apply policies and",
    "start": "1568640",
    "end": "1574159"
  },
  {
    "text": "and make sure that there are no policy violations right so we what we'll do here is",
    "start": "1574159",
    "end": "1580220"
  },
  {
    "text": "um we'll go to um our uh from we'll go to the elastic ECS account",
    "start": "1580220",
    "end": "1589340"
  },
  {
    "text": "and and and just checking our ECS account we have um",
    "start": "1589340",
    "end": "1595100"
  },
  {
    "text": "any uh have some task definitions and we will adopt one of those task definitions",
    "start": "1595100",
    "end": "1601000"
  },
  {
    "text": "and try and uh make sure that we are able to validate it and and in in case",
    "start": "1601000",
    "end": "1609320"
  },
  {
    "text": "it has any and check if it has any issues right so we have this ECS task definition",
    "start": "1609320",
    "end": "1614419"
  },
  {
    "text": "created in my ECS account so in order to do that let's go back to the ECS folder",
    "start": "1614419",
    "end": "1624340"
  },
  {
    "text": "and what we'll first do is um we will apply these policies so I have",
    "start": "1624799",
    "end": "1631940"
  },
  {
    "text": "so let's go look at the policies first",
    "start": "1631940",
    "end": "1636278"
  },
  {
    "text": "so here in the in the ECS account ECS for ECS we have two policies uh to check",
    "start": "1637039",
    "end": "1645559"
  },
  {
    "text": "if the image is coming from specific registry and then we also have policy to",
    "start": "1645559",
    "end": "1652340"
  },
  {
    "text": "check the task definition and to make sure that the CPU and memory are you know",
    "start": "1652340",
    "end": "1658640"
  },
  {
    "text": "configured within the specified limits right so and I know I've purposely kept",
    "start": "1658640",
    "end": "1665059"
  },
  {
    "text": "the limit low so that we can some policy violations can be triggered",
    "start": "1665059",
    "end": "1670299"
  },
  {
    "text": "so first let's apply these policies",
    "start": "1670640",
    "end": "1675220"
  },
  {
    "text": "so if I do coupon I'll get SQL I should see that I have now two policies and",
    "start": "1685159",
    "end": "1690200"
  },
  {
    "text": "both of them are in audit mode because here we just want to detect we are not going to enforce anything because the",
    "start": "1690200",
    "end": "1696320"
  },
  {
    "text": "resources are already created so let's go to the resource folder and",
    "start": "1696320",
    "end": "1703220"
  },
  {
    "text": "here I'm going to just import the task uh the task definition so before we do",
    "start": "1703220",
    "end": "1709340"
  },
  {
    "text": "that let's look at the task definition yammo so this is a very basic yaml it just",
    "start": "1709340",
    "end": "1715220"
  },
  {
    "text": "specifies the name of the task the region um and and only the required Fields",
    "start": "1715220",
    "end": "1721400"
  },
  {
    "text": "right so here we are going to just specify the required fields and uh because it has this um",
    "start": "1721400",
    "end": "1729200"
  },
  {
    "text": "annotation called cross plane external name it's actually going to just pull",
    "start": "1729200",
    "end": "1735380"
  },
  {
    "text": "down the um the configuration of the task and add",
    "start": "1735380",
    "end": "1741140"
  },
  {
    "text": "it in in the custom resource and also we've created configured the deletion",
    "start": "1741140",
    "end": "1746419"
  },
  {
    "text": "policy as orphan which means when this task definition is eluted from the cluster it won't actually delete the",
    "start": "1746419",
    "end": "1752779"
  },
  {
    "text": "class definition from the cloud and this this can be configured either way but in",
    "start": "1752779",
    "end": "1758539"
  },
  {
    "text": "this case I've just done it to make sure that the original task definition is not deleted",
    "start": "1758539",
    "end": "1765460"
  },
  {
    "text": "so group can create minus f um import task definition",
    "start": "1765740",
    "end": "1773679"
  },
  {
    "text": "okay so now let's look at the object itself",
    "start": "1774020",
    "end": "1779799"
  },
  {
    "text": "all right so we have this task definition and we can actually",
    "start": "1785120",
    "end": "1790399"
  },
  {
    "text": "um get more details uh yaml format",
    "start": "1790399",
    "end": "1796760"
  },
  {
    "text": "um it's still synchronizing and it it's getting additional information from the",
    "start": "1796760",
    "end": "1803000"
  },
  {
    "text": "cluster so this could take uh a few minutes so let's maybe check again",
    "start": "1803000",
    "end": "1809200"
  },
  {
    "text": "okay so now we see all of the configuration for the task has been pulled down",
    "start": "1817340",
    "end": "1822620"
  },
  {
    "text": "there's a lot more information here and so now let's see if there are any policy",
    "start": "1822620",
    "end": "1828140"
  },
  {
    "text": "violations",
    "start": "1828140",
    "end": "1830679"
  },
  {
    "text": "correct so we see two we see one failure and",
    "start": "1837860",
    "end": "1843620"
  },
  {
    "text": "um one a couple of errors but in case of this failure let's look at the failure",
    "start": "1843620",
    "end": "1848840"
  },
  {
    "text": "and this failure this um policy violation is for image check so",
    "start": "1848840",
    "end": "1856880"
  },
  {
    "text": "because the image for the task is not coming from the Registries that I uh we would like this violation is triggered",
    "start": "1856880",
    "end": "1864140"
  },
  {
    "text": "and it says all the image uh images for the Stars definition should",
    "start": "1864140",
    "end": "1870380"
  },
  {
    "text": "come from an authorized repository right so this is a way to actually apply",
    "start": "1870380",
    "end": "1875659"
  },
  {
    "text": "policies even to existing Resources by using you know cross plane and kiberno",
    "start": "1875659",
    "end": "1881299"
  },
  {
    "text": "cross plane will actually synchronize those resources and then kevano will",
    "start": "1881299",
    "end": "1886399"
  },
  {
    "text": "apply those policies foreign",
    "start": "1886399",
    "end": "1892840"
  },
  {
    "text": "so just to summarize um as you saw in the demo you can use kevano along with cross plane to enable",
    "start": "1895760",
    "end": "1902720"
  },
  {
    "text": "secure self-service for developers you can set the necessary guardrails",
    "start": "1902720",
    "end": "1908539"
  },
  {
    "text": "um when when developers are provisioning Cloud resources using cross plane",
    "start": "1908539",
    "end": "1914320"
  },
  {
    "text": "can provide the necessary policy enforcement",
    "start": "1914320",
    "end": "1919360"
  },
  {
    "text": "audit compliance for your Cloud resources and then the the benefit of",
    "start": "1919360",
    "end": "1927740"
  },
  {
    "text": "doing this proactively in in by provisioning these resources is you can",
    "start": "1927740",
    "end": "1935240"
  },
  {
    "text": "pretty much prevent misconfigurations you can overall improve security posture and uh by preventing these",
    "start": "1935240",
    "end": "1942320"
  },
  {
    "text": "misconfigurations and not having to deal with them you know later on in your",
    "start": "1942320",
    "end": "1947659"
  },
  {
    "text": "production environments um you effectively you know safe costs",
    "start": "1947659",
    "end": "1953240"
  },
  {
    "text": "as well right so that's kind of the overall benefit and this in the end leads to a much better developer",
    "start": "1953240",
    "end": "1959600"
  },
  {
    "text": "experience without any uh back and forth without any friction that may typically",
    "start": "1959600",
    "end": "1966380"
  },
  {
    "text": "be involved in in such scenarios so that's it for this webinar",
    "start": "1966380",
    "end": "1973460"
  },
  {
    "text": "um please uh give us some feedback reach out to us if you have questions and",
    "start": "1973460",
    "end": "1979399"
  },
  {
    "text": "would love to hear from you if this was helpful or if there are any other uh topics that you would like to hear from",
    "start": "1979399",
    "end": "1985760"
  },
  {
    "text": "us thank you",
    "start": "1985760",
    "end": "1988779"
  }
]