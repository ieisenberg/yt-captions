[
  {
    "text": "thank you for joining my talk extending",
    "start": "320",
    "end": "2800"
  },
  {
    "text": "in boy with web assembly In this talk",
    "start": "2800",
    "end": "6240"
  },
  {
    "text": "we're going to dive into the extension",
    "start": "6240",
    "end": "7839"
  },
  {
    "text": "point of inboy in terms of web assembly",
    "start": "7839",
    "end": "11519"
  },
  {
    "text": "Before we get started please let me",
    "start": "11519",
    "end": "13440"
  },
  {
    "text": "introduce a little bit about myself",
    "start": "13440",
    "end": "15120"
  },
  {
    "text": "first Hi I'm Yuki I'm working as an",
    "start": "15120",
    "end": "18960"
  },
  {
    "text": "software architect at NUMO a mobility",
    "start": "18960",
    "end": "21840"
  },
  {
    "text": "startup company in Japan I'm also acting",
    "start": "21840",
    "end": "24960"
  },
  {
    "text": "as a Google developer expert in term of",
    "start": "24960",
    "end": "27920"
  },
  {
    "text": "crowd So if you have any interesting",
    "start": "27920",
    "end": "30320"
  },
  {
    "text": "topic regarding that yeah feel free to",
    "start": "30320",
    "end": "32320"
  },
  {
    "text": "reach out to me Anyway Inboy is a",
    "start": "32320",
    "end": "36079"
  },
  {
    "text": "network proxy widely used in the cloud",
    "start": "36079",
    "end": "38800"
  },
  {
    "text": "native",
    "start": "38800",
    "end": "40120"
  },
  {
    "text": "environment Its philosophy is network",
    "start": "40120",
    "end": "43440"
  },
  {
    "text": "should be transparent to applications",
    "start": "43440",
    "end": "48120"
  },
  {
    "text": "For example enboy is widely used as a",
    "start": "48320",
    "end": "51520"
  },
  {
    "text": "API gateway including both classic API",
    "start": "51520",
    "end": "54960"
  },
  {
    "text": "gateway and pattern or kubernetes",
    "start": "54960",
    "end": "57520"
  },
  {
    "text": "gateway",
    "start": "57520",
    "end": "60000"
  },
  {
    "text": "API also used as a side proxy for",
    "start": "60840",
    "end": "64478"
  },
  {
    "text": "service mesh such as in this",
    "start": "64479",
    "end": "69359"
  },
  {
    "text": "example in handles the HTTP request in",
    "start": "70360",
    "end": "74080"
  },
  {
    "text": "the filter chain",
    "start": "74080",
    "end": "75479"
  },
  {
    "text": "manner for each request",
    "start": "75479",
    "end": "78159"
  },
  {
    "text": "Ino handles request filter",
    "start": "78159",
    "end": "83080"
  },
  {
    "text": "chain For example we have just",
    "start": "83080",
    "end": "85439"
  },
  {
    "text": "authentication filter provided by",
    "start": "85439",
    "end": "87439"
  },
  {
    "text": "inboard itself and also we have a",
    "start": "87439",
    "end": "90159"
  },
  {
    "text": "arbback filter for some kind of access",
    "start": "90159",
    "end": "93079"
  },
  {
    "text": "control Oh yeah we have we can have uh",
    "start": "93079",
    "end": "96240"
  },
  {
    "text": "some kind of HTTP filters for",
    "start": "96240",
    "end": "98880"
  },
  {
    "text": "modifications",
    "start": "98880",
    "end": "101880"
  },
  {
    "text": "Emble has some extension points like we",
    "start": "102640",
    "end": "105600"
  },
  {
    "text": "can write some custom logic as native",
    "start": "105600",
    "end": "107920"
  },
  {
    "text": "C++ filter or we can write custom logic",
    "start": "107920",
    "end": "111600"
  },
  {
    "text": "as l script and also input provides",
    "start": "111600",
    "end": "115360"
  },
  {
    "text": "external processing filter that makes",
    "start": "115360",
    "end": "117920"
  },
  {
    "text": "invoy delegate some custom logic to the",
    "start": "117920",
    "end": "121200"
  },
  {
    "text": "outside of the",
    "start": "121200",
    "end": "122759"
  },
  {
    "text": "invoy and yeah we have web assembly",
    "start": "122759",
    "end": "125360"
  },
  {
    "text": "filter that makes us write write some",
    "start": "125360",
    "end": "128800"
  },
  {
    "text": "custom logic as web assembly modules",
    "start": "128800",
    "end": "132800"
  },
  {
    "text": "And recently introduced a new feature",
    "start": "132800",
    "end": "136400"
  },
  {
    "text": "called dynamic modules that allows us",
    "start": "136400",
    "end": "139440"
  },
  {
    "text": "write some custom logic as shared",
    "start": "139440",
    "end": "143760"
  },
  {
    "text": "library Yeah for example we can write",
    "start": "144520",
    "end": "147520"
  },
  {
    "text": "some custom logic For example we can",
    "start": "147520",
    "end": "151440"
  },
  {
    "text": "write some custom header modification as",
    "start": "151440",
    "end": "154800"
  },
  {
    "text": "web assembly modules",
    "start": "154800",
    "end": "158519"
  },
  {
    "text": "This is a sample configuration for web",
    "start": "159280",
    "end": "162319"
  },
  {
    "text": "assembly modules We have to specify web",
    "start": "162319",
    "end": "165280"
  },
  {
    "text": "assembly",
    "start": "165280",
    "end": "166030"
  },
  {
    "text": "[Music]",
    "start": "166030",
    "end": "167800"
  },
  {
    "text": "binary and if you want we can specify",
    "start": "167800",
    "end": "171519"
  },
  {
    "text": "some custom configuration for our custom",
    "start": "171519",
    "end": "174560"
  },
  {
    "text": "web assembly",
    "start": "174560",
    "end": "177200"
  },
  {
    "text": "modules and yeah thank you for web",
    "start": "177959",
    "end": "180480"
  },
  {
    "text": "assembly in nature We can write some",
    "start": "180480",
    "end": "183200"
  },
  {
    "text": "custom logic in language of our",
    "start": "183200",
    "end": "186440"
  },
  {
    "text": "choice I'm mainly using Rust Yeah we",
    "start": "186440",
    "end": "189760"
  },
  {
    "text": "know Rust everywhere And sometimes I'm",
    "start": "189760",
    "end": "193200"
  },
  {
    "text": "using Go to write our custom",
    "start": "193200",
    "end": "197319"
  },
  {
    "text": "logic And the approx defines some AI",
    "start": "197319",
    "end": "201920"
  },
  {
    "text": "application binary interface for web",
    "start": "201920",
    "end": "204720"
  },
  {
    "text": "assembly modules for network proxies",
    "start": "204720",
    "end": "208000"
  },
  {
    "text": "including",
    "start": "208000",
    "end": "210440"
  },
  {
    "text": "inboy by using proxy basm SDK In this",
    "start": "210440",
    "end": "214080"
  },
  {
    "text": "case we are reading lost We can write",
    "start": "214080",
    "end": "216640"
  },
  {
    "text": "some custom logic like that In this case",
    "start": "216640",
    "end": "220239"
  },
  {
    "text": "just renaming headers for upstream",
    "start": "220239",
    "end": "225120"
  },
  {
    "text": "services and formost some complex",
    "start": "226200",
    "end": "229000"
  },
  {
    "text": "situation I created a I created a web",
    "start": "229000",
    "end": "232080"
  },
  {
    "text": "assembly",
    "start": "232080",
    "end": "233080"
  },
  {
    "text": "modules that makes inboy fetch access",
    "start": "233080",
    "end": "236560"
  },
  {
    "text": "tokens from Google crowd metad data",
    "start": "236560",
    "end": "238799"
  },
  {
    "text": "server in the Google crowd environment",
    "start": "238799",
    "end": "243200"
  },
  {
    "text": "In this case yeah this is leading",
    "start": "243200",
    "end": "245720"
  },
  {
    "text": "go I employ the HTTP call out from invoy",
    "start": "245720",
    "end": "250879"
  },
  {
    "text": "to the outside of the inboard in web",
    "start": "250879",
    "end": "253840"
  },
  {
    "text": "assembly",
    "start": "253840",
    "end": "256319"
  },
  {
    "text": "modules and yeah I published some my",
    "start": "256600",
    "end": "259680"
  },
  {
    "text": "custom web assembly modules as open",
    "start": "259680",
    "end": "263080"
  },
  {
    "text": "software and yeah please check that on",
    "start": "263080",
    "end": "267400"
  },
  {
    "text": "GitHub And last but not least recently",
    "start": "267400",
    "end": "271280"
  },
  {
    "text": "Google crowd started to support some web",
    "start": "271280",
    "end": "274000"
  },
  {
    "text": "assembly feature for Google cloud",
    "start": "274000",
    "end": "277199"
  },
  {
    "text": "application ro",
    "start": "277199",
    "end": "279639"
  },
  {
    "text": "balancers That means we can use proxy",
    "start": "279639",
    "end": "283360"
  },
  {
    "text": "was compliant web assembly modules even",
    "start": "283360",
    "end": "286400"
  },
  {
    "text": "in the outside of the",
    "start": "286400",
    "end": "289240"
  },
  {
    "text": "invoy Yeah that's it from my side Thank",
    "start": "289240",
    "end": "292000"
  },
  {
    "text": "you for joining",
    "start": "292000",
    "end": "293610"
  },
  {
    "text": "[Applause]",
    "start": "293610",
    "end": "299909"
  }
]