[
  {
    "start": "0",
    "end": "110000"
  },
  {
    "text": "so hello and welcome uh my name is morgan we're also joined by sugu for answering questions uh we're",
    "start": "80",
    "end": "6160"
  },
  {
    "text": "both maintainers of the tests uh suguru as well as the co-creator of the test and founder of planet scale",
    "start": "6160",
    "end": "12480"
  },
  {
    "text": "planet scale provides commercial services for the tests",
    "start": "12480",
    "end": "17920"
  },
  {
    "text": "so today's talk is an intro session on the tests uh so let's start with an interim",
    "start": "18240",
    "end": "24560"
  },
  {
    "text": "vitesse is a cloud native massively scalable database to your applications it looks like it's mysql",
    "start": "24560",
    "end": "32000"
  },
  {
    "text": "and actually under the hood it is mysql server tests orchestrates mysql makes it",
    "start": "32000",
    "end": "38559"
  },
  {
    "text": "highly available makes it scale horizontally by adding new servers",
    "start": "38559",
    "end": "44239"
  },
  {
    "text": "this is a feature that's obviously not available in in standard mysql and really allows you to operate it in a",
    "start": "44239",
    "end": "52719"
  },
  {
    "text": "cloud native way and it's released as open source it's a cncf project",
    "start": "52719",
    "end": "58399"
  },
  {
    "text": "so um just some quick stats about it the test was started at 2010",
    "start": "58399",
    "end": "63520"
  },
  {
    "text": "at youtube i believe it went to production in in 2011. and uh now fast forward to uh so",
    "start": "63520",
    "end": "70960"
  },
  {
    "text": "2018 and beyond it's a cncf project and it's a top level graduated project with over 200",
    "start": "70960",
    "end": "77280"
  },
  {
    "text": "contributors 10 000 stars on github and the current version is the tess version 7. at least current",
    "start": "77280",
    "end": "84479"
  },
  {
    "text": "version by the time that you see this video we are planning to release it later today",
    "start": "84479",
    "end": "90240"
  },
  {
    "text": "there's 18 000 commits behind the tests and the best way to be able to get support for the tests is by going to the",
    "start": "90240",
    "end": "96640"
  },
  {
    "text": "slack channel and slack itself is a user and contributor",
    "start": "96640",
    "end": "101840"
  },
  {
    "text": "to the tests which we will get to on my next slide",
    "start": "101840",
    "end": "107118"
  },
  {
    "text": "so uh it started at youtube i mentioned that fact but",
    "start": "108079",
    "end": "113520"
  },
  {
    "start": "110000",
    "end": "110000"
  },
  {
    "text": "now the test is used in many places uh it's used by slack it's used by jd.com",
    "start": "113520",
    "end": "120960"
  },
  {
    "text": "jd operates the largest for test cluster that we know about which is thousands of tablets we'll get to that",
    "start": "120960",
    "end": "128959"
  },
  {
    "text": "terminology in a second but a tablet is the basic uh unit of storage within the tests",
    "start": "128959",
    "end": "135200"
  },
  {
    "text": "uh square cash app pinterest hubspot you know many of these names you're already familiar with i'm sure",
    "start": "135200",
    "end": "141599"
  },
  {
    "text": "for developers uh you're familiar with github but there are there are several other others as well i think one interesting",
    "start": "141599",
    "end": "148160"
  },
  {
    "text": "thing to point out while we're on this slide is that the adopters are also maintainers and",
    "start": "148160",
    "end": "153440"
  },
  {
    "text": "contributors so uh if we highlight on the slide um",
    "start": "153440",
    "end": "160080"
  },
  {
    "text": "the the companies that are employing active maintainers slack pinterest hubspot nozzle square",
    "start": "160400",
    "end": "167599"
  },
  {
    "text": "we value a lot from their contributions so i think you know i come from a database",
    "start": "167599",
    "end": "173040"
  },
  {
    "text": "background there's a difference between you know when a product is created by a product company and when it's really um",
    "start": "173040",
    "end": "180480"
  },
  {
    "text": "embraced and contributed to by an active team that that has to solve real world problems so",
    "start": "180480",
    "end": "186159"
  },
  {
    "text": "uh you know i think we very much benefit uh in terms of making sure that the right metrics are monitored",
    "start": "186159",
    "end": "192879"
  },
  {
    "text": "there's the visibility into the operating of a system and the right bugs are fixed so um you",
    "start": "192879",
    "end": "198239"
  },
  {
    "text": "know we thank these companies very much for their adoption and for their their leadership",
    "start": "198239",
    "end": "203519"
  },
  {
    "text": "in maintaining the tests",
    "start": "203519",
    "end": "206640"
  },
  {
    "start": "210000",
    "end": "210000"
  },
  {
    "text": "so i'm going to flick back to this this slide quite a bit um because i think it explains a lot about the tess",
    "start": "210159",
    "end": "216560"
  },
  {
    "text": "of a test is a distributed system so it's got more moving pieces than a regular",
    "start": "216560",
    "end": "221760"
  },
  {
    "text": "mysql and there's some terminology to learn to really benefit uh in understanding the tests and we'll",
    "start": "221760",
    "end": "228720"
  },
  {
    "text": "use this terminology when we get to really the the meat of this talk which is to explain how we would migrate from",
    "start": "228720",
    "end": "235040"
  },
  {
    "text": "mysql so on the left hand side we can see uh here's your application and your",
    "start": "235040",
    "end": "241200"
  },
  {
    "text": "application uh optionally but uh typically in the cloud native architecture it will",
    "start": "241200",
    "end": "247280"
  },
  {
    "text": "route through a load balancer to connect to a vtgate server vtgate is a component of the tests so",
    "start": "247280",
    "end": "255840"
  },
  {
    "text": "you can think of it as like a proxy it's a little bit more sophisticated than that",
    "start": "255840",
    "end": "260880"
  },
  {
    "text": "a proxy router that will act like it's a mysql server but it can",
    "start": "260880",
    "end": "268080"
  },
  {
    "text": "retrieve the data from multiple mysql servers uh under the hood to be able to you know",
    "start": "268080",
    "end": "273680"
  },
  {
    "text": "scatter gather or re-piece together the data from multiple",
    "start": "273680",
    "end": "278720"
  },
  {
    "text": "shards or or segments of your your data to be able to return queries to your",
    "start": "278720",
    "end": "284880"
  },
  {
    "text": "application so um a vt gate server speaks the mysql protocol",
    "start": "284880",
    "end": "290560"
  },
  {
    "text": "you speak to bt gate like it's a mysql server with a mysql connector and you can keep using the same",
    "start": "290560",
    "end": "297600"
  },
  {
    "text": "connectors in your application that you're already using and then it's routes that query",
    "start": "297600",
    "end": "303840"
  },
  {
    "text": "underneath to a set of shards which are going to be using mysql",
    "start": "303840",
    "end": "310880"
  },
  {
    "text": "so the shout outs here uh they're comprised of tablets this is the",
    "start": "310880",
    "end": "316720"
  },
  {
    "text": "basic unit of data that we have in in the tests and the tablet has",
    "start": "316720",
    "end": "322000"
  },
  {
    "text": "a mysql server uh you can use mysql as made by the mysql team at oracle you can",
    "start": "322000",
    "end": "327919"
  },
  {
    "text": "use miri db you can use picona server uh in a different mode of operation",
    "start": "327919",
    "end": "333360"
  },
  {
    "text": "which we'll get to as well you could even use amazon rds or if that's what you would like to use",
    "start": "333360",
    "end": "340160"
  },
  {
    "text": "and uh the the shards store the underlying data in in these petitions or segments",
    "start": "340160",
    "end": "346240"
  },
  {
    "text": "of data that that um the tessa recommends you keep fairly small",
    "start": "346240",
    "end": "351280"
  },
  {
    "text": "about 250 gigabytes in size so it's easy to be able to scale and add capacity as",
    "start": "351280",
    "end": "356880"
  },
  {
    "text": "you need to so the state is stored in these shards",
    "start": "356880",
    "end": "362800"
  },
  {
    "text": "the tests can manage those servers to make sure that you've got replicas and you've got high availability",
    "start": "362800",
    "end": "368560"
  },
  {
    "text": "and if one fails it can kind of make another one step up and uh and take over that um",
    "start": "368560",
    "end": "376160"
  },
  {
    "text": "the other information to point out in this slide here is that there's some metadata that uh is used to to route to the to",
    "start": "376160",
    "end": "383120"
  },
  {
    "text": "the current shard for each um each piece of data and this is stored in something we call a top poster or a",
    "start": "383120",
    "end": "388880"
  },
  {
    "text": "topology server this is a abstract concept there's no",
    "start": "388880",
    "end": "394400"
  },
  {
    "text": "technology called as toppery server uh you get to to basically take your pickup if you want to use fcd uh that's the most common",
    "start": "394400",
    "end": "401759"
  },
  {
    "text": "these days in in cloud native architectures but console and zookeep are also supported",
    "start": "401759",
    "end": "408160"
  },
  {
    "text": "and the only other piece that i haven't described on this slide is that there's a management gui called vtctld",
    "start": "408160",
    "end": "415840"
  },
  {
    "text": "which can make those changes to the to the topology for you on your behalf but it's not an",
    "start": "415840",
    "end": "421599"
  },
  {
    "text": "active part of observing so a lot of detail on this slide and as",
    "start": "421599",
    "end": "426639"
  },
  {
    "text": "i said i will flip back to it as we're describing um various concepts but for now i want",
    "start": "426639",
    "end": "431919"
  },
  {
    "text": "to summarize it as vt gate is the mysql proxy",
    "start": "431919",
    "end": "437039"
  },
  {
    "text": "that routes into your tablets which is where you're storing your data and there",
    "start": "437039",
    "end": "442960"
  },
  {
    "text": "is a bit of terminology to learn to really understand the test",
    "start": "442960",
    "end": "448080"
  },
  {
    "text": "okay so uh next slide mitigate uh we mentioned is the",
    "start": "449599",
    "end": "455199"
  },
  {
    "text": "stateless proxy i a point that i want to stress that that maybe i didn't quite on the last",
    "start": "455199",
    "end": "461199"
  },
  {
    "text": "slide is that even though your system is distributed uh vtgate does present it like it's a single mysql",
    "start": "461199",
    "end": "468319"
  },
  {
    "text": "server like what you're used to so your data might be split up on multiple mysql",
    "start": "468319",
    "end": "473440"
  },
  {
    "text": "servers uh you know a table might actually exist in 10 different uh shards you will see it",
    "start": "473440",
    "end": "481520"
  },
  {
    "text": "like it's one table and it'll basically just retrieve that data as it needs to",
    "start": "481520",
    "end": "486800"
  },
  {
    "text": "um it speaks mysql protocol it speaks most of the mysql dialect um",
    "start": "486800",
    "end": "493360"
  },
  {
    "text": "we'll get a little bit into the details we talk about our migration but uh your key spaces and",
    "start": "493360",
    "end": "500160"
  },
  {
    "text": "a new term to introduce here which is like of a test database they can be either sharded or uncharted",
    "start": "500160",
    "end": "506720"
  },
  {
    "text": "when you operate in uncharted mode basically almost everything is supported in terms",
    "start": "506720",
    "end": "512159"
  },
  {
    "text": "of sql syntax if you operate in a sharded mode there are some additional restrictions",
    "start": "512159",
    "end": "518800"
  },
  {
    "text": "on which sql is supported",
    "start": "518800",
    "end": "522959"
  },
  {
    "text": "okay key spaces and shots uh key space is uh it's kind of like mice",
    "start": "525600",
    "end": "531920"
  },
  {
    "start": "526000",
    "end": "526000"
  },
  {
    "text": "what mysql calls a schemer or a database to use that term would be a little bit ambiguous though",
    "start": "531920",
    "end": "539680"
  },
  {
    "text": "because how the data is actually stored in mysql is if it's sharded every server would have a database",
    "start": "539680",
    "end": "547680"
  },
  {
    "text": "the test uses this abstract term that makes it a little bit easier to understand but it's like a logical",
    "start": "547680",
    "end": "552959"
  },
  {
    "text": "uh grouping of tables and tables are stored in",
    "start": "552959",
    "end": "559600"
  },
  {
    "text": "shards shards contain uh replicas uh or or multiple tablets one of them",
    "start": "559600",
    "end": "566560"
  },
  {
    "text": "will be a primary and then they'll be typically replicas and rd only",
    "start": "566560",
    "end": "572240"
  },
  {
    "text": "instances of shots we typically recommend that you run with at least three copies of each shard",
    "start": "572240",
    "end": "580160"
  },
  {
    "text": "uh just to make sure that you have high availability when you're choosing your sharding",
    "start": "580160",
    "end": "586480"
  },
  {
    "text": "scheme and your shouting design i did throw out the tess likes to aim for um coming from a",
    "start": "586480",
    "end": "592399"
  },
  {
    "text": "database background what i would say is fairly small shards at 250 gigabytes apiece you know",
    "start": "592399",
    "end": "597920"
  },
  {
    "text": "i know from my experience of operating mysql that it's uh well with a well optimized system fairly",
    "start": "597920",
    "end": "603680"
  },
  {
    "text": "possible to have terabyte size database instances uh but the reason why the test",
    "start": "603680",
    "end": "610959"
  },
  {
    "text": "recommends this is it's very easy to be able to do a failover so typically of a",
    "start": "610959",
    "end": "617120"
  },
  {
    "text": "a shard fails or a server fails you want to be able to recover that within about 10 or 15 minutes just by",
    "start": "617120",
    "end": "624240"
  },
  {
    "text": "restoring the data to somewhere else on your network and if you aim for about this 250 gigabyte size",
    "start": "624240",
    "end": "630160"
  },
  {
    "text": "that seems to be about our right to to make sure that you can achieve that if you pick a larger size then you",
    "start": "630160",
    "end": "636800"
  },
  {
    "text": "know you run into risks like while you're doing recovery you could have a follow-on",
    "start": "636800",
    "end": "642079"
  },
  {
    "text": "failure it's not an actual restriction that protests our places to be able to do",
    "start": "642079",
    "end": "647440"
  },
  {
    "text": "that another thing for operating you know a large scale system is that you want to make sure",
    "start": "647440",
    "end": "654959"
  },
  {
    "text": "that no user can kind of impact the other users too much so you do get some natural fencing",
    "start": "654959",
    "end": "661440"
  },
  {
    "text": "or basically a boundary on uh on blast radius",
    "start": "661440",
    "end": "667839"
  },
  {
    "text": "if you do pick smaller sizes of shards so that no individual user can kind of take over",
    "start": "667839",
    "end": "673279"
  },
  {
    "text": "the whole system so that's another nice property that uh using a scalable system uh provides",
    "start": "673279",
    "end": "679680"
  },
  {
    "text": "over a monolithic uh system which you may be familiar with if you're coming to this talk from",
    "start": "679680",
    "end": "685120"
  },
  {
    "text": "a traditional database space okay so uh tablets",
    "start": "685120",
    "end": "693279"
  },
  {
    "start": "691000",
    "end": "691000"
  },
  {
    "text": "tablet is a basic unit of work in a test cluster i did mention you can use any mysql",
    "start": "693279",
    "end": "699440"
  },
  {
    "text": "server flavor you can also use what we call an unmanaged tablet",
    "start": "699440",
    "end": "705120"
  },
  {
    "text": "and we will use part of that as part of our migration strategy where you can say the test you know don't manage the",
    "start": "705120",
    "end": "711360"
  },
  {
    "text": "active replication health monitoring and things like that just treat this as like a mysql instance to route to",
    "start": "711360",
    "end": "719279"
  },
  {
    "text": "and uh this is useful uh as sort of like an entry point to be able to get into the test but i would",
    "start": "719279",
    "end": "725279"
  },
  {
    "text": "say most users are using the fully managed scenario wherever test is offering high",
    "start": "725279",
    "end": "731680"
  },
  {
    "text": "availability and active monitoring of each of the tablets in the in the cluster",
    "start": "731680",
    "end": "736959"
  },
  {
    "text": "so tablet is comprised of mysql and a vt tablet process this is just a sidecar process that",
    "start": "736959",
    "end": "744160"
  },
  {
    "text": "monitors and restarts the mysql server that needs to be able to do that",
    "start": "744160",
    "end": "750720"
  },
  {
    "text": "okay so architecture diagram we have vt gates we have tablets and we have as i said",
    "start": "751040",
    "end": "758639"
  },
  {
    "text": "optionally a load balancer um a couple of things to point out here uh that we'll get to later as well",
    "start": "758639",
    "end": "765279"
  },
  {
    "text": "um by having these extra layers of the load balancer and the vt gate you may find that that",
    "start": "765279",
    "end": "772480"
  },
  {
    "text": "um although the test has very similar performance characteristics uh to mysql because it is mysql when it",
    "start": "772480",
    "end": "780240"
  },
  {
    "text": "executes the query it does add additional hops to be able to get to mysql so",
    "start": "780240",
    "end": "786000"
  },
  {
    "text": "in terms of regressions this is one thing you may notice that you may see slightly higher latency",
    "start": "786000",
    "end": "792000"
  },
  {
    "text": "if you move your application to the test",
    "start": "792000",
    "end": "800959"
  },
  {
    "text": "okay so let's talk about our plan so we want to move from using mysql",
    "start": "800959",
    "end": "808399"
  },
  {
    "start": "801000",
    "end": "801000"
  },
  {
    "text": "to mysql with the test on top how would we go about achieving that um well",
    "start": "808399",
    "end": "816320"
  },
  {
    "text": "my three sort of thought areas and sort of main focus would be on um the queries that i",
    "start": "816320",
    "end": "823040"
  },
  {
    "text": "execute do they work with the tests does my application tolerate the tess's",
    "start": "823040",
    "end": "829760"
  },
  {
    "text": "performance characteristics that are a little bit different we just mentioned that and then the third one is you know very",
    "start": "829760",
    "end": "836720"
  },
  {
    "text": "cautiously uh in operations you know no software is perfect we have to have a plan to be",
    "start": "836720",
    "end": "841760"
  },
  {
    "text": "able to back out if we can and actually i'll add to it we have to have ability",
    "start": "841760",
    "end": "848240"
  },
  {
    "text": "to to sort of test it in a safe way in production without going you know completely uh",
    "start": "848240",
    "end": "855120"
  },
  {
    "text": "percent of the test on on day one so uh this is the scenario that we're going to talk about and the test does have a very",
    "start": "855120",
    "end": "861680"
  },
  {
    "text": "good uh answer for each of these points",
    "start": "861680",
    "end": "866079"
  },
  {
    "text": "so to start with with testing our uh queries with the tests",
    "start": "868079",
    "end": "873680"
  },
  {
    "text": "uh there is a program called vt explain so uh you could actually um grab a copy of",
    "start": "873680",
    "end": "879839"
  },
  {
    "text": "your queries and just run them with the tests but this is sort of a nicer way to be able to do it so",
    "start": "879839",
    "end": "885279"
  },
  {
    "text": "uh what i would do is i would start with my mysql server i would enable the slow query log and i",
    "start": "885279",
    "end": "892959"
  },
  {
    "text": "would set the long query time to zero seconds this captures all",
    "start": "892959",
    "end": "898800"
  },
  {
    "text": "queries not just slow queries and uh i would probably try and get some sample that's",
    "start": "898800",
    "end": "904399"
  },
  {
    "text": "representative of production load so maybe half an hour or so and then when i have this log file of",
    "start": "904399",
    "end": "910959"
  },
  {
    "text": "all my queries obviously it's going to be very large it could be several gigabytes",
    "start": "910959",
    "end": "916320"
  },
  {
    "text": "i want to be able to reduce that log file down to get just basically unique queries",
    "start": "916320",
    "end": "922560"
  },
  {
    "text": "so the prepared statement form of a query without the values in it and this is what this program",
    "start": "922560",
    "end": "928880"
  },
  {
    "text": "called pt query digest will do it's part of the piconet toolkit so what i often find when i do this is",
    "start": "928880",
    "end": "935199"
  },
  {
    "text": "in a production application there might be 50 unique queries",
    "start": "935199",
    "end": "941040"
  },
  {
    "text": "that are used to access mysql there are definitely some scenarios where it might be more than that",
    "start": "941040",
    "end": "947759"
  },
  {
    "text": "particularly if you have some sort of query builder rm that auto generates uh queries for",
    "start": "947759",
    "end": "955199"
  },
  {
    "text": "users you might have thousands but let's say in the typical case we may have 50 queries that we end",
    "start": "955199",
    "end": "961360"
  },
  {
    "text": "up with once we reduce them through this pt query digest program",
    "start": "961360",
    "end": "966880"
  },
  {
    "text": "then what we want to do is we want to um pipe the output of that pt query digest",
    "start": "966880",
    "end": "973199"
  },
  {
    "text": "program which will give us a smaller file of queries uh through vt explain",
    "start": "973199",
    "end": "980480"
  },
  {
    "text": "and uh you know there's some details to throw in here uh if you're using uh just an",
    "start": "980480",
    "end": "986720"
  },
  {
    "text": "uncharted key space uh i would expect that this would be fairly straightforward you should find",
    "start": "986720",
    "end": "992399"
  },
  {
    "text": "that that all of the queries are are working particularly with the tests 7 and above",
    "start": "992399",
    "end": "998160"
  },
  {
    "text": "as it has support for session context something that was",
    "start": "998160",
    "end": "1003759"
  },
  {
    "text": "missing uh earlier but if you use a sharded key space",
    "start": "1003759",
    "end": "1009360"
  },
  {
    "text": "actually the way that you shod your tables which you specify in",
    "start": "1009360",
    "end": "1015199"
  },
  {
    "text": "something called a b schema can affect uh which queries is supported so vt explain uh can accept",
    "start": "1015199",
    "end": "1024079"
  },
  {
    "text": "a v schema and a schema to make sure that it validates with those settings that this list of",
    "start": "1024079",
    "end": "1030558"
  },
  {
    "text": "queries is possible",
    "start": "1030559",
    "end": "1033839"
  },
  {
    "text": "so uh vt explained in a nutshell um here i say vt explain with this",
    "start": "1036959",
    "end": "1042720"
  },
  {
    "start": "1037000",
    "end": "1037000"
  },
  {
    "text": "schema which is my mysql ddl and this v schema and with two shards will this",
    "start": "1042720",
    "end": "1049360"
  },
  {
    "text": "sql query work and then i will get some information to say yes",
    "start": "1049360",
    "end": "1054559"
  },
  {
    "text": "here is how it works so i'm not going to specifically cover the sharding in this",
    "start": "1054559",
    "end": "1060880"
  },
  {
    "text": "talk but i think it's an interesting uh segue to very briefly touch on",
    "start": "1060880",
    "end": "1067360"
  },
  {
    "text": "how you choose to shard your database you know often you're going to be uh modeling it on how the data is",
    "start": "1067360",
    "end": "1073840"
  },
  {
    "text": "accessed so if you're a sas application you may be shouting by the tenant to say that uh for this",
    "start": "1073840",
    "end": "1081520"
  },
  {
    "text": "individual tenant you know i want all of their data to kind of reside together in what we would in diabetes terms say",
    "start": "1081520",
    "end": "1088000"
  },
  {
    "text": "clustering which is a bit of an ambiguous term so i want to cluster the user data all together so they'll get",
    "start": "1088000",
    "end": "1093520"
  },
  {
    "text": "very efficient queries um how you do that though there are some",
    "start": "1093520",
    "end": "1100160"
  },
  {
    "text": "some variations where that might be a good idea or it might be very bad idea if you tend to have",
    "start": "1100160",
    "end": "1106080"
  },
  {
    "text": "very large or lopsided distribution of tenants so um you know let's use the example of",
    "start": "1106080",
    "end": "1111919"
  },
  {
    "text": "of slack where individual slacks could be very large in the",
    "start": "1111919",
    "end": "1119520"
  },
  {
    "text": "individual tenants it might actually be better to shout on the tenants tenant so the individual slack channels rather",
    "start": "1119520",
    "end": "1125919"
  },
  {
    "text": "than the slack deployment and i think the the best way to get an answer for this is to join",
    "start": "1125919",
    "end": "1132640"
  },
  {
    "text": "uh the slack channel for the test and say here's how i plan to shop do you have any experience",
    "start": "1132640",
    "end": "1139120"
  },
  {
    "text": "i i will note though uh one of the interesting things about the test is it does make it very easy to be able to reshard if you've",
    "start": "1139120",
    "end": "1145919"
  },
  {
    "text": "designed if you've decided there's a better way to layout your data and that you can kind of change the",
    "start": "1145919",
    "end": "1151679"
  },
  {
    "text": "scheme and reshod to a different uh way of laying out your data",
    "start": "1151679",
    "end": "1156720"
  },
  {
    "text": "you know the alternatives to using something like the test is you may actually change your applications that it manages",
    "start": "1156720",
    "end": "1162400"
  },
  {
    "text": "the shotting and if you do this i think it's very hard to kind of change the scheme over",
    "start": "1162400",
    "end": "1167679"
  },
  {
    "text": "time often you know if you don't incorporate this into your design that there could be some problem",
    "start": "1167679",
    "end": "1174320"
  },
  {
    "text": "so uh interesting segue but that's let's look back to um",
    "start": "1174320",
    "end": "1179440"
  },
  {
    "text": "uh to our migration so we've validated that our queries work with bt explain and we get no errors and it",
    "start": "1179440",
    "end": "1186960"
  },
  {
    "text": "looks like we're ready to proceed forward uh or almost uh there might be some some",
    "start": "1186960",
    "end": "1193280"
  },
  {
    "text": "scenarios that are hard to test uh maybe you might find that you've tested today's queries and you validated them",
    "start": "1193280",
    "end": "1199200"
  },
  {
    "text": "and there's something else that's in in production uh and um you know we have to make sure",
    "start": "1199200",
    "end": "1205280"
  },
  {
    "text": "that we have that ability to to back out this is basically just the first level lint check to know that",
    "start": "1205280",
    "end": "1210559"
  },
  {
    "text": "alpha test migration is going to be successful",
    "start": "1210559",
    "end": "1214960"
  },
  {
    "start": "1216000",
    "end": "1216000"
  },
  {
    "text": "so i would say that i run this in dev i run this in qa i make sure that i i um catch the",
    "start": "1216799",
    "end": "1223360"
  },
  {
    "text": "typical gotchas uh as well as things that might be you know coming through into heaven production that we might not catch",
    "start": "1223360",
    "end": "1230559"
  },
  {
    "text": "uh we might not have got a very indicative sample of our slow query log file in",
    "start": "1230559",
    "end": "1237360"
  },
  {
    "text": "production so you might have some specific reports that run on the first day of the quarter",
    "start": "1237360",
    "end": "1242400"
  },
  {
    "text": "that might not have been captured and i think this is very hard to have a",
    "start": "1242400",
    "end": "1248480"
  },
  {
    "text": "100 certainty all of this is sort of building towards the confidence to make sure that we",
    "start": "1248480",
    "end": "1253679"
  },
  {
    "text": "we know that the test is likely going to be a bit a good fit for our application but you",
    "start": "1253679",
    "end": "1259120"
  },
  {
    "text": "you may find that that um you know just through many moving pieces that that there will still be some",
    "start": "1259120",
    "end": "1265120"
  },
  {
    "text": "queries that you might have to fix this you migrate",
    "start": "1265120",
    "end": "1269200"
  },
  {
    "start": "1270000",
    "end": "1270000"
  },
  {
    "text": "okay so let's go to the second part which is to make sure that we can survive the added latency",
    "start": "1270240",
    "end": "1276000"
  },
  {
    "text": "the test requires at least one more network to go through that vt gate to go to mysql",
    "start": "1276000",
    "end": "1282240"
  },
  {
    "text": "if we use the load balancer as well which i said is a common deployment scenario in cloud native applications",
    "start": "1282240",
    "end": "1290000"
  },
  {
    "text": "you've got two more hops so um you know the the scenario where this is going to hurt the most is if",
    "start": "1290000",
    "end": "1296000"
  },
  {
    "text": "we're doing a lot of queries uh you know to load an individual web page if we",
    "start": "1296000",
    "end": "1301200"
  },
  {
    "text": "imagine that our application is web app so uh there's this pattern called n plus",
    "start": "1301200",
    "end": "1306480"
  },
  {
    "text": "one you know it goes by many names but that's the one that i i call it where you've got a while loop",
    "start": "1306480",
    "end": "1312960"
  },
  {
    "text": "and inside the loop you're doing queries repetitively accessing uh you know the individual values for",
    "start": "1312960",
    "end": "1320080"
  },
  {
    "text": "this row that we're analyzing so you've got a while loop 100 rows and then you've got 100 queries",
    "start": "1320080",
    "end": "1325840"
  },
  {
    "text": "for each of those back to the database i think that very often those queries",
    "start": "1325840",
    "end": "1332640"
  },
  {
    "text": "when they get to mysql they're basically free they they might take you know 0.1 or 0.01 of a millisecond to",
    "start": "1332640",
    "end": "1342080"
  },
  {
    "text": "execute on mysql but i think to to design a system i use",
    "start": "1342080",
    "end": "1347840"
  },
  {
    "text": "the back of the napkin mat that it's about one to two milliseconds to get to mysql and back so",
    "start": "1347840",
    "end": "1354400"
  },
  {
    "text": "uh if we can imagine that we've got a hundred uh queries that uh is taking you know 100",
    "start": "1354400",
    "end": "1360880"
  },
  {
    "text": "milliseconds plus a little bit of small bit on top once we add two more network hops we're",
    "start": "1360880",
    "end": "1366480"
  },
  {
    "text": "looking at 300 to maybe more uh milliseconds for that that while loop",
    "start": "1366480",
    "end": "1373840"
  },
  {
    "text": "and this might be sufficiently enough that it could actually uh impact your",
    "start": "1373840",
    "end": "1379280"
  },
  {
    "text": "your application um i tend to think that this impacts the badly design applications",
    "start": "1379280",
    "end": "1384640"
  },
  {
    "text": "that the most so maybe this is an opportunity to fix your half at the same time um",
    "start": "1384640",
    "end": "1392559"
  },
  {
    "text": "generally you'll eliminate that uh querying in the while loop by sort of like batch retrieving it before",
    "start": "1392559",
    "end": "1399440"
  },
  {
    "text": "you do the while loop maybe with a big in clause in a query to mysql",
    "start": "1399440",
    "end": "1406400"
  },
  {
    "text": "if you can't do that let's pretend for example that you've got a while loop where the results of the previous query impact",
    "start": "1406400",
    "end": "1413200"
  },
  {
    "text": "the next query you may have to use some sort of parallelism to be able to reduce this latency but",
    "start": "1413200",
    "end": "1419520"
  },
  {
    "text": "latency is something that you should keep in mind uh in your evaluation or your validation",
    "start": "1419520",
    "end": "1425200"
  },
  {
    "text": "of the tests um it's not unique to the test by any stretch you know if you're evaluating",
    "start": "1425200",
    "end": "1430799"
  },
  {
    "text": "other distributed databases as well as the tests i think they're all going to suffer a",
    "start": "1430799",
    "end": "1435840"
  },
  {
    "text": "very similar problem to this and that they do have more components and more hops to be able to get to the",
    "start": "1435840",
    "end": "1442840"
  },
  {
    "text": "data okay and then the sort of third part of this story is that",
    "start": "1442840",
    "end": "1449440"
  },
  {
    "text": "everything's looking good so far but uh how do we do this in a safe way that makes sense",
    "start": "1449440",
    "end": "1455279"
  },
  {
    "text": "for uh ops teams and a good practice with deploying changes",
    "start": "1455279",
    "end": "1460559"
  },
  {
    "text": "is that you should use a canary so uh if you can just deploy uh to five",
    "start": "1460559",
    "end": "1466799"
  },
  {
    "text": "percent of your application rather than a hundred percent uh this is generally fairly hard to do with stateful services",
    "start": "1466799",
    "end": "1474799"
  },
  {
    "text": "because they start modifying data often it's done with you know deploying new versions of your application but as we observed when we",
    "start": "1474799",
    "end": "1482240"
  },
  {
    "text": "look at that architecture diagram and i'll flip it back up in a second",
    "start": "1482240",
    "end": "1487520"
  },
  {
    "text": "um a lot of the tests is actually stateless the state is stored in mysql so it is possible to deploy the tests",
    "start": "1487520",
    "end": "1495840"
  },
  {
    "text": "sort of like on the side and route some of your application uh through the test and the rest of it",
    "start": "1495840",
    "end": "1500880"
  },
  {
    "text": "directly to mysql to be able to do that that validation and if we have problems we can just roll",
    "start": "1500880",
    "end": "1506320"
  },
  {
    "text": "back to regular mysql uh as is required so typically what i'm doing uh when i first start out with five",
    "start": "1506320",
    "end": "1512720"
  },
  {
    "text": "percent is a man i'm operating the test and making sure that it it um reacts the way i expect it to so",
    "start": "1512720",
    "end": "1520640"
  },
  {
    "text": "is the cpu load uh acceptable you know maybe it's got logging i make sure that it's not filling up disks",
    "start": "1520640",
    "end": "1527120"
  },
  {
    "text": "through through those those log files i look for errors in my application i look for errors in",
    "start": "1527120",
    "end": "1532720"
  },
  {
    "text": "both mysql and for test logs and i start ramping up that at low to eventually getting to 100 so let's",
    "start": "1532720",
    "end": "1540400"
  },
  {
    "text": "look at that on the diagram first i'll throw up my architecture diagram again and say um",
    "start": "1540400",
    "end": "1545600"
  },
  {
    "text": "these pieces in the middle vtg-gate is stateless uh the topper server is your choice of",
    "start": "1545600",
    "end": "1551200"
  },
  {
    "text": "ncd or uh zookeeper that's where the state is stored server protesters managed to outsource and get out of that",
    "start": "1551200",
    "end": "1557600"
  },
  {
    "text": "uh problem of storing state there and then inside of the shards it's using mysql to be able to store",
    "start": "1557600",
    "end": "1563200"
  },
  {
    "text": "that that state so this makes the test inherently having the building blocks to make a",
    "start": "1563200",
    "end": "1569360"
  },
  {
    "text": "very scalable system you can just add vt gates to add capacity and you can scale by adding",
    "start": "1569360",
    "end": "1575440"
  },
  {
    "text": "shots to add capacity in that stateful service as well the vt gates don't even know really",
    "start": "1575440",
    "end": "1582159"
  },
  {
    "text": "about each other they just act completely independent",
    "start": "1582159",
    "end": "1587360"
  },
  {
    "text": "okay so let's talk about the canary deployment uh on sort of an architecture diagram a",
    "start": "1588880",
    "end": "1594400"
  },
  {
    "start": "1589000",
    "end": "1589000"
  },
  {
    "text": "different perspective of that the previous slide so we have our application server",
    "start": "1594400",
    "end": "1599520"
  },
  {
    "text": "on the left still and then uh our day one deployment or our day zero deployment is that all",
    "start": "1599520",
    "end": "1606000"
  },
  {
    "text": "of our applications were directly talking to mysql what we can do is we can have five",
    "start": "1606000",
    "end": "1612640"
  },
  {
    "text": "percent of our application service or application speak to vtgate which",
    "start": "1612640",
    "end": "1618000"
  },
  {
    "text": "routes to vt tablet which uses an unmanaged or external mysql and this is where i would sort out",
    "start": "1618000",
    "end": "1625279"
  },
  {
    "text": "so there's there's a few ways that you can do this maybe your application has a configuration file",
    "start": "1625279",
    "end": "1630480"
  },
  {
    "text": "for the database server it speaks to you may have to change whole servers to to go to um",
    "start": "1630480",
    "end": "1637200"
  },
  {
    "text": "an individual vertex or mysql you know not many applications can roll",
    "start": "1637200",
    "end": "1643760"
  },
  {
    "text": "the dice to say you know five percent connections go here so that's kind of what i've done on this architecture diagram",
    "start": "1643760",
    "end": "1650240"
  },
  {
    "text": "uh if you have trouble doing this as well in your your app because you don't have many application service uh what you could also do is you",
    "start": "1650240",
    "end": "1657520"
  },
  {
    "text": "could put a sidecar proxy on the application servers and then you can basically pick",
    "start": "1657520",
    "end": "1664000"
  },
  {
    "text": "five percent of of connections and say that you're out through vt gate and the rest go to existing mysql",
    "start": "1664000",
    "end": "1669919"
  },
  {
    "text": "and as i said if it looks like it's healthy i increase that from five percent to 20 30 and then eventually at 100",
    "start": "1669919",
    "end": "1677840"
  },
  {
    "text": "it looks like it's not then i have a very easy way to be able to switch back to routing directly to mysql",
    "start": "1677840",
    "end": "1685520"
  },
  {
    "text": "so our goal is to get to 100 because we won't be able to take advantage of the tests until we get there because we won't be",
    "start": "1685520",
    "end": "1692559"
  },
  {
    "text": "able to shot these tables if we did that the existing applications that are connecting directly to mysql",
    "start": "1692559",
    "end": "1698240"
  },
  {
    "text": "are just going to be really confused uh but we should find or we should be",
    "start": "1698240",
    "end": "1703360"
  },
  {
    "text": "able to validate in a production way that you know there's no added latency there's no query errors and then we",
    "start": "1703360",
    "end": "1709679"
  },
  {
    "text": "basically just keep ramping things up uh till we get further along",
    "start": "1709679",
    "end": "1715440"
  },
  {
    "text": "okay so uh let's talk about uh the end of phase one is when we get to",
    "start": "1717039",
    "end": "1722320"
  },
  {
    "start": "1719000",
    "end": "1719000"
  },
  {
    "text": "this magical goal of 100 where we have uh all applications going",
    "start": "1722320",
    "end": "1728799"
  },
  {
    "text": "to bt gate to see their version of mysql and then",
    "start": "1728799",
    "end": "1733840"
  },
  {
    "text": "from there what i would typically do is i would recommend that you move from using your existing mysql server",
    "start": "1733840",
    "end": "1740559"
  },
  {
    "start": "1736000",
    "end": "1736000"
  },
  {
    "text": "to using mysql server that's managed by the tests so we have uh now a tablet that's",
    "start": "1740559",
    "end": "1747440"
  },
  {
    "text": "that's set up on my slide where we have a mysql server with that bt tablet",
    "start": "1747440",
    "end": "1752799"
  },
  {
    "text": "process and then i want to what i want to be able to do is it move the data",
    "start": "1752799",
    "end": "1757840"
  },
  {
    "text": "from my existing server live server like an online migration from my existing server to the tests",
    "start": "1757840",
    "end": "1764880"
  },
  {
    "text": "and the test actually supports the ability to copy this data over it has a native uh workflow that it",
    "start": "1764880",
    "end": "1771279"
  },
  {
    "start": "1765000",
    "end": "1765000"
  },
  {
    "text": "calls remove tables it's part of a feature called viewer application uh basically it'll just follow the",
    "start": "1771279",
    "end": "1778080"
  },
  {
    "text": "replication stream so something called binary logging needs to be enabled on on that existing mysql",
    "start": "1778080",
    "end": "1784000"
  },
  {
    "text": "server it'll copy that data over to this new test server and then when it gets to 100 you just",
    "start": "1784000",
    "end": "1791520"
  },
  {
    "text": "have a very small blip of uh where those tables will be inaccessible while it captures up to the",
    "start": "1791520",
    "end": "1797679"
  },
  {
    "text": "last part of replication and then uh your vt8 knows that it has to connect to",
    "start": "1797679",
    "end": "1803440"
  },
  {
    "text": "to this uh to this set of vt tablets in instead to be able to to",
    "start": "1803440",
    "end": "1810080"
  },
  {
    "text": "get the the data for these tables so that last operation uh this is what we call a switch so we",
    "start": "1810080",
    "end": "1817279"
  },
  {
    "text": "have move tables and then we have a switch to be able to cut over it and we like the term switch because it's",
    "start": "1817279",
    "end": "1823360"
  },
  {
    "text": "like flicking a switch that final operation should be um you know very safe and not so destructive",
    "start": "1823360",
    "end": "1829840"
  },
  {
    "text": "uh to make things completely live just a few requirements on the source to",
    "start": "1829840",
    "end": "1834880"
  },
  {
    "text": "be able to do this um these are not actually the defaults uh in older versions of mysql they are the",
    "start": "1834880",
    "end": "1841520"
  },
  {
    "text": "defaults in mysql 8 and above which is a little bit newer i would say you know",
    "start": "1841520",
    "end": "1847120"
  },
  {
    "text": "most of the test users are using mysql57 just for a little back there but you know many",
    "start": "1847120",
    "end": "1852480"
  },
  {
    "text": "are migrating even from from older versions and uh it it works pretty well you know",
    "start": "1852480",
    "end": "1859279"
  },
  {
    "text": "we in database terms use the the terminology online to say that it's on online migration",
    "start": "1859279",
    "end": "1864720"
  },
  {
    "text": "it doesn't affect really your read operations or your write operations of the database",
    "start": "1864720",
    "end": "1870240"
  },
  {
    "text": "it just copies in the background while operations is still happening",
    "start": "1870240",
    "end": "1876000"
  },
  {
    "start": "1875000",
    "end": "1875000"
  },
  {
    "text": "so we end up to this phase where we've copied all of our data and now it's in the tests managed",
    "start": "1876559",
    "end": "1883039"
  },
  {
    "text": "tablets and then we're able to change the vt gate to say that",
    "start": "1883039",
    "end": "1888159"
  },
  {
    "text": "now it should go to our for tests to be able to get access to",
    "start": "1888159",
    "end": "1893679"
  },
  {
    "text": "that data from this point uh we're able to",
    "start": "1893679",
    "end": "1900559"
  },
  {
    "text": "do new development basically we can start charting our system we cannot start adding new tablets if we need to",
    "start": "1900559",
    "end": "1905600"
  },
  {
    "text": "be able to do that we can manage this for test cluster without bt ctl gui",
    "start": "1905600",
    "end": "1911120"
  },
  {
    "text": "uh we're completely in the tests at this point so if you were choosing to back out the",
    "start": "1911120",
    "end": "1916960"
  },
  {
    "text": "time to do this was when you're at that five percent fifty percent but the the data is actually still in",
    "start": "1916960",
    "end": "1922480"
  },
  {
    "text": "you know my skill formats so other than it being uh potentially sharded if you do wanna change you do have that ability",
    "start": "1922480",
    "end": "1929360"
  },
  {
    "text": "for test doesn't really present you any any lock-in okay so our setup was that we migrated a",
    "start": "1929360",
    "end": "1937600"
  },
  {
    "start": "1935000",
    "end": "1935000"
  },
  {
    "text": "legacy mysql that was treated as uh one uncharted key space uh test",
    "start": "1937600",
    "end": "1943200"
  },
  {
    "text": "terminology would say that that was a tablet server that was externally managed and our new setup is that we",
    "start": "1943200",
    "end": "1949200"
  },
  {
    "text": "have a test tablet that's uncharted we can still uh join queries between tablets in each",
    "start": "1949200",
    "end": "1955679"
  },
  {
    "text": "key space you know even when we move to sharded it's recommended to keep updates uh",
    "start": "1955679",
    "end": "1962159"
  },
  {
    "text": "contained within a single key space just in the tester's design uh in that it doesn't want you to do a",
    "start": "1962159",
    "end": "1968960"
  },
  {
    "text": "two-phase commit to be able to do updates so we didn't talk about our shouting design in this talk uh but i did sort of allude to it uh as",
    "start": "1968960",
    "end": "1976720"
  },
  {
    "text": "you design things off when you're designing based on the tenant or something like that",
    "start": "1976720",
    "end": "1982080"
  },
  {
    "text": "uh if you want to learn more about the tests and particularly about this workflow we",
    "start": "1982080",
    "end": "1987279"
  },
  {
    "text": "have some very good user guides on the test website the one in particular that i'm basing a lot of",
    "start": "1987279",
    "end": "1992799"
  },
  {
    "start": "1992000",
    "end": "1992000"
  },
  {
    "text": "this talk on is something called the unmanaged tablet guide which shows how to set up the tests against a",
    "start": "1992799",
    "end": "2000080"
  },
  {
    "text": "mysql server that's not going to be managed by vitesse and you can use this if you want to use",
    "start": "2000080",
    "end": "2005200"
  },
  {
    "text": "the tests against something like rds aurora cloud sql",
    "start": "2005200",
    "end": "2010480"
  },
  {
    "text": "and uh with that uh let's open for questions so um super and i will be on the line thank",
    "start": "2010480",
    "end": "2016480"
  },
  {
    "text": "you very much for joining us today and please ask away",
    "start": "2016480",
    "end": "2021200"
  },
  {
    "text": "all right there are a few questions that we answered interactively maybe we can",
    "start": "2031120",
    "end": "2038000"
  },
  {
    "text": "read out the answers of one of them uh that's let's see",
    "start": "2038000",
    "end": "2046240"
  },
  {
    "text": "we could talk about the uh there is uh i'm looking for a good",
    "start": "2046240",
    "end": "2053839"
  },
  {
    "text": "one to answer since we are very short on time",
    "start": "2053839",
    "end": "2060000"
  },
  {
    "text": "uh one is a good one what's the minimum number of components",
    "start": "2060000",
    "end": "2065118"
  },
  {
    "text": "of the test yeah all right you answered it so i'll let you answer that again",
    "start": "2065119",
    "end": "2070240"
  },
  {
    "text": "if you want it's a quiz question uh so we have vt tablet vt gates",
    "start": "2070240",
    "end": "2077599"
  },
  {
    "text": "and vtc tld those are the three main components needed for running a",
    "start": "2077599",
    "end": "2084158"
  },
  {
    "text": "with s cluster you can actually run",
    "start": "2084159",
    "end": "2090320"
  },
  {
    "text": "you can actually serve queries without a vtc tld to serve queries you need only the vt gate component and the vt tablet",
    "start": "2090320",
    "end": "2099280"
  },
  {
    "text": "component uh there's the other one which is",
    "start": "2100839",
    "end": "2108240"
  },
  {
    "text": "actually a very good question that was about we implemented a",
    "start": "2108240",
    "end": "2113280"
  },
  {
    "text": "kubernetes topo server but we deprecated helm after that",
    "start": "2113280",
    "end": "2120160"
  },
  {
    "text": "and we did not port that implementation to the operator it's something that we",
    "start": "2120160",
    "end": "2125520"
  },
  {
    "text": "just didn't think about because but it is less important about",
    "start": "2125520",
    "end": "2131839"
  },
  {
    "text": "which topo server you choose because the whole idea of the operator is that it's autopilot",
    "start": "2131839",
    "end": "2137359"
  },
  {
    "text": "it should just run for yourself run by itself so you shouldn't have to worry about",
    "start": "2137359",
    "end": "2142480"
  },
  {
    "text": "what it does underneath to store the turpo but if there are use cases where there",
    "start": "2142480",
    "end": "2149680"
  },
  {
    "text": "is strong reason where somebody would want to use the kubernetes",
    "start": "2149680",
    "end": "2154800"
  },
  {
    "text": "kubernetes itself as a toposerver it's something that we can add support for",
    "start": "2154800",
    "end": "2159839"
  },
  {
    "text": "but this is the first time i'm hearing this question and that's also one of the reasons why we never thought about it",
    "start": "2159839",
    "end": "2164880"
  },
  {
    "text": "because it's the operator works so well right now as it stands",
    "start": "2164880",
    "end": "2173839"
  },
  {
    "text": "yeah do you want to take on the proxy sequel one as the last question sure so there's a question about how",
    "start": "2177680",
    "end": "2184000"
  },
  {
    "text": "does vtgate compare to proxy sql and my answer was i actually think that proxy sequel probably does",
    "start": "2184000",
    "end": "2190400"
  },
  {
    "text": "better in performance but the second part to that is how much will it matter and",
    "start": "2190400",
    "end": "2195520"
  },
  {
    "text": "actually both will add latency and i think i'm generally more concerned",
    "start": "2195520",
    "end": "2200560"
  },
  {
    "text": "about latency in a migration path and it should be equal there um yeah you may need to run more",
    "start": "2200560",
    "end": "2207119"
  },
  {
    "text": "uh vt gates versus proxy sequels but because it's stateless it's fairly easy to be able to do that",
    "start": "2207119",
    "end": "2215200"
  },
  {
    "text": "yep and we test is obviously a more comprehensive solution so if you don't need all the features of it tests i",
    "start": "2215200",
    "end": "2221680"
  },
  {
    "text": "would actually send you towards proxy sql because it's more lightweight",
    "start": "2221680",
    "end": "2229839"
  },
  {
    "text": "awesome i think we're at time i don't know if our moderator is going to jump in and kick",
    "start": "2231680",
    "end": "2236720"
  },
  {
    "text": "us out but thank you for coming yeah thank you you would have seen a reminder pop up on screen uh please see",
    "start": "2236720",
    "end": "2243359"
  },
  {
    "text": "us at office hours i think it's starting in about 20 minutes time",
    "start": "2243359",
    "end": "2249599"
  }
]