[
  {
    "text": "I guess let's get started so hi everyone",
    "start": "269",
    "end": "5750"
  },
  {
    "text": "I'm Tom fameux engineer manager for the",
    "start": "5750",
    "end": "9389"
  },
  {
    "text": "image container team at linking my",
    "start": "9389",
    "end": "12150"
  },
  {
    "text": "colleague Irene Shahab stop engineer at",
    "start": "12150",
    "end": "15360"
  },
  {
    "text": "Lindy today we are going to talk about",
    "start": "15360",
    "end": "17670"
  },
  {
    "text": "living is journey of adopting Konami's",
    "start": "17670",
    "end": "20220"
  },
  {
    "text": "for unified classroom a common platform",
    "start": "20220",
    "end": "25009"
  },
  {
    "text": "as you can see from this picture our",
    "start": "25640",
    "end": "29580"
  },
  {
    "text": "journey is a Star Wars story assuming",
    "start": "29580",
    "end": "33210"
  },
  {
    "text": "many of you have watched Star Wars Star",
    "start": "33210",
    "end": "35969"
  },
  {
    "text": "Wars um here's the agenda in absolute",
    "start": "35969",
    "end": "44399"
  },
  {
    "text": "view we will start with introducing",
    "start": "44399",
    "end": "46739"
  },
  {
    "text": "existing nicotine class or management",
    "start": "46739",
    "end": "49110"
  },
  {
    "text": "platform how it encountered the new",
    "start": "49110",
    "end": "52020"
  },
  {
    "text": "challenges does revaluated kubernetes as",
    "start": "52020",
    "end": "54510"
  },
  {
    "text": "our new hope then how we quickly started",
    "start": "54510",
    "end": "57329"
  },
  {
    "text": "and approved value by support a",
    "start": "57329",
    "end": "59789"
  },
  {
    "text": "different kind of machine machine",
    "start": "59789",
    "end": "61320"
  },
  {
    "text": "learning related workloads on cover",
    "start": "61320",
    "end": "64080"
  },
  {
    "text": "aunty's and then eventually we're",
    "start": "64080",
    "end": "65820"
  },
  {
    "text": "extending kubernetes and unifying our",
    "start": "65820",
    "end": "69510"
  },
  {
    "text": "platform so LinkedIn is the word or its",
    "start": "69510",
    "end": "75810"
  },
  {
    "text": "largest professional network with",
    "start": "75810",
    "end": "77640"
  },
  {
    "text": "morning half opinion professionals in",
    "start": "77640",
    "end": "81570"
  },
  {
    "text": "more than 200 countries and territories",
    "start": "81570",
    "end": "83909"
  },
  {
    "text": "worldwide our mission is to connect the",
    "start": "83909",
    "end": "87689"
  },
  {
    "text": "world's professionals to make them more",
    "start": "87689",
    "end": "89909"
  },
  {
    "text": "productive productive and successful",
    "start": "89909",
    "end": "93649"
  },
  {
    "text": "s'posed of us working the team called",
    "start": "94820",
    "end": "97200"
  },
  {
    "text": "LPS LinkedIn platform and service our",
    "start": "97200",
    "end": "100680"
  },
  {
    "text": "mission is to provide a compute fat",
    "start": "100680",
    "end": "102990"
  },
  {
    "text": "forum for linking engineers to make them",
    "start": "102990",
    "end": "105329"
  },
  {
    "text": "more productive and make efficient use",
    "start": "105329",
    "end": "108090"
  },
  {
    "text": "of our hardware resources so we have",
    "start": "108090",
    "end": "112439"
  },
  {
    "text": "four pillars enable innovation by",
    "start": "112439",
    "end": "115890"
  },
  {
    "text": "providing the right building blocks and",
    "start": "115890",
    "end": "118950"
  },
  {
    "text": "abstractions increased developer and",
    "start": "118950",
    "end": "121710"
  },
  {
    "text": "operations productivity and increase",
    "start": "121710",
    "end": "124409"
  },
  {
    "text": "hardware utilization",
    "start": "124409",
    "end": "127729"
  },
  {
    "text": "this is our scale we manage thousands of",
    "start": "128729",
    "end": "132520"
  },
  {
    "text": "services every day we have hundreds of",
    "start": "132520",
    "end": "135520"
  },
  {
    "text": "thousands of builds we have tens",
    "start": "135520",
    "end": "138130"
  },
  {
    "text": "thousands of deployments daily we manage",
    "start": "138130",
    "end": "141790"
  },
  {
    "text": "hundreds of thousands of hosts men in",
    "start": "141790",
    "end": "144130"
  },
  {
    "text": "multiple datacenters with millions of",
    "start": "144130",
    "end": "146770"
  },
  {
    "text": "containers",
    "start": "146770",
    "end": "149010"
  },
  {
    "text": "so this is our existing cost management",
    "start": "149610",
    "end": "152470"
  },
  {
    "text": "platform is simplified layered view on a",
    "start": "152470",
    "end": "156370"
  },
  {
    "text": "very bottom we have in ops which manages",
    "start": "156370",
    "end": "159550"
  },
  {
    "text": "Hardware asset and their lifecycle then",
    "start": "159550",
    "end": "163330"
  },
  {
    "text": "we have ready its resource allocation",
    "start": "163330",
    "end": "165459"
  },
  {
    "text": "meaning thing and live is for linking",
    "start": "165459",
    "end": "168640"
  },
  {
    "text": "deployment control plane so on top of it",
    "start": "168640",
    "end": "172660"
  },
  {
    "text": "we have the pass layer race is for auto",
    "start": "172660",
    "end": "176230"
  },
  {
    "text": "scaling and auto ram addition orca is",
    "start": "176230",
    "end": "179830"
  },
  {
    "text": "for short-lived job orchestration new on",
    "start": "179830",
    "end": "183610"
  },
  {
    "text": "t is for storage service stop stop",
    "start": "183610",
    "end": "186580"
  },
  {
    "text": "storage self-service provisioning on the",
    "start": "186580",
    "end": "189700"
  },
  {
    "text": "topmost we have mistral the idea is we",
    "start": "189700",
    "end": "192489"
  },
  {
    "text": "are moving into this intent-based",
    "start": "192489",
    "end": "193959"
  },
  {
    "text": "service blueprint in this architectural",
    "start": "193959",
    "end": "200650"
  },
  {
    "text": "diagram you can see we have multiple",
    "start": "200650",
    "end": "203590"
  },
  {
    "text": "datacenters each defender has multiple",
    "start": "203590",
    "end": "206290"
  },
  {
    "text": "clusters we call it a fabric the fabric",
    "start": "206290",
    "end": "209830"
  },
  {
    "text": "has its own control play we have one",
    "start": "209830",
    "end": "213010"
  },
  {
    "text": "main artifact two clusters and another",
    "start": "213010",
    "end": "215590"
  },
  {
    "text": "for disaster recovery purpose on in",
    "start": "215590",
    "end": "218560"
  },
  {
    "text": "another defender all the fabrics have",
    "start": "218560",
    "end": "221560"
  },
  {
    "text": "their own artifactory proxies to scale",
    "start": "221560",
    "end": "224320"
  },
  {
    "text": "out the route traffic let's go through a",
    "start": "224320",
    "end": "229720"
  },
  {
    "text": "typical manual deployment workflow",
    "start": "229720",
    "end": "233160"
  },
  {
    "text": "developer first comes to way to allocate",
    "start": "233160",
    "end": "235930"
  },
  {
    "text": "or change resources for their services",
    "start": "235930",
    "end": "238290"
  },
  {
    "text": "they normally create a resource slice or",
    "start": "238290",
    "end": "241360"
  },
  {
    "text": "profile then they add instances or",
    "start": "241360",
    "end": "244239"
  },
  {
    "text": "remove instances from it",
    "start": "244239",
    "end": "247769"
  },
  {
    "text": "after resource allocation they can",
    "start": "248130",
    "end": "251050"
  },
  {
    "text": "trigger the performance through our",
    "start": "251050",
    "end": "252580"
  },
  {
    "text": "deployment control plane lead which will",
    "start": "252580",
    "end": "255730"
  },
  {
    "text": "check our back against a check",
    "start": "255730",
    "end": "258549"
  },
  {
    "text": "their deployment policies and trigger",
    "start": "258549",
    "end": "260410"
  },
  {
    "text": "config compilation and public published",
    "start": "260410",
    "end": "263230"
  },
  {
    "text": "process then generate and stand the",
    "start": "263230",
    "end": "266530"
  },
  {
    "text": "deployment plan to physical host after",
    "start": "266530",
    "end": "272470"
  },
  {
    "text": "the deployment plan gets through the",
    "start": "272470",
    "end": "274180"
  },
  {
    "text": "host the host launcher will download the",
    "start": "274180",
    "end": "277150"
  },
  {
    "text": "artifact image and competes then start",
    "start": "277150",
    "end": "281530"
  },
  {
    "text": "the application in the locker container",
    "start": "281530",
    "end": "283650"
  },
  {
    "text": "which is our abstraction layer overrun",
    "start": "283650",
    "end": "286450"
  },
  {
    "text": "seen during the container start process",
    "start": "286450",
    "end": "289570"
  },
  {
    "text": "we decrypt come secrets in a config",
    "start": "289570",
    "end": "293190"
  },
  {
    "text": "opens necessary firewall ports and",
    "start": "293190",
    "end": "296200"
  },
  {
    "text": "download the TLS certificate for the",
    "start": "296200",
    "end": "299530"
  },
  {
    "text": "service so that service to service",
    "start": "299530",
    "end": "301270"
  },
  {
    "text": "communication is HTTPS days other than",
    "start": "301270",
    "end": "308320"
  },
  {
    "text": "the long-running service job we also",
    "start": "308320",
    "end": "310090"
  },
  {
    "text": "have batch jobs orchestrated through",
    "start": "310090",
    "end": "313270"
  },
  {
    "text": "Oregon orca was started as our internal",
    "start": "313270",
    "end": "316419"
  },
  {
    "text": "Jenkins replacement basically it creates",
    "start": "316419",
    "end": "319390"
  },
  {
    "text": "a tree of short-run jobs with priorities",
    "start": "319390",
    "end": "322810"
  },
  {
    "text": "and then utilize spare capacity in our",
    "start": "322810",
    "end": "326410"
  },
  {
    "text": "common pool when there is no available",
    "start": "326410",
    "end": "328810"
  },
  {
    "text": "resources in the common pool the table",
    "start": "328810",
    "end": "331419"
  },
  {
    "text": "will remain in queue",
    "start": "331419",
    "end": "334530"
  },
  {
    "text": "so all car presented this challenges in",
    "start": "338050",
    "end": "341379"
  },
  {
    "text": "term of a capability to support growing",
    "start": "341379",
    "end": "343419"
  },
  {
    "text": "in batch workloads and then another",
    "start": "343419",
    "end": "346509"
  },
  {
    "text": "challenge is how do we model the",
    "start": "346509",
    "end": "349210"
  },
  {
    "text": "emerging for example AI workloads in our",
    "start": "349210",
    "end": "351930"
  },
  {
    "text": "existing platform last but not least",
    "start": "351930",
    "end": "355030"
  },
  {
    "text": "having this portable stack across on",
    "start": "355030",
    "end": "358539"
  },
  {
    "text": "Prime and a juror is critical to us",
    "start": "358539",
    "end": "360819"
  },
  {
    "text": "nowadays we felt kubernetes and other",
    "start": "360819",
    "end": "372909"
  },
  {
    "text": "modern schedulers gave us a new hope to",
    "start": "372909",
    "end": "378060"
  },
  {
    "text": "deal with these challenges oops",
    "start": "378060",
    "end": "382479"
  },
  {
    "text": "backwards we set up the experiment we",
    "start": "382479",
    "end": "387789"
  },
  {
    "text": "set up a 1602 Gorillaz cluster and ran",
    "start": "387789",
    "end": "390909"
  },
  {
    "text": "as many orca post comment jobs and there",
    "start": "390909",
    "end": "395229"
  },
  {
    "text": "as possible",
    "start": "395229",
    "end": "395979"
  },
  {
    "text": "host commit jobs are a job that run when",
    "start": "395979",
    "end": "398949"
  },
  {
    "text": "a LinkedIn engineer submits code or",
    "start": "398949",
    "end": "402250"
  },
  {
    "text": "Mardis code or creates a cool request",
    "start": "402250",
    "end": "405340"
  },
  {
    "text": "and we found out that kubernetes",
    "start": "405340",
    "end": "409870"
  },
  {
    "text": "performed admirably compared to our own",
    "start": "409870",
    "end": "412479"
  },
  {
    "text": "stack in measures such as how long does",
    "start": "412479",
    "end": "415810"
  },
  {
    "text": "it take to take a job from queued to",
    "start": "415810",
    "end": "419469"
  },
  {
    "text": "running to Varennes performed really",
    "start": "419469",
    "end": "421479"
  },
  {
    "text": "well we we performed several other more",
    "start": "421479",
    "end": "428680"
  },
  {
    "text": "tests and holistically we realize that",
    "start": "428680",
    "end": "431949"
  },
  {
    "text": "kubernetes and other modern schedulers",
    "start": "431949",
    "end": "435009"
  },
  {
    "text": "can provide a generational boost to the",
    "start": "435009",
    "end": "439029"
  },
  {
    "text": "productivity operability and utilization",
    "start": "439029",
    "end": "442449"
  },
  {
    "text": "of our application fleet beyond what our",
    "start": "442449",
    "end": "446500"
  },
  {
    "text": "current stack made of rain rain lid",
    "start": "446500",
    "end": "449199"
  },
  {
    "text": "Locker cap among all the systems that we",
    "start": "449199",
    "end": "455020"
  },
  {
    "text": "tested kubernetes was the one with the",
    "start": "455020",
    "end": "457210"
  },
  {
    "text": "most capabilities it's built in this",
    "start": "457210",
    "end": "461319"
  },
  {
    "text": "kind of layered way where there's a",
    "start": "461319",
    "end": "465190"
  },
  {
    "text": "robust ecosystem around it and a lot of",
    "start": "465190",
    "end": "470830"
  },
  {
    "text": "components",
    "start": "470830",
    "end": "471639"
  },
  {
    "text": "have been built around that which has",
    "start": "471639",
    "end": "473620"
  },
  {
    "text": "extended its extensibility which I'm",
    "start": "473620",
    "end": "476590"
  },
  {
    "text": "sure you guys are already aware about",
    "start": "476590",
    "end": "478770"
  },
  {
    "text": "overall and because of its extensibility",
    "start": "478770",
    "end": "482499"
  },
  {
    "text": "we felt that it was the scheduler that",
    "start": "482499",
    "end": "485529"
  },
  {
    "text": "we could integrate the best with",
    "start": "485529",
    "end": "488529"
  },
  {
    "text": "LinkedIn's",
    "start": "488529",
    "end": "489249"
  },
  {
    "text": "architecture so we now had two paths to",
    "start": "489249",
    "end": "492460"
  },
  {
    "text": "go forward to whether we could start and",
    "start": "492460",
    "end": "496689"
  },
  {
    "text": "researching on our pluggable scheduler",
    "start": "496689",
    "end": "500909"
  },
  {
    "text": "architecture idea where we could decide",
    "start": "500909",
    "end": "503740"
  },
  {
    "text": "how to integrate kubernetes with the",
    "start": "503740",
    "end": "506919"
  },
  {
    "text": "rest of LinkedIn and complete that work",
    "start": "506919",
    "end": "509050"
  },
  {
    "text": "and versus whether we could also pick",
    "start": "509050",
    "end": "513698"
  },
  {
    "text": "our first use case there were a lot of",
    "start": "513699",
    "end": "516640"
  },
  {
    "text": "teams looking to move into a new school",
    "start": "516640",
    "end": "519219"
  },
  {
    "text": "earnest and we wanted to we had a need",
    "start": "519219",
    "end": "521529"
  },
  {
    "text": "to support them so we decided to do both",
    "start": "521529",
    "end": "524620"
  },
  {
    "text": "but first I'm gonna talk about our first",
    "start": "524620",
    "end": "527230"
  },
  {
    "text": "use case the first use case was due",
    "start": "527230",
    "end": "530769"
  },
  {
    "text": "supporting Jupiter notebooks on",
    "start": "530769",
    "end": "532510"
  },
  {
    "text": "kubernetes and when we proposed this to",
    "start": "532510",
    "end": "536589"
  },
  {
    "text": "LinkedIn security team their question",
    "start": "536589",
    "end": "538449"
  },
  {
    "text": "was kubernetes is not integrated with",
    "start": "538449",
    "end": "541750"
  },
  {
    "text": "any security system that we have in",
    "start": "541750",
    "end": "544390"
  },
  {
    "text": "LinkedIn so is it going to bring down",
    "start": "544390",
    "end": "546250"
  },
  {
    "text": "LinkedIn security or can it can it be",
    "start": "546250",
    "end": "549760"
  },
  {
    "text": "integrated so we decided on our",
    "start": "549760",
    "end": "552880"
  },
  {
    "text": "integration strategy with the kind of",
    "start": "552880",
    "end": "555790"
  },
  {
    "text": "security first in mind we deployed",
    "start": "555790",
    "end": "560350"
  },
  {
    "text": "kubernetes on rain to both the control",
    "start": "560350",
    "end": "563350"
  },
  {
    "text": "plane and the application plane the",
    "start": "563350",
    "end": "566709"
  },
  {
    "text": "cubelets",
    "start": "566709",
    "end": "567310"
  },
  {
    "text": "are all on rain so when they get",
    "start": "567310",
    "end": "569890"
  },
  {
    "text": "deployed they can get a certificate from",
    "start": "569890",
    "end": "574600"
  },
  {
    "text": "our own certificate server and they they",
    "start": "574600",
    "end": "577839"
  },
  {
    "text": "also can send metrics to our own metric",
    "start": "577839",
    "end": "581170"
  },
  {
    "text": "service so this allows us to kind of",
    "start": "581170",
    "end": "584459"
  },
  {
    "text": "discover and may manage kubernetes",
    "start": "584459",
    "end": "587769"
  },
  {
    "text": "cluster just the way we are we've been",
    "start": "587769",
    "end": "589690"
  },
  {
    "text": "managing and discovering rain when we",
    "start": "589690",
    "end": "593709"
  },
  {
    "text": "deployed Jupiter hub on kubernetes so",
    "start": "593709",
    "end": "597010"
  },
  {
    "text": "jabarut hub is mainly to pod and",
    "start": "597010",
    "end": "600459"
  },
  {
    "text": "orchestration pods which is called the",
    "start": "600459",
    "end": "602319"
  },
  {
    "text": "Jupiter hub and then",
    "start": "602319",
    "end": "605570"
  },
  {
    "text": "the actual worker or minion part which",
    "start": "605570",
    "end": "608270"
  },
  {
    "text": "is the kind of the single person",
    "start": "608270",
    "end": "609950"
  },
  {
    "text": "notebook which is like an AI engineer",
    "start": "609950",
    "end": "613280"
  },
  {
    "text": "would use to do their work so both of",
    "start": "613280",
    "end": "616580"
  },
  {
    "text": "these types of pods could get",
    "start": "616580",
    "end": "619280"
  },
  {
    "text": "certificates from our certificate server",
    "start": "619280",
    "end": "621490"
  },
  {
    "text": "and could talk to the rest of LinkedIn",
    "start": "621490",
    "end": "625520"
  },
  {
    "text": "using LinkedIn sewn certificate",
    "start": "625520",
    "end": "627530"
  },
  {
    "text": "authority the users workflow is like",
    "start": "627530",
    "end": "633110"
  },
  {
    "text": "this user logs in to our ml platform UI",
    "start": "633110",
    "end": "638180"
  },
  {
    "text": "and then they get a two-factor",
    "start": "638180",
    "end": "640100"
  },
  {
    "text": "authentication token from our",
    "start": "640100",
    "end": "642530"
  },
  {
    "text": "certificate server and then that token",
    "start": "642530",
    "end": "646220"
  },
  {
    "text": "is used by Jupiter hub to figure out",
    "start": "646220",
    "end": "649370"
  },
  {
    "text": "which user they have to spawn the",
    "start": "649370",
    "end": "651860"
  },
  {
    "text": "notebook pod for and then that notebook",
    "start": "651860",
    "end": "655520"
  },
  {
    "text": "pod gets this token as a secret even",
    "start": "655520",
    "end": "659600"
  },
  {
    "text": "mounted on it so that they can it can",
    "start": "659600",
    "end": "662030"
  },
  {
    "text": "use it for subsequent actions users",
    "start": "662030",
    "end": "666290"
  },
  {
    "text": "notebooks get loaded from a get back",
    "start": "666290",
    "end": "668810"
  },
  {
    "text": "storage service that we have in LinkedIn",
    "start": "668810",
    "end": "671060"
  },
  {
    "text": "and so this allows the user to kind of",
    "start": "671060",
    "end": "674630"
  },
  {
    "text": "do their work and save their work in",
    "start": "674630",
    "end": "676640"
  },
  {
    "text": "that get back storage repository and",
    "start": "676640",
    "end": "679330"
  },
  {
    "text": "when they come back to the notebook",
    "start": "679330",
    "end": "682310"
  },
  {
    "text": "platform they can start over from where",
    "start": "682310",
    "end": "684830"
  },
  {
    "text": "this where the laptop the other thing is",
    "start": "684830",
    "end": "689750"
  },
  {
    "text": "because that token is available to the",
    "start": "689750",
    "end": "693680"
  },
  {
    "text": "notebook as a secret that can be used to",
    "start": "693680",
    "end": "697010"
  },
  {
    "text": "talk to our HDFS cluster securely so",
    "start": "697010",
    "end": "699950"
  },
  {
    "text": "when the user launches a query to our",
    "start": "699950",
    "end": "701720"
  },
  {
    "text": "HDFS cluster we use a spark context",
    "start": "701720",
    "end": "705110"
  },
  {
    "text": "manager called Apache levy and and the",
    "start": "705110",
    "end": "709400"
  },
  {
    "text": "Apache levy will use that token to",
    "start": "709400",
    "end": "712670"
  },
  {
    "text": "validate identify the user and talk on",
    "start": "712670",
    "end": "716180"
  },
  {
    "text": "behalf of them to our security faster",
    "start": "716180",
    "end": "720700"
  },
  {
    "text": "once we and productionize jupiter hub",
    "start": "720970",
    "end": "724730"
  },
  {
    "text": "we thought that kubernetes has journey",
    "start": "724730",
    "end": "728240"
  },
  {
    "text": "at LinkedIn will be very smooth and this",
    "start": "728240",
    "end": "730970"
  },
  {
    "text": "is usually what day one kubernetes looks",
    "start": "730970",
    "end": "733010"
  },
  {
    "text": "like and then",
    "start": "733010",
    "end": "736660"
  },
  {
    "text": "that brings to our first war story one",
    "start": "736660",
    "end": "740810"
  },
  {
    "text": "Piney being our notebook pod started",
    "start": "740810",
    "end": "742970"
  },
  {
    "text": "crashing and we thought that the flannel",
    "start": "742970",
    "end": "746930"
  },
  {
    "text": "Dean overlay network that we were using",
    "start": "746930",
    "end": "749420"
  },
  {
    "text": "that's the one to blame",
    "start": "749420",
    "end": "750890"
  },
  {
    "text": "that was a root cause of it that was the",
    "start": "750890",
    "end": "752630"
  },
  {
    "text": "root cause and when we looked up advice",
    "start": "752630",
    "end": "755540"
  },
  {
    "text": "about this on the internet the raining",
    "start": "755540",
    "end": "757760"
  },
  {
    "text": "advice was with a new car cluster and",
    "start": "757760",
    "end": "760100"
  },
  {
    "text": "start over",
    "start": "760100",
    "end": "762430"
  },
  {
    "text": "luckily we didn't do that we kept",
    "start": "762640",
    "end": "768740"
  },
  {
    "text": "digging into what could be the issue",
    "start": "768740",
    "end": "770510"
  },
  {
    "text": "our next root cause hypothesis was that",
    "start": "770510",
    "end": "774740"
  },
  {
    "text": "it was the cordilla nest pod that we",
    "start": "774740",
    "end": "777350"
  },
  {
    "text": "were running to support all DNS of all",
    "start": "777350",
    "end": "780290"
  },
  {
    "text": "pods and when we decoupled corniness",
    "start": "780290",
    "end": "785540"
  },
  {
    "text": "from the rest from the Jupiter hub a",
    "start": "785540",
    "end": "787790"
  },
  {
    "text": "notebook pods the issue still didn't go",
    "start": "787790",
    "end": "790820"
  },
  {
    "text": "away so that hypothesis was not correct",
    "start": "790820",
    "end": "793490"
  },
  {
    "text": "a few days into the debugging of this",
    "start": "793490",
    "end": "798830"
  },
  {
    "text": "issue we were started having internal",
    "start": "798830",
    "end": "802430"
  },
  {
    "text": "arguments within the team that whether",
    "start": "802430",
    "end": "804590"
  },
  {
    "text": "we should actually listen to the advice",
    "start": "804590",
    "end": "806270"
  },
  {
    "text": "on the Internet",
    "start": "806270",
    "end": "807260"
  },
  {
    "text": "and kill our cluster and start over then",
    "start": "807260",
    "end": "812870"
  },
  {
    "text": "we got our first clue",
    "start": "812870",
    "end": "814190"
  },
  {
    "text": "it was that all portable networking was",
    "start": "814190",
    "end": "816980"
  },
  {
    "text": "not working and this particular issue is",
    "start": "816980",
    "end": "819950"
  },
  {
    "text": "not related to Jupiter hub or notebooks",
    "start": "819950",
    "end": "823760"
  },
  {
    "text": "but it's it's a it's a deeper issue so",
    "start": "823760",
    "end": "827030"
  },
  {
    "text": "we had to take a deep look at particle",
    "start": "827030",
    "end": "829520"
  },
  {
    "text": "networking and really try to understand",
    "start": "829520",
    "end": "833090"
  },
  {
    "text": "how that works so this is how you clear",
    "start": "833090",
    "end": "837590"
  },
  {
    "text": "don't books sorry Google in this pot the",
    "start": "837590",
    "end": "839690"
  },
  {
    "text": "pod Network we should work all pods have",
    "start": "839690",
    "end": "842720"
  },
  {
    "text": "their own IP address and say when the",
    "start": "842720",
    "end": "845300"
  },
  {
    "text": "Jupiter hub pod wants to send an IP",
    "start": "845300",
    "end": "847250"
  },
  {
    "text": "packet through the notebook",
    "start": "847250",
    "end": "849260"
  },
  {
    "text": "it just addresses that IP packet to that",
    "start": "849260",
    "end": "851360"
  },
  {
    "text": "notebooks IP address and it should go",
    "start": "851360",
    "end": "853070"
  },
  {
    "text": "there however in reality this packet has",
    "start": "853070",
    "end": "856940"
  },
  {
    "text": "to go out of the host where Jupiter",
    "start": "856940",
    "end": "859550"
  },
  {
    "text": "notebook is travel to all the routers",
    "start": "859550",
    "end": "862730"
  },
  {
    "text": "and switches that are in the direct data",
    "start": "862730",
    "end": "864470"
  },
  {
    "text": "center and then go into the power into",
    "start": "864470",
    "end": "867770"
  },
  {
    "text": "the host where the division of the",
    "start": "867770",
    "end": "869510"
  },
  {
    "text": "Potters",
    "start": "869510",
    "end": "870319"
  },
  {
    "text": "so for to do that the IP address that's",
    "start": "870319",
    "end": "875059"
  },
  {
    "text": "on that ID packet has to make sense to",
    "start": "875059",
    "end": "877549"
  },
  {
    "text": "the router than switches and internal IP",
    "start": "877549",
    "end": "881299"
  },
  {
    "text": "address using kubernetes in the pod do",
    "start": "881299",
    "end": "884299"
  },
  {
    "text": "not make sense to the routers and",
    "start": "884299",
    "end": "885979"
  },
  {
    "text": "switches so the way it works is when a",
    "start": "885979",
    "end": "891649"
  },
  {
    "text": "packet is sent from github that packet",
    "start": "891649",
    "end": "895749"
  },
  {
    "text": "address to the notebook pod makes it to",
    "start": "895749",
    "end": "899239"
  },
  {
    "text": "this plan LD daemon on the host and what",
    "start": "899239",
    "end": "902660"
  },
  {
    "text": "lousy daemon does is it will wrap this",
    "start": "902660",
    "end": "905239"
  },
  {
    "text": "packet with the IP address of the",
    "start": "905239",
    "end": "907970"
  },
  {
    "text": "destination host of the host where the",
    "start": "907970",
    "end": "910879"
  },
  {
    "text": "notebook thought is and now that now",
    "start": "910879",
    "end": "915169"
  },
  {
    "text": "this IP packet can make it out of the",
    "start": "915169",
    "end": "918739"
  },
  {
    "text": "host where there you better have the",
    "start": "918739",
    "end": "920299"
  },
  {
    "text": "hostess and go to the host where the",
    "start": "920299",
    "end": "923089"
  },
  {
    "text": "notebook is and so this packet which is",
    "start": "923089",
    "end": "928069"
  },
  {
    "text": "double wrapped it now makes it into the",
    "start": "928069",
    "end": "930979"
  },
  {
    "text": "host where the notebook is and it goes",
    "start": "930979",
    "end": "933859"
  },
  {
    "text": "to the flannel the app whose job is to",
    "start": "933859",
    "end": "936199"
  },
  {
    "text": "unwrap this and once it gets unwrapped",
    "start": "936199",
    "end": "940279"
  },
  {
    "text": "it now has the address of the notebook",
    "start": "940279",
    "end": "942439"
  },
  {
    "text": "pod so it makes it to the notebook",
    "start": "942439",
    "end": "946329"
  },
  {
    "text": "unfortunately there's more to this",
    "start": "947019",
    "end": "948859"
  },
  {
    "text": "madness in both cases when the packet is",
    "start": "948859",
    "end": "955009"
  },
  {
    "text": "going out of the host where the Jupiter",
    "start": "955009",
    "end": "957439"
  },
  {
    "text": "hub is or going into the host where",
    "start": "957439",
    "end": "960499"
  },
  {
    "text": "their notebook is we're asking their",
    "start": "960499",
    "end": "962959"
  },
  {
    "text": "hosts to act as routers we're asking",
    "start": "962959",
    "end": "965989"
  },
  {
    "text": "them take this packet IP packet which is",
    "start": "965989",
    "end": "969019"
  },
  {
    "text": "coming from an internal network and send",
    "start": "969019",
    "end": "972439"
  },
  {
    "text": "it sent to the external network and in",
    "start": "972439",
    "end": "974600"
  },
  {
    "text": "the case of the ingress they're telling",
    "start": "974600",
    "end": "976699"
  },
  {
    "text": "take a packet from the external network",
    "start": "976699",
    "end": "978889"
  },
  {
    "text": "and send it to the internal network and",
    "start": "978889",
    "end": "981129"
  },
  {
    "text": "Linux operating systems would not do",
    "start": "981129",
    "end": "983959"
  },
  {
    "text": "that unless they're told explicitly told",
    "start": "983959",
    "end": "989059"
  },
  {
    "text": "by studying a kernel plan and that is",
    "start": "989059",
    "end": "991279"
  },
  {
    "text": "the ipv4 forwarding flag once that's we",
    "start": "991279",
    "end": "995179"
  },
  {
    "text": "set this ipv4 forwarding flag it starts",
    "start": "995179",
    "end": "998539"
  },
  {
    "text": "working so what happened the root cause",
    "start": "998539",
    "end": "1000669"
  },
  {
    "text": "of this issue was we have an under",
    "start": "1000669",
    "end": "1003580"
  },
  {
    "text": "relying automation platform which sets",
    "start": "1003580",
    "end": "1006070"
  },
  {
    "text": "up our hosts and that automation",
    "start": "1006070",
    "end": "1008320"
  },
  {
    "text": "platform had gone in and unset this flag",
    "start": "1008320",
    "end": "1011590"
  },
  {
    "text": "ipv4 forwarding flag in a bunch of our",
    "start": "1011590",
    "end": "1014230"
  },
  {
    "text": "hosts and that caused this problem so",
    "start": "1014230",
    "end": "1017860"
  },
  {
    "text": "once we fix that issue in that",
    "start": "1017860",
    "end": "1019150"
  },
  {
    "text": "underlying automation platform no",
    "start": "1019150",
    "end": "1022210"
  },
  {
    "text": "notebooks very happy and users very",
    "start": "1022210",
    "end": "1024910"
  },
  {
    "text": "happy it's after that after this we",
    "start": "1024910",
    "end": "1029020"
  },
  {
    "text": "thought ok we're done with war stories",
    "start": "1029020",
    "end": "1032939"
  },
  {
    "text": "kubernetes is going to do a successful",
    "start": "1032940",
    "end": "1034750"
  },
  {
    "text": "adlington this brings to our second war",
    "start": "1034750",
    "end": "1037959"
  },
  {
    "text": "story one fine evening Noble Park",
    "start": "1037959",
    "end": "1041980"
  },
  {
    "text": "stopped working we thought that the plan",
    "start": "1041980",
    "end": "1046420"
  },
  {
    "text": "LD daemon was to blame and when we",
    "start": "1046420",
    "end": "1049630"
  },
  {
    "text": "looked up advise on the internet the",
    "start": "1049630",
    "end": "1052030"
  },
  {
    "text": "raining advice was nuclear cluster that",
    "start": "1052030",
    "end": "1054610"
  },
  {
    "text": "over this time we quickly identified",
    "start": "1054610",
    "end": "1061690"
  },
  {
    "text": "that hotspot networking was not Beijing",
    "start": "1061690",
    "end": "1065850"
  },
  {
    "text": "we have to take a closer look and found",
    "start": "1065850",
    "end": "1071110"
  },
  {
    "text": "out that our Jupiter hub pod was",
    "start": "1071110",
    "end": "1073270"
  },
  {
    "text": "complaining that it it cannot reach the",
    "start": "1073270",
    "end": "1077020"
  },
  {
    "text": "API server and that's why it started",
    "start": "1077020",
    "end": "1079300"
  },
  {
    "text": "crashing and dominating a crash into the",
    "start": "1079300",
    "end": "1082630"
  },
  {
    "text": "notebooks so we take took a look at how",
    "start": "1082630",
    "end": "1087100"
  },
  {
    "text": "the Jupiter hub pod is constructed then",
    "start": "1087100",
    "end": "1089440"
  },
  {
    "text": "our case then our Jupiter hub pod has",
    "start": "1089440",
    "end": "1093250"
  },
  {
    "text": "three containers and in its container",
    "start": "1093250",
    "end": "1096400"
  },
  {
    "text": "that gets certificates from our",
    "start": "1096400",
    "end": "1099820"
  },
  {
    "text": "certificate server and then this init",
    "start": "1099820",
    "end": "1103000"
  },
  {
    "text": "container makes that certificate",
    "start": "1103000",
    "end": "1104110"
  },
  {
    "text": "available for the subsequent containers",
    "start": "1104110",
    "end": "1107950"
  },
  {
    "text": "which is we have an engine X container",
    "start": "1107950",
    "end": "1109960"
  },
  {
    "text": "to set up routes and then a hub",
    "start": "1109960",
    "end": "1113950"
  },
  {
    "text": "container to orchestrate pods and in",
    "start": "1113950",
    "end": "1120370"
  },
  {
    "text": "this particular case it was the nginx",
    "start": "1120370",
    "end": "1122530"
  },
  {
    "text": "container complaining that it doesn't",
    "start": "1122530",
    "end": "1124990"
  },
  {
    "text": "have this kubernetes service host",
    "start": "1124990",
    "end": "1129070"
  },
  {
    "text": "environment variable set therefore it",
    "start": "1129070",
    "end": "1131590"
  },
  {
    "text": "doesn't know where the API server is and",
    "start": "1131590",
    "end": "1134880"
  },
  {
    "text": "because it doesn't know where the API",
    "start": "1134880",
    "end": "1137230"
  },
  {
    "text": "server",
    "start": "1137230",
    "end": "1137610"
  },
  {
    "text": "it doesn't work it just crashes so in",
    "start": "1137610",
    "end": "1141810"
  },
  {
    "text": "our clusters we set the kubernetes",
    "start": "1141810",
    "end": "1144540"
  },
  {
    "text": "service host environment variable on",
    "start": "1144540",
    "end": "1146280"
  },
  {
    "text": "every pod using a pod preset a pod",
    "start": "1146280",
    "end": "1151470"
  },
  {
    "text": "preset if you guys know it's something",
    "start": "1151470",
    "end": "1154380"
  },
  {
    "text": "you can use to say that okay they do",
    "start": "1154380",
    "end": "1156480"
  },
  {
    "text": "this before the pod is setup and in our",
    "start": "1156480",
    "end": "1159540"
  },
  {
    "text": "case we basically say okay setup the",
    "start": "1159540",
    "end": "1163020"
  },
  {
    "text": "Cougar and the service host environment",
    "start": "1163020",
    "end": "1164400"
  },
  {
    "text": "variable on the pods environment before",
    "start": "1164400",
    "end": "1167730"
  },
  {
    "text": "you start the pod and it's always said",
    "start": "1167730",
    "end": "1170790"
  },
  {
    "text": "to the fqdn of the API server and that",
    "start": "1170790",
    "end": "1173960"
  },
  {
    "text": "ensures that user can securely talk to",
    "start": "1173960",
    "end": "1177360"
  },
  {
    "text": "the API server because the fqdn is the",
    "start": "1177360",
    "end": "1179850"
  },
  {
    "text": "only thing that's in the API server",
    "start": "1179850",
    "end": "1182100"
  },
  {
    "text": "certificate so before kubernetes version",
    "start": "1182100",
    "end": "1189300"
  },
  {
    "text": "1.14 in its containers did not honor hot",
    "start": "1189300",
    "end": "1195420"
  },
  {
    "text": "presets so hot Wizards could not be set",
    "start": "1195420",
    "end": "1198360"
  },
  {
    "text": "on init container so what we did was we",
    "start": "1198360",
    "end": "1202340"
  },
  {
    "text": "hard-coded the kubernetes service host",
    "start": "1202340",
    "end": "1206520"
  },
  {
    "text": "value in the init container so once we",
    "start": "1206520",
    "end": "1210210"
  },
  {
    "text": "upgraded to 1.14 the in its container",
    "start": "1210210",
    "end": "1216830"
  },
  {
    "text": "issue was fixed and 1.14 we didn't know",
    "start": "1216830",
    "end": "1220440"
  },
  {
    "text": "that",
    "start": "1220440",
    "end": "1220830"
  },
  {
    "text": "so pot pressure controller tried to",
    "start": "1220830",
    "end": "1223320"
  },
  {
    "text": "apply the kubernetes service host value",
    "start": "1223320",
    "end": "1225450"
  },
  {
    "text": "on the image container and it found the",
    "start": "1225450",
    "end": "1231390"
  },
  {
    "text": " conflict they found that there was",
    "start": "1231390",
    "end": "1234360"
  },
  {
    "text": "a value with the same key but a",
    "start": "1234360",
    "end": "1237330"
  },
  {
    "text": "different value for the kubernetes",
    "start": "1237330",
    "end": "1239070"
  },
  {
    "text": "service host and once it failed there it",
    "start": "1239070",
    "end": "1244680"
  },
  {
    "text": "failed to apply that environment",
    "start": "1244680",
    "end": "1246780"
  },
  {
    "text": "variable value in any subsequent",
    "start": "1246780",
    "end": "1248940"
  },
  {
    "text": "container so once we fix this issue",
    "start": "1248940",
    "end": "1254690"
  },
  {
    "text": "things started working again and the",
    "start": "1254690",
    "end": "1257790"
  },
  {
    "text": "loot pod was happy so after this we",
    "start": "1257790",
    "end": "1262410"
  },
  {
    "text": "extended our use case to a batch batch",
    "start": "1262410",
    "end": "1266010"
  },
  {
    "text": "in this case users wanted to be able to",
    "start": "1266010",
    "end": "1270990"
  },
  {
    "text": "law",
    "start": "1270990",
    "end": "1271830"
  },
  {
    "text": "distributer tensorflow training right",
    "start": "1271830",
    "end": "1274390"
  },
  {
    "text": "from their notebook so we enable that",
    "start": "1274390",
    "end": "1277680"
  },
  {
    "text": "we're using cube flows pairing library",
    "start": "1277680",
    "end": "1281020"
  },
  {
    "text": "users could annotate their notebooks",
    "start": "1281020",
    "end": "1283750"
  },
  {
    "text": "notebook code and then once they ran",
    "start": "1283750",
    "end": "1288610"
  },
  {
    "text": "that it would actually talk to the TF",
    "start": "1288610",
    "end": "1291700"
  },
  {
    "text": "operator on the cluster and then the TF",
    "start": "1291700",
    "end": "1295510"
  },
  {
    "text": "operator would launch a tentacle cluster",
    "start": "1295510",
    "end": "1297550"
  },
  {
    "text": "where the workers distributed across the",
    "start": "1297550",
    "end": "1300430"
  },
  {
    "text": "cluster and these workers would be able",
    "start": "1300430",
    "end": "1304750"
  },
  {
    "text": "to talk to the Nvidia device plugins on",
    "start": "1304750",
    "end": "1309490"
  },
  {
    "text": "those hosts to get GPUs allocated to",
    "start": "1309490",
    "end": "1311980"
  },
  {
    "text": "them so this enabled them to do a very",
    "start": "1311980",
    "end": "1315850"
  },
  {
    "text": "large distributed job and also take",
    "start": "1315850",
    "end": "1317830"
  },
  {
    "text": "advantage of GPUs while talking to our",
    "start": "1317830",
    "end": "1321490"
  },
  {
    "text": "secure HDFS cluster our next use case",
    "start": "1321490",
    "end": "1327490"
  },
  {
    "text": "was another online use case where",
    "start": "1327490",
    "end": "1331260"
  },
  {
    "text": "serving serving models directly from our",
    "start": "1331260",
    "end": "1335920"
  },
  {
    "text": "kubernetes cluster so let's say there is",
    "start": "1335920",
    "end": "1341260"
  },
  {
    "text": "a production service that wants to",
    "start": "1341260",
    "end": "1344580"
  },
  {
    "text": "identify the image of a cat so it will",
    "start": "1344580",
    "end": "1347980"
  },
  {
    "text": "send that image of a cat to this model",
    "start": "1347980",
    "end": "1350830"
  },
  {
    "text": "service and then that request would it",
    "start": "1350830",
    "end": "1355540"
  },
  {
    "text": "what it expects from the model service",
    "start": "1355540",
    "end": "1358090"
  },
  {
    "text": "is the word cat so that request gets",
    "start": "1358090",
    "end": "1364570"
  },
  {
    "text": "forwarded to the model serving TF",
    "start": "1364570",
    "end": "1368020"
  },
  {
    "text": "serving pod in our model serving cluster",
    "start": "1368020",
    "end": "1370270"
  },
  {
    "text": "and then the TF serving pod will route",
    "start": "1370270",
    "end": "1372880"
  },
  {
    "text": "it to a model that's deployed by our",
    "start": "1372880",
    "end": "1378900"
  },
  {
    "text": "model deployment system and this can",
    "start": "1378900",
    "end": "1384010"
  },
  {
    "text": "also take advantage of GPUs on the box",
    "start": "1384010",
    "end": "1386140"
  },
  {
    "text": "so it can answer a lot of queries in",
    "start": "1386140",
    "end": "1389050"
  },
  {
    "text": "parallel it can take it can cache",
    "start": "1389050",
    "end": "1392010"
  },
  {
    "text": "queries and things like that",
    "start": "1392010",
    "end": "1395440"
  },
  {
    "text": "with these three use cases we had",
    "start": "1395440",
    "end": "1399730"
  },
  {
    "text": "started supporting a model offering to",
    "start": "1399730",
    "end": "1403870"
  },
  {
    "text": "Jupiter notebooks model training through",
    "start": "1403870",
    "end": "1406300"
  },
  {
    "text": "tensorflow distributed training and",
    "start": "1406300",
    "end": "1408310"
  },
  {
    "text": "model serving through TF serving and",
    "start": "1408310",
    "end": "1412530"
  },
  {
    "text": "this where significant parts of an ml",
    "start": "1412530",
    "end": "1415690"
  },
  {
    "text": "pipeline so naturally we now had a issue",
    "start": "1415690",
    "end": "1422290"
  },
  {
    "text": "with figuring out do we buy an entire",
    "start": "1422290",
    "end": "1426630"
  },
  {
    "text": "pipeline from the open source or do we",
    "start": "1426630",
    "end": "1429040"
  },
  {
    "text": "build it in-house so this is because leg",
    "start": "1429040",
    "end": "1433510"
  },
  {
    "text": "dinner already has a significant ml",
    "start": "1433510",
    "end": "1436810"
  },
  {
    "text": "infrastructure that built on the Hadoop",
    "start": "1436810",
    "end": "1440260"
  },
  {
    "text": "yarn stack and we had to kind of compare",
    "start": "1440260",
    "end": "1444580"
  },
  {
    "text": "the strengths and weaknesses of the",
    "start": "1444580",
    "end": "1446620"
  },
  {
    "text": "huddle here and stack versus the",
    "start": "1446620",
    "end": "1448360"
  },
  {
    "text": "kubernetes stack now how do we turn",
    "start": "1448360",
    "end": "1450520"
  },
  {
    "text": "stack is very well integrated into",
    "start": "1450520",
    "end": "1452260"
  },
  {
    "text": "LinkedIn and also it's has capabilities",
    "start": "1452260",
    "end": "1456550"
  },
  {
    "text": "such as hierarchical queues preemption",
    "start": "1456550",
    "end": "1459010"
  },
  {
    "text": "that we use a lot kubernetes on the",
    "start": "1459010",
    "end": "1462970"
  },
  {
    "text": "other hand is very strong with mature",
    "start": "1462970",
    "end": "1466630"
  },
  {
    "text": "container support and it also it's a PI",
    "start": "1466630",
    "end": "1470320"
  },
  {
    "text": "is implemented by all the new ml",
    "start": "1470320",
    "end": "1474310"
  },
  {
    "text": "training Poona frameworks so we have to",
    "start": "1474310",
    "end": "1479530"
  },
  {
    "text": "bring this both of these world together",
    "start": "1479530",
    "end": "1481120"
  },
  {
    "text": "because there's strengths on both sides",
    "start": "1481120",
    "end": "1483910"
  },
  {
    "text": "and we our next-gen ml pipeline had to",
    "start": "1483910",
    "end": "1487480"
  },
  {
    "text": "adopt the best so to bridge the gap we",
    "start": "1487480",
    "end": "1493840"
  },
  {
    "text": "started initiatives such as allowing",
    "start": "1493840",
    "end": "1497500"
  },
  {
    "text": "users to be able to securely access HDFS",
    "start": "1497500",
    "end": "1500620"
  },
  {
    "text": "directly from their kubernetes cluster",
    "start": "1500620",
    "end": "1502530"
  },
  {
    "text": "so Kerberos is what's used in LinkedIn",
    "start": "1502530",
    "end": "1506740"
  },
  {
    "text": "all across our HDFS clusters we are",
    "start": "1506740",
    "end": "1510670"
  },
  {
    "text": "building a product that we may open",
    "start": "1510670",
    "end": "1513550"
  },
  {
    "text": "source is to be able to support coverage",
    "start": "1513550",
    "end": "1517990"
  },
  {
    "text": "directly from the kubernetes cluster so",
    "start": "1517990",
    "end": "1520420"
  },
  {
    "text": "the way it works is when user logs in",
    "start": "1520420",
    "end": "1522900"
  },
  {
    "text": "and submits a job to kubernetes they are",
    "start": "1522900",
    "end": "1527770"
  },
  {
    "text": "able to",
    "start": "1527770",
    "end": "1529889"
  },
  {
    "text": "submit a Kerberos ticket along with it",
    "start": "1529889",
    "end": "1533080"
  },
  {
    "text": "and that ticket is handled by a",
    "start": "1533080",
    "end": "1537549"
  },
  {
    "text": "delegation token controller and a",
    "start": "1537549",
    "end": "1540759"
  },
  {
    "text": "delegation token service that we will",
    "start": "1540759",
    "end": "1542740"
  },
  {
    "text": "build in the kubernetes cluster and this",
    "start": "1542740",
    "end": "1547419"
  },
  {
    "text": "delegation token controller and service",
    "start": "1547419",
    "end": "1549789"
  },
  {
    "text": "then talks to the HDFS cluster to get a",
    "start": "1549789",
    "end": "1553779"
  },
  {
    "text": "hadoop delegation token and then it",
    "start": "1553779",
    "end": "1556720"
  },
  {
    "text": "mounts that into the into the worker",
    "start": "1556720",
    "end": "1559629"
  },
  {
    "text": "pods this allows that pods to directly",
    "start": "1559629",
    "end": "1563559"
  },
  {
    "text": "toxeus GFS cluster securely and once",
    "start": "1563559",
    "end": "1569049"
  },
  {
    "text": "that worker is done that delegation to",
    "start": "1569049",
    "end": "1571690"
  },
  {
    "text": "token could be revoked if that workers",
    "start": "1571690",
    "end": "1575850"
  },
  {
    "text": "lifetime spanned longer than the",
    "start": "1575850",
    "end": "1578320"
  },
  {
    "text": "delegation tokens expiry then that gets",
    "start": "1578320",
    "end": "1580690"
  },
  {
    "text": "automatically renewed by the delegation",
    "start": "1580690",
    "end": "1582730"
  },
  {
    "text": "token service",
    "start": "1582730",
    "end": "1585360"
  },
  {
    "text": "all right so after supporting both ally",
    "start": "1590650",
    "end": "1594370"
  },
  {
    "text": "and batch AI workloads on our core",
    "start": "1594370",
    "end": "1597040"
  },
  {
    "text": "bernardi's platform which will show the",
    "start": "1597040",
    "end": "1600040"
  },
  {
    "text": "value and the confidence for the team we",
    "start": "1600040",
    "end": "1603580"
  },
  {
    "text": "are working on extending kubernetes and",
    "start": "1603580",
    "end": "1605860"
  },
  {
    "text": "unifying them platform so here are more",
    "start": "1605860",
    "end": "1610780"
  },
  {
    "text": "in questions that we're working on past",
    "start": "1610780",
    "end": "1613510"
  },
  {
    "text": "layer in the question was raised and",
    "start": "1613510",
    "end": "1615100"
  },
  {
    "text": "Orca we're also working on unified",
    "start": "1615100",
    "end": "1618040"
  },
  {
    "text": "topology in question the unified apology",
    "start": "1618040",
    "end": "1620590"
  },
  {
    "text": "provides this single shared view of",
    "start": "1620590",
    "end": "1623950"
  },
  {
    "text": "Lincoln's application fleet and it's a",
    "start": "1623950",
    "end": "1627130"
  },
  {
    "text": "topology or basically what runs where so",
    "start": "1627130",
    "end": "1631390"
  },
  {
    "text": "we have many system an internal system",
    "start": "1631390",
    "end": "1633370"
  },
  {
    "text": "depends on such a view because for",
    "start": "1633370",
    "end": "1636550"
  },
  {
    "text": "example dot like certificate management",
    "start": "1636550",
    "end": "1638679"
  },
  {
    "text": "server distribute the firewall system",
    "start": "1638679",
    "end": "1641200"
  },
  {
    "text": "and PN's discovery and we also work on",
    "start": "1641200",
    "end": "1645910"
  },
  {
    "text": "our back into question with they'd watch",
    "start": "1645910",
    "end": "1647860"
  },
  {
    "text": "using automation wipe oops pod",
    "start": "1647860",
    "end": "1650110"
  },
  {
    "text": "certificate inspiration using unit",
    "start": "1650110",
    "end": "1652000"
  },
  {
    "text": "containers or the physical host we also",
    "start": "1652000",
    "end": "1655780"
  },
  {
    "text": "have implemented the CRI for our Locker",
    "start": "1655780",
    "end": "1659200"
  },
  {
    "text": "containers",
    "start": "1659200",
    "end": "1660070"
  },
  {
    "text": "the idea is crew bladder would be able",
    "start": "1660070",
    "end": "1662710"
  },
  {
    "text": "to speak with Locker CRI out of box so",
    "start": "1662710",
    "end": "1669670"
  },
  {
    "text": "the unique container in a locker CI",
    "start": "1669670",
    "end": "1672240"
  },
  {
    "text": "would decrease the secret in the config",
    "start": "1672240",
    "end": "1675309"
  },
  {
    "text": "and the open firewall or if necessary as",
    "start": "1675309",
    "end": "1680679"
  },
  {
    "text": "you can see with all these integrations",
    "start": "1680679",
    "end": "1682500"
  },
  {
    "text": "kubernetes adoption and linking is",
    "start": "1682500",
    "end": "1685179"
  },
  {
    "text": "really picking picking off so let's wrap",
    "start": "1685179",
    "end": "1692110"
  },
  {
    "text": "up kubernetes the whole ecosystem is",
    "start": "1692110",
    "end": "1695020"
  },
  {
    "text": "really powerful and going in very fast",
    "start": "1695020",
    "end": "1697929"
  },
  {
    "text": "however they do operation and",
    "start": "1697929",
    "end": "1699910"
  },
  {
    "text": "integrations especially with a huge",
    "start": "1699910",
    "end": "1702700"
  },
  {
    "text": "legacy infrastructure can be challenging",
    "start": "1702700",
    "end": "1706679"
  },
  {
    "text": "supporting our ultimate goal is to",
    "start": "1706679",
    "end": "1708940"
  },
  {
    "text": "create a unified compute platform on top",
    "start": "1708940",
    "end": "1711640"
  },
  {
    "text": "of this coburn at ease",
    "start": "1711640",
    "end": "1713730"
  },
  {
    "text": "what started with supporting emerging AI",
    "start": "1713730",
    "end": "1717250"
  },
  {
    "text": "workloads to prove the value and shew",
    "start": "1717250",
    "end": "1719860"
  },
  {
    "text": "confidence was a great kick start boss",
    "start": "1719860",
    "end": "1723580"
  },
  {
    "text": "cloud native is morning cloud Oly",
    "start": "1723580",
    "end": "1726890"
  },
  {
    "text": "kubernetes and its ecosystem embodies",
    "start": "1726890",
    "end": "1729980"
  },
  {
    "text": "cloud centric best practices and provide",
    "start": "1729980",
    "end": "1733130"
  },
  {
    "text": "this cognitive approach to modernize our",
    "start": "1733130",
    "end": "1736580"
  },
  {
    "text": "laxing infrastructure",
    "start": "1736580",
    "end": "1738410"
  },
  {
    "text": "it has a huge value for large scale",
    "start": "1738410",
    "end": "1741320"
  },
  {
    "text": "enterprise companies all right that's",
    "start": "1741320",
    "end": "1745910"
  },
  {
    "text": "for this talk thank you for coming",
    "start": "1745910",
    "end": "1750220"
  },
  {
    "text": "[Applause]",
    "start": "1750450",
    "end": "1754649"
  }
]