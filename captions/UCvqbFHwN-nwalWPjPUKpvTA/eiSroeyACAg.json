[
  {
    "text": "um yeah so let me introduce myself first",
    "start": "640",
    "end": "2679"
  },
  {
    "text": "so my name is tanir kill and I am CTO at",
    "start": "2679",
    "end": "5240"
  },
  {
    "text": "a startup called flux ninja and today",
    "start": "5240",
    "end": "7480"
  },
  {
    "text": "I'll be talking with you guys about",
    "start": "7480",
    "end": "9040"
  },
  {
    "text": "observability driven load management",
    "start": "9040",
    "end": "10920"
  },
  {
    "text": "which is a set of techniques which are",
    "start": "10920",
    "end": "13160"
  },
  {
    "text": "used by operators to ensure fall",
    "start": "13160",
    "end": "15360"
  },
  {
    "text": "tolerance and reliability of the",
    "start": "15360",
    "end": "16840"
  },
  {
    "text": "services so let's get",
    "start": "16840",
    "end": "19480"
  },
  {
    "text": "started let so let's start off by",
    "start": "19480",
    "end": "21640"
  },
  {
    "text": "talking about the based capabilities",
    "start": "21640",
    "end": "23439"
  },
  {
    "text": "that you get in thiso today so the",
    "start": "23439",
    "end": "25480"
  },
  {
    "text": "capabilities of sto are centered around",
    "start": "25480",
    "end": "27800"
  },
  {
    "text": "three pillars uh the first one being",
    "start": "27800",
    "end": "30439"
  },
  {
    "text": "security so basic encryption between",
    "start": "30439",
    "end": "33040"
  },
  {
    "text": "Services Mutual DLS between services and",
    "start": "33040",
    "end": "35120"
  },
  {
    "text": "also some basic access control so use",
    "start": "35120",
    "end": "38559"
  },
  {
    "text": "cases such as micro segmentation making",
    "start": "38559",
    "end": "40360"
  },
  {
    "text": "sure that uh services are talking to",
    "start": "40360",
    "end": "42520"
  },
  {
    "text": "each other intent F uh the second pillar",
    "start": "42520",
    "end": "45640"
  },
  {
    "text": "uh is centered around traffic management",
    "start": "45640",
    "end": "47840"
  },
  {
    "text": "so these are some basic network settings",
    "start": "47840",
    "end": "50120"
  },
  {
    "text": "like timeouts retries load balancing",
    "start": "50120",
    "end": "52879"
  },
  {
    "text": "algorithms and also things like uh",
    "start": "52879",
    "end": "55480"
  },
  {
    "text": "passive checks um like outli detections",
    "start": "55480",
    "end": "58359"
  },
  {
    "text": "and circuit breaking and also some cicd",
    "start": "58359",
    "end": "61640"
  },
  {
    "text": "oriented kind of features like Canary",
    "start": "61640",
    "end": "63600"
  },
  {
    "text": "deploys AB tests and so on the third",
    "start": "63600",
    "end": "66920"
  },
  {
    "text": "bucket is observability so given that",
    "start": "66920",
    "end": "68960"
  },
  {
    "text": "stto is kind of at this interesting",
    "start": "68960",
    "end": "71479"
  },
  {
    "text": "vantage point where it's witnessing all",
    "start": "71479",
    "end": "74040"
  },
  {
    "text": "this service to service chatter so it's",
    "start": "74040",
    "end": "75640"
  },
  {
    "text": "able to give unprecedented visibility",
    "start": "75640",
    "end": "77600"
  },
  {
    "text": "into this chatter and that to without",
    "start": "77600",
    "end": "79799"
  },
  {
    "text": "modifying",
    "start": "79799",
    "end": "82119"
  },
  {
    "text": "your so even despite these great base",
    "start": "82119",
    "end": "85000"
  },
  {
    "text": "capabilities like once you go take your",
    "start": "85000",
    "end": "88119"
  },
  {
    "text": "take any application into production",
    "start": "88119",
    "end": "90040"
  },
  {
    "text": "there there's still um a dirth of",
    "start": "90040",
    "end": "92119"
  },
  {
    "text": "features around flow control so what I",
    "start": "92119",
    "end": "94520"
  },
  {
    "text": "mean by that is like whenever you take",
    "start": "94520",
    "end": "97000"
  },
  {
    "text": "your apps into production you need basic",
    "start": "97000",
    "end": "99119"
  },
  {
    "text": "rate limiting when basically at the",
    "start": "99119",
    "end": "101240"
  },
  {
    "text": "Gateway you want to make sure that if",
    "start": "101240",
    "end": "102520"
  },
  {
    "text": "you have a shared service or or a multi-",
    "start": "102520",
    "end": "104880"
  },
  {
    "text": "tanet service which is shared amongst",
    "start": "104880",
    "end": "106799"
  },
  {
    "text": "various entities or users you want to",
    "start": "106799",
    "end": "108399"
  },
  {
    "text": "make sure that um there is fair access",
    "start": "108399",
    "end": "111600"
  },
  {
    "text": "between the users and also there are it",
    "start": "111600",
    "end": "114040"
  },
  {
    "text": "isn't the case that a subset of users",
    "start": "114040",
    "end": "115640"
  },
  {
    "text": "are monopolizing the majority of",
    "start": "115640",
    "end": "117479"
  },
  {
    "text": "resources you need some kind of basic",
    "start": "117479",
    "end": "119560"
  },
  {
    "text": "protection ction in that",
    "start": "119560",
    "end": "121360"
  },
  {
    "text": "layer another thing is like um your",
    "start": "121360",
    "end": "125200"
  },
  {
    "text": "capacity of your services is is finite",
    "start": "125200",
    "end": "127680"
  },
  {
    "text": "right and and it because it's it's",
    "start": "127680",
    "end": "129239"
  },
  {
    "text": "expensive to provision like or over",
    "start": "129239",
    "end": "131200"
  },
  {
    "text": "provision services so um another thing",
    "start": "131200",
    "end": "134120"
  },
  {
    "text": "you want to make sure is that if your",
    "start": "134120",
    "end": "135879"
  },
  {
    "text": "services are getting overloaded uh it",
    "start": "135879",
    "end": "137920"
  },
  {
    "text": "should not lead to cading failures and",
    "start": "137920",
    "end": "140800"
  },
  {
    "text": "uh the good throughput essentially of",
    "start": "140800",
    "end": "142200"
  },
  {
    "text": "your service should remain high despite",
    "start": "142200",
    "end": "143879"
  },
  {
    "text": "any kind of overloads coming into",
    "start": "143879",
    "end": "146400"
  },
  {
    "text": "picture",
    "start": "146400",
    "end": "147920"
  },
  {
    "text": "and um so so the next thing is like when",
    "start": "147920",
    "end": "151280"
  },
  {
    "text": "you're working with because whenever",
    "start": "151280",
    "end": "152879"
  },
  {
    "text": "you're developing an app like uh you're",
    "start": "152879",
    "end": "154800"
  },
  {
    "text": "always dependent on some third party",
    "start": "154800",
    "end": "156760"
  },
  {
    "text": "systems or some open source apis or even",
    "start": "156760",
    "end": "159360"
  },
  {
    "text": "some uh manage services like Dynamo DB",
    "start": "159360",
    "end": "162360"
  },
  {
    "text": "or if you're using it if if it's an AI",
    "start": "162360",
    "end": "164040"
  },
  {
    "text": "app you're dependent on open AI for",
    "start": "164040",
    "end": "165480"
  },
  {
    "text": "instance so you want to work backwards",
    "start": "165480",
    "end": "167400"
  },
  {
    "text": "from those limits and first of all you",
    "start": "167400",
    "end": "168879"
  },
  {
    "text": "want to make sure you're a good citizen",
    "start": "168879",
    "end": "170159"
  },
  {
    "text": "you stay within those limits because",
    "start": "170159",
    "end": "171760"
  },
  {
    "text": "otherwise those third party API might",
    "start": "171760",
    "end": "174200"
  },
  {
    "text": "even penalize you for instance GitHub",
    "start": "174200",
    "end": "176120"
  },
  {
    "text": "penalizes you if you go over limit too",
    "start": "176120",
    "end": "177720"
  },
  {
    "text": "often right so you want to make sure you",
    "start": "177720",
    "end": "179879"
  },
  {
    "text": "stay within those limits and also you",
    "start": "179879",
    "end": "182120"
  },
  {
    "text": "want to make sure for both these use",
    "start": "182120",
    "end": "184760"
  },
  {
    "text": "cases both for protection as well as",
    "start": "184760",
    "end": "186519"
  },
  {
    "text": "when working with external limits you",
    "start": "186519",
    "end": "188000"
  },
  {
    "text": "want to make sure um that you're using",
    "start": "188000",
    "end": "191000"
  },
  {
    "text": "those quotas or those limits effectively",
    "start": "191000",
    "end": "193000"
  },
  {
    "text": "like like any app will have its own um",
    "start": "193000",
    "end": "196480"
  },
  {
    "text": "set of priorities or based on the",
    "start": "196480",
    "end": "198239"
  },
  {
    "text": "business use case like certain not all",
    "start": "198239",
    "end": "200400"
  },
  {
    "text": "requests are equal right certain",
    "start": "200400",
    "end": "201680"
  },
  {
    "text": "requests are more important so you need",
    "start": "201680",
    "end": "203720"
  },
  {
    "text": "some kind of scheduling when you're",
    "start": "203720",
    "end": "204840"
  },
  {
    "text": "close to these limits you want to make",
    "start": "204840",
    "end": "206360"
  },
  {
    "text": "sure that high high importance requests",
    "start": "206360",
    "end": "208879"
  },
  {
    "text": "are given a",
    "start": "208879",
    "end": "210239"
  },
  {
    "text": "um better chance of getting",
    "start": "210239",
    "end": "214080"
  },
  {
    "text": "accepted so yeah so flow control is a",
    "start": "215599",
    "end": "218080"
  },
  {
    "text": "must when you're running at scale even",
    "start": "218080",
    "end": "220040"
  },
  {
    "text": "even at moderate scale to be honest",
    "start": "220040",
    "end": "222360"
  },
  {
    "text": "right so you need uh API rate limits to",
    "start": "222360",
    "end": "224519"
  },
  {
    "text": "ensure fairness and prevent abuse you",
    "start": "224519",
    "end": "226159"
  },
  {
    "text": "need adaptive limits per service to",
    "start": "226159",
    "end": "228760"
  },
  {
    "text": "prevent overload so so but what I mean",
    "start": "228760",
    "end": "230560"
  },
  {
    "text": "by that is um based on where the",
    "start": "230560",
    "end": "234120"
  },
  {
    "text": "bottlenecks are in app in your app",
    "start": "234120",
    "end": "236040"
  },
  {
    "text": "typically they are u in the most um",
    "start": "236040",
    "end": "238920"
  },
  {
    "text": "heaviest kind of apis or data intensive",
    "start": "238920",
    "end": "241280"
  },
  {
    "text": "portions of your workload uh typically",
    "start": "241280",
    "end": "244079"
  },
  {
    "text": "databases or Big Data Systems so those",
    "start": "244079",
    "end": "246120"
  },
  {
    "text": "usually become a bottleneck so you want",
    "start": "246120",
    "end": "247959"
  },
  {
    "text": "to make sure that you get the saturation",
    "start": "247959",
    "end": "249640"
  },
  {
    "text": "signal or the Q signal from those",
    "start": "249640",
    "end": "251239"
  },
  {
    "text": "systems and use that to basically do",
    "start": "251239",
    "end": "254040"
  },
  {
    "text": "throttling and do do throttling as",
    "start": "254040",
    "end": "256120"
  },
  {
    "text": "Downstream as possible detect the",
    "start": "256120",
    "end": "257560"
  },
  {
    "text": "problem upstream and block it as soon as",
    "start": "257560",
    "end": "260600"
  },
  {
    "text": "possible to reduce wasted work and again",
    "start": "260600",
    "end": "263400"
  },
  {
    "text": "you need prioritization so once you",
    "start": "263400",
    "end": "264880"
  },
  {
    "text": "start throttling then you want to make",
    "start": "264880",
    "end": "266240"
  },
  {
    "text": "sure that the most important requests",
    "start": "266240",
    "end": "268280"
  },
  {
    "text": "get uh at the head of of the",
    "start": "268280",
    "end": "271639"
  },
  {
    "text": "cube and the third one is like what we",
    "start": "271639",
    "end": "274039"
  },
  {
    "text": "talked about like when working with",
    "start": "274039",
    "end": "275360"
  },
  {
    "text": "third party apas uh you want to",
    "start": "275360",
    "end": "277320"
  },
  {
    "text": "eliminate the guess work essentially",
    "start": "277320",
    "end": "278720"
  },
  {
    "text": "like let's say you're hitting a API rate",
    "start": "278720",
    "end": "280240"
  },
  {
    "text": "limit with open Ai and you get a 429",
    "start": "280240",
    "end": "282280"
  },
  {
    "text": "then what do you do when do you retry",
    "start": "282280",
    "end": "284120"
  },
  {
    "text": "especially when it's shared quotas right",
    "start": "284120",
    "end": "285639"
  },
  {
    "text": "you're using the same key across a lot",
    "start": "285639",
    "end": "287280"
  },
  {
    "text": "of uh distributed workloads then how do",
    "start": "287280",
    "end": "289759"
  },
  {
    "text": "you eliminate that guess work and",
    "start": "289759",
    "end": "291400"
  },
  {
    "text": "basically uh go as fast as possible",
    "start": "291400",
    "end": "294039"
  },
  {
    "text": "while also prioritizing the",
    "start": "294039",
    "end": "297160"
  },
  {
    "text": "requests so uh keeping that in mind I'm",
    "start": "297240",
    "end": "299800"
  },
  {
    "text": "going to introduce this open source",
    "start": "299800",
    "end": "301440"
  },
  {
    "text": "project called aperture and how it can",
    "start": "301440",
    "end": "303240"
  },
  {
    "text": "help do flow control in STO service mesh",
    "start": "303240",
    "end": "306840"
  },
  {
    "text": "and even other",
    "start": "306840",
    "end": "308759"
  },
  {
    "text": "environments so here's a quick overview",
    "start": "308759",
    "end": "311320"
  },
  {
    "text": "of the aperture project so it's an open-",
    "start": "311320",
    "end": "313479"
  },
  {
    "text": "Source observability driven flow control",
    "start": "313479",
    "end": "316000"
  },
  {
    "text": "system it has got a programmable uh",
    "start": "316000",
    "end": "318360"
  },
  {
    "text": "declarative policy language which lets",
    "start": "318360",
    "end": "320960"
  },
  {
    "text": "you express um basically these um flow",
    "start": "320960",
    "end": "324039"
  },
  {
    "text": "control policies as control circuit",
    "start": "324039",
    "end": "325840"
  },
  {
    "text": "graphs these are like signal processing",
    "start": "325840",
    "end": "327800"
  },
  {
    "text": "graphs um and it's an observability",
    "start": "327800",
    "end": "330000"
  },
  {
    "text": "driven system essentially it's",
    "start": "330000",
    "end": "331240"
  },
  {
    "text": "completing the feedback loop taking",
    "start": "331240",
    "end": "333319"
  },
  {
    "text": "observability signals from your",
    "start": "333319",
    "end": "334639"
  },
  {
    "text": "infrastructure and using that to do flow",
    "start": "334639",
    "end": "337360"
  },
  {
    "text": "control and interestingly it works on",
    "start": "337360",
    "end": "339840"
  },
  {
    "text": "top of your existing stack so if you're",
    "start": "339840",
    "end": "342039"
  },
  {
    "text": "using service meeses such as sto so it's",
    "start": "342039",
    "end": "344400"
  },
  {
    "text": "just a drop in replacement just not a",
    "start": "344400",
    "end": "346240"
  },
  {
    "text": "replacement like a drop in uh augmented",
    "start": "346240",
    "end": "348440"
  },
  {
    "text": "functionality that you get on top of St",
    "start": "348440",
    "end": "351000"
  },
  {
    "text": "or even if you're using API gateways",
    "start": "351000",
    "end": "352919"
  },
  {
    "text": "like engine X and Kong we have like Lua",
    "start": "352919",
    "end": "354639"
  },
  {
    "text": "plugins into those um projects and if",
    "start": "354639",
    "end": "358240"
  },
  {
    "text": "you're using none of those if you're if",
    "start": "358240",
    "end": "359560"
  },
  {
    "text": "you're just plainly using like simple um",
    "start": "359560",
    "end": "362280"
  },
  {
    "text": "HTTP servers then we have sdks which can",
    "start": "362280",
    "end": "364600"
  },
  {
    "text": "either do middleware insertion or you",
    "start": "364600",
    "end": "366000"
  },
  {
    "text": "can pretty much write code to do this",
    "start": "366000",
    "end": "368240"
  },
  {
    "text": "kind of flow control functionality with",
    "start": "368240",
    "end": "370080"
  },
  {
    "text": "within your application logic",
    "start": "370080",
    "end": "372319"
  },
  {
    "text": "itself so that's a brief introduction",
    "start": "372319",
    "end": "374560"
  },
  {
    "text": "now let's delve in a little bit deeper",
    "start": "374560",
    "end": "376919"
  },
  {
    "text": "so what does aperture bring to sto so it",
    "start": "376919",
    "end": "380199"
  },
  {
    "text": "basically bring brings in these",
    "start": "380199",
    "end": "381440"
  },
  {
    "text": "observability driven flow control",
    "start": "381440",
    "end": "383039"
  },
  {
    "text": "capabilities so there's a Rago based uh",
    "start": "383039",
    "end": "386000"
  },
  {
    "text": "request classification layer which um",
    "start": "386000",
    "end": "388720"
  },
  {
    "text": "lets you um basically look at labels in",
    "start": "388720",
    "end": "391160"
  },
  {
    "text": "your traffic and have criteria for",
    "start": "391160",
    "end": "393560"
  },
  {
    "text": "driving new labels or even going deep",
    "start": "393560",
    "end": "395240"
  },
  {
    "text": "into your payload for instance going",
    "start": "395240",
    "end": "397440"
  },
  {
    "text": "deep into your graphql apis and",
    "start": "397440",
    "end": "399360"
  },
  {
    "text": "extracting labels from those and now",
    "start": "399360",
    "end": "401120"
  },
  {
    "text": "these labels interestingly can be used",
    "start": "401120",
    "end": "403240"
  },
  {
    "text": "for both visibility as well as",
    "start": "403240",
    "end": "406360"
  },
  {
    "text": "control it provides a distributed rate",
    "start": "406360",
    "end": "408919"
  },
  {
    "text": "limiting implementation so think of it",
    "start": "408919",
    "end": "410720"
  },
  {
    "text": "is think of it as like um sto's rate",
    "start": "410720",
    "end": "413720"
  },
  {
    "text": "limiting service although we're not",
    "start": "413720",
    "end": "414919"
  },
  {
    "text": "using rate limiting service we using Au",
    "start": "414919",
    "end": "416759"
  },
  {
    "text": "API but it's kind of giving you this",
    "start": "416759",
    "end": "418960"
  },
  {
    "text": "rate limit liting capability so you can",
    "start": "418960",
    "end": "420960"
  },
  {
    "text": "um uh do rate limit users in a",
    "start": "420960",
    "end": "423360"
  },
  {
    "text": "distributed fashion and in a very",
    "start": "423360",
    "end": "424919"
  },
  {
    "text": "scalable",
    "start": "424919",
    "end": "426000"
  },
  {
    "text": "way uh the second capability is adaptive",
    "start": "426000",
    "end": "428680"
  },
  {
    "text": "limits and request prioritization so",
    "start": "428680",
    "end": "431120"
  },
  {
    "text": "this this capability um builds upon that",
    "start": "431120",
    "end": "434319"
  },
  {
    "text": "uh that circuit uh based policy",
    "start": "434319",
    "end": "437520"
  },
  {
    "text": "implementation essentially letting you",
    "start": "437520",
    "end": "438919"
  },
  {
    "text": "to take any signal from your",
    "start": "438919",
    "end": "440240"
  },
  {
    "text": "infrastructure which is basically",
    "start": "440240",
    "end": "441879"
  },
  {
    "text": "measuring the bottleneck it could be a q",
    "start": "441879",
    "end": "443840"
  },
  {
    "text": "size it could be thread counts it could",
    "start": "443840",
    "end": "446639"
  },
  {
    "text": "be latencies any signal which indicates",
    "start": "446639",
    "end": "449160"
  },
  {
    "text": "uh in a reliable way overload buildup in",
    "start": "449160",
    "end": "451360"
  },
  {
    "text": "your system so that signal can be used",
    "start": "451360",
    "end": "453599"
  },
  {
    "text": "to adaptively limit your apis API calls",
    "start": "453599",
    "end": "456720"
  },
  {
    "text": "essentially close it to the uh to the",
    "start": "456720",
    "end": "458639"
  },
  {
    "text": "entry point so that's the Adaptive",
    "start": "458639",
    "end": "461000"
  },
  {
    "text": "limits feature and the and the third one",
    "start": "461000",
    "end": "463080"
  },
  {
    "text": "is quota limits so essentially um",
    "start": "463080",
    "end": "466000"
  },
  {
    "text": "working with third party APS or even",
    "start": "466000",
    "end": "467960"
  },
  {
    "text": "within teams you might have quotas like",
    "start": "467960",
    "end": "469840"
  },
  {
    "text": "you might um some team might have given",
    "start": "469840",
    "end": "472759"
  },
  {
    "text": "um like microservices teams they give",
    "start": "472759",
    "end": "475199"
  },
  {
    "text": "each other quotas like so that they so",
    "start": "475199",
    "end": "477840"
  },
  {
    "text": "that one team doesn't overwhelm one",
    "start": "477840",
    "end": "479840"
  },
  {
    "text": "particular service so it could be either",
    "start": "479840",
    "end": "481919"
  },
  {
    "text": "between services within a larger",
    "start": "481919",
    "end": "484280"
  },
  {
    "text": "organization or it could be some third",
    "start": "484280",
    "end": "485800"
  },
  {
    "text": "party like Dynamo DB or open AI or",
    "start": "485800",
    "end": "487840"
  },
  {
    "text": "GitHub so you want to work with those",
    "start": "487840",
    "end": "489080"
  },
  {
    "text": "limits and again ensure prioritization",
    "start": "489080",
    "end": "491520"
  },
  {
    "text": "of requests so you want to make sure you",
    "start": "491520",
    "end": "493039"
  },
  {
    "text": "use that quota in a prioritized fashion",
    "start": "493039",
    "end": "496120"
  },
  {
    "text": "and the last one is like Telemetry uh",
    "start": "496120",
    "end": "498120"
  },
  {
    "text": "you get some Telemetry with Stu as well",
    "start": "498120",
    "end": "500319"
  },
  {
    "text": "but uh this the Telemetry that you can",
    "start": "500319",
    "end": "502720"
  },
  {
    "text": "get with aperture is even more surgical",
    "start": "502720",
    "end": "504840"
  },
  {
    "text": "like because it's tied to the Rego based",
    "start": "504840",
    "end": "507240"
  },
  {
    "text": "classification rules so you can actually",
    "start": "507240",
    "end": "508879"
  },
  {
    "text": "even go deep into your payload to get",
    "start": "508879",
    "end": "511080"
  },
  {
    "text": "fine grain Matrix and even get like",
    "start": "511080",
    "end": "513599"
  },
  {
    "text": "latency",
    "start": "513599",
    "end": "514880"
  },
  {
    "text": "histograms um so if you want to get like",
    "start": "514880",
    "end": "517399"
  },
  {
    "text": "percentile kind of Matrix so it's it's",
    "start": "517399",
    "end": "519240"
  },
  {
    "text": "it's geared towards those kind of use",
    "start": "519240",
    "end": "522719"
  },
  {
    "text": "cases so next let's look at how sto plus",
    "start": "522760",
    "end": "526360"
  },
  {
    "text": "aperture the entire stack works together",
    "start": "526360",
    "end": "528720"
  },
  {
    "text": "so aperture agent sits next to the on",
    "start": "528720",
    "end": "531480"
  },
  {
    "text": "proxy so it's like a side car to the",
    "start": "531480",
    "end": "532959"
  },
  {
    "text": "side car and essentially the way it",
    "start": "532959",
    "end": "535959"
  },
  {
    "text": "integrates is through authorization API",
    "start": "535959",
    "end": "538000"
  },
  {
    "text": "I talked about it earlier uh we're going",
    "start": "538000",
    "end": "539720"
  },
  {
    "text": "to look at it in more detail in the next",
    "start": "539720",
    "end": "541440"
  },
  {
    "text": "slide essentially couple of integration",
    "start": "541440",
    "end": "543600"
  },
  {
    "text": "points one is the Au API which lets us",
    "start": "543600",
    "end": "546399"
  },
  {
    "text": "intercept calls coming into Envoy so",
    "start": "546399",
    "end": "549399"
  },
  {
    "text": "aperture can be installed at various",
    "start": "549399",
    "end": "551920"
  },
  {
    "text": "Vantage points um that where Envoy proxy",
    "start": "551920",
    "end": "555360"
  },
  {
    "text": "or sto proxy is also installed so at the",
    "start": "555360",
    "end": "557800"
  },
  {
    "text": "Ingress the pure agent can help you",
    "start": "557800",
    "end": "560480"
  },
  {
    "text": "achieve things like rate limits so any",
    "start": "560480",
    "end": "562880"
  },
  {
    "text": "call that goes into Ono so it it gets",
    "start": "562880",
    "end": "565760"
  },
  {
    "text": "forwarded to a pure agent and it lets",
    "start": "565760",
    "end": "567839"
  },
  {
    "text": "you implement things like rate limit",
    "start": "567839",
    "end": "570600"
  },
  {
    "text": "like within Services it lets you build",
    "start": "570600",
    "end": "573320"
  },
  {
    "text": "functionality such as adaptive limits so",
    "start": "573320",
    "end": "575519"
  },
  {
    "text": "again the same insertion modes running",
    "start": "575519",
    "end": "577560"
  },
  {
    "text": "next to your",
    "start": "577560",
    "end": "578640"
  },
  {
    "text": "Envoy and um in this example we looking",
    "start": "578640",
    "end": "582760"
  },
  {
    "text": "at a database so typical bottleneck uh",
    "start": "582760",
    "end": "586000"
  },
  {
    "text": "in in a in a distributed app is usually",
    "start": "586000",
    "end": "588440"
  },
  {
    "text": "a big data system or a database so",
    "start": "588440",
    "end": "590120"
  },
  {
    "text": "taking saturation signals from uh these",
    "start": "590120",
    "end": "592640"
  },
  {
    "text": "bottleneck services and using that to",
    "start": "592640",
    "end": "595360"
  },
  {
    "text": "adaptively um limit traffic going into",
    "start": "595360",
    "end": "597800"
  },
  {
    "text": "your service and then also prioritizing",
    "start": "597800",
    "end": "599760"
  },
  {
    "text": "that traffic and now the there's another",
    "start": "599760",
    "end": "602680"
  },
  {
    "text": "use case of aperture and service mesh is",
    "start": "602680",
    "end": "604680"
  },
  {
    "text": "on the ESS like calls going outside your",
    "start": "604680",
    "end": "607800"
  },
  {
    "text": "cluster to some third party uh for",
    "start": "607800",
    "end": "610240"
  },
  {
    "text": "instance this could be like open Ai and",
    "start": "610240",
    "end": "612600"
  },
  {
    "text": "you want to work backwards from that",
    "start": "612600",
    "end": "613920"
  },
  {
    "text": "limit you know you want to model that",
    "start": "613920",
    "end": "615320"
  },
  {
    "text": "limit internally using token buckets and",
    "start": "615320",
    "end": "618440"
  },
  {
    "text": "you want to limit you want you want to",
    "start": "618440",
    "end": "619839"
  },
  {
    "text": "be a good citizen you want to stay",
    "start": "619839",
    "end": "620920"
  },
  {
    "text": "within limits and once you're close to",
    "start": "620920",
    "end": "622360"
  },
  {
    "text": "the limits you want to prioritize",
    "start": "622360",
    "end": "623600"
  },
  {
    "text": "traffic so you want to use that open AI",
    "start": "623600",
    "end": "625440"
  },
  {
    "text": "quota in in an intelligent fashion so",
    "start": "625440",
    "end": "627560"
  },
  {
    "text": "that uh High prior requests get to use",
    "start": "627560",
    "end": "630519"
  },
  {
    "text": "it",
    "start": "630519",
    "end": "632519"
  },
  {
    "text": "first so yeah so these are the new set",
    "start": "632519",
    "end": "635720"
  },
  {
    "text": "of capabilities we are adding on top of",
    "start": "635720",
    "end": "637680"
  },
  {
    "text": "your existing sto service",
    "start": "637680",
    "end": "639760"
  },
  {
    "text": "mesh so let's look at the insertion in a",
    "start": "639760",
    "end": "642120"
  },
  {
    "text": "little bit more detail so this is the",
    "start": "642120",
    "end": "644680"
  },
  {
    "text": "envoy um site the envoy proxy the sto",
    "start": "644680",
    "end": "648720"
  },
  {
    "text": "proxy so it gets requests from outside",
    "start": "648720",
    "end": "651440"
  },
  {
    "text": "that's step one and the way Au API works",
    "start": "651440",
    "end": "654760"
  },
  {
    "text": "is so by the way this is au Z API which",
    "start": "654760",
    "end": "657800"
  },
  {
    "text": "was implemented by the Opa team for",
    "start": "657800",
    "end": "659959"
  },
  {
    "text": "authorization kind of use cases uh but",
    "start": "659959",
    "end": "662760"
  },
  {
    "text": "for aperture we are using the same",
    "start": "662760",
    "end": "664519"
  },
  {
    "text": "technique the same glue for flow control",
    "start": "664519",
    "end": "667760"
  },
  {
    "text": "so the way it works is anytime a request",
    "start": "667760",
    "end": "670480"
  },
  {
    "text": "comes in uh the envoy proxy forwards it",
    "start": "670480",
    "end": "673600"
  },
  {
    "text": "to a purcher agent for a yes or no",
    "start": "673600",
    "end": "675200"
  },
  {
    "text": "answer either to admit it or to drop it",
    "start": "675200",
    "end": "676880"
  },
  {
    "text": "and plus also we attach some metadata",
    "start": "676880",
    "end": "678519"
  },
  {
    "text": "for Telemetry",
    "start": "678519",
    "end": "679800"
  },
  {
    "text": "purposes so uh if it's a no then onvoy",
    "start": "679800",
    "end": "683560"
  },
  {
    "text": "proxy won't really forward the request",
    "start": "683560",
    "end": "686279"
  },
  {
    "text": "to the service it will just send the",
    "start": "686279",
    "end": "687519"
  },
  {
    "text": "response back with a 503 server bz and",
    "start": "687519",
    "end": "690440"
  },
  {
    "text": "and the response can actually be",
    "start": "690440",
    "end": "691600"
  },
  {
    "text": "configured through the aperture agent",
    "start": "691600",
    "end": "693639"
  },
  {
    "text": "the policy in aperture agent but by",
    "start": "693639",
    "end": "695600"
  },
  {
    "text": "default it's like a 503 or if it's a",
    "start": "695600",
    "end": "697240"
  },
  {
    "text": "rate limit it could be a",
    "start": "697240",
    "end": "699079"
  },
  {
    "text": "403 and uh the second point of",
    "start": "699079",
    "end": "701399"
  },
  {
    "text": "integration is the access log so this is",
    "start": "701399",
    "end": "703440"
  },
  {
    "text": "needed for Telemetry",
    "start": "703440",
    "end": "705720"
  },
  {
    "text": "um bunch of telemetry that we're doing",
    "start": "705720",
    "end": "708040"
  },
  {
    "text": "like looking at things like latencies",
    "start": "708040",
    "end": "709560"
  },
  {
    "text": "even estimating tokens dynamically and",
    "start": "709560",
    "end": "711320"
  },
  {
    "text": "things like that so we get this access",
    "start": "711320",
    "end": "713360"
  },
  {
    "text": "log stream from",
    "start": "713360",
    "end": "715200"
  },
  {
    "text": "Ono which is observability leg so",
    "start": "715200",
    "end": "717920"
  },
  {
    "text": "essentially completing the feedback back",
    "start": "717920",
    "end": "719160"
  },
  {
    "text": "Loop",
    "start": "719160",
    "end": "719920"
  },
  {
    "text": "here and yeah so if the call gets",
    "start": "719920",
    "end": "723839"
  },
  {
    "text": "accepted it's just forwarded to the",
    "start": "723839",
    "end": "725200"
  },
  {
    "text": "service as usual and then the response",
    "start": "725200",
    "end": "726920"
  },
  {
    "text": "goes back and modified back to the",
    "start": "726920",
    "end": "728800"
  },
  {
    "text": "original caller so that's basically the",
    "start": "728800",
    "end": "730959"
  },
  {
    "text": "insertion and the configuration uh the",
    "start": "730959",
    "end": "733880"
  },
  {
    "text": "way configuration looks like is like we",
    "start": "733880",
    "end": "735720"
  },
  {
    "text": "use this crd called Envoy",
    "start": "735720",
    "end": "738399"
  },
  {
    "text": "filter uh so Envoy filter is a construct",
    "start": "738399",
    "end": "741160"
  },
  {
    "text": "in STO configuration which lets you",
    "start": "741160",
    "end": "744320"
  },
  {
    "text": "write these kind of um Interceptor rules",
    "start": "744320",
    "end": "747560"
  },
  {
    "text": "that get inserted into the on proxy so",
    "start": "747560",
    "end": "750519"
  },
  {
    "text": "this Envoy filter basically describes",
    "start": "750519",
    "end": "752880"
  },
  {
    "text": "couple of things external oy with the",
    "start": "752880",
    "end": "755079"
  },
  {
    "text": "address to the local agent that's",
    "start": "755079",
    "end": "757120"
  },
  {
    "text": "running next to the envoy and also uh",
    "start": "757120",
    "end": "759600"
  },
  {
    "text": "the access logging address and this",
    "start": "759600",
    "end": "761680"
  },
  {
    "text": "Envoy filter can be applied selectively",
    "start": "761680",
    "end": "763440"
  },
  {
    "text": "it doesn't need to be pervasive so you",
    "start": "763440",
    "end": "764800"
  },
  {
    "text": "can do it pervasively if it's a demon",
    "start": "764800",
    "end": "766600"
  },
  {
    "text": "set you can do it pervasively or if you",
    "start": "766600",
    "end": "768120"
  },
  {
    "text": "want to do it more surgically then you",
    "start": "768120",
    "end": "770000"
  },
  {
    "text": "can even have a workload selector so",
    "start": "770000",
    "end": "771320"
  },
  {
    "text": "workload selectors in in STO let you uh",
    "start": "771320",
    "end": "774399"
  },
  {
    "text": "be more surgical with this",
    "start": "774399",
    "end": "777800"
  },
  {
    "text": "insertion okay let's move forward let's",
    "start": "777839",
    "end": "780040"
  },
  {
    "text": "talk a little bit about apertures",
    "start": "780040",
    "end": "781920"
  },
  {
    "text": "architecture next so at the heart of",
    "start": "781920",
    "end": "784480"
  },
  {
    "text": "aperture is a control Loop so the way it",
    "start": "784480",
    "end": "786920"
  },
  {
    "text": "works is theer Agents they have an",
    "start": "786920",
    "end": "789720"
  },
  {
    "text": "inbuilt open Telemetry collector which",
    "start": "789720",
    "end": "792560"
  },
  {
    "text": "lets it gather Matrix both locally and",
    "start": "792560",
    "end": "795760"
  },
  {
    "text": "from external Technologies like",
    "start": "795760",
    "end": "797120"
  },
  {
    "text": "databases and such so the Telemetry is",
    "start": "797120",
    "end": "800160"
  },
  {
    "text": "written to",
    "start": "800160",
    "end": "801320"
  },
  {
    "text": "Prometheus and then um there's another",
    "start": "801320",
    "end": "804959"
  },
  {
    "text": "component called aperture controller",
    "start": "804959",
    "end": "806480"
  },
  {
    "text": "which could either be hosted by you or",
    "start": "806480",
    "end": "808240"
  },
  {
    "text": "it could be hosted Ed in our commercial",
    "start": "808240",
    "end": "810959"
  },
  {
    "text": "solution called aperture Cloud so",
    "start": "810959",
    "end": "813519"
  },
  {
    "text": "everything above aperture agent is",
    "start": "813519",
    "end": "814800"
  },
  {
    "text": "hosted in a virture cloud or it could",
    "start": "814800",
    "end": "816320"
  },
  {
    "text": "all be if you're using the open source",
    "start": "816320",
    "end": "817639"
  },
  {
    "text": "version it all all it could all be",
    "start": "817639",
    "end": "819160"
  },
  {
    "text": "hosted by you so the job of aperture",
    "start": "819160",
    "end": "822079"
  },
  {
    "text": "controller is to run these U policy",
    "start": "822079",
    "end": "824160"
  },
  {
    "text": "circuits which are evaluated",
    "start": "824160",
    "end": "825800"
  },
  {
    "text": "periodically so it will periodically uh",
    "start": "825800",
    "end": "829240"
  },
  {
    "text": "request the result of those metrics",
    "start": "829240",
    "end": "831759"
  },
  {
    "text": "using promptu queries and then run a",
    "start": "831759",
    "end": "834440"
  },
  {
    "text": "signal processing circuit which results",
    "start": "834440",
    "end": "836800"
  },
  {
    "text": "in some adjustments which are written",
    "start": "836800",
    "end": "838199"
  },
  {
    "text": "down into CD socd is used both for",
    "start": "838199",
    "end": "840759"
  },
  {
    "text": "sending these ad adjustments down to to",
    "start": "840759",
    "end": "843680"
  },
  {
    "text": "aperture agents and also for propagating",
    "start": "843680",
    "end": "846000"
  },
  {
    "text": "configuration so if you install new",
    "start": "846000",
    "end": "847480"
  },
  {
    "text": "policies so the same mechanism is used",
    "start": "847480",
    "end": "849920"
  },
  {
    "text": "to populate those policies in a purcher",
    "start": "849920",
    "end": "852000"
  },
  {
    "text": "agent so so far so good so uh yeah so",
    "start": "852000",
    "end": "855920"
  },
  {
    "text": "aperture control Loop is kind of the",
    "start": "855920",
    "end": "857720"
  },
  {
    "text": "heart of the system and let's move",
    "start": "857720",
    "end": "859600"
  },
  {
    "text": "forward to maybe more functionality",
    "start": "859600",
    "end": "861160"
  },
  {
    "text": "inside the aperture agent so the first",
    "start": "861160",
    "end": "864079"
  },
  {
    "text": "functionality I want to talk about is",
    "start": "864079",
    "end": "865759"
  },
  {
    "text": "distributed token buckets so so these",
    "start": "865759",
    "end": "868160"
  },
  {
    "text": "distributed counters essentially we have",
    "start": "868160",
    "end": "869880"
  },
  {
    "text": "this distributed hash table so so",
    "start": "869880",
    "end": "872519"
  },
  {
    "text": "purcher agents form a peer-to-peer",
    "start": "872519",
    "end": "874320"
  },
  {
    "text": "group uh between uh agents belonging to",
    "start": "874320",
    "end": "877680"
  },
  {
    "text": "each agent group so we form form this",
    "start": "877680",
    "end": "879639"
  },
  {
    "text": "kind of um peer-to-peer Network which is",
    "start": "879639",
    "end": "882279"
  },
  {
    "text": "being used for maintaining these",
    "start": "882279",
    "end": "883519"
  },
  {
    "text": "distributed counters so these are used",
    "start": "883519",
    "end": "884959"
  },
  {
    "text": "for use cases such as rate limits you",
    "start": "884959",
    "end": "887240"
  },
  {
    "text": "want to limit uh incoming requests by",
    "start": "887240",
    "end": "889519"
  },
  {
    "text": "users let's say so there will be a",
    "start": "889519",
    "end": "890880"
  },
  {
    "text": "bucket for each user and it's a token",
    "start": "890880",
    "end": "893160"
  },
  {
    "text": "bucket so it's like um unlike window",
    "start": "893160",
    "end": "895440"
  },
  {
    "text": "counters this is like um pretty accurate",
    "start": "895440",
    "end": "898519"
  },
  {
    "text": "and and um very smooth uh so the same",
    "start": "898519",
    "end": "902040"
  },
  {
    "text": "technology is also used for quota limits",
    "start": "902040",
    "end": "904519"
  },
  {
    "text": "so if you're working with third party",
    "start": "904519",
    "end": "905800"
  },
  {
    "text": "apis the same kind of token bucket",
    "start": "905800",
    "end": "907759"
  },
  {
    "text": "mechanism so there's a leader for each",
    "start": "907759",
    "end": "910040"
  },
  {
    "text": "token bucket so there's a lookup on the",
    "start": "910040",
    "end": "911720"
  },
  {
    "text": "leader it could either be a synchronous",
    "start": "911720",
    "end": "914160"
  },
  {
    "text": "call or a lazy sync kind of a call um so",
    "start": "914160",
    "end": "917680"
  },
  {
    "text": "this is basically how Counters work in a",
    "start": "917680",
    "end": "921199"
  },
  {
    "text": "buture uh another technology typically",
    "start": "921199",
    "end": "923360"
  },
  {
    "text": "used by some users is redis so this is",
    "start": "923360",
    "end": "925680"
  },
  {
    "text": "more high performance implementation",
    "start": "925680",
    "end": "927680"
  },
  {
    "text": "than redis so redis is single service",
    "start": "927680",
    "end": "929800"
  },
  {
    "text": "which can become a bottleneck so this is",
    "start": "929800",
    "end": "931240"
  },
  {
    "text": "more of a peer-to-peer kind of",
    "start": "931240",
    "end": "932959"
  },
  {
    "text": "architecture which is more scalable and",
    "start": "932959",
    "end": "935279"
  },
  {
    "text": "it's it dynamically shards the keys so",
    "start": "935279",
    "end": "937360"
  },
  {
    "text": "if an agent goes away it will",
    "start": "937360",
    "end": "938759"
  },
  {
    "text": "dynamically Shard the keys or if a new",
    "start": "938759",
    "end": "940240"
  },
  {
    "text": "agent comes it will dynamically rehard",
    "start": "940240",
    "end": "942560"
  },
  {
    "text": "the keys based on",
    "start": "942560",
    "end": "944759"
  },
  {
    "text": "that so that's the distributed token",
    "start": "944759",
    "end": "947199"
  },
  {
    "text": "bucket so moving on uh the next",
    "start": "947199",
    "end": "948920"
  },
  {
    "text": "technology I want to talk about in a",
    "start": "948920",
    "end": "950319"
  },
  {
    "text": "purchas agent is the scheduler so just",
    "start": "950319",
    "end": "953880"
  },
  {
    "text": "like operating systems have schedulers",
    "start": "953880",
    "end": "955480"
  },
  {
    "text": "for processes you have nice values and",
    "start": "955480",
    "end": "957480"
  },
  {
    "text": "such so we are we have this kind of this",
    "start": "957480",
    "end": "960319"
  },
  {
    "text": "network based scheduler and the",
    "start": "960319",
    "end": "963360"
  },
  {
    "text": "algorithm that we have here is called",
    "start": "963360",
    "end": "964959"
  },
  {
    "text": "weighted faar queing Schuler which is",
    "start": "964959",
    "end": "966959"
  },
  {
    "text": "used in packet switching networks and",
    "start": "966959",
    "end": "968519"
  },
  {
    "text": "also used here uh so each request",
    "start": "968519",
    "end": "971279"
  },
  {
    "text": "essentially gets a priority or a weight",
    "start": "971279",
    "end": "973920"
  },
  {
    "text": "and based on that weight this algorithm",
    "start": "973920",
    "end": "976040"
  },
  {
    "text": "makes sure that the the utilization is",
    "start": "976040",
    "end": "979240"
  },
  {
    "text": "essentially in in the ratio of these",
    "start": "979240",
    "end": "980720"
  },
  {
    "text": "weights so so if you say paid users get",
    "start": "980720",
    "end": "983000"
  },
  {
    "text": "a priority of 200 trial users get a",
    "start": "983000",
    "end": "984959"
  },
  {
    "text": "priority of 100 so this means there's a",
    "start": "984959",
    "end": "987199"
  },
  {
    "text": "1 is to two ratio so paid users get",
    "start": "987199",
    "end": "989480"
  },
  {
    "text": "double the priority so if they're both",
    "start": "989480",
    "end": "992360"
  },
  {
    "text": "seeing similar kind of request rates",
    "start": "992360",
    "end": "994360"
  },
  {
    "text": "then on average paid users will see",
    "start": "994360",
    "end": "996360"
  },
  {
    "text": "twice the acceptance",
    "start": "996360",
    "end": "998000"
  },
  {
    "text": "rate and this comes into play when",
    "start": "998000",
    "end": "1000000"
  },
  {
    "text": "you're under overload or when you're",
    "start": "1000000",
    "end": "1001360"
  },
  {
    "text": "close to quota limits so the scheduling",
    "start": "1001360",
    "end": "1004120"
  },
  {
    "text": "comes into play and maybe you want to",
    "start": "1004120",
    "end": "1006000"
  },
  {
    "text": "deprioritize something like a background",
    "start": "1006000",
    "end": "1008079"
  },
  {
    "text": "task or maybe free tier users in this",
    "start": "1008079",
    "end": "1009880"
  },
  {
    "text": "case you want to deprioritize so it's",
    "start": "1009880",
    "end": "1011319"
  },
  {
    "text": "like 10 times less or 20 times less than",
    "start": "1011319",
    "end": "1013279"
  },
  {
    "text": "paid users so those will the those",
    "start": "1013279",
    "end": "1015959"
  },
  {
    "text": "requests will be the first ones to get",
    "start": "1015959",
    "end": "1017839"
  },
  {
    "text": "dropped or the first first wants to uh",
    "start": "1017839",
    "end": "1019480"
  },
  {
    "text": "be at the tail they'll be essentially at",
    "start": "1019480",
    "end": "1021600"
  },
  {
    "text": "the tail of the queue so requests coming",
    "start": "1021600",
    "end": "1024480"
  },
  {
    "text": "in uh getting classified into these",
    "start": "1024480",
    "end": "1027400"
  },
  {
    "text": "different um categories and then um the",
    "start": "1027400",
    "end": "1031079"
  },
  {
    "text": "way they get dced is based on this",
    "start": "1031079",
    "end": "1032678"
  },
  {
    "text": "weighted fear queing",
    "start": "1032679",
    "end": "1034360"
  },
  {
    "text": "scheduler and by the way the way",
    "start": "1034360",
    "end": "1036438"
  },
  {
    "text": "requests get dropped is based on the",
    "start": "1036439",
    "end": "1038079"
  },
  {
    "text": "timeout that is configured so um when",
    "start": "1038079",
    "end": "1040319"
  },
  {
    "text": "you do this integration this um oy",
    "start": "1040319",
    "end": "1042240"
  },
  {
    "text": "integration so you define a timeout",
    "start": "1042240",
    "end": "1043678"
  },
  {
    "text": "value so this is the amount of time",
    "start": "1043679",
    "end": "1045640"
  },
  {
    "text": "you're willing to cue the request Within",
    "start": "1045640",
    "end": "1047720"
  },
  {
    "text": "apperture",
    "start": "1047720",
    "end": "1050400"
  },
  {
    "text": "so so far so good let's move on um",
    "start": "1050880",
    "end": "1054440"
  },
  {
    "text": "pretty much covered like the core uh",
    "start": "1054440",
    "end": "1056480"
  },
  {
    "text": "Tech pieces in aperture so let's move on",
    "start": "1056480",
    "end": "1059039"
  },
  {
    "text": "and and see how aperture Works in",
    "start": "1059039",
    "end": "1061039"
  },
  {
    "text": "practice uh so I'm going going to show a",
    "start": "1061039",
    "end": "1063039"
  },
  {
    "text": "demo application uh where a purcher is",
    "start": "1063039",
    "end": "1065080"
  },
  {
    "text": "running an action so the test setup that",
    "start": "1065080",
    "end": "1067799"
  },
  {
    "text": "we have um so we have a post SQL",
    "start": "1067799",
    "end": "1071200"
  },
  {
    "text": "database and we have a service which is",
    "start": "1071200",
    "end": "1074080"
  },
  {
    "text": "making a request to poster SQL whenever",
    "start": "1074080",
    "end": "1076080"
  },
  {
    "text": "there's an incoming request um um it's",
    "start": "1076080",
    "end": "1078720"
  },
  {
    "text": "an HTTP service whenever there's an HTTP",
    "start": "1078720",
    "end": "1080799"
  },
  {
    "text": "request and it's all glued together",
    "start": "1080799",
    "end": "1082640"
  },
  {
    "text": "through a steo there's a k6 based k6 is",
    "start": "1082640",
    "end": "1086000"
  },
  {
    "text": "a project which lets you simulate users",
    "start": "1086000",
    "end": "1088000"
  },
  {
    "text": "and traffic and so and such so uh k6 is",
    "start": "1088000",
    "end": "1091720"
  },
  {
    "text": "making these requests making requests to",
    "start": "1091720",
    "end": "1094000"
  },
  {
    "text": "the service and going through Ono and",
    "start": "1094000",
    "end": "1096320"
  },
  {
    "text": "the traffic mix that we have is like the",
    "start": "1096320",
    "end": "1098080"
  },
  {
    "text": "guest users and subscribers subscribers",
    "start": "1098080",
    "end": "1100000"
  },
  {
    "text": "are higher priority and the breakup of",
    "start": "1100000",
    "end": "1102240"
  },
  {
    "text": "traffic is 50/50 like 50% subscribers",
    "start": "1102240",
    "end": "1104520"
  },
  {
    "text": "50% guests and the traffic pattern that",
    "start": "1104520",
    "end": "1106840"
  },
  {
    "text": "we have is like it's like senide or or",
    "start": "1106840",
    "end": "1109960"
  },
  {
    "text": "more of a uh Square wave where it starts",
    "start": "1109960",
    "end": "1113640"
  },
  {
    "text": "with 10 users for one minute and then it",
    "start": "1113640",
    "end": "1115360"
  },
  {
    "text": "goes to 100 users so when it once it",
    "start": "1115360",
    "end": "1117640"
  },
  {
    "text": "goes to 100 users then this service um",
    "start": "1117640",
    "end": "1121280"
  },
  {
    "text": "makes a lot of API calls to post SQL and",
    "start": "1121280",
    "end": "1124280"
  },
  {
    "text": "post SQL Q starts to fill up so we",
    "start": "1124280",
    "end": "1126640"
  },
  {
    "text": "monitoring the number of um um active",
    "start": "1126640",
    "end": "1129799"
  },
  {
    "text": "Connections in post SQL so if the active",
    "start": "1129799",
    "end": "1132720"
  },
  {
    "text": "connections goes near 100% then they",
    "start": "1132720",
    "end": "1134919"
  },
  {
    "text": "would be Q build up here and the",
    "start": "1134919",
    "end": "1137520"
  },
  {
    "text": "latencies will Spike up for all the",
    "start": "1137520",
    "end": "1138960"
  },
  {
    "text": "users so you want to make sure that post",
    "start": "1138960",
    "end": "1141480"
  },
  {
    "text": "equl connection usage stays within",
    "start": "1141480",
    "end": "1143240"
  },
  {
    "text": "bounds so that's why we are monitoring",
    "start": "1143240",
    "end": "1145400"
  },
  {
    "text": "post equl using aperture agent so it's",
    "start": "1145400",
    "end": "1147880"
  },
  {
    "text": "got an otel pipeline which is scraping",
    "start": "1147880",
    "end": "1149600"
  },
  {
    "text": "Matrix Matrix from poster SQL and then",
    "start": "1149600",
    "end": "1152080"
  },
  {
    "text": "using this in an algorithm to do this",
    "start": "1152080",
    "end": "1154600"
  },
  {
    "text": "Dynamic throttling of API requests",
    "start": "1154600",
    "end": "1157200"
  },
  {
    "text": "coming into the service and then also",
    "start": "1157200",
    "end": "1159559"
  },
  {
    "text": "prioritizing",
    "start": "1159559",
    "end": "1160720"
  },
  {
    "text": "traffic so here is the policy which does",
    "start": "1160720",
    "end": "1163600"
  },
  {
    "text": "all this so the first part of the policy",
    "start": "1163600",
    "end": "1165960"
  },
  {
    "text": "is defi defining an oel pipeline so it's",
    "start": "1165960",
    "end": "1168320"
  },
  {
    "text": "defining this address of poster SQL",
    "start": "1168320",
    "end": "1170120"
  },
  {
    "text": "instance and the collection in trouble",
    "start": "1170120",
    "end": "1172480"
  },
  {
    "text": "so this is how we get Matrix into um our",
    "start": "1172480",
    "end": "1175120"
  },
  {
    "text": "system into the Prometheus",
    "start": "1175120",
    "end": "1177320"
  },
  {
    "text": "database uh the second part of the",
    "start": "1177320",
    "end": "1179679"
  },
  {
    "text": "policy is basically defining criteria",
    "start": "1179679",
    "end": "1181960"
  },
  {
    "text": "the algorithm for throttling so a set",
    "start": "1181960",
    "end": "1185360"
  },
  {
    "text": "point of 40 is is defined this means if",
    "start": "1185360",
    "end": "1188000"
  },
  {
    "text": "40% of connections are used in poster",
    "start": "1188000",
    "end": "1190559"
  },
  {
    "text": "SQL we want to start throttling and the",
    "start": "1190559",
    "end": "1192880"
  },
  {
    "text": "throttling policy is very simple it's a",
    "start": "1192880",
    "end": "1194720"
  },
  {
    "text": "progressive additive increase additive",
    "start": "1194720",
    "end": "1196360"
  },
  {
    "text": "decrease kind of a policy we have so we",
    "start": "1196360",
    "end": "1198919"
  },
  {
    "text": "do a 20% decrease in load anytime we",
    "start": "1198919",
    "end": "1201880"
  },
  {
    "text": "detect an overload and if let's say we",
    "start": "1201880",
    "end": "1204640"
  },
  {
    "text": "are not in overload like that means less",
    "start": "1204640",
    "end": "1207000"
  },
  {
    "text": "than 40% usage of connections then we do",
    "start": "1207000",
    "end": "1209080"
  },
  {
    "text": "a 5% increase progressively every 10",
    "start": "1209080",
    "end": "1211080"
  },
  {
    "text": "seconds so very simple policy but it",
    "start": "1211080",
    "end": "1212520"
  },
  {
    "text": "works really",
    "start": "1212520",
    "end": "1214720"
  },
  {
    "text": "well uh because connection",
    "start": "1214720",
    "end": "1216960"
  },
  {
    "text": "usage",
    "start": "1216960",
    "end": "1219080"
  },
  {
    "text": "um what happened",
    "start": "1219080",
    "end": "1222360"
  },
  {
    "text": "there can you guys see still see my",
    "start": "1222360",
    "end": "1226480"
  },
  {
    "text": "screen",
    "start": "1227159",
    "end": "1229919"
  },
  {
    "text": "I'll just",
    "start": "1229919",
    "end": "1232240"
  },
  {
    "text": "continue so uh yeah this is the policy",
    "start": "1232840",
    "end": "1235600"
  },
  {
    "text": "and",
    "start": "1235600",
    "end": "1236640"
  },
  {
    "text": "um yeah so that's the algorithm 5%",
    "start": "1236640",
    "end": "1239039"
  },
  {
    "text": "decrease every 10 seconds so down here",
    "start": "1239039",
    "end": "1241240"
  },
  {
    "text": "is selectors which identify requests for",
    "start": "1241240",
    "end": "1243600"
  },
  {
    "text": "scheduling so it's like uh like a",
    "start": "1243600",
    "end": "1246080"
  },
  {
    "text": "workload selector actually not just",
    "start": "1246080",
    "end": "1248240"
  },
  {
    "text": "workload selector it's also looking into",
    "start": "1248240",
    "end": "1249640"
  },
  {
    "text": "traffic",
    "start": "1249640",
    "end": "1250600"
  },
  {
    "text": "labels um so basically identifying the",
    "start": "1250600",
    "end": "1253480"
  },
  {
    "text": "service where we want the schul to act",
    "start": "1253480",
    "end": "1255520"
  },
  {
    "text": "and down here we have defined priorities",
    "start": "1255520",
    "end": "1257159"
  },
  {
    "text": "so we saying guest users have 50",
    "start": "1257159",
    "end": "1258720"
  },
  {
    "text": "priority and subscribers have",
    "start": "1258720",
    "end": "1260440"
  },
  {
    "text": "250 so let's see how the Matrix look",
    "start": "1260440",
    "end": "1263080"
  },
  {
    "text": "like once we have the policy in place so",
    "start": "1263080",
    "end": "1264919"
  },
  {
    "text": "on the left of the graph you see before",
    "start": "1264919",
    "end": "1267159"
  },
  {
    "text": "the policy was deployed so we saw um so",
    "start": "1267159",
    "end": "1270559"
  },
  {
    "text": "this is like before aperture so nearly",
    "start": "1270559",
    "end": "1272159"
  },
  {
    "text": "100% connection usage when the traffic",
    "start": "1272159",
    "end": "1274679"
  },
  {
    "text": "ramped up and like after aperture is",
    "start": "1274679",
    "end": "1277520"
  },
  {
    "text": "installed the overload is prevented and",
    "start": "1277520",
    "end": "1279640"
  },
  {
    "text": "we stop seeing any errors like earlier",
    "start": "1279640",
    "end": "1281279"
  },
  {
    "text": "we were seeing too many clients already",
    "start": "1281279",
    "end": "1283039"
  },
  {
    "text": "on the service so we stopped seeing this",
    "start": "1283039",
    "end": "1284679"
  },
  {
    "text": "error and also we started getting this",
    "start": "1284679",
    "end": "1286840"
  },
  {
    "text": "prioritization of traffic is shown in",
    "start": "1286840",
    "end": "1288760"
  },
  {
    "text": "the graphs here so um incoming take",
    "start": "1288760",
    "end": "1292000"
  },
  {
    "text": "token rate is higher than accepted this",
    "start": "1292000",
    "end": "1293960"
  },
  {
    "text": "means there's some Q buildup happening",
    "start": "1293960",
    "end": "1295640"
  },
  {
    "text": "because of throttling and we see higher",
    "start": "1295640",
    "end": "1298159"
  },
  {
    "text": "acceptance rate for subscribers versus",
    "start": "1298159",
    "end": "1300080"
  },
  {
    "text": "guest users and conversely higher",
    "start": "1300080",
    "end": "1302640"
  },
  {
    "text": "rejected rate for guest users and lower",
    "start": "1302640",
    "end": "1305000"
  },
  {
    "text": "rejected rate for",
    "start": "1305000",
    "end": "1306720"
  },
  {
    "text": "subscribers",
    "start": "1306720",
    "end": "1309279"
  },
  {
    "text": "so yeah so this is the priorities in",
    "start": "1309279",
    "end": "1311400"
  },
  {
    "text": "action so roughly five times the",
    "start": "1311400",
    "end": "1313880"
  },
  {
    "text": "acceptance rate for subscribers versus",
    "start": "1313880",
    "end": "1317120"
  },
  {
    "text": "guest users so this number is almost",
    "start": "1317120",
    "end": "1319120"
  },
  {
    "text": "five times so this is the Ved fear",
    "start": "1319120",
    "end": "1321600"
  },
  {
    "text": "queing algorithm in",
    "start": "1321600",
    "end": "1323000"
  },
  {
    "text": "action so that is it guys so let's move",
    "start": "1323000",
    "end": "1326720"
  },
  {
    "text": "on to Q&A so I would encourage you guys",
    "start": "1326720",
    "end": "1328679"
  },
  {
    "text": "to check out the aperture project on",
    "start": "1328679",
    "end": "1330559"
  },
  {
    "text": "GitHub even uh try out the aperture",
    "start": "1330559",
    "end": "1333320"
  },
  {
    "text": "Cloud uh which is the commercial",
    "start": "1333320",
    "end": "1335000"
  },
  {
    "text": "solution which uh does controller as a",
    "start": "1335000",
    "end": "1337799"
  },
  {
    "text": "manag service and also gives you rich",
    "start": "1337799",
    "end": "1340400"
  },
  {
    "text": "analytics so I'm open to questions",
    "start": "1340400",
    "end": "1344640"
  },
  {
    "text": "now",
    "start": "1346960",
    "end": "1349960"
  },
  {
    "text": "all right so I'm looking at the Q&A",
    "start": "1355880",
    "end": "1357919"
  },
  {
    "text": "section so there's a question which is",
    "start": "1357919",
    "end": "1360480"
  },
  {
    "text": "from M Conners he's saying is it",
    "start": "1360480",
    "end": "1362360"
  },
  {
    "text": "possible to detect overload without",
    "start": "1362360",
    "end": "1364520"
  },
  {
    "text": "dedicate dedicated Matrix like postr Q",
    "start": "1364520",
    "end": "1366919"
  },
  {
    "text": "perhaps using sto layer 7 Matrix",
    "start": "1366919",
    "end": "1369159"
  },
  {
    "text": "absolutely uh so we uh do have policies",
    "start": "1369159",
    "end": "1372400"
  },
  {
    "text": "which can actually look at things like",
    "start": "1372400",
    "end": "1374640"
  },
  {
    "text": "latencies uh we haven't used estos",
    "start": "1374640",
    "end": "1377279"
  },
  {
    "text": "Matrix but there's nothing stopping us",
    "start": "1377279",
    "end": "1378880"
  },
  {
    "text": "from doing that like you can write uh",
    "start": "1378880",
    "end": "1381360"
  },
  {
    "text": "because St Matrix are exposed as um",
    "start": "1381360",
    "end": "1383760"
  },
  {
    "text": "Prometheus compliant Matrix or you can",
    "start": "1383760",
    "end": "1385279"
  },
  {
    "text": "write an oel pipeline to scrape those",
    "start": "1385279",
    "end": "1387039"
  },
  {
    "text": "matrics uh but you can also uh use",
    "start": "1387039",
    "end": "1389960"
  },
  {
    "text": "apertures built in flux meter there's a",
    "start": "1389960",
    "end": "1391720"
  },
  {
    "text": "component called flux meter which lets",
    "start": "1391720",
    "end": "1393240"
  },
  {
    "text": "you create histograms which are even",
    "start": "1393240",
    "end": "1395240"
  },
  {
    "text": "more detailed than stos layer 7 Matrix",
    "start": "1395240",
    "end": "1397600"
  },
  {
    "text": "you can go down into like graphql",
    "start": "1397600",
    "end": "1399840"
  },
  {
    "text": "payload and looking at labels inside",
    "start": "1399840",
    "end": "1401799"
  },
  {
    "text": "that to get these layer 7even kind of",
    "start": "1401799",
    "end": "1404480"
  },
  {
    "text": "latency Matrix percentile Matrix and so",
    "start": "1404480",
    "end": "1406880"
  },
  {
    "text": "on",
    "start": "1406880",
    "end": "1409880"
  },
  {
    "text": "[Music]",
    "start": "1411660",
    "end": "1413799"
  },
  {
    "text": "so okay that was the only question I'll",
    "start": "1413799",
    "end": "1416120"
  },
  {
    "text": "check the chat as",
    "start": "1416120",
    "end": "1417840"
  },
  {
    "text": "well",
    "start": "1417840",
    "end": "1420840"
  },
  {
    "text": "um all right",
    "start": "1422760",
    "end": "1426520"
  },
  {
    "text": "um any other questions",
    "start": "1432600",
    "end": "1436559"
  },
  {
    "text": "anyone",
    "start": "1436880",
    "end": "1439880"
  },
  {
    "text": "all right",
    "start": "1454640",
    "end": "1456080"
  },
  {
    "text": "I'll that's all the slides I had so",
    "start": "1456080",
    "end": "1459720"
  },
  {
    "text": "um maybe I can show you guys a little",
    "start": "1459720",
    "end": "1462400"
  },
  {
    "text": "bit more if you guys are interested like",
    "start": "1462400",
    "end": "1464400"
  },
  {
    "text": "how circuit based policies look like so",
    "start": "1464400",
    "end": "1466840"
  },
  {
    "text": "essentially designing these signal",
    "start": "1466840",
    "end": "1469120"
  },
  {
    "text": "processing graphs um but by the way we",
    "start": "1469120",
    "end": "1471919"
  },
  {
    "text": "have made it pretty simple like um for",
    "start": "1471919",
    "end": "1475039"
  },
  {
    "text": "anyone to use this product so we so you",
    "start": "1475039",
    "end": "1476960"
  },
  {
    "text": "don't really have to design this so we",
    "start": "1476960",
    "end": "1478360"
  },
  {
    "text": "have these high level uh blueprints that",
    "start": "1478360",
    "end": "1481320"
  },
  {
    "text": "you can use out of the box just fill in",
    "start": "1481320",
    "end": "1483320"
  },
  {
    "text": "like high Lev yamel and get",
    "start": "1483320",
    "end": "1485399"
  },
  {
    "text": "started so we have these um basically",
    "start": "1485399",
    "end": "1489159"
  },
  {
    "text": "these kind of",
    "start": "1489159",
    "end": "1490279"
  },
  {
    "text": "recipes uh so under load scheduling um",
    "start": "1490279",
    "end": "1494320"
  },
  {
    "text": "so for instance someone someone was",
    "start": "1494320",
    "end": "1496000"
  },
  {
    "text": "asking can we do we need specialized m",
    "start": "1496000",
    "end": "1497840"
  },
  {
    "text": "trick like post SQL so you can even look",
    "start": "1497840",
    "end": "1499600"
  },
  {
    "text": "at things like latencies and use that as",
    "start": "1499600",
    "end": "1502240"
  },
  {
    "text": "a feedback for throttling",
    "start": "1502240",
    "end": "1505840"
  },
  {
    "text": "requests this is like a quick view of",
    "start": "1510480",
    "end": "1512880"
  },
  {
    "text": "how um the entire um stack Works uh from",
    "start": "1512880",
    "end": "1518640"
  },
  {
    "text": "um classification stage to",
    "start": "1518640",
    "end": "1521120"
  },
  {
    "text": "scheduling and um this this example",
    "start": "1521120",
    "end": "1524799"
  },
  {
    "text": "doesn't show sto so essentially a",
    "start": "1524799",
    "end": "1527279"
  },
  {
    "text": "service could be directly talking to",
    "start": "1527279",
    "end": "1528720"
  },
  {
    "text": "Pure agent it could be doing through sto",
    "start": "1528720",
    "end": "1530320"
  },
  {
    "text": "it could be doing through Kong but",
    "start": "1530320",
    "end": "1531760"
  },
  {
    "text": "essentially the same kind of interface",
    "start": "1531760",
    "end": "1533279"
  },
  {
    "text": "works for all these",
    "start": "1533279",
    "end": "1535640"
  },
  {
    "text": "Technologies and um so the interesting",
    "start": "1535640",
    "end": "1539000"
  },
  {
    "text": "thing we have done is with this Rego uh",
    "start": "1539000",
    "end": "1541360"
  },
  {
    "text": "so Rego is typically used for",
    "start": "1541360",
    "end": "1542559"
  },
  {
    "text": "authorization use cases but we used Rego",
    "start": "1542559",
    "end": "1544480"
  },
  {
    "text": "over here for more than that for flow",
    "start": "1544480",
    "end": "1546840"
  },
  {
    "text": "control observability and so on like the",
    "start": "1546840",
    "end": "1548799"
  },
  {
    "text": "same set of labels can be used both for",
    "start": "1548799",
    "end": "1550679"
  },
  {
    "text": "observability and controll so that's an",
    "start": "1550679",
    "end": "1553559"
  },
  {
    "text": "interesting Innovation we did here",
    "start": "1553559",
    "end": "1556679"
  },
  {
    "text": "and",
    "start": "1556679",
    "end": "1559679"
  },
  {
    "text": "yeah and um this is like the",
    "start": "1560640",
    "end": "1562480"
  },
  {
    "text": "architecture of aperture in open source",
    "start": "1562480",
    "end": "1565840"
  },
  {
    "text": "so just just the stuff we talked about",
    "start": "1565840",
    "end": "1567799"
  },
  {
    "text": "so there's a control circuit running in",
    "start": "1567799",
    "end": "1569159"
  },
  {
    "text": "the controller which is periodically",
    "start": "1569159",
    "end": "1571360"
  },
  {
    "text": "computed and the decisions are",
    "start": "1571360",
    "end": "1573440"
  },
  {
    "text": "propagated through at CD so I'll just go",
    "start": "1573440",
    "end": "1575720"
  },
  {
    "text": "back to the Q&A section if there are",
    "start": "1575720",
    "end": "1577080"
  },
  {
    "text": "more questions for",
    "start": "1577080",
    "end": "1578640"
  },
  {
    "text": "me uh okay no questions till",
    "start": "1578640",
    "end": "1583240"
  },
  {
    "text": "now",
    "start": "1586600",
    "end": "1589600"
  },
  {
    "text": "all right",
    "start": "1593320",
    "end": "1596240"
  },
  {
    "text": "um all right let I think we can end the",
    "start": "1599480",
    "end": "1601799"
  },
  {
    "text": "session if there are no more questions",
    "start": "1601799",
    "end": "1605440"
  }
]