[
  {
    "text": "thanks uh so hopefully your day started",
    "start": "120",
    "end": "3480"
  },
  {
    "text": "a little better than mine I first first",
    "start": "3480",
    "end": "6240"
  },
  {
    "text": "thing uh walking over here stepped into",
    "start": "6240",
    "end": "8160"
  },
  {
    "text": "a deep puddle so um yeah anyway so quick",
    "start": "8160",
    "end": "11920"
  },
  {
    "text": "show of hands who already has profiling",
    "start": "11920",
    "end": "14599"
  },
  {
    "text": "as part of their observability set up",
    "start": "14599",
    "end": "18199"
  },
  {
    "text": "today Okay cool so maybe 15 20 hands so",
    "start": "18199",
    "end": "23880"
  },
  {
    "text": "um hopefully for everyone else um I'm",
    "start": "23880",
    "end": "27359"
  },
  {
    "text": "I'll be able to convince you that this",
    "start": "27359",
    "end": "29000"
  },
  {
    "text": "is a useful uh tool as we've already",
    "start": "29000",
    "end": "31480"
  },
  {
    "text": "heard um a couple of times today um",
    "start": "31480",
    "end": "34520"
  },
  {
    "text": "profiling is actually also being um",
    "start": "34520",
    "end": "38079"
  },
  {
    "text": "specified as part of OTP uh so hopefully",
    "start": "38079",
    "end": "42360"
  },
  {
    "text": "that'll also enable a lot of people um",
    "start": "42360",
    "end": "45600"
  },
  {
    "text": "you know to both convince uh your teams",
    "start": "45600",
    "end": "48320"
  },
  {
    "text": "that this is a useful thing and that you",
    "start": "48320",
    "end": "50000"
  },
  {
    "text": "know have choice between compatible",
    "start": "50000",
    "end": "53079"
  },
  {
    "text": "backends um so yeah for um those who",
    "start": "53079",
    "end": "56800"
  },
  {
    "text": "maybe aren't super familiar with",
    "start": "56800",
    "end": "58440"
  },
  {
    "text": "profiling yet um I want to do a very",
    "start": "58440",
    "end": "61559"
  },
  {
    "text": "quick introduction of why this is useful",
    "start": "61559",
    "end": "63480"
  },
  {
    "text": "in the first place and then we'll dive",
    "start": "63480",
    "end": "64799"
  },
  {
    "text": "into how this works and how we can um",
    "start": "64799",
    "end": "67479"
  },
  {
    "text": "make best use um of this data so uh to",
    "start": "67479",
    "end": "71360"
  },
  {
    "text": "start I want to start with a really",
    "start": "71360",
    "end": "73080"
  },
  {
    "text": "quick um short story of computing",
    "start": "73080",
    "end": "76040"
  },
  {
    "text": "history and why um now in particular",
    "start": "76040",
    "end": "79200"
  },
  {
    "text": "it's a very important time uh for",
    "start": "79200",
    "end": "81439"
  },
  {
    "text": "profiling so the year is",
    "start": "81439",
    "end": "84159"
  },
  {
    "text": "1971 um and Intel um uh released this",
    "start": "84159",
    "end": "88320"
  },
  {
    "text": "chip that was basically the first",
    "start": "88320",
    "end": "90600"
  },
  {
    "text": "um chip that you could buy um for uh",
    "start": "90600",
    "end": "94360"
  },
  {
    "text": "commercially um and so this was a this",
    "start": "94360",
    "end": "96399"
  },
  {
    "text": "was a huge deal and then in",
    "start": "96399",
    "end": "99240"
  },
  {
    "text": "1974 uh Intel released this Infamous 880",
    "start": "99240",
    "end": "102799"
  },
  {
    "text": "chip um and just from the original chip",
    "start": "102799",
    "end": "106520"
  },
  {
    "text": "to this chip the number of transistors",
    "start": "106520",
    "end": "109240"
  },
  {
    "text": "in um in the CPU more than doubled um",
    "start": "109240",
    "end": "113560"
  },
  {
    "text": "and then qu fast forward to 1978 uh we",
    "start": "113560",
    "end": "117039"
  },
  {
    "text": "get another chip and we have 29,000",
    "start": "117039",
    "end": "119360"
  },
  {
    "text": "transistors and you probably already",
    "start": "119360",
    "end": "120759"
  },
  {
    "text": "know where I'm going with this um this",
    "start": "120759",
    "end": "122600"
  },
  {
    "text": "is something that uh one of Intel's",
    "start": "122600",
    "end": "124399"
  },
  {
    "text": "Founders um coined as Mo's law initially",
    "start": "124399",
    "end": "127880"
  },
  {
    "text": "said every year the number of",
    "start": "127880",
    "end": "129479"
  },
  {
    "text": "transistors is going to double um later",
    "start": "129479",
    "end": "131680"
  },
  {
    "text": "retracted that statement and said every",
    "start": "131680",
    "end": "133200"
  },
  {
    "text": "two to three years um and originally",
    "start": "133200",
    "end": "136640"
  },
  {
    "text": "this was a prediction that this is how",
    "start": "136640",
    "end": "138040"
  },
  {
    "text": "transistors are uh going to behave um",
    "start": "138040",
    "end": "141599"
  },
  {
    "text": "and eventually it became actually a goal",
    "start": "141599",
    "end": "143319"
  },
  {
    "text": "of um",
    "start": "143319",
    "end": "146480"
  },
  {
    "text": "uh manufacturers of uh CPUs um and so",
    "start": "146480",
    "end": "150760"
  },
  {
    "text": "originally you know it was like this is",
    "start": "150760",
    "end": "152120"
  },
  {
    "text": "how a technology is going to advance and",
    "start": "152120",
    "end": "154280"
  },
  {
    "text": "then eventually it became we've been",
    "start": "154280",
    "end": "155840"
  },
  {
    "text": "pretty good at this so now this is our",
    "start": "155840",
    "end": "157560"
  },
  {
    "text": "goal every time so fast forward to today",
    "start": "157560",
    "end": "161040"
  },
  {
    "text": "um when Apple actually last year um or",
    "start": "161040",
    "end": "164040"
  },
  {
    "text": "maybe two years ago already um released",
    "start": "164040",
    "end": "166599"
  },
  {
    "text": "this M2 Chip um one of the really",
    "start": "166599",
    "end": "168879"
  },
  {
    "text": "interesting things that they mentioned",
    "start": "168879",
    "end": "170879"
  },
  {
    "text": "in uh the keynote when they did this",
    "start": "170879",
    "end": "173239"
  },
  {
    "text": "they said that the the the transistors",
    "start": "173239",
    "end": "175200"
  },
  {
    "text": "in these CPUs are just over 12 silicon",
    "start": "175200",
    "end": "178440"
  },
  {
    "text": "atoms wide so we're we're kind of um",
    "start": "178440",
    "end": "182840"
  },
  {
    "text": "wondering you know if we're wondering",
    "start": "182840",
    "end": "184360"
  },
  {
    "text": "how how small can transistors actually",
    "start": "184360",
    "end": "186319"
  },
  {
    "text": "get well theoretically speaking we think",
    "start": "186319",
    "end": "189599"
  },
  {
    "text": "it's physically possible to build a",
    "start": "189599",
    "end": "191720"
  },
  {
    "text": "transistor that is um one silicon atom",
    "start": "191720",
    "end": "194560"
  },
  {
    "text": "and so we're about um you know a couple",
    "start": "194560",
    "end": "197640"
  },
  {
    "text": "of uh having away as an industry from",
    "start": "197640",
    "end": "202720"
  },
  {
    "text": "the physical limits that are known to",
    "start": "202720",
    "end": "205720"
  },
  {
    "text": "mankind at the moment right so with our",
    "start": "205720",
    "end": "209000"
  },
  {
    "text": "current technology",
    "start": "209000",
    "end": "210280"
  },
  {
    "text": "we're not far away from um the physical",
    "start": "210280",
    "end": "213200"
  },
  {
    "text": "physical limits and so that leaves us",
    "start": "213200",
    "end": "216000"
  },
  {
    "text": "with um the situation where Hardware is",
    "start": "216000",
    "end": "218799"
  },
  {
    "text": "no longer getting exponentially faster",
    "start": "218799",
    "end": "221400"
  },
  {
    "text": "right we're actually hitting the",
    "start": "221400",
    "end": "222560"
  },
  {
    "text": "physical limits of what um is possible",
    "start": "222560",
    "end": "226120"
  },
  {
    "text": "and so my prediction is um you know even",
    "start": "226120",
    "end": "229840"
  },
  {
    "text": "though this is uh this is kind of",
    "start": "229840",
    "end": "231959"
  },
  {
    "text": "physically ending um actually Mo's law",
    "start": "231959",
    "end": "235519"
  },
  {
    "text": "in a very different sense is uh going to",
    "start": "235519",
    "end": "238239"
  },
  {
    "text": "continue to um exist",
    "start": "238239",
    "end": "240480"
  },
  {
    "text": "however not in the sense that um you",
    "start": "240480",
    "end": "242840"
  },
  {
    "text": "know the number of transistors is going",
    "start": "242840",
    "end": "244400"
  },
  {
    "text": "to continue to um double every couple of",
    "start": "244400",
    "end": "247599"
  },
  {
    "text": "years it is uh through two things either",
    "start": "247599",
    "end": "250680"
  },
  {
    "text": "we're going to be seeing uh specialized",
    "start": "250680",
    "end": "252480"
  },
  {
    "text": "hardware and we're already kind of",
    "start": "252480",
    "end": "253959"
  },
  {
    "text": "seeing this in the AI world right like",
    "start": "253959",
    "end": "255959"
  },
  {
    "text": "there are chips that are specifically",
    "start": "255959",
    "end": "257280"
  },
  {
    "text": "being uh created for special purpose um",
    "start": "257280",
    "end": "260400"
  },
  {
    "text": "applications and they vastly outperform",
    "start": "260400",
    "end": "262919"
  },
  {
    "text": "uh general purpose chips and uh the",
    "start": "262919",
    "end": "265560"
  },
  {
    "text": "other thing and I'm not a hardware",
    "start": "265560",
    "end": "267000"
  },
  {
    "text": "person so this is not a problem that I'm",
    "start": "267000",
    "end": "268720"
  },
  {
    "text": "going to tackle um however we we can",
    "start": "268720",
    "end": "271240"
  },
  {
    "text": "actually make much better use of the",
    "start": "271240",
    "end": "273680"
  },
  {
    "text": "existing Hardware that we have and I",
    "start": "273680",
    "end": "275800"
  },
  {
    "text": "believe this is going to stay true for",
    "start": "275800",
    "end": "277919"
  },
  {
    "text": "years to come and so how can we actually",
    "start": "277919",
    "end": "280759"
  },
  {
    "text": "make use of our existing Hardware better",
    "start": "280759",
    "end": "284160"
  },
  {
    "text": "well that is exactly what the C of this",
    "start": "284160",
    "end": "286759"
  },
  {
    "text": "talk is going to be about is with",
    "start": "286759",
    "end": "288680"
  },
  {
    "text": "profiling so what exactly is",
    "start": "288680",
    "end": "292560"
  },
  {
    "text": "profiling um profiling is actually as",
    "start": "292560",
    "end": "295199"
  },
  {
    "text": "old as software engineering as a",
    "start": "295199",
    "end": "296919"
  },
  {
    "text": "discipline is because we always needed",
    "start": "296919",
    "end": "299400"
  },
  {
    "text": "to understand where are resources being",
    "start": "299400",
    "end": "302320"
  },
  {
    "text": "spent so if we wanted to make our",
    "start": "302320",
    "end": "304600"
  },
  {
    "text": "programs faster that's not just a today",
    "start": "304600",
    "end": "307280"
  },
  {
    "text": "problem that's something that we've",
    "start": "307280",
    "end": "308919"
  },
  {
    "text": "always wanted to do um and so profiling",
    "start": "308919",
    "end": "312600"
  },
  {
    "text": "essentially is measuring uh down to the",
    "start": "312600",
    "end": "315680"
  },
  {
    "text": "source code line number where resources",
    "start": "315680",
    "end": "317880"
  },
  {
    "text": "are being spent and that can be so far",
    "start": "317880",
    "end": "320120"
  },
  {
    "text": "I've been focusing on CPU but it can",
    "start": "320120",
    "end": "322479"
  },
  {
    "text": "really be any resource it can can be",
    "start": "322479",
    "end": "324720"
  },
  {
    "text": "Memory it can be Network IO it can be",
    "start": "324720",
    "end": "327960"
  },
  {
    "text": "disk IO honestly anything where you can",
    "start": "327960",
    "end": "331199"
  },
  {
    "text": "have a stack Trace so functions calling",
    "start": "331199",
    "end": "333360"
  },
  {
    "text": "each other and a number associated with",
    "start": "333360",
    "end": "335319"
  },
  {
    "text": "it you can come on come up with your own",
    "start": "335319",
    "end": "337240"
  },
  {
    "text": "kind of profiling and we're seeing that",
    "start": "337240",
    "end": "339080"
  },
  {
    "text": "a lot already in the community actually",
    "start": "339080",
    "end": "341600"
  },
  {
    "text": "but most typically and this is the thing",
    "start": "341600",
    "end": "343720"
  },
  {
    "text": "that I'm going to be focusing on most um",
    "start": "343720",
    "end": "346160"
  },
  {
    "text": "in this talk is uh CPU profiling and",
    "start": "346160",
    "end": "349280"
  },
  {
    "text": "that's for for a variety of reasons but",
    "start": "349280",
    "end": "352360"
  },
  {
    "text": "primarily because CPU tends to be one of",
    "start": "352360",
    "end": "354759"
  },
  {
    "text": "the most expensive resources on our",
    "start": "354759",
    "end": "356680"
  },
  {
    "text": "Cloud",
    "start": "356680",
    "end": "357560"
  },
  {
    "text": "bill so there are roughly two categories",
    "start": "357560",
    "end": "361280"
  },
  {
    "text": "um of profiling and I'm going to focus",
    "start": "361280",
    "end": "363600"
  },
  {
    "text": "on not this one but I still want to",
    "start": "363600",
    "end": "365479"
  },
  {
    "text": "cover it real quick uh so basically",
    "start": "365479",
    "end": "367639"
  },
  {
    "text": "there's tracing profiling and sampling",
    "start": "367639",
    "end": "369720"
  },
  {
    "text": "profiling and with tracing profiling we",
    "start": "369720",
    "end": "372400"
  },
  {
    "text": "want to actually capture every single",
    "start": "372400",
    "end": "375199"
  },
  {
    "text": "thing that happens in our system um and",
    "start": "375199",
    "end": "378080"
  },
  {
    "text": "this can be super useful but um it has",
    "start": "378080",
    "end": "381319"
  },
  {
    "text": "extremely high overhead and so typically",
    "start": "381319",
    "end": "383759"
  },
  {
    "text": "this is not done in a production",
    "start": "383759",
    "end": "386520"
  },
  {
    "text": "environment um instead what most most uh",
    "start": "386520",
    "end": "390160"
  },
  {
    "text": "production profilers do is um they",
    "start": "390160",
    "end": "393759"
  },
  {
    "text": "perform sampling and this is actually",
    "start": "393759",
    "end": "395440"
  },
  {
    "text": "the type of profiler",
    "start": "395440",
    "end": "398560"
  },
  {
    "text": "um that we're also specifying the OTP",
    "start": "398560",
    "end": "401919"
  },
  {
    "text": "format for so um that's why I'm going to",
    "start": "401919",
    "end": "405000"
  },
  {
    "text": "be also focusing on this so essentially",
    "start": "405000",
    "end": "407840"
  },
  {
    "text": "what this means is in the in the case of",
    "start": "407840",
    "end": "409880"
  },
  {
    "text": "CPU profiling every x amount of times",
    "start": "409880",
    "end": "413960"
  },
  {
    "text": "per second we're looking at what is the",
    "start": "413960",
    "end": "416080"
  },
  {
    "text": "current function call stack right and",
    "start": "416080",
    "end": "418360"
  },
  {
    "text": "we're building statistics out of that to",
    "start": "418360",
    "end": "420720"
  },
  {
    "text": "infer okay if we're seeing the same",
    "start": "420720",
    "end": "422680"
  },
  {
    "text": "function call St multiple times",
    "start": "422680",
    "end": "424639"
  },
  {
    "text": "statistically speaking more time is",
    "start": "424639",
    "end": "427720"
  },
  {
    "text": "being spent um in that function I'm",
    "start": "427720",
    "end": "430319"
  },
  {
    "text": "going to cover all that in a little bit",
    "start": "430319",
    "end": "432479"
  },
  {
    "text": "more detail again but theoretically",
    "start": "432479",
    "end": "434759"
  },
  {
    "text": "speaking let's just say we're looking at",
    "start": "434759",
    "end": "436840"
  },
  {
    "text": "the function call Deck 10 times per",
    "start": "436840",
    "end": "438560"
  },
  {
    "text": "second and we're seeing the same um",
    "start": "438560",
    "end": "440720"
  },
  {
    "text": "function call Deck three times well then",
    "start": "440720",
    "end": "443080"
  },
  {
    "text": "we're spending statistically 300",
    "start": "443080",
    "end": "445199"
  },
  {
    "text": "milliseconds in that uh function",
    "start": "445199",
    "end": "447639"
  },
  {
    "text": "obviously the numbers are much larger",
    "start": "447639",
    "end": "449080"
  },
  {
    "text": "and so statistical significance actually",
    "start": "449080",
    "end": "451960"
  },
  {
    "text": "um",
    "start": "451960",
    "end": "453919"
  },
  {
    "text": "is uh exists even though we're not",
    "start": "453919",
    "end": "456639"
  },
  {
    "text": "looking at the function costex only 10",
    "start": "456639",
    "end": "458919"
  },
  {
    "text": "times a second so let's take a super",
    "start": "458919",
    "end": "461560"
  },
  {
    "text": "quick and uh simple example and this",
    "start": "461560",
    "end": "464159"
  },
  {
    "text": "actually um while I'm not diving into",
    "start": "464159",
    "end": "466879"
  },
  {
    "text": "the OTL protocol this is roughly the",
    "start": "466879",
    "end": "469919"
  },
  {
    "text": "structure of um what what the protocol",
    "start": "469919",
    "end": "472120"
  },
  {
    "text": "is likely going to look like as well so",
    "start": "472120",
    "end": "473919"
  },
  {
    "text": "we have a time stamp um and the function",
    "start": "473919",
    "end": "477080"
  },
  {
    "text": "call stack and then um either a value",
    "start": "477080",
    "end": "480800"
  },
  {
    "text": "and so this is also where we're uh one",
    "start": "480800",
    "end": "483280"
  },
  {
    "text": "part where we're kind of discussing how",
    "start": "483280",
    "end": "484919"
  },
  {
    "text": "to appropriately represent this in the",
    "start": "484919",
    "end": "488240"
  },
  {
    "text": "protocol um you either have just the",
    "start": "488240",
    "end": "490800"
  },
  {
    "text": "observation of the stack Trace so",
    "start": "490800",
    "end": "492520"
  },
  {
    "text": "exactly when it was um collected it um",
    "start": "492520",
    "end": "496960"
  },
  {
    "text": "then obviously we don't necessarily need",
    "start": "496960",
    "end": "498560"
  },
  {
    "text": "to have a value attached to it however",
    "start": "498560",
    "end": "501039"
  },
  {
    "text": "there are also um cases where you may",
    "start": "501039",
    "end": "504440"
  },
  {
    "text": "not want to save every single um stack",
    "start": "504440",
    "end": "507960"
  },
  {
    "text": "with its unique time stamp that can",
    "start": "507960",
    "end": "509800"
  },
  {
    "text": "produce a lot of data right and so um it",
    "start": "509800",
    "end": "512719"
  },
  {
    "text": "could also be we've seen this stack x",
    "start": "512719",
    "end": "515479"
  },
  {
    "text": "amount of times over the period of 10",
    "start": "515479",
    "end": "518080"
  },
  {
    "text": "seconds for example um and so both of",
    "start": "518080",
    "end": "520719"
  },
  {
    "text": "those things are going to be possible in",
    "start": "520719",
    "end": "523200"
  },
  {
    "text": "um in the protocol um but just giving a",
    "start": "523200",
    "end": "526399"
  },
  {
    "text": "very quick example here unfortunately",
    "start": "526399",
    "end": "528480"
  },
  {
    "text": "looks a little bit faint but uh for",
    "start": "528480",
    "end": "530360"
  },
  {
    "text": "those who maybe uh can't can't read this",
    "start": "530360",
    "end": "532560"
  },
  {
    "text": "uh further in the back basically what we",
    "start": "532560",
    "end": "534080"
  },
  {
    "text": "have here is just a main function that's",
    "start": "534080",
    "end": "536200"
  },
  {
    "text": "calling function a that's calling",
    "start": "536200",
    "end": "538160"
  },
  {
    "text": "function B that's calling function C",
    "start": "538160",
    "end": "540160"
  },
  {
    "text": "that's calling function D and then",
    "start": "540160",
    "end": "541959"
  },
  {
    "text": "function D just is something that uh",
    "start": "541959",
    "end": "544440"
  },
  {
    "text": "uses a ton of uh CPU time and so if we",
    "start": "544440",
    "end": "548600"
  },
  {
    "text": "perform profiling what we would end up",
    "start": "548600",
    "end": "551000"
  },
  {
    "text": "seeing all the time is that we have this",
    "start": "551000",
    "end": "553519"
  },
  {
    "text": "stack uh that is just main function a",
    "start": "553519",
    "end": "556120"
  },
  {
    "text": "function B function C function d right",
    "start": "556120",
    "end": "558880"
  },
  {
    "text": "and so every time we look do an",
    "start": "558880",
    "end": "560440"
  },
  {
    "text": "observation at our program this is",
    "start": "560440",
    "end": "562360"
  },
  {
    "text": "exactly what we're going to be seeing",
    "start": "562360",
    "end": "564680"
  },
  {
    "text": "and so that's essentially the crooks of",
    "start": "564680",
    "end": "566880"
  },
  {
    "text": "how profiling works we just look at what",
    "start": "566880",
    "end": "568800"
  },
  {
    "text": "is the current function call stack and",
    "start": "568800",
    "end": "570519"
  },
  {
    "text": "we save",
    "start": "570519",
    "end": "571640"
  },
  {
    "text": "that and so um in a more uh Real",
    "start": "571640",
    "end": "575279"
  },
  {
    "text": "Environment it might look something like",
    "start": "575279",
    "end": "577680"
  },
  {
    "text": "this you know every x amount of times uh",
    "start": "577680",
    "end": "580320"
  },
  {
    "text": "per second we look at what is currently",
    "start": "580320",
    "end": "582600"
  },
  {
    "text": "the function call stack and we just save",
    "start": "582600",
    "end": "586040"
  },
  {
    "text": "that um but how can we visualize this",
    "start": "586040",
    "end": "589440"
  },
  {
    "text": "data in a useful way we've already",
    "start": "589440",
    "end": "591440"
  },
  {
    "text": "actually heard this uh visualization a",
    "start": "591440",
    "end": "593640"
  },
  {
    "text": "couple of times uh today um for example",
    "start": "593640",
    "end": "596560"
  },
  {
    "text": "in the Jagger update we heard that um",
    "start": "596560",
    "end": "600279"
  },
  {
    "text": "they added the ability to also visualize",
    "start": "600279",
    "end": "602360"
  },
  {
    "text": "tracing data using flame graphs and so",
    "start": "602360",
    "end": "605200"
  },
  {
    "text": "um that is probably the most widely",
    "start": "605200",
    "end": "608959"
  },
  {
    "text": "known and used visualization so if we're",
    "start": "608959",
    "end": "611360"
  },
  {
    "text": "looking at this uh stack collection here",
    "start": "611360",
    "end": "613760"
  },
  {
    "text": "again um the way that we could this is",
    "start": "613760",
    "end": "617279"
  },
  {
    "text": "an a way to implement uh flame graphs we",
    "start": "617279",
    "end": "620519"
  },
  {
    "text": "essentially um kind of uh sort",
    "start": "620519",
    "end": "623560"
  },
  {
    "text": "everything and then we can merge all of",
    "start": "623560",
    "end": "625920"
  },
  {
    "text": "the functions that are the same so in",
    "start": "625920",
    "end": "628800"
  },
  {
    "text": "this case you you know the same color",
    "start": "628800",
    "end": "631040"
  },
  {
    "text": "means uh same same function uh so going",
    "start": "631040",
    "end": "635160"
  },
  {
    "text": "back and forth here a couple of times so",
    "start": "635160",
    "end": "636680"
  },
  {
    "text": "you can see see the difference so every",
    "start": "636680",
    "end": "639519"
  },
  {
    "text": "time we see the same function on the",
    "start": "639519",
    "end": "641680"
  },
  {
    "text": "same level we merge it right and so now",
    "start": "641680",
    "end": "645720"
  },
  {
    "text": "what we can infer from This Is The Wider",
    "start": "645720",
    "end": "648920"
  },
  {
    "text": "the frame the more CPU time in",
    "start": "648920",
    "end": "651680"
  },
  {
    "text": "cumulative was spent in this function",
    "start": "651680",
    "end": "654480"
  },
  {
    "text": "and its",
    "start": "654480",
    "end": "655560"
  },
  {
    "text": "children this is really important",
    "start": "655560",
    "end": "657880"
  },
  {
    "text": "because now we can say okay this is",
    "start": "657880",
    "end": "660360"
  },
  {
    "text": "actually the most expensive subsystem um",
    "start": "660360",
    "end": "663959"
  },
  {
    "text": "in my code right and this is the part",
    "start": "663959",
    "end": "666839"
  },
  {
    "text": "that I should be focusing on because if",
    "start": "666839",
    "end": "668320"
  },
  {
    "text": "I can optimize this piece of code it's",
    "start": "668320",
    "end": "671000"
  },
  {
    "text": "actually going to translate into a",
    "start": "671000",
    "end": "673800"
  },
  {
    "text": "Improvement in um at runtime and so here",
    "start": "673800",
    "end": "678720"
  },
  {
    "text": "one one more time basically the xaxis is",
    "start": "678720",
    "end": "681440"
  },
  {
    "text": "the actual amount of CPU time again this",
    "start": "681440",
    "end": "684360"
  },
  {
    "text": "doesn't have to be CPU time this can be",
    "start": "684360",
    "end": "686480"
  },
  {
    "text": "the amount of memory in your process",
    "start": "686480",
    "end": "688240"
  },
  {
    "text": "this can be the of network IO um it can",
    "start": "688240",
    "end": "691079"
  },
  {
    "text": "really be anything and then the y-axis",
    "start": "691079",
    "end": "693279"
  },
  {
    "text": "is just um the call stack it doesn't",
    "start": "693279",
    "end": "695720"
  },
  {
    "text": "have any um you know",
    "start": "695720",
    "end": "698160"
  },
  {
    "text": "numerical value um it just so you can",
    "start": "698160",
    "end": "701760"
  },
  {
    "text": "understand which functions are calling",
    "start": "701760",
    "end": "703720"
  },
  {
    "text": "which other",
    "start": "703720",
    "end": "705560"
  },
  {
    "text": "functions and so um just to clarify a",
    "start": "705560",
    "end": "708639"
  },
  {
    "text": "little bit of uh terminology I have a",
    "start": "708639",
    "end": "710959"
  },
  {
    "text": "super uh simple example here one more",
    "start": "710959",
    "end": "713519"
  },
  {
    "text": "time so we just have a main function",
    "start": "713519",
    "end": "715240"
  },
  {
    "text": "that's calling function a and function",
    "start": "715240",
    "end": "717560"
  },
  {
    "text": "um and function I called function B and",
    "start": "717560",
    "end": "720600"
  },
  {
    "text": "so in this case um we I I'm just going",
    "start": "720600",
    "end": "724399"
  },
  {
    "text": "to pretend that we did 10 stack",
    "start": "724399",
    "end": "726519"
  },
  {
    "text": "collections right eight times we saw",
    "start": "726519",
    "end": "729279"
  },
  {
    "text": "main calling function a and then",
    "start": "729279",
    "end": "731800"
  },
  {
    "text": "function a calling function B we saw",
    "start": "731800",
    "end": "734040"
  },
  {
    "text": "that stack eight times right but then we",
    "start": "734040",
    "end": "736720"
  },
  {
    "text": "also saw just the main function uh three",
    "start": "736720",
    "end": "740079"
  },
  {
    "text": "times and so what that means is in",
    "start": "740079",
    "end": "742399"
  },
  {
    "text": "cumulative the main function used 10 10",
    "start": "742399",
    "end": "746079"
  },
  {
    "text": "units whatever that may be right if",
    "start": "746079",
    "end": "747680"
  },
  {
    "text": "we're again if we're collecting at a",
    "start": "747680",
    "end": "749920"
  },
  {
    "text": "frequency of 10 um samples per second",
    "start": "749920",
    "end": "753240"
  },
  {
    "text": "that would mean the main function in",
    "start": "753240",
    "end": "755320"
  },
  {
    "text": "total ran for 1 second and 800",
    "start": "755320",
    "end": "758440"
  },
  {
    "text": "milliseconds of that we spent in",
    "start": "758440",
    "end": "760920"
  },
  {
    "text": "function B um and essentially function a",
    "start": "760920",
    "end": "763800"
  },
  {
    "text": "didn't actually contribute anything um",
    "start": "763800",
    "end": "766440"
  },
  {
    "text": "and so the terminology that we use here",
    "start": "766440",
    "end": "769079"
  },
  {
    "text": "is cumulative and flat or some other",
    "start": "769079",
    "end": "771279"
  },
  {
    "text": "systems also call this self um and so",
    "start": "771279",
    "end": "774519"
  },
  {
    "text": "main actually only has a self value of",
    "start": "774519",
    "end": "776920"
  },
  {
    "text": "two here whereas function B has a self",
    "start": "776920",
    "end": "779959"
  },
  {
    "text": "value of eight right function a actually",
    "start": "779959",
    "end": "783120"
  },
  {
    "text": "has not contributed at all and so",
    "start": "783120",
    "end": "785880"
  },
  {
    "text": "therefore function a has a self value of",
    "start": "785880",
    "end": "788000"
  },
  {
    "text": "zero however it is calling function B",
    "start": "788000",
    "end": "792000"
  },
  {
    "text": "and so therefore in cumulative it and",
    "start": "792000",
    "end": "795079"
  },
  {
    "text": "its children are using eight units in",
    "start": "795079",
    "end": "797920"
  },
  {
    "text": "this case this is important because",
    "start": "797920",
    "end": "800920"
  },
  {
    "text": "there are basically only two ways to",
    "start": "800920",
    "end": "803920"
  },
  {
    "text": "optimize code you don't do something or",
    "start": "803920",
    "end": "807320"
  },
  {
    "text": "you do something in batches and and so",
    "start": "807320",
    "end": "810399"
  },
  {
    "text": "um what that would mean is if we saw",
    "start": "810399",
    "end": "813320"
  },
  {
    "text": "this kind of situation in real life the",
    "start": "813320",
    "end": "815760"
  },
  {
    "text": "only way that we could really optimize",
    "start": "815760",
    "end": "817720"
  },
  {
    "text": "anything in um in the in these Stacks is",
    "start": "817720",
    "end": "821839"
  },
  {
    "text": "not calling function a or if this is an",
    "start": "821839",
    "end": "824279"
  },
  {
    "text": "interaction that fundamentally needs to",
    "start": "824279",
    "end": "825920"
  },
  {
    "text": "happen in our system right our system is",
    "start": "825920",
    "end": "828160"
  },
  {
    "text": "doing some work that is hopefully useful",
    "start": "828160",
    "end": "830839"
  },
  {
    "text": "um and so if this is something that we",
    "start": "830839",
    "end": "833120"
  },
  {
    "text": "really have to do then the only other",
    "start": "833120",
    "end": "835199"
  },
  {
    "text": "thing that we could possibly do is",
    "start": "835199",
    "end": "837040"
  },
  {
    "text": "either optimize what function B in",
    "start": "837040",
    "end": "839360"
  },
  {
    "text": "particular is doing or not call function",
    "start": "839360",
    "end": "841800"
  },
  {
    "text": "B in the first place as",
    "start": "841800",
    "end": "843720"
  },
  {
    "text": "well so yeah hopefully that clarifies",
    "start": "843720",
    "end": "846519"
  },
  {
    "text": "you know cumulative versus self um and",
    "start": "846519",
    "end": "849480"
  },
  {
    "text": "flat values um we've actually been",
    "start": "849480",
    "end": "853680"
  },
  {
    "text": "calling this um visualization flame",
    "start": "853680",
    "end": "856959"
  },
  {
    "text": "graphs but actually the creator of that",
    "start": "856959",
    "end": "859240"
  },
  {
    "text": "visualization originally called this",
    "start": "859240",
    "end": "861759"
  },
  {
    "text": "flame graphs where the bottom of the",
    "start": "861759",
    "end": "863880"
  },
  {
    "text": "deack is truly at the bottom and um what",
    "start": "863880",
    "end": "867160"
  },
  {
    "text": "we've been looking at so far and",
    "start": "867160",
    "end": "868600"
  },
  {
    "text": "basically every every P visualization",
    "start": "868600",
    "end": "871759"
  },
  {
    "text": "that you see uh being called FL graphs",
    "start": "871759",
    "end": "874560"
  },
  {
    "text": "is actually what brandan Greg calls an",
    "start": "874560",
    "end": "876839"
  },
  {
    "text": "icle graph so where the root is at the",
    "start": "876839",
    "end": "879160"
  },
  {
    "text": "top and we're building it downwards um",
    "start": "879160",
    "end": "881720"
  },
  {
    "text": "typically you'll see icicle graphs",
    "start": "881720",
    "end": "884360"
  },
  {
    "text": "because they're just easier uh for",
    "start": "884360",
    "end": "886839"
  },
  {
    "text": "humans to parse and to visualize because",
    "start": "886839",
    "end": "889480"
  },
  {
    "text": "if you need to know what the kind of",
    "start": "889480",
    "end": "891279"
  },
  {
    "text": "height of your visualization is going to",
    "start": "891279",
    "end": "893000"
  },
  {
    "text": "be that's just kind of a pain uh to",
    "start": "893000",
    "end": "895600"
  },
  {
    "text": "implement in a",
    "start": "895600",
    "end": "897880"
  },
  {
    "text": "UI and again performance engineering is",
    "start": "897880",
    "end": "900519"
  },
  {
    "text": "not actually um all that hard there's no",
    "start": "900519",
    "end": "903360"
  },
  {
    "text": "no magic to it you need need to measure",
    "start": "903360",
    "end": "906560"
  },
  {
    "text": "and then you need to optimize and like I",
    "start": "906560",
    "end": "908440"
  },
  {
    "text": "said really the only two things that you",
    "start": "908440",
    "end": "910120"
  },
  {
    "text": "can do to optimize is not do something",
    "start": "910120",
    "end": "912279"
  },
  {
    "text": "or do something in batches because CPUs",
    "start": "912279",
    "end": "914399"
  },
  {
    "text": "are better at that um and so really all",
    "start": "914399",
    "end": "918880"
  },
  {
    "text": "we need to do is we need to measure uh",
    "start": "918880",
    "end": "921399"
  },
  {
    "text": "to see where we need to look I happen to",
    "start": "921399",
    "end": "924000"
  },
  {
    "text": "work on an open source project called",
    "start": "924000",
    "end": "925800"
  },
  {
    "text": "parka um and this this project is also",
    "start": "925800",
    "end": "930160"
  },
  {
    "text": "um uh otel Native we actually also have",
    "start": "930160",
    "end": "932880"
  },
  {
    "text": "our own protocol and we're kind of",
    "start": "932880",
    "end": "934040"
  },
  {
    "text": "trying to reconcile that with the with",
    "start": "934040",
    "end": "935880"
  },
  {
    "text": "the working group um to figure out you",
    "start": "935880",
    "end": "939120"
  },
  {
    "text": "know what about our protocol is useful",
    "start": "939120",
    "end": "940959"
  },
  {
    "text": "so that we can influence um what that",
    "start": "940959",
    "end": "943800"
  },
  {
    "text": "what that may look like in um open open",
    "start": "943800",
    "end": "946920"
  },
  {
    "text": "Telemetry vaguely speaking this this",
    "start": "946920",
    "end": "949319"
  },
  {
    "text": "talk is not about parka but just for uh",
    "start": "949319",
    "end": "951800"
  },
  {
    "text": "kind of an understanding because I'm",
    "start": "951800",
    "end": "953160"
  },
  {
    "text": "going to do a demo in a second as well",
    "start": "953160",
    "end": "955759"
  },
  {
    "text": "um it consists of two components the",
    "start": "955759",
    "end": "958360"
  },
  {
    "text": "server component component so the thing",
    "start": "958360",
    "end": "959839"
  },
  {
    "text": "that stores it um and allows you to",
    "start": "959839",
    "end": "962600"
  },
  {
    "text": "query and visualize this data and then",
    "start": "962600",
    "end": "964720"
  },
  {
    "text": "we have an ebpf based agent uh that is",
    "start": "964720",
    "end": "967160"
  },
  {
    "text": "actually now also based on the um open",
    "start": "967160",
    "end": "970120"
  },
  {
    "text": "Telemetry ebpf agent it used to be two",
    "start": "970120",
    "end": "972680"
  },
  {
    "text": "completely separate uh code bases but um",
    "start": "972680",
    "end": "975720"
  },
  {
    "text": "essentially we were doing exactly the",
    "start": "975720",
    "end": "977240"
  },
  {
    "text": "same things um as two Apache two",
    "start": "977240",
    "end": "979880"
  },
  {
    "text": "licensed uh open source projects and so",
    "start": "979880",
    "end": "982360"
  },
  {
    "text": "we all kind of decided uh to to join",
    "start": "982360",
    "end": "985440"
  },
  {
    "text": "forces on most things we actually do",
    "start": "985440",
    "end": "987240"
  },
  {
    "text": "still have our separate agent",
    "start": "987240",
    "end": "989480"
  },
  {
    "text": "that just like I said implements our",
    "start": "989480",
    "end": "991160"
  },
  {
    "text": "wire protocol and stuff like that but",
    "start": "991160",
    "end": "993240"
  },
  {
    "text": "it's kind of Getting Thinner and thinner",
    "start": "993240",
    "end": "994880"
  },
  {
    "text": "as a wrapper around the ebpf uh open to",
    "start": "994880",
    "end": "997639"
  },
  {
    "text": "themetry open evf profiler So",
    "start": "997639",
    "end": "1000600"
  },
  {
    "text": "architecturally speaking the way you",
    "start": "1000600",
    "end": "1002040"
  },
  {
    "text": "would typically deploy this is you have",
    "start": "1002040",
    "end": "1004079"
  },
  {
    "text": "the server as kind of a central",
    "start": "1004079",
    "end": "1005720"
  },
  {
    "text": "component and then you deploy the agent",
    "start": "1005720",
    "end": "1008160"
  },
  {
    "text": "on all of the hosts that you want to",
    "start": "1008160",
    "end": "1010079"
  },
  {
    "text": "profile and that's really it thanks to",
    "start": "1010079",
    "end": "1012000"
  },
  {
    "text": "the kind of magic of ebpf you don't need",
    "start": "1012000",
    "end": "1014160"
  },
  {
    "text": "to instrument your code no sdks no",
    "start": "1014160",
    "end": "1016639"
  },
  {
    "text": "nothing everything kind of happens um",
    "start": "1016639",
    "end": "1019240"
  },
  {
    "text": "automatically um and you know takes like",
    "start": "1019240",
    "end": "1021720"
  },
  {
    "text": "5 minutes to set up so he'll he will",
    "start": "1021720",
    "end": "1024880"
  },
  {
    "text": "start a super quick",
    "start": "1024880",
    "end": "1028558"
  },
  {
    "text": "demo of Parker so this is what it would",
    "start": "1028559",
    "end": "1033079"
  },
  {
    "text": "look like if the de demo Gods",
    "start": "1033079",
    "end": "1036798"
  },
  {
    "text": "allow yeah so here um at the at the top",
    "start": "1036799",
    "end": "1040438"
  },
  {
    "text": "what we see is just a metric graph uh",
    "start": "1040439",
    "end": "1042558"
  },
  {
    "text": "we're essentially synthesizing uh",
    "start": "1042559",
    "end": "1044880"
  },
  {
    "text": "metrics from the profiling data so what",
    "start": "1044880",
    "end": "1047600"
  },
  {
    "text": "we're seeing is essentially if we were",
    "start": "1047600",
    "end": "1049480"
  },
  {
    "text": "to look at Prometheus just the CPU um",
    "start": "1049480",
    "end": "1052400"
  },
  {
    "text": "total total graph but much more",
    "start": "1052400",
    "end": "1054600"
  },
  {
    "text": "important um we can see the uh icycle",
    "start": "1054600",
    "end": "1058080"
  },
  {
    "text": "graph across the entire infrastructure",
    "start": "1058080",
    "end": "1059880"
  },
  {
    "text": "here and so the reason why this is an",
    "start": "1059880",
    "end": "1062440"
  },
  {
    "text": "interesting thing to look at um we're",
    "start": "1062440",
    "end": "1064679"
  },
  {
    "text": "now looking at all the CPU res resources",
    "start": "1064679",
    "end": "1067080"
  },
  {
    "text": "spent across the entire infrastructure",
    "start": "1067080",
    "end": "1069559"
  },
  {
    "text": "this is a demo instance so primarily",
    "start": "1069559",
    "end": "1071200"
  },
  {
    "text": "it's Park running in here but um the",
    "start": "1071200",
    "end": "1074360"
  },
  {
    "text": "reason why this is useful is if we now",
    "start": "1074360",
    "end": "1076280"
  },
  {
    "text": "optimize something in this icle graph it",
    "start": "1076280",
    "end": "1079000"
  },
  {
    "text": "would actually translate into real cost",
    "start": "1079000",
    "end": "1081120"
  },
  {
    "text": "saving across the entire infrastructure",
    "start": "1081120",
    "end": "1083360"
  },
  {
    "text": "so if cost is something that you're um",
    "start": "1083360",
    "end": "1085919"
  },
  {
    "text": "wanting to optimize for this would be a",
    "start": "1085919",
    "end": "1088159"
  },
  {
    "text": "really interesting query uh to look at",
    "start": "1088159",
    "end": "1090120"
  },
  {
    "text": "or you know it's just the the default",
    "start": "1090120",
    "end": "1092240"
  },
  {
    "text": "query um in Parker you can kind of also",
    "start": "1092240",
    "end": "1096440"
  },
  {
    "text": "filter uh by labels in the same way as",
    "start": "1096440",
    "end": "1098480"
  },
  {
    "text": "you're probably familiar with uh",
    "start": "1098480",
    "end": "1101320"
  },
  {
    "text": "Prometheus um we also have some kind of",
    "start": "1101320",
    "end": "1104480"
  },
  {
    "text": "cool um visualizations um you know not",
    "start": "1104480",
    "end": "1107480"
  },
  {
    "text": "just the um",
    "start": "1107480",
    "end": "1109440"
  },
  {
    "text": "flame graph itself but also various",
    "start": "1109440",
    "end": "1112799"
  },
  {
    "text": "other ones but I just wanted to give a",
    "start": "1112799",
    "end": "1114799"
  },
  {
    "text": "super super quick demo I'm going to dive",
    "start": "1114799",
    "end": "1116760"
  },
  {
    "text": "into some concrete examples of where",
    "start": "1116760",
    "end": "1118840"
  },
  {
    "text": "profiling uh was used or could be used",
    "start": "1118840",
    "end": "1121880"
  },
  {
    "text": "uh to to",
    "start": "1121880",
    "end": "1123760"
  },
  {
    "text": "optimize so that was the super quick",
    "start": "1123760",
    "end": "1125880"
  },
  {
    "text": "demo um of Parker so now we're going to",
    "start": "1125880",
    "end": "1128120"
  },
  {
    "text": "look at a couple of examples where",
    "start": "1128120",
    "end": "1130320"
  },
  {
    "text": "either we've already used um profiling",
    "start": "1130320",
    "end": "1132679"
  },
  {
    "text": "to optimize open source uh code or you",
    "start": "1132679",
    "end": "1136200"
  },
  {
    "text": "know just theoretically examples of the",
    "start": "1136200",
    "end": "1138520"
  },
  {
    "text": "way of queries that may be useful for",
    "start": "1138520",
    "end": "1141080"
  },
  {
    "text": "you to run um across your infrastructure",
    "start": "1141080",
    "end": "1143400"
  },
  {
    "text": "to optimize uh certain situations so one",
    "start": "1143400",
    "end": "1147120"
  },
  {
    "text": "really cool example um is we actually",
    "start": "1147120",
    "end": "1151200"
  },
  {
    "text": "run this uh YouTube live stream although",
    "start": "1151200",
    "end": "1154559"
  },
  {
    "text": "we haven't been doing it in a for a",
    "start": "1154559",
    "end": "1156080"
  },
  {
    "text": "while now but we have about 30 episodes",
    "start": "1156080",
    "end": "1158200"
  },
  {
    "text": "where we took um random open source uh",
    "start": "1158200",
    "end": "1161480"
  },
  {
    "text": "software um that ideally we run",
    "start": "1161480",
    "end": "1163720"
  },
  {
    "text": "ourselves in our production",
    "start": "1163720",
    "end": "1164840"
  },
  {
    "text": "infrastructure so it's not synthetic but",
    "start": "1164840",
    "end": "1167120"
  },
  {
    "text": "actually real usage um and one example",
    "start": "1167120",
    "end": "1170240"
  },
  {
    "text": "that we looked at was uh container",
    "start": "1170240",
    "end": "1172559"
  },
  {
    "text": "D and um here I'm going to pull up some",
    "start": "1172559",
    "end": "1175240"
  },
  {
    "text": "profiling data um from uh container D",
    "start": "1175240",
    "end": "1179640"
  },
  {
    "text": "let's make this a little bit",
    "start": "1179640",
    "end": "1182799"
  },
  {
    "text": "bigger and um basically like I said the",
    "start": "1184320",
    "end": "1188080"
  },
  {
    "text": "way we look at this data is we kind of",
    "start": "1188080",
    "end": "1190760"
  },
  {
    "text": "recursively look at what are the largest",
    "start": "1190760",
    "end": "1193240"
  },
  {
    "text": "frames right so um basically what we",
    "start": "1193240",
    "end": "1195880"
  },
  {
    "text": "want to start with is obviously runtime",
    "start": "1195880",
    "end": "1198480"
  },
  {
    "text": "go exits that's basically the main",
    "start": "1198480",
    "end": "1200440"
  },
  {
    "text": "function in in the go uh go runtime um",
    "start": "1200440",
    "end": "1205280"
  },
  {
    "text": "that's not something we can optimize",
    "start": "1205280",
    "end": "1206679"
  },
  {
    "text": "right like that's just the main function",
    "start": "1206679",
    "end": "1209000"
  },
  {
    "text": "um it doesn't really do anything useful",
    "start": "1209000",
    "end": "1210520"
  },
  {
    "text": "in our system and so the first the next",
    "start": "1210520",
    "end": "1212720"
  },
  {
    "text": "biggest frame that we're going to look",
    "start": "1212720",
    "end": "1214120"
  },
  {
    "text": "at is this one um it's doing something",
    "start": "1214120",
    "end": "1217760"
  },
  {
    "text": "something stats collection in uh",
    "start": "1217760",
    "end": "1220120"
  },
  {
    "text": "container d right this is definitely",
    "start": "1220120",
    "end": "1222080"
  },
  {
    "text": "useful it needs to do this um so there's",
    "start": "1222080",
    "end": "1224840"
  },
  {
    "text": "no really no way around this however",
    "start": "1224840",
    "end": "1227280"
  },
  {
    "text": "could we optimize uh particular pieces",
    "start": "1227280",
    "end": "1230600"
  },
  {
    "text": "um of this and basically here well",
    "start": "1230600",
    "end": "1234360"
  },
  {
    "text": "zooming in makes it a bit flickery um we",
    "start": "1234360",
    "end": "1237520"
  },
  {
    "text": "quickly realized that this read you in",
    "start": "1237520",
    "end": "1240039"
  },
  {
    "text": "function um is something that is used",
    "start": "1240039",
    "end": "1242280"
  },
  {
    "text": "all over this um code base um and",
    "start": "1242280",
    "end": "1246640"
  },
  {
    "text": "something quickly uh jumped uh into our",
    "start": "1246640",
    "end": "1249360"
  },
  {
    "text": "our eye basically this all uses this",
    "start": "1249360",
    "end": "1251760"
  },
  {
    "text": "read file function um in the go runtime",
    "start": "1251760",
    "end": "1255320"
  },
  {
    "text": "and just to for the s for the sake of uh",
    "start": "1255320",
    "end": "1258600"
  },
  {
    "text": "saving some time I already have this",
    "start": "1258600",
    "end": "1259960"
  },
  {
    "text": "open over here um and the reason why",
    "start": "1259960",
    "end": "1263080"
  },
  {
    "text": "read file may not always be the best",
    "start": "1263080",
    "end": "1265520"
  },
  {
    "text": "thing to use um especially for this case",
    "start": "1265520",
    "end": "1268760"
  },
  {
    "text": "that container D does all the time which",
    "start": "1268760",
    "end": "1270440"
  },
  {
    "text": "is it reads things in the proc file",
    "start": "1270440",
    "end": "1272720"
  },
  {
    "text": "which tend to be you know 20 characters",
    "start": "1272720",
    "end": "1274880"
  },
  {
    "text": "or less files um and so the read file",
    "start": "1274880",
    "end": "1279159"
  },
  {
    "text": "function is actually not optimized for",
    "start": "1279159",
    "end": "1281159"
  },
  {
    "text": "cases like this at all it first figures",
    "start": "1281159",
    "end": "1284000"
  },
  {
    "text": "out what is uh the total size of this",
    "start": "1284000",
    "end": "1286400"
  },
  {
    "text": "fun of this file we already know this",
    "start": "1286400",
    "end": "1288760"
  },
  {
    "text": "ahead of time in container D so this is",
    "start": "1288760",
    "end": "1291200"
  },
  {
    "text": "actually work that is completely",
    "start": "1291200",
    "end": "1292600"
  },
  {
    "text": "unnecessary to do even more importantly",
    "start": "1292600",
    "end": "1295880"
  },
  {
    "text": "it then goes ahead and um allocat some",
    "start": "1295880",
    "end": "1299520"
  },
  {
    "text": "allocate some memory and memory",
    "start": "1299520",
    "end": "1301000"
  },
  {
    "text": "allocations are notoriously um CPU um",
    "start": "1301000",
    "end": "1305559"
  },
  {
    "text": "CPU heavy and more even worse we don't",
    "start": "1305559",
    "end": "1309120"
  },
  {
    "text": "actually know the size of this",
    "start": "1309120",
    "end": "1310880"
  },
  {
    "text": "allocation ahead of time and so",
    "start": "1310880",
    "end": "1312919"
  },
  {
    "text": "therefore the memory allocation actually",
    "start": "1312919",
    "end": "1315080"
  },
  {
    "text": "has to happen on the Heap and not on the",
    "start": "1315080",
    "end": "1317360"
  },
  {
    "text": "stack and so this is what makes the read",
    "start": "1317360",
    "end": "1319960"
  },
  {
    "text": "file function um very good and very",
    "start": "1319960",
    "end": "1323080"
  },
  {
    "text": "general purpose right so definitely",
    "start": "1323080",
    "end": "1325320"
  },
  {
    "text": "always start with this however if your",
    "start": "1325320",
    "end": "1327400"
  },
  {
    "text": "profiling data says that these functions",
    "start": "1327400",
    "end": "1330600"
  },
  {
    "text": "um are taking a lot of time and you know",
    "start": "1330600",
    "end": "1332559"
  },
  {
    "text": "exactly what you're going to be reading",
    "start": "1332559",
    "end": "1334120"
  },
  {
    "text": "you're almost certainly going to be able",
    "start": "1334120",
    "end": "1335400"
  },
  {
    "text": "to write a way more optimized uh version",
    "start": "1335400",
    "end": "1338039"
  },
  {
    "text": "of this okay I have three minutes so",
    "start": "1338039",
    "end": "1340240"
  },
  {
    "text": "going to try to run through the other",
    "start": "1340240",
    "end": "1342760"
  },
  {
    "text": "examples bottom line is um we I'm going",
    "start": "1342760",
    "end": "1346240"
  },
  {
    "text": "to skip over how we optimize this",
    "start": "1346240",
    "end": "1349120"
  },
  {
    "text": "but bottom line is this basically",
    "start": "1349120",
    "end": "1351159"
  },
  {
    "text": "improved container D for all install",
    "start": "1351159",
    "end": "1353640"
  },
  {
    "text": "installations on the planet this this is",
    "start": "1353640",
    "end": "1355600"
  },
  {
    "text": "a workload that runs probably millions",
    "start": "1355600",
    "end": "1358120"
  },
  {
    "text": "of times right um this one very tiny",
    "start": "1358120",
    "end": "1360960"
  },
  {
    "text": "code change improved it by almost 5% um",
    "start": "1360960",
    "end": "1364679"
  },
  {
    "text": "and so if we keep doing this we can",
    "start": "1364679",
    "end": "1366840"
  },
  {
    "text": "definitely squeeze out way more out of",
    "start": "1366840",
    "end": "1369520"
  },
  {
    "text": "our existing Hardware I'm going to um",
    "start": "1369520",
    "end": "1372919"
  },
  {
    "text": "just very very quickly go over this um",
    "start": "1372919",
    "end": "1375480"
  },
  {
    "text": "rust example because I want to show that",
    "start": "1375480",
    "end": "1377159"
  },
  {
    "text": "this doesn't only work uh for",
    "start": "1377159",
    "end": "1380640"
  },
  {
    "text": "go um another super cool uh feature that",
    "start": "1380640",
    "end": "1384640"
  },
  {
    "text": "all of this has is this uh function",
    "start": "1384640",
    "end": "1388039"
  },
  {
    "text": "caller and col um view so I'm I just",
    "start": "1388039",
    "end": "1391679"
  },
  {
    "text": "double clicked real quick on um malog so",
    "start": "1391679",
    "end": "1395120"
  },
  {
    "text": "you know the thing that in lip c um",
    "start": "1395120",
    "end": "1398039"
  },
  {
    "text": "allocates memory and so now we can view",
    "start": "1398039",
    "end": "1401320"
  },
  {
    "text": "all the functions that are calling um",
    "start": "1401320",
    "end": "1405240"
  },
  {
    "text": "Malo across the entire infrastructure so",
    "start": "1405240",
    "end": "1407400"
  },
  {
    "text": "now we can figure out where are all the",
    "start": "1407400",
    "end": "1409039"
  },
  {
    "text": "expensive allocations happening",
    "start": "1409039",
    "end": "1410720"
  },
  {
    "text": "throughout the entire infrastructure and",
    "start": "1410720",
    "end": "1412400"
  },
  {
    "text": "start to optimize",
    "start": "1412400",
    "end": "1414320"
  },
  {
    "text": "those um so just wanted to show this",
    "start": "1414320",
    "end": "1416679"
  },
  {
    "text": "kind of stuff works for rust workloads",
    "start": "1416679",
    "end": "1419200"
  },
  {
    "text": "as well um now something that we",
    "start": "1419200",
    "end": "1421679"
  },
  {
    "text": "actually do at polar signals all the",
    "start": "1421679",
    "end": "1423320"
  },
  {
    "text": "time we happen to have actually built a",
    "start": "1423320",
    "end": "1425960"
  },
  {
    "text": "uh custom column our database to back um",
    "start": "1425960",
    "end": "1429240"
  },
  {
    "text": "our product and so we optimize specific",
    "start": "1429240",
    "end": "1432000"
  },
  {
    "text": "interactions in our system all the time",
    "start": "1432000",
    "end": "1433799"
  },
  {
    "text": "in particular queries we want queries to",
    "start": "1433799",
    "end": "1436320"
  },
  {
    "text": "our system to be ex extremely fast right",
    "start": "1436320",
    "end": "1439840"
  },
  {
    "text": "and so I'm just going to go into our",
    "start": "1439840",
    "end": "1441880"
  },
  {
    "text": "system here real quick and what we can",
    "start": "1441880",
    "end": "1444200"
  },
  {
    "text": "do is we can just say I want to filter",
    "start": "1444200",
    "end": "1446760"
  },
  {
    "text": "all the data down to only the stacks",
    "start": "1446760",
    "end": "1451320"
  },
  {
    "text": "that contain the query path right so now",
    "start": "1451320",
    "end": "1454640"
  },
  {
    "text": "this entire journey of finding the right",
    "start": "1454640",
    "end": "1457400"
  },
  {
    "text": "uh profiling data completely completely",
    "start": "1457400",
    "end": "1459840"
  },
  {
    "text": "goes away so all we need to do uh",
    "start": "1459840",
    "end": "1462480"
  },
  {
    "text": "whenever we want to optimize queries is",
    "start": "1462480",
    "end": "1464320"
  },
  {
    "text": "okay say Okay I want to see all the",
    "start": "1464320",
    "end": "1466279"
  },
  {
    "text": "profiling data across the last week",
    "start": "1466279",
    "end": "1468360"
  },
  {
    "text": "filter it down to everything in the",
    "start": "1468360",
    "end": "1470200"
  },
  {
    "text": "query path and boom I can immediately",
    "start": "1470200",
    "end": "1471960"
  },
  {
    "text": "start optimizing my code uh based on",
    "start": "1471960",
    "end": "1474559"
  },
  {
    "text": "real usage",
    "start": "1474559",
    "end": "1476320"
  },
  {
    "text": "data all right unfortunately for the",
    "start": "1476320",
    "end": "1478880"
  },
  {
    "text": "last demo I won't have um enough time",
    "start": "1478880",
    "end": "1481159"
  },
  {
    "text": "because I'm almost out of time however",
    "start": "1481159",
    "end": "1483279"
  },
  {
    "text": "um we also have a really cool um",
    "start": "1483279",
    "end": "1485960"
  },
  {
    "text": "integration for um distributed tracing",
    "start": "1485960",
    "end": "1488679"
  },
  {
    "text": "where we can attach the distributed",
    "start": "1488679",
    "end": "1490399"
  },
  {
    "text": "tracing ID to",
    "start": "1490399",
    "end": "1492720"
  },
  {
    "text": "the",
    "start": "1492720",
    "end": "1494279"
  },
  {
    "text": "um stack tray and so therefore we can",
    "start": "1494279",
    "end": "1497679"
  },
  {
    "text": "basically pull all the CPU time that is",
    "start": "1497679",
    "end": "1501600"
  },
  {
    "text": "um spent across an entire uh request",
    "start": "1501600",
    "end": "1504320"
  },
  {
    "text": "right even as as it hops through",
    "start": "1504320",
    "end": "1505720"
  },
  {
    "text": "multiple Network Services this is",
    "start": "1505720",
    "end": "1507720"
  },
  {
    "text": "actually Something That We're actively",
    "start": "1507720",
    "end": "1508960"
  },
  {
    "text": "trying to contribute to the um ebpf um",
    "start": "1508960",
    "end": "1512919"
  },
  {
    "text": "profiler because basically we needed to",
    "start": "1512919",
    "end": "1515120"
  },
  {
    "text": "figure out a way how a process can",
    "start": "1515120",
    "end": "1517799"
  },
  {
    "text": "communicate this to",
    "start": "1517799",
    "end": "1519360"
  },
  {
    "text": "ebpf um so yeah um this stuff yields",
    "start": "1519360",
    "end": "1523120"
  },
  {
    "text": "huge um improvements time and time again",
    "start": "1523120",
    "end": "1525600"
  },
  {
    "text": "and so now you have the tools that it",
    "start": "1525600",
    "end": "1527880"
  },
  {
    "text": "needs that you need for uh Moors law to",
    "start": "1527880",
    "end": "1530600"
  },
  {
    "text": "to continue so long live Moors law um if",
    "start": "1530600",
    "end": "1533760"
  },
  {
    "text": "you're interested in this type of thing",
    "start": "1533760",
    "end": "1534960"
  },
  {
    "text": "we have a booth um at P10 uh so please",
    "start": "1534960",
    "end": "1537640"
  },
  {
    "text": "come and visit us thank you",
    "start": "1537640",
    "end": "1541640"
  }
]