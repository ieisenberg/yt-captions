[
  {
    "start": "0",
    "end": "58000"
  },
  {
    "text": "hey everyone thanks for joining us",
    "start": "2159",
    "end": "4400"
  },
  {
    "text": "today i'd like to talk about uh how we",
    "start": "4400",
    "end": "6720"
  },
  {
    "text": "scale prometheus",
    "start": "6720",
    "end": "8080"
  },
  {
    "text": "using cortex a cncf project",
    "start": "8080",
    "end": "11519"
  },
  {
    "text": "designed around really building kind of",
    "start": "11519",
    "end": "13280"
  },
  {
    "text": "a clustered version of prometheus",
    "start": "13280",
    "end": "15679"
  },
  {
    "text": "hopefully going to take about 20 minutes",
    "start": "15679",
    "end": "17119"
  },
  {
    "text": "your time leaves lots of time at the end",
    "start": "17119",
    "end": "19039"
  },
  {
    "text": "for q",
    "start": "19039",
    "end": "19520"
  },
  {
    "text": "a",
    "start": "19520",
    "end": "21680"
  },
  {
    "text": "i'm joined today by by ken ken was one",
    "start": "24160",
    "end": "27359"
  },
  {
    "text": "of the first people i guess other than",
    "start": "27359",
    "end": "29039"
  },
  {
    "text": "myself to uh to start running cortex",
    "start": "29039",
    "end": "31760"
  },
  {
    "text": "over at ea",
    "start": "31760",
    "end": "32719"
  },
  {
    "text": "uh three years ago ken is now at",
    "start": "32719",
    "end": "34880"
  },
  {
    "text": "microsoft where he's a principal",
    "start": "34880",
    "end": "36320"
  },
  {
    "text": "software engineer",
    "start": "36320",
    "end": "37360"
  },
  {
    "text": "and he's also he was one of the first",
    "start": "37360",
    "end": "39360"
  },
  {
    "text": "cortex maintainers as well",
    "start": "39360",
    "end": "41680"
  },
  {
    "text": "myself i'm the vp product at grafana",
    "start": "41680",
    "end": "43600"
  },
  {
    "text": "labs i'm a prometheus maintainer one of",
    "start": "43600",
    "end": "46160"
  },
  {
    "text": "the original authors of cortex i also",
    "start": "46160",
    "end": "48239"
  },
  {
    "text": "started a project",
    "start": "48239",
    "end": "49600"
  },
  {
    "text": "called loki which is our horizontally",
    "start": "49600",
    "end": "51840"
  },
  {
    "text": "scalable",
    "start": "51840",
    "end": "53120"
  },
  {
    "text": "kind of prometheus inspired log",
    "start": "53120",
    "end": "54879"
  },
  {
    "text": "aggregation system",
    "start": "54879",
    "end": "58399"
  },
  {
    "start": "58000",
    "end": "494000"
  },
  {
    "text": "so today we're really we're really gonna",
    "start": "58399",
    "end": "60719"
  },
  {
    "text": "treat this super",
    "start": "60719",
    "end": "61680"
  },
  {
    "text": "super simple um why cortex",
    "start": "61680",
    "end": "65040"
  },
  {
    "text": "why should you care what does it do how",
    "start": "65040",
    "end": "67439"
  },
  {
    "text": "does it help you",
    "start": "67439",
    "end": "68640"
  },
  {
    "text": "when is it appropriate um we're gonna",
    "start": "68640",
    "end": "70960"
  },
  {
    "text": "have a bit of a demo",
    "start": "70960",
    "end": "72400"
  },
  {
    "text": "um and then leave plenty of time for a q",
    "start": "72400",
    "end": "74240"
  },
  {
    "text": "a",
    "start": "74240",
    "end": "76400"
  },
  {
    "text": "so this is this is my mental model for",
    "start": "77840",
    "end": "80640"
  },
  {
    "text": "for how people get started with",
    "start": "80640",
    "end": "82000"
  },
  {
    "text": "prometheus this is how i got",
    "start": "82000",
    "end": "83360"
  },
  {
    "text": "started with prometheus i really",
    "start": "83360",
    "end": "86479"
  },
  {
    "text": "love the prometheus system and this talk",
    "start": "86479",
    "end": "88560"
  },
  {
    "text": "is not going to be",
    "start": "88560",
    "end": "89680"
  },
  {
    "text": "about bashing prometheus the things i",
    "start": "89680",
    "end": "93040"
  },
  {
    "text": "love about prometheus are that this pool",
    "start": "93040",
    "end": "95040"
  },
  {
    "text": "based monitoring system",
    "start": "95040",
    "end": "96560"
  },
  {
    "text": "that uses kind of dynamic service",
    "start": "96560",
    "end": "98479"
  },
  {
    "text": "discovery to",
    "start": "98479",
    "end": "99680"
  },
  {
    "text": "to find your jobs i really love this",
    "start": "99680",
    "end": "101840"
  },
  {
    "text": "because",
    "start": "101840",
    "end": "102880"
  },
  {
    "text": "it just kind of works for me you know",
    "start": "102880",
    "end": "104720"
  },
  {
    "text": "especially if you're running your jobs",
    "start": "104720",
    "end": "105759"
  },
  {
    "text": "in a kubernetes cluster",
    "start": "105759",
    "end": "107280"
  },
  {
    "text": "it just finds them it scrapes them it",
    "start": "107280",
    "end": "109119"
  },
  {
    "text": "gives you that kind of monitoring",
    "start": "109119",
    "end": "110399"
  },
  {
    "text": "experience you really",
    "start": "110399",
    "end": "111360"
  },
  {
    "text": "you really want it's got this incredibly",
    "start": "111360",
    "end": "114079"
  },
  {
    "text": "powerful query language",
    "start": "114079",
    "end": "115520"
  },
  {
    "text": "and multi-dimensional data model which",
    "start": "115520",
    "end": "118079"
  },
  {
    "text": "makes it so easy to do kind of ad hoc",
    "start": "118079",
    "end": "119759"
  },
  {
    "text": "analysis and",
    "start": "119759",
    "end": "120960"
  },
  {
    "text": "and compare application level metrics",
    "start": "120960",
    "end": "122880"
  },
  {
    "text": "and and system level metrics together in",
    "start": "122880",
    "end": "124560"
  },
  {
    "text": "one query",
    "start": "124560",
    "end": "125920"
  },
  {
    "text": "it also allows you to do some kind of",
    "start": "125920",
    "end": "127520"
  },
  {
    "text": "really powerful stuff in alerting like",
    "start": "127520",
    "end": "129280"
  },
  {
    "text": "error budget and slo style alerting and",
    "start": "129280",
    "end": "131840"
  },
  {
    "text": "finally it's open source",
    "start": "131840",
    "end": "133360"
  },
  {
    "text": "it's incredibly resource efficient and",
    "start": "133360",
    "end": "135200"
  },
  {
    "text": "it's really easy to operate",
    "start": "135200",
    "end": "136800"
  },
  {
    "text": "so in general prometheus is more than",
    "start": "136800",
    "end": "139599"
  },
  {
    "text": "enough for most people",
    "start": "139599",
    "end": "141440"
  },
  {
    "text": "um in this kind of model you know if i'm",
    "start": "141440",
    "end": "144160"
  },
  {
    "text": "running",
    "start": "144160",
    "end": "144560"
  },
  {
    "text": "all my jobs in a single cluster i can i",
    "start": "144560",
    "end": "146720"
  },
  {
    "text": "can deploy a prometheus and a grafana",
    "start": "146720",
    "end": "148560"
  },
  {
    "text": "and",
    "start": "148560",
    "end": "148879"
  },
  {
    "text": "and really start collecting metrics and",
    "start": "148879",
    "end": "150879"
  },
  {
    "text": "building dashboards in",
    "start": "150879",
    "end": "152400"
  },
  {
    "text": "in you know within the hour",
    "start": "152400",
    "end": "155599"
  },
  {
    "text": "and this works really really well",
    "start": "155599",
    "end": "159120"
  },
  {
    "text": "you know talking about dashboards um you",
    "start": "159120",
    "end": "160959"
  },
  {
    "text": "know grafana another great open source",
    "start": "160959",
    "end": "162959"
  },
  {
    "text": "piece of software um you know really",
    "start": "162959",
    "end": "165599"
  },
  {
    "text": "easy to draw to build dashboards using",
    "start": "165599",
    "end": "167599"
  },
  {
    "text": "prometheus",
    "start": "167599",
    "end": "168480"
  },
  {
    "text": "and this is one of the uh one of the",
    "start": "168480",
    "end": "170560"
  },
  {
    "text": "dashboards we have internally for one of",
    "start": "170560",
    "end": "172160"
  },
  {
    "text": "our our demos",
    "start": "172160",
    "end": "174239"
  },
  {
    "text": "the challenges with prometheus and this",
    "start": "174239",
    "end": "176879"
  },
  {
    "text": "model",
    "start": "176879",
    "end": "177680"
  },
  {
    "text": "really come when you start deploying",
    "start": "177680",
    "end": "179200"
  },
  {
    "text": "your software in multiple",
    "start": "179200",
    "end": "180800"
  },
  {
    "text": "disparate clusters you know especially",
    "start": "180800",
    "end": "183920"
  },
  {
    "text": "if these clusters are disconnected",
    "start": "183920",
    "end": "186000"
  },
  {
    "text": "this pull-based model that prometheus",
    "start": "186000",
    "end": "187680"
  },
  {
    "text": "has really encourages you to deploy",
    "start": "187680",
    "end": "190159"
  },
  {
    "text": "the prometheus server co-located with",
    "start": "190159",
    "end": "192959"
  },
  {
    "text": "your jobs like next to your jobs in the",
    "start": "192959",
    "end": "194640"
  },
  {
    "text": "same cluster",
    "start": "194640",
    "end": "196000"
  },
  {
    "text": "and so what we typically see is when",
    "start": "196000",
    "end": "197840"
  },
  {
    "text": "people start to",
    "start": "197840",
    "end": "199200"
  },
  {
    "text": "service customers in europe and and in",
    "start": "199200",
    "end": "201760"
  },
  {
    "text": "asia",
    "start": "201760",
    "end": "202319"
  },
  {
    "text": "they'll deploy their application in a in",
    "start": "202319",
    "end": "204159"
  },
  {
    "text": "a region there and and deploy some",
    "start": "204159",
    "end": "205840"
  },
  {
    "text": "prometheus with it",
    "start": "205840",
    "end": "207360"
  },
  {
    "text": "and at this point right you've got your",
    "start": "207360",
    "end": "208560"
  },
  {
    "text": "grafana pointing at one of them how do i",
    "start": "208560",
    "end": "210239"
  },
  {
    "text": "start",
    "start": "210239",
    "end": "211120"
  },
  {
    "text": "you know how do i start monitoring my",
    "start": "211120",
    "end": "212799"
  },
  {
    "text": "other my other regions",
    "start": "212799",
    "end": "214720"
  },
  {
    "text": "a lot of people will just deploy",
    "start": "214720",
    "end": "215840"
  },
  {
    "text": "multiple grafanas one of the things you",
    "start": "215840",
    "end": "217920"
  },
  {
    "text": "can do",
    "start": "217920",
    "end": "219120"
  },
  {
    "text": "i'm sure most people are familiar you",
    "start": "219120",
    "end": "220480"
  },
  {
    "text": "can actually use grafana",
    "start": "220480",
    "end": "222159"
  },
  {
    "text": "with multiple data sources and what's",
    "start": "222159",
    "end": "224720"
  },
  {
    "text": "even cooler is you can",
    "start": "224720",
    "end": "226159"
  },
  {
    "text": "sub out um the data source you can",
    "start": "226159",
    "end": "228560"
  },
  {
    "text": "template out the data source",
    "start": "228560",
    "end": "230000"
  },
  {
    "text": "in your dashboard to allow you to switch",
    "start": "230000",
    "end": "232239"
  },
  {
    "text": "between different regions",
    "start": "232239",
    "end": "234799"
  },
  {
    "text": "so this is this is kind of you know",
    "start": "234799",
    "end": "237040"
  },
  {
    "text": "pretty mature already",
    "start": "237040",
    "end": "238400"
  },
  {
    "text": "and pretty usable you can easily drill",
    "start": "238400",
    "end": "240879"
  },
  {
    "text": "down into metrics in a single region you",
    "start": "240879",
    "end": "242640"
  },
  {
    "text": "can",
    "start": "242640",
    "end": "243280"
  },
  {
    "text": "you can figure out what's going on and",
    "start": "243280",
    "end": "244959"
  },
  {
    "text": "in a recent grafana release you can even",
    "start": "244959",
    "end": "246879"
  },
  {
    "text": "start combining metrics from multiple",
    "start": "246879",
    "end": "248480"
  },
  {
    "text": "regions",
    "start": "248480",
    "end": "250879"
  },
  {
    "text": "the challenge here comes when i want to",
    "start": "250959",
    "end": "253360"
  },
  {
    "text": "look at my",
    "start": "253360",
    "end": "254000"
  },
  {
    "text": "global metrics in a single query let's",
    "start": "254000",
    "end": "257120"
  },
  {
    "text": "say i want to look at",
    "start": "257120",
    "end": "259120"
  },
  {
    "text": "my global cpu usage you know maybe i'm",
    "start": "259120",
    "end": "261759"
  },
  {
    "text": "doing some capacity planning and i'm",
    "start": "261759",
    "end": "263120"
  },
  {
    "text": "deciding where i should deploy more",
    "start": "263120",
    "end": "265040"
  },
  {
    "text": "more resources it's hard to do if i have",
    "start": "265040",
    "end": "267919"
  },
  {
    "text": "to connect to three different prometheus",
    "start": "267919",
    "end": "269280"
  },
  {
    "text": "servers to",
    "start": "269280",
    "end": "270160"
  },
  {
    "text": "to do that but all is not lost",
    "start": "270160",
    "end": "273919"
  },
  {
    "text": "and this can actually be achieved you",
    "start": "273919",
    "end": "275280"
  },
  {
    "text": "can actually achieve a solution to this",
    "start": "275280",
    "end": "276479"
  },
  {
    "text": "without cortex",
    "start": "276479",
    "end": "278080"
  },
  {
    "text": "and so i'd be remiss if i didn't mention",
    "start": "278080",
    "end": "279759"
  },
  {
    "text": "federation federation is prometheus's",
    "start": "279759",
    "end": "282400"
  },
  {
    "text": "answer",
    "start": "282400",
    "end": "283280"
  },
  {
    "text": "to how to build kind of global",
    "start": "283280",
    "end": "285120"
  },
  {
    "text": "observability",
    "start": "285120",
    "end": "286880"
  },
  {
    "text": "you deploy effectively another",
    "start": "286880",
    "end": "288320"
  },
  {
    "text": "prometheus server on top of your",
    "start": "288320",
    "end": "290080"
  },
  {
    "text": "existing ones",
    "start": "290080",
    "end": "291280"
  },
  {
    "text": "that prometheus server goes out and",
    "start": "291280",
    "end": "292960"
  },
  {
    "text": "scrapes the the edge",
    "start": "292960",
    "end": "294560"
  },
  {
    "text": "prometheus servers and you know gives",
    "start": "294560",
    "end": "297600"
  },
  {
    "text": "you that central place with all that",
    "start": "297600",
    "end": "298960"
  },
  {
    "text": "data",
    "start": "298960",
    "end": "300320"
  },
  {
    "text": "there's a few challenges here and this",
    "start": "300320",
    "end": "301759"
  },
  {
    "text": "is really where we set out to kind of",
    "start": "301759",
    "end": "304000"
  },
  {
    "text": "help with cortex the challenge here for",
    "start": "304000",
    "end": "306639"
  },
  {
    "text": "one",
    "start": "306639",
    "end": "307039"
  },
  {
    "text": "is your your global prometheus server",
    "start": "307039",
    "end": "309039"
  },
  {
    "text": "has to be able to connect to and scrape",
    "start": "309039",
    "end": "311840"
  },
  {
    "text": "metrics from your edge prometheus",
    "start": "311840",
    "end": "313600"
  },
  {
    "text": "servers and this means if you don't have",
    "start": "313600",
    "end": "315919"
  },
  {
    "text": "like a fully connected kind of",
    "start": "315919",
    "end": "317680"
  },
  {
    "text": "set of vpn tunnels you probably need",
    "start": "317680",
    "end": "320000"
  },
  {
    "text": "some way of exposing these prometheus",
    "start": "320000",
    "end": "321600"
  },
  {
    "text": "servers to the internet",
    "start": "321600",
    "end": "322800"
  },
  {
    "text": "you probably need some way of securing",
    "start": "322800",
    "end": "324400"
  },
  {
    "text": "them and controlling who can access them",
    "start": "324400",
    "end": "327600"
  },
  {
    "text": "opening up firewall ports things like",
    "start": "327600",
    "end": "329120"
  },
  {
    "text": "that",
    "start": "329120",
    "end": "330800"
  },
  {
    "text": "the other challenge here is you can very",
    "start": "330800",
    "end": "332240"
  },
  {
    "text": "quickly overwhelm that single global",
    "start": "332240",
    "end": "334160"
  },
  {
    "text": "prometheus",
    "start": "334160",
    "end": "335120"
  },
  {
    "text": "server as you start to scale up the",
    "start": "335120",
    "end": "337280"
  },
  {
    "text": "number of metrics in it",
    "start": "337280",
    "end": "338960"
  },
  {
    "text": "um prometheus is a very vertically",
    "start": "338960",
    "end": "340960"
  },
  {
    "text": "scalable piece of software",
    "start": "340960",
    "end": "342400"
  },
  {
    "text": "and you can just take a bigger box and",
    "start": "342400",
    "end": "344320"
  },
  {
    "text": "and run it on on machines and recently",
    "start": "344320",
    "end": "346000"
  },
  {
    "text": "we saw someone",
    "start": "346000",
    "end": "346960"
  },
  {
    "text": "running prometheus with like a terabyte",
    "start": "346960",
    "end": "348720"
  },
  {
    "text": "of ram which uh",
    "start": "348720",
    "end": "350000"
  },
  {
    "text": "which was pretty impressive um but",
    "start": "350000",
    "end": "352960"
  },
  {
    "text": "that's not the kind of model we're used",
    "start": "352960",
    "end": "354639"
  },
  {
    "text": "to in",
    "start": "354639",
    "end": "355120"
  },
  {
    "text": "in the cloud native world and i'm we're",
    "start": "355120",
    "end": "356639"
  },
  {
    "text": "really looking for something that's more",
    "start": "356639",
    "end": "357759"
  },
  {
    "text": "horizontally scalable there",
    "start": "357759",
    "end": "360160"
  },
  {
    "text": "so the solution we recommend in the",
    "start": "360160",
    "end": "361600"
  },
  {
    "text": "prometheus space is that actually you",
    "start": "361600",
    "end": "363520"
  },
  {
    "text": "don't propagate the raw samples",
    "start": "363520",
    "end": "366080"
  },
  {
    "text": "to the central global federation server",
    "start": "366080",
    "end": "368319"
  },
  {
    "text": "but you only",
    "start": "368319",
    "end": "369199"
  },
  {
    "text": "propagate pre-aggregated data so you can",
    "start": "369199",
    "end": "371759"
  },
  {
    "text": "imagine",
    "start": "371759",
    "end": "372720"
  },
  {
    "text": "you know at each at each edge",
    "start": "372720",
    "end": "376240"
  },
  {
    "text": "node you might have metrics per pod but",
    "start": "376240",
    "end": "379360"
  },
  {
    "text": "then you might only propagate metrics",
    "start": "379360",
    "end": "381280"
  },
  {
    "text": "per service",
    "start": "381280",
    "end": "382479"
  },
  {
    "text": "you know for per deployment per stateful",
    "start": "382479",
    "end": "384400"
  },
  {
    "text": "set to the federated server",
    "start": "384400",
    "end": "386319"
  },
  {
    "text": "and this is one way of kind of",
    "start": "386319",
    "end": "387520"
  },
  {
    "text": "controlling the cardinality in that in",
    "start": "387520",
    "end": "389280"
  },
  {
    "text": "that federated server",
    "start": "389280",
    "end": "391440"
  },
  {
    "text": "this works really well and there's a lot",
    "start": "391440",
    "end": "393199"
  },
  {
    "text": "of kind of best practices around how to",
    "start": "393199",
    "end": "394880"
  },
  {
    "text": "manage the recording rules you need",
    "start": "394880",
    "end": "396880"
  },
  {
    "text": "how to make sure that only the right",
    "start": "396880",
    "end": "398720"
  },
  {
    "text": "metrics get propagated",
    "start": "398720",
    "end": "400160"
  },
  {
    "text": "but at the end of the day it's overhead",
    "start": "400160",
    "end": "401759"
  },
  {
    "text": "that you need to manage",
    "start": "401759",
    "end": "403759"
  },
  {
    "text": "you'll also find not having the raw data",
    "start": "403759",
    "end": "406960"
  },
  {
    "text": "available in a central location",
    "start": "406960",
    "end": "408880"
  },
  {
    "text": "means you have to be careful about how",
    "start": "408880",
    "end": "410240"
  },
  {
    "text": "you construct your queries and it's not",
    "start": "410240",
    "end": "412160"
  },
  {
    "text": "necessarily the case that the same query",
    "start": "412160",
    "end": "413919"
  },
  {
    "text": "will work",
    "start": "413919",
    "end": "414400"
  },
  {
    "text": "locally in an edge as it would work",
    "start": "414400",
    "end": "416479"
  },
  {
    "text": "globally in the central federation",
    "start": "416479",
    "end": "418080"
  },
  {
    "text": "server",
    "start": "418080",
    "end": "420319"
  },
  {
    "text": "all in this is quite a powerful",
    "start": "420319",
    "end": "422400"
  },
  {
    "text": "technique",
    "start": "422400",
    "end": "423520"
  },
  {
    "text": "and it's very simple and reliable but it",
    "start": "423520",
    "end": "426400"
  },
  {
    "text": "can be",
    "start": "426400",
    "end": "427120"
  },
  {
    "text": "uh it can be quite tricky to master so",
    "start": "427120",
    "end": "430160"
  },
  {
    "text": "this is really where cortex comes in",
    "start": "430160",
    "end": "432319"
  },
  {
    "text": "you can deploy instead of a global",
    "start": "432319",
    "end": "434800"
  },
  {
    "text": "federation server",
    "start": "434800",
    "end": "436080"
  },
  {
    "text": "you can deploy a central cortex cluster",
    "start": "436080",
    "end": "439120"
  },
  {
    "text": "and as cortex is horizontally scalable",
    "start": "439120",
    "end": "441599"
  },
  {
    "text": "you can scale that cluster up",
    "start": "441599",
    "end": "443759"
  },
  {
    "text": "to take all your raw metrics having",
    "start": "443759",
    "end": "446400"
  },
  {
    "text": "basically",
    "start": "446400",
    "end": "447440"
  },
  {
    "text": "the union of all the metrics in all the",
    "start": "447440",
    "end": "449599"
  },
  {
    "text": "edge prometheuses",
    "start": "449599",
    "end": "450880"
  },
  {
    "text": "all in a single place cortex itself is",
    "start": "450880",
    "end": "453759"
  },
  {
    "text": "also highly available through",
    "start": "453759",
    "end": "454960"
  },
  {
    "text": "replication",
    "start": "454960",
    "end": "456560"
  },
  {
    "text": "and we've basically gone to a lot of",
    "start": "456560",
    "end": "458240"
  },
  {
    "text": "effort to accelerate queries and to",
    "start": "458240",
    "end": "460560"
  },
  {
    "text": "to make this system functional for this",
    "start": "460560",
    "end": "462400"
  },
  {
    "text": "use case",
    "start": "462400",
    "end": "465199"
  },
  {
    "text": "the the horizontal scalability in the",
    "start": "465199",
    "end": "467199"
  },
  {
    "text": "cortex cluster also allows you to grow",
    "start": "467199",
    "end": "468800"
  },
  {
    "text": "and shrink the cluster as you add or",
    "start": "468800",
    "end": "470479"
  },
  {
    "text": "remove edge locations",
    "start": "470479",
    "end": "473520"
  },
  {
    "text": "and generally it's it's really designed",
    "start": "473520",
    "end": "475360"
  },
  {
    "text": "for that kind of global visibility into",
    "start": "475360",
    "end": "477360"
  },
  {
    "text": "your metrics",
    "start": "477360",
    "end": "478479"
  },
  {
    "text": "so once you've got something like this",
    "start": "478479",
    "end": "480240"
  },
  {
    "text": "in grafana you can start doing queries",
    "start": "480240",
    "end": "482080"
  },
  {
    "text": "like",
    "start": "482080",
    "end": "482639"
  },
  {
    "text": "some by cluster and see which clusters",
    "start": "482639",
    "end": "485440"
  },
  {
    "text": "using the most",
    "start": "485440",
    "end": "486240"
  },
  {
    "text": "cpu this is actually a query of the 15",
    "start": "486240",
    "end": "489680"
  },
  {
    "text": "or so clusters we've got at grafana labs",
    "start": "489680",
    "end": "493840"
  },
  {
    "start": "494000",
    "end": "662000"
  },
  {
    "text": "so a bit more about cortex the",
    "start": "494879",
    "end": "496479"
  },
  {
    "text": "horizontally scalable prometheus",
    "start": "496479",
    "end": "498080"
  },
  {
    "text": "implementation",
    "start": "498080",
    "end": "499360"
  },
  {
    "text": "cortex is a time series database like",
    "start": "499360",
    "end": "501599"
  },
  {
    "text": "prometheus it actually uses the same",
    "start": "501599",
    "end": "503280"
  },
  {
    "text": "time series database as prometheus",
    "start": "503280",
    "end": "506479"
  },
  {
    "text": "we add a lot of distributed systems glue",
    "start": "506479",
    "end": "509199"
  },
  {
    "text": "to make that database horizontally",
    "start": "509199",
    "end": "510879"
  },
  {
    "text": "scalable",
    "start": "510879",
    "end": "512000"
  },
  {
    "text": "the other big difference with cortex is",
    "start": "512000",
    "end": "513518"
  },
  {
    "text": "it's push based so you don't have to",
    "start": "513519",
    "end": "515518"
  },
  {
    "text": "open up",
    "start": "515519",
    "end": "516080"
  },
  {
    "text": "firewall ports and worry about securing",
    "start": "516080",
    "end": "518320"
  },
  {
    "text": "every single one of your edge locations",
    "start": "518320",
    "end": "520479"
  },
  {
    "text": "you just have to worry about securing",
    "start": "520479",
    "end": "522080"
  },
  {
    "text": "the cortex cluster and you can have",
    "start": "522080",
    "end": "523760"
  },
  {
    "text": "prometheus",
    "start": "523760",
    "end": "525120"
  },
  {
    "text": "natively push its metrics using its",
    "start": "525120",
    "end": "527040"
  },
  {
    "text": "remote right system",
    "start": "527040",
    "end": "528959"
  },
  {
    "text": "directly to cortex",
    "start": "528959",
    "end": "532160"
  },
  {
    "text": "alongside the the glue we've put in for",
    "start": "532160",
    "end": "534000"
  },
  {
    "text": "horizontal scalability we use something",
    "start": "534000",
    "end": "535519"
  },
  {
    "text": "called a distributed hash table",
    "start": "535519",
    "end": "537279"
  },
  {
    "text": "um we've also added replication um this",
    "start": "537279",
    "end": "540160"
  },
  {
    "text": "allows cortex to",
    "start": "540160",
    "end": "542399"
  },
  {
    "text": "tolerate failures in the nodes without",
    "start": "542399",
    "end": "544560"
  },
  {
    "text": "ending up in gaps in your graphs",
    "start": "544560",
    "end": "546480"
  },
  {
    "text": "this also means it's super easy to kind",
    "start": "546480",
    "end": "550080"
  },
  {
    "text": "of do a rolling upgrade with zero",
    "start": "550080",
    "end": "551600"
  },
  {
    "text": "downtime in a cortex cluster",
    "start": "551600",
    "end": "554000"
  },
  {
    "text": "and then once you've got all your data",
    "start": "554000",
    "end": "555360"
  },
  {
    "text": "in one location it's pretty uh it's",
    "start": "555360",
    "end": "557360"
  },
  {
    "text": "pretty obvious you're going to want to",
    "start": "557360",
    "end": "558320"
  },
  {
    "text": "store it and you're going to want to",
    "start": "558320",
    "end": "559120"
  },
  {
    "text": "store it for a long time",
    "start": "559120",
    "end": "560640"
  },
  {
    "text": "cortex is uh offloads a lot of the",
    "start": "560640",
    "end": "563839"
  },
  {
    "text": "long-term storage aspects to object",
    "start": "563839",
    "end": "565760"
  },
  {
    "text": "stores and so really you connect it to",
    "start": "565760",
    "end": "567760"
  },
  {
    "text": "an s3 bucket and it will go and put the",
    "start": "567760",
    "end": "569760"
  },
  {
    "text": "blocks of data",
    "start": "569760",
    "end": "571120"
  },
  {
    "text": "in there for long-term storage",
    "start": "571120",
    "end": "573440"
  },
  {
    "text": "prometheus itself is totally",
    "start": "573440",
    "end": "575279"
  },
  {
    "text": "totally useful for long-term storage and",
    "start": "575279",
    "end": "577279"
  },
  {
    "text": "and you know as long as you've got a big",
    "start": "577279",
    "end": "578399"
  },
  {
    "text": "enough disc and you take regular backups",
    "start": "578399",
    "end": "580399"
  },
  {
    "text": "you can store data for years in in",
    "start": "580399",
    "end": "582160"
  },
  {
    "text": "prometheus but in cortex we care about a",
    "start": "582160",
    "end": "584880"
  },
  {
    "text": "lot about durability",
    "start": "584880",
    "end": "586080"
  },
  {
    "text": "we care a lot about replication we care",
    "start": "586080",
    "end": "588000"
  },
  {
    "text": "a lot about making sure that",
    "start": "588000",
    "end": "589760"
  },
  {
    "text": "if a machine fails there's backups and",
    "start": "589760",
    "end": "592399"
  },
  {
    "text": "replica of that data for you",
    "start": "592399",
    "end": "594959"
  },
  {
    "text": "and the final thing that really sets",
    "start": "594959",
    "end": "596399"
  },
  {
    "text": "cortex apart is its support for",
    "start": "596399",
    "end": "598160"
  },
  {
    "text": "multi-tenancy",
    "start": "598160",
    "end": "599600"
  },
  {
    "text": "inside a single cortex cluster multiple",
    "start": "599600",
    "end": "602800"
  },
  {
    "text": "different users can be isolated from",
    "start": "602800",
    "end": "605200"
  },
  {
    "text": "each other with their own data sets that",
    "start": "605200",
    "end": "606880"
  },
  {
    "text": "only they have access to",
    "start": "606880",
    "end": "608640"
  },
  {
    "text": "and we go to a lot of lengths to make",
    "start": "608640",
    "end": "610240"
  },
  {
    "text": "sure that not only is the data isolated",
    "start": "610240",
    "end": "613120"
  },
  {
    "text": "but also from a performance perspective",
    "start": "613120",
    "end": "615680"
  },
  {
    "text": "one user can't run big queries and",
    "start": "615680",
    "end": "618079"
  },
  {
    "text": "can't kind of start sucking up all the",
    "start": "618079",
    "end": "619760"
  },
  {
    "text": "resources of a single cluster",
    "start": "619760",
    "end": "621279"
  },
  {
    "text": "there's a lot of kind of sophisticated",
    "start": "621279",
    "end": "623120"
  },
  {
    "text": "quality",
    "start": "623120",
    "end": "624320"
  },
  {
    "text": "sorry about that there's a lot of",
    "start": "624320",
    "end": "625839"
  },
  {
    "text": "sophisticated quality of service",
    "start": "625839",
    "end": "627680"
  },
  {
    "text": "a lot of sophisticated kind of limit and",
    "start": "627680",
    "end": "629920"
  },
  {
    "text": "quota management all baked into cortex",
    "start": "629920",
    "end": "632000"
  },
  {
    "text": "so that if you're a central",
    "start": "632000",
    "end": "634800"
  },
  {
    "text": "observability team within a large",
    "start": "634800",
    "end": "636640"
  },
  {
    "text": "organization",
    "start": "636640",
    "end": "637760"
  },
  {
    "text": "you can have different teams within your",
    "start": "637760",
    "end": "640640"
  },
  {
    "text": "company",
    "start": "640640",
    "end": "641200"
  },
  {
    "text": "share the same cortex cluster and as we",
    "start": "641200",
    "end": "644399"
  },
  {
    "text": "said",
    "start": "644399",
    "end": "645040"
  },
  {
    "text": "this is no longer a sandbot project",
    "start": "645040",
    "end": "646720"
  },
  {
    "text": "instead in fact i have to update this",
    "start": "646720",
    "end": "648240"
  },
  {
    "text": "slide",
    "start": "648240",
    "end": "648959"
  },
  {
    "text": "cortex is now a cncf incubation project",
    "start": "648959",
    "end": "651440"
  },
  {
    "text": "it's apache licensed",
    "start": "651440",
    "end": "652640"
  },
  {
    "text": "it's open source it's got a vibrant",
    "start": "652640",
    "end": "654800"
  },
  {
    "text": "maintainer community",
    "start": "654800",
    "end": "656079"
  },
  {
    "text": "and really i would encourage you at this",
    "start": "656079",
    "end": "658480"
  },
  {
    "text": "stage to to go and get involved",
    "start": "658480",
    "end": "660000"
  },
  {
    "text": "and try it out",
    "start": "660000",
    "end": "662640"
  },
  {
    "start": "662000",
    "end": "853000"
  },
  {
    "text": "a bit of history um i started the cortex",
    "start": "663200",
    "end": "666000"
  },
  {
    "text": "project with a chat called julius who",
    "start": "666000",
    "end": "667680"
  },
  {
    "text": "who started the prometheus project uh we",
    "start": "667680",
    "end": "669839"
  },
  {
    "text": "started it almost four years ago",
    "start": "669839",
    "end": "671360"
  },
  {
    "text": "now over four years ago now wow we",
    "start": "671360",
    "end": "673760"
  },
  {
    "text": "initially used dynamodb for a lot of the",
    "start": "673760",
    "end": "675600"
  },
  {
    "text": "storage requirements",
    "start": "675600",
    "end": "677279"
  },
  {
    "text": "um after that i added support for google",
    "start": "677279",
    "end": "679120"
  },
  {
    "text": "bigtable",
    "start": "679120",
    "end": "680320"
  },
  {
    "text": "and that was about when ken started",
    "start": "680320",
    "end": "681760"
  },
  {
    "text": "using cortex at ea i understand those",
    "start": "681760",
    "end": "683600"
  },
  {
    "text": "still on dynamodb",
    "start": "683600",
    "end": "686000"
  },
  {
    "text": "shortly after that we added support for",
    "start": "686000",
    "end": "687680"
  },
  {
    "text": "cassandra and really had the ability now",
    "start": "687680",
    "end": "689760"
  },
  {
    "text": "to start running cortex on premise and",
    "start": "689760",
    "end": "691440"
  },
  {
    "text": "out of the clouds",
    "start": "691440",
    "end": "693279"
  },
  {
    "text": "um and really one of the things i'm very",
    "start": "693279",
    "end": "695040"
  },
  {
    "text": "proud of with cortex is",
    "start": "695040",
    "end": "696399"
  },
  {
    "text": "i i feel like we got the right path the",
    "start": "696399",
    "end": "698800"
  },
  {
    "text": "the the scalability of the right path in",
    "start": "698800",
    "end": "700640"
  },
  {
    "text": "cortex we got it we got it",
    "start": "700640",
    "end": "702079"
  },
  {
    "text": "pretty good pretty quickly and this",
    "start": "702079",
    "end": "703920"
  },
  {
    "text": "allowed us to move on and start focusing",
    "start": "703920",
    "end": "706000"
  },
  {
    "text": "on query performance",
    "start": "706000",
    "end": "707600"
  },
  {
    "text": "so we put a lot of time and effort into",
    "start": "707600",
    "end": "710240"
  },
  {
    "text": "parallelizing",
    "start": "710240",
    "end": "711360"
  },
  {
    "text": "sharding and and generally finding ways",
    "start": "711360",
    "end": "714079"
  },
  {
    "text": "to horizontally scale",
    "start": "714079",
    "end": "715440"
  },
  {
    "text": "queries and i i feel like we i've given",
    "start": "715440",
    "end": "717920"
  },
  {
    "text": "talks at kubecon before about the",
    "start": "717920",
    "end": "719200"
  },
  {
    "text": "techniques we've used",
    "start": "719200",
    "end": "720320"
  },
  {
    "text": "i'd really encourage you to go and look",
    "start": "720320",
    "end": "721360"
  },
  {
    "text": "at those and i feel like one of the",
    "start": "721360",
    "end": "722959"
  },
  {
    "text": "things that really sets cortex apart",
    "start": "722959",
    "end": "725200"
  },
  {
    "text": "is the focus for the past two or three",
    "start": "725200",
    "end": "726800"
  },
  {
    "text": "years we've had on query performance",
    "start": "726800",
    "end": "728880"
  },
  {
    "text": "and on caching and on parallelization",
    "start": "728880",
    "end": "731360"
  },
  {
    "text": "and on sharding",
    "start": "731360",
    "end": "733120"
  },
  {
    "text": "we joined the cncf sandbox in 2018.",
    "start": "733120",
    "end": "736959"
  },
  {
    "text": "um we've got more maintainers now a lot",
    "start": "736959",
    "end": "739680"
  },
  {
    "text": "of maintainers at grifan labs gotham",
    "start": "739680",
    "end": "742320"
  },
  {
    "text": "marco peter jacob but also",
    "start": "742320",
    "end": "745680"
  },
  {
    "text": "um ken microsoft chris at splunk",
    "start": "745680",
    "end": "748880"
  },
  {
    "text": "brian at weaveworks",
    "start": "748880",
    "end": "751920"
  },
  {
    "text": "since uh for about a year or so we've",
    "start": "752320",
    "end": "754240"
  },
  {
    "text": "been focused on ease of use and on",
    "start": "754240",
    "end": "755600"
  },
  {
    "text": "community we've put a lot of effort into",
    "start": "755600",
    "end": "758240"
  },
  {
    "text": "making it easy for people to get started",
    "start": "758240",
    "end": "760480"
  },
  {
    "text": "with cortex putting a lot of effort into",
    "start": "760480",
    "end": "762079"
  },
  {
    "text": "a website",
    "start": "762079",
    "end": "762800"
  },
  {
    "text": "into getting started documentation",
    "start": "762800",
    "end": "765920"
  },
  {
    "text": "documenting our configuration file this",
    "start": "765920",
    "end": "767839"
  },
  {
    "text": "kind of thing and",
    "start": "767839",
    "end": "769279"
  },
  {
    "text": "and hopefully now you'll if you follow",
    "start": "769279",
    "end": "771760"
  },
  {
    "text": "our instruction on the website you'll be",
    "start": "771760",
    "end": "773040"
  },
  {
    "text": "able to",
    "start": "773040",
    "end": "773920"
  },
  {
    "text": "use cortex you know in half an hour",
    "start": "773920",
    "end": "777120"
  },
  {
    "text": "we did our first 1-0 release well only",
    "start": "777120",
    "end": "779200"
  },
  {
    "text": "hopefully 1-0 release",
    "start": "779200",
    "end": "780959"
  },
  {
    "text": "earlier this year and that really for me",
    "start": "780959",
    "end": "783279"
  },
  {
    "text": "marks the start of when",
    "start": "783279",
    "end": "784959"
  },
  {
    "text": "i think non-maintainers of cortex can",
    "start": "784959",
    "end": "787680"
  },
  {
    "text": "really start to lean on cortex and anger",
    "start": "787680",
    "end": "790399"
  },
  {
    "text": "we've been seeing a lot of adoption of",
    "start": "790399",
    "end": "791839"
  },
  {
    "text": "cortex over the past year",
    "start": "791839",
    "end": "793680"
  },
  {
    "text": "in some quite large companies and",
    "start": "793680",
    "end": "797200"
  },
  {
    "text": "very recently a month ago we launched",
    "start": "797200",
    "end": "799920"
  },
  {
    "text": "what's called the block space storage",
    "start": "799920",
    "end": "801519"
  },
  {
    "text": "engine",
    "start": "801519",
    "end": "802079"
  },
  {
    "text": "in cortex so this is the same storage",
    "start": "802079",
    "end": "804240"
  },
  {
    "text": "engine that thanos uses",
    "start": "804240",
    "end": "805519"
  },
  {
    "text": "it's the same code marco who did this in",
    "start": "805519",
    "end": "808000"
  },
  {
    "text": "cortex is also a thanos maintainer",
    "start": "808000",
    "end": "810560"
  },
  {
    "text": "and and really marks a lot of",
    "start": "810560",
    "end": "812000"
  },
  {
    "text": "collaboration between the cortex and",
    "start": "812000",
    "end": "813600"
  },
  {
    "text": "thanos",
    "start": "813600",
    "end": "814000"
  },
  {
    "text": "projects they work we work together on",
    "start": "814000",
    "end": "816560"
  },
  {
    "text": "accelerating the performance of the",
    "start": "816560",
    "end": "817920"
  },
  {
    "text": "storage engine on things like caching",
    "start": "817920",
    "end": "819680"
  },
  {
    "text": "and scalability",
    "start": "819680",
    "end": "820959"
  },
  {
    "text": "of the query path for this storage",
    "start": "820959",
    "end": "822480"
  },
  {
    "text": "engine and this really also",
    "start": "822480",
    "end": "824720"
  },
  {
    "text": "really helps cortex because it reduces",
    "start": "824720",
    "end": "826560"
  },
  {
    "text": "the number of dependencies",
    "start": "826560",
    "end": "828000"
  },
  {
    "text": "down to just an object store",
    "start": "828000",
    "end": "831120"
  },
  {
    "text": "this makes it much easier to get started",
    "start": "831120",
    "end": "832720"
  },
  {
    "text": "with cortex and also makes it",
    "start": "832720",
    "end": "834160"
  },
  {
    "text": "significantly more cost effective to run",
    "start": "834160",
    "end": "836320"
  },
  {
    "text": "a very large cortex cluster",
    "start": "836320",
    "end": "838639"
  },
  {
    "text": "the design dock on the right is the",
    "start": "838639",
    "end": "840880"
  },
  {
    "text": "project frankenstein design dock that",
    "start": "840880",
    "end": "842560"
  },
  {
    "text": "julius and i wrote",
    "start": "842560",
    "end": "843760"
  },
  {
    "text": "um a long time ago now four years ago",
    "start": "843760",
    "end": "845839"
  },
  {
    "text": "wow",
    "start": "845839",
    "end": "846800"
  },
  {
    "text": "and yeah originally cortex was called",
    "start": "846800",
    "end": "848480"
  },
  {
    "text": "project frankenstein",
    "start": "848480",
    "end": "849839"
  },
  {
    "text": "um but we've renamed it since then",
    "start": "849839",
    "end": "853279"
  },
  {
    "start": "853000",
    "end": "1168000"
  },
  {
    "text": "so thank you for uh thank you for",
    "start": "853279",
    "end": "854720"
  },
  {
    "text": "listening to me at this point i'm going",
    "start": "854720",
    "end": "856480"
  },
  {
    "text": "to hand over to ken",
    "start": "856480",
    "end": "857600"
  },
  {
    "text": "he's going to show you how how easy it",
    "start": "857600",
    "end": "859360"
  },
  {
    "text": "is to uh to use cortex and",
    "start": "859360",
    "end": "861600"
  },
  {
    "text": "and how it can scale over multiple",
    "start": "861600",
    "end": "863040"
  },
  {
    "text": "clusters over to ken",
    "start": "863040",
    "end": "866079"
  },
  {
    "text": "all right let's jump into a demo what",
    "start": "866079",
    "end": "868240"
  },
  {
    "text": "we're going to show here",
    "start": "868240",
    "end": "869440"
  },
  {
    "text": "over the next few minutes is collecting",
    "start": "869440",
    "end": "871920"
  },
  {
    "text": "metrics from",
    "start": "871920",
    "end": "873279"
  },
  {
    "text": "various prometheus instances and sending",
    "start": "873279",
    "end": "876399"
  },
  {
    "text": "them to a central cortex",
    "start": "876399",
    "end": "877760"
  },
  {
    "text": "installation which when then we can do",
    "start": "877760",
    "end": "879920"
  },
  {
    "text": "global aggregates and reports",
    "start": "879920",
    "end": "882079"
  },
  {
    "text": "uh with via grafana",
    "start": "882079",
    "end": "885360"
  },
  {
    "text": "all right so what we've uh",
    "start": "885360",
    "end": "888560"
  },
  {
    "text": "what i've set up on my local docker is i",
    "start": "888560",
    "end": "891360"
  },
  {
    "text": "have",
    "start": "891360",
    "end": "891920"
  },
  {
    "text": "a three node cortex installation",
    "start": "891920",
    "end": "895199"
  },
  {
    "text": "and an instance of grafana running on a",
    "start": "895199",
    "end": "898800"
  },
  {
    "text": "docker network that's separate from this",
    "start": "898800",
    "end": "901920"
  },
  {
    "text": "prometheus and node exporter instance",
    "start": "901920",
    "end": "904160"
  },
  {
    "text": "they're running on their own",
    "start": "904160",
    "end": "905199"
  },
  {
    "text": "to simulate they're running in a",
    "start": "905199",
    "end": "906560"
  },
  {
    "text": "particular region while your cortex",
    "start": "906560",
    "end": "908880"
  },
  {
    "text": "installation is centrally located",
    "start": "908880",
    "end": "911120"
  },
  {
    "text": "somewhere else",
    "start": "911120",
    "end": "912079"
  },
  {
    "text": "uh not really particularly where just",
    "start": "912079",
    "end": "914399"
  },
  {
    "text": "that the prometheus can send data up to",
    "start": "914399",
    "end": "916399"
  },
  {
    "text": "it",
    "start": "916399",
    "end": "917199"
  },
  {
    "text": "so our cortex uh ring is fully up and",
    "start": "917199",
    "end": "920079"
  },
  {
    "text": "running let's just uh",
    "start": "920079",
    "end": "922720"
  },
  {
    "text": "double check hit refresh a couple times",
    "start": "922720",
    "end": "924399"
  },
  {
    "text": "there so we get recent data so we've got",
    "start": "924399",
    "end": "925920"
  },
  {
    "text": "three nodes",
    "start": "925920",
    "end": "926639"
  },
  {
    "text": "in the in the member list ring and they",
    "start": "926639",
    "end": "929519"
  },
  {
    "text": "are all active",
    "start": "929519",
    "end": "932079"
  },
  {
    "text": "and have their tokens registered",
    "start": "932079",
    "end": "935279"
  },
  {
    "text": "so this is also fully redundant for",
    "start": "935279",
    "end": "937680"
  },
  {
    "text": "fault tolerance",
    "start": "937680",
    "end": "938959"
  },
  {
    "text": "so any one of these notes can go down",
    "start": "938959",
    "end": "940480"
  },
  {
    "text": "and we can keep",
    "start": "940480",
    "end": "942639"
  },
  {
    "text": "processing data and querying data so",
    "start": "942639",
    "end": "944720"
  },
  {
    "text": "back to console",
    "start": "944720",
    "end": "947839"
  },
  {
    "text": "so prometheus is sending data",
    "start": "949839",
    "end": "953440"
  },
  {
    "text": "and we're going to add",
    "start": "953440",
    "end": "957120"
  },
  {
    "text": "uh two more regions here uh",
    "start": "957120",
    "end": "960320"
  },
  {
    "text": "to the mix so we're going to create a",
    "start": "960320",
    "end": "963199"
  },
  {
    "text": "region two",
    "start": "963199",
    "end": "966000"
  },
  {
    "text": "and add its prometheus and",
    "start": "966240",
    "end": "970880"
  },
  {
    "text": "node exporter so there's number two",
    "start": "974000",
    "end": "978480"
  },
  {
    "text": "and we'll get number three going here",
    "start": "979440",
    "end": "981839"
  },
  {
    "text": "just well",
    "start": "981839",
    "end": "984480"
  },
  {
    "text": "all right so while those are starting up",
    "start": "986240",
    "end": "989199"
  },
  {
    "text": "these",
    "start": "989199",
    "end": "990000"
  },
  {
    "text": "uh prometheus configurations are not uh",
    "start": "990000",
    "end": "994880"
  },
  {
    "text": "complex in any means uh this is pretty",
    "start": "994880",
    "end": "997360"
  },
  {
    "text": "much the basic uh",
    "start": "997360",
    "end": "998560"
  },
  {
    "text": "sample prometheus configuration has been",
    "start": "998560",
    "end": "1000560"
  },
  {
    "text": "updated to",
    "start": "1000560",
    "end": "1001600"
  },
  {
    "text": "straight from the node exporter uh",
    "start": "1001600",
    "end": "1003279"
  },
  {
    "text": "source as well the main",
    "start": "1003279",
    "end": "1005360"
  },
  {
    "text": "uh pieces here that are important for",
    "start": "1005360",
    "end": "1007440"
  },
  {
    "text": "the demo is they're all pointing to uh",
    "start": "1007440",
    "end": "1010480"
  },
  {
    "text": "this url to remote write",
    "start": "1010480",
    "end": "1013519"
  },
  {
    "text": "data to so everything they collect",
    "start": "1013519",
    "end": "1014880"
  },
  {
    "text": "they'll push up to that url which is",
    "start": "1014880",
    "end": "1016639"
  },
  {
    "text": "where",
    "start": "1016639",
    "end": "1017120"
  },
  {
    "text": "uh cortex is listing to write the data",
    "start": "1017120",
    "end": "1020399"
  },
  {
    "text": "into its storage",
    "start": "1020399",
    "end": "1022160"
  },
  {
    "text": "uh to differentiate each region uh we're",
    "start": "1022160",
    "end": "1025678"
  },
  {
    "text": "adding",
    "start": "1025679",
    "end": "1026240"
  },
  {
    "text": "a region tag uh to each one so this",
    "start": "1026240",
    "end": "1029839"
  },
  {
    "text": "one's from region one there's one that",
    "start": "1029839",
    "end": "1031280"
  },
  {
    "text": "says region two",
    "start": "1031280",
    "end": "1032079"
  },
  {
    "text": "three and we'll see that on the grafana",
    "start": "1032079",
    "end": "1034160"
  },
  {
    "text": "dashboard here momentarily",
    "start": "1034160",
    "end": "1036558"
  },
  {
    "text": "so if we go back to our or we flip over",
    "start": "1036559",
    "end": "1039199"
  },
  {
    "text": "to grafana here to global overview i",
    "start": "1039199",
    "end": "1041038"
  },
  {
    "text": "created this",
    "start": "1041039",
    "end": "1041678"
  },
  {
    "text": "this demo board uh to just showcase just",
    "start": "1041679",
    "end": "1044400"
  },
  {
    "text": "some",
    "start": "1044400",
    "end": "1044798"
  },
  {
    "text": "some sample metrics that were coming in",
    "start": "1044799",
    "end": "1046640"
  },
  {
    "text": "from the node exporters",
    "start": "1046640",
    "end": "1048480"
  },
  {
    "text": "so uh i've been collecting region one",
    "start": "1048480",
    "end": "1052960"
  },
  {
    "text": "for quite a while and we just extended",
    "start": "1052960",
    "end": "1054799"
  },
  {
    "text": "out to two and three so",
    "start": "1054799",
    "end": "1056720"
  },
  {
    "text": "those lines are just starting to show up",
    "start": "1056720",
    "end": "1058400"
  },
  {
    "text": "now",
    "start": "1058400",
    "end": "1059760"
  },
  {
    "text": "uh so these",
    "start": "1059760",
    "end": "1063120"
  },
  {
    "text": "these uh this is one one query",
    "start": "1063120",
    "end": "1066160"
  },
  {
    "text": "on one data source that's just",
    "start": "1066160",
    "end": "1069840"
  },
  {
    "text": "highlighting that you can now see that",
    "start": "1069840",
    "end": "1072559"
  },
  {
    "text": "there are multiple time series coming in",
    "start": "1072559",
    "end": "1073919"
  },
  {
    "text": "from the different regions you can see",
    "start": "1073919",
    "end": "1075039"
  },
  {
    "text": "all that in one",
    "start": "1075039",
    "end": "1075679"
  },
  {
    "text": "view and in one query so this also means",
    "start": "1075679",
    "end": "1077840"
  },
  {
    "text": "you can do aggregates",
    "start": "1077840",
    "end": "1079039"
  },
  {
    "text": "on this data as well",
    "start": "1079039",
    "end": "1082159"
  },
  {
    "text": "which is what the total is uh the total",
    "start": "1082240",
    "end": "1085280"
  },
  {
    "text": "graph shows as well",
    "start": "1085280",
    "end": "1087760"
  },
  {
    "text": "so if we zoom in on that i mean it's",
    "start": "1087760",
    "end": "1091600"
  },
  {
    "text": "just summing all that data together",
    "start": "1091600",
    "end": "1095200"
  },
  {
    "text": "and",
    "start": "1095200",
    "end": "1097519"
  },
  {
    "text": "also because everything is also being",
    "start": "1098720",
    "end": "1101440"
  },
  {
    "text": "brought in",
    "start": "1101440",
    "end": "1102160"
  },
  {
    "text": "from all all the nodes now as well",
    "start": "1102160",
    "end": "1103919"
  },
  {
    "text": "beyond just this",
    "start": "1103919",
    "end": "1105280"
  },
  {
    "text": "global aggregate we can now take",
    "start": "1105280",
    "end": "1106559"
  },
  {
    "text": "something like the node exporter",
    "start": "1106559",
    "end": "1108480"
  },
  {
    "text": "and we see all the nodes here uh with",
    "start": "1108480",
    "end": "1110960"
  },
  {
    "text": "data",
    "start": "1110960",
    "end": "1112080"
  },
  {
    "text": "so if we click each one of these you'll",
    "start": "1112080",
    "end": "1113600"
  },
  {
    "text": "see node one had a lot of data because",
    "start": "1113600",
    "end": "1115840"
  },
  {
    "text": "it's been recording before i started the",
    "start": "1115840",
    "end": "1117200"
  },
  {
    "text": "demo",
    "start": "1117200",
    "end": "1117919"
  },
  {
    "text": "but node two and three are just being",
    "start": "1117919",
    "end": "1120080"
  },
  {
    "text": "added now",
    "start": "1120080",
    "end": "1121679"
  },
  {
    "text": "so they're just starting to send in data",
    "start": "1121679",
    "end": "1125840"
  },
  {
    "text": "so uh while this was all on my machine",
    "start": "1126880",
    "end": "1129440"
  },
  {
    "text": "uh deployed locally",
    "start": "1129440",
    "end": "1131039"
  },
  {
    "text": "uh using docker networks is simulated it",
    "start": "1131039",
    "end": "1133760"
  },
  {
    "text": "should",
    "start": "1133760",
    "end": "1134160"
  },
  {
    "text": "it should have been a good inspiration",
    "start": "1134160",
    "end": "1136400"
  },
  {
    "text": "of how straightforward it",
    "start": "1136400",
    "end": "1137440"
  },
  {
    "text": "is to take any one of your prometheus",
    "start": "1137440",
    "end": "1140320"
  },
  {
    "text": "installations",
    "start": "1140320",
    "end": "1141120"
  },
  {
    "text": "uh from any of your environments and now",
    "start": "1141120",
    "end": "1143679"
  },
  {
    "text": "point it to a central",
    "start": "1143679",
    "end": "1144720"
  },
  {
    "text": "cortex installation for you just",
    "start": "1144720",
    "end": "1148000"
  },
  {
    "text": "store the data query the data and",
    "start": "1148000",
    "end": "1150320"
  },
  {
    "text": "aggregate it with other installations",
    "start": "1150320",
    "end": "1151919"
  },
  {
    "text": "from a single dashboard",
    "start": "1151919",
    "end": "1153440"
  },
  {
    "text": "thank you thank you ken that was great",
    "start": "1153440",
    "end": "1157840"
  },
  {
    "text": "now we're gonna we're gonna try and take",
    "start": "1157840",
    "end": "1159440"
  },
  {
    "text": "some q a um do bear with us",
    "start": "1159440",
    "end": "1161600"
  },
  {
    "text": "um but but hang around and ask any",
    "start": "1161600",
    "end": "1164480"
  },
  {
    "text": "questions thank you so much for",
    "start": "1164480",
    "end": "1165840"
  },
  {
    "text": "listening",
    "start": "1165840",
    "end": "1167799"
  },
  {
    "text": "bye",
    "start": "1167799",
    "end": "1170799"
  }
]