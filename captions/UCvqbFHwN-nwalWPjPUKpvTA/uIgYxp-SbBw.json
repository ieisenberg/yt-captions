[
  {
    "start": "0",
    "end": "22000"
  },
  {
    "text": "good morning thank you for your interest in the future of envoy based caching i'm todd greer and today i'll be",
    "start": "2080",
    "end": "8240"
  },
  {
    "text": "describing the implementation of envoy's http caching filter but first i've asked my colleague josiah",
    "start": "8240",
    "end": "14160"
  },
  {
    "text": "kill to say why you want caching and how to enable it josiah why does envoy need a caching filter",
    "start": "14160",
    "end": "22400"
  },
  {
    "start": "22000",
    "end": "84000"
  },
  {
    "text": "the architecture that we have in mind when designing the cache filter is one where",
    "start": "23439",
    "end": "28480"
  },
  {
    "text": "on voice serves as an edge proxy we have all of these clients out on the",
    "start": "28480",
    "end": "34079"
  },
  {
    "text": "wide internet connecting to our infrastructure through an envoy which then does back-end service picking and returns the",
    "start": "34079",
    "end": "40480"
  },
  {
    "text": "content from those services back to the clients in order to reduce the load on these",
    "start": "40480",
    "end": "47039"
  },
  {
    "text": "backend services so we can scale them up scale them up more as well as reduce the latency for",
    "start": "47039",
    "end": "53520"
  },
  {
    "text": "retrieving the content in the first place we want to have that envoy cache the content where possible",
    "start": "53520",
    "end": "60879"
  },
  {
    "text": "so whenever the content is cacheable when it comes back through the envoy from a client request we will insert it to the cache uh from",
    "start": "60879",
    "end": "67840"
  },
  {
    "text": "the via the cache filter as well as proxy it back to the client that way subsequent",
    "start": "67840",
    "end": "73680"
  },
  {
    "text": "subsequent requests that come in will go to the cash filter get a cash hit and go straight back out to the client",
    "start": "73680",
    "end": "80640"
  },
  {
    "text": "without incurring the back end service cost this is particularly useful when you",
    "start": "80640",
    "end": "86720"
  },
  {
    "start": "84000",
    "end": "148000"
  },
  {
    "text": "have widely distributed architectures uh where the services could be in different data centers or",
    "start": "86720",
    "end": "92720"
  },
  {
    "text": "different cloud regions or however you might imagine we want the content to be as close",
    "start": "92720",
    "end": "99040"
  },
  {
    "text": "to the requesting client as possible and so we can deploy envoy instances",
    "start": "99040",
    "end": "108240"
  },
  {
    "text": "way out in satellite locations which may or may not have instances of the service that they're asking for deployed there",
    "start": "108240",
    "end": "116399"
  },
  {
    "text": "that envy would then route that traffic to the data center where the services exist um that request would be processed",
    "start": "116399",
    "end": "123759"
  },
  {
    "text": "content would be retrieved sent back through the internal infrastructure",
    "start": "123759",
    "end": "129119"
  },
  {
    "text": "to the envoy where the clients requested it and give the content back at that point the content will get cached locally as close to the clients",
    "start": "129119",
    "end": "136319"
  },
  {
    "text": "as possible making all future requests substantially faster",
    "start": "136319",
    "end": "141840"
  },
  {
    "text": "because we don't have to make these long distance remote service calls",
    "start": "141840",
    "end": "148480"
  },
  {
    "start": "148000",
    "end": "177000"
  },
  {
    "text": "another situation where this might be useful is if you have envoy deployed in a service mesh where envoy is handling the intra",
    "start": "149599",
    "end": "156640"
  },
  {
    "text": "service communication in within your backend infrastructure this isn't the first",
    "start": "156640",
    "end": "162400"
  },
  {
    "text": "architecture that we're considering when designing the cache filter but i can imagine especially with an in-memory cache",
    "start": "162400",
    "end": "167920"
  },
  {
    "text": "um it could be useful to cache the content that one service is requesting from another to reduce",
    "start": "167920",
    "end": "173360"
  },
  {
    "text": "to reduce the traffic passing between the services so how do i use this cache filter now",
    "start": "173360",
    "end": "180159"
  },
  {
    "start": "177000",
    "end": "258000"
  },
  {
    "text": "that that sounds great now we can we can see how it will help uh the simplest way is to take a look at",
    "start": "180159",
    "end": "187120"
  },
  {
    "text": "the cache filter sandbox which exists for cache filter developers to spin up a quick onboard instances that has",
    "start": "187120",
    "end": "194239"
  },
  {
    "text": "a quick on instance that has caching enabled and the config that turns the caching on is",
    "start": "194239",
    "end": "200640"
  },
  {
    "text": "one that adds the cache filter to the http filter chain um at the place",
    "start": "200640",
    "end": "206560"
  },
  {
    "text": "where the cache filter is inserted into the chain the request coming through will",
    "start": "206560",
    "end": "212319"
  },
  {
    "text": "make a look up in the cache and then we'll make a look up to the cache that's",
    "start": "212319",
    "end": "217519"
  },
  {
    "text": "configured here um in the in this case it's configuring the",
    "start": "217519",
    "end": "222640"
  },
  {
    "text": "simple http cache um and retrieve the content from there",
    "start": "222640",
    "end": "228720"
  },
  {
    "text": "anything else that affects the um cache behavior such as what very headers do we",
    "start": "228720",
    "end": "233760"
  },
  {
    "text": "respect um from the back ends of how this content will differ from request to request that also gets",
    "start": "233760",
    "end": "240239"
  },
  {
    "text": "configured in this in this config there's a very likely as feature development",
    "start": "240239",
    "end": "246560"
  },
  {
    "text": "continues we will add a bunch more configuration options to the envoy config",
    "start": "246560",
    "end": "252480"
  },
  {
    "text": "the things noted on this slide don't exist yet but we expect them to in the near future",
    "start": "252480",
    "end": "258079"
  },
  {
    "start": "258000",
    "end": "395000"
  },
  {
    "text": "thank you josiah so how does cash filter work if you're watching this presentation you",
    "start": "261840",
    "end": "268400"
  },
  {
    "text": "probably have some familiarity with how envoy manages his http filters envoy has a chain of filters when a",
    "start": "268400",
    "end": "275120"
  },
  {
    "text": "request comes in filter manager iterates through the chain of requests in order",
    "start": "275120",
    "end": "280400"
  },
  {
    "text": "notifying each one when the response comes back it goes through the chain in the opposite order some filters are only",
    "start": "280400",
    "end": "287040"
  },
  {
    "text": "involved in one direction or the other but catch filter is an inten is an encoder decoder filter so it's",
    "start": "287040",
    "end": "292800"
  },
  {
    "text": "active in both directions now there is no one size fits all to caching http traffic",
    "start": "292800",
    "end": "299840"
  },
  {
    "text": "some deployments are well served by one small in-memory cache while others require the scalability of",
    "start": "299840",
    "end": "306160"
  },
  {
    "text": "a large distributed caching system in order to support that flexibility",
    "start": "306160",
    "end": "311520"
  },
  {
    "text": "cache filter delegates the actual storage of responses to a c plus plugin interface which we call http",
    "start": "311520",
    "end": "318880"
  },
  {
    "text": "cache cache filter handles the intricacies of",
    "start": "318880",
    "end": "323919"
  },
  {
    "text": "http caching semantics things like parsing relevant headers and determining what can and cannot be",
    "start": "323919",
    "end": "329440"
  },
  {
    "text": "cached and it handles implementing envoy interfaces",
    "start": "329440",
    "end": "334560"
  },
  {
    "text": "this allows http cache plugin implementers to focus only on storage or",
    "start": "334560",
    "end": "341759"
  },
  {
    "text": "other value-added responses that their plugin needs to provide",
    "start": "341759",
    "end": "348320"
  },
  {
    "text": "this well this enables the writing of a wide variety of plugins for divergent",
    "start": "348320",
    "end": "354000"
  },
  {
    "text": "needs those plugins can be http aware if needed but they can also be simple",
    "start": "354000",
    "end": "361039"
  },
  {
    "text": "key value stores we have an example simple http filter",
    "start": "361039",
    "end": "366960"
  },
  {
    "text": "or a simple http cache that is in fact just a wrapper around a hash",
    "start": "366960",
    "end": "373360"
  },
  {
    "text": "map when envoy has parsed in http request",
    "start": "373360",
    "end": "378639"
  },
  {
    "text": "setters it calls the decode headers method of each filter when it gets to cache filter if it's a",
    "start": "378639",
    "end": "384160"
  },
  {
    "text": "get request we look in the cache for our matching response if one is found we",
    "start": "384160",
    "end": "389840"
  },
  {
    "text": "interrupt the normal filter iteration and return a response from cache filter",
    "start": "389840",
    "end": "395840"
  },
  {
    "start": "395000",
    "end": "851000"
  },
  {
    "text": "let's take a slightly more detailed look at what this process looks like from the perspective of cache filter",
    "start": "396000",
    "end": "402240"
  },
  {
    "text": "when the filter manager calls decode headers on cache filter we ask we ask http cache for a lookup",
    "start": "402240",
    "end": "409840"
  },
  {
    "text": "context lookup context is one of the interfaces implemented by the plugin provider",
    "start": "409840",
    "end": "416319"
  },
  {
    "text": "along with http cache itself it represents the active lookup operation",
    "start": "416319",
    "end": "422160"
  },
  {
    "text": "we then kick off an asynchronous get headers request to find headers from a cached response",
    "start": "422160",
    "end": "428560"
  },
  {
    "text": "while this while this is happening we return stop all iteration and watermark",
    "start": "428560",
    "end": "433599"
  },
  {
    "text": "which is a status code that tells envoy to pause the current request otherwise it would get sent upstream",
    "start": "433599",
    "end": "440560"
  },
  {
    "text": "while we're busy checking the cache which would cause a problem if we got a hit when the",
    "start": "440560",
    "end": "446800"
  },
  {
    "text": "cache plugin completes the lookup it invokes our callback with the results in",
    "start": "446800",
    "end": "452319"
  },
  {
    "text": "the case of a hit those results will include the cache responses headers which we pass on to filter manager by",
    "start": "452319",
    "end": "458319"
  },
  {
    "text": "calling encode headers this tells envoy to send those response headers to the client",
    "start": "458319",
    "end": "464240"
  },
  {
    "text": "if the results indicate that the cache result that the cached response has a body",
    "start": "464240",
    "end": "469840"
  },
  {
    "text": "we then make one or more asynchronous get body requests to retrieve it calling encode data",
    "start": "469840",
    "end": "476879"
  },
  {
    "text": "to send each chunk of data onto the client at the end of this process the entire",
    "start": "476879",
    "end": "482720"
  },
  {
    "text": "response will have been streamed to the client from the cache now i'd love to go into much more",
    "start": "482720",
    "end": "487840"
  },
  {
    "text": "detail like this but time is short",
    "start": "487840",
    "end": "493599"
  },
  {
    "text": "but of course not every request is a hit in the cache",
    "start": "493599",
    "end": "499360"
  },
  {
    "text": "we certainly intend for most of them to be cash hits but those that aren't uh are referred to as cash misses and of",
    "start": "499360",
    "end": "506400"
  },
  {
    "text": "course this miss can happen because it's literally not in the cache or we could be talking about something",
    "start": "506400",
    "end": "514240"
  },
  {
    "text": "that was found in the cache but is too stale to serve or something like that",
    "start": "514240",
    "end": "519518"
  },
  {
    "text": "for some reason it cannot the entry in the cache can't actually be used in either case uh if we",
    "start": "519519",
    "end": "527040"
  },
  {
    "text": "back up uh to the point where we are getting the response back from the lookup context",
    "start": "527040",
    "end": "532480"
  },
  {
    "text": "uh in in the previous scenario we got uh a result that said this is a",
    "start": "532480",
    "end": "538480"
  },
  {
    "text": "cache hit here are the headers uh in this scenario we get a result that says sorry",
    "start": "538480",
    "end": "544000"
  },
  {
    "text": "this is a miss and uh when that happens but instead of calling encode data and",
    "start": "544000",
    "end": "552000"
  },
  {
    "text": "giving envoy headers to send to the client we simply call continued decoding which",
    "start": "552000",
    "end": "558800"
  },
  {
    "text": "tells envoy hey you know how we had you pause early earlier yeah sorry about that",
    "start": "558800",
    "end": "564399"
  },
  {
    "text": "just you know keep on going nothing to see here",
    "start": "564399",
    "end": "570080"
  },
  {
    "text": "proceed as usual and so of course envoy does it iterates through the remaining filters",
    "start": "570240",
    "end": "576959"
  },
  {
    "text": "and on and on we go now of course if that when that happens that respond that",
    "start": "576959",
    "end": "585200"
  },
  {
    "text": "request will presumably generate a response that comes back into the into the cache filter on the",
    "start": "585200",
    "end": "592080"
  },
  {
    "text": "other direction uh and that'll be as we'll see the headers in the",
    "start": "592080",
    "end": "597360"
  },
  {
    "text": "encode headers call from filter manager",
    "start": "597360",
    "end": "602399"
  },
  {
    "text": "in in code headers of course we've got actually uh quite a bit of logic to do to figure out we've got to",
    "start": "602399",
    "end": "609600"
  },
  {
    "text": "look for you know look at the different rules for whether something is cacheable you know is there an authorization",
    "start": "609600",
    "end": "615680"
  },
  {
    "text": "header is there a cache control header what are the what are the directives",
    "start": "615680",
    "end": "622160"
  },
  {
    "text": "uh all these uh different uh is it a response to conditional headers",
    "start": "622160",
    "end": "627200"
  },
  {
    "text": "all the all these sorts of different things that need to be evaluated we evaluate them and once we've done that",
    "start": "627200",
    "end": "633040"
  },
  {
    "text": "if we determine that in fact this is a cachable response we will of course then cache it",
    "start": "633040",
    "end": "638800"
  },
  {
    "text": "uh so in particular we will uh in a now familiar familiar pattern",
    "start": "638800",
    "end": "645920"
  },
  {
    "text": "ask http cache for an insert context and then we'll use that insert context",
    "start": "645920",
    "end": "653600"
  },
  {
    "text": "to insert headers now we don't really care uh what the results",
    "start": "653600",
    "end": "661600"
  },
  {
    "text": "are in terms of affecting our behavior uh we need to uh probably report some stats",
    "start": "661600",
    "end": "667760"
  },
  {
    "text": "the stats is one of the outstanding items but the we're going to respond the same",
    "start": "667760",
    "end": "673920"
  },
  {
    "text": "we're going to allow the package to pass through the same so we don't actually uh wait for a response to insert",
    "start": "673920",
    "end": "681440"
  },
  {
    "text": "headers we call you and fire and forget keep going when the",
    "start": "681440",
    "end": "688399"
  },
  {
    "text": "when envoy eventually tells us hey here's a body assuming in fact that there is a body in",
    "start": "688399",
    "end": "694800"
  },
  {
    "text": "this response we get told that via the encode body callback from filter manager and",
    "start": "694800",
    "end": "703279"
  },
  {
    "text": "as you'd expect we then turn around and insert that body into the insert context and we fully",
    "start": "703279",
    "end": "709839"
  },
  {
    "text": "expect that it should be able to deal with it and if it can't then that again won't",
    "start": "709839",
    "end": "715600"
  },
  {
    "text": "affect this response because the primary thing that's happening is routing the",
    "start": "715600",
    "end": "721279"
  },
  {
    "text": "response to the client inserting into the cache is a secondary concern an important concern",
    "start": "721279",
    "end": "726399"
  },
  {
    "text": "but secondary nonetheless by the way it is perfectly reasonable for a cash filter",
    "start": "726399",
    "end": "733600"
  },
  {
    "text": "http cash plug-in to arbitrarily refuse to insert some requests",
    "start": "733600",
    "end": "741279"
  },
  {
    "text": "perhaps a server is overloaded or there's some header some non-standard",
    "start": "741279",
    "end": "748320"
  },
  {
    "text": "header that it looks at for whatever reason if it wants to it can simply refuse to insert these",
    "start": "748320",
    "end": "754000"
  },
  {
    "text": "and that is fine uh see the comments on in the insert context class for more",
    "start": "754000",
    "end": "760079"
  },
  {
    "text": "details we are going to be making a few changes there",
    "start": "760079",
    "end": "765200"
  },
  {
    "text": "in the near future to better report statistics so to write a plugin for cache filter",
    "start": "765200",
    "end": "773360"
  },
  {
    "text": "these are the four classes you need to implement http cache along with http cache factory",
    "start": "773360",
    "end": "779680"
  },
  {
    "text": "and the lookup context and insert context which is the analog on the insert side",
    "start": "779680",
    "end": "788879"
  },
  {
    "text": "now i mentioned before that there is no one-size-fits-all approach and one of the consequences of",
    "start": "789279",
    "end": "795920"
  },
  {
    "text": "different approaches is that we can have some caches that are synchronous and return",
    "start": "795920",
    "end": "801360"
  },
  {
    "text": "a response immediately while others might issue an rpc and then come back on",
    "start": "801360",
    "end": "808480"
  },
  {
    "text": "some unpredictable thread the way that cash filter deals with that is",
    "start": "808480",
    "end": "815200"
  },
  {
    "text": "via its callbacks all of the callbacks that it provides are able to be called",
    "start": "815200",
    "end": "821839"
  },
  {
    "text": "on any thread you can call them before you return control back to cash",
    "start": "821839",
    "end": "827279"
  },
  {
    "text": "filter or after it doesn't matter",
    "start": "827279",
    "end": "832160"
  },
  {
    "text": "and cash filter takes care of moving things to the right thread when",
    "start": "832639",
    "end": "838480"
  },
  {
    "text": "it's necessary so you don't need to worry about it now",
    "start": "838480",
    "end": "844399"
  },
  {
    "text": "uh with that i'll hand it back to josiah to talk about the current state of development on this project just saying",
    "start": "844399",
    "end": "852240"
  },
  {
    "start": "851000",
    "end": "895000"
  },
  {
    "text": "so is the cache filter production ready from a cash semantic standpoint like is",
    "start": "852480",
    "end": "859040"
  },
  {
    "text": "the cash filter rfc compliant um in many cases yes for basic cash",
    "start": "859040",
    "end": "864160"
  },
  {
    "text": "requests including cash control and vary and validation",
    "start": "864160",
    "end": "869279"
  },
  {
    "text": "request flows with e-tags and last modified um that's all implemented and ready to go uh some of the more advanced validation",
    "start": "869279",
    "end": "876240"
  },
  {
    "text": "logic like with um if none manage etc like those listed there",
    "start": "876240",
    "end": "881279"
  },
  {
    "text": "that's not yet implemented and we'll actually just skip caching if those are present um and the cache control extensions like",
    "start": "881279",
    "end": "888480"
  },
  {
    "text": "immutable and these others those are also not yet implemented but they're not as commonly used",
    "start": "888480",
    "end": "894880"
  },
  {
    "start": "895000",
    "end": "935000"
  },
  {
    "text": "if you're asking will it work with the cash that i have in my infrastructure today uh the answer is no uh we do not have",
    "start": "896399",
    "end": "904399"
  },
  {
    "text": "any production-ready implementations of http cache the only cache implementation that",
    "start": "904399",
    "end": "909839"
  },
  {
    "text": "exists today is the example one simple http cache and that's really just there so that if",
    "start": "909839",
    "end": "915360"
  },
  {
    "text": "you wanted the envoy cache filter to work with ignite or with memcached or whichever then",
    "start": "915360",
    "end": "924880"
  },
  {
    "text": "you would have to write an implementation of http cache so that the cache filter could use it",
    "start": "924880",
    "end": "930000"
  },
  {
    "text": "and serve content from that remote from that remote cache",
    "start": "930000",
    "end": "936160"
  },
  {
    "start": "935000",
    "end": "976000"
  },
  {
    "text": "there's a whole list of issues on github that we know we need to have done before we can declare this thing production ready one of the most",
    "start": "936720",
    "end": "943360"
  },
  {
    "text": "important is that the in-memory cache which i mentioned the simple http cache is not scalable um it currently doesn't",
    "start": "943360",
    "end": "950399"
  },
  {
    "text": "do any memory management it will you can spin up envoy have it cache your content and it will very quickly run out",
    "start": "950399",
    "end": "956639"
  },
  {
    "text": "of memory because it doesn't do any sort of management on the back end there's also some other basic",
    "start": "956639",
    "end": "962320"
  },
  {
    "text": "functionality like serving head requests and important things like gathering stats on cash requests",
    "start": "962320",
    "end": "968720"
  },
  {
    "text": "and just a whole list of other things that need to be done that are all filed under the area slash cash",
    "start": "968720",
    "end": "974320"
  },
  {
    "text": "label in github uh if all that sounds great and you're ready to dive in and help",
    "start": "974320",
    "end": "981440"
  },
  {
    "start": "976000",
    "end": "1009000"
  },
  {
    "text": "one of the most important things that we need people to contribute are these plugins for the various caches",
    "start": "981440",
    "end": "987680"
  },
  {
    "text": "um so if if you have expertise in any of these caches and want envoy to work with them please",
    "start": "987680",
    "end": "993199"
  },
  {
    "text": "write an implementation for the http cache interface so that envoy can talk to it the",
    "start": "993199",
    "end": "999519"
  },
  {
    "text": "interface is ready to go and it would be great to have these implementations to test the cache filter",
    "start": "999519",
    "end": "1005120"
  },
  {
    "text": "itself against and so we would happily support that effort",
    "start": "1005120",
    "end": "1010320"
  },
  {
    "start": "1009000",
    "end": "1034000"
  },
  {
    "text": "if you need to get in touch with either todd or me you can find us on the envoy slack",
    "start": "1010320",
    "end": "1016000"
  },
  {
    "text": "we are almost always logged in there because this is part of our day job and the list of issues that we know need",
    "start": "1016000",
    "end": "1022560"
  },
  {
    "text": "to be done are currently filed under that label that i mentioned and if any of those catch your interest you",
    "start": "1022560",
    "end": "1027918"
  },
  {
    "text": "can either post some comments in the issues or tag us on on slack and we'll get you started",
    "start": "1027919",
    "end": "1035038"
  },
  {
    "start": "1034000",
    "end": "1067000"
  },
  {
    "text": "so that does it for our presentation uh thanks for following along and thank you even more if you're",
    "start": "1035439",
    "end": "1040959"
  },
  {
    "text": "looking to get started contributing to the cash filter uh our contact information is right there and we will take questions from",
    "start": "1040959",
    "end": "1046959"
  },
  {
    "text": "here hello can you hear me",
    "start": "1046959",
    "end": "1053840"
  },
  {
    "text": "okay so uh just so i think you may have said",
    "start": "1055840",
    "end": "1061120"
  },
  {
    "text": "something but i didn't hear anything [Music]",
    "start": "1061120",
    "end": "1068640"
  },
  {
    "start": "1067000",
    "end": "1123000"
  },
  {
    "text": "okay i wanted to mention something about there was a question earlier about cash purge",
    "start": "1068640",
    "end": "1076240"
  },
  {
    "text": "one of the things that we need to figure out is the",
    "start": "1076240",
    "end": "1082720"
  },
  {
    "text": "is the approach is used for catchphrase because uh different style caches have different",
    "start": "1082720",
    "end": "1089280"
  },
  {
    "text": "needs you know so uh for some you can do it what is literally cashback you go and delete the entries that you",
    "start": "1089280",
    "end": "1095760"
  },
  {
    "text": "want to be gone uh for others you do a uh invalidation approach where you",
    "start": "1095760",
    "end": "1101360"
  },
  {
    "text": "where you record entries that say hey if you find the thing in the cache don't serve it",
    "start": "1101360",
    "end": "1106480"
  },
  {
    "text": "um that invalidation approach makes more sense for uh look for widely distributed uh caches",
    "start": "1106480",
    "end": "1113919"
  },
  {
    "text": "and maybe we can support both together in a weird way and you know",
    "start": "1113919",
    "end": "1120400"
  },
  {
    "text": "so we gotta figure out the next event uh just another mic check can you hear me now",
    "start": "1120400",
    "end": "1125600"
  },
  {
    "start": "1123000",
    "end": "1155000"
  },
  {
    "text": "yes excellent i think one of the other questions that we haven't addressed in the chat is uh",
    "start": "1125600",
    "end": "1133039"
  },
  {
    "text": "is it possible to catch just one route match from the list uh i'm i'm assuming that means like",
    "start": "1133360",
    "end": "1141280"
  },
  {
    "text": "cache key configuration like deciding what parts of the of the path contribute to the cache",
    "start": "1141280",
    "end": "1147039"
  },
  {
    "text": "key like deciding whether or not to include query params or whether to include the protocol and",
    "start": "1147039",
    "end": "1152799"
  },
  {
    "text": "those sorts of things if i have a different idea of what that question means but go ahead okay so to",
    "start": "1152799",
    "end": "1159039"
  },
  {
    "start": "1155000",
    "end": "1218000"
  },
  {
    "text": "answer if that's the question uh then that is a planned feature it's not currently supported um",
    "start": "1159039",
    "end": "1164320"
  },
  {
    "text": "and that would be one of those things uh i might have mentioned it in the slide about things that we would add to the config and like",
    "start": "1164320",
    "end": "1170080"
  },
  {
    "text": "how you decide how the cache decides whether to split issues or split entries",
    "start": "1170080",
    "end": "1176160"
  },
  {
    "text": "or not yeah and some of that is already in the config just not uh it doesn't have any effect yet right it",
    "start": "1176160",
    "end": "1182720"
  },
  {
    "text": "doesn't go anywhere yeah um another thing so so uh what i think the question was was",
    "start": "1182720",
    "end": "1190080"
  },
  {
    "text": "talking about uh you know the fact that filter config is uh per uh listener",
    "start": "1190080",
    "end": "1197280"
  },
  {
    "text": "and that tells you what filters are in stack and then you wanted to have different routes have",
    "start": "1197280",
    "end": "1203600"
  },
  {
    "text": "different config that is something we definitely need um to add is per route uh configuration um and that just",
    "start": "1203600",
    "end": "1212159"
  },
  {
    "text": "that's just a matter of getting that done",
    "start": "1212159",
    "end": "1217120"
  },
  {
    "start": "1218000",
    "end": "1276000"
  },
  {
    "text": "so we say like does the interface to http cache plug-in allow for coalescing um i believe it does but i think todd",
    "start": "1218799",
    "end": "1226880"
  },
  {
    "text": "you would probably have a bit more insight on that uh yes it absolutely does um so",
    "start": "1226880",
    "end": "1233360"
  },
  {
    "text": "all you need to do for for coalescing is basically have multiple things come",
    "start": "1233360",
    "end": "1240159"
  },
  {
    "text": "in and uh if they're misses just don't respond to the the second third",
    "start": "1240159",
    "end": "1248880"
  },
  {
    "text": "whatever one uh telling us that that it's a miss",
    "start": "1248880",
    "end": "1254000"
  },
  {
    "text": "just just let it go i just let it sit and wait and uh that works fine now probably we",
    "start": "1254000",
    "end": "1260799"
  },
  {
    "text": "would need some configuration around like you know maximum",
    "start": "1260799",
    "end": "1266080"
  },
  {
    "text": "delays and stuff like that but fundamentally yeah you could do it in a plug-in today",
    "start": "1266080",
    "end": "1276400"
  },
  {
    "start": "1276000",
    "end": "1306000"
  },
  {
    "text": "yeah the next next question is how do items get pushed out of cash now uh the short answer is that's up to the plugin and the plugins currently implemented",
    "start": "1276400",
    "end": "1283919"
  },
  {
    "text": "like the simple http cache just doesn't do it um and so depending on how the cache",
    "start": "1283919",
    "end": "1290400"
  },
  {
    "text": "works that we're talking to whether it's like a remote cache like redis or something else or if it's an in-memory cache that's",
    "start": "1290400",
    "end": "1296080"
  },
  {
    "text": "written completely within envoy um it's gonna be plug-in specific how that's managed but the simple http",
    "start": "1296080",
    "end": "1303200"
  },
  {
    "text": "cache just doesn't do it yeah um and just to be clear that's just",
    "start": "1303200",
    "end": "1308880"
  },
  {
    "start": "1306000",
    "end": "1380000"
  },
  {
    "text": "because we haven't gotten around to it yeah sure i mean we are not going to go into production without a feature like that like",
    "start": "1308880",
    "end": "1314000"
  },
  {
    "text": "uh that this is just like the simple http cache is good for development and it's good to say hey my caching semantics work but it is",
    "start": "1314000",
    "end": "1320720"
  },
  {
    "text": "not good to put in front of live traffic yeah um i do think that we are going to",
    "start": "1320720",
    "end": "1326640"
  },
  {
    "text": "need there are more configuration options that will uh need to be added uh so",
    "start": "1326640",
    "end": "1333360"
  },
  {
    "text": "like i assume any cash plug-in is gonna need a mac space uh option um a max time yeah uh",
    "start": "1333360",
    "end": "1342400"
  },
  {
    "text": "probably so as well uh and you know so there are probably some other things that are universal",
    "start": "1342400",
    "end": "1348000"
  },
  {
    "text": "uh we also in in standard envoy fashion have uh you can specify you know",
    "start": "1348000",
    "end": "1355280"
  },
  {
    "text": "opaque to cat stuff that's okay to catch filter that is just handed to the plugin for whatever",
    "start": "1355280",
    "end": "1362320"
  },
  {
    "text": "configuration you need yeah like whether that's custom headers or other sort of like metadata that gets passed along for sure",
    "start": "1362320",
    "end": "1370480"
  },
  {
    "text": "let's see have we missed any questions",
    "start": "1372799",
    "end": "1376399"
  },
  {
    "start": "1380000",
    "end": "1419000"
  },
  {
    "text": "one thing that i i wanted to explicitly mention just because i i don't know whether i",
    "start": "1381600",
    "end": "1387039"
  },
  {
    "text": "don't think we've mentioned it before is that uh is in terms of cash admittance policy",
    "start": "1387039",
    "end": "1392159"
  },
  {
    "text": "and that is you know we might expand where you can have different policies",
    "start": "1392159",
    "end": "1399360"
  },
  {
    "text": "in the cash filter but another option is that just because we call your plugin and say here's",
    "start": "1399360",
    "end": "1405120"
  },
  {
    "text": "something please insert it you don't have to actually insert it you can say gee thanks nope",
    "start": "1405120",
    "end": "1411600"
  },
  {
    "text": "i'm gonna pass and not insert it so you can do whatever you want there um",
    "start": "1411600",
    "end": "1417840"
  },
  {
    "text": "yeah uh to answer shakti's question uh so the plan is to to say yes that you",
    "start": "1418960",
    "end": "1425360"
  },
  {
    "text": "can use redis as a remote cache with uh http cache filter or with the cache filter",
    "start": "1425360",
    "end": "1430559"
  },
  {
    "text": "um but there is not currently a plug-in implementation that implements redis's api so",
    "start": "1430559",
    "end": "1436880"
  },
  {
    "text": "once somebody gets inspired and says hey i'd really like to use redis with envoy and writes the plugin for it then envoy",
    "start": "1436880",
    "end": "1443200"
  },
  {
    "text": "will support talking to it because the interfaces are all there we just don't act we don't have the plugin for redis yet and it's it's",
    "start": "1443200",
    "end": "1449360"
  },
  {
    "text": "designed to do that sort of thing we just need the plugin yeah the the the root concept behind this was hey",
    "start": "1449360",
    "end": "1457520"
  },
  {
    "start": "1452000",
    "end": "1491000"
  },
  {
    "text": "at google we have these really kind of weird requirements that that most people don't have can we make it",
    "start": "1457520",
    "end": "1464000"
  },
  {
    "text": "how do we do caching in a way that handles our requirements and also other people's requirements and the answer was hey",
    "start": "1464000",
    "end": "1469279"
  },
  {
    "text": "let's make it a plug-in that whatever's special is the plugin um so like i don't think",
    "start": "1469279",
    "end": "1475360"
  },
  {
    "text": "we're going to be contributing the redis cache just because that doesn't happen to uh be relevant to our to you",
    "start": "1475360",
    "end": "1482400"
  },
  {
    "text": "know google's business needs but uh we are absolutely going to uh do anything we can to hold your hand",
    "start": "1482400",
    "end": "1489200"
  },
  {
    "text": "while you add it uh oh yeah right and like to build on that um we are not red as",
    "start": "1489200",
    "end": "1496000"
  },
  {
    "text": "experts we don't use redis and so it's probably not good for us to be writing that plug-in anyway we",
    "start": "1496000",
    "end": "1501360"
  },
  {
    "text": "wouldn't be very good at keeping up with releases and making sure that it and that sort of thing like it's it's not good for us to own things that",
    "start": "1501360",
    "end": "1507360"
  },
  {
    "text": "we don't use um but it is in our best interest to have somebody else",
    "start": "1507360",
    "end": "1512400"
  },
  {
    "text": "contributing those um so that we have users adding requirements to both the cache filter",
    "start": "1512400",
    "end": "1518640"
  },
  {
    "text": "itself and the http cache uh interface like if we're missing a piece of the",
    "start": "1518640",
    "end": "1524320"
  },
  {
    "text": "interface that something like redis or memcached and stuff need then uh we want to be extending the",
    "start": "1524320",
    "end": "1530159"
  },
  {
    "text": "generic portions of of the code to to support those things and so if somebody comes along with",
    "start": "1530159",
    "end": "1535600"
  },
  {
    "text": "the specific needs that redis has we're happy to support those needs we just don't want to own",
    "start": "1535600",
    "end": "1541120"
  },
  {
    "text": "the redis http cache implementation itself yeah so yeah please you know file bugs",
    "start": "1541120",
    "end": "1548480"
  },
  {
    "text": "prs questions um i think uh which i mentioned earlier you know a",
    "start": "1548480",
    "end": "1555919"
  },
  {
    "text": "lot often on we're routinely on on slack you know we answer email all that",
    "start": "1555919",
    "end": "1561120"
  },
  {
    "text": "stuff so we we are motivated to help uh any efforts on this",
    "start": "1561120",
    "end": "1571760"
  },
  {
    "text": "and somebody can't ask a live question if if you feel so inclined you know we don't have to be the only ones talking",
    "start": "1571760",
    "end": "1579600"
  },
  {
    "text": "the formative left",
    "start": "1579600",
    "end": "1585840"
  },
  {
    "start": "1586000",
    "end": "1636000"
  },
  {
    "text": "yes this is in the main repo yeah and in fact if you just add the cache config that i mentioned earlier in the",
    "start": "1586960",
    "end": "1592080"
  },
  {
    "text": "presentation um then it'll load it into your your filter chain uh because it's it's in it's like it's",
    "start": "1592080",
    "end": "1598559"
  },
  {
    "text": "merged into main line right now yeah now it is still considered alpha",
    "start": "1598559",
    "end": "1603600"
  },
  {
    "text": "we haven't we haven't done fuzzing on it you know which is really right yeah it is definitely",
    "start": "1603600",
    "end": "1610559"
  },
  {
    "text": "we don't think that it should be used in production um but if you have uh if",
    "start": "1610559",
    "end": "1616640"
  },
  {
    "text": "you have the the time and ability to bulletproof it then then by all means",
    "start": "1616640",
    "end": "1623360"
  },
  {
    "text": "yeah we're not taking a claim on any of this if you want to help out anywhere in the code we are happy about",
    "start": "1623360",
    "end": "1629840"
  },
  {
    "text": "that yeah it's like we plan to get it to production ready but uh like it's it's not there yet",
    "start": "1629840",
    "end": "1636880"
  },
  {
    "start": "1636000",
    "end": "1681000"
  },
  {
    "text": "what is missing to rounded in production um an http cache implementation that is scalable uh the",
    "start": "1636880",
    "end": "1642640"
  },
  {
    "text": "only implementation we have right now is not production ready uh that's the primary thing um the basic cache semantics",
    "start": "1642640",
    "end": "1649360"
  },
  {
    "text": "um are ready like it supports cache control and all of the basic like dtl",
    "start": "1649360",
    "end": "1655440"
  },
  {
    "text": "type headers um there's some more advanced stuff that that it doesn't support yet like some of the",
    "start": "1655440",
    "end": "1660720"
  },
  {
    "text": "more unique validation flows but for basic caching it'll work and it will handle most requests and where it",
    "start": "1660720",
    "end": "1667120"
  },
  {
    "text": "doesn't work it it's still rfc compliant um",
    "start": "1667120",
    "end": "1672240"
  },
  {
    "text": "so it ignore it ignores some you know if it's if it doesn't understand something like if range it just says okay never",
    "start": "1672240",
    "end": "1679679"
  },
  {
    "text": "mind i'm not catching for sure um to describe scalable in this context the most clear",
    "start": "1679679",
    "end": "1686559"
  },
  {
    "start": "1681000",
    "end": "1721000"
  },
  {
    "text": "way to point out that simple http cache the only http cache implementation is not",
    "start": "1686559",
    "end": "1691600"
  },
  {
    "text": "ready for production is that it does absolutely no memory management and it will keep adding entries to the cache until you",
    "start": "1691600",
    "end": "1697440"
  },
  {
    "text": "run out of memory and envoy probably crashes um so that's that's the most obvious flaw with it",
    "start": "1697440",
    "end": "1703520"
  },
  {
    "text": "but it also doesn't do sharding or other things that impact performance like you're probably going to get lot",
    "start": "1703520",
    "end": "1709200"
  },
  {
    "text": "contention and like it's it's just like it's written as an example implementation to prove the interface",
    "start": "1709200",
    "end": "1715440"
  },
  {
    "text": "not to serve live traffic",
    "start": "1715440",
    "end": "1719600"
  },
  {
    "start": "1721000",
    "end": "1736000"
  },
  {
    "text": "yeah and we think we can turn it into a production quality thing while still being a good example",
    "start": "1721600",
    "end": "1728880"
  },
  {
    "text": "um you know if that person's wrong maybe we'll split it but that's the plan",
    "start": "1728880",
    "end": "1734720"
  },
  {
    "start": "1736000",
    "end": "1806000"
  },
  {
    "text": "uh we actually had a slide on that how many how many like it's it's a relatively simple interface i wonder if we have",
    "start": "1736320",
    "end": "1743039"
  },
  {
    "text": "this an easy way to show that less than a dozen um much less",
    "start": "1743039",
    "end": "1748559"
  },
  {
    "text": "than it doesn't where is this uh yeah if you if you",
    "start": "1748559",
    "end": "1754559"
  },
  {
    "text": "check with slides it'll be in there we don't have time um yeah we've got about 30 seconds left but",
    "start": "1754559",
    "end": "1760480"
  },
  {
    "text": "um actually if you if no it's fine it's like if um if you look at the http cache uh class",
    "start": "1760480",
    "end": "1767520"
  },
  {
    "text": "in the in the github like search then then you should be able to see it like it's it's very straightforward",
    "start": "1767520",
    "end": "1774480"
  },
  {
    "text": "yeah that and look up next and insert context right yeah the two context objects and then the http cache",
    "start": "1774480",
    "end": "1780720"
  },
  {
    "text": "interface itself but yeah it's it's we're talking like less than 20 probably",
    "start": "1780720",
    "end": "1787840"
  },
  {
    "text": "like i mean if you i don't maybe maybe if you add them add all the all the three classes together like it's",
    "start": "1787840",
    "end": "1794399"
  },
  {
    "text": "it's it's not it's not obnoxious",
    "start": "1794399",
    "end": "1798240"
  },
  {
    "text": "uh and with that we're at one o'clock and so the next presentation is about to join",
    "start": "1800000",
    "end": "1807919"
  }
]