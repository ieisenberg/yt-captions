[
  {
    "start": "0",
    "end": "20000"
  },
  {
    "text": "first of all thank you the outpouring",
    "start": "0",
    "end": "3149"
  },
  {
    "text": "and people who stayed is pretty awesome",
    "start": "3149",
    "end": "6690"
  },
  {
    "text": "so thanks for showing up",
    "start": "6690",
    "end": "8370"
  },
  {
    "text": "that's half a life right so today we're",
    "start": "8370",
    "end": "10469"
  },
  {
    "text": "gonna be talking about kubernetes",
    "start": "10469",
    "end": "11790"
  },
  {
    "text": "storage developments for stateful",
    "start": "11790",
    "end": "13110"
  },
  {
    "text": "workloads my name is Aaron Boyd I'm a",
    "start": "13110",
    "end": "14880"
  },
  {
    "text": "software engineer for Red Hat yay so",
    "start": "14880",
    "end": "21150"
  },
  {
    "start": "20000",
    "end": "40000"
  },
  {
    "text": "today we're going to talk about the",
    "start": "21150",
    "end": "22529"
  },
  {
    "text": "background of stateful sets within",
    "start": "22529",
    "end": "24660"
  },
  {
    "text": "kubernetes and kind of the history",
    "start": "24660",
    "end": "25890"
  },
  {
    "text": "around that what problems we're trying",
    "start": "25890",
    "end": "28170"
  },
  {
    "text": "to solve by local persistence storage",
    "start": "28170",
    "end": "31199"
  },
  {
    "text": "and rob block storage which this is",
    "start": "31199",
    "end": "32880"
  },
  {
    "text": "focused around the solution to that a",
    "start": "32880",
    "end": "35190"
  },
  {
    "text": "demo and of course what the future work",
    "start": "35190",
    "end": "38250"
  },
  {
    "text": "is because the work is never-ending",
    "start": "38250",
    "end": "40430"
  },
  {
    "start": "40000",
    "end": "109000"
  },
  {
    "text": "so there's some expected knowledge we",
    "start": "40430",
    "end": "43590"
  },
  {
    "text": "assume that you have but you know what",
    "start": "43590",
    "end": "45480"
  },
  {
    "text": "they say about when you assume so today",
    "start": "45480",
    "end": "48059"
  },
  {
    "text": "we're gonna look at pods labels nodes",
    "start": "48059",
    "end": "50610"
  },
  {
    "text": "persistent volume claims persistent",
    "start": "50610",
    "end": "52860"
  },
  {
    "text": "volumes storage classes and stateful",
    "start": "52860",
    "end": "55050"
  },
  {
    "text": "sets storage classes and stateful sets",
    "start": "55050",
    "end": "57570"
  },
  {
    "text": "being the most new API objects is or are",
    "start": "57570",
    "end": "62579"
  },
  {
    "text": "you guys familiar with both of these not",
    "start": "62579",
    "end": "66150"
  },
  {
    "text": "really okay so storage classes are a way",
    "start": "66150",
    "end": "68610"
  },
  {
    "text": "for the administrator to classify the",
    "start": "68610",
    "end": "70950"
  },
  {
    "text": "storage that they either create through",
    "start": "70950",
    "end": "72540"
  },
  {
    "text": "static or dynamic provisioning this",
    "start": "72540",
    "end": "74970"
  },
  {
    "text": "allows the administrator to create sets",
    "start": "74970",
    "end": "77100"
  },
  {
    "text": "of volumes maybe for a specific zone",
    "start": "77100",
    "end": "79590"
  },
  {
    "text": "that they're dynamically provisioned in",
    "start": "79590",
    "end": "81570"
  },
  {
    "text": "or maybe a specific use within the",
    "start": "81570",
    "end": "83580"
  },
  {
    "text": "corporation you might Dinah you might",
    "start": "83580",
    "end": "85320"
  },
  {
    "text": "provision volume specifically for",
    "start": "85320",
    "end": "87150"
  },
  {
    "text": "accounting and make them really slow and",
    "start": "87150",
    "end": "90240"
  },
  {
    "text": "then stateful sets allow us to create an",
    "start": "90240",
    "end": "92189"
  },
  {
    "text": "identity that sticks to the pod and",
    "start": "92189",
    "end": "94650"
  },
  {
    "text": "anytime I see that word within",
    "start": "94650",
    "end": "96720"
  },
  {
    "text": "documentation I constantly have this",
    "start": "96720",
    "end": "98939"
  },
  {
    "text": "image of sticky I don't know if you guys",
    "start": "98939",
    "end": "100920"
  },
  {
    "text": "that the last cube con were able to go",
    "start": "100920",
    "end": "102630"
  },
  {
    "text": "to the wall of bubble gum in Seattle but",
    "start": "102630",
    "end": "104579"
  },
  {
    "text": "it's rather disgusting so as I mentioned",
    "start": "104579",
    "end": "111899"
  },
  {
    "start": "109000",
    "end": "178000"
  },
  {
    "text": "we're going to be talking about local",
    "start": "111899",
    "end": "112979"
  },
  {
    "text": "persistent volumes and raw block volumes",
    "start": "112979",
    "end": "114750"
  },
  {
    "text": "in terms of stateful distributed",
    "start": "114750",
    "end": "116490"
  },
  {
    "text": "workloads so that word kind of gets",
    "start": "116490",
    "end": "118649"
  },
  {
    "text": "tossed around a lot if lot of the",
    "start": "118649",
    "end": "120240"
  },
  {
    "text": "keynotes they talk about distributed",
    "start": "120240",
    "end": "121619"
  },
  {
    "text": "distributed distributed and kubernetes",
    "start": "121619",
    "end": "123960"
  },
  {
    "text": "being stateless well we hate to burst",
    "start": "123960",
    "end": "127049"
  },
  {
    "text": "your bubble but you know Cassandra",
    "start": "127049",
    "end": "130080"
  },
  {
    "text": "MongoDB and cluster FS is",
    "start": "130080",
    "end": "131920"
  },
  {
    "text": "other distributed applications actually",
    "start": "131920",
    "end": "133930"
  },
  {
    "text": "needs state they replicate the shared",
    "start": "133930",
    "end": "136989"
  },
  {
    "text": "data for high availability and fault",
    "start": "136989",
    "end": "138670"
  },
  {
    "text": "tolerance and many of them are critical",
    "start": "138670",
    "end": "141660"
  },
  {
    "text": "infrastructure applications within the",
    "start": "141660",
    "end": "144430"
  },
  {
    "text": "enterprise many of these that utilize",
    "start": "144430",
    "end": "147550"
  },
  {
    "text": "data analytics for instance you can see",
    "start": "147550",
    "end": "149800"
  },
  {
    "text": "where local persistent volumes can",
    "start": "149800",
    "end": "151720"
  },
  {
    "text": "provide data locality for performance",
    "start": "151720",
    "end": "153850"
  },
  {
    "text": "and data gravity I think is probably the",
    "start": "153850",
    "end": "156940"
  },
  {
    "text": "biggest issue here is you can execute on",
    "start": "156940",
    "end": "159459"
  },
  {
    "text": "where the data is today and last high",
    "start": "159459",
    "end": "164410"
  },
  {
    "text": "performance tuning so with the advent in",
    "start": "164410",
    "end": "166420"
  },
  {
    "text": "the maturity of raw block volumes we",
    "start": "166420",
    "end": "168880"
  },
  {
    "text": "will now be able to tune the storage",
    "start": "168880",
    "end": "171220"
  },
  {
    "text": "more appropriately to really get what",
    "start": "171220",
    "end": "174130"
  },
  {
    "text": "you need out of raw block devices and so",
    "start": "174130",
    "end": "180190"
  },
  {
    "start": "178000",
    "end": "353000"
  },
  {
    "text": "there are some other features in",
    "start": "180190",
    "end": "181870"
  },
  {
    "text": "addition to what was merged that were",
    "start": "181870",
    "end": "184180"
  },
  {
    "text": "have been merged since 1.6 I believe",
    "start": "184180",
    "end": "187750"
  },
  {
    "text": "kubernetes that benefit stateful",
    "start": "187750",
    "end": "191140"
  },
  {
    "text": "workloads stateful sets as mentioned in",
    "start": "191140",
    "end": "193989"
  },
  {
    "text": "the assumptions are ways to provide that",
    "start": "193989",
    "end": "197170"
  },
  {
    "text": "stable identity it's a normal controller",
    "start": "197170",
    "end": "199180"
  },
  {
    "text": "if you went to any of the keynotes they",
    "start": "199180",
    "end": "200680"
  },
  {
    "text": "talked about the cat set in which you",
    "start": "200680",
    "end": "202900"
  },
  {
    "text": "just have a controller that is intending",
    "start": "202900",
    "end": "206079"
  },
  {
    "text": "to go to a certain state and constantly",
    "start": "206079",
    "end": "207790"
  },
  {
    "text": "execute trying to do that how is this",
    "start": "207790",
    "end": "211420"
  },
  {
    "text": "different I think the common question I",
    "start": "211420",
    "end": "212890"
  },
  {
    "text": "get is how is this different than my",
    "start": "212890",
    "end": "214299"
  },
  {
    "text": "replica set or my deployment it's the",
    "start": "214299",
    "end": "216880"
  },
  {
    "text": "stable identity and the stickiness that",
    "start": "216880",
    "end": "218590"
  },
  {
    "text": "it provides it's not necessarily",
    "start": "218590",
    "end": "220570"
  },
  {
    "text": "appropriate if you don't care about",
    "start": "220570",
    "end": "221859"
  },
  {
    "text": "those things it's also for workloads",
    "start": "221859",
    "end": "224260"
  },
  {
    "text": "that you need to have a graceful startup",
    "start": "224260",
    "end": "226120"
  },
  {
    "text": "or a graceful shutdown in which things",
    "start": "226120",
    "end": "228340"
  },
  {
    "text": "have to happen in a certain order",
    "start": "228340",
    "end": "229630"
  },
  {
    "text": "zookeepers a perfect example of that as",
    "start": "229630",
    "end": "231820"
  },
  {
    "text": "each one of the nodes come up with in",
    "start": "231820",
    "end": "233709"
  },
  {
    "text": "zookeeper they're given a unique DNS",
    "start": "233709",
    "end": "236200"
  },
  {
    "text": "network identity that then defines them",
    "start": "236200",
    "end": "238560"
  },
  {
    "text": "within the quorum the next feature in",
    "start": "238560",
    "end": "242140"
  },
  {
    "text": "kubernetes that also benefits",
    "start": "242140",
    "end": "244390"
  },
  {
    "text": "stateful workloads is a pod disruption",
    "start": "244390",
    "end": "247239"
  },
  {
    "text": "budget for control disruption and I have",
    "start": "247239",
    "end": "250120"
  },
  {
    "text": "to kind of giggle to think about what a",
    "start": "250120",
    "end": "251590"
  },
  {
    "text": "control disruption is in such an",
    "start": "251590",
    "end": "253389"
  },
  {
    "text": "immature system but it's actually pretty",
    "start": "253389",
    "end": "256180"
  },
  {
    "text": "remarkable so this allows you to say if",
    "start": "256180",
    "end": "260709"
  },
  {
    "text": "I have I'm running bluster and I have a",
    "start": "260709",
    "end": "262840"
  },
  {
    "text": "clica three that if I am doing a rolling",
    "start": "262840",
    "end": "266230"
  },
  {
    "text": "upgrade we're not talking about kernel",
    "start": "266230",
    "end": "268000"
  },
  {
    "text": "panics or anything like that that I need",
    "start": "268000",
    "end": "270070"
  },
  {
    "text": "to at least have one of those running at",
    "start": "270070",
    "end": "272620"
  },
  {
    "text": "all times that I cannot have my entire",
    "start": "272620",
    "end": "274570"
  },
  {
    "text": "replica go down or of course we have de",
    "start": "274570",
    "end": "276910"
  },
  {
    "text": "loss so the pod disruption budget allows",
    "start": "276910",
    "end": "279400"
  },
  {
    "text": "us to say what we can tolerate in terms",
    "start": "279400",
    "end": "281889"
  },
  {
    "text": "of the the replicated pods being down",
    "start": "281889",
    "end": "285550"
  },
  {
    "text": "all at once the next feature of pod",
    "start": "285550",
    "end": "288940"
  },
  {
    "text": "affinity in ni infinity those being the",
    "start": "288940",
    "end": "291340"
  },
  {
    "text": "same things allow us to co-locate or",
    "start": "291340",
    "end": "293530"
  },
  {
    "text": "spread pods among the nodes you can see",
    "start": "293530",
    "end": "296620"
  },
  {
    "text": "where there's a huge advantage in pod",
    "start": "296620",
    "end": "298479"
  },
  {
    "text": "affinity where if I have two pods that",
    "start": "298479",
    "end": "300729"
  },
  {
    "text": "can benefit about being co-located",
    "start": "300729",
    "end": "302680"
  },
  {
    "text": "together this feature is wonderful for",
    "start": "302680",
    "end": "305229"
  },
  {
    "text": "local storage and analytics to provide",
    "start": "305229",
    "end": "307000"
  },
  {
    "text": "that support the anti infinity really",
    "start": "307000",
    "end": "309940"
  },
  {
    "text": "kind of solves the noisy neighbor",
    "start": "309940",
    "end": "311320"
  },
  {
    "text": "problem where you have a lot of noise",
    "start": "311320",
    "end": "314530"
  },
  {
    "text": "either network bandwidth or cache",
    "start": "314530",
    "end": "316539"
  },
  {
    "text": "consumption that you need to be removed",
    "start": "316539",
    "end": "318460"
  },
  {
    "text": "from other pods and not scheduled in",
    "start": "318460",
    "end": "320229"
  },
  {
    "text": "between that so similar I think to",
    "start": "320229",
    "end": "323530"
  },
  {
    "text": "taints and toleration x' if you've read",
    "start": "323530",
    "end": "325060"
  },
  {
    "text": "much on that but providing what we need",
    "start": "325060",
    "end": "327070"
  },
  {
    "text": "in terms of the stateful set the last",
    "start": "327070",
    "end": "329410"
  },
  {
    "text": "one is pod priority and preemption",
    "start": "329410",
    "end": "331650"
  },
  {
    "text": "because everyone of course has the most",
    "start": "331650",
    "end": "334240"
  },
  {
    "text": "important application that runs within",
    "start": "334240",
    "end": "336010"
  },
  {
    "text": "the system right so but honestly this",
    "start": "336010",
    "end": "339190"
  },
  {
    "text": "provides a way for the scheduler to",
    "start": "339190",
    "end": "340840"
  },
  {
    "text": "determine the priority if it cannot find",
    "start": "340840",
    "end": "342849"
  },
  {
    "text": "where the pod can be scheduled it can",
    "start": "342849",
    "end": "345580"
  },
  {
    "text": "then begin to evict less important pods",
    "start": "345580",
    "end": "348010"
  },
  {
    "text": "within that so that your pod can be",
    "start": "348010",
    "end": "350440"
  },
  {
    "text": "scheduled appropriately",
    "start": "350440",
    "end": "353910"
  },
  {
    "text": "and on okay there we go so even with all",
    "start": "367990",
    "end": "370870"
  },
  {
    "start": "368000",
    "end": "466000"
  },
  {
    "text": "these new features there are still few",
    "start": "370870",
    "end": "373270"
  },
  {
    "text": "missing pieces to the puzzle namely",
    "start": "373270",
    "end": "375569"
  },
  {
    "text": "currently stateful sets work very well",
    "start": "375569",
    "end": "377800"
  },
  {
    "text": "with remote storage but not so well if",
    "start": "377800",
    "end": "380169"
  },
  {
    "text": "you want to use local storage for better",
    "start": "380169",
    "end": "382479"
  },
  {
    "text": "performance at reduced cost currently",
    "start": "382479",
    "end": "385419"
  },
  {
    "text": "the only way in kubernetes to use local",
    "start": "385419",
    "end": "387280"
  },
  {
    "text": "storage is to use a host path volume and",
    "start": "387280",
    "end": "389500"
  },
  {
    "text": "they have a lot of problems as you can",
    "start": "389500",
    "end": "392680"
  },
  {
    "text": "see on the right I have a pod spec and I",
    "start": "392680",
    "end": "394990"
  },
  {
    "text": "have to specify two pieces of",
    "start": "394990",
    "end": "396580"
  },
  {
    "text": "information the first piece of",
    "start": "396580",
    "end": "398590"
  },
  {
    "text": "information is the path to the local",
    "start": "398590",
    "end": "400660"
  },
  {
    "text": "disk I want to access and the second",
    "start": "400660",
    "end": "403060"
  },
  {
    "text": "piece of information is the node or that",
    "start": "403060",
    "end": "404889"
  },
  {
    "text": "disk resides so you can see the first",
    "start": "404889",
    "end": "408460"
  },
  {
    "text": "problem this pot spec is not portable it",
    "start": "408460",
    "end": "412509"
  },
  {
    "text": "is specific to the configuration of this",
    "start": "412509",
    "end": "415030"
  },
  {
    "text": "specific node and if I wanted to scale",
    "start": "415030",
    "end": "417669"
  },
  {
    "text": "my application to hundreds of notes that",
    "start": "417669",
    "end": "420130"
  },
  {
    "text": "means I have to create a pod spec for",
    "start": "420130",
    "end": "422199"
  },
  {
    "text": "each individual note that I want to",
    "start": "422199",
    "end": "424360"
  },
  {
    "text": "scale on and basically manually",
    "start": "424360",
    "end": "426819"
  },
  {
    "text": "scheduled and manually scale my",
    "start": "426819",
    "end": "428409"
  },
  {
    "text": "application the second problem is that",
    "start": "428409",
    "end": "431020"
  },
  {
    "text": "host path problem or host pack volumes",
    "start": "431020",
    "end": "433120"
  },
  {
    "text": "are a big security risk because you're",
    "start": "433120",
    "end": "435909"
  },
  {
    "text": "allowing the user's pod to specify any",
    "start": "435909",
    "end": "438550"
  },
  {
    "text": "path in the system including a path to",
    "start": "438550",
    "end": "441610"
  },
  {
    "text": "someone else's data or a path to some",
    "start": "441610",
    "end": "444430"
  },
  {
    "text": "system critical data for that reason",
    "start": "444430",
    "end": "447580"
  },
  {
    "text": "many administrators disable host path",
    "start": "447580",
    "end": "450729"
  },
  {
    "text": "all UMES altogether and you wouldn't be",
    "start": "450729",
    "end": "453550"
  },
  {
    "text": "able to run your workload on those",
    "start": "453550",
    "end": "455800"
  },
  {
    "text": "clusters if you had to use host Beth",
    "start": "455800",
    "end": "458110"
  },
  {
    "text": "Williams so the way that we decided to",
    "start": "458110",
    "end": "464259"
  },
  {
    "text": "solve all these issues oh sorry",
    "start": "464259",
    "end": "467919"
  },
  {
    "start": "466000",
    "end": "526000"
  },
  {
    "text": "so what many application developers have",
    "start": "467919",
    "end": "471699"
  },
  {
    "text": "had to do today is to either manually",
    "start": "471699",
    "end": "474729"
  },
  {
    "text": "maintain the pod specs for all of their",
    "start": "474729",
    "end": "476740"
  },
  {
    "text": "nodes which makes scaling very difficult",
    "start": "476740",
    "end": "479219"
  },
  {
    "text": "or they have to write their own custom",
    "start": "479219",
    "end": "482409"
  },
  {
    "text": "schedulers or operators and local disk",
    "start": "482409",
    "end": "485590"
  },
  {
    "text": "reservation and lifecycle managers in",
    "start": "485590",
    "end": "487990"
  },
  {
    "text": "order to handle all this it to automate",
    "start": "487990",
    "end": "493000"
  },
  {
    "text": "all of this manual process",
    "start": "493000",
    "end": "496520"
  },
  {
    "text": "and that developing and maintaining all",
    "start": "496520",
    "end": "500599"
  },
  {
    "text": "that extra infrastructure just support",
    "start": "500599",
    "end": "503509"
  },
  {
    "text": "your workload to kubernetes is a big",
    "start": "503509",
    "end": "505970"
  },
  {
    "text": "engineering effort in addition you",
    "start": "505970",
    "end": "509360"
  },
  {
    "text": "wouldn't be able to it would be more",
    "start": "509360",
    "end": "510830"
  },
  {
    "text": "difficult to leverage existing",
    "start": "510830",
    "end": "512029"
  },
  {
    "text": "kubernetes features like you wouldn't be",
    "start": "512029",
    "end": "514219"
  },
  {
    "text": "able to take advantage of stateful sets",
    "start": "514219",
    "end": "516140"
  },
  {
    "text": "and auto scaling and automatic rolling",
    "start": "516140",
    "end": "520039"
  },
  {
    "text": "updates so to solve all these problems",
    "start": "520039",
    "end": "524390"
  },
  {
    "text": "with hose path we decided that the best",
    "start": "524390",
    "end": "526880"
  },
  {
    "start": "526000",
    "end": "591000"
  },
  {
    "text": "way is to extend the existing persistent",
    "start": "526880",
    "end": "530209"
  },
  {
    "text": "volume claim and persistent volume model",
    "start": "530209",
    "end": "532670"
  },
  {
    "text": "in kubernetes to also support local",
    "start": "532670",
    "end": "535010"
  },
  {
    "text": "disks so to give a little bit of",
    "start": "535010",
    "end": "538040"
  },
  {
    "text": "background persistent volume claims and",
    "start": "538040",
    "end": "540589"
  },
  {
    "text": "persistent volumes basically add a layer",
    "start": "540589",
    "end": "543290"
  },
  {
    "text": "of indirection in between the users",
    "start": "543290",
    "end": "546680"
  },
  {
    "text": "storage requirements and the actual",
    "start": "546680",
    "end": "549589"
  },
  {
    "text": "storage available in the cluster so in",
    "start": "549589",
    "end": "552740"
  },
  {
    "text": "my users pod i'll specify a persistent",
    "start": "552740",
    "end": "556279"
  },
  {
    "text": "volume claim and inside the claim i",
    "start": "556279",
    "end": "559130"
  },
  {
    "text": "would specify some generic volume",
    "start": "559130",
    "end": "562750"
  },
  {
    "text": "requirements that I need for my",
    "start": "562750",
    "end": "564620"
  },
  {
    "text": "application such as the capacity then",
    "start": "564620",
    "end": "568130"
  },
  {
    "text": "the cluster administrator's job is to",
    "start": "568130",
    "end": "570680"
  },
  {
    "text": "create persistent volumes for these",
    "start": "570680",
    "end": "572570"
  },
  {
    "text": "specific volumes that are available in",
    "start": "572570",
    "end": "574640"
  },
  {
    "text": "their cluster in the case of local",
    "start": "574640",
    "end": "577880"
  },
  {
    "text": "storage that information would include",
    "start": "577880",
    "end": "580279"
  },
  {
    "text": "the node where the local storage is and",
    "start": "580279",
    "end": "583130"
  },
  {
    "text": "also the paths that you can access that",
    "start": "583130",
    "end": "585320"
  },
  {
    "text": "local storage on so let's take a look at",
    "start": "585320",
    "end": "589279"
  },
  {
    "text": "some concrete examples here I have an",
    "start": "589279",
    "end": "594020"
  },
  {
    "start": "591000",
    "end": "647000"
  },
  {
    "text": "example of the users pod and persistent",
    "start": "594020",
    "end": "596270"
  },
  {
    "text": "volume claim I've taken the same pod",
    "start": "596270",
    "end": "599089"
  },
  {
    "text": "spec that I used for host path all users",
    "start": "599089",
    "end": "601850"
  },
  {
    "text": "previously and I've converted it now to",
    "start": "601850",
    "end": "604550"
  },
  {
    "text": "use a persistent volume claim you can",
    "start": "604550",
    "end": "608000"
  },
  {
    "text": "see this pod spec is now completely",
    "start": "608000",
    "end": "610370"
  },
  {
    "text": "portable",
    "start": "610370",
    "end": "611060"
  },
  {
    "text": "I've removed any mention of a node name",
    "start": "611060",
    "end": "613970"
  },
  {
    "text": "and I've removed any mention of a disk",
    "start": "613970",
    "end": "616700"
  },
  {
    "text": "or a path on a specific node I've",
    "start": "616700",
    "end": "619880"
  },
  {
    "text": "replaced it with the name of my",
    "start": "619880",
    "end": "621649"
  },
  {
    "text": "persistent valium claim and in my",
    "start": "621649",
    "end": "624140"
  },
  {
    "text": "persistent volume claim I'm just",
    "start": "624140",
    "end": "626089"
  },
  {
    "text": "defying some generic parameters such as",
    "start": "626089",
    "end": "628639"
  },
  {
    "text": "access mode and capacity and the storage",
    "start": "628639",
    "end": "631309"
  },
  {
    "text": "class that I want to use so now I can",
    "start": "631309",
    "end": "636559"
  },
  {
    "text": "take this spec and I can run it on any",
    "start": "636559",
    "end": "638990"
  },
  {
    "text": "cluster and I can run it across any",
    "start": "638990",
    "end": "641120"
  },
  {
    "text": "environment and I don't have to change",
    "start": "641120",
    "end": "644149"
  },
  {
    "text": "anything in the spec it will just work",
    "start": "644149",
    "end": "647980"
  },
  {
    "text": "so now on the administrator side this is",
    "start": "647980",
    "end": "650629"
  },
  {
    "text": "where I define the specific storage that",
    "start": "650629",
    "end": "653569"
  },
  {
    "text": "is available in this specific cluster in",
    "start": "653569",
    "end": "656629"
  },
  {
    "text": "this case I have to specify the storage",
    "start": "656629",
    "end": "660439"
  },
  {
    "text": "class that this persistent volume",
    "start": "660439",
    "end": "662180"
  },
  {
    "text": "belongs to I specified that this volume",
    "start": "662180",
    "end": "664850"
  },
  {
    "text": "is a local volume and you can access",
    "start": "664850",
    "end": "667939"
  },
  {
    "text": "that disk a certain path and then",
    "start": "667939",
    "end": "670939"
  },
  {
    "text": "there's this third new argument to",
    "start": "670939",
    "end": "673220"
  },
  {
    "text": "persistent volumes called node affinity",
    "start": "673220",
    "end": "675110"
  },
  {
    "text": "so don't worry about the really long",
    "start": "675110",
    "end": "679610"
  },
  {
    "text": "field names just think of node affinity",
    "start": "679610",
    "end": "684290"
  },
  {
    "start": "682000",
    "end": "754000"
  },
  {
    "text": "as a node selector and we are basically",
    "start": "684290",
    "end": "688519"
  },
  {
    "text": "saying we want this volume to only be",
    "start": "688519",
    "end": "692749"
  },
  {
    "text": "accessible on nodes that match the label",
    "start": "692749",
    "end": "696319"
  },
  {
    "text": "and key matching that I have expressed",
    "start": "696319",
    "end": "700129"
  },
  {
    "text": "here so in this particular example I'm",
    "start": "700129",
    "end": "702379"
  },
  {
    "text": "saying this volume can only be accessed",
    "start": "702379",
    "end": "704480"
  },
  {
    "text": "on a node that has a label with the key",
    "start": "704480",
    "end": "707420"
  },
  {
    "text": "kubernetes the i/o slash hostname with",
    "start": "707420",
    "end": "710240"
  },
  {
    "text": "the value node 1 and actually because",
    "start": "710240",
    "end": "714949"
  },
  {
    "text": "we're using labels here this node",
    "start": "714949",
    "end": "717470"
  },
  {
    "text": "affinity can be expanded to support more",
    "start": "717470",
    "end": "720740"
  },
  {
    "text": "than just local volumes it can express",
    "start": "720740",
    "end": "723949"
  },
  {
    "text": "any arbitrary topology that your volume",
    "start": "723949",
    "end": "727309"
  },
  {
    "text": "might have so if you created some crazy",
    "start": "727309",
    "end": "730879"
  },
  {
    "text": "volume that is only accessible on three",
    "start": "730879",
    "end": "733279"
  },
  {
    "text": "nodes you can specify all three notes",
    "start": "733279",
    "end": "735439"
  },
  {
    "text": "here you can instead of using hostname",
    "start": "735439",
    "end": "738199"
  },
  {
    "text": "you can you know use key equals rack in",
    "start": "738199",
    "end": "742189"
  },
  {
    "text": "rack 1 or rack two you know this is a",
    "start": "742189",
    "end": "745879"
  },
  {
    "text": "very powerful notion that can be",
    "start": "745879",
    "end": "747860"
  },
  {
    "text": "supported and",
    "start": "747860",
    "end": "749420"
  },
  {
    "text": "beyond local volumes so to summarize",
    "start": "749420",
    "end": "755660"
  },
  {
    "text": "what we have implemented so far we first",
    "start": "755660",
    "end": "758930"
  },
  {
    "text": "introduced this feature in 1:7 and in",
    "start": "758930",
    "end": "762080"
  },
  {
    "text": "1:7 what you are able to do is you're",
    "start": "762080",
    "end": "764240"
  },
  {
    "text": "able to create a local persistent volume",
    "start": "764240",
    "end": "767300"
  },
  {
    "text": "type and specify a node affinity for it",
    "start": "767300",
    "end": "770210"
  },
  {
    "text": "and the scheduler is smart enough to",
    "start": "770210",
    "end": "773600"
  },
  {
    "text": "read that node affinity on your",
    "start": "773600",
    "end": "776210"
  },
  {
    "text": "persistent volume and schedule your pod",
    "start": "776210",
    "end": "778550"
  },
  {
    "text": "to the correct node in 1:9 we made",
    "start": "778550",
    "end": "782840"
  },
  {
    "text": "further improvements to the scheduler so",
    "start": "782840",
    "end": "785660"
  },
  {
    "text": "that the persistent volume claim binding",
    "start": "785660",
    "end": "788360"
  },
  {
    "text": "also happens during pod scheduling so",
    "start": "788360",
    "end": "791090"
  },
  {
    "text": "what happened before is that the",
    "start": "791090",
    "end": "793630"
  },
  {
    "text": "persistent volume binding would happen",
    "start": "793630",
    "end": "796190"
  },
  {
    "text": "independently from when your pod is",
    "start": "796190",
    "end": "798290"
  },
  {
    "text": "being scheduled so it's very possible",
    "start": "798290",
    "end": "800480"
  },
  {
    "text": "the binder could have chosen a volume",
    "start": "800480",
    "end": "802880"
  },
  {
    "text": "that can't actually run your pod or it",
    "start": "802880",
    "end": "805910"
  },
  {
    "text": "could have chosen a volume on a node",
    "start": "805910",
    "end": "807350"
  },
  {
    "text": "that couldn't actually run your pod but",
    "start": "807350",
    "end": "810290"
  },
  {
    "text": "now in 1:9 we improved that a lot better",
    "start": "810290",
    "end": "812540"
  },
  {
    "text": "so now the volume binding decision will",
    "start": "812540",
    "end": "817310"
  },
  {
    "text": "also take into account your pods CPU and",
    "start": "817310",
    "end": "821120"
  },
  {
    "text": "memory resources node affinity policies",
    "start": "821120",
    "end": "824540"
  },
  {
    "text": "and - pod anti affinity and affinity",
    "start": "824540",
    "end": "827150"
  },
  {
    "text": "node taints and selectors and so on and",
    "start": "827150",
    "end": "829520"
  },
  {
    "text": "so on it's all integrated together now",
    "start": "829520",
    "end": "834250"
  },
  {
    "start": "834000",
    "end": "849000"
  },
  {
    "text": "so to basically summarize what this",
    "start": "834820",
    "end": "838760"
  },
  {
    "text": "feature gives us is it gives us a",
    "start": "838760",
    "end": "841970"
  },
  {
    "text": "portable consistent user experience",
    "start": "841970",
    "end": "844270"
  },
  {
    "text": "across different clusters and different",
    "start": "844270",
    "end": "848180"
  },
  {
    "text": "environments and also across local and",
    "start": "848180",
    "end": "850400"
  },
  {
    "start": "849000",
    "end": "871000"
  },
  {
    "text": "remote storage we've added a general",
    "start": "850400",
    "end": "853730"
  },
  {
    "text": "mechanism for volume topology and",
    "start": "853730",
    "end": "857080"
  },
  {
    "text": "putting this all together we lower the",
    "start": "857080",
    "end": "859340"
  },
  {
    "text": "barrier to support these distributed",
    "start": "859340",
    "end": "861350"
  },
  {
    "text": "stateful workloads so now I'm going to",
    "start": "861350",
    "end": "864740"
  },
  {
    "text": "hand it off to Erin who's going to talk",
    "start": "864740",
    "end": "866840"
  },
  {
    "text": "about another feature we added to help",
    "start": "866840",
    "end": "868880"
  },
  {
    "text": "support these workloads",
    "start": "868880",
    "end": "872050"
  },
  {
    "start": "871000",
    "end": "962000"
  },
  {
    "text": "so in addition whoa speaker to the local",
    "start": "872090",
    "end": "876380"
  },
  {
    "text": "persistent volumes you know it might be",
    "start": "876380",
    "end": "878780"
  },
  {
    "text": "that you need to keep it local it's not",
    "start": "878780",
    "end": "881120"
  },
  {
    "text": "like you work for the NSA and you put",
    "start": "881120",
    "end": "883220"
  },
  {
    "text": "all the top-secret data out on an s3",
    "start": "883220",
    "end": "885410"
  },
  {
    "text": "volume for the world so in addition to",
    "start": "885410",
    "end": "888560"
  },
  {
    "text": "having local the the creme de la creme",
    "start": "888560",
    "end": "890750"
  },
  {
    "text": "is really having local raw so a lot of",
    "start": "890750",
    "end": "893150"
  },
  {
    "text": "applications can actually use have the",
    "start": "893150",
    "end": "895490"
  },
  {
    "text": "performance benefits to do this though",
    "start": "895490",
    "end": "897980"
  },
  {
    "text": "it's not completely included in the 1.9",
    "start": "897980",
    "end": "899870"
  },
  {
    "text": "we had some specific goals to expose rob",
    "start": "899870",
    "end": "903170"
  },
  {
    "text": "block devices not as mounts but actual",
    "start": "903170",
    "end": "905750"
  },
  {
    "text": "devices within kubernetes enable durable",
    "start": "905750",
    "end": "908780"
  },
  {
    "text": "access so what happens when the lights",
    "start": "908780",
    "end": "910490"
  },
  {
    "text": "go out to make sure that our data is",
    "start": "910490",
    "end": "912050"
  },
  {
    "text": "there and it's secure provide",
    "start": "912050",
    "end": "913970"
  },
  {
    "text": "flexibility for users and vendors to",
    "start": "913970",
    "end": "915950"
  },
  {
    "text": "support all storage types",
    "start": "915950",
    "end": "917510"
  },
  {
    "text": "prior to 1.9 all volumes that were",
    "start": "917510",
    "end": "921500"
  },
  {
    "text": "created in kubernetes whereas file",
    "start": "921500",
    "end": "923420"
  },
  {
    "text": "system was always applied to them even",
    "start": "923420",
    "end": "925010"
  },
  {
    "text": "if they were you know started off as a",
    "start": "925010",
    "end": "926570"
  },
  {
    "text": "block device it ended up as a file",
    "start": "926570",
    "end": "928250"
  },
  {
    "text": "system so there was a lot of work I",
    "start": "928250",
    "end": "930620"
  },
  {
    "text": "don't know if you were able to make",
    "start": "930620",
    "end": "931730"
  },
  {
    "text": "mitzi heroes talk at 2:00 o'clock",
    "start": "931730",
    "end": "933440"
  },
  {
    "text": "talked about all the work that had to be",
    "start": "933440",
    "end": "935300"
  },
  {
    "text": "done to enable that to happen within the",
    "start": "935300",
    "end": "937130"
  },
  {
    "text": "flow and the last goal really was to",
    "start": "937130",
    "end": "939050"
  },
  {
    "text": "break github right Michelle yeah so um",
    "start": "939050",
    "end": "941420"
  },
  {
    "text": "if you ever wonder how exhausted the",
    "start": "941420",
    "end": "944180"
  },
  {
    "text": "community is in kubernetes to make sure",
    "start": "944180",
    "end": "946430"
  },
  {
    "text": "that we get things right we have an",
    "start": "946430",
    "end": "948860"
  },
  {
    "text": "incredible amount of conversation we",
    "start": "948860",
    "end": "951500"
  },
  {
    "text": "started with in a Google Doc eventually",
    "start": "951500",
    "end": "953090"
  },
  {
    "text": "moved it to a PR and eventually broke",
    "start": "953090",
    "end": "954890"
  },
  {
    "text": "github there were so many comments",
    "start": "954890",
    "end": "956480"
  },
  {
    "text": "within it but storage is nothing new a",
    "start": "956480",
    "end": "961670"
  },
  {
    "text": "lot of the problems that we're solving",
    "start": "961670",
    "end": "963260"
  },
  {
    "start": "962000",
    "end": "998000"
  },
  {
    "text": "though unique to kubernetes are still",
    "start": "963260",
    "end": "965840"
  },
  {
    "text": "important and so feedback is always",
    "start": "965840",
    "end": "967700"
  },
  {
    "text": "requested so I wanted to just quickly go",
    "start": "967700",
    "end": "969770"
  },
  {
    "text": "through so we have time to see",
    "start": "969770",
    "end": "971150"
  },
  {
    "text": "Michelle's demo what these API changes",
    "start": "971150",
    "end": "973850"
  },
  {
    "text": "we had to do for block to be able to",
    "start": "973850",
    "end": "975230"
  },
  {
    "text": "support that so mm-hmm",
    "start": "975230",
    "end": "977540"
  },
  {
    "text": "let's start out with the admin since",
    "start": "977540",
    "end": "979550"
  },
  {
    "text": "we're only supporting static",
    "start": "979550",
    "end": "980900"
  },
  {
    "text": "provisioning in 1.9 it starts with the",
    "start": "980900",
    "end": "983330"
  },
  {
    "text": "ax men creating a block device and then",
    "start": "983330",
    "end": "985310"
  },
  {
    "text": "indicating what volume mode that that",
    "start": "985310",
    "end": "987920"
  },
  {
    "text": "they want that volume to be consumed as",
    "start": "987920",
    "end": "990140"
  },
  {
    "text": "and this is block devoid of specifying",
    "start": "990140",
    "end": "993170"
  },
  {
    "text": "the volume mode it will default to",
    "start": "993170",
    "end": "995180"
  },
  {
    "text": "filesystem which is the expected",
    "start": "995180",
    "end": "997250"
  },
  {
    "text": "today now the users also put volume mode",
    "start": "997250",
    "end": "1002170"
  },
  {
    "start": "998000",
    "end": "1033000"
  },
  {
    "text": "block this allows us to be very",
    "start": "1002170",
    "end": "1004000"
  },
  {
    "text": "intentional about how we want to consume",
    "start": "1004000",
    "end": "1006430"
  },
  {
    "text": "the data in not and to make sure that",
    "start": "1006430",
    "end": "1009280"
  },
  {
    "text": "I've asked for block I expect block to",
    "start": "1009280",
    "end": "1012130"
  },
  {
    "text": "be considered on the back end the other",
    "start": "1012130",
    "end": "1014200"
  },
  {
    "text": "changes you'll see in the far right",
    "start": "1014200",
    "end": "1016210"
  },
  {
    "text": "corner is the volume devices if you're",
    "start": "1016210",
    "end": "1018790"
  },
  {
    "text": "familiar with pods and setting up your",
    "start": "1018790",
    "end": "1021250"
  },
  {
    "text": "storage before if you're using a file",
    "start": "1021250",
    "end": "1023620"
  },
  {
    "text": "system you would put that it's a volume",
    "start": "1023620",
    "end": "1025630"
  },
  {
    "text": "mount if you're using a block device you",
    "start": "1025630",
    "end": "1028060"
  },
  {
    "text": "put volume devices along with the path",
    "start": "1028060",
    "end": "1030220"
  },
  {
    "text": "of the container on the actual device",
    "start": "1030220",
    "end": "1033240"
  },
  {
    "start": "1033000",
    "end": "1548000"
  },
  {
    "text": "now for the demo alright thank you so",
    "start": "1033240",
    "end": "1038490"
  },
  {
    "text": "I'm going to demo and hopefully show you",
    "start": "1038490",
    "end": "1042160"
  },
  {
    "text": "how easy it is now to switch between",
    "start": "1042160",
    "end": "1044530"
  },
  {
    "text": "remote and local storage now that you",
    "start": "1044530",
    "end": "1048188"
  },
  {
    "text": "can use both of them with the same",
    "start": "1048189",
    "end": "1050230"
  },
  {
    "text": "persistent volume claim objects that you",
    "start": "1050230",
    "end": "1052270"
  },
  {
    "text": "use today I've taken the basic",
    "start": "1052270",
    "end": "1055650"
  },
  {
    "text": "replicated my sequel example straight",
    "start": "1055650",
    "end": "1057970"
  },
  {
    "text": "from the kubernetes website and I will",
    "start": "1057970",
    "end": "1062200"
  },
  {
    "text": "go ahead and load up my cluster now",
    "start": "1062200",
    "end": "1065790"
  },
  {
    "text": "let's see this is hard because I can't I",
    "start": "1065790",
    "end": "1069370"
  },
  {
    "text": "can only see ok maybe it's better if I",
    "start": "1069370",
    "end": "1074320"
  },
  {
    "text": "like face to face the thing I'm just",
    "start": "1074320",
    "end": "1077890"
  },
  {
    "text": "gonna do a demo like this alright",
    "start": "1077890",
    "end": "1081630"
  },
  {
    "text": "alright where's the minimize button I",
    "start": "1081630",
    "end": "1087220"
  },
  {
    "text": "can't see it this is the monitor we all",
    "start": "1087220",
    "end": "1089650"
  },
  {
    "text": "dream of at home ok let's do that",
    "start": "1089650",
    "end": "1093510"
  },
  {
    "text": "all right so let's take a look okay I've",
    "start": "1094270",
    "end": "1101170"
  },
  {
    "text": "oak an you see it it's like that's okay",
    "start": "1101170",
    "end": "1105280"
  },
  {
    "text": "it's just one character off the edge it",
    "start": "1105280",
    "end": "1107380"
  },
  {
    "text": "won't hurt anything so I have my two",
    "start": "1107380",
    "end": "1110980"
  },
  {
    "text": "files here the first file one file for",
    "start": "1110980",
    "end": "1115540"
  },
  {
    "text": "specifying remote storage and the second",
    "start": "1115540",
    "end": "1117910"
  },
  {
    "text": "file for specifying local storage let's",
    "start": "1117910",
    "end": "1120850"
  },
  {
    "text": "take a look at my remote file of my",
    "start": "1120850",
    "end": "1123670"
  },
  {
    "text": "stateful set can you see the colors okay",
    "start": "1123670",
    "end": "1128520"
  },
  {
    "text": "now on the back",
    "start": "1128520",
    "end": "1130150"
  },
  {
    "text": "oh well I'll upload this on youtube",
    "start": "1130150",
    "end": "1134550"
  },
  {
    "text": "alright so you can see I've named my",
    "start": "1134790",
    "end": "1139120"
  },
  {
    "text": "stateful set my sequel and I have",
    "start": "1139120",
    "end": "1143260"
  },
  {
    "text": "specified three replicas for the",
    "start": "1143260",
    "end": "1145210"
  },
  {
    "text": "stateful set and if we look at the",
    "start": "1145210",
    "end": "1148390"
  },
  {
    "text": "bottom of the screen here this is where",
    "start": "1148390",
    "end": "1151210"
  },
  {
    "text": "I define my volume claims in the staple",
    "start": "1151210",
    "end": "1154179"
  },
  {
    "text": "set and you notice here that I specified",
    "start": "1154179",
    "end": "1156850"
  },
  {
    "text": "my storage cost name to be standard and",
    "start": "1156850",
    "end": "1159730"
  },
  {
    "text": "then I've specified I want 360 gigs so",
    "start": "1159730",
    "end": "1163500"
  },
  {
    "text": "standard in my cluster refers to a GCE",
    "start": "1163500",
    "end": "1169000"
  },
  {
    "text": "remote storage and I've already deployed",
    "start": "1169000",
    "end": "1174670"
  },
  {
    "text": "this cluster or sorry alright I've",
    "start": "1174670",
    "end": "1177670"
  },
  {
    "text": "already deployed the stateful set so",
    "start": "1177670",
    "end": "1179650"
  },
  {
    "text": "let's just take a look quickly okay so I",
    "start": "1179650",
    "end": "1186160"
  },
  {
    "text": "have three replicas running and if we",
    "start": "1186160",
    "end": "1190900"
  },
  {
    "text": "look at the volumes that those replicas",
    "start": "1190900",
    "end": "1193750"
  },
  {
    "text": "use you'll see that there are three",
    "start": "1193750",
    "end": "1198900"
  },
  {
    "text": "persistent volume claims one for each",
    "start": "1198900",
    "end": "1201340"
  },
  {
    "text": "replicas you can see that these",
    "start": "1201340",
    "end": "1204340"
  },
  {
    "text": "persistent volume claims use the storage",
    "start": "1204340",
    "end": "1206950"
  },
  {
    "text": "class standard and if we look at the",
    "start": "1206950",
    "end": "1210429"
  },
  {
    "text": "details of one of the volumes that the",
    "start": "1210429",
    "end": "1213880"
  },
  {
    "text": "claim is bound to let's take a look",
    "start": "1213880",
    "end": "1218880"
  },
  {
    "text": "pick one you will see that this",
    "start": "1219220",
    "end": "1225430"
  },
  {
    "text": "persistent volume is a GCE persistent",
    "start": "1225430",
    "end": "1228220"
  },
  {
    "text": "disk so this is a and the storage class",
    "start": "1228220",
    "end": "1231310"
  },
  {
    "text": "is standard so this is my remote",
    "start": "1231310",
    "end": "1237220"
  },
  {
    "text": "stateful set now I want to launch a",
    "start": "1237220",
    "end": "1240820"
  },
  {
    "text": "similar stateful set but change it to",
    "start": "1240820",
    "end": "1243730"
  },
  {
    "text": "use local storage so I will quickly show",
    "start": "1243730",
    "end": "1247420"
  },
  {
    "text": "you the diff between the two",
    "start": "1247420",
    "end": "1251370"
  },
  {
    "text": "so other than some oh this does not look",
    "start": "1259640",
    "end": "1263660"
  },
  {
    "text": "like it if I did something wrong",
    "start": "1263660",
    "end": "1268179"
  },
  {
    "text": "okay here we go this looks more like a",
    "start": "1276290",
    "end": "1278360"
  },
  {
    "text": "DIF so you can see I've made some",
    "start": "1278360",
    "end": "1282590"
  },
  {
    "text": "cosmetic changes I just changed the name",
    "start": "1282590",
    "end": "1284780"
  },
  {
    "text": "to for the local one to call it my",
    "start": "1284780",
    "end": "1287780"
  },
  {
    "text": "sequel faster",
    "start": "1287780",
    "end": "1289400"
  },
  {
    "text": "other than the cosmetic name change the",
    "start": "1289400",
    "end": "1292580"
  },
  {
    "text": "most important change I've made is I",
    "start": "1292580",
    "end": "1294800"
  },
  {
    "text": "changed a storage class name for the",
    "start": "1294800",
    "end": "1298190"
  },
  {
    "text": "remote spec I use a storage class name",
    "start": "1298190",
    "end": "1300320"
  },
  {
    "text": "called standard and now for my local",
    "start": "1300320",
    "end": "1303350"
  },
  {
    "text": "spec I'm using the storage class name",
    "start": "1303350",
    "end": "1305240"
  },
  {
    "text": "called local scuzzy that's the only",
    "start": "1305240",
    "end": "1307970"
  },
  {
    "text": "change I've made to this stateful set",
    "start": "1307970",
    "end": "1310310"
  },
  {
    "text": "between the remote and local storage so",
    "start": "1310310",
    "end": "1312490"
  },
  {
    "text": "if I go ahead and launch this stateful",
    "start": "1312490",
    "end": "1317840"
  },
  {
    "text": "set",
    "start": "1317840",
    "end": "1320230"
  },
  {
    "text": "let me start some watches okay and let's",
    "start": "1320710",
    "end": "1330470"
  },
  {
    "text": "go ahead and create it so you'll see",
    "start": "1330470",
    "end": "1332780"
  },
  {
    "text": "that the safest controller has created",
    "start": "1332780",
    "end": "1334880"
  },
  {
    "text": "the first pod in the stateful set on the",
    "start": "1334880",
    "end": "1337160"
  },
  {
    "text": "left and it's also created the first",
    "start": "1337160",
    "end": "1339110"
  },
  {
    "text": "persisted volume claim which immediately",
    "start": "1339110",
    "end": "1341420"
  },
  {
    "text": "got bound to a local persistent volume",
    "start": "1341420",
    "end": "1343820"
  },
  {
    "text": "on the system and now the volumes are",
    "start": "1343820",
    "end": "1347420"
  },
  {
    "text": "getting mounted in the first pod and",
    "start": "1347420",
    "end": "1349520"
  },
  {
    "text": "we're waiting for them to become running",
    "start": "1349520",
    "end": "1352780"
  },
  {
    "text": "now the containers are running so the",
    "start": "1352780",
    "end": "1355520"
  },
  {
    "text": "stateful second chiller creates the",
    "start": "1355520",
    "end": "1356930"
  },
  {
    "text": "second pod and the second persistent",
    "start": "1356930",
    "end": "1359330"
  },
  {
    "text": "volume claim which gets bound then it",
    "start": "1359330",
    "end": "1362510"
  },
  {
    "text": "goes ahead and mounts the volumes and",
    "start": "1362510",
    "end": "1364700"
  },
  {
    "text": "brings up the containers and then waits",
    "start": "1364700",
    "end": "1366950"
  },
  {
    "text": "for the second set of containers to come",
    "start": "1366950",
    "end": "1369500"
  },
  {
    "text": "up and it's waiting and coming it's kind",
    "start": "1369500",
    "end": "1374570"
  },
  {
    "text": "of slow",
    "start": "1374570",
    "end": "1376990"
  },
  {
    "text": "all right over came up it like I didn't",
    "start": "1381650",
    "end": "1384350"
  },
  {
    "text": "even see it okay",
    "start": "1384350",
    "end": "1385250"
  },
  {
    "text": "it brought up this Oh so even it's now",
    "start": "1385250",
    "end": "1388460"
  },
  {
    "text": "on the third replica now and we created",
    "start": "1388460",
    "end": "1391130"
  },
  {
    "text": "the third persistent volume claim and Oh",
    "start": "1391130",
    "end": "1394340"
  },
  {
    "text": "everything's up okay that was fast",
    "start": "1394340",
    "end": "1396370"
  },
  {
    "text": "faster than I could talk so if we look",
    "start": "1396370",
    "end": "1400610"
  },
  {
    "text": "at let's summarize all this if we look",
    "start": "1400610",
    "end": "1403550"
  },
  {
    "text": "at all the pods on the system you'll see",
    "start": "1403550",
    "end": "1411200"
  },
  {
    "text": "I have six pods now three for my",
    "start": "1411200",
    "end": "1413630"
  },
  {
    "text": "stateful set that was using remote",
    "start": "1413630",
    "end": "1416150"
  },
  {
    "text": "storage three for my stateful set that",
    "start": "1416150",
    "end": "1418490"
  },
  {
    "text": "was using local storage if you look at",
    "start": "1418490",
    "end": "1421580"
  },
  {
    "text": "the persistent volume claims in my",
    "start": "1421580",
    "end": "1423980"
  },
  {
    "text": "cluster I also have six oops",
    "start": "1423980",
    "end": "1428950"
  },
  {
    "text": "three that are using my remote storage",
    "start": "1434090",
    "end": "1437299"
  },
  {
    "text": "which is a storage class standard and",
    "start": "1437299",
    "end": "1439669"
  },
  {
    "text": "three that are using my local storage",
    "start": "1439669",
    "end": "1442879"
  },
  {
    "text": "which which is local scuzzy and now if",
    "start": "1442879",
    "end": "1445999"
  },
  {
    "text": "we take a look at one of the persistent",
    "start": "1445999",
    "end": "1448549"
  },
  {
    "text": "volumes in detail which contains the",
    "start": "1448549",
    "end": "1451039"
  },
  {
    "text": "actual storage information on the",
    "start": "1451039",
    "end": "1454249"
  },
  {
    "text": "particular cluster",
    "start": "1454249",
    "end": "1457179"
  },
  {
    "text": "we'll see that this is a local volume it",
    "start": "1464350",
    "end": "1469720"
  },
  {
    "text": "has this path mount disks SSD one it's",
    "start": "1469720",
    "end": "1473950"
  },
  {
    "text": "in the storage class name local scuzzy",
    "start": "1473950",
    "end": "1477010"
  },
  {
    "text": "and then because this is an alpha",
    "start": "1477010",
    "end": "1478960"
  },
  {
    "text": "feature the notification it field has to",
    "start": "1478960",
    "end": "1482530"
  },
  {
    "text": "be specified in an annotation which is",
    "start": "1482530",
    "end": "1484840"
  },
  {
    "text": "kind of a pain but it will become filled",
    "start": "1484840",
    "end": "1487059"
  },
  {
    "text": "in beta but here you can kind of make it",
    "start": "1487059",
    "end": "1491440"
  },
  {
    "text": "out this is where we specify the label",
    "start": "1491440",
    "end": "1495030"
  },
  {
    "text": "kubernetes the i/o host name in values",
    "start": "1495030",
    "end": "1498820"
  },
  {
    "text": "and then this is the name of my node so",
    "start": "1498820",
    "end": "1504600"
  },
  {
    "text": "there you can see that's so that's the",
    "start": "1504600",
    "end": "1507610"
  },
  {
    "text": "demo there you can see how easy it is to",
    "start": "1507610",
    "end": "1510970"
  },
  {
    "text": "now switch between local and remote",
    "start": "1510970",
    "end": "1512620"
  },
  {
    "text": "storage just by changing the storage",
    "start": "1512620",
    "end": "1514660"
  },
  {
    "text": "class this is a huge improvement from",
    "start": "1514660",
    "end": "1517390"
  },
  {
    "text": "what you had to do before which is you",
    "start": "1517390",
    "end": "1520360"
  },
  {
    "text": "have to use a completely different",
    "start": "1520360",
    "end": "1521559"
  },
  {
    "text": "method you couldn't even use persistent",
    "start": "1521559",
    "end": "1523090"
  },
  {
    "text": "volume claims you have to write your own",
    "start": "1523090",
    "end": "1525929"
  },
  {
    "text": "schedulers your own operators your own",
    "start": "1525929",
    "end": "1528910"
  },
  {
    "text": "all this extra infrastructure just to",
    "start": "1528910",
    "end": "1531760"
  },
  {
    "text": "use local storage and now you no longer",
    "start": "1531760",
    "end": "1534309"
  },
  {
    "text": "have to do that so let's go back where's",
    "start": "1534309",
    "end": "1544630"
  },
  {
    "text": "my mouse all right",
    "start": "1544630",
    "end": "1547800"
  },
  {
    "text": "all right so now I would also encourage",
    "start": "1547800",
    "end": "1550990"
  },
  {
    "start": "1548000",
    "end": "1578000"
  },
  {
    "text": "you to try it out yourself there's a",
    "start": "1550990",
    "end": "1554140"
  },
  {
    "text": "user guide at the end of this",
    "start": "1554140",
    "end": "1555370"
  },
  {
    "text": "presentation that will show you how to",
    "start": "1555370",
    "end": "1556990"
  },
  {
    "text": "bring up and enable this alpha feature",
    "start": "1556990",
    "end": "1559690"
  },
  {
    "text": "and to create some local volumes you",
    "start": "1559690",
    "end": "1563080"
  },
  {
    "text": "know take existing stateful set examples",
    "start": "1563080",
    "end": "1565210"
  },
  {
    "text": "you have or any home charts you may have",
    "start": "1565210",
    "end": "1568120"
  },
  {
    "text": "just change the storage class name to",
    "start": "1568120",
    "end": "1570490"
  },
  {
    "text": "use a local local storage class and then",
    "start": "1570490",
    "end": "1573370"
  },
  {
    "text": "you know just experiment and give us",
    "start": "1573370",
    "end": "1575890"
  },
  {
    "text": "feedback all right I think Michelle",
    "start": "1575890",
    "end": "1582430"
  },
  {
    "start": "1578000",
    "end": "1606000"
  },
  {
    "text": "already gave a really good summary about",
    "start": "1582430",
    "end": "1584650"
  },
  {
    "text": "why local persistent volumes are",
    "start": "1584650",
    "end": "1586270"
  },
  {
    "text": "important and the work that's been done",
    "start": "1586270",
    "end": "1587770"
  },
  {
    "text": "to have no to infinity and smarter",
    "start": "1587770",
    "end": "1590260"
  },
  {
    "text": "scheduling and also how we're going to",
    "start": "1590260",
    "end": "1593380"
  },
  {
    "text": "be provisioning wrong block volumes as",
    "start": "1593380",
    "end": "1595150"
  },
  {
    "text": "part of the API",
    "start": "1595150",
    "end": "1596650"
  },
  {
    "text": "the only plugin that made it into one",
    "start": "1596650",
    "end": "1598660"
  },
  {
    "text": "not nine is for fibre channel but",
    "start": "1598660",
    "end": "1600130"
  },
  {
    "text": "there's a bunch more on the way you know",
    "start": "1600130",
    "end": "1601870"
  },
  {
    "text": "in all of these are building blocks to",
    "start": "1601870",
    "end": "1603400"
  },
  {
    "text": "allow us to fully enable stateful",
    "start": "1603400",
    "end": "1605140"
  },
  {
    "text": "distributed workloads",
    "start": "1605140",
    "end": "1606540"
  },
  {
    "start": "1606000",
    "end": "1659000"
  },
  {
    "text": "so in the future there's still a lot of",
    "start": "1606540",
    "end": "1608860"
  },
  {
    "text": "work to do there is a ground work",
    "start": "1608860",
    "end": "1611650"
  },
  {
    "text": "already set forth as Michelle mentioned",
    "start": "1611650",
    "end": "1613360"
  },
  {
    "text": "as part of the topology for dynamically",
    "start": "1613360",
    "end": "1615760"
  },
  {
    "text": "provisioning local volumes we also need",
    "start": "1615760",
    "end": "1618190"
  },
  {
    "text": "to have dynamic provisioners for Rob",
    "start": "1618190",
    "end": "1619840"
  },
  {
    "text": "lock volumes for these really to become",
    "start": "1619840",
    "end": "1623290"
  },
  {
    "text": "fully utilizable and scalable within the",
    "start": "1623290",
    "end": "1626200"
  },
  {
    "text": "environment and then the plugins these",
    "start": "1626200",
    "end": "1628900"
  },
  {
    "text": "are just some of the plugins that we're",
    "start": "1628900",
    "end": "1630580"
  },
  {
    "text": "looking at updating with this support",
    "start": "1630580",
    "end": "1632290"
  },
  {
    "text": "and then lastly the CSI interface I",
    "start": "1632290",
    "end": "1635140"
  },
  {
    "text": "don't know if you guys have heard of",
    "start": "1635140",
    "end": "1636430"
  },
  {
    "text": "that it's the buzz around storage also",
    "start": "1636430",
    "end": "1638890"
  },
  {
    "text": "will need to be updated for lot of",
    "start": "1638890",
    "end": "1641290"
  },
  {
    "text": "devices these two links will guide you",
    "start": "1641290",
    "end": "1644260"
  },
  {
    "text": "on github on how to set up both of these",
    "start": "1644260",
    "end": "1646870"
  },
  {
    "text": "so please check them out again give us",
    "start": "1646870",
    "end": "1649240"
  },
  {
    "text": "feedback and if there's any questions we",
    "start": "1649240",
    "end": "1651730"
  },
  {
    "text": "would love to take them",
    "start": "1651730",
    "end": "1655140"
  },
  {
    "text": "[Applause]",
    "start": "1659130",
    "end": "1661589"
  }
]