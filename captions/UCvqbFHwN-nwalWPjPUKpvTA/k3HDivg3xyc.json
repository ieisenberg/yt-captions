[
  {
    "text": "[Music]",
    "start": "760",
    "end": "3919"
  },
  {
    "text": "hi",
    "start": "3919",
    "end": "4319"
  },
  {
    "text": "i'm lynne clark and i make code cartoons",
    "start": "4319",
    "end": "8000"
  },
  {
    "text": "i also work at fastly which is doing a",
    "start": "8000",
    "end": "9679"
  },
  {
    "text": "ton of cool things with webassembly",
    "start": "9679",
    "end": "11759"
  },
  {
    "text": "to make better edge compute possible",
    "start": "11759",
    "end": "15120"
  },
  {
    "text": "and i also am a co-founder of the",
    "start": "15120",
    "end": "16400"
  },
  {
    "text": "bytecode alliance which is building a",
    "start": "16400",
    "end": "17920"
  },
  {
    "text": "vision of a future webassembly ecosystem",
    "start": "17920",
    "end": "19760"
  },
  {
    "text": "that extends beyond the browser",
    "start": "19760",
    "end": "23039"
  },
  {
    "text": "before i start i want to say thank you",
    "start": "23039",
    "end": "24960"
  },
  {
    "text": "to the organizers for inviting me to",
    "start": "24960",
    "end": "26640"
  },
  {
    "text": "speak here today",
    "start": "26640",
    "end": "28320"
  },
  {
    "text": "i was really excited when i was asked to",
    "start": "28320",
    "end": "29920"
  },
  {
    "text": "give this talk in the webassembly world",
    "start": "29920",
    "end": "32398"
  },
  {
    "text": "we've been looking at many of the same",
    "start": "32399",
    "end": "34000"
  },
  {
    "text": "problems that all of you in the cloud",
    "start": "34000",
    "end": "35440"
  },
  {
    "text": "native community have been looking at",
    "start": "35440",
    "end": "36880"
  },
  {
    "text": "too",
    "start": "36880",
    "end": "37920"
  },
  {
    "text": "for example one problem we've been",
    "start": "37920",
    "end": "39200"
  },
  {
    "text": "thinking through is how do you deal with",
    "start": "39200",
    "end": "41520"
  },
  {
    "text": "code",
    "start": "41520",
    "end": "42000"
  },
  {
    "text": "that depends on the concept of a file",
    "start": "42000",
    "end": "43920"
  },
  {
    "text": "system in places where you don't",
    "start": "43920",
    "end": "45920"
  },
  {
    "text": "actually have a file system available",
    "start": "45920",
    "end": "48160"
  },
  {
    "text": "or another problem how do you create a",
    "start": "48160",
    "end": "50239"
  },
  {
    "text": "clear separation between the business",
    "start": "50239",
    "end": "51840"
  },
  {
    "text": "logic of an app and the orchestration of",
    "start": "51840",
    "end": "53760"
  },
  {
    "text": "that app",
    "start": "53760",
    "end": "55199"
  },
  {
    "text": "so we have a lot of goals in common but",
    "start": "55199",
    "end": "56719"
  },
  {
    "text": "our communities have been coming at",
    "start": "56719",
    "end": "58079"
  },
  {
    "text": "these problems",
    "start": "58079",
    "end": "58960"
  },
  {
    "text": "from different perspectives and bringing",
    "start": "58960",
    "end": "60719"
  },
  {
    "text": "different contexts to the conversation",
    "start": "60719",
    "end": "63760"
  },
  {
    "text": "so i think that there are lots of",
    "start": "63760",
    "end": "64799"
  },
  {
    "text": "conversations that we can have between",
    "start": "64799",
    "end": "66320"
  },
  {
    "text": "our communities combining these",
    "start": "66320",
    "end": "67760"
  },
  {
    "text": "perspectives",
    "start": "67760",
    "end": "68799"
  },
  {
    "text": "and seeing what opportunities they open",
    "start": "68799",
    "end": "70400"
  },
  {
    "text": "up for each other",
    "start": "70400",
    "end": "72560"
  },
  {
    "text": "before i dive in more deeply into how",
    "start": "72560",
    "end": "75040"
  },
  {
    "text": "we've been thinking about these things",
    "start": "75040",
    "end": "77439"
  },
  {
    "text": "i want to explain what made us start",
    "start": "77439",
    "end": "79040"
  },
  {
    "text": "thinking about them in the first place",
    "start": "79040",
    "end": "81759"
  },
  {
    "text": "so why was webassembly created",
    "start": "81759",
    "end": "84799"
  },
  {
    "text": "the browsers wanted developers to be",
    "start": "84799",
    "end": "86400"
  },
  {
    "text": "able to compile code bases that were",
    "start": "86400",
    "end": "88159"
  },
  {
    "text": "written in languages like c",
    "start": "88159",
    "end": "89520"
  },
  {
    "text": "plus and rust to a single file and then",
    "start": "89520",
    "end": "92079"
  },
  {
    "text": "have that code run at near native speeds",
    "start": "92079",
    "end": "94079"
  },
  {
    "text": "in the browser",
    "start": "94079",
    "end": "96000"
  },
  {
    "text": "and they wanted it to run in a very",
    "start": "96000",
    "end": "97600"
  },
  {
    "text": "secure way in a well isolated sandbox",
    "start": "97600",
    "end": "100000"
  },
  {
    "text": "because you need that when you're",
    "start": "100000",
    "end": "101280"
  },
  {
    "text": "running code that you just downloaded",
    "start": "101280",
    "end": "103119"
  },
  {
    "text": "from the internet that you don't trust",
    "start": "103119",
    "end": "106000"
  },
  {
    "text": "to get that near native speed the",
    "start": "106000",
    "end": "107759"
  },
  {
    "text": "bytecode for this webassembly binary",
    "start": "107759",
    "end": "110079"
  },
  {
    "text": "needed to be as close as possible to the",
    "start": "110079",
    "end": "112159"
  },
  {
    "text": "native instruction set architecture or",
    "start": "112159",
    "end": "114640"
  },
  {
    "text": "isas like x86 or arm64",
    "start": "114640",
    "end": "117840"
  },
  {
    "text": "but without specializing to any",
    "start": "117840",
    "end": "119520"
  },
  {
    "text": "particular isa",
    "start": "119520",
    "end": "121840"
  },
  {
    "text": "so this meant creating a really low",
    "start": "121840",
    "end": "123680"
  },
  {
    "text": "level abstraction over the various isas",
    "start": "123680",
    "end": "127840"
  },
  {
    "text": "made it easy to run the same binary",
    "start": "127840",
    "end": "129840"
  },
  {
    "text": "across a bunch of different machines",
    "start": "129840",
    "end": "131599"
  },
  {
    "text": "with different machine architectures",
    "start": "131599",
    "end": "134319"
  },
  {
    "text": "and this got developers really excited",
    "start": "134319",
    "end": "136080"
  },
  {
    "text": "even those that were working",
    "start": "136080",
    "end": "137440"
  },
  {
    "text": "outside completely outside of the",
    "start": "137440",
    "end": "140840"
  },
  {
    "text": "browser",
    "start": "140840",
    "end": "142319"
  },
  {
    "text": "but as these developers started bringing",
    "start": "142319",
    "end": "144160"
  },
  {
    "text": "web assembly to the server and to other",
    "start": "144160",
    "end": "146319"
  },
  {
    "text": "places they left some of the key",
    "start": "146319",
    "end": "147760"
  },
  {
    "text": "properties of webassembly behind",
    "start": "147760",
    "end": "150560"
  },
  {
    "text": "they were giving these web assemblies of",
    "start": "150560",
    "end": "152640"
  },
  {
    "text": "webassembly binaries full",
    "start": "152640",
    "end": "154000"
  },
  {
    "text": "access to the operating system system",
    "start": "154000",
    "end": "156160"
  },
  {
    "text": "call library",
    "start": "156160",
    "end": "157760"
  },
  {
    "text": "that compromised security and it also",
    "start": "157760",
    "end": "159519"
  },
  {
    "text": "compromised the portability since now",
    "start": "159519",
    "end": "161440"
  },
  {
    "text": "the binary was tied to a particular",
    "start": "161440",
    "end": "163280"
  },
  {
    "text": "operating system",
    "start": "163280",
    "end": "165360"
  },
  {
    "text": "so with this we realized we didn't just",
    "start": "165360",
    "end": "167519"
  },
  {
    "text": "need an abstract isa we also needed an",
    "start": "167519",
    "end": "170879"
  },
  {
    "text": "abstract operating system one that made",
    "start": "170879",
    "end": "173680"
  },
  {
    "text": "it possible to run the same binary",
    "start": "173680",
    "end": "175599"
  },
  {
    "text": "across a bunch of different operating",
    "start": "175599",
    "end": "177040"
  },
  {
    "text": "systems while preserving the",
    "start": "177040",
    "end": "178159"
  },
  {
    "text": "effectiveness",
    "start": "178159",
    "end": "179040"
  },
  {
    "text": "of the webassembly sandbox so we started",
    "start": "179040",
    "end": "182560"
  },
  {
    "text": "work on wazi",
    "start": "182560",
    "end": "183680"
  },
  {
    "text": "the webassembly system interface the",
    "start": "183680",
    "end": "186640"
  },
  {
    "text": "goal of wazzy is to create a very",
    "start": "186640",
    "end": "188640"
  },
  {
    "text": "modular set of system interfaces",
    "start": "188640",
    "end": "191599"
  },
  {
    "text": "these include all of the low-level kinds",
    "start": "191599",
    "end": "193360"
  },
  {
    "text": "of interfaces that you'd expect from",
    "start": "193360",
    "end": "195120"
  },
  {
    "text": "a system interface layer but it also",
    "start": "195120",
    "end": "197280"
  },
  {
    "text": "includes some higher level ones like",
    "start": "197280",
    "end": "198879"
  },
  {
    "text": "neural networks and crypto",
    "start": "198879",
    "end": "200560"
  },
  {
    "text": "and we expect many more of these higher",
    "start": "200560",
    "end": "202080"
  },
  {
    "text": "level apis to be added over time",
    "start": "202080",
    "end": "205360"
  },
  {
    "text": "these interfaces need to follow",
    "start": "205360",
    "end": "206959"
  },
  {
    "text": "capability-based security principles to",
    "start": "206959",
    "end": "209200"
  },
  {
    "text": "ensure that we maintain the integrity of",
    "start": "209200",
    "end": "210959"
  },
  {
    "text": "the sandbox",
    "start": "210959",
    "end": "212400"
  },
  {
    "text": "and for the most part these interfaces",
    "start": "212400",
    "end": "214400"
  },
  {
    "text": "also need to be portable across",
    "start": "214400",
    "end": "216319"
  },
  {
    "text": "the major operating systems although we",
    "start": "216319",
    "end": "219120"
  },
  {
    "text": "are okay with",
    "start": "219120",
    "end": "220159"
  },
  {
    "text": "system specific interface modules for",
    "start": "220159",
    "end": "221920"
  },
  {
    "text": "certainly narrowly scoped",
    "start": "221920",
    "end": "224000"
  },
  {
    "text": "use cases it was when we started trying",
    "start": "224000",
    "end": "228319"
  },
  {
    "text": "to make this portability work that we",
    "start": "228319",
    "end": "230159"
  },
  {
    "text": "started getting to some of the problems",
    "start": "230159",
    "end": "231599"
  },
  {
    "text": "that i mentioned before",
    "start": "231599",
    "end": "233920"
  },
  {
    "text": "these step problems started coming to",
    "start": "233920",
    "end": "235360"
  },
  {
    "text": "light when we were thinking about a",
    "start": "235360",
    "end": "236799"
  },
  {
    "text": "pretty core concept in many operating",
    "start": "236799",
    "end": "238879"
  },
  {
    "text": "systems the file system",
    "start": "238879",
    "end": "242400"
  },
  {
    "text": "a lot of code today depends on the file",
    "start": "242400",
    "end": "244560"
  },
  {
    "text": "system",
    "start": "244560",
    "end": "245680"
  },
  {
    "text": "and the code uses the file system for",
    "start": "245680",
    "end": "247519"
  },
  {
    "text": "many different tasks",
    "start": "247519",
    "end": "249360"
  },
  {
    "text": "so it's where you persist data it's",
    "start": "249360",
    "end": "251519"
  },
  {
    "text": "where you share data between two",
    "start": "251519",
    "end": "252879"
  },
  {
    "text": "programs that are running in different",
    "start": "252879",
    "end": "254080"
  },
  {
    "text": "processes",
    "start": "254080",
    "end": "255439"
  },
  {
    "text": "it's where you put the code for",
    "start": "255439",
    "end": "256720"
  },
  {
    "text": "executables it's where configuration",
    "start": "256720",
    "end": "258720"
  },
  {
    "text": "lives",
    "start": "258720",
    "end": "259280"
  },
  {
    "text": "as where assets get stored files are",
    "start": "259280",
    "end": "262720"
  },
  {
    "text": "like these swiss army knives that are",
    "start": "262720",
    "end": "264560"
  },
  {
    "text": "used for all of these different tasks",
    "start": "264560",
    "end": "267600"
  },
  {
    "text": "but as we were thinking about all the",
    "start": "267600",
    "end": "269040"
  },
  {
    "text": "places where we wanted to run wazzy",
    "start": "269040",
    "end": "271520"
  },
  {
    "text": "we started wondering whether or not this",
    "start": "271520",
    "end": "273840"
  },
  {
    "text": "was the right abstraction to use",
    "start": "273840",
    "end": "277600"
  },
  {
    "text": "the file achieved its central position",
    "start": "277680",
    "end": "279759"
  },
  {
    "text": "in system interfaces during a very",
    "start": "279759",
    "end": "281360"
  },
  {
    "text": "different time",
    "start": "281360",
    "end": "282000"
  },
  {
    "text": "in software development there were a few",
    "start": "282000",
    "end": "284720"
  },
  {
    "text": "operating systems that really entrenched",
    "start": "284720",
    "end": "286560"
  },
  {
    "text": "the file",
    "start": "286560",
    "end": "287120"
  },
  {
    "text": "in this privileged position and these",
    "start": "287120",
    "end": "289120"
  },
  {
    "text": "operating systems were first being",
    "start": "289120",
    "end": "290720"
  },
  {
    "text": "developed in the 1970s and 80s",
    "start": "290720",
    "end": "293520"
  },
  {
    "text": "this is when you had the rise of the",
    "start": "293520",
    "end": "295040"
  },
  {
    "text": "mini computer and after that the",
    "start": "295040",
    "end": "296479"
  },
  {
    "text": "personal computer",
    "start": "296479",
    "end": "297840"
  },
  {
    "text": "mostly to help with office work which of",
    "start": "297840",
    "end": "299759"
  },
  {
    "text": "course was organized in real paper files",
    "start": "299759",
    "end": "303919"
  },
  {
    "text": "for these kinds of systems having a file",
    "start": "303919",
    "end": "306000"
  },
  {
    "text": "system and having direct access to that",
    "start": "306000",
    "end": "307919"
  },
  {
    "text": "file system made a whole lot of sense",
    "start": "307919",
    "end": "311520"
  },
  {
    "text": "if you look at the systems that we're",
    "start": "311520",
    "end": "312880"
  },
  {
    "text": "building now though things look a bit",
    "start": "312880",
    "end": "315199"
  },
  {
    "text": "different",
    "start": "315199",
    "end": "316400"
  },
  {
    "text": "we're still building applications for",
    "start": "316400",
    "end": "318080"
  },
  {
    "text": "the personal computer",
    "start": "318080",
    "end": "319600"
  },
  {
    "text": "but with things like browsers we started",
    "start": "319600",
    "end": "321360"
  },
  {
    "text": "running applications inside of other",
    "start": "321360",
    "end": "322960"
  },
  {
    "text": "applications",
    "start": "322960",
    "end": "324400"
  },
  {
    "text": "places where you probably don't want the",
    "start": "324400",
    "end": "325840"
  },
  {
    "text": "inner application to have direct access",
    "start": "325840",
    "end": "327840"
  },
  {
    "text": "to the file system",
    "start": "327840",
    "end": "329759"
  },
  {
    "text": "and then as we started moving",
    "start": "329759",
    "end": "331120"
  },
  {
    "text": "applications to the cloud and edge",
    "start": "331120",
    "end": "332479"
  },
  {
    "text": "networks and as iot devices started",
    "start": "332479",
    "end": "334400"
  },
  {
    "text": "proliferating",
    "start": "334400",
    "end": "335680"
  },
  {
    "text": "we suddenly had an entirely different",
    "start": "335680",
    "end": "337440"
  },
  {
    "text": "landscape where direct access to a real",
    "start": "337440",
    "end": "339600"
  },
  {
    "text": "file system was the exception not the",
    "start": "339600",
    "end": "341360"
  },
  {
    "text": "norm",
    "start": "341360",
    "end": "343280"
  },
  {
    "text": "and on top of all of that as we've moved",
    "start": "343280",
    "end": "346080"
  },
  {
    "text": "towards having more modular ecosystems",
    "start": "346080",
    "end": "348720"
  },
  {
    "text": "of open source code that you plug",
    "start": "348720",
    "end": "350080"
  },
  {
    "text": "together like npm or pi pi",
    "start": "350080",
    "end": "352160"
  },
  {
    "text": "these file systems are presenting",
    "start": "352160",
    "end": "353840"
  },
  {
    "text": "maintainability and security problems",
    "start": "353840",
    "end": "355440"
  },
  {
    "text": "because the way that these file systems",
    "start": "355440",
    "end": "356880"
  },
  {
    "text": "are used",
    "start": "356880",
    "end": "358080"
  },
  {
    "text": "is basically like having one big giant",
    "start": "358080",
    "end": "360560"
  },
  {
    "text": "pile",
    "start": "360560",
    "end": "361120"
  },
  {
    "text": "of global shared mutable state",
    "start": "361120",
    "end": "364639"
  },
  {
    "text": "given all of this files don't really",
    "start": "364800",
    "end": "367199"
  },
  {
    "text": "feel like the right kind of universal",
    "start": "367199",
    "end": "368720"
  },
  {
    "text": "abstraction anymore",
    "start": "368720",
    "end": "371039"
  },
  {
    "text": "if we're going to try and break out of",
    "start": "371039",
    "end": "372720"
  },
  {
    "text": "this file-centric paradigm",
    "start": "372720",
    "end": "374639"
  },
  {
    "text": "we need to think about what a file",
    "start": "374639",
    "end": "376479"
  },
  {
    "text": "actually is and what it does",
    "start": "376479",
    "end": "378639"
  },
  {
    "text": "so what exactly is a file well a file",
    "start": "378639",
    "end": "382000"
  },
  {
    "text": "consists of two things",
    "start": "382000",
    "end": "383759"
  },
  {
    "text": "some bytes that encode content and you",
    "start": "383759",
    "end": "385600"
  },
  {
    "text": "can think of this as an array or stream",
    "start": "385600",
    "end": "388639"
  },
  {
    "text": "this is the data and other bytes that",
    "start": "388639",
    "end": "391600"
  },
  {
    "text": "contain metadata about that data",
    "start": "391600",
    "end": "394960"
  },
  {
    "text": "so this includes things like the name of",
    "start": "394960",
    "end": "396639"
  },
  {
    "text": "the file timestamps permissions",
    "start": "396639",
    "end": "398960"
  },
  {
    "text": "and what underlying device the file is",
    "start": "398960",
    "end": "401039"
  },
  {
    "text": "stored on",
    "start": "401039",
    "end": "403600"
  },
  {
    "text": "it's the second part here where we start",
    "start": "403759",
    "end": "405919"
  },
  {
    "text": "to have problems",
    "start": "405919",
    "end": "408080"
  },
  {
    "text": "when you're working with this metadata",
    "start": "408080",
    "end": "409599"
  },
  {
    "text": "that's when you need to know about the",
    "start": "409599",
    "end": "411199"
  },
  {
    "text": "conventions of the host system that",
    "start": "411199",
    "end": "412560"
  },
  {
    "text": "you're running on",
    "start": "412560",
    "end": "414720"
  },
  {
    "text": "but when you think about what most",
    "start": "414720",
    "end": "416400"
  },
  {
    "text": "programs are actually doing what they",
    "start": "416400",
    "end": "418080"
  },
  {
    "text": "actually care about",
    "start": "418080",
    "end": "419599"
  },
  {
    "text": "most of them only care about the data",
    "start": "419599",
    "end": "421759"
  },
  {
    "text": "they just want to get that array or",
    "start": "421759",
    "end": "423280"
  },
  {
    "text": "stream of bytes and start working on",
    "start": "423280",
    "end": "424880"
  },
  {
    "text": "that",
    "start": "424880",
    "end": "425680"
  },
  {
    "text": "they don't care about where the data",
    "start": "425680",
    "end": "427520"
  },
  {
    "text": "lives",
    "start": "427520",
    "end": "429840"
  },
  {
    "text": "now there are of course some",
    "start": "429840",
    "end": "431039"
  },
  {
    "text": "applications that do need to know",
    "start": "431039",
    "end": "432960"
  },
  {
    "text": "the details of this metadata as well so",
    "start": "432960",
    "end": "434960"
  },
  {
    "text": "for example if you're building a backup",
    "start": "434960",
    "end": "436560"
  },
  {
    "text": "application",
    "start": "436560",
    "end": "437280"
  },
  {
    "text": "you of course do need to know the file",
    "start": "437280",
    "end": "439039"
  },
  {
    "text": "names of those files",
    "start": "439039",
    "end": "442000"
  },
  {
    "text": "but most of the time the metadata is",
    "start": "442000",
    "end": "443759"
  },
  {
    "text": "unnecessary for what a program is trying",
    "start": "443759",
    "end": "445360"
  },
  {
    "text": "to do",
    "start": "445360",
    "end": "447440"
  },
  {
    "text": "my colleague and the architect of much",
    "start": "447440",
    "end": "449280"
  },
  {
    "text": "of wazzy dan gilman has called this",
    "start": "449280",
    "end": "451199"
  },
  {
    "text": "distinction",
    "start": "451199",
    "end": "452080"
  },
  {
    "text": "the difference between compute and meta",
    "start": "452080",
    "end": "453919"
  },
  {
    "text": "compute",
    "start": "453919",
    "end": "455280"
  },
  {
    "text": "and he had the thought that what if we",
    "start": "455280",
    "end": "456720"
  },
  {
    "text": "were to push as much of the meta compute",
    "start": "456720",
    "end": "458960"
  },
  {
    "text": "out to the edges of the system as",
    "start": "458960",
    "end": "460720"
  },
  {
    "text": "possible",
    "start": "460720",
    "end": "462080"
  },
  {
    "text": "either up to an orchestrating module or",
    "start": "462080",
    "end": "464080"
  },
  {
    "text": "even better out to the host itself",
    "start": "464080",
    "end": "467360"
  },
  {
    "text": "to see exactly what this means let's",
    "start": "467360",
    "end": "469680"
  },
  {
    "text": "walk through an example",
    "start": "469680",
    "end": "472319"
  },
  {
    "text": "let's say that you're writing a utility",
    "start": "472319",
    "end": "473840"
  },
  {
    "text": "that shrinks an image down to a",
    "start": "473840",
    "end": "475599"
  },
  {
    "text": "particular size",
    "start": "475599",
    "end": "477120"
  },
  {
    "text": "and you want to run this utility from a",
    "start": "477120",
    "end": "478879"
  },
  {
    "text": "command line",
    "start": "478879",
    "end": "480720"
  },
  {
    "text": "how would this work in the file system",
    "start": "480720",
    "end": "482240"
  },
  {
    "text": "centric paradigm",
    "start": "482240",
    "end": "485039"
  },
  {
    "text": "we have the host system that's the",
    "start": "485039",
    "end": "486560"
  },
  {
    "text": "outside the gray",
    "start": "486560",
    "end": "488879"
  },
  {
    "text": "and the wasm module is running inside of",
    "start": "488879",
    "end": "490720"
  },
  {
    "text": "the host inside of this white box",
    "start": "490720",
    "end": "493840"
  },
  {
    "text": "so the wasm module would be passed in an",
    "start": "493840",
    "end": "496560"
  },
  {
    "text": "array of arguments that are all strings",
    "start": "496560",
    "end": "499599"
  },
  {
    "text": "and would take the string that's at a",
    "start": "499599",
    "end": "500960"
  },
  {
    "text": "particular index and use that as a file",
    "start": "500960",
    "end": "503440"
  },
  {
    "text": "name",
    "start": "503440",
    "end": "504879"
  },
  {
    "text": "and then that wasm module would use that",
    "start": "504879",
    "end": "506800"
  },
  {
    "text": "string with the open syscall",
    "start": "506800",
    "end": "509039"
  },
  {
    "text": "to get a handle to the file the",
    "start": "509039",
    "end": "510720"
  },
  {
    "text": "operating system would hand it back a",
    "start": "510720",
    "end": "512320"
  },
  {
    "text": "handle",
    "start": "512320",
    "end": "514399"
  },
  {
    "text": "and then the wasm module would read the",
    "start": "514399",
    "end": "515919"
  },
  {
    "text": "bytes from that file using the handle",
    "start": "515919",
    "end": "519599"
  },
  {
    "text": "with this we're requiring the module to",
    "start": "519599",
    "end": "522320"
  },
  {
    "text": "think about the file system we're",
    "start": "522320",
    "end": "523760"
  },
  {
    "text": "requiring it to think about the concept",
    "start": "523760",
    "end": "525760"
  },
  {
    "text": "the context that it's running in but",
    "start": "525760",
    "end": "528880"
  },
  {
    "text": "this module wouldn't really need to know",
    "start": "528880",
    "end": "530560"
  },
  {
    "text": "about these details all it really needs",
    "start": "530560",
    "end": "532160"
  },
  {
    "text": "is the stream of bytes to come in so",
    "start": "532160",
    "end": "533680"
  },
  {
    "text": "that it can operate on that stream",
    "start": "533680",
    "end": "536880"
  },
  {
    "text": "so now let's try moving this meta",
    "start": "536880",
    "end": "538640"
  },
  {
    "text": "compute out of the module and over to",
    "start": "538640",
    "end": "540399"
  },
  {
    "text": "the host",
    "start": "540399",
    "end": "542880"
  },
  {
    "text": "now by convention a program's main",
    "start": "543040",
    "end": "545279"
  },
  {
    "text": "function takes in",
    "start": "545279",
    "end": "546480"
  },
  {
    "text": "a very generic set of parameters so for",
    "start": "546480",
    "end": "549200"
  },
  {
    "text": "example in c",
    "start": "549200",
    "end": "550000"
  },
  {
    "text": "it takes the r count and then a pointer",
    "start": "550000",
    "end": "553040"
  },
  {
    "text": "to the array of strings that are the",
    "start": "553040",
    "end": "554560"
  },
  {
    "text": "args",
    "start": "554560",
    "end": "556320"
  },
  {
    "text": "but let's say that we introduced a",
    "start": "556320",
    "end": "557600"
  },
  {
    "text": "convention and tooling support for more",
    "start": "557600",
    "end": "559680"
  },
  {
    "text": "application specific parameters",
    "start": "559680",
    "end": "562560"
  },
  {
    "text": "for example let's say that the main",
    "start": "562560",
    "end": "563760"
  },
  {
    "text": "function for this application accepts a",
    "start": "563760",
    "end": "565440"
  },
  {
    "text": "stream",
    "start": "565440",
    "end": "566560"
  },
  {
    "text": "and returns a result that contains",
    "start": "566560",
    "end": "568240"
  },
  {
    "text": "either a stream or an error",
    "start": "568240",
    "end": "571360"
  },
  {
    "text": "when you run this on the command line",
    "start": "571360",
    "end": "573519"
  },
  {
    "text": "the host will be able to look at that",
    "start": "573519",
    "end": "574880"
  },
  {
    "text": "string",
    "start": "574880",
    "end": "576000"
  },
  {
    "text": "and also see that the type that was",
    "start": "576000",
    "end": "577360"
  },
  {
    "text": "asked for by the program is a stream",
    "start": "577360",
    "end": "579680"
  },
  {
    "text": "and the host would know that it can",
    "start": "579680",
    "end": "581040"
  },
  {
    "text": "convert a file",
    "start": "581040",
    "end": "582800"
  },
  {
    "text": "to a stream so instead of just passing",
    "start": "582800",
    "end": "585920"
  },
  {
    "text": "in a string",
    "start": "585920",
    "end": "586720"
  },
  {
    "text": "the host would instead open the file",
    "start": "586720",
    "end": "588720"
  },
  {
    "text": "itself and get the handle",
    "start": "588720",
    "end": "590720"
  },
  {
    "text": "which the host would then use to pass in",
    "start": "590720",
    "end": "592959"
  },
  {
    "text": "the stream of bytes to the wasm module",
    "start": "592959",
    "end": "595680"
  },
  {
    "text": "and with this we've moved all of that",
    "start": "595680",
    "end": "596880"
  },
  {
    "text": "metacompute over to the host",
    "start": "596880",
    "end": "599600"
  },
  {
    "text": "so this module's no longer has any",
    "start": "599600",
    "end": "602560"
  },
  {
    "text": "concept baked into it",
    "start": "602560",
    "end": "604240"
  },
  {
    "text": "of whether or not there's a file system",
    "start": "604240",
    "end": "607760"
  },
  {
    "text": "this makes the code more portable and",
    "start": "607760",
    "end": "609760"
  },
  {
    "text": "this architecture also makes things more",
    "start": "609760",
    "end": "611440"
  },
  {
    "text": "secure",
    "start": "611440",
    "end": "612320"
  },
  {
    "text": "because this way we didn't actually need",
    "start": "612320",
    "end": "614399"
  },
  {
    "text": "to give the open syst call",
    "start": "614399",
    "end": "616240"
  },
  {
    "text": "to the wasm module either and so",
    "start": "616240",
    "end": "619600"
  },
  {
    "text": "if this wasm module were to get",
    "start": "619600",
    "end": "621920"
  },
  {
    "text": "exploited",
    "start": "621920",
    "end": "622640"
  },
  {
    "text": "or were subject to a supply chain attack",
    "start": "622640",
    "end": "624959"
  },
  {
    "text": "it wouldn't have access",
    "start": "624959",
    "end": "626320"
  },
  {
    "text": "to open files willy-nilly on your",
    "start": "626320",
    "end": "628560"
  },
  {
    "text": "machine",
    "start": "628560",
    "end": "630880"
  },
  {
    "text": "of course none of this matters if",
    "start": "631600",
    "end": "633279"
  },
  {
    "text": "developers don't use it",
    "start": "633279",
    "end": "634959"
  },
  {
    "text": "we need to have a gradual adoption path",
    "start": "634959",
    "end": "637760"
  },
  {
    "text": "we need a way for everyone in the",
    "start": "637760",
    "end": "639040"
  },
  {
    "text": "community to transition to this new",
    "start": "639040",
    "end": "640399"
  },
  {
    "text": "paradigm at their own pace so that the",
    "start": "640399",
    "end": "642160"
  },
  {
    "text": "whole community doesn't need to move in",
    "start": "642160",
    "end": "644839"
  },
  {
    "text": "lockstep",
    "start": "644839",
    "end": "646079"
  },
  {
    "text": "we have three different options for how",
    "start": "646079",
    "end": "647839"
  },
  {
    "text": "to compile a module to use wazi and",
    "start": "647839",
    "end": "649760"
  },
  {
    "text": "these three options represent that",
    "start": "649760",
    "end": "651360"
  },
  {
    "text": "gradual adoption path",
    "start": "651360",
    "end": "653839"
  },
  {
    "text": "so let's say that you already have some",
    "start": "653839",
    "end": "655360"
  },
  {
    "text": "legacy code that you want to compile",
    "start": "655360",
    "end": "657760"
  },
  {
    "text": "and this code makes extensive use of the",
    "start": "657760",
    "end": "659760"
  },
  {
    "text": "not so good parts of traditional file",
    "start": "659760",
    "end": "661760"
  },
  {
    "text": "system apis the ones that bake in",
    "start": "661760",
    "end": "663680"
  },
  {
    "text": "expectations about the host environment",
    "start": "663680",
    "end": "667279"
  },
  {
    "text": "in that case you would signal to the",
    "start": "667279",
    "end": "669279"
  },
  {
    "text": "compiler",
    "start": "669279",
    "end": "670720"
  },
  {
    "text": "that you want to use the legacy file",
    "start": "670720",
    "end": "672800"
  },
  {
    "text": "system interface",
    "start": "672800",
    "end": "674399"
  },
  {
    "text": "now this might be through a flag or",
    "start": "674399",
    "end": "676079"
  },
  {
    "text": "through a target triple",
    "start": "676079",
    "end": "678959"
  },
  {
    "text": "this would link your code against a",
    "start": "678959",
    "end": "680560"
  },
  {
    "text": "version of libc or whatever your",
    "start": "680560",
    "end": "682160"
  },
  {
    "text": "language's standard library is that's",
    "start": "682160",
    "end": "684160"
  },
  {
    "text": "implemented in terms of the wazzy file",
    "start": "684160",
    "end": "686320"
  },
  {
    "text": "system",
    "start": "686320",
    "end": "686880"
  },
  {
    "text": "interface and this is in many ways the",
    "start": "686880",
    "end": "689680"
  },
  {
    "text": "same api",
    "start": "689680",
    "end": "690640"
  },
  {
    "text": "as the file system api exposed by posix",
    "start": "690640",
    "end": "693120"
  },
  {
    "text": "in in",
    "start": "693120",
    "end": "693680"
  },
  {
    "text": "other system interfaces so your code can",
    "start": "693680",
    "end": "697440"
  },
  {
    "text": "act",
    "start": "697440",
    "end": "697920"
  },
  {
    "text": "like it has direct access to a file",
    "start": "697920",
    "end": "699839"
  },
  {
    "text": "system which it might in some cases",
    "start": "699839",
    "end": "702000"
  },
  {
    "text": "or the host might provide a virtualized",
    "start": "702000",
    "end": "703920"
  },
  {
    "text": "file system",
    "start": "703920",
    "end": "706560"
  },
  {
    "text": "either way this looks pretty much like",
    "start": "706640",
    "end": "708640"
  },
  {
    "text": "the run-of-the-mill file system apis",
    "start": "708640",
    "end": "711279"
  },
  {
    "text": "so your code would not have to actually",
    "start": "711279",
    "end": "713440"
  },
  {
    "text": "make any changes you wouldn't have to",
    "start": "713440",
    "end": "714880"
  },
  {
    "text": "make any changes to your code rather",
    "start": "714880",
    "end": "718160"
  },
  {
    "text": "now this code would not work on hosts",
    "start": "718160",
    "end": "720639"
  },
  {
    "text": "that didn't either provide direct access",
    "start": "720639",
    "end": "722399"
  },
  {
    "text": "to the file system or that virtualized",
    "start": "722399",
    "end": "724320"
  },
  {
    "text": "file system that i mentioned before so",
    "start": "724320",
    "end": "726320"
  },
  {
    "text": "it wouldn't provide the full portability",
    "start": "726320",
    "end": "728880"
  },
  {
    "text": "but it would be an easy on-ramp to",
    "start": "728880",
    "end": "730720"
  },
  {
    "text": "moving code to use webassembly",
    "start": "730720",
    "end": "734320"
  },
  {
    "text": "but what if you want the portability and",
    "start": "734320",
    "end": "736240"
  },
  {
    "text": "you also want the isolation",
    "start": "736240",
    "end": "738160"
  },
  {
    "text": "between different modules that",
    "start": "738160",
    "end": "739200"
  },
  {
    "text": "webassembly can give you where you",
    "start": "739200",
    "end": "740800"
  },
  {
    "text": "aren't sharing that global file system",
    "start": "740800",
    "end": "743360"
  },
  {
    "text": "between modules for that case we're",
    "start": "743360",
    "end": "746639"
  },
  {
    "text": "providing a compatibility layer",
    "start": "746639",
    "end": "749279"
  },
  {
    "text": "the developer would still write their",
    "start": "749279",
    "end": "750639"
  },
  {
    "text": "code using the language's normal file",
    "start": "750639",
    "end": "752480"
  },
  {
    "text": "apis but in this case what we're",
    "start": "752480",
    "end": "754079"
  },
  {
    "text": "currently thinking",
    "start": "754079",
    "end": "755200"
  },
  {
    "text": "is that the host wouldn't be providing",
    "start": "755200",
    "end": "756639"
  },
  {
    "text": "the file system itself",
    "start": "756639",
    "end": "758560"
  },
  {
    "text": "instead the module would be virtualizing",
    "start": "758560",
    "end": "760399"
  },
  {
    "text": "its own file system",
    "start": "760399",
    "end": "762320"
  },
  {
    "text": "and these quote-unquote files would be",
    "start": "762320",
    "end": "764320"
  },
  {
    "text": "in the linear memory of the wasm module",
    "start": "764320",
    "end": "767839"
  },
  {
    "text": "this means that we don't have the global",
    "start": "767839",
    "end": "769519"
  },
  {
    "text": "shared mutable state problem that the",
    "start": "769519",
    "end": "770959"
  },
  {
    "text": "file system introduces",
    "start": "770959",
    "end": "773760"
  },
  {
    "text": "even though these look like files in the",
    "start": "773760",
    "end": "775519"
  },
  {
    "text": "source code under the hood they would",
    "start": "775519",
    "end": "777519"
  },
  {
    "text": "use a different set of types was the i o",
    "start": "777519",
    "end": "779440"
  },
  {
    "text": "types",
    "start": "779440",
    "end": "780639"
  },
  {
    "text": "and this would give them that full",
    "start": "780639",
    "end": "781920"
  },
  {
    "text": "portability",
    "start": "781920",
    "end": "784160"
  },
  {
    "text": "however this virtualization would",
    "start": "784160",
    "end": "785680"
  },
  {
    "text": "introduce some inefficiencies including",
    "start": "785680",
    "end": "787279"
  },
  {
    "text": "larger file sizes for the wasm module",
    "start": "787279",
    "end": "790800"
  },
  {
    "text": "so in the case where you want full",
    "start": "790800",
    "end": "792240"
  },
  {
    "text": "portability and you want that efficiency",
    "start": "792240",
    "end": "794399"
  },
  {
    "text": "all at the same time you would use a",
    "start": "794399",
    "end": "796480"
  },
  {
    "text": "different api in your source code",
    "start": "796480",
    "end": "798560"
  },
  {
    "text": "you would use the wazzy i o api directly",
    "start": "798560",
    "end": "802399"
  },
  {
    "text": "so that means that you would change your",
    "start": "802399",
    "end": "803600"
  },
  {
    "text": "code instead of passing file handles",
    "start": "803600",
    "end": "806000"
  },
  {
    "text": "around you'd be passing i o types like",
    "start": "806000",
    "end": "807920"
  },
  {
    "text": "streams and arrays of bytes around",
    "start": "807920",
    "end": "810399"
  },
  {
    "text": "and with this the developer no longer",
    "start": "810399",
    "end": "812320"
  },
  {
    "text": "even thinks in terms of files it's all",
    "start": "812320",
    "end": "814000"
  },
  {
    "text": "just these i o types the developer",
    "start": "814000",
    "end": "816399"
  },
  {
    "text": "doesn't think i have a file with this",
    "start": "816399",
    "end": "818079"
  },
  {
    "text": "name",
    "start": "818079",
    "end": "818639"
  },
  {
    "text": "in this directory i'll open the file and",
    "start": "818639",
    "end": "820880"
  },
  {
    "text": "read the bytes from the file",
    "start": "820880",
    "end": "822639"
  },
  {
    "text": "they just think i have a stream of bytes",
    "start": "822639",
    "end": "826480"
  },
  {
    "text": "so this means that the code really can",
    "start": "826480",
    "end": "828160"
  },
  {
    "text": "run anywhere it doesn't matter what the",
    "start": "828160",
    "end": "830000"
  },
  {
    "text": "host system all systems can represent",
    "start": "830000",
    "end": "831920"
  },
  {
    "text": "these basic primitive types",
    "start": "831920",
    "end": "834720"
  },
  {
    "text": "and we've completely gotten rid of the",
    "start": "834720",
    "end": "836480"
  },
  {
    "text": "potential for the global shared mutable",
    "start": "836480",
    "end": "838399"
  },
  {
    "text": "state",
    "start": "838399",
    "end": "839120"
  },
  {
    "text": "while also eliminating the overhead of",
    "start": "839120",
    "end": "840720"
  },
  {
    "text": "the per module virtualized file system",
    "start": "840720",
    "end": "844879"
  },
  {
    "text": "this path also potentially opens up",
    "start": "844959",
    "end": "846880"
  },
  {
    "text": "opportunities for further optimizations",
    "start": "846880",
    "end": "848639"
  },
  {
    "text": "because the engine now has",
    "start": "848639",
    "end": "850000"
  },
  {
    "text": "more detailed type information",
    "start": "850000",
    "end": "853760"
  },
  {
    "text": "now when talking about these three",
    "start": "854800",
    "end": "856560"
  },
  {
    "text": "options there's something i want to be",
    "start": "856560",
    "end": "858000"
  },
  {
    "text": "clear about",
    "start": "858000",
    "end": "859040"
  },
  {
    "text": "you don't need to make the same choice",
    "start": "859040",
    "end": "860880"
  },
  {
    "text": "for all of the different modules in your",
    "start": "860880",
    "end": "862480"
  },
  {
    "text": "app",
    "start": "862480",
    "end": "863839"
  },
  {
    "text": "part of this gradual adoption path is",
    "start": "863839",
    "end": "866079"
  },
  {
    "text": "having the ability to convert certain",
    "start": "866079",
    "end": "867600"
  },
  {
    "text": "modules before others",
    "start": "867600",
    "end": "871120"
  },
  {
    "text": "with both the second and the third",
    "start": "871120",
    "end": "872560"
  },
  {
    "text": "option that i just talked about",
    "start": "872560",
    "end": "874240"
  },
  {
    "text": "you're using the wazi io types either",
    "start": "874240",
    "end": "876720"
  },
  {
    "text": "explicitly or implicitly",
    "start": "876720",
    "end": "879199"
  },
  {
    "text": "and in both cases you're not expecting",
    "start": "879199",
    "end": "880880"
  },
  {
    "text": "to share the file system between these",
    "start": "880880",
    "end": "882320"
  },
  {
    "text": "two modules so this means that you can",
    "start": "882320",
    "end": "884880"
  },
  {
    "text": "use these two modules together and they",
    "start": "884880",
    "end": "886240"
  },
  {
    "text": "can simply pass values back and forth",
    "start": "886240",
    "end": "887920"
  },
  {
    "text": "between each other",
    "start": "887920",
    "end": "890000"
  },
  {
    "text": "now it's not quite as trivial to plug",
    "start": "890000",
    "end": "891760"
  },
  {
    "text": "these modules up to ones that use waxy",
    "start": "891760",
    "end": "893519"
  },
  {
    "text": "file system",
    "start": "893519",
    "end": "895040"
  },
  {
    "text": "but it's still pretty easy if you want a",
    "start": "895040",
    "end": "897760"
  },
  {
    "text": "module that's using wazi file system to",
    "start": "897760",
    "end": "899519"
  },
  {
    "text": "call something from a module that uses",
    "start": "899519",
    "end": "901040"
  },
  {
    "text": "waziio",
    "start": "901040",
    "end": "902320"
  },
  {
    "text": "then you just need to have some code in",
    "start": "902320",
    "end": "903680"
  },
  {
    "text": "between to extract the stream or array",
    "start": "903680",
    "end": "905839"
  },
  {
    "text": "of bytes",
    "start": "905839",
    "end": "906560"
  },
  {
    "text": "from the file's content and pass that",
    "start": "906560",
    "end": "908320"
  },
  {
    "text": "into the wazzy io module",
    "start": "908320",
    "end": "912240"
  },
  {
    "text": "there are some kinds of modules that",
    "start": "912240",
    "end": "913839"
  },
  {
    "text": "will always require full wazzy file",
    "start": "913839",
    "end": "915920"
  },
  {
    "text": "system that can't use only the portable",
    "start": "915920",
    "end": "917839"
  },
  {
    "text": "parts of the file system",
    "start": "917839",
    "end": "920160"
  },
  {
    "text": "but we expect this to represent a very",
    "start": "920160",
    "end": "922079"
  },
  {
    "text": "small fraction of the modules that",
    "start": "922079",
    "end": "924000"
  },
  {
    "text": "developers are creating and we're hoping",
    "start": "924000",
    "end": "925440"
  },
  {
    "text": "to see the rest of the ecosystem",
    "start": "925440",
    "end": "927040"
  },
  {
    "text": "gradually migrate",
    "start": "927040",
    "end": "928079"
  },
  {
    "text": "to only using waziio",
    "start": "928079",
    "end": "931600"
  },
  {
    "text": "so this is the kind of thinking that",
    "start": "932000",
    "end": "933759"
  },
  {
    "text": "we're applying as we're building out",
    "start": "933759",
    "end": "935120"
  },
  {
    "text": "this new ecosystem",
    "start": "935120",
    "end": "937120"
  },
  {
    "text": "how can we move these details out to the",
    "start": "937120",
    "end": "939199"
  },
  {
    "text": "edges so that orchestrating code or the",
    "start": "939199",
    "end": "941680"
  },
  {
    "text": "host can take charge of them and",
    "start": "941680",
    "end": "943279"
  },
  {
    "text": "potentially optimize them",
    "start": "943279",
    "end": "946639"
  },
  {
    "text": "and it's one of these potential host",
    "start": "947120",
    "end": "948639"
  },
  {
    "text": "optimizations that i want to end with",
    "start": "948639",
    "end": "950959"
  },
  {
    "text": "just to get everybody's minds start to",
    "start": "950959",
    "end": "952959"
  },
  {
    "text": "start turning on what this paradigm",
    "start": "952959",
    "end": "955199"
  },
  {
    "text": "could potentially open up for cloud",
    "start": "955199",
    "end": "956720"
  },
  {
    "text": "native",
    "start": "956720",
    "end": "958720"
  },
  {
    "text": "and this is just one opportunity that we",
    "start": "958720",
    "end": "960399"
  },
  {
    "text": "see but i'm sure that there are more",
    "start": "960399",
    "end": "961600"
  },
  {
    "text": "that others who are more familiar with",
    "start": "961600",
    "end": "963040"
  },
  {
    "text": "cloud native",
    "start": "963040",
    "end": "963920"
  },
  {
    "text": "will also be able to see and we're",
    "start": "963920",
    "end": "965360"
  },
  {
    "text": "excited to explore those more",
    "start": "965360",
    "end": "968959"
  },
  {
    "text": "now this opportunity has to do with",
    "start": "968959",
    "end": "970399"
  },
  {
    "text": "requests between containers and how to",
    "start": "970399",
    "end": "971920"
  },
  {
    "text": "make those faster",
    "start": "971920",
    "end": "974000"
  },
  {
    "text": "so let's walk through what happens when",
    "start": "974000",
    "end": "975600"
  },
  {
    "text": "you make a request so i want to be clear",
    "start": "975600",
    "end": "977040"
  },
  {
    "text": "here",
    "start": "977040",
    "end": "977680"
  },
  {
    "text": "this is just based on conversations i've",
    "start": "977680",
    "end": "979199"
  },
  {
    "text": "had i haven't actually set this up",
    "start": "979199",
    "end": "980560"
  },
  {
    "text": "myself",
    "start": "980560",
    "end": "981279"
  },
  {
    "text": "and step through it so there's a chance",
    "start": "981279",
    "end": "982800"
  },
  {
    "text": "i've gotten some of the details wrong",
    "start": "982800",
    "end": "984000"
  },
  {
    "text": "here",
    "start": "984000",
    "end": "984399"
  },
  {
    "text": "but i think that this is at least",
    "start": "984399",
    "end": "985600"
  },
  {
    "text": "directionally correct",
    "start": "985600",
    "end": "988639"
  },
  {
    "text": "so let's say that you want to make a",
    "start": "988639",
    "end": "989920"
  },
  {
    "text": "request to another service",
    "start": "989920",
    "end": "991680"
  },
  {
    "text": "in another plot what does it look like",
    "start": "991680",
    "end": "995440"
  },
  {
    "text": "the data that you're sending over gets",
    "start": "995440",
    "end": "996959"
  },
  {
    "text": "serialized using a format like protobufs",
    "start": "996959",
    "end": "999680"
  },
  {
    "text": "and this is saved into memory in user",
    "start": "999680",
    "end": "1001600"
  },
  {
    "text": "space",
    "start": "1001600",
    "end": "1003279"
  },
  {
    "text": "and then the system makes a syscall the",
    "start": "1003279",
    "end": "1005600"
  },
  {
    "text": "memory is copied over",
    "start": "1005600",
    "end": "1006880"
  },
  {
    "text": "into kernel space memory so that's two",
    "start": "1006880",
    "end": "1009120"
  },
  {
    "text": "copies already",
    "start": "1009120",
    "end": "1011040"
  },
  {
    "text": "and now let's say that you're using a",
    "start": "1011040",
    "end": "1012399"
  },
  {
    "text": "sidecar for something like a service",
    "start": "1012399",
    "end": "1013839"
  },
  {
    "text": "mesh",
    "start": "1013839",
    "end": "1015040"
  },
  {
    "text": "so that sidecar is another container in",
    "start": "1015040",
    "end": "1016959"
  },
  {
    "text": "the same pod",
    "start": "1016959",
    "end": "1018720"
  },
  {
    "text": "the data gets sent over to this",
    "start": "1018720",
    "end": "1020480"
  },
  {
    "text": "container as an incoming packet",
    "start": "1020480",
    "end": "1022720"
  },
  {
    "text": "the data gets copied again into kernel",
    "start": "1022720",
    "end": "1024240"
  },
  {
    "text": "space memory by network drivers",
    "start": "1024240",
    "end": "1026558"
  },
  {
    "text": "the data is then copied into user space",
    "start": "1026559",
    "end": "1028798"
  },
  {
    "text": "of the sidecar",
    "start": "1028799",
    "end": "1029918"
  },
  {
    "text": "proxy and then the system deserializes",
    "start": "1029919",
    "end": "1032880"
  },
  {
    "text": "the data into objects that it can use",
    "start": "1032880",
    "end": "1035600"
  },
  {
    "text": "and only then does the service mesh",
    "start": "1035600",
    "end": "1037918"
  },
  {
    "text": "policy actually run on this data we",
    "start": "1037919",
    "end": "1040000"
  },
  {
    "text": "haven't even gotten the data out of the",
    "start": "1040000",
    "end": "1041280"
  },
  {
    "text": "pod yet",
    "start": "1041280",
    "end": "1042400"
  },
  {
    "text": "we still have to go through steps one",
    "start": "1042400",
    "end": "1043839"
  },
  {
    "text": "through four again to get the data out",
    "start": "1043839",
    "end": "1045760"
  },
  {
    "text": "to the network",
    "start": "1045760",
    "end": "1047438"
  },
  {
    "text": "and then when it gets to the other side",
    "start": "1047439",
    "end": "1048640"
  },
  {
    "text": "this whole process happens in reverse",
    "start": "1048640",
    "end": "1052320"
  },
  {
    "text": "now two-thirds of the steps here were",
    "start": "1052320",
    "end": "1054799"
  },
  {
    "text": "actually to make a request",
    "start": "1054799",
    "end": "1056480"
  },
  {
    "text": "on the same machine they were to pipe",
    "start": "1056480",
    "end": "1059919"
  },
  {
    "text": "the data",
    "start": "1059919",
    "end": "1060640"
  },
  {
    "text": "into that sidecar and you'll see that",
    "start": "1060640",
    "end": "1063280"
  },
  {
    "text": "the documentation about the sidecar",
    "start": "1063280",
    "end": "1065120"
  },
  {
    "text": "sidecar pattern calls this out as a",
    "start": "1065120",
    "end": "1066880"
  },
  {
    "text": "trade-off these docs suggest that you",
    "start": "1066880",
    "end": "1069039"
  },
  {
    "text": "ask yourself",
    "start": "1069039",
    "end": "1070080"
  },
  {
    "text": "whether the isolation is really worth",
    "start": "1070080",
    "end": "1071679"
  },
  {
    "text": "the additional overhead",
    "start": "1071679",
    "end": "1073120"
  },
  {
    "text": "that your the sidecar is going to",
    "start": "1073120",
    "end": "1075200"
  },
  {
    "text": "introduce in your use case",
    "start": "1075200",
    "end": "1078799"
  },
  {
    "text": "but this overhead isn't inherent to the",
    "start": "1078799",
    "end": "1080799"
  },
  {
    "text": "problem we can actually eliminate this",
    "start": "1080799",
    "end": "1082320"
  },
  {
    "text": "as a trade-off",
    "start": "1082320",
    "end": "1084720"
  },
  {
    "text": "since we can do fine-grained sandboxing",
    "start": "1084720",
    "end": "1086640"
  },
  {
    "text": "and wasm we can actually make this",
    "start": "1086640",
    "end": "1088880"
  },
  {
    "text": "relationship between the container and",
    "start": "1088880",
    "end": "1090240"
  },
  {
    "text": "the sidecar",
    "start": "1090240",
    "end": "1090960"
  },
  {
    "text": "much more efficient even running them in",
    "start": "1090960",
    "end": "1092640"
  },
  {
    "text": "the same process",
    "start": "1092640",
    "end": "1094080"
  },
  {
    "text": "but we still get all the isolation",
    "start": "1094080",
    "end": "1095520"
  },
  {
    "text": "between the two and possibly more",
    "start": "1095520",
    "end": "1097760"
  },
  {
    "text": "depending on how they were using a file",
    "start": "1097760",
    "end": "1099200"
  },
  {
    "text": "system or volume",
    "start": "1099200",
    "end": "1101520"
  },
  {
    "text": "and because of this we don't need the",
    "start": "1101520",
    "end": "1104080"
  },
  {
    "text": "socket to be our interface between the",
    "start": "1104080",
    "end": "1106000"
  },
  {
    "text": "isolated units of code",
    "start": "1106000",
    "end": "1108240"
  },
  {
    "text": "instead our interface is just typed",
    "start": "1108240",
    "end": "1110080"
  },
  {
    "text": "function calls",
    "start": "1110080",
    "end": "1112240"
  },
  {
    "text": "to communicate between these two we",
    "start": "1112240",
    "end": "1113840"
  },
  {
    "text": "simply do a synchronous function call on",
    "start": "1113840",
    "end": "1116080"
  },
  {
    "text": "a single thread stack",
    "start": "1116080",
    "end": "1118160"
  },
  {
    "text": "we do direct register copies and",
    "start": "1118160",
    "end": "1119919"
  },
  {
    "text": "potentially direct memory copies if",
    "start": "1119919",
    "end": "1121520"
  },
  {
    "text": "they're needed",
    "start": "1121520",
    "end": "1123200"
  },
  {
    "text": "there's no intermediate serialization",
    "start": "1123200",
    "end": "1124960"
  },
  {
    "text": "and dc realization step here",
    "start": "1124960",
    "end": "1127039"
  },
  {
    "text": "no heavyweight calls to the kernel or",
    "start": "1127039",
    "end": "1129039"
  },
  {
    "text": "inter-process communication",
    "start": "1129039",
    "end": "1132080"
  },
  {
    "text": "this actually puts us in the nanosecond",
    "start": "1132080",
    "end": "1133919"
  },
  {
    "text": "range for calls between these two and",
    "start": "1133919",
    "end": "1136080"
  },
  {
    "text": "this would be much faster than the call",
    "start": "1136080",
    "end": "1137600"
  },
  {
    "text": "we just looked at from container to",
    "start": "1137600",
    "end": "1139120"
  },
  {
    "text": "sidecar",
    "start": "1139120",
    "end": "1141600"
  },
  {
    "text": "however sometimes you actually do need",
    "start": "1141760",
    "end": "1144080"
  },
  {
    "text": "things to be on different machines",
    "start": "1144080",
    "end": "1145919"
  },
  {
    "text": "across the network and it would be",
    "start": "1145919",
    "end": "1147120"
  },
  {
    "text": "inconvenient to have different apis for",
    "start": "1147120",
    "end": "1148799"
  },
  {
    "text": "representing that and to have to change",
    "start": "1148799",
    "end": "1150799"
  },
  {
    "text": "which api you're using in your source",
    "start": "1150799",
    "end": "1152320"
  },
  {
    "text": "code based on",
    "start": "1152320",
    "end": "1153360"
  },
  {
    "text": "whether or not the other container is on",
    "start": "1153360",
    "end": "1154799"
  },
  {
    "text": "the same machine or not",
    "start": "1154799",
    "end": "1156640"
  },
  {
    "text": "but we don't have to do that in this",
    "start": "1156640",
    "end": "1159120"
  },
  {
    "text": "paradigm we've moved all of the decision",
    "start": "1159120",
    "end": "1161039"
  },
  {
    "text": "making related to where the code is",
    "start": "1161039",
    "end": "1162320"
  },
  {
    "text": "running out to the edges",
    "start": "1162320",
    "end": "1164960"
  },
  {
    "text": "so the module that you'd write would",
    "start": "1164960",
    "end": "1166799"
  },
  {
    "text": "import the callee",
    "start": "1166799",
    "end": "1168000"
  },
  {
    "text": "specifying a function signature that's",
    "start": "1168000",
    "end": "1169760"
  },
  {
    "text": "appropriate for cross network calls",
    "start": "1169760",
    "end": "1172240"
  },
  {
    "text": "so for example allowing for various",
    "start": "1172240",
    "end": "1174720"
  },
  {
    "text": "network failure",
    "start": "1174720",
    "end": "1175679"
  },
  {
    "text": "failure modes and supporting",
    "start": "1175679",
    "end": "1177280"
  },
  {
    "text": "non-blocking",
    "start": "1177280",
    "end": "1179840"
  },
  {
    "text": "now in the case where the kali is on a",
    "start": "1180160",
    "end": "1182880"
  },
  {
    "text": "different machine",
    "start": "1182880",
    "end": "1183919"
  },
  {
    "text": "the host would take care of serializing",
    "start": "1183919",
    "end": "1185919"
  },
  {
    "text": "the data",
    "start": "1185919",
    "end": "1186960"
  },
  {
    "text": "and streaming it over the socket but if",
    "start": "1186960",
    "end": "1190000"
  },
  {
    "text": "a service mesh is being used the host",
    "start": "1190000",
    "end": "1191919"
  },
  {
    "text": "would instead supply a proxy module",
    "start": "1191919",
    "end": "1193520"
  },
  {
    "text": "that's on the same machine",
    "start": "1193520",
    "end": "1195039"
  },
  {
    "text": "using the much cheaper calling",
    "start": "1195039",
    "end": "1196799"
  },
  {
    "text": "convention described before",
    "start": "1196799",
    "end": "1199840"
  },
  {
    "text": "now the important thing is that it's the",
    "start": "1199840",
    "end": "1202000"
  },
  {
    "text": "host that handles this distinction not",
    "start": "1202000",
    "end": "1204000"
  },
  {
    "text": "your code",
    "start": "1204000",
    "end": "1205280"
  },
  {
    "text": "and so in this way you can get the",
    "start": "1205280",
    "end": "1206880"
  },
  {
    "text": "optimal performance",
    "start": "1206880",
    "end": "1208400"
  },
  {
    "text": "when you're talking to a container on",
    "start": "1208400",
    "end": "1209760"
  },
  {
    "text": "the same machine while not sacrificing",
    "start": "1209760",
    "end": "1211440"
  },
  {
    "text": "the ability to communicate with a",
    "start": "1211440",
    "end": "1212720"
  },
  {
    "text": "container that's across the network",
    "start": "1212720",
    "end": "1216080"
  },
  {
    "text": "we don't have all of these pieces in",
    "start": "1216320",
    "end": "1218320"
  },
  {
    "text": "place right now but once we do have",
    "start": "1218320",
    "end": "1219919"
  },
  {
    "text": "these foundational primitives in place",
    "start": "1219919",
    "end": "1222000"
  },
  {
    "text": "we think that someone could build this",
    "start": "1222000",
    "end": "1223600"
  },
  {
    "text": "kind of efficiency into the",
    "start": "1223600",
    "end": "1225280"
  },
  {
    "text": "existing cloud native ecosystem and",
    "start": "1225280",
    "end": "1227440"
  },
  {
    "text": "we're excited to explore this further",
    "start": "1227440",
    "end": "1231120"
  },
  {
    "text": "we'll be writing about all of this more",
    "start": "1232240",
    "end": "1233919"
  },
  {
    "text": "over the coming months as we push these",
    "start": "1233919",
    "end": "1235600"
  },
  {
    "text": "standards forward",
    "start": "1235600",
    "end": "1237120"
  },
  {
    "text": "and we'd be very interested in hearing",
    "start": "1237120",
    "end": "1238480"
  },
  {
    "text": "from people in the cloud native",
    "start": "1238480",
    "end": "1240000"
  },
  {
    "text": "ecosystem",
    "start": "1240000",
    "end": "1241039"
  },
  {
    "text": "about your use cases and about what you",
    "start": "1241039",
    "end": "1242880"
  },
  {
    "text": "see this kind of architecture opening up",
    "start": "1242880",
    "end": "1246799"
  },
  {
    "text": "thank you again to the organizers for",
    "start": "1247360",
    "end": "1249120"
  },
  {
    "text": "inviting me and thank you all for",
    "start": "1249120",
    "end": "1250760"
  },
  {
    "text": "listening",
    "start": "1250760",
    "end": "1253760"
  }
]