[
  {
    "text": "okay so hi",
    "start": "640",
    "end": "3120"
  },
  {
    "text": "this is jay and sadef here from vmware",
    "start": "3120",
    "end": "6160"
  },
  {
    "text": "we're going to talk about",
    "start": "6160",
    "end": "7839"
  },
  {
    "text": "uh how these cni plugins work and how",
    "start": "7839",
    "end": "10800"
  },
  {
    "text": "you can look at what's happening packet",
    "start": "10800",
    "end": "12559"
  },
  {
    "text": "to packet",
    "start": "12559",
    "end": "14320"
  },
  {
    "text": "um to understand if you're having issues",
    "start": "14320",
    "end": "16640"
  },
  {
    "text": "with cni's or network policies",
    "start": "16640",
    "end": "18800"
  },
  {
    "text": "or other networking related stuff in",
    "start": "18800",
    "end": "20960"
  },
  {
    "text": "your pod and service networks and",
    "start": "20960",
    "end": "22400"
  },
  {
    "text": "kubernetes",
    "start": "22400",
    "end": "23439"
  },
  {
    "text": "so so that's gonna start us off and then",
    "start": "23439",
    "end": "25920"
  },
  {
    "text": "we'll get to a demo in a little bit",
    "start": "25920",
    "end": "28560"
  },
  {
    "text": "hi hello everyone so we will start with",
    "start": "28560",
    "end": "31519"
  },
  {
    "text": "introducing some",
    "start": "31519",
    "end": "32640"
  },
  {
    "text": "kubernetes networking concepts and then",
    "start": "32640",
    "end": "35200"
  },
  {
    "text": "go into detail about how cni's are",
    "start": "35200",
    "end": "37600"
  },
  {
    "text": "providing connectivity",
    "start": "37600",
    "end": "39360"
  },
  {
    "text": "and we will conclude with a pack of",
    "start": "39360",
    "end": "41120"
  },
  {
    "text": "devil walkthrough",
    "start": "41120",
    "end": "44480"
  },
  {
    "text": "so in kubernetes networking is a",
    "start": "44480",
    "end": "46800"
  },
  {
    "text": "combination of many concepts and it is",
    "start": "46800",
    "end": "49039"
  },
  {
    "text": "important to know",
    "start": "49039",
    "end": "50079"
  },
  {
    "text": "them to troubleshoot any connectivity",
    "start": "50079",
    "end": "52239"
  },
  {
    "text": "problem",
    "start": "52239",
    "end": "53840"
  },
  {
    "text": "so potterpod networking is provided by",
    "start": "53840",
    "end": "56559"
  },
  {
    "text": "third",
    "start": "56559",
    "end": "57199"
  },
  {
    "text": "cni plugins and since pods are transient",
    "start": "57199",
    "end": "60640"
  },
  {
    "text": "kubernetes has an abstraction called",
    "start": "60640",
    "end": "62399"
  },
  {
    "text": "services which allow",
    "start": "62399",
    "end": "63920"
  },
  {
    "text": "us to reach a group of paths using",
    "start": "63920",
    "end": "66080"
  },
  {
    "text": "virtual ips",
    "start": "66080",
    "end": "67680"
  },
  {
    "text": "and qproxy is enabling",
    "start": "67680",
    "end": "70880"
  },
  {
    "text": "connectivity to services by using load",
    "start": "70880",
    "end": "73040"
  },
  {
    "text": "balancers like ip tables",
    "start": "73040",
    "end": "75200"
  },
  {
    "text": "and how you find services is also a part",
    "start": "75200",
    "end": "78000"
  },
  {
    "text": "of",
    "start": "78000",
    "end": "78320"
  },
  {
    "text": "networking there's kubernetes dns",
    "start": "78320",
    "end": "81280"
  },
  {
    "text": "service",
    "start": "81280",
    "end": "82240"
  },
  {
    "text": "that provides that once you get basic uh",
    "start": "82240",
    "end": "85920"
  },
  {
    "text": "port what about what service",
    "start": "85920",
    "end": "88320"
  },
  {
    "text": "connectivity how you secure your",
    "start": "88320",
    "end": "90000"
  },
  {
    "text": "applications by isolating them",
    "start": "90000",
    "end": "92640"
  },
  {
    "text": "is another networking aspect and cni",
    "start": "92640",
    "end": "94960"
  },
  {
    "text": "plugins",
    "start": "94960",
    "end": "95759"
  },
  {
    "text": "provide this as well the last aspect is",
    "start": "95759",
    "end": "99680"
  },
  {
    "text": "how kubernetes handles external traffic",
    "start": "99680",
    "end": "102240"
  },
  {
    "text": "there are several ways to do it",
    "start": "102240",
    "end": "104000"
  },
  {
    "text": "for example layer 4 layer 7 not",
    "start": "104000",
    "end": "106079"
  },
  {
    "text": "balancers or using notepad",
    "start": "106079",
    "end": "108560"
  },
  {
    "text": "kubernetes construct so out of these 5",
    "start": "108560",
    "end": "111439"
  },
  {
    "text": "concepts",
    "start": "111439",
    "end": "112799"
  },
  {
    "text": "in the talk we are gonna uh mostly",
    "start": "112799",
    "end": "115040"
  },
  {
    "text": "talking",
    "start": "115040",
    "end": "115840"
  },
  {
    "text": "about cnn plugins",
    "start": "115840",
    "end": "119359"
  },
  {
    "text": "uh okay let's start with cni plugins so",
    "start": "119840",
    "end": "123119"
  },
  {
    "text": "kubernetes adopts a cni model to",
    "start": "123119",
    "end": "125840"
  },
  {
    "text": "interact with",
    "start": "125840",
    "end": "127280"
  },
  {
    "text": "third party cni networking plugins",
    "start": "127280",
    "end": "130319"
  },
  {
    "text": "these plugins are responsible for ips",
    "start": "130319",
    "end": "132720"
  },
  {
    "text": "assignment connectivity",
    "start": "132720",
    "end": "134400"
  },
  {
    "text": "and pod security every time a pod is",
    "start": "134400",
    "end": "137680"
  },
  {
    "text": "initialized",
    "start": "137680",
    "end": "138720"
  },
  {
    "text": "cni is being called it creates a pseudo",
    "start": "138720",
    "end": "141680"
  },
  {
    "text": "interface",
    "start": "141680",
    "end": "142560"
  },
  {
    "text": "assigns it an ip and attaches it to the",
    "start": "142560",
    "end": "145360"
  },
  {
    "text": "underlay network",
    "start": "145360",
    "end": "146879"
  },
  {
    "text": "and when a pos gets deleted cnn",
    "start": "146879",
    "end": "150239"
  },
  {
    "text": "is again being called to clean up the",
    "start": "150239",
    "end": "154840"
  },
  {
    "text": "resources",
    "start": "154840",
    "end": "156959"
  },
  {
    "text": "so the cni api is pretty pretty simple",
    "start": "156959",
    "end": "160080"
  },
  {
    "text": "in terms of what cni supports",
    "start": "160080",
    "end": "162160"
  },
  {
    "text": "because all you you know it says add",
    "start": "162160",
    "end": "164720"
  },
  {
    "text": "delete",
    "start": "164720",
    "end": "165360"
  },
  {
    "text": "check you know it's it's it's a",
    "start": "165360",
    "end": "166959"
  },
  {
    "text": "relatively simple api in terms of what",
    "start": "166959",
    "end": "168959"
  },
  {
    "text": "needs to be called in order to launch a",
    "start": "168959",
    "end": "170400"
  },
  {
    "text": "container",
    "start": "170400",
    "end": "171120"
  },
  {
    "text": "but it is a separate api that's managed",
    "start": "171120",
    "end": "172800"
  },
  {
    "text": "by separate group yeah that's cool",
    "start": "172800",
    "end": "175360"
  },
  {
    "text": "and let's go over some traditional linux",
    "start": "175360",
    "end": "178800"
  },
  {
    "text": "constructs that are used by",
    "start": "178800",
    "end": "180800"
  },
  {
    "text": "most of the cni plugins to provide",
    "start": "180800",
    "end": "182680"
  },
  {
    "text": "connectivity",
    "start": "182680",
    "end": "183840"
  },
  {
    "text": "first one is linked network namespaces",
    "start": "183840",
    "end": "186480"
  },
  {
    "text": "so they provide a separate",
    "start": "186480",
    "end": "188319"
  },
  {
    "text": "instance of kernel networking stack like",
    "start": "188319",
    "end": "190720"
  },
  {
    "text": "a different",
    "start": "190720",
    "end": "191920"
  },
  {
    "text": "set of interfaces routes firewalls to",
    "start": "191920",
    "end": "195519"
  },
  {
    "text": "isolate",
    "start": "195519",
    "end": "196400"
  },
  {
    "text": "processes all parts and holes are",
    "start": "196400",
    "end": "199120"
  },
  {
    "text": "sitting on different network namespaces",
    "start": "199120",
    "end": "201040"
  },
  {
    "text": "in this diagram we have a single node",
    "start": "201040",
    "end": "203360"
  },
  {
    "text": "we have two parts and you see all of",
    "start": "203360",
    "end": "205920"
  },
  {
    "text": "them are sitting on different network",
    "start": "205920",
    "end": "208400"
  },
  {
    "text": "namespaces and communicate to",
    "start": "208400",
    "end": "210879"
  },
  {
    "text": "communicate between pod network",
    "start": "210879",
    "end": "212799"
  },
  {
    "text": "namespace and uh not host network",
    "start": "212799",
    "end": "215280"
  },
  {
    "text": "namespace",
    "start": "215280",
    "end": "216239"
  },
  {
    "text": "we use uh a linux network construct",
    "start": "216239",
    "end": "218879"
  },
  {
    "text": "called",
    "start": "218879",
    "end": "219280"
  },
  {
    "text": "wheat pairs here you see eti0 and",
    "start": "219280",
    "end": "223440"
  },
  {
    "text": "wheat a is one with pair and the other",
    "start": "223440",
    "end": "225680"
  },
  {
    "text": "one is this one",
    "start": "225680",
    "end": "227280"
  },
  {
    "text": "and they are nothing but page cables",
    "start": "227280",
    "end": "229920"
  },
  {
    "text": "what goes in",
    "start": "229920",
    "end": "230959"
  },
  {
    "text": "one end comes out the other",
    "start": "230959",
    "end": "234080"
  },
  {
    "text": "we also want uh pots to talk to each",
    "start": "234080",
    "end": "237120"
  },
  {
    "text": "other",
    "start": "237120",
    "end": "237599"
  },
  {
    "text": "and use a very familiar construct called",
    "start": "237599",
    "end": "240239"
  },
  {
    "text": "linux bridges",
    "start": "240239",
    "end": "242080"
  },
  {
    "text": "so it is a it is a",
    "start": "242080",
    "end": "245920"
  },
  {
    "text": "networking switch",
    "start": "245920",
    "end": "249360"
  },
  {
    "text": "it is nothing but but switch and does",
    "start": "251519",
    "end": "253840"
  },
  {
    "text": "layer to",
    "start": "253840",
    "end": "254640"
  },
  {
    "text": "uh forwarding",
    "start": "254640",
    "end": "257919"
  },
  {
    "text": "also when we want when our pods wants to",
    "start": "257919",
    "end": "261440"
  },
  {
    "text": "communicate with the horse and",
    "start": "261440",
    "end": "262960"
  },
  {
    "text": "hospitals communicate with the paws rod",
    "start": "262960",
    "end": "265199"
  },
  {
    "text": "tables comes into picture",
    "start": "265199",
    "end": "267199"
  },
  {
    "text": "so here you see uh everything that is",
    "start": "267199",
    "end": "270479"
  },
  {
    "text": "destined to",
    "start": "270479",
    "end": "271680"
  },
  {
    "text": "pot ciders will be sent to bridge and",
    "start": "271680",
    "end": "275040"
  },
  {
    "text": "bridge",
    "start": "275040",
    "end": "275600"
  },
  {
    "text": "knows how to forward them as i mentioned",
    "start": "275600",
    "end": "277919"
  },
  {
    "text": "hosts and mods are sitting on different",
    "start": "277919",
    "end": "279680"
  },
  {
    "text": "network name space",
    "start": "279680",
    "end": "280720"
  },
  {
    "text": "and they have different route table",
    "start": "280720",
    "end": "283120"
  },
  {
    "text": "rules as you can see here",
    "start": "283120",
    "end": "286479"
  },
  {
    "text": "so we looked at how posts can",
    "start": "289280",
    "end": "291199"
  },
  {
    "text": "communicate with each other in a single",
    "start": "291199",
    "end": "293520"
  },
  {
    "text": "node",
    "start": "293520",
    "end": "294320"
  },
  {
    "text": "when there are multiple nodes there are",
    "start": "294320",
    "end": "296080"
  },
  {
    "text": "different networking approaches c and i",
    "start": "296080",
    "end": "298000"
  },
  {
    "text": "offer",
    "start": "298000",
    "end": "299040"
  },
  {
    "text": "we can categorize them as non-overlay",
    "start": "299040",
    "end": "301600"
  },
  {
    "text": "and overlay networking",
    "start": "301600",
    "end": "303280"
  },
  {
    "text": "approaches so the first option in",
    "start": "303280",
    "end": "306000"
  },
  {
    "text": "non-overlay networking",
    "start": "306000",
    "end": "307520"
  },
  {
    "text": "is layer to networking when the mods are",
    "start": "307520",
    "end": "310639"
  },
  {
    "text": "in the same subnet or vpc",
    "start": "310639",
    "end": "313840"
  },
  {
    "text": "virtual private cloud traffic can be",
    "start": "313840",
    "end": "316080"
  },
  {
    "text": "routed using",
    "start": "316080",
    "end": "317600"
  },
  {
    "text": "l2 networking another option is",
    "start": "317600",
    "end": "321120"
  },
  {
    "text": "providing a pure layer 3 networking",
    "start": "321120",
    "end": "324560"
  },
  {
    "text": "so this option requires some",
    "start": "324560",
    "end": "326240"
  },
  {
    "text": "configuration in the underlying network",
    "start": "326240",
    "end": "328240"
  },
  {
    "text": "so",
    "start": "328240",
    "end": "328560"
  },
  {
    "text": "it is only suitable if underlying",
    "start": "328560",
    "end": "330479"
  },
  {
    "text": "network can be controlled",
    "start": "330479",
    "end": "332240"
  },
  {
    "text": "so this is mostly possible in maybe",
    "start": "332240",
    "end": "334880"
  },
  {
    "text": "private data centers",
    "start": "334880",
    "end": "336320"
  },
  {
    "text": "and there are several ways to achieve",
    "start": "336320",
    "end": "338800"
  },
  {
    "text": "this kelco uses bgp",
    "start": "338800",
    "end": "340560"
  },
  {
    "text": "or private data centers may implement",
    "start": "340560",
    "end": "342800"
  },
  {
    "text": "their own cni to provide layer 3",
    "start": "342800",
    "end": "344800"
  },
  {
    "text": "networking",
    "start": "344800",
    "end": "347360"
  },
  {
    "text": "and then when when arnolds are not",
    "start": "347759",
    "end": "351039"
  },
  {
    "text": "sitting on the",
    "start": "351039",
    "end": "352400"
  },
  {
    "text": "same subnet or we don't have any control",
    "start": "352400",
    "end": "354880"
  },
  {
    "text": "on the underlying network there is",
    "start": "354880",
    "end": "356560"
  },
  {
    "text": "overlay networking option",
    "start": "356560",
    "end": "358319"
  },
  {
    "text": "where packets gets encapsulated",
    "start": "358319",
    "end": "361600"
  },
  {
    "text": "so that underlying network doesn't have",
    "start": "361600",
    "end": "363360"
  },
  {
    "text": "to know anything about pod siders",
    "start": "363360",
    "end": "366800"
  },
  {
    "text": "and there are several encapsulation",
    "start": "366800",
    "end": "369520"
  },
  {
    "text": "methods",
    "start": "369520",
    "end": "370880"
  },
  {
    "text": "that can be used for encapsulation",
    "start": "370880",
    "end": "374080"
  },
  {
    "text": "and the last one is hybrid mode whenever",
    "start": "374080",
    "end": "377840"
  },
  {
    "text": "so since there is encapsulation and the",
    "start": "377840",
    "end": "380000"
  },
  {
    "text": "capsulation process in the overlay",
    "start": "380000",
    "end": "381600"
  },
  {
    "text": "network there is some overhead",
    "start": "381600",
    "end": "385199"
  },
  {
    "text": "so to avoid this hybrid mod comes into",
    "start": "385600",
    "end": "388800"
  },
  {
    "text": "picture",
    "start": "388800",
    "end": "389600"
  },
  {
    "text": "we encapsulate a package only when it is",
    "start": "389600",
    "end": "393440"
  },
  {
    "text": "necessary",
    "start": "393440",
    "end": "394800"
  },
  {
    "text": "and entry and calculate supports uh this",
    "start": "394800",
    "end": "397759"
  },
  {
    "text": "hybrid mode as well",
    "start": "397759",
    "end": "400880"
  },
  {
    "text": "yeah i'll just quickly say eks is um",
    "start": "401440",
    "end": "404400"
  },
  {
    "text": "we're going to go over eks",
    "start": "404400",
    "end": "405840"
  },
  {
    "text": "calico and in a little bit and you'll",
    "start": "405840",
    "end": "408880"
  },
  {
    "text": "see the differences but",
    "start": "408880",
    "end": "410400"
  },
  {
    "text": "um you know in eks you don't need an",
    "start": "410400",
    "end": "412560"
  },
  {
    "text": "overlay if you're using their cni",
    "start": "412560",
    "end": "414560"
  },
  {
    "text": "because the type control that they have",
    "start": "414560",
    "end": "416720"
  },
  {
    "text": "over ip addresses and being able to use",
    "start": "416720",
    "end": "418560"
  },
  {
    "text": "enis and stuff",
    "start": "418560",
    "end": "421199"
  },
  {
    "text": "other cni's you know use those overlays",
    "start": "421199",
    "end": "424000"
  },
  {
    "text": "yeah keep going",
    "start": "424000",
    "end": "425440"
  },
  {
    "text": "yeah so we mentioned uh we need",
    "start": "425440",
    "end": "427919"
  },
  {
    "text": "encapsulation for",
    "start": "427919",
    "end": "428960"
  },
  {
    "text": "all overlay uh networking so let's have",
    "start": "428960",
    "end": "431599"
  },
  {
    "text": "a look at how encapsulation works",
    "start": "431599",
    "end": "434560"
  },
  {
    "text": "cmi has support for several",
    "start": "434560",
    "end": "436960"
  },
  {
    "text": "encapsulation",
    "start": "436960",
    "end": "437919"
  },
  {
    "text": "methods but uh let's look at two of them",
    "start": "437919",
    "end": "440319"
  },
  {
    "text": "here ipip and vxlan tunneling",
    "start": "440319",
    "end": "443599"
  },
  {
    "text": "so basically what happens is source node",
    "start": "443599",
    "end": "445919"
  },
  {
    "text": "encapsulates network packets packets in",
    "start": "445919",
    "end": "448479"
  },
  {
    "text": "another header",
    "start": "448479",
    "end": "449599"
  },
  {
    "text": "so that underlying network can route",
    "start": "449599",
    "end": "451599"
  },
  {
    "text": "them without knowing pod ips",
    "start": "451599",
    "end": "453840"
  },
  {
    "text": "so for example in ip and ip tunneling",
    "start": "453840",
    "end": "456479"
  },
  {
    "text": "you see this is the",
    "start": "456479",
    "end": "458720"
  },
  {
    "text": "ip header which has pod ips",
    "start": "458720",
    "end": "462319"
  },
  {
    "text": "and it it gets encapsulated with another",
    "start": "462319",
    "end": "466080"
  },
  {
    "text": "header with not eyepiece so that",
    "start": "466080",
    "end": "468560"
  },
  {
    "text": "underlying will",
    "start": "468560",
    "end": "469599"
  },
  {
    "text": "only have to route node eyepiece so when",
    "start": "469599",
    "end": "472720"
  },
  {
    "text": "you capture the packets using wireshark",
    "start": "472720",
    "end": "475759"
  },
  {
    "text": "and when you when you check those",
    "start": "475759",
    "end": "477199"
  },
  {
    "text": "packers you will see two",
    "start": "477199",
    "end": "479120"
  },
  {
    "text": "ip headers in the packets and for the",
    "start": "479120",
    "end": "482160"
  },
  {
    "text": "extent on the link",
    "start": "482160",
    "end": "483360"
  },
  {
    "text": "ethernet frames gets encapsulated into",
    "start": "483360",
    "end": "486319"
  },
  {
    "text": "udp packets",
    "start": "486319",
    "end": "488479"
  },
  {
    "text": "and again when you see the shark",
    "start": "488479",
    "end": "491759"
  },
  {
    "text": "packed captured you will see the",
    "start": "491759",
    "end": "493599"
  },
  {
    "text": "ethernet packard and on top of it there",
    "start": "493599",
    "end": "495759"
  },
  {
    "text": "will be a",
    "start": "495759",
    "end": "496479"
  },
  {
    "text": "udp packet",
    "start": "496479",
    "end": "500080"
  },
  {
    "text": "basically",
    "start": "500080",
    "end": "502560"
  },
  {
    "text": "okay now we are going to briefly mention",
    "start": "504639",
    "end": "507280"
  },
  {
    "text": "how",
    "start": "507280",
    "end": "507840"
  },
  {
    "text": "some cni's are providing networking at a",
    "start": "507840",
    "end": "510400"
  },
  {
    "text": "high level",
    "start": "510400",
    "end": "511199"
  },
  {
    "text": "so it is important to know underlying",
    "start": "511199",
    "end": "513360"
  },
  {
    "text": "constructs your cni",
    "start": "513360",
    "end": "514719"
  },
  {
    "text": "is using to better debug connectivity",
    "start": "514719",
    "end": "517518"
  },
  {
    "text": "issues",
    "start": "517519",
    "end": "518320"
  },
  {
    "text": "let's start with calico calco supports",
    "start": "518320",
    "end": "521360"
  },
  {
    "text": "multiple data planes like standard linux",
    "start": "521360",
    "end": "524240"
  },
  {
    "text": "networking",
    "start": "524240",
    "end": "525120"
  },
  {
    "text": "or linux ebpf and windows networking",
    "start": "525120",
    "end": "529920"
  },
  {
    "text": "also it has three networking flavors it",
    "start": "529920",
    "end": "533040"
  },
  {
    "text": "supports pure layer 3",
    "start": "533040",
    "end": "534959"
  },
  {
    "text": "networking where traffic is not",
    "start": "534959",
    "end": "536640"
  },
  {
    "text": "encapsulated",
    "start": "536640",
    "end": "538399"
  },
  {
    "text": "for this it uses bgp a route sharing",
    "start": "538399",
    "end": "542000"
  },
  {
    "text": "and underlying network needs to support",
    "start": "542000",
    "end": "544160"
  },
  {
    "text": "bgp as well",
    "start": "544160",
    "end": "545600"
  },
  {
    "text": "and set up underlying growth accordingly",
    "start": "545600",
    "end": "548000"
  },
  {
    "text": "otherwise this is not an option",
    "start": "548000",
    "end": "550240"
  },
  {
    "text": "it also supports overlay network option",
    "start": "550240",
    "end": "553600"
  },
  {
    "text": "supports both ip and ip and vxlan",
    "start": "553600",
    "end": "555760"
  },
  {
    "text": "encapsulation",
    "start": "555760",
    "end": "556880"
  },
  {
    "text": "also it has hybrid mode and uses",
    "start": "556880",
    "end": "560560"
  },
  {
    "text": "layer 2 networking for if the nodes are",
    "start": "560560",
    "end": "564320"
  },
  {
    "text": "on the same subnet and uses overlay",
    "start": "564320",
    "end": "567440"
  },
  {
    "text": "for different softness",
    "start": "567440",
    "end": "570880"
  },
  {
    "text": "we are not going to go into detail of",
    "start": "571760",
    "end": "574880"
  },
  {
    "text": "these cni architectures it",
    "start": "574880",
    "end": "577920"
  },
  {
    "text": "is out of scope of this talk",
    "start": "577920",
    "end": "582240"
  },
  {
    "text": "let's talk about another cni called",
    "start": "583120",
    "end": "587279"
  },
  {
    "text": "entria so calico did not have any bridge",
    "start": "587279",
    "end": "591360"
  },
  {
    "text": "um in its um while doing networking",
    "start": "591360",
    "end": "595440"
  },
  {
    "text": "uh but here we see a virtual",
    "start": "595440",
    "end": "598560"
  },
  {
    "text": "bridge that's being used uh pretty",
    "start": "598560",
    "end": "601279"
  },
  {
    "text": "similar to linux bridges",
    "start": "601279",
    "end": "604320"
  },
  {
    "text": "so it routes traffic using multiple file",
    "start": "604320",
    "end": "608399"
  },
  {
    "text": "tables",
    "start": "608399",
    "end": "608959"
  },
  {
    "text": "and supports what windows and linux",
    "start": "608959",
    "end": "612240"
  },
  {
    "text": "if you like look at the diagram",
    "start": "612240",
    "end": "616000"
  },
  {
    "text": "when we talk about flow tables so open v",
    "start": "616880",
    "end": "619440"
  },
  {
    "text": "switch",
    "start": "619440",
    "end": "620160"
  },
  {
    "text": "is the back end for like s mentioned um",
    "start": "620160",
    "end": "623760"
  },
  {
    "text": "andrea and so open v switch is based on",
    "start": "623760",
    "end": "626959"
  },
  {
    "text": "these flow tables",
    "start": "626959",
    "end": "628160"
  },
  {
    "text": "and that's the whole that's the whole",
    "start": "628160",
    "end": "630160"
  },
  {
    "text": "way that you architect a networking open",
    "start": "630160",
    "end": "631839"
  },
  {
    "text": "v-switch compared with",
    "start": "631839",
    "end": "633360"
  },
  {
    "text": "you know what calico is doing in the",
    "start": "633360",
    "end": "634640"
  },
  {
    "text": "last slide with um",
    "start": "634640",
    "end": "636399"
  },
  {
    "text": "just using bgp for the routing i just",
    "start": "636399",
    "end": "638240"
  },
  {
    "text": "wanted to repeat right",
    "start": "638240",
    "end": "639600"
  },
  {
    "text": "yeah and uh if if you see",
    "start": "639600",
    "end": "643040"
  },
  {
    "text": "um the diagram here are",
    "start": "643040",
    "end": "646320"
  },
  {
    "text": "we have two parts they are connected to",
    "start": "646320",
    "end": "648480"
  },
  {
    "text": "obvious spirit using read pairs",
    "start": "648480",
    "end": "650640"
  },
  {
    "text": "this part is the same with a regular",
    "start": "650640",
    "end": "653920"
  },
  {
    "text": "linux architecture but on the obs spirit",
    "start": "653920",
    "end": "657279"
  },
  {
    "text": "side we are seeing a gateway zero port",
    "start": "657279",
    "end": "660320"
  },
  {
    "text": "which is the gateway of the node subnet",
    "start": "660320",
    "end": "662800"
  },
  {
    "text": "and",
    "start": "662800",
    "end": "663600"
  },
  {
    "text": "zero port which is the tunnel part",
    "start": "663600",
    "end": "667040"
  },
  {
    "text": "that is used for creating overlay",
    "start": "667040",
    "end": "669040"
  },
  {
    "text": "tunnels between nodes",
    "start": "669040",
    "end": "671600"
  },
  {
    "text": "and andrea is also supporting overlay",
    "start": "671600",
    "end": "674320"
  },
  {
    "text": "mode",
    "start": "674320",
    "end": "675279"
  },
  {
    "text": "it supports many many different uh",
    "start": "675279",
    "end": "679040"
  },
  {
    "text": "encapsulation techniques uh it also has",
    "start": "679040",
    "end": "682000"
  },
  {
    "text": "support for",
    "start": "682000",
    "end": "682880"
  },
  {
    "text": "hybrid mods where it uses encapsulation",
    "start": "682880",
    "end": "686160"
  },
  {
    "text": "only for the inter traffic in in intern",
    "start": "686160",
    "end": "688959"
  },
  {
    "text": "network traffic",
    "start": "688959",
    "end": "690320"
  },
  {
    "text": "so we are going to see we'll actually",
    "start": "690320",
    "end": "692640"
  },
  {
    "text": "see when we look at the entrance stuff",
    "start": "692640",
    "end": "694240"
  },
  {
    "text": "we'll see that all the traffic actually",
    "start": "694240",
    "end": "695839"
  },
  {
    "text": "flows into that",
    "start": "695839",
    "end": "698160"
  },
  {
    "text": "into that gateway um specifically even",
    "start": "698160",
    "end": "701279"
  },
  {
    "text": "local traffic",
    "start": "701279",
    "end": "702079"
  },
  {
    "text": "which is interesting from a control and",
    "start": "702079",
    "end": "704320"
  },
  {
    "text": "security perspective",
    "start": "704320",
    "end": "706880"
  },
  {
    "text": "and one one important difference here",
    "start": "706880",
    "end": "710480"
  },
  {
    "text": "is that network policies are installed",
    "start": "710480",
    "end": "712480"
  },
  {
    "text": "by obvious flaws",
    "start": "712480",
    "end": "714480"
  },
  {
    "text": "instead of like click using iptables",
    "start": "714480",
    "end": "718000"
  },
  {
    "text": "ebpf",
    "start": "718000",
    "end": "720720"
  },
  {
    "text": "so here we are going to show some",
    "start": "721519",
    "end": "724160"
  },
  {
    "text": "examples of",
    "start": "724160",
    "end": "725120"
  },
  {
    "text": "manually and overlay routing so",
    "start": "725120",
    "end": "728240"
  },
  {
    "text": "here we are seeing uh non-overlay which",
    "start": "728240",
    "end": "731279"
  },
  {
    "text": "which where we do not encapsulate",
    "start": "731279",
    "end": "733920"
  },
  {
    "text": "packers and use",
    "start": "733920",
    "end": "735040"
  },
  {
    "text": "a regular layer to networking like arp",
    "start": "735040",
    "end": "737600"
  },
  {
    "text": "and route entry",
    "start": "737600",
    "end": "738880"
  },
  {
    "text": "here we have two parts that are",
    "start": "738880",
    "end": "741440"
  },
  {
    "text": "connected",
    "start": "741440",
    "end": "742240"
  },
  {
    "text": "um via a switch that",
    "start": "742240",
    "end": "745279"
  },
  {
    "text": "that is to demonstrate they are sitting",
    "start": "745279",
    "end": "746959"
  },
  {
    "text": "on the same l2 network",
    "start": "746959",
    "end": "749279"
  },
  {
    "text": "and these are the subnets of the pos",
    "start": "749279",
    "end": "752320"
  },
  {
    "text": "inside nodes so when a pad one wants to",
    "start": "752320",
    "end": "756160"
  },
  {
    "text": "talk with pad three",
    "start": "756160",
    "end": "759200"
  },
  {
    "text": "it sends traffic through the wheat",
    "start": "759200",
    "end": "761920"
  },
  {
    "text": "player",
    "start": "761920",
    "end": "762560"
  },
  {
    "text": "hits the bridge be rich knows that it is",
    "start": "762560",
    "end": "765760"
  },
  {
    "text": "not",
    "start": "765760",
    "end": "766079"
  },
  {
    "text": "destined to some pod in this node",
    "start": "766079",
    "end": "769920"
  },
  {
    "text": "has its sense traffic to the route table",
    "start": "769920",
    "end": "772639"
  },
  {
    "text": "in the route table",
    "start": "772639",
    "end": "774480"
  },
  {
    "text": "so",
    "start": "774480",
    "end": "776639"
  },
  {
    "text": "every node's port cider is known",
    "start": "777680",
    "end": "781200"
  },
  {
    "text": "in the route table so here you see 172",
    "start": "781200",
    "end": "784839"
  },
  {
    "text": "16.1.0",
    "start": "784839",
    "end": "786399"
  },
  {
    "text": "24 air traffic that comes to the",
    "start": "786399",
    "end": "789920"
  },
  {
    "text": "pod sider of this node has to be",
    "start": "789920",
    "end": "794000"
  },
  {
    "text": "sent via its eth0 device",
    "start": "794000",
    "end": "797360"
  },
  {
    "text": "and next up for those packets",
    "start": "797360",
    "end": "800399"
  },
  {
    "text": "will be this one so",
    "start": "800399",
    "end": "803440"
  },
  {
    "text": "will be the not to id when you just",
    "start": "803440",
    "end": "805360"
  },
  {
    "text": "literally run route",
    "start": "805360",
    "end": "806880"
  },
  {
    "text": "n in your linux terminal right every",
    "start": "806880",
    "end": "808800"
  },
  {
    "text": "linux operating system has one of these",
    "start": "808800",
    "end": "810800"
  },
  {
    "text": "routing tables so",
    "start": "810800",
    "end": "812079"
  },
  {
    "text": "this is some a command anybody can run",
    "start": "812079",
    "end": "813920"
  },
  {
    "text": "at home if they want",
    "start": "813920",
    "end": "815200"
  },
  {
    "text": "yes and after uh it is throughout tables",
    "start": "815200",
    "end": "819440"
  },
  {
    "text": "the packet will be sent through eti0",
    "start": "819440",
    "end": "822639"
  },
  {
    "text": "and routed using a",
    "start": "822639",
    "end": "825680"
  },
  {
    "text": "standard layer to networking and",
    "start": "825680",
    "end": "828720"
  },
  {
    "text": "and then arrives to the second node",
    "start": "828720",
    "end": "833199"
  },
  {
    "text": "and when it arrives it is gonna again",
    "start": "833199",
    "end": "835360"
  },
  {
    "text": "check the rod table",
    "start": "835360",
    "end": "836959"
  },
  {
    "text": "and every packet that is destined to the",
    "start": "836959",
    "end": "840959"
  },
  {
    "text": "pot sider will be sent to bridge",
    "start": "840959",
    "end": "844079"
  },
  {
    "text": "br 0 interface in in in both nodes",
    "start": "844079",
    "end": "848079"
  },
  {
    "text": "so the packet will arrive br",
    "start": "848079",
    "end": "851839"
  },
  {
    "text": "0 bridge and bridge knows where to",
    "start": "851839",
    "end": "855040"
  },
  {
    "text": "forward it through which",
    "start": "855040",
    "end": "857040"
  },
  {
    "text": "wheat player it should forward the",
    "start": "857040",
    "end": "859600"
  },
  {
    "text": "packet",
    "start": "859600",
    "end": "860160"
  },
  {
    "text": "and hence this is how it works in in the",
    "start": "860160",
    "end": "863120"
  },
  {
    "text": "same subnet",
    "start": "863120",
    "end": "864079"
  },
  {
    "text": "non-overlay networking and in calico you",
    "start": "864079",
    "end": "867440"
  },
  {
    "text": "wouldn't have that bridge right so",
    "start": "867440",
    "end": "868560"
  },
  {
    "text": "that's you would just have",
    "start": "868560",
    "end": "870079"
  },
  {
    "text": "just straight from the routing the",
    "start": "870079",
    "end": "871600"
  },
  {
    "text": "routing you'll hit the linux kernel and",
    "start": "871600",
    "end": "873040"
  },
  {
    "text": "the linux kernel says okay i know",
    "start": "873040",
    "end": "874320"
  },
  {
    "text": "exactly how to get to that ip address",
    "start": "874320",
    "end": "875839"
  },
  {
    "text": "and it will have a attach",
    "start": "875839",
    "end": "877440"
  },
  {
    "text": "exactly so this actually is a good point",
    "start": "877440",
    "end": "880480"
  },
  {
    "text": "this example uh",
    "start": "880480",
    "end": "881519"
  },
  {
    "text": "applies to both calico and andrea",
    "start": "881519",
    "end": "884560"
  },
  {
    "text": "except that calico instead of having a",
    "start": "884560",
    "end": "886880"
  },
  {
    "text": "bridge has more rod table entries",
    "start": "886880",
    "end": "890800"
  },
  {
    "text": "you will see that yeah and",
    "start": "891040",
    "end": "895440"
  },
  {
    "text": "so yeah if for example a non-overlay",
    "start": "895440",
    "end": "898240"
  },
  {
    "text": "network is not an option for you because",
    "start": "898240",
    "end": "900639"
  },
  {
    "text": "you are sitting on",
    "start": "900639",
    "end": "901760"
  },
  {
    "text": "a different uh subnets or",
    "start": "901760",
    "end": "904880"
  },
  {
    "text": "you don't don't have any control in the",
    "start": "904880",
    "end": "906639"
  },
  {
    "text": "underlying network and cannot do layer 3",
    "start": "906639",
    "end": "908880"
  },
  {
    "text": "networking",
    "start": "908880",
    "end": "909680"
  },
  {
    "text": "overlay is the way to go and",
    "start": "909680",
    "end": "912959"
  },
  {
    "text": "encapsulation uh can be done in",
    "start": "912959",
    "end": "916560"
  },
  {
    "text": "many ways so you see the only difference",
    "start": "916560",
    "end": "920320"
  },
  {
    "text": "between this picture and this",
    "start": "920320",
    "end": "922160"
  },
  {
    "text": "picture is this one has ton ton0",
    "start": "922160",
    "end": "925440"
  },
  {
    "text": "interfaces",
    "start": "925440",
    "end": "926320"
  },
  {
    "text": "that is used to encapsulate packets and",
    "start": "926320",
    "end": "929519"
  },
  {
    "text": "you see there's a change here too we",
    "start": "929519",
    "end": "931759"
  },
  {
    "text": "added a router here to demonstrate that",
    "start": "931759",
    "end": "934160"
  },
  {
    "text": "this is this is not a l2 network but it",
    "start": "934160",
    "end": "936720"
  },
  {
    "text": "is it is a layer 3 network",
    "start": "936720",
    "end": "938560"
  },
  {
    "text": "this can be the internet or private or",
    "start": "938560",
    "end": "940720"
  },
  {
    "text": "public clouds",
    "start": "940720",
    "end": "942800"
  },
  {
    "text": "so here again uh when the pod one must",
    "start": "942800",
    "end": "945920"
  },
  {
    "text": "communicate with",
    "start": "945920",
    "end": "946720"
  },
  {
    "text": "part two it will hit the bridge then it",
    "start": "946720",
    "end": "949759"
  },
  {
    "text": "will",
    "start": "949759",
    "end": "950240"
  },
  {
    "text": "hit the route table but in route table",
    "start": "950240",
    "end": "952560"
  },
  {
    "text": "there's a difference so",
    "start": "952560",
    "end": "954800"
  },
  {
    "text": "every packet that is destined to the",
    "start": "954800",
    "end": "957920"
  },
  {
    "text": "other node spot cider is a gun",
    "start": "957920",
    "end": "961440"
  },
  {
    "text": "is is going to be forward to two ton",
    "start": "961440",
    "end": "964399"
  },
  {
    "text": "zero",
    "start": "964399",
    "end": "966800"
  },
  {
    "text": "first yeah so um",
    "start": "966839",
    "end": "969600"
  },
  {
    "text": "on the left i've said this before but",
    "start": "969600",
    "end": "971519"
  },
  {
    "text": "just to repeat again",
    "start": "971519",
    "end": "972880"
  },
  {
    "text": "um on the left is that's your that's",
    "start": "972880",
    "end": "975279"
  },
  {
    "text": "your cloud stuff right that's your",
    "start": "975279",
    "end": "977440"
  },
  {
    "text": "eks that's your gke that's your if",
    "start": "977440",
    "end": "980320"
  },
  {
    "text": "you're using something like a an",
    "start": "980320",
    "end": "982800"
  },
  {
    "text": "nsx or something like that you can have",
    "start": "982800",
    "end": "984880"
  },
  {
    "text": "this fancy non-overlay stuff set up for",
    "start": "984880",
    "end": "987279"
  },
  {
    "text": "you",
    "start": "987279",
    "end": "987759"
  },
  {
    "text": "using hypervisor native network tooling",
    "start": "987759",
    "end": "990480"
  },
  {
    "text": "on the right",
    "start": "990480",
    "end": "991199"
  },
  {
    "text": "is typically when you're spinning up",
    "start": "991199",
    "end": "992720"
  },
  {
    "text": "your own clusters that's when you're",
    "start": "992720",
    "end": "994720"
  },
  {
    "text": "using a cni provider",
    "start": "994720",
    "end": "996000"
  },
  {
    "text": "that will kind of abstract that all the",
    "start": "996000",
    "end": "998240"
  },
  {
    "text": "way for you and using an overlay",
    "start": "998240",
    "end": "1000160"
  },
  {
    "text": "um you know for for people that don't",
    "start": "1000160",
    "end": "1002399"
  },
  {
    "text": "have a whole lot of experience with this",
    "start": "1002399",
    "end": "1003759"
  },
  {
    "text": "stuff",
    "start": "1003759",
    "end": "1004480"
  },
  {
    "text": "right and uh yeah the packets will be",
    "start": "1004480",
    "end": "1008079"
  },
  {
    "text": "sent to town zero and there's a process",
    "start": "1008079",
    "end": "1010880"
  },
  {
    "text": "attached to this sound zero interface",
    "start": "1010880",
    "end": "1012880"
  },
  {
    "text": "that encapsulates the traffic",
    "start": "1012880",
    "end": "1014639"
  },
  {
    "text": "so it adds another header",
    "start": "1014639",
    "end": "1017920"
  },
  {
    "text": "with node ips on top of the pod ips",
    "start": "1017920",
    "end": "1021519"
  },
  {
    "text": "and sends it over the underlying network",
    "start": "1021519",
    "end": "1024400"
  },
  {
    "text": "for",
    "start": "1024400",
    "end": "1024720"
  },
  {
    "text": "underlying network it is simply a packet",
    "start": "1024720",
    "end": "1028319"
  },
  {
    "text": "that is destined from node one to not to",
    "start": "1028319",
    "end": "1031199"
  },
  {
    "text": "so it knows how to route it",
    "start": "1031199",
    "end": "1033520"
  },
  {
    "text": "packet reaches to not to and then it",
    "start": "1033520",
    "end": "1036959"
  },
  {
    "text": "gets encapsulated sent to the bridge and",
    "start": "1036959",
    "end": "1040000"
  },
  {
    "text": "reaches to its final destination",
    "start": "1040000",
    "end": "1044160"
  },
  {
    "text": "so now we are going to see",
    "start": "1044319",
    "end": "1047438"
  },
  {
    "text": "a packet walkthrough for whatever we",
    "start": "1047439",
    "end": "1051679"
  },
  {
    "text": "explained",
    "start": "1051679",
    "end": "1054159"
  },
  {
    "text": "okay so here we go so um the first thing",
    "start": "1054720",
    "end": "1058240"
  },
  {
    "text": "that we're going to do",
    "start": "1058240",
    "end": "1059280"
  },
  {
    "text": "is um i'm going to hit play so that if i",
    "start": "1059280",
    "end": "1062559"
  },
  {
    "text": "don't know if it's playing or not",
    "start": "1062559",
    "end": "1063679"
  },
  {
    "text": "yeah um yeah so first thing we're going",
    "start": "1063679",
    "end": "1066400"
  },
  {
    "text": "to do",
    "start": "1066400",
    "end": "1066960"
  },
  {
    "text": "is uh run art which so def mentioned a",
    "start": "1066960",
    "end": "1070480"
  },
  {
    "text": "little while ago",
    "start": "1070480",
    "end": "1071440"
  },
  {
    "text": "so we can see there that uh you might",
    "start": "1071440",
    "end": "1073520"
  },
  {
    "text": "want to pause it",
    "start": "1073520",
    "end": "1074480"
  },
  {
    "text": "um see there that um oh",
    "start": "1074480",
    "end": "1078880"
  },
  {
    "text": "oh yeah go ahead and just keep it",
    "start": "1078880",
    "end": "1080000"
  },
  {
    "text": "running the whole time don't worry about",
    "start": "1080000",
    "end": "1081120"
  },
  {
    "text": "it okay",
    "start": "1081120",
    "end": "1082559"
  },
  {
    "text": "yeah um so once it's our once we run arp",
    "start": "1082559",
    "end": "1085760"
  },
  {
    "text": "we can see",
    "start": "1085760",
    "end": "1086400"
  },
  {
    "text": "all the stuff that's locally available i",
    "start": "1086400",
    "end": "1089200"
  },
  {
    "text": "think",
    "start": "1089200",
    "end": "1090000"
  },
  {
    "text": "like the uh um what's it called uh",
    "start": "1090000",
    "end": "1095520"
  },
  {
    "text": "the um the the local",
    "start": "1095520",
    "end": "1099600"
  },
  {
    "text": "pods and the local nodes so once the def",
    "start": "1099600",
    "end": "1102320"
  },
  {
    "text": "hits play",
    "start": "1102320",
    "end": "1103039"
  },
  {
    "text": "now we're gonna see it again okay cool",
    "start": "1103039",
    "end": "1105120"
  },
  {
    "text": "yeah so and",
    "start": "1105120",
    "end": "1106160"
  },
  {
    "text": "and that this isn't a calico cluster i'm",
    "start": "1106160",
    "end": "1108160"
  },
  {
    "text": "going to swap back and forth the blue",
    "start": "1108160",
    "end": "1109600"
  },
  {
    "text": "terminal is android the black is calico",
    "start": "1109600",
    "end": "1112080"
  },
  {
    "text": "and then there's another black terminal",
    "start": "1112080",
    "end": "1113600"
  },
  {
    "text": "that's uh eks as well",
    "start": "1113600",
    "end": "1115520"
  },
  {
    "text": "i'm just going to jump around and show",
    "start": "1115520",
    "end": "1116640"
  },
  {
    "text": "you the commands here so",
    "start": "1116640",
    "end": "1118559"
  },
  {
    "text": "um yeah so we do that and then we can",
    "start": "1118559",
    "end": "1121600"
  },
  {
    "text": "see that",
    "start": "1121600",
    "end": "1122320"
  },
  {
    "text": "there's these 100 ips and there's these",
    "start": "1122320",
    "end": "1124720"
  },
  {
    "text": "192 ips the 192's those are the nodes",
    "start": "1124720",
    "end": "1126960"
  },
  {
    "text": "now if we run ipnet ns",
    "start": "1126960",
    "end": "1129120"
  },
  {
    "text": "um we ran it really quickly but you can",
    "start": "1129120",
    "end": "1130720"
  },
  {
    "text": "see it again here right",
    "start": "1130720",
    "end": "1132480"
  },
  {
    "text": "we um we don't see it in eks which is",
    "start": "1132480",
    "end": "1134799"
  },
  {
    "text": "interesting i'll leave that as a",
    "start": "1134799",
    "end": "1135919"
  },
  {
    "text": "homework assignment to the",
    "start": "1135919",
    "end": "1137280"
  },
  {
    "text": "viewers here um why my eks cluster",
    "start": "1137280",
    "end": "1139679"
  },
  {
    "text": "didn't show me any network name spaces",
    "start": "1139679",
    "end": "1141120"
  },
  {
    "text": "but cni provides the cni net network",
    "start": "1141120",
    "end": "1143200"
  },
  {
    "text": "namespaces",
    "start": "1143200",
    "end": "1144320"
  },
  {
    "text": "and here you can see that the four pods",
    "start": "1144320",
    "end": "1146480"
  },
  {
    "text": "the hundred pods",
    "start": "1146480",
    "end": "1147919"
  },
  {
    "text": "all have a cni network namespace now",
    "start": "1147919",
    "end": "1150000"
  },
  {
    "text": "turning tcp",
    "start": "1150000",
    "end": "1151679"
  },
  {
    "text": "uh dump on now we can jump in and we can",
    "start": "1151679",
    "end": "1154240"
  },
  {
    "text": "see that there's some traffic going from",
    "start": "1154240",
    "end": "1155840"
  },
  {
    "text": "that 64.0.1 to our 100.98",
    "start": "1155840",
    "end": "1159440"
  },
  {
    "text": "we jump to the bottom and then we can",
    "start": "1159440",
    "end": "1161600"
  },
  {
    "text": "see that",
    "start": "1161600",
    "end": "1162799"
  },
  {
    "text": "um the ip address that 198 ip address",
    "start": "1162799",
    "end": "1166160"
  },
  {
    "text": "that um so by the way that tcp dump is",
    "start": "1166160",
    "end": "1168720"
  },
  {
    "text": "tracing one of those calico interfaces",
    "start": "1168720",
    "end": "1170480"
  },
  {
    "text": "so you do tcp dump dash i",
    "start": "1170480",
    "end": "1172640"
  },
  {
    "text": "on one of the outputs of like for",
    "start": "1172640",
    "end": "1174640"
  },
  {
    "text": "example the ipa command and then you can",
    "start": "1174640",
    "end": "1176559"
  },
  {
    "text": "trace the exact traffic going",
    "start": "1176559",
    "end": "1178000"
  },
  {
    "text": "into that um interface in into that pod",
    "start": "1178000",
    "end": "1180960"
  },
  {
    "text": "and nothing else",
    "start": "1180960",
    "end": "1181919"
  },
  {
    "text": "so okay so we can see that that 198 is",
    "start": "1181919",
    "end": "1184080"
  },
  {
    "text": "actually core dns makes perfect sense",
    "start": "1184080",
    "end": "1185760"
  },
  {
    "text": "coordinates is constantly chatting with",
    "start": "1185760",
    "end": "1187520"
  },
  {
    "text": "the",
    "start": "1187520",
    "end": "1188080"
  },
  {
    "text": "api server trying to figure um with the",
    "start": "1188080",
    "end": "1190240"
  },
  {
    "text": "kubernetes api server trying to figure",
    "start": "1190240",
    "end": "1191760"
  },
  {
    "text": "out",
    "start": "1191760",
    "end": "1192000"
  },
  {
    "text": "endpoints and stuff like that um so",
    "start": "1192000",
    "end": "1195360"
  },
  {
    "text": "um there we go now we",
    "start": "1195360",
    "end": "1198480"
  },
  {
    "text": "now we can do iptable save and then we",
    "start": "1198480",
    "end": "1200480"
  },
  {
    "text": "can go look and see how that routing",
    "start": "1200480",
    "end": "1201919"
  },
  {
    "text": "happens right so",
    "start": "1201919",
    "end": "1203520"
  },
  {
    "text": "um we can see here there's a routing",
    "start": "1203520",
    "end": "1205360"
  },
  {
    "text": "rule that's going to send",
    "start": "1205360",
    "end": "1206720"
  },
  {
    "text": "um anything to 164.0.1",
    "start": "1206720",
    "end": "1210080"
  },
  {
    "text": "um to this to the kubernetes service",
    "start": "1210080",
    "end": "1212640"
  },
  {
    "text": "role",
    "start": "1212640",
    "end": "1213200"
  },
  {
    "text": "dash mpx right so the easiest way to do",
    "start": "1213200",
    "end": "1216080"
  },
  {
    "text": "this",
    "start": "1216080",
    "end": "1216480"
  },
  {
    "text": "if you're not good at ip tables like me",
    "start": "1216480",
    "end": "1218159"
  },
  {
    "text": "is you just say iv iptable save into a",
    "start": "1218159",
    "end": "1220000"
  },
  {
    "text": "text file",
    "start": "1220000",
    "end": "1221120"
  },
  {
    "text": "and then you just jump around and you",
    "start": "1221120",
    "end": "1222640"
  },
  {
    "text": "can use star when you're on top of a",
    "start": "1222640",
    "end": "1224159"
  },
  {
    "text": "word to jump from one chain to another",
    "start": "1224159",
    "end": "1225919"
  },
  {
    "text": "right",
    "start": "1225919",
    "end": "1226559"
  },
  {
    "text": "from one rule to another so literally so",
    "start": "1226559",
    "end": "1229520"
  },
  {
    "text": "you go ahead and hit star and then it",
    "start": "1229520",
    "end": "1230720"
  },
  {
    "text": "takes you right down to coupe service",
    "start": "1230720",
    "end": "1232720"
  },
  {
    "text": "and then you can see the comment there",
    "start": "1232720",
    "end": "1234080"
  },
  {
    "text": "that's the kubernetes api server service",
    "start": "1234080",
    "end": "1235840"
  },
  {
    "text": "now we're on a",
    "start": "1235840",
    "end": "1236880"
  },
  {
    "text": "uh on a time zone mission control uh",
    "start": "1236880",
    "end": "1240080"
  },
  {
    "text": "cluster here which means our api servers",
    "start": "1240080",
    "end": "1241919"
  },
  {
    "text": "are cluster api powered they're running",
    "start": "1241919",
    "end": "1243520"
  },
  {
    "text": "on",
    "start": "1243520",
    "end": "1244000"
  },
  {
    "text": "health support our api servers on host",
    "start": "1244000",
    "end": "1245840"
  },
  {
    "text": "port and so",
    "start": "1245840",
    "end": "1247360"
  },
  {
    "text": "um we've got the api server running on a",
    "start": "1247360",
    "end": "1250640"
  },
  {
    "text": "node local",
    "start": "1250640",
    "end": "1251600"
  },
  {
    "text": "network 192 168 5.156 and we can see",
    "start": "1251600",
    "end": "1255039"
  },
  {
    "text": "that that coupe",
    "start": "1255039",
    "end": "1255840"
  },
  {
    "text": "service endpoint role that the serv that",
    "start": "1255840",
    "end": "1258640"
  },
  {
    "text": "the service pointed to",
    "start": "1258640",
    "end": "1260159"
  },
  {
    "text": "actually finally forwards you to 192 168",
    "start": "1260159",
    "end": "1262840"
  },
  {
    "text": "5.156",
    "start": "1262840",
    "end": "1264240"
  },
  {
    "text": "and if we go and we get our node ip",
    "start": "1264240",
    "end": "1266640"
  },
  {
    "text": "addresses we'll see that that",
    "start": "1266640",
    "end": "1267919"
  },
  {
    "text": "corresponds to",
    "start": "1267919",
    "end": "1269120"
  },
  {
    "text": "the control plane node so this is um how",
    "start": "1269120",
    "end": "1272000"
  },
  {
    "text": "fort",
    "start": "1272000",
    "end": "1272400"
  },
  {
    "text": "just one example of how routing is going",
    "start": "1272400",
    "end": "1274320"
  },
  {
    "text": "to how you can trace through a packet",
    "start": "1274320",
    "end": "1275840"
  },
  {
    "text": "flow",
    "start": "1275840",
    "end": "1276480"
  },
  {
    "text": "from a pod to the out to the host",
    "start": "1276480",
    "end": "1278159"
  },
  {
    "text": "network there's a million other things",
    "start": "1278159",
    "end": "1279679"
  },
  {
    "text": "use cases you may wanna trace for",
    "start": "1279679",
    "end": "1282320"
  },
  {
    "text": "example pod to pod or whatever",
    "start": "1282320",
    "end": "1284080"
  },
  {
    "text": "but it's essentially the same logical",
    "start": "1284080",
    "end": "1286080"
  },
  {
    "text": "series of steps that you can go through",
    "start": "1286080",
    "end": "1288080"
  },
  {
    "text": "um and it would be the same in andrea as",
    "start": "1288080",
    "end": "1290000"
  },
  {
    "text": "well if or or",
    "start": "1290000",
    "end": "1291280"
  },
  {
    "text": "or any other cni provider because the",
    "start": "1291280",
    "end": "1293039"
  },
  {
    "text": "coup proxy is going to",
    "start": "1293039",
    "end": "1294880"
  },
  {
    "text": "um basically have to do roughly the same",
    "start": "1294880",
    "end": "1297520"
  },
  {
    "text": "thing",
    "start": "1297520",
    "end": "1298400"
  },
  {
    "text": "um do keep in mind there are different",
    "start": "1298400",
    "end": "1300400"
  },
  {
    "text": "ways to do coop proxy and there's",
    "start": "1300400",
    "end": "1302000"
  },
  {
    "text": "some systems may not use ip tables",
    "start": "1302000",
    "end": "1303760"
  },
  {
    "text": "there's ipvs and other things",
    "start": "1303760",
    "end": "1305280"
  },
  {
    "text": "other technologies we've gone the simple",
    "start": "1305280",
    "end": "1306960"
  },
  {
    "text": "route though taking those for granted",
    "start": "1306960",
    "end": "1309120"
  },
  {
    "text": "so okay now next looking at the andrea",
    "start": "1309120",
    "end": "1311520"
  },
  {
    "text": "thing",
    "start": "1311520",
    "end": "1312159"
  },
  {
    "text": "um so we can see here the route the",
    "start": "1312159",
    "end": "1314159"
  },
  {
    "text": "output was a little different and i",
    "start": "1314159",
    "end": "1316080"
  },
  {
    "text": "jumped over to eks but",
    "start": "1316080",
    "end": "1317600"
  },
  {
    "text": "you can see now in eks all the gateways",
    "start": "1317600",
    "end": "1319520"
  },
  {
    "text": "are zero zero zero zero",
    "start": "1319520",
    "end": "1320799"
  },
  {
    "text": "now back to andrea you can see the",
    "start": "1320799",
    "end": "1323039"
  },
  {
    "text": "output is this",
    "start": "1323039",
    "end": "1324559"
  },
  {
    "text": "the entry gateways are zero zero zero",
    "start": "1324559",
    "end": "1326159"
  },
  {
    "text": "intro gw zero let's just keep going",
    "start": "1326159",
    "end": "1328480"
  },
  {
    "text": "i think we're going to show it again",
    "start": "1328480",
    "end": "1329440"
  },
  {
    "text": "later so f it's not a big deal so um",
    "start": "1329440",
    "end": "1332320"
  },
  {
    "text": "yeah anyways so here we are now and what",
    "start": "1332320",
    "end": "1334960"
  },
  {
    "text": "we're going to try to do is we're going",
    "start": "1334960",
    "end": "1336080"
  },
  {
    "text": "to try to make",
    "start": "1336080",
    "end": "1336960"
  },
  {
    "text": "in we're back on our calico cluster",
    "start": "1336960",
    "end": "1338720"
  },
  {
    "text": "where i'm going to make a damon set so",
    "start": "1338720",
    "end": "1340080"
  },
  {
    "text": "that means i'm going to have an engine x",
    "start": "1340080",
    "end": "1341200"
  },
  {
    "text": "pawn in every node right",
    "start": "1341200",
    "end": "1342799"
  },
  {
    "text": "and um i'm going to save the iptables",
    "start": "1342799",
    "end": "1346240"
  },
  {
    "text": "rules and we're going to show you",
    "start": "1346240",
    "end": "1347840"
  },
  {
    "text": "what like vanilla routing you just get",
    "start": "1347840",
    "end": "1350480"
  },
  {
    "text": "for free",
    "start": "1350480",
    "end": "1351600"
  },
  {
    "text": "that you have to kind of start you that",
    "start": "1351600",
    "end": "1353679"
  },
  {
    "text": "there's a few iptables rules",
    "start": "1353679",
    "end": "1355360"
  },
  {
    "text": "that we use as a baseline that get",
    "start": "1355360",
    "end": "1356880"
  },
  {
    "text": "created um after you",
    "start": "1356880",
    "end": "1359039"
  },
  {
    "text": "uh create a pod okay these are just",
    "start": "1359039",
    "end": "1361440"
  },
  {
    "text": "these are just",
    "start": "1361440",
    "end": "1362320"
  },
  {
    "text": "generic they're just being created for",
    "start": "1362320",
    "end": "1363919"
  },
  {
    "text": "us by calico the thing to note here is",
    "start": "1363919",
    "end": "1365919"
  },
  {
    "text": "that they're all named",
    "start": "1365919",
    "end": "1367679"
  },
  {
    "text": "um they're all being added to the dash a",
    "start": "1367679",
    "end": "1370400"
  },
  {
    "text": "kali dash tw dash",
    "start": "1370400",
    "end": "1372120"
  },
  {
    "text": "calek418e that's the interface name",
    "start": "1372120",
    "end": "1374559"
  },
  {
    "text": "ignore the comment the name inside the",
    "start": "1374559",
    "end": "1376400"
  },
  {
    "text": "comment is a calico specific thing to do",
    "start": "1376400",
    "end": "1378720"
  },
  {
    "text": "comparison between um between which",
    "start": "1378720",
    "end": "1382320"
  },
  {
    "text": "version of the iptables rules was being",
    "start": "1382320",
    "end": "1384400"
  },
  {
    "text": "written so it's a cni",
    "start": "1384400",
    "end": "1386159"
  },
  {
    "text": "specific thing they need but if you want",
    "start": "1386159",
    "end": "1388400"
  },
  {
    "text": "to look at the rules it's making for a",
    "start": "1388400",
    "end": "1389840"
  },
  {
    "text": "given",
    "start": "1389840",
    "end": "1390400"
  },
  {
    "text": "pod you can look at the dash a what it's",
    "start": "1390400",
    "end": "1392240"
  },
  {
    "text": "being appended to right",
    "start": "1392240",
    "end": "1393760"
  },
  {
    "text": "so that's the change being appended to",
    "start": "1393760",
    "end": "1395120"
  },
  {
    "text": "now we can see the pods are up now we've",
    "start": "1395120",
    "end": "1396960"
  },
  {
    "text": "saved that file and then",
    "start": "1396960",
    "end": "1398320"
  },
  {
    "text": "the the simplest stupidest thing you can",
    "start": "1398320",
    "end": "1400400"
  },
  {
    "text": "do to figure out",
    "start": "1400400",
    "end": "1401919"
  },
  {
    "text": "whether your network policies are",
    "start": "1401919",
    "end": "1403280"
  },
  {
    "text": "working correctly um in",
    "start": "1403280",
    "end": "1405039"
  },
  {
    "text": "in calico and um is going to be you just",
    "start": "1405039",
    "end": "1408000"
  },
  {
    "text": "uh",
    "start": "1408000",
    "end": "1409200"
  },
  {
    "text": "you well first we we need to make our",
    "start": "1409200",
    "end": "1410880"
  },
  {
    "text": "policy so",
    "start": "1410880",
    "end": "1412240"
  },
  {
    "text": "uh yeah okay so we coup ctl create this",
    "start": "1412240",
    "end": "1415200"
  },
  {
    "text": "is a network policy and that network",
    "start": "1415200",
    "end": "1416720"
  },
  {
    "text": "policy",
    "start": "1416720",
    "end": "1417280"
  },
  {
    "text": "is going to um deny traffic",
    "start": "1417280",
    "end": "1420400"
  },
  {
    "text": "to those engine x pods and we know that",
    "start": "1420400",
    "end": "1422720"
  },
  {
    "text": "we're going to see that network policy",
    "start": "1422720",
    "end": "1424400"
  },
  {
    "text": "for sure on this node because this node",
    "start": "1424400",
    "end": "1426720"
  },
  {
    "text": "uh it's a daemon set which means one of",
    "start": "1426720",
    "end": "1428320"
  },
  {
    "text": "these pods is running on every single",
    "start": "1428320",
    "end": "1429840"
  },
  {
    "text": "node in our cluster",
    "start": "1429840",
    "end": "1431200"
  },
  {
    "text": "so we're definitely going to see it and",
    "start": "1431200",
    "end": "1432559"
  },
  {
    "text": "now let's see what the difference is",
    "start": "1432559",
    "end": "1434240"
  },
  {
    "text": "between our last policies and our new",
    "start": "1434240",
    "end": "1436080"
  },
  {
    "text": "policies",
    "start": "1436080",
    "end": "1436960"
  },
  {
    "text": "so we just get diff and now you can see",
    "start": "1436960",
    "end": "1439520"
  },
  {
    "text": "we've got",
    "start": "1439520",
    "end": "1440080"
  },
  {
    "text": "a few a few different lines here and we",
    "start": "1440080",
    "end": "1442799"
  },
  {
    "text": "can see that there are some network",
    "start": "1442799",
    "end": "1444559"
  },
  {
    "text": "policy stanzas",
    "start": "1444559",
    "end": "1446080"
  },
  {
    "text": "um return of policy accepted drop of no",
    "start": "1446080",
    "end": "1448240"
  },
  {
    "text": "policies past packet etc etc right so",
    "start": "1448240",
    "end": "1450640"
  },
  {
    "text": "those are going to get applied after the",
    "start": "1450640",
    "end": "1451919"
  },
  {
    "text": "pre-routing stage",
    "start": "1451919",
    "end": "1454080"
  },
  {
    "text": "um and i'll show you briefly later that",
    "start": "1454080",
    "end": "1457520"
  },
  {
    "text": "this doesn't change your service level",
    "start": "1457520",
    "end": "1459279"
  },
  {
    "text": "routing your coupe proxy",
    "start": "1459279",
    "end": "1460559"
  },
  {
    "text": "routing to your pods and all that stuff",
    "start": "1460559",
    "end": "1462159"
  },
  {
    "text": "still works just the same",
    "start": "1462159",
    "end": "1463679"
  },
  {
    "text": "the only difference is the packets are",
    "start": "1463679",
    "end": "1465039"
  },
  {
    "text": "being dropped once they once they get",
    "start": "1465039",
    "end": "1466799"
  },
  {
    "text": "routed to the pods",
    "start": "1466799",
    "end": "1467919"
  },
  {
    "text": "now okay um",
    "start": "1467919",
    "end": "1472159"
  },
  {
    "text": "so let's see here um",
    "start": "1472159",
    "end": "1475919"
  },
  {
    "text": "yeah here it is so this is so that just",
    "start": "1475919",
    "end": "1478480"
  },
  {
    "text": "so if you've never seen these before you",
    "start": "1478480",
    "end": "1480320"
  },
  {
    "text": "see these decimals this is how load",
    "start": "1480320",
    "end": "1481760"
  },
  {
    "text": "balancing is done from the coupe proxy",
    "start": "1481760",
    "end": "1483279"
  },
  {
    "text": "level that's how it decides exactly",
    "start": "1483279",
    "end": "1484720"
  },
  {
    "text": "which pod",
    "start": "1484720",
    "end": "1485679"
  },
  {
    "text": "is going to get traffic from a service",
    "start": "1485679",
    "end": "1487360"
  },
  {
    "text": "right because obviously you may have 10",
    "start": "1487360",
    "end": "1488799"
  },
  {
    "text": "different pods behind the service",
    "start": "1488799",
    "end": "1490799"
  },
  {
    "text": "and these clusters i've scaled up the",
    "start": "1490799",
    "end": "1492480"
  },
  {
    "text": "amount of core dns replicas so that we",
    "start": "1492480",
    "end": "1494159"
  },
  {
    "text": "have plenty of examples of that",
    "start": "1494159",
    "end": "1496000"
  },
  {
    "text": "um again now we jump over the andrea",
    "start": "1496000",
    "end": "1497760"
  },
  {
    "text": "here in blue and we've got",
    "start": "1497760",
    "end": "1499679"
  },
  {
    "text": "okay namespaces okay so um",
    "start": "1499679",
    "end": "1503279"
  },
  {
    "text": "yeah so we show the namespaces and then",
    "start": "1503279",
    "end": "1505600"
  },
  {
    "text": "um",
    "start": "1505600",
    "end": "1507039"
  },
  {
    "text": "uh we delete everything and then after",
    "start": "1507039",
    "end": "1510080"
  },
  {
    "text": "we deleted this stuff",
    "start": "1510080",
    "end": "1511279"
  },
  {
    "text": "um we just go ahead and recreate it um",
    "start": "1511279",
    "end": "1513840"
  },
  {
    "text": "i'm not going to do the whole diff thing",
    "start": "1513840",
    "end": "1515200"
  },
  {
    "text": "i assume",
    "start": "1515200",
    "end": "1516159"
  },
  {
    "text": "it doesn't matter as much this time",
    "start": "1516159",
    "end": "1517520"
  },
  {
    "text": "anyways because we're not mangling as",
    "start": "1517520",
    "end": "1519200"
  },
  {
    "text": "many iptables roles we're using open v",
    "start": "1519200",
    "end": "1521039"
  },
  {
    "text": "switch for security",
    "start": "1521039",
    "end": "1522159"
  },
  {
    "text": "in andrea so the android plugin um",
    "start": "1522159",
    "end": "1525279"
  },
  {
    "text": "once we create that daemon set and the",
    "start": "1525279",
    "end": "1527039"
  },
  {
    "text": "policy well we haven't created the",
    "start": "1527039",
    "end": "1528799"
  },
  {
    "text": "policy yet we can see these three rules",
    "start": "1528799",
    "end": "1530640"
  },
  {
    "text": "if we look at uh table number 90.",
    "start": "1530640",
    "end": "1532720"
  },
  {
    "text": "so you executing to the andrea um",
    "start": "1532720",
    "end": "1535679"
  },
  {
    "text": "containers directly if you want to see",
    "start": "1535679",
    "end": "1538159"
  },
  {
    "text": "this stuff and you can run ovs ofctl",
    "start": "1538159",
    "end": "1541200"
  },
  {
    "text": "flows uh br int and that's essentially",
    "start": "1541200",
    "end": "1544480"
  },
  {
    "text": "the equivalent of like looking through",
    "start": "1544480",
    "end": "1545840"
  },
  {
    "text": "ip tables and",
    "start": "1545840",
    "end": "1546799"
  },
  {
    "text": "open v switch it's like the same it's",
    "start": "1546799",
    "end": "1549039"
  },
  {
    "text": "the equivalent kind of operation right",
    "start": "1549039",
    "end": "1551039"
  },
  {
    "text": "you can look at those individual flows",
    "start": "1551039",
    "end": "1553360"
  },
  {
    "text": "and so now",
    "start": "1553360",
    "end": "1554400"
  },
  {
    "text": "um we've created the daemon set and",
    "start": "1554400",
    "end": "1557440"
  },
  {
    "text": "we've created the uh",
    "start": "1557440",
    "end": "1559440"
  },
  {
    "text": "network policy and once you look at the",
    "start": "1559440",
    "end": "1562320"
  },
  {
    "text": "uh",
    "start": "1562320",
    "end": "1563600"
  },
  {
    "text": "network once once you look at the",
    "start": "1563600",
    "end": "1565039"
  },
  {
    "text": "network policy uh you can see",
    "start": "1565039",
    "end": "1567440"
  },
  {
    "text": "we briefly showed you there's a couple",
    "start": "1567440",
    "end": "1569200"
  },
  {
    "text": "there's an extra row in there and that",
    "start": "1569200",
    "end": "1570720"
  },
  {
    "text": "row",
    "start": "1570720",
    "end": "1571520"
  },
  {
    "text": "shows the reg one the packet's getting",
    "start": "1571520",
    "end": "1573919"
  },
  {
    "text": "marked for",
    "start": "1573919",
    "end": "1574640"
  },
  {
    "text": "getting dropped and whatnot out of that",
    "start": "1574640",
    "end": "1576080"
  },
  {
    "text": "flow table so that's how you can see",
    "start": "1576080",
    "end": "1578080"
  },
  {
    "text": "those policies being applied",
    "start": "1578080",
    "end": "1579760"
  },
  {
    "text": "in andrea and",
    "start": "1579760",
    "end": "1583039"
  },
  {
    "text": "i think that's it we made it thank you",
    "start": "1583039",
    "end": "1586000"
  },
  {
    "text": "for",
    "start": "1586000",
    "end": "1586320"
  },
  {
    "text": "watching nine minutes and 38 seconds",
    "start": "1586320",
    "end": "1589600"
  },
  {
    "text": "okay great so yeah that's pretty much",
    "start": "1589600",
    "end": "1593679"
  },
  {
    "text": "uh the whole that's pretty much our",
    "start": "1593679",
    "end": "1595360"
  },
  {
    "text": "story so please do reach out to us",
    "start": "1595360",
    "end": "1598559"
  },
  {
    "text": "um i'm junit 100 on twitter and",
    "start": "1598559",
    "end": "1602320"
  },
  {
    "text": "saddaf is i don't know if sadaf has a",
    "start": "1602320",
    "end": "1604240"
  },
  {
    "text": "twitter account",
    "start": "1604240",
    "end": "1605919"
  },
  {
    "text": "yeah but but we're easy to find",
    "start": "1605919",
    "end": "1611200"
  }
]