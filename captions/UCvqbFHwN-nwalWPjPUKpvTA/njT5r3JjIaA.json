[
  {
    "text": "thanks everyone to CubeCon and thanks thanks everyone for joining today's session uh today we are going to give",
    "start": "240",
    "end": "7520"
  },
  {
    "text": "you a comprehensive analysis on the popular schedulers in the market which are KQ Volcano and the Unicorn which are",
    "start": "7520",
    "end": "15200"
  },
  {
    "text": "most asked question among the uh audience we interact with uh before that",
    "start": "15200",
    "end": "21680"
  },
  {
    "text": "let's introduce ourselves uh my name is Wayan i'm the co-chair and the maintainer of six scheduling and I work",
    "start": "21680",
    "end": "28400"
  },
  {
    "text": "for Apple AML h hello my name is Shiming Jang work for",
    "start": "28400",
    "end": "34320"
  },
  {
    "text": "dog in Shanghai and uh I'm the signal reviewer and the uh scheduling sub",
    "start": "34320",
    "end": "40399"
  },
  {
    "text": "project co maintainer all right uh today we are going to to",
    "start": "40399",
    "end": "45440"
  },
  {
    "text": "firstly give you high level overview on the scheduulers what's their history and the relation with Kubernetes default",
    "start": "45440",
    "end": "51760"
  },
  {
    "text": "scheduleuler and next going a deep dive on the features to help you better choose which may best fits your",
    "start": "51760",
    "end": "58160"
  },
  {
    "text": "workloads and lastly give you some guidance and best practice on benchmark some particular feature of the",
    "start": "58160",
    "end": "65880"
  },
  {
    "text": "scheduleuler so firstly I think the question may be asked is that why there",
    "start": "65880",
    "end": "70960"
  },
  {
    "text": "are so many scheduulers or what's missing in the cubeuler to serve like",
    "start": "70960",
    "end": "78720"
  },
  {
    "text": "batch workloads so in my eyes there are three pieces that's maybe missing in the default scheduleuler as well as the",
    "start": "78720",
    "end": "84720"
  },
  {
    "text": "native kubernetes one things for a long time cube set is design originally",
    "start": "84720",
    "end": "90960"
  },
  {
    "text": "designed for service service workloads that means each pod is treated as an",
    "start": "90960",
    "end": "96000"
  },
  {
    "text": "individual unit to do the scheduling cycle that has a good size which is can",
    "start": "96000",
    "end": "101759"
  },
  {
    "text": "be consistent to accommodate a part whole life cycle and to be have the uh",
    "start": "101759",
    "end": "108799"
  },
  {
    "text": "unified integration with other components and all the APIs are imposed in the pod level but the downside is",
    "start": "108799",
    "end": "116240"
  },
  {
    "text": "that we didn't give the job level scheduling",
    "start": "116240",
    "end": "121320"
  },
  {
    "text": "constraint more attention which cause some decision that make for single part",
    "start": "121320",
    "end": "128399"
  },
  {
    "text": "may not be nec necessarily optimal for a whole job for example GA scheduling the",
    "start": "128399",
    "end": "133680"
  },
  {
    "text": "second piece is that the native Kubernetes doesn't offer a good notion",
    "start": "133680",
    "end": "138879"
  },
  {
    "text": "to maximize your clusters capacities it only provides a static notion called",
    "start": "138879",
    "end": "145200"
  },
  {
    "text": "resource coder and that is associated with the name space but in the modernized organization they may want uh",
    "start": "145200",
    "end": "154000"
  },
  {
    "text": "like a sharable coder and uh maybe even has hierarchical",
    "start": "154000",
    "end": "160000"
  },
  {
    "text": "uh in that to to manage those kind of coder the third thing is the internal impation of the scheduleuler is a one",
    "start": "160000",
    "end": "168160"
  },
  {
    "text": "setup just like the Excel London the hallways one que so uh but in terms of",
    "start": "168160",
    "end": "175040"
  },
  {
    "text": "some advanced feature that is batch workloads needs it's better to design",
    "start": "175040",
    "end": "180800"
  },
  {
    "text": "them in a multiq uh design so that some features can be more design implemented",
    "start": "180800",
    "end": "186159"
  },
  {
    "text": "in a more natural way so this is a three piece I think cube scheduleuler is missing so a glimpse at the history",
    "start": "186159",
    "end": "194239"
  },
  {
    "text": "cubeuler was raised along with the cube 1.0 O at 20",
    "start": "194239",
    "end": "200040"
  },
  {
    "text": "2015 and then a experimental sub project of six scheduling called cube batch was",
    "start": "200040",
    "end": "207200"
  },
  {
    "text": "raised in 2017 it was original design its initial intent is put it as a",
    "start": "207200",
    "end": "215360"
  },
  {
    "text": "side project so that it can involve the batch related capability uh at at its own pace and the finally",
    "start": "215360",
    "end": "224319"
  },
  {
    "text": "merge with scriptul but due to some reasons it didn't go as planned because",
    "start": "224319",
    "end": "230159"
  },
  {
    "text": "by that time the focus of six scheduling was more focused on expose the",
    "start": "230159",
    "end": "235440"
  },
  {
    "text": "scheduleuler extensibility as a framework which is cross scheduling framework so that there's an the project",
    "start": "235440",
    "end": "243280"
  },
  {
    "text": "volcano cames into place you may be uh noticed that the",
    "start": "243280",
    "end": "249360"
  },
  {
    "text": "first version of volcano scheduler was forked but what was forked from the cube",
    "start": "249360",
    "end": "256400"
  },
  {
    "text": "cube batch and volcano was later donated to CNCF and unicorn uh later in that",
    "start": "256400",
    "end": "263759"
  },
  {
    "text": "year 2019 was raised it leverage a lot of design concept of uh the yarn",
    "start": "263759",
    "end": "270479"
  },
  {
    "text": "scheduleuler and also is hosting the Apache foundation in",
    "start": "270479",
    "end": "277280"
  },
  {
    "text": "2022 KQ was raised to resolve that is uh in terms of the job scheduling side",
    "start": "277639",
    "end": "284320"
  },
  {
    "text": "there's the missing missing piece in the whole native Kubernetes ecosystem and",
    "start": "284320",
    "end": "290320"
  },
  {
    "text": "it's uh sub project it's a sub project of uh c",
    "start": "290320",
    "end": "296759"
  },
  {
    "text": "scheduling I think before we dive into the features we should get a high level",
    "start": "296759",
    "end": "302960"
  },
  {
    "text": "understanding about the workflow when using thisulers for default scheduleuler maybe you are already familiar is that you",
    "start": "302960",
    "end": "309840"
  },
  {
    "text": "submit a job or job like workloads the workloads controller will be responsible to fan out the job to pass and the part",
    "start": "309840",
    "end": "316560"
  },
  {
    "text": "get scheduled by the default scheduleuler For unicorn is basically the same way",
    "start": "316560",
    "end": "323120"
  },
  {
    "text": "it's just you have to associate particular uni unicorn specified label",
    "start": "323120",
    "end": "329360"
  },
  {
    "text": "and annotation to describe the characteristic of the job or application",
    "start": "329360",
    "end": "335280"
  },
  {
    "text": "so that unicorn can optimize for that job so that is unicorn's design",
    "start": "335280",
    "end": "342080"
  },
  {
    "text": "philosophy for KQ is different because in the in",
    "start": "342080",
    "end": "347919"
  },
  {
    "text": "the picture you can see that the workload controller is not allowed to immediately create path it has to wait",
    "start": "347919",
    "end": "354960"
  },
  {
    "text": "for KQ to admit the job so that is the key thing KO do is that according to its",
    "start": "354960",
    "end": "362000"
  },
  {
    "text": "Q setup its own API design once the jobs in cues it will uh do some checks fair",
    "start": "362000",
    "end": "370960"
  },
  {
    "text": "fairness check quarter check uh some accessible checks and then when that check has all the checks has passed it",
    "start": "370960",
    "end": "377919"
  },
  {
    "text": "will ungate the job so that the job controller can create the path and the path gets scheduled by default",
    "start": "377919",
    "end": "384960"
  },
  {
    "text": "scheduleuler for unicorn basic the same pattern as KQ",
    "start": "384960",
    "end": "392160"
  },
  {
    "text": "combined with default scheduler uh but a little difference is volcano has its own",
    "start": "392160",
    "end": "397919"
  },
  {
    "text": "API called the VC job as well as part group and",
    "start": "397919",
    "end": "403400"
  },
  {
    "text": "uh those API carries volcano its own API characteristics so that it has to be",
    "start": "403400",
    "end": "411280"
  },
  {
    "text": "honored by its own scheduleuler so usually the volcano controller and volcano unit sorry the volcano are",
    "start": "411280",
    "end": "419840"
  },
  {
    "text": "combined together to be used if we put all theuler into the",
    "start": "419840",
    "end": "426280"
  },
  {
    "text": "speech sorry spectrum and uh I think use",
    "start": "426280",
    "end": "431840"
  },
  {
    "text": "the job admission as a boundary can best help you understand what we where they",
    "start": "431840",
    "end": "438000"
  },
  {
    "text": "sit so cube schedule difference is in the",
    "start": "438000",
    "end": "444319"
  },
  {
    "text": "pause schedule side as well as unicorn for KQ is more doing the jobs admission",
    "start": "444319",
    "end": "451199"
  },
  {
    "text": "and doing the job level uh management the queueing",
    "start": "451199",
    "end": "456599"
  },
  {
    "text": "thing for volcano they lands on both side controller and scheduler and they",
    "start": "456599",
    "end": "463360"
  },
  {
    "text": "have to be used all together so this is basically the overview next we will uh dive deep into",
    "start": "463360",
    "end": "471039"
  },
  {
    "text": "the features so as I said uh default",
    "start": "471039",
    "end": "476800"
  },
  {
    "text": "schedule has only one jumbo queue which it doesn't fit the uh batch workers",
    "start": "476800",
    "end": "483120"
  },
  {
    "text": "requirements so all the all these three scheduulers adopt the same pattern is that it has multiq and the multiq are",
    "start": "483120",
    "end": "491759"
  },
  {
    "text": "divided into a treel like structure",
    "start": "491759",
    "end": "497039"
  },
  {
    "text": "so the user can only submit the job to the lift node here in a treel like",
    "start": "497039",
    "end": "504840"
  },
  {
    "text": "structure among the features comparison I would say",
    "start": "504840",
    "end": "510240"
  },
  {
    "text": "uh I would recommend use the API as a distinguisher to look at their",
    "start": "510240",
    "end": "517760"
  },
  {
    "text": "designs for example I think KQ has the most Kubernetes native API design for you to",
    "start": "517760",
    "end": "525120"
  },
  {
    "text": "use them out of box and also it has the API directory for you to uh control",
    "start": "525120",
    "end": "533120"
  },
  {
    "text": "which user can submit job to which queue and also associate with the Kubernetes",
    "start": "533120",
    "end": "539040"
  },
  {
    "text": "term like our back like uh namespace so basically I think that's it API can be",
    "start": "539040",
    "end": "545200"
  },
  {
    "text": "used out of box in a self-service way other tool may have some shortcomings",
    "start": "545200",
    "end": "551920"
  },
  {
    "text": "like for uh volcano it doesn't it doesn't give a notion to control which",
    "start": "551920",
    "end": "557600"
  },
  {
    "text": "users can submit job to which queue although it's use a uh QC design for",
    "start": "557600",
    "end": "564480"
  },
  {
    "text": "volcano sorry so for unicom is embedded every configuration",
    "start": "564480",
    "end": "569760"
  },
  {
    "text": "into a jumbo config map which is not that kubernetes native because if you have only one single configuration that",
    "start": "569760",
    "end": "577000"
  },
  {
    "text": "means It's not easy to use that for multi multi-tenency thing you have to uh",
    "start": "577000",
    "end": "583440"
  },
  {
    "text": "you have to uh introduce another layer to do for self-service for multi-tenants",
    "start": "583440",
    "end": "589600"
  },
  {
    "text": "so based on the multi- hierarchical multiqes each queue",
    "start": "589600",
    "end": "595839"
  },
  {
    "text": "can be associated with kota and again these three scheduulers adopt the same pattern to offer a minmax cer management",
    "start": "595839",
    "end": "604480"
  },
  {
    "text": "which can also be uh interpreted as guaranteed coder versus best efforts in",
    "start": "604480",
    "end": "610640"
  },
  {
    "text": "this case suppose organization N has four CPU and can divide statically or",
    "start": "610640",
    "end": "616240"
  },
  {
    "text": "can be dynamically says okay team X maybe can burst their usage to all four",
    "start": "616240",
    "end": "622200"
  },
  {
    "text": "CPUs and then if we go down that is all the CPU might be consumed by team X2 but",
    "start": "622200",
    "end": "629680"
  },
  {
    "text": "for the cases that is the best the best efforts tenants use all the all the",
    "start": "629680",
    "end": "635600"
  },
  {
    "text": "resources it can be reclaimed by the others if other tenants",
    "start": "635600",
    "end": "640880"
  },
  {
    "text": "uh guaranteed resource is not satisfied this so will yield the",
    "start": "640880",
    "end": "648720"
  },
  {
    "text": "preeemption so for the cube based features uh I would say they are mostly",
    "start": "651480",
    "end": "657760"
  },
  {
    "text": "the same in terms of functionality it's just that the APIs are designed a little",
    "start": "657760",
    "end": "662959"
  },
  {
    "text": "differently two things to call out here is in terms of preemption unicorn only",
    "start": "662959",
    "end": "669680"
  },
  {
    "text": "supports the interq preemption that means one workloads can only preempts",
    "start": "669680",
    "end": "674959"
  },
  {
    "text": "the workloads in another queue instead of the same queue and also KQ preempts",
    "start": "674959",
    "end": "681920"
  },
  {
    "text": "using the job as a unit but the other two can preempts using pod as a minimum",
    "start": "681920",
    "end": "688000"
  },
  {
    "text": "unit next we are going to talk about GAN scheduling because it's a pretty",
    "start": "688000",
    "end": "693839"
  },
  {
    "text": "essential features in terms of batch scheduling basically it means you want to schedule all the parts together or",
    "start": "693839",
    "end": "700880"
  },
  {
    "text": "nothing let's to look at unicorn first so unicorn doesn't involve job man job",
    "start": "700880",
    "end": "708000"
  },
  {
    "text": "CRD so it basically wait for the pods to be created in this case four PS here and",
    "start": "708000",
    "end": "713920"
  },
  {
    "text": "they uh they carry the unicorn specific gun scheduling annotation or labels and",
    "start": "713920",
    "end": "720959"
  },
  {
    "text": "then once them inq interesting here is that in",
    "start": "720959",
    "end": "726399"
  },
  {
    "text": "unicorn's design it create the same number of placeholder paths and uh try",
    "start": "726399",
    "end": "732720"
  },
  {
    "text": "to schedule the placeholder path if they can be scheduled the placeholder parts",
    "start": "732720",
    "end": "738720"
  },
  {
    "text": "will be deleted and then replaced with the real parts so this design you can",
    "start": "738720",
    "end": "744560"
  },
  {
    "text": "see that you will um increase at least the API request because it's almost",
    "start": "744560",
    "end": "750560"
  },
  {
    "text": "triple the API request the placeholder you have to create them and delete them also that can be cause some uh risk",
    "start": "750560",
    "end": "758079"
  },
  {
    "text": "condition because this is just in different steps replace for volcano is scheduled pass",
    "start": "758079",
    "end": "765440"
  },
  {
    "text": "the dry run in the in memory in a in memory manner so once a Q sorry once a",
    "start": "765440",
    "end": "771839"
  },
  {
    "text": "job in Q's once it's passed some basic checks like quarter check it will be f",
    "start": "771839",
    "end": "777040"
  },
  {
    "text": "out to pass and the pass will do the join run in memory once they can be",
    "start": "777040",
    "end": "783200"
  },
  {
    "text": "scheduled all together it will be scheduled that is basically how volcano does for KQ",
    "start": "783200",
    "end": "790079"
  },
  {
    "text": "uh it doesn't involve part scheduling it leverage other scheduulers part scheduling capabilities so once the jobs",
    "start": "790079",
    "end": "796959"
  },
  {
    "text": "in Q Once it's passed some basic quarter check it will just create the path let",
    "start": "796959",
    "end": "804480"
  },
  {
    "text": "the parts be to be created and be tried to be scheduled so definitely in some",
    "start": "804480",
    "end": "811720"
  },
  {
    "text": "cases it's possible that not all the parts can be scheduled together so uh it",
    "start": "811720",
    "end": "817279"
  },
  {
    "text": "has a feature called wait for pass ready to be a last resort to be based on the",
    "start": "817279",
    "end": "824639"
  },
  {
    "text": "time out to delete a job and the retry so this uh mechanisms is not that ideal",
    "start": "824639",
    "end": "831680"
  },
  {
    "text": "that is why you see in some community like Kflow they use KQ plus a particular",
    "start": "831680",
    "end": "838720"
  },
  {
    "text": "code scheduling plug-in to to retrieve better accuracy of the gun",
    "start": "838720",
    "end": "845639"
  },
  {
    "text": "scheduling so next part is how the schedulers cooperate with the ecosystem",
    "start": "845639",
    "end": "852000"
  },
  {
    "text": "like the first part is computing framework definitely we are not able to analyze it every computing framework",
    "start": "852000",
    "end": "859760"
  },
  {
    "text": "here but I'm going to to try to summarize a common pattern suppose we",
    "start": "859760",
    "end": "865120"
  },
  {
    "text": "have a new computing framework called fu usually comes up with a fd and then has",
    "start": "865120",
    "end": "871360"
  },
  {
    "text": "a f operator which is responsible to interpret the CR objects into path uh so",
    "start": "871360",
    "end": "879440"
  },
  {
    "text": "by default it doesn't rely on any particular scheduleuler so default scheduleuler can go schedule them so",
    "start": "879440",
    "end": "884639"
  },
  {
    "text": "usually the the batch workloads has a coordinator part and some worker",
    "start": "884639",
    "end": "890600"
  },
  {
    "text": "part for volcano and the unicorn the integration they usually do",
    "start": "890600",
    "end": "897120"
  },
  {
    "text": "is that they change the source code of the full operator to let the full",
    "start": "897120",
    "end": "903760"
  },
  {
    "text": "operator create the path or particular uh the schedule specific API",
    "start": "903760",
    "end": "912040"
  },
  {
    "text": "carrying the required information for example for for for volo it creates a",
    "start": "912040",
    "end": "919199"
  },
  {
    "text": "part group to carrying the corresponding information for K for unicorn is because",
    "start": "919199",
    "end": "925360"
  },
  {
    "text": "it doesn't have the job API job API so it just impost the Q information etc to",
    "start": "925360",
    "end": "931199"
  },
  {
    "text": "the P level and then hand over to their corresponding scheduleuler to schedule",
    "start": "931199",
    "end": "938040"
  },
  {
    "text": "them you can see that it's a little uh invasive to the full operator because",
    "start": "938040",
    "end": "944800"
  },
  {
    "text": "every time you have to change your source code once a new SC a new computing framework comes into place but",
    "start": "944800",
    "end": "951440"
  },
  {
    "text": "For KQ is a little different is that it's leverage a generic suspension",
    "start": "951440",
    "end": "958360"
  },
  {
    "text": "pattern which basically tell which basically is a roundtrip communication okay the first one is tell that is okay",
    "start": "958360",
    "end": "967040"
  },
  {
    "text": "suspend first I will handle the admission of the of the job and then",
    "start": "967040",
    "end": "972639"
  },
  {
    "text": "once I think it's ready to be scheduled I will let you know and then hand over to you to schedule the part to create",
    "start": "972639",
    "end": "979519"
  },
  {
    "text": "the part for the downstream scheduleuler to to schedule them so this is the base",
    "start": "979519",
    "end": "985360"
  },
  {
    "text": "the biggest difference with each other I would say uh the suspension mechanism is",
    "start": "985360",
    "end": "991120"
  },
  {
    "text": "a key concept in KQ it can be easily adapt to some new framework in a s",
    "start": "991120",
    "end": "998959"
  },
  {
    "text": "sustainable way because you don't have to change the at least don't need to change source code too much uh in the in",
    "start": "998959",
    "end": "1006160"
  },
  {
    "text": "the computer framework in the market the next thing is think about",
    "start": "1006160",
    "end": "1012160"
  },
  {
    "text": "cluster also scala CA is much much more important in the the modernized organi",
    "start": "1012160",
    "end": "1019759"
  },
  {
    "text": "modernized cloud infra setup C of like cluster utilization cluster cost so",
    "start": "1019759",
    "end": "1026880"
  },
  {
    "text": "first I think we should understand how CA simulate the unscheduled pause",
    "start": "1026880",
    "end": "1032760"
  },
  {
    "text": "scheduling so the fact is that CA use the default scheduulers SDK to do the uh",
    "start": "1032760",
    "end": "1040959"
  },
  {
    "text": "scheduleuler simulation in other words whether the scheduleuler you choose are",
    "start": "1040959",
    "end": "1046640"
  },
  {
    "text": "compatible with the cube scheduleuler SDK really matters for example like take",
    "start": "1046640",
    "end": "1052720"
  },
  {
    "text": "DRA as an example which is introducing 132 and by the time I I prepared the",
    "start": "1052720",
    "end": "1058640"
  },
  {
    "text": "slice uh unicorn and volcano doesn't support that yet but for KQ for KQ",
    "start": "1058640",
    "end": "1066480"
  },
  {
    "text": "because it doesn't it's not a P scheduleuler it's leveraged on default scheduleuler so basically it supports DIA the other thing is that look at CA",
    "start": "1066480",
    "end": "1074480"
  },
  {
    "text": "in another early interwining way uh in",
    "start": "1074480",
    "end": "1079840"
  },
  {
    "text": "most of cases we are just passive passively waiting for the unschedul",
    "start": "1079840",
    "end": "1085039"
  },
  {
    "text": "sorry unscheduled part to be picked up by the CA but if we think one step further whether whether or not we can",
    "start": "1085039",
    "end": "1091919"
  },
  {
    "text": "interwe how to interact with the cluster scala to be reserve some resources once",
    "start": "1091919",
    "end": "1099520"
  },
  {
    "text": "the scheduleuler sees some unscheduled part instead of wait for CA to intervene so that is some API called provision",
    "start": "1099520",
    "end": "1105840"
  },
  {
    "text": "request uh raised by the SIG autoscaling group so that is only supported by KQ so",
    "start": "1105840",
    "end": "1111520"
  },
  {
    "text": "far uh there are some other areas we should",
    "start": "1111520",
    "end": "1116640"
  },
  {
    "text": "think I think for multicluster multiq kq support that in a native way for volcano",
    "start": "1116640",
    "end": "1123280"
  },
  {
    "text": "it leverage a commada to support the multicluster there are definitely some other considerations because of the time",
    "start": "1123280",
    "end": "1130000"
  },
  {
    "text": "limit I cannot uh go through all of them like extensibility support debugability",
    "start": "1130000",
    "end": "1136600"
  },
  {
    "text": "etc etc so next I will handle over to me",
    "start": "1136600",
    "end": "1143440"
  },
  {
    "text": "okay next next part let me compare the performance of the simple feature let's",
    "start": "1143440",
    "end": "1149039"
  },
  {
    "text": "see how let's see how the difference between the features before we start I",
    "start": "1149039",
    "end": "1154880"
  },
  {
    "text": "want to highlight it the default setting that's different between the",
    "start": "1154880",
    "end": "1160280"
  },
  {
    "text": "schedule and the greater effic resource the default schedule use the API QBS",
    "start": "1160280",
    "end": "1167039"
  },
  {
    "text": "which is 50 and the uni code default QBS is 1,00 the definitely not apple to",
    "start": "1167039",
    "end": "1174080"
  },
  {
    "text": "apple you will see the result definitely low so in all testing we try to best to",
    "start": "1174080",
    "end": "1182080"
  },
  {
    "text": "make a list of the uh QPS uh the sim button the schedule and the controller",
    "start": "1182080",
    "end": "1188880"
  },
  {
    "text": "as well as some other setting and shows all thought the next thing is that we",
    "start": "1188880",
    "end": "1195039"
  },
  {
    "text": "have made some innovation in the way we collect the metrics and do performance",
    "start": "1195039",
    "end": "1202120"
  },
  {
    "text": "comparison the traditionally way is use permiss",
    "start": "1202120",
    "end": "1207760"
  },
  {
    "text": "uh matrix but if you use permiss uh matrix in a skill testing for example",
    "start": "1207760",
    "end": "1215320"
  },
  {
    "text": "scale scheduling uh 10,000 portal there are very high ch chance of the magging",
    "start": "1215320",
    "end": "1222000"
  },
  {
    "text": "of arrow the match yourself under the hold of approximator estimator when uh",
    "start": "1222000",
    "end": "1230000"
  },
  {
    "text": "when you're scheduling over a short period of the time all innovation here",
    "start": "1230000",
    "end": "1237440"
  },
  {
    "text": "is to use APS server audit log uh basically the APS server audit log each",
    "start": "1237440",
    "end": "1244799"
  },
  {
    "text": "can event exactly when uh when a pod is scheduled and the date",
    "start": "1244799",
    "end": "1252159"
  },
  {
    "text": "etc uh uh or innovation is to collect all the event and use a simple passer to",
    "start": "1252159",
    "end": "1260159"
  },
  {
    "text": "check uh when a pod are created data and then",
    "start": "1260159",
    "end": "1265600"
  },
  {
    "text": "a great gate then we plot them on the same graphana dashboard uh so you can",
    "start": "1265600",
    "end": "1272640"
  },
  {
    "text": "see that we start then at the same data point and then over time how the key",
    "start": "1272640",
    "end": "1278480"
  },
  {
    "text": "event of port scheduling and port deletion happen so those two thing I",
    "start": "1278480",
    "end": "1284799"
  },
  {
    "text": "want to highlight before we uh diving to the performance",
    "start": "1284799",
    "end": "1291000"
  },
  {
    "text": "result next is the performance environment we use Kubernetes uh",
    "start": "1291000",
    "end": "1297000"
  },
  {
    "text": "1.32 for send scheduling plus uh controller combination for example KQ we",
    "start": "1297000",
    "end": "1304799"
  },
  {
    "text": "use uh 0.10 version we also we are using upstream",
    "start": "1304799",
    "end": "1310720"
  },
  {
    "text": "uh cost scheduling plug-in and apply local patch fix bug we also found some",
    "start": "1310720",
    "end": "1317520"
  },
  {
    "text": "bug to volcano and uh the volcano team provide a fix thanks for shenan for",
    "start": "1317520",
    "end": "1324640"
  },
  {
    "text": "helping to fix them since volcano has a button uh schedule and the controller we",
    "start": "1324640",
    "end": "1331120"
  },
  {
    "text": "use same version here we have ensure the QBS the same for all controller and uh",
    "start": "1331120",
    "end": "1338640"
  },
  {
    "text": "the schedules for the benchmark testing we",
    "start": "1338640",
    "end": "1343760"
  },
  {
    "text": "use coke to simulate a node which basically is the most powerful benchmarking to in uh on the",
    "start": "1343760",
    "end": "1352640"
  },
  {
    "text": "market at the highlight we use two cate category with gun scheduling disabled",
    "start": "1353000",
    "end": "1360320"
  },
  {
    "text": "and GA scheduling enable we try to schedule 10,000 pod in total the",
    "start": "1360320",
    "end": "1366720"
  },
  {
    "text": "variable here is number of job and the number of p per job one one extreme is",
    "start": "1366720",
    "end": "1373440"
  },
  {
    "text": "that is only one job with 10,000 port the other extreme is that we submit",
    "start": "1373440",
    "end": "1380480"
  },
  {
    "text": "10,000 job but it's each board have only one",
    "start": "1380480",
    "end": "1385720"
  },
  {
    "text": "ports we didn't have very the number of uh Q because in all local testing we",
    "start": "1385720",
    "end": "1392960"
  },
  {
    "text": "didn't see a significant performance difference by",
    "start": "1392960",
    "end": "1398720"
  },
  {
    "text": "the very uh in the number of Q so we simply the testing to focus on the",
    "start": "1398720",
    "end": "1405360"
  },
  {
    "text": "number of job and the number of pod the first case is submit many job",
    "start": "1405360",
    "end": "1413520"
  },
  {
    "text": "with one port each there are two lines I here the dot line shows the port",
    "start": "1413520",
    "end": "1418880"
  },
  {
    "text": "creation time the solid line shows the pod scheduling time you can see unico is",
    "start": "1418880",
    "end": "1426000"
  },
  {
    "text": "ahead of the all the two but that's in m",
    "start": "1426000",
    "end": "1431360"
  },
  {
    "text": "because the p creation time is ahead I think is related to the limit",
    "start": "1431360",
    "end": "1438480"
  },
  {
    "text": "limit of the web hook QBS for the job but we haven't found a way to add uh",
    "start": "1438480",
    "end": "1446320"
  },
  {
    "text": "adjust the web hook QBS for KQ and volcano if you look at the time",
    "start": "1446320",
    "end": "1452000"
  },
  {
    "text": "difference between the creation and the scheduling you are see they are pretty",
    "start": "1452000",
    "end": "1459780"
  },
  {
    "text": "[Music] similar when we change the number of job",
    "start": "1459780",
    "end": "1466159"
  },
  {
    "text": "from 10,000 to 500 you can see the difference volcano need to make more web",
    "start": "1466159",
    "end": "1473039"
  },
  {
    "text": "hook request to mutate the pod interestingly the volcano creator",
    "start": "1473039",
    "end": "1479520"
  },
  {
    "text": "pod in patch i'm not sure if this is a intentional design",
    "start": "1479520",
    "end": "1487799"
  },
  {
    "text": "if we reduce the number of job to 20 each with 500 pods you can see the KQ is",
    "start": "1489120",
    "end": "1497679"
  },
  {
    "text": "already a hand of a header of the unicore and the volcano and the volcano",
    "start": "1497679",
    "end": "1504559"
  },
  {
    "text": "is still a beheader the last case is one port job",
    "start": "1504559",
    "end": "1511919"
  },
  {
    "text": "with 10,000 ports here KQ and Uni is a header volcano still uh",
    "start": "1511919",
    "end": "1521240"
  },
  {
    "text": "behead uh this is because there only one job so only one job web hook commuted",
    "start": "1521240",
    "end": "1528320"
  },
  {
    "text": "request is needed summarize the four case without G scheduling if you have a",
    "start": "1528320",
    "end": "1534640"
  },
  {
    "text": "lot of job the scheduling speed are more related the number of job web hook muted",
    "start": "1534640",
    "end": "1542120"
  },
  {
    "text": "request for KQ for KQ and the uni call the difference lie in the cost the",
    "start": "1542120",
    "end": "1549120"
  },
  {
    "text": "mutation request this uh if there only one mutation request KQ is a hand of a",
    "start": "1549120",
    "end": "1558480"
  },
  {
    "text": "header of the unicorn uh volcano is behind the order two in all",
    "start": "1558480",
    "end": "1565200"
  },
  {
    "text": "case now let's look at the all cuted",
    "start": "1565559",
    "end": "1571600"
  },
  {
    "text": "uh with scan scheduling enabled again this a 10,000 job with one pod each uni",
    "start": "1571600",
    "end": "1578880"
  },
  {
    "text": "create the double the number of the pod do the it use the playh holder",
    "start": "1578880",
    "end": "1584919"
  },
  {
    "text": "ports placeholder ports uh it will create a placeholder port to reserve the",
    "start": "1584919",
    "end": "1591120"
  },
  {
    "text": "resource and then replace them with a real port so placeholder data then it's",
    "start": "1591120",
    "end": "1598159"
  },
  {
    "text": "it is actually real port scheduled look at the port scheduling time volcano is",
    "start": "1598159",
    "end": "1604960"
  },
  {
    "text": "ahead of all the two this is because volcano was originally designed for G",
    "start": "1604960",
    "end": "1612919"
  },
  {
    "text": "scheduling i will show all the chart to help us better understand the",
    "start": "1612919",
    "end": "1620520"
  },
  {
    "text": "result the other chart focus on the job completion time you can see uh the",
    "start": "1620520",
    "end": "1626880"
  },
  {
    "text": "volcano is ahead the okay uh this is for 10,000 job with one port",
    "start": "1626880",
    "end": "1635559"
  },
  {
    "text": "each if we reduce job to 500 you can see that unico is passing kq and the volcano",
    "start": "1635559",
    "end": "1644600"
  },
  {
    "text": "qu in batch again but volcano is still way",
    "start": "1644600",
    "end": "1651120"
  },
  {
    "text": "ahead the job combination show the same",
    "start": "1651799",
    "end": "1656880"
  },
  {
    "text": "result i will skip all the two case because when we reduce job to 20 and one",
    "start": "1658279",
    "end": "1664559"
  },
  {
    "text": "the result is basically the same",
    "start": "1664559",
    "end": "1669840"
  },
  {
    "text": "in term of the GA scheduling we uh if you project depend on a lot of uh",
    "start": "1669840",
    "end": "1676880"
  },
  {
    "text": "volcano is way better than other two that pretty much is for today's",
    "start": "1676880",
    "end": "1682720"
  },
  {
    "text": "benchmark testing we know there are many more use",
    "start": "1682720",
    "end": "1689279"
  },
  {
    "text": "case and professional testing combination that we can't include what",
    "start": "1689279",
    "end": "1695440"
  },
  {
    "text": "we show here the feature than all have for some feature you may want to compare",
    "start": "1695440",
    "end": "1701679"
  },
  {
    "text": "the how the schedule uh scheduleuler behave and the many job versus few job",
    "start": "1701679",
    "end": "1709120"
  },
  {
    "text": "you may also have very custom user scenarios we provide the project to uh",
    "start": "1709120",
    "end": "1717039"
  },
  {
    "text": "to do so testing using audit locker which give more accurate result we have",
    "start": "1717039",
    "end": "1724399"
  },
  {
    "text": "open source the key tools uh to to create for the testing uh don't",
    "start": "1724399",
    "end": "1731600"
  },
  {
    "text": "be stressed about the benchmark testing you can basically just use make command",
    "start": "1731600",
    "end": "1736799"
  },
  {
    "text": "we will open source everything to the showcase how to do the benchmark testing",
    "start": "1736799",
    "end": "1742880"
  },
  {
    "text": "so you can change uh change pro parameter and run it out of out of box",
    "start": "1742880",
    "end": "1751919"
  },
  {
    "text": "let's uh",
    "start": "1751919",
    "end": "1757120"
  },
  {
    "text": "Okay okay",
    "start": "1759080",
    "end": "1762960"
  },
  {
    "text": "okay okay uh we will have a road map to make",
    "start": "1764840",
    "end": "1773279"
  },
  {
    "text": "the tools more professional i think this good asset for the Kuba con talks and we",
    "start": "1773279",
    "end": "1780720"
  },
  {
    "text": "welcome contributor to make the tools better please check out the GitHub repo",
    "start": "1780720",
    "end": "1785840"
  },
  {
    "text": "okay that's it for the performance i will hand it back away",
    "start": "1785840",
    "end": "1792519"
  },
  {
    "text": "yeah I think sorry we use off the time and basically that's pretty much the today's talk and lastly I will thank",
    "start": "1792640",
    "end": "1799440"
  },
  {
    "text": "give a a big props to the uh different maintainers of the three",
    "start": "1799440",
    "end": "1804600"
  },
  {
    "text": "schedu and yeah thanks for them to provide some insights habra per",
    "start": "1804600",
    "end": "1810559"
  },
  {
    "text": "preparing the slides yeah thanks [Applause]",
    "start": "1810559",
    "end": "1818159"
  },
  {
    "text": "everyone I'm not sure if I'm allowed to take a couple questions",
    "start": "1818520",
    "end": "1823840"
  },
  {
    "text": "Okay",
    "start": "1823840",
    "end": "1826240"
  },
  {
    "text": "okay yeah uh there's a mic there yeah",
    "start": "1829399",
    "end": "1836200"
  },
  {
    "text": "hello uh thanks for the talk i wanted to ask if you would compare the non- gag",
    "start": "1838159",
    "end": "1843840"
  },
  {
    "text": "scheduling with a cubeuler can you maybe like elaborate on it like where all the",
    "start": "1843840",
    "end": "1849679"
  },
  {
    "text": "schedulers better in this large scales or is there some case where the regular",
    "start": "1849679",
    "end": "1855720"
  },
  {
    "text": "coupul is maybe comparable uh I don't think that is uh makes sense",
    "start": "1855720",
    "end": "1864799"
  },
  {
    "text": "because default scheduleuler doesn't consider this a g concept you for",
    "start": "1864799",
    "end": "1869919"
  },
  {
    "text": "default scheduleuler we like I said the cube batch sorry the cubeflow community is using a co-cheduling plug-in which is",
    "start": "1869919",
    "end": "1878080"
  },
  {
    "text": "based on the default schedules SDK and the schedule framework so that is how they are using right now if you just use",
    "start": "1878080",
    "end": "1884880"
  },
  {
    "text": "default schedule out of the box well there will be a accuracy issue Yeah mhm",
    "start": "1884880",
    "end": "1890559"
  },
  {
    "text": "okay thank you",
    "start": "1890559",
    "end": "1894278"
  },
  {
    "text": "yeah if you uh have more questions I will be out of the room for a while yeah",
    "start": "1900559",
    "end": "1905919"
  },
  {
    "text": "thank you everyone thanks everyone",
    "start": "1905919",
    "end": "1910120"
  }
]