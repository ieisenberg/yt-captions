[
  {
    "text": "all right everyone we'll get started hello i'm Caslon fields and I'm a CNC F",
    "start": "30",
    "end": "6000"
  },
  {
    "text": "ambassador and I am your track host today we're introducing track hosts at this cube con hopefully you've seen us",
    "start": "6000",
    "end": "12090"
  },
  {
    "text": "around I'm going to introduce your talk real quick and then at the end I will be",
    "start": "12090",
    "end": "17609"
  },
  {
    "text": "passing around the mic for Q&A and I am here to remind you to please do your",
    "start": "17609",
    "end": "22619"
  },
  {
    "text": "feedback forms at the end of the session we really appreciate it and your presenters can learn a lot from the",
    "start": "22619",
    "end": "28470"
  },
  {
    "text": "feedback that you give so we are ready today to hear about ready to serve",
    "start": "28470",
    "end": "33809"
  },
  {
    "text": "speeding up startup time of sto powered workloads from Cal eat I and V take it",
    "start": "33809",
    "end": "41790"
  },
  {
    "text": "away my name is Michal",
    "start": "41790",
    "end": "46890"
  },
  {
    "text": "and I'm a manager at IBM research lab in Haifa my name is a tie and I work also",
    "start": "46890",
    "end": "55829"
  },
  {
    "text": "at the research lab we've been with the eto since pretty much its inception and we'll try keep today's talk brief short",
    "start": "55829",
    "end": "64559"
  },
  {
    "text": "to the point and everybody wants to go back home it's been a long three days so",
    "start": "64559",
    "end": "69659"
  },
  {
    "text": "we're trying to keep it focused today Ty and I are going to talk about startup",
    "start": "69659",
    "end": "76140"
  },
  {
    "text": "time of kubernetes pods and more specifically pods that are installed",
    "start": "76140",
    "end": "81720"
  },
  {
    "text": "with east your east IAM on them after we",
    "start": "81720",
    "end": "88140"
  },
  {
    "text": "will be clear on what does it mean East you're inside this pod we will continue",
    "start": "88140",
    "end": "95130"
  },
  {
    "text": "and introduce you to a few techniques on how to speed up pods which are issue",
    "start": "95130",
    "end": "101759"
  },
  {
    "text": "enabled so before we will start let's",
    "start": "101759",
    "end": "108060"
  },
  {
    "text": "further define what we mean but by startup time so startup time is from the",
    "start": "108060",
    "end": "113790"
  },
  {
    "text": "point that the user is requesting kubernetes for a new pod which is",
    "start": "113790",
    "end": "120180"
  },
  {
    "text": "creating and descending a new request till the time that the status of the pod",
    "start": "120180",
    "end": "125759"
  },
  {
    "text": "is ready by the kubernetes api and why is it important it is important because",
    "start": "125759",
    "end": "132060"
  },
  {
    "text": "a lot of serve various components are waiting for these status to be ready so they will be",
    "start": "132060",
    "end": "139380"
  },
  {
    "text": "able to start and use this spot for example Easton is one of the example and",
    "start": "139380",
    "end": "144720"
  },
  {
    "text": "we will see how it will work kay native a lot of time is waiting also for the pod startup time and kubernetes",
    "start": "144720",
    "end": "152040"
  },
  {
    "text": "of course and why do we care about startup time and which use cases is it",
    "start": "152040",
    "end": "158700"
  },
  {
    "text": "really important so we have few examples",
    "start": "158700",
    "end": "163710"
  },
  {
    "text": "here the first one is for example service and specific more specifically",
    "start": "163710",
    "end": "169080"
  },
  {
    "text": "scale to zero girl from zero in server less the pod is starting only after your",
    "start": "169080",
    "end": "176730"
  },
  {
    "text": "requests are coming and then it is very important the time that the pod is ready",
    "start": "176730",
    "end": "183510"
  },
  {
    "text": "because only after it is ready the request can be served more use cases are",
    "start": "183510",
    "end": "191030"
  },
  {
    "text": "auto scaling in auto scaling when we have a load on the system and we would",
    "start": "191030",
    "end": "197220"
  },
  {
    "text": "like to move request to new pod we need to wait to the pod to be ready and last",
    "start": "197220",
    "end": "202739"
  },
  {
    "text": "example is for recovering from failures when it is also very important because",
    "start": "202739",
    "end": "208620"
  },
  {
    "text": "all the requests are waiting basically not getting any response till the pod is ready so what actually happening when",
    "start": "208620",
    "end": "218730"
  },
  {
    "text": "pod is the starting in high level so first of all the user is sending a",
    "start": "218730",
    "end": "226320"
  },
  {
    "text": "request to the API say ok to create a new pod the then the API server or 1000",
    "start": "226320",
    "end": "236459"
  },
  {
    "text": "eyes and authenticate the request using some access control system it is calling",
    "start": "236459",
    "end": "244470"
  },
  {
    "text": "to the admission web hook to validate or mutate pod and we will see later how",
    "start": "244470",
    "end": "251720"
  },
  {
    "text": "exactly easter is coming inside it using another admission web hooks that is",
    "start": "251720",
    "end": "258000"
  },
  {
    "text": "coming in and how it we will see example of how exactly it's in the startup time etcd is one of the it's",
    "start": "258000",
    "end": "268229"
  },
  {
    "text": "a persistent sort that kubernetes is using to hold all the information about",
    "start": "268229",
    "end": "273689"
  },
  {
    "text": "the object and here api server is saving all the object information inside dtc",
    "start": "273689",
    "end": "279569"
  },
  {
    "text": "they will see also after that that in any point that any we have new information about the object it is being",
    "start": "279569",
    "end": "285810"
  },
  {
    "text": "saved into etcd the scheduler is listening to the api server and it's a",
    "start": "285810",
    "end": "293909"
  },
  {
    "text": "point that it's seeing a new object that is been creating it is looking for a node and attaching it to this object and",
    "start": "293909",
    "end": "302490"
  },
  {
    "text": "save the information into etcd so all",
    "start": "302490",
    "end": "308310"
  },
  {
    "text": "these so far that we've seen happening in the control plane still we don't have any container in any port that is",
    "start": "308310",
    "end": "315449"
  },
  {
    "text": "running yet let's zoom out and see what is happening on the Walker node so if we",
    "start": "315449",
    "end": "321060"
  },
  {
    "text": "keep the control plane on the Left all of that happened on the control plane now we're going to shift our focus into",
    "start": "321060",
    "end": "327150"
  },
  {
    "text": "the worker nodes so there's an agent and I'm pretty sure everybody knows called",
    "start": "327150",
    "end": "332520"
  },
  {
    "text": "the Kubler that interacts with and then the coolest is the one that is responsible to now create a sandbox and",
    "start": "332520",
    "end": "338849"
  },
  {
    "text": "get all the containers running on that specific node there's a bunch of interfaces that the kulit uses in order",
    "start": "338849",
    "end": "345479"
  },
  {
    "text": "to set up a sandbox a control environment to run the image and run the container in runtime interfaces network",
    "start": "345479",
    "end": "352469"
  },
  {
    "text": "interfaces storage interfaces all of these get set up by the couplet and then it's going to create the containers",
    "start": "352469",
    "end": "358710"
  },
  {
    "text": "inside that okay so we have the sandbox",
    "start": "358710",
    "end": "364139"
  },
  {
    "text": "ready and we start to create the containers and we get the containers in",
    "start": "364139",
    "end": "369629"
  },
  {
    "text": "them and ultimately after all of the containers in the pod are there the",
    "start": "369629",
    "end": "375960"
  },
  {
    "text": "couplet is going to ping it on the next slide and the couplet checks that the",
    "start": "375960",
    "end": "384449"
  },
  {
    "text": "pods and the containers are all ready and then it's going to go and update at CD and you'll keep on seeing more and",
    "start": "384449",
    "end": "391229"
  },
  {
    "text": "more updates that go into at CD so basically it's a very complex multi",
    "start": "391229",
    "end": "396240"
  },
  {
    "text": "their process starts on the control plane goes into the data plane a lot of moving machinery a lot of components",
    "start": "396240",
    "end": "402680"
  },
  {
    "text": "real question is how long does it take I mean we wanted to take as little as",
    "start": "402680",
    "end": "407789"
  },
  {
    "text": "possible so that the pod will be ready to serve traffic as quickly as possible the short answer is it really depends",
    "start": "407789",
    "end": "415949"
  },
  {
    "text": "right I mean there is no one answer because it depends on the load on the cluster the load on your nodes how",
    "start": "415949",
    "end": "422009"
  },
  {
    "text": "quickly the scheduler can find a available node whether etcd and the I PI",
    "start": "422009",
    "end": "427410"
  },
  {
    "text": "masters are responsive or not a lot of factors really coming in and affecting",
    "start": "427410",
    "end": "432900"
  },
  {
    "text": "the startup time from when you actually submit your request to create the pod until it is there and running in order",
    "start": "432900",
    "end": "440039"
  },
  {
    "text": "to simplify that kubernetes defines an official service level objective which",
    "start": "440039",
    "end": "445889"
  },
  {
    "text": "is five seconds for the p99 under certain conditions again they're",
    "start": "445889",
    "end": "451020"
  },
  {
    "text": "trying to limit the amount of work or the variance that goes into how long does it take for example within this",
    "start": "451020",
    "end": "458520"
  },
  {
    "text": "time the couplet needs to download images from a remote registry right so",
    "start": "458520",
    "end": "463590"
  },
  {
    "text": "if it's a large image or the connectivity is constrained or there's a bandwidth issue connected to the",
    "start": "463590",
    "end": "470430"
  },
  {
    "text": "registry it's going to take much longer so in order to actually validate this SLO they define it with locally cached",
    "start": "470430",
    "end": "477300"
  },
  {
    "text": "images right I mean they're going to try and limit the variants and get a result so official SLO five seconds for the p99",
    "start": "477300",
    "end": "485610"
  },
  {
    "text": "in other words 99% of the pod creations are going to complete in under five",
    "start": "485610",
    "end": "491699"
  },
  {
    "text": "seconds this matches up pretty well with experiments that we did what we saw was",
    "start": "491699",
    "end": "498419"
  },
  {
    "text": "that the median was about two and a half seconds on our clusters and these were clusters that weren't doing really a lot",
    "start": "498419",
    "end": "505409"
  },
  {
    "text": "of work and the p99 goes up you know by half a second or so you might get",
    "start": "505409",
    "end": "513539"
  },
  {
    "text": "different numbers on your clusters depending on the whole bunch of other stuff so this has been like an",
    "start": "513539",
    "end": "521159"
  },
  {
    "text": "introduction to what we want to talk about and just to give you a baseline of where we are and now what happens when",
    "start": "521159",
    "end": "528900"
  },
  {
    "text": "we actually take a look at adding east you into the picture how does that affect the startup",
    "start": "528900",
    "end": "534060"
  },
  {
    "text": "time and then we'll talk about how to shorten it yeah so let's see what happened when East yo",
    "start": "534060",
    "end": "539550"
  },
  {
    "text": "is coming into the picture so does anyone know what is easier here okay I",
    "start": "539550",
    "end": "548040"
  },
  {
    "text": "think I will skip the intro about estas we will have time to talk about the real stuff here so just short really",
    "start": "548040",
    "end": "557300"
  },
  {
    "text": "information about Easter so as you know Easter is being is be a lit to the",
    "start": "557300",
    "end": "563130"
  },
  {
    "text": "control plan and data plan the data plan is composed of a set of intelligent",
    "start": "563130",
    "end": "568620"
  },
  {
    "text": "proxies that are being deployed as a side cars and those side cars are",
    "start": "568620",
    "end": "575580"
  },
  {
    "text": "controlling the communication between the microservices a controlled plan concei content consists of yo components",
    "start": "575580",
    "end": "584450"
  },
  {
    "text": "which are the patent we will see later how it influenced the startup time the",
    "start": "584450",
    "end": "590310"
  },
  {
    "text": "pilot that is responsible for the configuration of the sidecars the mixer that is responsible for the policy in",
    "start": "590310",
    "end": "598830"
  },
  {
    "text": "the telemetry and citadel that is responsible for the strongest ant",
    "start": "598830",
    "end": "604590"
  },
  {
    "text": "occasional authorization and the identity management of the service mesh so let's see how SEO is coming into the",
    "start": "604590",
    "end": "613140"
  },
  {
    "text": "picture this is a let's go back to the diagram that we saw before so what is -",
    "start": "613140",
    "end": "620040"
  },
  {
    "text": "is adding east your heading first of all the sidecar injection webhook which is",
    "start": "620040",
    "end": "626190"
  },
  {
    "text": "responsible for in adding and injecting the east your specific machinery into",
    "start": "626190",
    "end": "633420"
  },
  {
    "text": "the pod definition it adds we will see later that it is adding the SEO proxy",
    "start": "633420",
    "end": "640440"
  },
  {
    "text": "sidecar as one of the pod container the second one is the Citadel the Citadel",
    "start": "640440",
    "end": "648270"
  },
  {
    "text": "control control point component is used to create a TLS certification for",
    "start": "648270",
    "end": "655410"
  },
  {
    "text": "encryption they interpret communication",
    "start": "655410",
    "end": "661220"
  },
  {
    "text": "this is a yeast unit in this is an init container that is being added as part of the pod it is coming",
    "start": "661220",
    "end": "668790"
  },
  {
    "text": "before all the containers are coming and it is responsible for the to configure",
    "start": "668790",
    "end": "675030"
  },
  {
    "text": "the pod network by two interest intercept the network so the network top",
    "start": "675030",
    "end": "682470"
  },
  {
    "text": "traffic to go through the end void proxy it is doing it by configuring the IP",
    "start": "682470",
    "end": "689280"
  },
  {
    "text": "table inside the pod Network and east",
    "start": "689280",
    "end": "694800"
  },
  {
    "text": "your proxy this is a container that is being added to the pod and is running",
    "start": "694800",
    "end": "701370"
  },
  {
    "text": "actually the L values a sidecar proxy the pod this is your proxy is",
    "start": "701370",
    "end": "710040"
  },
  {
    "text": "getting all the configuration from the pilot so it's communicating with the",
    "start": "710040",
    "end": "716670"
  },
  {
    "text": "pilot using XDS interface and it's whenever it's getting all the",
    "start": "716670",
    "end": "722460"
  },
  {
    "text": "configuration it's using the readiness probe it's it's informing the kubernetes",
    "start": "722460",
    "end": "730050"
  },
  {
    "text": "the couplets that the pot is ready and it can start getting requests so how",
    "start": "730050",
    "end": "738480"
  },
  {
    "text": "actually all this together coming into time and how much time it",
    "start": "738480",
    "end": "744030"
  },
  {
    "text": "happened so as you can see from our test overall time is around eight and a half",
    "start": "744030",
    "end": "750240"
  },
  {
    "text": "second which is about five second more than what we've seen before without is",
    "start": "750240",
    "end": "757080"
  },
  {
    "text": "do and what we see inside this eight and a half second we have the issue anytime",
    "start": "757080",
    "end": "763200"
  },
  {
    "text": "which has two as you can see here as to complete before any other container",
    "start": "763200",
    "end": "769550"
  },
  {
    "text": "containers are starting and after this time we have the sto proxy and the user",
    "start": "769550",
    "end": "775740"
  },
  {
    "text": "container which can be any user container that is running in the system",
    "start": "775740",
    "end": "782360"
  },
  {
    "text": "so just to explain a little bit about the tooling involved in what you're seeing in front of you so we have a",
    "start": "783950",
    "end": "789900"
  },
  {
    "text": "watcher that's running inside the cluster looking at the pods that's but they're being created and looking at the",
    "start": "789900",
    "end": "795550"
  },
  {
    "text": "Tanner's and it actually goes ahead and creates distributed tracing spans so",
    "start": "795550",
    "end": "800710"
  },
  {
    "text": "things like Jager if you know it or Zipkin we actually based on those events those status changes that we see we",
    "start": "800710",
    "end": "807910"
  },
  {
    "text": "create spans and then we can visualize that in a very easy way you'll see that",
    "start": "807910",
    "end": "814390"
  },
  {
    "text": "you have for each one of the containers one or more spans it's basically from",
    "start": "814390",
    "end": "819640"
  },
  {
    "text": "the time that they were first created the container was first created first appeared until it's transitioned in its",
    "start": "819640",
    "end": "825580"
  },
  {
    "text": "state to being either complete if it's in in each container that needed to do some setup and then over or it's",
    "start": "825580",
    "end": "832690"
  },
  {
    "text": "switching into ready running or whatever okay what we do is when we see it we start the span whenever the container",
    "start": "832690",
    "end": "839800"
  },
  {
    "text": "changes status from starting downloading image whatever whenever it changes we",
    "start": "839800",
    "end": "847450"
  },
  {
    "text": "start and close the spans and therefore we can actually see where is the time being spent inside the different",
    "start": "847450",
    "end": "853750"
  },
  {
    "text": "containers there is a shaded area to the left which is some overhead that we have",
    "start": "853750",
    "end": "861610"
  },
  {
    "text": "not been able to pinpoint that happens inside the club couplet itself it's weak suspected it's setting up all of the",
    "start": "861610",
    "end": "868690"
  },
  {
    "text": "needed interfaces namespace etc that you need in order to run the containers the",
    "start": "868690",
    "end": "875260"
  },
  {
    "text": "reason that we attribute it to the overhead of the couplet and kubernetes is when you will see in a second we",
    "start": "875260",
    "end": "882460"
  },
  {
    "text": "remove the init containers suddenly all of a sudden the other containers are",
    "start": "882460",
    "end": "887620"
  },
  {
    "text": "going to be extended by the two seconds that are currently attributed to into containers so there's like a two second",
    "start": "887620",
    "end": "893740"
  },
  {
    "text": "overhead that we can't really do anything about it we don't know what component inside qubit is actually",
    "start": "893740",
    "end": "899490"
  },
  {
    "text": "responsible for that but it's not something that has to do with a steal or your own workloads okay okay so we just",
    "start": "899490",
    "end": "910030"
  },
  {
    "text": "gave you a steal which gives you benefit or service mesh that gave you benefits but we also gave you an extra five",
    "start": "910030",
    "end": "915280"
  },
  {
    "text": "seconds which I'm sure everybody who just wants to get rid of right it's not a good thing to have so can we improve I think the short",
    "start": "915280",
    "end": "922990"
  },
  {
    "text": "answer is yes we can and there are several techniques that you can do and you can combine them to get most of",
    "start": "922990",
    "end": "930820"
  },
  {
    "text": "the added time back what can you do the",
    "start": "930820",
    "end": "937149"
  },
  {
    "text": "first option is to run the East EOC and I and we'll go into detail about each one of those okay so if T of C and I is",
    "start": "937149",
    "end": "943570"
  },
  {
    "text": "a different way to do the redirection not using the East unit component you",
    "start": "943570",
    "end": "949390"
  },
  {
    "text": "saw a second ago but instead of it using an e steel provided CNI a kubernetes",
    "start": "949390",
    "end": "954880"
  },
  {
    "text": "network interface container network interface implementation which doesn't alter whatever C and I you already have",
    "start": "954880",
    "end": "960940"
  },
  {
    "text": "it runs in addition to it so if you're running calico flannel cilium whatever",
    "start": "960940",
    "end": "966100"
  },
  {
    "text": "it runs in addition the only purpose of our Sienna is to reprogram a steel that",
    "start": "966100",
    "end": "971410"
  },
  {
    "text": "gives you back three seconds nice improvement next we'll take a look at playing around with the readiness",
    "start": "971410",
    "end": "978040"
  },
  {
    "text": "probe so as we said the qubit is going to test whether pods are ready to serve traffic and it checks it on a schedule",
    "start": "978040",
    "end": "984640"
  },
  {
    "text": "if you shorten that schedule you're not increasing the load by match but you are saving time because they become ready",
    "start": "984640",
    "end": "990640"
  },
  {
    "text": "sooner we can talk about static proxy configurations as you remember as soon",
    "start": "990640",
    "end": "997120"
  },
  {
    "text": "as n we starts up it's going to call into the control plane and get its configuration that configuration is",
    "start": "997120",
    "end": "1002459"
  },
  {
    "text": "dynamic and if your use case warrants a static configuration or it makes sense",
    "start": "1002459",
    "end": "1007529"
  },
  {
    "text": "to have a static configuration in your case then you can program it and there are ways to ride to override the dynamic",
    "start": "1007529",
    "end": "1014100"
  },
  {
    "text": "nature of the configuration just have a static configuration we'll show how to do that as well gives you back up to two",
    "start": "1014100",
    "end": "1020070"
  },
  {
    "text": "seconds and if you are really really really you know down to the last millisecond and you absolutely need to",
    "start": "1020070",
    "end": "1027540"
  },
  {
    "text": "have that instead of having dynamic injections through the admission web hook you can do that statically in your",
    "start": "1027540",
    "end": "1034500"
  },
  {
    "text": "CI CD by running easty or control inject and getting all of the setup done ahead of time so eesti of c ni as we said it's",
    "start": "1034500",
    "end": "1045600"
  },
  {
    "text": "not a real c ni it's not as the United is responsible for the networking in the cluster it's also it's only a c ni that",
    "start": "1045600",
    "end": "1052169"
  },
  {
    "text": "are responsible for running the same iptables magic setup that's needed to",
    "start": "1052169",
    "end": "1058110"
  },
  {
    "text": "redirect traffic from the workload into the east EO proxy inside the pod",
    "start": "1058110",
    "end": "1064650"
  },
  {
    "text": "there are benefits to it we just talked about getting those two three seconds",
    "start": "1064650",
    "end": "1069760"
  },
  {
    "text": "back that's one benefit the other benefit is because all of the set up work all of the networking privileged",
    "start": "1069760",
    "end": "1076270"
  },
  {
    "text": "operations happens ahead of time outside of your pod the pod doesn't need special",
    "start": "1076270",
    "end": "1081790"
  },
  {
    "text": "privileges it doesn't need to run with capabilities that are typically reserved for administrations of network",
    "start": "1081790",
    "end": "1087850"
  },
  {
    "text": "functionality this all happens under the CNI as part of the couplet so no need to",
    "start": "1087850",
    "end": "1093190"
  },
  {
    "text": "leak extra privileges into your pod another plus the downside is that",
    "start": "1093190",
    "end": "1098650"
  },
  {
    "text": "because the CNI programs all of the redirection to envoi before NY actually",
    "start": "1098650",
    "end": "1106510"
  },
  {
    "text": "starts if you have any init containers that need to run and they need to have access to the network basically that",
    "start": "1106510",
    "end": "1112780"
  },
  {
    "text": "traffic could get black hole because it will be redirected to n void and there's nothing there okay so that's the",
    "start": "1112780",
    "end": "1119230"
  },
  {
    "text": "downside there are ways to mitigate that downside if you have any containers that",
    "start": "1119230",
    "end": "1124600"
  },
  {
    "text": "don't need any kind of network access obviously it's not a problem if you have in it containers that need ports or IP",
    "start": "1124600",
    "end": "1131380"
  },
  {
    "text": "addresses which are not shared or do not overlap with what is being used by your",
    "start": "1131380",
    "end": "1136960"
  },
  {
    "text": "actual workload you can tell east EO as part of the configuration to skip those basically",
    "start": "1136960",
    "end": "1141970"
  },
  {
    "text": "say don't trap those traffic flows and therefore they will go to where they",
    "start": "1141970",
    "end": "1147400"
  },
  {
    "text": "should be going so if we apply a steal in it you'll see that we saved all the",
    "start": "1147400",
    "end": "1153670"
  },
  {
    "text": "way and you will see here those two seconds that we told you about before now are attributed to the workload and",
    "start": "1153670",
    "end": "1161770"
  },
  {
    "text": "the East EO proxy so the the workload container which is a very simple no op",
    "start": "1161770",
    "end": "1167470"
  },
  {
    "text": "container in our test because we didn't want to get you know noise instability into our system it was extended from",
    "start": "1167470",
    "end": "1173980"
  },
  {
    "text": "about 1.9 to 3.7 similarly the East EO proxy startup time expanded as well so",
    "start": "1173980",
    "end": "1183850"
  },
  {
    "text": "that was the sto CNI it is currently in development it's available you can try",
    "start": "1183850",
    "end": "1189550"
  },
  {
    "text": "it it's not a stable API yet so if it's a production workload recommend playing with it but holding",
    "start": "1189550",
    "end": "1195510"
  },
  {
    "text": "off on actual usage for a little while next as we said there is a readiness",
    "start": "1195510",
    "end": "1202860"
  },
  {
    "text": "basically kulit is going to probe the workload and the East your proxy that",
    "start": "1202860",
    "end": "1208470"
  },
  {
    "text": "was added to see are you ready to accept traffic and there is an initial delay",
    "start": "1208470",
    "end": "1213510"
  },
  {
    "text": "and there's also a period of how quickly it's going to test it right now",
    "start": "1213510",
    "end": "1219690"
  },
  {
    "text": "it's a two-second delay and you can configure it to lower what we see in practice is usually the first probe the",
    "start": "1219690",
    "end": "1227909"
  },
  {
    "text": "one that happens after the grace period does not succeed but the next one which happens after 3 seconds succeeds so if",
    "start": "1227909",
    "end": "1236490"
  },
  {
    "text": "you change the period which is a very harmless change in our view because you're only heading like one ping every",
    "start": "1236490",
    "end": "1243270"
  },
  {
    "text": "now and then to test instead of doing this on a two-second schedule you're adding one network all on a one-second",
    "start": "1243270",
    "end": "1250080"
  },
  {
    "text": "schedule so the load is not going to be significant but there is a 50% chance that you're going to be ready on the",
    "start": "1250080",
    "end": "1257640"
  },
  {
    "text": "second probe after 2 seconds and not on the first probe after 3 seconds so on",
    "start": "1257640",
    "end": "1262799"
  },
  {
    "text": "average you're saving here about half a second configuration the same",
    "start": "1262799",
    "end": "1272400"
  },
  {
    "text": "configuration that we talked about here is going to be applicable to all of the other methods that we talked about you",
    "start": "1272400",
    "end": "1277620"
  },
  {
    "text": "can either change this when you install through helm and you can override the",
    "start": "1277620",
    "end": "1283770"
  },
  {
    "text": "values as you can see and on the slide you can also add it the sidecar",
    "start": "1283770",
    "end": "1289950"
  },
  {
    "text": "injection template to set the readiness probe to one second and it's also up there and in the case of the readiness",
    "start": "1289950",
    "end": "1296640"
  },
  {
    "text": "probe there's also an HDL annotation which means that you can apply it on a port by pod basis you don't need to do",
    "start": "1296640",
    "end": "1302640"
  },
  {
    "text": "it for all of your pods you can actually get it done on a specific pod the first two methods are going to do it globally",
    "start": "1302640",
    "end": "1309360"
  },
  {
    "text": "right so if you do it on helm from the installation onwards it's all going to change if you do it from the sidecar",
    "start": "1309360",
    "end": "1316289"
  },
  {
    "text": "container template injection every new container they're going to get deployed",
    "start": "1316289",
    "end": "1321720"
  },
  {
    "text": "will get the new readiness value so from this point on and if you do it on our one by one cases",
    "start": "1321720",
    "end": "1327870"
  },
  {
    "text": "then you have it that way next option that we played around with was to",
    "start": "1327870",
    "end": "1335400"
  },
  {
    "text": "instead of waiting for the East EO proxy readiness there's another component that",
    "start": "1335400",
    "end": "1341190"
  },
  {
    "text": "sits next to the proxy and basically makes the decision whether or not it's ready or not these steel proxy the",
    "start": "1341190",
    "end": "1349559"
  },
  {
    "text": "product the pilot agent is going to see if the configuration was already download did nyu reconfigure itself can",
    "start": "1349559",
    "end": "1356610"
  },
  {
    "text": "we start serving traffic instead of doing that you can redirect readiness probe at envoi directly and basically",
    "start": "1356610",
    "end": "1363570"
  },
  {
    "text": "say to envoi are you ready instead of asking is do is envoi ready this can",
    "start": "1363570",
    "end": "1369270"
  },
  {
    "text": "save you a little bit more and it is worthwhile in some cases the problem",
    "start": "1369270",
    "end": "1375960"
  },
  {
    "text": "with this method is that if envoi is ready because it had its startup config",
    "start": "1375960",
    "end": "1382559"
  },
  {
    "text": "parsed and the configuration is correct but it didn't get all the cluster information yet that means that any kind",
    "start": "1382559",
    "end": "1390179"
  },
  {
    "text": "of connectivity into it might be a problem or any kind of connectivity out of the workload is going to be a problem",
    "start": "1390179",
    "end": "1395429"
  },
  {
    "text": "so if your code or your callers are going to be retrying that connection they're going to go once it fails go",
    "start": "1395429",
    "end": "1402420"
  },
  {
    "text": "twice three times so if you have resiliency and retries built into the rest of the system that is a change that",
    "start": "1402420",
    "end": "1408690"
  },
  {
    "text": "you could make and it will be ready faster and you can start redirecting traffic faster but it really depends on",
    "start": "1408690",
    "end": "1415440"
  },
  {
    "text": "the way that you program the rest of the mesh so not something that we necessarily recommend this to can be",
    "start": "1415440",
    "end": "1423000"
  },
  {
    "text": "changed through either the helm config or through the sidecar injection okay so",
    "start": "1423000",
    "end": "1428580"
  },
  {
    "text": "same methods as before by the way all of the slides are online on scared you don't need to remember any of these if",
    "start": "1428580",
    "end": "1434970"
  },
  {
    "text": "you need to refer to it later on it's there if I wanted to say anything else",
    "start": "1434970",
    "end": "1441360"
  },
  {
    "text": "on this yeah so so the last thing you",
    "start": "1441360",
    "end": "1446460"
  },
  {
    "text": "can do is you can decide to disable the readiness probe completely and this is certainly not something that we would",
    "start": "1446460",
    "end": "1452580"
  },
  {
    "text": "recommend doing about what we did do is we wanted to see if there was what-if",
    "start": "1452580",
    "end": "1458070"
  },
  {
    "text": "envoi or the co proxy was ready immediate how much could we save right so it's",
    "start": "1458070",
    "end": "1464220"
  },
  {
    "text": "only to motivate the fact that we wanted to try a static configuration right now",
    "start": "1464220",
    "end": "1469530"
  },
  {
    "text": "it takes time because envoi needs to connect into the control plane download stuff process stuff combine it",
    "start": "1469530",
    "end": "1476070"
  },
  {
    "text": "manipulate it load it reconfigure itself what if we gave invoice all the",
    "start": "1476070",
    "end": "1481560"
  },
  {
    "text": "configuration that it needed so it was immediately ready right so the amount that you can save we simulated that by",
    "start": "1481560",
    "end": "1488820"
  },
  {
    "text": "actually disabling the readiness which means it's ready when it's started right so there's no need to ping it and see if",
    "start": "1488820",
    "end": "1495210"
  },
  {
    "text": "it's ready or not so another one second",
    "start": "1495210",
    "end": "1500640"
  },
  {
    "text": "that you can actually cut down what do we need by the what do we mean by the",
    "start": "1500640",
    "end": "1506310"
  },
  {
    "text": "static the static configuration anybody",
    "start": "1506310",
    "end": "1511440"
  },
  {
    "text": "has a bunch of XDS interfaces cluster discovery endpoint discovery secret",
    "start": "1511440",
    "end": "1516990"
  },
  {
    "text": "discovery listen so a whole bunch of dynamic stuff that it can get it's a programmable proxy and you don't",
    "start": "1516990",
    "end": "1523080"
  },
  {
    "text": "necessarily need all of that Dynamis 'ti in a real system for example if you're using something like a native",
    "start": "1523080",
    "end": "1529440"
  },
  {
    "text": "everything goes from the services",
    "start": "1529440",
    "end": "1534570"
  },
  {
    "text": "through the ingress gateway so in fact you actually know everything that's needed for envoi and all of the envoy's",
    "start": "1534570",
    "end": "1541500"
  },
  {
    "text": "in AK a native installation when you're already deploying it yeah so if your",
    "start": "1541500",
    "end": "1549060"
  },
  {
    "text": "topology is known in advance if you know your dependencies well in advance as we",
    "start": "1549060",
    "end": "1554340"
  },
  {
    "text": "said K native is being one example it's not easy to configure it is something",
    "start": "1554340",
    "end": "1559980"
  },
  {
    "text": "you can actually configure today if you wanted to but it's not friendly it is something that we need to take a look at",
    "start": "1559980",
    "end": "1565890"
  },
  {
    "text": "as the co team and figure out if we want to expose that at least for the use cases where it makes sense because as we",
    "start": "1565890",
    "end": "1571980"
  },
  {
    "text": "said it can cut down another two seconds of startup time and you can actually",
    "start": "1571980",
    "end": "1577440"
  },
  {
    "text": "have a combination of a static and dynamic config you could have let's say",
    "start": "1577440",
    "end": "1583620"
  },
  {
    "text": "all of the clusters are known in advance I'm going to have a static CD s but endpoints I want to populate at runtime",
    "start": "1583620",
    "end": "1589860"
  },
  {
    "text": "so I'll have a dynamic EBS and then kind of combinations all of these require more programming and we have",
    "start": "1589860",
    "end": "1596260"
  },
  {
    "text": "some ideas on what we can do for example start with a static config and then overlay it with the dynamic properties",
    "start": "1596260",
    "end": "1602050"
  },
  {
    "text": "as they become known asynchronously in the background as opposed to having envoi actually block and wait until it",
    "start": "1602050",
    "end": "1608470"
  },
  {
    "text": "gets the full config two methods for doing this if you wanted to override the",
    "start": "1608470",
    "end": "1615760"
  },
  {
    "text": "default configuration or have additional properties that go into the default startup config you basically create an",
    "start": "1615760",
    "end": "1622810"
  },
  {
    "text": "invoice configuration file which means you need to understand invoice configuration in detail it can be",
    "start": "1622810",
    "end": "1629080"
  },
  {
    "text": "complicated but if you are adventurous and you can grok the entire",
    "start": "1629080",
    "end": "1634330"
  },
  {
    "text": "configuration create it create a file store that file in the config map and then annotate the pods to use the",
    "start": "1634330",
    "end": "1642160"
  },
  {
    "text": "startup config that you created instead of the default startup config second",
    "start": "1642160",
    "end": "1647650"
  },
  {
    "text": "method is to completely replace the startup configuration so previous one was gave you the ability to merge",
    "start": "1647650",
    "end": "1654040"
  },
  {
    "text": "additional properties or override properties if they were defined in your configuration as well if you want to do",
    "start": "1654040",
    "end": "1662080"
  },
  {
    "text": "this instead by completely overwriting then again you create a full configuration file you store it in",
    "start": "1662080",
    "end": "1668440"
  },
  {
    "text": "config map but instead of annotating the pod now you're going to change the config in a way that maps that config",
    "start": "1668440",
    "end": "1677020"
  },
  {
    "text": "map into each one of the pods as a volume and tells envoi through a",
    "start": "1677020",
    "end": "1682360"
  },
  {
    "text": "command-line interface to use the new startup configuration ok last and if you",
    "start": "1682360",
    "end": "1691060"
  },
  {
    "text": "made it so far we can give you another 15 to 20 milliseconds by doing manual sto inject not much to say about it but",
    "start": "1691060",
    "end": "1700660"
  },
  {
    "text": "it certainly is something that if if you care that about performance that much and you want to do it in your CI CD that",
    "start": "1700660",
    "end": "1707170"
  },
  {
    "text": "is that would be a good place to do it in that way you don't need the admission web builder mutating webhook inside so",
    "start": "1707170",
    "end": "1714460"
  },
  {
    "text": "in summary we saw that we added five seconds or so to the startup time and if",
    "start": "1714460",
    "end": "1721690"
  },
  {
    "text": "you use these TOC ni three seconds the majority of that is already coming back at you another half a second by",
    "start": "1721690",
    "end": "1730030"
  },
  {
    "text": "shortening the probe the readiness probe if you're okay with actually retrying",
    "start": "1730030",
    "end": "1737860"
  },
  {
    "text": "communications you can cut down another half a second by changing it from the",
    "start": "1737860",
    "end": "1743250"
  },
  {
    "text": "pilot agent startup probe to the redness probe and for itself study configuration",
    "start": "1743250",
    "end": "1750670"
  },
  {
    "text": "again helpful very helpful but it does it is a complicated thing so proceed",
    "start": "1750670",
    "end": "1756730"
  },
  {
    "text": "with caution and the last one I think is mostly for fun that's all we had for today",
    "start": "1756730",
    "end": "1764670"
  },
  {
    "text": "we're happy to take questions right yeah",
    "start": "1764670",
    "end": "1769840"
  },
  {
    "text": "[Applause]",
    "start": "1769840",
    "end": "1778240"
  },
  {
    "text": "thank you for the presentation and outlining where their time is spent I",
    "start": "1783059",
    "end": "1790030"
  },
  {
    "text": "was just curious when you made this test is there a way I couldn't see how you",
    "start": "1790030",
    "end": "1797140"
  },
  {
    "text": "arrived at these numbers yes we plan to",
    "start": "1797140",
    "end": "1803170"
  },
  {
    "text": "open source that part about it we can",
    "start": "1803170",
    "end": "1808750"
  },
  {
    "text": "make we can make it available I'm not sure we will invest time in open sourcing the entire framework we may",
    "start": "1808750",
    "end": "1815920"
  },
  {
    "text": "want to do that far we can certainly share it because I keep getting these questions about how performant is this",
    "start": "1815920",
    "end": "1823660"
  },
  {
    "text": "geo you know it is complicated there are easier ways that seems to be the big",
    "start": "1823660",
    "end": "1829630"
  },
  {
    "text": "question and you know I tried to do some",
    "start": "1829630",
    "end": "1835240"
  },
  {
    "text": "performance testing of course I tried at 1 1 1 2 levels I don't know which",
    "start": "1835240",
    "end": "1841960"
  },
  {
    "text": "version this is one three one yeah yeah so and again one of the component of a",
    "start": "1841960",
    "end": "1849910"
  },
  {
    "text": "story is mixer which which goes away in one for yeah so I guess I mean if I find",
    "start": "1849910",
    "end": "1857350"
  },
  {
    "text": "this kind of information not just as a session but also as a blog",
    "start": "1857350",
    "end": "1863059"
  },
  {
    "text": "or whatever we are planning first of all",
    "start": "1863059",
    "end": "1868309"
  },
  {
    "text": "to specifically with more specifics so I",
    "start": "1868309",
    "end": "1873859"
  },
  {
    "text": "think performance is a big question and you're right there's there's startup performance which we talked about here",
    "start": "1873859",
    "end": "1879409"
  },
  {
    "text": "and the focus of this talk there's runtime performance latencies bandwidth etcetera which obviously we did not",
    "start": "1879409",
    "end": "1885199"
  },
  {
    "text": "touch on yes I know there is a performance work group within Sto so we",
    "start": "1885199",
    "end": "1890989"
  },
  {
    "text": "are very much minded towards that as well this work has been presented to the",
    "start": "1890989",
    "end": "1896899"
  },
  {
    "text": "performance work group and sure I'll probably add get added to the channel",
    "start": "1896899",
    "end": "1902919"
  },
  {
    "text": "right now I'm still getting some things",
    "start": "1902919",
    "end": "1907969"
  },
  {
    "text": "ready yeah this is awesome I really liked it but specs",
    "start": "1907969",
    "end": "1913699"
  },
  {
    "text": "I mean devil is in the details I mean it is nice that you also spelled out what",
    "start": "1913699",
    "end": "1920359"
  },
  {
    "text": "could help with each of the microsecond you know cut down and where it could",
    "start": "1920359",
    "end": "1925519"
  },
  {
    "text": "help I like that as well yeah awesome thank you thank you and if you come by later just give us your card",
    "start": "1925519",
    "end": "1932839"
  },
  {
    "text": "we'll give you my mouth card and we can see how to make that information shared to anyone else of course",
    "start": "1932839",
    "end": "1941138"
  },
  {
    "text": "thank you for great talk I do you think how could i yeah you we",
    "start": "1948320",
    "end": "1954270"
  },
  {
    "text": "mentioned that the time to take for pulling image is out of scope for the",
    "start": "1954270",
    "end": "1960750"
  },
  {
    "text": "away but do you think how critical the time to take for pulling image is and",
    "start": "1960750",
    "end": "1967580"
  },
  {
    "text": "you have any yeah idea to mitigate it so",
    "start": "1967580",
    "end": "1976170"
  },
  {
    "text": "the problem with downloading and counting that time is really it is out of our control right and if you have a",
    "start": "1976170",
    "end": "1982710"
  },
  {
    "text": "one gig to Gig image obviously is going to take much longer than a 20 Meg image",
    "start": "1982710",
    "end": "1988860"
  },
  {
    "text": "and when we do a performance comparison or we try to optimize it if the numbers",
    "start": "1988860",
    "end": "1995580"
  },
  {
    "text": "are going to be skewed towards the large download time everything else would be",
    "start": "1995580",
    "end": "2001250"
  },
  {
    "text": "noise right so that's why we we try to eliminate that from the picture and it's",
    "start": "2001250",
    "end": "2007640"
  },
  {
    "text": "also what kubernetes tries to do with the SLO it's saying all the images are cached because if you have too much",
    "start": "2007640",
    "end": "2013160"
  },
  {
    "text": "variance it's outside of our control nothing we can do about your image size your transfer rates whatever I know that",
    "start": "2013160",
    "end": "2020480"
  },
  {
    "text": "there are some projects not related to East you in any way I think it's a",
    "start": "2020480",
    "end": "2025520"
  },
  {
    "text": "generic kubernetes question that try to optimize the download by doing some kind",
    "start": "2025520",
    "end": "2032570"
  },
  {
    "text": "of a peer-to-peer transfer so instead of going to the registry taking it from nearby hosts if they have it cached",
    "start": "2032570",
    "end": "2037790"
  },
  {
    "text": "I don't remember the names of the projects but they are some out there",
    "start": "2037790",
    "end": "2044720"
  },
  {
    "text": "I think startup time makes sense to worry about and it's important especially if there's somebody waiting",
    "start": "2044720",
    "end": "2051919"
  },
  {
    "text": "for that response time so it's it's important if you can cut down on your image transfer by all means try and do",
    "start": "2051920",
    "end": "2059210"
  },
  {
    "text": "that you know it depends on your runtime environment go statically compiled",
    "start": "2059210",
    "end": "2065300"
  },
  {
    "text": "executables much smaller than doing from Lubuntu and then getting the entire JVM",
    "start": "2065300",
    "end": "2071300"
  },
  {
    "text": "in there and whatever right so if you can do anything about it it helps more",
    "start": "2071300",
    "end": "2079720"
  },
  {
    "text": "questions yes after looking at all this",
    "start": "2079720",
    "end": "2084908"
  },
  {
    "text": "profiling data was there anything that you decided to take out of your service mesh because it was just kind of",
    "start": "2084909",
    "end": "2090730"
  },
  {
    "text": "overkill for it it wasn't worth the performance penalty it was imposing so",
    "start": "2090730",
    "end": "2096490"
  },
  {
    "text": "as I said we are looking at the start up performance it's a limited view I think that it's not that we decided that it's",
    "start": "2096490",
    "end": "2105730"
  },
  {
    "text": "a bad idea to have a service mission it's obviously a trade-off you're getting benefits out of it and if you need it then you want to use it and I",
    "start": "2105730",
    "end": "2113770"
  },
  {
    "text": "think our focus is actually trying to optimize up to the point that it's not painful anymore there is more work that",
    "start": "2113770",
    "end": "2121390"
  },
  {
    "text": "is being done there we are trying to",
    "start": "2121390",
    "end": "2130180"
  },
  {
    "text": "find where exactly",
    "start": "2130180",
    "end": "2134130"
  },
  {
    "text": "and plus maybe as a side note we are part of research so we get to play with",
    "start": "2137770",
    "end": "2142960"
  },
  {
    "text": "stuff we're not really responsible for deciding whether or not to take the service mesh out or not yeah we did",
    "start": "2142960",
    "end": "2150490"
  },
  {
    "text": "their side of trying to optimize this too and because we felt that this was an interesting problem for us to look at so",
    "start": "2150490",
    "end": "2157000"
  },
  {
    "text": "that's all we have time for right now thank you everyone for coming please fill out your feedback forms if you have any other questions our speakers will",
    "start": "2157000",
    "end": "2163360"
  },
  {
    "text": "hang around for a few minutes I think so thank you all again [Applause]",
    "start": "2163360",
    "end": "2171359"
  }
]