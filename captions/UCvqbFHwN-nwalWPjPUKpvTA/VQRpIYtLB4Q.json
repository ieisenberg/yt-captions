[
  {
    "start": "0",
    "end": "44000"
  },
  {
    "text": "hello everyone welcome to all the tracing talk my name is Celia keys lenka I'm software engineer at custom and I'm",
    "start": "3629",
    "end": "10800"
  },
  {
    "text": "Ashley Martinez I'm a first year PhD student at the University of Washington and last year I was an intern at Caston",
    "start": "10800",
    "end": "17670"
  },
  {
    "text": "as you can see I'm presenting on behalf of Julio Louis who is not without who is not here today he is about father of the",
    "start": "17670",
    "end": "24779"
  },
  {
    "text": "newborn baby and spending time with his family but I was helping to develop this talk and also work on the LEM up so we",
    "start": "24779",
    "end": "31529"
  },
  {
    "text": "should be good in this talk will describe our journey how we were aiding",
    "start": "31529",
    "end": "36930"
  },
  {
    "text": "tracing into our existing kubernetes application and let's do it",
    "start": "36930",
    "end": "42140"
  },
  {
    "text": "at Castille we're developing kubernetes native application called km this",
    "start": "42140",
    "end": "47699"
  },
  {
    "start": "44000",
    "end": "121000"
  },
  {
    "text": "application helps to manage stateful applications in communities and it",
    "start": "47699",
    "end": "52800"
  },
  {
    "text": "followed in its micro services as you know maker services i complex and really",
    "start": "52800",
    "end": "58530"
  },
  {
    "text": "hard to the bottom so our journey was the tracing started when fuel follow",
    "start": "58530",
    "end": "64018"
  },
  {
    "text": "tests starting to be flayed him and we were getting some random timeouts which",
    "start": "64019",
    "end": "69180"
  },
  {
    "text": "were wasn't able to explain so we spend a lot of time looking for the logs and metrics but nothing was there we thought",
    "start": "69180",
    "end": "76409"
  },
  {
    "text": "that 13 close to that micro services would be easy to debug with the only",
    "start": "76409",
    "end": "82740"
  },
  {
    "text": "metrics and login but we were proven wrong to debug microservices you probably need the whole tree factor do",
    "start": "82740",
    "end": "88409"
  },
  {
    "text": "you need logging unit metrics and gimme tracing I thought that's how we decided",
    "start": "88409",
    "end": "94049"
  },
  {
    "text": "that we need it and the thing with in our case was that we already had an",
    "start": "94049",
    "end": "99570"
  },
  {
    "text": "application which was working and we needed tracing yesterday and we wanted it really quickly and we",
    "start": "99570",
    "end": "107009"
  },
  {
    "text": "didn't actually want to disrupt our development process or we write out the",
    "start": "107009",
    "end": "112140"
  },
  {
    "text": "whole application to start supporting tracing some that's how was our journey",
    "start": "112140",
    "end": "117299"
  },
  {
    "text": "and we'll describe in this talk what we need how it worked and what the result let's look at the kubernetes ecosystem",
    "start": "117299",
    "end": "125219"
  },
  {
    "start": "121000",
    "end": "146000"
  },
  {
    "text": "and what's the actually kubernetes native application looks like if you look at the github you will see that",
    "start": "125219",
    "end": "131610"
  },
  {
    "text": "most of the kubernetes native applications following micro services Partin most of them return goal also",
    "start": "131610",
    "end": "138510"
  },
  {
    "text": "most of them using TPI first approach and also most of them using code generations because it saves a lot of",
    "start": "138510",
    "end": "144209"
  },
  {
    "text": "time and it's just easy to do things to make this talk a little bit harder for us but a little bit more interesting for",
    "start": "144209",
    "end": "150420"
  },
  {
    "start": "146000",
    "end": "440000"
  },
  {
    "text": "you we develop and assemble app called image application and we were trying to",
    "start": "150420",
    "end": "156510"
  },
  {
    "text": "make it in the cloud native fashion which means it has two back-end micro-services image catalog which is",
    "start": "156510",
    "end": "164370"
  },
  {
    "text": "metadata store it talks to the database and faces all the information about images like passes with leaves in some",
    "start": "164370",
    "end": "171420"
  },
  {
    "text": "metadata also it has image store or the store service which saves images data on",
    "start": "171420",
    "end": "178019"
  },
  {
    "text": "the local hard drive both microservices written and goal and we're using swagger",
    "start": "178019",
    "end": "185220"
  },
  {
    "text": "to generate our HTTP json api s-- services and the client if you curious",
    "start": "185220",
    "end": "190709"
  },
  {
    "text": "he's the guy coupling up with open source it's in helm there's some bar script which helps you generate",
    "start": "190709",
    "end": "196349"
  },
  {
    "text": "everything and it should just work so i believe all the demos representation is",
    "start": "196349",
    "end": "203910"
  },
  {
    "text": "supposed to be entertaining so let's start with the demo first and then we'll talk about it and also i don't believe",
    "start": "203910",
    "end": "209549"
  },
  {
    "text": "in the demo gods that's why we will be using video",
    "start": "209549",
    "end": "213620"
  },
  {
    "text": "let's open our application and see some beautiful pictures is VP if you're not familiar it was created by matthan",
    "start": "216240",
    "end": "224880"
  },
  {
    "text": "bailey and i heard the rumors there the second part of coming we can see the pictures we can see the slides",
    "start": "224880",
    "end": "230310"
  },
  {
    "text": "everything fine everything works what does the developers we keep changing our application and in the following update",
    "start": "230310",
    "end": "236430"
  },
  {
    "text": "we're going to introduce really cool new feature code random slowdowns on the Fitch image from",
    "start": "236430",
    "end": "242610"
  },
  {
    "text": "the storm which means every time when you're reading it might be super slow or",
    "start": "242610",
    "end": "247890"
  },
  {
    "text": "super fast so we upgrading our application via helm because helm is amazing if you're not using it do it upgrade done let's go and",
    "start": "247890",
    "end": "258269"
  },
  {
    "text": "check how our application works we hit",
    "start": "258270",
    "end": "263400"
  },
  {
    "text": "refresh and nothing there's any other normal user you hit refresh again then",
    "start": "263400",
    "end": "270570"
  },
  {
    "text": "you're getting scrolling you waving your mouse you're getting frustrated nothing is loading loading super slow so",
    "start": "270570",
    "end": "277500"
  },
  {
    "text": "I would say them for the really simple picture gallery it shouldn't take more than a few seconds to actually load",
    "start": "277500",
    "end": "283260"
  },
  {
    "text": "everything in our case it takes longer than that some test developer you have to go and actually the bucket is them",
    "start": "283260",
    "end": "291300"
  },
  {
    "text": "creator of this beautiful up trust me you will not find anything there locks all metrics and just some random",
    "start": "291300",
    "end": "296490"
  },
  {
    "text": "timeouts but good for us we actually have tracing an hour up so let's go to",
    "start": "296490",
    "end": "301770"
  },
  {
    "text": "the tracing UI and see what it does this is Jaeger and as you can see it has",
    "start": "301770",
    "end": "308580"
  },
  {
    "text": "information about our two services metadata and store awesome it shows traces what they are I will",
    "start": "308580",
    "end": "315210"
  },
  {
    "text": "describe a little bit later but trust me they are good you can see some durations some of the trace is slow some of them",
    "start": "315210",
    "end": "321450"
  },
  {
    "text": "faster obviously we want to find we sham slowness and where it is to do that",
    "start": "321450",
    "end": "326610"
  },
  {
    "text": "let's find all the traces slower than 10 seconds is one of them as you can see this is",
    "start": "326610",
    "end": "332560"
  },
  {
    "text": "the get request to metadata and it takes 14 seconds which is super long here's",
    "start": "332560",
    "end": "338590"
  },
  {
    "text": "our trace as you can see trace has pretty much chain of actions through our application",
    "start": "338590",
    "end": "345400"
  },
  {
    "text": "the first one we get in income and get requests into the store to get image with some UID for our image which",
    "start": "345400",
    "end": "352420"
  },
  {
    "text": "triggers internal functions are actually fetch image which also slow the next will be find image which is relatively",
    "start": "352420",
    "end": "359860"
  },
  {
    "text": "fast at last it only like tens of seconds which means our database behaves",
    "start": "359860",
    "end": "366190"
  },
  {
    "text": "properly and it works fine the next request you can see outgoing and",
    "start": "366190",
    "end": "371410"
  },
  {
    "text": "incoming requests into the storm from the metadata and the final one is actually read data from the local store",
    "start": "371410",
    "end": "378850"
  },
  {
    "text": "which is still 30 seconds probably we should go to the store metadata and see what's happening over there",
    "start": "378850",
    "end": "385080"
  },
  {
    "text": "another great feature about tracing and Jager in particular that it didn't give",
    "start": "385080",
    "end": "391600"
  },
  {
    "text": "you diagram of dependencies for micro services as you can see here's our two",
    "start": "391600",
    "end": "396820"
  },
  {
    "text": "microservices metadata in store and that's how would they work metadata",
    "start": "396820",
    "end": "401890"
  },
  {
    "text": "pretty much calling the store for the images so it was our up even that it's",
    "start": "401890",
    "end": "408880"
  },
  {
    "text": "pretty simple only to microservices but without tracing to find that slowness you",
    "start": "408880",
    "end": "414580"
  },
  {
    "text": "probably would spend a few hours because they don't need to compare logs from the different microservices find the same",
    "start": "414580",
    "end": "421750"
  },
  {
    "text": "time stamps and if for example your microservices written in two different languages it would be even more",
    "start": "421750",
    "end": "427210"
  },
  {
    "text": "complicated metrics bonus if you using only metrics also will not help it will",
    "start": "427210",
    "end": "433540"
  },
  {
    "text": "show you a some requests hitting a threshold on your timeout but not much",
    "start": "433540",
    "end": "439810"
  },
  {
    "text": "info with the tracing it was relatively quickly because we just went through the",
    "start": "439810",
    "end": "445090"
  },
  {
    "start": "440000",
    "end": "538000"
  },
  {
    "text": "whole chain of actions and we see what's happening so what is distributing tracing on the high level you'll be",
    "start": "445090",
    "end": "452980"
  },
  {
    "text": "surprised but it's also application it's sometimes one application sometimes two",
    "start": "452980",
    "end": "458470"
  },
  {
    "text": "applications working together what they do they automatically aggregate traces",
    "start": "458470",
    "end": "463480"
  },
  {
    "text": "we yup sense to them to collect them and doing some correlations also they highlights the execution part",
    "start": "463480",
    "end": "470259"
  },
  {
    "text": "of the request they helps to pinpoint failures and where the slowness are",
    "start": "470259",
    "end": "475360"
  },
  {
    "text": "curved and this is not a replacement for login or metrics but it's super complimentary to them so what you",
    "start": "475360",
    "end": "483879"
  },
  {
    "text": "already heard the few times I mentioned trace span what they are relatively",
    "start": "483879",
    "end": "489690"
  },
  {
    "text": "simple think about the trace as the chain of actions when you do something",
    "start": "489690",
    "end": "496690"
  },
  {
    "text": "to the application for example you fetch an image it start the chain the first",
    "start": "496690",
    "end": "502240"
  },
  {
    "text": "one is you remember it was the code to the metadata then the code to the database then the code further further",
    "start": "502240",
    "end": "507460"
  },
  {
    "text": "further so pitch imagine is like all the actions which happening through your application for particular action what",
    "start": "507460",
    "end": "513969"
  },
  {
    "text": "the spends spends actually the small steps or the functions so as you can see on the diagram application sends traces",
    "start": "513969",
    "end": "521620"
  },
  {
    "text": "with multiple spans to the jäger here is a developer that was me",
    "start": "521620",
    "end": "526810"
  },
  {
    "text": "sometimes it's like 1:00 a.m. trying to the sent way it's slow why it's not working but most of the time I just go",
    "start": "526810",
    "end": "533020"
  },
  {
    "text": "to the tracing do I look at the things and fix them what we using and why we're",
    "start": "533020",
    "end": "540820"
  },
  {
    "start": "538000",
    "end": "616000"
  },
  {
    "text": "using it since we're developing cloud native application we decided to go to",
    "start": "540820",
    "end": "546820"
  },
  {
    "text": "the scene CF and find what we can use from them to tracing into our",
    "start": "546820",
    "end": "551950"
  },
  {
    "text": "application we like two things think number one open tracing which is",
    "start": "551950",
    "end": "557980"
  },
  {
    "text": "actually standard with them is the case and they're pretty much every popular",
    "start": "557980",
    "end": "563440"
  },
  {
    "text": "language like go Java C sharp and sorry those is the key is helping you to",
    "start": "563440",
    "end": "569640"
  },
  {
    "text": "instrument how you send traces into the distributed tracing collector and the",
    "start": "569640",
    "end": "576760"
  },
  {
    "text": "second one is the Jager which is the visualization application which can read",
    "start": "576760",
    "end": "583290"
  },
  {
    "text": "data from the databases allows you to do searches can do comparison as you can",
    "start": "583290",
    "end": "589360"
  },
  {
    "text": "see helps you to create the diagram but there's not only open tracing in the",
    "start": "589360",
    "end": "595089"
  },
  {
    "text": "Jager in this world this are the offers if you don't like these two for example this Zipkin there's",
    "start": "595089",
    "end": "600610"
  },
  {
    "text": "Google open sensors some cloud providers also offering you some facing",
    "start": "600610",
    "end": "605770"
  },
  {
    "text": "technologies like for example AWS x-ray at this point I want to hand our",
    "start": "605770",
    "end": "611020"
  },
  {
    "text": "presentation to the Ashley the person who actually added support into our application all right thanks Ileana so",
    "start": "611020",
    "end": "619750"
  },
  {
    "start": "616000",
    "end": "693000"
  },
  {
    "text": "as we just saw in our demo we got a nice overview of open tracing and Jager and kind of how they work but for now let's",
    "start": "619750",
    "end": "626770"
  },
  {
    "text": "dig into more details onto the open tracing go SDK itself as you noticed in",
    "start": "626770",
    "end": "632140"
  },
  {
    "text": "Ilias demo each trace is made up of several different spans which are nested inside of each other to show the",
    "start": "632140",
    "end": "638680"
  },
  {
    "text": "execution path of the program open tracing accomplishes this nesting by",
    "start": "638680",
    "end": "644230"
  },
  {
    "text": "leveraging goes context object which it expects to be propagated throughout the entire program what this means for you",
    "start": "644230",
    "end": "651790"
  },
  {
    "text": "as a developer is that if your program doesn't currently propagate goes context object you'll have to do a little bit of",
    "start": "651790",
    "end": "658600"
  },
  {
    "text": "extra work if you want nicely nested spans like we've been showing you finally open tracing allows developers",
    "start": "658600",
    "end": "666730"
  },
  {
    "text": "to add extra information in the form of what they call tags this information can",
    "start": "666730",
    "end": "672460"
  },
  {
    "text": "include things like the status code from an HTTP request or other stuff like",
    "start": "672460",
    "end": "678070"
  },
  {
    "text": "request IDs this information helps give developers a good idea of what the state",
    "start": "678070",
    "end": "684040"
  },
  {
    "text": "of the system was when the span was collected as well as helping them associate specific spans with the output",
    "start": "684040",
    "end": "690430"
  },
  {
    "text": "of other tools like logs so with that information in mind let's move on to",
    "start": "690430",
    "end": "697660"
  },
  {
    "start": "693000",
    "end": "929000"
  },
  {
    "text": "actually adding tracing to our demo application we'll begin by looking at our architecture diagram and deciding",
    "start": "697660",
    "end": "704470"
  },
  {
    "text": "that we want to add tracing for incoming requests to our image catalog and our image store services if we open up our",
    "start": "704470",
    "end": "712630"
  },
  {
    "text": "image catalog service we can see that it's actually made up of three main parts the middleware which is goes way",
    "start": "712630",
    "end": "719470"
  },
  {
    "text": "of adding custom features to the incoming HTTP stack application code",
    "start": "719470",
    "end": "725350"
  },
  {
    "text": "which the developer actually writes and does interesting things and httpclient that helps push out requests",
    "start": "725350",
    "end": "733720"
  },
  {
    "text": "to other micro services in the application or perhaps outside services",
    "start": "733720",
    "end": "739360"
  },
  {
    "text": "like databases or cloud providers so given that we want to add tracing for",
    "start": "739360",
    "end": "744700"
  },
  {
    "text": "incoming requests we decide that we should look at the middleware area here for this we've created our own little",
    "start": "744700",
    "end": "752440"
  },
  {
    "text": "custom middleware which leverages open tracings library calls to begin and end a span automatically for us now I said",
    "start": "752440",
    "end": "761230"
  },
  {
    "text": "that open tracing actually uses contexts to store information about spans but on",
    "start": "761230",
    "end": "766420"
  },
  {
    "text": "this slide you see no context object whatsoever under the hood open tracing",
    "start": "766420",
    "end": "771970"
  },
  {
    "text": "is actually extracting a context from the incoming request starting a span with it",
    "start": "771970",
    "end": "777190"
  },
  {
    "text": "adding the modified context back into the HTTP request and then passing it",
    "start": "777190",
    "end": "783220"
  },
  {
    "text": "down to the next middleware in the stack so when we compile and deploy this",
    "start": "783220",
    "end": "790270"
  },
  {
    "text": "modified application to our cluster we can see that we only get one lonely",
    "start": "790270",
    "end": "795340"
  },
  {
    "text": "little trace which is not really what we were hoping for from our architecture",
    "start": "795340",
    "end": "801130"
  },
  {
    "text": "diagram we can clearly see that our image catalog calls our image store service but the span that we just",
    "start": "801130",
    "end": "807670"
  },
  {
    "text": "collected does not reflect this in order to try and fix that situation we decide",
    "start": "807670",
    "end": "813610"
  },
  {
    "text": "that perhaps we should add tracing to the outgoing requests from our image catalog service once again if we look at",
    "start": "813610",
    "end": "821980"
  },
  {
    "text": "the zoomed in view of our image catalog it seems that perhaps instrumenting the HTTP client for outgoing requests would",
    "start": "821980",
    "end": "830230"
  },
  {
    "text": "be the best place to start for adding tracing we decided that creating a",
    "start": "830230",
    "end": "836140"
  },
  {
    "text": "custom HTTP transport which is part of the go stack for adding custom",
    "start": "836140",
    "end": "841240"
  },
  {
    "text": "functionality to outgoing requests would probably be the best solution here you",
    "start": "841240",
    "end": "847300"
  },
  {
    "text": "can see the actual code that we've used we first pull the context out of the",
    "start": "847300",
    "end": "852550"
  },
  {
    "text": "outgoing request and have open tracing begin a span using it next we place the",
    "start": "852550",
    "end": "858700"
  },
  {
    "text": "modified context back end to the request and have open tracing inject",
    "start": "858700",
    "end": "863970"
  },
  {
    "text": "special headers that it uses into the actual request to be sent out once we",
    "start": "863970",
    "end": "869610"
  },
  {
    "text": "send the request out and get a response back we extract the HTTP status code",
    "start": "869610",
    "end": "874649"
  },
  {
    "text": "from it and place it in a tag so that developers can look at it in iaeger later as a reminder the first time we",
    "start": "874649",
    "end": "882959"
  },
  {
    "text": "added tracing to our application we only got this one span however when we",
    "start": "882959",
    "end": "888029"
  },
  {
    "text": "compile and deploy our newly modified code we get three lovely spans clearly",
    "start": "888029",
    "end": "893879"
  },
  {
    "text": "showing the connection between our image catalog service and the store service that it communicates with however we",
    "start": "893879",
    "end": "901949"
  },
  {
    "text": "know this is still not the complete story because both of our services talk to some sort of store the image catalog",
    "start": "901949",
    "end": "908430"
  },
  {
    "text": "talks to a database and the image store talks to the local hard drive to retrieve image data so we feel perhaps",
    "start": "908430",
    "end": "916019"
  },
  {
    "text": "we should instrument these calls as well and we can see that we actually have two instrument developer code in this case",
    "start": "916019",
    "end": "923459"
  },
  {
    "text": "instead of some of the more generic code that NGO uses to handle HTTP requests",
    "start": "923459",
    "end": "929089"
  },
  {
    "start": "929000",
    "end": "1160000"
  },
  {
    "text": "but before we get to the code perhaps we should take a step back and ask ourselves since we're communicating with",
    "start": "929089",
    "end": "936120"
  },
  {
    "text": "external services can we always just use the trick from our previous part of adding tracing where we create a custom",
    "start": "936120",
    "end": "943259"
  },
  {
    "text": "HTTP client but it turns out that not really it really depends on which API",
    "start": "943259",
    "end": "950430"
  },
  {
    "text": "you use to communicate with other services because go has a wide variety",
    "start": "950430",
    "end": "955500"
  },
  {
    "text": "of API sinews for example we found that the kate's",
    "start": "955500",
    "end": "960600"
  },
  {
    "text": "api doesn't take context objects which means that even if you do try and use",
    "start": "960600",
    "end": "965819"
  },
  {
    "text": "the same trick from part two your application will not create nicely",
    "start": "965819",
    "end": "971250"
  },
  {
    "text": "nested spans like we've been showing furthermore DB with the API the",
    "start": "971250",
    "end": "977879"
  },
  {
    "text": "way that we're using doesn't actually take gos context objects so there's no",
    "start": "977879",
    "end": "983819"
  },
  {
    "text": "way you could use our little trick from the last part however all hope is not lost for example",
    "start": "983819",
    "end": "991020"
  },
  {
    "text": "the official AWS and GCP go api's take both custom HTTP clients and gos context",
    "start": "991020",
    "end": "999900"
  },
  {
    "text": "objects so indeed using our trick from the last part will allow you to add tracing to those services well add",
    "start": "999900",
    "end": "1008690"
  },
  {
    "text": "tracing to the calls to those services you won't get insights about the internals of what happens in those",
    "start": "1008690",
    "end": "1013940"
  },
  {
    "text": "services so with that let's now move on to the code that we added to trace calls",
    "start": "1013940",
    "end": "1019880"
  },
  {
    "text": "to our MongoDB database we decided that the best way to add tracing is to add",
    "start": "1019880",
    "end": "1025160"
  },
  {
    "text": "the three highlighted lines on this slide the first to begin a span from the",
    "start": "1025160",
    "end": "1030439"
  },
  {
    "text": "context that is passed in and then finished that span when their function returns the final line just or the final",
    "start": "1030440",
    "end": "1037640"
  },
  {
    "text": "line in the set just adds extra information to the span so that the developer has a better idea of what was",
    "start": "1037640",
    "end": "1043670"
  },
  {
    "text": "happening once we compile and deploy this to our cluster we get a lovely view of all of",
    "start": "1043670",
    "end": "1051100"
  },
  {
    "text": "the different spans that correspond to the actions occurring in our application",
    "start": "1051100",
    "end": "1057180"
  },
  {
    "text": "the first set the first three correspond to actions taken by the image catalog",
    "start": "1057180",
    "end": "1063550"
  },
  {
    "text": "service and the final two correspond to actions taken by our store service so I",
    "start": "1063550",
    "end": "1070960"
  },
  {
    "text": "know that was kind of a lot of information in a short amount of time so let's do a brief recap of just adding",
    "start": "1070960",
    "end": "1076630"
  },
  {
    "text": "tracing to our system we saw three different ways to add tracing and when",
    "start": "1076630",
    "end": "1081760"
  },
  {
    "text": "those ways might be good to use for incoming requests we decided that using open tracing middleware functionality is",
    "start": "1081760",
    "end": "1089230"
  },
  {
    "text": "probably the best choice on the other hand if you have outgoing HTTP requests",
    "start": "1089230",
    "end": "1095200"
  },
  {
    "text": "you should think about creating a custom HTTP transport which begins and ends",
    "start": "1095200",
    "end": "1100480"
  },
  {
    "text": "spans for you and finally if your instrumenting other parts of the",
    "start": "1100480",
    "end": "1106030"
  },
  {
    "text": "application you may want to check out the api's to see if you can use other tricks from the previous two for",
    "start": "1106030",
    "end": "1113560"
  },
  {
    "text": "incoming and outgoing requests or you may have to manually add calls to begin",
    "start": "1113560",
    "end": "1118720"
  },
  {
    "text": "and end spans okay so just a brief recap of everything",
    "start": "1118720",
    "end": "1123890"
  },
  {
    "text": "that we covered so far today we talked about using open tracings go SDK to add",
    "start": "1123890",
    "end": "1130720"
  },
  {
    "text": "instrumentation to micro services we also saw how to instrument external",
    "start": "1130720",
    "end": "1136760"
  },
  {
    "text": "services with open tracing and these external services include databases the",
    "start": "1136760",
    "end": "1142610"
  },
  {
    "text": "Kate's API and some cloud provider calls earlier in the talk Ilya talked about",
    "start": "1142610",
    "end": "1148280"
  },
  {
    "text": "installing Jaeger with a helmet art and he showed us a lovely demo where he used Jaeger to analyze and dig into some of",
    "start": "1148280",
    "end": "1155480"
  },
  {
    "text": "the traces and now I'm gonna hand it back to Ilya to finish off the talk so",
    "start": "1155480",
    "end": "1161870"
  },
  {
    "start": "1160000",
    "end": "1590000"
  },
  {
    "text": "we just saw that racing actually helps debugging and understand where might be error as long as I could but I believe",
    "start": "1161870",
    "end": "1168740"
  },
  {
    "text": "some of you probably still not convinced that we should use tracing so let's try to talk to and read your minds so the",
    "start": "1168740",
    "end": "1176480"
  },
  {
    "text": "first thing my login is amazing I don't need tracing I can search through the logs compare logs time stamps just",
    "start": "1176480",
    "end": "1182870"
  },
  {
    "text": "amazing probably but we thought the same and we learned the hard way that",
    "start": "1182870",
    "end": "1188450"
  },
  {
    "text": "probably it's better to use tracing if it's possible if not and you relying",
    "start": "1188450",
    "end": "1194060"
  },
  {
    "text": "only on the logs and metrics it's up to you but trust me it's a little bit hard because logs giving you a point in time",
    "start": "1194060",
    "end": "1201050"
  },
  {
    "text": "for your application when the trace is actually giving you small tiny story line how what was happening to your",
    "start": "1201050",
    "end": "1207710"
  },
  {
    "text": "application or what was happening to the some actions or the requests and your application so even if you only rely on",
    "start": "1207710",
    "end": "1215300"
  },
  {
    "text": "login I would recommend at least your try tracing I'm getting SMS for majors",
    "start": "1215300",
    "end": "1220670"
  },
  {
    "text": "first of all I hope if you're using kubernetes you're not using majors and you're using something something more",
    "start": "1220670",
    "end": "1227030"
  },
  {
    "text": "more than as the monitoring technologies but even if you're relying only on the metrics and you don't want to add",
    "start": "1227030",
    "end": "1232760"
  },
  {
    "text": "tracing into your application and you think you're good aiding tracing will give you ability to",
    "start": "1232760",
    "end": "1239720"
  },
  {
    "text": "do more request sculpt metrics like for example you will get less amount of",
    "start": "1239720",
    "end": "1245090"
  },
  {
    "text": "false alarms because you can I mean you can strip your notification a little bit",
    "start": "1245090",
    "end": "1250940"
  },
  {
    "text": "request specific for example not everything like you can skip health checks for example it will be easy to do",
    "start": "1250940",
    "end": "1257309"
  },
  {
    "text": "and you can really focus and trigger your alarms on really business important",
    "start": "1257309",
    "end": "1265619"
  },
  {
    "text": "things and requests but my service mesh has it also true statement some sort of",
    "start": "1265619",
    "end": "1272429"
  },
  {
    "text": "smashes like SEO offers you tracing out of the box but it's not deep enough in",
    "start": "1272429",
    "end": "1278789"
  },
  {
    "text": "my point it might work but if you want to go deep you need to have additional",
    "start": "1278789",
    "end": "1283919"
  },
  {
    "text": "instrumentation what I mean by that is to actually only tracking the requests which come in between your services or",
    "start": "1283919",
    "end": "1291690"
  },
  {
    "text": "in or out from your service mesh if you using some k-value",
    "start": "1291690",
    "end": "1297389"
  },
  {
    "text": "database locally to store something you will not see anything in those traces and if you're using for example slow",
    "start": "1297389",
    "end": "1304470"
  },
  {
    "text": "hard drive for some reason you might see some performance issues and you won't it will not be able to debug them through",
    "start": "1304470",
    "end": "1311070"
  },
  {
    "text": "the tracing without some additional instrumentation for your application so yes service measures does it and if",
    "start": "1311070",
    "end": "1318809"
  },
  {
    "text": "you okay to using it please do it my cloud provider do it for me for free also true some cloud providers offering",
    "start": "1318809",
    "end": "1327269"
  },
  {
    "text": "traces for example Google cloud stack driver trees and AW x-ray if you're",
    "start": "1327269",
    "end": "1333869"
  },
  {
    "text": "using cloud provider integration with these solutions almost seamless and super easy but don't forget if you look",
    "start": "1333869",
    "end": "1342210"
  },
  {
    "text": "in the whole kubernetes ecosystem right now everyone most of the companies trying to use not one cloud multi clouds",
    "start": "1342210",
    "end": "1349499"
  },
  {
    "text": "also don't forget about on-prem or hybrid clouds and if you married to one",
    "start": "1349499",
    "end": "1355409"
  },
  {
    "text": "cloud provider you probably will not be satisfied which we require you to use some other solutions but if using only",
    "start": "1355409",
    "end": "1362309"
  },
  {
    "text": "one cloud provider and you can use whatever they provide that's perfect",
    "start": "1362309",
    "end": "1367399"
  },
  {
    "text": "final thoughts we're so tracing how it works what it does how it helps but",
    "start": "1367399",
    "end": "1374609"
  },
  {
    "text": "don't forget nothing comes for free in this life if you adding something it first requires time also tracing uses a",
    "start": "1374609",
    "end": "1381990"
  },
  {
    "text": "little bit more narrow not much but some also because it's some additional CPU cycles it's also if you",
    "start": "1381990",
    "end": "1388200"
  },
  {
    "text": "really short on the CPU it might affect performance but slightly so be cautious and think about time and efforts and if",
    "start": "1388200",
    "end": "1396509"
  },
  {
    "text": "you actually need it or not but I highly encourage you to try tracing it's it's really interesting",
    "start": "1396509",
    "end": "1402240"
  },
  {
    "text": "thing at this point we're ready for questions",
    "start": "1402240",
    "end": "1406700"
  },
  {
    "text": "[Music] so sometimes I do the pollinating so I",
    "start": "1411890",
    "end": "1420780"
  },
  {
    "text": "send the south thousands of has that I",
    "start": "1420780",
    "end": "1427620"
  },
  {
    "text": "know I want to find out the biggest ally repress them which is acceptable okay",
    "start": "1427620",
    "end": "1434550"
  },
  {
    "text": "right now I want to find one it's best because the best but a blind eye not to",
    "start": "1434550",
    "end": "1440550"
  },
  {
    "text": "find that because it's a list of thousand over there so my hope is the hawk I get it okay the question was I",
    "start": "1440550",
    "end": "1450480"
  },
  {
    "text": "can repeat the question was what I supposed to do if I'm sending thousands of requests to the jäger how I'm doing",
    "start": "1450480",
    "end": "1456960"
  },
  {
    "text": "search let me show you the UI and I can",
    "start": "1456960",
    "end": "1462930"
  },
  {
    "text": "answer that one rile them up will help us",
    "start": "1462930",
    "end": "1468560"
  },
  {
    "text": "give me one second the pretty much in giggle you can search not only the",
    "start": "1469820",
    "end": "1476160"
  },
  {
    "text": "duration on the request you can search on them c'mon demo gods be with me here we go as",
    "start": "1476160",
    "end": "1491220"
  },
  {
    "text": "you can see you can search for the text something like HTTP exit code so for",
    "start": "1491220",
    "end": "1496380"
  },
  {
    "text": "example if you know that you're trying to find traces which failed you probably not returning something like 200 called",
    "start": "1496380",
    "end": "1502020"
  },
  {
    "text": "you returning 500 which means if you're looking for only those specific traces you will see your faders also if you've",
    "start": "1502020",
    "end": "1508920"
  },
  {
    "text": "structured traces properly you have many tags on them and you can search by the",
    "start": "1508920",
    "end": "1514020"
  },
  {
    "text": "text I mean actually most of them are",
    "start": "1514020",
    "end": "1519090"
  },
  {
    "text": "200 but I want to find a specific oh yeah you can use on the scene the text",
    "start": "1519090",
    "end": "1524580"
  },
  {
    "text": "you can use HTTP dot issue yeah you are can I use that your URL or professional",
    "start": "1524580",
    "end": "1532590"
  },
  {
    "text": "URL I can I I can put a time step or in",
    "start": "1532590",
    "end": "1537660"
  },
  {
    "text": "my in my in my URL and yes yes yes yes",
    "start": "1537660",
    "end": "1543450"
  },
  {
    "text": "yes you could gig it allows you to search by Ashley pointed yes by URL okay",
    "start": "1543450",
    "end": "1549030"
  },
  {
    "text": "I put is such a time step but to the attackers connoisseurship yes yeah",
    "start": "1549030",
    "end": "1555660"
  },
  {
    "text": "second it still that one than that",
    "start": "1555660",
    "end": "1561450"
  },
  {
    "text": "so one two three four things straight up you said it never comes my fries Kev's a",
    "start": "1561450",
    "end": "1569860"
  },
  {
    "text": "bit more word about benchmark result like how much overhead as to it and also does this a poor conditional tracing",
    "start": "1569860",
    "end": "1576070"
  },
  {
    "text": "because something might end-to-end request timeout like ten percent America time well then I like toggle the tracing",
    "start": "1576070",
    "end": "1581290"
  },
  {
    "text": "all and something like that don't take this one uh so we didn't do",
    "start": "1581290",
    "end": "1592600"
  },
  {
    "start": "1590000",
    "end": "1650000"
  },
  {
    "text": "too many benchmarks because we were just trying to get tracing running on our system for our testing purposes so right",
    "start": "1592600",
    "end": "1601090"
  },
  {
    "text": "now it's kind of in our test cluster but it's not deployed with any of the services that we give to customers as",
    "start": "1601090",
    "end": "1606130"
  },
  {
    "text": "far as conditional tracing there are ways that you can write your own version",
    "start": "1606130",
    "end": "1613420"
  },
  {
    "text": "of how to turn on tracing so we've been tracing basically everything that goes",
    "start": "1613420",
    "end": "1619090"
  },
  {
    "text": "through our system you can have a probabilistic tracer so it will only trace a percentage of the requests that",
    "start": "1619090",
    "end": "1625720"
  },
  {
    "text": "pass through the system there is also a way to create your own function that",
    "start": "1625720",
    "end": "1631540"
  },
  {
    "text": "determines which trace or which requests should be traced so if you were to",
    "start": "1631540",
    "end": "1637150"
  },
  {
    "text": "implement one of those functions you could perhaps monitor your system and say oh I see things are failing please",
    "start": "1637150",
    "end": "1643540"
  },
  {
    "text": "turn on tracing for me",
    "start": "1643540",
    "end": "1646920"
  },
  {
    "start": "1650000",
    "end": "1710000"
  },
  {
    "text": "I have a question that say I have a drawing applications that is writing in",
    "start": "1655630",
    "end": "1661090"
  },
  {
    "text": "different programming languages services writing go and so speeds readiness plus",
    "start": "1661090",
    "end": "1666960"
  },
  {
    "text": "we still use of interest here or best practice to handle this kind of",
    "start": "1666960",
    "end": "1672610"
  },
  {
    "text": "situation you know aspects it depends how you're using it for example open SDK",
    "start": "1672610",
    "end": "1679690"
  },
  {
    "text": "was sorry open tracing is decayed they do have libraries for goal C++ Java C",
    "start": "1679690",
    "end": "1685929"
  },
  {
    "text": "sharp salt so the JavaScript whatever you mix enough oh yeah yeah at the end",
    "start": "1685929",
    "end": "1691600"
  },
  {
    "text": "you getting everything into the same system into the Jaeger and UI will be the same but traces will look the same",
    "start": "1691600",
    "end": "1697659"
  },
  {
    "text": "and yes you can send them from the different languages okay sure that's",
    "start": "1697659",
    "end": "1703000"
  },
  {
    "text": "gentleman over there so here we show the",
    "start": "1703000",
    "end": "1709000"
  },
  {
    "text": "example how to chasing the HTTP so I think in a is it possible that we can",
    "start": "1709000",
    "end": "1716020"
  },
  {
    "start": "1710000",
    "end": "1890000"
  },
  {
    "text": "chase message into the message message queue such as repiy and kill the recent",
    "start": "1716020",
    "end": "1724090"
  },
  {
    "text": "message in our system if you come into the messaging Q&A arm and then go out",
    "start": "1724090",
    "end": "1731169"
  },
  {
    "text": "the messaging queue is t2 is it possible then another incoming message I think",
    "start": "1731169",
    "end": "1736690"
  },
  {
    "text": "you are now outgoing so you want to trace the amount of time that it's in the message messaging queue is that what",
    "start": "1736690",
    "end": "1742720"
  },
  {
    "text": "you're after yeah yeah we have a message broker so I would like to chase the messaging and",
    "start": "1742720",
    "end": "1751020"
  },
  {
    "text": "kinetic Asians which subscribe to the to them message broker or produce the",
    "start": "1751020",
    "end": "1757030"
  },
  {
    "text": "messages as due to the broccoli yes so if you keep some sort of context object",
    "start": "1757030",
    "end": "1762220"
  },
  {
    "text": "around with the data that is actually inside of the queue you should be able",
    "start": "1762220",
    "end": "1767470"
  },
  {
    "text": "to begin a trace when you place the object in the message queue and then",
    "start": "1767470",
    "end": "1772600"
  },
  {
    "text": "perhaps once you pull it out of the message queue you can end the trace so it's it's more of figuring out a way to",
    "start": "1772600",
    "end": "1779320"
  },
  {
    "text": "do it nice and easily with the existing and finding the right places to begin",
    "start": "1779320",
    "end": "1785080"
  },
  {
    "text": "and end your traces because really what you need from open tracing to actually",
    "start": "1785080",
    "end": "1792730"
  },
  {
    "text": "begin and end a span or begin an end a trace is this top line which starts the",
    "start": "1792730",
    "end": "1799750"
  },
  {
    "text": "trace and this second line which finishes the trace so as long as you have those two calls somewhere in your",
    "start": "1799750",
    "end": "1806620"
  },
  {
    "text": "code you will collect a trace the key is finding the right places to put those two lines does that kind of make sense",
    "start": "1806620",
    "end": "1813930"
  },
  {
    "text": "or means that we need I need to start chasing in the producer and then",
    "start": "1813930",
    "end": "1821190"
  },
  {
    "text": "something I've finished the chasing in the consumer yes that would be correct okay sorry a",
    "start": "1821190",
    "end": "1828850"
  },
  {
    "text": "little bit addition so pretty much if you can add trace ID from the content into your consumer and producer and",
    "start": "1828850",
    "end": "1835300"
  },
  {
    "text": "extension between them some additional tag for the message it will automatically be populated because the",
    "start": "1835300",
    "end": "1842050"
  },
  {
    "text": "distributing tracing works on it has trace has ID and the span has trace IDs and then it's automatically can collects",
    "start": "1842050",
    "end": "1848590"
  },
  {
    "text": "everything and combines them together and that's gentleman over there I believe",
    "start": "1848590",
    "end": "1855150"
  },
  {
    "text": "well what's your experience on a great increases with logins without Japanese",
    "start": "1855370",
    "end": "1860450"
  },
  {
    "text": "resistance so what man way how what's your experience our greeting logins and",
    "start": "1860450",
    "end": "1866270"
  },
  {
    "text": "Tracy's without a jamming through all the systems you connecting the traces",
    "start": "1866270",
    "end": "1871730"
  },
  {
    "text": "and logins that's yours so we mostly I believe use traces kind",
    "start": "1871730",
    "end": "1880429"
  },
  {
    "text": "of as an overview of the system so",
    "start": "1880429",
    "end": "1888860"
  },
  {
    "text": "traces traces kind of give you parts of",
    "start": "1888860",
    "end": "1893990"
  },
  {
    "text": "the information that you can use to look up specific log messages perhaps say you",
    "start": "1893990",
    "end": "1899000"
  },
  {
    "text": "have fluent D or some other logging service which you can insert tags into the logs as well so you could use the",
    "start": "1899000",
    "end": "1906200"
  },
  {
    "text": "tracing system to find the request that is causing trouble in the system like say your failed request or your request",
    "start": "1906200",
    "end": "1912350"
  },
  {
    "text": "that timed out and you can look at the tags inside of that request and based on",
    "start": "1912350",
    "end": "1920480"
  },
  {
    "text": "the tags if you have like a request ID or something that you've inserted in there you can use that tag to kind of",
    "start": "1920480",
    "end": "1930650"
  },
  {
    "text": "look up specific log messages so it's you use them in combination but one or",
    "start": "1930650",
    "end": "1936590"
  },
  {
    "text": "the other is not necessarily all you need to solve your problem also I can I",
    "start": "1936590",
    "end": "1942230"
  },
  {
    "text": "can add a little bit more if you able to use Google cloud provider they not only",
    "start": "1942230",
    "end": "1947600"
  },
  {
    "text": "troduce tracing they actually introduce really cool features like walks to",
    "start": "1947600",
    "end": "1952970"
  },
  {
    "text": "traces to source code if you whole source code on them and they do it automatically it's super cool but",
    "start": "1952970",
    "end": "1958900"
  },
  {
    "text": "unfortunately only so it's in Google Cloud I don't know if it works for you or not",
    "start": "1958900",
    "end": "1965049"
  },
  {
    "text": "my my feeling is yeah Chase is important and love is important but the things if",
    "start": "1972450",
    "end": "1979720"
  },
  {
    "text": "I because of if I would like my systems",
    "start": "1979720",
    "end": "1984940"
  },
  {
    "text": "of Microsoft space then it wouldn't need a lot code extra code to pre enable its",
    "start": "1984940",
    "end": "1995049"
  },
  {
    "text": "function to make the work land it means lot of a workload all the course is leilani how to sleep and in",
    "start": "1995049",
    "end": "2003929"
  },
  {
    "text": "the future for example to make simple like combination walks with the message",
    "start": "2003929",
    "end": "2011429"
  },
  {
    "text": "bar so the waster log to correlate so let's make the code change as less as",
    "start": "2011429",
    "end": "2019380"
  },
  {
    "text": "possible sure do you pretty much one at",
    "start": "2019380",
    "end": "2024809"
  },
  {
    "text": "tracing as easy as possible what we will do I don't know your specific in the",
    "start": "2024809",
    "end": "2029940"
  },
  {
    "text": "application for our case it was a little bit easy we were using code generators and pretty much for us we just edit",
    "start": "2029940",
    "end": "2036600"
  },
  {
    "text": "tracing in one code in one template and that's it that was applied everywhere",
    "start": "2036600",
    "end": "2042350"
  },
  {
    "text": "once we generate the code that's it the other thing is you can look for high",
    "start": "2042350",
    "end": "2048000"
  },
  {
    "text": "impact areas for instance we traced incoming and outgoing requests which actually gives you fairly good insights",
    "start": "2048000",
    "end": "2053760"
  },
  {
    "text": "into some parts of the system and so based off of that you can figure out where you want to add tracing next so",
    "start": "2053760",
    "end": "2060060"
  },
  {
    "text": "the important thing to realize is that you don't have to trace the entire application to get data out of it you",
    "start": "2060060",
    "end": "2065280"
  },
  {
    "text": "can trace just specific parts of it figure out which parts you want to know more information about and then figure",
    "start": "2065280",
    "end": "2072419"
  },
  {
    "text": "out good ways to add tracing to just those little parts there's no magic peel",
    "start": "2072419",
    "end": "2081138"
  },
  {
    "text": "unfortunately it's all depends on your use case yes thank you hey you so much",
    "start": "2081139",
    "end": "2086398"
  },
  {
    "text": "everyone sorry but we are out of time already I'm sorry we can talk after if you want to thank you",
    "start": "2086399",
    "end": "2093350"
  }
]